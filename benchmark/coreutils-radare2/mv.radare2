;-- section..plt:
;-- .plt:
0x00002560      ff35ca962100   push qword [0x0021bc30]                 ; [12] -r-x section size 1824 named .plt
0x00002566      ff25cc962100   jmp qword [0x0021bc38]                  ; [0x21bc38:8]=0
0x0000256c      0f1f4000       nop dword [rax]
;-- imp.getenv:
0x00002570      ff25ca962100   jmp qword [reloc.getenv]                ; [0x21bc40:8]=0x2576 ; "v%"
0x00002576      6800000000     push 0
0x0000257b      e9e0ffffff     jmp sym..plt
;-- imp.utimensat:
0x00002580      ff25c2962100   jmp qword [reloc.utimensat]             ; [0x21bc48:8]=0x2586
0x00002586      6801000000     push 1                                  ; "ELF\x02\x01\x01"
0x0000258b      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x00002590      ff25ba962100   jmp qword [reloc.abort]                 ; [0x21bc50:8]=0x2596
0x00002596      6802000000     push 2                                  ; "LF\x02\x01\x01"
0x0000259b      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000025a0      ff25b2962100   jmp qword [reloc.__errno_location]      ; [0x21bc58:8]=0x25a6
0x000025a6      6803000000     push 3                                  ; "F\x02\x01\x01"
0x000025ab      e9b0ffffff     jmp sym..plt
;-- imp.unlink:
0x000025b0      ff25aa962100   jmp qword [reloc.unlink]                ; [0x21bc60:8]=0x25b6
0x000025b6      6804000000     push 4
0x000025bb      e9a0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000025c0      ff25a2962100   jmp qword [reloc.strncmp]               ; [0x21bc68:8]=0x25c6
0x000025c6      6805000000     push 5
0x000025cb      e990ffffff     jmp sym..plt
;-- imp._exit:
0x000025d0      ff259a962100   jmp qword [reloc._exit]                 ; [0x21bc70:8]=0x25d6
0x000025d6      6806000000     push 6
0x000025db      e980ffffff     jmp sym..plt
;-- imp.strcpy:
0x000025e0      ff2592962100   jmp qword [reloc.strcpy]                ; [0x21bc78:8]=0x25e6
0x000025e6      6807000000     push 7
0x000025eb      e970ffffff     jmp sym..plt
;-- imp.__fpending:
0x000025f0      ff258a962100   jmp qword [reloc.__fpending]            ; [0x21bc80:8]=0x25f6
0x000025f6      6808000000     push 8
0x000025fb      e960ffffff     jmp sym..plt
;-- imp.__read_chk:
0x00002600      ff2582962100   jmp qword [reloc.__read_chk]            ; [0x21bc88:8]=0x2606
0x00002606      6809000000     push 9
0x0000260b      e950ffffff     jmp sym..plt
;-- imp.mkdir:
0x00002610      ff257a962100   jmp qword [reloc.mkdir]                 ; [0x21bc90:8]=0x2616
0x00002616      680a000000     push 0xa
0x0000261b      e940ffffff     jmp sym..plt
;-- imp.unlinkat:
0x00002620      ff2572962100   jmp qword [reloc.unlinkat]              ; [0x21bc98:8]=0x2626 ; "&&"
0x00002626      680b000000     push 0xb
0x0000262b      e930ffffff     jmp sym..plt
;-- imp.qsort:
0x00002630      ff256a962100   jmp qword [reloc.qsort]                 ; [0x21bca0:8]=0x2636 ; "6&"
0x00002636      680c000000     push 0xc
0x0000263b      e920ffffff     jmp sym..plt
;-- imp.isatty:
0x00002640      ff2562962100   jmp qword [reloc.isatty]                ; [0x21bca8:8]=0x2646 ; "F&"
0x00002646      680d000000     push 0xd
0x0000264b      e910ffffff     jmp sym..plt
;-- imp.faccessat:
0x00002650      ff255a962100   jmp qword [reloc.faccessat]             ; [0x21bcb0:8]=0x2656 ; "V&"
0x00002656      680e000000     push 0xe
0x0000265b      e900ffffff     jmp sym..plt
;-- imp.readlink:
0x00002660      ff2552962100   jmp qword [reloc.readlink]              ; [0x21bcb8:8]=0x2666 ; "f&"
0x00002666      680f000000     push 0xf
0x0000266b      e9f0feffff     jmp sym..plt
;-- imp.fcntl:
0x00002670      ff254a962100   jmp qword [reloc.fcntl]                 ; [0x21bcc0:8]=0x2676 ; "v&"
0x00002676      6810000000     push 0x10
0x0000267b      e9e0feffff     jmp sym..plt
;-- imp.clock_gettime:
0x00002680      ff2542962100   jmp qword [reloc.clock_gettime]         ; [0x21bcc8:8]=0x2686
0x00002686      6811000000     push 0x11
0x0000268b      e9d0feffff     jmp sym..plt
;-- imp.write:
0x00002690      ff253a962100   jmp qword [reloc.write]                 ; [0x21bcd0:8]=0x2696
0x00002696      6812000000     push 0x12                               ; u">\x01"
0x0000269b      e9c0feffff     jmp sym..plt
;-- imp.getpid:
0x000026a0      ff2532962100   jmp qword [reloc.getpid]                ; [0x21bcd8:8]=0x26a6
0x000026a6      6813000000     push 0x13
0x000026ab      e9b0feffff     jmp sym..plt
;-- imp.fread_unlocked:
0x000026b0      ff252a962100   jmp qword [reloc.fread_unlocked]        ; [0x21bce0:8]=0x26b6
0x000026b6      6814000000     push 0x14
0x000026bb      e9a0feffff     jmp sym..plt
;-- imp.textdomain:
0x000026c0      ff2522962100   jmp qword [reloc.textdomain]            ; [0x21bce8:8]=0x26c6
0x000026c6      6815000000     push 0x15
0x000026cb      e990feffff     jmp sym..plt
;-- imp.pathconf:
0x000026d0      ff251a962100   jmp qword [reloc.pathconf]              ; [0x21bcf0:8]=0x26d6
0x000026d6      6816000000     push 0x16
0x000026db      e980feffff     jmp sym..plt
;-- imp.fclose:
0x000026e0      ff2512962100   jmp qword [reloc.fclose]                ; [0x21bcf8:8]=0x26e6
0x000026e6      6817000000     push 0x17
0x000026eb      e970feffff     jmp sym..plt
;-- imp.opendir:
0x000026f0      ff250a962100   jmp qword [reloc.opendir]               ; [0x21bd00:8]=0x26f6
0x000026f6      6818000000     push 0x18
0x000026fb      e960feffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00002700      ff2502962100   jmp qword [reloc.bindtextdomain]        ; [0x21bd08:8]=0x2706
0x00002706      6819000000     push 0x19                               ; "4"
0x0000270b      e950feffff     jmp sym..plt
;-- imp.stpcpy:
0x00002710      ff25fa952100   jmp qword [reloc.stpcpy]                ; [0x21bd10:8]=0x2716
0x00002716      681a000000     push 0x1a
0x0000271b      e940feffff     jmp sym..plt
;-- imp.rmdir:
0x00002720      ff25f2952100   jmp qword [reloc.rmdir]                 ; [0x21bd18:8]=0x2726 ; "&'"
0x00002726      681b000000     push 0x1b
0x0000272b      e930feffff     jmp sym..plt
;-- imp.dcgettext:
0x00002730      ff25ea952100   jmp qword [reloc.dcgettext]             ; [0x21bd20:8]=0x2736 ; "6'"
0x00002736      681c000000     push 0x1c
0x0000273b      e920feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00002740      ff25e2952100   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x21bd28:8]=0x2746 ; "F'"
0x00002746      681d000000     push 0x1d
0x0000274b      e910feffff     jmp sym..plt
;-- imp.strlen:
0x00002750      ff25da952100   jmp qword [reloc.strlen]                ; [0x21bd30:8]=0x2756 ; "V'"
0x00002756      681e000000     push 0x1e
0x0000275b      e900feffff     jmp sym..plt
;-- imp.__lxstat:
0x00002760      ff25d2952100   jmp qword [reloc.__lxstat]              ; [0x21bd38:8]=0x2766 ; "f'"
0x00002766      681f000000     push 0x1f
0x0000276b      e9f0fdffff     jmp sym..plt
;-- imp.openat:
0x00002770      ff25ca952100   jmp qword [reloc.openat]                ; [0x21bd40:8]=0x2776 ; "v'"
0x00002776      6820000000     push 0x20                               ; "@"
0x0000277b      e9e0fdffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00002780      ff25c2952100   jmp qword [reloc.__stack_chk_fail]      ; [0x21bd48:8]=0x2786
0x00002786      6821000000     push 0x21                               ; '!'
0x0000278b      e9d0fdffff     jmp sym..plt
;-- imp.getuid:
0x00002790      ff25ba952100   jmp qword [reloc.getuid]                ; [0x21bd50:8]=0x2796
0x00002796      6822000000     push 0x22                               ; '"'
0x0000279b      e9c0fdffff     jmp sym..plt
;-- imp.getopt_long:
0x000027a0      ff25b2952100   jmp qword [reloc.getopt_long]           ; [0x21bd58:8]=0x27a6
0x000027a6      6823000000     push 0x23                               ; '#'
0x000027ab      e9b0fdffff     jmp sym..plt
;-- imp.mbrtowc:
0x000027b0      ff25aa952100   jmp qword [reloc.mbrtowc]               ; [0x21bd60:8]=0x27b6
0x000027b6      6824000000     push 0x24                               ; '$'
0x000027bb      e9a0fdffff     jmp sym..plt
;-- imp.__fxstatat:
0x000027c0      ff25a2952100   jmp qword [reloc.__fxstatat]            ; [0x21bd68:8]=0x27c6
0x000027c6      6825000000     push 0x25                               ; '%'
0x000027cb      e990fdffff     jmp sym..plt
;-- imp.__overflow:
0x000027d0      ff259a952100   jmp qword [reloc.__overflow]            ; [0x21bd70:8]=0x27d6
0x000027d6      6826000000     push 0x26                               ; '&'
0x000027db      e980fdffff     jmp sym..plt
;-- imp.strrchr:
0x000027e0      ff2592952100   jmp qword [reloc.strrchr]               ; [0x21bd78:8]=0x27e6
0x000027e6      6827000000     push 0x27                               ; '''
0x000027eb      e970fdffff     jmp sym..plt
;-- imp.ftruncate:
0x000027f0      ff258a952100   jmp qword [reloc.ftruncate]             ; [0x21bd80:8]=0x27f6
0x000027f6      6828000000     push 0x28                               ; '('
0x000027fb      e960fdffff     jmp sym..plt
;-- imp.lseek:
0x00002800      ff2582952100   jmp qword [reloc.lseek]                 ; [0x21bd88:8]=0x2806
0x00002806      6829000000     push 0x29                               ; ')' ; "j\t"
0x0000280b      e950fdffff     jmp sym..plt
;-- imp.gettimeofday:
0x00002810      ff257a952100   jmp qword [reloc.gettimeofday]          ; [0x21bd90:8]=0x2816
0x00002816      682a000000     push 0x2a                               ; '*' ; "\t"
0x0000281b      e940fdffff     jmp sym..plt
;-- imp.__assert_fail:
0x00002820      ff2572952100   jmp qword [reloc.__assert_fail]         ; [0x21bd98:8]=0x2826 ; "&("
0x00002826      682b000000     push 0x2b                               ; '+'
0x0000282b      e930fdffff     jmp sym..plt
;-- imp.memset:
0x00002830      ff256a952100   jmp qword [reloc.memset]                ; [0x21bda0:8]=0x2836 ; "6("
0x00002836      682c000000     push 0x2c                               ; ','
0x0000283b      e920fdffff     jmp sym..plt
;-- imp.geteuid:
0x00002840      ff2562952100   jmp qword [reloc.geteuid]               ; [0x21bda8:8]=0x2846 ; "F("
0x00002846      682d000000     push 0x2d                               ; '-'
0x0000284b      e910fdffff     jmp sym..plt
;-- imp.ioctl:
0x00002850      ff255a952100   jmp qword [reloc.ioctl]                 ; [0x21bdb0:8]=0x2856 ; "V("
0x00002856      682e000000     push 0x2e                               ; '.'
0x0000285b      e900fdffff     jmp sym..plt
;-- imp.canonicalize_file_name:
0x00002860      ff2552952100   jmp qword [reloc.canonicalize_file_name] ; [0x21bdb8:8]=0x2866 ; "f("
0x00002866      682f000000     push 0x2f                               ; '/'
0x0000286b      e9f0fcffff     jmp sym..plt
;-- imp.close:
0x00002870      ff254a952100   jmp qword [reloc.close]                 ; [0x21bdc0:8]=0x2876 ; "v("
0x00002876      6830000000     push 0x30                               ; '0'
0x0000287b      e9e0fcffff     jmp sym..plt
;-- imp.rewinddir:
0x00002880      ff2542952100   jmp qword [reloc.rewinddir]             ; [0x21bdc8:8]=0x2886
0x00002886      6831000000     push 0x31                               ; '1'
0x0000288b      e9d0fcffff     jmp sym..plt
;-- imp.strspn:
0x00002890      ff253a952100   jmp qword [reloc.strspn]                ; [0x21bdd0:8]=0x2896
0x00002896      6832000000     push 0x32                               ; '2'
0x0000289b      e9c0fcffff     jmp sym..plt
;-- imp.closedir:
0x000028a0      ff2532952100   jmp qword [reloc.closedir]              ; [0x21bdd8:8]=0x28a6
0x000028a6      6833000000     push 0x33                               ; '3'
0x000028ab      e9b0fcffff     jmp sym..plt
;-- imp.posix_fadvise:
0x000028b0      ff252a952100   jmp qword [reloc.posix_fadvise]         ; [0x21bde0:8]=0x28b6
0x000028b6      6834000000     push 0x34                               ; '4' ; u"@8\t@%$\x06"
0x000028bb      e9a0fcffff     jmp sym..plt
;-- imp.read:
0x000028c0      ff2522952100   jmp qword [reloc.read]                  ; [0x21bde8:8]=0x28c6
0x000028c6      6835000000     push 0x35                               ; '5'
0x000028cb      e990fcffff     jmp sym..plt
;-- imp.memcmp:
0x000028d0      ff251a952100   jmp qword [reloc.memcmp]                ; [0x21bdf0:8]=0x28d6
0x000028d6      6836000000     push 0x36                               ; '6' ; u"8\t@%$\x06"
0x000028db      e980fcffff     jmp sym..plt
;-- imp.fallocate:
0x000028e0      ff2512952100   jmp qword [reloc.fallocate]             ; [0x21bdf8:8]=0x28e6
0x000028e6      6837000000     push 0x37                               ; '7'
0x000028eb      e970fcffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x000028f0      ff250a952100   jmp qword [reloc.fputs_unlocked]        ; [0x21be00:8]=0x28f6
0x000028f6      6838000000     push 0x38                               ; '8' ; u"\t@%$\x06"
0x000028fb      e960fcffff     jmp sym..plt
;-- imp.utimes:
0x00002900      ff2502952100   jmp qword [reloc.utimes]                ; [0x21be08:8]=0x2906
0x00002906      6839000000     push 0x39                               ; '9'
0x0000290b      e950fcffff     jmp sym..plt
;-- imp.calloc:
0x00002910      ff25fa942100   jmp qword [reloc.calloc]                ; [0x21be10:8]=0x2916
0x00002916      683a000000     push 0x3a                               ; ':' ; u"@%$\x06"
0x0000291b      e940fcffff     jmp sym..plt
;-- imp.__getdelim:
0x00002920      ff25f2942100   jmp qword [reloc.__getdelim]            ; [0x21be18:8]=0x2926 ; "&)"
0x00002926      683b000000     push 0x3b                               ; ';'
0x0000292b      e930fcffff     jmp sym..plt
;-- imp.strcmp:
0x00002930      ff25ea942100   jmp qword [reloc.strcmp]                ; [0x21be20:8]=0x2936 ; "6)"
0x00002936      683c000000     push 0x3c                               ; '<' ; u"%$\x06"
0x0000293b      e920fcffff     jmp sym..plt
;-- imp.dirfd:
0x00002940      ff25e2942100   jmp qword [reloc.dirfd]                 ; [0x21be28:8]=0x2946 ; "F)"
0x00002946      683d000000     push 0x3d                               ; '='
0x0000294b      e910fcffff     jmp sym..plt
;-- imp.fpathconf:
0x00002950      ff25da942100   jmp qword [reloc.fpathconf]             ; [0x21be30:8]=0x2956 ; "V)"
0x00002956      683e000000     push 0x3e                               ; '>' ; u"$\x06"
0x0000295b      e900fcffff     jmp sym..plt
;-- imp.rpmatch:
0x00002960      ff25d2942100   jmp qword [reloc.rpmatch]               ; [0x21be38:8]=0x2966 ; "f)"
0x00002966      683f000000     push 0x3f                               ; '?'
0x0000296b      e9f0fbffff     jmp sym..plt
;-- imp.syscall:
0x00002970      ff25ca942100   jmp qword [reloc.syscall]               ; [0x21be40:8]=0x2976 ; "v)"
0x00002976      6840000000     push 0x40                               ; segment.PHDR
0x0000297b      e9e0fbffff     jmp sym..plt
;-- imp.mkfifo:
0x00002980      ff25c2942100   jmp qword [reloc.mkfifo]                ; [0x21be48:8]=0x2986
0x00002986      6841000000     push 0x41                               ; 'A'
0x0000298b      e9d0fbffff     jmp sym..plt
;-- imp.umask:
0x00002990      ff25ba942100   jmp qword [reloc.umask]                 ; [0x21be50:8]=0x2996
0x00002996      6842000000     push 0x42                               ; 'B'
0x0000299b      e9c0fbffff     jmp sym..plt
;-- imp.memcpy:
0x000029a0      ff25b2942100   jmp qword [reloc.memcpy]                ; [0x21be58:8]=0x29a6
0x000029a6      6843000000     push 0x43                               ; 'C'
0x000029ab      e9b0fbffff     jmp sym..plt
;-- imp.__xmknod:
0x000029b0      ff25aa942100   jmp qword [reloc.__xmknod]              ; [0x21be60:8]=0x29b6
0x000029b6      6844000000     push 0x44                               ; 'D'
0x000029bb      e9a0fbffff     jmp sym..plt
;-- imp.fileno:
0x000029c0      ff25a2942100   jmp qword [reloc.fileno]                ; [0x21be68:8]=0x29c6
0x000029c6      6845000000     push 0x45                               ; 'E'
0x000029cb      e990fbffff     jmp sym..plt
;-- imp.getgid:
0x000029d0      ff259a942100   jmp qword [reloc.getgid]                ; [0x21be70:8]=0x29d6
0x000029d6      6846000000     push 0x46                               ; 'F'
0x000029db      e980fbffff     jmp sym..plt
;-- imp.__xstat:
0x000029e0      ff2592942100   jmp qword [reloc.__xstat]               ; [0x21be78:8]=0x29e6
0x000029e6      6847000000     push 0x47                               ; 'G'
0x000029eb      e970fbffff     jmp sym..plt
;-- imp.readdir:
0x000029f0      ff258a942100   jmp qword [reloc.readdir]               ; [0x21be80:8]=0x29f6
0x000029f6      6848000000     push 0x48                               ; 'H' ; "@"
0x000029fb      e960fbffff     jmp sym..plt
;-- imp.malloc:
0x00002a00      ff2582942100   jmp qword [reloc.malloc]                ; [0x21be88:8]=0x2a06
0x00002a06      6849000000     push 0x49                               ; 'I'
0x00002a0b      e950fbffff     jmp sym..plt
;-- imp.fflush:
0x00002a10      ff257a942100   jmp qword [reloc.fflush]                ; [0x21be90:8]=0x2a16
0x00002a16      684a000000     push 0x4a                               ; 'J'
0x00002a1b      e940fbffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00002a20      ff2572942100   jmp qword [reloc.nl_langinfo]           ; [0x21be98:8]=0x2a26 ; "&*"
0x00002a26      684b000000     push 0x4b                               ; 'K'
0x00002a2b      e930fbffff     jmp sym..plt
;-- imp.__fxstat:
0x00002a30      ff256a942100   jmp qword [reloc.__fxstat]              ; [0x21bea0:8]=0x2a36 ; "6*"
0x00002a36      684c000000     push 0x4c                               ; 'L'
0x00002a3b      e920fbffff     jmp sym..plt
;-- imp.lchown:
0x00002a40      ff2562942100   jmp qword [reloc.lchown]                ; [0x21bea8:8]=0x2a46 ; "F*"
0x00002a46      684d000000     push 0x4d                               ; 'M'
0x00002a4b      e910fbffff     jmp sym..plt
;-- imp.__freading:
0x00002a50      ff255a942100   jmp qword [reloc.__freading]            ; [0x21beb0:8]=0x2a56 ; "V*"
0x00002a56      684e000000     push 0x4e                               ; 'N'
0x00002a5b      e900fbffff     jmp sym..plt
;-- imp.fchdir:
0x00002a60      ff2552942100   jmp qword [reloc.fchdir]                ; [0x21beb8:8]=0x2a66 ; "f*"
0x00002a66      684f000000     push 0x4f                               ; 'O'
0x00002a6b      e9f0faffff     jmp sym..plt
;-- imp.realloc:
0x00002a70      ff254a942100   jmp qword [reloc.realloc]               ; [0x21bec0:8]=0x2a76 ; "v*"
0x00002a76      6850000000     push 0x50                               ; 'P' ; "@"
0x00002a7b      e9e0faffff     jmp sym..plt
;-- imp.fdopen:
0x00002a80      ff2542942100   jmp qword [reloc.fdopen]                ; [0x21bec8:8]=0x2a86
0x00002a86      6851000000     push 0x51                               ; 'Q'
0x00002a8b      e9d0faffff     jmp sym..plt
;-- imp.linkat:
0x00002a90      ff253a942100   jmp qword [reloc.linkat]                ; [0x21bed0:8]=0x2a96
0x00002a96      6852000000     push 0x52                               ; 'R'
0x00002a9b      e9c0faffff     jmp sym..plt
;-- imp.setlocale:
0x00002aa0      ff2532942100   jmp qword [reloc.setlocale]             ; [0x21bed8:8]=0x2aa6
0x00002aa6      6853000000     push 0x53                               ; 'S'
0x00002aab      e9b0faffff     jmp sym..plt
;-- imp.__printf_chk:
0x00002ab0      ff252a942100   jmp qword [reloc.__printf_chk]          ; [0x21bee0:8]=0x2ab6
0x00002ab6      6854000000     push 0x54                               ; 'T'
0x00002abb      e9a0faffff     jmp sym..plt
;-- imp.fchmod:
0x00002ac0      ff2522942100   jmp qword [reloc.fchmod]                ; [0x21bee8:8]=0x2ac6
0x00002ac6      6855000000     push 0x55                               ; 'U'
0x00002acb      e990faffff     jmp sym..plt
;-- imp.setvbuf:
0x00002ad0      ff251a942100   jmp qword [reloc.setvbuf]               ; [0x21bef0:8]=0x2ad6
0x00002ad6      6856000000     push 0x56                               ; 'V'
0x00002adb      e980faffff     jmp sym..plt
;-- imp.chmod:
0x00002ae0      ff2512942100   jmp qword [reloc.chmod]                 ; [0x21bef8:8]=0x2ae6
0x00002ae6      6857000000     push 0x57                               ; 'W'
0x00002aeb      e970faffff     jmp sym..plt
;-- imp.mempcpy:
0x00002af0      ff250a942100   jmp qword [reloc.mempcpy]               ; [0x21bf00:8]=0x2af6
0x00002af6      6858000000     push 0x58                               ; 'X' ; "@"
0x00002afb      e960faffff     jmp sym..plt
;-- imp.memmove:
0x00002b00      ff2502942100   jmp qword [reloc.memmove]               ; [0x21bf08:8]=0x2b06
0x00002b06      6859000000     push 0x59                               ; 'Y'
0x00002b0b      e950faffff     jmp sym..plt
;-- imp.error:
0x00002b10      ff25fa932100   jmp qword [reloc.error]                 ; [0x21bf10:8]=0x2b16
0x00002b16      685a000000     push 0x5a                               ; 'Z'
0x00002b1b      e940faffff     jmp sym..plt
;-- imp.__explicit_bzero_chk:
0x00002b20      ff25f2932100   jmp qword [reloc.__explicit_bzero_chk]  ; [0x21bf18:8]=0x2b26 ; "&+"
0x00002b26      685b000000     push 0x5b                               ; '['
0x00002b2b      e930faffff     jmp sym..plt
;-- imp.open:
0x00002b30      ff25ea932100   jmp qword [reloc.open]                  ; [0x21bf20:8]=0x2b36 ; "6+"
0x00002b36      685c000000     push 0x5c                               ; '\'
0x00002b3b      e920faffff     jmp sym..plt
;-- imp.fseeko:
0x00002b40      ff25e2932100   jmp qword [reloc.fseeko]                ; [0x21bf28:8]=0x2b46 ; "F+"
0x00002b46      685d000000     push 0x5d                               ; ']'
0x00002b4b      e910faffff     jmp sym..plt
;-- imp.fchown:
0x00002b50      ff25da932100   jmp qword [reloc.fchown]                ; [0x21bf30:8]=0x2b56 ; "V+"
0x00002b56      685e000000     push 0x5e                               ; '^'
0x00002b5b      e900faffff     jmp sym..plt
;-- imp.fopen:
0x00002b60      ff25d2932100   jmp qword [reloc.fopen]                 ; [0x21bf38:8]=0x2b66 ; "f+"
0x00002b66      685f000000     push 0x5f                               ; '_'
0x00002b6b      e9f0f9ffff     jmp sym..plt
;-- imp.rename:
0x00002b70      ff25ca932100   jmp qword [reloc.rename]                ; [0x21bf40:8]=0x2b76 ; "v+"
0x00002b76      6860000000     push 0x60                               ; '`'
0x00002b7b      e9e0f9ffff     jmp sym..plt
;-- imp.fdopendir:
0x00002b80      ff25c2932100   jmp qword [reloc.fdopendir]             ; [0x21bf48:8]=0x2b86
0x00002b86      6861000000     push 0x61                               ; 'a'
0x00002b8b      e9d0f9ffff     jmp sym..plt
;-- imp.futimens:
0x00002b90      ff25ba932100   jmp qword [reloc.futimens]              ; [0x21bf50:8]=0x2b96
0x00002b96      6862000000     push 0x62                               ; 'b'
0x00002b9b      e9c0f9ffff     jmp sym..plt
;-- imp.euidaccess:
0x00002ba0      ff25b2932100   jmp qword [reloc.euidaccess]            ; [0x21bf58:8]=0x2ba6
0x00002ba6      6863000000     push 0x63                               ; 'c'
0x00002bab      e9b0f9ffff     jmp sym..plt
;-- imp.fstatfs:
0x00002bb0      ff25aa932100   jmp qword [reloc.fstatfs]               ; [0x21bf60:8]=0x2bb6
0x00002bb6      6864000000     push 0x64                               ; 'd'
0x00002bbb      e9a0f9ffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00002bc0      ff25a2932100   jmp qword [reloc.__cxa_atexit]          ; [0x21bf68:8]=0x2bc6
0x00002bc6      6865000000     push 0x65                               ; 'e'
0x00002bcb      e990f9ffff     jmp sym..plt
;-- imp.renameat:
0x00002bd0      ff259a932100   jmp qword [reloc.renameat]              ; [0x21bf70:8]=0x2bd6
0x00002bd6      6866000000     push 0x66                               ; 'f'
0x00002bdb      e980f9ffff     jmp sym..plt
;-- imp.getpagesize:
0x00002be0      ff2592932100   jmp qword [reloc.getpagesize]           ; [0x21bf78:8]=0x2be6
0x00002be6      6867000000     push 0x67                               ; 'g'
0x00002beb      e970f9ffff     jmp sym..plt
;-- imp.getppid:
0x00002bf0      ff258a932100   jmp qword [reloc.getppid]               ; [0x21bf80:8]=0x2bf6
0x00002bf6      6868000000     push 0x68                               ; 'h'
0x00002bfb      e960f9ffff     jmp sym..plt
;-- imp.exit:
0x00002c00      ff2582932100   jmp qword [reloc.exit]                  ; [0x21bf88:8]=0x2c06
0x00002c06      6869000000     push 0x69                               ; 'i'
0x00002c0b      e950f9ffff     jmp sym..plt
;-- imp.fwrite:
0x00002c10      ff257a932100   jmp qword [reloc.fwrite]                ; [0x21bf90:8]=0x2c16
0x00002c16      686a000000     push 0x6a                               ; 'j'
0x00002c1b      e940f9ffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00002c20      ff2572932100   jmp qword [reloc.__fprintf_chk]         ; [0x21bf98:8]=0x2c26 ; "&,"
0x00002c26      686b000000     push 0x6b                               ; 'k'
0x00002c2b      e930f9ffff     jmp sym..plt
;-- imp.mbsinit:
0x00002c30      ff256a932100   jmp qword [reloc.mbsinit]               ; [0x21bfa0:8]=0x2c36 ; "6,"
0x00002c36      686c000000     push 0x6c                               ; 'l'
0x00002c3b      e920f9ffff     jmp sym..plt
;-- imp.symlinkat:
0x00002c40      ff2562932100   jmp qword [reloc.symlinkat]             ; [0x21bfa8:8]=0x2c46 ; "F,"
0x00002c46      686d000000     push 0x6d                               ; 'm'
0x00002c4b      e910f9ffff     jmp sym..plt
;-- imp.iswprint:
0x00002c50      ff255a932100   jmp qword [reloc.iswprint]              ; [0x21bfb0:8]=0x2c56 ; "V,"
0x00002c56      686e000000     push 0x6e                               ; 'n'
0x00002c5b      e900f9ffff     jmp sym..plt
;-- imp.futimesat:
0x00002c60      ff2552932100   jmp qword [reloc.futimesat]             ; [0x21bfb8:8]=0x2c66 ; "f,"
0x00002c66      686f000000     push 0x6f                               ; 'o'
0x00002c6b      e9f0f8ffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00002c70      ff254a932100   jmp qword [reloc.__ctype_b_loc]         ; [0x21bfc0:8]=0x2c76 ; "v,"
0x00002c76      6870000000     push 0x70                               ; 'p'
0x00002c7b      e9e0f8ffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00002c80      .qword 0x90660021934225ff                              ; [13] -r-x section size 16 named .plt.got
0x00002c88      .qword 0x90660021936225ff
;-- section..text:
;-- .text:
;-- fchmod_or_lchmod:
0x00002c90      85ff           test edi, edi                           ; [14] -r-x section size 74318 named .text
0x00002c92      4889f0         mov rax, rsi
0x00002c95      89d6           mov esi, edx
0x00002c97      7805           js 0x2c9e
0x00002c99      e922feffff     jmp sym.imp.fchmod
0x00002c9e      4889c7         mov rdi, rax
0x00002ca1      e93afeffff     jmp sym.imp.chmod
;-- restore_default_fscreatecon_or_die:
0x00002ca6      53             push rbx
0x00002ca7      e8f4f8ffff     call sym.imp.__errno_location
0x00002cac      488d35b53101.  lea rsi, str.failed_to_restore_the_default_file_creation_context ; 0x15e68 ; "failed to restore the default file creation context"
0x00002cb3      4889c3         mov rbx, rax
0x00002cb6      ba05000000     mov edx, 5
0x00002cbb      31ff           xor edi, edi
0x00002cbd      c7005f000000   mov dword [rax], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x00002cc3      e868faffff     call sym.imp.dcgettext
0x00002cc8      8b33           mov esi, dword [rbx]
0x00002cca      4889c2         mov rdx, rax
0x00002ccd      bf01000000     mov edi, 1
0x00002cd2      31c0           xor eax, eax
0x00002cd4      e837feffff     call sym.imp.error
0x00002cd9      0f1f80000000.  nop dword [rax]
;-- main:
0x00002ce0      4157           push r15
0x00002ce2      4156           push r14
0x00002ce4      4155           push r13
0x00002ce6      4154           push r12
0x00002ce8      55             push rbp
0x00002ce9      53             push rbx
0x00002cea      89fd           mov ebp, edi
0x00002cec      4889f3         mov rbx, rsi
0x00002cef      4881ec180100.  sub rsp, 0x118
0x00002cf6      488b3e         mov rdi, qword [rsi]
0x00002cf9      64488b042528.  mov rax, qword fs:[0x28]
0x00002d02      488984240801.  mov qword [rsp + 0x108], rax
0x00002d0a      31c0           xor eax, eax
0x00002d0c      4c8d6c2420     lea r13, [rsp + 0x20]
0x00002d11      e89a9e0000     call sym.set_program_name
0x00002d16      488d356f3a01.  lea rsi, [0x0001678c]
0x00002d1d      bf06000000     mov edi, 6
0x00002d22      e879fdffff     call sym.imp.setlocale
0x00002d27      488d35ad2201.  lea rsi, str.usr_local_share_locale     ; 0x14fdb ; "/usr/local/share/locale"
0x00002d2e      488d3d7d2201.  lea rdi, [0x00014fb2]                   ; "coreutils"
0x00002d35      e8c6f9ffff     call sym.imp.bindtextdomain
0x00002d3a      488d3d712201.  lea rdi, [0x00014fb2]                   ; "coreutils"
0x00002d41      e87af9ffff     call sym.imp.textdomain
0x00002d46      488d3db38000.  lea rdi, sym.close_stdin                ; 0xae00 ; "ATUSH\x8b\x1d\xc5\x12!"
0x00002d4d      e87e210100     call sym.atexit
0x00002d52      4c89ef         mov rdi, r13
0x00002d55      e836290000     call sym.cp_options_default
0x00002d5a      31ff           xor edi, edi
0x00002d5c      c644243400     mov byte [rsp + 0x34], 0
0x00002d61      c74424580100.  mov dword [rsp + 0x58], 1
0x00002d69      c74424240200.  mov dword [rsp + 0x24], 2
0x00002d71      c644243500     mov byte [rsp + 0x35], 0
0x00002d76      c644243600     mov byte [rsp + 0x36], 0
0x00002d7b      c644243700     mov byte [rsp + 0x37], 0
0x00002d80      c74424280400.  mov dword [rsp + 0x28], 4
0x00002d88      c644243801     mov byte [rsp + 0x38], 1
0x00002d8d      c644243900     mov byte [rsp + 0x39], 0
0x00002d92      c644243c00     mov byte [rsp + 0x3c], 0
0x00002d97      c644243d01     mov byte [rsp + 0x3d], 1
0x00002d9c      c644244201     mov byte [rsp + 0x42], 1
0x00002da1      c644243e01     mov byte [rsp + 0x3e], 1
0x00002da6      c644243f01     mov byte [rsp + 0x3f], 1
0x00002dab      c644244000     mov byte [rsp + 0x40], 0
0x00002db0      c644244500     mov byte [rsp + 0x45], 0
0x00002db5      c644244100     mov byte [rsp + 0x41], 0
0x00002dba      c644244900     mov byte [rsp + 0x49], 0
0x00002dbf      c644244301     mov byte [rsp + 0x43], 1
0x00002dc4      c644244400     mov byte [rsp + 0x44], 0
0x00002dc9      c644244600     mov byte [rsp + 0x46], 0
0x00002dce      c644244701     mov byte [rsp + 0x47], 1
0x00002dd3      c644244800     mov byte [rsp + 0x48], 0
0x00002dd8      c644244a01     mov byte [rsp + 0x4a], 1
0x00002ddd      c744242c0200.  mov dword [rsp + 0x2c], 2
0x00002de5      c644244c00     mov byte [rsp + 0x4c], 0
0x00002dea      c644244b00     mov byte [rsp + 0x4b], 0
0x00002def      c74424300000.  mov dword [rsp + 0x30], 0
0x00002df7      e844f8ffff     call sym.imp.isatty
0x00002dfc      85c0           test eax, eax
0x00002dfe      488d442470     lea rax, [rsp + 0x70]
0x00002e03      c644245000     mov byte [rsp + 0x50], 0
0x00002e08      0f9544244f     setne byte [rsp + 0x4f]
0x00002e0d      c644244d00     mov byte [rsp + 0x4d], 0
0x00002e12      4531e4         xor r12d, r12d
0x00002e15      c644244e00     mov byte [rsp + 0x4e], 0
0x00002e1a      48c744246000.  mov qword [rsp + 0x60], 0
0x00002e23      4531ff         xor r15d, r15d
0x00002e26      48c744246800.  mov qword [rsp + 0x68], 0
0x00002e2f      c644241000     mov byte [rsp + 0x10], 0
0x00002e34      4531f6         xor r14d, r14d
0x00002e37      48c744240800.  mov qword [rsp + 8], 0
0x00002e40      4889442418     mov qword [rsp + 0x18], rax
0x00002e45      0f1f00         nop dword [rax]
0x00002e48      488d0d518921.  lea rcx, obj.long_options               ; 0x21b7a0
0x00002e4f      488d15f72101.  lea rdx, str.bfint:uvS:TZ               ; 0x1504d ; "bfint:uvS:TZ"
0x00002e56      4531c0         xor r8d, r8d
0x00002e59      4889de         mov rsi, rbx
0x00002e5c      89ef           mov edi, ebp
0x00002e5e      e83df9ffff     call sym.imp.getopt_long
0x00002e63      83f8ff         cmp eax, 0xffffffff
0x00002e66      0f84e1010000   je 0x304d
0x00002e6c      83f866         cmp eax, 0x66
0x00002e6f      0f849b010000   je 0x3010
0x00002e75      7e29           jle 0x2ea0
0x00002e77      83f874         cmp eax, 0x74
0x00002e7a      0f84d0000000   je 0x2f50
0x00002e80      7e5e           jle 0x2ee0
0x00002e82      83f876         cmp eax, 0x76
0x00002e85      0f8455010000   je 0x2fe0
0x00002e8b      0f8c3f010000   jl 0x2fd0
0x00002e91      83c080         add eax, 0xffffff80
0x00002e94      7528           jne 0x2ebe
0x00002e96      c60583922100.  mov byte [obj.remove_trailing_slashes], 1 ; [0x21c120:1]=0
0x00002e9d      eba9           jmp 0x2e48
0x00002e9f      90             nop
0x00002ea0      83f853         cmp eax, 0x53
0x00002ea3      0f8447010000   je 0x2ff0
0x00002ea9      7e55           jle 0x2f00
0x00002eab      83f85a         cmp eax, 0x5a
0x00002eae      7498           je 0x2e48
0x00002eb0      83f862         cmp eax, 0x62
0x00002eb3      0f8467010000   je 0x3020
0x00002eb9      83f854         cmp eax, 0x54
0x00002ebc      7412           je 0x2ed0
0x00002ebe      bf01000000     mov edi, 1
0x00002ec3      e8b8080000     call sym.usage
0x00002ec8      0f1f84000000.  nop dword [rax + rax]
0x00002ed0      c644241001     mov byte [rsp + 0x10], 1
0x00002ed5      e96effffff     jmp 0x2e48
0x00002eda      660f1f440000   nop word [rax + rax]
0x00002ee0      83f869         cmp eax, 0x69
0x00002ee3      0f8457010000   je 0x3040
0x00002ee9      83f86e         cmp eax, 0x6e
0x00002eec      75d0           jne 0x2ebe
0x00002eee      c74424280200.  mov dword [rsp + 0x28], 2
0x00002ef6      e94dffffff     jmp 0x2e48
0x00002efb      0f1f440000     nop dword [rax + rax]
0x00002f00      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00002f05      0f85a0030000   jne 0x32ab
0x00002f0b      488d052e2101.  lea rax, str.Jim_Meyering               ; 0x15040 ; "Jim Meyering"
0x00002f12      488b3daf9121.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0c8:8]=0
0x00002f19      488b0d009121.  mov rcx, qword [obj.Version]            ; [0x21c020:8]=0x16881 str.8.31
0x00002f20      6a00           push 0
0x00002f22      4c8d0dfb2001.  lea r9, str.David_MacKenzie             ; 0x15024 ; "David MacKenzie"
0x00002f29      4c8d05042101.  lea r8, str.Mike_Parker                 ; 0x15034 ; "Mike Parker"
0x00002f30      50             push rax
0x00002f31      488d15762001.  lea rdx, str.GNU_coreutils              ; 0x14fae ; "GNU coreutils"
0x00002f38      488d35f61f01.  lea rsi, [0x00014f35]                   ; "mv"
0x00002f3f      31c0           xor eax, eax
0x00002f41      e8dadb0000     call sym.version_etc
0x00002f46      31ff           xor edi, edi
0x00002f48      e8b3fcffff     call sym.imp.exit
0x00002f4d      0f1f00         nop dword [rax]
0x00002f50      4d85e4         test r12, r12
0x00002f53      0f8546040000   jne 0x339f
0x00002f59      488b542418     mov rdx, qword [rsp + 0x18]
0x00002f5e      488b357b9121.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21c0e0:8]=0
0x00002f65      bf01000000     mov edi, 1
0x00002f6a      e871faffff     call sym.imp.__xstat
0x00002f6f      85c0           test eax, eax
0x00002f71      0f8590040000   jne 0x3407
0x00002f77      8b8424880000.  mov eax, dword [rsp + 0x88]
0x00002f7e      4c8b255b9121.  mov r12, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21c0e0:8]=0
0x00002f85      2500f00000     and eax, 0xf000
0x00002f8a      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x00002f8f      0f84b3feffff   je 0x2e48
0x00002f95      4c89e6         mov rsi, r12
0x00002f98      bf04000000     mov edi, 4
0x00002f9d      e82eb70000     call sym.quotearg_style
0x00002fa2      488d355e2001.  lea rsi, str.target__s_is_not_a_directory ; 0x15007 ; "target %s is not a directory"
0x00002fa9      4889c3         mov rbx, rax
0x00002fac      ba05000000     mov edx, 5
0x00002fb1      31ff           xor edi, edi
0x00002fb3      e878f7ffff     call sym.imp.dcgettext
0x00002fb8      4889d9         mov rcx, rbx
0x00002fbb      4889c2         mov rdx, rax
0x00002fbe      31f6           xor esi, esi
0x00002fc0      bf01000000     mov edi, 1
0x00002fc5      31c0           xor eax, eax
0x00002fc7      e844fbffff     call sym.imp.error
0x00002fcc      0f1f4000       nop dword [rax]
0x00002fd0      c644244d01     mov byte [rsp + 0x4d], 1
0x00002fd5      e96efeffff     jmp 0x2e48
0x00002fda      660f1f440000   nop word [rax + rax]
0x00002fe0      c644244e01     mov byte [rsp + 0x4e], 1
0x00002fe5      e95efeffff     jmp 0x2e48
0x00002fea      660f1f440000   nop word [rax + rax]
0x00002ff0      488b05e99021.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21c0e0:8]=0
0x00002ff7      41be01000000   mov r14d, 1
0x00002ffd      4889442408     mov qword [rsp + 8], rax
0x00003002      e941feffff     jmp 0x2e48
0x00003007      660f1f840000.  nop word [rax + rax]
0x00003010      c74424280100.  mov dword [rsp + 0x28], 1
0x00003018      e92bfeffff     jmp 0x2e48
0x0000301d      0f1f00         nop dword [rax]
0x00003020      488b05b99021.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21c0e0:8]=0
0x00003027      41be01000000   mov r14d, 1
0x0000302d      4885c0         test rax, rax
0x00003030      4c0f45f8       cmovne r15, rax
0x00003034      e90ffeffff     jmp 0x2e48
0x00003039      0f1f80000000.  nop dword [rax]
0x00003040      c74424280300.  mov dword [rsp + 0x28], 3
0x00003048      e9fbfdffff     jmp 0x2e48
0x0000304d      486305849021.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x21c0d8:4]=0
0x00003054      29c5           sub ebp, eax
0x00003056      488d1cc3       lea rbx, [rbx + rax*8]
0x0000305a      31c0           xor eax, eax
0x0000305c      4d85e4         test r12, r12
0x0000305f      0f94c0         sete al
0x00003062      39e8           cmp eax, ebp
0x00003064      0f8d6b020000   jge 0x32d5
0x0000306a      807c241000     cmp byte [rsp + 0x10], 0
0x0000306f      0f85ac000000   jne 0x3121
0x00003075      4d85e4         test r12, r12
0x00003078      0f8460010000   je 0x31de
0x0000307e      837c242802     cmp dword [rsp + 0x28], 2
0x00003083      0f84cc000000   je 0x3155
0x00003089      4584f6         test r14b, r14b
0x0000308c      0f84d1000000   je 0x3163
0x00003092      488d35f41f01.  lea rsi, str.backup_type                ; 0x1508d ; "backup type"
0x00003099      31ff           xor edi, edi
0x0000309b      ba05000000     mov edx, 5
0x000030a0      e88bf6ffff     call sym.imp.dcgettext
0x000030a5      4c89fe         mov rsi, r15
0x000030a8      4889c7         mov rdi, rax
0x000030ab      e8807c0000     call sym.xget_version
0x000030b0      488b7c2408     mov rdi, qword [rsp + 8]
0x000030b5      89442420       mov dword [rsp + 0x20], eax
0x000030b9      e872750000     call sym.set_simple_backup_suffix
0x000030be      e89d6c0000     call sym.hash_init
0x000030c3      4d85e4         test r12, r12
0x000030c6      0f84f4000000   je 0x31c0
0x000030cc      83fd01         cmp ebp, 1
0x000030cf      0f8595000000   jne 0x316a
0x000030d5      488b3b         mov rdi, qword [rbx]
0x000030d8      4c89e9         mov rcx, r13
0x000030db      ba01000000     mov edx, 1
0x000030e0      4c89e6         mov rsi, r12
0x000030e3      c644245101     mov byte [rsp + 0x51], 1
0x000030e8      e803060000     call sym.movefile
0x000030ed      4189c6         mov r14d, eax
0x000030f0      4183f601       xor r14d, 1
0x000030f4      488b8c240801.  mov rcx, qword [rsp + 0x108]
0x000030fc      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003105      410fb6c6       movzx eax, r14b
0x00003109      0f855f030000   jne 0x346e
0x0000310f      4881c4180100.  add rsp, 0x118
0x00003116      5b             pop rbx
0x00003117      5d             pop rbp
0x00003118      415c           pop r12
0x0000311a      415d           pop r13
0x0000311c      415e           pop r14
0x0000311e      415f           pop r15
0x00003120      c3             ret
0x00003121      4d85e4         test r12, r12
0x00003124      0f8520030000   jne 0x344a
0x0000312a      83fd02         cmp ebp, 2
0x0000312d      0f8e4bffffff   jle 0x307e
0x00003133      488b7310       mov rsi, qword [rbx + 0x10]
0x00003137      bf04000000     mov edi, 4
0x0000313c      e88fb50000     call sym.quotearg_style
0x00003141      ba05000000     mov edx, 5
0x00003146      4889c3         mov rbx, rax
0x00003149      488d351f1f01.  lea rsi, str.extra_operand__s           ; 0x1506f ; "extra operand %s"
0x00003150      e9a1010000     jmp 0x32f6
0x00003155      4584f6         test r14b, r14b
0x00003158      c644244d00     mov byte [rsp + 0x4d], 0
0x0000315d      0f85b0010000   jne 0x3313
0x00003163      31c0           xor eax, eax
0x00003165      e946ffffff     jmp 0x30b0
0x0000316a      448d7dff       lea r15d, [rbp - 1]
0x0000316e      4c89ef         mov rdi, r13
0x00003171      41be01000000   mov r14d, 1
0x00003177      e8b4240000     call sym.dest_info_init
0x0000317c      498d4702       lea rax, [r15 + 2]
0x00003180      41bf01000000   mov r15d, 1
0x00003186      4889442408     mov qword [rsp + 8], rax
0x0000318b      0f1f440000     nop dword [rax + rax]
0x00003190      4a8b7cfbf8     mov rdi, qword [rbx + r15*8 - 8]
0x00003195      4439fd         cmp ebp, r15d
0x00003198      4c89e9         mov rcx, r13
0x0000319b      ba01000000     mov edx, 1
0x000031a0      4c89e6         mov rsi, r12
0x000031a3      0f94442451     sete byte [rsp + 0x51]
0x000031a8      4983c701       add r15, 1
0x000031ac      e83f050000     call sym.movefile
0x000031b1      4121c6         and r14d, eax
0x000031b4      4c3b7c2408     cmp r15, qword [rsp + 8]
0x000031b9      75d5           jne 0x3190
0x000031bb      e930ffffff     jmp 0x30f0
0x000031c0      488b7308       mov rsi, qword [rbx + 8]
0x000031c4      488b3b         mov rdi, qword [rbx]
0x000031c7      4c89e9         mov rcx, r13
0x000031ca      31d2           xor edx, edx
0x000031cc      c644245101     mov byte [rsp + 0x51], 1
0x000031d1      e81a050000     call sym.movefile
0x000031d6      4189c6         mov r14d, eax
0x000031d9      e912ffffff     jmp 0x30f0
0x000031de      83fd01         cmp ebp, 1
0x000031e1      0f8499010000   je 0x3380
0x000031e7      83fd02         cmp ebp, 2
0x000031ea      0f8494000000   je 0x3284
0x000031f0      837c245400     cmp dword [rsp + 0x54], 0
0x000031f5      4863cd         movsxd rcx, ebp
0x000031f8      0f8449010000   je 0x3347
0x000031fe      4863cd         movsxd rcx, ebp
0x00003201      488d542470     lea rdx, [rsp + 0x70]
0x00003206      bf01000000     mov edi, 1
0x0000320b      488b44cbf8     mov rax, qword [rbx + rcx*8 - 8]
0x00003210      48894c2410     mov qword [rsp + 0x10], rcx
0x00003215      4889c6         mov rsi, rax
0x00003218      4889442418     mov qword [rsp + 0x18], rax
0x0000321d      e8bef7ffff     call sym.imp.__xstat
0x00003222      85c0           test eax, eax
0x00003224      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00003229      742f           je 0x325a
0x0000322b      e870f3ffff     call sym.imp.__errno_location
0x00003230      448b00         mov r8d, dword [rax]
0x00003233      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00003238      4585c0         test r8d, r8d
0x0000323b      741d           je 0x325a
0x0000323d      4183f802       cmp r8d, 2
0x00003241      0f857c010000   jne 0x33c3
0x00003247      83fd02         cmp ebp, 2
0x0000324a      0f85f7000000   jne 0x3347
0x00003250      bd02000000     mov ebp, 2
0x00003255      e924feffff     jmp 0x307e
0x0000325a      8b8424880000.  mov eax, dword [rsp + 0x88]
0x00003261      2500f00000     and eax, 0xf000
0x00003266      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x0000326b      75da           jne 0x3247
0x0000326d      83ed01         sub ebp, 1
0x00003270      c7442454ffff.  mov dword [rsp + 0x54], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00003278      4863c5         movsxd rax, ebp
0x0000327b      4c8b24c3       mov r12, qword [rbx + rax*8]
0x0000327f      e9fafdffff     jmp 0x307e
0x00003284      488b4b08       mov rcx, qword [rbx + 8]
0x00003288      488b33         mov rsi, qword [rbx]
0x0000328b      ba9cffffff     mov edx, 0xffffff9c                     ; 4294967196
0x00003290      41b801000000   mov r8d, 1
0x00003296      89d7           mov edi, edx
0x00003298      e823b70000     call sym.renameatu
0x0000329d      85c0           test eax, eax
0x0000329f      751c           jne 0x32bd
0x000032a1      c74424540000.  mov dword [rsp + 0x54], 0
0x000032a9      eba5           jmp 0x3250
0x000032ab      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x000032b0      0f8508fcffff   jne 0x2ebe
0x000032b6      31ff           xor edi, edi
0x000032b8      e8c3040000     call sym.usage
0x000032bd      e8def2ffff     call sym.imp.__errno_location
0x000032c2      8b00           mov eax, dword [rax]
0x000032c4      85c0           test eax, eax
0x000032c6      89442454       mov dword [rsp + 0x54], eax
0x000032ca      0f852effffff   jne 0x31fe
0x000032d0      e97bffffff     jmp 0x3250
0x000032d5      83ed01         sub ebp, 1
0x000032d8      755f           jne 0x3339
0x000032da      488b33         mov rsi, qword [rbx]
0x000032dd      bf04000000     mov edi, 4
0x000032e2      e8e9b30000     call sym.quotearg_style
0x000032e7      488d35e22601.  lea rsi, str.missing_destination_file_operand_after__s ; 0x159d0 ; "missing destination file operand after %s"
0x000032ee      4889c3         mov rbx, rax
0x000032f1      ba05000000     mov edx, 5
0x000032f6      31ff           xor edi, edi
0x000032f8      e833f4ffff     call sym.imp.dcgettext
0x000032fd      4889d9         mov rcx, rbx
0x00003300      4889c2         mov rdx, rax
0x00003303      31f6           xor esi, esi
0x00003305      31ff           xor edi, edi
0x00003307      31c0           xor eax, eax
0x00003309      e802f8ffff     call sym.imp.error
0x0000330e      e9abfbffff     jmp 0x2ebe
0x00003313      488d352e2701.  lea rsi, str.options___backup_and___no_clobber_are_mutually_exclusive ; 0x15a48 ; "options --backup and --no-clobber are mutually exclusive"
0x0000331a      ba05000000     mov edx, 5
0x0000331f      31ff           xor edi, edi
0x00003321      e80af4ffff     call sym.imp.dcgettext
0x00003326      31f6           xor esi, esi
0x00003328      4889c2         mov rdx, rax
0x0000332b      31ff           xor edi, edi
0x0000332d      31c0           xor eax, eax
0x0000332f      e8dcf7ffff     call sym.imp.error
0x00003334      e985fbffff     jmp 0x2ebe
0x00003339      ba05000000     mov edx, 5
0x0000333e      488d35151d01.  lea rsi, str.missing_file_operand       ; 0x1505a ; "missing file operand"
0x00003345      ebd8           jmp 0x331f
0x00003347      488b74cbf8     mov rsi, qword [rbx + rcx*8 - 8]
0x0000334c      bf04000000     mov edi, 4
0x00003351      e87ab30000     call sym.quotearg_style
0x00003356      488d35aa1c01.  lea rsi, str.target__s_is_not_a_directory ; 0x15007 ; "target %s is not a directory"
0x0000335d      4889c3         mov rbx, rax
0x00003360      ba05000000     mov edx, 5
0x00003365      31ff           xor edi, edi
0x00003367      e8c4f3ffff     call sym.imp.dcgettext
0x0000336c      4889d9         mov rcx, rbx
0x0000336f      4889c2         mov rdx, rax
0x00003372      31f6           xor esi, esi
0x00003374      bf01000000     mov edi, 1
0x00003379      31c0           xor eax, eax
0x0000337b      e890f7ffff     call sym.imp.error
0x00003380      488d0d092701.  lea rcx, obj.__PRETTY_FUNCTION__.7244   ; 0x15a90 ; "main"
0x00003387      488d35761b01.  lea rsi, str..._coreutils_8.31_src_mv.c ; 0x14f04 ; "../coreutils-8.31/src/mv.c"
0x0000338e      488d3deb1c01.  lea rdi, str.2____n_files               ; 0x15080 ; "2 <= n_files"
0x00003395      bac9010000     mov edx, 0x1c9
0x0000339a      e881f4ffff     call sym.imp.__assert_fail
0x0000339f      488d35022601.  lea rsi, str.multiple_target_directories_specified ; 0x159a8 ; "multiple target directories specified"
0x000033a6      ba05000000     mov edx, 5
0x000033ab      31ff           xor edi, edi
0x000033ad      e87ef3ffff     call sym.imp.dcgettext
0x000033b2      31f6           xor esi, esi
0x000033b4      4889c2         mov rdx, rax
0x000033b7      bf01000000     mov edi, 1
0x000033bc      31c0           xor eax, eax
0x000033be      e84df7ffff     call sym.imp.error
0x000033c3      488b742418     mov rsi, qword [rsp + 0x18]
0x000033c8      bf04000000     mov edi, 4
0x000033cd      4489442408     mov dword [rsp + 8], r8d
0x000033d2      e8f9b20000     call sym.quotearg_style
0x000033d7      488d35151c01.  lea rsi, str.failed_to_access__s        ; 0x14ff3 ; "failed to access %s"
0x000033de      ba05000000     mov edx, 5
0x000033e3      31ff           xor edi, edi
0x000033e5      4889c3         mov rbx, rax
0x000033e8      e843f3ffff     call sym.imp.dcgettext
0x000033ed      448b442408     mov r8d, dword [rsp + 8]
0x000033f2      4889c2         mov rdx, rax
0x000033f5      4889d9         mov rcx, rbx
0x000033f8      bf01000000     mov edi, 1
0x000033fd      31c0           xor eax, eax
0x000033ff      4489c6         mov esi, r8d
0x00003402      e809f7ffff     call sym.imp.error
0x00003407      488b35d28c21.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21c0e0:8]=0
0x0000340e      bf04000000     mov edi, 4
0x00003413      e8b8b20000     call sym.quotearg_style
0x00003418      488d35d41b01.  lea rsi, str.failed_to_access__s        ; 0x14ff3 ; "failed to access %s"
0x0000341f      ba05000000     mov edx, 5
0x00003424      31ff           xor edi, edi
0x00003426      4889c5         mov rbp, rax
0x00003429      e802f3ffff     call sym.imp.dcgettext
0x0000342e      4889c3         mov rbx, rax
0x00003431      e86af1ffff     call sym.imp.__errno_location
0x00003436      8b30           mov esi, dword [rax]
0x00003438      4889e9         mov rcx, rbp
0x0000343b      4889da         mov rdx, rbx
0x0000343e      bf01000000     mov edi, 1
0x00003443      31c0           xor eax, eax
0x00003445      e8c6f6ffff     call sym.imp.error
0x0000344a      488d35af2501.  lea rsi, str.cannot_combine___target_directory___t__and___no_target_directory___T ; 0x15a00 ; "cannot combine --target-directory (-t) and --no-target-directory (-T)"
0x00003451      ba05000000     mov edx, 5
0x00003456      31ff           xor edi, edi
0x00003458      e8d3f2ffff     call sym.imp.dcgettext
0x0000345d      31f6           xor esi, esi
0x0000345f      4889c2         mov rdx, rax
0x00003462      bf01000000     mov edi, 1
0x00003467      31c0           xor eax, eax
0x00003469      e8a2f6ffff     call sym.imp.error
0x0000346e      e80df3ffff     call sym.imp.__stack_chk_fail
0x00003473      662e0f1f8400.  nop word cs:[rax + rax]
0x0000347d      0f1f00         nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00003480      31ed           xor ebp, ebp
0x00003482      4989d1         mov r9, rdx
0x00003485      5e             pop rsi
0x00003486      4889e2         mov rdx, rsp
0x00003489      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000348d      50             push rax
0x0000348e      54             push rsp
0x0000348f      4c8d052a1a01.  lea r8, sym.__libc_csu_fini             ; 0x14ec0
0x00003496      488d0db31901.  lea rcx, sym.__libc_csu_init            ; 0x14e50 ; "AWAVI\x89\xd7AUATL\x8d%.i "
0x0000349d      488d3d3cf8ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x2ce0 ; "AWAVAUATUS\x89\xfdH\x89\xf3H\x81\xec\x18\x01"
0x000034a4      ff152e8b2100   call qword [reloc.__libc_start_main]    ; [0x21bfd8:8]=0
0x000034aa      f4             hlt
0x000034ab      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x000034b0      488d3df18b21.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x21c0a8
0x000034b7      55             push rbp
0x000034b8      488d05e98b21.  lea rax, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x21c0a8
0x000034bf      4839f8         cmp rax, rdi
0x000034c2      4889e5         mov rbp, rsp
0x000034c5      7419           je 0x34e0
0x000034c7      488b05028b21.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x21bfd0:8]=0
0x000034ce      4885c0         test rax, rax
0x000034d1      740d           je 0x34e0
0x000034d3      5d             pop rbp
0x000034d4      ffe0           jmp rax
0x000034d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000034e0      5d             pop rbp
0x000034e1      c3             ret
0x000034e2      0f1f4000       nop dword [rax]
0x000034e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x000034f0      488d3db18b21.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x21c0a8
0x000034f7      488d35aa8b21.  lea rsi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x21c0a8
0x000034fe      55             push rbp
0x000034ff      4829fe         sub rsi, rdi
0x00003502      4889e5         mov rbp, rsp
0x00003505      48c1fe03       sar rsi, 3
0x00003509      4889f0         mov rax, rsi
0x0000350c      48c1e83f       shr rax, 0x3f
0x00003510      4801c6         add rsi, rax
0x00003513      48d1fe         sar rsi, 1
0x00003516      7418           je 0x3530
0x00003518      488b05c98a21.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x21bfe8:8]=0
0x0000351f      4885c0         test rax, rax
0x00003522      740c           je 0x3530
0x00003524      5d             pop rbp
0x00003525      ffe0           jmp rax
0x00003527      660f1f840000.  nop word [rax + rax]
0x00003530      5d             pop rbp
0x00003531      c3             ret
0x00003532      0f1f4000       nop dword [rax]
0x00003536      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00003540      803dc18b2100.  cmp byte [obj.completed.7697], 0        ; [0x21c108:1]=0
0x00003547      752f           jne 0x3578
0x00003549      48833d9f8a21.  cmp qword [reloc.__cxa_finalize], 0     ; [0x21bff0:8]=0
0x00003551      55             push rbp
0x00003552      4889e5         mov rbp, rsp
0x00003555      740c           je 0x3563
0x00003557      488b3daa8a21.  mov rdi, qword [obj.__dso_handle]       ; [0x21c008:8]=0x21c008 obj.__dso_handle
0x0000355e      e825f7ffff     call 0x2c88
0x00003563      e848ffffff     call sym.deregister_tm_clones
0x00003568      c605998b2100.  mov byte [obj.completed.7697], 1        ; [0x21c108:1]=0
0x0000356f      5d             pop rbp
0x00003570      c3             ret
0x00003571      0f1f80000000.  nop dword [rax]
0x00003578      f3c3           ret
0x0000357a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00003580      55             push rbp
0x00003581      4889e5         mov rbp, rsp
0x00003584      5d             pop rbp
0x00003585      e966ffffff     jmp sym.register_tm_clones
0x0000358a      660f1f440000   nop word [rax + rax]
;-- do_move:
0x00003590      55             push rbp                                ; /src:170
0x00003591      53             push rbx
0x00003592      4889d1         mov rcx, rdx                            ; /src:173
0x00003595      4889d5         mov rbp, rdx                            ; /src:170
0x00003598      31d2           xor edx, edx                            ; /src:173
0x0000359a      4889fb         mov rbx, rdi                            ; /src:170
0x0000359d      4883ec58       sub rsp, 0x58
0x000035a1      4c8d4c240f     lea r9, [rsp + 0xf]                     ; /src:173
0x000035a6      4c8d44240e     lea r8, [rsp + 0xe]
0x000035ab      64488b042528.  mov rax, qword fs:[0x28]                ; /src:170
0x000035b4      4889442448     mov qword [rsp + 0x48], rax
0x000035b9      31c0           xor eax, eax
0x000035bb      e890640000     call sym.copy                           ; /src:173
0x000035c0      84c0           test al, al                             ; /src:175
0x000035c2      0f8498000000   je 0x3660
0x000035c8      807c240e00     cmp byte [rsp + 0xe], 0                 ; /src:178
0x000035cd      0f85ad000000   jne 0x3680
0x000035d3      807c240f01     cmp byte [rsp + 0xf], 1                 ; /src:227
0x000035d8      0f8482000000   je 0x3660
0x000035de      4885db         test rbx, rbx
0x000035e1      747d           je 0x3660
0x000035e3      488d3d268b21.  lea rdi, obj.dev_ino_buf.7162           ; /src:97 ; 0x21c110
0x000035ea      c644241000     mov byte [rsp + 0x10], 0                ; /src:77
0x000035ef      c644241a01     mov byte [rsp + 0x1a], 1                ; /src:78
0x000035f4      c644241901     mov byte [rsp + 0x19], 1                ; /src:79
0x000035f9      c644241800     mov byte [rsp + 0x18], 0                ; /src:80
0x000035fe      c74424140500.  mov dword [rsp + 0x14], 5               ; /src:84
0x00003606      c644242900     mov byte [rsp + 0x29], 0                ; /src:85
0x0000360b      c644242a00     mov byte [rsp + 0x2a], 0                ; /src:87
0x00003610      c644242b01     mov byte [rsp + 0x2b], 1                ; /src:93
0x00003615      e816b60000     call sym.get_root_dev_ino               ; /src:97
0x0000361a      4885c0         test rax, rax                           ; /src:98
0x0000361d      4889442420     mov qword [rsp + 0x20], rax             ; /src:97
0x00003622      0f8480000000   je 0x36a8                               ; /src:98
0x00003628      0fb6452e       movzx eax, byte [rbp + 0x2e]            ; /src:234
0x0000362c      488d742410     lea rsi, [rsp + 0x10]                   ; /src:238
0x00003631      488d7c2430     lea rdi, [rsp + 0x30]
0x00003636      c644242800     mov byte [rsp + 0x28], 0                ; /src:103
0x0000363b      48895c2430     mov qword [rsp + 0x30], rbx             ; /src:235
0x00003640      48c744243800.  mov qword [rsp + 0x38], 0               ; /src:236
0x00003649      8844242a       mov byte [rsp + 0x2a], al               ; /src:234
0x0000364d      e8fe0c0000     call sym.rm                             ; /src:238
0x00003652      8d50fe         lea edx, [rax - 2]                      ; /src:239
0x00003655      83fa02         cmp edx, 2
0x00003658      772f           ja 0x3689
0x0000365a      83f804         cmp eax, 4                              ; /src:240
0x0000365d      0f95c0         setne al
0x00003660      488b4c2448     mov rcx, qword [rsp + 0x48]             ; /src:246
0x00003665      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000366e      7514           jne 0x3684
0x00003670      4883c458       add rsp, 0x58
0x00003674      5b             pop rbx
0x00003675      5d             pop rbp
0x00003676      c3             ret
0x00003677      660f1f840000.  nop word [rax + rax]
0x00003680      31c0           xor eax, eax
0x00003682      ebdc           jmp 0x3660                              ; /src:245
0x00003684      e8f7f0ffff     call sym.imp.__stack_chk_fail           ; /src:246
0x00003689      488d0df82301.  lea rcx, obj.__PRETTY_FUNCTION__.7189   ; /src:239 ; 0x15a88 ; "do_move"
0x00003690      488d356d1801.  lea rsi, str..._coreutils_8.31_src_mv.c ; 0x14f04 ; "../coreutils-8.31/src/mv.c"
0x00003697      488d3d811801.  lea rdi, str.VALID_STATUS__status       ; 0x14f1f ; "VALID_STATUS (status)"
0x0000369e      baef000000     mov edx, 0xef
0x000036a3      e878f1ffff     call sym.imp.__assert_fail
0x000036a8      488d35df3301.  lea rsi, [0x00016a8e]                   ; /src:99 ; "/"
0x000036af      bf04000000     mov edi, 4
0x000036b4      e817b00000     call sym.quotearg_style
0x000036b9      488d35581a01.  lea rsi, str.failed_to_get_attributes_of__s ; 0x15118 ; "failed to get attributes of %s"
0x000036c0      ba05000000     mov edx, 5
0x000036c5      31ff           xor edi, edi
0x000036c7      4889c5         mov rbp, rax
0x000036ca      e861f0ffff     call sym.imp.dcgettext
0x000036cf      4889c3         mov rbx, rax
0x000036d2      e8c9eeffff     call sym.imp.__errno_location
0x000036d7      8b30           mov esi, dword [rax]
0x000036d9      4889e9         mov rcx, rbp
0x000036dc      4889da         mov rdx, rbx
0x000036df      bf01000000     mov edi, 1
0x000036e4      31c0           xor eax, eax
0x000036e6      e825f4ffff     call sym.imp.error
0x000036eb      0f1f440000     nop dword [rax + rax]
;-- movefile:
0x000036f0      4154           push r12                                ; /src:255
0x000036f2      55             push rbp
0x000036f3      4989cc         mov r12, rcx
0x000036f6      53             push rbx
0x000036f7      4889f5         mov rbp, rsi
0x000036fa      4889fb         mov rbx, rdi
0x000036fd      4883ec10       sub rsp, 0x10
0x00003701      803d188a2100.  cmp byte [obj.remove_trailing_slashes], 0 ; /src:265 ; [0x21c120:1]=0
0x00003708      7566           jne 0x3770
0x0000370a      84d2           test dl, dl                             ; /src:268
0x0000370c      751a           jne 0x3728
0x0000370e      4883c410       add rsp, 0x10                           ; /src:283
0x00003712      4c89e2         mov rdx, r12                            ; /src:279
0x00003715      4889ee         mov rsi, rbp
0x00003718      4889df         mov rdi, rbx
0x0000371b      5b             pop rbx                                 ; /src:283
0x0000371c      5d             pop rbp
0x0000371d      415c           pop r12
0x0000371f      e96cfeffff     jmp sym.do_move                         ; /src:279
0x00003724      0f1f4000       nop dword [rax]
0x00003728      4889df         mov rdi, rbx                            ; /src:271
0x0000372b      e890790000     call sym.last_component
0x00003730      31d2           xor edx, edx                            ; /src:272
0x00003732      4889c6         mov rsi, rax
0x00003735      4889ef         mov rdi, rbp
0x00003738      e8a37e0000     call sym.file_name_concat
0x0000373d      4889c5         mov rbp, rax
0x00003740      4889c7         mov rdi, rax                            ; /src:273
0x00003743      e8287a0000     call sym.strip_trailing_slashes
0x00003748      4c89e2         mov rdx, r12                            ; /src:274
0x0000374b      4889ee         mov rsi, rbp
0x0000374e      4889df         mov rdi, rbx
0x00003751      e83afeffff     call sym.do_move
0x00003756      4889ef         mov rdi, rbp                            ; /src:275
0x00003759      89c3           mov ebx, eax                            ; /src:274
0x0000375b      e820f5ffff     call sym..plt.got                       ; /src:275
0x00003760      4883c410       add rsp, 0x10                           ; /src:283
0x00003764      89d8           mov eax, ebx
0x00003766      5b             pop rbx
0x00003767      5d             pop rbp
0x00003768      415c           pop r12
0x0000376a      c3             ret
0x0000376b      0f1f440000     nop dword [rax + rax]
0x00003770      8954240c       mov dword [rsp + 0xc], edx
0x00003774      e8f7790000     call sym.strip_trailing_slashes         ; /src:266
0x00003779      8b54240c       mov edx, dword [rsp + 0xc]
0x0000377d      eb8b           jmp 0x370a
0x0000377f      90             nop
;-- usage:
0x00003780      4155           push r13                                ; /src:287
0x00003782      4154           push r12
0x00003784      ba05000000     mov edx, 5                              ; /src:289
0x00003789      55             push rbp                                ; /src:287
0x0000378a      53             push rbx
0x0000378b      89fd           mov ebp, edi
0x0000378d      4881ec880000.  sub rsp, 0x88
0x00003794      488b1de58d21.  mov rbx, qword [obj.program_name]       ; [0x21c580:8]=0
0x0000379b      64488b042528.  mov rax, qword fs:[0x28]
0x000037a4      4889442478     mov qword [rsp + 0x78], rax
0x000037a9      31c0           xor eax, eax
0x000037ab      85ff           test edi, edi                           ; /src:288
0x000037ad      742e           je 0x37dd
0x000037af      488d35821901.  lea rsi, str.Try___s___help__for_more_information. ; /src:289 ; 0x15138 ; "Try '%s --help' for more information.\n"
0x000037b6      31ff           xor edi, edi
0x000037b8      e873efffff     call sym.imp.dcgettext
0x000037bd      488b3d3c8921.  mov rdi, qword [obj.stderr]             ; .//coreutils-8.31/lib:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c100:8]=0
0x000037c4      4889c2         mov rdx, rax
0x000037c7      4889d9         mov rcx, rbx
0x000037ca      be01000000     mov esi, 1
0x000037cf      31c0           xor eax, eax
0x000037d1      e84af4ffff     call sym.imp.__fprintf_chk
0x000037d6      89ef           mov edi, ebp                            ; /src:333
0x000037d8      e823f4ffff     call sym.imp.exit
0x000037dd      488d357c1901.  lea rsi, str.Usage:__s__OPTION_...___T__SOURCE_DEST____or:___s__OPTION_..._SOURCE..._DIRECTORY____or:___s__OPTION_...__t_DIRECTORY_SOURCE... ; /src:292 ; 0x15160 ; "Usage: %s [OPTION]... [-T] SOURCE DEST\n  or:  %s [OPTION]... SOURCE... DIRECTORY\n  or:  %s [OPTION]... -t DIRECTORY SOURCE...\n"
0x000037e4      31ff           xor edi, edi
0x000037e6      e845efffff     call sym.imp.dcgettext
0x000037eb      4889d9         mov rcx, rbx                            ; .//coreutils-8.31/lib:104
0x000037ee      4989d8         mov r8, rbx
0x000037f1      4889da         mov rdx, rbx
0x000037f4      4889c6         mov rsi, rax
0x000037f7      bf01000000     mov edi, 1
0x000037fc      31c0           xor eax, eax
0x000037fe      e8adf2ffff     call sym.imp.__printf_chk
0x00003803      488b1dbe8821.  mov rbx, qword [obj.stdout]             ; /src:298 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0c8:8]=0
0x0000380a      488d35cf1901.  lea rsi, str.Rename_SOURCE_to_DEST__or_move_SOURCE_s__to_DIRECTORY. ; 0x151e0 ; "Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY.\n"
0x00003811      ba05000000     mov edx, 5
0x00003816      31ff           xor edi, edi
0x00003818      e813efffff     call sym.imp.dcgettext
0x0000381d      4889de         mov rsi, rbx
0x00003820      4889c7         mov rdi, rax
0x00003823      e8c8f0ffff     call sym.imp.fputs_unlocked
0x00003828      488b1d998821.  mov rbx, qword [obj.stdout]             ; ../coreutils-8.31/src/.c:587 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0c8:8]=0
0x0000382f      488d35e21901.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x15218 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00003836      ba05000000     mov edx, 5
0x0000383b      31ff           xor edi, edi
0x0000383d      e8eeeeffff     call sym.imp.dcgettext
0x00003842      4889de         mov rsi, rbx
0x00003845      4889c7         mov rdi, rax
0x00003848      e8a3f0ffff     call sym.imp.fputs_unlocked
0x0000384d      488b1d748821.  mov rbx, qword [obj.stdout]             ; /src:304 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0c8:8]=0
0x00003854      488d350d1a01.  lea rsi, str.backup__CONTROL________make_a_backup_of_each_existing_destination_file_____b___________________________like___backup_but_does_not_accept_an_argument_____f____force__________________do_not_prompt_before_overwriting_____i____interactive____________prompt_before_overwrite_____n____no_clobber_____________do_not_overwrite_an_existing_file__If_you_specify_more_than_one_of__i___f___n__only_the_final_one_takes_effect. ; 0x15268 ; "      --backup[=CONTROL]       make a backup of each existing destination file\n  -b                           like --backup but does not accept an argument\n  -f, --force                  do not prompt before overwriting\n  -i, --interactive            prompt before overwrite\n  -n, --no-clobber             do not overwrite an existing file\nIf you specify more than one of -i, -f, -n, only the final one takes effect.\n"
0x0000385b      ba05000000     mov edx, 5
0x00003860      31ff           xor edi, edi
0x00003862      e8c9eeffff     call sym.imp.dcgettext
0x00003867      4889de         mov rsi, rbx
0x0000386a      4889c7         mov rdi, rax
0x0000386d      e87ef0ffff     call sym.imp.fputs_unlocked
0x00003872      488b1d4f8821.  mov rbx, qword [obj.stdout]             ; /src:313 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0c8:8]=0
0x00003879      488d35901b01.  lea rsi, str.strip_trailing_slashes__remove_any_trailing_slashes_from_each_SOURCE___________________________________argument_____S____suffix_SUFFIX__________override_the_usual_backup_suffix ; 0x15410 ; "      --strip-trailing-slashes  remove any trailing slashes from each SOURCE\n                                 argument\n  -S, --suffix=SUFFIX          override the usual backup suffix\n"
0x00003880      ba05000000     mov edx, 5
0x00003885      31ff           xor edi, edi
0x00003887      e8a4eeffff     call sym.imp.dcgettext
0x0000388c      4889de         mov rsi, rbx
0x0000388f      4889c7         mov rdi, rax
0x00003892      e859f0ffff     call sym.imp.fputs_unlocked
0x00003897      488b1d2a8821.  mov rbx, qword [obj.stdout]             ; /src:318 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0c8:8]=0
0x0000389e      488d35231c01.  lea rsi, str.t____target_directory_DIRECTORY__move_all_SOURCE_arguments_into_DIRECTORY_____T____no_target_directory____treat_DEST_as_a_normal_file_____u____update_________________move_only_when_the_SOURCE_file_is_newer___________________________________than_the_destination_file_or_when_the___________________________________destination_file_is_missing_____v____verbose________________explain_what_is_being_done_____Z____context________________set_SELinux_security_context_of_destination___________________________________file_to_default_type ; 0x154c8 ; "  -t, --target-directory=DIRECTORY  move all SOURCE arguments into DIRECTORY\n  -T, --no-target-directory    treat DEST as a normal file\n  -u, --update                 move only when the SOURCE file is newer\n                                 than the destination file or when the\n                                 destination file is missing\n  -v, --verbose                explain what is being done\n  -Z, --context                set SELinux security context of destination\n                                 file to default type\n"
0x000038a5      ba05000000     mov edx, 5
0x000038aa      31ff           xor edi, edi
0x000038ac      e87feeffff     call sym.imp.dcgettext
0x000038b1      4889de         mov rsi, rbx
0x000038b4      4889c7         mov rdi, rax
0x000038b7      e834f0ffff     call sym.imp.fputs_unlocked
0x000038bc      488b1d058821.  mov rbx, qword [obj.stdout]             ; /src:328 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0c8:8]=0
0x000038c3      488d350e1e01.  lea rsi, str.help_____display_this_help_and_exit ; 0x156d8 ; "      --help     display this help and exit\n"
0x000038ca      ba05000000     mov edx, 5
0x000038cf      31ff           xor edi, edi
0x000038d1      e85aeeffff     call sym.imp.dcgettext
0x000038d6      4889de         mov rsi, rbx
0x000038d9      4889c7         mov rdi, rax
0x000038dc      e80ff0ffff     call sym.imp.fputs_unlocked
0x000038e1      488b1de08721.  mov rbx, qword [obj.stdout]             ; /src:329 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0c8:8]=0
0x000038e8      488d35191e01.  lea rsi, str.version__output_version_information_and_exit ; 0x15708 ; "      --version  output version information and exit\n"
0x000038ef      ba05000000     mov edx, 5
0x000038f4      31ff           xor edi, edi
0x000038f6      e835eeffff     call sym.imp.dcgettext
0x000038fb      4889de         mov rsi, rbx
0x000038fe      4889c7         mov rdi, rax
0x00003901      e8eaefffff     call sym.imp.fputs_unlocked
0x00003906      488b1dbb8721.  mov rbx, qword [obj.stdout]             ; ../coreutils-8.31/src/.c:615 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0c8:8]=0
0x0000390d      488d352c1e01.  lea rsi, str.The_backup_suffix_is______unless_set_with___suffix_or_SIMPLE_BACKUP_SUFFIX.__The_version_control_method_may_be_selected_via_the___backup_option_or_through__the_VERSION_CONTROL_environment_variable.__Here_are_the_values: ; 0x15740 ; "\nThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\nThe version control method may be selected via the --backup option or through\nthe VERSION_CONTROL environment variable.  Here are the values:\n\n"
0x00003914      ba05000000     mov edx, 5
0x00003919      31ff           xor edi, edi
0x0000391b      e810eeffff     call sym.imp.dcgettext
0x00003920      4889de         mov rsi, rbx
0x00003923      4889c7         mov rdi, rax
0x00003926      e8c5efffff     call sym.imp.fputs_unlocked
0x0000392b      488b1d968721.  mov rbx, qword [obj.stdout]             ; ../coreutils-8.31/src/.c:622 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0c8:8]=0
0x00003932      488d35e71e01.  lea rsi, str.none__off_______never_make_backups__even_if___backup_is_given_____numbered__t_____make_numbered_backups____existing__nil___numbered_if_numbered_backups_exist__simple_otherwise____simple__never___always_make_simple_backups ; 0x15820 ; "  none, off       never make backups (even if --backup is given)\n  numbered, t     make numbered backups\n  existing, nil   numbered if numbered backups exist, simple otherwise\n  simple, never   always make simple backups\n"
0x00003939      ba05000000     mov edx, 5
0x0000393e      31ff           xor edi, edi
0x00003940      e8ebedffff     call sym.imp.dcgettext
0x00003945      4889de         mov rsi, rbx
0x00003948      4889c7         mov rdi, rax
0x0000394b      488d1de31501.  lea rbx, [0x00014f35]                   ; "mv"
0x00003952      e899efffff     call sym.imp.fputs_unlocked
0x00003957      488d05da1501.  lea rax, [0x00014f38]                   ; ../coreutils-8.31/src/.c:633 ; "["
0x0000395e      488d0d141601.  lea rcx, str.sha256sum                  ; 0x14f79 ; "sha256sum"
0x00003965      48c744246000.  mov qword [rsp + 0x60], 0
0x0000396e      48c744246800.  mov qword [rsp + 0x68], 0
0x00003977      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/src/.c:644
0x0000397a      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/src/.c:633
0x0000397e      488d05b51501.  lea rax, [0x00014f3a]                   ; "test invocation"
0x00003985      48894c2430     mov qword [rsp + 0x30], rcx
0x0000398a      488d0df21501.  lea rcx, str.sha384sum                  ; 0x14f83 ; "sha384sum"
0x00003991      4889442408     mov qword [rsp + 8], rax
0x00003996      488d05151601.  lea rax, [0x00014fb2]                   ; "coreutils"
0x0000399d      48894c2440     mov qword [rsp + 0x40], rcx
0x000039a2      488d0de41501.  lea rcx, str.sha512sum                  ; 0x14f8d ; "sha512sum"
0x000039a9      4889442410     mov qword [rsp + 0x10], rax
0x000039ae      488d05951501.  lea rax, [0x00014f4a]                   ; "Multi-call invocation"
0x000039b5      48894c2450     mov qword [rsp + 0x50], rcx
0x000039ba      4889442418     mov qword [rsp + 0x18], rax
0x000039bf      488d059a1501.  lea rax, str.sha224sum                  ; 0x14f60 ; "sha224sum"
0x000039c6      4889442420     mov qword [rsp + 0x20], rax
0x000039cb      488d05981501.  lea rax, str.sha2_utilities             ; 0x14f6a ; "sha2 utilities"
0x000039d2      4889442428     mov qword [rsp + 0x28], rax
0x000039d7      4889442438     mov qword [rsp + 0x38], rax
0x000039dc      4889442448     mov qword [rsp + 0x48], rax
0x000039e1      4889442458     mov qword [rsp + 0x58], rax
0x000039e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000039f0      4883c210       add rdx, 0x10                           ; ../coreutils-8.31/src/.c:647
0x000039f4      488b3a         mov rdi, qword [rdx]                    ; ../coreutils-8.31/src/.c:646
0x000039f7      4885ff         test rdi, rdi
0x000039fa      7413           je 0x3a0f
0x000039fc      b903000000     mov ecx, 3
0x00003a01      4889de         mov rsi, rbx
0x00003a04      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003a06      0f97c0         seta al
0x00003a09      1c00           sbb al, 0
0x00003a0b      84c0           test al, al
0x00003a0d      75e1           jne 0x39f0
0x00003a0f      4c8b6208       mov r12, qword [rdx + 8]                ; ../coreutils-8.31/src/.c:649
0x00003a13      31ff           xor edi, edi                            ; ../coreutils-8.31/src/.c:652
0x00003a15      ba05000000     mov edx, 5
0x00003a1a      488d35761501.  lea rsi, str.s_online_help:___s         ; 0x14f97 ; "\n%s online help: <%s>\n"
0x00003a21      4d85e4         test r12, r12                           ; ../coreutils-8.31/src/.c:649
0x00003a24      0f84c1000000   je 0x3aeb
0x00003a2a      e801edffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/.c:652
0x00003a2f      488d0dca1e01.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//coreutils-8.31/lib:104 ; 0x15900 ; "https://www.gnu.org/software/coreutils/"
0x00003a36      488d15711501.  lea rdx, str.GNU_coreutils              ; 0x14fae ; "GNU coreutils"
0x00003a3d      4889c6         mov rsi, rax
0x00003a40      bf01000000     mov edi, 1
0x00003a45      31c0           xor eax, eax
0x00003a47      e864f0ffff     call sym.imp.__printf_chk
0x00003a4c      31f6           xor esi, esi                            ; ../coreutils-8.31/src/.c:656
0x00003a4e      bf05000000     mov edi, 5
0x00003a53      e848f0ffff     call sym.imp.setlocale
0x00003a58      4885c0         test rax, rax                           ; ../coreutils-8.31/src/.c:657
0x00003a5b      741c           je 0x3a79
0x00003a5d      488d35581501.  lea rsi, [0x00014fbc]                   ; "en_"
0x00003a64      ba03000000     mov edx, 3
0x00003a69      4889c7         mov rdi, rax
0x00003a6c      e84febffff     call sym.imp.strncmp
0x00003a71      85c0           test eax, eax
0x00003a73      0f8507010000   jne 0x3b80
0x00003a79      488d35401501.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/.c:666 ; 0x14fc0 ; "Full documentation <%s%s>\n"
0x00003a80      31ff           xor edi, edi
0x00003a82      ba05000000     mov edx, 5
0x00003a87      e8a4ecffff     call sym.imp.dcgettext
0x00003a8c      488d0da21401.  lea rcx, [0x00014f35]                   ; .//coreutils-8.31/lib:104 ; "mv"
0x00003a93      488d15661e01.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x15900 ; "https://www.gnu.org/software/coreutils/"
0x00003a9a      4889c6         mov rsi, rax
0x00003a9d      bf01000000     mov edi, 1
0x00003aa2      31c0           xor eax, eax
0x00003aa4      e807f0ffff     call sym.imp.__printf_chk
0x00003aa9      4939dc         cmp r12, rbx                            ; ../coreutils-8.31/src/.c:668
0x00003aac      488d0da11401.  lea rcx, [0x00014f54]                   ; " invocation"
0x00003ab3      488d1dd22c01.  lea rbx, [0x0001678c]
0x00003aba      480f44d9       cmove rbx, rcx
0x00003abe      488d35ab1e01.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x15970 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00003ac5      31ff           xor edi, edi
0x00003ac7      ba05000000     mov edx, 5
0x00003acc      e85fecffff     call sym.imp.dcgettext
0x00003ad1      4889d9         mov rcx, rbx                            ; .//coreutils-8.31/lib:104
0x00003ad4      4889c6         mov rsi, rax
0x00003ad7      4c89e2         mov rdx, r12
0x00003ada      bf01000000     mov edi, 1
0x00003adf      31c0           xor eax, eax
0x00003ae1      e8caefffff     call sym.imp.__printf_chk
0x00003ae6      e9ebfcffff     jmp 0x37d6
0x00003aeb      e840ecffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/.c:652
0x00003af0      488d0d091e01.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//coreutils-8.31/lib:104 ; 0x15900 ; "https://www.gnu.org/software/coreutils/"
0x00003af7      488d15b01401.  lea rdx, str.GNU_coreutils              ; 0x14fae ; "GNU coreutils"
0x00003afe      4889c6         mov rsi, rax
0x00003b01      bf01000000     mov edi, 1
0x00003b06      31c0           xor eax, eax
0x00003b08      e8a3efffff     call sym.imp.__printf_chk
0x00003b0d      31f6           xor esi, esi                            ; ../coreutils-8.31/src/.c:656
0x00003b0f      bf05000000     mov edi, 5
0x00003b14      e887efffff     call sym.imp.setlocale
0x00003b19      4885c0         test rax, rax                           ; ../coreutils-8.31/src/.c:657
0x00003b1c      7418           je 0x3b36
0x00003b1e      488d35971401.  lea rsi, [0x00014fbc]                   ; "en_"
0x00003b25      ba03000000     mov edx, 3
0x00003b2a      4889c7         mov rdi, rax
0x00003b2d      e88eeaffff     call sym.imp.strncmp
0x00003b32      85c0           test eax, eax
0x00003b34      7543           jne 0x3b79
0x00003b36      488d35831401.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/.c:666 ; 0x14fc0 ; "Full documentation <%s%s>\n"
0x00003b3d      ba05000000     mov edx, 5
0x00003b42      31ff           xor edi, edi
0x00003b44      4c8d25ea1301.  lea r12, [0x00014f35]                   ; ../coreutils-8.31/src/.c:643 ; "mv"
0x00003b4b      488d1d021401.  lea rbx, [0x00014f54]                   ; ../coreutils-8.31/src/.c:668 ; " invocation"
0x00003b52      e8d9ebffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/.c:666
0x00003b57      488d0dd71301.  lea rcx, [0x00014f35]                   ; .//coreutils-8.31/lib:104 ; "mv"
0x00003b5e      488d159b1d01.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x15900 ; "https://www.gnu.org/software/coreutils/"
0x00003b65      4889c6         mov rsi, rax
0x00003b68      bf01000000     mov edi, 1
0x00003b6d      31c0           xor eax, eax
0x00003b6f      e83cefffff     call sym.imp.__printf_chk
0x00003b74      e945ffffff     jmp 0x3abe
0x00003b79      4c8d25b51301.  lea r12, [0x00014f35]                   ; ../coreutils-8.31/src/.c:643 ; "mv"
0x00003b80      4c8b2d418521.  mov r13, qword [obj.stdout]             ; ../coreutils-8.31/src/.c:663 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0c8:8]=0
0x00003b87      488d359a1d01.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x15928 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00003b8e      31ff           xor edi, edi
0x00003b90      ba05000000     mov edx, 5
0x00003b95      e896ebffff     call sym.imp.dcgettext
0x00003b9a      4c89ee         mov rsi, r13
0x00003b9d      4889c7         mov rdi, rax
0x00003ba0      e84bedffff     call sym.imp.fputs_unlocked
0x00003ba5      e9cffeffff     jmp 0x3a79
0x00003baa      660f1f440000   nop word [rax + rax]
;-- excise:
0x00003bb0      4155           push r13                                ; /src:368
0x00003bb2      4154           push r12
0x00003bb4      4989d5         mov r13, rdx
0x00003bb7      55             push rbp
0x00003bb8      53             push rbx
0x00003bb9      31d2           xor edx, edx                            ; /src:369
0x00003bbb      4989fc         mov r12, rdi                            ; /src:368
0x00003bbe      4889f3         mov rbx, rsi
0x00003bc1      89cd           mov ebp, ecx
0x00003bc3      4881eca80000.  sub rsp, 0xa8
0x00003bca      488b7630       mov rsi, qword [rsi + 0x30]             ; /src:370
0x00003bce      8b7f2c         mov edi, dword [rdi + 0x2c]
0x00003bd1      64488b042528.  mov rax, qword fs:[0x28]                ; /src:368
0x00003bda      488984249800.  mov qword [rsp + 0x98], rax
0x00003be2      31c0           xor eax, eax
0x00003be4      84c9           test cl, cl                             ; /src:369
0x00003be6      0f95c2         setne dl
0x00003be9      c1e209         shl edx, 9
0x00003bec      e82feaffff     call sym.imp.unlinkat                   ; /src:370
0x00003bf1      85c0           test eax, eax
0x00003bf3      753b           jne 0x3c30
0x00003bf5      41807d1a00     cmp byte [r13 + 0x1a], 0                ; /src:372
0x00003bfa      b802000000     mov eax, 2                              ; /src:378
0x00003bff      0f85e3000000   jne 0x3ce8                              ; /src:372
0x00003c05      488b8c249800.  mov rcx, qword [rsp + 0x98]             ; /src:409
0x00003c0d      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003c16      0f85dc010000   jne 0x3df8
0x00003c1c      4881c4a80000.  add rsp, 0xa8
0x00003c23      5b             pop rbx
0x00003c24      5d             pop rbp
0x00003c25      415c           pop r12
0x00003c27      415d           pop r13
0x00003c29      c3             ret
0x00003c2a      660f1f440000   nop word [rax + rax]
0x00003c30      e86be9ffff     call sym.imp.__errno_location           ; /src:385
0x00003c35      8b10           mov edx, dword [rax]
0x00003c37      4889c5         mov rbp, rax
0x00003c3a      83fa1e         cmp edx, 0x1e
0x00003c3d      0f84f5000000   je 0x3d38
0x00003c43      41807d0000     cmp byte [r13], 0                       ; /src:336
0x00003c48      7426           je 0x3c70
0x00003c4a      83fa14         cmp edx, 0x14                           ; /src:320
0x00003c4d      0f8466010000   je 0x3db9
0x00003c53      0f8e57010000   jle 0x3db0
0x00003c59      83fa16         cmp edx, 0x16
0x00003c5c      0f8457010000   je 0x3db9
0x00003c62      83fa54         cmp edx, 0x54
0x00003c65      0f844e010000   je 0x3db9
0x00003c6b      0f1f440000     nop dword [rax + rax]
0x00003c70      66837b7004     cmp word [rbx + 0x70], 4
0x00003c75      0f84f5000000   je 0x3d70
0x00003c7b      488b7338       mov rsi, qword [rbx + 0x38]
0x00003c7f      bf04000000     mov edi, 4
0x00003c84      e847aa0000     call sym.quotearg_style
0x00003c89      488d35271e01.  lea rsi, str.cannot_remove__s           ; 0x15ab7 ; "cannot remove %s"
0x00003c90      31ff           xor edi, edi
0x00003c92      ba05000000     mov edx, 5
0x00003c97      4989c4         mov r12, rax
0x00003c9a      e891eaffff     call sym.imp.dcgettext                  ; /src:231
0x00003c9f      8b7500         mov esi, dword [rbp]
0x00003ca2      4889c2         mov rdx, rax                            ; /src:227
0x00003ca5      31ff           xor edi, edi
0x00003ca7      31c0           xor eax, eax
0x00003ca9      4c89e1         mov rcx, r12
0x00003cac      e85feeffff     call sym.imp.error
0x00003cb1      488b4308       mov rax, qword [rbx + 8]
0x00003cb5      4883785800     cmp qword [rax + 0x58], 0
0x00003cba      7917           jns 0x3cd3
0x00003cbc      eb1c           jmp 0x3cda
0x00003cbe      6690           nop
0x00003cc0      48c740200100.  mov qword [rax + 0x20], 1
0x00003cc8      488b4008       mov rax, qword [rax + 8]
0x00003ccc      4883785800     cmp qword [rax + 0x58], 0
0x00003cd1      7807           js 0x3cda
0x00003cd3      4883782000     cmp qword [rax + 0x20], 0
0x00003cd8      74e6           je 0x3cc0
0x00003cda      b804000000     mov eax, 4
0x00003cdf      e921ffffff     jmp 0x3c05
0x00003ce4      0f1f4000       nop dword [rax]
0x00003ce8      488b7338       mov rsi, qword [rbx + 0x38]
0x00003cec      bf04000000     mov edi, 4
0x00003cf1      e8daa90000     call sym.quotearg_style
0x00003cf6      4084ed         test bpl, bpl
0x00003cf9      4889c3         mov rbx, rax
0x00003cfc      ba05000000     mov edx, 5
0x00003d01      0f84c1000000   je 0x3dc8                               ; /src:250
0x00003d07      488d35871d01.  lea rsi, str.removed_directory__s       ; 0x15a95 ; "removed directory %s\n"
0x00003d0e      31ff           xor edi, edi
0x00003d10      e81beaffff     call sym.imp.dcgettext
0x00003d15      4889c6         mov rsi, rax
0x00003d18      4889da         mov rdx, rbx
0x00003d1b      bf01000000     mov edi, 1
0x00003d20      31c0           xor eax, eax
0x00003d22      e889edffff     call sym.imp.__printf_chk
0x00003d27      b802000000     mov eax, 2
0x00003d2c      e9d4feffff     jmp 0x3c05
0x00003d31      0f1f80000000.  nop dword [rax]
0x00003d38      488b5330       mov rdx, qword [rbx + 0x30]
0x00003d3c      418b74242c     mov esi, dword [r12 + 0x2c]
0x00003d41      4889e1         mov rcx, rsp
0x00003d44      41b800010000   mov r8d, 0x100
0x00003d4a      bf01000000     mov edi, 1
0x00003d4f      e86ceaffff     call sym.imp.__fxstatat
0x00003d54      85c0           test eax, eax
0x00003d56      7408           je 0x3d60                               ; /src:148
0x00003d58      8b5500         mov edx, dword [rbp]
0x00003d5b      83fa02         cmp edx, 2
0x00003d5e      747b           je 0x3ddb
0x00003d60      c745001e0000.  mov dword [rbp], 0x1e
0x00003d67      e90fffffff     jmp 0x3c7b                              ; /src:149
0x00003d6c      0f1f4000       nop dword [rax]
0x00003d70      83fa27         cmp edx, 0x27
0x00003d73      0f8702ffffff   ja 0x3c7b
0x00003d79      48b800003200.  movabs rax, 0x8000320000                ; /src:64
0x00003d83      480fa3d0       bt rax, rdx
0x00003d87      0f83eefeffff   jae 0x3c7b
0x00003d8d      8b4340         mov eax, dword [rbx + 0x40]
0x00003d90      83f801         cmp eax, 1
0x00003d93      7409           je 0x3d9e
0x00003d95      83f80d         cmp eax, 0xd                            ; /src:16
0x00003d98      0f85ddfeffff   jne 0x3c7b
0x00003d9e      894500         mov dword [rbp], eax
0x00003da1      e9d5feffff     jmp 0x3c7b
0x00003da6      662e0f1f8400.  nop word cs:[rax + rax]
0x00003db0      83fa02         cmp edx, 2
0x00003db3      0f85b7feffff   jne 0x3c70
0x00003db9      b802000000     mov eax, 2
0x00003dbe      e942feffff     jmp 0x3c05
0x00003dc3      0f1f440000     nop dword [rax + rax]
0x00003dc8      488d35dc1c01.  lea rsi, str.removed__s                 ; /src:-417 ; 0x15aab ; "removed %s\n"
0x00003dcf      31ff           xor edi, edi                            ; /src:-413
0x00003dd1      e85ae9ffff     call sym.imp.dcgettext
0x00003dd6      e93affffff     jmp 0x3d15
0x00003ddb      41807d0000     cmp byte [r13], 0
0x00003de0      b802000000     mov eax, 2
0x00003de5      0f851afeffff   jne 0x3c05
0x00003deb      66837b7004     cmp word [rbx + 0x70], 4
0x00003df0      0f8585feffff   jne 0x3c7b
0x00003df6      eb81           jmp 0x3d79                              ; /src:-420
0x00003df8      e883e9ffff     call sym.imp.__stack_chk_fail
0x00003dfd      0f1f00         nop dword [rax]
;-- cache_fstatat.constprop.3:
0x00003e00      53             push rbx
0x00003e01      488b4230       mov rax, qword [rdx + 0x30]
0x00003e05      4889d3         mov rbx, rdx
0x00003e08      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003e0c      7412           je 0x3e20
0x00003e0e      4885c0         test rax, rax
0x00003e11      7853           js 0x3e66                               ; /src:-413
0x00003e13      31c0           xor eax, eax
0x00003e15      5b             pop rbx
0x00003e16      c3             ret
0x00003e17      660f1f840000.  nop word [rax + rax]
0x00003e20      4889d1         mov rcx, rdx
0x00003e23      41b800010000   mov r8d, 0x100
0x00003e29      4889f2         mov rdx, rsi
0x00003e2c      89fe           mov esi, edi
0x00003e2e      bf01000000     mov edi, 1
0x00003e33      e888e9ffff     call sym.imp.__fxstatat
0x00003e38      85c0           test eax, eax
0x00003e3a      7424           je 0x3e60
0x00003e3c      48c74330feff.  mov qword [rbx + 0x30], 0xfffffffffffffffe
0x00003e44      e857e7ffff     call sym.imp.__errno_location
0x00003e49      486310         movsxd rdx, dword [rax]                 ; /src:-443
0x00003e4c      48895308       mov qword [rbx + 8], rdx
0x00003e50      8910           mov dword [rax], edx
0x00003e52      b8ffffffff     mov eax, 0xffffffff                     ; /src:-441 ; -1
0x00003e57      5b             pop rbx                                 ; /src:-439
0x00003e58      c3             ret
0x00003e59      0f1f80000000.  nop dword [rax]
0x00003e60      488b4330       mov rax, qword [rbx + 0x30]
0x00003e64      eba8           jmp 0x3e0e
0x00003e66      e835e7ffff     call sym.imp.__errno_location
0x00003e6b      488b5308       mov rdx, qword [rbx + 8]
0x00003e6f      ebdf           jmp 0x3e50
0x00003e71      0f1f440000     nop dword [rax + rax]
0x00003e76      662e0f1f8400.  nop word cs:[rax + rax]
;-- prompt:
0x00003e80      4157           push r15
0x00003e82      4156           push r14
0x00003e84      4155           push r13                                ; stat.h:-383
0x00003e86      4154           push r12
0x00003e88      4989cd         mov r13, rcx                            ; stat.h:-380
0x00003e8b      55             push rbp
0x00003e8c      53             push rbx
0x00003e8d      4889f3         mov rbx, rsi
0x00003e90      4881ecc80000.  sub rsp, 0xc8
0x00003e97      8b7f2c         mov edi, dword [rdi + 0x2c]
0x00003e9a      4c8b7e30       mov r15, qword [rsi + 0x30]
0x00003e9e      64488b042528.  mov rax, qword fs:[0x28]
0x00003ea7      48898424b800.  mov qword [rsp + 0xb8], rax
0x00003eaf      31c0           xor eax, eax
0x00003eb1      488b4638       mov rax, qword [rsi + 0x38]
0x00003eb5      4d85c9         test r9, r9
0x00003eb8      4489442414     mov dword [rsp + 0x14], r8d
0x00003ebd      897c2410       mov dword [rsp + 0x10], edi
0x00003ec1      4889442408     mov qword [rsp + 8], rax
0x00003ec6      0f84e4010000   je 0x40b0
0x00003ecc      31ed           xor ebp, ebp                            ; stat.h:-415
0x00003ece      84d2           test dl, dl
0x00003ed0      41c701020000.  mov dword [r9], 2
0x00003ed7      400f95c5       setne bpl
0x00003edb      ba00090300     mov edx, 0x30900
0x00003ee0      31c0           xor eax, eax                            ; stat.h:-399
0x00003ee2      4c89fe         mov rsi, r15
0x00003ee5      4d89cc         mov r12, r9
0x00003ee8      48c7442450ff.  mov qword [rsp + 0x50], 0xffffffffffffffff ; stat.h:-370
0x00003ef1      c1e502         shl ebp, 2
0x00003ef4      e877e8ffff     call sym.imp.openat
0x00003ef9      85c0           test eax, eax
0x00003efb      7868           js 0x3f65
0x00003efd      89c7           mov edi, eax
0x00003eff      89442418       mov dword [rsp + 0x18], eax
0x00003f03      e878ecffff     call sym.imp.fdopendir
0x00003f08      4885c0         test rax, rax
0x00003f0b      4989c6         mov r14, rax
0x00003f0e      8b542418       mov edx, dword [rsp + 0x18]
0x00003f12      0f8458020000   je 0x4170
0x00003f18      e883e6ffff     call sym.imp.__errno_location
0x00003f1d      4889442418     mov qword [rsp + 0x18], rax
0x00003f22      c70000000000   mov dword [rax], 0
0x00003f28      0f1f84000000.  nop dword [rax + rax]
0x00003f30      4c89f7         mov rdi, r14
0x00003f33      e8b8eaffff     call sym.imp.readdir
0x00003f38      4885c0         test rax, rax
0x00003f3b      0f8447020000   je 0x4188
0x00003f41      8078132e       cmp byte [rax + 0x13], 0x2e
0x00003f45      7516           jne 0x3f5d
0x00003f47      31d2           xor edx, edx
0x00003f49      8078142e       cmp byte [rax + 0x14], 0x2e
0x00003f4d      0f94c2         sete dl
0x00003f50      0fb6441014     movzx eax, byte [rax + rdx + 0x14]
0x00003f55      84c0           test al, al
0x00003f57      74d7           je 0x3f30
0x00003f59      3c2f           cmp al, 0x2f
0x00003f5b      74d3           je 0x3f30
0x00003f5d      4c89f7         mov rdi, r14
0x00003f60      e83be9ffff     call sym.imp.closedir
0x00003f65      4531f6         xor r14d, r14d
0x00003f68      b803000000     mov eax, 3
0x00003f6d      41890424       mov dword [r12], eax
0x00003f71      48837b2000     cmp qword [rbx + 0x20], 0
0x00003f76      0f8524010000   jne 0x40a0
0x00003f7c      418b4504       mov eax, dword [r13 + 4]
0x00003f80      83f805         cmp eax, 5
0x00003f83      742d           je 0x3fb2
0x00003f85      41807d0000     cmp byte [r13], 0
0x00003f8a      751d           jne 0x3fa9
0x00003f8c      83f803         cmp eax, 3
0x00003f8f      7407           je 0x3f98                               ; /src:-733
0x00003f91      41807d1900     cmp byte [r13 + 0x19], 0
0x00003f96      741a           je 0x3fb2
0x00003f98      e8e3cc0000     call sym.can_write_any_file
0x00003f9d      84c0           test al, al
0x00003f9f      0f84c3020000   je 0x4268
0x00003fa5      418b4504       mov eax, dword [r13 + 4]
0x00003fa9      83f803         cmp eax, 3
0x00003fac      0f842e010000   je 0x40e0
0x00003fb2      b802000000     mov eax, 2
0x00003fb7      488b8c24b800.  mov rcx, qword [rsp + 0xb8]
0x00003fbf      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003fc8      0f8575030000   jne 0x4343
0x00003fce      4881c4c80000.  add rsp, 0xc8
0x00003fd5      5b             pop rbx                                 ; /src:-822
0x00003fd6      5d             pop rbp
0x00003fd7      415c           pop r12
0x00003fd9      415d           pop r13
0x00003fdb      415e           pop r14
0x00003fdd      415f           pop r15
0x00003fdf      c3             ret
0x00003fe0      488d5c2420     lea rbx, [rsp + 0x20]
0x00003fe5      8b7c2410       mov edi, dword [rsp + 0x10]
0x00003fe9      4c89fe         mov rsi, r15
0x00003fec      4889da         mov rdx, rbx                            ; /src:-811
0x00003fef      e80cfeffff     call sym.cache_fstatat.constprop.3
0x00003ff4      85c0           test eax, eax
0x00003ff6      0f85c4010000   jne 0x41c0
0x00003ffc      8b442438       mov eax, dword [rsp + 0x38]
0x00004000      2500f00000     and eax, 0xf000
0x00004005      3d00a00000     cmp eax, 0xa000
0x0000400a      0f8444020000   je 0x4254
0x00004010      3d00400000     cmp eax, 0x4000                         ; /src:-810 ; u"%\xf0\u3d00\ua000"
0x00004015      0f84d9000000   je 0x40f4
0x0000401b      488b742408     mov rsi, qword [rsp + 8]
0x00004020      bf04000000     mov edi, 4
0x00004025      e8a6a60000     call sym.quotearg_style
0x0000402a      4889c5         mov rbp, rax
0x0000402d      8b7c2410       mov edi, dword [rsp + 0x10]
0x00004031      4889da         mov rdx, rbx
0x00004034      4c89fe         mov rsi, r15
0x00004037      e8c4fdffff     call sym.cache_fstatat.constprop.3
0x0000403c      85c0           test eax, eax
0x0000403e      0f85ac020000   jne 0x42f0
0x00004044      4889df         mov rdi, rbx
0x00004047      e804730000     call sym.file_type
0x0000404c      4585e4         test r12d, r12d
0x0000404f      4989c5         mov r13, rax
0x00004052      488b1d278521.  mov rbx, qword [obj.program_name]       ; stat.h:-897 ; [0x21c580:8]=0
0x00004059      ba05000000     mov edx, 5
0x0000405e      0f8474020000   je 0x42d8
0x00004064      488d35251b01.  lea rsi, str.s:_remove_write_protected__s__s ; 0x15b90 ; "%s: remove write-protected %s %s? "
0x0000406b      31ff           xor edi, edi
0x0000406d      e8bee6ffff     call sym.imp.dcgettext
0x00004072      488b3d878021.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c100:8]=0
0x00004079      4889c2         mov rdx, rax
0x0000407c      4989e9         mov r9, rbp
0x0000407f      4d89e8         mov r8, r13
0x00004082      4889d9         mov rcx, rbx
0x00004085      be01000000     mov esi, 1                              ; /src:-975
0x0000408a      31c0           xor eax, eax
0x0000408c      e88febffff     call sym.imp.__fprintf_chk              ; /src:-950
0x00004091      e83acf0000     call sym.yesno
0x00004096      84c0           test al, al
0x00004098      0f8514ffffff   jne 0x3fb2
0x0000409e      6690           nop                                     ; /src:-946
0x000040a0      b803000000     mov eax, 3
0x000040a5      e90dffffff     jmp 0x3fb7
0x000040aa      660f1f440000   nop word [rax + rax]
0x000040b0      80fa01         cmp dl, 1
0x000040b3      4189d6         mov r14d, edx
0x000040b6      b800000000     mov eax, 0
0x000040bb      19ed           sbb ebp, ebp
0x000040bd      48c7442450ff.  mov qword [rsp + 0x50], 0xffffffffffffffff
0x000040c6      f7d5           not ebp
0x000040c8      83e504         and ebp, 4
0x000040cb      84d2           test dl, dl
0x000040cd      440f45f0       cmovne r14d, eax
0x000040d1      e99bfeffff     jmp 0x3f71
0x000040d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000040e0      4531e4         xor r12d, r12d
0x000040e3      85ed           test ebp, ebp
0x000040e5      0f84f5feffff   je 0x3fe0
0x000040eb      83fd04         cmp ebp, 4
0x000040ee      0f8544010000   jne 0x4238
0x000040f4      41807d0900     cmp byte [r13 + 9], 0
0x000040f9      0f8411010000   je 0x4210
0x000040ff      488b742408     mov rsi, qword [rsp + 8]
0x00004104      bf04000000     mov edi, 4
0x00004109      e8c2a50000     call sym.quotearg_style
0x0000410e      837c241402     cmp dword [rsp + 0x14], 2
0x00004113      4889c5         mov rbp, rax
0x00004116      0f852e010000   jne 0x424a
0x0000411c      4584f6         test r14b, r14b
0x0000411f      0f8525010000   jne 0x424a
0x00004125      4585e4         test r12d, r12d
0x00004128      488b1d518421.  mov rbx, qword [obj.program_name]       ; [0x21c580:8]=0
0x0000412f      ba05000000     mov edx, 5
0x00004134      0f84f6010000   je 0x4330
0x0000413a      488d35ff1901.  lea rsi, str.s:_descend_into_write_protected_directory__s ; 0x15b40 ; "%s: descend into write-protected directory %s? "
0x00004141      31ff           xor edi, edi
0x00004143      e8e8e5ffff     call sym.imp.dcgettext
0x00004148      488b3db17f21.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c100:8]=0
0x0000414f      4889c2         mov rdx, rax
0x00004152      4989e8         mov r8, rbp
0x00004155      4889d9         mov rcx, rbx
0x00004158      be01000000     mov esi, 1
0x0000415d      31c0           xor eax, eax                            ; /src:-1054
0x0000415f      e8bceaffff     call sym.imp.__fprintf_chk
0x00004164      e928ffffff     jmp 0x4091
0x00004169      0f1f80000000.  nop dword [rax]
0x00004170      89d7           mov edi, edx
0x00004172      e8f9e6ffff     call sym.imp.close
0x00004177      b803000000     mov eax, 3
0x0000417c      e9ecfdffff     jmp 0x3f6d
0x00004181      0f1f80000000.  nop dword [rax]
0x00004188      488b442418     mov rax, qword [rsp + 0x18]
0x0000418d      4c89f7         mov rdi, r14
0x00004190      8b10           mov edx, dword [rax]
0x00004192      89542418       mov dword [rsp + 0x18], edx
0x00004196      e805e7ffff     call sym.imp.closedir
0x0000419b      8b542418       mov edx, dword [rsp + 0x18]
0x0000419f      85d2           test edx, edx
0x000041a1      0f85befdffff   jne 0x3f65
0x000041a7      41be01000000   mov r14d, 1
0x000041ad      b804000000     mov eax, 4
0x000041b2      e9b6fdffff     jmp 0x3f6d
0x000041b7      660f1f840000.  nop word [rax + rax]
0x000041c0      e8dbe3ffff     call sym.imp.__errno_location
0x000041c5      8b18           mov ebx, dword [rax]
0x000041c7      488b742408     mov rsi, qword [rsp + 8]
0x000041cc      bf04000000     mov edi, 4
0x000041d1      e8faa40000     call sym.quotearg_style
0x000041d6      4889c5         mov rbp, rax
0x000041d9      488d35d71801.  lea rsi, str.cannot_remove__s           ; 0x15ab7 ; "cannot remove %s"
0x000041e0      ba05000000     mov edx, 5
0x000041e5      31ff           xor edi, edi
0x000041e7      e844e5ffff     call sym.imp.dcgettext
0x000041ec      4889e9         mov rcx, rbp
0x000041ef      4889c2         mov rdx, rax
0x000041f2      89de           mov esi, ebx
0x000041f4      31c0           xor eax, eax
0x000041f6      31ff           xor edi, edi
0x000041f8      e813e9ffff     call sym.imp.error
0x000041fd      b804000000     mov eax, 4
0x00004202      e9b0fdffff     jmp 0x3fb7
0x00004207      660f1f840000.  nop word [rax + rax]
0x00004210      41807d0a00     cmp byte [r13 + 0xa], 0
0x00004215      7405           je 0x421c
0x00004217      4584f6         test r14b, r14b                         ; /src:-756
0x0000421a      751c           jne 0x4238
0x0000421c      488b742408     mov rsi, qword [rsp + 8]
0x00004221      bf04000000     mov edi, 4                              ; /src:-754
0x00004226      bb15000000     mov ebx, 0x15
0x0000422b      e8a0a40000     call sym.quotearg_style
0x00004230      4889c5         mov rbp, rax
0x00004233      eba4           jmp 0x41d9
0x00004235      0f1f00         nop dword [rax]
0x00004238      488b742408     mov rsi, qword [rsp + 8]
0x0000423d      bf04000000     mov edi, 4
0x00004242      e889a40000     call sym.quotearg_style
0x00004247      4889c5         mov rbp, rax
0x0000424a      488d5c2420     lea rbx, [rsp + 0x20]
0x0000424f      e9d9fdffff     jmp 0x402d
0x00004254      41837d0403     cmp dword [r13 + 4], 3
0x00004259      0f8553fdffff   jne 0x3fb2
0x0000425f      e9b7fdffff     jmp 0x401b
0x00004264      0f1f4000       nop dword [rax]
0x00004268      488d5c2420     lea rbx, [rsp + 0x20]
0x0000426d      8b7c2410       mov edi, dword [rsp + 0x10]
0x00004271      4c89fe         mov rsi, r15                            ; /src:-740
0x00004274      4889da         mov rdx, rbx
0x00004277      e884fbffff     call sym.cache_fstatat.constprop.3      ; /src:-917
0x0000427c      85c0           test eax, eax
0x0000427e      0f853cffffff   jne 0x41c0
0x00004284      8b442438       mov eax, dword [rsp + 0x38]
0x00004288      2500f00000     and eax, 0xf000
0x0000428d      3d00a00000     cmp eax, 0xa000
0x00004292      0f840dfdffff   je 0x3fa5
0x00004298      8b7c2410       mov edi, dword [rsp + 0x10]
0x0000429c      b900020000     mov ecx, 0x200
0x000042a1      ba02000000     mov edx, 2
0x000042a6      4c89fe         mov rsi, r15
0x000042a9      e8a2e3ffff     call sym.imp.faccessat
0x000042ae      85c0           test eax, eax
0x000042b0      0f84effcffff   je 0x3fa5
0x000042b6      e8e5e2ffff     call sym.imp.__errno_location
0x000042bb      8b18           mov ebx, dword [rax]
0x000042bd      41bc01000000   mov r12d, 1
0x000042c3      83fb0d         cmp ebx, 0xd
0x000042c6      0f8417feffff   je 0x40e3
0x000042cc      e9f6feffff     jmp 0x41c7                              ; /src:-994
0x000042d1      0f1f80000000.  nop dword [rax]
0x000042d8      488d35e91701.  lea rsi, str.s:_remove__s__s            ; 0x15ac8 ; "%s: remove %s %s? "
0x000042df      31ff           xor edi, edi
0x000042e1      e84ae4ffff     call sym.imp.dcgettext
0x000042e6      e987fdffff     jmp 0x4072
0x000042eb      0f1f440000     nop dword [rax + rax]
0x000042f0      488d35c01701.  lea rsi, str.cannot_remove__s           ; 0x15ab7 ; "cannot remove %s"
0x000042f7      ba05000000     mov edx, 5                              ; /src:-740
0x000042fc      31ff           xor edi, edi
0x000042fe      e82de4ffff     call sym.imp.dcgettext
0x00004303      4889c3         mov rbx, rax
0x00004306      e895e2ffff     call sym.imp.__errno_location
0x0000430b      8b30           mov esi, dword [rax]
0x0000430d      4889e9         mov rcx, rbp
0x00004310      31c0           xor eax, eax
0x00004312      4889da         mov rdx, rbx
0x00004315      31ff           xor edi, edi
0x00004317      e8f4e7ffff     call sym.imp.error
0x0000431c      b804000000     mov eax, 4
0x00004321      e991fcffff     jmp 0x3fb7
0x00004326      662e0f1f8400.  nop word cs:[rax + rax]
0x00004330      488d35391801.  lea rsi, str.s:_descend_into_directory__s ; 0x15b70 ; "%s: descend into directory %s? "
0x00004337      31ff           xor edi, edi
0x00004339      e8f2e3ffff     call sym.imp.dcgettext
0x0000433e      e905feffff     jmp 0x4148
0x00004343      e838e4ffff     call sym.imp.__stack_chk_fail
0x00004348      0f1f84000000.  nop dword [rax + rax]
;-- rm:
0x00004350      4157           push r15
0x00004352      4156           push r14
0x00004354      4155           push r13
0x00004356      4154           push r12
0x00004358      55             push rbp
0x00004359      53             push rbx                                ; /src:-803
0x0000435a      4881ecd80000.  sub rsp, 0xd8
0x00004361      64488b042528.  mov rax, qword fs:[0x28]
0x0000436a      48898424c800.  mov qword [rsp + 0xc8], rax
0x00004372      31c0           xor eax, eax
0x00004374      48833f00       cmp qword [rdi], 0
0x00004378      0f846a070000   je 0x4ae8
0x0000437e      807e0801       cmp byte [rsi + 8], 1
0x00004382      4989f5         mov r13, rsi
0x00004385      4c8d259c1a01.  lea r12, [0x00015e28]
0x0000438c      bd02000000     mov ebp, 2
0x00004391      19f6           sbb esi, esi                            ; /src:-793
0x00004393      31d2           xor edx, edx
0x00004395      83e6c0         and esi, 0xffffffc0                     ; /src:-792 ; 4294967232
0x00004398      81c658020000   add esi, 0x258
0x0000439e      e8adcb0000     call sym.xfts_open
0x000043a3      4889c3         mov rbx, rax                            ; /src:-791
0x000043a6      488d44242c     lea rax, [rsp + 0x2c]                   ; /src:-792
0x000043ab      4889442410     mov qword [rsp + 0x10], rax
0x000043b0      488d442430     lea rax, [rsp + 0x30]
0x000043b5      4889442418     mov qword [rsp + 0x18], rax
0x000043ba      660f1f440000   nop word [rax + rax]                    ; /src:-727
0x000043c0      4889df         mov rdi, rbx
0x000043c3      e898e80000     call sym.rpl_fts_read
0x000043c8      4885c0         test rax, rax
0x000043cb      4989c7         mov r15, rax
0x000043ce      0f8486000000   je 0x445a
0x000043d4      0fb75070       movzx edx, word [rax + 0x70]
0x000043d8      6683fa0d       cmp dx, 0xd
0x000043dc      0f8755070000   ja 0x4b37
0x000043e2      0fb7c2         movzx eax, dx
0x000043e5      49630484       movsxd rax, dword [r12 + rax*4]
0x000043e9      4c01e0         add rax, r12
0x000043ec      ffe0           jmp rax
0x000043ee      6690           nop
0x000043f0      498b5738       mov rdx, qword [r15 + 0x38]
0x000043f4      be03000000     mov esi, 3
0x000043f9      31ff           xor edi, edi
0x000043fb      e8d0a30000     call sym.quotearg_n_style_colon
0x00004400      488d35e71601.  lea rsi, str.traversal_failed:__s       ; 0x15aee ; "traversal failed: %s"
0x00004407      ba05000000     mov edx, 5
0x0000440c      31ff           xor edi, edi
0x0000440e      4889c5         mov rbp, rax
0x00004411      e81ae3ffff     call sym.imp.dcgettext
0x00004416      418b7740       mov esi, dword [r15 + 0x40]
0x0000441a      4889e9         mov rcx, rbp
0x0000441d      4889c2         mov rdx, rax
0x00004420      31ff           xor edi, edi
0x00004422      31c0           xor eax, eax
0x00004424      e8e7e6ffff     call sym.imp.error
0x00004429      4c89fe         mov rsi, r15
0x0000442c      ba04000000     mov edx, 4
0x00004431      4889df         mov rdi, rbx                            ; stdio2.h:-1208
0x00004434      e8a7ef0000     call sym.rpl_fts_set
0x00004439      4889df         mov rdi, rbx
0x0000443c      bd04000000     mov ebp, 4
0x00004441      e81ae80000     call sym.rpl_fts_read
0x00004446      4889df         mov rdi, rbx
0x00004449      e812e80000     call sym.rpl_fts_read
0x0000444e      4885c0         test rax, rax
0x00004451      4989c7         mov r15, rax
0x00004454      0f857affffff   jne 0x43d4
0x0000445a      e841e1ffff     call sym.imp.__errno_location
0x0000445f      4989c4         mov r12, rax
0x00004462      8b00           mov eax, dword [rax]
0x00004464      85c0           test eax, eax
0x00004466      0f850c050000   jne 0x4978
0x0000446c      4889df         mov rdi, rbx
0x0000446f      e85ce60000     call sym.rpl_fts_close
0x00004474      85c0           test eax, eax
0x00004476      0f8534050000   jne 0x49b0
0x0000447c      488b9c24c800.  mov rbx, qword [rsp + 0xc8]
0x00004484      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000448d      89e8           mov eax, ebp
0x0000448f      0f850b070000   jne 0x4ba0
0x00004495      4881c4d80000.  add rsp, 0xd8
0x0000449c      5b             pop rbx                                 ; stat.h:-1025
0x0000449d      5d             pop rbp
0x0000449e      415c           pop r12
0x000044a0      415d           pop r13
0x000044a2      415e           pop r14
0x000044a4      415f           pop r15
0x000044a6      c3             ret
0x000044a7      660f1f840000.  nop word [rax + rax]
0x000044b0      6683fa06       cmp dx, 6
0x000044b4      7522           jne 0x44d8
0x000044b6      41807d0800     cmp byte [r13 + 8], 0                   ; /src:-1153
0x000044bb      741b           je 0x44d8
0x000044bd      49837f5800     cmp qword [r15 + 0x58], 0
0x000044c2      7e14           jle 0x44d8
0x000044c4      488b4318       mov rax, qword [rbx + 0x18]
0x000044c8      49394778       cmp qword [r15 + 0x78], rax
0x000044cc      0f85a6050000   jne 0x4a78
0x000044d2      660f1f440000   nop word [rax + rax]
0x000044d8      83e2fd         and edx, 0xfffffffd                     ; 4294967293
0x000044db      4531f6         xor r14d, r14d
0x000044de      4c89e9         mov rcx, r13
0x000044e1      6683fa04       cmp dx, 4
0x000044e5      41b803000000   mov r8d, 3
0x000044eb      4c89fe         mov rsi, r15
0x000044ee      410f94c6       sete r14b
0x000044f2      4889df         mov rdi, rbx
0x000044f5      4531c9         xor r9d, r9d
0x000044f8      4489f2         mov edx, r14d
0x000044fb      e880f9ffff     call sym.prompt
0x00004500      83f802         cmp eax, 2
0x00004503      89c1           mov ecx, eax
0x00004505      0f845d020000   je 0x4768
0x0000450b      8d41fe         lea eax, [rcx - 2]
0x0000450e      83f802         cmp eax, 2
0x00004511      0f876a060000   ja 0x4b81
0x00004517      83f904         cmp ecx, 4
0x0000451a      0f8485060000   je 0x4ba5
0x00004520      83f903         cmp ecx, 3
0x00004523      0f8597feffff   jne 0x43c0
0x00004529      83fd02         cmp ebp, 2
0x0000452c      b803000000     mov eax, 3
0x00004531      0f44e8         cmove ebp, eax
0x00004534      e987feffff     jmp 0x43c0
0x00004539      0f1f80000000.  nop dword [rax]
0x00004540      498b5738       mov rdx, qword [r15 + 0x38]
0x00004544      be03000000     mov esi, 3
0x00004549      31ff           xor edi, edi
0x0000454b      e880a20000     call sym.quotearg_n_style_colon
0x00004550      488d35911701.  lea rsi, str.WARNING:_Circular_directory_structure.__This_almost_certainly_means_that_you_have_a_corrupted_file_system.__NOTIFY_YOUR_SYSTEM_MANAGER.__The_following_directory_is_part_of_the_cycle:_____s ; /src:-1096 ; 0x15ce8 ; "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n"
0x00004557      4889c5         mov rbp, rax
0x0000455a      ba05000000     mov edx, 5
0x0000455f      31ff           xor edi, edi
0x00004561      e8cae1ffff     call sym.imp.dcgettext
0x00004566      4889e9         mov rcx, rbp
0x00004569      4889c2         mov rdx, rax
0x0000456c      31f6           xor esi, esi
0x0000456e      e9adfeffff     jmp 0x4420                              ; /src:-1257
0x00004573      0f1f440000     nop dword [rax + rax]
0x00004578      41807d0900     cmp byte [r13 + 9], 0
0x0000457d      0f85b5000000   jne 0x4638
0x00004583      41807d0a00     cmp byte [r13 + 0xa], 0
0x00004588      0f8462010000   je 0x46f0
0x0000458e      498b7730       mov rsi, qword [r15 + 0x30]
0x00004592      8b7b2c         mov edi, dword [rbx + 0x2c]
0x00004595      31c0           xor eax, eax
0x00004597      ba00090300     mov edx, 0x30900
0x0000459c      e8cfe1ffff     call sym.imp.openat
0x000045a1      85c0           test eax, eax
0x000045a3      785c           js 0x4601
0x000045a5      89c7           mov edi, eax
0x000045a7      89442408       mov dword [rsp + 8], eax
0x000045ab      e8d0e5ffff     call sym.imp.fdopendir
0x000045b0      4885c0         test rax, rax
0x000045b3      4989c6         mov r14, rax
0x000045b6      8b542408       mov edx, dword [rsp + 8]
0x000045ba      0f8432050000   je 0x4af2                               ; /src:-1154
0x000045c0      e8dbdfffff     call sym.imp.__errno_location
0x000045c5      4889442408     mov qword [rsp + 8], rax
0x000045ca      c70000000000   mov dword [rax], 0
0x000045d0      4c89f7         mov rdi, r14
0x000045d3      e818e4ffff     call sym.imp.readdir
0x000045d8      4885c0         test rax, rax
0x000045db      7439           je 0x4616
0x000045dd      8078132e       cmp byte [rax + 0x13], 0x2e
0x000045e1      7516           jne 0x45f9
0x000045e3      31d2           xor edx, edx
0x000045e5      8078142e       cmp byte [rax + 0x14], 0x2e
0x000045e9      0f94c2         sete dl
0x000045ec      0fb6441014     movzx eax, byte [rax + rdx + 0x14]
0x000045f1      84c0           test al, al
0x000045f3      74db           je 0x45d0
0x000045f5      3c2f           cmp al, 0x2f
0x000045f7      74d7           je 0x45d0
0x000045f9      4c89f7         mov rdi, r14
0x000045fc      e89fe2ffff     call sym.imp.closedir                   ; /src:-1153
0x00004601      41807d0a00     cmp byte [r13 + 0xa], 0
0x00004606      0f84e4000000   je 0x46f0
0x0000460c      bd27000000     mov ebp, 0x27                           ; '''
0x00004611      e9df000000     jmp 0x46f5
0x00004616      488b442408     mov rax, qword [rsp + 8]
0x0000461b      4c89f7         mov rdi, r14
0x0000461e      8b10           mov edx, dword [rax]
0x00004620      89542408       mov dword [rsp + 8], edx
0x00004624      e877e2ffff     call sym.imp.closedir
0x00004629      8b542408       mov edx, dword [rsp + 8]
0x0000462d      85d2           test edx, edx
0x0000462f      75d0           jne 0x4601
0x00004631      0f1f80000000.  nop dword [rax]
0x00004638      49837f5800     cmp qword [r15 + 0x58], 0               ; /src:-1130
0x0000463d      7539           jne 0x4678
0x0000463f      4d8b7730       mov r14, qword [r15 + 0x30]
0x00004643      4c89f7         mov rdi, r14
0x00004646      e8756a0000     call sym.last_component
0x0000464b      80382e         cmp byte [rax], 0x2e
0x0000464e      0f847c010000   je 0x47d0
0x00004654      498b4510       mov rax, qword [r13 + 0x10]
0x00004658      4885c0         test rax, rax
0x0000465b      7410           je 0x466d
0x0000465d      488b08         mov rcx, qword [rax]
0x00004660      49398f800000.  cmp qword [r15 + 0x80], rcx
0x00004667      0f8473030000   je 0x49e0                               ; /src:-1125
0x0000466d      41807d1800     cmp byte [r13 + 0x18], 0
0x00004672      0f85f0010000   jne 0x4868
0x00004678      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x0000467d      4c89e9         mov rcx, r13
0x00004680      41b802000000   mov r8d, 2
0x00004686      ba01000000     mov edx, 1
0x0000468b      4c89fe         mov rsi, r15
0x0000468e      4889df         mov rdi, rbx
0x00004691      e8eaf7ffff     call sym.prompt
0x00004696      83f802         cmp eax, 2
0x00004699      89c1           mov ecx, eax
0x0000469b      0f84df000000   je 0x4780
0x000046a1      498b4708       mov rax, qword [r15 + 8]
0x000046a5      4883785800     cmp qword [rax + 0x58], 0
0x000046aa      7917           jns 0x46c3
0x000046ac      eb1c           jmp 0x46ca
0x000046ae      6690           nop
0x000046b0      48c740200100.  mov qword [rax + 0x20], 1
0x000046b8      488b4008       mov rax, qword [rax + 8]
0x000046bc      4883785800     cmp qword [rax + 0x58], 0
0x000046c1      7807           js 0x46ca
0x000046c3      4883782000     cmp qword [rax + 0x20], 0
0x000046c8      74e6           je 0x46b0
0x000046ca      ba04000000     mov edx, 4
0x000046cf      4c89fe         mov rsi, r15
0x000046d2      4889df         mov rdi, rbx
0x000046d5      894c2408       mov dword [rsp + 8], ecx
0x000046d9      e802ed0000     call sym.rpl_fts_set
0x000046de      4889df         mov rdi, rbx
0x000046e1      e87ae50000     call sym.rpl_fts_read
0x000046e6      8b4c2408       mov ecx, dword [rsp + 8]
0x000046ea      e91cfeffff     jmp 0x450b
0x000046ef      90             nop
0x000046f0      bd15000000     mov ebp, 0x15
0x000046f5      498b7738       mov rsi, qword [r15 + 0x38]             ; /src:-1111
0x000046f9      bf04000000     mov edi, 4
0x000046fe      e8cd9f0000     call sym.quotearg_style
0x00004703      488d35ad1301.  lea rsi, str.cannot_remove__s           ; 0x15ab7 ; "cannot remove %s"
0x0000470a      31ff           xor edi, edi
0x0000470c      4989c6         mov r14, rax
0x0000470f      ba05000000     mov edx, 5
0x00004714      e817e0ffff     call sym.imp.dcgettext
0x00004719      31ff           xor edi, edi
0x0000471b      4889c2         mov rdx, rax
0x0000471e      4c89f1         mov rcx, r14
0x00004721      31c0           xor eax, eax
0x00004723      89ee           mov esi, ebp
0x00004725      e8e6e3ffff     call sym.imp.error
0x0000472a      498b4708       mov rax, qword [r15 + 8]                ; /src:-1126
0x0000472e      4883785800     cmp qword [rax + 0x58], 0
0x00004733      7922           jns 0x4757
0x00004735      e9effcffff     jmp 0x4429
0x0000473a      660f1f440000   nop word [rax + rax]
0x00004740      48c740200100.  mov qword [rax + 0x20], 1
0x00004748      488b4008       mov rax, qword [rax + 8]
0x0000474c      4883785800     cmp qword [rax + 0x58], 0
0x00004751      0f88d2fcffff   js 0x4429
0x00004757      4883782000     cmp qword [rax + 0x20], 0
0x0000475c      74e2           je 0x4740
0x0000475e      e9c6fcffff     jmp 0x4429
0x00004763      0f1f440000     nop dword [rax + rax]
0x00004768      4489f1         mov ecx, r14d
0x0000476b      4c89ea         mov rdx, r13
0x0000476e      4c89fe         mov rsi, r15
0x00004771      4889df         mov rdi, rbx
0x00004774      e837f4ffff     call sym.excise
0x00004779      89c1           mov ecx, eax
0x0000477b      e98bfdffff     jmp 0x450b
0x00004780      837c242c04     cmp dword [rsp + 0x2c], 4
0x00004785      0f8535fcffff   jne 0x43c0
0x0000478b      b901000000     mov ecx, 1
0x00004790      4c89ea         mov rdx, r13
0x00004793      4c89fe         mov rsi, r15
0x00004796      4889df         mov rdi, rbx
0x00004799      e812f4ffff     call sym.excise
0x0000479e      ba04000000     mov edx, 4
0x000047a3      4c89fe         mov rsi, r15
0x000047a6      4889df         mov rdi, rbx
0x000047a9      89442408       mov dword [rsp + 8], eax
0x000047ad      e82eec0000     call sym.rpl_fts_set
0x000047b2      4889df         mov rdi, rbx
0x000047b5      e8a6e40000     call sym.rpl_fts_read
0x000047ba      8b4c2408       mov ecx, dword [rsp + 8]
0x000047be      83f902         cmp ecx, 2
0x000047c1      0f84f9fbffff   je 0x43c0
0x000047c7      e9d5feffff     jmp 0x46a1
0x000047cc      0f1f4000       nop dword [rax]
0x000047d0      31d2           xor edx, edx
0x000047d2      8078012e       cmp byte [rax + 1], 0x2e
0x000047d6      0f94c2         sete dl
0x000047d9      0fb6441001     movzx eax, byte [rax + rdx + 1]
0x000047de      84c0           test al, al
0x000047e0      7408           je 0x47ea
0x000047e2      3c2f           cmp al, 0x2f
0x000047e4      0f856afeffff   jne 0x4654
0x000047ea      498b5738       mov rdx, qword [r15 + 0x38]
0x000047ee      be04000000     mov esi, 4
0x000047f3      bf02000000     mov edi, 2
0x000047f8      e8b39d0000     call sym.quotearg_n_style
0x000047fd      488d15e71201.  lea rdx, [0x00015aeb]                   ; ".."
0x00004804      be04000000     mov esi, 4
0x00004809      bf01000000     mov edi, 1
0x0000480e      4889c5         mov rbp, rax
0x00004811      e89a9d0000     call sym.quotearg_n_style
0x00004816      488d15cf1201.  lea rdx, [0x00015aec]                   ; "."
0x0000481d      31ff           xor edi, edi
0x0000481f      be04000000     mov esi, 4
0x00004824      4989c6         mov r14, rax
0x00004827      e8849d0000     call sym.quotearg_n_style
0x0000482c      488d35851301.  lea rsi, str.refusing_to_remove__s_or__s_directory:_skipping__s ; /src:-1369 ; 0x15bb8 ; "refusing to remove %s or %s directory: skipping %s"
0x00004833      31ff           xor edi, edi
0x00004835      ba05000000     mov edx, 5
0x0000483a      4889442408     mov qword [rsp + 8], rax
0x0000483f      e8ecdeffff     call sym.imp.dcgettext                  ; /src:-1371
0x00004844      488b4c2408     mov rcx, qword [rsp + 8]
0x00004849      4889c2         mov rdx, rax
0x0000484c      4989e9         mov r9, rbp
0x0000484f      4d89f0         mov r8, r14
0x00004852      31f6           xor esi, esi
0x00004854      31ff           xor edi, edi
0x00004856      31c0           xor eax, eax
0x00004858      e8b3e2ffff     call sym.imp.error
0x0000485d      e9c7fbffff     jmp 0x4429
0x00004862      660f1f440000   nop word [rax + rax]
0x00004868      488d357c1201.  lea rsi, [0x00015aeb]                   ; ".."
0x0000486f      31d2           xor edx, edx
0x00004871      4c89f7         mov rdi, r14
0x00004874      e8676d0000     call sym.file_name_concat
0x00004879      4885c0         test rax, rax
0x0000487c      4989c6         mov r14, rax
0x0000487f      7416           je 0x4897
0x00004881      488b542418     mov rdx, qword [rsp + 0x18]
0x00004886      4889c6         mov rsi, rax
0x00004889      bf01000000     mov edi, 1
0x0000488e      e8cddeffff     call sym.imp.__lxstat
0x00004893      85c0           test eax, eax
0x00004895      7469           je 0x4900
0x00004897      498b5730       mov rdx, qword [r15 + 0x30]
0x0000489b      be04000000     mov esi, 4
0x000048a0      bf01000000     mov edi, 1
0x000048a5      e8069d0000     call sym.quotearg_n_style
0x000048aa      4c89f2         mov rdx, r14
0x000048ad      31ff           xor edi, edi
0x000048af      be04000000     mov esi, 4
0x000048b4      4889c5         mov rbp, rax
0x000048b7      e8f49c0000     call sym.quotearg_n_style
0x000048bc      488d35d51301.  lea rsi, str.failed_to_stat__s:_skipping__s ; 0x15c98 ; "failed to stat %s: skipping %s"
0x000048c3      31ff           xor edi, edi
0x000048c5      ba05000000     mov edx, 5
0x000048ca      4889442408     mov qword [rsp + 8], rax
0x000048cf      e85cdeffff     call sym.imp.dcgettext
0x000048d4      488b4c2408     mov rcx, qword [rsp + 8]
0x000048d9      4889c2         mov rdx, rax
0x000048dc      31ff           xor edi, edi
0x000048de      4989e8         mov r8, rbp
0x000048e1      31f6           xor esi, esi
0x000048e3      31c0           xor eax, eax
0x000048e5      e826e2ffff     call sym.imp.error
0x000048ea      4c89f7         mov rdi, r14
0x000048ed      e88ee3ffff     call sym..plt.got
0x000048f2      e932fbffff     jmp 0x4429
0x000048f7      660f1f840000.  nop word [rax + rax]
0x00004900      4c89f7         mov rdi, r14
0x00004903      e878e3ffff     call sym..plt.got
0x00004908      488b442430     mov rax, qword [rsp + 0x30]
0x0000490d      48394318       cmp qword [rbx + 0x18], rax
0x00004911      0f8461fdffff   je 0x4678
0x00004917      498b7738       mov rsi, qword [r15 + 0x38]
0x0000491b      bf04000000     mov edi, 4
0x00004920      e8ab9d0000     call sym.quotearg_style
0x00004925      488d358c1301.  lea rsi, str.skipping__s__since_it_s_on_a_different_device ; 0x15cb8 ; "skipping %s, since it's on a different device"
0x0000492c      4889c5         mov rbp, rax
0x0000492f      ba05000000     mov edx, 5
0x00004934      31ff           xor edi, edi
0x00004936      e8f5ddffff     call sym.imp.dcgettext
0x0000493b      31f6           xor esi, esi
0x0000493d      4889c2         mov rdx, rax
0x00004940      4889e9         mov rcx, rbp
0x00004943      31ff           xor edi, edi
0x00004945      31c0           xor eax, eax
0x00004947      e8c4e1ffff     call sym.imp.error
0x0000494c      488d35ad1401.  lea rsi, str.and___preserve_root_all_is_in_effect ; 0x15e00 ; "and --preserve-root=all is in effect"
0x00004953      ba05000000     mov edx, 5
0x00004958      31ff           xor edi, edi
0x0000495a      e8d1ddffff     call sym.imp.dcgettext
0x0000495f      31f6           xor esi, esi
0x00004961      4889c2         mov rdx, rax
0x00004964      31ff           xor edi, edi
0x00004966      31c0           xor eax, eax
0x00004968      e8a3e1ffff     call sym.imp.error
0x0000496d      e9b7faffff     jmp 0x4429
0x00004972      660f1f440000   nop word [rax + rax]
0x00004978      488d355c1101.  lea rsi, str.fts_read_failed            ; 0x15adb ; "fts_read failed"
0x0000497f      31ff           xor edi, edi
0x00004981      ba05000000     mov edx, 5
0x00004986      bd04000000     mov ebp, 4
0x0000498b      e8a0ddffff     call sym.imp.dcgettext
0x00004990      418b3424       mov esi, dword [r12]
0x00004994      4889c2         mov rdx, rax
0x00004997      31ff           xor edi, edi
0x00004999      31c0           xor eax, eax
0x0000499b      e870e1ffff     call sym.imp.error
0x000049a0      4889df         mov rdi, rbx
0x000049a3      e828e10000     call sym.rpl_fts_close
0x000049a8      85c0           test eax, eax
0x000049aa      0f84ccfaffff   je 0x447c
0x000049b0      488d35731101.  lea rsi, str.fts_close_failed           ; 0x15b2a ; "fts_close failed"
0x000049b7      ba05000000     mov edx, 5
0x000049bc      31ff           xor edi, edi
0x000049be      bd04000000     mov ebp, 4
0x000049c3      e868ddffff     call sym.imp.dcgettext
0x000049c8      418b3424       mov esi, dword [r12]
0x000049cc      4889c2         mov rdx, rax
0x000049cf      31ff           xor edi, edi
0x000049d1      31c0           xor eax, eax
0x000049d3      e838e1ffff     call sym.imp.error
0x000049d8      e99ffaffff     jmp 0x447c
0x000049dd      0f1f00         nop dword [rax]
0x000049e0      488b4008       mov rax, qword [rax + 8]
0x000049e4      49394778       cmp qword [r15 + 0x78], rax
0x000049e8      0f857ffcffff   jne 0x466d
0x000049ee      498b5738       mov rdx, qword [r15 + 0x38]
0x000049f2      488d3d952001.  lea rdi, [0x00016a8e]                   ; "/"
0x000049f9      b902000000     mov ecx, 2
0x000049fe      4889d6         mov rsi, rdx
0x00004a01      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004a03      0f97c0         seta al
0x00004a06      1c00           sbb al, 0
0x00004a08      84c0           test al, al
0x00004a0a      0f84ee000000   je 0x4afe
0x00004a10      488d15772001.  lea rdx, [0x00016a8e]                   ; "/"
0x00004a17      be04000000     mov esi, 4
0x00004a1c      bf01000000     mov edi, 1
0x00004a21      e88a9b0000     call sym.quotearg_n_style
0x00004a26      498b5738       mov rdx, qword [r15 + 0x38]
0x00004a2a      be04000000     mov esi, 4
0x00004a2f      31ff           xor edi, edi
0x00004a31      4889c5         mov rbp, rax
0x00004a34      e8779b0000     call sym.quotearg_n_style
0x00004a39      488d35e01101.  lea rsi, str.it_is_dangerous_to_operate_recursively_on__s__same_as__s ; 0x15c20 ; "it is dangerous to operate recursively on %s (same as %s)"
0x00004a40      4989c6         mov r14, rax
0x00004a43      ba05000000     mov edx, 5
0x00004a48      31ff           xor edi, edi
0x00004a4a      e8e1dcffff     call sym.imp.dcgettext
0x00004a4f      4989e8         mov r8, rbp
0x00004a52      4889c2         mov rdx, rax
0x00004a55      4c89f1         mov rcx, r14
0x00004a58      31f6           xor esi, esi
0x00004a5a      31ff           xor edi, edi
0x00004a5c      31c0           xor eax, eax
0x00004a5e      e8ade0ffff     call sym.imp.error
0x00004a63      ba05000000     mov edx, 5
0x00004a68      488d35f11101.  lea rsi, str.use___no_preserve_root_to_override_this_failsafe ; 0x15c60 ; "use --no-preserve-root to override this failsafe"
0x00004a6f      e9e4feffff     jmp 0x4958
0x00004a74      0f1f4000       nop dword [rax]
0x00004a78      498b4708       mov rax, qword [r15 + 8]
0x00004a7c      4883785800     cmp qword [rax + 0x58], 0
0x00004a81      7918           jns 0x4a9b
0x00004a83      eb1d           jmp 0x4aa2
0x00004a85      0f1f00         nop dword [rax]
0x00004a88      48c740200100.  mov qword [rax + 0x20], 1
0x00004a90      488b4008       mov rax, qword [rax + 8]
0x00004a94      4883785800     cmp qword [rax + 0x58], 0
0x00004a99      7807           js 0x4aa2
0x00004a9b      4883782000     cmp qword [rax + 0x20], 0
0x00004aa0      74e6           je 0x4a88
0x00004aa2      498b7738       mov rsi, qword [r15 + 0x38]
0x00004aa6      bf04000000     mov edi, 4
0x00004aab      e8209c0000     call sym.quotearg_style
0x00004ab0      488d35011201.  lea rsi, str.skipping__s__since_it_s_on_a_different_device ; 0x15cb8 ; "skipping %s, since it's on a different device"
0x00004ab7      4889c5         mov rbp, rax
0x00004aba      ba05000000     mov edx, 5
0x00004abf      31ff           xor edi, edi
0x00004ac1      e86adcffff     call sym.imp.dcgettext
0x00004ac6      4889e9         mov rcx, rbp
0x00004ac9      4889c2         mov rdx, rax
0x00004acc      31f6           xor esi, esi
0x00004ace      31ff           xor edi, edi
0x00004ad0      31c0           xor eax, eax
0x00004ad2      bd04000000     mov ebp, 4
0x00004ad7      e834e0ffff     call sym.imp.error
0x00004adc      e9dff8ffff     jmp 0x43c0
0x00004ae1      0f1f80000000.  nop dword [rax]
0x00004ae8      bd02000000     mov ebp, 2
0x00004aed      e98af9ffff     jmp 0x447c
0x00004af2      89d7           mov edi, edx
0x00004af4      e877ddffff     call sym.imp.close
0x00004af9      e903fbffff     jmp 0x4601
0x00004afe      4889d6         mov rsi, rdx
0x00004b01      bf04000000     mov edi, 4
0x00004b06      e8c59b0000     call sym.quotearg_style
0x00004b0b      488d35de1001.  lea rsi, str.it_is_dangerous_to_operate_recursively_on__s ; 0x15bf0 ; "it is dangerous to operate recursively on %s"
0x00004b12      4889c5         mov rbp, rax
0x00004b15      31ff           xor edi, edi
0x00004b17      ba05000000     mov edx, 5
0x00004b1c      e80fdcffff     call sym.imp.dcgettext
0x00004b21      4889e9         mov rcx, rbp
0x00004b24      4889c2         mov rdx, rax
0x00004b27      31f6           xor esi, esi
0x00004b29      31ff           xor edi, edi
0x00004b2b      31c0           xor eax, eax
0x00004b2d      e8dedfffff     call sym.imp.error
0x00004b32      e92cffffff     jmp 0x4a63
0x00004b37      498b5738       mov rdx, qword [r15 + 0x38]
0x00004b3b      be03000000     mov esi, 3
0x00004b40      31ff           xor edi, edi
0x00004b42      e8899c0000     call sym.quotearg_n_style_colon
0x00004b47      410fb75f70     movzx ebx, word [r15 + 0x70]
0x00004b4c      488d35551201.  lea rsi, str.unexpected_failure:_fts_info__d:__s__please_report_to__s ; 0x15da8 ; "unexpected failure: fts_info=%d: %s\nplease report to %s"
0x00004b53      ba05000000     mov edx, 5
0x00004b58      31ff           xor edi, edi
0x00004b5a      4889c5         mov rbp, rax
0x00004b5d      e8cedbffff     call sym.imp.dcgettext
0x00004b62      4c8d0d9a0f01.  lea r9, str.bug_coreutils_gnu.org       ; 0x15b03 ; "bug-coreutils@gnu.org"
0x00004b69      4889c2         mov rdx, rax
0x00004b6c      4989e8         mov r8, rbp
0x00004b6f      89d9           mov ecx, ebx
0x00004b71      31f6           xor esi, esi
0x00004b73      31ff           xor edi, edi
0x00004b75      31c0           xor eax, eax
0x00004b77      e894dfffff     call sym.imp.error
0x00004b7c      e80fdaffff     call sym.imp.abort
0x00004b81      488d0dd81201.  lea rcx, obj.__PRETTY_FUNCTION__.7067   ; 0x15e60 ; "rm"
0x00004b88      488d35511201.  lea rsi, str..._coreutils_8.31_src_remove.c ; 0x15de0 ; "../coreutils-8.31/src/remove.c"
0x00004b8f      488d3d830f01.  lea rdi, str.VALID_STATUS__s            ; 0x15b19 ; "VALID_STATUS (s)"
0x00004b96      ba61020000     mov edx, 0x261
0x00004b9b      e880dcffff     call sym.imp.__assert_fail
0x00004ba0      e8dbdbffff     call sym.imp.__stack_chk_fail
0x00004ba5      bd04000000     mov ebp, 4
0x00004baa      e911f8ffff     jmp 0x43c0
0x00004baf      90             nop
;-- writable_destination:
0x00004bb0      81e600f00000   and esi, 0xf000                         ; /src:1667
0x00004bb6      81fe00a00000   cmp esi, 0xa000                         ; /src:1670
0x00004bbc      741a           je 0x4bd8
0x00004bbe      53             push rbx                                ; /src:1667
0x00004bbf      4889fb         mov rbx, rdi
0x00004bc2      e8b9c00000     call sym.can_write_any_file             ; /src:1669
0x00004bc7      84c0           test al, al
0x00004bc9      7415           je 0x4be0
0x00004bcb      b801000000     mov eax, 1                              ; /src:1667
0x00004bd0      5b             pop rbx                                 ; /src:1671
0x00004bd1      c3             ret
0x00004bd2      660f1f440000   nop word [rax + rax]
0x00004bd8      b801000000     mov eax, 1                              ; /src:1667
0x00004bdd      c3             ret                                     ; /src:1671
0x00004bde      6690           nop
0x00004be0      4889df         mov rdi, rbx                            ; /src:1670
0x00004be3      be02000000     mov esi, 2
0x00004be8      e8b3dfffff     call sym.imp.euidaccess
0x00004bed      85c0           test eax, eax
0x00004bef      0f94c0         sete al
0x00004bf2      5b             pop rbx                                 ; /src:1671
0x00004bf3      c3             ret
0x00004bf4      6690           nop
0x00004bf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- write_zeros:
0x00004c00      48833d387921.  cmp qword [obj.zeros.7570], 0           ; /src:350 ; [0x21c540:8]=0
0x00004c08      4154           push r12
0x00004c0a      4189fc         mov r12d, edi
0x00004c0d      55             push rbp
0x00004c0e      53             push rbx
0x00004c0f      4889f3         mov rbx, rsi
0x00004c12      7454           je 0x4c68                               ; /src:357
0x00004c14      4885db         test rbx, rbx                           ; /src:368
0x00004c17      750c           jne 0x4c25
0x00004c19      eb3d           jmp 0x4c58
0x00004c1b      0f1f440000     nop dword [rax + rax]
0x00004c20      4829c3         sub rbx, rax
0x00004c23      7433           je 0x4c58
0x00004c25      48391dec7321.  cmp qword [obj.nz.7571], rbx            ; /src:370 ; [0x21c018:8]=0x20000
0x00004c2c      4889dd         mov rbp, rbx
0x00004c2f      488b350a7921.  mov rsi, qword [obj.zeros.7570]         ; /src:371 ; [0x21c540:8]=0
0x00004c36      480f462dda73.  cmovbe rbp, qword [obj.nz.7571]         ; /src:370
0x00004c3e      4489e7         mov edi, r12d                           ; /src:371
0x00004c41      4889ea         mov rdx, rbp
0x00004c44      e8b76a0000     call sym.full_write
0x00004c49      4839e8         cmp rax, rbp
0x00004c4c      74d2           je 0x4c20
0x00004c4e      5b             pop rbx                                 ; /src:377
0x00004c4f      31c0           xor eax, eax                            ; /src:372
0x00004c51      5d             pop rbp                                 ; /src:377
0x00004c52      415c           pop r12
0x00004c54      c3             ret
0x00004c55      0f1f00         nop dword [rax]
0x00004c58      5b             pop rbx
0x00004c59      b801000000     mov eax, 1                              ; /src:376
0x00004c5e      5d             pop rbp                                 ; /src:377
0x00004c5f      415c           pop r12
0x00004c61      c3             ret
0x00004c62      660f1f440000   nop word [rax + rax]
0x00004c68      488b3da97321.  mov rdi, qword [obj.nz.7571]            ; /src:360 ; [0x21c018:8]=0x20000
0x00004c6f      be01000000     mov esi, 1
0x00004c74      e897dcffff     call sym.imp.calloc
0x00004c79      4885c0         test rax, rax                           ; /src:361
0x00004c7c      7409           je 0x4c87
0x00004c7e      488905bb7821.  mov qword [obj.zeros.7570], rax         ; /src:360 ; [0x21c540:8]=0
0x00004c85      eb8d           jmp 0x4c14
0x00004c87      488d05b27421.  lea rax, obj.fallback.7572              ; /src:363 ; 0x21c140
0x00004c8e      48c7057f7321.  mov qword [obj.nz.7571], 0x400          ; /src:364 ; [0x21c018:8]=0x20000
0x00004c99      488905a07821.  mov qword [obj.zeros.7570], rax         ; /src:363 ; [0x21c540:8]=0
0x00004ca0      e96fffffff     jmp 0x4c14
0x00004ca5      90             nop
0x00004ca6      662e0f1f8400.  nop word cs:[rax + rax]
;-- punch_hole:
0x00004cb0      53             push rbx                                ; /src:170
0x00004cb1      4889d1         mov rcx, rdx                            ; /src:175
0x00004cb4      4889f2         mov rdx, rsi
0x00004cb7      be03000000     mov esi, 3
0x00004cbc      e81fdcffff     call sym.imp.fallocate
0x00004cc1      85c0           test eax, eax                           ; /src:177
0x00004cc3      89c3           mov ebx, eax                            ; /src:175
0x00004cc5      7809           js 0x4cd0                               ; /src:177
0x00004cc7      89d8           mov eax, ebx                            ; /src:182
0x00004cc9      5b             pop rbx
0x00004cca      c3             ret
0x00004ccb      0f1f440000     nop dword [rax + rax]
0x00004cd0      e8cbd8ffff     call sym.imp.__errno_location           ; /src:177
0x00004cd5      8b00           mov eax, dword [rax]
0x00004cd7      83f826         cmp eax, 0x26
0x00004cda      7405           je 0x4ce1
0x00004cdc      83f85f         cmp eax, 0x5f
0x00004cdf      75e6           jne 0x4cc7
0x00004ce1      31db           xor ebx, ebx                            ; /src:178
0x00004ce3      89d8           mov eax, ebx                            ; /src:182
0x00004ce5      5b             pop rbx
0x00004ce6      c3             ret
0x00004ce7      660f1f840000.  nop word [rax + rax]
;-- emit_verbose:
0x00004cf0      4154           push r12                                ; /src:1760
0x00004cf2      55             push rbp
0x00004cf3      4989fc         mov r12, rdi
0x00004cf6      53             push rbx
0x00004cf7      bf01000000     mov edi, 1                              ; /src:1761
0x00004cfc      4889d3         mov rbx, rdx                            ; /src:1760
0x00004cff      4889f2         mov rdx, rsi                            ; /src:1761
0x00004d02      be04000000     mov esi, 4
0x00004d07      e8a4980000     call sym.quotearg_n_style
0x00004d0c      31ff           xor edi, edi
0x00004d0e      4c89e2         mov rdx, r12
0x00004d11      be04000000     mov esi, 4
0x00004d16      4889c5         mov rbp, rax
0x00004d19      e892980000     call sym.quotearg_n_style
0x00004d1e      488d358c1701.  lea rsi, str.s_____s                    ; ../coreutils-8.31/src/py.c:104 ; 0x164b1 ; "%s -> %s"
0x00004d25      4889c2         mov rdx, rax
0x00004d28      4889e9         mov rcx, rbp
0x00004d2b      31c0           xor eax, eax
0x00004d2d      bf01000000     mov edi, 1
0x00004d32      e879ddffff     call sym.imp.__printf_chk
0x00004d37      4885db         test rbx, rbx                           ; /src:1762
0x00004d3a      7435           je 0x4d71
0x00004d3c      4889de         mov rsi, rbx                            ; /src:1763
0x00004d3f      bf04000000     mov edi, 4
0x00004d44      e887990000     call sym.quotearg_style
0x00004d49      488d356a1701.  lea rsi, str.backup:__s                 ; 0x164ba ; " (backup: %s)"
0x00004d50      4889c3         mov rbx, rax
0x00004d53      ba05000000     mov edx, 5
0x00004d58      31ff           xor edi, edi
0x00004d5a      e8d1d9ffff     call sym.imp.dcgettext
0x00004d5f      4889da         mov rdx, rbx                            ; ../coreutils-8.31/src/py.c:104
0x00004d62      4889c6         mov rsi, rax
0x00004d65      bf01000000     mov edi, 1
0x00004d6a      31c0           xor eax, eax
0x00004d6c      e83fddffff     call sym.imp.__printf_chk
0x00004d71      488b3d507321.  mov rdi, qword [obj.stdout]             ; ./lib/selinux/selinux.h:107 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0c8:8]=0
0x00004d78      488b4728       mov rax, qword [rdi + 0x28]
0x00004d7c      483b4730       cmp rax, qword [rdi + 0x30]
0x00004d80      7316           jae 0x4d98
0x00004d82      488d5001       lea rdx, [rax + 1]
0x00004d86      48895728       mov qword [rdi + 0x28], rdx
0x00004d8a      c6000a         mov byte [rax], 0xa
0x00004d8d      5b             pop rbx                                 ; /src:1765
0x00004d8e      5d             pop rbp
0x00004d8f      415c           pop r12
0x00004d91      c3             ret
0x00004d92      660f1f440000   nop word [rax + rax]
0x00004d98      5b             pop rbx
0x00004d99      5d             pop rbp
0x00004d9a      415c           pop r12
0x00004d9c      be0a000000     mov esi, 0xa                            ; ./lib/selinux/selinux.h:107
0x00004da1      e92adaffff     jmp sym.imp.__overflow
0x00004da6      662e0f1f8400.  nop word cs:[rax + rax]
;-- create_hard_link:
0x00004db0      4155           push r13                                ; /src:1785
0x00004db2      4154           push r12
0x00004db4      440fb6ca       movzx r9d, dl                           ; /src:1786
0x00004db8      55             push rbp                                ; /src:1785
0x00004db9      53             push rbx
0x00004dba      ba9cffffff     mov edx, 0xffffff9c                     ; /src:1786 ; 4294967196
0x00004dbf      4989fd         mov r13, rdi                            ; /src:1785
0x00004dc2      4989f4         mov r12, rsi
0x00004dc5      89cd           mov ebp, ecx
0x00004dc7      4883ec10       sub rsp, 0x10
0x00004dcb      4584c0         test r8b, r8b                           ; /src:1786
0x00004dce      4889f1         mov rcx, rsi
0x00004dd1      410f95c0       setne r8b
0x00004dd5      6aff           push 0xffffffffffffffff
0x00004dd7      4889fe         mov rsi, rdi
0x00004dda      450fb6c0       movzx r8d, r8b
0x00004dde      89d7           mov edi, edx
0x00004de0      41c1e00a       shl r8d, 0xa
0x00004de4      e8a7530000     call sym.force_linkat
0x00004de9      85c0           test eax, eax                           ; /src:1789
0x00004deb      89c3           mov ebx, eax                            ; /src:1786
0x00004ded      5a             pop rdx                                 ; /src:1789
0x00004dee      59             pop rcx
0x00004def      7f67           jg 0x4e58
0x00004df1      c1eb1f         shr ebx, 0x1f                           ; /src:1795
0x00004df4      4020eb         and bl, bpl
0x00004df7      7517           jne 0x4e10
0x00004df9      4883c408       add rsp, 8                              ; /src:1798
0x00004dfd      bb01000000     mov ebx, 1                              ; /src:1797
0x00004e02      89d8           mov eax, ebx                            ; /src:1798
0x00004e04      5b             pop rbx
0x00004e05      5d             pop rbp
0x00004e06      415c           pop r12
0x00004e08      415d           pop r13
0x00004e0a      c3             ret
0x00004e0b      0f1f440000     nop dword [rax + rax]
0x00004e10      4c89e6         mov rsi, r12                            ; /src:1796
0x00004e13      bf04000000     mov edi, 4
0x00004e18      e8b3980000     call sym.quotearg_style
0x00004e1d      488d35870c01.  lea rsi, str.removed__s                 ; 0x15aab ; "removed %s\n"
0x00004e24      4889c5         mov rbp, rax
0x00004e27      ba05000000     mov edx, 5
0x00004e2c      31ff           xor edi, edi
0x00004e2e      e8fdd8ffff     call sym.imp.dcgettext
0x00004e33      4889ea         mov rdx, rbp                            ; ../coreutils-8.31/src/py.c:104
0x00004e36      4889c6         mov rsi, rax
0x00004e39      bf01000000     mov edi, 1
0x00004e3e      31c0           xor eax, eax
0x00004e40      e86bdcffff     call sym.imp.__printf_chk
0x00004e45      4883c408       add rsp, 8                              ; /src:1798
0x00004e49      89d8           mov eax, ebx
0x00004e4b      5b             pop rbx
0x00004e4c      5d             pop rbp
0x00004e4d      415c           pop r12
0x00004e4f      415d           pop r13
0x00004e51      c3             ret
0x00004e52      660f1f440000   nop word [rax + rax]
0x00004e58      4c89ea         mov rdx, r13                            ; /src:1791
0x00004e5b      be04000000     mov esi, 4
0x00004e60      bf01000000     mov edi, 1
0x00004e65      e846970000     call sym.quotearg_n_style
0x00004e6a      4c89e2         mov rdx, r12
0x00004e6d      be04000000     mov esi, 4
0x00004e72      31ff           xor edi, edi
0x00004e74      4989c5         mov r13, rax
0x00004e77      e834970000     call sym.quotearg_n_style
0x00004e7c      488d351d1001.  lea rsi, str.cannot_create_hard_link__s_to__s ; 0x15ea0 ; "cannot create hard link %s to %s"
0x00004e83      4889c5         mov rbp, rax
0x00004e86      ba05000000     mov edx, 5
0x00004e8b      31ff           xor edi, edi
0x00004e8d      e89ed8ffff     call sym.imp.dcgettext
0x00004e92      4d89e8         mov r8, r13
0x00004e95      4889e9         mov rcx, rbp
0x00004e98      4889c2         mov rdx, rax
0x00004e9b      89de           mov esi, ebx
0x00004e9d      31c0           xor eax, eax
0x00004e9f      31ff           xor edi, edi
0x00004ea1      e86adcffff     call sym.imp.error
0x00004ea6      31db           xor ebx, ebx                            ; /src:1793
0x00004ea8      4883c408       add rsp, 8                              ; /src:1798
0x00004eac      89d8           mov eax, ebx
0x00004eae      5b             pop rbx
0x00004eaf      5d             pop rbp
0x00004eb0      415c           pop r12
0x00004eb2      415d           pop r13
0x00004eb4      c3             ret
0x00004eb5      90             nop
0x00004eb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- overwrite_ok.isra.12:
0x00004ec0      4156           push r14                                ; /src:1674
0x00004ec2      4155           push r13
0x00004ec4      4989fd         mov r13, rdi
0x00004ec7      4154           push r12
0x00004ec9      55             push rbp
0x00004eca      4889d5         mov rbp, rdx
0x00004ecd      53             push rbx
0x00004ece      4889f3         mov rbx, rsi
0x00004ed1      4889df         mov rdi, rbx                            ; /src:1677
0x00004ed4      4883ec20       sub rsp, 0x20                           ; /src:1674
0x00004ed8      8b32           mov esi, dword [rdx]                    ; /src:1677
0x00004eda      64488b042528.  mov rax, qword fs:[0x28]                ; /src:1674
0x00004ee3      4889442418     mov qword [rsp + 0x18], rax
0x00004ee8      31c0           xor eax, eax
0x00004eea      e8c1fcffff     call sym.writable_destination           ; /src:1677
0x00004eef      84c0           test al, al
0x00004ef1      0f8591000000   jne 0x4f88
0x00004ef7      8b7d00         mov edi, dword [rbp]                    ; /src:1680
0x00004efa      4c8d64240c     lea r12, [rsp + 0xc]
0x00004eff      4c89e6         mov rsi, r12
0x00004f02      e839650000     call sym.strmode
0x00004f07      8b6d00         mov ebp, dword [rbp]                    ; /src:1682
0x00004f0a      4889de         mov rsi, rbx
0x00004f0d      bf04000000     mov edi, 4
0x00004f12      c644241600     mov byte [rsp + 0x16], 0                ; /src:1681
0x00004f17      e8b4970000     call sym.quotearg_style                 ; /src:1682
0x00004f1c      81e5ff0f0000   and ebp, 0xfff
0x00004f22      41807d1800     cmp byte [r13 + 0x18], 0
0x00004f27      4989c6         mov r14, rax
0x00004f2a      488b1d4f7621.  mov rbx, qword [obj.program_name]       ; [0x21c580:8]=0
0x00004f31      ba05000000     mov edx, 5
0x00004f36      750e           jne 0x4f46
0x00004f38      41f7451400ff.  test dword [r13 + 0x14], 0xffff00       ; /src:1684
0x00004f40      0f84aa000000   je 0x4ff0
0x00004f46      488d357b0f01.  lea rsi, str.s:_replace__s__overriding_mode__04lo___s ; /src:1682 ; 0x15ec8 ; "%s: replace %s, overriding mode %04lo (%s)? "
0x00004f4d      31ff           xor edi, edi
0x00004f4f      e8dcd7ffff     call sym.imp.dcgettext
0x00004f54      4889c2         mov rdx, rax
0x00004f57      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/src/py.c:97
0x00004f5b      4983c401       add r12, 1
0x00004f5f      488b3d9a7121.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c100:8]=0
0x00004f66      4154           push r12
0x00004f68      4989e9         mov r9, rbp
0x00004f6b      4d89f0         mov r8, r14
0x00004f6e      4889d9         mov rcx, rbx
0x00004f71      be01000000     mov esi, 1
0x00004f76      31c0           xor eax, eax
0x00004f78      e8a3dcffff     call sym.imp.__fprintf_chk
0x00004f7d      58             pop rax
0x00004f7e      5a             pop rdx
0x00004f7f      eb4d           jmp 0x4fce
0x00004f81      0f1f80000000.  nop dword [rax]
0x00004f88      4889de         mov rsi, rbx                            ; /src:1693
0x00004f8b      bf04000000     mov edi, 4
0x00004f90      e83b970000     call sym.quotearg_style
0x00004f95      488d352c1501.  lea rsi, str.s:_overwrite__s            ; 0x164c8 ; "%s: overwrite %s? "
0x00004f9c      488b1ddd7521.  mov rbx, qword [obj.program_name]       ; [0x21c580:8]=0
0x00004fa3      ba05000000     mov edx, 5
0x00004fa8      31ff           xor edi, edi
0x00004faa      4889c5         mov rbp, rax
0x00004fad      e87ed7ffff     call sym.imp.dcgettext
0x00004fb2      488b3d477121.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/src/py.c:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c100:8]=0
0x00004fb9      4889c2         mov rdx, rax
0x00004fbc      4989e8         mov r8, rbp
0x00004fbf      4889d9         mov rcx, rbx
0x00004fc2      be01000000     mov esi, 1
0x00004fc7      31c0           xor eax, eax
0x00004fc9      e852dcffff     call sym.imp.__fprintf_chk
0x00004fce      e8fdbf0000     call sym.yesno                          ; /src:1697
0x00004fd3      488b4c2418     mov rcx, qword [rsp + 0x18]             ; /src:1698
0x00004fd8      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004fe1      7523           jne 0x5006
0x00004fe3      4883c420       add rsp, 0x20
0x00004fe7      5b             pop rbx
0x00004fe8      5d             pop rbp
0x00004fe9      415c           pop r12
0x00004feb      415d           pop r13
0x00004fed      415e           pop r14
0x00004fef      c3             ret
0x00004ff0      488d35010f01.  lea rsi, str.s:_unwritable__s__mode__04lo___s___try_anyway ; /src:1682 ; 0x15ef8 ; "%s: unwritable %s (mode %04lo, %s); try anyway? "
0x00004ff7      31ff           xor edi, edi
0x00004ff9      e832d7ffff     call sym.imp.dcgettext
0x00004ffe      4889c2         mov rdx, rax
0x00005001      e951ffffff     jmp 0x4f57
0x00005006      e875d7ffff     call sym.imp.__stack_chk_fail           ; /src:1698
0x0000500b      0f1f440000     nop dword [rax + rax]
;-- create_hole:
0x00005010      4155           push r13                                ; /src:189
0x00005012      4154           push r12
0x00005014      4989f5         mov r13, rsi
0x00005017      55             push rbp
0x00005018      53             push rbx
0x00005019      4189d4         mov r12d, edx
0x0000501c      4889ce         mov rsi, rcx                            ; /src:190
0x0000501f      ba01000000     mov edx, 1
0x00005024      89fd           mov ebp, edi                            ; /src:189
0x00005026      4883ec08       sub rsp, 8
0x0000502a      4889cb         mov rbx, rcx
0x0000502d      e8ced7ffff     call sym.imp.lseek                      ; /src:190
0x00005032      4885c0         test rax, rax                           ; /src:192
0x00005035      7879           js 0x50b0
0x00005037      4584e4         test r12b, r12b                         ; /src:202
0x0000503a      7514           jne 0x5050
0x0000503c      4883c408       add rsp, 8                              ; /src:209
0x00005040      b801000000     mov eax, 1                              ; /src:208
0x00005045      5b             pop rbx                                 ; /src:209
0x00005046      5d             pop rbp
0x00005047      415c           pop r12
0x00005049      415d           pop r13
0x0000504b      c3             ret
0x0000504c      0f1f4000       nop dword [rax]
0x00005050      4829d8         sub rax, rbx                            ; /src:202
0x00005053      4889da         mov rdx, rbx
0x00005056      89ef           mov edi, ebp
0x00005058      4889c6         mov rsi, rax
0x0000505b      e850fcffff     call sym.punch_hole
0x00005060      85c0           test eax, eax
0x00005062      79d8           jns 0x503c
0x00005064      4c89ee         mov rsi, r13                            ; /src:204
0x00005067      bf04000000     mov edi, 4
0x0000506c      e85f960000     call sym.quotearg_style
0x00005071      488d35731401.  lea rsi, str.error_deallocating__s      ; 0x164eb ; "error deallocating %s"
0x00005078      4889c5         mov rbp, rax
0x0000507b      ba05000000     mov edx, 5
0x00005080      31ff           xor edi, edi
0x00005082      e8a9d6ffff     call sym.imp.dcgettext
0x00005087      4889c3         mov rbx, rax
0x0000508a      e811d5ffff     call sym.imp.__errno_location
0x0000508f      8b30           mov esi, dword [rax]
0x00005091      4889e9         mov rcx, rbp
0x00005094      4889da         mov rdx, rbx
0x00005097      31c0           xor eax, eax
0x00005099      31ff           xor edi, edi
0x0000509b      e870daffff     call sym.imp.error
0x000050a0      4883c408       add rsp, 8                              ; /src:209
0x000050a4      31c0           xor eax, eax                            ; /src:204
0x000050a6      5b             pop rbx                                 ; /src:209
0x000050a7      5d             pop rbp
0x000050a8      415c           pop r12
0x000050aa      415d           pop r13
0x000050ac      c3             ret
0x000050ad      0f1f00         nop dword [rax]
0x000050b0      4c89ee         mov rsi, r13                            ; /src:194
0x000050b3      bf04000000     mov edi, 4
0x000050b8      e813960000     call sym.quotearg_style
0x000050bd      ba05000000     mov edx, 5
0x000050c2      4889c5         mov rbp, rax
0x000050c5      488d350f1401.  lea rsi, str.cannot_lseek__s            ; 0x164db ; "cannot lseek %s"
0x000050cc      ebb2           jmp 0x5080
0x000050ce      6690           nop
;-- sparse_copy:
0x000050d0      4157           push r15                                ; /src:229
0x000050d2      4156           push r14
0x000050d4      4155           push r13
0x000050d6      4154           push r12
0x000050d8      55             push rbp
0x000050d9      53             push rbx
0x000050da      4883ec78       sub rsp, 0x78
0x000050de      488b8424b000.  mov rax, qword [rsp + 0xb0]
0x000050e6      488b9c24c800.  mov rbx, qword [rsp + 0xc8]
0x000050ee      4c8b9424d000.  mov r10, qword [rsp + 0xd0]
0x000050f6      44884c241f     mov byte [rsp + 0x1f], r9b
0x000050fb      4889442458     mov qword [rsp + 0x58], rax
0x00005100      488b8424b800.  mov rax, qword [rsp + 0xb8]
0x00005108      41c60200       mov byte [r10], 0                       ; /src:230
0x0000510c      48895c2440     mov qword [rsp + 0x40], rbx             ; /src:229
0x00005111      4c89542460     mov qword [rsp + 0x60], r10
0x00005116      48c703000000.  mov qword [rbx], 0                      ; /src:231
0x0000511d      4889442410     mov qword [rsp + 0x10], rax             ; /src:229
0x00005122      488b8424c000.  mov rax, qword [rsp + 0xc0]
0x0000512a      4885c0         test rax, rax                           ; /src:235
0x0000512d      4889442428     mov qword [rsp + 0x28], rax             ; /src:229
0x00005132      0f849b030000   je 0x54d3                               ; /src:235
0x00005138      4d85c0         test r8, r8
0x0000513b      4c89442450     mov qword [rsp + 0x50], r8
0x00005140      44894c246c     mov dword [rsp + 0x6c], r9d
0x00005145      4c0f44c1       cmove r8, rcx
0x00005149      48894c2438     mov qword [rsp + 0x38], rcx
0x0000514e      4889542420     mov qword [rsp + 0x20], rdx
0x00005153      89742418       mov dword [rsp + 0x18], esi
0x00005157      897c2468       mov dword [rsp + 0x68], edi
0x0000515b      4531ed         xor r13d, r13d                          ; /src:233
0x0000515e      4c89442448     mov qword [rsp + 0x48], r8
0x00005163      4531ff         xor r15d, r15d                          ; /src:232
0x00005166      488b442438     mov rax, qword [rsp + 0x38]             ; /src:237
0x0000516b      488b542428     mov rdx, qword [rsp + 0x28]
0x00005170      488b742420     mov rsi, qword [rsp + 0x20]             ; stdio2.h:44    _G_va_list __ap))
0x00005175      8b7c2468       mov edi, dword [rsp + 0x68]
0x00005179      4839d0         cmp rax, rdx                            ; /src:237
0x0000517c      480f46d0       cmovbe rdx, rax
0x00005180      e83bd7ffff     call sym.imp.read                       ; stdio2.h:44    _G_va_list __ap))
0x00005185      4885c0         test rax, rax                           ; /src:238
0x00005188      4889442430     mov qword [rsp + 0x30], rax             ; stdio2.h:44    _G_va_list __ap))
0x0000518d      7961           jns 0x51f0                              ; /src:238
0x0000518f      e80cd4ffff     call sym.imp.__errno_location           ; /src:240
0x00005194      833804         cmp dword [rax], 4
0x00005197      74cd           je 0x5166
0x00005199      488b742458     mov rsi, qword [rsp + 0x58]             ; /src:242
0x0000519e      bf04000000     mov edi, 4
0x000051a3      4889c3         mov rbx, rax
0x000051a6      4531ff         xor r15d, r15d                          ; /src:243
0x000051a9      e822950000     call sym.quotearg_style                 ; /src:242
0x000051ae      488d354c1301.  lea rsi, str.error_reading__s           ; 0x16501 ; "error reading %s"
0x000051b5      ba05000000     mov edx, 5
0x000051ba      31ff           xor edi, edi
0x000051bc      4889c5         mov rbp, rax
0x000051bf      e86cd5ffff     call sym.imp.dcgettext
0x000051c4      8b33           mov esi, dword [rbx]                    ; /src:117
0x000051c6      4889c2         mov rdx, rax
0x000051c9      4889e9         mov rcx, rbp
0x000051cc      31ff           xor edi, edi
0x000051ce      31c0           xor eax, eax
0x000051d0      e83bd9ffff     call sym.imp.error
0x000051d5      4883c478       add rsp, 0x78
0x000051d9      4489f8         mov eax, r15d
0x000051dc      5b             pop rbx
0x000051dd      5d             pop rbp
0x000051de      415c           pop r12
0x000051e0      415d           pop r13
0x000051e2      415e           pop r14
0x000051e4      415f           pop r15
0x000051e6      c3             ret
0x000051e7      660f1f840000.  nop word [rax + rax]
0x000051f0      0f8429010000   je 0x531f
0x000051f6      488b442440     mov rax, qword [rsp + 0x40]
0x000051fb      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00005200      4489f9         mov ecx, r15d
0x00005203      4c8b742420     mov r14, qword [rsp + 0x20]
0x00005208      4c8b542448     mov r10, qword [rsp + 0x48]
0x0000520d      480128         add qword [rax], rbp
0x00005210      48837c245000   cmp qword [rsp + 0x50], 0
0x00005216      4d89f3         mov r11, r14
0x00005219      4d89d7         mov r15, r10
0x0000521c      0f9544241d     setne byte [rsp + 0x1d]
0x00005221      0f1f80000000.  nop dword [rax]
0x00005228      4c39fd         cmp rbp, r15
0x0000522b      4c89fb         mov rbx, r15                            ; /usr/include/x86_64-linux-gnu/bits/stdio.h:418
0x0000522e      480f46dd       cmovbe rbx, rbp
0x00005232      4885db         test rbx, rbx
0x00005235      410f95c4       setne r12b                              ; /usr/include/x86_64-linux-gnu/bits/stdio.h:420
0x00005239      442264241d     and r12b, byte [rsp + 0x1d]
0x0000523e      0f840c010000   je 0x5350
0x00005244      4c89f6         mov rsi, r14
0x00005247      4889da         mov rdx, rbx
0x0000524a      803e00         cmp byte [rsi], 0
0x0000524d      0f852d020000   jne 0x5480
0x00005253      4883c601       add rsi, 1
0x00005257      4883ea01       sub rdx, 1
0x0000525b      0f8487010000   je 0x53e8
0x00005261      f6c20f         test dl, 0xf
0x00005264      75e4           jne 0x524a
0x00005266      4c89f7         mov rdi, r14
0x00005269      4c895c2408     mov qword [rsp + 8], r11
0x0000526e      884c241e       mov byte [rsp + 0x1e], cl
0x00005272      e859d6ffff     call sym.imp.memcmp
0x00005277      0fb64c241e     movzx ecx, byte [rsp + 0x1e]
0x0000527c      85c0           test eax, eax
0x0000527e      4c8b5c2408     mov r11, qword [rsp + 8]
0x00005283      410f94c4       sete r12b
0x00005287      4489e2         mov edx, r12d
0x0000528a      31ca           xor edx, ecx
0x0000528c      85c0           test eax, eax
0x0000528e      0f95c0         setne al
0x00005291      4d85ed         test r13, r13
0x00005294      410f95c1       setne r9b
0x00005298      4121d1         and r9d, edx
0x0000529b      4c39fd         cmp rbp, r15                            ; /src:145
0x0000529e      0f8754010000   ja 0x53f8
0x000052a4      84c0           test al, al
0x000052a6      0f844c010000   je 0x53f8
0x000052ac      4584c9         test r9b, r9b
0x000052af      0f84a5000000   je 0x535a
0x000052b5      41bf01000000   mov r15d, 1
0x000052bb      84c9           test cl, cl
0x000052bd      884c241e       mov byte [rsp + 0x1e], cl
0x000052c1      0f85ab000000   jne 0x5372
0x000052c7      8b7c2418       mov edi, dword [rsp + 0x18]
0x000052cb      4c89ea         mov rdx, r13
0x000052ce      4c89de         mov rsi, r11
0x000052d1      44884c2408     mov byte [rsp + 8], r9b
0x000052d6      e825640000     call sym.full_write
0x000052db      4939c5         cmp r13, rax
0x000052de      440fb64c2408   movzx r9d, byte [rsp + 8]
0x000052e4      0fb64c241e     movzx ecx, byte [rsp + 0x1e]
0x000052e9      0f859e010000   jne 0x548d
0x000052ef      4585ff         test r15d, r15d
0x000052f2      4989dd         mov r13, rbx
0x000052f5      0f840d010000   je 0x5408                               ; /src:18
0x000052fb      4885db         test rbx, rbx
0x000052fe      0f851c010000   jne 0x5420
0x00005304      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00005309      48297c2428     sub qword [rsp + 0x28], rdi
0x0000530e      4589e7         mov r15d, r12d
0x00005311      488b442460     mov rax, qword [rsp + 0x60]
0x00005316      448820         mov byte [rax], r12b
0x00005319      0f8547feffff   jne 0x5166
0x0000531f      4584ff         test r15b, r15b
0x00005322      0f84ab010000   je 0x54d3
0x00005328      0fb654246c     movzx edx, byte [rsp + 0x6c]
0x0000532d      488b742410     mov rsi, qword [rsp + 0x10]             ; /src:-36
0x00005332      4c89e9         mov rcx, r13
0x00005335      8b7c2418       mov edi, dword [rsp + 0x18]
0x00005339      4883c478       add rsp, 0x78
0x0000533d      5b             pop rbx
0x0000533e      5d             pop rbp
0x0000533f      415c           pop r12                                 ; /src:-25
0x00005341      415d           pop r13
0x00005343      415e           pop r14
0x00005345      415f           pop r15
0x00005347      e9c4fcffff     jmp sym.create_hole
0x0000534c      0f1f4000       nop dword [rax]
0x00005350      80f901         cmp cl, 1
0x00005353      7453           je 0x53a8
0x00005355      4c39fd         cmp rbp, r15
0x00005358      774e           ja 0x53a8
0x0000535a      4901dd         add r13, rbx
0x0000535d      4531c9         xor r9d, r9d
0x00005360      84c9           test cl, cl
0x00005362      41bf01000000   mov r15d, 1
0x00005368      884c241e       mov byte [rsp + 0x1e], cl
0x0000536c      0f8455ffffff   je 0x52c7
0x00005372      0fb654241f     movzx edx, byte [rsp + 0x1f]
0x00005377      488b742410     mov rsi, qword [rsp + 0x10]
0x0000537c      4c89e9         mov rcx, r13
0x0000537f      8b7c2418       mov edi, dword [rsp + 0x18]
0x00005383      44884c241e     mov byte [rsp + 0x1e], r9b
0x00005388      e883fcffff     call sym.create_hole
0x0000538d      84c0           test al, al
0x0000538f      440fb64c241e   movzx r9d, byte [rsp + 0x1e]
0x00005395      0f8554ffffff   jne 0x52ef
0x0000539b      4189c7         mov r15d, eax
0x0000539e      e932feffff     jmp 0x51d5
0x000053a3      0f1f440000     nop dword [rax + rax]
0x000053a8      4885db         test rbx, rbx
0x000053ab      750b           jne 0x53b8
0x000053ad      4189cc         mov r12d, ecx
0x000053b0      eba8           jmp 0x535a
0x000053b2      4489e1         mov ecx, r12d
0x000053b5      0f1f00         nop dword [rax]                         ; /src:-44
0x000053b8      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x000053c2      4829d8         sub rax, rbx
0x000053c5      4c39e8         cmp rax, r13                            ; /src:-41
0x000053c8      7276           jb 0x5440
0x000053ca      4901dd         add r13, rbx                            ; /src:-43
0x000053cd      4901de         add r14, rbx
0x000053d0      4989df         mov r15, rbx
0x000053d3      4c29fd         sub rbp, r15
0x000053d6      0f854cfeffff   jne 0x5228
0x000053dc      4189cc         mov r12d, ecx
0x000053df      e920ffffff     jmp 0x5304
0x000053e4      0f1f4000       nop dword [rax]
0x000053e8      4189c9         mov r9d, ecx
0x000053eb      4183f101       xor r9d, 1
0x000053ef      4d85ed         test r13, r13
0x000053f2      0f95c0         setne al
0x000053f5      4121c1         and r9d, eax
0x000053f8      4584c9         test r9b, r9b
0x000053fb      74b5           je 0x53b2
0x000053fd      4531ff         xor r15d, r15d
0x00005400      e9b6feffff     jmp 0x52bb
0x00005405      0f1f00         nop dword [rax]
0x00005408      4d89f3         mov r11, r14
0x0000540b      4489e1         mov ecx, r12d
0x0000540e      4901de         add r14, rbx
0x00005411      4989df         mov r15, rbx
0x00005414      ebbd           jmp 0x53d3
0x00005416      662e0f1f8400.  nop word cs:[rax + rax]
0x00005420      4531ff         xor r15d, r15d
0x00005423      4584c9         test r9b, r9b
0x00005426      4489e1         mov ecx, r12d
0x00005429      4d89f3         mov r11, r14
0x0000542c      75a5           jne 0x53d3
0x0000542e      4901de         add r14, rbx
0x00005431      4989df         mov r15, rbx
0x00005434      4531ed         xor r13d, r13d
0x00005437      eb9a           jmp 0x53d3
0x00005439      0f1f80000000.  nop dword [rax]
0x00005440      488b742458     mov rsi, qword [rsp + 0x58]
0x00005445      bf04000000     mov edi, 4
0x0000544a      4531ff         xor r15d, r15d
0x0000544d      e87e920000     call sym.quotearg_style                 ; /usr/include/x86_64-linux-gnu/bits/stdio.h:235
0x00005452      488d35ca1001.  lea rsi, str.overflow_reading__s        ; /usr/include/x86_64-linux-gnu/bits/stdio.h:236 ; 0x16523 ; "overflow reading %s"
0x00005459      4889c3         mov rbx, rax
0x0000545c      ba05000000     mov edx, 5
0x00005461      31ff           xor edi, edi
0x00005463      e8c8d2ffff     call sym.imp.dcgettext
0x00005468      4889d9         mov rcx, rbx
0x0000546b      4889c2         mov rdx, rax
0x0000546e      31f6           xor esi, esi
0x00005470      31ff           xor edi, edi
0x00005472      31c0           xor eax, eax
0x00005474      e897d6ffff     call sym.imp.error
0x00005479      e957fdffff     jmp 0x51d5
0x0000547e      6690           nop
0x00005480      4489e0         mov eax, r12d
0x00005483      89ca           mov edx, ecx
0x00005485      4531e4         xor r12d, r12d
0x00005488      e904feffff     jmp 0x5291
0x0000548d      488b742410     mov rsi, qword [rsp + 0x10]
0x00005492      bf04000000     mov edi, 4
0x00005497      4189cf         mov r15d, ecx
0x0000549a      e831920000     call sym.quotearg_style
0x0000549f      488d356c1001.  lea rsi, str.error_writing__s           ; 0x16512 ; "error writing %s"
0x000054a6      31ff           xor edi, edi
0x000054a8      ba05000000     mov edx, 5
0x000054ad      4889c5         mov rbp, rax                            ; /src:588
0x000054b0      e87bd2ffff     call sym.imp.dcgettext
0x000054b5      4889c3         mov rbx, rax
0x000054b8      e8e3d0ffff     call sym.imp.__errno_location
0x000054bd      8b30           mov esi, dword [rax]
0x000054bf      4889e9         mov rcx, rbp
0x000054c2      4889da         mov rdx, rbx
0x000054c5      31ff           xor edi, edi
0x000054c7      31c0           xor eax, eax
0x000054c9      e842d6ffff     call sym.imp.error                      ; /src:592
0x000054ce      e902fdffff     jmp 0x51d5
0x000054d3      41bf01000000   mov r15d, 1
0x000054d9      e9f7fcffff     jmp 0x51d5
0x000054de      6690           nop
;-- set_process_security_ctx:
0x000054e0      4155           push r13
0x000054e2      4154           push r12                                ; /src:616
0x000054e4      55             push rbp
0x000054e5      53             push rbx
0x000054e6      4c89c5         mov rbp, r8
0x000054e9      4883ec08       sub rsp, 8
0x000054ed      4180782500     cmp byte [r8 + 0x25], 0
0x000054f2      746c           je 0x5560
0x000054f4      4989fd         mov r13, rdi
0x000054f7      e8a4d0ffff     call sym.imp.__errno_location
0x000054fc      807d2300       cmp byte [rbp + 0x23], 0
0x00005500      4989c4         mov r12, rax
0x00005503      757b           jne 0x5580
0x00005505      4c89ee         mov rsi, r13
0x00005508      bf04000000     mov edi, 4
0x0000550d      41c704245f00.  mov dword [r12], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x00005515      e8b6910000     call sym.quotearg_style
0x0000551a      488d350f0a01.  lea rsi, str.failed_to_get_security_context_of__s ; 0x15f30 ; "failed to get security context of %s"
0x00005521      ba05000000     mov edx, 5
0x00005526      31ff           xor edi, edi
0x00005528      4889c3         mov rbx, rax
0x0000552b      e800d2ffff     call sym.imp.dcgettext
0x00005530      418b3424       mov esi, dword [r12]
0x00005534      4889d9         mov rcx, rbx
0x00005537      4889c2         mov rdx, rax
0x0000553a      31ff           xor edi, edi
0x0000553c      31c0           xor eax, eax
0x0000553e      e8cdd5ffff     call sym.imp.error                      ; /src:638
0x00005543      0fb65d26       movzx ebx, byte [rbp + 0x26]
0x00005547      4883c408       add rsp, 8
0x0000554b      83f301         xor ebx, 1
0x0000554e      89d8           mov eax, ebx
0x00005550      5b             pop rbx
0x00005551      5d             pop rbp
0x00005552      415c           pop r12
0x00005554      415d           pop r13
0x00005556      c3             ret
0x00005557      660f1f840000.  nop word [rax + rax]
0x00005560      89cb           mov ebx, ecx
0x00005562      41225821       and bl, byte [r8 + 0x21]
0x00005566      7530           jne 0x5598
0x00005568      4883c408       add rsp, 8
0x0000556c      bb01000000     mov ebx, 1
0x00005571      89d8           mov eax, ebx
0x00005573      5b             pop rbx
0x00005574      5d             pop rbp
0x00005575      415c           pop r12
0x00005577      415d           pop r13
0x00005579      c3             ret
0x0000557a      660f1f440000   nop word [rax + rax]
0x00005580      0fb65d26       movzx ebx, byte [rbp + 0x26]
0x00005584      84db           test bl, bl                             ; /src:650
0x00005586      0f8579ffffff   jne 0x5505
0x0000558c      c7005f000000   mov dword [rax], 0x5f                   ; /src:652 ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x00005592      ebb3           jmp 0x5547
0x00005594      0f1f4000       nop dword [rax]
0x00005598      e803d0ffff     call sym.imp.__errno_location
0x0000559d      c7005f000000   mov dword [rax], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x000055a3      4883c408       add rsp, 8
0x000055a7      89d8           mov eax, ebx
0x000055a9      5b             pop rbx
0x000055aa      5d             pop rbp
0x000055ab      415c           pop r12
0x000055ad      415d           pop r13
0x000055af      c3             ret
;-- set_file_security_ctx:
0x000055b0      4154           push r12
0x000055b2      55             push rbp
0x000055b3      4889cd         mov rbp, rcx
0x000055b6      53             push rbx
0x000055b7      4989fc         mov r12, rdi
0x000055ba      e8e1cfffff     call sym.imp.__errno_location
0x000055bf      807d2300       cmp byte [rbp + 0x23], 0
0x000055c3      4889c3         mov rbx, rax
0x000055c6      7406           je 0x55ce
0x000055c8      807d2600       cmp byte [rbp + 0x26], 0
0x000055cc      744a           je 0x5618
0x000055ce      4c89e2         mov rdx, r12
0x000055d1      c7035f000000   mov dword [rbx], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x000055d7      be04000000     mov esi, 4                              ; /src:664
0x000055dc      31ff           xor edi, edi
0x000055de      e8cd8f0000     call sym.quotearg_n_style
0x000055e3      488d356e0901.  lea rsi, str.failed_to_set_the_security_context_of__s ; 0x15f58 ; "failed to set the security context of %s"
0x000055ea      ba05000000     mov edx, 5
0x000055ef      31ff           xor edi, edi
0x000055f1      4889c5         mov rbp, rax
0x000055f4      e837d1ffff     call sym.imp.dcgettext
0x000055f9      8b33           mov esi, dword [rbx]
0x000055fb      4889e9         mov rcx, rbp
0x000055fe      4889c2         mov rdx, rax
0x00005601      31ff           xor edi, edi
0x00005603      31c0           xor eax, eax
0x00005605      e806d5ffff     call sym.imp.error
0x0000560a      5b             pop rbx
0x0000560b      31c0           xor eax, eax
0x0000560d      5d             pop rbp
0x0000560e      415c           pop r12
0x00005610      c3             ret
0x00005611      0f1f80000000.  nop dword [rax]
0x00005618      c7005f000000   mov dword [rax], 0x5f                   ; /src:1399 ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x0000561e      31c0           xor eax, eax
0x00005620      5b             pop rbx
0x00005621      5d             pop rbp
0x00005622      415c           pop r12
0x00005624      c3             ret
0x00005625      90             nop
0x00005626      662e0f1f8400.  nop word cs:[rax + rax]                 ; /src:1404
;-- dest_info_init:
0x00005630      4c8d05d97400.  lea r8, sym.triple_free                 ; 0xcb10 ; "SH\x89\xfbH\x8b?\xe8da\xff\xffH\x89\xdf[\xe9[a\xff\xfff.\x0f\x1f\x84"
0x00005637      488d0d627400.  lea rcx, sym.triple_compare             ; 0xcaa0 ; "1\xc0H\x8bV\bH9W\bt\x04\xf3\xc3f\x90H\x8bN\x10H9O\x10u\xf2H\x83\xec\bH\x8b6H\x8b?\xe8\x17$"
0x0000563e      31f6           xor esi, esi
0x00005640      488d15197400.  lea rdx, sym.triple_hash                ; 0xca60 ; "USH\x89\xfdH\x89\xf3H\x83\xec\bH\x8b?\xe8\xfcq"
0x00005647      53             push rbx
0x00005648      4889fb         mov rbx, rdi                            ; /src:1421
0x0000564b      bf3d000000     mov edi, 0x3d                           ; '='
0x00005650      e89b690000     call sym.hash_initialize
0x00005655      48894340       mov qword [rbx + 0x40], rax
0x00005659      5b             pop rbx
0x0000565a      c3             ret
0x0000565b      0f1f440000     nop dword [rax + rax]
;-- src_info_init:
0x00005660      4c8d05a97400.  lea r8, sym.triple_free                 ; 0xcb10 ; "SH\x89\xfbH\x8b?\xe8da\xff\xffH\x89\xdf[\xe9[a\xff\xfff.\x0f\x1f\x84"
0x00005667      488d0d327400.  lea rcx, sym.triple_compare             ; 0xcaa0 ; "1\xc0H\x8bV\bH9W\bt\x04\xf3\xc3f\x90H\x8bN\x10H9O\x10u\xf2H\x83\xec\bH\x8b6H\x8b?\xe8\x17$"
0x0000566e      31f6           xor esi, esi
0x00005670      488d15197400.  lea rdx, sym.triple_hash_no_name        ; 0xca90 ; "H\x8bG\b1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f"
0x00005677      53             push rbx
0x00005678      4889fb         mov rbx, rdi                            ; /src:2706
0x0000567b      bf3d000000     mov edi, 0x3d                           ; '='
0x00005680      e86b690000     call sym.hash_initialize
0x00005685      48894348       mov qword [rbx + 0x48], rax
0x00005689      5b             pop rbx
0x0000568a      c3             ret
0x0000568b      0f1f440000     nop dword [rax + rax]
;-- cp_options_default:
0x00005690      660fefc0       pxor xmm0, xmm0
0x00005694      53             push rbx
0x00005695      4889fb         mov rbx, rdi
0x00005698      0f1107         movups xmmword [rdi], xmm0
0x0000569b      0f114710       movups xmmword [rdi + 0x10], xmm0
0x0000569f      0f114720       movups xmmword [rdi + 0x20], xmm0
0x000056a3      0f114730       movups xmmword [rdi + 0x30], xmm0
0x000056a7      0f114740       movups xmmword [rdi + 0x40], xmm0
0x000056ab      e890d1ffff     call sym.imp.geteuid
0x000056b0      85c0           test eax, eax
0x000056b2      c74334ffffff.  mov dword [rbx + 0x34], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x000056b9      0f94c0         sete al
0x000056bc      88431b         mov byte [rbx + 0x1b], al
0x000056bf      88431a         mov byte [rbx + 0x1a], al               ; /src:2723
0x000056c2      5b             pop rbx
0x000056c3      c3             ret
0x000056c4      6690           nop
0x000056c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- chown_failure_ok:
0x000056d0      53             push rbx
0x000056d1      4889fb         mov rbx, rdi
0x000056d4      e8c7ceffff     call sym.imp.__errno_location
0x000056d9      8b10           mov edx, dword [rax]
0x000056db      83fa01         cmp edx, 1
0x000056de      0f94c0         sete al
0x000056e1      83fa16         cmp edx, 0x16
0x000056e4      0f94c2         sete dl
0x000056e7      08d0           or al, dl
0x000056e9      7407           je 0x56f2
0x000056eb      0fb6431a       movzx eax, byte [rbx + 0x1a]
0x000056ef      83f001         xor eax, 1
0x000056f2      5b             pop rbx
0x000056f3      c3             ret
0x000056f4      6690           nop
0x000056f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_owner:
0x00005700      4157           push r15
0x00005702      4156           push r14
0x00005704      4155           push r13                                ; /src:488
0x00005706      4154           push r12
0x00005708      4989f5         mov r13, rsi                            ; /src:490
0x0000570b      55             push rbp                                ; /src:495
0x0000570c      53             push rbx
0x0000570d      4889fd         mov rbp, rdi
0x00005710      89d3           mov ebx, edx
0x00005712      4883ec08       sub rsp, 8
0x00005716      4584c0         test r8b, r8b
0x00005719      448b711c       mov r14d, dword [rcx + 0x1c]
0x0000571d      448b6120       mov r12d, dword [rcx + 0x20]
0x00005721      7532           jne 0x5755
0x00005723      48b8ff000000.  movabs rax, 0xff0000000000ff            ; 71776119061217535
0x0000572d      48854718       test qword [rdi + 0x18], rax            ; /src:507
0x00005731      0f8499000000   je 0x57d0
0x00005737      418b7118       mov esi, dword [r9 + 0x18]
0x0000573b      8b5118         mov edx, dword [rcx + 0x18]
0x0000573e      89d0           mov eax, edx
0x00005740      89f1           mov ecx, esi
0x00005742      f7d0           not eax
0x00005744      81e1ff0f0000   and ecx, 0xfff
0x0000574a      80cc0e         or ah, 0xe
0x0000574d      85c8           test eax, ecx
0x0000574f      0f85cb000000   jne 0x5820
0x00005755      83fbff         cmp ebx, 0xffffffff
0x00005758      4489e2         mov edx, r12d
0x0000575b      4489f6         mov esi, r14d
0x0000575e      7450           je 0x57b0
0x00005760      89df           mov edi, ebx
0x00005762      e8e9d3ffff     call sym.imp.fchown
0x00005767      85c0           test eax, eax
0x00005769      7451           je 0x57bc
0x0000576b      e830ceffff     call sym.imp.__errno_location           ; /src:541
0x00005770      448b30         mov r14d, dword [rax]
0x00005773      4989c7         mov r15, rax
0x00005776      4183fe01       cmp r14d, 1
0x0000577a      0f8468010000   je 0x58e8
0x00005780      4183fe16       cmp r14d, 0x16
0x00005784      0f845e010000   je 0x58e8
0x0000578a      4889ef         mov rdi, rbp
0x0000578d      e83effffff     call sym.chown_failure_ok               ; /src:508
0x00005792      89c2           mov edx, eax                            ; /src:541
0x00005794      31c0           xor eax, eax
0x00005796      84d2           test dl, dl
0x00005798      0f84f2000000   je 0x5890
0x0000579e      4883c408       add rsp, 8
0x000057a2      5b             pop rbx
0x000057a3      5d             pop rbp
0x000057a4      415c           pop r12
0x000057a6      415d           pop r13
0x000057a8      415e           pop r14
0x000057aa      415f           pop r15
0x000057ac      c3             ret
0x000057ad      0f1f00         nop dword [rax]
0x000057b0      4c89ef         mov rdi, r13
0x000057b3      e888d2ffff     call sym.imp.lchown
0x000057b8      85c0           test eax, eax
0x000057ba      7534           jne 0x57f0
0x000057bc      4883c408       add rsp, 8
0x000057c0      b801000000     mov eax, 1
0x000057c5      5b             pop rbx
0x000057c6      5d             pop rbp
0x000057c7      415c           pop r12
0x000057c9      415d           pop r13
0x000057cb      415e           pop r14
0x000057cd      415f           pop r15
0x000057cf      c3             ret
0x000057d0      807f2b00       cmp byte [rdi + 0x2b], 0
0x000057d4      0f847bffffff   je 0x5755
0x000057da      418b7118       mov esi, dword [r9 + 0x18]
0x000057de      8b5710         mov edx, dword [rdi + 0x10]
0x000057e1      e958ffffff     jmp 0x573e
0x000057e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000057f0      e8abcdffff     call sym.imp.__errno_location
0x000057f5      8b18           mov ebx, dword [rax]
0x000057f7      4989c6         mov r14, rax
0x000057fa      83fb01         cmp ebx, 1                              ; /src:496
0x000057fd      7409           je 0x5808
0x000057ff      83fb16         cmp ebx, 0x16
0x00005802      0f8582ffffff   jne 0x578a
0x00005808      4489e2         mov edx, r12d
0x0000580b      beffffffff     mov esi, 0xffffffff                     ; -1
0x00005810      4c89ef         mov rdi, r13
0x00005813      e828d2ffff     call sym.imp.lchown
0x00005818      41891e         mov dword [r14], ebx
0x0000581b      e96affffff     jmp 0x578a
0x00005820      21f2           and edx, esi
0x00005822      4c89ef         mov rdi, r13
0x00005825      89de           mov esi, ebx
0x00005827      81e2c0010000   and edx, 0x1c0
0x0000582d      e89e740000     call sym.qset_acl
0x00005832      85c0           test eax, eax
0x00005834      0f841bffffff   je 0x5755
0x0000583a      e861cdffff     call sym.imp.__errno_location
0x0000583f      4889c3         mov rbx, rax
0x00005842      8b00           mov eax, dword [rax]
0x00005844      83f801         cmp eax, 1
0x00005847      0f84b3000000   je 0x5900
0x0000584d      83f816         cmp eax, 0x16
0x00005850      0f84aa000000   je 0x5900
0x00005856      4c89ee         mov rsi, r13
0x00005859      bf04000000     mov edi, 4
0x0000585e      e86d8e0000     call sym.quotearg_style
0x00005863      488d35cd0c01.  lea rsi, str.clearing_permissions_for__s ; 0x16537 ; "clearing permissions for %s"
0x0000586a      31ff           xor edi, edi
0x0000586c      ba05000000     mov edx, 5
0x00005871      4989c4         mov r12, rax
0x00005874      e8b7ceffff     call sym.imp.dcgettext
0x00005879      8b33           mov esi, dword [rbx]
0x0000587b      4889c2         mov rdx, rax
0x0000587e      4c89e1         mov rcx, r12
0x00005881      31ff           xor edi, edi
0x00005883      31c0           xor eax, eax
0x00005885      e886d2ffff     call sym.imp.error
0x0000588a      eb40           jmp 0x58cc
0x0000588c      0f1f4000       nop dword [rax]
0x00005890      4c89ee         mov rsi, r13
0x00005893      bf04000000     mov edi, 4
0x00005898      e8338e0000     call sym.quotearg_style
0x0000589d      488d35e40601.  lea rsi, str.failed_to_preserve_ownership_for__s ; /src:541 ; 0x15f88 ; "failed to preserve ownership for %s"
0x000058a4      ba05000000     mov edx, 5
0x000058a9      31ff           xor edi, edi
0x000058ab      4989c4         mov r12, rax
0x000058ae      e87dceffff     call sym.imp.dcgettext
0x000058b3      4889c3         mov rbx, rax
0x000058b6      e8e5ccffff     call sym.imp.__errno_location
0x000058bb      8b30           mov esi, dword [rax]
0x000058bd      4c89e1         mov rcx, r12
0x000058c0      4889da         mov rdx, rbx
0x000058c3      31ff           xor edi, edi
0x000058c5      31c0           xor eax, eax
0x000058c7      e844d2ffff     call sym.imp.error
0x000058cc      0fb64524       movzx eax, byte [rbp + 0x24]
0x000058d0      4883c408       add rsp, 8
0x000058d4      5b             pop rbx
0x000058d5      5d             pop rbp
0x000058d6      415c           pop r12
0x000058d8      f7d8           neg eax
0x000058da      415d           pop r13
0x000058dc      415e           pop r14
0x000058de      415f           pop r15                                 ; /src:2745
0x000058e0      c3             ret
0x000058e1      0f1f80000000.  nop dword [rax]
0x000058e8      4489e2         mov edx, r12d
0x000058eb      beffffffff     mov esi, 0xffffffff                     ; -1
0x000058f0      89df           mov edi, ebx
0x000058f2      e859d2ffff     call sym.imp.fchown
0x000058f7      458937         mov dword [r15], r14d
0x000058fa      e98bfeffff     jmp 0x578a
0x000058ff      90             nop
0x00005900      807d1b00       cmp byte [rbp + 0x1b], 0
0x00005904      0f854cffffff   jne 0x5856
0x0000590a      ebc0           jmp 0x58cc
0x0000590c      0f1f4000       nop dword [rax]
;-- cached_umask:
0x00005910      53             push rbx
0x00005911      8b1df9662100   mov ebx, dword [obj.mask.7898]          ; [0x21c010:4]=-1
0x00005917      83fbff         cmp ebx, 0xffffffff
0x0000591a      7404           je 0x5920
0x0000591c      89d8           mov eax, ebx
0x0000591e      5b             pop rbx
0x0000591f      c3             ret
0x00005920      31ff           xor edi, edi
0x00005922      e869d0ffff     call sym.imp.umask
0x00005927      89c3           mov ebx, eax                            ; /src:1548
0x00005929      89c7           mov edi, eax
0x0000592b      8905df662100   mov dword [obj.mask.7898], eax          ; [0x21c010:4]=-1
0x00005931      e85ad0ffff     call sym.imp.umask
0x00005936      89d8           mov eax, ebx
0x00005938      5b             pop rbx
0x00005939      c3             ret
0x0000593a      660f1f440000   nop word [rax + rax]
;-- copy_internal:
0x00005940      55             push rbp
0x00005941      4889e5         mov rbp, rsp
0x00005944      4157           push r15
0x00005946      4156           push r14
0x00005948      4155           push r13
0x0000594a      4154           push r12
0x0000594c      4189d6         mov r14d, edx
0x0000594f      53             push rbx
0x00005950      4c89cb         mov rbx, r9
0x00005953      4881ec980300.  sub rsp, 0x398
0x0000595a      488b4518       mov rax, qword [rbp + 0x18]
0x0000595e      448b6d10       mov r13d, dword [rbp + 0x10]
0x00005962      48898db8fcff.  mov qword [rbp - 0x348], rcx
0x00005969      488b4d28       mov rcx, qword [rbp + 0x28]
0x0000596d      4889bdf0fcff.  mov qword [rbp - 0x310], rdi
0x00005974      4889b5f8fcff.  mov qword [rbp - 0x308], rsi
0x0000597b      488985c8fcff.  mov qword [rbp - 0x338], rax
0x00005982      488b4520       mov rax, qword [rbp + 0x20]
0x00005986      48898de0fcff.  mov qword [rbp - 0x320], rcx            ; /src:1565
0x0000598d      4c8985d0fcff.  mov qword [rbp - 0x330], r8
0x00005994      64488b0c2528.  mov rcx, qword fs:[0x28]
0x0000599d      48894dc8       mov qword [rbp - 0x38], rcx
0x000059a1      31c9           xor ecx, ecx
0x000059a3      c60000         mov byte [rax], 0
0x000059a6      450fb66118     movzx r12d, byte [r9 + 0x18]            ; /src:1573
0x000059ab      488985c0fcff.  mov qword [rbp - 0x340], rax            ; /src:1574
0x000059b2      4488adebfcff.  mov byte [rbp - 0x315], r13b
0x000059b9      458b7934       mov r15d, dword [r9 + 0x34]
0x000059bd      4584e4         test r12b, r12b
0x000059c0      741f           je 0x59e1
0x000059c2      4585ff         test r15d, r15d
0x000059c5      0f8895020000   js 0x5c60
0x000059cb      488b85e0fcff.  mov rax, qword [rbp - 0x320]
0x000059d2      4585ff         test r15d, r15d
0x000059d5      410f94c6       sete r14b
0x000059d9      4885c0         test rax, rax
0x000059dc      7403           je 0x59e1
0x000059de      448830         mov byte [rax], r14b                    ; /src:1582
0x000059e1      4585ff         test r15d, r15d
0x000059e4      0f84ae020000   je 0x5c98                               ; ../coreutils-8.31/src/selinux.h:144
0x000059ea      4183ff11       cmp r15d, 0x11
0x000059ee      4c8ba5f0fcff.  mov r12, qword [rbp - 0x310]            ; /src:1582
0x000059f5      0f84fd070000   je 0x61f8
0x000059fb      837b0402       cmp dword [rbx + 4], 2
0x000059ff      4c8d9580fdff.  lea r10, [rbp - 0x280]
0x00005a06      4c89e6         mov rsi, r12
0x00005a09      bf01000000     mov edi, 1
0x00005a0e      4c89d2         mov rdx, r10
0x00005a11      0f84f9070000   je 0x6210
0x00005a17      e8c4cfffff     call sym.imp.__xstat
0x00005a1c      85c0           test eax, eax
0x00005a1e      4c89e6         mov rsi, r12
0x00005a21      0f95c0         setne al
0x00005a24      84c0           test al, al
0x00005a26      0f85f9070000   jne 0x6225
0x00005a2c      8b8598fdffff   mov eax, dword [rbp - 0x268]
0x00005a32      8985ecfcffff   mov dword [rbp - 0x314], eax
0x00005a38      2500f00000     and eax, 0xf000
0x00005a3d      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x00005a42      0f84c00a0000   je 0x6508
0x00005a48      4584ed         test r13b, r13b                         ; /src:1622
0x00005a4b      743d           je 0x5a8a
0x00005a4d      488b7b48       mov rdi, qword [rbx + 0x48]
0x00005a51      4885ff         test rdi, rdi
0x00005a54      7434           je 0x5a8a
0x00005a56      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00005a5c      4c8d9580fdff.  lea r10, [rbp - 0x280]
0x00005a63      2500f00000     and eax, 0xf000
0x00005a68      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x00005a6d      740c           je 0x5a7b
0x00005a6f      448b1b         mov r11d, dword [rbx]
0x00005a72      4585db         test r11d, r11d                         ; /src:1500
0x00005a75      0f840d090000   je 0x6388
0x00005a7b      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00005a82      4c89d2         mov rdx, r10
0x00005a85      e8d6570000     call sym.record_file
0x00005a8a      8b4304         mov eax, dword [rbx + 4]
0x00005a8d      c785d8fcffff.  mov dword [rbp - 0x328], 1
0x00005a97      83f804         cmp eax, 4                              ; /src:1505
0x00005a9a      7412           je 0x5aae
0x00005a9c      83f803         cmp eax, 3
0x00005a9f      0f94c0         sete al
0x00005aa2      0fb6c0         movzx eax, al
0x00005aa5      4421e8         and eax, r13d
0x00005aa8      8985d8fcffff   mov dword [rbp - 0x328], eax
0x00005aae      4584f6         test r14b, r14b
0x00005ab1      0f8509020000   jne 0x5cc0
0x00005ab7      4183ff11       cmp r15d, 0x11
0x00005abb      0f845f090000   je 0x6420
0x00005ac1      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00005ac7      2500f00000     and eax, 0xf000
0x00005acc      3d00800000     cmp eax, 0x8000
0x00005ad1      0f84e9080000   je 0x63c0
0x00005ad7      3d00a00000     cmp eax, 0xa000
0x00005adc      41b800010000   mov r8d, 0x100
0x00005ae2      410f94c1       sete r9b
0x00005ae6      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x00005aeb      0f94c0         sete al
0x00005aee      4109c1         or r9d, eax
0x00005af1      0fb64314       movzx eax, byte [rbx + 0x14]
0x00005af5      83f001         xor eax, 1
0x00005af8      4108c1         or r9b, al
0x00005afb      0f84bf080000   je 0x63c0
0x00005b01      4c8da510feff.  lea r12, [rbp - 0x1f0]
0x00005b08      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00005b0f      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x00005b14      bf01000000     mov edi, 1
0x00005b19      44888db0fcff.  mov byte [rbp - 0x350], r9b
0x00005b20      4c89e1         mov rcx, r12
0x00005b23      e898ccffff     call sym.imp.__fxstatat
0x00005b28      85c0           test eax, eax
0x00005b2a      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x00005b32      0f8578060000   jne 0x61b0
0x00005b38      4531c0         xor r8d, r8d
0x00005b3b      837b0802       cmp dword [rbx + 8], 2
0x00005b3f      741e           je 0x5b5f
0x00005b41      488b8518feff.  mov rax, qword [rbp - 0x1e8]
0x00005b48      48398588fdff.  cmp qword [rbp - 0x278], rax
0x00005b4f      0f84c3110000   je 0x6d18
0x00005b55      837b0402       cmp dword [rbx + 4], 2
0x00005b59      0f8471130000   je 0x6ed0
0x00005b5f      807b2d00       cmp byte [rbx + 0x2d], 0
0x00005b63      0f84f7090000   je 0x6560
0x00005b69      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00005b6f      2500f00000     and eax, 0xf000
0x00005b74      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x00005b79      0f8421140000   je 0x6fa0
0x00005b7f      31c9           xor ecx, ecx
0x00005b81      807b1f00       cmp byte [rbx + 0x1f], 0
0x00005b85      741e           je 0x5ba5
0x00005b87      807b1800       cmp byte [rbx + 0x18], 0
0x00005b8b      b901000000     mov ecx, 1
0x00005b90      7413           je 0x5ba5
0x00005b92      31c9           xor ecx, ecx
0x00005b94      488b8580fdff.  mov rax, qword [rbp - 0x280]
0x00005b9b      48398510feff.  cmp qword [rbp - 0x1f0], rax
0x00005ba2      0f95c1         setne cl
0x00005ba5      4c8d9580fdff.  lea r10, [rbp - 0x280]
0x00005bac      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00005bb3      488db510feff.  lea rsi, [rbp - 0x1f0]
0x00005bba      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00005bc1      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00005bc8      4c89d2         mov rdx, r10
0x00005bcb      e800a20000     call sym.utimecmp
0x00005bd0      85c0           test eax, eax
0x00005bd2      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00005bda      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00005be2      0f88480f0000   js 0x6b30
0x00005be8      488b85e0fcff.  mov rax, qword [rbp - 0x320]
0x00005bef      4885c0         test rax, rax
0x00005bf2      7403           je 0x5bf7
0x00005bf4      c60001         mov byte [rax], 1
0x00005bf7      488b9580fdff.  mov rdx, qword [rbp - 0x280]
0x00005bfe      488bb588fdff.  mov rsi, qword [rbp - 0x278]
0x00005c05      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00005c0c      e8cf400000     call sym.remember_copied
0x00005c11      4885c0         test rax, rax
0x00005c14      0f8466050000   je 0x6180
0x00005c1a      0fb64b2e       movzx ecx, byte [rbx + 0x2e]
0x00005c1e      448b85d8fcff.  mov r8d, dword [rbp - 0x328]
0x00005c25      ba01000000     mov edx, 1
0x00005c2a      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00005c31      4889c7         mov rdi, rax
0x00005c34      e877f1ffff     call sym.create_hard_link
0x00005c39      84c0           test al, al
0x00005c3b      0f853f050000   jne 0x6180                              ; /src:1434
0x00005c41      807b2500       cmp byte [rbx + 0x25], 0
0x00005c45      0f85050e0000   jne 0x6a50
0x00005c4b      0f1f440000     nop dword [rax + rax]
0x00005c50      4531e4         xor r12d, r12d
0x00005c53      e92e050000     jmp 0x6186                              ; /src:1438
0x00005c58      0f1f84000000.  nop dword [rax + rax]
0x00005c60      ba9cffffff     mov edx, 0xffffff9c                     ; 4294967196
0x00005c65      4889f1         mov rcx, rsi
0x00005c68      41b801000000   mov r8d, 1
0x00005c6e      4889fe         mov rsi, rdi
0x00005c71      89d7           mov edi, edx
0x00005c73      e8488d0000     call sym.renameatu
0x00005c78      85c0           test eax, eax
0x00005c7a      0f85700b0000   jne 0x67f0
0x00005c80      488b85e0fcff.  mov rax, qword [rbp - 0x320]
0x00005c87      4589e6         mov r14d, r12d
0x00005c8a      4885c0         test rax, rax
0x00005c8d      7409           je 0x5c98
0x00005c8f      c60001         mov byte [rax], 1
0x00005c92      660f1f440000   nop word [rax + rax]                    ; /src:1752
0x00005c98      807b3100       cmp byte [rbx + 0x31], 0
0x00005c9c      7512           jne 0x5cb0
0x00005c9e      4c8ba5f8fcff.  mov r12, qword [rbp - 0x308]
0x00005ca5      4531ff         xor r15d, r15d
0x00005ca8      e94efdffff     jmp 0x59fb
0x00005cad      0f1f00         nop dword [rax]
0x00005cb0      4531ff         xor r15d, r15d
0x00005cb3      e990fdffff     jmp 0x5a48
0x00005cb8      0f1f84000000.  nop dword [rax + rax]                   ; /src:1763
0x00005cc0      4531c9         xor r9d, r9d
0x00005cc3      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x00005cce      4584ed         test r13b, r13b
0x00005cd1      0f84b9000000   je 0x5d90
0x00005cd7      48837b4000     cmp qword [rbx + 0x40], 0
0x00005cdc      0f84ae000000   je 0x5d90
0x00005ce2      440fb66318     movzx r12d, byte [rbx + 0x18]
0x00005ce7      4584e4         test r12b, r12b
0x00005cea      0f85a0000000   jne 0x5d90
0x00005cf0      8b13           mov edx, dword [rbx]
0x00005cf2      85d2           test edx, edx
0x00005cf4      0f857e0c0000   jne 0x6978
0x00005cfa      4584c9         test r9b, r9b
0x00005cfd      488d9510feff.  lea rdx, [rbp - 0x1f0]
0x00005d04      0f8476180000   je 0x7580
0x00005d0a      8b4218         mov eax, dword [rdx + 0x18]
0x00005d0d      2500f00000     and eax, 0xf000
0x00005d12      3d00a00000     cmp eax, 0xa000
0x00005d17      7577           jne 0x5d90
0x00005d19      488b7b40       mov rdi, qword [rbx + 0x40]
0x00005d1d      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00005d24      e8c7550000     call sym.seen_file
0x00005d29      84c0           test al, al
0x00005d2b      7463           je 0x5d90
0x00005d2d      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00005d34      be04000000     mov esi, 4
0x00005d39      bf01000000     mov edi, 1
0x00005d3e      e86d880000     call sym.quotearg_n_style
0x00005d43      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x00005d4a      31ff           xor edi, edi
0x00005d4c      be04000000     mov esi, 4
0x00005d51      4989c5         mov r13, rax                            ; /src:1788
0x00005d54      e857880000     call sym.quotearg_n_style
0x00005d59      488d35f80301.  lea rsi, str.will_not_copy__s_through_just_created_symlink__s ; 0x16158 ; "will not copy %s through just-created symlink %s"
0x00005d60      4889c3         mov rbx, rax
0x00005d63      31ff           xor edi, edi
0x00005d65      ba05000000     mov edx, 5
0x00005d6a      e8c1c9ffff     call sym.imp.dcgettext                  ; /src:1823
0x00005d6f      4d89e8         mov r8, r13
0x00005d72      4889c2         mov rdx, rax
0x00005d75      4889d9         mov rcx, rbx
0x00005d78      31f6           xor esi, esi
0x00005d7a      31ff           xor edi, edi
0x00005d7c      31c0           xor eax, eax
0x00005d7e      e88dcdffff     call sym.imp.error
0x00005d83      e9fe030000     jmp 0x6186
0x00005d88      0f1f84000000.  nop dword [rax + rax]
0x00005d90      807b2e00       cmp byte [rbx + 0x2e], 0
0x00005d94      740a           je 0x5da0
0x00005d96      807b1800       cmp byte [rbx + 0x18], 0
0x00005d9a      0f84b0050000   je 0x6350                               ; /src:1822
0x00005da0      4585ff         test r15d, r15d
0x00005da3      0f8497030000   je 0x6140
0x00005da9      807b2a00       cmp byte [rbx + 0x2a], 0
0x00005dad      7416           je 0x5dc5
0x00005daf      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00005db5      2500f00000     and eax, 0xf000
0x00005dba      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x00005dbf      0f84cb0b0000   je 0x6990                               ; /src:2031
0x00005dc5      0fb64318       movzx eax, byte [rbx + 0x18]
0x00005dc9      84c0           test al, al
0x00005dcb      0f859f040000   jne 0x6270
0x00005dd1      807b2200       cmp byte [rbx + 0x22], 0
0x00005dd5      0f85d51b0000   jne 0x79b0
0x00005ddb      410fb6c6       movzx eax, r14b
0x00005ddf      48c785a8fcff.  mov qword [rbp - 0x358], 0
0x00005dea      8985e0fcffff   mov dword [rbp - 0x320], eax
0x00005df0      448ba5ecfcff.  mov r12d, dword [rbp - 0x314]
0x00005df7      4181e4ff0f00.  and r12d, 0xfff
0x00005dfe      807b2b00       cmp byte [rbx + 0x2b], 0
0x00005e02      740b           je 0x5e0f
0x00005e04      448b6310       mov r12d, dword [rbx + 0x10]
0x00005e08      4181e4ff0f00.  and r12d, 0xfff
0x00005e0f      807b1d00       cmp byte [rbx + 0x1d], 0
0x00005e13      0f851f060000   jne 0x6438                              ; /src:2032
0x00005e19      448bbdecfcff.  mov r15d, dword [rbp - 0x314]
0x00005e20      4181e700f000.  and r15d, 0xf000
0x00005e27      4181ff004000.  cmp r15d, 0x4000                        ; u"%\xf0\u3d00\ua000"
0x00005e2e      0f843c0e0000   je 0x6c70
0x00005e34      8b8de0fcffff   mov ecx, dword [rbp - 0x320]
0x00005e3a      8b95ecfcffff   mov edx, dword [rbp - 0x314]
0x00005e40      4989d8         mov r8, rbx
0x00005e43      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00005e4a      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00005e51      e88af6ffff     call sym.set_process_security_ctx
0x00005e56      84c0           test al, al
0x00005e58      c785a4fcffff.  mov dword [rbp - 0x35c], 0
0x00005e62      0f84e8fdffff   je 0x5c50
0x00005e68      0fb6432c       movzx eax, byte [rbx + 0x2c]            ; .//coreutils-8.31/lib:2144
0x00005e6c      84c0           test al, al
0x00005e6e      8885e0fcffff   mov byte [rbp - 0x320], al
0x00005e74      0f8586090000   jne 0x6800
0x00005e7a      807b1700       cmp byte [rbx + 0x17], 0
0x00005e7e      0f8444130000   je 0x71c8
0x00005e84      807b1600       cmp byte [rbx + 0x16], 0
0x00005e88      ba01000000     mov edx, 1
0x00005e8d      7509           jne 0x5e98                              ; .//coreutils-8.31/lib:2155
0x00005e8f      31d2           xor edx, edx
0x00005e91      837b0803       cmp dword [rbx + 8], 3
0x00005e95      0f94c2         sete dl
0x00005e98      448b85d8fcff.  mov r8d, dword [rbp - 0x328]
0x00005e9f      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00005ea6      31c9           xor ecx, ecx
0x00005ea8      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00005eaf      e8fceeffff     call sym.create_hard_link
0x00005eb4      84c0           test al, al
0x00005eb6      0f84140a0000   je 0x68d0                               ; /src:2160
0x00005ebc      4531c0         xor r8d, r8d
0x00005ebf      4181ff004000.  cmp r15d, 0x4000                        ; u"%\xf0\u3d00\ua000"
0x00005ec6      410f95c7       setne r15b
0x00005eca      4584f6         test r14b, r14b
0x00005ecd      7513           jne 0x5ee2
0x00005ecf      0fb64314       movzx eax, byte [rbx + 0x14]
0x00005ed3      83f001         xor eax, 1
0x00005ed6      4420f8         and al, r15b
0x00005ed9      4189c4         mov r12d, eax
0x00005edc      0f852e1d0000   jne 0x7c10
0x00005ee2      4584ed         test r13b, r13b
0x00005ee5      41bc01000000   mov r12d, 1
0x00005eeb      7455           je 0x5f42
0x00005eed      c685d0fcffff.  mov byte [rbp - 0x330], 0
0x00005ef4      48837b4000     cmp qword [rbx + 0x40], 0
0x00005ef9      7432           je 0x5f2d
0x00005efb      4c8da530ffff.  lea r12, [rbp - 0xd0]
0x00005f02      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00005f09      bf01000000     mov edi, 1
0x00005f0e      448885d8fcff.  mov byte [rbp - 0x328], r8b
0x00005f15      4c89e2         mov rdx, r12
0x00005f18      e843c8ffff     call sym.imp.__lxstat
0x00005f1d      85c0           test eax, eax
0x00005f1f      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00005f27      0f8445200000   je 0x7f72
0x00005f2d      0fb685d0fcff.  movzx eax, byte [rbp - 0x330]
0x00005f34      440fb6a5ebfc.  movzx r12d, byte [rbp - 0x315]
0x00005f3c      8885ebfcffff   mov byte [rbp - 0x315], al
0x00005f42      807b1700       cmp byte [rbx + 0x17], 0
0x00005f46      7409           je 0x5f51
0x00005f48      4584ff         test r15b, r15b
0x00005f4b      0f8535020000   jne 0x6186
0x00005f51      4584c0         test r8b, r8b
0x00005f54      0f852c020000   jne 0x6186
0x00005f5a      807b1f00       cmp byte [rbx + 0x1f], 0
0x00005f5e      0f84b4000000   je 0x6018
0x00005f64      488b85c8fdff.  mov rax, qword [rbp - sym..interp]
0x00005f6b      80bde0fcffff.  cmp byte [rbp - 0x320], 0
0x00005f72      488db530ffff.  lea rsi, [rbp - 0xd0]
0x00005f79      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00005f80      48898530ffff.  mov qword [rbp - 0xd0], rax
0x00005f87      488b85d0fdff.  mov rax, qword [rbp - 0x230]
0x00005f8e      48898538ffff.  mov qword [rbp - 0xc8], rax
0x00005f95      488b85d8fdff.  mov rax, qword [rbp - 0x228]
0x00005f9c      48898540ffff.  mov qword [rbp - 0xc0], rax
0x00005fa3      488b85e0fdff.  mov rax, qword [rbp - 0x220]            ; /src:2198
0x00005faa      48898548ffff.  mov qword [rbp - 0xb8], rax
0x00005fb1      0f84a91f0000   je 0x7f60                               ; /src:2204
0x00005fb7      e844a40000     call sym.lutimens
0x00005fbc      85c0           test eax, eax
0x00005fbe      7458           je 0x6018
0x00005fc0      e8dbc5ffff     call sym.imp.__errno_location
0x00005fc5      833826         cmp dword [rax], 0x26
0x00005fc8      744e           je 0x6018
0x00005fca      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00005fd1      bf04000000     mov edi, 4
0x00005fd6      e8f5860000     call sym.quotearg_style
0x00005fdb      488d35cf0601.  lea rsi, str.preserving_times_for__s    ; /src:2207 ; 0x166b1 ; "preserving times for %s"
0x00005fe2      31ff           xor edi, edi
0x00005fe4      ba05000000     mov edx, 5
0x00005fe9      4989c5         mov r13, rax
0x00005fec      e83fc7ffff     call sym.imp.dcgettext
0x00005ff1      4989c7         mov r15, rax
0x00005ff4      e8a7c5ffff     call sym.imp.__errno_location
0x00005ff9      8b30           mov esi, dword [rax]
0x00005ffb      31ff           xor edi, edi
0x00005ffd      31c0           xor eax, eax
0x00005fff      4c89e9         mov rcx, r13
0x00006002      4c89fa         mov rdx, r15
0x00006005      e806cbffff     call sym.imp.error
0x0000600a      807b2400       cmp byte [rbx + 0x24], 0                ; /src:2213
0x0000600e      0f853cfcffff   jne 0x5c50
0x00006014      0f1f4000       nop dword [rax]
0x00006018      80bde0fcffff.  cmp byte [rbp - 0x320], 0
0x0000601f      0f8561010000   jne 0x6186
0x00006025      807b1d00       cmp byte [rbx + 0x1d], 0
0x00006029      745c           je 0x6087
0x0000602b      4584f6         test r14b, r14b
0x0000602e      7512           jne 0x6042
0x00006030      8b852cfeffff   mov eax, dword [rbp - 0x1d4]
0x00006036      39859cfdffff   cmp dword [rbp - 0x264], eax
0x0000603c      0f84a8260000   je 0x86ea
0x00006042      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006049      488d8d80fdff.  lea rcx, [rbp - 0x280]
0x00006050      4c8d8d10feff.  lea r9, [rbp - 0x1f0]
0x00006057      450fb6c6       movzx r8d, r14b
0x0000605b      baffffffff     mov edx, 0xffffffff                     ; -1
0x00006060      4889df         mov rdi, rbx
0x00006063      e898f6ffff     call sym.set_owner                      ; /src:2274
0x00006068      83f8ff         cmp eax, 0xffffffff
0x0000606b      0f84dffbffff   je 0x5c50
0x00006071      8b8decfcffff   mov ecx, dword [rbp - 0x314]
0x00006077      89ca           mov edx, ecx
0x00006079      80e6f1         and dh, 0xf1
0x0000607c      85c0           test eax, eax
0x0000607e      0f45d1         cmovne edx, ecx
0x00006081      8995ecfcffff   mov dword [rbp - 0x314], edx
0x00006087      48b8ff000000.  movabs rax, 0xff0000000000ff            ; 71776119061217535
0x00006091      48854318       test qword [rbx + 0x18], rax
0x00006095      0f8595200000   jne 0x8130
0x0000609b      807b2b00       cmp byte [rbx + 0x2b], 0
0x0000609f      0f85f0230000   jne 0x8495
0x000060a5      44847320       test byte [rbx + 0x20], r14b
0x000060a9      0f859a260000   jne 0x8749
0x000060af      8b85a4fcffff   mov eax, dword [rbp - 0x35c]
0x000060b5      85c0           test eax, eax
0x000060b7      0f8544260000   jne 0x8701
0x000060bd      80bdebfcffff.  cmp byte [rbp - 0x315], 0
0x000060c4      0f84bc000000   je 0x6186
0x000060ca      8bb574fcffff   mov esi, dword [rbp - 0x38c]
0x000060d0      0bb5a4fcffff   or esi, dword [rbp - 0x35c]
0x000060d6      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000060dd      e8fec9ffff     call sym.imp.chmod
0x000060e2      85c0           test eax, eax
0x000060e4      0f849c000000   je 0x6186
0x000060ea      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000060f1      bf04000000     mov edi, 4
0x000060f6      e8d5850000     call sym.quotearg_style
0x000060fb      488d35c70501.  lea rsi, str.preserving_permissions_for__s ; 0x166c9 ; "preserving permissions for %s"
0x00006102      ba05000000     mov edx, 5
0x00006107      31ff           xor edi, edi
0x00006109      4989c6         mov r14, rax
0x0000610c      e81fc6ffff     call sym.imp.dcgettext
0x00006111      4989c5         mov r13, rax
0x00006114      e887c4ffff     call sym.imp.__errno_location
0x00006119      8b30           mov esi, dword [rax]                    ; /src:1409
0x0000611b      4c89f1         mov rcx, r14
0x0000611e      4c89ea         mov rdx, r13
0x00006121      31ff           xor edi, edi
0x00006123      31c0           xor eax, eax
0x00006125      e8e6c9ffff     call sym.imp.error
0x0000612a      807b2400       cmp byte [rbx + 0x24], 0
0x0000612e      0f851cfbffff   jne 0x5c50
0x00006134      eb50           jmp 0x6186
0x00006136      662e0f1f8400.  nop word cs:[rax + rax]
0x00006140      807b1800       cmp byte [rbx + 0x18], 0
0x00006144      0f8491fcffff   je 0x5ddb
0x0000614a      807b2e00       cmp byte [rbx + 0x2e], 0
0x0000614e      0f857c0b0000   jne 0x6cd0
0x00006154      807b2100       cmp byte [rbx + 0x21], 0
0x00006158      0f85520b0000   jne 0x6cb0
0x0000615e      488b85e0fcff.  mov rax, qword [rbp - 0x320]
0x00006165      4885c0         test rax, rax                           ; /src:1328
0x00006168      7403           je 0x616d
0x0000616a      c60001         mov byte [rax], 1
0x0000616d      4584ed         test r13b, r13b
0x00006170      740e           je 0x6180
0x00006172      807b3100       cmp byte [rbx + 0x31], 0
0x00006176      0f846c0a0000   je 0x6be8
0x0000617c      0f1f4000       nop dword [rax]
0x00006180      41bc01000000   mov r12d, 1
0x00006186      488b75c8       mov rsi, qword [rbp - 0x38]
0x0000618a      644833342528.  xor rsi, qword fs:[0x28]
0x00006193      4489e0         mov eax, r12d
0x00006196      0f85c82c0000   jne 0x8e64
0x0000619c      488d65d8       lea rsp, [rbp - 0x28]
0x000061a0      5b             pop rbx
0x000061a1      415c           pop r12
0x000061a3      415d           pop r13
0x000061a5      415e           pop r14
0x000061a7      415f           pop r15
0x000061a9      5d             pop rbp                                 ; ../coreutils-8.31/src/selinux.h:-175
0x000061aa      c3             ret
0x000061ab      0f1f440000     nop dword [rax + rax]
0x000061b0      e8ebc3ffff     call sym.imp.__errno_location           ; /src:1258
0x000061b5      4989c1         mov r9, rax
0x000061b8      8b00           mov eax, dword [rax]
0x000061ba      83f828         cmp eax, 0x28
0x000061bd      0f84cd050000   je 0x6790
0x000061c3      83f802         cmp eax, 2
0x000061c6      41b801000000   mov r8d, 1
0x000061cc      0f85c8050000   jne 0x679a
0x000061d2      4531c9         xor r9d, r9d
0x000061d5      4183ff11       cmp r15d, 0x11
0x000061d9      0f845cf9ffff   je 0x5b3b
0x000061df      4589c6         mov r14d, r8d
0x000061e2      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x000061ed      e9dcfaffff     jmp 0x5cce
0x000061f2      660f1f440000   nop word [rax + rax]                    ; /src:1829
0x000061f8      837b0802       cmp dword [rbx + 8], 2
0x000061fc      0f8446f8ffff   je 0x5a48
0x00006202      e9f4f7ffff     jmp 0x59fb
0x00006207      660f1f840000.  nop word [rax + rax]
0x00006210      e84bc5ffff     call sym.imp.__lxstat
0x00006215      85c0           test eax, eax
0x00006217      4c89e6         mov rsi, r12                            ; /src:1647
0x0000621a      0f95c0         setne al
0x0000621d      84c0           test al, al
0x0000621f      0f8407f8ffff   je 0x5a2c
0x00006225      bf04000000     mov edi, 4
0x0000622a      e8a1840000     call sym.quotearg_style
0x0000622f      488d351d0301.  lea rsi, str.cannot_stat__s             ; 0x16553 ; "cannot stat %s"
0x00006236      4989c4         mov r12, rax
0x00006239      ba05000000     mov edx, 5
0x0000623e      31ff           xor edi, edi
0x00006240      e8ebc4ffff     call sym.imp.dcgettext
0x00006245      4889c3         mov rbx, rax
0x00006248      e853c3ffff     call sym.imp.__errno_location
0x0000624d      8b30           mov esi, dword [rax]
0x0000624f      4c89e1         mov rcx, r12                            ; /src:1596
0x00006252      4889da         mov rdx, rbx
0x00006255      31ff           xor edi, edi
0x00006257      31c0           xor eax, eax
0x00006259      4531e4         xor r12d, r12d
0x0000625c      e8afc8ffff     call sym.imp.error
0x00006261      e920ffffff     jmp 0x6186
0x00006266      662e0f1f8400.  nop word cs:[rax + rax]
0x00006270      4883bd90fdff.  cmp qword [rbp - 0x270], 1
0x00006278      0f842a100000   je 0x72a8
0x0000627e      807b2200       cmp byte [rbx + 0x22], 0
0x00006282      48c785a8fcff.  mov qword [rbp - 0x358], 0
0x0000628d      740a           je 0x6299
0x0000628f      807b1700       cmp byte [rbx + 0x17], 0
0x00006293      0f84bf070000   je 0x6a58
0x00006299      4183ff11       cmp r15d, 0x11
0x0000629d      752c           jne 0x62cb
0x0000629f      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000062a6      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x000062ad      e8bec8ffff     call sym.imp.rename
0x000062b2      85c0           test eax, eax
0x000062b4      0f8490feffff   je 0x614a
0x000062ba      e8e1c2ffff     call sym.imp.__errno_location
0x000062bf      448b38         mov r15d, dword [rax]
0x000062c2      4585ff         test r15d, r15d
0x000062c5      0f847ffeffff   je 0x614a
0x000062cb      4183ff16       cmp r15d, 0x16
0x000062cf      0f841b100000   je 0x72f0
0x000062d5      4183ff12       cmp r15d, 0x12
0x000062d9      0f85c9070000   jne 0x6aa8
0x000062df      448ba5ecfcff.  mov r12d, dword [rbp - 0x314]
0x000062e6      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000062ed      4181e400f000.  and r12d, 0xf000
0x000062f4      4181fc004000.  cmp r12d, 0x4000                        ; u"%\xf0\u3d00\ua000"
0x000062fb      0f845f100000   je 0x7360
0x00006301      e8aac2ffff     call sym.imp.unlink
0x00006306      85c0           test eax, eax
0x00006308      7411           je 0x631b
0x0000630a      e891c2ffff     call sym.imp.__errno_location
0x0000630f      833802         cmp dword [rax], 2
0x00006312      4989c6         mov r14, rax
0x00006315      0f8563100000   jne 0x737e                              ; /src:1160
0x0000631b      4181fc004000.  cmp r12d, 0x4000                        ; u"%\xf0\u3d00\ua000"
0x00006322      0f95c2         setne dl
0x00006325      22532e         and dl, byte [rbx + 0x2e]
0x00006328      4189d6         mov r14d, edx
0x0000632b      0f853f190000   jne 0x7c70
0x00006331      c785e0fcffff.  mov dword [rbp - 0x320], 1
0x0000633b      41be01000000   mov r14d, 1
0x00006341      e9aafaffff     jmp 0x5df0
0x00006346      662e0f1f8400.  nop word cs:[rax + rax]
0x00006350      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00006356      2500f00000     and eax, 0xf000
0x0000635b      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x00006360      0f843afaffff   je 0x5da0
0x00006366      488b95b0fcff.  mov rdx, qword [rbp - 0x350]
0x0000636d      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006374      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x0000637b      e870e9ffff     call sym.emit_verbose
0x00006380      e91bfaffff     jmp 0x5da0                              ; /src:1182
0x00006385      0f1f00         nop dword [rax]
0x00006388      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x0000638f      4c89d2         mov rdx, r10                            ; /src:1188
0x00006392      4c8995d8fcff.  mov qword [rbp - 0x328], r10
0x00006399      e8524f0000     call sym.seen_file
0x0000639e      84c0           test al, al
0x000063a0      4189c4         mov r12d, eax
0x000063a3      0f85bf0e0000   jne 0x7268
0x000063a9      488b7b48       mov rdi, qword [rbx + 0x48]
0x000063ad      4c8b95d8fcff.  mov r10, qword [rbp - 0x328]            ; /src:1174
0x000063b4      e9c2f6ffff     jmp 0x5a7b
0x000063b9      0f1f80000000.  nop dword [rax]
0x000063c0      440fb64b18     movzx r9d, byte [rbx + 0x18]
0x000063c5      41b800010000   mov r8d, 0x100                          ; /src:1728
0x000063cb      4584c9         test r9b, r9b
0x000063ce      0f852df7ffff   jne 0x5b01
0x000063d4      440fb64b2c     movzx r9d, byte [rbx + 0x2c]
0x000063d9      4584c9         test r9b, r9b
0x000063dc      0f851ff7ffff   jne 0x5b01
0x000063e2      440fb64b17     movzx r9d, byte [rbx + 0x17]
0x000063e7      4584c9         test r9b, r9b
0x000063ea      0f8511f7ffff   jne 0x5b01
0x000063f0      448b13         mov r10d, dword [rbx]
0x000063f3      41b901000000   mov r9d, 1
0x000063f9      4585d2         test r10d, r10d
0x000063fc      0f85fff6ffff   jne 0x5b01
0x00006402      440fb64b15     movzx r9d, byte [rbx + 0x15]            ; /src:1731
0x00006407      4531c0         xor r8d, r8d
0x0000640a      4584c9         test r9b, r9b
0x0000640d      410f95c0       setne r8b
0x00006411      41c1e008       shl r8d, 8
0x00006415      e9e7f6ffff     jmp 0x5b01
0x0000641a      660f1f440000   nop word [rax + rax]
0x00006420      837b0802       cmp dword [rbx + 8], 2
0x00006424      0f8597f6ffff   jne 0x5ac1
0x0000642a      4531c0         xor r8d, r8d
0x0000642d      4531c9         xor r9d, r9d
0x00006430      e92af7ffff     jmp 0x5b5f
0x00006435      0f1f00         nop dword [rax]
0x00006438      8b8de0fcffff   mov ecx, dword [rbp - 0x320]
0x0000643e      8b95ecfcffff   mov edx, dword [rbp - 0x314]
0x00006444      4989d8         mov r8, rbx
0x00006447      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000644e      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00006455      e886f0ffff     call sym.set_process_security_ctx       ; /src:1742
0x0000645a      84c0           test al, al
0x0000645c      0f84eef7ffff   je 0x5c50
0x00006462      448bbdecfcff.  mov r15d, dword [rbp - 0x314]
0x00006469      4489e0         mov eax, r12d
0x0000646c      83e03f         and eax, 0x3f
0x0000646f      8985a4fcffff   mov dword [rbp - 0x35c], eax
0x00006475      4181e700f000.  and r15d, 0xf000
0x0000647c      4181ff004000.  cmp r15d, 0x4000                        ; u"%\xf0\u3d00\ua000"
0x00006483      0f85dff9ffff   jne 0x5e68
0x00006489      488b85d0fcff.  mov rax, qword [rbp - 0x330]
0x00006490      488b9588fdff.  mov rdx, qword [rbp - 0x278]
0x00006497      488b8d80fdff.  mov rcx, qword [rbp - 0x280]
0x0000649e      4885c0         test rax, rax
0x000064a1      7519           jne 0x64bc
0x000064a3      e9f8080000     jmp 0x6da0                              ; /src:1137
0x000064a8      0f1f84000000.  nop dword [rax + rax]
0x000064b0      488b00         mov rax, qword [rax]
0x000064b3      4885c0         test rax, rax
0x000064b6      0f84e4080000   je 0x6da0
0x000064bc      48395008       cmp qword [rax + 8], rdx
0x000064c0      75ee           jne 0x64b0
0x000064c2      48394810       cmp qword [rax + 0x10], rcx
0x000064c6      75e8           jne 0x64b0
0x000064c8      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x000064cf      bf04000000     mov edi, 4
0x000064d4      e8f7810000     call sym.quotearg_style
0x000064d9      488d3560fe00.  lea rsi, str.cannot_copy_cyclic_symbolic_link__s ; 0x16340 ; "cannot copy cyclic symbolic link %s"
0x000064e0      4989c4         mov r12, rax
0x000064e3      ba05000000     mov edx, 5
0x000064e8      31ff           xor edi, edi
0x000064ea      e841c2ffff     call sym.imp.dcgettext
0x000064ef      4c89e1         mov rcx, r12
0x000064f2      4889c2         mov rdx, rax
0x000064f5      31f6           xor esi, esi
0x000064f7      31ff           xor edi, edi                            ; /src:1285
0x000064f9      31c0           xor eax, eax
0x000064fb      e810c6ffff     call sym.imp.error
0x00006500      e9cb030000     jmp 0x68d0
0x00006505      0f1f00         nop dword [rax]
0x00006508      440fb6632a     movzx r12d, byte [rbx + 0x2a]
0x0000650d      4584e4         test r12b, r12b
0x00006510      0f8532f5ffff   jne 0x5a48
0x00006516      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x0000651d      bf04000000     mov edi, 4
0x00006522      e8a9810000     call sym.quotearg_style
0x00006527      807b1900       cmp byte [rbx + 0x19], 0
0x0000652b      4989c5         mov r13, rax
0x0000652e      ba05000000     mov edx, 5
0x00006533      0f85970d0000   jne 0x72d0
0x00006539      488d3570fa00.  lea rsi, str.r_not_specified__omitting_directory__s ; 0x15fb0 ; "-r not specified; omitting directory %s"
0x00006540      31ff           xor edi, edi
0x00006542      e8e9c1ffff     call sym.imp.dcgettext
0x00006547      4889c2         mov rdx, rax
0x0000654a      4c89e9         mov rcx, r13
0x0000654d      31f6           xor esi, esi
0x0000654f      31ff           xor edi, edi
0x00006551      31c0           xor eax, eax
0x00006553      e8b8c5ffff     call sym.imp.error
0x00006558      e929fcffff     jmp 0x6186
0x0000655d      0f1f00         nop dword [rax]                         ; /src:1292
0x00006560      807b1800       cmp byte [rbx + 0x18], 0
0x00006564      0f85d6050000   jne 0x6b40
0x0000656a      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00006570      2500f00000     and eax, 0xf000
0x00006575      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x0000657a      7454           je 0x65d0
0x0000657c      8b4308         mov eax, dword [rbx + 8]
0x0000657f      83f802         cmp eax, 2
0x00006582      0f84f8fbffff   je 0x6180
0x00006588      83f803         cmp eax, 3
0x0000658b      7543           jne 0x65d0
0x0000658d      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006594      488d9528feff.  lea rdx, [rbp - 0x1d8]
0x0000659b      4889df         mov rdi, rbx                            ; /src:1320
0x0000659e      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x000065a5      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x000065ac      e80fe9ffff     call sym.overwrite_ok.isra.12
0x000065b1      84c0           test al, al                             ; /src:1350
0x000065b3      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x000065bb      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]           ; /src:1367
0x000065c3      0f84b7fbffff   je 0x6180
0x000065c9      0f1f80000000.  nop dword [rax]
0x000065d0      4584f6         test r14b, r14b
0x000065d3      0f85a7fbffff   jne 0x6180
0x000065d9      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x000065df      448ba5ecfcff.  mov r12d, dword [rbp - 0x314]
0x000065e6      89c2           mov edx, eax
0x000065e8      4181e400f000.  and r12d, 0xf000
0x000065ef      81e200f00000   and edx, 0xf000                         ; stdio.h:-493
0x000065f5      81fa00400000   cmp edx, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x000065fb      0f840f060000   je 0x6c10
0x00006601      4181fc004000.  cmp r12d, 0x4000                        ; u"%\xf0\u3d00\ua000"
0x00006608      0f849a120000   je 0x78a8
0x0000660e      4584ed         test r13b, r13b
0x00006611      448b3b         mov r15d, dword [rbx]
0x00006614      0f84190b0000   je 0x7133                               ; /src:1373
0x0000661a      4183ff03       cmp r15d, 3
0x0000661e      0f85ac0a0000   jne 0x70d0
0x00006624      807b1800       cmp byte [rbx + 0x18], 0
0x00006628      0f8599120000   jne 0x78c7
0x0000662e      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00006635      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x0000663c      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00006643      e8784a0000     call sym.last_component
0x00006648      80382e         cmp byte [rax], 0x2e
0x0000664b      4989c6         mov r14, rax
0x0000664e      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00006656      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x0000665e      7527           jne 0x6687
0x00006660      31c0           xor eax, eax
0x00006662      31d2           xor edx, edx
0x00006664      41807e012e     cmp byte [r14 + 1], 0x2e
0x00006669      0f94c2         sete dl
0x0000666c      410fb6541601   movzx edx, byte [r14 + rdx + 1]
0x00006672      84d2           test dl, dl
0x00006674      0f84ce0a0000   je 0x7148
0x0000667a      80fa2f         cmp dl, 0x2f
0x0000667d      0f84c50a0000   je 0x7148
0x00006683      84c0           test al, al
0x00006685      7516           jne 0x669d
0x00006687      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x0000668d      2500f00000     and eax, 0xf000
0x00006692      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x00006697      0f84ca0a0000   je 0x7167
0x0000669d      4183ff03       cmp r15d, 3
0x000066a1      7466           je 0x6709
0x000066a3      4c89f7         mov rdi, r14
0x000066a6      44888da4fcff.  mov byte [rbp - 0x35c], r9b
0x000066ad      e89ec0ffff     call sym.imp.strlen
0x000066b2      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000066b9      488985b0fcff.  mov qword [rbp - 0x350], rax
0x000066c0      e8fb490000     call sym.last_component
0x000066c5      4889c7         mov rdi, rax
0x000066c8      488985a8fcff.  mov qword [rbp - 0x358], rax
0x000066cf      e87cc0ffff     call sym.imp.strlen
0x000066d4      4c8b3d855e21.  mov r15, qword [obj.simple_backup_suffix] ; /src:1402 ; [0x21c560:8]=0
0x000066db      4989c4         mov r12, rax
0x000066de      4c89ff         mov rdi, r15
0x000066e1      e86ac0ffff     call sym.imp.strlen                     ; ../coreutils-8.31/src/system.h:-728
0x000066e6      4989c0         mov r8, rax
0x000066e9      498d0404       lea rax, [r12 + rax]
0x000066ed      483985b0fcff.  cmp qword [rbp - 0x350], rax
0x000066f4      488bb5a8fcff.  mov rsi, qword [rbp - 0x358]
0x000066fb      440fb68da4fc.  movzx r9d, byte [rbp - 0x35c]
0x00006703      0f84551a0000   je 0x815e
0x00006709      8b13           mov edx, dword [rbx]                    ; /src:1403
0x0000670b      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006712      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x00006717      44888db0fcff.  mov byte [rbp - 0x350], r9b
0x0000671e      e87d450000     call sym.backup_file_rename
0x00006723      4885c0         test rax, rax
0x00006726      4989c4         mov r12, rax
0x00006729      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x00006731      0f841a190000   je 0x8051
0x00006737      4889c7         mov rdi, rax
0x0000673a      44888da8fcff.  mov byte [rbp - 0x358], r9b             ; /src:1202
0x00006741      41be01000000   mov r14d, 1
0x00006747      e804c0ffff     call sym.imp.strlen
0x0000674c      488d5001       lea rdx, [rax + 1]
0x00006750      4883c01f       add rax, 0x1f
0x00006754      4c89e6         mov rsi, r12
0x00006757      4883e0f0       and rax, 0xfffffffffffffff0
0x0000675b      41bf11000000   mov r15d, 0x11
0x00006761      4829c4         sub rsp, rax
0x00006764      488d7c240f     lea rdi, [rsp + 0xf]
0x00006769      4883e7f0       and rdi, 0xfffffffffffffff0
0x0000676d      e82ec2ffff     call sym.imp.memcpy
0x00006772      4c89e7         mov rdi, r12
0x00006775      488985b0fcff.  mov qword [rbp - 0x350], rax
0x0000677c      e8ffc4ffff     call sym..plt.got
0x00006781      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00006789      e940f5ffff     jmp 0x5cce
0x0000678e      6690           nop
0x00006790      807b1600       cmp byte [rbx + 0x16], 0
0x00006794      0f8586030000   jne 0x6b20
0x0000679a      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000067a1      bf04000000     mov edi, 4
0x000067a6      4c898df0fcff.  mov qword [rbp - 0x310], r9
0x000067ad      4531e4         xor r12d, r12d
0x000067b0      e81b7f0000     call sym.quotearg_style
0x000067b5      488d3597fd00.  lea rsi, str.cannot_stat__s             ; 0x16553 ; "cannot stat %s"
0x000067bc      ba05000000     mov edx, 5
0x000067c1      31ff           xor edi, edi                            ; /src:1861
0x000067c3      4889c3         mov rbx, rax
0x000067c6      e865bfffff     call sym.imp.dcgettext
0x000067cb      4c8b8df0fcff.  mov r9, qword [rbp - 0x310]
0x000067d2      4889c2         mov rdx, rax
0x000067d5      4889d9         mov rcx, rbx
0x000067d8      31ff           xor edi, edi
0x000067da      31c0           xor eax, eax
0x000067dc      418b31         mov esi, dword [r9]
0x000067df      e82cc3ffff     call sym.imp.error
0x000067e4      e99df9ffff     jmp 0x6186
0x000067e9      0f1f80000000.  nop dword [rax]
0x000067f0      e8abbdffff     call sym.imp.__errno_location
0x000067f5      448b38         mov r15d, dword [rax]
0x000067f8      e9cef1ffff     jmp 0x59cb                              ; /src:1873
0x000067fd      0f1f00         nop dword [rax]
0x00006800      488b85f0fcff.  mov rax, qword [rbp - 0x310]
0x00006807      80382f         cmp byte [rax], 0x2f
0x0000680a      7438           je 0x6844
0x0000680c      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00006813      e8c8470000     call sym.dir_name
0x00006818      4c8d05cdf200.  lea r8, [0x00015aec]                    ; "."
0x0000681f      4889c7         mov rdi, rax
0x00006822      b902000000     mov ecx, 2
0x00006827      4989c4         mov r12, rax
0x0000682a      4c89c6         mov rsi, r8
0x0000682d      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000682f      0f97c0         seta al
0x00006832      1c00           sbb al, 0
0x00006834      84c0           test al, al
0x00006836      0f85dc120000   jne 0x7b18
0x0000683c      4c89e7         mov rdi, r12
0x0000683f      e83cc4ffff     call sym..plt.got
0x00006844      0fb64b16       movzx ecx, byte [rbx + 0x16]
0x00006848      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x0000684f      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x00006855      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x0000685c      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x00006861      e89a3a0000     call sym.force_symlinkat
0x00006866      4531c0         xor r8d, r8d
0x00006869      85c0           test eax, eax
0x0000686b      4189c4         mov r12d, eax
0x0000686e      0f8e4bf6ffff   jle 0x5ebf
0x00006874      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x0000687b      be04000000     mov esi, 4
0x00006880      bf01000000     mov edi, 1
0x00006885      e8267d0000     call sym.quotearg_n_style               ; /src:2173
0x0000688a      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00006891      be04000000     mov esi, 4
0x00006896      31ff           xor edi, edi
0x00006898      4989c5         mov r13, rax
0x0000689b      e8107d0000     call sym.quotearg_n_style
0x000068a0      488d35f1f900.  lea rsi, str.cannot_create_symbolic_link__s_to__s ; 0x16298 ; "cannot create symbolic link %s to %s"
0x000068a7      4989c6         mov r14, rax
0x000068aa      ba05000000     mov edx, 5
0x000068af      31ff           xor edi, edi
0x000068b1      e87abeffff     call sym.imp.dcgettext
0x000068b6      4d89e8         mov r8, r13
0x000068b9      4889c2         mov rdx, rax
0x000068bc      4c89f1         mov rcx, r14
0x000068bf      4489e6         mov esi, r12d
0x000068c2      31ff           xor edi, edi
0x000068c4      31c0           xor eax, eax
0x000068c6      e845c2ffff     call sym.imp.error
0x000068cb      0f1f440000     nop dword [rax + rax]
0x000068d0      807b2500       cmp byte [rbx + 0x25], 0
0x000068d4      0f8576010000   jne 0x6a50
0x000068da      4883bda8fcff.  cmp qword [rbp - 0x358], 0
0x000068e2      0f8498080000   je 0x7180
0x000068e8      488b85b0fcff.  mov rax, qword [rbp - 0x350]            ; ../coreutils-8.31/src/py.c:-658
0x000068ef      4885c0         test rax, rax
0x000068f2      0f8458f3ffff   je 0x5c50
0x000068f8      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000068ff      4889c7         mov rdi, rax
0x00006902      e869c2ffff     call sym.imp.rename
0x00006907      85c0           test eax, eax
0x00006909      0f8591080000   jne 0x71a0
0x0000690f      807b2e00       cmp byte [rbx + 0x2e], 0                ; /src:1505
0x00006913      0f8437f3ffff   je 0x5c50
0x00006919      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00006920      be04000000     mov esi, 4
0x00006925      bf01000000     mov edi, 1
0x0000692a      e8817c0000     call sym.quotearg_n_style
0x0000692f      488b95b0fcff.  mov rdx, qword [rbp - 0x350]
0x00006936      31ff           xor edi, edi
0x00006938      be04000000     mov esi, 4
0x0000693d      4989c4         mov r12, rax
0x00006940      e86b7c0000     call sym.quotearg_n_style
0x00006945      488d352cfe00.  lea rsi, str.s_____s__unbackup          ; 0x16778 ; "%s -> %s (unbackup)\n"
0x0000694c      4889c3         mov rbx, rax
0x0000694f      31ff           xor edi, edi
0x00006951      ba05000000     mov edx, 5
0x00006956      e8d5bdffff     call sym.imp.dcgettext
0x0000695b      4c89e1         mov rcx, r12
0x0000695e      4889c6         mov rsi, rax
0x00006961      4889da         mov rdx, rbx
0x00006964      bf01000000     mov edi, 1
0x00006969      31c0           xor eax, eax
0x0000696b      e840c1ffff     call sym.imp.__printf_chk
0x00006970      e9dbf2ffff     jmp 0x5c50
0x00006975      0f1f00         nop dword [rax]
0x00006978      807b2e00       cmp byte [rbx + 0x2e], 0
0x0000697c      0f85cef9ffff   jne 0x6350
0x00006982      4585ff         test r15d, r15d
0x00006985      0f8450f4ffff   je 0x5ddb
0x0000698b      e919f4ffff     jmp 0x5da9
0x00006990      4584ed         test r13b, r13b
0x00006993      488b9580fdff.  mov rdx, qword [rbp - 0x280]
0x0000699a      488bbd88fdff.  mov rdi, qword [rbp - 0x278]
0x000069a1      0f84a9080000   je 0x7250
0x000069a7      4889fe         mov rsi, rdi
0x000069aa      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000069b1      e82a330000     call sym.remember_copied
0x000069b6      488985a8fcff.  mov qword [rbp - 0x358], rax
0x000069bd      4883bda8fcff.  cmp qword [rbp - 0x358], 0
0x000069c5      0f84f5040000   je 0x6ec0
0x000069cb      488bb5a8fcff.  mov rsi, qword [rbp - 0x358]
0x000069d2      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x000069d9      e802850000     call sym.same_name
0x000069de      84c0           test al, al
0x000069e0      0f843a0f0000   je 0x7920
0x000069e6      488b155b5b21.  mov rdx, qword [obj.top_level_dst_name] ; [0x21c548:8]=0
0x000069ed      be04000000     mov esi, 4
0x000069f2      bf01000000     mov edi, 1
0x000069f7      e8b47b0000     call sym.quotearg_n_style
0x000069fc      488b154d5b21.  mov rdx, qword [obj.top_level_src_name] ; [0x21c550:8]=0
0x00006a03      be04000000     mov esi, 4
0x00006a08      31ff           xor edi, edi
0x00006a0a      4989c5         mov r13, rax
0x00006a0d      e89e7b0000     call sym.quotearg_n_style
0x00006a12      488d3577f700.  lea rsi, str.cannot_copy_a_directory___s__into_itself___s ; /src:1523 ; 0x16190 ; "cannot copy a directory, %s, into itself, %s"
0x00006a19      4989c4         mov r12, rax
0x00006a1c      ba05000000     mov edx, 5
0x00006a21      31ff           xor edi, edi
0x00006a23      e808bdffff     call sym.imp.dcgettext
0x00006a28      4d89e8         mov r8, r13
0x00006a2b      4889c2         mov rdx, rax
0x00006a2e      4c89e1         mov rcx, r12
0x00006a31      31c0           xor eax, eax
0x00006a33      31f6           xor esi, esi
0x00006a35      31ff           xor edi, edi
0x00006a37      e8d4c0ffff     call sym.imp.error
0x00006a3c      488b85c0fcff.  mov rax, qword [rbp - 0x340]
0x00006a43      c60001         mov byte [rax], 1
0x00006a46      807b2500       cmp byte [rbx + 0x25], 0
0x00006a4a      0f8498feffff   je 0x68e8                               ; /src:1464
0x00006a50      e851c2ffff     call sym.restore_default_fscreatecon_or_die
0x00006a55      0f1f00         nop dword [rax]
0x00006a58      4883bd90fdff.  cmp qword [rbp - 0x270], 1
0x00006a60      0f87e2030000   ja 0x6e48                               ; /src:1463
0x00006a66      4584ed         test r13b, r13b
0x00006a69      8b5304         mov edx, dword [rbx + 4]
0x00006a6c      7409           je 0x6a77                               ; /src:1479
0x00006a6e      83fa03         cmp edx, 3
0x00006a71      0f84d1030000   je 0x6e48
0x00006a77      83fa04         cmp edx, 4
0x00006a7a      48c785a8fcff.  mov qword [rbp - 0x358], 0
0x00006a85      0f84bd030000   je 0x6e48
0x00006a8b      84c0           test al, al
0x00006a8d      0f8506f8ffff   jne 0x6299
0x00006a93      410fb6c6       movzx eax, r14b
0x00006a97      8985e0fcffff   mov dword [rbp - 0x320], eax
0x00006a9d      e94ef3ffff     jmp 0x5df0
0x00006aa2      660f1f440000   nop word [rax + rax]
0x00006aa8      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00006aaf      be04000000     mov esi, 4
0x00006ab4      bf01000000     mov edi, 1
0x00006ab9      e8f27a0000     call sym.quotearg_n_style               ; /src:769
0x00006abe      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x00006ac5      be04000000     mov esi, 4
0x00006aca      31ff           xor edi, edi
0x00006acc      4989c4         mov r12, rax                            ; /src:771
0x00006acf      e8dc7a0000     call sym.quotearg_n_style
0x00006ad4      488d35d3fa00.  lea rsi, str.cannot_move__s_to__s       ; 0x165ae ; "cannot move %s to %s"
0x00006adb      4889c3         mov rbx, rax
0x00006ade      ba05000000     mov edx, 5
0x00006ae3      31ff           xor edi, edi
0x00006ae5      e846bcffff     call sym.imp.dcgettext
0x00006aea      4d89e0         mov r8, r12
0x00006aed      4889d9         mov rcx, rbx
0x00006af0      4889c2         mov rdx, rax
0x00006af3      4489fe         mov esi, r15d
0x00006af6      31ff           xor edi, edi
0x00006af8      31c0           xor eax, eax
0x00006afa      e811c0ffff     call sym.imp.error
0x00006aff      488bb580fdff.  mov rsi, qword [rbp - 0x280]
0x00006b06      488bbd88fdff.  mov rdi, qword [rbp - 0x278]
0x00006b0d      e8fe300000     call sym.forget_created
0x00006b12      e939f1ffff     jmp 0x5c50
0x00006b17      660f1f840000.  nop word [rax + rax]
0x00006b20      4531c0         xor r8d, r8d
0x00006b23      e9aaf6ffff     jmp 0x61d2
0x00006b28      0f1f84000000.  nop dword [rax + rax]
0x00006b30      807b1800       cmp byte [rbx + 0x18], 0
0x00006b34      0f8442faffff   je 0x657c
0x00006b3a      660f1f440000   nop word [rax + rax]                    ; /src:1061
0x00006b40      8b4308         mov eax, dword [rbx + 8]
0x00006b43      83f802         cmp eax, 2
0x00006b46      747c           je 0x6bc4
0x00006b48      83f803         cmp eax, 3                              ; /src:1062
0x00006b4b      744b           je 0x6b98
0x00006b4d      83f804         cmp eax, 4
0x00006b50      0f857afaffff   jne 0x65d0
0x00006b56      807b2f00       cmp byte [rbx + 0x2f], 0
0x00006b5a      0f8470faffff   je 0x65d0
0x00006b60      8bb528feffff   mov esi, dword [rbp - 0x1d8]
0x00006b66      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00006b6d      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00006b74      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00006b7b      e830e0ffff     call sym.writable_destination
0x00006b80      84c0           test al, al
0x00006b82      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00006b8a      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00006b92      0f8538faffff   jne 0x65d0
0x00006b98      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006b9f      488d9528feff.  lea rdx, [rbp - 0x1d8]
0x00006ba6      4889df         mov rdi, rbx
0x00006ba9      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00006bb0      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00006bb7      e804e3ffff     call sym.overwrite_ok.isra.12
0x00006bbc      84c0           test al, al
0x00006bbe      0f850c140000   jne 0x7fd0
0x00006bc4      4883bde0fcff.  cmp qword [rbp - 0x320], 0
0x00006bcc      0f84aef5ffff   je 0x6180
0x00006bd2      488b85e0fcff.  mov rax, qword [rbp - 0x320]
0x00006bd9      c60001         mov byte [rax], 1
0x00006bdc      e99ff5ffff     jmp 0x6180
0x00006be1      0f1f80000000.  nop dword [rax]
0x00006be8      488b7b40       mov rdi, qword [rbx + 0x40]
0x00006bec      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006bf3      488d9580fdff.  lea rdx, [rbp - 0x280]
0x00006bfa      4589ec         mov r12d, r13d
0x00006bfd      e85e460000     call sym.record_file
0x00006c02      e97ff5ffff     jmp 0x6186
0x00006c07      660f1f840000.  nop word [rax + rax]
0x00006c10      4181fc004000.  cmp r12d, 0x4000                        ; /src:1499 ; u"%\xf0\u3d00\ua000"
0x00006c17      0f8413050000   je 0x7130
0x00006c1d      807b1800       cmp byte [rbx + 0x18], 0
0x00006c21      740c           je 0x6c2f
0x00006c23      448b3b         mov r15d, dword [rbx]
0x00006c26      4585ff         test r15d, r15d                         ; /src:1390
0x00006c29      0f85980c0000   jne 0x78c7
0x00006c2f      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006c36      bf04000000     mov edi, 4
0x00006c3b      4531e4         xor r12d, r12d
0x00006c3e      e88d7a0000     call sym.quotearg_style
0x00006c43      488d352ef400.  lea rsi, str.cannot_overwrite_directory__s_with_non_directory ; 0x16078 ; "cannot overwrite directory %s with non-directory"
0x00006c4a      4889c3         mov rbx, rax
0x00006c4d      ba05000000     mov edx, 5
0x00006c52      31ff           xor edi, edi
0x00006c54      e8d7baffff     call sym.imp.dcgettext
0x00006c59      4889d9         mov rcx, rbx                            ; ../coreutils-8.31/src/py.c:-875
0x00006c5c      4889c2         mov rdx, rax
0x00006c5f      31f6           xor esi, esi
0x00006c61      31ff           xor edi, edi
0x00006c63      31c0           xor eax, eax
0x00006c65      e8a6beffff     call sym.imp.error
0x00006c6a      e917f5ffff     jmp 0x6186
0x00006c6f      90             nop
0x00006c70      8b8de0fcffff   mov ecx, dword [rbp - 0x320]
0x00006c76      8b95ecfcffff   mov edx, dword [rbp - 0x314]
0x00006c7c      4989d8         mov r8, rbx
0x00006c7f      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006c86      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00006c8d      e84ee8ffff     call sym.set_process_security_ctx
0x00006c92      84c0           test al, al
0x00006c94      0f84b6efffff   je 0x5c50
0x00006c9a      4489e0         mov eax, r12d
0x00006c9d      83e012         and eax, 0x12
0x00006ca0      8985a4fcffff   mov dword [rbp - 0x35c], eax
0x00006ca6      e9def7ffff     jmp 0x6489
0x00006cab      0f1f440000     nop dword [rax + rax]
0x00006cb0      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00006cb7      4889d9         mov rcx, rbx
0x00006cba      ba01000000     mov edx, 1
0x00006cbf      31f6           xor esi, esi
0x00006cc1      e8eae8ffff     call sym.set_file_security_ctx
0x00006cc6      e993f4ffff     jmp 0x615e
0x00006ccb      0f1f440000     nop dword [rax + rax]
0x00006cd0      488d35cef800.  lea rsi, str.renamed                    ; 0x165a5 ; "renamed "
0x00006cd7      ba05000000     mov edx, 5
0x00006cdc      31ff           xor edi, edi
0x00006cde      e84dbaffff     call sym.imp.dcgettext
0x00006ce3      bf01000000     mov edi, 1
0x00006ce8      4889c6         mov rsi, rax
0x00006ceb      31c0           xor eax, eax
0x00006ced      e8bebdffff     call sym.imp.__printf_chk
0x00006cf2      488b95b0fcff.  mov rdx, qword [rbp - 0x350]
0x00006cf9      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006d00      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00006d07      e8e4dfffff     call sym.emit_verbose
0x00006d0c      e943f4ffff     jmp 0x6154
0x00006d11      0f1f80000000.  nop dword [rax]
0x00006d18      488b8510feff.  mov rax, qword [rbp - 0x1f0]
0x00006d1f      48398580fdff.  cmp qword [rbp - 0x280], rax
0x00006d26      0f8529eeffff   jne 0x5b55
0x00006d2c      0fb64317       movzx eax, byte [rbx + 0x17]
0x00006d30      84c0           test al, al
0x00006d32      0f8590030000   jne 0x70c8
0x00006d38      837b0402       cmp dword [rbx + 4], 2
0x00006d3c      b901000000     mov ecx, 1
0x00006d41      41bf01000000   mov r15d, 1                             ; /src:1537
0x00006d47      0f8488010000   je 0x6ed5
0x00006d4d      4c8da5a0feff.  lea r12, [rbp - 0x160]
0x00006d54      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006d5b      bf01000000     mov edi, 1
0x00006d60      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00006d67      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00006d6e      4c89e2         mov rdx, r12
0x00006d71      e8eab9ffff     call sym.imp.__lxstat
0x00006d76      85c0           test eax, eax
0x00006d78      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00006d80      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00006d88      0f8404100000   je 0x7d92
0x00006d8e      4531f6         xor r14d, r14d
0x00006d91      e9c9edffff     jmp 0x5b5f
0x00006d96      662e0f1f8400.  nop word cs:[rax + rax]
0x00006da0      4883ec30       sub rsp, 0x30
0x00006da4      488bb5d0fcff.  mov rsi, qword [rbp - 0x330]
0x00006dab      488d44240f     lea rax, [rsp + 0xf]
0x00006db0      4883e0f0       and rax, 0xfffffffffffffff0
0x00006db4      4584f6         test r14b, r14b
0x00006db7      488985d8fcff.  mov qword [rbp - 0x328], rax
0x00006dbe      488930         mov qword [rax], rsi                    ; /src:1308
0x00006dc1      48895008       mov qword [rax + 8], rdx
0x00006dc5      48894810       mov qword [rax + 0x10], rcx
0x00006dc9      7516           jne 0x6de1
0x00006dcb      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x00006dd1      2500f00000     and eax, 0xf000
0x00006dd6      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x00006ddb      0f8457100000   je 0x7e38
0x00006de1      8bb5a4fcffff   mov esi, dword [rbp - 0x35c]
0x00006de7      4c8bbdf8fcff.  mov r15, qword [rbp - 0x308]
0x00006dee      f7d6           not esi
0x00006df0      4c89ff         mov rdi, r15
0x00006df3      4421e6         and esi, r12d
0x00006df6      e815b8ffff     call sym.imp.mkdir
0x00006dfb      85c0           test eax, eax
0x00006dfd      0f84bd070000   je 0x75c0
0x00006e03      4c89fe         mov rsi, r15
0x00006e06      bf04000000     mov edi, 4
0x00006e0b      e8c0780000     call sym.quotearg_style
0x00006e10      488d35b4f700.  lea rsi, str.cannot_create_directory__s ; 0x165cb ; "cannot create directory %s"
0x00006e17      4989c5         mov r13, rax
0x00006e1a      ba05000000     mov edx, 5
0x00006e1f      31ff           xor edi, edi
0x00006e21      e80ab9ffff     call sym.imp.dcgettext
0x00006e26      4989c4         mov r12, rax
0x00006e29      e872b7ffff     call sym.imp.__errno_location
0x00006e2e      8b30           mov esi, dword [rax]
0x00006e30      4c89e9         mov rcx, r13
0x00006e33      4c89e2         mov rdx, r12
0x00006e36      31ff           xor edi, edi
0x00006e38      31c0           xor eax, eax
0x00006e3a      e8d1bcffff     call sym.imp.error
0x00006e3f      e98cfaffff     jmp 0x68d0
0x00006e44      0f1f4000       nop dword [rax]
0x00006e48      488b9580fdff.  mov rdx, qword [rbp - 0x280]            ; /src:474
0x00006e4f      488bb588fdff.  mov rsi, qword [rbp - 0x278]
0x00006e56      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00006e5d      e87e2e0000     call sym.remember_copied
0x00006e62      488985a8fcff.  mov qword [rbp - 0x358], rax
0x00006e69      4883bda8fcff.  cmp qword [rbp - 0x358], 0
0x00006e71      744d           je 0x6ec0
0x00006e73      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00006e79      2500f00000     and eax, 0xf000
0x00006e7e      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x00006e83      0f8442fbffff   je 0x69cb
0x00006e89      0fb64b2e       movzx ecx, byte [rbx + 0x2e]
0x00006e8d      448b85d8fcff.  mov r8d, dword [rbp - 0x328]
0x00006e94      ba01000000     mov edx, 1
0x00006e99      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006ea0      488bbda8fcff.  mov rdi, qword [rbp - 0x358]
0x00006ea7      e804dfffff     call sym.create_hard_link
0x00006eac      84c0           test al, al
0x00006eae      0f8492fbffff   je 0x6a46
0x00006eb4      e9c7f2ffff     jmp 0x6180
0x00006eb9      0f1f80000000.  nop dword [rax]
0x00006ec0      0fb64318       movzx eax, byte [rbx + 0x18]
0x00006ec4      e9c2fbffff     jmp 0x6a8b
0x00006ec9      0f1f80000000.  nop dword [rax]
0x00006ed0      31c9           xor ecx, ecx
0x00006ed2      4531ff         xor r15d, r15d
0x00006ed5      8b8598fdffff   mov eax, dword [rbp - 0x268]
0x00006edb      488d9580fdff.  lea rdx, [rbp - 0x280]                  ; /src:927
0x00006ee2      2500f00000     and eax, 0xf000
0x00006ee7      3d00a00000     cmp eax, 0xa000
0x00006eec      0f84a10c0000   je 0x7b93
0x00006ef2      8b33           mov esi, dword [rbx]
0x00006ef4      85f6           test esi, esi
0x00006ef6      0f84dc040000   je 0x73d8
0x00006efc      84c9           test cl, cl
0x00006efe      0f858e100000   jne 0x7f92
0x00006f04      807b1800       cmp byte [rbx + 0x18], 0                ; /src:470
0x00006f08      0f8580feffff   jne 0x6d8e
0x00006f0e      837b0402       cmp dword [rbx + 4], 2
0x00006f12      0f8476feffff   je 0x6d8e
0x00006f18      8b4218         mov eax, dword [rdx + 0x18]
0x00006f1b      2500f00000     and eax, 0xf000
0x00006f20      3d00a00000     cmp eax, 0xa000
0x00006f25      0f8563feffff   jne 0x6d8e
0x00006f2b      418b442418     mov eax, dword [r12 + 0x18]
0x00006f30      2500f00000     and eax, 0xf000
0x00006f35      3d00a00000     cmp eax, 0xa000
0x00006f3a      0f844efeffff   je 0x6d8e
0x00006f40      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00006f47      be04000000     mov esi, 4
0x00006f4c      bf01000000     mov edi, 1
0x00006f51      e85a760000     call sym.quotearg_n_style
0x00006f56      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x00006f5d      be04000000     mov esi, 4
0x00006f62      31ff           xor edi, edi
0x00006f64      4989c4         mov r12, rax
0x00006f67      e844760000     call sym.quotearg_n_style
0x00006f6c      488d3505f600.  lea rsi, str.s_and__s_are_the_same_file ; 0x16578 ; "%s and %s are the same file"
0x00006f73      4889c3         mov rbx, rax
0x00006f76      ba05000000     mov edx, 5                              ; /src:514
0x00006f7b      31ff           xor edi, edi
0x00006f7d      e8aeb7ffff     call sym.imp.dcgettext
0x00006f82      4d89e0         mov r8, r12
0x00006f85      4889c2         mov rdx, rax
0x00006f88      4889d9         mov rcx, rbx
0x00006f8b      31f6           xor esi, esi
0x00006f8d      31ff           xor edi, edi
0x00006f8f      31c0           xor eax, eax
0x00006f91      e87abbffff     call sym.imp.error
0x00006f96      e9b5ecffff     jmp 0x5c50
0x00006f9b      0f1f440000     nop dword [rax + rax]
0x00006fa0      807b1800       cmp byte [rbx + 0x18], 0
0x00006fa4      0f8426f6ffff   je 0x65d0
0x00006faa      e991fbffff     jmp 0x6b40
0x00006faf      90             nop
0x00006fb0      418b442418     mov eax, dword [r12 + 0x18]
0x00006fb5      2500f00000     and eax, 0xf000
0x00006fba      3d00a00000     cmp eax, 0xa000                         ; /src:517
0x00006fbf      0f849aebffff   je 0x5b5f
0x00006fc5      84c9           test cl, cl
0x00006fc7      740c           je 0x6fd5
0x00006fc9      49837c241001   cmp qword [r12 + 0x10], 1
0x00006fcf      0f87b6130000   ja 0x838b
0x00006fd5      8b4218         mov eax, dword [rdx + 0x18]
0x00006fd8      2500f00000     and eax, 0xf000
0x00006fdd      3d00a00000     cmp eax, 0xa000
0x00006fe2      742c           je 0x7010
0x00006fe4      498b442408     mov rax, qword [r12 + 8]
0x00006fe9      48394208       cmp qword [rdx + 8], rax
0x00006fed      0f856cebffff   jne 0x5b5f
0x00006ff3      498b0424       mov rax, qword [r12]
0x00006ff7      483902         cmp qword [rdx], rax                    ; /src:869
0x00006ffa      0f855febffff   jne 0x5b5f
0x00007000      0fb64317       movzx eax, byte [rbx + 0x17]
0x00007004      84c0           test al, al
0x00007006      0f85bc000000   jne 0x70c8
0x0000700c      0fb67318       movzx esi, byte [rbx + 0x18]
0x00007010      4084f6         test sil, sil
0x00007013      0f84e9030000   je 0x7402
0x00007019      8b8598fdffff   mov eax, dword [rbp - 0x268]
0x0000701f      2500f00000     and eax, 0xf000
0x00007024      3d00a00000     cmp eax, 0xa000
0x00007029      0f85d3030000   jne 0x7402
0x0000702f      49837c241001   cmp qword [r12 + 0x10], 1
0x00007035      0f86c7030000   jbe 0x7402
0x0000703b      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00007042      44888da4fcff.  mov byte [rbp - 0x35c], r9b
0x00007049      448885a8fcff.  mov byte [rbp - 0x358], r8b
0x00007050      488995b0fcff.  mov qword [rbp - 0x350], rdx
0x00007057      e804b8ffff     call sym.imp.canonicalize_file_name
0x0000705c      4885c0         test rax, rax
0x0000705f      4989c7         mov r15, rax
0x00007062      488b95b0fcff.  mov rdx, qword [rbp - 0x350]
0x00007069      440fb685a8fc.  movzx r8d, byte [rbp - 0x358]
0x00007071      440fb68da4fc.  movzx r9d, byte [rbp - 0x35c]
0x00007079      0f8483030000   je 0x7402
0x0000707f      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00007086      4889c7         mov rdi, rax
0x00007089      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00007090      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00007097      e8447e0000     call sym.same_name                      ; /src:629
0x0000709c      4c89ff         mov rdi, r15
0x0000709f      83f001         xor eax, 1
0x000070a2      4189c4         mov r12d, eax
0x000070a5      e8d6bbffff     call sym..plt.got
0x000070aa      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x000070b2      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x000070ba      31c0           xor eax, eax
0x000070bc      4584e4         test r12b, r12b
0x000070bf      0f847bfeffff   je 0x6f40
0x000070c5      0f1f00         nop dword [rax]
0x000070c8      4189c6         mov r14d, eax
0x000070cb      e98feaffff     jmp 0x5b5f
0x000070d0      488b7b40       mov rdi, qword [rbx + 0x40]
0x000070d4      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000070db      488d9510feff.  lea rdx, [rbp - 0x1f0]
0x000070e2      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x000070e9      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x000070f0      e8fb410000     call sym.seen_file
0x000070f5      84c0           test al, al
0x000070f7      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x000070ff      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00007107      0f8548130000   jne 0x8455
0x0000710d      4181fc004000.  cmp r12d, 0x4000                        ; u"%\xf0\u3d00\ua000"
0x00007114      741a           je 0x7130
0x00007116      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x0000711c      89c2           mov edx, eax
0x0000711e      81e200f00000   and edx, 0xf000                         ; /src:1462
0x00007124      81fa00400000   cmp edx, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x0000712a      0f84edfaffff   je 0x6c1d
0x00007130      448b3b         mov r15d, dword [rbx]
0x00007133      0fb64318       movzx eax, byte [rbx + 0x18]
0x00007137      84c0           test al, al
0x00007139      0f85b1090000   jne 0x7af0
0x0000713f      4585ff         test r15d, r15d
0x00007142      0f85e6f4ffff   jne 0x662e
0x00007148      8b9528feffff   mov edx, dword [rbp - 0x1d8]
0x0000714e      81e200f00000   and edx, 0xf000
0x00007154      81fa00400000   cmp edx, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x0000715a      410f94c4       sete r12b
0x0000715e      4108c4         or r12b, al
0x00007161      0f84940b0000   je 0x7cfb
0x00007167      4589c6         mov r14d, r8d
0x0000716a      41bf11000000   mov r15d, 0x11
0x00007170      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x0000717b      e94eebffff     jmp 0x5cce
0x00007180      488bb580fdff.  mov rsi, qword [rbp - 0x280]
0x00007187      488bbd88fdff.  mov rdi, qword [rbp - 0x278]
0x0000718e      e87d2a0000     call sym.forget_created
0x00007193      e950f7ffff     jmp 0x68e8
0x00007198      0f1f84000000.  nop dword [rax + rax]
0x000071a0      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000071a7      bf04000000     mov edi, 4
0x000071ac      e81f750000     call sym.quotearg_style
0x000071b1      ba05000000     mov edx, 5
0x000071b6      4989c4         mov r12, rax
0x000071b9      488d35a4f500.  lea rsi, str.cannot_un_backup__s        ; 0x16764 ; "cannot un-backup %s"
0x000071c0      e979f0ffff     jmp 0x623e
0x000071c5      0f1f00         nop dword [rax]
0x000071c8      4181ff008000.  cmp r15d, 0x8000
0x000071cf      0f84fb070000   je 0x79d0
0x000071d5      4181ff00a000.  cmp r15d, 0xa000
0x000071dc      410f95c0       setne r8b
0x000071e0      44224314       and r8b, byte [rbx + 0x14]
0x000071e4      0f85e6070000   jne 0x79d0
0x000071ea      4181ff001000.  cmp r15d, 0x1000
0x000071f1      0f84bb100000   je 0x82b2                               ; /src:1041
0x000071f7      4489f8         mov eax, r15d
0x000071fa      80e4bf         and ah, 0xbf
0x000071fd      3d00200000     cmp eax, 0x2000
0x00007202      0f84e40c0000   je 0x7eec
0x00007208      4181ff00c000.  cmp r15d, 0xc000
0x0000720f      0f84d70c0000   je 0x7eec
0x00007215      4181ff00a000.  cmp r15d, 0xa000
0x0000721c      0f847e130000   je 0x85a0
0x00007222      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00007229      bf04000000     mov edi, 4
0x0000722e      e89d740000     call sym.quotearg_style
0x00007233      ba05000000     mov edx, 5
0x00007238      4989c4         mov r12, rax
0x0000723b      488d3509f500.  lea rsi, str.s_has_unknown_file_type    ; 0x1674b ; "%s has unknown file type"
0x00007242      e9a1f2ffff     jmp 0x64e8
0x00007247      660f1f840000.  nop word [rax + rax]
0x00007250      4889d6         mov rsi, rdx
0x00007253      e8282a0000     call sym.src_to_dest_lookup
0x00007258      488985a8fcff.  mov qword [rbp - 0x358], rax
0x0000725f      e959f7ffff     jmp 0x69bd
0x00007264      0f1f4000       nop dword [rax]
0x00007268      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x0000726f      bf04000000     mov edi, 4
0x00007274      e857740000     call sym.quotearg_style                 ; /src:1550
0x00007279      488d3558ed00.  lea rsi, str.warning:_source_file__s_specified_more_than_once ; 0x15fd8 ; "warning: source file %s specified more than once"
0x00007280      4889c3         mov rbx, rax
0x00007283      31ff           xor edi, edi
0x00007285      ba05000000     mov edx, 5
0x0000728a      e8a1b4ffff     call sym.imp.dcgettext
0x0000728f      4889d9         mov rcx, rbx
0x00007292      4889c2         mov rdx, rax
0x00007295      31f6           xor esi, esi
0x00007297      31ff           xor edi, edi
0x00007299      31c0           xor eax, eax
0x0000729b      e870b8ffff     call sym.imp.error
0x000072a0      e9e1eeffff     jmp 0x6186
0x000072a5      0f1f00         nop dword [rax]
0x000072a8      488bb580fdff.  mov rsi, qword [rbp - 0x280]
0x000072af      488bbd88fdff.  mov rdi, qword [rbp - 0x278]
0x000072b6      e8c5290000     call sym.src_to_dest_lookup
0x000072bb      488985a8fcff.  mov qword [rbp - 0x358], rax
0x000072c2      e9a2fbffff     jmp 0x6e69
0x000072c7      660f1f840000.  nop word [rax + rax]
0x000072d0      488d358bf200.  lea rsi, str.omitting_directory__s      ; 0x16562 ; "omitting directory %s"
0x000072d7      31ff           xor edi, edi
0x000072d9      e852b4ffff     call sym.imp.dcgettext
0x000072de      4889c2         mov rdx, rax
0x000072e1      e964f2ffff     jmp 0x654a                              ; /src:1600
0x000072e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000072f0      488b15515221.  mov rdx, qword [obj.top_level_dst_name] ; [0x21c548:8]=0
0x000072f7      be04000000     mov esi, 4
0x000072fc      bf01000000     mov edi, 1
0x00007301      e8aa720000     call sym.quotearg_n_style
0x00007306      488b15435221.  mov rdx, qword [obj.top_level_src_name] ; [0x21c550:8]=0
0x0000730d      be04000000     mov esi, 4
0x00007312      31ff           xor edi, edi
0x00007314      4989c4         mov r12, rax
0x00007317      e894720000     call sym.quotearg_n_style
0x0000731c      488d3505ef00.  lea rsi, str.cannot_move__s_to_a_subdirectory_of_itself___s ; 0x16228 ; "cannot move %s to a subdirectory of itself, %s"
0x00007323      4889c3         mov rbx, rax                            ; /src:773
0x00007326      ba05000000     mov edx, 5
0x0000732b      31ff           xor edi, edi
0x0000732d      e8feb3ffff     call sym.imp.dcgettext
0x00007332      4d89e0         mov r8, r12
0x00007335      4889c2         mov rdx, rax
0x00007338      4889d9         mov rcx, rbx
0x0000733b      31c0           xor eax, eax
0x0000733d      31f6           xor esi, esi
0x0000733f      31ff           xor edi, edi
0x00007341      e8cab7ffff     call sym.imp.error
0x00007346      488b85c0fcff.  mov rax, qword [rbp - 0x340]
0x0000734d      41bc01000000   mov r12d, 1
0x00007353      c60001         mov byte [rax], 1
0x00007356      e92beeffff     jmp 0x6186
0x0000735b      0f1f440000     nop dword [rax + rax]                   ; /src:779
0x00007360      e8bbb3ffff     call sym.imp.rmdir
0x00007365      85c0           test eax, eax
0x00007367      0f84c4efffff   je 0x6331
0x0000736d      e82eb2ffff     call sym.imp.__errno_location
0x00007372      833802         cmp dword [rax], 2
0x00007375      4989c6         mov r14, rax
0x00007378      0f84b3efffff   je 0x6331
0x0000737e      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00007385      be04000000     mov esi, 4
0x0000738a      bf01000000     mov edi, 1
0x0000738f      e81c720000     call sym.quotearg_n_style
0x00007394      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x0000739b      be04000000     mov esi, 4
0x000073a0      31ff           xor edi, edi
0x000073a2      4989c4         mov r12, rax
0x000073a5      e806720000     call sym.quotearg_n_style
0x000073aa      488d35a7ee00.  lea rsi, str.inter_device_move_failed:__s_to__s__unable_to_remove_target ; 0x16258 ; "inter-device move failed: %s to %s; unable to remove target"
0x000073b1      4889c3         mov rbx, rax
0x000073b4      ba05000000     mov edx, 5
0x000073b9      31ff           xor edi, edi
0x000073bb      e870b3ffff     call sym.imp.dcgettext
0x000073c0      4d89e0         mov r8, r12
0x000073c3      4889d9         mov rcx, rbx
0x000073c6      4889c2         mov rdx, rax
0x000073c9      418b36         mov esi, dword [r14]
0x000073cc      e925f7ffff     jmp 0x6af6
0x000073d1      0f1f80000000.  nop dword [rax]
0x000073d8      0fb67318       movzx esi, byte [rbx + 0x18]
0x000073dc      4084f6         test sil, sil
0x000073df      0f85cbfbffff   jne 0x6fb0
0x000073e5      807b1500       cmp byte [rbx + 0x15], 0
0x000073e9      0f85c1fbffff   jne 0x6fb0
0x000073ef      8b4218         mov eax, dword [rdx + 0x18]
0x000073f2      2500f00000     and eax, 0xf000
0x000073f7      3d00a00000     cmp eax, 0xa000
0x000073fc      0f85e30f0000   jne 0x83e5
0x00007402      807b2c00       cmp byte [rbx + 0x2c], 0
0x00007406      7415           je 0x741d
0x00007408      418b442418     mov eax, dword [r12 + 0x18]
0x0000740d      2500f00000     and eax, 0xf000
0x00007412      3d00a00000     cmp eax, 0xa000
0x00007417      0f8442e7ffff   je 0x5b5f
0x0000741d      837b0402       cmp dword [rbx + 4], 2
0x00007421      0f8519fbffff   jne 0x6f40
0x00007427      8b4218         mov eax, dword [rdx + 0x18]
0x0000742a      2500f00000     and eax, 0xf000
0x0000742f      3d00a00000     cmp eax, 0xa000
0x00007434      0f84721a0000   je 0x8eac
0x0000743a      660f6f02       movdqa xmm0, xmmword [rdx]
0x0000743e      0f298530ffff.  movaps xmmword [rbp - 0xd0], xmm0
0x00007445      660f6f4210     movdqa xmm0, xmmword [rdx + 0x10]
0x0000744a      0f298540ffff.  movaps xmmword [rbp - 0xc0], xmm0
0x00007451      660f6f4220     movdqa xmm0, xmmword [rdx + 0x20]
0x00007456      0f298550ffff.  movaps xmmword [rbp - 0xb0], xmm0
0x0000745d      660f6f4230     movdqa xmm0, xmmword [rdx + 0x30]
0x00007462      0f298560ffff.  movaps xmmword [rbp - 0xa0], xmm0
0x00007469      660f6f4240     movdqa xmm0, xmmword [rdx + 0x40]
0x0000746e      0f298570ffff.  movaps xmmword [rbp - 0x90], xmm0
0x00007475      660f6f4250     movdqa xmm0, xmmword [rdx + 0x50]
0x0000747a      0f294580       movaps xmmword [rbp - 0x80], xmm0       ; /src:791
0x0000747e      660f6f4260     movdqa xmm0, xmmword [rdx + 0x60]
0x00007483      0f294590       movaps xmmword [rbp - 0x70], xmm0
0x00007487      660f6f4270     movdqa xmm0, xmmword [rdx + 0x70]
0x0000748c      0f2945a0       movaps xmmword [rbp - 0x60], xmm0
0x00007490      660f6f828000.  movdqa xmm0, xmmword [rdx + 0x80]
0x00007498      0f2945b0       movaps xmmword [rbp - 0x50], xmm0
0x0000749c      418b442418     mov eax, dword [r12 + 0x18]
0x000074a1      2500f00000     and eax, 0xf000                         ; ../coreutils-8.31/src/selinux.h:-400
0x000074a6      3d00a00000     cmp eax, 0xa000
0x000074ab      0f84b8190000   je 0x8e69
0x000074b1      66410f6f0424   movdqa xmm0, xmmword [r12]
0x000074b7      0f2985a0feff.  movaps xmmword [rbp - 0x160], xmm0
0x000074be      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x10]
0x000074c5      0f2985b0feff.  movaps xmmword [rbp - 0x150], xmm0
0x000074cc      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x20]
0x000074d3      0f2985c0feff.  movaps xmmword [rbp - 0x140], xmm0
0x000074da      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x30]
0x000074e1      0f2985d0feff.  movaps xmmword [rbp - 0x130], xmm0
0x000074e8      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x40]
0x000074ef      0f2985e0feff.  movaps xmmword [rbp - 0x120], xmm0
0x000074f6      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x50]
0x000074fd      0f2985f0feff.  movaps xmmword [rbp - 0x110], xmm0
0x00007504      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x60]
0x0000750b      0f298500ffff.  movaps xmmword [rbp - 0x100], xmm0
0x00007512      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x70]
0x00007519      0f298510ffff.  movaps xmmword [rbp - 0xf0], xmm0
0x00007520      66410f6f8424.  movdqa xmm0, xmmword [r12 + 0x80]
0x0000752a      0f298520ffff.  movaps xmmword [rbp - 0xe0], xmm0
0x00007531      488b85a8feff.  mov rax, qword [rbp - 0x158]
0x00007538      48398538ffff.  cmp qword [rbp - 0xc8], rax
0x0000753f      0f851ae6ffff   jne 0x5b5f
0x00007545      488b85a0feff.  mov rax, qword [rbp - 0x160]
0x0000754c      48398530ffff.  cmp qword [rbp - 0xd0], rax
0x00007553      0f8506e6ffff   jne 0x5b5f
0x00007559      807b1700       cmp byte [rbx + 0x17], 0                ; /src:1705
0x0000755d      0f84ddf9ffff   je 0x6f40
0x00007563      418b442418     mov eax, dword [r12 + 0x18]
0x00007568      2500f00000     and eax, 0xf000
0x0000756d      3d00a00000     cmp eax, 0xa000
0x00007572      410f95c6       setne r14b
0x00007576      e9e4e5ffff     jmp 0x5b5f
0x0000757b      0f1f440000     nop dword [rax + rax]
0x00007580      488d8d30ffff.  lea rcx, [rbp - 0xd0]
0x00007587      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000758e      bf01000000     mov edi, 1
0x00007593      4889ca         mov rdx, rcx
0x00007596      48898da8fcff.  mov qword [rbp - 0x358], rcx
0x0000759d      e8beb1ffff     call sym.imp.__lxstat
0x000075a2      85c0           test eax, eax
0x000075a4      0f85e6e7ffff   jne 0x5d90
0x000075aa      488b8da8fcff.  mov rcx, qword [rbp - 0x358]
0x000075b1      4889ca         mov rdx, rcx
0x000075b4      e951e7ffff     jmp 0x5d0a
0x000075b9      0f1f80000000.  nop dword [rax]
0x000075c0      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000075c7      488d9510feff.  lea rdx, [rbp - 0x1f0]
0x000075ce      bf01000000     mov edi, 1
0x000075d3      e888b1ffff     call sym.imp.__lxstat
0x000075d8      85c0           test eax, eax
0x000075da      0f85050a0000   jne 0x7fe5
0x000075e0      448ba528feff.  mov r12d, dword [rbp - 0x1d8]
0x000075e7      c685d0fcffff.  mov byte [rbp - 0x330], 0
0x000075ee      4489e0         mov eax, r12d
0x000075f1      25c0010000     and eax, 0x1c0
0x000075f6      3dc0010000     cmp eax, 0x1c0
0x000075fb      742b           je 0x7628
0x000075fd      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00007604      4489e6         mov esi, r12d
0x00007607      81cec0010000   or esi, 0x1c0
0x0000760d      e8ceb4ffff     call sym.imp.chmod                      ; /src:-137
0x00007612      85c0           test eax, eax
0x00007614      4489a574fcff.  mov dword [rbp - 0x38c], r12d
0x0000761b      c685d0fcffff.  mov byte [rbp - 0x330], 1
0x00007622      0f851b100000   jne 0x8643
0x00007628      488b85c8fcff.  mov rax, qword [rbp - 0x338]
0x0000762f      803800         cmp byte [rax], 0
0x00007632      0f84f40d0000   je 0x842c
0x00007638      807b2e00       cmp byte [rbx + 0x2e], 0
0x0000763c      744a           je 0x7688
0x0000763e      807b1800       cmp byte [rbx + 0x18], 0
0x00007642      0f84a50e0000   je 0x84ed
0x00007648      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000764f      bf04000000     mov edi, 4
0x00007654      e877700000     call sym.quotearg_style
0x00007659      488d35a1ef00.  lea rsi, str.created_directory__s       ; 0x16601 ; "created directory %s\n"
0x00007660      4989c4         mov r12, rax
0x00007663      ba05000000     mov edx, 5
0x00007668      31ff           xor edi, edi
0x0000766a      e8c1b0ffff     call sym.imp.dcgettext
0x0000766f      4c89e2         mov rdx, r12
0x00007672      4889c6         mov rsi, rax
0x00007675      bf01000000     mov edi, 1
0x0000767a      31c0           xor eax, eax
0x0000767c      e82fb4ffff     call sym.imp.__printf_chk
0x00007681      0f1f80000000.  nop dword [rax]
0x00007688      488b85b8fcff.  mov rax, qword [rbp - 0x348]
0x0000768f      4885c0         test rax, rax
0x00007692      410f95c4       setne r12b
0x00007696      4422631c       and r12b, byte [rbx + 0x1c]
0x0000769a      0f85db070000   jne 0x7e7b
0x000076a0      f30f6f03       movdqu xmm0, xmmword [rbx]
0x000076a4      be02000000     mov esi, 2
0x000076a9      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x000076b0      0f298510fdff.  movaps xmmword [rbp - 0x2f0], xmm0
0x000076b7      f30f6f4310     movdqu xmm0, xmmword [rbx + 0x10]
0x000076bc      0f298520fdff.  movaps xmmword [rbp - sym..dynsym], xmm0
0x000076c3      f30f6f4320     movdqu xmm0, xmmword [rbx + 0x20]
0x000076c8      0f298530fdff.  movaps xmmword [rbp - 0x2d0], xmm0
0x000076cf      f30f6f4330     movdqu xmm0, xmmword [rbx + 0x30]
0x000076d4      0f298540fdff.  movaps xmmword [rbp - 0x2c0], xmm0
0x000076db      f30f6f4340     movdqu xmm0, xmmword [rbx + 0x40]
0x000076e0      0f298550fdff.  movaps xmmword [rbp - 0x2b0], xmm0
0x000076e7      e8c47b0000     call sym.savedir
0x000076ec      4885c0         test rax, rax
0x000076ef      48898598fcff.  mov qword [rbp - 0x368], rax
0x000076f6      0f845c0e0000   je 0x8558
0x000076fc      837b0403       cmp dword [rbx + 4], 3
0x00007700      750a           jne 0x770c
0x00007702      c78514fdffff.  mov dword [rbp - 0x2ec], 2
0x0000770c      488b8598fcff.  mov rax, qword [rbp - 0x368]
0x00007713      803800         cmp byte [rax], 0
0x00007716      0f8439150000   je 0x8c55
0x0000771c      488d8510fdff.  lea rax, [rbp - 0x2f0]
0x00007723      4c8d9580fdff.  lea r10, [rbp - 0x280]
0x0000772a      4489ad80fcff.  mov dword [rbp - 0x380], r13d
0x00007731      4c8bbd98fcff.  mov r15, qword [rbp - 0x368]
0x00007738      4c8badc0fcff.  mov r13, qword [rbp - 0x340]            ; /src:-117
0x0000773f      41bc01000000   mov r12d, 1
0x00007745      488985b8fcff.  mov qword [rbp - 0x348], rax
0x0000774c      488d8507fdff.  lea rax, [rbp - 0x2f9]
0x00007753      c685ebfcffff.  mov byte [rbp - 0x315], 0
0x0000775a      4488b590fcff.  mov byte [rbp - 0x370], r14b
0x00007761      48899d88fcff.  mov qword [rbp - 0x378], rbx
0x00007768      488985b0fcff.  mov qword [rbp - 0x350], rax
0x0000776f      488d8508fdff.  lea rax, [rbp - 0x2f8]
0x00007776      4c8995c0fcff.  mov qword [rbp - 0x340], r10
0x0000777d      488985a8fcff.  mov qword [rbp - 0x358], rax
0x00007784      eb2e           jmp 0x77b4
0x00007786      662e0f1f8400.  nop word cs:[rax + rax]
0x00007790      0fb68508fdff.  movzx eax, byte [rbp - 0x2f8]
0x00007797      4c89ff         mov rdi, r15
0x0000779a      0885ebfcffff   or byte [rbp - 0x315], al
0x000077a0      e8abafffff     call sym.imp.strlen
0x000077a5      4d8d7c0701     lea r15, [r15 + rax + 1]
0x000077aa      41803f00       cmp byte [r15], 0
0x000077ae      0f849d000000   je 0x7851
0x000077b4      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x000077bb      31d2           xor edx, edx
0x000077bd      4c89fe         mov rsi, r15
0x000077c0      e81b3e0000     call sym.file_name_concat
0x000077c5      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000077cc      31d2           xor edx, edx
0x000077ce      4c89fe         mov rsi, r15
0x000077d1      4889c3         mov rbx, rax
0x000077d4      e8073e0000     call sym.file_name_concat
0x000077d9      4989c6         mov r14, rax
0x000077dc      488b85c8fcff.  mov rax, qword [rbp - 0x338]
0x000077e3      4c8b8db8fcff.  mov r9, qword [rbp - 0x348]
0x000077ea      4c8b85d8fcff.  mov r8, qword [rbp - 0x328]
0x000077f1      488b8dc0fcff.  mov rcx, qword [rbp - 0x340]
0x000077f8      4c89f6         mov rsi, r14
0x000077fb      8b95e0fcffff   mov edx, dword [rbp - 0x320]
0x00007801      4889df         mov rdi, rbx
0x00007804      0fb600         movzx eax, byte [rax]
0x00007807      6a00           push 0
0x00007809      ffb5b0fcffff   push qword [rbp - 0x350]
0x0000780f      ffb5a8fcffff   push qword [rbp - 0x358]
0x00007815      6a00           push 0
0x00007817      888508fdffff   mov byte [rbp - 0x2f8], al
0x0000781d      e81ee1ffff     call sym.copy_internal                  ; /src:1271
0x00007822      4121c4         and r12d, eax
0x00007825      0fb68507fdff.  movzx eax, byte [rbp - 0x2f9]
0x0000782c      4883c420       add rsp, 0x20
0x00007830      41084500       or byte [r13], al
0x00007834      4c89f7         mov rdi, r14
0x00007837      e844b4ffff     call sym..plt.got
0x0000783c      4889df         mov rdi, rbx
0x0000783f      e83cb4ffff     call sym..plt.got
0x00007844      80bd07fdffff.  cmp byte [rbp - 0x2f9], 0
0x0000784b      0f843fffffff   je 0x7790
0x00007851      440fb6b590fc.  movzx r14d, byte [rbp - 0x370]
0x00007859      488b9d88fcff.  mov rbx, qword [rbp - 0x378]
0x00007860      448bad80fcff.  mov r13d, dword [rbp - 0x380]
0x00007867      488bbd98fcff.  mov rdi, qword [rbp - 0x368]
0x0000786e      e80db4ffff     call sym..plt.got
0x00007873      0fb68debfcff.  movzx ecx, byte [rbp - 0x315]
0x0000787a      488b85c8fcff.  mov rax, qword [rbp - 0x338]
0x00007881      8808           mov byte [rax], cl
0x00007883      4584ed         test r13b, r13b
0x00007886      0f85d6050000   jne 0x7e62
0x0000788c      0fb685d0fcff.  movzx eax, byte [rbp - 0x330]
0x00007893      c685e0fcffff.  mov byte [rbp - 0x320], 0
0x0000789a      8885ebfcffff   mov byte [rbp - 0x315], al
0x000078a0      e9b5e6ffff     jmp 0x5f5a
0x000078a5      0f1f00         nop dword [rax]
0x000078a8      807b1800       cmp byte [rbx + 0x18], 0
0x000078ac      0f8409040000   je 0x7cbb
0x000078b2      448b3b         mov r15d, dword [rbx]
0x000078b5      4585ff         test r15d, r15d
0x000078b8      0f84fd030000   je 0x7cbb
0x000078be      4584ed         test r13b, r13b
0x000078c1      0f8553edffff   jne 0x661a
0x000078c7      8b9598fdffff   mov edx, dword [rbp - 0x268]
0x000078cd      81e200f00000   and edx, 0xf000
0x000078d3      81fa00400000   cmp edx, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x000078d9      0f84b7050000   je 0x7e96
0x000078df      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x000078e6      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x000078ed      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x000078f4      e8c7370000     call sym.last_component
0x000078f9      80382e         cmp byte [rax], 0x2e
0x000078fc      4989c6         mov r14, rax
0x000078ff      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00007907      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x0000790f      0f8588edffff   jne 0x669d
0x00007915      b801000000     mov eax, 1                              ; /src:173
0x0000791a      e943edffff     jmp 0x6662
0x0000791f      90             nop
0x00007920      488bb5a8fcff.  mov rsi, qword [rbp - 0x358]
0x00007927      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x0000792e      e8ad750000     call sym.same_name
0x00007933      84c0           test al, al
0x00007935      0f85cf060000   jne 0x800a
0x0000793b      8b4304         mov eax, dword [rbx + 4]
0x0000793e      83f804         cmp eax, 4
0x00007941      0f8479f5ffff   je 0x6ec0
0x00007947      83f803         cmp eax, 3                              ; /src:184
0x0000794a      7509           jne 0x7955
0x0000794c      4584ed         test r13b, r13b
0x0000794f      0f856bf5ffff   jne 0x6ec0                              ; /src:193
0x00007955      488b95a8fcff.  mov rdx, qword [rbp - 0x358]
0x0000795c      be04000000     mov esi, 4
0x00007961      bf01000000     mov edi, 1
0x00007966      e8456c0000     call sym.quotearg_n_style
0x0000796b      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00007972      31ff           xor edi, edi
0x00007974      be04000000     mov esi, 4
0x00007979      4989c5         mov r13, rax
0x0000797c      e82f6c0000     call sym.quotearg_n_style
0x00007981      488d3570e800.  lea rsi, str.will_not_create_hard_link__s_to_directory__s ; 0x161f8 ; "will not create hard link %s to directory %s"
0x00007988      4989c4         mov r12, rax
0x0000798b      31ff           xor edi, edi                            ; /src:195
0x0000798d      ba05000000     mov edx, 5
0x00007992      e899adffff     call sym.imp.dcgettext
0x00007997      4d89e8         mov r8, r13
0x0000799a      4889c2         mov rdx, rax
0x0000799d      4c89e1         mov rcx, r12
0x000079a0      31f6           xor esi, esi
0x000079a2      31ff           xor edi, edi
0x000079a4      31c0           xor eax, eax
0x000079a6      e865b1ffff     call sym.imp.error
0x000079ab      e996f0ffff     jmp 0x6a46                              ; /src:198
0x000079b0      807b1700       cmp byte [rbx + 0x17], 0
0x000079b4      0f849ef0ffff   je 0x6a58
0x000079ba      48c785a8fcff.  mov qword [rbp - 0x358], 0
0x000079c5      e9c9f0ffff     jmp 0x6a93
0x000079ca      660f1f440000   nop word [rax + rax]
0x000079d0      8b8598fdffff   mov eax, dword [rbp - 0x268]
0x000079d6      31f6           xor esi, esi
0x000079d8      837b0402       cmp dword [rbx + 4], 2
0x000079dc      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x000079e3      8985c0fcffff   mov dword [rbp - 0x340], eax
0x000079e9      0fb64323       movzx eax, byte [rbx + 0x23]
0x000079ed      400f94c6       sete sil
0x000079f1      c1e611         shl esi, 0x11
0x000079f4      8885c8fcffff   mov byte [rbp - 0x338], al
0x000079fa      31c0           xor eax, eax
0x000079fc      e8ef370000     call sym.open_safer
0x00007a01      85c0           test eax, eax
0x00007a03      8985e0fcffff   mov dword [rbp - 0x320], eax
0x00007a09      0f88fc060000   js 0x810b
0x00007a0f      8bb5e0fcffff   mov esi, dword [rbp - 0x320]
0x00007a15      488d95a0feff.  lea rdx, [rbp - 0x160]
0x00007a1c      bf01000000     mov edi, 1
0x00007a21      e80ab0ffff     call sym.imp.__fxstat
0x00007a26      85c0           test eax, eax
0x00007a28      0f8519090000   jne 0x8347
0x00007a2e      488b85a8feff.  mov rax, qword [rbp - 0x158]
0x00007a35      48398588fdff.  cmp qword [rbp - 0x278], rax
0x00007a3c      7514           jne 0x7a52
0x00007a3e      488b85a0feff.  mov rax, qword [rbp - 0x160]
0x00007a45      48398580fdff.  cmp qword [rbp - 0x280], rax
0x00007a4c      0f84240d0000   je 0x8776
0x00007a52      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00007a59      bf04000000     mov edi, 4
0x00007a5e      e86d6c0000     call sym.quotearg_style
0x00007a63      488d3556e800.  lea rsi, str.skipping_file__s__as_it_was_replaced_while_being_copied ; 0x162c0 ; "skipping file %s, as it was replaced while being copied"
0x00007a6a      4989c4         mov r12, rax
0x00007a6d      ba05000000     mov edx, 5
0x00007a72      31ff           xor edi, edi
0x00007a74      e8b7acffff     call sym.imp.dcgettext
0x00007a79      4c89e1         mov rcx, r12
0x00007a7c      4889c2         mov rdx, rax
0x00007a7f      31f6           xor esi, esi
0x00007a81      31ff           xor edi, edi
0x00007a83      31c0           xor eax, eax
0x00007a85      e886b0ffff     call sym.imp.error                      ; /src:1766
0x00007a8a      4531c0         xor r8d, r8d
0x00007a8d      48c785d0fcff.  mov qword [rbp - 0x330], 0              ; /src:1770
0x00007a98      8bbde0fcffff   mov edi, dword [rbp - 0x320]
0x00007a9e      448885d8fcff.  mov byte [rbp - 0x328], r8b
0x00007aa5      e8c6adffff     call sym.imp.close
0x00007aaa      85c0           test eax, eax
0x00007aac      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00007ab4      0f884d0a0000   js 0x8507                               ; /src:602
0x00007aba      488bbdd0fcff.  mov rdi, qword [rbp - 0x330]            ; /src:625
0x00007ac1      448885d8fcff.  mov byte [rbp - 0x328], r8b             ; /src:602
0x00007ac8      e8b3b1ffff     call sym..plt.got
0x00007acd      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00007ad5      c685e0fcffff.  mov byte [rbp - 0x320], 0
0x00007adc      4584c0         test r8b, r8b
0x00007adf      0f85dae3ffff   jne 0x5ebf
0x00007ae5      e9e6edffff     jmp 0x68d0
0x00007aea      660f1f440000   nop word [rax + rax]
0x00007af0      8b8598fdffff   mov eax, dword [rbp - 0x268]
0x00007af6      2500f00000     and eax, 0xf000
0x00007afb      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x00007b00      0f848a030000   je 0x7e90
0x00007b06      4585ff         test r15d, r15d
0x00007b09      0f8458f6ffff   je 0x7167
0x00007b0f      e9cbfdffff     jmp 0x78df
0x00007b14      0f1f4000       nop dword [rax]                         ; /src:615
0x00007b18      488d95a0feff.  lea rdx, [rbp - 0x160]
0x00007b1f      4c89c6         mov rsi, r8
0x00007b22      bf01000000     mov edi, 1                              ; /src:617
0x00007b27      e8b4aeffff     call sym.imp.__xstat                    ; /src:618
0x00007b2c      85c0           test eax, eax
0x00007b2e      0f8508edffff   jne 0x683c
0x00007b34      488d9530ffff.  lea rdx, [rbp - 0xd0]                   ; /src:1920
0x00007b3b      4c89e6         mov rsi, r12
0x00007b3e      bf01000000     mov edi, 1
0x00007b43      e898aeffff     call sym.imp.__xstat
0x00007b48      85c0           test eax, eax                           ; /src:1922
0x00007b4a      0f85ececffff   jne 0x683c
0x00007b50      488b8538ffff.  mov rax, qword [rbp - 0xc8]
0x00007b57      483985a8feff.  cmp qword [rbp - 0x158], rax
0x00007b5e      0f8403110000   je 0x8c67
0x00007b64      4c89e7         mov rdi, r12
0x00007b67      e814b1ffff     call sym..plt.got
0x00007b6c      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00007b73      be03000000     mov esi, 3
0x00007b78      31ff           xor edi, edi
0x00007b7a      e8516c0000     call sym.quotearg_n_style_colon
0x00007b7f      ba05000000     mov edx, 5
0x00007b84      4989c4         mov r12, rax
0x00007b87      488d35dae700.  lea rsi, str.s:_can_make_relative_symbolic_links_only_in_current_directory ; 0x16368 ; "%s: can make relative symbolic links only in current directory"
0x00007b8e      e955e9ffff     jmp 0x64e8
0x00007b93      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x00007b99      488d9580fdff.  lea rdx, [rbp - 0x280]
0x00007ba0      2500f00000     and eax, 0xf000
0x00007ba5      3d00a00000     cmp eax, 0xa000
0x00007baa      0f8542f3ffff   jne 0x6ef2
0x00007bb0      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00007bb7      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00007bbe      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00007bc5      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00007bcc      e80f730000     call sym.same_name
0x00007bd1      84c0           test al, al
0x00007bd3      0f8567f3ffff   jne 0x6f40
0x00007bd9      8b3b           mov edi, dword [rbx]
0x00007bdb      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00007be3      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00007beb      85ff           test edi, edi
0x00007bed      0f859bf1ffff   jne 0x6d8e
0x00007bf3      4585ff         test r15d, r15d
0x00007bf6      0f8492f1ffff   je 0x6d8e
0x00007bfc      440fb66318     movzx r12d, byte [rbx + 0x18]
0x00007c01      b801000000     mov eax, 1
0x00007c06      4183f401       xor r12d, 1
0x00007c0a      e9adf4ffff     jmp 0x70bc
0x00007c0f      90             nop
0x00007c10      4189c7         mov r15d, eax                           ; /src:1211
0x00007c13      48b800ff0000.  movabs rax, 0xff000000ff00
0x00007c1d      48854320       test qword [rbx + 0x20], rax
0x00007c21      0f84bbe2ffff   je 0x5ee2
0x00007c27      0fb67325       movzx esi, byte [rbx + 0x25]
0x00007c2b      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00007c32      31d2           xor edx, edx
0x00007c34      4889d9         mov rcx, rbx
0x00007c37      448885d8fcff.  mov byte [rbp - 0x328], r8b
0x00007c3e      e86dd9ffff     call sym.set_file_security_ctx
0x00007c43      84c0           test al, al
0x00007c45      4189c7         mov r15d, eax
0x00007c48      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00007c50      0f858ce2ffff   jne 0x5ee2
0x00007c56      440fb67326     movzx r14d, byte [rbx + 0x26]
0x00007c5b      4584f6         test r14b, r14b
0x00007c5e      0f856cecffff   jne 0x68d0
0x00007c64      4589e7         mov r15d, r12d
0x00007c67      e976e2ffff     jmp 0x5ee2
0x00007c6c      0f1f4000       nop dword [rax]
0x00007c70      488d354ce900.  lea rsi, str.copied                     ; 0x165c3 ; "copied "
0x00007c77      ba05000000     mov edx, 5
0x00007c7c      31ff           xor edi, edi
0x00007c7e      e8adaaffff     call sym.imp.dcgettext
0x00007c83      bf01000000     mov edi, 1
0x00007c88      4889c6         mov rsi, rax
0x00007c8b      31c0           xor eax, eax
0x00007c8d      e81eaeffff     call sym.imp.__printf_chk
0x00007c92      488b95b0fcff.  mov rdx, qword [rbp - 0x350]
0x00007c99      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00007ca0      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]            ; /src:1199
0x00007ca7      e844d0ffff     call sym.emit_verbose
0x00007cac      c785e0fcffff.  mov dword [rbp - 0x320], 1
0x00007cb6      e935e1ffff     jmp 0x5df0
0x00007cbb      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x00007cc2      be04000000     mov esi, 4
0x00007cc7      bf01000000     mov edi, 1                              ; /src:505
0x00007ccc      e8df680000     call sym.quotearg_n_style
0x00007cd1      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00007cd8      be04000000     mov esi, 4
0x00007cdd      31ff           xor edi, edi
0x00007cdf      4989c4         mov r12, rax                            ; /src:511
0x00007ce2      e8c9680000     call sym.quotearg_n_style
0x00007ce7      ba05000000     mov edx, 5
0x00007cec      4889c3         mov rbx, rax
0x00007cef      488d351ae300.  lea rsi, str.cannot_overwrite_non_directory__s_with_directory__s ; 0x16010 ; "cannot overwrite non-directory %s with directory %s"
0x00007cf6      e980f2ffff     jmp 0x6f7b
0x00007cfb      807b1500       cmp byte [rbx + 0x15], 0
0x00007cff      7518           jne 0x7d19
0x00007d01      807b2200       cmp byte [rbx + 0x22], 0
0x00007d05      0f84db030000   je 0x80e6
0x00007d0b      4883bd20feff.  cmp qword [rbp - 0x1e0], 1
0x00007d13      0f86cd030000   jbe 0x80e6
0x00007d19      4c8bb5f8fcff.  mov r14, qword [rbp - 0x308]
0x00007d20      44888db0fcff.  mov byte [rbp - 0x350], r9b
0x00007d27      4c89f7         mov rdi, r14
0x00007d2a      e881a8ffff     call sym.imp.unlink
0x00007d2f      85c0           test eax, eax
0x00007d31      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x00007d39      0f8474030000   je 0x80b3
0x00007d3f      e85ca8ffff     call sym.imp.__errno_location
0x00007d44      833802         cmp dword [rax], 2
0x00007d47      4989c7         mov r15, rax
0x00007d4a      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x00007d52      0f845b030000   je 0x80b3
0x00007d58      4c89f6         mov rsi, r14
0x00007d5b      bf04000000     mov edi, 4
0x00007d60      e86b690000     call sym.quotearg_style
0x00007d65      488d354bdd00.  lea rsi, str.cannot_remove__s           ; 0x15ab7 ; "cannot remove %s"
0x00007d6c      31ff           xor edi, edi
0x00007d6e      ba05000000     mov edx, 5
0x00007d73      4889c3         mov rbx, rax
0x00007d76      e8b5a9ffff     call sym.imp.dcgettext
0x00007d7b      418b37         mov esi, dword [r15]
0x00007d7e      4889c2         mov rdx, rax
0x00007d81      4889d9         mov rcx, rbx
0x00007d84      31ff           xor edi, edi
0x00007d86      31c0           xor eax, eax
0x00007d88      e883adffff     call sym.imp.error
0x00007d8d      e9f4e3ffff     jmp 0x6186
0x00007d92      488d8530ffff.  lea rax, [rbp - 0xd0]
0x00007d99      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00007da0      bf01000000     mov edi, 1
0x00007da5      4889c2         mov rdx, rax
0x00007da8      48898598fcff.  mov qword [rbp - 0x368], rax
0x00007daf      e8aca9ffff     call sym.imp.__lxstat
0x00007db4      85c0           test eax, eax
0x00007db6      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00007dbe      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00007dc6      0f85c2efffff   jne 0x6d8e
0x00007dcc      31c9           xor ecx, ecx
0x00007dce      488b85a8feff.  mov rax, qword [rbp - 0x158]
0x00007dd5      48398538ffff.  cmp qword [rbp - 0xc8], rax
0x00007ddc      7511           jne 0x7def
0x00007dde      488b85a0feff.  mov rax, qword [rbp - 0x160]
0x00007de5      48398530ffff.  cmp qword [rbp - 0xd0], rax
0x00007dec      0f94c1         sete cl
0x00007def      8b8548ffffff   mov eax, dword [rbp - 0xb8]
0x00007df5      488b9598fcff.  mov rdx, qword [rbp - 0x368]
0x00007dfc      2500f00000     and eax, 0xf000
0x00007e01      3d00a00000     cmp eax, 0xa000
0x00007e06      0f85e6f0ffff   jne 0x6ef2
0x00007e0c      8b85b8feffff   mov eax, dword [rbp - 0x148]            ; ../coreutils-8.31/src/selinux.h:-506
0x00007e12      2500f00000     and eax, 0xf000
0x00007e17      3d00a00000     cmp eax, 0xa000
0x00007e1c      0f85d0f0ffff   jne 0x6ef2
0x00007e22      807b1500       cmp byte [rbx + 0x15], 0
0x00007e26      0f84c6f0ffff   je 0x6ef2
0x00007e2c      e95defffff     jmp 0x6d8e
0x00007e31      0f1f80000000.  nop dword [rax]
0x00007e38      48b800ff0000.  movabs rax, 0xff000000ff00
0x00007e42      48854320       test qword [rbx + 0x20], rax
0x00007e46      0f85b4050000   jne 0x8400
0x00007e4c      c685d0fcffff.  mov byte [rbp - 0x330], 0
0x00007e53      c785a4fcffff.  mov dword [rbp - 0x35c], 0              ; /src:1710
0x00007e5d      e926f8ffff     jmp 0x7688
0x00007e62      4488a5ebfcff.  mov byte [rbp - 0x315], r12b
0x00007e69      4531ff         xor r15d, r15d
0x00007e6c      4531c0         xor r8d, r8d
0x00007e6f      c685e0fcffff.  mov byte [rbp - 0x320], 0
0x00007e76      e979e0ffff     jmp 0x5ef4
0x00007e7b      488b8d80fdff.  mov rcx, qword [rbp - 0x280]
0x00007e82      483908         cmp qword [rax], rcx
0x00007e85      0f85f8f9ffff   jne 0x7883
0x00007e8b      e910f8ffff     jmp 0x76a0
0x00007e90      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x00007e96      2500f00000     and eax, 0xf000
0x00007e9b      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x00007ea0      0f8460fcffff   je 0x7b06
0x00007ea6      4585ff         test r15d, r15d
0x00007ea9      0f8530faffff   jne 0x78df
0x00007eaf      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00007eb6      be03000000     mov esi, 3
0x00007ebb      31ff           xor edi, edi
0x00007ebd      e80e690000     call sym.quotearg_n_style_colon
0x00007ec2      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x00007ec9      be03000000     mov esi, 3
0x00007ece      31ff           xor edi, edi
0x00007ed0      4989c4         mov r12, rax
0x00007ed3      e8f8680000     call sym.quotearg_n_style_colon         ; /src:1420
0x00007ed8      ba05000000     mov edx, 5
0x00007edd      4889c3         mov rbx, rax
0x00007ee0      488d35c9e100.  lea rsi, str.cannot_move_directory_onto_non_directory:__s_____s ; 0x160b0 ; "cannot move directory onto non-directory: %s -> %s"
0x00007ee7      e98ff0ffff     jmp 0x6f7b
0x00007eec      8b95a4fcffff   mov edx, dword [rbp - 0x35c]
0x00007ef2      488b85a8fdff.  mov rax, qword [rbp - 0x258]
0x00007ef9      488d8d10fdff.  lea rcx, [rbp - 0x2f0]
0x00007f00      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00007f07      31ff           xor edi, edi
0x00007f09      448885d8fcff.  mov byte [rbp - 0x328], r8b
0x00007f10      f7d2           not edx
0x00007f12      2395ecfcffff   and edx, dword [rbp - 0x314]
0x00007f18      48898510fdff.  mov qword [rbp - 0x2f0], rax
0x00007f1f      e88caaffff     call sym.imp.__xmknod
0x00007f24      85c0           test eax, eax
0x00007f26      c685e0fcffff.  mov byte [rbp - 0x320], 0
0x00007f2d      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00007f35      0f8484dfffff   je 0x5ebf
0x00007f3b      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00007f42      bf04000000     mov edi, 4
0x00007f47      e884670000     call sym.quotearg_style
0x00007f4c      ba05000000     mov edx, 5
0x00007f51      4989c5         mov r13, rax
0x00007f54      488d35b5e700.  lea rsi, str.cannot_create_special_file__s ; 0x16710 ; "cannot create special file %s"
0x00007f5b      e9bfeeffff     jmp 0x6e1f
0x00007f60      e88b840000     call sym.utimens
0x00007f65      85c0           test eax, eax
0x00007f67      0f84b8e0ffff   je 0x6025
0x00007f6d      e958e0ffff     jmp 0x5fca
0x00007f72      488b7b40       mov rdi, qword [rbx + 0x40]
0x00007f76      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00007f7d      4c89e2         mov rdx, r12
0x00007f80      e8db320000     call sym.record_file
0x00007f85      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00007f8d      e99bdfffff     jmp 0x5f2d
0x00007f92      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00007f99      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00007fa0      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00007fa7      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00007fae      e82d6f0000     call sym.same_name
0x00007fb3      83f001         xor eax, 1
0x00007fb6      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00007fbe      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00007fc6      4189c4         mov r12d, eax
0x00007fc9      31c0           xor eax, eax                            ; /src:1082
0x00007fcb      e9ecf0ffff     jmp 0x70bc
0x00007fd0      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00007fd8      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00007fe0      e9ebe5ffff     jmp 0x65d0
0x00007fe5      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00007fec      bf04000000     mov edi, 4
0x00007ff1      e8da660000     call sym.quotearg_style
0x00007ff6      ba05000000     mov edx, 5
0x00007ffb      4989c5         mov r13, rax
0x00007ffe      488d354ee500.  lea rsi, str.cannot_stat__s             ; 0x16553 ; "cannot stat %s"
0x00008005      e915eeffff     jmp 0x6e1f
0x0000800a      488b353f4521.  mov rsi, qword [obj.top_level_src_name] ; [0x21c550:8]=0
0x00008011      bf04000000     mov edi, 4
0x00008016      e8b5660000     call sym.quotearg_style
0x0000801b      488d359ee100.  lea rsi, str.warning:_source_directory__s_specified_more_than_once ; 0x161c0 ; "warning: source directory %s specified more than once"
0x00008022      31ff           xor edi, edi
0x00008024      4989c4         mov r12, rax
0x00008027      ba05000000     mov edx, 5
0x0000802c      e8ffa6ffff     call sym.imp.dcgettext
0x00008031      31f6           xor esi, esi
0x00008033      4889c2         mov rdx, rax
0x00008036      31ff           xor edi, edi
0x00008038      31c0           xor eax, eax
0x0000803a      4c89e1         mov rcx, r12
0x0000803d      e8ceaaffff     call sym.imp.error
0x00008042      807b1800       cmp byte [rbx + 0x18], 0
0x00008046      0f8578ebffff   jne 0x6bc4
0x0000804c      e92fe1ffff     jmp 0x6180                              ; /src:707
0x00008051      44888db0fcff.  mov byte [rbp - 0x350], r9b
0x00008058      e843a5ffff     call sym.imp.__errno_location
0x0000805d      833802         cmp dword [rax], 2
0x00008060      4989c4         mov r12, rax
0x00008063      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x0000806b      0f8460040000   je 0x84d1
0x00008071      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008078      bf04000000     mov edi, 4
0x0000807d      e84e660000     call sym.quotearg_style
0x00008082      488d350be500.  lea rsi, str.cannot_backup__s           ; 0x16594 ; "cannot backup %s"
0x00008089      ba05000000     mov edx, 5
0x0000808e      31ff           xor edi, edi
0x00008090      4889c3         mov rbx, rax
0x00008093      e898a6ffff     call sym.imp.dcgettext
0x00008098      418b3424       mov esi, dword [r12]                    ; /src:710
0x0000809c      4889c2         mov rdx, rax
0x0000809f      4889d9         mov rcx, rbx
0x000080a2      31ff           xor edi, edi
0x000080a4      31c0           xor eax, eax
0x000080a6      4531e4         xor r12d, r12d
0x000080a9      e862aaffff     call sym.imp.error
0x000080ae      e9d3e0ffff     jmp 0x6186
0x000080b3      440fb6732e     movzx r14d, byte [rbx + 0x2e]
0x000080b8      4584f6         test r14b, r14b
0x000080bb      0f85cb050000   jne 0x868c
0x000080c1      4584ed         test r13b, r13b
0x000080c4      0f859e050000   jne 0x8668
0x000080ca      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x000080d5      41be01000000   mov r14d, 1                             ; ../coreutils-8.31/src/system.h:-1025
0x000080db      41bf11000000   mov r15d, 0x11
0x000080e1      e9c3dcffff     jmp 0x5da9
0x000080e6      837b0402       cmp dword [rbx + 4], 2
0x000080ea      0f8577f0ffff   jne 0x7167
0x000080f0      8b8598fdffff   mov eax, dword [rbp - 0x268]
0x000080f6      2500f00000     and eax, 0xf000
0x000080fb      3d00800000     cmp eax, 0x8000
0x00008100      0f8513fcffff   jne 0x7d19
0x00008106      e95cf0ffff     jmp 0x7167
0x0000810b      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00008112      bf04000000     mov edi, 4
0x00008117      e8b4650000     call sym.quotearg_style
0x0000811c      ba05000000     mov edx, 5
0x00008121      4989c5         mov r13, rax
0x00008124      488d35fde400.  lea rsi, str.cannot_open__s_for_reading ; 0x16628 ; "cannot open %s for reading"
0x0000812b      e9efecffff     jmp 0x6e1f
0x00008130      448b85ecfcff.  mov r8d, dword [rbp - 0x314]
0x00008137      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x0000813e      b9ffffffff     mov ecx, 0xffffffff                     ; -1
0x00008143      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x0000814a      89ce           mov esi, ecx
0x0000814c      e80f230000     call sym.copy_acl
0x00008151      85c0           test eax, eax
0x00008153      0f85d1dfffff   jne 0x612a
0x00008159      e928e0ffff     jmp 0x6186
0x0000815e      4c89e2         mov rdx, r12
0x00008161      4c89f7         mov rdi, r14
0x00008164      44888db0fcff.  mov byte [rbp - 0x350], r9b
0x0000816b      4c8985a8fcff.  mov qword [rbp - 0x358], r8
0x00008172      e859a7ffff     call sym.imp.memcmp
0x00008177      85c0           test eax, eax
0x00008179      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x00008181      0f8582e5ffff   jne 0x6709
0x00008187      4b8d3c26       lea rdi, [r14 + r12]
0x0000818b      4c89fe         mov rsi, r15
0x0000818e      e89da7ffff     call sym.imp.strcmp
0x00008193      85c0           test eax, eax
0x00008195      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x0000819d      4c8b85a8fcff.  mov r8, qword [rbp - 0x358]
0x000081a4      0f855fe5ffff   jne 0x6709
0x000081aa      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000081b1      4883c9ff       or rcx, 0xffffffffffffffff
0x000081b5      f2ae           repne scasb al, byte [rdi]
0x000081b7      4889c8         mov rax, rcx
0x000081ba      48f7d0         not rax
0x000081bd      4c8d70ff       lea r14, [rax - 1]
0x000081c1      4b8d7c0601     lea rdi, [r14 + r8 + 1]
0x000081c6      e8f58a0000     call sym.xmalloc
0x000081cb      4c8b3d8e4321.  mov r15, qword [obj.simple_backup_suffix] ; [0x21c560:8]=0
0x000081d2      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000081d9      4c89f2         mov rdx, r14
0x000081dc      4889c7         mov rdi, rax
0x000081df      4989c4         mov r12, rax
0x000081e2      e809a9ffff     call sym.imp.mempcpy
0x000081e7      4c89fe         mov rsi, r15
0x000081ea      4889c7         mov rdi, rax
0x000081ed      e8eea3ffff     call sym.imp.strcpy
0x000081f2      488d9530ffff.  lea rdx, [rbp - 0xd0]
0x000081f9      4c89e6         mov rsi, r12
0x000081fc      bf01000000     mov edi, 1
0x00008201      e8daa7ffff     call sym.imp.__xstat
0x00008206      4c89e7         mov rdi, r12
0x00008209      4189c7         mov r15d, eax
0x0000820c      e86faaffff     call sym..plt.got
0x00008211      4585ff         test r15d, r15d
0x00008214      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x0000821c      0f85e7e4ffff   jne 0x6709
0x00008222      488b8538ffff.  mov rax, qword [rbp - 0xc8]
0x00008229      48398588fdff.  cmp qword [rbp - 0x278], rax
0x00008230      0f85d3e4ffff   jne 0x6709
0x00008236      488b8530ffff.  mov rax, qword [rbp - 0xd0]
0x0000823d      48398580fdff.  cmp qword [rbp - 0x280], rax
0x00008244      0f85bfe4ffff   jne 0x6709
0x0000824a      807b1800       cmp byte [rbx + 0x18], 0
0x0000824e      0f8462020000   je 0x84b6
0x00008254      488d358dde00.  lea rsi, str.backing_up__s_might_destroy_source____s_not_moved ; 0x160e8 ; "backing up %s might destroy source;  %s not moved"
0x0000825b      ba05000000     mov edx, 5
0x00008260      31ff           xor edi, edi
0x00008262      e8c9a4ffff     call sym.imp.dcgettext
0x00008267      4889c3         mov rbx, rax
0x0000826a      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x00008271      be04000000     mov esi, 4
0x00008276      bf01000000     mov edi, 1
0x0000827b      e830630000     call sym.quotearg_n_style
0x00008280      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00008287      4989c4         mov r12, rax
0x0000828a      be04000000     mov esi, 4
0x0000828f      31ff           xor edi, edi
0x00008291      e81a630000     call sym.quotearg_n_style
0x00008296      4d89e0         mov r8, r12
0x00008299      4889c1         mov rcx, rax
0x0000829c      4889da         mov rdx, rbx
0x0000829f      31f6           xor esi, esi
0x000082a1      31ff           xor edi, edi
0x000082a3      31c0           xor eax, eax
0x000082a5      e866a8ffff     call sym.imp.error
0x000082aa      4531e4         xor r12d, r12d
0x000082ad      e9d4deffff     jmp 0x6186
0x000082b2      448ba5a4fcff.  mov r12d, dword [rbp - 0x35c]
0x000082b9      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000082c0      488d8d08fdff.  lea rcx, [rbp - 0x2f8]                  ; /src:469
0x000082c7      31ff           xor edi, edi
0x000082c9      448885e0fcff.  mov byte [rbp - 0x320], r8b
0x000082d0      48c78508fdff.  mov qword [rbp - 0x2f8], 0
0x000082db      41f7d4         not r12d
0x000082de      4423a5ecfcff.  and r12d, dword [rbp - 0x314]
0x000082e5      4489e2         mov edx, r12d
0x000082e8      e8c3a6ffff     call sym.imp.__xmknod
0x000082ed      85c0           test eax, eax
0x000082ef      440fb685e0fc.  movzx r8d, byte [rbp - 0x320]
0x000082f7      0f84c2dbffff   je 0x5ebf
0x000082fd      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00008304      4489e6         mov esi, r12d
0x00008307      81e6ffefffff   and esi, 0xffffefff
0x0000830d      e86ea6ffff     call sym.imp.mkfifo
0x00008312      85c0           test eax, eax
0x00008314      440fb685e0fc.  movzx r8d, byte [rbp - 0x320]
0x0000831c      0f849ddbffff   je 0x5ebf
0x00008322      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008329      bf04000000     mov edi, 4
0x0000832e      e89d630000     call sym.quotearg_style
0x00008333      ba05000000     mov edx, 5
0x00008338      4989c5         mov r13, rax
0x0000833b      488d35b8e300.  lea rsi, str.cannot_create_fifo__s      ; 0x166fa ; "cannot create fifo %s"
0x00008342      e9d8eaffff     jmp 0x6e1f
0x00008347      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x0000834e      bf04000000     mov edi, 4
0x00008353      e878630000     call sym.quotearg_style
0x00008358      488d35e4e200.  lea rsi, str.cannot_fstat__s            ; 0x16643 ; "cannot fstat %s"
0x0000835f      ba05000000     mov edx, 5
0x00008364      4989c4         mov r12, rax
0x00008367      31ff           xor edi, edi
0x00008369      e8c2a3ffff     call sym.imp.dcgettext
0x0000836e      488985d8fcff.  mov qword [rbp - 0x328], rax
0x00008375      e826a2ffff     call sym.imp.__errno_location
0x0000837a      4c89e1         mov rcx, r12
0x0000837d      488b95d8fcff.  mov rdx, qword [rbp - 0x328]
0x00008384      8b30           mov esi, dword [rax]
0x00008386      e9f6f6ffff     jmp 0x7a81                              ; /src:1762
0x0000838b      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008392      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00008399      44888da4fcff.  mov byte [rbp - 0x35c], r9b
0x000083a0      448885a8fcff.  mov byte [rbp - 0x358], r8b
0x000083a7      488995b0fcff.  mov qword [rbp - 0x350], rdx
0x000083ae      e82d6b0000     call sym.same_name
0x000083b3      84c0           test al, al
0x000083b5      488b95b0fcff.  mov rdx, qword [rbp - 0x350]
0x000083bc      440fb685a8fc.  movzx r8d, byte [rbp - 0x358]
0x000083c4      440fb68da4fc.  movzx r9d, byte [rbp - 0x35c]
0x000083cc      0f8475080000   je 0x8c47
0x000083d2      8b4218         mov eax, dword [rdx + 0x18]
0x000083d5      2500f00000     and eax, 0xf000
0x000083da      3d00a00000     cmp eax, 0xa000
0x000083df      0f8427ecffff   je 0x700c
0x000083e5      418b442418     mov eax, dword [r12 + 0x18]
0x000083ea      2500f00000     and eax, 0xf000
0x000083ef      3d00a00000     cmp eax, 0xa000
0x000083f4      0f8412ecffff   je 0x700c
0x000083fa      e9e5ebffff     jmp 0x6fe4
0x000083ff      90             nop
0x00008400      0fb67325       movzx esi, byte [rbx + 0x25]
0x00008404      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x0000840b      31d2           xor edx, edx
0x0000840d      4889d9         mov rcx, rbx
0x00008410      e89bd1ffff     call sym.set_file_security_ctx
0x00008415      84c0           test al, al
0x00008417      0f852ffaffff   jne 0x7e4c
0x0000841d      807b2600       cmp byte [rbx + 0x26], 0
0x00008421      0f85a9e4ffff   jne 0x68d0
0x00008427      e920faffff     jmp 0x7e4c
0x0000842c      488b9510feff.  mov rdx, qword [rbp - 0x1f0]
0x00008433      488bb518feff.  mov rsi, qword [rbp - 0x1e8]
0x0000843a      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00008441      e89a180000     call sym.remember_copied
0x00008446      488b85c8fcff.  mov rax, qword [rbp - 0x338]            ; /src:-390
0x0000844d      c60001         mov byte [rax], 1
0x00008450      e9e3f1ffff     jmp 0x7638
0x00008455      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x0000845c      be04000000     mov esi, 4
0x00008461      bf01000000     mov edi, 1
0x00008466      e845610000     call sym.quotearg_n_style
0x0000846b      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00008472      be04000000     mov esi, 4
0x00008477      31ff           xor edi, edi
0x00008479      4989c4         mov r12, rax
0x0000847c      e82f610000     call sym.quotearg_n_style
0x00008481      ba05000000     mov edx, 5                              ; /src:-389
0x00008486      4889c3         mov rbx, rax
0x00008489      488d35b8db00.  lea rsi, str.will_not_overwrite_just_created__s_with__s ; 0x16048 ; "will not overwrite just-created %s with %s"
0x00008490      e9e6eaffff     jmp 0x6f7b
0x00008495      8b5310         mov edx, dword [rbx + 0x10]
0x00008498      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x0000849f      beffffffff     mov esi, 0xffffffff                     ; -1
0x000084a4      e847200000     call sym.set_acl                        ; /src:1594
0x000084a9      85c0           test eax, eax
0x000084ab      0f859fd7ffff   jne 0x5c50
0x000084b1      e9d0dcffff     jmp 0x6186
0x000084b6      488d3563dc00.  lea rsi, str.backing_up__s_might_destroy_source____s_not_copied ; 0x16120 ; "backing up %s might destroy source;  %s not copied"
0x000084bd      ba05000000     mov edx, 5
0x000084c2      31ff           xor edi, edi
0x000084c4      e867a2ffff     call sym.imp.dcgettext
0x000084c9      4889c3         mov rbx, rax
0x000084cc      e999fdffff     jmp 0x826a
0x000084d1      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x000084dc      41be01000000   mov r14d, 1
0x000084e2      41bf11000000   mov r15d, 0x11
0x000084e8      e9e1d7ffff     jmp 0x5cce                              ; /src:1621
0x000084ed      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000084f4      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x000084fb      31d2           xor edx, edx
0x000084fd      e8eec7ffff     call sym.emit_verbose
0x00008502      e981f1ffff     jmp 0x7688
0x00008507      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x0000850e      bf04000000     mov edi, 4
0x00008513      e8b8610000     call sym.quotearg_style
0x00008518      488d35c8e100.  lea rsi, str.failed_to_close__s         ; 0x166e7 ; "failed to close %s"
0x0000851f      31ff           xor edi, edi
0x00008521      ba05000000     mov edx, 5
0x00008526      4989c4         mov r12, rax
0x00008529      e802a2ffff     call sym.imp.dcgettext
0x0000852e      4989c5         mov r13, rax
0x00008531      e86aa0ffff     call sym.imp.__errno_location           ; /src:1432
0x00008536      8b30           mov esi, dword [rax]
0x00008538      31ff           xor edi, edi
0x0000853a      4c89e1         mov rcx, r12
0x0000853d      4c89ea         mov rdx, r13
0x00008540      31c0           xor eax, eax
0x00008542      e8c9a5ffff     call sym.imp.error
0x00008547      488bbdd0fcff.  mov rdi, qword [rbp - 0x330]
0x0000854e      e82da7ffff     call sym..plt.got
0x00008553      e978e3ffff     jmp 0x68d0
0x00008558      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x0000855f      bf04000000     mov edi, 4
0x00008564      e867610000     call sym.quotearg_style
0x00008569      488d35a7e000.  lea rsi, str.cannot_access__s           ; /src:1083 ; 0x16617 ; "cannot access %s"
0x00008570      ba05000000     mov edx, 5
0x00008575      31ff           xor edi, edi
0x00008577      4989c4         mov r12, rax
0x0000857a      e8b1a1ffff     call sym.imp.dcgettext                  ; /src:1075
0x0000857f      4989c7         mov r15, rax
0x00008582      e819a0ffff     call sym.imp.__errno_location
0x00008587      8b30           mov esi, dword [rax]
0x00008589      4c89e1         mov rcx, r12
0x0000858c      4c89fa         mov rdx, r15
0x0000858f      31ff           xor edi, edi
0x00008591      31c0           xor eax, eax
0x00008593      4531e4         xor r12d, r12d
0x00008596      e875a5ffff     call sym.imp.error
0x0000859b      e9e3f2ffff     jmp 0x7883
0x000085a0      488bb5b0fdff.  mov rsi, qword [rbp - 0x250]
0x000085a7      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x000085ae      e88d1f0000     call sym.areadlink_with_size            ; ../coreutils-8.31/src/py.c:-1011
0x000085b3      4885c0         test rax, rax
0x000085b6      4989c4         mov r12, rax
0x000085b9      0f8444080000   je 0x8e03
0x000085bf      0fb64b16       movzx ecx, byte [rbx + 0x16]
0x000085c3      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x000085ca      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x000085d0      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x000085d5      4889c7         mov rdi, rax
0x000085d8      e8231d0000     call sym.force_symlinkat                ; /src:1723
0x000085dd      85c0           test eax, eax
0x000085df      8985e0fcffff   mov dword [rbp - 0x320], eax
0x000085e5      0f8e3d080000   jle 0x8e28
0x000085eb      807b2d01       cmp byte [rbx + 0x2d], 1
0x000085ef      7509           jne 0x85fa                              ; /src:1769
0x000085f1      4584f6         test r14b, r14b
0x000085f4      0f84df0b0000   je 0x91d9
0x000085fa      4c89e7         mov rdi, r12
0x000085fd      e87ea6ffff     call sym..plt.got
0x00008602      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008609      bf04000000     mov edi, 4
0x0000860e      e8bd600000     call sym.quotearg_style
0x00008613      488d358edd00.  lea rsi, str.cannot_create_symbolic_link__s ; 0x163a8 ; "cannot create symbolic link %s"
0x0000861a      31ff           xor edi, edi
0x0000861c      ba05000000     mov edx, 5
0x00008621      4989c4         mov r12, rax
0x00008624      e807a1ffff     call sym.imp.dcgettext                  ; /src:1785
0x00008629      8bb5e0fcffff   mov esi, dword [rbp - 0x320]
0x0000862f      4889c2         mov rdx, rax
0x00008632      4c89e1         mov rcx, r12
0x00008635      31ff           xor edi, edi
0x00008637      31c0           xor eax, eax                            ; /src:1760
0x00008639      e8d2a4ffff     call sym.imp.error
0x0000863e      e98de2ffff     jmp 0x68d0
0x00008643      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000864a      bf04000000     mov edi, 4
0x0000864f      e87c600000     call sym.quotearg_style
0x00008654      ba05000000     mov edx, 5                              ; /src:1762
0x00008659      4989c5         mov r13, rax
0x0000865c      488d3583df00.  lea rsi, str.setting_permissions_for__s ; 0x165e6 ; "setting permissions for %s"
0x00008663      e9b7e7ffff     jmp 0x6e1f
0x00008668      48837b4000     cmp qword [rbx + 0x40], 0
0x0000866d      4589ee         mov r14d, r13d
0x00008670      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x0000867b      41bf11000000   mov r15d, 0x11                          ; /src:-50
0x00008681      0f855bd6ffff   jne 0x5ce2
0x00008687      e91dd7ffff     jmp 0x5da9
0x0000868c      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008693      bf04000000     mov edi, 4
0x00008698      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x0000869f      41bf11000000   mov r15d, 0x11
0x000086a5      e826600000     call sym.quotearg_style
0x000086aa      488d35fad300.  lea rsi, str.removed__s                 ; 0x15aab ; "removed %s\n"
0x000086b1      4989c4         mov r12, rax
0x000086b4      ba05000000     mov edx, 5
0x000086b9      31ff           xor edi, edi
0x000086bb      e870a0ffff     call sym.imp.dcgettext
0x000086c0      4c89e2         mov rdx, r12
0x000086c3      4889c6         mov rsi, rax
0x000086c6      bf01000000     mov edi, 1
0x000086cb      31c0           xor eax, eax
0x000086cd      e8dea3ffff     call sym.imp.__printf_chk
0x000086d2      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x000086dd      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x000086e5      e9e4d5ffff     jmp 0x5cce
0x000086ea      8b8530feffff   mov eax, dword [rbp - 0x1d0]            ; ../coreutils-8.31/src/selinux.h:-778
0x000086f0      3985a0fdffff   cmp dword [rbp - 0x260], eax            ; /src:-48
0x000086f6      0f8546d9ffff   jne 0x6042                              ; /src:-40
0x000086fc      e986d9ffff     jmp 0x6087
0x00008701      e80ad2ffff     call sym.cached_umask
0x00008706      f7d0           not eax
0x00008708      2185a4fcffff   and dword [rbp - 0x35c], eax
0x0000870e      0f84a9d9ffff   je 0x60bd
0x00008714      80bdebfcffff.  cmp byte [rbp - 0x315], 1
0x0000871b      0f84a9d9ffff   je 0x60ca
0x00008721      4584f6         test r14b, r14b
0x00008724      0f856d090000   jne 0x9097
0x0000872a      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x00008730      898574fcffff   mov dword [rbp - 0x38c], eax
0x00008736      f7d0           not eax
0x00008738      8585a4fcffff   test dword [rbp - 0x35c], eax
0x0000873e      0f8586d9ffff   jne 0x60ca
0x00008744      e93ddaffff     jmp 0x6186
0x00008749      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x0000874f      bab6010000     mov edx, 0x1b6
0x00008754      bbff010000     mov ebx, 0x1ff
0x00008759      2500700000     and eax, 0x7000
0x0000875e      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x00008763      0f45da         cmovne ebx, edx
0x00008766      e8a5d1ffff     call sym.cached_umask
0x0000876b      f7d0           not eax
0x0000876d      89c2           mov edx, eax
0x0000876f      21da           and edx, ebx
0x00008771      e922fdffff     jmp 0x8498
0x00008776      4181e4ff0100.  and r12d, 0x1ff
0x0000877d      4584f6         test r14b, r14b                         ; /src:-245
0x00008780      4489a55cfcff.  mov dword [rbp - 0x3a4], r12d
0x00008787      0f8593050000   jne 0x8d20
0x0000878d      807b2301       cmp byte [rbx + 0x23], 1
0x00008791      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00008798      19f6           sbb esi, esi
0x0000879a      31c0           xor eax, eax
0x0000879c      81e600feffff   and esi, 0xfffffe00                     ; 4294966784
0x000087a2      81c601020000   add esi, 0x201
0x000087a8      e8432a0000     call sym.open_safer
0x000087ad      8985d8fcffff   mov dword [rbp - 0x328], eax
0x000087b3      e8e89dffff     call sym.imp.__errno_location
0x000087b8      4989c4         mov r12, rax
0x000087bb      48b800ff0000.  movabs rax, 0xff000000ff00
0x000087c5      48854320       test qword [rbx + 0x20], rax
0x000087c9      0f8586080000   jne 0x9055
0x000087cf      83bdd8fcffff.  cmp dword [rbp - 0x328], 0
0x000087d6      0f8886080000   js 0x9062
0x000087dc      c78588fcffff.  mov dword [rbp - 0x378], 0
0x000087e6      488d8530ffff.  lea rax, [rbp - 0xd0]
0x000087ed      8bb5d8fcffff   mov esi, dword [rbp - 0x328]
0x000087f3      bf01000000     mov edi, 1
0x000087f8      4889c2         mov rdx, rax
0x000087fb      48898598fcff.  mov qword [rbp - 0x368], rax
0x00008802      e829a2ffff     call sym.imp.__fxstat
0x00008807      85c0           test eax, eax
0x00008809      8985b8fcffff   mov dword [rbp - 0x348], eax
0x0000880f      0f85a10b0000   jne 0x93b6
0x00008815      80bdc8fcffff.  cmp byte [rbp - 0x338], 0
0x0000881c      0f84cd060000   je 0x8eef
0x00008822      837b3800       cmp dword [rbx + 0x38], 0
0x00008826      0f85580e0000   jne 0x9684
0x0000882c      e8afa3ffff     call sym.imp.getpagesize
0x00008831      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x00008838      4c63e0         movsxd r12, eax                         ; /src:24
0x0000883b      48b80000feff.  movabs rax, 0x1ffffffffffe0000
0x00008845      41b800020000   mov r8d, 0x200
0x0000884b      8bbde0fcffff   mov edi, dword [rbp - 0x320]
0x00008851      4c8985d0fcff.  mov qword [rbp - 0x330], r8             ; /src:28
0x00008858      488d910000fe.  lea rdx, [rcx - 0x20000]
0x0000885f      4839c2         cmp rdx, rax
0x00008862      b800000200     mov eax, 0x20000
0x00008867      488d51ff       lea rdx, [rcx - 1]
0x0000886b      480f46c1       cmovbe rax, rcx
0x0000886f      48898590fcff.  mov qword [rbp - 0x370], rax            ; stdio.h:-741
0x00008876      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; 2305843009213693951
0x00008880      4839c2         cmp rdx, rax
0x00008883      490f47c8       cmova rcx, r8
0x00008887      31d2           xor edx, edx
0x00008889      31f6           xor esi, esi
0x0000888b      48898d68fcff.  mov qword [rbp - 0x398], rcx
0x00008892      b902000000     mov ecx, 2
0x00008897      e814290000     call sym.fdadvise
0x0000889c      448b8db8feff.  mov r9d, dword [rbp - 0x148]
0x000088a3      4c8b85d0fcff.  mov r8, qword [rbp - 0x330]
0x000088aa      4181e100f000.  and r9d, 0xf000                         ; /src:-849
0x000088b1      4181f9008000.  cmp r9d, 0x8000
0x000088b8      0f84dc0e0000   je 0x979a
0x000088be      8b8548ffffff   mov eax, dword [rbp - 0xb8]
0x000088c4      2500f00000     and eax, 0xf000                         ; /src:-980
0x000088c9      3d00800000     cmp eax, 0x8000
0x000088ce      0f845b0e0000   je 0x972f
0x000088d4      488bbdd8feff.  mov rdi, qword [rbp - 0x128]
0x000088db      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x000088e5      488bb590fcff.  mov rsi, qword [rbp - 0x370]
0x000088ec      4c29e0         sub rax, r12
0x000088ef      44898d80fcff.  mov dword [rbp - 0x380], r9d
0x000088f6      4989c0         mov r8, rax
0x000088f9      48b80000feff.  movabs rax, 0x1ffffffffffe0000
0x00008903      488d970000fe.  lea rdx, [rdi - 0x20000]
0x0000890a      4c8985d0fcff.  mov qword [rbp - 0x330], r8
0x00008911      4839c2         cmp rdx, rax
0x00008914      b800000200     mov eax, 0x20000
0x00008919      4c89c2         mov rdx, r8
0x0000891c      480f47f8       cmova rdi, rax
0x00008920      e85b240000     call sym.buffer_lcm
0x00008925      448b8d80fcff.  mov r9d, dword [rbp - 0x380]
0x0000892c      4889c1         mov rcx, rax
0x0000892f      4c8b85d0fcff.  mov r8, qword [rbp - 0x330]
0x00008936      4181f9008000.  cmp r9d, 0x8000
0x0000893d      0f84ca0c0000   je 0x960d
0x00008943      488b8590fcff.  mov rax, qword [rbp - 0x370]
0x0000894a      31d2           xor edx, edx
0x0000894c      488d7401ff     lea rsi, [rcx + rax - 1]
0x00008951      4889f0         mov rax, rsi
0x00008954      48f7f1         div rcx
0x00008957      4829d6         sub rsi, rdx
0x0000895a      4889b590fcff.  mov qword [rbp - 0x370], rsi
0x00008961      0f84aa0a0000   je 0x9411
0x00008967      4c39c6         cmp rsi, r8
0x0000896a      0f87a10a0000   ja 0x9411
0x00008970      488b8590fcff.  mov rax, qword [rbp - 0x370]            ; /src:-990
0x00008977      498d3c04       lea rdi, [r12 + rax]                    ; /src:-989
0x0000897b      e840830000     call sym.xmalloc
0x00008980      4a8d4c20ff     lea rcx, [rax + r12 - 1]
0x00008985      31d2           xor edx, edx
0x00008987      488985d0fcff.  mov qword [rbp - 0x330], rax
0x0000898e      4889c8         mov rax, rcx
0x00008991      49f7f4         div r12
0x00008994      4829d1         sub rcx, rdx
0x00008997      83bdb8fcffff.  cmp dword [rbp - 0x348], 0
0x0000899e      48898d50fcff.  mov qword [rbp - 0x3b0], rcx
0x000089a5      0f84720a0000   je 0x941d
0x000089ab      c6855bfcffff.  mov byte [rbp - 0x3a5], 0
0x000089b2      c78570fcffff.  mov dword [rbp - 0x390], 1
0x000089bc      488b85d0feff.  mov rax, qword [rbp - 0x130]
0x000089c3      8bbde0fcffff   mov edi, dword [rbp - 0x320]            ; /src:-1068
0x000089c9      4531e4         xor r12d, r12d
0x000089cc      48898580fcff.  mov qword [rbp - 0x380], rax
0x000089d3      488d8510fdff.  lea rax, [rbp - 0x2f0]
0x000089da      4889c6         mov rsi, rax
0x000089dd      488985b8fcff.  mov qword [rbp - 0x348], rax
0x000089e4      e8c7130000     call sym.extent_scan_init
0x000089e9      488d8507fdff.  lea rax, [rbp - 0x2f9]
0x000089f0      31c9           xor ecx, ecx
0x000089f2      48899d78fcff.  mov qword [rbp - 0x388], rbx
0x000089f9      48c78560fcff.  mov qword [rbp - 0x3a0], 0
0x00008a04      4889cb         mov rbx, rcx
0x00008a07      4489ada0fcff.  mov dword [rbp - 0x360], r13d
0x00008a0e      48898548fcff.  mov qword [rbp - 0x3b8], rax
0x00008a15      488d8508fdff.  lea rax, [rbp - 0x2f8]
0x00008a1c      48898540fcff.  mov qword [rbp - 0x3c0], rax
0x00008a23      488bbdb8fcff.  mov rdi, qword [rbp - 0x348]
0x00008a2a      e8b1130000     call sym.extent_scan_read
0x00008a2f      84c0           test al, al
0x00008a31      0f84fa0b0000   je 0x9631
0x00008a37      4883bd28fdff.  cmp qword [rbp - 0x2d8], 0
0x00008a3f      0f84c90a0000   je 0x950e
0x00008a45      4889da         mov rdx, rbx
0x00008a48      4c89e1         mov rcx, r12
0x00008a4b      4531ed         xor r13d, r13d
0x00008a4e      31c0           xor eax, eax
0x00008a50      e9b8000000     jmp 0x8b0d
0x00008a55      0f1f00         nop dword [rax]
0x00008a58      83bd70fcffff.  cmp dword [rbp - 0x390], 3
0x00008a5f      41b800000000   mov r8d, 0
0x00008a65      4c0f448568fc.  cmove r8, qword [rbp - 0x398]
0x00008a6d      4883ec08       sub rsp, 8                              ; stat.h:-1450
0x00008a71      488b8d90fcff.  mov rcx, qword [rbp - 0x370]
0x00008a78      488b9550fcff.  mov rdx, qword [rbp - 0x3b0]
0x00008a7f      8bb5d8fcffff   mov esi, dword [rbp - 0x328]
0x00008a85      8bbde0fcffff   mov edi, dword [rbp - 0x320]
0x00008a8b      41b901000000   mov r9d, 1
0x00008a91      ffb548fcffff   push qword [rbp - 0x3b8]
0x00008a97      ffb540fcffff   push qword [rbp - 0x3c0]
0x00008a9d      53             push rbx
0x00008a9e      ffb5f8fcffff   push qword [rbp - 0x308]                ; /src:-115
0x00008aa4      ffb5f0fcffff   push qword [rbp - 0x310]
0x00008aaa      e821c6ffff     call sym.sparse_copy
0x00008aaf      4883c430       add rsp, 0x30
0x00008ab3      84c0           test al, al
0x00008ab5      0f84fd000000   je 0x8bb8
0x00008abb      488b8508fdff.  mov rax, qword [rbp - 0x2f8]
0x00008ac2      498d0c04       lea rcx, [r12 + rax]
0x00008ac6      4885c0         test rax, rax
0x00008ac9      48898d60fcff.  mov qword [rbp - 0x3a0], rcx
0x00008ad0      740d           je 0x8adf
0x00008ad2      0fb68507fdff.  movzx eax, byte [rbp - 0x2f9]
0x00008ad9      8885c8fcffff   mov byte [rbp - 0x338], al
0x00008adf      488b8d60fcff.  mov rcx, qword [rbp - 0x3a0]
0x00008ae6      48398d80fcff.  cmp qword [rbp - 0x380], rcx            ; /src:-114
0x00008aed      0f84140a0000   je 0x9507
0x00008af3      418d4501       lea eax, [r13 + 1]
0x00008af7      483b8528fdff.  cmp rax, qword [rbp - 0x2d8]
0x00008afe      4c89e1         mov rcx, r12
0x00008b01      4889da         mov rdx, rbx
0x00008b04      4989c5         mov r13, rax
0x00008b07      0f83010a0000   jae 0x950e
0x00008b0d      488d3440       lea rsi, [rax + rax*2]
0x00008b11      488b8538fdff.  mov rax, qword [rbp - 0x2c8]
0x00008b18      488d04f0       lea rax, [rax + rsi*8]
0x00008b1c      488bb580fcff.  mov rsi, qword [rbp - 0x380]
0x00008b23      4c8b20         mov r12, qword [rax]
0x00008b26      488b5808       mov rbx, qword [rax + 8]
0x00008b2a      498d041c       lea rax, [r12 + rbx]
0x00008b2e      4839c6         cmp rsi, rax
0x00008b31      7d0d           jge 0x8b40
0x00008b33      4939f4         cmp r12, rsi
0x00008b36      4c0f4fe6       cmovg r12, rsi
0x00008b3a      4c29e6         sub rsi, r12
0x00008b3d      4889f3         mov rbx, rsi
0x00008b40      4c89e0         mov rax, r12
0x00008b43      c685c8fcffff.  mov byte [rbp - 0x338], 0
0x00008b4a      4829c8         sub rax, rcx
0x00008b4d      4889c1         mov rcx, rax
0x00008b50      4829d1         sub rcx, rdx
0x00008b53      0f84fffeffff   je 0x8a58
0x00008b59      8bbde0fcffff   mov edi, dword [rbp - 0x320]
0x00008b5f      31d2           xor edx, edx
0x00008b61      4c89e6         mov rsi, r12
0x00008b64      48898d60fcff.  mov qword [rbp - 0x3a0], rcx
0x00008b6b      e8909cffff     call sym.imp.lseek
0x00008b70      4885c0         test rax, rax
0x00008b73      488b8d60fcff.  mov rcx, qword [rbp - 0x3a0]
0x00008b7a      0f886f0e0000   js 0x99ef                               ; /src:-412
0x00008b80      8b8570fcffff   mov eax, dword [rbp - 0x390]
0x00008b86      83f803         cmp eax, 3
0x00008b89      0f94c2         sete dl
0x00008b8c      83e801         sub eax, 1
0x00008b8f      0f8453070000   je 0x92e8
0x00008b95      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008b9c      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x00008ba2      0fb6d2         movzx edx, dl
0x00008ba5      e866c4ffff     call sym.create_hole
0x00008baa      84c0           test al, al
0x00008bac      8885c8fcffff   mov byte [rbp - 0x338], al
0x00008bb2      0f85a0feffff   jne 0x8a58
0x00008bb8      488b9d78fcff.  mov rbx, qword [rbp - 0x388]
0x00008bbf      448bada0fcff.  mov r13d, dword [rbp - 0x360]
0x00008bc6      488bbd38fdff.  mov rdi, qword [rbp - 0x2c8]
0x00008bcd      e8aea0ffff     call sym..plt.got
0x00008bd2      4531c0         xor r8d, r8d
0x00008bd5      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x00008bdb      448885c8fcff.  mov byte [rbp - 0x338], r8b
0x00008be2      e8899cffff     call sym.imp.close
0x00008be7      85c0           test eax, eax
0x00008be9      440fb685c8fc.  movzx r8d, byte [rbp - 0x338]
0x00008bf1      0f89a1eeffff   jns 0x7a98
0x00008bf7      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008bfe      bf04000000     mov edi, 4
0x00008c03      e8c85a0000     call sym.quotearg_style
0x00008c08      488d35d8da00.  lea rsi, str.failed_to_close__s         ; 0x166e7 ; "failed to close %s"
0x00008c0f      ba05000000     mov edx, 5
0x00008c14      31ff           xor edi, edi
0x00008c16      4989c4         mov r12, rax
0x00008c19      e8129bffff     call sym.imp.dcgettext
0x00008c1e      488985d8fcff.  mov qword [rbp - 0x328], rax
0x00008c25      e87699ffff     call sym.imp.__errno_location
0x00008c2a      488b95d8fcff.  mov rdx, qword [rbp - 0x328]
0x00008c31      8b30           mov esi, dword [rax]
0x00008c33      4c89e1         mov rcx, r12                            ; /src:-411
0x00008c36      31ff           xor edi, edi
0x00008c38      31c0           xor eax, eax
0x00008c3a      e8d19effff     call sym.imp.error
0x00008c3f      4531c0         xor r8d, r8d
0x00008c42      e951eeffff     jmp 0x7a98
0x00008c47      440fb66318     movzx r12d, byte [rbx + 0x18]
0x00008c4c      4183f401       xor r12d, 1
0x00008c50      e967e4ffff     jmp 0x70bc
0x00008c55      c685ebfcffff.  mov byte [rbp - 0x315], 0
0x00008c5c      41bc01000000   mov r12d, 1
0x00008c62      e900ecffff     jmp 0x7867
0x00008c67      488b8530ffff.  mov rax, qword [rbp - 0xd0]
0x00008c6e      483985a0feff.  cmp qword [rbp - 0x160], rax
0x00008c75      0f85e9eeffff   jne 0x7b64
0x00008c7b      e9bcdbffff     jmp 0x683c
0x00008c80      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00008c87      e82499ffff     call sym.imp.unlink
0x00008c8c      85c0           test eax, eax                           ; /src:-578
0x00008c8e      0f85320c0000   jne 0x98c6
0x00008c94      807b2e00       cmp byte [rbx + 0x2e], 0
0x00008c98      7439           je 0x8cd3
0x00008c9a      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008ca1      bf04000000     mov edi, 4
0x00008ca6      e8255a0000     call sym.quotearg_style
0x00008cab      488d35f9cd00.  lea rsi, str.removed__s                 ; 0x15aab ; "removed %s\n"
0x00008cb2      4989c4         mov r12, rax
0x00008cb5      ba05000000     mov edx, 5
0x00008cba      31ff           xor edi, edi
0x00008cbc      e86f9affff     call sym.imp.dcgettext
0x00008cc1      4c89e2         mov rdx, r12
0x00008cc4      4889c6         mov rsi, rax                            ; /src:1136
0x00008cc7      bf01000000     mov edi, 1
0x00008ccc      31c0           xor eax, eax                            ; /src:1144
0x00008cce      e8dd9dffff     call sym.imp.__printf_chk
0x00008cd3      440fb67321     movzx r14d, byte [rbx + 0x21]
0x00008cd8      8b85a4fcffff   mov eax, dword [rbp - 0x35c]
0x00008cde      898588fcffff   mov dword [rbp - 0x378], eax
0x00008ce4      4584f6         test r14b, r14b
0x00008ce7      7443           je 0x8d2c
0x00008ce9      8b955cfcffff   mov edx, dword [rbp - 0x3a4]
0x00008cef      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008cf6      4989d8         mov r8, rbx
0x00008cf9      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00008d00      b901000000     mov ecx, 1                              ; /src:1345
0x00008d05      e8d6c7ffff     call sym.set_process_security_ctx       ; ../coreutils-8.31/src/selinux.h:-1149
0x00008d0a      84c0           test al, al
0x00008d0c      4189c0         mov r8d, eax
0x00008d0f      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x00008d1a      0f8478edffff   je 0x7a98
0x00008d20      8b85a4fcffff   mov eax, dword [rbp - 0x35c]
0x00008d26      898588fcffff   mov dword [rbp - 0x378], eax
0x00008d2c      8b8588fcffff   mov eax, dword [rbp - 0x378]
0x00008d32      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00008d39      bec1000000     mov esi, 0xc1
0x00008d3e      f7d0           not eax
0x00008d40      23855cfcffff   and eax, dword [rbp - 0x3a4]
0x00008d46      89c2           mov edx, eax
0x00008d48      8985d0fcffff   mov dword [rbp - 0x330], eax
0x00008d4e      31c0           xor eax, eax
0x00008d50      e89b240000     call sym.open_safer
0x00008d55      4189c6         mov r14d, eax
0x00008d58      8985d8fcffff   mov dword [rbp - 0x328], eax
0x00008d5e      e83d98ffff     call sym.imp.__errno_location
0x00008d63      448b00         mov r8d, dword [rax]
0x00008d66      4989c4         mov r12, rax
0x00008d69      4489f0         mov eax, r14d
0x00008d6c      c1e81f         shr eax, 0x1f
0x00008d6f      4183f811       cmp r8d, 0x11
0x00008d73      0f94c2         sete dl
0x00008d76      20c2           and dl, al
0x00008d78      4189d6         mov r14d, edx
0x00008d7b      0f8401040000   je 0x9182
0x00008d81      807b1800       cmp byte [rbx + 0x18], 0
0x00008d85      41b811000000   mov r8d, 0x11
0x00008d8b      0f8484030000   je 0x9115                               ; /src:-578
0x00008d91      41b901000000   mov r9d, 1
0x00008d97      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008d9e      bf04000000     mov edi, 4
0x00008da3      44888dd0fcff.  mov byte [rbp - 0x330], r9b
0x00008daa      448985d8fcff.  mov dword [rbp - 0x328], r8d
0x00008db1      e81a590000     call sym.quotearg_style
0x00008db6      488d3596d800.  lea rsi, str.cannot_create_regular_file__s ; 0x16653 ; "cannot create regular file %s"
0x00008dbd      ba05000000     mov edx, 5
0x00008dc2      31ff           xor edi, edi                            ; /src:-264
0x00008dc4      4989c4         mov r12, rax
0x00008dc7      e86499ffff     call sym.imp.dcgettext
0x00008dcc      448b85d8fcff.  mov r8d, dword [rbp - 0x328]
0x00008dd3      4889c2         mov rdx, rax
0x00008dd6      4c89e1         mov rcx, r12
0x00008dd9      31ff           xor edi, edi
0x00008ddb      31c0           xor eax, eax
0x00008ddd      4489c6         mov esi, r8d
0x00008de0      e82b9dffff     call sym.imp.error
0x00008de5      440fb68dd0fc.  movzx r9d, byte [rbp - 0x330]
0x00008ded      4531c0         xor r8d, r8d
0x00008df0      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x00008dfb      4589ce         mov r14d, r9d
0x00008dfe      e995ecffff     jmp 0x7a98
0x00008e03      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00008e0a      bf04000000     mov edi, 4
0x00008e0f      e8bc580000     call sym.quotearg_style
0x00008e14      ba05000000     mov edx, 5
0x00008e19      4989c5         mov r13, rax
0x00008e1c      488d350bd900.  lea rsi, str.cannot_read_symbolic_link__s ; 0x1672e ; "cannot read symbolic link %s"
0x00008e23      e9f7dfffff     jmp 0x6e1f
0x00008e28      4c89e7         mov rdi, r12
0x00008e2b      e8509effff     call sym..plt.got
0x00008e30      440fb64325     movzx r8d, byte [rbx + 0x25]
0x00008e35      4584c0         test r8b, r8b
0x00008e38      0f8512dcffff   jne 0x6a50
0x00008e3e      0fb6431d       movzx eax, byte [rbx + 0x1d]            ; /src:-213
0x00008e42      84c0           test al, al
0x00008e44      8885e0fcffff   mov byte [rbp - 0x320], al
0x00008e4a      0f8573020000   jne 0x90c3
0x00008e50      440fb685e0fc.  movzx r8d, byte [rbp - 0x320]
0x00008e58      c685e0fcffff.  mov byte [rbp - 0x320], 1               ; /src:-211
0x00008e5f      e95bd0ffff     jmp 0x5ebf                              ; /src:-210
0x00008e64      e81799ffff     call sym.imp.__stack_chk_fail
0x00008e69      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008e70      488d95a0feff.  lea rdx, [rbp - 0x160]
0x00008e77      bf01000000     mov edi, 1
0x00008e7c      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00008e83      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00008e8a      e8519bffff     call sym.imp.__xstat
0x00008e8f      85c0           test eax, eax
0x00008e91      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00008e99      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00008ea1      0f848ae6ffff   je 0x7531
0x00008ea7      e9b3ccffff     jmp 0x5b5f
0x00008eac      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00008eb3      488d9530ffff.  lea rdx, [rbp - 0xd0]
0x00008eba      bf01000000     mov edi, 1
0x00008ebf      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00008ec6      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00008ecd      e80e9bffff     call sym.imp.__xstat
0x00008ed2      85c0           test eax, eax
0x00008ed4      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00008edc      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00008ee4      0f84b2e5ffff   je 0x749c
0x00008eea      e970ccffff     jmp 0x5b5f
0x00008eef      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x00008efa      807b1f00       cmp byte [rbx + 0x1f], 0
0x00008efe      0f8502040000   jne 0x9306                              ; /src:-510
0x00008f04      807b1d00       cmp byte [rbx + 0x1d], 0
0x00008f08      745a           je 0x8f64
0x00008f0a      8b854cffffff   mov eax, dword [rbp - 0xb4]
0x00008f10      39859cfdffff   cmp dword [rbp - 0x264], eax
0x00008f16      750e           jne 0x8f26
0x00008f18      8b8550ffffff   mov eax, dword [rbp - 0xb0]
0x00008f1e      3985a0fdffff   cmp dword [rbp - 0x260], eax            ; ../coreutils-8.31/src/py.c:1011
0x00008f24      743e           je 0x8f64
0x00008f26      4c8b8d98fcff.  mov r9, qword [rbp - 0x368]
0x00008f2d      8b95d8fcffff   mov edx, dword [rbp - 0x328]
0x00008f33      488d8d80fdff.  lea rcx, [rbp - 0x280]
0x00008f3a      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008f41      450fb6c6       movzx r8d, r14b
0x00008f45      4889df         mov rdi, rbx
0x00008f48      e8b3c7ffff     call sym.set_owner
0x00008f4d      83f8ff         cmp eax, 0xffffffff
0x00008f50      0f847cfcffff   je 0x8bd2
0x00008f56      85c0           test eax, eax
0x00008f58      750a           jne 0x8f64
0x00008f5a      81a5c0fcffff.  and dword [rbp - 0x340], 0xfffff1ff     ; [0xfffff1ff:4]=-1 ; 4294963711
0x00008f64      807b2700       cmp byte [rbx + 0x27], 0
0x00008f68      740d           je 0x8f77
0x00008f6a      f68548ffffff.  test byte [rbp - 0xb8], 0x80
0x00008f71      0f84270a0000   je 0x999e
0x00008f77      48b8ff000000.  movabs rax, 0xff0000000000ff            ; 71776119061217535
0x00008f81      48854318       test qword [rbx + 0x18], rax
0x00008f85      0f85d2020000   jne 0x925d
0x00008f8b      807b2b00       cmp byte [rbx + 0x2b], 0
0x00008f8f      0f858d0a0000   jne 0x9a22
0x00008f95      4589f4         mov r12d, r14d                          ; ../coreutils-8.31/src/py.c:1027
0x00008f98      44226320       and r12b, byte [rbx + 0x20]
0x00008f9c      0f85f5080000   jne 0x9897
0x00008fa2      83bd88fcffff.  cmp dword [rbp - 0x378], 0              ; ../coreutils-8.31/src/py.c:-336
0x00008fa9      41b801000000   mov r8d, 1
0x00008faf      0f8420fcffff   je 0x8bd5
0x00008fb5      448885c8fcff.  mov byte [rbp - 0x338], r8b
0x00008fbc      e84fc9ffff     call sym.cached_umask
0x00008fc1      f7d0           not eax
0x00008fc3      858588fcffff   test dword [rbp - 0x378], eax
0x00008fc9      440fb685c8fc.  movzx r8d, byte [rbp - 0x338]
0x00008fd1      0f84fefbffff   je 0x8bd5
0x00008fd7      8b955cfcffff   mov edx, dword [rbp - 0x3a4]
0x00008fdd      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008fe4      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x00008fea      e8a19cffff     call sym.fchmod_or_lchmod
0x00008fef      85c0           test eax, eax
0x00008ff1      440fb685c8fc.  movzx r8d, byte [rbp - 0x338]
0x00008ff9      0f84d6fbffff   je 0x8bd5
0x00008fff      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009006      bf04000000     mov edi, 4
0x0000900b      e8c0560000     call sym.quotearg_style
0x00009010      488d35b2d600.  lea rsi, str.preserving_permissions_for__s ; 0x166c9 ; "preserving permissions for %s"
0x00009017      ba05000000     mov edx, 5                              ; ../coreutils-8.31/src/py.c:-687
0x0000901c      31ff           xor edi, edi
0x0000901e      4989c4         mov r12, rax
0x00009021      e80a97ffff     call sym.imp.dcgettext
0x00009026      488985c8fcff.  mov qword [rbp - 0x338], rax
0x0000902d      e86e95ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/src/py.c:-1220
0x00009032      488b95c8fcff.  mov rdx, qword [rbp - 0x338]
0x00009039      8b30           mov esi, dword [rax]
0x0000903b      4c89e1         mov rcx, r12
0x0000903e      31ff           xor edi, edi
0x00009040      31c0           xor eax, eax
0x00009042      e8c99affff     call sym.imp.error
0x00009047      440fb64324     movzx r8d, byte [rbx + 0x24]
0x0000904c      4183f001       xor r8d, 1
0x00009050      e980fbffff     jmp 0x8bd5
0x00009055      83bdd8fcffff.  cmp dword [rbp - 0x328], 0
0x0000905c      0f894c020000   jns 0x92ae
0x00009062      440fb64b16     movzx r9d, byte [rbx + 0x16]
0x00009067      4584c9         test r9b, r9b
0x0000906a      0f8510fcffff   jne 0x8c80
0x00009070      458b0424       mov r8d, dword [r12]
0x00009074      4183f802       cmp r8d, 2
0x00009078      0f8519fdffff   jne 0x8d97
0x0000907e      807b1800       cmp byte [rbx + 0x18], 0
0x00009082      0f850ffdffff   jne 0x8d97
0x00009088      c78588fcffff.  mov dword [rbp - 0x378], 0
0x00009092      e995fcffff     jmp 0x8d2c
0x00009097      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]            ; ../coreutils-8.31/src/py.c:-388
0x0000909e      488d9510feff.  lea rdx, [rbp - 0x1f0]
0x000090a5      bf01000000     mov edi, 1
0x000090aa      e8b196ffff     call sym.imp.__lxstat
0x000090af      85c0           test eax, eax
0x000090b1      0f8473f6ffff   je 0x872a
0x000090b7      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000090be      e962d1ffff     jmp 0x6225
0x000090c3      8b95a0fdffff   mov edx, dword [rbp - 0x260]
0x000090c9      8bb59cfdffff   mov esi, dword [rbp - 0x264]
0x000090cf      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000090d6      448885d8fcff.  mov byte [rbp - 0x328], r8b
0x000090dd      e85e99ffff     call sym.imp.lchown
0x000090e2      85c0           test eax, eax
0x000090e4      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x000090ec      0f84cdcdffff   je 0x5ebf                               ; ../coreutils-8.31/src/py.c:-385
0x000090f2      4889df         mov rdi, rbx
0x000090f5      e8d6c5ffff     call sym.chown_failure_ok
0x000090fa      84c0           test al, al
0x000090fc      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00009104      0f84fa070000   je 0x9904
0x0000910a      8885e0fcffff   mov byte [rbp - 0x320], al
0x00009110      e9aacdffff     jmp 0x5ebf
0x00009115      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000911c      488d9530ffff.  lea rdx, [rbp - 0xd0]
0x00009123      bf01000000     mov edi, 1
0x00009128      448985b8fcff.  mov dword [rbp - 0x348], r8d
0x0000912f      e82c96ffff     call sym.imp.__lxstat
0x00009134      85c0           test eax, eax
0x00009136      448b85b8fcff.  mov r8d, dword [rbp - 0x348]
0x0000913d      7543           jne 0x9182
0x0000913f      8b8548ffffff   mov eax, dword [rbp - 0xb8]
0x00009145      2500f00000     and eax, 0xf000
0x0000914a      3d00a00000     cmp eax, 0xa000
0x0000914f      7531           jne 0x9182
0x00009151      440fb64330     movzx r8d, byte [rbx + 0x30]
0x00009156      4584c0         test r8b, r8b                           ; ../coreutils-8.31/src/py.c:-441
0x00009159      0f84e8070000   je 0x9947
0x0000915f      8b95d0fcffff   mov edx, dword [rbp - 0x330]
0x00009165      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x0000916c      be41000000     mov esi, 0x41                           ; 'A'
0x00009171      31c0           xor eax, eax
0x00009173      e878200000     call sym.open_safer
0x00009178      458b0424       mov r8d, dword [r12]
0x0000917c      8985d8fcffff   mov dword [rbp - 0x328], eax
0x00009182      8b85d8fcffff   mov eax, dword [rbp - 0x328]
0x00009188      c1e81f         shr eax, 0x1f
0x0000918b      4183f815       cmp r8d, 0x15
0x0000918f      0f94c2         sete dl
0x00009192      20c2           and dl, al
0x00009194      4189d1         mov r9d, edx
0x00009197      0f84f9000000   je 0x9296
0x0000919d      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000091a4      41b815000000   mov r8d, 0x15
0x000091aa      803e00         cmp byte [rsi], 0
0x000091ad      4889f7         mov rdi, rsi
0x000091b0      0f84e1fbffff   je 0x8d97
0x000091b6      31c0           xor eax, eax
0x000091b8      4883c9ff       or rcx, 0xffffffffffffffff
0x000091bc      4531c0         xor r8d, r8d
0x000091bf      f2ae           repne scasb al, byte [rdi]
0x000091c1      4889c8         mov rax, rcx
0x000091c4      48f7d0         not rax
0x000091c7      807c06fe2f     cmp byte [rsi + rax - 2], 0x2f
0x000091cc      410f95c0       setne r8b
0x000091d0      4183c014       add r8d, 0x14
0x000091d4      e9befbffff     jmp 0x8d97
0x000091d9      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x000091df      2500f00000     and eax, 0xf000
0x000091e4      3d00a00000     cmp eax, 0xa000
0x000091e9      0f850bf4ffff   jne 0x85fa
0x000091ef      4883c9ff       or rcx, 0xffffffffffffffff
0x000091f3      4489f0         mov eax, r14d
0x000091f6      4c89e7         mov rdi, r12
0x000091f9      f2ae           repne scasb al, byte [rdi]
0x000091fb      488bb540feff.  mov rsi, qword [rbp - 0x1c0]
0x00009202      48f7d1         not rcx
0x00009205      488d41ff       lea rax, [rcx - 1]
0x00009209      4839c6         cmp rsi, rax
0x0000920c      0f85e8f3ffff   jne 0x85fa
0x00009212      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00009219      e822130000     call sym.areadlink_with_size
0x0000921e      4885c0         test rax, rax
0x00009221      0f84d3f3ffff   je 0x85fa
0x00009227      4889c7         mov rdi, rax
0x0000922a      4c89e6         mov rsi, r12
0x0000922d      488985d8fcff.  mov qword [rbp - 0x328], rax
0x00009234      e8f796ffff     call sym.imp.strcmp
0x00009239      488b95d8fcff.  mov rdx, qword [rbp - 0x328]
0x00009240      85c0           test eax, eax
0x00009242      4889d7         mov rdi, rdx
0x00009245      0f85f7070000   jne 0x9a42
0x0000924b      e8309affff     call sym..plt.got
0x00009250      4c89e7         mov rdi, r12
0x00009253      e8289affff     call sym..plt.got                       ; stat.h:-1641
0x00009258      e9d3fbffff     jmp 0x8e30
0x0000925d      448b85c0fcff.  mov r8d, dword [rbp - 0x340]
0x00009264      8b8dd8fcffff   mov ecx, dword [rbp - 0x328]
0x0000926a      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00009271      8bb5e0fcffff   mov esi, dword [rbp - 0x320]            ; stat.h:-1639
0x00009277      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x0000927e      e8dd110000     call sym.copy_acl
0x00009283      85c0           test eax, eax
0x00009285      41b801000000   mov r8d, 1
0x0000928b      0f8444f9ffff   je 0x8bd5
0x00009291      e9b1fdffff     jmp 0x9047
0x00009296      83bdd8fcffff.  cmp dword [rbp - 0x328], 0
0x0000929d      41be01000000   mov r14d, 1
0x000092a3      0f893df5ffff   jns 0x87e6
0x000092a9      e9e3faffff     jmp 0x8d91
0x000092ae      0fb67325       movzx esi, byte [rbx + 0x25]
0x000092b2      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000092b9      31d2           xor edx, edx
0x000092bb      4889d9         mov rcx, rbx
0x000092be      e8edc2ffff     call sym.set_file_security_ctx
0x000092c3      84c0           test al, al
0x000092c5      4189c0         mov r8d, eax
0x000092c8      0f850ef5ffff   jne 0x87dc
0x000092ce      807b2600       cmp byte [rbx + 0x26], 0
0x000092d2      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x000092dd      0f85f2f8ffff   jne 0x8bd5
0x000092e3      e9f4f4ffff     jmp 0x87dc
0x000092e8      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x000092ee      4889ce         mov rsi, rcx
0x000092f1      e80ab9ffff     call sym.write_zeros
0x000092f6      84c0           test al, al
0x000092f8      0f8415050000   je 0x9813
0x000092fe      4531c0         xor r8d, r8d
0x00009301      e967f7ffff     jmp 0x8a6d
0x00009306      488b85c8fdff.  mov rax, qword [rbp - sym..interp]
0x0000930d      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009314      488d9560fdff.  lea rdx, [rbp - 0x2a0]
0x0000931b      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x00009321      48898560fdff.  mov qword [rbp - 0x2a0], rax
0x00009328      488b85d0fdff.  mov rax, qword [rbp - 0x230]
0x0000932f      48898568fdff.  mov qword [rbp - sym..gnu.hash], rax
0x00009336      488b85d8fdff.  mov rax, qword [rbp - 0x228]
0x0000933d      48898570fdff.  mov qword [rbp - 0x290], rax
0x00009344      488b85e0fdff.  mov rax, qword [rbp - 0x220]
0x0000934b      48898578fdff.  mov qword [rbp - 0x288], rax
0x00009352      e8396c0000     call sym.fdutimens                      ; /src:-450
0x00009357      85c0           test eax, eax
0x00009359      0f84a5fbffff   je 0x8f04
0x0000935f      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009366      bf04000000     mov edi, 4                              ; /src:-449
0x0000936b      e860530000     call sym.quotearg_style
0x00009370      488d353ad300.  lea rsi, str.preserving_times_for__s    ; 0x166b1 ; "preserving times for %s"
0x00009377      31ff           xor edi, edi
0x00009379      ba05000000     mov edx, 5
0x0000937e      4989c4         mov r12, rax
0x00009381      e8aa93ffff     call sym.imp.dcgettext
0x00009386      488985c8fcff.  mov qword [rbp - 0x338], rax
0x0000938d      e80e92ffff     call sym.imp.__errno_location
0x00009392      488b95c8fcff.  mov rdx, qword [rbp - 0x338]
0x00009399      8b30           mov esi, dword [rax]
0x0000939b      31ff           xor edi, edi
0x0000939d      31c0           xor eax, eax
0x0000939f      4c89e1         mov rcx, r12
0x000093a2      e86997ffff     call sym.imp.error
0x000093a7      807b2400       cmp byte [rbx + 0x24], 0
0x000093ab      0f8453fbffff   je 0x8f04
0x000093b1      e91cf8ffff     jmp 0x8bd2
0x000093b6      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000093bd      bf04000000     mov edi, 4
0x000093c2      e809530000     call sym.quotearg_style
0x000093c7      488d3575d200.  lea rsi, str.cannot_fstat__s            ; 0x16643 ; "cannot fstat %s"
0x000093ce      ba05000000     mov edx, 5
0x000093d3      31ff           xor edi, edi
0x000093d5      4989c4         mov r12, rax
0x000093d8      e85393ffff     call sym.imp.dcgettext
0x000093dd      488985d0fcff.  mov qword [rbp - 0x330], rax
0x000093e4      e8b791ffff     call sym.imp.__errno_location
0x000093e9      488b95d0fcff.  mov rdx, qword [rbp - 0x330]
0x000093f0      8b30           mov esi, dword [rax]
0x000093f2      4c89e1         mov rcx, r12
0x000093f5      31ff           xor edi, edi
0x000093f7      31c0           xor eax, eax
0x000093f9      e81297ffff     call sym.imp.error
0x000093fe      4531c0         xor r8d, r8d
0x00009401      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x0000940c      e9c4f7ffff     jmp 0x8bd5
0x00009411      48898d90fcff.  mov qword [rbp - 0x370], rcx
0x00009418      e953f5ffff     jmp 0x8970
0x0000941d      4531c9         xor r9d, r9d
0x00009420      837b0c03       cmp dword [rbx + 0xc], 3
0x00009424      488d8510fdff.  lea rax, [rbp - 0x2f0]
0x0000942b      48c78568fcff.  mov qword [rbp - 0x398], 0
0x00009436      488985b8fcff.  mov qword [rbp - 0x348], rax
0x0000943d      410f94c1       sete r9b
0x00009441      488d8508fdff.  lea rax, [rbp - 0x2f8]
0x00009448      4883ec08       sub rsp, 8
0x0000944c      4c8b8568fcff.  mov r8, qword [rbp - 0x398]
0x00009453      488b8d90fcff.  mov rcx, qword [rbp - 0x370]
0x0000945a      488b9550fcff.  mov rdx, qword [rbp - 0x3b0]
0x00009461      8bb5d8fcffff   mov esi, dword [rbp - 0x328]            ; /src:-497
0x00009467      8bbde0fcffff   mov edi, dword [rbp - 0x320]
0x0000946d      50             push rax
0x0000946e      ffb5b8fcffff   push qword [rbp - 0x348]
0x00009474      6aff           push 0xffffffffffffffff                 ; /src:-473
0x00009476      ffb5f8fcffff   push qword [rbp - 0x308]
0x0000947c      ffb5f0fcffff   push qword [rbp - 0x310]
0x00009482      e849bcffff     call sym.sparse_copy
0x00009487      4883c430       add rsp, 0x30
0x0000948b      84c0           test al, al
0x0000948d      0f843ff7ffff   je 0x8bd2
0x00009493      80bd08fdffff.  cmp byte [rbp - 0x2f8], 0
0x0000949a      0f845afaffff   je 0x8efa
0x000094a0      488bb510fdff.  mov rsi, qword [rbp - 0x2f0]
0x000094a7      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x000094ad      e83e93ffff     call sym.imp.ftruncate
0x000094b2      85c0           test eax, eax                           ; stdio.h:-1207
0x000094b4      0f8940faffff   jns 0x8efa
0x000094ba      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000094c1      bf04000000     mov edi, 4
0x000094c6      e805520000     call sym.quotearg_style
0x000094cb      488d35cbd100.  lea rsi, str.failed_to_extend__s        ; 0x1669d ; "failed to extend %s"
0x000094d2      4989c4         mov r12, rax
0x000094d5      ba05000000     mov edx, 5
0x000094da      31ff           xor edi, edi
0x000094dc      e84f92ffff     call sym.imp.dcgettext
0x000094e1      488985c8fcff.  mov qword [rbp - 0x338], rax
0x000094e8      e8b390ffff     call sym.imp.__errno_location
0x000094ed      488b95c8fcff.  mov rdx, qword [rbp - 0x338]
0x000094f4      8b30           mov esi, dword [rax]
0x000094f6      4c89e1         mov rcx, r12
0x000094f9      31ff           xor edi, edi
0x000094fb      31c0           xor eax, eax
0x000094fd      e80e96ffff     call sym.imp.error
0x00009502      e9cbf6ffff     jmp 0x8bd2
0x00009507      c68531fdffff.  mov byte [rbp - 0x2cf], 1
0x0000950e      488bbd38fdff.  mov rdi, qword [rbp - 0x2c8]
0x00009515      e86697ffff     call sym..plt.got
0x0000951a      80bd31fdffff.  cmp byte [rbp - 0x2cf], 0               ; /src:-438
0x00009521      48c78538fdff.  mov qword [rbp - 0x2c8], 0              ; stdio.h:-1207
0x0000952c      48c78528fdff.  mov qword [rbp - 0x2d8], 0
0x00009537      0f84e6f4ffff   je 0x8a23
0x0000953d      488b9d78fcff.  mov rbx, qword [rbp - 0x388]
0x00009544      448bada0fcff.  mov r13d, dword [rbp - 0x360]
0x0000954b      488b8d60fcff.  mov rcx, qword [rbp - 0x3a0]
0x00009552      48398d80fcff.  cmp qword [rbp - 0x380], rcx
0x00009559      410f9fc4       setg r12b
0x0000955d      7f0d           jg 0x956c
0x0000955f      80bdc8fcffff.  cmp byte [rbp - 0x338], 0
0x00009566      0f848ef9ffff   je 0x8efa
0x0000956c      83bd70fcffff.  cmp dword [rbp - 0x390], 1
0x00009573      488bb580fcff.  mov rsi, qword [rbp - 0x380]
0x0000957a      7472           je 0x95ee
0x0000957c      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x00009582      e86992ffff     call sym.imp.ftruncate
0x00009587      85c0           test eax, eax
0x00009589      0f852bffffff   jne 0x94ba
0x0000958f      83bd70fcffff.  cmp dword [rbp - 0x390], 3
0x00009596      0f855ef9ffff   jne 0x8efa
0x0000959c      4584e4         test r12b, r12b
0x0000959f      0f8455f9ffff   je 0x8efa
0x000095a5      488b9580fcff.  mov rdx, qword [rbp - 0x380]
0x000095ac      488bb560fcff.  mov rsi, qword [rbp - 0x3a0]
0x000095b3      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x000095b9      4829f2         sub rdx, rsi
0x000095bc      e8efb6ffff     call sym.punch_hole
0x000095c1      85c0           test eax, eax
0x000095c3      0f8931f9ffff   jns 0x8efa
0x000095c9      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000095d0      bf04000000     mov edi, 4
0x000095d5      e8f6500000     call sym.quotearg_style
0x000095da      ba05000000     mov edx, 5
0x000095df      4989c4         mov r12, rax
0x000095e2      488d3502cf00.  lea rsi, str.error_deallocating__s      ; 0x164eb ; "error deallocating %s"
0x000095e9      e9ecfeffff     jmp 0x94da
0x000095ee      482bb560fcff.  sub rsi, qword [rbp - 0x3a0]
0x000095f5      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x000095fb      e800b6ffff     call sym.write_zeros
0x00009600      84c0           test al, al
0x00009602      0f85f2f8ffff   jne 0x8efa
0x00009608      e9adfeffff     jmp 0x94ba
0x0000960d      488b85d0feff.  mov rax, qword [rbp - 0x130]
0x00009614      48398590fcff.  cmp qword [rbp - 0x370], rax
0x0000961b      0f8622f3ffff   jbe 0x8943
0x00009621      4883c001       add rax, 1
0x00009625      48898590fcff.  mov qword [rbp - 0x370], rax
0x0000962c      e912f3ffff     jmp 0x8943
0x00009631      80bd31fdffff.  cmp byte [rbp - 0x2cf], 0
0x00009638      488b9d78fcff.  mov rbx, qword [rbp - 0x388]
0x0000963f      448bada0fcff.  mov r13d, dword [rbp - 0x360]
0x00009646      0f85fffeffff   jne 0x954b
0x0000964c      80bd30fdffff.  cmp byte [rbp - 0x2d0], 0
0x00009653      0f8417020000   je 0x9870
0x00009659      4531c9         xor r9d, r9d
0x0000965c      837b0c03       cmp dword [rbx + 0xc], 3
0x00009660      b800000000     mov eax, 0
0x00009665      410f94c1       sete r9b
0x00009669      80bd5bfcffff.  cmp byte [rbp - 0x3a5], 0
0x00009670      480f458568fc.  cmovne rax, qword [rbp - 0x398]
0x00009678      48898568fcff.  mov qword [rbp - 0x398], rax
0x0000967f      e9bdfdffff     jmp 0x9441
0x00009684      8b95e0fcffff   mov edx, dword [rbp - 0x320]
0x0000968a      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x00009690      31c0           xor eax, eax
0x00009692      be09940440     mov esi, 0x40049409
0x00009697      e8b491ffff     call sym.imp.ioctl
0x0000969c      85c0           test eax, eax
0x0000969e      0f844bf8ffff   je 0x8eef
0x000096a4      837b3802       cmp dword [rbx + 0x38], 2
0x000096a8      0f857ef1ffff   jne 0x882c
0x000096ae      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x000096b5      be04000000     mov esi, 4
0x000096ba      bf01000000     mov edi, 1
0x000096bf      e8ec4e0000     call sym.quotearg_n_style
0x000096c4      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x000096cb      be04000000     mov esi, 4                              ; /src:-687
0x000096d0      31ff           xor edi, edi
0x000096d2      4989c4         mov r12, rax
0x000096d5      e8d64e0000     call sym.quotearg_n_style
0x000096da      488d3590cf00.  lea rsi, str.failed_to_clone__s_from__s ; 0x16671 ; "failed to clone %s from %s"
0x000096e1      ba05000000     mov edx, 5
0x000096e6      31ff           xor edi, edi
0x000096e8      488985c8fcff.  mov qword [rbp - 0x338], rax
0x000096ef      e83c90ffff     call sym.imp.dcgettext
0x000096f4      488985d0fcff.  mov qword [rbp - 0x330], rax
0x000096fb      e8a08effff     call sym.imp.__errno_location
0x00009700      488b8dc8fcff.  mov rcx, qword [rbp - 0x338]
0x00009707      8b30           mov esi, dword [rax]                    ; /src:-344
0x00009709      4d89e0         mov r8, r12
0x0000970c      488b95d0fcff.  mov rdx, qword [rbp - 0x330]
0x00009713      31ff           xor edi, edi
0x00009715      31c0           xor eax, eax
0x00009717      e8f493ffff     call sym.imp.error
0x0000971c      4531c0         xor r8d, r8d
0x0000971f      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x0000972a      e9a6f4ffff     jmp 0x8bd5
0x0000972f      8b430c         mov eax, dword [rbx + 0xc]
0x00009732      83f803         cmp eax, 3
0x00009735      0f8483000000   je 0x97be
0x0000973b      83f802         cmp eax, 2
0x0000973e      0f8590f1ffff   jne 0x88d4
0x00009744      f685b8fcffff.  test byte [rbp - 0x348], 1
0x0000974b      0f8483f1ffff   je 0x88d4
0x00009751      488b8590fcff.  mov rax, qword [rbp - 0x370]
0x00009758      498d3c04       lea rdi, [r12 + rax]
0x0000975c      e85f750000     call sym.xmalloc
0x00009761      4a8d4c20ff     lea rcx, [rax + r12 - 1]
0x00009766      488985d0fcff.  mov qword [rbp - 0x330], rax
0x0000976d      31d2           xor edx, edx
0x0000976f      4889c8         mov rax, rcx
0x00009772      49f7f4         div r12
0x00009775      4829d1         sub rcx, rdx
0x00009778      48898d50fcff.  mov qword [rbp - 0x3b0], rcx
0x0000977f      8b430c         mov eax, dword [rbx + 0xc]
0x00009782      898570fcffff   mov dword [rbp - 0x390], eax
0x00009788      0fb685c8fcff.  movzx eax, byte [rbp - 0x338]
0x0000978f      88855bfcffff   mov byte [rbp - 0x3a5], al
0x00009795      e922f2ffff     jmp 0x89bc                              ; /src:1265
0x0000979a      488b85d0feff.  mov rax, qword [rbp - 0x130]
0x000097a1      4899           cqo
0x000097a3      49f7f8         idiv r8
0x000097a6      483985e0feff.  cmp qword [rbp - 0x120], rax
0x000097ad      0f9cc0         setl al
0x000097b0      0fb6c0         movzx eax, al
0x000097b3      8985b8fcffff   mov dword [rbp - 0x348], eax
0x000097b9      e900f1ffff     jmp 0x88be
0x000097be      488b8590fcff.  mov rax, qword [rbp - 0x370]
0x000097c5      498d3c04       lea rdi, [r12 + rax]
0x000097c9      e8f2740000     call sym.xmalloc
0x000097ce      4a8d4c20ff     lea rcx, [rax + r12 - 1]
0x000097d3      31d2           xor edx, edx
0x000097d5      488985d0fcff.  mov qword [rbp - 0x330], rax
0x000097dc      4889c8         mov rax, rcx
0x000097df      49f7f4         div r12
0x000097e2      4829d1         sub rcx, rdx
0x000097e5      83bdb8fcffff.  cmp dword [rbp - 0x348], 0
0x000097ec      48898d50fcff.  mov qword [rbp - 0x3b0], rcx
0x000097f3      758a           jne 0x977f
0x000097f5      4531c9         xor r9d, r9d
0x000097f8      837b0c03       cmp dword [rbx + 0xc], 3
0x000097fc      488d8510fdff.  lea rax, [rbp - 0x2f0]
0x00009803      488985b8fcff.  mov qword [rbp - 0x348], rax
0x0000980a      410f94c1       sete r9b
0x0000980e      e92efcffff     jmp 0x9441
0x00009813      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x0000981a      be03000000     mov esi, 3
0x0000981f      31ff           xor edi, edi
0x00009821      488b9d78fcff.  mov rbx, qword [rbp - 0x388]
0x00009828      448bada0fcff.  mov r13d, dword [rbp - 0x360]
0x0000982f      e89c4f0000     call sym.quotearg_n_style_colon
0x00009834      488d3551ce00.  lea rsi, str.s:_write_failed            ; 0x1668c ; "%s: write failed"
0x0000983b      4989c4         mov r12, rax
0x0000983e      ba05000000     mov edx, 5
0x00009843      31ff           xor edi, edi
0x00009845      e8e68effff     call sym.imp.dcgettext
0x0000984a      488985c8fcff.  mov qword [rbp - 0x338], rax
0x00009851      e84a8dffff     call sym.imp.__errno_location
0x00009856      488b95c8fcff.  mov rdx, qword [rbp - 0x338]
0x0000985d      8b30           mov esi, dword [rax]
0x0000985f      4c89e1         mov rcx, r12
0x00009862      31ff           xor edi, edi
0x00009864      31c0           xor eax, eax
0x00009866      e8a592ffff     call sym.imp.error
0x0000986b      e956f3ffff     jmp 0x8bc6
0x00009870      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x00009877      be03000000     mov esi, 3
0x0000987c      31ff           xor edi, edi
0x0000987e      e84d4f0000     call sym.quotearg_n_style_colon         ; /src:1244
0x00009883      ba05000000     mov edx, 5
0x00009888      4989c4         mov r12, rax
0x0000988b      488d358eca00.  lea rsi, str.s:_failed_to_get_extents_info ; 0x16320 ; "%s: failed to get extents info"
0x00009892      e943fcffff     jmp 0x94da
0x00009897      e874c0ffff     call sym.cached_umask
0x0000989c      8bb5d8fcffff   mov esi, dword [rbp - 0x328]
0x000098a2      f7d0           not eax
0x000098a4      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000098ab      89c2           mov edx, eax
0x000098ad      4589e6         mov r14d, r12d
0x000098b0      81e2b6010000   and edx, 0x1b6
0x000098b6      e8350c0000     call sym.set_acl
0x000098bb      85c0           test eax, eax
0x000098bd      410f94c0       sete r8b
0x000098c1      e90ff3ffff     jmp 0x8bd5
0x000098c6      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000098cd      bf04000000     mov edi, 4
0x000098d2      e8f94d0000     call sym.quotearg_style
0x000098d7      488d35d9c100.  lea rsi, str.cannot_remove__s           ; 0x15ab7 ; "cannot remove %s"
0x000098de      ba05000000     mov edx, 5
0x000098e3      31ff           xor edi, edi
0x000098e5      488985d8fcff.  mov qword [rbp - 0x328], rax
0x000098ec      e83f8effff     call sym.imp.dcgettext
0x000098f1      488b8dd8fcff.  mov rcx, qword [rbp - 0x328]
0x000098f8      4889c2         mov rdx, rax
0x000098fb      418b3424       mov esi, dword [r12]
0x000098ff      e97de1ffff     jmp 0x7a81
0x00009904      488d357dc600.  lea rsi, str.failed_to_preserve_ownership_for__s ; 0x15f88 ; "failed to preserve ownership for %s"
0x0000990b      31ff           xor edi, edi
0x0000990d      ba05000000     mov edx, 5
0x00009912      e8198effff     call sym.imp.dcgettext
0x00009917      4989c4         mov r12, rax
0x0000991a      e8818cffff     call sym.imp.__errno_location
0x0000991f      488b8df8fcff.  mov rcx, qword [rbp - 0x308]
0x00009926      8b30           mov esi, dword [rax]
0x00009928      31ff           xor edi, edi
0x0000992a      31c0           xor eax, eax
0x0000992c      4c89e2         mov rdx, r12
0x0000992f      e8dc91ffff     call sym.imp.error
0x00009934      440fb64324     movzx r8d, byte [rbx + 0x24]
0x00009939      4584c0         test r8b, r8b
0x0000993c      0f858ecfffff   jne 0x68d0
0x00009942      e978c5ffff     jmp 0x5ebf
0x00009947      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000994e      bf04000000     mov edi, 4
0x00009953      448885d8fcff.  mov byte [rbp - 0x328], r8b
0x0000995a      e8714d0000     call sym.quotearg_style
0x0000995f      488d3592c900.  lea rsi, str.not_writing_through_dangling_symlink__s ; 0x162f8 ; "not writing through dangling symlink %s"
0x00009966      4989c4         mov r12, rax
0x00009969      ba05000000     mov edx, 5
0x0000996e      31ff           xor edi, edi
0x00009970      e8bb8dffff     call sym.imp.dcgettext
0x00009975      4c89e1         mov rcx, r12
0x00009978      4889c2         mov rdx, rax
0x0000997b      31f6           xor esi, esi
0x0000997d      31ff           xor edi, edi
0x0000997f      31c0           xor eax, eax
0x00009981      e88a91ffff     call sym.imp.error
0x00009986      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x00009991      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00009999      e9fae0ffff     jmp 0x7a98
0x0000999e      e89d8effff     call sym.imp.geteuid
0x000099a3      85c0           test eax, eax
0x000099a5      0f84ccf5ffff   je 0x8f77
0x000099ab      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000099b2      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x000099b8      ba80010000     mov edx, 0x180
0x000099bd      e8ce92ffff     call sym.fchmod_or_lchmod
0x000099c2      85c0           test eax, eax
0x000099c4      0f85adf5ffff   jne 0x8f77
0x000099ca      8b9588fcffff   mov edx, dword [rbp - 0x378]
0x000099d0      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000099d7      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x000099dd      f7d2           not edx
0x000099df      23955cfcffff   and edx, dword [rbp - 0x3a4]
0x000099e5      e8a692ffff     call sym.fchmod_or_lchmod
0x000099ea      e988f5ffff     jmp 0x8f77
0x000099ef      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x000099f6      bf04000000     mov edi, 4
0x000099fb      488b9d78fcff.  mov rbx, qword [rbp - 0x388]
0x00009a02      448bada0fcff.  mov r13d, dword [rbp - 0x360]
0x00009a09      e8c24c0000     call sym.quotearg_style
0x00009a0e      ba05000000     mov edx, 5
0x00009a13      4989c4         mov r12, rax
0x00009a16      488d35beca00.  lea rsi, str.cannot_lseek__s            ; 0x164db ; "cannot lseek %s"
0x00009a1d      e921feffff     jmp 0x9843
0x00009a22      8b5310         mov edx, dword [rbx + 0x10]
0x00009a25      8bb5d8fcffff   mov esi, dword [rbp - 0x328]
0x00009a2b      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00009a32      e8b90a0000     call sym.set_acl
0x00009a37      85c0           test eax, eax
0x00009a39      410f94c0       sete r8b
0x00009a3d      e993f1ffff     jmp 0x8bd5
0x00009a42      e83992ffff     call sym..plt.got
0x00009a47      e9aeebffff     jmp 0x85fa
0x00009a4c      0f1f4000       nop dword [rax]
;-- copy:
0x00009a50      4883ec18       sub rsp, 0x18
0x00009a54      64488b042528.  mov rax, qword fs:[0x28]
0x00009a5d      4889442408     mov qword [rsp + 8], rax
0x00009a62      31c0           xor eax, eax
0x00009a64      4885c9         test rcx, rcx
0x00009a67      0f8429010000   je 0x9b96
0x00009a6d      833903         cmp dword [rcx], 3
0x00009a70      0f8701010000   ja 0x9b77
0x00009a76      8b410c         mov eax, dword [rcx + 0xc]
0x00009a79      448d50ff       lea r10d, [rax - 1]
0x00009a7d      4183fa02       cmp r10d, 2
0x00009a81      0f87d1000000   ja 0x9b58
0x00009a87      448b5138       mov r10d, dword [rcx + 0x38]
0x00009a8b      4183fa02       cmp r10d, 2
0x00009a8f      0f87a4000000   ja 0x9b39
0x00009a95      80791700       cmp byte [rcx + 0x17], 0
0x00009a99      7555           jne 0x9af0
0x00009a9b      83f802         cmp eax, 2
0x00009a9e      7406           je 0x9aa6
0x00009aa0      4183fa02       cmp r10d, 2
0x00009aa4      746f           je 0x9b15
0x00009aa6      c644240700     mov byte [rsp + 7], 0
0x00009aab      4151           push r9
0x00009aad      0fb6d2         movzx edx, dl
0x00009ab0      4150           push r8
0x00009ab2      4989c9         mov r9, rcx
0x00009ab5      4531c0         xor r8d, r8d
0x00009ab8      31c9           xor ecx, ecx
0x00009aba      488935872a21.  mov qword [obj.top_level_dst_name], rsi ; [0x21c548:8]=0
0x00009ac1      48893d882a21.  mov qword [obj.top_level_src_name], rdi ; [0x21c550:8]=0
0x00009ac8      488d442417     lea rax, [rsp + 0x17]
0x00009acd      50             push rax
0x00009ace      6a01           push 1
0x00009ad0      e86bbeffff     call sym.copy_internal
0x00009ad5      4883c420       add rsp, 0x20
0x00009ad9      488b742408     mov rsi, qword [rsp + 8]
0x00009ade      644833342528.  xor rsi, qword fs:[0x28]
0x00009ae7      754b           jne 0x9b34
0x00009ae9      4883c418       add rsp, 0x18
0x00009aed      c3             ret
0x00009aee      6690           nop
0x00009af0      80792c00       cmp byte [rcx + 0x2c], 0
0x00009af4      74a5           je 0x9a9b
0x00009af6      488d0dbbcc00.  lea rcx, obj.__PRETTY_FUNCTION__.7875   ; 0x167b8 ; "valid_options"
0x00009afd      488d3589cc00.  lea rsi, str..._coreutils_8.31_src_copy.c ; 0x1678d ; "../coreutils-8.31/src/copy.c"
0x00009b04      488d3d35c900.  lea rdi, str.co__hard_link____co__symbolic_link ; 0x16440 ; "!(co->hard_link && co->symbolic_link)"
0x00009b0b      ba8a0b0000     mov edx, 0xb8a
0x00009b10      e80b8dffff     call sym.imp.__assert_fail
0x00009b15      488d0d9ccc00.  lea rcx, obj.__PRETTY_FUNCTION__.7875   ; 0x167b8 ; "valid_options"
0x00009b1c      488d356acc00.  lea rsi, str..._coreutils_8.31_src_copy.c ; 0x1678d ; "../coreutils-8.31/src/copy.c"
0x00009b23      488d3d3ec900.  lea rdi, str.co__reflink_mode____REFLINK_ALWAYS____co__sparse_mode____SPARSE_AUTO ; 0x16468 ; "! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)"
0x00009b2a      ba8d0b0000     mov edx, 0xb8d
0x00009b2f      e8ec8cffff     call sym.imp.__assert_fail
0x00009b34      e8478cffff     call sym.imp.__stack_chk_fail
0x00009b39      488d0d78cc00.  lea rcx, obj.__PRETTY_FUNCTION__.7875   ; 0x167b8 ; "valid_options"
0x00009b40      488d3546cc00.  lea rsi, str..._coreutils_8.31_src_copy.c ; 0x1678d ; "../coreutils-8.31/src/copy.c"
0x00009b47      488d3dcac800.  lea rdi, str.VALID_REFLINK_MODE__co__reflink_mode ; 0x16418 ; "VALID_REFLINK_MODE (co->reflink_mode)"
0x00009b4e      ba890b0000     mov edx, 0xb89
0x00009b53      e8c88cffff     call sym.imp.__assert_fail
0x00009b58      488d0d59cc00.  lea rcx, obj.__PRETTY_FUNCTION__.7875   ; 0x167b8 ; "valid_options"
0x00009b5f      488d3527cc00.  lea rsi, str..._coreutils_8.31_src_copy.c ; 0x1678d ; "../coreutils-8.31/src/copy.c"
0x00009b66      488d3d83c800.  lea rdi, str.VALID_SPARSE_MODE__co__sparse_mode ; 0x163f0 ; "VALID_SPARSE_MODE (co->sparse_mode)"
0x00009b6d      ba880b0000     mov edx, 0xb88
0x00009b72      e8a98cffff     call sym.imp.__assert_fail
0x00009b77      488d0d3acc00.  lea rcx, obj.__PRETTY_FUNCTION__.7875   ; 0x167b8 ; "valid_options"
0x00009b7e      488d3508cc00.  lea rsi, str..._coreutils_8.31_src_copy.c ; 0x1678d ; "../coreutils-8.31/src/copy.c"
0x00009b85      488d3d3cc800.  lea rdi, str.VALID_BACKUP_TYPE__co__backup_type ; 0x163c8 ; "VALID_BACKUP_TYPE (co->backup_type)"
0x00009b8c      ba870b0000     mov edx, 0xb87
0x00009b91      e88a8cffff     call sym.imp.__assert_fail
0x00009b96      488d0d1bcc00.  lea rcx, obj.__PRETTY_FUNCTION__.7875   ; 0x167b8 ; "valid_options"
0x00009b9d      488d35e9cb00.  lea rsi, str..._coreutils_8.31_src_copy.c ; 0x1678d ; "../coreutils-8.31/src/copy.c"
0x00009ba4      488d3dffcb00.  lea rdi, str.co____NULL                 ; 0x167aa ; "co != NULL"
0x00009bab      ba860b0000     mov edx, 0xb86
0x00009bb0      e86b8cffff     call sym.imp.__assert_fail
0x00009bb5      662e0f1f8400.  nop word cs:[rax + rax]
0x00009bbf      90             nop
;-- src_to_dest_hash:
0x00009bc0      488b07         mov rax, qword [rdi]                    ; /src:52
0x00009bc3      31d2           xor edx, edx
0x00009bc5      48f7f6         div rsi
0x00009bc8      4889d0         mov rax, rdx                            ; /src:59
0x00009bcb      c3             ret
0x00009bcc      0f1f4000       nop dword [rax]
;-- src_to_dest_compare:
0x00009bd0      31c0           xor eax, eax                            ; /src:65
0x00009bd2      488b16         mov rdx, qword [rsi]                    ; /src:68
0x00009bd5      483917         cmp qword [rdi], rdx
0x00009bd8      7406           je 0x9be0
0x00009bda      f3c3           ret                                     ; /src:69
0x00009bdc      0f1f4000       nop dword [rax]
0x00009be0      488b4608       mov rax, qword [rsi + 8]                ; /src:68
0x00009be4      48394708       cmp qword [rdi + 8], rax
0x00009be8      0f94c0         sete al
0x00009beb      c3             ret                                     ; /src:69
0x00009bec      0f1f4000       nop dword [rax]
;-- src_to_dest_free:
0x00009bf0      53             push rbx                                ; /src:73
0x00009bf1      4889fb         mov rbx, rdi
0x00009bf4      488b7f10       mov rdi, qword [rdi + 0x10]             ; /src:75
0x00009bf8      e88390ffff     call sym..plt.got
0x00009bfd      4889df         mov rdi, rbx                            ; /src:76
0x00009c00      5b             pop rbx                                 ; /src:77
0x00009c01      e97a90ffff     jmp sym..plt.got                        ; /src:76
0x00009c06      662e0f1f8400.  nop word cs:[rax + rax]
;-- forget_created:
0x00009c10      53             push rbx                                ; /src:83
0x00009c11      4883ec20       sub rsp, 0x20
0x00009c15      48893c24       mov qword [rsp], rdi                    ; /src:87
0x00009c19      488b3d382921.  mov rdi, qword [obj.src_to_dest]        ; /src:91 ; [0x21c558:8]=0
0x00009c20      4889742408     mov qword [rsp + 8], rsi                ; /src:88
0x00009c25      4889e6         mov rsi, rsp                            ; /src:91
0x00009c28      48c744241000.  mov qword [rsp + 0x10], 0               ; /src:89
0x00009c31      64488b042528.  mov rax, qword fs:[0x28]                ; /src:83
0x00009c3a      4889442418     mov qword [rsp + 0x18], rax
0x00009c3f      31c0           xor eax, eax
0x00009c41      e80a2c0000     call sym.hash_delete                    ; /src:91
0x00009c46      4885c0         test rax, rax                           ; /src:92
0x00009c49      7414           je 0x9c5f
0x00009c4b      488b7810       mov rdi, qword [rax + 0x10]             ; /src:75
0x00009c4f      4889c3         mov rbx, rax
0x00009c52      e82990ffff     call sym..plt.got
0x00009c57      4889df         mov rdi, rbx                            ; /src:76
0x00009c5a      e82190ffff     call sym..plt.got
0x00009c5f      488b442418     mov rax, qword [rsp + 0x18]             ; /src:94
0x00009c64      644833042528.  xor rax, qword fs:[0x28]
0x00009c6d      7506           jne 0x9c75
0x00009c6f      4883c420       add rsp, 0x20
0x00009c73      5b             pop rbx
0x00009c74      c3             ret
0x00009c75      e8068bffff     call sym.imp.__stack_chk_fail
0x00009c7a      660f1f440000   nop word [rax + rax]
;-- src_to_dest_lookup:
0x00009c80      4883ec28       sub rsp, 0x28                           ; /src:101
0x00009c84      48893c24       mov qword [rsp], rdi                    ; /src:104
0x00009c88      488b3dc92821.  mov rdi, qword [obj.src_to_dest]        ; /src:106 ; [0x21c558:8]=0
0x00009c8f      4889742408     mov qword [rsp + 8], rsi                ; /src:105
0x00009c94      4889e6         mov rsi, rsp                            ; /src:106
0x00009c97      64488b042528.  mov rax, qword fs:[0x28]                ; /src:101
0x00009ca0      4889442418     mov qword [rsp + 0x18], rax
0x00009ca5      31c0           xor eax, eax
0x00009ca7      e8d4200000     call sym.hash_lookup                    ; /src:106
0x00009cac      4885c0         test rax, rax                           ; /src:107
0x00009caf      741f           je 0x9cd0
0x00009cb1      488b4010       mov rax, qword [rax + 0x10]
0x00009cb5      488b542418     mov rdx, qword [rsp + 0x18]             ; /src:108
0x00009cba      644833142528.  xor rdx, qword fs:[0x28]
0x00009cc3      750f           jne 0x9cd4
0x00009cc5      4883c428       add rsp, 0x28
0x00009cc9      c3             ret
0x00009cca      660f1f440000   nop word [rax + rax]
0x00009cd0      31c0           xor eax, eax                            ; /src:107
0x00009cd2      ebe1           jmp 0x9cb5
0x00009cd4      e8a78affff     call sym.imp.__stack_chk_fail           ; /src:108
0x00009cd9      0f1f80000000.  nop dword [rax]
;-- remember_copied:
0x00009ce0      4155           push r13                                ; /src:116
0x00009ce2      4154           push r12
0x00009ce4      4989fd         mov r13, rdi
0x00009ce7      55             push rbp
0x00009ce8      53             push rbx
0x00009ce9      bf18000000     mov edi, 0x18                           ; /src:120
0x00009cee      4989f4         mov r12, rsi                            ; /src:116
0x00009cf1      4889d5         mov rbp, rdx
0x00009cf4      4883ec08       sub rsp, 8
0x00009cf8      e8c36f0000     call sym.xmalloc                        ; /src:120
0x00009cfd      4c89ef         mov rdi, r13                            ; /src:121
0x00009d00      4889c3         mov rbx, rax                            ; /src:120
0x00009d03      e8e8710000     call sym.xstrdup                        ; /src:121
0x00009d08      488b3d492821.  mov rdi, qword [obj.src_to_dest]        ; /src:125 ; [0x21c558:8]=0
0x00009d0f      4889de         mov rsi, rbx
0x00009d12      48894310       mov qword [rbx + 0x10], rax             ; /src:121
0x00009d16      4c8923         mov qword [rbx], r12                    ; /src:122
0x00009d19      48896b08       mov qword [rbx + 8], rbp                ; /src:123
0x00009d1d      e8ce2a0000     call sym.hash_insert                    ; /src:125
0x00009d22      4885c0         test rax, rax                           ; /src:126
0x00009d25      742d           je 0x9d54
0x00009d27      4839c3         cmp rbx, rax                            ; /src:135
0x00009d2a      4889c5         mov rbp, rax
0x00009d2d      7421           je 0x9d50
0x00009d2f      488b7b10       mov rdi, qword [rbx + 0x10]             ; /src:75
0x00009d33      e8488fffff     call sym..plt.got
0x00009d38      4889df         mov rdi, rbx                            ; /src:76
0x00009d3b      e8408fffff     call sym..plt.got
0x00009d40      488b4510       mov rax, qword [rbp + 0x10]             ; /src:138
0x00009d44      4883c408       add rsp, 8                              ; /src:143
0x00009d48      5b             pop rbx
0x00009d49      5d             pop rbp
0x00009d4a      415c           pop r12
0x00009d4c      415d           pop r13
0x00009d4e      c3             ret
0x00009d4f      90             nop
0x00009d50      31c0           xor eax, eax                            ; /src:142
0x00009d52      ebf0           jmp 0x9d44
0x00009d54      e8b7710000     call sym.xalloc_die                     ; /src:129
0x00009d59      0f1f80000000.  nop dword [rax]
;-- hash_init:
0x00009d60      4c8d0589feff.  lea r8, sym.src_to_dest_free            ; /src:148 ; 0x9bf0 ; "SH\x89\xfbH\x8b\x7f\x10\u80d0\xff\xffH\x89\xdf[\xe9z\x90\xff\xfff.\x0f\x1f\x84"
0x00009d67      488d0d62feff.  lea rcx, sym.src_to_dest_compare        ; 0x9bd0 ; "1\xc0H\x8b\x16H9\x17t\x06\xf3\xc3\x0f\x1f@"
0x00009d6e      488d154bfeff.  lea rdx, sym.src_to_dest_hash           ; 0x9bc0 ; "H\x8b\a1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f@"
0x00009d75      4883ec08       sub rsp, 8
0x00009d79      31f6           xor esi, esi                            ; /src:149
0x00009d7b      bf67000000     mov edi, 0x67                           ; 'g'
0x00009d80      e86b220000     call sym.hash_initialize
0x00009d85      4885c0         test rax, rax                           ; /src:153
0x00009d88      488905c92721.  mov qword [obj.src_to_dest], rax        ; /src:149 ; [0x21c558:8]=0
0x00009d8f      7405           je 0x9d96                               ; /src:153
0x00009d91      4883c408       add rsp, 8                              ; /src:155
0x00009d95      c3             ret
0x00009d96      e875710000     call sym.xalloc_die                     ; /src:154
0x00009d9b      0f1f440000     nop dword [rax + rax]
;-- forget_all:
0x00009da0      488b3db12721.  mov rdi, qword [obj.src_to_dest]        ; /src:162 ; [0x21c558:8]=0
0x00009da7      e994240000     jmp sym.hash_free
0x00009dac      0f1f4000       nop dword [rax]                         ; /src:163
;-- extent_scan_init:
0x00009db0      893e           mov dword [rsi], edi
0x00009db2      48c746180000.  mov qword [rsi + 0x18], 0
0x00009dba      48c746280000.  mov qword [rsi + 0x28], 0
0x00009dc2      48c746080000.  mov qword [rsi + 8], 0
0x00009dca      c6462000       mov byte [rsi + 0x20], 0
0x00009dce      c6462100       mov byte [rsi + 0x21], 0
0x00009dd2      c74610010000.  mov dword [rsi + 0x10], 1
0x00009dd9      c3             ret
0x00009dda      660f1f440000   nop word [rax + rax]
;-- extent_scan_read:
0x00009de0      4157           push r15
0x00009de2      4156           push r14
0x00009de4      4531ff         xor r15d, r15d
0x00009de7      4155           push r13
0x00009de9      4154           push r12
0x00009deb      4989fe         mov r14, rdi
0x00009dee      55             push rbp
0x00009def      53             push rbx
0x00009df0      49bdffffffff.  movabs r13, 0x7fffffffffffffff          ; 9223372036854775807
0x00009dfa      4881ec181000.  sub rsp, 0x1018
0x00009e01      488b5f28       mov rbx, qword [rdi + 0x28]
0x00009e05      488b5708       mov rdx, qword [rdi + 8]
0x00009e09      4889e5         mov rbp, rsp
0x00009e0c      64488b042528.  mov rax, qword fs:[0x28]
0x00009e15      488984240810.  mov qword [rsp + 0x1008], rax
0x00009e1d      31c0           xor eax, eax
0x00009e1f      4c8d6520       lea r12, [rbp + 0x20]
0x00009e23      31c0           xor eax, eax
0x00009e25      b900020000     mov ecx, 0x200
0x00009e2a      4889ef         mov rdi, rbp
0x00009e2d      f348ab         rep stosq qword [rdi], rax
0x00009e30      418b4610       mov eax, dword [r14 + 0x10]
0x00009e34      418b3e         mov edi, dword [r14]
0x00009e37      be0b6620c0     mov esi, 0xc020660b
0x00009e3c      48891424       mov qword [rsp], rdx
0x00009e40      48f7d2         not rdx
0x00009e43      c74424184800.  mov dword [rsp + 0x18], 0x48            ; 'H'
                                                                       ; [0x48:4]=64
0x00009e4b      4889542408     mov qword [rsp + 8], rdx
0x00009e50      4889ea         mov rdx, rbp
0x00009e53      89442410       mov dword [rsp + 0x10], eax
0x00009e57      31c0           xor eax, eax
0x00009e59      e8f289ffff     call sym.imp.ioctl
0x00009e5e      85c0           test eax, eax
0x00009e60      0f88ca000000   js 0x9f30
0x00009e66      8b442414       mov eax, dword [rsp + 0x14]
0x00009e6a      85c0           test eax, eax
0x00009e6c      0f8436020000   je 0xa0a8
0x00009e72      498b4e18       mov rcx, qword [r14 + 0x18]
0x00009e76      4889c2         mov rdx, rax
0x00009e79      48f7d2         not rdx
0x00009e7c      4839d1         cmp rcx, rdx
0x00009e7f      0f8735020000   ja 0xa0ba
0x00009e85      498b7e28       mov rdi, qword [r14 + 0x28]
0x00009e89      ba18000000     mov edx, 0x18
0x00009e8e      4801c1         add rcx, rax
0x00009e91      4889d0         mov rax, rdx
0x00009e94      31f6           xor esi, esi
0x00009e96      49894e18       mov qword [r14 + 0x18], rcx
0x00009e9a      4829fb         sub rbx, rdi
0x00009e9d      48f7e1         mul rcx
0x00009ea0      0f8033020000   jo 0xa0d9
0x00009ea6      4885c0         test rax, rax
0x00009ea9      0f8834020000   js 0xa0e3
0x00009eaf      4885f6         test rsi, rsi
0x00009eb2      0f852b020000   jne 0xa0e3
0x00009eb8      488d3449       lea rsi, [rcx + rcx*2]
0x00009ebc      48c1e603       shl rsi, 3
0x00009ec0      e85b6e0000     call sym.xrealloc
0x00009ec5      448b442414     mov r8d, dword [rsp + 0x14]
0x00009eca      4801c3         add rbx, rax
0x00009ecd      49894628       mov qword [r14 + 0x28], rax
0x00009ed1      4585c0         test r8d, r8d
0x00009ed4      0f8436010000   je 0xa010
0x00009eda      488b442430     mov rax, qword [rsp + 0x30]
0x00009edf      488b542420     mov rdx, qword [rsp + 0x20]
0x00009ee4      4c89e9         mov rcx, r13
0x00009ee7      4829c1         sub rcx, rax
0x00009eea      4839ca         cmp rdx, rcx
0x00009eed      0f87d7000000   ja 0x9fca
0x00009ef3      31c9           xor ecx, ecx
0x00009ef5      4c89e6         mov rsi, r12
0x00009ef8      4585ff         test r15d, r15d
0x00009efb      7473           je 0x9f70
0x00009efd      448b4e28       mov r9d, dword [rsi + 0x28]
0x00009f01      4c8b5308       mov r10, qword [rbx + 8]
0x00009f05      488b3b         mov rdi, qword [rbx]
0x00009f08      4589cb         mov r11d, r9d
0x00009f0b      4c01d7         add rdi, r10
0x00009f0e      4183e3fe       and r11d, 0xfffffffe                    ; 4294967294
0x00009f12      44395b10       cmp dword [rbx + 0x10], r11d
0x00009f16      0f84d4000000   je 0x9ff0
0x00009f1c      4839d7         cmp rdi, rdx
0x00009f1f      765c           jbe 0x9f7d
0x00009f21      4989fa         mov r10, rdi
0x00009f24      4929d2         sub r10, rdx
0x00009f27      4939c2         cmp r10, rax
0x00009f2a      0f8318010000   jae 0xa048
0x00009f30      31c0           xor eax, eax
0x00009f32      49837e0800     cmp qword [r14 + 8], 0
0x00009f37      7507           jne 0x9f40
0x00009f39      41c6462001     mov byte [r14 + 0x20], 1
0x00009f3e      31c0           xor eax, eax
0x00009f40      488b9c240810.  mov rbx, qword [rsp + 0x1008]
0x00009f48      6448331c2528.  xor rbx, qword fs:[0x28]
0x00009f51      0f8591010000   jne 0xa0e8
0x00009f57      4881c4181000.  add rsp, 0x1018
0x00009f5e      5b             pop rbx
0x00009f5f      5d             pop rbp
0x00009f60      415c           pop r12
0x00009f62      415d           pop r13
0x00009f64      415e           pop r14
0x00009f66      415f           pop r15
0x00009f68      c3             ret
0x00009f69      0f1f80000000.  nop dword [rax]
0x00009f70      498b7e08       mov rdi, qword [r14 + 8]
0x00009f74      4839d7         cmp rdi, rdx
0x00009f77      77a8           ja 0x9f21
0x00009f79      448b4e28       mov r9d, dword [rsi + 0x28]
0x00009f7d      4489fe         mov esi, r15d
0x00009f80      4183c701       add r15d, 1
0x00009f84      488d3c76       lea rdi, [rsi + rsi*2]
0x00009f88      498b7628       mov rsi, qword [r14 + 0x28]
0x00009f8c      488d1cfe       lea rbx, [rsi + rdi*8]
0x00009f90      488913         mov qword [rbx], rdx
0x00009f93      48894308       mov qword [rbx + 8], rax
0x00009f97      44894b10       mov dword [rbx + 0x10], r9d
0x00009f9b      83c101         add ecx, 1
0x00009f9e      4439c1         cmp ecx, r8d
0x00009fa1      736d           jae 0xa010
0x00009fa3      89ca           mov edx, ecx
0x00009fa5      4c89ef         mov rdi, r13
0x00009fa8      488d04d50000.  lea rax, [rdx*8]
0x00009fb0      4829d0         sub rax, rdx
0x00009fb3      498d34c4       lea rsi, [r12 + rax*8]
0x00009fb7      488b4610       mov rax, qword [rsi + 0x10]
0x00009fbb      488b16         mov rdx, qword [rsi]
0x00009fbe      4829c7         sub rdi, rax
0x00009fc1      4839fa         cmp rdx, rdi
0x00009fc4      0f862effffff   jbe 0x9ef8
0x00009fca      488d0d9fc800.  lea rcx, obj.__PRETTY_FUNCTION__.6956   ; 0x16870 ; "extent_scan_read"
0x00009fd1      488d35f0c700.  lea rsi, str..._coreutils_8.31_src_extent_scan.c ; 0x167c8 ; "../coreutils-8.31/src/extent-scan.c"
0x00009fd8      488d3d49c800.  lea rdi, str.fm_extents_i_.fe_logical____OFF_T_MAX___fm_extents_i_.fe_length ; 0x16828 ; "fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length"
0x00009fdf      ba8d000000     mov edx, 0x8d
0x00009fe4      e83788ffff     call sym.imp.__assert_fail
0x00009fe9      0f1f80000000.  nop dword [rax]
0x00009ff0      4839d7         cmp rdi, rdx
0x00009ff3      0f8523ffffff   jne 0x9f1c
0x00009ff9      83c101         add ecx, 1
0x00009ffc      4c01d0         add rax, r10
0x00009fff      44894b10       mov dword [rbx + 0x10], r9d
0x0000a003      4439c1         cmp ecx, r8d
0x0000a006      48894308       mov qword [rbx + 8], rax
0x0000a00a      7297           jb 0x9fa3
0x0000a00c      0f1f4000       nop dword [rax]
0x0000a010      f6431001       test byte [rbx + 0x10], 1
0x0000a014      754a           jne 0xa060
0x0000a016      4183ff48       cmp r15d, 0x48
0x0000a01a      410fb64621     movzx eax, byte [r14 + 0x21]
0x0000a01f      765f           jbe 0xa080
0x0000a021      84c0           test al, al
0x0000a023      7540           jne 0xa065
0x0000a025      418d47ff       lea eax, [r15 - 1]
0x0000a029      498b5628       mov rdx, qword [r14 + 0x28]
0x0000a02d      488d0c40       lea rcx, [rax + rax*2]
0x0000a031      49894618       mov qword [r14 + 0x18], rax
0x0000a035      488b44cae8     mov rax, qword [rdx + rcx*8 - 0x18]
0x0000a03a      480344caf0     add rax, qword [rdx + rcx*8 - 0x10]
0x0000a03f      49894608       mov qword [r14 + 8], rax
0x0000a043      eb27           jmp 0xa06c
0x0000a045      0f1f00         nop dword [rax]
0x0000a048      4c29d0         sub rax, r10
0x0000a04b      48893e         mov qword [rsi], rdi
0x0000a04e      83e901         sub ecx, 1
0x0000a051      48894610       mov qword [rsi + 0x10], rax
0x0000a055      e941ffffff     jmp 0x9f9b
0x0000a05a      660f1f440000   nop word [rax + rax]
0x0000a060      41c6462101     mov byte [r14 + 0x21], 1
0x0000a065      4489f8         mov eax, r15d
0x0000a068      49894618       mov qword [r14 + 0x18], rax
0x0000a06c      b801000000     mov eax, 1
0x0000a071      e9cafeffff     jmp 0x9f40
0x0000a076      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a080      4489f9         mov ecx, r15d
0x0000a083      84c0           test al, al
0x0000a085      49894e18       mov qword [r14 + 0x18], rcx
0x0000a089      75e1           jne 0xa06c
0x0000a08b      488b5308       mov rdx, qword [rbx + 8]
0x0000a08f      480313         add rdx, qword [rbx]
0x0000a092      4183ff47       cmp r15d, 0x47
0x0000a096      49895608       mov qword [r14 + 8], rdx
0x0000a09a      0f8683fdffff   jbe 0x9e23
0x0000a0a0      ebca           jmp 0xa06c
0x0000a0a2      660f1f440000   nop word [rax + rax]
0x0000a0a8      49837e0800     cmp qword [r14 + 8], 0
0x0000a0ad      41c6462101     mov byte [r14 + 0x21], 1
0x0000a0b2      0f95c0         setne al
0x0000a0b5      e986feffff     jmp 0x9f40
0x0000a0ba      488d0dafc700.  lea rcx, obj.__PRETTY_FUNCTION__.6956   ; 0x16870 ; "extent_scan_read"
0x0000a0c1      488d3500c700.  lea rsi, str..._coreutils_8.31_src_extent_scan.c ; 0x167c8 ; "../coreutils-8.31/src/extent-scan.c"
0x0000a0c8      488d3d21c700.  lea rdi, str.scan__ei_count____SIZE_MAX___fiemap__fm_mapped_extents ; 0x167f0 ; "scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents"
0x0000a0cf      ba7e000000     mov edx, 0x7e                           ; '~'
0x0000a0d4      e84787ffff     call sym.imp.__assert_fail
0x0000a0d9      be01000000     mov esi, 1
0x0000a0de      e9c3fdffff     jmp 0x9ea6
0x0000a0e3      e8286e0000     call sym.xalloc_die
0x0000a0e8      e89386ffff     call sym.imp.__stack_chk_fail
0x0000a0ed      0f1f00         nop dword [rax]
;-- try_link:
0x0000a0f0      4889f0         mov rax, rsi                            ; /src:-47
0x0000a0f3      4889f9         mov rcx, rdi
0x0000a0f6      8b5610         mov edx, dword [rsi + 0x10]
0x0000a0f9      448b4014       mov r8d, dword [rax + 0x14]
0x0000a0fd      488b7608       mov rsi, qword [rsi + 8]
0x0000a101      8b38           mov edi, dword [rax]
0x0000a103      e98889ffff     jmp sym.imp.linkat
0x0000a108      0f1f84000000.  nop dword [rax + rax]
;-- samedir_template:
0x0000a110      4154           push r12
0x0000a112      55             push rbp
0x0000a113      4889fd         mov rbp, rdi
0x0000a116      53             push rbx
0x0000a117      4989f4         mov r12, rsi
0x0000a11a      e8a10f0000     call sym.last_component
0x0000a11f      4829e8         sub rax, rbp
0x0000a122      488d7809       lea rdi, [rax + 9]
0x0000a126      4889c3         mov rbx, rax
0x0000a129      4881ff000100.  cmp rdi, 0x100
0x0000a130      760f           jbe 0xa141
0x0000a132      e8c988ffff     call sym.imp.malloc
0x0000a137      4989c4         mov r12, rax
0x0000a13a      31c0           xor eax, eax
0x0000a13c      4d85e4         test r12, r12
0x0000a13f      7422           je 0xa163
0x0000a141      4889da         mov rdx, rbx
0x0000a144      4889ee         mov rsi, rbp
0x0000a147      4c89e7         mov rdi, r12
0x0000a14a      e8a189ffff     call sym.imp.mempcpy
0x0000a14f      48b943755858.  movabs rcx, 0x5858585858587543          ; 'CuXXXXXX'
0x0000a159      c6400800       mov byte [rax + 8], 0
0x0000a15d      488908         mov qword [rax], rcx
0x0000a160      4c89e0         mov rax, r12
0x0000a163      5b             pop rbx
0x0000a164      5d             pop rbp
0x0000a165      415c           pop r12
0x0000a167      c3             ret
0x0000a168      0f1f84000000.  nop dword [rax + rax]
;-- try_symlink:
0x0000a170      4889f0         mov rax, rsi
0x0000a173      4889fa         mov rdx, rdi
0x0000a176      8b7608         mov esi, dword [rsi + 8]
0x0000a179      488b38         mov rdi, qword [rax]
0x0000a17c      e9bf8affff     jmp sym.imp.symlinkat
0x0000a181      0f1f440000     nop dword [rax + rax]
0x0000a186      662e0f1f8400.  nop word cs:[rax + rax]
;-- force_linkat:
0x0000a190      4157           push r15
0x0000a192      4156           push r14
0x0000a194      4189fe         mov r14d, edi
0x0000a197      4155           push r13
0x0000a199      4154           push r12
0x0000a19b      4989f5         mov r13, rsi
0x0000a19e      55             push rbp
0x0000a19f      53             push rbx
0x0000a1a0      4889cb         mov rbx, rcx
0x0000a1a3      89d5           mov ebp, edx
0x0000a1a5      4589c4         mov r12d, r8d
0x0000a1a8      4881ec480100.  sub rsp, 0x148
0x0000a1af      8b8c24800100.  mov ecx, dword [rsp + 0x180]
0x0000a1b6      64488b042528.  mov rax, qword fs:[0x28]
0x0000a1bf      488984243801.  mov qword [rsp + 0x138], rax
0x0000a1c7      31c0           xor eax, eax
0x0000a1c9      85c9           test ecx, ecx
0x0000a1cb      0f88af000000   js 0xa280
0x0000a1d1      4180f901       cmp r9b, 1
0x0000a1d5      7579           jne 0xa250
0x0000a1d7      83f911         cmp ecx, 0x11
0x0000a1da      7574           jne 0xa250
0x0000a1dc      488d442430     lea rax, [rsp + 0x30]
0x0000a1e1      4889df         mov rdi, rbx
0x0000a1e4      4889c6         mov rsi, rax
0x0000a1e7      48890424       mov qword [rsp], rax
0x0000a1eb      e820ffffff     call sym.samedir_template
0x0000a1f0      4885c0         test rax, rax
0x0000a1f3      4989c7         mov r15, rax
0x0000a1f6      0f84e4000000   je 0xa2e0
0x0000a1fc      488d542410     lea rdx, [rsp + 0x10]
0x0000a201      488d0de8feff.  lea rcx, sym.try_link                   ; 0xa0f0 ; "H\x89\xf0H\x89\xf9\x8bV\x10D\x8b@\x14H\x8bv\b\x8b8\u9209\xff\xff\x0f\x1f\x84"
0x0000a208      31f6           xor esi, esi
0x0000a20a      41b806000000   mov r8d, 6
0x0000a210      4889c7         mov rdi, rax
0x0000a213      4489742410     mov dword [rsp + 0x10], r14d
0x0000a218      4c896c2418     mov qword [rsp + 0x18], r13
0x0000a21d      896c2420       mov dword [rsp + 0x20], ebp
0x0000a221      4489642424     mov dword [rsp + 0x24], r12d
0x0000a226      e895510000     call sym.try_tempname_len
0x0000a22b      85c0           test eax, eax
0x0000a22d      7479           je 0xa2a8
0x0000a22f      e86c83ffff     call sym.imp.__errno_location
0x0000a234      8b08           mov ecx, dword [rax]
0x0000a236      4c3b3c24       cmp r15, qword [rsp]
0x0000a23a      7414           je 0xa250
0x0000a23c      4c89ff         mov rdi, r15
0x0000a23f      890c24         mov dword [rsp], ecx
0x0000a242      e8398affff     call sym..plt.got
0x0000a247      8b0c24         mov ecx, dword [rsp]
0x0000a24a      660f1f440000   nop word [rax + rax]
0x0000a250      488b9c243801.  mov rbx, qword [rsp + 0x138]
0x0000a258      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000a261      89c8           mov eax, ecx
0x0000a263      0f8583000000   jne 0xa2ec
0x0000a269      4881c4480100.  add rsp, 0x148
0x0000a270      5b             pop rbx
0x0000a271      5d             pop rbp
0x0000a272      415c           pop r12
0x0000a274      415d           pop r13
0x0000a276      415e           pop r14
0x0000a278      415f           pop r15
0x0000a27a      c3             ret
0x0000a27b      0f1f440000     nop dword [rax + rax]
0x0000a280      4889d9         mov rcx, rbx
0x0000a283      44890c24       mov dword [rsp], r9d
0x0000a287      e80488ffff     call sym.imp.linkat
0x0000a28c      85c0           test eax, eax
0x0000a28e      89c1           mov ecx, eax
0x0000a290      74be           je 0xa250
0x0000a292      e80983ffff     call sym.imp.__errno_location
0x0000a297      448b0c24       mov r9d, dword [rsp]
0x0000a29b      8b08           mov ecx, dword [rax]
0x0000a29d      e92fffffff     jmp 0xa1d1
0x0000a2a2      660f1f440000   nop word [rax + rax]
0x0000a2a8      4889d9         mov rcx, rbx
0x0000a2ab      89ea           mov edx, ebp
0x0000a2ad      4c89fe         mov rsi, r15
0x0000a2b0      89ef           mov edi, ebp
0x0000a2b2      e81989ffff     call sym.imp.renameat
0x0000a2b7      85c0           test eax, eax
0x0000a2b9      b9ffffffff     mov ecx, 0xffffffff                     ; -1
0x0000a2be      7407           je 0xa2c7
0x0000a2c0      e8db82ffff     call sym.imp.__errno_location
0x0000a2c5      8b08           mov ecx, dword [rax]
0x0000a2c7      31d2           xor edx, edx
0x0000a2c9      4c89fe         mov rsi, r15
0x0000a2cc      89ef           mov edi, ebp
0x0000a2ce      894c240c       mov dword [rsp + 0xc], ecx
0x0000a2d2      e84983ffff     call sym.imp.unlinkat
0x0000a2d7      8b4c240c       mov ecx, dword [rsp + 0xc]
0x0000a2db      e956ffffff     jmp 0xa236
0x0000a2e0      e8bb82ffff     call sym.imp.__errno_location
0x0000a2e5      8b08           mov ecx, dword [rax]
0x0000a2e7      e964ffffff     jmp 0xa250
0x0000a2ec      e88f84ffff     call sym.imp.__stack_chk_fail
0x0000a2f1      0f1f440000     nop dword [rax + rax]
0x0000a2f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- force_symlinkat:
0x0000a300      4156           push r14
0x0000a302      4155           push r13
0x0000a304      4154           push r12
0x0000a306      55             push rbp
0x0000a307      4989fc         mov r12, rdi
0x0000a30a      53             push rbx
0x0000a30b      89f5           mov ebp, esi
0x0000a30d      4889d3         mov rbx, rdx
0x0000a310      4881ec300100.  sub rsp, 0x130
0x0000a317      64488b042528.  mov rax, qword fs:[0x28]
0x0000a320      488984242801.  mov qword [rsp + 0x128], rax
0x0000a328      31c0           xor eax, eax
0x0000a32a      4585c0         test r8d, r8d
0x0000a32d      0f88a5000000   js 0xa3d8
0x0000a333      80f901         cmp cl, 1
0x0000a336      7570           jne 0xa3a8
0x0000a338      4183f811       cmp r8d, 0x11
0x0000a33c      756a           jne 0xa3a8
0x0000a33e      4c8d742420     lea r14, [rsp + 0x20]
0x0000a343      4889df         mov rdi, rbx
0x0000a346      4c89f6         mov rsi, r14
0x0000a349      e8c2fdffff     call sym.samedir_template
0x0000a34e      4885c0         test rax, rax
0x0000a351      4989c5         mov r13, rax
0x0000a354      0f84e6000000   je 0xa440
0x0000a35a      488d542410     lea rdx, [rsp + 0x10]
0x0000a35f      488d0d0afeff.  lea rcx, sym.try_symlink                ; 0xa170 ; "H\x89\xf0H\x89\xfa\x8bv\bH\x8b8\u9fca\xff\xff\x0f\x1fD"
0x0000a366      31f6           xor esi, esi
0x0000a368      41b806000000   mov r8d, 6
0x0000a36e      4889c7         mov rdi, rax
0x0000a371      4c89642410     mov qword [rsp + 0x10], r12
0x0000a376      896c2418       mov dword [rsp + 0x18], ebp
0x0000a37a      e841500000     call sym.try_tempname_len
0x0000a37f      85c0           test eax, eax
0x0000a381      747d           je 0xa400
0x0000a383      e81882ffff     call sym.imp.__errno_location
0x0000a388      448b00         mov r8d, dword [rax]
0x0000a38b      4d39f5         cmp r13, r14
0x0000a38e      7418           je 0xa3a8
0x0000a390      4c89ef         mov rdi, r13
0x0000a393      448944240c     mov dword [rsp + 0xc], r8d
0x0000a398      e8e388ffff     call sym..plt.got
0x0000a39d      448b44240c     mov r8d, dword [rsp + 0xc]
0x0000a3a2      660f1f440000   nop word [rax + rax]
0x0000a3a8      488b9c242801.  mov rbx, qword [rsp + 0x128]
0x0000a3b0      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000a3b9      4489c0         mov eax, r8d
0x0000a3bc      0f858b000000   jne 0xa44d
0x0000a3c2      4881c4300100.  add rsp, 0x130
0x0000a3c9      5b             pop rbx
0x0000a3ca      5d             pop rbp
0x0000a3cb      415c           pop r12
0x0000a3cd      415d           pop r13
0x0000a3cf      415e           pop r14
0x0000a3d1      c3             ret
0x0000a3d2      660f1f440000   nop word [rax + rax]
0x0000a3d8      894c240c       mov dword [rsp + 0xc], ecx
0x0000a3dc      e85f88ffff     call sym.imp.symlinkat
0x0000a3e1      85c0           test eax, eax
0x0000a3e3      4189c0         mov r8d, eax
0x0000a3e6      74c0           je 0xa3a8
0x0000a3e8      e8b381ffff     call sym.imp.__errno_location
0x0000a3ed      8b4c240c       mov ecx, dword [rsp + 0xc]
0x0000a3f1      448b00         mov r8d, dword [rax]
0x0000a3f4      e93affffff     jmp 0xa333
0x0000a3f9      0f1f80000000.  nop dword [rax]
0x0000a400      4889d9         mov rcx, rbx
0x0000a403      89ea           mov edx, ebp
0x0000a405      4c89ee         mov rsi, r13
0x0000a408      89ef           mov edi, ebp
0x0000a40a      e8c187ffff     call sym.imp.renameat
0x0000a40f      85c0           test eax, eax
0x0000a411      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x0000a417      0f846effffff   je 0xa38b
0x0000a41d      e87e81ffff     call sym.imp.__errno_location
0x0000a422      448b00         mov r8d, dword [rax]
0x0000a425      31d2           xor edx, edx
0x0000a427      4c89ee         mov rsi, r13
0x0000a42a      89ef           mov edi, ebp
0x0000a42c      448944240c     mov dword [rsp + 0xc], r8d
0x0000a431      e8ea81ffff     call sym.imp.unlinkat
0x0000a436      448b44240c     mov r8d, dword [rsp + 0xc]
0x0000a43b      e94bffffff     jmp 0xa38b
0x0000a440      e85b81ffff     call sym.imp.__errno_location
0x0000a445      448b00         mov r8d, dword [rax]
0x0000a448      e95bffffff     jmp 0xa3a8
0x0000a44d      e82e83ffff     call sym.imp.__stack_chk_fail
0x0000a452      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a45c      0f1f4000       nop dword [rax]
;-- copy_acl:
0x0000a460      4154           push r12                                ; ../coreutils-8.31/lib/copy-acl.c:45
0x0000a462      55             push rbp
0x0000a463      4989fc         mov r12, rdi
0x0000a466      53             push rbx
0x0000a467      4889d5         mov rbp, rdx
0x0000a46a      e8e1270000     call sym.qcopy_acl                      ; ../coreutils-8.31/lib/copy-acl.c:46
0x0000a46f      83f8fe         cmp eax, 0xfffffffe                     ; ../coreutils-8.31/lib/copy-acl.c:47
0x0000a472      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/copy-acl.c:46
0x0000a474      744a           je 0xa4c0                               ; ../coreutils-8.31/lib/copy-acl.c:47
0x0000a476      83f8ff         cmp eax, 0xffffffff
0x0000a479      7537           jne 0xa4b2
0x0000a47b      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/copy-acl.c:54
0x0000a47e      e81d450000     call sym.quote
0x0000a483      488d353fc200.  lea rsi, str.preserving_permissions_for__s ; 0x166c9 ; "preserving permissions for %s"
0x0000a48a      ba05000000     mov edx, 5
0x0000a48f      31ff           xor edi, edi
0x0000a491      4989c4         mov r12, rax
0x0000a494      e89782ffff     call sym.imp.dcgettext
0x0000a499      4889c5         mov rbp, rax
0x0000a49c      e8ff80ffff     call sym.imp.__errno_location
0x0000a4a1      8b30           mov esi, dword [rax]
0x0000a4a3      4c89e1         mov rcx, r12
0x0000a4a6      4889ea         mov rdx, rbp
0x0000a4a9      31ff           xor edi, edi
0x0000a4ab      31c0           xor eax, eax
0x0000a4ad      e85e86ffff     call sym.imp.error
0x0000a4b2      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/copy-acl.c:61
0x0000a4b4      5b             pop rbx
0x0000a4b5      5d             pop rbp
0x0000a4b6      415c           pop r12
0x0000a4b8      c3             ret
0x0000a4b9      0f1f80000000.  nop dword [rax]
0x0000a4c0      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/copy-acl.c:50
0x0000a4c3      e8d8440000     call sym.quote
0x0000a4c8      4889c5         mov rbp, rax
0x0000a4cb      e8d080ffff     call sym.imp.__errno_location
0x0000a4d0      8b30           mov esi, dword [rax]
0x0000a4d2      488d156ecf00.  lea rdx, [0x00017447]                   ; "%s"
0x0000a4d9      4889e9         mov rcx, rbp
0x0000a4dc      31c0           xor eax, eax
0x0000a4de      31ff           xor edi, edi
0x0000a4e0      e82b86ffff     call sym.imp.error
0x0000a4e5      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/copy-acl.c:61
0x0000a4e7      5b             pop rbx
0x0000a4e8      5d             pop rbp
0x0000a4e9      415c           pop r12
0x0000a4eb      c3             ret
0x0000a4ec      0f1f4000       nop dword [rax]
;-- set_acl:
0x0000a4f0      4154           push r12                                ; ../coreutils-8.31/lib/set-acl.c:43
0x0000a4f2      55             push rbp
0x0000a4f3      4889fd         mov rbp, rdi
0x0000a4f6      53             push rbx
0x0000a4f7      e8d4270000     call sym.qset_acl                       ; ../coreutils-8.31/lib/set-acl.c:44
0x0000a4fc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/set-acl.c:45
0x0000a4fe      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/set-acl.c:44
0x0000a500      7437           je 0xa539                               ; ../coreutils-8.31/lib/set-acl.c:45
0x0000a502      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/set-acl.c:46
0x0000a505      e896440000     call sym.quote
0x0000a50a      488d35d5c000.  lea rsi, str.setting_permissions_for__s ; 0x165e6 ; "setting permissions for %s"
0x0000a511      ba05000000     mov edx, 5
0x0000a516      31ff           xor edi, edi
0x0000a518      4989c4         mov r12, rax
0x0000a51b      e81082ffff     call sym.imp.dcgettext
0x0000a520      4889c5         mov rbp, rax
0x0000a523      e87880ffff     call sym.imp.__errno_location
0x0000a528      8b30           mov esi, dword [rax]
0x0000a52a      4c89e1         mov rcx, r12
0x0000a52d      4889ea         mov rdx, rbp
0x0000a530      31ff           xor edi, edi
0x0000a532      31c0           xor eax, eax
0x0000a534      e8d785ffff     call sym.imp.error
0x0000a539      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/set-acl.c:48
0x0000a53b      5b             pop rbx
0x0000a53c      5d             pop rbp
0x0000a53d      415c           pop r12
0x0000a53f      c3             ret
;-- areadlink_with_size:
0x0000a540      4157           push r15
0x0000a542      4156           push r14
0x0000a544      b801040000     mov eax, 0x401                          ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x0000a549      4155           push r13                                ; ../coreutils-8.31/lib/areadlink-with-size.c:53
0x0000a54b      4154           push r12
0x0000a54d      4989fd         mov r13, rdi
0x0000a550      55             push rbp
0x0000a551      53             push rbx
0x0000a552      488d5e01       lea rbx, [rsi + 1]                      ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x0000a556      49beffffffff.  movabs r14, 0x3fffffffffffffff          ; ../coreutils-8.31/lib/areadlink-with-size.c:94 ; 4611686018427387903
0x0000a560      49bffeffffff.  movabs r15, 0x7ffffffffffffffe          ; ../coreutils-8.31/lib/areadlink-with-size.c:96 ; 9223372036854775806
0x0000a56a      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/areadlink-with-size.c:53
0x0000a56e      4881fe010400.  cmp rsi, 0x401                          ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x0000a575      480f43d8       cmovae rbx, rax
0x0000a579      0f1f80000000.  nop dword [rax]
0x0000a580      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/areadlink-with-size.c:70
0x0000a583      e87884ffff     call sym.imp.malloc
0x0000a588      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/areadlink-with-size.c:72
0x0000a58b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/areadlink-with-size.c:70
0x0000a58e      743b           je 0xa5cb                               ; ../coreutils-8.31/lib/areadlink-with-size.c:72
0x0000a590      4889da         mov rdx, rbx
0x0000a593      4889c6         mov rsi, rax
0x0000a596      4c89ef         mov rdi, r13
0x0000a599      e8c280ffff     call sym.imp.readlink
0x0000a59e      4885c0         test rax, rax
0x0000a5a1      4989c4         mov r12, rax                            ; unistd.h:-169
0x0000a5a4      7852           js 0xa5f8
0x0000a5a6      4c39e3         cmp rbx, r12                            ; unistd.h:-163
0x0000a5a9      7765           ja 0xa610
0x0000a5ab      4889ef         mov rdi, rbp
0x0000a5ae      e8cd86ffff     call sym..plt.got                       ; unistd.h:-162
0x0000a5b3      4c39f3         cmp rbx, r14                            ; unistd.h:-161
0x0000a5b6      7728           ja 0xa5e0                               ; unistd.h:-186
0x0000a5b8      4801db         add rbx, rbx
0x0000a5bb      4889df         mov rdi, rbx
0x0000a5be      e83d84ffff     call sym.imp.malloc                     ; unistd.h:-184
0x0000a5c3      4885c0         test rax, rax
0x0000a5c6      4889c5         mov rbp, rax                            ; unistd.h:-152
0x0000a5c9      75c5           jne 0xa590
0x0000a5cb      4883c408       add rsp, 8
0x0000a5cf      4889e8         mov rax, rbp
0x0000a5d2      5b             pop rbx
0x0000a5d3      5d             pop rbp
0x0000a5d4      415c           pop r12
0x0000a5d6      415d           pop r13
0x0000a5d8      415e           pop r14
0x0000a5da      415f           pop r15
0x0000a5dc      c3             ret
0x0000a5dd      0f1f00         nop dword [rax]
0x0000a5e0      4c39fb         cmp rbx, r15                            ; unistd.h:-159
0x0000a5e3      773b           ja 0xa620
0x0000a5e5      48bbffffffff.  movabs rbx, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a5ef      eb8f           jmp 0xa580
0x0000a5f1      0f1f80000000.  nop dword [rax]
0x0000a5f8      e8a37fffff     call sym.imp.__errno_location
0x0000a5fd      833822         cmp dword [rax], 0x22                   ; unistd.h:-174
0x0000a600      74a4           je 0xa5a6                               ; unistd.h:-172
0x0000a602      4889ef         mov rdi, rbp                            ; unistd.h:-174
0x0000a605      31ed           xor ebp, ebp
0x0000a607      e87486ffff     call sym..plt.got                       ; unistd.h:-172
0x0000a60c      ebbd           jmp 0xa5cb
0x0000a60e      6690           nop
0x0000a610      42c644250000   mov byte [rbp + r12], 0
0x0000a616      ebb3           jmp 0xa5cb
0x0000a618      0f1f84000000.  nop dword [rax + rax]
0x0000a620      e87b7fffff     call sym.imp.__errno_location           ; unistd.h:-155
0x0000a625      31ed           xor ebp, ebp
0x0000a627      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000a62d      eb9c           jmp 0xa5cb
0x0000a62f      90             nop
;-- set_simple_backup_suffix:
0x0000a630      4885ff         test rdi, rdi
0x0000a633      53             push rbx
0x0000a634      4889fb         mov rbx, rdi
0x0000a637      7427           je 0xa660
0x0000a639      803b00         cmp byte [rbx], 0
0x0000a63c      7512           jne 0xa650
0x0000a63e      488d1d41c200.  lea rbx, [0x00016886]                   ; "~"
0x0000a645      48891d141f21.  mov qword [obj.simple_backup_suffix], rbx ; [0x21c560:8]=0
0x0000a64c      5b             pop rbx
0x0000a64d      c3             ret
0x0000a64e      6690           nop
0x0000a650      4889df         mov rdi, rbx
0x0000a653      e8680a0000     call sym.last_component
0x0000a658      4839d8         cmp rax, rbx
0x0000a65b      75e1           jne 0xa63e
0x0000a65d      ebe6           jmp 0xa645
0x0000a65f      90             nop
0x0000a660      488d3d21c200.  lea rdi, str.SIMPLE_BACKUP_SUFFIX       ; 0x16888 ; "SIMPLE_BACKUP_SUFFIX"
0x0000a667      e8047fffff     call sym.imp.getenv
0x0000a66c      4885c0         test rax, rax
0x0000a66f      4889c3         mov rbx, rax
0x0000a672      74ca           je 0xa63e
0x0000a674      ebc3           jmp 0xa639
0x0000a676      662e0f1f8400.  nop word cs:[rax + rax]
;-- backupfile_internal:
0x0000a680      4157           push r15
0x0000a682      4156           push r14
0x0000a684      4155           push r13
0x0000a686      4154           push r12
0x0000a688      55             push rbp
0x0000a689      53             push rbx
0x0000a68a      4889f3         mov rbx, rsi
0x0000a68d      4881ec880000.  sub rsp, 0x88
0x0000a694      897c2464       mov dword [rsp + 0x64], edi
0x0000a698      4889f7         mov rdi, rsi
0x0000a69b      4889742410     mov qword [rsp + 0x10], rsi
0x0000a6a0      89542420       mov dword [rsp + 0x20], edx
0x0000a6a4      884c2463       mov byte [rsp + 0x63], cl
0x0000a6a8      64488b042528.  mov rax, qword fs:[0x28]
0x0000a6b1      4889442478     mov qword [rsp + 0x78], rax
0x0000a6b6      31c0           xor eax, eax
0x0000a6b8      e8030a0000     call sym.last_component
0x0000a6bd      4889c7         mov rdi, rax
0x0000a6c0      4989c6         mov r14, rax
0x0000a6c3      e88880ffff     call sym.imp.strlen
0x0000a6c8      488b3d911e21.  mov rdi, qword [obj.simple_backup_suffix] ; [0x21c560:8]=0
0x0000a6cf      4929de         sub r14, rbx
0x0000a6d2      4c01f0         add rax, r14
0x0000a6d5      4889442418     mov qword [rsp + 0x18], rax
0x0000a6da      4885ff         test rdi, rdi
0x0000a6dd      0f8481050000   je 0xac64
0x0000a6e3      e86880ffff     call sym.imp.strlen
0x0000a6e8      488b742418     mov rsi, qword [rsp + 0x18]
0x0000a6ed      4883c001       add rax, 1
0x0000a6f1      4883f809       cmp rax, 9
0x0000a6f5      4889442450     mov qword [rsp + 0x50], rax
0x0000a6fa      488d5601       lea rdx, [rsi + 1]
0x0000a6fe      4889c6         mov rsi, rax
0x0000a701      b809000000     mov eax, 9
0x0000a706      480f43c6       cmovae rax, rsi
0x0000a70a      4801d0         add rax, rdx
0x0000a70d      4889542438     mov qword [rsp + 0x38], rdx
0x0000a712      4889c7         mov rdi, rax
0x0000a715      4889442440     mov qword [rsp + 0x40], rax
0x0000a71a      e8e182ffff     call sym.imp.malloc
0x0000a71f      4885c0         test rax, rax
0x0000a722      4989c7         mov r15, rax
0x0000a725      0f84e5020000   je 0xaa10
0x0000a72b      488d442474     lea rax, [rsp + 0x74]
0x0000a730      c7442474ffff.  mov dword [rsp + 0x74], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x0000a738      48c744244800.  mov qword [rsp + 0x48], 0
0x0000a741      4531ed         xor r13d, r13d
0x0000a744      4889442468     mov qword [rsp + 0x68], rax
0x0000a749      488b542438     mov rdx, qword [rsp + 0x38]
0x0000a74e      488b742410     mov rsi, qword [rsp + 0x10]
0x0000a753      4c89ff         mov rdi, r15
0x0000a756      e84582ffff     call sym.imp.memcpy
0x0000a75b      837c242001     cmp dword [rsp + 0x20], 1
0x0000a760      0f84da020000   je 0xaa40
0x0000a766      4b8d2c37       lea rbp, [r15 + r14]
0x0000a76a      4889ef         mov rdi, rbp
0x0000a76d      e8ae090000     call sym.base_len
0x0000a772      4d85ed         test r13, r13
0x0000a775      4989c4         mov r12, rax
0x0000a778      0f84a2030000   je 0xab20
0x0000a77e      4c89ef         mov rdi, r13
0x0000a781      e8fa80ffff     call sym.imp.rewinddir
0x0000a786      488b442440     mov rax, qword [rsp + 0x40]
0x0000a78b      48c744242801.  mov qword [rsp + 0x28], 1
0x0000a794      c74424240200.  mov dword [rsp + 0x24], 2
0x0000a79c      4889442430     mov qword [rsp + 0x30], rax
0x0000a7a1      498d442404     lea rax, [r12 + 4]
0x0000a7a6      4889442408     mov qword [rsp + 8], rax
0x0000a7ab      0f1f440000     nop dword [rax + rax]
0x0000a7b0      4c89ef         mov rdi, r13
0x0000a7b3      e83882ffff     call sym.imp.readdir
0x0000a7b8      4885c0         test rax, rax
0x0000a7bb      0f84af010000   je 0xa970
0x0000a7c1      488d5813       lea rbx, [rax + 0x13]
0x0000a7c5      4889df         mov rdi, rbx
0x0000a7c8      e8837fffff     call sym.imp.strlen
0x0000a7cd      483b442408     cmp rax, qword [rsp + 8]
0x0000a7d2      72dc           jb 0xa7b0
0x0000a7d4      498d6c2402     lea rbp, [r12 + 2]
0x0000a7d9      4b8d3c37       lea rdi, [r15 + r14]
0x0000a7dd      4889de         mov rsi, rbx
0x0000a7e0      4889ea         mov rdx, rbp
0x0000a7e3      e8e880ffff     call sym.imp.memcmp
0x0000a7e8      85c0           test eax, eax
0x0000a7ea      75c4           jne 0xa7b0
0x0000a7ec      4801eb         add rbx, rbp
0x0000a7ef      0fb603         movzx eax, byte [rbx]
0x0000a7f2      8d50cf         lea edx, [rax - 0x31]
0x0000a7f5      80fa08         cmp dl, 8
0x0000a7f8      77b6           ja 0xa7b0
0x0000a7fa      3c39           cmp al, 0x39
0x0000a7fc      0fbe4301       movsx eax, byte [rbx + 1]
0x0000a800      bd01000000     mov ebp, 1
0x0000a805      410f94c0       sete r8b
0x0000a809      89c1           mov ecx, eax
0x0000a80b      83e830         sub eax, 0x30
0x0000a80e      83f809         cmp eax, 9
0x0000a811      7720           ja 0xa833
0x0000a813      0f1f440000     nop dword [rax + rax]
0x0000a818      80f939         cmp cl, 0x39
0x0000a81b      0f94c0         sete al
0x0000a81e      4883c501       add rbp, 1
0x0000a822      4121c0         and r8d, eax
0x0000a825      0fbe042b       movsx eax, byte [rbx + rbp]
0x0000a829      89c1           mov ecx, eax
0x0000a82b      83e830         sub eax, 0x30
0x0000a82e      83f809         cmp eax, 9
0x0000a831      76e5           jbe 0xa818
0x0000a833      80f97e         cmp cl, 0x7e
0x0000a836      0f8574ffffff   jne 0xa7b0
0x0000a83c      807c2b0100     cmp byte [rbx + rbp + 1], 0
0x0000a841      0f8569ffffff   jne 0xa7b0
0x0000a847      488b542428     mov rdx, qword [rsp + 0x28]
0x0000a84c      4839ea         cmp rdx, rbp
0x0000a84f      722b           jb 0xa87c
0x0000a851      4488442458     mov byte [rsp + 0x58], r8b
0x0000a856      0f8554ffffff   jne 0xa7b0
0x0000a85c      488b442418     mov rax, qword [rsp + 0x18]
0x0000a861      4889de         mov rsi, rbx
0x0000a864      498d7c0702     lea rdi, [r15 + rax + 2]
0x0000a869      e86280ffff     call sym.imp.memcmp
0x0000a86e      85c0           test eax, eax
0x0000a870      440fb6442458   movzx r8d, byte [rsp + 0x58]
0x0000a876      0f8f34ffffff   jg 0xa7b0
0x0000a87c      410fb6f0       movzx esi, r8b
0x0000a880      450fb6c8       movzx r9d, r8b
0x0000a884      89742424       mov dword [rsp + 0x24], esi
0x0000a888      488b742418     mov rsi, qword [rsp + 0x18]
0x0000a88d      498d0429       lea rax, [r9 + rbp]
0x0000a891      4889442428     mov qword [rsp + 0x28], rax
0x0000a896      488d4c0604     lea rcx, [rsi + rax + 4]
0x0000a89b      483b4c2430     cmp rcx, qword [rsp + 0x30]
0x0000a8a0      0f8632030000   jbe 0xabd8
0x0000a8a6      ba02000000     mov edx, 2
0x0000a8ab      31f6           xor esi, esi
0x0000a8ad      4889d0         mov rax, rdx
0x0000a8b0      48f7e1         mul rcx
0x0000a8b3      0f80ca030000   jo 0xac83
0x0000a8b9      4885c0         test rax, rax
0x0000a8bc      0f88ae020000   js 0xab70
0x0000a8c2      4885f6         test rsi, rsi
0x0000a8c5      0f85a5020000   jne 0xab70
0x0000a8cb      488d0409       lea rax, [rcx + rcx]
0x0000a8cf      4889442430     mov qword [rsp + 0x30], rax
0x0000a8d4      488b742430     mov rsi, qword [rsp + 0x30]
0x0000a8d9      4c89ff         mov rdi, r15
0x0000a8dc      4c894c2458     mov qword [rsp + 0x58], r9
0x0000a8e1      e88a81ffff     call sym.imp.realloc
0x0000a8e6      4885c0         test rax, rax
0x0000a8e9      4989c0         mov r8, rax
0x0000a8ec      4c8b4c2458     mov r9, qword [rsp + 0x58]
0x0000a8f1      0f8489020000   je 0xab80
0x0000a8f7      488b442418     mov rax, qword [rsp + 0x18]
0x0000a8fc      488d5502       lea rdx, [rbp + 2]
0x0000a900      4c89442458     mov qword [rsp + 0x58], r8
0x0000a905      4889de         mov rsi, rbx
0x0000a908      4c01c0         add rax, r8
0x0000a90b      41b82e7e0000   mov r8d, 0x7e2e                         ; '.~'
0x0000a911      4a8d4c0802     lea rcx, [rax + r9 + 2]
0x0000a916      66448900       mov word [rax], r8w
0x0000a91a      c6400230       mov byte [rax + 2], 0x30                ; '0'
                                                                       ; [0x30:1]=0
0x0000a91e      4889cf         mov rdi, rcx
0x0000a921      e87a80ffff     call sym.imp.memcpy
0x0000a926      4801c5         add rbp, rax
0x0000a929      4c8b442458     mov r8, qword [rsp + 0x58]
0x0000a92e      0fb655ff       movzx edx, byte [rbp - 1]
0x0000a932      488d45ff       lea rax, [rbp - 1]
0x0000a936      80fa39         cmp dl, 0x39
0x0000a939      7514           jne 0xa94f
0x0000a93b      0f1f440000     nop dword [rax + rax]
0x0000a940      c60030         mov byte [rax], 0x30                    ; '0'
                                                                       ; [0x30:1]=0
0x0000a943      4883e801       sub rax, 1
0x0000a947      0fb610         movzx edx, byte [rax]
0x0000a94a      80fa39         cmp dl, 0x39
0x0000a94d      74f1           je 0xa940
0x0000a94f      83c201         add edx, 1
0x0000a952      4c89ef         mov rdi, r13
0x0000a955      4d89c7         mov r15, r8
0x0000a958      8810           mov byte [rax], dl
0x0000a95a      e89180ffff     call sym.imp.readdir
0x0000a95f      4885c0         test rax, rax
0x0000a962      0f8559feffff   jne 0xa7c1
0x0000a968      0f1f84000000.  nop dword [rax + rax]
0x0000a970      8b442424       mov eax, dword [rsp + 0x24]
0x0000a974      83f802         cmp eax, 2
0x0000a977      0f84e3000000   je 0xaa60
0x0000a97d      83f803         cmp eax, 3
0x0000a980      0f84fa010000   je 0xab80
0x0000a986      83f801         cmp eax, 1
0x0000a989      0f8401010000   je 0xaa90
0x0000a98f      807c246300     cmp byte [rsp + 0x63], 0
0x0000a994      0f84b4020000   je 0xac4e
0x0000a99a      8b542474       mov edx, dword [rsp + 0x74]
0x0000a99e      4b8d0c37       lea rcx, [r15 + r14]
0x0000a9a2      85d2           test edx, edx
0x0000a9a4      7913           jns 0xa9b9
0x0000a9a6      c74424749cff.  mov dword [rsp + 0x74], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x0000a9ae      4c89f9         mov rcx, r15
0x0000a9b1      ba9cffffff     mov edx, 0xffffff9c                     ; 4294967196
0x0000a9b6      4531f6         xor r14d, r14d
0x0000a9b9      4531c0         xor r8d, r8d
0x0000a9bc      837c242001     cmp dword [rsp + 0x20], 1
0x0000a9c1      488b742410     mov rsi, qword [rsp + 0x10]
0x0000a9c6      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x0000a9cb      410f95c0       setne r8b
0x0000a9cf      e8ec3f0000     call sym.renameatu
0x0000a9d4      85c0           test eax, eax
0x0000a9d6      0f8472020000   je 0xac4e
0x0000a9dc      e8bf7bffff     call sym.imp.__errno_location
0x0000a9e1      8b28           mov ebp, dword [rax]
0x0000a9e3      83fd11         cmp ebp, 0x11
0x0000a9e6      0f845dfdffff   je 0xa749
0x0000a9ec      4d85ed         test r13, r13
0x0000a9ef      4889c3         mov rbx, rax
0x0000a9f2      7408           je 0xa9fc
0x0000a9f4      4c89ef         mov rdi, r13
0x0000a9f7      e8a47effff     call sym.imp.closedir
0x0000a9fc      4c89ff         mov rdi, r15
0x0000a9ff      4531ff         xor r15d, r15d
0x0000aa02      e87982ffff     call sym..plt.got
0x0000aa07      892b           mov dword [rbx], ebp
0x0000aa09      0f1f80000000.  nop dword [rax]
0x0000aa10      488b742478     mov rsi, qword [rsp + 0x78]
0x0000aa15      644833342528.  xor rsi, qword fs:[0x28]
0x0000aa1e      4c89f8         mov rax, r15
0x0000aa21      0f8566020000   jne 0xac8d
0x0000aa27      4881c4880000.  add rsp, 0x88
0x0000aa2e      5b             pop rbx
0x0000aa2f      5d             pop rbp
0x0000aa30      415c           pop r12
0x0000aa32      415d           pop r13
0x0000aa34      415e           pop r14
0x0000aa36      415f           pop r15
0x0000aa38      c3             ret
0x0000aa39      0f1f80000000.  nop dword [rax]
0x0000aa40      488b442418     mov rax, qword [rsp + 0x18]
0x0000aa45      488b542450     mov rdx, qword [rsp + 0x50]
0x0000aa4a      488b350f1b21.  mov rsi, qword [obj.simple_backup_suffix] ; [0x21c560:8]=0
0x0000aa51      498d3c07       lea rdi, [r15 + rax]
0x0000aa55      e8467fffff     call sym.imp.memcpy
0x0000aa5a      e930ffffff     jmp 0xa98f
0x0000aa5f      90             nop
0x0000aa60      837c242002     cmp dword [rsp + 0x20], 2
0x0000aa65      7529           jne 0xaa90
0x0000aa67      488b442418     mov rax, qword [rsp + 0x18]
0x0000aa6c      488b542450     mov rdx, qword [rsp + 0x50]
0x0000aa71      488b35e81a21.  mov rsi, qword [obj.simple_backup_suffix] ; [0x21c560:8]=0
0x0000aa78      498d3c07       lea rdi, [r15 + rax]
0x0000aa7c      e81f7fffff     call sym.imp.memcpy
0x0000aa81      c74424200100.  mov dword [rsp + 0x20], 1
0x0000aa89      0f1f80000000.  nop dword [rax]
0x0000aa90      4c89ff         mov rdi, r15
0x0000aa93      e828060000     call sym.last_component
0x0000aa98      4889c7         mov rdi, rax
0x0000aa9b      4889c3         mov rbx, rax
0x0000aa9e      e87d060000     call sym.base_len
0x0000aaa3      4883f80e       cmp rax, 0xe
0x0000aaa7      4889c5         mov rbp, rax
0x0000aaaa      0f86dffeffff   jbe 0xa98f
0x0000aab0      48837c244800   cmp qword [rsp + 0x48], 0
0x0000aab6      0f85e4000000   jne 0xaba0
0x0000aabc      8b7c2474       mov edi, dword [rsp + 0x74]
0x0000aac0      897c2408       mov dword [rsp + 8], edi
0x0000aac4      e8d77affff     call sym.imp.__errno_location
0x0000aac9      8b7c2408       mov edi, dword [rsp + 8]
0x0000aacd      4989c4         mov r12, rax
0x0000aad0      85ff           test edi, edi
0x0000aad2      0f883a010000   js 0xac12
0x0000aad8      c70000000000   mov dword [rax], 0
0x0000aade      be03000000     mov esi, 3
0x0000aae3      e8687effff     call sym.imp.fpathconf
0x0000aae8      418b0c24       mov ecx, dword [r12]
0x0000aaec      31d2           xor edx, edx
0x0000aaee      85c9           test ecx, ecx
0x0000aaf0      0f94c2         sete dl
0x0000aaf3      4829d0         sub rax, rdx
0x0000aaf6      4885c0         test rax, rax
0x0000aaf9      4889442448     mov qword [rsp + 0x48], rax
0x0000aafe      0f899c000000   jns 0xaba0
0x0000ab04      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000ab08      0f8567010000   jne 0xac75
0x0000ab0e      48c7442448ff.  mov qword [rsp + 0x48], 0xffffffffffffffff
0x0000ab17      e973feffff     jmp 0xa98f
0x0000ab1c      0f1f4000       nop dword [rax]
0x0000ab20      488b4c2468     mov rcx, qword [rsp + 0x68]
0x0000ab25      8b7c2464       mov edi, dword [rsp + 0x64]
0x0000ab29      41b92e000000   mov r9d, 0x2e                           ; '.'
0x0000ab2f      31d2           xor edx, edx
0x0000ab31      0fb75d00       movzx ebx, word [rbp]
0x0000ab35      4c89fe         mov rsi, r15
0x0000ab38      6644894d00     mov word [rbp], r9w
0x0000ab3d      e8ee1f0000     call sym.opendirat
0x0000ab42      4885c0         test rax, rax
0x0000ab45      4989c5         mov r13, rax
0x0000ab48      4a8d542500     lea rdx, [rbp + r12]
0x0000ab4d      0f848d000000   je 0xabe0
0x0000ab53      66895d00       mov word [rbp], bx
0x0000ab57      c7022e7e317e   mov dword [rdx], 0x7e317e2e             ; '.~1~'
                                                                       ; [0x7e317e2e:4]=-1
0x0000ab5d      c6420400       mov byte [rdx + 4], 0
0x0000ab61      e920fcffff     jmp 0xa786
0x0000ab66      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ab70      48894c2430     mov qword [rsp + 0x30], rcx
0x0000ab75      e95afdffff     jmp 0xa8d4
0x0000ab7a      660f1f440000   nop word [rax + rax]
0x0000ab80      4c89ff         mov rdi, r15
0x0000ab83      4531ff         xor r15d, r15d
0x0000ab86      e8f580ffff     call sym..plt.got
0x0000ab8b      e8107affff     call sym.imp.__errno_location
0x0000ab90      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000ab96      e975feffff     jmp 0xaa10
0x0000ab9b      0f1f440000     nop dword [rax + rax]
0x0000aba0      483b6c2448     cmp rbp, qword [rsp + 0x48]
0x0000aba5      0f86e4fdffff   jbe 0xa98f
0x0000abab      488b442418     mov rax, qword [rsp + 0x18]
0x0000abb0      488b742448     mov rsi, qword [rsp + 0x48]
0x0000abb5      4c01f8         add rax, r15
0x0000abb8      488d56ff       lea rdx, [rsi - 1]
0x0000abbc      4829d8         sub rax, rbx
0x0000abbf      4839f0         cmp rax, rsi
0x0000abc2      480f43c2       cmovae rax, rdx
0x0000abc6      c604037e       mov byte [rbx + rax], 0x7e              ; '~'
                                                                       ; [0x7e:1]=0
0x0000abca      c644030100     mov byte [rbx + rax + 1], 0
0x0000abcf      e9bbfdffff     jmp 0xa98f
0x0000abd4      0f1f4000       nop dword [rax]
0x0000abd8      4d89f8         mov r8, r15
0x0000abdb      e917fdffff     jmp 0xa8f7
0x0000abe0      4889542408     mov qword [rsp + 8], rdx
0x0000abe5      e8b679ffff     call sym.imp.__errno_location
0x0000abea      83380c         cmp dword [rax], 0xc
0x0000abed      488b542408     mov rdx, qword [rsp + 8]
0x0000abf2      66895d00       mov word [rbp], bx
0x0000abf6      c7022e7e317e   mov dword [rdx], 0x7e317e2e             ; '.~1~'
                                                                       ; [0x7e317e2e:4]=-1
0x0000abfc      c6420400       mov byte [rdx + 4], 0
0x0000ac00      0f94c0         sete al
0x0000ac03      0fb6c0         movzx eax, al
0x0000ac06      83c002         add eax, 2
0x0000ac09      89442424       mov dword [rsp + 0x24], eax
0x0000ac0d      e95efdffff     jmp 0xa970
0x0000ac12      0fb713         movzx edx, word [rbx]
0x0000ac15      be2e000000     mov esi, 0x2e                           ; '.'
0x0000ac1a      4c89ff         mov rdi, r15
0x0000ac1d      668933         mov word [rbx], si
0x0000ac20      c70000000000   mov dword [rax], 0
0x0000ac26      be03000000     mov esi, 3
0x0000ac2b      89542408       mov dword [rsp + 8], edx
0x0000ac2f      e89c7affff     call sym.imp.pathconf
0x0000ac34      418b3c24       mov edi, dword [r12]
0x0000ac38      8b542408       mov edx, dword [rsp + 8]
0x0000ac3c      31c9           xor ecx, ecx
0x0000ac3e      85ff           test edi, edi
0x0000ac40      668913         mov word [rbx], dx
0x0000ac43      0f94c1         sete cl
0x0000ac46      4829c8         sub rax, rcx
0x0000ac49      e9a8feffff     jmp 0xaaf6
0x0000ac4e      4d85ed         test r13, r13
0x0000ac51      0f84b9fdffff   je 0xaa10
0x0000ac57      4c89ef         mov rdi, r13
0x0000ac5a      e8417cffff     call sym.imp.closedir
0x0000ac5f      e9acfdffff     jmp 0xaa10
0x0000ac64      e8c7f9ffff     call sym.set_simple_backup_suffix
0x0000ac69      488b3df01821.  mov rdi, qword [obj.simple_backup_suffix] ; [0x21c560:8]=0
0x0000ac70      e96efaffff     jmp 0xa6e3
0x0000ac75      48c74424480e.  mov qword [rsp + 0x48], 0xe             ; [0xe:8]=0x1003e00030000
0x0000ac7e      e928ffffff     jmp 0xabab
0x0000ac83      be01000000     mov esi, 1
0x0000ac88      e92cfcffff     jmp 0xa8b9
0x0000ac8d      e8ee7affff     call sym.imp.__stack_chk_fail
0x0000ac92      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ac9c      0f1f4000       nop dword [rax]
;-- backup_file_rename:
0x0000aca0      b901000000     mov ecx, 1                              ; ../coreutils-8.31/lib/backup-rename.c:29
0x0000aca5      e9d6f9ffff     jmp sym.backupfile_internal
0x0000acaa      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/backup-rename.c:30
;-- get_version.part.0:
0x0000acb0      4883ec08       sub rsp, 8
0x0000acb4      4c8b0de51321.  mov r9, qword [obj.argmatch_die]        ; [0x21c0a0:8]=0x13660 sym.__argmatch_die ; "`6\x01"
0x0000acbb      488d159e0c21.  lea rdx, obj.backup_args                ; 0x21b960
0x0000acc2      488d0d17bc00.  lea rcx, obj.backup_types               ; 0x168e0
0x0000acc9      41b804000000   mov r8d, 4
0x0000accf      e85c8c0000     call sym.__xargmatch_internal
0x0000acd4      488d1505bc00.  lea rdx, obj.backup_types               ; 0x168e0
0x0000acdb      8b0482         mov eax, dword [rdx + rax*4]
0x0000acde      4883c408       add rsp, 8
0x0000ace2      c3             ret
0x0000ace3      0f1f00         nop dword [rax]
0x0000ace6      662e0f1f8400.  nop word cs:[rax + rax]
;-- find_backup_file_name:
0x0000acf0      4883ec08       sub rsp, 8
0x0000acf4      31c9           xor ecx, ecx
0x0000acf6      e885f9ffff     call sym.backupfile_internal
0x0000acfb      4885c0         test rax, rax
0x0000acfe      7405           je 0xad05
0x0000ad00      4883c408       add rsp, 8
0x0000ad04      c3             ret
0x0000ad05      e806620000     call sym.xalloc_die
0x0000ad0a      660f1f440000   nop word [rax + rax]
;-- get_version:
0x0000ad10      4885f6         test rsi, rsi
0x0000ad13      740b           je 0xad20
0x0000ad15      803e00         cmp byte [rsi], 0
0x0000ad18      7406           je 0xad20
0x0000ad1a      eb94           jmp sym.get_version.part.0
0x0000ad1c      0f1f4000       nop dword [rax]
0x0000ad20      b802000000     mov eax, 2
0x0000ad25      c3             ret
0x0000ad26      662e0f1f8400.  nop word cs:[rax + rax]
;-- xget_version:
0x0000ad30      4885f6         test rsi, rsi
0x0000ad33      7405           je 0xad3a
0x0000ad35      803e00         cmp byte [rsi], 0
0x0000ad38      7528           jne 0xad62
0x0000ad3a      488d3d5dbb00.  lea rdi, [0x0001689e]                   ; "VERSION_CONTROL"
0x0000ad41      4883ec08       sub rsp, 8
0x0000ad45      e82678ffff     call sym.imp.getenv
0x0000ad4a      4885c0         test rax, rax
0x0000ad4d      7421           je 0xad70
0x0000ad4f      803800         cmp byte [rax], 0
0x0000ad52      741c           je 0xad70
0x0000ad54      488d3d42bb00.  lea rdi, str.VERSION_CONTROL            ; 0x1689d ; "$VERSION_CONTROL"
0x0000ad5b      4889c6         mov rsi, rax
0x0000ad5e      4883c408       add rsp, 8
0x0000ad62      e949ffffff     jmp sym.get_version.part.0
0x0000ad67      660f1f840000.  nop word [rax + rax]
0x0000ad70      b802000000     mov eax, 2
0x0000ad75      4883c408       add rsp, 8
0x0000ad79      c3             ret
0x0000ad7a      660f1f440000   nop word [rax + rax]
;-- buffer_lcm:
0x0000ad80      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/buffer-lcm.c:29
0x0000ad83      4889d1         mov rcx, rdx
0x0000ad86      7520           jne 0xada8                              ; ../coreutils-8.31/lib/buffer-lcm.c:33
0x0000ad88      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/buffer-lcm.c:34
0x0000ad8b      bf00200000     mov edi, 0x2000
0x0000ad90      480f45fe       cmovne rdi, rsi
0x0000ad94      4839cf         cmp rdi, rcx                            ; ../coreutils-8.31/lib/buffer-lcm.c:58
0x0000ad97      480f46cf       cmovbe rcx, rdi
0x0000ad9b      4989c8         mov r8, rcx
0x0000ad9e      4c89c0         mov rax, r8                             ; ../coreutils-8.31/lib/buffer-lcm.c:59
0x0000ada1      c3             ret
0x0000ada2      660f1f440000   nop word [rax + rax]
0x0000ada8      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/buffer-lcm.c:37
0x0000adab      74e7           je 0xad94
0x0000adad      4989f0         mov r8, rsi
0x0000adb0      4889f8         mov rax, rdi
0x0000adb3      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/buffer-lcm.c:45
0x0000adb5      49f7f0         div r8
0x0000adb8      4885d2         test rdx, rdx
0x0000adbb      752b           jne 0xade8
0x0000adbd      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/buffer-lcm.c:49
0x0000adbf      4889f8         mov rax, rdi
0x0000adc2      49f7f0         div r8
0x0000adc5      4989f0         mov r8, rsi                             ; ../coreutils-8.31/lib/buffer-lcm.c:50
0x0000adc8      4c0fafc0       imul r8, rax
0x0000adcc      4989c1         mov r9, rax                             ; ../coreutils-8.31/lib/buffer-lcm.c:49
0x0000adcf      4939c8         cmp r8, rcx                             ; ../coreutils-8.31/lib/buffer-lcm.c:51
0x0000add2      77c0           ja 0xad94
0x0000add4      31d2           xor edx, edx
0x0000add6      4c89c0         mov rax, r8
0x0000add9      48f7f6         div rsi
0x0000addc      4c39c8         cmp rax, r9
0x0000addf      75b3           jne 0xad94
0x0000ade1      ebbb           jmp 0xad9e
0x0000ade3      0f1f440000     nop dword [rax + rax]
0x0000ade8      4c89c0         mov rax, r8
0x0000adeb      4989d0         mov r8, rdx
0x0000adee      ebc3           jmp 0xadb3
;-- close_stdin_set_file_name:
0x0000adf0      48893d711721.  mov qword [obj.file_name], rdi          ; [0x21c568:8]=0
0x0000adf7      c3             ret                                     ; ../coreutils-8.31/lib/closein.c:46
0x0000adf8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdin:
0x0000ae00      4154           push r12                                ; ../coreutils-8.31/lib/closein.c:80
0x0000ae02      55             push rbp
0x0000ae03      53             push rbx
0x0000ae04      488b1dc51221.  mov rbx, qword [obj.stdin]              ; ../coreutils-8.31/lib/closein.c:87 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x21c0d0:8]=0
0x0000ae0b      4889df         mov rdi, rbx
0x0000ae0e      e89d620000     call sym.freadahead
0x0000ae13      4885c0         test rax, rax
0x0000ae16      0f859c000000   jne 0xaeb8
0x0000ae1c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/closein.c:94
0x0000ae1f      e8cc8b0000     call sym.close_stream
0x0000ae24      85c0           test eax, eax
0x0000ae26      7530           jne 0xae58
0x0000ae28      5b             pop rbx                                 ; ../coreutils-8.31/lib/closein.c:112
0x0000ae29      5d             pop rbp
0x0000ae2a      415c           pop r12
0x0000ae2c      e9ff000000     jmp sym.close_stdout                    ; ../coreutils-8.31/lib/closein.c:108
0x0000ae31      0f1f80000000.  nop dword [rax]
0x0000ae38      e833620000     call sym.rpl_fflush                     ; ../coreutils-8.31/lib/closein.c:91
0x0000ae3d      85c0           test eax, eax
0x0000ae3f      488b3d8a1221.  mov rdi, qword [obj.stdin]              ; ../coreutils-8.31/lib/closein.c:94 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x21c0d0:8]=0
0x0000ae46      0f848a000000   je 0xaed6                               ; ../coreutils-8.31/lib/closein.c:91
0x0000ae4c      e89f8b0000     call sym.close_stream                   ; ../coreutils-8.31/lib/closein.c:94
0x0000ae51      0f1f80000000.  nop dword [rax]
0x0000ae58      488d35a1ba00.  lea rsi, str.error_closing_file         ; ../coreutils-8.31/lib/closein.c:100 ; 0x16900 ; "error closing file"
0x0000ae5f      31ff           xor edi, edi
0x0000ae61      ba05000000     mov edx, 5
0x0000ae66      e8c578ffff     call sym.imp.dcgettext
0x0000ae6b      488b1df61621.  mov rbx, qword [obj.file_name]          ; ../coreutils-8.31/lib/closein.c:101 ; [0x21c568:8]=0
0x0000ae72      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/closein.c:100
0x0000ae75      e82677ffff     call sym.imp.__errno_location
0x0000ae7a      4889c5         mov rbp, rax
0x0000ae7d      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/closein.c:101
0x0000ae80      746e           je 0xaef0
0x0000ae82      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/closein.c:102
0x0000ae85      e816390000     call sym.quotearg_colon
0x0000ae8a      8b7500         mov esi, dword [rbp]
0x0000ae8d      488d157fba00.  lea rdx, str.s:__s                      ; 0x16913 ; "%s: %s"
0x0000ae94      4889c1         mov rcx, rax
0x0000ae97      4d89e0         mov r8, r12
0x0000ae9a      31ff           xor edi, edi
0x0000ae9c      31c0           xor eax, eax
0x0000ae9e      e86d7cffff     call sym.imp.error
0x0000aea3      e888000000     call sym.close_stdout                   ; ../coreutils-8.31/lib/closein.c:108
0x0000aea8      8b3d7a112100   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closein.c:111 ; [0x21c028:4]=1
0x0000aeae      e81d77ffff     call sym.imp._exit
0x0000aeb3      0f1f440000     nop dword [rax + rax]
0x0000aeb8      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/closein.c:91
0x0000aeba      4889df         mov rdi, rbx
0x0000aebd      ba01000000     mov edx, 1
0x0000aec2      e819620000     call sym.rpl_fseeko
0x0000aec7      85c0           test eax, eax
0x0000aec9      488b3d001221.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x21c0d0:8]=0
0x0000aed0      0f8462ffffff   je 0xae38
0x0000aed6      e8158b0000     call sym.close_stream                   ; ../coreutils-8.31/lib/closein.c:94
0x0000aedb      85c0           test eax, eax
0x0000aedd      0f8575ffffff   jne 0xae58
0x0000aee3      5b             pop rbx                                 ; ../coreutils-8.31/lib/closein.c:112
0x0000aee4      5d             pop rbp
0x0000aee5      415c           pop r12
0x0000aee7      e944000000     jmp sym.close_stdout                    ; ../coreutils-8.31/lib/closein.c:108
0x0000aeec      0f1f4000       nop dword [rax]
0x0000aef0      8b30           mov esi, dword [rax]                    ; ../coreutils-8.31/lib/closein.c:105
0x0000aef2      488d154ec500.  lea rdx, [0x00017447]                   ; "%s"
0x0000aef9      4c89e1         mov rcx, r12
0x0000aefc      31ff           xor edi, edi
0x0000aefe      31c0           xor eax, eax
0x0000af00      e80b7cffff     call sym.imp.error
0x0000af05      eb9c           jmp 0xaea3
0x0000af07      660f1f840000.  nop word [rax + rax]
;-- close_stdout_set_file_name:
0x0000af10      48893d611621.  mov qword [obj.file_name_1], rdi        ; ../coreutils-8.31/lib/closeout.c:52 ; [0x21c578:8]=0
0x0000af17      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x0000af18      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x0000af20      40883d491621.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x21c570:1]=0
0x0000af27      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x0000af28      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x0000af30      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x0000af31      53             push rbx
0x0000af32      4883ec08       sub rsp, 8
0x0000af36      488b3d8b1121.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0c8:8]=0
0x0000af3d      e8ae8a0000     call sym.close_stream
0x0000af42      85c0           test eax, eax
0x0000af44      7416           je 0xaf5c
0x0000af46      e85576ffff     call sym.imp.__errno_location
0x0000af4b      803d1e162100.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x21c570:1]=0
0x0000af52      4889c3         mov rbx, rax
0x0000af55      741c           je 0xaf73
0x0000af57      833820         cmp dword [rax], 0x20
0x0000af5a      7517           jne 0xaf73
0x0000af5c      488b3d9d1121.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c100:8]=0
0x0000af63      e8888a0000     call sym.close_stream
0x0000af68      85c0           test eax, eax
0x0000af6a      7546           jne 0xafb2
0x0000af6c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x0000af70      5b             pop rbx
0x0000af71      5d             pop rbp
0x0000af72      c3             ret
0x0000af73      488d35a0b900.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x1691a ; "write error"
0x0000af7a      31ff           xor edi, edi
0x0000af7c      ba05000000     mov edx, 5
0x0000af81      e8aa77ffff     call sym.imp.dcgettext
0x0000af86      488b3deb1521.  mov rdi, qword [obj.file_name_1]        ; ../coreutils-8.31/lib/closeout.c:123 ; [0x21c578:8]=0
0x0000af8d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x0000af90      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x0000af93      7428           je 0xafbd
0x0000af95      e806380000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000af9a      8b33           mov esi, dword [rbx]
0x0000af9c      488d1570b900.  lea rdx, str.s:__s                      ; 0x16913 ; "%s: %s"
0x0000afa3      4889c1         mov rcx, rax
0x0000afa6      4989e8         mov r8, rbp
0x0000afa9      31ff           xor edi, edi
0x0000afab      31c0           xor eax, eax
0x0000afad      e85e7bffff     call sym.imp.error
0x0000afb2      8b3d70102100   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x21c028:4]=1
0x0000afb8      e81376ffff     call sym.imp._exit
0x0000afbd      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000afbf      488d1581c400.  lea rdx, [0x00017447]                   ; "%s"
0x0000afc6      4889c1         mov rcx, rax
0x0000afc9      31ff           xor edi, edi
0x0000afcb      31c0           xor eax, eax
0x0000afcd      e83e7bffff     call sym.imp.error
0x0000afd2      ebde           jmp 0xafb2
0x0000afd4      662e0f1f8400.  nop word cs:[rax + rax]
0x0000afde      6690           nop
;-- dir_name:
0x0000afe0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/dirname.c:33
0x0000afe4      e877000000     call sym.mdir_name                      ; ../coreutils-8.31/lib/dirname.c:34
0x0000afe9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname.c:35
0x0000afec      7405           je 0xaff3
0x0000afee      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname.c:38
0x0000aff2      c3             ret
0x0000aff3      e8185f0000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/dirname.c:36
0x0000aff8      0f1f84000000.  nop dword [rax + rax]
;-- dir_len:
0x0000b000      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x0000b001      53             push rbx
0x0000b002      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x0000b004      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x0000b007      4883ec08       sub rsp, 8
0x0000b00b      803f2f         cmp byte [rdi], 0x2f                    ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x0000b00e      400f94c5       sete bpl
0x0000b012      e8a9000000     call sym.last_component                 ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x0000b017      4889c1         mov rcx, rax
0x0000b01a      4829d9         sub rcx, rbx
0x0000b01d      4839e9         cmp rcx, rbp
0x0000b020      762e           jbe 0xb050
0x0000b022      8078ff2f       cmp byte [rax - 1], 0x2f                ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x0000b026      488d51ff       lea rdx, [rcx - 1]
0x0000b02a      7412           je 0xb03e
0x0000b02c      eb22           jmp 0xb050
0x0000b02e      6690           nop
0x0000b030      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x0000b035      488d42ff       lea rax, [rdx - 1]
0x0000b039      7508           jne 0xb043
0x0000b03b      4889c2         mov rdx, rax
0x0000b03e      4839d5         cmp rbp, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x0000b041      75ed           jne 0xb030
0x0000b043      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x0000b047      4889d0         mov rax, rdx
0x0000b04a      5b             pop rbx
0x0000b04b      5d             pop rbp
0x0000b04c      c3             ret
0x0000b04d      0f1f00         nop dword [rax]
0x0000b050      4883c408       add rsp, 8
0x0000b054      4889ca         mov rdx, rcx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x0000b057      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x0000b05a      5b             pop rbx
0x0000b05b      5d             pop rbp
0x0000b05c      c3             ret
0x0000b05d      0f1f00         nop dword [rax]
;-- mdir_name:
0x0000b060      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:72
0x0000b061      53             push rbx
0x0000b062      4889fd         mov rbp, rdi
0x0000b065      4883ec08       sub rsp, 8
0x0000b069      e892ffffff     call sym.dir_len                        ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x0000b06e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x0000b071      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x0000b074      0f94c0         sete al                                 ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x0000b077      0fb6c0         movzx eax, al
0x0000b07a      488d7c0301     lea rdi, [rbx + rax + 1]                ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x0000b07f      e87c79ffff     call sym.imp.malloc
0x0000b084      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x0000b087      4889c1         mov rcx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x0000b08a      741a           je 0xb0a6                               ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x0000b08c      4889da         mov rdx, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000b08f      4889ee         mov rsi, rbp
0x0000b092      4889c7         mov rdi, rax
0x0000b095      e80679ffff     call sym.imp.memcpy
0x0000b09a      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x0000b09d      4889c1         mov rcx, rax                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000b0a0      740e           je 0xb0b0                               ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x0000b0a2      c6041900       mov byte [rcx + rbx], 0                 ; ../coreutils-8.31/lib/dirname-lgpl.c:84
0x0000b0a6      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:86
0x0000b0aa      4889c8         mov rax, rcx
0x0000b0ad      5b             pop rbx
0x0000b0ae      5d             pop rbp
0x0000b0af      c3             ret
0x0000b0b0      c6002e         mov byte [rax], 0x2e                    ; ../coreutils-8.31/lib/dirname-lgpl.c:83 ; '.'
                                                                       ; [0x2e:1]=0
0x0000b0b3      bb01000000     mov ebx, 1
0x0000b0b8      ebe8           jmp 0xb0a2
0x0000b0ba      660f1f440000   nop word [rax + rax]
;-- last_component:
0x0000b0c0      0fb617         movzx edx, byte [rdi]                   ; ../coreutils-8.31/lib/basename-lgpl.c:31
0x0000b0c3      4889f8         mov rax, rdi
0x0000b0c6      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x0000b0c9      7511           jne 0xb0dc
0x0000b0cb      0f1f440000     nop dword [rax + rax]
0x0000b0d0      4883c001       add rax, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:37
0x0000b0d4      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x0000b0d7      80fa2f         cmp dl, 0x2f
0x0000b0da      74f4           je 0xb0d0
0x0000b0dc      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000b0de      743a           je 0xb11a
0x0000b0e0      4889c1         mov rcx, rax
0x0000b0e3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:34
0x0000b0e5      eb1e           jmp 0xb105
0x0000b0e7      660f1f840000.  nop word [rax + rax]
0x0000b0f0      4084f6         test sil, sil                           ; ../coreutils-8.31/lib/basename-lgpl.c:43
0x0000b0f3      7405           je 0xb0fa
0x0000b0f5      4889c8         mov rax, rcx
0x0000b0f8      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:46
0x0000b0fa      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000b0fe      0fb611         movzx edx, byte [rcx]
0x0000b101      84d2           test dl, dl
0x0000b103      7415           je 0xb11a
0x0000b105      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:41
0x0000b108      75e6           jne 0xb0f0
0x0000b10a      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000b10e      0fb611         movzx edx, byte [rcx]
0x0000b111      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:42
0x0000b116      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000b118      75eb           jne 0xb105
0x0000b11a      f3c3           ret                                     ; ../coreutils-8.31/lib/basename-lgpl.c:51
0x0000b11c      0f1f4000       nop dword [rax]
;-- base_len:
0x0000b120      53             push rbx                                ; ../coreutils-8.31/lib/basename-lgpl.c:59
0x0000b121      4889fb         mov rbx, rdi
0x0000b124      e82776ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x0000b129      4883f801       cmp rax, 1
0x0000b12d      760b           jbe 0xb13a
0x0000b12f      807c03ff2f     cmp byte [rbx + rax - 1], 0x2f
0x0000b134      488d50ff       lea rdx, [rax - 1]
0x0000b138      740e           je 0xb148
0x0000b13a      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x0000b13b      c3             ret
0x0000b13c      0f1f4000       nop dword [rax]
0x0000b140      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x0000b143      0f1f440000     nop dword [rax + rax]
0x0000b148      4883fa01       cmp rdx, 1
0x0000b14c      7412           je 0xb160
0x0000b14e      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x0000b153      488d42ff       lea rax, [rdx - 1]
0x0000b157      74e7           je 0xb140
0x0000b159      4889d0         mov rax, rdx
0x0000b15c      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x0000b15d      c3             ret
0x0000b15e      6690           nop
0x0000b160      b801000000     mov eax, 1
0x0000b165      5b             pop rbx
0x0000b166      c3             ret
0x0000b167      660f1f840000.  nop word [rax + rax]
;-- strip_trailing_slashes:
0x0000b170      55             push rbp                                ; ../coreutils-8.31/lib/stripslash.c:32
0x0000b171      53             push rbx
0x0000b172      4889fd         mov rbp, rdi
0x0000b175      4883ec08       sub rsp, 8
0x0000b179      e842ffffff     call sym.last_component                 ; ../coreutils-8.31/lib/stripslash.c:33
0x0000b17e      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/stripslash.c:40
0x0000b181      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/stripslash.c:33
0x0000b184      480f44dd       cmove rbx, rbp                          ; ../coreutils-8.31/lib/stripslash.c:40
0x0000b188      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/stripslash.c:41
0x0000b18b      e890ffffff     call sym.base_len
0x0000b190      4801c3         add rbx, rax
0x0000b193      803b00         cmp byte [rbx], 0                       ; ../coreutils-8.31/lib/stripslash.c:42
0x0000b196      c60300         mov byte [rbx], 0                       ; ../coreutils-8.31/lib/stripslash.c:43
0x0000b199      0f95c0         setne al                                ; ../coreutils-8.31/lib/stripslash.c:42
0x0000b19c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/stripslash.c:45
0x0000b1a0      5b             pop rbx
0x0000b1a1      5d             pop rbp
0x0000b1a2      c3             ret
0x0000b1a3      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b1ad      0f1f00         nop dword [rax]
;-- fdadvise:
0x0000b1b0      e9fb76ffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x0000b1b5      90             nop
0x0000b1b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x0000b1c0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x0000b1c3      741b           je 0xb1e0
0x0000b1c5      53             push rbx
0x0000b1c6      89f3           mov ebx, esi
0x0000b1c8      e8f377ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x0000b1cd      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x0000b1cf      31d2           xor edx, edx
0x0000b1d1      31f6           xor esi, esi
0x0000b1d3      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x0000b1d4      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x0000b1d6      e9d576ffff     jmp sym.imp.posix_fadvise
0x0000b1db      0f1f440000     nop dword [rax + rax]
0x0000b1e0      f3c3           ret
0x0000b1e2      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b1ec      0f1f4000       nop dword [rax]
;-- open_safer:
0x0000b1f0      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/open-safer.c:30
0x0000b1f4      4889542430     mov qword [rsp + 0x30], rdx
0x0000b1f9      31d2           xor edx, edx
0x0000b1fb      64488b042528.  mov rax, qword fs:[0x28]
0x0000b204      4889442418     mov qword [rsp + 0x18], rax
0x0000b209      31c0           xor eax, eax
0x0000b20b      40f6c640       test sil, 0x40                          ; ../coreutils-8.31/lib/open-safer.c:33 ; segment.PHDR
0x0000b20f      7527           jne 0xb238
0x0000b211      31c0           xor eax, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x0000b213      e81879ffff     call sym.imp.open
0x0000b218      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/open-safer.c:45
0x0000b21a      e8d1430000     call sym.fd_safer
0x0000b21f      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/open-safer.c:46
0x0000b224      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000b22d      752a           jne 0xb259
0x0000b22f      4883c458       add rsp, 0x58
0x0000b233      c3             ret
0x0000b234      0f1f4000       nop dword [rax]
0x0000b238      488d442460     lea rax, [rsp + 0x60]                   ; ../coreutils-8.31/lib/open-safer.c:36
0x0000b23d      c70424100000.  mov dword [rsp], 0x10                   ; [0x10:4]=0x3e0003
0x0000b244      8b542430       mov edx, dword [rsp + 0x30]             ; ../coreutils-8.31/lib/open-safer.c:40
0x0000b248      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/open-safer.c:36
0x0000b24d      488d442420     lea rax, [rsp + 0x20]
0x0000b252      4889442410     mov qword [rsp + 0x10], rax
0x0000b257      ebb8           jmp 0xb211
0x0000b259      e82275ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/open-safer.c:46
0x0000b25e      6690           nop
;-- record_file:
0x0000b260      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/file-set.c:30
0x0000b263      747b           je 0xb2e0
0x0000b265      4155           push r13
0x0000b267      4154           push r12
0x0000b269      4989fd         mov r13, rdi
0x0000b26c      55             push rbp
0x0000b26d      53             push rbx
0x0000b26e      4989f4         mov r12, rsi
0x0000b271      bf18000000     mov edi, 0x18                           ; ../coreutils-8.31/lib/file-set.c:36
0x0000b276      4889d5         mov rbp, rdx
0x0000b279      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:30
0x0000b27d      e83e5a0000     call sym.xmalloc                        ; ../coreutils-8.31/lib/file-set.c:36
0x0000b282      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/file-set.c:37
0x0000b285      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/file-set.c:36
0x0000b288      e8635c0000     call sym.xstrdup                        ; ../coreutils-8.31/lib/file-set.c:37
0x0000b28d      488903         mov qword [rbx], rax
0x0000b290      488b4508       mov rax, qword [rbp + 8]                ; ../coreutils-8.31/lib/file-set.c:38
0x0000b294      4889de         mov rsi, rbx                            ; ../coreutils-8.31/lib/file-set.c:42
0x0000b297      4c89ef         mov rdi, r13
0x0000b29a      48894308       mov qword [rbx + 8], rax                ; ../coreutils-8.31/lib/file-set.c:38
0x0000b29e      488b4500       mov rax, qword [rbp]                    ; ../coreutils-8.31/lib/file-set.c:39
0x0000b2a2      48894310       mov qword [rbx + 0x10], rax
0x0000b2a6      e845150000     call sym.hash_insert                    ; ../coreutils-8.31/lib/file-set.c:42
0x0000b2ab      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/file-set.c:43
0x0000b2ae      7432           je 0xb2e2
0x0000b2b0      4839c3         cmp rbx, rax                            ; ../coreutils-8.31/lib/file-set.c:49
0x0000b2b3      741b           je 0xb2d0
0x0000b2b5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:56
0x0000b2b9      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/file-set.c:53
0x0000b2bc      5b             pop rbx                                 ; ../coreutils-8.31/lib/file-set.c:56
0x0000b2bd      5d             pop rbp
0x0000b2be      415c           pop r12
0x0000b2c0      415d           pop r13
0x0000b2c2      e949180000     jmp sym.triple_free                     ; ../coreutils-8.31/lib/file-set.c:53
0x0000b2c7      660f1f840000.  nop word [rax + rax]
0x0000b2d0      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:56
0x0000b2d4      5b             pop rbx
0x0000b2d5      5d             pop rbp
0x0000b2d6      415c           pop r12
0x0000b2d8      415d           pop r13
0x0000b2da      c3             ret
0x0000b2db      0f1f440000     nop dword [rax + rax]
0x0000b2e0      f3c3           ret
0x0000b2e2      e8295c0000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/file-set.c:46
0x0000b2e7      660f1f840000.  nop word [rax + rax]
;-- seen_file:
0x0000b2f0      4883ec28       sub rsp, 0x28                           ; ../coreutils-8.31/lib/file-set.c:63
0x0000b2f4      64488b042528.  mov rax, qword fs:[0x28]
0x0000b2fd      4889442418     mov qword [rsp + 0x18], rax
0x0000b302      31c0           xor eax, eax
0x0000b304      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/file-set.c:66
0x0000b307      7423           je 0xb32c
0x0000b309      488b4208       mov rax, qword [rdx + 8]                ; ../coreutils-8.31/lib/file-set.c:70
0x0000b30d      48893424       mov qword [rsp], rsi                    ; ../coreutils-8.31/lib/file-set.c:69
0x0000b311      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/file-set.c:73
0x0000b314      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/file-set.c:70
0x0000b319      488b02         mov rax, qword [rdx]                    ; ../coreutils-8.31/lib/file-set.c:71
0x0000b31c      4889442410     mov qword [rsp + 0x10], rax
0x0000b321      e85a0a0000     call sym.hash_lookup                    ; ../coreutils-8.31/lib/file-set.c:73
0x0000b326      4885c0         test rax, rax
0x0000b329      0f95c0         setne al
0x0000b32c      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/file-set.c:74
0x0000b331      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000b33a      7505           jne 0xb341
0x0000b33c      4883c428       add rsp, 0x28
0x0000b340      c3             ret
0x0000b341      e83a74ffff     call sym.imp.__stack_chk_fail
0x0000b346      662e0f1f8400.  nop word cs:[rax + rax]
;-- file_type:
0x0000b350      8b4718         mov eax, dword [rdi + 0x18]             ; ../coreutils-8.31/lib/file-type.c:30
0x0000b353      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/file-type.c:40
0x0000b358      2500f00000     and eax, 0xf000                         ; ../coreutils-8.31/lib/file-type.c:39
0x0000b35d      3d00800000     cmp eax, 0x8000
0x0000b362      744c           je 0xb3b0
0x0000b364      3d00400000     cmp eax, 0x4000                         ; ../coreutils-8.31/lib/file-type.c:42 ; u"%\xf0\u3d00\ua000"
0x0000b369      0f8491000000   je 0xb400
0x0000b36f      3d00a00000     cmp eax, 0xa000                         ; ../coreutils-8.31/lib/file-type.c:45
0x0000b374      746a           je 0xb3e0
0x0000b376      3d00600000     cmp eax, 0x6000                         ; ../coreutils-8.31/lib/file-type.c:65
0x0000b37b      0f848f000000   je 0xb410
0x0000b381      3d00200000     cmp eax, 0x2000                         ; ../coreutils-8.31/lib/file-type.c:68
0x0000b386      0f8494000000   je 0xb420
0x0000b38c      3d00100000     cmp eax, 0x1000                         ; ../coreutils-8.31/lib/file-type.c:74
0x0000b391      0f8499000000   je 0xb430
0x0000b397      3d00c00000     cmp eax, 0xc000                         ; ../coreutils-8.31/lib/file-type.c:104
0x0000b39c      7452           je 0xb3f0
0x0000b39e      488d35e5b500.  lea rsi, str.weird_file                 ; ../coreutils-8.31/lib/file-type.c:110 ; 0x1698a ; "weird file"
0x0000b3a5      31ff           xor edi, edi
0x0000b3a7      e98473ffff     jmp sym.imp.dcgettext
0x0000b3ac      0f1f4000       nop dword [rax]
0x0000b3b0      48837f3000     cmp qword [rdi + 0x30], 0               ; ../coreutils-8.31/lib/file-type.c:40
0x0000b3b5      7511           jne 0xb3c8
0x0000b3b7      488d3568b500.  lea rsi, str.regular_empty_file         ; 0x16926 ; "regular empty file"
0x0000b3be      31ff           xor edi, edi
0x0000b3c0      e96b73ffff     jmp sym.imp.dcgettext
0x0000b3c5      0f1f00         nop dword [rax]
0x0000b3c8      488d356ab500.  lea rsi, str.regular_file               ; 0x16939 ; "regular file"
0x0000b3cf      31ff           xor edi, edi
0x0000b3d1      e95a73ffff     jmp sym.imp.dcgettext
0x0000b3d6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b3e0      488d355fb500.  lea rsi, str.symbolic_link              ; ../coreutils-8.31/lib/file-type.c:46 ; 0x16946 ; "symbolic link"
0x0000b3e7      31ff           xor edi, edi
0x0000b3e9      e94273ffff     jmp sym.imp.dcgettext
0x0000b3ee      6690           nop
0x0000b3f0      488d358cb500.  lea rsi, str.socket                     ; ../coreutils-8.31/lib/file-type.c:105 ; 0x16983 ; "socket"
0x0000b3f7      31ff           xor edi, edi
0x0000b3f9      e93273ffff     jmp sym.imp.dcgettext
0x0000b3fe      6690           nop
0x0000b400      488d35139c00.  lea rsi, [0x0001501a]                   ; ../coreutils-8.31/lib/file-type.c:43 ; "directory"
0x0000b407      31ff           xor edi, edi
0x0000b409      e92273ffff     jmp sym.imp.dcgettext
0x0000b40e      6690           nop
0x0000b410      488d353db500.  lea rsi, str.block_special_file         ; ../coreutils-8.31/lib/file-type.c:66 ; 0x16954 ; "block special file"
0x0000b417      31ff           xor edi, edi
0x0000b419      e91273ffff     jmp sym.imp.dcgettext
0x0000b41e      6690           nop
0x0000b420      488d3540b500.  lea rsi, str.character_special_file     ; ../coreutils-8.31/lib/file-type.c:69 ; 0x16967 ; "character special file"
0x0000b427      31ff           xor edi, edi
0x0000b429      e90273ffff     jmp sym.imp.dcgettext
0x0000b42e      6690           nop
0x0000b430      488d3547b500.  lea rsi, str.fifo                       ; ../coreutils-8.31/lib/file-type.c:75 ; 0x1697e ; "fifo"
0x0000b437      31ff           xor edi, edi
0x0000b439      e9f272ffff     jmp sym.imp.dcgettext
0x0000b43e      6690           nop
;-- strmode:
0x0000b440      89fa           mov edx, edi
0x0000b442      b82d000000     mov eax, 0x2d                           ; '-'
0x0000b447      81e200f00000   and edx, 0xf000
0x0000b44d      81fa00800000   cmp edx, 0x8000
0x0000b453      745b           je 0xb4b0
0x0000b455      81fa00400000   cmp edx, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x0000b45b      b864000000     mov eax, 0x64                           ; 'd'
0x0000b460      744e           je 0xb4b0
0x0000b462      81fa00600000   cmp edx, 0x6000
0x0000b468      b862000000     mov eax, 0x62                           ; 'b'
0x0000b46d      7441           je 0xb4b0
0x0000b46f      81fa00200000   cmp edx, 0x2000
0x0000b475      b863000000     mov eax, 0x63                           ; 'c'
0x0000b47a      7434           je 0xb4b0
0x0000b47c      81fa00a00000   cmp edx, 0xa000
0x0000b482      b86c000000     mov eax, 0x6c                           ; 'l'
0x0000b487      7427           je 0xb4b0
0x0000b489      81fa00100000   cmp edx, 0x1000
0x0000b48f      b870000000     mov eax, 0x70                           ; 'p'
0x0000b494      741a           je 0xb4b0
0x0000b496      81fa00c00000   cmp edx, 0xc000
0x0000b49c      b873000000     mov eax, 0x73                           ; 's'
0x0000b4a1      ba3f000000     mov edx, 0x3f                           ; '?'
0x0000b4a6      0f45c2         cmovne eax, edx
0x0000b4a9      0f1f80000000.  nop dword [rax]
0x0000b4b0      8806           mov byte [rsi], al
0x0000b4b2      89f8           mov eax, edi
0x0000b4b4      2500010000     and eax, 0x100
0x0000b4b9      83f801         cmp eax, 1
0x0000b4bc      19c0           sbb eax, eax
0x0000b4be      83e0bb         and eax, 0xffffffbb                     ; 4294967227
0x0000b4c1      83c072         add eax, 0x72
0x0000b4c4      884601         mov byte [rsi + 1], al
0x0000b4c7      89f8           mov eax, edi
0x0000b4c9      2580000000     and eax, 0x80
0x0000b4ce      83f801         cmp eax, 1
0x0000b4d1      19c0           sbb eax, eax
0x0000b4d3      83e0b6         and eax, 0xffffffb6                     ; 4294967222
0x0000b4d6      83c077         add eax, 0x77
0x0000b4d9      884602         mov byte [rsi + 2], al
0x0000b4dc      89f8           mov eax, edi
0x0000b4de      83e040         and eax, 0x40                           ; segment.PHDR
0x0000b4e1      83f801         cmp eax, 1
0x0000b4e4      19c0           sbb eax, eax
0x0000b4e6      f7c700080000   test edi, 0x800
0x0000b4ec      0f849e000000   je 0xb590
0x0000b4f2      83e0e0         and eax, 0xffffffe0                     ; 4294967264
0x0000b4f5      83c073         add eax, 0x73
0x0000b4f8      884603         mov byte [rsi + 3], al
0x0000b4fb      89f8           mov eax, edi
0x0000b4fd      83e020         and eax, 0x20                           ; "@"
0x0000b500      83f801         cmp eax, 1
0x0000b503      19c0           sbb eax, eax
0x0000b505      83e0bb         and eax, 0xffffffbb                     ; 4294967227
0x0000b508      83c072         add eax, 0x72
0x0000b50b      884604         mov byte [rsi + 4], al
0x0000b50e      89f8           mov eax, edi
0x0000b510      83e010         and eax, 0x10
0x0000b513      83f801         cmp eax, 1
0x0000b516      19c0           sbb eax, eax
0x0000b518      83e0b6         and eax, 0xffffffb6                     ; 4294967222
0x0000b51b      83c077         add eax, 0x77
0x0000b51e      884605         mov byte [rsi + 5], al
0x0000b521      89f8           mov eax, edi
0x0000b523      83e008         and eax, 8
0x0000b526      83f801         cmp eax, 1
0x0000b529      19c0           sbb eax, eax
0x0000b52b      f7c700040000   test edi, 0x400
0x0000b531      0f8481000000   je 0xb5b8
0x0000b537      83e0e0         and eax, 0xffffffe0                     ; 4294967264
0x0000b53a      83c073         add eax, 0x73
0x0000b53d      884606         mov byte [rsi + 6], al
0x0000b540      89f8           mov eax, edi
0x0000b542      83e004         and eax, 4
0x0000b545      83f801         cmp eax, 1
0x0000b548      19c0           sbb eax, eax
0x0000b54a      83e0bb         and eax, 0xffffffbb                     ; 4294967227
0x0000b54d      83c072         add eax, 0x72
0x0000b550      884607         mov byte [rsi + 7], al
0x0000b553      89f8           mov eax, edi
0x0000b555      83e002         and eax, 2
0x0000b558      83f801         cmp eax, 1
0x0000b55b      19c0           sbb eax, eax
0x0000b55d      83e0b6         and eax, 0xffffffb6                     ; 4294967222
0x0000b560      83c077         add eax, 0x77
0x0000b563      884608         mov byte [rsi + 8], al
0x0000b566      89f8           mov eax, edi
0x0000b568      83e001         and eax, 1
0x0000b56b      83f801         cmp eax, 1
0x0000b56e      19c0           sbb eax, eax
0x0000b570      81e700020000   and edi, 0x200
0x0000b576      7428           je 0xb5a0
0x0000b578      83e0e0         and eax, 0xffffffe0                     ; 4294967264
0x0000b57b      83c074         add eax, 0x74
0x0000b57e      884609         mov byte [rsi + 9], al
0x0000b581      b820000000     mov eax, 0x20                           ; "@"
0x0000b586      6689460a       mov word [rsi + 0xa], ax
0x0000b58a      c3             ret
0x0000b58b      0f1f440000     nop dword [rax + rax]
0x0000b590      83e0b5         and eax, 0xffffffb5                     ; 4294967221
0x0000b593      83c078         add eax, 0x78
0x0000b596      e95dffffff     jmp 0xb4f8
0x0000b59b      0f1f440000     nop dword [rax + rax]
0x0000b5a0      83e0b5         and eax, 0xffffffb5                     ; 4294967221
0x0000b5a3      83c078         add eax, 0x78
0x0000b5a6      884609         mov byte [rsi + 9], al
0x0000b5a9      b820000000     mov eax, 0x20                           ; "@"
0x0000b5ae      6689460a       mov word [rsi + 0xa], ax
0x0000b5b2      c3             ret
0x0000b5b3      0f1f440000     nop dword [rax + rax]
0x0000b5b8      83e0b5         and eax, 0xffffffb5                     ; 4294967221
0x0000b5bb      83c078         add eax, 0x78
0x0000b5be      e97affffff     jmp 0xb53d
0x0000b5c3      0f1f00         nop dword [rax]
0x0000b5c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- filemodestring:
0x0000b5d0      8b7f18         mov edi, dword [rdi + 0x18]
0x0000b5d3      e968feffff     jmp sym.strmode
0x0000b5d8      0f1f84000000.  nop dword [rax + rax]
;-- file_name_concat:
0x0000b5e0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/filenamecat.c:36
0x0000b5e4      e817000000     call sym.mfile_name_concat              ; ../coreutils-8.31/lib/filenamecat.c:37
0x0000b5e9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/filenamecat.c:38
0x0000b5ec      7405           je 0xb5f3
0x0000b5ee      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/filenamecat.c:41
0x0000b5f2      c3             ret
0x0000b5f3      e818590000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/filenamecat.c:39
0x0000b5f8      0f1f84000000.  nop dword [rax + rax]
;-- mfile_name_concat:
0x0000b600      4157           push r15                                ; ../coreutils-8.31/lib/filenamecat-lgpl.c:48
0x0000b602      4156           push r14
0x0000b604      4989d7         mov r15, rdx
0x0000b607      4155           push r13
0x0000b609      4154           push r12
0x0000b60b      4989fc         mov r12, rdi
0x0000b60e      55             push rbp
0x0000b60f      53             push rbx
0x0000b610      4889f5         mov rbp, rsi
0x0000b613      4883ec18       sub rsp, 0x18
0x0000b617      e8a4faffff     call sym.last_component                 ; ../coreutils-8.31/lib/filenamecat-lgpl.c:49
0x0000b61c      4889c3         mov rbx, rax
0x0000b61f      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:50
0x0000b622      e8f9faffff     call sym.base_len
0x0000b627      4c29e3         sub rbx, r12                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:51
0x0000b62a      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:50
0x0000b62d      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x0000b630      4801c3         add rbx, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:51
0x0000b633      e81871ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x0000b638      4d85ed         test r13, r13                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:54
0x0000b63b      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x0000b63e      7430           je 0xb670                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:54
0x0000b640      41807c1cff2f   cmp byte [r12 + rbx - 1], 0x2f          ; ../coreutils-8.31/lib/filenamecat-lgpl.c:57
0x0000b646      0f84a4000000   je 0xb6f0
0x0000b64c      31c0           xor eax, eax
0x0000b64e      807d002f       cmp byte [rbp], 0x2f
0x0000b652      ba00000000     mov edx, 0
0x0000b657      0f95c0         setne al
0x0000b65a      48890424       mov qword [rsp], rax
0x0000b65e      b82f000000     mov eax, 0x2f                           ; '/'
0x0000b663      0f44c2         cmove eax, edx
0x0000b666      8844240f       mov byte [rsp + 0xf], al
0x0000b66a      eb22           jmp 0xb68e
0x0000b66c      0f1f4000       nop dword [rax]
0x0000b670      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:60
0x0000b672      807d002f       cmp byte [rbp], 0x2f
0x0000b676      ba00000000     mov edx, 0
0x0000b67b      0f94c0         sete al
0x0000b67e      48890424       mov qword [rsp], rax
0x0000b682      b82e000000     mov eax, 0x2e                           ; '.'
0x0000b687      0f45c2         cmovne eax, edx
0x0000b68a      8844240f       mov byte [rsp + 0xf], al
0x0000b68e      4a8d7c3301     lea rdi, [rbx + r14 + 1]                ; ../coreutils-8.31/lib/filenamecat-lgpl.c:70
0x0000b693      48033c24       add rdi, qword [rsp]
0x0000b697      e86473ffff     call sym.imp.malloc
0x0000b69c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:73
0x0000b69f      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:70
0x0000b6a2      7432           je 0xb6d6                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:73
0x0000b6a4      4889c7         mov rdi, rax                            ; string_fortified.h:48   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000b6a7      4889da         mov rdx, rbx
0x0000b6aa      4c89e6         mov rsi, r12
0x0000b6ad      e83e74ffff     call sym.imp.mempcpy
0x0000b6b2      0fb64c240f     movzx ecx, byte [rsp + 0xf]             ; ../coreutils-8.31/lib/filenamecat-lgpl.c:77
0x0000b6b7      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/filenamecat-lgpl.c:78
0x0000b6bb      4801c7         add rdi, rax
0x0000b6be      4d85ff         test r15, r15                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:80
0x0000b6c1      8808           mov byte [rax], cl                      ; ../coreutils-8.31/lib/filenamecat-lgpl.c:77
0x0000b6c3      7403           je 0xb6c8                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:80
0x0000b6c5      49893f         mov qword [r15], rdi                    ; ../coreutils-8.31/lib/filenamecat-lgpl.c:81
0x0000b6c8      4c89f2         mov rdx, r14                            ; string_fortified.h:48   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000b6cb      4889ee         mov rsi, rbp
0x0000b6ce      e81d74ffff     call sym.imp.mempcpy
0x0000b6d3      c60000         mov byte [rax], 0                       ; ../coreutils-8.31/lib/filenamecat-lgpl.c:84
0x0000b6d6      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:87
0x0000b6da      4c89e8         mov rax, r13
0x0000b6dd      5b             pop rbx
0x0000b6de      5d             pop rbp
0x0000b6df      415c           pop r12
0x0000b6e1      415d           pop r13
0x0000b6e3      415e           pop r14
0x0000b6e5      415f           pop r15
0x0000b6e7      c3             ret
0x0000b6e8      0f1f84000000.  nop dword [rax + rax]
0x0000b6f0      48c704240000.  mov qword [rsp], 0
0x0000b6f8      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/filenamecat-lgpl.c:53
0x0000b6fd      eb8f           jmp 0xb68e
0x0000b6ff      90             nop
;-- full_write:
0x0000b700      4155           push r13                                ; ../coreutils-8.31/lib/full-write.c:59
0x0000b702      4154           push r12
0x0000b704      55             push rbp
0x0000b705      53             push rbx
0x0000b706      4883ec08       sub rsp, 8
0x0000b70a      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/full-write.c:63
0x0000b70d      7462           je 0xb771
0x0000b70f      4189fd         mov r13d, edi
0x0000b712      4889f5         mov rbp, rsi
0x0000b715      4889d3         mov rbx, rdx
0x0000b718      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/full-write.c:60
0x0000b71b      eb13           jmp 0xb730
0x0000b71d      0f1f00         nop dword [rax]
0x0000b720      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/full-write.c:68
0x0000b723      7433           je 0xb758
0x0000b725      4901c4         add r12, rax                            ; ../coreutils-8.31/lib/full-write.c:73
0x0000b728      4801c5         add rbp, rax                            ; ../coreutils-8.31/lib/full-write.c:74
0x0000b72b      4829c3         sub rbx, rax                            ; ../coreutils-8.31/lib/full-write.c:63
0x0000b72e      7414           je 0xb744
0x0000b730      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/full-write.c:65
0x0000b733      4889ee         mov rsi, rbp
0x0000b736      4489ef         mov edi, r13d
0x0000b739      e872350000     call sym.safe_write
0x0000b73e      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/full-write.c:66
0x0000b742      75dc           jne 0xb720
0x0000b744      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/full-write.c:79
0x0000b748      4c89e0         mov rax, r12
0x0000b74b      5b             pop rbx
0x0000b74c      5d             pop rbp
0x0000b74d      415c           pop r12
0x0000b74f      415d           pop r13
0x0000b751      c3             ret
0x0000b752      660f1f440000   nop word [rax + rax]
0x0000b758      e8436effff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/full-write.c:70
0x0000b75d      c7001c000000   mov dword [rax], 0x1c                   ; [0x1c:4]=0
0x0000b763      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/full-write.c:79
0x0000b767      4c89e0         mov rax, r12
0x0000b76a      5b             pop rbx
0x0000b76b      5d             pop rbp
0x0000b76c      415c           pop r12
0x0000b76e      415d           pop r13
0x0000b770      c3             ret
0x0000b771      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/full-write.c:60
0x0000b774      ebce           jmp 0xb744                              ; ../coreutils-8.31/lib/full-write.c:78
0x0000b776      662e0f1f8400.  nop word cs:[rax + rax]
;-- next_prime:
0x0000b780      4883ff0a       cmp rdi, 0xa                            ; ../coreutils-8.31/lib/hash.c:464
0x0000b784      b80a000000     mov eax, 0xa
0x0000b789      49b9abaaaaaa.  movabs r9, 0xaaaaaaaaaaaaaaab
0x0000b793      480f42f8       cmovb rdi, rax
0x0000b797      4883cf01       or rdi, 1                               ; ../coreutils-8.31/lib/hash.c:470
0x0000b79b      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x0000b79f      746e           je 0xb80f
0x0000b7a1      0f1f80000000.  nop dword [rax]
0x0000b7a8      4889f8         mov rax, rdi
0x0000b7ab      4889f9         mov rcx, rdi
0x0000b7ae      49f7e1         mul r9
0x0000b7b1      4889d0         mov rax, rdx
0x0000b7b4      48d1e8         shr rax, 1
0x0000b7b7      488d0440       lea rax, [rax + rax*2]
0x0000b7bb      4829c1         sub rcx, rax
0x0000b7be      4883ff09       cmp rdi, 9                              ; ../coreutils-8.31/lib/hash.c:449
0x0000b7c2      4889c8         mov rax, rcx
0x0000b7c5      7639           jbe 0xb800
0x0000b7c7      4885c9         test rcx, rcx
0x0000b7ca      7439           je 0xb805
0x0000b7cc      41b810000000   mov r8d, 0x10
0x0000b7d2      be09000000     mov esi, 9                              ; ../coreutils-8.31/lib/hash.c:447
0x0000b7d7      b903000000     mov ecx, 3                              ; ../coreutils-8.31/lib/hash.c:446
0x0000b7dc      eb0b           jmp 0xb7e9
0x0000b7de      6690           nop
0x0000b7e0      4983c008       add r8, 8
0x0000b7e4      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:449
0x0000b7e7      741c           je 0xb805
0x0000b7e9      4883c102       add rcx, 2                              ; ../coreutils-8.31/lib/hash.c:453
0x0000b7ed      31d2           xor edx, edx
0x0000b7ef      4889f8         mov rax, rdi
0x0000b7f2      48f7f1         div rcx
0x0000b7f5      4c01c6         add rsi, r8                             ; ../coreutils-8.31/lib/hash.c:452
0x0000b7f8      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/hash.c:449
0x0000b7fb      4889d0         mov rax, rdx
0x0000b7fe      72e0           jb 0xb7e0
0x0000b800      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:472
0x0000b803      750a           jne 0xb80f
0x0000b805      4883c702       add rdi, 2                              ; ../coreutils-8.31/lib/hash.c:473
0x0000b809      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x0000b80d      7599           jne 0xb7a8
0x0000b80f      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:476
0x0000b812      c3             ret
0x0000b813      0f1f00         nop dword [rax]
0x0000b816      662e0f1f8400.  nop word cs:[rax + rax]
;-- raw_hasher:
0x0000b820      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:487
0x0000b823      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash.c:494
0x0000b825      48c1c803       ror rax, 3                              ; ../coreutils-8.31/lib/bitrotate.h:87
0x0000b829      48f7f6         div rsi                                 ; ../coreutils-8.31/lib/hash.c:494
0x0000b82c      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash.c:495
0x0000b82f      c3             ret
;-- raw_comparator:
0x0000b830      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/hash.c:500
0x0000b833      0f94c0         sete al
0x0000b836      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:502
0x0000b837      660f1f840000.  nop word [rax + rax]
;-- safe_hasher:
0x0000b840      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:250
0x0000b841      4889fb         mov rbx, rdi
0x0000b844      4889f7         mov rdi, rsi
0x0000b847      488b7310       mov rsi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/hash.c:251
0x0000b84b      ff5330         call qword [rbx + 0x30]
0x0000b84e      48394310       cmp qword [rbx + 0x10], rax             ; ../coreutils-8.31/lib/hash.c:252
0x0000b852      7609           jbe 0xb85d
0x0000b854      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/hash.c:254
0x0000b858      480303         add rax, qword [rbx]
0x0000b85b      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:255
0x0000b85c      c3             ret
0x0000b85d      e82e6dffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/hash.c:253
0x0000b862      0f1f4000       nop dword [rax]
0x0000b866      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_find_entry:
0x0000b870      4156           push r14                                ; ../coreutils-8.31/lib/hash.c:792
0x0000b872      4155           push r13
0x0000b874      4989d6         mov r14, rdx
0x0000b877      4154           push r12
0x0000b879      55             push rbp
0x0000b87a      4989fc         mov r12, rdi
0x0000b87d      53             push rbx
0x0000b87e      4889f5         mov rbp, rsi
0x0000b881      4189cd         mov r13d, ecx
0x0000b884      e8b7ffffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:793
0x0000b889      498906         mov qword [r14], rax                    ; ../coreutils-8.31/lib/hash.c:796
0x0000b88c      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:799
0x0000b88f      4885f6         test rsi, rsi
0x0000b892      0f84e8000000   je 0xb980
0x0000b898      4839ee         cmp rsi, rbp                            ; ../coreutils-8.31/lib/hash.c:803
0x0000b89b      4889c3         mov rbx, rax
0x0000b89e      0f848f000000   je 0xb933
0x0000b8a4      4889ef         mov rdi, rbp
0x0000b8a7      41ff542438     call qword [r12 + 0x38]
0x0000b8ac      84c0           test al, al
0x0000b8ae      0f857c000000   jne 0xb930
0x0000b8b4      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x0000b8b8      4885c0         test rax, rax
0x0000b8bb      0f84bf000000   je 0xb980
0x0000b8c1      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x0000b8c4      4839f5         cmp rbp, rsi
0x0000b8c7      7520           jne 0xb8e9
0x0000b8c9      eb31           jmp 0xb8fc
0x0000b8cb      0f1f440000     nop dword [rax + rax]
0x0000b8d0      488b5b08       mov rbx, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x0000b8d4      488b4308       mov rax, qword [rbx + 8]
0x0000b8d8      4885c0         test rax, rax
0x0000b8db      0f849f000000   je 0xb980
0x0000b8e1      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x0000b8e4      4839ee         cmp rsi, rbp
0x0000b8e7      7413           je 0xb8fc
0x0000b8e9      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:831
0x0000b8ec      41ff542438     call qword [r12 + 0x38]
0x0000b8f1      84c0           test al, al
0x0000b8f3      74db           je 0xb8d0
0x0000b8f5      488b4308       mov rax, qword [rbx + 8]
0x0000b8f9      488b30         mov rsi, qword [rax]
0x0000b8fc      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/hash.c:835
0x0000b8ff      741d           je 0xb91e
0x0000b901      488b5008       mov rdx, qword [rax + 8]                ; ../coreutils-8.31/lib/hash.c:841
0x0000b905      48895308       mov qword [rbx + 8], rdx
0x0000b909      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/hash.c:778
0x0000b910      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:779
0x0000b915      48895008       mov qword [rax + 8], rdx
0x0000b919      4989442448     mov qword [r12 + 0x48], rax             ; ../coreutils-8.31/lib/hash.c:780
0x0000b91e      5b             pop rbx
0x0000b91f      4889f0         mov rax, rsi
0x0000b922      5d             pop rbp
0x0000b923      415c           pop r12
0x0000b925      415d           pop r13
0x0000b927      415e           pop r14
0x0000b929      c3             ret
0x0000b92a      660f1f440000   nop word [rax + rax]
0x0000b930      488b33         mov rsi, qword [rbx]
0x0000b933      4584ed         test r13b, r13b
0x0000b936      74e6           je 0xb91e
0x0000b938      488b4308       mov rax, qword [rbx + 8]
0x0000b93c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:672
0x0000b93f      742f           je 0xb970
0x0000b941      f30f6f00       movdqu xmm0, xmmword [rax]
0x0000b945      0f1103         movups xmmword [rbx], xmm0
0x0000b948      48c700000000.  mov qword [rax], 0
0x0000b94f      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:388
0x0000b954      48895008       mov qword [rax + 8], rdx
0x0000b958      4989442448     mov qword [r12 + 0x48], rax
0x0000b95d      4889f0         mov rax, rsi
0x0000b960      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:398
0x0000b961      5d             pop rbp
0x0000b962      415c           pop r12
0x0000b964      415d           pop r13
0x0000b966      415e           pop r14
0x0000b968      c3             ret
0x0000b969      0f1f80000000.  nop dword [rax]
0x0000b970      48c703000000.  mov qword [rbx], 0
0x0000b977      eba5           jmp 0xb91e
0x0000b979      0f1f80000000.  nop dword [rax]
0x0000b980      31f6           xor esi, esi
0x0000b982      5b             pop rbx
0x0000b983      4889f0         mov rax, rsi
0x0000b986      5d             pop rbp
0x0000b987      415c           pop r12
0x0000b989      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:401
0x0000b98b      415e           pop r14
0x0000b98d      c3             ret
0x0000b98e      6690           nop
;-- check_tuning.isra.0:
0x0000b990      488b17         mov rdx, qword [rdi]
0x0000b993      488d0d76b000.  lea rcx, obj.default_tuning             ; 0x16a10
0x0000b99a      b801000000     mov eax, 1
0x0000b99f      4839ca         cmp rdx, rcx
0x0000b9a2      7461           je 0xba05
0x0000b9a4      f30f104208     movss xmm0, dword [rdx + 8]
0x0000b9a9      0f2e0574b000.  ucomiss xmm0, dword [0x00016a24]
0x0000b9b0      764e           jbe 0xba00
0x0000b9b2      f30f100d6eb0.  movss xmm1, dword [0x00016a28]          ; [0x16a28:4]=0x3f666666
0x0000b9ba      0f2ec8         ucomiss xmm1, xmm0
0x0000b9bd      7641           jbe 0xba00
0x0000b9bf      f30f104a0c     movss xmm1, dword [rdx + 0xc]           ; ../coreutils-8.31/lib/hash.c:408
0x0000b9c4      0f2e0d61b000.  ucomiss xmm1, dword [0x00016a2c]
0x0000b9cb      7633           jbe 0xba00
0x0000b9cd      f30f100a       movss xmm1, dword [rdx]
0x0000b9d1      0f2e0d58b000.  ucomiss xmm1, dword [0x00016a30]
0x0000b9d8      7226           jb 0xba00
0x0000b9da      f30f580d42b0.  addss xmm1, dword [0x00016a24]          ; ../coreutils-8.31/lib/hash.c:737
0x0000b9e2      f30f105204     movss xmm2, dword [rdx + 4]
0x0000b9e7      0f2ed1         ucomiss xmm2, xmm1
0x0000b9ea      7614           jbe 0xba00
0x0000b9ec      f30f101d40b0.  movss xmm3, dword [0x00016a34]          ; [0x16a34:4]=0x3f800000
0x0000b9f4      0f2eda         ucomiss xmm3, xmm2                      ; ../coreutils-8.31/lib/hash.c:738
0x0000b9f7      7207           jb 0xba00
0x0000b9f9      0f2ec1         ucomiss xmm0, xmm1
0x0000b9fc      7707           ja 0xba05
0x0000b9fe      6690           nop
0x0000ba00      48890f         mov qword [rdi], rcx
0x0000ba03      31c0           xor eax, eax
0x0000ba05      f3c3           ret
0x0000ba07      660f1f840000.  nop word [rax + rax]
;-- transfer_entries:
0x0000ba10      4157           push r15
0x0000ba12      4156           push r14
0x0000ba14      4155           push r13                                ; ../coreutils-8.31/lib/hash.c:760
0x0000ba16      4154           push r12
0x0000ba18      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:749
0x0000ba19      53             push rbx
0x0000ba1a      4883ec08       sub rsp, 8
0x0000ba1e      4c8b26         mov r12, qword [rsi]
0x0000ba21      4c3b6608       cmp r12, qword [rsi + 8]
0x0000ba25      0f83dd000000   jae 0xbb08
0x0000ba2b      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:752
0x0000ba2e      4989f5         mov r13, rsi
0x0000ba31      4189d6         mov r14d, edx
0x0000ba34      0f1f4000       nop dword [rax]
0x0000ba38      4d8b3c24       mov r15, qword [r12]
0x0000ba3c      4d85ff         test r15, r15
0x0000ba3f      0f84b5000000   je 0xbafa
0x0000ba45      498b5c2408     mov rbx, qword [r12 + 8]
0x0000ba4a      4885db         test rbx, rbx
0x0000ba4d      751d           jne 0xba6c
0x0000ba4f      eb5a           jmp 0xbaab
0x0000ba51      0f1f80000000.  nop dword [rax]
0x0000ba58      488b4808       mov rcx, qword [rax + 8]
0x0000ba5c      4885d2         test rdx, rdx
0x0000ba5f      48894b08       mov qword [rbx + 8], rcx                ; ../coreutils-8.31/lib/bitrotate.h:557
0x0000ba63      48895808       mov qword [rax + 8], rbx
0x0000ba67      4889d3         mov rbx, rdx
0x0000ba6a      743b           je 0xbaa7
0x0000ba6c      4c8b3b         mov r15, qword [rbx]
0x0000ba6f      4889ef         mov rdi, rbp
0x0000ba72      4c89fe         mov rsi, r15
0x0000ba75      e8c6fdffff     call sym.safe_hasher
0x0000ba7a      48833800       cmp qword [rax], 0
0x0000ba7e      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:329
0x0000ba82      75d4           jne 0xba58
0x0000ba84      4c8938         mov qword [rax], r15
0x0000ba87      4883451801     add qword [rbp + 0x18], 1
0x0000ba8c      4885d2         test rdx, rdx
0x0000ba8f      48c703000000.  mov qword [rbx], 0
0x0000ba96      488b4548       mov rax, qword [rbp + 0x48]
0x0000ba9a      48894308       mov qword [rbx + 8], rax
0x0000ba9e      48895d48       mov qword [rbp + 0x48], rbx             ; ../coreutils-8.31/lib/bitrotate.h:-285
0x0000baa2      4889d3         mov rbx, rdx                            ; ../coreutils-8.31/lib/bitrotate.h:-283
0x0000baa5      75c5           jne 0xba6c
0x0000baa7      4d8b3c24       mov r15, qword [r12]
0x0000baab      4584f6         test r14b, r14b
0x0000baae      49c744240800.  mov qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/bitrotate.h:-277
0x0000bab7      7541           jne 0xbafa
0x0000bab9      4c89fe         mov rsi, r15
0x0000babc      4889ef         mov rdi, rbp
0x0000babf      e87cfdffff     call sym.safe_hasher
0x0000bac4      48833800       cmp qword [rax], 0
0x0000bac8      4889c3         mov rbx, rax
0x0000bacb      7453           je 0xbb20
0x0000bacd      488b4548       mov rax, qword [rbp + 0x48]
0x0000bad1      4885c0         test rax, rax
0x0000bad4      745a           je 0xbb30
0x0000bad6      488b5008       mov rdx, qword [rax + 8]
0x0000bada      48895548       mov qword [rbp + 0x48], rdx
0x0000bade      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:-255
0x0000bae2      4c8938         mov qword [rax], r15
0x0000bae5      48895008       mov qword [rax + 8], rdx
0x0000bae9      48894308       mov qword [rbx + 8], rax
0x0000baed      49c704240000.  mov qword [r12], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-250
0x0000baf5      49836d1801     sub qword [r13 + 0x18], 1
0x0000bafa      4983c410       add r12, 0x10                           ; ../coreutils-8.31/lib/bitrotate.h:-249
0x0000bafe      4d396508       cmp qword [r13 + 8], r12                ; ../coreutils-8.31/lib/bitrotate.h:-250
0x0000bb02      0f8730ffffff   ja 0xba38
0x0000bb08      4883c408       add rsp, 8
0x0000bb0c      b801000000     mov eax, 1
0x0000bb11      5b             pop rbx
0x0000bb12      5d             pop rbp
0x0000bb13      415c           pop r12
0x0000bb15      415d           pop r13                                 ; ../coreutils-8.31/lib/bitrotate.h:-241
0x0000bb17      415e           pop r14
0x0000bb19      415f           pop r15
0x0000bb1b      c3             ret
0x0000bb1c      0f1f4000       nop dword [rax]
0x0000bb20      4c8938         mov qword [rax], r15
0x0000bb23      4883451801     add qword [rbp + 0x18], 1
0x0000bb28      ebc3           jmp 0xbaed
0x0000bb2a      660f1f440000   nop word [rax + rax]
0x0000bb30      bf10000000     mov edi, 0x10
0x0000bb35      e8c66effff     call sym.imp.malloc
0x0000bb3a      4885c0         test rax, rax
0x0000bb3d      759f           jne 0xbade
0x0000bb3f      4883c408       add rsp, 8
0x0000bb43      31c0           xor eax, eax
0x0000bb45      5b             pop rbx
0x0000bb46      5d             pop rbp
0x0000bb47      415c           pop r12
0x0000bb49      415d           pop r13
0x0000bb4b      415e           pop r14
0x0000bb4d      415f           pop r15
0x0000bb4f      c3             ret
;-- hash_get_n_buckets:
0x0000bb50      488b4710       mov rax, qword [rdi + 0x10]
0x0000bb54      c3             ret
0x0000bb55      90             nop
0x0000bb56      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-218
;-- hash_get_n_buckets_used:
0x0000bb60      488b4718       mov rax, qword [rdi + 0x18]
0x0000bb64      c3             ret                                     ; ../coreutils-8.31/lib/bitrotate.h:-210
0x0000bb65      90             nop
0x0000bb66      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-213
;-- hash_get_n_entries:
0x0000bb70      488b4720       mov rax, qword [rdi + 0x20]
0x0000bb74      c3             ret
0x0000bb75      90             nop                                     ; ../coreutils-8.31/lib/bitrotate.h:-209
0x0000bb76      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_max_bucket_length:
0x0000bb80      488b37         mov rsi, qword [rdi]
0x0000bb83      488b7f08       mov rdi, qword [rdi + 8]
0x0000bb87      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/bitrotate.h:-259
0x0000bb89      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/bitrotate.h:-205
0x0000bb8c      7339           jae 0xbbc7
0x0000bb8e      6690           nop
0x0000bb90      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-268
0x0000bb94      7426           je 0xbbbc                               ; ../coreutils-8.31/lib/bitrotate.h:-284
0x0000bb96      488b5608       mov rdx, qword [rsi + 8]
0x0000bb9a      b901000000     mov ecx, 1
0x0000bb9f      4885d2         test rdx, rdx
0x0000bba2      7411           je 0xbbb5
0x0000bba4      0f1f4000       nop dword [rax]
0x0000bba8      488b5208       mov rdx, qword [rdx + 8]
0x0000bbac      4883c101       add rcx, 1
0x0000bbb0      4885d2         test rdx, rdx
0x0000bbb3      75f3           jne 0xbba8
0x0000bbb5      4839c8         cmp rax, rcx
0x0000bbb8      480f42c1       cmovb rax, rcx                          ; ../coreutils-8.31/lib/bitrotate.h:-252
0x0000bbbc      4883c610       add rsi, 0x10
0x0000bbc0      4839fe         cmp rsi, rdi
0x0000bbc3      72cb           jb 0xbb90
0x0000bbc5      f3c3           ret
0x0000bbc7      f3c3           ret
0x0000bbc9      0f1f80000000.  nop dword [rax]
;-- hash_table_ok:
0x0000bbd0      488b0f         mov rcx, qword [rdi]
0x0000bbd3      4c8b4708       mov r8, qword [rdi + 8]
0x0000bbd7      31d2           xor edx, edx
0x0000bbd9      31f6           xor esi, esi
0x0000bbdb      4c39c1         cmp rcx, r8
0x0000bbde      7336           jae 0xbc16
0x0000bbe0      48833900       cmp qword [rcx], 0
0x0000bbe4      7427           je 0xbc0d
0x0000bbe6      488b4108       mov rax, qword [rcx + 8]
0x0000bbea      4883c601       add rsi, 1
0x0000bbee      4883c201       add rdx, 1
0x0000bbf2      4885c0         test rax, rax
0x0000bbf5      7416           je 0xbc0d
0x0000bbf7      660f1f840000.  nop word [rax + rax]
0x0000bc00      488b4008       mov rax, qword [rax + 8]
0x0000bc04      4883c201       add rdx, 1
0x0000bc08      4885c0         test rax, rax
0x0000bc0b      75f3           jne 0xbc00
0x0000bc0d      4883c110       add rcx, 0x10
0x0000bc11      4c39c1         cmp rcx, r8
0x0000bc14      72ca           jb 0xbbe0
0x0000bc16      31c0           xor eax, eax
0x0000bc18      48397718       cmp qword [rdi + 0x18], rsi
0x0000bc1c      7402           je 0xbc20
0x0000bc1e      f3c3           ret                                     ; ../coreutils-8.31/lib/hash.c:-195
0x0000bc20      48395720       cmp qword [rdi + 0x20], rdx
0x0000bc24      0f94c0         sete al
0x0000bc27      c3             ret
0x0000bc28      0f1f84000000.  nop dword [rax + rax]
;-- hash_print_statistics:
0x0000bc30      4155           push r13
0x0000bc32      4154           push r12
0x0000bc34      4989f4         mov r12, rsi
0x0000bc37      55             push rbp
0x0000bc38      53             push rbx
0x0000bc39      31db           xor ebx, ebx
0x0000bc3b      4883ec08       sub rsp, 8
0x0000bc3f      488b37         mov rsi, qword [rdi]
0x0000bc42      488b4f20       mov rcx, qword [rdi + 0x20]
0x0000bc46      488b6f10       mov rbp, qword [rdi + 0x10]
0x0000bc4a      4c8b6f18       mov r13, qword [rdi + 0x18]
0x0000bc4e      488b7f08       mov rdi, qword [rdi + 8]
0x0000bc52      4839fe         cmp rsi, rdi
0x0000bc55      733e           jae 0xbc95
0x0000bc57      660f1f840000.  nop word [rax + rax]
0x0000bc60      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/hash.c:-192
0x0000bc64      7426           je 0xbc8c
0x0000bc66      488b4608       mov rax, qword [rsi + 8]                ; stdio2.h:-339
0x0000bc6a      ba01000000     mov edx, 1
0x0000bc6f      4885c0         test rax, rax
0x0000bc72      7411           je 0xbc85
0x0000bc74      0f1f4000       nop dword [rax]
0x0000bc78      488b4008       mov rax, qword [rax + 8]
0x0000bc7c      4883c201       add rdx, 1
0x0000bc80      4885c0         test rax, rax
0x0000bc83      75f3           jne 0xbc78
0x0000bc85      4839d3         cmp rbx, rdx
0x0000bc88      480f42da       cmovb rbx, rdx
0x0000bc8c      4883c610       add rsi, 0x10
0x0000bc90      4839fe         cmp rsi, rdi
0x0000bc93      72cb           jb 0xbc60
0x0000bc95      488d15f9ac00.  lea rdx, str.entries:__________lu       ; 0x16995 ; "# entries:         %lu\n"
0x0000bc9c      be01000000     mov esi, 1
0x0000bca1      4c89e7         mov rdi, r12
0x0000bca4      31c0           xor eax, eax
0x0000bca6      e8756fffff     call sym.imp.__fprintf_chk
0x0000bcab      488d15fbac00.  lea rdx, str.buckets:__________lu       ; 0x169ad ; "# buckets:         %lu\n"
0x0000bcb2      31c0           xor eax, eax
0x0000bcb4      4889e9         mov rcx, rbp
0x0000bcb7      be01000000     mov esi, 1
0x0000bcbc      4c89e7         mov rdi, r12
0x0000bcbf      e85c6fffff     call sym.imp.__fprintf_chk
0x0000bcc4      4d85ed         test r13, r13
0x0000bcc7      7867           js 0xbd30
0x0000bcc9      660fefc0       pxor xmm0, xmm0
0x0000bccd      4885ed         test rbp, rbp
0x0000bcd0      f2490f2ac5     cvtsi2sd xmm0, r13
0x0000bcd5      f20f59056bad.  mulsd xmm0, qword [0x00016a48]          ; ../coreutils-8.31/lib/hash.c:-174
0x0000bcdd      787a           js 0xbd59                               ; ../coreutils-8.31/lib/hash.c:-170
0x0000bcdf      660fefc9       pxor xmm1, xmm1
0x0000bce3      f2480f2acd     cvtsi2sd xmm1, rbp
0x0000bce8      f20f5ec1       divsd xmm0, xmm1
0x0000bcec      488d15edac00.  lea rdx, str.buckets_used:_____lu___.2f ; 0x169e0 ; "# buckets used:    %lu (%.2f%%)\n"
0x0000bcf3      4c89e9         mov rcx, r13
0x0000bcf6      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/hash.c:-166
0x0000bcf9      be01000000     mov esi, 1
0x0000bcfe      b801000000     mov eax, 1
0x0000bd03      e8186fffff     call sym.imp.__fprintf_chk
0x0000bd08      4883c408       add rsp, 8
0x0000bd0c      4889d9         mov rcx, rbx
0x0000bd0f      4c89e7         mov rdi, r12
0x0000bd12      5b             pop rbx
0x0000bd13      5d             pop rbp
0x0000bd14      415c           pop r12
0x0000bd16      415d           pop r13
0x0000bd18      488d15a6ac00.  lea rdx, str.max_bucket_length:__lu     ; 0x169c5 ; "max bucket length: %lu\n"
0x0000bd1f      be01000000     mov esi, 1
0x0000bd24      31c0           xor eax, eax
0x0000bd26      e9f56effff     jmp sym.imp.__fprintf_chk
0x0000bd2b      0f1f440000     nop dword [rax + rax]
0x0000bd30      4c89e8         mov rax, r13
0x0000bd33      4c89ea         mov rdx, r13
0x0000bd36      660fefc0       pxor xmm0, xmm0
0x0000bd3a      48d1e8         shr rax, 1
0x0000bd3d      83e201         and edx, 1
0x0000bd40      4809d0         or rax, rdx
0x0000bd43      4885ed         test rbp, rbp
0x0000bd46      f2480f2ac0     cvtsi2sd xmm0, rax
0x0000bd4b      f20f58c0       addsd xmm0, xmm0
0x0000bd4f      f20f5905f1ac.  mulsd xmm0, qword [0x00016a48]
0x0000bd57      7986           jns 0xbcdf                              ; ../coreutils-8.31/lib/hash.c:-138
0x0000bd59      4889e8         mov rax, rbp
0x0000bd5c      660fefc9       pxor xmm1, xmm1
0x0000bd60      48d1e8         shr rax, 1
0x0000bd63      83e501         and ebp, 1                              ; ../coreutils-8.31/lib/hash.c:-136
0x0000bd66      4809e8         or rax, rbp                             ; ../coreutils-8.31/lib/hash.c:-147
0x0000bd69      f2480f2ac8     cvtsi2sd xmm1, rax
0x0000bd6e      f20f58c9       addsd xmm1, xmm1
0x0000bd72      e971ffffff     jmp 0xbce8
0x0000bd77      660f1f840000.  nop word [rax + rax]
;-- hash_lookup:
0x0000bd80      4154           push r12
0x0000bd82      55             push rbp
0x0000bd83      4989fc         mov r12, rdi
0x0000bd86      53             push rbx
0x0000bd87      4889f5         mov rbp, rsi
0x0000bd8a      e8b1faffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:-127
0x0000bd8f      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:-123
0x0000bd92      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/hash.c:-127
0x0000bd95      7426           je 0xbdbd                               ; ../coreutils-8.31/lib/hash.c:-120
0x0000bd97      4889c3         mov rbx, rax
0x0000bd9a      eb07           jmp 0xbda3
0x0000bd9c      0f1f4000       nop dword [rax]
0x0000bda0      488b33         mov rsi, qword [rbx]
0x0000bda3      4839ee         cmp rsi, rbp
0x0000bda6      7417           je 0xbdbf                               ; ../coreutils-8.31/lib/hash.c:-116
0x0000bda8      4889ef         mov rdi, rbp
0x0000bdab      41ff542438     call qword [r12 + 0x38]                 ; ../coreutils-8.31/lib/hash.c:-120
0x0000bdb0      84c0           test al, al
0x0000bdb2      751c           jne 0xbdd0
0x0000bdb4      488b5b08       mov rbx, qword [rbx + 8]
0x0000bdb8      4885db         test rbx, rbx
0x0000bdbb      75e3           jne 0xbda0
0x0000bdbd      31f6           xor esi, esi
0x0000bdbf      5b             pop rbx
0x0000bdc0      4889f0         mov rax, rsi
0x0000bdc3      5d             pop rbp
0x0000bdc4      415c           pop r12
0x0000bdc6      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-112
0x0000bdc7      660f1f840000.  nop word [rax + rax]
0x0000bdd0      488b33         mov rsi, qword [rbx]
0x0000bdd3      5b             pop rbx
0x0000bdd4      5d             pop rbp
0x0000bdd5      4889f0         mov rax, rsi
0x0000bdd8      415c           pop r12
0x0000bdda      c3             ret
0x0000bddb      0f1f440000     nop dword [rax + rax]
;-- hash_get_first:
0x0000bde0      48837f2000     cmp qword [rdi + 0x20], 0
0x0000bde5      742c           je 0xbe13
0x0000bde7      488b17         mov rdx, qword [rdi]
0x0000bdea      488b4f08       mov rcx, qword [rdi + 8]
0x0000bdee      4839ca         cmp rdx, rcx
0x0000bdf1      7325           jae 0xbe18
0x0000bdf3      488b02         mov rax, qword [rdx]
0x0000bdf6      4885c0         test rax, rax
0x0000bdf9      751b           jne 0xbe16
0x0000bdfb      0f1f440000     nop dword [rax + rax]
0x0000be00      4883c210       add rdx, 0x10
0x0000be04      4839ca         cmp rdx, rcx
0x0000be07      730f           jae 0xbe18                              ; ../coreutils-8.31/lib/hash.c:-97
0x0000be09      488b02         mov rax, qword [rdx]
0x0000be0c      4885c0         test rax, rax
0x0000be0f      74ef           je 0xbe00
0x0000be11      f3c3           ret
0x0000be13      31c0           xor eax, eax
0x0000be15      c3             ret
0x0000be16      f3c3           ret
0x0000be18      4883ec08       sub rsp, 8
0x0000be1c      e86f67ffff     call sym.imp.abort
0x0000be21      0f1f440000     nop dword [rax + rax]
0x0000be26      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_next:
0x0000be30      55             push rbp
0x0000be31      53             push rbx
0x0000be32      4889fd         mov rbp, rdi
0x0000be35      4889f3         mov rbx, rsi
0x0000be38      4883ec08       sub rsp, 8
0x0000be3c      e8fff9ffff     call sym.safe_hasher
0x0000be41      4889c2         mov rdx, rax
0x0000be44      4889c1         mov rcx, rax
0x0000be47      488b02         mov rax, qword [rdx]
0x0000be4a      488b5208       mov rdx, qword [rdx + 8]
0x0000be4e      4839d8         cmp rax, rbx
0x0000be51      7416           je 0xbe69
0x0000be53      0f1f440000     nop dword [rax + rax]
0x0000be58      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-79
0x0000be5b      7411           je 0xbe6e
0x0000be5d      488b02         mov rax, qword [rdx]
0x0000be60      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/hash.c:-97
0x0000be64      4839d8         cmp rax, rbx
0x0000be67      75ef           jne 0xbe58
0x0000be69      4885d2         test rdx, rdx
0x0000be6c      752a           jne 0xbe98
0x0000be6e      488b5508       mov rdx, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash.c:-66
0x0000be72      eb0c           jmp 0xbe80
0x0000be74      0f1f4000       nop dword [rax]
0x0000be78      488b01         mov rax, qword [rcx]
0x0000be7b      4885c0         test rax, rax
0x0000be7e      750b           jne 0xbe8b
0x0000be80      4883c110       add rcx, 0x10
0x0000be84      4839ca         cmp rdx, rcx
0x0000be87      77ef           ja 0xbe78
0x0000be89      31c0           xor eax, eax
0x0000be8b      4883c408       add rsp, 8
0x0000be8f      5b             pop rbx
0x0000be90      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:-59
0x0000be91      c3             ret
0x0000be92      660f1f440000   nop word [rax + rax]
0x0000be98      488b02         mov rax, qword [rdx]
0x0000be9b      4883c408       add rsp, 8
0x0000be9f      5b             pop rbx
0x0000bea0      5d             pop rbp
0x0000bea1      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-55
0x0000bea2      0f1f4000       nop dword [rax]
0x0000bea6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_entries:
0x0000beb0      4c8b0f         mov r9, qword [rdi]
0x0000beb3      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-57
0x0000beb7      7659           jbe 0xbf12
0x0000beb9      4531c0         xor r8d, r8d
0x0000bebc      498b09         mov rcx, qword [r9]
0x0000bebf      4885c9         test rcx, rcx
0x0000bec2      7439           je 0xbefd                               ; ../coreutils-8.31/lib/hash.c:-47
0x0000bec4      4c39c2         cmp rdx, r8
0x0000bec7      763e           jbe 0xbf07
0x0000bec9      4a890cc6       mov qword [rsi + r8*8], rcx
0x0000becd      498b4908       mov rcx, qword [r9 + 8]
0x0000bed1      498d4001       lea rax, [r8 + 1]
0x0000bed5      4885c9         test rcx, rcx
0x0000bed8      7420           je 0xbefa
0x0000beda      660f1f440000   nop word [rax + rax]
0x0000bee0      4839c2         cmp rdx, rax
0x0000bee3      742b           je 0xbf10                               ; ../coreutils-8.31/lib/hash.c:-3
0x0000bee5      4c8b01         mov r8, qword [rcx]
0x0000bee8      4883c001       add rax, 1
0x0000beec      4c8944c6f8     mov qword [rsi + rax*8 - 8], r8
0x0000bef1      488b4908       mov rcx, qword [rcx + 8]
0x0000bef5      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/hash.c:-2
0x0000bef8      75e6           jne 0xbee0
0x0000befa      4989c0         mov r8, rax
0x0000befd      4983c110       add r9, 0x10
0x0000bf01      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-3
0x0000bf05      77b5           ja 0xbebc
0x0000bf07      4c89c0         mov rax, r8
0x0000bf0a      c3             ret
0x0000bf0b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:0
0x0000bf10      f3c3           ret
0x0000bf12      31c0           xor eax, eax
0x0000bf14      c3             ret
0x0000bf15      90             nop
0x0000bf16      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_do_for_each:
0x0000bf20      4157           push r15
0x0000bf22      4156           push r14
0x0000bf24      4155           push r13
0x0000bf26      4154           push r12
0x0000bf28      55             push rbp
0x0000bf29      53             push rbx
0x0000bf2a      4883ec08       sub rsp, 8
0x0000bf2e      4c8b37         mov r14, qword [rdi]
0x0000bf31      4c397708       cmp qword [rdi + 8], r14
0x0000bf35      764f           jbe 0xbf86
0x0000bf37      4989d5         mov r13, rdx
0x0000bf3a      4989f4         mov r12, rsi
0x0000bf3d      4989ff         mov r15, rdi                            ; ../coreutils-8.31/lib/hash.c:46
0x0000bf40      31ed           xor ebp, ebp
0x0000bf42      498b3e         mov rdi, qword [r14]
0x0000bf45      4885ff         test rdi, rdi
0x0000bf48      7420           je 0xbf6a
0x0000bf4a      4c89f3         mov rbx, r14
0x0000bf4d      eb04           jmp 0xbf53
0x0000bf4f      90             nop
0x0000bf50      488b3b         mov rdi, qword [rbx]
0x0000bf53      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/hash.c:37
0x0000bf56      41ffd4         call r12
0x0000bf59      84c0           test al, al
0x0000bf5b      7417           je 0xbf74
0x0000bf5d      488b5b08       mov rbx, qword [rbx + 8]
0x0000bf61      4883c501       add rbp, 1
0x0000bf65      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/hash.c:33
0x0000bf68      75e6           jne 0xbf50
0x0000bf6a      4983c610       add r14, 0x10
0x0000bf6e      4d397708       cmp qword [r15 + 8], r14
0x0000bf72      77ce           ja 0xbf42
0x0000bf74      4883c408       add rsp, 8
0x0000bf78      4889e8         mov rax, rbp
0x0000bf7b      5b             pop rbx
0x0000bf7c      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:38
0x0000bf7d      415c           pop r12
0x0000bf7f      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:37
0x0000bf81      415e           pop r14
0x0000bf83      415f           pop r15
0x0000bf85      c3             ret
0x0000bf86      31ed           xor ebp, ebp
0x0000bf88      ebea           jmp 0xbf74                              ; ../coreutils-8.31/lib/hash.c:41
0x0000bf8a      660f1f440000   nop word [rax + rax]
;-- hash_string:
0x0000bf90      0fb60f         movzx ecx, byte [rdi]
0x0000bf93      31d2           xor edx, edx
0x0000bf95      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:43
0x0000bf97      7424           je 0xbfbd
0x0000bf99      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/hash.c:44
0x0000bfa0      4889d0         mov rax, rdx
0x0000bfa3      4883c701       add rdi, 1
0x0000bfa7      48c1e005       shl rax, 5
0x0000bfab      4829d0         sub rax, rdx
0x0000bfae      31d2           xor edx, edx
0x0000bfb0      4801c8         add rax, rcx
0x0000bfb3      0fb60f         movzx ecx, byte [rdi]
0x0000bfb6      48f7f6         div rsi
0x0000bfb9      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:-14
0x0000bfbb      75e3           jne 0xbfa0
0x0000bfbd      4889d0         mov rax, rdx
0x0000bfc0      c3             ret
0x0000bfc1      0f1f440000     nop dword [rax + rax]
0x0000bfc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_reset_tuning:
0x0000bfd0      48b800000000.  movabs rax, 0x3f80000000000000          ; 4575657221408423936
0x0000bfda      c6471000       mov byte [rdi + 0x10], 0                ; ../coreutils-8.31/lib/hash.c:-70
0x0000bfde      488907         mov qword [rdi], rax
0x0000bfe1      48b8cdcc4c3f.  movabs rax, 0x3fb4fdf43f4ccccd
0x0000bfeb      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/hash.c:-65
0x0000bfef      c3             ret
;-- hash_initialize:
0x0000bff0      4157           push r15
0x0000bff2      4156           push r14
0x0000bff4      488d0525f8ff.  lea rax, sym.raw_hasher                 ; 0xb820 ; "H\x89\xf81\xd2H\xc1\xc8\x03H\xf7\xf6H\x89\xd0\xc3H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x0000bffb      4155           push r13
0x0000bffd      4154           push r12
0x0000bfff      4989d4         mov r12, rdx
0x0000c002      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:-61
0x0000c003      53             push rbx
0x0000c004      4989cd         mov r13, rcx
0x0000c007      4889fd         mov rbp, rdi
0x0000c00a      bf50000000     mov edi, 0x50                           ; 'P'
0x0000c00f      4989f7         mov r15, rsi
0x0000c012      4883ec08       sub rsp, 8
0x0000c016      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-52
0x0000c019      4d89c6         mov r14, r8
0x0000c01c      4c0f44e0       cmove r12, rax
0x0000c020      488d0509f8ff.  lea rax, sym.raw_comparator             ; 0xb830 ; "H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x0000c027      4885c9         test rcx, rcx
0x0000c02a      4c0f44e8       cmove r13, rax
0x0000c02e      e8cd69ffff     call sym.imp.malloc
0x0000c033      4885c0         test rax, rax
0x0000c036      4889c3         mov rbx, rax
0x0000c039      0f84ab000000   je 0xc0ea
0x0000c03f      4d85ff         test r15, r15
0x0000c042      488d7828       lea rdi, [rax + 0x28]
0x0000c046      0f84b4000000   je 0xc100
0x0000c04c      4c897828       mov qword [rax + 0x28], r15
0x0000c050      e83bf9ffff     call sym.check_tuning.isra.0
0x0000c055      84c0           test al, al
0x0000c057      0f8483000000   je 0xc0e0
0x0000c05d      41807f1000     cmp byte [r15 + 0x10], 0
0x0000c062      0f84f8000000   je 0xc160
0x0000c068      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:-145
0x0000c06b      e810f7ffff     call sym.next_prime
0x0000c070      ba08000000     mov edx, 8
0x0000c075      4889c5         mov rbp, rax
0x0000c078      31c9           xor ecx, ecx
0x0000c07a      4889d0         mov rax, rdx
0x0000c07d      48f7e5         mul rbp
0x0000c080      0f8014010000   jo 0xc19a
0x0000c086      4885c0         test rax, rax
0x0000c089      7855           js 0xc0e0
0x0000c08b      4885c9         test rcx, rcx
0x0000c08e      7550           jne 0xc0e0
0x0000c090      4885ed         test rbp, rbp
0x0000c093      48896b10       mov qword [rbx + 0x10], rbp
0x0000c097      7447           je 0xc0e0
0x0000c099      be10000000     mov esi, 0x10
0x0000c09e      4889ef         mov rdi, rbp
0x0000c0a1      e86a68ffff     call sym.imp.calloc
0x0000c0a6      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:-197
0x0000c0a9      488903         mov qword [rbx], rax
0x0000c0ac      7432           je 0xc0e0
0x0000c0ae      48c1e504       shl rbp, 4
0x0000c0b2      48c743180000.  mov qword [rbx + 0x18], 0
0x0000c0ba      48c743200000.  mov qword [rbx + 0x20], 0
0x0000c0c2      4801c5         add rbp, rax
0x0000c0c5      4c896330       mov qword [rbx + 0x30], r12
0x0000c0c9      4c896b38       mov qword [rbx + 0x38], r13
0x0000c0cd      48896b08       mov qword [rbx + 8], rbp
0x0000c0d1      4c897340       mov qword [rbx + 0x40], r14
0x0000c0d5      48c743480000.  mov qword [rbx + 0x48], 0
0x0000c0dd      eb0b           jmp 0xc0ea
0x0000c0df      90             nop
0x0000c0e0      4889df         mov rdi, rbx
0x0000c0e3      31db           xor ebx, ebx
0x0000c0e5      e8966bffff     call sym..plt.got
0x0000c0ea      4883c408       add rsp, 8
0x0000c0ee      4889d8         mov rax, rbx
0x0000c0f1      5b             pop rbx
0x0000c0f2      5d             pop rbp
0x0000c0f3      415c           pop r12
0x0000c0f5      415d           pop r13
0x0000c0f7      415e           pop r14
0x0000c0f9      415f           pop r15
0x0000c0fb      c3             ret
0x0000c0fc      0f1f4000       nop dword [rax]
0x0000c100      488d0509a900.  lea rax, obj.default_tuning             ; 0x16a10
0x0000c107      48894328       mov qword [rbx + 0x28], rax             ; ../coreutils-8.31/lib/hash.c:-199
0x0000c10b      e880f8ffff     call sym.check_tuning.isra.0
0x0000c110      84c0           test al, al
0x0000c112      f30f100d1ea9.  movss xmm1, dword [0x00016a38]          ; [0x16a38:4]=0x3f4ccccd
0x0000c11a      74c4           je 0xc0e0
0x0000c11c      4885ed         test rbp, rbp
0x0000c11f      784a           js 0xc16b
0x0000c121      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-168
0x0000c125      f3480f2ac5     cvtsi2ss xmm0, rbp
0x0000c12a      f30f5ec1       divss xmm0, xmm1
0x0000c12e      0f2e0507a900.  ucomiss xmm0, dword [0x00016a3c]
0x0000c135      73a9           jae 0xc0e0
0x0000c137      0f2e0502a900.  ucomiss xmm0, dword [0x00016a40]
0x0000c13e      7250           jb 0xc190
0x0000c140      f30f5c05f8a8.  subss xmm0, dword [0x00016a40]
0x0000c148      48b800000000.  movabs rax, 0x8000000000000000
0x0000c152      f3480f2ce8     cvttss2si rbp, xmm0
0x0000c157      4831c5         xor rbp, rax
0x0000c15a      e909ffffff     jmp 0xc068
0x0000c15f      90             nop
0x0000c160      4885ed         test rbp, rbp
0x0000c163      f3410f104f08   movss xmm1, dword [r15 + 8]
0x0000c169      79b6           jns 0xc121                              ; ../coreutils-8.31/lib/hash.c:-146
0x0000c16b      4889e8         mov rax, rbp
0x0000c16e      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-147
0x0000c172      48d1e8         shr rax, 1
0x0000c175      83e501         and ebp, 1
0x0000c178      4809e8         or rax, rbp
0x0000c17b      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000c180      f30f58c0       addss xmm0, xmm0
0x0000c184      eba4           jmp 0xc12a
0x0000c186      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c190      f3480f2ce8     cvttss2si rbp, xmm0
0x0000c195      e9cefeffff     jmp 0xc068
0x0000c19a      b901000000     mov ecx, 1
0x0000c19f      e9e2feffff     jmp 0xc086
0x0000c1a4      6690           nop
0x0000c1a6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/hash.c:-130
;-- hash_clear:
0x0000c1b0      4154           push r12
0x0000c1b2      55             push rbp
0x0000c1b3      4889fd         mov rbp, rdi
0x0000c1b6      53             push rbx
0x0000c1b7      4c8b27         mov r12, qword [rdi]                    ; ../coreutils-8.31/lib/hash.c:-134
0x0000c1ba      4c3b6708       cmp r12, qword [rdi + 8]
0x0000c1be      736b           jae 0xc22b
0x0000c1c0      49833c2400     cmp qword [r12], 0
0x0000c1c5      745a           je 0xc221
0x0000c1c7      498b5c2408     mov rbx, qword [r12 + 8]
0x0000c1cc      488b4540       mov rax, qword [rbp + 0x40]
0x0000c1d0      4885db         test rbx, rbx
0x0000c1d3      7430           je 0xc205
0x0000c1d5      0f1f00         nop dword [rax]
0x0000c1d8      4885c0         test rax, rax
0x0000c1db      7409           je 0xc1e6
0x0000c1dd      488b3b         mov rdi, qword [rbx]
0x0000c1e0      ffd0           call rax
0x0000c1e2      488b4540       mov rax, qword [rbp + 0x40]
0x0000c1e6      488b5308       mov rdx, qword [rbx + 8]
0x0000c1ea      488b4d48       mov rcx, qword [rbp + 0x48]
0x0000c1ee      48c703000000.  mov qword [rbx], 0
0x0000c1f5      4885d2         test rdx, rdx
0x0000c1f8      48894b08       mov qword [rbx + 8], rcx
0x0000c1fc      48895d48       mov qword [rbp + 0x48], rbx
0x0000c200      4889d3         mov rbx, rdx
0x0000c203      75d3           jne 0xc1d8
0x0000c205      4885c0         test rax, rax
0x0000c208      7406           je 0xc210
0x0000c20a      498b3c24       mov rdi, qword [r12]
0x0000c20e      ffd0           call rax
0x0000c210      49c704240000.  mov qword [r12], 0
0x0000c218      49c744240800.  mov qword [r12 + 8], 0
0x0000c221      4983c410       add r12, 0x10
0x0000c225      4c396508       cmp qword [rbp + 8], r12                ; ../coreutils-8.31/lib/hash.c:-310
0x0000c229      7795           ja 0xc1c0
0x0000c22b      48c745180000.  mov qword [rbp + 0x18], 0
0x0000c233      48c745200000.  mov qword [rbp + 0x20], 0
0x0000c23b      5b             pop rbx
0x0000c23c      5d             pop rbp
0x0000c23d      415c           pop r12
0x0000c23f      c3             ret
;-- hash_free:
0x0000c240      4154           push r12
0x0000c242      55             push rbp
0x0000c243      4989fc         mov r12, rdi
0x0000c246      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:-307
0x0000c247      48837f4000     cmp qword [rdi + 0x40], 0
0x0000c24c      488b2f         mov rbp, qword [rdi]
0x0000c24f      488b4708       mov rax, qword [rdi + 8]
0x0000c253      744e           je 0xc2a3                               ; ../coreutils-8.31/lib/hash.c:-305
0x0000c255      48837f2000     cmp qword [rdi + 0x20], 0
0x0000c25a      7447           je 0xc2a3
0x0000c25c      4839c5         cmp rbp, rax
0x0000c25f      737b           jae 0xc2dc
0x0000c261      0f1f80000000.  nop dword [rax]
0x0000c268      488b7d00       mov rdi, qword [rbp]
0x0000c26c      4885ff         test rdi, rdi
0x0000c26f      7425           je 0xc296
0x0000c271      4889eb         mov rbx, rbp
0x0000c274      eb0d           jmp 0xc283
0x0000c276      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c280      488b3b         mov rdi, qword [rbx]
0x0000c283      41ff542440     call qword [r12 + 0x40]                 ; segment.PHDR
0x0000c288      488b5b08       mov rbx, qword [rbx + 8]
0x0000c28c      4885db         test rbx, rbx
0x0000c28f      75ef           jne 0xc280
0x0000c291      498b442408     mov rax, qword [r12 + 8]
0x0000c296      4883c510       add rbp, 0x10
0x0000c29a      4839e8         cmp rax, rbp
0x0000c29d      77c9           ja 0xc268
0x0000c29f      498b2c24       mov rbp, qword [r12]
0x0000c2a3      4839c5         cmp rbp, rax
0x0000c2a6      7334           jae 0xc2dc
0x0000c2a8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:93
0x0000c2b0      488b7d08       mov rdi, qword [rbp + 8]
0x0000c2b4      4885ff         test rdi, rdi
0x0000c2b7      7418           je 0xc2d1
0x0000c2b9      0f1f80000000.  nop dword [rax]
0x0000c2c0      488b5f08       mov rbx, qword [rdi + 8]
0x0000c2c4      e8b769ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/hash.c:98
0x0000c2c9      4885db         test rbx, rbx
0x0000c2cc      4889df         mov rdi, rbx
0x0000c2cf      75ef           jne 0xc2c0
0x0000c2d1      4883c510       add rbp, 0x10                           ; ../coreutils-8.31/lib/hash.c:99
0x0000c2d5      49396c2408     cmp qword [r12 + 8], rbp
0x0000c2da      77d4           ja 0xc2b0
0x0000c2dc      498b7c2448     mov rdi, qword [r12 + 0x48]
0x0000c2e1      4885ff         test rdi, rdi
0x0000c2e4      741b           je 0xc301
0x0000c2e6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c2f0      488b5f08       mov rbx, qword [rdi + 8]
0x0000c2f4      e88769ffff     call sym..plt.got
0x0000c2f9      4885db         test rbx, rbx
0x0000c2fc      4889df         mov rdi, rbx
0x0000c2ff      75ef           jne 0xc2f0
0x0000c301      498b3c24       mov rdi, qword [r12]
0x0000c305      e87669ffff     call sym..plt.got
0x0000c30a      5b             pop rbx
0x0000c30b      4c89e7         mov rdi, r12
0x0000c30e      5d             pop rbp
0x0000c30f      415c           pop r12
0x0000c311      e96a69ffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/hash.c:107
0x0000c316      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_rehash:
0x0000c320      4154           push r12
0x0000c322      55             push rbp
0x0000c323      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:108
0x0000c326      53             push rbx
0x0000c327      4883ec60       sub rsp, 0x60
0x0000c32b      4c8b6728       mov r12, qword [rdi + 0x28]
0x0000c32f      64488b042528.  mov rax, qword fs:[0x28]
0x0000c338      4889442458     mov qword [rsp + 0x58], rax
0x0000c33d      31c0           xor eax, eax
0x0000c33f      41807c241000   cmp byte [r12 + 0x10], 0
0x0000c345      7551           jne 0xc398
0x0000c347      4885f6         test rsi, rsi
0x0000c34a      0f8878010000   js 0xc4c8
0x0000c350      660fefc0       pxor xmm0, xmm0
0x0000c354      f3480f2ac6     cvtsi2ss xmm0, rsi                      ; ../coreutils-8.31/lib/hash.c:156
0x0000c359      f3410f5e4424.  divss xmm0, dword [r12 + 8]
0x0000c360      0f2e05d5a600.  ucomiss xmm0, dword [0x00016a3c]
0x0000c367      0f8333010000   jae 0xc4a0
0x0000c36d      0f2e05cca600.  ucomiss xmm0, dword [0x00016a40]
0x0000c374      0f8276010000   jb 0xc4f0
0x0000c37a      f30f5c05bea6.  subss xmm0, dword [0x00016a40]          ; ../coreutils-8.31/lib/hash.c:161
0x0000c382      48b800000000.  movabs rax, 0x8000000000000000
0x0000c38c      f3480f2cf0     cvttss2si rsi, xmm0
0x0000c391      4831c6         xor rsi, rax                            ; ../coreutils-8.31/lib/bitrotate.h:35
0x0000c394      0f1f4000       nop dword [rax]
0x0000c398      4889f7         mov rdi, rsi
0x0000c39b      e8e0f3ffff     call sym.next_prime
0x0000c3a0      ba08000000     mov edx, 8
0x0000c3a5      4889c3         mov rbx, rax
0x0000c3a8      31c9           xor ecx, ecx
0x0000c3aa      4889d0         mov rax, rdx
0x0000c3ad      48f7e3         mul rbx
0x0000c3b0      0f8099010000   jo 0xc54f
0x0000c3b6      4885c0         test rax, rax
0x0000c3b9      b801000000     mov eax, 1
0x0000c3be      480f48c8       cmovs rcx, rax
0x0000c3c2      4885db         test rbx, rbx
0x0000c3c5      0f84d5000000   je 0xc4a0
0x0000c3cb      83e101         and ecx, 1
0x0000c3ce      0f85cc000000   jne 0xc4a0
0x0000c3d4      48395d10       cmp qword [rbp + 0x10], rbx
0x0000c3d8      0f8422010000   je 0xc500
0x0000c3de      be10000000     mov esi, 0x10
0x0000c3e3      4889df         mov rdi, rbx
0x0000c3e6      e82565ffff     call sym.imp.calloc
0x0000c3eb      4885c0         test rax, rax
0x0000c3ee      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/bitrotate.h:-72
0x0000c3f2      0f84a8000000   je 0xc4a0
0x0000c3f8      48895c2410     mov qword [rsp + 0x10], rbx
0x0000c3fd      48c1e304       shl rbx, 4
0x0000c401      4c89642428     mov qword [rsp + 0x28], r12
0x0000c406      4801c3         add rbx, rax
0x0000c409      488b4530       mov rax, qword [rbp + 0x30]
0x0000c40d      4989e4         mov r12, rsp
0x0000c410      31d2           xor edx, edx
0x0000c412      4889ee         mov rsi, rbp
0x0000c415      4c89e7         mov rdi, r12
0x0000c418      48895c2408     mov qword [rsp + 8], rbx
0x0000c41d      48c744241800.  mov qword [rsp + 0x18], 0
0x0000c426      4889442430     mov qword [rsp + 0x30], rax
0x0000c42b      488b4538       mov rax, qword [rbp + 0x38]
0x0000c42f      48c744242000.  mov qword [rsp + 0x20], 0
0x0000c438      4889442438     mov qword [rsp + 0x38], rax
0x0000c43d      488b4540       mov rax, qword [rbp + 0x40]
0x0000c441      4889442440     mov qword [rsp + 0x40], rax
0x0000c446      488b4548       mov rax, qword [rbp + 0x48]
0x0000c44a      4889442448     mov qword [rsp + 0x48], rax
0x0000c44f      e8bcf5ffff     call sym.transfer_entries
0x0000c454      84c0           test al, al
0x0000c456      89c3           mov ebx, eax
0x0000c458      0f85b2000000   jne 0xc510
0x0000c45e      488b442448     mov rax, qword [rsp + 0x48]
0x0000c463      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/bitrotate.h:-53
0x0000c468      4c89e6         mov rsi, r12
0x0000c46b      4889ef         mov rdi, rbp
0x0000c46e      48894548       mov qword [rbp + 0x48], rax
0x0000c472      e899f5ffff     call sym.transfer_entries
0x0000c477      84c0           test al, al
0x0000c479      0f84da000000   je 0xc559
0x0000c47f      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/bitrotate.h:-43
0x0000c481      4c89e6         mov rsi, r12
0x0000c484      4889ef         mov rdi, rbp
0x0000c487      e884f5ffff     call sym.transfer_entries
0x0000c48c      84c0           test al, al
0x0000c48e      0f84c5000000   je 0xc559
0x0000c494      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/bitrotate.h:-38
0x0000c498      e8e367ffff     call sym..plt.got
0x0000c49d      eb03           jmp 0xc4a2
0x0000c49f      90             nop
0x0000c4a0      31db           xor ebx, ebx
0x0000c4a2      488b4c2458     mov rcx, qword [rsp + 0x58]
0x0000c4a7      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000c4b0      89d8           mov eax, ebx
0x0000c4b2      0f8592000000   jne 0xc54a
0x0000c4b8      4883c460       add rsp, 0x60
0x0000c4bc      5b             pop rbx
0x0000c4bd      5d             pop rbp
0x0000c4be      415c           pop r12
0x0000c4c0      c3             ret
0x0000c4c1      0f1f80000000.  nop dword [rax]
0x0000c4c8      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/bitrotate.h:-37
0x0000c4cb      660fefc0       pxor xmm0, xmm0
0x0000c4cf      48d1e8         shr rax, 1
0x0000c4d2      83e601         and esi, 1
0x0000c4d5      4809f0         or rax, rsi
0x0000c4d8      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000c4dd      f30f58c0       addss xmm0, xmm0
0x0000c4e1      e973feffff     jmp 0xc359
0x0000c4e6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c4f0      f3480f2cf0     cvttss2si rsi, xmm0
0x0000c4f5      e99efeffff     jmp 0xc398
0x0000c4fa      660f1f440000   nop word [rax + rax]
0x0000c500      bb01000000     mov ebx, 1
0x0000c505      eb9b           jmp 0xc4a2
0x0000c507      660f1f840000.  nop word [rax + rax]
0x0000c510      488b7d00       mov rdi, qword [rbp]
0x0000c514      e86767ffff     call sym..plt.got
0x0000c519      488b0424       mov rax, qword [rsp]
0x0000c51d      48894500       mov qword [rbp], rax
0x0000c521      488b442408     mov rax, qword [rsp + 8]
0x0000c526      48894508       mov qword [rbp + 8], rax
0x0000c52a      488b442410     mov rax, qword [rsp + 0x10]
0x0000c52f      48894510       mov qword [rbp + 0x10], rax
0x0000c533      488b442418     mov rax, qword [rsp + 0x18]
0x0000c538      48894518       mov qword [rbp + 0x18], rax
0x0000c53c      488b442448     mov rax, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/bitrotate.h:-12
0x0000c541      48894548       mov qword [rbp + 0x48], rax
0x0000c545      e958ffffff     jmp 0xc4a2
0x0000c54a      e83162ffff     call sym.imp.__stack_chk_fail
0x0000c54f      b901000000     mov ecx, 1
0x0000c554      e95dfeffff     jmp 0xc3b6
0x0000c559      e83260ffff     call sym.imp.abort
0x0000c55e      6690           nop
;-- hash_insert_if_absent:
0x0000c560      4155           push r13
0x0000c562      4154           push r12
0x0000c564      55             push rbp
0x0000c565      53             push rbx
0x0000c566      4883ec18       sub rsp, 0x18
0x0000c56a      64488b042528.  mov rax, qword fs:[0x28]
0x0000c573      4889442408     mov qword [rsp + 8], rax
0x0000c578      31c0           xor eax, eax
0x0000c57a      4885f6         test rsi, rsi
0x0000c57d      0f84ba010000   je 0xc73d
0x0000c583      4989e4         mov r12, rsp
0x0000c586      31c9           xor ecx, ecx
0x0000c588      4989d5         mov r13, rdx
0x0000c58b      4c89e2         mov rdx, r12
0x0000c58e      4889fb         mov rbx, rdi
0x0000c591      4889f5         mov rbp, rsi
0x0000c594      e8d7f2ffff     call sym.hash_find_entry
0x0000c599      4885c0         test rax, rax
0x0000c59c      4889c2         mov rdx, rax
0x0000c59f      742f           je 0xc5d0
0x0000c5a1      31c0           xor eax, eax
0x0000c5a3      4d85ed         test r13, r13
0x0000c5a6      7404           je 0xc5ac
0x0000c5a8      49895500       mov qword [r13], rdx
0x0000c5ac      488b4c2408     mov rcx, qword [rsp + 8]
0x0000c5b1      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000c5ba      0f851f020000   jne 0xc7df
0x0000c5c0      4883c418       add rsp, 0x18
0x0000c5c4      5b             pop rbx
0x0000c5c5      5d             pop rbp
0x0000c5c6      415c           pop r12
0x0000c5c8      415d           pop r13
0x0000c5ca      c3             ret
0x0000c5cb      0f1f440000     nop dword [rax + rax]
0x0000c5d0      488b4318       mov rax, qword [rbx + 0x18]
0x0000c5d4      4885c0         test rax, rax
0x0000c5d7      7877           js 0xc650
0x0000c5d9      660fefc9       pxor xmm1, xmm1
0x0000c5dd      488b5328       mov rdx, qword [rbx + 0x28]
0x0000c5e1      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000c5e6      488b4310       mov rax, qword [rbx + 0x10]
0x0000c5ea      4885c0         test rax, rax
0x0000c5ed      0f8887000000   js 0xc67a
0x0000c5f3      660fefc0       pxor xmm0, xmm0
0x0000c5f7      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000c5fc      f30f594208     mulss xmm0, dword [rdx + 8]             ; ../coreutils-8.31/lib/bitrotate.h:15
0x0000c601      0f2ec8         ucomiss xmm1, xmm0
0x0000c604      0f8796000000   ja 0xc6a0
0x0000c60a      4c8b2424       mov r12, qword [rsp]
0x0000c60e      49833c2400     cmp qword [r12], 0
0x0000c613      0f842f010000   je 0xc748
0x0000c619      488b4348       mov rax, qword [rbx + 0x48]
0x0000c61d      4885c0         test rax, rax
0x0000c620      0f843a010000   je 0xc760
0x0000c626      488b5008       mov rdx, qword [rax + 8]
0x0000c62a      48895348       mov qword [rbx + 0x48], rdx
0x0000c62e      498b542408     mov rdx, qword [r12 + 8]
0x0000c633      488928         mov qword [rax], rbp
0x0000c636      48895008       mov qword [rax + 8], rdx
0x0000c63a      4989442408     mov qword [r12 + 8], rax
0x0000c63f      b801000000     mov eax, 1
0x0000c644      4883432001     add qword [rbx + 0x20], 1
0x0000c649      e95effffff     jmp 0xc5ac
0x0000c64e      6690           nop
0x0000c650      4889c2         mov rdx, rax
0x0000c653      660fefc9       pxor xmm1, xmm1
0x0000c657      83e001         and eax, 1
0x0000c65a      48d1ea         shr rdx, 1
0x0000c65d      4809c2         or rdx, rax
0x0000c660      488b4310       mov rax, qword [rbx + 0x10]
0x0000c664      f3480f2aca     cvtsi2ss xmm1, rdx                      ; ../coreutils-8.31/lib/bitrotate.h:-3
0x0000c669      488b5328       mov rdx, qword [rbx + 0x28]
0x0000c66d      4885c0         test rax, rax
0x0000c670      f30f58c9       addss xmm1, xmm1
0x0000c674      0f8979ffffff   jns 0xc5f3
0x0000c67a      4889c1         mov rcx, rax
0x0000c67d      660fefc0       pxor xmm0, xmm0
0x0000c681      48d1e9         shr rcx, 1
0x0000c684      83e001         and eax, 1                              ; ../coreutils-8.31/lib/bitrotate.h:1
0x0000c687      4809c1         or rcx, rax
0x0000c68a      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000c68f      f30f58c0       addss xmm0, xmm0
0x0000c693      e964ffffff     jmp 0xc5fc
0x0000c698      0f1f84000000.  nop dword [rax + rax]
0x0000c6a0      488d7b28       lea rdi, [rbx + 0x28]
0x0000c6a4      e8e7f2ffff     call sym.check_tuning.isra.0
0x0000c6a9      488b4310       mov rax, qword [rbx + 0x10]
0x0000c6ad      488b5328       mov rdx, qword [rbx + 0x28]
0x0000c6b1      4885c0         test rax, rax
0x0000c6b4      f30f105208     movss xmm2, dword [rdx + 8]
0x0000c6b9      0f88c1000000   js 0xc780
0x0000c6bf      660fefc0       pxor xmm0, xmm0
0x0000c6c3      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000c6c8      488b4318       mov rax, qword [rbx + 0x18]
0x0000c6cc      4885c0         test rax, rax
0x0000c6cf      0f88cb000000   js 0xc7a0
0x0000c6d5      660fefc9       pxor xmm1, xmm1
0x0000c6d9      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000c6de      0f28da         movaps xmm3, xmm2
0x0000c6e1      f30f59d8       mulss xmm3, xmm0
0x0000c6e5      0f2ecb         ucomiss xmm1, xmm3
0x0000c6e8      0f861cffffff   jbe 0xc60a
0x0000c6ee      807a1000       cmp byte [rdx + 0x10], 0
0x0000c6f2      f30f59420c     mulss xmm0, dword [rdx + 0xc]
0x0000c6f7      7504           jne 0xc6fd
0x0000c6f9      f30f59c2       mulss xmm0, xmm2
0x0000c6fd      0f2e0538a300.  ucomiss xmm0, dword [0x00016a3c]
0x0000c704      736d           jae 0xc773
0x0000c706      0f2e0533a300.  ucomiss xmm0, dword [0x00016a40]
0x0000c70d      0f83ad000000   jae 0xc7c0
0x0000c713      f3480f2cf0     cvttss2si rsi, xmm0
0x0000c718      4889df         mov rdi, rbx
0x0000c71b      e800fcffff     call sym.hash_rehash
0x0000c720      84c0           test al, al
0x0000c722      744f           je 0xc773
0x0000c724      31c9           xor ecx, ecx
0x0000c726      4c89e2         mov rdx, r12
0x0000c729      4889ee         mov rsi, rbp
0x0000c72c      4889df         mov rdi, rbx
0x0000c72f      e83cf1ffff     call sym.hash_find_entry
0x0000c734      4885c0         test rax, rax
0x0000c737      0f84cdfeffff   je 0xc60a
0x0000c73d      e84e5effff     call sym.imp.abort
0x0000c742      660f1f440000   nop word [rax + rax]
0x0000c748      49892c24       mov qword [r12], rbp
0x0000c74c      b801000000     mov eax, 1
0x0000c751      4883432001     add qword [rbx + 0x20], 1
0x0000c756      4883431801     add qword [rbx + 0x18], 1
0x0000c75b      e94cfeffff     jmp 0xc5ac
0x0000c760      bf10000000     mov edi, 0x10
0x0000c765      e89662ffff     call sym.imp.malloc
0x0000c76a      4885c0         test rax, rax
0x0000c76d      0f85bbfeffff   jne 0xc62e
0x0000c773      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000c778      e92ffeffff     jmp 0xc5ac
0x0000c77d      0f1f00         nop dword [rax]
0x0000c780      4889c1         mov rcx, rax
0x0000c783      660fefc0       pxor xmm0, xmm0
0x0000c787      48d1e9         shr rcx, 1
0x0000c78a      83e001         and eax, 1
0x0000c78d      4809c1         or rcx, rax
0x0000c790      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000c795      f30f58c0       addss xmm0, xmm0
0x0000c799      e92affffff     jmp 0xc6c8
0x0000c79e      6690           nop
0x0000c7a0      4889c1         mov rcx, rax
0x0000c7a3      660fefc9       pxor xmm1, xmm1
0x0000c7a7      48d1e9         shr rcx, 1
0x0000c7aa      83e001         and eax, 1
0x0000c7ad      4809c1         or rcx, rax
0x0000c7b0      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000c7b5      f30f58c9       addss xmm1, xmm1
0x0000c7b9      e920ffffff     jmp 0xc6de
0x0000c7be      6690           nop
0x0000c7c0      f30f5c0578a2.  subss xmm0, dword [0x00016a40]
0x0000c7c8      48b800000000.  movabs rax, 0x8000000000000000
0x0000c7d2      f3480f2cf0     cvttss2si rsi, xmm0
0x0000c7d7      4831c6         xor rsi, rax
0x0000c7da      e939ffffff     jmp 0xc718
0x0000c7df      e89c5fffff     call sym.imp.__stack_chk_fail
0x0000c7e4      6690           nop
0x0000c7e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_insert:
0x0000c7f0      53             push rbx
0x0000c7f1      4889f3         mov rbx, rsi
0x0000c7f4      4883ec10       sub rsp, 0x10
0x0000c7f8      4889e2         mov rdx, rsp
0x0000c7fb      64488b042528.  mov rax, qword fs:[0x28]
0x0000c804      4889442408     mov qword [rsp + 8], rax
0x0000c809      31c0           xor eax, eax
0x0000c80b      e850fdffff     call sym.hash_insert_if_absent
0x0000c810      83f8ff         cmp eax, 0xffffffff
0x0000c813      742b           je 0xc840
0x0000c815      85c0           test eax, eax
0x0000c817      7504           jne 0xc81d
0x0000c819      488b1c24       mov rbx, qword [rsp]
0x0000c81d      488b4c2408     mov rcx, qword [rsp + 8]
0x0000c822      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000c82b      4889d8         mov rax, rbx
0x0000c82e      7514           jne 0xc844
0x0000c830      4883c410       add rsp, 0x10
0x0000c834      5b             pop rbx
0x0000c835      c3             ret
0x0000c836      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c840      31db           xor ebx, ebx
0x0000c842      ebd9           jmp 0xc81d
0x0000c844      e8375fffff     call sym.imp.__stack_chk_fail
0x0000c849      0f1f80000000.  nop dword [rax]
;-- hash_delete:
0x0000c850      4154           push r12
0x0000c852      55             push rbp
0x0000c853      b901000000     mov ecx, 1
0x0000c858      53             push rbx
0x0000c859      4889fb         mov rbx, rdi
0x0000c85c      4883ec10       sub rsp, 0x10
0x0000c860      4889e2         mov rdx, rsp
0x0000c863      64488b042528.  mov rax, qword fs:[0x28]
0x0000c86c      4889442408     mov qword [rsp + 8], rax
0x0000c871      31c0           xor eax, eax
0x0000c873      e8f8efffff     call sym.hash_find_entry
0x0000c878      4885c0         test rax, rax
0x0000c87b      4889c5         mov rbp, rax
0x0000c87e      740f           je 0xc88f
0x0000c880      488b0424       mov rax, qword [rsp]
0x0000c884      48836b2001     sub qword [rbx + 0x20], 1
0x0000c889      48833800       cmp qword [rax], 0
0x0000c88d      7421           je 0xc8b0
0x0000c88f      488b4c2408     mov rcx, qword [rsp + 8]
0x0000c894      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000c89d      4889e8         mov rax, rbp
0x0000c8a0      0f85a8010000   jne 0xca4e
0x0000c8a6      4883c410       add rsp, 0x10
0x0000c8aa      5b             pop rbx
0x0000c8ab      5d             pop rbp
0x0000c8ac      415c           pop r12
0x0000c8ae      c3             ret
0x0000c8af      90             nop
0x0000c8b0      488b4318       mov rax, qword [rbx + 0x18]
0x0000c8b4      4883e801       sub rax, 1
0x0000c8b8      4885c0         test rax, rax
0x0000c8bb      48894318       mov qword [rbx + 0x18], rax
0x0000c8bf      0f88fb000000   js 0xc9c0
0x0000c8c5      660fefc0       pxor xmm0, xmm0
0x0000c8c9      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000c8ce      488b4310       mov rax, qword [rbx + 0x10]
0x0000c8d2      488b5328       mov rdx, qword [rbx + 0x28]
0x0000c8d6      4885c0         test rax, rax
0x0000c8d9      0f88c1000000   js 0xc9a0
0x0000c8df      660fefc9       pxor xmm1, xmm1
0x0000c8e3      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000c8e8      f30f590a       mulss xmm1, dword [rdx]
0x0000c8ec      0f2ec8         ucomiss xmm1, xmm0
0x0000c8ef      769e           jbe 0xc88f
0x0000c8f1      488d7b28       lea rdi, [rbx + 0x28]
0x0000c8f5      e896f0ffff     call sym.check_tuning.isra.0
0x0000c8fa      488b4310       mov rax, qword [rbx + 0x10]
0x0000c8fe      488b5328       mov rdx, qword [rbx + 0x28]
0x0000c902      4885c0         test rax, rax
0x0000c905      0f8825010000   js 0xca30
0x0000c90b      660fefc0       pxor xmm0, xmm0
0x0000c90f      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000c914      488b4318       mov rax, qword [rbx + 0x18]
0x0000c918      4885c0         test rax, rax
0x0000c91b      0f88ef000000   js 0xca10
0x0000c921      660fefc9       pxor xmm1, xmm1
0x0000c925      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000c92a      f30f1012       movss xmm2, dword [rdx]
0x0000c92e      f30f59d0       mulss xmm2, xmm0
0x0000c932      0f2ed1         ucomiss xmm2, xmm1
0x0000c935      0f8654ffffff   jbe 0xc88f
0x0000c93b      807a1000       cmp byte [rdx + 0x10], 0
0x0000c93f      f30f594204     mulss xmm0, dword [rdx + 4]
0x0000c944      0f84b6000000   je 0xca00
0x0000c94a      0f2e05efa000.  ucomiss xmm0, dword [0x00016a40]
0x0000c951      0f8389000000   jae 0xc9e0
0x0000c957      f3480f2cf0     cvttss2si rsi, xmm0
0x0000c95c      4889df         mov rdi, rbx
0x0000c95f      e8bcf9ffff     call sym.hash_rehash
0x0000c964      84c0           test al, al
0x0000c966      0f8523ffffff   jne 0xc88f
0x0000c96c      488b7b48       mov rdi, qword [rbx + 0x48]
0x0000c970      4885ff         test rdi, rdi
0x0000c973      7414           je 0xc989
0x0000c975      0f1f00         nop dword [rax]
0x0000c978      4c8b6708       mov r12, qword [rdi + 8]
0x0000c97c      e8ff62ffff     call sym..plt.got
0x0000c981      4d85e4         test r12, r12
0x0000c984      4c89e7         mov rdi, r12
0x0000c987      75ef           jne 0xc978
0x0000c989      48c743480000.  mov qword [rbx + 0x48], 0
0x0000c991      e9f9feffff     jmp 0xc88f
0x0000c996      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c9a0      4889c1         mov rcx, rax
0x0000c9a3      660fefc9       pxor xmm1, xmm1
0x0000c9a7      48d1e9         shr rcx, 1
0x0000c9aa      83e001         and eax, 1
0x0000c9ad      4809c1         or rcx, rax
0x0000c9b0      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000c9b5      f30f58c9       addss xmm1, xmm1
0x0000c9b9      e92affffff     jmp 0xc8e8
0x0000c9be      6690           nop
0x0000c9c0      4889c2         mov rdx, rax
0x0000c9c3      660fefc0       pxor xmm0, xmm0
0x0000c9c7      48d1ea         shr rdx, 1
0x0000c9ca      83e001         and eax, 1
0x0000c9cd      4809c2         or rdx, rax
0x0000c9d0      f3480f2ac2     cvtsi2ss xmm0, rdx
0x0000c9d5      f30f58c0       addss xmm0, xmm0
0x0000c9d9      e9f0feffff     jmp 0xc8ce
0x0000c9de      6690           nop
0x0000c9e0      f30f5c0558a0.  subss xmm0, dword [0x00016a40]
0x0000c9e8      48b800000000.  movabs rax, 0x8000000000000000
0x0000c9f2      f3480f2cf0     cvttss2si rsi, xmm0
0x0000c9f7      4831c6         xor rsi, rax
0x0000c9fa      e95dffffff     jmp 0xc95c
0x0000c9ff      90             nop
0x0000ca00      f30f594208     mulss xmm0, dword [rdx + 8]
0x0000ca05      e940ffffff     jmp 0xc94a
0x0000ca0a      660f1f440000   nop word [rax + rax]
0x0000ca10      4889c1         mov rcx, rax
0x0000ca13      660fefc9       pxor xmm1, xmm1
0x0000ca17      48d1e9         shr rcx, 1
0x0000ca1a      83e001         and eax, 1
0x0000ca1d      4809c1         or rcx, rax
0x0000ca20      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000ca25      f30f58c9       addss xmm1, xmm1
0x0000ca29      e9fcfeffff     jmp 0xc92a
0x0000ca2e      6690           nop
0x0000ca30      4889c1         mov rcx, rax
0x0000ca33      660fefc0       pxor xmm0, xmm0
0x0000ca37      48d1e9         shr rcx, 1
0x0000ca3a      83e001         and eax, 1
0x0000ca3d      4809c1         or rcx, rax
0x0000ca40      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000ca45      f30f58c0       addss xmm0, xmm0
0x0000ca49      e9c6feffff     jmp 0xc914
0x0000ca4e      e82d5dffff     call sym.imp.__stack_chk_fail
0x0000ca53      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ca5d      0f1f00         nop dword [rax]
;-- triple_hash:
0x0000ca60      55             push rbp                                ; ../coreutils-8.31/lib/hash-triple.c:35
0x0000ca61      53             push rbx
0x0000ca62      4889fd         mov rbp, rdi
0x0000ca65      4889f3         mov rbx, rsi
0x0000ca68      4883ec08       sub rsp, 8
0x0000ca6c      488b3f         mov rdi, qword [rdi]                    ; ../coreutils-8.31/lib/hash-triple.c:37
0x0000ca6f      e8fc710000     call sym.hash_pjw
0x0000ca74      48334508       xor rax, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash-triple.c:40
0x0000ca78      31d2           xor edx, edx
0x0000ca7a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:41
0x0000ca7e      48f7f3         div rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:40
0x0000ca81      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:41
0x0000ca82      5d             pop rbp
0x0000ca83      4889d0         mov rax, rdx
0x0000ca86      c3             ret
0x0000ca87      660f1f840000.  nop word [rax + rax]
;-- triple_hash_no_name:
0x0000ca90      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:46
0x0000ca94      31d2           xor edx, edx
0x0000ca96      48f7f6         div rsi
0x0000ca99      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-triple.c:51
0x0000ca9c      c3             ret
0x0000ca9d      0f1f00         nop dword [rax]
;-- triple_compare:
0x0000caa0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-triple.c:56
0x0000caa2      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:59
0x0000caa6      48395708       cmp qword [rdi + 8], rdx
0x0000caaa      7404           je 0xcab0
0x0000caac      f3c3           ret                                     ; ../coreutils-8.31/lib/hash-triple.c:60
0x0000caae      6690           nop
0x0000cab0      488b4e10       mov rcx, qword [rsi + 0x10]             ; ../coreutils-8.31/lib/hash-triple.c:59
0x0000cab4      48394f10       cmp qword [rdi + 0x10], rcx
0x0000cab8      75f2           jne 0xcaac
0x0000caba      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:56
0x0000cabe      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/hash-triple.c:59
0x0000cac1      488b3f         mov rdi, qword [rdi]
0x0000cac4      e817240000     call sym.same_name
0x0000cac9      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:60
0x0000cacd      c3             ret
0x0000cace      6690           nop
;-- triple_compare_ino_str:
0x0000cad0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-triple.c:64
0x0000cad2      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:67
0x0000cad6      48395708       cmp qword [rdi + 8], rdx
0x0000cada      7404           je 0xcae0
0x0000cadc      f3c3           ret                                     ; ../coreutils-8.31/lib/hash-triple.c:68
0x0000cade      6690           nop
0x0000cae0      488b4e10       mov rcx, qword [rsi + 0x10]             ; ../coreutils-8.31/lib/hash-triple.c:67
0x0000cae4      48394f10       cmp qword [rdi + 0x10], rcx
0x0000cae8      75f2           jne 0xcadc
0x0000caea      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:64
0x0000caee      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/hash-triple.c:67
0x0000caf1      488b3f         mov rdi, qword [rdi]
0x0000caf4      e8375effff     call sym.imp.strcmp
0x0000caf9      85c0           test eax, eax
0x0000cafb      0f94c0         sete al
0x0000cafe      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:68
0x0000cb02      c3             ret
0x0000cb03      0f1f00         nop dword [rax]
0x0000cb06      662e0f1f8400.  nop word cs:[rax + rax]
;-- triple_free:
0x0000cb10      53             push rbx                                ; ../coreutils-8.31/lib/hash-triple.c:73
0x0000cb11      4889fb         mov rbx, rdi
0x0000cb14      488b3f         mov rdi, qword [rdi]                    ; ../coreutils-8.31/lib/hash-triple.c:75
0x0000cb17      e86461ffff     call sym..plt.got
0x0000cb1c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/hash-triple.c:76
0x0000cb1f      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:77
0x0000cb20      e95b61ffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/hash-triple.c:76
0x0000cb25      662e0f1f8400.  nop word cs:[rax + rax]
0x0000cb2f      90             nop
;-- opendirat:
0x0000cb30      4155           push r13                                ; ../coreutils-8.31/lib/opendirat.c:37
0x0000cb32      4154           push r12
0x0000cb34      81ca00090900   or edx, 0x90900                         ; ../coreutils-8.31/lib/opendirat.c:38
0x0000cb3a      55             push rbp                                ; ../coreutils-8.31/lib/opendirat.c:37
0x0000cb3b      53             push rbx
0x0000cb3c      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/opendirat.c:40
0x0000cb3e      4989cc         mov r12, rcx                            ; ../coreutils-8.31/lib/opendirat.c:37
0x0000cb41      4883ec08       sub rsp, 8
0x0000cb45      e856720000     call sym.openat_safer                   ; ../coreutils-8.31/lib/opendirat.c:40
0x0000cb4a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/opendirat.c:42
0x0000cb4c      7852           js 0xcba0
0x0000cb4e      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x0000cb50      89c3           mov ebx, eax
0x0000cb52      e82960ffff     call sym.imp.fdopendir
0x0000cb57      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/opendirat.c:45
0x0000cb5a      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x0000cb5d      7419           je 0xcb78                               ; ../coreutils-8.31/lib/opendirat.c:45
0x0000cb5f      41891c24       mov dword [r12], ebx                    ; ../coreutils-8.31/lib/opendirat.c:46
0x0000cb63      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x0000cb67      4889e8         mov rax, rbp
0x0000cb6a      5b             pop rbx
0x0000cb6b      5d             pop rbp
0x0000cb6c      415c           pop r12
0x0000cb6e      415d           pop r13
0x0000cb70      c3             ret
0x0000cb71      0f1f80000000.  nop dword [rax]
0x0000cb78      e8235affff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/opendirat.c:49
0x0000cb7d      448b28         mov r13d, dword [rax]
0x0000cb80      4989c4         mov r12, rax
0x0000cb83      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/opendirat.c:50
0x0000cb85      e8e65cffff     call sym.imp.close
0x0000cb8a      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/opendirat.c:54
0x0000cb8d      45892c24       mov dword [r12], r13d                   ; ../coreutils-8.31/lib/opendirat.c:51
0x0000cb91      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x0000cb95      5b             pop rbx
0x0000cb96      5d             pop rbp
0x0000cb97      415c           pop r12
0x0000cb99      415d           pop r13
0x0000cb9b      c3             ret
0x0000cb9c      0f1f4000       nop dword [rax]
0x0000cba0      4883c408       add rsp, 8
0x0000cba4      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/opendirat.c:43
0x0000cba6      5b             pop rbx                                 ; ../coreutils-8.31/lib/opendirat.c:54
0x0000cba7      4889e8         mov rax, rbp
0x0000cbaa      5d             pop rbp
0x0000cbab      415c           pop r12
0x0000cbad      415d           pop r13
0x0000cbaf      c3             ret
;-- set_program_name:
0x0000cbb0      4885ff         test rdi, rdi
0x0000cbb3      53             push rbx                                ; ../coreutils-8.31/lib/progname.c:40
0x0000cbb4      7477           je 0xcc2d                               ; ../coreutils-8.31/lib/progname.c:51
0x0000cbb6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000cbbb      4889fb         mov rbx, rdi
0x0000cbbe      e81d5cffff     call sym.imp.strrchr
0x0000cbc3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x0000cbc6      7455           je 0xcc1d
0x0000cbc8      4c8d4001       lea r8, [rax + 1]
0x0000cbcc      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000cbcf      4829da         sub rdx, rbx
0x0000cbd2      4883fa06       cmp rdx, 6
0x0000cbd6      7e45           jle 0xcc1d
0x0000cbd8      488d70fa       lea rsi, [rax - 6]
0x0000cbdc      488d3da59e00.  lea rdi, str..libs                      ; 0x16a88 ; "/.libs/"
0x0000cbe3      b907000000     mov ecx, 7
0x0000cbe8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000cbea      0f97c2         seta dl
0x0000cbed      80da00         sbb dl, 0
0x0000cbf0      84d2           test dl, dl
0x0000cbf2      7529           jne 0xcc1d
0x0000cbf4      488d3d959e00.  lea rdi, [0x00016a90]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000cbfb      b903000000     mov ecx, 3
0x0000cc00      4c89c6         mov rsi, r8
0x0000cc03      4c89c3         mov rbx, r8
0x0000cc06      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000cc08      0f97c2         seta dl
0x0000cc0b      80da00         sbb dl, 0
0x0000cc0e      84d2           test dl, dl
0x0000cc10      750b           jne 0xcc1d
0x0000cc12      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x0000cc16      48891da3f420.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x21c0c0:8]=0
0x0000cc1d      48891d5cf920.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x21c580:8]=0
0x0000cc24      48891dbdf420.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x21c0e8:8]=0
0x0000cc2b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000cc2c      c3             ret
0x0000cc2d      488b0dccf420.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c100:8]=0
0x0000cc34      488d3d159e00.  lea rdi, [0x00016a50]                   ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000cc3b      ba37000000     mov edx, 0x37                           ; '7'
0x0000cc40      be01000000     mov esi, 1
0x0000cc45      e8c65fffff     call sym.imp.fwrite
0x0000cc4a      e84159ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000cc4f      90             nop
;-- qcopy_acl:
0x0000cc50      4154           push r12                                ; ../coreutils-8.31/lib/qcopy-acl.c:41
0x0000cc52      55             push rbp
0x0000cc53      4189cc         mov r12d, ecx
0x0000cc56      53             push rbx
0x0000cc57      4889d5         mov rbp, rdx
0x0000cc5a      4489c2         mov edx, r8d                            ; ../coreutils-8.31/lib/qcopy-acl.c:45
0x0000cc5d      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/qcopy-acl.c:41
0x0000cc61      488d5c2404     lea rbx, [rsp + 4]                      ; ../coreutils-8.31/lib/qcopy-acl.c:45
0x0000cc66      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/qcopy-acl.c:41
0x0000cc6f      4889442408     mov qword [rsp + 8], rax
0x0000cc74      31c0           xor eax, eax
0x0000cc76      4889d9         mov rcx, rbx                            ; ../coreutils-8.31/lib/qcopy-acl.c:45
0x0000cc79      e882690000     call sym.get_permissions
0x0000cc7e      85c0           test eax, eax                           ; ../coreutils-8.31/lib/qcopy-acl.c:46
0x0000cc80      7536           jne 0xccb8
0x0000cc82      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/qcopy-acl.c:48
0x0000cc85      4889df         mov rdi, rbx
0x0000cc88      4489e2         mov edx, r12d
0x0000cc8b      e8a0690000     call sym.set_permissions
0x0000cc90      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/qcopy-acl.c:49
0x0000cc93      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/qcopy-acl.c:48
0x0000cc95      e856690000     call sym.free_permission_context        ; ../coreutils-8.31/lib/qcopy-acl.c:49
0x0000cc9a      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/qcopy-acl.c:51
0x0000cc9f      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000cca8      89e8           mov eax, ebp
0x0000ccaa      7513           jne 0xccbf
0x0000ccac      4883c410       add rsp, 0x10
0x0000ccb0      5b             pop rbx
0x0000ccb1      5d             pop rbp
0x0000ccb2      415c           pop r12
0x0000ccb4      c3             ret
0x0000ccb5      0f1f00         nop dword [rax]
0x0000ccb8      bdfeffffff     mov ebp, 0xfffffffe                     ; ../coreutils-8.31/lib/qcopy-acl.c:47 ; 4294967294
0x0000ccbd      ebdb           jmp 0xcc9a
0x0000ccbf      e8bc5affff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/qcopy-acl.c:51
0x0000ccc4      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ccce      6690           nop
;-- qset_acl:
0x0000ccd0      55             push rbp                                ; ../coreutils-8.31/lib/qset-acl.c:40
0x0000ccd1      53             push rbx
0x0000ccd2      4883ec18       sub rsp, 0x18
0x0000ccd6      488d5c2404     lea rbx, [rsp + 4]                      ; ../coreutils-8.31/lib/qset-acl.c:46
0x0000ccdb      89542404       mov dword [rsp + 4], edx                ; ../coreutils-8.31/lib/qset-acl.c:45
0x0000ccdf      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/qset-acl.c:46
0x0000cce1      4889fe         mov rsi, rdi
0x0000cce4      4889df         mov rdi, rbx
0x0000cce7      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/qset-acl.c:40
0x0000ccf0      4889442408     mov qword [rsp + 8], rax
0x0000ccf5      31c0           xor eax, eax
0x0000ccf7      e834690000     call sym.set_permissions                ; ../coreutils-8.31/lib/qset-acl.c:46
0x0000ccfc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/qset-acl.c:47
0x0000ccff      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/qset-acl.c:46
0x0000cd01      e8ea680000     call sym.free_permission_context        ; ../coreutils-8.31/lib/qset-acl.c:47
0x0000cd06      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/qset-acl.c:49
0x0000cd0b      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000cd14      7509           jne 0xcd1f
0x0000cd16      4883c418       add rsp, 0x18
0x0000cd1a      89e8           mov eax, ebp
0x0000cd1c      5b             pop rbx
0x0000cd1d      5d             pop rbp
0x0000cd1e      c3             ret
0x0000cd1f      e85c5affff     call sym.imp.__stack_chk_fail
0x0000cd24      662e0f1f8400.  nop word cs:[rax + rax]
0x0000cd2e      6690           nop
;-- gettext_quote.part.1:
0x0000cd30      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x0000cd31      53             push rbx
0x0000cd32      4889fd         mov rbp, rdi
0x0000cd35      89f3           mov ebx, esi
0x0000cd37      4883ec08       sub rsp, 8
0x0000cd3b      e820700000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x0000cd40      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x0000cd43      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000cd46      80fa55         cmp dl, 0x55
0x0000cd49      7475           je 0xcdc0
0x0000cd4b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000cd4e      7420           je 0xcd70
0x0000cd50      488d054c9d00.  lea rax, str.l______l                   ; 0x16aa3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000cd57      488d15479d00.  lea rdx, [0x00016aa5]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000cd5e      83fb09         cmp ebx, 9
0x0000cd61      480f45c2       cmovne rax, rdx
0x0000cd65      4883c408       add rsp, 8
0x0000cd69      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000cd6a      5d             pop rbp
0x0000cd6b      c3             ret
0x0000cd6c      0f1f4000       nop dword [rax]
0x0000cd70      0fb65001       movzx edx, byte [rax + 1]
0x0000cd74      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000cd77      80fa42         cmp dl, 0x42
0x0000cd7a      75d4           jne 0xcd50
0x0000cd7c      80780231       cmp byte [rax + 2], 0x31
0x0000cd80      75ce           jne 0xcd50
0x0000cd82      80780338       cmp byte [rax + 3], 0x38
0x0000cd86      75c8           jne 0xcd50
0x0000cd88      80780430       cmp byte [rax + 4], 0x30
0x0000cd8c      75c2           jne 0xcd50
0x0000cd8e      80780533       cmp byte [rax + 5], 0x33
0x0000cd92      75bc           jne 0xcd50
0x0000cd94      80780630       cmp byte [rax + 6], 0x30
0x0000cd98      75b6           jne 0xcd50
0x0000cd9a      80780700       cmp byte [rax + 7], 0
0x0000cd9e      75b0           jne 0xcd50
0x0000cda0      807d0060       cmp byte [rbp], 0x60
0x0000cda4      488d05f19c00.  lea rax, [0x00016a9c]
0x0000cdab      488d15ee9c00.  lea rdx, [0x00016aa0]
0x0000cdb2      480f45c2       cmovne rax, rdx
0x0000cdb6      4883c408       add rsp, 8
0x0000cdba      5b             pop rbx
0x0000cdbb      5d             pop rbp
0x0000cdbc      c3             ret
0x0000cdbd      0f1f00         nop dword [rax]
0x0000cdc0      0fb65001       movzx edx, byte [rax + 1]
0x0000cdc4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000cdc7      80fa54         cmp dl, 0x54
0x0000cdca      7584           jne 0xcd50
0x0000cdcc      0fb65002       movzx edx, byte [rax + 2]
0x0000cdd0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000cdd3      80fa46         cmp dl, 0x46
0x0000cdd6      0f8574ffffff   jne 0xcd50
0x0000cddc      8078032d       cmp byte [rax + 3], 0x2d
0x0000cde0      0f856affffff   jne 0xcd50
0x0000cde6      80780438       cmp byte [rax + 4], 0x38
0x0000cdea      0f8560ffffff   jne 0xcd50
0x0000cdf0      80780500       cmp byte [rax + 5], 0
0x0000cdf4      0f8556ffffff   jne 0xcd50
0x0000cdfa      807d0060       cmp byte [rbp], 0x60
0x0000cdfe      488d058f9c00.  lea rax, [0x00016a94]                   ; "\u2018"
0x0000ce05      488d158c9c00.  lea rdx, [0x00016a98]                   ; "\u2019"
0x0000ce0c      480f45c2       cmovne rax, rdx
0x0000ce10      4883c408       add rsp, 8
0x0000ce14      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x0000ce15      5d             pop rbp
0x0000ce16      c3             ret
0x0000ce17      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x0000ce20      4157           push r15
0x0000ce22      4156           push r14
0x0000ce24      4589c7         mov r15d, r8d
0x0000ce27      4155           push r13
0x0000ce29      4154           push r12
0x0000ce2b      4989fe         mov r14, rdi
0x0000ce2e      55             push rbp
0x0000ce2f      53             push rbx
0x0000ce30      4489cb         mov ebx, r9d
0x0000ce33      4989f5         mov r13, rsi
0x0000ce36      4889cd         mov rbp, rcx
0x0000ce39      83e302         and ebx, 2
0x0000ce3c      4881ecb80000.  sub rsp, 0xb8
0x0000ce43      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000ce4b      4889542410     mov qword [rsp + 0x10], rdx
0x0000ce50      4489442408     mov dword [rsp + 8], r8d
0x0000ce55      44894c2478     mov dword [rsp + 0x78], r9d
0x0000ce5a      4889442420     mov qword [rsp + 0x20], rax
0x0000ce5f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x0000ce67      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000ce6c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x0000ce74      4889442460     mov qword [rsp + 0x60], rax
0x0000ce79      64488b042528.  mov rax, qword fs:[0x28]
0x0000ce82      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000ce8a      31c0           xor eax, eax
0x0000ce8c      e8af58ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000ce91      4183ff0a       cmp r15d, 0xa
0x0000ce95      4889442458     mov qword [rsp + 0x58], rax
0x0000ce9a      0f87af110000   ja 0xe04f
0x0000cea0      488d0d599c00.  lea rcx, [0x00016b00]
0x0000cea7      4489fa         mov edx, r15d
0x0000ceaa      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000ceae      4801c8         add rax, rcx
0x0000ceb1      ffe0           jmp rax
0x0000ceb3      c644240e01     mov byte [rsp + 0xe], 1
0x0000ceb8      c644247c00     mov byte [rsp + 0x7c], 0
0x0000cebd      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x0000cec0      48c744245000.  mov qword [rsp + 0x50], 0
0x0000cec9      c644240f01     mov byte [rsp + 0xf], 1
0x0000cece      c644240d00     mov byte [rsp + 0xd], 0
0x0000ced3      488d05cb9b00.  lea rax, [0x00016aa5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000ceda      48c744241801.  mov qword [rsp + 0x18], 1
0x0000cee3      4531ff         xor r15d, r15d
0x0000cee6      c74424080200.  mov dword [rsp + 8], 2
0x0000ceee      4889442448     mov qword [rsp + 0x48], rax
0x0000cef3      4531db         xor r11d, r11d
0x0000cef6      4889e8         mov rax, rbp
0x0000cef9      4589e0         mov r8d, r12d
0x0000cefc      4c89dd         mov rbp, r11
0x0000ceff      4989c3         mov r11, rax
0x0000cf02      660f1f440000   nop word [rax + rax]
0x0000cf08      4939eb         cmp r11, rbp
0x0000cf0b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000cf0f      4983fbff       cmp r11, 0xffffffffffffffff
0x0000cf13      750d           jne 0xcf22
0x0000cf15      488b442410     mov rax, qword [rsp + 0x10]
0x0000cf1a      803c2800       cmp byte [rax + rbp], 0
0x0000cf1e      410f95c4       setne r12b
0x0000cf22      4584e4         test r12b, r12b
0x0000cf25      0f8455060000   je 0xd580
0x0000cf2b      837c240802     cmp dword [rsp + 8], 2
0x0000cf30      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000cf35      4c8d0c2f       lea r9, [rdi + rbp]
0x0000cf39      0f95c0         setne al
0x0000cf3c      2244240d       and al, byte [rsp + 0xd]
0x0000cf40      4189c2         mov r10d, eax
0x0000cf43      0f84a7000000   je 0xcff0
0x0000cf49      488b442418     mov rax, qword [rsp + 0x18]
0x0000cf4e      4885c0         test rax, rax
0x0000cf51      0f8429040000   je 0xd380
0x0000cf57      4983fbff       cmp r11, 0xffffffffffffffff
0x0000cf5b      488d5c0500     lea rbx, [rbp + rax]
0x0000cf60      752e           jne 0xcf90
0x0000cf62      4883f801       cmp rax, 1
0x0000cf66      7628           jbe 0xcf90
0x0000cf68      4488442438     mov byte [rsp + 0x38], r8b
0x0000cf6d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x0000cf72      4c894c2428     mov qword [rsp + 0x28], r9
0x0000cf77      e8d457ffff     call sym.imp.strlen
0x0000cf7c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000cf82      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x0000cf88      4989c3         mov r11, rax
0x0000cf8b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x0000cf90      4c39db         cmp rbx, r11
0x0000cf93      4488542428     mov byte [rsp + 0x28], r10b
0x0000cf98      0f87b2050000   ja 0xd550
0x0000cf9e      488b542418     mov rdx, qword [rsp + 0x18]
0x0000cfa3      488b742448     mov rsi, qword [rsp + 0x48]
0x0000cfa8      4c89cf         mov rdi, r9
0x0000cfab      4c895c2440     mov qword [rsp + 0x40], r11
0x0000cfb0      4488442438     mov byte [rsp + 0x38], r8b
0x0000cfb5      4c894c2430     mov qword [rsp + 0x30], r9
0x0000cfba      e81159ffff     call sym.imp.memcmp
0x0000cfbf      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x0000cfc1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x0000cfc6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000cfcc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x0000cfd1      0f8579050000   jne 0xd550
0x0000cfd7      807c240f00     cmp byte [rsp + 0xf], 0
0x0000cfdc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x0000cfe2      0f857d0f0000   jne 0xdf65
0x0000cfe8      0f1f84000000.  nop dword [rax + rax]
0x0000cff0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x0000cff4      80fb7e         cmp bl, 0x7e
0x0000cff7      0f871b030000   ja 0xd318
0x0000cffd      488d0d289b00.  lea rcx, [0x00016b2c]
0x0000d004      0fb6d3         movzx edx, bl
0x0000d007      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000d00b      4801c8         add rax, rcx
0x0000d00e      ffe0           jmp rax
0x0000d010      4531d2         xor r10d, r10d
0x0000d013      4983fb01       cmp r11, 1
0x0000d017      0f95c0         setne al
0x0000d01a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000d01e      750c           jne 0xd02c
0x0000d020      488b442410     mov rax, qword [rsp + 0x10]
0x0000d025      80780100       cmp byte [rax + 1], 0
0x0000d029      0f95c0         setne al
0x0000d02c      837c240802     cmp dword [rsp + 8], 2
0x0000d031      0f94c2         sete dl
0x0000d034      84c0           test al, al
0x0000d036      0f844c020000   je 0xd288
0x0000d03c      4531e4         xor r12d, r12d
0x0000d03f      31c0           xor eax, eax
0x0000d041      0f1f80000000.  nop dword [rax]
0x0000d048      807c240d01     cmp byte [rsp + 0xd], 1
0x0000d04d      0f850f010000   jne 0xd162
0x0000d053      84d2           test dl, dl
0x0000d055      0f8507010000   jne 0xd162
0x0000d05b      488b742420     mov rsi, qword [rsp + 0x20]
0x0000d060      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x0000d063      7414           je 0xd079
0x0000d065      89da           mov edx, ebx
0x0000d067      c0ea05         shr dl, 5
0x0000d06a      0fb6d2         movzx edx, dl
0x0000d06d      8b1496         mov edx, dword [rsi + rdx*4]
0x0000d070      0fa3da         bt edx, ebx
0x0000d073      0f824a010000   jb 0xd1c3
0x0000d079      4584d2         test r10b, r10b
0x0000d07c      0f8541010000   jne 0xd1c3
0x0000d082      83f001         xor eax, 1
0x0000d085      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x0000d089      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000d08c      84c0           test al, al
0x0000d08e      7420           je 0xd0b0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x0000d090      4d39fd         cmp r13, r15
0x0000d093      7605           jbe 0xd09a
0x0000d095      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000d09a      498d4701       lea rax, [r15 + 1]
0x0000d09e      4939c5         cmp r13, rax
0x0000d0a1      7606           jbe 0xd0a9
0x0000d0a3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000d0a9      4983c702       add r15, 2
0x0000d0ad      4531c0         xor r8d, r8d
0x0000d0b0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x0000d0b3      7304           jae 0xd0b9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x0000d0b5      43881c3e       mov byte [r14 + r15], bl
0x0000d0b9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000d0be      4983c701       add r15, 1
0x0000d0c2      b800000000     mov eax, 0
0x0000d0c7      4584e4         test r12b, r12b
0x0000d0ca      0f44f8         cmove edi, eax
0x0000d0cd      40887c240e     mov byte [rsp + 0xe], dil
0x0000d0d2      e931feffff     jmp 0xcf08
0x0000d0d7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x0000d0e0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x0000d0e3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x0000d0e7      83f802         cmp eax, 2
0x0000d0ea      0f84b8050000   je 0xd6a8
0x0000d0f0      83f805         cmp eax, 5
0x0000d0f3      0f846f050000   je 0xd668
0x0000d0f9      83f802         cmp eax, 2
0x0000d0fc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000d101      0f94c2         sete dl
0x0000d104      4531e4         xor r12d, r12d
0x0000d107      31c0           xor eax, eax
0x0000d109      e93affffff     jmp 0xd048
0x0000d10e      6690           nop
0x0000d110      4531d2         xor r10d, r10d
0x0000d113      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x0000d118      0f8402050000   je 0xd620
0x0000d11e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x0000d123      31d2           xor edx, edx
0x0000d125      31c0           xor eax, eax
0x0000d127      bb27000000     mov ebx, 0x27                           ; '''
0x0000d12c      e917ffffff     jmp 0xd048
0x0000d131      0f1f80000000.  nop dword [rax]
0x0000d138      ba09000000     mov edx, 9
0x0000d13d      bb74000000     mov ebx, 0x74                           ; 't'
0x0000d142      837c240802     cmp dword [rsp + 8], 2
0x0000d147      0f94c0         sete al
0x0000d14a      2244240f       and al, byte [rsp + 0xf]
0x0000d14e      0f854a010000   jne 0xd29e
0x0000d154      807c240d00     cmp byte [rsp + 0xd], 0
0x0000d159      7565           jne 0xd1c0
0x0000d15b      89d3           mov ebx, edx
0x0000d15d      4531e4         xor r12d, r12d
0x0000d160      31c0           xor eax, eax
0x0000d162      807c240f00     cmp byte [rsp + 0xf], 0
0x0000d167      0f85eefeffff   jne 0xd05b
0x0000d16d      e907ffffff     jmp 0xd079                              ; ../coreutils-8.31/lib/quotearg.c:210
0x0000d172      660f1f440000   nop word [rax + rax]
0x0000d178      ba08000000     mov edx, 8
0x0000d17d      bb62000000     mov ebx, 0x62                           ; 'b'
0x0000d182      ebd0           jmp 0xd154
0x0000d184      0f1f4000       nop dword [rax]
0x0000d188      837c240802     cmp dword [rsp + 8], 2
0x0000d18d      0f84cd030000   je 0xd560
0x0000d193      807c240d00     cmp byte [rsp + 0xd], 0
0x0000d198      0f8412020000   je 0xd3b0
0x0000d19e      807c240f00     cmp byte [rsp + 0xf], 0
0x0000d1a3      0f8407020000   je 0xd3b0
0x0000d1a9      48837c241800   cmp qword [rsp + 0x18], 0
0x0000d1af      0f85b6030000   jne 0xd56b
0x0000d1b5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000d1ba      660f1f440000   nop word [rax + rax]
0x0000d1c0      4531e4         xor r12d, r12d
0x0000d1c3      837c240802     cmp dword [rsp + 8], 2
0x0000d1c8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000d1cb      807c240f00     cmp byte [rsp + 0xf], 0
0x0000d1d0      89d0           mov eax, edx
0x0000d1d2      0f8550080000   jne 0xda28
0x0000d1d8      4489c0         mov eax, r8d
0x0000d1db      83f001         xor eax, 1
0x0000d1de      20d0           and al, dl
0x0000d1e0      742f           je 0xd211
0x0000d1e2      4d39fd         cmp r13, r15
0x0000d1e5      7605           jbe 0xd1ec
0x0000d1e7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000d1ec      498d5701       lea rdx, [r15 + 1]
0x0000d1f0      4939d5         cmp r13, rdx
0x0000d1f3      7606           jbe 0xd1fb
0x0000d1f5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000d1fb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000d1ff      4939d5         cmp r13, rdx
0x0000d202      7606           jbe 0xd20a
0x0000d204      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000d20a      4983c703       add r15, 3
0x0000d20e      4189c0         mov r8d, eax
0x0000d211      4d39fd         cmp r13, r15
0x0000d214      7605           jbe 0xd21b
0x0000d216      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000d21b      4983c701       add r15, 1
0x0000d21f      4883c501       add rbp, 1
0x0000d223      e988feffff     jmp 0xd0b0
0x0000d228      0f1f84000000.  nop dword [rax + rax]
0x0000d230      807c240d00     cmp byte [rsp + 0xd], 0
0x0000d235      0f85c8010000   jne 0xd403
0x0000d23b      31d2           xor edx, edx
0x0000d23d      f644247801     test byte [rsp + 0x78], 1
0x0000d242      0f8413ffffff   je 0xd15b
0x0000d248      4883c501       add rbp, 1
0x0000d24c      e9b7fcffff     jmp 0xcf08
0x0000d251      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x0000d258      837c240802     cmp dword [rsp + 8], 2
0x0000d25d      0f94c2         sete dl
0x0000d260      31c0           xor eax, eax
0x0000d262      e9e1fdffff     jmp 0xd048
0x0000d267      660f1f840000.  nop word [rax + rax]
0x0000d270      ba07000000     mov edx, 7
0x0000d275      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000d27a      e9d5feffff     jmp 0xd154
0x0000d27f      90             nop
0x0000d280      837c240802     cmp dword [rsp + 8], 2
0x0000d285      0f94c2         sete dl
0x0000d288      4885ed         test rbp, rbp
0x0000d28b      0f85abfdffff   jne 0xd03c
0x0000d291      0fb644240f     movzx eax, byte [rsp + 0xf]
0x0000d296      20d0           and al, dl
0x0000d298      0f84aafdffff   je 0xd048
0x0000d29e      4c89dd         mov rbp, r11
0x0000d2a1      c74424080200.  mov dword [rsp + 8], 2
0x0000d2a9      e9fb060000     jmp 0xd9a9
0x0000d2ae      6690           nop
0x0000d2b0      837c240802     cmp dword [rsp + 8], 2
0x0000d2b5      0f94c2         sete dl
0x0000d2b8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000d2bb      ebd4           jmp 0xd291
0x0000d2bd      0f1f00         nop dword [rax]
0x0000d2c0      837c240802     cmp dword [rsp + 8], 2
0x0000d2c5      bb20000000     mov ebx, 0x20                           ; "@"
0x0000d2ca      0f94c2         sete dl
0x0000d2cd      ebc2           jmp 0xd291
0x0000d2cf      90             nop
0x0000d2d0      ba0d000000     mov edx, 0xd
0x0000d2d5      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000d2da      e963feffff     jmp 0xd142
0x0000d2df      90             nop
0x0000d2e0      ba0c000000     mov edx, 0xc
0x0000d2e5      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000d2ea      e965feffff     jmp 0xd154
0x0000d2ef      90             nop
0x0000d2f0      ba0b000000     mov edx, 0xb
0x0000d2f5      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000d2fa      e955feffff     jmp 0xd154
0x0000d2ff      90             nop
0x0000d300      ba0a000000     mov edx, 0xa
0x0000d305      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000d30a      e933feffff     jmp 0xd142
0x0000d30f      90             nop
0x0000d310      4531d2         xor r10d, r10d
0x0000d313      0f1f440000     nop dword [rax + rax]
0x0000d318      48837c245801   cmp qword [rsp + 0x58], 1
0x0000d31e      0f85a4030000   jne 0xd6c8
0x0000d324      4c895c2438     mov qword [rsp + 0x38], r11
0x0000d329      4488442430     mov byte [rsp + 0x30], r8b
0x0000d32e      4488542428     mov byte [rsp + 0x28], r10b
0x0000d333      e83859ffff     call sym.imp.__ctype_b_loc
0x0000d338      488b08         mov rcx, qword [rax]
0x0000d33b      0fb6d3         movzx edx, bl
0x0000d33e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x0000d344      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000d34a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000d34f      bf01000000     mov edi, 1
0x0000d354      0fb70451       movzx eax, word [rcx + rdx*2]
0x0000d358      66250040       and ax, 0x4000                          ; u"%\xf0\u3d00\ua000"
0x0000d35c      410f95c4       setne r12b
0x0000d360      0f94c0         sete al
0x0000d363      2244240d       and al, byte [rsp + 0xd]
0x0000d367      84c0           test al, al
0x0000d369      0f8592090000   jne 0xdd01
0x0000d36f      837c240802     cmp dword [rsp + 8], 2
0x0000d374      0f94c2         sete dl
0x0000d377      e9ccfcffff     jmp 0xd048
0x0000d37c      0f1f4000       nop dword [rax]
0x0000d380      410fb619       movzx ebx, byte [r9]
0x0000d384      80fb7e         cmp bl, 0x7e
0x0000d387      7787           ja 0xd310
0x0000d389      488d0d989900.  lea rcx, [0x00016d28]
0x0000d390      0fb6d3         movzx edx, bl
0x0000d393      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000d397      4801c8         add rax, rcx
0x0000d39a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000d39c      0f1f4000       nop dword [rax]
0x0000d3a0      4531d2         xor r10d, r10d
0x0000d3a3      807c240d00     cmp byte [rsp + 0xd], 0
0x0000d3a8      0f85f0fdffff   jne 0xd19e
0x0000d3ae      6690           nop
0x0000d3b0      ba5c000000     mov edx, 0x5c                           ; '\'
0x0000d3b5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000d3ba      e995fdffff     jmp 0xd154
0x0000d3bf      90             nop
0x0000d3c0      ba0c000000     mov edx, 0xc
0x0000d3c5      4531d2         xor r10d, r10d
0x0000d3c8      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000d3cd      e982fdffff     jmp 0xd154
0x0000d3d2      660f1f440000   nop word [rax + rax]
0x0000d3d8      ba0a000000     mov edx, 0xa
0x0000d3dd      4531d2         xor r10d, r10d
0x0000d3e0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x0000d3e5      e958fdffff     jmp 0xd142
0x0000d3ea      660f1f440000   nop word [rax + rax]
0x0000d3f0      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000d3f5      e9c6fdffff     jmp 0xd1c0
0x0000d3fa      660f1f440000   nop word [rax + rax]
0x0000d400      4531d2         xor r10d, r10d
0x0000d403      837c240802     cmp dword [rsp + 8], 2
0x0000d408      0f94c2         sete dl
0x0000d40b      807c240f00     cmp byte [rsp + 0xf], 0
0x0000d410      0f85940b0000   jne 0xdfaa
0x0000d416      4489c0         mov eax, r8d
0x0000d419      4c89f9         mov rcx, r15
0x0000d41c      83f001         xor eax, 1
0x0000d41f      20d0           and al, dl
0x0000d421      742d           je 0xd450
0x0000d423      4d39fd         cmp r13, r15
0x0000d426      7605           jbe 0xd42d
0x0000d428      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000d42d      498d4f01       lea rcx, [r15 + 1]
0x0000d431      4939cd         cmp r13, rcx
0x0000d434      7606           jbe 0xd43c
0x0000d436      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000d43c      498d4f02       lea rcx, [r15 + 2]
0x0000d440      4939cd         cmp r13, rcx
0x0000d443      0f8730060000   ja 0xda79
0x0000d449      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000d44d      4189c0         mov r8d, eax
0x0000d450      4939cd         cmp r13, rcx
0x0000d453      7605           jbe 0xd45a
0x0000d455      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000d45a      837c240802     cmp dword [rsp + 8], 2
0x0000d45f      4c8d7901       lea r15, [rcx + 1]
0x0000d463      0f8400060000   je 0xda69
0x0000d469      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000d46d      4c39d8         cmp rax, r11
0x0000d470      7319           jae 0xd48b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x0000d472      488b442410     mov rax, qword [rsp + 0x10]
0x0000d477      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000d47c      88442428       mov byte [rsp + 0x28], al
0x0000d480      83e830         sub eax, 0x30
0x0000d483      3c09           cmp al, 9
0x0000d485      0f862e080000   jbe 0xdcb9
0x0000d48b      4489e0         mov eax, r12d
0x0000d48e      bb30000000     mov ebx, 0x30                           ; '0'
0x0000d493      4531e4         xor r12d, r12d
0x0000d496      e9adfbffff     jmp 0xd048                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000d49b      0f1f440000     nop dword [rax + rax]
0x0000d4a0      837c240802     cmp dword [rsp + 8], 2
0x0000d4a5      4589d4         mov r12d, r10d
0x0000d4a8      0f94c2         sete dl
0x0000d4ab      4531d2         xor r10d, r10d
0x0000d4ae      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x0000d4b0      e993fbffff     jmp 0xd048                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x0000d4b5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x0000d4b8      837c240802     cmp dword [rsp + 8], 2
0x0000d4bd      0f94c2         sete dl
0x0000d4c0      4531d2         xor r10d, r10d
0x0000d4c3      e9c0fdffff     jmp 0xd288
0x0000d4c8      0f1f84000000.  nop dword [rax + rax]
0x0000d4d0      837c240802     cmp dword [rsp + 8], 2
0x0000d4d5      0f94c2         sete dl
0x0000d4d8      4531d2         xor r10d, r10d
0x0000d4db      4531e4         xor r12d, r12d
0x0000d4de      e9aefdffff     jmp 0xd291
0x0000d4e3      0f1f440000     nop dword [rax + rax]
0x0000d4e8      837c240802     cmp dword [rsp + 8], 2
0x0000d4ed      4589d4         mov r12d, r10d
0x0000d4f0      bb20000000     mov ebx, 0x20                           ; "@"
0x0000d4f5      0f94c2         sete dl
0x0000d4f8      4531d2         xor r10d, r10d
0x0000d4fb      e991fdffff     jmp 0xd291
0x0000d500      ba0d000000     mov edx, 0xd
0x0000d505      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x0000d508      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000d50d      e930fcffff     jmp 0xd142
0x0000d512      660f1f440000   nop word [rax + rax]
0x0000d518      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000d51d      e99efcffff     jmp 0xd1c0
0x0000d522      660f1f440000   nop word [rax + rax]
0x0000d528      ba09000000     mov edx, 9
0x0000d52d      4531d2         xor r10d, r10d
0x0000d530      bb74000000     mov ebx, 0x74                           ; 't'
0x0000d535      e908fcffff     jmp 0xd142
0x0000d53a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x0000d540      bb62000000     mov ebx, 0x62                           ; 'b'
0x0000d545      e976fcffff     jmp 0xd1c0
0x0000d54a      660f1f440000   nop word [rax + rax]
0x0000d550      4531d2         xor r10d, r10d
0x0000d553      e998faffff     jmp 0xcff0
0x0000d558      0f1f84000000.  nop dword [rax + rax]
0x0000d560      807c240f00     cmp byte [rsp + 0xf], 0
0x0000d565      0f8565090000   jne 0xded0
0x0000d56b      4883c501       add rbp, 1
0x0000d56f      4489c0         mov eax, r8d
0x0000d572      4531e4         xor r12d, r12d
0x0000d575      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000d57a      e90dfbffff     jmp 0xd08c
0x0000d57f      90             nop
0x0000d580      837c240802     cmp dword [rsp + 8], 2
0x0000d585      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000d58a      4589c4         mov r12d, r8d
0x0000d58d      4c89dd         mov rbp, r11
0x0000d590      0f94c2         sete dl
0x0000d593      89d8           mov eax, ebx
0x0000d595      4d85ff         test r15, r15
0x0000d598      0f94c1         sete cl
0x0000d59b      21d0           and eax, edx
0x0000d59d      20c8           and al, cl
0x0000d59f      0f85610a0000   jne 0xe006                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x0000d5a5      89d8           mov eax, ebx
0x0000d5a7      83f001         xor eax, 1
0x0000d5aa      20c2           and dl, al
0x0000d5ac      0f846a090000   je 0xdf1c
0x0000d5b2      807c247c00     cmp byte [rsp + 0x7c], 0
0x0000d5b7      0f845d090000   je 0xdf1a
0x0000d5bd      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x0000d5c2      0f85f5090000   jne 0xdfbd
0x0000d5c8      4d85ed         test r13, r13
0x0000d5cb      0f94c0         sete al
0x0000d5ce      48837c245000   cmp qword [rsp + 0x50], 0
0x0000d5d4      0f95c2         setne dl
0x0000d5d7      20d0           and al, dl
0x0000d5d9      0f841d0a0000   je 0xdffc
0x0000d5df      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000d5e4      488d1dba9400.  lea rbx, [0x00016aa5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000d5eb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000d5ef      c74424080200.  mov dword [rsp + 8], 2
0x0000d5f7      41bf01000000   mov r15d, 1
0x0000d5fd      48c744241801.  mov qword [rsp + 0x18], 1
0x0000d606      c644240f00     mov byte [rsp + 0xf], 0
0x0000d60b      48895c2448     mov qword [rsp + 0x48], rbx
0x0000d610      8844247c       mov byte [rsp + 0x7c], al
0x0000d614      e9daf8ffff     jmp 0xcef3
0x0000d619      0f1f80000000.  nop dword [rax]
0x0000d620      807c240f00     cmp byte [rsp + 0xf], 0
0x0000d625      0f85a5080000   jne 0xded0
0x0000d62b      4d85ed         test r13, r13
0x0000d62e      0f84fc030000   je 0xda30                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x0000d634      31d2           xor edx, edx
0x0000d636      48837c245000   cmp qword [rsp + 0x50], 0
0x0000d63c      0f85ee030000   jne 0xda30                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000d642      4c896c2450     mov qword [rsp + 0x50], r13
0x0000d647      4983c703       add r15, 3
0x0000d64b      31c0           xor eax, eax
0x0000d64d      448864247c     mov byte [rsp + 0x7c], r12b
0x0000d652      4531c0         xor r8d, r8d
0x0000d655      4989d5         mov r13, rdx
0x0000d658      bb27000000     mov ebx, 0x27                           ; '''
0x0000d65d      e917faffff     jmp 0xd079
0x0000d662      660f1f440000   nop word [rax + rax]
0x0000d668      f644247804     test byte [rsp + 0x78], 4
0x0000d66d      7421           je 0xd690
0x0000d66f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x0000d673      4c39d9         cmp rcx, r11
0x0000d676      7318           jae 0xd690
0x0000d678      488b442410     mov rax, qword [rsp + 0x10]
0x0000d67d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x0000d682      0f848a070000   je 0xde12
0x0000d688      0f1f84000000.  nop dword [rax + rax]
0x0000d690      31d2           xor edx, edx
0x0000d692      4531e4         xor r12d, r12d
0x0000d695      31c0           xor eax, eax
0x0000d697      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000d69c      e9a7f9ffff     jmp 0xd048
0x0000d6a1      0f1f80000000.  nop dword [rax]
0x0000d6a8      807c240f00     cmp byte [rsp + 0xf], 0
0x0000d6ad      0f851d080000   jne 0xded0
0x0000d6b3      4531e4         xor r12d, r12d
0x0000d6b6      31c0           xor eax, eax
0x0000d6b8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000d6bd      e9b7f9ffff     jmp 0xd079                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x0000d6c2      660f1f440000   nop word [rax + rax]
0x0000d6c8      488d8424a000.  lea rax, [rsp + 0xa0]
0x0000d6d0      4983fbff       cmp r11, 0xffffffffffffffff
0x0000d6d4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x0000d6e0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x0000d6e5      752d           jne 0xd714
0x0000d6e7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000d6ec      4488442440     mov byte [rsp + 0x40], r8b
0x0000d6f1      4488542438     mov byte [rsp + 0x38], r10b
0x0000d6f6      4c894c2430     mov qword [rsp + 0x30], r9
0x0000d6fb      e85050ffff     call sym.imp.strlen
0x0000d700      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x0000d706      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000d70c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000d70f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x0000d714      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000d71c      31c9           xor ecx, ecx
0x0000d71e      885c247e       mov byte [rsp + 0x7e], bl
0x0000d722      448844247d     mov byte [rsp + 0x7d], r8b
0x0000d727      4889cb         mov rbx, rcx
0x0000d72a      4c898c248800.  mov qword [rsp + 0x88], r9
0x0000d732      4889442438     mov qword [rsp + 0x38], rax
0x0000d737      448854247f     mov byte [rsp + 0x7f], r10b
0x0000d73c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x0000d744      4c89742440     mov qword [rsp + 0x40], r14
0x0000d749      4c896c2470     mov qword [rsp + 0x70], r13
0x0000d74e      4c895c2430     mov qword [rsp + 0x30], r11
0x0000d753      488b442410     mov rax, qword [rsp + 0x10]
0x0000d758      4c8d741d00     lea r14, [rbp + rbx]
0x0000d75d      488b542430     mov rdx, qword [rsp + 0x30]
0x0000d762      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0000d767      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000d76c      4e8d2c30       lea r13, [rax + r14]
0x0000d770      4c29f2         sub rdx, r14
0x0000d773      4c89ee         mov rsi, r13
0x0000d776      e8e55d0000     call sym.rpl_mbrtowc
0x0000d77b      4885c0         test rax, rax
0x0000d77e      4989c7         mov r15, rax
0x0000d781      744e           je 0xd7d1
0x0000d783      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000d787      0f8418060000   je 0xdda5
0x0000d78d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000d791      0f849a050000   je 0xdd31
0x0000d797      837c240802     cmp dword [rsp + 8], 2
0x0000d79c      0f94c0         sete al
0x0000d79f      2244240f       and al, byte [rsp + 0xf]
0x0000d7a3      0f8597010000   jne 0xd940
0x0000d7a9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x0000d7b0      e89b54ffff     call sym.imp.iswprint
0x0000d7b5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000d7ba      85c0           test eax, eax
0x0000d7bc      b800000000     mov eax, 0
0x0000d7c1      440f44e0       cmove r12d, eax
0x0000d7c5      4c01fb         add rbx, r15
0x0000d7c8      e86354ffff     call sym.imp.mbsinit
0x0000d7cd      85c0           test eax, eax
0x0000d7cf      7482           je 0xd753
0x0000d7d1      4489e2         mov edx, r12d
0x0000d7d4      4889df         mov rdi, rbx
0x0000d7d7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000d7dd      83f201         xor edx, 1
0x0000d7e0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000d7e5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000d7eb      2254240d       and dl, byte [rsp + 0xd]
0x0000d7ef      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x0000d7f7      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000d7fc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000d801      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000d806      4883ff01       cmp rdi, 1
0x0000d80a      0f86fb050000   jbe 0xde0b
0x0000d810      4889f9         mov rcx, rdi
0x0000d813      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x0000d815      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000d81b      4801e9         add rcx, rbp
0x0000d81e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000d823      e9b6000000     jmp 0xd8de
0x0000d828      0f1f84000000.  nop dword [rax + rax]
0x0000d830      837c240802     cmp dword [rsp + 8], 2
0x0000d835      0f94c0         sete al
0x0000d838      4584c9         test r9b, r9b
0x0000d83b      0f85af040000   jne 0xdcf0
0x0000d841      4489c6         mov esi, r8d
0x0000d844      83f601         xor esi, 1
0x0000d847      4020f0         and al, sil
0x0000d84a      742f           je 0xd87b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000d84c      4d39fd         cmp r13, r15
0x0000d84f      7605           jbe 0xd856
0x0000d851      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000d856      498d7701       lea rsi, [r15 + 1]
0x0000d85a      4939f5         cmp r13, rsi
0x0000d85d      7606           jbe 0xd865                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000d85f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000d865      498d7702       lea rsi, [r15 + 2]
0x0000d869      4939f5         cmp r13, rsi
0x0000d86c      7606           jbe 0xd874
0x0000d86e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000d874      4983c703       add r15, 3
0x0000d878      4189c0         mov r8d, eax
0x0000d87b      4d39fd         cmp r13, r15
0x0000d87e      7605           jbe 0xd885
0x0000d880      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000d885      498d4701       lea rax, [r15 + 1]
0x0000d889      4939c5         cmp r13, rax
0x0000d88c      760d           jbe 0xd89b
0x0000d88e      89d8           mov eax, ebx
0x0000d890      c0e806         shr al, 6
0x0000d893      83c030         add eax, 0x30
0x0000d896      4388443e01     mov byte [r14 + r15 + 1], al
0x0000d89b      498d4702       lea rax, [r15 + 2]
0x0000d89f      4939c5         cmp r13, rax
0x0000d8a2      7610           jbe 0xd8b4
0x0000d8a4      89d8           mov eax, ebx
0x0000d8a6      c0e803         shr al, 3
0x0000d8a9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000d8ac      83c030         add eax, 0x30
0x0000d8af      4388443e02     mov byte [r14 + r15 + 2], al
0x0000d8b4      83e307         and ebx, 7
0x0000d8b7      4883c501       add rbp, 1
0x0000d8bb      4983c703       add r15, 3
0x0000d8bf      83c330         add ebx, 0x30
0x0000d8c2      4839cd         cmp rbp, rcx
0x0000d8c5      0f83e5f7ffff   jae 0xd0b0
0x0000d8cb      89d6           mov esi, edx
0x0000d8cd      4d39fd         cmp r13, r15
0x0000d8d0      7604           jbe 0xd8d6
0x0000d8d2      43881c3e       mov byte [r14 + r15], bl
0x0000d8d6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000d8da      4983c701       add r15, 1
0x0000d8de      84d2           test dl, dl
0x0000d8e0      0f854affffff   jne 0xd830
0x0000d8e6      89f0           mov eax, esi
0x0000d8e8      83f001         xor eax, 1
0x0000d8eb      4421c0         and eax, r8d
0x0000d8ee      4584d2         test r10b, r10b
0x0000d8f1      740e           je 0xd901
0x0000d8f3      4d39fd         cmp r13, r15
0x0000d8f6      7605           jbe 0xd8fd
0x0000d8f8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000d8fd      4983c701       add r15, 1
0x0000d901      4883c501       add rbp, 1
0x0000d905      4839cd         cmp rbp, rcx
0x0000d908      0f837ef7ffff   jae 0xd08c
0x0000d90e      84c0           test al, al
0x0000d910      0f84f8030000   je 0xdd0e
0x0000d916      4d39fd         cmp r13, r15
0x0000d919      7605           jbe 0xd920
0x0000d91b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000d920      498d4701       lea rax, [r15 + 1]
0x0000d924      4939c5         cmp r13, rax
0x0000d927      7606           jbe 0xd92f
0x0000d929      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000d92f      4983c702       add r15, 2
0x0000d933      4531d2         xor r10d, r10d
0x0000d936      4531c0         xor r8d, r8d
0x0000d939      eb92           jmp 0xd8cd
0x0000d93b      0f1f440000     nop dword [rax + rax]
0x0000d940      4983ff01       cmp r15, 1
0x0000d944      0f845ffeffff   je 0xd7a9
0x0000d94a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000d94f      4a8d0c3f       lea rcx, [rdi + r15]
0x0000d953      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x0000d958      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000d95c      eb0f           jmp 0xd96d
0x0000d95e      6690           nop
0x0000d960      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x0000d964      4939d0         cmp r8, rdx
0x0000d967      0f843cfeffff   je 0xd7a9
0x0000d96d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x0000d970      83e95b         sub ecx, 0x5b
0x0000d973      80f921         cmp cl, 0x21
0x0000d976      77e8           ja 0xd960                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x0000d978      be01000000     mov esi, 1
0x0000d97d      48d3e6         shl rsi, cl
0x0000d980      4889f1         mov rcx, rsi
0x0000d983      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000d98d      4885f1         test rcx, rsi
0x0000d990      74ce           je 0xd960
0x0000d992      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000d997      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000d99c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x0000d9a1      c74424080200.  mov dword [rsp + 8], 2
0x0000d9a9      807c240d00     cmp byte [rsp + 0xd], 0
0x0000d9ae      7410           je 0xd9c0
0x0000d9b0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x0000d9b2      b804000000     mov eax, 4
0x0000d9b7      0f44442408     cmove eax, dword [rsp + 8]
0x0000d9bc      89442408       mov dword [rsp + 8], eax
0x0000d9c0      4883ec08       sub rsp, 8
0x0000d9c4      4889e9         mov rcx, rbp
0x0000d9c7      4c89ee         mov rsi, r13
0x0000d9ca      ff742468       push qword [rsp + 0x68]
0x0000d9ce      ff742478       push qword [rsp + 0x78]
0x0000d9d2      4c89f7         mov rdi, r14
0x0000d9d5      6a00           push 0
0x0000d9d7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000d9df      448b442428     mov r8d, dword [rsp + 0x28]
0x0000d9e4      488b542430     mov rdx, qword [rsp + 0x30]
0x0000d9e9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000d9ed      e82ef4ffff     call sym.quotearg_buffer_restyled
0x0000d9f2      4883c420       add rsp, 0x20
0x0000d9f6      4989c7         mov r15, rax
0x0000d9f9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x0000da01      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000da0a      4c89f8         mov rax, r15
0x0000da0d      0f8500060000   jne 0xe013
0x0000da13      4881c4b80000.  add rsp, 0xb8
0x0000da1a      5b             pop rbx
0x0000da1b      5d             pop rbp
0x0000da1c      415c           pop r12
0x0000da1e      415d           pop r13
0x0000da20      415e           pop r14
0x0000da22      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x0000da24      c3             ret
0x0000da25      0f1f00         nop dword [rax]
0x0000da28      4c89dd         mov rbp, r11
0x0000da2b      e979ffffff     jmp 0xd9a9
0x0000da30      4d39fd         cmp r13, r15
0x0000da33      7605           jbe 0xda3a
0x0000da35      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000da3a      498d4701       lea rax, [r15 + 1]
0x0000da3e      4939c5         cmp r13, rax
0x0000da41      7606           jbe 0xda49
0x0000da43      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x0000da49      498d4702       lea rax, [r15 + 2]
0x0000da4d      4939c5         cmp r13, rax
0x0000da50      0f86ec050000   jbe 0xe042
0x0000da56      4c89ea         mov rdx, r13
0x0000da59      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000da5f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000da64      e9d9fbffff     jmp 0xd642
0x0000da69      4489e0         mov eax, r12d
0x0000da6c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x0000da71      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x0000da74      e900f6ffff     jmp 0xd079                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x0000da79      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000da7f      e9c5f9ffff     jmp 0xd449
0x0000da84      85db           test ebx, ebx
0x0000da86      0f8527f4ffff   jne 0xceb3
0x0000da8c      c644240d01     mov byte [rsp + 0xd], 1
0x0000da91      4d85ed         test r13, r13
0x0000da94      0f8590050000   jne 0xe02a
0x0000da9a      488d05049000.  lea rax, [0x00016aa5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000daa1      48c744245000.  mov qword [rsp + 0x50], 0
0x0000daaa      c644240e01     mov byte [rsp + 0xe], 1
0x0000daaf      c644247c00     mov byte [rsp + 0x7c], 0
0x0000dab4      4531e4         xor r12d, r12d
0x0000dab7      c644240f00     mov byte [rsp + 0xf], 0
0x0000dabc      48c744241801.  mov qword [rsp + 0x18], 1
0x0000dac5      4889442448     mov qword [rsp + 0x48], rax
0x0000daca      41bf01000000   mov r15d, 1
0x0000dad0      c74424080200.  mov dword [rsp + 8], 2
0x0000dad8      e916f4ffff     jmp 0xcef3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000dadd      0f1f00         nop dword [rax]
0x0000dae0      85db           test ebx, ebx
0x0000dae2      0f85f5030000   jne 0xdedd
0x0000dae8      4d85ed         test r13, r13
0x0000daeb      0f8425020000   je 0xdd16
0x0000daf1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x0000daf5      c644240e01     mov byte [rsp + 0xe], 1
0x0000dafa      4531e4         xor r12d, r12d
0x0000dafd      c644247c00     mov byte [rsp + 0x7c], 0
0x0000db02      48c744245000.  mov qword [rsp + 0x50], 0
0x0000db0b      488d05918f00.  lea rax, str.l______l                   ; 0x16aa3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000db12      c644240f00     mov byte [rsp + 0xf], 0
0x0000db17      c644240d01     mov byte [rsp + 0xd], 1
0x0000db1c      48c744241801.  mov qword [rsp + 0x18], 1
0x0000db25      41bf01000000   mov r15d, 1
0x0000db2b      4889442448     mov qword [rsp + 0x48], rax
0x0000db30      e9bef3ffff     jmp 0xcef3
0x0000db35      488d05678f00.  lea rax, str.l______l                   ; 0x16aa3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000db3c      c644240e01     mov byte [rsp + 0xe], 1
0x0000db41      c644247c00     mov byte [rsp + 0x7c], 0
0x0000db46      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x0000db49      48c744245000.  mov qword [rsp + 0x50], 0
0x0000db52      c644240f01     mov byte [rsp + 0xf], 1
0x0000db57      c644240d01     mov byte [rsp + 0xd], 1
0x0000db5c      48c744241801.  mov qword [rsp + 0x18], 1
0x0000db65      4531ff         xor r15d, r15d
0x0000db68      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000db6d      c74424080500.  mov dword [rsp + 8], 5
0x0000db75      e979f3ffff     jmp 0xcef3
0x0000db7a      c644240e01     mov byte [rsp + 0xe], 1
0x0000db7f      c644247c00     mov byte [rsp + 0x7c], 0
0x0000db84      4531e4         xor r12d, r12d
0x0000db87      48c744245000.  mov qword [rsp + 0x50], 0
0x0000db90      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x0000db95      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x0000db98      c644240d01     mov byte [rsp + 0xd], 1
0x0000db9d      48c744241800.  mov qword [rsp + 0x18], 0
0x0000dba6      48c744244800.  mov qword [rsp + 0x48], 0
0x0000dbaf      e93ff3ffff     jmp 0xcef3
0x0000dbb4      837c24080a     cmp dword [rsp + 8], 0xa
0x0000dbb9      7456           je 0xdc11
0x0000dbbb      488d35e58e00.  lea rsi, [0x00016aa7]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x0000dbc2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x0000dbc4      ba05000000     mov edx, 5
0x0000dbc9      e8624bffff     call sym.imp.dcgettext
0x0000dbce      4889c1         mov rcx, rax
0x0000dbd1      4889442468     mov qword [rsp + 0x68], rax
0x0000dbd6      488d05ca8e00.  lea rax, [0x00016aa7]                   ; "`"
0x0000dbdd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x0000dbe0      0f8498030000   je 0xdf7e
0x0000dbe6      488d35b88e00.  lea rsi, [0x00016aa5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000dbed      31ff           xor edi, edi
0x0000dbef      ba05000000     mov edx, 5
0x0000dbf4      e8374bffff     call sym.imp.dcgettext
0x0000dbf9      4889c1         mov rcx, rax
0x0000dbfc      4889442460     mov qword [rsp + 0x60], rax
0x0000dc01      488d059d8e00.  lea rax, [0x00016aa5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000dc08      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000dc0b      0f8483030000   je 0xdf94
0x0000dc11      4531ff         xor r15d, r15d
0x0000dc14      85db           test ebx, ebx
0x0000dc16      0f84c1010000   je 0xdddd
0x0000dc1c      85db           test ebx, ebx
0x0000dc1e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x0000dc23      0f9544240f     setne byte [rsp + 0xf]
0x0000dc28      4531e4         xor r12d, r12d
0x0000dc2b      4889df         mov rdi, rbx
0x0000dc2e      e81d4bffff     call sym.imp.strlen
0x0000dc33      48895c2448     mov qword [rsp + 0x48], rbx
0x0000dc38      4889442418     mov qword [rsp + 0x18], rax
0x0000dc3d      c644240e01     mov byte [rsp + 0xe], 1
0x0000dc42      c644247c00     mov byte [rsp + 0x7c], 0
0x0000dc47      48c744245000.  mov qword [rsp + 0x50], 0
0x0000dc50      c644240d01     mov byte [rsp + 0xd], 1
0x0000dc55      e999f2ffff     jmp 0xcef3
0x0000dc5a      c644240e01     mov byte [rsp + 0xe], 1
0x0000dc5f      c644247c00     mov byte [rsp + 0x7c], 0
0x0000dc64      4531e4         xor r12d, r12d
0x0000dc67      48c744245000.  mov qword [rsp + 0x50], 0
0x0000dc70      c644240f00     mov byte [rsp + 0xf], 0
0x0000dc75      4531ff         xor r15d, r15d
0x0000dc78      c644240d00     mov byte [rsp + 0xd], 0
0x0000dc7d      48c744241800.  mov qword [rsp + 0x18], 0
0x0000dc86      48c744244800.  mov qword [rsp + 0x48], 0
0x0000dc8f      e95ff2ffff     jmp 0xcef3
0x0000dc94      c644240e01     mov byte [rsp + 0xe], 1
0x0000dc99      c644247c00     mov byte [rsp + 0x7c], 0
0x0000dc9e      4531e4         xor r12d, r12d
0x0000dca1      48c744245000.  mov qword [rsp + 0x50], 0
0x0000dcaa      c644240f01     mov byte [rsp + 0xf], 1
0x0000dcaf      c644240d01     mov byte [rsp + 0xd], 1
0x0000dcb4      e91af2ffff     jmp 0xced3
0x0000dcb9      4d39fd         cmp r13, r15
0x0000dcbc      7605           jbe 0xdcc3
0x0000dcbe      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x0000dcc3      488d4102       lea rax, [rcx + 2]
0x0000dcc7      4939c5         cmp r13, rax
0x0000dcca      7606           jbe 0xdcd2
0x0000dccc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x0000dcd2      4489e0         mov eax, r12d
0x0000dcd5      4c8d7903       lea r15, [rcx + 3]
0x0000dcd9      4531e4         xor r12d, r12d
0x0000dcdc      bb30000000     mov ebx, 0x30                           ; '0'
0x0000dce1      e962f3ffff     jmp 0xd048
0x0000dce6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000dcf0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000dcf5      4c89dd         mov rbp, r11
0x0000dcf8      885c240d       mov byte [rsp + 0xd], bl
0x0000dcfc      e9a8fcffff     jmp 0xd9a9
0x0000dd01      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000dd06      4531e4         xor r12d, r12d
0x0000dd09      e902fbffff     jmp 0xd810
0x0000dd0e      4531d2         xor r10d, r10d
0x0000dd11      e9b7fbffff     jmp 0xd8cd
0x0000dd16      48c744245000.  mov qword [rsp + 0x50], 0
0x0000dd1f      c644240e01     mov byte [rsp + 0xe], 1
0x0000dd24      4531e4         xor r12d, r12d
0x0000dd27      c644247c00     mov byte [rsp + 0x7c], 0
0x0000dd2c      e9dafdffff     jmp 0xdb0b
0x0000dd31      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000dd36      4c89f6         mov rsi, r14
0x0000dd39      4c89e9         mov rcx, r13
0x0000dd3c      4889d8         mov rax, rbx
0x0000dd3f      4889df         mov rdi, rbx
0x0000dd42      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000dd48      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000dd4d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x0000dd55      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x0000dd58      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000dd5e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x0000dd66      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000dd6b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000dd70      7326           jae 0xdd98
0x0000dd72      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000dd75      7510           jne 0xdd87
0x0000dd77      eb1f           jmp 0xdd98
0x0000dd79      0f1f80000000.  nop dword [rax]
0x0000dd80      41803c0100     cmp byte [r9 + rax], 0
0x0000dd85      740e           je 0xdd95
0x0000dd87      4883c001       add rax, 1
0x0000dd8b      488d540500     lea rdx, [rbp + rax]
0x0000dd90      4939d3         cmp r11, rdx
0x0000dd93      77eb           ja 0xdd80
0x0000dd95      4889c7         mov rdi, rax
0x0000dd98      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000dd9d      4531e4         xor r12d, r12d
0x0000dda0      e961faffff     jmp 0xd806
0x0000dda5      4889df         mov rdi, rbx
0x0000dda8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000ddae      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000ddb3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000ddb9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x0000ddc1      4531e4         xor r12d, r12d
0x0000ddc4      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000ddc9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000ddce      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000ddd3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000ddd8      e929faffff     jmp 0xd806
0x0000dddd      488b542468     mov rdx, qword [rsp + 0x68]
0x0000dde2      0fb602         movzx eax, byte [rdx]
0x0000dde5      84c0           test al, al
0x0000dde7      0f842ffeffff   je 0xdc1c
0x0000dded      0f1f00         nop dword [rax]
0x0000ddf0      4d39fd         cmp r13, r15
0x0000ddf3      7604           jbe 0xddf9
0x0000ddf5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x0000ddf9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000ddfd      420fb6043a     movzx eax, byte [rdx + r15]
0x0000de02      84c0           test al, al
0x0000de04      75ea           jne 0xddf0
0x0000de06      e911feffff     jmp 0xdc1c
0x0000de0b      89d0           mov eax, edx
0x0000de0d      e955f5ffff     jmp 0xd367
0x0000de12      0fb61c08       movzx ebx, byte [rax + rcx]
0x0000de16      80fb3e         cmp bl, 0x3e
0x0000de19      0f8771f8ffff   ja 0xd690
0x0000de1f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x0000de29      480fa3d8       bt rax, rbx
0x0000de2d      0f835df8ffff   jae 0xd690
0x0000de33      807c240f00     cmp byte [rsp + 0xf], 0
0x0000de38      0f85e4010000   jne 0xe022                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000de3e      4d39fd         cmp r13, r15
0x0000de41      7605           jbe 0xde48
0x0000de43      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x0000de48      498d4701       lea rax, [r15 + 1]
0x0000de4c      4939c5         cmp r13, rax
0x0000de4f      7606           jbe 0xde57
0x0000de51      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x0000de57      498d4702       lea rax, [r15 + 2]
0x0000de5b      4939c5         cmp r13, rax
0x0000de5e      7606           jbe 0xde66
0x0000de60      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x0000de66      498d4703       lea rax, [r15 + 3]
0x0000de6a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000de6d      7606           jbe 0xde75
0x0000de6f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x0000de75      4983c704       add r15, 4
0x0000de79      31d2           xor edx, edx
0x0000de7b      4531e4         xor r12d, r12d
0x0000de7e      31c0           xor eax, eax
0x0000de80      4889cd         mov rbp, rcx
0x0000de83      e9c0f1ffff     jmp 0xd048
0x0000de88      85db           test ebx, ebx
0x0000de8a      0f8488010000   je 0xe018
0x0000de90      488d050e8c00.  lea rax, [0x00016aa5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000de97      c644240e01     mov byte [rsp + 0xe], 1
0x0000de9c      c644247c00     mov byte [rsp + 0x7c], 0
0x0000dea1      4531e4         xor r12d, r12d
0x0000dea4      48c744245000.  mov qword [rsp + 0x50], 0
0x0000dead      c644240f01     mov byte [rsp + 0xf], 1
0x0000deb2      c644240d00     mov byte [rsp + 0xd], 0
0x0000deb7      48c744241801.  mov qword [rsp + 0x18], 1
0x0000dec0      4531ff         xor r15d, r15d
0x0000dec3      4889442448     mov qword [rsp + 0x48], rax
0x0000dec8      e926f0ffff     jmp 0xcef3
0x0000decd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x0000ded0      4c89dd         mov rbp, r11
0x0000ded3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x0000ded8      e9ccfaffff     jmp 0xd9a9
0x0000dedd      488d05bf8b00.  lea rax, str.l______l                   ; 0x16aa3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000dee4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x0000dee9      c644247c00     mov byte [rsp + 0x7c], 0
0x0000deee      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x0000def1      48c744245000.  mov qword [rsp + 0x50], 0
0x0000defa      c644240f01     mov byte [rsp + 0xf], 1
0x0000deff      c644240d01     mov byte [rsp + 0xd], 1
0x0000df04      48c744241801.  mov qword [rsp + 0x18], 1
0x0000df0d      4531ff         xor r15d, r15d
0x0000df10      4889442448     mov qword [rsp + 0x48], rax
0x0000df15      e9d9efffff     jmp 0xcef3
0x0000df1a      89d0           mov eax, edx
0x0000df1c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x0000df21      4885db         test rbx, rbx
0x0000df24      742c           je 0xdf52
0x0000df26      84c0           test al, al
0x0000df28      7428           je 0xdf52
0x0000df2a      0fb60b         movzx ecx, byte [rbx]
0x0000df2d      4889d8         mov rax, rbx
0x0000df30      84c9           test cl, cl
0x0000df32      741e           je 0xdf52
0x0000df34      4c89fa         mov rdx, r15
0x0000df37      4c29f8         sub rax, r15
0x0000df3a      4939d5         cmp r13, rdx
0x0000df3d      7604           jbe 0xdf43
0x0000df3f      41880c16       mov byte [r14 + rdx], cl
0x0000df43      4883c201       add rdx, 1
0x0000df47      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000df4b      84c9           test cl, cl
0x0000df4d      75eb           jne 0xdf3a
0x0000df4f      4989d7         mov r15, rdx
0x0000df52      4d39fd         cmp r13, r15
0x0000df55      0f869efaffff   jbe 0xd9f9
0x0000df5b      43c6043e00     mov byte [r14 + r15], 0
0x0000df60      e994faffff     jmp 0xd9f9
0x0000df65      837c240802     cmp dword [rsp + 8], 2
0x0000df6a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000df6f      4c89dd         mov rbp, r11
0x0000df72      0f94c0         sete al
0x0000df75      885c240d       mov byte [rsp + 0xd], bl
0x0000df79      e92bfaffff     jmp 0xd9a9
0x0000df7e      8b742408       mov esi, dword [rsp + 8]
0x0000df82      4889cf         mov rdi, rcx
0x0000df85      e8a6edffff     call sym.gettext_quote.part.1
0x0000df8a      4889442468     mov qword [rsp + 0x68], rax
0x0000df8f      e952fcffff     jmp 0xdbe6
0x0000df94      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x0000df98      4889cf         mov rdi, rcx
0x0000df9b      e890edffff     call sym.gettext_quote.part.1
0x0000dfa0      4889442460     mov qword [rsp + 0x60], rax
0x0000dfa5      e967fcffff     jmp 0xdc11
0x0000dfaa      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000dfaf      4c89dd         mov rbp, r11
0x0000dfb2      89d0           mov eax, edx
0x0000dfb4      885c240d       mov byte [rsp + 0xd], bl
0x0000dfb8      e9ecf9ffff     jmp 0xd9a9
0x0000dfbd      4883ec08       sub rsp, 8
0x0000dfc1      41b805000000   mov r8d, 5
0x0000dfc7      4c89d9         mov rcx, r11
0x0000dfca      ff742468       push qword [rsp + 0x68]
0x0000dfce      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x0000dfd2      4c89f7         mov rdi, r14
0x0000dfd5      ff742438       push qword [rsp + 0x38]
0x0000dfd9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000dfe1      488b542430     mov rdx, qword [rsp + 0x30]
0x0000dfe6      488b742470     mov rsi, qword [rsp + 0x70]
0x0000dfeb      e830eeffff     call sym.quotearg_buffer_restyled
0x0000dff0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x0000dff4      4989c7         mov r15, rax
0x0000dff7      e9fdf9ffff     jmp 0xd9f9
0x0000dffc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x0000e001      e916ffffff     jmp 0xdf1c
0x0000e006      c74424080200.  mov dword [rsp + 8], 2
0x0000e00e      e996f9ffff     jmp 0xd9a9
0x0000e013      e86847ffff     call sym.imp.__stack_chk_fail
0x0000e018      c644240d00     mov byte [rsp + 0xd], 0
0x0000e01d      e96ffaffff     jmp 0xda91
0x0000e022      4c89dd         mov rbp, r11
0x0000e025      e996f9ffff     jmp 0xd9c0
0x0000e02a      c644240e01     mov byte [rsp + 0xe], 1
0x0000e02f      31c0           xor eax, eax
0x0000e031      4531e4         xor r12d, r12d
0x0000e034      48c744245000.  mov qword [rsp + 0x50], 0
0x0000e03d      e9a2f5ffff     jmp 0xd5e4
0x0000e042      4c89ea         mov rdx, r13
0x0000e045      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000e04a      e9f3f5ffff     jmp 0xd642
0x0000e04f      e83c45ffff     call sym.imp.abort
0x0000e054      6690           nop
0x0000e056      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x0000e060      4157           push r15
0x0000e062      4156           push r14
0x0000e064      4c63ff         movsxd r15, edi
0x0000e067      4155           push r13
0x0000e069      4154           push r12
0x0000e06b      4989d6         mov r14, rdx
0x0000e06e      55             push rbp
0x0000e06f      53             push rbx
0x0000e070      4889cd         mov rbp, rcx
0x0000e073      4883ec28       sub rsp, 0x28
0x0000e077      4889742408     mov qword [rsp + 8], rsi
0x0000e07c      e81f45ffff     call sym.imp.__errno_location
0x0000e081      4989c5         mov r13, rax
0x0000e084      8b00           mov eax, dword [rax]
0x0000e086      4585ff         test r15d, r15d
0x0000e089      488b1df0df20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x21c080:8]=0x21c090 obj.slotvec0
0x0000e090      89442418       mov dword [rsp + 0x18], eax
0x0000e094      0f8867010000   js 0xe201
0x0000e09a      44393dd7df20.  cmp dword [obj.nslots], r15d            ; [0x21c078:4]=1
0x0000e0a1      7f62           jg 0xe105
0x0000e0a3      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000e0aa      0f8456010000   je 0xe206
0x0000e0b0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x0000e0b4      488d05d5df20.  lea rax, obj.slotvec0                   ; 0x21c090
0x0000e0bb      4963f4         movsxd rsi, r12d
0x0000e0be      48c1e604       shl rsi, 4
0x0000e0c2      4839c3         cmp rbx, rax
0x0000e0c5      0f8415010000   je 0xe1e0
0x0000e0cb      4889df         mov rdi, rbx
0x0000e0ce      e84d2c0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x0000e0d3      4889c3         mov rbx, rax
0x0000e0d6      488905a3df20.  mov qword [obj.slotvec], rax            ; [0x21c080:8]=0x21c090 obj.slotvec0
0x0000e0dd      48633d94df20.  movsxd rdi, dword [obj.nslots]          ; [0x21c078:4]=1
0x0000e0e4      4489e2         mov edx, r12d
0x0000e0e7      31f6           xor esi, esi
0x0000e0e9      29fa           sub edx, edi
0x0000e0eb      48c1e704       shl rdi, 4
0x0000e0ef      4863d2         movsxd rdx, edx
0x0000e0f2      4801df         add rdi, rbx
0x0000e0f5      48c1e204       shl rdx, 4
0x0000e0f9      e83247ffff     call sym.imp.memset
0x0000e0fe      44892573df20.  mov dword [obj.nslots], r12d            ; [0x21c078:4]=1
0x0000e105      8b4504         mov eax, dword [rbp + 4]
0x0000e108      49c1e704       shl r15, 4
0x0000e10c      4883ec08       sub rsp, 8
0x0000e110      4c01fb         add rbx, r15
0x0000e113      4c8d7d08       lea r15, [rbp + 8]
0x0000e117      448b4500       mov r8d, dword [rbp]
0x0000e11b      4c8b1b         mov r11, qword [rbx]
0x0000e11e      4c8b6308       mov r12, qword [rbx + 8]
0x0000e122      4c89f1         mov rcx, r14
0x0000e125      83c801         or eax, 1
0x0000e128      89442424       mov dword [rsp + 0x24], eax
0x0000e12c      ff7530         push qword [rbp + 0x30]
0x0000e12f      4189c1         mov r9d, eax
0x0000e132      ff7528         push qword [rbp + 0x28]
0x0000e135      4157           push r15
0x0000e137      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000e13a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000e13f      4c89e7         mov rdi, r12
0x0000e142      4c895c2430     mov qword [rsp + 0x30], r11
0x0000e147      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000e14c      4883c420       add rsp, 0x20
0x0000e150      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x0000e155      4939c3         cmp r11, rax
0x0000e158      7767           ja 0xe1c1
0x0000e15a      488d7001       lea rsi, [rax + 1]
0x0000e15e      488d053be420.  lea rax, obj.slot0                      ; 0x21c5a0
0x0000e165      4939c4         cmp r12, rax
0x0000e168      488933         mov qword [rbx], rsi
0x0000e16b      7412           je 0xe17f
0x0000e16d      4c89e7         mov rdi, r12
0x0000e170      4889742410     mov qword [rsp + 0x10], rsi
0x0000e175      e8064bffff     call sym..plt.got
0x0000e17a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000e17f      4889f7         mov rdi, rsi
0x0000e182      4889742410     mov qword [rsp + 0x10], rsi
0x0000e187      e8342b0000     call sym.xmalloc
0x0000e18c      4883ec08       sub rsp, 8
0x0000e190      48894308       mov qword [rbx + 8], rax
0x0000e194      448b4500       mov r8d, dword [rbp]
0x0000e198      ff7530         push qword [rbp + 0x30]
0x0000e19b      ff7528         push qword [rbp + 0x28]
0x0000e19e      4c89f1         mov rcx, r14
0x0000e1a1      4157           push r15
0x0000e1a3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x0000e1a8      4889c7         mov rdi, rax
0x0000e1ab      488b542428     mov rdx, qword [rsp + 0x28]
0x0000e1b0      488b742430     mov rsi, qword [rsp + 0x30]
0x0000e1b5      4989c4         mov r12, rax
0x0000e1b8      e863ecffff     call sym.quotearg_buffer_restyled
0x0000e1bd      4883c420       add rsp, 0x20
0x0000e1c1      8b442418       mov eax, dword [rsp + 0x18]
0x0000e1c5      41894500       mov dword [r13], eax
0x0000e1c9      4883c428       add rsp, 0x28
0x0000e1cd      4c89e0         mov rax, r12
0x0000e1d0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x0000e1d1      5d             pop rbp
0x0000e1d2      415c           pop r12
0x0000e1d4      415d           pop r13
0x0000e1d6      415e           pop r14
0x0000e1d8      415f           pop r15
0x0000e1da      c3             ret
0x0000e1db      0f1f440000     nop dword [rax + rax]
0x0000e1e0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x0000e1e2      e8392b0000     call sym.xrealloc
0x0000e1e7      660f6f05a1de.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000e1ef      4889c3         mov rbx, rax
0x0000e1f2      48890587de20.  mov qword [obj.slotvec], rax            ; [0x21c080:8]=0x21c090 obj.slotvec0
0x0000e1f9      0f1100         movups xmmword [rax], xmm0
0x0000e1fc      e9dcfeffff     jmp 0xe0dd
0x0000e201      e88a43ffff     call sym.imp.abort
0x0000e206      e8052d0000     call sym.xalloc_die
0x0000e20b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x0000e210      4154           push r12
0x0000e212      55             push rbp
0x0000e213      53             push rbx
0x0000e214      4889fb         mov rbx, rdi
0x0000e217      e88443ffff     call sym.imp.__errno_location
0x0000e21c      448b20         mov r12d, dword [rax]
0x0000e21f      4889c5         mov rbp, rax
0x0000e222      488d0577e420.  lea rax, obj.default_quoting_options    ; 0x21c6a0
0x0000e229      4885db         test rbx, rbx
0x0000e22c      be38000000     mov esi, 0x38                           ; '8'
0x0000e231      480f44d8       cmove rbx, rax
0x0000e235      4889df         mov rdi, rbx
0x0000e238      e8832c0000     call sym.xmemdup
0x0000e23d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x0000e241      5b             pop rbx
0x0000e242      5d             pop rbp
0x0000e243      415c           pop r12
0x0000e245      c3             ret
0x0000e246      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x0000e250      488d0549e420.  lea rax, obj.default_quoting_options    ; 0x21c6a0
0x0000e257      4885ff         test rdi, rdi
0x0000e25a      480f44f8       cmove rdi, rax
0x0000e25e      8b07           mov eax, dword [rdi]
0x0000e260      c3             ret
0x0000e261      0f1f440000     nop dword [rax + rax]
0x0000e266      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x0000e270      488d0529e420.  lea rax, obj.default_quoting_options    ; 0x21c6a0
0x0000e277      4885ff         test rdi, rdi
0x0000e27a      480f44f8       cmove rdi, rax
0x0000e27e      8937           mov dword [rdi], esi
0x0000e280      c3             ret
0x0000e281      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000e286      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x0000e290      488d0509e420.  lea rax, obj.default_quoting_options    ; 0x21c6a0
0x0000e297      4885ff         test rdi, rdi
0x0000e29a      89f1           mov ecx, esi
0x0000e29c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x0000e2a0      89f0           mov eax, esi
0x0000e2a2      83e11f         and ecx, 0x1f
0x0000e2a5      c0e805         shr al, 5
0x0000e2a8      0fb6c0         movzx eax, al
0x0000e2ab      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x0000e2b0      8b37           mov esi, dword [rdi]
0x0000e2b2      89f0           mov eax, esi
0x0000e2b4      d3e8           shr eax, cl
0x0000e2b6      31c2           xor edx, eax
0x0000e2b8      83e001         and eax, 1
0x0000e2bb      83e201         and edx, 1
0x0000e2be      d3e2           shl edx, cl
0x0000e2c0      31f2           xor edx, esi
0x0000e2c2      8917           mov dword [rdi], edx
0x0000e2c4      c3             ret
0x0000e2c5      90             nop
0x0000e2c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x0000e2d0      488d05c9e320.  lea rax, obj.default_quoting_options    ; 0x21c6a0
0x0000e2d7      4885ff         test rdi, rdi
0x0000e2da      480f44f8       cmove rdi, rax
0x0000e2de      8b4704         mov eax, dword [rdi + 4]
0x0000e2e1      897704         mov dword [rdi + 4], esi
0x0000e2e4      c3             ret
0x0000e2e5      90             nop
0x0000e2e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x0000e2f0      488d05a9e320.  lea rax, obj.default_quoting_options    ; 0x21c6a0
0x0000e2f7      4885ff         test rdi, rdi
0x0000e2fa      480f44f8       cmove rdi, rax
0x0000e2fe      4885f6         test rsi, rsi
0x0000e301      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000e307      740e           je 0xe317
0x0000e309      4885d2         test rdx, rdx
0x0000e30c      7409           je 0xe317
0x0000e30e      48897728       mov qword [rdi + 0x28], rsi
0x0000e312      48895730       mov qword [rdi + 0x30], rdx
0x0000e316      c3             ret
0x0000e317      4883ec08       sub rsp, 8
0x0000e31b      e87042ffff     call sym.imp.abort
;-- quotearg_buffer:
0x0000e320      4157           push r15
0x0000e322      4156           push r14
0x0000e324      488d0575e320.  lea rax, obj.default_quoting_options    ; 0x21c6a0
0x0000e32b      4155           push r13
0x0000e32d      4154           push r12
0x0000e32f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x0000e332      55             push rbp
0x0000e333      53             push rbx
0x0000e334      4c89c3         mov rbx, r8
0x0000e337      4989f6         mov r14, rsi
0x0000e33a      4989d7         mov r15, rdx
0x0000e33d      4883ec18       sub rsp, 0x18
0x0000e341      4d85c0         test r8, r8
0x0000e344      480f44d8       cmove rbx, rax
0x0000e348      48894c2408     mov qword [rsp + 8], rcx
0x0000e34d      e84e42ffff     call sym.imp.__errno_location
0x0000e352      448b20         mov r12d, dword [rax]
0x0000e355      4889c5         mov rbp, rax
0x0000e358      488d4308       lea rax, [rbx + 8]
0x0000e35c      4883ec08       sub rsp, 8
0x0000e360      448b4b04       mov r9d, dword [rbx + 4]
0x0000e364      ff7330         push qword [rbx + 0x30]
0x0000e367      448b03         mov r8d, dword [rbx]
0x0000e36a      ff7328         push qword [rbx + 0x28]
0x0000e36d      4c89fa         mov rdx, r15
0x0000e370      50             push rax
0x0000e371      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0000e376      4c89f6         mov rsi, r14
0x0000e379      4c89ef         mov rdi, r13
0x0000e37c      e89feaffff     call sym.quotearg_buffer_restyled
0x0000e381      44896500       mov dword [rbp], r12d
0x0000e385      4883c438       add rsp, 0x38
0x0000e389      5b             pop rbx
0x0000e38a      5d             pop rbp
0x0000e38b      415c           pop r12
0x0000e38d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000e38f      415e           pop r14
0x0000e391      415f           pop r15
0x0000e393      c3             ret
0x0000e394      6690           nop
0x0000e396      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x0000e3a0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x0000e3a2      4156           push r14
0x0000e3a4      488d05f5e220.  lea rax, obj.default_quoting_options    ; 0x21c6a0
0x0000e3ab      4155           push r13
0x0000e3ad      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000e3af      4989d4         mov r12, rdx
0x0000e3b2      55             push rbp
0x0000e3b3      53             push rbx
0x0000e3b4      4889cb         mov rbx, rcx
0x0000e3b7      4989fe         mov r14, rdi
0x0000e3ba      4989f7         mov r15, rsi
0x0000e3bd      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x0000e3c1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x0000e3c4      480f44d8       cmove rbx, rax
0x0000e3c8      31ed           xor ebp, ebp
0x0000e3ca      e8d141ffff     call sym.imp.__errno_location
0x0000e3cf      4d85e4         test r12, r12
0x0000e3d2      4989c5         mov r13, rax
0x0000e3d5      8b00           mov eax, dword [rax]
0x0000e3d7      400f94c5       sete bpl
0x0000e3db      0b6b04         or ebp, dword [rbx + 4]
0x0000e3de      4c8d5308       lea r10, [rbx + 8]
0x0000e3e2      4883ec08       sub rsp, 8
0x0000e3e6      448b03         mov r8d, dword [rbx]
0x0000e3e9      4c89f9         mov rcx, r15
0x0000e3ec      89442414       mov dword [rsp + 0x14], eax
0x0000e3f0      ff7330         push qword [rbx + 0x30]
0x0000e3f3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x0000e3f6      ff7328         push qword [rbx + 0x28]
0x0000e3f9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000e3fb      31f6           xor esi, esi
0x0000e3fd      4189e9         mov r9d, ebp
0x0000e400      31ff           xor edi, edi
0x0000e402      4c89542440     mov qword [rsp + 0x40], r10
0x0000e407      e814eaffff     call sym.quotearg_buffer_restyled
0x0000e40c      488d7001       lea rsi, [rax + 1]
0x0000e410      4889442448     mov qword [rsp + 0x48], rax
0x0000e415      4883c420       add rsp, 0x20
0x0000e419      4889f7         mov rdi, rsi
0x0000e41c      4889742418     mov qword [rsp + 0x18], rsi
0x0000e421      e89a280000     call sym.xmalloc
0x0000e426      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000e42b      4883ec08       sub rsp, 8
0x0000e42f      ff7330         push qword [rbx + 0x30]
0x0000e432      ff7328         push qword [rbx + 0x28]
0x0000e435      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000e43a      4189e9         mov r9d, ebp
0x0000e43d      448b03         mov r8d, dword [rbx]
0x0000e440      4c89f9         mov rcx, r15
0x0000e443      4c89f2         mov rdx, r14
0x0000e446      4889c7         mov rdi, rax
0x0000e449      4152           push r10
0x0000e44b      488b742438     mov rsi, qword [rsp + 0x38]
0x0000e450      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x0000e455      8b44242c       mov eax, dword [rsp + 0x2c]
0x0000e459      4883c420       add rsp, 0x20
0x0000e45d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x0000e460      41894500       mov dword [r13], eax
0x0000e464      7409           je 0xe46f
0x0000e466      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000e46b      4d891c24       mov qword [r12], r11
0x0000e46f      488b442410     mov rax, qword [rsp + 0x10]
0x0000e474      4883c438       add rsp, 0x38
0x0000e478      5b             pop rbx
0x0000e479      5d             pop rbp
0x0000e47a      415c           pop r12
0x0000e47c      415d           pop r13
0x0000e47e      415e           pop r14
0x0000e480      415f           pop r15
0x0000e482      c3             ret
0x0000e483      0f1f00         nop dword [rax]
0x0000e486      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x0000e490      4889d1         mov rcx, rdx
0x0000e493      31d2           xor edx, edx
0x0000e495      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000e49a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x0000e4a0      8b05d2db2000   mov eax, dword [obj.nslots]             ; [0x21c078:4]=1
0x0000e4a6      4154           push r12
0x0000e4a8      4c8b25d1db20.  mov r12, qword [obj.slotvec]            ; [0x21c080:8]=0x21c090 obj.slotvec0
0x0000e4af      55             push rbp
0x0000e4b0      53             push rbx
0x0000e4b1      83f801         cmp eax, 1
0x0000e4b4      7e2b           jle 0xe4e1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x0000e4b6      83e802         sub eax, 2
0x0000e4b9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000e4be      48c1e004       shl rax, 4
0x0000e4c2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x0000e4c7      660f1f840000.  nop word [rax + rax]
0x0000e4d0      488b3b         mov rdi, qword [rbx]
0x0000e4d3      4883c310       add rbx, 0x10
0x0000e4d7      e8a447ffff     call sym..plt.got
0x0000e4dc      4839eb         cmp rbx, rbp
0x0000e4df      75ef           jne 0xe4d0
0x0000e4e1      498b7c2408     mov rdi, qword [r12 + 8]
0x0000e4e6      488d1db3e020.  lea rbx, obj.slot0                      ; 0x21c5a0
0x0000e4ed      4839df         cmp rdi, rbx
0x0000e4f0      7417           je 0xe509
0x0000e4f2      e88947ffff     call sym..plt.got
0x0000e4f7      48c7058edb20.  mov qword [obj.slotvec0], 0x100         ; [0x21c090:8]=256
0x0000e502      48891d8fdb20.  mov qword [0x0021c098], rbx             ; [0x21c098:8]=0x21c5a0 obj.slot0
0x0000e509      488d1d80db20.  lea rbx, obj.slotvec0                   ; 0x21c090
0x0000e510      4939dc         cmp r12, rbx
0x0000e513      740f           je 0xe524
0x0000e515      4c89e7         mov rdi, r12
0x0000e518      e86347ffff     call sym..plt.got
0x0000e51d      48891d5cdb20.  mov qword [obj.slotvec], rbx            ; [0x21c080:8]=0x21c090 obj.slotvec0
0x0000e524      5b             pop rbx
0x0000e525      c70549db2000.  mov dword [obj.nslots], 1               ; [0x21c078:4]=1
0x0000e52f      5d             pop rbp
0x0000e530      415c           pop r12
0x0000e532      c3             ret
0x0000e533      0f1f00         nop dword [rax]
0x0000e536      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x0000e540      488d0d59e120.  lea rcx, obj.default_quoting_options    ; 0x21c6a0
0x0000e547      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000e54e      e90dfbffff     jmp sym.quotearg_n_options
0x0000e553      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x0000e556      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x0000e560      488d0d39e120.  lea rcx, obj.default_quoting_options    ; 0x21c6a0
0x0000e567      e9f4faffff     jmp sym.quotearg_n_options
0x0000e56c      0f1f4000       nop dword [rax]
;-- quotearg:
0x0000e570      488d0d29e120.  lea rcx, obj.default_quoting_options    ; 0x21c6a0
0x0000e577      4889fe         mov rsi, rdi
0x0000e57a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000e581      31ff           xor edi, edi
0x0000e583      e9d8faffff     jmp sym.quotearg_n_options
0x0000e588      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x0000e590      488d0d09e120.  lea rcx, obj.default_quoting_options    ; 0x21c6a0
0x0000e597      4889f2         mov rdx, rsi
0x0000e59a      4889fe         mov rsi, rdi
0x0000e59d      31ff           xor edi, edi
0x0000e59f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x0000e5a4      6690           nop
0x0000e5a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x0000e5b0      4883ec48       sub rsp, 0x48
0x0000e5b4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x0000e5b7      64488b142528.  mov rdx, qword fs:[0x28]
0x0000e5c0      4889542438     mov qword [rsp + 0x38], rdx
0x0000e5c5      31d2           xor edx, edx
0x0000e5c7      83fe0a         cmp esi, 0xa
0x0000e5ca      7468           je 0xe634
0x0000e5cc      893424         mov dword [rsp], esi
0x0000e5cf      4889e1         mov rcx, rsp
0x0000e5d2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000e5d9      4889c6         mov rsi, rax
0x0000e5dc      48c744240400.  mov qword [rsp + 4], 0
0x0000e5e5      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000e5ee      48c744241400.  mov qword [rsp + 0x14], 0
0x0000e5f7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000e600      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x0000e609      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000e612      c74424340000.  mov dword [rsp + 0x34], 0
0x0000e61a      e841faffff     call sym.quotearg_n_options
0x0000e61f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000e624      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000e62d      750a           jne 0xe639                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000e62f      4883c448       add rsp, 0x48
0x0000e633      c3             ret
0x0000e634      e8573fffff     call sym.imp.abort
0x0000e639      e84241ffff     call sym.imp.__stack_chk_fail
0x0000e63e      6690           nop
;-- quotearg_n_style_mem:
0x0000e640      4883ec48       sub rsp, 0x48
0x0000e644      4889d0         mov rax, rdx
0x0000e647      4889ca         mov rdx, rcx
0x0000e64a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x0000e653      48894c2438     mov qword [rsp + 0x38], rcx
0x0000e658      31c9           xor ecx, ecx
0x0000e65a      83fe0a         cmp esi, 0xa
0x0000e65d      7461           je 0xe6c0
0x0000e65f      893424         mov dword [rsp], esi
0x0000e662      4889e1         mov rcx, rsp
0x0000e665      4889c6         mov rsi, rax
0x0000e668      48c744240400.  mov qword [rsp + 4], 0
0x0000e671      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000e67a      48c744241400.  mov qword [rsp + 0x14], 0
0x0000e683      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000e68c      48c744242400.  mov qword [rsp + 0x24], 0
0x0000e695      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000e69e      c74424340000.  mov dword [rsp + 0x34], 0
0x0000e6a6      e8b5f9ffff     call sym.quotearg_n_options
0x0000e6ab      488b542438     mov rdx, qword [rsp + 0x38]
0x0000e6b0      644833142528.  xor rdx, qword fs:[0x28]
0x0000e6b9      750a           jne 0xe6c5
0x0000e6bb      4883c448       add rsp, 0x48
0x0000e6bf      c3             ret
0x0000e6c0      e8cb3effff     call sym.imp.abort
0x0000e6c5      e8b640ffff     call sym.imp.__stack_chk_fail
0x0000e6ca      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x0000e6d0      4889f2         mov rdx, rsi
0x0000e6d3      89fe           mov esi, edi
0x0000e6d5      31ff           xor edi, edi
0x0000e6d7      e9d4feffff     jmp sym.quotearg_n_style
0x0000e6dc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x0000e6e0      4889d1         mov rcx, rdx
0x0000e6e3      4889f2         mov rdx, rsi
0x0000e6e6      89fe           mov esi, edi
0x0000e6e8      31ff           xor edi, edi
0x0000e6ea      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000e6ef      90             nop
;-- quotearg_char_mem:
0x0000e6f0      4883ec48       sub rsp, 0x48
0x0000e6f4      89d1           mov ecx, edx
0x0000e6f6      64488b042528.  mov rax, qword fs:[0x28]
0x0000e6ff      4889442438     mov qword [rsp + 0x38], rax
0x0000e704      31c0           xor eax, eax
0x0000e706      488b05c3df20.  mov rax, qword [0x0021c6d0]             ; [0x21c6d0:8]=0
0x0000e70d      4989e0         mov r8, rsp
0x0000e710      83e11f         and ecx, 0x1f
0x0000e713      660f6f0585df.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000e71b      4889442430     mov qword [rsp + 0x30], rax
0x0000e720      89d0           mov eax, edx
0x0000e722      0f290424       movaps xmmword [rsp], xmm0
0x0000e726      c0e805         shr al, 5
0x0000e729      0fb6c0         movzx eax, al
0x0000e72c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x0000e731      660f6f0577df.  movdqa xmm0, xmmword [0x0021c6b0]
0x0000e739      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000e73e      660f6f057adf.  movdqa xmm0, xmmword [0x0021c6c0]
0x0000e746      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000e74b      418b11         mov edx, dword [r9]
0x0000e74e      89d0           mov eax, edx
0x0000e750      d3e8           shr eax, cl
0x0000e752      f7d0           not eax
0x0000e754      83e001         and eax, 1
0x0000e757      d3e0           shl eax, cl
0x0000e759      4c89c1         mov rcx, r8
0x0000e75c      31d0           xor eax, edx
0x0000e75e      4889f2         mov rdx, rsi
0x0000e761      4889fe         mov rsi, rdi
0x0000e764      418901         mov dword [r9], eax
0x0000e767      31ff           xor edi, edi
0x0000e769      e8f2f8ffff     call sym.quotearg_n_options
0x0000e76e      488b742438     mov rsi, qword [rsp + 0x38]
0x0000e773      644833342528.  xor rsi, qword fs:[0x28]
0x0000e77c      7505           jne 0xe783
0x0000e77e      4883c448       add rsp, 0x48
0x0000e782      c3             ret
0x0000e783      e8f83fffff     call sym.imp.__stack_chk_fail
0x0000e788      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x0000e790      400fbed6       movsx edx, sil
0x0000e794      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000e79b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x0000e7a0      ba3a000000     mov edx, 0x3a                           ; ':'
0x0000e7a5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000e7ac      e93fffffff     jmp sym.quotearg_char_mem
0x0000e7b1      0f1f440000     nop dword [rax + rax]
0x0000e7b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x0000e7c0      ba3a000000     mov edx, 0x3a                           ; ':'
0x0000e7c5      e926ffffff     jmp sym.quotearg_char_mem
0x0000e7ca      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x0000e7d0      4883ec48       sub rsp, 0x48
0x0000e7d4      4889d0         mov rax, rdx
0x0000e7d7      64488b142528.  mov rdx, qword fs:[0x28]
0x0000e7e0      4889542438     mov qword [rsp + 0x38], rdx
0x0000e7e5      31d2           xor edx, edx
0x0000e7e7      83fe0a         cmp esi, 0xa
0x0000e7ea      7468           je 0xe854
0x0000e7ec      893424         mov dword [rsp], esi
0x0000e7ef      4889e1         mov rcx, rsp
0x0000e7f2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000e7f9      4889c6         mov rsi, rax
0x0000e7fc      48c744240400.  mov qword [rsp + 4], 0
0x0000e805      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000e80e      48c744241400.  mov qword [rsp + 0x14], 0
0x0000e817      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000e820      48c744242400.  mov qword [rsp + 0x24], 0
0x0000e829      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000e832      c74424340000.  mov dword [rsp + 0x34], 0
0x0000e83a      e821f8ffff     call sym.quotearg_n_options
0x0000e83f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000e844      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000e84d      750a           jne 0xe859
0x0000e84f      4883c448       add rsp, 0x48
0x0000e853      c3             ret
0x0000e854      e8373dffff     call sym.imp.abort
0x0000e859      e8223fffff     call sym.imp.__stack_chk_fail
0x0000e85e      6690           nop
;-- quotearg_n_custom_mem:
0x0000e860      4883ec48       sub rsp, 0x48
0x0000e864      4989c9         mov r9, rcx
0x0000e867      488b0d62de20.  mov rcx, qword [0x0021c6d0]             ; [0x21c6d0:8]=0
0x0000e86e      660f6f052ade.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000e876      64488b042528.  mov rax, qword fs:[0x28]
0x0000e87f      4889442438     mov qword [rsp + 0x38], rax
0x0000e884      31c0           xor eax, eax
0x0000e886      0f290424       movaps xmmword [rsp], xmm0
0x0000e88a      4885f6         test rsi, rsi
0x0000e88d      48894c2430     mov qword [rsp + 0x30], rcx
0x0000e892      c704240a0000.  mov dword [rsp], 0xa
0x0000e899      660f6f050fde.  movdqa xmm0, xmmword [0x0021c6b0]
0x0000e8a1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000e8a6      660f6f0512de.  movdqa xmm0, xmmword [0x0021c6c0]
0x0000e8ae      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000e8b3      7432           je 0xe8e7
0x0000e8b5      4885d2         test rdx, rdx
0x0000e8b8      742d           je 0xe8e7
0x0000e8ba      4889742428     mov qword [rsp + 0x28], rsi
0x0000e8bf      4889542430     mov qword [rsp + 0x30], rdx
0x0000e8c4      4889e1         mov rcx, rsp
0x0000e8c7      4c89c2         mov rdx, r8
0x0000e8ca      4c89ce         mov rsi, r9
0x0000e8cd      e88ef7ffff     call sym.quotearg_n_options
0x0000e8d2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000e8d7      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000e8e0      750a           jne 0xe8ec
0x0000e8e2      4883c448       add rsp, 0x48
0x0000e8e6      c3             ret
0x0000e8e7      e8a43cffff     call sym.imp.abort
0x0000e8ec      e88f3effff     call sym.imp.__stack_chk_fail
0x0000e8f1      0f1f440000     nop dword [rax + rax]
0x0000e8f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x0000e900      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000e907      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000e90c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x0000e910      4889d1         mov rcx, rdx
0x0000e913      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000e91a      4889f2         mov rdx, rsi
0x0000e91d      4889fe         mov rsi, rdi
0x0000e920      31ff           xor edi, edi
0x0000e922      e939ffffff     jmp sym.quotearg_n_custom_mem
0x0000e927      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x0000e930      4989c8         mov r8, rcx
0x0000e933      4889d1         mov rcx, rdx
0x0000e936      4889f2         mov rdx, rsi
0x0000e939      4889fe         mov rsi, rdi
0x0000e93c      31ff           xor edi, edi
0x0000e93e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x0000e943      0f1f00         nop dword [rax]
0x0000e946      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x0000e950      488d0de9d620.  lea rcx, obj.quote_quoting_options      ; 0x21c040
0x0000e957      e904f7ffff     jmp sym.quotearg_n_options
0x0000e95c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x0000e960      488d0dd9d620.  lea rcx, obj.quote_quoting_options      ; 0x21c040
0x0000e967      4889f2         mov rdx, rsi
0x0000e96a      4889fe         mov rsi, rdi
0x0000e96d      31ff           xor edi, edi
0x0000e96f      e9ecf6ffff     jmp sym.quotearg_n_options
0x0000e974      6690           nop
0x0000e976      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x0000e980      488d0db9d620.  lea rcx, obj.quote_quoting_options      ; 0x21c040
0x0000e987      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000e98e      e9cdf6ffff     jmp sym.quotearg_n_options
0x0000e993      0f1f00         nop dword [rax]
0x0000e996      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x0000e9a0      488d0d99d620.  lea rcx, obj.quote_quoting_options      ; 0x21c040
0x0000e9a7      4889fe         mov rsi, rdi
0x0000e9aa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000e9b1      31ff           xor edi, edi
0x0000e9b3      e9a8f6ffff     jmp sym.quotearg_n_options
0x0000e9b8      0f1f84000000.  nop dword [rax + rax]
;-- renameatu:
0x0000e9c0      4157           push r15
0x0000e9c2      4156           push r14
0x0000e9c4      4589c1         mov r9d, r8d
0x0000e9c7      4155           push r13
0x0000e9c9      4154           push r12
0x0000e9cb      4189d6         mov r14d, edx
0x0000e9ce      55             push rbp
0x0000e9cf      53             push rbx
0x0000e9d0      4989f4         mov r12, rsi
0x0000e9d3      4989cd         mov r13, rcx
0x0000e9d6      4489c5         mov ebp, r8d
0x0000e9d9      4989c8         mov r8, rcx
0x0000e9dc      4881ec480100.  sub rsp, 0x148
0x0000e9e3      89d1           mov ecx, edx
0x0000e9e5      4889f2         mov rdx, rsi
0x0000e9e8      64488b042528.  mov rax, qword fs:[0x28]
0x0000e9f1      488984243801.  mov qword [rsp + 0x138], rax
0x0000e9f9      31c0           xor eax, eax
0x0000e9fb      89fe           mov esi, edi
0x0000e9fd      897c2404       mov dword [rsp + 4], edi
0x0000ea01      bf3c010000     mov edi, 0x13c
0x0000ea06      e8653fffff     call sym.imp.syscall
0x0000ea0b      4889c3         mov rbx, rax
0x0000ea0e      4189c7         mov r15d, eax
0x0000ea11      e88a3bffff     call sym.imp.__errno_location
0x0000ea16      85db           test ebx, ebx
0x0000ea18      7836           js 0xea50
0x0000ea1a      488b94243801.  mov rdx, qword [rsp + 0x138]
0x0000ea22      644833142528.  xor rdx, qword fs:[0x28]
0x0000ea2b      4489f8         mov eax, r15d
0x0000ea2e      0f85f1010000   jne 0xec25
0x0000ea34      4881c4480100.  add rsp, 0x148
0x0000ea3b      5b             pop rbx
0x0000ea3c      5d             pop rbp
0x0000ea3d      415c           pop r12
0x0000ea3f      415d           pop r13
0x0000ea41      415e           pop r14
0x0000ea43      415f           pop r15
0x0000ea45      c3             ret
0x0000ea46      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ea50      4989c1         mov r9, rax
0x0000ea53      8b00           mov eax, dword [rax]
0x0000ea55      8d48ea         lea ecx, [rax - 0x16]
0x0000ea58      83e1ef         and ecx, 0xffffffef                     ; 4294967279
0x0000ea5b      0f95c3         setne bl
0x0000ea5e      83f85f         cmp eax, 0x5f
0x0000ea61      0f95c0         setne al
0x0000ea64      20c3           and bl, al
0x0000ea66      75b2           jne 0xea1a
0x0000ea68      85ed           test ebp, ebp
0x0000ea6a      7554           jne 0xeac0
0x0000ea6c      4c89e7         mov rdi, r12
0x0000ea6f      4c894c2408     mov qword [rsp + 8], r9
0x0000ea74      e8d73cffff     call sym.imp.strlen
0x0000ea79      4c89ef         mov rdi, r13
0x0000ea7c      4889c5         mov rbp, rax
0x0000ea7f      e8cc3cffff     call sym.imp.strlen
0x0000ea84      4885ed         test rbp, rbp
0x0000ea87      741a           je 0xeaa3
0x0000ea89      4885c0         test rax, rax
0x0000ea8c      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000ea91      7410           je 0xeaa3
0x0000ea93      41807c2cff2f   cmp byte [r12 + rbp - 1], 0x2f
0x0000ea99      7445           je 0xeae0
0x0000ea9b      41807c05ff2f   cmp byte [r13 + rax - 1], 0x2f
0x0000eaa1      743d           je 0xeae0
0x0000eaa3      8b7c2404       mov edi, dword [rsp + 4]
0x0000eaa7      4c89e9         mov rcx, r13
0x0000eaaa      4489f2         mov edx, r14d
0x0000eaad      4c89e6         mov rsi, r12
0x0000eab0      e81b41ffff     call sym.imp.renameat
0x0000eab5      4189c7         mov r15d, eax
0x0000eab8      e95dffffff     jmp 0xea1a
0x0000eabd      0f1f00         nop dword [rax]
0x0000eac0      83e5fe         and ebp, 0xfffffffe                     ; 4294967294
0x0000eac3      746b           je 0xeb30
0x0000eac5      41c7015f0000.  mov dword [r9], 0x5f                    ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x0000eacc      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x0000ead2      e943ffffff     jmp 0xea1a
0x0000ead7      660f1f840000.  nop word [rax + rax]
0x0000eae0      8b742404       mov esi, dword [rsp + 4]
0x0000eae4      488d4c2410     lea rcx, [rsp + 0x10]
0x0000eae9      41b800010000   mov r8d, 0x100
0x0000eaef      4c89e2         mov rdx, r12
0x0000eaf2      bf01000000     mov edi, 1
0x0000eaf7      4c894c2408     mov qword [rsp + 8], r9
0x0000eafc      e8bf3cffff     call sym.imp.__fxstatat
0x0000eb01      85c0           test eax, eax
0x0000eb03      7564           jne 0xeb69
0x0000eb05      84db           test bl, bl
0x0000eb07      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000eb0c      747c           je 0xeb8a
0x0000eb0e      8b442428       mov eax, dword [rsp + 0x28]
0x0000eb12      2500f00000     and eax, 0xf000
0x0000eb17      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x0000eb1c      7485           je 0xeaa3
0x0000eb1e      41c701020000.  mov dword [r9], 2
0x0000eb25      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x0000eb2b      e9eafeffff     jmp 0xea1a
0x0000eb30      488d8c24a000.  lea rcx, [rsp + 0xa0]
0x0000eb38      41b800010000   mov r8d, 0x100
0x0000eb3e      4c89ea         mov rdx, r13
0x0000eb41      4489f6         mov esi, r14d
0x0000eb44      bf01000000     mov edi, 1
0x0000eb49      4c894c2408     mov qword [rsp + 8], r9
0x0000eb4e      e86d3cffff     call sym.imp.__fxstatat
0x0000eb53      85c0           test eax, eax
0x0000eb55      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000eb5a      741c           je 0xeb78
0x0000eb5c      418b01         mov eax, dword [r9]
0x0000eb5f      83f84b         cmp eax, 0x4b
0x0000eb62      7414           je 0xeb78
0x0000eb64      83f802         cmp eax, 2
0x0000eb67      746f           je 0xebd8
0x0000eb69      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x0000eb6f      e9a6feffff     jmp 0xea1a
0x0000eb74      0f1f4000       nop dword [rax]
0x0000eb78      41c701110000.  mov dword [r9], 0x11                    ; [0x11:4]=0x1003e00
0x0000eb7f      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x0000eb85      e990feffff     jmp 0xea1a
0x0000eb8a      488d8c24a000.  lea rcx, [rsp + 0xa0]
0x0000eb92      41b800010000   mov r8d, 0x100
0x0000eb98      4c89ea         mov rdx, r13
0x0000eb9b      4489f6         mov esi, r14d
0x0000eb9e      bf01000000     mov edi, 1
0x0000eba3      4c894c2408     mov qword [rsp + 8], r9
0x0000eba8      e8133cffff     call sym.imp.__fxstatat
0x0000ebad      85c0           test eax, eax
0x0000ebaf      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000ebb4      742c           je 0xebe2
0x0000ebb6      41833902       cmp dword [r9], 2
0x0000ebba      75ad           jne 0xeb69
0x0000ebbc      8b442428       mov eax, dword [rsp + 0x28]
0x0000ebc0      2500f00000     and eax, 0xf000
0x0000ebc5      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x0000ebca      759d           jne 0xeb69
0x0000ebcc      e9d2feffff     jmp 0xeaa3
0x0000ebd1      0f1f80000000.  nop dword [rax]
0x0000ebd8      bb01000000     mov ebx, 1
0x0000ebdd      e98afeffff     jmp 0xea6c
0x0000ebe2      8b8424b80000.  mov eax, dword [rsp + 0xb8]
0x0000ebe9      2500f00000     and eax, 0xf000
0x0000ebee      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x0000ebf3      740c           je 0xec01
0x0000ebf5      41c701140000.  mov dword [r9], 0x14                    ; [0x14:4]=1
0x0000ebfc      e968ffffff     jmp 0xeb69
0x0000ec01      8b442428       mov eax, dword [rsp + 0x28]
0x0000ec05      2500f00000     and eax, 0xf000
0x0000ec0a      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x0000ec0f      0f848efeffff   je 0xeaa3
0x0000ec15      41c701150000.  mov dword [r9], 0x15                    ; [0x15:4]=0x80000000
0x0000ec1c      4183cfff       or r15d, 0xffffffff                     ; -1
0x0000ec20      e9f5fdffff     jmp 0xea1a
0x0000ec25      e8563bffff     call sym.imp.__stack_chk_fail
0x0000ec2a      660f1f440000   nop word [rax + rax]
;-- get_root_dev_ino:
0x0000ec30      53             push rbx                                ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x0000ec31      488d35567e00.  lea rsi, [0x00016a8e]                   ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf); ; "/"
0x0000ec38      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x0000ec3b      bf01000000     mov edi, 1                              ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x0000ec40      4881eca00000.  sub rsp, 0xa0                           ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x0000ec47      4889e2         mov rdx, rsp                            ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x0000ec4a      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x0000ec53      488984249800.  mov qword [rsp + 0x98], rax
0x0000ec5b      31c0           xor eax, eax
0x0000ec5d      e8fe3affff     call sym.imp.__lxstat                   ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x0000ec62      85c0           test eax, eax                           ; ../coreutils-8.31/lib/root-dev-ino.c:32
0x0000ec64      7532           jne 0xec98
0x0000ec66      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/root-dev-ino.c:34
0x0000ec6b      488903         mov qword [rbx], rax
0x0000ec6e      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/root-dev-ino.c:35
0x0000ec72      48894308       mov qword [rbx + 8], rax
0x0000ec76      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/root-dev-ino.c:36
0x0000ec79      488b8c249800.  mov rcx, qword [rsp + 0x98]             ; ../coreutils-8.31/lib/root-dev-ino.c:37
0x0000ec81      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000ec8a      7510           jne 0xec9c
0x0000ec8c      4881c4a00000.  add rsp, 0xa0
0x0000ec93      5b             pop rbx
0x0000ec94      c3             ret
0x0000ec95      0f1f00         nop dword [rax]
0x0000ec98      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/root-dev-ino.c:33
0x0000ec9a      ebdd           jmp 0xec79
0x0000ec9c      e8df3affff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/root-dev-ino.c:37
0x0000eca1      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ecab      0f1f440000     nop dword [rax + rax]
;-- safe_write:
0x0000ecb0      4155           push r13                                ; ../coreutils-8.31/lib/safe-read.c:57
0x0000ecb2      4154           push r12
0x0000ecb4      4189fd         mov r13d, edi
0x0000ecb7      55             push rbp
0x0000ecb8      53             push rbx
0x0000ecb9      4989f4         mov r12, rsi
0x0000ecbc      4889d3         mov rbx, rdx
0x0000ecbf      4883ec08       sub rsp, 8
0x0000ecc3      0f1f440000     nop dword [rax + rax]
0x0000ecc8      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/safe-read.c:60
0x0000eccb      4c89e6         mov rsi, r12
0x0000ecce      4489ef         mov edi, r13d
0x0000ecd1      e8ba39ffff     call sym.imp.write
0x0000ecd6      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/safe-read.c:62
0x0000ecd9      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/safe-read.c:60
0x0000ecdc      7922           jns 0xed00                              ; ../coreutils-8.31/lib/safe-read.c:62
0x0000ecde      e8bd38ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/safe-read.c:64
0x0000ece3      8b00           mov eax, dword [rax]
0x0000ece5      83f804         cmp eax, 4
0x0000ece8      74de           je 0xecc8
0x0000ecea      83f816         cmp eax, 0x16                           ; ../coreutils-8.31/lib/safe-read.c:66
0x0000eced      7511           jne 0xed00
0x0000ecef      4881fb0000f0.  cmp rbx, 0x7ff00000
0x0000ecf6      7608           jbe 0xed00
0x0000ecf8      bb0000f07f     mov ebx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:67
0x0000ecfd      ebc9           jmp 0xecc8
0x0000ecff      90             nop
0x0000ed00      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/safe-read.c:71
0x0000ed04      4889e8         mov rax, rbp
0x0000ed07      5b             pop rbx
0x0000ed08      5d             pop rbp
0x0000ed09      415c           pop r12
0x0000ed0b      415d           pop r13
0x0000ed0d      c3             ret
0x0000ed0e      6690           nop
;-- same_nameat.part.0:
0x0000ed10      4155           push r13
0x0000ed12      4154           push r12
0x0000ed14      4189fd         mov r13d, edi
0x0000ed17      55             push rbp
0x0000ed18      53             push rbx
0x0000ed19      4889f7         mov rdi, rsi
0x0000ed1c      89d5           mov ebp, edx
0x0000ed1e      4989cc         mov r12, rcx
0x0000ed21      4881ec380100.  sub rsp, 0x138
0x0000ed28      64488b042528.  mov rax, qword fs:[0x28]
0x0000ed31      488984242801.  mov qword [rsp + 0x128], rax
0x0000ed39      31c0           xor eax, eax
0x0000ed3b      e8a0c2ffff     call sym.dir_name
0x0000ed40      4889e1         mov rcx, rsp
0x0000ed43      41b800010000   mov r8d, 0x100
0x0000ed49      4889c2         mov rdx, rax
0x0000ed4c      4489ee         mov esi, r13d
0x0000ed4f      bf01000000     mov edi, 1
0x0000ed54      4889c3         mov rbx, rax
0x0000ed57      e8643affff     call sym.imp.__fxstatat
0x0000ed5c      85c0           test eax, eax
0x0000ed5e      0f85ac000000   jne 0xee10
0x0000ed64      4889df         mov rdi, rbx
0x0000ed67      e8143fffff     call sym..plt.got
0x0000ed6c      4c89e7         mov rdi, r12
0x0000ed6f      e86cc2ffff     call sym.dir_name
0x0000ed74      488d8c249000.  lea rcx, [rsp + 0x90]
0x0000ed7c      41b800010000   mov r8d, 0x100
0x0000ed82      4889c2         mov rdx, rax
0x0000ed85      89ee           mov esi, ebp
0x0000ed87      bf01000000     mov edi, 1
0x0000ed8c      4889c3         mov rbx, rax
0x0000ed8f      e82c3affff     call sym.imp.__fxstatat
0x0000ed94      85c0           test eax, eax
0x0000ed96      7550           jne 0xede8
0x0000ed98      31ed           xor ebp, ebp
0x0000ed9a      488b84249800.  mov rax, qword [rsp + 0x98]
0x0000eda2      4839442408     cmp qword [rsp + 8], rax
0x0000eda7      7510           jne 0xedb9
0x0000eda9      488b84249000.  mov rax, qword [rsp + 0x90]
0x0000edb1      48390424       cmp qword [rsp], rax
0x0000edb5      400f94c5       sete bpl
0x0000edb9      4889df         mov rdi, rbx
0x0000edbc      e8bf3effff     call sym..plt.got
0x0000edc1      488b94242801.  mov rdx, qword [rsp + 0x128]
0x0000edc9      644833142528.  xor rdx, qword fs:[0x28]
0x0000edd2      89e8           mov eax, ebp
0x0000edd4      755c           jne 0xee32
0x0000edd6      4881c4380100.  add rsp, 0x138
0x0000eddd      5b             pop rbx
0x0000edde      5d             pop rbp
0x0000eddf      415c           pop r12
0x0000ede1      415d           pop r13
0x0000ede3      c3             ret
0x0000ede4      0f1f4000       nop dword [rax]
0x0000ede8      e8b337ffff     call sym.imp.__errno_location
0x0000eded      8b30           mov esi, dword [rax]
0x0000edef      488d15518600.  lea rdx, [0x00017447]                   ; "%s"
0x0000edf6      4889d9         mov rcx, rbx
0x0000edf9      bf01000000     mov edi, 1
0x0000edfe      31c0           xor eax, eax
0x0000ee00      e80b3dffff     call sym.imp.error
0x0000ee05      eb91           jmp 0xed98
0x0000ee07      660f1f840000.  nop word [rax + rax]
0x0000ee10      e88b37ffff     call sym.imp.__errno_location
0x0000ee15      8b30           mov esi, dword [rax]
0x0000ee17      488d15298600.  lea rdx, [0x00017447]                   ; "%s"
0x0000ee1e      4889d9         mov rcx, rbx
0x0000ee21      bf01000000     mov edi, 1
0x0000ee26      31c0           xor eax, eax
0x0000ee28      e8e33cffff     call sym.imp.error
0x0000ee2d      e932ffffff     jmp 0xed64
0x0000ee32      e84939ffff     call sym.imp.__stack_chk_fail
0x0000ee37      660f1f840000.  nop word [rax + rax]
;-- same_nameat:
0x0000ee40      4157           push r15
0x0000ee42      4156           push r14
0x0000ee44      4189d7         mov r15d, edx
0x0000ee47      4155           push r13
0x0000ee49      4154           push r12
0x0000ee4b      55             push rbp
0x0000ee4c      53             push rbx
0x0000ee4d      4889cd         mov rbp, rcx
0x0000ee50      4889f3         mov rbx, rsi
0x0000ee53      4883ec18       sub rsp, 0x18
0x0000ee57      897c240c       mov dword [rsp + 0xc], edi
0x0000ee5b      4889f7         mov rdi, rsi
0x0000ee5e      e85dc2ffff     call sym.last_component
0x0000ee63      4889ef         mov rdi, rbp
0x0000ee66      4989c4         mov r12, rax
0x0000ee69      e852c2ffff     call sym.last_component
0x0000ee6e      4c89e7         mov rdi, r12
0x0000ee71      4989c5         mov r13, rax
0x0000ee74      e8a7c2ffff     call sym.base_len
0x0000ee79      4c89ef         mov rdi, r13
0x0000ee7c      4989c6         mov r14, rax
0x0000ee7f      e89cc2ffff     call sym.base_len
0x0000ee84      4939c6         cmp r14, rax
0x0000ee87      7417           je 0xeea0
0x0000ee89      4883c418       add rsp, 0x18
0x0000ee8d      31c0           xor eax, eax
0x0000ee8f      5b             pop rbx
0x0000ee90      5d             pop rbp
0x0000ee91      415c           pop r12
0x0000ee93      415d           pop r13
0x0000ee95      415e           pop r14
0x0000ee97      415f           pop r15
0x0000ee99      c3             ret
0x0000ee9a      660f1f440000   nop word [rax + rax]
0x0000eea0      4c89f2         mov rdx, r14
0x0000eea3      4c89ee         mov rsi, r13
0x0000eea6      4c89e7         mov rdi, r12
0x0000eea9      e8223affff     call sym.imp.memcmp
0x0000eeae      85c0           test eax, eax
0x0000eeb0      75d7           jne 0xee89
0x0000eeb2      8b7c240c       mov edi, dword [rsp + 0xc]
0x0000eeb6      4883c418       add rsp, 0x18
0x0000eeba      4889e9         mov rcx, rbp
0x0000eebd      4489fa         mov edx, r15d
0x0000eec0      4889de         mov rsi, rbx
0x0000eec3      5b             pop rbx
0x0000eec4      5d             pop rbp
0x0000eec5      415c           pop r12
0x0000eec7      415d           pop r13
0x0000eec9      415e           pop r14
0x0000eecb      415f           pop r15
0x0000eecd      e93efeffff     jmp sym.same_nameat.part.0
0x0000eed2      0f1f4000       nop dword [rax]
0x0000eed6      662e0f1f8400.  nop word cs:[rax + rax]
;-- same_name:
0x0000eee0      ba9cffffff     mov edx, 0xffffff9c                     ; 4294967196
0x0000eee5      4889f1         mov rcx, rsi
0x0000eee8      4889fe         mov rsi, rdi
0x0000eeeb      89d7           mov edi, edx
0x0000eeed      e94effffff     jmp sym.same_nameat
0x0000eef2      662e0f1f8400.  nop word cs:[rax + rax]
0x0000eefc      0f1f4000       nop dword [rax]
;-- direntry_cmp_inode:
0x0000ef00      488b4608       mov rax, qword [rsi + 8]                ; ../coreutils-8.31/lib/savedir.c:64
0x0000ef04      48394708       cmp qword [rdi + 8], rax
0x0000ef08      720e           jb 0xef18
0x0000ef0a      0f97c0         seta al                                 ; ../coreutils-8.31/lib/savedir.c:68
0x0000ef0d      0fb6c0         movzx eax, al
0x0000ef10      c3             ret
0x0000ef11      0f1f80000000.  nop dword [rax]
0x0000ef18      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000ef1d      c3             ret                                     ; ../coreutils-8.31/lib/savedir.c:69
0x0000ef1e      6690           nop
;-- direntry_cmp_name:
0x0000ef20      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/savedir.c:52
0x0000ef23      488b3f         mov rdi, qword [rdi]
0x0000ef26      e9053affff     jmp sym.imp.strcmp
0x0000ef2b      0f1f440000     nop dword [rax + rax]
;-- streamsavedir:
0x0000ef30      4157           push r15                                ; ../coreutils-8.31/lib/savedir.c:92
0x0000ef32      488d05e7ca20.  lea rax, obj.comparison_function_table  ; ../coreutils-8.31/lib/savedir.c:100 ; 0x21ba20
0x0000ef39      4156           push r14                                ; ../coreutils-8.31/lib/savedir.c:92
0x0000ef3b      4155           push r13
0x0000ef3d      4154           push r12
0x0000ef3f      89f6           mov esi, esi                            ; ../coreutils-8.31/lib/savedir.c:100
0x0000ef41      55             push rbp                                ; ../coreutils-8.31/lib/savedir.c:92
0x0000ef42      53             push rbx
0x0000ef43      4883ec48       sub rsp, 0x48
0x0000ef47      488b04f0       mov rax, qword [rax + rsi*8]            ; ../coreutils-8.31/lib/savedir.c:100
0x0000ef4b      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/savedir.c:102
0x0000ef4e      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/savedir.c:100
0x0000ef53      0f8404030000   je 0xf25d                               ; ../coreutils-8.31/lib/savedir.c:102
0x0000ef59      4889fb         mov rbx, rdi
0x0000ef5c      4531f6         xor r14d, r14d                          ; ../coreutils-8.31/lib/savedir.c:98
0x0000ef5f      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/savedir.c:97
0x0000ef62      e83936ffff     call sym.imp.__errno_location
0x0000ef67      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/savedir.c:93
0x0000ef6a      4889c5         mov rbp, rax
0x0000ef6d      48c744242800.  mov qword [rsp + 0x28], 0               ; ../coreutils-8.31/lib/savedir.c:96
0x0000ef76      48c744241000.  mov qword [rsp + 0x10], 0               ; ../coreutils-8.31/lib/savedir.c:95
0x0000ef7f      48c744242000.  mov qword [rsp + 0x20], 0               ; ../coreutils-8.31/lib/savedir.c:94
0x0000ef88      eb0a           jmp 0xef94
0x0000ef8a      660f1f440000   nop word [rax + rax]
0x0000ef90      84c0           test al, al                             ; ../coreutils-8.31/lib/savedir.c:118
0x0000ef92      7535           jne 0xefc9
0x0000ef94      c74500000000.  mov dword [rbp], 0                      ; ../coreutils-8.31/lib/savedir.c:110
0x0000ef9b      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/savedir.c:111
0x0000ef9e      e84d3affff     call sym.imp.readdir
0x0000efa3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/savedir.c:112
0x0000efa6      4889c1         mov rcx, rax                            ; ../coreutils-8.31/lib/savedir.c:111
0x0000efa9      0f84a1000000   je 0xf050                               ; ../coreutils-8.31/lib/savedir.c:112
0x0000efaf      4c8d7813       lea r15, [rax + 0x13]                   ; ../coreutils-8.31/lib/savedir.c:117
0x0000efb3      0fb64013       movzx eax, byte [rax + 0x13]            ; ../coreutils-8.31/lib/savedir.c:118
0x0000efb7      3c2e           cmp al, 0x2e
0x0000efb9      75d5           jne 0xef90
0x0000efbb      8079142e       cmp byte [rcx + 0x14], 0x2e
0x0000efbf      747f           je 0xf040
0x0000efc1      0fb64114       movzx eax, byte [rcx + 0x14]
0x0000efc5      84c0           test al, al
0x0000efc7      74cb           je 0xef94
0x0000efc9      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/savedir.c:120
0x0000efcc      48894c2430     mov qword [rsp + 0x30], rcx
0x0000efd1      e87a37ffff     call sym.imp.strlen
0x0000efd6      4883c001       add rax, 1
0x0000efda      48837c240800   cmp qword [rsp + 8], 0                  ; ../coreutils-8.31/lib/savedir.c:121
0x0000efe0      4889442418     mov qword [rsp + 0x18], rax             ; ../coreutils-8.31/lib/savedir.c:120
0x0000efe5      0f843d010000   je 0xf128                               ; ../coreutils-8.31/lib/savedir.c:121
0x0000efeb      4c3b642428     cmp r12, qword [rsp + 0x28]             ; ../coreutils-8.31/lib/savedir.c:123
0x0000eff0      498d442401     lea rax, [r12 + 1]
0x0000eff5      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0000effa      4889442438     mov qword [rsp + 0x38], rax
0x0000efff      0f84ac010000   je 0xf1b1
0x0000f005      49c1e404       shl r12, 4                              ; ../coreutils-8.31/lib/savedir.c:129
0x0000f009      4c89ff         mov rdi, r15
0x0000f00c      4c03642410     add r12, qword [rsp + 0x10]
0x0000f011      48894c2430     mov qword [rsp + 0x30], rcx
0x0000f016      e8d51e0000     call sym.xstrdup
0x0000f01b      488b4c2430     mov rcx, qword [rsp + 0x30]             ; ../coreutils-8.31/lib/savedir.c:131
0x0000f020      4c03742418     add r14, qword [rsp + 0x18]
0x0000f025      49890424       mov qword [r12], rax                    ; ../coreutils-8.31/lib/savedir.c:129
0x0000f029      488b01         mov rax, qword [rcx]                    ; ../coreutils-8.31/lib/savedir.c:131
0x0000f02c      4989442408     mov qword [r12 + 8], rax
0x0000f031      4c8b642438     mov r12, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/savedir.c:133
0x0000f036      e959ffffff     jmp 0xef94
0x0000f03b      0f1f440000     nop dword [rax + rax]
0x0000f040      0fb64115       movzx eax, byte [rcx + 0x15]
0x0000f044      e947ffffff     jmp 0xef90
0x0000f049      0f1f80000000.  nop dword [rax]
0x0000f050      8b5d00         mov ebx, dword [rbp]                    ; ../coreutils-8.31/lib/savedir.c:151
0x0000f053      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/savedir.c:152
0x0000f055      0f85e5010000   jne 0xf240
0x0000f05b      48837c240800   cmp qword [rsp + 8], 0                  ; ../coreutils-8.31/lib/savedir.c:160
0x0000f061      0f84a9000000   je 0xf110
0x0000f067      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/savedir.c:164
0x0000f06a      498d5e01       lea rbx, [r14 + 1]
0x0000f06e      7530           jne 0xf0a0
0x0000f070      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/savedir.c:166
0x0000f073      e8481c0000     call sym.xmalloc
0x0000f078      4989c5         mov r13, rax
0x0000f07b      4889c3         mov rbx, rax
0x0000f07e      488b7c2410     mov rdi, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/savedir.c:174
0x0000f083      e8f83bffff     call sym..plt.got
0x0000f088      c60300         mov byte [rbx], 0                       ; ../coreutils-8.31/lib/savedir.c:179
0x0000f08b      4883c448       add rsp, 0x48                           ; ../coreutils-8.31/lib/savedir.c:181
0x0000f08f      4c89e8         mov rax, r13
0x0000f092      5b             pop rbx
0x0000f093      5d             pop rbp
0x0000f094      415c           pop r12
0x0000f096      415d           pop r13
0x0000f098      415e           pop r14
0x0000f09a      415f           pop r15
0x0000f09c      c3             ret
0x0000f09d      0f1f00         nop dword [rax]
0x0000f0a0      4c8b7c2410     mov r15, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/savedir.c:165
0x0000f0a5      488b4c2408     mov rcx, qword [rsp + 8]
0x0000f0aa      4c89e6         mov rsi, r12
0x0000f0ad      ba10000000     mov edx, 0x10
0x0000f0b2      49c1e404       shl r12, 4
0x0000f0b6      4c89ff         mov rdi, r15
0x0000f0b9      4c89fd         mov rbp, r15
0x0000f0bc      4d01fc         add r12, r15
0x0000f0bf      e86c35ffff     call sym.imp.qsort
0x0000f0c4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/savedir.c:166
0x0000f0c7      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/savedir.c:167
0x0000f0c9      e8f21b0000     call sym.xmalloc                        ; ../coreutils-8.31/lib/savedir.c:166
0x0000f0ce      4989c5         mov r13, rax
0x0000f0d1      0f1f80000000.  nop dword [rax]
0x0000f0d8      488b7500       mov rsi, qword [rbp]                    ; string_fortified.h:97   return __builtin___stpcpy_chk (__dest, __src, __bos (__dest));
0x0000f0dc      4d8d741d00     lea r14, [r13 + rbx]
0x0000f0e1      4883c510       add rbp, 0x10                           ; ../coreutils-8.31/lib/savedir.c:-31
0x0000f0e5      4c89f7         mov rdi, r14
0x0000f0e8      e82336ffff     call sym.imp.stpcpy
0x0000f0ed      488b7df0       mov rdi, qword [rbp - 0x10]             ; ../coreutils-8.31/lib/savedir.c:-138
0x0000f0f1      4c29f0         sub rax, r14
0x0000f0f4      488d5c0301     lea rbx, [rbx + rax + 1]
0x0000f0f9      e8823bffff     call sym..plt.got
0x0000f0fe      4939ec         cmp r12, rbp
0x0000f101      75d5           jne 0xf0d8
0x0000f103      4c01eb         add rbx, r13
0x0000f106      e973ffffff     jmp 0xf07e
0x0000f10b      0f1f440000     nop dword [rax + rax]
0x0000f110      4c39742420     cmp qword [rsp + 0x20], r14
0x0000f115      0f84e8000000   je 0xf203
0x0000f11b      4b8d5c3500     lea rbx, [r13 + r14]
0x0000f120      e963ffffff     jmp 0xf088
0x0000f125      0f1f00         nop dword [rax]
0x0000f128      488b742418     mov rsi, qword [rsp + 0x18]
0x0000f12d      488b442420     mov rax, qword [rsp + 0x20]
0x0000f132      4889f2         mov rdx, rsi
0x0000f135      4c29f0         sub rax, r14
0x0000f138      4c01f2         add rdx, r14
0x0000f13b      4889542430     mov qword [rsp + 0x30], rdx
0x0000f140      0f92c2         setb dl
0x0000f143      4839f0         cmp rax, rsi
0x0000f146      0fb6d2         movzx edx, dl
0x0000f149      774a           ja 0xf195
0x0000f14b      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/xalloc.h:-130
0x0000f14e      0f85e5000000   jne 0xf239
0x0000f154      4d85ed         test r13, r13
0x0000f157      488b542430     mov rdx, qword [rsp + 0x30]
0x0000f15c      0f84bd000000   je 0xf21f
0x0000f162      48b853555555.  movabs rax, 0x5555555555555553          ; 'SUUUUUUU'
0x0000f16c      4839c2         cmp rdx, rax
0x0000f16f      0f87c4000000   ja 0xf239
0x0000f175      4889d0         mov rax, rdx
0x0000f178      48d1e8         shr rax, 1
0x0000f17b      488d440201     lea rax, [rdx + rax + 1]
0x0000f180      4889442420     mov qword [rsp + 0x20], rax
0x0000f185      488b742420     mov rsi, qword [rsp + 0x20]
0x0000f18a      4c89ef         mov rdi, r13
0x0000f18d      e88e1b0000     call sym.xrealloc
0x0000f192      4989c5         mov r13, rax
0x0000f195      488b542418     mov rdx, qword [rsp + 0x18]
0x0000f19a      4b8d7c3500     lea rdi, [r13 + r14]
0x0000f19f      4c89fe         mov rsi, r15
0x0000f1a2      e8f937ffff     call sym.imp.memcpy
0x0000f1a7      4c8b742430     mov r14, qword [rsp + 0x30]
0x0000f1ac      e9e3fdffff     jmp 0xef94                              ; ../coreutils-8.31/lib/xalloc.h:-238
0x0000f1b1      48837c241000   cmp qword [rsp + 0x10], 0
0x0000f1b7      0f84a8000000   je 0xf265
0x0000f1bd      48b854555555.  movabs rax, 0x555555555555554
0x0000f1c7      4939c4         cmp r12, rax
0x0000f1ca      776d           ja 0xf239
0x0000f1cc      4c89e0         mov rax, r12
0x0000f1cf      48d1e8         shr rax, 1
0x0000f1d2      4803442438     add rax, qword [rsp + 0x38]
0x0000f1d7      4889442428     mov qword [rsp + 0x28], rax
0x0000f1dc      488b742428     mov rsi, qword [rsp + 0x28]
0x0000f1e1      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000f1e6      48894c2430     mov qword [rsp + 0x30], rcx
0x0000f1eb      48c1e604       shl rsi, 4
0x0000f1ef      e82c1b0000     call sym.xrealloc
0x0000f1f4      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0000f1f9      4889442410     mov qword [rsp + 0x10], rax
0x0000f1fe      e902feffff     jmp 0xf005
0x0000f203      488b5c2420     mov rbx, qword [rsp + 0x20]
0x0000f208      4c89ef         mov rdi, r13
0x0000f20b      488d7301       lea rsi, [rbx + 1]
0x0000f20f      e80c1b0000     call sym.xrealloc
0x0000f214      4989c5         mov r13, rax
0x0000f217      4801c3         add rbx, rax
0x0000f21a      e969feffff     jmp 0xf088                              ; ../coreutils-8.31/lib/xalloc.h:-247
0x0000f21f      4885d2         test rdx, rdx
0x0000f222      b880000000     mov eax, 0x80
0x0000f227      480f45c2       cmovne rax, rdx
0x0000f22b      4885c0         test rax, rax
0x0000f22e      4889442420     mov qword [rsp + 0x20], rax
0x0000f233      0f894cffffff   jns 0xf185
0x0000f239      e8d21c0000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/savedir.c:-283
0x0000f23e      6690           nop
0x0000f240      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000f245      e8363affff     call sym..plt.got
0x0000f24a      4c89ef         mov rdi, r13
0x0000f24d      4531ed         xor r13d, r13d
0x0000f250      e82b3affff     call sym..plt.got
0x0000f255      895d00         mov dword [rbp], ebx
0x0000f258      e92efeffff     jmp 0xf08b
0x0000f25d      4531ed         xor r13d, r13d
0x0000f260      e926feffff     jmp 0xf08b
0x0000f265      4d85e4         test r12, r12
0x0000f268      b808000000     mov eax, 8
0x0000f26d      ba10000000     mov edx, 0x10
0x0000f272      490f45c4       cmovne rax, r12
0x0000f276      31f6           xor esi, esi
0x0000f278      4889c7         mov rdi, rax
0x0000f27b      4889442428     mov qword [rsp + 0x28], rax
0x0000f280      4889d0         mov rax, rdx
0x0000f283      48f7e7         mul rdi
0x0000f286      7019           jo 0xf2a1                               ; ../coreutils-8.31/lib/savedir.c:-378
0x0000f288      4885c0         test rax, rax
0x0000f28b      78ac           js 0xf239
0x0000f28d      4885f6         test rsi, rsi
0x0000f290      75a7           jne 0xf239
0x0000f292      498d442401     lea rax, [r12 + 1]
0x0000f297      4889442438     mov qword [rsp + 0x38], rax
0x0000f29c      e93bffffff     jmp 0xf1dc
0x0000f2a1      be01000000     mov esi, 1
0x0000f2a6      ebe0           jmp 0xf288                              ; ../coreutils-8.31/lib/savedir.c:-372
0x0000f2a8      0f1f84000000.  nop dword [rax + rax]
;-- savedir:
0x0000f2b0      4154           push r12
0x0000f2b2      55             push rbp                                ; ../coreutils-8.31/lib/savedir.c:-362
0x0000f2b3      89f5           mov ebp, esi
0x0000f2b5      53             push rbx
0x0000f2b6      e855480000     call sym.opendir_safer
0x0000f2bb      4885c0         test rax, rax
0x0000f2be      7428           je 0xf2e8                               ; ../coreutils-8.31/lib/savedir.c:-375
0x0000f2c0      89ee           mov esi, ebp
0x0000f2c2      4889c3         mov rbx, rax
0x0000f2c5      4889c7         mov rdi, rax
0x0000f2c8      e863fcffff     call sym.streamsavedir
0x0000f2cd      4889df         mov rdi, rbx
0x0000f2d0      4889c5         mov rbp, rax
0x0000f2d3      e8c835ffff     call sym.imp.closedir
0x0000f2d8      85c0           test eax, eax
0x0000f2da      7514           jne 0xf2f0
0x0000f2dc      4889e8         mov rax, rbp
0x0000f2df      5b             pop rbx
0x0000f2e0      5d             pop rbp                                 ; ../coreutils-8.31/lib/savedir.c:-366
0x0000f2e1      415c           pop r12
0x0000f2e3      c3             ret
0x0000f2e4      0f1f4000       nop dword [rax]
0x0000f2e8      31ed           xor ebp, ebp
0x0000f2ea      ebf0           jmp 0xf2dc
0x0000f2ec      0f1f4000       nop dword [rax]
0x0000f2f0      e8ab32ffff     call sym.imp.__errno_location
0x0000f2f5      448b20         mov r12d, dword [rax]
0x0000f2f8      4889c3         mov rbx, rax
0x0000f2fb      4889ef         mov rdi, rbp
0x0000f2fe      e87d39ffff     call sym..plt.got
0x0000f303      31ed           xor ebp, ebp
0x0000f305      448923         mov dword [rbx], r12d
0x0000f308      ebd2           jmp 0xf2dc
0x0000f30a      660f1f440000   nop word [rax + rax]
;-- try_nocreate:
0x0000f310      53             push rbx                                ; ../coreutils-8.31/lib/tempname.c:284
0x0000f311      4889fe         mov rsi, rdi
0x0000f314      bf01000000     mov edi, 1                              ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x0000f319      4881eca00000.  sub rsp, 0xa0                           ; ../coreutils-8.31/lib/tempname.c:284
0x0000f320      4889e2         mov rdx, rsp                            ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x0000f323      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/tempname.c:284
0x0000f32c      488984249800.  mov qword [rsp + 0x98], rax
0x0000f334      31c0           xor eax, eax
0x0000f336      e82534ffff     call sym.imp.__lxstat                   ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x0000f33b      89c3           mov ebx, eax
0x0000f33d      e85e32ffff     call sym.imp.__errno_location
0x0000f342      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/tempname.c:287
0x0000f344      741a           je 0xf360
0x0000f346      8b10           mov edx, dword [rax]
0x0000f348      83fa4b         cmp edx, 0x4b
0x0000f34b      7413           je 0xf360
0x0000f34d      31c0           xor eax, eax
0x0000f34f      83fa02         cmp edx, 2
0x0000f352      0f95c0         setne al
0x0000f355      f7d8           neg eax
0x0000f357      eb12           jmp 0xf36b
0x0000f359      0f1f80000000.  nop dword [rax]
0x0000f360      c70011000000   mov dword [rax], 0x11                   ; ../coreutils-8.31/lib/tempname.c:288 ; [0x11:4]=0x1003e00
0x0000f366      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000f36b      488b8c249800.  mov rcx, qword [rsp + 0x98]             ; ../coreutils-8.31/lib/tempname.c:290
0x0000f373      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000f37c      7509           jne 0xf387
0x0000f37e      4881c4a00000.  add rsp, 0xa0
0x0000f385      5b             pop rbx
0x0000f386      c3             ret
0x0000f387      e8f433ffff     call sym.imp.__stack_chk_fail
0x0000f38c      0f1f4000       nop dword [rax]
;-- try_dir:
0x0000f390      bec0010000     mov esi, 0x1c0                          ; ../coreutils-8.31/lib/tempname.c:278
0x0000f395      e97632ffff     jmp sym.imp.mkdir
0x0000f39a      660f1f440000   nop word [rax + rax]
;-- try_file:
0x0000f3a0      8b36           mov esi, dword [rsi]                    ; ../coreutils-8.31/lib/tempname.c:269
0x0000f3a2      ba80010000     mov edx, 0x180                          ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x0000f3a7      31c0           xor eax, eax
0x0000f3a9      4080e63c       and sil, 0x3c                           ; ../coreutils-8.31/lib/tempname.c:273
0x0000f3ad      4080cec2       or sil, 0xc2                            ; ../coreutils-8.31/lib/tempname.c:271
0x0000f3b1      e97a37ffff     jmp sym.imp.open                        ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x0000f3b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- try_tempname_len:
0x0000f3c0      4157           push r15                                ; ../coreutils-8.31/lib/tempname.c:190
0x0000f3c2      4156           push r14
0x0000f3c4      4989ff         mov r15, rdi
0x0000f3c7      4155           push r13
0x0000f3c9      4154           push r12
0x0000f3cb      4d89c6         mov r14, r8
0x0000f3ce      55             push rbp
0x0000f3cf      53             push rbx
0x0000f3d0      89f5           mov ebp, esi
0x0000f3d2      4883ec38       sub rsp, 0x38
0x0000f3d6      4889542418     mov qword [rsp + 0x18], rdx
0x0000f3db      48893c24       mov qword [rsp], rdi
0x0000f3df      48894c2420     mov qword [rsp + 0x20], rcx
0x0000f3e4      e8b731ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/tempname.c:195
0x0000f3e9      4889442408     mov qword [rsp + 8], rax
0x0000f3ee      8b00           mov eax, dword [rax]
0x0000f3f0      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/tempname.c:215
0x0000f3f3      8944242c       mov dword [rsp + 0x2c], eax             ; ../coreutils-8.31/lib/tempname.c:195
0x0000f3f7      e85433ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/tempname.c:215
0x0000f3fc      4863f5         movsxd rsi, ebp                         ; ../coreutils-8.31/lib/tempname.c:216
0x0000f3ff      4a8d1436       lea rdx, [rsi + r14]
0x0000f403      4839c2         cmp rdx, rax
0x0000f406      0f870f010000   ja 0xf51b
0x0000f40c      4c29f0         sub rax, r14                            ; ../coreutils-8.31/lib/tempname.c:217
0x0000f40f      4889c3         mov rbx, rax
0x0000f412      4829f3         sub rbx, rsi
0x0000f415      488d357f7400.  lea rsi, [0x0001689b]                   ; ../coreutils-8.31/lib/tempname.c:180 ; "X"
0x0000f41c      498d041f       lea rax, [r15 + rbx]                    ; ../coreutils-8.31/lib/tempname.c:217
0x0000f420      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/tempname.c:180
0x0000f423      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/tempname.c:217
0x0000f428      e86334ffff     call sym.imp.strspn                     ; ../coreutils-8.31/lib/tempname.c:180
0x0000f42d      4939c6         cmp r14, rax                            ; ../coreutils-8.31/lib/tempname.c:217
0x0000f430      0f87e5000000   ja 0xf51b
0x0000f436      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/tempname.c:228
0x0000f438      4c89f6         mov rsi, r14
0x0000f43b      e8004a0000     call sym.randint_all_new
0x0000f440      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/tempname.c:229
0x0000f443      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/tempname.c:228
0x0000f446      0f84e1000000   je 0xf52d                               ; ../coreutils-8.31/lib/tempname.c:229
0x0000f44c      488b0424       mov rax, qword [rsp]
0x0000f450      4c8d25897b00.  lea r12, obj.letters                    ; 0x16fe0 ; "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
0x0000f457      41bdf8a20300   mov r13d, 0x3a2f8
0x0000f45d      4c01f0         add rax, r14
0x0000f460      4801c3         add rbx, rax
0x0000f463      0f1f440000     nop dword [rax + rax]
0x0000f468      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/tempname.c:236
0x0000f46b      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x0000f470      7425           je 0xf497
0x0000f472      660f1f440000   nop word [rax + rax]
0x0000f478      be3d000000     mov esi, 0x3d                           ; ../coreutils-8.31/lib/tempname.c:237 ; '='
0x0000f47d      4889ef         mov rdi, rbp
0x0000f480      4983c701       add r15, 1
0x0000f484      e8074a0000     call sym.randint_genmax
0x0000f489      410fb60404     movzx eax, byte [r12 + rax]
0x0000f48e      418847ff       mov byte [r15 - 1], al
0x0000f492      4939df         cmp r15, rbx                            ; ../coreutils-8.31/lib/tempname.c:236
0x0000f495      75e1           jne 0xf478
0x0000f497      488b742418     mov rsi, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/tempname.c:239
0x0000f49c      488b3c24       mov rdi, qword [rsp]
0x0000f4a0      488b442420     mov rax, qword [rsp + 0x20]
0x0000f4a5      ffd0           call rax
0x0000f4a7      85c0           test eax, eax                           ; ../coreutils-8.31/lib/tempname.c:240
0x0000f4a9      89c2           mov edx, eax                            ; ../coreutils-8.31/lib/tempname.c:239
0x0000f4ab      792c           jns 0xf4d9                              ; ../coreutils-8.31/lib/tempname.c:240
0x0000f4ad      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:245
0x0000f4b2      8b08           mov ecx, dword [rax]
0x0000f4b4      83f911         cmp ecx, 0x11
0x0000f4b7      755b           jne 0xf514
0x0000f4b9      4183ed01       sub r13d, 1                             ; ../coreutils-8.31/lib/tempname.c:232
0x0000f4bd      75a9           jne 0xf468
0x0000f4bf      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/tempname.c:252
0x0000f4c2      e8094b0000     call sym.randint_all_free
0x0000f4c7      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:255
0x0000f4cc      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:256 ; -1
0x0000f4d1      c70011000000   mov dword [rax], 0x11                   ; ../coreutils-8.31/lib/tempname.c:255 ; [0x11:4]=0x1003e00
0x0000f4d7      eb2a           jmp 0xf503                              ; ../coreutils-8.31/lib/tempname.c:256
0x0000f4d9      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:242
0x0000f4de      8b44242c       mov eax, dword [rsp + 0x2c]
0x0000f4e2      8901           mov dword [rcx], eax
0x0000f4e4      89c1           mov ecx, eax                            ; ../coreutils-8.31/lib/tempname.c:243
0x0000f4e6      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/tempname.c:261
0x0000f4e9      89542410       mov dword [rsp + 0x10], edx
0x0000f4ed      890c24         mov dword [rsp], ecx
0x0000f4f0      e8db4a0000     call sym.randint_all_free
0x0000f4f5      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:262
0x0000f4fa      8b0c24         mov ecx, dword [rsp]
0x0000f4fd      8b542410       mov edx, dword [rsp + 0x10]             ; ../coreutils-8.31/lib/tempname.c:264
0x0000f501      8908           mov dword [rax], ecx                    ; ../coreutils-8.31/lib/tempname.c:262
0x0000f503      4883c438       add rsp, 0x38                           ; ../coreutils-8.31/lib/tempname.c:265
0x0000f507      89d0           mov eax, edx
0x0000f509      5b             pop rbx
0x0000f50a      5d             pop rbp
0x0000f50b      415c           pop r12
0x0000f50d      415d           pop r13
0x0000f50f      415e           pop r14
0x0000f511      415f           pop r15
0x0000f513      c3             ret
0x0000f514      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:247 ; -1
0x0000f519      ebcb           jmp 0xf4e6
0x0000f51b      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:220
0x0000f520      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:221 ; -1
0x0000f525      c70016000000   mov dword [rax], 0x16                   ; ../coreutils-8.31/lib/tempname.c:220 ; [0x16:4]=0x34800000
0x0000f52b      ebd6           jmp 0xf503                              ; ../coreutils-8.31/lib/tempname.c:221
0x0000f52d      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:230 ; -1
0x0000f532      ebcf           jmp 0xf503
0x0000f534      6690           nop                                     ; ../coreutils-8.31/lib/tempname.c:181
0x0000f536      662e0f1f8400.  nop word cs:[rax + rax]
;-- gen_tempname_len:
0x0000f540      4883ec18       sub rsp, 0x18
0x0000f544      83f901         cmp ecx, 1
0x0000f547      8954240c       mov dword [rsp + 0xc], edx
0x0000f54b      7463           je 0xf5b0
0x0000f54d      83f902         cmp ecx, 2
0x0000f550      7426           je 0xf578
0x0000f552      85c9           test ecx, ecx
0x0000f554      743a           je 0xf590
0x0000f556      488d0d637a00.  lea rcx, obj.__PRETTY_FUNCTION__.5642   ; 0x16fc0 ; "gen_tempname_len"
0x0000f55d      488d35047a00.  lea rsi, [0x00016f68]                   ; "../coreutils-8.31/lib/tempname.c"
0x0000f564      488d3d257a00.  lea rdi, str.invalid_KIND_in___gen_tempname ; 0x16f90 ; "! \"invalid KIND in __gen_tempname\""
0x0000f56b      ba47010000     mov edx, 0x147
0x0000f570      e8ab32ffff     call sym.imp.__assert_fail
0x0000f575      0f1f00         nop dword [rax]
0x0000f578      488d54240c     lea rdx, [rsp + 0xc]
0x0000f57d      488d0d8cfdff.  lea rcx, sym.try_nocreate               ; ../coreutils-8.31/lib/tempname.c:202 ; 0xf310 ; "SH\x89\xfe\xbf\x01"
0x0000f584      e837feffff     call sym.try_tempname_len
0x0000f589      4883c418       add rsp, 0x18
0x0000f58d      c3             ret
0x0000f58e      6690           nop                                     ; ../coreutils-8.31/lib/tempname.c:203
0x0000f590      488d54240c     lea rdx, [rsp + 0xc]
0x0000f595      488d0d04feff.  lea rcx, sym.try_file                   ; 0xf3a0
0x0000f59c      e81ffeffff     call sym.try_tempname_len
0x0000f5a1      4883c418       add rsp, 0x18
0x0000f5a5      c3             ret
0x0000f5a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000f5b0      488d54240c     lea rdx, [rsp + 0xc]
0x0000f5b5      488d0dd4fdff.  lea rcx, sym.try_dir                    ; 0xf390
0x0000f5bc      e8fffdffff     call sym.try_tempname_len
0x0000f5c1      4883c418       add rsp, 0x18
0x0000f5c5      c3             ret
0x0000f5c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- gen_tempname:
0x0000f5d0      41b806000000   mov r8d, 6
0x0000f5d6      e965ffffff     jmp sym.gen_tempname_len
0x0000f5db      0f1f440000     nop dword [rax + rax]
;-- try_tempname:
0x0000f5e0      41b806000000   mov r8d, 6
0x0000f5e6      e9d5fdffff     jmp sym.try_tempname_len
0x0000f5eb      0f1f440000     nop dword [rax + rax]
;-- fd_safer:
0x0000f5f0      4155           push r13                                ; ../coreutils-8.31/lib/fd-safer.c:38
0x0000f5f2      4154           push r12
0x0000f5f4      55             push rbp
0x0000f5f5      53             push rbx
0x0000f5f6      89fb           mov ebx, edi
0x0000f5f8      4883ec08       sub rsp, 8
0x0000f5fc      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/fd-safer.c:39
0x0000f5ff      7721           ja 0xf622
0x0000f601      e89a540000     call sym.dup_safer                      ; ../coreutils-8.31/lib/fd-safer.c:41
0x0000f606      4189c4         mov r12d, eax
0x0000f609      e8922fffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-safer.c:42
0x0000f60e      448b28         mov r13d, dword [rax]
0x0000f611      4889c5         mov rbp, rax
0x0000f614      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-safer.c:43
0x0000f616      e85532ffff     call sym.imp.close
0x0000f61b      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-safer.c:45
0x0000f61e      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-safer.c:44
0x0000f622      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-safer.c:49
0x0000f626      89d8           mov eax, ebx
0x0000f628      5b             pop rbx
0x0000f629      5d             pop rbp
0x0000f62a      415c           pop r12
0x0000f62c      415d           pop r13
0x0000f62e      c3             ret
0x0000f62f      90             nop
;-- dev_info_hash:
0x0000f630      488b07         mov rax, qword [rdi]
0x0000f633      31d2           xor edx, edx
0x0000f635      48f7f6         div rsi
0x0000f638      4889d0         mov rax, rdx
0x0000f63b      c3             ret
0x0000f63c      0f1f4000       nop dword [rax]
;-- dev_info_compare:
0x0000f640      488b06         mov rax, qword [rsi]
0x0000f643      483907         cmp qword [rdi], rax
0x0000f646      0f94c0         sete al
0x0000f649      c3             ret
0x0000f64a      660f1f440000   nop word [rax + rax]
;-- utimecmpat:
0x0000f650      4157           push r15
0x0000f652      4156           push r14
0x0000f654      4155           push r13
0x0000f656      4154           push r12
0x0000f658      55             push rbp
0x0000f659      53             push rbx
0x0000f65a      4489c3         mov ebx, r8d
0x0000f65d      83e301         and ebx, 1
0x0000f660      4881ec280100.  sub rsp, 0x128
0x0000f667      4c8b6960       mov r13, qword [rcx + 0x60]
0x0000f66b      4c8b7258       mov r14, qword [rdx + 0x58]
0x0000f66f      64488b042528.  mov rax, qword fs:[0x28]
0x0000f678      488984241801.  mov qword [rsp + 0x118], rax
0x0000f680      31c0           xor eax, eax
0x0000f682      85db           test ebx, ebx
0x0000f684      4c8b6158       mov r12, qword [rcx + 0x58]
0x0000f688      4c8b7a60       mov r15, qword [rdx + 0x60]
0x0000f68c      4589e9         mov r9d, r13d
0x0000f68f      0f84e3000000   je 0xf778
0x0000f695      4d39e6         cmp r14, r12
0x0000f698      4189fa         mov r10d, edi
0x0000f69b      0f94442438     sete byte [rsp + 0x38]
0x0000f6a0      0fb67c2438     movzx edi, byte [rsp + 0x38]
0x0000f6a5      4539ef         cmp r15d, r13d
0x0000f6a8      0f94c0         sete al
0x0000f6ab      4020f8         and al, dil
0x0000f6ae      88442408       mov byte [rsp + 8], al
0x0000f6b2      0f8508010000   jne 0xf7c0
0x0000f6b8      498d4424ff     lea rax, [r12 - 1]
0x0000f6bd      4c39f0         cmp rax, r14
0x0000f6c0      0f8f02010000   jg 0xf7c8
0x0000f6c6      498d46ff       lea rax, [r14 - 1]
0x0000f6ca      4c39e0         cmp rax, r12
0x0000f6cd      0f8fbc000000   jg 0xf78f
0x0000f6d3      4889d5         mov rbp, rdx
0x0000f6d6      488b1503d020.  mov rdx, qword [obj.ht.5307]            ; [0x21c6e0:8]=0
0x0000f6dd      4989f3         mov r11, rsi
0x0000f6e0      4885d2         test rdx, rdx
0x0000f6e3      0f8497050000   je 0xfc80
0x0000f6e9      488b35e8cf20.  mov rsi, qword [obj.new_dst_res.5308]   ; [0x21c6d8:8]=0
0x0000f6f0      4885f6         test rsi, rsi
0x0000f6f3      0f84d7000000   je 0xf7d0
0x0000f6f9      488b4500       mov rax, qword [rbp]
0x0000f6fd      4889d7         mov rdi, rdx
0x0000f700      4c895c2428     mov qword [rsp + 0x28], r11
0x0000f705      4489542420     mov dword [rsp + 0x20], r10d
0x0000f70a      44894c2418     mov dword [rsp + 0x18], r9d
0x0000f70f      488906         mov qword [rsi], rax
0x0000f712      e8d9d0ffff     call sym.hash_insert
0x0000f717      4885c0         test rax, rax
0x0000f71a      4889442410     mov qword [rsp + 0x10], rax
0x0000f71f      448b4c2418     mov r9d, dword [rsp + 0x18]
0x0000f724      448b542420     mov r10d, dword [rsp + 0x20]
0x0000f729      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000f72e      0f84f4000000   je 0xf828
0x0000f734      4839059dcf20.  cmp qword [obj.new_dst_res.5308], rax   ; [0x21c6d8:8]=0
0x0000f73b      0f849f050000   je 0xfce0
0x0000f741      488b442410     mov rax, qword [rsp + 0x10]
0x0000f746      80780c00       cmp byte [rax + 0xc], 0
0x0000f74a      8b7008         mov esi, dword [rax + 8]
0x0000f74d      89742418       mov dword [rsp + 0x18], esi
0x0000f751      0f8453010000   je 0xf8aa
0x0000f757      31c0           xor eax, eax
0x0000f759      81fe00943577   cmp esi, 0x77359400
0x0000f75f      0f94c0         sete al
0x0000f762      f7d0           not eax
0x0000f764      4898           cdqe
0x0000f766      4921c4         and r12, rax
0x0000f769      4489c8         mov eax, r9d
0x0000f76c      4589e9         mov r9d, r13d
0x0000f76f      99             cdq
0x0000f770      f7fe           idiv esi
0x0000f772      4129d1         sub r9d, edx
0x0000f775      0f1f00         nop dword [rax]
0x0000f778      4d39f4         cmp r12, r14
0x0000f77b      7f4b           jg 0xf7c8
0x0000f77d      bb01000000     mov ebx, 1
0x0000f782      7c0b           jl 0xf78f
0x0000f784      4539f9         cmp r9d, r15d
0x0000f787      7f3f           jg 0xf7c8
0x0000f789      0f9cc3         setl bl
0x0000f78c      0fb6db         movzx ebx, bl
0x0000f78f      488bb4241801.  mov rsi, qword [rsp + 0x118]
0x0000f797      644833342528.  xor rsi, qword fs:[0x28]
0x0000f7a0      89d8           mov eax, ebx
0x0000f7a2      0f85d0050000   jne 0xfd78
0x0000f7a8      4881c4280100.  add rsp, 0x128
0x0000f7af      5b             pop rbx
0x0000f7b0      5d             pop rbp
0x0000f7b1      415c           pop r12
0x0000f7b3      415d           pop r13
0x0000f7b5      415e           pop r14
0x0000f7b7      415f           pop r15
0x0000f7b9      c3             ret
0x0000f7ba      660f1f440000   nop word [rax + rax]
0x0000f7c0      31db           xor ebx, ebx
0x0000f7c2      ebcb           jmp 0xf78f
0x0000f7c4      0f1f4000       nop dword [rax]
0x0000f7c8      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000f7cd      ebc0           jmp 0xf78f
0x0000f7cf      90             nop
0x0000f7d0      bf10000000     mov edi, 0x10
0x0000f7d5      4c895c2428     mov qword [rsp + 0x28], r11
0x0000f7da      4489542420     mov dword [rsp + 0x20], r10d
0x0000f7df      44894c2418     mov dword [rsp + 0x18], r9d
0x0000f7e4      4889542410     mov qword [rsp + 0x10], rdx
0x0000f7e9      e81232ffff     call sym.imp.malloc
0x0000f7ee      4885c0         test rax, rax
0x0000f7f1      4889c6         mov rsi, rax
0x0000f7f4      488905ddce20.  mov qword [obj.new_dst_res.5308], rax   ; [0x21c6d8:8]=0
0x0000f7fb      488b542410     mov rdx, qword [rsp + 0x10]
0x0000f800      448b4c2418     mov r9d, dword [rsp + 0x18]
0x0000f805      448b542420     mov r10d, dword [rsp + 0x20]
0x0000f80a      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000f80f      7427           je 0xf838
0x0000f811      c74008009435.  mov dword [rax + 8], 0x77359400         ; [0x77359400:4]=-1
0x0000f818      c6400c00       mov byte [rax + 0xc], 0
0x0000f81c      e9d8feffff     jmp 0xf6f9
0x0000f821      0f1f80000000.  nop dword [rax]
0x0000f828      488b15b1ce20.  mov rdx, qword [obj.ht.5307]            ; [0x21c6e0:8]=0
0x0000f82f      4885d2         test rdx, rdx
0x0000f832      0f849a040000   je 0xfcd2
0x0000f838      488d4c2450     lea rcx, [rsp + 0x50]
0x0000f83d      488b4500       mov rax, qword [rbp]
0x0000f841      4889d7         mov rdi, rdx
0x0000f844      4c895c2430     mov qword [rsp + 0x30], r11
0x0000f849      4489542428     mov dword [rsp + 0x28], r10d
0x0000f84e      4889ce         mov rsi, rcx
0x0000f851      44894c2420     mov dword [rsp + 0x20], r9d
0x0000f856      48894c2418     mov qword [rsp + 0x18], rcx
0x0000f85b      4889442450     mov qword [rsp + 0x50], rax
0x0000f860      e81bc5ffff     call sym.hash_lookup
0x0000f865      4885c0         test rax, rax
0x0000f868      4889442410     mov qword [rsp + 0x10], rax
0x0000f86d      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000f872      448b4c2420     mov r9d, dword [rsp + 0x20]
0x0000f877      448b542428     mov r10d, dword [rsp + 0x28]
0x0000f87c      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000f881      0f85bafeffff   jne 0xf741
0x0000f887      660f1f840000.  nop word [rax + rax]
0x0000f890      c74424580094.  mov dword [rsp + 0x58], 0x77359400      ; [0x77359400:4]=-1
0x0000f898      c644245c00     mov byte [rsp + 0x5c], 0
0x0000f89d      c74424180094.  mov dword [rsp + 0x18], 0x77359400      ; [0x77359400:4]=-1
0x0000f8a5      48894c2410     mov qword [rsp + 0x10], rcx
0x0000f8aa      488b4d50       mov rcx, qword [rbp + 0x50]
0x0000f8ae      b867666666     mov eax, 0x66666667                     ; 'gfff'
0x0000f8b3      488b7570       mov rsi, qword [rbp + 0x70]
0x0000f8b7      f7e9           imul ecx
0x0000f8b9      89c8           mov eax, ecx
0x0000f8bb      48894c2428     mov qword [rsp + 0x28], rcx
0x0000f8c0      c1f81f         sar eax, 0x1f
0x0000f8c3      c1fa02         sar edx, 2
0x0000f8c6      29c2           sub edx, eax
0x0000f8c8      8d0492         lea eax, [rdx + rdx*4]
0x0000f8cb      89542420       mov dword [rsp + 0x20], edx
0x0000f8cf      01c0           add eax, eax
0x0000f8d1      29c1           sub ecx, eax
0x0000f8d3      b867666666     mov eax, 0x66666667                     ; 'gfff'
0x0000f8d8      f7ee           imul esi
0x0000f8da      89f0           mov eax, esi
0x0000f8dc      c1f81f         sar eax, 0x1f
0x0000f8df      c1fa02         sar edx, 2
0x0000f8e2      89d7           mov edi, edx
0x0000f8e4      29c7           sub edi, eax
0x0000f8e6      8d04bf         lea eax, [rdi + rdi*4]
0x0000f8e9      01c0           add eax, eax
0x0000f8eb      29c6           sub esi, eax
0x0000f8ed      b867666666     mov eax, 0x66666667                     ; 'gfff'
0x0000f8f2      41f7ef         imul r15d
0x0000f8f5      4489f8         mov eax, r15d
0x0000f8f8      09f1           or ecx, esi
0x0000f8fa      c1f81f         sar eax, 0x1f
0x0000f8fd      4489fe         mov esi, r15d
0x0000f900      c1fa02         sar edx, 2
0x0000f903      4189d0         mov r8d, edx
0x0000f906      4129c0         sub r8d, eax
0x0000f909      438d0480       lea eax, [r8 + r8*4]
0x0000f90d      01c0           add eax, eax
0x0000f90f      29c6           sub esi, eax
0x0000f911      09f1           or ecx, esi
0x0000f913      0f854f030000   jne 0xfc68
0x0000f919      837c24180a     cmp dword [rsp + 0x18], 0xa
0x0000f91e      488b4548       mov rax, qword [rbp + 0x48]
0x0000f922      89f9           mov ecx, edi
0x0000f924      8b542420       mov edx, dword [rsp + 0x20]
0x0000f928      4489c6         mov esi, r8d
0x0000f92b      4889442448     mov qword [rsp + 0x48], rax
0x0000f930      89542430       mov dword [rsp + 0x30], edx
0x0000f934      0f8e0e040000   jle 0xfd48
0x0000f93a      b867666666     mov eax, 0x66666667                     ; 'gfff'
0x0000f93f      f7ef           imul edi
0x0000f941      89f8           mov eax, edi
0x0000f943      c1f81f         sar eax, 0x1f
0x0000f946      c1fa02         sar edx, 2
0x0000f949      29c2           sub edx, eax
0x0000f94b      8d0492         lea eax, [rdx + rdx*4]
0x0000f94e      01c0           add eax, eax
0x0000f950      29c7           sub edi, eax
0x0000f952      b867666666     mov eax, 0x66666667                     ; 'gfff'
0x0000f957      f76c2420       imul dword [rsp + 0x20]
0x0000f95b      8b442420       mov eax, dword [rsp + 0x20]
0x0000f95f      c1f81f         sar eax, 0x1f
0x0000f962      c1fa02         sar edx, 2
0x0000f965      29c2           sub edx, eax
0x0000f967      8d0492         lea eax, [rdx + rdx*4]
0x0000f96a      8b542420       mov edx, dword [rsp + 0x20]
0x0000f96e      c74424200a00.  mov dword [rsp + 0x20], 0xa
0x0000f976      01c0           add eax, eax
0x0000f978      29c2           sub edx, eax
0x0000f97a      b867666666     mov eax, 0x66666667                     ; 'gfff'
0x0000f97f      09d7           or edi, edx
0x0000f981      41f7e8         imul r8d
0x0000f984      4489c0         mov eax, r8d
0x0000f987      897c243c       mov dword [rsp + 0x3c], edi
0x0000f98b      c1f81f         sar eax, 0x1f
0x0000f98e      bf67666666     mov edi, 0x66666667                     ; 'gfff'
0x0000f993      c1fa02         sar edx, 2
0x0000f996      29c2           sub edx, eax
0x0000f998      8d0492         lea eax, [rdx + rdx*4]
0x0000f99b      ba08000000     mov edx, 8
0x0000f9a0      01c0           add eax, eax
0x0000f9a2      4129c0         sub r8d, eax
0x0000f9a5      8b44243c       mov eax, dword [rsp + 0x3c]
0x0000f9a9      4409c0         or eax, r8d
0x0000f9ac      0f85b2030000   jne 0xfd64
0x0000f9b2      44894c243c     mov dword [rsp + 0x3c], r9d
0x0000f9b7      4c89742440     mov qword [rsp + 0x40], r14
0x0000f9bc      41b90a000000   mov r9d, 0xa
0x0000f9c2      448b442430     mov r8d, dword [rsp + 0x30]
0x0000f9c7      4c89642420     mov qword [rsp + 0x20], r12
0x0000f9cc      4189d6         mov r14d, edx
0x0000f9cf      48896c2430     mov qword [rsp + 0x30], rbp
0x0000f9d4      4489c0         mov eax, r8d
0x0000f9d7      41c1f81f       sar r8d, 0x1f
0x0000f9db      438d2c89       lea ebp, [r9 + r9*4]
0x0000f9df      f7ef           imul edi
0x0000f9e1      89c8           mov eax, ecx
0x0000f9e3      c1f91f         sar ecx, 0x1f
0x0000f9e6      01ed           add ebp, ebp
0x0000f9e8      4189e9         mov r9d, ebp
0x0000f9eb      c1fa02         sar edx, 2
0x0000f9ee      4429c2         sub edx, r8d
0x0000f9f1      4189d0         mov r8d, edx
0x0000f9f4      f7ef           imul edi
0x0000f9f6      89f0           mov eax, esi
0x0000f9f8      c1fe1f         sar esi, 0x1f
0x0000f9fb      c1fa02         sar edx, 2
0x0000f9fe      29ca           sub edx, ecx
0x0000fa00      89d1           mov ecx, edx
0x0000fa02      f7ef           imul edi
0x0000fa04      c1fa02         sar edx, 2
0x0000fa07      29f2           sub edx, esi
0x0000fa09      3b6c2418       cmp ebp, dword [rsp + 0x18]
0x0000fa0d      89d6           mov esi, edx
0x0000fa0f      0f8ddb020000   jge 0xfcf0
0x0000fa15      4489c0         mov eax, r8d
0x0000fa18      4589c4         mov r12d, r8d
0x0000fa1b      f7ef           imul edi
0x0000fa1d      4489c0         mov eax, r8d
0x0000fa20      c1f81f         sar eax, 0x1f
0x0000fa23      c1fa02         sar edx, 2
0x0000fa26      29c2           sub edx, eax
0x0000fa28      8d0492         lea eax, [rdx + rdx*4]
0x0000fa2b      01c0           add eax, eax
0x0000fa2d      4129c4         sub r12d, eax
0x0000fa30      89c8           mov eax, ecx
0x0000fa32      f7ef           imul edi
0x0000fa34      89c8           mov eax, ecx
0x0000fa36      c1f81f         sar eax, 0x1f
0x0000fa39      c1fa02         sar edx, 2
0x0000fa3c      29c2           sub edx, eax
0x0000fa3e      8d0492         lea eax, [rdx + rdx*4]
0x0000fa41      89ca           mov edx, ecx
0x0000fa43      01c0           add eax, eax
0x0000fa45      29c2           sub edx, eax
0x0000fa47      89f0           mov eax, esi
0x0000fa49      4109d4         or r12d, edx
0x0000fa4c      f7ef           imul edi
0x0000fa4e      89f0           mov eax, esi
0x0000fa50      c1f81f         sar eax, 0x1f
0x0000fa53      c1fa02         sar edx, 2
0x0000fa56      29c2           sub edx, eax
0x0000fa58      8d0492         lea eax, [rdx + rdx*4]
0x0000fa5b      89f2           mov edx, esi
0x0000fa5d      01c0           add eax, eax
0x0000fa5f      29c2           sub edx, eax
0x0000fa61      4109d4         or r12d, edx
0x0000fa64      0f8586020000   jne 0xfcf0
0x0000fa6a      4183ee01       sub r14d, 1
0x0000fa6e      0f8560ffffff   jne 0xf9d4
0x0000fa74      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000fa79      488b6c2430     mov rbp, qword [rsp + 0x30]
0x0000fa7e      488b442448     mov rax, qword [rsp + 0x48]
0x0000fa83      4c8b642420     mov r12, qword [rsp + 0x20]
0x0000fa88      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x0000fa8d      4c09f0         or rax, r14
0x0000fa90      480b4568       or rax, qword [rbp + 0x68]
0x0000fa94      a801           test al, 1
0x0000fa96      488b442410     mov rax, qword [rsp + 0x10]
0x0000fa9b      0f8487020000   je 0xfd28
0x0000faa1      c7400800ca9a.  mov dword [rax + 8], 0x3b9aca00         ; [0x3b9aca00:4]=-1
0x0000faa8      c744242000ca.  mov dword [rsp + 0x20], 0x3b9aca00      ; [0x3b9aca00:4]=-1
0x0000fab0      4c89e0         mov rax, r12
0x0000fab3      4d39e6         cmp r14, r12
0x0000fab6      0f8fd3fcffff   jg 0xf78f
0x0000fabc      4539ef         cmp r15d, r13d
0x0000fabf      7c0b           jl 0xfacc
0x0000fac1      807c243800     cmp byte [rsp + 0x38], 0
0x0000fac6      0f85c3fcffff   jne 0xf78f
0x0000facc      4939c6         cmp r14, rax
0x0000facf      0f8cf3fcffff   jl 0xf7c8
0x0000fad5      7516           jne 0xfaed
0x0000fad7      4489c8         mov eax, r9d
0x0000fada      99             cdq
0x0000fadb      f77c2420       idiv dword [rsp + 0x20]
0x0000fadf      4489e8         mov eax, r13d
0x0000fae2      29d0           sub eax, edx
0x0000fae4      4439f8         cmp eax, r15d
0x0000fae7      0f8fdbfcffff   jg 0xf7c8
0x0000faed      488b442448     mov rax, qword [rsp + 0x48]
0x0000faf2      ba398ee338     mov edx, 0x38e38e39
0x0000faf7      488d6c2460     lea rbp, [rsp + 0x60]
0x0000fafc      4c89de         mov rsi, r11
0x0000faff      4489d7         mov edi, r10d
0x0000fb02      b900010000     mov ecx, 0x100
0x0000fb07      44894c2418     mov dword [rsp + 0x18], r9d
0x0000fb0c      4489542438     mov dword [rsp + 0x38], r10d
0x0000fb11      4889442460     mov qword [rsp + 0x60], rax
0x0000fb16      4863442428     movsxd rax, dword [rsp + 0x28]
0x0000fb1b      4889442468     mov qword [rsp + 0x68], rax
0x0000fb20      0fb6442408     movzx eax, byte [rsp + 8]
0x0000fb25      4c895c2408     mov qword [rsp + 8], r11
0x0000fb2a      4c09f0         or rax, r14
0x0000fb2d      4889442470     mov qword [rsp + 0x70], rax
0x0000fb32      8b442420       mov eax, dword [rsp + 0x20]
0x0000fb36      f7e2           mul edx
0x0000fb38      89d0           mov eax, edx
0x0000fb3a      4889ea         mov rdx, rbp
0x0000fb3d      d1e8           shr eax, 1
0x0000fb3f      4401f8         add eax, r15d
0x0000fb42      4898           cdqe
0x0000fb44      4889442478     mov qword [rsp + 0x78], rax
0x0000fb49      e8322affff     call sym.imp.utimensat
0x0000fb4e      85c0           test eax, eax
0x0000fb50      448b542438     mov r10d, dword [rsp + 0x38]
0x0000fb55      4c8b5c2408     mov r11, qword [rsp + 8]
0x0000fb5a      448b4c2418     mov r9d, dword [rsp + 0x18]
0x0000fb5f      740a           je 0xfb6b
0x0000fb61      bbfeffffff     mov ebx, 0xfffffffe                     ; 4294967294
0x0000fb66      e924fcffff     jmp 0xf78f
0x0000fb6b      488d8c248000.  lea rcx, [rsp + 0x80]
0x0000fb73      4c89da         mov rdx, r11
0x0000fb76      41b800010000   mov r8d, 0x100
0x0000fb7c      4489d6         mov esi, r10d
0x0000fb7f      bf01000000     mov edi, 1
0x0000fb84      44894c2418     mov dword [rsp + 0x18], r9d
0x0000fb89      4c895c2408     mov qword [rsp + 8], r11
0x0000fb8e      4489542438     mov dword [rsp + 0x38], r10d
0x0000fb93      e8282cffff     call sym.imp.__fxstatat
0x0000fb98      488b8c24e000.  mov rcx, qword [rsp + 0xe0]
0x0000fba0      4189c0         mov r8d, eax
0x0000fba3      488b8424d800.  mov rax, qword [rsp + 0xd8]
0x0000fbab      4963d7         movsxd rdx, r15d
0x0000fbae      448b542438     mov r10d, dword [rsp + 0x38]
0x0000fbb3      4c8b5c2408     mov r11, qword [rsp + 8]
0x0000fbb8      448b4c2418     mov r9d, dword [rsp + 0x18]
0x0000fbbd      4831d1         xor rcx, rdx
0x0000fbc0      4c31f0         xor rax, r14
0x0000fbc3      4809c8         or rax, rcx
0x0000fbc6      4963c8         movsxd rcx, r8d
0x0000fbc9      4809c8         or rax, rcx
0x0000fbcc      0f85ab010000   jne 0xfd7d
0x0000fbd2      8b8c24d80000.  mov ecx, dword [rsp + 0xd8]
0x0000fbd9      be0a000000     mov esi, 0xa
0x0000fbde      83e101         and ecx, 1
0x0000fbe1      69c900ca9a3b   imul ecx, ecx, 0x3b9aca00
0x0000fbe7      038c24e00000.  add ecx, dword [rsp + 0xe0]
0x0000fbee      89c8           mov eax, ecx
0x0000fbf0      99             cdq
0x0000fbf1      f7fe           idiv esi
0x0000fbf3      85d2           test edx, edx
0x0000fbf5      0f85ca010000   jne 0xfdc5
0x0000fbfb      837c24200a     cmp dword [rsp + 0x20], 0xa
0x0000fc00      743b           je 0xfc3d
0x0000fc02      41b809000000   mov r8d, 9
0x0000fc08      be0a000000     mov esi, 0xa
0x0000fc0d      bf0a000000     mov edi, 0xa
0x0000fc12      eb09           jmp 0xfc1d
0x0000fc14      6bf60a         imul esi, esi, 0xa
0x0000fc17      3b742420       cmp esi, dword [rsp + 0x20]
0x0000fc1b      7420           je 0xfc3d
0x0000fc1d      89c8           mov eax, ecx
0x0000fc1f      99             cdq
0x0000fc20      f7ff           idiv edi
0x0000fc22      99             cdq
0x0000fc23      89c1           mov ecx, eax
0x0000fc25      f7ff           idiv edi
0x0000fc27      85d2           test edx, edx
0x0000fc29      0f858d010000   jne 0xfdbc
0x0000fc2f      4183e801       sub r8d, 1
0x0000fc33      75df           jne 0xfc14
0x0000fc35      c74424200094.  mov dword [rsp + 0x20], 0x77359400      ; [0x77359400:4]=-1
0x0000fc3d      8b742420       mov esi, dword [rsp + 0x20]
0x0000fc41      31c0           xor eax, eax
0x0000fc43      81fe00943577   cmp esi, 0x77359400
0x0000fc49      89f3           mov ebx, esi
0x0000fc4b      0f94c0         sete al
0x0000fc4e      f7d0           not eax
0x0000fc50      4898           cdqe
0x0000fc52      4921c4         and r12, rax
0x0000fc55      4489c8         mov eax, r9d
0x0000fc58      4589e9         mov r9d, r13d
0x0000fc5b      99             cdq
0x0000fc5c      f7fe           idiv esi
0x0000fc5e      4129d1         sub r9d, edx
0x0000fc61      0f1f80000000.  nop dword [rax]
0x0000fc68      488b442410     mov rax, qword [rsp + 0x10]
0x0000fc6d      895808         mov dword [rax + 8], ebx
0x0000fc70      c6400c01       mov byte [rax + 0xc], 1
0x0000fc74      e9fffaffff     jmp 0xf778
0x0000fc79      0f1f80000000.  nop dword [rax]
0x0000fc80      4c8b0541c320.  mov r8, qword [reloc.free]              ; [0x21bfc8:8]=0
0x0000fc87      488d15a2f9ff.  lea rdx, sym.dev_info_hash              ; 0xf630 ; "H\x8b\a1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f@"
0x0000fc8e      488d0dabf9ff.  lea rcx, sym.dev_info_compare           ; 0xf640 ; "H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x0000fc95      4889742420     mov qword [rsp + 0x20], rsi
0x0000fc9a      bf10000000     mov edi, 0x10
0x0000fc9f      31f6           xor esi, esi
0x0000fca1      4489542418     mov dword [rsp + 0x18], r10d
0x0000fca6      44896c2410     mov dword [rsp + 0x10], r13d
0x0000fcab      e840c3ffff     call sym.hash_initialize
0x0000fcb0      4885c0         test rax, rax
0x0000fcb3      4889c2         mov rdx, rax
0x0000fcb6      48890523ca20.  mov qword [obj.ht.5307], rax            ; [0x21c6e0:8]=0
0x0000fcbd      448b4c2410     mov r9d, dword [rsp + 0x10]
0x0000fcc2      448b542418     mov r10d, dword [rsp + 0x18]
0x0000fcc7      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x0000fccc      0f8517faffff   jne 0xf6e9
0x0000fcd2      488d4c2450     lea rcx, [rsp + 0x50]
0x0000fcd7      e9b4fbffff     jmp 0xf890
0x0000fcdc      0f1f4000       nop dword [rax]
0x0000fce0      48c705edc920.  mov qword [obj.new_dst_res.5308], 0     ; [0x21c6d8:8]=0
0x0000fceb      e951faffff     jmp 0xf741
0x0000fcf0      81fd00943577   cmp ebp, 0x77359400
0x0000fcf6      4c8b642420     mov r12, qword [rsp + 0x20]
0x0000fcfb      488b742410     mov rsi, qword [rsp + 0x10]
0x0000fd00      0f94442408     sete byte [rsp + 8]
0x0000fd05      0fb6442408     movzx eax, byte [rsp + 8]
0x0000fd0a      44894c2420     mov dword [rsp + 0x20], r9d
0x0000fd0f      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000fd14      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x0000fd19      896e08         mov dword [rsi + 8], ebp
0x0000fd1c      f7d0           not eax
0x0000fd1e      4898           cdqe
0x0000fd20      4c21e0         and rax, r12
0x0000fd23      e98bfdffff     jmp 0xfab3
0x0000fd28      c74008009435.  mov dword [rax + 8], 0x77359400         ; [0x77359400:4]=-1
0x0000fd2f      4c89e0         mov rax, r12
0x0000fd32      c644240801     mov byte [rsp + 8], 1
0x0000fd37      4883e0fe       and rax, 0xfffffffffffffffe
0x0000fd3b      c74424200094.  mov dword [rsp + 0x20], 0x77359400      ; [0x77359400:4]=-1
0x0000fd43      e96bfdffff     jmp 0xfab3
0x0000fd48      488b442410     mov rax, qword [rsp + 0x10]
0x0000fd4d      c74424200a00.  mov dword [rsp + 0x20], 0xa
0x0000fd55      c740080a0000.  mov dword [rax + 8], 0xa
0x0000fd5c      4c89e0         mov rax, r12
0x0000fd5f      e94ffdffff     jmp 0xfab3
0x0000fd64      488b442410     mov rax, qword [rsp + 0x10]
0x0000fd69      c740080a0000.  mov dword [rax + 8], 0xa
0x0000fd70      4c89e0         mov rax, r12
0x0000fd73      e93bfdffff     jmp 0xfab3
0x0000fd78      e8032affff     call sym.imp.__stack_chk_fail
0x0000fd7d      4889542478     mov qword [rsp + 0x78], rdx
0x0000fd82      b900010000     mov ecx, 0x100
0x0000fd87      4889ea         mov rdx, rbp
0x0000fd8a      4c89de         mov rsi, r11
0x0000fd8d      4489d7         mov edi, r10d
0x0000fd90      4489442408     mov dword [rsp + 8], r8d
0x0000fd95      44894c2438     mov dword [rsp + 0x38], r9d
0x0000fd9a      4c89742470     mov qword [rsp + 0x70], r14
0x0000fd9f      e8dc27ffff     call sym.imp.utimensat
0x0000fda4      448b442408     mov r8d, dword [rsp + 8]
0x0000fda9      448b4c2438     mov r9d, dword [rsp + 0x38]
0x0000fdae      4585c0         test r8d, r8d
0x0000fdb1      0f85aafdffff   jne 0xfb61
0x0000fdb7      e916feffff     jmp 0xfbd2
0x0000fdbc      89742420       mov dword [rsp + 0x20], esi
0x0000fdc0      e978feffff     jmp 0xfc3d
0x0000fdc5      895c2420       mov dword [rsp + 0x20], ebx
0x0000fdc9      e96ffeffff     jmp 0xfc3d
0x0000fdce      6690           nop
;-- utimecmp:
0x0000fdd0      4189c8         mov r8d, ecx
0x0000fdd3      4889d1         mov rcx, rdx
0x0000fdd6      4889f2         mov rdx, rsi
0x0000fdd9      4889fe         mov rsi, rdi
0x0000fddc      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x0000fde1      e96af8ffff     jmp sym.utimecmpat
0x0000fde6      662e0f1f8400.  nop word cs:[rax + rax]
;-- update_timespec:
0x0000fdf0      55             push rbp                                ; ../coreutils-8.31/lib/utimens.c:134
0x0000fdf1      53             push rbx
0x0000fdf2      4889fd         mov rbp, rdi
0x0000fdf5      4883ec18       sub rsp, 0x18
0x0000fdf9      488b1e         mov rbx, qword [rsi]                    ; ../coreutils-8.31/lib/utimens.c:135
0x0000fdfc      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/utimens.c:136
0x0000fe00      488b5318       mov rdx, qword [rbx + 0x18]
0x0000fe04      483dfeffff3f   cmp rax, 0x3ffffffe
0x0000fe0a      7464           je 0xfe70
0x0000fe0c      483dffffff3f   cmp rax, 0x3fffffff                     ; ../coreutils-8.31/lib/utimens.c:139
0x0000fe12      741c           je 0xfe30
0x0000fe14      4881fafeffff.  cmp rdx, 0x3ffffffe                     ; ../coreutils-8.31/lib/utimens.c:151
0x0000fe1b      7431           je 0xfe4e
0x0000fe1d      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/utimens.c:156
0x0000fe1f      4881faffffff.  cmp rdx, 0x3fffffff                     ; ../coreutils-8.31/lib/utimens.c:153
0x0000fe26      7470           je 0xfe98
0x0000fe28      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/utimens.c:157
0x0000fe2c      5b             pop rbx
0x0000fe2d      5d             pop rbp
0x0000fe2e      c3             ret
0x0000fe2f      90             nop
0x0000fe30      4881faffffff.  cmp rdx, 0x3fffffff                     ; ../coreutils-8.31/lib/utimens.c:140
0x0000fe37      747f           je 0xfeb8
0x0000fe39      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/utimens.c:149
0x0000fe3c      e86f3d0000     call sym.gettime
0x0000fe41      488b5318       mov rdx, qword [rbx + 0x18]
0x0000fe45      4881fafeffff.  cmp rdx, 0x3ffffffe                     ; ../coreutils-8.31/lib/utimens.c:151
0x0000fe4c      75cf           jne 0xfe1d
0x0000fe4e      488b4560       mov rax, qword [rbp + 0x60]
0x0000fe52      488b5558       mov rdx, qword [rbp + 0x58]
0x0000fe56      48894318       mov qword [rbx + 0x18], rax             ; ../coreutils-8.31/lib/utimens.c:152
0x0000fe5a      48895310       mov qword [rbx + 0x10], rdx
0x0000fe5e      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/utimens.c:157
0x0000fe62      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/utimens.c:156
0x0000fe64      5b             pop rbx                                 ; ../coreutils-8.31/lib/utimens.c:157
0x0000fe65      5d             pop rbp
0x0000fe66      c3             ret
0x0000fe67      660f1f840000.  nop word [rax + rax]
0x0000fe70      4881fafeffff.  cmp rdx, 0x3ffffffe                     ; ../coreutils-8.31/lib/utimens.c:137
0x0000fe77      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/utimens.c:138
0x0000fe7c      74aa           je 0xfe28                               ; ../coreutils-8.31/lib/utimens.c:137
0x0000fe7e      488b4750       mov rax, qword [rdi + 0x50]
0x0000fe82      488b4f48       mov rcx, qword [rdi + 0x48]
0x0000fe86      48894308       mov qword [rbx + 8], rax                ; ../coreutils-8.31/lib/utimens.c:147
0x0000fe8a      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/utimens.c:156
0x0000fe8c      4881faffffff.  cmp rdx, 0x3fffffff                     ; ../coreutils-8.31/lib/utimens.c:153
0x0000fe93      48890b         mov qword [rbx], rcx                    ; ../coreutils-8.31/lib/utimens.c:147
0x0000fe96      7590           jne 0xfe28                              ; ../coreutils-8.31/lib/utimens.c:153
0x0000fe98      488d7b10       lea rdi, [rbx + 0x10]                   ; ../coreutils-8.31/lib/utimens.c:154
0x0000fe9c      8844240f       mov byte [rsp + 0xf], al
0x0000fea0      e80b3d0000     call sym.gettime
0x0000fea5      0fb644240f     movzx eax, byte [rsp + 0xf]
0x0000feaa      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/utimens.c:157
0x0000feae      5b             pop rbx
0x0000feaf      5d             pop rbp
0x0000feb0      c3             ret
0x0000feb1      0f1f80000000.  nop dword [rax]
0x0000feb8      48c706000000.  mov qword [rsi], 0                      ; ../coreutils-8.31/lib/utimens.c:142
0x0000febf      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/utimens.c:143
0x0000fec1      e962ffffff     jmp 0xfe28
0x0000fec6      662e0f1f8400.  nop word cs:[rax + rax]
;-- validate_timespec:
0x0000fed0      4c8b4f08       mov r9, qword [rdi + 8]                 ; ../coreutils-8.31/lib/utimens.c:88
0x0000fed4      498d89020000.  lea rcx, [r9 - 0x3ffffffe]              ; ../coreutils-8.31/lib/utimens.c:93
0x0000fedb      4883f901       cmp rcx, 1                              ; ../coreutils-8.31/lib/utimens.c:91
0x0000fedf      7609           jbe 0xfeea
0x0000fee1      4981f9ffc99a.  cmp r9, 0x3b9ac9ff
0x0000fee8      7776           ja 0xff60
0x0000feea      488b5718       mov rdx, qword [rdi + 0x18]             ; ../coreutils-8.31/lib/utimens.c:95
0x0000feee      4c8d82020000.  lea r8, [rdx - 0x3ffffffe]              ; ../coreutils-8.31/lib/utimens.c:97
0x0000fef5      4983f801       cmp r8, 1                               ; ../coreutils-8.31/lib/utimens.c:95
0x0000fef9      7609           jbe 0xff04
0x0000fefb      4881faffc99a.  cmp rdx, 0x3b9ac9ff
0x0000ff02      775c           ja 0xff60
0x0000ff04      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/utimens.c:90
0x0000ff06      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/utimens.c:89
0x0000ff09      4883f901       cmp rcx, 1                              ; ../coreutils-8.31/lib/utimens.c:107
0x0000ff0d      771a           ja 0xff29
0x0000ff0f      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/utimens.c:112
0x0000ff11      4981f9feffff.  cmp r9, 0x3ffffffe
0x0000ff18      48c707000000.  mov qword [rdi], 0                      ; ../coreutils-8.31/lib/utimens.c:110
0x0000ff1f      400f94c6       sete sil                                ; ../coreutils-8.31/lib/utimens.c:112
0x0000ff23      41ba01000000   mov r10d, 1                             ; ../coreutils-8.31/lib/utimens.c:111
0x0000ff29      4983f801       cmp r8, 1                               ; ../coreutils-8.31/lib/utimens.c:115
0x0000ff2d      771c           ja 0xff4b
0x0000ff2f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/utimens.c:121
0x0000ff31      4881fafeffff.  cmp rdx, 0x3ffffffe
0x0000ff38      48c747100000.  mov qword [rdi + 0x10], 0               ; ../coreutils-8.31/lib/utimens.c:118
0x0000ff40      0f94c0         sete al                                 ; ../coreutils-8.31/lib/utimens.c:121
0x0000ff43      41ba01000000   mov r10d, 1                             ; ../coreutils-8.31/lib/utimens.c:119
0x0000ff49      01c6           add esi, eax                            ; ../coreutils-8.31/lib/utimens.c:121
0x0000ff4b      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/utimens.c:123
0x0000ff4d      83fe01         cmp esi, 1
0x0000ff50      0f94c0         sete al
0x0000ff53      4401d0         add eax, r10d
0x0000ff56      c3             ret                                     ; ../coreutils-8.31/lib/utimens.c:124
0x0000ff57      660f1f840000.  nop word [rax + rax]
0x0000ff60      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/utimens.c:88
0x0000ff64      e83726ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/utimens.c:100
0x0000ff69      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x34800000
0x0000ff6f      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000ff74      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/utimens.c:124
0x0000ff78      c3             ret
0x0000ff79      0f1f80000000.  nop dword [rax]
;-- lutimensat:
0x0000ff80      b900010000     mov ecx, 0x100                          ; ../coreutils-8.31/lib/utimens.h:43
0x0000ff85      e9f625ffff     jmp sym.imp.utimensat
0x0000ff8a      660f1f440000   nop word [rax + rax]
;-- fdutimens:
0x0000ff90      4156           push r14
0x0000ff92      4155           push r13
0x0000ff94      4154           push r12
0x0000ff96      55             push rbp
0x0000ff97      4989f4         mov r12, rsi
0x0000ff9a      53             push rbx
0x0000ff9b      89fb           mov ebx, edi
0x0000ff9d      4881ec100100.  sub rsp, 0x110
0x0000ffa4      64488b042528.  mov rax, qword fs:[0x28]
0x0000ffad      488984240801.  mov qword [rsp + 0x108], rax
0x0000ffb5      31c0           xor eax, eax
0x0000ffb7      4885d2         test rdx, rdx
0x0000ffba      0f84c0020000   je 0x10280
0x0000ffc0      f30f6f02       movdqu xmm0, xmmword [rdx]              ; ../coreutils-8.31/lib/utimens.c:53
0x0000ffc4      488d7c2410     lea rdi, [rsp + 0x10]
0x0000ffc9      0f29442410     movaps xmmword [rsp + 0x10], xmm0       ; ../coreutils-8.31/lib/utimens.c:61
0x0000ffce      48897c2408     mov qword [rsp + 8], rdi
0x0000ffd3      f30f6f4210     movdqu xmm0, xmmword [rdx + 0x10]
0x0000ffd8      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000ffdd      e8eefeffff     call sym.validate_timespec
0x0000ffe2      85c0           test eax, eax
0x0000ffe4      4189c5         mov r13d, eax
0x0000ffe7      0f88b6030000   js 0x103a3
0x0000ffed      85db           test ebx, ebx
0x0000ffef      7909           jns 0xfffa                              ; ../coreutils-8.31/lib/utimens.c:119
0x0000fff1      4d85e4         test r12, r12
0x0000fff4      0f849e030000   je 0x10398
0x0000fffa      8b05ecc62000   mov eax, dword [obj.utimensat_works_really] ; [0x21c6ec:4]=0
0x00010000      85c0           test eax, eax
0x00010002      7834           js 0x10038
0x00010004      4183fd02       cmp r13d, 2
0x00010008      0f8402020000   je 0x10210
0x0001000e      488b742408     mov rsi, qword [rsp + 8]
0x00010013      85db           test ebx, ebx
0x00010015      0f8825030000   js 0x10340
0x0001001b      89df           mov edi, ebx
0x0001001d      e86e2bffff     call sym.imp.futimens
0x00010022      83f800         cmp eax, 0
0x00010025      89c5           mov ebp, eax
0x00010027      0f8e30030000   jle 0x1035d
0x0001002d      e86e25ffff     call sym.imp.__errno_location
0x00010032      c70026000000   mov dword [rax], 0x26                   ; ../coreutils-8.31/lib/utimens.c:84 ; '&'
                                                                       ; [0x26:4]=0x6ac80000
0x00010038      4585ed         test r13d, r13d
0x0001003b      c705a7c62000.  mov dword [obj.utimensat_works_really], 0xffffffff ; [0x21c6ec:4]=0
0x00010045      c70599c62000.  mov dword [obj.lutimensat_works_really], 0xffffffff ; [0x21c6e8:4]=0
0x0001004f      0f855b010000   jne 0x101b0
0x00010055      488b742408     mov rsi, qword [rsp + 8]
0x0001005a      4885f6         test rsi, rsi
0x0001005d      0f848d020000   je 0x102f0
0x00010063      488b06         mov rax, qword [rsi]
0x00010066      488b7e08       mov rdi, qword [rsi + 8]
0x0001006a      48b9cff753e3.  movabs rcx, 0x20c49ba5e353f7cf
0x00010074      4c8d6c2430     lea r13, [rsp + 0x30]
0x00010079      4889442430     mov qword [rsp + 0x30], rax
0x0001007e      4889f8         mov rax, rdi
0x00010081      48c1ff3f       sar rdi, 0x3f
0x00010085      48f7e9         imul rcx
0x00010088      488b4610       mov rax, qword [rsi + 0x10]
0x0001008c      488b7618       mov rsi, qword [rsi + 0x18]
0x00010090      4889442440     mov qword [rsp + 0x40], rax
0x00010095      4889f0         mov rax, rsi
0x00010098      48c1fe3f       sar rsi, 0x3f
0x0001009c      48c1fa07       sar rdx, 7
0x000100a0      4829fa         sub rdx, rdi
0x000100a3      4889542438     mov qword [rsp + 0x38], rdx
0x000100a8      48f7e9         imul rcx
0x000100ab      4889d1         mov rcx, rdx
0x000100ae      48c1f907       sar rcx, 7
0x000100b2      4829f1         sub rcx, rsi
0x000100b5      48894c2448     mov qword [rsp + 0x48], rcx
0x000100ba      85db           test ebx, ebx
0x000100bc      4c89ea         mov rdx, r13                            ; ../coreutils-8.31/lib/utimens.c:128
0x000100bf      0f88d3010000   js 0x10298
0x000100c5      31f6           xor esi, esi
0x000100c7      89df           mov edi, ebx
0x000100c9      e8922bffff     call sym.imp.futimesat
0x000100ce      85c0           test eax, eax
0x000100d0      89c5           mov ebp, eax
0x000100d2      0f85f8010000   jne 0x102d0
0x000100d8      4d85ed         test r13, r13
0x000100db      0f84c6010000   je 0x102a7
0x000100e1      49817d081fa1.  cmp qword [r13 + 8], 0x7a11f
0x000100e9      410f9fc4       setg r12b
0x000100ed      49817d181fa1.  cmp qword [r13 + 0x18], 0x7a11f
0x000100f5      410f9fc6       setg r14b
0x000100f9      4584e4         test r12b, r12b
0x000100fc      7509           jne 0x10107
0x000100fe      4584f6         test r14b, r14b
0x00010101      0f84a0010000   je 0x102a7
0x00010107      488d542470     lea rdx, [rsp + 0x70]                   ; ../coreutils-8.31/lib/utimens.c:138
0x0001010c      89de           mov esi, ebx
0x0001010e      bf01000000     mov edi, 1
0x00010113      e81829ffff     call sym.imp.__fxstat
0x00010118      85c0           test eax, eax
0x0001011a      0f8587010000   jne 0x102a7
0x00010120      488b9424c800.  mov rdx, qword [rsp + 0xc8]             ; ../coreutils-8.31/lib/utimens.c:139
0x00010128      492b5510       sub rdx, qword [r13 + 0x10]
0x0001012c      488b8424b800.  mov rax, qword [rsp + 0xb8]
0x00010134      492b4500       sub rax, qword [r13]
0x00010138      66410f6f4500   movdqa xmm0, xmmword [r13]
0x0001013e      4883fa01       cmp rdx, 1
0x00010142      0f94c2         sete dl
0x00010145      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x0001014a      4121d6         and r14d, edx
0x0001014d      4883f801       cmp rax, 1
0x00010151      66410f6f4510   movdqa xmm0, xmmword [r13 + 0x10]
0x00010157      0f29442460     movaps xmmword [rsp + 0x60], xmm0
0x0001015c      0f854e020000   jne 0x103b0
0x00010162      4584e4         test r12b, r12b
0x00010165      0f8445020000   je 0x103b0
0x0001016b      4883bc24c000.  cmp qword [rsp + 0xc0], 0
0x00010174      0f8536020000   jne 0x103b0                             ; ../coreutils-8.31/lib/utimens.c:156
0x0001017a      4584f6         test r14b, r14b
0x0001017d      48c744245800.  mov qword [rsp + 0x58], 0
0x00010186      740f           je 0x10197
0x00010188      4883bc24d000.  cmp qword [rsp + 0xd0], 0
0x00010191      0f8431020000   je 0x103c8
0x00010197      488d542450     lea rdx, [rsp + 0x50]
0x0001019c      31f6           xor esi, esi
0x0001019e      89df           mov edi, ebx
0x000101a0      e8bb2affff     call sym.imp.futimesat
0x000101a5      31ed           xor ebp, ebp
0x000101a7      e9fb000000     jmp 0x102a7
0x000101ac      0f1f4000       nop dword [rax]
0x000101b0      4183fd03       cmp r13d, 3
0x000101b4      7426           je 0x101dc
0x000101b6      85db           test ebx, ebx
0x000101b8      488d542470     lea rdx, [rsp + 0x70]
0x000101bd      0f883d010000   js 0x10300
0x000101c3      89de           mov esi, ebx
0x000101c5      bf01000000     mov edi, 1
0x000101ca      e86128ffff     call sym.imp.__fxstat
0x000101cf      85c0           test eax, eax
0x000101d1      0f95c0         setne al
0x000101d4      84c0           test al, al
0x000101d6      0f85c7010000   jne 0x103a3
0x000101dc      48837c240800   cmp qword [rsp + 8], 0
0x000101e2      0f8408010000   je 0x102f0
0x000101e8      488d742408     lea rsi, [rsp + 8]
0x000101ed      488d7c2470     lea rdi, [rsp + 0x70]
0x000101f2      31ed           xor ebp, ebp
0x000101f4      e8f7fbffff     call sym.update_timespec
0x000101f9      84c0           test al, al
0x000101fb      0f8454feffff   je 0x10055
0x00010201      e9a1000000     jmp 0x102a7
0x00010206      662e0f1f8400.  nop word cs:[rax + rax]
0x00010210      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/utimens.c:-324
0x00010212      488d542470     lea rdx, [rsp + 0x70]
0x00010217      0f8803010000   js 0x10320
0x0001021d      89de           mov esi, ebx
0x0001021f      bf01000000     mov edi, 1
0x00010224      e80728ffff     call sym.imp.__fxstat
0x00010229      85c0           test eax, eax
0x0001022b      0f95c0         setne al
0x0001022e      84c0           test al, al
0x00010230      0f856d010000   jne 0x103a3
0x00010236      488b742408     mov rsi, qword [rsp + 8]
0x0001023b      48817e08feff.  cmp qword [rsi + 8], 0x3ffffffe
0x00010243      0f8427010000   je 0x10370
0x00010249      48817e18feff.  cmp qword [rsi + 0x18], 0x3ffffffe
0x00010251      41bd03000000   mov r13d, 3
0x00010257      0f85b6fdffff   jne 0x10013
0x0001025d      488b8424d000.  mov rax, qword [rsp + 0xd0]
0x00010265      488b9424c800.  mov rdx, qword [rsp + 0xc8]
0x0001026d      48894618       mov qword [rsi + 0x18], rax
0x00010271      48895610       mov qword [rsi + 0x10], rdx
0x00010275      e999fdffff     jmp 0x10013
0x0001027a      660f1f440000   nop word [rax + rax]
0x00010280      48c744240800.  mov qword [rsp + 8], 0
0x00010289      4531ed         xor r13d, r13d
0x0001028c      e95cfdffff     jmp 0xffed
0x00010291      0f1f80000000.  nop dword [rax]
0x00010298      4c89e6         mov rsi, r12
0x0001029b      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x000102a0      e8bb29ffff     call sym.imp.futimesat
0x000102a5      89c5           mov ebp, eax
0x000102a7      488b8c240801.  mov rcx, qword [rsp + 0x108]
0x000102af      6448330c2528.  xor rcx, qword fs:[0x28]
0x000102b8      89e8           mov eax, ebp                            ; stat.h:-211
0x000102ba      0f8516010000   jne 0x103d6
0x000102c0      4881c4100100.  add rsp, 0x110
0x000102c7      5b             pop rbx
0x000102c8      5d             pop rbp
0x000102c9      415c           pop r12
0x000102cb      415d           pop r13
0x000102cd      415e           pop r14
0x000102cf      c3             ret
0x000102d0      4d85e4         test r12, r12
0x000102d3      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x000102d8      74cd           je 0x102a7
0x000102da      4c89ee         mov rsi, r13
0x000102dd      4c89e7         mov rdi, r12
0x000102e0      e81b26ffff     call sym.imp.utimes
0x000102e5      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/utimens.c:-541
0x000102e7      ebbe           jmp 0x102a7
0x000102e9      0f1f80000000.  nop dword [rax]
0x000102f0      4531ed         xor r13d, r13d
0x000102f3      e9c2fdffff     jmp 0x100ba
0x000102f8      0f1f84000000.  nop dword [rax + rax]
0x00010300      4c89e6         mov rsi, r12
0x00010303      bf01000000     mov edi, 1
0x00010308      e8d326ffff     call sym.imp.__xstat
0x0001030d      85c0           test eax, eax
0x0001030f      0f95c0         setne al
0x00010312      e9bdfeffff     jmp 0x101d4
0x00010317      660f1f840000.  nop word [rax + rax]
0x00010320      4c89e6         mov rsi, r12
0x00010323      bf01000000     mov edi, 1
0x00010328      e8b326ffff     call sym.imp.__xstat
0x0001032d      85c0           test eax, eax
0x0001032f      0f95c0         setne al
0x00010332      e9f7feffff     jmp 0x1022e
0x00010337      660f1f840000.  nop word [rax + rax]
0x00010340      31c9           xor ecx, ecx
0x00010342      4889f2         mov rdx, rsi
0x00010345      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x0001034a      4c89e6         mov rsi, r12
0x0001034d      e82e22ffff     call sym.imp.utimensat
0x00010352      83f800         cmp eax, 0
0x00010355      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/utimens.c:-337
0x00010357      0f8fd0fcffff   jg 0x1002d
0x0001035d      757c           jne 0x103db
0x0001035f      c70583c32000.  mov dword [obj.utimensat_works_really], 1 ; [0x21c6ec:4]=0
0x00010369      e939ffffff     jmp 0x102a7
0x0001036e      6690           nop
0x00010370      488b8424c000.  mov rax, qword [rsp + 0xc0]
0x00010378      488b9424b800.  mov rdx, qword [rsp + 0xb8]
0x00010380      41bd03000000   mov r13d, 3
0x00010386      488916         mov qword [rsi], rdx
0x00010389      48894608       mov qword [rsi + 8], rax
0x0001038d      e981fcffff     jmp 0x10013
0x00010392      660f1f440000   nop word [rax + rax]
0x00010398      e80322ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/utimens.c:-283
0x0001039d      c70009000000   mov dword [rax], 9
0x000103a3      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x000103a8      e9fafeffff     jmp 0x102a7
0x000103ad      0f1f00         nop dword [rax]
0x000103b0      4584f6         test r14b, r14b
0x000103b3      0f84ecfdffff   je 0x101a5                              ; ../coreutils-8.31/lib/utimens.c:-274
0x000103b9      4883bc24d000.  cmp qword [rsp + 0xd0], 0
0x000103c2      0f85ddfdffff   jne 0x101a5
0x000103c8      48c744246800.  mov qword [rsp + 0x68], 0
0x000103d1      e9c1fdffff     jmp 0x10197
0x000103d6      e8a523ffff     call sym.imp.__stack_chk_fail
0x000103db      e8c021ffff     call sym.imp.__errno_location
0x000103e0      833826         cmp dword [rax], 0x26
0x000103e3      0f8576ffffff   jne 0x1035f
0x000103e9      e94afcffff     jmp 0x10038
0x000103ee      6690           nop
;-- utimens:
0x000103f0      4889f2         mov rdx, rsi
0x000103f3      4889fe         mov rsi, rdi                            ; ../coreutils-8.31/lib/utimens.c:-264
0x000103f6      bfffffffff     mov edi, 0xffffffff                     ; -1
0x000103fb      e990fbffff     jmp sym.fdutimens                       ; ../coreutils-8.31/lib/utimens.c:-253
;-- lutimens:
0x00010400      4154           push r12
0x00010402      55             push rbp
0x00010403      4989fc         mov r12, rdi
0x00010406      53             push rbx
0x00010407      4881ecd00000.  sub rsp, 0xd0
0x0001040e      64488b042528.  mov rax, qword fs:[0x28]
0x00010417      48898424c800.  mov qword [rsp + 0xc8], rax
0x0001041f      31c0           xor eax, eax
0x00010421      4885f6         test rsi, rsi
0x00010424      0f84f6000000   je 0x10520
0x0001042a      f30f6f06       movdqu xmm0, xmmword [rsi]              ; ../coreutils-8.31/lib/utimens.c:-216
0x0001042e      488d7c2410     lea rdi, [rsp + 0x10]
0x00010433      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00010438      48897c2408     mov qword [rsp + 8], rdi
0x0001043d      f30f6f4610     movdqu xmm0, xmmword [rsi + 0x10]       ; ../coreutils-8.31/lib/utimens.c:-206
0x00010442      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00010447      e884faffff     call sym.validate_timespec              ; ../coreutils-8.31/lib/utimens.c:-199
0x0001044c      85c0           test eax, eax
0x0001044e      89c3           mov ebx, eax
0x00010450      0f880a010000   js 0x10560
0x00010456      8b058cc22000   mov eax, dword [obj.lutimensat_works_really] ; ../coreutils-8.31/lib/utimens.c:-195 ; [0x21c6e8:4]=0
0x0001045c      85c0           test eax, eax
0x0001045e      7836           js 0x10496
0x00010460      83fb02         cmp ebx, 2
0x00010463      0f8427010000   je 0x10590
0x00010469      488b542408     mov rdx, qword [rsp + 8]
0x0001046e      b900010000     mov ecx, 0x100
0x00010473      4c89e6         mov rsi, r12
0x00010476      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x0001047b      e80021ffff     call sym.imp.utimensat
0x00010480      83f800         cmp eax, 0
0x00010483      89c5           mov ebp, eax
0x00010485      0f8ee5000000   jle 0x10570
0x0001048b      e81021ffff     call sym.imp.__errno_location
0x00010490      c70026000000   mov dword [rax], 0x26                   ; '&'
                                                                       ; [0x26:4]=0x6ac80000
0x00010496      85db           test ebx, ebx
0x00010498      c70546c22000.  mov dword [obj.lutimensat_works_really], 0xffffffff ; [0x21c6e8:4]=0
0x000104a2      0f849d000000   je 0x10545
0x000104a8      83fb03         cmp ebx, 3
0x000104ab      0f8537010000   jne 0x105e8
0x000104b1      48837c240800   cmp qword [rsp + 8], 0
0x000104b7      7417           je 0x104d0
0x000104b9      488d742408     lea rsi, [rsp + 8]
0x000104be      488d7c2430     lea rdi, [rsp + 0x30]
0x000104c3      31ed           xor ebp, ebp
0x000104c5      e826f9ffff     call sym.update_timespec                ; ../coreutils-8.31/lib/utimens.c:-253
0x000104ca      84c0           test al, al
0x000104cc      752a           jne 0x104f8
0x000104ce      6690           nop
0x000104d0      8b442448       mov eax, dword [rsp + 0x48]
0x000104d4      2500f00000     and eax, 0xf000
0x000104d9      3d00a00000     cmp eax, 0xa000
0x000104de      0f8452010000   je 0x10636
0x000104e4      488b542408     mov rdx, qword [rsp + 8]
0x000104e9      4c89e6         mov rsi, r12
0x000104ec      bfffffffff     mov edi, 0xffffffff                     ; -1
0x000104f1      e89afaffff     call sym.fdutimens
0x000104f6      89c5           mov ebp, eax
0x000104f8      488b8c24c800.  mov rcx, qword [rsp + 0xc8]
0x00010500      6448330c2528.  xor rcx, qword fs:[0x28]
0x00010509      89e8           mov eax, ebp
0x0001050b      0f8535010000   jne 0x10646
0x00010511      4881c4d00000.  add rsp, 0xd0
0x00010518      5b             pop rbx
0x00010519      5d             pop rbp
0x0001051a      415c           pop r12
0x0001051c      c3             ret
0x0001051d      0f1f00         nop dword [rax]
0x00010520      8b0dc2c12000   mov ecx, dword [obj.lutimensat_works_really] ; [0x21c6e8:4]=0
0x00010526      31d2           xor edx, edx
0x00010528      31db           xor ebx, ebx
0x0001052a      48c744240800.  mov qword [rsp + 8], 0
0x00010533      85c9           test ecx, ecx
0x00010535      0f8933ffffff   jns 0x1046e                             ; stat.h:-332
0x0001053b      c705a3c12000.  mov dword [obj.lutimensat_works_really], 0xffffffff ; [0x21c6e8:4]=0
0x00010545      488d542430     lea rdx, [rsp + 0x30]
0x0001054a      4c89e6         mov rsi, r12
0x0001054d      bf01000000     mov edi, 1
0x00010552      e80922ffff     call sym.imp.__lxstat
0x00010557      85c0           test eax, eax
0x00010559      0f8471ffffff   je 0x104d0
0x0001055f      90             nop
0x00010560      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x00010565      eb91           jmp 0x104f8
0x00010567      660f1f840000.  nop word [rax + rax]
0x00010570      0f85d5000000   jne 0x1064b
0x00010576      c7056cc12000.  mov dword [obj.utimensat_works_really], 1 ; [0x21c6ec:4]=0
0x00010580      c7055ec12000.  mov dword [obj.lutimensat_works_really], 1 ; [0x21c6e8:4]=0
0x0001058a      e969ffffff     jmp 0x104f8
0x0001058f      90             nop
0x00010590      488d542430     lea rdx, [rsp + 0x30]
0x00010595      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/utimens.c:-323
0x00010598      bf01000000     mov edi, 1
0x0001059d      e8be21ffff     call sym.imp.__lxstat
0x000105a2      85c0           test eax, eax
0x000105a4      75ba           jne 0x10560
0x000105a6      488b542408     mov rdx, qword [rsp + 8]
0x000105ab      48817a08feff.  cmp qword [rdx + 8], 0x3ffffffe
0x000105b3      7463           je 0x10618                              ; ../coreutils-8.31/lib/utimens.c:-360
0x000105b5      48817a18feff.  cmp qword [rdx + 0x18], 0x3ffffffe
0x000105bd      bb03000000     mov ebx, 3
0x000105c2      0f85a6feffff   jne 0x1046e
0x000105c8      488b84249000.  mov rax, qword [rsp + 0x90]
0x000105d0      488b8c248800.  mov rcx, qword [rsp + 0x88]
0x000105d8      48894218       mov qword [rdx + 0x18], rax
0x000105dc      48894a10       mov qword [rdx + 0x10], rcx
0x000105e0      e989feffff     jmp 0x1046e
0x000105e5      0f1f00         nop dword [rax]
0x000105e8      488d542430     lea rdx, [rsp + 0x30]
0x000105ed      4c89e6         mov rsi, r12
0x000105f0      bf01000000     mov edi, 1
0x000105f5      e86621ffff     call sym.imp.__lxstat
0x000105fa      85c0           test eax, eax
0x000105fc      0f855effffff   jne 0x10560
0x00010602      48837c240800   cmp qword [rsp + 8], 0
0x00010608      0f85abfeffff   jne 0x104b9
0x0001060e      e9bdfeffff     jmp 0x104d0
0x00010613      0f1f440000     nop dword [rax + rax]
0x00010618      488b84248000.  mov rax, qword [rsp + 0x80]
0x00010620      488b4c2478     mov rcx, qword [rsp + 0x78]
0x00010625      bb03000000     mov ebx, 3
0x0001062a      48890a         mov qword [rdx], rcx
0x0001062d      48894208       mov qword [rdx + 8], rax
0x00010631      e938feffff     jmp 0x1046e
0x00010636      e8651fffff     call sym.imp.__errno_location
0x0001063b      c70026000000   mov dword [rax], 0x26                   ; '&'
                                                                       ; [0x26:4]=0x6ac80000
0x00010641      e91affffff     jmp 0x10560
0x00010646      e83521ffff     call sym.imp.__stack_chk_fail
0x0001064b      e8501fffff     call sym.imp.__errno_location
0x00010650      833826         cmp dword [rax], 0x26
0x00010653      0f851dffffff   jne 0x10576
0x00010659      e938feffff     jmp 0x10496
0x0001065e      6690           nop
;-- version_etc_arn:
0x00010660      4157           push r15
0x00010662      4156           push r14
0x00010664      4155           push r13
0x00010666      4154           push r12
0x00010668      4d89cc         mov r12, r9
0x0001066b      55             push rbp
0x0001066c      53             push rbx
0x0001066d      4889fd         mov rbp, rdi
0x00010670      4c89c3         mov rbx, r8
0x00010673      4883ec28       sub rsp, 0x28
0x00010677      4885f6         test rsi, rsi
0x0001067a      0f8418010000   je 0x10798
0x00010680      4989d0         mov r8, rdx
0x00010683      488d15956900.  lea rdx, str.s___s___s                  ; 0x1701f ; "%s (%s) %s\n"
0x0001068a      4989c9         mov r9, rcx
0x0001068d      31c0           xor eax, eax
0x0001068f      4889f1         mov rcx, rsi
0x00010692      be01000000     mov esi, 1
0x00010697      e88425ffff     call sym.imp.__fprintf_chk
0x0001069c      488d358f6900.  lea rsi, [0x00017032]                   ; "(C)"
0x000106a3      31ff           xor edi, edi
0x000106a5      ba05000000     mov edx, 5
0x000106aa      e88120ffff     call sym.imp.dcgettext
0x000106af      488d158a6c00.  lea rdx, obj.version_etc_copyright      ; 0x17340 ; "Copyright %s %d Free Software Foundation, Inc."
0x000106b6      4889c1         mov rcx, rax
0x000106b9      41b8e3070000   mov r8d, 0x7e3
0x000106bf      be01000000     mov esi, 1
0x000106c4      4889ef         mov rdi, rbp
0x000106c7      31c0           xor eax, eax
0x000106c9      e85225ffff     call sym.imp.__fprintf_chk
0x000106ce      488d35d36900.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x170a8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x000106d5      31ff           xor edi, edi
0x000106d7      ba05000000     mov edx, 5
0x000106dc      e84f20ffff     call sym.imp.dcgettext
0x000106e1      4889ee         mov rsi, rbp
0x000106e4      4889c7         mov rdi, rax
0x000106e7      e80422ffff     call sym.imp.fputs_unlocked
0x000106ec      4983fc09       cmp r12, 9
0x000106f0      0f873a030000   ja 0x10a30
0x000106f6      488d15076c00.  lea rdx, [0x00017304]
0x000106fd      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00010701      4801d0         add rax, rdx
0x00010704      ffe0           jmp rax
0x00010706      662e0f1f8400.  nop word cs:[rax + rax]
0x00010710      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00010714      488b4310       mov rax, qword [rbx + 0x10]
0x00010718      488d35f96a00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x17218 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0001071f      4c8b4308       mov r8, qword [rbx + 8]
0x00010723      ba05000000     mov edx, 5
0x00010728      31ff           xor edi, edi
0x0001072a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0001072e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00010732      4c894c2410     mov qword [rsp + 0x10], r9
0x00010737      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0001073b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0001073f      48890424       mov qword [rsp], rax
0x00010743      4c89442408     mov qword [rsp + 8], r8
0x00010748      488b1b         mov rbx, qword [rbx]
0x0001074b      e8e01fffff     call sym.imp.dcgettext
0x00010750      4883ec08       sub rsp, 8
0x00010754      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00010759      4889c2         mov rdx, rax
0x0001075c      4889d9         mov rcx, rbx
0x0001075f      be01000000     mov esi, 1
0x00010764      4889ef         mov rdi, rbp
0x00010767      31c0           xor eax, eax
0x00010769      4151           push r9
0x0001076b      4155           push r13
0x0001076d      4154           push r12
0x0001076f      4157           push r15
0x00010771      4156           push r14
0x00010773      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00010778      4c8b442438     mov r8, qword [rsp + 0x38]
0x0001077d      e89e24ffff     call sym.imp.__fprintf_chk
0x00010782      4883c430       add rsp, 0x30
0x00010786      4883c428       add rsp, 0x28
0x0001078a      5b             pop rbx
0x0001078b      5d             pop rbp
0x0001078c      415c           pop r12
0x0001078e      415d           pop r13
0x00010790      415e           pop r14
0x00010792      415f           pop r15
0x00010794      c3             ret
0x00010795      0f1f00         nop dword [rax]
0x00010798      4989c8         mov r8, rcx
0x0001079b      4889d1         mov rcx, rdx
0x0001079e      488d15866800.  lea rdx, str.s__s                       ; 0x1702b ; "%s %s\n"
0x000107a5      be01000000     mov esi, 1
0x000107aa      31c0           xor eax, eax
0x000107ac      e86f24ffff     call sym.imp.__fprintf_chk
0x000107b1      e9e6feffff     jmp 0x1069c
0x000107b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000107c0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000107c4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000107c8      488d35796a00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x17248 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x000107cf      488b4310       mov rax, qword [rbx + 0x10]
0x000107d3      4c8b4308       mov r8, qword [rbx + 8]
0x000107d7      ba05000000     mov edx, 5
0x000107dc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000107e0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000107e4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000107e8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000107ec      488b1b         mov rbx, qword [rbx]
0x000107ef      4c89542418     mov qword [rsp + 0x18], r10
0x000107f4      4c894c2410     mov qword [rsp + 0x10], r9
0x000107f9      48890424       mov qword [rsp], rax
0x000107fd      4c89442408     mov qword [rsp + 8], r8
0x00010802      31ff           xor edi, edi
0x00010804      e8271fffff     call sym.imp.dcgettext
0x00010809      4c8b542418     mov r10, qword [rsp + 0x18]
0x0001080e      4152           push r10
0x00010810      e93fffffff     jmp 0x10754
0x00010815      0f1f00         nop dword [rax]
0x00010818      488b1b         mov rbx, qword [rbx]
0x0001081b      488d35146800.  lea rsi, str.Written_by__s.             ; 0x17036 ; "Written by %s.\n"
0x00010822      ba05000000     mov edx, 5
0x00010827      31ff           xor edi, edi
0x00010829      e8021fffff     call sym.imp.dcgettext
0x0001082e      4883c428       add rsp, 0x28
0x00010832      4889d9         mov rcx, rbx
0x00010835      4889ef         mov rdi, rbp
0x00010838      5b             pop rbx
0x00010839      5d             pop rbp
0x0001083a      415c           pop r12
0x0001083c      415d           pop r13
0x0001083e      415e           pop r14
0x00010840      415f           pop r15
0x00010842      4889c2         mov rdx, rax
0x00010845      be01000000     mov esi, 1
0x0001084a      31c0           xor eax, eax
0x0001084c      e9cf23ffff     jmp sym.imp.__fprintf_chk
0x00010851      0f1f80000000.  nop dword [rax]
0x00010858      4c8b6308       mov r12, qword [rbx + 8]
0x0001085c      488d35e36700.  lea rsi, str.Written_by__s_and__s.      ; 0x17046 ; "Written by %s and %s.\n"
0x00010863      488b1b         mov rbx, qword [rbx]
0x00010866      ba05000000     mov edx, 5
0x0001086b      31ff           xor edi, edi
0x0001086d      e8be1effff     call sym.imp.dcgettext
0x00010872      4883c428       add rsp, 0x28
0x00010876      4d89e0         mov r8, r12
0x00010879      4889d9         mov rcx, rbx
0x0001087c      4889ef         mov rdi, rbp
0x0001087f      4889c2         mov rdx, rax
0x00010882      be01000000     mov esi, 1
0x00010887      5b             pop rbx
0x00010888      5d             pop rbp
0x00010889      415c           pop r12
0x0001088b      415d           pop r13
0x0001088d      415e           pop r14
0x0001088f      415f           pop r15
0x00010891      31c0           xor eax, eax
0x00010893      e98823ffff     jmp sym.imp.__fprintf_chk
0x00010898      0f1f84000000.  nop dword [rax + rax]
0x000108a0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000108a4      4c8b6308       mov r12, qword [rbx + 8]
0x000108a8      488d35ae6700.  lea rsi, str.Written_by__s___s__and__s. ; 0x1705d ; "Written by %s, %s, and %s.\n"
0x000108af      488b1b         mov rbx, qword [rbx]
0x000108b2      ba05000000     mov edx, 5
0x000108b7      31ff           xor edi, edi
0x000108b9      e8721effff     call sym.imp.dcgettext
0x000108be      4883c428       add rsp, 0x28
0x000108c2      4d89e9         mov r9, r13
0x000108c5      4d89e0         mov r8, r12
0x000108c8      4889d9         mov rcx, rbx
0x000108cb      4889ef         mov rdi, rbp
0x000108ce      4889c2         mov rdx, rax
0x000108d1      5b             pop rbx
0x000108d2      5d             pop rbp
0x000108d3      415c           pop r12
0x000108d5      415d           pop r13
0x000108d7      415e           pop r14
0x000108d9      415f           pop r15
0x000108db      be01000000     mov esi, 1
0x000108e0      31c0           xor eax, eax
0x000108e2      e93923ffff     jmp sym.imp.__fprintf_chk
0x000108e7      660f1f840000.  nop word [rax + rax]
0x000108f0      488d35816800.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x17178 ; "Written by %s, %s, %s,\nand %s.\n"
0x000108f7      ba05000000     mov edx, 5
0x000108fc      31ff           xor edi, edi
0x000108fe      4c8b7318       mov r14, qword [rbx + 0x18]
0x00010902      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00010906      4c8b6308       mov r12, qword [rbx + 8]
0x0001090a      488b1b         mov rbx, qword [rbx]
0x0001090d      e81e1effff     call sym.imp.dcgettext
0x00010912      4883ec08       sub rsp, 8
0x00010916      4156           push r14
0x00010918      4889c2         mov rdx, rax
0x0001091b      4d89e9         mov r9, r13
0x0001091e      4d89e0         mov r8, r12
0x00010921      4889d9         mov rcx, rbx
0x00010924      4889ef         mov rdi, rbp
0x00010927      be01000000     mov esi, 1
0x0001092c      31c0           xor eax, eax
0x0001092e      e8ed22ffff     call sym.imp.__fprintf_chk
0x00010933      58             pop rax
0x00010934      5a             pop rdx
0x00010935      4883c428       add rsp, 0x28
0x00010939      5b             pop rbx
0x0001093a      5d             pop rbp
0x0001093b      415c           pop r12
0x0001093d      415d           pop r13
0x0001093f      415e           pop r14
0x00010941      415f           pop r15
0x00010943      c3             ret
0x00010944      0f1f4000       nop dword [rax]
0x00010948      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0001094c      488d35456800.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x17198 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00010953      ba05000000     mov edx, 5
0x00010958      31ff           xor edi, edi
0x0001095a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0001095e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00010962      4c8b6308       mov r12, qword [rbx + 8]
0x00010966      488b1b         mov rbx, qword [rbx]
0x00010969      e8c21dffff     call sym.imp.dcgettext
0x0001096e      4157           push r15
0x00010970      eba4           jmp 0x10916
0x00010972      660f1f440000   nop word [rax + rax]
0x00010978      4c8b4308       mov r8, qword [rbx + 8]
0x0001097c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00010980      488d35396800.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x171c0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00010987      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0001098b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0001098f      ba05000000     mov edx, 5
0x00010994      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00010998      31ff           xor edi, edi
0x0001099a      488b1b         mov rbx, qword [rbx]
0x0001099d      4c890424       mov qword [rsp], r8
0x000109a1      e88a1dffff     call sym.imp.dcgettext
0x000109a6      4883ec08       sub rsp, 8
0x000109aa      4d89e9         mov r9, r13
0x000109ad      4154           push r12
0x000109af      4157           push r15
0x000109b1      4156           push r14
0x000109b3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000109b8      4889d9         mov rcx, rbx
0x000109bb      4889c2         mov rdx, rax
0x000109be      4889ef         mov rdi, rbp
0x000109c1      be01000000     mov esi, 1
0x000109c6      31c0           xor eax, eax
0x000109c8      e85322ffff     call sym.imp.__fprintf_chk
0x000109cd      4883c420       add rsp, 0x20
0x000109d1      4883c428       add rsp, 0x28
0x000109d5      5b             pop rbx
0x000109d6      5d             pop rbp
0x000109d7      415c           pop r12
0x000109d9      415d           pop r13
0x000109db      415e           pop r14
0x000109dd      415f           pop r15
0x000109df      c3             ret
0x000109e0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x000109e4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000109e8      488d35f96700.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x171e8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x000109ef      4c8b6328       mov r12, qword [rbx + 0x28]
0x000109f3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000109f7      ba05000000     mov edx, 5
0x000109fc      4c8b7318       mov r14, qword [rbx + 0x18]
0x00010a00      4c8b4308       mov r8, qword [rbx + 8]
0x00010a04      31ff           xor edi, edi
0x00010a06      4c894c2408     mov qword [rsp + 8], r9
0x00010a0b      488b1b         mov rbx, qword [rbx]
0x00010a0e      4c890424       mov qword [rsp], r8
0x00010a12      e8191dffff     call sym.imp.dcgettext
0x00010a17      4155           push r13
0x00010a19      4154           push r12
0x00010a1b      4157           push r15
0x00010a1d      4156           push r14
0x00010a1f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00010a24      eb8d           jmp 0x109b3
0x00010a26      662e0f1f8400.  nop word cs:[rax + rax]
0x00010a30      4c8b5340       mov r10, qword [rbx + 0x40]
0x00010a34      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00010a38      ba05000000     mov edx, 5
0x00010a3d      488b4310       mov rax, qword [rbx + 0x10]
0x00010a41      4c8b4308       mov r8, qword [rbx + 8]
0x00010a45      488d35346800.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x17280 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00010a4c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00010a50      4c8b6328       mov r12, qword [rbx + 0x28]
0x00010a54      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00010a58      4c8b7318       mov r14, qword [rbx + 0x18]
0x00010a5c      4c89542418     mov qword [rsp + 0x18], r10
0x00010a61      4c894c2410     mov qword [rsp + 0x10], r9
0x00010a66      48890424       mov qword [rsp], rax
0x00010a6a      4c89442408     mov qword [rsp + 8], r8
0x00010a6f      488b1b         mov rbx, qword [rbx]
0x00010a72      e98bfdffff     jmp 0x10802
0x00010a77      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00010a80      4531c9         xor r9d, r9d
0x00010a83      49833800       cmp qword [r8], 0
0x00010a87      7412           je 0x10a9b
0x00010a89      0f1f80000000.  nop dword [rax]
0x00010a90      4983c101       add r9, 1
0x00010a94      4b833cc800     cmp qword [r8 + r9*8], 0
0x00010a99      75f5           jne 0x10a90
0x00010a9b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00010aa0      4883ec68       sub rsp, 0x68
0x00010aa4      4d89c2         mov r10, r8
0x00010aa7      4531c9         xor r9d, r9d
0x00010aaa      64488b042528.  mov rax, qword fs:[0x28]
0x00010ab3      4889442458     mov qword [rsp + 0x58], rax
0x00010ab8      31c0           xor eax, eax
0x00010aba      4989e0         mov r8, rsp
0x00010abd      0f1f00         nop dword [rax]
0x00010ac0      418b02         mov eax, dword [r10]
0x00010ac3      83f82f         cmp eax, 0x2f
0x00010ac6      7742           ja 0x10b0a
0x00010ac8      4189c3         mov r11d, eax
0x00010acb      4d035a10       add r11, qword [r10 + 0x10]
0x00010acf      83c008         add eax, 8
0x00010ad2      418902         mov dword [r10], eax
0x00010ad5      498b03         mov rax, qword [r11]
0x00010ad8      4885c0         test rax, rax
0x00010adb      4b8904c8       mov qword [r8 + r9*8], rax
0x00010adf      740a           je 0x10aeb
0x00010ae1      4983c101       add r9, 1
0x00010ae5      4983f90a       cmp r9, 0xa
0x00010ae9      75d5           jne 0x10ac0
0x00010aeb      e870fbffff     call sym.version_etc_arn
0x00010af0      488b442458     mov rax, qword [rsp + 0x58]
0x00010af5      644833042528.  xor rax, qword fs:[0x28]
0x00010afe      7505           jne 0x10b05
0x00010b00      4883c468       add rsp, 0x68
0x00010b04      c3             ret
0x00010b05      e8761cffff     call sym.imp.__stack_chk_fail
0x00010b0a      4d8b5a08       mov r11, qword [r10 + 8]
0x00010b0e      498d4308       lea rax, [r11 + 8]
0x00010b12      49894208       mov qword [r10 + 8], rax
0x00010b16      ebbd           jmp 0x10ad5
0x00010b18      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00010b20      55             push rbp
0x00010b21      53             push rbx
0x00010b22      41ba20000000   mov r10d, 0x20                          ; "@"
0x00010b28      4531db         xor r11d, r11d
0x00010b2b      4881ecb80000.  sub rsp, 0xb8
0x00010b32      64488b042528.  mov rax, qword fs:[0x28]
0x00010b3b      4889442478     mov qword [rsp + 0x78], rax
0x00010b40      31c0           xor eax, eax
0x00010b42      488d8424d000.  lea rax, [rsp + 0xd0]
0x00010b4a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00010b52      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00010b5a      4c8d442420     lea r8, [rsp + 0x20]
0x00010b5f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00010b67      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00010b6f      4889442410     mov qword [rsp + 0x10], rax
0x00010b74      488d84248000.  lea rax, [rsp + 0x80]
0x00010b7c      4531c9         xor r9d, r9d
0x00010b7f      4889442418     mov qword [rsp + 0x18], rax
0x00010b84      4889c5         mov rbp, rax
0x00010b87      660f1f840000.  nop word [rax + rax]
0x00010b90      4183fa2f       cmp r10d, 0x2f
0x00010b94      7756           ja 0x10bec
0x00010b96      4489d0         mov eax, r10d
0x00010b99      41bb01000000   mov r11d, 1
0x00010b9f      4183c208       add r10d, 8
0x00010ba3      4801e8         add rax, rbp
0x00010ba6      488b00         mov rax, qword [rax]
0x00010ba9      4885c0         test rax, rax
0x00010bac      4b8904c8       mov qword [r8 + r9*8], rax
0x00010bb0      740a           je 0x10bbc
0x00010bb2      4983c101       add r9, 1
0x00010bb6      4983f90a       cmp r9, 0xa
0x00010bba      75d4           jne 0x10b90
0x00010bbc      4584db         test r11b, r11b
0x00010bbf      7524           jne 0x10be5
0x00010bc1      e89afaffff     call sym.version_etc_arn
0x00010bc6      488b442478     mov rax, qword [rsp + 0x78]
0x00010bcb      644833042528.  xor rax, qword fs:[0x28]
0x00010bd4      750a           jne 0x10be0
0x00010bd6      4881c4b80000.  add rsp, 0xb8
0x00010bdd      5b             pop rbx
0x00010bde      5d             pop rbp
0x00010bdf      c3             ret
0x00010be0      e89b1bffff     call sym.imp.__stack_chk_fail
0x00010be5      4489542408     mov dword [rsp + 8], r10d
0x00010bea      ebd5           jmp 0x10bc1
0x00010bec      4889d8         mov rax, rbx
0x00010bef      4883c308       add rbx, 8
0x00010bf3      ebb1           jmp 0x10ba6
0x00010bf5      90             nop
0x00010bf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00010c00      53             push rbx
0x00010c01      488d35716400.  lea rsi, str.Report_bugs_to:__s         ; 0x17079 ; "\nReport bugs to: %s\n"
0x00010c08      ba05000000     mov edx, 5
0x00010c0d      31ff           xor edi, edi
0x00010c0f      e81c1bffff     call sym.imp.dcgettext
0x00010c14      488d15e84e00.  lea rdx, str.bug_coreutils_gnu.org      ; 0x15b03 ; "bug-coreutils@gnu.org"
0x00010c1b      4889c6         mov rsi, rax
0x00010c1e      bf01000000     mov edi, 1
0x00010c23      31c0           xor eax, eax
0x00010c25      e8861effff     call sym.imp.__printf_chk
0x00010c2a      488d355d6400.  lea rsi, str.s_home_page:___s           ; 0x1708e ; "%s home page: <%s>\n"
0x00010c31      ba05000000     mov edx, 5
0x00010c36      31ff           xor edi, edi
0x00010c38      e8f31affff     call sym.imp.dcgettext
0x00010c3d      488d0dbc4c00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x15900 ; "https://www.gnu.org/software/coreutils/"
0x00010c44      488d15634300.  lea rdx, str.GNU_coreutils              ; 0x14fae ; "GNU coreutils"
0x00010c4b      4889c6         mov rsi, rax
0x00010c4e      bf01000000     mov edi, 1
0x00010c53      31c0           xor eax, eax
0x00010c55      e8561effff     call sym.imp.__printf_chk
0x00010c5a      488b1d67b420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0c8:8]=0
0x00010c61      488d35586600.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x172c0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00010c68      31ff           xor edi, edi
0x00010c6a      ba05000000     mov edx, 5
0x00010c6f      e8bc1affff     call sym.imp.dcgettext
0x00010c74      4889de         mov rsi, rbx
0x00010c77      4889c7         mov rdi, rax
0x00010c7a      5b             pop rbx
0x00010c7b      e9701cffff     jmp sym.imp.fputs_unlocked
;-- can_write_any_file:
0x00010c80      803d6aba2000.  cmp byte [obj.initialized.3064], 0      ; ../coreutils-8.31/lib/write-any-file.c:33 ; [0x21c6f1:1]=0
0x00010c87      740f           je 0x10c98
0x00010c89      0fb60560ba20.  movzx eax, byte [obj.can_write.3065]    ; [0x21c6f0:1]=0
0x00010c90      c3             ret                                     ; ../coreutils-8.31/lib/write-any-file.c:51
0x00010c91      0f1f80000000.  nop dword [rax]
0x00010c98      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/write-any-file.c:33
0x00010c9c      e89f1bffff     call sym.imp.geteuid                    ; ../coreutils-8.31/lib/write-any-file.c:44
0x00010ca1      85c0           test eax, eax
0x00010ca3      c60547ba2000.  mov byte [obj.initialized.3064], 1      ; ../coreutils-8.31/lib/write-any-file.c:47 ; [0x21c6f1:1]=0
0x00010caa      0f94c0         sete al                                 ; ../coreutils-8.31/lib/write-any-file.c:44
0x00010cad      88053dba2000   mov byte [obj.can_write.3065], al       ; ../coreutils-8.31/lib/write-any-file.c:46 ; [0x21c6f0:1]=0
0x00010cb3      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/write-any-file.c:51
0x00010cb7      c3             ret
0x00010cb8      0f1f84000000.  nop dword [rax + rax]
;-- xmalloc:
0x00010cc0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00010cc1      4889fb         mov rbx, rdi
0x00010cc4      e8371dffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00010cc9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00010ccc      7505           jne 0x10cd3
0x00010cce      4885db         test rbx, rbx
0x00010cd1      7502           jne 0x10cd5
0x00010cd3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00010cd4      c3             ret
0x00010cd5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00010cda      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00010ce0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00010ce3      48f7e6         mul rsi
0x00010ce6      4889c7         mov rdi, rax
0x00010ce9      0f90c0         seto al
0x00010cec      4885ff         test rdi, rdi
0x00010cef      780a           js 0x10cfb
0x00010cf1      0fb6c0         movzx eax, al
0x00010cf4      4885c0         test rax, rax
0x00010cf7      7502           jne 0x10cfb
0x00010cf9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00010cfb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00010cff      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00010d04      6690           nop
0x00010d06      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00010d10      ebae           jmp sym.xmalloc
0x00010d12      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00010d16      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00010d20      4885f6         test rsi, rsi
0x00010d23      53             push rbx
0x00010d24      4889f3         mov rbx, rsi
0x00010d27      7505           jne 0x10d2e
0x00010d29      4885ff         test rdi, rdi
0x00010d2c      751a           jne 0x10d48
0x00010d2e      4889de         mov rsi, rbx
0x00010d31      e83a1dffff     call sym.imp.realloc
0x00010d36      4885c0         test rax, rax
0x00010d39      7505           jne 0x10d40
0x00010d3b      4885db         test rbx, rbx
0x00010d3e      7511           jne 0x10d51                             ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00010d40      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00010d41      c3             ret
0x00010d42      660f1f440000   nop word [rax + rax]
0x00010d48      e8331fffff     call sym..plt.got
0x00010d4d      31c0           xor eax, eax
0x00010d4f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00010d50      c3             ret
0x00010d51      e8ba010000     call sym.xalloc_die
0x00010d56      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00010d60      4889f0         mov rax, rsi
0x00010d63      48f7e2         mul rdx
0x00010d66      4889c6         mov rsi, rax
0x00010d69      0f90c0         seto al
0x00010d6c      4885f6         test rsi, rsi
0x00010d6f      780a           js 0x10d7b
0x00010d71      0fb6c0         movzx eax, al
0x00010d74      4885c0         test rax, rax
0x00010d77      7502           jne 0x10d7b
0x00010d79      eba5           jmp sym.xrealloc
0x00010d7b      4883ec08       sub rsp, 8
0x00010d7f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00010d84      6690           nop
0x00010d86      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00010d90      4885ff         test rdi, rdi
0x00010d93      4989d1         mov r9, rdx
0x00010d96      488b0e         mov rcx, qword [rsi]
0x00010d99      7435           je 0x10dd0
0x00010d9b      31d2           xor edx, edx
0x00010d9d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00010da7      49f7f1         div r9
0x00010daa      4839c8         cmp rax, rcx
0x00010dad      763c           jbe 0x10deb
0x00010daf      4889c8         mov rax, rcx
0x00010db2      48d1e8         shr rax, 1
0x00010db5      488d4c0801     lea rcx, [rax + rcx + 1]
0x00010dba      48890e         mov qword [rsi], rcx
0x00010dbd      490fafc9       imul rcx, r9
0x00010dc1      4889ce         mov rsi, rcx
0x00010dc4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00010dc9      0f1f80000000.  nop dword [rax]
0x00010dd0      4885c9         test rcx, rcx
0x00010dd3      7423           je 0x10df8
0x00010dd5      4889c8         mov rax, rcx
0x00010dd8      49f7e1         mul r9
0x00010ddb      0f90c2         seto dl
0x00010dde      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00010de1      0fb6d2         movzx edx, dl
0x00010de4      7805           js 0x10deb
0x00010de6      4885d2         test rdx, rdx
0x00010de9      74cf           je 0x10dba
0x00010deb      4883ec08       sub rsp, 8
0x00010def      e81c010000     call sym.xalloc_die
0x00010df4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00010df8      31d2           xor edx, edx
0x00010dfa      b880000000     mov eax, 0x80
0x00010dff      4531c0         xor r8d, r8d
0x00010e02      49f7f1         div r9
0x00010e05      4885c0         test rax, rax
0x00010e08      410f94c0       sete r8b
0x00010e0c      498d0c00       lea rcx, [r8 + rax]
0x00010e10      ebc3           jmp 0x10dd5
0x00010e12      0f1f4000       nop dword [rax]
0x00010e16      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00010e20      4885ff         test rdi, rdi
0x00010e23      488b06         mov rax, qword [rsi]
0x00010e26      7428           je 0x10e50
0x00010e28      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00010e32      4839d0         cmp rax, rdx
0x00010e35      772a           ja 0x10e61
0x00010e37      4889c2         mov rdx, rax
0x00010e3a      48d1ea         shr rdx, 1
0x00010e3d      488d440201     lea rax, [rdx + rax + 1]
0x00010e42      488906         mov qword [rsi], rax
0x00010e45      4889c6         mov rsi, rax
0x00010e48      e9d3feffff     jmp sym.xrealloc
0x00010e4d      0f1f00         nop dword [rax]
0x00010e50      4885c0         test rax, rax
0x00010e53      ba80000000     mov edx, 0x80
0x00010e58      480f44c2       cmove rax, rdx
0x00010e5c      4885c0         test rax, rax
0x00010e5f      79e1           jns 0x10e42
0x00010e61      4883ec08       sub rsp, 8
0x00010e65      e8a6000000     call sym.xalloc_die
0x00010e6a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00010e70      53             push rbx
0x00010e71      4889fb         mov rbx, rdi
0x00010e74      e847feffff     call sym.xmalloc
0x00010e79      4889da         mov rdx, rbx
0x00010e7c      31f6           xor esi, esi
0x00010e7e      4889c7         mov rdi, rax
0x00010e81      5b             pop rbx
0x00010e82      e9a919ffff     jmp sym.imp.memset
0x00010e87      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00010e90      4889f8         mov rax, rdi
0x00010e93      4883ec08       sub rsp, 8
0x00010e97      48f7e6         mul rsi
0x00010e9a      0f90c2         seto dl
0x00010e9d      4885c0         test rax, rax
0x00010ea0      7817           js 0x10eb9
0x00010ea2      0fb6d2         movzx edx, dl
0x00010ea5      4885d2         test rdx, rdx
0x00010ea8      750f           jne 0x10eb9
0x00010eaa      e8611affff     call sym.imp.calloc
0x00010eaf      4885c0         test rax, rax
0x00010eb2      7405           je 0x10eb9
0x00010eb4      4883c408       add rsp, 8
0x00010eb8      c3             ret
0x00010eb9      e852000000     call sym.xalloc_die
0x00010ebe      6690           nop
;-- xmemdup:
0x00010ec0      55             push rbp
0x00010ec1      53             push rbx
0x00010ec2      4889fd         mov rbp, rdi
0x00010ec5      4889f7         mov rdi, rsi
0x00010ec8      4889f3         mov rbx, rsi
0x00010ecb      4883ec08       sub rsp, 8
0x00010ecf      e8ecfdffff     call sym.xmalloc
0x00010ed4      4883c408       add rsp, 8
0x00010ed8      4889da         mov rdx, rbx
0x00010edb      4889ee         mov rsi, rbp
0x00010ede      5b             pop rbx
0x00010edf      5d             pop rbp
0x00010ee0      4889c7         mov rdi, rax
0x00010ee3      e9b81affff     jmp sym.imp.memcpy
0x00010ee8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00010ef0      53             push rbx
0x00010ef1      4889fb         mov rbx, rdi
0x00010ef4      e85718ffff     call sym.imp.strlen
0x00010ef9      4889df         mov rdi, rbx
0x00010efc      488d7001       lea rsi, [rax + 1]
0x00010f00      5b             pop rbx
0x00010f01      ebbd           jmp sym.xmemdup
0x00010f03      662e0f1f8400.  nop word cs:[rax + rax]
0x00010f0d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00010f10      488d35586400.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x1736f ; "memory exhausted"
0x00010f17      4883ec08       sub rsp, 8
0x00010f1b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00010f20      31ff           xor edi, edi
0x00010f22      e80918ffff     call sym.imp.dcgettext
0x00010f27      8b3dfbb02000   mov edi, dword [obj.exit_failure]       ; [0x21c028:4]=1
0x00010f2d      488d15136500.  lea rdx, [0x00017447]                   ; "%s"
0x00010f34      4889c1         mov rcx, rax
0x00010f37      31f6           xor esi, esi
0x00010f39      31c0           xor eax, eax
0x00010f3b      e8d01bffff     call sym.imp.error
0x00010f40      e84b16ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00010f45      662e0f1f8400.  nop word cs:[rax + rax]
0x00010f4f      90             nop
;-- xfts_open:
0x00010f50      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xfts.c:35
0x00010f54      81ce00020000   or esi, 0x200                           ; ../coreutils-8.31/lib/xfts.c:36
0x00010f5a      e8c1170000     call sym.rpl_fts_open
0x00010f5f      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xfts.c:37
0x00010f62      740c           je 0x10f70
0x00010f64      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/xfts.c:46
0x00010f68      c3             ret
0x00010f69      0f1f80000000.  nop dword [rax]
0x00010f70      e82b16ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xfts.c:41
0x00010f75      833816         cmp dword [rax], 0x16
0x00010f78      7406           je 0x10f80
0x00010f7a      e891ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xfts.c:42
0x00010f7f      90             nop
0x00010f80      488d0d296400.  lea rcx, obj.__PRETTY_FUNCTION__.3434   ; ../coreutils-8.31/lib/xfts.c:41 ; 0x173b0 ; "xfts_open"
0x00010f87      488d35f26300.  lea rsi, str..._coreutils_8.31_lib_xfts.c ; 0x17380 ; "../coreutils-8.31/lib/xfts.c"
0x00010f8e      488d3d086400.  lea rdi, str.errno____EINVAL            ; 0x1739d ; "errno != EINVAL"
0x00010f95      ba29000000     mov edx, 0x29                           ; ')'
0x00010f9a      e88118ffff     call sym.imp.__assert_fail
0x00010f9f      90             nop
;-- cycle_warning_required:
0x00010fa0      8b5748         mov edx, dword [rdi + 0x48]             ; ../coreutils-8.31/lib/xfts.c:57
0x00010fa3      b801000000     mov eax, 1
0x00010fa8      83e211         and edx, 0x11
0x00010fab      83fa10         cmp edx, 0x10                           ; ../coreutils-8.31/lib/xfts.c:63
0x00010fae      7407           je 0x10fb7
0x00010fb0      31c0           xor eax, eax
0x00010fb2      83fa11         cmp edx, 0x11
0x00010fb5      7409           je 0x10fc0
0x00010fb7      f3c3           ret                                     ; ../coreutils-8.31/lib/xfts.c:65
0x00010fb9      0f1f80000000.  nop dword [rax]
0x00010fc0      48837e5800     cmp qword [rsi + 0x58], 0               ; ../coreutils-8.31/lib/xfts.c:64
0x00010fc5      0f95c0         setne al
0x00010fc8      c3             ret                                     ; ../coreutils-8.31/lib/xfts.c:65
0x00010fc9      0f1f80000000.  nop dword [rax]
;-- yesno:
0x00010fd0      53             push rbx                                ; ../coreutils-8.31/lib/yesno.c:33
0x00010fd1      ba0a000000     mov edx, 0xa
0x00010fd6      31db           xor ebx, ebx
0x00010fd8      4883ec20       sub rsp, 0x20
0x00010fdc      488b0dedb020.  mov rcx, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x21c0d0:8]=0
0x00010fe3      488d742410     lea rsi, [rsp + 0x10]
0x00010fe8      488d7c2408     lea rdi, [rsp + 8]                      ; stdio.h:-219
0x00010fed      48c744240800.  mov qword [rsp + 8], 0
0x00010ff6      64488b042528.  mov rax, qword fs:[0x28]
0x00010fff      4889442418     mov qword [rsp + 0x18], rax
0x00011004      31c0           xor eax, eax
0x00011006      48c744241000.  mov qword [rsp + 0x10], 0               ; stdio.h:-343
0x0001100f      e80c19ffff     call sym.imp.__getdelim
0x00011014      4885c0         test rax, rax
0x00011017      7e19           jle 0x11032
0x00011019      488b7c2408     mov rdi, qword [rsp + 8]
0x0001101e      488d4407ff     lea rax, [rdi + rax - 1]
0x00011023      80380a         cmp byte [rax], 0xa
0x00011026      7430           je 0x11058
0x00011028      e83319ffff     call sym.imp.rpmatch
0x0001102d      85c0           test eax, eax
0x0001102f      0f9fc3         setg bl
0x00011032      488b7c2408     mov rdi, qword [rsp + 8]
0x00011037      e8441cffff     call sym..plt.got
0x0001103c      488b542418     mov rdx, qword [rsp + 0x18]
0x00011041      644833142528.  xor rdx, qword fs:[0x28]
0x0001104a      89d8           mov eax, ebx                            ; stdio.h:-336
0x0001104c      7514           jne 0x11062
0x0001104e      4883c420       add rsp, 0x20
0x00011052      5b             pop rbx
0x00011053      c3             ret
0x00011054      0f1f4000       nop dword [rax]                         ; stdio.h:-321
0x00011058      c60000         mov byte [rax], 0
0x0001105b      488b7c2408     mov rdi, qword [rsp + 8]
0x00011060      ebc6           jmp 0x11028
0x00011062      e81917ffff     call sym.imp.__stack_chk_fail
0x00011067      660f1f840000.  nop word [rax + rax]
;-- rpl_fflush:
0x00011070      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00011073      53             push rbx
0x00011074      4889fb         mov rbx, rdi
0x00011077      7411           je 0x1108a                              ; ../coreutils-8.31/lib/fflush.c:150
0x00011079      e8d219ffff     call sym.imp.__freading
0x0001107e      85c0           test eax, eax
0x00011080      7408           je 0x1108a
0x00011082      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00011088      750e           jne 0x11098
0x0001108a      4889df         mov rdi, rbx
0x0001108d      5b             pop rbx
0x0001108e      e97d19ffff     jmp sym.imp.fflush
0x00011093      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fflush.c:32
0x00011098      4889df         mov rdi, rbx
0x0001109b      ba01000000     mov edx, 1
0x000110a0      31f6           xor esi, esi
0x000110a2      e839000000     call sym.rpl_fseeko
0x000110a7      4889df         mov rdi, rbx
0x000110aa      5b             pop rbx
0x000110ab      e96019ffff     jmp sym.imp.fflush
;-- freadahead:
0x000110b0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/freadahead.c:35
0x000110b2      488b4f20       mov rcx, qword [rdi + 0x20]             ; ../coreutils-8.31/lib/freadahead.c:38
0x000110b6      48394f28       cmp qword [rdi + 0x28], rcx
0x000110ba      771b           ja 0x110d7
0x000110bc      488b4710       mov rax, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/freadahead.c:40
0x000110c0      482b4708       sub rax, qword [rdi + 8]
0x000110c4      f70700010000   test dword [rdi], 0x100                 ; ../coreutils-8.31/lib/freadahead.c:41
0x000110ca      740b           je 0x110d7
0x000110cc      488b5758       mov rdx, qword [rdi + 0x58]
0x000110d0      482b5748       sub rdx, qword [rdi + 0x48]
0x000110d4      4801d0         add rax, rdx
0x000110d7      f3c3           ret                                     ; ../coreutils-8.31/lib/freadahead.c:103
0x000110d9      0f1f80000000.  nop dword [rax]
;-- rpl_fseeko:
0x000110e0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x000110e4      48394710       cmp qword [rdi + 0x10], rax
0x000110e8      7406           je 0x110f0                              ; ../coreutils-8.31/lib/fseeko.c:32
0x000110ea      e9511affff     jmp sym.imp.fseeko
0x000110ef      90             nop
0x000110f0      488b4720       mov rax, qword [rdi + 0x20]
0x000110f4      48394728       cmp qword [rdi + 0x28], rax
0x000110f8      75f0           jne 0x110ea                             ; ../coreutils-8.31/lib/fseeko.c:33
0x000110fa      48837f4800     cmp qword [rdi + 0x48], 0
0x000110ff      75e9           jne 0x110ea                             ; ../coreutils-8.31/lib/fseeko.c:21
0x00011101      4154           push r12
0x00011103      55             push rbp
0x00011104      4189d4         mov r12d, edx
0x00011107      53             push rbx
0x00011108      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0001110b      4889fb         mov rbx, rdi
0x0001110e      e8ad18ffff     call sym.imp.fileno
0x00011113      4489e2         mov edx, r12d
0x00011116      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00011119      89c7           mov edi, eax
0x0001111b      e8e016ffff     call sym.imp.lseek
0x00011120      4883f8ff       cmp rax, 0xffffffffffffffff
0x00011124      740c           je 0x11132
0x00011126      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00011129      488983900000.  mov qword [rbx + 0x90], rax
0x00011130      31c0           xor eax, eax
0x00011132      5b             pop rbx
0x00011133      5d             pop rbp
0x00011134      415c           pop r12
0x00011136      c3             ret
0x00011137      660f1f840000.  nop word [rax + rax]
;-- AD_compare:
0x00011140      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts-cycle.c:33
0x00011142      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/fts-cycle.c:37
0x00011146      48395708       cmp qword [rdi + 8], rdx
0x0001114a      7404           je 0x11150
0x0001114c      f3c3           ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:38
0x0001114e      6690           nop
0x00011150      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/fts-cycle.c:37
0x00011153      483907         cmp qword [rdi], rax
0x00011156      0f94c0         sete al
0x00011159      c3             ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:38
0x0001115a      660f1f440000   nop word [rax + rax]
;-- AD_hash:
0x00011160      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fts-cycle.c:42
0x00011164      31d2           xor edx, edx
0x00011166      48f7f6         div rsi
0x00011169      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts-cycle.c:45
0x0001116c      c3             ret
0x0001116d      0f1f00         nop dword [rax]
;-- dev_type_hash:
0x00011170      488b07         mov rax, qword [rdi]                    ; ../coreutils-8.31/lib/fts.c:690
0x00011173      31d2           xor edx, edx
0x00011175      48f7f6         div rsi
0x00011178      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts.c:694
0x0001117b      c3             ret
0x0001117c      0f1f4000       nop dword [rax]
;-- dev_type_compare:
0x00011180      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/fts.c:698
0x00011183      483907         cmp qword [rdi], rax
0x00011186      0f94c0         sete al
0x00011189      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:702
0x0001118a      660f1f440000   nop word [rax + rax]
;-- fts_compare_ino:
0x00011190      488b17         mov rdx, qword [rdi]                    ; ../coreutils-8.31/lib/fts.c:1226
0x00011193      488b06         mov rax, qword [rsi]
0x00011196      488b80800000.  mov rax, qword [rax + 0x80]             ; ../coreutils-8.31/lib/fts.c:1228
0x0001119d      483982800000.  cmp qword [rdx + 0x80], rax
0x000111a4      720a           jb 0x111b0
0x000111a6      0f97c0         seta al
0x000111a9      0fb6c0         movzx eax, al
0x000111ac      c3             ret
0x000111ad      0f1f00         nop dword [rax]
0x000111b0      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000111b5      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:1229
0x000111b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_stat:
0x000111c0      4154           push r12                                ; ../coreutils-8.31/lib/fts.c:1800
0x000111c2      55             push rbp
0x000111c3      4889f5         mov rbp, rsi
0x000111c6      53             push rbx
0x000111c7      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:1803
0x000111cc      488d5e78       lea rbx, [rsi + 0x78]                   ; ../coreutils-8.31/lib/fts.c:1801
0x000111d0      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/fts.c:1800
0x000111d3      8b4748         mov eax, dword [rdi + 0x48]
0x000111d6      488b7630       mov rsi, qword [rsi + 0x30]
0x000111da      7564           jne 0x11240                             ; ../coreutils-8.31/lib/fts.c:1803
0x000111dc      a801           test al, 1
0x000111de      7460           je 0x11240
0x000111e0      4889da         mov rdx, rbx                            ; stat.h:451   return __xstat (_STAT_VER, __path, __statbuf);
0x000111e3      bf01000000     mov edi, 1
0x000111e8      e8f317ffff     call sym.imp.__xstat
0x000111ed      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1812
0x000111ef      747a           je 0x1126b
0x000111f1      e8aa13ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1813
0x000111f6      4989c4         mov r12, rax
0x000111f9      8b00           mov eax, dword [rax]
0x000111fb      83f802         cmp eax, 2
0x000111fe      0f840c010000   je 0x11310
0x00011204      488d7b08       lea rdi, [rbx + 8]                      ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x00011208      894540         mov dword [rbp + 0x40], eax             ; ../coreutils-8.31/lib/fts.c:1823
0x0001120b      48c745780000.  mov qword [rbp + 0x78], 0               ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x00011213      48c783880000.  mov qword [rbx + 0x88], 0
0x0001121e      31c0           xor eax, eax
0x00011220      4883e7f8       and rdi, 0xfffffffffffffff8
0x00011224      4829fb         sub rbx, rdi
0x00011227      8d8b90000000   lea ecx, [rbx + 0x90]
0x0001122d      c1e903         shr ecx, 3
0x00011230      f348ab         rep stosq qword [rdi], rax
0x00011233      b80a000000     mov eax, 0xa                            ; ../coreutils-8.31/lib/fts.c:1825
0x00011238      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1846
0x00011239      5d             pop rbp
0x0001123a      415c           pop r12
0x0001123c      c3             ret
0x0001123d      0f1f00         nop dword [rax]
0x00011240      a802           test al, 2                              ; ../coreutils-8.31/lib/fts.c:1811
0x00011242      759c           jne 0x111e0
0x00011244      84d2           test dl, dl
0x00011246      7598           jne 0x111e0
0x00011248      4889f2         mov rdx, rsi                            ; stat.h:473   return __fxstatat (_STAT_VER, __fd, __filename, __statbuf, __flag);
0x0001124b      418b74242c     mov esi, dword [r12 + 0x2c]
0x00011250      41b800010000   mov r8d, 0x100
0x00011256      4889d9         mov rcx, rbx
0x00011259      bf01000000     mov edi, 1
0x0001125e      e85d15ffff     call sym.imp.__fxstatat
0x00011263      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1821
0x00011265      0f8595000000   jne 0x11300
0x0001126b      8b8590000000   mov eax, dword [rbp + 0x90]             ; ../coreutils-8.31/lib/fts.c:1828
0x00011271      2500f00000     and eax, 0xf000
0x00011276      3d00400000     cmp eax, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x0001127b      7423           je 0x112a0
0x0001127d      3d00a00000     cmp eax, 0xa000                         ; ../coreutils-8.31/lib/fts.c:1841
0x00011282      0f84d0000000   je 0x11358
0x00011288      3d00800000     cmp eax, 0x8000                         ; ../coreutils-8.31/lib/fts.c:1844
0x0001128d      0f94c0         sete al
0x00011290      0fb6c0         movzx eax, al
0x00011293      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1846
0x00011294      8d448003       lea eax, [rax + rax*4 + 3]              ; ../coreutils-8.31/lib/fts.c:1844
0x00011298      5d             pop rbp                                 ; ../coreutils-8.31/lib/fts.c:1846
0x00011299      415c           pop r12
0x0001129b      c3             ret
0x0001129c      0f1f4000       nop dword [rax]
0x000112a0      488b85880000.  mov rax, qword [rbp + 0x88]             ; ../coreutils-8.31/lib/fts.c:1830
0x000112a7      4883f801       cmp rax, 1                              ; ../coreutils-8.31/lib/fts.c:1833
0x000112ab      0f867f000000   jbe 0x11330
0x000112b1      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:1831
0x000112b6      7e78           jle 0x11330
0x000112b8      41f644244820   test byte [r12 + 0x48], 0x20
0x000112be      488d50fe       lea rdx, [rax - 2]
0x000112c2      480f44c2       cmove rax, rdx
0x000112c6      80bd08010000.  cmp byte [rbp + 0x108], 0x2e            ; ../coreutils-8.31/lib/fts.c:1834
0x000112cd      48894568       mov qword [rbp + 0x68], rax             ; ../coreutils-8.31/lib/fts.c:1830
0x000112d1      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:1839
0x000112d6      0f855cffffff   jne 0x11238                             ; ../coreutils-8.31/lib/fts.c:1834
0x000112dc      80bd09010000.  cmp byte [rbp + 0x109], 0
0x000112e3      0f857f000000   jne 0x11368
0x000112e9      48837d5801     cmp qword [rbp + 0x58], 1               ; ../coreutils-8.31/lib/fts.c:1839
0x000112ee      19c0           sbb eax, eax
0x000112f0      83e0fc         and eax, 0xfffffffc                     ; 4294967292
0x000112f3      83c005         add eax, 5
0x000112f6      e93dffffff     jmp 0x11238
0x000112fb      0f1f440000     nop dword [rax + rax]
0x00011300      e89b12ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1823
0x00011305      8b00           mov eax, dword [rax]
0x00011307      e9f8feffff     jmp 0x11204
0x0001130c      0f1f4000       nop dword [rax]
0x00011310      488b7530       mov rsi, qword [rbp + 0x30]             ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00011314      4889da         mov rdx, rbx
0x00011317      bf01000000     mov edi, 1
0x0001131c      e83f14ffff     call sym.imp.__lxstat
0x00011321      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1814
0x00011323      741b           je 0x11340
0x00011325      418b0424       mov eax, dword [r12]
0x00011329      e9d6feffff     jmp 0x11204
0x0001132e      6690           nop
0x00011330      48c7c0ffffff.  mov rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/fts.c:1833
0x00011337      eb8d           jmp 0x112c6
0x00011339      0f1f80000000.  nop dword [rax]
0x00011340      41c704240000.  mov dword [r12], 0                      ; ../coreutils-8.31/lib/fts.c:1815
0x00011348      b80d000000     mov eax, 0xd                            ; ../coreutils-8.31/lib/fts.c:1816
0x0001134d      e9e6feffff     jmp 0x11238
0x00011352      660f1f440000   nop word [rax + rax]
0x00011358      b80c000000     mov eax, 0xc                            ; ../coreutils-8.31/lib/fts.c:1842
0x0001135d      e9d6feffff     jmp 0x11238
0x00011362      660f1f440000   nop word [rax + rax]
0x00011368      8b9508010000   mov edx, dword [rbp + 0x108]            ; ../coreutils-8.31/lib/fts.c:1834
0x0001136e      81e200ffff00   and edx, 0xffff00
0x00011374      81fa002e0000   cmp edx, 0x2e00                         ; "D$p\xc6D$P"
0x0001137a      0f85b8feffff   jne 0x11238
0x00011380      e964ffffff     jmp 0x112e9
0x00011385      90             nop
0x00011386      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_sort:
0x00011390      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1864
0x00011392      4154           push r12
0x00011394      4989d4         mov r12, rdx
0x00011397      55             push rbp
0x00011398      53             push rbx
0x00011399      4889fd         mov rbp, rdi
0x0001139c      4889f3         mov rbx, rsi
0x0001139f      4883ec08       sub rsp, 8
0x000113a3      48395538       cmp qword [rbp + 0x38], rdx             ; ../coreutils-8.31/lib/fts.c:1888
0x000113a7      4c8b6f40       mov r13, qword [rdi + 0x40]             ; ../coreutils-8.31/lib/fts.c:1875
0x000113ab      488b7f10       mov rdi, qword [rdi + 0x10]
0x000113af      7334           jae 0x113e5                             ; ../coreutils-8.31/lib/fts.c:1888
0x000113b1      488d7228       lea rsi, [rdx + 0x28]                   ; ../coreutils-8.31/lib/fts.c:1891
0x000113b5      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; ../coreutils-8.31/lib/fts.c:1892 ; 2305843009213693951
0x000113bf      4839c6         cmp rsi, rax
0x000113c2      48897538       mov qword [rbp + 0x38], rsi             ; ../coreutils-8.31/lib/fts.c:1891
0x000113c6      0f8798000000   ja 0x11464                              ; ../coreutils-8.31/lib/fts.c:1892
0x000113cc      48c1e603       shl rsi, 3                              ; ../coreutils-8.31/lib/fts.c:1893
0x000113d0      e89b16ffff     call sym.imp.realloc
0x000113d5      4885c0         test rax, rax
0x000113d8      4889c7         mov rdi, rax
0x000113db      0f847f000000   je 0x11460
0x000113e1      48894510       mov qword [rbp + 0x10], rax             ; ../coreutils-8.31/lib/fts.c:1900
0x000113e5      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/fts.c:1902
0x000113e8      7417           je 0x11401
0x000113ea      4889fa         mov rdx, rdi
0x000113ed      0f1f00         nop dword [rax]
0x000113f0      4883c208       add rdx, 8                              ; ../coreutils-8.31/lib/fts.c:1903
0x000113f4      48895af8       mov qword [rdx - 8], rbx
0x000113f8      488b5b10       mov rbx, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/fts.c:1902
0x000113fc      4885db         test rbx, rbx
0x000113ff      75ef           jne 0x113f0
0x00011401      4c89e9         mov rcx, r13                            ; ../coreutils-8.31/lib/fts.c:1904
0x00011404      ba08000000     mov edx, 8
0x00011409      4c89e6         mov rsi, r12
0x0001140c      e81f12ffff     call sym.imp.qsort
0x00011411      4c8b4510       mov r8, qword [rbp + 0x10]              ; ../coreutils-8.31/lib/fts.c:1905
0x00011415      4c89e1         mov rcx, r12
0x00011418      4883e901       sub rcx, 1
0x0001141c      498b00         mov rax, qword [r8]
0x0001141f      746f           je 0x11490
0x00011421      4889c7         mov rdi, rax
0x00011424      4c89c2         mov rdx, r8
0x00011427      eb0a           jmp 0x11433
0x00011429      0f1f80000000.  nop dword [rax]
0x00011430      488b3a         mov rdi, qword [rdx]
0x00011433      488b7208       mov rsi, qword [rdx + 8]                ; ../coreutils-8.31/lib/fts.c:1906
0x00011437      4883c208       add rdx, 8                              ; ../coreutils-8.31/lib/fts.c:1905
0x0001143b      4883e901       sub rcx, 1
0x0001143f      48897710       mov qword [rdi + 0x10], rsi             ; ../coreutils-8.31/lib/fts.c:1906
0x00011443      75eb           jne 0x11430                             ; ../coreutils-8.31/lib/fts.c:1905
0x00011445      4b8b54e0f8     mov rdx, qword [r8 + r12*8 - 8]
0x0001144a      48c742100000.  mov qword [rdx + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1907
0x00011452      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1909
0x00011456      5b             pop rbx
0x00011457      5d             pop rbp
0x00011458      415c           pop r12
0x0001145a      415d           pop r13
0x0001145c      c3             ret
0x0001145d      0f1f00         nop dword [rax]
0x00011460      488b7d10       mov rdi, qword [rbp + 0x10]
0x00011464      e81718ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:1895
0x00011469      48c745100000.  mov qword [rbp + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1896
0x00011471      48c745380000.  mov qword [rbp + 0x38], 0               ; ../coreutils-8.31/lib/fts.c:1897
0x00011479      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1909
0x0001147d      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fts.c:1898
0x00011480      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1909
0x00011481      5d             pop rbp
0x00011482      415c           pop r12
0x00011484      415d           pop r13
0x00011486      c3             ret
0x00011487      660f1f840000.  nop word [rax + rax]
0x00011490      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/fts.c:1905
0x00011493      ebb5           jmp 0x1144a
0x00011495      90             nop
0x00011496      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_alloc:
0x000114a0      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1914
0x000114a2      4154           push r12
0x000114a4      4989fc         mov r12, rdi
0x000114a7      55             push rbp
0x000114a8      488dba100100.  lea rdi, [rdx + 0x110]                  ; ../coreutils-8.31/lib/fts.c:1922
0x000114af      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:1914
0x000114b0      4989f5         mov r13, rsi
0x000114b3      4889d5         mov rbp, rdx
0x000114b6      4883ec08       sub rsp, 8
0x000114ba      4883e7f8       and rdi, 0xfffffffffffffff8             ; ../coreutils-8.31/lib/fts.c:1922
0x000114be      e83d15ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/fts.c:1923
0x000114c3      4885c0         test rax, rax
0x000114c6      4889c3         mov rbx, rax
0x000114c9      7451           je 0x1151c
0x000114cb      488db8080100.  lea rdi, [rax + 0x108]                  ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000114d2      4889ea         mov rdx, rbp
0x000114d5      4c89ee         mov rsi, r13
0x000114d8      e8c314ffff     call sym.imp.memcpy
0x000114dd      498b442420     mov rax, qword [r12 + 0x20]             ; ../coreutils-8.31/lib/fts.c:1932
0x000114e2      c6842b080100.  mov byte [rbx + rbp + 0x108], 0         ; ../coreutils-8.31/lib/fts.c:1928
0x000114ea      48896b60       mov qword [rbx + 0x60], rbp             ; ../coreutils-8.31/lib/fts.c:1930
0x000114ee      4c896350       mov qword [rbx + 0x50], r12             ; ../coreutils-8.31/lib/fts.c:1931
0x000114f2      c74340000000.  mov dword [rbx + 0x40], 0               ; ../coreutils-8.31/lib/fts.c:1933
0x000114f9      48c743180000.  mov qword [rbx + 0x18], 0               ; ../coreutils-8.31/lib/fts.c:1934
0x00011501      48894338       mov qword [rbx + 0x38], rax             ; ../coreutils-8.31/lib/fts.c:1932
0x00011505      c74372000003.  mov dword [rbx + 0x72], 0x30000         ; ../coreutils-8.31/lib/fts.c:1935 ; [0x30000:4]=-1
0x0001150c      48c743200000.  mov qword [rbx + 0x20], 0               ; ../coreutils-8.31/lib/fts.c:1937
0x00011514      48c743280000.  mov qword [rbx + 0x28], 0               ; ../coreutils-8.31/lib/fts.c:1938
0x0001151c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1940
0x00011520      4889d8         mov rax, rbx
0x00011523      5b             pop rbx
0x00011524      5d             pop rbp
0x00011525      415c           pop r12
0x00011527      415d           pop r13
0x00011529      c3             ret
0x0001152a      660f1f440000   nop word [rax + rax]
;-- fts_lfree:
0x00011530      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:1945
0x00011533      743b           je 0x11570
0x00011535      55             push rbp
0x00011536      53             push rbx
0x00011537      4889fb         mov rbx, rdi
0x0001153a      4883ec08       sub rsp, 8
0x0001153e      6690           nop
0x00011540      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/fts.c:1951
0x00011544      488b6b10       mov rbp, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/fts.c:1950
0x00011548      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:1951
0x0001154b      7405           je 0x11552
0x0001154d      e84e13ffff     call sym.imp.closedir                   ; ../coreutils-8.31/lib/fts.c:1952
0x00011552      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:1953
0x00011555      4889eb         mov rbx, rbp
0x00011558      e82317ffff     call sym..plt.got
0x0001155d      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/fts.c:1949
0x00011560      75de           jne 0x11540
0x00011562      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1955
0x00011566      5b             pop rbx
0x00011567      5d             pop rbp
0x00011568      c3             ret
0x00011569      0f1f80000000.  nop dword [rax]
0x00011570      f3c3           ret
0x00011572      0f1f4000       nop dword [rax]
0x00011576      662e0f1f8400.  nop word cs:[rax + rax]
;-- fd_ring_clear:
0x00011580      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:277
0x00011581      4889fb         mov rbx, rdi
0x00011584      eb16           jmp 0x1159c                             ; ../coreutils-8.31/lib/fts.c:278
0x00011586      662e0f1f8400.  nop word cs:[rax + rax]
0x00011590      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:280
0x00011593      e888270000     call sym.i_ring_pop
0x00011598      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:281
0x0001159a      7914           jns 0x115b0
0x0001159c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:278
0x0001159f      e82c270000     call sym.i_ring_empty
0x000115a4      84c0           test al, al
0x000115a6      74e8           je 0x11590
0x000115a8      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:284
0x000115a9      c3             ret
0x000115aa      660f1f440000   nop word [rax + rax]
0x000115b0      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fts.c:282
0x000115b2      e8b912ffff     call sym.imp.close
0x000115b7      ebe3           jmp 0x1159c
0x000115b9      0f1f80000000.  nop dword [rax]
;-- filesystem_type:
0x000115c0      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:710
0x000115c2      4154           push r12
0x000115c4      55             push rbp
0x000115c5      53             push rbx
0x000115c6      4881ec980000.  sub rsp, 0x98
0x000115cd      488b5f50       mov rbx, qword [rdi + 0x50]             ; ../coreutils-8.31/lib/fts.c:711
0x000115d1      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/fts.c:710
0x000115da      488984248800.  mov qword [rsp + 0x88], rax
0x000115e2      31c0           xor eax, eax
0x000115e4      f6434902       test byte [rbx + 0x49], 2               ; ../coreutils-8.31/lib/fts.c:718
0x000115e8      7468           je 0x11652
0x000115ea      4c8b6350       mov r12, qword [rbx + 0x50]             ; ../coreutils-8.31/lib/fts.c:712
0x000115ee      4889fd         mov rbp, rdi
0x000115f1      4189f5         mov r13d, esi
0x000115f4      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/fts.c:721
0x000115f7      7427           je 0x11620
0x000115f9      488b4578       mov rax, qword [rbp + 0x78]             ; ../coreutils-8.31/lib/fts.c:728
0x000115fd      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/fts.c:729
0x00011600      4c89e7         mov rdi, r12
0x00011603      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/fts.c:728
0x00011607      e874a7ffff     call sym.hash_lookup                    ; ../coreutils-8.31/lib/fts.c:729
0x0001160c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:730
0x0001160f      743c           je 0x1164d
0x00011611      488b5808       mov rbx, qword [rax + 8]                ; ../coreutils-8.31/lib/fts.c:731
0x00011615      eb3d           jmp 0x11654
0x00011617      660f1f840000.  nop word [rax + rax]
0x00011620      4c8b05a1a920.  mov r8, qword [reloc.free]              ; ../coreutils-8.31/lib/fts.c:723 ; [0x21bfc8:8]=0
0x00011627      488d0d52fbff.  lea rcx, sym.dev_type_compare           ; 0x11180 ; "H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x0001162e      488d153bfbff.  lea rdx, sym.dev_type_hash              ; 0x11170 ; "H\x8b\a1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f@"
0x00011635      31f6           xor esi, esi
0x00011637      bf0d000000     mov edi, 0xd
0x0001163c      e8afa9ffff     call sym.hash_initialize
0x00011641      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:725
0x00011644      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/fts.c:723
0x00011647      48894350       mov qword [rbx + 0x50], rax
0x0001164b      75ac           jne 0x115f9                             ; ../coreutils-8.31/lib/fts.c:725
0x0001164d      4585ed         test r13d, r13d                         ; ../coreutils-8.31/lib/fts.c:735
0x00011650      792e           jns 0x11680
0x00011652      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:719
0x00011654      488b94248800.  mov rdx, qword [rsp + 0x88]             ; ../coreutils-8.31/lib/fts.c:755
0x0001165c      644833142528.  xor rdx, qword fs:[0x28]
0x00011665      4889d8         mov rax, rbx
0x00011668      7578           jne 0x116e2
0x0001166a      4881c4980000.  add rsp, 0x98
0x00011671      5b             pop rbx
0x00011672      5d             pop rbp
0x00011673      415c           pop r12
0x00011675      415d           pop r13
0x00011677      c3             ret
0x00011678      0f1f84000000.  nop dword [rax + rax]
0x00011680      488d742410     lea rsi, [rsp + 0x10]                   ; ../coreutils-8.31/lib/fts.c:735
0x00011685      4489ef         mov edi, r13d
0x00011688      e82315ffff     call sym.imp.fstatfs
0x0001168d      85c0           test eax, eax
0x0001168f      75c1           jne 0x11652
0x00011691      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/fts.c:738
0x00011694      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00011699      74b9           je 0x11654
0x0001169b      bf10000000     mov edi, 0x10                           ; ../coreutils-8.31/lib/fts.c:740
0x000116a0      e85b13ffff     call sym.imp.malloc
0x000116a5      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:741
0x000116a8      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/fts.c:740
0x000116ab      74a7           je 0x11654                              ; ../coreutils-8.31/lib/fts.c:741
0x000116ad      488b4578       mov rax, qword [rbp + 0x78]             ; ../coreutils-8.31/lib/fts.c:743
0x000116b1      49895d08       mov qword [r13 + 8], rbx                ; ../coreutils-8.31/lib/fts.c:744
0x000116b5      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/fts.c:746
0x000116b8      4c89e7         mov rdi, r12
0x000116bb      49894500       mov qword [r13], rax                    ; ../coreutils-8.31/lib/fts.c:743
0x000116bf      e82cb1ffff     call sym.hash_insert                    ; ../coreutils-8.31/lib/fts.c:746
0x000116c4      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:747
0x000116c7      740f           je 0x116d8
0x000116c9      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/fts.c:748
0x000116cc      7519           jne 0x116e7
0x000116ce      488b5c2410     mov rbx, qword [rsp + 0x10]
0x000116d3      e97cffffff     jmp 0x11654                             ; ../coreutils-8.31/lib/fts.c:754
0x000116d8      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/lib/fts.c:750
0x000116db      e8a015ffff     call sym..plt.got
0x000116e0      ebec           jmp 0x116ce
0x000116e2      e89910ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/fts.c:755
0x000116e7      e8a40effff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:748
0x000116ec      0f1f4000       nop dword [rax]
;-- leaf_optimization:
0x000116f0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/fts.c:793
0x000116f4      e8c7feffff     call sym.filesystem_type                ; ../coreutils-8.31/lib/fts.c:794
0x000116f9      483d73496552   cmp rax, 0x52654973
0x000116ff      744f           je 0x11750
0x00011701      7e2d           jle 0x11730
0x00011703      483d42534658   cmp rax, 0x58465342
0x00011709      7445           je 0x11750
0x0001170b      ba424d53ff     mov edx, 0xff534d42
0x00011710      4839d0         cmp rax, rdx
0x00011713      7430           je 0x11745
0x00011715      483d4f414653   cmp rax, 0x5346414f
0x0001171b      7428           je 0x11745
0x0001171d      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:825
0x00011722      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x00011726      c3             ret
0x00011727      660f1f840000.  nop word [rax + rax]
0x00011730      483d69690000   cmp rax, 0x6969                         ; ../coreutils-8.31/lib/fts.c:794 ; "1\xc0\xe8@\xc1\xff\xff\xe9\xdb\xf2\xff\xff\x0f\x1f"
0x00011736      740d           je 0x11745
0x00011738      483da09f0000   cmp rax, 0x9fa0
0x0001173e      7405           je 0x11745
0x00011740      4885c0         test rax, rax
0x00011743      75d8           jne 0x1171d
0x00011745      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts.c:822
0x00011747      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x0001174b      c3             ret
0x0001174c      0f1f4000       nop dword [rax]
0x00011750      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/fts.c:800
0x00011755      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x00011759      c3             ret
0x0001175a      660f1f440000   nop word [rax + rax]
;-- cwd_advance_fd:
0x00011760      55             push rbp                                ; ../coreutils-8.31/lib/fts.c:306
0x00011761      53             push rbx
0x00011762      89f5           mov ebp, esi
0x00011764      4889fb         mov rbx, rdi
0x00011767      4883ec08       sub rsp, 8
0x0001176b      8b772c         mov esi, dword [rdi + 0x2c]             ; ../coreutils-8.31/lib/fts.c:307
0x0001176e      39ee           cmp esi, ebp                            ; ../coreutils-8.31/lib/fts.c:308
0x00011770      7505           jne 0x11777
0x00011772      83fe9c         cmp esi, 0xffffff9c
0x00011775      754a           jne 0x117c1
0x00011777      84d2           test dl, dl                             ; ../coreutils-8.31/lib/fts.c:310
0x00011779      7515           jne 0x11790
0x0001177b      f6434804       test byte [rbx + 0x48], 4               ; ../coreutils-8.31/lib/fts.c:321
0x0001177f      7504           jne 0x11785
0x00011781      85f6           test esi, esi
0x00011783      792b           jns 0x117b0
0x00011785      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x00011788      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x0001178c      5b             pop rbx
0x0001178d      5d             pop rbp
0x0001178e      c3             ret
0x0001178f      90             nop
0x00011790      488d7b60       lea rdi, [rbx + 0x60]                   ; ../coreutils-8.31/lib/fts.c:314
0x00011794      e847250000     call sym.i_ring_push
0x00011799      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:316
0x0001179b      78e8           js 0x11785
0x0001179d      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fts.c:317
0x0001179f      e8cc10ffff     call sym.imp.close
0x000117a4      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x000117a7      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x000117ab      5b             pop rbx
0x000117ac      5d             pop rbp
0x000117ad      c3             ret
0x000117ae      6690           nop
0x000117b0      89f7           mov edi, esi                            ; ../coreutils-8.31/lib/fts.c:322
0x000117b2      e8b910ffff     call sym.imp.close
0x000117b7      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x000117ba      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x000117be      5b             pop rbx
0x000117bf      5d             pop rbp
0x000117c0      c3             ret
0x000117c1      e8ca0dffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:308
0x000117c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- restore_initial_cwd:
0x000117d0      55             push rbp                                ; ../coreutils-8.31/lib/fts.c:334
0x000117d1      53             push rbx
0x000117d2      4889fb         mov rbx, rdi
0x000117d5      4883ec08       sub rsp, 8
0x000117d9      8b5748         mov edx, dword [rdi + 0x48]             ; ../coreutils-8.31/lib/fts.c:335
0x000117dc      89d5           mov ebp, edx
0x000117de      83e504         and ebp, 4
0x000117e1      7545           jne 0x11828
0x000117e3      80e602         and dh, 2
0x000117e6      7528           jne 0x11810
0x000117e8      8b7f28         mov edi, dword [rdi + 0x28]
0x000117eb      31ed           xor ebp, ebp
0x000117ed      e86e12ffff     call sym.imp.fchdir
0x000117f2      85c0           test eax, eax
0x000117f4      400f95c5       setne bpl
0x000117f8      488d7b60       lea rdi, [rbx + 0x60]                   ; ../coreutils-8.31/lib/fts.c:336
0x000117fc      e87ffdffff     call sym.fd_ring_clear
0x00011801      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:338
0x00011805      89e8           mov eax, ebp
0x00011807      5b             pop rbx
0x00011808      5d             pop rbp
0x00011809      c3             ret
0x0001180a      660f1f440000   nop word [rax + rax]
0x00011810      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/fts.c:335
0x00011815      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x0001181a      e841ffffff     call sym.cwd_advance_fd
0x0001181f      ebd7           jmp 0x117f8
0x00011821      0f1f80000000.  nop dword [rax]
0x00011828      31ed           xor ebp, ebp
0x0001182a      ebcc           jmp 0x117f8
0x0001182c      0f1f4000       nop dword [rax]
;-- fts_palloc.isra.2:
0x00011830      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:1966
0x00011831      488b0e         mov rcx, qword [rsi]                    ; ../coreutils-8.31/lib/fts.c:1969
0x00011834      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/fts.c:1966
0x00011837      488b3f         mov rdi, qword [rdi]
0x0001183a      488d84110001.  lea rax, [rcx + rdx + 0x100]            ; ../coreutils-8.31/lib/fts.c:1969
0x00011842      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/fts.c:1974
0x00011845      7721           ja 0x11868
0x00011847      488906         mov qword [rsi], rax                    ; ../coreutils-8.31/lib/fts.c:1980
0x0001184a      4889c6         mov rsi, rax                            ; ../coreutils-8.31/lib/fts.c:1981
0x0001184d      e81e12ffff     call sym.imp.realloc
0x00011852      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:1982
0x00011855      7431           je 0x11888
0x00011857      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/fts.c:1987
0x0001185a      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:1988
0x0001185f      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x00011860      c3             ret
0x00011861      0f1f80000000.  nop dword [rax]
0x00011868      e81314ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:1975
0x0001186d      48c703000000.  mov qword [rbx], 0                      ; ../coreutils-8.31/lib/fts.c:1976
0x00011874      e8270dffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1977
0x00011879      c70024000000   mov dword [rax], 0x24                   ; '$'
                                                                       ; [0x24:4]=0
0x0001187f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts.c:1978
0x00011881      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x00011882      c3             ret
0x00011883      0f1f440000     nop dword [rax + rax]
0x00011888      488b3b         mov rdi, qword [rbx]                    ; ../coreutils-8.31/lib/fts.c:1983
0x0001188b      e8f013ffff     call sym..plt.got
0x00011890      48c703000000.  mov qword [rbx], 0                      ; ../coreutils-8.31/lib/fts.c:1984
0x00011897      31c0           xor eax, eax
0x00011899      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x0001189a      c3             ret
0x0001189b      0f1f440000     nop dword [rax + rax]
;-- setup_dir.isra.4:
0x000118a0      81e702010000   and edi, 0x102                          ; ../coreutils-8.31/lib/fts-cycle.c:50
0x000118a6      53             push rbx
0x000118a7      4889f3         mov rbx, rsi
0x000118aa      7434           je 0x118e0                              ; ../coreutils-8.31/lib/fts-cycle.c:52
0x000118ac      4c8b0515a720.  mov r8, qword [reloc.free]              ; ../coreutils-8.31/lib/fts-cycle.c:55 ; [0x21bfc8:8]=0
0x000118b3      488d0d86f8ff.  lea rcx, sym.AD_compare                 ; 0x11140 ; "1\xc0H\x8bV\bH9W\bt\x04\xf3\xc3f\x90H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x000118ba      488d159ff8ff.  lea rdx, sym.AD_hash                    ; 0x11160 ; "H\x8bG\b1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f"
0x000118c1      31f6           xor esi, esi
0x000118c3      bf1f000000     mov edi, 0x1f
0x000118c8      e823a7ffff     call sym.hash_initialize
0x000118cd      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts-cycle.c:57
0x000118d0      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/fts-cycle.c:55
0x000118d3      0f95c0         setne al                                ; ../coreutils-8.31/lib/fts-cycle.c:57
0x000118d6      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts-cycle.c:69
0x000118d7      c3             ret
0x000118d8      0f1f84000000.  nop dword [rax + rax]
0x000118e0      bf20000000     mov edi, 0x20                           ; ../coreutils-8.31/lib/fts-cycle.c:62 ; "@"
0x000118e5      e81611ffff     call sym.imp.malloc
0x000118ea      4889c7         mov rdi, rax
0x000118ed      488903         mov qword [rbx], rax
0x000118f0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts-cycle.c:64
0x000118f2      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts-cycle.c:63
0x000118f5      74df           je 0x118d6
0x000118f7      e874210000     call sym.cycle_check_init               ; ../coreutils-8.31/lib/fts-cycle.c:65
0x000118fc      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts-cycle.c:68
0x00011901      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts-cycle.c:69
0x00011902      c3             ret
0x00011903      0f1f00         nop dword [rax]
0x00011906      662e0f1f8400.  nop word cs:[rax + rax]
;-- diropen.isra.6:
0x00011910      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts.c:346
0x00011913      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/fts.c:349
0x00011915      c1e20d         shl edx, 0xd
0x00011918      81e200000200   and edx, 0x20000
0x0001191e      81ca00090900   or edx, 0x90900                         ; ../coreutils-8.31/lib/fts.c:348
0x00011924      81e600020000   and esi, 0x200                          ; ../coreutils-8.31/lib/fts.c:353
0x0001192a      7514           jne 0x11940
0x0001192c      4889c7         mov rdi, rax
0x0001192f      89d6           mov esi, edx
0x00011931      31c0           xor eax, eax
0x00011933      e9b898ffff     jmp sym.open_safer
0x00011938      0f1f84000000.  nop dword [rax + rax]
0x00011940      4889c6         mov rsi, rax
0x00011943      31c0           xor eax, eax
0x00011945      e956240000     jmp sym.openat_safer
0x0001194a      660f1f440000   nop word [rax + rax]
;-- fts_safe_changedir:
0x00011950      4157           push r15                                ; ../coreutils-8.31/lib/fts.c:2044
0x00011952      4156           push r14
0x00011954      4989f6         mov r14, rsi
0x00011957      4155           push r13
0x00011959      4154           push r12
0x0001195b      4989fd         mov r13, rdi
0x0001195e      55             push rbp
0x0001195f      53             push rbx
0x00011960      4189d4         mov r12d, edx
0x00011963      4889cd         mov rbp, rcx
0x00011966      4881ecb80000.  sub rsp, 0xb8
0x0001196d      8b5f48         mov ebx, dword [rdi + 0x48]
0x00011970      64488b042528.  mov rax, qword fs:[0x28]
0x00011979      48898424a800.  mov qword [rsp + 0xa8], rax
0x00011981      31c0           xor eax, eax
0x00011983      4189d9         mov r9d, ebx
0x00011986      4183e104       and r9d, 4
0x0001198a      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/fts.c:2046
0x0001198d      0f84ad000000   je 0x11a40
0x00011993      488d15514100.  lea rdx, [0x00015aeb]                   ; ".."
0x0001199a      b903000000     mov ecx, 3
0x0001199f      4889ee         mov rsi, rbp
0x000119a2      4889d7         mov rdi, rdx
0x000119a5      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000119a7      0f97c0         seta al
0x000119aa      1c00           sbb al, 0
0x000119ac      84c0           test al, al
0x000119ae      0f858c000000   jne 0x11a40
0x000119b4      4585c9         test r9d, r9d                           ; ../coreutils-8.31/lib/fts.c:2053
0x000119b7      0f8588000000   jne 0x11a45
0x000119bd      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fts.c:2060
0x000119c0      0f89e4010000   jns 0x11baa
0x000119c6      f6c702         test bh, 2
0x000119c9      0f8541010000   jne 0x11b10
0x000119cf      c644240f01     mov byte [rsp + 0xf], 1
0x000119d4      418b7d2c       mov edi, dword [r13 + 0x2c]             ; ../coreutils-8.31/lib/fts.c:2082
0x000119d8      4889ea         mov rdx, rbp
0x000119db      89de           mov esi, ebx
0x000119dd      e82effffff     call sym.diropen.isra.6
0x000119e2      85c0           test eax, eax
0x000119e4      4189c7         mov r15d, eax
0x000119e7      0f88ae010000   js 0x11b9b
0x000119ed      418b5d48       mov ebx, dword [r13 + 0x48]
0x000119f1      f6c302         test bl, 2                              ; ../coreutils-8.31/lib/fts.c:2092
0x000119f4      0f84a0000000   je 0x11a9a
0x000119fa      660f1f440000   nop word [rax + rax]
0x00011a00      488d542410     lea rdx, [rsp + 0x10]                   ; stat.h:465   return __fxstat (_STAT_VER, __fd, __statbuf);
0x00011a05      4489fe         mov esi, r15d
0x00011a08      bf01000000     mov edi, 1
0x00011a0d      e81e10ffff     call sym.imp.__fxstat
0x00011a12      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:2096
0x00011a14      0f84c6000000   je 0x11ae0
0x00011a1a      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/fts.c:2099 ; -1
0x00011a1f      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fts.c:2118
0x00011a22      7931           jns 0x11a55
0x00011a24      e8770bffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:2120
0x00011a29      448b20         mov r12d, dword [rax]
0x00011a2c      4889c5         mov rbp, rax
0x00011a2f      4489ff         mov edi, r15d                           ; ../coreutils-8.31/lib/fts.c:2121
0x00011a32      e8390effff     call sym.imp.close
0x00011a37      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fts.c:2122
0x00011a3b      eb18           jmp 0x11a55
0x00011a3d      0f1f00         nop dword [rax]
0x00011a40      4585c9         test r9d, r9d                           ; ../coreutils-8.31/lib/fts.c:2053
0x00011a43      743b           je 0x11a80
0x00011a45      80e702         and bh, 2                               ; ../coreutils-8.31/lib/fts.c:2055
0x00011a48      7409           je 0x11a53
0x00011a4a      4585e4         test r12d, r12d
0x00011a4d      0f89ad000000   jns 0x11b00
0x00011a53      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:2057
0x00011a55      488b8c24a800.  mov rcx, qword [rsp + 0xa8]
0x00011a5d      6448330c2528.  xor rcx, qword fs:[0x28]
0x00011a66      89d8           mov eax, ebx
0x00011a68      0f8537010000   jne 0x11ba5
0x00011a6e      4881c4b80000.  add rsp, 0xb8
0x00011a75      5b             pop rbx
0x00011a76      5d             pop rbp
0x00011a77      415c           pop r12
0x00011a79      415d           pop r13                                 ; ../coreutils-8.31/lib/fts-cycle.c:2014
0x00011a7b      415e           pop r14
0x00011a7d      415f           pop r15
0x00011a7f      c3             ret
0x00011a80      4585e4         test r12d, r12d
0x00011a83      0f8837010000   js 0x11bc0
0x00011a89      f6c302         test bl, 2
0x00011a8c      4589e7         mov r15d, r12d
0x00011a8f      c644240f00     mov byte [rsp + 0xf], 0
0x00011a94      0f8566ffffff   jne 0x11a00
0x00011a9a      4885ed         test rbp, rbp
0x00011a9d      7421           je 0x11ac0
0x00011a9f      488d15454000.  lea rdx, [0x00015aeb]                   ; ".."
0x00011aa6      b903000000     mov ecx, 3
0x00011aab      4889ee         mov rsi, rbp
0x00011aae      4889d7         mov rdi, rdx
0x00011ab1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00011ab3      0f97c0         seta al                                 ; ../coreutils-8.31/lib/fts-cycle.c:2010
0x00011ab6      1c00           sbb al, 0
0x00011ab8      84c0           test al, al
0x00011aba      0f8440ffffff   je 0x11a00
0x00011ac0      80e702         and bh, 2
0x00011ac3      0f858f000000   jne 0x11b58
0x00011ac9      4489ff         mov edi, r15d                           ; ../coreutils-8.31/lib/fts-cycle.c:1971
0x00011acc      e88f0fffff     call sym.imp.fchdir
0x00011ad1      89c3           mov ebx, eax
0x00011ad3      e947ffffff     jmp 0x11a1f
0x00011ad8      0f1f84000000.  nop dword [rax + rax]
0x00011ae0      488b442410     mov rax, qword [rsp + 0x10]
0x00011ae5      49394678       cmp qword [r14 + 0x78], rax
0x00011ae9      0f8491000000   je 0x11b80                              ; ../coreutils-8.31/lib/fts-cycle.c:1977
0x00011aef      e8ac0affff     call sym.imp.__errno_location
0x00011af4      c70002000000   mov dword [rax], 2
0x00011afa      e91bffffff     jmp 0x11a1a
0x00011aff      90             nop
0x00011b00      4489e7         mov edi, r12d
0x00011b03      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts-cycle.c:1996
0x00011b05      e8660dffff     call sym.imp.close
0x00011b0a      e946ffffff     jmp 0x11a55
0x00011b0f      90             nop
0x00011b10      4d8d7d60       lea r15, [r13 + 0x60]
0x00011b14      4c89ff         mov rdi, r15
0x00011b17      e8b4210000     call sym.i_ring_empty
0x00011b1c      84c0           test al, al
0x00011b1e      8844240f       mov byte [rsp + 0xf], al
0x00011b22      0f85acfeffff   jne 0x119d4
0x00011b28      4c89ff         mov rdi, r15
0x00011b2b      e8f0210000     call sym.i_ring_pop
0x00011b30      85c0           test eax, eax
0x00011b32      4189c7         mov r15d, eax
0x00011b35      418b5d48       mov ebx, dword [r13 + 0x48]
0x00011b39      0f8890feffff   js 0x119cf                              ; ../coreutils-8.31/lib/fts-cycle.c:2006
0x00011b3f      f6c302         test bl, 2
0x00011b42      4189c4         mov r12d, eax
0x00011b45      c644240f01     mov byte [rsp + 0xf], 1
0x00011b4a      0f8470ffffff   je 0x11ac0
0x00011b50      e9abfeffff     jmp 0x11a00
0x00011b55      0f1f00         nop dword [rax]
0x00011b58      440fb674240f   movzx r14d, byte [rsp + 0xf]
0x00011b5e      4489fe         mov esi, r15d                           ; ../coreutils-8.31/lib/fts-cycle.c:2029
0x00011b61      4c89ef         mov rdi, r13
0x00011b64      31db           xor ebx, ebx
0x00011b66      4183f601       xor r14d, 1
0x00011b6a      410fb6d6       movzx edx, r14b
0x00011b6e      e8edfbffff     call sym.cwd_advance_fd                 ; ../coreutils-8.31/lib/fts-cycle.c:1996
0x00011b73      e9ddfeffff     jmp 0x11a55
0x00011b78      0f1f84000000.  nop dword [rax + rax]
0x00011b80      488b442418     mov rax, qword [rsp + 0x18]
0x00011b85      493986800000.  cmp qword [r14 + 0x80], rax
0x00011b8c      0f855dffffff   jne 0x11aef
0x00011b92      418b5d48       mov ebx, dword [r13 + 0x48]
0x00011b96      e925ffffff     jmp 0x11ac0                             ; ../coreutils-8.31/lib/fts-cycle.c:-22
0x00011b9b      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/fts-cycle.c:-17 ; -1
0x00011ba0      e9b0feffff     jmp 0x11a55
0x00011ba5      e8d60bffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/fts-cycle.c:-14
0x00011baa      f6c302         test bl, 2
0x00011bad      4589e7         mov r15d, r12d
0x00011bb0      c644240f01     mov byte [rsp + 0xf], 1
0x00011bb5      0f84ebfeffff   je 0x11aa6                              ; ../coreutils-8.31/lib/fts-cycle.c:-4
0x00011bbb      e940feffff     jmp 0x11a00
0x00011bc0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/fts-cycle.c:-11
0x00011bc5      e90afeffff     jmp 0x119d4
0x00011bca      660f1f440000   nop word [rax + rax]
;-- enter_dir.isra.10:
0x00011bd0      81e702010000   and edi, 0x102
0x00011bd6      4154           push r12
0x00011bd8      4989f4         mov r12, rsi
0x00011bdb      55             push rbp
0x00011bdc      53             push rbx                                ; ../coreutils-8.31/lib/fts-cycle.c:0
0x00011bdd      4889d3         mov rbx, rdx
0x00011be0      746e           je 0x11c50
0x00011be2      bf18000000     mov edi, 0x18
0x00011be7      e8140effff     call sym.imp.malloc
0x00011bec      4885c0         test rax, rax
0x00011bef      4889c5         mov rbp, rax
0x00011bf2      0f8480000000   je 0x11c78
0x00011bf8      488b4378       mov rax, qword [rbx + 0x78]
0x00011bfc      498b3c24       mov rdi, qword [r12]
0x00011c00      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fts-cycle.c:24
0x00011c03      48895d10       mov qword [rbp + 0x10], rbx
0x00011c07      48894500       mov qword [rbp], rax
0x00011c0b      488b83800000.  mov rax, qword [rbx + 0x80]
0x00011c12      48894508       mov qword [rbp + 8], rax
0x00011c16      e8d5abffff     call sym.hash_insert
0x00011c1b      4839c5         cmp rbp, rax
0x00011c1e      4989c4         mov r12, rax
0x00011c21      741e           je 0x11c41
0x00011c23      4889ef         mov rdi, rbp
0x00011c26      e85510ffff     call sym..plt.got
0x00011c2b      4d85e4         test r12, r12
0x00011c2e      7448           je 0x11c78
0x00011c30      498b442410     mov rax, qword [r12 + 0x10]
0x00011c35      b902000000     mov ecx, 2
0x00011c3a      66894b70       mov word [rbx + 0x70], cx
0x00011c3e      488903         mov qword [rbx], rax
0x00011c41      5b             pop rbx
0x00011c42      b801000000     mov eax, 1
0x00011c47      5d             pop rbp
0x00011c48      415c           pop r12
0x00011c4a      c3             ret
0x00011c4b      0f1f440000     nop dword [rax + rax]
0x00011c50      498b3c24       mov rdi, qword [r12]                    ; ../coreutils-8.31/lib/fts-cycle.c:32
0x00011c54      488d7278       lea rsi, [rdx + 0x78]
0x00011c58      e8231e0000     call sym.cycle_check                    ; ../coreutils-8.31/lib/fts-cycle.c:45
0x00011c5d      84c0           test al, al
0x00011c5f      74e0           je 0x11c41
0x00011c61      ba02000000     mov edx, 2
0x00011c66      48891b         mov qword [rbx], rbx
0x00011c69      66895370       mov word [rbx + 0x70], dx
0x00011c6d      5b             pop rbx
0x00011c6e      5d             pop rbp
0x00011c6f      415c           pop r12
0x00011c71      c3             ret
0x00011c72      660f1f440000   nop word [rax + rax]
0x00011c78      5b             pop rbx
0x00011c79      31c0           xor eax, eax
0x00011c7b      5d             pop rbp
0x00011c7c      415c           pop r12
0x00011c7e      c3             ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:50
0x00011c7f      90             nop
;-- leave_dir.isra.12:
0x00011c80      4883ec28       sub rsp, 0x28
0x00011c84      4889f1         mov rcx, rsi
0x00011c87      64488b042528.  mov rax, qword fs:[0x28]
0x00011c90      4889442418     mov qword [rsp + 0x18], rax
0x00011c95      31c0           xor eax, eax
0x00011c97      81e702010000   and edi, 0x102
0x00011c9d      7541           jne 0x11ce0                             ; ../coreutils-8.31/lib/fts-cycle.c:38
0x00011c9f      488b4208       mov rax, qword [rdx + 8]
0x00011ca3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts-cycle.c:36
0x00011ca6      741d           je 0x11cc5
0x00011ca8      4883785800     cmp qword [rax + 0x58], 0
0x00011cad      7816           js 0x11cc5
0x00011caf      488b0e         mov rcx, qword [rsi]
0x00011cb2      4883791000     cmp qword [rcx + 0x10], 0
0x00011cb7      747a           je 0x11d33
0x00011cb9      488bb2800000.  mov rsi, qword [rdx + 0x80]
0x00011cc0      483931         cmp qword [rcx], rsi
0x00011cc3      744b           je 0x11d10
0x00011cc5      488b442418     mov rax, qword [rsp + 0x18]
0x00011cca      644833042528.  xor rax, qword fs:[0x28]
0x00011cd3      7559           jne 0x11d2e
0x00011cd5      4883c428       add rsp, 0x28
0x00011cd9      c3             ret
0x00011cda      660f1f440000   nop word [rax + rax]
0x00011ce0      488b4278       mov rax, qword [rdx + 0x78]
0x00011ce4      488b39         mov rdi, qword [rcx]
0x00011ce7      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/fts-cycle.c:50
0x00011cea      48890424       mov qword [rsp], rax
0x00011cee      488b82800000.  mov rax, qword [rdx + 0x80]
0x00011cf5      4889442408     mov qword [rsp + 8], rax
0x00011cfa      e851abffff     call sym.hash_delete
0x00011cff      4885c0         test rax, rax
0x00011d02      742f           je 0x11d33
0x00011d04      4889c7         mov rdi, rax
0x00011d07      e8740fffff     call sym..plt.got
0x00011d0c      ebb7           jmp 0x11cc5
0x00011d0e      6690           nop
0x00011d10      488b7278       mov rsi, qword [rdx + 0x78]
0x00011d14      48397108       cmp qword [rcx + 8], rsi
0x00011d18      75ab           jne 0x11cc5
0x00011d1a      488b5078       mov rdx, qword [rax + 0x78]
0x00011d1e      488b80800000.  mov rax, qword [rax + 0x80]
0x00011d25      48895108       mov qword [rcx + 8], rdx                ; ../coreutils-8.31/lib/fts.c:1225
0x00011d29      488901         mov qword [rcx], rax
0x00011d2c      eb97           jmp 0x11cc5
0x00011d2e      e84d0affff     call sym.imp.__stack_chk_fail
0x00011d33      e85808ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:1228
0x00011d38      0f1f84000000.  nop dword [rax + rax]
;-- fts_build:
0x00011d40      4157           push r15
0x00011d42      4156           push r14
0x00011d44      4989ff         mov r15, rdi
0x00011d47      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1282
0x00011d49      4154           push r12
0x00011d4b      55             push rbp
0x00011d4c      53             push rbx
0x00011d4d      4883ec78       sub rsp, 0x78
0x00011d51      488b2f         mov rbp, qword [rdi]
0x00011d54      64488b042528.  mov rax, qword fs:[0x28]
0x00011d5d      4889442468     mov qword [rsp + 0x68], rax
0x00011d62      31c0           xor eax, eax
0x00011d64      89742458       mov dword [rsp + 0x58], esi             ; ../coreutils-8.31/lib/fts.c:1343
0x00011d68      488b4518       mov rax, qword [rbp + 0x18]
0x00011d6c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:1349
0x00011d6f      4889442450     mov qword [rsp + 0x50], rax
0x00011d74      0f8436040000   je 0x121b0
0x00011d7a      4889c7         mov rdi, rax
0x00011d7d      e8be0bffff     call sym.imp.dirfd
0x00011d82      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1344
0x00011d84      89442464       mov dword [rsp + 0x64], eax
0x00011d88      0f8852050000   js 0x122e0
0x00011d8e      49837f4000     cmp qword [r15 + 0x40], 0
0x00011d93      0f84cf070000   je 0x12568
0x00011d99      48c7442438ff.  mov qword [rsp + 0x38], 0xffffffffffffffff
0x00011da2      418b7f48       mov edi, dword [r15 + 0x48]
0x00011da6      c644245f01     mov byte [rsp + 0x5f], 1
0x00011dab      488b4d48       mov rcx, qword [rbp + 0x48]
0x00011daf      488b5538       mov rdx, qword [rbp + 0x38]             ; ../coreutils-8.31/lib/fts.c:1359
0x00011db3      48c744244000.  mov qword [rsp + 0x40], 0
0x00011dbc      807c0aff2f     cmp byte [rdx + rcx - 1], 0x2f
0x00011dc1      488d41ff       lea rax, [rcx - 1]                      ; ../coreutils-8.31/lib/fts.c:1351
0x00011dc5      480f45c1       cmovne rax, rcx
0x00011dc9      83e704         and edi, 4
0x00011dcc      4889442448     mov qword [rsp + 0x48], rax
0x00011dd1      7410           je 0x11de3
0x00011dd3      49034720       add rax, qword [r15 + 0x20]
0x00011dd7      488d5801       lea rbx, [rax + 1]
0x00011ddb      c6002f         mov byte [rax], 0x2f                    ; ../coreutils-8.31/lib/fts.c:1360 ; '/'
                                                                       ; [0x2f:1]=0
0x00011dde      48895c2440     mov qword [rsp + 0x40], rbx
0x00011de3      488b442448     mov rax, qword [rsp + 0x48]
0x00011de8      498b5f30       mov rbx, qword [r15 + 0x30]
0x00011dec      c644245e00     mov byte [rsp + 0x5e], 0
0x00011df1      c644245d00     mov byte [rsp + 0x5d], 0
0x00011df6      48c744240800.  mov qword [rsp + 8], 0                  ; ../coreutils-8.31/lib/fts.c:1298
0x00011dff      48c744241000.  mov qword [rsp + 0x10], 0
0x00011e08      4883c001       add rax, 1
0x00011e0c      48896c2420     mov qword [rsp + 0x20], rbp             ; ../coreutils-8.31/lib/fts.c:1306
0x00011e11      4829c3         sub rbx, rax
0x00011e14      4889442418     mov qword [rsp + 0x18], rax
0x00011e19      488b4558       mov rax, qword [rbp + 0x58]
0x00011e1d      48895c2428     mov qword [rsp + 0x28], rbx
0x00011e22      31db           xor ebx, ebx
0x00011e24      4883c001       add rax, 1
0x00011e28      4889442430     mov qword [rsp + 0x30], rax
0x00011e2d      e9dd000000     jmp 0x11f0f
0x00011e32      660f1f440000   nop word [rax + rax]
0x00011e38      4d89f1         mov r9, r14                             ; ../coreutils-8.31/lib/fts.c:1328
0x00011e3b      4c034c2418     add r9, qword [rsp + 0x18]
0x00011e40      0f825a080000   jb 0x126a0
0x00011e46      488b442430     mov rax, qword [rsp + 0x30]
0x00011e4b      498db5080100.  lea rsi, [r13 + 0x108]
0x00011e52      49894558       mov qword [r13 + 0x58], rax
0x00011e56      498b07         mov rax, qword [r15]
0x00011e59      4d894d48       mov qword [r13 + 0x48], r9
0x00011e5d      49894508       mov qword [r13 + 8], rax
0x00011e61      488b4500       mov rax, qword [rbp]
0x00011e65      498985800000.  mov qword [r13 + 0x80], rax             ; ../coreutils-8.31/lib/fts.c:71
0x00011e6c      418b4748       mov eax, dword [r15 + 0x48]
0x00011e70      a804           test al, 4
0x00011e72      0f8568020000   jne 0x120e0
0x00011e78      49897530       mov qword [r13 + 0x30], rsi
0x00011e7c      49837f4000     cmp qword [r15 + 0x40], 0
0x00011e81      7409           je 0x11e8c
0x00011e83      f6c404         test ah, 4
0x00011e86      0f84fc020000   je 0x12188
0x00011e8c      0fb65512       movzx edx, byte [rbp + 0x12]
0x00011e90      83e018         and eax, 0x18
0x00011e93      89d6           mov esi, edx
0x00011e95      83ea01         sub edx, 1
0x00011e98      83f818         cmp eax, 0x18
0x00011e9b      0f84af020000   je 0x12150                              ; ../coreutils-8.31/lib/fts.c:1359
0x00011ea1      b90b000000     mov ecx, 0xb
0x00011ea6      83fa0b         cmp edx, 0xb
0x00011ea9      6641894d70     mov word [r13 + 0x70], cx
0x00011eae      0f8764020000   ja 0x12118
0x00011eb4      488d05055500.  lea rax, obj.CSWTCH.53                  ; 0x173c0
0x00011ebb      8b0490         mov eax, dword [rax + rdx*4]
0x00011ebe      418985900000.  mov dword [r13 + 0x90], eax
0x00011ec5      b802000000     mov eax, 2
0x00011eca      498985a80000.  mov qword [r13 + 0xa8], rax
0x00011ed1      48837c241000   cmp qword [rsp + 0x10], 0
0x00011ed7      49c745100000.  mov qword [r13 + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1237
0x00011edf      0f8423020000   je 0x12108
0x00011ee5      488b442408     mov rax, qword [rsp + 8]
0x00011eea      4c896810       mov qword [rax + 0x10], r13             ; ../coreutils-8.31/lib/fts.c:1247
0x00011eee      4881fb102700.  cmp rbx, sym.imp.stpcpy                 ; 0x2710
0x00011ef5      0f84f5000000   je 0x11ff0
0x00011efb      4883c301       add rbx, 1
0x00011eff      483b5c2438     cmp rbx, qword [rsp + 0x38]
0x00011f04      0f833e010000   jae 0x12048
0x00011f0a      4c896c2408     mov qword [rsp + 8], r13
0x00011f0f      488b442420     mov rax, qword [rsp + 0x20]
0x00011f14      4c8b6818       mov r13, qword [rax + 0x18]             ; ../coreutils-8.31/lib/fts.c:1251
0x00011f18      4d85ed         test r13, r13
0x00011f1b      0f84c7040000   je 0x123e8
0x00011f21      e87a06ffff     call sym.imp.__errno_location
0x00011f26      4c89ef         mov rdi, r13
0x00011f29      c70000000000   mov dword [rax], 0
0x00011f2f      4989c4         mov r12, rax
0x00011f32      e8b90affff     call sym.imp.readdir
0x00011f37      4885c0         test rax, rax
0x00011f3a      4889c5         mov rbp, rax
0x00011f3d      0f847d050000   je 0x124c0
0x00011f43      41f6474820     test byte [r15 + 0x48], 0x20
0x00011f48      750a           jne 0x11f54
0x00011f4a      8078132e       cmp byte [rax + 0x13], 0x2e
0x00011f4e      0f84dc010000   je 0x12130
0x00011f54      4c8d6d13       lea r13, [rbp + 0x13]
0x00011f58      4c89ef         mov rdi, r13
0x00011f5b      e8f007ffff     call sym.imp.strlen
0x00011f60      4c89ee         mov rsi, r13
0x00011f63      4889c2         mov rdx, rax
0x00011f66      4c89ff         mov rdi, r15
0x00011f69      4989c6         mov r14, rax
0x00011f6c      e82ff5ffff     call sym.fts_alloc
0x00011f71      4885c0         test rax, rax
0x00011f74      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/fts.c:1278
0x00011f77      0f8413040000   je 0x12390
0x00011f7d      4c39742428     cmp qword [rsp + 0x28], r14
0x00011f82      0f87b0feffff   ja 0x11e38
0x00011f88      498b4720       mov rax, qword [r15 + 0x20]
0x00011f8c      498d7730       lea rsi, [r15 + 0x30]
0x00011f90      498d7f20       lea rdi, [r15 + 0x20]
0x00011f94      4889442428     mov qword [rsp + 0x28], rax
0x00011f99      488b442448     mov rax, qword [rsp + 0x48]
0x00011f9e      4a8d543002     lea rdx, [rax + r14 + 2]
0x00011fa3      e888f8ffff     call sym.fts_palloc.isra.2
0x00011fa8      84c0           test al, al
0x00011faa      0f84e0030000   je 0x12390
0x00011fb0      498b5720       mov rdx, qword [r15 + 0x20]
0x00011fb4      483b542428     cmp rdx, qword [rsp + 0x28]
0x00011fb9      0f84e1010000   je 0x121a0
0x00011fbf      4803542418     add rdx, qword [rsp + 0x18]
0x00011fc4      41f6474804     test byte [r15 + 0x48], 4
0x00011fc9      480f44542440   cmove rdx, qword [rsp + 0x40]
0x00011fcf      4889542440     mov qword [rsp + 0x40], rdx
0x00011fd4      498b4f30       mov rcx, qword [r15 + 0x30]
0x00011fd8      482b4c2418     sub rcx, qword [rsp + 0x18]
0x00011fdd      8844245d       mov byte [rsp + 0x5d], al
0x00011fe1      48894c2428     mov qword [rsp + 0x28], rcx
0x00011fe6      e94dfeffff     jmp 0x11e38
0x00011feb      0f1f440000     nop dword [rax + rax]
0x00011ff0      49837f4000     cmp qword [r15 + 0x40], 0
0x00011ff5      0f8500ffffff   jne 0x11efb
0x00011ffb      8b742464       mov esi, dword [rsp + 0x64]
0x00011fff      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00012004      e8b7f5ffff     call sym.filesystem_type
0x00012009      483d94190201   cmp rax, 0x1021994
0x0001200f      0f846b030000   je 0x12380
0x00012015      b9424d53ff     mov ecx, 0xff534d42
0x0001201a      4839c8         cmp rax, rcx
0x0001201d      0f845d030000   je 0x12380
0x00012023      483d69690000   cmp rax, 0x6969                         ; "1\xc0\xe8@\xc1\xff\xff\xe9\xdb\xf2\xff\xff\x0f\x1f"
0x00012029      0f8451030000   je 0x12380
0x0001202f      4883c301       add rbx, 1
0x00012033      483b5c2438     cmp rbx, qword [rsp + 0x38]
0x00012038      c644245e01     mov byte [rsp + 0x5e], 1
0x0001203d      0f82c7feffff   jb 0x11f0a
0x00012043      0f1f440000     nop dword [rax + rax]
0x00012048      807c245d00     cmp byte [rsp + 0x5d], 0
0x0001204d      488b6c2420     mov rbp, qword [rsp + 0x20]             ; ../coreutils-8.31/lib/fts.c:1664
0x00012052      0f849e030000   je 0x123f6
0x00012058      498b4708       mov rax, qword [r15 + 8]
0x0001205c      498b4f20       mov rcx, qword [r15 + 0x20]
0x00012060      4885c0         test rax, rax
0x00012063      742b           je 0x12090
0x00012065      0f1f00         nop dword [rax]
0x00012068      488b5030       mov rdx, qword [rax + 0x30]             ; string_fortified.h:-312
0x0001206c      488db0080100.  lea rsi, [rax + 0x108]
0x00012073      4839f2         cmp rdx, rsi
0x00012076      740b           je 0x12083
0x00012078      482b5038       sub rdx, qword [rax + 0x38]
0x0001207c      4801ca         add rdx, rcx
0x0001207f      48895030       mov qword [rax + 0x30], rdx
0x00012083      48894838       mov qword [rax + 0x38], rcx
0x00012087      488b4010       mov rax, qword [rax + 0x10]
0x0001208b      4885c0         test rax, rax
0x0001208e      75d8           jne 0x12068
0x00012090      488b442410     mov rax, qword [rsp + 0x10]
0x00012095      eb0c           jmp 0x120a3
0x00012097      660f1f840000.  nop word [rax + rax]
0x000120a0      4889d0         mov rax, rdx
0x000120a3      4883785800     cmp qword [rax + 0x58], 0
0x000120a8      0f8848030000   js 0x123f6
0x000120ae      488b5030       mov rdx, qword [rax + 0x30]
0x000120b2      488db0080100.  lea rsi, [rax + 0x108]
0x000120b9      4839f2         cmp rdx, rsi
0x000120bc      740b           je 0x120c9
0x000120be      482b5038       sub rdx, qword [rax + 0x38]
0x000120c2      4801ca         add rdx, rcx
0x000120c5      48895030       mov qword [rax + 0x30], rdx
0x000120c9      488b5010       mov rdx, qword [rax + 0x10]
0x000120cd      48894838       mov qword [rax + 0x38], rcx
0x000120d1      4885d2         test rdx, rdx
0x000120d4      75ca           jne 0x120a0
0x000120d6      488b5008       mov rdx, qword [rax + 8]
0x000120da      ebc4           jmp 0x120a0
0x000120dc      0f1f4000       nop dword [rax]
0x000120e0      498b4538       mov rax, qword [r13 + 0x38]
0x000120e4      488b7c2440     mov rdi, qword [rsp + 0x40]             ; ../coreutils-8.31/lib/fts.c:-185
0x000120e9      49894530       mov qword [r13 + 0x30], rax
0x000120ed      498b4560       mov rax, qword [r13 + 0x60]
0x000120f1      488d5001       lea rdx, [rax + 1]
0x000120f5      e8060affff     call sym.imp.memmove
0x000120fa      418b4748       mov eax, dword [r15 + 0x48]
0x000120fe      e979fdffff     jmp 0x11e7c
0x00012103      0f1f440000     nop dword [rax + rax]
0x00012108      4c896c2410     mov qword [rsp + 0x10], r13
0x0001210d      e9dcfdffff     jmp 0x11eee
0x00012112      660f1f440000   nop word [rax + rax]
0x00012118      41c785900000.  mov dword [r13 + 0x90], 0
0x00012123      b802000000     mov eax, 2
0x00012128      e99dfdffff     jmp 0x11eca
0x0001212d      0f1f00         nop dword [rax]
0x00012130      80781400       cmp byte [rax + 0x14], 0
0x00012134      740b           je 0x12141
0x00012136      668378142e     cmp word [rax + 0x14], 0x2e
0x0001213b      0f8513feffff   jne 0x11f54
0x00012141      4c8b6c2408     mov r13, qword [rsp + 8]
0x00012146      e9bffdffff     jmp 0x11f0a                             ; ../coreutils-8.31/lib/fts.c:860
0x0001214b      0f1f440000     nop dword [rax + rax]
0x00012150      81e6fb000000   and esi, 0xfb
0x00012156      0f8445fdffff   je 0x11ea1
0x0001215c      b80b000000     mov eax, 0xb
0x00012161      83fa0b         cmp edx, 0xb                            ; ../coreutils-8.31/lib/fts.c:872
0x00012164      6641894570     mov word [r13 + 0x70], ax
0x00012169      0f8687050000   jbe 0x126f6
0x0001216f      41c785900000.  mov dword [r13 + 0x90], 0
0x0001217a      b801000000     mov eax, 1
0x0001217f      e946fdffff     jmp 0x11eca
0x00012184      0f1f4000       nop dword [rax]
0x00012188      31d2           xor edx, edx
0x0001218a      4c89ee         mov rsi, r13
0x0001218d      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/fts.c:926
0x00012190      e82bf0ffff     call sym.fts_stat
0x00012195      6641894570     mov word [r13 + 0x70], ax
0x0001219a      e932fdffff     jmp 0x11ed1
0x0001219f      90             nop
0x000121a0      0fb644245d     movzx eax, byte [rsp + 0x5d]
0x000121a5      e92afeffff     jmp 0x11fd4
0x000121aa      660f1f440000   nop word [rax + rax]
0x000121b0      8b4748         mov eax, dword [rdi + 0x48]
0x000121b3      89c2           mov edx, eax
0x000121b5      83e210         and edx, 0x10
0x000121b8      740d           je 0x121c7
0x000121ba      a801           test al, 1
0x000121bc      ba00000200     mov edx, 0x20000                        ; ../coreutils-8.31/lib/fts.c:931
0x000121c1      0f8501010000   jne 0x122c8
0x000121c7      2504020000     and eax, 0x204
0x000121cc      488b7530       mov rsi, qword [rbp + 0x30]
0x000121d0      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x000121d5      3d00020000     cmp eax, 0x200
0x000121da      7504           jne 0x121e0
0x000121dc      418b7f2c       mov edi, dword [r15 + 0x2c]
0x000121e0      488d4c2464     lea rcx, [rsp + 0x64]
0x000121e5      e846a9ffff     call sym.opendirat                      ; ../coreutils-8.31/lib/fts.c:938
0x000121ea      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:940
0x000121ed      48894518       mov qword [rbp + 0x18], rax
0x000121f1      0f8419030000   je 0x12510
0x000121f7      66837d700b     cmp word [rbp + 0x70], 0xb
0x000121fc      0f848e030000   je 0x12590
0x00012202      418b7f48       mov edi, dword [r15 + 0x48]
0x00012206      f7c700010000   test edi, 0x100
0x0001220c      0f851e010000   jne 0x12330
0x00012212      49837f4001     cmp qword [r15 + 0x40], 1
0x00012217      4819c0         sbb rax, rax
0x0001221a      25a1860100     and eax, 0x186a1                        ; ../coreutils-8.31/lib/fts.c:943
0x0001221f      4883e801       sub rax, 1
0x00012223      837c245802     cmp dword [rsp + 0x58], 2
0x00012228      4889442438     mov qword [rsp + 0x38], rax
0x0001222d      0f844d030000   je 0x12580
0x00012233      418b5748       mov edx, dword [r15 + 0x48]
0x00012237      8b442464       mov eax, dword [rsp + 0x64]
0x0001223b      83e238         and edx, 0x38
0x0001223e      83fa18         cmp edx, 0x18
0x00012241      0f849d030000   je 0x125e4
0x00012247      837c245803     cmp dword [rsp + 0x58], 3
0x0001224c      41bc01000000   mov r12d, 1
0x00012252      0f94c3         sete bl
0x00012255      41f6474902     test byte [r15 + 0x49], 2
0x0001225a      0f85dc030000   jne 0x1263c
0x00012260      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:848
0x00012262      0f8960030000   jns 0x125c8
0x00012268      84db           test bl, bl
0x0001226a      740f           je 0x1227b
0x0001226c      4584e4         test r12b, r12b
0x0001226f      740a           je 0x1227b                              ; ../coreutils-8.31/lib/fts.c:1170
0x00012271      e82a03ffff     call sym.imp.__errno_location
0x00012276      8b00           mov eax, dword [rax]
0x00012278      894540         mov dword [rbp + 0x40], eax
0x0001227b      66834d7201     or word [rbp + 0x72], 1
0x00012280      488b7d18       mov rdi, qword [rbp + 0x18]
0x00012284      e81706ffff     call sym.imp.closedir
0x00012289      418b7f48       mov edi, dword [r15 + 0x48]
0x0001228d      48c745180000.  mov qword [rbp + 0x18], 0
0x00012295      f7c700020000   test edi, 0x200
0x0001229b      7413           je 0x122b0
0x0001229d      8b442464       mov eax, dword [rsp + 0x64]
0x000122a1      85c0           test eax, eax
0x000122a3      780b           js 0x122b0
0x000122a5      89c7           mov edi, eax
0x000122a7      e8c405ffff     call sym.imp.close
0x000122ac      418b7f48       mov edi, dword [r15 + 0x48]
0x000122b0      48c745180000.  mov qword [rbp + 0x18], 0
0x000122b8      c644245f00     mov byte [rsp + 0x5f], 0
0x000122bd      e9e9faffff     jmp 0x11dab
0x000122c2      660f1f440000   nop word [rax + rax]
0x000122c8      31d2           xor edx, edx
0x000122ca      48837d5800     cmp qword [rbp + 0x58], 0
0x000122cf      0f95c2         setne dl
0x000122d2      c1e211         shl edx, 0x11                           ; ../coreutils-8.31/lib/fts.c:886
0x000122d5      e9edfeffff     jmp 0x121c7
0x000122da      660f1f440000   nop word [rax + rax]
0x000122e0      488b7d18       mov rdi, qword [rbp + 0x18]
0x000122e4      e8b705ffff     call sym.imp.closedir
0x000122e9      837c245803     cmp dword [rsp + 0x58], 3
0x000122ee      48c745180000.  mov qword [rbp + 0x18], 0
0x000122f6      0f841f020000   je 0x1251b
0x000122fc      48c744241000.  mov qword [rsp + 0x10], 0
0x00012305      488b5c2468     mov rbx, qword [rsp + 0x68]
0x0001230a      6448331c2528.  xor rbx, qword fs:[0x28]
0x00012313      488b442410     mov rax, qword [rsp + 0x10]
0x00012318      0f85d3030000   jne 0x126f1
0x0001231e      4883c478       add rsp, 0x78                           ; ../coreutils-8.31/lib/fts.c:1011
0x00012322      5b             pop rbx
0x00012323      5d             pop rbp
0x00012324      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:1010
0x00012326      415d           pop r13
0x00012328      415e           pop r14
0x0001232a      415f           pop r15
0x0001232c      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:1014
0x0001232d      0f1f00         nop dword [rax]
0x00012330      498d5f58       lea rbx, [r15 + 0x58]
0x00012334      4889ea         mov rdx, rbp
0x00012337      4889de         mov rsi, rbx
0x0001233a      e841f9ffff     call sym.leave_dir.isra.12              ; ../coreutils-8.31/lib/fts.c:1012
0x0001233f      31d2           xor edx, edx
0x00012341      4889ee         mov rsi, rbp
0x00012344      4c89ff         mov rdi, r15
0x00012347      e874eeffff     call sym.fts_stat
0x0001234c      418b7f48       mov edi, dword [r15 + 0x48]             ; ../coreutils-8.31/lib/fts.c:994
0x00012350      4889ea         mov rdx, rbp
0x00012353      4889de         mov rsi, rbx
0x00012356      e875f8ffff     call sym.enter_dir.isra.10
0x0001235b      84c0           test al, al
0x0001235d      0f85affeffff   jne 0x12212
0x00012363      e83802ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1004
0x00012368      48c744241000.  mov qword [rsp + 0x10], 0
0x00012371      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00012377      eb8c           jmp 0x12305
0x00012379      0f1f80000000.  nop dword [rax]
0x00012380      c644245e00     mov byte [rsp + 0x5e], 0
0x00012385      e971fbffff     jmp 0x11efb
0x0001238a      660f1f440000   nop word [rax + rax]
0x00012390      4c89ef         mov rdi, r13
0x00012393      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00012398      418b1c24       mov ebx, dword [r12]
0x0001239c      e8df08ffff     call sym..plt.got
0x000123a1      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000123a6      e885f1ffff     call sym.fts_lfree
0x000123ab      488b7d18       mov rdi, qword [rbp + 0x18]
0x000123af      e8ec04ffff     call sym.imp.closedir
0x000123b4      41b907000000   mov r9d, 7                              ; ../coreutils-8.31/lib/fts.c:1006
0x000123ba      48c745180000.  mov qword [rbp + 0x18], 0
0x000123c2      48c744241000.  mov qword [rsp + 0x10], 0
0x000123cb      6644894d70     mov word [rbp + 0x70], r9w
0x000123d0      41814f480020.  or dword [r15 + 0x48], reloc.utimes     ; [0x2000:4]=0x21be08 reloc.utimes
0x000123d8      41891c24       mov dword [r12], ebx
0x000123dc      e924ffffff     jmp 0x12305
0x000123e1      0f1f80000000.  nop dword [rax]
0x000123e8      4889c5         mov rbp, rax
0x000123eb      807c245d00     cmp byte [rsp + 0x5d], 0
0x000123f0      0f8562fcffff   jne 0x12058
0x000123f6      41f6474804     test byte [r15 + 0x48], 4
0x000123fb      741e           je 0x1241b
0x000123fd      488b442418     mov rax, qword [rsp + 0x18]
0x00012402      49394730       cmp qword [r15 + 0x30], rax
0x00012406      7405           je 0x1240d                              ; ../coreutils-8.31/lib/fts.c:849
0x00012408      4885db         test rbx, rbx
0x0001240b      7506           jne 0x12413
0x0001240d      48836c244001   sub qword [rsp + 0x40], 1
0x00012413      488b442440     mov rax, qword [rsp + 0x40]
0x00012418      c60000         mov byte [rax], 0
0x0001241b      48837c245000   cmp qword [rsp + 0x50], 0
0x00012421      756d           jne 0x12490
0x00012423      807c245f00     cmp byte [rsp + 0x5f], 0
0x00012428      7466           je 0x12490
0x0001242a      837c245801     cmp dword [rsp + 0x58], 1
0x0001242f      743f           je 0x12470
0x00012431      4885db         test rbx, rbx
0x00012434      743a           je 0x12470
0x00012436      807c245e00     cmp byte [rsp + 0x5e], 0
0x0001243b      0f85f7000000   jne 0x12538
0x00012441      49837f4000     cmp qword [r15 + 0x40], 0
0x00012446      0f84b9feffff   je 0x12305
0x0001244c      4883fb01       cmp rbx, 1
0x00012450      0f84affeffff   je 0x12305
0x00012456      488b742410     mov rsi, qword [rsp + 0x10]
0x0001245b      4889da         mov rdx, rbx
0x0001245e      4c89ff         mov rdi, r15
0x00012461      e82aefffff     call sym.fts_sort
0x00012466      4889442410     mov qword [rsp + 0x10], rax
0x0001246b      e995feffff     jmp 0x12305
0x00012470      48837d5800     cmp qword [rbp + 0x58], 0
0x00012475      0f852b010000   jne 0x125a6
0x0001247b      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/fts.c:897
0x0001247e      e84df3ffff     call sym.restore_initial_cwd
0x00012483      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:896
0x00012485      0f95c0         setne al
0x00012488      84c0           test al, al
0x0001248a      0f8583010000   jne 0x12613
0x00012490      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/fts.c:632
0x00012493      75a1           jne 0x12436
0x00012495      837c245803     cmp dword [rsp + 0x58], 3
0x0001249a      0f84b8010000   je 0x12658
0x000124a0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000124a5      e886f0ffff     call sym.fts_lfree
0x000124aa      48c744241000.  mov qword [rsp + 0x10], 0
0x000124b3      e94dfeffff     jmp 0x12305
0x000124b8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fts.c:607
0x000124c0      418b0424       mov eax, dword [r12]
0x000124c4      488b6c2420     mov rbp, qword [rsp + 0x20]
0x000124c9      85c0           test eax, eax
0x000124cb      7421           je 0x124ee
0x000124cd      4885db         test rbx, rbx
0x000124d0      894540         mov dword [rbp + 0x40], eax
0x000124d3      0f8530010000   jne 0x12609
0x000124d9      48837c245000   cmp qword [rsp + 0x50], 0
0x000124df      b804000000     mov eax, 4
0x000124e4      0f851f010000   jne 0x12609
0x000124ea      66894570       mov word [rbp + 0x70], ax
0x000124ee      488b7d18       mov rdi, qword [rbp + 0x18]
0x000124f2      4885ff         test rdi, rdi
0x000124f5      0f84f0feffff   je 0x123eb
0x000124fb      e8a003ffff     call sym.imp.closedir
0x00012500      48c745180000.  mov qword [rbp + 0x18], 0
0x00012508      e9defeffff     jmp 0x123eb
0x0001250d      0f1f00         nop dword [rax]
0x00012510      837c245803     cmp dword [rsp + 0x58], 3
0x00012515      0f85e1fdffff   jne 0x122fc
0x0001251b      41ba04000000   mov r10d, 4
0x00012521      6644895570     mov word [rbp + 0x70], r10w
0x00012526      e87500ffff     call sym.imp.__errno_location
0x0001252b      8b00           mov eax, dword [rax]
0x0001252d      894540         mov dword [rbp + 0x40], eax
0x00012530      e9c7fdffff     jmp 0x122fc
0x00012535      0f1f00         nop dword [rax]
0x00012538      488d0551ecff.  lea rax, sym.fts_compare_ino            ; 0x11190 ; "H\x8b\x17H\x8b\x06H\x8b\x80\x80"
0x0001253f      488b742410     mov rsi, qword [rsp + 0x10]
0x00012544      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/fts.c:880
0x00012547      4c89ff         mov rdi, r15
0x0001254a      49894740       mov qword [r15 + 0x40], rax
0x0001254e      e83deeffff     call sym.fts_sort
0x00012553      49c747400000.  mov qword [r15 + 0x40], 0
0x0001255b      4889442410     mov qword [rsp + 0x10], rax
0x00012560      e9a0fdffff     jmp 0x12305
0x00012565      0f1f00         nop dword [rax]
0x00012568      48c7442438a0.  mov qword [rsp + 0x38], 0x186a0         ; [0x186a0:8]=0x483200e44038618
0x00012571      c644245f01     mov byte [rsp + 0x5f], 1
0x00012576      418b7f48       mov edi, dword [r15 + 0x48]
0x0001257a      e92cf8ffff     jmp 0x11dab
0x0001257f      90             nop
0x00012580      c644245f00     mov byte [rsp + 0x5f], 0                ; ../coreutils-8.31/lib/fts.c:888
0x00012585      418b7f48       mov edi, dword [r15 + 0x48]
0x00012589      e91df8ffff     jmp 0x11dab
0x0001258e      6690           nop
0x00012590      31d2           xor edx, edx
0x00012592      4889ee         mov rsi, rbp
0x00012595      4c89ff         mov rdi, r15
0x00012598      e823ecffff     call sym.fts_stat                       ; ../coreutils-8.31/lib/fts.c:889
0x0001259d      66894570       mov word [rbp + 0x70], ax
0x000125a1      e96cfcffff     jmp 0x12212
0x000125a6      488b7508       mov rsi, qword [rbp + 8]                ; ../coreutils-8.31/lib/fts.c:665
0x000125aa      488d0d3a3500.  lea rcx, [0x00015aeb]                   ; ".."
0x000125b1      baffffffff     mov edx, 0xffffffff                     ; -1
0x000125b6      4c89ff         mov rdi, r15
0x000125b9      e892f3ffff     call sym.fts_safe_changedir
0x000125be      85c0           test eax, eax
0x000125c0      0f95c0         setne al
0x000125c3      e9c0feffff     jmp 0x12488
0x000125c8      31c9           xor ecx, ecx
0x000125ca      89c2           mov edx, eax
0x000125cc      4889ee         mov rsi, rbp
0x000125cf      4c89ff         mov rdi, r15
0x000125d2      e879f3ffff     call sym.fts_safe_changedir
0x000125d7      85c0           test eax, eax
0x000125d9      0f8589fcffff   jne 0x12268
0x000125df      e9bef7ffff     jmp 0x11da2
0x000125e4      4883bd880000.  cmp qword [rbp + 0x88], 2
0x000125ec      0f8555fcffff   jne 0x12247
0x000125f2      89c6           mov esi, eax
0x000125f4      4889ef         mov rdi, rbp
0x000125f7      e8f4f0ffff     call sym.leaf_optimization
0x000125fc      85c0           test eax, eax
0x000125fe      757e           jne 0x1267e
0x00012600      8b442464       mov eax, dword [rsp + 0x64]
0x00012604      e93efcffff     jmp 0x12247
0x00012609      b807000000     mov eax, 7
0x0001260e      e9d7feffff     jmp 0x124ea
0x00012613      bf07000000     mov edi, 7
0x00012618      66897d70       mov word [rbp + 0x70], di
0x0001261c      41814f480020.  or dword [r15 + 0x48], reloc.utimes     ; [0x2000:4]=0x21be08 reloc.utimes
0x00012624      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00012629      e802efffff     call sym.fts_lfree
0x0001262e      48c744241000.  mov qword [rsp + 0x10], 0
0x00012637      e9c9fcffff     jmp 0x12305
0x0001263c      89c7           mov edi, eax
0x0001263e      ba03000000     mov edx, 3
0x00012643      be06040000     mov esi, 0x406
0x00012648      31c0           xor eax, eax
0x0001264a      e8e1240000     call sym.rpl_fcntl                      ; ../coreutils-8.31/lib/fts.c:-617
0x0001264f      89442464       mov dword [rsp + 0x64], eax
0x00012653      e908fcffff     jmp 0x12260
0x00012658      0fb74570       movzx eax, word [rbp + 0x70]            ; ../coreutils-8.31/lib/fts.c:1018
0x0001265c      6683f807       cmp ax, 7                               ; ../coreutils-8.31/lib/fts.c:-620
0x00012660      0f843afeffff   je 0x124a0
0x00012666      6683f804       cmp ax, 4                               ; ../coreutils-8.31/lib/fts.c:1018
0x0001266a      0f8430feffff   je 0x124a0
0x00012670      be06000000     mov esi, 6
0x00012675      66897570       mov word [rbp + 0x70], si
0x00012679      e922feffff     jmp 0x124a0                             ; ../coreutils-8.31/lib/fts.c:1019
0x0001267e      837c245803     cmp dword [rsp + 0x58], 3
0x00012683      0f85f7feffff   jne 0x12580
0x00012689      8b442464       mov eax, dword [rsp + 0x64]
0x0001268d      4531e4         xor r12d, r12d
0x00012690      bb01000000     mov ebx, 1
0x00012695      e9bbfbffff     jmp 0x12255
0x0001269a      660f1f440000   nop word [rax + rax]
0x000126a0      4c89ef         mov rdi, r13
0x000126a3      488b6c2420     mov rbp, qword [rsp + 0x20]
0x000126a8      e8d305ffff     call sym..plt.got
0x000126ad      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000126b2      e879eeffff     call sym.fts_lfree
0x000126b7      488b7d18       mov rdi, qword [rbp + 0x18]
0x000126bb      e8e001ffff     call sym.imp.closedir
0x000126c0      41b807000000   mov r8d, 7
0x000126c6      48c745180000.  mov qword [rbp + 0x18], 0
0x000126ce      48c744241000.  mov qword [rsp + 0x10], 0
0x000126d7      6644894570     mov word [rbp + 0x70], r8w
0x000126dc      41814f480020.  or dword [r15 + 0x48], reloc.utimes     ; [0x2000:4]=0x21be08 reloc.utimes
0x000126e4      41c704242400.  mov dword [r12], 0x24                   ; '$'
                                                                       ; [0x24:4]=0
0x000126ec      e914fcffff     jmp 0x12305
0x000126f1      e88a00ffff     call sym.imp.__stack_chk_fail
0x000126f6      488d05c34c00.  lea rax, obj.CSWTCH.53                  ; 0x173c0
0x000126fd      8b0490         mov eax, dword [rax + rdx*4]
0x00012700      418985900000.  mov dword [r13 + 0x90], eax
0x00012707      b801000000     mov eax, 1
0x0001270c      e9b9f7ffff     jmp 0x11eca
0x00012711      0f1f440000     nop dword [rax + rax]
0x00012716      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_fts_open:
0x00012720      4157           push r15
0x00012722      4156           push r14
0x00012724      4155           push r13
0x00012726      4154           push r12
0x00012728      55             push rbp
0x00012729      53             push rbx
0x0001272a      4883ec28       sub rsp, 0x28
0x0001272e      f7c600f0ffff   test esi, 0xfffff000
0x00012734      0f857e030000   jne 0x12ab8
0x0001273a      89f0           mov eax, esi
0x0001273c      89f5           mov ebp, esi
0x0001273e      2504020000     and eax, 0x204
0x00012743      3d04020000     cmp eax, 0x204
0x00012748      0f846a030000   je 0x12ab8
0x0001274e      40f6c612       test sil, 0x12
0x00012752      0f8460030000   je 0x12ab8
0x00012758      4989fd         mov r13, rdi
0x0001275b      be01000000     mov esi, 1
0x00012760      bf80000000     mov edi, 0x80
0x00012765      4989d6         mov r14, rdx
0x00012768      e8a301ffff     call sym.imp.calloc
0x0001276d      4885c0         test rax, rax
0x00012770      4889c3         mov rbx, rax
0x00012773      0f8455020000   je 0x129ce
0x00012779      40f6c502       test bpl, 2
0x0001277d      4c897040       mov qword [rax + 0x40], r14
0x00012781      0f8559020000   jne 0x129e0
0x00012787      498b7d00       mov rdi, qword [r13]
0x0001278b      896848         mov dword [rax + 0x48], ebp
0x0001278e      c7432c9cffff.  mov dword [rbx + 0x2c], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x00012795      4885ff         test rdi, rdi
0x00012798      0f8461020000   je 0x129ff
0x0001279e      4d89ef         mov r15, r13
0x000127a1      4531e4         xor r12d, r12d
0x000127a4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/fts.c:-683
0x000127a8      e8a3fffeff     call sym.imp.strlen
0x000127ad      4939c4         cmp r12, rax
0x000127b0      4c0f42e0       cmovb r12, rax
0x000127b4      4983c708       add r15, 8
0x000127b8      498b3f         mov rdi, qword [r15]
0x000127bb      4885ff         test rdi, rdi
0x000127be      75e8           jne 0x127a8
0x000127c0      498d542401     lea rdx, [r12 + 1]
0x000127c5      b800100000     mov eax, 0x1000
0x000127ca      4881fa001000.  cmp rdx, 0x1000
0x000127d1      480f42d0       cmovb rdx, rax
0x000127d5      488d7330       lea rsi, [rbx + 0x30]
0x000127d9      488d7b20       lea rdi, [rbx + 0x20]
0x000127dd      e84ef0ffff     call sym.fts_palloc.isra.2
0x000127e2      84c0           test al, al
0x000127e4      88442416       mov byte [rsp + 0x16], al
0x000127e8      0f849b020000   je 0x12a89
0x000127ee      498b7500       mov rsi, qword [r13]
0x000127f2      4885f6         test rsi, rsi
0x000127f5      0f84a5020000   je 0x12aa0
0x000127fb      488d358a3f00.  lea rsi, [0x0001678c]
0x00012802      31d2           xor edx, edx
0x00012804      4889df         mov rdi, rbx
0x00012807      e894ecffff     call sym.fts_alloc
0x0001280c      4885c0         test rax, rax
0x0001280f      4989c7         mov r15, rax
0x00012812      0f8468020000   je 0x12a80
0x00012818      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0001281f      4d85f6         test r14, r14
0x00012822      498b7500       mov rsi, qword [r13]
0x00012826      49894758       mov qword [r15 + 0x58], rax
0x0001282a      49894768       mov qword [r15 + 0x68], rax
0x0001282e      740d           je 0x1283d
0x00012830      8b4348         mov eax, dword [rbx + 0x48]
0x00012833      c1e80a         shr eax, 0xa
0x00012836      83e001         and eax, 1
0x00012839      88442416       mov byte [rsp + 0x16], al               ; ../coreutils-8.31/lib/fts.c:-626
0x0001283d      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/fts.c:-629
0x00012840      0f8466020000   je 0x12aac
0x00012846      c1ed0b         shr ebp, 0xb
0x00012849      48c744241800.  mov qword [rsp + 0x18], 0
0x00012852      4531e4         xor r12d, r12d
0x00012855      83f501         xor ebp, 1
0x00012858      89e8           mov eax, ebp
0x0001285a      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/fts.c:-616
0x0001285c      83e001         and eax, 1
0x0001285f      88442417       mov byte [rsp + 0x17], al
0x00012863      eb77           jmp 0x128dc
0x00012865      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/fts.c:-615
0x00012868      4889c2         mov rdx, rax
0x0001286b      4889df         mov rdi, rbx
0x0001286e      e82decffff     call sym.fts_alloc
0x00012873      4885c0         test rax, rax
0x00012876      4889c1         mov rcx, rax
0x00012879      0f84f1010000   je 0x12a70
0x0001287f      48c740580000.  mov qword [rax + 0x58], 0
0x00012887      4c897808       mov qword [rax + 8], r15
0x0001288b      488d80080100.  lea rax, [rax + 0x108]
0x00012892      4d85e4         test r12, r12
0x00012895      48894130       mov qword [rcx + 0x30], rax
0x00012899      0f8471010000   je 0x12a10
0x0001289f      807c241600     cmp byte [rsp + 0x16], 0
0x000128a4      0f8466010000   je 0x12a10
0x000128aa      be0b000000     mov esi, 0xb
0x000128af      4d85f6         test r14, r14
0x000128b2      48c781a80000.  mov qword [rcx + 0xa8], 2
0x000128bd      66897170       mov word [rcx + 0x70], si
0x000128c1      0f8489010000   je 0x12a50                              ; ../coreutils-8.31/lib/fts.c:876
0x000128c7      4c896110       mov qword [rcx + 0x10], r12
0x000128cb      4989cc         mov r12, rcx
0x000128ce      4883c501       add rbp, 1
0x000128d2      498b74ed00     mov rsi, qword [r13 + rbp*8]
0x000128d7      4885f6         test rsi, rsi
0x000128da      7454           je 0x12930
0x000128dc      4889f7         mov rdi, rsi
0x000128df      4889742408     mov qword [rsp + 8], rsi
0x000128e4      e867fefeff     call sym.imp.strlen
0x000128e9      4883f802       cmp rax, 2
0x000128ed      488b742408     mov rsi, qword [rsp + 8]
0x000128f2      0f8670ffffff   jbe 0x12868                             ; ../coreutils-8.31/lib/fts.c:-659
0x000128f8      807c241700     cmp byte [rsp + 0x17], 0
0x000128fd      0f8465ffffff   je 0x12868
0x00012903      807c06ff2f     cmp byte [rsi + rax - 1], 0x2f
0x00012908      0f855affffff   jne 0x12868
0x0001290e      6690           nop
0x00012910      807c06fe2f     cmp byte [rsi + rax - 2], 0x2f
0x00012915      0f854dffffff   jne 0x12868
0x0001291b      4883e801       sub rax, 1
0x0001291f      4883f801       cmp rax, 1
0x00012923      75eb           jne 0x12910
0x00012925      e93effffff     jmp 0x12868
0x0001292a      660f1f440000   nop word [rax + rax]
0x00012930      4d85f6         test r14, r14
0x00012933      7417           je 0x1294c
0x00012935      4883fd01       cmp rbp, 1
0x00012939      7611           jbe 0x1294c
0x0001293b      4c89e6         mov rsi, r12
0x0001293e      4889ea         mov rdx, rbp
0x00012941      4889df         mov rdi, rbx
0x00012944      e847eaffff     call sym.fts_sort
0x00012949      4989c4         mov r12, rax
0x0001294c      488d35393e00.  lea rsi, [0x0001678c]
0x00012953      31d2           xor edx, edx
0x00012955      4889df         mov rdi, rbx
0x00012958      e843ebffff     call sym.fts_alloc
0x0001295d      4885c0         test rax, rax
0x00012960      488903         mov qword [rbx], rax
0x00012963      0f8407010000   je 0x12a70
0x00012969      8b7b48         mov edi, dword [rbx + 0x48]
0x0001296c      ba09000000     mov edx, 9
0x00012971      488d7358       lea rsi, [rbx + 0x58]
0x00012975      4c896010       mov qword [rax + 0x10], r12
0x00012979      66895070       mov word [rax + 0x70], dx               ; ../coreutils-8.31/lib/fts.c:-901
0x0001297d      48c740580100.  mov qword [rax + 0x58], 1
0x00012985      e816efffff     call sym.setup_dir.isra.4
0x0001298a      84c0           test al, al
0x0001298c      0f84de000000   je 0x12a70                              ; ../coreutils-8.31/lib/fts.c:-707
0x00012992      8b7348         mov esi, dword [rbx + 0x48]
0x00012995      f7c604020000   test esi, 0x204
0x0001299b      7523           jne 0x129c0                             ; ../coreutils-8.31/lib/fts.c:-697
0x0001299d      8b7b2c         mov edi, dword [rbx + 0x2c]
0x000129a0      488d15453100.  lea rdx, [0x00015aec]                   ; "."
0x000129a7      e864efffff     call sym.diropen.isra.6
0x000129ac      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:-694
0x000129ae      894328         mov dword [rbx + 0x28], eax
0x000129b1      790d           jns 0x129c0                             ; ../coreutils-8.31/lib/fts.c:-697
0x000129b3      834b4804       or dword [rbx + 0x48], 4
0x000129b7      660f1f840000.  nop word [rax + rax]
0x000129c0      488d7b60       lea rdi, [rbx + 0x60]
0x000129c4      beffffffff     mov esi, 0xffffffff                     ; ../coreutils-8.31/lib/fts.c:-695 ; -1
0x000129c9      e8e2120000     call sym.i_ring_init
0x000129ce      4883c428       add rsp, 0x28
0x000129d2      4889d8         mov rax, rbx
0x000129d5      5b             pop rbx
0x000129d6      5d             pop rbp
0x000129d7      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:-692
0x000129d9      415d           pop r13
0x000129db      415e           pop r14
0x000129dd      415f           pop r15
0x000129df      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:-688
0x000129e0      498b7d00       mov rdi, qword [r13]
0x000129e4      89e8           mov eax, ebp
0x000129e6      c7432c9cffff.  mov dword [rbx + 0x2c], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x000129ed      80e4fd         and ah, 0xfd                            ; ../coreutils-8.31/lib/fts.c:-686
0x000129f0      83c804         or eax, 4
0x000129f3      4885ff         test rdi, rdi
0x000129f6      894348         mov dword [rbx + 0x48], eax             ; ../coreutils-8.31/lib/fts.c:-685
0x000129f9      0f859ffdffff   jne 0x1279e
0x000129ff      ba00100000     mov edx, 0x1000                         ; ../coreutils-8.31/lib/fts.c:-683
0x00012a04      e9ccfdffff     jmp 0x127d5
0x00012a09      0f1f80000000.  nop dword [rax]
0x00012a10      31d2           xor edx, edx
0x00012a12      4889ce         mov rsi, rcx                            ; ../coreutils-8.31/lib/fts.c:-705
0x00012a15      4889df         mov rdi, rbx
0x00012a18      48894c2408     mov qword [rsp + 8], rcx
0x00012a1d      e89ee7ffff     call sym.fts_stat                       ; ../coreutils-8.31/lib/fts.c:-662
0x00012a22      488b4c2408     mov rcx, qword [rsp + 8]
0x00012a27      4d85f6         test r14, r14
0x00012a2a      66894170       mov word [rcx + 0x70], ax
0x00012a2e      0f8593feffff   jne 0x128c7
0x00012a34      4d85e4         test r12, r12
0x00012a37      48c741100000.  mov qword [rcx + 0x10], 0
0x00012a3f      7517           jne 0x12a58
0x00012a41      48894c2418     mov qword [rsp + 0x18], rcx
0x00012a46      4989cc         mov r12, rcx
0x00012a49      e980feffff     jmp 0x128ce
0x00012a4e      6690           nop
0x00012a50      48c741100000.  mov qword [rcx + 0x10], 0
0x00012a58      488b442418     mov rax, qword [rsp + 0x18]
0x00012a5d      48894c2418     mov qword [rsp + 0x18], rcx
0x00012a62      48894810       mov qword [rax + 0x10], rcx
0x00012a66      e963feffff     jmp 0x128ce
0x00012a6b      0f1f440000     nop dword [rax + rax]
0x00012a70      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/fts.c:-674
0x00012a73      e8b8eaffff     call sym.fts_lfree
0x00012a78      4c89ff         mov rdi, r15
0x00012a7b      e80002ffff     call sym..plt.got
0x00012a80      488b7b20       mov rdi, qword [rbx + 0x20]
0x00012a84      e8f701ffff     call sym..plt.got
0x00012a89      4889df         mov rdi, rbx
0x00012a8c      31db           xor ebx, ebx
0x00012a8e      e8ed01ffff     call sym..plt.got
0x00012a93      e936ffffff     jmp 0x129ce
0x00012a98      0f1f84000000.  nop dword [rax + rax]
0x00012aa0      4531ff         xor r15d, r15d
0x00012aa3      4d85f6         test r14, r14
0x00012aa6      0f8584fdffff   jne 0x12830
0x00012aac      4531e4         xor r12d, r12d
0x00012aaf      e998feffff     jmp 0x1294c
0x00012ab4      0f1f4000       nop dword [rax]
0x00012ab8      e8e3fafeff     call sym.imp.__errno_location
0x00012abd      31db           xor ebx, ebx
0x00012abf      c70016000000   mov dword [rax], 0x16                   ; ../coreutils-8.31/lib/fts.c:-692 ; [0x16:4]=0x34800000
0x00012ac5      e904ffffff     jmp 0x129ce
0x00012aca      660f1f440000   nop word [rax + rax]
;-- rpl_fts_close:
0x00012ad0      4154           push r12
0x00012ad2      55             push rbp
0x00012ad3      4889fd         mov rbp, rdi
0x00012ad6      53             push rbx
0x00012ad7      488b3f         mov rdi, qword [rdi]
0x00012ada      4885ff         test rdi, rdi
0x00012add      7444           je 0x12b23
0x00012adf      48837f5800     cmp qword [rdi + 0x58], 0
0x00012ae4      7919           jns 0x12aff
0x00012ae6      e915010000     jmp 0x12c00
0x00012aeb      0f1f440000     nop dword [rax + rax]
0x00012af0      e88b01ffff     call sym..plt.got
0x00012af5      48837b5800     cmp qword [rbx + 0x58], 0
0x00012afa      4889df         mov rdi, rbx
0x00012afd      781c           js 0x12b1b                              ; ../coreutils-8.31/lib/fts.c:-652
0x00012aff      488b5f10       mov rbx, qword [rdi + 0x10]
0x00012b03      4885db         test rbx, rbx
0x00012b06      75e8           jne 0x12af0
0x00012b08      488b5f08       mov rbx, qword [rdi + 8]
0x00012b0c      e86f01ffff     call sym..plt.got
0x00012b11      48837b5800     cmp qword [rbx + 0x58], 0
0x00012b16      4889df         mov rdi, rbx
0x00012b19      79e4           jns 0x12aff
0x00012b1b      4889df         mov rdi, rbx
0x00012b1e      e85d01ffff     call sym..plt.got
0x00012b23      488b7d08       mov rdi, qword [rbp + 8]
0x00012b27      4885ff         test rdi, rdi
0x00012b2a      7405           je 0x12b31
0x00012b2c      e8ffe9ffff     call sym.fts_lfree
0x00012b31      488b7d10       mov rdi, qword [rbp + 0x10]
0x00012b35      e84601ffff     call sym..plt.got
0x00012b3a      488b7d20       mov rdi, qword [rbp + 0x20]
0x00012b3e      e83d01ffff     call sym..plt.got
0x00012b43      8b4548         mov eax, dword [rbp + 0x48]
0x00012b46      f6c402         test ah, 2
0x00012b49      7465           je 0x12bb0
0x00012b4b      8b7d2c         mov edi, dword [rbp + 0x2c]
0x00012b4e      85ff           test edi, edi
0x00012b50      0f898a000000   jns 0x12be0
0x00012b56      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:-398
0x00012b58      488d7d60       lea rdi, [rbp + 0x60]
0x00012b5c      e81feaffff     call sym.fd_ring_clear
0x00012b61      488b7d50       mov rdi, qword [rbp + 0x50]
0x00012b65      4885ff         test rdi, rdi
0x00012b68      7405           je 0x12b6f
0x00012b6a      e8d196ffff     call sym.hash_free
0x00012b6f      f74548020100.  test dword [rbp + 0x48], 0x102          ; ../coreutils-8.31/lib/fts.c:-413
0x00012b76      488b7d58       mov rdi, qword [rbp + 0x58]
0x00012b7a      7424           je 0x12ba0
0x00012b7c      4885ff         test rdi, rdi
0x00012b7f      7405           je 0x12b86
0x00012b81      e8ba96ffff     call sym.hash_free
0x00012b86      4889ef         mov rdi, rbp
0x00012b89      e8f200ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:-455
0x00012b8e      85db           test ebx, ebx
0x00012b90      0f85ab000000   jne 0x12c41
0x00012b96      89d8           mov eax, ebx
0x00012b98      5b             pop rbx
0x00012b99      5d             pop rbp
0x00012b9a      415c           pop r12
0x00012b9c      c3             ret
0x00012b9d      0f1f00         nop dword [rax]
0x00012ba0      e8db00ffff     call sym..plt.got
0x00012ba5      ebdf           jmp 0x12b86
0x00012ba7      660f1f840000.  nop word [rax + rax]
0x00012bb0      a804           test al, 4
0x00012bb2      75a2           jne 0x12b56
0x00012bb4      8b7d28         mov edi, dword [rbp + 0x28]
0x00012bb7      e8a4fefeff     call sym.imp.fchdir                     ; ../coreutils-8.31/lib/fts.c:-449
0x00012bbc      85c0           test eax, eax
0x00012bbe      7550           jne 0x12c10
0x00012bc0      8b7d28         mov edi, dword [rbp + 0x28]
0x00012bc3      e8a8fcfeff     call sym.imp.close                      ; ../coreutils-8.31/lib/fts.c:-448
0x00012bc8      85c0           test eax, eax
0x00012bca      748a           je 0x12b56
0x00012bcc      e8cff9feff     call sym.imp.__errno_location
0x00012bd1      4989c4         mov r12, rax
0x00012bd4      eb62           jmp 0x12c38
0x00012bd6      662e0f1f8400.  nop word cs:[rax + rax]
0x00012be0      e88bfcfeff     call sym.imp.close
0x00012be5      85c0           test eax, eax
0x00012be7      0f8469ffffff   je 0x12b56
0x00012bed      e8aef9feff     call sym.imp.__errno_location
0x00012bf2      8b18           mov ebx, dword [rax]
0x00012bf4      e95fffffff     jmp 0x12b58
0x00012bf9      0f1f80000000.  nop dword [rax]
0x00012c00      4889fb         mov rbx, rdi
0x00012c03      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:-429
0x00012c06      e87500ffff     call sym..plt.got
0x00012c0b      e913ffffff     jmp 0x12b23
0x00012c10      e88bf9feff     call sym.imp.__errno_location
0x00012c15      8b7d28         mov edi, dword [rbp + 0x28]             ; ../coreutils-8.31/lib/fts.c:-664
0x00012c18      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/fts.c:-665
0x00012c1b      8b18           mov ebx, dword [rax]
0x00012c1d      e84efcfeff     call sym.imp.close
0x00012c22      85c0           test eax, eax
0x00012c24      0f842effffff   je 0x12b58
0x00012c2a      85db           test ebx, ebx
0x00012c2c      0f8526ffffff   jne 0x12b58
0x00012c32      660f1f440000   nop word [rax + rax]
0x00012c38      418b1c24       mov ebx, dword [r12]
0x00012c3c      e917ffffff     jmp 0x12b58
0x00012c41      e85af9feff     call sym.imp.__errno_location
0x00012c46      8918           mov dword [rax], ebx
0x00012c48      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00012c4d      e944ffffff     jmp 0x12b96
0x00012c52      0f1f4000       nop dword [rax]
0x00012c56      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_fts_read:
0x00012c60      4156           push r14
0x00012c62      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:-640
0x00012c64      4154           push r12
0x00012c66      55             push rbp
0x00012c67      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:-641
0x00012c68      488b2f         mov rbp, qword [rdi]
0x00012c6b      4885ed         test rbp, rbp
0x00012c6e      0f840a010000   je 0x12d7e
0x00012c74      8b5748         mov edx, dword [rdi + 0x48]
0x00012c77      f6c620         test dh, 0x20                           ; ../coreutils-8.31/lib/fts.c:-640 ; "@"
0x00012c7a      0f85fe000000   jne 0x12d7e
0x00012c80      0fb74574       movzx eax, word [rbp + 0x74]
0x00012c84      bb03000000     mov ebx, 3
0x00012c89      4989fc         mov r12, rdi
0x00012c8c      66895d74       mov word [rbp + 0x74], bx
0x00012c90      6683f801       cmp ax, 1
0x00012c94      0f8446020000   je 0x12ee0
0x00012c9a      6683f802       cmp ax, 2
0x00012c9e      0fb74d70       movzx ecx, word [rbp + 0x70]
0x00012ca2      0f84e8000000   je 0x12d90                              ; ../coreutils-8.31/lib/fts.c:-662
0x00012ca8      6683f901       cmp cx, 1
0x00012cac      7532           jne 0x12ce0
0x00012cae      e91d020000     jmp 0x12ed0
0x00012cb3      0f1f440000     nop dword [rax + rax]
0x00012cb8      49891c24       mov qword [r12], rbx                    ; ../coreutils-8.31/lib/fts.c:-525
0x00012cbc      4889ef         mov rdi, rbp
0x00012cbf      e8bcfffeff     call sym..plt.got
0x00012cc4      48837b5800     cmp qword [rbx + 0x58], 0
0x00012cc9      0f8431020000   je 0x12f00
0x00012ccf      0fb74374       movzx eax, word [rbx + 0x74]
0x00012cd3      4889dd         mov rbp, rbx
0x00012cd6      6683f804       cmp ax, 4
0x00012cda      0f8528030000   jne 0x13008
0x00012ce0      488b5d10       mov rbx, qword [rbp + 0x10]
0x00012ce4      4885db         test rbx, rbx
0x00012ce7      75cf           jne 0x12cb8
0x00012ce9      488b5d08       mov rbx, qword [rbp + 8]
0x00012ced      48837b1800     cmp qword [rbx + 0x18], 0
0x00012cf2      0f8568050000   jne 0x13260
0x00012cf8      49891c24       mov qword [r12], rbx
0x00012cfc      4889ef         mov rdi, rbp
0x00012cff      e87cfffeff     call sym..plt.got
0x00012d04      48837b58ff     cmp qword [rbx + 0x58], 0xffffffffffffffff
0x00012d09      0f84b3040000   je 0x131c2
0x00012d0f      66837b700b     cmp word [rbx + 0x70], 0xb
0x00012d14      0f8435010000   je 0x12e4f
0x00012d1a      498b542420     mov rdx, qword [r12 + 0x20]
0x00012d1f      488b4348       mov rax, qword [rbx + 0x48]             ; ../coreutils-8.31/lib/fts.c:-613
0x00012d23      c6040200       mov byte [rdx + rax], 0
0x00012d27      48837b5800     cmp qword [rbx + 0x58], 0
0x00012d2c      0f84be030000   je 0x130f0
0x00012d32      0fb74372       movzx eax, word [rbx + 0x72]
0x00012d36      a802           test al, 2
0x00012d38      0f846a030000   je 0x130a8
0x00012d3e      418b442448     mov eax, dword [r12 + 0x48]
0x00012d43      8b7b44         mov edi, dword [rbx + 0x44]
0x00012d46      a804           test al, 4
0x00012d48      0f84fe030000   je 0x1314c
0x00012d4e      e81dfbfeff     call sym.imp.close
0x00012d53      418b7c2448     mov edi, dword [r12 + 0x48]
0x00012d58      66837b7002     cmp word [rbx + 0x70], 2
0x00012d5d      7414           je 0x12d73
0x00012d5f      8b4b40         mov ecx, dword [rbx + 0x40]
0x00012d62      85c9           test ecx, ecx
0x00012d64      0f849e030000   je 0x13108
0x00012d6a      ba07000000     mov edx, 7
0x00012d6f      66895370       mov word [rbx + 0x70], dx
0x00012d73      81e700200000   and edi, 0x2000                         ; ../coreutils-8.31/lib/fts.c:-428
0x00012d79      4889dd         mov rbp, rbx
0x00012d7c      747c           je 0x12dfa
0x00012d7e      31ed           xor ebp, ebp
0x00012d80      5b             pop rbx
0x00012d81      4889e8         mov rax, rbp
0x00012d84      5d             pop rbp
0x00012d85      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:-559
0x00012d87      415d           pop r13
0x00012d89      415e           pop r14
0x00012d8b      c3             ret
0x00012d8c      0f1f4000       nop dword [rax]
0x00012d90      8d41f4         lea eax, [rcx - 0xc]
0x00012d93      6683f801       cmp ax, 1
0x00012d97      7677           jbe 0x12e10
0x00012d99      6683f901       cmp cx, 1
0x00012d9d      0f853dffffff   jne 0x12ce0
0x00012da3      f6c240         test dl, 0x40                           ; ../coreutils-8.31/lib/fts-cycle.c:-1395 ; segment.PHDR
0x00012da6      0f84ac000000   je 0x12e58
0x00012dac      498b442418     mov rax, qword [r12 + 0x18]
0x00012db1      48394578       cmp qword [rbp + 0x78], rax
0x00012db5      0f849d000000   je 0x12e58
0x00012dbb      f6457202       test byte [rbp + 0x72], 2
0x00012dbf      0f85db040000   jne 0x132a0
0x00012dc5      498b7c2408     mov rdi, qword [r12 + 8]
0x00012dca      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:-985
0x00012dcd      740e           je 0x12ddd
0x00012dcf      e85ce7ffff     call sym.fts_lfree
0x00012dd4      49c744240800.  mov qword [r12 + 8], 0
0x00012ddd      418b7c2448     mov edi, dword [r12 + 0x48]
0x00012de2      41ba06000000   mov r10d, 6
0x00012de8      498d742458     lea rsi, [r12 + 0x58]
0x00012ded      6644895570     mov word [rbp + 0x70], r10w
0x00012df2      4889ea         mov rdx, rbp
0x00012df5      e886eeffff     call sym.leave_dir.isra.12
0x00012dfa      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:-982
0x00012dfb      4889e8         mov rax, rbp
0x00012dfe      5d             pop rbp                                 ; ../coreutils-8.31/lib/fts.c:-983
0x00012dff      415c           pop r12
0x00012e01      415d           pop r13                                 ; string_fortified.h:-1508
0x00012e03      415e           pop r14
0x00012e05      c3             ret
0x00012e06      662e0f1f8400.  nop word cs:[rax + rax]
0x00012e10      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/fts.c:-979
0x00012e15      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fts.c:-553
0x00012e18      e8a3e3ffff     call sym.fts_stat
0x00012e1d      6683f801       cmp ax, 1
0x00012e21      66894570       mov word [rbp + 0x70], ax
0x00012e25      0f8441030000   je 0x1316c
0x00012e2b      6683f80b       cmp ax, 0xb
0x00012e2f      49892c24       mov qword [r12], rbp
0x00012e33      75c5           jne 0x12dfa                             ; ../coreutils-8.31/lib/fts.c:-525
0x00012e35      0f1f00         nop dword [rax]
0x00012e38      488b85a80000.  mov rax, qword [rbp + 0xa8]
0x00012e3f      4883f802       cmp rax, 2
0x00012e43      0f849f030000   je 0x131e8
0x00012e49      4883f801       cmp rax, 1
0x00012e4d      74ab           je 0x12dfa
0x00012e4f      e83cf7feff     call sym.imp.abort
0x00012e54      0f1f4000       nop dword [rax]
0x00012e58      498b7c2408     mov rdi, qword [r12 + 8]
0x00012e5d      4885ff         test rdi, rdi
0x00012e60      0f8412020000   je 0x13078
0x00012e66      f6c610         test dh, 0x10
0x00012e69      0f85f3010000   jne 0x13062
0x00012e6f      488b4d30       mov rcx, qword [rbp + 0x30]
0x00012e73      baffffffff     mov edx, 0xffffffff                     ; -1
0x00012e78      4889ee         mov rsi, rbp
0x00012e7b      4c89e7         mov rdi, r12
0x00012e7e      e8cdeaffff     call sym.fts_safe_changedir
0x00012e83      85c0           test eax, eax
0x00012e85      0f84b7020000   je 0x13142
0x00012e8b      e810f7feff     call sym.imp.__errno_location
0x00012e90      8b00           mov eax, dword [rax]
0x00012e92      66834d7201     or word [rbp + 0x72], 1
0x00012e97      894540         mov dword [rbp + 0x40], eax             ; ../coreutils-8.31/lib/fts.c:-530
0x00012e9a      498b6c2408     mov rbp, qword [r12 + 8]
0x00012e9f      4885ed         test rbp, rbp
0x00012ea2      0f84ee010000   je 0x13096
0x00012ea8      4889e8         mov rax, rbp
0x00012eab      0f1f440000     nop dword [rax + rax]
0x00012eb0      488b5008       mov rdx, qword [rax + 8]
0x00012eb4      488b5230       mov rdx, qword [rdx + 0x30]
0x00012eb8      48895030       mov qword [rax + 0x30], rdx
0x00012ebc      488b4010       mov rax, qword [rax + 0x10]             ; ../coreutils-8.31/lib/fts.c:-529
0x00012ec0      4885c0         test rax, rax
0x00012ec3      75eb           jne 0x12eb0
0x00012ec5      e9cc010000     jmp 0x13096
0x00012eca      660f1f440000   nop word [rax + rax]
0x00012ed0      6683f804       cmp ax, 4
0x00012ed4      0f85c9feffff   jne 0x12da3
0x00012eda      e9dcfeffff     jmp 0x12dbb
0x00012edf      90             nop
0x00012ee0      4889ee         mov rsi, rbp
0x00012ee3      31d2           xor edx, edx
0x00012ee5      e8d6e2ffff     call sym.fts_stat
0x00012eea      66894570       mov word [rbp + 0x70], ax
0x00012eee      4889e8         mov rax, rbp
0x00012ef1      5b             pop rbx
0x00012ef2      5d             pop rbp
0x00012ef3      415c           pop r12
0x00012ef5      415d           pop r13
0x00012ef7      415e           pop r14
0x00012ef9      c3             ret
0x00012efa      660f1f440000   nop word [rax + rax]
0x00012f00      4c89e7         mov rdi, r12
0x00012f03      e8c8e8ffff     call sym.restore_initial_cwd
0x00012f08      85c0           test eax, eax
0x00012f0a      0f8501040000   jne 0x13311
0x00012f10      41f744244802.  test dword [r12 + 0x48], 0x102
0x00012f19      498b7c2458     mov rdi, qword [r12 + 0x58]
0x00012f1e      0f8434010000   je 0x13058
0x00012f24      4885ff         test rdi, rdi
0x00012f27      7405           je 0x12f2e
0x00012f29      e81293ffff     call sym.hash_free
0x00012f2e      488b5360       mov rdx, qword [rbx + 0x60]
0x00012f32      488dab080100.  lea rbp, [rbx + 0x108]
0x00012f39      498b7c2420     mov rdi, qword [r12 + 0x20]
0x00012f3e      4889ee         mov rsi, rbp
0x00012f41      48895348       mov qword [rbx + 0x48], rdx
0x00012f45      4883c201       add rdx, 1
0x00012f49      e8b2fbfeff     call sym.imp.memmove
0x00012f4e      be2f000000     mov esi, 0x2f                           ; '/'
0x00012f53      4889ef         mov rdi, rbp
0x00012f56      e885f8feff     call sym.imp.strrchr
0x00012f5b      4885c0         test rax, rax
0x00012f5e      742b           je 0x12f8b
0x00012f60      4839c5         cmp rbp, rax
0x00012f63      0f84c7010000   je 0x13130                              ; ../coreutils-8.31/lib/fts.c:-581
0x00012f69      4c8d6801       lea r13, [rax + 1]
0x00012f6d      4c89ef         mov rdi, r13
0x00012f70      e8dbf7feff     call sym.imp.strlen
0x00012f75      488d5001       lea rdx, [rax + 1]
0x00012f79      4989c6         mov r14, rax
0x00012f7c      4c89ee         mov rsi, r13
0x00012f7f      4889ef         mov rdi, rbp
0x00012f82      e879fbfeff     call sym.imp.memmove
0x00012f87      4c897360       mov qword [rbx + 0x60], r14
0x00012f8b      498b442420     mov rax, qword [r12 + 0x20]
0x00012f90      418b7c2448     mov edi, dword [r12 + 0x48]
0x00012f95      498d742458     lea rsi, [r12 + 0x58]
0x00012f9a      4889dd         mov rbp, rbx
0x00012f9d      48894338       mov qword [rbx + 0x38], rax
0x00012fa1      48894330       mov qword [rbx + 0x30], rax
0x00012fa5      e8f6e8ffff     call sym.setup_dir.isra.4
0x00012faa      0fb74370       movzx eax, word [rbx + 0x70]
0x00012fae      6683f80b       cmp ax, 0xb
0x00012fb2      49892c24       mov qword [r12], rbp
0x00012fb6      0f847cfeffff   je 0x12e38
0x00012fbc      6683f801       cmp ax, 1
0x00012fc0      0f8534feffff   jne 0x12dfa
0x00012fc6      48837d5800     cmp qword [rbp + 0x58], 0
0x00012fcb      7509           jne 0x12fd6
0x00012fcd      488b4578       mov rax, qword [rbp + 0x78]
0x00012fd1      4989442418     mov qword [r12 + 0x18], rax
0x00012fd6      418b7c2448     mov edi, dword [r12 + 0x48]
0x00012fdb      498d742458     lea rsi, [r12 + 0x58]
0x00012fe0      4889ea         mov rdx, rbp
0x00012fe3      e8e8ebffff     call sym.enter_dir.isra.10
0x00012fe8      84c0           test al, al
0x00012fea      0f850afeffff   jne 0x12dfa
0x00012ff0      e8abf5feff     call sym.imp.__errno_location
0x00012ff5      31ed           xor ebp, ebp
0x00012ff7      c7000c000000   mov dword [rax], 0xc                    ; ../coreutils-8.31/lib/fts.c:-735 ; [0xc:4]=0
0x00012ffd      e9f8fdffff     jmp 0x12dfa
0x00013002      660f1f440000   nop word [rax + rax]
0x00013008      6683f802       cmp ax, 2                               ; ../coreutils-8.31/lib/fts.c:-730
0x0001300c      0f849b020000   je 0x132ad
0x00013012      488b4508       mov rax, qword [rbp + 8]
0x00013016      488db5080100.  lea rsi, [rbp + 0x108]
0x0001301d      488b7848       mov rdi, qword [rax + 0x48]
0x00013021      488b4038       mov rax, qword [rax + 0x38]
0x00013025      807c38ff2f     cmp byte [rax + rdi - 1], 0x2f
0x0001302a      488d57ff       lea rdx, [rdi - 1]
0x0001302e      480f44fa       cmove rdi, rdx
0x00013032      49037c2420     add rdi, qword [r12 + 0x20]
0x00013037      c6072f         mov byte [rdi], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x0001303a      488b4560       mov rax, qword [rbp + 0x60]             ; ../coreutils-8.31/lib/fts.c:-598
0x0001303e      4883c701       add rdi, 1
0x00013042      488d5001       lea rdx, [rax + 1]
0x00013046      e8b5fafeff     call sym.imp.memmove
0x0001304b      0fb74570       movzx eax, word [rbp + 0x70]
0x0001304f      e95affffff     jmp 0x12fae
0x00013054      0f1f4000       nop dword [rax]
0x00013058      e823fcfeff     call sym..plt.got
0x0001305d      e9ccfeffff     jmp 0x12f2e
0x00013062      80e6ef         and dh, 0xef
0x00013065      4189542448     mov dword [r12 + 0x48], edx
0x0001306a      e8c1e4ffff     call sym.fts_lfree
0x0001306f      49c744240800.  mov qword [r12 + 8], 0
0x00013078      be03000000     mov esi, 3
0x0001307d      4c89e7         mov rdi, r12
0x00013080      e8bbecffff     call sym.fts_build
0x00013085      4885c0         test rax, rax
0x00013088      4989442408     mov qword [r12 + 8], rax
0x0001308d      0f84f1000000   je 0x13184
0x00013093      4889c5         mov rbp, rax
0x00013096      49c744240800.  mov qword [r12 + 8], 0
0x0001309f      e96effffff     jmp 0x13012
0x000130a4      0f1f4000       nop dword [rax]
0x000130a8      a801           test al, 1
0x000130aa      0f85a3fcffff   jne 0x12d53
0x000130b0      488b7308       mov rsi, qword [rbx + 8]
0x000130b4      488d0d302a00.  lea rcx, [0x00015aeb]                   ; ".."
0x000130bb      baffffffff     mov edx, 0xffffffff                     ; -1
0x000130c0      4c89e7         mov rdi, r12
0x000130c3      e888e8ffff     call sym.fts_safe_changedir
0x000130c8      85c0           test eax, eax
0x000130ca      0f8483fcffff   je 0x12d53
0x000130d0      e8cbf4feff     call sym.imp.__errno_location
0x000130d5      418b7c2448     mov edi, dword [r12 + 0x48]
0x000130da      8b00           mov eax, dword [rax]
0x000130dc      81cf00200000   or edi, 0x2000                          ; ../coreutils-8.31/lib/fts.c:-708
0x000130e2      894340         mov dword [rbx + 0x40], eax
0x000130e5      41897c2448     mov dword [r12 + 0x48], edi
0x000130ea      e969fcffff     jmp 0x12d58
0x000130ef      90             nop
0x000130f0      4c89e7         mov rdi, r12
0x000130f3      e8d8e6ffff     call sym.restore_initial_cwd
0x000130f8      85c0           test eax, eax
0x000130fa      75d4           jne 0x130d0
0x000130fc      e952fcffff     jmp 0x12d53                             ; ../coreutils-8.31/lib/fts.c:-700
0x00013101      0f1f80000000.  nop dword [rax]
0x00013108      b806000000     mov eax, 6
0x0001310d      498d742458     lea rsi, [r12 + 0x58]
0x00013112      4889da         mov rdx, rbx
0x00013115      66894370       mov word [rbx + 0x70], ax               ; ../coreutils-8.31/lib/fts.c:-790
0x00013119      e862ebffff     call sym.leave_dir.isra.12
0x0001311e      418b7c2448     mov edi, dword [r12 + 0x48]
0x00013123      e94bfcffff     jmp 0x12d73
0x00013128      0f1f84000000.  nop dword [rax + rax]
0x00013130      80bb09010000.  cmp byte [rbx + 0x109], 0
0x00013137      0f852cfeffff   jne 0x12f69
0x0001313d      e949feffff     jmp 0x12f8b
0x00013142      498b6c2408     mov rbp, qword [r12 + 8]
0x00013147      e94affffff     jmp 0x13096
0x0001314c      f6c402         test ah, 2
0x0001314f      0f8498010000   je 0x132ed
0x00013155      89fe           mov esi, edi
0x00013157      ba01000000     mov edx, 1
0x0001315c      4c89e7         mov rdi, r12
0x0001315f      e8fce5ffff     call sym.cwd_advance_fd                 ; ../coreutils-8.31/lib/fts.c:-815
0x00013164      8b7b44         mov edi, dword [rbx + 0x44]
0x00013167      e9e2fbffff     jmp 0x12d4e
0x0001316c      418b742448     mov esi, dword [r12 + 0x48]
0x00013171      40f6c604       test sil, 4
0x00013175      0f8401020000   je 0x1337c
0x0001317b      49892c24       mov qword [r12], rbp
0x0001317f      e942feffff     jmp 0x12fc6
0x00013184      418b7c2448     mov edi, dword [r12 + 0x48]
0x00013189      f7c700200000   test edi, 0x2000
0x0001318f      0f85e9fbffff   jne 0x12d7e
0x00013195      448b4d40       mov r9d, dword [rbp + 0x40]
0x00013199      4585c9         test r9d, r9d
0x0001319c      7412           je 0x131b0                              ; ../coreutils-8.31/lib/fts.c:-755
0x0001319e      66837d7004     cmp word [rbp + 0x70], 4
0x000131a3      740b           je 0x131b0
0x000131a5      41b807000000   mov r8d, 7
0x000131ab      6644894570     mov word [rbp + 0x70], r8w              ; ../coreutils-8.31/lib/fts.c:-774
0x000131b0      498d742458     lea rsi, [r12 + 0x58]
0x000131b5      4889ea         mov rdx, rbp
0x000131b8      e8c3eaffff     call sym.leave_dir.isra.12
0x000131bd      e938fcffff     jmp 0x12dfa
0x000131c2      4889df         mov rdi, rbx
0x000131c5      31ed           xor ebp, ebp
0x000131c7      e8b4fafeff     call sym..plt.got
0x000131cc      e8cff3feff     call sym.imp.__errno_location
0x000131d1      c70000000000   mov dword [rax], 0
0x000131d7      49c704240000.  mov qword [r12], 0
0x000131df      e916fcffff     jmp 0x12dfa
0x000131e4      0f1f4000       nop dword [rax]
0x000131e8      488b5d08       mov rbx, qword [rbp + 8]
0x000131ec      48837b6800     cmp qword [rbx + 0x68], 0
0x000131f1      7511           jne 0x13204
0x000131f3      418b442448     mov eax, dword [r12 + 0x48]
0x000131f8      83e018         and eax, 0x18
0x000131fb      83f818         cmp eax, 0x18
0x000131fe      0f8459010000   je 0x1335d
0x00013204      31d2           xor edx, edx
0x00013206      4889ee         mov rsi, rbp
0x00013209      4c89e7         mov rdi, r12
0x0001320c      e8afdfffff     call sym.fts_stat
0x00013211      8b9590000000   mov edx, dword [rbp + 0x90]
0x00013217      66894570       mov word [rbp + 0x70], ax
0x0001321b      81e200f00000   and edx, 0xf000
0x00013221      81fa00400000   cmp edx, 0x4000                         ; u"%\xf0\u3d00\ua000"
0x00013227      0f858ffdffff   jne 0x12fbc
0x0001322d      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:-805
0x00013232      0f8416010000   je 0x1334e
0x00013238      488b4b68       mov rcx, qword [rbx + 0x68]             ; ../coreutils-8.31/lib/fts.c:-804
0x0001323c      488d51ff       lea rdx, [rcx - 1]
0x00013240      4883fafd       cmp rdx, 0xfffffffffffffffd
0x00013244      7704           ja 0x1324a
0x00013246      48895368       mov qword [rbx + 0x68], rdx
0x0001324a      6683f801       cmp ax, 1
0x0001324e      0f85a6fbffff   jne 0x12dfa
0x00013254      e97dfdffff     jmp 0x12fd6                             ; ../coreutils-8.31/lib/fts.c:-796
0x00013259      0f1f80000000.  nop dword [rax]
0x00013260      488b4348       mov rax, qword [rbx + 0x48]
0x00013264      498b542420     mov rdx, qword [r12 + 0x20]
0x00013269      be03000000     mov esi, 3
0x0001326e      49891c24       mov qword [r12], rbx
0x00013272      4c89e7         mov rdi, r12
0x00013275      c6040200       mov byte [rdx + rax], 0                 ; ../coreutils-8.31/lib/fts.c:-777
0x00013279      e8c2eaffff     call sym.fts_build
0x0001327e      4885c0         test rax, rax
0x00013281      4889c3         mov rbx, rax
0x00013284      7452           je 0x132d8
0x00013286      4889ef         mov rdi, rbp
0x00013289      4889dd         mov rbp, rbx
0x0001328c      e8eff9feff     call sym..plt.got
0x00013291      e97cfdffff     jmp 0x13012
0x00013296      662e0f1f8400.  nop word cs:[rax + rax]
0x000132a0      8b7d44         mov edi, dword [rbp + 0x44]             ; ../coreutils-8.31/lib/fts.c:-754
0x000132a3      e8c8f5feff     call sym.imp.close
0x000132a8      e918fbffff     jmp 0x12dc5                             ; ../coreutils-8.31/lib/fts.c:-757
0x000132ad      ba01000000     mov edx, 1
0x000132b2      4889de         mov rsi, rbx
0x000132b5      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/fts.c:-745
0x000132b8      e803dfffff     call sym.fts_stat
0x000132bd      6683f801       cmp ax, 1
0x000132c1      66894370       mov word [rbx + 0x70], ax
0x000132c5      745a           je 0x13321                              ; ../coreutils-8.31/lib/fts.c:-744
0x000132c7      be03000000     mov esi, 3
0x000132cc      4889dd         mov rbp, rbx
0x000132cf      66897374       mov word [rbx + 0x74], si
0x000132d3      e93afdffff     jmp 0x13012
0x000132d8      41f644244920   test byte [r12 + 0x49], 0x20
0x000132de      0f859afaffff   jne 0x12d7e
0x000132e4      488b5d08       mov rbx, qword [rbp + 8]
0x000132e8      e90bfaffff     jmp 0x12cf8
0x000132ed      e86ef7feff     call sym.imp.fchdir
0x000132f2      85c0           test eax, eax
0x000132f4      7413           je 0x13309
0x000132f6      e8a5f2feff     call sym.imp.__errno_location
0x000132fb      8b00           mov eax, dword [rax]
0x000132fd      894340         mov dword [rbx + 0x40], eax
0x00013300      41814c244800.  or dword [r12 + 0x48], reloc.utimes     ; [0x2000:4]=0x21be08 reloc.utimes
0x00013309      8b7b44         mov edi, dword [rbx + 0x44]             ; ../coreutils-8.31/lib/fts.c:-741
0x0001330c      e93dfaffff     jmp 0x12d4e
0x00013311      41814c244800.  or dword [r12 + 0x48], reloc.utimes     ; [0x2000:4]=0x21be08 reloc.utimes
0x0001331a      31ed           xor ebp, ebp
0x0001331c      e9d9faffff     jmp 0x12dfa
0x00013321      418b742448     mov esi, dword [r12 + 0x48]
0x00013326      40f6c604       test sil, 4
0x0001332a      759b           jne 0x132c7
0x0001332c      418b7c242c     mov edi, dword [r12 + 0x2c]
0x00013331      488d15b42700.  lea rdx, [0x00015aec]                   ; ../coreutils-8.31/lib/fts.c:-738 ; "."
0x00013338      e8d3e5ffff     call sym.diropen.isra.6
0x0001333d      85c0           test eax, eax
0x0001333f      894344         mov dword [rbx + 0x44], eax
0x00013342      787c           js 0x133c0
0x00013344      66834b7202     or word [rbx + 0x72], 2
0x00013349      e979ffffff     jmp 0x132c7
0x0001334e      6683f801       cmp ax, 1
0x00013352      0f85a2faffff   jne 0x12dfa
0x00013358      e970fcffff     jmp 0x12fcd
0x0001335d      418b74242c     mov esi, dword [r12 + 0x2c]
0x00013362      4889df         mov rdi, rbx
0x00013365      e886e3ffff     call sym.leaf_optimization
0x0001336a      83f802         cmp eax, 2
0x0001336d      0f8591feffff   jne 0x13204
0x00013373      0fb74570       movzx eax, word [rbp + 0x70]
0x00013377      e940fcffff     jmp 0x12fbc
0x0001337c      418b7c242c     mov edi, dword [r12 + 0x2c]
0x00013381      488d15642700.  lea rdx, [0x00015aec]                   ; ../coreutils-8.31/lib/fts.c:-730 ; "."
0x00013388      e883e5ffff     call sym.diropen.isra.6
0x0001338d      85c0           test eax, eax
0x0001338f      894544         mov dword [rbp + 0x44], eax
0x00013392      780e           js 0x133a2                              ; ../coreutils-8.31/lib/fts.c:-727
0x00013394      66834d7202     or word [rbp + 0x72], 2
0x00013399      0fb74570       movzx eax, word [rbp + 0x70]
0x0001339d      e90cfcffff     jmp 0x12fae
0x000133a2      e8f9f1feff     call sym.imp.__errno_location
0x000133a7      8b00           mov eax, dword [rax]
0x000133a9      41bb07000000   mov r11d, 7
0x000133af      6644895d70     mov word [rbp + 0x70], r11w
0x000133b4      894540         mov dword [rbp + 0x40], eax
0x000133b7      49892c24       mov qword [r12], rbp
0x000133bb      e93afaffff     jmp 0x12dfa
0x000133c0      e8dbf1feff     call sym.imp.__errno_location
0x000133c5      8b00           mov eax, dword [rax]
0x000133c7      bf07000000     mov edi, 7
0x000133cc      66897b70       mov word [rbx + 0x70], di
0x000133d0      894340         mov dword [rbx + 0x40], eax
0x000133d3      e9effeffff     jmp 0x132c7
0x000133d8      0f1f84000000.  nop dword [rax + rax]
;-- rpl_fts_set:
0x000133e0      83fa04         cmp edx, 4
0x000133e3      770b           ja 0x133f0
0x000133e5      66895674       mov word [rsi + 0x74], dx
0x000133e9      31c0           xor eax, eax
0x000133eb      c3             ret
0x000133ec      0f1f4000       nop dword [rax]
0x000133f0      4883ec08       sub rsp, 8
0x000133f4      e8a7f1feff     call sym.imp.__errno_location
0x000133f9      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x34800000
0x000133ff      b801000000     mov eax, 1
0x00013404      4883c408       add rsp, 8
0x00013408      c3             ret
0x00013409      0f1f80000000.  nop dword [rax]
;-- rpl_fts_children:
0x00013410      4156           push r14
0x00013412      4155           push r13
0x00013414      4154           push r12
0x00013416      55             push rbp
0x00013417      4189f4         mov r12d, esi
0x0001341a      53             push rbx
0x0001341b      4889fb         mov rbx, rdi
0x0001341e      e87df1feff     call sym.imp.__errno_location
0x00013423      41f7c4ffefff.  test r12d, 0xffffefff
0x0001342a      4989c5         mov r13, rax
0x0001342d      0f85e5000000   jne 0x13518
0x00013433      488b2b         mov rbp, qword [rbx]
0x00013436      c70000000000   mov dword [rax], 0
0x0001343c      f6434920       test byte [rbx + 0x49], 0x20
0x00013440      757e           jne 0x134c0
0x00013442      0fb74570       movzx eax, word [rbp + 0x70]
0x00013446      6683f809       cmp ax, 9
0x0001344a      7464           je 0x134b0
0x0001344c      6683f801       cmp ax, 1
0x00013450      756e           jne 0x134c0
0x00013452      488b7b08       mov rdi, qword [rbx + 8]
0x00013456      4885ff         test rdi, rdi
0x00013459      7405           je 0x13460
0x0001345b      e8d0e0ffff     call sym.fts_lfree
0x00013460      4181fc001000.  cmp r12d, 0x1000
0x00013467      41be01000000   mov r14d, 1
0x0001346d      750d           jne 0x1347c
0x0001346f      814b48001000.  or dword [rbx + 0x48], 0x1000           ; [0x1000:4]=0x64697074
0x00013476      41be02000000   mov r14d, 2
0x0001347c      48837d5800     cmp qword [rbp + 0x58], 0
0x00013481      7512           jne 0x13495
0x00013483      488b4530       mov rax, qword [rbp + 0x30]
0x00013487      80382f         cmp byte [rax], 0x2f
0x0001348a      7409           je 0x13495
0x0001348c      8b7348         mov esi, dword [rbx + 0x48]
0x0001348f      40f6c604       test sil, 4
0x00013493      743b           je 0x134d0
0x00013495      4489f6         mov esi, r14d
0x00013498      4889df         mov rdi, rbx
0x0001349b      e8a0e8ffff     call sym.fts_build
0x000134a0      48894308       mov qword [rbx + 8], rax
0x000134a4      5b             pop rbx
0x000134a5      5d             pop rbp
0x000134a6      415c           pop r12
0x000134a8      415d           pop r13
0x000134aa      415e           pop r14
0x000134ac      c3             ret
0x000134ad      0f1f00         nop dword [rax]
0x000134b0      5b             pop rbx
0x000134b1      488b4510       mov rax, qword [rbp + 0x10]
0x000134b5      5d             pop rbp
0x000134b6      415c           pop r12
0x000134b8      415d           pop r13
0x000134ba      415e           pop r14
0x000134bc      c3             ret
0x000134bd      0f1f00         nop dword [rax]
0x000134c0      5b             pop rbx
0x000134c1      31c0           xor eax, eax
0x000134c3      5d             pop rbp
0x000134c4      415c           pop r12
0x000134c6      415d           pop r13
0x000134c8      415e           pop r14
0x000134ca      c3             ret
0x000134cb      0f1f440000     nop dword [rax + rax]
0x000134d0      8b7b2c         mov edi, dword [rbx + 0x2c]
0x000134d3      488d15122600.  lea rdx, [0x00015aec]                   ; "."
0x000134da      e831e4ffff     call sym.diropen.isra.6
0x000134df      85c0           test eax, eax
0x000134e1      89c5           mov ebp, eax
0x000134e3      7854           js 0x13539
0x000134e5      4489f6         mov esi, r14d
0x000134e8      4889df         mov rdi, rbx
0x000134eb      e850e8ffff     call sym.fts_build
0x000134f0      f6434902       test byte [rbx + 0x49], 2
0x000134f4      48894308       mov qword [rbx + 8], rax
0x000134f8      752e           jne 0x13528
0x000134fa      89ef           mov edi, ebp
0x000134fc      e85ff5feff     call sym.imp.fchdir
0x00013501      85c0           test eax, eax
0x00013503      7543           jne 0x13548
0x00013505      89ef           mov edi, ebp
0x00013507      e864f3feff     call sym.imp.close
0x0001350c      488b4308       mov rax, qword [rbx + 8]
0x00013510      eb92           jmp 0x134a4
0x00013512      660f1f440000   nop word [rax + rax]
0x00013518      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x34800000
0x0001351e      31c0           xor eax, eax
0x00013520      e97fffffff     jmp 0x134a4
0x00013525      0f1f00         nop dword [rax]
0x00013528      ba01000000     mov edx, 1
0x0001352d      89ee           mov esi, ebp
0x0001352f      4889df         mov rdi, rbx
0x00013532      e829e2ffff     call sym.cwd_advance_fd
0x00013537      ebd3           jmp 0x1350c
0x00013539      48c743080000.  mov qword [rbx + 8], 0
0x00013541      31c0           xor eax, eax
0x00013543      e95cffffff     jmp 0x134a4
0x00013548      418b5d00       mov ebx, dword [r13]
0x0001354c      89ef           mov edi, ebp
0x0001354e      e81df3feff     call sym.imp.close
0x00013553      31c0           xor eax, eax
0x00013555      41895d00       mov dword [r13], ebx
0x00013559      e946ffffff     jmp 0x134a4
0x0001355e      6690           nop
;-- rpl_mbrtowc:
0x00013560      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00013562      4154           push r12
0x00013564      4989f5         mov r13, rsi
0x00013567      55             push rbp
0x00013568      53             push rbx
0x00013569      4889fb         mov rbx, rdi
0x0001356c      4989d4         mov r12, rdx
0x0001356f      4883ec18       sub rsp, 0x18
0x00013573      64488b042528.  mov rax, qword fs:[0x28]
0x0001357c      4889442408     mov qword [rsp + 8], rax
0x00013581      31c0           xor eax, eax
0x00013583      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00013588      4885ff         test rdi, rdi
0x0001358b      480f44d8       cmove rbx, rax
0x0001358f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00013592      e819f2feff     call sym.imp.mbrtowc
0x00013597      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0001359b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0001359e      7620           jbe 0x135c0                             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000135a0      4d85e4         test r12, r12
0x000135a3      741b           je 0x135c0
0x000135a5      31ff           xor edi, edi
0x000135a7      e864060000     call sym.hard_locale
0x000135ac      84c0           test al, al
0x000135ae      7510           jne 0x135c0
0x000135b0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000135b5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x000135ba      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000135bc      0f1f4000       nop dword [rax]
0x000135c0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x000135c5      644833142528.  xor rdx, qword fs:[0x28]
0x000135ce      4889e8         mov rax, rbp
0x000135d1      750b           jne 0x135de
0x000135d3      4883c418       add rsp, 0x18
0x000135d7      5b             pop rbx
0x000135d8      5d             pop rbp
0x000135d9      415c           pop r12
0x000135db      415d           pop r13
0x000135dd      c3             ret
0x000135de      e89df1feff     call sym.imp.__stack_chk_fail
0x000135e3      662e0f1f8400.  nop word cs:[rax + rax]
0x000135ed      0f1f00         nop dword [rax]
;-- free_permission_context:
0x000135f0      f3c3           ret                                     ; ../coreutils-8.31/lib/acl-internal.c:480
0x000135f2      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/acl-internal.c:507
0x000135fc      0f1f4000       nop dword [rax]
;-- get_permissions:
0x00013600      8911           mov dword [rcx], edx                    ; ../coreutils-8.31/lib/get-permissions.c:35
0x00013602      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/get-permissions.c:291
0x00013604      c3             ret
0x00013605      662e0f1f8400.  nop word cs:[rax + rax]
0x0001360f      90             nop
;-- chmod_or_fchmod:
0x00013610      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/set-permissions.c:761
0x00013612      89d6           mov esi, edx                            ; ../coreutils-8.31/lib/set-permissions.c:763
0x00013614      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/set-permissions.c:762
0x00013617      7407           je 0x13620
0x00013619      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/set-permissions.c:763
0x0001361b      e9a0f4feff     jmp sym.imp.fchmod
0x00013620      e9bbf4feff     jmp sym.imp.chmod                       ; ../coreutils-8.31/lib/set-permissions.c:765
0x00013625      90             nop
0x00013626      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_permissions:
0x00013630      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/set-permissions.c:777
0x00013634      4889f0         mov rax, rsi
0x00013637      89d6           mov esi, edx
0x00013639      8b17           mov edx, dword [rdi]                    ; ../coreutils-8.31/lib/set-permissions.c:806
0x0001363b      4889c7         mov rdi, rax
0x0001363e      e8cdffffff     call sym.chmod_or_fchmod
0x00013643      85c0           test eax, eax                           ; ../coreutils-8.31/lib/set-permissions.c:807
0x00013645      0f95c0         setne al
0x00013648      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/set-permissions.c:847
0x0001364c      0fb6c0         movzx eax, al                           ; ../coreutils-8.31/lib/set-permissions.c:807
0x0001364f      f7d8           neg eax
0x00013651      c3             ret                                     ; ../coreutils-8.31/lib/set-permissions.c:847
0x00013652      662e0f1f8400.  nop word cs:[rax + rax]
0x0001365c      0f1f4000       nop dword [rax]
;-- __argmatch_die:
0x00013660      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/argmatch.c:63
0x00013665      e91601ffff     jmp sym.usage
0x0001366a      660f1f440000   nop word [rax + rax]
;-- argmatch:
0x00013670      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:86
0x00013672      4156           push r14
0x00013674      4989f7         mov r15, rsi
0x00013677      4155           push r13
0x00013679      4154           push r12
0x0001367b      4989cd         mov r13, rcx
0x0001367e      55             push rbp
0x0001367f      53             push rbx
0x00013680      4889d5         mov rbp, rdx
0x00013683      4883ec28       sub rsp, 0x28
0x00013687      48897c2408     mov qword [rsp + 8], rdi
0x0001368c      4889542418     mov qword [rsp + 0x18], rdx
0x00013691      e8baf0feff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/argmatch.c:92
0x00013696      4d8b37         mov r14, qword [r15]                    ; ../coreutils-8.31/lib/argmatch.c:95
0x00013699      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:89
0x000136a1      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/argmatch.c:95
0x000136a4      0f84b3000000   je 0x1375d
0x000136aa      4989c4         mov r12, rax
0x000136ad      c644241700     mov byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:90
0x000136b2      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:95
0x000136b4      eb51           jmp 0x13707
0x000136b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000136c0      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/argmatch.c:108
0x000136c5      4885c0         test rax, rax
0x000136c8      0f84a2000000   je 0x13770
0x000136ce      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:109
0x000136d2      4c89ea         mov rdx, r13
0x000136d5      4889ee         mov rsi, rbp
0x000136d8      490faffd       imul rdi, r13
0x000136dc      4801c7         add rdi, rax
0x000136df      e8ecf1feff     call sym.imp.memcmp
0x000136e4      85c0           test eax, eax                           ; ../coreutils-8.31/lib/argmatch.c:114
0x000136e6      0fb6442417     movzx eax, byte [rsp + 0x17]
0x000136eb      b901000000     mov ecx, 1
0x000136f0      0f45c1         cmovne eax, ecx
0x000136f3      88442417       mov byte [rsp + 0x17], al
0x000136f7      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x000136fb      4c01ed         add rbp, r13
0x000136fe      4d8b34df       mov r14, qword [r15 + rbx*8]
0x00013702      4d85f6         test r14, r14
0x00013705      7441           je 0x13748
0x00013707      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/argmatch.c:97
0x0001370c      4c89e2         mov rdx, r12
0x0001370f      4c89f7         mov rdi, r14
0x00013712      e8a9eefeff     call sym.imp.strncmp
0x00013717      85c0           test eax, eax
0x00013719      75dc           jne 0x136f7
0x0001371b      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/argmatch.c:99
0x0001371e      e82df0feff     call sym.imp.strlen
0x00013723      4c39e0         cmp rax, r12
0x00013726      7458           je 0x13780
0x00013728      48833c24ff     cmp qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:102
0x0001372d      7591           jne 0x136c0
0x0001372f      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:104
0x00013733      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x00013737      4c01ed         add rbp, r13
0x0001373a      4d8b34df       mov r14, qword [r15 + rbx*8]
0x0001373e      4d85f6         test r14, r14
0x00013741      75c4           jne 0x13707
0x00013743      0f1f440000     nop dword [rax + rax]
0x00013748      807c241700     cmp byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:120
0x0001374d      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x00013754      480f440424     cmove rax, qword [rsp]
0x00013759      48890424       mov qword [rsp], rax
0x0001375d      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:123
0x00013761      4883c428       add rsp, 0x28
0x00013765      5b             pop rbx
0x00013766      5d             pop rbp
0x00013767      415c           pop r12
0x00013769      415d           pop r13
0x0001376b      415e           pop r14
0x0001376d      415f           pop r15
0x0001376f      c3             ret
0x00013770      c644241701     mov byte [rsp + 0x17], 1                ; ../coreutils-8.31/lib/argmatch.c:114
0x00013775      eb80           jmp 0x136f7
0x00013777      660f1f840000.  nop word [rax + rax]
0x00013780      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:101
0x00013784      ebd7           jmp 0x1375d
0x00013786      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_invalid:
0x00013790      4883faff       cmp rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/argmatch.c:132
0x00013794      4154           push r12
0x00013796      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:133
0x0001379b      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:132
0x0001379c      4989f4         mov r12, rsi
0x0001379f      53             push rbx
0x000137a0      4889fd         mov rbp, rdi
0x000137a3      744b           je 0x137f0                              ; ../coreutils-8.31/lib/argmatch.c:133
0x000137a5      488d355f3c00.  lea rsi, str.ambiguous_argument__s_for__s ; 0x1740b ; "ambiguous argument %s for %s"
0x000137ac      31ff           xor edi, edi
0x000137ae      e87deffeff     call sym.imp.dcgettext
0x000137b3      4889c3         mov rbx, rax
0x000137b6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/argmatch.c:137
0x000137b9      bf01000000     mov edi, 1
0x000137be      e8bdb1ffff     call sym.quote_n
0x000137c3      4c89e2         mov rdx, r12
0x000137c6      4889c5         mov rbp, rax
0x000137c9      be08000000     mov esi, 8
0x000137ce      31ff           xor edi, edi
0x000137d0      e8dbadffff     call sym.quotearg_n_style
0x000137d5      4989e8         mov r8, rbp
0x000137d8      4889da         mov rdx, rbx
0x000137db      4889c1         mov rcx, rax
0x000137de      5b             pop rbx                                 ; ../coreutils-8.31/lib/argmatch.c:139
0x000137df      5d             pop rbp
0x000137e0      415c           pop r12
0x000137e2      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/argmatch.c:137
0x000137e4      31ff           xor edi, edi
0x000137e6      31c0           xor eax, eax
0x000137e8      e923f3feff     jmp sym.imp.error
0x000137ed      0f1f00         nop dword [rax]
0x000137f0      488d35f93b00.  lea rsi, str.invalid_argument__s_for__s ; ../coreutils-8.31/lib/argmatch.c:133 ; 0x173f0 ; "invalid argument %s for %s"
0x000137f7      31ff           xor edi, edi
0x000137f9      e832effeff     call sym.imp.dcgettext
0x000137fe      4889c3         mov rbx, rax
0x00013801      ebb3           jmp 0x137b6
0x00013803      0f1f00         nop dword [rax]
0x00013806      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_valid:
0x00013810      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:148
0x00013812      4156           push r14
0x00013814      4989fe         mov r14, rdi
0x00013817      4155           push r13
0x00013819      4154           push r12
0x0001381b      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/argmatch.c:154
0x0001381d      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:148
0x0001381e      53             push rbx
0x0001381f      4889f5         mov rbp, rsi
0x00013822      488d35ff3b00.  lea rsi, str.Valid_arguments_are:       ; ../coreutils-8.31/lib/argmatch.c:154 ; 0x17428 ; "Valid arguments are:"
0x00013829      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/argmatch.c:148
0x0001382c      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:154
0x00013831      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argmatch.c:148
0x00013835      488b1dc48820.  mov rbx, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:154 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c100:8]=0
0x0001383c      e8efeefeff     call sym.imp.dcgettext
0x00013841      4889c7         mov rdi, rax
0x00013844      4889de         mov rsi, rbx
0x00013847      e8a4f0feff     call sym.imp.fputs_unlocked
0x0001384c      4d8b3e         mov r15, qword [r14]                    ; ../coreutils-8.31/lib/argmatch.c:155
0x0001384f      4d85ff         test r15, r15
0x00013852      0f8490000000   je 0x138e8
0x00013858      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/argmatch.c:150
0x0001385b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:155
0x0001385d      eb39           jmp 0x13898
0x0001385f      90             nop
0x00013860      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:159
0x00013863      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00013867      4989ed         mov r13, rbp                            ; ../coreutils-8.31/lib/argmatch.c:160
0x0001386a      e831b1ffff     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:159
0x0001386f      488b3d8a8820.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c100:8]=0
0x00013876      488d15c03b00.  lea rdx, [0x0001743d]                   ; "\n  - %s"
0x0001387d      4889c1         mov rcx, rax
0x00013880      be01000000     mov esi, 1
0x00013885      31c0           xor eax, eax
0x00013887      4c01e5         add rbp, r12
0x0001388a      e891f3feff     call sym.imp.__fprintf_chk
0x0001388f      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x00013893      4d85ff         test r15, r15
0x00013896      7450           je 0x138e8
0x00013898      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/argmatch.c:156
0x0001389b      74c3           je 0x13860
0x0001389d      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/argmatch.c:157
0x000138a0      4889ee         mov rsi, rbp
0x000138a3      4c89ef         mov rdi, r13
0x000138a6      e825f0feff     call sym.imp.memcmp
0x000138ab      85c0           test eax, eax
0x000138ad      75b1           jne 0x13860
0x000138af      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:164
0x000138b2      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x000138b6      4c01e5         add rbp, r12
0x000138b9      e8e2b0ffff     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:164
0x000138be      488b3d3b8820.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c100:8]=0
0x000138c5      488d15793b00.  lea rdx, str.s                          ; 0x17445 ; ", %s"
0x000138cc      4889c1         mov rcx, rax
0x000138cf      be01000000     mov esi, 1
0x000138d4      31c0           xor eax, eax
0x000138d6      e845f3feff     call sym.imp.__fprintf_chk
0x000138db      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x000138df      4d85ff         test r15, r15
0x000138e2      75b4           jne 0x13898
0x000138e4      0f1f4000       nop dword [rax]
0x000138e8      488b3d118820.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:166 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c100:8]=0
0x000138ef      488b4728       mov rax, qword [rdi + 0x28]             ; stdio.h:100   return _IO_putc_unlocked (__c, __stream);
0x000138f3      483b4730       cmp rax, qword [rdi + 0x30]
0x000138f7      731f           jae 0x13918
0x000138f9      488d5001       lea rdx, [rax + 1]
0x000138fd      48895728       mov qword [rdi + 0x28], rdx
0x00013901      c6000a         mov byte [rax], 0xa
0x00013904      4883c408       add rsp, 8
0x00013908      5b             pop rbx
0x00013909      5d             pop rbp
0x0001390a      415c           pop r12
0x0001390c      415d           pop r13
0x0001390e      415e           pop r14
0x00013910      415f           pop r15
0x00013912      c3             ret
0x00013913      0f1f440000     nop dword [rax + rax]
0x00013918      4883c408       add rsp, 8
0x0001391c      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/argmatch.c:-204
0x00013921      5b             pop rbx
0x00013922      5d             pop rbp
0x00013923      415c           pop r12
0x00013925      415d           pop r13
0x00013927      415e           pop r14
0x00013929      415f           pop r15
0x0001392b      e9a0eefeff     jmp sym.imp.__overflow
;-- __xargmatch_internal:
0x00013930      4157           push r15
0x00013932      4156           push r14
0x00013934      4989fe         mov r14, rdi
0x00013937      4155           push r13
0x00013939      4154           push r12
0x0001393b      4989f4         mov r12, rsi
0x0001393e      55             push rbp
0x0001393f      53             push rbx
0x00013940      4889cd         mov rbp, rcx
0x00013943      4889d3         mov rbx, rdx
0x00013946      4c89c1         mov rcx, r8
0x00013949      4889ea         mov rdx, rbp
0x0001394c      4883ec08       sub rsp, 8
0x00013950      4889de         mov rsi, rbx
0x00013953      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-196
0x00013956      4d89c7         mov r15, r8
0x00013959      4d89cd         mov r13, r9
0x0001395c      e80ffdffff     call sym.argmatch
0x00013961      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argmatch.c:-195
0x00013964      780f           js 0x13975                              ; ../coreutils-8.31/lib/argmatch.c:-193
0x00013966      4883c408       add rsp, 8
0x0001396a      5b             pop rbx
0x0001396b      5d             pop rbp
0x0001396c      415c           pop r12
0x0001396e      415d           pop r13
0x00013970      415e           pop r14                                 ; ../coreutils-8.31/lib/argmatch.c:-184
0x00013972      415f           pop r15
0x00013974      c3             ret
0x00013975      4889c2         mov rdx, rax
0x00013978      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-181
0x0001397b      4c89f7         mov rdi, r14
0x0001397e      e80dfeffff     call sym.argmatch_invalid
0x00013983      4c89fa         mov rdx, r15
0x00013986      4889ee         mov rsi, rbp
0x00013989      4889df         mov rdi, rbx
0x0001398c      e87ffeffff     call sym.argmatch_valid
0x00013991      41ffd5         call r13
0x00013994      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0001399b      ebc9           jmp 0x13966
0x0001399d      0f1f00         nop dword [rax]
;-- argmatch_to_argument:
0x000139a0      4156           push r14
0x000139a2      4155           push r13
0x000139a4      4154           push r12
0x000139a6      55             push rbp
0x000139a7      53             push rbx
0x000139a8      4c8b36         mov r14, qword [rsi]
0x000139ab      4d85f6         test r14, r14
0x000139ae      7431           je 0x139e1
0x000139b0      4989cc         mov r12, rcx
0x000139b3      4989fd         mov r13, rdi
0x000139b6      4889d5         mov rbp, rdx
0x000139b9      488d5e08       lea rbx, [rsi + 8]
0x000139bd      eb10           jmp 0x139cf                             ; ../coreutils-8.31/lib/argmatch.c:-177
0x000139bf      90             nop
0x000139c0      4c8b33         mov r14, qword [rbx]
0x000139c3      4c01e5         add rbp, r12
0x000139c6      4883c308       add rbx, 8
0x000139ca      4d85f6         test r14, r14
0x000139cd      7412           je 0x139e1
0x000139cf      4c89e2         mov rdx, r12
0x000139d2      4889ee         mov rsi, rbp
0x000139d5      4c89ef         mov rdi, r13
0x000139d8      e8f3eefeff     call sym.imp.memcmp
0x000139dd      85c0           test eax, eax
0x000139df      75df           jne 0x139c0
0x000139e1      5b             pop rbx
0x000139e2      4c89f0         mov rax, r14
0x000139e5      5d             pop rbp
0x000139e6      415c           pop r12
0x000139e8      415d           pop r13
0x000139ea      415e           pop r14
0x000139ec      c3             ret
0x000139ed      0f1f00         nop dword [rax]
;-- close_stream:
0x000139f0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x000139f2      55             push rbp
0x000139f3      4889fd         mov rbp, rdi
0x000139f6      53             push rbx
0x000139f7      e8f4ebfeff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x000139fc      8b5d00         mov ebx, dword [rbp]
0x000139ff      4889ef         mov rdi, rbp
0x00013a02      4989c4         mov r12, rax
0x00013a05      e8a6100000     call sym.rpl_fclose
0x00013a0a      83e320         and ebx, 0x20                           ; "@"
0x00013a0d      85db           test ebx, ebx
0x00013a0f      7517           jne 0x13a28
0x00013a11      85c0           test eax, eax
0x00013a13      740a           je 0x13a1f                              ; stdio.h:-186
0x00013a15      4d85e4         test r12, r12                           ; stdio.h:-178
0x00013a18      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00013a1d      7439           je 0x13a58
0x00013a1f      5b             pop rbx
0x00013a20      5d             pop rbp
0x00013a21      415c           pop r12
0x00013a23      c3             ret
0x00013a24      0f1f4000       nop dword [rax]
0x00013a28      85c0           test eax, eax
0x00013a2a      751c           jne 0x13a48
0x00013a2c      e86febfeff     call sym.imp.__errno_location
0x00013a31      c70000000000   mov dword [rax], 0
0x00013a37      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00013a3c      5b             pop rbx
0x00013a3d      5d             pop rbp
0x00013a3e      415c           pop r12
0x00013a40      c3             ret
0x00013a41      0f1f80000000.  nop dword [rax]
0x00013a48      5b             pop rbx
0x00013a49      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00013a4e      5d             pop rbp                                 ; stdio.h:-186
0x00013a4f      415c           pop r12
0x00013a51      c3             ret
0x00013a52      660f1f440000   nop word [rax + rax]
0x00013a58      e843ebfeff     call sym.imp.__errno_location
0x00013a5d      833809         cmp dword [rax], 9
0x00013a60      5b             pop rbx
0x00013a61      5d             pop rbp
0x00013a62      415c           pop r12                                 ; stdio.h:-178
0x00013a64      0f95c0         setne al
0x00013a67      0fb6c0         movzx eax, al
0x00013a6a      f7d8           neg eax
0x00013a6c      c3             ret
0x00013a6d      0f1f00         nop dword [rax]
;-- cycle_check_init:
0x00013a70      48c747100000.  mov qword [rdi + 0x10], 0               ; ../coreutils-8.31/lib/cycle-check.c:44
0x00013a78      c7471816f695.  mov dword [rdi + 0x18], 0x95f616        ; ../coreutils-8.31/lib/cycle-check.c:46 ; [0x95f616:4]=-1
0x00013a7f      c3             ret                                     ; ../coreutils-8.31/lib/cycle-check.c:47
;-- cycle_check:
0x00013a80      817f1816f695.  cmp dword [rdi + 0x18], 0x95f616        ; ../coreutils-8.31/lib/cycle-check.c:59
0x00013a87      755e           jne 0x13ae7
0x00013a89      488b5710       mov rdx, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/cycle-check.c:65
0x00013a8d      488b4e08       mov rcx, qword [rsi + 8]
0x00013a91      4885d2         test rdx, rdx
0x00013a94      741a           je 0x13ab0
0x00013a96      48390f         cmp qword [rdi], rcx
0x00013a99      742d           je 0x13ac8
0x00013a9b      4c8d4201       lea r8, [rdx + 1]                       ; ../coreutils-8.31/lib/cycle-check.c:70
0x00013a9f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/cycle-check.c:84
0x00013aa1      4c85c2         test rdx, r8                            ; ../coreutils-8.31/lib/cycle-check.c:70
0x00013aa4      4c894710       mov qword [rdi + 0x10], r8
0x00013aa8      7436           je 0x13ae0
0x00013aaa      f3c3           ret                                     ; ../coreutils-8.31/lib/cycle-check.c:85
0x00013aac      0f1f4000       nop dword [rax]
0x00013ab0      48c747100100.  mov qword [rdi + 0x10], 1               ; ../coreutils-8.31/lib/cycle-check.c:70
0x00013ab8      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/cycle-check.c:80
0x00013abb      48890f         mov qword [rdi], rcx                    ; ../coreutils-8.31/lib/cycle-check.c:81
0x00013abe      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/cycle-check.c:80
0x00013ac2      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/cycle-check.c:84
0x00013ac4      c3             ret
0x00013ac5      0f1f00         nop dword [rax]
0x00013ac8      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/cycle-check.c:65
0x00013acc      483906         cmp qword [rsi], rax
0x00013acf      75ca           jne 0x13a9b
0x00013ad1      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/cycle-check.c:66
0x00013ad6      c3             ret
0x00013ad7      660f1f840000.  nop word [rax + rax]
0x00013ae0      4d85c0         test r8, r8                             ; ../coreutils-8.31/lib/cycle-check.c:77
0x00013ae3      74ec           je 0x13ad1
0x00013ae5      ebd1           jmp 0x13ab8
0x00013ae7      488d0da23900.  lea rcx, obj.__PRETTY_FUNCTION__.3994   ; ../coreutils-8.31/lib/cycle-check.c:60 ; 0x17490 ; "cycle_check"
0x00013aee      488d355b3900.  lea rsi, str..._coreutils_8.31_lib_cycle_check.c ; 0x17450 ; "../coreutils-8.31/lib/cycle-check.c"
0x00013af5      488d3d7c3900.  lea rdi, str.state__magic____9827862    ; 0x17478 ; "state->magic == 9827862"
0x00013afc      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/cycle-check.c:59
0x00013b00      ba3c000000     mov edx, 0x3c                           ; ../coreutils-8.31/lib/cycle-check.c:60 ; '<'
0x00013b05      e816edfeff     call sym.imp.__assert_fail
0x00013b0a      660f1f440000   nop word [rax + rax]
;-- opendir_safer:
0x00013b10      4156           push r14                                ; ../coreutils-8.31/lib/opendir-safer.c:32
0x00013b12      4155           push r13
0x00013b14      4154           push r12
0x00013b16      55             push rbp
0x00013b17      53             push rbx
0x00013b18      e8d3ebfeff     call sym.imp.opendir                    ; ../coreutils-8.31/lib/opendir-safer.c:33
0x00013b1d      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/opendir-safer.c:35
0x00013b20      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/opendir-safer.c:33
0x00013b23      740d           je 0x13b32                              ; ../coreutils-8.31/lib/opendir-safer.c:35
0x00013b25      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/opendir-safer.c:37
0x00013b28      e813eefeff     call sym.imp.dirfd
0x00013b2d      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/opendir-safer.c:39
0x00013b30      760e           jbe 0x13b40
0x00013b32      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/opendir-safer.c:76
0x00013b35      5b             pop rbx
0x00013b36      5d             pop rbp
0x00013b37      415c           pop r12
0x00013b39      415d           pop r13
0x00013b3b      415e           pop r14
0x00013b3d      c3             ret
0x00013b3e      6690           nop
0x00013b40      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/opendir-safer.c:52
0x00013b42      ba03000000     mov edx, 3
0x00013b47      be06040000     mov esi, 0x406
0x00013b4c      31c0           xor eax, eax
0x00013b4e      e8dd0f0000     call sym.rpl_fcntl
0x00013b53      4189c4         mov r12d, eax
0x00013b56      e845eafeff     call sym.imp.__errno_location
0x00013b5b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/opendir-safer.c:53
0x00013b5e      4889c5         mov rbp, rax
0x00013b61      7925           jns 0x13b88
0x00013b63      448b30         mov r14d, dword [rax]                   ; ../coreutils-8.31/lib/opendir-safer.c:55
0x00013b66      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/opendir-safer.c:56
0x00013b69      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/opendir-safer.c:69
0x00013b6c      4c89eb         mov rbx, r13                            ; ../coreutils-8.31/lib/opendir-safer.c:71
0x00013b6f      e82cedfeff     call sym.imp.closedir                   ; ../coreutils-8.31/lib/opendir-safer.c:69
0x00013b74      44897500       mov dword [rbp], r14d                   ; ../coreutils-8.31/lib/opendir-safer.c:70
0x00013b78      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/opendir-safer.c:76
0x00013b7b      5b             pop rbx
0x00013b7c      5d             pop rbp
0x00013b7d      415c           pop r12
0x00013b7f      415d           pop r13
0x00013b81      415e           pop r14
0x00013b83      c3             ret
0x00013b84      0f1f4000       nop dword [rax]
0x00013b88      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/opendir-safer.c:60
0x00013b8b      e8f0effeff     call sym.imp.fdopendir
0x00013b90      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/opendir-safer.c:62
0x00013b93      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/opendir-safer.c:60
0x00013b96      448b7500       mov r14d, dword [rbp]                   ; ../coreutils-8.31/lib/opendir-safer.c:61
0x00013b9a      75cd           jne 0x13b69                             ; ../coreutils-8.31/lib/opendir-safer.c:62
0x00013b9c      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/opendir-safer.c:63
0x00013b9f      e8ccecfeff     call sym.imp.close
0x00013ba4      ebc3           jmp 0x13b69
0x00013ba6      662e0f1f8400.  nop word cs:[rax + rax]
;-- gettime:
0x00013bb0      4889fe         mov rsi, rdi                            ; ../coreutils-8.31/lib/gettime.c:30
0x00013bb3      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/gettime.c:32
0x00013bb5      e9c6eafeff     jmp sym.imp.clock_gettime
0x00013bba      660f1f440000   nop word [rax + rax]
;-- current_timespec:
0x00013bc0      4883ec28       sub rsp, 0x28                           ; ../coreutils-8.31/lib/gettime.c:45
0x00013bc4      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/gettime.c:32
0x00013bc6      4889e6         mov rsi, rsp
0x00013bc9      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/gettime.c:45
0x00013bd2      4889442418     mov qword [rsp + 0x18], rax
0x00013bd7      31c0           xor eax, eax
0x00013bd9      e8a2eafeff     call sym.imp.clock_gettime              ; ../coreutils-8.31/lib/gettime.c:32
0x00013bde      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/gettime.c:49
0x00013be3      6448330c2528.  xor rcx, qword fs:[0x28]
0x00013bec      488b0424       mov rax, qword [rsp]
0x00013bf0      488b542408     mov rdx, qword [rsp + 8]
0x00013bf5      7505           jne 0x13bfc
0x00013bf7      4883c428       add rsp, 0x28
0x00013bfb      c3             ret
0x00013bfc      e87febfeff     call sym.imp.__stack_chk_fail
0x00013c01      662e0f1f8400.  nop word cs:[rax + rax]
0x00013c0b      0f1f440000     nop dword [rax + rax]
;-- hard_locale:
0x00013c10      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00013c14      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00013c16      e885eefeff     call sym.imp.setlocale
0x00013c1b      4889c2         mov rdx, rax
0x00013c1e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00013c23      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00013c26      741d           je 0x13c45
0x00013c28      488d3d6d3800.  lea rdi, [0x0001749c]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00013c2f      b902000000     mov ecx, 2
0x00013c34      4889d6         mov rsi, rdx
0x00013c37      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00013c39      0f97c1         seta cl
0x00013c3c      80d900         sbb cl, 0
0x00013c3f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00013c41      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00013c43      750b           jne 0x13c50
0x00013c45      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00013c49      c3             ret
0x00013c4a      660f1f440000   nop word [rax + rax]
0x00013c50      488d3d473800.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x1749e ; "POSIX"
0x00013c57      b906000000     mov ecx, 6
0x00013c5c      4889d6         mov rsi, rdx
0x00013c5f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00013c61      0f97c0         seta al
0x00013c64      1c00           sbb al, 0
0x00013c66      84c0           test al, al
0x00013c68      0f95c0         setne al
0x00013c6b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00013c6f      c3             ret
;-- hash_pjw:
0x00013c70      480fbe0f       movsx rcx, byte [rdi]
0x00013c74      84c9           test cl, cl
0x00013c76      7428           je 0x13ca0
0x00013c78      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-pjw.c:34
0x00013c7a      660f1f440000   nop word [rax + rax]
0x00013c80      48c1c009       rol rax, 9                              ; ../coreutils-8.31/lib/hash-pjw.c:37
0x00013c84      4883c701       add rdi, 1                              ; ../coreutils-8.31/lib/hash-pjw.c:36
0x00013c88      4801c8         add rax, rcx                            ; ../coreutils-8.31/lib/hash-pjw.c:37
0x00013c8b      480fbe0f       movsx rcx, byte [rdi]                   ; ../coreutils-8.31/lib/hash-pjw.c:36
0x00013c8f      84c9           test cl, cl
0x00013c91      75ed           jne 0x13c80
0x00013c93      31d2           xor edx, edx
0x00013c95      48f7f6         div rsi
0x00013c98      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-pjw.c:40
0x00013c9b      c3             ret
0x00013c9c      0f1f4000       nop dword [rax]
0x00013ca0      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash-pjw.c:36
0x00013ca2      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-pjw.c:40
0x00013ca5      c3             ret
0x00013ca6      662e0f1f8400.  nop word cs:[rax + rax]
;-- i_ring_init:
0x00013cb0      c6471c01       mov byte [rdi + 0x1c], 1                ; ../coreutils-8.31/lib/i-ring.c:26
0x00013cb4      48c747140000.  mov qword [rdi + 0x14], 0               ; ../coreutils-8.31/lib/i-ring.c:29
0x00013cbc      8937           mov dword [rdi], esi                    ; ../coreutils-8.31/lib/i-ring.c:32
0x00013cbe      897704         mov dword [rdi + 4], esi
0x00013cc1      897708         mov dword [rdi + 8], esi
0x00013cc4      89770c         mov dword [rdi + 0xc], esi
0x00013cc7      897710         mov dword [rdi + 0x10], esi             ; ../coreutils-8.31/lib/i-ring.c:33
0x00013cca      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:34
0x00013ccb      0f1f440000     nop dword [rax + rax]
;-- i_ring_empty:
0x00013cd0      0fb6471c       movzx eax, byte [rdi + 0x1c]            ; ../coreutils-8.31/lib/i-ring.c:38
0x00013cd4      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:40
0x00013cd5      90             nop
0x00013cd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- i_ring_push:
0x00013ce0      0fb6571c       movzx edx, byte [rdi + 0x1c]            ; ../coreutils-8.31/lib/i-ring.c:44
0x00013ce4      8b4f14         mov ecx, dword [rdi + 0x14]
0x00013ce7      83f201         xor edx, 1
0x00013cea      0fb6d2         movzx edx, dl
0x00013ced      01d1           add ecx, edx
0x00013cef      83e103         and ecx, 3
0x00013cf2      89c8           mov eax, ecx
0x00013cf4      4c8d0487       lea r8, [rdi + rax*4]
0x00013cf8      418b00         mov eax, dword [r8]                     ; ../coreutils-8.31/lib/i-ring.c:46
0x00013cfb      418930         mov dword [r8], esi                     ; ../coreutils-8.31/lib/i-ring.c:47
0x00013cfe      8b7718         mov esi, dword [rdi + 0x18]             ; ../coreutils-8.31/lib/i-ring.c:49
0x00013d01      894f14         mov dword [rdi + 0x14], ecx             ; ../coreutils-8.31/lib/i-ring.c:48
0x00013d04      39ce           cmp esi, ecx                            ; ../coreutils-8.31/lib/i-ring.c:49
0x00013d06      7508           jne 0x13d10
0x00013d08      01f2           add edx, esi                            ; ../coreutils-8.31/lib/i-ring.c:50
0x00013d0a      83e203         and edx, 3
0x00013d0d      895718         mov dword [rdi + 0x18], edx
0x00013d10      c6471c00       mov byte [rdi + 0x1c], 0                ; ../coreutils-8.31/lib/i-ring.c:51
0x00013d14      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:53
0x00013d15      90             nop
0x00013d16      662e0f1f8400.  nop word cs:[rax + rax]
;-- i_ring_pop:
0x00013d20      807f1c00       cmp byte [rdi + 0x1c], 0                ; ../coreutils-8.31/lib/i-ring.c:57
0x00013d24      752f           jne 0x13d55
0x00013d26      8b4714         mov eax, dword [rdi + 0x14]             ; ../coreutils-8.31/lib/i-ring.c:61
0x00013d29      8b7710         mov esi, dword [rdi + 0x10]             ; ../coreutils-8.31/lib/i-ring.c:62
0x00013d2c      488d0c87       lea rcx, [rdi + rax*4]
0x00013d30      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/i-ring.c:61
0x00013d33      8b01           mov eax, dword [rcx]
0x00013d35      8931           mov dword [rcx], esi                    ; ../coreutils-8.31/lib/i-ring.c:62
0x00013d37      3b5718         cmp edx, dword [rdi + 0x18]             ; ../coreutils-8.31/lib/i-ring.c:63
0x00013d3a      7414           je 0x13d50
0x00013d3c      83c203         add edx, 3                              ; ../coreutils-8.31/lib/i-ring.c:66
0x00013d3f      83e203         and edx, 3
0x00013d42      895714         mov dword [rdi + 0x14], edx
0x00013d45      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:68
0x00013d46      662e0f1f8400.  nop word cs:[rax + rax]
0x00013d50      c6471c01       mov byte [rdi + 0x1c], 1                ; ../coreutils-8.31/lib/i-ring.c:64
0x00013d54      c3             ret
0x00013d55      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/i-ring.c:57
0x00013d59      e832e8feff     call sym.imp.abort                      ; ../coreutils-8.31/lib/i-ring.c:60
0x00013d5e      6690           nop
;-- locale_charset:
0x00013d60      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x00013d64      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00013d69      e8b2ecfeff     call sym.imp.nl_langinfo
0x00013d6e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00013d71      741d           je 0x13d90
0x00013d73      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00013d76      488d15273700.  lea rdx, str.ASCII                      ; 0x174a4 ; "ASCII"
0x00013d7d      480f44c2       cmove rax, rdx
0x00013d81      4883c408       add rsp, 8
0x00013d85      c3             ret
0x00013d86      662e0f1f8400.  nop word cs:[rax + rax]
0x00013d90      488d050d3700.  lea rax, str.ASCII                      ; 0x174a4 ; "ASCII"
0x00013d97      4883c408       add rsp, 8
0x00013d9b      c3             ret
0x00013d9c      0f1f4000       nop dword [rax]
;-- openat_safer:
0x00013da0      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/openat-safer.c:30
0x00013da4      48894c2438     mov qword [rsp + 0x38], rcx
0x00013da9      31c9           xor ecx, ecx
0x00013dab      64488b042528.  mov rax, qword fs:[0x28]
0x00013db4      4889442418     mov qword [rsp + 0x18], rax
0x00013db9      31c0           xor eax, eax
0x00013dbb      f6c240         test dl, 0x40                           ; ../coreutils-8.31/lib/openat-safer.c:33 ; segment.PHDR
0x00013dbe      7528           jne 0x13de8
0x00013dc0      31c0           xor eax, eax
0x00013dc2      e8a9e9feff     call sym.imp.openat                     ; fcntl2.h:-83
0x00013dc7      89c7           mov edi, eax
0x00013dc9      e822b8ffff     call sym.fd_safer                       ; fcntl2.h:-82
0x00013dce      488b742418     mov rsi, qword [rsp + 0x18]
0x00013dd3      644833342528.  xor rsi, qword fs:[0x28]
0x00013ddc      752b           jne 0x13e09
0x00013dde      4883c458       add rsp, 0x58
0x00013de2      c3             ret
0x00013de3      0f1f440000     nop dword [rax + rax]                   ; fcntl2.h:-92
0x00013de8      488d442460     lea rax, [rsp + 0x60]
0x00013ded      c70424180000.  mov dword [rsp], 0x18                   ; [0x18:4]=0x3480 rip
0x00013df4      8b4c2438       mov ecx, dword [rsp + 0x38]
0x00013df8      4889442408     mov qword [rsp + 8], rax
0x00013dfd      488d442420     lea rax, [rsp + 0x20]
0x00013e02      4889442410     mov qword [rsp + 0x10], rax
0x00013e07      ebb7           jmp 0x13dc0
0x00013e09      e872e9feff     call sym.imp.__stack_chk_fail           ; fcntl2.h:-82
0x00013e0e      6690           nop
;-- randint_new:
0x00013e10      53             push rbx
0x00013e11      4889fb         mov rbx, rdi
0x00013e14      bf18000000     mov edi, 0x18
0x00013e19      e8a2ceffff     call sym.xmalloc
0x00013e1e      488918         mov qword [rax], rbx
0x00013e21      48c740100000.  mov qword [rax + 0x10], 0
0x00013e29      48c740080000.  mov qword [rax + 8], 0
0x00013e31      5b             pop rbx
0x00013e32      c3             ret
0x00013e33      0f1f00         nop dword [rax]
0x00013e36      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_all_new:
0x00013e40      53             push rbx
0x00013e41      e84a020000     call sym.randread_new
0x00013e46      4885c0         test rax, rax
0x00013e49      7425           je 0x13e70
0x00013e4b      4889c3         mov rbx, rax
0x00013e4e      bf18000000     mov edi, 0x18
0x00013e53      e868ceffff     call sym.xmalloc
0x00013e58      488918         mov qword [rax], rbx
0x00013e5b      48c740100000.  mov qword [rax + 0x10], 0
0x00013e63      48c740080000.  mov qword [rax + 8], 0
0x00013e6b      5b             pop rbx
0x00013e6c      c3             ret
0x00013e6d      0f1f00         nop dword [rax]
0x00013e70      31c0           xor eax, eax
0x00013e72      5b             pop rbx
0x00013e73      c3             ret
0x00013e74      6690           nop
0x00013e76      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_get_source:
0x00013e80      488b07         mov rax, qword [rdi]
0x00013e83      c3             ret
0x00013e84      6690           nop
0x00013e86      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_genmax:
0x00013e90      4157           push r15
0x00013e92      4156           push r14
0x00013e94      4c8d7e01       lea r15, [rsi + 1]
0x00013e98      4155           push r13
0x00013e9a      4154           push r12
0x00013e9c      4989fd         mov r13, rdi
0x00013e9f      55             push rbp
0x00013ea0      53             push rbx
0x00013ea1      4989f6         mov r14, rsi
0x00013ea4      4883ec28       sub rsp, 0x28
0x00013ea8      488b6f08       mov rbp, qword [rdi + 8]
0x00013eac      488b5f10       mov rbx, qword [rdi + 0x10]
0x00013eb0      64488b042528.  mov rax, qword fs:[0x28]
0x00013eb9      4889442418     mov qword [rsp + 0x18], rax
0x00013ebe      31c0           xor eax, eax
0x00013ec0      488b07         mov rax, qword [rdi]
0x00013ec3      4c8d642410     lea r12, [rsp + 0x10]
0x00013ec8      4889442408     mov qword [rsp + 8], rax
0x00013ecd      eb36           jmp 0x13f05
0x00013ecf      90             nop
0x00013ed0      4c39f3         cmp rbx, r14
0x00013ed3      0f8486000000   je 0x13f5f
0x00013ed9      4889d8         mov rax, rbx
0x00013edc      31d2           xor edx, edx
0x00013ede      4c29f0         sub rax, r14
0x00013ee1      49f7f7         div r15
0x00013ee4      4829d3         sub rbx, rdx
0x00013ee7      4889d7         mov rdi, rdx
0x00013eea      4889c6         mov rsi, rax
0x00013eed      31d2           xor edx, edx
0x00013eef      4889e8         mov rax, rbp
0x00013ef2      49f7f7         div r15
0x00013ef5      4839dd         cmp rbp, rbx
0x00013ef8      0f869a000000   jbe 0x13f98
0x00013efe      488d5fff       lea rbx, [rdi - 1]
0x00013f02      4889d5         mov rbp, rdx
0x00013f05      4c39f3         cmp rbx, r14
0x00013f08      73c6           jae 0x13ed0
0x00013f0a      4889d8         mov rax, rbx
0x00013f0d      31d2           xor edx, edx
0x00013f0f      90             nop
0x00013f10      48c1e008       shl rax, 8
0x00013f14      4883c201       add rdx, 1
0x00013f18      4805ff000000   add rax, 0xff
0x00013f1e      4939c6         cmp r14, rax
0x00013f21      77ed           ja 0x13f10
0x00013f23      488b7c2408     mov rdi, qword [rsp + 8]
0x00013f28      4c89e6         mov rsi, r12
0x00013f2b      e8b0040000     call sym.randread
0x00013f30      4c89e0         mov rax, r12
0x00013f33      0f1f440000     nop dword [rax + rax]
0x00013f38      0fb610         movzx edx, byte [rax]
0x00013f3b      48c1e308       shl rbx, 8
0x00013f3f      48c1e508       shl rbp, 8
0x00013f43      4881c3ff0000.  add rbx, 0xff
0x00013f4a      4883c001       add rax, 1
0x00013f4e      4801d5         add rbp, rdx
0x00013f51      4939de         cmp r14, rbx
0x00013f54      77e2           ja 0x13f38
0x00013f56      4c39f3         cmp rbx, r14
0x00013f59      0f857affffff   jne 0x13ed9
0x00013f5f      49c745100000.  mov qword [r13 + 0x10], 0
0x00013f67      49c745080000.  mov qword [r13 + 8], 0
0x00013f6f      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00013f74      6448330c2528.  xor rcx, qword fs:[0x28]
0x00013f7d      4889e8         mov rax, rbp
0x00013f80      7523           jne 0x13fa5
0x00013f82      4883c428       add rsp, 0x28
0x00013f86      5b             pop rbx
0x00013f87      5d             pop rbp
0x00013f88      415c           pop r12
0x00013f8a      415d           pop r13
0x00013f8c      415e           pop r14
0x00013f8e      415f           pop r15
0x00013f90      c3             ret
0x00013f91      0f1f80000000.  nop dword [rax]
0x00013f98      49894508       mov qword [r13 + 8], rax
0x00013f9c      49897510       mov qword [r13 + 0x10], rsi
0x00013fa0      4889d5         mov rbp, rdx
0x00013fa3      ebca           jmp 0x13f6f
0x00013fa5      e8d6e7feff     call sym.imp.__stack_chk_fail
0x00013faa      660f1f440000   nop word [rax + rax]
;-- randint_free:
0x00013fb0      53             push rbx
0x00013fb1      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00013fb8      4889fb         mov rbx, rdi
0x00013fbb      be18000000     mov esi, 0x18
0x00013fc0      e85bebfeff     call sym.imp.__explicit_bzero_chk
0x00013fc5      4889df         mov rdi, rbx
0x00013fc8      5b             pop rbx
0x00013fc9      e9b2ecfeff     jmp sym..plt.got
0x00013fce      6690           nop
;-- randint_all_free:
0x00013fd0      4155           push r13
0x00013fd2      4154           push r12
0x00013fd4      55             push rbp
0x00013fd5      53             push rbx
0x00013fd6      4889fb         mov rbx, rdi
0x00013fd9      4883ec08       sub rsp, 8
0x00013fdd      488b3f         mov rdi, qword [rdi]
0x00013fe0      e89b050000     call sym.randread_free
0x00013fe5      4189c4         mov r12d, eax
0x00013fe8      e8b3e5feff     call sym.imp.__errno_location
0x00013fed      448b28         mov r13d, dword [rax]
0x00013ff0      4889df         mov rdi, rbx
0x00013ff3      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00013ffa      be18000000     mov esi, 0x18
0x00013fff      4889c5         mov rbp, rax
0x00014002      e819ebfeff     call sym.imp.__explicit_bzero_chk
0x00014007      4889df         mov rdi, rbx
0x0001400a      e871ecfeff     call sym..plt.got
0x0001400f      44896d00       mov dword [rbp], r13d
0x00014013      4883c408       add rsp, 8
0x00014017      4489e0         mov eax, r12d
0x0001401a      5b             pop rbx
0x0001401b      5d             pop rbp
0x0001401c      415c           pop r12
0x0001401e      415d           pop r13
0x00014020      c3             ret
0x00014021      662e0f1f8400.  nop word cs:[rax + rax]
0x0001402b      0f1f440000     nop dword [rax + rax]
;-- randread_error:
0x00014030      55             push rbp
0x00014031      53             push rbx
0x00014032      4883ec08       sub rsp, 8
0x00014036      4885ff         test rdi, rdi
0x00014039      743d           je 0x14078
0x0001403b      e860a9ffff     call sym.quote
0x00014040      4889c5         mov rbp, rax
0x00014043      e858e5feff     call sym.imp.__errno_location
0x00014048      833800         cmp dword [rax], 0
0x0001404b      4889c3         mov rbx, rax
0x0001404e      ba05000000     mov edx, 5
0x00014053      7428           je 0x1407d
0x00014055      488d355e3400.  lea rsi, str.s:_read_error              ; 0x174ba ; "%s: read error"
0x0001405c      31ff           xor edi, edi
0x0001405e      e8cde6feff     call sym.imp.dcgettext
0x00014063      8b3dbf7f2000   mov edi, dword [obj.exit_failure]       ; [0x21c028:4]=1
0x00014069      8b33           mov esi, dword [rbx]
0x0001406b      4889c2         mov rdx, rax
0x0001406e      4889e9         mov rcx, rbp
0x00014071      31c0           xor eax, eax
0x00014073      e898eafeff     call sym.imp.error
0x00014078      e813e5feff     call sym.imp.abort
0x0001407d      488d35263400.  lea rsi, str.s:_end_of_file             ; 0x174aa ; "%s: end of file"
0x00014084      31ff           xor edi, edi
0x00014086      e8a5e6feff     call sym.imp.dcgettext
0x0001408b      ebd6           jmp 0x14063
0x0001408d      0f1f00         nop dword [rax]
;-- randread_new:
0x00014090      4157           push r15
0x00014092      4156           push r14
0x00014094      4155           push r13
0x00014096      4154           push r12
0x00014098      55             push rbp
0x00014099      53             push rbx
0x0001409a      4883ec38       sub rsp, 0x38
0x0001409e      64488b042528.  mov rax, qword fs:[0x28]
0x000140a7      4889442428     mov qword [rsp + 0x28], rax
0x000140ac      31c0           xor eax, eax
0x000140ae      4885f6         test rsi, rsi
0x000140b1      0f8421010000   je 0x141d8
0x000140b7      4885ff         test rdi, rdi
0x000140ba      4989fc         mov r12, rdi
0x000140bd      4889f5         mov rbp, rsi
0x000140c0      747e           je 0x14140
0x000140c2      488d350d3400.  lea rsi, [0x000174d6]                   ; "rb"
0x000140c9      e8e20c0000     call sym.fopen_safer
0x000140ce      4885c0         test rax, rax
0x000140d1      4989c5         mov r13, rax
0x000140d4      0f84fe010000   je 0x142d8
0x000140da      bf38100000     mov edi, 0x1038
0x000140df      e8dccbffff     call sym.xmalloc
0x000140e4      4889c3         mov rbx, rax
0x000140e7      4c8928         mov qword [rax], r13
0x000140ea      488d053fffff.  lea rax, sym.randread_error             ; 0x14030 ; "USH\x83\xec\bH\x85\xfft=\xe8`\xa9\xff\xffH\x89\xc5\xe8X\xe5\xfe\xff\x838"
0x000140f1      4881fd001000.  cmp rbp, 0x1000
0x000140f8      b900100000     mov ecx, 0x1000
0x000140fd      488d7318       lea rsi, [rbx + 0x18]
0x00014101      480f46cd       cmovbe rcx, rbp
0x00014105      48894308       mov qword [rbx + 8], rax
0x00014109      4c896310       mov qword [rbx + 0x10], r12
0x0001410d      31d2           xor edx, edx
0x0001410f      4c89ef         mov rdi, r13
0x00014112      e8b9e9feff     call sym.imp.setvbuf
0x00014117      488b542428     mov rdx, qword [rsp + 0x28]
0x0001411c      644833142528.  xor rdx, qword fs:[0x28]
0x00014125      4889d8         mov rax, rbx
0x00014128      0f85b1010000   jne 0x142df
0x0001412e      4883c438       add rsp, 0x38
0x00014132      5b             pop rbx
0x00014133      5d             pop rbp
0x00014134      415c           pop r12
0x00014136      415d           pop r13
0x00014138      415e           pop r14
0x0001413a      415f           pop r15
0x0001413c      c3             ret
0x0001413d      0f1f00         nop dword [rax]
0x00014140      bf38100000     mov edi, 0x1038
0x00014145      e876cbffff     call sym.xmalloc
0x0001414a      4889c3         mov rbx, rax
0x0001414d      48c700000000.  mov qword [rax], 0
0x00014154      488d05d5feff.  lea rax, sym.randread_error             ; 0x14030 ; "USH\x83\xec\bH\x85\xfft=\xe8`\xa9\xff\xffH\x89\xc5\xe8X\xe5\xfe\xff\x838"
0x0001415b      488d3d673300.  lea rdi, str.dev_urandom                ; 0x174c9 ; "/dev/urandom"
0x00014162      31f6           xor esi, esi
0x00014164      48c743100000.  mov qword [rbx + 0x10], 0
0x0001416c      48894308       mov qword [rbx + 8], rax
0x00014170      48c743180000.  mov qword [rbx + 0x18], 0
0x00014178      31c0           xor eax, eax
0x0001417a      e8b1e9feff     call sym.imp.open
0x0001417f      85c0           test eax, eax
0x00014181      4c8d6b20       lea r13, [rbx + 0x20]
0x00014185      4189c7         mov r15d, eax
0x00014188      787e           js 0x14208
0x0001418a      4881fd000800.  cmp rbp, 0x800
0x00014191      4889ea         mov rdx, rbp
0x00014194      41be00080000   mov r14d, 0x800
0x0001419a      490f47d6       cmova rdx, r14
0x0001419e      b918100000     mov ecx, 0x1018
0x000141a3      4c89ee         mov rsi, r13
0x000141a6      89c7           mov edi, eax
0x000141a8      e853e4feff     call sym.imp.__read_chk
0x000141ad      4489ff         mov edi, r15d
0x000141b0      4889c5         mov rbp, rax
0x000141b3      e8b8e6feff     call sym.imp.close
0x000141b8      4881fdff0700.  cmp rbp, 0x7ff
0x000141bf      0f8e1f010000   jle 0x142e4
0x000141c5      4c89ef         mov rdi, r13
0x000141c8      e893060000     call sym.isaac_seed
0x000141cd      e945ffffff     jmp 0x14117
0x000141d2      660f1f440000   nop word [rax + rax]
0x000141d8      bf38100000     mov edi, 0x1038
0x000141dd      e8decaffff     call sym.xmalloc
0x000141e2      4889c3         mov rbx, rax
0x000141e5      48c700000000.  mov qword [rax], 0
0x000141ec      488d053dfeff.  lea rax, sym.randread_error             ; 0x14030 ; "USH\x83\xec\bH\x85\xfft=\xe8`\xa9\xff\xffH\x89\xc5\xe8X\xe5\xfe\xff\x838"
0x000141f3      48c743100000.  mov qword [rbx + 0x10], 0
0x000141fb      48894308       mov qword [rbx + 8], rax
0x000141ff      e913ffffff     jmp 0x14117
0x00014204      0f1f4000       nop dword [rax]
0x00014208      4c8d642410     lea r12, [rsp + 0x10]
0x0001420d      31f6           xor esi, esi
0x0001420f      41be18000000   mov r14d, 0x18
0x00014215      4c89e7         mov rdi, r12
0x00014218      e8f3e5feff     call sym.imp.gettimeofday
0x0001421d      660f6f442410   movdqa xmm0, xmmword [rsp + 0x10]
0x00014223      0f114320       movups xmmword [rbx + 0x20], xmm0
0x00014227      e874e4feff     call sym.imp.getpid
0x0001422c      894330         mov dword [rbx + 0x30], eax
0x0001422f      89442410       mov dword [rsp + 0x10], eax
0x00014233      e8b8e9feff     call sym.imp.getppid
0x00014238      89442410       mov dword [rsp + 0x10], eax
0x0001423c      894334         mov dword [rbx + 0x34], eax
0x0001423f      bd00080000     mov ebp, 0x800
0x00014244      b804000000     mov eax, 4
0x00014249      4c29f5         sub rbp, r14
0x0001424c      4883fd04       cmp rbp, 4
0x00014250      480f47e8       cmova rbp, rax
0x00014254      e837e5feff     call sym.imp.getuid
0x00014259      85ed           test ebp, ebp
0x0001425b      89442410       mov dword [rsp + 0x10], eax
0x0001425f      4b8d4c3500     lea rcx, [r13 + r14]
0x00014264      89ee           mov esi, ebp
0x00014266      7414           je 0x1427c
0x00014268      31c0           xor eax, eax
0x0001426a      89c2           mov edx, eax
0x0001426c      83c001         add eax, 1
0x0001426f      410fb63c14     movzx edi, byte [r12 + rdx]
0x00014274      39f0           cmp eax, esi
0x00014276      40883c11       mov byte [rcx + rdx], dil
0x0001427a      72ee           jb 0x1426a
0x0001427c      4c01f5         add rbp, r14
0x0001427f      4881fdff0700.  cmp rbp, 0x7ff
0x00014286      0f8739ffffff   ja 0x141c5
0x0001428c      e83fe7feff     call sym.imp.getgid
0x00014291      89442410       mov dword [rsp + 0x10], eax
0x00014295      b800080000     mov eax, 0x800
0x0001429a      ba04000000     mov edx, 4
0x0001429f      4829e8         sub rax, rbp
0x000142a2      498d4c2d00     lea rcx, [r13 + rbp]
0x000142a7      4883f804       cmp rax, 4
0x000142ab      480f47c2       cmova rax, rdx
0x000142af      85c0           test eax, eax
0x000142b1      89c6           mov esi, eax
0x000142b3      0f840cffffff   je 0x141c5
0x000142b9      31c0           xor eax, eax
0x000142bb      89c2           mov edx, eax
0x000142bd      83c001         add eax, 1
0x000142c0      410fb63c14     movzx edi, byte [r12 + rdx]
0x000142c5      39f0           cmp eax, esi
0x000142c7      40883c11       mov byte [rcx + rdx], dil
0x000142cb      72ee           jb 0x142bb
0x000142cd      e9f3feffff     jmp 0x141c5
0x000142d2      660f1f440000   nop word [rax + rax]
0x000142d8      31db           xor ebx, ebx
0x000142da      e938feffff     jmp 0x14117
0x000142df      e89ce4feff     call sym.imp.__stack_chk_fail
0x000142e4      4885ed         test rbp, rbp
0x000142e7      4d89f7         mov r15, r14
0x000142ea      b810000000     mov eax, 0x10
0x000142ef      490f48ec       cmovs rbp, r12
0x000142f3      4c8d642410     lea r12, [rsp + 0x10]
0x000142f8      4929ef         sub r15, rbp
0x000142fb      4983ff10       cmp r15, 0x10
0x000142ff      4c89e7         mov rdi, r12
0x00014302      4c0f47f8       cmova r15, rax
0x00014306      31f6           xor esi, esi
0x00014308      e803e5feff     call sym.imp.gettimeofday
0x0001430d      498d442d00     lea rax, [r13 + rbp]
0x00014312      4c01fd         add rbp, r15
0x00014315      4489f9         mov ecx, r15d
0x00014318      4881fdff0700.  cmp rbp, 0x7ff
0x0001431f      4c89e6         mov rsi, r12
0x00014322      4889c7         mov rdi, rax
0x00014325      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x00014327      0f8798feffff   ja 0x141c5
0x0001432d      4d89f7         mov r15, r14
0x00014330      41b804000000   mov r8d, 4
0x00014336      4929ef         sub r15, rbp
0x00014339      4c89442408     mov qword [rsp + 8], r8
0x0001433e      4983ff04       cmp r15, 4
0x00014342      4d0f47f8       cmova r15, r8
0x00014346      4a8d543d00     lea rdx, [rbp + r15]
0x0001434b      4c01ed         add rbp, r13
0x0001434e      48891424       mov qword [rsp], rdx
0x00014352      e849e3feff     call sym.imp.getpid
0x00014357      488b1424       mov rdx, qword [rsp]
0x0001435b      89442410       mov dword [rsp + 0x10], eax
0x0001435f      4489f9         mov ecx, r15d
0x00014362      4889ef         mov rdi, rbp
0x00014365      4c89e6         mov rsi, r12
0x00014368      4c8b442408     mov r8, qword [rsp + 8]
0x0001436d      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x0001436f      4881faff0700.  cmp rdx, 0x7ff
0x00014376      0f8f49feffff   jg 0x141c5
0x0001437c      4929d6         sub r14, rdx
0x0001437f      4983fe04       cmp r14, 4
0x00014383      4d0f47f0       cmova r14, r8
0x00014387      e864e8feff     call sym.imp.getppid
0x0001438c      488b1424       mov rdx, qword [rsp]
0x00014390      89442410       mov dword [rsp + 0x10], eax
0x00014394      4489f1         mov ecx, r14d
0x00014397      4c89e6         mov rsi, r12
0x0001439a      498d441500     lea rax, [r13 + rdx]
0x0001439f      4901d6         add r14, rdx
0x000143a2      4981feff0700.  cmp r14, 0x7ff
0x000143a9      4889c7         mov rdi, rax
0x000143ac      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x000143ae      0f8711feffff   ja 0x141c5
0x000143b4      e986feffff     jmp 0x1423f
0x000143b9      0f1f80000000.  nop dword [rax]
;-- randread_set_handler:
0x000143c0      48897708       mov qword [rdi + 8], rsi
0x000143c4      c3             ret
0x000143c5      90             nop
0x000143c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread_set_handler_arg:
0x000143d0      48897710       mov qword [rdi + 0x10], rsi
0x000143d4      c3             ret
0x000143d5      90             nop
0x000143d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread:
0x000143e0      4157           push r15
0x000143e2      4156           push r14
0x000143e4      4155           push r13
0x000143e6      4154           push r12
0x000143e8      4989fc         mov r12, rdi
0x000143eb      55             push rbp
0x000143ec      53             push rbx
0x000143ed      4889d5         mov rbp, rdx
0x000143f0      4889f3         mov rbx, rsi
0x000143f3      4883ec18       sub rsp, 0x18
0x000143f7      488b0f         mov rcx, qword [rdi]
0x000143fa      4885c9         test rcx, rcx
0x000143fd      48894c2408     mov qword [rsp + 8], rcx
0x00014402      7464           je 0x14468
0x00014404      e897e1feff     call sym.imp.__errno_location
0x00014409      488b4c2408     mov rcx, qword [rsp + 8]
0x0001440e      4989c5         mov r13, rax
0x00014411      eb23           jmp 0x14436
0x00014413      0f1f440000     nop dword [rax + rax]
0x00014418      498b0424       mov rax, qword [r12]
0x0001441c      498b7c2410     mov rdi, qword [r12 + 0x10]
0x00014421      8b00           mov eax, dword [rax]
0x00014423      83e020         and eax, 0x20                           ; "@"
0x00014426      0f45c2         cmovne eax, edx
0x00014429      41894500       mov dword [r13], eax
0x0001442d      41ff542408     call qword [r12 + 8]
0x00014432      498b0c24       mov rcx, qword [r12]
0x00014436      4889ea         mov rdx, rbp
0x00014439      4889df         mov rdi, rbx
0x0001443c      be01000000     mov esi, 1
0x00014441      e86ae2feff     call sym.imp.fread_unlocked
0x00014446      4801c3         add rbx, rax
0x00014449      4829c5         sub rbp, rax
0x0001444c      418b5500       mov edx, dword [r13]
0x00014450      75c6           jne 0x14418
0x00014452      4883c418       add rsp, 0x18
0x00014456      5b             pop rbx
0x00014457      5d             pop rbp
0x00014458      415c           pop r12
0x0001445a      415d           pop r13
0x0001445c      415e           pop r14
0x0001445e      415f           pop r15
0x00014460      c3             ret
0x00014461      0f1f80000000.  nop dword [rax]
0x00014468      4c8b7718       mov r14, qword [rdi + 0x18]
0x0001446c      488d87380800.  lea rax, [rdi + 0x838]
0x00014473      4c8d6f20       lea r13, [rdi + 0x20]
0x00014477      4889442408     mov qword [rsp + 8], rax
0x0001447c      4c39f2         cmp rdx, r14
0x0001447f      0f86dd000000   jbe 0x14562
0x00014485      be00080000     mov esi, 0x800
0x0001448a      4889df         mov rdi, rbx
0x0001448d      4c89f2         mov rdx, r14
0x00014490      4c29f6         sub rsi, r14
0x00014493      4803742408     add rsi, qword [rsp + 8]
0x00014498      4c01f3         add rbx, r14
0x0001449b      4c29f5         sub rbp, r14
0x0001449e      e8fde4feff     call sym.imp.memcpy
0x000144a3      f6c307         test bl, 7
0x000144a6      7568           jne 0x14510
0x000144a8      4881fdff0700.  cmp rbp, 0x7ff
0x000144af      0f869e000000   jbe 0x14553
0x000144b5      4c8dbd00f8ff.  lea r15, [rbp - 0x800]
0x000144bc      4d89fe         mov r14, r15
0x000144bf      4181e6ff0700.  and r14d, 0x7ff
0x000144c6      eb14           jmp 0x144dc
0x000144c8      0f1f84000000.  nop dword [rax + rax]
0x000144d0      4d39f7         cmp r15, r14
0x000144d3      743b           je 0x14510
0x000144d5      4981ef000800.  sub r15, 0x800
0x000144dc      4889de         mov rsi, rbx
0x000144df      4c89ef         mov rdi, r13
0x000144e2      4881c3000800.  add rbx, 0x800
0x000144e9      e8e2000000     call sym.isaac_refill
0x000144ee      4d85ff         test r15, r15
0x000144f1      4c89fd         mov rbp, r15
0x000144f4      75da           jne 0x144d0
0x000144f6      49c744241800.  mov qword [r12 + 0x18], 0
0x000144ff      4883c418       add rsp, 0x18
0x00014503      5b             pop rbx
0x00014504      5d             pop rbp
0x00014505      415c           pop r12
0x00014507      415d           pop r13
0x00014509      415e           pop r14
0x0001450b      415f           pop r15
0x0001450d      c3             ret
0x0001450e      6690           nop
0x00014510      488b742408     mov rsi, qword [rsp + 8]
0x00014515      4c89ef         mov rdi, r13
0x00014518      41be00080000   mov r14d, 0x800
0x0001451e      e8ad000000     call sym.isaac_refill
0x00014523      4881fd000800.  cmp rbp, 0x800
0x0001452a      0f8755ffffff   ja 0x14485
0x00014530      41be00080000   mov r14d, 0x800
0x00014536      488b742408     mov rsi, qword [rsp + 8]
0x0001453b      4889ea         mov rdx, rbp
0x0001453e      4889df         mov rdi, rbx
0x00014541      4929ee         sub r14, rbp
0x00014544      e857e4feff     call sym.imp.memcpy
0x00014549      4d89742418     mov qword [r12 + 0x18], r14
0x0001454e      e9fffeffff     jmp 0x14452
0x00014553      488b742408     mov rsi, qword [rsp + 8]
0x00014558      4c89ef         mov rdi, r13
0x0001455b      e870000000     call sym.isaac_refill
0x00014560      ebce           jmp 0x14530
0x00014562      4989c7         mov r15, rax
0x00014565      4d29f7         sub r15, r14
0x00014568      498d87000800.  lea rax, [r15 + 0x800]
0x0001456f      4889442408     mov qword [rsp + 8], rax
0x00014574      ebc0           jmp 0x14536
0x00014576      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread_free:
0x00014580      55             push rbp
0x00014581      53             push rbx
0x00014582      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00014589      4889fb         mov rbx, rdi
0x0001458c      be38100000     mov esi, 0x1038
0x00014591      4883ec08       sub rsp, 8
0x00014595      488b2f         mov rbp, qword [rdi]
0x00014598      e883e5feff     call sym.imp.__explicit_bzero_chk
0x0001459d      4889df         mov rdi, rbx
0x000145a0      e8dbe6feff     call sym..plt.got
0x000145a5      4885ed         test rbp, rbp
0x000145a8      7416           je 0x145c0
0x000145aa      4883c408       add rsp, 8
0x000145ae      4889ef         mov rdi, rbp
0x000145b1      5b             pop rbx
0x000145b2      5d             pop rbp
0x000145b3      e9f8040000     jmp sym.rpl_fclose
0x000145b8      0f1f84000000.  nop dword [rax + rax]
0x000145c0      4883c408       add rsp, 8
0x000145c4      31c0           xor eax, eax
0x000145c6      5b             pop rbx
0x000145c7      5d             pop rbp
0x000145c8      c3             ret
0x000145c9      0f1f80000000.  nop dword [rax]
;-- isaac_refill:
0x000145d0      488b87100800.  mov rax, qword [rdi + 0x810]
0x000145d7      488b97000800.  mov rdx, qword [rdi + 0x800]
0x000145de      4c8d8f000400.  lea r9, [rdi + 0x400]
0x000145e5      488d4801       lea rcx, [rax + 1]
0x000145e9      4889f8         mov rax, rdi
0x000145ec      48898f100800.  mov qword [rdi + 0x810], rcx
0x000145f3      48038f080800.  add rcx, qword [rdi + 0x808]
0x000145fa      660f1f440000   nop word [rax + rax]
0x00014600      4989d0         mov r8, rdx
0x00014603      49c1e015       shl r8, 0x15
0x00014607      4c31c2         xor rdx, r8
0x0001460a      4c8b00         mov r8, qword [rax]
0x0001460d      48f7d2         not rdx
0x00014610      480390000400.  add rdx, qword [rax + 0x400]
0x00014617      4d89c2         mov r10, r8
0x0001461a      4181e2f80700.  and r10d, 0x7f8
0x00014621      4e8b1c17       mov r11, qword [rdi + r10]
0x00014625      4989d2         mov r10, rdx
0x00014628      49c1ea05       shr r10, 5
0x0001462c      4901d3         add r11, rdx
0x0001462f      4c31d2         xor rdx, r10
0x00014632      4c01d9         add rcx, r11
0x00014635      488908         mov qword [rax], rcx
0x00014638      48c1e908       shr rcx, 8
0x0001463c      81e1f8070000   and ecx, 0x7f8
0x00014642      4c8b1c0f       mov r11, qword [rdi + rcx]
0x00014646      4d01c3         add r11, r8
0x00014649      4c891e         mov qword [rsi], r11
0x0001464c      480390080400.  add rdx, qword [rax + 0x408]
0x00014653      488b4808       mov rcx, qword [rax + 8]
0x00014657      4989d2         mov r10, rdx
0x0001465a      4889ca         mov rdx, rcx
0x0001465d      81e2f8070000   and edx, 0x7f8
0x00014663      4c8b0417       mov r8, qword [rdi + rdx]
0x00014667      4c89d2         mov rdx, r10
0x0001466a      48c1e20c       shl rdx, 0xc
0x0001466e      4c31d2         xor rdx, r10
0x00014671      4d01d0         add r8, r10
0x00014674      4d01d8         add r8, r11
0x00014677      4c894008       mov qword [rax + 8], r8
0x0001467b      49c1e808       shr r8, 8
0x0001467f      4181e0f80700.  and r8d, 0x7f8
0x00014686      4a030c07       add rcx, qword [rdi + r8]
0x0001468a      48894e08       mov qword [rsi + 8], rcx
0x0001468e      4c8b4010       mov r8, qword [rax + 0x10]
0x00014692      4989cb         mov r11, rcx
0x00014695      480390100400.  add rdx, qword [rax + 0x410]
0x0001469c      4c89c1         mov rcx, r8
0x0001469f      81e1f8070000   and ecx, 0x7f8
0x000146a5      4c8b140f       mov r10, qword [rdi + rcx]
0x000146a9      4901d2         add r10, rdx
0x000146ac      4c89d1         mov rcx, r10
0x000146af      4c01d9         add rcx, r11
0x000146b2      48894810       mov qword [rax + 0x10], rcx
0x000146b6      48c1e908       shr rcx, 8
0x000146ba      81e1f8070000   and ecx, 0x7f8
0x000146c0      4c8b140f       mov r10, qword [rdi + rcx]
0x000146c4      4889d1         mov rcx, rdx
0x000146c7      48c1e921       shr rcx, 0x21
0x000146cb      4831ca         xor rdx, rcx
0x000146ce      4d01c2         add r10, r8
0x000146d1      4c895610       mov qword [rsi + 0x10], r10
0x000146d5      488b4818       mov rcx, qword [rax + 0x18]
0x000146d9      480390180400.  add rdx, qword [rax + 0x418]
0x000146e0      4989c8         mov r8, rcx
0x000146e3      4181e0f80700.  and r8d, 0x7f8
0x000146ea      4e8b1c07       mov r11, qword [rdi + r8]
0x000146ee      4901d3         add r11, rdx
0x000146f1      4d89d8         mov r8, r11
0x000146f4      4d01d0         add r8, r10
0x000146f7      4883c020       add rax, 0x20                           ; "@"
0x000146fb      4883c620       add rsi, 0x20                           ; "@"
0x000146ff      4c8940f8       mov qword [rax - 8], r8
0x00014703      49c1e808       shr r8, 8
0x00014707      4181e0f80700.  and r8d, 0x7f8
0x0001470e      4a030c07       add rcx, qword [rdi + r8]
0x00014712      48894ef8       mov qword [rsi - 8], rcx
0x00014716      4c39c8         cmp rax, r9
0x00014719      0f82e1feffff   jb 0x14600
0x0001471f      4c8d8f000800.  lea r9, [rdi + 0x800]
0x00014726      662e0f1f8400.  nop word cs:[rax + rax]
0x00014730      4989d0         mov r8, rdx
0x00014733      49c1e015       shl r8, 0x15
0x00014737      4c31c2         xor rdx, r8
0x0001473a      4c8b00         mov r8, qword [rax]
0x0001473d      48f7d2         not rdx
0x00014740      48039000fcff.  add rdx, qword [rax - 0x400]
0x00014747      4d89c2         mov r10, r8
0x0001474a      4181e2f80700.  and r10d, 0x7f8
0x00014751      4e8b1c17       mov r11, qword [rdi + r10]
0x00014755      4989d2         mov r10, rdx
0x00014758      49c1ea05       shr r10, 5
0x0001475c      4901d3         add r11, rdx
0x0001475f      4c31d2         xor rdx, r10
0x00014762      4c01d9         add rcx, r11
0x00014765      488908         mov qword [rax], rcx
0x00014768      48c1e908       shr rcx, 8
0x0001476c      81e1f8070000   and ecx, 0x7f8
0x00014772      4c8b1c0f       mov r11, qword [rdi + rcx]
0x00014776      4d01c3         add r11, r8
0x00014779      4c891e         mov qword [rsi], r11
0x0001477c      48039008fcff.  add rdx, qword [rax - 0x3f8]
0x00014783      488b4808       mov rcx, qword [rax + 8]
0x00014787      4989d2         mov r10, rdx
0x0001478a      4889ca         mov rdx, rcx
0x0001478d      81e2f8070000   and edx, 0x7f8
0x00014793      4c8b0417       mov r8, qword [rdi + rdx]
0x00014797      4c89d2         mov rdx, r10
0x0001479a      48c1e20c       shl rdx, 0xc
0x0001479e      4c31d2         xor rdx, r10
0x000147a1      4d01d0         add r8, r10
0x000147a4      4d01d8         add r8, r11
0x000147a7      4c894008       mov qword [rax + 8], r8
0x000147ab      49c1e808       shr r8, 8
0x000147af      4181e0f80700.  and r8d, 0x7f8
0x000147b6      4a030c07       add rcx, qword [rdi + r8]
0x000147ba      48894e08       mov qword [rsi + 8], rcx
0x000147be      4c8b4010       mov r8, qword [rax + 0x10]
0x000147c2      4989cb         mov r11, rcx
0x000147c5      48039010fcff.  add rdx, qword [rax - 0x3f0]
0x000147cc      4c89c1         mov rcx, r8
0x000147cf      81e1f8070000   and ecx, 0x7f8
0x000147d5      4c8b140f       mov r10, qword [rdi + rcx]
0x000147d9      4901d2         add r10, rdx
0x000147dc      4c89d1         mov rcx, r10
0x000147df      4c01d9         add rcx, r11
0x000147e2      48894810       mov qword [rax + 0x10], rcx
0x000147e6      48c1e908       shr rcx, 8
0x000147ea      81e1f8070000   and ecx, 0x7f8
0x000147f0      4c8b140f       mov r10, qword [rdi + rcx]
0x000147f4      4889d1         mov rcx, rdx
0x000147f7      48c1e921       shr rcx, 0x21
0x000147fb      4831ca         xor rdx, rcx
0x000147fe      4d01c2         add r10, r8
0x00014801      4c895610       mov qword [rsi + 0x10], r10
0x00014805      488b4818       mov rcx, qword [rax + 0x18]
0x00014809      48039018fcff.  add rdx, qword [rax - 0x3e8]
0x00014810      4989c8         mov r8, rcx
0x00014813      4181e0f80700.  and r8d, 0x7f8
0x0001481a      4e8b1c07       mov r11, qword [rdi + r8]
0x0001481e      4901d3         add r11, rdx
0x00014821      4d89d8         mov r8, r11
0x00014824      4d01d0         add r8, r10
0x00014827      4883c020       add rax, 0x20                           ; "@"
0x0001482b      4883c620       add rsi, 0x20                           ; "@"
0x0001482f      4c8940f8       mov qword [rax - 8], r8
0x00014833      49c1e808       shr r8, 8
0x00014837      4181e0f80700.  and r8d, 0x7f8
0x0001483e      4a030c07       add rcx, qword [rdi + r8]
0x00014842      48894ef8       mov qword [rsi - 8], rcx
0x00014846      4c39c8         cmp rax, r9
0x00014849      0f82e1feffff   jb 0x14730
0x0001484f      488997000800.  mov qword [rdi + 0x800], rdx
0x00014856      48898f080800.  mov qword [rdi + 0x808], rcx
0x0001485d      c3             ret
0x0001485e      6690           nop
;-- isaac_seed:
0x00014860      4155           push r13
0x00014862      4154           push r12
0x00014864      4c8da7000800.  lea r12, [rdi + 0x800]
0x0001486b      55             push rbp
0x0001486c      4889fa         mov rdx, rdi
0x0001486f      53             push rbx
0x00014870      4889f8         mov rax, rdi
0x00014873      48b9abc0446c.  movabs rcx, 0x98f5704f6c44c0ab
0x0001487d      49baed89fccb.  movabs r10, 0xae985bf2cbfc89ed
0x00014887      48bd1593a0a5.  movabs rbp, 0x48fe4a0fa5a09315
0x00014891      48becee05583.  movabs rsi, 0x82f053db8355e0ce
0x0001489b      49b82455594a.  movabs r8, 0xb29b2e824a595524
0x000148a5      48bba012473d.  movabs rbx, 0x8c0ea5053d4712a0
0x000148af      49bb62c83ac7.  movabs r11, 0xb9f8b322c73ac862
0x000148b9      49b97c4b88a2.  movabs r9, 0x647c4677a2884b7c
0x000148c3      0f1f440000     nop dword [rax + rax]
0x000148c8      48037020       add rsi, qword [rax + 0x20]
0x000148cc      48034838       add rcx, qword [rax + 0x38]
0x000148d0      4c8b28         mov r13, qword [rax]
0x000148d3      48036828       add rbp, qword [rax + 0x28]
0x000148d7      4c035030       add r10, qword [rax + 0x30]
0x000148db      4929f5         sub r13, rsi
0x000148de      4d01e9         add r9, r13
0x000148e1      4989cd         mov r13, rcx
0x000148e4      49c1ed09       shr r13, 9
0x000148e8      4c01c9         add rcx, r9
0x000148eb      4c31ed         xor rbp, r13
0x000148ee      4c8b6808       mov r13, qword [rax + 8]
0x000148f2      4929ed         sub r13, rbp
0x000148f5      4d01eb         add r11, r13
0x000148f8      4d89cd         mov r13, r9
0x000148fb      49c1e509       shl r13, 9
0x000148ff      4d01d9         add r9, r11
0x00014902      4d31ea         xor r10, r13
0x00014905      4c8b6810       mov r13, qword [rax + 0x10]
0x00014909      4d29d5         sub r13, r10
0x0001490c      4c01eb         add rbx, r13
0x0001490f      4d89dd         mov r13, r11
0x00014912      49c1ed17       shr r13, 0x17
0x00014916      4901db         add r11, rbx
0x00014919      4c31e9         xor rcx, r13
0x0001491c      4c8b6818       mov r13, qword [rax + 0x18]
0x00014920      4929cd         sub r13, rcx
0x00014923      4d01e8         add r8, r13
0x00014926      4989dd         mov r13, rbx
0x00014929      49c1e50f       shl r13, 0xf
0x0001492d      4c01c3         add rbx, r8
0x00014930      4d31e9         xor r9, r13
0x00014933      4d89c5         mov r13, r8
0x00014936      4c29ce         sub rsi, r9
0x00014939      49c1ed0e       shr r13, 0xe
0x0001493d      4c8908         mov qword [rax], r9
0x00014940      4d31eb         xor r11, r13
0x00014943      4989f5         mov r13, rsi
0x00014946      4901f0         add r8, rsi
0x00014949      4c29dd         sub rbp, r11
0x0001494c      49c1e514       shl r13, 0x14
0x00014950      4c895808       mov qword [rax + 8], r11
0x00014954      4c31eb         xor rbx, r13
0x00014957      4c8d2c2e       lea r13, [rsi + rbp]
0x0001495b      4889ee         mov rsi, rbp
0x0001495e      4929da         sub r10, rbx
0x00014961      48c1ee11       shr rsi, 0x11
0x00014965      48895810       mov qword [rax + 0x10], rbx
0x00014969      4931f0         xor r8, rsi
0x0001496c      4c89d6         mov rsi, r10
0x0001496f      4c01d5         add rbp, r10
0x00014972      4c29c1         sub rcx, r8
0x00014975      48c1e60e       shl rsi, 0xe
0x00014979      4c894018       mov qword [rax + 0x18], r8
0x0001497d      4c31ee         xor rsi, r13
0x00014980      4901ca         add r10, rcx
0x00014983      48896828       mov qword [rax + 0x28], rbp
0x00014987      48897020       mov qword [rax + 0x20], rsi
0x0001498b      4c895030       mov qword [rax + 0x30], r10
0x0001498f      4883c040       add rax, 0x40                           ; segment.PHDR
0x00014993      488948f8       mov qword [rax - 8], rcx
0x00014997      4939c4         cmp r12, rax
0x0001499a      0f8528ffffff   jne 0x148c8
0x000149a0      48037220       add rsi, qword [rdx + 0x20]
0x000149a4      48034a38       add rcx, qword [rdx + 0x38]
0x000149a8      4c8b22         mov r12, qword [rdx]
0x000149ab      48036a28       add rbp, qword [rdx + 0x28]
0x000149af      4c035230       add r10, qword [rdx + 0x30]
0x000149b3      4929f4         sub r12, rsi
0x000149b6      4d01e1         add r9, r12
0x000149b9      4989cc         mov r12, rcx
0x000149bc      49c1ec09       shr r12, 9
0x000149c0      4c01c9         add rcx, r9
0x000149c3      4c31e5         xor rbp, r12
0x000149c6      4c8b6208       mov r12, qword [rdx + 8]
0x000149ca      4929ec         sub r12, rbp
0x000149cd      4d01e3         add r11, r12
0x000149d0      4d89cc         mov r12, r9
0x000149d3      49c1e409       shl r12, 9
0x000149d7      4d01d9         add r9, r11
0x000149da      4d31e2         xor r10, r12
0x000149dd      4c8b6210       mov r12, qword [rdx + 0x10]
0x000149e1      4d29d4         sub r12, r10
0x000149e4      4c01e3         add rbx, r12
0x000149e7      4d89dc         mov r12, r11
0x000149ea      49c1ec17       shr r12, 0x17
0x000149ee      4901db         add r11, rbx
0x000149f1      4c31e1         xor rcx, r12
0x000149f4      4c8b6218       mov r12, qword [rdx + 0x18]
0x000149f8      4929cc         sub r12, rcx
0x000149fb      4d01e0         add r8, r12
0x000149fe      4989dc         mov r12, rbx
0x00014a01      49c1e40f       shl r12, 0xf
0x00014a05      4c01c3         add rbx, r8
0x00014a08      4d31e1         xor r9, r12
0x00014a0b      4d89c4         mov r12, r8
0x00014a0e      4c29ce         sub rsi, r9
0x00014a11      49c1ec0e       shr r12, 0xe
0x00014a15      4c890a         mov qword [rdx], r9
0x00014a18      4d31e3         xor r11, r12
0x00014a1b      4989f4         mov r12, rsi
0x00014a1e      4901f0         add r8, rsi
0x00014a21      4c29dd         sub rbp, r11
0x00014a24      49c1e414       shl r12, 0x14
0x00014a28      4c895a08       mov qword [rdx + 8], r11
0x00014a2c      4c31e3         xor rbx, r12
0x00014a2f      4c8d242e       lea r12, [rsi + rbp]
0x00014a33      4889ee         mov rsi, rbp
0x00014a36      4929da         sub r10, rbx
0x00014a39      48c1ee11       shr rsi, 0x11
0x00014a3d      48895a10       mov qword [rdx + 0x10], rbx
0x00014a41      4931f0         xor r8, rsi
0x00014a44      4c89d6         mov rsi, r10
0x00014a47      4c01d5         add rbp, r10
0x00014a4a      4c29c1         sub rcx, r8
0x00014a4d      48c1e60e       shl rsi, 0xe
0x00014a51      4c894218       mov qword [rdx + 0x18], r8
0x00014a55      4c31e6         xor rsi, r12
0x00014a58      4901ca         add r10, rcx
0x00014a5b      48896a28       mov qword [rdx + 0x28], rbp
0x00014a5f      48897220       mov qword [rdx + 0x20], rsi
0x00014a63      4c895230       mov qword [rdx + 0x30], r10
0x00014a67      4883c240       add rdx, 0x40                           ; segment.PHDR
0x00014a6b      48894af8       mov qword [rdx - 8], rcx
0x00014a6f      4839d0         cmp rax, rdx
0x00014a72      0f8528ffffff   jne 0x149a0
0x00014a78      5b             pop rbx
0x00014a79      48c787100800.  mov qword [rdi + 0x810], 0
0x00014a84      48c787080800.  mov qword [rdi + 0x808], 0
0x00014a8f      5d             pop rbp
0x00014a90      48c787000800.  mov qword [rdi + 0x800], 0
0x00014a9b      415c           pop r12
0x00014a9d      415d           pop r13
0x00014a9f      c3             ret
;-- dup_safer:
0x00014aa0      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x00014aa5      31f6           xor esi, esi
0x00014aa7      31c0           xor eax, eax
0x00014aa9      e982000000     jmp sym.rpl_fcntl
0x00014aae      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- rpl_fclose:
0x00014ab0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00014ab2      55             push rbp
0x00014ab3      53             push rbx
0x00014ab4      4889fb         mov rbx, rdi
0x00014ab7      e804dffeff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00014abc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00014abe      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00014ac1      7854           js 0x14b17                              ; ../coreutils-8.31/lib/fclose.c:66
0x00014ac3      e888dffeff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00014ac8      85c0           test eax, eax
0x00014aca      752c           jne 0x14af8
0x00014acc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00014acf      e89cc5ffff     call sym.rpl_fflush
0x00014ad4      85c0           test eax, eax
0x00014ad6      743c           je 0x14b14
0x00014ad8      e8c3dafeff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00014add      448b20         mov r12d, dword [rax]
0x00014ae0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00014ae3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00014ae6      e8f5dbfeff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00014aeb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00014aee      7530           jne 0x14b20
0x00014af0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00014af1      5d             pop rbp
0x00014af2      415c           pop r12
0x00014af4      c3             ret
0x00014af5      0f1f00         nop dword [rax]
0x00014af8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00014afb      e8c0defeff     call sym.imp.fileno
0x00014b00      31f6           xor esi, esi
0x00014b02      ba01000000     mov edx, 1
0x00014b07      89c7           mov edi, eax
0x00014b09      e8f2dcfeff     call sym.imp.lseek
0x00014b0e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00014b12      75b8           jne 0x14acc
0x00014b14      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00014b17      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00014b18      5d             pop rbp
0x00014b19      415c           pop r12
0x00014b1b      e9c0dbfeff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00014b20      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00014b24      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00014b29      ebc5           jmp 0x14af0
0x00014b2b      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x00014b30      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x00014b32      55             push rbp
0x00014b33      89fd           mov ebp, edi
0x00014b35      53             push rbx
0x00014b36      4883ec50       sub rsp, 0x50
0x00014b3a      64488b042528.  mov rax, qword fs:[0x28]
0x00014b43      4889442418     mov qword [rsp + 0x18], rax
0x00014b48      31c0           xor eax, eax
0x00014b4a      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x00014b4f      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x00014b51      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x00014b56      48894c2438     mov qword [rsp + 0x38], rcx
0x00014b5b      4c89442440     mov qword [rsp + 0x40], r8
0x00014b60      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x00014b65      488d442420     lea rax, [rsp + 0x20]
0x00014b6a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x00014b6f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x00014b76      4889442410     mov qword [rsp + 0x10], rax
0x00014b7b      0f8401020000   je 0x14d82                              ; ../coreutils-8.31/lib/fcntl.c:210
0x00014b81      81fe06040000   cmp esi, 0x406
0x00014b87      7547           jne 0x14bd0
0x00014b89      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x00014b8e      833d5f7b2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x21c6f4:4]=0
0x00014b95      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x3480 rip
0x00014b9c      448b6010       mov r12d, dword [rax + 0x10]
0x00014ba0      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00014ba3      0f882a010000   js 0x14cd3                              ; ../coreutils-8.31/lib/fcntl.c:507
0x00014ba9      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00014bab      be06040000     mov esi, 0x406
0x00014bb0      e8bbdafeff     call sym.imp.fcntl
0x00014bb5      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00014bb7      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00014bb9      0f8889010000   js 0x14d48                              ; ../coreutils-8.31/lib/fcntl.c:510
0x00014bbf      c7052b7b2000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x21c6f4:4]=0
0x00014bc9      eb45           jmp 0x14c10
0x00014bcb      0f1f440000     nop dword [rax + rax]
0x00014bd0      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x00014bd3      742b           je 0x14c00
0x00014bd5      7f59           jg 0x14c30
0x00014bd7      83fe04         cmp esi, 4
0x00014bda      0f84d0000000   je 0x14cb0
0x00014be0      0f8fba000000   jg 0x14ca0
0x00014be6      83fe02         cmp esi, 2
0x00014be9      0f84c1000000   je 0x14cb0
0x00014bef      7f0f           jg 0x14c00
0x00014bf1      83fe01         cmp esi, 1
0x00014bf4      7562           jne 0x14c58
0x00014bf6      662e0f1f8400.  nop word cs:[rax + rax]
0x00014c00      89ef           mov edi, ebp
0x00014c02      31c0           xor eax, eax
0x00014c04      e867dafeff     call sym.imp.fcntl
0x00014c09      89c3           mov ebx, eax
0x00014c0b      0f1f440000     nop dword [rax + rax]
0x00014c10      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00014c15      6448330c2528.  xor rcx, qword fs:[0x28]
0x00014c1e      89d8           mov eax, ebx
0x00014c20      0f8557010000   jne 0x14d7d                             ; ../coreutils-8.31/lib/fcntl.c:355
0x00014c26      4883c450       add rsp, 0x50
0x00014c2a      5b             pop rbx
0x00014c2b      5d             pop rbp
0x00014c2c      415c           pop r12
0x00014c2e      c3             ret
0x00014c2f      90             nop
0x00014c30      81fe07040000   cmp esi, 0x407
0x00014c36      7f48           jg 0x14c80
0x00014c38      81fe06040000   cmp esi, 0x406
0x00014c3e      7d70           jge 0x14cb0
0x00014c40      81fe01040000   cmp esi, 0x401
0x00014c46      74b8           je 0x14c00
0x00014c48      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x00014c4e      7460           je 0x14cb0
0x00014c50      81fe00040000   cmp esi, 0x400
0x00014c56      7458           je 0x14cb0
0x00014c58      8b0424         mov eax, dword [rsp]
0x00014c5b      83f82f         cmp eax, 0x2f
0x00014c5e      0f8736010000   ja 0x14d9a
0x00014c64      4803442410     add rax, qword [rsp + 0x10]
0x00014c69      488b10         mov rdx, qword [rax]
0x00014c6c      89ef           mov edi, ebp
0x00014c6e      31c0           xor eax, eax
0x00014c70      e8fbd9feff     call sym.imp.fcntl
0x00014c75      89c3           mov ebx, eax
0x00014c77      eb97           jmp 0x14c10
0x00014c79      0f1f80000000.  nop dword [rax]
0x00014c80      81fe09040000   cmp esi, 0x409
0x00014c86      7428           je 0x14cb0
0x00014c88      0f8c72ffffff   jl 0x14c00
0x00014c8e      81fe0a040000   cmp esi, 0x40a
0x00014c94      75c2           jne 0x14c58
0x00014c96      e965ffffff     jmp 0x14c00                             ; ../coreutils-8.31/lib/fcntl.c:350
0x00014c9b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00014ca0      83fe09         cmp esi, 9
0x00014ca3      0f8457ffffff   je 0x14c00
0x00014ca9      7f05           jg 0x14cb0
0x00014cab      83fe08         cmp esi, 8
0x00014cae      75a8           jne 0x14c58
0x00014cb0      8b0424         mov eax, dword [rsp]
0x00014cb3      83f82f         cmp eax, 0x2f
0x00014cb6      0f87e8000000   ja 0x14da4
0x00014cbc      4803442410     add rax, qword [rsp + 0x10]
0x00014cc1      8b10           mov edx, dword [rax]
0x00014cc3      89ef           mov edi, ebp
0x00014cc5      31c0           xor eax, eax
0x00014cc7      e8a4d9feff     call sym.imp.fcntl
0x00014ccc      89c3           mov ebx, eax
0x00014cce      e93dffffff     jmp 0x14c10
0x00014cd3      31f6           xor esi, esi
0x00014cd5      31c0           xor eax, eax
0x00014cd7      e894d9feff     call sym.imp.fcntl
0x00014cdc      85c0           test eax, eax
0x00014cde      89c3           mov ebx, eax
0x00014ce0      0f882affffff   js 0x14c10
0x00014ce6      833d077a2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x21c6f4:4]=0
0x00014ced      0f851dffffff   jne 0x14c10
0x00014cf3      31c0           xor eax, eax
0x00014cf5      be01000000     mov esi, 1
0x00014cfa      89df           mov edi, ebx
0x00014cfc      e86fd9feff     call sym.imp.fcntl
0x00014d01      85c0           test eax, eax
0x00014d03      781c           js 0x14d21
0x00014d05      83c801         or eax, 1
0x00014d08      be02000000     mov esi, 2
0x00014d0d      89df           mov edi, ebx
0x00014d0f      89c2           mov edx, eax
0x00014d11      31c0           xor eax, eax
0x00014d13      e858d9feff     call sym.imp.fcntl
0x00014d18      83f8ff         cmp eax, 0xffffffff
0x00014d1b      0f85effeffff   jne 0x14c10
0x00014d21      e87ad8feff     call sym.imp.__errno_location
0x00014d26      448b20         mov r12d, dword [rax]
0x00014d29      4889c5         mov rbp, rax
0x00014d2c      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x00014d2e      e83ddbfeff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x00014d33      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00014d38      44896500       mov dword [rbp], r12d
0x00014d3c      e9cffeffff     jmp 0x14c10
0x00014d41      0f1f80000000.  nop dword [rax]
0x00014d48      e853d8feff     call sym.imp.__errno_location
0x00014d4d      833816         cmp dword [rax], 0x16
0x00014d50      0f8569feffff   jne 0x14bbf
0x00014d56      31f6           xor esi, esi
0x00014d58      31c0           xor eax, eax
0x00014d5a      4489e2         mov edx, r12d
0x00014d5d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x00014d5f      e80cd9feff     call sym.imp.fcntl
0x00014d64      85c0           test eax, eax
0x00014d66      89c3           mov ebx, eax
0x00014d68      0f88a2feffff   js 0x14c10
0x00014d6e      c7057c792000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x21c6f4:4]=0
0x00014d78      e976ffffff     jmp 0x14cf3
0x00014d7d      e8fed9feff     call sym.imp.__stack_chk_fail
0x00014d82      488b442410     mov rax, qword [rsp + 0x10]
0x00014d87      31f6           xor esi, esi
0x00014d89      8b5010         mov edx, dword [rax + 0x10]
0x00014d8c      31c0           xor eax, eax
0x00014d8e      e8ddd8feff     call sym.imp.fcntl
0x00014d93      89c3           mov ebx, eax
0x00014d95      e976feffff     jmp 0x14c10
0x00014d9a      488b442408     mov rax, qword [rsp + 8]
0x00014d9f      e9c5feffff     jmp 0x14c69
0x00014da4      488b442408     mov rax, qword [rsp + 8]
0x00014da9      e913ffffff     jmp 0x14cc1
0x00014dae      6690           nop
;-- fopen_safer:
0x00014db0      4154           push r12                                ; ../coreutils-8.31/lib/fopen-safer.c:32
0x00014db2      55             push rbp                                ; /b/sys:258
0x00014db3      4889f5         mov rbp, rsi                            ; /b/sys:377
0x00014db6      53             push rbx                                ; /b/sys:718
0x00014db7      e8a4ddfeff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/fopen-safer.c:33
0x00014dbc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fopen-safer.c:35
0x00014dbf      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:33
0x00014dc2      740d           je 0x14dd1                              ; ../coreutils-8.31/lib/fopen-safer.c:35
0x00014dc4      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:37
0x00014dc7      e8f4dbfeff     call sym.imp.fileno
0x00014dcc      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/fopen-safer.c:39
0x00014dcf      760f           jbe 0x14de0
0x00014dd1      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:63
0x00014dd4      5b             pop rbx                                 ; /stdio.h:9
0x00014dd5      5d             pop rbp
0x00014dd6      415c           pop r12
0x00014dd8      c3             ret
0x00014dd9      0f1f80000000.  nop dword [rax]
0x00014de0      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fopen-safer.c:41
0x00014de2      e8b9fcffff     call sym.dup_safer
0x00014de7      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:43
0x00014de9      4189c4         mov r12d, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:41
0x00014dec      783a           js 0x14e28                              ; ../coreutils-8.31/lib/fopen-safer.c:43
0x00014dee      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:51
0x00014df1      e8bafcffff     call sym.rpl_fclose
0x00014df6      85c0           test eax, eax
0x00014df8      7513           jne 0x14e0d                             ; /stdio.h:13
0x00014dfa      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fopen-safer.c:52
0x00014dfd      4489e7         mov edi, r12d
0x00014e00      e87bdcfeff     call sym.imp.fdopen
0x00014e05      4885c0         test rax, rax
0x00014e08      4889c3         mov rbx, rax
0x00014e0b      75c4           jne 0x14dd1
0x00014e0d      e88ed7feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:54
0x00014e12      8b28           mov ebp, dword [rax]
0x00014e14      4889c3         mov rbx, rax
0x00014e17      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/fopen-safer.c:55
0x00014e1a      e851dafeff     call sym.imp.close
0x00014e1f      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/fopen-safer.c:56
0x00014e21      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:57
0x00014e23      ebac           jmp 0x14dd1
0x00014e25      0f1f00         nop dword [rax]
0x00014e28      e873d7feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:45
0x00014e2d      448b20         mov r12d, dword [rax]
0x00014e30      4889c5         mov rbp, rax
0x00014e33      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:46
0x00014e36      e875fcffff     call sym.rpl_fclose
0x00014e3b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00014e3d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fopen-safer.c:47
0x00014e41      eb8e           jmp 0x14dd1                             ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00014e43      662e0f1f8400.  nop word cs:[rax + rax]
0x00014e4d      0f1f00         nop dword [rax]
;-- __libc_csu_init:
0x00014e50      4157           push r15                                ; /stdio.h:18
0x00014e52      4156           push r14
0x00014e54      4989d7         mov r15, rdx
0x00014e57      4155           push r13
0x00014e59      4154           push r12
0x00014e5b      4c8d252e6920.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x21b790
0x00014e62      55             push rbp
0x00014e63      488d2d2e6920.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x21b798 ; "@5"
0x00014e6a      53             push rbx                                ; /stdio.h:23
0x00014e6b      4189fd         mov r13d, edi
0x00014e6e      4989f6         mov r14, rsi
0x00014e71      4c29e5         sub rbp, r12
0x00014e74      4883ec08       sub rsp, 8
0x00014e78      48c1fd03       sar rbp, 3                              ; /r.c:3182
0x00014e7c      e8bfd6feff     call sym._init
0x00014e81      4885ed         test rbp, rbp
0x00014e84      7420           je 0x14ea6                              ; /b/sys:829
0x00014e86      31db           xor ebx, ebx
0x00014e88      0f1f84000000.  nop dword [rax + rax]
0x00014e90      4c89fa         mov rdx, r15
0x00014e93      4c89f6         mov rsi, r14
0x00014e96      4489ef         mov edi, r13d
0x00014e99      41ff14dc       call qword [r12 + rbx*8]
0x00014e9d      4883c301       add rbx, 1
0x00014ea1      4839dd         cmp rbp, rbx
0x00014ea4      75ea           jne 0x14e90
0x00014ea6      4883c408       add rsp, 8
0x00014eaa      5b             pop rbx
0x00014eab      5d             pop rbp
0x00014eac      415c           pop r12
0x00014eae      415d           pop r13
0x00014eb0      415e           pop r14
0x00014eb2      415f           pop r15
0x00014eb4      c3             ret
0x00014eb5      90             nop
0x00014eb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00014ec0      f3c3           ret                                     ; /stdio.h:25
0x00014ec2      662e0f1f8400.  nop word cs:[rax + rax]
0x00014ecc      0f1f4000       nop dword [rax]
;-- atexit:
0x00014ed0      488b15317120.  mov rdx, qword [obj.__dso_handle]       ; [0x21c008:8]=0x21c008 obj.__dso_handle
0x00014ed7      31f6           xor esi, esi
0x00014ed9      e9e2dcfeff     jmp sym.imp.__cxa_atexit
0x00014ede      0000           add byte [rax], al
