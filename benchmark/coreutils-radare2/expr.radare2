;-- section..plt:
;-- .plt:
0x000019b0      ff35ca932100   push qword [0x0021ad80]                 ; [12] -r-x section size 1056 named .plt
0x000019b6      ff25cc932100   jmp qword [0x0021ad88]                  ; [0x21ad88:8]=0
0x000019bc      0f1f4000       nop dword [rax]
;-- imp.__ctype_toupper_loc:
0x000019c0      ff25ca932100   jmp qword [reloc.__ctype_toupper_loc]   ; [0x21ad90:8]=0x19c6
0x000019c6      6800000000     push 0
0x000019cb      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x000019d0      ff25c2932100   jmp qword [reloc.free]                  ; [0x21ad98:8]=0x19d6
0x000019d6      6801000000     push 1
0x000019db      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x000019e0      ff25ba932100   jmp qword [reloc.abort]                 ; [0x21ada0:8]=0x19e6
0x000019e6      6802000000     push 2
0x000019eb      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000019f0      ff25b2932100   jmp qword [reloc.__errno_location]      ; [0x21ada8:8]=0x19f6
0x000019f6      6803000000     push 3
0x000019fb      e9b0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001a00      ff25aa932100   jmp qword [reloc.strncmp]               ; [0x21adb0:8]=0x1a06
0x00001a06      6804000000     push 4
0x00001a0b      e9a0ffffff     jmp sym..plt
;-- imp._exit:
0x00001a10      ff25a2932100   jmp qword [reloc._exit]                 ; [0x21adb8:8]=0x1a16
0x00001a16      6805000000     push 5
0x00001a1b      e990ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001a20      ff259a932100   jmp qword [reloc.__fpending]            ; [0x21adc0:8]=0x1a26 ; "&\x1a"
0x00001a26      6806000000     push 6
0x00001a2b      e980ffffff     jmp sym..plt
;-- imp.puts:
0x00001a30      ff2592932100   jmp qword [reloc.puts]                  ; [0x21adc8:8]=0x1a36 ; "6\x1a"
0x00001a36      6807000000     push 7
0x00001a3b      e970ffffff     jmp sym..plt
;-- imp.iswcntrl:
0x00001a40      ff258a932100   jmp qword [reloc.iswcntrl]              ; [0x21add0:8]=0x1a46 ; "F\x1a"
0x00001a46      6808000000     push 8
0x00001a4b      e960ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001a50      ff2582932100   jmp qword [reloc.textdomain]            ; [0x21add8:8]=0x1a56 ; "V\x1a"
0x00001a56      6809000000     push 9
0x00001a5b      e950ffffff     jmp sym..plt
;-- imp.iswctype:
0x00001a60      ff257a932100   jmp qword [reloc.iswctype]              ; [0x21ade0:8]=0x1a66 ; "f\x1a"
0x00001a66      680a000000     push 0xa
0x00001a6b      e940ffffff     jmp sym..plt
;-- imp.fclose:
0x00001a70      ff2572932100   jmp qword [reloc.fclose]                ; [0x21ade8:8]=0x1a76 ; "v\x1a"
0x00001a76      680b000000     push 0xb
0x00001a7b      e930ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001a80      ff256a932100   jmp qword [reloc.bindtextdomain]        ; [0x21adf0:8]=0x1a86
0x00001a86      680c000000     push 0xc
0x00001a8b      e920ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001a90      ff2562932100   jmp qword [reloc.dcgettext]             ; [0x21adf8:8]=0x1a96
0x00001a96      680d000000     push 0xd
0x00001a9b      e910ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001aa0      ff255a932100   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x21ae00:8]=0x1aa6
0x00001aa6      680e000000     push 0xe
0x00001aab      e900ffffff     jmp sym..plt
;-- imp.strlen:
0x00001ab0      ff2552932100   jmp qword [reloc.strlen]                ; [0x21ae08:8]=0x1ab6
0x00001ab6      680f000000     push 0xf
0x00001abb      e9f0feffff     jmp sym..plt
;-- imp.__gmpz_get_str:
0x00001ac0      ff254a932100   jmp qword [reloc.__gmpz_get_str]        ; [0x21ae10:8]=0x1ac6
0x00001ac6      6810000000     push 0x10
0x00001acb      e9e0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001ad0      ff2542932100   jmp qword [reloc.__stack_chk_fail]      ; [0x21ae18:8]=0x1ad6
0x00001ad6      6811000000     push 0x11
0x00001adb      e9d0feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001ae0      ff253a932100   jmp qword [reloc.getopt_long]           ; [0x21ae20:8]=0x1ae6
0x00001ae6      6812000000     push 0x12
0x00001aeb      e9c0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001af0      ff2532932100   jmp qword [reloc.mbrtowc]               ; [0x21ae28:8]=0x1af6
0x00001af6      6813000000     push 0x13
0x00001afb      e9b0feffff     jmp sym..plt
;-- imp.strchr:
0x00001b00      ff252a932100   jmp qword [reloc.strchr]                ; [0x21ae30:8]=0x1b06
0x00001b06      6814000000     push 0x14
0x00001b0b      e9a0feffff     jmp sym..plt
;-- imp.__overflow:
0x00001b10      ff2522932100   jmp qword [reloc.__overflow]            ; [0x21ae38:8]=0x1b16
0x00001b16      6815000000     push 0x15
0x00001b1b      e990feffff     jmp sym..plt
;-- imp.strrchr:
0x00001b20      ff251a932100   jmp qword [reloc.strrchr]               ; [0x21ae40:8]=0x1b26 ; "&\x1b"
0x00001b26      6816000000     push 0x16
0x00001b2b      e980feffff     jmp sym..plt
;-- imp.lseek:
0x00001b30      ff2512932100   jmp qword [reloc.lseek]                 ; [0x21ae48:8]=0x1b36 ; "6\x1b"
0x00001b36      6817000000     push 0x17
0x00001b3b      e970feffff     jmp sym..plt
;-- imp.__gmpz_out_str:
0x00001b40      ff250a932100   jmp qword [reloc.__gmpz_out_str]        ; [0x21ae50:8]=0x1b46 ; "F\x1b"
0x00001b46      6818000000     push 0x18
0x00001b4b      e960feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001b50      ff2502932100   jmp qword [reloc.__assert_fail]         ; [0x21ae58:8]=0x1b56 ; "V\x1b"
0x00001b56      6819000000     push 0x19
0x00001b5b      e950feffff     jmp sym..plt
;-- imp.memset:
0x00001b60      ff25fa922100   jmp qword [reloc.memset]                ; [0x21ae60:8]=0x1b66 ; "f\x1b"
0x00001b66      681a000000     push 0x1a
0x00001b6b      e940feffff     jmp sym..plt
;-- imp.strcspn:
0x00001b70      ff25f2922100   jmp qword [reloc.strcspn]               ; [0x21ae68:8]=0x1b76 ; "v\x1b"
0x00001b76      681b000000     push 0x1b
0x00001b7b      e930feffff     jmp sym..plt
;-- imp.memchr:
0x00001b80      ff25ea922100   jmp qword [reloc.memchr]                ; [0x21ae70:8]=0x1b86
0x00001b86      681c000000     push 0x1c
0x00001b8b      e920feffff     jmp sym..plt
;-- imp.memcmp:
0x00001b90      ff25e2922100   jmp qword [reloc.memcmp]                ; [0x21ae78:8]=0x1b96
0x00001b96      681d000000     push 0x1d
0x00001b9b      e910feffff     jmp sym..plt
;-- imp.wctype:
0x00001ba0      ff25da922100   jmp qword [reloc.wctype]                ; [0x21ae80:8]=0x1ba6
0x00001ba6      681e000000     push 0x1e
0x00001bab      e900feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001bb0      ff25d2922100   jmp qword [reloc.fputs_unlocked]        ; [0x21ae88:8]=0x1bb6
0x00001bb6      681f000000     push 0x1f
0x00001bbb      e9f0fdffff     jmp sym..plt
;-- imp.calloc:
0x00001bc0      ff25ca922100   jmp qword [reloc.calloc]                ; [0x21ae90:8]=0x1bc6
0x00001bc6      6820000000     push 0x20                               ; "@"
0x00001bcb      e9e0fdffff     jmp sym..plt
;-- imp.strcmp:
0x00001bd0      ff25c2922100   jmp qword [reloc.strcmp]                ; [0x21ae98:8]=0x1bd6
0x00001bd6      6821000000     push 0x21                               ; '!'
0x00001bdb      e9d0fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001be0      ff25ba922100   jmp qword [reloc.memcpy]                ; [0x21aea0:8]=0x1be6
0x00001be6      6822000000     push 0x22                               ; '"'
0x00001beb      e9c0fdffff     jmp sym..plt
;-- imp.fileno:
0x00001bf0      ff25b2922100   jmp qword [reloc.fileno]                ; [0x21aea8:8]=0x1bf6
0x00001bf6      6823000000     push 0x23                               ; '#'
0x00001bfb      e9b0fdffff     jmp sym..plt
;-- imp.wcwidth:
0x00001c00      ff25aa922100   jmp qword [reloc.wcwidth]               ; [0x21aeb0:8]=0x1c06
0x00001c06      6824000000     push 0x24                               ; '$'
0x00001c0b      e9a0fdffff     jmp sym..plt
;-- imp.iswalnum:
0x00001c10      ff25a2922100   jmp qword [reloc.iswalnum]              ; [0x21aeb8:8]=0x1c16
0x00001c16      6825000000     push 0x25                               ; '%'
0x00001c1b      e990fdffff     jmp sym..plt
;-- imp.malloc:
0x00001c20      ff259a922100   jmp qword [reloc.malloc]                ; [0x21aec0:8]=0x1c26 ; "&\x1c"
0x00001c26      6826000000     push 0x26                               ; '&'
0x00001c2b      e980fdffff     jmp sym..plt
;-- imp.wcrtomb:
0x00001c30      ff2592922100   jmp qword [reloc.wcrtomb]               ; [0x21aec8:8]=0x1c36 ; "6\x1c"
0x00001c36      6827000000     push 0x27                               ; '''
0x00001c3b      e970fdffff     jmp sym..plt
;-- imp.fflush:
0x00001c40      ff258a922100   jmp qword [reloc.fflush]                ; [0x21aed0:8]=0x1c46 ; "F\x1c"
0x00001c46      6828000000     push 0x28                               ; '('
0x00001c4b      e960fdffff     jmp sym..plt
;-- imp.__gmpz_clear:
0x00001c50      ff2582922100   jmp qword [reloc.__gmpz_clear]          ; [0x21aed8:8]=0x1c56 ; "V\x1c"
0x00001c56      6829000000     push 0x29                               ; ')'
0x00001c5b      e950fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001c60      ff257a922100   jmp qword [reloc.nl_langinfo]           ; [0x21aee0:8]=0x1c66 ; "f\x1c"
0x00001c66      682a000000     push 0x2a                               ; '*'
0x00001c6b      e940fdffff     jmp sym..plt
;-- imp.strcoll:
0x00001c70      ff2572922100   jmp qword [reloc.strcoll]               ; [0x21aee8:8]=0x1c76 ; "v\x1c"
0x00001c76      682b000000     push 0x2b                               ; '+'
0x00001c7b      e930fdffff     jmp sym..plt
;-- imp.__freading:
0x00001c80      ff256a922100   jmp qword [reloc.__freading]            ; [0x21aef0:8]=0x1c86
0x00001c86      682c000000     push 0x2c                               ; ','
0x00001c8b      e920fdffff     jmp sym..plt
;-- imp.realloc:
0x00001c90      ff2562922100   jmp qword [reloc.realloc]               ; [0x21aef8:8]=0x1c96
0x00001c96      682d000000     push 0x2d                               ; '-'
0x00001c9b      e910fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001ca0      ff255a922100   jmp qword [reloc.setlocale]             ; [0x21af00:8]=0x1ca6
0x00001ca6      682e000000     push 0x2e                               ; '.'
0x00001cab      e900fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001cb0      ff2552922100   jmp qword [reloc.__printf_chk]          ; [0x21af08:8]=0x1cb6
0x00001cb6      682f000000     push 0x2f                               ; '/'
0x00001cbb      e9f0fcffff     jmp sym..plt
;-- imp.__gmpz_init_set_ui:
0x00001cc0      ff254a922100   jmp qword [reloc.__gmpz_init_set_ui]    ; [0x21af10:8]=0x1cc6
0x00001cc6      6830000000     push 0x30                               ; '0'
0x00001ccb      e9e0fcffff     jmp sym..plt
;-- imp.btowc:
0x00001cd0      ff2542922100   jmp qword [reloc.btowc]                 ; [0x21af18:8]=0x1cd6
0x00001cd6      6831000000     push 0x31                               ; '1'
0x00001cdb      e9d0fcffff     jmp sym..plt
;-- imp.mempcpy:
0x00001ce0      ff253a922100   jmp qword [reloc.mempcpy]               ; [0x21af20:8]=0x1ce6
0x00001ce6      6832000000     push 0x32                               ; '2'
0x00001ceb      e9c0fcffff     jmp sym..plt
;-- imp.memmove:
0x00001cf0      ff2532922100   jmp qword [reloc.memmove]               ; [0x21af28:8]=0x1cf6
0x00001cf6      6833000000     push 0x33                               ; '3'
0x00001cfb      e9b0fcffff     jmp sym..plt
;-- imp.error:
0x00001d00      ff252a922100   jmp qword [reloc.error]                 ; [0x21af30:8]=0x1d06
0x00001d06      6834000000     push 0x34                               ; '4'
0x00001d0b      e9a0fcffff     jmp sym..plt
;-- imp.fseeko:
0x00001d10      ff2522922100   jmp qword [reloc.fseeko]                ; [0x21af38:8]=0x1d16
0x00001d16      6835000000     push 0x35                               ; '5'
0x00001d1b      e990fcffff     jmp sym..plt
;-- imp.towlower:
0x00001d20      ff251a922100   jmp qword [reloc.towlower]              ; [0x21af40:8]=0x1d26 ; "&\x1d"
0x00001d26      6836000000     push 0x36                               ; '6'
0x00001d2b      e980fcffff     jmp sym..plt
;-- imp.towupper:
0x00001d30      ff2512922100   jmp qword [reloc.towupper]              ; [0x21af48:8]=0x1d36 ; "6\x1d"
0x00001d36      6837000000     push 0x37                               ; '7'
0x00001d3b      e970fcffff     jmp sym..plt
;-- imp.__gmpz_init_set_str:
0x00001d40      ff250a922100   jmp qword [reloc.__gmpz_init_set_str]   ; [0x21af50:8]=0x1d46 ; "F\x1d"
0x00001d46      6838000000     push 0x38                               ; '8'
0x00001d4b      e960fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001d50      ff2502922100   jmp qword [reloc.__cxa_atexit]          ; [0x21af58:8]=0x1d56 ; "V\x1d"
0x00001d56      6839000000     push 0x39                               ; '9'
0x00001d5b      e950fcffff     jmp sym..plt
;-- imp.exit:
0x00001d60      ff25fa912100   jmp qword [reloc.exit]                  ; [0x21af60:8]=0x1d66 ; "f\x1d"
0x00001d66      683a000000     push 0x3a                               ; ':'
0x00001d6b      e940fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001d70      ff25f2912100   jmp qword [reloc.fwrite]                ; [0x21af68:8]=0x1d76 ; "v\x1d"
0x00001d76      683b000000     push 0x3b                               ; ';'
0x00001d7b      e930fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001d80      ff25ea912100   jmp qword [reloc.__fprintf_chk]         ; [0x21af70:8]=0x1d86
0x00001d86      683c000000     push 0x3c                               ; '<'
0x00001d8b      e920fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001d90      ff25e2912100   jmp qword [reloc.mbsinit]               ; [0x21af78:8]=0x1d96
0x00001d96      683d000000     push 0x3d                               ; '='
0x00001d9b      e910fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001da0      ff25da912100   jmp qword [reloc.iswprint]              ; [0x21af80:8]=0x1da6
0x00001da6      683e000000     push 0x3e                               ; '>'
0x00001dab      e900fcffff     jmp sym..plt
;-- imp.__ctype_tolower_loc:
0x00001db0      ff25d2912100   jmp qword [reloc.__ctype_tolower_loc]   ; [0x21af88:8]=0x1db6
0x00001db6      683f000000     push 0x3f                               ; '?'
0x00001dbb      e9f0fbffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001dc0      ff25ca912100   jmp qword [reloc.__ctype_b_loc]         ; [0x21af90:8]=0x1dc6
0x00001dc6      6840000000     push 0x40                               ; segment.PHDR
0x00001dcb      e9e0fbffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001dd0      .qword 0x90660021920a25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001dd8      0000           add byte [rax], al
0x00001dda      0000           add byte [rax], al
0x00001ddc      0000           add byte [rax], al
0x00001dde      0000           add byte [rax], al
;-- section..text:
;-- .text:
;-- mbuiter_multi_next.part.2:
0x00001de0      488d0d794301.  lea rcx, obj.__PRETTY_FUNCTION__.7929   ; 0x16160 ; "mbuiter_multi_next" ; [14] -r-x section size 79838 named .text
0x00001de7      488d35223801.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x15610 ; "../coreutils-8.31/lib/mbuiter.h"
0x00001dee      488d3d884101.  lea rdi, str.iter__cur.wc____0          ; 0x15f7d ; "iter->cur.wc == 0"
0x00001df5      4883ec08       sub rsp, 8
0x00001df9      bab3000000     mov edx, 0xb3
0x00001dfe      e84dfdffff     call sym.imp.__assert_fail
0x00001e03      662e0f1f8400.  nop word cs:[rax + rax]
0x00001e0d      0f1f00         nop dword [rax]
;-- main:
0x00001e10      55             push rbp
0x00001e11      53             push rbx
0x00001e12      89fd           mov ebp, edi
0x00001e14      4889f3         mov rbx, rsi
0x00001e17      4883ec08       sub rsp, 8
0x00001e1b      488b3e         mov rdi, qword [rsi]
0x00001e1e      e85d290000     call sym.set_program_name
0x00001e23      488d35374901.  lea rsi, [0x00016761]
0x00001e2a      bf06000000     mov edi, 6
0x00001e2f      e86cfeffff     call sym.imp.setlocale
0x00001e34      488d35a54201.  lea rsi, [0x000160e0]                   ; "/usr/local/share/locale"
0x00001e3b      488d3dcc4101.  lea rdi, [0x0001600e]                   ; "coreutils"
0x00001e42      e839fcffff     call sym.imp.bindtextdomain
0x00001e47      488d3dc04101.  lea rdi, [0x0001600e]                   ; "coreutils"
0x00001e4e      e8fdfbffff     call sym.imp.textdomain
0x00001e53      488d3d662000.  lea rdi, sym.close_stdout               ; 0x3ec0 ; "USH\x83\xec\bH\x8b=\xbbq!"
0x00001e5a      c705ac912100.  mov dword [obj.exit_failure], 3         ; [0x21b010:4]=1
0x00001e64      e847370100     call sym.atexit
0x00001e69      488d058d4201.  lea rax, [0x000160fd]                   ; "Paul Eggert"
0x00001e70      6a00           push 0
0x00001e72      4c8d0db70400.  lea r9, sym.usage                       ; 0x2330 ; "AUAT\xba\x05"
0x00001e79      4c8d05784201.  lea r8, [0x000160f8]                    ; "8.31"
0x00001e80      488d0d834101.  lea rcx, str.GNU_coreutils              ; 0x1600a ; "GNU coreutils"
0x00001e87      488d15014101.  lea rdx, str.expr                       ; 0x15f8f ; "expr"
0x00001e8e      50             push rax
0x00001e8f      488d05734201.  lea rax, str.James_Youngman             ; 0x16109 ; "James Youngman"
0x00001e96      4889de         mov rsi, rbx
0x00001e99      89ef           mov edi, ebp
0x00001e9b      50             push rax
0x00001e9c      488d05754201.  lea rax, str.Mike_Parker                ; 0x16118 ; "Mike Parker"
0x00001ea3      50             push rax
0x00001ea4      31c0           xor eax, eax
0x00001ea6      e8c5200000     call sym.parse_long_options
0x00001eab      4883c420       add rsp, 0x20
0x00001eaf      83fd01         cmp ebp, 1
0x00001eb2      0f86e8000000   jbe 0x1fa0
0x00001eb8      488b7b08       mov rdi, qword [rbx + 8]
0x00001ebc      488d35614201.  lea rsi, [0x00016124]                   ; "--"
0x00001ec3      e808fdffff     call sym.imp.strcmp
0x00001ec8      85c0           test eax, eax
0x00001eca      750d           jne 0x1ed9
0x00001ecc      83fd02         cmp ebp, 2
0x00001ecf      0f84cb000000   je 0x1fa0
0x00001ed5      4883c308       add rbx, 8
0x00001ed9      4883c308       add rbx, 8
0x00001edd      bf01000000     mov edi, 1
0x00001ee2      48891de79121.  mov qword [obj.args], rbx               ; [0x21b0d0:8]=0
0x00001ee9      e8f21e0000     call sym.eval
0x00001eee      4889c3         mov rbx, rax
0x00001ef1      488b05d89121.  mov rax, qword [obj.args]               ; [0x21b0d0:8]=0
0x00001ef8      488b10         mov rdx, qword [rax]
0x00001efb      4885d2         test rdx, rdx
0x00001efe      756a           jne 0x1f6a
0x00001f00      8b03           mov eax, dword [rbx]
0x00001f02      85c0           test eax, eax
0x00001f04      7420           je 0x1f26
0x00001f06      83e801         sub eax, 1
0x00001f09      755a           jne 0x1f65
0x00001f0b      488b7b08       mov rdi, qword [rbx + 8]
0x00001f0f      e81cfbffff     call sym.imp.puts
0x00001f14      4889df         mov rdi, rbx
0x00001f17      e8c4020000     call sym.null
0x00001f1c      4883c408       add rsp, 8
0x00001f20      0fb6c0         movzx eax, al
0x00001f23      5b             pop rbx
0x00001f24      5d             pop rbp
0x00001f25      c3             ret
0x00001f26      488b3d5b9121.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21b088:8]=0
0x00001f2d      488d5308       lea rdx, [rbx + 8]
0x00001f31      be0a000000     mov esi, 0xa
0x00001f36      e805fcffff     call sym.imp.__gmpz_out_str
0x00001f3b      488b3d469121.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21b088:8]=0
0x00001f42      488b4728       mov rax, qword [rdi + 0x28]
0x00001f46      483b4730       cmp rax, qword [rdi + 0x30]
0x00001f4a      730d           jae 0x1f59
0x00001f4c      488d5001       lea rdx, [rax + 1]
0x00001f50      48895728       mov qword [rdi + 0x28], rdx
0x00001f54      c6000a         mov byte [rax], 0xa
0x00001f57      ebbb           jmp 0x1f14
0x00001f59      be0a000000     mov esi, 0xa
0x00001f5e      e8adfbffff     call sym.imp.__overflow
0x00001f63      ebaf           jmp 0x1f14
0x00001f65      e876faffff     call sym.imp.abort
0x00001f6a      be08000000     mov esi, 8
0x00001f6f      31ff           xor edi, edi
0x00001f71      e82a410000     call sym.quotearg_n_style
0x00001f76      488d35db3f01.  lea rsi, str.syntax_error:_unexpected_argument__s ; 0x15f58 ; "syntax error: unexpected argument %s"
0x00001f7d      4889c3         mov rbx, rax
0x00001f80      ba05000000     mov edx, 5
0x00001f85      31ff           xor edi, edi
0x00001f87      e804fbffff     call sym.imp.dcgettext
0x00001f8c      4889d9         mov rcx, rbx
0x00001f8f      4889c2         mov rdx, rax
0x00001f92      31f6           xor esi, esi
0x00001f94      bf02000000     mov edi, 2
0x00001f99      31c0           xor eax, eax
0x00001f9b      e860fdffff     call sym.imp.error
0x00001fa0      488d35804101.  lea rsi, str.missing_operand            ; 0x16127 ; "missing operand"
0x00001fa7      ba05000000     mov edx, 5
0x00001fac      31ff           xor edi, edi
0x00001fae      e8ddfaffff     call sym.imp.dcgettext
0x00001fb3      31ff           xor edi, edi
0x00001fb5      4889c2         mov rdx, rax
0x00001fb8      31f6           xor esi, esi
0x00001fba      31c0           xor eax, eax
0x00001fbc      e83ffdffff     call sym.imp.error
0x00001fc1      bf02000000     mov edi, 2
0x00001fc6      e865030000     call sym.usage
0x00001fcb      0f1f440000     nop dword [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00001fd0      31ed           xor ebp, ebp
0x00001fd2      4989d1         mov r9, rdx
0x00001fd5      5e             pop rsi
0x00001fd6      4889e2         mov rdx, rsp
0x00001fd9      4883e4f0       and rsp, 0xfffffffffffffff0
0x00001fdd      50             push rax
0x00001fde      54             push rsp
0x00001fdf      4c8d05ba3501.  lea r8, sym.__libc_csu_fini             ; 0x155a0
0x00001fe6      488d0d433501.  lea rcx, sym.__libc_csu_init            ; 0x15530 ; "AWAVI\x89\xd7AUATL\x8d%nU "
0x00001fed      488d3d1cfeff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1e10 ; "US\x89\xfdH\x89\xf3H\x83\xec\bH\x8b>\xe8])"
0x00001ff4      ff15be8f2100   call qword [reloc.__libc_start_main]    ; [0x21afb8:8]=0
0x00001ffa      f4             hlt
0x00001ffb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002000      488d3d799021.  lea rdi, loc._edata                     ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x21b080
0x00002007      55             push rbp
0x00002008      488d05719021.  lea rax, loc._edata                     ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x21b080
0x0000200f      4839f8         cmp rax, rdi
0x00002012      4889e5         mov rbp, rsp
0x00002015      7419           je 0x2030
0x00002017      488b05828f21.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x21afa0:8]=0
0x0000201e      4885c0         test rax, rax
0x00002021      740d           je 0x2030
0x00002023      5d             pop rbp
0x00002024      ffe0           jmp rax
0x00002026      662e0f1f8400.  nop word cs:[rax + rax]
0x00002030      5d             pop rbp
0x00002031      c3             ret
0x00002032      0f1f4000       nop dword [rax]
0x00002036      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002040      488d3d399021.  lea rdi, loc._edata                     ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x21b080
0x00002047      488d35329021.  lea rsi, loc._edata                     ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x21b080
0x0000204e      55             push rbp
0x0000204f      4829fe         sub rsi, rdi
0x00002052      4889e5         mov rbp, rsp
0x00002055      48c1fe03       sar rsi, 3
0x00002059      4889f0         mov rax, rsi
0x0000205c      48c1e83f       shr rax, 0x3f
0x00002060      4801c6         add rsi, rax
0x00002063      48d1fe         sar rsi, 1
0x00002066      7418           je 0x2080
0x00002068      488b05698f21.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x21afd8:8]=0
0x0000206f      4885c0         test rax, rax
0x00002072      740c           je 0x2080
0x00002074      5d             pop rbp
0x00002075      ffe0           jmp rax
0x00002077      660f1f840000.  nop word [rax + rax]
0x00002080      5d             pop rbp
0x00002081      c3             ret
0x00002082      0f1f4000       nop dword [rax]
0x00002086      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002090      803d31902100.  cmp byte [obj.completed.7697], 0        ; [0x21b0c8:1]=0
0x00002097      752f           jne 0x20c8
0x00002099      48833d3f8f21.  cmp qword [reloc.__cxa_finalize], 0     ; [0x21afe0:8]=0
0x000020a1      55             push rbp
0x000020a2      4889e5         mov rbp, rsp
0x000020a5      740c           je 0x20b3
0x000020a7      488b3d5a8f21.  mov rdi, qword [obj.__dso_handle]       ; [0x21b008:8]=0x21b008 obj.__dso_handle
0x000020ae      e81dfdffff     call sym..plt.got
0x000020b3      e848ffffff     call sym.deregister_tm_clones
0x000020b8      c60509902100.  mov byte [obj.completed.7697], 1        ; [0x21b0c8:1]=0
0x000020bf      5d             pop rbp
0x000020c0      c3             ret
0x000020c1      0f1f80000000.  nop dword [rax]
0x000020c8      f3c3           ret
0x000020ca      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x000020d0      55             push rbp
0x000020d1      4889e5         mov rbp, rsp
0x000020d4      5d             pop rbp
0x000020d5      e966ffffff     jmp sym.register_tm_clones
0x000020da      660f1f440000   nop word [rax + rax]
;-- nextarg:
0x000020e0      53             push rbx                                ; /src:639
0x000020e1      488b1de88f21.  mov rbx, qword [obj.args]               ; /src:640 ; [0x21b0d0:8]=0
0x000020e8      4889fe         mov rsi, rdi                            ; /src:639
0x000020eb      31c0           xor eax, eax
0x000020ed      488b3b         mov rdi, qword [rbx]                    ; /src:640
0x000020f0      4885ff         test rdi, rdi
0x000020f3      7418           je 0x210d
0x000020f5      e8d6faffff     call sym.imp.strcmp                     ; /src:644
0x000020fa      85c0           test eax, eax
0x000020fc      0f94c0         sete al
0x000020ff      0fb6d0         movzx edx, al                           ; /src:645
0x00002102      488d14d3       lea rdx, [rbx + rdx*8]
0x00002106      488915c38f21.  mov qword [obj.args], rdx               ; [0x21b0d0:8]=0
0x0000210d      5b             pop rbx                                 ; /src:648
0x0000210e      c3             ret
0x0000210f      90             nop
;-- require_more_args:
0x00002110      488b05b98f21.  mov rax, qword [obj.args]               ; /src:663 ; [0x21b0d0:8]=0
0x00002117      48833800       cmp qword [rax], 0                      ; /src:664
0x0000211b      7402           je 0x211f
0x0000211d      f3c3           ret
0x0000211f      53             push rbx                                ; /src:663
0x00002120      488b50f8       mov rdx, qword [rax - 8]                ; /src:665
0x00002124      be08000000     mov esi, 8
0x00002129      31ff           xor edi, edi
0x0000212b      e8703f0000     call sym.quotearg_n_style
0x00002130      488d35b13401.  lea rsi, str.syntax_error:_missing_argument_after__s ; 0x155e8 ; "syntax error: missing argument after %s"
0x00002137      4889c3         mov rbx, rax
0x0000213a      ba05000000     mov edx, 5
0x0000213f      31ff           xor edi, edi
0x00002141      e84af9ffff     call sym.imp.dcgettext
0x00002146      4889d9         mov rcx, rbx
0x00002149      4889c2         mov rdx, rax
0x0000214c      31f6           xor esi, esi
0x0000214e      bf02000000     mov edi, 2
0x00002153      31c0           xor eax, eax
0x00002155      e8a6fbffff     call sym.imp.error
0x0000215a      660f1f440000   nop word [rax + rax]
;-- str_value:
0x00002160      55             push rbp                                ; /src:485
0x00002161      53             push rbx
0x00002162      4889fd         mov rbp, rdi
0x00002165      bf18000000     mov edi, 0x18                           ; /src:486
0x0000216a      4883ec08       sub rsp, 8                              ; /src:485
0x0000216e      e84d4c0000     call sym.xmalloc                        ; /src:486
0x00002173      4889ef         mov rdi, rbp                            ; /src:488
0x00002176      4889c3         mov rbx, rax                            ; /src:486
0x00002179      c70001000000   mov dword [rax], 1                      ; /src:487
0x0000217f      e86c4e0000     call sym.xstrdup                        ; /src:488
0x00002184      48894308       mov qword [rbx + 8], rax
0x00002188      4883c408       add rsp, 8                              ; /src:490
0x0000218c      4889d8         mov rax, rbx
0x0000218f      5b             pop rbx
0x00002190      5d             pop rbp
0x00002191      c3             ret
0x00002192      0f1f4000       nop dword [rax]
0x00002196      662e0f1f8400.  nop word cs:[rax + rax]
;-- freev:
0x000021a0      53             push rbx                                ; /src:496
0x000021a1      833f01         cmp dword [rdi], 1                      ; /src:497
0x000021a4      4889fb         mov rbx, rdi                            ; /src:496
0x000021a7      7417           je 0x21c0                               ; /src:497
0x000021a9      488d7f08       lea rdi, [rdi + 8]                      ; /src:500
0x000021ad      e89efaffff     call sym.imp.__gmpz_clear
0x000021b2      4889df         mov rdi, rbx                            ; /src:501
0x000021b5      5b             pop rbx                                 ; /src:502
0x000021b6      e915f8ffff     jmp sym.imp.free                        ; /src:501
0x000021bb      0f1f440000     nop dword [rax + rax]
0x000021c0      488b7f08       mov rdi, qword [rdi + 8]                ; /src:498
0x000021c4      e807f8ffff     call sym.imp.free
0x000021c9      4889df         mov rdi, rbx                            ; /src:501
0x000021cc      5b             pop rbx                                 ; /src:502
0x000021cd      e9fef7ffff     jmp sym.imp.free                        ; /src:501
0x000021d2      0f1f4000       nop dword [rax]
0x000021d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- null:
0x000021e0      8b07           mov eax, dword [rdi]                    ; /src:527
0x000021e2      85c0           test eax, eax
0x000021e4      7442           je 0x2228
0x000021e6      83f801         cmp eax, 1
0x000021e9      7553           jne 0x223e
0x000021eb      488b5708       mov rdx, qword [rdi + 8]                ; /src:534
0x000021ef      b801000000     mov eax, 1                              ; /src:536
0x000021f4      0fb60a         movzx ecx, byte [rdx]                   ; /src:535
0x000021f7      84c9           test cl, cl
0x000021f9      7427           je 0x2222
0x000021fb      31c0           xor eax, eax                            ; /src:538
0x000021fd      80f92d         cmp cl, 0x2d
0x00002200      0f94c0         sete al
0x00002203      4801d0         add rax, rdx
0x00002206      0fb610         movzx edx, byte [rax]
0x00002209      eb10           jmp 0x221b
0x0000220b      0f1f440000     nop dword [rax + rax]
0x00002210      4883c001       add rax, 1                              ; /src:545
0x00002214      0fb610         movzx edx, byte [rax]
0x00002217      84d2           test dl, dl
0x00002219      741d           je 0x2238
0x0000221b      80fa30         cmp dl, 0x30                            ; /src:542
0x0000221e      74f0           je 0x2210
0x00002220      31c0           xor eax, eax                            ; /src:543
0x00002222      f3c3           ret                                     ; /src:552
0x00002224      0f1f4000       nop dword [rax]
0x00002228      8b470c         mov eax, dword [rdi + 0xc]              ; /src:531
0x0000222b      85c0           test eax, eax
0x0000222d      0f94c0         sete al
0x00002230      c3             ret
0x00002231      0f1f80000000.  nop dword [rax]
0x00002238      b801000000     mov eax, 1                              ; /src:536
0x0000223d      c3             ret
0x0000223e      4883ec08       sub rsp, 8                              ; /src:527
0x00002242      e899f7ffff     call sym.imp.abort                      ; /src:550
0x00002247      660f1f840000.  nop word [rax + rax]
;-- toarith:
0x00002250      8b07           mov eax, dword [rdi]                    ; /src:595
0x00002252      85c0           test eax, eax
0x00002254      744a           je 0x22a0
0x00002256      55             push rbp
0x00002257      53             push rbx
0x00002258      4889fb         mov rbx, rdi
0x0000225b      4883ec08       sub rsp, 8
0x0000225f      83f801         cmp eax, 1                              ; /src:596
0x00002262      7577           jne 0x22db
0x00002264      488b6f08       mov rbp, qword [rdi + 8]                ; /src:602
0x00002268      31d2           xor edx, edx                            ; /src:559
0x0000226a      807d002d       cmp byte [rbp], 0x2d
0x0000226e      0f94c2         sete dl
0x00002271      4801ea         add rdx, rbp
0x00002274      0fbe02         movsx eax, byte [rdx]
0x00002277      eb12           jmp 0x228b
0x00002279      0f1f80000000.  nop dword [rax]
0x00002280      4883c201       add rdx, 1                              ; /src:564
0x00002284      0fbe02         movsx eax, byte [rdx]
0x00002287      84c0           test al, al
0x00002289      7425           je 0x22b0
0x0000228b      83e830         sub eax, 0x30                           ; /src:562
0x0000228e      83f809         cmp eax, 9
0x00002291      76ed           jbe 0x2280
0x00002293      4883c408       add rsp, 8                              ; /src:615
0x00002297      31c0           xor eax, eax                            ; /src:605
0x00002299      5b             pop rbx                                 ; /src:615
0x0000229a      5d             pop rbp
0x0000229b      c3             ret
0x0000229c      0f1f4000       nop dword [rax]
0x000022a0      b801000000     mov eax, 1                              ; /src:599
0x000022a5      c3             ret                                     ; /src:615
0x000022a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000022b0      488d7b08       lea rdi, [rbx + 8]                      ; /src:606
0x000022b4      4889ee         mov rsi, rbp
0x000022b7      ba0a000000     mov edx, 0xa
0x000022bc      e87ffaffff     call sym.imp.__gmpz_init_set_str
0x000022c1      4889ef         mov rdi, rbp                            ; /src:608
0x000022c4      e807f7ffff     call sym.imp.free
0x000022c9      c70300000000   mov dword [rbx], 0                      ; /src:609
0x000022cf      4883c408       add rsp, 8                              ; /src:615
0x000022d3      b801000000     mov eax, 1                              ; /src:610
0x000022d8      5b             pop rbx                                 ; /src:615
0x000022d9      5d             pop rbp
0x000022da      c3             ret
0x000022db      e800f7ffff     call sym.imp.abort                      ; /src:613
;-- tostring:
0x000022e0      4154           push r12                                ; /src:573
0x000022e2      55             push rbp
0x000022e3      53             push rbx
0x000022e4      8b07           mov eax, dword [rdi]                    ; /src:574
0x000022e6      85c0           test eax, eax
0x000022e8      740e           je 0x22f8
0x000022ea      83f801         cmp eax, 1
0x000022ed      7539           jne 0x2328
0x000022ef      5b             pop rbx                                 ; /src:589
0x000022f0      5d             pop rbp
0x000022f1      415c           pop r12
0x000022f3      c3             ret
0x000022f4      0f1f4000       nop dword [rax]
0x000022f8      488d6f08       lea rbp, [rdi + 8]                      ; /src:578
0x000022fc      4889fb         mov rbx, rdi
0x000022ff      be0a000000     mov esi, 0xa
0x00002304      31ff           xor edi, edi
0x00002306      4889ea         mov rdx, rbp
0x00002309      e8b2f7ffff     call sym.imp.__gmpz_get_str
0x0000230e      4889ef         mov rdi, rbp                            ; /src:579
0x00002311      4989c4         mov r12, rax                            ; /src:578
0x00002314      e837f9ffff     call sym.imp.__gmpz_clear               ; /src:579
0x00002319      4c896308       mov qword [rbx + 8], r12                ; /src:580
0x0000231d      c70301000000   mov dword [rbx], 1                      ; /src:581
0x00002323      5b             pop rbx                                 ; /src:589
0x00002324      5d             pop rbp
0x00002325      415c           pop r12
0x00002327      c3             ret
0x00002328      e8b3f6ffff     call sym.imp.abort                      ; /src:587
0x0000232d      0f1f00         nop dword [rax]
;-- usage:
0x00002330      4155           push r13                                ; /src:340
0x00002332      4154           push r12
0x00002334      ba05000000     mov edx, 5                              ; /src:342
0x00002339      55             push rbp                                ; /src:340
0x0000233a      53             push rbx
0x0000233b      89fd           mov ebp, edi
0x0000233d      4881ec880000.  sub rsp, 0x88
0x00002344      488b1d9d8d21.  mov rbx, qword [obj.program_name]       ; [0x21b0e8:8]=0
0x0000234b      64488b042528.  mov rax, qword fs:[0x28]
0x00002354      4889442478     mov qword [rsp + 0x78], rax
0x00002359      31c0           xor eax, eax
0x0000235b      85ff           test edi, edi                           ; /src:341
0x0000235d      742e           je 0x238d
0x0000235f      488d35ca3201.  lea rsi, str.Try___s___help__for_more_information. ; /src:342 ; 0x15630 ; "Try '%s --help' for more information.\n"
0x00002366      31ff           xor edi, edi
0x00002368      e823f7ffff     call sym.imp.dcgettext
0x0000236d      488b3d4c8d21.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/src/pr.c:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21b0c0:8]=0
0x00002374      4889c2         mov rdx, rax
0x00002377      4889d9         mov rcx, rbx
0x0000237a      be01000000     mov esi, 1
0x0000237f      31c0           xor eax, eax
0x00002381      e8faf9ffff     call sym.imp.__fprintf_chk
0x00002386      89ef           mov edi, ebp                            ; /src:413
0x00002388      e8d3f9ffff     call sym.imp.exit
0x0000238d      488d35c43201.  lea rsi, str.Usage:__s_EXPRESSION____or:___s_OPTION ; /src:345 ; 0x15658 ; "Usage: %s EXPRESSION\n  or:  %s OPTION\n"
0x00002394      31ff           xor edi, edi
0x00002396      e8f5f6ffff     call sym.imp.dcgettext
0x0000239b      bf01000000     mov edi, 1                              ; ../coreutils-8.31/src/pr.c:104
0x000023a0      4889c6         mov rsi, rax
0x000023a3      4889d9         mov rcx, rbx
0x000023a6      31c0           xor eax, eax
0x000023a8      4889da         mov rdx, rbx
0x000023ab      e800f9ffff     call sym.imp.__printf_chk
0x000023b0      488b3dd18c21.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/mbuiter.h:107 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21b088:8]=0
0x000023b7      488b4728       mov rax, qword [rdi + 0x28]
0x000023bb      483b4730       cmp rax, qword [rdi + 0x30]
0x000023bf      0f8343030000   jae 0x2708
0x000023c5      488d5001       lea rdx, [rax + 1]
0x000023c9      48895728       mov qword [rdi + 0x28], rdx
0x000023cd      c6000a         mov byte [rax], 0xa
0x000023d0      488b1db18c21.  mov rbx, qword [obj.stdout]             ; /src:351 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21b088:8]=0
0x000023d7      488d35a23201.  lea rsi, str.help_____display_this_help_and_exit ; 0x15680 ; "      --help     display this help and exit\n"
0x000023de      ba05000000     mov edx, 5
0x000023e3      31ff           xor edi, edi
0x000023e5      e8a6f6ffff     call sym.imp.dcgettext
0x000023ea      4889de         mov rsi, rbx
0x000023ed      4889c7         mov rdi, rax
0x000023f0      e8bbf7ffff     call sym.imp.fputs_unlocked
0x000023f5      488b1d8c8c21.  mov rbx, qword [obj.stdout]             ; /src:352 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21b088:8]=0
0x000023fc      488d35ad3201.  lea rsi, str.version__output_version_information_and_exit ; 0x156b0 ; "      --version  output version information and exit\n"
0x00002403      ba05000000     mov edx, 5
0x00002408      31ff           xor edi, edi
0x0000240a      e881f6ffff     call sym.imp.dcgettext
0x0000240f      4889de         mov rsi, rbx
0x00002412      4889c7         mov rdi, rax
0x00002415      e896f7ffff     call sym.imp.fputs_unlocked
0x0000241a      488b1d678c21.  mov rbx, qword [obj.stdout]             ; /src:353 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21b088:8]=0
0x00002421      488d35c03201.  lea rsi, str.Print_the_value_of_EXPRESSION_to_standard_output.__A_blank_line_below__separates_increasing_precedence_groups.__EXPRESSION_may_be:______ARG1___ARG2_______ARG1_if_it_is_neither_null_nor_0__otherwise_ARG2______ARG1___ARG2_______ARG1_if_neither_argument_is_null_or_0__otherwise_0 ; 0x156e8 ; "\nPrint the value of EXPRESSION to standard output.  A blank line below\nseparates increasing precedence groups.  EXPRESSION may be:\n\n  ARG1 | ARG2       ARG1 if it is neither null nor 0, otherwise ARG2\n\n  ARG1 & ARG2       ARG1 if neither argument is null or 0, otherwise 0\n"
0x00002428      ba05000000     mov edx, 5
0x0000242d      31ff           xor edi, edi
0x0000242f      e85cf6ffff     call sym.imp.dcgettext
0x00002434      4889de         mov rsi, rbx
0x00002437      4889c7         mov rdi, rax
0x0000243a      e871f7ffff     call sym.imp.fputs_unlocked
0x0000243f      488b1d428c21.  mov rbx, qword [obj.stdout]             ; /src:362 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21b088:8]=0
0x00002446      488d35b33301.  lea rsi, str.ARG1___ARG2_______ARG1_is_less_than_ARG2____ARG1____ARG2______ARG1_is_less_than_or_equal_to_ARG2____ARG1___ARG2_______ARG1_is_equal_to_ARG2____ARG1____ARG2______ARG1_is_unequal_to_ARG2____ARG1____ARG2______ARG1_is_greater_than_or_equal_to_ARG2____ARG1___ARG2_______ARG1_is_greater_than_ARG2 ; 0x15800 ; "\n  ARG1 < ARG2       ARG1 is less than ARG2\n  ARG1 <= ARG2      ARG1 is less than or equal to ARG2\n  ARG1 = ARG2       ARG1 is equal to ARG2\n  ARG1 != ARG2      ARG1 is unequal to ARG2\n  ARG1 >= ARG2      ARG1 is greater than or equal to ARG2\n  ARG1 > ARG2       ARG1 is greater than ARG2\n"
0x0000244d      ba05000000     mov edx, 5
0x00002452      31ff           xor edi, edi
0x00002454      e837f6ffff     call sym.imp.dcgettext
0x00002459      4889de         mov rsi, rbx
0x0000245c      4889c7         mov rdi, rax
0x0000245f      e84cf7ffff     call sym.imp.fputs_unlocked
0x00002464      488b1d1d8c21.  mov rbx, qword [obj.stdout]             ; /src:371 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21b088:8]=0
0x0000246b      488d35b63401.  lea rsi, str.ARG1___ARG2_______arithmetic_sum_of_ARG1_and_ARG2____ARG1___ARG2_______arithmetic_difference_of_ARG1_and_ARG2 ; 0x15928 ; "\n  ARG1 + ARG2       arithmetic sum of ARG1 and ARG2\n  ARG1 - ARG2       arithmetic difference of ARG1 and ARG2\n"
0x00002472      ba05000000     mov edx, 5
0x00002477      31ff           xor edi, edi
0x00002479      e812f6ffff     call sym.imp.dcgettext
0x0000247e      4889de         mov rsi, rbx
0x00002481      4889c7         mov rdi, rax
0x00002484      e827f7ffff     call sym.imp.fputs_unlocked
0x00002489      488b1df88b21.  mov rbx, qword [obj.stdout]             ; /src:378 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21b088:8]=0
0x00002490      488d35093501.  lea rsi, str.ARG1___ARG2_______arithmetic_product_of_ARG1_and_ARG2____ARG1___ARG2_______arithmetic_quotient_of_ARG1_divided_by_ARG2____ARG1___ARG2_______arithmetic_remainder_of_ARG1_divided_by_ARG2 ; 0x159a0 ; "\n  ARG1 * ARG2       arithmetic product of ARG1 and ARG2\n  ARG1 / ARG2       arithmetic quotient of ARG1 divided by ARG2\n  ARG1 % ARG2       arithmetic remainder of ARG1 divided by ARG2\n"
0x00002497      ba05000000     mov edx, 5
0x0000249c      31ff           xor edi, edi
0x0000249e      e8edf5ffff     call sym.imp.dcgettext
0x000024a3      4889de         mov rsi, rbx
0x000024a6      4889c7         mov rdi, rax
0x000024a9      e802f7ffff     call sym.imp.fputs_unlocked
0x000024ae      488b1dd38b21.  mov rbx, qword [obj.stdout]             ; /src:384 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21b088:8]=0
0x000024b5      488d35a43501.  lea rsi, str.STRING_:_REGEXP___anchored_pattern_match_of_REGEXP_in_STRING______match_STRING_REGEXP________same_as_STRING_:_REGEXP____substr_STRING_POS_LENGTH___substring_of_STRING__POS_counted_from_1____index_STRING_CHARS_________index_in_STRING_where_any_CHARS_is_found__or_0____length_STRING______________length_of_STRING ; 0x15a60 ; "\n  STRING : REGEXP   anchored pattern match of REGEXP in STRING\n\n  match STRING REGEXP        same as STRING : REGEXP\n  substr STRING POS LENGTH   substring of STRING, POS counted from 1\n  index STRING CHARS         index in STRING where any CHARS is found, or 0\n  length STRING              length of STRING\n"
0x000024bc      ba05000000     mov edx, 5
0x000024c1      31ff           xor edi, edi
0x000024c3      e8c8f5ffff     call sym.imp.dcgettext
0x000024c8      4889de         mov rsi, rbx
0x000024cb      4889c7         mov rdi, rax
0x000024ce      e8ddf6ffff     call sym.imp.fputs_unlocked
0x000024d3      488b1dae8b21.  mov rbx, qword [obj.stdout]             ; /src:393 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21b088:8]=0
0x000024da      488d35b73601.  lea rsi, str.TOKEN____________________interpret_TOKEN_as_a_string__even_if_it_is_a_________________________________keyword_like__match__or_an_operator_like____________EXPRESSION_______________value_of_EXPRESSION ; 0x15b98 ; "  + TOKEN                    interpret TOKEN as a string, even if it is a\n                               keyword like 'match' or an operator like '/'\n\n  ( EXPRESSION )             value of EXPRESSION\n"
0x000024e1      ba05000000     mov edx, 5
0x000024e6      31ff           xor edi, edi
0x000024e8      e8a3f5ffff     call sym.imp.dcgettext
0x000024ed      4889de         mov rsi, rbx
0x000024f0      4889c7         mov rdi, rax
0x000024f3      e8b8f6ffff     call sym.imp.fputs_unlocked
0x000024f8      488b1d898b21.  mov rbx, qword [obj.stdout]             ; /src:399 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21b088:8]=0
0x000024ff      488d35623701.  lea rsi, str.Beware_that_many_operators_need_to_be_escaped_or_quoted_for_shells.__Comparisons_are_arithmetic_if_both_ARGs_are_numbers__else_lexicographical.__Pattern_matches_return_the_string_matched_between_____and_____or_null__if______and_____are_not_used__they_return_the_number_of_characters_matched_or_0. ; 0x15c68 ; "\nBeware that many operators need to be escaped or quoted for shells.\nComparisons are arithmetic if both ARGs are numbers, else lexicographical.\nPattern matches return the string matched between \( and \) or null; if\n\( and \) are not used, they return the number of characters matched or 0.\n"
0x00002506      ba05000000     mov edx, 5
0x0000250b      31ff           xor edi, edi
0x0000250d      e87ef5ffff     call sym.imp.dcgettext
0x00002512      4889de         mov rsi, rbx
0x00002515      4889c7         mov rdi, rax
0x00002518      e893f6ffff     call sym.imp.fputs_unlocked
0x0000251d      488b1d648b21.  mov rbx, qword [obj.stdout]             ; /src:406 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21b088:8]=0
0x00002524      488d35653801.  lea rsi, str.Exit_status_is_0_if_EXPRESSION_is_neither_null_nor_0__1_if_EXPRESSION_is_null__or_0__2_if_EXPRESSION_is_syntactically_invalid__and_3_if_an_error_occurred. ; 0x15d90 ; "\nExit status is 0 if EXPRESSION is neither null nor 0, 1 if EXPRESSION is null\nor 0, 2 if EXPRESSION is syntactically invalid, and 3 if an error occurred.\n"
0x0000252b      ba05000000     mov edx, 5
0x00002530      31ff           xor edi, edi
0x00002532      e859f5ffff     call sym.imp.dcgettext
0x00002537      4889de         mov rsi, rbx
0x0000253a      4889c7         mov rdi, rax
0x0000253d      488d1d4b3a01.  lea rbx, str.expr                       ; 0x15f8f ; "expr"
0x00002544      e867f6ffff     call sym.imp.fputs_unlocked
0x00002549      488d05443a01.  lea rax, [0x00015f94]                   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:633 ; "["
0x00002550      488d0d7e3a01.  lea rcx, str.sha256sum                  ; 0x15fd5 ; "sha256sum"
0x00002557      48c744246000.  mov qword [rsp + 0x60], 0
0x00002560      48c744246800.  mov qword [rsp + 0x68], 0
0x00002569      4889e2         mov rdx, rsp                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:644
0x0000256c      48890424       mov qword [rsp], rax                    ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:633
0x00002570      488d051f3a01.  lea rax, str.test_invocation            ; 0x15f96 ; "test invocation"
0x00002577      48894c2430     mov qword [rsp + 0x30], rcx
0x0000257c      488d0d5c3a01.  lea rcx, str.sha384sum                  ; 0x15fdf ; "sha384sum"
0x00002583      4889442408     mov qword [rsp + 8], rax
0x00002588      488d057f3a01.  lea rax, [0x0001600e]                   ; "coreutils"
0x0000258f      48894c2440     mov qword [rsp + 0x40], rcx
0x00002594      488d0d4e3a01.  lea rcx, str.sha512sum                  ; 0x15fe9 ; "sha512sum"
0x0000259b      4889442410     mov qword [rsp + 0x10], rax
0x000025a0      488d05ff3901.  lea rax, str.Multi_call_invocation      ; 0x15fa6 ; "Multi-call invocation"
0x000025a7      48894c2450     mov qword [rsp + 0x50], rcx
0x000025ac      4889442418     mov qword [rsp + 0x18], rax
0x000025b1      488d05043a01.  lea rax, str.sha224sum                  ; 0x15fbc ; "sha224sum"
0x000025b8      4889442420     mov qword [rsp + 0x20], rax
0x000025bd      488d05023a01.  lea rax, str.sha2_utilities             ; 0x15fc6 ; "sha2 utilities"
0x000025c4      4889442428     mov qword [rsp + 0x28], rax
0x000025c9      4889442438     mov qword [rsp + 0x38], rax
0x000025ce      4889442448     mov qword [rsp + 0x48], rax
0x000025d3      4889442458     mov qword [rsp + 0x58], rax
0x000025d8      0f1f84000000.  nop dword [rax + rax]
0x000025e0      4883c210       add rdx, 0x10                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:647
0x000025e4      488b3a         mov rdi, qword [rdx]                    ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:646
0x000025e7      4885ff         test rdi, rdi
0x000025ea      7413           je 0x25ff
0x000025ec      b905000000     mov ecx, 5
0x000025f1      4889de         mov rsi, rbx
0x000025f4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000025f6      0f97c0         seta al
0x000025f9      1c00           sbb al, 0
0x000025fb      84c0           test al, al
0x000025fd      75e1           jne 0x25e0
0x000025ff      4c8b6208       mov r12, qword [rdx + 8]                ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:649
0x00002603      31ff           xor edi, edi                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:652
0x00002605      ba05000000     mov edx, 5
0x0000260a      488d35e23901.  lea rsi, str.s_online_help:___s         ; 0x15ff3 ; "\n%s online help: <%s>\n"
0x00002611      4d85e4         test r12, r12                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:649
0x00002614      0f84fd000000   je 0x2717
0x0000261a      e871f4ffff     call sym.imp.dcgettext                  ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:652
0x0000261f      488d0d0a3801.  lea rcx, str.https:__www.gnu.org_software_coreutils ; ../coreutils-8.31/src/pr.c:104 ; 0x15e30 ; "https://www.gnu.org/software/coreutils/"
0x00002626      488d15dd3901.  lea rdx, str.GNU_coreutils              ; 0x1600a ; "GNU coreutils"
0x0000262d      4889c6         mov rsi, rax
0x00002630      bf01000000     mov edi, 1
0x00002635      31c0           xor eax, eax
0x00002637      e874f6ffff     call sym.imp.__printf_chk
0x0000263c      31f6           xor esi, esi                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:656
0x0000263e      bf05000000     mov edi, 5
0x00002643      e858f6ffff     call sym.imp.setlocale
0x00002648      4885c0         test rax, rax                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:657
0x0000264b      7418           je 0x2665
0x0000264d      488d35c43901.  lea rsi, [0x00016018]                   ; "en_"
0x00002654      ba03000000     mov edx, 3
0x00002659      4889c7         mov rdi, rax
0x0000265c      e89ff3ffff     call sym.imp.strncmp
0x00002661      85c0           test eax, eax
0x00002663      7579           jne 0x26de
0x00002665      488d35b03901.  lea rsi, str.Full_documentation___s_s   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:666 ; 0x1601c ; "Full documentation <%s%s>\n"
0x0000266c      31ff           xor edi, edi
0x0000266e      ba05000000     mov edx, 5
0x00002673      e818f4ffff     call sym.imp.dcgettext
0x00002678      488d0d103901.  lea rcx, str.expr                       ; ../coreutils-8.31/src/pr.c:104 ; 0x15f8f ; "expr"
0x0000267f      488d15aa3701.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x15e30 ; "https://www.gnu.org/software/coreutils/"
0x00002686      4889c6         mov rsi, rax
0x00002689      bf01000000     mov edi, 1
0x0000268e      31c0           xor eax, eax
0x00002690      e81bf6ffff     call sym.imp.__printf_chk
0x00002695      4939dc         cmp r12, rbx                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:668
0x00002698      488d0d113901.  lea rcx, [0x00015fb0]                   ; " invocation"
0x0000269f      488d1dbb4001.  lea rbx, [0x00016761]
0x000026a6      480f44d9       cmove rbx, rcx
0x000026aa      488d35ef3701.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x15ea0 ; "or available locally via: info '(coreutils) %s%s'\n"
0x000026b1      31ff           xor edi, edi
0x000026b3      ba05000000     mov edx, 5
0x000026b8      e8d3f3ffff     call sym.imp.dcgettext
0x000026bd      4889d9         mov rcx, rbx                            ; ../coreutils-8.31/src/pr.c:104
0x000026c0      4889c6         mov rsi, rax
0x000026c3      4c89e2         mov rdx, r12
0x000026c6      bf01000000     mov edi, 1
0x000026cb      31c0           xor eax, eax
0x000026cd      e8def5ffff     call sym.imp.__printf_chk
0x000026d2      e9affcffff     jmp 0x2386
0x000026d7      4c8d25b13801.  lea r12, str.expr                       ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:643 ; 0x15f8f ; "expr"
0x000026de      4c8b2da38921.  mov r13, qword [obj.stdout]             ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:663 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21b088:8]=0
0x000026e5      488d356c3701.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x15e58 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000026ec      31ff           xor edi, edi
0x000026ee      ba05000000     mov edx, 5
0x000026f3      e898f3ffff     call sym.imp.dcgettext
0x000026f8      4c89ee         mov rsi, r13
0x000026fb      4889c7         mov rdi, rax
0x000026fe      e8adf4ffff     call sym.imp.fputs_unlocked
0x00002703      e95dffffff     jmp 0x2665
0x00002708      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/mbuiter.h:107
0x0000270d      e8fef3ffff     call sym.imp.__overflow
0x00002712      e9b9fcffff     jmp 0x23d0
0x00002717      e874f3ffff     call sym.imp.dcgettext                  ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:652
0x0000271c      488d0d0d3701.  lea rcx, str.https:__www.gnu.org_software_coreutils ; ../coreutils-8.31/src/pr.c:104 ; 0x15e30 ; "https://www.gnu.org/software/coreutils/"
0x00002723      488d15e03801.  lea rdx, str.GNU_coreutils              ; 0x1600a ; "GNU coreutils"
0x0000272a      4889c6         mov rsi, rax
0x0000272d      bf01000000     mov edi, 1
0x00002732      31c0           xor eax, eax
0x00002734      e877f5ffff     call sym.imp.__printf_chk
0x00002739      31f6           xor esi, esi                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:656
0x0000273b      bf05000000     mov edi, 5
0x00002740      e85bf5ffff     call sym.imp.setlocale
0x00002745      4885c0         test rax, rax                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:657
0x00002748      741c           je 0x2766
0x0000274a      488d35c73801.  lea rsi, [0x00016018]                   ; "en_"
0x00002751      ba03000000     mov edx, 3
0x00002756      4889c7         mov rdi, rax
0x00002759      e8a2f2ffff     call sym.imp.strncmp
0x0000275e      85c0           test eax, eax
0x00002760      0f8571ffffff   jne 0x26d7
0x00002766      488d35af3801.  lea rsi, str.Full_documentation___s_s   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:666 ; 0x1601c ; "Full documentation <%s%s>\n"
0x0000276d      ba05000000     mov edx, 5
0x00002772      31ff           xor edi, edi
0x00002774      4c8d25143801.  lea r12, str.expr                       ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:643 ; 0x15f8f ; "expr"
0x0000277b      488d1d2e3801.  lea rbx, [0x00015fb0]                   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:668 ; " invocation"
0x00002782      e809f3ffff     call sym.imp.dcgettext                  ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:666
0x00002787      488d0d013801.  lea rcx, str.expr                       ; ../coreutils-8.31/src/pr.c:104 ; 0x15f8f ; "expr"
0x0000278e      488d159b3601.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x15e30 ; "https://www.gnu.org/software/coreutils/"
0x00002795      4889c6         mov rsi, rax
0x00002798      bf01000000     mov edi, 1
0x0000279d      31c0           xor eax, eax
0x0000279f      e80cf5ffff     call sym.imp.__printf_chk
0x000027a4      e901ffffff     jmp 0x26aa
0x000027a9      0f1f80000000.  nop dword [rax]
;-- docolon:
0x000027b0      4157           push r15                                ; /src:692
0x000027b2      4156           push r14
0x000027b4      4155           push r13
0x000027b6      4154           push r12
0x000027b8      55             push rbp
0x000027b9      53             push rbx
0x000027ba      4889f5         mov rbp, rsi
0x000027bd      4889fb         mov rbx, rdi
0x000027c0      4881ecc80100.  sub rsp, 0x1c8
0x000027c7      64488b042528.  mov rax, qword fs:[0x28]
0x000027d0      48898424b801.  mov qword [rsp + 0x1b8], rax
0x000027d8      31c0           xor eax, eax
0x000027da      e801fbffff     call sym.tostring                       ; /src:700
0x000027df      4889ef         mov rdi, rbp                            ; /src:701
0x000027e2      e8f9faffff     call sym.tostring
0x000027e7      4c8b6508       mov r12, qword [rbp + 8]                ; /src:713
0x000027eb      488d8424b000.  lea rax, [rsp + 0xb0]                   ; /src:709
0x000027f3      488d6c2430     lea rbp, [rsp + 0x30]                   ; /src:713
0x000027f8      48c744241000.  mov qword [rsp + 0x10], 0               ; /src:703
0x00002801      48c744241800.  mov qword [rsp + 0x18], 0               ; /src:704
0x0000280a      48c744242000.  mov qword [rsp + 0x20], 0               ; /src:705
0x00002813      48c744243000.  mov qword [rsp + 0x30], 0               ; /src:707
0x0000281c      4c89e7         mov rdi, r12                            ; /src:713
0x0000281f      48c744243800.  mov qword [rsp + 0x38], 0               ; /src:708
0x00002828      4889442450     mov qword [rsp + 0x50], rax             ; /src:709
0x0000282d      48c744245800.  mov qword [rsp + 0x58], 0               ; /src:710
0x00002836      48c705f78921.  mov qword [obj.rpl_re_syntax_options], 0x2c6 ; /src:711 ; [0x21b238:8]=0
0x00002841      e86af2ffff     call sym.imp.strlen                     ; /src:713
0x00002846      4889ea         mov rdx, rbp
0x00002849      4889c6         mov rsi, rax
0x0000284c      4c89e7         mov rdi, r12
0x0000284f      e84c200100     call sym.rpl_re_compile_pattern
0x00002854      4885c0         test rax, rax                           ; /src:714
0x00002857      0f855d030000   jne 0x2bba
0x0000285d      4c8b6308       mov r12, qword [rbx + 8]                ; /src:718
0x00002861      806424687f     and byte [rsp + 0x68], 0x7f             ; /src:716 ; [0x7f:1]=0
0x00002866      4c89e7         mov rdi, r12                            ; /src:718
0x00002869      e842f2ffff     call sym.imp.strlen
0x0000286e      4c8d442410     lea r8, [rsp + 0x10]
0x00002873      31c9           xor ecx, ecx
0x00002875      4889c2         mov rdx, rax
0x00002878      4c89e6         mov rsi, r12
0x0000287b      4889ef         mov rdi, rbp
0x0000287e      e89d290100     call sym.rpl_re_match
0x00002883      4885c0         test rax, rax                           ; /src:719
0x00002886      4989c7         mov r15, rax                            ; /src:718
0x00002889      0f88c9000000   js 0x2958                               ; /src:719
0x0000288f      4c8b742460     mov r14, qword [rsp + 0x60]             ; /src:722
0x00002894      4d85f6         test r14, r14
0x00002897      0f8483000000   je 0x2920
0x0000289d      488b442420     mov rax, qword [rsp + 0x20]             ; /src:724
0x000028a2      488b5308       mov rdx, qword [rbx + 8]
0x000028a6      488b4008       mov rax, qword [rax + 8]
0x000028aa      c6040200       mov byte [rdx + rax], 0
0x000028ae      488b442418     mov rax, qword [rsp + 0x18]             ; /src:725
0x000028b3      488b7808       mov rdi, qword [rax + 8]
0x000028b7      48037b08       add rdi, qword [rbx + 8]
0x000028bb      e8a0f8ffff     call sym.str_value
0x000028c0      4889c3         mov rbx, rax
0x000028c3      48837c241000   cmp qword [rsp + 0x10], 0               ; /src:750
0x000028c9      7414           je 0x28df
0x000028cb      488b7c2418     mov rdi, qword [rsp + 0x18]             ; /src:752
0x000028d0      e8fbf0ffff     call sym.imp.free
0x000028d5      488b7c2420     mov rdi, qword [rsp + 0x20]             ; /src:753
0x000028da      e8f1f0ffff     call sym.imp.free
0x000028df      4889ef         mov rdi, rbp                            ; /src:756
0x000028e2      48c744245000.  mov qword [rsp + 0x50], 0               ; /src:755
0x000028eb      e840280100     call sym.rpl_regfree                    ; /src:756
0x000028f0      488b8c24b801.  mov rcx, qword [rsp + 0x1b8]            ; /src:758
0x000028f8      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002901      4889d8         mov rax, rbx
0x00002904      0f85c8020000   jne 0x2bd2
0x0000290a      4881c4c80100.  add rsp, 0x1c8
0x00002911      5b             pop rbx
0x00002912      5d             pop rbp
0x00002913      415c           pop r12
0x00002915      415d           pop r13
0x00002917      415e           pop r14
0x00002919      415f           pop r15
0x0000291b      c3             ret
0x0000291c      0f1f4000       nop dword [rax]
0x00002920      e87bf1ffff     call sym.imp.__ctype_get_mb_cur_max     ; /src:731
0x00002925      4883f801       cmp rax, 1                              ; /src:733
0x00002929      4d89fc         mov r12, r15
0x0000292c      757a           jne 0x29a8
0x0000292e      bf18000000     mov edi, 0x18                           ; /src:475
0x00002933      e888440000     call sym.xmalloc
0x00002938      488d7808       lea rdi, [rax + 8]                      ; /src:477
0x0000293c      c70000000000   mov dword [rax], 0                      ; /src:476
0x00002942      4c89e6         mov rsi, r12                            ; /src:477
0x00002945      4889c3         mov rbx, rax                            ; /src:475
0x00002948      e873f3ffff     call sym.imp.__gmpz_init_set_ui         ; /src:477
0x0000294d      e971ffffff     jmp 0x28c3
0x00002952      660f1f440000   nop word [rax + rax]
0x00002958      4883f8ff       cmp rax, 0xffffffffffffffff             ; /src:737
0x0000295c      0f8594020000   jne 0x2bf6
0x00002962      48837c246000   cmp qword [rsp + 0x60], 0               ; /src:740
0x00002968      7416           je 0x2980
0x0000296a      488d3df03d01.  lea rdi, [0x00016761]                   ; /src:741
0x00002971      e8eaf7ffff     call sym.str_value
0x00002976      4889c3         mov rbx, rax
0x00002979      e945ffffff     jmp 0x28c3
0x0000297e      6690           nop
0x00002980      bf18000000     mov edi, 0x18                           ; /src:475
0x00002985      e836440000     call sym.xmalloc
0x0000298a      488d7808       lea rdi, [rax + 8]                      ; /src:477
0x0000298e      c70000000000   mov dword [rax], 0                      ; /src:476
0x00002994      31f6           xor esi, esi                            ; /src:477
0x00002996      4889c3         mov rbx, rax                            ; /src:475
0x00002999      e822f3ffff     call sym.imp.__gmpz_init_set_ui         ; /src:477
0x0000299e      e920ffffff     jmp 0x28c3
0x000029a3      0f1f440000     nop dword [rax + rax]
0x000029a8      4c8d6c2470     lea r13, [rsp + 0x70]                   ; .//ib:150
0x000029ad      4c8b6308       mov r12, qword [rbx + 8]                ; /src:733
0x000029b1      c644247000     mov byte [rsp + 0x70], 0                ; /src:326
0x000029b6      48c744247400.  mov qword [rsp + 0x74], 0               ; stdio.h:71 {
0x000029bf      c644247c00     mov byte [rsp + 0x7c], 0                ; /src:326
0x000029c4      498d4504       lea rax, [r13 + 4]                      ; .//ib:150
0x000029c8      4c89a4248000.  mov qword [rsp + 0x80], r12             ; /src:326
0x000029d0      4889442408     mov qword [rsp + 8], rax                ; .//ib:150
0x000029d5      e98e000000     jmp 0x2a68
0x000029da      660f1f440000   nop word [rax + rax]
0x000029e0      488b9c248000.  mov rbx, qword [rsp + 0x80]             ; .//ib:139
0x000029e8      488d0db13701.  lea rcx, obj.is_basic_table             ; ../coreutils-8.31/src/system.h:318 ; 0x161a0
0x000029ef      0fb613         movzx edx, byte [rbx]
0x000029f2      89d0           mov eax, edx
0x000029f4      c0e805         shr al, 5
0x000029f7      83e007         and eax, 7
0x000029fa      8b0481         mov eax, dword [rcx + rax*4]
0x000029fd      0fa3d0         bt eax, edx                             ; .//ib:139
0x00002a00      0f8312010000   jae 0x2b18
0x00002a06      48c784248800.  mov qword [rsp + 0x88], 1               ; .//ib:144
0x00002a12      0fbe03         movsx eax, byte [rbx]                   ; .//ib:145
0x00002a15      c68424900000.  mov byte [rsp + 0x90], 1                ; .//ib:146
0x00002a1d      c644247c01     mov byte [rsp + 0x7c], 1                ; .//ib:189
0x00002a22      898424940000.  mov dword [rsp + 0x94], eax             ; .//ib:145
0x00002a29      8b8424940000.  mov eax, dword [rsp + 0x94]             ; /src:326
0x00002a30      85c0           test eax, eax
0x00002a32      0f8438010000   je 0x2b70
0x00002a38      488b9c248000.  mov rbx, qword [rsp + 0x80]
0x00002a40      4889d8         mov rax, rbx                            ; /src:328
0x00002a43      4c29e0         sub rax, r12
0x00002a46      4c39f8         cmp rax, r15                            ; /src:329
0x00002a49      0f8321010000   jae 0x2b70
0x00002a4f      48039c248800.  add rbx, qword [rsp + 0x88]             ; /src:326
0x00002a57      4983c601       add r14, 1                              ; /src:331
0x00002a5b      c644247c00     mov byte [rsp + 0x7c], 0                ; /src:326
0x00002a60      48899c248000.  mov qword [rsp + 0x80], rbx
0x00002a68      807c247000     cmp byte [rsp + 0x70], 0                ; .//ib:136
0x00002a6d      0f846dffffff   je 0x29e0
0x00002a73      e828f0ffff     call sym.imp.__ctype_get_mb_cur_max     ; .//ib:153
0x00002a78      488b9c248000.  mov rbx, qword [rsp + 0x80]
0x00002a80      4889c6         mov rsi, rax
0x00002a83      4889df         mov rdi, rbx
0x00002a86      e8253a0000     call sym.strnlen1
0x00002a8b      498d4d04       lea rcx, [r13 + 4]
0x00002a8f      498d7d24       lea rdi, [r13 + 0x24]
0x00002a93      4889c2         mov rdx, rax
0x00002a96      4889de         mov rsi, rbx
0x00002a99      e8b2450000     call sym.rpl_mbrtowc
0x00002a9e      4883f8ff       cmp rax, 0xffffffffffffffff             ; .//ib:156
0x00002aa2      488984248800.  mov qword [rsp + 0x88], rax             ; .//ib:153
0x00002aaa      0f8488000000   je 0x2b38                               ; .//ib:156
0x00002ab0      4883f8fe       cmp rax, 0xfffffffffffffffe             ; .//ib:164
0x00002ab4      0f84c6000000   je 0x2b80
0x00002aba      4885c0         test rax, rax                           ; .//ib:174
0x00002abd      752c           jne 0x2aeb
0x00002abf      488b9c248000.  mov rbx, qword [rsp + 0x80]             ; .//ib:178
0x00002ac7      48c784248800.  mov qword [rsp + 0x88], 1               ; .//ib:177
0x00002ad3      803b00         cmp byte [rbx], 0                       ; .//ib:178
0x00002ad6      0f854f010000   jne 0x2c2b
0x00002adc      8b9424940000.  mov edx, dword [rsp + 0x94]             ; .//ib:179
0x00002ae3      85d2           test edx, edx
0x00002ae5      0f853b010000   jne 0x2c26
0x00002aeb      498d7d04       lea rdi, [r13 + 4]                      ; .//ib:185
0x00002aef      c68424900000.  mov byte [rsp + 0x90], 1                ; .//ib:181
0x00002af7      e894f2ffff     call sym.imp.mbsinit                    ; .//ib:185
0x00002afc      85c0           test eax, eax
0x00002afe      0f84ac000000   je 0x2bb0
0x00002b04      c644247000     mov byte [rsp + 0x70], 0                ; .//ib:186
0x00002b09      c644247c01     mov byte [rsp + 0x7c], 1                ; .//ib:189
0x00002b0e      e916ffffff     jmp 0x2a29
0x00002b13      0f1f440000     nop dword [rax + rax]
0x00002b18      488b7c2408     mov rdi, qword [rsp + 8]                ; .//ib:150
0x00002b1d      e86ef2ffff     call sym.imp.mbsinit
0x00002b22      85c0           test eax, eax
0x00002b24      0f84ad000000   je 0x2bd7
0x00002b2a      c644247001     mov byte [rsp + 0x70], 1                ; .//ib:151
0x00002b2f      e93fffffff     jmp 0x2a73
0x00002b34      0f1f4000       nop dword [rax]
0x00002b38      488b9c248000.  mov rbx, qword [rsp + 0x80]
0x00002b40      48c784248800.  mov qword [rsp + 0x88], 1               ; .//ib:159
0x00002b4c      c68424900000.  mov byte [rsp + 0x90], 0                ; .//ib:160
0x00002b54      c644247c01     mov byte [rsp + 0x7c], 1                ; .//ib:189
0x00002b59      4889d8         mov rax, rbx                            ; /src:328
0x00002b5c      4c29e0         sub rax, r12
0x00002b5f      4c39f8         cmp rax, r15                            ; /src:329
0x00002b62      0f82e7feffff   jb 0x2a4f
0x00002b68      0f1f84000000.  nop dword [rax + rax]
0x00002b70      4d89f4         mov r12, r14
0x00002b73      e9b6fdffff     jmp 0x292e
0x00002b78      0f1f84000000.  nop dword [rax + rax]
0x00002b80      488b9c248000.  mov rbx, qword [rsp + 0x80]             ; .//ib:167
0x00002b88      4889df         mov rdi, rbx
0x00002b8b      e820efffff     call sym.imp.strlen
0x00002b90      c68424900000.  mov byte [rsp + 0x90], 0                ; .//ib:168
0x00002b98      488984248800.  mov qword [rsp + 0x88], rax             ; .//ib:167
0x00002ba0      c644247c01     mov byte [rsp + 0x7c], 1                ; .//ib:189
0x00002ba5      e996feffff     jmp 0x2a40
0x00002baa      660f1f440000   nop word [rax + rax]
0x00002bb0      c644247c01     mov byte [rsp + 0x7c], 1
0x00002bb5      e96ffeffff     jmp 0x2a29
0x00002bba      488d15c23501.  lea rdx, [0x00016183]                   ; /src:715 ; "%s"
0x00002bc1      4889c1         mov rcx, rax
0x00002bc4      31f6           xor esi, esi
0x00002bc6      bf02000000     mov edi, 2
0x00002bcb      31c0           xor eax, eax
0x00002bcd      e82ef1ffff     call sym.imp.error
0x00002bd2      e8f9eeffff     call sym.imp.__stack_chk_fail           ; /src:758
0x00002bd7      488d0d823501.  lea rcx, obj.__PRETTY_FUNCTION__.7929   ; .//ib:150 ; 0x16160 ; "mbuiter_multi_next"
0x00002bde      488d352b2a01.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x15610 ; "../coreutils-8.31/lib/mbuiter.h"
0x00002be5      488d3d4b3401.  lea rdi, str.mbsinit___iter__state      ; 0x16037 ; "mbsinit (&iter->state)"
0x00002bec      ba96000000     mov edx, 0x96
0x00002bf1      e85aefffff     call sym.imp.__assert_fail
0x00002bf6      488d35db3201.  lea rsi, str.error_in_regular_expression_matcher ; /src:746 ; 0x15ed8 ; "error in regular expression matcher"
0x00002bfd      31ff           xor edi, edi
0x00002bff      ba05000000     mov edx, 5
0x00002c04      e887eeffff     call sym.imp.dcgettext
0x00002c09      4983fffe       cmp r15, 0xfffffffffffffffe
0x00002c0d      4889c3         mov rbx, rax
0x00002c10      be4b000000     mov esi, 0x4b                           ; 'K'
0x00002c15      7433           je 0x2c4a
0x00002c17      4889da         mov rdx, rbx
0x00002c1a      bf03000000     mov edi, 3
0x00002c1f      31c0           xor eax, eax
0x00002c21      e8daf0ffff     call sym.imp.error
0x00002c26      e8b5f1ffff     call sym.mbuiter_multi_next.part.2
0x00002c2b      488d0d2e3501.  lea rcx, obj.__PRETTY_FUNCTION__.7929   ; .//ib:178 ; 0x16160 ; "mbuiter_multi_next"
0x00002c32      488d35d72901.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x15610 ; "../coreutils-8.31/lib/mbuiter.h"
0x00002c39      488d3d0e3401.  lea rdi, str.iter__cur.ptr_______0      ; 0x1604e ; "*iter->cur.ptr == '\0'"
0x00002c40      bab2000000     mov edx, 0xb2
0x00002c45      e806efffff     call sym.imp.__assert_fail
0x00002c4a      e8a1edffff     call sym.imp.__errno_location           ; /src:746
0x00002c4f      8b30           mov esi, dword [rax]
0x00002c51      ebc4           jmp 0x2c17
0x00002c53      0f1f00         nop dword [rax]
0x00002c56      662e0f1f8400.  nop word cs:[rax + rax]
;-- eval6:
0x00002c60      4157           push r15                                ; /src:794
0x00002c62      4156           push r14
0x00002c64      4155           push r13
0x00002c66      4154           push r12
0x00002c68      55             push rbp
0x00002c69      53             push rbx
0x00002c6a      89fb           mov ebx, edi
0x00002c6c      488d3df23301.  lea rdi, [0x00016065]                   ; /src:804 ; "+"
0x00002c73      4881ec080100.  sub rsp, 0x108                          ; /src:794
0x00002c7a      64488b042528.  mov rax, qword fs:[0x28]
0x00002c83      48898424f800.  mov qword [rsp + 0xf8], rax
0x00002c8b      31c0           xor eax, eax
0x00002c8d      e84ef4ffff     call sym.nextarg                        ; /src:804
0x00002c92      84c0           test al, al
0x00002c94      0f85e6000000   jne 0x2d80
0x00002c9a      488d3dc63301.  lea rdi, str.length                     ; /src:809 ; 0x16067 ; "length"
0x00002ca1      440fb6fb       movzx r15d, bl
0x00002ca5      e836f4ffff     call sym.nextarg
0x00002caa      84c0           test al, al
0x00002cac      0f851e010000   jne 0x2dd0
0x00002cb2      488d3db53301.  lea rdi, str.match                      ; /src:817 ; 0x1606e ; "match"
0x00002cb9      e822f4ffff     call sym.nextarg
0x00002cbe      84c0           test al, al
0x00002cc0      0f855a020000   jne 0x2f20
0x00002cc6      488d3da73301.  lea rdi, str.index                      ; /src:831 ; 0x16074 ; "index"
0x00002ccd      e80ef4ffff     call sym.nextarg
0x00002cd2      84c0           test al, al
0x00002cd4      4189c6         mov r14d, eax
0x00002cd7      0f85c3020000   jne 0x2fa0
0x00002cdd      488d3d963301.  lea rdi, str.substr                     ; /src:845 ; 0x1607a ; "substr"
0x00002ce4      e8f7f3ffff     call sym.nextarg
0x00002ce9      84c0           test al, al
0x00002ceb      0f852f010000   jne 0x2e20
0x00002cf1      e81af4ffff     call sym.require_more_args              ; /src:770
0x00002cf6      488d3d843301.  lea rdi, [0x00016081]                   ; /src:772 ; "("
0x00002cfd      e8def3ffff     call sym.nextarg
0x00002d02      84c0           test al, al
0x00002d04      0f8456020000   je 0x2f60
0x00002d0a      4489ff         mov edi, r15d                           ; /src:774
0x00002d0d      e8ce100000     call sym.eval
0x00002d12      4989c5         mov r13, rax
0x00002d15      488b05b48321.  mov rax, qword [obj.args]               ; /src:655 ; [0x21b0d0:8]=0
0x00002d1c      48833800       cmp qword [rax], 0
0x00002d20      0f84a20a0000   je 0x37c8
0x00002d26      488d3df03901.  lea rdi, [0x0001671d]                   ; ")"
0x00002d2d      e8aef3ffff     call sym.nextarg
0x00002d32      84c0           test al, al
0x00002d34      756c           jne 0x2da2
0x00002d36      488b05938321.  mov rax, qword [obj.args]               ; [0x21b0d0:8]=0
0x00002d3d      be08000000     mov esi, 8
0x00002d42      31ff           xor edi, edi
0x00002d44      488b10         mov rdx, qword [rax]
0x00002d47      e854330000     call sym.quotearg_n_style
0x00002d4c      488d35d53101.  lea rsi, str.syntax_error:_expecting_____instead_of__s ; 0x15f28 ; "syntax error: expecting ')' instead of %s"
0x00002d53      4889c3         mov rbx, rax
0x00002d56      ba05000000     mov edx, 5
0x00002d5b      31ff           xor edi, edi
0x00002d5d      e82eedffff     call sym.imp.dcgettext
0x00002d62      4889d9         mov rcx, rbx
0x00002d65      4889c2         mov rdx, rax
0x00002d68      31f6           xor esi, esi
0x00002d6a      bf02000000     mov edi, 2
0x00002d6f      31c0           xor eax, eax                            ; /src:675
0x00002d71      e88aefffff     call sym.imp.error
0x00002d76      662e0f1f8400.  nop word cs:[rax + rax]
0x00002d80      e88bf3ffff     call sym.require_more_args
0x00002d85      488b05448321.  mov rax, qword [obj.args]               ; [0x21b0d0:8]=0
0x00002d8c      488b38         mov rdi, qword [rax]
0x00002d8f      488d5008       lea rdx, [rax + 8]
0x00002d93      488915368321.  mov qword [obj.args], rdx               ; [0x21b0d0:8]=0
0x00002d9a      e8c1f3ffff     call sym.str_value
0x00002d9f      4989c5         mov r13, rax
0x00002da2      488b8c24f800.  mov rcx, qword [rsp + 0xf8]             ; /src:552
0x00002daa      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002db3      4c89e8         mov rax, r13
0x00002db6      0f85c4090000   jne 0x3780
0x00002dbc      4881c4080100.  add rsp, 0x108
0x00002dc3      5b             pop rbx                                 ; /src:554
0x00002dc4      5d             pop rbp
0x00002dc5      415c           pop r12
0x00002dc7      415d           pop r13
0x00002dc9      415e           pop r14
0x00002dcb      415f           pop r15                                 ; /src:218
0x00002dcd      c3             ret
0x00002dce      6690           nop
0x00002dd0      4489ff         mov edi, r15d
0x00002dd3      e888feffff     call sym.eval6
0x00002dd8      4889c3         mov rbx, rax                            ; /src:216
0x00002ddb      4889c7         mov rdi, rax                            ; /src:218
0x00002dde      e8fdf4ffff     call sym.tostring
0x00002de3      488b7b08       mov rdi, qword [rbx + 8]
0x00002de7      e864170000     call sym.mbslen
0x00002dec      bf18000000     mov edi, 0x18
0x00002df1      4889c5         mov rbp, rax
0x00002df4      e8c73f0000     call sym.xmalloc
0x00002df9      488d7808       lea rdi, [rax + 8]
0x00002dfd      c70000000000   mov dword [rax], 0                      ; /src:588
0x00002e03      4889ee         mov rsi, rbp
0x00002e06      4989c5         mov r13, rax
0x00002e09      e8b2eeffff     call sym.imp.__gmpz_init_set_ui
0x00002e0e      4889df         mov rdi, rbx
0x00002e11      e88af3ffff     call sym.freev
0x00002e16      eb8a           jmp 0x2da2                              ; /src:591
0x00002e18      0f1f84000000.  nop dword [rax + rax]
0x00002e20      4489ff         mov edi, r15d
0x00002e23      e838feffff     call sym.eval6
0x00002e28      4489ff         mov edi, r15d
0x00002e2b      4889c5         mov rbp, rax
0x00002e2e      e82dfeffff     call sym.eval6
0x00002e33      4489ff         mov edi, r15d
0x00002e36      4889c3         mov rbx, rax
0x00002e39      e822feffff     call sym.eval6
0x00002e3e      4889ef         mov rdi, rbp                            ; /src:365
0x00002e41      4989c4         mov r12, rax
0x00002e44      e897f4ffff     call sym.tostring
0x00002e49      4889df         mov rdi, rbx                            ; /src:366
0x00002e4c      e8fff3ffff     call sym.toarith                        ; /src:372
0x00002e51      84c0           test al, al
0x00002e53      0f84b7010000   je 0x3010                               ; /src:366
0x00002e59      4c89e7         mov rdi, r12                            ; /src:598
0x00002e5c      e8eff3ffff     call sym.toarith
0x00002e61      84c0           test al, al
0x00002e63      0f84a7010000   je 0x3010
0x00002e69      8b530c         mov edx, dword [rbx + 0xc]              ; /src:366
0x00002e6c      49c7c5ffffff.  mov r13, 0xffffffffffffffff             ; /src:372
0x00002e73      85d2           test edx, edx                           ; /src:366
0x00002e75      7810           js 0x2e87
0x00002e77      83fa01         cmp edx, 1
0x00002e7a      49c7c5feffff.  mov r13, 0xfffffffffffffffe
0x00002e81      0f8e53080000   jle 0x36da
0x00002e87      418b44240c     mov eax, dword [r12 + 0xc]
0x00002e8c      49c7c7ffffff.  mov r15, 0xffffffffffffffff
0x00002e93      85c0           test eax, eax
0x00002e95      7810           js 0x2ea7
0x00002e97      83f801         cmp eax, 1
0x00002e9a      49c7c7feffff.  mov r15, 0xfffffffffffffffe
0x00002ea1      0f8e0f080000   jle 0x36b6
0x00002ea7      488b4508       mov rax, qword [rbp + 8]
0x00002eab      4889c7         mov rdi, rax
0x00002eae      4889442408     mov qword [rsp + 8], rax
0x00002eb3      e8f8ebffff     call sym.imp.strlen
0x00002eb8      48890424       mov qword [rsp], rax
0x00002ebc      e8dfebffff     call sym.imp.__ctype_get_mb_cur_max
0x00002ec1      4883f801       cmp rax, 1
0x00002ec5      488b1424       mov rdx, qword [rsp]
0x00002ec9      760d           jbe 0x2ed8
0x00002ecb      488b7c2408     mov rdi, qword [rsp + 8]
0x00002ed0      e87b160000     call sym.mbslen
0x00002ed5      4889c2         mov rdx, rax
0x00002ed8      4939d5         cmp r13, rdx
0x00002edb      7713           ja 0x2ef0
0x00002edd      4584f6         test r14b, r14b
0x00002ee0      750e           jne 0x2ef0
0x00002ee2      498d47ff       lea rax, [r15 - 1]
0x00002ee6      4883f8fd       cmp rax, 0xfffffffffffffffd
0x00002eea      0f864a050000   jbe 0x343a
0x00002ef0      488d3d6a3801.  lea rdi, [0x00016761]
0x00002ef7      e8f4400000     call sym.xstrdup
0x00002efc      48890424       mov qword [rsp], rax
0x00002f00      4c8b3424       mov r14, qword [rsp]                    ; /src:561
0x00002f04      4c89f7         mov rdi, r14
0x00002f07      e854f2ffff     call sym.str_value
0x00002f0c      4c89f7         mov rdi, r14                            ; /src:564
0x00002f0f      4989c5         mov r13, rax
0x00002f12      e8b9eaffff     call sym.imp.free
0x00002f17      e903010000     jmp 0x301f
0x00002f1c      0f1f4000       nop dword [rax]
0x00002f20      4489ff         mov edi, r15d                           ; /src:565
0x00002f23      e838fdffff     call sym.eval6
0x00002f28      4489ff         mov edi, r15d
0x00002f2b      4989c5         mov r13, rax
0x00002f2e      e82dfdffff     call sym.eval6
0x00002f33      84db           test bl, bl
0x00002f35      4889c5         mov rbp, rax
0x00002f38      7419           je 0x2f53
0x00002f3a      4c89ef         mov rdi, r13
0x00002f3d      4889c6         mov rsi, rax
0x00002f40      e86bf8ffff     call sym.docolon
0x00002f45      4889c3         mov rbx, rax
0x00002f48      4c89ef         mov rdi, r13
0x00002f4b      4989dd         mov r13, rbx
0x00002f4e      e84df2ffff     call sym.freev
0x00002f53      4889ef         mov rdi, rbp
0x00002f56      e845f2ffff     call sym.freev
0x00002f5b      e942feffff     jmp 0x2da2
0x00002f60      488d3db63701.  lea rdi, [0x0001671d]                   ; ")"
0x00002f67      e874f1ffff     call sym.nextarg
0x00002f6c      84c0           test al, al
0x00002f6e      0f8411feffff   je 0x2d85
0x00002f74      488d35083101.  lea rsi, str.syntax_error:_unexpected   ; 0x16083 ; "syntax error: unexpected ')'"
0x00002f7b      ba05000000     mov edx, 5
0x00002f80      31ff           xor edi, edi                            ; /src:577
0x00002f82      e809ebffff     call sym.imp.dcgettext
0x00002f87      31f6           xor esi, esi
0x00002f89      4889c2         mov rdx, rax
0x00002f8c      bf02000000     mov edi, 2
0x00002f91      31c0           xor eax, eax
0x00002f93      e868edffff     call sym.imp.error
0x00002f98      0f1f84000000.  nop dword [rax + rax]                   ; /src:580
0x00002fa0      4489ff         mov edi, r15d
0x00002fa3      e8b8fcffff     call sym.eval6                          ; /src:-11
0x00002fa8      4489ff         mov edi, r15d
0x00002fab      4989c4         mov r12, rax
0x00002fae      e8adfcffff     call sym.eval6
0x00002fb3      4c89e7         mov rdi, r12                            ; /src:217
0x00002fb6      4889c3         mov rbx, rax
0x00002fb9      e822f3ffff     call sym.tostring                       ; /src:218
0x00002fbe      4889df         mov rdi, rbx
0x00002fc1      e81af3ffff     call sym.tostring
0x00002fc6      4c8b6b08       mov r13, qword [rbx + 8]
0x00002fca      41807d0000     cmp byte [r13], 0
0x00002fcf      756f           jne 0x3040
0x00002fd1      31ed           xor ebp, ebp
0x00002fd3      bf18000000     mov edi, 0x18
0x00002fd8      e8e33d0000     call sym.xmalloc
0x00002fdd      488d7808       lea rdi, [rax + 8]
0x00002fe1      c70000000000   mov dword [rax], 0
0x00002fe7      4889ee         mov rsi, rbp
0x00002fea      4989c5         mov r13, rax
0x00002fed      e8ceecffff     call sym.imp.__gmpz_init_set_ui
0x00002ff2      4c89e7         mov rdi, r12
0x00002ff5      e8a6f1ffff     call sym.freev
0x00002ffa      4889df         mov rdi, rbx
0x00002ffd      e89ef1ffff     call sym.freev
0x00003002      e99bfdffff     jmp 0x2da2
0x00003007      660f1f840000.  nop word [rax + rax]
0x00003010      488d3d4a3701.  lea rdi, [0x00016761]
0x00003017      e844f1ffff     call sym.str_value                      ; /src:-36
0x0000301c      4989c5         mov r13, rax
0x0000301f      4889ef         mov rdi, rbp
0x00003022      e879f1ffff     call sym.freev                          ; /src:-5
0x00003027      4889df         mov rdi, rbx
0x0000302a      e871f1ffff     call sym.freev
0x0000302f      4c89e7         mov rdi, r12
0x00003032      e869f1ffff     call sym.freev
0x00003037      e966fdffff     jmp 0x2da2
0x0000303c      0f1f4000       nop dword [rax]
0x00003040      4d8b742408     mov r14, qword [r12 + 8]
0x00003045      e856eaffff     call sym.imp.__ctype_get_mb_cur_max
0x0000304a      4883f801       cmp rax, 1
0x0000304e      7720           ja 0x3070
0x00003050      4c89ee         mov rsi, r13
0x00003053      4c89f7         mov rdi, r14                            ; .//ib:-123
0x00003056      e815ebffff     call sym.imp.strcspn
0x0000305b      41803c0600     cmp byte [r14 + rax], 0
0x00003060      0f846bffffff   je 0x2fd1
0x00003066      488d6801       lea rbp, [rax + 1]
0x0000306a      e964ffffff     jmp 0x2fd3
0x0000306f      90             nop
0x00003070      4c89742440     mov qword [rsp + 0x40], r14
0x00003075      4c8d742470     lea r14, [rsp + 0x70]
0x0000307a      c644243000     mov byte [rsp + 0x30], 0
0x0000307f      31ed           xor ebp, ebp
0x00003081      807c243000     cmp byte [rsp + 0x30], 0
0x00003086      48c744243400.  mov qword [rsp + 0x34], 0
0x0000308f      498d4624       lea rax, [r14 + 0x24]
0x00003093      c644243c00     mov byte [rsp + 0x3c], 0
0x00003098      48890424       mov qword [rsp], rax
0x0000309c      488d442430     lea rax, [rsp + 0x30]
0x000030a1      4889442410     mov qword [rsp + 0x10], rax
0x000030a6      0f8580000000   jne 0x312c
0x000030ac      488b7c2440     mov rdi, qword [rsp + 0x40]             ; .//ib:-370
0x000030b1      488d35e83001.  lea rsi, obj.is_basic_table             ; 0x161a0
0x000030b8      0fb617         movzx edx, byte [rdi]
0x000030bb      89d0           mov eax, edx
0x000030bd      c0e805         shr al, 5
0x000030c0      83e007         and eax, 7
0x000030c3      8b0486         mov eax, dword [rsi + rax*4]
0x000030c6      0fa3d0         bt eax, edx
0x000030c9      0f831b030000   jae 0x33ea
0x000030cf      48c744244801.  mov qword [rsp + 0x48], 1
0x000030d8      0fbe07         movsx eax, byte [rdi]
0x000030db      c644245001     mov byte [rsp + 0x50], 1
0x000030e0      c644243c01     mov byte [rsp + 0x3c], 1                ; /src:-637
0x000030e5      85c0           test eax, eax
0x000030e7      89442454       mov dword [rsp + 0x54], eax
0x000030eb      0f84e0feffff   je 0x2fd1
0x000030f1      4883c501       add rbp, 1
0x000030f5      0fbe37         movsx esi, byte [rdi]
0x000030f8      48897c2408     mov qword [rsp + 8], rdi
0x000030fd      4c89ef         mov rdi, r13
0x00003100      e89b110000     call sym.mbschr
0x00003105      4885c0         test rax, rax
0x00003108      0f85c5feffff   jne 0x2fd3
0x0000310e      488b542408     mov rdx, qword [rsp + 8]
0x00003113      bf01000000     mov edi, 1
0x00003118      4801d7         add rdi, rdx
0x0000311b      807c243000     cmp byte [rsp + 0x30], 0
0x00003120      c644243c00     mov byte [rsp + 0x3c], 0
0x00003125      48897c2440     mov qword [rsp + 0x40], rdi
0x0000312a      7480           je 0x30ac
0x0000312c      e86fe9ffff     call sym.imp.__ctype_get_mb_cur_max
0x00003131      4c8b442440     mov r8, qword [rsp + 0x40]
0x00003136      4889c6         mov rsi, rax
0x00003139      4c89c7         mov rdi, r8
0x0000313c      4c89442408     mov qword [rsp + 8], r8                 ; /src:-596
0x00003141      e86a330000     call sym.strnlen1
0x00003146      488b742410     mov rsi, qword [rsp + 0x10]
0x0000314b      4c8b442408     mov r8, qword [rsp + 8]
0x00003150      4889c2         mov rdx, rax
0x00003153      488d4e04       lea rcx, [rsi + 4]
0x00003157      488d7e24       lea rdi, [rsi + 0x24]
0x0000315b      4c89c6         mov rsi, r8
0x0000315e      e8ed3e0000     call sym.rpl_mbrtowc
0x00003163      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003167      4889442448     mov qword [rsp + 0x48], rax
0x0000316c      0f8498020000   je 0x340a
0x00003172      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003176      0f841c050000   je 0x3698
0x0000317c      4885c0         test rax, rax
0x0000317f      7523           jne 0x31a4                              ; /src:-546
0x00003181      488b7c2440     mov rdi, qword [rsp + 0x40]
0x00003186      48c744244801.  mov qword [rsp + 0x48], 1
0x0000318f      803f00         cmp byte [rdi], 0                       ; /src:-543
0x00003192      0f8511060000   jne 0x37a9
0x00003198      8b742454       mov esi, dword [rsp + 0x54]
0x0000319c      85f6           test esi, esi
0x0000319e      0f8500060000   jne 0x37a4
0x000031a4      488b442410     mov rax, qword [rsp + 0x10]
0x000031a9      c644245001     mov byte [rsp + 0x50], 1
0x000031ae      488d7804       lea rdi, [rax + 4]
0x000031b2      e8d9ebffff     call sym.imp.mbsinit
0x000031b7      85c0           test eax, eax
0x000031b9      0f8440050000   je 0x36ff
0x000031bf      c644243000     mov byte [rsp + 0x30], 0
0x000031c4      c644243c01     mov byte [rsp + 0x3c], 1
0x000031c9      8b4c2454       mov ecx, dword [rsp + 0x54]
0x000031cd      85c9           test ecx, ecx
0x000031cf      0f84fcfdffff   je 0x2fd1
0x000031d5      4883c501       add rbp, 1
0x000031d9      48837c244801   cmp qword [rsp + 0x48], 1
0x000031df      750f           jne 0x31f0
0x000031e1      488b7c2440     mov rdi, qword [rsp + 0x40]
0x000031e6      e90affffff     jmp 0x30f5
0x000031eb      0f1f440000     nop dword [rax + rax]
0x000031f0      4c89ac248000.  mov qword [rsp + 0x80], r13
0x000031f8      c644247000     mov byte [rsp + 0x70], 0                ; .//ib:-628
0x000031fd      49c746040000.  mov qword [r14 + 4], 0
0x00003205      c644247c00     mov byte [rsp + 0x7c], 0
0x0000320a      e983000000     jmp 0x3292
0x0000320f      90             nop
0x00003210      488b8c248000.  mov rcx, qword [rsp + 0x80]
0x00003218      488d35812f01.  lea rsi, obj.is_basic_table             ; 0x161a0
0x0000321f      0fb611         movzx edx, byte [rcx]
0x00003222      89d0           mov eax, edx
0x00003224      c0e805         shr al, 5
0x00003227      83e007         and eax, 7
0x0000322a      8b0486         mov eax, dword [rsi + rax*4]
0x0000322d      0fa3d0         bt eax, edx
0x00003230      0f835a010000   jae 0x3390
0x00003236      48c784248800.  mov qword [rsp + 0x88], 1
0x00003242      0fbe01         movsx eax, byte [rcx]
0x00003245      c68424900000.  mov byte [rsp + 0x90], 1
0x0000324d      c644247c01     mov byte [rsp + 0x7c], 1
0x00003252      898424940000.  mov dword [rsp + 0x94], eax
0x00003259      8b8424940000.  mov eax, dword [rsp + 0x94]
0x00003260      85c0           test eax, eax
0x00003262      0f84c3010000   je 0x342b
0x00003268      807c245000     cmp byte [rsp + 0x50], 0                ; .//ib:-747
0x0000326d      0f84e6000000   je 0x3359
0x00003273      39442454       cmp dword [rsp + 0x54], eax
0x00003277      0f8456fdffff   je 0x2fd3
0x0000327d      4c8bbc248800.  mov r15, qword [rsp + 0x88]
0x00003285      4c01bc248000.  add qword [rsp + 0x80], r15             ; .//ib:-725
0x0000328d      c644247c00     mov byte [rsp + 0x7c], 0                ; .//ib:-726
0x00003292      807c247000     cmp byte [rsp + 0x70], 0
0x00003297      0f8473ffffff   je 0x3210
0x0000329d      e8fee7ffff     call sym.imp.__ctype_get_mb_cur_max
0x000032a2      4c8bbc248000.  mov r15, qword [rsp + 0x80]             ; .//ib:-724
0x000032aa      4889c6         mov rsi, rax
0x000032ad      4c89ff         mov rdi, r15
0x000032b0      e8fb310000     call sym.strnlen1
0x000032b5      488b3c24       mov rdi, qword [rsp]                    ; .//ib:-722
0x000032b9      498d4e04       lea rcx, [r14 + 4]
0x000032bd      4889c2         mov rdx, rax                            ; .//ib:-718
0x000032c0      4c89fe         mov rsi, r15
0x000032c3      e8883d0000     call sym.rpl_mbrtowc
0x000032c8      4883f8ff       cmp rax, 0xffffffffffffffff
0x000032cc      488984248800.  mov qword [rsp + 0x88], rax
0x000032d4      746a           je 0x3340
0x000032d6      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000032da      0f84d0000000   je 0x33b0
0x000032e0      4885c0         test rax, rax                           ; .//ib:-744
0x000032e3      752c           jne 0x3311
0x000032e5      488b84248000.  mov rax, qword [rsp + 0x80]
0x000032ed      48c784248800.  mov qword [rsp + 0x88], 1
0x000032f9      803800         cmp byte [rax], 0                       ; /src:-661
0x000032fc      0f85a7040000   jne 0x37a9
0x00003302      8bbc24940000.  mov edi, dword [rsp + 0x94]
0x00003309      85ff           test edi, edi
0x0000330b      0f8593040000   jne 0x37a4
0x00003311      498d7e04       lea rdi, [r14 + 4]
0x00003315      c68424900000.  mov byte [rsp + 0x90], 1
0x0000331d      e86eeaffff     call sym.imp.mbsinit
0x00003322      85c0           test eax, eax
0x00003324      0f84b6000000   je 0x33e0
0x0000332a      c644247000     mov byte [rsp + 0x70], 0
0x0000332f      c644247c01     mov byte [rsp + 0x7c], 1
0x00003334      e920ffffff     jmp 0x3259
0x00003339      0f1f80000000.  nop dword [rax]
0x00003340      48c784248800.  mov qword [rsp + 0x88], 1
0x0000334c      c68424900000.  mov byte [rsp + 0x90], 0
0x00003354      c644247c01     mov byte [rsp + 0x7c], 1
0x00003359      4c8bbc248800.  mov r15, qword [rsp + 0x88]
0x00003361      4c3b7c2448     cmp r15, qword [rsp + 0x48]
0x00003366      0f8519ffffff   jne 0x3285
0x0000336c      488b742440     mov rsi, qword [rsp + 0x40]
0x00003371      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x00003379      4c89fa         mov rdx, r15
0x0000337c      e80fe8ffff     call sym.imp.memcmp
0x00003381      85c0           test eax, eax
0x00003383      0f844afcffff   je 0x2fd3
0x00003389      e9f7feffff     jmp 0x3285
0x0000338e      6690           nop
0x00003390      498d7e04       lea rdi, [r14 + 4]
0x00003394      e8f7e9ffff     call sym.imp.mbsinit
0x00003399      85c0           test eax, eax
0x0000339b      0f84e4030000   je 0x3785
0x000033a1      c644247001     mov byte [rsp + 0x70], 1
0x000033a6      e9f2feffff     jmp 0x329d
0x000033ab      0f1f440000     nop dword [rax + rax]
0x000033b0      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x000033b8      e8f3e6ffff     call sym.imp.strlen
0x000033bd      c68424900000.  mov byte [rsp + 0x90], 0
0x000033c5      488984248800.  mov qword [rsp + 0x88], rax             ; /src:-879
0x000033cd      c644247c01     mov byte [rsp + 0x7c], 1
0x000033d2      e982ffffff     jmp 0x3359
0x000033d7      660f1f840000.  nop word [rax + rax]
0x000033e0      c644247c01     mov byte [rsp + 0x7c], 1
0x000033e5      e96ffeffff     jmp 0x3259
0x000033ea      488b442410     mov rax, qword [rsp + 0x10]
0x000033ef      488d7804       lea rdi, [rax + 4]
0x000033f3      e898e9ffff     call sym.imp.mbsinit
0x000033f8      85c0           test eax, eax
0x000033fa      0f8485030000   je 0x3785
0x00003400      c644243001     mov byte [rsp + 0x30], 1
0x00003405      e922fdffff     jmp 0x312c                              ; stdio.h:-1088
0x0000340a      48c744244801.  mov qword [rsp + 0x48], 1
0x00003413      c644245000     mov byte [rsp + 0x50], 0
0x00003418      4883c501       add rbp, 1
0x0000341c      c644243c01     mov byte [rsp + 0x3c], 1
0x00003421      488b7c2440     mov rdi, qword [rsp + 0x40]
0x00003426      e9cafcffff     jmp 0x30f5                              ; /src:-863
0x0000342b      488b542440     mov rdx, qword [rsp + 0x40]
0x00003430      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00003435      e9defcffff     jmp 0x3118
0x0000343a      4c29ea         sub rdx, r13
0x0000343d      488d4201       lea rax, [rdx + 1]                      ; .//ib:-1020
0x00003441      4c39f8         cmp rax, r15
0x00003444      4c0f46f8       cmovbe r15, rax
0x00003448      e853e6ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000344d      4883f801       cmp rax, 1
0x00003451      0f840d020000   je 0x3664
0x00003457      488b3c24       mov rdi, qword [rsp]
0x0000345b      41be01000000   mov r14d, 1
0x00003461      4883c701       add rdi, 1
0x00003465      e856390000     call sym.xmalloc
0x0000346a      488b742408     mov rsi, qword [rsp + 8]
0x0000346f      48890424       mov qword [rsp], rax                    ; .//ib:-1014
0x00003473      4889442408     mov qword [rsp + 8], rax
0x00003478      488d8424b000.  lea rax, [rsp + 0xb0]
0x00003480      c68424b00000.  mov byte [rsp + 0xb0], 0
0x00003488      48c78424b400.  mov qword [rsp + 0xb4], 0
0x00003494      c68424bc0000.  mov byte [rsp + 0xbc], 0
0x0000349c      4889442420     mov qword [rsp + 0x20], rax
0x000034a1      488d8424b400.  lea rax, [rsp + 0xb4]                   ; /src:-858
0x000034a9      4889b424c000.  mov qword [rsp + 0xc0], rsi
0x000034b1      4889442428     mov qword [rsp + 0x28], rax
0x000034b6      e9c2000000     jmp 0x357d                              ; stdio.h:-1111
0x000034bb      0f1f440000     nop dword [rax + rax]
0x000034c0      488b8c24c000.  mov rcx, qword [rsp + 0xc0]
0x000034c8      488d35d12c01.  lea rsi, obj.is_basic_table             ; 0x161a0
0x000034cf      0fb611         movzx edx, byte [rcx]
0x000034d2      89d0           mov eax, edx
0x000034d4      c0e805         shr al, 5
0x000034d7      83e007         and eax, 7
0x000034da      8b0486         mov eax, dword [rsi + rax*4]
0x000034dd      0fa3d0         bt eax, edx
0x000034e0      0f835f010000   jae 0x3645
0x000034e6      48c78424c800.  mov qword [rsp + 0xc8], 1
0x000034f2      0fbe01         movsx eax, byte [rcx]
0x000034f5      c68424d00000.  mov byte [rsp + 0xd0], 1
0x000034fd      c68424bc0000.  mov byte [rsp + 0xbc], 1
0x00003505      898424d40000.  mov dword [rsp + 0xd4], eax
0x0000350c      8b8424d40000.  mov eax, dword [rsp + 0xd4]
0x00003513      85c0           test eax, eax
0x00003515      0f8470010000   je 0x368b
0x0000351b      4d85ff         test r15, r15
0x0000351e      0f8467010000   je 0x368b
0x00003524      4d39f5         cmp r13, r14
0x00003527      4c8b8424c800.  mov r8, qword [rsp + 0xc8]
0x0000352f      488b8c24c000.  mov rcx, qword [rsp + 0xc0]
0x00003537      772d           ja 0x3566
0x00003539      488b7c2408     mov rdi, qword [rsp + 8]
0x0000353e      4c89c2         mov rdx, r8
0x00003541      4889ce         mov rsi, rcx
0x00003544      4c89442418     mov qword [rsp + 0x18], r8
0x00003549      48894c2410     mov qword [rsp + 0x10], rcx
0x0000354e      4983ef01       sub r15, 1                              ; .//ib:-1003
0x00003552      e889e7ffff     call sym.imp.mempcpy
0x00003557      4c8b442418     mov r8, qword [rsp + 0x18]
0x0000355c      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00003561      4889442408     mov qword [rsp + 8], rax
0x00003566      4c01c1         add rcx, r8
0x00003569      c68424bc0000.  mov byte [rsp + 0xbc], 0
0x00003571      4983c601       add r14, 1
0x00003575      48898c24c000.  mov qword [rsp + 0xc0], rcx
0x0000357d      80bc24b00000.  cmp byte [rsp + 0xb0], 0
0x00003585      0f8435ffffff   je 0x34c0
0x0000358b      e810e5ffff     call sym.imp.__ctype_get_mb_cur_max
0x00003590      4c8b8424c000.  mov r8, qword [rsp + 0xc0]
0x00003598      4889c6         mov rsi, rax
0x0000359b      4c89c7         mov rdi, r8
0x0000359e      4c89442410     mov qword [rsp + 0x10], r8
0x000035a3      e8082f0000     call sym.strnlen1
0x000035a8      488b742420     mov rsi, qword [rsp + 0x20]
0x000035ad      4c8b442410     mov r8, qword [rsp + 0x10]              ; .//ib:-973
0x000035b2      4889c2         mov rdx, rax
0x000035b5      488d4e04       lea rcx, [rsi + 4]                      ; .//ib:-970
0x000035b9      488d7e24       lea rdi, [rsi + 0x24]
0x000035bd      4c89c6         mov rsi, r8
0x000035c0      e88b3a0000     call sym.rpl_mbrtowc
0x000035c5      4883f8ff       cmp rax, 0xffffffffffffffff
0x000035c9      48898424c800.  mov qword [rsp + 0xc8], rax
0x000035d1      0f8432010000   je 0x3709
0x000035d7      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000035db      0f8449010000   je 0x372a
0x000035e1      4885c0         test rax, rax                           ; /src:-876
0x000035e4      752c           jne 0x3612
0x000035e6      488b8424c000.  mov rax, qword [rsp + 0xc0]
0x000035ee      48c78424c800.  mov qword [rsp + 0xc8], 1
0x000035fa      803800         cmp byte [rax], 0
0x000035fd      0f85a6010000   jne 0x37a9
0x00003603      8b9424d40000.  mov edx, dword [rsp + 0xd4]
0x0000360a      85d2           test edx, edx
0x0000360c      0f8592010000   jne 0x37a4
0x00003612      488b442420     mov rax, qword [rsp + 0x20]
0x00003617      c68424d00000.  mov byte [rsp + 0xd0], 1
0x0000361f      488d7804       lea rdi, [rax + 4]                      ; .//ib:-991
0x00003623      e868e7ffff     call sym.imp.mbsinit
0x00003628      85c0           test eax, eax
0x0000362a      0f8424010000   je 0x3754
0x00003630      c68424b00000.  mov byte [rsp + 0xb0], 0
0x00003638      c68424bc0000.  mov byte [rsp + 0xbc], 1                ; /usr/include/x86_64-linux-gnu/bits/string_fortified.h:619
0x00003640      e9c7feffff     jmp 0x350c
0x00003645      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000364a      e841e7ffff     call sym.imp.mbsinit
0x0000364f      85c0           test eax, eax
0x00003651      0f842e010000   je 0x3785
0x00003657      c68424b00000.  mov byte [rsp + 0xb0], 1                ; /usr/include/x86_64-linux-gnu/bits/string_fortified.h:612
0x0000365f      e927ffffff     jmp 0x358b
0x00003664      498d7f01       lea rdi, [r15 + 1]
0x00003668      e853370000     call sym.xmalloc
0x0000366d      488b742408     mov rsi, qword [rsp + 8]
0x00003672      4c89fa         mov rdx, r15
0x00003675      4889c7         mov rdi, rax
0x00003678      48890424       mov qword [rsp], rax
0x0000367c      4a8d742eff     lea rsi, [rsi + r13 - 1]                ; .//ib:-970
0x00003681      e85ae6ffff     call sym.imp.mempcpy
0x00003686      4889442408     mov qword [rsp + 8], rax                ; .//ib:-1000
0x0000368b      488b442408     mov rax, qword [rsp + 8]
0x00003690      c60000         mov byte [rax], 0
0x00003693      e968f8ffff     jmp 0x2f00
0x00003698      488b7c2440     mov rdi, qword [rsp + 0x40]
0x0000369d      e80ee4ffff     call sym.imp.strlen
0x000036a2      c644245000     mov byte [rsp + 0x50], 0
0x000036a7      4889442448     mov qword [rsp + 0x48], rax             ; .//ib:-992
0x000036ac      c644243c01     mov byte [rsp + 0x3c], 1
0x000036b1      e91ffbffff     jmp 0x31d5
0x000036b6      498b542410     mov rdx, qword [r12 + 0x10]
0x000036bb      85c0           test eax, eax
0x000036bd      4c8b3a         mov r15, qword [rdx]
0x000036c0      0f849b000000   je 0x3761
0x000036c6      4983ffff       cmp r15, 0xffffffffffffffff
0x000036ca      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x000036d1      4c0f44f8       cmove r15, rax
0x000036d5      e9cdf7ffff     jmp 0x2ea7
0x000036da      488b4b10       mov rcx, qword [rbx + 0x10]
0x000036de      85d2           test edx, edx                           ; /usr/include/x86_64-linux-gnu/bits/string_fortified.h:619
0x000036e0      4c8b29         mov r13, qword [rcx]
0x000036e3      0f8480000000   je 0x3769
0x000036e9      4983fdff       cmp r13, 0xffffffffffffffff
0x000036ed      0f8481000000   je 0x3774
0x000036f3      4d85ed         test r13, r13
0x000036f6      410f94c6       sete r14b
0x000036fa      e988f7ffff     jmp 0x2e87
0x000036ff      c644243c01     mov byte [rsp + 0x3c], 1
0x00003704      e9c0faffff     jmp 0x31c9
0x00003709      48c78424c800.  mov qword [rsp + 0xc8], 1
0x00003715      c68424d00000.  mov byte [rsp + 0xd0], 0
0x0000371d      c68424bc0000.  mov byte [rsp + 0xbc], 1
0x00003725      e9f1fdffff     jmp 0x351b
0x0000372a      488bbc24c000.  mov rdi, qword [rsp + 0xc0]
0x00003732      e879e3ffff     call sym.imp.strlen
0x00003737      c68424d00000.  mov byte [rsp + 0xd0], 0
0x0000373f      48898424c800.  mov qword [rsp + 0xc8], rax
0x00003747      c68424bc0000.  mov byte [rsp + 0xbc], 1
0x0000374f      e9c7fdffff     jmp 0x351b
0x00003754      c68424bc0000.  mov byte [rsp + 0xbc], 1
0x0000375c      e9abfdffff     jmp 0x350c
0x00003761      4531ff         xor r15d, r15d
0x00003764      e93ef7ffff     jmp 0x2ea7
0x00003769      4189c6         mov r14d, eax
0x0000376c      4531ed         xor r13d, r13d
0x0000376f      e913f7ffff     jmp 0x2e87
0x00003774      49c7c5feffff.  mov r13, 0xfffffffffffffffe
0x0000377b      e907f7ffff     jmp 0x2e87
0x00003780      e84be3ffff     call sym.imp.__stack_chk_fail
0x00003785      488d0dd42901.  lea rcx, obj.__PRETTY_FUNCTION__.7929   ; 0x16160 ; "mbuiter_multi_next"
0x0000378c      488d357d1e01.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x15610 ; "../coreutils-8.31/lib/mbuiter.h"
0x00003793      488d3d9d2801.  lea rdi, str.mbsinit___iter__state      ; /src:-397 ; 0x16037 ; "mbsinit (&iter->state)"
0x0000379a      ba96000000     mov edx, 0x96
0x0000379f      e8ace3ffff     call sym.imp.__assert_fail
0x000037a4      e837e6ffff     call sym.mbuiter_multi_next.part.2
0x000037a9      488d0db02901.  lea rcx, obj.__PRETTY_FUNCTION__.7929   ; /src:-392 ; 0x16160 ; "mbuiter_multi_next"
0x000037b0      488d35591e01.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x15610 ; "../coreutils-8.31/lib/mbuiter.h"
0x000037b7      488d3d902801.  lea rdi, str.iter__cur.ptr_______0      ; 0x1604e ; "*iter->cur.ptr == '\0'"
0x000037be      bab2000000     mov edx, 0xb2
0x000037c3      e888e3ffff     call sym.imp.__assert_fail
0x000037c8      488b50f8       mov rdx, qword [rax - 8]
0x000037cc      be08000000     mov esi, 8
0x000037d1      31ff           xor edi, edi
0x000037d3      e8c8280000     call sym.quotearg_n_style
0x000037d8      488d35212701.  lea rsi, str.syntax_error:_expecting_____after__s ; 0x15f00 ; "syntax error: expecting ')' after %s"
0x000037df      4889c3         mov rbx, rax
0x000037e2      ba05000000     mov edx, 5                              ; /src:-379
0x000037e7      31ff           xor edi, edi
0x000037e9      e8a2e2ffff     call sym.imp.dcgettext
0x000037ee      4889d9         mov rcx, rbx
0x000037f1      4889c2         mov rdx, rax
0x000037f4      31f6           xor esi, esi
0x000037f6      bf02000000     mov edi, 2
0x000037fb      31c0           xor eax, eax
0x000037fd      e8fee4ffff     call sym.imp.error
0x00003802      0f1f4000       nop dword [rax]
0x00003806      662e0f1f8400.  nop word cs:[rax + rax]
;-- eval5:
0x00003810      4157           push r15
0x00003812      4156           push r14
0x00003814      4189fe         mov r14d, edi
0x00003817      4155           push r13
0x00003819      4154           push r12                                ; /src:-360
0x0000381b      4c8d257e2801.  lea r12, [0x000160a0]                   ; u":*%\u6f6e\u2d6e\u6e69\u6574\u6567\u2072\u7261\u7567\u656d\u746e\u6400\u7669\u7369\u6f69\u206e\u7962\u7a20\u7265o<\u3d3c\u3d00=\u3d21\u3e00=>&|\u752f\u7273\u6c2f\u636f\u6c61\u732f\u6168\u6572\u6c2f\u636f\u6c61e\u2e38\u3133\u5000\u7561\u206c\u6745\u6567\u7472\u4a00\u6d61\u7365\u5920\u756f\u676e\u616dn\u694d\u656b\u5020"
0x00003822      55             push rbp
0x00003823      53             push rbx
0x00003824      400fb6ef       movzx ebp, dil
0x00003828      89ef           mov edi, ebp
0x0000382a      4883ec08       sub rsp, 8
0x0000382e      e82df4ffff     call sym.eval6                          ; /src:-357
0x00003833      4989c5         mov r13, rax
0x00003836      eb10           jmp 0x3848
0x00003838      0f1f84000000.  nop dword [rax + rax]
0x00003840      4889df         mov rdi, rbx
0x00003843      e858e9ffff     call sym.freev
0x00003848      4c89e7         mov rdi, r12
0x0000384b      e890e8ffff     call sym.nextarg
0x00003850      84c0           test al, al
0x00003852      742c           je 0x3880
0x00003854      89ef           mov edi, ebp
0x00003856      e805f4ffff     call sym.eval6
0x0000385b      4584f6         test r14b, r14b
0x0000385e      4889c3         mov rbx, rax
0x00003861      74dd           je 0x3840                               ; /src:-352
0x00003863      4c89ef         mov rdi, r13
0x00003866      4889c6         mov rsi, rax                            ; /src:-348
0x00003869      e842efffff     call sym.docolon
0x0000386e      4c89ef         mov rdi, r13                            ; /src:-368
0x00003871      4989c7         mov r15, rax
0x00003874      4d89fd         mov r13, r15
0x00003877      e824e9ffff     call sym.freev
0x0000387c      ebc2           jmp 0x3840
0x0000387e      6690           nop
0x00003880      4883c408       add rsp, 8
0x00003884      4c89e8         mov rax, r13
0x00003887      5b             pop rbx
0x00003888      5d             pop rbp
0x00003889      415c           pop r12
0x0000388b      415d           pop r13
0x0000388d      415e           pop r14                                 ; /src:-352
0x0000388f      415f           pop r15
0x00003891      c3             ret
0x00003892      0f1f4000       nop dword [rax]
0x00003896      662e0f1f8400.  nop word cs:[rax + rax]
;-- eval4:
0x000038a0      4156           push r14
0x000038a2      4155           push r13
0x000038a4      4189fe         mov r14d, edi
0x000038a7      4154           push r12
0x000038a9      440fb6e7       movzx r12d, dil
0x000038ad      55             push rbp                                ; /src:-363
0x000038ae      53             push rbx
0x000038af      4489e7         mov edi, r12d
0x000038b2      e859ffffff     call sym.eval5
0x000038b7      4989c5         mov r13, rax
0x000038ba      eb7d           jmp 0x3939
0x000038bc      0f1f4000       nop dword [rax]
0x000038c0      488d3d6f2901.  lea rdi, [0x00016236]                   ; "/"
0x000038c7      bd01000000     mov ebp, 1
0x000038cc      e80fe8ffff     call sym.nextarg
0x000038d1      84c0           test al, al
0x000038d3      0f848f000000   je 0x3968
0x000038d9      4489e7         mov edi, r12d
0x000038dc      e82fffffff     call sym.eval5
0x000038e1      4584f6         test r14b, r14b
0x000038e4      4889c3         mov rbx, rax
0x000038e7      7448           je 0x3931
0x000038e9      4c89ef         mov rdi, r13
0x000038ec      e85fe9ffff     call sym.toarith
0x000038f1      84c0           test al, al
0x000038f3      0f84a4000000   je 0x399d
0x000038f9      4889df         mov rdi, rbx
0x000038fc      e84fe9ffff     call sym.toarith
0x00003901      84c0           test al, al
0x00003903      0f8494000000   je 0x399d
0x00003909      85ed           test ebp, ebp
0x0000390b      744b           je 0x3958
0x0000390d      8b430c         mov eax, dword [rbx + 0xc]
0x00003910      85c0           test eax, eax
0x00003912      0f84a9000000   je 0x39c1
0x00003918      83fd01         cmp ebp, 1
0x0000391b      746b           je 0x3988
0x0000391d      488b05a47621.  mov rax, qword [reloc.__gmpz_tdiv_r]    ; [0x21afc8:8]=0
0x00003924      498d7d08       lea rdi, [r13 + 8]
0x00003928      488d5308       lea rdx, [rbx + 8]
0x0000392c      4889fe         mov rsi, rdi
0x0000392f      ffd0           call rax
0x00003931      4889df         mov rdi, rbx
0x00003934      e867e8ffff     call sym.freev                          ; /src:-332
0x00003939      488d3d622701.  lea rdi, [0x000160a2]                   ; u"*%\u6f6e\u2d6e\u6e69\u6574\u6567\u2072\u7261\u7567\u656d\u746e\u6400\u7669\u7369\u6f69\u206e\u7962\u7a20\u7265o<\u3d3c\u3d00=\u3d21\u3e00=>&|\u752f\u7273\u6c2f\u636f\u6c61\u732f\u6168\u6572\u6c2f\u636f\u6c61e\u2e38\u3133\u5000\u7561\u206c\u6745\u6567\u7472\u4a00\u6d61\u7365\u5920\u756f\u676e\u616dn\u694d\u656b\u5020\u7261"
0x00003940      e89be7ffff     call sym.nextarg
0x00003945      84c0           test al, al                             ; /src:-327
0x00003947      0f8473ffffff   je 0x38c0
0x0000394d      31ed           xor ebp, ebp
0x0000394f      eb88           jmp 0x38d9
0x00003951      0f1f80000000.  nop dword [rax]
0x00003958      488b05517621.  mov rax, qword [reloc.__gmpz_mul]       ; [0x21afb0:8]=0
0x0000395f      ebc3           jmp 0x3924
0x00003961      0f1f80000000.  nop dword [rax]
0x00003968      488d3d352701.  lea rdi, [0x000160a4]                   ; /src:-322 ; "%"
0x0000396f      e86ce7ffff     call sym.nextarg
0x00003974      84c0           test al, al
0x00003976      7419           je 0x3991                               ; /src:-320
0x00003978      bd02000000     mov ebp, 2
0x0000397d      e957ffffff     jmp 0x38d9
0x00003982      660f1f440000   nop word [rax + rax]                    ; /src:-318
0x00003988      488b05097621.  mov rax, qword [reloc.__gmpz_tdiv_q]    ; [0x21af98:8]=0
0x0000398f      eb93           jmp 0x3924
0x00003991      5b             pop rbx
0x00003992      4c89e8         mov rax, r13
0x00003995      5d             pop rbp
0x00003996      415c           pop r12
0x00003998      415d           pop r13
0x0000399a      415e           pop r14                                 ; /src:-316
0x0000399c      c3             ret
0x0000399d      488d35022701.  lea rsi, [0x000160a6]                   ; "non-integer argument"
0x000039a4      ba05000000     mov edx, 5
0x000039a9      31ff           xor edi, edi
0x000039ab      e8e0e0ffff     call sym.imp.dcgettext
0x000039b0      31f6           xor esi, esi
0x000039b2      4889c2         mov rdx, rax                            ; /src:-328
0x000039b5      bf02000000     mov edi, 2
0x000039ba      31c0           xor eax, eax
0x000039bc      e83fe3ffff     call sym.imp.error
0x000039c1      488d35f32601.  lea rsi, str.division_by_zero           ; 0x160bb ; "division by zero"
0x000039c8      ba05000000     mov edx, 5
0x000039cd      31ff           xor edi, edi                            ; /src:-314
0x000039cf      e8bce0ffff     call sym.imp.dcgettext
0x000039d4      31f6           xor esi, esi
0x000039d6      4889c2         mov rdx, rax
0x000039d9      bf02000000     mov edi, 2                              ; /src:-319
0x000039de      31c0           xor eax, eax
0x000039e0      e81be3ffff     call sym.imp.error
0x000039e5      90             nop
0x000039e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- eval3:
0x000039f0      4156           push r14
0x000039f2      4155           push r13
0x000039f4      4189fe         mov r14d, edi
0x000039f7      4154           push r12
0x000039f9      440fb6e7       movzx r12d, dil
0x000039fd      55             push rbp
0x000039fe      53             push rbx
0x000039ff      4489e7         mov edi, r12d
0x00003a02      e899feffff     call sym.eval4
0x00003a07      4989c5         mov r13, rax
0x00003a0a      eb61           jmp 0x3a6d
0x00003a0c      0f1f4000       nop dword [rax]
0x00003a10      488d3d0e2701.  lea rdi, [0x00016125]                   ; /src:-302 ; "-"
0x00003a17      e8c4e6ffff     call sym.nextarg
0x00003a1c      84c0           test al, al
0x00003a1e      7478           je 0x3a98
0x00003a20      bd01000000     mov ebp, 1
0x00003a25      4489e7         mov edi, r12d
0x00003a28      e873feffff     call sym.eval4
0x00003a2d      4584f6         test r14b, r14b                         ; /src:-290
0x00003a30      4889c3         mov rbx, rax
0x00003a33      7430           je 0x3a65
0x00003a35      4c89ef         mov rdi, r13
0x00003a38      e813e8ffff     call sym.toarith
0x00003a3d      84c0           test al, al
0x00003a3f      7463           je 0x3aa4
0x00003a41      4889df         mov rdi, rbx
0x00003a44      e807e8ffff     call sym.toarith
0x00003a49      84c0           test al, al
0x00003a4b      7457           je 0x3aa4
0x00003a4d      85ed           test ebp, ebp                           ; /src:-278
0x00003a4f      7437           je 0x3a88
0x00003a51      488b05507521.  mov rax, qword [reloc.__gmpz_sub]       ; [0x21afa8:8]=0
0x00003a58      498d7d08       lea rdi, [r13 + 8]                      ; /src:-276
0x00003a5c      488d5308       lea rdx, [rbx + 8]
0x00003a60      4889fe         mov rsi, rdi
0x00003a63      ffd0           call rax
0x00003a65      4889df         mov rdi, rbx
0x00003a68      e833e7ffff     call sym.freev
0x00003a6d      488d3df12501.  lea rdi, [0x00016065]                   ; "+"
0x00003a74      e867e6ffff     call sym.nextarg                        ; /src:-810
0x00003a79      84c0           test al, al
0x00003a7b      7493           je 0x3a10
0x00003a7d      31ed           xor ebp, ebp
0x00003a7f      eba4           jmp 0x3a25
0x00003a81      0f1f80000000.  nop dword [rax]                         ; /src:-812
0x00003a88      488b05417521.  mov rax, qword [reloc.__gmpz_add]       ; [0x21afd0:8]=0
0x00003a8f      ebc7           jmp 0x3a58
0x00003a91      0f1f80000000.  nop dword [rax]
0x00003a98      5b             pop rbx
0x00003a99      4c89e8         mov rax, r13                            ; /src:-291
0x00003a9c      5d             pop rbp
0x00003a9d      415c           pop r12
0x00003a9f      415d           pop r13
0x00003aa1      415e           pop r14
0x00003aa3      c3             ret
0x00003aa4      488d35fb2501.  lea rsi, [0x000160a6]                   ; "non-integer argument"
0x00003aab      ba05000000     mov edx, 5
0x00003ab0      31ff           xor edi, edi
0x00003ab2      e8d9dfffff     call sym.imp.dcgettext
0x00003ab7      31f6           xor esi, esi
0x00003ab9      4889c2         mov rdx, rax                            ; /src:-728
0x00003abc      bf02000000     mov edi, 2
0x00003ac1      31c0           xor eax, eax
0x00003ac3      e838e2ffff     call sym.imp.error
0x00003ac8      0f1f84000000.  nop dword [rax + rax]
;-- eval2:
0x00003ad0      4157           push r15
0x00003ad2      4156           push r14
0x00003ad4      4189fe         mov r14d, edi
0x00003ad7      4155           push r13
0x00003ad9      4154           push r12
0x00003adb      440fb6ef       movzx r13d, dil
0x00003adf      55             push rbp
0x00003ae0      53             push rbx
0x00003ae1      4489ef         mov edi, r13d
0x00003ae4      4883ec08       sub rsp, 8                              ; /src:-266
0x00003ae8      e803ffffff     call sym.eval3
0x00003aed      4889c3         mov rbx, rax
0x00003af0      eb62           jmp 0x3b54
0x00003af2      660f1f440000   nop word [rax + rax]
0x00003af8      488d3dcf2501.  lea rdi, [0x000160ce]                   ; "<="
0x00003aff      41bc01000000   mov r12d, 1
0x00003b05      e8d6e5ffff     call sym.nextarg
0x00003b0a      84c0           test al, al
0x00003b0c      0f843e010000   je 0x3c50
0x00003b12      4489ef         mov edi, r13d
0x00003b15      4531ff         xor r15d, r15d                          ; /src:-246
0x00003b18      e8d3feffff     call sym.eval3
0x00003b1d      4584f6         test r14b, r14b
0x00003b20      4889c5         mov rbp, rax
0x00003b23      754b           jne 0x3b70
0x00003b25      4889df         mov rdi, rbx
0x00003b28      e873e6ffff     call sym.freev
0x00003b2d      4889ef         mov rdi, rbp                            ; /src:-247
0x00003b30      e86be6ffff     call sym.freev
0x00003b35      bf18000000     mov edi, 0x18
0x00003b3a      e881320000     call sym.xmalloc
0x00003b3f      488d7808       lea rdi, [rax + 8]
0x00003b43      c70000000000   mov dword [rax], 0
0x00003b49      4c89fe         mov rsi, r15
0x00003b4c      4889c3         mov rbx, rax
0x00003b4f      e86ce1ffff     call sym.imp.__gmpz_init_set_ui
0x00003b54      488d3d712501.  lea rdi, [0x000160cc]                   ; "<"
0x00003b5b      e880e5ffff     call sym.nextarg
0x00003b60      84c0           test al, al
0x00003b62      7494           je 0x3af8
0x00003b64      4531e4         xor r12d, r12d
0x00003b67      eba9           jmp 0x3b12
0x00003b69      0f1f80000000.  nop dword [rax]
0x00003b70      4889df         mov rdi, rbx
0x00003b73      e868e7ffff     call sym.tostring
0x00003b78      4889ef         mov rdi, rbp
0x00003b7b      e860e7ffff     call sym.tostring
0x00003b80      488b7b08       mov rdi, qword [rbx + 8]
0x00003b84      31d2           xor edx, edx
0x00003b86      803f2d         cmp byte [rdi], 0x2d
0x00003b89      0f94c2         sete dl
0x00003b8c      4801fa         add rdx, rdi
0x00003b8f      0fbe02         movsx eax, byte [rdx]
0x00003b92      eb13           jmp 0x3ba7
0x00003b94      0f1f4000       nop dword [rax]
0x00003b98      4883c201       add rdx, 1
0x00003b9c      0fbe02         movsx eax, byte [rdx]
0x00003b9f      84c0           test al, al
0x00003ba1      0f84c9000000   je 0x3c70
0x00003ba7      83e830         sub eax, 0x30
0x00003baa      83f809         cmp eax, 9
0x00003bad      76e9           jbe 0x3b98
0x00003baf      e83cdeffff     call sym.imp.__errno_location
0x00003bb4      c70000000000   mov dword [rax], 0
0x00003bba      488b7508       mov rsi, qword [rbp + 8]
0x00003bbe      488b7b08       mov rdi, qword [rbx + 8]
0x00003bc2      e8a9e0ffff     call sym.imp.strcoll
0x00003bc7      4183fc05       cmp r12d, 5
0x00003bcb      7763           ja 0x3c30
0x00003bcd      488d0d6c2501.  lea rcx, [0x00016140]
0x00003bd4      4a6314a1       movsxd rdx, dword [rcx + r12*4]
0x00003bd8      4801ca         add rdx, rcx
0x00003bdb      ffe2           jmp rdx
0x00003bdd      0f1f00         nop dword [rax]
0x00003be0      4863f0         movsxd rsi, eax
0x00003be3      48f7d6         not rsi
0x00003be6      48c1ee3f       shr rsi, 0x3f
0x00003bea      4989f7         mov r15, rsi
0x00003bed      e933ffffff     jmp 0x3b25
0x00003bf2      660f1f440000   nop word [rax + rax]
0x00003bf8      4531ff         xor r15d, r15d
0x00003bfb      85c0           test eax, eax
0x00003bfd      410f95c7       setne r15b
0x00003c01      e91fffffff     jmp 0x3b25
0x00003c06      662e0f1f8400.  nop word cs:[rax + rax]
0x00003c10      4531ff         xor r15d, r15d
0x00003c13      85c0           test eax, eax
0x00003c15      410f94c7       sete r15b
0x00003c19      e907ffffff     jmp 0x3b25
0x00003c1e      6690           nop
0x00003c20      4531ff         xor r15d, r15d
0x00003c23      85c0           test eax, eax
0x00003c25      410f9ec7       setle r15b
0x00003c29      e9f7feffff     jmp 0x3b25                              ; /src:-282
0x00003c2e      6690           nop
0x00003c30      4863f0         movsxd rsi, eax
0x00003c33      48c1ee3f       shr rsi, 0x3f
0x00003c37      4989f7         mov r15, rsi
0x00003c3a      e9e6feffff     jmp 0x3b25
0x00003c3f      90             nop
0x00003c40      4531ff         xor r15d, r15d
0x00003c43      85c0           test eax, eax
0x00003c45      410f9fc7       setg r15b
0x00003c49      e9d7feffff     jmp 0x3b25
0x00003c4e      6690           nop
0x00003c50      488d3d7e2401.  lea rdi, [0x000160d5]                   ; "="
0x00003c57      e884e4ffff     call sym.nextarg
0x00003c5c      84c0           test al, al
0x00003c5e      7450           je 0x3cb0
0x00003c60      41bc02000000   mov r12d, 2
0x00003c66      e9a7feffff     jmp 0x3b12
0x00003c6b      0f1f440000     nop dword [rax + rax]
0x00003c70      488b7508       mov rsi, qword [rbp + 8]
0x00003c74      31d2           xor edx, edx
0x00003c76      803e2d         cmp byte [rsi], 0x2d
0x00003c79      0f94c2         sete dl
0x00003c7c      4801f2         add rdx, rsi
0x00003c7f      0fbe02         movsx eax, byte [rdx]
0x00003c82      eb0f           jmp 0x3c93
0x00003c84      0f1f4000       nop dword [rax]
0x00003c88      4883c201       add rdx, 1                              ; /src:-218
0x00003c8c      0fbe02         movsx eax, byte [rdx]
0x00003c8f      84c0           test al, al
0x00003c91      740d           je 0x3ca0
0x00003c93      83e830         sub eax, 0x30
0x00003c96      83f809         cmp eax, 9
0x00003c99      76ed           jbe 0x3c88
0x00003c9b      e90fffffff     jmp 0x3baf
0x00003ca0      e84b280000     call sym.strintcmp
0x00003ca5      e91dffffff     jmp 0x3bc7
0x00003caa      660f1f440000   nop word [rax + rax]
0x00003cb0      488d3d1a2401.  lea rdi, [0x000160d1]                   ; "=="
0x00003cb7      e824e4ffff     call sym.nextarg
0x00003cbc      84c0           test al, al
0x00003cbe      75a0           jne 0x3c60
0x00003cc0      488d3d0d2401.  lea rdi, [0x000160d4]                   ; "!="
0x00003cc7      41bc03000000   mov r12d, 3
0x00003ccd      e80ee4ffff     call sym.nextarg                        ; /src:-812
0x00003cd2      84c0           test al, al
0x00003cd4      0f8538feffff   jne 0x3b12
0x00003cda      488d3df62301.  lea rdi, [0x000160d7]                   ; ">="
0x00003ce1      41bc04000000   mov r12d, 4
0x00003ce7      e8f4e3ffff     call sym.nextarg
0x00003cec      84c0           test al, al
0x00003cee      0f851efeffff   jne 0x3b12
0x00003cf4      488d3ddf2301.  lea rdi, [0x000160da]                   ; u">&|\u752f\u7273\u6c2f\u636f\u6c61\u732f\u6168\u6572\u6c2f\u636f\u6c61e\u2e38\u3133\u5000\u7561\u206c\u6745\u6567\u7472\u4a00\u6d61\u7365\u5920\u756f\u676e\u616dn\u694d\u656b\u5020\u7261\u656br\u2d2d\u6d00\u7369\u6973\u676e\u6f20\u6570\u6172\u646e"
0x00003cfb      e8e0e3ffff     call sym.nextarg                        ; /src:-205
0x00003d00      84c0           test al, al
0x00003d02      740b           je 0x3d0f
0x00003d04      41bc05000000   mov r12d, 5
0x00003d0a      e903feffff     jmp 0x3b12
0x00003d0f      4883c408       add rsp, 8
0x00003d13      4889d8         mov rax, rbx
0x00003d16      5b             pop rbx
0x00003d17      5d             pop rbp
0x00003d18      415c           pop r12
0x00003d1a      415d           pop r13
0x00003d1c      415e           pop r14                                 ; /src:-192
0x00003d1e      415f           pop r15
0x00003d20      c3             ret
0x00003d21      0f1f440000     nop dword [rax + rax]
0x00003d26      662e0f1f8400.  nop word cs:[rax + rax]
;-- eval1:
0x00003d30      4154           push r12
0x00003d32      55             push rbp
0x00003d33      4189fc         mov r12d, edi
0x00003d36      53             push rbx
0x00003d37      400fb6ff       movzx edi, dil
0x00003d3b      e890fdffff     call sym.eval2
0x00003d40      4889c3         mov rbx, rax
0x00003d43      488d3d922301.  lea rdi, [0x000160dc]                   ; u"&|\u752f\u7273\u6c2f\u636f\u6c61\u732f\u6168\u6572\u6c2f\u636f\u6c61e\u2e38\u3133\u5000\u7561\u206c\u6745\u6567\u7472\u4a00\u6d61\u7365\u5920\u756f\u676e\u616dn\u694d\u656b\u5020\u7261\u656br\u2d2d\u6d00\u7369\u6973\u676e\u6f20\u6570\u6172\u646e"
0x00003d4a      e891e3ffff     call sym.nextarg
0x00003d4f      84c0           test al, al                             ; /src:-187
0x00003d51      7473           je 0x3dc6
0x00003d53      31ff           xor edi, edi
0x00003d55      4584e4         test r12b, r12b
0x00003d58      740e           je 0x3d68
0x00003d5a      4889df         mov rdi, rbx                            ; /src:-186
0x00003d5d      e87ee4ffff     call sym.null
0x00003d62      83f001         xor eax, 1
0x00003d65      0fb6f8         movzx edi, al
0x00003d68      e863fdffff     call sym.eval2
0x00003d6d      4889df         mov rdi, rbx
0x00003d70      4889c5         mov rbp, rax
0x00003d73      e868e4ffff     call sym.null
0x00003d78      84c0           test al, al
0x00003d7a      750c           jne 0x3d88                              ; /src:-180
0x00003d7c      4889ef         mov rdi, rbp
0x00003d7f      e85ce4ffff     call sym.null
0x00003d84      84c0           test al, al
0x00003d86      7448           je 0x3dd0
0x00003d88      4889df         mov rdi, rbx
0x00003d8b      e810e4ffff     call sym.freev
0x00003d90      4889ef         mov rdi, rbp
0x00003d93      e808e4ffff     call sym.freev
0x00003d98      bf18000000     mov edi, 0x18                           ; /src:-812
0x00003d9d      e81e300000     call sym.xmalloc
0x00003da2      488d7808       lea rdi, [rax + 8]
0x00003da6      31f6           xor esi, esi
0x00003da8      c70000000000   mov dword [rax], 0
0x00003dae      4889c3         mov rbx, rax
0x00003db1      e80adfffff     call sym.imp.__gmpz_init_set_ui
0x00003db6      488d3d1f2301.  lea rdi, [0x000160dc]                   ; u"&|\u752f\u7273\u6c2f\u636f\u6c61\u732f\u6168\u6572\u6c2f\u636f\u6c61e\u2e38\u3133\u5000\u7561\u206c\u6745\u6567\u7472\u4a00\u6d61\u7365\u5920\u756f\u676e\u616dn\u694d\u656b\u5020\u7261\u656br\u2d2d\u6d00\u7369\u6973\u676e\u6f20\u6570\u6172\u646e"
0x00003dbd      e81ee3ffff     call sym.nextarg                        ; /src:-175
0x00003dc2      84c0           test al, al
0x00003dc4      758d           jne 0x3d53
0x00003dc6      4889d8         mov rax, rbx
0x00003dc9      5b             pop rbx
0x00003dca      5d             pop rbp
0x00003dcb      415c           pop r12
0x00003dcd      c3             ret
0x00003dce      6690           nop
0x00003dd0      4889ef         mov rdi, rbp
0x00003dd3      e8c8e3ffff     call sym.freev
0x00003dd8      e966ffffff     jmp 0x3d43
0x00003ddd      0f1f00         nop dword [rax]
;-- eval:
0x00003de0      4154           push r12
0x00003de2      55             push rbp
0x00003de3      4189fc         mov r12d, edi
0x00003de6      53             push rbx
0x00003de7      400fb6ff       movzx edi, dil
0x00003deb      e840ffffff     call sym.eval1
0x00003df0      4889c3         mov rbx, rax
0x00003df3      0f1f440000     nop dword [rax + rax]
0x00003df8      488d3ddf2201.  lea rdi, [0x000160de]                   ; "|"
0x00003dff      e8dce2ffff     call sym.nextarg
0x00003e04      84c0           test al, al
0x00003e06      7473           je 0x3e7b
0x00003e08      31ff           xor edi, edi
0x00003e0a      4584e4         test r12b, r12b
0x00003e0d      740b           je 0x3e1a
0x00003e0f      4889df         mov rdi, rbx
0x00003e12      e8c9e3ffff     call sym.null
0x00003e17      0fb6f8         movzx edi, al
0x00003e1a      e811ffffff     call sym.eval1
0x00003e1f      4889df         mov rdi, rbx
0x00003e22      4889c5         mov rbp, rax
0x00003e25      e8b6e3ffff     call sym.null
0x00003e2a      84c0           test al, al
0x00003e2c      745a           je 0x3e88
0x00003e2e      4889df         mov rdi, rbx
0x00003e31      4889eb         mov rbx, rbp
0x00003e34      e867e3ffff     call sym.freev
0x00003e39      4889ef         mov rdi, rbp
0x00003e3c      e89fe3ffff     call sym.null
0x00003e41      84c0           test al, al
0x00003e43      74b3           je 0x3df8
0x00003e45      4889ef         mov rdi, rbp
0x00003e48      e853e3ffff     call sym.freev
0x00003e4d      bf18000000     mov edi, 0x18
0x00003e52      e8692f0000     call sym.xmalloc
0x00003e57      488d7808       lea rdi, [rax + 8]
0x00003e5b      31f6           xor esi, esi
0x00003e5d      c70000000000   mov dword [rax], 0
0x00003e63      4889c3         mov rbx, rax
0x00003e66      e855deffff     call sym.imp.__gmpz_init_set_ui
0x00003e6b      488d3d6c2201.  lea rdi, [0x000160de]                   ; "|"
0x00003e72      e869e2ffff     call sym.nextarg
0x00003e77      84c0           test al, al
0x00003e79      758d           jne 0x3e08
0x00003e7b      4889d8         mov rax, rbx
0x00003e7e      5b             pop rbx
0x00003e7f      5d             pop rbp
0x00003e80      415c           pop r12
0x00003e82      c3             ret
0x00003e83      0f1f440000     nop dword [rax + rax]
0x00003e88      4889ef         mov rdi, rbp
0x00003e8b      e810e3ffff     call sym.freev
0x00003e90      e963ffffff     jmp 0x3df8
0x00003e95      662e0f1f8400.  nop word cs:[rax + rax]
0x00003e9f      90             nop
;-- close_stdout_set_file_name:
0x00003ea0      48893d397221.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x21b0e0:8]=0
0x00003ea7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00003ea8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00003eb0      40883d217221.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x21b0d8:1]=0
0x00003eb7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00003eb8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00003ec0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00003ec1      53             push rbx
0x00003ec2      4883ec08       sub rsp, 8
0x00003ec6      488b3dbb7121.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21b088:8]=0
0x00003ecd      e81e140100     call sym.close_stream
0x00003ed2      85c0           test eax, eax
0x00003ed4      7416           je 0x3eec
0x00003ed6      e815dbffff     call sym.imp.__errno_location
0x00003edb      803df6712100.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x21b0d8:1]=0
0x00003ee2      4889c3         mov rbx, rax
0x00003ee5      741c           je 0x3f03
0x00003ee7      833820         cmp dword [rax], 0x20
0x00003eea      7517           jne 0x3f03
0x00003eec      488b3dcd7121.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21b0c0:8]=0
0x00003ef3      e8f8130100     call sym.close_stream
0x00003ef8      85c0           test eax, eax
0x00003efa      7546           jne 0x3f42
0x00003efc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00003f00      5b             pop rbx
0x00003f01      5d             pop rbp
0x00003f02      c3             ret
0x00003f03      488d35692201.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x16173 ; "write error"
0x00003f0a      31ff           xor edi, edi
0x00003f0c      ba05000000     mov edx, 5
0x00003f11      e87adbffff     call sym.imp.dcgettext
0x00003f16      488b3dc37121.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x21b0e0:8]=0
0x00003f1d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003f20      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003f23      7428           je 0x3f4d
0x00003f25      e866230000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00003f2a      8b33           mov esi, dword [rbx]
0x00003f2c      488d154c2201.  lea rdx, str.s:__s                      ; 0x1617f ; "%s: %s"
0x00003f33      4889c1         mov rcx, rax
0x00003f36      4989e8         mov r8, rbp
0x00003f39      31ff           xor edi, edi
0x00003f3b      31c0           xor eax, eax
0x00003f3d      e8beddffff     call sym.imp.error
0x00003f42      8b3dc8702100   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x21b010:4]=1
0x00003f48      e8c3daffff     call sym.imp._exit
0x00003f4d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00003f4f      488d152d2201.  lea rdx, [0x00016183]                   ; "%s"
0x00003f56      4889c1         mov rcx, rax
0x00003f59      31ff           xor edi, edi
0x00003f5b      31c0           xor eax, eax
0x00003f5d      e89eddffff     call sym.imp.error
0x00003f62      ebde           jmp 0x3f42
0x00003f64      662e0f1f8400.  nop word cs:[rax + rax]
0x00003f6e      6690           nop
;-- parse_long_options:
0x00003f70      4155           push r13                                ; ../coreutils-8.31/lib/long-options.c:52
0x00003f72      4154           push r12
0x00003f74      4d89c5         mov r13, r8
0x00003f77      55             push rbp
0x00003f78      53             push rbx
0x00003f79      4889d5         mov rbp, rdx
0x00003f7c      4989cc         mov r12, rcx
0x00003f7f      4881ece80000.  sub rsp, 0xe8
0x00003f86      84c0           test al, al
0x00003f88      743a           je 0x3fc4
0x00003f8a      0f29442460     movaps xmmword [rsp + 0x60], xmm0
0x00003f8f      0f294c2470     movaps xmmword [rsp + 0x70], xmm1
0x00003f94      0f2994248000.  movaps xmmword [rsp + 0x80], xmm2
0x00003f9c      0f299c249000.  movaps xmmword [rsp + 0x90], xmm3
0x00003fa4      0f29a424a000.  movaps xmmword [rsp + 0xa0], xmm4
0x00003fac      0f29ac24b000.  movaps xmmword [rsp + 0xb0], xmm5
0x00003fb4      0f29b424c000.  movaps xmmword [rsp + 0xc0], xmm6
0x00003fbc      0f29bc24d000.  movaps xmmword [rsp + 0xd0], xmm7
0x00003fc4      64488b042528.  mov rax, qword fs:[0x28]
0x00003fcd      4889442428     mov qword [rsp + 0x28], rax
0x00003fd2      31c0           xor eax, eax
0x00003fd4      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/long-options.c:61
0x00003fd7      8b1dc3702100   mov ebx, dword [obj.opterr]             ; ../coreutils-8.31/lib/long-options.c:56 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x21b0a0:4]=0
0x00003fdd      c705b9702100.  mov dword [obj.opterr], 0               ; ../coreutils-8.31/lib/long-options.c:59 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x21b0a0:4]=0
0x00003fe7      7437           je 0x4020                               ; ../coreutils-8.31/lib/long-options.c:61
0x00003fe9      488b442428     mov rax, qword [rsp + 0x28]             ; ../coreutils-8.31/lib/long-options.c:90
0x00003fee      644833042528.  xor rax, qword fs:[0x28]
0x00003ff7      891da3702100   mov dword [obj.opterr], ebx             ; ../coreutils-8.31/lib/long-options.c:85 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x21b0a0:4]=0
0x00003ffd      c70589702100.  mov dword [obj.optind], 0               ; ../coreutils-8.31/lib/long-options.c:89 ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x21b090:4]=0
0x00004007      0f859d000000   jne 0x40aa                              ; ../coreutils-8.31/lib/long-options.c:90
0x0000400d      4881c4e80000.  add rsp, 0xe8
0x00004014      5b             pop rbx
0x00004015      5d             pop rbp
0x00004016      415c           pop r12
0x00004018      415d           pop r13
0x0000401a      c3             ret
0x0000401b      0f1f440000     nop dword [rax + rax]
0x00004020      488d0d996a21.  lea rcx, obj.long_options               ; ../coreutils-8.31/lib/long-options.c:62 ; 0x21aac0
0x00004027      488d15372001.  lea rdx, [0x00016065]                   ; "+"
0x0000402e      4531c0         xor r8d, r8d
0x00004031      4c894c2408     mov qword [rsp + 8], r9
0x00004036      e8a5daffff     call sym.imp.getopt_long
0x0000403b      83f8ff         cmp eax, 0xffffffff
0x0000403e      74a9           je 0x3fe9
0x00004040      83f868         cmp eax, 0x68                           ; ../coreutils-8.31/lib/long-options.c:64
0x00004043      4c8b4c2408     mov r9, qword [rsp + 8]
0x00004048      7456           je 0x40a0
0x0000404a      83f876         cmp eax, 0x76
0x0000404d      759a           jne 0x3fe9
0x0000404f      488d84241001.  lea rax, [rsp + 0x110]                  ; ../coreutils-8.31/lib/long-options.c:73
0x00004057      488b3d2a7021.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/long-options.c:74 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21b088:8]=0
0x0000405e      4c8d442410     lea r8, [rsp + 0x10]
0x00004063      4c89e9         mov rcx, r13
0x00004066      4c89e2         mov rdx, r12
0x00004069      4889ee         mov rsi, rbp
0x0000406c      4889442418     mov qword [rsp + 0x18], rax             ; ../coreutils-8.31/lib/long-options.c:73
0x00004071      488d442430     lea rax, [rsp + 0x30]
0x00004076      c74424103000.  mov dword [rsp + 0x10], 0x30            ; '0'
                                                                       ; [0x30:4]=0
0x0000407e      c74424143000.  mov dword [rsp + 0x14], 0x30            ; '0'
                                                                       ; [0x30:4]=0
0x00004086      4889442420     mov qword [rsp + 0x20], rax
0x0000408b      e8502b0000     call sym.version_etc_va                 ; ../coreutils-8.31/lib/long-options.c:74
0x00004090      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:75
0x00004092      e8c9dcffff     call sym.imp.exit
0x00004097      660f1f840000.  nop word [rax + rax]
0x000040a0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:67
0x000040a2      41ffd1         call r9
0x000040a5      e93fffffff     jmp 0x3fe9                              ; ../coreutils-8.31/lib/long-options.c:68
0x000040aa      e821daffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/long-options.c:90
0x000040af      90             nop
;-- parse_gnu_standard_options_only:
0x000040b0      4156           push r14                                ; ../coreutils-8.31/lib/long-options.c:106
0x000040b2      4155           push r13
0x000040b4      4d89c6         mov r14, r8
0x000040b7      4154           push r12
0x000040b9      55             push rbp
0x000040ba      4989d4         mov r12, rdx
0x000040bd      53             push rbx
0x000040be      4989cd         mov r13, rcx
0x000040c1      4881ecd00000.  sub rsp, 0xd0
0x000040c8      84c0           test al, al
0x000040ca      488bac240001.  mov rbp, qword [rsp + 0x100]
0x000040d2      7437           je 0x410b
0x000040d4      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x000040d9      0f294c2460     movaps xmmword [rsp + 0x60], xmm1
0x000040de      0f29542470     movaps xmmword [rsp + 0x70], xmm2
0x000040e3      0f299c248000.  movaps xmmword [rsp + 0x80], xmm3
0x000040eb      0f29a4249000.  movaps xmmword [rsp + 0x90], xmm4
0x000040f3      0f29ac24a000.  movaps xmmword [rsp + 0xa0], xmm5
0x000040fb      0f29b424b000.  movaps xmmword [rsp + 0xb0], xmm6
0x00004103      0f29bc24c000.  movaps xmmword [rsp + 0xc0], xmm7
0x0000410b      64488b042528.  mov rax, qword fs:[0x28]
0x00004114      4889442418     mov qword [rsp + 0x18], rax
0x00004119      31c0           xor eax, eax
0x0000411b      488d153f2601.  lea rdx, [0x00016761]                   ; ../coreutils-8.31/lib/long-options.c:113
0x00004122      488d053c1f01.  lea rax, [0x00016065]                   ; "+"
0x00004129      4584c9         test r9b, r9b
0x0000412c      488d0d8d6921.  lea rcx, obj.long_options               ; ../coreutils-8.31/lib/long-options.c:115 ; 0x21aac0
0x00004133      480f44d0       cmove rdx, rax                          ; ../coreutils-8.31/lib/long-options.c:113
0x00004137      4531c0         xor r8d, r8d                            ; ../coreutils-8.31/lib/long-options.c:115
0x0000413a      8b1d606f2100   mov ebx, dword [obj.opterr]             ; ../coreutils-8.31/lib/long-options.c:108 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x21b0a0:4]=0
0x00004140      c705566f2100.  mov dword [obj.opterr], 1               ; ../coreutils-8.31/lib/long-options.c:111 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x21b0a0:4]=0
0x0000414a      e891d9ffff     call sym.imp.getopt_long                ; ../coreutils-8.31/lib/long-options.c:115
0x0000414f      83f8ff         cmp eax, 0xffffffff
0x00004152      7464           je 0x41b8
0x00004154      83f868         cmp eax, 0x68                           ; ../coreutils-8.31/lib/long-options.c:117
0x00004157      0f8483000000   je 0x41e0
0x0000415d      83f876         cmp eax, 0x76
0x00004160      754e           jne 0x41b0
0x00004162      488d84240801.  lea rax, [rsp + 0x108]                  ; ../coreutils-8.31/lib/long-options.c:126
0x0000416a      488b3d176f21.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/long-options.c:127 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21b088:8]=0
0x00004171      4989e0         mov r8, rsp
0x00004174      4c89f1         mov rcx, r14
0x00004177      4c89ea         mov rdx, r13
0x0000417a      4c89e6         mov rsi, r12
0x0000417d      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/long-options.c:126
0x00004182      488d442420     lea rax, [rsp + 0x20]
0x00004187      c70424300000.  mov dword [rsp], 0x30                   ; '0'
                                                                       ; [0x30:4]=0
0x0000418e      c74424043000.  mov dword [rsp + 4], 0x30               ; '0'
                                                                       ; [0x30:4]=0
0x00004196      4889442410     mov qword [rsp + 0x10], rax
0x0000419b      e8402a0000     call sym.version_etc_va                 ; ../coreutils-8.31/lib/long-options.c:127
0x000041a0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:128
0x000041a2      e8b9dbffff     call sym.imp.exit
0x000041a7      660f1f840000.  nop word [rax + rax]
0x000041b0      8b3d5a6e2100   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/long-options.c:132 ; [0x21b010:4]=1
0x000041b6      ffd5           call rbp
0x000041b8      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/long-options.c:139
0x000041bd      644833042528.  xor rax, qword fs:[0x28]
0x000041c6      891dd46e2100   mov dword [obj.opterr], ebx             ; ../coreutils-8.31/lib/long-options.c:138 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x21b0a0:4]=0
0x000041cc      7518           jne 0x41e6                              ; ../coreutils-8.31/lib/long-options.c:139
0x000041ce      4881c4d00000.  add rsp, 0xd0
0x000041d5      5b             pop rbx
0x000041d6      5d             pop rbp
0x000041d7      415c           pop r12
0x000041d9      415d           pop r13
0x000041db      415e           pop r14
0x000041dd      c3             ret
0x000041de      6690           nop
0x000041e0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:120
0x000041e2      ffd5           call rbp
0x000041e4      ebd2           jmp 0x41b8                              ; ../coreutils-8.31/lib/long-options.c:121
0x000041e6      e8e5d8ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/long-options.c:139
0x000041eb      0f1f440000     nop dword [rax + rax]
;-- mb_width_aux:
0x000041f0      53             push rbx                                ; ../coreutils-8.31/lib/mbchar.h:248
0x000041f1      89fb           mov ebx, edi
0x000041f3      e808daffff     call sym.imp.wcwidth                    ; ../coreutils-8.31/lib/mbchar.h:249
0x000041f8      85c0           test eax, eax                           ; ../coreutils-8.31/lib/mbchar.h:252
0x000041fa      7804           js 0x4200
0x000041fc      5b             pop rbx                                 ; ../coreutils-8.31/lib/mbchar.h:253
0x000041fd      c3             ret
0x000041fe      6690           nop
0x00004200      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/mbchar.h:252
0x00004202      e839d8ffff     call sym.imp.iswcntrl
0x00004207      85c0           test eax, eax
0x00004209      0f94c0         sete al
0x0000420c      0fb6c0         movzx eax, al
0x0000420f      5b             pop rbx                                 ; ../coreutils-8.31/lib/mbchar.h:253
0x00004210      c3             ret
0x00004211      0f1f440000     nop dword [rax + rax]
0x00004216      662e0f1f8400.  nop word cs:[rax + rax]
;-- mb_copy:
0x00004220      55             push rbp                                ; ../coreutils-8.31/lib/mbchar.h:269
0x00004221      53             push rbx
0x00004222      4889f3         mov rbx, rsi
0x00004225      488d4318       lea rax, [rbx + 0x18]                   ; ../coreutils-8.31/lib/mbchar.h:270
0x00004229      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/mbchar.h:269
0x0000422c      4883ec08       sub rsp, 8
0x00004230      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/mbchar.h:270
0x00004233      488b5308       mov rdx, qword [rbx + 8]
0x00004237      4839c6         cmp rsi, rax
0x0000423a      7424           je 0x4260
0x0000423c      488937         mov qword [rdi], rsi                    ; ../coreutils-8.31/lib/mbchar.h:276
0x0000423f      0fb64310       movzx eax, byte [rbx + 0x10]            ; ../coreutils-8.31/lib/mbchar.h:278
0x00004243      48895508       mov qword [rbp + 8], rdx                ; ../coreutils-8.31/lib/mbchar.h:277
0x00004247      84c0           test al, al                             ; ../coreutils-8.31/lib/mbchar.h:278
0x00004249      884510         mov byte [rbp + 0x10], al
0x0000424c      7406           je 0x4254
0x0000424e      8b4314         mov eax, dword [rbx + 0x14]             ; ../coreutils-8.31/lib/mbchar.h:279
0x00004251      894514         mov dword [rbp + 0x14], eax
0x00004254      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/mbchar.h:280
0x00004258      5b             pop rbx
0x00004259      5d             pop rbp
0x0000425a      c3             ret
0x0000425b      0f1f440000     nop dword [rax + rax]
0x00004260      488d4f18       lea rcx, [rdi + 0x18]                   ; ../coreutils-8.31/lib/mbchar.h:272
0x00004264      4889cf         mov rdi, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00004267      e874d9ffff     call sym.imp.memcpy
0x0000426c      488b5308       mov rdx, qword [rbx + 8]
0x00004270      48894500       mov qword [rbp], rax                    ; ../coreutils-8.31/lib/mbchar.h:273
0x00004274      ebc9           jmp 0x423f
0x00004276      662e0f1f8400.  nop word cs:[rax + rax]
;-- is_basic:
0x00004280      89f8           mov eax, edi                            ; ../coreutils-8.31/lib/mbchar.h:317
0x00004282      488d15171f01.  lea rdx, obj.is_basic_table             ; 0x161a0
0x00004289      89f9           mov ecx, edi
0x0000428b      c0e805         shr al, 5
0x0000428e      83e11f         and ecx, 0x1f
0x00004291      83e007         and eax, 7
0x00004294      8b0482         mov eax, dword [rdx + rax*4]
0x00004297      d3e8           shr eax, cl
0x00004299      83e001         and eax, 1                              ; ../coreutils-8.31/lib/mbchar.h:319
0x0000429c      c3             ret                                     ; ../coreutils-8.31/lib/mbchar.h:320
0x0000429d      0f1f00         nop dword [rax]
;-- mbschr:
0x000042a0      4156           push r14                                ; ../coreutils-8.31/lib/mbschr.c:29
0x000042a2      4155           push r13
0x000042a4      4154           push r12
0x000042a6      55             push rbp
0x000042a7      4989fc         mov r12, rdi
0x000042aa      53             push rbx
0x000042ab      89f3           mov ebx, esi
0x000042ad      4883ec50       sub rsp, 0x50
0x000042b1      64488b042528.  mov rax, qword fs:[0x28]
0x000042ba      4889442448     mov qword [rsp + 0x48], rax
0x000042bf      31c0           xor eax, eax
0x000042c1      e8dad7ffff     call sym.imp.__ctype_get_mb_cur_max     ; ../coreutils-8.31/lib/mbschr.c:30
0x000042c6      4883f801       cmp rax, 1
0x000042ca      7607           jbe 0x42d3
0x000042cc      80fb2f         cmp bl, 0x2f                            ; ../coreutils-8.31/lib/mbschr.c:34
0x000042cf      89dd           mov ebp, ebx
0x000042d1      772d           ja 0x4300
0x000042d3      488b442448     mov rax, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/mbschr.c:51
0x000042d8      644833042528.  xor rax, qword fs:[0x28]
0x000042e1      0f85fc010000   jne 0x44e3
0x000042e7      4883c450       add rsp, 0x50                           ; ../coreutils-8.31/lib/mbschr.c:52
0x000042eb      89de           mov esi, ebx                            ; ../coreutils-8.31/lib/mbschr.c:51
0x000042ed      4c89e7         mov rdi, r12
0x000042f0      5b             pop rbx                                 ; ../coreutils-8.31/lib/mbschr.c:52
0x000042f1      5d             pop rbp
0x000042f2      415c           pop r12
0x000042f4      415d           pop r13
0x000042f6      415e           pop r14
0x000042f8      e903d8ffff     jmp sym.imp.strchr                      ; ../coreutils-8.31/lib/mbschr.c:51
0x000042fd      0f1f00         nop dword [rax]
0x00004300      4889e3         mov rbx, rsp
0x00004303      4c89642410     mov qword [rsp + 0x10], r12
0x00004308      c6042400       mov byte [rsp], 0
0x0000430c      48c744240400.  mov qword [rsp + 4], 0
0x00004315      c644240c00     mov byte [rsp + 0xc], 0
0x0000431a      4c8d257f1e01.  lea r12, obj.is_basic_table             ; 0x161a0
0x00004321      4c8d6b04       lea r13, [rbx + 4]
0x00004325      eb67           jmp 0x438e
0x00004327      660f1f840000.  nop word [rax + rax]
0x00004330      488b442410     mov rax, qword [rsp + 0x10]
0x00004335      0fb608         movzx ecx, byte [rax]
0x00004338      89ca           mov edx, ecx
0x0000433a      c0ea05         shr dl, 5
0x0000433d      83e207         and edx, 7
0x00004340      418b1494       mov edx, dword [r12 + rdx*4]
0x00004344      0fa3ca         bt edx, ecx
0x00004347      0f83fb000000   jae 0x4448
0x0000434d      48c744241801.  mov qword [rsp + 0x18], 1
0x00004356      0fbe10         movsx edx, byte [rax]                   ; ../coreutils-8.31/lib/mbuiter.h:61
0x00004359      c644242001     mov byte [rsp + 0x20], 1
0x0000435e      c644240c01     mov byte [rsp + 0xc], 1
0x00004363      85d2           test edx, edx
0x00004365      89542424       mov dword [rsp + 0x24], edx             ; ../coreutils-8.31/lib/mbuiter.h:-214
0x00004369      0f8451010000   je 0x44c0
0x0000436f      ba01000000     mov edx, 1
0x00004374      4989c6         mov r14, rax
0x00004377      413a2e         cmp bpl, byte [r14]
0x0000437a      0f8443010000   je 0x44c3
0x00004380      498d0416       lea rax, [r14 + rdx]
0x00004384      c644240c00     mov byte [rsp + 0xc], 0
0x00004389      4889442410     mov qword [rsp + 0x10], rax
0x0000438e      803c2400       cmp byte [rsp], 0
0x00004392      749c           je 0x4330
0x00004394      e807d7ffff     call sym.imp.__ctype_get_mb_cur_max
0x00004399      4c8b742410     mov r14, qword [rsp + 0x10]
0x0000439e      4889c6         mov rsi, rax
0x000043a1      4c89f7         mov rdi, r14
0x000043a4      e807210000     call sym.strnlen1                       ; ../coreutils-8.31/lib/mbuiter.h:-245
0x000043a9      488d4b04       lea rcx, [rbx + 4]
0x000043ad      488d7b24       lea rdi, [rbx + 0x24]
0x000043b1      4889c2         mov rdx, rax
0x000043b4      4c89f6         mov rsi, r14
0x000043b7      e8942c0000     call sym.rpl_mbrtowc
0x000043bc      4883f8ff       cmp rax, 0xffffffffffffffff
0x000043c0      4889442418     mov qword [rsp + 0x18], rax
0x000043c5      0f849d000000   je 0x4468
0x000043cb      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000043cf      0f84bb000000   je 0x4490
0x000043d5      4885c0         test rax, rax
0x000043d8      7524           jne 0x43fe
0x000043da      4c8b742410     mov r14, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/mbuiter.h:-222
0x000043df      48c744241801.  mov qword [rsp + 0x18], 1
0x000043e8      41803e00       cmp byte [r14], 0
0x000043ec      0f8515010000   jne 0x4507
0x000043f2      8b542424       mov edx, dword [rsp + 0x24]
0x000043f6      85d2           test edx, edx
0x000043f8      0f8528010000   jne 0x4526
0x000043fe      488d7b04       lea rdi, [rbx + 4]
0x00004402      c644242001     mov byte [rsp + 0x20], 1
0x00004407      e884d9ffff     call sym.imp.mbsinit
0x0000440c      85c0           test eax, eax
0x0000440e      0f849c000000   je 0x44b0
0x00004414      c6042400       mov byte [rsp], 0
0x00004418      c644240c01     mov byte [rsp + 0xc], 1
0x0000441d      8b442424       mov eax, dword [rsp + 0x24]
0x00004421      85c0           test eax, eax
0x00004423      0f8497000000   je 0x44c0
0x00004429      4c8b742410     mov r14, qword [rsp + 0x10]
0x0000442e      488b542418     mov rdx, qword [rsp + 0x18]
0x00004433      4883fa01       cmp rdx, 1
0x00004437      0f8543ffffff   jne 0x4380
0x0000443d      e935ffffff     jmp 0x4377
0x00004442      660f1f440000   nop word [rax + rax]
0x00004448      4c89ef         mov rdi, r13
0x0000444b      e840d9ffff     call sym.imp.mbsinit
0x00004450      85c0           test eax, eax
0x00004452      0f8490000000   je 0x44e8
0x00004458      c6042401       mov byte [rsp], 1
0x0000445c      e933ffffff     jmp 0x4394
0x00004461      0f1f80000000.  nop dword [rax]
0x00004468      48c744241801.  mov qword [rsp + 0x18], 1
0x00004471      c644242000     mov byte [rsp + 0x20], 0
0x00004476      ba01000000     mov edx, 1
0x0000447b      c644240c01     mov byte [rsp + 0xc], 1
0x00004480      4c8b742410     mov r14, qword [rsp + 0x10]
0x00004485      e9edfeffff     jmp 0x4377
0x0000448a      660f1f440000   nop word [rax + rax]
0x00004490      4c8b742410     mov r14, qword [rsp + 0x10]
0x00004495      4c89f7         mov rdi, r14
0x00004498      e813d6ffff     call sym.imp.strlen
0x0000449d      c644242000     mov byte [rsp + 0x20], 0
0x000044a2      4889442418     mov qword [rsp + 0x18], rax
0x000044a7      c644240c01     mov byte [rsp + 0xc], 1
0x000044ac      eb80           jmp 0x442e
0x000044ae      6690           nop
0x000044b0      c644240c01     mov byte [rsp + 0xc], 1                 ; ../coreutils-8.31/lib/mbuiter.h:-479
0x000044b5      e963ffffff     jmp 0x441d
0x000044ba      660f1f440000   nop word [rax + rax]
0x000044c0      4531f6         xor r14d, r14d
0x000044c3      488b742448     mov rsi, qword [rsp + 0x48]
0x000044c8      644833342528.  xor rsi, qword fs:[0x28]
0x000044d1      4c89f0         mov rax, r14
0x000044d4      750d           jne 0x44e3
0x000044d6      4883c450       add rsp, 0x50
0x000044da      5b             pop rbx
0x000044db      5d             pop rbp
0x000044dc      415c           pop r12
0x000044de      415d           pop r13
0x000044e0      415e           pop r14
0x000044e2      c3             ret
0x000044e3      e8e8d5ffff     call sym.imp.__stack_chk_fail
0x000044e8      488d0dd11c01.  lea rcx, obj.__PRETTY_FUNCTION__.5021   ; 0x161c0 ; "mbuiter_multi_next"
0x000044ef      488d351a1101.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x15610 ; "../coreutils-8.31/lib/mbuiter.h"
0x000044f6      488d3d3a1b01.  lea rdi, str.mbsinit___iter__state      ; 0x16037 ; "mbsinit (&iter->state)"
0x000044fd      ba96000000     mov edx, 0x96
0x00004502      e849d6ffff     call sym.imp.__assert_fail
0x00004507      488d0db21c01.  lea rcx, obj.__PRETTY_FUNCTION__.5021   ; 0x161c0 ; "mbuiter_multi_next"
0x0000450e      488d35fb1001.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x15610 ; "../coreutils-8.31/lib/mbuiter.h"
0x00004515      488d3d321b01.  lea rdi, str.iter__cur.ptr_______0      ; 0x1604e ; "*iter->cur.ptr == '\0'"
0x0000451c      bab2000000     mov edx, 0xb2
0x00004521      e82ad6ffff     call sym.imp.__assert_fail
0x00004526      488d0d931c01.  lea rcx, obj.__PRETTY_FUNCTION__.5021   ; 0x161c0 ; "mbuiter_multi_next"
0x0000452d      488d35dc1001.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x15610 ; "../coreutils-8.31/lib/mbuiter.h"
0x00004534      488d3d421a01.  lea rdi, str.iter__cur.wc____0          ; 0x15f7d ; "iter->cur.wc == 0"
0x0000453b      bab3000000     mov edx, 0xb3
0x00004540      e80bd6ffff     call sym.imp.__assert_fail
0x00004545      662e0f1f8400.  nop word cs:[rax + rax]
0x0000454f      90             nop
;-- mbslen:
0x00004550      4156           push r14                                ; ../coreutils-8.31/lib/mbslen.c:30
0x00004552      4155           push r13
0x00004554      4154           push r12
0x00004556      55             push rbp
0x00004557      53             push rbx
0x00004558      4889fb         mov rbx, rdi
0x0000455b      4883ec50       sub rsp, 0x50
0x0000455f      64488b042528.  mov rax, qword fs:[0x28]
0x00004568      4889442448     mov qword [rsp + 0x48], rax
0x0000456d      31c0           xor eax, eax
0x0000456f      e82cd5ffff     call sym.imp.__ctype_get_mb_cur_max     ; ../coreutils-8.31/lib/mbslen.c:31
0x00004574      4883f801       cmp rax, 1
0x00004578      7736           ja 0x45b0
0x0000457a      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbslen.c:43
0x0000457d      e82ed5ffff     call sym.imp.strlen
0x00004582      4889c3         mov rbx, rax
0x00004585      488b742448     mov rsi, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/mbslen.c:44
0x0000458a      644833342528.  xor rsi, qword fs:[0x28]
0x00004593      4889d8         mov rax, rbx
0x00004596      0f859d010000   jne 0x4739
0x0000459c      4883c450       add rsp, 0x50
0x000045a0      5b             pop rbx
0x000045a1      5d             pop rbp                                 ; ../coreutils-8.31/lib/mbchar.h:190
0x000045a2      415c           pop r12
0x000045a4      415d           pop r13
0x000045a6      415e           pop r14
0x000045a8      c3             ret                                     ; ../coreutils-8.31/lib/mbuiter.h:22
0x000045a9      0f1f80000000.  nop dword [rax]
0x000045b0      4889e5         mov rbp, rsp
0x000045b3      48895c2410     mov qword [rsp + 0x10], rbx
0x000045b8      c6042400       mov byte [rsp], 0
0x000045bc      48c744240400.  mov qword [rsp + 4], 0                  ; ../coreutils-8.31/lib/mbuiter.h:-110
0x000045c5      c644240c00     mov byte [rsp + 0xc], 0
0x000045ca      31db           xor ebx, ebx
0x000045cc      4c8d25cd1b01.  lea r12, obj.is_basic_table             ; 0x161a0
0x000045d3      4c8d6d04       lea r13, [rbp + 4]
0x000045d7      eb5d           jmp 0x4636
0x000045d9      0f1f80000000.  nop dword [rax]
0x000045e0      488b4c2410     mov rcx, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/mbuiter.h:-282
0x000045e5      0fb611         movzx edx, byte [rcx]                   ; ../coreutils-8.31/lib/mbuiter.h:-239
0x000045e8      89d0           mov eax, edx
0x000045ea      c0e805         shr al, 5                               ; ../coreutils-8.31/lib/mbuiter.h:-283
0x000045ed      83e007         and eax, 7
0x000045f0      418b0484       mov eax, dword [r12 + rax*4]
0x000045f4      0fa3d0         bt eax, edx
0x000045f7      0f83c3000000   jae 0x46c0
0x000045fd      48c744241801.  mov qword [rsp + 0x18], 1
0x00004606      0fbe01         movsx eax, byte [rcx]
0x00004609      c644242001     mov byte [rsp + 0x20], 1
0x0000460e      c644240c01     mov byte [rsp + 0xc], 1                 ; ../coreutils-8.31/lib/mbuiter.h:-424
0x00004613      89442424       mov dword [rsp + 0x24], eax
0x00004617      8b442424       mov eax, dword [rsp + 0x24]
0x0000461b      85c0           test eax, eax
0x0000461d      0f8462ffffff   je 0x4585
0x00004623      488b442418     mov rax, qword [rsp + 0x18]
0x00004628      4801442410     add qword [rsp + 0x10], rax
0x0000462d      4883c301       add rbx, 1
0x00004631      c644240c00     mov byte [rsp + 0xc], 0
0x00004636      803c2400       cmp byte [rsp], 0
0x0000463a      74a4           je 0x45e0
0x0000463c      e85fd4ffff     call sym.imp.__ctype_get_mb_cur_max
0x00004641      4c8b742410     mov r14, qword [rsp + 0x10]
0x00004646      4889c6         mov rsi, rax
0x00004649      4c89f7         mov rdi, r14
0x0000464c      e85f1e0000     call sym.strnlen1
0x00004651      488d4d04       lea rcx, [rbp + 4]
0x00004655      488d7d24       lea rdi, [rbp + 0x24]
0x00004659      4889c2         mov rdx, rax
0x0000465c      4c89f6         mov rsi, r14
0x0000465f      e8ec290000     call sym.rpl_mbrtowc
0x00004664      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004668      4889442418     mov qword [rsp + 0x18], rax
0x0000466d      7469           je 0x46d8
0x0000466f      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00004673      747b           je 0x46f0
0x00004675      4885c0         test rax, rax
0x00004678      7523           jne 0x469d
0x0000467a      488b442410     mov rax, qword [rsp + 0x10]
0x0000467f      48c744241801.  mov qword [rsp + 0x18], 1
0x00004688      803800         cmp byte [rax], 0
0x0000468b      0f85ad000000   jne 0x473e
0x00004691      8b542424       mov edx, dword [rsp + 0x24]
0x00004695      85d2           test edx, edx
0x00004697      0f85c0000000   jne 0x475d
0x0000469d      488d7d04       lea rdi, [rbp + 4]
0x000046a1      c644242001     mov byte [rsp + 0x20], 1
0x000046a6      e8e5d6ffff     call sym.imp.mbsinit
0x000046ab      85c0           test eax, eax
0x000046ad      7461           je 0x4710
0x000046af      c6042400       mov byte [rsp], 0
0x000046b3      c644240c01     mov byte [rsp + 0xc], 1
0x000046b8      e95affffff     jmp 0x4617
0x000046bd      0f1f00         nop dword [rax]
0x000046c0      4c89ef         mov rdi, r13
0x000046c3      e8c8d6ffff     call sym.imp.mbsinit
0x000046c8      85c0           test eax, eax
0x000046ca      744e           je 0x471a
0x000046cc      c6042401       mov byte [rsp], 1
0x000046d0      e967ffffff     jmp 0x463c
0x000046d5      0f1f00         nop dword [rax]
0x000046d8      48c744241801.  mov qword [rsp + 0x18], 1
0x000046e1      c644242000     mov byte [rsp + 0x20], 0
0x000046e6      e938ffffff     jmp 0x4623
0x000046eb      0f1f440000     nop dword [rax + rax]
0x000046f0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000046f5      e8b6d3ffff     call sym.imp.strlen
0x000046fa      c644242000     mov byte [rsp + 0x20], 0
0x000046ff      4889442418     mov qword [rsp + 0x18], rax
0x00004704      e91affffff     jmp 0x4623
0x00004709      0f1f80000000.  nop dword [rax]
0x00004710      c644240c01     mov byte [rsp + 0xc], 1
0x00004715      e9fdfeffff     jmp 0x4617
0x0000471a      488d0dbf1a01.  lea rcx, obj.__PRETTY_FUNCTION__.5021_1 ; 0x161e0 ; "mbuiter_multi_next"
0x00004721      488d35e80e01.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x15610 ; "../coreutils-8.31/lib/mbuiter.h"
0x00004728      488d3d081901.  lea rdi, str.mbsinit___iter__state      ; 0x16037 ; "mbsinit (&iter->state)"
0x0000472f      ba96000000     mov edx, 0x96
0x00004734      e817d4ffff     call sym.imp.__assert_fail
0x00004739      e892d3ffff     call sym.imp.__stack_chk_fail
0x0000473e      488d0d9b1a01.  lea rcx, obj.__PRETTY_FUNCTION__.5021_1 ; 0x161e0 ; "mbuiter_multi_next"
0x00004745      488d35c40e01.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x15610 ; "../coreutils-8.31/lib/mbuiter.h"
0x0000474c      488d3dfb1801.  lea rdi, str.iter__cur.ptr_______0      ; 0x1604e ; "*iter->cur.ptr == '\0'"
0x00004753      bab2000000     mov edx, 0xb2
0x00004758      e8f3d3ffff     call sym.imp.__assert_fail
0x0000475d      488d0d7c1a01.  lea rcx, obj.__PRETTY_FUNCTION__.5021_1 ; 0x161e0 ; "mbuiter_multi_next"
0x00004764      488d35a50e01.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x15610 ; "../coreutils-8.31/lib/mbuiter.h"
0x0000476b      488d3d0b1801.  lea rdi, str.iter__cur.wc____0          ; 0x15f7d ; "iter->cur.wc == 0"
0x00004772      bab3000000     mov edx, 0xb3
0x00004777      e8d4d3ffff     call sym.imp.__assert_fail
0x0000477c      0f1f4000       nop dword [rax]
;-- set_program_name:
0x00004780      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00004783      53             push rbx
0x00004784      7477           je 0x47fd                               ; ../coreutils-8.31/lib/progname.c:51
0x00004786      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000478b      4889fb         mov rbx, rdi
0x0000478e      e88dd3ffff     call sym.imp.strrchr
0x00004793      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00004796      7455           je 0x47ed
0x00004798      4c8d4001       lea r8, [rax + 1]
0x0000479c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000479f      4829da         sub rdx, rbx
0x000047a2      4883fa06       cmp rdx, 6
0x000047a6      7e45           jle 0x47ed
0x000047a8      488d70fa       lea rsi, [rax - 6]
0x000047ac      488d3d7d1a01.  lea rdi, str..libs                      ; 0x16230 ; "/.libs/"
0x000047b3      b907000000     mov ecx, 7
0x000047b8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000047ba      0f97c2         seta dl
0x000047bd      80da00         sbb dl, 0
0x000047c0      84d2           test dl, dl
0x000047c2      7529           jne 0x47ed
0x000047c4      488d3d6d1a01.  lea rdi, [0x00016238]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x000047cb      b903000000     mov ecx, 3
0x000047d0      4c89c6         mov rsi, r8
0x000047d3      4c89c3         mov rbx, r8
0x000047d6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000047d8      0f97c2         seta dl
0x000047db      80da00         sbb dl, 0
0x000047de      84d2           test dl, dl
0x000047e0      750b           jne 0x47ed
0x000047e2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x000047e6      48891d936821.  mov qword [loc._edata], rbx             ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x21b080:8]=0
0x000047ed      48891df46821.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x21b0e8:8]=0
0x000047f4      48891d9d6821.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x21b098:8]=0
0x000047fb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000047fc      c3             ret
0x000047fd      488b0dbc6821.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21b0c0:8]=0
0x00004804      488d3ded1901.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x161f8 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000480b      ba37000000     mov edx, 0x37                           ; '7'
0x00004810      be01000000     mov esi, 1
0x00004815      e856d5ffff     call sym.imp.fwrite
0x0000481a      e8c1d1ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000481f      90             nop
;-- gettext_quote.part.1:
0x00004820      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00004821      53             push rbx
0x00004822      4889fd         mov rbp, rdi
0x00004825      89f3           mov ebx, esi
0x00004827      4883ec08       sub rsp, 8
0x0000482b      e8a00b0100     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00004830      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00004833      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004836      80fa55         cmp dl, 0x55
0x00004839      7475           je 0x48b0
0x0000483b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000483e      7420           je 0x4860
0x00004840      488d05041a01.  lea rax, str.l______l                   ; 0x1624b ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004847      488d15501801.  lea rdx, [0x0001609e]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"':*%\u6f6e\u2d6e\u6e69\u6574\u6567\u2072\u7261\u7567\u656d\u746e\u6400\u7669\u7369\u6f69\u206e\u7962\u7a20\u7265o<\u3d3c\u3d00=\u3d21\u3e00=>&|\u752f\u7273\u6c2f\u636f\u6c61\u732f\u6168\u6572\u6c2f\u636f\u6c61e\u2e38\u3133\u5000\u7561\u206c\u6745\u6567\u7472\u4a00\u6d61\u7365\u5920\u756f\u676e\u616dn\u694d\u656b"
0x0000484e      83fb09         cmp ebx, 9
0x00004851      480f45c2       cmovne rax, rdx
0x00004855      4883c408       add rsp, 8
0x00004859      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000485a      5d             pop rbp
0x0000485b      c3             ret
0x0000485c      0f1f4000       nop dword [rax]
0x00004860      0fb65001       movzx edx, byte [rax + 1]
0x00004864      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004867      80fa42         cmp dl, 0x42
0x0000486a      75d4           jne 0x4840
0x0000486c      80780231       cmp byte [rax + 2], 0x31
0x00004870      75ce           jne 0x4840
0x00004872      80780338       cmp byte [rax + 3], 0x38
0x00004876      75c8           jne 0x4840
0x00004878      80780430       cmp byte [rax + 4], 0x30
0x0000487c      75c2           jne 0x4840
0x0000487e      80780533       cmp byte [rax + 5], 0x33
0x00004882      75bc           jne 0x4840
0x00004884      80780630       cmp byte [rax + 6], 0x30
0x00004888      75b6           jne 0x4840
0x0000488a      80780700       cmp byte [rax + 7], 0
0x0000488e      75b0           jne 0x4840
0x00004890      807d0060       cmp byte [rbp], 0x60
0x00004894      488d05a91901.  lea rax, [0x00016244]
0x0000489b      488d15a61901.  lea rdx, [0x00016248]
0x000048a2      480f45c2       cmovne rax, rdx
0x000048a6      4883c408       add rsp, 8
0x000048aa      5b             pop rbx
0x000048ab      5d             pop rbp
0x000048ac      c3             ret
0x000048ad      0f1f00         nop dword [rax]
0x000048b0      0fb65001       movzx edx, byte [rax + 1]
0x000048b4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000048b7      80fa54         cmp dl, 0x54
0x000048ba      7584           jne 0x4840
0x000048bc      0fb65002       movzx edx, byte [rax + 2]
0x000048c0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000048c3      80fa46         cmp dl, 0x46
0x000048c6      0f8574ffffff   jne 0x4840
0x000048cc      8078032d       cmp byte [rax + 3], 0x2d
0x000048d0      0f856affffff   jne 0x4840
0x000048d6      80780438       cmp byte [rax + 4], 0x38
0x000048da      0f8560ffffff   jne 0x4840
0x000048e0      80780500       cmp byte [rax + 5], 0
0x000048e4      0f8556ffffff   jne 0x4840
0x000048ea      807d0060       cmp byte [rbp], 0x60
0x000048ee      488d05471901.  lea rax, [0x0001623c]                   ; "\u2018"
0x000048f5      488d15441901.  lea rdx, [0x00016240]                   ; "\u2019"
0x000048fc      480f45c2       cmovne rax, rdx
0x00004900      4883c408       add rsp, 8
0x00004904      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00004905      5d             pop rbp
0x00004906      c3             ret
0x00004907      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00004910      4157           push r15
0x00004912      4156           push r14
0x00004914      4589c7         mov r15d, r8d
0x00004917      4155           push r13
0x00004919      4154           push r12
0x0000491b      4989fe         mov r14, rdi
0x0000491e      55             push rbp
0x0000491f      53             push rbx
0x00004920      4489cb         mov ebx, r9d
0x00004923      4989f5         mov r13, rsi
0x00004926      4889cd         mov rbp, rcx
0x00004929      83e302         and ebx, 2
0x0000492c      4881ecb80000.  sub rsp, 0xb8
0x00004933      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000493b      4889542410     mov qword [rsp + 0x10], rdx
0x00004940      4489442408     mov dword [rsp + 8], r8d
0x00004945      44894c2478     mov dword [rsp + 0x78], r9d
0x0000494a      4889442420     mov qword [rsp + 0x20], rax
0x0000494f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00004957      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000495c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00004964      4889442460     mov qword [rsp + 0x60], rax
0x00004969      64488b042528.  mov rax, qword fs:[0x28]
0x00004972      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000497a      31c0           xor eax, eax
0x0000497c      e81fd1ffff     call sym.imp.__ctype_get_mb_cur_max
0x00004981      4183ff0a       cmp r15d, 0xa
0x00004985      4889442458     mov qword [rsp + 0x58], rax
0x0000498a      0f87af110000   ja 0x5b3f
0x00004990      488d0d091901.  lea rcx, [0x000162a0]
0x00004997      4489fa         mov edx, r15d
0x0000499a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000499e      4801c8         add rax, rcx
0x000049a1      ffe0           jmp rax
0x000049a3      c644240e01     mov byte [rsp + 0xe], 1
0x000049a8      c644247c00     mov byte [rsp + 0x7c], 0
0x000049ad      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x000049b0      48c744245000.  mov qword [rsp + 0x50], 0
0x000049b9      c644240f01     mov byte [rsp + 0xf], 1
0x000049be      c644240d00     mov byte [rsp + 0xd], 0
0x000049c3      488d05d41601.  lea rax, [0x0001609e]                   ; u"':*%\u6f6e\u2d6e\u6e69\u6574\u6567\u2072\u7261\u7567\u656d\u746e\u6400\u7669\u7369\u6f69\u206e\u7962\u7a20\u7265o<\u3d3c\u3d00=\u3d21\u3e00=>&|\u752f\u7273\u6c2f\u636f\u6c61\u732f\u6168\u6572\u6c2f\u636f\u6c61e\u2e38\u3133\u5000\u7561\u206c\u6745\u6567\u7472\u4a00\u6d61\u7365\u5920\u756f\u676e\u616dn\u694d\u656b"
0x000049ca      48c744241801.  mov qword [rsp + 0x18], 1
0x000049d3      4531ff         xor r15d, r15d
0x000049d6      c74424080200.  mov dword [rsp + 8], 2
0x000049de      4889442448     mov qword [rsp + 0x48], rax
0x000049e3      4531db         xor r11d, r11d
0x000049e6      4889e8         mov rax, rbp
0x000049e9      4589e0         mov r8d, r12d
0x000049ec      4c89dd         mov rbp, r11
0x000049ef      4989c3         mov r11, rax
0x000049f2      660f1f440000   nop word [rax + rax]
0x000049f8      4939eb         cmp r11, rbp
0x000049fb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000049ff      4983fbff       cmp r11, 0xffffffffffffffff
0x00004a03      750d           jne 0x4a12
0x00004a05      488b442410     mov rax, qword [rsp + 0x10]
0x00004a0a      803c2800       cmp byte [rax + rbp], 0
0x00004a0e      410f95c4       setne r12b
0x00004a12      4584e4         test r12b, r12b
0x00004a15      0f8455060000   je 0x5070
0x00004a1b      837c240802     cmp dword [rsp + 8], 2
0x00004a20      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004a25      4c8d0c2f       lea r9, [rdi + rbp]
0x00004a29      0f95c0         setne al
0x00004a2c      2244240d       and al, byte [rsp + 0xd]
0x00004a30      4189c2         mov r10d, eax
0x00004a33      0f84a7000000   je 0x4ae0
0x00004a39      488b442418     mov rax, qword [rsp + 0x18]
0x00004a3e      4885c0         test rax, rax
0x00004a41      0f8429040000   je 0x4e70
0x00004a47      4983fbff       cmp r11, 0xffffffffffffffff
0x00004a4b      488d5c0500     lea rbx, [rbp + rax]
0x00004a50      752e           jne 0x4a80
0x00004a52      4883f801       cmp rax, 1
0x00004a56      7628           jbe 0x4a80
0x00004a58      4488442438     mov byte [rsp + 0x38], r8b
0x00004a5d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00004a62      4c894c2428     mov qword [rsp + 0x28], r9
0x00004a67      e844d0ffff     call sym.imp.strlen
0x00004a6c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00004a72      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00004a78      4989c3         mov r11, rax
0x00004a7b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004a80      4c39db         cmp rbx, r11
0x00004a83      4488542428     mov byte [rsp + 0x28], r10b
0x00004a88      0f87b2050000   ja 0x5040
0x00004a8e      488b542418     mov rdx, qword [rsp + 0x18]
0x00004a93      488b742448     mov rsi, qword [rsp + 0x48]
0x00004a98      4c89cf         mov rdi, r9
0x00004a9b      4c895c2440     mov qword [rsp + 0x40], r11
0x00004aa0      4488442438     mov byte [rsp + 0x38], r8b
0x00004aa5      4c894c2430     mov qword [rsp + 0x30], r9
0x00004aaa      e8e1d0ffff     call sym.imp.memcmp
0x00004aaf      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00004ab1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004ab6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00004abc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00004ac1      0f8579050000   jne 0x5040
0x00004ac7      807c240f00     cmp byte [rsp + 0xf], 0
0x00004acc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00004ad2      0f857d0f0000   jne 0x5a55
0x00004ad8      0f1f84000000.  nop dword [rax + rax]
0x00004ae0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00004ae4      80fb7e         cmp bl, 0x7e
0x00004ae7      0f871b030000   ja 0x4e08
0x00004aed      488d0dd81701.  lea rcx, [0x000162cc]
0x00004af4      0fb6d3         movzx edx, bl
0x00004af7      48630491       movsxd rax, dword [rcx + rdx*4]
0x00004afb      4801c8         add rax, rcx
0x00004afe      ffe0           jmp rax
0x00004b00      4531d2         xor r10d, r10d
0x00004b03      4983fb01       cmp r11, 1
0x00004b07      0f95c0         setne al
0x00004b0a      4983fbff       cmp r11, 0xffffffffffffffff
0x00004b0e      750c           jne 0x4b1c
0x00004b10      488b442410     mov rax, qword [rsp + 0x10]
0x00004b15      80780100       cmp byte [rax + 1], 0
0x00004b19      0f95c0         setne al
0x00004b1c      837c240802     cmp dword [rsp + 8], 2
0x00004b21      0f94c2         sete dl
0x00004b24      84c0           test al, al
0x00004b26      0f844c020000   je 0x4d78
0x00004b2c      4531e4         xor r12d, r12d
0x00004b2f      31c0           xor eax, eax
0x00004b31      0f1f80000000.  nop dword [rax]
0x00004b38      807c240d01     cmp byte [rsp + 0xd], 1
0x00004b3d      0f850f010000   jne 0x4c52
0x00004b43      84d2           test dl, dl
0x00004b45      0f8507010000   jne 0x4c52
0x00004b4b      488b742420     mov rsi, qword [rsp + 0x20]
0x00004b50      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00004b53      7414           je 0x4b69
0x00004b55      89da           mov edx, ebx
0x00004b57      c0ea05         shr dl, 5
0x00004b5a      0fb6d2         movzx edx, dl
0x00004b5d      8b1496         mov edx, dword [rsi + rdx*4]
0x00004b60      0fa3da         bt edx, ebx
0x00004b63      0f824a010000   jb 0x4cb3
0x00004b69      4584d2         test r10b, r10b
0x00004b6c      0f8541010000   jne 0x4cb3
0x00004b72      83f001         xor eax, 1
0x00004b75      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00004b79      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00004b7c      84c0           test al, al
0x00004b7e      7420           je 0x4ba0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00004b80      4d39fd         cmp r13, r15
0x00004b83      7605           jbe 0x4b8a
0x00004b85      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004b8a      498d4701       lea rax, [r15 + 1]
0x00004b8e      4939c5         cmp r13, rax
0x00004b91      7606           jbe 0x4b99
0x00004b93      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004b99      4983c702       add r15, 2
0x00004b9d      4531c0         xor r8d, r8d
0x00004ba0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00004ba3      7304           jae 0x4ba9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00004ba5      43881c3e       mov byte [r14 + r15], bl
0x00004ba9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00004bae      4983c701       add r15, 1
0x00004bb2      b800000000     mov eax, 0
0x00004bb7      4584e4         test r12b, r12b
0x00004bba      0f44f8         cmove edi, eax
0x00004bbd      40887c240e     mov byte [rsp + 0xe], dil
0x00004bc2      e931feffff     jmp 0x49f8
0x00004bc7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00004bd0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00004bd3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00004bd7      83f802         cmp eax, 2
0x00004bda      0f84b8050000   je 0x5198
0x00004be0      83f805         cmp eax, 5
0x00004be3      0f846f050000   je 0x5158
0x00004be9      83f802         cmp eax, 2
0x00004bec      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00004bf1      0f94c2         sete dl
0x00004bf4      4531e4         xor r12d, r12d
0x00004bf7      31c0           xor eax, eax
0x00004bf9      e93affffff     jmp 0x4b38
0x00004bfe      6690           nop
0x00004c00      4531d2         xor r10d, r10d
0x00004c03      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00004c08      0f8402050000   je 0x5110
0x00004c0e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00004c13      31d2           xor edx, edx
0x00004c15      31c0           xor eax, eax
0x00004c17      bb27000000     mov ebx, 0x27                           ; '''
0x00004c1c      e917ffffff     jmp 0x4b38
0x00004c21      0f1f80000000.  nop dword [rax]
0x00004c28      ba09000000     mov edx, 9
0x00004c2d      bb74000000     mov ebx, 0x74                           ; 't'
0x00004c32      837c240802     cmp dword [rsp + 8], 2
0x00004c37      0f94c0         sete al
0x00004c3a      2244240f       and al, byte [rsp + 0xf]
0x00004c3e      0f854a010000   jne 0x4d8e
0x00004c44      807c240d00     cmp byte [rsp + 0xd], 0
0x00004c49      7565           jne 0x4cb0
0x00004c4b      89d3           mov ebx, edx
0x00004c4d      4531e4         xor r12d, r12d
0x00004c50      31c0           xor eax, eax
0x00004c52      807c240f00     cmp byte [rsp + 0xf], 0
0x00004c57      0f85eefeffff   jne 0x4b4b
0x00004c5d      e907ffffff     jmp 0x4b69                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00004c62      660f1f440000   nop word [rax + rax]
0x00004c68      ba08000000     mov edx, 8
0x00004c6d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00004c72      ebd0           jmp 0x4c44
0x00004c74      0f1f4000       nop dword [rax]
0x00004c78      837c240802     cmp dword [rsp + 8], 2
0x00004c7d      0f84cd030000   je 0x5050
0x00004c83      807c240d00     cmp byte [rsp + 0xd], 0
0x00004c88      0f8412020000   je 0x4ea0
0x00004c8e      807c240f00     cmp byte [rsp + 0xf], 0
0x00004c93      0f8407020000   je 0x4ea0
0x00004c99      48837c241800   cmp qword [rsp + 0x18], 0
0x00004c9f      0f85b6030000   jne 0x505b
0x00004ca5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00004caa      660f1f440000   nop word [rax + rax]
0x00004cb0      4531e4         xor r12d, r12d
0x00004cb3      837c240802     cmp dword [rsp + 8], 2
0x00004cb8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00004cbb      807c240f00     cmp byte [rsp + 0xf], 0
0x00004cc0      89d0           mov eax, edx
0x00004cc2      0f8550080000   jne 0x5518
0x00004cc8      4489c0         mov eax, r8d
0x00004ccb      83f001         xor eax, 1
0x00004cce      20d0           and al, dl
0x00004cd0      742f           je 0x4d01
0x00004cd2      4d39fd         cmp r13, r15
0x00004cd5      7605           jbe 0x4cdc
0x00004cd7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004cdc      498d5701       lea rdx, [r15 + 1]
0x00004ce0      4939d5         cmp r13, rdx
0x00004ce3      7606           jbe 0x4ceb
0x00004ce5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00004ceb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00004cef      4939d5         cmp r13, rdx
0x00004cf2      7606           jbe 0x4cfa
0x00004cf4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004cfa      4983c703       add r15, 3
0x00004cfe      4189c0         mov r8d, eax
0x00004d01      4d39fd         cmp r13, r15
0x00004d04      7605           jbe 0x4d0b
0x00004d06      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004d0b      4983c701       add r15, 1
0x00004d0f      4883c501       add rbp, 1
0x00004d13      e988feffff     jmp 0x4ba0
0x00004d18      0f1f84000000.  nop dword [rax + rax]
0x00004d20      807c240d00     cmp byte [rsp + 0xd], 0
0x00004d25      0f85c8010000   jne 0x4ef3
0x00004d2b      31d2           xor edx, edx
0x00004d2d      f644247801     test byte [rsp + 0x78], 1
0x00004d32      0f8413ffffff   je 0x4c4b
0x00004d38      4883c501       add rbp, 1
0x00004d3c      e9b7fcffff     jmp 0x49f8
0x00004d41      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00004d48      837c240802     cmp dword [rsp + 8], 2
0x00004d4d      0f94c2         sete dl
0x00004d50      31c0           xor eax, eax
0x00004d52      e9e1fdffff     jmp 0x4b38
0x00004d57      660f1f840000.  nop word [rax + rax]
0x00004d60      ba07000000     mov edx, 7
0x00004d65      bb61000000     mov ebx, 0x61                           ; 'a'
0x00004d6a      e9d5feffff     jmp 0x4c44
0x00004d6f      90             nop
0x00004d70      837c240802     cmp dword [rsp + 8], 2
0x00004d75      0f94c2         sete dl
0x00004d78      4885ed         test rbp, rbp
0x00004d7b      0f85abfdffff   jne 0x4b2c
0x00004d81      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004d86      20d0           and al, dl
0x00004d88      0f84aafdffff   je 0x4b38
0x00004d8e      4c89dd         mov rbp, r11
0x00004d91      c74424080200.  mov dword [rsp + 8], 2
0x00004d99      e9fb060000     jmp 0x5499
0x00004d9e      6690           nop
0x00004da0      837c240802     cmp dword [rsp + 8], 2
0x00004da5      0f94c2         sete dl
0x00004da8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00004dab      ebd4           jmp 0x4d81
0x00004dad      0f1f00         nop dword [rax]
0x00004db0      837c240802     cmp dword [rsp + 8], 2
0x00004db5      bb20000000     mov ebx, 0x20                           ; "@"
0x00004dba      0f94c2         sete dl
0x00004dbd      ebc2           jmp 0x4d81
0x00004dbf      90             nop
0x00004dc0      ba0d000000     mov edx, 0xd
0x00004dc5      bb72000000     mov ebx, 0x72                           ; 'r'
0x00004dca      e963feffff     jmp 0x4c32
0x00004dcf      90             nop
0x00004dd0      ba0c000000     mov edx, 0xc
0x00004dd5      bb66000000     mov ebx, 0x66                           ; 'f'
0x00004dda      e965feffff     jmp 0x4c44
0x00004ddf      90             nop
0x00004de0      ba0b000000     mov edx, 0xb
0x00004de5      bb76000000     mov ebx, 0x76                           ; 'v'
0x00004dea      e955feffff     jmp 0x4c44
0x00004def      90             nop
0x00004df0      ba0a000000     mov edx, 0xa
0x00004df5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00004dfa      e933feffff     jmp 0x4c32
0x00004dff      90             nop
0x00004e00      4531d2         xor r10d, r10d
0x00004e03      0f1f440000     nop dword [rax + rax]
0x00004e08      48837c245801   cmp qword [rsp + 0x58], 1
0x00004e0e      0f85a4030000   jne 0x51b8
0x00004e14      4c895c2438     mov qword [rsp + 0x38], r11
0x00004e19      4488442430     mov byte [rsp + 0x30], r8b
0x00004e1e      4488542428     mov byte [rsp + 0x28], r10b
0x00004e23      e898cfffff     call sym.imp.__ctype_b_loc
0x00004e28      488b08         mov rcx, qword [rax]
0x00004e2b      0fb6d3         movzx edx, bl
0x00004e2e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00004e34      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00004e3a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00004e3f      bf01000000     mov edi, 1
0x00004e44      0fb70451       movzx eax, word [rcx + rdx*2]
0x00004e48      66250040       and ax, 0x4000                          ; "p!"
0x00004e4c      410f95c4       setne r12b
0x00004e50      0f94c0         sete al
0x00004e53      2244240d       and al, byte [rsp + 0xd]
0x00004e57      84c0           test al, al
0x00004e59      0f8592090000   jne 0x57f1
0x00004e5f      837c240802     cmp dword [rsp + 8], 2
0x00004e64      0f94c2         sete dl
0x00004e67      e9ccfcffff     jmp 0x4b38
0x00004e6c      0f1f4000       nop dword [rax]
0x00004e70      410fb619       movzx ebx, byte [r9]
0x00004e74      80fb7e         cmp bl, 0x7e
0x00004e77      7787           ja 0x4e00
0x00004e79      488d0d481601.  lea rcx, [0x000164c8]
0x00004e80      0fb6d3         movzx edx, bl
0x00004e83      48630491       movsxd rax, dword [rcx + rdx*4]
0x00004e87      4801c8         add rax, rcx
0x00004e8a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00004e8c      0f1f4000       nop dword [rax]
0x00004e90      4531d2         xor r10d, r10d
0x00004e93      807c240d00     cmp byte [rsp + 0xd], 0
0x00004e98      0f85f0fdffff   jne 0x4c8e
0x00004e9e      6690           nop
0x00004ea0      ba5c000000     mov edx, 0x5c                           ; '\'
0x00004ea5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00004eaa      e995fdffff     jmp 0x4c44
0x00004eaf      90             nop
0x00004eb0      ba0c000000     mov edx, 0xc
0x00004eb5      4531d2         xor r10d, r10d
0x00004eb8      bb66000000     mov ebx, 0x66                           ; 'f'
0x00004ebd      e982fdffff     jmp 0x4c44
0x00004ec2      660f1f440000   nop word [rax + rax]
0x00004ec8      ba0a000000     mov edx, 0xa
0x00004ecd      4531d2         xor r10d, r10d
0x00004ed0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00004ed5      e958fdffff     jmp 0x4c32
0x00004eda      660f1f440000   nop word [rax + rax]
0x00004ee0      bb61000000     mov ebx, 0x61                           ; 'a'
0x00004ee5      e9c6fdffff     jmp 0x4cb0
0x00004eea      660f1f440000   nop word [rax + rax]
0x00004ef0      4531d2         xor r10d, r10d
0x00004ef3      837c240802     cmp dword [rsp + 8], 2
0x00004ef8      0f94c2         sete dl
0x00004efb      807c240f00     cmp byte [rsp + 0xf], 0
0x00004f00      0f85940b0000   jne 0x5a9a
0x00004f06      4489c0         mov eax, r8d
0x00004f09      4c89f9         mov rcx, r15
0x00004f0c      83f001         xor eax, 1
0x00004f0f      20d0           and al, dl
0x00004f11      742d           je 0x4f40
0x00004f13      4d39fd         cmp r13, r15
0x00004f16      7605           jbe 0x4f1d
0x00004f18      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004f1d      498d4f01       lea rcx, [r15 + 1]
0x00004f21      4939cd         cmp r13, rcx
0x00004f24      7606           jbe 0x4f2c
0x00004f26      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00004f2c      498d4f02       lea rcx, [r15 + 2]
0x00004f30      4939cd         cmp r13, rcx
0x00004f33      0f8730060000   ja 0x5569
0x00004f39      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00004f3d      4189c0         mov r8d, eax
0x00004f40      4939cd         cmp r13, rcx
0x00004f43      7605           jbe 0x4f4a
0x00004f45      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004f4a      837c240802     cmp dword [rsp + 8], 2
0x00004f4f      4c8d7901       lea r15, [rcx + 1]
0x00004f53      0f8400060000   je 0x5559
0x00004f59      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00004f5d      4c39d8         cmp rax, r11
0x00004f60      7319           jae 0x4f7b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00004f62      488b442410     mov rax, qword [rsp + 0x10]
0x00004f67      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00004f6c      88442428       mov byte [rsp + 0x28], al
0x00004f70      83e830         sub eax, 0x30
0x00004f73      3c09           cmp al, 9
0x00004f75      0f862e080000   jbe 0x57a9
0x00004f7b      4489e0         mov eax, r12d
0x00004f7e      bb30000000     mov ebx, 0x30                           ; '0'
0x00004f83      4531e4         xor r12d, r12d
0x00004f86      e9adfbffff     jmp 0x4b38                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00004f8b      0f1f440000     nop dword [rax + rax]
0x00004f90      837c240802     cmp dword [rsp + 8], 2
0x00004f95      4589d4         mov r12d, r10d
0x00004f98      0f94c2         sete dl
0x00004f9b      4531d2         xor r10d, r10d
0x00004f9e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004fa0      e993fbffff     jmp 0x4b38                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00004fa5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004fa8      837c240802     cmp dword [rsp + 8], 2
0x00004fad      0f94c2         sete dl
0x00004fb0      4531d2         xor r10d, r10d
0x00004fb3      e9c0fdffff     jmp 0x4d78
0x00004fb8      0f1f84000000.  nop dword [rax + rax]
0x00004fc0      837c240802     cmp dword [rsp + 8], 2
0x00004fc5      0f94c2         sete dl
0x00004fc8      4531d2         xor r10d, r10d
0x00004fcb      4531e4         xor r12d, r12d
0x00004fce      e9aefdffff     jmp 0x4d81
0x00004fd3      0f1f440000     nop dword [rax + rax]
0x00004fd8      837c240802     cmp dword [rsp + 8], 2
0x00004fdd      4589d4         mov r12d, r10d
0x00004fe0      bb20000000     mov ebx, 0x20                           ; "@"
0x00004fe5      0f94c2         sete dl
0x00004fe8      4531d2         xor r10d, r10d
0x00004feb      e991fdffff     jmp 0x4d81
0x00004ff0      ba0d000000     mov edx, 0xd
0x00004ff5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00004ff8      bb72000000     mov ebx, 0x72                           ; 'r'
0x00004ffd      e930fcffff     jmp 0x4c32
0x00005002      660f1f440000   nop word [rax + rax]
0x00005008      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000500d      e99efcffff     jmp 0x4cb0
0x00005012      660f1f440000   nop word [rax + rax]
0x00005018      ba09000000     mov edx, 9
0x0000501d      4531d2         xor r10d, r10d
0x00005020      bb74000000     mov ebx, 0x74                           ; 't'
0x00005025      e908fcffff     jmp 0x4c32
0x0000502a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00005030      bb62000000     mov ebx, 0x62                           ; 'b'
0x00005035      e976fcffff     jmp 0x4cb0
0x0000503a      660f1f440000   nop word [rax + rax]
0x00005040      4531d2         xor r10d, r10d
0x00005043      e998faffff     jmp 0x4ae0
0x00005048      0f1f84000000.  nop dword [rax + rax]
0x00005050      807c240f00     cmp byte [rsp + 0xf], 0
0x00005055      0f8565090000   jne 0x59c0
0x0000505b      4883c501       add rbp, 1
0x0000505f      4489c0         mov eax, r8d
0x00005062      4531e4         xor r12d, r12d
0x00005065      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000506a      e90dfbffff     jmp 0x4b7c
0x0000506f      90             nop
0x00005070      837c240802     cmp dword [rsp + 8], 2
0x00005075      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000507a      4589c4         mov r12d, r8d
0x0000507d      4c89dd         mov rbp, r11
0x00005080      0f94c2         sete dl
0x00005083      89d8           mov eax, ebx
0x00005085      4d85ff         test r15, r15
0x00005088      0f94c1         sete cl
0x0000508b      21d0           and eax, edx
0x0000508d      20c8           and al, cl
0x0000508f      0f85610a0000   jne 0x5af6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00005095      89d8           mov eax, ebx
0x00005097      83f001         xor eax, 1
0x0000509a      20c2           and dl, al
0x0000509c      0f846a090000   je 0x5a0c
0x000050a2      807c247c00     cmp byte [rsp + 0x7c], 0
0x000050a7      0f845d090000   je 0x5a0a
0x000050ad      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x000050b2      0f85f5090000   jne 0x5aad
0x000050b8      4d85ed         test r13, r13
0x000050bb      0f94c0         sete al
0x000050be      48837c245000   cmp qword [rsp + 0x50], 0
0x000050c4      0f95c2         setne dl
0x000050c7      20d0           and al, dl
0x000050c9      0f841d0a0000   je 0x5aec
0x000050cf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000050d4      488d1dc30f01.  lea rbx, [0x0001609e]                   ; u"':*%\u6f6e\u2d6e\u6e69\u6574\u6567\u2072\u7261\u7567\u656d\u746e\u6400\u7669\u7369\u6f69\u206e\u7962\u7a20\u7265o<\u3d3c\u3d00=\u3d21\u3e00=>&|\u752f\u7273\u6c2f\u636f\u6c61\u732f\u6168\u6572\u6c2f\u636f\u6c61e\u2e38\u3133\u5000\u7561\u206c\u6745\u6567\u7472\u4a00\u6d61\u7365\u5920\u756f\u676e\u616dn\u694d\u656b"
0x000050db      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000050df      c74424080200.  mov dword [rsp + 8], 2
0x000050e7      41bf01000000   mov r15d, 1
0x000050ed      48c744241801.  mov qword [rsp + 0x18], 1
0x000050f6      c644240f00     mov byte [rsp + 0xf], 0
0x000050fb      48895c2448     mov qword [rsp + 0x48], rbx
0x00005100      8844247c       mov byte [rsp + 0x7c], al
0x00005104      e9daf8ffff     jmp 0x49e3
0x00005109      0f1f80000000.  nop dword [rax]
0x00005110      807c240f00     cmp byte [rsp + 0xf], 0
0x00005115      0f85a5080000   jne 0x59c0
0x0000511b      4d85ed         test r13, r13
0x0000511e      0f84fc030000   je 0x5520                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00005124      31d2           xor edx, edx
0x00005126      48837c245000   cmp qword [rsp + 0x50], 0
0x0000512c      0f85ee030000   jne 0x5520                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00005132      4c896c2450     mov qword [rsp + 0x50], r13
0x00005137      4983c703       add r15, 3
0x0000513b      31c0           xor eax, eax
0x0000513d      448864247c     mov byte [rsp + 0x7c], r12b
0x00005142      4531c0         xor r8d, r8d
0x00005145      4989d5         mov r13, rdx
0x00005148      bb27000000     mov ebx, 0x27                           ; '''
0x0000514d      e917faffff     jmp 0x4b69
0x00005152      660f1f440000   nop word [rax + rax]
0x00005158      f644247804     test byte [rsp + 0x78], 4
0x0000515d      7421           je 0x5180
0x0000515f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00005163      4c39d9         cmp rcx, r11
0x00005166      7318           jae 0x5180
0x00005168      488b442410     mov rax, qword [rsp + 0x10]
0x0000516d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00005172      0f848a070000   je 0x5902
0x00005178      0f1f84000000.  nop dword [rax + rax]
0x00005180      31d2           xor edx, edx
0x00005182      4531e4         xor r12d, r12d
0x00005185      31c0           xor eax, eax
0x00005187      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000518c      e9a7f9ffff     jmp 0x4b38
0x00005191      0f1f80000000.  nop dword [rax]
0x00005198      807c240f00     cmp byte [rsp + 0xf], 0
0x0000519d      0f851d080000   jne 0x59c0
0x000051a3      4531e4         xor r12d, r12d
0x000051a6      31c0           xor eax, eax
0x000051a8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000051ad      e9b7f9ffff     jmp 0x4b69                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000051b2      660f1f440000   nop word [rax + rax]
0x000051b8      488d8424a000.  lea rax, [rsp + 0xa0]
0x000051c0      4983fbff       cmp r11, 0xffffffffffffffff
0x000051c4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x000051d0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x000051d5      752d           jne 0x5204
0x000051d7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000051dc      4488442440     mov byte [rsp + 0x40], r8b
0x000051e1      4488542438     mov byte [rsp + 0x38], r10b
0x000051e6      4c894c2430     mov qword [rsp + 0x30], r9
0x000051eb      e8c0c8ffff     call sym.imp.strlen
0x000051f0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000051f6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x000051fc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x000051ff      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005204      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000520c      31c9           xor ecx, ecx
0x0000520e      885c247e       mov byte [rsp + 0x7e], bl
0x00005212      448844247d     mov byte [rsp + 0x7d], r8b
0x00005217      4889cb         mov rbx, rcx
0x0000521a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00005222      4889442438     mov qword [rsp + 0x38], rax
0x00005227      448854247f     mov byte [rsp + 0x7f], r10b
0x0000522c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00005234      4c89742440     mov qword [rsp + 0x40], r14
0x00005239      4c896c2470     mov qword [rsp + 0x70], r13
0x0000523e      4c895c2430     mov qword [rsp + 0x30], r11
0x00005243      488b442410     mov rax, qword [rsp + 0x10]
0x00005248      4c8d741d00     lea r14, [rbp + rbx]
0x0000524d      488b542430     mov rdx, qword [rsp + 0x30]
0x00005252      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00005257      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000525c      4e8d2c30       lea r13, [rax + r14]
0x00005260      4c29f2         sub rdx, r14
0x00005263      4c89ee         mov rsi, r13
0x00005266      e8e51d0000     call sym.rpl_mbrtowc
0x0000526b      4885c0         test rax, rax
0x0000526e      4989c7         mov r15, rax
0x00005271      744e           je 0x52c1
0x00005273      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005277      0f8418060000   je 0x5895
0x0000527d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00005281      0f849a050000   je 0x5821
0x00005287      837c240802     cmp dword [rsp + 8], 2
0x0000528c      0f94c0         sete al
0x0000528f      2244240f       and al, byte [rsp + 0xf]
0x00005293      0f8597010000   jne 0x5430
0x00005299      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x000052a0      e8fbcaffff     call sym.imp.iswprint
0x000052a5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000052aa      85c0           test eax, eax
0x000052ac      b800000000     mov eax, 0
0x000052b1      440f44e0       cmove r12d, eax
0x000052b5      4c01fb         add rbx, r15
0x000052b8      e8d3caffff     call sym.imp.mbsinit
0x000052bd      85c0           test eax, eax
0x000052bf      7482           je 0x5243
0x000052c1      4489e2         mov edx, r12d
0x000052c4      4889df         mov rdi, rbx
0x000052c7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000052cd      83f201         xor edx, 1
0x000052d0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000052d5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000052db      2254240d       and dl, byte [rsp + 0xd]
0x000052df      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000052e7      4c8b742440     mov r14, qword [rsp + 0x40]
0x000052ec      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000052f1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000052f6      4883ff01       cmp rdi, 1
0x000052fa      0f86fb050000   jbe 0x58fb
0x00005300      4889f9         mov rcx, rdi
0x00005303      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00005305      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000530b      4801e9         add rcx, rbp
0x0000530e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00005313      e9b6000000     jmp 0x53ce
0x00005318      0f1f84000000.  nop dword [rax + rax]
0x00005320      837c240802     cmp dword [rsp + 8], 2
0x00005325      0f94c0         sete al
0x00005328      4584c9         test r9b, r9b
0x0000532b      0f85af040000   jne 0x57e0
0x00005331      4489c6         mov esi, r8d
0x00005334      83f601         xor esi, 1
0x00005337      4020f0         and al, sil
0x0000533a      742f           je 0x536b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000533c      4d39fd         cmp r13, r15
0x0000533f      7605           jbe 0x5346
0x00005341      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00005346      498d7701       lea rsi, [r15 + 1]
0x0000534a      4939f5         cmp r13, rsi
0x0000534d      7606           jbe 0x5355                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000534f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00005355      498d7702       lea rsi, [r15 + 2]
0x00005359      4939f5         cmp r13, rsi
0x0000535c      7606           jbe 0x5364
0x0000535e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00005364      4983c703       add r15, 3
0x00005368      4189c0         mov r8d, eax
0x0000536b      4d39fd         cmp r13, r15
0x0000536e      7605           jbe 0x5375
0x00005370      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00005375      498d4701       lea rax, [r15 + 1]
0x00005379      4939c5         cmp r13, rax
0x0000537c      760d           jbe 0x538b
0x0000537e      89d8           mov eax, ebx
0x00005380      c0e806         shr al, 6
0x00005383      83c030         add eax, 0x30
0x00005386      4388443e01     mov byte [r14 + r15 + 1], al
0x0000538b      498d4702       lea rax, [r15 + 2]
0x0000538f      4939c5         cmp r13, rax
0x00005392      7610           jbe 0x53a4
0x00005394      89d8           mov eax, ebx
0x00005396      c0e803         shr al, 3
0x00005399      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000539c      83c030         add eax, 0x30
0x0000539f      4388443e02     mov byte [r14 + r15 + 2], al
0x000053a4      83e307         and ebx, 7
0x000053a7      4883c501       add rbp, 1
0x000053ab      4983c703       add r15, 3
0x000053af      83c330         add ebx, 0x30
0x000053b2      4839cd         cmp rbp, rcx
0x000053b5      0f83e5f7ffff   jae 0x4ba0
0x000053bb      89d6           mov esi, edx
0x000053bd      4d39fd         cmp r13, r15
0x000053c0      7604           jbe 0x53c6
0x000053c2      43881c3e       mov byte [r14 + r15], bl
0x000053c6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000053ca      4983c701       add r15, 1
0x000053ce      84d2           test dl, dl
0x000053d0      0f854affffff   jne 0x5320
0x000053d6      89f0           mov eax, esi
0x000053d8      83f001         xor eax, 1
0x000053db      4421c0         and eax, r8d
0x000053de      4584d2         test r10b, r10b
0x000053e1      740e           je 0x53f1
0x000053e3      4d39fd         cmp r13, r15
0x000053e6      7605           jbe 0x53ed
0x000053e8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000053ed      4983c701       add r15, 1
0x000053f1      4883c501       add rbp, 1
0x000053f5      4839cd         cmp rbp, rcx
0x000053f8      0f837ef7ffff   jae 0x4b7c
0x000053fe      84c0           test al, al
0x00005400      0f84f8030000   je 0x57fe
0x00005406      4d39fd         cmp r13, r15
0x00005409      7605           jbe 0x5410
0x0000540b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00005410      498d4701       lea rax, [r15 + 1]
0x00005414      4939c5         cmp r13, rax
0x00005417      7606           jbe 0x541f
0x00005419      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000541f      4983c702       add r15, 2
0x00005423      4531d2         xor r10d, r10d
0x00005426      4531c0         xor r8d, r8d
0x00005429      eb92           jmp 0x53bd
0x0000542b      0f1f440000     nop dword [rax + rax]
0x00005430      4983ff01       cmp r15, 1
0x00005434      0f845ffeffff   je 0x5299
0x0000543a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000543f      4a8d0c3f       lea rcx, [rdi + r15]
0x00005443      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00005448      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000544c      eb0f           jmp 0x545d
0x0000544e      6690           nop
0x00005450      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00005454      4939d0         cmp r8, rdx
0x00005457      0f843cfeffff   je 0x5299
0x0000545d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00005460      83e95b         sub ecx, 0x5b
0x00005463      80f921         cmp cl, 0x21
0x00005466      77e8           ja 0x5450                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00005468      be01000000     mov esi, 1
0x0000546d      48d3e6         shl rsi, cl
0x00005470      4889f1         mov rcx, rsi
0x00005473      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000547d      4885f1         test rcx, rsi
0x00005480      74ce           je 0x5450
0x00005482      4c8b742440     mov r14, qword [rsp + 0x40]
0x00005487      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000548c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00005491      c74424080200.  mov dword [rsp + 8], 2
0x00005499      807c240d00     cmp byte [rsp + 0xd], 0
0x0000549e      7410           je 0x54b0
0x000054a0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x000054a2      b804000000     mov eax, 4
0x000054a7      0f44442408     cmove eax, dword [rsp + 8]
0x000054ac      89442408       mov dword [rsp + 8], eax
0x000054b0      4883ec08       sub rsp, 8
0x000054b4      4889e9         mov rcx, rbp
0x000054b7      4c89ee         mov rsi, r13
0x000054ba      ff742468       push qword [rsp + 0x68]
0x000054be      ff742478       push qword [rsp + 0x78]
0x000054c2      4c89f7         mov rdi, r14
0x000054c5      6a00           push 0
0x000054c7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000054cf      448b442428     mov r8d, dword [rsp + 0x28]
0x000054d4      488b542430     mov rdx, qword [rsp + 0x30]
0x000054d9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x000054dd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x000054e2      4883c420       add rsp, 0x20
0x000054e6      4989c7         mov r15, rax
0x000054e9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x000054f1      6448331c2528.  xor rbx, qword fs:[0x28]
0x000054fa      4c89f8         mov rax, r15
0x000054fd      0f8500060000   jne 0x5b03
0x00005503      4881c4b80000.  add rsp, 0xb8
0x0000550a      5b             pop rbx
0x0000550b      5d             pop rbp
0x0000550c      415c           pop r12
0x0000550e      415d           pop r13
0x00005510      415e           pop r14
0x00005512      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00005514      c3             ret
0x00005515      0f1f00         nop dword [rax]
0x00005518      4c89dd         mov rbp, r11
0x0000551b      e979ffffff     jmp 0x5499
0x00005520      4d39fd         cmp r13, r15
0x00005523      7605           jbe 0x552a
0x00005525      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000552a      498d4701       lea rax, [r15 + 1]
0x0000552e      4939c5         cmp r13, rax
0x00005531      7606           jbe 0x5539
0x00005533      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00005539      498d4702       lea rax, [r15 + 2]
0x0000553d      4939c5         cmp r13, rax
0x00005540      0f86ec050000   jbe 0x5b32
0x00005546      4c89ea         mov rdx, r13
0x00005549      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000554f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00005554      e9d9fbffff     jmp 0x5132
0x00005559      4489e0         mov eax, r12d
0x0000555c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00005561      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00005564      e900f6ffff     jmp 0x4b69                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00005569      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000556f      e9c5f9ffff     jmp 0x4f39
0x00005574      85db           test ebx, ebx
0x00005576      0f8527f4ffff   jne 0x49a3
0x0000557c      c644240d01     mov byte [rsp + 0xd], 1
0x00005581      4d85ed         test r13, r13
0x00005584      0f8590050000   jne 0x5b1a
0x0000558a      488d050d0b01.  lea rax, [0x0001609e]                   ; u"':*%\u6f6e\u2d6e\u6e69\u6574\u6567\u2072\u7261\u7567\u656d\u746e\u6400\u7669\u7369\u6f69\u206e\u7962\u7a20\u7265o<\u3d3c\u3d00=\u3d21\u3e00=>&|\u752f\u7273\u6c2f\u636f\u6c61\u732f\u6168\u6572\u6c2f\u636f\u6c61e\u2e38\u3133\u5000\u7561\u206c\u6745\u6567\u7472\u4a00\u6d61\u7365\u5920\u756f\u676e\u616dn\u694d\u656b"
0x00005591      48c744245000.  mov qword [rsp + 0x50], 0
0x0000559a      c644240e01     mov byte [rsp + 0xe], 1
0x0000559f      c644247c00     mov byte [rsp + 0x7c], 0
0x000055a4      4531e4         xor r12d, r12d
0x000055a7      c644240f00     mov byte [rsp + 0xf], 0
0x000055ac      48c744241801.  mov qword [rsp + 0x18], 1
0x000055b5      4889442448     mov qword [rsp + 0x48], rax
0x000055ba      41bf01000000   mov r15d, 1
0x000055c0      c74424080200.  mov dword [rsp + 8], 2
0x000055c8      e916f4ffff     jmp 0x49e3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x000055cd      0f1f00         nop dword [rax]
0x000055d0      85db           test ebx, ebx
0x000055d2      0f85f5030000   jne 0x59cd
0x000055d8      4d85ed         test r13, r13
0x000055db      0f8425020000   je 0x5806
0x000055e1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x000055e5      c644240e01     mov byte [rsp + 0xe], 1
0x000055ea      4531e4         xor r12d, r12d
0x000055ed      c644247c00     mov byte [rsp + 0x7c], 0
0x000055f2      48c744245000.  mov qword [rsp + 0x50], 0
0x000055fb      488d05490c01.  lea rax, str.l______l                   ; 0x1624b ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005602      c644240f00     mov byte [rsp + 0xf], 0
0x00005607      c644240d01     mov byte [rsp + 0xd], 1
0x0000560c      48c744241801.  mov qword [rsp + 0x18], 1
0x00005615      41bf01000000   mov r15d, 1
0x0000561b      4889442448     mov qword [rsp + 0x48], rax
0x00005620      e9bef3ffff     jmp 0x49e3
0x00005625      488d051f0c01.  lea rax, str.l______l                   ; 0x1624b ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000562c      c644240e01     mov byte [rsp + 0xe], 1
0x00005631      c644247c00     mov byte [rsp + 0x7c], 0
0x00005636      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00005639      48c744245000.  mov qword [rsp + 0x50], 0
0x00005642      c644240f01     mov byte [rsp + 0xf], 1
0x00005647      c644240d01     mov byte [rsp + 0xd], 1
0x0000564c      48c744241801.  mov qword [rsp + 0x18], 1
0x00005655      4531ff         xor r15d, r15d
0x00005658      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000565d      c74424080500.  mov dword [rsp + 8], 5
0x00005665      e979f3ffff     jmp 0x49e3
0x0000566a      c644240e01     mov byte [rsp + 0xe], 1
0x0000566f      c644247c00     mov byte [rsp + 0x7c], 0
0x00005674      4531e4         xor r12d, r12d
0x00005677      48c744245000.  mov qword [rsp + 0x50], 0
0x00005680      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00005685      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00005688      c644240d01     mov byte [rsp + 0xd], 1
0x0000568d      48c744241800.  mov qword [rsp + 0x18], 0
0x00005696      48c744244800.  mov qword [rsp + 0x48], 0
0x0000569f      e93ff3ffff     jmp 0x49e3
0x000056a4      837c24080a     cmp dword [rsp + 8], 0xa
0x000056a9      7456           je 0x5701
0x000056ab      488d359b0b01.  lea rsi, [0x0001624d]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000056b2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000056b4      ba05000000     mov edx, 5
0x000056b9      e8d2c3ffff     call sym.imp.dcgettext
0x000056be      4889c1         mov rcx, rax
0x000056c1      4889442468     mov qword [rsp + 0x68], rax
0x000056c6      488d05800b01.  lea rax, [0x0001624d]                   ; "`"
0x000056cd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x000056d0      0f8498030000   je 0x5a6e
0x000056d6      488d35c10901.  lea rsi, [0x0001609e]                   ; u"':*%\u6f6e\u2d6e\u6e69\u6574\u6567\u2072\u7261\u7567\u656d\u746e\u6400\u7669\u7369\u6f69\u206e\u7962\u7a20\u7265o<\u3d3c\u3d00=\u3d21\u3e00=>&|\u752f\u7273\u6c2f\u636f\u6c61\u732f\u6168\u6572\u6c2f\u636f\u6c61e\u2e38\u3133\u5000\u7561\u206c\u6745\u6567\u7472\u4a00\u6d61\u7365\u5920\u756f\u676e\u616dn\u694d\u656b"
0x000056dd      31ff           xor edi, edi
0x000056df      ba05000000     mov edx, 5
0x000056e4      e8a7c3ffff     call sym.imp.dcgettext
0x000056e9      4889c1         mov rcx, rax
0x000056ec      4889442460     mov qword [rsp + 0x60], rax
0x000056f1      488d05a60901.  lea rax, [0x0001609e]                   ; u"':*%\u6f6e\u2d6e\u6e69\u6574\u6567\u2072\u7261\u7567\u656d\u746e\u6400\u7669\u7369\u6f69\u206e\u7962\u7a20\u7265o<\u3d3c\u3d00=\u3d21\u3e00=>&|\u752f\u7273\u6c2f\u636f\u6c61\u732f\u6168\u6572\u6c2f\u636f\u6c61e\u2e38\u3133\u5000\u7561\u206c\u6745\u6567\u7472\u4a00\u6d61\u7365\u5920\u756f\u676e\u616dn\u694d\u656b"
0x000056f8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000056fb      0f8483030000   je 0x5a84
0x00005701      4531ff         xor r15d, r15d
0x00005704      85db           test ebx, ebx
0x00005706      0f84c1010000   je 0x58cd
0x0000570c      85db           test ebx, ebx
0x0000570e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00005713      0f9544240f     setne byte [rsp + 0xf]
0x00005718      4531e4         xor r12d, r12d
0x0000571b      4889df         mov rdi, rbx
0x0000571e      e88dc3ffff     call sym.imp.strlen
0x00005723      48895c2448     mov qword [rsp + 0x48], rbx
0x00005728      4889442418     mov qword [rsp + 0x18], rax
0x0000572d      c644240e01     mov byte [rsp + 0xe], 1
0x00005732      c644247c00     mov byte [rsp + 0x7c], 0
0x00005737      48c744245000.  mov qword [rsp + 0x50], 0
0x00005740      c644240d01     mov byte [rsp + 0xd], 1
0x00005745      e999f2ffff     jmp 0x49e3
0x0000574a      c644240e01     mov byte [rsp + 0xe], 1
0x0000574f      c644247c00     mov byte [rsp + 0x7c], 0
0x00005754      4531e4         xor r12d, r12d
0x00005757      48c744245000.  mov qword [rsp + 0x50], 0
0x00005760      c644240f00     mov byte [rsp + 0xf], 0
0x00005765      4531ff         xor r15d, r15d
0x00005768      c644240d00     mov byte [rsp + 0xd], 0
0x0000576d      48c744241800.  mov qword [rsp + 0x18], 0
0x00005776      48c744244800.  mov qword [rsp + 0x48], 0
0x0000577f      e95ff2ffff     jmp 0x49e3
0x00005784      c644240e01     mov byte [rsp + 0xe], 1
0x00005789      c644247c00     mov byte [rsp + 0x7c], 0
0x0000578e      4531e4         xor r12d, r12d
0x00005791      48c744245000.  mov qword [rsp + 0x50], 0
0x0000579a      c644240f01     mov byte [rsp + 0xf], 1
0x0000579f      c644240d01     mov byte [rsp + 0xd], 1
0x000057a4      e91af2ffff     jmp 0x49c3
0x000057a9      4d39fd         cmp r13, r15
0x000057ac      7605           jbe 0x57b3
0x000057ae      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x000057b3      488d4102       lea rax, [rcx + 2]
0x000057b7      4939c5         cmp r13, rax
0x000057ba      7606           jbe 0x57c2
0x000057bc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x000057c2      4489e0         mov eax, r12d
0x000057c5      4c8d7903       lea r15, [rcx + 3]
0x000057c9      4531e4         xor r12d, r12d
0x000057cc      bb30000000     mov ebx, 0x30                           ; '0'
0x000057d1      e962f3ffff     jmp 0x4b38
0x000057d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000057e0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000057e5      4c89dd         mov rbp, r11
0x000057e8      885c240d       mov byte [rsp + 0xd], bl
0x000057ec      e9a8fcffff     jmp 0x5499
0x000057f1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000057f6      4531e4         xor r12d, r12d
0x000057f9      e902fbffff     jmp 0x5300
0x000057fe      4531d2         xor r10d, r10d
0x00005801      e9b7fbffff     jmp 0x53bd
0x00005806      48c744245000.  mov qword [rsp + 0x50], 0
0x0000580f      c644240e01     mov byte [rsp + 0xe], 1
0x00005814      4531e4         xor r12d, r12d
0x00005817      c644247c00     mov byte [rsp + 0x7c], 0
0x0000581c      e9dafdffff     jmp 0x55fb
0x00005821      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00005826      4c89f6         mov rsi, r14
0x00005829      4c89e9         mov rcx, r13
0x0000582c      4889d8         mov rax, rbx
0x0000582f      4889df         mov rdi, rbx
0x00005832      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00005838      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000583d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00005845      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00005848      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000584e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00005856      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000585b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00005860      7326           jae 0x5888
0x00005862      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00005865      7510           jne 0x5877
0x00005867      eb1f           jmp 0x5888
0x00005869      0f1f80000000.  nop dword [rax]
0x00005870      41803c0100     cmp byte [r9 + rax], 0
0x00005875      740e           je 0x5885
0x00005877      4883c001       add rax, 1
0x0000587b      488d540500     lea rdx, [rbp + rax]
0x00005880      4939d3         cmp r11, rdx
0x00005883      77eb           ja 0x5870
0x00005885      4889c7         mov rdi, rax
0x00005888      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000588d      4531e4         xor r12d, r12d
0x00005890      e961faffff     jmp 0x52f6
0x00005895      4889df         mov rdi, rbx
0x00005898      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000589e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000058a3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000058a9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000058b1      4531e4         xor r12d, r12d
0x000058b4      4c8b742440     mov r14, qword [rsp + 0x40]
0x000058b9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000058be      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000058c3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000058c8      e929faffff     jmp 0x52f6
0x000058cd      488b542468     mov rdx, qword [rsp + 0x68]
0x000058d2      0fb602         movzx eax, byte [rdx]
0x000058d5      84c0           test al, al
0x000058d7      0f842ffeffff   je 0x570c
0x000058dd      0f1f00         nop dword [rax]
0x000058e0      4d39fd         cmp r13, r15
0x000058e3      7604           jbe 0x58e9
0x000058e5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000058e9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000058ed      420fb6043a     movzx eax, byte [rdx + r15]
0x000058f2      84c0           test al, al
0x000058f4      75ea           jne 0x58e0
0x000058f6      e911feffff     jmp 0x570c
0x000058fb      89d0           mov eax, edx
0x000058fd      e955f5ffff     jmp 0x4e57
0x00005902      0fb61c08       movzx ebx, byte [rax + rcx]
0x00005906      80fb3e         cmp bl, 0x3e
0x00005909      0f8771f8ffff   ja 0x5180
0x0000590f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00005919      480fa3d8       bt rax, rbx
0x0000591d      0f835df8ffff   jae 0x5180
0x00005923      807c240f00     cmp byte [rsp + 0xf], 0
0x00005928      0f85e4010000   jne 0x5b12                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000592e      4d39fd         cmp r13, r15
0x00005931      7605           jbe 0x5938
0x00005933      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00005938      498d4701       lea rax, [r15 + 1]
0x0000593c      4939c5         cmp r13, rax
0x0000593f      7606           jbe 0x5947
0x00005941      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00005947      498d4702       lea rax, [r15 + 2]
0x0000594b      4939c5         cmp r13, rax
0x0000594e      7606           jbe 0x5956
0x00005950      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00005956      498d4703       lea rax, [r15 + 3]
0x0000595a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000595d      7606           jbe 0x5965
0x0000595f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00005965      4983c704       add r15, 4
0x00005969      31d2           xor edx, edx
0x0000596b      4531e4         xor r12d, r12d
0x0000596e      31c0           xor eax, eax
0x00005970      4889cd         mov rbp, rcx
0x00005973      e9c0f1ffff     jmp 0x4b38
0x00005978      85db           test ebx, ebx
0x0000597a      0f8488010000   je 0x5b08
0x00005980      488d05170701.  lea rax, [0x0001609e]                   ; u"':*%\u6f6e\u2d6e\u6e69\u6574\u6567\u2072\u7261\u7567\u656d\u746e\u6400\u7669\u7369\u6f69\u206e\u7962\u7a20\u7265o<\u3d3c\u3d00=\u3d21\u3e00=>&|\u752f\u7273\u6c2f\u636f\u6c61\u732f\u6168\u6572\u6c2f\u636f\u6c61e\u2e38\u3133\u5000\u7561\u206c\u6745\u6567\u7472\u4a00\u6d61\u7365\u5920\u756f\u676e\u616dn\u694d\u656b"
0x00005987      c644240e01     mov byte [rsp + 0xe], 1
0x0000598c      c644247c00     mov byte [rsp + 0x7c], 0
0x00005991      4531e4         xor r12d, r12d
0x00005994      48c744245000.  mov qword [rsp + 0x50], 0
0x0000599d      c644240f01     mov byte [rsp + 0xf], 1
0x000059a2      c644240d00     mov byte [rsp + 0xd], 0
0x000059a7      48c744241801.  mov qword [rsp + 0x18], 1
0x000059b0      4531ff         xor r15d, r15d
0x000059b3      4889442448     mov qword [rsp + 0x48], rax
0x000059b8      e926f0ffff     jmp 0x49e3
0x000059bd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x000059c0      4c89dd         mov rbp, r11
0x000059c3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000059c8      e9ccfaffff     jmp 0x5499
0x000059cd      488d05770801.  lea rax, str.l______l                   ; 0x1624b ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000059d4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x000059d9      c644247c00     mov byte [rsp + 0x7c], 0
0x000059de      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x000059e1      48c744245000.  mov qword [rsp + 0x50], 0
0x000059ea      c644240f01     mov byte [rsp + 0xf], 1
0x000059ef      c644240d01     mov byte [rsp + 0xd], 1
0x000059f4      48c744241801.  mov qword [rsp + 0x18], 1
0x000059fd      4531ff         xor r15d, r15d
0x00005a00      4889442448     mov qword [rsp + 0x48], rax
0x00005a05      e9d9efffff     jmp 0x49e3
0x00005a0a      89d0           mov eax, edx
0x00005a0c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00005a11      4885db         test rbx, rbx
0x00005a14      742c           je 0x5a42
0x00005a16      84c0           test al, al
0x00005a18      7428           je 0x5a42
0x00005a1a      0fb60b         movzx ecx, byte [rbx]
0x00005a1d      4889d8         mov rax, rbx
0x00005a20      84c9           test cl, cl
0x00005a22      741e           je 0x5a42
0x00005a24      4c89fa         mov rdx, r15
0x00005a27      4c29f8         sub rax, r15
0x00005a2a      4939d5         cmp r13, rdx
0x00005a2d      7604           jbe 0x5a33
0x00005a2f      41880c16       mov byte [r14 + rdx], cl
0x00005a33      4883c201       add rdx, 1
0x00005a37      0fb60c10       movzx ecx, byte [rax + rdx]
0x00005a3b      84c9           test cl, cl
0x00005a3d      75eb           jne 0x5a2a
0x00005a3f      4989d7         mov r15, rdx
0x00005a42      4d39fd         cmp r13, r15
0x00005a45      0f869efaffff   jbe 0x54e9
0x00005a4b      43c6043e00     mov byte [r14 + r15], 0
0x00005a50      e994faffff     jmp 0x54e9
0x00005a55      837c240802     cmp dword [rsp + 8], 2
0x00005a5a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00005a5f      4c89dd         mov rbp, r11
0x00005a62      0f94c0         sete al
0x00005a65      885c240d       mov byte [rsp + 0xd], bl
0x00005a69      e92bfaffff     jmp 0x5499
0x00005a6e      8b742408       mov esi, dword [rsp + 8]
0x00005a72      4889cf         mov rdi, rcx
0x00005a75      e8a6edffff     call sym.gettext_quote.part.1
0x00005a7a      4889442468     mov qword [rsp + 0x68], rax
0x00005a7f      e952fcffff     jmp 0x56d6
0x00005a84      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00005a88      4889cf         mov rdi, rcx
0x00005a8b      e890edffff     call sym.gettext_quote.part.1
0x00005a90      4889442460     mov qword [rsp + 0x60], rax
0x00005a95      e967fcffff     jmp 0x5701
0x00005a9a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00005a9f      4c89dd         mov rbp, r11
0x00005aa2      89d0           mov eax, edx
0x00005aa4      885c240d       mov byte [rsp + 0xd], bl
0x00005aa8      e9ecf9ffff     jmp 0x5499
0x00005aad      4883ec08       sub rsp, 8
0x00005ab1      41b805000000   mov r8d, 5
0x00005ab7      4c89d9         mov rcx, r11
0x00005aba      ff742468       push qword [rsp + 0x68]
0x00005abe      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00005ac2      4c89f7         mov rdi, r14
0x00005ac5      ff742438       push qword [rsp + 0x38]
0x00005ac9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00005ad1      488b542430     mov rdx, qword [rsp + 0x30]
0x00005ad6      488b742470     mov rsi, qword [rsp + 0x70]
0x00005adb      e830eeffff     call sym.quotearg_buffer_restyled
0x00005ae0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00005ae4      4989c7         mov r15, rax
0x00005ae7      e9fdf9ffff     jmp 0x54e9
0x00005aec      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00005af1      e916ffffff     jmp 0x5a0c
0x00005af6      c74424080200.  mov dword [rsp + 8], 2
0x00005afe      e996f9ffff     jmp 0x5499
0x00005b03      e8c8bfffff     call sym.imp.__stack_chk_fail
0x00005b08      c644240d00     mov byte [rsp + 0xd], 0
0x00005b0d      e96ffaffff     jmp 0x5581
0x00005b12      4c89dd         mov rbp, r11
0x00005b15      e996f9ffff     jmp 0x54b0
0x00005b1a      c644240e01     mov byte [rsp + 0xe], 1
0x00005b1f      31c0           xor eax, eax
0x00005b21      4531e4         xor r12d, r12d
0x00005b24      48c744245000.  mov qword [rsp + 0x50], 0
0x00005b2d      e9a2f5ffff     jmp 0x50d4
0x00005b32      4c89ea         mov rdx, r13
0x00005b35      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00005b3a      e9f3f5ffff     jmp 0x5132
0x00005b3f      e89cbeffff     call sym.imp.abort
0x00005b44      6690           nop
0x00005b46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00005b50      4157           push r15
0x00005b52      4156           push r14
0x00005b54      4c63ff         movsxd r15, edi
0x00005b57      4155           push r13
0x00005b59      4154           push r12
0x00005b5b      4989d6         mov r14, rdx
0x00005b5e      55             push rbp
0x00005b5f      53             push rbx
0x00005b60      4889cd         mov rbp, rcx
0x00005b63      4883ec28       sub rsp, 0x28
0x00005b67      4889742408     mov qword [rsp + 8], rsi
0x00005b6c      e87fbeffff     call sym.imp.__errno_location
0x00005b71      4989c5         mov r13, rax
0x00005b74      8b00           mov eax, dword [rax]
0x00005b76      4585ff         test r15d, r15d
0x00005b79      488b1de05421.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x21b060:8]=0x21b070 obj.slotvec0 ; "p\xb0!"
0x00005b80      89442418       mov dword [rsp + 0x18], eax
0x00005b84      0f8867010000   js 0x5cf1
0x00005b8a      44393dc75421.  cmp dword [obj.nslots], r15d            ; [0x21b058:4]=1
0x00005b91      7f62           jg 0x5bf5
0x00005b93      4181ffffffff.  cmp r15d, 0x7fffffff
0x00005b9a      0f8456010000   je 0x5cf6
0x00005ba0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00005ba4      488d05c55421.  lea rax, obj.slotvec0                   ; 0x21b070
0x00005bab      4963f4         movsxd rsi, r12d
0x00005bae      48c1e604       shl rsi, 4
0x00005bb2      4839c3         cmp rbx, rax
0x00005bb5      0f8415010000   je 0x5cd0
0x00005bbb      4889df         mov rdi, rbx
0x00005bbe      e85d120000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00005bc3      4889c3         mov rbx, rax
0x00005bc6      488905935421.  mov qword [obj.slotvec], rax            ; [0x21b060:8]=0x21b070 obj.slotvec0 ; "p\xb0!"
0x00005bcd      48633d845421.  movsxd rdi, dword [obj.nslots]          ; [0x21b058:4]=1
0x00005bd4      4489e2         mov edx, r12d
0x00005bd7      31f6           xor esi, esi
0x00005bd9      29fa           sub edx, edi
0x00005bdb      48c1e704       shl rdi, 4
0x00005bdf      4863d2         movsxd rdx, edx
0x00005be2      4801df         add rdi, rbx
0x00005be5      48c1e204       shl rdx, 4
0x00005be9      e872bfffff     call sym.imp.memset
0x00005bee      448925635421.  mov dword [obj.nslots], r12d            ; [0x21b058:4]=1
0x00005bf5      8b4504         mov eax, dword [rbp + 4]
0x00005bf8      49c1e704       shl r15, 4
0x00005bfc      4883ec08       sub rsp, 8
0x00005c00      4c01fb         add rbx, r15
0x00005c03      4c8d7d08       lea r15, [rbp + 8]
0x00005c07      448b4500       mov r8d, dword [rbp]
0x00005c0b      4c8b1b         mov r11, qword [rbx]
0x00005c0e      4c8b6308       mov r12, qword [rbx + 8]
0x00005c12      4c89f1         mov rcx, r14
0x00005c15      83c801         or eax, 1
0x00005c18      89442424       mov dword [rsp + 0x24], eax
0x00005c1c      ff7530         push qword [rbp + 0x30]
0x00005c1f      4189c1         mov r9d, eax
0x00005c22      ff7528         push qword [rbp + 0x28]
0x00005c25      4157           push r15
0x00005c27      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00005c2a      488b542428     mov rdx, qword [rsp + 0x28]
0x00005c2f      4c89e7         mov rdi, r12
0x00005c32      4c895c2430     mov qword [rsp + 0x30], r11
0x00005c37      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00005c3c      4883c420       add rsp, 0x20
0x00005c40      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00005c45      4939c3         cmp r11, rax
0x00005c48      7767           ja 0x5cb1
0x00005c4a      488d7001       lea rsi, [rax + 1]
0x00005c4e      488d05ab5421.  lea rax, obj.slot0                      ; 0x21b100
0x00005c55      4939c4         cmp r12, rax
0x00005c58      488933         mov qword [rbx], rsi
0x00005c5b      7412           je 0x5c6f
0x00005c5d      4c89e7         mov rdi, r12
0x00005c60      4889742410     mov qword [rsp + 0x10], rsi
0x00005c65      e866bdffff     call sym.imp.free
0x00005c6a      488b742410     mov rsi, qword [rsp + 0x10]
0x00005c6f      4889f7         mov rdi, rsi
0x00005c72      4889742410     mov qword [rsp + 0x10], rsi
0x00005c77      e844110000     call sym.xmalloc
0x00005c7c      4883ec08       sub rsp, 8
0x00005c80      48894308       mov qword [rbx + 8], rax
0x00005c84      448b4500       mov r8d, dword [rbp]
0x00005c88      ff7530         push qword [rbp + 0x30]
0x00005c8b      ff7528         push qword [rbp + 0x28]
0x00005c8e      4c89f1         mov rcx, r14
0x00005c91      4157           push r15
0x00005c93      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00005c98      4889c7         mov rdi, rax
0x00005c9b      488b542428     mov rdx, qword [rsp + 0x28]
0x00005ca0      488b742430     mov rsi, qword [rsp + 0x30]
0x00005ca5      4989c4         mov r12, rax
0x00005ca8      e863ecffff     call sym.quotearg_buffer_restyled
0x00005cad      4883c420       add rsp, 0x20
0x00005cb1      8b442418       mov eax, dword [rsp + 0x18]
0x00005cb5      41894500       mov dword [r13], eax
0x00005cb9      4883c428       add rsp, 0x28
0x00005cbd      4c89e0         mov rax, r12
0x00005cc0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00005cc1      5d             pop rbp
0x00005cc2      415c           pop r12
0x00005cc4      415d           pop r13
0x00005cc6      415e           pop r14
0x00005cc8      415f           pop r15
0x00005cca      c3             ret
0x00005ccb      0f1f440000     nop dword [rax + rax]
0x00005cd0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00005cd2      e849110000     call sym.xrealloc
0x00005cd7      660f6f059153.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00005cdf      4889c3         mov rbx, rax
0x00005ce2      488905775321.  mov qword [obj.slotvec], rax            ; [0x21b060:8]=0x21b070 obj.slotvec0 ; "p\xb0!"
0x00005ce9      0f1100         movups xmmword [rax], xmm0
0x00005cec      e9dcfeffff     jmp 0x5bcd
0x00005cf1      e8eabcffff     call sym.imp.abort
0x00005cf6      e815130000     call sym.xalloc_die
0x00005cfb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00005d00      4154           push r12
0x00005d02      55             push rbp
0x00005d03      53             push rbx
0x00005d04      4889fb         mov rbx, rdi
0x00005d07      e8e4bcffff     call sym.imp.__errno_location
0x00005d0c      448b20         mov r12d, dword [rax]
0x00005d0f      4889c5         mov rbp, rax
0x00005d12      488d05e75421.  lea rax, obj.default_quoting_options    ; 0x21b200
0x00005d19      4885db         test rbx, rbx
0x00005d1c      be38000000     mov esi, 0x38                           ; '8'
0x00005d21      480f44d8       cmove rbx, rax
0x00005d25      4889df         mov rdi, rbx
0x00005d28      e893120000     call sym.xmemdup
0x00005d2d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00005d31      5b             pop rbx
0x00005d32      5d             pop rbp
0x00005d33      415c           pop r12
0x00005d35      c3             ret
0x00005d36      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00005d40      488d05b95421.  lea rax, obj.default_quoting_options    ; 0x21b200
0x00005d47      4885ff         test rdi, rdi
0x00005d4a      480f44f8       cmove rdi, rax
0x00005d4e      8b07           mov eax, dword [rdi]
0x00005d50      c3             ret
0x00005d51      0f1f440000     nop dword [rax + rax]
0x00005d56      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00005d60      488d05995421.  lea rax, obj.default_quoting_options    ; 0x21b200
0x00005d67      4885ff         test rdi, rdi
0x00005d6a      480f44f8       cmove rdi, rax
0x00005d6e      8937           mov dword [rdi], esi
0x00005d70      c3             ret
0x00005d71      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00005d76      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00005d80      488d05795421.  lea rax, obj.default_quoting_options    ; 0x21b200
0x00005d87      4885ff         test rdi, rdi
0x00005d8a      89f1           mov ecx, esi
0x00005d8c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00005d90      89f0           mov eax, esi
0x00005d92      83e11f         and ecx, 0x1f
0x00005d95      c0e805         shr al, 5
0x00005d98      0fb6c0         movzx eax, al
0x00005d9b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00005da0      8b37           mov esi, dword [rdi]
0x00005da2      89f0           mov eax, esi
0x00005da4      d3e8           shr eax, cl
0x00005da6      31c2           xor edx, eax
0x00005da8      83e001         and eax, 1
0x00005dab      83e201         and edx, 1
0x00005dae      d3e2           shl edx, cl
0x00005db0      31f2           xor edx, esi
0x00005db2      8917           mov dword [rdi], edx
0x00005db4      c3             ret
0x00005db5      90             nop
0x00005db6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00005dc0      488d05395421.  lea rax, obj.default_quoting_options    ; 0x21b200
0x00005dc7      4885ff         test rdi, rdi
0x00005dca      480f44f8       cmove rdi, rax
0x00005dce      8b4704         mov eax, dword [rdi + 4]
0x00005dd1      897704         mov dword [rdi + 4], esi
0x00005dd4      c3             ret
0x00005dd5      90             nop
0x00005dd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00005de0      488d05195421.  lea rax, obj.default_quoting_options    ; 0x21b200
0x00005de7      4885ff         test rdi, rdi
0x00005dea      480f44f8       cmove rdi, rax
0x00005dee      4885f6         test rsi, rsi
0x00005df1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00005df7      740e           je 0x5e07
0x00005df9      4885d2         test rdx, rdx
0x00005dfc      7409           je 0x5e07
0x00005dfe      48897728       mov qword [rdi + 0x28], rsi
0x00005e02      48895730       mov qword [rdi + 0x30], rdx
0x00005e06      c3             ret
0x00005e07      4883ec08       sub rsp, 8
0x00005e0b      e8d0bbffff     call sym.imp.abort
;-- quotearg_buffer:
0x00005e10      4157           push r15
0x00005e12      4156           push r14
0x00005e14      488d05e55321.  lea rax, obj.default_quoting_options    ; 0x21b200
0x00005e1b      4155           push r13
0x00005e1d      4154           push r12
0x00005e1f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00005e22      55             push rbp
0x00005e23      53             push rbx
0x00005e24      4c89c3         mov rbx, r8
0x00005e27      4989f6         mov r14, rsi
0x00005e2a      4989d7         mov r15, rdx
0x00005e2d      4883ec18       sub rsp, 0x18
0x00005e31      4d85c0         test r8, r8
0x00005e34      480f44d8       cmove rbx, rax
0x00005e38      48894c2408     mov qword [rsp + 8], rcx
0x00005e3d      e8aebbffff     call sym.imp.__errno_location
0x00005e42      448b20         mov r12d, dword [rax]
0x00005e45      4889c5         mov rbp, rax
0x00005e48      488d4308       lea rax, [rbx + 8]
0x00005e4c      4883ec08       sub rsp, 8
0x00005e50      448b4b04       mov r9d, dword [rbx + 4]
0x00005e54      ff7330         push qword [rbx + 0x30]
0x00005e57      448b03         mov r8d, dword [rbx]
0x00005e5a      ff7328         push qword [rbx + 0x28]
0x00005e5d      4c89fa         mov rdx, r15
0x00005e60      50             push rax
0x00005e61      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00005e66      4c89f6         mov rsi, r14
0x00005e69      4c89ef         mov rdi, r13
0x00005e6c      e89feaffff     call sym.quotearg_buffer_restyled
0x00005e71      44896500       mov dword [rbp], r12d
0x00005e75      4883c438       add rsp, 0x38
0x00005e79      5b             pop rbx
0x00005e7a      5d             pop rbp
0x00005e7b      415c           pop r12
0x00005e7d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00005e7f      415e           pop r14
0x00005e81      415f           pop r15
0x00005e83      c3             ret
0x00005e84      6690           nop
0x00005e86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00005e90      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00005e92      4156           push r14
0x00005e94      488d05655321.  lea rax, obj.default_quoting_options    ; 0x21b200
0x00005e9b      4155           push r13
0x00005e9d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00005e9f      4989d4         mov r12, rdx
0x00005ea2      55             push rbp
0x00005ea3      53             push rbx
0x00005ea4      4889cb         mov rbx, rcx
0x00005ea7      4989fe         mov r14, rdi
0x00005eaa      4989f7         mov r15, rsi
0x00005ead      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00005eb1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00005eb4      480f44d8       cmove rbx, rax
0x00005eb8      31ed           xor ebp, ebp
0x00005eba      e831bbffff     call sym.imp.__errno_location
0x00005ebf      4d85e4         test r12, r12
0x00005ec2      4989c5         mov r13, rax
0x00005ec5      8b00           mov eax, dword [rax]
0x00005ec7      400f94c5       sete bpl
0x00005ecb      0b6b04         or ebp, dword [rbx + 4]
0x00005ece      4c8d5308       lea r10, [rbx + 8]
0x00005ed2      4883ec08       sub rsp, 8
0x00005ed6      448b03         mov r8d, dword [rbx]
0x00005ed9      4c89f9         mov rcx, r15
0x00005edc      89442414       mov dword [rsp + 0x14], eax
0x00005ee0      ff7330         push qword [rbx + 0x30]
0x00005ee3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00005ee6      ff7328         push qword [rbx + 0x28]
0x00005ee9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00005eeb      31f6           xor esi, esi
0x00005eed      4189e9         mov r9d, ebp
0x00005ef0      31ff           xor edi, edi
0x00005ef2      4c89542440     mov qword [rsp + 0x40], r10
0x00005ef7      e814eaffff     call sym.quotearg_buffer_restyled
0x00005efc      488d7001       lea rsi, [rax + 1]
0x00005f00      4889442448     mov qword [rsp + 0x48], rax
0x00005f05      4883c420       add rsp, 0x20
0x00005f09      4889f7         mov rdi, rsi
0x00005f0c      4889742418     mov qword [rsp + 0x18], rsi
0x00005f11      e8aa0e0000     call sym.xmalloc
0x00005f16      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00005f1b      4883ec08       sub rsp, 8
0x00005f1f      ff7330         push qword [rbx + 0x30]
0x00005f22      ff7328         push qword [rbx + 0x28]
0x00005f25      4c8b542438     mov r10, qword [rsp + 0x38]
0x00005f2a      4189e9         mov r9d, ebp
0x00005f2d      448b03         mov r8d, dword [rbx]
0x00005f30      4c89f9         mov rcx, r15
0x00005f33      4c89f2         mov rdx, r14
0x00005f36      4889c7         mov rdi, rax
0x00005f39      4152           push r10
0x00005f3b      488b742438     mov rsi, qword [rsp + 0x38]
0x00005f40      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00005f45      8b44242c       mov eax, dword [rsp + 0x2c]
0x00005f49      4883c420       add rsp, 0x20
0x00005f4d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00005f50      41894500       mov dword [r13], eax
0x00005f54      7409           je 0x5f5f
0x00005f56      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00005f5b      4d891c24       mov qword [r12], r11
0x00005f5f      488b442410     mov rax, qword [rsp + 0x10]
0x00005f64      4883c438       add rsp, 0x38
0x00005f68      5b             pop rbx
0x00005f69      5d             pop rbp
0x00005f6a      415c           pop r12
0x00005f6c      415d           pop r13
0x00005f6e      415e           pop r14
0x00005f70      415f           pop r15
0x00005f72      c3             ret
0x00005f73      0f1f00         nop dword [rax]
0x00005f76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00005f80      4889d1         mov rcx, rdx
0x00005f83      31d2           xor edx, edx
0x00005f85      e906ffffff     jmp sym.quotearg_alloc_mem
0x00005f8a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00005f90      8b05c2502100   mov eax, dword [obj.nslots]             ; [0x21b058:4]=1
0x00005f96      4154           push r12
0x00005f98      4c8b25c15021.  mov r12, qword [obj.slotvec]            ; [0x21b060:8]=0x21b070 obj.slotvec0 ; "p\xb0!"
0x00005f9f      55             push rbp
0x00005fa0      53             push rbx
0x00005fa1      83f801         cmp eax, 1
0x00005fa4      7e2b           jle 0x5fd1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00005fa6      83e802         sub eax, 2
0x00005fa9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00005fae      48c1e004       shl rax, 4
0x00005fb2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00005fb7      660f1f840000.  nop word [rax + rax]
0x00005fc0      488b3b         mov rdi, qword [rbx]
0x00005fc3      4883c310       add rbx, 0x10
0x00005fc7      e804baffff     call sym.imp.free
0x00005fcc      4839eb         cmp rbx, rbp
0x00005fcf      75ef           jne 0x5fc0
0x00005fd1      498b7c2408     mov rdi, qword [r12 + 8]
0x00005fd6      488d1d235121.  lea rbx, obj.slot0                      ; 0x21b100
0x00005fdd      4839df         cmp rdi, rbx
0x00005fe0      7417           je 0x5ff9
0x00005fe2      e8e9b9ffff     call sym.imp.free
0x00005fe7      48c7057e5021.  mov qword [obj.slotvec0], 0x100         ; [0x21b070:8]=256
0x00005ff2      48891d7f5021.  mov qword [0x0021b078], rbx             ; [0x21b078:8]=0x21b100 obj.slot0
0x00005ff9      488d1d705021.  lea rbx, obj.slotvec0                   ; 0x21b070
0x00006000      4939dc         cmp r12, rbx
0x00006003      740f           je 0x6014
0x00006005      4c89e7         mov rdi, r12
0x00006008      e8c3b9ffff     call sym.imp.free
0x0000600d      48891d4c5021.  mov qword [obj.slotvec], rbx            ; [0x21b060:8]=0x21b070 obj.slotvec0 ; "p\xb0!"
0x00006014      5b             pop rbx
0x00006015      c70539502100.  mov dword [obj.nslots], 1               ; [0x21b058:4]=1
0x0000601f      5d             pop rbp
0x00006020      415c           pop r12
0x00006022      c3             ret
0x00006023      0f1f00         nop dword [rax]
0x00006026      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00006030      488d0dc95121.  lea rcx, obj.default_quoting_options    ; 0x21b200
0x00006037      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000603e      e90dfbffff     jmp sym.quotearg_n_options
0x00006043      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00006046      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00006050      488d0da95121.  lea rcx, obj.default_quoting_options    ; 0x21b200
0x00006057      e9f4faffff     jmp sym.quotearg_n_options
0x0000605c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00006060      488d0d995121.  lea rcx, obj.default_quoting_options    ; 0x21b200
0x00006067      4889fe         mov rsi, rdi
0x0000606a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00006071      31ff           xor edi, edi
0x00006073      e9d8faffff     jmp sym.quotearg_n_options
0x00006078      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00006080      488d0d795121.  lea rcx, obj.default_quoting_options    ; 0x21b200
0x00006087      4889f2         mov rdx, rsi
0x0000608a      4889fe         mov rsi, rdi
0x0000608d      31ff           xor edi, edi
0x0000608f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00006094      6690           nop
0x00006096      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x000060a0      4883ec48       sub rsp, 0x48
0x000060a4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x000060a7      64488b142528.  mov rdx, qword fs:[0x28]
0x000060b0      4889542438     mov qword [rsp + 0x38], rdx
0x000060b5      31d2           xor edx, edx
0x000060b7      83fe0a         cmp esi, 0xa
0x000060ba      7468           je 0x6124
0x000060bc      893424         mov dword [rsp], esi
0x000060bf      4889e1         mov rcx, rsp
0x000060c2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000060c9      4889c6         mov rsi, rax
0x000060cc      48c744240400.  mov qword [rsp + 4], 0
0x000060d5      48c744240c00.  mov qword [rsp + 0xc], 0
0x000060de      48c744241400.  mov qword [rsp + 0x14], 0
0x000060e7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000060f0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x000060f9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00006102      c74424340000.  mov dword [rsp + 0x34], 0
0x0000610a      e841faffff     call sym.quotearg_n_options
0x0000610f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00006114      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000611d      750a           jne 0x6129                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000611f      4883c448       add rsp, 0x48
0x00006123      c3             ret
0x00006124      e8b7b8ffff     call sym.imp.abort
0x00006129      e8a2b9ffff     call sym.imp.__stack_chk_fail
0x0000612e      6690           nop
;-- quotearg_n_style_mem:
0x00006130      4883ec48       sub rsp, 0x48
0x00006134      4889d0         mov rax, rdx
0x00006137      4889ca         mov rdx, rcx
0x0000613a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00006143      48894c2438     mov qword [rsp + 0x38], rcx
0x00006148      31c9           xor ecx, ecx
0x0000614a      83fe0a         cmp esi, 0xa
0x0000614d      7461           je 0x61b0
0x0000614f      893424         mov dword [rsp], esi
0x00006152      4889e1         mov rcx, rsp
0x00006155      4889c6         mov rsi, rax
0x00006158      48c744240400.  mov qword [rsp + 4], 0
0x00006161      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000616a      48c744241400.  mov qword [rsp + 0x14], 0
0x00006173      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000617c      48c744242400.  mov qword [rsp + 0x24], 0
0x00006185      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000618e      c74424340000.  mov dword [rsp + 0x34], 0
0x00006196      e8b5f9ffff     call sym.quotearg_n_options
0x0000619b      488b542438     mov rdx, qword [rsp + 0x38]
0x000061a0      644833142528.  xor rdx, qword fs:[0x28]
0x000061a9      750a           jne 0x61b5
0x000061ab      4883c448       add rsp, 0x48
0x000061af      c3             ret
0x000061b0      e82bb8ffff     call sym.imp.abort
0x000061b5      e816b9ffff     call sym.imp.__stack_chk_fail
0x000061ba      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000061c0      4889f2         mov rdx, rsi
0x000061c3      89fe           mov esi, edi
0x000061c5      31ff           xor edi, edi
0x000061c7      e9d4feffff     jmp sym.quotearg_n_style
0x000061cc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x000061d0      4889d1         mov rcx, rdx
0x000061d3      4889f2         mov rdx, rsi
0x000061d6      89fe           mov esi, edi
0x000061d8      31ff           xor edi, edi
0x000061da      e951ffffff     jmp sym.quotearg_n_style_mem
0x000061df      90             nop
;-- quotearg_char_mem:
0x000061e0      4883ec48       sub rsp, 0x48
0x000061e4      89d1           mov ecx, edx
0x000061e6      64488b042528.  mov rax, qword fs:[0x28]
0x000061ef      4889442438     mov qword [rsp + 0x38], rax
0x000061f4      31c0           xor eax, eax
0x000061f6      488b05335021.  mov rax, qword [0x0021b230]             ; [0x21b230:8]=0
0x000061fd      4989e0         mov r8, rsp
0x00006200      83e11f         and ecx, 0x1f
0x00006203      660f6f05f54f.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000620b      4889442430     mov qword [rsp + 0x30], rax
0x00006210      89d0           mov eax, edx
0x00006212      0f290424       movaps xmmword [rsp], xmm0
0x00006216      c0e805         shr al, 5
0x00006219      0fb6c0         movzx eax, al
0x0000621c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00006221      660f6f05e74f.  movdqa xmm0, xmmword [0x0021b210]
0x00006229      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000622e      660f6f05ea4f.  movdqa xmm0, xmmword [0x0021b220]
0x00006236      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000623b      418b11         mov edx, dword [r9]
0x0000623e      89d0           mov eax, edx
0x00006240      d3e8           shr eax, cl
0x00006242      f7d0           not eax
0x00006244      83e001         and eax, 1
0x00006247      d3e0           shl eax, cl
0x00006249      4c89c1         mov rcx, r8
0x0000624c      31d0           xor eax, edx
0x0000624e      4889f2         mov rdx, rsi
0x00006251      4889fe         mov rsi, rdi
0x00006254      418901         mov dword [r9], eax
0x00006257      31ff           xor edi, edi
0x00006259      e8f2f8ffff     call sym.quotearg_n_options
0x0000625e      488b742438     mov rsi, qword [rsp + 0x38]
0x00006263      644833342528.  xor rsi, qword fs:[0x28]
0x0000626c      7505           jne 0x6273
0x0000626e      4883c448       add rsp, 0x48
0x00006272      c3             ret
0x00006273      e858b8ffff     call sym.imp.__stack_chk_fail
0x00006278      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00006280      400fbed6       movsx edx, sil
0x00006284      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000628b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00006290      ba3a000000     mov edx, 0x3a                           ; ':'
0x00006295      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000629c      e93fffffff     jmp sym.quotearg_char_mem
0x000062a1      0f1f440000     nop dword [rax + rax]
0x000062a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000062b0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000062b5      e926ffffff     jmp sym.quotearg_char_mem
0x000062ba      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x000062c0      4883ec48       sub rsp, 0x48
0x000062c4      4889d0         mov rax, rdx
0x000062c7      64488b142528.  mov rdx, qword fs:[0x28]
0x000062d0      4889542438     mov qword [rsp + 0x38], rdx
0x000062d5      31d2           xor edx, edx
0x000062d7      83fe0a         cmp esi, 0xa
0x000062da      7468           je 0x6344
0x000062dc      893424         mov dword [rsp], esi
0x000062df      4889e1         mov rcx, rsp
0x000062e2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000062e9      4889c6         mov rsi, rax
0x000062ec      48c744240400.  mov qword [rsp + 4], 0
0x000062f5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x000062fe      48c744241400.  mov qword [rsp + 0x14], 0
0x00006307      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00006310      48c744242400.  mov qword [rsp + 0x24], 0
0x00006319      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00006322      c74424340000.  mov dword [rsp + 0x34], 0
0x0000632a      e821f8ffff     call sym.quotearg_n_options
0x0000632f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00006334      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000633d      750a           jne 0x6349
0x0000633f      4883c448       add rsp, 0x48
0x00006343      c3             ret
0x00006344      e897b6ffff     call sym.imp.abort
0x00006349      e882b7ffff     call sym.imp.__stack_chk_fail
0x0000634e      6690           nop
;-- quotearg_n_custom_mem:
0x00006350      4883ec48       sub rsp, 0x48
0x00006354      4989c9         mov r9, rcx
0x00006357      488b0dd24e21.  mov rcx, qword [0x0021b230]             ; [0x21b230:8]=0
0x0000635e      660f6f059a4e.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00006366      64488b042528.  mov rax, qword fs:[0x28]
0x0000636f      4889442438     mov qword [rsp + 0x38], rax
0x00006374      31c0           xor eax, eax
0x00006376      0f290424       movaps xmmword [rsp], xmm0
0x0000637a      4885f6         test rsi, rsi
0x0000637d      48894c2430     mov qword [rsp + 0x30], rcx
0x00006382      c704240a0000.  mov dword [rsp], 0xa
0x00006389      660f6f057f4e.  movdqa xmm0, xmmword [0x0021b210]
0x00006391      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00006396      660f6f05824e.  movdqa xmm0, xmmword [0x0021b220]
0x0000639e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000063a3      7432           je 0x63d7
0x000063a5      4885d2         test rdx, rdx
0x000063a8      742d           je 0x63d7
0x000063aa      4889742428     mov qword [rsp + 0x28], rsi
0x000063af      4889542430     mov qword [rsp + 0x30], rdx
0x000063b4      4889e1         mov rcx, rsp
0x000063b7      4c89c2         mov rdx, r8
0x000063ba      4c89ce         mov rsi, r9
0x000063bd      e88ef7ffff     call sym.quotearg_n_options
0x000063c2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000063c7      6448333c2528.  xor rdi, qword fs:[0x28]
0x000063d0      750a           jne 0x63dc
0x000063d2      4883c448       add rsp, 0x48
0x000063d6      c3             ret
0x000063d7      e804b6ffff     call sym.imp.abort
0x000063dc      e8efb6ffff     call sym.imp.__stack_chk_fail
0x000063e1      0f1f440000     nop dword [rax + rax]
0x000063e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x000063f0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000063f7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x000063fc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00006400      4889d1         mov rcx, rdx
0x00006403      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000640a      4889f2         mov rdx, rsi
0x0000640d      4889fe         mov rsi, rdi
0x00006410      31ff           xor edi, edi
0x00006412      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00006417      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00006420      4989c8         mov r8, rcx
0x00006423      4889d1         mov rcx, rdx
0x00006426      4889f2         mov rdx, rsi
0x00006429      4889fe         mov rsi, rdi
0x0000642c      31ff           xor edi, edi
0x0000642e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00006433      0f1f00         nop dword [rax]
0x00006436      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00006440      488d0dd94b21.  lea rcx, obj.quote_quoting_options      ; 0x21b020
0x00006447      e904f7ffff     jmp sym.quotearg_n_options
0x0000644c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00006450      488d0dc94b21.  lea rcx, obj.quote_quoting_options      ; 0x21b020
0x00006457      4889f2         mov rdx, rsi
0x0000645a      4889fe         mov rsi, rdi
0x0000645d      31ff           xor edi, edi
0x0000645f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00006464      6690           nop
0x00006466      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00006470      488d0da94b21.  lea rcx, obj.quote_quoting_options      ; 0x21b020
0x00006477      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000647e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00006483      0f1f00         nop dword [rax]
0x00006486      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00006490      488d0d894b21.  lea rcx, obj.quote_quoting_options      ; 0x21b020
0x00006497      4889fe         mov rsi, rdi
0x0000649a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000064a1      31ff           xor edi, edi
0x000064a3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000064a8      0f1f84000000.  nop dword [rax + rax]
;-- strnlen1:
0x000064b0      55             push rbp                                ; ../coreutils-8.31/lib/strnlen1.c:29
0x000064b1      53             push rbx
0x000064b2      4889f2         mov rdx, rsi                            ; ../coreutils-8.31/lib/strnlen1.c:30
0x000064b5      4889f3         mov rbx, rsi                            ; ../coreutils-8.31/lib/strnlen1.c:29
0x000064b8      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/strnlen1.c:30
0x000064ba      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/strnlen1.c:29
0x000064bd      4883ec08       sub rsp, 8
0x000064c1      e8bab6ffff     call sym.imp.memchr                     ; ../coreutils-8.31/lib/strnlen1.c:30
0x000064c6      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/strnlen1.c:32
0x000064c9      4829ea         sub rdx, rbp
0x000064cc      4883c201       add rdx, 1
0x000064d0      4885c0         test rax, rax
0x000064d3      4889d8         mov rax, rbx
0x000064d6      480f45c2       cmovne rax, rdx
0x000064da      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/strnlen1.c:35
0x000064de      5b             pop rbx
0x000064df      5d             pop rbp
0x000064e0      c3             ret
0x000064e1      662e0f1f8400.  nop word cs:[rax + rax]
0x000064eb      0f1f440000     nop dword [rax + rax]
;-- strintcmp:
0x000064f0      440fb607       movzx r8d, byte [rdi]                   ; ../coreutils-8.31/lib/strintcmp.c:30
0x000064f4      0fb616         movzx edx, byte [rsi]
0x000064f7      4180f82d       cmp r8b, 0x2d
0x000064fb      0f849f000000   je 0x65a0
0x00006501      80fa2d         cmp dl, 0x2d
0x00006504      0f84de000000   je 0x65e8
0x0000650a      660f1f440000   nop word [rax + rax]
0x00006510      4180f830       cmp r8b, 0x30
0x00006514      0f848e010000   je 0x66a8
0x0000651a      80fa30         cmp dl, 0x30
0x0000651d      0f8475010000   je 0x6698
0x00006523      0fb6c2         movzx eax, dl
0x00006526      4438c2         cmp dl, r8b
0x00006529      8d48d0         lea ecx, [rax - 0x30]
0x0000652c      0f8596010000   jne 0x66c8
0x00006532      83f909         cmp ecx, 9
0x00006535      0f8725020000   ja 0x6760
0x0000653b      4883c701       add rdi, 1
0x0000653f      4883c601       add rsi, 1
0x00006543      0fb606         movzx eax, byte [rsi]
0x00006546      440fb607       movzx r8d, byte [rdi]
0x0000654a      89c2           mov edx, eax
0x0000654c      8d48d0         lea ecx, [rax - 0x30]
0x0000654f      4138c0         cmp r8b, al
0x00006552      0f8570010000   jne 0x66c8
0x00006558      83f909         cmp ecx, 9
0x0000655b      76de           jbe 0x653b
0x0000655d      410fb6d0       movzx edx, r8b
0x00006561      4531c9         xor r9d, r9d
0x00006564      83f909         cmp ecx, 9
0x00006567      0f87f3010000   ja 0x6760
0x0000656d      0f1f00         nop dword [rax]
0x00006570      31c9           xor ecx, ecx
0x00006572      660f1f440000   nop word [rax + rax]
0x00006578      0fb6440e01     movzx eax, byte [rsi + rcx + 1]
0x0000657d      4883c101       add rcx, 1
0x00006581      83e830         sub eax, 0x30
0x00006584      83f809         cmp eax, 9
0x00006587      76ef           jbe 0x6578
0x00006589      4939c9         cmp r9, rcx
0x0000658c      0f84d1010000   je 0x6763
0x00006592      19c0           sbb eax, eax
0x00006594      83c801         or eax, 1
0x00006597      c3             ret
0x00006598      0f1f84000000.  nop dword [rax + rax]
0x000065a0      4883c701       add rdi, 1
0x000065a4      0fb60f         movzx ecx, byte [rdi]
0x000065a7      80f930         cmp cl, 0x30
0x000065aa      74f4           je 0x65a0
0x000065ac      0fb6c1         movzx eax, cl
0x000065af      80fa2d         cmp dl, 0x2d
0x000065b2      448d40d0       lea r8d, [rax - 0x30]
0x000065b6      7468           je 0x6620
0x000065b8      4183f809       cmp r8d, 9
0x000065bc      0f86cc010000   jbe 0x678e
0x000065c2      660f1f440000   nop word [rax + rax]
0x000065c8      80fa30         cmp dl, 0x30
0x000065cb      0f84e7000000   je 0x66b8
0x000065d1      83ea30         sub edx, 0x30
0x000065d4      4531c9         xor r9d, r9d
0x000065d7      83fa09         cmp edx, 9
0x000065da      410f96c1       setbe r9b
0x000065de      4489c8         mov eax, r9d
0x000065e1      f7d8           neg eax
0x000065e3      c3             ret
0x000065e4      0f1f4000       nop dword [rax]
0x000065e8      4883c601       add rsi, 1
0x000065ec      0fb606         movzx eax, byte [rsi]
0x000065ef      3c30           cmp al, 0x30
0x000065f1      74f5           je 0x65e8
0x000065f3      8d50d0         lea edx, [rax - 0x30]
0x000065f6      b801000000     mov eax, 1
0x000065fb      83fa09         cmp edx, 9
0x000065fe      0f86ff000000   jbe 0x6703
0x00006604      4180f830       cmp r8b, 0x30
0x00006608      0f84fa000000   je 0x6708
0x0000660e      4183e830       sub r8d, 0x30
0x00006612      31c0           xor eax, eax
0x00006614      4183f809       cmp r8d, 9
0x00006618      0f96c0         setbe al
0x0000661b      c3             ret
0x0000661c      0f1f4000       nop dword [rax]
0x00006620      4883c601       add rsi, 1
0x00006624      440fb60e       movzx r9d, byte [rsi]
0x00006628      4180f930       cmp r9b, 0x30
0x0000662c      74f2           je 0x6620
0x0000662e      4438c9         cmp cl, r9b
0x00006631      0f853d010000   jne 0x6774
0x00006637      4183f809       cmp r8d, 9
0x0000663b      8d50d0         lea edx, [rax - 0x30]
0x0000663e      7721           ja 0x6661
0x00006640      4883c701       add rdi, 1
0x00006644      4883c601       add rsi, 1
0x00006648      0fb606         movzx eax, byte [rsi]
0x0000664b      0fb60f         movzx ecx, byte [rdi]
0x0000664e      4189c1         mov r9d, eax
0x00006651      8d50d0         lea edx, [rax - 0x30]
0x00006654      38c1           cmp cl, al
0x00006656      0f85bc000000   jne 0x6718
0x0000665c      83fa09         cmp edx, 9
0x0000665f      76df           jbe 0x6640
0x00006661      4531d2         xor r10d, r10d
0x00006664      83fa09         cmp edx, 9
0x00006667      0f87f3000000   ja 0x6760
0x0000666d      31d2           xor edx, edx
0x0000666f      90             nop
0x00006670      0fb6441601     movzx eax, byte [rsi + rdx + 1]
0x00006675      4883c201       add rdx, 1
0x00006679      83e830         sub eax, 0x30
0x0000667c      83f809         cmp eax, 9
0x0000667f      76ef           jbe 0x6670
0x00006681      4939d2         cmp r10, rdx
0x00006684      0f84f3000000   je 0x677d
0x0000668a      19c0           sbb eax, eax
0x0000668c      83e002         and eax, 2
0x0000668f      83e801         sub eax, 1
0x00006692      c3             ret
0x00006693      0f1f440000     nop dword [rax + rax]
0x00006698      4883c601       add rsi, 1
0x0000669c      0fb616         movzx edx, byte [rsi]
0x0000669f      e976feffff     jmp 0x651a
0x000066a4      0f1f4000       nop dword [rax]
0x000066a8      4883c701       add rdi, 1
0x000066ac      440fb607       movzx r8d, byte [rdi]
0x000066b0      e95bfeffff     jmp 0x6510
0x000066b5      0f1f00         nop dword [rax]
0x000066b8      4883c601       add rsi, 1
0x000066bc      0fb616         movzx edx, byte [rsi]
0x000066bf      e904ffffff     jmp 0x65c8
0x000066c4      0f1f4000       nop dword [rax]
0x000066c8      410fb6c0       movzx eax, r8b
0x000066cc      83e830         sub eax, 0x30
0x000066cf      83f809         cmp eax, 9
0x000066d2      0f8789feffff   ja 0x6561
0x000066d8      4531c9         xor r9d, r9d
0x000066db      0f1f440000     nop dword [rax + rax]
0x000066e0      420fb6440f01   movzx eax, byte [rdi + r9 + 1]
0x000066e6      4983c101       add r9, 1
0x000066ea      83e830         sub eax, 0x30
0x000066ed      83f809         cmp eax, 9
0x000066f0      76ee           jbe 0x66e0
0x000066f2      83f909         cmp ecx, 9
0x000066f5      0f8675feffff   jbe 0x6570
0x000066fb      31c0           xor eax, eax
0x000066fd      4d85c9         test r9, r9
0x00006700      0f95c0         setne al
0x00006703      f3c3           ret
0x00006705      0f1f00         nop dword [rax]
0x00006708      4883c701       add rdi, 1
0x0000670c      440fb607       movzx r8d, byte [rdi]
0x00006710      e9effeffff     jmp 0x6604
0x00006715      0f1f00         nop dword [rax]
0x00006718      440fb6c1       movzx r8d, cl
0x0000671c      4183e830       sub r8d, 0x30
0x00006720      4183f809       cmp r8d, 9
0x00006724      0f8737ffffff   ja 0x6661
0x0000672a      4531d2         xor r10d, r10d
0x0000672d      0f1f00         nop dword [rax]
0x00006730      420fb6441701   movzx eax, byte [rdi + r10 + 1]
0x00006736      4983c201       add r10, 1
0x0000673a      83e830         sub eax, 0x30
0x0000673d      83f809         cmp eax, 9
0x00006740      76ee           jbe 0x6730
0x00006742      83fa09         cmp edx, 9
0x00006745      0f8622ffffff   jbe 0x666d
0x0000674b      31c0           xor eax, eax
0x0000674d      4d85d2         test r10, r10
0x00006750      0f95c0         setne al
0x00006753      f7d8           neg eax
0x00006755      c3             ret
0x00006756      662e0f1f8400.  nop word cs:[rax + rax]
0x00006760      31c0           xor eax, eax
0x00006762      c3             ret
0x00006763      31c0           xor eax, eax
0x00006765      4d85c9         test r9, r9
0x00006768      7499           je 0x6703
0x0000676a      450fb6c8       movzx r9d, r8b
0x0000676e      4489c8         mov eax, r9d
0x00006771      29d0           sub eax, edx
0x00006773      c3             ret
0x00006774      410fb6c1       movzx eax, r9b
0x00006778      8d50d0         lea edx, [rax - 0x30]
0x0000677b      eba3           jmp 0x6720
0x0000677d      31c0           xor eax, eax
0x0000677f      4d85d2         test r10, r10
0x00006782      0f847bffffff   je 0x6703
0x00006788      4489c8         mov eax, r9d
0x0000678b      29c8           sub eax, ecx
0x0000678d      c3             ret
0x0000678e      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006793      c3             ret
0x00006794      662e0f1f8400.  nop word cs:[rax + rax]
0x0000679e      6690           nop
;-- version_etc_arn:
0x000067a0      4157           push r15
0x000067a2      4156           push r14
0x000067a4      4155           push r13
0x000067a6      4154           push r12
0x000067a8      4d89cc         mov r12, r9
0x000067ab      55             push rbp
0x000067ac      53             push rbx
0x000067ad      4889fd         mov rbp, rdi
0x000067b0      4c89c3         mov rbx, r8
0x000067b3      4883ec28       sub rsp, 0x28
0x000067b7      4885f6         test rsi, rsi
0x000067ba      0f8418010000   je 0x68d8
0x000067c0      4989d0         mov r8, rdx
0x000067c3      488d153eff00.  lea rdx, [0x00016708]                   ; "%s (%s) %s\n"
0x000067ca      4989c9         mov r9, rcx
0x000067cd      31c0           xor eax, eax
0x000067cf      4889f1         mov rcx, rsi
0x000067d2      be01000000     mov esi, 1
0x000067d7      e8a4b5ffff     call sym.imp.__fprintf_chk
0x000067dc      488d3538ff00.  lea rsi, [0x0001671b]                   ; "(C)"
0x000067e3      31ff           xor edi, edi
0x000067e5      ba05000000     mov edx, 5
0x000067ea      e8a1b2ffff     call sym.imp.dcgettext
0x000067ef      488d154a0201.  lea rdx, obj.version_etc_copyright      ; 0x16a40 ; "Copyright %s %d Free Software Foundation, Inc."
0x000067f6      4889c1         mov rcx, rax
0x000067f9      41b8e3070000   mov r8d, 0x7e3
0x000067ff      be01000000     mov esi, 1
0x00006804      4889ef         mov rdi, rbp
0x00006807      31c0           xor eax, eax
0x00006809      e872b5ffff     call sym.imp.__fprintf_chk
0x0000680e      488d3593ff00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x167a8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00006815      31ff           xor edi, edi
0x00006817      ba05000000     mov edx, 5
0x0000681c      e86fb2ffff     call sym.imp.dcgettext
0x00006821      4889ee         mov rsi, rbp
0x00006824      4889c7         mov rdi, rax
0x00006827      e884b3ffff     call sym.imp.fputs_unlocked
0x0000682c      4983fc09       cmp r12, 9
0x00006830      0f873a030000   ja 0x6b70
0x00006836      488d15c70101.  lea rdx, [0x00016a04]
0x0000683d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00006841      4801d0         add rax, rdx
0x00006844      ffe0           jmp rax
0x00006846      662e0f1f8400.  nop word cs:[rax + rax]
0x00006850      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006854      488b4310       mov rax, qword [rbx + 0x10]
0x00006858      488d35b90001.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x16918 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000685f      4c8b4308       mov r8, qword [rbx + 8]
0x00006863      ba05000000     mov edx, 5
0x00006868      31ff           xor edi, edi
0x0000686a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000686e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006872      4c894c2410     mov qword [rsp + 0x10], r9
0x00006877      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000687b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000687f      48890424       mov qword [rsp], rax
0x00006883      4c89442408     mov qword [rsp + 8], r8
0x00006888      488b1b         mov rbx, qword [rbx]
0x0000688b      e800b2ffff     call sym.imp.dcgettext
0x00006890      4883ec08       sub rsp, 8
0x00006894      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00006899      4889c2         mov rdx, rax
0x0000689c      4889d9         mov rcx, rbx
0x0000689f      be01000000     mov esi, 1
0x000068a4      4889ef         mov rdi, rbp
0x000068a7      31c0           xor eax, eax
0x000068a9      4151           push r9
0x000068ab      4155           push r13
0x000068ad      4154           push r12
0x000068af      4157           push r15
0x000068b1      4156           push r14
0x000068b3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000068b8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000068bd      e8beb4ffff     call sym.imp.__fprintf_chk
0x000068c2      4883c430       add rsp, 0x30
0x000068c6      4883c428       add rsp, 0x28
0x000068ca      5b             pop rbx
0x000068cb      5d             pop rbp
0x000068cc      415c           pop r12
0x000068ce      415d           pop r13
0x000068d0      415e           pop r14
0x000068d2      415f           pop r15
0x000068d4      c3             ret
0x000068d5      0f1f00         nop dword [rax]
0x000068d8      4989c8         mov r8, rcx
0x000068db      4889d1         mov rcx, rdx
0x000068de      488d152ffe00.  lea rdx, str.s__s                       ; 0x16714 ; "%s %s\n"
0x000068e5      be01000000     mov esi, 1
0x000068ea      31c0           xor eax, eax
0x000068ec      e88fb4ffff     call sym.imp.__fprintf_chk
0x000068f1      e9e6feffff     jmp 0x67dc
0x000068f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00006900      4c8b5340       mov r10, qword [rbx + 0x40]
0x00006904      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006908      488d35390001.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x16948 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000690f      488b4310       mov rax, qword [rbx + 0x10]
0x00006913      4c8b4308       mov r8, qword [rbx + 8]
0x00006917      ba05000000     mov edx, 5
0x0000691c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006920      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006924      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006928      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000692c      488b1b         mov rbx, qword [rbx]
0x0000692f      4c89542418     mov qword [rsp + 0x18], r10
0x00006934      4c894c2410     mov qword [rsp + 0x10], r9
0x00006939      48890424       mov qword [rsp], rax
0x0000693d      4c89442408     mov qword [rsp + 8], r8
0x00006942      31ff           xor edi, edi
0x00006944      e847b1ffff     call sym.imp.dcgettext
0x00006949      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000694e      4152           push r10
0x00006950      e93fffffff     jmp 0x6894
0x00006955      0f1f00         nop dword [rax]
0x00006958      488b1b         mov rbx, qword [rbx]
0x0000695b      488d35bdfd00.  lea rsi, str.Written_by__s.             ; 0x1671f ; "Written by %s.\n"
0x00006962      ba05000000     mov edx, 5
0x00006967      31ff           xor edi, edi
0x00006969      e822b1ffff     call sym.imp.dcgettext
0x0000696e      4883c428       add rsp, 0x28
0x00006972      4889d9         mov rcx, rbx
0x00006975      4889ef         mov rdi, rbp
0x00006978      5b             pop rbx
0x00006979      5d             pop rbp
0x0000697a      415c           pop r12
0x0000697c      415d           pop r13
0x0000697e      415e           pop r14
0x00006980      415f           pop r15
0x00006982      4889c2         mov rdx, rax
0x00006985      be01000000     mov esi, 1
0x0000698a      31c0           xor eax, eax
0x0000698c      e9efb3ffff     jmp sym.imp.__fprintf_chk
0x00006991      0f1f80000000.  nop dword [rax]
0x00006998      4c8b6308       mov r12, qword [rbx + 8]
0x0000699c      488d358cfd00.  lea rsi, str.Written_by__s_and__s.      ; 0x1672f ; "Written by %s and %s.\n"
0x000069a3      488b1b         mov rbx, qword [rbx]
0x000069a6      ba05000000     mov edx, 5
0x000069ab      31ff           xor edi, edi
0x000069ad      e8deb0ffff     call sym.imp.dcgettext
0x000069b2      4883c428       add rsp, 0x28
0x000069b6      4d89e0         mov r8, r12
0x000069b9      4889d9         mov rcx, rbx
0x000069bc      4889ef         mov rdi, rbp
0x000069bf      4889c2         mov rdx, rax
0x000069c2      be01000000     mov esi, 1
0x000069c7      5b             pop rbx
0x000069c8      5d             pop rbp
0x000069c9      415c           pop r12
0x000069cb      415d           pop r13
0x000069cd      415e           pop r14
0x000069cf      415f           pop r15
0x000069d1      31c0           xor eax, eax
0x000069d3      e9a8b3ffff     jmp sym.imp.__fprintf_chk
0x000069d8      0f1f84000000.  nop dword [rax + rax]
0x000069e0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000069e4      4c8b6308       mov r12, qword [rbx + 8]
0x000069e8      488d3557fd00.  lea rsi, str.Written_by__s___s__and__s. ; 0x16746 ; "Written by %s, %s, and %s.\n"
0x000069ef      488b1b         mov rbx, qword [rbx]
0x000069f2      ba05000000     mov edx, 5
0x000069f7      31ff           xor edi, edi
0x000069f9      e892b0ffff     call sym.imp.dcgettext
0x000069fe      4883c428       add rsp, 0x28
0x00006a02      4d89e9         mov r9, r13
0x00006a05      4d89e0         mov r8, r12
0x00006a08      4889d9         mov rcx, rbx
0x00006a0b      4889ef         mov rdi, rbp
0x00006a0e      4889c2         mov rdx, rax
0x00006a11      5b             pop rbx
0x00006a12      5d             pop rbp
0x00006a13      415c           pop r12
0x00006a15      415d           pop r13
0x00006a17      415e           pop r14
0x00006a19      415f           pop r15
0x00006a1b      be01000000     mov esi, 1
0x00006a20      31c0           xor eax, eax
0x00006a22      e959b3ffff     jmp sym.imp.__fprintf_chk
0x00006a27      660f1f840000.  nop word [rax + rax]
0x00006a30      488d3541fe00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x16878 ; "Written by %s, %s, %s,\nand %s.\n"
0x00006a37      ba05000000     mov edx, 5
0x00006a3c      31ff           xor edi, edi
0x00006a3e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006a42      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006a46      4c8b6308       mov r12, qword [rbx + 8]
0x00006a4a      488b1b         mov rbx, qword [rbx]
0x00006a4d      e83eb0ffff     call sym.imp.dcgettext
0x00006a52      4883ec08       sub rsp, 8
0x00006a56      4156           push r14
0x00006a58      4889c2         mov rdx, rax
0x00006a5b      4d89e9         mov r9, r13
0x00006a5e      4d89e0         mov r8, r12
0x00006a61      4889d9         mov rcx, rbx
0x00006a64      4889ef         mov rdi, rbp
0x00006a67      be01000000     mov esi, 1
0x00006a6c      31c0           xor eax, eax
0x00006a6e      e80db3ffff     call sym.imp.__fprintf_chk
0x00006a73      58             pop rax
0x00006a74      5a             pop rdx
0x00006a75      4883c428       add rsp, 0x28
0x00006a79      5b             pop rbx
0x00006a7a      5d             pop rbp
0x00006a7b      415c           pop r12
0x00006a7d      415d           pop r13
0x00006a7f      415e           pop r14
0x00006a81      415f           pop r15
0x00006a83      c3             ret
0x00006a84      0f1f4000       nop dword [rax]
0x00006a88      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006a8c      488d3505fe00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x16898 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00006a93      ba05000000     mov edx, 5
0x00006a98      31ff           xor edi, edi
0x00006a9a      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006a9e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006aa2      4c8b6308       mov r12, qword [rbx + 8]
0x00006aa6      488b1b         mov rbx, qword [rbx]
0x00006aa9      e8e2afffff     call sym.imp.dcgettext
0x00006aae      4157           push r15
0x00006ab0      eba4           jmp 0x6a56
0x00006ab2      660f1f440000   nop word [rax + rax]
0x00006ab8      4c8b4308       mov r8, qword [rbx + 8]
0x00006abc      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006ac0      488d35f9fd00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x168c0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00006ac7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006acb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006acf      ba05000000     mov edx, 5
0x00006ad4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006ad8      31ff           xor edi, edi
0x00006ada      488b1b         mov rbx, qword [rbx]
0x00006add      4c890424       mov qword [rsp], r8
0x00006ae1      e8aaafffff     call sym.imp.dcgettext
0x00006ae6      4883ec08       sub rsp, 8
0x00006aea      4d89e9         mov r9, r13
0x00006aed      4154           push r12
0x00006aef      4157           push r15
0x00006af1      4156           push r14
0x00006af3      4c8b442420     mov r8, qword [rsp + 0x20]
0x00006af8      4889d9         mov rcx, rbx
0x00006afb      4889c2         mov rdx, rax
0x00006afe      4889ef         mov rdi, rbp
0x00006b01      be01000000     mov esi, 1
0x00006b06      31c0           xor eax, eax
0x00006b08      e873b2ffff     call sym.imp.__fprintf_chk
0x00006b0d      4883c420       add rsp, 0x20
0x00006b11      4883c428       add rsp, 0x28
0x00006b15      5b             pop rbx
0x00006b16      5d             pop rbp
0x00006b17      415c           pop r12
0x00006b19      415d           pop r13
0x00006b1b      415e           pop r14
0x00006b1d      415f           pop r15
0x00006b1f      c3             ret
0x00006b20      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00006b24      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006b28      488d35b9fd00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x168e8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00006b2f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006b33      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006b37      ba05000000     mov edx, 5
0x00006b3c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006b40      4c8b4308       mov r8, qword [rbx + 8]
0x00006b44      31ff           xor edi, edi
0x00006b46      4c894c2408     mov qword [rsp + 8], r9
0x00006b4b      488b1b         mov rbx, qword [rbx]
0x00006b4e      4c890424       mov qword [rsp], r8
0x00006b52      e839afffff     call sym.imp.dcgettext
0x00006b57      4155           push r13
0x00006b59      4154           push r12
0x00006b5b      4157           push r15
0x00006b5d      4156           push r14
0x00006b5f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00006b64      eb8d           jmp 0x6af3
0x00006b66      662e0f1f8400.  nop word cs:[rax + rax]
0x00006b70      4c8b5340       mov r10, qword [rbx + 0x40]
0x00006b74      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006b78      ba05000000     mov edx, 5
0x00006b7d      488b4310       mov rax, qword [rbx + 0x10]
0x00006b81      4c8b4308       mov r8, qword [rbx + 8]
0x00006b85      488d35f4fd00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x16980 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00006b8c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006b90      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006b94      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006b98      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006b9c      4c89542418     mov qword [rsp + 0x18], r10
0x00006ba1      4c894c2410     mov qword [rsp + 0x10], r9
0x00006ba6      48890424       mov qword [rsp], rax
0x00006baa      4c89442408     mov qword [rsp + 8], r8
0x00006baf      488b1b         mov rbx, qword [rbx]
0x00006bb2      e98bfdffff     jmp 0x6942
0x00006bb7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00006bc0      4531c9         xor r9d, r9d
0x00006bc3      49833800       cmp qword [r8], 0
0x00006bc7      7412           je 0x6bdb
0x00006bc9      0f1f80000000.  nop dword [rax]
0x00006bd0      4983c101       add r9, 1
0x00006bd4      4b833cc800     cmp qword [r8 + r9*8], 0
0x00006bd9      75f5           jne 0x6bd0
0x00006bdb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00006be0      4883ec68       sub rsp, 0x68
0x00006be4      4d89c2         mov r10, r8
0x00006be7      4531c9         xor r9d, r9d
0x00006bea      64488b042528.  mov rax, qword fs:[0x28]
0x00006bf3      4889442458     mov qword [rsp + 0x58], rax
0x00006bf8      31c0           xor eax, eax
0x00006bfa      4989e0         mov r8, rsp
0x00006bfd      0f1f00         nop dword [rax]
0x00006c00      418b02         mov eax, dword [r10]
0x00006c03      83f82f         cmp eax, 0x2f
0x00006c06      7742           ja 0x6c4a
0x00006c08      4189c3         mov r11d, eax
0x00006c0b      4d035a10       add r11, qword [r10 + 0x10]
0x00006c0f      83c008         add eax, 8
0x00006c12      418902         mov dword [r10], eax
0x00006c15      498b03         mov rax, qword [r11]
0x00006c18      4885c0         test rax, rax
0x00006c1b      4b8904c8       mov qword [r8 + r9*8], rax
0x00006c1f      740a           je 0x6c2b
0x00006c21      4983c101       add r9, 1
0x00006c25      4983f90a       cmp r9, 0xa
0x00006c29      75d5           jne 0x6c00
0x00006c2b      e870fbffff     call sym.version_etc_arn
0x00006c30      488b442458     mov rax, qword [rsp + 0x58]
0x00006c35      644833042528.  xor rax, qword fs:[0x28]
0x00006c3e      7505           jne 0x6c45
0x00006c40      4883c468       add rsp, 0x68
0x00006c44      c3             ret
0x00006c45      e886aeffff     call sym.imp.__stack_chk_fail
0x00006c4a      4d8b5a08       mov r11, qword [r10 + 8]
0x00006c4e      498d4308       lea rax, [r11 + 8]
0x00006c52      49894208       mov qword [r10 + 8], rax
0x00006c56      ebbd           jmp 0x6c15
0x00006c58      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00006c60      55             push rbp
0x00006c61      53             push rbx
0x00006c62      41ba20000000   mov r10d, 0x20                          ; "@"
0x00006c68      4531db         xor r11d, r11d
0x00006c6b      4881ecb80000.  sub rsp, 0xb8
0x00006c72      64488b042528.  mov rax, qword fs:[0x28]
0x00006c7b      4889442478     mov qword [rsp + 0x78], rax
0x00006c80      31c0           xor eax, eax
0x00006c82      488d8424d000.  lea rax, [rsp + 0xd0]
0x00006c8a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00006c92      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00006c9a      4c8d442420     lea r8, [rsp + 0x20]
0x00006c9f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00006ca7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00006caf      4889442410     mov qword [rsp + 0x10], rax
0x00006cb4      488d84248000.  lea rax, [rsp + 0x80]
0x00006cbc      4531c9         xor r9d, r9d
0x00006cbf      4889442418     mov qword [rsp + 0x18], rax
0x00006cc4      4889c5         mov rbp, rax
0x00006cc7      660f1f840000.  nop word [rax + rax]
0x00006cd0      4183fa2f       cmp r10d, 0x2f
0x00006cd4      7756           ja 0x6d2c
0x00006cd6      4489d0         mov eax, r10d
0x00006cd9      41bb01000000   mov r11d, 1
0x00006cdf      4183c208       add r10d, 8
0x00006ce3      4801e8         add rax, rbp
0x00006ce6      488b00         mov rax, qword [rax]
0x00006ce9      4885c0         test rax, rax
0x00006cec      4b8904c8       mov qword [r8 + r9*8], rax
0x00006cf0      740a           je 0x6cfc
0x00006cf2      4983c101       add r9, 1
0x00006cf6      4983f90a       cmp r9, 0xa
0x00006cfa      75d4           jne 0x6cd0
0x00006cfc      4584db         test r11b, r11b
0x00006cff      7524           jne 0x6d25
0x00006d01      e89afaffff     call sym.version_etc_arn
0x00006d06      488b442478     mov rax, qword [rsp + 0x78]
0x00006d0b      644833042528.  xor rax, qword fs:[0x28]
0x00006d14      750a           jne 0x6d20
0x00006d16      4881c4b80000.  add rsp, 0xb8
0x00006d1d      5b             pop rbx
0x00006d1e      5d             pop rbp
0x00006d1f      c3             ret
0x00006d20      e8abadffff     call sym.imp.__stack_chk_fail
0x00006d25      4489542408     mov dword [rsp + 8], r10d
0x00006d2a      ebd5           jmp 0x6d01
0x00006d2c      4889d8         mov rax, rbx
0x00006d2f      4883c308       add rbx, 8
0x00006d33      ebb1           jmp 0x6ce6
0x00006d35      90             nop
0x00006d36      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00006d40      53             push rbx
0x00006d41      488d351afa00.  lea rsi, str.Report_bugs_to:__s         ; 0x16762 ; "\nReport bugs to: %s\n"
0x00006d48      ba05000000     mov edx, 5
0x00006d4d      31ff           xor edi, edi
0x00006d4f      e83cadffff     call sym.imp.dcgettext
0x00006d54      488d151cfa00.  lea rdx, str.bug_coreutils_gnu.org      ; 0x16777 ; "bug-coreutils@gnu.org"
0x00006d5b      4889c6         mov rsi, rax
0x00006d5e      bf01000000     mov edi, 1
0x00006d63      31c0           xor eax, eax
0x00006d65      e846afffff     call sym.imp.__printf_chk
0x00006d6a      488d351cfa00.  lea rsi, str.s_home_page:___s           ; 0x1678d ; "%s home page: <%s>\n"
0x00006d71      ba05000000     mov edx, 5
0x00006d76      31ff           xor edi, edi
0x00006d78      e813adffff     call sym.imp.dcgettext
0x00006d7d      488d0dacf000.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x15e30 ; "https://www.gnu.org/software/coreutils/"
0x00006d84      488d157ff200.  lea rdx, str.GNU_coreutils              ; 0x1600a ; "GNU coreutils"
0x00006d8b      4889c6         mov rsi, rax
0x00006d8e      bf01000000     mov edi, 1
0x00006d93      31c0           xor eax, eax
0x00006d95      e816afffff     call sym.imp.__printf_chk
0x00006d9a      488b1de74221.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21b088:8]=0
0x00006da1      488d3518fc00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x169c0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00006da8      31ff           xor edi, edi
0x00006daa      ba05000000     mov edx, 5
0x00006daf      e8dcacffff     call sym.imp.dcgettext
0x00006db4      4889de         mov rsi, rbx
0x00006db7      4889c7         mov rdi, rax
0x00006dba      5b             pop rbx
0x00006dbb      e9f0adffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00006dc0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00006dc1      4889fb         mov rbx, rdi
0x00006dc4      e857aeffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00006dc9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00006dcc      7505           jne 0x6dd3
0x00006dce      4885db         test rbx, rbx
0x00006dd1      7502           jne 0x6dd5
0x00006dd3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00006dd4      c3             ret
0x00006dd5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00006dda      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00006de0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00006de3      48f7e6         mul rsi
0x00006de6      4889c7         mov rdi, rax
0x00006de9      0f90c0         seto al
0x00006dec      4885ff         test rdi, rdi
0x00006def      780a           js 0x6dfb
0x00006df1      0fb6c0         movzx eax, al
0x00006df4      4885c0         test rax, rax
0x00006df7      7502           jne 0x6dfb
0x00006df9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00006dfb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00006dff      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00006e04      6690           nop
0x00006e06      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00006e10      ebae           jmp sym.xmalloc
0x00006e12      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00006e16      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00006e20      4885f6         test rsi, rsi
0x00006e23      53             push rbx
0x00006e24      4889f3         mov rbx, rsi
0x00006e27      7505           jne 0x6e2e
0x00006e29      4885ff         test rdi, rdi
0x00006e2c      751a           jne 0x6e48
0x00006e2e      4889de         mov rsi, rbx
0x00006e31      e85aaeffff     call sym.imp.realloc
0x00006e36      4885c0         test rax, rax
0x00006e39      7505           jne 0x6e40
0x00006e3b      4885db         test rbx, rbx
0x00006e3e      7511           jne 0x6e51                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00006e40      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00006e41      c3             ret
0x00006e42      660f1f440000   nop word [rax + rax]
0x00006e48      e883abffff     call sym.imp.free
0x00006e4d      31c0           xor eax, eax
0x00006e4f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00006e50      c3             ret
0x00006e51      e8ba010000     call sym.xalloc_die
0x00006e56      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00006e60      4889f0         mov rax, rsi
0x00006e63      48f7e2         mul rdx
0x00006e66      4889c6         mov rsi, rax
0x00006e69      0f90c0         seto al
0x00006e6c      4885f6         test rsi, rsi
0x00006e6f      780a           js 0x6e7b
0x00006e71      0fb6c0         movzx eax, al
0x00006e74      4885c0         test rax, rax
0x00006e77      7502           jne 0x6e7b
0x00006e79      eba5           jmp sym.xrealloc
0x00006e7b      4883ec08       sub rsp, 8
0x00006e7f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00006e84      6690           nop
0x00006e86      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00006e90      4885ff         test rdi, rdi
0x00006e93      4989d1         mov r9, rdx
0x00006e96      488b0e         mov rcx, qword [rsi]
0x00006e99      7435           je 0x6ed0
0x00006e9b      31d2           xor edx, edx
0x00006e9d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00006ea7      49f7f1         div r9
0x00006eaa      4839c8         cmp rax, rcx
0x00006ead      763c           jbe 0x6eeb
0x00006eaf      4889c8         mov rax, rcx
0x00006eb2      48d1e8         shr rax, 1
0x00006eb5      488d4c0801     lea rcx, [rax + rcx + 1]
0x00006eba      48890e         mov qword [rsi], rcx
0x00006ebd      490fafc9       imul rcx, r9
0x00006ec1      4889ce         mov rsi, rcx
0x00006ec4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00006ec9      0f1f80000000.  nop dword [rax]
0x00006ed0      4885c9         test rcx, rcx
0x00006ed3      7423           je 0x6ef8
0x00006ed5      4889c8         mov rax, rcx
0x00006ed8      49f7e1         mul r9
0x00006edb      0f90c2         seto dl
0x00006ede      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00006ee1      0fb6d2         movzx edx, dl
0x00006ee4      7805           js 0x6eeb
0x00006ee6      4885d2         test rdx, rdx
0x00006ee9      74cf           je 0x6eba
0x00006eeb      4883ec08       sub rsp, 8
0x00006eef      e81c010000     call sym.xalloc_die
0x00006ef4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00006ef8      31d2           xor edx, edx
0x00006efa      b880000000     mov eax, 0x80
0x00006eff      4531c0         xor r8d, r8d
0x00006f02      49f7f1         div r9
0x00006f05      4885c0         test rax, rax
0x00006f08      410f94c0       sete r8b
0x00006f0c      498d0c00       lea rcx, [r8 + rax]
0x00006f10      ebc3           jmp 0x6ed5
0x00006f12      0f1f4000       nop dword [rax]
0x00006f16      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00006f20      4885ff         test rdi, rdi
0x00006f23      488b06         mov rax, qword [rsi]
0x00006f26      7428           je 0x6f50
0x00006f28      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00006f32      4839d0         cmp rax, rdx
0x00006f35      772a           ja 0x6f61
0x00006f37      4889c2         mov rdx, rax
0x00006f3a      48d1ea         shr rdx, 1
0x00006f3d      488d440201     lea rax, [rdx + rax + 1]
0x00006f42      488906         mov qword [rsi], rax
0x00006f45      4889c6         mov rsi, rax
0x00006f48      e9d3feffff     jmp sym.xrealloc
0x00006f4d      0f1f00         nop dword [rax]
0x00006f50      4885c0         test rax, rax
0x00006f53      ba80000000     mov edx, 0x80
0x00006f58      480f44c2       cmove rax, rdx
0x00006f5c      4885c0         test rax, rax
0x00006f5f      79e1           jns 0x6f42
0x00006f61      4883ec08       sub rsp, 8
0x00006f65      e8a6000000     call sym.xalloc_die
0x00006f6a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00006f70      53             push rbx
0x00006f71      4889fb         mov rbx, rdi
0x00006f74      e847feffff     call sym.xmalloc
0x00006f79      4889da         mov rdx, rbx
0x00006f7c      31f6           xor esi, esi
0x00006f7e      4889c7         mov rdi, rax
0x00006f81      5b             pop rbx
0x00006f82      e9d9abffff     jmp sym.imp.memset
0x00006f87      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00006f90      4889f8         mov rax, rdi
0x00006f93      4883ec08       sub rsp, 8
0x00006f97      48f7e6         mul rsi
0x00006f9a      0f90c2         seto dl
0x00006f9d      4885c0         test rax, rax
0x00006fa0      7817           js 0x6fb9
0x00006fa2      0fb6d2         movzx edx, dl
0x00006fa5      4885d2         test rdx, rdx
0x00006fa8      750f           jne 0x6fb9
0x00006faa      e811acffff     call sym.imp.calloc
0x00006faf      4885c0         test rax, rax
0x00006fb2      7405           je 0x6fb9
0x00006fb4      4883c408       add rsp, 8
0x00006fb8      c3             ret
0x00006fb9      e852000000     call sym.xalloc_die
0x00006fbe      6690           nop
;-- xmemdup:
0x00006fc0      55             push rbp
0x00006fc1      53             push rbx
0x00006fc2      4889fd         mov rbp, rdi
0x00006fc5      4889f7         mov rdi, rsi
0x00006fc8      4889f3         mov rbx, rsi
0x00006fcb      4883ec08       sub rsp, 8
0x00006fcf      e8ecfdffff     call sym.xmalloc
0x00006fd4      4883c408       add rsp, 8
0x00006fd8      4889da         mov rdx, rbx
0x00006fdb      4889ee         mov rsi, rbp
0x00006fde      5b             pop rbx
0x00006fdf      5d             pop rbp
0x00006fe0      4889c7         mov rdi, rax
0x00006fe3      e9f8abffff     jmp sym.imp.memcpy
0x00006fe8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00006ff0      53             push rbx
0x00006ff1      4889fb         mov rbx, rdi
0x00006ff4      e8b7aaffff     call sym.imp.strlen
0x00006ff9      4889df         mov rdi, rbx
0x00006ffc      488d7001       lea rsi, [rax + 1]
0x00007000      5b             pop rbx
0x00007001      ebbd           jmp sym.xmemdup
0x00007003      662e0f1f8400.  nop word cs:[rax + rax]
0x0000700d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00007010      488d3558fa00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x16a6f ; "memory exhausted"
0x00007017      4883ec08       sub rsp, 8
0x0000701b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00007020      31ff           xor edi, edi
0x00007022      e869aaffff     call sym.imp.dcgettext
0x00007027      8b3de33f2100   mov edi, dword [obj.exit_failure]       ; [0x21b010:4]=1
0x0000702d      488d154ff100.  lea rdx, [0x00016183]                   ; "%s"
0x00007034      4889c1         mov rcx, rax
0x00007037      31f6           xor esi, esi
0x00007039      31c0           xor eax, eax
0x0000703b      e8c0acffff     call sym.imp.error
0x00007040      e89ba9ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00007045      662e0f1f8400.  nop word cs:[rax + rax]
0x0000704f      90             nop
;-- rpl_mbrtowc:
0x00007050      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00007052      4154           push r12
0x00007054      4989f5         mov r13, rsi
0x00007057      55             push rbp
0x00007058      53             push rbx
0x00007059      4889fb         mov rbx, rdi
0x0000705c      4989d4         mov r12, rdx
0x0000705f      4883ec18       sub rsp, 0x18
0x00007063      64488b042528.  mov rax, qword fs:[0x28]
0x0000706c      4889442408     mov qword [rsp + 8], rax
0x00007071      31c0           xor eax, eax
0x00007073      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00007078      4885ff         test rdi, rdi
0x0000707b      480f44d8       cmove rbx, rax
0x0000707f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00007082      e869aaffff     call sym.imp.mbrtowc
0x00007087      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000708b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000708e      7620           jbe 0x70b0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00007090      4d85e4         test r12, r12
0x00007093      741b           je 0x70b0
0x00007095      31ff           xor edi, edi
0x00007097      e8d4e20000     call sym.hard_locale
0x0000709c      84c0           test al, al
0x0000709e      7510           jne 0x70b0
0x000070a0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000070a5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x000070aa      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000070ac      0f1f4000       nop dword [rax]
0x000070b0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x000070b5      644833142528.  xor rdx, qword fs:[0x28]
0x000070be      4889e8         mov rax, rbp
0x000070c1      750b           jne 0x70ce
0x000070c3      4883c418       add rsp, 0x18
0x000070c7      5b             pop rbx
0x000070c8      5d             pop rbp
0x000070c9      415c           pop r12
0x000070cb      415d           pop r13
0x000070cd      c3             ret
0x000070ce      e8fda9ffff     call sym.imp.__stack_chk_fail
0x000070d3      662e0f1f8400.  nop word cs:[rax + rax]
0x000070dd      0f1f00         nop dword [rax]
;-- peek_token_bracket:
0x000070e0      488b4648       mov rax, qword [rsi + 0x48]             ; ../coreutils-8.31/lib/regcomp.c:2026
0x000070e4      48394668       cmp qword [rsi + 0x68], rax
0x000070e8      7e56           jle 0x7140
0x000070ea      4c8b4608       mov r8, qword [rsi + 8]                 ; ../coreutils-8.31/lib/regcomp.c:2033
0x000070ee      83be90000000.  cmp dword [rsi + 0x90], 1               ; ../coreutils-8.31/lib/regcomp.c:2037
0x000070f5      410fb60c00     movzx ecx, byte [r8 + rax]              ; ../coreutils-8.31/lib/regcomp.c:2033
0x000070fa      880f           mov byte [rdi], cl                      ; ../coreutils-8.31/lib/regcomp.c:2034
0x000070fc      7e15           jle 0x7113                              ; ../coreutils-8.31/lib/regcomp.c:2037
0x000070fe      483b4630       cmp rax, qword [rsi + 0x30]
0x00007102      740f           je 0x7113
0x00007104      4c8b4e10       mov r9, qword [rsi + 0x10]              ; ../coreutils-8.31/lib/regcomp.c:2038
0x00007108      41833c81ff     cmp dword [r9 + rax*4], 0xffffffff
0x0000710d      0f847c000000   je 0x718f
0x00007113      80f95c         cmp cl, 0x5c                            ; ../coreutils-8.31/lib/regcomp.c:2045
0x00007116      7468           je 0x7180
0x00007118      80f95b         cmp cl, 0x5b                            ; ../coreutils-8.31/lib/regcomp.c:2056
0x0000711b      7433           je 0x7150
0x0000711d      80f95d         cmp cl, 0x5d                            ; ../coreutils-8.31/lib/regcomp.c:2091
0x00007120      0f849a000000   je 0x71c0
0x00007126      80f95e         cmp cl, 0x5e
0x00007129      0f8481000000   je 0x71b0
0x0000712f      80f92d         cmp cl, 0x2d
0x00007132      755b           jne 0x718f
0x00007134      c6470816       mov byte [rdi + 8], 0x16                ; ../coreutils-8.31/lib/regcomp.c:2094 ; [0x16:1]=0
0x00007138      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x0000713d      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2095
0x0000713e      6690           nop
0x00007140      c6470802       mov byte [rdi + 8], 2                   ; ../coreutils-8.31/lib/regcomp.c:2030
0x00007144      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/regcomp.c:2031
0x00007146      c3             ret
0x00007147      660f1f840000.  nop word [rax + rax]
0x00007150      488d4801       lea rcx, [rax + 1]                      ; ../coreutils-8.31/lib/regcomp.c:2060
0x00007154      483b4e58       cmp rcx, qword [rsi + 0x58]
0x00007158      7d46           jge 0x71a0
0x0000715a      410fb6440001   movzx eax, byte [r8 + rax + 1]          ; ../coreutils-8.31/lib/regcomp.c:2061
0x00007160      3c3a           cmp al, 0x3a                            ; ../coreutils-8.31/lib/regcomp.c:2066
0x00007162      8807           mov byte [rdi], al                      ; ../coreutils-8.31/lib/regcomp.c:2064
0x00007164      0f8496000000   je 0x7200                               ; ../coreutils-8.31/lib/regcomp.c:2066
0x0000716a      3c3d           cmp al, 0x3d
0x0000716c      0f847e000000   je 0x71f0
0x00007172      3c2e           cmp al, 0x2e
0x00007174      752a           jne 0x71a0
0x00007176      c647081a       mov byte [rdi + 8], 0x1a                ; ../coreutils-8.31/lib/regcomp.c:2069 ; [0x1a:1]=0
0x0000717a      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/regcomp.c:2065
0x0000717f      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2070
0x00007180      83e201         and edx, 1                              ; ../coreutils-8.31/lib/regcomp.c:2045
0x00007183      740a           je 0x718f
0x00007185      488d5001       lea rdx, [rax + 1]                      ; ../coreutils-8.31/lib/regcomp.c:2046
0x00007189      483b5658       cmp rdx, qword [rsi + 0x58]
0x0000718d      7c41           jl 0x71d0
0x0000718f      c6470801       mov byte [rdi + 8], 1                   ; ../coreutils-8.31/lib/regcomp.c:2103
0x00007193      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x00007198      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2106
0x00007199      0f1f80000000.  nop dword [rax]
0x000071a0      c6470801       mov byte [rdi + 8], 1                   ; ../coreutils-8.31/lib/regcomp.c:2084
0x000071a4      c6075b         mov byte [rdi], 0x5b                    ; ../coreutils-8.31/lib/regcomp.c:2085 ; '['
                                                                       ; [0x5b:1]=0
0x000071a7      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2086
0x000071ac      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2087
0x000071ad      0f1f00         nop dword [rax]
0x000071b0      c6470819       mov byte [rdi + 8], 0x19                ; ../coreutils-8.31/lib/regcomp.c:2100 ; [0x19:1]=31
0x000071b4      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x000071b9      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2101
0x000071ba      660f1f440000   nop word [rax + rax]
0x000071c0      c6470815       mov byte [rdi + 8], 0x15                ; ../coreutils-8.31/lib/regcomp.c:2097 ; [0x15:1]=0
0x000071c4      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x000071c9      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2098
0x000071ca      660f1f440000   nop word [rax + rax]
0x000071d0      48895648       mov qword [rsi + 0x48], rdx             ; ../coreutils-8.31/lib/regcomp.c:2050
0x000071d4      410fb6440001   movzx eax, byte [r8 + rax + 1]          ; ../coreutils-8.31/lib/regcomp.c:2051
0x000071da      c6470801       mov byte [rdi + 8], 1                   ; ../coreutils-8.31/lib/regcomp.c:2053
0x000071de      8807           mov byte [rdi], al                      ; ../coreutils-8.31/lib/regcomp.c:2052
0x000071e0      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2054
0x000071e5      c3             ret
0x000071e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000071f0      c647081c       mov byte [rdi + 8], 0x1c                ; ../coreutils-8.31/lib/regcomp.c:2073 ; [0x1c:1]=0
0x000071f4      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/regcomp.c:2065
0x000071f9      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2074
0x000071fa      660f1f440000   nop word [rax + rax]
0x00007200      83e204         and edx, 4                              ; ../coreutils-8.31/lib/regcomp.c:2077
0x00007203      749b           je 0x71a0
0x00007205      c647081e       mov byte [rdi + 8], 0x1e                ; ../coreutils-8.31/lib/regcomp.c:2079 ; [0x1e:1]=0
0x00007209      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/regcomp.c:2065
0x0000720e      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2080
0x0000720f      90             nop
;-- mark_opt_subexp:
0x00007210      807e3011       cmp byte [rsi + 0x30], 0x11             ; ../coreutils-8.31/lib/regcomp.c:3858
0x00007214      740a           je 0x7220
0x00007216      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/regcomp.c:3864
0x00007218      c3             ret
0x00007219      0f1f80000000.  nop dword [rax]
0x00007220      483b7e28       cmp rdi, qword [rsi + 0x28]             ; ../coreutils-8.31/lib/regcomp.c:3860
0x00007224      75f0           jne 0x7216
0x00007226      804e3208       or byte [rsi + 0x32], 8                 ; ../coreutils-8.31/lib/regcomp.c:3861
0x0000722a      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/regcomp.c:3864
0x0000722c      c3             ret
0x0000722d      0f1f00         nop dword [rax]
;-- check_dst_limits_calc_pos_1:
0x00007230      4157           push r15                                ; ../coreutils-8.31/lib/regexec.c:1905
0x00007232      4156           push r14
0x00007234      4989d1         mov r9, rdx
0x00007237      4155           push r13
0x00007239      4154           push r12
0x0000723b      488d1449       lea rdx, [rcx + rcx*2]                  ; ../coreutils-8.31/lib/regexec.c:1907
0x0000723f      55             push rbp                                ; ../coreutils-8.31/lib/regexec.c:1905
0x00007240      53             push rbx
0x00007241      4189f7         mov r15d, esi
0x00007244      4883ec48       sub rsp, 0x48
0x00007248      4c8bb7980000.  mov r14, qword [rdi + 0x98]             ; ../coreutils-8.31/lib/regexec.c:1906
0x0000724f      48893c24       mov qword [rsp], rdi                    ; ../coreutils-8.31/lib/regexec.c:1905
0x00007253      498b4630       mov rax, qword [r14 + 0x30]             ; ../coreutils-8.31/lib/regexec.c:1907
0x00007257      4c8d24d0       lea r12, [rax + rdx*8]
0x0000725b      49837c240800   cmp qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/regexec.c:1912
0x00007261      0f8e8e010000   jle 0x73f5
0x00007267      4b8d0480       lea rax, [r8 + r8*4]                    ; ../coreutils-8.31/lib/regexec.c:1920
0x0000726b      4989cb         mov r11, rcx
0x0000726e      4489c9         mov ecx, r9d
0x00007271      4d89c2         mov r10, r8
0x00007274      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/regexec.c:1912
0x00007276      89742420       mov dword [rsp + 0x20], esi             ; ../coreutils-8.31/lib/regexec.c:1971
0x0000727a      48c1e003       shl rax, 3                              ; ../coreutils-8.31/lib/regexec.c:1920
0x0000727e      4d89cf         mov r15, r9                             ; ../coreutils-8.31/lib/regexec.c:1971
0x00007281      4c895c2410     mov qword [rsp + 0x10], r11
0x00007286      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/regexec.c:1920
0x0000728b      b801000000     mov eax, 1
0x00007290      48d3e0         shl rax, cl
0x00007293      4889442418     mov qword [rsp + 0x18], rax
0x00007298      f7d0           not eax                                 ; ../coreutils-8.31/lib/regexec.c:1959
0x0000729a      6689442426     mov word [rsp + 0x26], ax
0x0000729f      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/regexec.c:1966
0x000072a1      83e001         and eax, 1
0x000072a4      8944240c       mov dword [rsp + 0xc], eax
0x000072a8      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/regexec.c:1971
0x000072aa      83e002         and eax, 2
0x000072ad      89442408       mov dword [rsp + 8], eax
0x000072b1      eb22           jmp 0x72d5
0x000072b3      0f1f440000     nop dword [rax + rax]
0x000072b8      80fa09         cmp dl, 9                               ; ../coreutils-8.31/lib/regexec.c:1915
0x000072bb      0f844f010000   je 0x7410
0x000072c1      80fa04         cmp dl, 4
0x000072c4      7452           je 0x7318
0x000072c6      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/regexec.c:1912
0x000072ca      49395c2408     cmp qword [r12 + 8], rbx
0x000072cf      0f8e1b010000   jle 0x73f0
0x000072d5      498b442410     mov rax, qword [r12 + 0x10]             ; ../coreutils-8.31/lib/regexec.c:1914
0x000072da      488b2cd8       mov rbp, qword [rax + rbx*8]
0x000072de      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/regexec.c:1915
0x000072e1      48c1e004       shl rax, 4
0x000072e5      490306         add rax, qword [r14]
0x000072e8      0fb65008       movzx edx, byte [rax + 8]
0x000072ec      80fa08         cmp dl, 8
0x000072ef      75c7           jne 0x72b8
0x000072f1      8b4c240c       mov ecx, dword [rsp + 0xc]              ; ../coreutils-8.31/lib/regexec.c:1966
0x000072f5      85c9           test ecx, ecx
0x000072f7      74cd           je 0x72c6
0x000072f9      4c3938         cmp qword [rax], r15
0x000072fc      75c8           jne 0x72c6
0x000072fe      4883c448       add rsp, 0x48                           ; ../coreutils-8.31/lib/regexec.c:1981
0x00007302      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/regexec.c:1953 ; -1
0x00007307      5b             pop rbx                                 ; ../coreutils-8.31/lib/regexec.c:1981
0x00007308      5d             pop rbp
0x00007309      415c           pop r12
0x0000730b      415d           pop r13
0x0000730d      415e           pop r14
0x0000730f      415f           pop r15
0x00007311      c3             ret
0x00007312      660f1f440000   nop word [rax + rax]
0x00007318      4983faff       cmp r10, 0xffffffffffffffff             ; ../coreutils-8.31/lib/regexec.c:1918
0x0000731c      74a8           je 0x72c6
0x0000731e      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/regexec.c:1920
0x00007322      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x00007327      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/regexec.c:1940
0x0000732a      4c89642430     mov qword [rsp + 0x30], r12
0x0000732f      48895c2438     mov qword [rsp + 0x38], rbx
0x00007334      4d89d4         mov r12, r10
0x00007337      4c03a8d80000.  add r13, qword [rax + 0xd8]             ; ../coreutils-8.31/lib/regexec.c:1920
0x0000733e      488d446d00     lea rax, [rbp + rbp*2]                  ; ../coreutils-8.31/lib/regexec.c:1940
0x00007343      4c89f5         mov rbp, r14
0x00007346      4989fe         mov r14, rdi
0x00007349      48c1e003       shl rax, 3
0x0000734d      4889c3         mov rbx, rax
0x00007350      4d397500       cmp qword [r13], r14                    ; ../coreutils-8.31/lib/regexec.c:1926
0x00007354      756a           jne 0x73c0
0x00007356      4983ff3f       cmp r15, 0x3f                           ; ../coreutils-8.31/lib/regexec.c:1929
0x0000735a      7f0c           jg 0x7368
0x0000735c      410fb74522     movzx eax, word [r13 + 0x22]            ; ../coreutils-8.31/lib/regexec.c:1930
0x00007361      4885442418     test qword [rsp + 0x18], rax
0x00007366      7458           je 0x73c0
0x00007368      488b4528       mov rax, qword [rbp + 0x28]             ; ../coreutils-8.31/lib/regexec.c:1940
0x0000736c      488b441810     mov rax, qword [rax + rbx + 0x10]
0x00007371      488b08         mov rcx, qword [rax]
0x00007374      48394c2410     cmp qword [rsp + 0x10], rcx             ; ../coreutils-8.31/lib/regexec.c:1941
0x00007379      0f84c1000000   je 0x7440
0x0000737f      8b742420       mov esi, dword [rsp + 0x20]             ; ../coreutils-8.31/lib/regexec.c:1949
0x00007383      488b3c24       mov rdi, qword [rsp]
0x00007387      4d89e0         mov r8, r12
0x0000738a      4c89fa         mov rdx, r15
0x0000738d      e89efeffff     call sym.check_dst_limits_calc_pos_1
0x00007392      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/regexec.c:1952
0x00007395      0f8463ffffff   je 0x72fe
0x0000739b      85c0           test eax, eax                           ; ../coreutils-8.31/lib/regexec.c:1954
0x0000739d      7508           jne 0x73a7
0x0000739f      8b742408       mov esi, dword [rsp + 8]
0x000073a3      85f6           test esi, esi
0x000073a5      757e           jne 0x7425
0x000073a7      4983ff3f       cmp r15, 0x3f                           ; ../coreutils-8.31/lib/regexec.c:1957
0x000073ab      7f13           jg 0x73c0
0x000073ad      0fb7442426     movzx eax, word [rsp + 0x26]            ; ../coreutils-8.31/lib/regexec.c:1959
0x000073b2      6641214522     and word [r13 + 0x22], ax
0x000073b7      660f1f840000.  nop word [rax + rax]
0x000073c0      4983c528       add r13, 0x28                           ; ../coreutils-8.31/lib/regexec.c:1961
0x000073c4      41807df800     cmp byte [r13 - 8], 0
0x000073c9      7585           jne 0x7350
0x000073cb      488b5c2438     mov rbx, qword [rsp + 0x38]
0x000073d0      4d89e2         mov r10, r12
0x000073d3      4c8b642430     mov r12, qword [rsp + 0x30]
0x000073d8      4989ee         mov r14, rbp
0x000073db      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/regexec.c:1912
0x000073df      49395c2408     cmp qword [r12 + 8], rbx                ; ../coreutils-8.31/lib/regexec.c:1852
0x000073e4      0f8febfeffff   jg 0x72d5
0x000073ea      660f1f440000   nop word [rax + rax]
0x000073f0      448b7c2420     mov r15d, dword [rsp + 0x20]
0x000073f5      4883c448       add rsp, 0x48
0x000073f9      4489f8         mov eax, r15d
0x000073fc      5b             pop rbx
0x000073fd      d1f8           sar eax, 1
0x000073ff      5d             pop rbp
0x00007400      415c           pop r12
0x00007402      415d           pop r13                                 ; ../coreutils-8.31/lib/regexec.c:1843
0x00007404      415e           pop r14
0x00007406      415f           pop r15
0x00007408      c3             ret
0x00007409      0f1f80000000.  nop dword [rax]
0x00007410      8b542408       mov edx, dword [rsp + 8]
0x00007414      85d2           test edx, edx
0x00007416      0f84aafeffff   je 0x72c6
0x0000741c      4c3938         cmp qword [rax], r15
0x0000741f      0f85a1feffff   jne 0x72c6
0x00007425      4883c448       add rsp, 0x48
0x00007429      31c0           xor eax, eax
0x0000742b      5b             pop rbx
0x0000742c      5d             pop rbp
0x0000742d      415c           pop r12
0x0000742f      415d           pop r13
0x00007431      415e           pop r14                                 ; ../coreutils-8.31/lib/regexec.c:1815
0x00007433      415f           pop r15
0x00007435      c3             ret
0x00007436      662e0f1f8400.  nop word cs:[rax + rax]
0x00007440      448b7c2420     mov r15d, dword [rsp + 0x20]
0x00007445      4883c448       add rsp, 0x48
0x00007449      5b             pop rbx
0x0000744a      5d             pop rbp
0x0000744b      4489f8         mov eax, r15d
0x0000744e      83e001         and eax, 1
0x00007451      415c           pop r12
0x00007453      f7d8           neg eax
0x00007455      415d           pop r13                                 ; ../coreutils-8.31/lib/regexec.c:1864
0x00007457      415e           pop r14
0x00007459      415f           pop r15
0x0000745b      c3             ret
0x0000745c      0f1f4000       nop dword [rax]
;-- check_dst_limits_calc_pos:
0x00007460      488b87d80000.  mov rax, qword [rdi + 0xd8]
0x00007467      488d34b6       lea rsi, [rsi + rsi*4]                  ; ../coreutils-8.31/lib/regexec.c:1871
0x0000746b      488d04f0       lea rax, [rax + rsi*8]
0x0000746f      4c8b5010       mov r10, qword [rax + 0x10]
0x00007473      4d39c2         cmp r10, r8                             ; ../coreutils-8.31/lib/regexec.c:1872
0x00007476      7f48           jg 0x74c0
0x00007478      488b4018       mov rax, qword [rax + 0x18]             ; ../coreutils-8.31/lib/regexec.c:1874
0x0000747c      4c39c0         cmp rax, r8
0x0000747f      7c1f           jl 0x74a0                               ; ../coreutils-8.31/lib/regexec.c:1879
0x00007481      31f6           xor esi, esi
0x00007483      4d39c2         cmp r10, r8
0x00007486      400f94c6       sete sil                                ; ../coreutils-8.31/lib/regexec.c:1868
0x0000748a      83ce02         or esi, 2
0x0000748d      4c39c0         cmp rax, r8
0x00007490      7423           je 0x74b5
0x00007492      31c0           xor eax, eax
0x00007494      4d39c2         cmp r10, r8
0x00007497      7417           je 0x74b0
0x00007499      f3c3           ret
0x0000749b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/regexec.c:1877
0x000074a0      b801000000     mov eax, 1
0x000074a5      c3             ret
0x000074a6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regexec.c:1865
0x000074b0      be01000000     mov esi, 1
0x000074b5      4d89c8         mov r8, r9
0x000074b8      e973fdffff     jmp sym.check_dst_limits_calc_pos_1
0x000074bd      0f1f00         nop dword [rax]
0x000074c0      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/regcomp.c:1100 ; -1
0x000074c5      c3             ret
0x000074c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- postorder:
0x000074d0      4154           push r12
0x000074d2      4989f4         mov r12, rsi                            ; ../coreutils-8.31/lib/regcomp.c:1107
0x000074d5      55             push rbp
0x000074d6      4889d5         mov rbp, rdx
0x000074d9      53             push rbx
0x000074da      4889fb         mov rbx, rdi
0x000074dd      eb04           jmp 0x74e3
0x000074df      90             nop
0x000074e0      4889c3         mov rbx, rax
0x000074e3      488b4308       mov rax, qword [rbx + 8]
0x000074e7      4885c0         test rax, rax
0x000074ea      75f4           jne 0x74e0
0x000074ec      488b4310       mov rax, qword [rbx + 0x10]
0x000074f0      4885c0         test rax, rax
0x000074f3      75eb           jne 0x74e0
0x000074f5      4889de         mov rsi, rbx
0x000074f8      4889ef         mov rdi, rbp
0x000074fb      41ffd4         call r12
0x000074fe      85c0           test eax, eax
0x00007500      7534           jne 0x7536
0x00007502      660f1f440000   nop word [rax + rax]
0x00007508      488b13         mov rdx, qword [rbx]
0x0000750b      4885d2         test rdx, rdx
0x0000750e      7426           je 0x7536
0x00007510      488b4210       mov rax, qword [rdx + 0x10]
0x00007514      4839d8         cmp rax, rbx
0x00007517      4889d3         mov rbx, rdx
0x0000751a      400f94c6       sete sil
0x0000751e      4885c0         test rax, rax
0x00007521      0f94c1         sete cl
0x00007524      4008ce         or sil, cl
0x00007527      74b7           je 0x74e0
0x00007529      4889de         mov rsi, rbx
0x0000752c      4889ef         mov rdi, rbp
0x0000752f      41ffd4         call r12
0x00007532      85c0           test eax, eax
0x00007534      74d2           je 0x7508
0x00007536      5b             pop rbx
0x00007537      5d             pop rbp
0x00007538      415c           pop r12
0x0000753a      c3             ret
0x0000753b      0f1f440000     nop dword [rax + rax]
;-- preorder:
0x00007540      4154           push r12
0x00007542      4989f4         mov r12, rsi                            ; ../coreutils-8.31/lib/regcomp.c:1138
0x00007545      55             push rbp
0x00007546      4889d5         mov rbp, rdx                            ; ../coreutils-8.31/lib/regcomp.c:1142
0x00007549      53             push rbx
0x0000754a      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/regcomp.c:1146
0x0000754d      eb04           jmp 0x7553
0x0000754f      90             nop
0x00007550      4889d3         mov rbx, rdx
0x00007553      4889de         mov rsi, rbx
0x00007556      4889ef         mov rdi, rbp
0x00007559      41ffd4         call r12                                ; ../coreutils-8.31/lib/regcomp.c:1147
0x0000755c      85c0           test eax, eax
0x0000755e      752c           jne 0x758c
0x00007560      488b5308       mov rdx, qword [rbx + 8]
0x00007564      31c9           xor ecx, ecx
0x00007566      4885d2         test rdx, rdx
0x00007569      75e5           jne 0x7550
0x0000756b      eb06           jmp 0x7573
0x0000756d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/regcomp.c:1151
0x00007570      4889d3         mov rbx, rdx
0x00007573      488b5310       mov rdx, qword [rbx + 0x10]
0x00007577      4839ca         cmp rdx, rcx
0x0000757a      7405           je 0x7581
0x0000757c      4885d2         test rdx, rdx
0x0000757f      75cf           jne 0x7550
0x00007581      488b13         mov rdx, qword [rbx]
0x00007584      4889d9         mov rcx, rbx
0x00007587      4885d2         test rdx, rdx
0x0000758a      75e4           jne 0x7570
0x0000758c      5b             pop rbx
0x0000758d      5d             pop rbp
0x0000758e      415c           pop r12
0x00007590      c3             ret
0x00007591      0f1f440000     nop dword [rax + rax]
0x00007596      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_string_realloc_buffers:
0x000075a0      55             push rbp
0x000075a1      53             push rbx
0x000075a2      4889f5         mov rbp, rsi
0x000075a5      4889fb         mov rbx, rdi
0x000075a8      4883ec08       sub rsp, 8
0x000075ac      83bf90000000.  cmp dword [rdi + 0x90], 1
0x000075b3      7e48           jle 0x75fd
0x000075b5      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; 2305843009213693951
0x000075bf      4839c6         cmp rsi, rax
0x000075c2      776c           ja 0x7630
0x000075c4      488b7f10       mov rdi, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/regex_internal.c:28
0x000075c8      488d34b50000.  lea rsi, [rsi*4]                        ; ../coreutils-8.31/lib/regex_internal.c:29
0x000075d0      e8bba6ffff     call sym.imp.realloc
0x000075d5      4885c0         test rax, rax
0x000075d8      7456           je 0x7630
0x000075da      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/regex_internal.c:32
0x000075de      48894310       mov qword [rbx + 0x10], rax
0x000075e2      4885ff         test rdi, rdi
0x000075e5      7416           je 0x75fd
0x000075e7      488d34ed0000.  lea rsi, [rbp*8]
0x000075ef      e89ca6ffff     call sym.imp.realloc
0x000075f4      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/regex_internal.c:47
0x000075f7      7437           je 0x7630
0x000075f9      48894318       mov qword [rbx + 0x18], rax
0x000075fd      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x00007604      7512           jne 0x7618
0x00007606      48896b40       mov qword [rbx + 0x40], rbp
0x0000760a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/regex_internal.c:42
0x0000760e      31c0           xor eax, eax
0x00007610      5b             pop rbx
0x00007611      5d             pop rbp
0x00007612      c3             ret
0x00007613      0f1f440000     nop dword [rax + rax]
0x00007618      488b7b08       mov rdi, qword [rbx + 8]
0x0000761c      4889ee         mov rsi, rbp
0x0000761f      e86ca6ffff     call sym.imp.realloc                    ; ../coreutils-8.31/lib/regex_internal.c:48
0x00007624      4885c0         test rax, rax
0x00007627      7407           je 0x7630
0x00007629      48894308       mov qword [rbx + 8], rax
0x0000762d      ebd7           jmp 0x7606
0x0000762f      90             nop
0x00007630      4883c408       add rsp, 8
0x00007634      b80c000000     mov eax, 0xc
0x00007639      5b             pop rbx
0x0000763a      5d             pop rbp
0x0000763b      c3             ret
0x0000763c      0f1f4000       nop dword [rax]
;-- re_node_set_insert_last:
0x00007640      55             push rbp
0x00007641      53             push rbx
0x00007642      4889f5         mov rbp, rsi
0x00007645      4889fb         mov rbx, rdi
0x00007648      4883ec08       sub rsp, 8
0x0000764c      488b7708       mov rsi, qword [rdi + 8]
0x00007650      483937         cmp qword [rdi], rsi                    ; ../coreutils-8.31/lib/regex_internal.c:1224
0x00007653      488b4710       mov rax, qword [rdi + 0x10]
0x00007657      741f           je 0x7678
0x00007659      488d5601       lea rdx, [rsi + 1]
0x0000765d      48895308       mov qword [rbx + 8], rdx
0x00007661      48892cf0       mov qword [rax + rsi*8], rbp
0x00007665      b801000000     mov eax, 1
0x0000766a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/regex_internal.c:1214
0x0000766e      5b             pop rbx
0x0000766f      5d             pop rbp
0x00007670      c3             ret
0x00007671      0f1f80000000.  nop dword [rax]
0x00007678      4883c601       add rsi, 1
0x0000767c      488d1436       lea rdx, [rsi + rsi]
0x00007680      48c1e604       shl rsi, 4
0x00007684      488917         mov qword [rdi], rdx
0x00007687      4889c7         mov rdi, rax
0x0000768a      e801a6ffff     call sym.imp.realloc
0x0000768f      4885c0         test rax, rax
0x00007692      740c           je 0x76a0
0x00007694      48894310       mov qword [rbx + 0x10], rax
0x00007698      488b7308       mov rsi, qword [rbx + 8]
0x0000769c      ebbb           jmp 0x7659
0x0000769e      6690           nop
0x000076a0      31c0           xor eax, eax
0x000076a2      ebc6           jmp 0x766a                              ; ../coreutils-8.31/lib/regex_internal.c:1160
0x000076a4      6690           nop
0x000076a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_insert:
0x000076b0      55             push rbp
0x000076b1      53             push rbx
0x000076b2      4889f5         mov rbp, rsi
0x000076b5      4889fb         mov rbx, rdi
0x000076b8      4883ec08       sub rsp, 8
0x000076bc      488b17         mov rdx, qword [rdi]
0x000076bf      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/regex_internal.c:1168
0x000076c2      7424           je 0x76e8
0x000076c4      488b7708       mov rsi, qword [rdi + 8]                ; ../coreutils-8.31/lib/regex_internal.c:1200
0x000076c8      488b4710       mov rax, qword [rdi + 0x10]
0x000076cc      4885f6         test rsi, rsi
0x000076cf      754f           jne 0x7720
0x000076d1      488928         mov qword [rax], rbp
0x000076d4      4883470801     add qword [rdi + 8], 1
0x000076d9      b801000000     mov eax, 1
0x000076de      4883c408       add rsp, 8
0x000076e2      5b             pop rbx
0x000076e3      5d             pop rbp
0x000076e4      c3             ret
0x000076e5      0f1f00         nop dword [rax]
0x000076e8      48c707010000.  mov qword [rdi], 1
0x000076ef      48c747080100.  mov qword [rdi + 8], 1
0x000076f7      bf08000000     mov edi, 8
0x000076fc      e81fa5ffff     call sym.imp.malloc
0x00007701      4885c0         test rax, rax
0x00007704      48894310       mov qword [rbx + 0x10], rax
0x00007708      0f848a000000   je 0x7798
0x0000770e      488928         mov qword [rax], rbp
0x00007711      4883c408       add rsp, 8
0x00007715      b801000000     mov eax, 1
0x0000771a      5b             pop rbx
0x0000771b      5d             pop rbp
0x0000771c      c3             ret                                     ; ../coreutils-8.31/lib/regex_internal.c:1187
0x0000771d      0f1f00         nop dword [rax]
0x00007720      4839f2         cmp rdx, rsi
0x00007723      0f8487000000   je 0x77b0
0x00007729      483928         cmp qword [rax], rbp
0x0000772c      488d14f50000.  lea rdx, [rsi*8]
0x00007734      7e3a           jle 0x7770
0x00007736      4885f6         test rsi, rsi
0x00007739      7e18           jle 0x7753                              ; ../coreutils-8.31/lib/regex_internal.c:1197
0x0000773b      4801c2         add rdx, rax
0x0000773e      6690           nop
0x00007740      488b4af8       mov rcx, qword [rdx - 8]
0x00007744      4883ea08       sub rdx, 8
0x00007748      48894a08       mov qword [rdx + 8], rcx
0x0000774c      4839d0         cmp rax, rdx
0x0000774f      75ef           jne 0x7740
0x00007751      31d2           xor edx, edx
0x00007753      48892c10       mov qword [rax + rdx], rbp
0x00007757      b801000000     mov eax, 1
0x0000775c      4883430801     add qword [rbx + 8], 1
0x00007761      e978ffffff     jmp 0x76de
0x00007766      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regex_internal.c:1193
0x00007770      488b4c10f8     mov rcx, qword [rax + rdx - 8]
0x00007775      4839cd         cmp rbp, rcx
0x00007778      7dd9           jge 0x7753
0x0000777a      660f1f440000   nop word [rax + rax]
0x00007780      48890c10       mov qword [rax + rdx], rcx
0x00007784      4883ea08       sub rdx, 8
0x00007788      488b4c10f8     mov rcx, qword [rax + rdx - 8]
0x0000778d      4839e9         cmp rcx, rbp
0x00007790      7fee           jg 0x7780
0x00007792      ebbf           jmp 0x7753
0x00007794      0f1f4000       nop dword [rax]
0x00007798      48c743080000.  mov qword [rbx + 8], 0
0x000077a0      48c703000000.  mov qword [rbx], 0
0x000077a7      e932ffffff     jmp 0x76de
0x000077ac      0f1f4000       nop dword [rax]
0x000077b0      488d1436       lea rdx, [rsi + rsi]
0x000077b4      48c1e604       shl rsi, 4
0x000077b8      488917         mov qword [rdi], rdx
0x000077bb      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/regex_internal.c:1178
0x000077be      e8cda4ffff     call sym.imp.realloc
0x000077c3      4885c0         test rax, rax
0x000077c6      740d           je 0x77d5                               ; ../coreutils-8.31/lib/regex_internal.c:1446
0x000077c8      48894310       mov qword [rbx + 0x10], rax
0x000077cc      488b7308       mov rsi, qword [rbx + 8]
0x000077d0      e954ffffff     jmp 0x7729
0x000077d5      31c0           xor eax, eax
0x000077d7      e902ffffff     jmp 0x76de
0x000077dc      0f1f4000       nop dword [rax]
;-- register_state:
0x000077e0      4156           push r14
0x000077e2      4155           push r13
0x000077e4      4989fe         mov r14, rdi
0x000077e7      4154           push r12
0x000077e9      55             push rbp
0x000077ea      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/regex_internal.c:849
0x000077ed      53             push rbx
0x000077ee      488b5e10       mov rbx, qword [rsi + 0x10]
0x000077f2      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/regex_internal.c:847
0x000077f5      488916         mov qword [rsi], rdx
0x000077f8      48c746280000.  mov qword [rsi + 0x28], 0
0x00007800      4c8d6e20       lea r13, [rsi + 0x20]
0x00007804      488d3cdd0000.  lea rdi, [rbx*8]                        ; ../coreutils-8.31/lib/regex_internal.c:1455
0x0000780c      48895e20       mov qword [rsi + 0x20], rbx
0x00007810      e80ba4ffff     call sym.imp.malloc
0x00007815      4885c0         test rax, rax
0x00007818      48894530       mov qword [rbp + 0x30], rax
0x0000781c      7440           je 0x785e
0x0000781e      4885db         test rbx, rbx
0x00007821      7e4d           jle 0x7870
0x00007823      31db           xor ebx, ebx
0x00007825      eb13           jmp 0x783a
0x00007827      660f1f840000.  nop word [rax + rax]
0x00007830      4883c301       add rbx, 1
0x00007834      48395d10       cmp qword [rbp + 0x10], rbx
0x00007838      7e36           jle 0x7870                              ; ../coreutils-8.31/lib/regex_internal.c:1459
0x0000783a      488b4518       mov rax, qword [rbp + 0x18]
0x0000783e      488b34d8       mov rsi, qword [rax + rbx*8]
0x00007842      4889f0         mov rax, rsi
0x00007845      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/regex_internal.c:1454
0x00007849      490306         add rax, qword [r14]
0x0000784c      f6400808       test byte [rax + 8], 8
0x00007850      75de           jne 0x7830
0x00007852      4c89ef         mov rdi, r13
0x00007855      e8e6fdffff     call sym.re_node_set_insert_last
0x0000785a      84c0           test al, al
0x0000785c      75d2           jne 0x7830
0x0000785e      5b             pop rbx
0x0000785f      b80c000000     mov eax, 0xc
0x00007864      5d             pop rbp
0x00007865      415c           pop r12
0x00007867      415d           pop r13
0x00007869      415e           pop r14                                 ; ../coreutils-8.31/lib/regex_internal.c:1464
0x0000786b      c3             ret
0x0000786c      0f1f4000       nop dword [rax]
0x00007870      4d23a6880000.  and r12, qword [r14 + 0x88]
0x00007877      498b4640       mov rax, qword [r14 + 0x40]
0x0000787b      4b8d1464       lea rdx, [r12 + r12*2]
0x0000787f      488d1cd0       lea rbx, [rax + rdx*8]
0x00007883      488b13         mov rdx, qword [rbx]                    ; ../coreutils-8.31/lib/regex_internal.c:1476
0x00007886      48395308       cmp qword [rbx + 8], rdx
0x0000788a      488b4310       mov rax, qword [rbx + 0x10]
0x0000788e      488d7201       lea rsi, [rdx + 1]
0x00007892      7e12           jle 0x78a6
0x00007894      488933         mov qword [rbx], rsi
0x00007897      48892cd0       mov qword [rax + rdx*8], rbp
0x0000789b      31c0           xor eax, eax
0x0000789d      5b             pop rbx
0x0000789e      5d             pop rbp
0x0000789f      415c           pop r12
0x000078a1      415d           pop r13
0x000078a3      415e           pop r14
0x000078a5      c3             ret
0x000078a6      4c8d2436       lea r12, [rsi + rsi]
0x000078aa      4889c7         mov rdi, rax
0x000078ad      48c1e604       shl rsi, 4
0x000078b1      e8daa3ffff     call sym.imp.realloc
0x000078b6      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/regex_internal.c:411
0x000078b9      74a3           je 0x785e
0x000078bb      488b13         mov rdx, qword [rbx]
0x000078be      48894310       mov qword [rbx + 0x10], rax
0x000078c2      4c896308       mov qword [rbx + 8], r12
0x000078c6      488d7201       lea rsi, [rdx + 1]
0x000078ca      ebc8           jmp 0x7894                              ; ../coreutils-8.31/lib/regex_internal.c:415
0x000078cc      0f1f4000       nop dword [rax]
;-- build_upper_buffer:
0x000078d0      4154           push r12
0x000078d2      4c8b6758       mov r12, qword [rdi + 0x58]
0x000078d6      4c396740       cmp qword [rdi + 0x40], r12
0x000078da      55             push rbp
0x000078db      4889fd         mov rbp, rdi
0x000078de      4c0f4e6740     cmovle r12, qword [rdi + 0x40]          ; ../coreutils-8.31/lib/regex_internal.c:417
0x000078e3      53             push rbx
0x000078e4      488b5f30       mov rbx, qword [rdi + 0x30]
0x000078e8      4939dc         cmp r12, rbx
0x000078eb      7e38           jle 0x7925
0x000078ed      e8cea0ffff     call sym.imp.__ctype_toupper_loc        ; ../coreutils-8.31/lib/regex_internal.c:418
0x000078f2      660f1f440000   nop word [rax + rax]
0x000078f8      488b5500       mov rdx, qword [rbp]                    ; ../coreutils-8.31/lib/regex_internal.c:420
0x000078fc      488b4d78       mov rcx, qword [rbp + 0x78]
0x00007900      4801da         add rdx, rbx
0x00007903      48035528       add rdx, qword [rbp + 0x28]
0x00007907      4885c9         test rcx, rcx
0x0000790a      0fb612         movzx edx, byte [rdx]
0x0000790d      7529           jne 0x7938
0x0000790f      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/regex_internal.c:423
0x00007912      488b4d08       mov rcx, qword [rbp + 8]
0x00007916      8b1496         mov edx, dword [rsi + rdx*4]
0x00007919      881419         mov byte [rcx + rbx], dl
0x0000791c      4883c301       add rbx, 1
0x00007920      4939dc         cmp r12, rbx
0x00007923      75d3           jne 0x78f8
0x00007925      48895d30       mov qword [rbp + 0x30], rbx
0x00007929      48895d38       mov qword [rbp + 0x38], rbx
0x0000792d      5b             pop rbx
0x0000792e      5d             pop rbp
0x0000792f      415c           pop r12
0x00007931      c3             ret
0x00007932      660f1f440000   nop word [rax + rax]
0x00007938      0fb61411       movzx edx, byte [rcx + rdx]
0x0000793c      ebd1           jmp 0x790f
0x0000793e      6690           nop
;-- build_wcs_buffer:
0x00007940      4157           push r15
0x00007942      4156           push r14
0x00007944      4155           push r13
0x00007946      4154           push r12
0x00007948      55             push rbp
0x00007949      53             push rbx
0x0000794a      4889fb         mov rbx, rdi
0x0000794d      4883ec68       sub rsp, 0x68
0x00007951      4c8b6758       mov r12, qword [rdi + 0x58]
0x00007955      488b6f30       mov rbp, qword [rdi + 0x30]
0x00007959      64488b042528.  mov rax, qword fs:[0x28]
0x00007962      4889442458     mov qword [rsp + 0x58], rax
0x00007967      31c0           xor eax, eax
0x00007969      4c396740       cmp qword [rdi + 0x40], r12
0x0000796d      4c0f4e6740     cmovle r12, qword [rdi + 0x40]
0x00007972      4939ec         cmp r12, rbp                            ; ../coreutils-8.31/lib/regex_internal.c:103
0x00007975      0f8e89000000   jle 0x7a04                              ; ../coreutils-8.31/lib/regex_internal.c:104
0x0000797b      4c8d7720       lea r14, [rdi + 0x20]
0x0000797f      4c8d6c240c     lea r13, [rsp + 0xc]
0x00007984      0f1f4000       nop dword [rax]
0x00007988      488b7b78       mov rdi, qword [rbx + 0x78]
0x0000798c      4c89e2         mov rdx, r12
0x0000798f      4c8b7b20       mov r15, qword [rbx + 0x20]             ; ../coreutils-8.31/lib/regex_internal.c:119
0x00007993      4829ea         sub rdx, rbp
0x00007996      4885ff         test rdi, rdi
0x00007999      0f85e1000000   jne 0x7a80
0x0000799f      488b7328       mov rsi, qword [rbx + 0x28]
0x000079a3      4801ee         add rsi, rbp
0x000079a6      480333         add rsi, qword [rbx]
0x000079a9      4c89f1         mov rcx, r14
0x000079ac      4c89ef         mov rdi, r13
0x000079af      e89cf6ffff     call sym.rpl_mbrtowc
0x000079b4      488d50ff       lea rdx, [rax - 1]
0x000079b8      4883fafd       cmp rdx, 0xfffffffffffffffd
0x000079bc      0f878e000000   ja 0x7a50
0x000079c2      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000079c6      8b54240c       mov edx, dword [rsp + 0xc]
0x000079ca      7474           je 0x7a40
0x000079cc      488b4b10       mov rcx, qword [rbx + 0x10]
0x000079d0      488d7501       lea rsi, [rbp + 1]
0x000079d4      488d3cad0000.  lea rdi, [rbp*4]
0x000079dc      8914a9         mov dword [rcx + rbp*4], edx
0x000079df      4801c5         add rbp, rax
0x000079e2      4839ee         cmp rsi, rbp
0x000079e5      7d49           jge 0x7a30                              ; ../coreutils-8.31/lib/regex_internal.c:98
0x000079e7      488d543904     lea rdx, [rcx + rdi + 4]
0x000079ec      488d04a9       lea rax, [rcx + rbp*4]
0x000079f0      c702ffffffff   mov dword [rdx], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x000079f6      4883c204       add rdx, 4
0x000079fa      4839d0         cmp rax, rdx
0x000079fd      75f1           jne 0x79f0
0x000079ff      4c39e5         cmp rbp, r12
0x00007a02      7c84           jl 0x7988
0x00007a04      488b442458     mov rax, qword [rsp + 0x58]
0x00007a09      644833042528.  xor rax, qword fs:[0x28]
0x00007a12      48896b30       mov qword [rbx + 0x30], rbp
0x00007a16      48896b38       mov qword [rbx + 0x38], rbp             ; ../coreutils-8.31/lib/regex_internal.c:141
0x00007a1a      0f85de000000   jne 0x7afe
0x00007a20      4883c468       add rsp, 0x68
0x00007a24      5b             pop rbx
0x00007a25      5d             pop rbp
0x00007a26      415c           pop r12                                 ; ../coreutils-8.31/lib/regex_internal.c:120
0x00007a28      415d           pop r13
0x00007a2a      415e           pop r14
0x00007a2c      415f           pop r15
0x00007a2e      c3             ret
0x00007a2f      90             nop
0x00007a30      4889f5         mov rbp, rsi
0x00007a33      4c39e5         cmp rbp, r12
0x00007a36      0f8c4cffffff   jl 0x7988                               ; ../coreutils-8.31/lib/regex_internal.c:126
0x00007a3c      ebc6           jmp 0x7a04
0x00007a3e      6690           nop
0x00007a40      488b4358       mov rax, qword [rbx + 0x58]
0x00007a44      48394340       cmp qword [rbx + 0x40], rax             ; ../coreutils-8.31/lib/regex_internal.c:127
0x00007a48      0f8c9a000000   jl 0x7ae8
0x00007a4e      6690           nop
0x00007a50      488b03         mov rax, qword [rbx]
0x00007a53      488b4b78       mov rcx, qword [rbx + 0x78]
0x00007a57      4801e8         add rax, rbp
0x00007a5a      48034328       add rax, qword [rbx + 0x28]
0x00007a5e      4885c9         test rcx, rcx
0x00007a61      0fb610         movzx edx, byte [rax]
0x00007a64      8954240c       mov dword [rsp + 0xc], edx
0x00007a68      0f8583000000   jne 0x7af1
0x00007a6e      4c897b20       mov qword [rbx + 0x20], r15
0x00007a72      b801000000     mov eax, 1
0x00007a77      e950ffffff     jmp 0x79cc
0x00007a7c      0f1f4000       nop dword [rax]
0x00007a80      8b8b90000000   mov ecx, dword [rbx + 0x90]
0x00007a86      31c0           xor eax, eax
0x00007a88      488d742410     lea rsi, [rsp + 0x10]
0x00007a8d      85c9           test ecx, ecx
0x00007a8f      7f20           jg 0x7ab1
0x00007a91      e913ffffff     jmp 0x79a9
0x00007a96      662e0f1f8400.  nop word cs:[rax + rax]
0x00007aa0      4883c001       add rax, 1
0x00007aa4      4839c2         cmp rdx, rax                            ; ../coreutils-8.31/lib/regex_internal.c:113
0x00007aa7      0f84fcfeffff   je 0x79a9
0x00007aad      488b7b78       mov rdi, qword [rbx + 0x78]
0x00007ab1      488b0b         mov rcx, qword [rbx]
0x00007ab4      4801e9         add rcx, rbp
0x00007ab7      4801c1         add rcx, rax
0x00007aba      48034b28       add rcx, qword [rbx + 0x28]
0x00007abe      0fb609         movzx ecx, byte [rcx]
0x00007ac1      0fb60c0f       movzx ecx, byte [rdi + rcx]
0x00007ac5      488b7b08       mov rdi, qword [rbx + 8]
0x00007ac9      4801ef         add rdi, rbp
0x00007acc      880c07         mov byte [rdi + rax], cl
0x00007acf      880c06         mov byte [rsi + rax], cl
0x00007ad2      8d4801         lea ecx, [rax + 1]
0x00007ad5      3b8b90000000   cmp ecx, dword [rbx + 0x90]
0x00007adb      7cc3           jl 0x7aa0
0x00007add      e9c7feffff     jmp 0x79a9
0x00007ae2      660f1f440000   nop word [rax + rax]
0x00007ae8      4c897b20       mov qword [rbx + 0x20], r15
0x00007aec      e913ffffff     jmp 0x7a04
0x00007af1      0fb61411       movzx edx, byte [rcx + rdx]
0x00007af5      8954240c       mov dword [rsp + 0xc], edx
0x00007af9      e970ffffff     jmp 0x7a6e
0x00007afe      e8cd9fffff     call sym.imp.__stack_chk_fail
0x00007b03      0f1f00         nop dword [rax]
0x00007b06      662e0f1f8400.  nop word cs:[rax + rax]
;-- build_wcs_upper_buffer:
0x00007b10      4157           push r15
0x00007b12      4156           push r14                                ; ../coreutils-8.31/lib/regex_internal.c:154
0x00007b14      4989fe         mov r14, rdi
0x00007b17      4155           push r13
0x00007b19      4154           push r12
0x00007b1b      55             push rbp
0x00007b1c      53             push rbx
0x00007b1d      4881eca80000.  sub rsp, 0xa8
0x00007b24      488b5f58       mov rbx, qword [rdi + 0x58]
0x00007b28      4c8b7f30       mov r15, qword [rdi + 0x30]
0x00007b2c      64488b042528.  mov rax, qword fs:[0x28]
0x00007b35      488984249800.  mov qword [rsp + 0x98], rax
0x00007b3d      31c0           xor eax, eax
0x00007b3f      48395f40       cmp qword [rdi + 0x40], rbx             ; ../coreutils-8.31/lib/regex_internal.c:114
0x00007b43      480f4e5f40     cmovle rbx, qword [rdi + 0x40]          ; ../coreutils-8.31/lib/regex_internal.c:105
0x00007b48      80bf8a000000.  cmp byte [rdi + 0x8a], 0
0x00007b4f      750b           jne 0x7b5c
0x00007b51      48837f7800     cmp qword [rdi + 0x78], 0
0x00007b56      0f8484010000   je 0x7ce0
0x00007b5c      4d8b6e38       mov r13, qword [r14 + 0x38]
0x00007b60      4939df         cmp r15, rbx
0x00007b63      7c3b           jl 0x7ba0
0x00007b65      4d897e30       mov qword [r14 + 0x30], r15
0x00007b69      4d896e38       mov qword [r14 + 0x38], r13
0x00007b6d      31c0           xor eax, eax
0x00007b6f      488b8c249800.  mov rcx, qword [rsp + 0x98]
0x00007b77      6448330c2528.  xor rcx, qword fs:[0x28]
0x00007b80      0f8584050000   jne 0x810a
0x00007b86      4881c4a80000.  add rsp, 0xa8
0x00007b8d      5b             pop rbx
0x00007b8e      5d             pop rbp
0x00007b8f      415c           pop r12
0x00007b91      415d           pop r13
0x00007b93      415e           pop r14
0x00007b95      415f           pop r15
0x00007b97      c3             ret
0x00007b98      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/regex_internal.c:-9
0x00007ba0      498d4620       lea rax, [r14 + 0x20]
0x00007ba4      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/regex_internal.c:-8
0x00007ba9      4889d8         mov rax, rbx
0x00007bac      4c29f8         sub rax, r15
0x00007baf      4889442410     mov qword [rsp + 0x10], rax
0x00007bb4      488d442444     lea rax, [rsp + 0x44]
0x00007bb9      4889442420     mov qword [rsp + 0x20], rax             ; ../coreutils-8.31/lib/regex_internal.c:5
0x00007bbe      498b5678       mov rdx, qword [r14 + 0x78]
0x00007bc2      498b4620       mov rax, qword [r14 + 0x20]
0x00007bc6      4885d2         test rdx, rdx
0x00007bc9      4889442448     mov qword [rsp + 0x48], rax
0x00007bce      0f8505030000   jne 0x7ed9
0x00007bd4      498b6e28       mov rbp, qword [r14 + 0x28]
0x00007bd8      4c01ed         add rbp, r13
0x00007bdb      49032e         add rbp, qword [r14]
0x00007bde      48896c2418     mov qword [rsp + 0x18], rbp
0x00007be3      488b4c2408     mov rcx, qword [rsp + 8]
0x00007be8      488b542410     mov rdx, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/regex_internal.c:8
0x00007bed      488b742418     mov rsi, qword [rsp + 0x18]
0x00007bf2      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00007bf7      e854f4ffff     call sym.rpl_mbrtowc                    ; ../coreutils-8.31/lib/regex_internal.c:9
0x00007bfc      4889c5         mov rbp, rax
0x00007bff      488d40ff       lea rax, [rax - 1]
0x00007c03      4883f8fc       cmp rax, 0xfffffffffffffffc
0x00007c07      4889442420     mov qword [rsp + 0x20], rax
0x00007c0c      0f8737030000   ja 0x7f49
0x00007c12      8b542444       mov edx, dword [rsp + 0x44]
0x00007c16      89d7           mov edi, edx
0x00007c18      89542410       mov dword [rsp + 0x10], edx
0x00007c1c      e80fa1ffff     call sym.imp.towupper
0x00007c21      8b542410       mov edx, dword [rsp + 0x10]
0x00007c25      4189c4         mov r12d, eax
0x00007c28      4c897c2408     mov qword [rsp + 8], r15
0x00007c2d      39c2           cmp edx, eax
0x00007c2f      0f84fb020000   je 0x7f30
0x00007c35      488d4c2450     lea rcx, [rsp + 0x50]                   ; ../coreutils-8.31/lib/regex_internal.c:15
0x00007c3a      488d542448     lea rdx, [rsp + 0x48]
0x00007c3f      89c6           mov esi, eax
0x00007c41      4889cf         mov rdi, rcx
0x00007c44      48894c2410     mov qword [rsp + 0x10], rcx
0x00007c49      e8e29fffff     call sym.imp.wcrtomb
0x00007c4e      4839c5         cmp rbp, rax
0x00007c51      4989c3         mov r11, rax
0x00007c54      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00007c59      0f8587030000   jne 0x7fe6
0x00007c5f      498b7e08       mov rdi, qword [r14 + 8]
0x00007c63      4889ea         mov rdx, rbp
0x00007c66      4889ce         mov rsi, rcx
0x00007c69      4c01ff         add rdi, r15
0x00007c6c      e86f9fffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/regex_internal.c:70
0x00007c71      4180be8c0000.  cmp byte [r14 + 0x8c], 0
0x00007c79      4a8d442d00     lea rax, [rbp + r13]
0x00007c7e      0f8531030000   jne 0x7fb5                              ; ../coreutils-8.31/lib/regex_internal.c:74
0x00007c84      4983c701       add r15, 1
0x00007c88      488b742408     mov rsi, qword [rsp + 8]
0x00007c8d      498b5610       mov rdx, qword [r14 + 0x10]
0x00007c91      498d4c2fff     lea rcx, [r15 + rbp - 1]
0x00007c96      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/regex_internal.c:75
0x00007c99      4939cf         cmp r15, rcx
0x00007c9c      488d04b50000.  lea rax, [rsi*4]
0x00007ca4      448924b2       mov dword [rdx + rsi*4], r12d
0x00007ca8      0f8db2feffff   jge 0x7b60
0x00007cae      488d440204     lea rax, [rdx + rax + 4]
0x00007cb3      488d148a       lea rdx, [rdx + rcx*4]
0x00007cb7      660f1f840000.  nop word [rax + rax]
0x00007cc0      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x00007cc6      4883c004       add rax, 4
0x00007cca      4839c2         cmp rdx, rax
0x00007ccd      75f1           jne 0x7cc0
0x00007ccf      4989cf         mov r15, rcx
0x00007cd2      e989feffff     jmp 0x7b60
0x00007cd7      660f1f840000.  nop word [rax + rax]
0x00007ce0      80bf8c000000.  cmp byte [rdi + 0x8c], 0
0x00007ce7      0f856ffeffff   jne 0x7b5c
0x00007ced      4939df         cmp r15, rbx
0x00007cf0      0f8d92010000   jge 0x7e88
0x00007cf6      488d4720       lea rax, [rdi + 0x20]                   ; ../coreutils-8.31/lib/regex_internal.c:-81
0x00007cfa      4889442408     mov qword [rsp + 8], rax
0x00007cff      488d442444     lea rax, [rsp + 0x44]
0x00007d04      4889442430     mov qword [rsp + 0x30], rax
0x00007d09      488d442448     lea rax, [rsp + 0x48]
0x00007d0e      4889442438     mov qword [rsp + 0x38], rax             ; ../coreutils-8.31/lib/regex_internal.c:-80
0x00007d13      488d442450     lea rax, [rsp + 0x50]
0x00007d18      4889442428     mov qword [rsp + 0x28], rax
0x00007d1d      0f1f00         nop dword [rax]
0x00007d20      498b6e28       mov rbp, qword [r14 + 0x28]             ; ../coreutils-8.31/lib/regex_internal.c:-67
0x00007d24      4d89fd         mov r13, r15                            ; ../coreutils-8.31/lib/regex_internal.c:-66
0x00007d27      4c01fd         add rbp, r15
0x00007d2a      49032e         add rbp, qword [r14]
0x00007d2d      440fb66500     movzx r12d, byte [rbp]
0x00007d32      41f6c480       test r12b, 0x80
0x00007d36      7512           jne 0x7d4a
0x00007d38      488b7c2408     mov rdi, qword [rsp + 8]
0x00007d3d      e84ea0ffff     call sym.imp.mbsinit
0x00007d42      85c0           test eax, eax
0x00007d44      0f85ee000000   jne 0x7e38
0x00007d4a      498b4620       mov rax, qword [r14 + 0x20]
0x00007d4e      488b7c2430     mov rdi, qword [rsp + 0x30]             ; ../coreutils-8.31/lib/regex_internal.c:-63
0x00007d53      4889da         mov rdx, rbx
0x00007d56      488b4c2408     mov rcx, qword [rsp + 8]
0x00007d5b      4c29fa         sub rdx, r15
0x00007d5e      4889ee         mov rsi, rbp
0x00007d61      4889542410     mov qword [rsp + 0x10], rdx
0x00007d66      4889442448     mov qword [rsp + 0x48], rax
0x00007d6b      48897c2420     mov qword [rsp + 0x20], rdi             ; ../coreutils-8.31/lib/regex_internal.c:-60
0x00007d70      e8dbf2ffff     call sym.rpl_mbrtowc
0x00007d75      4889c5         mov rbp, rax
0x00007d78      488d40ff       lea rax, [rax - 1]
0x00007d7c      4883f8fc       cmp rax, 0xfffffffffffffffc
0x00007d80      0f87e2000000   ja 0x7e68
0x00007d86      8b542444       mov edx, dword [rsp + 0x44]
0x00007d8a      89d7           mov edi, edx
0x00007d8c      89542418       mov dword [rsp + 0x18], edx             ; wchar2.h:-182
0x00007d90      e89b9fffff     call sym.imp.towupper                   ; string_fortified.h:-479
0x00007d95      8b542418       mov edx, dword [rsp + 0x18]
0x00007d99      4189c4         mov r12d, eax
0x00007d9c      39c2           cmp edx, eax
0x00007d9e      7478           je 0x7e18
0x00007da0      488b542438     mov rdx, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/regex_internal.c:-172
0x00007da5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00007daa      89c6           mov esi, eax
0x00007dac      e87f9effff     call sym.imp.wcrtomb
0x00007db1      4839c5         cmp rbp, rax
0x00007db4      0f856e010000   jne 0x7f28
0x00007dba      498b7e08       mov rdi, qword [r14 + 8]
0x00007dbe      488b742428     mov rsi, qword [rsp + 0x28]
0x00007dc3      4889ea         mov rdx, rbp
0x00007dc6      4c01ff         add rdi, r15
0x00007dc9      e8129effff     call sym.imp.memcpy
0x00007dce      4983c701       add r15, 1
0x00007dd2      498b5610       mov rdx, qword [r14 + 0x10]
0x00007dd6      4a8d04ad0000.  lea rax, [r13*4]
0x00007dde      498d4c2fff     lea rcx, [r15 + rbp - 1]
0x00007de3      4939cf         cmp r15, rcx
0x00007de6      468924aa       mov dword [rdx + r13*4], r12d
0x00007dea      7d1e           jge 0x7e0a                              ; ../coreutils-8.31/lib/regex_internal.c:-173
0x00007dec      488d440204     lea rax, [rdx + rax + 4]
0x00007df1      488d148a       lea rdx, [rdx + rcx*4]
0x00007df5      0f1f00         nop dword [rax]
0x00007df8      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x00007dfe      4883c004       add rax, 4                              ; string_fortified.h:-479
0x00007e02      4839c2         cmp rdx, rax
0x00007e05      75f1           jne 0x7df8
0x00007e07      4989cf         mov r15, rcx
0x00007e0a      4c39fb         cmp rbx, r15                            ; ../coreutils-8.31/lib/regex_internal.c:-204
0x00007e0d      0f8f0dffffff   jg 0x7d20
0x00007e13      eb73           jmp 0x7e88
0x00007e15      0f1f00         nop dword [rax]
0x00007e18      498b7628       mov rsi, qword [r14 + 0x28]
0x00007e1c      498b7e08       mov rdi, qword [r14 + 8]
0x00007e20      4889ea         mov rdx, rbp
0x00007e23      4c01fe         add rsi, r15
0x00007e26      490336         add rsi, qword [r14]
0x00007e29      4c01ff         add rdi, r15
0x00007e2c      e8af9dffff     call sym.imp.memcpy
0x00007e31      eb9b           jmp 0x7dce
0x00007e33      0f1f440000     nop dword [rax + rax]
0x00007e38      e8839bffff     call sym.imp.__ctype_toupper_loc
0x00007e3d      488b00         mov rax, qword [rax]
0x00007e40      498b5608       mov rdx, qword [r14 + 8]                ; ../coreutils-8.31/lib/regex_internal.c:-166
0x00007e44      428b04a0       mov eax, dword [rax + r12*4]
0x00007e48      4288043a       mov byte [rdx + r15], al
0x00007e4c      498b5608       mov rdx, qword [r14 + 8]
0x00007e50      498b4610       mov rax, qword [r14 + 0x10]
0x00007e54      420fb6143a     movzx edx, byte [rdx + r15]
0x00007e59      428914b8       mov dword [rax + r15*4], edx
0x00007e5d      4983c701       add r15, 1
0x00007e61      eba7           jmp 0x7e0a
0x00007e63      0f1f440000     nop dword [rax + rax]
0x00007e68      4883f8fd       cmp rax, 0xfffffffffffffffd
0x00007e6c      7532           jne 0x7ea0
0x00007e6e      498b4658       mov rax, qword [r14 + 0x58]
0x00007e72      49394640       cmp qword [r14 + 0x40], rax             ; ../coreutils-8.31/lib/regex_internal.c:-162
0x00007e76      7d28           jge 0x7ea0
0x00007e78      488b442448     mov rax, qword [rsp + 0x48]
0x00007e7d      49894620       mov qword [r14 + 0x20], rax
0x00007e81      0f1f80000000.  nop dword [rax]
0x00007e88      4d897e30       mov qword [r14 + 0x30], r15
0x00007e8c      4d897e38       mov qword [r14 + 0x38], r15
0x00007e90      31c0           xor eax, eax
0x00007e92      e9d8fcffff     jmp 0x7b6f
0x00007e97      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/regex_internal.c:-158
0x00007ea0      498b06         mov rax, qword [r14]
0x00007ea3      498b5608       mov rdx, qword [r14 + 8]
0x00007ea7      4c01f8         add rax, r15
0x00007eaa      49034628       add rax, qword [r14 + 0x28]
0x00007eae      0fb600         movzx eax, byte [rax]
0x00007eb1      4288043a       mov byte [rdx + r15], al
0x00007eb5      498b5610       mov rdx, qword [r14 + 0x10]
0x00007eb9      4983c701       add r15, 1
0x00007ebd      4883fdff       cmp rbp, 0xffffffffffffffff
0x00007ec1      428904aa       mov dword [rdx + r13*4], eax
0x00007ec5      0f853fffffff   jne 0x7e0a
0x00007ecb      488b442448     mov rax, qword [rsp + 0x48]
0x00007ed0      49894620       mov qword [r14 + 0x20], rax
0x00007ed4      e931ffffff     jmp 0x7e0a
0x00007ed9      418b86900000.  mov eax, dword [r14 + 0x90]
0x00007ee0      85c0           test eax, eax                           ; ../coreutils-8.31/lib/regex_internal.c:-132
0x00007ee2      0f8e18020000   jle 0x8100
0x00007ee8      498b7e28       mov rdi, qword [r14 + 0x28]
0x00007eec      448d58ff       lea r11d, [rax - 1]
0x00007ef0      488d4c2450     lea rcx, [rsp + 0x50]
0x00007ef5      31c0           xor eax, eax
0x00007ef7      4c01ef         add rdi, r13
0x00007efa      49033e         add rdi, qword [r14]                    ; ../coreutils-8.31/lib/regex_internal.c:-178
0x00007efd      eb0b           jmp 0x7f0a
0x00007eff      4883c001       add rax, 1
0x00007f03      4839442410     cmp qword [rsp + 0x10], rax
0x00007f08      7411           je 0x7f1b
0x00007f0a      0fb63407       movzx esi, byte [rdi + rax]
0x00007f0e      4939c3         cmp r11, rax
0x00007f11      0fb63432       movzx esi, byte [rdx + rsi]
0x00007f15      40883401       mov byte [rcx + rax], sil
0x00007f19      75e4           jne 0x7eff
0x00007f1b      48894c2418     mov qword [rsp + 0x18], rcx
0x00007f20      e9befcffff     jmp 0x7be3
0x00007f25      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/regex_internal.c:-175
0x00007f28      4d89fd         mov r13, r15                            ; ../coreutils-8.31/lib/regex_internal.c:-173
0x00007f2b      e98efcffff     jmp 0x7bbe
0x00007f30      498b7e08       mov rdi, qword [r14 + 8]
0x00007f34      488b742418     mov rsi, qword [rsp + 0x18]
0x00007f39      4889ea         mov rdx, rbp
0x00007f3c      4c01ff         add rdi, r15
0x00007f3f      e89c9cffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/regex_internal.c:-171
0x00007f44      e928fdffff     jmp 0x7c71
0x00007f49      48837c2420fd   cmp qword [rsp + 0x20], 0xfffffffffffffffd
0x00007f4f      750a           jne 0x7f5b
0x00007f51      498b4658       mov rax, qword [r14 + 0x58]
0x00007f55      49394640       cmp qword [r14 + 0x40], rax
0x00007f59      7c7d           jl 0x7fd8
0x00007f5b      498b06         mov rax, qword [r14]
0x00007f5e      498b5678       mov rdx, qword [r14 + 0x78]
0x00007f62      4c01e8         add rax, r13
0x00007f65      49034628       add rax, qword [r14 + 0x28]
0x00007f69      4885d2         test rdx, rdx
0x00007f6c      0fb600         movzx eax, byte [rax]
0x00007f6f      0f85a7010000   jne 0x811c
0x00007f75      498b5608       mov rdx, qword [r14 + 8]
0x00007f79      4c89f9         mov rcx, r15
0x00007f7c      4288043a       mov byte [rdx + r15], al
0x00007f80      4180be8c0000.  cmp byte [r14 + 0x8c], 0
0x00007f88      0f8581010000   jne 0x810f
0x00007f8e      498b5610       mov rdx, qword [r14 + 0x10]
0x00007f92      4983c501       add r13, 1
0x00007f96      4983c701       add r15, 1
0x00007f9a      4883fdff       cmp rbp, 0xffffffffffffffff
0x00007f9e      89048a         mov dword [rdx + rcx*4], eax
0x00007fa1      0f85b9fbffff   jne 0x7b60
0x00007fa7      488b442448     mov rax, qword [rsp + 0x48]
0x00007fac      49894620       mov qword [r14 + 0x20], rax
0x00007fb0      e9abfbffff     jmp 0x7b60                              ; ../coreutils-8.31/lib/regex_internal.c:-240
0x00007fb5      498b5618       mov rdx, qword [r14 + 0x18]
0x00007fb9      4c89f9         mov rcx, r15
0x00007fbc      4d89ea         mov r10, r13
0x00007fbf      4c29e9         sub rcx, r13
0x00007fc2      488d14ca       lea rdx, [rdx + rcx*8]
0x00007fc6      4e8914d2       mov qword [rdx + r10*8], r10
0x00007fca      4983c201       add r10, 1
0x00007fce      4c39d0         cmp rax, r10
0x00007fd1      75f3           jne 0x7fc6
0x00007fd3      e9acfcffff     jmp 0x7c84
0x00007fd8      488b442448     mov rax, qword [rsp + 0x48]
0x00007fdd      49894620       mov qword [r14 + 0x20], rax
0x00007fe1      e97ffbffff     jmp 0x7b65
0x00007fe6      4883f8ff       cmp rax, 0xffffffffffffffff
0x00007fea      0f8440ffffff   je 0x7f30
0x00007ff0      4a8d0438       lea rax, [rax + r15]
0x00007ff4      4889c6         mov rsi, rax
0x00007ff7      4889442408     mov qword [rsp + 8], rax
0x00007ffc      498b4640       mov rax, qword [r14 + 0x40]             ; ../coreutils-8.31/lib/regex_internal.c:-219
0x00008000      4839c6         cmp rsi, rax
0x00008003      77d3           ja 0x7fd8
0x00008005      49837e1800     cmp qword [r14 + 0x18], 0
0x0000800a      0f84b8000000   je 0x80c8
0x00008010      4180be8c0000.  cmp byte [r14 + 0x8c], 0
0x00008018      7520           jne 0x803a
0x0000801a      4d85ff         test r15, r15
0x0000801d      7413           je 0x8032
0x0000801f      498b5618       mov rdx, qword [r14 + 0x18]             ; ../coreutils-8.31/lib/regex_internal.c:-213
0x00008023      31c0           xor eax, eax
0x00008025      488904c2       mov qword [rdx + rax*8], rax
0x00008029      4883c001       add rax, 1
0x0000802d      4c39f8         cmp rax, r15
0x00008030      75f3           jne 0x8025                              ; ../coreutils-8.31/lib/regex_internal.c:-215
0x00008032      41c6868c0000.  mov byte [r14 + 0x8c], 1
0x0000803a      498b7e08       mov rdi, qword [r14 + 8]                ; ../coreutils-8.31/lib/regex_internal.c:-213
0x0000803e      4889ce         mov rsi, rcx
0x00008041      4c89da         mov rdx, r11                            ; ../coreutils-8.31/lib/regex_internal.c:-210
0x00008044      4c895c2410     mov qword [rsp + 0x10], r11
0x00008049      4c01ff         add rdi, r15
0x0000804c      e88f9bffff     call sym.imp.memcpy
0x00008051      498b4610       mov rax, qword [r14 + 0x10]
0x00008055      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x0000805a      4a8d0cb8       lea rcx, [rax + r15*4]
0x0000805e      498b4618       mov rax, qword [r14 + 0x18]
0x00008062      4983fb01       cmp r11, 1
0x00008066      448921         mov dword [rcx], r12d
0x00008069      4a8d34f8       lea rsi, [rax + r15*8]
0x0000806d      4c892e         mov qword [rsi], r13
0x00008070      7628           jbe 0x809a
0x00008072      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regex_internal.c:-207
0x00008077      488b542420     mov rdx, qword [rsp + 0x20]
0x0000807c      4839e8         cmp rax, rbp                            ; ../coreutils-8.31/lib/regex_internal.c:-204
0x0000807f      480f42d0       cmovb rdx, rax
0x00008083      4c01ea         add rdx, r13
0x00008086      488914c6       mov qword [rsi + rax*8], rdx
0x0000808a      c70481ffffff.  mov dword [rcx + rax*4], 0xffffffff     ; ../coreutils-8.31/lib/regex_internal.c:-201 ; [0xffffffff:4]=-1 ; -1
0x00008091      4883c001       add rax, 1
0x00008095      4c39d8         cmp rax, r11
0x00008098      75dd           jne 0x8077
0x0000809a      498b5e58       mov rbx, qword [r14 + 0x58]
0x0000809e      4929eb         sub r11, rbp
0x000080a1      4c01db         add rbx, r11
0x000080a4      4d3b6e60       cmp r13, qword [r14 + 0x60]
0x000080a8      49895e58       mov qword [r14 + 0x58], rbx
0x000080ac      7d04           jge 0x80b2                              ; ../coreutils-8.31/lib/regex_internal.c:-228
0x000080ae      4d015e68       add qword [r14 + 0x68], r11
0x000080b2      49395e40       cmp qword [r14 + 0x40], rbx
0x000080b6      4c8b7c2408     mov r15, qword [rsp + 8]
0x000080bb      490f4e5e40     cmovle rbx, qword [r14 + 0x40]
0x000080c0      4901ed         add r13, rbp                            ; ../coreutils-8.31/lib/regex_internal.c:-225
0x000080c3      e998faffff     jmp 0x7b60
0x000080c8      488d3cc50000.  lea rdi, [rax*8]
0x000080d0      48894c2418     mov qword [rsp + 0x18], rcx
0x000080d5      4c895c2410     mov qword [rsp + 0x10], r11
0x000080da      e8419bffff     call sym.imp.malloc
0x000080df      4885c0         test rax, rax
0x000080e2      49894618       mov qword [r14 + 0x18], rax
0x000080e6      4c8b5c2410     mov r11, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/regexec.c:3290
0x000080eb      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000080f0      0f851affffff   jne 0x8010
0x000080f6      b80c000000     mov eax, 0xc                            ; ../coreutils-8.31/lib/regexec.c:3295
0x000080fb      e96ffaffff     jmp 0x7b6f
0x00008100      488d4c2450     lea rcx, [rsp + 0x50]
0x00008105      e911feffff     jmp 0x7f1b
0x0000810a      e8c199ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/regexec.c:3300
0x0000810f      498b5618       mov rdx, qword [r14 + 0x18]
0x00008113      4e892cfa       mov qword [rdx + r15*8], r13
0x00008117      e972feffff     jmp 0x7f8e
0x0000811c      0fb60402       movzx eax, byte [rdx + rax]
0x00008120      e950feffff     jmp 0x7f75
0x00008125      90             nop
0x00008126      662e0f1f8400.  nop word cs:[rax + rax]
;-- extend_buffers:
0x00008130      55             push rbp
0x00008131      53             push rbx
0x00008132      48bafeffffff.  movabs rdx, 0xffffffffffffffe           ; 1152921504606846974
0x0000813c      4883ec08       sub rsp, 8
0x00008140      488b4740       mov rax, qword [rdi + 0x40]
0x00008144      4839d0         cmp rax, rdx
0x00008147      0f870b010000   ja 0x8258
0x0000814d      488b5758       mov rdx, qword [rdi + 0x58]
0x00008151      4801c0         add rax, rax
0x00008154      4863f6         movsxd rsi, esi
0x00008157      4889fb         mov rbx, rdi
0x0000815a      4839d0         cmp rax, rdx                            ; ../coreutils-8.31/lib/regexec.c:3320
0x0000815d      480f4fc2       cmovg rax, rdx
0x00008161      4839f0         cmp rax, rsi
0x00008164      480f4df0       cmovge rsi, rax
0x00008168      e833f4ffff     call sym.re_string_realloc_buffers
0x0000816d      85c0           test eax, eax
0x0000816f      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/regexec.c:3323
0x00008171      0f85b6000000   jne 0x822d
0x00008177      488bbbb80000.  mov rdi, qword [rbx + 0xb8]
0x0000817e      4885ff         test rdi, rdi
0x00008181      7421           je 0x81a4
0x00008183      488b4340       mov rax, qword [rbx + 0x40]
0x00008187      488d34c50800.  lea rsi, [rax*8 + 8]
0x0000818f      e8fc9affff     call sym.imp.realloc
0x00008194      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/regex_internal.c:-209
0x00008197      0f84bb000000   je 0x8258
0x0000819d      488983b80000.  mov qword [rbx + 0xb8], rax
0x000081a4      80bb88000000.  cmp byte [rbx + 0x88], 0
0x000081ab      8b8390000000   mov eax, dword [rbx + 0x90]
0x000081b1      741d           je 0x81d0
0x000081b3      83f801         cmp eax, 1
0x000081b6      4889df         mov rdi, rbx
0x000081b9      0f8eb1000000   jle 0x8270
0x000081bf      4883c408       add rsp, 8
0x000081c3      5b             pop rbx
0x000081c4      5d             pop rbp                                 ; ../coreutils-8.31/lib/regex_internal.c:-204
0x000081c5      e946f9ffff     jmp sym.build_wcs_upper_buffer
0x000081ca      660f1f440000   nop word [rax + rax]
0x000081d0      83f801         cmp eax, 1
0x000081d3      7f6b           jg 0x8240
0x000081d5      488b4b78       mov rcx, qword [rbx + 0x78]
0x000081d9      4885c9         test rcx, rcx
0x000081dc      744f           je 0x822d
0x000081de      488b7358       mov rsi, qword [rbx + 0x58]
0x000081e2      48397340       cmp qword [rbx + 0x40], rsi
0x000081e6      480f4e7340     cmovle rsi, qword [rbx + 0x40]
0x000081eb      488b4330       mov rax, qword [rbx + 0x30]
0x000081ef      4839c6         cmp rsi, rax
0x000081f2      7f10           jg 0x8204
0x000081f4      eb2f           jmp 0x8225
0x000081f6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regexec.c:3337
0x00008200      488b4b78       mov rcx, qword [rbx + 0x78]
0x00008204      488b13         mov rdx, qword [rbx]
0x00008207      4801c2         add rdx, rax
0x0000820a      48035328       add rdx, qword [rbx + 0x28]
0x0000820e      0fb612         movzx edx, byte [rdx]                   ; ../coreutils-8.31/lib/regexec.c:3297
0x00008211      0fb60c11       movzx ecx, byte [rcx + rdx]
0x00008215      488b5308       mov rdx, qword [rbx + 8]
0x00008219      880c02         mov byte [rdx + rax], cl
0x0000821c      4883c001       add rax, 1
0x00008220      4839c6         cmp rsi, rax
0x00008223      75db           jne 0x8200
0x00008225      48894330       mov qword [rbx + 0x30], rax
0x00008229      48894338       mov qword [rbx + 0x38], rax
0x0000822d      4883c408       add rsp, 8
0x00008231      89e8           mov eax, ebp
0x00008233      5b             pop rbx
0x00008234      5d             pop rbp
0x00008235      c3             ret
0x00008236      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regexec.c:925
0x00008240      4889df         mov rdi, rbx
0x00008243      e8f8f6ffff     call sym.build_wcs_buffer
0x00008248      4883c408       add rsp, 8
0x0000824c      89e8           mov eax, ebp
0x0000824e      5b             pop rbx
0x0000824f      5d             pop rbp
0x00008250      c3             ret                                     ; ../coreutils-8.31/lib/regexec.c:929
0x00008251      0f1f80000000.  nop dword [rax]
0x00008258      bd0c000000     mov ebp, 0xc
0x0000825d      4883c408       add rsp, 8
0x00008261      89e8           mov eax, ebp                            ; ../coreutils-8.31/lib/regexec.c:935
0x00008263      5b             pop rbx
0x00008264      5d             pop rbp
0x00008265      c3             ret                                     ; ../coreutils-8.31/lib/regexec.c:939
0x00008266      662e0f1f8400.  nop word cs:[rax + rax]
0x00008270      e85bf6ffff     call sym.build_upper_buffer
0x00008275      4883c408       add rsp, 8
0x00008279      89e8           mov eax, ebp
0x0000827b      5b             pop rbx
0x0000827c      5d             pop rbp
0x0000827d      c3             ret
0x0000827e      6690           nop
;-- clean_state_log_if_needed:
0x00008280      4154           push r12
0x00008282      55             push rbp
0x00008283      4889f5         mov rbp, rsi
0x00008286      53             push rbx
0x00008287      488b4740       mov rax, qword [rdi + 0x40]
0x0000828b      4889fb         mov rbx, rdi
0x0000828e      4c8ba7c00000.  mov r12, qword [rdi + 0xc0]
0x00008295      4839f0         cmp rax, rsi
0x00008298      7f26           jg 0x82c0
0x0000829a      483b4758       cmp rax, qword [rdi + 0x58]
0x0000829e      7d20           jge 0x82c0
0x000082a0      8d7501         lea esi, [rbp + 1]                      ; string_fortified.h:-698
0x000082a3      4889df         mov rdi, rbx
0x000082a6      e885feffff     call sym.extend_buffers
0x000082ab      85c0           test eax, eax
0x000082ad      7507           jne 0x82b6
0x000082af      4939ec         cmp r12, rbp
0x000082b2      7c2c           jl 0x82e0
0x000082b4      31c0           xor eax, eax
0x000082b6      5b             pop rbx
0x000082b7      5d             pop rbp
0x000082b8      415c           pop r12
0x000082ba      c3             ret
0x000082bb      0f1f440000     nop dword [rax + rax]
0x000082c0      488b4330       mov rax, qword [rbx + 0x30]
0x000082c4      4839e8         cmp rax, rbp
0x000082c7      7fe6           jg 0x82af                               ; ../coreutils-8.31/lib/regcomp.c:3021
0x000082c9      483b4358       cmp rax, qword [rbx + 0x58]
0x000082cd      7de0           jge 0x82af
0x000082cf      8d7501         lea esi, [rbp + 1]
0x000082d2      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/regcomp.c:3027
0x000082d5      e856feffff     call sym.extend_buffers
0x000082da      85c0           test eax, eax
0x000082dc      74d1           je 0x82af
0x000082de      ebd6           jmp 0x82b6
0x000082e0      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x000082e7      4889ea         mov rdx, rbp
0x000082ea      31f6           xor esi, esi
0x000082ec      4c29e2         sub rdx, r12
0x000082ef      48c1e203       shl rdx, 3
0x000082f3      4a8d7ce008     lea rdi, [rax + r12*8 + 8]
0x000082f8      e86398ffff     call sym.imp.memset
0x000082fd      4889abc00000.  mov qword [rbx + 0xc0], rbp
0x00008304      ebae           jmp 0x82b4
0x00008306      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_charset:
0x00008310      53             push rbx
0x00008311      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/regcomp.c:2974
0x00008314      488b3f         mov rdi, qword [rdi]
0x00008317      e8b496ffff     call sym.imp.free
0x0000831c      488b7b08       mov rdi, qword [rbx + 8]
0x00008320      e8ab96ffff     call sym.imp.free
0x00008325      488b7b10       mov rdi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/regcomp.c:2986
0x00008329      e8a296ffff     call sym.imp.free                       ; ../coreutils-8.31/lib/regcomp.c:2987
0x0000832e      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/regcomp.c:2989
0x00008332      e89996ffff     call sym.imp.free
0x00008337      4889df         mov rdi, rbx
0x0000833a      5b             pop rbx
0x0000833b      e99096ffff     jmp sym.imp.free
;-- free_token:
0x00008340      8b4708         mov eax, dword [rdi + 8]
0x00008343      25ff000400     and eax, 0x400ff
0x00008348      83f806         cmp eax, 6
0x0000834b      7413           je 0x8360
0x0000834d      83f803         cmp eax, 3
0x00008350      7406           je 0x8358
0x00008352      f3c3           ret
0x00008354      0f1f4000       nop dword [rax]
0x00008358      488b3f         mov rdi, qword [rdi]
0x0000835b      e97096ffff     jmp sym.imp.free
0x00008360      488b3f         mov rdi, qword [rdi]
0x00008363      ebab           jmp sym.free_charset
0x00008365      90             nop
0x00008366      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_tree:
0x00008370      488d7e28       lea rdi, [rsi + 0x28]
0x00008374      4883ec08       sub rsp, 8
0x00008378      e8c3ffffff     call sym.free_token
0x0000837d      31c0           xor eax, eax
0x0000837f      4883c408       add rsp, 8
0x00008383      c3             ret
0x00008384      6690           nop                                     ; ../coreutils-8.31/lib/regex_internal.c:551
0x00008386      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_dfa_add_node:
0x00008390      4157           push r15
0x00008392      4156           push r14
0x00008394      4989f6         mov r14, rsi
0x00008397      4155           push r13                                ; ../coreutils-8.31/lib/regex_internal.c:554
0x00008399      4154           push r12
0x0000839b      55             push rbp
0x0000839c      53             push rbx
0x0000839d      4889fb         mov rbx, rdi
0x000083a0      4883ec18       sub rsp, 0x18
0x000083a4      488b7710       mov rsi, qword [rdi + 0x10]
0x000083a8      488b6f08       mov rbp, qword [rdi + 8]
0x000083ac      4839ee         cmp rsi, rbp
0x000083af      0f83ab000000   jae 0x8460
0x000083b5      4c8b6718       mov r12, qword [rdi + 0x18]
0x000083b9      488b6f28       mov rbp, qword [rdi + 0x28]
0x000083bd      4889f0         mov rax, rsi
0x000083c0      89d1           mov ecx, edx
0x000083c2      48c1e004       shl rax, 4
0x000083c6      480303         add rax, qword [rbx]
0x000083c9      81e1ff00fcff   and ecx, 0xfffc00ff
0x000083cf      48895008       mov qword [rax + 8], rdx
0x000083d3      894808         mov dword [rax + 8], ecx
0x000083d6      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/regex_internal.c:559
0x000083d8      80fa06         cmp dl, 6
0x000083db      4c8930         mov qword [rax], r14
0x000083de      0f94c1         sete cl
0x000083e1      80fa05         cmp dl, 5
0x000083e4      750c           jne 0x83f2
0x000083e6      31c9           xor ecx, ecx                            ; string_fortified.h:-828
0x000083e8      83bbb4000000.  cmp dword [rbx + 0xb4], 1
0x000083ef      0f9fc1         setg cl
0x000083f2      0fb6500a       movzx edx, byte [rax + 0xa]
0x000083f6      c1e104         shl ecx, 4
0x000083f9      660fefc0       pxor xmm0, xmm0
0x000083fd      83e2ef         and edx, 0xffffffef                     ; ../coreutils-8.31/lib/regex_internal.c:561 ; 4294967279
0x00008400      09ca           or edx, ecx
0x00008402      88500a         mov byte [rax + 0xa], dl
0x00008405      49c704f4ffff.  mov qword [r12 + rsi*8], 0xffffffffffffffff
0x0000840d      488b4310       mov rax, qword [rbx + 0x10]
0x00008411      488d0440       lea rax, [rax + rax*2]                  ; ../coreutils-8.31/lib/regex_internal.c:514
0x00008415      488d44c500     lea rax, [rbp + rax*8]
0x0000841a      0f1100         movups xmmword [rax], xmm0
0x0000841d      48c740100000.  mov qword [rax + 0x10], 0
0x00008425      488b4310       mov rax, qword [rbx + 0x10]
0x00008429      488d1440       lea rdx, [rax + rax*2]                  ; ../coreutils-8.31/lib/regex_internal.c:527
0x0000842d      488b4330       mov rax, qword [rbx + 0x30]
0x00008431      488d04d0       lea rax, [rax + rdx*8]
0x00008435      0f1100         movups xmmword [rax], xmm0
0x00008438      48c740100000.  mov qword [rax + 0x10], 0
0x00008440      488b4310       mov rax, qword [rbx + 0x10]
0x00008444      488d5001       lea rdx, [rax + 1]
0x00008448      48895310       mov qword [rbx + 0x10], rdx
0x0000844c      4883c418       add rsp, 0x18
0x00008450      5b             pop rbx                                 ; ../coreutils-8.31/lib/regex_internal.c:531
0x00008451      5d             pop rbp
0x00008452      415c           pop r12
0x00008454      415d           pop r13
0x00008456      415e           pop r14
0x00008458      415f           pop r15
0x0000845a      c3             ret
0x0000845b      0f1f440000     nop dword [rax + rax]
0x00008460      4c8d6c2d00     lea r13, [rbp + rbp]
0x00008465      48b8aaaaaaaa.  movabs rax, 0xaaaaaaaaaaaaaaa
0x0000846f      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/regex_internal.c:532
0x00008472      0f87da000000   ja 0x8552
0x00008478      488b3f         mov rdi, qword [rdi]
0x0000847b      4889ee         mov rsi, rbp
0x0000847e      4889542408     mov qword [rsp + 8], rdx
0x00008483      48c1e605       shl rsi, 5
0x00008487      e80498ffff     call sym.imp.realloc
0x0000848c      4885c0         test rax, rax
0x0000848f      0f84bd000000   je 0x8552
0x00008495      4989ef         mov r15, rbp
0x00008498      488b7b18       mov rdi, qword [rbx + 0x18]
0x0000849c      488903         mov qword [rbx], rax
0x0000849f      49c1e704       shl r15, 4
0x000084a3      4c89fe         mov rsi, r15
0x000084a6      e8e597ffff     call sym.imp.realloc
0x000084ab      488b7b20       mov rdi, qword [rbx + 0x20]
0x000084af      4c89fe         mov rsi, r15
0x000084b2      4d8d7cad00     lea r15, [r13 + rbp*4]
0x000084b7      4989c4         mov r12, rax
0x000084ba      49c1e703       shl r15, 3
0x000084be      e8cd97ffff     call sym.imp.realloc
0x000084c3      488b7b28       mov rdi, qword [rbx + 0x28]
0x000084c7      4c89fe         mov rsi, r15
0x000084ca      48890424       mov qword [rsp], rax
0x000084ce      e8bd97ffff     call sym.imp.realloc
0x000084d3      488b7b30       mov rdi, qword [rbx + 0x30]
0x000084d7      4c89fe         mov rsi, r15
0x000084da      4889c5         mov rbp, rax
0x000084dd      e8ae97ffff     call sym.imp.realloc
0x000084e2      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/regex_internal.c:539
0x000084e5      488b0c24       mov rcx, qword [rsp]
0x000084e9      7435           je 0x8520
0x000084eb      4885c9         test rcx, rcx
0x000084ee      7430           je 0x8520                               ; ../coreutils-8.31/lib/regex_internal.c:540
0x000084f0      4885ed         test rbp, rbp
0x000084f3      742b           je 0x8520
0x000084f5      4885c0         test rax, rax
0x000084f8      488b542408     mov rdx, qword [rsp + 8]
0x000084fd      7421           je 0x8520
0x000084ff      4c896318       mov qword [rbx + 0x18], r12
0x00008503      48894b20       mov qword [rbx + 0x20], rcx             ; ../coreutils-8.31/lib/regex_internal.c:542
0x00008507      48896b28       mov qword [rbx + 0x28], rbp
0x0000850b      48894330       mov qword [rbx + 0x30], rax
0x0000850f      4c896b08       mov qword [rbx + 8], r13
0x00008513      488b7310       mov rsi, qword [rbx + 0x10]
0x00008517      e9a1feffff     jmp 0x83bd
0x0000851c      0f1f4000       nop dword [rax]
0x00008520      4c89e7         mov rdi, r12
0x00008523      4889442408     mov qword [rsp + 8], rax
0x00008528      48890c24       mov qword [rsp], rcx
0x0000852c      e89f94ffff     call sym.imp.free
0x00008531      488b0c24       mov rcx, qword [rsp]
0x00008535      4889cf         mov rdi, rcx
0x00008538      e89394ffff     call sym.imp.free
0x0000853d      4889ef         mov rdi, rbp
0x00008540      e88b94ffff     call sym.imp.free
0x00008545      488b442408     mov rax, qword [rsp + 8]
0x0000854a      4889c7         mov rdi, rax
0x0000854d      e87e94ffff     call sym.imp.free
0x00008552      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00008559      e9eefeffff     jmp 0x844c
0x0000855e      6690           nop
;-- duplicate_node:
0x00008560      4155           push r13
0x00008562      4154           push r12
0x00008564      4989f5         mov r13, rsi
0x00008567      55             push rbp
0x00008568      53             push rbx
0x00008569      49c1e504       shl r13, 4
0x0000856d      4889f5         mov rbp, rsi
0x00008570      4189d4         mov r12d, edx
0x00008573      4889fb         mov rbx, rdi
0x00008576      4883ec08       sub rsp, 8
0x0000857a      488b07         mov rax, qword [rdi]
0x0000857d      4a8b3428       mov rsi, qword [rax + r13]
0x00008581      4a8b542808     mov rdx, qword [rax + r13 + 8]
0x00008586      e805feffff     call sym.re_dfa_add_node
0x0000858b      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000858f      7463           je 0x85f4
0x00008591      4489e7         mov edi, r12d
0x00008594      4c8b03         mov r8, qword [rbx]
0x00008597      4889c6         mov rsi, rax
0x0000859a      6681e7ff03     and di, 0x3ff
0x0000859f      48c1e604       shl rsi, 4
0x000085a3      89f9           mov ecx, edi
0x000085a5      81e1ff030000   and ecx, 0x3ff                          ; ../coreutils-8.31/lib/regcomp.c:726
0x000085ab      4c01c6         add rsi, r8
0x000085ae      c1e108         shl ecx, 8
0x000085b1      89ca           mov edx, ecx                            ; ../coreutils-8.31/lib/regcomp.c:590
0x000085b3      8b4e08         mov ecx, dword [rsi + 8]
0x000085b6      81e1ff00fcff   and ecx, 0xfffc00ff
0x000085bc      09d1           or ecx, edx
0x000085be      894e08         mov dword [rsi + 8], ecx
0x000085c1      438b542808     mov edx, dword [r8 + r13 + 8]
0x000085c6      81e1ff00fcff   and ecx, 0xfffc00ff
0x000085cc      c1ea08         shr edx, 8
0x000085cf      09fa           or edx, edi
0x000085d1      81e2ff030000   and edx, 0x3ff
0x000085d7      c1e208         shl edx, 8
0x000085da      09ca           or edx, ecx
0x000085dc      89d1           mov ecx, edx
0x000085de      895608         mov dword [rsi + 8], edx
0x000085e1      c1e910         shr ecx, 0x10
0x000085e4      89ca           mov edx, ecx
0x000085e6      83ca04         or edx, 4
0x000085e9      88560a         mov byte [rsi + 0xa], dl
0x000085ec      488b5320       mov rdx, qword [rbx + 0x20]
0x000085f0      48892cc2       mov qword [rdx + rax*8], rbp
0x000085f4      4883c408       add rsp, 8
0x000085f8      5b             pop rbx
0x000085f9      5d             pop rbp
0x000085fa      415c           pop r12
0x000085fc      415d           pop r13
0x000085fe      c3             ret
0x000085ff      90             nop
;-- duplicate_node_closure:
0x00008600      4157           push r15
0x00008602      4156           push r14
0x00008604      4989f1         mov r9, rsi
0x00008607      4155           push r13
0x00008609      4154           push r12
0x0000860b      4989fe         mov r14, rdi
0x0000860e      55             push rbp
0x0000860f      53             push rbx
0x00008610      4989d5         mov r13, rdx
0x00008613      4489c5         mov ebp, r8d
0x00008616      4883ec18       sub rsp, 0x18
0x0000861a      48894c2408     mov qword [rsp + 8], rcx
0x0000861f      4d8b06         mov r8, qword [r14]
0x00008622      4c89c8         mov rax, r9
0x00008625      498b7e28       mov rdi, qword [r14 + 0x28]
0x00008629      48c1e004       shl rax, 4
0x0000862d      4d89ec         mov r12, r13
0x00008630      4c01c0         add rax, r8
0x00008633      80780804       cmp byte [rax + 8], 4
0x00008637      0f84b3010000   je 0x87f0
0x0000863d      4f8d2449       lea r12, [r9 + r9*2]
0x00008641      49c1e403       shl r12, 3
0x00008645      4a8d3427       lea rsi, [rdi + r12]
0x00008649      488b4e08       mov rcx, qword [rsi + 8]
0x0000864d      4885c9         test rcx, rcx
0x00008650      0f84f3010000   je 0x8849
0x00008656      4b8d5c6d00     lea rbx, [r13 + r13*2]
0x0000865b      488b7610       mov rsi, qword [rsi + 0x10]
0x0000865f      48c1e303       shl rbx, 3
0x00008663      4801df         add rdi, rbx
0x00008666      4883f901       cmp rcx, 1
0x0000866a      4c8b3e         mov r15, qword [rsi]
0x0000866d      48c747080000.  mov qword [rdi + 8], 0
0x00008675      0f8415010000   je 0x8790
0x0000867b      498b5610       mov rdx, qword [r14 + 0x10]
0x0000867f      488d72ff       lea rsi, [rdx - 1]
0x00008683      4889f0         mov rax, rsi
0x00008686      48c1e004       shl rax, 4
0x0000868a      4c01c0         add rax, r8
0x0000868d      f6400a04       test byte [rax + 0xa], 4
0x00008691      0f84a9000000   je 0x8740
0x00008697      4885f6         test rsi, rsi
0x0000869a      0f8ea0000000   jle 0x8740
0x000086a0      48c1e204       shl rdx, 4
0x000086a4      4929c0         sub r8, rax
0x000086a7      498b4e20       mov rcx, qword [r14 + 0x20]
0x000086ab      4d8d4410e0     lea r8, [r8 + rdx - 0x20]
0x000086b0      eb18           jmp 0x86ca
0x000086b2      660f1f440000   nop word [rax + rax]
0x000086b8      4c01c0         add rax, r8
0x000086bb      4883ee01       sub rsi, 1
0x000086bf      f6400a04       test byte [rax + 0xa], 4
0x000086c3      747b           je 0x8740
0x000086c5      4885f6         test rsi, rsi
0x000086c8      7e76           jle 0x8740
0x000086ca      4c393cf1       cmp qword [rcx + rsi*8], r15
0x000086ce      75e8           jne 0x86b8
0x000086d0      8b5008         mov edx, dword [rax + 8]
0x000086d3      c1ea08         shr edx, 8
0x000086d6      81e2ff030000   and edx, 0x3ff
0x000086dc      39d5           cmp ebp, edx
0x000086de      75d8           jne 0x86b8
0x000086e0      e8cbefffff     call sym.re_node_set_insert
0x000086e5      84c0           test al, al
0x000086e7      7442           je 0x872b
0x000086e9      498b4628       mov rax, qword [r14 + 0x28]
0x000086ed      89ea           mov edx, ebp
0x000086ef      4c89f7         mov rdi, r14
0x000086f2      4a8b442010     mov rax, qword [rax + r12 + 0x10]
0x000086f7      4c8b4808       mov r9, qword [rax + 8]
0x000086fb      4c89ce         mov rsi, r9
0x000086fe      4c890c24       mov qword [rsp], r9
0x00008702      e859feffff     call sym.duplicate_node
0x00008707      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000870b      4989c5         mov r13, rax
0x0000870e      741b           je 0x872b
0x00008710      49035e28       add rbx, qword [r14 + 0x28]
0x00008714      4c89ee         mov rsi, r13
0x00008717      4889df         mov rdi, rbx
0x0000871a      e891efffff     call sym.re_node_set_insert
0x0000871f      84c0           test al, al
0x00008721      4c8b0c24       mov r9, qword [rsp]
0x00008725      0f85f4feffff   jne 0x861f
0x0000872b      b80c000000     mov eax, 0xc
0x00008730      4883c418       add rsp, 0x18
0x00008734      5b             pop rbx
0x00008735      5d             pop rbp
0x00008736      415c           pop r12
0x00008738      415d           pop r13
0x0000873a      415e           pop r14
0x0000873c      415f           pop r15
0x0000873e      c3             ret
0x0000873f      90             nop
0x00008740      89ea           mov edx, ebp
0x00008742      4c89fe         mov rsi, r15
0x00008745      4c89f7         mov rdi, r14
0x00008748      e813feffff     call sym.duplicate_node
0x0000874d      4883f8ff       cmp rax, 0xffffffffffffffff
0x00008751      4989c5         mov r13, rax
0x00008754      74d5           je 0x872b
0x00008756      498b7e28       mov rdi, qword [r14 + 0x28]
0x0000875a      4c89ee         mov rsi, r13
0x0000875d      4801df         add rdi, rbx
0x00008760      e84befffff     call sym.re_node_set_insert
0x00008765      84c0           test al, al
0x00008767      74c2           je 0x872b
0x00008769      488b4c2408     mov rcx, qword [rsp + 8]
0x0000876e      4189e8         mov r8d, ebp
0x00008771      4c89ea         mov rdx, r13
0x00008774      4c89fe         mov rsi, r15
0x00008777      4c89f7         mov rdi, r14
0x0000877a      e881feffff     call sym.duplicate_node_closure
0x0000877f      85c0           test eax, eax
0x00008781      0f8462ffffff   je 0x86e9
0x00008787      eba7           jmp 0x8730
0x00008789      0f1f80000000.  nop dword [rax]
0x00008790      4c3b4c2408     cmp r9, qword [rsp + 8]
0x00008795      7509           jne 0x87a0
0x00008797      4d39e9         cmp r9, r13
0x0000879a      0f85bc000000   jne 0x885c
0x000087a0      8b4008         mov eax, dword [rax + 8]
0x000087a3      4c89fe         mov rsi, r15
0x000087a6      4c89f7         mov rdi, r14
0x000087a9      c1e808         shr eax, 8
0x000087ac      25ff030000     and eax, 0x3ff
0x000087b1      09c5           or ebp, eax
0x000087b3      89ea           mov edx, ebp
0x000087b5      e8a6fdffff     call sym.duplicate_node
0x000087ba      4883f8ff       cmp rax, 0xffffffffffffffff
0x000087be      4989c5         mov r13, rax
0x000087c1      0f8464ffffff   je 0x872b
0x000087c7      49035e28       add rbx, qword [r14 + 0x28]
0x000087cb      4889c6         mov rsi, rax
0x000087ce      4889df         mov rdi, rbx
0x000087d1      e8daeeffff     call sym.re_node_set_insert
0x000087d6      84c0           test al, al
0x000087d8      0f844dffffff   je 0x872b
0x000087de      4d89f9         mov r9, r15
0x000087e1      e939feffff     jmp 0x861f
0x000087e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000087f0      498b4618       mov rax, qword [r14 + 0x18]
0x000087f4      4b8d5c6d00     lea rbx, [r13 + r13*2]
0x000087f9      4e8d3ccd0000.  lea r15, [r9*8]
0x00008801      89ea           mov edx, ebp
0x00008803      48c1e303       shl rbx, 3
0x00008807      4e8b0cc8       mov r9, qword [rax + r9*8]
0x0000880b      48c7441f0800.  mov qword [rdi + rbx + 8], 0
0x00008814      4c89f7         mov rdi, r14
0x00008817      4c89ce         mov rsi, r9
0x0000881a      4c890c24       mov qword [rsp], r9
0x0000881e      e83dfdffff     call sym.duplicate_node
0x00008823      4883f8ff       cmp rax, 0xffffffffffffffff
0x00008827      4989c5         mov r13, rax
0x0000882a      4c8b0c24       mov r9, qword [rsp]
0x0000882e      0f84f7feffff   je 0x872b
0x00008834      498b4618       mov rax, qword [r14 + 0x18]
0x00008838      4c890c24       mov qword [rsp], r9
0x0000883c      4a8b0c38       mov rcx, qword [rax + r15]
0x00008840      4a890ce0       mov qword [rax + r12*8], rcx
0x00008844      e9c7feffff     jmp 0x8710
0x00008849      498b4618       mov rax, qword [r14 + 0x18]
0x0000884d      4a8b0cc8       mov rcx, qword [rax + r9*8]
0x00008851      4a890ce8       mov qword [rax + r13*8], rcx
0x00008855      31c0           xor eax, eax
0x00008857      e9d4feffff     jmp 0x8730
0x0000885c      4c89fe         mov rsi, r15
0x0000885f      e84ceeffff     call sym.re_node_set_insert
0x00008864      89c2           mov edx, eax
0x00008866      31c0           xor eax, eax
0x00008868      84d2           test dl, dl
0x0000886a      0f85c0feffff   jne 0x8730
0x00008870      e9b6feffff     jmp 0x872b
0x00008875      90             nop
0x00008876      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_state:
0x00008880      53             push rbx
0x00008881      4889fb         mov rbx, rdi
0x00008884      488b7f30       mov rdi, qword [rdi + 0x30]
0x00008888      e84391ffff     call sym.imp.free
0x0000888d      488b7b48       mov rdi, qword [rbx + 0x48]
0x00008891      e83a91ffff     call sym.imp.free
0x00008896      488b4350       mov rax, qword [rbx + 0x50]
0x0000889a      488d5308       lea rdx, [rbx + 8]
0x0000889e      4839d0         cmp rax, rdx
0x000088a1      7412           je 0x88b5
0x000088a3      488b7810       mov rdi, qword [rax + 0x10]
0x000088a7      e82491ffff     call sym.imp.free
0x000088ac      488b7b50       mov rdi, qword [rbx + 0x50]
0x000088b0      e81b91ffff     call sym.imp.free
0x000088b5      488b7b18       mov rdi, qword [rbx + 0x18]
0x000088b9      e81291ffff     call sym.imp.free
0x000088be      488b7b60       mov rdi, qword [rbx + 0x60]
0x000088c2      e80991ffff     call sym.imp.free
0x000088c7      488b7b58       mov rdi, qword [rbx + 0x58]
0x000088cb      e80091ffff     call sym.imp.free
0x000088d0      4889df         mov rdi, rbx
0x000088d3      5b             pop rbx
0x000088d4      e9f790ffff     jmp sym.imp.free
0x000088d9      0f1f80000000.  nop dword [rax]
;-- re_string_destruct:
0x000088e0      53             push rbx
0x000088e1      4889fb         mov rbx, rdi
0x000088e4      488b7f10       mov rdi, qword [rdi + 0x10]
0x000088e8      e8e390ffff     call sym.imp.free
0x000088ed      488b7b18       mov rdi, qword [rbx + 0x18]
0x000088f1      e8da90ffff     call sym.imp.free
0x000088f6      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x000088fd      7509           jne 0x8908
0x000088ff      5b             pop rbx
0x00008900      c3             ret
0x00008901      0f1f80000000.  nop dword [rax]
0x00008908      488b7b08       mov rdi, qword [rbx + 8]
0x0000890c      5b             pop rbx
0x0000890d      e9be90ffff     jmp sym.imp.free
0x00008912      0f1f4000       nop dword [rax]
0x00008916      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_dfa_content:
0x00008920      4156           push r14
0x00008922      4155           push r13
0x00008924      4154           push r12
0x00008926      4989fc         mov r12, rdi
0x00008929      55             push rbp
0x0000892a      53             push rbx
0x0000892b      488b3f         mov rdi, qword [rdi]
0x0000892e      4885ff         test rdi, rdi
0x00008931      742b           je 0x895e
0x00008933      49837c241000   cmp qword [r12 + 0x10], 0
0x00008939      7423           je 0x895e
0x0000893b      31db           xor ebx, ebx
0x0000893d      eb05           jmp 0x8944
0x0000893f      90             nop
0x00008940      498b3c24       mov rdi, qword [r12]
0x00008944      4889d8         mov rax, rbx
0x00008947      4883c301       add rbx, 1
0x0000894b      48c1e004       shl rax, 4
0x0000894f      4801c7         add rdi, rax
0x00008952      e8e9f9ffff     call sym.free_token
0x00008957      49395c2410     cmp qword [r12 + 0x10], rbx
0x0000895c      77e2           ja 0x8940
0x0000895e      498b7c2418     mov rdi, qword [r12 + 0x18]
0x00008963      e86890ffff     call sym.imp.free
0x00008968      49837c241000   cmp qword [r12 + 0x10], 0
0x0000896e      7453           je 0x89c3
0x00008970      31db           xor ebx, ebx
0x00008972      31ed           xor ebp, ebp
0x00008974      0f1f4000       nop dword [rax]
0x00008978      498b442430     mov rax, qword [r12 + 0x30]
0x0000897d      4885c0         test rax, rax
0x00008980      740a           je 0x898c
0x00008982      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x00008987      e84490ffff     call sym.imp.free
0x0000898c      498b442438     mov rax, qword [r12 + 0x38]
0x00008991      4885c0         test rax, rax
0x00008994      740a           je 0x89a0
0x00008996      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0000899b      e83090ffff     call sym.imp.free
0x000089a0      498b442428     mov rax, qword [r12 + 0x28]
0x000089a5      4885c0         test rax, rax
0x000089a8      740a           je 0x89b4
0x000089aa      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x000089af      e81c90ffff     call sym.imp.free
0x000089b4      4883c501       add rbp, 1
0x000089b8      4883c318       add rbx, 0x18
0x000089bc      49396c2410     cmp qword [r12 + 0x10], rbp
0x000089c1      77b5           ja 0x8978
0x000089c3      498b7c2428     mov rdi, qword [r12 + 0x28]
0x000089c8      e80390ffff     call sym.imp.free
0x000089cd      498b7c2430     mov rdi, qword [r12 + 0x30]
0x000089d2      e8f98fffff     call sym.imp.free
0x000089d7      498b7c2438     mov rdi, qword [r12 + 0x38]
0x000089dc      e8ef8fffff     call sym.imp.free
0x000089e1      498b3c24       mov rdi, qword [r12]
0x000089e5      e8e68fffff     call sym.imp.free
0x000089ea      498b7c2440     mov rdi, qword [r12 + 0x40]
0x000089ef      4885ff         test rdi, rdi
0x000089f2      7453           je 0x8a47
0x000089f4      4531f6         xor r14d, r14d
0x000089f7      4531ed         xor r13d, r13d
0x000089fa      660f1f440000   nop word [rax + rax]
0x00008a00      4a8d2c37       lea rbp, [rdi + r14]
0x00008a04      48837d0000     cmp qword [rbp], 0
0x00008a09      7e1c           jle 0x8a27
0x00008a0b      31db           xor ebx, ebx
0x00008a0d      0f1f00         nop dword [rax]
0x00008a10      488b4510       mov rax, qword [rbp + 0x10]
0x00008a14      488b3cd8       mov rdi, qword [rax + rbx*8]
0x00008a18      4883c301       add rbx, 1
0x00008a1c      e85ffeffff     call sym.free_state
0x00008a21      48395d00       cmp qword [rbp], rbx
0x00008a25      7fe9           jg 0x8a10
0x00008a27      488b7d10       mov rdi, qword [rbp + 0x10]
0x00008a2b      4983c501       add r13, 1
0x00008a2f      4983c618       add r14, 0x18
0x00008a33      e8988fffff     call sym.imp.free
0x00008a38      4d39ac248800.  cmp qword [r12 + 0x88], r13
0x00008a40      498b7c2440     mov rdi, qword [r12 + 0x40]
0x00008a45      73b9           jae 0x8a00
0x00008a47      e8848fffff     call sym.imp.free
0x00008a4c      498b7c2478     mov rdi, qword [r12 + 0x78]
0x00008a51      488d0548e600.  lea rax, obj.utf8_sb_map                ; 0x170a0
0x00008a58      4839c7         cmp rdi, rax
0x00008a5b      7405           je 0x8a62
0x00008a5d      e86e8fffff     call sym.imp.free
0x00008a62      498bbc24e000.  mov rdi, qword [r12 + 0xe0]
0x00008a6a      e8618fffff     call sym.imp.free
0x00008a6f      5b             pop rbx
0x00008a70      4c89e7         mov rdi, r12
0x00008a73      5d             pop rbp
0x00008a74      415c           pop r12
0x00008a76      415d           pop r13
0x00008a78      415e           pop r14
0x00008a7a      e9518fffff     jmp sym.imp.free
0x00008a7f      90             nop
;-- match_ctx_clean:
0x00008a80      4156           push r14
0x00008a82      4155           push r13
0x00008a84      4989fe         mov r14, rdi
0x00008a87      4154           push r12
0x00008a89      55             push rbp
0x00008a8a      53             push rbx
0x00008a8b      4883bfe80000.  cmp qword [rdi + 0xe8], 0
0x00008a93      0f8e80000000   jle 0x8b19
0x00008a99      4531ed         xor r13d, r13d
0x00008a9c      0f1f4000       nop dword [rax]
0x00008aa0      498b86f80000.  mov rax, qword [r14 + 0xf8]
0x00008aa7      4e8b24e8       mov r12, qword [rax + r13*8]
0x00008aab      49837c242000   cmp qword [r12 + 0x20], 0
0x00008ab1      7e2a           jle 0x8add
0x00008ab3      31db           xor ebx, ebx
0x00008ab5      0f1f00         nop dword [rax]
0x00008ab8      498b442428     mov rax, qword [r12 + 0x28]
0x00008abd      488b2cd8       mov rbp, qword [rax + rbx*8]
0x00008ac1      4883c301       add rbx, 1
0x00008ac5      488b7d20       mov rdi, qword [rbp + 0x20]
0x00008ac9      e8028fffff     call sym.imp.free
0x00008ace      4889ef         mov rdi, rbp
0x00008ad1      e8fa8effff     call sym.imp.free
0x00008ad6      49395c2420     cmp qword [r12 + 0x20], rbx
0x00008adb      7fdb           jg 0x8ab8
0x00008add      498b7c2428     mov rdi, qword [r12 + 0x28]
0x00008ae2      e8e98effff     call sym.imp.free
0x00008ae7      498b442410     mov rax, qword [r12 + 0x10]
0x00008aec      4885c0         test rax, rax
0x00008aef      7413           je 0x8b04
0x00008af1      488b7810       mov rdi, qword [rax + 0x10]
0x00008af5      e8d68effff     call sym.imp.free
0x00008afa      498b7c2410     mov rdi, qword [r12 + 0x10]
0x00008aff      e8cc8effff     call sym.imp.free
0x00008b04      4c89e7         mov rdi, r12
0x00008b07      4983c501       add r13, 1
0x00008b0b      e8c08effff     call sym.imp.free
0x00008b10      4d39aee80000.  cmp qword [r14 + 0xe8], r13
0x00008b17      7f87           jg 0x8aa0
0x00008b19      5b             pop rbx
0x00008b1a      49c786e80000.  mov qword [r14 + 0xe8], 0
0x00008b25      49c786c80000.  mov qword [r14 + 0xc8], 0
0x00008b30      5d             pop rbp
0x00008b31      415c           pop r12
0x00008b33      415d           pop r13
0x00008b35      415e           pop r14
0x00008b37      c3             ret
0x00008b38      0f1f84000000.  nop dword [rax + rax]
;-- re_string_char_size_at.part.0:
0x00008b40      488b4f30       mov rcx, qword [rdi + 0x30]
0x00008b44      488d4601       lea rax, [rsi + 1]
0x00008b48      4839c8         cmp rax, rcx
0x00008b4b      7d3b           jge 0x8b88
0x00008b4d      488b5710       mov rdx, qword [rdi + 0x10]
0x00008b51      488d3c850000.  lea rdi, [rax*4]
0x00008b59      833c82ff       cmp dword [rdx + rax*4], 0xffffffff
0x00008b5d      7529           jne 0x8b88
0x00008b5f      4829f1         sub rcx, rsi
0x00008b62      488d743afc     lea rsi, [rdx + rdi - 4]
0x00008b67      ba02000000     mov edx, 2
0x00008b6c      eb0d           jmp 0x8b7b
0x00008b6e      6690           nop
0x00008b70      4883c201       add rdx, 1
0x00008b74      837c96fcff     cmp dword [rsi + rdx*4 - 4], 0xffffffff
0x00008b79      7512           jne 0x8b8d
0x00008b7b      4839ca         cmp rdx, rcx
0x00008b7e      89d0           mov eax, edx
0x00008b80      75ee           jne 0x8b70
0x00008b82      f3c3           ret
0x00008b84      0f1f4000       nop dword [rax]
0x00008b88      b801000000     mov eax, 1
0x00008b8d      f3c3           ret
0x00008b8f      90             nop
;-- re_node_set_compare.part.2:
0x00008b90      488b5708       mov rdx, qword [rdi + 8]
0x00008b94      31c0           xor eax, eax
0x00008b96      483b5608       cmp rdx, qword [rsi + 8]
0x00008b9a      7404           je 0x8ba0
0x00008b9c      f3c3           ret
0x00008b9e      6690           nop
0x00008ba0      488d42ff       lea rax, [rdx - 1]
0x00008ba4      488d14c50000.  lea rdx, [rax*8]
0x00008bac      eb1f           jmp 0x8bcd
0x00008bae      6690           nop
0x00008bb0      488b4f10       mov rcx, qword [rdi + 0x10]
0x00008bb4      4c8b0411       mov r8, qword [rcx + rdx]
0x00008bb8      488b4e10       mov rcx, qword [rsi + 0x10]
0x00008bbc      488b0c11       mov rcx, qword [rcx + rdx]
0x00008bc0      4883ea08       sub rdx, 8
0x00008bc4      4939c8         cmp r8, rcx
0x00008bc7      7517           jne 0x8be0
0x00008bc9      4883e801       sub rax, 1
0x00008bcd      4885c0         test rax, rax
0x00008bd0      79de           jns 0x8bb0
0x00008bd2      b801000000     mov eax, 1
0x00008bd7      c3             ret
0x00008bd8      0f1f84000000.  nop dword [rax + rax]
0x00008be0      31c0           xor eax, eax
0x00008be2      c3             ret
0x00008be3      0f1f00         nop dword [rax]
0x00008be6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_contains.isra.3:
0x00008bf0      31c0           xor eax, eax
0x00008bf2      4885ff         test rdi, rdi
0x00008bf5      7e3e           jle 0x8c35
0x00008bf7      4c8b06         mov r8, qword [rsi]
0x00008bfa      4883ef01       sub rdi, 1
0x00008bfe      31f6           xor esi, esi
0x00008c00      4839fe         cmp rsi, rdi
0x00008c03      7328           jae 0x8c2d
0x00008c05      488d0c3e       lea rcx, [rsi + rdi]
0x00008c09      48d1e9         shr rcx, 1
0x00008c0c      493b14c8       cmp rdx, qword [r8 + rcx*8]
0x00008c10      7e16           jle 0x8c28
0x00008c12      eb2c           jmp 0x8c40
0x00008c14      0f1f4000       nop dword [rax]
0x00008c18      488d040e       lea rax, [rsi + rcx]
0x00008c1c      48d1e8         shr rax, 1
0x00008c1f      493914c0       cmp qword [r8 + rax*8], rdx
0x00008c23      7c2b           jl 0x8c50
0x00008c25      4889c1         mov rcx, rax
0x00008c28      4839ce         cmp rsi, rcx
0x00008c2b      72eb           jb 0x8c18
0x00008c2d      31c0           xor eax, eax
0x00008c2f      493b14f0       cmp rdx, qword [r8 + rsi*8]
0x00008c33      742b           je 0x8c60
0x00008c35      f3c3           ret
0x00008c37      660f1f840000.  nop word [rax + rax]
0x00008c40      4889c8         mov rax, rcx
0x00008c43      4889f9         mov rcx, rdi
0x00008c46      662e0f1f8400.  nop word cs:[rax + rax]
0x00008c50      488d7001       lea rsi, [rax + 1]
0x00008c54      4889cf         mov rdi, rcx
0x00008c57      eba7           jmp 0x8c00
0x00008c59      0f1f80000000.  nop dword [rax]
0x00008c60      488d4601       lea rax, [rsi + 1]
0x00008c64      c3             ret
0x00008c65      90             nop
0x00008c66      662e0f1f8400.  nop word cs:[rax + rax]
;-- check_arrival_expand_ecl_sub:
0x00008c70      4157           push r15
0x00008c72      4156           push r14
0x00008c74      4c8d7610       lea r14, [rsi + 0x10]
0x00008c78      4155           push r13
0x00008c7a      4154           push r12
0x00008c7c      4989cf         mov r15, rcx
0x00008c7f      55             push rbp
0x00008c80      53             push rbx
0x00008c81      4989fc         mov r12, rdi
0x00008c84      4889f5         mov rbp, rsi
0x00008c87      4889d3         mov rbx, rdx
0x00008c8a      4589c5         mov r13d, r8d
0x00008c8d      4883ec08       sub rsp, 8
0x00008c91      488b7d08       mov rdi, qword [rbp + 8]
0x00008c95      4889da         mov rdx, rbx
0x00008c98      4c89f6         mov rsi, r14
0x00008c9b      e850ffffff     call sym.re_node_set_contains.isra.3
0x00008ca0      4885c0         test rax, rax
0x00008ca3      756b           jne 0x8d10
0x00008ca5      4889d8         mov rax, rbx
0x00008ca8      48c1e004       shl rax, 4
0x00008cac      49030424       add rax, qword [r12]
0x00008cb0      0fb65008       movzx edx, byte [rax + 8]
0x00008cb4      4439ea         cmp edx, r13d
0x00008cb7      7505           jne 0x8cbe
0x00008cb9      4c3938         cmp qword [rax], r15
0x00008cbc      743a           je 0x8cf8
0x00008cbe      4889de         mov rsi, rbx
0x00008cc1      4889ef         mov rdi, rbp
0x00008cc4      e8e7e9ffff     call sym.re_node_set_insert
0x00008cc9      84c0           test al, al
0x00008ccb      745b           je 0x8d28
0x00008ccd      488d1c5b       lea rbx, [rbx + rbx*2]
0x00008cd1      498b542428     mov rdx, qword [r12 + 0x28]
0x00008cd6      48c1e303       shl rbx, 3
0x00008cda      4801da         add rdx, rbx
0x00008cdd      488b4208       mov rax, qword [rdx + 8]
0x00008ce1      4885c0         test rax, rax
0x00008ce4      742a           je 0x8d10
0x00008ce6      4883f802       cmp rax, 2
0x00008cea      488b5210       mov rdx, qword [rdx + 0x10]
0x00008cee      7450           je 0x8d40
0x00008cf0      488b1a         mov rbx, qword [rdx]
0x00008cf3      eb9c           jmp 0x8c91
0x00008cf5      0f1f00         nop dword [rax]
0x00008cf8      4183fd09       cmp r13d, 9
0x00008cfc      7512           jne 0x8d10
0x00008cfe      4889de         mov rsi, rbx
0x00008d01      4889ef         mov rdi, rbp
0x00008d04      e8a7e9ffff     call sym.re_node_set_insert
0x00008d09      84c0           test al, al
0x00008d0b      741b           je 0x8d28
0x00008d0d      0f1f00         nop dword [rax]
0x00008d10      31c0           xor eax, eax
0x00008d12      4883c408       add rsp, 8
0x00008d16      5b             pop rbx
0x00008d17      5d             pop rbp
0x00008d18      415c           pop r12
0x00008d1a      415d           pop r13
0x00008d1c      415e           pop r14
0x00008d1e      415f           pop r15
0x00008d20      c3             ret
0x00008d21      0f1f80000000.  nop dword [rax]
0x00008d28      4883c408       add rsp, 8
0x00008d2c      b80c000000     mov eax, 0xc
0x00008d31      5b             pop rbx
0x00008d32      5d             pop rbp
0x00008d33      415c           pop r12
0x00008d35      415d           pop r13
0x00008d37      415e           pop r14
0x00008d39      415f           pop r15
0x00008d3b      c3             ret
0x00008d3c      0f1f4000       nop dword [rax]
0x00008d40      488b5208       mov rdx, qword [rdx + 8]
0x00008d44      4589e8         mov r8d, r13d
0x00008d47      4c89f9         mov rcx, r15
0x00008d4a      4889ee         mov rsi, rbp
0x00008d4d      4c89e7         mov rdi, r12
0x00008d50      e81bffffff     call sym.check_arrival_expand_ecl_sub
0x00008d55      85c0           test eax, eax
0x00008d57      75b9           jne 0x8d12
0x00008d59      498b442428     mov rax, qword [r12 + 0x28]
0x00008d5e      488b541810     mov rdx, qword [rax + rbx + 0x10]
0x00008d63      eb8b           jmp 0x8cf0
0x00008d65      90             nop
0x00008d66      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_remove_at.isra.4.part.5:
0x00008d70      488b07         mov rax, qword [rdi]
0x00008d73      4839d0         cmp rax, rdx
0x00008d76      7e2a           jle 0x8da2
0x00008d78      4883e801       sub rax, 1
0x00008d7c      4839c2         cmp rdx, rax
0x00008d7f      488907         mov qword [rdi], rax
0x00008d82      7d1e           jge 0x8da2
0x00008d84      488b06         mov rax, qword [rsi]
0x00008d87      660f1f840000.  nop word [rax + rax]
0x00008d90      488b4cd008     mov rcx, qword [rax + rdx*8 + 8]
0x00008d95      48890cd0       mov qword [rax + rdx*8], rcx
0x00008d99      4883c201       add rdx, 1
0x00008d9d      483b17         cmp rdx, qword [rdi]
0x00008da0      7cee           jl 0x8d90
0x00008da2      f3c3           ret
0x00008da4      6690           nop
0x00008da6      662e0f1f8400.  nop word cs:[rax + rax]
;-- optimize_subexps:
0x00008db0      0fb64630       movzx eax, byte [rsi + 0x30]
0x00008db4      3c04           cmp al, 4
0x00008db6      7458           je 0x8e10
0x00008db8      3c11           cmp al, 0x11
0x00008dba      7404           je 0x8dc0
0x00008dbc      31c0           xor eax, eax
0x00008dbe      c3             ret
0x00008dbf      90             nop
0x00008dc0      488b4608       mov rax, qword [rsi + 8]
0x00008dc4      4885c0         test rax, rax
0x00008dc7      74f3           je 0x8dbc
0x00008dc9      80783011       cmp byte [rax + 0x30], 0x11
0x00008dcd      75ed           jne 0x8dbc
0x00008dcf      488b4828       mov rcx, qword [rax + 0x28]
0x00008dd3      488b4008       mov rax, qword [rax + 8]
0x00008dd7      4885c0         test rax, rax
0x00008dda      48894608       mov qword [rsi + 8], rax
0x00008dde      7403           je 0x8de3
0x00008de0      488930         mov qword [rax], rsi
0x00008de3      488b87e00000.  mov rax, qword [rdi + 0xe0]
0x00008dea      488b5628       mov rdx, qword [rsi + 0x28]
0x00008dee      4883f93f       cmp rcx, 0x3f
0x00008df2      488b14d0       mov rdx, qword [rax + rdx*8]
0x00008df6      488914c8       mov qword [rax + rcx*8], rdx
0x00008dfa      7fc0           jg 0x8dbc
0x00008dfc      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x00008e03      48d3c0         rol rax, cl
0x00008e06      482187a00000.  and qword [rdi + 0xa0], rax
0x00008e0d      ebad           jmp 0x8dbc
0x00008e0f      90             nop
0x00008e10      488b87e00000.  mov rax, qword [rdi + 0xe0]
0x00008e17      4885c0         test rax, rax
0x00008e1a      74a0           je 0x8dbc
0x00008e1c      48635628       movsxd rdx, dword [rsi + 0x28]
0x00008e20      488b0cd0       mov rcx, qword [rax + rdx*8]
0x00008e24      b801000000     mov eax, 1
0x00008e29      d3e0           shl eax, cl
0x00008e2b      48894e28       mov qword [rsi + 0x28], rcx
0x00008e2f      4898           cdqe
0x00008e31      480987a00000.  or qword [rdi + 0xa0], rax
0x00008e38      31c0           xor eax, eax
0x00008e3a      c3             ret
0x00008e3b      0f1f440000     nop dword [rax + rax]
;-- calc_next:
0x00008e40      0fb64630       movzx eax, byte [rsi + 0x30]
0x00008e44      488b5608       mov rdx, qword [rsi + 8]
0x00008e48      3c0b           cmp al, 0xb
0x00008e4a      7444           je 0x8e90
0x00008e4c      3c10           cmp al, 0x10
0x00008e4e      7428           je 0x8e78
0x00008e50      4885d2         test rdx, rdx
0x00008e53      7408           je 0x8e5d
0x00008e55      488b4620       mov rax, qword [rsi + 0x20]
0x00008e59      48894220       mov qword [rdx + 0x20], rax
0x00008e5d      488b4610       mov rax, qword [rsi + 0x10]
0x00008e61      4885c0         test rax, rax
0x00008e64      7408           je 0x8e6e
0x00008e66      488b5620       mov rdx, qword [rsi + 0x20]
0x00008e6a      48895020       mov qword [rax + 0x20], rdx
0x00008e6e      31c0           xor eax, eax
0x00008e70      c3             ret
0x00008e71      0f1f80000000.  nop dword [rax]
0x00008e78      488b4610       mov rax, qword [rsi + 0x10]
0x00008e7c      488b4818       mov rcx, qword [rax + 0x18]
0x00008e80      48894a20       mov qword [rdx + 0x20], rcx
0x00008e84      488b5620       mov rdx, qword [rsi + 0x20]
0x00008e88      48895020       mov qword [rax + 0x20], rdx
0x00008e8c      31c0           xor eax, eax
0x00008e8e      c3             ret
0x00008e8f      90             nop
0x00008e90      48897220       mov qword [rdx + 0x20], rsi
0x00008e94      31c0           xor eax, eax
0x00008e96      c3             ret
0x00008e97      660f1f840000.  nop word [rax + rax]
;-- check_dst_limits.isra.13:
0x00008ea0      4157           push r15
0x00008ea2      4156           push r14
0x00008ea4      4155           push r13
0x00008ea6      4154           push r12
0x00008ea8      55             push rbp
0x00008ea9      53             push rbx
0x00008eaa      31db           xor ebx, ebx
0x00008eac      4883ec48       sub rsp, 0x48
0x00008eb0      488b87980000.  mov rax, qword [rdi + 0x98]
0x00008eb7      4c8bbfc80000.  mov r15, qword [rdi + 0xc8]
0x00008ebe      4c8ba4248000.  mov r12, qword [rsp + 0x80]
0x00008ec6      4889442408     mov qword [rsp + 8], rax
0x00008ecb      4c89fd         mov rbp, r15
0x00008ece      4839eb         cmp rbx, rbp
0x00008ed1      7d58           jge 0x8f2b
0x00008ed3      488d042b       lea rax, [rbx + rbp]
0x00008ed7      4c8bafd80000.  mov r13, qword [rdi + 0xd8]
0x00008ede      4989c2         mov r10, rax
0x00008ee1      49c1ea3f       shr r10, 0x3f
0x00008ee5      4901c2         add r10, rax
0x00008ee8      49d1fa         sar r10, 1
0x00008eeb      4b8d0492       lea rax, [r10 + r10*4]
0x00008eef      4d3b44c508     cmp r8, qword [r13 + rax*8 + 8]
0x00008ef4      7e30           jle 0x8f26
0x00008ef6      e995010000     jmp 0x9090
0x00008efb      0f1f440000     nop dword [rax + rax]
0x00008f00      4e8d1c13       lea r11, [rbx + r10]
0x00008f04      4c89d8         mov rax, r11
0x00008f07      48c1e83f       shr rax, 0x3f
0x00008f0b      4c01d8         add rax, r11
0x00008f0e      48d1f8         sar rax, 1
0x00008f11      4c8d1c80       lea r11, [rax + rax*4]
0x00008f15      4989c6         mov r14, rax
0x00008f18      4f3944dd08     cmp qword [r13 + r11*8 + 8], r8
0x00008f1d      0f8c7d010000   jl 0x90a0
0x00008f23      4989c2         mov r10, rax
0x00008f26      4c39d3         cmp rbx, r10
0x00008f29      7cd5           jl 0x8f00
0x00008f2b      4939df         cmp r15, rbx
0x00008f2e      0f8e9c010000   jle 0x90d0
0x00008f34      4c8b9fd80000.  mov r11, qword [rdi + 0xd8]
0x00008f3b      488d049b       lea rax, [rbx + rbx*4]
0x00008f3f      498d04c3       lea rax, [r11 + rax*8]
0x00008f43      4c3b4008       cmp r8, qword [rax + 8]
0x00008f47      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00008f4e      480f45d8       cmovne rbx, rax
0x00008f52      4c89f8         mov rax, r15
0x00008f55      31ed           xor ebp, ebp
0x00008f57      4839c5         cmp rbp, rax
0x00008f5a      7d58           jge 0x8fb4
0x00008f5c      4c8d5c0500     lea r11, [rbp + rax]
0x00008f61      4d89da         mov r10, r11
0x00008f64      49c1ea3f       shr r10, 0x3f
0x00008f68      4d01da         add r10, r11
0x00008f6b      4c8b9fd80000.  mov r11, qword [rdi + 0xd8]
0x00008f72      49d1fa         sar r10, 1
0x00008f75      4f8d2c92       lea r13, [r10 + r10*4]
0x00008f79      4f3b64eb08     cmp r12, qword [r11 + r13*8 + 8]
0x00008f7e      7e2f           jle 0x8faf
0x00008f80      e92b010000     jmp 0x90b0
0x00008f85      0f1f00         nop dword [rax]
0x00008f88      4e8d6c1500     lea r13, [rbp + r10]
0x00008f8d      4c89e8         mov rax, r13
0x00008f90      48c1e83f       shr rax, 0x3f
0x00008f94      4c01e8         add rax, r13
0x00008f97      48d1f8         sar rax, 1
0x00008f9a      4c8d2c80       lea r13, [rax + rax*4]
0x00008f9e      4989c6         mov r14, rax
0x00008fa1      4f3964eb08     cmp qword [r11 + r13*8 + 8], r12
0x00008fa6      0f8c14010000   jl 0x90c0
0x00008fac      4989c2         mov r10, rax
0x00008faf      4c39d5         cmp rbp, r10
0x00008fb2      7cd4           jl 0x8f88
0x00008fb4      4939ef         cmp r15, rbp
0x00008fb7      0f8e23010000   jle 0x90e0
0x00008fbd      4c8b97d80000.  mov r10, qword [rdi + 0xd8]
0x00008fc4      488d44ad00     lea rax, [rbp + rbp*4]
0x00008fc9      498d04c2       lea rax, [r10 + rax*8]
0x00008fcd      4c3b6008       cmp r12, qword [rax + 8]
0x00008fd1      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00008fd8      480f45e8       cmovne rbp, rax
0x00008fdc      48833e00       cmp qword [rsi], 0
0x00008fe0      0f8e1c010000   jle 0x9102
0x00008fe6      48896c2430     mov qword [rsp + 0x30], rbp
0x00008feb      4c894c2420     mov qword [rsp + 0x20], r9
0x00008ff0      4989fd         mov r13, rdi
0x00008ff3      4c89442418     mov qword [rsp + 0x18], r8
0x00008ff8      48894c2410     mov qword [rsp + 0x10], rcx
0x00008ffd      4531f6         xor r14d, r14d
0x00009000      4889742438     mov qword [rsp + 0x38], rsi
0x00009005      48895c2428     mov qword [rsp + 0x28], rbx
0x0000900a      4889d5         mov rbp, rdx
0x0000900d      4d89e7         mov r15, r12
0x00009010      488b4500       mov rax, qword [rbp]
0x00009014      498b95d80000.  mov rdx, qword [r13 + 0xd8]
0x0000901b      4c89ef         mov rdi, r13
0x0000901e      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00009023      4c8b442418     mov r8, qword [rsp + 0x18]
0x00009028      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000902d      4a8b34f0       mov rsi, qword [rax + r14*8]
0x00009031      488d04b6       lea rax, [rsi + rsi*4]
0x00009035      488d04c2       lea rax, [rdx + rax*8]
0x00009039      488b542408     mov rdx, qword [rsp + 8]
0x0000903e      488b00         mov rax, qword [rax]
0x00009041      48c1e004       shl rax, 4
0x00009045      480302         add rax, qword [rdx]
0x00009048      4c8b20         mov r12, qword [rax]
0x0000904b      4c89e2         mov rdx, r12
0x0000904e      e80de4ffff     call sym.check_dst_limits_calc_pos
0x00009053      89c3           mov ebx, eax
0x00009055      488b4500       mov rax, qword [rbp]
0x00009059      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x0000905e      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00009063      4d89f8         mov r8, r15
0x00009066      4c89e2         mov rdx, r12
0x00009069      4c89ef         mov rdi, r13
0x0000906c      4a8b34f0       mov rsi, qword [rax + r14*8]
0x00009070      e8ebe3ffff     call sym.check_dst_limits_calc_pos
0x00009075      39c3           cmp ebx, eax
0x00009077      7477           je 0x90f0
0x00009079      b801000000     mov eax, 1
0x0000907e      4883c448       add rsp, 0x48
0x00009082      5b             pop rbx
0x00009083      5d             pop rbp
0x00009084      415c           pop r12
0x00009086      415d           pop r13
0x00009088      415e           pop r14
0x0000908a      415f           pop r15
0x0000908c      c3             ret
0x0000908d      0f1f00         nop dword [rax]
0x00009090      4d89d6         mov r14, r10
0x00009093      4989ea         mov r10, rbp
0x00009096      662e0f1f8400.  nop word cs:[rax + rax]
0x000090a0      498d5e01       lea rbx, [r14 + 1]
0x000090a4      4c89d5         mov rbp, r10
0x000090a7      e922feffff     jmp 0x8ece
0x000090ac      0f1f4000       nop dword [rax]
0x000090b0      4d89d6         mov r14, r10
0x000090b3      4989c2         mov r10, rax
0x000090b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000090c0      498d6e01       lea rbp, [r14 + 1]
0x000090c4      4c89d0         mov rax, r10
0x000090c7      e98bfeffff     jmp 0x8f57
0x000090cc      0f1f4000       nop dword [rax]
0x000090d0      48c7c3ffffff.  mov rbx, 0xffffffffffffffff
0x000090d7      e976feffff     jmp 0x8f52
0x000090dc      0f1f4000       nop dword [rax]
0x000090e0      48c7c5ffffff.  mov rbp, 0xffffffffffffffff
0x000090e7      e9f0feffff     jmp 0x8fdc
0x000090ec      0f1f4000       nop dword [rax]
0x000090f0      488b442438     mov rax, qword [rsp + 0x38]
0x000090f5      4983c601       add r14, 1
0x000090f9      4c3b30         cmp r14, qword [rax]
0x000090fc      0f8c0effffff   jl 0x9010
0x00009102      31c0           xor eax, eax
0x00009104      e975ffffff     jmp 0x907e
0x00009109      0f1f80000000.  nop dword [rax]
;-- re_node_set_merge:
0x00009110      4885f6         test rsi, rsi
0x00009113      0f84ef000000   je 0x9208
0x00009119      488b5608       mov rdx, qword [rsi + 8]
0x0000911d      4885d2         test rdx, rdx
0x00009120      0f84e2000000   je 0x9208
0x00009126      4154           push r12
0x00009128      55             push rbp
0x00009129      4989f4         mov r12, rsi
0x0000912c      53             push rbx
0x0000912d      488b4708       mov rax, qword [rdi + 8]
0x00009131      4889fb         mov rbx, rdi
0x00009134      488b37         mov rsi, qword [rdi]
0x00009137      488d0c50       lea rcx, [rax + rdx*2]
0x0000913b      4839ce         cmp rsi, rcx
0x0000913e      0f8c44010000   jl 0x9288
0x00009144      4885c0         test rax, rax
0x00009147      0f8473010000   je 0x92c0
0x0000914d      488d2c50       lea rbp, [rax + rdx*2]
0x00009151      4883ea01       sub rdx, 1
0x00009155      4883e801       sub rax, 1
0x00009159      4889d7         mov rdi, rdx
0x0000915c      48f7d7         not rdi
0x0000915f      4885ff         test rdi, rdi
0x00009162      793c           jns 0x91a0
0x00009164      4885c0         test rax, rax
0x00009167      7837           js 0x91a0
0x00009169      488b4b10       mov rcx, qword [rbx + 0x10]
0x0000916d      498b742410     mov rsi, qword [r12 + 0x10]
0x00009172      488b34d6       mov rsi, qword [rsi + rdx*8]
0x00009176      483934c1       cmp qword [rcx + rax*8], rsi
0x0000917a      0f8490000000   je 0x9210
0x00009180      0f8da2000000   jge 0x9228
0x00009186      4883ea01       sub rdx, 1
0x0000918a      4883ed01       sub rbp, 1
0x0000918e      4889d7         mov rdi, rdx
0x00009191      488934e9       mov qword [rcx + rbp*8], rsi
0x00009195      48f7d7         not rdi
0x00009198      4885ff         test rdi, rdi
0x0000919b      78c7           js 0x9164
0x0000919d      0f1f00         nop dword [rax]
0x000091a0      4885d2         test rdx, rdx
0x000091a3      0f898f000000   jns 0x9238
0x000091a9      488b4b08       mov rcx, qword [rbx + 8]
0x000091ad      498b442408     mov rax, qword [r12 + 8]
0x000091b2      4c8d4441ff     lea r8, [rcx + rax*2 - 1]
0x000091b7      4c89c2         mov rdx, r8
0x000091ba      4829ea         sub rdx, rbp
0x000091bd      4883c201       add rdx, 1
0x000091c1      7437           je 0x91fa
0x000091c3      488b7b10       mov rdi, qword [rbx + 0x10]
0x000091c7      488d41ff       lea rax, [rcx - 1]
0x000091cb      4801d1         add rcx, rdx
0x000091ce      48894b08       mov qword [rbx + 8], rcx
0x000091d2      660f1f440000   nop word [rax + rax]
0x000091d8      4a8b34c7       mov rsi, qword [rdi + r8*8]
0x000091dc      488b0cc7       mov rcx, qword [rdi + rax*8]
0x000091e0      4c8d0c10       lea r9, [rax + rdx]
0x000091e4      4e8d0ccf       lea r9, [rdi + r9*8]
0x000091e8      4839ce         cmp rsi, rcx
0x000091eb      7e73           jle 0x9260
0x000091ed      4983e801       sub r8, 1
0x000091f1      4883ea01       sub rdx, 1
0x000091f5      498931         mov qword [r9], rsi
0x000091f8      75de           jne 0x91d8
0x000091fa      31c0           xor eax, eax
0x000091fc      5b             pop rbx
0x000091fd      5d             pop rbp
0x000091fe      415c           pop r12
0x00009200      c3             ret
0x00009201      0f1f80000000.  nop dword [rax]
0x00009208      31c0           xor eax, eax
0x0000920a      c3             ret
0x0000920b      0f1f440000     nop dword [rax + rax]
0x00009210      4883ea01       sub rdx, 1
0x00009214      4883e801       sub rax, 1
0x00009218      4889d7         mov rdi, rdx
0x0000921b      48f7d7         not rdi
0x0000921e      e93cffffff     jmp 0x915f
0x00009223      0f1f440000     nop dword [rax + rax]
0x00009228      4883e801       sub rax, 1
0x0000922c      e92effffff     jmp 0x915f
0x00009231      0f1f80000000.  nop dword [rax]
0x00009238      488b4310       mov rax, qword [rbx + 0x10]
0x0000923c      4883c201       add rdx, 1
0x00009240      498b742410     mov rsi, qword [r12 + 0x10]
0x00009245      4829d5         sub rbp, rdx
0x00009248      48c1e203       shl rdx, 3
0x0000924c      488d3ce8       lea rdi, [rax + rbp*8]
0x00009250      e88b89ffff     call sym.imp.memcpy
0x00009255      e94fffffff     jmp 0x91a9
0x0000925a      660f1f440000   nop word [rax + rax]
0x00009260      4883e801       sub rax, 1
0x00009264      498909         mov qword [r9], rcx
0x00009267      0f896bffffff   jns 0x91d8
0x0000926d      488d34ef       lea rsi, [rdi + rbp*8]
0x00009271      48c1e203       shl rdx, 3
0x00009275      e86689ffff     call sym.imp.memcpy
0x0000927a      31c0           xor eax, eax
0x0000927c      e97bffffff     jmp 0x91fc
0x00009281      0f1f80000000.  nop dword [rax]
0x00009288      4801f2         add rdx, rsi
0x0000928b      488b7f10       mov rdi, qword [rdi + 0x10]
0x0000928f      488d2c12       lea rbp, [rdx + rdx]
0x00009293      48c1e204       shl rdx, 4
0x00009297      4889d6         mov rsi, rdx
0x0000929a      e8f189ffff     call sym.imp.realloc
0x0000929f      4885c0         test rax, rax
0x000092a2      7440           je 0x92e4
0x000092a4      48894310       mov qword [rbx + 0x10], rax
0x000092a8      48892b         mov qword [rbx], rbp
0x000092ab      488b4308       mov rax, qword [rbx + 8]
0x000092af      498b542408     mov rdx, qword [r12 + 8]
0x000092b4      e98bfeffff     jmp 0x9144
0x000092b9      0f1f80000000.  nop dword [rax]
0x000092c0      48895308       mov qword [rbx + 8], rdx
0x000092c4      498b442408     mov rax, qword [r12 + 8]
0x000092c9      488b7b10       mov rdi, qword [rbx + 0x10]
0x000092cd      498b742410     mov rsi, qword [r12 + 0x10]
0x000092d2      488d14c50000.  lea rdx, [rax*8]
0x000092da      e80189ffff     call sym.imp.memcpy
0x000092df      e916ffffff     jmp 0x91fa
0x000092e4      b80c000000     mov eax, 0xc
0x000092e9      e90effffff     jmp 0x91fc
0x000092ee      6690           nop
;-- calc_eclosure_iter:
0x000092f0      4157           push r15
0x000092f2      4156           push r14
0x000092f4      4989f7         mov r15, rsi
0x000092f7      4155           push r13
0x000092f9      4154           push r12
0x000092fb      55             push rbp
0x000092fc      53             push rbx
0x000092fd      488d1c52       lea rbx, [rdx + rdx*2]
0x00009301      4889d5         mov rbp, rdx
0x00009304      4883ec68       sub rsp, 0x68
0x00009308      4c8b6628       mov r12, qword [rsi + 0x28]
0x0000930c      48c1e303       shl rbx, 3
0x00009310      64488b042528.  mov rax, qword fs:[0x28]
0x00009319      4889442458     mov qword [rsp + 0x58], rax
0x0000931e      31c0           xor eax, eax
0x00009320      48897c2410     mov qword [rsp + 0x10], rdi
0x00009325      894c241c       mov dword [rsp + 0x1c], ecx
0x00009329      4901dc         add r12, rbx
0x0000932c      498b442408     mov rax, qword [r12 + 8]
0x00009331      48c744242800.  mov qword [rsp + 0x28], 0
0x0000933a      488d7801       lea rdi, [rax + 1]
0x0000933e      48897c2420     mov qword [rsp + 0x20], rdi
0x00009343      48c1e703       shl rdi, 3
0x00009347      e8d488ffff     call sym.imp.malloc
0x0000934c      4885c0         test rax, rax
0x0000934f      4889442430     mov qword [rsp + 0x30], rax
0x00009354      0f8436020000   je 0x9590
0x0000935a      498b4730       mov rax, qword [r15 + 0x30]
0x0000935e      498b17         mov rdx, qword [r15]
0x00009361      4989ed         mov r13, rbp
0x00009364      49c1e504       shl r13, 4
0x00009368      48c7441808ff.  mov qword [rax + rbx + 8], 0xffffffffffffffff
0x00009371      4a8d042a       lea rax, [rdx + r13]
0x00009375      448b4008       mov r8d, dword [rax + 8]
0x00009379      41f7c000ff03.  test r8d, 0x3ff00
0x00009380      0f859a010000   jne 0x9520
0x00009386      f6400808       test byte [rax + 8], 8
0x0000938a      0f84c0000000   je 0x9450
0x00009390      498b7728       mov rsi, qword [r15 + 0x28]
0x00009394      488d041e       lea rax, [rsi + rbx]
0x00009398      4883780800     cmp qword [rax + 8], 0
0x0000939d      0f8ead000000   jle 0x9450
0x000093a3      488d542420     lea rdx, [rsp + 0x20]
0x000093a8      c644241b00     mov byte [rsp + 0x1b], 0
0x000093ad      4531f6         xor r14d, r14d
0x000093b0      4c8d642440     lea r12, [rsp + 0x40]
0x000093b5      4889542408     mov qword [rsp + 8], rdx
0x000093ba      eb1a           jmp 0x93d6
0x000093bc      0f1f4000       nop dword [rax]
0x000093c0      498b7728       mov rsi, qword [r15 + 0x28]
0x000093c4      4983c601       add r14, 1
0x000093c8      488d041e       lea rax, [rsi + rbx]
0x000093cc      4c397008       cmp qword [rax + 8], r14
0x000093d0      0f8e01010000   jle 0x94d7
0x000093d6      488b4010       mov rax, qword [rax + 0x10]
0x000093da      4a8b14f0       mov rdx, qword [rax + r14*8]
0x000093de      498b4730       mov rax, qword [r15 + 0x30]
0x000093e2      4c8d0452       lea r8, [rdx + rdx*2]
0x000093e6      4e8d2cc50000.  lea r13, [r8*8]
0x000093ee      4c01e8         add rax, r13
0x000093f1      488b4808       mov rcx, qword [rax + 8]
0x000093f5      4883f9ff       cmp rcx, 0xffffffffffffffff
0x000093f9      0f84c1000000   je 0x94c0
0x000093ff      4885c9         test rcx, rcx
0x00009402      0f8470010000   je 0x9578
0x00009408      f30f6f00       movdqu xmm0, xmmword [rax]
0x0000940c      0f29442440     movaps xmmword [rsp + 0x40], xmm0
0x00009411      488b4010       mov rax, qword [rax + 0x10]
0x00009415      4889442450     mov qword [rsp + 0x50], rax
0x0000941a      488b7c2408     mov rdi, qword [rsp + 8]
0x0000941f      4c89e6         mov rsi, r12
0x00009422      e8e9fcffff     call sym.re_node_set_merge
0x00009427      85c0           test eax, eax
0x00009429      756b           jne 0x9496
0x0000942b      498b4730       mov rax, qword [r15 + 0x30]
0x0000942f      4a837c280800   cmp qword [rax + r13 + 8], 0
0x00009435      7589           jne 0x93c0
0x00009437      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0000943c      e88f85ffff     call sym.imp.free
0x00009441      c644241b01     mov byte [rsp + 0x1b], 1
0x00009446      e975ffffff     jmp 0x93c0
0x0000944b      0f1f440000     nop dword [rax + rax]
0x00009450      488d7c2420     lea rdi, [rsp + 0x20]
0x00009455      4889ee         mov rsi, rbp
0x00009458      e853e2ffff     call sym.re_node_set_insert
0x0000945d      84c0           test al, al
0x0000945f      0f842b010000   je 0x9590
0x00009465      498b4730       mov rax, qword [r15 + 0x30]
0x00009469      660f6f442420   movdqa xmm0, xmmword [rsp + 0x20]
0x0000946f      0f110418       movups xmmword [rax + rbx], xmm0
0x00009473      488b542430     mov rdx, qword [rsp + 0x30]
0x00009478      4889541810     mov qword [rax + rbx + 0x10], rdx
0x0000947d      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00009482      488b442430     mov rax, qword [rsp + 0x30]
0x00009487      660f6f442420   movdqa xmm0, xmmword [rsp + 0x20]
0x0000948d      0f2903         movaps xmmword [rbx], xmm0
0x00009490      48894310       mov qword [rbx + 0x10], rax
0x00009494      31c0           xor eax, eax
0x00009496      488b742458     mov rsi, qword [rsp + 0x58]
0x0000949b      644833342528.  xor rsi, qword fs:[0x28]
0x000094a4      0f85f0000000   jne 0x959a
0x000094aa      4883c468       add rsp, 0x68
0x000094ae      5b             pop rbx
0x000094af      5d             pop rbp
0x000094b0      415c           pop r12
0x000094b2      415d           pop r13
0x000094b4      415e           pop r14
0x000094b6      415f           pop r15
0x000094b8      c3             ret
0x000094b9      0f1f80000000.  nop dword [rax]
0x000094c0      488d041e       lea rax, [rsi + rbx]
0x000094c4      4983c601       add r14, 1
0x000094c8      c644241b01     mov byte [rsp + 0x1b], 1
0x000094cd      4c397008       cmp qword [rax + 8], r14
0x000094d1      0f8ffffeffff   jg 0x93d6
0x000094d7      488d7c2420     lea rdi, [rsp + 0x20]
0x000094dc      4889ee         mov rsi, rbp
0x000094df      e8cce1ffff     call sym.re_node_set_insert
0x000094e4      84c0           test al, al
0x000094e6      0f84a4000000   je 0x9590
0x000094ec      807c241c01     cmp byte [rsp + 0x1c], 1
0x000094f1      498b4730       mov rax, qword [r15 + 0x30]
0x000094f5      488d1418       lea rdx, [rax + rbx]
0x000094f9      0f846affffff   je 0x9469
0x000094ff      807c241b00     cmp byte [rsp + 0x1b], 0
0x00009504      0f845fffffff   je 0x9469
0x0000950a      48c742080000.  mov qword [rdx + 8], 0
0x00009512      e966ffffff     jmp 0x947d
0x00009517      660f1f840000.  nop word [rax + rax]
0x00009520      49837c240800   cmp qword [r12 + 8], 0
0x00009526      0f8424ffffff   je 0x9450
0x0000952c      498b4c2410     mov rcx, qword [r12 + 0x10]
0x00009531      488b09         mov rcx, qword [rcx]
0x00009534      48c1e104       shl rcx, 4
0x00009538      f6440a0a04     test byte [rdx + rcx + 0xa], 4
0x0000953d      0f8543feffff   jne 0x9386
0x00009543      41c1e808       shr r8d, 8
0x00009547      4889e9         mov rcx, rbp
0x0000954a      4889ea         mov rdx, rbp
0x0000954d      4181e0ff0300.  and r8d, 0x3ff
0x00009554      4889ee         mov rsi, rbp
0x00009557      4c89ff         mov rdi, r15
0x0000955a      e8a1f0ffff     call sym.duplicate_node_closure
0x0000955f      85c0           test eax, eax
0x00009561      0f852fffffff   jne 0x9496
0x00009567      498b07         mov rax, qword [r15]
0x0000956a      4c01e8         add rax, r13
0x0000956d      e914feffff     jmp 0x9386
0x00009572      660f1f440000   nop word [rax + rax]
0x00009578      4c89fe         mov rsi, r15
0x0000957b      4c89e7         mov rdi, r12
0x0000957e      e86dfdffff     call sym.calc_eclosure_iter
0x00009583      85c0           test eax, eax
0x00009585      0f848ffeffff   je 0x941a
0x0000958b      e906ffffff     jmp 0x9496
0x00009590      b80c000000     mov eax, 0xc
0x00009595      e9fcfeffff     jmp 0x9496
0x0000959a      e83185ffff     call sym.imp.__stack_chk_fail
0x0000959f      90             nop
;-- check_arrival_expand_ecl:
0x000095a0      4157           push r15
0x000095a2      4156           push r14
0x000095a4      4989fe         mov r14, rdi
0x000095a7      4155           push r13
0x000095a9      4154           push r12
0x000095ab      4989f7         mov r15, rsi
0x000095ae      55             push rbp
0x000095af      53             push rbx
0x000095b0      4889d5         mov rbp, rdx
0x000095b3      89cb           mov ebx, ecx
0x000095b5      4883ec38       sub rsp, 0x38
0x000095b9      4c8b6608       mov r12, qword [rsi + 8]
0x000095bd      64488b042528.  mov rax, qword fs:[0x28]
0x000095c6      4889442428     mov qword [rsp + 0x28], rax
0x000095cb      31c0           xor eax, eax
0x000095cd      48c744241800.  mov qword [rsp + 0x18], 0
0x000095d6      4a8d3ce50000.  lea rdi, [r12*8]
0x000095de      4c89642410     mov qword [rsp + 0x10], r12
0x000095e3      e83886ffff     call sym.imp.malloc
0x000095e8      4885c0         test rax, rax
0x000095eb      4889442420     mov qword [rsp + 0x20], rax
0x000095f0      0f84f7000000   je 0x96ed
0x000095f6      4d85e4         test r12, r12
0x000095f9      0f8e8c000000   jle 0x968b
0x000095ff      4c8d642410     lea r12, [rsp + 0x10]
0x00009604      4531ed         xor r13d, r13d
0x00009607      660f1f840000.  nop word [rax + rax]
0x00009610      498b4710       mov rax, qword [r15 + 0x10]
0x00009614      4a8b14e8       mov rdx, qword [rax + r13*8]
0x00009618      498b4630       mov rax, qword [r14 + 0x30]
0x0000961c      488d0c52       lea rcx, [rdx + rdx*2]
0x00009620      488d34c8       lea rsi, [rax + rcx*8]
0x00009624      4c8b4608       mov r8, qword [rsi + 8]
0x00009628      4d85c0         test r8, r8
0x0000962b      0f8e7f000000   jle 0x96b0
0x00009631      4c8b5610       mov r10, qword [rsi + 0x10]
0x00009635      4d8b0e         mov r9, qword [r14]
0x00009638      31c9           xor ecx, ecx
0x0000963a      eb0d           jmp 0x9649
0x0000963c      0f1f4000       nop dword [rax]
0x00009640      4883c101       add rcx, 1
0x00009644      4939c8         cmp r8, rcx
0x00009647      7467           je 0x96b0
0x00009649      498b3cca       mov rdi, qword [r10 + rcx*8]
0x0000964d      4889f8         mov rax, rdi
0x00009650      48c1e004       shl rax, 4
0x00009654      4c01c8         add rax, r9
0x00009657      440fb65808     movzx r11d, byte [rax + 8]
0x0000965c      4439db         cmp ebx, r11d
0x0000965f      75df           jne 0x9640
0x00009661      483b28         cmp rbp, qword [rax]
0x00009664      75da           jne 0x9640
0x00009666      4883ffff       cmp rdi, 0xffffffffffffffff
0x0000966a      7444           je 0x96b0
0x0000966c      4189d8         mov r8d, ebx
0x0000966f      4889e9         mov rcx, rbp
0x00009672      4c89e6         mov rsi, r12
0x00009675      4c89f7         mov rdi, r14
0x00009678      e8f3f5ffff     call sym.check_arrival_expand_ecl_sub
0x0000967d      85c0           test eax, eax
0x0000967f      753b           jne 0x96bc
0x00009681      4983c501       add r13, 1
0x00009685      4d396f08       cmp qword [r15 + 8], r13
0x00009689      7f85           jg 0x9610
0x0000968b      498b7f10       mov rdi, qword [r15 + 0x10]
0x0000968f      e83c83ffff     call sym.imp.free
0x00009694      488b442420     mov rax, qword [rsp + 0x20]
0x00009699      660f6f442410   movdqa xmm0, xmmword [rsp + 0x10]
0x0000969f      49894710       mov qword [r15 + 0x10], rax
0x000096a3      31c0           xor eax, eax
0x000096a5      410f2907       movaps xmmword [r15], xmm0
0x000096a9      eb23           jmp 0x96ce
0x000096ab      0f1f440000     nop dword [rax + rax]
0x000096b0      4c89e7         mov rdi, r12
0x000096b3      e858faffff     call sym.re_node_set_merge
0x000096b8      85c0           test eax, eax
0x000096ba      74c5           je 0x9681
0x000096bc      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000096c1      8944240c       mov dword [rsp + 0xc], eax
0x000096c5      e80683ffff     call sym.imp.free
0x000096ca      8b44240c       mov eax, dword [rsp + 0xc]
0x000096ce      488b542428     mov rdx, qword [rsp + 0x28]
0x000096d3      644833142528.  xor rdx, qword fs:[0x28]
0x000096dc      7516           jne 0x96f4
0x000096de      4883c438       add rsp, 0x38
0x000096e2      5b             pop rbx
0x000096e3      5d             pop rbp
0x000096e4      415c           pop r12
0x000096e6      415d           pop r13
0x000096e8      415e           pop r14
0x000096ea      415f           pop r15
0x000096ec      c3             ret
0x000096ed      b80c000000     mov eax, 0xc
0x000096f2      ebda           jmp 0x96ce
0x000096f4      e8d783ffff     call sym.imp.__stack_chk_fail
0x000096f9      0f1f80000000.  nop dword [rax]
;-- re_node_set_add_intersect:
0x00009700      4c8b4e08       mov r9, qword [rsi + 8]
0x00009704      31c0           xor eax, eax
0x00009706      4d85c9         test r9, r9
0x00009709      0f84b9000000   je 0x97c8
0x0000970f      4c8b5a08       mov r11, qword [rdx + 8]
0x00009713      4d85db         test r11, r11
0x00009716      0f84ac000000   je 0x97c8
0x0000971c      4155           push r13
0x0000971e      4154           push r12
0x00009720      4b8d0419       lea rax, [r9 + r11]
0x00009724      55             push rbp
0x00009725      53             push rbx
0x00009726      4989d4         mov r12, rdx
0x00009729      4889fb         mov rbx, rdi
0x0000972c      4889f5         mov rbp, rsi
0x0000972f      4883ec08       sub rsp, 8
0x00009733      488b4f08       mov rcx, qword [rdi + 8]
0x00009737      4c8b2f         mov r13, qword [rdi]
0x0000973a      488b7f10       mov rdi, qword [rdi + 0x10]
0x0000973e      488d1408       lea rdx, [rax + rcx]
0x00009742      4c39ea         cmp rdx, r13
0x00009745      0f8f25010000   jg 0x9870
0x0000974b      4a8d3409       lea rsi, [rcx + r9]
0x0000974f      4c8b6d10       mov r13, qword [rbp + 0x10]
0x00009753      498b542410     mov rdx, qword [r12 + 0x10]
0x00009758      4983e901       sub r9, 1
0x0000975c      4883e901       sub rcx, 1
0x00009760      4c01de         add rsi, r11
0x00009763      4983eb01       sub r11, 1
0x00009767      4b8b44cd00     mov rax, qword [r13 + r9*8]
0x0000976c      4e8b04da       mov r8, qword [rdx + r11*8]
0x00009770      4c39c0         cmp rax, r8
0x00009773      7411           je 0x9786
0x00009775      7d59           jge 0x97d0
0x00009777      4983eb01       sub r11, 1
0x0000977b      7863           js 0x97e0
0x0000977d      4e8b04da       mov r8, qword [rdx + r11*8]
0x00009781      4c39c0         cmp rax, r8
0x00009784      75ef           jne 0x9775
0x00009786      4885c9         test rcx, rcx
0x00009789      790f           jns 0x979a
0x0000978b      eb1b           jmp 0x97a8
0x0000978d      0f1f00         nop dword [rax]
0x00009790      4883e901       sub rcx, 1
0x00009794      4883f9ff       cmp rcx, 0xffffffffffffffff
0x00009798      740e           je 0x97a8
0x0000979a      4c8b14cf       mov r10, qword [rdi + rcx*8]
0x0000979e      4d39c2         cmp r10, r8
0x000097a1      7fed           jg 0x9790
0x000097a3      4d39c2         cmp r10, r8
0x000097a6      7408           je 0x97b0
0x000097a8      4883ee01       sub rsi, 1
0x000097ac      4c8904f7       mov qword [rdi + rsi*8], r8
0x000097b0      4983e901       sub r9, 1
0x000097b4      782a           js 0x97e0
0x000097b6      4983eb01       sub r11, 1
0x000097ba      7824           js 0x97e0
0x000097bc      4b8b44cd00     mov rax, qword [r13 + r9*8]
0x000097c1      ebba           jmp 0x977d
0x000097c3      0f1f440000     nop dword [rax + rax]
0x000097c8      f3c3           ret
0x000097ca      660f1f440000   nop word [rax + rax]
0x000097d0      4983e901       sub r9, 1
0x000097d4      780a           js 0x97e0
0x000097d6      4b8b44cd00     mov rax, qword [r13 + r9*8]
0x000097db      eb93           jmp 0x9770
0x000097dd      0f1f00         nop dword [rax]
0x000097e0      488b4b08       mov rcx, qword [rbx + 8]
0x000097e4      488b5508       mov rdx, qword [rbp + 8]
0x000097e8      4801ca         add rdx, rcx
0x000097eb      4903542408     add rdx, qword [r12 + 8]
0x000097f0      488d41ff       lea rax, [rcx - 1]
0x000097f4      4c8d4aff       lea r9, [rdx - 1]
0x000097f8      4829f2         sub rdx, rsi
0x000097fb      4801d1         add rcx, rdx
0x000097fe      4885d2         test rdx, rdx
0x00009801      48894b08       mov qword [rbx + 8], rcx
0x00009805      7e46           jle 0x984d
0x00009807      4885c0         test rax, rax
0x0000980a      7841           js 0x984d
0x0000980c      0f1f4000       nop dword [rax]
0x00009810      4e8b04cf       mov r8, qword [rdi + r9*8]
0x00009814      488b0cc7       mov rcx, qword [rdi + rax*8]
0x00009818      4c8d1410       lea r10, [rax + rdx]
0x0000981c      4e8d14d7       lea r10, [rdi + r10*8]
0x00009820      4939c8         cmp r8, rcx
0x00009823      7e1b           jle 0x9840
0x00009825      4983e901       sub r9, 1
0x00009829      4883ea01       sub rdx, 1
0x0000982d      4d8902         mov qword [r10], r8
0x00009830      75de           jne 0x9810
0x00009832      31d2           xor edx, edx
0x00009834      eb1b           jmp 0x9851
0x00009836      662e0f1f8400.  nop word cs:[rax + rax]
0x00009840      4883e801       sub rax, 1
0x00009844      49890a         mov qword [r10], rcx
0x00009847      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000984b      75c3           jne 0x9810
0x0000984d      48c1e203       shl rdx, 3
0x00009851      488d34f7       lea rsi, [rdi + rsi*8]
0x00009855      e88683ffff     call sym.imp.memcpy
0x0000985a      31c0           xor eax, eax
0x0000985c      4883c408       add rsp, 8
0x00009860      5b             pop rbx
0x00009861      5d             pop rbp
0x00009862      415c           pop r12
0x00009864      415d           pop r13
0x00009866      c3             ret
0x00009867      660f1f840000.  nop word [rax + rax]
0x00009870      4901c5         add r13, rax
0x00009873      4a8d34ed0000.  lea rsi, [r13*8]
0x0000987b      e81084ffff     call sym.imp.realloc
0x00009880      4885c0         test rax, rax
0x00009883      4889c7         mov rdi, rax
0x00009886      7419           je 0x98a1
0x00009888      48894310       mov qword [rbx + 0x10], rax
0x0000988c      4c892b         mov qword [rbx], r13
0x0000988f      488b4b08       mov rcx, qword [rbx + 8]
0x00009893      4c8b4d08       mov r9, qword [rbp + 8]
0x00009897      4d8b5c2408     mov r11, qword [r12 + 8]
0x0000989c      e9aafeffff     jmp 0x974b
0x000098a1      b80c000000     mov eax, 0xc
0x000098a6      ebb4           jmp 0x985c
0x000098a8      0f1f84000000.  nop dword [rax + rax]
;-- create_token_tree.isra.16:
0x000098b0      53             push rbx
0x000098b1      4889fb         mov rbx, rdi
0x000098b4      4883ec20       sub rsp, 0x20
0x000098b8      8b06           mov eax, dword [rsi]
0x000098ba      83f80f         cmp eax, 0xf
0x000098bd      7479           je 0x9938
0x000098bf      4c63c8         movsxd r9, eax
0x000098c2      448d5001       lea r10d, [rax + 1]
0x000098c6      488b3f         mov rdi, qword [rdi]
0x000098c9      4c89c8         mov rax, r9
0x000098cc      48c1e006       shl rax, 6
0x000098d0      4883c008       add rax, 8
0x000098d4      49c1e106       shl r9, 6
0x000098d8      448916         mov dword [rsi], r10d
0x000098db      4801f8         add rax, rdi
0x000098de      4a8d340f       lea rsi, [rdi + r9]
0x000098e2      48c746080000.  mov qword [rsi + 8], 0
0x000098ea      48895610       mov qword [rsi + 0x10], rdx
0x000098ee      488d7e20       lea rdi, [rsi + 0x20]
0x000098f2      48894e18       mov qword [rsi + 0x18], rcx
0x000098f6      f3410f6f00     movdqu xmm0, xmmword [r8]
0x000098fb      0f114630       movups xmmword [rsi + 0x30], xmm0
0x000098ff      80671af3       and byte [rdi + 0x1a], 0xf3             ; [0xf3:1]=0
0x00009903      4885d2         test rdx, rdx
0x00009906      48c746200000.  mov qword [rsi + 0x20], 0
0x0000990e      48c746280000.  mov qword [rsi + 0x28], 0
0x00009916      48c74640ffff.  mov qword [rsi + 0x40], 0xffffffffffffffff
0x0000991e      7403           je 0x9923
0x00009920      488902         mov qword [rdx], rax
0x00009923      4885c9         test rcx, rcx
0x00009926      7403           je 0x992b
0x00009928      488901         mov qword [rcx], rax
0x0000992b      4883c420       add rsp, 0x20
0x0000992f      5b             pop rbx
0x00009930      c3             ret
0x00009931      0f1f80000000.  nop dword [rax]
0x00009938      bfc8030000     mov edi, 0x3c8
0x0000993d      4c89442418     mov qword [rsp + 0x18], r8
0x00009942      48894c2410     mov qword [rsp + 0x10], rcx
0x00009947      4889542408     mov qword [rsp + 8], rdx
0x0000994c      48893424       mov qword [rsp], rsi
0x00009950      e8cb82ffff     call sym.imp.malloc
0x00009955      4885c0         test rax, rax
0x00009958      4889c7         mov rdi, rax
0x0000995b      742f           je 0x998c
0x0000995d      488b03         mov rax, qword [rbx]
0x00009960      41ba01000000   mov r10d, 1
0x00009966      48893b         mov qword [rbx], rdi
0x00009969      4531c9         xor r9d, r9d
0x0000996c      4c8b442418     mov r8, qword [rsp + 0x18]
0x00009971      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00009976      488b542408     mov rdx, qword [rsp + 8]
0x0000997b      488b3424       mov rsi, qword [rsp]
0x0000997f      488907         mov qword [rdi], rax
0x00009982      b808000000     mov eax, 8
0x00009987      e948ffffff     jmp 0x98d4
0x0000998c      31c0           xor eax, eax
0x0000998e      eb9b           jmp 0x992b
;-- duplicate_tree:
0x00009990      4156           push r14
0x00009992      4155           push r13
0x00009994      4c8d6e70       lea r13, [rsi + 0x70]
0x00009998      4154           push r12
0x0000999a      55             push rbp
0x0000999b      4c8da6800000.  lea r12, [rsi + 0x80]
0x000099a2      53             push rbx
0x000099a3      4889fb         mov rbx, rdi
0x000099a6      4883ec10       sub rsp, 0x10
0x000099aa      488b2f         mov rbp, qword [rdi]
0x000099ad      64488b042528.  mov rax, qword fs:[0x28]
0x000099b6      4889442408     mov qword [rsp + 8], rax
0x000099bb      31c0           xor eax, eax
0x000099bd      4989e6         mov r14, rsp
0x000099c0      4c8d4328       lea r8, [rbx + 0x28]
0x000099c4      31c9           xor ecx, ecx
0x000099c6      31d2           xor edx, edx
0x000099c8      4c89e6         mov rsi, r12
0x000099cb      4c89ef         mov rdi, r13
0x000099ce      e8ddfeffff     call sym.create_token_tree.isra.16
0x000099d3      4885c0         test rax, rax
0x000099d6      498906         mov qword [r14], rax
0x000099d9      7451           je 0x9a2c
0x000099db      488928         mov qword [rax], rbp
0x000099de      498b2e         mov rbp, qword [r14]
0x000099e1      804d3204       or byte [rbp + 0x32], 4
0x000099e5      488b4308       mov rax, qword [rbx + 8]
0x000099e9      4885c0         test rax, rax
0x000099ec      7412           je 0x9a00
0x000099ee      4c8d7508       lea r14, [rbp + 8]
0x000099f2      4889c3         mov rbx, rax
0x000099f5      ebc9           jmp 0x99c0
0x000099f7      660f1f840000.  nop word [rax + rax]
0x00009a00      31d2           xor edx, edx
0x00009a02      eb07           jmp 0x9a0b
0x00009a04      0f1f4000       nop dword [rax]
0x00009a08      4889c3         mov rbx, rax
0x00009a0b      488b4310       mov rax, qword [rbx + 0x10]
0x00009a0f      4885c0         test rax, rax
0x00009a12      7405           je 0x9a19
0x00009a14      4839d0         cmp rax, rdx
0x00009a17      7537           jne 0x9a50
0x00009a19      488b03         mov rax, qword [rbx]
0x00009a1c      488b6d00       mov rbp, qword [rbp]
0x00009a20      4889da         mov rdx, rbx
0x00009a23      4885c0         test rax, rax
0x00009a26      75e0           jne 0x9a08
0x00009a28      488b0424       mov rax, qword [rsp]
0x00009a2c      488b4c2408     mov rcx, qword [rsp + 8]
0x00009a31      6448330c2528.  xor rcx, qword fs:[0x28]
0x00009a3a      7520           jne 0x9a5c
0x00009a3c      4883c410       add rsp, 0x10
0x00009a40      5b             pop rbx
0x00009a41      5d             pop rbp
0x00009a42      415c           pop r12
0x00009a44      415d           pop r13
0x00009a46      415e           pop r14
0x00009a48      c3             ret
0x00009a49      0f1f80000000.  nop dword [rax]
0x00009a50      4c8d7510       lea r14, [rbp + 0x10]
0x00009a54      4889c3         mov rbx, rax
0x00009a57      e964ffffff     jmp 0x99c0
0x00009a5c      e86f80ffff     call sym.imp.__stack_chk_fail
0x00009a61      0f1f440000     nop dword [rax + rax]
0x00009a66      662e0f1f8400.  nop word cs:[rax + rax]
;-- lower_subexp:
0x00009a70      4157           push r15
0x00009a72      4156           push r14
0x00009a74      4155           push r13
0x00009a76      4154           push r12
0x00009a78      4989d5         mov r13, rdx
0x00009a7b      55             push rbp
0x00009a7c      53             push rbx
0x00009a7d      4883ec48       sub rsp, 0x48
0x00009a81      488b1e         mov rbx, qword [rsi]
0x00009a84      488b6a08       mov rbp, qword [rdx + 8]
0x00009a88      64488b042528.  mov rax, qword fs:[0x28]
0x00009a91      4889442438     mov qword [rsp + 0x38], rax
0x00009a96      31c0           xor eax, eax
0x00009a98      f6463810       test byte [rsi + 0x38], 0x10
0x00009a9c      48897c2418     mov qword [rsp + 0x18], rdi
0x00009aa1      0f8471010000   je 0x9c18
0x00009aa7      4885ed         test rbp, rbp
0x00009aaa      7474           je 0x9b20
0x00009aac      488b4228       mov rax, qword [rdx + 0x28]
0x00009ab0      4883f83f       cmp rax, 0x3f
0x00009ab4      0f8f33010000   jg 0x9bed
0x00009aba      488b93a00000.  mov rdx, qword [rbx + 0xa0]
0x00009ac1      480fa3c2       bt rdx, rax
0x00009ac5      0f8322010000   jae 0x9bed
0x00009acb      488d4370       lea rax, [rbx + 0x70]
0x00009acf      4c8d742420     lea r14, [rsp + 0x20]
0x00009ad4      4883eb80       sub rbx, 0xffffffffffffff80
0x00009ad8      31c9           xor ecx, ecx
0x00009ada      31d2           xor edx, edx
0x00009adc      4889de         mov rsi, rbx
0x00009adf      4989c7         mov r15, rax
0x00009ae2      4d89f0         mov r8, r14
0x00009ae5      4889c7         mov rdi, rax
0x00009ae8      c644242808     mov byte [rsp + 0x28], 8
0x00009aed      4889442408     mov qword [rsp + 8], rax
0x00009af2      e8b9fdffff     call sym.create_token_tree.isra.16
0x00009af7      4c89ff         mov rdi, r15
0x00009afa      4d89f0         mov r8, r14
0x00009afd      31c9           xor ecx, ecx
0x00009aff      31d2           xor edx, edx
0x00009b01      4889de         mov rsi, rbx
0x00009b04      4989c4         mov r12, rax
0x00009b07      c644242809     mov byte [rsp + 0x28], 9
0x00009b0c      e89ffdffff     call sym.create_token_tree.isra.16
0x00009b11      4989c7         mov r15, rax
0x00009b14      e954010000     jmp 0x9c6d
0x00009b19      0f1f80000000.  nop dword [rax]
0x00009b20      488d4370       lea rax, [rbx + 0x70]
0x00009b24      4c8d742420     lea r14, [rsp + 0x20]
0x00009b29      4883eb80       sub rbx, 0xffffffffffffff80
0x00009b2d      31c9           xor ecx, ecx
0x00009b2f      31d2           xor edx, edx
0x00009b31      4889de         mov rsi, rbx
0x00009b34      4989c7         mov r15, rax
0x00009b37      4d89f0         mov r8, r14
0x00009b3a      4889c7         mov rdi, rax
0x00009b3d      c644242808     mov byte [rsp + 0x28], 8
0x00009b42      4889442408     mov qword [rsp + 8], rax
0x00009b47      e864fdffff     call sym.create_token_tree.isra.16
0x00009b4c      4c89ff         mov rdi, r15
0x00009b4f      4d89f0         mov r8, r14
0x00009b52      31c9           xor ecx, ecx
0x00009b54      31d2           xor edx, edx
0x00009b56      4889de         mov rsi, rbx
0x00009b59      4989c4         mov r12, rax
0x00009b5c      c644242809     mov byte [rsp + 0x28], 9
0x00009b61      e84afdffff     call sym.create_token_tree.isra.16
0x00009b66      4989c3         mov r11, rax
0x00009b69      4989c7         mov r15, rax
0x00009b6c      488b7c2408     mov rdi, qword [rsp + 8]
0x00009b71      4d89f0         mov r8, r14
0x00009b74      4c89d9         mov rcx, r11
0x00009b77      4c89e2         mov rdx, r12
0x00009b7a      4889de         mov rsi, rbx
0x00009b7d      c644242810     mov byte [rsp + 0x28], 0x10             ; [0x10:1]=3
0x00009b82      4c895c2410     mov qword [rsp + 0x10], r11
0x00009b87      e824fdffff     call sym.create_token_tree.isra.16
0x00009b8c      4885c0         test rax, rax
0x00009b8f      4889c5         mov rbp, rax
0x00009b92      0f84f8000000   je 0x9c90
0x00009b98      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00009b9d      4d85db         test r11, r11
0x00009ba0      0f84ea000000   je 0x9c90
0x00009ba6      4d85e4         test r12, r12
0x00009ba9      0f84e1000000   je 0x9c90
0x00009baf      4d85ff         test r15, r15
0x00009bb2      0f84d8000000   je 0x9c90
0x00009bb8      498b4528       mov rax, qword [r13 + 0x28]
0x00009bbc      49894728       mov qword [r15 + 0x28], rax
0x00009bc0      4989442428     mov qword [r12 + 0x28], rax
0x00009bc5      410fb64532     movzx eax, byte [r13 + 0x32]
0x00009bca      410fb65732     movzx edx, byte [r15 + 0x32]
0x00009bcf      83e008         and eax, 8
0x00009bd2      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x00009bd5      89c1           mov ecx, eax
0x00009bd7      09ca           or edx, ecx
0x00009bd9      41885732       mov byte [r15 + 0x32], dl
0x00009bdd      410fb6442432   movzx eax, byte [r12 + 0x32]
0x00009be3      83e0f7         and eax, 0xfffffff7                     ; 4294967287
0x00009be6      09c8           or eax, ecx
0x00009be8      4188442432     mov byte [r12 + 0x32], al
0x00009bed      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00009bf2      6448333c2528.  xor rdi, qword fs:[0x28]
0x00009bfb      4889e8         mov rax, rbp
0x00009bfe      0f859e000000   jne 0x9ca2
0x00009c04      4883c448       add rsp, 0x48
0x00009c08      5b             pop rbx
0x00009c09      5d             pop rbp
0x00009c0a      415c           pop r12
0x00009c0c      415d           pop r13
0x00009c0e      415e           pop r14
0x00009c10      415f           pop r15
0x00009c12      c3             ret
0x00009c13      0f1f440000     nop dword [rax + rax]
0x00009c18      488d4370       lea rax, [rbx + 0x70]
0x00009c1c      4c8d742420     lea r14, [rsp + 0x20]
0x00009c21      4883eb80       sub rbx, 0xffffffffffffff80
0x00009c25      31c9           xor ecx, ecx
0x00009c27      31d2           xor edx, edx
0x00009c29      4889de         mov rsi, rbx
0x00009c2c      4989c7         mov r15, rax
0x00009c2f      4d89f0         mov r8, r14
0x00009c32      4889c7         mov rdi, rax
0x00009c35      c644242808     mov byte [rsp + 0x28], 8
0x00009c3a      4889442408     mov qword [rsp + 8], rax
0x00009c3f      e86cfcffff     call sym.create_token_tree.isra.16
0x00009c44      31c9           xor ecx, ecx
0x00009c46      31d2           xor edx, edx
0x00009c48      4c89ff         mov rdi, r15
0x00009c4b      4d89f0         mov r8, r14
0x00009c4e      4889de         mov rsi, rbx
0x00009c51      4989c4         mov r12, rax
0x00009c54      c644242809     mov byte [rsp + 0x28], 9
0x00009c59      e852fcffff     call sym.create_token_tree.isra.16
0x00009c5e      4885ed         test rbp, rbp
0x00009c61      4989c7         mov r15, rax
0x00009c64      4989c3         mov r11, rax
0x00009c67      0f84fffeffff   je 0x9b6c
0x00009c6d      488b7c2408     mov rdi, qword [rsp + 8]
0x00009c72      4d89f0         mov r8, r14
0x00009c75      4c89f9         mov rcx, r15
0x00009c78      4889ea         mov rdx, rbp
0x00009c7b      4889de         mov rsi, rbx
0x00009c7e      c644242810     mov byte [rsp + 0x28], 0x10             ; [0x10:1]=3
0x00009c83      e828fcffff     call sym.create_token_tree.isra.16
0x00009c88      4989c3         mov r11, rax
0x00009c8b      e9dcfeffff     jmp 0x9b6c
0x00009c90      488b442418     mov rax, qword [rsp + 0x18]
0x00009c95      31ed           xor ebp, ebp
0x00009c97      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00009c9d      e94bffffff     jmp 0x9bed
0x00009ca2      e8297effff     call sym.imp.__stack_chk_fail
0x00009ca7      660f1f840000.  nop word [rax + rax]
;-- lower_subexps:
0x00009cb0      55             push rbp
0x00009cb1      53             push rbx
0x00009cb2      4889fd         mov rbp, rdi
0x00009cb5      4889f3         mov rbx, rsi
0x00009cb8      4883ec18       sub rsp, 0x18
0x00009cbc      488b5608       mov rdx, qword [rsi + 8]
0x00009cc0      64488b042528.  mov rax, qword fs:[0x28]
0x00009cc9      4889442408     mov qword [rsp + 8], rax
0x00009cce      31c0           xor eax, eax
0x00009cd0      c74424040000.  mov dword [rsp + 4], 0
0x00009cd8      4885d2         test rdx, rdx
0x00009cdb      7406           je 0x9ce3
0x00009cdd      807a3011       cmp byte [rdx + 0x30], 0x11
0x00009ce1      744d           je 0x9d30
0x00009ce3      488b5310       mov rdx, qword [rbx + 0x10]
0x00009ce7      4885d2         test rdx, rdx
0x00009cea      7406           je 0x9cf2
0x00009cec      807a3011       cmp byte [rdx + 0x30], 0x11
0x00009cf0      741e           je 0x9d10
0x00009cf2      488b4c2408     mov rcx, qword [rsp + 8]
0x00009cf7      6448330c2528.  xor rcx, qword fs:[0x28]
0x00009d00      8b442404       mov eax, dword [rsp + 4]
0x00009d04      7545           jne 0x9d4b
0x00009d06      4883c418       add rsp, 0x18
0x00009d0a      5b             pop rbx
0x00009d0b      5d             pop rbp
0x00009d0c      c3             ret
0x00009d0d      0f1f00         nop dword [rax]
0x00009d10      488d7c2404     lea rdi, [rsp + 4]
0x00009d15      4889ee         mov rsi, rbp
0x00009d18      e853fdffff     call sym.lower_subexp
0x00009d1d      4885c0         test rax, rax
0x00009d20      48894310       mov qword [rbx + 0x10], rax
0x00009d24      74cc           je 0x9cf2
0x00009d26      488918         mov qword [rax], rbx
0x00009d29      ebc7           jmp 0x9cf2
0x00009d2b      0f1f440000     nop dword [rax + rax]
0x00009d30      488d7c2404     lea rdi, [rsp + 4]
0x00009d35      4889ee         mov rsi, rbp
0x00009d38      e833fdffff     call sym.lower_subexp
0x00009d3d      4885c0         test rax, rax
0x00009d40      48894308       mov qword [rbx + 8], rax
0x00009d44      749d           je 0x9ce3
0x00009d46      488918         mov qword [rax], rbx
0x00009d49      eb98           jmp 0x9ce3
0x00009d4b      e8807dffff     call sym.imp.__stack_chk_fail
;-- re_node_set_init_copy:
0x00009d50      4154           push r12
0x00009d52      55             push rbp
0x00009d53      53             push rbx
0x00009d54      488b4608       mov rax, qword [rsi + 8]
0x00009d58      48894708       mov qword [rdi + 8], rax
0x00009d5c      4c8b6608       mov r12, qword [rsi + 8]
0x00009d60      4d85e4         test r12, r12
0x00009d63      7e3b           jle 0x9da0
0x00009d65      4889fb         mov rbx, rdi
0x00009d68      488907         mov qword [rdi], rax
0x00009d6b      488d3cc50000.  lea rdi, [rax*8]
0x00009d73      4889f5         mov rbp, rsi
0x00009d76      e8a57effff     call sym.imp.malloc
0x00009d7b      4885c0         test rax, rax
0x00009d7e      48894310       mov qword [rbx + 0x10], rax
0x00009d82      743c           je 0x9dc0
0x00009d84      488b7510       mov rsi, qword [rbp + 0x10]
0x00009d88      4a8d14e50000.  lea rdx, [r12*8]
0x00009d90      4889c7         mov rdi, rax
0x00009d93      e8487effff     call sym.imp.memcpy
0x00009d98      31c0           xor eax, eax
0x00009d9a      5b             pop rbx
0x00009d9b      5d             pop rbp
0x00009d9c      415c           pop r12
0x00009d9e      c3             ret
0x00009d9f      90             nop
0x00009da0      660fefc0       pxor xmm0, xmm0
0x00009da4      48c747100000.  mov qword [rdi + 0x10], 0
0x00009dac      31c0           xor eax, eax
0x00009dae      0f1107         movups xmmword [rdi], xmm0
0x00009db1      5b             pop rbx
0x00009db2      5d             pop rbp
0x00009db3      415c           pop r12
0x00009db5      c3             ret
0x00009db6      662e0f1f8400.  nop word cs:[rax + rax]
0x00009dc0      48c743080000.  mov qword [rbx + 8], 0
0x00009dc8      48c703000000.  mov qword [rbx], 0
0x00009dcf      b80c000000     mov eax, 0xc
0x00009dd4      ebc4           jmp 0x9d9a
0x00009dd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_init_union:
0x00009de0      4885f6         test rsi, rsi
0x00009de3      4156           push r14
0x00009de5      4155           push r13
0x00009de7      4154           push r12
0x00009de9      55             push rbp
0x00009dea      53             push rbx
0x00009deb      0f84a4000000   je 0x9e95
0x00009df1      4885d2         test rdx, rdx
0x00009df4      4c8b6e08       mov r13, qword [rsi + 8]
0x00009df8      0f8492000000   je 0x9e90
0x00009dfe      4d85ed         test r13, r13
0x00009e01      0f8e89000000   jle 0x9e90
0x00009e07      4c8b7208       mov r14, qword [rdx + 8]
0x00009e0b      4d85f6         test r14, r14
0x00009e0e      0f8eaf000000   jle 0x9ec3
0x00009e14      4989fc         mov r12, rdi
0x00009e17      4b8d7c3500     lea rdi, [r13 + r14]
0x00009e1c      4889d3         mov rbx, rdx
0x00009e1f      4889f5         mov rbp, rsi
0x00009e22      49893c24       mov qword [r12], rdi
0x00009e26      48c1e703       shl rdi, 3
0x00009e2a      e8f17dffff     call sym.imp.malloc
0x00009e2f      4885c0         test rax, rax
0x00009e32      4989442410     mov qword [r12 + 0x10], rax
0x00009e37      0f84eb000000   je 0x9f28
0x00009e3d      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00009e41      4c8b4510       mov r8, qword [rbp + 0x10]
0x00009e45      31db           xor ebx, ebx
0x00009e47      31c9           xor ecx, ecx
0x00009e49      31f6           xor esi, esi
0x00009e4b      eb21           jmp 0x9e6e
0x00009e4d      0f1f00         nop dword [rax]
0x00009e50      400f94c7       sete dil
0x00009e54      488954d8f8     mov qword [rax + rbx*8 - 8], rdx
0x00009e59      4883c601       add rsi, 1
0x00009e5d      400fb6ff       movzx edi, dil
0x00009e61      4801f9         add rcx, rdi
0x00009e64      4939f5         cmp r13, rsi
0x00009e67      7e67           jle 0x9ed0
0x00009e69      4939ce         cmp r14, rcx
0x00009e6c      7e7a           jle 0x9ee8
0x00009e6e      498b14f0       mov rdx, qword [r8 + rsi*8]
0x00009e72      498b3cc9       mov rdi, qword [r9 + rcx*8]
0x00009e76      4883c301       add rbx, 1
0x00009e7a      4839fa         cmp rdx, rdi
0x00009e7d      7ed1           jle 0x9e50
0x00009e7f      4883c101       add rcx, 1
0x00009e83      48897cd8f8     mov qword [rax + rbx*8 - 8], rdi
0x00009e88      ebda           jmp 0x9e64
0x00009e8a      660f1f440000   nop word [rax + rax]
0x00009e90      4d85ed         test r13, r13
0x00009e93      7f2e           jg 0x9ec3
0x00009e95      4885d2         test rdx, rdx
0x00009e98      7407           je 0x9ea1
0x00009e9a      48837a0800     cmp qword [rdx + 8], 0
0x00009e9f      7f1f           jg 0x9ec0
0x00009ea1      660fefc0       pxor xmm0, xmm0
0x00009ea5      48c747100000.  mov qword [rdi + 0x10], 0
0x00009ead      31c0           xor eax, eax
0x00009eaf      0f2907         movaps xmmword [rdi], xmm0
0x00009eb2      5b             pop rbx
0x00009eb3      5d             pop rbp
0x00009eb4      415c           pop r12
0x00009eb6      415d           pop r13
0x00009eb8      415e           pop r14
0x00009eba      c3             ret
0x00009ebb      0f1f440000     nop dword [rax + rax]
0x00009ec0      4889d6         mov rsi, rdx
0x00009ec3      5b             pop rbx
0x00009ec4      5d             pop rbp
0x00009ec5      415c           pop r12
0x00009ec7      415d           pop r13
0x00009ec9      415e           pop r14
0x00009ecb      e980feffff     jmp sym.re_node_set_init_copy
0x00009ed0      4939ce         cmp r14, rcx
0x00009ed3      7f33           jg 0x9f08
0x00009ed5      49895c2408     mov qword [r12 + 8], rbx
0x00009eda      31c0           xor eax, eax
0x00009edc      5b             pop rbx
0x00009edd      5d             pop rbp
0x00009ede      415c           pop r12
0x00009ee0      415d           pop r13
0x00009ee2      415e           pop r14
0x00009ee4      c3             ret
0x00009ee5      0f1f00         nop dword [rax]
0x00009ee8      4929f5         sub r13, rsi
0x00009eeb      488d3cd8       lea rdi, [rax + rbx*8]
0x00009eef      498d34f0       lea rsi, [r8 + rsi*8]
0x00009ef3      4a8d14ed0000.  lea rdx, [r13*8]
0x00009efb      4c01eb         add rbx, r13
0x00009efe      e8dd7cffff     call sym.imp.memcpy
0x00009f03      ebd0           jmp 0x9ed5
0x00009f05      0f1f00         nop dword [rax]
0x00009f08      4929ce         sub r14, rcx
0x00009f0b      488d3cd8       lea rdi, [rax + rbx*8]
0x00009f0f      498d34c9       lea rsi, [r9 + rcx*8]
0x00009f13      4a8d14f50000.  lea rdx, [r14*8]
0x00009f1b      4c01f3         add rbx, r14
0x00009f1e      e8bd7cffff     call sym.imp.memcpy
0x00009f23      ebb0           jmp 0x9ed5
0x00009f25      0f1f00         nop dword [rax]
0x00009f28      b80c000000     mov eax, 0xc
0x00009f2d      e980ffffff     jmp 0x9eb2
0x00009f32      0f1f4000       nop dword [rax]
0x00009f36      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_acquire_state_context:
0x00009f40      4157           push r15
0x00009f42      4156           push r14
0x00009f44      4155           push r13
0x00009f46      4154           push r12
0x00009f48      55             push rbp
0x00009f49      53             push rbx
0x00009f4a      4883ec28       sub rsp, 0x28
0x00009f4e      4c8b5208       mov r10, qword [rdx + 8]
0x00009f52      4d85d2         test r10, r10
0x00009f55      0f8484020000   je 0xa1df
0x00009f5b      4189c8         mov r8d, ecx
0x00009f5e      4d85d2         test r10, r10
0x00009f61      4f8d2410       lea r12, [r8 + r10]
0x00009f65      7e15           jle 0x9f7c
0x00009f67      488b4210       mov rax, qword [rdx + 0x10]
0x00009f6b      4e8d14d0       lea r10, [rax + r10*8]
0x00009f6f      90             nop
0x00009f70      4c0320         add r12, qword [rax]
0x00009f73      4883c008       add rax, 8
0x00009f77      4939c2         cmp r10, rax
0x00009f7a      75f4           jne 0x9f70
0x00009f7c      488b86880000.  mov rax, qword [rsi + 0x88]
0x00009f83      4889d5         mov rbp, rdx
0x00009f86      894c2404       mov dword [rsp + 4], ecx
0x00009f8a      4989f5         mov r13, rsi
0x00009f8d      48897c2418     mov qword [rsp + 0x18], rdi
0x00009f92      4c21e0         and rax, r12
0x00009f95      488d1440       lea rdx, [rax + rax*2]
0x00009f99      488b4640       mov rax, qword [rsi + 0x40]
0x00009f9d      488d04d0       lea rax, [rax + rdx*8]
0x00009fa1      4c8b18         mov r11, qword [rax]
0x00009fa4      4d85db         test r11, r11
0x00009fa7      7e57           jle 0xa000
0x00009fa9      488b5810       mov rbx, qword [rax + 0x10]
0x00009fad      4531d2         xor r10d, r10d
0x00009fb0      4189c9         mov r9d, ecx
0x00009fb3      eb0c           jmp 0x9fc1
0x00009fb5      0f1f00         nop dword [rax]
0x00009fb8      4983c201       add r10, 1
0x00009fbc      4d39da         cmp r10, r11
0x00009fbf      743f           je 0xa000
0x00009fc1      4e8b34d3       mov r14, qword [rbx + r10*8]
0x00009fc5      4d3926         cmp qword [r14], r12
0x00009fc8      75ee           jne 0x9fb8
0x00009fca      410fb64668     movzx eax, byte [r14 + 0x68]
0x00009fcf      83e00f         and eax, 0xf
0x00009fd2      4439c8         cmp eax, r9d
0x00009fd5      75e1           jne 0x9fb8
0x00009fd7      498b7e50       mov rdi, qword [r14 + 0x50]
0x00009fdb      4885ff         test rdi, rdi
0x00009fde      74d8           je 0x9fb8
0x00009fe0      4889ee         mov rsi, rbp
0x00009fe3      e8a8ebffff     call sym.re_node_set_compare.part.2
0x00009fe8      84c0           test al, al
0x00009fea      74cc           je 0x9fb8
0x00009fec      4883c428       add rsp, 0x28
0x00009ff0      4c89f0         mov rax, r14
0x00009ff3      5b             pop rbx
0x00009ff4      5d             pop rbp
0x00009ff5      415c           pop r12
0x00009ff7      415d           pop r13
0x00009ff9      415e           pop r14
0x00009ffb      415f           pop r15
0x00009ffd      c3             ret
0x00009ffe      6690           nop
0x0000a000      be01000000     mov esi, 1
0x0000a005      bf70000000     mov edi, 0x70                           ; 'p'
0x0000a00a      e8b17bffff     call sym.imp.calloc
0x0000a00f      4885c0         test rax, rax
0x0000a012      4989c6         mov r14, rax
0x0000a015      0f843b010000   je 0xa156
0x0000a01b      488d4008       lea rax, [rax + 8]
0x0000a01f      4889ee         mov rsi, rbp
0x0000a022      4889c7         mov rdi, rax
0x0000a025      4889c3         mov rbx, rax
0x0000a028      e823fdffff     call sym.re_node_set_init_copy
0x0000a02d      85c0           test eax, eax
0x0000a02f      0f85b8010000   jne 0xa1ed
0x0000a035      410fb64668     movzx eax, byte [r14 + 0x68]
0x0000a03a      0fb6542404     movzx edx, byte [rsp + 4]
0x0000a03f      49895e50       mov qword [r14 + 0x50], rbx
0x0000a043      83e20f         and edx, 0xf
0x0000a046      83e0f0         and eax, 0xfffffff0                     ; 4294967280
0x0000a049      09d0           or eax, edx
0x0000a04b      48837d0800     cmp qword [rbp + 8], 0
0x0000a050      41884668       mov byte [r14 + 0x68], al
0x0000a054      0f8ede000000   jle 0xa138
0x0000a05a      498d4e18       lea rcx, [r14 + 0x18]
0x0000a05e      4531ff         xor r15d, r15d
0x0000a061      4c89642410     mov qword [rsp + 0x10], r12
0x0000a066      4531d2         xor r10d, r10d
0x0000a069      4d89ec         mov r12, r13
0x0000a06c      4d89fd         mov r13, r15
0x0000a06f      48894c2408     mov qword [rsp + 8], rcx
0x0000a074      4989df         mov r15, rbx
0x0000a077      660f1f840000.  nop word [rax + rax]
0x0000a080      488b4510       mov rax, qword [rbp + 0x10]
0x0000a084      4a8b04e8       mov rax, qword [rax + r13*8]
0x0000a088      48c1e004       shl rax, 4
0x0000a08c      49030424       add rax, qword [r12]
0x0000a090      0fb67008       movzx esi, byte [rax + 8]
0x0000a094      8b5808         mov ebx, dword [rax + 8]
0x0000a097      c1eb08         shr ebx, 8
0x0000a09a      6681e3ff03     and bx, 0x3ff
0x0000a09f      83fe01         cmp esi, 1
0x0000a0a2      0fb7fb         movzx edi, bx
0x0000a0a5      7504           jne 0xa0ab
0x0000a0a7      85ff           test edi, edi
0x0000a0a9      7477           je 0xa122
0x0000a0ab      410fb65668     movzx edx, byte [r14 + 0x68]
0x0000a0b0      0fb6400a       movzx eax, byte [rax + 0xa]
0x0000a0b4      4189d1         mov r9d, edx
0x0000a0b7      c0e804         shr al, 4
0x0000a0ba      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000a0bd      41c0e905       shr r9b, 5
0x0000a0c1      4409c8         or eax, r9d
0x0000a0c4      83e001         and eax, 1
0x0000a0c7      c1e005         shl eax, 5
0x0000a0ca      09d0           or eax, edx
0x0000a0cc      83fe02         cmp esi, 2
0x0000a0cf      41884668       mov byte [r14 + 0x68], al
0x0000a0d3      0f84c7000000   je 0xa1a0
0x0000a0d9      83fe04         cmp esi, 4
0x0000a0dc      7507           jne 0xa0e5
0x0000a0de      83c840         or eax, 0x40                            ; segment.PHDR
0x0000a0e1      41884668       mov byte [r14 + 0x68], al
0x0000a0e5      85ff           test edi, edi
0x0000a0e7      7439           je 0xa122
0x0000a0e9      4d3b7e50       cmp r15, qword [r14 + 0x50]
0x0000a0ed      0f84bd000000   je 0xa1b0
0x0000a0f3      f6c301         test bl, 1
0x0000a0f6      7478           je 0xa170
0x0000a0f8      f644240401     test byte [rsp + 4], 1
0x0000a0fd      7409           je 0xa108
0x0000a0ff      f6c302         test bl, 2
0x0000a102      7478           je 0xa17c
0x0000a104      0f1f4000       nop dword [rax]
0x0000a108      4c89ea         mov rdx, r13
0x0000a10b      4c29d2         sub rdx, r10
0x0000a10e      780e           js 0xa11e
0x0000a110      488b742408     mov rsi, qword [rsp + 8]
0x0000a115      498d7e10       lea rdi, [r14 + 0x10]
0x0000a119      e852ecffff     call sym.re_node_set_remove_at.isra.4.part.5
0x0000a11e      4983c201       add r10, 1
0x0000a122      4983c501       add r13, 1
0x0000a126      4c3b6d08       cmp r13, qword [rbp + 8]
0x0000a12a      0f8c50ffffff   jl 0xa080
0x0000a130      4d89e5         mov r13, r12
0x0000a133      4c8b642410     mov r12, qword [rsp + 0x10]
0x0000a138      4c89e2         mov rdx, r12
0x0000a13b      4c89f6         mov rsi, r14
0x0000a13e      4c89ef         mov rdi, r13
0x0000a141      e89ad6ffff     call sym.register_state
0x0000a146      85c0           test eax, eax
0x0000a148      0f849efeffff   je 0x9fec
0x0000a14e      4c89f7         mov rdi, r14
0x0000a151      e82ae7ffff     call sym.free_state
0x0000a156      488b442418     mov rax, qword [rsp + 0x18]
0x0000a15b      4531f6         xor r14d, r14d
0x0000a15e      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000a164      e983feffff     jmp 0x9fec
0x0000a169      0f1f80000000.  nop dword [rax]
0x0000a170      f6c302         test bl, 2
0x0000a173      7407           je 0xa17c
0x0000a175      f644240401     test byte [rsp + 4], 1
0x0000a17a      758c           jne 0xa108
0x0000a17c      f6c310         test bl, 0x10
0x0000a17f      7407           je 0xa188
0x0000a181      f644240402     test byte [rsp + 4], 2
0x0000a186      7480           je 0xa108
0x0000a188      83e340         and ebx, 0x40                           ; segment.PHDR
0x0000a18b      7495           je 0xa122
0x0000a18d      f644240404     test byte [rsp + 4], 4
0x0000a192      758e           jne 0xa122
0x0000a194      e96fffffff     jmp 0xa108
0x0000a199      0f1f80000000.  nop dword [rax]
0x0000a1a0      83c810         or eax, 0x10
0x0000a1a3      41884668       mov byte [r14 + 0x68], al
0x0000a1a7      e939ffffff     jmp 0xa0e5
0x0000a1ac      0f1f4000       nop dword [rax]
0x0000a1b0      bf18000000     mov edi, 0x18
0x0000a1b5      e8667affff     call sym.imp.malloc
0x0000a1ba      4885c0         test rax, rax
0x0000a1bd      49894650       mov qword [r14 + 0x50], rax
0x0000a1c1      748b           je 0xa14e
0x0000a1c3      4889ee         mov rsi, rbp
0x0000a1c6      4889c7         mov rdi, rax
0x0000a1c9      e882fbffff     call sym.re_node_set_init_copy
0x0000a1ce      85c0           test eax, eax
0x0000a1d0      7584           jne 0xa156
0x0000a1d2      41804e6880     or byte [r14 + 0x68], 0x80              ; [0x80:1]=56
0x0000a1d7      4531d2         xor r10d, r10d
0x0000a1da      e914ffffff     jmp 0xa0f3
0x0000a1df      c70700000000   mov dword [rdi], 0
0x0000a1e5      4531f6         xor r14d, r14d
0x0000a1e8      e9fffdffff     jmp 0x9fec
0x0000a1ed      4c89f7         mov rdi, r14
0x0000a1f0      e8db77ffff     call sym.imp.free
0x0000a1f5      e95cffffff     jmp 0xa156
0x0000a1fa      660f1f440000   nop word [rax + rax]
;-- re_acquire_state:
0x0000a200      4157           push r15
0x0000a202      4156           push r14
0x0000a204      4155           push r13
0x0000a206      4154           push r12
0x0000a208      55             push rbp
0x0000a209      53             push rbx
0x0000a20a      4883ec08       sub rsp, 8
0x0000a20e      488b6a08       mov rbp, qword [rdx + 8]
0x0000a212      4885ed         test rbp, rbp
0x0000a215      0f84d5010000   je 0xa3f0
0x0000a21b      4885ed         test rbp, rbp
0x0000a21e      7e1c           jle 0xa23c
0x0000a220      488b4210       mov rax, qword [rdx + 0x10]
0x0000a224      488d0ce8       lea rcx, [rax + rbp*8]
0x0000a228      0f1f84000000.  nop dword [rax + rax]
0x0000a230      480328         add rbp, qword [rax]
0x0000a233      4883c008       add rax, 8
0x0000a237      4839c1         cmp rcx, rax
0x0000a23a      75f4           jne 0xa230
0x0000a23c      488b86880000.  mov rax, qword [rsi + 0x88]
0x0000a243      4989d6         mov r14, rdx
0x0000a246      4989f4         mov r12, rsi
0x0000a249      4989fd         mov r13, rdi
0x0000a24c      4821e8         and rax, rbp
0x0000a24f      488d1440       lea rdx, [rax + rax*2]
0x0000a253      488b4640       mov rax, qword [rsi + 0x40]
0x0000a257      488d04d0       lea rax, [rax + rdx*8]
0x0000a25b      4c8b10         mov r10, qword [rax]
0x0000a25e      4d85d2         test r10, r10
0x0000a261      7e33           jle 0xa296
0x0000a263      4c8b5810       mov r11, qword [rax + 0x10]
0x0000a267      4531c9         xor r9d, r9d
0x0000a26a      660f1f440000   nop word [rax + rax]
0x0000a270      4b8b1ccb       mov rbx, qword [r11 + r9*8]
0x0000a274      48392b         cmp qword [rbx], rbp
0x0000a277      7514           jne 0xa28d
0x0000a279      488d7b08       lea rdi, [rbx + 8]
0x0000a27d      4c89f6         mov rsi, r14
0x0000a280      e80be9ffff     call sym.re_node_set_compare.part.2
0x0000a285      84c0           test al, al
0x0000a287      0f8502010000   jne 0xa38f
0x0000a28d      4983c101       add r9, 1
0x0000a291      4d39ca         cmp r10, r9
0x0000a294      75da           jne 0xa270
0x0000a296      be01000000     mov esi, 1
0x0000a29b      bf70000000     mov edi, 0x70                           ; 'p'
0x0000a2a0      e81b79ffff     call sym.imp.calloc
0x0000a2a5      4885c0         test rax, rax
0x0000a2a8      4889c3         mov rbx, rax
0x0000a2ab      0f8427010000   je 0xa3d8
0x0000a2b1      4c8d7808       lea r15, [rax + 8]
0x0000a2b5      4c89f6         mov rsi, r14
0x0000a2b8      4c89ff         mov rdi, r15
0x0000a2bb      e890faffff     call sym.re_node_set_init_copy
0x0000a2c0      85c0           test eax, eax
0x0000a2c2      0f8508010000   jne 0xa3d0
0x0000a2c8      498b4608       mov rax, qword [r14 + 8]
0x0000a2cc      4c897b50       mov qword [rbx + 0x50], r15
0x0000a2d0      4885c0         test rax, rax
0x0000a2d3      0f8ea4000000   jle 0xa37d
0x0000a2d9      498b7610       mov rsi, qword [r14 + 0x10]
0x0000a2dd      4d8b0424       mov r8, qword [r12]
0x0000a2e1      4c8d0cc6       lea r9, [rsi + rax*8]
0x0000a2e5      eb4d           jmp 0xa334
0x0000a2e7      660f1f840000.  nop word [rax + rax]
0x0000a2f0      0fb64b68       movzx ecx, byte [rbx + 0x68]
0x0000a2f4      0fb6500a       movzx edx, byte [rax + 0xa]
0x0000a2f8      4189ca         mov r10d, ecx
0x0000a2fb      c0ea04         shr dl, 4
0x0000a2fe      83e1df         and ecx, 0xffffffdf                     ; 4294967263
0x0000a301      41c0ea05       shr r10b, 5
0x0000a305      4409d2         or edx, r10d
0x0000a308      83e201         and edx, 1
0x0000a30b      c1e205         shl edx, 5
0x0000a30e      09ca           or edx, ecx
0x0000a310      83ff02         cmp edi, 2
0x0000a313      885368         mov byte [rbx + 0x68], dl
0x0000a316      0f848c000000   je 0xa3a8
0x0000a31c      83ff04         cmp edi, 4
0x0000a31f      0f8593000000   jne 0xa3b8
0x0000a325      83ca40         or edx, 0x40                            ; segment.PHDR
0x0000a328      885368         mov byte [rbx + 0x68], dl
0x0000a32b      4883c608       add rsi, 8
0x0000a32f      4939f1         cmp r9, rsi
0x0000a332      7449           je 0xa37d
0x0000a334      488b06         mov rax, qword [rsi]
0x0000a337      48c1e004       shl rax, 4
0x0000a33b      4c01c0         add rax, r8
0x0000a33e      0fb67808       movzx edi, byte [rax + 8]
0x0000a342      83ff01         cmp edi, 1
0x0000a345      75a9           jne 0xa2f0
0x0000a347      f7400800ff03.  test dword [rax + 8], 0x3ff00
0x0000a34e      74db           je 0xa32b
0x0000a350      0fb65368       movzx edx, byte [rbx + 0x68]
0x0000a354      0fb6400a       movzx eax, byte [rax + 0xa]
0x0000a358      89d1           mov ecx, edx
0x0000a35a      c0e804         shr al, 4
0x0000a35d      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000a360      c0e905         shr cl, 5
0x0000a363      09c8           or eax, ecx
0x0000a365      83e001         and eax, 1
0x0000a368      c1e005         shl eax, 5
0x0000a36b      09d0           or eax, edx
0x0000a36d      884368         mov byte [rbx + 0x68], al
0x0000a370      4883c608       add rsi, 8
0x0000a374      804b6880       or byte [rbx + 0x68], 0x80              ; [0x80:1]=56
0x0000a378      4939f1         cmp r9, rsi
0x0000a37b      75b7           jne 0xa334
0x0000a37d      4889ea         mov rdx, rbp
0x0000a380      4889de         mov rsi, rbx
0x0000a383      4c89e7         mov rdi, r12
0x0000a386      e855d4ffff     call sym.register_state
0x0000a38b      85c0           test eax, eax
0x0000a38d      7555           jne 0xa3e4
0x0000a38f      4883c408       add rsp, 8
0x0000a393      4889d8         mov rax, rbx
0x0000a396      5b             pop rbx
0x0000a397      5d             pop rbp
0x0000a398      415c           pop r12
0x0000a39a      415d           pop r13
0x0000a39c      415e           pop r14
0x0000a39e      415f           pop r15
0x0000a3a0      c3             ret
0x0000a3a1      0f1f80000000.  nop dword [rax]
0x0000a3a8      83ca10         or edx, 0x10
0x0000a3ab      885368         mov byte [rbx + 0x68], dl
0x0000a3ae      e978ffffff     jmp 0xa32b
0x0000a3b3      0f1f440000     nop dword [rax + rax]
0x0000a3b8      83ff0c         cmp edi, 0xc
0x0000a3bb      74b3           je 0xa370
0x0000a3bd      f7400800ff03.  test dword [rax + 8], 0x3ff00
0x0000a3c4      0f8461ffffff   je 0xa32b
0x0000a3ca      eba4           jmp 0xa370
0x0000a3cc      0f1f4000       nop dword [rax]
0x0000a3d0      4889df         mov rdi, rbx
0x0000a3d3      e8f875ffff     call sym.imp.free
0x0000a3d8      41c745000c00.  mov dword [r13], 0xc                    ; [0xc:4]=0
0x0000a3e0      31db           xor ebx, ebx
0x0000a3e2      ebab           jmp 0xa38f
0x0000a3e4      4889df         mov rdi, rbx
0x0000a3e7      e894e4ffff     call sym.free_state
0x0000a3ec      ebea           jmp 0xa3d8
0x0000a3ee      6690           nop
0x0000a3f0      c70700000000   mov dword [rdi], 0
0x0000a3f6      31db           xor ebx, ebx
0x0000a3f8      eb95           jmp 0xa38f
0x0000a3fa      660f1f440000   nop word [rax + rax]
;-- merge_state_array:
0x0000a400      4157           push r15
0x0000a402      4156           push r14
0x0000a404      4155           push r13
0x0000a406      4154           push r12
0x0000a408      55             push rbp
0x0000a409      53             push rbx
0x0000a40a      4883ec48       sub rsp, 0x48
0x0000a40e      64488b042528.  mov rax, qword fs:[0x28]
0x0000a417      4889442438     mov qword [rsp + 0x38], rax
0x0000a41c      31c0           xor eax, eax
0x0000a41e      4885c9         test rcx, rcx
0x0000a421      0f8e8f000000   jle 0xa4b6
0x0000a427      488d44241c     lea rax, [rsp + 0x1c]
0x0000a42c      4989fe         mov r14, rdi
0x0000a42f      4889f3         mov rbx, rsi
0x0000a432      4989d4         mov r12, rdx
0x0000a435      4889cd         mov rbp, rcx
0x0000a438      4531ff         xor r15d, r15d
0x0000a43b      4c8d6c2420     lea r13, [rsp + 0x20]
0x0000a440      4889442408     mov qword [rsp + 8], rax
0x0000a445      eb55           jmp 0xa49c
0x0000a447      660f1f840000.  nop word [rax + rax]
0x0000a450      4885d2         test rdx, rdx
0x0000a453      743e           je 0xa493
0x0000a455      4883c208       add rdx, 8
0x0000a459      4883c608       add rsi, 8
0x0000a45d      4c89ef         mov rdi, r13
0x0000a460      e87bf9ffff     call sym.re_node_set_init_union
0x0000a465      85c0           test eax, eax
0x0000a467      8944241c       mov dword [rsp + 0x1c], eax
0x0000a46b      754b           jne 0xa4b8
0x0000a46d      488b7c2408     mov rdi, qword [rsp + 8]
0x0000a472      4c89ea         mov rdx, r13
0x0000a475      4c89f6         mov rsi, r14
0x0000a478      e883fdffff     call sym.re_acquire_state
0x0000a47d      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000a482      4a8904fb       mov qword [rbx + r15*8], rax
0x0000a486      e84575ffff     call sym.imp.free
0x0000a48b      8b44241c       mov eax, dword [rsp + 0x1c]
0x0000a48f      85c0           test eax, eax
0x0000a491      7525           jne 0xa4b8
0x0000a493      4983c701       add r15, 1
0x0000a497      4c39fd         cmp rbp, r15
0x0000a49a      741a           je 0xa4b6
0x0000a49c      4a8b34fb       mov rsi, qword [rbx + r15*8]
0x0000a4a0      4b8b14fc       mov rdx, qword [r12 + r15*8]
0x0000a4a4      4885f6         test rsi, rsi
0x0000a4a7      75a7           jne 0xa450
0x0000a4a9      4a8914fb       mov qword [rbx + r15*8], rdx
0x0000a4ad      4983c701       add r15, 1
0x0000a4b1      4c39fd         cmp rbp, r15
0x0000a4b4      75e6           jne 0xa49c
0x0000a4b6      31c0           xor eax, eax
0x0000a4b8      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000a4bd      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000a4c6      750f           jne 0xa4d7
0x0000a4c8      4883c448       add rsp, 0x48
0x0000a4cc      5b             pop rbx
0x0000a4cd      5d             pop rbp
0x0000a4ce      415c           pop r12
0x0000a4d0      415d           pop r13
0x0000a4d2      415e           pop r14
0x0000a4d4      415f           pop r15
0x0000a4d6      c3             ret
0x0000a4d7      e8f475ffff     call sym.imp.__stack_chk_fail
0x0000a4dc      0f1f4000       nop dword [rax]
;-- expand_bkref_cache:
0x0000a4e0      4157           push r15
0x0000a4e2      4156           push r14
0x0000a4e4      4155           push r13
0x0000a4e6      4154           push r12
0x0000a4e8      4989d4         mov r12, rdx
0x0000a4eb      55             push rbp
0x0000a4ec      53             push rbx
0x0000a4ed      4889fb         mov rbx, rdi
0x0000a4f0      4889f5         mov rbp, rsi
0x0000a4f3      31f6           xor esi, esi
0x0000a4f5      4883ec78       sub rsp, 0x78
0x0000a4f9      488bbfc80000.  mov rdi, qword [rdi + 0xc8]
0x0000a500      64488b042528.  mov rax, qword fs:[0x28]
0x0000a509      4889442468     mov qword [rsp + 0x68], rax
0x0000a50e      31c0           xor eax, eax
0x0000a510      48894c2420     mov qword [rsp + 0x20], rcx
0x0000a515      448944242c     mov dword [rsp + 0x2c], r8d
0x0000a51a      4889fa         mov rdx, rdi
0x0000a51d      4839d6         cmp rsi, rdx
0x0000a520      7d55           jge 0xa577
0x0000a522      488d0416       lea rax, [rsi + rdx]
0x0000a526      4c8b83d80000.  mov r8, qword [rbx + 0xd8]
0x0000a52d      4889c1         mov rcx, rax
0x0000a530      48c1e93f       shr rcx, 0x3f
0x0000a534      4801c1         add rcx, rax
0x0000a537      48d1f9         sar rcx, 1
0x0000a53a      488d0489       lea rax, [rcx + rcx*4]
0x0000a53e      4d3b64c008     cmp r12, qword [r8 + rax*8 + 8]
0x0000a543      7e2d           jle 0xa572
0x0000a545      e97e000000     jmp 0xa5c8
0x0000a54a      660f1f440000   nop word [rax + rax]
0x0000a550      488d140e       lea rdx, [rsi + rcx]
0x0000a554      4889d0         mov rax, rdx
0x0000a557      48c1e83f       shr rax, 0x3f
0x0000a55b      4801d0         add rax, rdx
0x0000a55e      48d1f8         sar rax, 1
0x0000a561      488d1480       lea rdx, [rax + rax*4]
0x0000a565      4989c1         mov r9, rax
0x0000a568      4d3b64d008     cmp r12, qword [r8 + rdx*8 + 8]
0x0000a56d      7f61           jg 0xa5d0
0x0000a56f      4889c1         mov rcx, rax
0x0000a572      4839ce         cmp rsi, rcx
0x0000a575      7cd9           jl 0xa550
0x0000a577      4839f7         cmp rdi, rsi
0x0000a57a      7e21           jle 0xa59d
0x0000a57c      488b8bd80000.  mov rcx, qword [rbx + 0xd8]
0x0000a583      488d04b6       lea rax, [rsi + rsi*4]
0x0000a587      48c1e003       shl rax, 3
0x0000a58b      4c39640108     cmp qword [rcx + rax + 8], r12
0x0000a590      4889442430     mov qword [rsp + 0x30], rax
0x0000a595      7506           jne 0xa59d
0x0000a597      4883feff       cmp rsi, 0xffffffffffffffff
0x0000a59b      7543           jne 0xa5e0
0x0000a59d      31c0           xor eax, eax
0x0000a59f      488b5c2468     mov rbx, qword [rsp + 0x68]
0x0000a5a4      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000a5ad      0f85c6020000   jne 0xa879
0x0000a5b3      4883c478       add rsp, 0x78
0x0000a5b7      5b             pop rbx
0x0000a5b8      5d             pop rbp
0x0000a5b9      415c           pop r12
0x0000a5bb      415d           pop r13
0x0000a5bd      415e           pop r14
0x0000a5bf      415f           pop r15
0x0000a5c1      c3             ret
0x0000a5c2      660f1f440000   nop word [rax + rax]
0x0000a5c8      4989c9         mov r9, rcx
0x0000a5cb      4889d1         mov rcx, rdx
0x0000a5ce      6690           nop
0x0000a5d0      498d7101       lea rsi, [r9 + 1]
0x0000a5d4      4889ca         mov rdx, rcx
0x0000a5d7      e941ffffff     jmp 0xa51d
0x0000a5dc      0f1f4000       nop dword [rax]
0x0000a5e0      488d4510       lea rax, [rbp + 0x10]
0x0000a5e4      4c8bab980000.  mov r13, qword [rbx + 0x98]
0x0000a5eb      48890424       mov qword [rsp], rax
0x0000a5ef      488d44244c     lea rax, [rsp + 0x4c]
0x0000a5f4      4889442438     mov qword [rsp + 0x38], rax
0x0000a5f9      488d442450     lea rax, [rsp + 0x50]
0x0000a5fe      4889442410     mov qword [rsp + 0x10], rax
0x0000a603      488b442430     mov rax, qword [rsp + 0x30]
0x0000a608      4c8d3c01       lea r15, [rcx + rax]
0x0000a60c      e9d7000000     jmp 0xa6e8
0x0000a611      0f1f80000000.  nop dword [rax]
0x0000a618      498b4518       mov rax, qword [r13 + 0x18]
0x0000a61c      4a8b0cd0       mov rcx, qword [rax + r10*8]
0x0000a620      4c8b93b80000.  mov r10, qword [rbx + 0xb8]
0x0000a627      4a8d04f50000.  lea rax, [r14*8]
0x0000a62f      4889442418     mov qword [rsp + 0x18], rax
0x0000a634      4901c2         add r10, rax
0x0000a637      48894c2408     mov qword [rsp + 8], rcx
0x0000a63c      4d8b0a         mov r9, qword [r10]
0x0000a63f      4d85c9         test r9, r9
0x0000a642      0f8488010000   je 0xa7d0
0x0000a648      498b7910       mov rdi, qword [r9 + 0x10]
0x0000a64c      498d7118       lea rsi, [r9 + 0x18]
0x0000a650      4889ca         mov rdx, rcx
0x0000a653      e898e5ffff     call sym.re_node_set_contains.isra.3
0x0000a658      4885c0         test rax, rax
0x0000a65b      757c           jne 0xa6d9
0x0000a65d      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000a662      498d7108       lea rsi, [r9 + 8]
0x0000a666      e8e5f6ffff     call sym.re_node_set_init_copy
0x0000a66b      488b742408     mov rsi, qword [rsp + 8]
0x0000a670      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000a675      8944244c       mov dword [rsp + 0x4c], eax
0x0000a679      e832d0ffff     call sym.re_node_set_insert
0x0000a67e      8b54244c       mov edx, dword [rsp + 0x4c]
0x0000a682      85d2           test edx, edx
0x0000a684      0f859c010000   jne 0xa826
0x0000a68a      3c01           cmp al, 1
0x0000a68c      0f8594010000   jne 0xa826
0x0000a692      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000a697      4c0393b80000.  add r10, qword [rbx + 0xb8]
0x0000a69e      488b542410     mov rdx, qword [rsp + 0x10]
0x0000a6a3      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000a6a8      4c89ee         mov rsi, r13
0x0000a6ab      4c89542408     mov qword [rsp + 8], r10
0x0000a6b0      e84bfbffff     call sym.re_acquire_state
0x0000a6b5      4c8b542408     mov r10, qword [rsp + 8]
0x0000a6ba      488b7c2460     mov rdi, qword [rsp + 0x60]
0x0000a6bf      498902         mov qword [r10], rax
0x0000a6c2      e80973ffff     call sym.imp.free
0x0000a6c7      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x0000a6ce      4a833cf000     cmp qword [rax + r14*8], 0
0x0000a6d3      0f843c010000   je 0xa815
0x0000a6d9      4983c728       add r15, 0x28
0x0000a6dd      41807ff800     cmp byte [r15 - 8], 0
0x0000a6e2      0f84b5feffff   je 0xa59d
0x0000a6e8      4d8b17         mov r10, qword [r15]
0x0000a6eb      4c8b4d08       mov r9, qword [rbp + 8]
0x0000a6ef      488b3424       mov rsi, qword [rsp]
0x0000a6f3      4c89d2         mov rdx, r10
0x0000a6f6      4c89cf         mov rdi, r9
0x0000a6f9      e8f2e4ffff     call sym.re_node_set_contains.isra.3
0x0000a6fe      4885c0         test rax, rax
0x0000a701      74d6           je 0xa6d9
0x0000a703      4d8b4718       mov r8, qword [r15 + 0x18]
0x0000a707      4d01e0         add r8, r12
0x0000a70a      4d89c6         mov r14, r8
0x0000a70d      4d2b7710       sub r14, qword [r15 + 0x10]
0x0000a711      4d39f4         cmp r12, r14
0x0000a714      0f85fefeffff   jne 0xa618
0x0000a71a      498b4d28       mov rcx, qword [r13 + 0x28]
0x0000a71e      4b8d0452       lea rax, [r10 + r10*2]
0x0000a722      488b3424       mov rsi, qword [rsp]
0x0000a726      4c89cf         mov rdi, r9
0x0000a729      488d04c1       lea rax, [rcx + rax*8]
0x0000a72d      488b4010       mov rax, qword [rax + 0x10]
0x0000a731      4c8b30         mov r14, qword [rax]
0x0000a734      4c89f2         mov rdx, r14
0x0000a737      e8b4e4ffff     call sym.re_node_set_contains.isra.3
0x0000a73c      4885c0         test rax, rax
0x0000a73f      7598           jne 0xa6d9
0x0000a741      bf08000000     mov edi, 8
0x0000a746      48c744245001.  mov qword [rsp + 0x50], 1
0x0000a74f      48c744245801.  mov qword [rsp + 0x58], 1
0x0000a758      e8c374ffff     call sym.imp.malloc
0x0000a75d      4885c0         test rax, rax
0x0000a760      4889442460     mov qword [rsp + 0x60], rax
0x0000a765      0f84f2000000   je 0xa85d
0x0000a76b      4c8930         mov qword [rax], r14
0x0000a76e      31c0           xor eax, eax
0x0000a770      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x0000a775      488b542420     mov rdx, qword [rsp + 0x20]
0x0000a77a      4c89ef         mov rdi, r13
0x0000a77d      8b4c242c       mov ecx, dword [rsp + 0x2c]
0x0000a781      8944244c       mov dword [rsp + 0x4c], eax
0x0000a785      4c89fe         mov rsi, r15
0x0000a788      e813eeffff     call sym.check_arrival_expand_ecl
0x0000a78d      4c89fe         mov rsi, r15
0x0000a790      4889ef         mov rdi, rbp
0x0000a793      4189c6         mov r14d, eax
0x0000a796      e875e9ffff     call sym.re_node_set_merge
0x0000a79b      488b7c2460     mov rdi, qword [rsp + 0x60]
0x0000a7a0      4189c7         mov r15d, eax
0x0000a7a3      e82872ffff     call sym.imp.free
0x0000a7a8      8b44244c       mov eax, dword [rsp + 0x4c]
0x0000a7ac      4489f2         mov edx, r14d
0x0000a7af      4409fa         or edx, r15d
0x0000a7b2      09c2           or edx, eax
0x0000a7b4      0f858c000000   jne 0xa846
0x0000a7ba      488b8bd80000.  mov rcx, qword [rbx + 0xd8]
0x0000a7c1      e93dfeffff     jmp 0xa603
0x0000a7c6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a7d0      bf08000000     mov edi, 8
0x0000a7d5      4c89542418     mov qword [rsp + 0x18], r10
0x0000a7da      48c744245001.  mov qword [rsp + 0x50], 1
0x0000a7e3      48c744245801.  mov qword [rsp + 0x58], 1
0x0000a7ec      e82f74ffff     call sym.imp.malloc
0x0000a7f1      4885c0         test rax, rax
0x0000a7f4      4889442460     mov qword [rsp + 0x60], rax
0x0000a7f9      7441           je 0xa83c
0x0000a7fb      488b7c2408     mov rdi, qword [rsp + 8]
0x0000a800      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0000a808      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000a80d      488938         mov qword [rax], rdi
0x0000a810      e989feffff     jmp 0xa69e
0x0000a815      8b44244c       mov eax, dword [rsp + 0x4c]
0x0000a819      85c0           test eax, eax
0x0000a81b      0f84b8feffff   je 0xa6d9
0x0000a821      e979fdffff     jmp 0xa59f
0x0000a826      488b7c2460     mov rdi, qword [rsp + 0x60]
0x0000a82b      e8a071ffff     call sym.imp.free
0x0000a830      8b44244c       mov eax, dword [rsp + 0x4c]
0x0000a834      85c0           test eax, eax
0x0000a836      0f8563fdffff   jne 0xa59f
0x0000a83c      b80c000000     mov eax, 0xc
0x0000a841      e959fdffff     jmp 0xa59f
0x0000a846      85c0           test eax, eax
0x0000a848      0f8551fdffff   jne 0xa59f
0x0000a84e      4585f6         test r14d, r14d
0x0000a851      4489f0         mov eax, r14d
0x0000a854      410f44c7       cmove eax, r15d
0x0000a858      e942fdffff     jmp 0xa59f
0x0000a85d      48c744245800.  mov qword [rsp + 0x58], 0
0x0000a866      48c744245000.  mov qword [rsp + 0x50], 0
0x0000a86f      b80c000000     mov eax, 0xc
0x0000a874      e9f7feffff     jmp 0xa770
0x0000a879      e85272ffff     call sym.imp.__stack_chk_fail
0x0000a87e      6690           nop
;-- check_subexp_matching_top.isra.18:
0x0000a880      4157           push r15
0x0000a882      4156           push r14
0x0000a884      4155           push r13
0x0000a886      4154           push r12
0x0000a888      55             push rbp
0x0000a889      53             push rbx
0x0000a88a      4883ec28       sub rsp, 0x28
0x0000a88e      48833e00       cmp qword [rsi], 0
0x0000a892      4c8baf980000.  mov r13, qword [rdi + 0x98]
0x0000a899      0f8ec1000000   jle 0xa960
0x0000a89f      4989d6         mov r14, rdx
0x0000a8a2      4989f4         mov r12, rsi
0x0000a8a5      4989ff         mov r15, rdi
0x0000a8a8      31db           xor ebx, ebx
0x0000a8aa      eb12           jmp 0xa8be
0x0000a8ac      0f1f4000       nop dword [rax]
0x0000a8b0      4883c301       add rbx, 1
0x0000a8b4      493b1c24       cmp rbx, qword [r12]
0x0000a8b8      0f8da2000000   jge 0xa960
0x0000a8be      498b06         mov rax, qword [r14]
0x0000a8c1      488b2cd8       mov rbp, qword [rax + rbx*8]
0x0000a8c5      4889e8         mov rax, rbp
0x0000a8c8      48c1e004       shl rax, 4
0x0000a8cc      49034500       add rax, qword [r13]
0x0000a8d0      80780808       cmp byte [rax + 8], 8
0x0000a8d4      75da           jne 0xa8b0
0x0000a8d6      488b00         mov rax, qword [rax]
0x0000a8d9      4883f83f       cmp rax, 0x3f
0x0000a8dd      7fd1           jg 0xa8b0
0x0000a8df      498bb5a00000.  mov rsi, qword [r13 + 0xa0]
0x0000a8e6      480fa3c6       bt rsi, rax
0x0000a8ea      73c4           jae 0xa8b0
0x0000a8ec      4d8b87e80000.  mov r8, qword [r15 + 0xe8]
0x0000a8f3      4d3b87f00000.  cmp r8, qword [r15 + 0xf0]
0x0000a8fa      4d8b8ff80000.  mov r9, qword [r15 + 0xf8]
0x0000a901      7475           je 0xa978
0x0000a903      be30000000     mov esi, 0x30                           ; '0'
0x0000a908      bf01000000     mov edi, 1
0x0000a90d      4c894c2410     mov qword [rsp + 0x10], r9
0x0000a912      4c89442408     mov qword [rsp + 8], r8
0x0000a917      48894c2418     mov qword [rsp + 0x18], rcx
0x0000a91c      e89f72ffff     call sym.imp.calloc
0x0000a921      4c8b442408     mov r8, qword [rsp + 8]
0x0000a926      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x0000a92b      4885c0         test rax, rax
0x0000a92e      4b8904c1       mov qword [r9 + r8*8], rax
0x0000a932      743d           je 0xa971
0x0000a934      4983c001       add r8, 1
0x0000a938      4883c301       add rbx, 1
0x0000a93c      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000a941      4d8987e80000.  mov qword [r15 + 0xe8], r8
0x0000a948      493b1c24       cmp rbx, qword [r12]
0x0000a94c      48896808       mov qword [rax + 8], rbp
0x0000a950      488908         mov qword [rax], rcx
0x0000a953      0f8c65ffffff   jl 0xa8be
0x0000a959      0f1f80000000.  nop dword [rax]
0x0000a960      31c0           xor eax, eax
0x0000a962      4883c428       add rsp, 0x28
0x0000a966      5b             pop rbx
0x0000a967      5d             pop rbp
0x0000a968      415c           pop r12
0x0000a96a      415d           pop r13
0x0000a96c      415e           pop r14
0x0000a96e      415f           pop r15
0x0000a970      c3             ret
0x0000a971      b80c000000     mov eax, 0xc
0x0000a976      ebea           jmp 0xa962
0x0000a978      4b8d0400       lea rax, [r8 + r8]
0x0000a97c      4c89c6         mov rsi, r8
0x0000a97f      4c89cf         mov rdi, r9
0x0000a982      48c1e604       shl rsi, 4
0x0000a986      48894c2408     mov qword [rsp + 8], rcx
0x0000a98b      4889442410     mov qword [rsp + 0x10], rax
0x0000a990      e8fb72ffff     call sym.imp.realloc
0x0000a995      4885c0         test rax, rax
0x0000a998      4989c1         mov r9, rax
0x0000a99b      488b4c2408     mov rcx, qword [rsp + 8]
0x0000a9a0      74cf           je 0xa971
0x0000a9a2      498987f80000.  mov qword [r15 + 0xf8], rax
0x0000a9a9      488b442410     mov rax, qword [rsp + 0x10]
0x0000a9ae      4d8b87e80000.  mov r8, qword [r15 + 0xe8]
0x0000a9b5      498987f00000.  mov qword [r15 + 0xf0], rax
0x0000a9bc      e942ffffff     jmp 0xa903
0x0000a9c1      0f1f440000     nop dword [rax + rax]
0x0000a9c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_string_context_at:
0x0000a9d0      55             push rbp
0x0000a9d1      53             push rbx
0x0000a9d2      4889fd         mov rbp, rdi
0x0000a9d5      4883ec08       sub rsp, 8
0x0000a9d9      4885f6         test rsi, rsi
0x0000a9dc      7852           js 0xaa30
0x0000a9de      48397758       cmp qword [rdi + 0x58], rsi
0x0000a9e2      0f84a0000000   je 0xaa88
0x0000a9e8      83bf90000000.  cmp dword [rdi + 0x90], 1
0x0000a9ef      7e4f           jle 0xaa40
0x0000a9f1      488b4710       mov rax, qword [rdi + 0x10]
0x0000a9f5      eb13           jmp 0xaa0a
0x0000a9f7      660f1f840000.  nop word [rax + rax]
0x0000aa00      4883ee01       sub rsi, 1
0x0000aa04      4883feff       cmp rsi, 0xffffffffffffffff
0x0000aa08      7426           je 0xaa30
0x0000aa0a      8b1cb0         mov ebx, dword [rax + rsi*4]
0x0000aa0d      83fbff         cmp ebx, 0xffffffff
0x0000aa10      74ee           je 0xaa00
0x0000aa12      80bd8e000000.  cmp byte [rbp + 0x8e], 0
0x0000aa19      757d           jne 0xaa98
0x0000aa1b      31c0           xor eax, eax
0x0000aa1d      83fb0a         cmp ebx, 0xa
0x0000aa20      744a           je 0xaa6c
0x0000aa22      4883c408       add rsp, 8
0x0000aa26      5b             pop rbx
0x0000aa27      5d             pop rbp
0x0000aa28      c3             ret
0x0000aa29      0f1f80000000.  nop dword [rax]
0x0000aa30      8b4570         mov eax, dword [rbp + 0x70]
0x0000aa33      4883c408       add rsp, 8
0x0000aa37      5b             pop rbx
0x0000aa38      5d             pop rbp
0x0000aa39      c3             ret
0x0000aa3a      660f1f440000   nop word [rax + rax]
0x0000aa40      488b4708       mov rax, qword [rdi + 8]
0x0000aa44      488b8f800000.  mov rcx, qword [rdi + 0x80]
0x0000aa4b      0fb60430       movzx eax, byte [rax + rsi]
0x0000aa4f      4889c2         mov rdx, rax
0x0000aa52      48c1f806       sar rax, 6
0x0000aa56      488b0cc1       mov rcx, qword [rcx + rax*8]
0x0000aa5a      b801000000     mov eax, 1
0x0000aa5f      480fa3d1       bt rcx, rdx
0x0000aa63      72bd           jb 0xaa22
0x0000aa65      31c0           xor eax, eax
0x0000aa67      80fa0a         cmp dl, 0xa
0x0000aa6a      75b6           jne 0xaa22
0x0000aa6c      31c0           xor eax, eax
0x0000aa6e      80bd8d000000.  cmp byte [rbp + 0x8d], 0
0x0000aa75      0f95c0         setne al
0x0000aa78      4883c408       add rsp, 8
0x0000aa7c      01c0           add eax, eax
0x0000aa7e      5b             pop rbx
0x0000aa7f      5d             pop rbp
0x0000aa80      c3             ret
0x0000aa81      0f1f80000000.  nop dword [rax]
0x0000aa88      83e202         and edx, 2
0x0000aa8b      83fa01         cmp edx, 1
0x0000aa8e      19c0           sbb eax, eax
0x0000aa90      83e002         and eax, 2
0x0000aa93      83c008         add eax, 8
0x0000aa96      eb8a           jmp 0xaa22
0x0000aa98      89df           mov edi, ebx
0x0000aa9a      e87171ffff     call sym.imp.iswalnum
0x0000aa9f      85c0           test eax, eax
0x0000aaa1      7509           jne 0xaaac
0x0000aaa3      83fb5f         cmp ebx, 0x5f
0x0000aaa6      0f856fffffff   jne 0xaa1b
0x0000aaac      b801000000     mov eax, 1
0x0000aab1      e96cffffff     jmp 0xaa22
0x0000aab6      662e0f1f8400.  nop word cs:[rax + rax]
;-- check_node_accept:
0x0000aac0      488b4708       mov rax, qword [rdi + 8]
0x0000aac4      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000aac8      0fb64608       movzx eax, byte [rsi + 8]
0x0000aacc      3c03           cmp al, 3
0x0000aace      0f84b4000000   je 0xab88
0x0000aad4      0f8696000000   jbe 0xab70
0x0000aada      3c05           cmp al, 5
0x0000aadc      7412           je 0xaaf0
0x0000aade      3c07           cmp al, 7
0x0000aae0      0f859a000000   jne 0xab80
0x0000aae6      31c0           xor eax, eax
0x0000aae8      84c9           test cl, cl
0x0000aaea      0f888a000000   js 0xab7a
0x0000aaf0      80f90a         cmp cl, 0xa
0x0000aaf3      0f84bf000000   je 0xabb8
0x0000aaf9      84c9           test cl, cl
0x0000aafb      7513           jne 0xab10
0x0000aafd      488b8f980000.  mov rcx, qword [rdi + 0x98]
0x0000ab04      31c0           xor eax, eax
0x0000ab06      f681d8000000.  test byte [rcx + 0xd8], 0x80
0x0000ab0d      756b           jne 0xab7a
0x0000ab0f      90             nop
0x0000ab10      53             push rbx
0x0000ab11      8b5e08         mov ebx, dword [rsi + 8]
0x0000ab14      b801000000     mov eax, 1
0x0000ab19      f7c300ff0300   test ebx, 0x3ff00
0x0000ab1f      744b           je 0xab6c
0x0000ab21      4889d6         mov rsi, rdx
0x0000ab24      8b97a0000000   mov edx, dword [rdi + 0xa0]
0x0000ab2a      c1eb08         shr ebx, 8
0x0000ab2d      e89efeffff     call sym.re_string_context_at
0x0000ab32      89d9           mov ecx, ebx
0x0000ab34      89c2           mov edx, eax
0x0000ab36      6681e1ff03     and cx, 0x3ff
0x0000ab3b      f6c304         test bl, 4
0x0000ab3e      7468           je 0xaba8
0x0000ab40      31c0           xor eax, eax
0x0000ab42      f6c201         test dl, 1
0x0000ab45      7425           je 0xab6c
0x0000ab47      83e308         and ebx, 8
0x0000ab4a      7520           jne 0xab6c
0x0000ab4c      f6c120         test cl, 0x20                           ; "@"
0x0000ab4f      7407           je 0xab58
0x0000ab51      31c0           xor eax, eax
0x0000ab53      f6c202         test dl, 2
0x0000ab56      7414           je 0xab6c
0x0000ab58      c1ea03         shr edx, 3
0x0000ab5b      b801000000     mov eax, 1
0x0000ab60      83e201         and edx, 1
0x0000ab63      81e180000000   and ecx, 0x80
0x0000ab69      0f45c2         cmovne eax, edx
0x0000ab6c      5b             pop rbx
0x0000ab6d      c3             ret
0x0000ab6e      6690           nop
0x0000ab70      3c01           cmp al, 1
0x0000ab72      750c           jne 0xab80
0x0000ab74      31c0           xor eax, eax
0x0000ab76      380e           cmp byte [rsi], cl
0x0000ab78      7496           je 0xab10
0x0000ab7a      f3c3           ret
0x0000ab7c      0f1f4000       nop dword [rax]
0x0000ab80      31c0           xor eax, eax
0x0000ab82      c3             ret
0x0000ab83      0f1f440000     nop dword [rax + rax]
0x0000ab88      4c8b06         mov r8, qword [rsi]
0x0000ab8b      0fb6c1         movzx eax, cl
0x0000ab8e      48c1f806       sar rax, 6
0x0000ab92      4d8b04c0       mov r8, qword [r8 + rax*8]
0x0000ab96      31c0           xor eax, eax
0x0000ab98      490fa3c8       bt r8, rcx
0x0000ab9c      0f826effffff   jb 0xab10
0x0000aba2      f3c3           ret
0x0000aba4      0f1f4000       nop dword [rax]
0x0000aba8      83e308         and ebx, 8
0x0000abab      749f           je 0xab4c
0x0000abad      a801           test al, 1
0x0000abaf      749b           je 0xab4c
0x0000abb1      31c0           xor eax, eax
0x0000abb3      5b             pop rbx
0x0000abb4      c3             ret
0x0000abb5      0f1f00         nop dword [rax]
0x0000abb8      488b8f980000.  mov rcx, qword [rdi + 0x98]
0x0000abbf      31c0           xor eax, eax
0x0000abc1      f681d8000000.  test byte [rcx + 0xd8], 0x40
0x0000abc8      0f8542ffffff   jne 0xab10
0x0000abce      f3c3           ret
;-- check_halt_state_context.isra.20:
0x0000abd0      4154           push r12
0x0000abd2      4989d4         mov r12, rdx
0x0000abd5      55             push rbp
0x0000abd6      53             push rbx
0x0000abd7      8b97a0000000   mov edx, dword [rdi + 0xa0]
0x0000abdd      4889f3         mov rbx, rsi
0x0000abe0      4889ce         mov rsi, rcx
0x0000abe3      4889fd         mov rbp, rdi
0x0000abe6      e8e5fdffff     call sym.re_string_context_at
0x0000abeb      4885db         test rbx, rbx
0x0000abee      0f8ea4000000   jle 0xac98
0x0000abf4      488b95980000.  mov rdx, qword [rbp + 0x98]
0x0000abfb      4189c3         mov r11d, eax
0x0000abfe      89c5           mov ebp, eax
0x0000ac00      83e001         and eax, 1
0x0000ac03      4d8b0c24       mov r9, qword [r12]
0x0000ac07      31f6           xor esi, esi
0x0000ac09      83e508         and ebp, 8
0x0000ac0c      4183e302       and r11d, 2
0x0000ac10      4189c2         mov r10d, eax
0x0000ac13      4c8b02         mov r8, qword [rdx]
0x0000ac16      eb11           jmp 0xac29
0x0000ac18      0f1f84000000.  nop dword [rax + rax]
0x0000ac20      4883c601       add rsi, 1
0x0000ac24      4839de         cmp rsi, rbx
0x0000ac27      746f           je 0xac98
0x0000ac29      498b04f1       mov rax, qword [r9 + rsi*8]
0x0000ac2d      4889c2         mov rdx, rax
0x0000ac30      48c1e204       shl rdx, 4
0x0000ac34      4c01c2         add rdx, r8
0x0000ac37      8b4a08         mov ecx, dword [rdx + 8]
0x0000ac3a      c1e908         shr ecx, 8
0x0000ac3d      89cf           mov edi, ecx
0x0000ac3f      6681e7ff03     and di, 0x3ff
0x0000ac44      807a0802       cmp byte [rdx + 8], 2
0x0000ac48      75d6           jne 0xac20
0x0000ac4a      6685ff         test di, di
0x0000ac4d      7426           je 0xac75
0x0000ac4f      f6c104         test cl, 4
0x0000ac52      742c           je 0xac80
0x0000ac54      4585d2         test r10d, r10d
0x0000ac57      74c7           je 0xac20
0x0000ac59      83e108         and ecx, 8
0x0000ac5c      75c2           jne 0xac20
0x0000ac5e      40f6c720       test dil, 0x20                          ; "@"
0x0000ac62      7405           je 0xac69
0x0000ac64      4585db         test r11d, r11d
0x0000ac67      74b7           je 0xac20
0x0000ac69      81e780000000   and edi, 0x80
0x0000ac6f      7404           je 0xac75
0x0000ac71      85ed           test ebp, ebp
0x0000ac73      74ab           je 0xac20
0x0000ac75      5b             pop rbx
0x0000ac76      5d             pop rbp
0x0000ac77      415c           pop r12
0x0000ac79      c3             ret
0x0000ac7a      660f1f440000   nop word [rax + rax]
0x0000ac80      83e108         and ecx, 8
0x0000ac83      74d9           je 0xac5e
0x0000ac85      4585d2         test r10d, r10d
0x0000ac88      7596           jne 0xac20
0x0000ac8a      40f6c720       test dil, 0x20                          ; "@"
0x0000ac8e      74d9           je 0xac69
0x0000ac90      ebd2           jmp 0xac64
0x0000ac92      660f1f440000   nop word [rax + rax]
0x0000ac98      5b             pop rbx
0x0000ac99      31c0           xor eax, eax
0x0000ac9b      5d             pop rbp
0x0000ac9c      415c           pop r12
0x0000ac9e      c3             ret
0x0000ac9f      90             nop
;-- re_string_reconstruct:
0x0000aca0      4157           push r15
0x0000aca2      4156           push r14
0x0000aca4      4989f7         mov r15, rsi
0x0000aca7      4155           push r13
0x0000aca9      4154           push r12
0x0000acab      4189d2         mov r10d, edx
0x0000acae      55             push rbp
0x0000acaf      53             push rbx
0x0000acb0      4889f5         mov rbp, rsi
0x0000acb3      4889fb         mov rbx, rdi
0x0000acb6      4883ec48       sub rsp, 0x48
0x0000acba      64488b042528.  mov rax, qword fs:[0x28]
0x0000acc3      4889442438     mov qword [rsp + 0x38], rax
0x0000acc8      31c0           xor eax, eax
0x0000acca      488b4728       mov rax, qword [rdi + 0x28]
0x0000acce      4829c5         sub rbp, rax
0x0000acd1      4839f0         cmp rax, rsi
0x0000acd4      7e60           jle 0xad36
0x0000acd6      83bf90000000.  cmp dword [rdi + 0x90], 1
0x0000acdd      0f8f2d010000   jg 0xae10
0x0000ace3      488b4350       mov rax, qword [rbx + 0x50]
0x0000ace7      48c743300000.  mov qword [rbx + 0x30], 0
0x0000acef      4c89fd         mov rbp, r15
0x0000acf2      48c743280000.  mov qword [rbx + 0x28], 0
0x0000acfa      48c743380000.  mov qword [rbx + 0x38], 0
0x0000ad02      c6838c000000.  mov byte [rbx + 0x8c], 0
0x0000ad09      48894358       mov qword [rbx + 0x58], rax
0x0000ad0d      488b4360       mov rax, qword [rbx + 0x60]
0x0000ad11      48894368       mov qword [rbx + 0x68], rax
0x0000ad15      4489d0         mov eax, r10d
0x0000ad18      83e001         and eax, 1
0x0000ad1b      83f801         cmp eax, 1
0x0000ad1e      19c0           sbb eax, eax
0x0000ad20      83e002         and eax, 2
0x0000ad23      83c004         add eax, 4
0x0000ad26      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0000ad2d      894370         mov dword [rbx + 0x70], eax
0x0000ad30      0f84ca000000   je 0xae00
0x0000ad36      4885ed         test rbp, rbp
0x0000ad39      7463           je 0xad9e
0x0000ad3b      488b4338       mov rax, qword [rbx + 0x38]
0x0000ad3f      0fb6938c0000.  movzx edx, byte [rbx + 0x8c]
0x0000ad46      4c8b4330       mov r8, qword [rbx + 0x30]
0x0000ad4a      4839e8         cmp rax, rbp
0x0000ad4d      0f8e1d010000   jle 0xae70
0x0000ad53      84d2           test dl, dl
0x0000ad55      0f850d020000   jne 0xaf68
0x0000ad5b      488d75ff       lea rsi, [rbp - 1]
0x0000ad5f      4489d2         mov edx, r10d
0x0000ad62      4889df         mov rdi, rbx
0x0000ad65      4c890424       mov qword [rsp], r8
0x0000ad69      e862fcffff     call sym.re_string_context_at
0x0000ad6e      4c8b0424       mov r8, qword [rsp]
0x0000ad72      894370         mov dword [rbx + 0x70], eax
0x0000ad75      4929e8         sub r8, rbp
0x0000ad78      83bb90000000.  cmp dword [rbx + 0x90], 1
0x0000ad7f      0f8f9b000000   jg 0xae20
0x0000ad85      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0000ad8c      0f859e030000   jne 0xb130
0x0000ad92      48296b38       sub qword [rbx + 0x38], rbp
0x0000ad96      4c894330       mov qword [rbx + 0x30], r8
0x0000ad9a      48016b08       add qword [rbx + 8], rbp
0x0000ad9e      488b4358       mov rax, qword [rbx + 0x58]
0x0000ada2      48296b68       sub qword [rbx + 0x68], rbp
0x0000ada6      4c897b28       mov qword [rbx + 0x28], r15
0x0000adaa      4829e8         sub rax, rbp
0x0000adad      83bb90000000.  cmp dword [rbx + 0x90], 1
0x0000adb4      48894358       mov qword [rbx + 0x58], rax
0x0000adb8      0f8e9a000000   jle 0xae58
0x0000adbe      80bb88000000.  cmp byte [rbx + 0x88], 0
0x0000adc5      4889df         mov rdi, rbx
0x0000adc8      747e           je 0xae48
0x0000adca      e841cdffff     call sym.build_wcs_upper_buffer
0x0000adcf      85c0           test eax, eax
0x0000add1      750a           jne 0xaddd
0x0000add3      48c743480000.  mov qword [rbx + 0x48], 0
0x0000addb      31c0           xor eax, eax
0x0000addd      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000ade2      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000adeb      0f8549060000   jne 0xb43a
0x0000adf1      4883c448       add rsp, 0x48
0x0000adf5      5b             pop rbx
0x0000adf6      5d             pop rbp
0x0000adf7      415c           pop r12
0x0000adf9      415d           pop r13
0x0000adfb      415e           pop r14
0x0000adfd      415f           pop r15
0x0000adff      c3             ret
0x0000ae00      488b03         mov rax, qword [rbx]
0x0000ae03      48894308       mov qword [rbx + 8], rax
0x0000ae07      e92affffff     jmp 0xad36
0x0000ae0c      0f1f4000       nop dword [rax]
0x0000ae10      48c747200000.  mov qword [rdi + 0x20], 0
0x0000ae18      e9c6feffff     jmp 0xace3
0x0000ae1d      0f1f00         nop dword [rax]
0x0000ae20      488b7b10       mov rdi, qword [rbx + 0x10]
0x0000ae24      4a8d14850000.  lea rdx, [r8*4]
0x0000ae2c      488d34af       lea rsi, [rdi + rbp*4]
0x0000ae30      e8bb6effff     call sym.imp.memmove
0x0000ae35      4c8b4330       mov r8, qword [rbx + 0x30]
0x0000ae39      4929e8         sub r8, rbp
0x0000ae3c      e944ffffff     jmp 0xad85
0x0000ae41      0f1f80000000.  nop dword [rax]
0x0000ae48      e8f3caffff     call sym.build_wcs_buffer
0x0000ae4d      e981ffffff     jmp 0xadd3
0x0000ae52      660f1f440000   nop word [rax + rax]
0x0000ae58      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0000ae5f      0f85ab030000   jne 0xb210
0x0000ae65      48894330       mov qword [rbx + 0x30], rax
0x0000ae69      e965ffffff     jmp 0xadd3
0x0000ae6e      6690           nop
0x0000ae70      84d2           test dl, dl
0x0000ae72      0f85a5040000   jne 0xb31d
0x0000ae78      486393900000.  movsxd rdx, dword [rbx + 0x90]
0x0000ae7f      48c743300000.  mov qword [rbx + 0x30], 0
0x0000ae87      4c8b5b28       mov r11, qword [rbx + 0x28]
0x0000ae8b      83fa01         cmp edx, 1
0x0000ae8e      0f8ee4030000   jle 0xb278
0x0000ae94      80bb89000000.  cmp byte [rbx + 0x89], 0
0x0000ae9b      0f85b7020000   jne 0xb158
0x0000aea1      4d8d3403       lea r14, [r11 + rax]
0x0000aea5      4d39f7         cmp r15, r14
0x0000aea8      0f8e41040000   jle 0xb2ef
0x0000aeae      488d4320       lea rax, [rbx + 0x20]
0x0000aeb2      4c8d6c2424     lea r13, [rsp + 0x24]
0x0000aeb7      4889442410     mov qword [rsp + 0x10], rax
0x0000aebc      0f1f4000       nop dword [rax]
0x0000aec0      4c8b6350       mov r12, qword [rbx + 0x50]
0x0000aec4      488b33         mov rsi, qword [rbx]
0x0000aec7      4c89ef         mov rdi, r13
0x0000aeca      488b4320       mov rax, qword [rbx + 0x20]
0x0000aece      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000aed3      448954240c     mov dword [rsp + 0xc], r10d
0x0000aed8      4c890424       mov qword [rsp], r8
0x0000aedc      4d29f4         sub r12, r14
0x0000aedf      4c01f6         add rsi, r14
0x0000aee2      4c89e2         mov rdx, r12
0x0000aee5      4889442418     mov qword [rsp + 0x18], rax
0x0000aeea      e861c1ffff     call sym.rpl_mbrtowc
0x0000aeef      488d48ff       lea rcx, [rax - 1]
0x0000aef3      8b542424       mov edx, dword [rsp + 0x24]
0x0000aef7      4c8b0424       mov r8, qword [rsp]
0x0000aefb      448b54240c     mov r10d, dword [rsp + 0xc]
0x0000af00      4883f9fc       cmp rcx, 0xfffffffffffffffc
0x0000af04      0f873b040000   ja 0xb345
0x0000af0a      4901c6         add r14, rax
0x0000af0d      4d39f7         cmp r15, r14
0x0000af10      7fae           jg 0xaec0
0x0000af12      4d29fe         sub r14, r15
0x0000af15      83faff         cmp edx, 0xffffffff
0x0000af18      4d89f4         mov r12, r14
0x0000af1b      4c897330       mov qword [rbx + 0x30], r14
0x0000af1f      0f84d4030000   je 0xb2f9
0x0000af25      80bb8e000000.  cmp byte [rbx + 0x8e], 0
0x0000af2c      0f8567040000   jne 0xb399
0x0000af32      31c0           xor eax, eax
0x0000af34      83fa0a         cmp edx, 0xa
0x0000af37      750e           jne 0xaf47
0x0000af39      31c0           xor eax, eax
0x0000af3b      80bb8d000000.  cmp byte [rbx + 0x8d], 0
0x0000af42      0f95c0         setne al
0x0000af45      01c0           add eax, eax
0x0000af47      894370         mov dword [rbx + 0x70], eax
0x0000af4a      4983fc00       cmp r12, 0
0x0000af4e      0f8516040000   jne 0xb36a
0x0000af54      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x0000af5b      4c896338       mov qword [rbx + 0x38], r12
0x0000af5f      e9b8010000     jmp 0xb11c
0x0000af64      0f1f4000       nop dword [rax]
0x0000af68      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000af6c      4c89c1         mov rcx, r8
0x0000af6f      31f6           xor esi, esi
0x0000af71      eb10           jmp 0xaf83
0x0000af73      0f1f440000     nop dword [rax + rax]
0x0000af78      7d39           jge 0xafb3
0x0000af7a      488d7001       lea rsi, [rax + 1]
0x0000af7e      4839ce         cmp rsi, rcx
0x0000af81      7d25           jge 0xafa8
0x0000af83      488d140e       lea rdx, [rsi + rcx]
0x0000af87      4889d0         mov rax, rdx
0x0000af8a      48c1e83f       shr rax, 0x3f
0x0000af8e      4801d0         add rax, rdx
0x0000af91      48d1f8         sar rax, 1
0x0000af94      498b14c6       mov rdx, qword [r14 + rax*8]
0x0000af98      4989c4         mov r12, rax
0x0000af9b      4839ea         cmp rdx, rbp
0x0000af9e      7ed8           jle 0xaf78
0x0000afa0      4889c1         mov rcx, rax
0x0000afa3      ebd9           jmp 0xaf7e
0x0000afa5      0f1f00         nop dword [rax]
0x0000afa8      4c8d6001       lea r12, [rax + 1]
0x0000afac      4839ea         cmp rdx, rbp
0x0000afaf      4c0f4de0       cmovge r12, rax
0x0000afb3      4d8d6c24ff     lea r13, [r12 - 1]
0x0000afb8      4489d2         mov edx, r10d
0x0000afbb      4889df         mov rdi, rbx
0x0000afbe      4c890424       mov qword [rsp], r8
0x0000afc2      4c89ee         mov rsi, r13
0x0000afc5      e806faffff     call sym.re_string_context_at
0x0000afca      4c39e5         cmp rbp, r12
0x0000afcd      894370         mov dword [rbx + 0x70], eax
0x0000afd0      4c8b0424       mov r8, qword [rsp]
0x0000afd4      0f857e000000   jne 0xb058
0x0000afda      4c39c5         cmp rbp, r8
0x0000afdd      7d79           jge 0xb058
0x0000afdf      4b392ce6       cmp qword [r14 + r12*8], rbp
0x0000afe3      7573           jne 0xb058
0x0000afe5      488b7b10       mov rdi, qword [rbx + 0x10]
0x0000afe9      4929e8         sub r8, rbp
0x0000afec      4a8d14850000.  lea rdx, [r8*4]
0x0000aff4      488d34af       lea rsi, [rdi + rbp*4]
0x0000aff8      e8f36cffff     call sym.imp.memmove
0x0000affd      488b7b08       mov rdi, qword [rbx + 8]
0x0000b001      488b5330       mov rdx, qword [rbx + 0x30]
0x0000b005      488d342f       lea rsi, [rdi + rbp]
0x0000b009      4829ea         sub rdx, rbp
0x0000b00c      e8df6cffff     call sym.imp.memmove
0x0000b011      488b4330       mov rax, qword [rbx + 0x30]
0x0000b015      48296b38       sub qword [rbx + 0x38], rbp
0x0000b019      4829e8         sub rax, rbp
0x0000b01c      4885c0         test rax, rax
0x0000b01f      48894330       mov qword [rbx + 0x30], rax
0x0000b023      7e23           jle 0xb048
0x0000b025      488b4b18       mov rcx, qword [rbx + 0x18]
0x0000b029      31c0           xor eax, eax
0x0000b02b      488d34e9       lea rsi, [rcx + rbp*8]
0x0000b02f      90             nop
0x0000b030      488b14c6       mov rdx, qword [rsi + rax*8]
0x0000b034      4829ea         sub rdx, rbp
0x0000b037      488914c1       mov qword [rcx + rax*8], rdx
0x0000b03b      4883c001       add rax, 1
0x0000b03f      48394330       cmp qword [rbx + 0x30], rax
0x0000b043      7feb           jg 0xb030
0x0000b045      0f1f00         nop dword [rax]
0x0000b048      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x0000b04f      e9c8000000     jmp 0xb11c
0x0000b054      0f1f4000       nop dword [rax]
0x0000b058      488b4350       mov rax, qword [rbx + 0x50]
0x0000b05c      c6838c000000.  mov byte [rbx + 0x8c], 0
0x0000b063      4801e8         add rax, rbp
0x0000b066      4c29f8         sub rax, r15
0x0000b069      48894358       mov qword [rbx + 0x58], rax
0x0000b06d      488b4360       mov rax, qword [rbx + 0x60]
0x0000b071      4801e8         add rax, rbp
0x0000b074      4c29f8         sub rax, r15
0x0000b077      4d85e4         test r12, r12
0x0000b07a      48894368       mov qword [rbx + 0x68], rax
0x0000b07e      7e23           jle 0xb0a3
0x0000b080      4b396ce6f8     cmp qword [r14 + r12*8 - 8], rbp
0x0000b085      7414           je 0xb09b
0x0000b087      eb1a           jmp 0xb0a3
0x0000b089      0f1f80000000.  nop dword [rax]
0x0000b090      4b396ceef8     cmp qword [r14 + r13*8 - 8], rbp
0x0000b095      750c           jne 0xb0a3
0x0000b097      4983ed01       sub r13, 1
0x0000b09b      4d85ed         test r13, r13
0x0000b09e      4d89ec         mov r12, r13
0x0000b0a1      75ed           jne 0xb090
0x0000b0a3      4d39c4         cmp r12, r8
0x0000b0a6      0f8d2c020000   jge 0xb2d8
0x0000b0ac      488b4310       mov rax, qword [rbx + 0x10]
0x0000b0b0      eb13           jmp 0xb0c5
0x0000b0b2      660f1f440000   nop word [rax + rax]
0x0000b0b8      4983c401       add r12, 1
0x0000b0bc      4d39c4         cmp r12, r8
0x0000b0bf      0f841b020000   je 0xb2e0
0x0000b0c5      42833ca0ff     cmp dword [rax + r12*4], 0xffffffff
0x0000b0ca      74ec           je 0xb0b8
0x0000b0cc      4b8b14e6       mov rdx, qword [r14 + r12*8]
0x0000b0d0      4829ea         sub rdx, rbp
0x0000b0d3      4883fa00       cmp rdx, 0
0x0000b0d7      48895330       mov qword [rbx + 0x30], rdx
0x0000b0db      7434           je 0xb111
0x0000b0dd      7e20           jle 0xb0ff
0x0000b0df      488b4310       mov rax, qword [rbx + 0x10]
0x0000b0e3      488d0c90       lea rcx, [rax + rdx*4]
0x0000b0e7      660f1f840000.  nop word [rax + rax]
0x0000b0f0      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x0000b0f6      4883c004       add rax, 4
0x0000b0fa      4839c1         cmp rcx, rax
0x0000b0fd      75f1           jne 0xb0f0
0x0000b0ff      488b7b08       mov rdi, qword [rbx + 8]
0x0000b103      beff000000     mov esi, 0xff
0x0000b108      e8536affff     call sym.imp.memset
0x0000b10d      488b5330       mov rdx, qword [rbx + 0x30]
0x0000b111      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x0000b118      48895338       mov qword [rbx + 0x38], rdx
0x0000b11c      84c0           test al, al
0x0000b11e      0f8476fcffff   je 0xad9a
0x0000b124      e975fcffff     jmp 0xad9e
0x0000b129      0f1f80000000.  nop dword [rax]
0x0000b130      488b7b08       mov rdi, qword [rbx + 8]
0x0000b134      4c89c2         mov rdx, r8
0x0000b137      488d342f       lea rsi, [rdi + rbp]
0x0000b13b      e8b06bffff     call sym.imp.memmove
0x0000b140      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x0000b147      48296b30       sub qword [rbx + 0x30], rbp
0x0000b14b      48296b38       sub qword [rbx + 0x38], rbp
0x0000b14f      ebcb           jmp 0xb11c
0x0000b151      0f1f80000000.  nop dword [rax]
0x0000b158      488b0b         mov rcx, qword [rbx]
0x0000b15b      4889ef         mov rdi, rbp
0x0000b15e      4829d7         sub rdi, rdx
0x0000b161      4889fa         mov rdx, rdi
0x0000b164      4e8d2419       lea r12, [rcx + r11]
0x0000b168      4c01e2         add rdx, r12
0x0000b16b      498d742cff     lea rsi, [r12 + rbp - 1]
0x0000b170      4839d1         cmp rcx, rdx
0x0000b173      480f42ca       cmovb rcx, rdx
0x0000b177      4839f1         cmp rcx, rsi
0x0000b17a      7619           jbe 0xb195
0x0000b17c      e920fdffff     jmp 0xaea1
0x0000b181      0f1f80000000.  nop dword [rax]
0x0000b188      4883ee01       sub rsi, 1
0x0000b18c      4839f1         cmp rcx, rsi
0x0000b18f      0f870cfdffff   ja 0xaea1
0x0000b195      0fb616         movzx edx, byte [rsi]
0x0000b198      83e2c0         and edx, 0xffffffc0                     ; 4294967232
0x0000b19b      80fa80         cmp dl, 0x80
0x0000b19e      74e8           je 0xb188
0x0000b1a0      488b5358       mov rdx, qword [rbx + 0x58]
0x0000b1a4      488b4b78       mov rcx, qword [rbx + 0x78]
0x0000b1a8      4989f6         mov r14, rsi
0x0000b1ab      4c01e2         add rdx, r12
0x0000b1ae      4829f2         sub rdx, rsi
0x0000b1b1      4885c9         test rcx, rcx
0x0000b1b4      0f8548020000   jne 0xb402
0x0000b1ba      4c8d6c2424     lea r13, [rsp + 0x24]
0x0000b1bf      4901ec         add r12, rbp
0x0000b1c2      488d4c2428     lea rcx, [rsp + 0x28]
0x0000b1c7      4d29f4         sub r12, r14
0x0000b1ca      448954240c     mov dword [rsp + 0xc], r10d
0x0000b1cf      4c890424       mov qword [rsp], r8
0x0000b1d3      4c89ef         mov rdi, r13
0x0000b1d6      48c744242800.  mov qword [rsp + 0x28], 0
0x0000b1df      e86cbeffff     call sym.rpl_mbrtowc
0x0000b1e4      4939c4         cmp r12, rax
0x0000b1e7      4c8b0424       mov r8, qword [rsp]
0x0000b1eb      448b54240c     mov r10d, dword [rsp + 0xc]
0x0000b1f0      770a           ja 0xb1fc
0x0000b1f2      4883f8fd       cmp rax, 0xfffffffffffffffd
0x0000b1f6      0f86c5010000   jbe 0xb3c1
0x0000b1fc      4c8b5b28       mov r11, qword [rbx + 0x28]
0x0000b200      488b4338       mov rax, qword [rbx + 0x38]
0x0000b204      e998fcffff     jmp 0xaea1
0x0000b209      0f1f80000000.  nop dword [rax]
0x0000b210      80bb88000000.  cmp byte [rbx + 0x88], 0
0x0000b217      0f85f3000000   jne 0xb310
0x0000b21d      488b4b78       mov rcx, qword [rbx + 0x78]
0x0000b221      4885c9         test rcx, rcx
0x0000b224      0f84a9fbffff   je 0xadd3
0x0000b22a      48394340       cmp qword [rbx + 0x40], rax
0x0000b22e      488b5330       mov rdx, qword [rbx + 0x30]
0x0000b232      480f4e4340     cmovle rax, qword [rbx + 0x40]
0x0000b237      4839d0         cmp rax, rdx
0x0000b23a      7f0c           jg 0xb248
0x0000b23c      eb2a           jmp 0xb268
0x0000b23e      6690           nop
0x0000b240      4c8b7b28       mov r15, qword [rbx + 0x28]
0x0000b244      488b4b78       mov rcx, qword [rbx + 0x78]
0x0000b248      488b33         mov rsi, qword [rbx]
0x0000b24b      4801d6         add rsi, rdx
0x0000b24e      420fb6343e     movzx esi, byte [rsi + r15]
0x0000b253      0fb63431       movzx esi, byte [rcx + rsi]
0x0000b257      488b4b08       mov rcx, qword [rbx + 8]
0x0000b25b      40883411       mov byte [rcx + rdx], sil
0x0000b25f      4883c201       add rdx, 1
0x0000b263      4839d0         cmp rax, rdx
0x0000b266      75d8           jne 0xb240
0x0000b268      48895330       mov qword [rbx + 0x30], rdx
0x0000b26c      48895338       mov qword [rbx + 0x38], rdx
0x0000b270      e95efbffff     jmp 0xadd3
0x0000b275      0f1f00         nop dword [rax]
0x0000b278      488b03         mov rax, qword [rbx]
0x0000b27b      488b5378       mov rdx, qword [rbx + 0x78]
0x0000b27f      4801e8         add rax, rbp
0x0000b282      4885d2         test rdx, rdx
0x0000b285      410fb64403ff   movzx eax, byte [r11 + rax - 1]
0x0000b28b      48c743380000.  mov qword [rbx + 0x38], 0
0x0000b293      7404           je 0xb299
0x0000b295      0fb60402       movzx eax, byte [rdx + rax]
0x0000b299      488b8b800000.  mov rcx, qword [rbx + 0x80]
0x0000b2a0      0fb6d0         movzx edx, al
0x0000b2a3      48c1fa06       sar rdx, 6
0x0000b2a7      488b0cd1       mov rcx, qword [rcx + rdx*8]
0x0000b2ab      ba01000000     mov edx, 1
0x0000b2b0      480fa3c1       bt rcx, rax
0x0000b2b4      721a           jb 0xb2d0
0x0000b2b6      31d2           xor edx, edx
0x0000b2b8      3c0a           cmp al, 0xa
0x0000b2ba      7514           jne 0xb2d0
0x0000b2bc      31d2           xor edx, edx
0x0000b2be      80bb8d000000.  cmp byte [rbx + 0x8d], 0
0x0000b2c5      0f95c2         setne dl
0x0000b2c8      01d2           add edx, edx
0x0000b2ca      660f1f440000   nop word [rax + rax]
0x0000b2d0      895370         mov dword [rbx + 0x70], edx
0x0000b2d3      e970fdffff     jmp 0xb048
0x0000b2d8      0f85eefdffff   jne 0xb0cc
0x0000b2de      6690           nop
0x0000b2e0      48c743300000.  mov qword [rbx + 0x30], 0
0x0000b2e8      31d2           xor edx, edx
0x0000b2ea      e922feffff     jmp 0xb111
0x0000b2ef      4d29fe         sub r14, r15
0x0000b2f2      4d89f4         mov r12, r14
0x0000b2f5      4c897330       mov qword [rbx + 0x30], r14
0x0000b2f9      498d70ff       lea rsi, [r8 - 1]
0x0000b2fd      4489d2         mov edx, r10d
0x0000b300      4889df         mov rdi, rbx
0x0000b303      e8c8f6ffff     call sym.re_string_context_at
0x0000b308      894370         mov dword [rbx + 0x70], eax
0x0000b30b      e93afcffff     jmp 0xaf4a
0x0000b310      4889df         mov rdi, rbx
0x0000b313      e8b8c5ffff     call sym.build_upper_buffer
0x0000b318      e9b6faffff     jmp 0xadd3
0x0000b31d      488b5350       mov rdx, qword [rbx + 0x50]
0x0000b321      c6838c000000.  mov byte [rbx + 0x8c], 0
0x0000b328      4801ea         add rdx, rbp
0x0000b32b      4c29fa         sub rdx, r15
0x0000b32e      48895358       mov qword [rbx + 0x58], rdx
0x0000b332      488b5360       mov rdx, qword [rbx + 0x60]
0x0000b336      4801ea         add rdx, rbp
0x0000b339      4c29fa         sub rdx, r15
0x0000b33c      48895368       mov qword [rbx + 0x68], rdx
0x0000b340      e933fbffff     jmp 0xae78
0x0000b345      4885c0         test rax, rax
0x0000b348      7473           je 0xb3bd
0x0000b34a      4d85e4         test r12, r12
0x0000b34d      746e           je 0xb3bd
0x0000b34f      488b03         mov rax, qword [rbx]
0x0000b352      420fb61430     movzx edx, byte [rax + r14]
0x0000b357      488b442418     mov rax, qword [rsp + 0x18]
0x0000b35c      48894320       mov qword [rbx + 0x20], rax
0x0000b360      b801000000     mov eax, 1
0x0000b365      e9a0fbffff     jmp 0xaf0a
0x0000b36a      7e1b           jle 0xb387
0x0000b36c      488b4310       mov rax, qword [rbx + 0x10]
0x0000b370      4a8d14a0       lea rdx, [rax + r12*4]
0x0000b374      0f1f4000       nop dword [rax]
0x0000b378      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x0000b37e      4883c004       add rax, 4
0x0000b382      4839c2         cmp rdx, rax
0x0000b385      75f1           jne 0xb378
0x0000b387      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0000b38e      7558           jne 0xb3e8
0x0000b390      4c896338       mov qword [rbx + 0x38], r12
0x0000b394      e901faffff     jmp 0xad9a
0x0000b399      89d7           mov edi, edx
0x0000b39b      891424         mov dword [rsp], edx
0x0000b39e      e86d68ffff     call sym.imp.iswalnum
0x0000b3a3      85c0           test eax, eax
0x0000b3a5      750c           jne 0xb3b3
0x0000b3a7      8b1424         mov edx, dword [rsp]
0x0000b3aa      83fa5f         cmp edx, 0x5f
0x0000b3ad      0f857ffbffff   jne 0xaf32
0x0000b3b3      b801000000     mov eax, 1
0x0000b3b8      e98afbffff     jmp 0xaf47
0x0000b3bd      31d2           xor edx, edx
0x0000b3bf      eb96           jmp 0xb357
0x0000b3c1      8b542424       mov edx, dword [rsp + 0x24]
0x0000b3c5      4c29e0         sub rax, r12
0x0000b3c8      48c743200000.  mov qword [rbx + 0x20], 0
0x0000b3d0      4989c4         mov r12, rax
0x0000b3d3      48894330       mov qword [rbx + 0x30], rax
0x0000b3d7      83faff         cmp edx, 0xffffffff
0x0000b3da      0f8545fbffff   jne 0xaf25
0x0000b3e0      e917feffff     jmp 0xb1fc
0x0000b3e5      0f1f00         nop dword [rax]
0x0000b3e8      488b7b08       mov rdi, qword [rbx + 8]
0x0000b3ec      4c89e2         mov rdx, r12
0x0000b3ef      beff000000     mov esi, 0xff
0x0000b3f4      e86767ffff     call sym.imp.memset
0x0000b3f9      4c8b6330       mov r12, qword [rbx + 0x30]
0x0000b3fd      e952fbffff     jmp 0xaf54
0x0000b402      4883fa06       cmp rdx, 6
0x0000b406      bf06000000     mov edi, 6
0x0000b40b      4c8d5c2432     lea r11, [rsp + 0x32]
0x0000b410      480f4efa       cmovle rdi, rdx
0x0000b414      83ef01         sub edi, 1
0x0000b417      85ff           test edi, edi
0x0000b419      4863c7         movsxd rax, edi
0x0000b41c      7814           js 0xb432
0x0000b41e      0fb63c06       movzx edi, byte [rsi + rax]
0x0000b422      0fb63c39       movzx edi, byte [rcx + rdi]
0x0000b426      41883c03       mov byte [r11 + rax], dil
0x0000b42a      4883e801       sub rax, 1
0x0000b42e      85c0           test eax, eax
0x0000b430      79ec           jns 0xb41e
0x0000b432      4c89de         mov rsi, r11
0x0000b435      e980fdffff     jmp 0xb1ba
0x0000b43a      e89166ffff     call sym.imp.__stack_chk_fail
0x0000b43f      90             nop
;-- sub_epsilon_src_nodes:
0x0000b440      4157           push r15
0x0000b442      4156           push r14
0x0000b444      4989d6         mov r14, rdx
0x0000b447      4155           push r13
0x0000b449      4154           push r12
0x0000b44b      488d1476       lea rdx, [rsi + rsi*2]
0x0000b44f      55             push rbp
0x0000b450      53             push rbx
0x0000b451      660fefc0       pxor xmm0, xmm0
0x0000b455      4883ec48       sub rsp, 0x48
0x0000b459      64488b042528.  mov rax, qword fs:[0x28]
0x0000b462      4889442438     mov qword [rsp + 0x38], rax
0x0000b467      31c0           xor eax, eax
0x0000b469      488b4738       mov rax, qword [rdi + 0x38]
0x0000b46d      48c744243000.  mov qword [rsp + 0x30], 0
0x0000b476      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000b47b      48894c2410     mov qword [rsp + 0x10], rcx
0x0000b480      488d2cd0       lea rbp, [rax + rdx*8]
0x0000b484      4c8b5508       mov r10, qword [rbp + 8]
0x0000b488      4d85d2         test r10, r10
0x0000b48b      0f8ee1010000   jle 0xb672
0x0000b491      488d442420     lea rax, [rsp + 0x20]
0x0000b496      4989fc         mov r12, rdi
0x0000b499      4989f5         mov r13, rsi
0x0000b49c      31db           xor ebx, ebx
0x0000b49e      4889442418     mov qword [rsp + 0x18], rax
0x0000b4a3      eb58           jmp 0xb4fd
0x0000b4a5      0f1f00         nop dword [rax]
0x0000b4a8      4885c0         test rax, rax
0x0000b4ab      0f85d7000000   jne 0xb588
0x0000b4b1      498b7e08       mov rdi, qword [r14 + 8]
0x0000b4b5      498d7610       lea rsi, [r14 + 0x10]
0x0000b4b9      4c89c2         mov rdx, r8
0x0000b4bc      e82fd7ffff     call sym.re_node_set_contains.isra.3
0x0000b4c1      4885c0         test rax, rax
0x0000b4c4      0f84be000000   je 0xb588
0x0000b4ca      498b542438     mov rdx, qword [r12 + 0x38]
0x0000b4cf      488b742410     mov rsi, qword [rsp + 0x10]
0x0000b4d4      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000b4d9      4c01ca         add rdx, r9
0x0000b4dc      e81fe2ffff     call sym.re_node_set_add_intersect
0x0000b4e1      85c0           test eax, eax
0x0000b4e3      0f8577010000   jne 0xb660
0x0000b4e9      4c8b5508       mov r10, qword [rbp + 8]
0x0000b4ed      0f1f00         nop dword [rax]
0x0000b4f0      4883c301       add rbx, 1
0x0000b4f4      4939da         cmp r10, rbx
0x0000b4f7      0f8ed3000000   jle 0xb5d0
0x0000b4fd      488b4510       mov rax, qword [rbp + 0x10]
0x0000b501      488b04d8       mov rax, qword [rax + rbx*8]
0x0000b505      4939c5         cmp r13, rax
0x0000b508      74e6           je 0xb4f0
0x0000b50a      4889c2         mov rdx, rax
0x0000b50d      48c1e204       shl rdx, 4
0x0000b511      49031424       add rdx, qword [r12]
0x0000b515      f6420808       test byte [rdx + 8], 8
0x0000b519      74d5           je 0xb4f0
0x0000b51b      4c8d0c40       lea r9, [rax + rax*2]
0x0000b51f      498b4c2428     mov rcx, qword [r12 + 0x28]
0x0000b524      4c8d5d10       lea r11, [rbp + 0x10]
0x0000b528      4c89d7         mov rdi, r10
0x0000b52b      49c1e103       shl r9, 3
0x0000b52f      4c89de         mov rsi, r11
0x0000b532      4c01c9         add rcx, r9
0x0000b535      4c8b7910       mov r15, qword [rcx + 0x10]
0x0000b539      48894c2408     mov qword [rsp + 8], rcx
0x0000b53e      4d8b07         mov r8, qword [r15]
0x0000b541      4c89c2         mov rdx, r8
0x0000b544      4c890424       mov qword [rsp], r8
0x0000b548      e8a3d6ffff     call sym.re_node_set_contains.isra.3
0x0000b54d      488b4c2408     mov rcx, qword [rsp + 8]
0x0000b552      4c8b0424       mov r8, qword [rsp]
0x0000b556      4883790801     cmp qword [rcx + 8], 1
0x0000b55b      0f8f47ffffff   jg 0xb4a8
0x0000b561      4885c0         test rax, rax
0x0000b564      758a           jne 0xb4f0
0x0000b566      498b7e08       mov rdi, qword [r14 + 8]
0x0000b56a      498d7610       lea rsi, [r14 + 0x10]
0x0000b56e      4c89c2         mov rdx, r8
0x0000b571      e87ad6ffff     call sym.re_node_set_contains.isra.3
0x0000b576      4885c0         test rax, rax
0x0000b579      0f854bffffff   jne 0xb4ca
0x0000b57f      e96cffffff     jmp 0xb4f0
0x0000b584      0f1f4000       nop dword [rax]
0x0000b588      4d8b7f08       mov r15, qword [r15 + 8]
0x0000b58c      4d85ff         test r15, r15
0x0000b58f      0f8e5bffffff   jle 0xb4f0
0x0000b595      4c89fa         mov rdx, r15
0x0000b598      4c89de         mov rsi, r11
0x0000b59b      4c89d7         mov rdi, r10
0x0000b59e      e84dd6ffff     call sym.re_node_set_contains.isra.3
0x0000b5a3      4885c0         test rax, rax
0x0000b5a6      0f8544ffffff   jne 0xb4f0
0x0000b5ac      498b7e08       mov rdi, qword [r14 + 8]
0x0000b5b0      498d7610       lea rsi, [r14 + 0x10]
0x0000b5b4      e837d6ffff     call sym.re_node_set_contains.isra.3
0x0000b5b9      4885c0         test rax, rax
0x0000b5bc      0f842effffff   je 0xb4f0
0x0000b5c2      e903ffffff     jmp 0xb4ca
0x0000b5c7      660f1f840000.  nop word [rax + rax]
0x0000b5d0      4531c9         xor r9d, r9d
0x0000b5d3      4d85d2         test r10, r10
0x0000b5d6      4c8d5c2430     lea r11, [rsp + 0x30]
0x0000b5db      7e4f           jle 0xb62c
0x0000b5dd      0f1f00         nop dword [rax]
0x0000b5e0      488b4510       mov rax, qword [rbp + 0x10]
0x0000b5e4      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000b5e9      4c89de         mov rsi, r11
0x0000b5ec      4e8b14c8       mov r10, qword [rax + r9*8]
0x0000b5f0      4c89d2         mov rdx, r10
0x0000b5f3      e8f8d5ffff     call sym.re_node_set_contains.isra.3
0x0000b5f8      4885c0         test rax, rax
0x0000b5fb      7525           jne 0xb622
0x0000b5fd      498d5e10       lea rbx, [r14 + 0x10]
0x0000b601      498b7e08       mov rdi, qword [r14 + 8]
0x0000b605      4889de         mov rsi, rbx
0x0000b608      e8e3d5ffff     call sym.re_node_set_contains.isra.3
0x0000b60d      4883e801       sub rax, 1
0x0000b611      4889c2         mov rdx, rax
0x0000b614      780c           js 0xb622
0x0000b616      498d7e08       lea rdi, [r14 + 8]
0x0000b61a      4889de         mov rsi, rbx
0x0000b61d      e84ed7ffff     call sym.re_node_set_remove_at.isra.4.part.5
0x0000b622      4983c101       add r9, 1
0x0000b626      4c394d08       cmp qword [rbp + 8], r9
0x0000b62a      7fb4           jg 0xb5e0
0x0000b62c      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000b631      e89a63ffff     call sym.imp.free
0x0000b636      31c0           xor eax, eax
0x0000b638      488b742438     mov rsi, qword [rsp + 0x38]
0x0000b63d      644833342528.  xor rsi, qword fs:[0x28]
0x0000b646      752e           jne 0xb676
0x0000b648      4883c448       add rsp, 0x48
0x0000b64c      5b             pop rbx
0x0000b64d      5d             pop rbp
0x0000b64e      415c           pop r12
0x0000b650      415d           pop r13
0x0000b652      415e           pop r14
0x0000b654      415f           pop r15
0x0000b656      c3             ret
0x0000b657      660f1f840000.  nop word [rax + rax]
0x0000b660      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000b665      890424         mov dword [rsp], eax
0x0000b668      e86363ffff     call sym.imp.free
0x0000b66d      8b0424         mov eax, dword [rsp]
0x0000b670      ebc6           jmp 0xb638
0x0000b672      31ff           xor edi, edi
0x0000b674      ebbb           jmp 0xb631
0x0000b676      e85564ffff     call sym.imp.__stack_chk_fail
0x0000b67b      0f1f440000     nop dword [rax + rax]
;-- build_trtable:
0x0000b680      4157           push r15
0x0000b682      4156           push r14
0x0000b684      4989ff         mov r15, rdi
0x0000b687      4155           push r13
0x0000b689      4154           push r12
0x0000b68b      bf00380000     mov edi, 0x3800
0x0000b690      55             push rbp
0x0000b691      53             push rbx
0x0000b692      4881ec080100.  sub rsp, 0x108
0x0000b699      64488b042528.  mov rax, qword fs:[0x28]
0x0000b6a2      48898424f800.  mov qword [rsp + 0xf8], rax
0x0000b6aa      31c0           xor eax, eax
0x0000b6ac      4889742408     mov qword [rsp + 8], rsi
0x0000b6b1      e86a65ffff     call sym.imp.malloc
0x0000b6b6      4885c0         test rax, rax
0x0000b6b9      4889442418     mov qword [rsp + 0x18], rax
0x0000b6be      0f84cc030000   je 0xba90
0x0000b6c4      488b442418     mov rax, qword [rsp + 0x18]
0x0000b6c9      660fefc0       pxor xmm0, xmm0
0x0000b6cd      488d98001800.  lea rbx, [rax + 0x1800]
0x0000b6d4      488b442408     mov rax, qword [rsp + 8]
0x0000b6d9      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x0000b6e1      48895c2440     mov qword [rsp + 0x40], rbx
0x0000b6e6      0f298424a000.  movaps xmmword [rsp + 0xa0], xmm0
0x0000b6ee      4883781000     cmp qword [rax + 0x10], 0
0x0000b6f3      48c740580000.  mov qword [rax + 0x58], 0
0x0000b6fb      48c740600000.  mov qword [rax + 0x60], 0
0x0000b703      0f8e710a0000   jle 0xc17a
0x0000b709      4c897c2430     mov qword [rsp + 0x30], r15
0x0000b70e      31ed           xor ebp, ebp
0x0000b710      48c744241000.  mov qword [rsp + 0x10], 0
0x0000b719      4989df         mov r15, rbx
0x0000b71c      488b5c2410     mov rbx, qword [rsp + 0x10]
0x0000b721      488d04dd0000.  lea rax, [rbx*8]
0x0000b729      4889442420     mov qword [rsp + 0x20], rax
0x0000b72e      488b442408     mov rax, qword [rsp + 8]
0x0000b733      488b4018       mov rax, qword [rax + 0x18]
0x0000b737      4c8b2cd8       mov r13, qword [rax + rbx*8]
0x0000b73b      488b442430     mov rax, qword [rsp + 0x30]
0x0000b740      49c1e504       shl r13, 4
0x0000b744      4c0328         add r13, qword [rax]
0x0000b747      450fb67508     movzx r14d, byte [r13 + 8]
0x0000b74c      418b4508       mov eax, dword [r13 + 8]
0x0000b750      c1e808         shr eax, 8
0x0000b753      6625ff03       and ax, 0x3ff
0x0000b757      4183fe01       cmp r14d, 1
0x0000b75b      0f845f030000   je 0xbac0
0x0000b761      4183fe03       cmp r14d, 3
0x0000b765      0f84c5070000   je 0xbf30
0x0000b76b      4183fe05       cmp r14d, 5
0x0000b76f      0f847b060000   je 0xbdf0
0x0000b775      4183fe07       cmp r14d, 7
0x0000b779      0f84da070000   je 0xbf59
0x0000b77f      488b5c2408     mov rbx, qword [rsp + 8]
0x0000b784      488344241001   add qword [rsp + 0x10], 1
0x0000b78a      488b442410     mov rax, qword [rsp + 0x10]
0x0000b78f      483b4310       cmp rax, qword [rbx + 0x10]
0x0000b793      7c87           jl 0xb71c
0x0000b795      4885ed         test rbp, rbp
0x0000b798      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x0000b79d      0f8e560a0000   jle 0xc1f9
0x0000b7a3      488d5d01       lea rbx, [rbp + 1]
0x0000b7a7      48c744247800.  mov qword [rsp + 0x78], 0
0x0000b7b0      48895c2470     mov qword [rsp + 0x70], rbx
0x0000b7b5      48c1e303       shl rbx, 3
0x0000b7b9      4889df         mov rdi, rbx
0x0000b7bc      e85f64ffff     call sym.imp.malloc
0x0000b7c1      4885c0         test rax, rax
0x0000b7c4      4989c4         mov r12, rax
0x0000b7c7      488984248000.  mov qword [rsp + 0x80], rax
0x0000b7cf      0f84fa070000   je 0xbfcf
0x0000b7d5      48b855a8aaaa.  movabs rax, 0xaaaaaaaaaaaa855
0x0000b7df      c744246c0000.  mov dword [rsp + 0x6c], 0
0x0000b7e7      4839c5         cmp rbp, rax
0x0000b7ea      0f8fdf070000   jg 0xbfcf
0x0000b7f0      488d446d00     lea rax, [rbp + rbp*2]
0x0000b7f5      48c1e003       shl rax, 3
0x0000b7f9      4889c7         mov rdi, rax
0x0000b7fc      4889442458     mov qword [rsp + 0x58], rax
0x0000b801      e81a64ffff     call sym.imp.malloc
0x0000b806      4885c0         test rax, rax
0x0000b809      4889442410     mov qword [rsp + 0x10], rax
0x0000b80e      0f84bb070000   je 0xbfcf
0x0000b814      488b442410     mov rax, qword [rsp + 0x10]
0x0000b819      4883eb08       sub rbx, 8
0x0000b81d      4c8b642440     mov r12, qword [rsp + 0x40]
0x0000b822      660fefc0       pxor xmm0, xmm0
0x0000b826      4c8d742470     lea r14, [rsp + 0x70]
0x0000b82b      48896c2420     mov qword [rsp + 0x20], rbp
0x0000b830      c644244f00     mov byte [rsp + 0x4f], 0
0x0000b835      4c89fd         mov rbp, r15
0x0000b838      4801d8         add rax, rbx
0x0000b83b      4c89642450     mov qword [rsp + 0x50], r12
0x0000b840      4801c3         add rbx, rax
0x0000b843      4889442430     mov qword [rsp + 0x30], rax
0x0000b848      488b442418     mov rax, qword [rsp + 0x18]
0x0000b84d      0f298424d000.  movaps xmmword [rsp + 0xd0], xmm0
0x0000b855      48895c2438     mov qword [rsp + 0x38], rbx
0x0000b85a      31db           xor ebx, ebx
0x0000b85c      4c8d6808       lea r13, [rax + 8]
0x0000b860      488d44246c     lea rax, [rsp + 0x6c]
0x0000b865      0f298424e000.  movaps xmmword [rsp + 0xe0], xmm0
0x0000b86d      4889442428     mov qword [rsp + 0x28], rax
0x0000b872      48c744247800.  mov qword [rsp + 0x78], 0
0x0000b87b      49837d0000     cmp qword [r13], 0
0x0000b880      7e46           jle 0xb8c8
0x0000b882      4531ff         xor r15d, r15d
0x0000b885      0f1f00         nop dword [rax]
0x0000b888      498b4508       mov rax, qword [r13 + 8]
0x0000b88c      4a8b14f8       mov rdx, qword [rax + r15*8]
0x0000b890      488b4518       mov rax, qword [rbp + 0x18]
0x0000b894      488b04d0       mov rax, qword [rax + rdx*8]
0x0000b898      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000b89c      7420           je 0xb8be
0x0000b89e      488d1440       lea rdx, [rax + rax*2]
0x0000b8a2      488b4530       mov rax, qword [rbp + 0x30]
0x0000b8a6      4c89f7         mov rdi, r14
0x0000b8a9      488d34d0       lea rsi, [rax + rdx*8]
0x0000b8ad      e85ed8ffff     call sym.re_node_set_merge
0x0000b8b2      85c0           test eax, eax
0x0000b8b4      8944246c       mov dword [rsp + 0x6c], eax
0x0000b8b8      0f85fa060000   jne 0xbfb8
0x0000b8be      4983c701       add r15, 1
0x0000b8c2      4d397d00       cmp qword [r13], r15
0x0000b8c6      7fc0           jg 0xb888
0x0000b8c8      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000b8cd      31c9           xor ecx, ecx
0x0000b8cf      4889ee         mov rsi, rbp
0x0000b8d2      4c89f2         mov rdx, r14
0x0000b8d5      e866e6ffff     call sym.re_acquire_state_context
0x0000b8da      488b742410     mov rsi, qword [rsp + 0x10]
0x0000b8df      4885c0         test rax, rax
0x0000b8e2      488904de       mov qword [rsi + rbx*8], rax
0x0000b8e6      0f84ac070000   je 0xc098
0x0000b8ec      80786800       cmp byte [rax + 0x68], 0
0x0000b8f0      0f881a070000   js 0xc010
0x0000b8f6      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000b8fb      488b742438     mov rsi, qword [rsp + 0x38]
0x0000b900      488904df       mov qword [rdi + rbx*8], rax
0x0000b904      488b442410     mov rax, qword [rsp + 0x10]
0x0000b909      488b04d8       mov rax, qword [rax + rbx*8]
0x0000b90d      488904de       mov qword [rsi + rbx*8], rax
0x0000b911      488d9424d000.  lea rdx, [rsp + 0xd0]
0x0000b919      31c0           xor eax, eax
0x0000b91b      488b0c02       mov rcx, qword [rdx + rax]
0x0000b91f      490b0c04       or rcx, qword [r12 + rax]
0x0000b923      48890c02       mov qword [rdx + rax], rcx
0x0000b927      4883c008       add rax, 8
0x0000b92b      4883f820       cmp rax, 0x20                           ; "@"
0x0000b92f      75ea           jne 0xb91b
0x0000b931      4883c301       add rbx, 1
0x0000b935      4983c518       add r13, 0x18
0x0000b939      4983c420       add r12, 0x20                           ; "@"
0x0000b93d      483b5c2420     cmp rbx, qword [rsp + 0x20]
0x0000b942      0f852affffff   jne 0xb872
0x0000b948      807c244f00     cmp byte [rsp + 0x4f], 0
0x0000b94d      4989ef         mov r15, rbp
0x0000b950      488b6c2420     mov rbp, qword [rsp + 0x20]
0x0000b955      4889542420     mov qword [rsp + 0x20], rdx
0x0000b95a      0f8549070000   jne 0xc0a9
0x0000b960      be00010000     mov esi, 0x100
0x0000b965      bf08000000     mov edi, 8
0x0000b96a      e85162ffff     call sym.imp.calloc
0x0000b96f      4989c3         mov r11, rax
0x0000b972      488b442408     mov rax, qword [rsp + 8]
0x0000b977      4d85db         test r11, r11
0x0000b97a      4c895858       mov qword [rax + 0x58], r11
0x0000b97e      0f8439060000   je 0xbfbd
0x0000b984      488b5c2440     mov rbx, qword [rsp + 0x40]
0x0000b989      4c8b642410     mov r12, qword [rsp + 0x10]
0x0000b98e      4531c9         xor r9d, r9d
0x0000b991      4c8b6c2430     mov r13, qword [rsp + 0x30]
0x0000b996      488b542420     mov rdx, qword [rsp + 0x20]
0x0000b99b      4883c320       add rbx, 0x20                           ; "@"
0x0000b99f      4a8b040a       mov rax, qword [rdx + r9]
0x0000b9a3      4885c0         test rax, rax
0x0000b9a6      742c           je 0xb9d4
0x0000b9a8      4c89ce         mov rsi, r9
0x0000b9ab      b901000000     mov ecx, 1
0x0000b9b0      48c1e606       shl rsi, 6
0x0000b9b4      4c01de         add rsi, r11
0x0000b9b7      660f1f840000.  nop word [rax + rax]
0x0000b9c0      a801           test al, 1
0x0000b9c2      0f8560070000   jne 0xc128
0x0000b9c8      4801c9         add rcx, rcx
0x0000b9cb      4883c608       add rsi, 8
0x0000b9cf      48d1e8         shr rax, 1
0x0000b9d2      75ec           jne 0xb9c0
0x0000b9d4      4983c108       add r9, 8
0x0000b9d8      4983f920       cmp r9, 0x20                            ; "@"
0x0000b9dc      75c1           jne 0xb99f
0x0000b9de      f68424d10000.  test byte [rsp + 0xd1], 4
0x0000b9e6      743a           je 0xba22
0x0000b9e8      31c0           xor eax, eax
0x0000b9ea      488b542450     mov rdx, qword [rsp + 0x50]
0x0000b9ef      eb0d           jmp 0xb9fe
0x0000b9f1      4883c001       add rax, 1
0x0000b9f5      4883c220       add rdx, 0x20                           ; "@"
0x0000b9f9      4839e8         cmp rax, rbp
0x0000b9fc      7424           je 0xba22
0x0000b9fe      48f702000400.  test qword [rdx], 0x400
0x0000ba05      74ea           je 0xb9f1
0x0000ba07      488b5c2438     mov rbx, qword [rsp + 0x38]
0x0000ba0c      807c244f00     cmp byte [rsp + 0x4f], 0
0x0000ba11      488b04c3       mov rax, qword [rbx + rax*8]
0x0000ba15      49894350       mov qword [r11 + 0x50], rax
0x0000ba19      7407           je 0xba22
0x0000ba1b      498983500800.  mov qword [r11 + 0x850], rax
0x0000ba22      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000ba27      e8a45fffff     call sym.imp.free
0x0000ba2c      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x0000ba34      e8975fffff     call sym.imp.free
0x0000ba39      488b442418     mov rax, qword [rsp + 0x18]
0x0000ba3e      488b5c2458     mov rbx, qword [rsp + 0x58]
0x0000ba43      488d6810       lea rbp, [rax + 0x10]
0x0000ba47      4801eb         add rbx, rbp
0x0000ba4a      488b7d00       mov rdi, qword [rbp]
0x0000ba4e      4883c518       add rbp, 0x18
0x0000ba52      e8795fffff     call sym.imp.free
0x0000ba57      4839eb         cmp rbx, rbp
0x0000ba5a      75ee           jne 0xba4a
0x0000ba5c      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000ba61      e86a5fffff     call sym.imp.free
0x0000ba66      b801000000     mov eax, 1
0x0000ba6b      eb25           jmp 0xba92
0x0000ba6d      4885ed         test rbp, rbp
0x0000ba70      48c743080000.  mov qword [rbx + 8], 0
0x0000ba78      48c703000000.  mov qword [rbx], 0
0x0000ba7f      0f852b030000   jne 0xbdb0
0x0000ba85      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000ba8a      e8415fffff     call sym.imp.free
0x0000ba8f      90             nop
0x0000ba90      31c0           xor eax, eax
0x0000ba92      488b9c24f800.  mov rbx, qword [rsp + 0xf8]
0x0000ba9a      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000baa3      0f854b070000   jne 0xc1f4
0x0000baa9      4881c4080100.  add rsp, 0x108
0x0000bab0      5b             pop rbx
0x0000bab1      5d             pop rbp
0x0000bab2      415c           pop r12
0x0000bab4      415d           pop r13
0x0000bab6      415e           pop r14
0x0000bab8      415f           pop r15
0x0000baba      c3             ret
0x0000babb      0f1f440000     nop dword [rax + rax]
0x0000bac0      410fb64d00     movzx ecx, byte [r13]
0x0000bac5      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000bacd      bf01000000     mov edi, 1
0x0000bad2      4889ca         mov rdx, rcx
0x0000bad5      83e13f         and ecx, 0x3f
0x0000bad8      48c1ea03       shr rdx, 3
0x0000badc      48d3e7         shl rdi, cl
0x0000badf      83e218         and edx, 0x18
0x0000bae2      49093c14       or qword [r12 + rdx], rdi
0x0000bae6      6685c0         test ax, ax
0x0000bae9      0f84c1000000   je 0xbbb0
0x0000baef      a820           test al, 0x20                           ; "@"
0x0000baf1      0f8569030000   jne 0xbe60
0x0000baf7      a880           test al, 0x80
0x0000baf9      0f8595020000   jne 0xbd94
0x0000baff      a804           test al, 4
0x0000bb01      7452           je 0xbb55
0x0000bb03      4183fe01       cmp r14d, 1
0x0000bb07      0f84d8030000   je 0xbee5
0x0000bb0d      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000bb12      4183b8b40000.  cmp dword [r8 + 0xb4], 1
0x0000bb1a      0f8e52040000   jle 0xbf72
0x0000bb20      498b7878       mov rdi, qword [r8 + 0x78]
0x0000bb24      31f6           xor esi, esi
0x0000bb26      31c9           xor ecx, ecx
0x0000bb28      488b14cf       mov rdx, qword [rdi + rcx*8]
0x0000bb2c      48f7d2         not rdx
0x0000bb2f      490b94c8b800.  or rdx, qword [r8 + rcx*8 + 0xb8]
0x0000bb37      492314cc       and rdx, qword [r12 + rcx*8]
0x0000bb3b      498914cc       mov qword [r12 + rcx*8], rdx
0x0000bb3f      4883c101       add rcx, 1
0x0000bb43      4809d6         or rsi, rdx
0x0000bb46      4883f904       cmp rcx, 4
0x0000bb4a      75dc           jne 0xbb28
0x0000bb4c      4885f6         test rsi, rsi
0x0000bb4f      0f842afcffff   je 0xb77f
0x0000bb55      a808           test al, 8
0x0000bb57      7457           je 0xbbb0
0x0000bb59      4183fe01       cmp r14d, 1
0x0000bb5d      0f842e030000   je 0xbe91
0x0000bb63      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000bb68      83bfb4000000.  cmp dword [rdi + 0xb4], 1
0x0000bb6f      0f8e39030000   jle 0xbeae
0x0000bb75      488b7778       mov rsi, qword [rdi + 0x78]
0x0000bb79      31c9           xor ecx, ecx
0x0000bb7b      31d2           xor edx, edx
0x0000bb7d      488b84d7b800.  mov rax, qword [rdi + rdx*8 + 0xb8]
0x0000bb85      482304d6       and rax, qword [rsi + rdx*8]
0x0000bb89      48f7d0         not rax
0x0000bb8c      492304d4       and rax, qword [r12 + rdx*8]
0x0000bb90      498904d4       mov qword [r12 + rdx*8], rax
0x0000bb94      4883c201       add rdx, 1
0x0000bb98      4809c1         or rcx, rax
0x0000bb9b      4883fa04       cmp rdx, 4
0x0000bb9f      75dc           jne 0xbb7d
0x0000bba1      4885c9         test rcx, rcx
0x0000bba4      0f84d5fbffff   je 0xb77f
0x0000bbaa      660f1f440000   nop word [rax + rax]
0x0000bbb0      31db           xor ebx, ebx
0x0000bbb2      4885ed         test rbp, rbp
0x0000bbb5      0f8e60010000   jle 0xbd1b
0x0000bbbb      4c896c2428     mov qword [rsp + 0x28], r13
0x0000bbc0      4d89fd         mov r13, r15
0x0000bbc3      0f1f440000     nop dword [rax + rax]
0x0000bbc8      4989da         mov r10, rbx
0x0000bbcb      49c1e205       shl r10, 5
0x0000bbcf      4183fe01       cmp r14d, 1
0x0000bbd3      7523           jne 0xbbf8
0x0000bbd5      488b442428     mov rax, qword [rsp + 0x28]
0x0000bbda      0fb610         movzx edx, byte [rax]
0x0000bbdd      4889d0         mov rax, rdx
0x0000bbe0      48c1e803       shr rax, 3
0x0000bbe4      83e018         and eax, 0x18
0x0000bbe7      4c01e8         add rax, r13
0x0000bbea      4a8b0410       mov rax, qword [rax + r10]
0x0000bbee      480fa3d0       bt rax, rdx
0x0000bbf2      0f8313010000   jae 0xbd0b
0x0000bbf8      4b8d7c1500     lea rdi, [r13 + r10]
0x0000bbfd      488db424b000.  lea rsi, [rsp + 0xb0]
0x0000bc05      31c9           xor ecx, ecx
0x0000bc07      31c0           xor eax, eax
0x0000bc09      498b14c4       mov rdx, qword [r12 + rax*8]
0x0000bc0d      482314c7       and rdx, qword [rdi + rax*8]
0x0000bc11      488914c6       mov qword [rsi + rax*8], rdx
0x0000bc15      4883c001       add rax, 1
0x0000bc19      4809d1         or rcx, rdx
0x0000bc1c      4883f804       cmp rax, 4
0x0000bc20      75e7           jne 0xbc09
0x0000bc22      4885c9         test rcx, rcx
0x0000bc25      0f84e0000000   je 0xbd0b
0x0000bc2b      4c8d9c24d000.  lea r11, [rsp + 0xd0]
0x0000bc33      4531ff         xor r15d, r15d
0x0000bc36      4531c9         xor r9d, r9d
0x0000bc39      31c9           xor ecx, ecx
0x0000bc3b      498b34cc       mov rsi, qword [r12 + rcx*8]
0x0000bc3f      488b04cf       mov rax, qword [rdi + rcx*8]
0x0000bc43      4889f2         mov rdx, rsi
0x0000bc46      48f7d2         not rdx
0x0000bc49      4821c2         and rdx, rax
0x0000bc4c      48f7d0         not rax
0x0000bc4f      4821f0         and rax, rsi
0x0000bc52      498914cb       mov qword [r11 + rcx*8], rdx
0x0000bc56      4909d1         or r9, rdx
0x0000bc59      498904cc       mov qword [r12 + rcx*8], rax
0x0000bc5d      4883c101       add rcx, 1
0x0000bc61      4909c7         or r15, rax
0x0000bc64      4883f904       cmp rcx, 4
0x0000bc68      75d1           jne 0xbc3b
0x0000bc6a      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000bc6f      488d045b       lea rax, [rbx + rbx*2]
0x0000bc73      4d85c9         test r9, r9
0x0000bc76      488d14c7       lea rdx, [rdi + rax*8]
0x0000bc7a      7468           je 0xbce4
0x0000bc7c      4889e8         mov rax, rbp
0x0000bc7f      660f6f8424d0.  movdqa xmm0, xmmword [rsp + 0xd0]
0x0000bc88      48c1e005       shl rax, 5
0x0000bc8c      4889d6         mov rsi, rdx
0x0000bc8f      4889542438     mov qword [rsp + 0x38], rdx
0x0000bc94      4c01e8         add rax, r13
0x0000bc97      0f1100         movups xmmword [rax], xmm0
0x0000bc9a      660f6f8424e0.  movdqa xmm0, xmmword [rsp + 0xe0]
0x0000bca3      0f114010       movups xmmword [rax + 0x10], xmm0
0x0000bca7      488d446d00     lea rax, [rbp + rbp*2]
0x0000bcac      488d3cc7       lea rdi, [rdi + rax*8]
0x0000bcb0      660f6f8424b0.  movdqa xmm0, xmmword [rsp + 0xb0]
0x0000bcb9      430f11441500   movups xmmword [r13 + r10], xmm0
0x0000bcbf      660f6f8424c0.  movdqa xmm0, xmmword [rsp + 0xc0]
0x0000bcc8      430f11441510   movups xmmword [r13 + r10 + 0x10], xmm0
0x0000bcce      e87de0ffff     call sym.re_node_set_init_copy
0x0000bcd3      85c0           test eax, eax
0x0000bcd5      0f85d5000000   jne 0xbdb0
0x0000bcdb      488b542438     mov rdx, qword [rsp + 0x38]
0x0000bce0      4883c501       add rbp, 1
0x0000bce4      488b442408     mov rax, qword [rsp + 8]
0x0000bce9      488b742420     mov rsi, qword [rsp + 0x20]
0x0000bcee      4889d7         mov rdi, rdx
0x0000bcf1      488b4018       mov rax, qword [rax + 0x18]
0x0000bcf5      488b3430       mov rsi, qword [rax + rsi]
0x0000bcf9      e8b2b9ffff     call sym.re_node_set_insert
0x0000bcfe      84c0           test al, al
0x0000bd00      0f84aa000000   je 0xbdb0
0x0000bd06      4d85ff         test r15, r15
0x0000bd09      740d           je 0xbd18
0x0000bd0b      4883c301       add rbx, 1
0x0000bd0f      4839eb         cmp rbx, rbp
0x0000bd12      0f8cb0feffff   jl 0xbbc8
0x0000bd18      4d89ef         mov r15, r13
0x0000bd1b      4839dd         cmp rbp, rbx
0x0000bd1e      0f855bfaffff   jne 0xb77f
0x0000bd24      4889e8         mov rax, rbp
0x0000bd27      660f6f842490.  movdqa xmm0, xmmword [rsp + 0x90]
0x0000bd30      48c1e005       shl rax, 5
0x0000bd34      488b5c2420     mov rbx, qword [rsp + 0x20]
0x0000bd39      bf08000000     mov edi, 8
0x0000bd3e      4c01f8         add rax, r15
0x0000bd41      0f1100         movups xmmword [rax], xmm0
0x0000bd44      660f6f8424a0.  movdqa xmm0, xmmword [rsp + 0xa0]
0x0000bd4d      0f114010       movups xmmword [rax + 0x10], xmm0
0x0000bd51      488b442408     mov rax, qword [rsp + 8]
0x0000bd56      488b4018       mov rax, qword [rax + 0x18]
0x0000bd5a      4c8b2c18       mov r13, qword [rax + rbx]
0x0000bd5e      488b5c2418     mov rbx, qword [rsp + 0x18]
0x0000bd63      488d446d00     lea rax, [rbp + rbp*2]
0x0000bd68      488d1cc3       lea rbx, [rbx + rax*8]
0x0000bd6c      48c703010000.  mov qword [rbx], 1
0x0000bd73      48c743080100.  mov qword [rbx + 8], 1
0x0000bd7b      e8a05effff     call sym.imp.malloc
0x0000bd80      4885c0         test rax, rax
0x0000bd83      48894310       mov qword [rbx + 0x10], rax
0x0000bd87      0f84e0fcffff   je 0xba6d
0x0000bd8d      4c8928         mov qword [rax], r13
0x0000bd90      4883c501       add rbp, 1
0x0000bd94      660fefc0       pxor xmm0, xmm0
0x0000bd98      410f290424     movaps xmmword [r12], xmm0
0x0000bd9d      410f29442410   movaps xmmword [r12 + 0x10], xmm0
0x0000bda3      e9d7f9ffff     jmp 0xb77f
0x0000bda8      0f1f84000000.  nop dword [rax + rax]
0x0000bdb0      488b442418     mov rax, qword [rsp + 0x18]
0x0000bdb5      488d5810       lea rbx, [rax + 0x10]
0x0000bdb9      488d446d00     lea rax, [rbp + rbp*2]
0x0000bdbe      488d2cc3       lea rbp, [rbx + rax*8]
0x0000bdc2      660f1f440000   nop word [rax + rax]
0x0000bdc8      488b3b         mov rdi, qword [rbx]
0x0000bdcb      4883c318       add rbx, 0x18
0x0000bdcf      e8fc5bffff     call sym.imp.free
0x0000bdd4      4839dd         cmp rbp, rbx
0x0000bdd7      75ef           jne 0xbdc8
0x0000bdd9      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000bdde      e8ed5bffff     call sym.imp.free
0x0000bde3      e9a8fcffff     jmp 0xba90
0x0000bde8      0f1f84000000.  nop dword [rax + rax]
0x0000bdf0      488b742430     mov rsi, qword [rsp + 0x30]
0x0000bdf5      83beb4000000.  cmp dword [rsi + 0xb4], 1
0x0000bdfc      0f8e03010000   jle 0xbf05
0x0000be02      488b7678       mov rsi, qword [rsi + 0x78]
0x0000be06      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000be0e      31d2           xor edx, edx
0x0000be10      498b0c14       mov rcx, qword [r12 + rdx]
0x0000be14      480b0c16       or rcx, qword [rsi + rdx]
0x0000be18      49890c14       mov qword [r12 + rdx], rcx
0x0000be1c      4883c208       add rdx, 8
0x0000be20      4883fa20       cmp rdx, 0x20                           ; "@"
0x0000be24      75ea           jne 0xbe10
0x0000be26      488b5c2430     mov rbx, qword [rsp + 0x30]
0x0000be2b      488b93d80000.  mov rdx, qword [rbx + 0xd8]
0x0000be32      f6c240         test dl, 0x40                           ; segment.PHDR
0x0000be35      750c           jne 0xbe43
0x0000be37      4881a4249000.  and qword [rsp + 0x90], 0xfffffffffffffbff
0x0000be43      81e280000000   and edx, 0x80
0x0000be49      0f8497fcffff   je 0xbae6
0x0000be4f      4883a4249000.  and qword [rsp + 0x90], 0xfffffffffffffffe
0x0000be58      e989fcffff     jmp 0xbae6
0x0000be5d      0f1f00         nop dword [rax]
0x0000be60      488b94249000.  mov rdx, qword [rsp + 0x90]
0x0000be68      660fefc0       pxor xmm0, xmm0
0x0000be6c      80e604         and dh, 4
0x0000be6f      410f290424     movaps xmmword [r12], xmm0
0x0000be74      410f29442410   movaps xmmword [r12 + 0x10], xmm0
0x0000be7a      0f84fff8ffff   je 0xb77f
0x0000be80      48c784249000.  mov qword [rsp + 0x90], 0x400           ; [0x400:8]=0x12000002c3
0x0000be8c      e966fcffff     jmp 0xbaf7
0x0000be91      41f6450a40     test byte [r13 + 0xa], 0x40
0x0000be96      0f85f8feffff   jne 0xbd94
0x0000be9c      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000bea1      83bfb4000000.  cmp dword [rdi + 0xb4], 1
0x0000bea8      0f8fc7fcffff   jg 0xbb75
0x0000beae      488b742430     mov rsi, qword [rsp + 0x30]
0x0000beb3      31c9           xor ecx, ecx
0x0000beb5      31d2           xor edx, edx
0x0000beb7      488b84d6b800.  mov rax, qword [rsi + rdx*8 + 0xb8]
0x0000bebf      48f7d0         not rax
0x0000bec2      492304d4       and rax, qword [r12 + rdx*8]
0x0000bec6      498904d4       mov qword [r12 + rdx*8], rax
0x0000beca      4883c201       add rdx, 1
0x0000bece      4809c1         or rcx, rax
0x0000bed1      4883fa04       cmp rdx, 4
0x0000bed5      75e0           jne 0xbeb7
0x0000bed7      4885c9         test rcx, rcx
0x0000beda      0f85d0fcffff   jne 0xbbb0
0x0000bee0      e99af8ffff     jmp 0xb77f
0x0000bee5      41f6450a40     test byte [r13 + 0xa], 0x40
0x0000beea      0f84a4feffff   je 0xbd94
0x0000bef0      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000bef5      4183b8b40000.  cmp dword [r8 + 0xb4], 1
0x0000befd      0f8f1dfcffff   jg 0xbb20
0x0000bf03      eb6d           jmp 0xbf72
0x0000bf05      660f76c0       pcmpeqd xmm0, xmm0
0x0000bf09      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000bf11      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x0000bf19      0f298424a000.  movaps xmmword [rsp + 0xa0], xmm0
0x0000bf21      e900ffffff     jmp 0xbe26
0x0000bf26      662e0f1f8400.  nop word cs:[rax + rax]
0x0000bf30      498b7500       mov rsi, qword [r13]
0x0000bf34      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000bf3c      31d2           xor edx, edx
0x0000bf3e      498b0c14       mov rcx, qword [r12 + rdx]
0x0000bf42      480b0c16       or rcx, qword [rsi + rdx]
0x0000bf46      49890c14       mov qword [r12 + rdx], rcx
0x0000bf4a      4883c208       add rdx, 8
0x0000bf4e      4883fa20       cmp rdx, 0x20                           ; "@"
0x0000bf52      75ea           jne 0xbf3e
0x0000bf54      e98dfbffff     jmp 0xbae6
0x0000bf59      660f76c0       pcmpeqd xmm0, xmm0
0x0000bf5d      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000bf65      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x0000bf6d      e9b4feffff     jmp 0xbe26
0x0000bf72      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000bf77      31f6           xor esi, esi
0x0000bf79      31d2           xor edx, edx
0x0000bf7b      498b0cd4       mov rcx, qword [r12 + rdx*8]
0x0000bf7f      48238cd7b800.  and rcx, qword [rdi + rdx*8 + 0xb8]
0x0000bf87      49890cd4       mov qword [r12 + rdx*8], rcx
0x0000bf8b      4883c201       add rdx, 1
0x0000bf8f      4809ce         or rsi, rcx
0x0000bf92      4883fa04       cmp rdx, 4
0x0000bf96      75e3           jne 0xbf7b
0x0000bf98      4885f6         test rsi, rsi
0x0000bf9b      0f85b4fbffff   jne 0xbb55
0x0000bfa1      e9d9f7ffff     jmp 0xb77f
0x0000bfa6      8b54246c       mov edx, dword [rsp + 0x6c]
0x0000bfaa      85d2           test edx, edx
0x0000bfac      0f8485000000   je 0xc037
0x0000bfb2      660f1f440000   nop word [rax + rax]
0x0000bfb8      488b6c2420     mov rbp, qword [rsp + 0x20]
0x0000bfbd      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000bfc2      e8095affff     call sym.imp.free
0x0000bfc7      4c8ba4248000.  mov r12, qword [rsp + 0x80]
0x0000bfcf      4c89e7         mov rdi, r12
0x0000bfd2      e8f959ffff     call sym.imp.free
0x0000bfd7      488b442418     mov rax, qword [rsp + 0x18]
0x0000bfdc      488d5810       lea rbx, [rax + 0x10]
0x0000bfe0      488d446d00     lea rax, [rbp + rbp*2]
0x0000bfe5      488d2cc3       lea rbp, [rbx + rax*8]
0x0000bfe9      0f1f80000000.  nop dword [rax]
0x0000bff0      488b3b         mov rdi, qword [rbx]
0x0000bff3      4883c318       add rbx, 0x18
0x0000bff7      e8d459ffff     call sym.imp.free
0x0000bffc      4839dd         cmp rbp, rbx
0x0000bfff      75ef           jne 0xbff0
0x0000c001      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000c006      e8c559ffff     call sym.imp.free
0x0000c00b      e980faffff     jmp 0xba90
0x0000c010      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000c015      b901000000     mov ecx, 1
0x0000c01a      4c89f2         mov rdx, r14
0x0000c01d      4889ee         mov rsi, rbp
0x0000c020      e81bdfffff     call sym.re_acquire_state_context
0x0000c025      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000c02a      4885c0         test rax, rax
0x0000c02d      488904df       mov qword [rdi + rbx*8], rax
0x0000c031      0f846fffffff   je 0xbfa6
0x0000c037      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000c03c      483b04df       cmp rax, qword [rdi + rbx*8]
0x0000c040      7419           je 0xc05b
0x0000c042      0fb67c244f     movzx edi, byte [rsp + 0x4f]
0x0000c047      83bdb4000000.  cmp dword [rbp + 0xb4], 2
0x0000c04e      b801000000     mov eax, 1
0x0000c053      0f4df8         cmovge edi, eax
0x0000c056      40887c244f     mov byte [rsp + 0x4f], dil
0x0000c05b      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000c060      4889ee         mov rsi, rbp
0x0000c063      b902000000     mov ecx, 2
0x0000c068      4c89f2         mov rdx, r14
0x0000c06b      e8d0deffff     call sym.re_acquire_state_context
0x0000c070      488b742438     mov rsi, qword [rsp + 0x38]
0x0000c075      4885c0         test rax, rax
0x0000c078      488904de       mov qword [rsi + rbx*8], rax
0x0000c07c      0f858ff8ffff   jne 0xb911
0x0000c082      8b44246c       mov eax, dword [rsp + 0x6c]
0x0000c086      85c0           test eax, eax
0x0000c088      0f8483f8ffff   je 0xb911
0x0000c08e      e925ffffff     jmp 0xbfb8
0x0000c093      0f1f440000     nop dword [rax + rax]
0x0000c098      8b4c246c       mov ecx, dword [rsp + 0x6c]
0x0000c09c      85c9           test ecx, ecx
0x0000c09e      0f8448f8ffff   je 0xb8ec
0x0000c0a4      e90fffffff     jmp 0xbfb8
0x0000c0a9      be00020000     mov esi, 0x200
0x0000c0ae      bf08000000     mov edi, 8
0x0000c0b3      e8085bffff     call sym.imp.calloc
0x0000c0b8      4989c3         mov r11, rax
0x0000c0bb      488b442408     mov rax, qword [rsp + 8]
0x0000c0c0      4d85db         test r11, r11
0x0000c0c3      4c895860       mov qword [rax + 0x60], r11
0x0000c0c7      0f84f0feffff   je 0xbfbd
0x0000c0cd      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x0000c0d2      4c8b542410     mov r10, qword [rsp + 0x10]
0x0000c0d7      4d89dc         mov r12, r11
0x0000c0da      4c8b742430     mov r14, qword [rsp + 0x30]
0x0000c0df      488b542420     mov rdx, qword [rsp + 0x20]
0x0000c0e4      31db           xor ebx, ebx
0x0000c0e6      4983c520       add r13, 0x20                           ; "@"
0x0000c0ea      488b041a       mov rax, qword [rdx + rbx]
0x0000c0ee      4885c0         test rax, rax
0x0000c0f1      741c           je 0xc10f
0x0000c0f3      4c89e6         mov rsi, r12
0x0000c0f6      b901000000     mov ecx, 1
0x0000c0fb      a801           test al, 1
0x0000c0fd      0f85a9000000   jne 0xc1ac
0x0000c103      4801c9         add rcx, rcx
0x0000c106      4883c608       add rsi, 8
0x0000c10a      48d1e8         shr rax, 1
0x0000c10d      75ec           jne 0xc0fb
0x0000c10f      4883c308       add rbx, 8
0x0000c113      4981c4000200.  add r12, 0x200
0x0000c11a      4883fb20       cmp rbx, 0x20                           ; "@"
0x0000c11e      75ca           jne 0xc0ea
0x0000c120      e9b9f8ffff     jmp 0xb9de
0x0000c125      0f1f00         nop dword [rax]
0x0000c128      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000c12d      4a858c0f0018.  test qword [rdi + r9 + 0x1800], rcx
0x0000c135      7570           jne 0xc1a7
0x0000c137      4a8d3c0b       lea rdi, [rbx + r9]
0x0000c13b      4531c0         xor r8d, r8d
0x0000c13e      6690           nop
0x0000c140      4c8b17         mov r10, qword [rdi]
0x0000c143      4983c001       add r8, 1
0x0000c147      4883c720       add rdi, 0x20                           ; "@"
0x0000c14b      4921ca         and r10, rcx
0x0000c14e      4d85d2         test r10, r10
0x0000c151      74ed           je 0xc140
0x0000c153      49c1e003       shl r8, 3
0x0000c157      4b858c0fb800.  test qword [r15 + r9 + 0xb8], rcx
0x0000c15f      740d           je 0xc16e
0x0000c161      4b8b7c0500     mov rdi, qword [r13 + r8]
0x0000c166      48893e         mov qword [rsi], rdi
0x0000c169      e95af8ffff     jmp 0xb9c8
0x0000c16e      4b8b3c04       mov rdi, qword [r12 + r8]
0x0000c172      48893e         mov qword [rsi], rdi
0x0000c175      e94ef8ffff     jmp 0xb9c8
0x0000c17a      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000c17f      e84c58ffff     call sym.imp.free
0x0000c184      be00010000     mov esi, 0x100
0x0000c189      bf08000000     mov edi, 8
0x0000c18e      e82d5affff     call sym.imp.calloc
0x0000c193      488b5c2408     mov rbx, qword [rsp + 8]
0x0000c198      4885c0         test rax, rax
0x0000c19b      48894358       mov qword [rbx + 0x58], rax
0x0000c19f      0f95c0         setne al
0x0000c1a2      e9ebf8ffff     jmp 0xba92
0x0000c1a7      4531c0         xor r8d, r8d
0x0000c1aa      ebab           jmp 0xc157
0x0000c1ac      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000c1b1      48858c1f0018.  test qword [rdi + rbx + 0x1800], rcx
0x0000c1b9      7535           jne 0xc1f0
0x0000c1bb      4d8d4c1d00     lea r9, [r13 + rbx]
0x0000c1c0      4531c0         xor r8d, r8d
0x0000c1c3      4d8b39         mov r15, qword [r9]
0x0000c1c6      4983c001       add r8, 1
0x0000c1ca      4983c120       add r9, 0x20                            ; "@"
0x0000c1ce      4c89c7         mov rdi, r8
0x0000c1d1      4921cf         and r15, rcx
0x0000c1d4      4d85ff         test r15, r15
0x0000c1d7      74ea           je 0xc1c3
0x0000c1d9      4d8b04fa       mov r8, qword [r10 + rdi*8]
0x0000c1dd      4c8906         mov qword [rsi], r8
0x0000c1e0      498b3cfe       mov rdi, qword [r14 + rdi*8]
0x0000c1e4      4889be000800.  mov qword [rsi + 0x800], rdi
0x0000c1eb      e913ffffff     jmp 0xc103
0x0000c1f0      31ff           xor edi, edi
0x0000c1f2      ebe5           jmp 0xc1d9
0x0000c1f4      e8d758ffff     call sym.imp.__stack_chk_fail
0x0000c1f9      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000c1fe      e8cd57ffff     call sym.imp.free
0x0000c203      4885ed         test rbp, rbp
0x0000c206      0f8584f8ffff   jne 0xba90
0x0000c20c      e973ffffff     jmp 0xc184
0x0000c211      0f1f440000     nop dword [rax + rax]
0x0000c216      662e0f1f8400.  nop word cs:[rax + rax]
;-- calc_first:
0x0000c220      807e3010       cmp byte [rsi + 0x30], 0x10
0x0000c224      7462           je 0xc288
0x0000c226      55             push rbp
0x0000c227      53             push rbx
0x0000c228      4889f3         mov rbx, rsi
0x0000c22b      4889fd         mov rbp, rdi
0x0000c22e      4883ec08       sub rsp, 8
0x0000c232      48897318       mov qword [rbx + 0x18], rsi
0x0000c236      488b5330       mov rdx, qword [rbx + 0x30]
0x0000c23a      488b7628       mov rsi, qword [rsi + 0x28]
0x0000c23e      e84dc1ffff     call sym.re_dfa_add_node
0x0000c243      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000c247      4889c2         mov rdx, rax
0x0000c24a      48894338       mov qword [rbx + 0x38], rax
0x0000c24e      7450           je 0xc2a0
0x0000c250      31c0           xor eax, eax
0x0000c252      807b300c       cmp byte [rbx + 0x30], 0xc
0x0000c256      7524           jne 0xc27c
0x0000c258      8b4b28         mov ecx, dword [rbx + 0x28]
0x0000c25b      48c1e204       shl rdx, 4
0x0000c25f      48035500       add rdx, qword [rbp]
0x0000c263      81e1ff030000   and ecx, 0x3ff
0x0000c269      c1e108         shl ecx, 8
0x0000c26c      89ce           mov esi, ecx
0x0000c26e      8b4a08         mov ecx, dword [rdx + 8]
0x0000c271      81e1ff00fcff   and ecx, 0xfffc00ff
0x0000c277      09f1           or ecx, esi
0x0000c279      894a08         mov dword [rdx + 8], ecx
0x0000c27c      4883c408       add rsp, 8
0x0000c280      5b             pop rbx
0x0000c281      5d             pop rbp
0x0000c282      c3             ret
0x0000c283      0f1f440000     nop dword [rax + rax]
0x0000c288      488b4608       mov rax, qword [rsi + 8]
0x0000c28c      488b5018       mov rdx, qword [rax + 0x18]
0x0000c290      488b4038       mov rax, qword [rax + 0x38]
0x0000c294      48895618       mov qword [rsi + 0x18], rdx
0x0000c298      48894638       mov qword [rsi + 0x38], rax
0x0000c29c      31c0           xor eax, eax
0x0000c29e      c3             ret
0x0000c29f      90             nop
0x0000c2a0      b80c000000     mov eax, 0xc
0x0000c2a5      ebd5           jmp 0xc27c
0x0000c2a7      660f1f840000.  nop word [rax + rax]
;-- free_fail_stack_return.part.24:
0x0000c2b0      4154           push r12
0x0000c2b2      55             push rbp
0x0000c2b3      4889fd         mov rbp, rdi
0x0000c2b6      53             push rbx
0x0000c2b7      48833f00       cmp qword [rdi], 0
0x0000c2bb      7e35           jle 0xc2f2
0x0000c2bd      31db           xor ebx, ebx
0x0000c2bf      4531e4         xor r12d, r12d
0x0000c2c2      660f1f440000   nop word [rax + rax]
0x0000c2c8      488b4510       mov rax, qword [rbp + 0x10]
0x0000c2cc      4983c401       add r12, 1
0x0000c2d0      488b7c1828     mov rdi, qword [rax + rbx + 0x28]
0x0000c2d5      e8f656ffff     call sym.imp.free
0x0000c2da      488b4510       mov rax, qword [rbp + 0x10]
0x0000c2de      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0000c2e3      4883c330       add rbx, 0x30
0x0000c2e7      e8e456ffff     call sym.imp.free
0x0000c2ec      4c3b6500       cmp r12, qword [rbp]
0x0000c2f0      7cd6           jl 0xc2c8
0x0000c2f2      5b             pop rbx
0x0000c2f3      488b7d10       mov rdi, qword [rbp + 0x10]
0x0000c2f7      5d             pop rbp
0x0000c2f8      415c           pop r12
0x0000c2fa      e9d156ffff     jmp sym.imp.free
0x0000c2ff      90             nop
;-- pop_fail_stack.isra.25:
0x0000c300      4154           push r12
0x0000c302      55             push rbp
0x0000c303      53             push rbx
0x0000c304      488b07         mov rax, qword [rdi]
0x0000c307      4883e801       sub rax, 1
0x0000c30b      4885c0         test rax, rax
0x0000c30e      488907         mov qword [rdi], rax
0x0000c311      7862           js 0xc375
0x0000c313      488d1c40       lea rbx, [rax + rax*2]
0x0000c317      488b06         mov rax, qword [rsi]
0x0000c31a      4989f4         mov r12, rsi
0x0000c31d      48c1e104       shl rcx, 4
0x0000c321      4c89cd         mov rbp, r9
0x0000c324      4c89c7         mov rdi, r8
0x0000c327      48c1e304       shl rbx, 4
0x0000c32b      4801d8         add rax, rbx
0x0000c32e      488b30         mov rsi, qword [rax]
0x0000c331      488932         mov qword [rdx], rsi
0x0000c334      488b7010       mov rsi, qword [rax + 0x10]
0x0000c338      4889ca         mov rdx, rcx
0x0000c33b      e8a058ffff     call sym.imp.memcpy
0x0000c340      488b7d10       mov rdi, qword [rbp + 0x10]
0x0000c344      e88756ffff     call sym.imp.free
0x0000c349      498b0424       mov rax, qword [r12]
0x0000c34d      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0000c352      e87956ffff     call sym.imp.free
0x0000c357      49031c24       add rbx, qword [r12]
0x0000c35b      f30f6f4318     movdqu xmm0, xmmword [rbx + 0x18]
0x0000c360      0f294500       movaps xmmword [rbp], xmm0
0x0000c364      488b4328       mov rax, qword [rbx + 0x28]
0x0000c368      48894510       mov qword [rbp + 0x10], rax
0x0000c36c      488b4308       mov rax, qword [rbx + 8]
0x0000c370      5b             pop rbx
0x0000c371      5d             pop rbp
0x0000c372      415c           pop r12
0x0000c374      c3             ret
0x0000c375      488d0dc4ac00.  lea rcx, obj.__PRETTY_FUNCTION__.8040   ; 0x17040 ; "pop_fail_stack"
0x0000c37c      488d35fda600.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x16a80 ; "../coreutils-8.31/lib/regexec.c"
0x0000c383      488d3d5ea700.  lea rdi, str.num____0                   ; 0x16ae8 ; "num >= 0"
0x0000c38a      ba55050000     mov edx, 0x555
0x0000c38f      e8bc57ffff     call sym.imp.__assert_fail
0x0000c394      6690           nop
0x0000c396      662e0f1f8400.  nop word cs:[rax + rax]
;-- build_equiv_class.isra.27:
;-- build_collating_symbol.isra.28:
0x0000c3a0      55             push rbp
0x0000c3a1      53             push rbx
0x0000c3a2      4889fd         mov rbp, rdi
0x0000c3a5      4889f7         mov rdi, rsi
0x0000c3a8      4889f3         mov rbx, rsi
0x0000c3ab      4883ec08       sub rsp, 8
0x0000c3af      e8fc56ffff     call sym.imp.strlen
0x0000c3b4      4883f801       cmp rax, 1
0x0000c3b8      7526           jne 0xc3e0
0x0000c3ba      0fb60b         movzx ecx, byte [rbx]
0x0000c3bd      4889ca         mov rdx, rcx
0x0000c3c0      83e13f         and ecx, 0x3f
0x0000c3c3      48c1ea03       shr rdx, 3
0x0000c3c7      48d3e0         shl rax, cl
0x0000c3ca      83e218         and edx, 0x18
0x0000c3cd      4809441500     or qword [rbp + rdx], rax
0x0000c3d2      4883c408       add rsp, 8
0x0000c3d6      31c0           xor eax, eax
0x0000c3d8      5b             pop rbx
0x0000c3d9      5d             pop rbp
0x0000c3da      c3             ret
0x0000c3db      0f1f440000     nop dword [rax + rax]
0x0000c3e0      4883c408       add rsp, 8
0x0000c3e4      b803000000     mov eax, 3
0x0000c3e9      5b             pop rbx
0x0000c3ea      5d             pop rbp
0x0000c3eb      c3             ret
0x0000c3ec      0f1f4000       nop dword [rax]
;-- build_charclass.isra.29:
0x0000c3f0      4156           push r14
0x0000c3f2      4155           push r13
0x0000c3f4      4989cd         mov r13, rcx
0x0000c3f7      4154           push r12
0x0000c3f9      55             push rbp
0x0000c3fa      4d89cc         mov r12, r9
0x0000c3fd      53             push rbx
0x0000c3fe      4889fd         mov rbp, rdi
0x0000c401      4889f3         mov rbx, rsi
0x0000c404      4883ec10       sub rsp, 0x10
0x0000c408      48f744244000.  test qword [rsp + 0x40], 0x400000
0x0000c411      7425           je 0xc438
0x0000c413      488d3ddda600.  lea rdi, str.upper                      ; 0x16af7 ; "upper"
0x0000c41a      b906000000     mov ecx, 6
0x0000c41f      4c89ce         mov rsi, r9
0x0000c422      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c424      0f97c0         seta al
0x0000c427      1c00           sbb al, 0
0x0000c429      84c0           test al, al
0x0000c42b      0f85f5000000   jne 0xc526
0x0000c431      4c8d25b9a600.  lea r12, str.alpha                      ; 0x16af1 ; "alpha"
0x0000c438      498b4d00       mov rcx, qword [r13]
0x0000c43c      493908         cmp qword [r8], rcx
0x0000c43f      488b02         mov rax, qword [rdx]
0x0000c442      0f8411010000   je 0xc559
0x0000c448      488d5101       lea rdx, [rcx + 1]
0x0000c44c      4c89e7         mov rdi, r12
0x0000c44f      49895500       mov qword [r13], rdx
0x0000c453      4c8d2cc8       lea r13, [rax + rcx*8]
0x0000c457      e84457ffff     call sym.imp.wctype
0x0000c45c      488d3da0a600.  lea rdi, str.alnum                      ; 0x16b03 ; "alnum"
0x0000c463      49894500       mov qword [r13], rax
0x0000c467      b906000000     mov ecx, 6
0x0000c46c      4c89e6         mov rsi, r12
0x0000c46f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c471      0f97c0         seta al
0x0000c474      1c00           sbb al, 0
0x0000c476      84c0           test al, al
0x0000c478      746e           je 0xc4e8
0x0000c47a      488d3d88a600.  lea rdi, str.cntrl                      ; 0x16b09 ; "cntrl"
0x0000c481      b906000000     mov ecx, 6
0x0000c486      4c89e6         mov rsi, r12
0x0000c489      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c48b      0f97c0         seta al
0x0000c48e      1c00           sbb al, 0
0x0000c490      84c0           test al, al
0x0000c492      0f8500010000   jne 0xc598
0x0000c498      e82359ffff     call sym.imp.__ctype_b_loc
0x0000c49d      31c9           xor ecx, ecx
0x0000c49f      4885ed         test rbp, rbp
0x0000c4a2      488b10         mov rdx, qword [rax]
0x0000c4a5      bf01000000     mov edi, 1
0x0000c4aa      0f85ba020000   jne 0xc76a
0x0000c4b0      f6044a02       test byte [rdx + rcx*2], 2
0x0000c4b4      7411           je 0xc4c7
0x0000c4b6      4889c8         mov rax, rcx
0x0000c4b9      4889fe         mov rsi, rdi
0x0000c4bc      48c1f806       sar rax, 6
0x0000c4c0      48d3e6         shl rsi, cl
0x0000c4c3      480934c3       or qword [rbx + rax*8], rsi
0x0000c4c7      4883c101       add rcx, 1
0x0000c4cb      4881f9000100.  cmp rcx, 0x100
0x0000c4d2      75dc           jne 0xc4b0
0x0000c4d4      31c0           xor eax, eax
0x0000c4d6      4883c410       add rsp, 0x10
0x0000c4da      5b             pop rbx
0x0000c4db      5d             pop rbp
0x0000c4dc      415c           pop r12
0x0000c4de      415d           pop r13
0x0000c4e0      415e           pop r14
0x0000c4e2      c3             ret
0x0000c4e3      0f1f440000     nop dword [rax + rax]
0x0000c4e8      e8d358ffff     call sym.imp.__ctype_b_loc
0x0000c4ed      31c9           xor ecx, ecx
0x0000c4ef      4885ed         test rbp, rbp
0x0000c4f2      488b10         mov rdx, qword [rax]
0x0000c4f5      bf01000000     mov edi, 1
0x0000c4fa      0f85ea010000   jne 0xc6ea
0x0000c500      f6044a08       test byte [rdx + rcx*2], 8
0x0000c504      7411           je 0xc517
0x0000c506      4889c8         mov rax, rcx
0x0000c509      4889fe         mov rsi, rdi
0x0000c50c      48c1f806       sar rax, 6
0x0000c510      48d3e6         shl rsi, cl
0x0000c513      480934c3       or qword [rbx + rax*8], rsi
0x0000c517      4883c101       add rcx, 1
0x0000c51b      4881f9000100.  cmp rcx, 0x100
0x0000c522      75dc           jne 0xc500
0x0000c524      ebae           jmp 0xc4d4
0x0000c526      488d3dd0a500.  lea rdi, str.lower                      ; 0x16afd ; "lower"
0x0000c52d      b906000000     mov ecx, 6
0x0000c532      4c89ce         mov rsi, r9
0x0000c535      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c537      498b4d00       mov rcx, qword [r13]
0x0000c53b      0f97c0         seta al
0x0000c53e      1c00           sbb al, 0
0x0000c540      84c0           test al, al
0x0000c542      488d05a8a500.  lea rax, str.alpha                      ; 0x16af1 ; "alpha"
0x0000c549      4c0f44e0       cmove r12, rax
0x0000c54d      493908         cmp qword [r8], rcx
0x0000c550      488b02         mov rax, qword [rdx]
0x0000c553      0f85effeffff   jne 0xc448
0x0000c559      4c8d740901     lea r14, [rcx + rcx + 1]
0x0000c55e      4889c7         mov rdi, rax
0x0000c561      4c89442408     mov qword [rsp + 8], r8
0x0000c566      48891424       mov qword [rsp], rdx
0x0000c56a      4a8d34f50000.  lea rsi, [r14*8]
0x0000c572      e81957ffff     call sym.imp.realloc
0x0000c577      4885c0         test rax, rax
0x0000c57a      0f8418030000   je 0xc898
0x0000c580      488b1424       mov rdx, qword [rsp]
0x0000c584      4c8b442408     mov r8, qword [rsp + 8]
0x0000c589      488902         mov qword [rdx], rax
0x0000c58c      4d8930         mov qword [r8], r14
0x0000c58f      498b4d00       mov rcx, qword [r13]
0x0000c593      e9b0feffff     jmp 0xc448
0x0000c598      488d3d5ea500.  lea rdi, str.lower                      ; 0x16afd ; "lower"
0x0000c59f      b906000000     mov ecx, 6
0x0000c5a4      4c89e6         mov rsi, r12
0x0000c5a7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c5a9      0f97c0         seta al
0x0000c5ac      1c00           sbb al, 0
0x0000c5ae      84c0           test al, al
0x0000c5b0      7468           je 0xc61a
0x0000c5b2      488d3d56a500.  lea rdi, str.space                      ; 0x16b0f ; "space"
0x0000c5b9      b906000000     mov ecx, 6
0x0000c5be      4c89e6         mov rsi, r12
0x0000c5c1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c5c3      0f97c0         seta al
0x0000c5c6      1c00           sbb al, 0
0x0000c5c8      84c0           test al, al
0x0000c5ca      0f8592000000   jne 0xc662
0x0000c5d0      e8eb57ffff     call sym.imp.__ctype_b_loc
0x0000c5d5      31c9           xor ecx, ecx
0x0000c5d7      4885ed         test rbp, rbp
0x0000c5da      488b10         mov rdx, qword [rax]
0x0000c5dd      bf01000000     mov edi, 1
0x0000c5e2      0f8556030000   jne 0xc93e
0x0000c5e8      0f1f84000000.  nop dword [rax + rax]
0x0000c5f0      f6444a0120     test byte [rdx + rcx*2 + 1], 0x20
0x0000c5f5      7411           je 0xc608
0x0000c5f7      4889c8         mov rax, rcx
0x0000c5fa      4889fe         mov rsi, rdi
0x0000c5fd      48c1f806       sar rax, 6
0x0000c601      48d3e6         shl rsi, cl
0x0000c604      480934c3       or qword [rbx + rax*8], rsi
0x0000c608      4883c101       add rcx, 1
0x0000c60c      4881f9000100.  cmp rcx, 0x100
0x0000c613      75db           jne 0xc5f0
0x0000c615      e9bafeffff     jmp 0xc4d4
0x0000c61a      e8a157ffff     call sym.imp.__ctype_b_loc
0x0000c61f      31c9           xor ecx, ecx
0x0000c621      4885ed         test rbp, rbp
0x0000c624      488b10         mov rdx, qword [rax]
0x0000c627      bf01000000     mov edi, 1
0x0000c62c      0f85d0010000   jne 0xc802
0x0000c632      660f1f440000   nop word [rax + rax]
0x0000c638      f6444a0102     test byte [rdx + rcx*2 + 1], 2
0x0000c63d      7411           je 0xc650
0x0000c63f      4889c8         mov rax, rcx
0x0000c642      4889fe         mov rsi, rdi
0x0000c645      48c1f806       sar rax, 6
0x0000c649      48d3e6         shl rsi, cl
0x0000c64c      480934c3       or qword [rbx + rax*8], rsi
0x0000c650      4883c101       add rcx, 1
0x0000c654      4881f9000100.  cmp rcx, 0x100
0x0000c65b      75db           jne 0xc638
0x0000c65d      e972feffff     jmp 0xc4d4
0x0000c662      488d3d88a400.  lea rdi, str.alpha                      ; 0x16af1 ; "alpha"
0x0000c669      b906000000     mov ecx, 6
0x0000c66e      4c89e6         mov rsi, r12
0x0000c671      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c673      0f97c0         seta al
0x0000c676      1c00           sbb al, 0
0x0000c678      84c0           test al, al
0x0000c67a      0f84a3000000   je 0xc723
0x0000c680      488d3da7a400.  lea rdi, [0x00016b2e]                   ; "digit"
0x0000c687      b906000000     mov ecx, 6
0x0000c68c      4c89e6         mov rsi, r12
0x0000c68f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c691      0f97c0         seta al
0x0000c694      1c00           sbb al, 0
0x0000c696      84c0           test al, al
0x0000c698      0f8505010000   jne 0xc7a3
0x0000c69e      e81d57ffff     call sym.imp.__ctype_b_loc
0x0000c6a3      31c9           xor ecx, ecx
0x0000c6a5      4885ed         test rbp, rbp
0x0000c6a8      488b10         mov rdx, qword [rax]
0x0000c6ab      bf01000000     mov edi, 1
0x0000c6b0      0f85a4040000   jne 0xcb5a
0x0000c6b6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c6c0      f6444a0108     test byte [rdx + rcx*2 + 1], 8
0x0000c6c5      7411           je 0xc6d8
0x0000c6c7      4889c8         mov rax, rcx
0x0000c6ca      4889fe         mov rsi, rdi
0x0000c6cd      48c1f806       sar rax, 6
0x0000c6d1      48d3e6         shl rsi, cl
0x0000c6d4      480934c3       or qword [rbx + rax*8], rsi
0x0000c6d8      4883c101       add rcx, 1
0x0000c6dc      4881f9000100.  cmp rcx, 0x100
0x0000c6e3      75db           jne 0xc6c0
0x0000c6e5      e9eafdffff     jmp 0xc4d4
0x0000c6ea      31c0           xor eax, eax
0x0000c6ec      0f1f4000       nop dword [rax]
0x0000c6f0      f6044208       test byte [rdx + rax*2], 8
0x0000c6f4      741c           je 0xc712
0x0000c6f6      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000c6fb      4989fa         mov r10, rdi
0x0000c6fe      4889ce         mov rsi, rcx
0x0000c701      83e13f         and ecx, 0x3f
0x0000c704      48c1ee03       shr rsi, 3
0x0000c708      49d3e2         shl r10, cl
0x0000c70b      83e618         and esi, 0x18
0x0000c70e      4c091433       or qword [rbx + rsi], r10
0x0000c712      4883c001       add rax, 1
0x0000c716      483d00010000   cmp rax, 0x100
0x0000c71c      75d2           jne 0xc6f0
0x0000c71e      e9b1fdffff     jmp 0xc4d4
0x0000c723      e89856ffff     call sym.imp.__ctype_b_loc
0x0000c728      31c9           xor ecx, ecx
0x0000c72a      4885ed         test rbp, rbp
0x0000c72d      488b10         mov rdx, qword [rax]
0x0000c730      bf01000000     mov edi, 1
0x0000c735      0f85cd010000   jne 0xc908
0x0000c73b      0f1f440000     nop dword [rax + rax]
0x0000c740      f6444a0104     test byte [rdx + rcx*2 + 1], 4
0x0000c745      7411           je 0xc758
0x0000c747      4889c8         mov rax, rcx
0x0000c74a      4889fe         mov rsi, rdi
0x0000c74d      48c1f806       sar rax, 6
0x0000c751      48d3e6         shl rsi, cl
0x0000c754      480934c3       or qword [rbx + rax*8], rsi
0x0000c758      4883c101       add rcx, 1
0x0000c75c      4881f9000100.  cmp rcx, 0x100
0x0000c763      75db           jne 0xc740
0x0000c765      e96afdffff     jmp 0xc4d4
0x0000c76a      31c0           xor eax, eax
0x0000c76c      0f1f4000       nop dword [rax]
0x0000c770      f6044202       test byte [rdx + rax*2], 2
0x0000c774      741c           je 0xc792
0x0000c776      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000c77b      4989fb         mov r11, rdi
0x0000c77e      4889ce         mov rsi, rcx
0x0000c781      83e13f         and ecx, 0x3f
0x0000c784      48c1ee03       shr rsi, 3
0x0000c788      49d3e3         shl r11, cl
0x0000c78b      83e618         and esi, 0x18
0x0000c78e      4c091c33       or qword [rbx + rsi], r11
0x0000c792      4883c001       add rax, 1
0x0000c796      483d00010000   cmp rax, 0x100
0x0000c79c      75d2           jne 0xc770
0x0000c79e      e931fdffff     jmp 0xc4d4
0x0000c7a3      488d3d6ba300.  lea rdi, str.print                      ; 0x16b15 ; "print"
0x0000c7aa      b906000000     mov ecx, 6
0x0000c7af      4c89e6         mov rsi, r12
0x0000c7b2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c7b4      0f97c0         seta al
0x0000c7b7      1c00           sbb al, 0
0x0000c7b9      84c0           test al, al
0x0000c7bb      757f           jne 0xc83c
0x0000c7bd      e8fe55ffff     call sym.imp.__ctype_b_loc
0x0000c7c2      31c9           xor ecx, ecx
0x0000c7c4      4885ed         test rbp, rbp
0x0000c7c7      488b10         mov rdx, qword [rax]
0x0000c7ca      bf01000000     mov edi, 1
0x0000c7cf      0f85f2030000   jne 0xcbc7
0x0000c7d5      0f1f00         nop dword [rax]
0x0000c7d8      f6444a0140     test byte [rdx + rcx*2 + 1], 0x40
0x0000c7dd      7411           je 0xc7f0
0x0000c7df      4889c8         mov rax, rcx
0x0000c7e2      4889fe         mov rsi, rdi
0x0000c7e5      48c1f806       sar rax, 6
0x0000c7e9      48d3e6         shl rsi, cl
0x0000c7ec      480934c3       or qword [rbx + rax*8], rsi
0x0000c7f0      4883c101       add rcx, 1
0x0000c7f4      4881f9000100.  cmp rcx, 0x100
0x0000c7fb      75db           jne 0xc7d8
0x0000c7fd      e9d2fcffff     jmp 0xc4d4
0x0000c802      31c0           xor eax, eax
0x0000c804      0f1f4000       nop dword [rax]
0x0000c808      f644420102     test byte [rdx + rax*2 + 1], 2
0x0000c80d      741c           je 0xc82b
0x0000c80f      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000c814      4989fe         mov r14, rdi
0x0000c817      4889ce         mov rsi, rcx
0x0000c81a      83e13f         and ecx, 0x3f
0x0000c81d      48c1ee03       shr rsi, 3
0x0000c821      49d3e6         shl r14, cl
0x0000c824      83e618         and esi, 0x18
0x0000c827      4c093433       or qword [rbx + rsi], r14
0x0000c82b      4883c001       add rax, 1
0x0000c82f      483d00010000   cmp rax, 0x100
0x0000c835      75d1           jne 0xc808
0x0000c837      e998fcffff     jmp 0xc4d4
0x0000c83c      488d3db4a200.  lea rdi, str.upper                      ; 0x16af7 ; "upper"
0x0000c843      b906000000     mov ecx, 6
0x0000c848      4c89e6         mov rsi, r12
0x0000c84b      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c84d      0f97c0         seta al
0x0000c850      1c00           sbb al, 0
0x0000c852      84c0           test al, al
0x0000c854      754c           jne 0xc8a2
0x0000c856      e86555ffff     call sym.imp.__ctype_b_loc
0x0000c85b      31c9           xor ecx, ecx
0x0000c85d      4885ed         test rbp, rbp
0x0000c860      488b00         mov rax, qword [rax]
0x0000c863      bf01000000     mov edi, 1
0x0000c868      0f8522030000   jne 0xcb90
0x0000c86e      f644480101     test byte [rax + rcx*2 + 1], 1
0x0000c873      7411           je 0xc886
0x0000c875      4889ca         mov rdx, rcx
0x0000c878      4889fe         mov rsi, rdi
0x0000c87b      48c1fa06       sar rdx, 6
0x0000c87f      48d3e6         shl rsi, cl
0x0000c882      480934d3       or qword [rbx + rdx*8], rsi
0x0000c886      4883c101       add rcx, 1
0x0000c88a      4881f9000100.  cmp rcx, 0x100
0x0000c891      75db           jne 0xc86e
0x0000c893      e93cfcffff     jmp 0xc4d4
0x0000c898      b80c000000     mov eax, 0xc
0x0000c89d      e934fcffff     jmp 0xc4d6
0x0000c8a2      488d3d72a200.  lea rdi, str.blank                      ; 0x16b1b ; "blank"
0x0000c8a9      b906000000     mov ecx, 6
0x0000c8ae      4c89e6         mov rsi, r12
0x0000c8b1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c8b3      0f97c0         seta al
0x0000c8b6      1c00           sbb al, 0
0x0000c8b8      84c0           test al, al
0x0000c8ba      0f85ee000000   jne 0xc9ae
0x0000c8c0      e8fb54ffff     call sym.imp.__ctype_b_loc
0x0000c8c5      31c9           xor ecx, ecx
0x0000c8c7      4885ed         test rbp, rbp
0x0000c8ca      488b10         mov rdx, qword [rax]
0x0000c8cd      be01000000     mov esi, 1
0x0000c8d2      0f859c000000   jne 0xc974
0x0000c8d8      f6044a01       test byte [rdx + rcx*2], 1
0x0000c8dc      7411           je 0xc8ef
0x0000c8de      4889c8         mov rax, rcx
0x0000c8e1      4889f7         mov rdi, rsi
0x0000c8e4      48c1f806       sar rax, 6
0x0000c8e8      48d3e7         shl rdi, cl
0x0000c8eb      48093cc3       or qword [rbx + rax*8], rdi
0x0000c8ef      4883c101       add rcx, 1
0x0000c8f3      4881f9000100.  cmp rcx, 0x100
0x0000c8fa      75dc           jne 0xc8d8
0x0000c8fc      e9d3fbffff     jmp 0xc4d4
0x0000c901      0f1f80000000.  nop dword [rax]
0x0000c908      31c0           xor eax, eax
0x0000c90a      f644420104     test byte [rdx + rax*2 + 1], 4
0x0000c90f      741c           je 0xc92d
0x0000c911      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000c916      4989f9         mov r9, rdi
0x0000c919      4889ce         mov rsi, rcx
0x0000c91c      83e13f         and ecx, 0x3f
0x0000c91f      48c1ee03       shr rsi, 3
0x0000c923      49d3e1         shl r9, cl
0x0000c926      83e618         and esi, 0x18
0x0000c929      4c090c33       or qword [rbx + rsi], r9
0x0000c92d      4883c001       add rax, 1
0x0000c931      483d00010000   cmp rax, 0x100
0x0000c937      75d1           jne 0xc90a
0x0000c939      e996fbffff     jmp 0xc4d4
0x0000c93e      31c0           xor eax, eax
0x0000c940      f644420120     test byte [rdx + rax*2 + 1], 0x20
0x0000c945      741c           je 0xc963
0x0000c947      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000c94c      4989f9         mov r9, rdi
0x0000c94f      4889ce         mov rsi, rcx
0x0000c952      83e13f         and ecx, 0x3f
0x0000c955      48c1ee03       shr rsi, 3
0x0000c959      49d3e1         shl r9, cl
0x0000c95c      83e618         and esi, 0x18
0x0000c95f      4c090c33       or qword [rbx + rsi], r9
0x0000c963      4883c001       add rax, 1
0x0000c967      483d00010000   cmp rax, 0x100
0x0000c96d      75d1           jne 0xc940
0x0000c96f      e960fbffff     jmp 0xc4d4
0x0000c974      31c0           xor eax, eax
0x0000c976      bf01000000     mov edi, 1
0x0000c97b      f6044201       test byte [rdx + rax*2], 1
0x0000c97f      741c           je 0xc99d
0x0000c981      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000c986      4989fe         mov r14, rdi
0x0000c989      4889ce         mov rsi, rcx
0x0000c98c      83e13f         and ecx, 0x3f
0x0000c98f      48c1ee03       shr rsi, 3
0x0000c993      49d3e6         shl r14, cl
0x0000c996      83e618         and esi, 0x18
0x0000c999      4c093433       or qword [rbx + rsi], r14
0x0000c99d      4883c001       add rax, 1
0x0000c9a1      483d00010000   cmp rax, 0x100
0x0000c9a7      75d2           jne 0xc97b
0x0000c9a9      e926fbffff     jmp 0xc4d4
0x0000c9ae      488d356ca100.  lea rsi, str.graph                      ; 0x16b21 ; "graph"
0x0000c9b5      4c89e7         mov rdi, r12
0x0000c9b8      e81352ffff     call sym.imp.strcmp
0x0000c9bd      85c0           test eax, eax
0x0000c9bf      7579           jne 0xca3a
0x0000c9c1      e8fa53ffff     call sym.imp.__ctype_b_loc
0x0000c9c6      31c9           xor ecx, ecx
0x0000c9c8      4885ed         test rbp, rbp
0x0000c9cb      488b30         mov rsi, qword [rax]
0x0000c9ce      ba01000000     mov edx, 1
0x0000c9d3      752a           jne 0xc9ff
0x0000c9d5      66833c4e00     cmp word [rsi + rcx*2], 0
0x0000c9da      7911           jns 0xc9ed
0x0000c9dc      4889c8         mov rax, rcx
0x0000c9df      4889d7         mov rdi, rdx
0x0000c9e2      48c1f806       sar rax, 6
0x0000c9e6      48d3e7         shl rdi, cl
0x0000c9e9      48093cc3       or qword [rbx + rax*8], rdi
0x0000c9ed      4883c101       add rcx, 1
0x0000c9f1      4881f9000100.  cmp rcx, 0x100
0x0000c9f8      75db           jne 0xc9d5
0x0000c9fa      e9d5faffff     jmp 0xc4d4
0x0000c9ff      31c0           xor eax, eax
0x0000ca01      bf01000000     mov edi, 1
0x0000ca06      66833c4600     cmp word [rsi + rax*2], 0
0x0000ca0b      791c           jns 0xca29
0x0000ca0d      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000ca12      4989f9         mov r9, rdi
0x0000ca15      4889ca         mov rdx, rcx
0x0000ca18      83e13f         and ecx, 0x3f
0x0000ca1b      48c1ea03       shr rdx, 3
0x0000ca1f      49d3e1         shl r9, cl
0x0000ca22      83e218         and edx, 0x18
0x0000ca25      4c090c13       or qword [rbx + rdx], r9
0x0000ca29      4883c001       add rax, 1
0x0000ca2d      483d00010000   cmp rax, 0x100
0x0000ca33      75d1           jne 0xca06
0x0000ca35      e99afaffff     jmp 0xc4d4
0x0000ca3a      488d35e6a000.  lea rsi, str.punct                      ; 0x16b27 ; "punct"
0x0000ca41      4c89e7         mov rdi, r12
0x0000ca44      e88751ffff     call sym.imp.strcmp
0x0000ca49      85c0           test eax, eax
0x0000ca4b      7577           jne 0xcac4
0x0000ca4d      e86e53ffff     call sym.imp.__ctype_b_loc
0x0000ca52      31c9           xor ecx, ecx
0x0000ca54      4885ed         test rbp, rbp
0x0000ca57      488b30         mov rsi, qword [rax]
0x0000ca5a      ba01000000     mov edx, 1
0x0000ca5f      7529           jne 0xca8a
0x0000ca61      f6044e04       test byte [rsi + rcx*2], 4
0x0000ca65      7411           je 0xca78
0x0000ca67      4889c8         mov rax, rcx
0x0000ca6a      4889d7         mov rdi, rdx
0x0000ca6d      48c1f806       sar rax, 6
0x0000ca71      48d3e7         shl rdi, cl
0x0000ca74      48093cc3       or qword [rbx + rax*8], rdi
0x0000ca78      4883c101       add rcx, 1
0x0000ca7c      4881f9000100.  cmp rcx, 0x100
0x0000ca83      75dc           jne 0xca61
0x0000ca85      e94afaffff     jmp 0xc4d4
0x0000ca8a      31c0           xor eax, eax
0x0000ca8c      bf01000000     mov edi, 1
0x0000ca91      f6044604       test byte [rsi + rax*2], 4
0x0000ca95      741c           je 0xcab3
0x0000ca97      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000ca9c      4989fe         mov r14, rdi
0x0000ca9f      4889ca         mov rdx, rcx
0x0000caa2      83e13f         and ecx, 0x3f
0x0000caa5      48c1ea03       shr rdx, 3
0x0000caa9      49d3e6         shl r14, cl
0x0000caac      83e218         and edx, 0x18
0x0000caaf      4c093413       or qword [rbx + rdx], r14
0x0000cab3      4883c001       add rax, 1
0x0000cab7      483d00010000   cmp rax, 0x100
0x0000cabd      75d2           jne 0xca91
0x0000cabf      e910faffff     jmp 0xc4d4
0x0000cac4      488d3562a000.  lea rsi, str.xdigit                     ; 0x16b2d ; "xdigit"
0x0000cacb      4c89e7         mov rdi, r12
0x0000cace      e8fd50ffff     call sym.imp.strcmp
0x0000cad3      85c0           test eax, eax
0x0000cad5      7579           jne 0xcb50
0x0000cad7      e8e452ffff     call sym.imp.__ctype_b_loc
0x0000cadc      31c9           xor ecx, ecx
0x0000cade      4885ed         test rbp, rbp
0x0000cae1      488b30         mov rsi, qword [rax]
0x0000cae4      ba01000000     mov edx, 1
0x0000cae9      752a           jne 0xcb15
0x0000caeb      f6444e0110     test byte [rsi + rcx*2 + 1], 0x10
0x0000caf0      7411           je 0xcb03
0x0000caf2      4889c8         mov rax, rcx
0x0000caf5      4889d7         mov rdi, rdx
0x0000caf8      48c1f806       sar rax, 6
0x0000cafc      48d3e7         shl rdi, cl
0x0000caff      48093cc3       or qword [rbx + rax*8], rdi
0x0000cb03      4883c101       add rcx, 1
0x0000cb07      4881f9000100.  cmp rcx, 0x100
0x0000cb0e      75db           jne 0xcaeb
0x0000cb10      e9bff9ffff     jmp 0xc4d4
0x0000cb15      31c0           xor eax, eax
0x0000cb17      bf01000000     mov edi, 1
0x0000cb1c      f644460110     test byte [rsi + rax*2 + 1], 0x10
0x0000cb21      741c           je 0xcb3f
0x0000cb23      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000cb28      4989f9         mov r9, rdi
0x0000cb2b      4889ca         mov rdx, rcx
0x0000cb2e      83e13f         and ecx, 0x3f
0x0000cb31      48c1ea03       shr rdx, 3
0x0000cb35      49d3e1         shl r9, cl
0x0000cb38      83e218         and edx, 0x18
0x0000cb3b      4c090c13       or qword [rbx + rdx], r9
0x0000cb3f      4883c001       add rax, 1
0x0000cb43      483d00010000   cmp rax, 0x100
0x0000cb49      75d1           jne 0xcb1c
0x0000cb4b      e984f9ffff     jmp 0xc4d4
0x0000cb50      b804000000     mov eax, 4
0x0000cb55      e97cf9ffff     jmp 0xc4d6
0x0000cb5a      31c0           xor eax, eax
0x0000cb5c      f644420108     test byte [rdx + rax*2 + 1], 8
0x0000cb61      741c           je 0xcb7f
0x0000cb63      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000cb68      4989fe         mov r14, rdi
0x0000cb6b      4889ce         mov rsi, rcx
0x0000cb6e      83e13f         and ecx, 0x3f
0x0000cb71      48c1ee03       shr rsi, 3
0x0000cb75      49d3e6         shl r14, cl
0x0000cb78      83e618         and esi, 0x18
0x0000cb7b      4c093433       or qword [rbx + rsi], r14
0x0000cb7f      4883c001       add rax, 1
0x0000cb83      483d00010000   cmp rax, 0x100
0x0000cb89      75d1           jne 0xcb5c
0x0000cb8b      e944f9ffff     jmp 0xc4d4
0x0000cb90      31d2           xor edx, edx
0x0000cb92      f644500101     test byte [rax + rdx*2 + 1], 1
0x0000cb97      741c           je 0xcbb5
0x0000cb99      0fb64c1500     movzx ecx, byte [rbp + rdx]
0x0000cb9e      4989f9         mov r9, rdi
0x0000cba1      4889ce         mov rsi, rcx
0x0000cba4      83e13f         and ecx, 0x3f
0x0000cba7      48c1ee03       shr rsi, 3
0x0000cbab      49d3e1         shl r9, cl
0x0000cbae      83e618         and esi, 0x18
0x0000cbb1      4c090c33       or qword [rbx + rsi], r9
0x0000cbb5      4883c201       add rdx, 1
0x0000cbb9      4881fa000100.  cmp rdx, 0x100
0x0000cbc0      75d0           jne 0xcb92
0x0000cbc2      e90df9ffff     jmp 0xc4d4
0x0000cbc7      31c0           xor eax, eax
0x0000cbc9      f644420140     test byte [rdx + rax*2 + 1], 0x40
0x0000cbce      741c           je 0xcbec
0x0000cbd0      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000cbd5      4989fe         mov r14, rdi
0x0000cbd8      4889ce         mov rsi, rcx
0x0000cbdb      83e13f         and ecx, 0x3f
0x0000cbde      48c1ee03       shr rsi, 3
0x0000cbe2      49d3e6         shl r14, cl
0x0000cbe5      83e618         and esi, 0x18
0x0000cbe8      4c093433       or qword [rbx + rsi], r14
0x0000cbec      4883c001       add rax, 1
0x0000cbf0      483d00010000   cmp rax, 0x100
0x0000cbf6      75d1           jne 0xcbc9
0x0000cbf8      e9d7f8ffff     jmp 0xc4d4
0x0000cbfd      0f1f00         nop dword [rax]
;-- build_charclass_op:
0x0000cc00      4157           push r15
0x0000cc02      4156           push r14
0x0000cc04      4989d6         mov r14, rdx
0x0000cc07      4155           push r13
0x0000cc09      4154           push r12
0x0000cc0b      4989cd         mov r13, rcx
0x0000cc0e      55             push rbp
0x0000cc0f      53             push rbx
0x0000cc10      4889fd         mov rbp, rdi
0x0000cc13      bf20000000     mov edi, 0x20                           ; "@"
0x0000cc18      4589c4         mov r12d, r8d
0x0000cc1b      4883ec58       sub rsp, 0x58
0x0000cc1f      48893424       mov qword [rsp], rsi
0x0000cc23      be01000000     mov esi, 1
0x0000cc28      4c894c2408     mov qword [rsp + 8], r9
0x0000cc2d      64488b042528.  mov rax, qword fs:[0x28]
0x0000cc36      4889442448     mov qword [rsp + 0x48], rax
0x0000cc3b      31c0           xor eax, eax
0x0000cc3d      48c744241800.  mov qword [rsp + 0x18], 0
0x0000cc46      e8754fffff     call sym.imp.calloc
0x0000cc4b      4885c0         test rax, rax
0x0000cc4e      0f84bc010000   je 0xce10
0x0000cc54      be01000000     mov esi, 1
0x0000cc59      bf50000000     mov edi, 0x50                           ; 'P'
0x0000cc5e      4889c3         mov rbx, rax
0x0000cc61      e85a4fffff     call sym.imp.calloc
0x0000cc66      4885c0         test rax, rax
0x0000cc69      4989c7         mov r15, rax
0x0000cc6c      0f84ae010000   je 0xce20
0x0000cc72      0fb64020       movzx eax, byte [rax + 0x20]
0x0000cc76      4883ec08       sub rsp, 8
0x0000cc7a      4489e2         mov edx, r12d
0x0000cc7d      6a00           push 0
0x0000cc7f      83e201         and edx, 1
0x0000cc82      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000cc87      498d4f48       lea rcx, [r15 + 0x48]
0x0000cc8b      4d89f1         mov r9, r14
0x0000cc8e      4889de         mov rsi, rbx
0x0000cc91      4c8d442428     lea r8, [rsp + 0x28]
0x0000cc96      83e0fe         and eax, 0xfffffffe                     ; 4294967294
0x0000cc99      09d0           or eax, edx
0x0000cc9b      498d5718       lea rdx, [r15 + 0x18]
0x0000cc9f      41884720       mov byte [r15 + 0x20], al
0x0000cca3      e848f7ffff     call sym.build_charclass.isra.29
0x0000cca8      85c0           test eax, eax
0x0000ccaa      5a             pop rdx
0x0000ccab      59             pop rcx
0x0000ccac      0f858e010000   jne 0xce40
0x0000ccb2      490fbe4d00     movsx rcx, byte [r13]
0x0000ccb7      be01000000     mov esi, 1
0x0000ccbc      84c9           test cl, cl
0x0000ccbe      743a           je 0xccfa
0x0000ccc0      488d413f       lea rax, [rcx + 0x3f]
0x0000ccc4      4885c9         test rcx, rcx
0x0000ccc7      4889ca         mov rdx, rcx
0x0000ccca      480f49c1       cmovns rax, rcx
0x0000ccce      48c1fa3f       sar rdx, 0x3f
0x0000ccd2      4983c501       add r13, 1
0x0000ccd6      48c1ea3a       shr rdx, 0x3a
0x0000ccda      48c1f806       sar rax, 6
0x0000ccde      4801d1         add rcx, rdx
0x0000cce1      83e13f         and ecx, 0x3f
0x0000cce4      4829d1         sub rcx, rdx
0x0000cce7      4889f2         mov rdx, rsi
0x0000ccea      48d3e2         shl rdx, cl
0x0000cced      490fbe4d00     movsx rcx, byte [r13]
0x0000ccf2      480914c3       or qword [rbx + rax*8], rdx
0x0000ccf6      84c9           test cl, cl
0x0000ccf8      75c6           jne 0xccc0
0x0000ccfa      4584e4         test r12b, r12b
0x0000ccfd      7413           je 0xcd12
0x0000ccff      488d5320       lea rdx, [rbx + 0x20]
0x0000cd03      4889d8         mov rax, rbx
0x0000cd06      48f710         not qword [rax]
0x0000cd09      4883c008       add rax, 8
0x0000cd0d      4839c2         cmp rdx, rax
0x0000cd10      75f4           jne 0xcd06
0x0000cd12      83bdb4000000.  cmp dword [rbp + 0xb4], 1
0x0000cd19      7e18           jle 0xcd33
0x0000cd1b      488b4d78       mov rcx, qword [rbp + 0x78]
0x0000cd1f      31c0           xor eax, eax
0x0000cd21      488b1401       mov rdx, qword [rcx + rax]
0x0000cd25      48211403       and qword [rbx + rax], rdx
0x0000cd29      4883c008       add rax, 8
0x0000cd2d      4883f820       cmp rax, 0x20                           ; "@"
0x0000cd31      75ee           jne 0xcd21
0x0000cd33      4c8d4c2420     lea r9, [rsp + 0x20]
0x0000cd38      4c8d6570       lea r12, [rbp + 0x70]
0x0000cd3c      4c8dad800000.  lea r13, [rbp + 0x80]
0x0000cd43      31c9           xor ecx, ecx
0x0000cd45      31d2           xor edx, edx
0x0000cd47      c644242803     mov byte [rsp + 0x28], 3
0x0000cd4c      4d89c8         mov r8, r9
0x0000cd4f      4c89ee         mov rsi, r13
0x0000cd52      4c89e7         mov rdi, r12
0x0000cd55      48895c2420     mov qword [rsp + 0x20], rbx
0x0000cd5a      4c890c24       mov qword [rsp], r9
0x0000cd5e      e84dcbffff     call sym.create_token_tree.isra.16
0x0000cd63      4885c0         test rax, rax
0x0000cd66      4989c6         mov r14, rax
0x0000cd69      0f8491000000   je 0xce00
0x0000cd6f      83bdb4000000.  cmp dword [rbp + 0xb4], 1
0x0000cd76      7e78           jle 0xcdf0
0x0000cd78      808db0000000.  or byte [rbp + 0xb0], 2
0x0000cd7f      4c8b0c24       mov r9, qword [rsp]
0x0000cd83      31c9           xor ecx, ecx
0x0000cd85      31d2           xor edx, edx
0x0000cd87      4c89ee         mov rsi, r13
0x0000cd8a      4c89e7         mov rdi, r12
0x0000cd8d      c644242806     mov byte [rsp + 0x28], 6
0x0000cd92      4c897c2420     mov qword [rsp + 0x20], r15
0x0000cd97      4d89c8         mov r8, r9
0x0000cd9a      e811cbffff     call sym.create_token_tree.isra.16
0x0000cd9f      4885c0         test rax, rax
0x0000cda2      745c           je 0xce00
0x0000cda4      4c8d442430     lea r8, [rsp + 0x30]
0x0000cda9      4c89f2         mov rdx, r14
0x0000cdac      4889c1         mov rcx, rax
0x0000cdaf      4c89ee         mov rsi, r13
0x0000cdb2      4c89e7         mov rdi, r12
0x0000cdb5      c64424380a     mov byte [rsp + 0x38], 0xa
0x0000cdba      e8f1caffff     call sym.create_token_tree.isra.16
0x0000cdbf      4989c6         mov r14, rax
0x0000cdc2      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0000cdc7      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000cdd0      4c89f0         mov rax, r14
0x0000cdd3      0f858c000000   jne 0xce65
0x0000cdd9      4883c458       add rsp, 0x58
0x0000cddd      5b             pop rbx
0x0000cdde      5d             pop rbp
0x0000cddf      415c           pop r12
0x0000cde1      415d           pop r13
0x0000cde3      415e           pop r14
0x0000cde5      415f           pop r15
0x0000cde7      c3             ret
0x0000cde8      0f1f84000000.  nop dword [rax + rax]
0x0000cdf0      4c89ff         mov rdi, r15
0x0000cdf3      e818b5ffff     call sym.free_charset
0x0000cdf8      ebc8           jmp 0xcdc2
0x0000cdfa      660f1f440000   nop word [rax + rax]
0x0000ce00      4889df         mov rdi, rbx
0x0000ce03      e8c84bffff     call sym.imp.free
0x0000ce08      4c89ff         mov rdi, r15
0x0000ce0b      e800b5ffff     call sym.free_charset
0x0000ce10      488b442408     mov rax, qword [rsp + 8]
0x0000ce15      4531f6         xor r14d, r14d
0x0000ce18      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000ce1e      eba2           jmp 0xcdc2
0x0000ce20      4889df         mov rdi, rbx
0x0000ce23      4531f6         xor r14d, r14d
0x0000ce26      e8a54bffff     call sym.imp.free
0x0000ce2b      488b442408     mov rax, qword [rsp + 8]
0x0000ce30      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000ce36      eb8a           jmp 0xcdc2
0x0000ce38      0f1f84000000.  nop dword [rax + rax]
0x0000ce40      4889df         mov rdi, rbx
0x0000ce43      890424         mov dword [rsp], eax
0x0000ce46      4531f6         xor r14d, r14d
0x0000ce49      e8824bffff     call sym.imp.free
0x0000ce4e      4c89ff         mov rdi, r15
0x0000ce51      e8bab4ffff     call sym.free_charset
0x0000ce56      488b7c2408     mov rdi, qword [rsp + 8]
0x0000ce5b      8b0424         mov eax, dword [rsp]
0x0000ce5e      8907           mov dword [rdi], eax
0x0000ce60      e95dffffff     jmp 0xcdc2
0x0000ce65      e8664cffff     call sym.imp.__stack_chk_fail
0x0000ce6a      660f1f440000   nop word [rax + rax]
;-- re_compile_fastmap_iter.isra.30:
0x0000ce70      4157           push r15
0x0000ce72      4156           push r14
0x0000ce74      4889f8         mov rax, rdi
0x0000ce77      4155           push r13
0x0000ce79      4154           push r12
0x0000ce7b      55             push rbp
0x0000ce7c      53             push rbx
0x0000ce7d      31db           xor ebx, ebx
0x0000ce7f      4889cd         mov rbp, rcx
0x0000ce82      4881ec780100.  sub rsp, 0x178
0x0000ce89      488b00         mov rax, qword [rax]
0x0000ce8c      48897c2430     mov qword [rsp + 0x30], rdi
0x0000ce91      4889742420     mov qword [rsp + 0x20], rsi
0x0000ce96      64488b3c2528.  mov rdi, qword fs:[0x28]
0x0000ce9f      4889bc246801.  mov qword [rsp + 0x168], rdi
0x0000cea7      31ff           xor edi, edi
0x0000cea9      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x0000ceb0      4889542428     mov qword [rsp + 0x28], rdx
0x0000ceb5      4889442408     mov qword [rsp + 8], rax
0x0000ceba      7517           jne 0xced3
0x0000cebc      488b442430     mov rax, qword [rsp + 0x30]
0x0000cec1      488b4018       mov rax, qword [rax + 0x18]
0x0000cec5      4889c3         mov rbx, rax
0x0000cec8      48890424       mov qword [rsp], rax
0x0000cecc      48c1eb16       shr rbx, 0x16
0x0000ced0      83e301         and ebx, 1
0x0000ced3      488b442420     mov rax, qword [rsp + 0x20]
0x0000ced8      48833800       cmp qword [rax], 0
0x0000cedc      0f8e0b040000   jle 0xd2ed
0x0000cee2      488d442458     lea rax, [rsp + 0x58]
0x0000cee7      48c704240000.  mov qword [rsp], 0
0x0000ceef      4889442440     mov qword [rsp + 0x40], rax
0x0000cef4      488d442454     lea rax, [rsp + 0x54]
0x0000cef9      4889442448     mov qword [rsp + 0x48], rax
0x0000cefe      488d442460     lea rax, [rsp + 0x60]
0x0000cf03      4889442438     mov qword [rsp + 0x38], rax
0x0000cf08      eb44           jmp 0xcf4e
0x0000cf0a      660f1f440000   nop word [rax + rax]
0x0000cf10      83f803         cmp eax, 3
0x0000cf13      0f84ed020000   je 0xd206
0x0000cf19      83f806         cmp eax, 6
0x0000cf1c      0f8486010000   je 0xd0a8
0x0000cf22      83e2fd         and edx, 0xfffffffd                     ; 4294967293
0x0000cf25      80fa05         cmp dl, 5
0x0000cf28      0f84f6030000   je 0xd324
0x0000cf2e      83f802         cmp eax, 2
0x0000cf31      0f844d030000   je 0xd284
0x0000cf37      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000cf3c      4883042401     add qword [rsp], 1
0x0000cf41      488b0424       mov rax, qword [rsp]
0x0000cf45      483b07         cmp rax, qword [rdi]
0x0000cf48      0f8d9f030000   jge 0xd2ed
0x0000cf4e      488b442428     mov rax, qword [rsp + 0x28]
0x0000cf53      488b3c24       mov rdi, qword [rsp]
0x0000cf57      488b00         mov rax, qword [rax]
0x0000cf5a      4c8b24f8       mov r12, qword [rax + rdi*8]
0x0000cf5e      488b442408     mov rax, qword [rsp + 8]
0x0000cf63      488b08         mov rcx, qword [rax]
0x0000cf66      4c89e0         mov rax, r12
0x0000cf69      48c1e004       shl rax, 4
0x0000cf6d      4889442410     mov qword [rsp + 0x10], rax
0x0000cf72      488d3401       lea rsi, [rcx + rax]
0x0000cf76      0fb64608       movzx eax, byte [rsi + 8]
0x0000cf7a      83f801         cmp eax, 1
0x0000cf7d      89c2           mov edx, eax
0x0000cf7f      758f           jne 0xcf10
0x0000cf81      440fb62e       movzx r13d, byte [rsi]
0x0000cf85      85db           test ebx, ebx
0x0000cf87      42c6442d0001   mov byte [rbp + r13], 1
0x0000cf8d      7411           je 0xcfa0
0x0000cf8f      e81c4effff     call sym.imp.__ctype_tolower_loc
0x0000cf94      488b00         mov rax, qword [rax]
0x0000cf97      4a6304a8       movsxd rax, dword [rax + r13*4]
0x0000cf9b      c644050001     mov byte [rbp + rax], 1
0x0000cfa0      488b442430     mov rax, qword [rsp + 0x30]
0x0000cfa5      f6401a40       test byte [rax + 0x1a], 0x40
0x0000cfa9      748c           je 0xcf37
0x0000cfab      488b742408     mov rsi, qword [rsp + 8]
0x0000cfb0      83beb4000000.  cmp dword [rsi + 0xb4], 1
0x0000cfb7      0f8e7affffff   jle 0xcf37
0x0000cfbd      488b06         mov rax, qword [rsi]
0x0000cfc0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000cfc5      0fb61438       movzx edx, byte [rax + rdi]
0x0000cfc9      88542460       mov byte [rsp + 0x60], dl
0x0000cfcd      498d542401     lea rdx, [r12 + 1]
0x0000cfd2      48395610       cmp qword [rsi + 0x10], rdx
0x0000cfd6      0f863a030000   jbe 0xd316
0x0000cfdc      488d4c3810     lea rcx, [rax + rdi + 0x10]
0x0000cfe1      8b4108         mov eax, dword [rcx + 8]
0x0000cfe4      25ff002000     and eax, 0x2000ff
0x0000cfe9      3d01002000     cmp eax, 0x200001
0x0000cfee      0f8522030000   jne 0xd316
0x0000cff4      4883c720       add rdi, 0x20                           ; "@"
0x0000cff8      4989fd         mov r13, rdi
0x0000cffb      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000d000      488d4701       lea rax, [rdi + 1]
0x0000d004      eb25           jmp 0xd02b
0x0000d006      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d010      488b0e         mov rcx, qword [rsi]
0x0000d013      4c01e9         add rcx, r13
0x0000d016      4983c510       add r13, 0x10
0x0000d01a      8b5108         mov edx, dword [rcx + 8]
0x0000d01d      81e2ff002000   and edx, 0x2000ff
0x0000d023      81fa01002000   cmp edx, 0x200001
0x0000d029      7519           jne 0xd044
0x0000d02b      0fb611         movzx edx, byte [rcx]
0x0000d02e      4883c001       add rax, 1
0x0000d032      8850ff         mov byte [rax - 1], dl
0x0000d035      4889c2         mov rdx, rax
0x0000d038      4829fa         sub rdx, rdi
0x0000d03b      4c01e2         add rdx, r12
0x0000d03e      48395610       cmp qword [rsi + 0x10], rdx
0x0000d042      77cc           ja 0xd010
0x0000d044      488b742438     mov rsi, qword [rsp + 0x38]
0x0000d049      488b4c2440     mov rcx, qword [rsp + 0x40]
0x0000d04e      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0000d053      4829f0         sub rax, rsi
0x0000d056      48c701000000.  mov qword [rcx], 0
0x0000d05d      4989c4         mov r12, rax
0x0000d060      4889c2         mov rdx, rax
0x0000d063      e8e89fffff     call sym.rpl_mbrtowc
0x0000d068      4939c4         cmp r12, rax
0x0000d06b      0f85c6feffff   jne 0xcf37
0x0000d071      8b7c2454       mov edi, dword [rsp + 0x54]
0x0000d075      e8a64cffff     call sym.imp.towlower
0x0000d07a      488b542440     mov rdx, qword [rsp + 0x40]
0x0000d07f      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000d084      89c6           mov esi, eax
0x0000d086      e8a54bffff     call sym.imp.wcrtomb
0x0000d08b      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000d08f      0f84a2feffff   je 0xcf37
0x0000d095      0fb6442460     movzx eax, byte [rsp + 0x60]
0x0000d09a      c644050001     mov byte [rbp + rax], 1
0x0000d09f      e993feffff     jmp 0xcf37
0x0000d0a4      0f1f4000       nop dword [rax]
0x0000d0a8      488b442408     mov rax, qword [rsp + 8]
0x0000d0ad      4c8b26         mov r12, qword [rsi]
0x0000d0b0      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x0000d0b7      7e24           jle 0xd0dd
0x0000d0b9      49837c244800   cmp qword [r12 + 0x48], 0
0x0000d0bf      0f85fa000000   jne 0xd1bf
0x0000d0c5      41f644242001   test byte [r12 + 0x20], 1
0x0000d0cb      0f85ee000000   jne 0xd1bf
0x0000d0d1      49837c244000   cmp qword [r12 + 0x40], 0
0x0000d0d7      0f85e2000000   jne 0xd1bf
0x0000d0dd      4531ed         xor r13d, r13d
0x0000d0e0      49837c242800   cmp qword [r12 + 0x28], 0
0x0000d0e6      0f8e4bfeffff   jle 0xcf37
0x0000d0ec      4d89e7         mov r15, r12
0x0000d0ef      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000d0f4      4989ec         mov r12, rbp
0x0000d0f7      4c89ed         mov rbp, r13
0x0000d0fa      4189dd         mov r13d, ebx
0x0000d0fd      eb0e           jmp 0xd10d
0x0000d0ff      4883c501       add rbp, 1
0x0000d103      493b6f28       cmp rbp, qword [r15 + 0x28]
0x0000d107      0f8da7000000   jge 0xd1b4
0x0000d10d      49c706000000.  mov qword [r14], 0
0x0000d114      498b07         mov rax, qword [r15]
0x0000d117      4c89f2         mov rdx, r14
0x0000d11a      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000d11f      488d1cad0000.  lea rbx, [rbp*4]
0x0000d127      8b34a8         mov esi, dword [rax + rbp*4]
0x0000d12a      e8014bffff     call sym.imp.wcrtomb
0x0000d12f      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000d133      742a           je 0xd15f
0x0000d135      0fb6542460     movzx edx, byte [rsp + 0x60]
0x0000d13a      4585ed         test r13d, r13d
0x0000d13d      41c6041401     mov byte [r12 + rdx], 1
0x0000d142      4889542410     mov qword [rsp + 0x10], rdx
0x0000d147      7416           je 0xd15f
0x0000d149      e8624cffff     call sym.imp.__ctype_tolower_loc
0x0000d14e      488b542410     mov rdx, qword [rsp + 0x10]
0x0000d153      488b00         mov rax, qword [rax]
0x0000d156      48630490       movsxd rax, dword [rax + rdx*4]
0x0000d15a      41c6040401     mov byte [r12 + rax], 1
0x0000d15f      488b442430     mov rax, qword [rsp + 0x30]
0x0000d164      f6401a40       test byte [rax + 0x1a], 0x40
0x0000d168      7495           je 0xd0ff
0x0000d16a      488b442408     mov rax, qword [rsp + 8]
0x0000d16f      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x0000d176      7e87           jle 0xd0ff
0x0000d178      498b07         mov rax, qword [r15]
0x0000d17b      8b3c18         mov edi, dword [rax + rbx]
0x0000d17e      e89d4bffff     call sym.imp.towlower
0x0000d183      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000d188      4c89f2         mov rdx, r14
0x0000d18b      89c6           mov esi, eax
0x0000d18d      e89e4affff     call sym.imp.wcrtomb
0x0000d192      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000d196      0f8463ffffff   je 0xd0ff
0x0000d19c      0fb6442460     movzx eax, byte [rsp + 0x60]
0x0000d1a1      4883c501       add rbp, 1
0x0000d1a5      41c6040401     mov byte [r12 + rax], 1
0x0000d1aa      493b6f28       cmp rbp, qword [r15 + 0x28]
0x0000d1ae      0f8c59ffffff   jl 0xd10d
0x0000d1b4      4489eb         mov ebx, r13d
0x0000d1b7      4c89e5         mov rbp, r12
0x0000d1ba      e978fdffff     jmp 0xcf37
0x0000d1bf      4c8b642440     mov r12, qword [rsp + 0x40]
0x0000d1c4      4c8b6c2448     mov r13, qword [rsp + 0x48]
0x0000d1c9      c644245400     mov byte [rsp + 0x54], 0
0x0000d1ce      6690           nop
0x0000d1d0      31ff           xor edi, edi
0x0000d1d2      49c704240000.  mov qword [r12], 0
0x0000d1da      4c89e1         mov rcx, r12
0x0000d1dd      ba01000000     mov edx, 1
0x0000d1e2      4c89ee         mov rsi, r13
0x0000d1e5      e8669effff     call sym.rpl_mbrtowc
0x0000d1ea      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000d1ee      750a           jne 0xd1fa
0x0000d1f0      0fb6442454     movzx eax, byte [rsp + 0x54]
0x0000d1f5      c644050001     mov byte [rbp + rax], 1
0x0000d1fa      8044245401     add byte [rsp + 0x54], 1
0x0000d1ff      75cf           jne 0xd1d0
0x0000d201      e931fdffff     jmp 0xcf37
0x0000d206      4989ed         mov r13, rbp
0x0000d209      4531e4         xor r12d, r12d
0x0000d20c      48c744241800.  mov qword [rsp + 0x18], 0
0x0000d215      488b442410     mov rax, qword [rsp + 0x10]
0x0000d21a      488b742418     mov rsi, qword [rsp + 0x18]
0x0000d21f      4531f6         xor r14d, r14d
0x0000d222      488b0401       mov rax, qword [rcx + rax]
0x0000d226      4c8b3c30       mov r15, qword [rax + rsi]
0x0000d22a      660f1f440000   nop word [rax + rax]
0x0000d230      4d0fa3f7       bt r15, r14
0x0000d234      731f           jae 0xd255
0x0000d236      85db           test ebx, ebx
0x0000d238      43c644350001   mov byte [r13 + r14], 1
0x0000d23e      7415           je 0xd255
0x0000d240      e86b4bffff     call sym.imp.__ctype_tolower_loc
0x0000d245      488b00         mov rax, qword [rax]
0x0000d248      4b8d1434       lea rdx, [r12 + r14]
0x0000d24c      48630490       movsxd rax, dword [rax + rdx*4]
0x0000d250      c644050001     mov byte [rbp + rax], 1
0x0000d255      4983c601       add r14, 1
0x0000d259      4983fe40       cmp r14, 0x40                           ; segment.PHDR
0x0000d25d      75d1           jne 0xd230
0x0000d25f      4983c440       add r12, 0x40                           ; segment.PHDR
0x0000d263      488344241808   add qword [rsp + 0x18], 8
0x0000d269      4983c540       add r13, 0x40                           ; segment.PHDR
0x0000d26d      4981fc000100.  cmp r12, 0x100
0x0000d274      0f84bdfcffff   je 0xcf37
0x0000d27a      488b442408     mov rax, qword [rsp + 8]
0x0000d27f      488b08         mov rcx, qword [rax]
0x0000d282      eb91           jmp 0xd215
0x0000d284      660f6f0554a0.  movdqa xmm0, xmmword [0x000172e0]
0x0000d28c      0f114500       movups xmmword [rbp], xmm0
0x0000d290      0f114510       movups xmmword [rbp + 0x10], xmm0
0x0000d294      0f114520       movups xmmword [rbp + 0x20], xmm0
0x0000d298      0f114530       movups xmmword [rbp + 0x30], xmm0
0x0000d29c      0f114540       movups xmmword [rbp + 0x40], xmm0
0x0000d2a0      0f114550       movups xmmword [rbp + 0x50], xmm0
0x0000d2a4      0f114560       movups xmmword [rbp + 0x60], xmm0
0x0000d2a8      0f114570       movups xmmword [rbp + 0x70], xmm0
0x0000d2ac      0f1185800000.  movups xmmword [rbp + 0x80], xmm0
0x0000d2b3      0f1185900000.  movups xmmword [rbp + 0x90], xmm0
0x0000d2ba      0f1185a00000.  movups xmmword [rbp + 0xa0], xmm0
0x0000d2c1      0f1185b00000.  movups xmmword [rbp + 0xb0], xmm0
0x0000d2c8      0f1185c00000.  movups xmmword [rbp + 0xc0], xmm0
0x0000d2cf      0f1185d00000.  movups xmmword [rbp + 0xd0], xmm0
0x0000d2d6      0f1185e00000.  movups xmmword [rbp + 0xe0], xmm0
0x0000d2dd      0f1185f00000.  movups xmmword [rbp + 0xf0], xmm0
0x0000d2e4      488b442430     mov rax, qword [rsp + 0x30]
0x0000d2e9      80483801       or byte [rax + 0x38], 1
0x0000d2ed      488b84246801.  mov rax, qword [rsp + 0x168]
0x0000d2f5      644833042528.  xor rax, qword fs:[0x28]
0x0000d2fe      0f858e000000   jne 0xd392
0x0000d304      4881c4780100.  add rsp, 0x178
0x0000d30b      5b             pop rbx
0x0000d30c      5d             pop rbp
0x0000d30d      415c           pop r12
0x0000d30f      415d           pop r13
0x0000d311      415e           pop r14
0x0000d313      415f           pop r15
0x0000d315      c3             ret
0x0000d316      488b442438     mov rax, qword [rsp + 0x38]
0x0000d31b      4883c001       add rax, 1
0x0000d31f      e920fdffff     jmp 0xd044
0x0000d324      660f6f05b49f.  movdqa xmm0, xmmword [0x000172e0]
0x0000d32c      83f802         cmp eax, 2
0x0000d32f      0f114500       movups xmmword [rbp], xmm0
0x0000d333      0f114510       movups xmmword [rbp + 0x10], xmm0
0x0000d337      0f114520       movups xmmword [rbp + 0x20], xmm0
0x0000d33b      0f114530       movups xmmword [rbp + 0x30], xmm0
0x0000d33f      0f114540       movups xmmword [rbp + 0x40], xmm0
0x0000d343      0f114550       movups xmmword [rbp + 0x50], xmm0
0x0000d347      0f114560       movups xmmword [rbp + 0x60], xmm0
0x0000d34b      0f114570       movups xmmword [rbp + 0x70], xmm0
0x0000d34f      0f1185800000.  movups xmmword [rbp + 0x80], xmm0
0x0000d356      0f1185900000.  movups xmmword [rbp + 0x90], xmm0
0x0000d35d      0f1185a00000.  movups xmmword [rbp + 0xa0], xmm0
0x0000d364      0f1185b00000.  movups xmmword [rbp + 0xb0], xmm0
0x0000d36b      0f1185c00000.  movups xmmword [rbp + 0xc0], xmm0
0x0000d372      0f1185d00000.  movups xmmword [rbp + 0xd0], xmm0
0x0000d379      0f1185e00000.  movups xmmword [rbp + 0xe0], xmm0
0x0000d380      0f1185f00000.  movups xmmword [rbp + 0xf0], xmm0
0x0000d387      0f8560ffffff   jne 0xd2ed
0x0000d38d      e952ffffff     jmp 0xd2e4
0x0000d392      e83947ffff     call sym.imp.__stack_chk_fail
0x0000d397      660f1f840000.  nop word [rax + rax]
;-- check_node_accept_bytes.isra.31:
0x0000d3a0      48c1e204       shl rdx, 4
0x0000d3a4      4155           push r13
0x0000d3a6      4154           push r12
0x0000d3a8      4c8d0c17       lea r9, [rdi + rdx]
0x0000d3ac      55             push rbp
0x0000d3ad      53             push rbx
0x0000d3ae      4883ec08       sub rsp, 8
0x0000d3b2      450fb65908     movzx r11d, byte [r9 + 8]
0x0000d3b7      4180fb07       cmp r11b, 7
0x0000d3bb      0f840f010000   je 0xd4d0
0x0000d3c1      83b990000000.  cmp dword [rcx + 0x90], 1
0x0000d3c8      0f84c2000000   je 0xd490
0x0000d3ce      4889f3         mov rbx, rsi
0x0000d3d1      4889cf         mov rdi, rcx
0x0000d3d4      4c89c6         mov rsi, r8
0x0000d3d7      4989ca         mov r10, rcx
0x0000d3da      e861b7ffff     call sym.re_string_char_size_at.part.0
0x0000d3df      4180fb05       cmp r11b, 5
0x0000d3e3      89c5           mov ebp, eax
0x0000d3e5      0f84b5000000   je 0xd4a0
0x0000d3eb      4180fb06       cmp r11b, 6
0x0000d3ef      0f859b000000   jne 0xd490
0x0000d3f5      83f801         cmp eax, 1
0x0000d3f8      0f8e92000000   jle 0xd490
0x0000d3fe      4d8b29         mov r13, qword [r9]
0x0000d401      498b7540       mov rsi, qword [r13 + 0x40]
0x0000d405      498b5528       mov rdx, qword [r13 + 0x28]
0x0000d409      4885f6         test rsi, rsi
0x0000d40c      750b           jne 0xd419
0x0000d40e      49837d4800     cmp qword [r13 + 0x48], 0
0x0000d413      0f84ef000000   je 0xd508
0x0000d419      498b4210       mov rax, qword [r10 + 0x10]
0x0000d41d      4885d2         test rdx, rdx
0x0000d420      468b2480       mov r12d, dword [rax + r8*4]
0x0000d424      7e21           jle 0xd447
0x0000d426      498b4d00       mov rcx, qword [r13]
0x0000d42a      443b21         cmp r12d, dword [rcx]
0x0000d42d      7453           je 0xd482
0x0000d42f      31c0           xor eax, eax
0x0000d431      eb0b           jmp 0xd43e
0x0000d433      0f1f440000     nop dword [rax + rax]
0x0000d438      443b2481       cmp r12d, dword [rcx + rax*4]
0x0000d43c      7444           je 0xd482
0x0000d43e      4883c001       add rax, 1
0x0000d442      4839d0         cmp rax, rdx
0x0000d445      75f1           jne 0xd438
0x0000d447      498b4548       mov rax, qword [r13 + 0x48]
0x0000d44b      4885c0         test rax, rax
0x0000d44e      0f8ed8000000   jle 0xd52c
0x0000d454      31db           xor ebx, ebx
0x0000d456      eb16           jmp 0xd46e
0x0000d458      0f1f84000000.  nop dword [rax + rax]
0x0000d460      4883c301       add rbx, 1
0x0000d464      493b5d48       cmp rbx, qword [r13 + 0x48]
0x0000d468      0f8dba000000   jge 0xd528
0x0000d46e      498b4518       mov rax, qword [r13 + 0x18]
0x0000d472      4489e7         mov edi, r12d
0x0000d475      488b34d8       mov rsi, qword [rax + rbx*8]
0x0000d479      e8e245ffff     call sym.imp.iswctype
0x0000d47e      85c0           test eax, eax
0x0000d480      74de           je 0xd460
0x0000d482      41f6452001     test byte [r13 + 0x20], 1
0x0000d487      7409           je 0xd492
0x0000d489      0f1f80000000.  nop dword [rax]
0x0000d490      31ed           xor ebp, ebp
0x0000d492      4883c408       add rsp, 8
0x0000d496      89e8           mov eax, ebp
0x0000d498      5b             pop rbx
0x0000d499      5d             pop rbp
0x0000d49a      415c           pop r12
0x0000d49c      415d           pop r13
0x0000d49e      c3             ret
0x0000d49f      90             nop
0x0000d4a0      83f801         cmp eax, 1
0x0000d4a3      7eeb           jle 0xd490
0x0000d4a5      488b03         mov rax, qword [rbx]
0x0000d4a8      a840           test al, 0x40                           ; segment.PHDR
0x0000d4aa      7414           je 0xd4c0
0x0000d4ac      a880           test al, 0x80
0x0000d4ae      74e2           je 0xd492
0x0000d4b0      498b4208       mov rax, qword [r10 + 8]
0x0000d4b4      42803c0000     cmp byte [rax + r8], 0
0x0000d4b9      74d5           je 0xd490
0x0000d4bb      ebd5           jmp 0xd492
0x0000d4bd      0f1f00         nop dword [rax]
0x0000d4c0      498b5208       mov rdx, qword [r10 + 8]
0x0000d4c4      42803c020a     cmp byte [rdx + r8], 0xa
0x0000d4c9      75e1           jne 0xd4ac
0x0000d4cb      ebc3           jmp 0xd490
0x0000d4cd      0f1f00         nop dword [rax]
0x0000d4d0      488b5108       mov rdx, qword [rcx + 8]
0x0000d4d4      4a8d3402       lea rsi, [rdx + r8]
0x0000d4d8      0fb606         movzx eax, byte [rsi]
0x0000d4db      3cc1           cmp al, 0xc1
0x0000d4dd      76b1           jbe 0xd490
0x0000d4df      488b4958       mov rcx, qword [rcx + 0x58]
0x0000d4e3      498d7801       lea rdi, [r8 + 1]
0x0000d4e7      4839cf         cmp rdi, rcx
0x0000d4ea      7da4           jge 0xd490
0x0000d4ec      3cdf           cmp al, 0xdf
0x0000d4ee      420fb6540201   movzx edx, byte [rdx + r8 + 1]
0x0000d4f4      7768           ja 0xd55e
0x0000d4f6      83c280         add edx, 0xffffff80
0x0000d4f9      bd02000000     mov ebp, 2
0x0000d4fe      80fa3f         cmp dl, 0x3f
0x0000d501      778d           ja 0xd490
0x0000d503      eb8d           jmp 0xd492
0x0000d505      0f1f00         nop dword [rax]
0x0000d508      4885d2         test rdx, rdx
0x0000d50b      0f8508ffffff   jne 0xd419
0x0000d511      41f6452001     test byte [r13 + 0x20], 1
0x0000d516      0f8576ffffff   jne 0xd492
0x0000d51c      e96fffffff     jmp 0xd490
0x0000d521      0f1f80000000.  nop dword [rax]
0x0000d528      498b7540       mov rsi, qword [r13 + 0x40]
0x0000d52c      4885f6         test rsi, rsi
0x0000d52f      7ee0           jle 0xd511
0x0000d531      498b5508       mov rdx, qword [r13 + 8]
0x0000d535      31c0           xor eax, eax
0x0000d537      eb10           jmp 0xd549
0x0000d539      0f1f80000000.  nop dword [rax]
0x0000d540      4883c001       add rax, 1
0x0000d544      4839f0         cmp rax, rsi
0x0000d547      74c8           je 0xd511
0x0000d549      443b2482       cmp r12d, dword [rdx + rax*4]
0x0000d54d      7cf1           jl 0xd540
0x0000d54f      498b4d10       mov rcx, qword [r13 + 0x10]
0x0000d553      443b2481       cmp r12d, dword [rcx + rax*4]
0x0000d557      7fe7           jg 0xd540
0x0000d559      e924ffffff     jmp 0xd482
0x0000d55e      3cef           cmp al, 0xef
0x0000d560      7746           ja 0xd5a8
0x0000d562      3ce0           cmp al, 0xe0
0x0000d564      7509           jne 0xd56f
0x0000d566      80fa9f         cmp dl, 0x9f
0x0000d569      0f8621ffffff   jbe 0xd490
0x0000d56f      bd03000000     mov ebp, 3
0x0000d574      4863fd         movsxd rdi, ebp
0x0000d577      4901f8         add r8, rdi
0x0000d57a      4c39c1         cmp rcx, r8
0x0000d57d      0f8c0dffffff   jl 0xd490
0x0000d583      b801000000     mov eax, 1
0x0000d588      eb0d           jmp 0xd597
0x0000d58a      4883c001       add rax, 1
0x0000d58e      4839c7         cmp rdi, rax
0x0000d591      0f8efbfeffff   jle 0xd492
0x0000d597      0fb61c06       movzx ebx, byte [rsi + rax]
0x0000d59b      8d5380         lea edx, [rbx - 0x80]
0x0000d59e      80fa3f         cmp dl, 0x3f
0x0000d5a1      76e7           jbe 0xd58a
0x0000d5a3      e9e8feffff     jmp 0xd490
0x0000d5a8      3cf7           cmp al, 0xf7
0x0000d5aa      7714           ja 0xd5c0
0x0000d5ac      3cf0           cmp al, 0xf0
0x0000d5ae      7509           jne 0xd5b9
0x0000d5b0      80fa8f         cmp dl, 0x8f
0x0000d5b3      0f86d7feffff   jbe 0xd490
0x0000d5b9      bd04000000     mov ebp, 4
0x0000d5be      ebb4           jmp 0xd574
0x0000d5c0      3cfb           cmp al, 0xfb
0x0000d5c2      7714           ja 0xd5d8
0x0000d5c4      3cf8           cmp al, 0xf8
0x0000d5c6      7509           jne 0xd5d1
0x0000d5c8      80fa87         cmp dl, 0x87
0x0000d5cb      0f86bffeffff   jbe 0xd490
0x0000d5d1      bd05000000     mov ebp, 5
0x0000d5d6      eb9c           jmp 0xd574
0x0000d5d8      3cfd           cmp al, 0xfd
0x0000d5da      0f87b0feffff   ja 0xd490
0x0000d5e0      3cfc           cmp al, 0xfc
0x0000d5e2      7509           jne 0xd5ed
0x0000d5e4      80fa83         cmp dl, 0x83
0x0000d5e7      0f86a3feffff   jbe 0xd490
0x0000d5ed      bd06000000     mov ebp, 6
0x0000d5f2      eb80           jmp 0xd574
0x0000d5f4      6690           nop
0x0000d5f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- check_arrival:
0x0000d600      4157           push r15
0x0000d602      4156           push r14
0x0000d604      4989ff         mov r15, rdi
0x0000d607      4155           push r13
0x0000d609      4154           push r12
0x0000d60b      55             push rbp
0x0000d60c      53             push rbx
0x0000d60d      4889cd         mov rbp, rcx
0x0000d610      4889d3         mov rbx, rdx
0x0000d613      4881ecd80000.  sub rsp, 0xd8
0x0000d61a      488b8f980000.  mov rcx, qword [rdi + 0x98]
0x0000d621      4c8b6e08       mov r13, qword [rsi + 8]
0x0000d625      64488b042528.  mov rax, qword fs:[0x28]
0x0000d62e      48898424c800.  mov qword [rsp + 0xc8], rax
0x0000d636      31c0           xor eax, eax
0x0000d638      4889d0         mov rax, rdx
0x0000d63b      4889742460     mov qword [rsp + 0x60], rsi
0x0000d640      4c89442478     mov qword [rsp + 0x78], r8
0x0000d645      48c1e004       shl rax, 4
0x0000d649      480301         add rax, qword [rcx]
0x0000d64c      4c894c2440     mov qword [rsp + 0x40], r9
0x0000d651      48894c2430     mov qword [rsp + 0x30], rcx
0x0000d656      c78424880000.  mov dword [rsp + 0x88], 0
0x0000d661      488b00         mov rax, qword [rax]
0x0000d664      4889442448     mov qword [rsp + 0x48], rax
0x0000d669      486387e00000.  movsxd rax, dword [rdi + 0xe0]
0x0000d670      4c01c8         add rax, r9
0x0000d673      4c39e8         cmp rax, r13
0x0000d676      0f8d1a060000   jge 0xdc96
0x0000d67c      488b442460     mov rax, qword [rsp + 0x60]
0x0000d681      498b97b80000.  mov rdx, qword [r15 + 0xb8]
0x0000d688      498b4f48       mov rcx, qword [r15 + 0x48]
0x0000d68c      4c8b20         mov r12, qword [rax]
0x0000d68f      4c8b7010       mov r14, qword [rax + 0x10]
0x0000d693      4889542468     mov qword [rsp + 0x68], rdx
0x0000d698      48894c2470     mov qword [rsp + 0x70], rcx
0x0000d69d      418b97a00000.  mov edx, dword [r15 + 0xa0]
0x0000d6a4      4d85e4         test r12, r12
0x0000d6a7      4d89b7b80000.  mov qword [r15 + 0xb8], r14
0x0000d6ae      0f84dc030000   je 0xda90
0x0000d6b4      498d7424ff     lea rsi, [r12 - 1]
0x0000d6b9      4d896748       mov qword [r15 + 0x48], r12
0x0000d6bd      4c89ff         mov rdi, r15
0x0000d6c0      e80bd3ffff     call sym.re_string_context_at
0x0000d6c5      4939ec         cmp r12, rbp
0x0000d6c8      4189c5         mov r13d, eax
0x0000d6cb      0f84d2030000   je 0xdaa3
0x0000d6d1      4b8b2ce6       mov rbp, qword [r14 + r12*8]
0x0000d6d5      4885ed         test rbp, rbp
0x0000d6d8      740a           je 0xd6e4
0x0000d6da      f6456840       test byte [rbp + 0x68], 0x40
0x0000d6de      0f851c050000   jne 0xdc00
0x0000d6e4      660fefc0       pxor xmm0, xmm0
0x0000d6e8      48c78424a000.  mov qword [rsp + 0xa0], 0
0x0000d6f4      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x0000d6fc      4c3b642440     cmp r12, qword [rsp + 0x40]
0x0000d701      0f8d21030000   jge 0xda28
0x0000d707      418b8fe00000.  mov ecx, dword [r15 + 0xe0]
0x0000d70e      85c9           test ecx, ecx
0x0000d710      0f8812030000   js 0xda28
0x0000d716      488d9c249000.  lea rbx, [rsp + 0x90]
0x0000d71e      4a8d04e50800.  lea rax, [r12*8 + 8]
0x0000d726      4c892424       mov qword [rsp], r12
0x0000d72a      48c744242000.  mov qword [rsp + 0x20], 0
0x0000d733      48895c2408     mov qword [rsp + 8], rbx
0x0000d738      488d9c24b000.  lea rbx, [rsp + 0xb0]
0x0000d740      4889442410     mov qword [rsp + 0x10], rax
0x0000d745      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000d74c      48895c2418     mov qword [rsp + 0x18], rbx
0x0000d751      488d9c248c00.  lea rbx, [rsp + 0x8c]
0x0000d759      48895c2458     mov qword [rsp + 0x58], rbx
0x0000d75e      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000d763      48c784249800.  mov qword [rsp + 0x98], 0
0x0000d76f      488b3408       mov rsi, qword [rax + rcx]
0x0000d773      4885f6         test rsi, rsi
0x0000d776      0f84bc030000   je 0xdb38
0x0000d77c      488b7c2408     mov rdi, qword [rsp + 8]
0x0000d781      4883c608       add rsi, 8
0x0000d785      e886b9ffff     call sym.re_node_set_merge
0x0000d78a      85c0           test eax, eax
0x0000d78c      898424880000.  mov dword [rsp + 0x88], eax
0x0000d793      0f85d7030000   jne 0xdb70
0x0000d799      4885ed         test rbp, rbp
0x0000d79c      0f84a6010000   je 0xd948
0x0000d7a2      48837d2800     cmp qword [rbp + 0x28], 0
0x0000d7a7      488b442418     mov rax, qword [rsp + 0x18]
0x0000d7ac      660fefc0       pxor xmm0, xmm0
0x0000d7b0      4d8ba7980000.  mov r12, qword [r15 + 0x98]
0x0000d7b7      c784248c0000.  mov dword [rsp + 0x8c], 0
0x0000d7c2      48c740100000.  mov qword [rax + 0x10], 0
0x0000d7ca      0f2900         movaps xmmword [rax], xmm0
0x0000d7cd      0f8e2d050000   jle 0xdd00
0x0000d7d3      498d8424d800.  lea rax, [r12 + 0xd8]
0x0000d7db      31db           xor ebx, ebx
0x0000d7dd      4889442428     mov qword [rsp + 0x28], rax
0x0000d7e2      eb45           jmp 0xd829
0x0000d7e4      0f1f4000       nop dword [rax]
0x0000d7e8      488b1424       mov rdx, qword [rsp]
0x0000d7ec      4c89ff         mov rdi, r15
0x0000d7ef      e8ccd2ffff     call sym.check_node_accept
0x0000d7f4      84c0           test al, al
0x0000d7f6      7423           je 0xd81b
0x0000d7f8      4e8d2cf50000.  lea r13, [r14*8]
0x0000d800      498b442418     mov rax, qword [r12 + 0x18]
0x0000d805      488b7c2408     mov rdi, qword [rsp + 8]
0x0000d80a      4a8b3428       mov rsi, qword [rax + r13]
0x0000d80e      e89d9effff     call sym.re_node_set_insert
0x0000d813      84c0           test al, al
0x0000d815      0f843d030000   je 0xdb58
0x0000d81b      4883c301       add rbx, 1
0x0000d81f      483b5d28       cmp rbx, qword [rbp + 0x28]
0x0000d823      0f8d87030000   jge 0xdbb0
0x0000d829      488b4530       mov rax, qword [rbp + 0x30]
0x0000d82d      498b3c24       mov rdi, qword [r12]
0x0000d831      4c8b34d8       mov r14, qword [rax + rbx*8]
0x0000d835      4d89f5         mov r13, r14
0x0000d838      49c1e504       shl r13, 4
0x0000d83c      4a8d342f       lea rsi, [rdi + r13]
0x0000d840      f6460a10       test byte [rsi + 0xa], 0x10
0x0000d844      74a2           je 0xd7e8
0x0000d846      4c8b0424       mov r8, qword [rsp]
0x0000d84a      488b742428     mov rsi, qword [rsp + 0x28]
0x0000d84f      4c89f9         mov rcx, r15
0x0000d852      4c89f2         mov rdx, r14
0x0000d855      e846fbffff     call sym.check_node_accept_bytes.isra.31
0x0000d85a      83f801         cmp eax, 1
0x0000d85d      0f8ebd020000   jle 0xdb20
0x0000d863      4898           cdqe
0x0000d865      48030424       add rax, qword [rsp]
0x0000d869      498b542418     mov rdx, qword [r12 + 0x18]
0x0000d86e      4e8d2cf50000.  lea r13, [r14*8]
0x0000d876      4a8b14f2       mov rdx, qword [rdx + r14*8]
0x0000d87a      4889c1         mov rcx, rax
0x0000d87d      4889442438     mov qword [rsp + 0x38], rax
0x0000d882      4c8d34c50000.  lea r14, [rax*8]
0x0000d88a      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000d891      488b34c8       mov rsi, qword [rax + rcx*8]
0x0000d895      48c78424b800.  mov qword [rsp + 0xb8], 0
0x0000d8a1      4885f6         test rsi, rsi
0x0000d8a4      7423           je 0xd8c9
0x0000d8a6      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000d8ab      4883c608       add rsi, 8
0x0000d8af      4889542450     mov qword [rsp + 0x50], rdx
0x0000d8b4      e857b8ffff     call sym.re_node_set_merge
0x0000d8b9      85c0           test eax, eax
0x0000d8bb      8984248c0000.  mov dword [rsp + 0x8c], eax
0x0000d8c2      488b542450     mov rdx, qword [rsp + 0x50]
0x0000d8c7      7557           jne 0xd920
0x0000d8c9      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000d8ce      4889d6         mov rsi, rdx
0x0000d8d1      e8da9dffff     call sym.re_node_set_insert
0x0000d8d6      84c0           test al, al
0x0000d8d8      0f847a020000   je 0xdb58
0x0000d8de      4d03b7b80000.  add r14, qword [r15 + 0xb8]
0x0000d8e5      488b542418     mov rdx, qword [rsp + 0x18]
0x0000d8ea      4c89e6         mov rsi, r12
0x0000d8ed      488b7c2458     mov rdi, qword [rsp + 0x58]
0x0000d8f2      e809c9ffff     call sym.re_acquire_state
0x0000d8f7      488b542438     mov rdx, qword [rsp + 0x38]
0x0000d8fc      498906         mov qword [r14], rax
0x0000d8ff      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000d906      48833cd000     cmp qword [rax + rdx*8], 0
0x0000d90b      0f85effeffff   jne 0xd800
0x0000d911      8b94248c0000.  mov edx, dword [rsp + 0x8c]
0x0000d918      85d2           test edx, edx
0x0000d91a      0f84e0feffff   je 0xd800
0x0000d920      488bbc24c000.  mov rdi, qword [rsp + 0xc0]
0x0000d928      e8a340ffff     call sym.imp.free
0x0000d92d      8b84248c0000.  mov eax, dword [rsp + 0x8c]
0x0000d934      85c0           test eax, eax
0x0000d936      898424880000.  mov dword [rsp + 0x88], eax
0x0000d93d      0f852d020000   jne 0xdb70
0x0000d943      0f1f440000     nop dword [rax + rax]
0x0000d948      488b0424       mov rax, qword [rsp]
0x0000d94c      4883bc249800.  cmp qword [rsp + 0x98], 0
0x0000d955      488d5801       lea rbx, [rax + 1]
0x0000d959      4989dc         mov r12, rbx
0x0000d95c      7456           je 0xd9b4
0x0000d95e      8b8c24100100.  mov ecx, dword [rsp + 0x110]
0x0000d965      488b542448     mov rdx, qword [rsp + 0x48]
0x0000d96a      488b742408     mov rsi, qword [rsp + 8]
0x0000d96f      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000d974      e827bcffff     call sym.check_arrival_expand_ecl
0x0000d979      85c0           test eax, eax
0x0000d97b      898424880000.  mov dword [rsp + 0x88], eax
0x0000d982      0f85e8010000   jne 0xdb70
0x0000d988      448b84241001.  mov r8d, dword [rsp + 0x110]
0x0000d990      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0000d995      4889da         mov rdx, rbx
0x0000d998      488b742408     mov rsi, qword [rsp + 8]
0x0000d99d      4c89ff         mov rdi, r15
0x0000d9a0      e83bcbffff     call sym.expand_bkref_cache
0x0000d9a5      85c0           test eax, eax
0x0000d9a7      898424880000.  mov dword [rsp + 0x88], eax
0x0000d9ae      0f85bc010000   jne 0xdb70
0x0000d9b4      418b97a00000.  mov edx, dword [r15 + 0xa0]
0x0000d9bb      488b3424       mov rsi, qword [rsp]
0x0000d9bf      4c89ff         mov rdi, r15
0x0000d9c2      e809d0ffff     call sym.re_string_context_at
0x0000d9c7      488b542408     mov rdx, qword [rsp + 8]
0x0000d9cc      488b742430     mov rsi, qword [rsp + 0x30]
0x0000d9d1      488dbc248800.  lea rdi, [rsp + 0x88]
0x0000d9d9      89c1           mov ecx, eax
0x0000d9db      e860c5ffff     call sym.re_acquire_state_context
0x0000d9e0      4885c0         test rax, rax
0x0000d9e3      4889c5         mov rbp, rax
0x0000d9e6      0f84e4010000   je 0xdbd0
0x0000d9ec      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000d9f3      488b542410     mov rdx, qword [rsp + 0x10]
0x0000d9f8      48c744242000.  mov qword [rsp + 0x20], 0
0x0000da01      48892c10       mov qword [rax + rdx], rbp
0x0000da05      48395c2440     cmp qword [rsp + 0x40], rbx
0x0000da0a      7e1c           jle 0xda28
0x0000da0c      496397e00000.  movsxd rdx, dword [r15 + 0xe0]
0x0000da13      488344241008   add qword [rsp + 0x10], 8
0x0000da19      483b542420     cmp rdx, qword [rsp + 0x20]
0x0000da1e      48891c24       mov qword [rsp], rbx
0x0000da22      0f8d36fdffff   jge 0xd75e
0x0000da28      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x0000da30      e89b3fffff     call sym.imp.free
0x0000da35      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000da3c      488b5c2440     mov rbx, qword [rsp + 0x40]
0x0000da41      488b04d8       mov rax, qword [rax + rbx*8]
0x0000da45      4885c0         test rax, rax
0x0000da48      0f84d7020000   je 0xdd25
0x0000da4e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x0000da53      488b542478     mov rdx, qword [rsp + 0x78]
0x0000da58      488d7018       lea rsi, [rax + 0x18]
0x0000da5c      4c8923         mov qword [rbx], r12
0x0000da5f      488b5c2468     mov rbx, qword [rsp + 0x68]
0x0000da64      49899fb80000.  mov qword [r15 + 0xb8], rbx
0x0000da6b      488b5c2470     mov rbx, qword [rsp + 0x70]
0x0000da70      49895f48       mov qword [r15 + 0x48], rbx
0x0000da74      488b7810       mov rdi, qword [rax + 0x10]
0x0000da78      e873b1ffff     call sym.re_node_set_contains.isra.3
0x0000da7d      4885c0         test rax, rax
0x0000da80      0f94c0         sete al
0x0000da83      0fb6c0         movzx eax, al
0x0000da86      e9f9000000     jmp 0xdb84
0x0000da8b      0f1f440000     nop dword [rax + rax]
0x0000da90      488d75ff       lea rsi, [rbp - 1]
0x0000da94      49896f48       mov qword [r15 + 0x48], rbp
0x0000da98      4c89ff         mov rdi, r15
0x0000da9b      e830cfffff     call sym.re_string_context_at
0x0000daa0      4189c5         mov r13d, eax
0x0000daa3      bf08000000     mov edi, 8
0x0000daa8      48c784249000.  mov qword [rsp + 0x90], 1
0x0000dab4      48c784249800.  mov qword [rsp + 0x98], 1
0x0000dac0      e85b41ffff     call sym.imp.malloc
0x0000dac5      4885c0         test rax, rax
0x0000dac8      48898424a000.  mov qword [rsp + 0xa0], rax
0x0000dad0      0f8445020000   je 0xdd1b
0x0000dad6      488918         mov qword [rax], rbx
0x0000dad9      8b8c24100100.  mov ecx, dword [rsp + 0x110]
0x0000dae0      488d9c249000.  lea rbx, [rsp + 0x90]
0x0000dae8      488b542448     mov rdx, qword [rsp + 0x48]
0x0000daed      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000daf2      4989ec         mov r12, rbp
0x0000daf5      4889de         mov rsi, rbx
0x0000daf8      c78424880000.  mov dword [rsp + 0x88], 0
0x0000db03      e898baffff     call sym.check_arrival_expand_ecl
0x0000db08      85c0           test eax, eax
0x0000db0a      898424880000.  mov dword [rsp + 0x88], eax
0x0000db11      0f8416010000   je 0xdc2d
0x0000db17      eb57           jmp 0xdb70
0x0000db19      0f1f80000000.  nop dword [rax]
0x0000db20      85c0           test eax, eax
0x0000db22      0f85d0fcffff   jne 0xd7f8
0x0000db28      498b3424       mov rsi, qword [r12]
0x0000db2c      4c01ee         add rsi, r13
0x0000db2f      e9b4fcffff     jmp 0xd7e8
0x0000db34      0f1f4000       nop dword [rax]
0x0000db38      4885ed         test rbp, rbp
0x0000db3b      0f8561fcffff   jne 0xd7a2
0x0000db41      488b0424       mov rax, qword [rsp]
0x0000db45      488d5801       lea rbx, [rax + 1]
0x0000db49      4989dc         mov r12, rbx
0x0000db4c      e963feffff     jmp 0xd9b4
0x0000db51      0f1f80000000.  nop dword [rax]
0x0000db58      488bbc24c000.  mov rdi, qword [rsp + 0xc0]
0x0000db60      e86b3effff     call sym.imp.free
0x0000db65      c78424880000.  mov dword [rsp + 0x88], 0xc             ; [0xc:4]=0
0x0000db70      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x0000db78      e8533effff     call sym.imp.free
0x0000db7d      8b8424880000.  mov eax, dword [rsp + 0x88]
0x0000db84      488b9c24c800.  mov rbx, qword [rsp + 0xc8]
0x0000db8c      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000db95      0f85b1010000   jne 0xdd4c
0x0000db9b      4881c4d80000.  add rsp, 0xd8
0x0000dba2      5b             pop rbx
0x0000dba3      5d             pop rbp
0x0000dba4      415c           pop r12
0x0000dba6      415d           pop r13
0x0000dba8      415e           pop r14
0x0000dbaa      415f           pop r15
0x0000dbac      c3             ret
0x0000dbad      0f1f00         nop dword [rax]
0x0000dbb0      488bbc24c000.  mov rdi, qword [rsp + 0xc0]
0x0000dbb8      e8133effff     call sym.imp.free
0x0000dbbd      c78424880000.  mov dword [rsp + 0x88], 0
0x0000dbc8      e97bfdffff     jmp 0xd948
0x0000dbcd      0f1f00         nop dword [rax]
0x0000dbd0      8b8424880000.  mov eax, dword [rsp + 0x88]
0x0000dbd7      85c0           test eax, eax
0x0000dbd9      7595           jne 0xdb70
0x0000dbdb      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000dbe2      488b542410     mov rdx, qword [rsp + 0x10]
0x0000dbe7      488344242001   add qword [rsp + 0x20], 1
0x0000dbed      48c704100000.  mov qword [rax + rdx], 0
0x0000dbf5      e90bfeffff     jmp 0xda05
0x0000dbfa      660f1f440000   nop word [rax + rax]
0x0000dc00      488d9c249000.  lea rbx, [rsp + 0x90]
0x0000dc08      488d7508       lea rsi, [rbp + 8]
0x0000dc0c      4889df         mov rdi, rbx
0x0000dc0f      e83cc1ffff     call sym.re_node_set_init_copy
0x0000dc14      85c0           test eax, eax
0x0000dc16      898424880000.  mov dword [rsp + 0x88], eax
0x0000dc1d      0f8561ffffff   jne 0xdb84
0x0000dc23      f6456840       test byte [rbp + 0x68], 0x40
0x0000dc27      0f84cffaffff   je 0xd6fc
0x0000dc2d      4883bc249800.  cmp qword [rsp + 0x98], 0
0x0000dc36      742a           je 0xdc62
0x0000dc38      448b84241001.  mov r8d, dword [rsp + 0x110]
0x0000dc40      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0000dc45      4c89e2         mov rdx, r12
0x0000dc48      4889de         mov rsi, rbx
0x0000dc4b      4c89ff         mov rdi, r15
0x0000dc4e      e88dc8ffff     call sym.expand_bkref_cache
0x0000dc53      85c0           test eax, eax
0x0000dc55      898424880000.  mov dword [rsp + 0x88], eax
0x0000dc5c      0f850effffff   jne 0xdb70
0x0000dc62      488b742430     mov rsi, qword [rsp + 0x30]
0x0000dc67      488dbc248800.  lea rdi, [rsp + 0x88]
0x0000dc6f      4489e9         mov ecx, r13d
0x0000dc72      4889da         mov rdx, rbx
0x0000dc75      e8c6c2ffff     call sym.re_acquire_state_context
0x0000dc7a      4885c0         test rax, rax
0x0000dc7d      4889c5         mov rbp, rax
0x0000dc80      0f8481000000   je 0xdd07
0x0000dc86      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000dc8d      4a892ce0       mov qword [rax + r12*8], rbp
0x0000dc91      e966faffff     jmp 0xd6fc
0x0000dc96      4c8d6001       lea r12, [rax + 1]
0x0000dc9a      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x0000dca4      4c29e8         sub rax, r13
0x0000dca7      4c39e0         cmp rax, r12
0x0000dcaa      7c6f           jl 0xdd1b
0x0000dcac      4f8d742500     lea r14, [r13 + r12]
0x0000dcb1      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; 2305843009213693951
0x0000dcbb      4939c6         cmp r14, rax
0x0000dcbe      775b           ja 0xdd1b
0x0000dcc0      488b442460     mov rax, qword [rsp + 0x60]
0x0000dcc5      4a8d34f50000.  lea rsi, [r14*8]
0x0000dccd      488b7810       mov rdi, qword [rax + 0x10]
0x0000dcd1      e8ba3fffff     call sym.imp.realloc
0x0000dcd6      4885c0         test rax, rax
0x0000dcd9      7440           je 0xdd1b
0x0000dcdb      488b4c2460     mov rcx, qword [rsp + 0x60]
0x0000dce0      4a8d14e50000.  lea rdx, [r12*8]
0x0000dce8      4a8d3ce8       lea rdi, [rax + r13*8]
0x0000dcec      31f6           xor esi, esi
0x0000dcee      48894110       mov qword [rcx + 0x10], rax
0x0000dcf2      4c897108       mov qword [rcx + 8], r14
0x0000dcf6      e8653effff     call sym.imp.memset
0x0000dcfb      e97cf9ffff     jmp 0xd67c
0x0000dd00      31ff           xor edi, edi
0x0000dd02      e9b1feffff     jmp 0xdbb8
0x0000dd07      8bb424880000.  mov esi, dword [rsp + 0x88]
0x0000dd0e      85f6           test esi, esi
0x0000dd10      0f8470ffffff   je 0xdc86
0x0000dd16      e955feffff     jmp 0xdb70
0x0000dd1b      b80c000000     mov eax, 0xc
0x0000dd20      e95ffeffff     jmp 0xdb84
0x0000dd25      488b442460     mov rax, qword [rsp + 0x60]
0x0000dd2a      4c8920         mov qword [rax], r12
0x0000dd2d      488b442468     mov rax, qword [rsp + 0x68]
0x0000dd32      498987b80000.  mov qword [r15 + 0xb8], rax
0x0000dd39      488b442470     mov rax, qword [rsp + 0x70]
0x0000dd3e      49894748       mov qword [r15 + 0x48], rax
0x0000dd42      b801000000     mov eax, 1
0x0000dd47      e938feffff     jmp 0xdb84
0x0000dd4c      e87f3dffff     call sym.imp.__stack_chk_fail
0x0000dd51      0f1f440000     nop dword [rax + rax]
0x0000dd56      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_regs:
0x0000dd60      55             push rbp
0x0000dd61      4889e5         mov rbp, rsp
0x0000dd64      4157           push r15
0x0000dd66      4156           push r14
0x0000dd68      4155           push r13
0x0000dd6a      4154           push r12
0x0000dd6c      4989cd         mov r13, rcx
0x0000dd6f      53             push rbx
0x0000dd70      4989f4         mov r12, rsi
0x0000dd73      4881ecb80000.  sub rsp, 0xb8
0x0000dd7a      48899568ffff.  mov qword [rbp - 0x98], rdx
0x0000dd81      48c745b00000.  mov qword [rbp - 0x50], 0
0x0000dd89      64488b042528.  mov rax, qword fs:[0x28]
0x0000dd92      488945c8       mov qword [rbp - 0x38], rax
0x0000dd96      31c0           xor eax, eax
0x0000dd98      488b07         mov rax, qword [rdi]
0x0000dd9b      4584c0         test r8b, r8b
0x0000dd9e      48c745b80200.  mov qword [rbp - 0x48], 2
0x0000dda6      48c745c00000.  mov qword [rbp - 0x40], 0
0x0000ddae      48898570ffff.  mov qword [rbp - 0x90], rax
0x0000ddb5      0f84a2070000   je 0xe55d
0x0000ddbb      bf60000000     mov edi, 0x60                           ; '`'
0x0000ddc0      e85b3effff     call sym.imp.malloc
0x0000ddc5      488d4db0       lea rcx, [rbp - 0x50]
0x0000ddc9      4885c0         test rax, rax
0x0000ddcc      488945c0       mov qword [rbp - 0x40], rax
0x0000ddd0      48898d78ffff.  mov qword [rbp - 0x88], rcx
0x0000ddd7      0f841f070000   je 0xe4fc
0x0000dddd      488b8570ffff.  mov rax, qword [rbp - 0x90]
0x0000dde4      660fefc0       pxor xmm0, xmm0
0x0000dde8      48c745a00000.  mov qword [rbp - 0x60], 0
0x0000ddf0      488b98900000.  mov rbx, qword [rax + 0x90]
0x0000ddf7      488b8568ffff.  mov rax, qword [rbp - 0x98]
0x0000ddfe      0f294590       movaps xmmword [rbp - 0x70], xmm0
0x0000de02      48c1e004       shl rax, 4
0x0000de06      483dbf0f0000   cmp rax, 0xfbf
0x0000de0c      48898548ffff.  mov qword [rbp - 0xb8], rax
0x0000de13      0f87ed060000   ja 0xe506
0x0000de19      4883c010       add rax, 0x10
0x0000de1d      c68537ffffff.  mov byte [rbp - 0xc9], 0
0x0000de24      4829c4         sub rsp, rax
0x0000de27      488d44240f     lea rax, [rsp + 0xf]
0x0000de2c      4883e0f0       and rax, 0xfffffffffffffff0
0x0000de30      48898540ffff.  mov qword [rbp - 0xc0], rax
0x0000de37      488b9548ffff.  mov rdx, qword [rbp - 0xb8]
0x0000de3e      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000de45      4c89ee         mov rsi, r13
0x0000de48      e8933dffff     call sym.imp.memcpy
0x0000de4d      488d4590       lea rax, [rbp - 0x70]
0x0000de51      498b4d00       mov rcx, qword [r13]
0x0000de55      48898558ffff.  mov qword [rbp - 0xa8], rax
0x0000de5c      4883c010       add rax, 0x10
0x0000de60      48894d88       mov qword [rbp - 0x78], rcx
0x0000de64      48898538ffff.  mov qword [rbp - 0xc8], rax
0x0000de6b      488d4588       lea rax, [rbp - 0x78]
0x0000de6f      48898550ffff.  mov qword [rbp - 0xb0], rax
0x0000de76      e9de000000     jmp 0xdf59
0x0000de7b      0f1f440000     nop dword [rax + rax]
0x0000de80      83fe09         cmp esi, 9
0x0000de83      0f84e7010000   je 0xe070
0x0000de89      4839c8         cmp rax, rcx
0x0000de8c      750e           jne 0xde9c
0x0000de8e      49399c24b000.  cmp qword [r12 + 0xb0], rbx
0x0000de96      0f84d4030000   je 0xe270
0x0000de9c      4d8bb4249800.  mov r14, qword [r12 + 0x98]
0x0000dea4      498b3e         mov rdi, qword [r14]
0x0000dea7      4a8d340f       lea rsi, [rdi + r9]
0x0000deab      0fb64608       movzx eax, byte [rsi + 8]
0x0000deaf      a808           test al, 8
0x0000deb1      0f8509010000   jne 0xdfc0
0x0000deb7      f6460a10       test byte [rsi + 0xa], 0x10
0x0000debb      0f85ff010000   jne 0xe0c0
0x0000dec1      3c04           cmp al, 4
0x0000dec3      0f8437020000   je 0xe100
0x0000dec9      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000decd      4889ca         mov rdx, rcx
0x0000ded0      4c89e7         mov rdi, r12
0x0000ded3      48898d60ffff.  mov qword [rbp - 0xa0], rcx
0x0000deda      e8e1cbffff     call sym.check_node_accept
0x0000dedf      84c0           test al, al
0x0000dee1      488b8d60ffff.  mov rcx, qword [rbp - 0xa0]
0x0000dee8      0f844a040000   je 0xe338
0x0000deee      498b4618       mov rax, qword [r14 + 0x18]
0x0000def2      488d5101       lea rdx, [rcx + 1]
0x0000def6      4a8b1cf8       mov rbx, qword [rax + r15*8]
0x0000defa      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000df02      48895588       mov qword [rbp - 0x78], rdx
0x0000df06      743c           je 0xdf44
0x0000df08      493b9424a800.  cmp rdx, qword [r12 + 0xa8]
0x0000df10      0f8f30040000   jg 0xe346
0x0000df16      498b8424b800.  mov rax, qword [r12 + 0xb8]
0x0000df1e      488b04d0       mov rax, qword [rax + rdx*8]
0x0000df22      4885c0         test rax, rax
0x0000df25      0f841b040000   je 0xe346
0x0000df2b      488b7810       mov rdi, qword [rax + 0x10]
0x0000df2f      488d7018       lea rsi, [rax + 0x18]
0x0000df33      4889da         mov rdx, rbx
0x0000df36      e8b5acffff     call sym.re_node_set_contains.isra.3
0x0000df3b      4885c0         test rax, rax
0x0000df3e      0f8402040000   je 0xe346
0x0000df44      48c745980000.  mov qword [rbp - 0x68], 0
0x0000df4c      4885db         test rbx, rbx
0x0000df4f      0f88d5030000   js 0xe32a
0x0000df55      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000df59      498b4508       mov rax, qword [r13 + 8]
0x0000df5d      4839c8         cmp rax, rcx
0x0000df60      0f8cea040000   jl 0xe450
0x0000df66      488bbd70ffff.  mov rdi, qword [rbp - 0x90]
0x0000df6d      4989d9         mov r9, rbx
0x0000df70      4989df         mov r15, rbx
0x0000df73      49c1e104       shl r9, 4
0x0000df77      488b17         mov rdx, qword [rdi]
0x0000df7a      4c01ca         add rdx, r9
0x0000df7d      0fb67208       movzx esi, byte [rdx + 8]
0x0000df81      83fe08         cmp esi, 8
0x0000df84      0f85f6feffff   jne 0xde80
0x0000df8a      488b12         mov rdx, qword [rdx]
0x0000df8d      4883c201       add rdx, 1
0x0000df91      48399568ffff.  cmp qword [rbp - 0x98], rdx
0x0000df98      0f8eebfeffff   jle 0xde89
0x0000df9e      48c1e204       shl rdx, 4
0x0000dfa2      4c01ea         add rdx, r13
0x0000dfa5      48c74208ffff.  mov qword [rdx + 8], 0xffffffffffffffff
0x0000dfad      48890a         mov qword [rdx], rcx
0x0000dfb0      498b4508       mov rax, qword [r13 + 8]
0x0000dfb4      e9d0feffff     jmp 0xde89
0x0000dfb9      0f1f80000000.  nop dword [rax]
0x0000dfc0      498b8424b800.  mov rax, qword [r12 + 0xb8]
0x0000dfc8      488b5588       mov rdx, qword [rbp - 0x78]
0x0000dfcc      4889de         mov rsi, rbx
0x0000dfcf      488bbd58ffff.  mov rdi, qword [rbp - 0xa8]
0x0000dfd6      4c8b0cd0       mov r9, qword [rax + rdx*8]
0x0000dfda      498b4628       mov rax, qword [r14 + 0x28]
0x0000dfde      488d145b       lea rdx, [rbx + rbx*2]
0x0000dfe2      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x0000dfe9      4c8d3cd0       lea r15, [rax + rdx*8]
0x0000dfed      e8be96ffff     call sym.re_node_set_insert
0x0000dff2      84c0           test al, al
0x0000dff4      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x0000dffb      0f84d7040000   je 0xe4d8
0x0000e001      4d8b5708       mov r10, qword [r15 + 8]
0x0000e005      4d85d2         test r10, r10
0x0000e008      0f8e2a030000   jle 0xe338
0x0000e00e      4d8b7f10       mov r15, qword [r15 + 0x10]
0x0000e012      4d8b5910       mov r11, qword [r9 + 0x10]
0x0000e016      4d8d7118       lea r14, [r9 + 0x18]
0x0000e01a      48c7c3ffffff.  mov rbx, 0xffffffffffffffff
0x0000e021      4531c9         xor r9d, r9d
0x0000e024      4c89a560ffff.  mov qword [rbp - 0xa0], r12
0x0000e02b      0f1f440000     nop dword [rax + rax]
0x0000e030      4f8b24cf       mov r12, qword [r15 + r9*8]
0x0000e034      4c89f6         mov rsi, r14
0x0000e037      4c89df         mov rdi, r11
0x0000e03a      4c89e2         mov rdx, r12
0x0000e03d      e8aeabffff     call sym.re_node_set_contains.isra.3
0x0000e042      4885c0         test rax, rax
0x0000e045      740d           je 0xe054
0x0000e047      4883fbff       cmp rbx, 0xffffffffffffffff
0x0000e04b      0f854f010000   jne 0xe1a0
0x0000e051      4c89e3         mov rbx, r12
0x0000e054      4983c101       add r9, 1
0x0000e058      4d39ca         cmp r10, r9
0x0000e05b      75d3           jne 0xe030
0x0000e05d      4c8ba560ffff.  mov r12, qword [rbp - 0xa0]
0x0000e064      e9e3feffff     jmp 0xdf4c
0x0000e069      0f1f80000000.  nop dword [rax]
0x0000e070      488b3a         mov rdi, qword [rdx]
0x0000e073      488d7701       lea rsi, [rdi + 1]
0x0000e077      4839b568ffff.  cmp qword [rbp - 0x98], rsi
0x0000e07e      0f8e05feffff   jle 0xde89
0x0000e084      48c1e604       shl rsi, 4
0x0000e088      498d443500     lea rax, [r13 + rsi]
0x0000e08d      483908         cmp qword [rax], rcx
0x0000e090      0f8c7a030000   jl 0xe410
0x0000e096      f6420a08       test byte [rdx + 0xa], 8
0x0000e09a      7412           je 0xe0ae
0x0000e09c      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000e0a3      48833c37ff     cmp qword [rdi + rsi], 0xffffffffffffffff
0x0000e0a8      0f85ed030000   jne 0xe49b
0x0000e0ae      48894808       mov qword [rax + 8], rcx
0x0000e0b2      498b4508       mov rax, qword [r13 + 8]
0x0000e0b6      e9cefdffff     jmp 0xde89
0x0000e0bb      0f1f440000     nop dword [rax + rax]
0x0000e0c0      4c8b4588       mov r8, qword [rbp - 0x78]
0x0000e0c4      498db6d80000.  lea rsi, [r14 + 0xd8]
0x0000e0cb      4c89e1         mov rcx, r12
0x0000e0ce      4889da         mov rdx, rbx
0x0000e0d1      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x0000e0d8      e8c3f2ffff     call sym.check_node_accept_bytes.isra.31
0x0000e0dd      4863c8         movsxd rcx, eax
0x0000e0e0      4885c9         test rcx, rcx
0x0000e0e3      0f85f8010000   jne 0xe2e1
0x0000e0e9      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x0000e0f0      498b36         mov rsi, qword [r14]
0x0000e0f3      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000e0f7      4c01ce         add rsi, r9
0x0000e0fa      e9cefdffff     jmp 0xdecd
0x0000e0ff      90             nop
0x0000e100      488b06         mov rax, qword [rsi]
0x0000e103      4883c001       add rax, 1
0x0000e107      48c1e004       shl rax, 4
0x0000e10b      4c01e8         add rax, r13
0x0000e10e      488b5008       mov rdx, qword [rax + 8]
0x0000e112      488b38         mov rdi, qword [rax]
0x0000e115      4889d1         mov rcx, rdx
0x0000e118      4829f9         sub rcx, rdi
0x0000e11b      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000e123      0f84af010000   je 0xe2d8
0x0000e129      4883ffff       cmp rdi, 0xffffffffffffffff
0x0000e12d      0f8413020000   je 0xe346
0x0000e133      4883faff       cmp rdx, 0xffffffffffffffff
0x0000e137      0f8409020000   je 0xe346
0x0000e13d      4885c9         test rcx, rcx
0x0000e140      0f844a020000   je 0xe390
0x0000e146      4c8b7d88       mov r15, qword [rbp - 0x78]
0x0000e14a      498b542430     mov rdx, qword [r12 + 0x30]
0x0000e14f      498b442408     mov rax, qword [r12 + 8]
0x0000e154      4c29fa         sub rdx, r15
0x0000e157      4839d1         cmp rcx, rdx
0x0000e15a      0f8fe6010000   jg 0xe346
0x0000e160      4a8d3438       lea rsi, [rax + r15]
0x0000e164      4801c7         add rdi, rax
0x0000e167      4889ca         mov rdx, rcx
0x0000e16a      48898d60ffff.  mov qword [rbp - 0xa0], rcx
0x0000e171      e81a3affff     call sym.imp.memcmp
0x0000e176      85c0           test eax, eax
0x0000e178      488b8d60ffff.  mov rcx, qword [rbp - 0xa0]
0x0000e17f      0f85c1010000   jne 0xe346
0x0000e185      498b4618       mov rax, qword [r14 + 0x18]
0x0000e189      498d140f       lea rdx, [r15 + rcx]
0x0000e18d      488b1cd8       mov rbx, qword [rax + rbx*8]
0x0000e191      e964fdffff     jmp 0xdefa
0x0000e196      662e0f1f8400.  nop word cs:[rax + rax]
0x0000e1a0      488bb538ffff.  mov rsi, qword [rbp - 0xc8]
0x0000e1a7      488b7d98       mov rdi, qword [rbp - 0x68]
0x0000e1ab      4889da         mov rdx, rbx
0x0000e1ae      4d89e6         mov r14, r12
0x0000e1b1      4c8ba560ffff.  mov r12, qword [rbp - 0xa0]
0x0000e1b8      e833aaffff     call sym.re_node_set_contains.isra.3
0x0000e1bd      4885c0         test rax, rax
0x0000e1c0      0f85ba010000   jne 0xe380
0x0000e1c6      488b8d78ffff.  mov rcx, qword [rbp - 0x88]
0x0000e1cd      4885c9         test rcx, rcx
0x0000e1d0      0f8476fdffff   je 0xdf4c
0x0000e1d6      4c8b39         mov r15, qword [rcx]
0x0000e1d9      488b5588       mov rdx, qword [rbp - 0x78]
0x0000e1dd      498d4701       lea rax, [r15 + 1]
0x0000e1e1      483b4108       cmp rax, qword [rcx + 8]
0x0000e1e5      488901         mov qword [rcx], rax
0x0000e1e8      0f847f030000   je 0xe56d
0x0000e1ee      488b4110       mov rax, qword [rcx + 0x10]
0x0000e1f2      4f8d3c7f       lea r15, [r15 + r15*2]
0x0000e1f6      49c1e704       shl r15, 4
0x0000e1fa      4901c7         add r15, rax
0x0000e1fd      4d897708       mov qword [r15 + 8], r14
0x0000e201      4c8bb548ffff.  mov r14, qword [rbp - 0xb8]
0x0000e208      498917         mov qword [r15], rdx
0x0000e20b      4c89f7         mov rdi, r14
0x0000e20e      e80d3affff     call sym.imp.malloc
0x0000e213      4885c0         test rax, rax
0x0000e216      49894710       mov qword [r15 + 0x10], rax
0x0000e21a      7426           je 0xe242
0x0000e21c      4c89f2         mov rdx, r14
0x0000e21f      4c89ee         mov rsi, r13
0x0000e222      4889c7         mov rdi, rax
0x0000e225      e8b639ffff     call sym.imp.memcpy
0x0000e22a      488bb558ffff.  mov rsi, qword [rbp - 0xa8]
0x0000e231      498d7f18       lea rdi, [r15 + 0x18]
0x0000e235      e816bbffff     call sym.re_node_set_init_copy
0x0000e23a      85c0           test eax, eax
0x0000e23c      0f840afdffff   je 0xdf4c
0x0000e242      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000e246      e88537ffff     call sym.imp.free
0x0000e24b      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000e252      0f8593030000   jne 0xe5eb
0x0000e258      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000e25f      e84ce0ffff     call sym.free_fail_stack_return.part.24
0x0000e264      b80c000000     mov eax, 0xc
0x0000e269      e90b020000     jmp 0xe479
0x0000e26e      6690           nop
0x0000e270      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000e278      0f842e030000   je 0xe5ac
0x0000e27e      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x0000e285      4885c9         test rcx, rcx
0x0000e288      7420           je 0xe2aa
0x0000e28a      4c89e8         mov rax, r13
0x0000e28d      31d2           xor edx, edx
0x0000e28f      90             nop
0x0000e290      48833800       cmp qword [rax], 0
0x0000e294      7807           js 0xe29d
0x0000e296      48837808ff     cmp qword [rax + 8], 0xffffffffffffffff
0x0000e29b      7453           je 0xe2f0
0x0000e29d      4883c201       add rdx, 1
0x0000e2a1      4883c010       add rax, 0x10
0x0000e2a5      4839d1         cmp rcx, rdx
0x0000e2a8      75e6           jne 0xe290
0x0000e2aa      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000e2ae      e81d37ffff     call sym.imp.free
0x0000e2b3      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000e2ba      0f8574030000   jne 0xe634
0x0000e2c0      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000e2c7      e8e4dfffff     call sym.free_fail_stack_return.part.24
0x0000e2cc      31c0           xor eax, eax
0x0000e2ce      e9a6010000     jmp 0xe479
0x0000e2d3      0f1f440000     nop dword [rax + rax]
0x0000e2d8      4885c9         test rcx, rcx
0x0000e2db      0f84af000000   je 0xe390
0x0000e2e1      4c8b7d88       mov r15, qword [rbp - 0x78]
0x0000e2e5      e99bfeffff     jmp 0xe185
0x0000e2ea      660f1f440000   nop word [rax + rax]
0x0000e2f0      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000e2f7      4c8b8d58ffff.  mov r9, qword [rbp - 0xa8]
0x0000e2fe      4d89e8         mov r8, r13
0x0000e301      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x0000e308      488b9550ffff.  mov rdx, qword [rbp - 0xb0]
0x0000e30f      488d7710       lea rsi, [rdi + 0x10]
0x0000e313      e8e8dfffff     call sym.pop_fail_stack.isra.25
0x0000e318      4989c1         mov r9, rax
0x0000e31b      4889c3         mov rbx, rax
0x0000e31e      4989c7         mov r15, rax
0x0000e321      49c1e104       shl r9, 4
0x0000e325      e972fbffff     jmp 0xde9c
0x0000e32a      4883fbfe       cmp rbx, 0xfffffffffffffffe
0x0000e32e      0f84a4010000   je 0xe4d8
0x0000e334      0f1f4000       nop dword [rax]
0x0000e338      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000e340      0f84b6020000   je 0xe5fc
0x0000e346      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000e34d      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x0000e354      488d5588       lea rdx, [rbp - 0x78]
0x0000e358      4c8b8d58ffff.  mov r9, qword [rbp - 0xa8]
0x0000e35f      4d89e8         mov r8, r13
0x0000e362      488d7710       lea rsi, [rdi + 0x10]
0x0000e366      e895dfffff     call sym.pop_fail_stack.isra.25
0x0000e36b      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000e36f      4889c3         mov rbx, rax
0x0000e372      e9f4faffff     jmp 0xde6b
0x0000e377      660f1f840000.  nop word [rax + rax]
0x0000e380      4c89f3         mov rbx, r14
0x0000e383      e9c4fbffff     jmp 0xdf4c
0x0000e388      0f1f84000000.  nop dword [rax + rax]
0x0000e390      488bbd58ffff.  mov rdi, qword [rbp - 0xa8]
0x0000e397      4889de         mov rsi, rbx
0x0000e39a      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x0000e3a1      e80a93ffff     call sym.re_node_set_insert
0x0000e3a6      84c0           test al, al
0x0000e3a8      0f842a010000   je 0xe4d8
0x0000e3ae      498b5628       mov rdx, qword [r14 + 0x28]
0x0000e3b2      488d045b       lea rax, [rbx + rbx*2]
0x0000e3b6      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000e3ba      488d04c2       lea rax, [rdx + rax*8]
0x0000e3be      48898d28ffff.  mov qword [rbp - 0xd8], rcx
0x0000e3c5      488b4010       mov rax, qword [rax + 0x10]
0x0000e3c9      488b18         mov rbx, qword [rax]
0x0000e3cc      498b8424b800.  mov rax, qword [r12 + 0xb8]
0x0000e3d4      488b04c8       mov rax, qword [rax + rcx*8]
0x0000e3d8      4889da         mov rdx, rbx
0x0000e3db      488b7810       mov rdi, qword [rax + 0x10]
0x0000e3df      488d7018       lea rsi, [rax + 0x18]
0x0000e3e3      e808a8ffff     call sym.re_node_set_contains.isra.3
0x0000e3e8      4885c0         test rax, rax
0x0000e3eb      0f855bfbffff   jne 0xdf4c
0x0000e3f1      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x0000e3f8      498b36         mov rsi, qword [r14]
0x0000e3fb      488b8d28ffff.  mov rcx, qword [rbp - 0xd8]
0x0000e402      4c01ce         add rsi, r9
0x0000e405      e9c3faffff     jmp 0xdecd
0x0000e40a      660f1f440000   nop word [rax + rax]
0x0000e410      488b9548ffff.  mov rdx, qword [rbp - 0xb8]
0x0000e417      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000e41e      4c89ee         mov rsi, r13
0x0000e421      48894808       mov qword [rax + 8], rcx
0x0000e425      4c898d28ffff.  mov qword [rbp - 0xd8], r9
0x0000e42c      48898d60ffff.  mov qword [rbp - 0xa0], rcx
0x0000e433      e8a837ffff     call sym.imp.memcpy
0x0000e438      498b4508       mov rax, qword [r13 + 8]
0x0000e43c      488b8d60ffff.  mov rcx, qword [rbp - 0xa0]
0x0000e443      4c8b8d28ffff.  mov r9, qword [rbp - 0xd8]
0x0000e44a      e93afaffff     jmp 0xde89
0x0000e44f      90             nop
0x0000e450      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000e454      e87735ffff     call sym.imp.free
0x0000e459      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000e460      0f85d6000000   jne 0xe53c
0x0000e466      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000e46d      4885ff         test rdi, rdi
0x0000e470      7405           je 0xe477
0x0000e472      e839deffff     call sym.free_fail_stack_return.part.24
0x0000e477      31c0           xor eax, eax
0x0000e479      488b5dc8       mov rbx, qword [rbp - 0x38]
0x0000e47d      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000e486      0f85b9010000   jne 0xe645
0x0000e48c      488d65d8       lea rsp, [rbp - 0x28]
0x0000e490      5b             pop rbx
0x0000e491      415c           pop r12
0x0000e493      415d           pop r13
0x0000e495      415e           pop r14
0x0000e497      415f           pop r15
0x0000e499      5d             pop rbp
0x0000e49a      c3             ret
0x0000e49b      488b9548ffff.  mov rdx, qword [rbp - 0xb8]
0x0000e4a2      4889fe         mov rsi, rdi
0x0000e4a5      4c89ef         mov rdi, r13
0x0000e4a8      48898d28ffff.  mov qword [rbp - 0xd8], rcx
0x0000e4af      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x0000e4b6      e82537ffff     call sym.imp.memcpy
0x0000e4bb      498b4508       mov rax, qword [r13 + 8]
0x0000e4bf      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x0000e4c6      488b8d28ffff.  mov rcx, qword [rbp - 0xd8]
0x0000e4cd      e9b7f9ffff     jmp 0xde89
0x0000e4d2      660f1f440000   nop word [rax + rax]
0x0000e4d8      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000e4dc      e8ef34ffff     call sym.imp.free
0x0000e4e1      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000e4e8      0f85fd000000   jne 0xe5eb
0x0000e4ee      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000e4f6      0f855cfdffff   jne 0xe258
0x0000e4fc      b80c000000     mov eax, 0xc
0x0000e501      e973ffffff     jmp 0xe479
0x0000e506      488bbd48ffff.  mov rdi, qword [rbp - 0xb8]
0x0000e50d      e80e37ffff     call sym.imp.malloc
0x0000e512      4885c0         test rax, rax
0x0000e515      48898540ffff.  mov qword [rbp - 0xc0], rax
0x0000e51c      c68537ffffff.  mov byte [rbp - 0xc9], 1
0x0000e523      0f850ef9ffff   jne 0xde37
0x0000e529      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000e530      4885ff         test rdi, rdi
0x0000e533      74c7           je 0xe4fc
0x0000e535      e876ddffff     call sym.free_fail_stack_return.part.24
0x0000e53a      ebc0           jmp 0xe4fc
0x0000e53c      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000e543      e88834ffff     call sym.imp.free
0x0000e548      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000e54f      4885ff         test rdi, rdi
0x0000e552      0f851affffff   jne 0xe472
0x0000e558      e91affffff     jmp 0xe477
0x0000e55d      48c78578ffff.  mov qword [rbp - 0x88], 0
0x0000e568      e970f8ffff     jmp 0xdddd
0x0000e56d      488d3440       lea rsi, [rax + rax*2]
0x0000e571      488b8578ffff.  mov rax, qword [rbp - 0x88]
0x0000e578      48899560ffff.  mov qword [rbp - 0xa0], rdx
0x0000e57f      48c1e605       shl rsi, 5
0x0000e583      488b7810       mov rdi, qword [rax + 0x10]
0x0000e587      e80437ffff     call sym.imp.realloc
0x0000e58c      4885c0         test rax, rax
0x0000e58f      7444           je 0xe5d5
0x0000e591      488b8d78ffff.  mov rcx, qword [rbp - 0x88]
0x0000e598      488b9560ffff.  mov rdx, qword [rbp - 0xa0]
0x0000e59f      48d16108       shl qword [rcx + 8], 1
0x0000e5a3      48894110       mov qword [rcx + 0x10], rax
0x0000e5a7      e946fcffff     jmp 0xe1f2
0x0000e5ac      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000e5b0      e81b34ffff     call sym.imp.free
0x0000e5b5      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000e5bc      0f84b5feffff   je 0xe477
0x0000e5c2      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000e5c9      e80234ffff     call sym.imp.free
0x0000e5ce      31c0           xor eax, eax
0x0000e5d0      e9a4feffff     jmp 0xe479
0x0000e5d5      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000e5d9      e8f233ffff     call sym.imp.free
0x0000e5de      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000e5e5      0f846dfcffff   je 0xe258
0x0000e5eb      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000e5f2      e8d933ffff     call sym.imp.free
0x0000e5f7      e9f2feffff     jmp 0xe4ee
0x0000e5fc      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000e600      e8cb33ffff     call sym.imp.free
0x0000e605      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000e60c      b801000000     mov eax, 1
0x0000e611      0f8462feffff   je 0xe479
0x0000e617      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000e61e      898578ffffff   mov dword [rbp - 0x88], eax
0x0000e624      e8a733ffff     call sym.imp.free
0x0000e629      8b8578ffffff   mov eax, dword [rbp - 0x88]
0x0000e62f      e945feffff     jmp 0xe479
0x0000e634      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000e63b      e89033ffff     call sym.imp.free
0x0000e640      e97bfcffff     jmp 0xe2c0
0x0000e645      e88634ffff     call sym.imp.__stack_chk_fail
0x0000e64a      660f1f440000   nop word [rax + rax]
;-- get_subexp_sub.isra.32:
0x0000e650      4157           push r15
0x0000e652      4156           push r14
0x0000e654      4989ce         mov r14, rcx
0x0000e657      4155           push r13
0x0000e659      4154           push r12
0x0000e65b      4989f5         mov r13, rsi
0x0000e65e      55             push rbp
0x0000e65f      53             push rbx
0x0000e660      488d7210       lea rsi, [rdx + 0x10]
0x0000e664      4889d5         mov rbp, rdx
0x0000e667      4d89c1         mov r9, r8
0x0000e66a      4d89c4         mov r12, r8
0x0000e66d      4883ec20       sub rsp, 0x20
0x0000e671      488b4a08       mov rcx, qword [rdx + 8]
0x0000e675      4d89f0         mov r8, r14
0x0000e678      6a08           push 8
0x0000e67a      488b12         mov rdx, qword [rdx]
0x0000e67d      4889fb         mov rbx, rdi
0x0000e680      e87befffff     call sym.check_arrival
0x0000e685      85c0           test eax, eax
0x0000e687      5a             pop rdx
0x0000e688      59             pop rcx
0x0000e689      7415           je 0xe6a0
0x0000e68b      4883c418       add rsp, 0x18
0x0000e68f      5b             pop rbx
0x0000e690      5d             pop rbp
0x0000e691      415c           pop r12
0x0000e693      415d           pop r13
0x0000e695      415e           pop r14
0x0000e697      415f           pop r15
0x0000e699      c3             ret
0x0000e69a      660f1f440000   nop word [rax + rax]
0x0000e6a0      488b83c80000.  mov rax, qword [rbx + 0xc8]
0x0000e6a7      488b93d00000.  mov rdx, qword [rbx + 0xd0]
0x0000e6ae      4c8b7d08       mov r15, qword [rbp + 8]
0x0000e6b2      498b4d00       mov rcx, qword [r13]
0x0000e6b6      488bbbd80000.  mov rdi, qword [rbx + 0xd8]
0x0000e6bd      4839d0         cmp rax, rdx
0x0000e6c0      4c89fe         mov rsi, r15
0x0000e6c3      0f8d97000000   jge 0xe760
0x0000e6c9      488d1480       lea rdx, [rax + rax*4]
0x0000e6cd      48c1e203       shl rdx, 3
0x0000e6d1      4885c0         test rax, rax
0x0000e6d4      7e0b           jle 0xe6e1
0x0000e6d6      4c8d4417d8     lea r8, [rdi + rdx - 0x28]
0x0000e6db      4d3b6008       cmp r12, qword [r8 + 8]
0x0000e6df      746f           je 0xe750
0x0000e6e1      4801d7         add rdi, rdx
0x0000e6e4      31d2           xor edx, edx
0x0000e6e6      4939cf         cmp r15, rcx
0x0000e6e9      0f94c2         sete dl
0x0000e6ec      4883c001       add rax, 1
0x0000e6f0      4c8937         mov qword [rdi], r14
0x0000e6f3      f7da           neg edx
0x0000e6f5      4c896708       mov qword [rdi + 8], r12
0x0000e6f9      48894f10       mov qword [rdi + 0x10], rcx
0x0000e6fd      66895722       mov word [rdi + 0x22], dx
0x0000e701      4c897f18       mov qword [rdi + 0x18], r15
0x0000e705      488983c80000.  mov qword [rbx + 0xc8], rax
0x0000e70c      c6472000       mov byte [rdi + 0x20], 0
0x0000e710      4c89f8         mov rax, r15
0x0000e713      486393e00000.  movsxd rdx, dword [rbx + 0xe0]
0x0000e71a      4829c8         sub rax, rcx
0x0000e71d      4839c2         cmp rdx, rax
0x0000e720      7d0a           jge 0xe72c
0x0000e722      4129cf         sub r15d, ecx
0x0000e725      4489bbe00000.  mov dword [rbx + 0xe0], r15d
0x0000e72c      4c01e6         add rsi, r12
0x0000e72f      492b7500       sub rsi, qword [r13]
0x0000e733      4883c418       add rsp, 0x18
0x0000e737      4889df         mov rdi, rbx
0x0000e73a      5b             pop rbx
0x0000e73b      5d             pop rbp
0x0000e73c      415c           pop r12
0x0000e73e      415d           pop r13
0x0000e740      415e           pop r14
0x0000e742      415f           pop r15
0x0000e744      e9379bffff     jmp sym.clean_state_log_if_needed
0x0000e749      0f1f80000000.  nop dword [rax]
0x0000e750      41c6402001     mov byte [r8 + 0x20], 1
0x0000e755      eb8a           jmp 0xe6e1
0x0000e757      660f1f840000.  nop word [rax + rax]
0x0000e760      488d3492       lea rsi, [rdx + rdx*4]
0x0000e764      48894c2408     mov qword [rsp + 8], rcx
0x0000e769      48c1e604       shl rsi, 4
0x0000e76d      e81e35ffff     call sym.imp.realloc
0x0000e772      4885c0         test rax, rax
0x0000e775      488b4c2408     mov rcx, qword [rsp + 8]
0x0000e77a      7454           je 0xe7d0
0x0000e77c      488bb3c80000.  mov rsi, qword [rbx + 0xc8]
0x0000e783      488b93d00000.  mov rdx, qword [rbx + 0xd0]
0x0000e78a      488983d80000.  mov qword [rbx + 0xd8], rax
0x0000e791      48894c2408     mov qword [rsp + 8], rcx
0x0000e796      488d34b6       lea rsi, [rsi + rsi*4]
0x0000e79a      488d1492       lea rdx, [rdx + rdx*4]
0x0000e79e      488d3cf0       lea rdi, [rax + rsi*8]
0x0000e7a2      48c1e203       shl rdx, 3
0x0000e7a6      31f6           xor esi, esi
0x0000e7a8      e8b333ffff     call sym.imp.memset
0x0000e7ad      48d1a3d00000.  shl qword [rbx + 0xd0], 1
0x0000e7b4      488b83c80000.  mov rax, qword [rbx + 0xc8]
0x0000e7bb      488bbbd80000.  mov rdi, qword [rbx + 0xd8]
0x0000e7c2      488b7508       mov rsi, qword [rbp + 8]
0x0000e7c6      488b4c2408     mov rcx, qword [rsp + 8]
0x0000e7cb      e9f9feffff     jmp 0xe6c9
0x0000e7d0      488bbbd80000.  mov rdi, qword [rbx + 0xd8]
0x0000e7d7      e8f431ffff     call sym.imp.free
0x0000e7dc      b80c000000     mov eax, 0xc
0x0000e7e1      e9a5feffff     jmp 0xe68b
0x0000e7e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- transit_state_bkref.isra.34:
0x0000e7f0      4157           push r15
0x0000e7f2      4156           push r14
0x0000e7f4      4155           push r13
0x0000e7f6      4154           push r12
0x0000e7f8      55             push rbp
0x0000e7f9      53             push rbx
0x0000e7fa      4881ecb80000.  sub rsp, 0xb8
0x0000e801      4c8b7f48       mov r15, qword [rdi + 0x48]
0x0000e805      64488b042528.  mov rax, qword fs:[0x28]
0x0000e80e      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000e816      31c0           xor eax, eax
0x0000e818      48833e00       cmp qword [rsi], 0
0x0000e81c      488b87980000.  mov rax, qword [rdi + 0x98]
0x0000e823      4889742448     mov qword [rsp + 0x48], rsi
0x0000e828      4889542440     mov qword [rsp + 0x40], rdx
0x0000e82d      4889442438     mov qword [rsp + 0x38], rax
0x0000e832      0f8e28030000   jle 0xeb60
0x0000e838      4a8d04fd0000.  lea rax, [r15*8]
0x0000e840      4989fe         mov r14, rdi
0x0000e843      48c704240000.  mov qword [rsp], 0
0x0000e84b      4c897c2408     mov qword [rsp + 8], r15
0x0000e850      4889442460     mov qword [rsp + 0x60], rax
0x0000e855      488d84249000.  lea rax, [rsp + 0x90]
0x0000e85d      4889442468     mov qword [rsp + 0x68], rax
0x0000e862      488d84248c00.  lea rax, [rsp + 0x8c]
0x0000e86a      4889442478     mov qword [rsp + 0x78], rax
0x0000e86f      eb46           jmp 0xe8b7
0x0000e871      0f1f80000000.  nop dword [rax]
0x0000e878      a801           test al, 1
0x0000e87a      7424           je 0xe8a0
0x0000e87c      83e208         and edx, 8
0x0000e87f      751f           jne 0xe8a0
0x0000e881      f6c120         test cl, 0x20                           ; "@"
0x0000e884      7404           je 0xe88a
0x0000e886      a802           test al, 2
0x0000e888      7416           je 0xe8a0
0x0000e88a      81e180000000   and ecx, 0x80
0x0000e890      0f849a000000   je 0xe930
0x0000e896      a808           test al, 8
0x0000e898      0f8592000000   jne 0xe930
0x0000e89e      6690           nop
0x0000e8a0      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0000e8a5      4883042401     add qword [rsp], 1
0x0000e8aa      488b0424       mov rax, qword [rsp]
0x0000e8ae      483b07         cmp rax, qword [rdi]
0x0000e8b1      0f8da9020000   jge 0xeb60
0x0000e8b7      488b442440     mov rax, qword [rsp + 0x40]
0x0000e8bc      488b3c24       mov rdi, qword [rsp]
0x0000e8c0      488b00         mov rax, qword [rax]
0x0000e8c3      4c8b2cf8       mov r13, qword [rax + rdi*8]
0x0000e8c7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000e8cc      488b07         mov rax, qword [rdi]
0x0000e8cf      4c89eb         mov rbx, r13
0x0000e8d2      48c1e304       shl rbx, 4
0x0000e8d6      4801d8         add rax, rbx
0x0000e8d9      80780804       cmp byte [rax + 8], 4
0x0000e8dd      75c1           jne 0xe8a0
0x0000e8df      8b6808         mov ebp, dword [rax + 8]
0x0000e8e2      f7c500ff0300   test ebp, 0x3ff00
0x0000e8e8      7446           je 0xe930
0x0000e8ea      418b96a00000.  mov edx, dword [r14 + 0xa0]
0x0000e8f1      488b742408     mov rsi, qword [rsp + 8]
0x0000e8f6      4c89f7         mov rdi, r14
0x0000e8f9      e8d2c0ffff     call sym.re_string_context_at
0x0000e8fe      89ea           mov edx, ebp
0x0000e900      c1ea08         shr edx, 8
0x0000e903      89d1           mov ecx, edx
0x0000e905      6681e1ff03     and cx, 0x3ff
0x0000e90a      f6c204         test dl, 4
0x0000e90d      0f8565ffffff   jne 0xe878
0x0000e913      83e208         and edx, 8
0x0000e916      0f8465ffffff   je 0xe881
0x0000e91c      a801           test al, 1
0x0000e91e      0f845dffffff   je 0xe881
0x0000e924      e977ffffff     jmp 0xe8a0
0x0000e929      0f1f80000000.  nop dword [rax]
0x0000e930      498bbec80000.  mov rdi, qword [r14 + 0xc8]
0x0000e937      498b86980000.  mov rax, qword [r14 + 0x98]
0x0000e93e      31c9           xor ecx, ecx
0x0000e940      4d8b5608       mov r10, qword [r14 + 8]
0x0000e944      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000e949      48897c2470     mov qword [rsp + 0x70], rdi
0x0000e94e      4889442450     mov qword [rsp + 0x50], rax
0x0000e953      4839f9         cmp rcx, rdi
0x0000e956      7d53           jge 0xe9ab
0x0000e958      488d0439       lea rax, [rcx + rdi]
0x0000e95c      4d8b9ed80000.  mov r11, qword [r14 + 0xd8]
0x0000e963      4889c6         mov rsi, rax
0x0000e966      48c1ee3f       shr rsi, 0x3f
0x0000e96a      4801c6         add rsi, rax
0x0000e96d      48d1fe         sar rsi, 1
0x0000e970      488d04b6       lea rax, [rsi + rsi*4]
0x0000e974      4d3b4cc308     cmp r9, qword [r11 + rax*8 + 8]
0x0000e979      7e2b           jle 0xe9a6
0x0000e97b      e9c8010000     jmp 0xeb48
0x0000e980      488d140e       lea rdx, [rsi + rcx]
0x0000e984      4889d0         mov rax, rdx
0x0000e987      48c1e83f       shr rax, 0x3f
0x0000e98b      4801d0         add rax, rdx
0x0000e98e      48d1f8         sar rax, 1
0x0000e991      488d1480       lea rdx, [rax + rax*4]
0x0000e995      4989c0         mov r8, rax
0x0000e998      4d3b4cd308     cmp r9, qword [r11 + rdx*8 + 8]
0x0000e99d      0f8fad010000   jg 0xeb50
0x0000e9a3      4889c6         mov rsi, rax
0x0000e9a6      4839ce         cmp rsi, rcx
0x0000e9a9      7fd5           jg 0xe980
0x0000e9ab      48394c2470     cmp qword [rsp + 0x70], rcx
0x0000e9b0      7e24           jle 0xe9d6
0x0000e9b2      498b96d80000.  mov rdx, qword [r14 + 0xd8]
0x0000e9b9      488d0489       lea rax, [rcx + rcx*4]
0x0000e9bd      488b7c2408     mov rdi, qword [rsp + 8]
0x0000e9c2      488d04c2       lea rax, [rdx + rax*8]
0x0000e9c6      48397808       cmp qword [rax + 8], rdi
0x0000e9ca      750a           jne 0xe9d6
0x0000e9cc      4883f9ff       cmp rcx, 0xffffffffffffffff
0x0000e9d0      0f85d0010000   jne 0xeba6
0x0000e9d6      488b442450     mov rax, qword [rsp + 0x50]
0x0000e9db      4983bee80000.  cmp qword [r14 + 0xe8], 0
0x0000e9e3      488b10         mov rdx, qword [rax]
0x0000e9e6      488b041a       mov rax, qword [rdx + rbx]
0x0000e9ea      4889442458     mov qword [rsp + 0x58], rax
0x0000e9ef      0f8eb6010000   jle 0xebab
0x0000e9f5      4c896c2430     mov qword [rsp + 0x30], r13
0x0000e9fa      48c744242800.  mov qword [rsp + 0x28], 0
0x0000ea03      4d89d5         mov r13, r10
0x0000ea06      498b86f80000.  mov rax, qword [r14 + 0xf8]
0x0000ea0d      488b5c2428     mov rbx, qword [rsp + 0x28]
0x0000ea12      488b7c2458     mov rdi, qword [rsp + 0x58]
0x0000ea17      488b1cd8       mov rbx, qword [rax + rbx*8]
0x0000ea1b      488b4308       mov rax, qword [rbx + 8]
0x0000ea1f      48c1e004       shl rax, 4
0x0000ea23      483b3c02       cmp rdi, qword [rdx + rax]
0x0000ea27      7427           je 0xea50
0x0000ea29      488344242801   add qword [rsp + 0x28], 1
0x0000ea2f      488b442428     mov rax, qword [rsp + 0x28]
0x0000ea34      493b86e80000.  cmp rax, qword [r14 + 0xe8]
0x0000ea3b      0f8d70060000   jge 0xf0b1
0x0000ea41      488b442450     mov rax, qword [rsp + 0x50]
0x0000ea46      488b10         mov rdx, qword [rax]
0x0000ea49      ebbb           jmp 0xea06
0x0000ea4b      0f1f440000     nop dword [rax + rax]
0x0000ea50      48837b2000     cmp qword [rbx + 0x20], 0
0x0000ea55      4c8b1b         mov r11, qword [rbx]
0x0000ea58      0f8e64060000   jle 0xf0c2
0x0000ea5e      488b4c2408     mov rcx, qword [rsp + 8]
0x0000ea63      4d89e8         mov r8, r13
0x0000ea66      31ed           xor ebp, ebp
0x0000ea68      4989dd         mov r13, rbx
0x0000ea6b      4889cb         mov rbx, rcx
0x0000ea6e      eb6c           jmp 0xeadc
0x0000ea70      4b8d3418       lea rsi, [r8 + r11]
0x0000ea74      498d3c18       lea rdi, [r8 + rbx]
0x0000ea78      4c894c2420     mov qword [rsp + 0x20], r9
0x0000ea7d      4c895c2418     mov qword [rsp + 0x18], r11
0x0000ea82      4c89442410     mov qword [rsp + 0x10], r8
0x0000ea87      e80431ffff     call sym.imp.memcmp
0x0000ea8c      85c0           test eax, eax
0x0000ea8e      4c8b442410     mov r8, qword [rsp + 0x10]
0x0000ea93      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x0000ea98      4c8b4c2420     mov r9, qword [rsp + 0x20]
0x0000ea9d      0f85c5040000   jne 0xef68
0x0000eaa3      4c8b442408     mov r8, qword [rsp + 8]
0x0000eaa8      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0000eaad      4c89ca         mov rdx, r9
0x0000eab0      4c89ee         mov rsi, r13
0x0000eab3      4c89f7         mov rdi, r14
0x0000eab6      e895fbffff     call sym.get_subexp_sub.isra.32
0x0000eabb      83f801         cmp eax, 1
0x0000eabe      4d8b4608       mov r8, qword [r14 + 8]
0x0000eac2      0f87a0000000   ja 0xeb68
0x0000eac8      4883c501       add rbp, 1
0x0000eacc      493b6d20       cmp rbp, qword [r13 + 0x20]
0x0000ead0      4d89fb         mov r11, r15
0x0000ead3      4c89e3         mov rbx, r12
0x0000ead6      0f8dac020000   jge 0xed88
0x0000eadc      498b4528       mov rax, qword [r13 + 0x28]
0x0000eae0      4c8b0ce8       mov r9, qword [rax + rbp*8]
0x0000eae4      4d8b7908       mov r15, qword [r9 + 8]
0x0000eae8      4c89fa         mov rdx, r15
0x0000eaeb      4c29da         sub rdx, r11
0x0000eaee      4885d2         test rdx, rdx
0x0000eaf1      4c8d241a       lea r12, [rdx + rbx]
0x0000eaf5      7eac           jle 0xeaa3
0x0000eaf7      4d396630       cmp qword [r14 + 0x30], r12
0x0000eafb      0f8d6fffffff   jge 0xea70
0x0000eb01      4d396658       cmp qword [r14 + 0x58], r12
0x0000eb05      4889542418     mov qword [rsp + 0x18], rdx
0x0000eb0a      4c894c2410     mov qword [rsp + 0x10], r9
0x0000eb0f      0f8c53040000   jl 0xef68
0x0000eb15      4c89e6         mov rsi, r12
0x0000eb18      4c89f7         mov rdi, r14
0x0000eb1b      4c895c2420     mov qword [rsp + 0x20], r11
0x0000eb20      e85b97ffff     call sym.clean_state_log_if_needed
0x0000eb25      85c0           test eax, eax
0x0000eb27      753f           jne 0xeb68
0x0000eb29      4d8b4608       mov r8, qword [r14 + 8]
0x0000eb2d      488b542418     mov rdx, qword [rsp + 0x18]
0x0000eb32      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x0000eb37      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x0000eb3c      e92fffffff     jmp 0xea70
0x0000eb41      0f1f80000000.  nop dword [rax]
0x0000eb48      4989f0         mov r8, rsi
0x0000eb4b      4889fe         mov rsi, rdi
0x0000eb4e      6690           nop
0x0000eb50      498d4801       lea rcx, [r8 + 1]
0x0000eb54      4889f7         mov rdi, rsi
0x0000eb57      e9f7fdffff     jmp 0xe953
0x0000eb5c      0f1f4000       nop dword [rax]
0x0000eb60      31c0           xor eax, eax
0x0000eb62      660f1f440000   nop word [rax + rax]
0x0000eb68      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x0000eb70      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000eb79      0f854d050000   jne 0xf0cc
0x0000eb7f      4881c4b80000.  add rsp, 0xb8
0x0000eb86      5b             pop rbx
0x0000eb87      5d             pop rbp
0x0000eb88      415c           pop r12
0x0000eb8a      415d           pop r13
0x0000eb8c      415e           pop r14
0x0000eb8e      415f           pop r15
0x0000eb90      c3             ret
0x0000eb91      0f1f80000000.  nop dword [rax]
0x0000eb98      4883c028       add rax, 0x28
0x0000eb9c      8078f800       cmp byte [rax - 8], 0
0x0000eba0      0f8430feffff   je 0xe9d6
0x0000eba6      4c3b28         cmp r13, qword [rax]
0x0000eba9      75ed           jne 0xeb98
0x0000ebab      488b442470     mov rax, qword [rsp + 0x70]
0x0000ebb0      4839442470     cmp qword [rsp + 0x70], rax
0x0000ebb5      c784248c0000.  mov dword [rsp + 0x8c], 0
0x0000ebc0      0f8ddafcffff   jge 0xe8a0
0x0000ebc6      4a8d04ed0000.  lea rax, [r13*8]
0x0000ebce      4c8b642470     mov r12, qword [rsp + 0x70]
0x0000ebd3      488b6c2438     mov rbp, qword [rsp + 0x38]
0x0000ebd8      4889442450     mov qword [rsp + 0x50], rax
0x0000ebdd      4b8d446d00     lea rax, [r13 + r13*2]
0x0000ebe2      4f8d04a4       lea r8, [r12 + r12*4]
0x0000ebe6      48c1e003       shl rax, 3
0x0000ebea      4889442458     mov qword [rsp + 0x58], rax
0x0000ebef      4e8d3cc50000.  lea r15, [r8*8]
0x0000ebf7      e931010000     jmp 0xed2d
0x0000ebfc      0f1f4000       nop dword [rax]
0x0000ec00      488b4d28       mov rcx, qword [rbp + 0x28]
0x0000ec04      488b7c2458     mov rdi, qword [rsp + 0x58]
0x0000ec09      488b4c3910     mov rcx, qword [rcx + rdi + 0x10]
0x0000ec0e      488b09         mov rcx, qword [rcx]
0x0000ec11      488d0c49       lea rcx, [rcx + rcx*2]
0x0000ec15      488d0cca       lea rcx, [rdx + rcx*8]
0x0000ec19      48894c2418     mov qword [rsp + 0x18], rcx
0x0000ec1e      48035c2408     add rbx, qword [rsp + 8]
0x0000ec23      418b96a00000.  mov edx, dword [r14 + 0xa0]
0x0000ec2a      4c89f7         mov rdi, r14
0x0000ec2d      4829c3         sub rbx, rax
0x0000ec30      488d73ff       lea rsi, [rbx - 1]
0x0000ec34      e897bdffff     call sym.re_string_context_at
0x0000ec39      488b742460     mov rsi, qword [rsp + 0x60]
0x0000ec3e      89c1           mov ecx, eax
0x0000ec40      498b86b80000.  mov rax, qword [r14 + 0xb8]
0x0000ec47      4c8d14dd0000.  lea r10, [rbx*8]
0x0000ec4f      48c744241000.  mov qword [rsp + 0x10], 0
0x0000ec58      4e8d1c10       lea r11, [rax + r10]
0x0000ec5c      488b0430       mov rax, qword [rax + rsi]
0x0000ec60      498b13         mov rdx, qword [r11]
0x0000ec63      4885c0         test rax, rax
0x0000ec66      7409           je 0xec71
0x0000ec68      488b4010       mov rax, qword [rax + 0x10]
0x0000ec6c      4889442410     mov qword [rsp + 0x10], rax
0x0000ec71      4885d2         test rdx, rdx
0x0000ec74      0f8416030000   je 0xef90
0x0000ec7a      488b7250       mov rsi, qword [rdx + 0x50]
0x0000ec7e      488b7c2468     mov rdi, qword [rsp + 0x68]
0x0000ec83      488b542418     mov rdx, qword [rsp + 0x18]
0x0000ec88      4c89542430     mov qword [rsp + 0x30], r10
0x0000ec8d      894c2428       mov dword [rsp + 0x28], ecx
0x0000ec91      e84ab1ffff     call sym.re_node_set_init_union
0x0000ec96      85c0           test eax, eax
0x0000ec98      8984248c0000.  mov dword [rsp + 0x8c], eax
0x0000ec9f      8b4c2428       mov ecx, dword [rsp + 0x28]
0x0000eca3      4c8b542430     mov r10, qword [rsp + 0x30]
0x0000eca8      0f858a030000   jne 0xf038
0x0000ecae      4d0396b80000.  add r10, qword [r14 + 0xb8]
0x0000ecb5      488b542468     mov rdx, qword [rsp + 0x68]
0x0000ecba      4889ee         mov rsi, rbp
0x0000ecbd      488b7c2478     mov rdi, qword [rsp + 0x78]
0x0000ecc2      4c89542428     mov qword [rsp + 0x28], r10
0x0000ecc7      e874b2ffff     call sym.re_acquire_state_context
0x0000eccc      4c8b542428     mov r10, qword [rsp + 0x28]
0x0000ecd1      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x0000ecd9      498902         mov qword [r10], rax
0x0000ecdc      e8ef2cffff     call sym.imp.free
0x0000ece1      498b96b80000.  mov rdx, qword [r14 + 0xb8]
0x0000ece8      48833cda00     cmp qword [rdx + rbx*8], 0
0x0000eced      0f84ce020000   je 0xefc1
0x0000ecf3      48837c242000   cmp qword [rsp + 0x20], 0
0x0000ecf9      751d           jne 0xed18
0x0000ecfb      488b442460     mov rax, qword [rsp + 0x60]
0x0000ed00      488b5c2410     mov rbx, qword [rsp + 0x10]
0x0000ed05      488b0402       mov rax, qword [rdx + rax]
0x0000ed09      48395810       cmp qword [rax + 0x10], rbx
0x0000ed0d      0f8fc5020000   jg 0xefd8
0x0000ed13      0f1f440000     nop dword [rax + rax]
0x0000ed18      4983c401       add r12, 1
0x0000ed1c      4983c728       add r15, 0x28
0x0000ed20      4d3ba6c80000.  cmp r12, qword [r14 + 0xc8]
0x0000ed27      0f8d73fbffff   jge 0xe8a0
0x0000ed2d      498b86d80000.  mov rax, qword [r14 + 0xd8]
0x0000ed34      4c01f8         add rax, r15
0x0000ed37      4c3b28         cmp r13, qword [rax]
0x0000ed3a      75dc           jne 0xed18
0x0000ed3c      488b7c2408     mov rdi, qword [rsp + 8]
0x0000ed41      483b7808       cmp rdi, qword [rax + 8]
0x0000ed45      75d1           jne 0xed18
0x0000ed47      488b5818       mov rbx, qword [rax + 0x18]
0x0000ed4b      488b4010       mov rax, qword [rax + 0x10]
0x0000ed4f      488b5530       mov rdx, qword [rbp + 0x30]
0x0000ed53      4889d9         mov rcx, rbx
0x0000ed56      4829c1         sub rcx, rax
0x0000ed59      48894c2420     mov qword [rsp + 0x20], rcx
0x0000ed5e      0f849cfeffff   je 0xec00
0x0000ed64      488b4d18       mov rcx, qword [rbp + 0x18]
0x0000ed68      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0000ed6d      488b0c39       mov rcx, qword [rcx + rdi]
0x0000ed71      488d0c49       lea rcx, [rcx + rcx*2]
0x0000ed75      488d0cca       lea rcx, [rdx + rcx*8]
0x0000ed79      48894c2418     mov qword [rsp + 0x18], rcx
0x0000ed7e      e99bfeffff     jmp 0xec1e
0x0000ed83      0f1f440000     nop dword [rax + rax]
0x0000ed88      4c89eb         mov rbx, r13
0x0000ed8b      4d89c5         mov r13, r8
0x0000ed8e      4d8d5f01       lea r11, [r15 + 1]
0x0000ed92      4c395c2408     cmp qword [rsp + 8], r11
0x0000ed97      0f8c8cfcffff   jl 0xea29
0x0000ed9d      4c89e0         mov rax, r12
0x0000eda0      4e8d3cdd0000.  lea r15, [r11*8]
0x0000eda8      4989dc         mov r12, rbx
0x0000edab      4c89db         mov rbx, r11
0x0000edae      4d89eb         mov r11, r13
0x0000edb1      4989c5         mov r13, rax
0x0000edb4      0f1f4000       nop dword [rax]
0x0000edb8      4889d8         mov rax, rbx
0x0000edbb      492b0424       sub rax, qword [r12]
0x0000edbf      4885c0         test rax, rax
0x0000edc2      7e21           jle 0xede5
0x0000edc4      4d396e30       cmp qword [r14 + 0x30], r13
0x0000edc8      0f8e83020000   jle 0xf051
0x0000edce      410fb64c1bff   movzx ecx, byte [r11 + rbx - 1]
0x0000edd4      498d4501       lea rax, [r13 + 1]
0x0000edd8      43380c2b       cmp byte [r11 + r13], cl
0x0000eddc      0f8530010000   jne 0xef12
0x0000ede2      4989c5         mov r13, rax
0x0000ede5      498b86b80000.  mov rax, qword [r14 + 0xb8]
0x0000edec      4a8b0438       mov rax, qword [rax + r15]
0x0000edf0      4885c0         test rax, rax
0x0000edf3      0f8406010000   je 0xeeff
0x0000edf9      488b4810       mov rcx, qword [rax + 0x10]
0x0000edfd      4885c9         test rcx, rcx
0x0000ee00      0f8ef9000000   jle 0xeeff
0x0000ee06      488b7818       mov rdi, qword [rax + 0x18]
0x0000ee0a      488b442450     mov rax, qword [rsp + 0x50]
0x0000ee0f      31d2           xor edx, edx
0x0000ee11      4c8b442458     mov r8, qword [rsp + 0x58]
0x0000ee16      488b30         mov rsi, qword [rax]
0x0000ee19      eb12           jmp 0xee2d
0x0000ee1b      0f1f440000     nop dword [rax + rax]
0x0000ee20      4883c201       add rdx, 1
0x0000ee24      4839d1         cmp rcx, rdx
0x0000ee27      0f84d2000000   je 0xeeff
0x0000ee2d      488b2cd7       mov rbp, qword [rdi + rdx*8]
0x0000ee31      4889e8         mov rax, rbp
0x0000ee34      48c1e004       shl rax, 4
0x0000ee38      4801f0         add rax, rsi
0x0000ee3b      80780809       cmp byte [rax + 8], 9
0x0000ee3f      75df           jne 0xee20
0x0000ee41      4c3b00         cmp r8, qword [rax]
0x0000ee44      75da           jne 0xee20
0x0000ee46      4883fdff       cmp rbp, 0xffffffffffffffff
0x0000ee4a      0f84af000000   je 0xeeff
0x0000ee50      498b742410     mov rsi, qword [r12 + 0x10]
0x0000ee55      498b0c24       mov rcx, qword [r12]
0x0000ee59      4885f6         test rsi, rsi
0x0000ee5c      0f84be000000   je 0xef20
0x0000ee62      4c895c2410     mov qword [rsp + 0x10], r11
0x0000ee67      498b542408     mov rdx, qword [r12 + 8]
0x0000ee6c      4883ec08       sub rsp, 8
0x0000ee70      6a09           push 9
0x0000ee72      4989d9         mov r9, rbx
0x0000ee75      4989e8         mov r8, rbp
0x0000ee78      4c89f7         mov rdi, r14
0x0000ee7b      e880e7ffff     call sym.check_arrival
0x0000ee80      5a             pop rdx
0x0000ee81      83f801         cmp eax, 1
0x0000ee84      59             pop rcx
0x0000ee85      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x0000ee8a      7473           je 0xeeff
0x0000ee8c      85c0           test eax, eax
0x0000ee8e      0f85d4fcffff   jne 0xeb68
0x0000ee94      498b442420     mov rax, qword [r12 + 0x20]
0x0000ee99      493b442418     cmp rax, qword [r12 + 0x18]
0x0000ee9e      0f84d4010000   je 0xf078
0x0000eea4      be28000000     mov esi, 0x28                           ; '('
0x0000eea9      bf01000000     mov edi, 1
0x0000eeae      e80d2dffff     call sym.imp.calloc
0x0000eeb3      4885c0         test rax, rax
0x0000eeb6      0f849d000000   je 0xef59
0x0000eebc      498b542420     mov rdx, qword [r12 + 0x20]
0x0000eec1      498b4c2428     mov rcx, qword [r12 + 0x28]
0x0000eec6      4c89e6         mov rsi, r12
0x0000eec9      4c8b442408     mov r8, qword [rsp + 8]
0x0000eece      4c89f7         mov rdi, r14
0x0000eed1      488904d1       mov qword [rcx + rdx*8], rax
0x0000eed5      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0000eeda      4883c201       add rdx, 1
0x0000eede      488928         mov qword [rax], rbp
0x0000eee1      48895808       mov qword [rax + 8], rbx
0x0000eee5      4989542420     mov qword [r12 + 0x20], rdx
0x0000eeea      4889c2         mov rdx, rax
0x0000eeed      e85ef7ffff     call sym.get_subexp_sub.isra.32
0x0000eef2      83f801         cmp eax, 1
0x0000eef5      4d8b5e08       mov r11, qword [r14 + 8]
0x0000eef9      0f8769fcffff   ja 0xeb68
0x0000eeff      4883c301       add rbx, 1
0x0000ef03      4983c708       add r15, 8
0x0000ef07      48395c2408     cmp qword [rsp + 8], rbx
0x0000ef0c      0f8da6feffff   jge 0xedb8
0x0000ef12      4d89dd         mov r13, r11
0x0000ef15      e90ffbffff     jmp 0xea29
0x0000ef1a      660f1f440000   nop word [rax + rax]
0x0000ef20      4889de         mov rsi, rbx
0x0000ef23      bf18000000     mov edi, 0x18
0x0000ef28      4c895c2418     mov qword [rsp + 0x18], r11
0x0000ef2d      4829ce         sub rsi, rcx
0x0000ef30      48894c2410     mov qword [rsp + 0x10], rcx
0x0000ef35      4883c601       add rsi, 1
0x0000ef39      e8822cffff     call sym.imp.calloc
0x0000ef3e      4885c0         test rax, rax
0x0000ef41      4889c6         mov rsi, rax
0x0000ef44      4989442410     mov qword [r12 + 0x10], rax
0x0000ef49      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000ef4e      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x0000ef53      0f8509ffffff   jne 0xee62
0x0000ef59      b80c000000     mov eax, 0xc
0x0000ef5e      e905fcffff     jmp 0xeb68
0x0000ef63      0f1f440000     nop dword [rax + rax]
0x0000ef68      4889d9         mov rcx, rbx
0x0000ef6b      4c89eb         mov rbx, r13
0x0000ef6e      4d89c5         mov r13, r8
0x0000ef71      48396b20       cmp qword [rbx + 0x20], rbp
0x0000ef75      0f8faefaffff   jg 0xea29
0x0000ef7b      4885ed         test rbp, rbp
0x0000ef7e      4989cc         mov r12, rcx
0x0000ef81      0f840bfeffff   je 0xed92
0x0000ef87      4d89df         mov r15, r11
0x0000ef8a      e9fffdffff     jmp 0xed8e
0x0000ef8f      90             nop
0x0000ef90      488b542418     mov rdx, qword [rsp + 0x18]
0x0000ef95      488b7c2478     mov rdi, qword [rsp + 0x78]
0x0000ef9a      4889ee         mov rsi, rbp
0x0000ef9d      4c895c2428     mov qword [rsp + 0x28], r11
0x0000efa2      e899afffff     call sym.re_acquire_state_context
0x0000efa7      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000efac      498b96b80000.  mov rdx, qword [r14 + 0xb8]
0x0000efb3      498903         mov qword [r11], rax
0x0000efb6      48833cda00     cmp qword [rdx + rbx*8], 0
0x0000efbb      0f8532fdffff   jne 0xecf3
0x0000efc1      8b84248c0000.  mov eax, dword [rsp + 0x8c]
0x0000efc8      85c0           test eax, eax
0x0000efca      0f8423fdffff   je 0xecf3
0x0000efd0      e993fbffff     jmp 0xeb68
0x0000efd5      0f1f00         nop dword [rax]
0x0000efd8      488b442418     mov rax, qword [rsp + 0x18]
0x0000efdd      488b4c2408     mov rcx, qword [rsp + 8]
0x0000efe2      4c89f7         mov rdi, r14
0x0000efe5      4c8d4010       lea r8, [rax + 0x10]
0x0000efe9      488d5808       lea rbx, [rax + 8]
0x0000efed      4c89c2         mov rdx, r8
0x0000eff0      4889de         mov rsi, rbx
0x0000eff3      4c89442410     mov qword [rsp + 0x10], r8
0x0000eff8      e883b8ffff     call sym.check_subexp_matching_top.isra.18
0x0000effd      85c0           test eax, eax
0x0000efff      8984248c0000.  mov dword [rsp + 0x8c], eax
0x0000f006      0f855cfbffff   jne 0xeb68
0x0000f00c      4c8b442410     mov r8, qword [rsp + 0x10]
0x0000f011      4889de         mov rsi, rbx
0x0000f014      4c89f7         mov rdi, r14
0x0000f017      4c89c2         mov rdx, r8
0x0000f01a      e8d1f7ffff     call sym.transit_state_bkref.isra.34
0x0000f01f      85c0           test eax, eax
0x0000f021      8984248c0000.  mov dword [rsp + 0x8c], eax
0x0000f028      0f84eafcffff   je 0xed18
0x0000f02e      e935fbffff     jmp 0xeb68
0x0000f033      0f1f440000     nop dword [rax + rax]
0x0000f038      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x0000f040      e88b29ffff     call sym.imp.free
0x0000f045      8b84248c0000.  mov eax, dword [rsp + 0x8c]
0x0000f04c      e917fbffff     jmp 0xeb68
0x0000f051      4d396e58       cmp qword [r14 + 0x58], r13
0x0000f055      0f8eb7feffff   jle 0xef12
0x0000f05b      418d7501       lea esi, [r13 + 1]
0x0000f05f      4c89f7         mov rdi, r14
0x0000f062      e8c990ffff     call sym.extend_buffers
0x0000f067      85c0           test eax, eax
0x0000f069      0f85f9faffff   jne 0xeb68
0x0000f06f      4d8b5e08       mov r11, qword [r14 + 8]
0x0000f073      e956fdffff     jmp 0xedce
0x0000f078      488d540001     lea rdx, [rax + rax + 1]
0x0000f07d      498b7c2428     mov rdi, qword [r12 + 0x28]
0x0000f082      488d34d50000.  lea rsi, [rdx*8]
0x0000f08a      4889542410     mov qword [rsp + 0x10], rdx
0x0000f08f      e8fc2bffff     call sym.imp.realloc
0x0000f094      4885c0         test rax, rax
0x0000f097      0f84bcfeffff   je 0xef59
0x0000f09d      488b542410     mov rdx, qword [rsp + 0x10]
0x0000f0a2      4989442428     mov qword [r12 + 0x28], rax
0x0000f0a7      4989542418     mov qword [r12 + 0x18], rdx
0x0000f0ac      e9f3fdffff     jmp 0xeea4
0x0000f0b1      4c8b6c2430     mov r13, qword [rsp + 0x30]
0x0000f0b6      498b86c80000.  mov rax, qword [r14 + 0xc8]
0x0000f0bd      e9eefaffff     jmp 0xebb0
0x0000f0c2      4c8b642408     mov r12, qword [rsp + 8]
0x0000f0c7      e9c6fcffff     jmp 0xed92
0x0000f0cc      e8ff29ffff     call sym.imp.__stack_chk_fail
0x0000f0d1      0f1f440000     nop dword [rax + rax]
0x0000f0d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- merge_state_with_log:
0x0000f0e0      4157           push r15
0x0000f0e2      4156           push r14
0x0000f0e4      4155           push r13
0x0000f0e6      4154           push r12
0x0000f0e8      4989fd         mov r13, rdi
0x0000f0eb      55             push rbp
0x0000f0ec      53             push rbx
0x0000f0ed      4889f3         mov rbx, rsi
0x0000f0f0      4883ec38       sub rsp, 0x38
0x0000f0f4      4c8b6648       mov r12, qword [rsi + 0x48]
0x0000f0f8      4c8bb6b80000.  mov r14, qword [rsi + 0xb8]
0x0000f0ff      64488b042528.  mov rax, qword fs:[0x28]
0x0000f108      4889442428     mov qword [rsp + 0x28], rax
0x0000f10d      31c0           xor eax, eax
0x0000f10f      4c8bbe980000.  mov r15, qword [rsi + 0x98]
0x0000f116      4a8d2ce50000.  lea rbp, [r12*8]
0x0000f11e      4901ee         add r14, rbp
0x0000f121      4c39a6c00000.  cmp qword [rsi + 0xc0], r12
0x0000f128      7d46           jge 0xf170
0x0000f12a      498916         mov qword [r14], rdx
0x0000f12d      4889d5         mov rbp, rdx
0x0000f130      4c89a6c00000.  mov qword [rsi + 0xc0], r12
0x0000f137      4983bf980000.  cmp qword [r15 + 0x98], 0
0x0000f13f      0f8523010000   jne 0xf268
0x0000f145      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0000f14a      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000f153      4889e8         mov rax, rbp
0x0000f156      0f856b010000   jne 0xf2c7
0x0000f15c      4883c438       add rsp, 0x38
0x0000f160      5b             pop rbx
0x0000f161      5d             pop rbp
0x0000f162      415c           pop r12
0x0000f164      415d           pop r13
0x0000f166      415e           pop r14
0x0000f168      415f           pop r15
0x0000f16a      c3             ret
0x0000f16b      0f1f440000     nop dword [rax + rax]
0x0000f170      498b06         mov rax, qword [r14]
0x0000f173      4885c0         test rax, rax
0x0000f176      0f84dc000000   je 0xf258
0x0000f17c      4885d2         test rdx, rdx
0x0000f17f      488b4050       mov rax, qword [rax + 0x50]
0x0000f183      0f8487000000   je 0xf210
0x0000f189      4c8b7250       mov r14, qword [rdx + 0x50]
0x0000f18d      488d7c2410     lea rdi, [rsp + 0x10]
0x0000f192      4889c2         mov rdx, rax
0x0000f195      48893c24       mov qword [rsp], rdi
0x0000f199      4c89f6         mov rsi, r14
0x0000f19c      e83facffff     call sym.re_node_set_init_union
0x0000f1a1      85c0           test eax, eax
0x0000f1a3      41894500       mov dword [r13], eax
0x0000f1a7      0f8513010000   jne 0xf2c0
0x0000f1ad      488b4348       mov rax, qword [rbx + 0x48]
0x0000f1b1      8b93a0000000   mov edx, dword [rbx + 0xa0]
0x0000f1b7      4889df         mov rdi, rbx
0x0000f1ba      488d70ff       lea rsi, [rax - 1]
0x0000f1be      e80db8ffff     call sym.re_string_context_at
0x0000f1c3      4c8b83b80000.  mov r8, qword [rbx + 0xb8]
0x0000f1ca      488b1424       mov rdx, qword [rsp]
0x0000f1ce      89c1           mov ecx, eax
0x0000f1d0      4c89fe         mov rsi, r15
0x0000f1d3      4c89ef         mov rdi, r13
0x0000f1d6      4901e8         add r8, rbp
0x0000f1d9      4c89442408     mov qword [rsp + 8], r8
0x0000f1de      e85dadffff     call sym.re_acquire_state_context
0x0000f1e3      4c8b442408     mov r8, qword [rsp + 8]
0x0000f1e8      4d85f6         test r14, r14
0x0000f1eb      4889c5         mov rbp, rax
0x0000f1ee      498900         mov qword [r8], rax
0x0000f1f1      0f8440ffffff   je 0xf137
0x0000f1f7      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000f1fc      e8cf27ffff     call sym.imp.free
0x0000f201      e931ffffff     jmp 0xf137
0x0000f206      662e0f1f8400.  nop word cs:[rax + rax]
0x0000f210      f30f6f00       movdqu xmm0, xmmword [rax]
0x0000f214      4889df         mov rdi, rbx
0x0000f217      8b96a0000000   mov edx, dword [rsi + 0xa0]
0x0000f21d      498d7424ff     lea rsi, [r12 - 1]
0x0000f222      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000f227      488b4010       mov rax, qword [rax + 0x10]
0x0000f22b      4889442420     mov qword [rsp + 0x20], rax
0x0000f230      e89bb7ffff     call sym.re_string_context_at
0x0000f235      488d542410     lea rdx, [rsp + 0x10]
0x0000f23a      89c1           mov ecx, eax
0x0000f23c      4c89fe         mov rsi, r15
0x0000f23f      4c89ef         mov rdi, r13
0x0000f242      e8f9acffff     call sym.re_acquire_state_context
0x0000f247      4889c5         mov rbp, rax
0x0000f24a      498906         mov qword [r14], rax
0x0000f24d      e9e5feffff     jmp 0xf137
0x0000f252      660f1f440000   nop word [rax + rax]
0x0000f258      498916         mov qword [r14], rdx
0x0000f25b      4889d5         mov rbp, rdx
0x0000f25e      e9d4feffff     jmp 0xf137
0x0000f263      0f1f440000     nop dword [rax + rax]
0x0000f268      4885ed         test rbp, rbp
0x0000f26b      7453           je 0xf2c0
0x0000f26d      4c8d7510       lea r14, [rbp + 0x10]
0x0000f271      4c8d7d18       lea r15, [rbp + 0x18]
0x0000f275      4c89e1         mov rcx, r12
0x0000f278      4889df         mov rdi, rbx
0x0000f27b      4c89fa         mov rdx, r15
0x0000f27e      4c89f6         mov rsi, r14
0x0000f281      e8fab5ffff     call sym.check_subexp_matching_top.isra.18
0x0000f286      85c0           test eax, eax
0x0000f288      41894500       mov dword [r13], eax
0x0000f28c      7532           jne 0xf2c0
0x0000f28e      f6456840       test byte [rbp + 0x68], 0x40
0x0000f292      0f84adfeffff   je 0xf145
0x0000f298      4c89fa         mov rdx, r15
0x0000f29b      4c89f6         mov rsi, r14
0x0000f29e      4889df         mov rdi, rbx
0x0000f2a1      e84af5ffff     call sym.transit_state_bkref.isra.34
0x0000f2a6      85c0           test eax, eax
0x0000f2a8      41894500       mov dword [r13], eax
0x0000f2ac      7512           jne 0xf2c0
0x0000f2ae      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x0000f2b5      4a8b2ce0       mov rbp, qword [rax + r12*8]
0x0000f2b9      e987feffff     jmp 0xf145
0x0000f2be      6690           nop
0x0000f2c0      31ed           xor ebp, ebp
0x0000f2c2      e97efeffff     jmp 0xf145
0x0000f2c7      e80428ffff     call sym.imp.__stack_chk_fail
0x0000f2cc      0f1f4000       nop dword [rax]
;-- sift_states_backward:
0x0000f2d0      4157           push r15
0x0000f2d2      4156           push r14
0x0000f2d4      4989fe         mov r14, rdi
0x0000f2d7      4155           push r13
0x0000f2d9      4154           push r12
0x0000f2db      4989f5         mov r13, rsi
0x0000f2de      55             push rbp
0x0000f2df      53             push rbx
0x0000f2e0      4883ec68       sub rsp, 0x68
0x0000f2e4      4c8b7e18       mov r15, qword [rsi + 0x18]
0x0000f2e8      488b5e10       mov rbx, qword [rsi + 0x10]
0x0000f2ec      48893c24       mov qword [rsp], rdi
0x0000f2f0      bf08000000     mov edi, 8
0x0000f2f5      48c744244001.  mov qword [rsp + 0x40], 1
0x0000f2fe      64488b042528.  mov rax, qword fs:[0x28]
0x0000f307      4889442458     mov qword [rsp + 0x58], rax
0x0000f30c      31c0           xor eax, eax
0x0000f30e      48c744244801.  mov qword [rsp + 0x48], 1
0x0000f317      e80429ffff     call sym.imp.malloc
0x0000f31c      4885c0         test rax, rax
0x0000f31f      4889442450     mov qword [rsp + 0x50], rax
0x0000f324      0f84da020000   je 0xf604
0x0000f32a      488d4c2440     lea rcx, [rsp + 0x40]
0x0000f32f      488918         mov qword [rax], rbx
0x0000f332      4c89fa         mov rdx, r15
0x0000f335      4c89ee         mov rsi, r13
0x0000f338      4c89f7         mov rdi, r14
0x0000f33b      48894c2410     mov qword [rsp + 0x10], rcx
0x0000f340      e8fb190000     call sym.update_cur_sifted_state
0x0000f345      85c0           test eax, eax
0x0000f347      0f8588020000   jne 0xf5d5
0x0000f34d      4a8d04fd0000.  lea rax, [r15*8]
0x0000f355      4d85ff         test r15, r15
0x0000f358      c744242c0000.  mov dword [rsp + 0x2c], 0
0x0000f360      4889442408     mov qword [rsp + 8], rax
0x0000f365      498d4530       lea rax, [r13 + 0x30]
0x0000f369      4889442438     mov qword [rsp + 0x38], rax
0x0000f36e      0f8e03020000   jle 0xf577
0x0000f374      498b7d00       mov rdi, qword [r13]
0x0000f378      488b442408     mov rax, qword [rsp + 8]
0x0000f37d      48833c0700     cmp qword [rdi + rax], 0
0x0000f382      0f8410020000   je 0xf598
0x0000f388      488b0424       mov rax, qword [rsp]
0x0000f38c      c744242c0000.  mov dword [rsp + 0x2c], 0
0x0000f394      8b4c242c       mov ecx, dword [rsp + 0x2c]
0x0000f398      3988e0000000   cmp dword [rax + 0xe0], ecx
0x0000f39e      0f8c0d020000   jl 0xf5b1
0x0000f3a4      488b1c24       mov rbx, qword [rsp]
0x0000f3a8      488b7c2408     mov rdi, qword [rsp + 8]
0x0000f3ad      4983ef01       sub r15, 1
0x0000f3b1      48c744244800.  mov qword [rsp + 0x48], 0
0x0000f3ba      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x0000f3c1      4c8b6438f8     mov r12, qword [rax + rdi - 8]
0x0000f3c6      4d85e4         test r12, r12
0x0000f3c9      0f8481010000   je 0xf550
0x0000f3cf      49837c242800   cmp qword [r12 + 0x28], 0
0x0000f3d5      4c8bb3980000.  mov r14, qword [rbx + 0x98]
0x0000f3dc      0f8e6e010000   jle 0xf550
0x0000f3e2      31db           xor ebx, ebx
0x0000f3e4      e9a2000000     jmp 0xf48b
0x0000f3e9      0f1f80000000.  nop dword [rax]
0x0000f3f0      488b3c24       mov rdi, qword [rsp]
0x0000f3f4      4c89fa         mov rdx, r15
0x0000f3f7      e8c4b6ffff     call sym.check_node_accept
0x0000f3fc      84c0           test al, al
0x0000f3fe      747c           je 0xf47c
0x0000f400      498b4500       mov rax, qword [r13]
0x0000f404      488b4c2408     mov rcx, qword [rsp + 8]
0x0000f409      488b0408       mov rax, qword [rax + rcx]
0x0000f40d      4885c0         test rax, rax
0x0000f410      746a           je 0xf47c
0x0000f412      498b5618       mov rdx, qword [r14 + 0x18]
0x0000f416      488b7810       mov rdi, qword [rax + 0x10]
0x0000f41a      488d7018       lea rsi, [rax + 0x18]
0x0000f41e      488b14ea       mov rdx, qword [rdx + rbp*8]
0x0000f422      e8c997ffff     call sym.re_node_set_contains.isra.3
0x0000f427      4885c0         test rax, rax
0x0000f42a      7450           je 0xf47c
0x0000f42c      41ba01000000   mov r10d, 1
0x0000f432      49837d2800     cmp qword [r13 + 0x28], 0
0x0000f437      742e           je 0xf467
0x0000f439      498b4618       mov rax, qword [r14 + 0x18]
0x0000f43d      4883ec08       sub rsp, 8
0x0000f441      498d7528       lea rsi, [r13 + 0x28]
0x0000f445      4f8d043a       lea r8, [r10 + r15]
0x0000f449      4989e9         mov r9, rbp
0x0000f44c      488b0ce8       mov rcx, qword [rax + rbp*8]
0x0000f450      4157           push r15
0x0000f452      488b542448     mov rdx, qword [rsp + 0x48]
0x0000f457      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000f45c      e83f9affff     call sym.check_dst_limits.isra.13
0x0000f461      84c0           test al, al
0x0000f463      5a             pop rdx
0x0000f464      59             pop rcx
0x0000f465      7515           jne 0xf47c
0x0000f467      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000f46c      4889ee         mov rsi, rbp
0x0000f46f      e83c82ffff     call sym.re_node_set_insert
0x0000f474      84c0           test al, al
0x0000f476      0f8454010000   je 0xf5d0
0x0000f47c      4883c301       add rbx, 1
0x0000f480      493b5c2428     cmp rbx, qword [r12 + 0x28]
0x0000f485      0f8dc5000000   jge 0xf550
0x0000f48b      498b442430     mov rax, qword [r12 + 0x30]
0x0000f490      498b36         mov rsi, qword [r14]
0x0000f493      488b2cd8       mov rbp, qword [rax + rbx*8]
0x0000f497      4989e9         mov r9, rbp
0x0000f49a      49c1e104       shl r9, 4
0x0000f49e      4c01ce         add rsi, r9
0x0000f4a1      f6460a10       test byte [rsi + 0xa], 0x10
0x0000f4a5      0f8445ffffff   je 0xf3f0
0x0000f4ab      488b0c24       mov rcx, qword [rsp]
0x0000f4af      498b4518       mov rax, qword [r13 + 0x18]
0x0000f4b3      4d89f8         mov r8, r15
0x0000f4b6      4889ea         mov rdx, rbp
0x0000f4b9      4c894c2418     mov qword [rsp + 0x18], r9
0x0000f4be      4c8b99980000.  mov r11, qword [rcx + 0x98]
0x0000f4c5      4889442420     mov qword [rsp + 0x20], rax
0x0000f4ca      498b3b         mov rdi, qword [r11]
0x0000f4cd      498db3d80000.  lea rsi, [r11 + 0xd8]
0x0000f4d4      4c895c2430     mov qword [rsp + 0x30], r11
0x0000f4d9      e8c2deffff     call sym.check_node_accept_bytes.isra.31
0x0000f4de      4c63d0         movsxd r10, eax
0x0000f4e1      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x0000f4e6      4183fa00       cmp r10d, 0
0x0000f4ea      0f8e90000000   jle 0xf580
0x0000f4f0      4963c2         movsxd rax, r10d
0x0000f4f3      4c01f8         add rax, r15
0x0000f4f6      4839442420     cmp qword [rsp + 0x20], rax
0x0000f4fb      0f8c31ffffff   jl 0xf432
0x0000f501      498b5500       mov rdx, qword [r13]
0x0000f505      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000f50a      488b04c2       mov rax, qword [rdx + rax*8]
0x0000f50e      4885c0         test rax, rax
0x0000f511      7473           je 0xf586
0x0000f513      498b5318       mov rdx, qword [r11 + 0x18]
0x0000f517      488b7810       mov rdi, qword [rax + 0x10]
0x0000f51b      488d7018       lea rsi, [rax + 0x18]
0x0000f51f      4c894c2418     mov qword [rsp + 0x18], r9
0x0000f524      488b14ea       mov rdx, qword [rdx + rbp*8]
0x0000f528      e8c396ffff     call sym.re_node_set_contains.isra.3
0x0000f52d      4885c0         test rax, rax
0x0000f530      0f85fcfeffff   jne 0xf432
0x0000f536      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x0000f53b      498b36         mov rsi, qword [r14]
0x0000f53e      4c01ce         add rsi, r9
0x0000f541      e9aafeffff     jmp 0xf3f0
0x0000f546      662e0f1f8400.  nop word cs:[rax + rax]
0x0000f550      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000f555      488b3c24       mov rdi, qword [rsp]
0x0000f559      4c89fa         mov rdx, r15
0x0000f55c      4c89ee         mov rsi, r13
0x0000f55f      e8dc170000     call sym.update_cur_sifted_state
0x0000f564      85c0           test eax, eax
0x0000f566      756d           jne 0xf5d5
0x0000f568      48836c240808   sub qword [rsp + 8], 8
0x0000f56e      4d85ff         test r15, r15
0x0000f571      0f85fdfdffff   jne 0xf374
0x0000f577      31c0           xor eax, eax
0x0000f579      eb5a           jmp 0xf5d5
0x0000f57b      0f1f440000     nop dword [rax + rax]
0x0000f580      0f85acfeffff   jne 0xf432
0x0000f586      498b36         mov rsi, qword [r14]
0x0000f589      4c01ce         add rsi, r9
0x0000f58c      e95ffeffff     jmp 0xf3f0
0x0000f591      0f1f80000000.  nop dword [rax]
0x0000f598      488b0424       mov rax, qword [rsp]
0x0000f59c      8344242c01     add dword [rsp + 0x2c], 1
0x0000f5a1      8b4c242c       mov ecx, dword [rsp + 0x2c]
0x0000f5a5      3988e0000000   cmp dword [rax + 0xe0], ecx
0x0000f5ab      0f8df3fdffff   jge 0xf3a4
0x0000f5b1      488b542408     mov rdx, qword [rsp + 8]
0x0000f5b6      31f6           xor esi, esi
0x0000f5b8      e8a325ffff     call sym.imp.memset
0x0000f5bd      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0000f5c2      e80924ffff     call sym.imp.free
0x0000f5c7      31c0           xor eax, eax
0x0000f5c9      eb1a           jmp 0xf5e5
0x0000f5cb      0f1f440000     nop dword [rax + rax]
0x0000f5d0      b80c000000     mov eax, 0xc
0x0000f5d5      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0000f5da      890424         mov dword [rsp], eax
0x0000f5dd      e8ee23ffff     call sym.imp.free
0x0000f5e2      8b0424         mov eax, dword [rsp]
0x0000f5e5      488b542458     mov rdx, qword [rsp + 0x58]
0x0000f5ea      644833142528.  xor rdx, qword fs:[0x28]
0x0000f5f3      7516           jne 0xf60b
0x0000f5f5      4883c468       add rsp, 0x68
0x0000f5f9      5b             pop rbx
0x0000f5fa      5d             pop rbp
0x0000f5fb      415c           pop r12
0x0000f5fd      415d           pop r13
0x0000f5ff      415e           pop r14
0x0000f601      415f           pop r15
0x0000f603      c3             ret
0x0000f604      b80c000000     mov eax, 0xc
0x0000f609      ebda           jmp 0xf5e5
0x0000f60b      e8c024ffff     call sym.imp.__stack_chk_fail
;-- re_search_internal:
0x0000f610      4157           push r15
0x0000f612      4156           push r14
0x0000f614      4155           push r13
0x0000f616      4154           push r12
0x0000f618      4d89cd         mov r13, r9
0x0000f61b      55             push rbp
0x0000f61c      53             push rbx
0x0000f61d      4889cd         mov rbp, rcx
0x0000f620      b920000000     mov ecx, 0x20                           ; "@"
0x0000f625      4d89c4         mov r12, r8
0x0000f628      4881ec380200.  sub rsp, sym..interp
0x0000f62f      488b1f         mov rbx, qword [rdi]
0x0000f632      488b84247802.  mov rax, qword [rsp + 0x278]
0x0000f63a      48897c2448     mov qword [rsp + 0x48], rdi
0x0000f63f      4889742478     mov qword [rsp + 0x78], rsi
0x0000f644      4889fe         mov rsi, rdi
0x0000f647      488dbc242001.  lea rdi, [rsp + 0x120]
0x0000f64f      488994248800.  mov qword [rsp + 0x88], rdx
0x0000f657      48895c2438     mov qword [rsp + 0x38], rbx
0x0000f65c      48898424b800.  mov qword [rsp + 0xb8], rax
0x0000f664      48893c24       mov qword [rsp], rdi
0x0000f668      64488b042528.  mov rax, qword fs:[0x28]
0x0000f671      488984242802.  mov qword [rsp + 0x228], rax
0x0000f679      31c0           xor eax, eax
0x0000f67b      f348ab         rep stosq qword [rdi], rax
0x0000f67e      488b7e20       mov rdi, qword [rsi + 0x20]
0x0000f682      48899c24b801.  mov qword [rsp + 0x1b8], rbx
0x0000f68a      4885ff         test rdi, rdi
0x0000f68d      48897c2468     mov qword [rsp + 0x68], rdi
0x0000f692      7422           je 0xf6b6
0x0000f694      0fb65638       movzx edx, byte [rsi + 0x38]
0x0000f698      f6c208         test dl, 8
0x0000f69b      0f848f040000   je 0xfb30
0x0000f6a1      4c39c5         cmp rbp, r8
0x0000f6a4      0f8486040000   je 0xfb30
0x0000f6aa      83e201         and edx, 1
0x0000f6ad      480f44c7       cmove rax, rdi
0x0000f6b1      4889442468     mov qword [rsp + 0x68], rax
0x0000f6b6      488b442448     mov rax, qword [rsp + 0x48]
0x0000f6bb      48c784249800.  mov qword [rsp + 0x98], 0
0x0000f6c7      488b4030       mov rax, qword [rax + 0x30]
0x0000f6cb      483b84247002.  cmp rax, qword [rsp + 0x270]
0x0000f6d3      731f           jae 0xf6f4
0x0000f6d5      488b8c247002.  mov rcx, qword [rsp + 0x270]
0x0000f6dd      488d51ff       lea rdx, [rcx - 1]
0x0000f6e1      4829c2         sub rdx, rax
0x0000f6e4      482994247002.  sub qword [rsp + 0x270], rdx
0x0000f6ec      488994249800.  mov qword [rsp + 0x98], rdx
0x0000f6f4      488b742448     mov rsi, qword [rsp + 0x48]
0x0000f6f9      48837e1000     cmp qword [rsi + 0x10], 0
0x0000f6fe      0f848c0e0000   je 0x10590
0x0000f704      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000f709      488b4748       mov rax, qword [rdi + 0x48]
0x0000f70d      4885c0         test rax, rax
0x0000f710      0f847a0e0000   je 0x10590
0x0000f716      488b5750       mov rdx, qword [rdi + 0x50]
0x0000f71a      4885d2         test rdx, rdx
0x0000f71d      0f846d0e0000   je 0x10590
0x0000f723      488b4f58       mov rcx, qword [rdi + 0x58]
0x0000f727      4885c9         test rcx, rcx
0x0000f72a      0f84600e0000   je 0x10590
0x0000f730      48837f6000     cmp qword [rdi + 0x60], 0
0x0000f735      0f84550e0000   je 0x10590
0x0000f73b      4883781000     cmp qword [rax + 0x10], 0
0x0000f740      7536           jne 0xf778
0x0000f742      48837a1000     cmp qword [rdx + 0x10], 0
0x0000f747      752f           jne 0xf778
0x0000f749      4883791000     cmp qword [rcx + 0x10], 0
0x0000f74e      7406           je 0xf756
0x0000f750      807e3800       cmp byte [rsi + 0x38], 0
0x0000f754      7822           js 0xf778
0x0000f756      4885ed         test rbp, rbp
0x0000f759      7411           je 0xf76c
0x0000f75b      4d85e4         test r12, r12
0x0000f75e      c744245c0100.  mov dword [rsp + 0x5c], 1
0x0000f766      0f851d0a0000   jne 0x10189
0x0000f76c      4531e4         xor r12d, r12d
0x0000f76f      31ed           xor ebp, ebp
0x0000f771      0f1f80000000.  nop dword [rax]
0x0000f778      4883bc247002.  cmp qword [rsp + 0x270], 0
0x0000f781      c74424580100.  mov dword [rsp + 0x58], 1
0x0000f789      0f8481030000   je 0xfb10
0x0000f78f      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000f794      488b442448     mov rax, qword [rsp + 0x48]
0x0000f799      488bbc248800.  mov rdi, qword [rsp + 0x88]
0x0000f7a1      498b7310       mov rsi, qword [r11 + 0x10]
0x0000f7a5      488b5828       mov rbx, qword [rax + 0x28]
0x0000f7a9      418b93b40000.  mov edx, dword [r11 + 0xb4]
0x0000f7b0      488b4018       mov rax, qword [rax + 0x18]
0x0000f7b4      4889bc247801.  mov qword [rsp + 0x178], rdi
0x0000f7bc      4889bc247001.  mov qword [rsp + 0x170], rdi
0x0000f7c4      4889742408     mov qword [rsp + 8], rsi
0x0000f7c9      488d7601       lea rsi, [rsi + 1]
0x0000f7cd      48899c24b000.  mov qword [rsp + 0xb0], rbx
0x0000f7d5      4863ca         movsxd rcx, edx
0x0000f7d8      48c1e816       shr rax, 0x16
0x0000f7dc      48899c249801.  mov qword [rsp + 0x198], rbx
0x0000f7e4      83e001         and eax, 1
0x0000f7e7      4839ce         cmp rsi, rcx
0x0000f7ea      899424b00100.  mov dword [rsp + 0x1b0], edx
0x0000f7f1      480f4cf1       cmovl rsi, rcx
0x0000f7f5      488d4f01       lea rcx, [rdi + 1]
0x0000f7f9      888424a80100.  mov byte [rsp + 0x1a8], al
0x0000f800      4889bc248801.  mov qword [rsp + 0x188], rdi
0x0000f808      4889bc248001.  mov qword [rsp + 0x180], rdi
0x0000f810      4839ce         cmp rsi, rcx
0x0000f813      488b3c24       mov rdi, qword [rsp]
0x0000f817      480f4ff1       cmovg rsi, rcx
0x0000f81b      4885db         test rbx, rbx
0x0000f81e      488b4c2478     mov rcx, qword [rsp + 0x78]
0x0000f823      0f95c3         setne bl
0x0000f826      09d8           or eax, ebx
0x0000f828      888424ab0100.  mov byte [rsp + 0x1ab], al
0x0000f82f      410fb683b000.  movzx eax, byte [r11 + 0xb0]
0x0000f837      48898c242001.  mov qword [rsp + 0x120], rcx
0x0000f83f      89c2           mov edx, eax
0x0000f841      c0e803         shr al, 3
0x0000f844      c0ea02         shr dl, 2
0x0000f847      83e001         and eax, 1
0x0000f84a      83e201         and edx, 1
0x0000f84d      888424aa0100.  mov byte [rsp + 0x1aa], al
0x0000f854      889424a90100.  mov byte [rsp + 0x1a9], dl
0x0000f85b      e8407dffff     call sym.re_string_realloc_buffers
0x0000f860      85c0           test eax, eax
0x0000f862      8944245c       mov dword [rsp + 0x5c], eax
0x0000f866      0f85f4080000   jne 0x10160
0x0000f86c      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000f871      488d87b80000.  lea rax, [rdi + 0xb8]
0x0000f878      48898424a001.  mov qword [rsp + 0x1a0], rax
0x0000f880      0fb687b00000.  movzx eax, byte [rdi + 0xb0]
0x0000f887      88442408       mov byte [rsp + 8], al
0x0000f88b      c0e804         shr al, 4
0x0000f88e      83e001         and eax, 1
0x0000f891      80bc24ab0100.  cmp byte [rsp + 0x1ab], 0
0x0000f899      888424ae0100.  mov byte [rsp + 0x1ae], al
0x0000f8a0      7523           jne 0xf8c5
0x0000f8a2      488b742438     mov rsi, qword [rsp + 0x38]
0x0000f8a7      488b442478     mov rax, qword [rsp + 0x78]
0x0000f8ac      83beb4000000.  cmp dword [rsi + 0xb4], 1
0x0000f8b3      488984242801.  mov qword [rsp + 0x128], rax
0x0000f8bb      488b84248800.  mov rax, qword [rsp + 0x88]
0x0000f8c3      7e02           jle 0xf8c7
0x0000f8c5      31c0           xor eax, eax
0x0000f8c7      488984245001.  mov qword [rsp + 0x150], rax
0x0000f8cf      488984245801.  mov qword [rsp + 0x158], rax
0x0000f8d7      488b442448     mov rax, qword [rsp + 0x48]
0x0000f8dc      4c89ac248801.  mov qword [rsp + 0x188], r13
0x0000f8e4      4c89ac248001.  mov qword [rsp + 0x180], r13
0x0000f8ec      0fb64038       movzx eax, byte [rax + 0x38]
0x0000f8f0      88442408       mov byte [rsp + 8], al
0x0000f8f4      c0e807         shr al, 7
0x0000f8f7      888424ad0100.  mov byte [rsp + 0x1ad], al
0x0000f8fe      488b442438     mov rax, qword [rsp + 0x38]
0x0000f903      4c8bb0980000.  mov r14, qword [rax + 0x98]
0x0000f90a      8b8424800200.  mov eax, dword [rsp + 0x280]
0x0000f911      48c78424c801.  mov qword [rsp + 0x1c8], 0xffffffffffffffff
0x0000f91d      4f8d2c36       lea r13, [r14 + r14]
0x0000f921      898424c00100.  mov dword [rsp + 0x1c0], eax
0x0000f928      4d85ed         test r13, r13
0x0000f92b      7e52           jle 0xf97f
0x0000f92d      48b866666666.  movabs rax, 0x666666666666666
0x0000f937      4939c5         cmp r13, rax
0x0000f93a      0f8f400d0000   jg 0x10680
0x0000f940      4b8d7cf500     lea rdi, [r13 + r14*8]
0x0000f945      48c1e703       shl rdi, 3
0x0000f949      e8d222ffff     call sym.imp.malloc
0x0000f94e      4c89f7         mov rdi, r14
0x0000f951      4989c7         mov r15, rax
0x0000f954      48898424f801.  mov qword [rsp + 0x1f8], rax
0x0000f95c      48c1e704       shl rdi, 4
0x0000f960      e8bb22ffff     call sym.imp.malloc
0x0000f965      4885c0         test rax, rax
0x0000f968      488984241802.  mov qword [rsp + 0x218], rax
0x0000f970      0f840a0d0000   je 0x10680
0x0000f976      4d85ff         test r15, r15
0x0000f979      0f84010d0000   je 0x10680
0x0000f97f      4883bc247002.  cmp qword [rsp + 0x270], 1
0x0000f988      4c89ac24f001.  mov qword [rsp + 0x1f0], r13
0x0000f990      c78424000200.  mov dword [rsp + 0x200], 1
0x0000f99b      4c89ac241002.  mov qword [rsp + 0x210], r13
0x0000f9a3      0f861f110000   jbe 0x10ac8
0x0000f9a9      488b84246001.  mov rax, qword [rsp + 0x160]
0x0000f9b1      48bafeffffff.  movabs rdx, 0x1ffffffffffffffe          ; 2305843009213693950
0x0000f9bb      4839d0         cmp rax, rdx
0x0000f9be      0f87bc0c0000   ja 0x10680
0x0000f9c4      488d3cc50800.  lea rdi, [rax*8 + 8]
0x0000f9cc      e84f22ffff     call sym.imp.malloc
0x0000f9d1      4885c0         test rax, rax
0x0000f9d4      4889c7         mov rdi, rax
0x0000f9d7      48898424d801.  mov qword [rsp + 0x1d8], rax
0x0000f9df      0f84eb0c0000   je 0x106d0
0x0000f9e5      8b8424800200.  mov eax, dword [rsp + 0x280]
0x0000f9ec      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x0000f9f4      83e001         and eax, 1
0x0000f9f7      83f801         cmp eax, 1
0x0000f9fa      19c0           sbb eax, eax
0x0000f9fc      83e002         and eax, 2
0x0000f9ff      83c004         add eax, 4
0x0000fa02      898424900100.  mov dword [rsp + 0x190], eax
0x0000fa09      31c0           xor eax, eax
0x0000fa0b      4c39e5         cmp rbp, r12
0x0000fa0e      0f9ec0         setle al
0x0000fa11      8d4400ff       lea eax, [rax + rax - 1]
0x0000fa15      898424ac0000.  mov dword [rsp + 0xac], eax
0x0000fa1c      4c89e0         mov rax, r12
0x0000fa1f      480f4ec5       cmovle rax, rbp
0x0000fa23      488984249000.  mov qword [rsp + 0x90], rax
0x0000fa2b      4c89e0         mov rax, r12
0x0000fa2e      480f4dc5       cmovge rax, rbp
0x0000fa32      48837c246800   cmp qword [rsp + 0x68], 0
0x0000fa38      4889442470     mov qword [rsp + 0x70], rax
0x0000fa3d      488b442438     mov rax, qword [rsp + 0x38]
0x0000fa42      8bb0b4000000   mov esi, dword [rax + 0xb4]
0x0000fa48      b808000000     mov eax, 8
0x0000fa4d      89b424c80000.  mov dword [rsp + 0xc8], esi
0x0000fa54      7439           je 0xfa8f
0x0000fa56      83fe01         cmp esi, 1
0x0000fa59      b904000000     mov ecx, 4
0x0000fa5e      741e           je 0xfa7e
0x0000fa60      488b442448     mov rax, qword [rsp + 0x48]
0x0000fa65      f6401a40       test byte [rax + 0x1a], 0x40
0x0000fa69      0f857f0d0000   jne 0x107ee
0x0000fa6f      4883bc24b000.  cmp qword [rsp + 0xb0], 0
0x0000fa78      0f85700d0000   jne 0x107ee
0x0000fa7e      31d2           xor edx, edx
0x0000fa80      4c39e5         cmp rbp, r12
0x0000fa83      0fb6c3         movzx eax, bl
0x0000fa86      0f9ec2         setle dl
0x0000fa89      09c8           or eax, ecx
0x0000fa8b      01d2           add edx, edx
0x0000fa8d      09d0           or eax, edx
0x0000fa8f      483b6c2470     cmp rbp, qword [rsp + 0x70]
0x0000fa94      0f9fc1         setg cl
0x0000fa97      483bac249000.  cmp rbp, qword [rsp + 0x90]
0x0000fa9f      0f9cc2         setl dl
0x0000faa2      08d1           or cl, dl
0x0000faa4      0f85cf0a0000   jne 0x10579
0x0000faaa      488d8c24d800.  lea rcx, [rsp + 0xd8]
0x0000fab2      4c39e5         cmp rbp, r12
0x0000fab5      ba00000000     mov edx, 0
0x0000faba      480f4ed1       cmovle rdx, rcx
0x0000fabe      4885d2         test rdx, rdx
0x0000fac1      48899424c000.  mov qword [rsp + 0xc0], rdx
0x0000fac9      0f958424cf00.  setne byte [rsp + 0xcf]
0x0000fad1      83e804         sub eax, 4
0x0000fad4      898424a80000.  mov dword [rsp + 0xa8], eax
0x0000fadb      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000fae3      4889442428     mov qword [rsp + 0x28], rax
0x0000fae8      8b8424a80000.  mov eax, dword [rsp + 0xa8]
0x0000faef      83f804         cmp eax, 4
0x0000faf2      0f87e50b0000   ja 0x106dd
0x0000faf8      488d0dc17000.  lea rcx, [0x00016bc0]
0x0000faff      48630481       movsxd rax, dword [rcx + rax*4]
0x0000fb03      4801c8         add rax, rcx
0x0000fb06      ffe0           jmp rax
0x0000fb08      0f1f84000000.  nop dword [rax + rax]
0x0000fb10      488b442438     mov rax, qword [rsp + 0x38]
0x0000fb15      4883b8980000.  cmp qword [rax + 0x98], 0
0x0000fb1d      0f95c0         setne al
0x0000fb20      0fb6c0         movzx eax, al
0x0000fb23      89442458       mov dword [rsp + 0x58], eax
0x0000fb27      e963fcffff     jmp 0xf78f
0x0000fb2c      0f1f4000       nop dword [rax]
0x0000fb30      48c744246800.  mov qword [rsp + 0x68], 0
0x0000fb39      e978fbffff     jmp 0xf6b6
0x0000fb3e      48396c2470     cmp qword [rsp + 0x70], rbp
0x0000fb43      7e5a           jle 0xfb9f
0x0000fb45      488b442478     mov rax, qword [rsp + 0x78]
0x0000fb4a      488b7c2468     mov rdi, qword [rsp + 0x68]
0x0000fb4f      0fb61428       movzx edx, byte [rax + rbp]
0x0000fb53      488d4501       lea rax, [rbp + 1]
0x0000fb57      803c1700       cmp byte [rdi + rdx], 0
0x0000fb5b      0f8587000000   jne 0xfbe8
0x0000fb61      488b742468     mov rsi, qword [rsp + 0x68]
0x0000fb66      488b4c2470     mov rcx, qword [rsp + 0x70]
0x0000fb6b      488b7c2478     mov rdi, qword [rsp + 0x78]
0x0000fb70      eb18           jmp 0xfb8a
0x0000fb72      660f1f440000   nop word [rax + rax]
0x0000fb78      0fb61407       movzx edx, byte [rdi + rax]
0x0000fb7c      488d4001       lea rax, [rax + 1]
0x0000fb80      803c1600       cmp byte [rsi + rdx], 0
0x0000fb84      0f8597110000   jne 0x10d21
0x0000fb8a      4839c1         cmp rcx, rax
0x0000fb8d      4889c5         mov rbp, rax
0x0000fb90      75e6           jne 0xfb78
0x0000fb92      488b442470     mov rax, qword [rsp + 0x70]
0x0000fb97      48898424d800.  mov qword [rsp + 0xd8], rax
0x0000fb9f      48396c2470     cmp qword [rsp + 0x70], rbp
0x0000fba4      7542           jne 0xfbe8
0x0000fba6      31c0           xor eax, eax
0x0000fba8      488b742470     mov rsi, qword [rsp + 0x70]
0x0000fbad      4839b4248800.  cmp qword [rsp + 0x88], rsi
0x0000fbb5      7e09           jle 0xfbc0
0x0000fbb7      488b442478     mov rax, qword [rsp + 0x78]
0x0000fbbc      0fb60430       movzx eax, byte [rax + rsi]
0x0000fbc0      488bb424b000.  mov rsi, qword [rsp + 0xb0]
0x0000fbc8      4885f6         test rsi, rsi
0x0000fbcb      7404           je 0xfbd1
0x0000fbcd      0fb60406       movzx eax, byte [rsi + rax]
0x0000fbd1      488b7c2468     mov rdi, qword [rsp + 0x68]
0x0000fbd6      803c0700       cmp byte [rdi + rax], 0
0x0000fbda      0f8499090000   je 0x10579
0x0000fbe0      488b6c2470     mov rbp, qword [rsp + 0x70]
0x0000fbe5      0f1f00         nop dword [rax]
0x0000fbe8      8b9424800200.  mov edx, dword [rsp + 0x280]
0x0000fbef      488b3c24       mov rdi, qword [rsp]
0x0000fbf3      4889ee         mov rsi, rbp
0x0000fbf6      e8a5b0ffff     call sym.re_string_reconstruct
0x0000fbfb      85c0           test eax, eax
0x0000fbfd      8944245c       mov dword [rsp + 0x5c], eax
0x0000fc01      0f8559050000   jne 0x10160
0x0000fc07      83bc24c80000.  cmp dword [rsp + 0xc8], 1
0x0000fc0f      741c           je 0xfc2d
0x0000fc11      4883bc245001.  cmp qword [rsp + 0x150], 0
0x0000fc1a      7411           je 0xfc2d
0x0000fc1c      488b84243001.  mov rax, qword [rsp + 0x130]
0x0000fc24      8338ff         cmp dword [rax], 0xffffffff
0x0000fc27      0f8424090000   je 0x10551
0x0000fc2d      488b9c24b801.  mov rbx, qword [rsp + 0x1b8]
0x0000fc35      0fb6442458     movzx eax, byte [rsp + 0x58]
0x0000fc3a      c78424000200.  mov dword [rsp + 0x200], 0
0x0000fc45      48c78424e801.  mov qword [rsp + 0x1e8], 0
0x0000fc51      48c78424e001.  mov qword [rsp + 0x1e0], 0
0x0000fc5d      c78424d00000.  mov dword [rsp + 0xd0], 0
0x0000fc68      4c8b7348       mov r14, qword [rbx + 0x48]
0x0000fc6c      83e001         and eax, 1
0x0000fc6f      888424ce0000.  mov byte [rsp + 0xce], al
0x0000fc76      488b84246801.  mov rax, qword [rsp + 0x168]
0x0000fc7e      41807e6800     cmp byte [r14 + 0x68], 0
0x0000fc83      4889442408     mov qword [rsp + 8], rax
0x0000fc88      0f8872090000   js 0x10600
0x0000fc8e      488b8424d801.  mov rax, qword [rsp + 0x1d8]
0x0000fc96      4885c0         test rax, rax
0x0000fc99      7417           je 0xfcb2
0x0000fc9b      4883bb980000.  cmp qword [rbx + 0x98], 0
0x0000fca3      488b7c2408     mov rdi, qword [rsp + 8]
0x0000fca8      4c8934f8       mov qword [rax + rdi*8], r14
0x0000fcac      0f85e90e0000   jne 0x10b9b
0x0000fcb2      0fb68424cf00.  movzx eax, byte [rsp + 0xcf]
0x0000fcba      88442418       mov byte [rsp + 0x18], al
0x0000fcbe      410fb64668     movzx eax, byte [r14 + 0x68]
0x0000fcc3      a810           test al, 0x10
0x0000fcc5      48c7442420ff.  mov qword [rsp + 0x20], 0xffffffffffffffff
0x0000fcce      48c744243000.  mov qword [rsp + 0x30], 0
0x0000fcd7      0f85830e0000   jne 0x10b60
0x0000fcdd      488b8424c000.  mov rax, qword [rsp + 0xc0]
0x0000fce5      4c8b84246801.  mov r8, qword [rsp + 0x168]
0x0000fced      4889442450     mov qword [rsp + 0x50], rax
0x0000fcf2      488d8424e000.  lea rax, [rsp + 0xe0]
0x0000fcfa      4889442460     mov qword [rsp + 0x60], rax
0x0000fcff      488d8424d400.  lea rax, [rsp + 0xd4]
0x0000fd07      488984248000.  mov qword [rsp + 0x80], rax
0x0000fd0f      eb5b           jmp 0xfd6c
0x0000fd11      0f1f80000000.  nop dword [rax]
0x0000fd18      4d39ee         cmp r14, r13
0x0000fd1b      4c8b84246801.  mov r8, qword [rsp + 0x168]
0x0000fd23      0f94c0         sete al
0x0000fd26      20442418       and byte [rsp + 0x18], al
0x0000fd2a      410fb64568     movzx eax, byte [r13 + 0x68]
0x0000fd2f      480f445c2408   cmove rbx, qword [rsp + 8]
0x0000fd35      a810           test al, 0x10
0x0000fd37      48895c2408     mov qword [rsp + 8], rbx
0x0000fd3c      742b           je 0xfd69
0x0000fd3e      84c0           test al, al
0x0000fd40      0f88ba040000   js 0x10200
0x0000fd46      8b442458       mov eax, dword [rsp + 0x58]
0x0000fd4a      4c89442420     mov qword [rsp + 0x20], r8
0x0000fd4f      85c0           test eax, eax
0x0000fd51      0f841f010000   je 0xfe76
0x0000fd57      48c744243001.  mov qword [rsp + 0x30], 1
0x0000fd60      48c744245000.  mov qword [rsp + 0x50], 0
0x0000fd69      4d89ee         mov r14, r13
0x0000fd6c      4c3984248801.  cmp qword [rsp + 0x188], r8
0x0000fd74      0f8eea000000   jle 0xfe64
0x0000fd7a      488b84246001.  mov rax, qword [rsp + 0x160]
0x0000fd82      498d5801       lea rbx, [r8 + 1]
0x0000fd86      4839c3         cmp rbx, rax
0x0000fd89      0f8da1040000   jge 0x10230
0x0000fd8f      488b84245001.  mov rax, qword [rsp + 0x150]
0x0000fd97      4839c3         cmp rbx, rax
0x0000fd9a      0f8d80070000   jge 0x10520
0x0000fda0      41f6466820     test byte [r14 + 0x68], 0x20
0x0000fda5      0f85c5040000   jne 0x10270
0x0000fdab      498d4001       lea rax, [r8 + 1]
0x0000fdaf      488984246801.  mov qword [rsp + 0x168], rax
0x0000fdb7      488b84242801.  mov rax, qword [rsp + 0x128]
0x0000fdbf      460fb62c00     movzx r13d, byte [rax + r8]
0x0000fdc4      498b4658       mov rax, qword [r14 + 0x58]
0x0000fdc8      4885c0         test rax, rax
0x0000fdcb      0f840f070000   je 0x104e0
0x0000fdd1      4e8b2ce8       mov r13, qword [rax + r13*8]
0x0000fdd5      4883bc24d801.  cmp qword [rsp + 0x1d8], 0
0x0000fdde      7414           je 0xfdf4
0x0000fde0      488b3424       mov rsi, qword [rsp]
0x0000fde4      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000fde9      4c89ea         mov rdx, r13
0x0000fdec      e8eff2ffff     call sym.merge_state_with_log
0x0000fdf1      4989c5         mov r13, rax
0x0000fdf4      4d85ed         test r13, r13
0x0000fdf7      0f851bffffff   jne 0xfd18
0x0000fdfd      8b8c24d00000.  mov ecx, dword [rsp + 0xd0]
0x0000fe04      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000fe0c      85c9           test ecx, ecx
0x0000fe0e      0f85bc080000   jne 0x106d0
0x0000fe14      4885ff         test rdi, rdi
0x0000fe17      744b           je 0xfe64
0x0000fe19      0fb68424ce00.  movzx eax, byte [rsp + 0xce]
0x0000fe21      83f001         xor eax, 1
0x0000fe24      84442430       test byte [rsp + 0x30], al
0x0000fe28      753a           jne 0xfe64
0x0000fe2a      488bb424e001.  mov rsi, qword [rsp + 0x1e0]
0x0000fe32      488b84246801.  mov rax, qword [rsp + 0x168]
0x0000fe3a      31c9           xor ecx, ecx
0x0000fe3c      eb15           jmp 0xfe53
0x0000fe3e      6690           nop
0x0000fe40      48833cd700     cmp qword [rdi + rdx*8], 0
0x0000fe45      4889d0         mov rax, rdx
0x0000fe48      b901000000     mov ecx, 1
0x0000fe4d      0f856d030000   jne 0x101c0
0x0000fe53      488d5001       lea rdx, [rax + 1]
0x0000fe57      4839d6         cmp rsi, rdx
0x0000fe5a      7de4           jge 0xfe40
0x0000fe5c      84c9           test cl, cl
0x0000fe5e      0f85ca0e0000   jne 0x10d2e
0x0000fe64      488b442450     mov rax, qword [rsp + 0x50]
0x0000fe69      4885c0         test rax, rax
0x0000fe6c      7408           je 0xfe76
0x0000fe6e      488b7c2408     mov rdi, qword [rsp + 8]
0x0000fe73      480138         add qword [rax], rdi
0x0000fe76      488b442420     mov rax, qword [rsp + 0x20]
0x0000fe7b      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000fe7f      0f84bb060000   je 0x10540
0x0000fe85      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000fe89      0f84f1070000   je 0x10680
0x0000fe8f      488b442420     mov rax, qword [rsp + 0x20]
0x0000fe94      48898424c801.  mov qword [rsp + 0x1c8], rax
0x0000fe9c      488b442448     mov rax, qword [rsp + 0x48]
0x0000fea1      f6403810       test byte [rax + 0x38], 0x10
0x0000fea5      0f85b5070000   jne 0x10660
0x0000feab      4883bc247002.  cmp qword [rsp + 0x270], 1
0x0000feb4      0f86f2080000   jbe 0x107ac
0x0000feba      488b4c2420     mov rcx, qword [rsp + 0x20]
0x0000febf      488b9c24d801.  mov rbx, qword [rsp + 0x1d8]
0x0000fec7      488b3c24       mov rdi, qword [rsp]
0x0000fecb      488b04cb       mov rax, qword [rbx + rcx*8]
0x0000fecf      488b7010       mov rsi, qword [rax + 0x10]
0x0000fed3      488d5018       lea rdx, [rax + 0x18]
0x0000fed7      e8f4acffff     call sym.check_halt_state_context.isra.20
0x0000fedc      4989c5         mov r13, rax
0x0000fedf      48898424d001.  mov qword [rsp + 0x1d0], rax
0x0000fee7      488b442438     mov rax, qword [rsp + 0x38]
0x0000feec      f680b0000000.  test byte [rax + 0xb0], 1
0x0000fef3      751b           jne 0xff10
0x0000fef5      488b442438     mov rax, qword [rsp + 0x38]
0x0000fefa      4883b8980000.  cmp qword [rax + 0x98], 0
0x0000ff02      0f8494090000   je 0x1089c
0x0000ff08      4c8bac24d001.  mov r13, qword [rsp + 0x1d0]
0x0000ff10      48befeffffff.  movabs rsi, 0x1ffffffffffffffe          ; 2305843009213693950
0x0000ff1a      4839742420     cmp qword [rsp + 0x20], rsi
0x0000ff1f      4c8bbc24b801.  mov r15, qword [rsp + 0x1b8]
0x0000ff27      0f875e0c0000   ja 0x10b8b
0x0000ff2d      488b442420     mov rax, qword [rsp + 0x20]
0x0000ff32      4883c001       add rax, 1
0x0000ff36      488d1cc50000.  lea rbx, [rax*8]
0x0000ff3e      4889442408     mov qword [rsp + 8], rax
0x0000ff43      4889df         mov rdi, rbx
0x0000ff46      e8d51cffff     call sym.imp.malloc
0x0000ff4b      4885c0         test rax, rax
0x0000ff4e      4989c4         mov r12, rax
0x0000ff51      0f8429070000   je 0x10680
0x0000ff57      4983bf980000.  cmp qword [r15 + 0x98], 0
0x0000ff5f      0f8490080000   je 0x107f5
0x0000ff65      4889df         mov rdi, rbx
0x0000ff68      e8b31cffff     call sym.imp.malloc
0x0000ff6d      4885c0         test rax, rax
0x0000ff70      4889c5         mov rbp, rax
0x0000ff73      0f84ff060000   je 0x10678
0x0000ff79      4c8b742420     mov r14, qword [rsp + 0x20]
0x0000ff7e      488d9c24e000.  lea rbx, [rsp + 0xe0]
0x0000ff86      4c897c2410     mov qword [rsp + 0x10], r15
0x0000ff8b      4889442418     mov qword [rsp + 0x18], rax
0x0000ff90      488b442408     mov rax, qword [rsp + 8]
0x0000ff95      31f6           xor esi, esi
0x0000ff97      4889ef         mov rdi, rbp
0x0000ff9a      488d14c50000.  lea rdx, [rax*8]
0x0000ffa2      e8b91bffff     call sym.imp.memset
0x0000ffa7      660fefc0       pxor xmm0, xmm0
0x0000ffab      4c89a424e000.  mov qword [rsp + 0xe0], r12
0x0000ffb3      4889ac24e800.  mov qword [rsp + 0xe8], rbp
0x0000ffbb      4c89ac24f000.  mov qword [rsp + 0xf0], r13
0x0000ffc3      4889de         mov rsi, rbx
0x0000ffc6      4c89b424f800.  mov qword [rsp + 0xf8], r14
0x0000ffce      488b3c24       mov rdi, qword [rsp]
0x0000ffd2      0f294320       movaps xmmword [rbx + 0x20], xmm0
0x0000ffd6      48c743300000.  mov qword [rbx + 0x30], 0
0x0000ffde      e8edf2ffff     call sym.sift_states_backward
0x0000ffe3      488bbc241001.  mov rdi, qword [rsp + 0x110]
0x0000ffeb      4189c7         mov r15d, eax
0x0000ffee      e8dd19ffff     call sym.imp.free
0x0000fff3      4585ff         test r15d, r15d
0x0000fff6      0f85180c0000   jne 0x10c14
0x0000fffc      49833c2400     cmp qword [r12], 0
0x00010001      0f856c0c0000   jne 0x10c73
0x00010007      48837d0000     cmp qword [rbp], 0
0x0001000c      0f85610c0000   jne 0x10c73
0x00010012      488b9424d801.  mov rdx, qword [rsp + 0x1d8]
0x0001001a      660f1f440000   nop word [rax + rax]
0x00010020      4983ee01       sub r14, 1
0x00010024      4983feff       cmp r14, 0xffffffffffffffff
0x00010028      0f84bd0a0000   je 0x10aeb
0x0001002e      4a8b04f2       mov rax, qword [rdx + r14*8]
0x00010032      4885c0         test rax, rax
0x00010035      74e9           je 0x10020
0x00010037      f6406810       test byte [rax + 0x68], 0x10
0x0001003b      74e3           je 0x10020
0x0001003d      488b7010       mov rsi, qword [rax + 0x10]
0x00010041      488b3c24       mov rdi, qword [rsp]
0x00010045      488d5018       lea rdx, [rax + 0x18]
0x00010049      4c89f1         mov rcx, r14
0x0001004c      e87fabffff     call sym.check_halt_state_context.isra.20
0x00010051      4989c5         mov r13, rax
0x00010054      498d4601       lea rax, [r14 + 1]
0x00010058      4889442408     mov qword [rsp + 8], rax
0x0001005d      e92effffff     jmp 0xff90
0x00010062      48396c2470     cmp qword [rsp + 0x70], rbp
0x00010067      0f8e32fbffff   jle 0xfb9f
0x0001006d      488b442478     mov rax, qword [rsp + 0x78]
0x00010072      488bbc24b000.  mov rdi, qword [rsp + 0xb0]
0x0001007a      488b742468     mov rsi, qword [rsp + 0x68]
0x0001007f      0fb60428       movzx eax, byte [rax + rbp]
0x00010083      0fb61407       movzx edx, byte [rdi + rax]
0x00010087      488d4501       lea rax, [rbp + 1]
0x0001008b      803c1600       cmp byte [rsi + rdx], 0
0x0001008f      0f8553fbffff   jne 0xfbe8
0x00010095      488b742468     mov rsi, qword [rsp + 0x68]
0x0001009a      488bbc24b000.  mov rdi, qword [rsp + 0xb0]
0x000100a2      488b4c2470     mov rcx, qword [rsp + 0x70]
0x000100a7      4c8b442478     mov r8, qword [rsp + 0x78]
0x000100ac      eb19           jmp 0x100c7
0x000100ae      6690           nop
0x000100b0      410fb60400     movzx eax, byte [r8 + rax]
0x000100b5      0fb61407       movzx edx, byte [rdi + rax]
0x000100b9      488d4501       lea rax, [rbp + 1]
0x000100bd      803c1600       cmp byte [rsi + rdx], 0
0x000100c1      0f855a0c0000   jne 0x10d21
0x000100c7      4839c1         cmp rcx, rax
0x000100ca      4889c5         mov rbp, rax
0x000100cd      75e1           jne 0x100b0
0x000100cf      e9befaffff     jmp 0xfb92
0x000100d4      4839ac249000.  cmp qword [rsp + 0x90], rbp
0x000100dc      0f8f97040000   jg 0x10579
0x000100e2      31c9           xor ecx, ecx
0x000100e4      4889e8         mov rax, rbp
0x000100e7      488b7c2468     mov rdi, qword [rsp + 0x68]
0x000100ec      488bb424b000.  mov rsi, qword [rsp + 0xb0]
0x000100f4      4c8b8c249000.  mov r9, qword [rsp + 0x90]
0x000100fc      4c8b542478     mov r10, qword [rsp + 0x78]
0x00010101      4c8b84248800.  mov r8, qword [rsp + 0x88]
0x00010109      eb17           jmp 0x10122
0x0001010b      0f1f440000     nop dword [rax + rax]
0x00010110      4883e801       sub rax, 1
0x00010114      b901000000     mov ecx, 1
0x00010119      4c39c8         cmp rax, r9
0x0001011c      0f8cde090000   jl 0x10b00
0x00010122      31d2           xor edx, edx
0x00010124      4939c0         cmp r8, rax
0x00010127      7e05           jle 0x1012e
0x00010129      410fb61402     movzx edx, byte [r10 + rax]
0x0001012e      4885f6         test rsi, rsi
0x00010131      7404           je 0x10137
0x00010133      0fb61416       movzx edx, byte [rsi + rdx]
0x00010137      803c1700       cmp byte [rdi + rdx], 0
0x0001013b      74d3           je 0x10110
0x0001013d      84c9           test cl, cl
0x0001013f      0f84a3faffff   je 0xfbe8
0x00010145      48898424d800.  mov qword [rsp + 0xd8], rax
0x0001014d      4889c5         mov rbp, rax
0x00010150      e993faffff     jmp 0xfbe8
0x00010155      0f1f00         nop dword [rax]
0x00010158      8944245c       mov dword [rsp + 0x5c], eax
0x0001015c      0f1f4000       nop dword [rax]
0x00010160      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00010168      e86318ffff     call sym.imp.free
0x0001016d      488b442438     mov rax, qword [rsp + 0x38]
0x00010172      4883b8980000.  cmp qword [rax + 0x98], 0
0x0001017a      0f8520090000   jne 0x10aa0
0x00010180      488b3c24       mov rdi, qword [rsp]
0x00010184      e85787ffff     call sym.re_string_destruct
0x00010189      488bb4242802.  mov rsi, qword [rsp + 0x228]
0x00010191      644833342528.  xor rsi, qword fs:[0x28]
0x0001019a      8b44245c       mov eax, dword [rsp + 0x5c]
0x0001019e      0f85970b0000   jne 0x10d3b
0x000101a4      4881c4380200.  add rsp, sym..interp
0x000101ab      5b             pop rbx
0x000101ac      5d             pop rbp
0x000101ad      415c           pop r12
0x000101af      415d           pop r13
0x000101b1      415e           pop r14
0x000101b3      415f           pop r15
0x000101b5      c3             ret
0x000101b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000101c0      488b3424       mov rsi, qword [rsp]
0x000101c4      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000101c9      488994246801.  mov qword [rsp + 0x168], rdx
0x000101d1      31d2           xor edx, edx
0x000101d3      e808efffff     call sym.merge_state_with_log
0x000101d8      8b9424d00000.  mov edx, dword [rsp + 0xd0]
0x000101df      85d2           test edx, edx
0x000101e1      0f8536090000   jne 0x10b1d
0x000101e7      4885c0         test rax, rax
0x000101ea      0f8540090000   jne 0x10b30
0x000101f0      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x000101f8      e92dfcffff     jmp 0xfe2a
0x000101fd      0f1f00         nop dword [rax]
0x00010200      498b7510       mov rsi, qword [r13 + 0x10]
0x00010204      488b3c24       mov rdi, qword [rsp]
0x00010208      498d5518       lea rdx, [r13 + 0x18]
0x0001020c      4c89c1         mov rcx, r8
0x0001020f      4c89442410     mov qword [rsp + 0x10], r8
0x00010214      e8b7a9ffff     call sym.check_halt_state_context.isra.20
0x00010219      4885c0         test rax, rax
0x0001021c      4c8b442410     mov r8, qword [rsp + 0x10]
0x00010221      0f8442fbffff   je 0xfd69
0x00010227      e91afbffff     jmp 0xfd46
0x0001022c      0f1f4000       nop dword [rax]
0x00010230      483b84247801.  cmp rax, qword [rsp + 0x178]
0x00010238      0f8d51fbffff   jge 0xfd8f
0x0001023e      488b3c24       mov rdi, qword [rsp]
0x00010242      8d7301         lea esi, [rbx + 1]
0x00010245      e8e67effff     call sym.extend_buffers
0x0001024a      85c0           test eax, eax
0x0001024c      898424d00000.  mov dword [rsp + 0xd0], eax
0x00010253      0f85df080000   jne 0x10b38
0x00010259      41f6466820     test byte [r14 + 0x68], 0x20
0x0001025e      4c8b84246801.  mov r8, qword [rsp + 0x168]
0x00010266      0f843ffbffff   je 0xfdab
0x0001026c      0f1f4000       nop dword [rax]
0x00010270      49837e1000     cmp qword [r14 + 0x10], 0
0x00010275      4c8bac24b801.  mov r13, qword [rsp + 0x1b8]
0x0001027d      0f8e28030000   jle 0x105ab
0x00010283      498d85d80000.  lea rax, [r13 + 0xd8]
0x0001028a      4531e4         xor r12d, r12d
0x0001028d      48899c24a000.  mov qword [rsp + 0xa0], rbx
0x00010295      4c89e3         mov rbx, r12
0x00010298      4d89c4         mov r12, r8
0x0001029b      4889442440     mov qword [rsp + 0x40], rax
0x000102a0      e953010000     jmp 0x103f8
0x000102a5      0f1f00         nop dword [rax]
0x000102a8      a801           test al, 1
0x000102aa      0f843a010000   je 0x103ea
0x000102b0      83e108         and ecx, 8
0x000102b3      0f8531010000   jne 0x103ea
0x000102b9      f6c220         test dl, 0x20                           ; "@"
0x000102bc      7408           je 0x102c6
0x000102be      a802           test al, 2
0x000102c0      0f8424010000   je 0x103ea
0x000102c6      81e280000000   and edx, 0x80
0x000102cc      7412           je 0x102e0
0x000102ce      a808           test al, 8
0x000102d0      0f8414010000   je 0x103ea
0x000102d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000102e0      488b0c24       mov rcx, qword [rsp]
0x000102e4      488b742440     mov rsi, qword [rsp + 0x40]
0x000102e9      4d89e0         mov r8, r12
0x000102ec      4c89fa         mov rdx, r15
0x000102ef      4889ef         mov rdi, rbp
0x000102f2      e8a9d0ffff     call sym.check_node_accept_bytes.isra.31
0x000102f7      85c0           test eax, eax
0x000102f9      0f84e3000000   je 0x103e2
0x000102ff      4863e8         movsxd rbp, eax
0x00010302      4803ac246801.  add rbp, qword [rsp + 0x168]
0x0001030a      398424000200.  cmp dword [rsp + 0x200], eax
0x00010311      0f4d84240002.  cmovge eax, dword [rsp + 0x200]
0x00010319      488b3c24       mov rdi, qword [rsp]
0x0001031d      4889ee         mov rsi, rbp
0x00010320      898424000200.  mov dword [rsp + 0x200], eax
0x00010327      e8547fffff     call sym.clean_state_log_if_needed
0x0001032c      85c0           test eax, eax
0x0001032e      898424d40000.  mov dword [rsp + 0xd4], eax
0x00010335      0f8595020000   jne 0x105d0
0x0001033b      498b4518       mov rax, qword [r13 + 0x18]
0x0001033f      4c8d24ed0000.  lea r12, [rbp*8]
0x00010347      4a8b04f8       mov rax, qword [rax + r15*8]
0x0001034b      4c8bbc24d801.  mov r15, qword [rsp + 0x1d8]
0x00010353      488d1440       lea rdx, [rax + rax*2]
0x00010357      498b4530       mov rax, qword [r13 + 0x30]
0x0001035b      4d01e7         add r15, r12
0x0001035e      488d14d0       lea rdx, [rax + rdx*8]
0x00010362      498b07         mov rax, qword [r15]
0x00010365      4885c0         test rax, rax
0x00010368      0f84fa000000   je 0x10468
0x0001036e      488b7050       mov rsi, qword [rax + 0x50]
0x00010372      488b7c2460     mov rdi, qword [rsp + 0x60]
0x00010377      e8649affff     call sym.re_node_set_init_union
0x0001037c      85c0           test eax, eax
0x0001037e      898424d40000.  mov dword [rsp + 0xd4], eax
0x00010385      0f8545020000   jne 0x105d0
0x0001038b      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x00010392      488b3c24       mov rdi, qword [rsp]
0x00010396      488d75ff       lea rsi, [rbp - 1]
0x0001039a      e831a6ffff     call sym.re_string_context_at
0x0001039f      488b542460     mov rdx, qword [rsp + 0x60]
0x000103a4      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x000103ac      89c1           mov ecx, eax
0x000103ae      4c03a424d801.  add r12, qword [rsp + 0x1d8]
0x000103b6      4c89ee         mov rsi, r13
0x000103b9      e8829bffff     call sym.re_acquire_state_context
0x000103be      488bbc24f000.  mov rdi, qword [rsp + 0xf0]
0x000103c6      49890424       mov qword [r12], rax
0x000103ca      e80116ffff     call sym.imp.free
0x000103cf      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x000103d7      48833cef00     cmp qword [rdi + rbp*8], 0
0x000103dc      0f84df000000   je 0x104c1
0x000103e2      4c8ba4246801.  mov r12, qword [rsp + 0x168]
0x000103ea      4883c301       add rbx, 1
0x000103ee      493b5e10       cmp rbx, qword [r14 + 0x10]
0x000103f2      0f8da8010000   jge 0x105a0
0x000103f8      498b4618       mov rax, qword [r14 + 0x18]
0x000103fc      498b6d00       mov rbp, qword [r13]
0x00010400      4c8b3cd8       mov r15, qword [rax + rbx*8]
0x00010404      4c89f8         mov rax, r15
0x00010407      48c1e004       shl rax, 4
0x0001040b      4801e8         add rax, rbp
0x0001040e      f6400a10       test byte [rax + 0xa], 0x10
0x00010412      74d6           je 0x103ea
0x00010414      8b4808         mov ecx, dword [rax + 8]
0x00010417      f7c100ff0300   test ecx, 0x3ff00
0x0001041d      894c2410       mov dword [rsp + 0x10], ecx
0x00010421      0f84b9feffff   je 0x102e0
0x00010427      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x0001042e      488b3c24       mov rdi, qword [rsp]
0x00010432      4c89e6         mov rsi, r12
0x00010435      e896a5ffff     call sym.re_string_context_at
0x0001043a      8b4c2410       mov ecx, dword [rsp + 0x10]
0x0001043e      c1e908         shr ecx, 8
0x00010441      89ca           mov edx, ecx
0x00010443      6681e2ff03     and dx, 0x3ff
0x00010448      f6c104         test cl, 4
0x0001044b      0f8557feffff   jne 0x102a8
0x00010451      83e108         and ecx, 8
0x00010454      0f845ffeffff   je 0x102b9
0x0001045a      a801           test al, 1
0x0001045c      0f8457feffff   je 0x102b9
0x00010462      eb86           jmp 0x103ea
0x00010464      0f1f4000       nop dword [rax]
0x00010468      f30f6f02       movdqu xmm0, xmmword [rdx]
0x0001046c      488d75ff       lea rsi, [rbp - 1]
0x00010470      488b3c24       mov rdi, qword [rsp]
0x00010474      0f298424e000.  movaps xmmword [rsp + 0xe0], xmm0
0x0001047c      488b4210       mov rax, qword [rdx + 0x10]
0x00010480      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x00010487      48898424f000.  mov qword [rsp + 0xf0], rax
0x0001048f      e83ca5ffff     call sym.re_string_context_at
0x00010494      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x0001049c      488b542460     mov rdx, qword [rsp + 0x60]
0x000104a1      89c1           mov ecx, eax
0x000104a3      4c89ee         mov rsi, r13
0x000104a6      e8959affff     call sym.re_acquire_state_context
0x000104ab      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x000104b3      498907         mov qword [r15], rax
0x000104b6      48833cef00     cmp qword [rdi + rbp*8], 0
0x000104bb      0f8521ffffff   jne 0x103e2
0x000104c1      8b8424d40000.  mov eax, dword [rsp + 0xd4]
0x000104c8      85c0           test eax, eax
0x000104ca      0f8412ffffff   je 0x103e2
0x000104d0      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x000104d8      e903010000     jmp 0x105e0
0x000104dd      0f1f00         nop dword [rax]
0x000104e0      498b6e60       mov rbp, qword [r14 + 0x60]
0x000104e4      4885ed         test rbp, rbp
0x000104e7      0f84a8010000   je 0x10695
0x000104ed      488b84246801.  mov rax, qword [rsp + 0x168]
0x000104f5      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x000104fc      488b3c24       mov rdi, qword [rsp]
0x00010500      488d70ff       lea rsi, [rax - 1]
0x00010504      e8c7a4ffff     call sym.re_string_context_at
0x00010509      a801           test al, 1
0x0001050b      0f84af000000   je 0x105c0
0x00010511      4e8baced0008.  mov r13, qword [rbp + r13*8 + 0x800]
0x00010519      e9b7f8ffff     jmp 0xfdd5
0x0001051e      6690           nop
0x00010520      483b84247801.  cmp rax, qword [rsp + 0x178]
0x00010528      0f8d72f8ffff   jge 0xfda0
0x0001052e      e90bfdffff     jmp 0x1023e
0x00010533      4c89e7         mov rdi, r12
0x00010536      e89514ffff     call sym.imp.free
0x0001053b      0f1f440000     nop dword [rax + rax]
0x00010540      488b3c24       mov rdi, qword [rsp]
0x00010544      e83785ffff     call sym.match_ctx_clean
0x00010549      488bac24d800.  mov rbp, qword [rsp + 0xd8]
0x00010551      48638424ac00.  movsxd rax, dword [rsp + 0xac]
0x00010559      4801c5         add rbp, rax
0x0001055c      483bac249000.  cmp rbp, qword [rsp + 0x90]
0x00010564      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x0001056c      7c0b           jl 0x10579
0x0001056e      483b6c2470     cmp rbp, qword [rsp + 0x70]
0x00010573      0f8e6ff5ffff   jle 0xfae8
0x00010579      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00010581      c744245c0100.  mov dword [rsp + 0x5c], 1
0x00010589      e9dafbffff     jmp 0x10168
0x0001058e      6690           nop
0x00010590      c744245c0100.  mov dword [rsp + 0x5c], 1
0x00010598      e9ecfbffff     jmp 0x10189
0x0001059d      0f1f00         nop dword [rax]
0x000105a0      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x000105a8      4d89e0         mov r8, r12
0x000105ab      c78424d00000.  mov dword [rsp + 0xd0], 0
0x000105b6      e9f0f7ffff     jmp 0xfdab
0x000105bb      0f1f440000     nop dword [rax + rax]
0x000105c0      4e8b6ced00     mov r13, qword [rbp + r13*8]
0x000105c5      e90bf8ffff     jmp 0xfdd5
0x000105ca      660f1f440000   nop word [rax + rax]
0x000105d0      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x000105d8      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x000105e0      4885ff         test rdi, rdi
0x000105e3      898424d00000.  mov dword [rsp + 0xd0], eax
0x000105ea      0f84e0000000   je 0x106d0
0x000105f0      4531ed         xor r13d, r13d
0x000105f3      e9e8f7ffff     jmp 0xfde0
0x000105f8      0f1f84000000.  nop dword [rax + rax]
0x00010600      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x00010607      488b3c24       mov rdi, qword [rsp]
0x0001060b      488d70ff       lea rsi, [rax - 1]
0x0001060f      e8bca3ffff     call sym.re_string_context_at
0x00010614      a801           test al, 1
0x00010616      0f8469010000   je 0x10785
0x0001061c      4c8b7350       mov r14, qword [rbx + 0x50]
0x00010620      4d85f6         test r14, r14
0x00010623      0f8565f6ffff   jne 0xfc8e
0x00010629      8b8424d00000.  mov eax, dword [rsp + 0xd0]
0x00010630      83f80c         cmp eax, 0xc
0x00010633      8944245c       mov dword [rsp + 0x5c], eax
0x00010637      0f8423fbffff   je 0x10160
0x0001063d      488d0d0c6a00.  lea rcx, obj.__PRETTY_FUNCTION__.7972   ; 0x17050 ; "check_matching"
0x00010644      488d35356400.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x16a80 ; "../coreutils-8.31/lib/regexec.c"
0x0001064b      488d3de26400.  lea rdi, str.err____REG_ESPACE          ; 0x16b34 ; "err == REG_ESPACE"
0x00010652      ba35040000     mov edx, 0x435
0x00010657      e8f414ffff     call sym.imp.__assert_fail
0x0001065c      0f1f4000       nop dword [rax]
0x00010660      488b442438     mov rax, qword [rsp + 0x38]
0x00010665      4883b8980000.  cmp qword [rax + 0x98], 0
0x0001066d      0f8429020000   je 0x1089c
0x00010673      e947010000     jmp 0x107bf
0x00010678      4c89e7         mov rdi, r12
0x0001067b      e85013ffff     call sym.imp.free
0x00010680      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00010688      c744245c0c00.  mov dword [rsp + 0x5c], 0xc             ; [0xc:4]=0
0x00010690      e9d3faffff     jmp 0x10168
0x00010695      488bbc24b801.  mov rdi, qword [rsp + 0x1b8]
0x0001069d      4c89f6         mov rsi, r14
0x000106a0      e8dbafffff     call sym.build_trtable
0x000106a5      84c0           test al, al
0x000106a7      0f8517f7ffff   jne 0xfdc4
0x000106ad      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x000106b5      c78424d00000.  mov dword [rsp + 0xd0], 0xc             ; [0xc:4]=0
0x000106c0      4885ff         test rdi, rdi
0x000106c3      0f8527ffffff   jne 0x105f0
0x000106c9      0f1f80000000.  nop dword [rax]
0x000106d0      c744245c0c00.  mov dword [rsp + 0x5c], 0xc             ; [0xc:4]=0
0x000106d8      e98bfaffff     jmp 0x10168
0x000106dd      488b5c2468     mov rbx, qword [rsp + 0x68]
0x000106e2      448bac24ac00.  mov r13d, dword [rsp + 0xac]
0x000106ea      4c8bb4249000.  mov r14, qword [rsp + 0x90]
0x000106f2      4c8b7c2470     mov r15, qword [rsp + 0x70]
0x000106f7      4c8ba4248800.  mov r12, qword [rsp + 0x88]
0x000106ff      eb47           jmp 0x10748
0x00010701      0f1f80000000.  nop dword [rax]
0x00010708      4939ec         cmp r12, rbp
0x0001070b      4889d8         mov rax, rbx
0x0001070e      7e0f           jle 0x1071f
0x00010710      488b84242801.  mov rax, qword [rsp + 0x128]
0x00010718      0fb60410       movzx eax, byte [rax + rdx]
0x0001071c      4801d8         add rax, rbx
0x0001071f      803800         cmp byte [rax], 0
0x00010722      0f85c0f4ffff   jne 0xfbe8
0x00010728      4963c5         movsxd rax, r13d
0x0001072b      4801c5         add rbp, rax
0x0001072e      4c39f5         cmp rbp, r14
0x00010731      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x00010739      0f8c3afeffff   jl 0x10579
0x0001073f      4c39fd         cmp rbp, r15
0x00010742      0f8f31feffff   jg 0x10579
0x00010748      4889ea         mov rdx, rbp
0x0001074b      482b94244801.  sub rdx, qword [rsp + 0x148]
0x00010753      483994245801.  cmp qword [rsp + 0x158], rdx
0x0001075b      77ab           ja 0x10708
0x0001075d      8b9424800200.  mov edx, dword [rsp + 0x280]
0x00010764      488b3c24       mov rdi, qword [rsp]
0x00010768      4889ee         mov rsi, rbp
0x0001076b      e830a5ffff     call sym.re_string_reconstruct
0x00010770      85c0           test eax, eax
0x00010772      0f85e0f9ffff   jne 0x10158
0x00010778      4889ea         mov rdx, rbp
0x0001077b      482b94244801.  sub rdx, qword [rsp + 0x148]
0x00010783      eb83           jmp 0x10708
0x00010785      85c0           test eax, eax
0x00010787      0f8401f5ffff   je 0xfc8e
0x0001078d      89c2           mov edx, eax
0x0001078f      83e206         and edx, 6
0x00010792      83fa06         cmp edx, 6
0x00010795      0f8464040000   je 0x10bff
0x0001079b      a802           test al, 2
0x0001079d      0f84ad040000   je 0x10c50
0x000107a3      4c8b7358       mov r14, qword [rbx + 0x58]
0x000107a7      e974feffff     jmp 0x10620
0x000107ac      488b442438     mov rax, qword [rsp + 0x38]
0x000107b1      4883b8980000.  cmp qword [rax + 0x98], 0
0x000107b9      0f84dd000000   je 0x1089c
0x000107bf      488b4c2420     mov rcx, qword [rsp + 0x20]
0x000107c4      488b9c24d801.  mov rbx, qword [rsp + 0x1d8]
0x000107cc      488b3c24       mov rdi, qword [rsp]
0x000107d0      488b04cb       mov rax, qword [rbx + rcx*8]
0x000107d4      488b7010       mov rsi, qword [rax + 0x10]
0x000107d8      488d5018       lea rdx, [rax + 0x18]
0x000107dc      e8efa3ffff     call sym.check_halt_state_context.isra.20
0x000107e1      48898424d001.  mov qword [rsp + 0x1d0], rax
0x000107e9      e91af7ffff     jmp 0xff08
0x000107ee      31c9           xor ecx, ecx
0x000107f0      e989f2ffff     jmp 0xfa7e
0x000107f5      660fefc0       pxor xmm0, xmm0
0x000107f9      48898424e000.  mov qword [rsp + 0xe0], rax
0x00010801      488b3c24       mov rdi, qword [rsp]
0x00010805      488b442420     mov rax, qword [rsp + 0x20]
0x0001080a      488d9c24e000.  lea rbx, [rsp + 0xe0]
0x00010812      48c78424e800.  mov qword [rsp + 0xe8], 0
0x0001081e      4c89ac24f000.  mov qword [rsp + 0xf0], r13
0x00010826      4889de         mov rsi, rbx
0x00010829      48c784241001.  mov qword [rsp + 0x110], 0
0x00010835      0f2984240001.  movaps xmmword [rsp + 0x100], xmm0
0x0001083d      48898424f800.  mov qword [rsp + 0xf8], rax
0x00010845      e886eaffff     call sym.sift_states_backward
0x0001084a      488bbc241001.  mov rdi, qword [rsp + 0x110]
0x00010852      89442408       mov dword [rsp + 8], eax
0x00010856      e87511ffff     call sym.imp.free
0x0001085b      8b442408       mov eax, dword [rsp + 8]
0x0001085f      85c0           test eax, eax
0x00010861      0f8541040000   jne 0x10ca8
0x00010867      49833c2400     cmp qword [r12], 0
0x0001086c      0f84c1fcffff   je 0x10533
0x00010872      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0001087a      e85111ffff     call sym.imp.free
0x0001087f      488b442420     mov rax, qword [rsp + 0x20]
0x00010884      4c89a424d801.  mov qword [rsp + 0x1d8], r12
0x0001088c      4c89ac24d001.  mov qword [rsp + 0x1d0], r13
0x00010894      48898424c801.  mov qword [rsp + 0x1c8], rax
0x0001089c      4883bc247002.  cmp qword [rsp + 0x270], 0
0x000108a5      0f84b5f8ffff   je 0x10160
0x000108ab      4883bc247002.  cmp qword [rsp + 0x270], 1
0x000108b4      0f841e040000   je 0x10cd8
0x000108ba      488bb424b800.  mov rsi, qword [rsp + 0xb8]
0x000108c2      488b8c247002.  mov rcx, qword [rsp + 0x270]
0x000108ca      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000108d1      48c1e104       shl rcx, 4
0x000108d5      488d4610       lea rax, [rsi + 0x10]
0x000108d9      4801f1         add rcx, rsi
0x000108dc      48895008       mov qword [rax + 8], rdx
0x000108e0      488910         mov qword [rax], rdx
0x000108e3      4883c010       add rax, 0x10
0x000108e7      4839c1         cmp rcx, rax
0x000108ea      75f0           jne 0x108dc
0x000108ec      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x000108f4      488b8424c801.  mov rax, qword [rsp + 0x1c8]
0x000108fc      48894708       mov qword [rdi + 8], rax
0x00010900      488b442448     mov rax, qword [rsp + 0x48]
0x00010905      48c707000000.  mov qword [rdi], 0
0x0001090c      f6403810       test byte [rax + 0x38], 0x10
0x00010910      0f85dd030000   jne 0x10cf3
0x00010916      4883bc247002.  cmp qword [rsp + 0x270], 1
0x0001091f      0f84ce030000   je 0x10cf3
0x00010925      488b442438     mov rax, qword [rsp + 0x38]
0x0001092a      4531c0         xor r8d, r8d
0x0001092d      f680b0000000.  test byte [rax + 0xb0], 1
0x00010934      740f           je 0x10945
0x00010936      4531c0         xor r8d, r8d
0x00010939      4883b8980000.  cmp qword [rax + 0x98], 0
0x00010941      410f9fc0       setg r8b
0x00010945      488b9c24b800.  mov rbx, qword [rsp + 0xb8]
0x0001094d      488b94247002.  mov rdx, qword [rsp + 0x270]
0x00010955      488b3424       mov rsi, qword [rsp]
0x00010959      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0001095e      4889d9         mov rcx, rbx
0x00010961      e8fad3ffff     call sym.set_regs
0x00010966      85c0           test eax, eax
0x00010968      0f85cf020000   jne 0x10c3d
0x0001096e      488b03         mov rax, qword [rbx]
0x00010971      440fb69c24ac.  movzx r11d, byte [rsp + 0x1ac]
0x0001097a      4c8b94245001.  mov r10, qword [rsp + 0x150]
0x00010982      31c9           xor ecx, ecx
0x00010984      4c8b8c243801.  mov r9, qword [rsp + 0x138]
0x0001098c      4c8b84245801.  mov r8, qword [rsp + 0x158]
0x00010994      488bbc24d800.  mov rdi, qword [rsp + 0xd8]
0x0001099c      488b9424b800.  mov rdx, qword [rsp + 0xb8]
0x000109a4      eb03           jmp 0x109a9
0x000109a6      488b02         mov rax, qword [rdx]
0x000109a9      4883f8ff       cmp rax, 0xffffffffffffffff
0x000109ad      741a           je 0x109c9
0x000109af      4584db         test r11b, r11b
0x000109b2      488b7208       mov rsi, qword [rdx + 8]
0x000109b6      0f853e030000   jne 0x10cfa
0x000109bc      4801f8         add rax, rdi
0x000109bf      4801fe         add rsi, rdi
0x000109c2      488902         mov qword [rdx], rax
0x000109c5      48897208       mov qword [rdx + 8], rsi
0x000109c9      4883c101       add rcx, 1
0x000109cd      4883c210       add rdx, 0x10
0x000109d1      483b8c247002.  cmp rcx, qword [rsp + 0x270]
0x000109d9      75cb           jne 0x109a6
0x000109db      4883bc249800.  cmp qword [rsp + 0x98], 0
0x000109e4      7e3f           jle 0x10a25
0x000109e6      488b94249800.  mov rdx, qword [rsp + 0x98]
0x000109ee      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x000109f6      4889c8         mov rax, rcx
0x000109f9      48c1e004       shl rax, 4
0x000109fd      4801ca         add rdx, rcx
0x00010a00      488d440708     lea rax, [rdi + rax + 8]
0x00010a05      48c1e204       shl rdx, 4
0x00010a09      488d741708     lea rsi, [rdi + rdx + 8]
0x00010a0e      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00010a15      488950f8       mov qword [rax - 8], rdx
0x00010a19      488910         mov qword [rax], rdx
0x00010a1c      4883c010       add rax, 0x10
0x00010a20      4839c6         cmp rsi, rax
0x00010a23      75f0           jne 0x10a15
0x00010a25      488b442438     mov rax, qword [rsp + 0x38]
0x00010a2a      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00010a32      4c8b88e00000.  mov r9, qword [rax + 0xe0]
0x00010a39      4d85c9         test r9, r9
0x00010a3c      0f8426f7ffff   je 0x10168
0x00010a42      4c8b9424b800.  mov r10, qword [rsp + 0xb8]
0x00010a4a      4531c0         xor r8d, r8d
0x00010a4d      498d5210       lea rdx, [r10 + 0x10]
0x00010a51      eb36           jmp 0x10a89
0x00010a53      498b44f1f8     mov rax, qword [r9 + rsi*8 - 8]
0x00010a58      4c39c0         cmp rax, r8
0x00010a5b      7425           je 0x10a82
0x00010a5d      4883c001       add rax, 1
0x00010a61      48c1e004       shl rax, 4
0x00010a65      498b0402       mov rax, qword [r10 + rax]
0x00010a69      488902         mov qword [rdx], rax
0x00010a6c      498b44f1f8     mov rax, qword [r9 + rsi*8 - 8]
0x00010a71      4883c001       add rax, 1
0x00010a75      48c1e004       shl rax, 4
0x00010a79      498b440208     mov rax, qword [r10 + rax + 8]
0x00010a7e      48894208       mov qword [rdx + 8], rax
0x00010a82      4883c210       add rdx, 0x10
0x00010a86      4989f0         mov r8, rsi
0x00010a89      498d7001       lea rsi, [r8 + 1]
0x00010a8d      4839ce         cmp rsi, rcx
0x00010a90      75c1           jne 0x10a53
0x00010a92      e9d1f6ffff     jmp 0x10168
0x00010a97      660f1f840000.  nop word [rax + rax]
0x00010aa0      488b3c24       mov rdi, qword [rsp]
0x00010aa4      e8d77fffff     call sym.match_ctx_clean
0x00010aa9      488bbc241802.  mov rdi, qword [rsp + 0x218]
0x00010ab1      e81a0fffff     call sym.imp.free
0x00010ab6      488bbc24f801.  mov rdi, qword [rsp + 0x1f8]
0x00010abe      e80d0fffff     call sym.imp.free
0x00010ac3      e9b8f6ffff     jmp 0x10180
0x00010ac8      488b442438     mov rax, qword [rsp + 0x38]
0x00010acd      f680b0000000.  test byte [rax + 0xb0], 2
0x00010ad4      0f85cfeeffff   jne 0xf9a9
0x00010ada      48c78424d801.  mov qword [rsp + 0x1d8], 0
0x00010ae6      e9faeeffff     jmp 0xf9e5
0x00010aeb      4c89e7         mov rdi, r12
0x00010aee      e8dd0effff     call sym.imp.free
0x00010af3      4889ef         mov rdi, rbp
0x00010af6      e8d50effff     call sym.imp.free
0x00010afb      e940faffff     jmp 0x10540
0x00010b00      48898424d800.  mov qword [rsp + 0xd8], rax
0x00010b08      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00010b10      c744245c0100.  mov dword [rsp + 0x5c], 1
0x00010b18      e94bf6ffff     jmp 0x10168
0x00010b1d      4885c0         test rax, rax
0x00010b20      4989c5         mov r13, rax
0x00010b23      0f85eff1ffff   jne 0xfd18
0x00010b29      e936f3ffff     jmp 0xfe64
0x00010b2e      6690           nop
0x00010b30      4989c5         mov r13, rax
0x00010b33      e9e0f1ffff     jmp 0xfd18
0x00010b38      83f80c         cmp eax, 0xc
0x00010b3b      0f843ffbffff   je 0x10680
0x00010b41      488d0d086500.  lea rcx, obj.__PRETTY_FUNCTION__.7972   ; 0x17050 ; "check_matching"
0x00010b48      488d35315f00.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x16a80 ; "../coreutils-8.31/lib/regexec.c"
0x00010b4f      488d3dde5f00.  lea rdi, str.err____REG_ESPACE          ; 0x16b34 ; "err == REG_ESPACE"
0x00010b56      ba6c040000     mov edx, 0x46c
0x00010b5b      e8f00fffff     call sym.imp.__assert_fail
0x00010b60      41807e6800     cmp byte [r14 + 0x68], 0
0x00010b65      786f           js 0x10bd6
0x00010b67      8b742458       mov esi, dword [rsp + 0x58]
0x00010b6b      488b442408     mov rax, qword [rsp + 8]
0x00010b70      85f6           test esi, esi
0x00010b72      4889442420     mov qword [rsp + 0x20], rax
0x00010b77      0f84f9f2ffff   je 0xfe76
0x00010b7d      48c744243001.  mov qword [rsp + 0x30], 1
0x00010b86      e952f1ffff     jmp 0xfcdd
0x00010b8b      4889df         mov rdi, rbx
0x00010b8e      c744245c0c00.  mov dword [rsp + 0x5c], 0xc             ; [0xc:4]=0
0x00010b96      e9cdf5ffff     jmp 0x10168
0x00010b9b      498d5e10       lea rbx, [r14 + 0x10]
0x00010b9f      498d6e18       lea rbp, [r14 + 0x18]
0x00010ba3      488b3c24       mov rdi, qword [rsp]
0x00010ba7      31c9           xor ecx, ecx
0x00010ba9      4889ea         mov rdx, rbp
0x00010bac      4889de         mov rsi, rbx
0x00010baf      e8cc9cffff     call sym.check_subexp_matching_top.isra.18
0x00010bb4      85c0           test eax, eax
0x00010bb6      898424d00000.  mov dword [rsp + 0xd0], eax
0x00010bbd      7549           jne 0x10c08
0x00010bbf      410fb64668     movzx eax, byte [r14 + 0x68]
0x00010bc4      a840           test al, 0x40                           ; segment.PHDR
0x00010bc6      0f85e4000000   jne 0x10cb0
0x00010bcc      c644241800     mov byte [rsp + 0x18], 0
0x00010bd1      e9edf0ffff     jmp 0xfcc3
0x00010bd6      498b7610       mov rsi, qword [r14 + 0x10]
0x00010bda      488b4c2408     mov rcx, qword [rsp + 8]
0x00010bdf      498d5618       lea rdx, [r14 + 0x18]
0x00010be3      488b3c24       mov rdi, qword [rsp]
0x00010be7      e8e49fffff     call sym.check_halt_state_context.isra.20
0x00010bec      4885c0         test rax, rax
0x00010bef      4889442430     mov qword [rsp + 0x30], rax
0x00010bf4      0f84e3f0ffff   je 0xfcdd
0x00010bfa      e968ffffff     jmp 0x10b67
0x00010bff      4c8b7360       mov r14, qword [rbx + 0x60]
0x00010c03      e918faffff     jmp 0x10620
0x00010c08      4898           cdqe
0x00010c0a      4889442420     mov qword [rsp + 0x20], rax
0x00010c0f      e962f2ffff     jmp 0xfe76
0x00010c14      4c8b742418     mov r14, qword [rsp + 0x18]
0x00010c19      4489f8         mov eax, r15d
0x00010c1c      4c89e7         mov rdi, r12
0x00010c1f      89442408       mov dword [rsp + 8], eax
0x00010c23      e8a80dffff     call sym.imp.free
0x00010c28      4c89f7         mov rdi, r14
0x00010c2b      e8a00dffff     call sym.imp.free
0x00010c30      8b442408       mov eax, dword [rsp + 8]
0x00010c34      83f801         cmp eax, 1
0x00010c37      0f8403f9ffff   je 0x10540
0x00010c3d      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00010c45      8944245c       mov dword [rsp + 0x5c], eax
0x00010c49      e91af5ffff     jmp 0x10168
0x00010c4e      6690           nop
0x00010c50      a804           test al, 4
0x00010c52      0f8436f0ffff   je 0xfc8e
0x00010c58      498b5650       mov rdx, qword [r14 + 0x50]
0x00010c5c      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00010c61      89c1           mov ecx, eax
0x00010c63      4889de         mov rsi, rbx
0x00010c66      e8d592ffff     call sym.re_acquire_state_context
0x00010c6b      4989c6         mov r14, rax
0x00010c6e      e9adf9ffff     jmp 0x10620
0x00010c73      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00010c78      488b4c2408     mov rcx, qword [rsp + 8]
0x00010c7d      4889ea         mov rdx, rbp
0x00010c80      4c89e6         mov rsi, r12
0x00010c83      4c89742420     mov qword [rsp + 0x20], r14
0x00010c88      4c89ff         mov rdi, r15
0x00010c8b      e87097ffff     call sym.merge_state_array
0x00010c90      4889ef         mov rdi, rbp
0x00010c93      89442408       mov dword [rsp + 8], eax
0x00010c97      e8340dffff     call sym.imp.free
0x00010c9c      8b442408       mov eax, dword [rsp + 8]
0x00010ca0      85c0           test eax, eax
0x00010ca2      0f84cafbffff   je 0x10872
0x00010ca8      4531f6         xor r14d, r14d
0x00010cab      e96cffffff     jmp 0x10c1c
0x00010cb0      488b3c24       mov rdi, qword [rsp]
0x00010cb4      4889ea         mov rdx, rbp
0x00010cb7      4889de         mov rsi, rbx
0x00010cba      e831dbffff     call sym.transit_state_bkref.isra.34
0x00010cbf      85c0           test eax, eax
0x00010cc1      898424d00000.  mov dword [rsp + 0xd0], eax
0x00010cc8      0f853affffff   jne 0x10c08
0x00010cce      410fb64668     movzx eax, byte [r14 + 0x68]
0x00010cd3      e9f4feffff     jmp 0x10bcc
0x00010cd8      488bb424b800.  mov rsi, qword [rsp + 0xb8]
0x00010ce0      488b8424c801.  mov rax, qword [rsp + 0x1c8]
0x00010ce8      48c706000000.  mov qword [rsi], 0
0x00010cef      48894608       mov qword [rsi + 8], rax
0x00010cf3      31c0           xor eax, eax
0x00010cf5      e977fcffff     jmp 0x10971
0x00010cfa      4939c2         cmp r10, rax
0x00010cfd      741d           je 0x10d1c
0x00010cff      498b04c1       mov rax, qword [r9 + rax*8]
0x00010d03      4939f2         cmp r10, rsi
0x00010d06      488902         mov qword [rdx], rax
0x00010d09      7409           je 0x10d14
0x00010d0b      498b34f1       mov rsi, qword [r9 + rsi*8]
0x00010d0f      e9a8fcffff     jmp 0x109bc
0x00010d14      4c89c6         mov rsi, r8
0x00010d17      e9a0fcffff     jmp 0x109bc
0x00010d1c      4c89c0         mov rax, r8
0x00010d1f      ebe2           jmp 0x10d03
0x00010d21      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x00010d29      e9baeeffff     jmp 0xfbe8
0x00010d2e      488984246801.  mov qword [rsp + 0x168], rax
0x00010d36      e929f1ffff     jmp 0xfe64
0x00010d3b      e8900dffff     call sym.imp.__stack_chk_fail
;-- update_cur_sifted_state:
0x00010d40      4157           push r15
0x00010d42      4156           push r14
0x00010d44      4889f8         mov rax, rdi
0x00010d47      4155           push r13
0x00010d49      4154           push r12
0x00010d4b      4989f5         mov r13, rsi
0x00010d4e      55             push rbp
0x00010d4f      53             push rbx
0x00010d50      4889d5         mov rbp, rdx
0x00010d53      4889cb         mov rbx, rcx
0x00010d56      488d0cd50000.  lea rcx, [rdx*8]
0x00010d5e      4881eca80000.  sub rsp, 0xa8
0x00010d65      4c8ba0980000.  mov r12, qword [rax + 0x98]
0x00010d6c      488b80b80000.  mov rax, qword [rax + 0xb8]
0x00010d73      48897c2408     mov qword [rsp + 8], rdi
0x00010d78      48894c2418     mov qword [rsp + 0x18], rcx
0x00010d7d      64488b3c2528.  mov rdi, qword fs:[0x28]
0x00010d86      4889bc249800.  mov qword [rsp + 0x98], rdi
0x00010d8e      31ff           xor edi, edi
0x00010d90      488b14d0       mov rdx, qword [rax + rdx*8]
0x00010d94      c744245c0000.  mov dword [rsp + 0x5c], 0
0x00010d9c      488b4b08       mov rcx, qword [rbx + 8]
0x00010da0      4885d2         test rdx, rdx
0x00010da3      0f844f020000   je 0x10ff8
0x00010da9      488d7a08       lea rdi, [rdx + 8]
0x00010dad      4885c9         test rcx, rcx
0x00010db0      48897c2410     mov qword [rsp + 0x10], rdi
0x00010db5      7551           jne 0x10e08
0x00010db7      488b16         mov rdx, qword [rsi]
0x00010dba      48c704ea0000.  mov qword [rdx + rbp*8], 0
0x00010dc2      488b14e8       mov rdx, qword [rax + rbp*8]
0x00010dc6      31c0           xor eax, eax
0x00010dc8      f6426840       test byte [rdx + 0x68], 0x40
0x00010dcc      0f85dd000000   jne 0x10eaf
0x00010dd2      660f1f440000   nop word [rax + rax]
0x00010dd8      488bbc249800.  mov rdi, qword [rsp + 0x98]
0x00010de0      6448333c2528.  xor rdi, qword fs:[0x28]
0x00010de9      0f859c070000   jne 0x1158b
0x00010def      4881c4a80000.  add rsp, 0xa8
0x00010df6      5b             pop rbx
0x00010df7      5d             pop rbp
0x00010df8      415c           pop r12
0x00010dfa      415d           pop r13
0x00010dfc      415e           pop r14
0x00010dfe      415f           pop r15
0x00010e00      c3             ret
0x00010e01      0f1f80000000.  nop dword [rax]
0x00010e08      488d7c2460     lea rdi, [rsp + 0x60]
0x00010e0d      4889da         mov rdx, rbx
0x00010e10      4c89e6         mov rsi, r12
0x00010e13      c74424600000.  mov dword [rsp + 0x60], 0
0x00010e1b      e8e093ffff     call sym.re_acquire_state
0x00010e20      4889c2         mov rdx, rax
0x00010e23      8b442460       mov eax, dword [rsp + 0x60]
0x00010e27      85c0           test eax, eax
0x00010e29      75ad           jne 0x10dd8
0x00010e2b      4c8b7a38       mov r15, qword [rdx + 0x38]
0x00010e2f      4c8d7238       lea r14, [rdx + 0x38]
0x00010e33      4d85ff         test r15, r15
0x00010e36      0f8404020000   je 0x11040
0x00010e3c      488b742410     mov rsi, qword [rsp + 0x10]
0x00010e41      4c89f2         mov rdx, r14
0x00010e44      4889df         mov rdi, rbx
0x00010e47      e8b488ffff     call sym.re_node_set_add_intersect
0x00010e4c      85c0           test eax, eax
0x00010e4e      8944245c       mov dword [rsp + 0x5c], eax
0x00010e52      7584           jne 0x10dd8
0x00010e54      49837d2800     cmp qword [r13 + 0x28], 0
0x00010e59      0f8571020000   jne 0x110d0
0x00010e5f      4c8b742418     mov r14, qword [rsp + 0x18]
0x00010e64      4d037500       add r14, qword [r13]
0x00010e68      488d7c245c     lea rdi, [rsp + 0x5c]
0x00010e6d      4889da         mov rdx, rbx
0x00010e70      4c89e6         mov rsi, r12
0x00010e73      e88893ffff     call sym.re_acquire_state
0x00010e78      498906         mov qword [r14], rax
0x00010e7b      8b44245c       mov eax, dword [rsp + 0x5c]
0x00010e7f      85c0           test eax, eax
0x00010e81      0f8551ffffff   jne 0x10dd8
0x00010e87      48837c241000   cmp qword [rsp + 0x10], 0
0x00010e8d      0f8445ffffff   je 0x10dd8
0x00010e93      488b442408     mov rax, qword [rsp + 8]
0x00010e98      488b80b80000.  mov rax, qword [rax + 0xb8]
0x00010e9f      488b14e8       mov rdx, qword [rax + rbp*8]
0x00010ea3      31c0           xor eax, eax
0x00010ea5      f6426840       test byte [rdx + 0x68], 0x40
0x00010ea9      0f8429ffffff   je 0x10dd8
0x00010eaf      488b442408     mov rax, qword [rsp + 8]
0x00010eb4      31db           xor ebx, ebx
0x00010eb6      488bb0c80000.  mov rsi, qword [rax + 0xc8]
0x00010ebd      4889f2         mov rdx, rsi
0x00010ec0      4839d3         cmp rbx, rdx
0x00010ec3      7d5e           jge 0x10f23
0x00010ec5      488d0413       lea rax, [rbx + rdx]
0x00010ec9      4889c1         mov rcx, rax
0x00010ecc      48c1e93f       shr rcx, 0x3f
0x00010ed0      4801c1         add rcx, rax
0x00010ed3      488b442408     mov rax, qword [rsp + 8]
0x00010ed8      48d1f9         sar rcx, 1
0x00010edb      488bb8d80000.  mov rdi, qword [rax + 0xd8]
0x00010ee2      488d0489       lea rax, [rcx + rcx*4]
0x00010ee6      483b6cc708     cmp rbp, qword [rdi + rax*8 + 8]
0x00010eeb      7e31           jle 0x10f1e
0x00010eed      e935010000     jmp 0x11027
0x00010ef2      660f1f440000   nop word [rax + rax]
0x00010ef8      488d140b       lea rdx, [rbx + rcx]
0x00010efc      4889d0         mov rax, rdx
0x00010eff      48c1e83f       shr rax, 0x3f
0x00010f03      4801d0         add rax, rdx
0x00010f06      48d1f8         sar rax, 1
0x00010f09      488d1480       lea rdx, [rax + rax*4]
0x00010f0d      4989c0         mov r8, rax
0x00010f10      483b6cd708     cmp rbp, qword [rdi + rdx*8 + 8]
0x00010f15      0f8f15010000   jg 0x11030
0x00010f1b      4889c1         mov rcx, rax
0x00010f1e      4839cb         cmp rbx, rcx
0x00010f21      7cd5           jl 0x10ef8
0x00010f23      4839de         cmp rsi, rbx
0x00010f26      0f8ef4000000   jle 0x11020
0x00010f2c      488d049b       lea rax, [rbx + rbx*4]
0x00010f30      488d34c50000.  lea rsi, [rax*8]
0x00010f38      488b442408     mov rax, qword [rsp + 8]
0x00010f3d      4889742440     mov qword [rsp + 0x40], rsi
0x00010f42      488b80d80000.  mov rax, qword [rax + 0xd8]
0x00010f49      483b6c3008     cmp rbp, qword [rax + rsi + 8]
0x00010f4e      0f85cc000000   jne 0x11020
0x00010f54      4883fbff       cmp rbx, 0xffffffffffffffff
0x00010f58      0f84c2000000   je 0x11020
0x00010f5e      488b442408     mov rax, qword [rsp + 8]
0x00010f63      48c744246000.  mov qword [rsp + 0x60], 0
0x00010f6c      4c8ba0980000.  mov r12, qword [rax + 0x98]
0x00010f73      488b442410     mov rax, qword [rsp + 0x10]
0x00010f78      4883780800     cmp qword [rax + 8], 0
0x00010f7d      0f8e9d000000   jle 0x11020
0x00010f83      488d442460     lea rax, [rsp + 0x60]
0x00010f88      48c744242000.  mov qword [rsp + 0x20], 0
0x00010f91      48895c2448     mov qword [rsp + 0x48], rbx
0x00010f96      4d89ef         mov r15, r13
0x00010f99      4889442438     mov qword [rsp + 0x38], rax
0x00010f9e      eb22           jmp 0x10fc2
0x00010fa0      3c04           cmp al, 4
0x00010fa2      0f8480030000   je 0x11328
0x00010fa8      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00010fad      488344242001   add qword [rsp + 0x20], 1
0x00010fb3      488b442420     mov rax, qword [rsp + 0x20]
0x00010fb8      483b4108       cmp rax, qword [rcx + 8]
0x00010fbc      0f8db9050000   jge 0x1157b
0x00010fc2      488b442410     mov rax, qword [rsp + 0x10]
0x00010fc7      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00010fcc      488b4010       mov rax, qword [rax + 0x10]
0x00010fd0      4c8b34f8       mov r14, qword [rax + rdi*8]
0x00010fd4      4c89f0         mov rax, r14
0x00010fd7      48c1e004       shl rax, 4
0x00010fdb      49030424       add rax, qword [r12]
0x00010fdf      4d3b7710       cmp r14, qword [r15 + 0x10]
0x00010fe3      0fb64008       movzx eax, byte [rax + 8]
0x00010fe7      75b7           jne 0x10fa0
0x00010fe9      493b6f18       cmp rbp, qword [r15 + 0x18]
0x00010fed      75b1           jne 0x10fa0
0x00010fef      ebb7           jmp 0x10fa8
0x00010ff1      0f1f80000000.  nop dword [rax]
0x00010ff8      4c8d34ed0000.  lea r14, [rbp*8]
0x00011000      4c0336         add r14, qword [rsi]
0x00011003      4885c9         test rcx, rcx
0x00011006      0f85b4000000   jne 0x110c0
0x0001100c      49c706000000.  mov qword [r14], 0
0x00011013      31c0           xor eax, eax
0x00011015      e9befdffff     jmp 0x10dd8
0x0001101a      660f1f440000   nop word [rax + rax]
0x00011020      31c0           xor eax, eax
0x00011022      e9b1fdffff     jmp 0x10dd8
0x00011027      4989c8         mov r8, rcx
0x0001102a      4889d1         mov rcx, rdx
0x0001102d      0f1f00         nop dword [rax]
0x00011030      498d5801       lea rbx, [r8 + 1]
0x00011034      4889ca         mov rdx, rcx
0x00011037      e984feffff     jmp 0x10ec0
0x0001103c      0f1f4000       nop dword [rax]
0x00011040      488b7b08       mov rdi, qword [rbx + 8]
0x00011044      48c742400000.  mov qword [rdx + 0x40], 0
0x0001104c      4889542420     mov qword [rsp + 0x20], rdx
0x00011051      48897a38       mov qword [rdx + 0x38], rdi
0x00011055      48c1e703       shl rdi, 3
0x00011059      e8c20bffff     call sym.imp.malloc
0x0001105e      488b542420     mov rdx, qword [rsp + 0x20]
0x00011063      4885c0         test rax, rax
0x00011066      48894248       mov qword [rdx + 0x48], rax
0x0001106a      7447           je 0x110b3
0x0001106c      48837b0800     cmp qword [rbx + 8], 0
0x00011071      c74424600000.  mov dword [rsp + 0x60], 0
0x00011079      7f13           jg 0x1108e
0x0001107b      e9bcfdffff     jmp 0x10e3c
0x00011080      4983c701       add r15, 1
0x00011084      4c3b7b08       cmp r15, qword [rbx + 8]
0x00011088      0f8daefdffff   jge 0x10e3c
0x0001108e      488b4310       mov rax, qword [rbx + 0x10]
0x00011092      4c89f7         mov rdi, r14
0x00011095      4a8b04f8       mov rax, qword [rax + r15*8]
0x00011099      488d1440       lea rdx, [rax + rax*2]
0x0001109d      498b442438     mov rax, qword [r12 + 0x38]
0x000110a2      488d34d0       lea rsi, [rax + rdx*8]
0x000110a6      e86580ffff     call sym.re_node_set_merge
0x000110ab      85c0           test eax, eax
0x000110ad      89442460       mov dword [rsp + 0x60], eax
0x000110b1      74cd           je 0x11080
0x000110b3      b80c000000     mov eax, 0xc
0x000110b8      e91bfdffff     jmp 0x10dd8
0x000110bd      0f1f00         nop dword [rax]
0x000110c0      48c744241000.  mov qword [rsp + 0x10], 0
0x000110c9      e99afdffff     jmp 0x10e68
0x000110ce      6690           nop
0x000110d0      488b442408     mov rax, qword [rsp + 8]
0x000110d5      488b80d80000.  mov rax, qword [rax + 0xd8]
0x000110dc      4889442420     mov qword [rsp + 0x20], rax
0x000110e1      0f8ed4000000   jle 0x111bb
0x000110e7      4531ff         xor r15d, r15d
0x000110ea      660f1f440000   nop word [rax + rax]
0x000110f0      498b4530       mov rax, qword [r13 + 0x30]
0x000110f4      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000110f9      4a8b04f8       mov rax, qword [rax + r15*8]
0x000110fd      488d0480       lea rax, [rax + rax*4]
0x00011101      488d14c7       lea rdx, [rdi + rax*8]
0x00011105      483b6a10       cmp rbp, qword [rdx + 0x10]
0x00011109      0f8e9e000000   jle 0x111ad
0x0001110f      483b6a08       cmp rbp, qword [rdx + 8]
0x00011113      0f8f94000000   jg 0x111ad
0x00011119      488b0a         mov rcx, qword [rdx]
0x0001111c      498b0424       mov rax, qword [r12]
0x00011120      488b7308       mov rsi, qword [rbx + 8]
0x00011124      48c1e104       shl rcx, 4
0x00011128      483b6a18       cmp rbp, qword [rdx + 0x18]
0x0001112c      4c8b0408       mov r8, qword [rax + rcx]
0x00011130      0f849a000000   je 0x111d0
0x00011136      4531f6         xor r14d, r14d
0x00011139      4885f6         test rsi, rsi
0x0001113c      7e6f           jle 0x111ad
0x0001113e      48896c2428     mov qword [rsp + 0x28], rbp
0x00011143      4c89c5         mov rbp, r8
0x00011146      eb16           jmp 0x1115e
0x00011148      0f1f84000000.  nop dword [rax + rax]
0x00011150      4983c601       add r14, 1
0x00011154      4c3b7308       cmp r14, qword [rbx + 8]
0x00011158      7d4e           jge 0x111a8
0x0001115a      498b0424       mov rax, qword [r12]
0x0001115e      488b5310       mov rdx, qword [rbx + 0x10]
0x00011162      4a8b34f2       mov rsi, qword [rdx + r14*8]
0x00011166      4889f2         mov rdx, rsi
0x00011169      48c1e204       shl rdx, 4
0x0001116d      4801d0         add rax, rdx
0x00011170      0fb65008       movzx edx, byte [rax + 8]
0x00011174      83ea08         sub edx, 8
0x00011177      83fa01         cmp edx, 1
0x0001117a      77d4           ja 0x11150
0x0001117c      483b28         cmp rbp, qword [rax]
0x0001117f      75cf           jne 0x11150
0x00011181      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00011186      4889da         mov rdx, rbx
0x00011189      4c89e7         mov rdi, r12
0x0001118c      e8afa2ffff     call sym.sub_epsilon_src_nodes
0x00011191      85c0           test eax, eax
0x00011193      0f853ffcffff   jne 0x10dd8
0x00011199      4983c601       add r14, 1
0x0001119d      4c3b7308       cmp r14, qword [rbx + 8]
0x000111a1      7cb7           jl 0x1115a
0x000111a3      0f1f440000     nop dword [rax + rax]
0x000111a8      488b6c2428     mov rbp, qword [rsp + 0x28]
0x000111ad      4983c701       add r15, 1
0x000111b1      4d3b7d28       cmp r15, qword [r13 + 0x28]
0x000111b5      0f8c35ffffff   jl 0x110f0
0x000111bb      c744245c0000.  mov dword [rsp + 0x5c], 0
0x000111c3      e997fcffff     jmp 0x10e5f
0x000111c8      0f1f84000000.  nop dword [rax + rax]
0x000111d0      4885f6         test rsi, rsi
0x000111d3      7ed8           jle 0x111ad
0x000111d5      4c8b5310       mov r10, qword [rbx + 0x10]
0x000111d9      49c7c1ffffff.  mov r9, 0xffffffffffffffff
0x000111e0      4d8d1cf2       lea r11, [r10 + rsi*8]
0x000111e4      4c89d1         mov rcx, r10
0x000111e7      4c89ce         mov rsi, r9
0x000111ea      eb1a           jmp 0x11206
0x000111ec      0f1f4000       nop dword [rax]
0x000111f0      4183fe09       cmp r14d, 9
0x000111f4      7507           jne 0x111fd
0x000111f6      4c3b02         cmp r8, qword [rdx]
0x000111f9      4c0f44cf       cmove r9, rdi
0x000111fd      4883c108       add rcx, 8
0x00011201      4939cb         cmp r11, rcx
0x00011204      7428           je 0x1122e
0x00011206      488b39         mov rdi, qword [rcx]
0x00011209      4889fa         mov rdx, rdi
0x0001120c      48c1e204       shl rdx, 4
0x00011210      4801c2         add rdx, rax
0x00011213      440fb67208     movzx r14d, byte [rdx + 8]
0x00011218      4183fe08       cmp r14d, 8
0x0001121c      75d2           jne 0x111f0
0x0001121e      4c3b02         cmp r8, qword [rdx]
0x00011221      480f44f7       cmove rsi, rdi
0x00011225      4883c108       add rcx, 8
0x00011229      4939cb         cmp r11, rcx
0x0001122c      75d8           jne 0x11206
0x0001122e      4885f6         test rsi, rsi
0x00011231      4d89ce         mov r14, r9
0x00011234      4c894c2428     mov qword [rsp + 0x28], r9
0x00011239      0f88c1000000   js 0x11300
0x0001123f      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00011244      4889da         mov rdx, rbx
0x00011247      4c89e7         mov rdi, r12
0x0001124a      e8f1a1ffff     call sym.sub_epsilon_src_nodes
0x0001124f      85c0           test eax, eax
0x00011251      0f8581fbffff   jne 0x10dd8
0x00011257      4d85f6         test r14, r14
0x0001125a      0f884dffffff   js 0x111ad
0x00011260      48837b0800     cmp qword [rbx + 8], 0
0x00011265      0f8e42ffffff   jle 0x111ad
0x0001126b      4c8b5310       mov r10, qword [rbx + 0x10]
0x0001126f      4531f6         xor r14d, r14d
0x00011272      48896c2430     mov qword [rsp + 0x30], rbp
0x00011277      4c89f5         mov rbp, r14
0x0001127a      4c8b742428     mov r14, qword [rsp + 0x28]
0x0001127f      eb19           jmp 0x1129a
0x00011281      0f1f80000000.  nop dword [rax]
0x00011288      4883c501       add rbp, 1
0x0001128c      483b6b08       cmp rbp, qword [rbx + 8]
0x00011290      0f8d82000000   jge 0x11318
0x00011296      4c8b5310       mov r10, qword [rbx + 0x10]
0x0001129a      4d8b14ea       mov r10, qword [r10 + rbp*8]
0x0001129e      498b442438     mov rax, qword [r12 + 0x38]
0x000112a3      4c89f2         mov rdx, r14
0x000112a6      4f8d0c52       lea r9, [r10 + r10*2]
0x000112aa      49c1e103       shl r9, 3
0x000112ae      4c01c8         add rax, r9
0x000112b1      488b7808       mov rdi, qword [rax + 8]
0x000112b5      488d7010       lea rsi, [rax + 0x10]
0x000112b9      e83279ffff     call sym.re_node_set_contains.isra.3
0x000112be      4885c0         test rax, rax
0x000112c1      75c5           jne 0x11288
0x000112c3      4d034c2430     add r9, qword [r12 + 0x30]
0x000112c8      498b7908       mov rdi, qword [r9 + 8]
0x000112cc      498d7110       lea rsi, [r9 + 0x10]
0x000112d0      e81b79ffff     call sym.re_node_set_contains.isra.3
0x000112d5      4885c0         test rax, rax
0x000112d8      75ae           jne 0x11288
0x000112da      488b4c2410     mov rcx, qword [rsp + 0x10]
0x000112df      4889da         mov rdx, rbx
0x000112e2      4c89d6         mov rsi, r10
0x000112e5      4c89e7         mov rdi, r12
0x000112e8      e853a1ffff     call sym.sub_epsilon_src_nodes
0x000112ed      85c0           test eax, eax
0x000112ef      0f85e3faffff   jne 0x10dd8
0x000112f5      4883ed01       sub rbp, 1
0x000112f9      eb8d           jmp 0x11288
0x000112fb      0f1f440000     nop dword [rax + rax]
0x00011300      48837c242800   cmp qword [rsp + 0x28], 0
0x00011306      0f8963ffffff   jns 0x1126f
0x0001130c      e99cfeffff     jmp 0x111ad
0x00011311      0f1f80000000.  nop dword [rax]
0x00011318      488b6c2430     mov rbp, qword [rsp + 0x30]
0x0001131d      e98bfeffff     jmp 0x111ad
0x00011322      660f1f440000   nop word [rax + rax]
0x00011328      488b442408     mov rax, qword [rsp + 8]
0x0001132d      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x00011332      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00011337      4c03a8d80000.  add r13, qword [rax + 0xd8]
0x0001133e      4b8d0476       lea rax, [r14 + r14*2]
0x00011342      48c1e003       shl rax, 3
0x00011346      4889442430     mov qword [rsp + 0x30], rax
0x0001134b      4a8d04f50000.  lea rax, [r14*8]
0x00011353      4889442428     mov qword [rsp + 0x28], rax
0x00011358      4c89f8         mov rax, r15
0x0001135b      4d89ef         mov r15, r13
0x0001135e      4989dd         mov r13, rbx
0x00011361      4889c3         mov rbx, rax
0x00011364      e965010000     jmp 0x114ce
0x00011369      0f1f80000000.  nop dword [rax]
0x00011370      498b4718       mov rax, qword [r15 + 0x18]
0x00011374      492b4710       sub rax, qword [r15 + 0x10]
0x00011378      4885c0         test rax, rax
0x0001137b      4c8d4c0500     lea r9, [rbp + rax]
0x00011380      0f845a010000   je 0x114e0
0x00011386      498b442418     mov rax, qword [r12 + 0x18]
0x0001138b      488b742428     mov rsi, qword [rsp + 0x28]
0x00011390      4c8b1430       mov r10, qword [rax + rsi]
0x00011394      4c3b4b18       cmp r9, qword [rbx + 0x18]
0x00011398      0f8f39010000   jg 0x114d7
0x0001139e      488b03         mov rax, qword [rbx]
0x000113a1      4a8b04c8       mov rax, qword [rax + r9*8]
0x000113a5      4885c0         test rax, rax
0x000113a8      0f8429010000   je 0x114d7
0x000113ae      488b7810       mov rdi, qword [rax + 0x10]
0x000113b2      488d7018       lea rsi, [rax + 0x18]
0x000113b6      4c89d2         mov rdx, r10
0x000113b9      e83278ffff     call sym.re_node_set_contains.isra.3
0x000113be      4885c0         test rax, rax
0x000113c1      0f8410010000   je 0x114d7
0x000113c7      4883ec08       sub rsp, 8
0x000113cb      488d5330       lea rdx, [rbx + 0x30]
0x000113cf      488d7328       lea rsi, [rbx + 0x28]
0x000113d3      4151           push r9
0x000113d5      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000113da      4c89f1         mov rcx, r14
0x000113dd      4d89d1         mov r9, r10
0x000113e0      4989e8         mov r8, rbp
0x000113e3      e8b87affff     call sym.check_dst_limits.isra.13
0x000113e8      84c0           test al, al
0x000113ea      5a             pop rdx
0x000113eb      59             pop rcx
0x000113ec      0f85e5000000   jne 0x114d7
0x000113f2      48837c246000   cmp qword [rsp + 0x60], 0
0x000113f8      0f840a010000   je 0x11508
0x000113fe      488b442438     mov rax, qword [rsp + 0x38]
0x00011403      4c89ee         mov rsi, r13
0x00011406      4c89742470     mov qword [rsp + 0x70], r14
0x0001140b      48896c2478     mov qword [rsp + 0x78], rbp
0x00011410      488d7820       lea rdi, [rax + 0x20]
0x00011414      e89762ffff     call sym.re_node_set_insert
0x00011419      84c0           test al, al
0x0001141b      0f8453010000   je 0x11574
0x00011421      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00011426      488b442460     mov rax, qword [rsp + 0x60]
0x0001142b      488b742438     mov rsi, qword [rsp + 0x38]
0x00011430      4c8b3c38       mov r15, qword [rax + rdi]
0x00011434      488b7c2408     mov rdi, qword [rsp + 8]
0x00011439      e892deffff     call sym.sift_states_backward
0x0001143e      85c0           test eax, eax
0x00011440      0f8508010000   jne 0x1154e
0x00011446      488b7308       mov rsi, qword [rbx + 8]
0x0001144a      488b542460     mov rdx, qword [rsp + 0x60]
0x0001144f      4885f6         test rsi, rsi
0x00011452      7419           je 0x1146d
0x00011454      488d4d01       lea rcx, [rbp + 1]
0x00011458      4c89e7         mov rdi, r12
0x0001145b      e8a08fffff     call sym.merge_state_array
0x00011460      85c0           test eax, eax
0x00011462      0f85e6000000   jne 0x1154e
0x00011468      488b542460     mov rdx, qword [rsp + 0x60]
0x0001146d      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00011472      488b442418     mov rax, qword [rsp + 0x18]
0x00011477      488bbc248800.  mov rdi, qword [rsp + 0x88]
0x0001147f      4d8d4b30       lea r9, [r11 + 0x30]
0x00011483      4c893c02       mov qword [rdx + rax], r15
0x00011487      4c89ea         mov rdx, r13
0x0001148a      4c89ce         mov rsi, r9
0x0001148d      e85e77ffff     call sym.re_node_set_contains.isra.3
0x00011492      4883e801       sub rax, 1
0x00011496      4889c2         mov rdx, rax
0x00011499      780c           js 0x114a7
0x0001149b      498d7b28       lea rdi, [r11 + 0x28]
0x0001149f      4c89ce         mov rsi, r9
0x000114a2      e8c978ffff     call sym.re_node_set_remove_at.isra.4.part.5
0x000114a7      488b4c2408     mov rcx, qword [rsp + 8]
0x000114ac      4b8d44ad00     lea rax, [r13 + r13*4]
0x000114b1      488b91d80000.  mov rdx, qword [rcx + 0xd8]
0x000114b8      488d04c2       lea rax, [rdx + rax*8]
0x000114bc      0f1f4000       nop dword [rax]
0x000114c0      4983c501       add r13, 1
0x000114c4      80782000       cmp byte [rax + 0x20], 0
0x000114c8      4c8d7828       lea r15, [rax + 0x28]
0x000114cc      7432           je 0x11500
0x000114ce      4d3b37         cmp r14, qword [r15]
0x000114d1      0f8499feffff   je 0x11370
0x000114d7      4c89f8         mov rax, r15
0x000114da      ebe4           jmp 0x114c0
0x000114dc      0f1f4000       nop dword [rax]
0x000114e0      498b442428     mov rax, qword [r12 + 0x28]
0x000114e5      488b7c2430     mov rdi, qword [rsp + 0x30]
0x000114ea      488b443810     mov rax, qword [rax + rdi + 0x10]
0x000114ef      4c8b10         mov r10, qword [rax]
0x000114f2      e99dfeffff     jmp 0x11394
0x000114f7      660f1f840000.  nop word [rax + rax]
0x00011500      4989df         mov r15, rbx
0x00011503      e9a0faffff     jmp 0x10fa8
0x00011508      488b4330       mov rax, qword [rbx + 0x30]
0x0001150c      488d7320       lea rsi, [rbx + 0x20]
0x00011510      660f6f03       movdqa xmm0, xmmword [rbx]
0x00011514      488984249000.  mov qword [rsp + 0x90], rax
0x0001151c      488b442438     mov rax, qword [rsp + 0x38]
0x00011521      0f29442460     movaps xmmword [rsp + 0x60], xmm0
0x00011526      488d7820       lea rdi, [rax + 0x20]
0x0001152a      660f6f4310     movdqa xmm0, xmmword [rbx + 0x10]
0x0001152f      0f29442470     movaps xmmword [rsp + 0x70], xmm0
0x00011534      660f6f4320     movdqa xmm0, xmmword [rbx + 0x20]
0x00011539      0f2984248000.  movaps xmmword [rsp + 0x80], xmm0
0x00011541      e80a88ffff     call sym.re_node_set_init_copy
0x00011546      85c0           test eax, eax
0x00011548      0f84b0feffff   je 0x113fe
0x0001154e      48837c246000   cmp qword [rsp + 0x60], 0
0x00011554      0f847ef8ffff   je 0x10dd8
0x0001155a      488bbc249000.  mov rdi, qword [rsp + 0x90]
0x00011562      89442408       mov dword [rsp + 8], eax
0x00011566      e86504ffff     call sym.imp.free
0x0001156b      8b442408       mov eax, dword [rsp + 8]
0x0001156f      e964f8ffff     jmp 0x10dd8
0x00011574      b80c000000     mov eax, 0xc
0x00011579      ebd3           jmp 0x1154e
0x0001157b      48837c246000   cmp qword [rsp + 0x60], 0
0x00011581      0f8499faffff   je 0x11020
0x00011587      31c0           xor eax, eax
0x00011589      ebcf           jmp 0x1155a
0x0001158b      e84005ffff     call sym.imp.__stack_chk_fail
;-- parse_bracket_element.constprop.37:
0x00011590      4156           push r14
0x00011592      4155           push r13
0x00011594      4989f2         mov r10, rsi
0x00011597      4154           push r12
0x00011599      55             push rbp
0x0001159a      4c63d9         movsxd r11, ecx
0x0001159d      53             push rbx
0x0001159e      4889d5         mov rbp, rdx
0x000115a1      4889fb         mov rbx, rdi
0x000115a4      4883ec20       sub rsp, 0x20
0x000115a8      4c8b6648       mov r12, qword [rsi + 0x48]
0x000115ac      64488b042528.  mov rax, qword fs:[0x28]
0x000115b5      4889442418     mov qword [rsp + 0x18], rax
0x000115ba      31c0           xor eax, eax
0x000115bc      83be90000000.  cmp dword [rsi + 0x90], 1
0x000115c3      7453           je 0x11618
0x000115c5      4c89e6         mov rsi, r12
0x000115c8      4c89d7         mov rdi, r10
0x000115cb      e87075ffff     call sym.re_string_char_size_at.part.0
0x000115d0      83f801         cmp eax, 1
0x000115d3      7e43           jle 0x11618
0x000115d5      498b5210       mov rdx, qword [r10 + 0x10]
0x000115d9      4898           cdqe
0x000115db      c70301000000   mov dword [rbx], 1
0x000115e1      4c01e0         add rax, r12
0x000115e4      428b14a2       mov edx, dword [rdx + r12*4]
0x000115e8      895308         mov dword [rbx + 8], edx
0x000115eb      49894248       mov qword [r10 + 0x48], rax
0x000115ef      31c0           xor eax, eax
0x000115f1      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000115f6      6448330c2528.  xor rcx, qword fs:[0x28]
0x000115ff      0f85e3010000   jne 0x117e8
0x00011605      4883c420       add rsp, 0x20
0x00011609      5b             pop rbx
0x0001160a      5d             pop rbp
0x0001160b      415c           pop r12
0x0001160d      415d           pop r13
0x0001160f      415e           pop r14
0x00011611      c3             ret
0x00011612      660f1f440000   nop word [rax + rax]
0x00011618      0fb64508       movzx eax, byte [rbp + 8]
0x0001161c      4d01e3         add r11, r12
0x0001161f      4d895a48       mov qword [r10 + 0x48], r11
0x00011623      89c2           mov edx, eax
0x00011625      83e2fb         and edx, 0xfffffffb                     ; 4294967291
0x00011628      80fa1a         cmp dl, 0x1a
0x0001162b      7423           je 0x11650
0x0001162d      3c1c           cmp al, 0x1c
0x0001162f      741f           je 0x11650
0x00011631      3c16           cmp al, 0x16
0x00011633      7509           jne 0x1163e
0x00011635      4584c9         test r9b, r9b
0x00011638      0f8444010000   je 0x11782
0x0001163e      0fb64500       movzx eax, byte [rbp]
0x00011642      c70300000000   mov dword [rbx], 0
0x00011648      884308         mov byte [rbx + 8], al
0x0001164b      31c0           xor eax, eax
0x0001164d      eba2           jmp 0x115f1
0x0001164f      90             nop
0x00011650      4d8b6268       mov r12, qword [r10 + 0x68]
0x00011654      4d39e3         cmp r11, r12
0x00011657      0f8d1b010000   jge 0x11778
0x0001165d      440fb66d00     movzx r13d, byte [rbp]
0x00011662      4531c0         xor r8d, r8d
0x00011665      eb2b           jmp 0x11692
0x00011667      660f1f840000.  nop word [rax + rax]
0x00011670      488b4308       mov rax, qword [rbx + 8]
0x00011674      46880c00       mov byte [rax + r8], r9b
0x00011678      4983c001       add r8, 1
0x0001167c      4983f820       cmp r8, 0x20                            ; "@"
0x00011680      0f84f2000000   je 0x11778
0x00011686      0fb64508       movzx eax, byte [rbp + 8]
0x0001168a      4d8b5a48       mov r11, qword [r10 + 0x48]
0x0001168e      4d8b6268       mov r12, qword [r10 + 0x68]
0x00011692      3c1e           cmp al, 0x1e
0x00011694      4d63f0         movsxd r14, r8d
0x00011697      7467           je 0x11700
0x00011699      498b5208       mov rdx, qword [r10 + 8]
0x0001169d      498d4301       lea rax, [r11 + 1]
0x000116a1      49894248       mov qword [r10 + 0x48], rax
0x000116a5      460fb60c1a     movzx r9d, byte [rdx + r11]
0x000116aa      4c39e0         cmp rax, r12
0x000116ad      0f8dc5000000   jge 0x11778
0x000116b3      4538cd         cmp r13b, r9b
0x000116b6      75b8           jne 0x11670
0x000116b8      498b5208       mov rdx, qword [r10 + 8]
0x000116bc      803c025d       cmp byte [rdx + rax], 0x5d
0x000116c0      75ae           jne 0x11670
0x000116c2      4883c001       add rax, 1
0x000116c6      49894248       mov qword [r10 + 0x48], rax
0x000116ca      488b4308       mov rax, qword [rbx + 8]
0x000116ce      42c6043000     mov byte [rax + r14], 0
0x000116d3      0fb64508       movzx eax, byte [rbp + 8]
0x000116d7      3c1c           cmp al, 0x1c
0x000116d9      0f84fc000000   je 0x117db
0x000116df      3c1e           cmp al, 0x1e
0x000116e1      0f84e7000000   je 0x117ce
0x000116e7      3c1a           cmp al, 0x1a
0x000116e9      0f84d2000000   je 0x117c1
0x000116ef      31c0           xor eax, eax
0x000116f1      e9fbfeffff     jmp 0x115f1
0x000116f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00011700      4180ba8b0000.  cmp byte [r10 + 0x8b], 0
0x00011708      748f           je 0x11699
0x0001170a      4180ba8c0000.  cmp byte [r10 + 0x8c], 0
0x00011712      0f8490000000   je 0x117a8
0x00011718      4d3b5a30       cmp r11, qword [r10 + 0x30]
0x0001171c      740f           je 0x1172d
0x0001171e      498b4210       mov rax, qword [r10 + 0x10]
0x00011722      42833c98ff     cmp dword [rax + r11*4], 0xffffffff
0x00011727      0f846cffffff   je 0x11699
0x0001172d      498b4218       mov rax, qword [r10 + 0x18]
0x00011731      4a8b04d8       mov rax, qword [rax + r11*8]
0x00011735      490302         add rax, qword [r10]
0x00011738      49034228       add rax, qword [r10 + 0x28]
0x0001173c      440fb608       movzx r9d, byte [rax]
0x00011740      41f6c180       test r9b, 0x80
0x00011744      0f854fffffff   jne 0x11699
0x0001174a      4183ba900000.  cmp dword [r10 + 0x90], 1
0x00011752      b801000000     mov eax, 1
0x00011757      740d           je 0x11766
0x00011759      4c89de         mov rsi, r11
0x0001175c      4c89d7         mov rdi, r10
0x0001175f      e8dc73ffff     call sym.re_string_char_size_at.part.0
0x00011764      4898           cdqe
0x00011766      4c01d8         add rax, r11
0x00011769      49894248       mov qword [r10 + 0x48], rax
0x0001176d      e938ffffff     jmp 0x116aa
0x00011772      660f1f440000   nop word [rax + rax]
0x00011778      b807000000     mov eax, 7
0x0001177d      e96ffeffff     jmp 0x115f1
0x00011782      4889e7         mov rdi, rsp
0x00011785      4c89c2         mov rdx, r8
0x00011788      4c89d6         mov rsi, r10
0x0001178b      e85059ffff     call sym.peek_token_bracket
0x00011790      807c240815     cmp byte [rsp + 8], 0x15
0x00011795      b80b000000     mov eax, 0xb
0x0001179a      0f849efeffff   je 0x1163e
0x000117a0      e94cfeffff     jmp 0x115f1
0x000117a5      0f1f00         nop dword [rax]
0x000117a8      498d4301       lea rax, [r11 + 1]
0x000117ac      4d031a         add r11, qword [r10]
0x000117af      498b5228       mov rdx, qword [r10 + 0x28]
0x000117b3      49894248       mov qword [r10 + 0x48], rax
0x000117b7      450fb60c13     movzx r9d, byte [r11 + rdx]
0x000117bc      e9e9feffff     jmp 0x116aa
0x000117c1      c70303000000   mov dword [rbx], 3
0x000117c7      31c0           xor eax, eax
0x000117c9      e923feffff     jmp 0x115f1
0x000117ce      c70304000000   mov dword [rbx], 4
0x000117d4      31c0           xor eax, eax
0x000117d6      e916feffff     jmp 0x115f1
0x000117db      c70302000000   mov dword [rbx], 2
0x000117e1      31c0           xor eax, eax
0x000117e3      e909feffff     jmp 0x115f1
0x000117e8      e8e302ffff     call sym.imp.__stack_chk_fail
0x000117ed      0f1f00         nop dword [rax]
;-- peek_token:
0x000117f0      4157           push r15
0x000117f2      4156           push r14
0x000117f4      4155           push r13
0x000117f6      4154           push r12
0x000117f8      55             push rbp
0x000117f9      53             push rbx
0x000117fa      4889fd         mov rbp, rdi
0x000117fd      4883ec38       sub rsp, 0x38
0x00011801      4c8b7648       mov r14, qword [rsi + 0x48]
0x00011805      64488b042528.  mov rax, qword fs:[0x28]
0x0001180e      4889442428     mov qword [rsp + 0x28], rax
0x00011813      31c0           xor eax, eax
0x00011815      4c397668       cmp qword [rsi + 0x68], r14
0x00011819      0f8e91000000   jle 0x118b0
0x0001181f      440fb66f0a     movzx r13d, byte [rdi + 0xa]
0x00011824      4989d7         mov r15, rdx
0x00011827      488b5608       mov rdx, qword [rsi + 8]
0x0001182b      4889f3         mov rbx, rsi
0x0001182e      460fb62432     movzx r12d, byte [rdx + r14]
0x00011833      4183e59f       and r13d, 0xffffff9f                    ; 4294967199
0x00011837      44886f0a       mov byte [rdi + 0xa], r13b
0x0001183b      8b8690000000   mov eax, dword [rsi + 0x90]
0x00011841      448827         mov byte [rdi], r12b
0x00011844      83f801         cmp eax, 1
0x00011847      0f8e93000000   jle 0x118e0
0x0001184d      4c3b7630       cmp r14, qword [rsi + 0x30]
0x00011851      0f8499010000   je 0x119f0
0x00011857      488b4e10       mov rcx, qword [rsi + 0x10]
0x0001185b      428b0cb1       mov ecx, dword [rcx + r14*4]
0x0001185f      83f9ff         cmp ecx, 0xffffffff
0x00011862      0f84d8000000   je 0x11940
0x00011868      4180fc5c       cmp r12b, 0x5c
0x0001186c      0f84ee000000   je 0x11960
0x00011872      c6470801       mov byte [rdi + 8], 1
0x00011876      89cf           mov edi, ecx
0x00011878      4889542408     mov qword [rsp + 8], rdx
0x0001187d      890c24         mov dword [rsp], ecx
0x00011880      e88b03ffff     call sym.imp.iswalnum
0x00011885      8b0c24         mov ecx, dword [rsp]
0x00011888      85c0           test eax, eax
0x0001188a      0f95c0         setne al
0x0001188d      83f95f         cmp ecx, 0x5f
0x00011890      0f94c1         sete cl
0x00011893      09c8           or eax, ecx
0x00011895      c1e006         shl eax, 6
0x00011898      4109c5         or r13d, eax
0x0001189b      44886d0a       mov byte [rbp + 0xa], r13b
0x0001189f      488b542408     mov rdx, qword [rsp + 8]
0x000118a4      eb76           jmp 0x1191c
0x000118a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000118b0      c6470802       mov byte [rdi + 8], 2
0x000118b4      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000118b9      6448333c2528.  xor rdi, qword fs:[0x28]
0x000118c2      0f8520060000   jne 0x11ee8
0x000118c8      4883c438       add rsp, 0x38
0x000118cc      5b             pop rbx
0x000118cd      5d             pop rbp
0x000118ce      415c           pop r12
0x000118d0      415d           pop r13
0x000118d2      415e           pop r14
0x000118d4      415f           pop r15
0x000118d6      c3             ret
0x000118d7      660f1f840000.  nop word [rax + rax]
0x000118e0      4180fc5c       cmp r12b, 0x5c
0x000118e4      747a           je 0x11960
0x000118e6      c6450801       mov byte [rbp + 8], 1
0x000118ea      48891424       mov qword [rsp], rdx
0x000118ee      e8cd04ffff     call sym.imp.__ctype_b_loc
0x000118f3      488b30         mov rsi, qword [rax]
0x000118f6      410fb6cc       movzx ecx, r12b
0x000118fa      0fb7044e       movzx eax, word [rsi + rcx*2]
0x000118fe      66c1e803       shr ax, 3
0x00011902      83e001         and eax, 1
0x00011905      4180fc5f       cmp r12b, 0x5f
0x00011909      0f94c1         sete cl
0x0001190c      09c8           or eax, ecx
0x0001190e      c1e006         shl eax, 6
0x00011911      4109c5         or r13d, eax
0x00011914      44886d0a       mov byte [rbp + 0xa], r13b
0x00011918      488b1424       mov rdx, qword [rsp]
0x0001191c      4183ec0a       sub r12d, 0xa
0x00011920      4180fc73       cmp r12b, 0x73
0x00011924      0f8732010000   ja 0x11a5c
0x0001192a      488d0da35200.  lea rcx, [0x00016bd4]
0x00011931      450fb6e4       movzx r12d, r12b
0x00011935      4a6304a1       movsxd rax, dword [rcx + r12*4]
0x00011939      4801c8         add rax, rcx
0x0001193c      ffe0           jmp rax
0x0001193e      6690           nop
0x00011940      4183cd20       or r13d, 0x20                           ; "@"
0x00011944      c6470801       mov byte [rdi + 8], 1
0x00011948      b801000000     mov eax, 1
0x0001194d      44886f0a       mov byte [rdi + 0xa], r13b
0x00011951      e95effffff     jmp 0x118b4
0x00011956      662e0f1f8400.  nop word cs:[rax + rax]
0x00011960      498d7601       lea rsi, [r14 + 1]
0x00011964      483b7358       cmp rsi, qword [rbx + 0x58]
0x00011968      0f8da2000000   jge 0x11a10
0x0001196e      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x00011975      0f8585040000   jne 0x11e00
0x0001197b      420fb67c3201   movzx edi, byte [rdx + r14 + 1]
0x00011981      4189fc         mov r12d, edi
0x00011984      897c2408       mov dword [rsp + 8], edi
0x00011988      83f801         cmp eax, 1
0x0001198b      44886500       mov byte [rbp], r12b
0x0001198f      c6450801       mov byte [rbp + 8], 1
0x00011993      0f8e47040000   jle 0x11de0
0x00011999      488b4310       mov rax, qword [rbx + 0x10]
0x0001199d      448b04b0       mov r8d, dword [rax + rsi*4]
0x000119a1      4489c7         mov edi, r8d
0x000119a4      44890424       mov dword [rsp], r8d
0x000119a8      e86302ffff     call sym.imp.iswalnum
0x000119ad      448b0424       mov r8d, dword [rsp]
0x000119b1      85c0           test eax, eax
0x000119b3      0f95c0         setne al
0x000119b6      4183f85f       cmp r8d, 0x5f
0x000119ba      0f94c2         sete dl
0x000119bd      418d4c24d9     lea ecx, [r12 - 0x27]
0x000119c2      09d0           or eax, edx
0x000119c4      c1e006         shl eax, 6
0x000119c7      4109c5         or r13d, eax
0x000119ca      80f956         cmp cl, 0x56
0x000119cd      44886d0a       mov byte [rbp + 0xa], r13b
0x000119d1      0f87fe030000   ja 0x11dd5
0x000119d7      488d15c65300.  lea rdx, [0x00016da4]
0x000119de      0fb6c9         movzx ecx, cl
0x000119e1      4863048a       movsxd rax, dword [rdx + rcx*4]
0x000119e5      4801d0         add rax, rdx
0x000119e8      ffe0           jmp rax
0x000119ea      660f1f440000   nop word [rax + rax]
0x000119f0      4180fc5c       cmp r12b, 0x5c
0x000119f4      0f8466ffffff   je 0x11960
0x000119fa      488b4310       mov rax, qword [rbx + 0x10]
0x000119fe      c6450801       mov byte [rbp + 8], 1
0x00011a02      428b0cb0       mov ecx, dword [rax + r14*4]
0x00011a06      e96bfeffff     jmp 0x11876
0x00011a0b      0f1f440000     nop dword [rax + rax]
0x00011a10      c6450824       mov byte [rbp + 8], 0x24                ; '$'
0x00011a14      b801000000     mov eax, 1
0x00011a19      e996feffff     jmp 0x118b4
0x00011a1e      6690           nop
0x00011a20      4181e7001200.  and r15d, 0x1200
0x00011a27      b801000000     mov eax, 1
0x00011a2c      4981ff001200.  cmp r15, 0x1200
0x00011a33      0f857bfeffff   jne 0x118b4
0x00011a39      c6450818       mov byte [rbp + 8], 0x18
0x00011a3d      e972feffff     jmp 0x118b4
0x00011a42      660f1f440000   nop word [rax + rax]
0x00011a48      4181e7008400.  and r15d, 0x8400
0x00011a4f      4981ff008000.  cmp r15, 0x8000
0x00011a56      0f84d6000000   je 0x11b32
0x00011a5c      b801000000     mov eax, 1
0x00011a61      e94efeffff     jmp 0x118b4
0x00011a66      662e0f1f8400.  nop word cs:[rax + rax]
0x00011a70      4181e7001200.  and r15d, 0x1200
0x00011a77      b801000000     mov eax, 1
0x00011a7c      4981ff001200.  cmp r15, 0x1200
0x00011a83      0f852bfeffff   jne 0x118b4
0x00011a89      c6450817       mov byte [rbp + 8], 0x17
0x00011a8d      e922feffff     jmp 0x118b4
0x00011a92      660f1f440000   nop word [rax + rax]
0x00011a98      41f7c7080080.  test r15d, 0x800008
0x00011a9f      7509           jne 0x11aaa
0x00011aa1      4d85f6         test r14, r14
0x00011aa4      0f85c0030000   jne 0x11e6a
0x00011aaa      c645080c       mov byte [rbp + 8], 0xc
0x00011aae      c74500100000.  mov dword [rbp], 0x10
0x00011ab5      b801000000     mov eax, 1
0x00011aba      e9f5fdffff     jmp 0x118b4
0x00011abf      90             nop
0x00011ac0      c6450814       mov byte [rbp + 8], 0x14
0x00011ac4      b801000000     mov eax, 1
0x00011ac9      e9e6fdffff     jmp 0x118b4
0x00011ace      6690           nop
0x00011ad0      41f7c7020400.  test r15d, 0x402
0x00011ad7      b801000000     mov eax, 1
0x00011adc      0f85d2fdffff   jne 0x118b4
0x00011ae2      c6450813       mov byte [rbp + 8], 0x13
0x00011ae6      e9c9fdffff     jmp 0x118b4
0x00011aeb      0f1f440000     nop dword [rax + rax]
0x00011af0      c6450805       mov byte [rbp + 8], 5
0x00011af4      b801000000     mov eax, 1
0x00011af9      e9b6fdffff     jmp 0x118b4
0x00011afe      6690           nop
0x00011b00      41f7c7020400.  test r15d, 0x402
0x00011b07      b801000000     mov eax, 1
0x00011b0c      0f85a2fdffff   jne 0x118b4
0x00011b12      c6450812       mov byte [rbp + 8], 0x12
0x00011b16      e999fdffff     jmp 0x118b4
0x00011b1b      0f1f440000     nop dword [rax + rax]
0x00011b20      41f7c7000800.  test r15d, 0x800
0x00011b27      b801000000     mov eax, 1
0x00011b2c      0f8482fdffff   je 0x118b4
0x00011b32      c645080a       mov byte [rbp + 8], 0xa
0x00011b36      b801000000     mov eax, 1
0x00011b3b      e974fdffff     jmp 0x118b4
0x00011b40      c645080b       mov byte [rbp + 8], 0xb
0x00011b44      b801000000     mov eax, 1
0x00011b49      e966fdffff     jmp 0x118b4
0x00011b4e      6690           nop
0x00011b50      41f7c7002000.  test r15d, sym.deregister_tm_clones     ; 0x2000 ; "H\x8d=y\x90!"
0x00011b57      b801000000     mov eax, 1
0x00011b5c      0f8452fdffff   je 0x118b4
0x00011b62      c6450809       mov byte [rbp + 8], 9
0x00011b66      e949fdffff     jmp 0x118b4
0x00011b6b      0f1f440000     nop dword [rax + rax]
0x00011b70      41f7c7002000.  test r15d, sym.deregister_tm_clones     ; 0x2000 ; "H\x8d=y\x90!"
0x00011b77      b801000000     mov eax, 1
0x00011b7c      0f8432fdffff   je 0x118b4
0x00011b82      c6450808       mov byte [rbp + 8], 8
0x00011b86      e929fdffff     jmp 0x118b4
0x00011b8b      0f1f440000     nop dword [rax + rax]
0x00011b90      41f6c708       test r15b, 8
0x00011b94      750e           jne 0x11ba4
0x00011b96      4983c601       add r14, 1
0x00011b9a      4c3b7358       cmp r14, qword [rbx + 0x58]
0x00011b9e      0f85f7020000   jne 0x11e9b
0x00011ba4      c645080c       mov byte [rbp + 8], 0xc
0x00011ba8      c74500200000.  mov dword [rbp], 0x20                   ; "@"
0x00011baf      b801000000     mov eax, 1
0x00011bb4      e9fbfcffff     jmp 0x118b4
0x00011bb9      41f7c7008400.  test r15d, 0x8400
0x00011bc0      b802000000     mov eax, 2
0x00011bc5      0f85e9fcffff   jne 0x118b4
0x00011bcb      c645080a       mov byte [rbp + 8], 0xa
0x00011bcf      e9e0fcffff     jmp 0x118b4
0x00011bd4      4181e7001200.  and r15d, 0x1200
0x00011bdb      b802000000     mov eax, 2
0x00011be0      4981ff000200.  cmp r15, 0x200
0x00011be7      0f85c7fcffff   jne 0x118b4
0x00011bed      e997feffff     jmp 0x11a89
0x00011bf2      41f7c7000008.  test r15d, 0x80000
0x00011bf9      b802000000     mov eax, 2
0x00011bfe      0f85b0fcffff   jne 0x118b4
0x00011c04      c6450820       mov byte [rbp + 8], 0x20                ; "@"
0x00011c08      e9a7fcffff     jmp 0x118b4
0x00011c0d      41f7c7000008.  test r15d, 0x80000
0x00011c14      b802000000     mov eax, 2
0x00011c19      0f8595fcffff   jne 0x118b4
0x00011c1f      c6450822       mov byte [rbp + 8], 0x22                ; '"'
0x00011c23      e98cfcffff     jmp 0x118b4
0x00011c28      4181e7001200.  and r15d, 0x1200
0x00011c2f      b802000000     mov eax, 2
0x00011c34      4981ff000200.  cmp r15, 0x200
0x00011c3b      0f8573fcffff   jne 0x118b4
0x00011c41      e9f3fdffff     jmp 0x11a39
0x00011c46      41f7c7000008.  test r15d, 0x80000
0x00011c4d      b802000000     mov eax, 2
0x00011c52      0f855cfcffff   jne 0x118b4
0x00011c58      c645080c       mov byte [rbp + 8], 0xc
0x00011c5c      c74500000100.  mov dword [rbp], obj.__frame_dummy_init_array_entry ; 0x100
0x00011c63      e94cfcffff     jmp 0x118b4
0x00011c68      41f7c7000008.  test r15d, 0x80000
0x00011c6f      b802000000     mov eax, 2
0x00011c74      0f853afcffff   jne 0x118b4
0x00011c7a      c645080c       mov byte [rbp + 8], 0xc
0x00011c7e      c74500400000.  mov dword [rbp], 0x40                   ; segment.PHDR
0x00011c85      e92afcffff     jmp 0x118b4
0x00011c8a      41f7c7000008.  test r15d, 0x80000
0x00011c91      b802000000     mov eax, 2
0x00011c96      0f8518fcffff   jne 0x118b4
0x00011c9c      c6450821       mov byte [rbp + 8], 0x21                ; '!'
0x00011ca0      e90ffcffff     jmp 0x118b4
0x00011ca5      41f7c7000008.  test r15d, 0x80000
0x00011cac      b802000000     mov eax, 2
0x00011cb1      0f85fdfbffff   jne 0x118b4
0x00011cb7      c6450823       mov byte [rbp + 8], 0x23                ; '#'
0x00011cbb      e9f4fbffff     jmp 0x118b4
0x00011cc0      41f7c7000008.  test r15d, 0x80000
0x00011cc7      b802000000     mov eax, 2
0x00011ccc      0f85e2fbffff   jne 0x118b4
0x00011cd2      c645080c       mov byte [rbp + 8], 0xc
0x00011cd6      c74500000200.  mov dword [rbp], 0x200
0x00011cdd      e9d2fbffff     jmp 0x118b4
0x00011ce2      4181e7020400.  and r15d, 0x402
0x00011ce9      b802000000     mov eax, 2
0x00011cee      4983ff02       cmp r15, 2
0x00011cf2      0f85bcfbffff   jne 0x118b4
0x00011cf8      e9e5fdffff     jmp 0x11ae2
0x00011cfd      41f7c7000008.  test r15d, 0x80000
0x00011d04      b802000000     mov eax, 2
0x00011d09      0f85a5fbffff   jne 0x118b4
0x00011d0f      c645080c       mov byte [rbp + 8], 0xc
0x00011d13      c74500090000.  mov dword [rbp], 9
0x00011d1a      e995fbffff     jmp 0x118b4
0x00011d1f      41f7c7000008.  test r15d, 0x80000
0x00011d26      b802000000     mov eax, 2
0x00011d2b      0f8583fbffff   jne 0x118b4
0x00011d31      c645080c       mov byte [rbp + 8], 0xc
0x00011d35      c74500060000.  mov dword [rbp], 6
0x00011d3c      e973fbffff     jmp 0x118b4
0x00011d41      41f7c7004000.  test r15d, 0x4000                       ; "p!"
0x00011d48      b802000000     mov eax, 2
0x00011d4d      0f8561fbffff   jne 0x118b4
0x00011d53      8b542408       mov edx, dword [rsp + 8]
0x00011d57      c6450804       mov byte [rbp + 8], 4
0x00011d5b      83ea31         sub edx, 0x31
0x00011d5e      4863d2         movsxd rdx, edx
0x00011d61      48895500       mov qword [rbp], rdx
0x00011d65      e94afbffff     jmp 0x118b4
0x00011d6a      4181e7020400.  and r15d, 0x402
0x00011d71      b802000000     mov eax, 2
0x00011d76      4983ff02       cmp r15, 2
0x00011d7a      0f8534fbffff   jne 0x118b4
0x00011d80      e98dfdffff     jmp 0x11b12
0x00011d85      41f7c7002000.  test r15d, sym.deregister_tm_clones     ; 0x2000 ; "H\x8d=y\x90!"
0x00011d8c      b802000000     mov eax, 2
0x00011d91      0f851dfbffff   jne 0x118b4
0x00011d97      e9c6fdffff     jmp 0x11b62
0x00011d9c      41f7c7002000.  test r15d, sym.deregister_tm_clones     ; 0x2000 ; "H\x8d=y\x90!"
0x00011da3      b802000000     mov eax, 2
0x00011da8      0f8506fbffff   jne 0x118b4
0x00011dae      e9cffdffff     jmp 0x11b82
0x00011db3      41f7c7000008.  test r15d, 0x80000
0x00011dba      b802000000     mov eax, 2
0x00011dbf      0f85effaffff   jne 0x118b4
0x00011dc5      c645080c       mov byte [rbp + 8], 0xc
0x00011dc9      c74500800000.  mov dword [rbp], 0x80
0x00011dd0      e9dffaffff     jmp 0x118b4
0x00011dd5      b802000000     mov eax, 2
0x00011dda      e9d5faffff     jmp 0x118b4
0x00011ddf      90             nop
0x00011de0      e8dbfffeff     call sym.imp.__ctype_b_loc
0x00011de5      488b30         mov rsi, qword [rax]
0x00011de8      410fb6d4       movzx edx, r12b
0x00011dec      0fb70456       movzx eax, word [rsi + rdx*2]
0x00011df0      66c1e803       shr ax, 3
0x00011df4      83e001         and eax, 1
0x00011df7      4180fc5f       cmp r12b, 0x5f
0x00011dfb      e9bafbffff     jmp 0x119ba
0x00011e00      83f801         cmp eax, 1
0x00011e03      7e2f           jle 0x11e34
0x00011e05      488b4b10       mov rcx, qword [rbx + 0x10]
0x00011e09      488d3cb50000.  lea rdi, [rsi*4]
0x00011e11      448b04b1       mov r8d, dword [rcx + rsi*4]
0x00011e15      4183f8ff       cmp r8d, 0xffffffff
0x00011e19      0f84b0000000   je 0x11ecf
0x00011e1f      4d8d4e02       lea r9, [r14 + 2]
0x00011e23      4c394b30       cmp qword [rbx + 0x30], r9
0x00011e27      740b           je 0x11e34
0x00011e29      837c3904ff     cmp dword [rcx + rdi + 4], 0xffffffff
0x00011e2e      0f849b000000   je 0x11ecf
0x00011e34      80bb8c000000.  cmp byte [rbx + 0x8c], 0
0x00011e3b      488b0b         mov rcx, qword [rbx]
0x00011e3e      488b7b28       mov rdi, qword [rbx + 0x28]
0x00011e42      7444           je 0x11e88
0x00011e44      4c8b4318       mov r8, qword [rbx + 0x18]
0x00011e48      4801f9         add rcx, rdi
0x00011e4b      49030cf0       add rcx, qword [r8 + rsi*8]
0x00011e4f      0fb639         movzx edi, byte [rcx]
0x00011e52      4189fc         mov r12d, edi
0x00011e55      897c2408       mov dword [rsp + 8], edi
0x00011e59      81e780000000   and edi, 0x80
0x00011e5f      0f8516fbffff   jne 0x1197b
0x00011e65      e91efbffff     jmp 0x11988
0x00011e6a      42807c32ff0a   cmp byte [rdx + r14 - 1], 0xa
0x00011e70      0f85e6fbffff   jne 0x11a5c
0x00011e76      41f7c7000800.  test r15d, 0x800
0x00011e7d      0f84d9fbffff   je 0x11a5c
0x00011e83      e922fcffff     jmp 0x11aaa
0x00011e88      4801f1         add rcx, rsi
0x00011e8b      0fb63c39       movzx edi, byte [rcx + rdi]
0x00011e8f      4189fc         mov r12d, edi
0x00011e92      897c2408       mov dword [rsp + 8], edi
0x00011e96      e9edfaffff     jmp 0x11988
0x00011e9b      488d7c2410     lea rdi, [rsp + 0x10]
0x00011ea0      4c89fa         mov rdx, r15
0x00011ea3      4c897348       mov qword [rbx + 0x48], r14
0x00011ea7      4889de         mov rsi, rbx
0x00011eaa      e841f9ffff     call sym.peek_token
0x00011eaf      0fb6442418     movzx eax, byte [rsp + 0x18]
0x00011eb4      48836b4801     sub qword [rbx + 0x48], 1
0x00011eb9      8d50f7         lea edx, [rax - 9]
0x00011ebc      b801000000     mov eax, 1
0x00011ec1      80fa01         cmp dl, 1
0x00011ec4      0f87eaf9ffff   ja 0x118b4
0x00011eca      e9d5fcffff     jmp 0x11ba4
0x00011ecf      420fb6443201   movzx eax, byte [rdx + r14 + 1]
0x00011ed5      c6450801       mov byte [rbp + 8], 1
0x00011ed9      4189c4         mov r12d, eax
0x00011edc      884500         mov byte [rbp], al
0x00011edf      89442408       mov dword [rsp + 8], eax
0x00011ee3      e9b9faffff     jmp 0x119a1
0x00011ee8      e8e3fbfeff     call sym.imp.__stack_chk_fail
0x00011eed      0f1f00         nop dword [rax]
;-- fetch_number:
0x00011ef0      4156           push r14
0x00011ef2      4989fe         mov r14, rdi
0x00011ef5      4155           push r13
0x00011ef7      4989f5         mov r13, rsi
0x00011efa      4154           push r12
0x00011efc      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x00011f03      55             push rbp
0x00011f04      4889d5         mov rbp, rdx
0x00011f07      53             push rbx
0x00011f08      48c7c3ffffff.  mov rbx, 0xffffffffffffffff
0x00011f0f      90             nop
0x00011f10      4889ea         mov rdx, rbp
0x00011f13      4c89f6         mov rsi, r14
0x00011f16      4c89ef         mov rdi, r13
0x00011f19      e8d2f8ffff     call sym.peek_token
0x00011f1e      4898           cdqe
0x00011f20      49014648       add qword [r14 + 0x48], rax
0x00011f24      410fb64508     movzx eax, byte [r13 + 8]
0x00011f29      410fb65500     movzx edx, byte [r13]
0x00011f2e      3c02           cmp al, 2
0x00011f30      744e           je 0x11f80
0x00011f32      3c18           cmp al, 0x18
0x00011f34      7451           je 0x11f87
0x00011f36      80fa2c         cmp dl, 0x2c
0x00011f39      744c           je 0x11f87
0x00011f3b      3c01           cmp al, 1
0x00011f3d      7409           je 0x11f48
0x00011f3f      4c89e3         mov rbx, r12
0x00011f42      ebcc           jmp 0x11f10
0x00011f44      0f1f4000       nop dword [rax]
0x00011f48      8d42d0         lea eax, [rdx - 0x30]
0x00011f4b      3c09           cmp al, 9
0x00011f4d      77f0           ja 0x11f3f
0x00011f4f      4883fbfe       cmp rbx, 0xfffffffffffffffe
0x00011f53      74ea           je 0x11f3f
0x00011f55      4883fbff       cmp rbx, 0xffffffffffffffff
0x00011f59      743d           je 0x11f98
0x00011f5b      488d049b       lea rax, [rbx + rbx*4]
0x00011f5f      488d1c42       lea rbx, [rdx + rax*2]
0x00011f63      b830800000     mov eax, 0x8030
0x00011f68      4881fb308000.  cmp rbx, 0x8030
0x00011f6f      480f4fd8       cmovg rbx, rax
0x00011f73      4883eb30       sub rbx, 0x30
0x00011f77      eb97           jmp 0x11f10
0x00011f79      0f1f80000000.  nop dword [rax]
0x00011f80      48c7c3feffff.  mov rbx, 0xfffffffffffffffe
0x00011f87      4889d8         mov rax, rbx
0x00011f8a      5b             pop rbx
0x00011f8b      5d             pop rbp
0x00011f8c      415c           pop r12
0x00011f8e      415d           pop r13
0x00011f90      415e           pop r14
0x00011f92      c3             ret
0x00011f93      0f1f440000     nop dword [rax + rax]
0x00011f98      0fb6da         movzx ebx, dl
0x00011f9b      83eb30         sub ebx, 0x30
0x00011f9e      4863db         movsxd rbx, ebx
0x00011fa1      e96affffff     jmp 0x11f10
0x00011fa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_expression:
0x00011fb0      4157           push r15
0x00011fb2      4156           push r14
0x00011fb4      4155           push r13
0x00011fb6      4154           push r12
0x00011fb8      55             push rbp
0x00011fb9      53             push rbx
0x00011fba      4881ec280100.  sub rsp, 0x128
0x00011fc1      48894c2420     mov qword [rsp + 0x20], rcx
0x00011fc6      0fb64a08       movzx ecx, byte [rdx + 8]
0x00011fca      64488b042528.  mov rax, qword fs:[0x28]
0x00011fd3      488984241801.  mov qword [rsp + 0x118], rax
0x00011fdb      31c0           xor eax, eax
0x00011fdd      488b06         mov rax, qword [rsi]
0x00011fe0      4889542418     mov qword [rsp + 0x18], rdx
0x00011fe5      4c894c2440     mov qword [rsp + 0x40], r9
0x00011fea      80f924         cmp cl, 0x24
0x00011fed      4889442410     mov qword [rsp + 0x10], rax
0x00011ff2      0f87b8000000   ja 0x120b0
0x00011ff8      4889f5         mov rbp, rsi
0x00011ffb      488d35fe4e00.  lea rsi, [0x00016f00]
0x00012002      0fb6d1         movzx edx, cl
0x00012005      4989fe         mov r14, rdi
0x00012008      48630496       movsxd rax, dword [rsi + rdx*4]
0x0001200c      4801f0         add rax, rsi
0x0001200f      ffe0           jmp rax
0x00012011      488b5d30       mov rbx, qword [rbp + 0x30]
0x00012015      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x0001201a      4889fe         mov rsi, rdi
0x0001201d      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x00012022      4c890424       mov qword [rsp], r8
0x00012026      488d4301       lea rax, [rbx + 1]
0x0001202a      4c89fa         mov rdx, r15
0x0001202d      4881ca000080.  or rdx, 0x800000
0x00012034      4c89ef         mov rdi, r13
0x00012037      48894530       mov qword [rbp + 0x30], rax
0x0001203b      e8b0f7ffff     call sym.peek_token
0x00012040      4898           cdqe
0x00012042      49014648       add qword [r14 + 0x48], rax
0x00012046      31c0           xor eax, eax
0x00012048      41807d0809     cmp byte [r13 + 8], 9
0x0001204d      4c89ea         mov rdx, r13
0x00012050      0f84fa0a0000   je 0x12b50
0x00012056      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x0001205b      4c8b0424       mov r8, qword [rsp]
0x0001205f      4c89f9         mov rcx, r15
0x00012062      4889ee         mov rsi, rbp
0x00012065      4c89f7         mov rdi, r14
0x00012068      4983c001       add r8, 1
0x0001206c      4d89e9         mov r9, r13
0x0001206f      e8ac150000     call sym.parse_reg_exp
0x00012074      458b5d00       mov r11d, dword [r13]
0x00012078      4585db         test r11d, r11d
0x0001207b      7533           jne 0x120b0
0x0001207d      488b542418     mov rdx, qword [rsp + 0x18]
0x00012082      807a0809       cmp byte [rdx + 8], 9
0x00012086      0f84c40a0000   je 0x12b50
0x0001208c      4885c0         test rax, rax
0x0001208f      7411           je 0x120a2
0x00012091      488d35d862ff.  lea rsi, sym.free_tree                  ; 0x8370 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00012098      31d2           xor edx, edx
0x0001209a      4889c7         mov rdi, rax
0x0001209d      e82e54ffff     call sym.postorder
0x000120a2      488b442440     mov rax, qword [rsp + 0x40]
0x000120a7      c70008000000   mov dword [rax], 8
0x000120ad      0f1f00         nop dword [rax]
0x000120b0      48c744242800.  mov qword [rsp + 0x28], 0
0x000120b9      0f1f80000000.  nop dword [rax]
0x000120c0      488bbc241801.  mov rdi, qword [rsp + 0x118]
0x000120c8      6448333c2528.  xor rdi, qword fs:[0x28]
0x000120d1      488b442428     mov rax, qword [rsp + 0x28]
0x000120d6      0f8572130000   jne 0x1344e
0x000120dc      4881c4280100.  add rsp, 0x128
0x000120e3      5b             pop rbx
0x000120e4      5d             pop rbp
0x000120e5      415c           pop r12
0x000120e7      415d           pop r13
0x000120e9      415e           pop r14
0x000120eb      415f           pop r15
0x000120ed      c3             ret
0x000120ee      48f744242000.  test qword [rsp + 0x20], 0x1000000
0x000120f7      0f8550020000   jne 0x1234d
0x000120fd      488b442420     mov rax, qword [rsp + 0x20]
0x00012102      a820           test al, 0x20                           ; "@"
0x00012104      0f8543020000   jne 0x1234d
0x0001210a      a810           test al, 0x10
0x0001210c      0f85630e0000   jne 0x12f75
0x00012112      80f909         cmp cl, 9
0x00012115      0f840d0a0000   je 0x12b28
0x0001211b      488b442410     mov rax, qword [rsp + 0x10]
0x00012120      4c8b442418     mov r8, qword [rsp + 0x18]
0x00012125      31c9           xor ecx, ecx
0x00012127      31d2           xor edx, edx
0x00012129      488db0800000.  lea rsi, [rax + 0x80]
0x00012130      488d7870       lea rdi, [rax + 0x70]
0x00012134      41c6400801     mov byte [r8 + 8], 1
0x00012139      e87277ffff     call sym.create_token_tree.isra.16
0x0001213e      4885c0         test rax, rax
0x00012141      4889442428     mov qword [rsp + 0x28], rax
0x00012146      0f84cc090000   je 0x12b18
0x0001214c      488b5c2418     mov rbx, qword [rsp + 0x18]
0x00012151      488b542420     mov rdx, qword [rsp + 0x20]
0x00012156      4c89f6         mov rsi, r14
0x00012159      4c8dbc24c000.  lea r15, [rsp + 0xc0]
0x00012161      4889df         mov rdi, rbx
0x00012164      e887f6ffff     call sym.peek_token
0x00012169      4898           cdqe
0x0001216b      49014648       add qword [r14 + 0x48], rax
0x0001216f      0fb64308       movzx eax, byte [rbx + 8]
0x00012173      0f1f440000     nop dword [rax + rax]
0x00012178      3c17           cmp al, 0x17
0x0001217a      0f8740ffffff   ja 0x120c0
0x00012180      3c12           cmp al, 0x12
0x00012182      b900088c00     mov ecx, 0x8c0800
0x00012187      0f94c3         sete bl
0x0001218a      480fa3c1       bt rcx, rax
0x0001218e      0f832cffffff   jae 0x120c0
0x00012194      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00012199      3c17           cmp al, 0x17
0x0001219b      498b6e48       mov rbp, qword [r14 + 0x48]
0x0001219f      660f6f01       movdqa xmm0, xmmword [rcx]
0x000121a3      0f841f030000   je 0x124c8
0x000121a9      3c13           cmp al, 0x13
0x000121ab      0fb6db         movzx ebx, bl
0x000121ae      0f84ac020000   je 0x12460
0x000121b4      488b542420     mov rdx, qword [rsp + 0x20]
0x000121b9      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000121be      4c89f6         mov rsi, r14
0x000121c1      e82af6ffff     call sym.peek_token
0x000121c6      4898           cdqe
0x000121c8      49014648       add qword [r14 + 0x48], rax
0x000121cc      48837c242800   cmp qword [rsp + 0x28], 0
0x000121d2      0f8488030000   je 0x12560
0x000121d8      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff
0x000121e0      4885db         test rbx, rbx
0x000121e3      488b6c2428     mov rbp, qword [rsp + 0x28]
0x000121e8      48c744243000.  mov qword [rsp + 0x30], 0
0x000121f1      0f8f79010000   jg 0x12370
0x000121f7      807d3011       cmp byte [rbp + 0x30], 0x11
0x000121fb      0f843f030000   je 0x12540
0x00012201      48833c24ff     cmp qword [rsp], 0xffffffffffffffff
0x00012206      4889ea         mov rdx, rbp
0x00012209      4d89f8         mov r8, r15
0x0001220c      0f94c0         sete al
0x0001220f      31c9           xor ecx, ecx
0x00012211      83c00a         add eax, 0xa
0x00012214      888424c80000.  mov byte [rsp + 0xc8], al
0x0001221b      488b442410     mov rax, qword [rsp + 0x10]
0x00012220      4c8d6070       lea r12, [rax + 0x70]
0x00012224      4c8da8800000.  lea r13, [rax + 0x80]
0x0001222b      4c89e7         mov rdi, r12
0x0001222e      4c89ee         mov rsi, r13
0x00012231      e87a76ffff     call sym.create_token_tree.isra.16
0x00012236      4885c0         test rax, rax
0x00012239      4889c2         mov rdx, rax
0x0001223c      0f84ee010000   je 0x12430
0x00012242      4883c302       add rbx, 2
0x00012246      483b1c24       cmp rbx, qword [rsp]
0x0001224a      7f7f           jg 0x122cb
0x0001224c      4c89742448     mov qword [rsp + 0x48], r14
0x00012251      4989c6         mov r14, rax
0x00012254      488b742410     mov rsi, qword [rsp + 0x10]
0x00012259      4889ef         mov rdi, rbp
0x0001225c      e82f77ffff     call sym.duplicate_tree
0x00012261      4d89f8         mov r8, r15
0x00012264      4889c5         mov rbp, rax
0x00012267      4889c1         mov rcx, rax
0x0001226a      4c89f2         mov rdx, r14
0x0001226d      4c89ee         mov rsi, r13
0x00012270      4c89e7         mov rdi, r12
0x00012273      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x0001227b      e83076ffff     call sym.create_token_tree.isra.16
0x00012280      4885ed         test rbp, rbp
0x00012283      0f84a7010000   je 0x12430
0x00012289      4885c0         test rax, rax
0x0001228c      0f849e010000   je 0x12430
0x00012292      31c9           xor ecx, ecx
0x00012294      4d89f8         mov r8, r15
0x00012297      4889c2         mov rdx, rax
0x0001229a      4c89ee         mov rsi, r13
0x0001229d      4c89e7         mov rdi, r12
0x000122a0      c68424c80000.  mov byte [rsp + 0xc8], 0xa
0x000122a8      e80376ffff     call sym.create_token_tree.isra.16
0x000122ad      4885c0         test rax, rax
0x000122b0      4989c6         mov r14, rax
0x000122b3      0f8477010000   je 0x12430
0x000122b9      4883c301       add rbx, 1
0x000122bd      483b1c24       cmp rbx, qword [rsp]
0x000122c1      7e91           jle 0x12254
0x000122c3      4c8b742448     mov r14, qword [rsp + 0x48]
0x000122c8      4889c2         mov rdx, rax
0x000122cb      488b442430     mov rax, qword [rsp + 0x30]
0x000122d0      4885c0         test rax, rax
0x000122d3      0f84a7020000   je 0x12580
0x000122d9      4889d1         mov rcx, rdx
0x000122dc      4d89f8         mov r8, r15
0x000122df      4889c2         mov rdx, rax
0x000122e2      4c89ee         mov rsi, r13
0x000122e5      4c89e7         mov rdi, r12
0x000122e8      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x000122f0      e8bb75ffff     call sym.create_token_tree.isra.16
0x000122f5      488b7c2440     mov rdi, qword [rsp + 0x40]
0x000122fa      8b17           mov edx, dword [rdi]
0x000122fc      85d2           test edx, edx
0x000122fe      7409           je 0x12309
0x00012300      4885c0         test rax, rax
0x00012303      0f8452030000   je 0x1265b
0x00012309      4889442428     mov qword [rsp + 0x28], rax
0x0001230e      48f744242000.  test qword [rsp + 0x20], 0x1000000
0x00012317      488b442418     mov rax, qword [rsp + 0x18]
0x0001231c      0fb64008       movzx eax, byte [rax + 8]
0x00012320      0f8452feffff   je 0x12178
0x00012326      3c0b           cmp al, 0xb
0x00012328      7408           je 0x12332
0x0001232a      3c17           cmp al, 0x17
0x0001232c      0f8546feffff   jne 0x12178
0x00012332      488b442428     mov rax, qword [rsp + 0x28]
0x00012337      4885c0         test rax, rax
0x0001233a      7411           je 0x1234d
0x0001233c      488d352d60ff.  lea rsi, sym.free_tree                  ; 0x8370 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00012343      31d2           xor edx, edx
0x00012345      4889c7         mov rdi, rax
0x00012348      e88351ffff     call sym.postorder
0x0001234d      488b442440     mov rax, qword [rsp + 0x40]
0x00012352      48c744242800.  mov qword [rsp + 0x28], 0
0x0001235b      c7000d000000   mov dword [rax], 0xd                    ; [0xd:4]=0x3000000
0x00012361      e95afdffff     jmp 0x120c0
0x00012366      662e0f1f8400.  nop word cs:[rax + rax]
0x00012370      4883fb01       cmp rbx, 1
0x00012374      0f8432080000   je 0x12bac
0x0001237a      488b442410     mov rax, qword [rsp + 0x10]
0x0001237f      4989ed         mov r13, rbp
0x00012382      4c89742448     mov qword [rsp + 0x48], r14
0x00012387      4c8da0800000.  lea r12, [rax + 0x80]
0x0001238e      488d7870       lea rdi, [rax + 0x70]
0x00012392      4889e8         mov rax, rbp
0x00012395      4989c6         mov r14, rax
0x00012398      bd02000000     mov ebp, 2
0x0001239d      4c89e6         mov rsi, r12
0x000123a0      48897c2430     mov qword [rsp + 0x30], rdi
0x000123a5      4d89ec         mov r12, r13
0x000123a8      4989dd         mov r13, rbx
0x000123ab      4889f3         mov rbx, rsi
0x000123ae      6690           nop
0x000123b0      488b742410     mov rsi, qword [rsp + 0x10]
0x000123b5      4c89e7         mov rdi, r12
0x000123b8      e8d375ffff     call sym.duplicate_tree
0x000123bd      488b7c2430     mov rdi, qword [rsp + 0x30]
0x000123c2      4989c4         mov r12, rax
0x000123c5      4c89f2         mov rdx, r14
0x000123c8      4d89f8         mov r8, r15
0x000123cb      4889c1         mov rcx, rax
0x000123ce      4889de         mov rsi, rbx
0x000123d1      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x000123d9      e8d274ffff     call sym.create_token_tree.isra.16
0x000123de      4d85e4         test r12, r12
0x000123e1      4989c6         mov r14, rax
0x000123e4      744a           je 0x12430
0x000123e6      4885c0         test rax, rax
0x000123e9      7445           je 0x12430
0x000123eb      4883c501       add rbp, 1
0x000123ef      4c39ed         cmp rbp, r13
0x000123f2      7ebc           jle 0x123b0
0x000123f4      4c8b742448     mov r14, qword [rsp + 0x48]
0x000123f9      4c89eb         mov rbx, r13
0x000123fc      4889442430     mov qword [rsp + 0x30], rax
0x00012401      4d89e5         mov r13, r12
0x00012404      48391c24       cmp qword [rsp], rbx
0x00012408      0f8466010000   je 0x12574
0x0001240e      488b742410     mov rsi, qword [rsp + 0x10]
0x00012413      4c89ef         mov rdi, r13
0x00012416      e87575ffff     call sym.duplicate_tree
0x0001241b      4885c0         test rax, rax
0x0001241e      4889c5         mov rbp, rax
0x00012421      0f85d0fdffff   jne 0x121f7
0x00012427      660f1f840000.  nop word [rax + rax]
0x00012430      488b442440     mov rax, qword [rsp + 0x40]
0x00012435      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0001243b      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00012440      488d35295fff.  lea rsi, sym.free_tree                  ; 0x8370 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00012447      31d2           xor edx, edx
0x00012449      e88250ffff     call sym.postorder
0x0001244e      48c744242800.  mov qword [rsp + 0x28], 0
0x00012457      e964fcffff     jmp 0x120c0
0x0001245c      0f1f4000       nop dword [rax]
0x00012460      48c704240100.  mov qword [rsp], 1
0x00012468      488b542420     mov rdx, qword [rsp + 0x20]
0x0001246d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00012472      4c89f6         mov rsi, r14
0x00012475      e876f3ffff     call sym.peek_token
0x0001247a      4898           cdqe
0x0001247c      49014648       add qword [r14 + 0x48], rax
0x00012480      48837c242800   cmp qword [rsp + 0x28], 0
0x00012486      0f84d4000000   je 0x12560
0x0001248c      488b0424       mov rax, qword [rsp]
0x00012490      4809d8         or rax, rbx
0x00012493      0f8547fdffff   jne 0x121e0
0x00012499      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0001249e      488d35cb5eff.  lea rsi, sym.free_tree                  ; 0x8370 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x000124a5      31d2           xor edx, edx
0x000124a7      e82450ffff     call sym.postorder
0x000124ac      488b442440     mov rax, qword [rsp + 0x40]
0x000124b1      8b30           mov esi, dword [rax]
0x000124b3      85f6           test esi, esi
0x000124b5      7584           jne 0x1243b
0x000124b7      48c744242800.  mov qword [rsp + 0x28], 0
0x000124c0      e949feffff     jmp 0x1230e
0x000124c5      0f1f00         nop dword [rax]
0x000124c8      488b542420     mov rdx, qword [rsp + 0x20]
0x000124cd      4889ce         mov rsi, rcx
0x000124d0      4c89f7         mov rdi, r14
0x000124d3      0f290424       movaps xmmword [rsp], xmm0
0x000124d7      e814faffff     call sym.fetch_number
0x000124dc      4883f8ff       cmp rax, 0xffffffffffffffff
0x000124e0      4889c3         mov rbx, rax
0x000124e3      660f6f0424     movdqa xmm0, xmmword [rsp]
0x000124e8      0f84a2000000   je 0x12590
0x000124ee      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000124f2      7419           je 0x1250d
0x000124f4      488b442418     mov rax, qword [rsp + 0x18]
0x000124f9      0fb64008       movzx eax, byte [rax + 8]
0x000124fd      3c18           cmp al, 0x18
0x000124ff      0f841b010000   je 0x12620
0x00012505      3c01           cmp al, 1
0x00012507      0f8426010000   je 0x12633
0x0001250d      48f744242000.  test qword [rsp + 0x20], 0x200000
0x00012516      0f84370f0000   je 0x13453
0x0001251c      488b442418     mov rax, qword [rsp + 0x18]
0x00012521      49896e48       mov qword [r14 + 0x48], rbp
0x00012525      0f2900         movaps xmmword [rax], xmm0
0x00012528      c6400801       mov byte [rax + 8], 1
0x0001252c      488b442428     mov rax, qword [rsp + 0x28]
0x00012531      e9bffdffff     jmp 0x122f5
0x00012536      662e0f1f8400.  nop word cs:[rax + rax]
0x00012540      488b5528       mov rdx, qword [rbp + 0x28]
0x00012544      488d35c54cff.  lea rsi, sym.mark_opt_subexp            ; 0x7210
0x0001254b      4889ef         mov rdi, rbp
0x0001254e      e87d4fffff     call sym.postorder
0x00012553      e9a9fcffff     jmp 0x12201
0x00012558      0f1f84000000.  nop dword [rax + rax]
0x00012560      488b442440     mov rax, qword [rsp + 0x40]
0x00012565      8b08           mov ecx, dword [rax]
0x00012567      85c9           test ecx, ecx
0x00012569      0f8448ffffff   je 0x124b7
0x0001256f      e93cfbffff     jmp 0x120b0
0x00012574      488b542430     mov rdx, qword [rsp + 0x30]
0x00012579      0f1f80000000.  nop dword [rax]
0x00012580      4889542428     mov qword [rsp + 0x28], rdx
0x00012585      e984fdffff     jmp 0x1230e
0x0001258a      660f1f440000   nop word [rax + rax]
0x00012590      488b442418     mov rax, qword [rsp + 0x18]
0x00012595      80780801       cmp byte [rax + 8], 1
0x00012599      0f85b1000000   jne 0x12650
0x0001259f      488b442418     mov rax, qword [rsp + 0x18]
0x000125a4      80382c         cmp byte [rax], 0x2c
0x000125a7      0f85a3000000   jne 0x12650
0x000125ad      31db           xor ebx, ebx
0x000125af      488b542420     mov rdx, qword [rsp + 0x20]
0x000125b4      488b742418     mov rsi, qword [rsp + 0x18]
0x000125b9      4c89f7         mov rdi, r14
0x000125bc      0f29442430     movaps xmmword [rsp + 0x30], xmm0
0x000125c1      e82af9ffff     call sym.fetch_number
0x000125c6      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000125ca      48890424       mov qword [rsp], rax
0x000125ce      660f6f442430   movdqa xmm0, xmmword [rsp + 0x30]
0x000125d4      0f8433ffffff   je 0x1250d
0x000125da      488b0424       mov rax, qword [rsp]
0x000125de      4883f8ff       cmp rax, 0xffffffffffffffff
0x000125e2      7405           je 0x125e9
0x000125e4      4839d8         cmp rax, rbx
0x000125e7      7c67           jl 0x12650
0x000125e9      488b442418     mov rax, qword [rsp + 0x18]
0x000125ee      80780818       cmp byte [rax + 8], 0x18
0x000125f2      755c           jne 0x12650
0x000125f4      48833c24ff     cmp qword [rsp], 0xffffffffffffffff
0x000125f9      7529           jne 0x12624
0x000125fb      31c0           xor eax, eax
0x000125fd      4881fbff7f00.  cmp rbx, 0x7fff
0x00012604      0f9fc0         setg al
0x00012607      4885c0         test rax, rax
0x0001260a      0f8458feffff   je 0x12468
0x00012610      488b442440     mov rax, qword [rsp + 0x40]
0x00012615      c7000f000000   mov dword [rax], 0xf                    ; [0xf:4]=0x3e000300
0x0001261b      eb3e           jmp 0x1265b
0x0001261d      0f1f00         nop dword [rax]
0x00012620      48891c24       mov qword [rsp], rbx
0x00012624      31c0           xor eax, eax
0x00012626      48813c24ff7f.  cmp qword [rsp], 0x7fff
0x0001262e      0f9fc0         setg al
0x00012631      ebd4           jmp 0x12607
0x00012633      488b442418     mov rax, qword [rsp + 0x18]
0x00012638      80382c         cmp byte [rax], 0x2c
0x0001263b      0f846effffff   je 0x125af
0x00012641      48f744242000.  test qword [rsp + 0x20], 0x200000
0x0001264a      0f85ccfeffff   jne 0x1251c
0x00012650      488b442440     mov rax, qword [rsp + 0x40]
0x00012655      c7000a000000   mov dword [rax], 0xa
0x0001265b      48837c242800   cmp qword [rsp + 0x28], 0
0x00012661      0f85d4fdffff   jne 0x1243b
0x00012667      e944faffff     jmp 0x120b0
0x0001266c      0f1f4000       nop dword [rax]
0x00012670      488b442418     mov rax, qword [rsp + 0x18]
0x00012675      8b28           mov ebp, dword [rax]
0x00012677      f7c50f030000   test ebp, 0x30f
0x0001267d      7462           je 0x126e1
0x0001267f      488b442410     mov rax, qword [rsp + 0x10]
0x00012684      0fb680b00000.  movzx eax, byte [rax + 0xb0]
0x0001268b      a810           test al, 0x10
0x0001268d      7552           jne 0x126e1
0x0001268f      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00012694      83c810         or eax, 0x10
0x00012697      a808           test al, 8
0x00012699      8887b0000000   mov byte [rdi + 0xb0], al
0x0001269f      0f85fe0b0000   jne 0x132a3
0x000126a5      48ba00000000.  movabs rdx, 0x3ff000000000000           ; 287948901175001088
0x000126af      a804           test al, 4
0x000126b1      488997b80000.  mov qword [rdi + 0xb8], rdx
0x000126b8      48bafeffff87.  movabs rdx, 0x7fffffe87fffffe
0x000126c2      488997c00000.  mov qword [rdi + 0xc0], rdx
0x000126c9      0f84590b0000   je 0x13228
0x000126cf      660fefc0       pxor xmm0, xmm0
0x000126d3      488b442418     mov rax, qword [rsp + 0x18]
0x000126d8      0f1187c80000.  movups xmmword [rdi + 0xc8], xmm0
0x000126df      8b28           mov ebp, dword [rax]
0x000126e1      488b442410     mov rax, qword [rsp + 0x10]
0x000126e6      488d5870       lea rbx, [rax + 0x70]
0x000126ea      4c8da0800000.  lea r12, [rax + 0x80]
0x000126f1      8d8500ffffff   lea eax, [rbp - 0x100]
0x000126f7      a9fffeffff     test eax, 0xfffffeff                    ; 4294967039
0x000126fc      0f8568060000   jne 0x12d6a
0x00012702      81fd00010000   cmp ebp, 0x100
0x00012708      4c8b7c2418     mov r15, qword [rsp + 0x18]
0x0001270d      0f842f060000   je 0x12d42
0x00012713      41c707050000.  mov dword [r15], 5
0x0001271a      4d89f8         mov r8, r15
0x0001271d      31c9           xor ecx, ecx
0x0001271f      31d2           xor edx, edx
0x00012721      4c89e6         mov rsi, r12
0x00012724      4889df         mov rdi, rbx
0x00012727      e88471ffff     call sym.create_token_tree.isra.16
0x0001272c      41c7070a0000.  mov dword [r15], 0xa
0x00012733      4889c5         mov rbp, rax
0x00012736      4c8b442418     mov r8, qword [rsp + 0x18]
0x0001273b      31c9           xor ecx, ecx
0x0001273d      31d2           xor edx, edx
0x0001273f      4c89e6         mov rsi, r12
0x00012742      4889df         mov rdi, rbx
0x00012745      e86671ffff     call sym.create_token_tree.isra.16
0x0001274a      4c8d8424c000.  lea r8, [rsp + 0xc0]
0x00012752      4889ea         mov rdx, rbp
0x00012755      4889df         mov rdi, rbx
0x00012758      4889c1         mov rcx, rax
0x0001275b      4c89e6         mov rsi, r12
0x0001275e      4989c5         mov r13, rax
0x00012761      c68424c80000.  mov byte [rsp + 0xc8], 0xa
0x00012769      e84271ffff     call sym.create_token_tree.isra.16
0x0001276e      4885ed         test rbp, rbp
0x00012771      4889c7         mov rdi, rax
0x00012774      4889442428     mov qword [rsp + 0x28], rax
0x00012779      0f94c2         sete dl
0x0001277c      4d85ed         test r13, r13
0x0001277f      0f94c0         sete al
0x00012782      08c2           or dl, al
0x00012784      0f858e030000   jne 0x12b18
0x0001278a      4885ff         test rdi, rdi
0x0001278d      0f8485030000   je 0x12b18
0x00012793      488b542420     mov rdx, qword [rsp + 0x20]
0x00012798      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0001279d      4c89f6         mov rsi, r14
0x000127a0      e84bf0ffff     call sym.peek_token
0x000127a5      4898           cdqe
0x000127a7      49014648       add qword [r14 + 0x48], rax
0x000127ab      e910f9ffff     jmp 0x120c0
0x000127b0      be01000000     mov esi, 1
0x000127b5      bf20000000     mov edi, 0x20                           ; "@"
0x000127ba      48c784249800.  mov qword [rsp + 0x98], 0
0x000127c6      e8f5f3feff     call sym.imp.calloc
0x000127cb      be01000000     mov esi, 1
0x000127d0      4989c4         mov r12, rax
0x000127d3      bf50000000     mov edi, 0x50                           ; 'P'
0x000127d8      e8e3f3feff     call sym.imp.calloc
0x000127dd      4d85e4         test r12, r12
0x000127e0      4989c5         mov r13, rax
0x000127e3      0f94c2         sete dl
0x000127e6      4885c0         test rax, rax
0x000127e9      0f94c0         sete al
0x000127ec      08c2           or dl, al
0x000127ee      0f85d5070000   jne 0x12fc9
0x000127f4      4c8b542418     mov r10, qword [rsp + 0x18]
0x000127f9      488b542420     mov rdx, qword [rsp + 0x20]
0x000127fe      4c89f6         mov rsi, r14
0x00012801      4c89d7         mov rdi, r10
0x00012804      e8d748ffff     call sym.peek_token_bracket
0x00012809      4863d8         movsxd rbx, eax
0x0001280c      410fb64208     movzx eax, byte [r10 + 8]
0x00012811      3c02           cmp al, 2
0x00012813      0f84a0070000   je 0x12fb9
0x00012819      3c19           cmp al, 0x19
0x0001281b      c644245700     mov byte [rsp + 0x57], 0
0x00012820      0f84c4040000   je 0x12cea
0x00012826      3c15           cmp al, 0x15
0x00012828      0f8406050000   je 0x12d34
0x0001282e      488d8424d000.  lea rax, [rsp + 0xd0]
0x00012836      4c8b7c2418     mov r15, qword [rsp + 0x18]
0x0001283b      488d2d524700.  lea rbp, [0x00016f94]
0x00012842      48c744244800.  mov qword [rsp + 0x48], 0
0x0001284b      41b901000000   mov r9d, 1
0x00012851      48c744243000.  mov qword [rsp + 0x30], 0
0x0001285a      4889442428     mov qword [rsp + 0x28], rax
0x0001285f      488d8424a000.  lea rax, [rsp + 0xa0]
0x00012867      48890424       mov qword [rsp], rax
0x0001286b      488d84249800.  lea rax, [rsp + 0x98]
0x00012873      4889442458     mov qword [rsp + 0x58], rax
0x00012878      488d8424c000.  lea rax, [rsp + 0xc0]
0x00012880      4889442460     mov qword [rsp + 0x60], rax
0x00012885      488d8424f000.  lea rax, [rsp + 0xf0]
0x0001288d      4889442468     mov qword [rsp + 0x68], rax
0x00012892      488b442428     mov rax, qword [rsp + 0x28]
0x00012897      4c8b442420     mov r8, qword [rsp + 0x20]
0x0001289c      4183e101       and r9d, 1
0x000128a0      488b3c24       mov rdi, qword [rsp]
0x000128a4      89d9           mov ecx, ebx
0x000128a6      4c89fa         mov rdx, r15
0x000128a9      4c89f6         mov rsi, r14
0x000128ac      c78424a00000.  mov dword [rsp + 0xa0], 3
0x000128b7      48898424a800.  mov qword [rsp + 0xa8], rax
0x000128bf      e8ccecffff     call sym.parse_bracket_element.constprop.37
0x000128c4      85c0           test eax, eax
0x000128c6      0f85df040000   jne 0x12dab
0x000128cc      488b542420     mov rdx, qword [rsp + 0x20]
0x000128d1      4c89f6         mov rsi, r14
0x000128d4      4c89ff         mov rdi, r15
0x000128d7      e80448ffff     call sym.peek_token_bracket
0x000128dc      4863d8         movsxd rbx, eax
0x000128df      8b8424a00000.  mov eax, dword [rsp + 0xa0]
0x000128e6      8d50fe         lea edx, [rax - 2]
0x000128e9      83e2fd         and edx, 0xfffffffd                     ; 4294967293
0x000128ec      7417           je 0x12905
0x000128ee      410fb65708     movzx edx, byte [r15 + 8]
0x000128f3      80fa02         cmp dl, 2
0x000128f6      0f8495040000   je 0x12d91
0x000128fc      80fa16         cmp dl, 0x16
0x000128ff      0f84b2040000   je 0x12db7
0x00012905      83f804         cmp eax, 4
0x00012908      0f879c090000   ja 0x132aa
0x0001290e      4863448500     movsxd rax, dword [rbp + rax*4]
0x00012913      4801e8         add rax, rbp
0x00012916      ffe0           jmp rax
0x00012918      488b5c2440     mov rbx, qword [rsp + 0x40]
0x0001291d      80f923         cmp cl, 0x23
0x00012920      488b7778       mov rsi, qword [rdi + 0x78]
0x00012924      410f94c0       sete r8b
0x00012928      488d0d323e00.  lea rcx, [0x00016761]
0x0001292f      488d15d94100.  lea rdx, str.space                      ; 0x16b0f ; "space"
0x00012936      450fb6c0       movzx r8d, r8b
0x0001293a      4989d9         mov r9, rbx
0x0001293d      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00012942      e8b9a2ffff     call sym.build_charclass_op
0x00012947      8b3b           mov edi, dword [rbx]
0x00012949      4889442428     mov qword [rsp + 0x28], rax
0x0001294e      85ff           test edi, edi
0x00012950      0f84f6f7ffff   je 0x1214c
0x00012956      4885c0         test rax, rax
0x00012959      0f85edf7ffff   jne 0x1214c
0x0001295f      e94cf7ffff     jmp 0x120b0
0x00012964      0f1f4000       nop dword [rax]
0x00012968      488b5c2440     mov rbx, qword [rsp + 0x40]
0x0001296d      80f921         cmp cl, 0x21
0x00012970      488b7778       mov rsi, qword [rdi + 0x78]
0x00012974      410f94c0       sete r8b
0x00012978      488d0d9b3600.  lea rcx, [0x0001601a]                   ; "_"
0x0001297f      488d157d4100.  lea rdx, str.alnum                      ; 0x16b03 ; "alnum"
0x00012986      450fb6c0       movzx r8d, r8b
0x0001298a      4989d9         mov r9, rbx
0x0001298d      ebae           jmp 0x1293d
0x0001298f      488b442418     mov rax, qword [rsp + 0x18]
0x00012994      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00012999      488b08         mov rcx, qword [rax]
0x0001299c      b801000000     mov eax, 1
0x000129a1      d3e0           shl eax, cl
0x000129a3      4898           cdqe
0x000129a5      488587a80000.  test qword [rdi + 0xa8], rax
0x000129ac      0f842c060000   je 0x12fde
0x000129b2      488b5c2410     mov rbx, qword [rsp + 0x10]
0x000129b7      4c8b442418     mov r8, qword [rsp + 0x18]
0x000129bc      31c9           xor ecx, ecx
0x000129be      31d2           xor edx, edx
0x000129c0      480983a00000.  or qword [rbx + 0xa0], rax
0x000129c7      488db3800000.  lea rsi, [rbx + 0x80]
0x000129ce      488d7b70       lea rdi, [rbx + 0x70]
0x000129d2      e8d96effff     call sym.create_token_tree.isra.16
0x000129d7      4885c0         test rax, rax
0x000129da      4889442428     mov qword [rsp + 0x28], rax
0x000129df      0f8433010000   je 0x12b18
0x000129e5      488383980000.  add qword [rbx + 0x98], 1
0x000129ed      808bb0000000.  or byte [rbx + 0xb0], 2
0x000129f4      e953f7ffff     jmp 0x1214c
0x000129f9      488b5c2410     mov rbx, qword [rsp + 0x10]
0x000129fe      4c8b442418     mov r8, qword [rsp + 0x18]
0x00012a03      31c9           xor ecx, ecx
0x00012a05      31d2           xor edx, edx
0x00012a07      488db3800000.  lea rsi, [rbx + 0x80]
0x00012a0e      488d7b70       lea rdi, [rbx + 0x70]
0x00012a12      e8996effff     call sym.create_token_tree.isra.16
0x00012a17      4885c0         test rax, rax
0x00012a1a      4889442428     mov qword [rsp + 0x28], rax
0x00012a1f      0f84f3000000   je 0x12b18
0x00012a25      83bbb4000000.  cmp dword [rbx + 0xb4], 1
0x00012a2c      0f8e1af7ffff   jle 0x1214c
0x00012a32      808bb0000000.  or byte [rbx + 0xb0], 2
0x00012a39      e90ef7ffff     jmp 0x1214c
0x00012a3e      488b442410     mov rax, qword [rsp + 0x10]
0x00012a43      4c8b442418     mov r8, qword [rsp + 0x18]
0x00012a48      31c9           xor ecx, ecx
0x00012a4a      31d2           xor edx, edx
0x00012a4c      488d5870       lea rbx, [rax + 0x70]
0x00012a50      488da8800000.  lea rbp, [rax + 0x80]
0x00012a57      4889df         mov rdi, rbx
0x00012a5a      4889ee         mov rsi, rbp
0x00012a5d      e84e6effff     call sym.create_token_tree.isra.16
0x00012a62      4885c0         test rax, rax
0x00012a65      4889442428     mov qword [rsp + 0x28], rax
0x00012a6a      0f84a8000000   je 0x12b18
0x00012a70      488b442410     mov rax, qword [rsp + 0x10]
0x00012a75      4c8da424c000.  lea r12, [rsp + 0xc0]
0x00012a7d      4c8b7c2428     mov r15, qword [rsp + 0x28]
0x00012a82      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x00012a89      0f8ebdf6ffff   jle 0x1214c
0x00012a8f      498b4648       mov rax, qword [r14 + 0x48]
0x00012a93      49394668       cmp qword [r14 + 0x68], rax
0x00012a97      0f8e04030000   jle 0x12da1
0x00012a9d      493b4630       cmp rax, qword [r14 + 0x30]
0x00012aa1      0f84fa020000   je 0x12da1
0x00012aa7      498b5610       mov rdx, qword [r14 + 0x10]
0x00012aab      833c82ff       cmp dword [rdx + rax*4], 0xffffffff
0x00012aaf      0f85ec020000   jne 0x12da1
0x00012ab5      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x00012aba      488b542420     mov rdx, qword [rsp + 0x20]
0x00012abf      4c89f6         mov rsi, r14
0x00012ac2      4c89ef         mov rdi, r13
0x00012ac5      e826edffff     call sym.peek_token
0x00012aca      4898           cdqe
0x00012acc      49014648       add qword [r14 + 0x48], rax
0x00012ad0      4d89e8         mov r8, r13
0x00012ad3      31c9           xor ecx, ecx
0x00012ad5      31d2           xor edx, edx
0x00012ad7      4889ee         mov rsi, rbp
0x00012ada      4889df         mov rdi, rbx
0x00012add      e8ce6dffff     call sym.create_token_tree.isra.16
0x00012ae2      4c89fa         mov rdx, r15
0x00012ae5      4989c5         mov r13, rax
0x00012ae8      4d89e0         mov r8, r12
0x00012aeb      4889c1         mov rcx, rax
0x00012aee      4889ee         mov rsi, rbp
0x00012af1      4889df         mov rdi, rbx
0x00012af4      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x00012afc      e8af6dffff     call sym.create_token_tree.isra.16
0x00012b01      4d85ed         test r13, r13
0x00012b04      4989c7         mov r15, rax
0x00012b07      0f94c2         sete dl
0x00012b0a      4885c0         test rax, rax
0x00012b0d      0f94c0         sete al
0x00012b10      08c2           or dl, al
0x00012b12      0f8477ffffff   je 0x12a8f
0x00012b18      488b442440     mov rax, qword [rsp + 0x40]
0x00012b1d      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00012b23      e988f5ffff     jmp 0x120b0
0x00012b28      48f744242000.  test qword [rsp + 0x20], 0x20000
0x00012b31      0f85e4f5ffff   jne 0x1211b
0x00012b37      488b442440     mov rax, qword [rsp + 0x40]
0x00012b3c      48c744242800.  mov qword [rsp + 0x28], 0
0x00012b45      c70010000000   mov dword [rax], 0x10                   ; [0x10:4]=0x3e0003
0x00012b4b      e970f5ffff     jmp 0x120c0
0x00012b50      4883fb08       cmp rbx, 8
0x00012b54      7665           jbe 0x12bbb
0x00012b56      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00012b5b      4c8d8424c000.  lea r8, [rsp + 0xc0]
0x00012b63      31c9           xor ecx, ecx
0x00012b65      4889c2         mov rdx, rax
0x00012b68      c68424c80000.  mov byte [rsp + 0xc8], 0x11             ; [0x11:1]=0
0x00012b70      488db7800000.  lea rsi, [rdi + 0x80]
0x00012b77      4883c770       add rdi, 0x70
0x00012b7b      e8306dffff     call sym.create_token_tree.isra.16
0x00012b80      4885c0         test rax, rax
0x00012b83      4889442428     mov qword [rsp + 0x28], rax
0x00012b88      748e           je 0x12b18
0x00012b8a      48895828       mov qword [rax + 0x28], rbx
0x00012b8e      e9b9f5ffff     jmp 0x1214c
0x00012b93      488b442440     mov rax, qword [rsp + 0x40]
0x00012b98      48c744242800.  mov qword [rsp + 0x28], 0
0x00012ba1      c70005000000   mov dword [rax], 5
0x00012ba7      e914f5ffff     jmp 0x120c0
0x00012bac      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x00012bb1      4c896c2430     mov qword [rsp + 0x30], r13
0x00012bb6      e949f8ffff     jmp 0x12404
0x00012bbb      488b742410     mov rsi, qword [rsp + 0x10]
0x00012bc0      ba01000000     mov edx, 1
0x00012bc5      89d9           mov ecx, ebx
0x00012bc7      d3e2           shl edx, cl
0x00012bc9      4863d2         movsxd rdx, edx
0x00012bcc      480996a80000.  or qword [rsi + 0xa8], rdx
0x00012bd3      eb81           jmp 0x12b56
0x00012bd5      488bb424a800.  mov rsi, qword [rsp + 0xa8]
0x00012bdd      4c89e7         mov rdi, r12
0x00012be0      e8bb97ffff     call sym.build_equiv_class.isra.27
0x00012be5      488b542440     mov rdx, qword [rsp + 0x40]
0x00012bea      85c0           test eax, eax
0x00012bec      8902           mov dword [rdx], eax
0x00012bee      7538           jne 0x12c28
0x00012bf0      410fb64708     movzx eax, byte [r15 + 8]
0x00012bf5      3c02           cmp al, 2
0x00012bf7      0f8494010000   je 0x12d91
0x00012bfd      3c15           cmp al, 0x15
0x00012bff      0f840d040000   je 0x13012
0x00012c05      4531c9         xor r9d, r9d
0x00012c08      e985fcffff     jmp 0x12892
0x00012c0d      488bb424a800.  mov rsi, qword [rsp + 0xa8]
0x00012c15      4c89e7         mov rdi, r12
0x00012c18      e88397ffff     call sym.build_equiv_class.isra.27
0x00012c1d      488b542440     mov rdx, qword [rsp + 0x40]
0x00012c22      85c0           test eax, eax
0x00012c24      8902           mov dword [rdx], eax
0x00012c26      74c8           je 0x12bf0
0x00012c28      4c89e7         mov rdi, r12
0x00012c2b      e8a0edfeff     call sym.imp.free
0x00012c30      4c89ef         mov rdi, r13
0x00012c33      e8d856ffff     call sym.free_charset
0x00012c38      488b442440     mov rax, qword [rsp + 0x40]
0x00012c3d      448b00         mov r8d, dword [rax]
0x00012c40      4585c0         test r8d, r8d
0x00012c43      0f8567f4ffff   jne 0x120b0
0x00012c49      48c744242800.  mov qword [rsp + 0x28], 0
0x00012c52      e9f5f4ffff     jmp 0x1214c
0x00012c57      498b5528       mov rdx, qword [r13 + 0x28]
0x00012c5b      483b542430     cmp rdx, qword [rsp + 0x30]
0x00012c60      498b4500       mov rax, qword [r13]
0x00012c64      0f84f4040000   je 0x1315e
0x00012c6a      488d4a01       lea rcx, [rdx + 1]
0x00012c6e      49894d28       mov qword [r13 + 0x28], rcx
0x00012c72      8b8c24a80000.  mov ecx, dword [rsp + 0xa8]
0x00012c79      890c90         mov dword [rax + rdx*4], ecx
0x00012c7c      e96fffffff     jmp 0x12bf0
0x00012c81      0fb69424a800.  movzx edx, byte [rsp + 0xa8]
0x00012c89      be01000000     mov esi, 1
0x00012c8e      4889d0         mov rax, rdx
0x00012c91      83e23f         and edx, 0x3f
0x00012c94      48c1e803       shr rax, 3
0x00012c98      89d1           mov ecx, edx
0x00012c9a      83e018         and eax, 0x18
0x00012c9d      48d3e6         shl rsi, cl
0x00012ca0      49093404       or qword [r12 + rax], rsi
0x00012ca4      e947ffffff     jmp 0x12bf0
0x00012ca9      4883ec08       sub rsp, 8
0x00012cad      498b7e78       mov rdi, qword [r14 + 0x78]
0x00012cb1      498d5518       lea rdx, [r13 + 0x18]
0x00012cb5      ff742428       push qword [rsp + 0x28]
0x00012cb9      4c8b8c24b800.  mov r9, qword [rsp + 0xb8]
0x00012cc1      498d4d48       lea rcx, [r13 + 0x48]
0x00012cc5      4c8b442468     mov r8, qword [rsp + 0x68]
0x00012cca      4c89e6         mov rsi, r12
0x00012ccd      e81e97ffff     call sym.build_charclass.isra.29
0x00012cd2      488b542450     mov rdx, qword [rsp + 0x50]
0x00012cd7      85c0           test eax, eax
0x00012cd9      8902           mov dword [rdx], eax
0x00012cdb      4159           pop r9
0x00012cdd      415a           pop r10
0x00012cdf      0f840bffffff   je 0x12bf0
0x00012ce5      e93effffff     jmp 0x12c28
0x00012cea      41804d2001     or byte [r13 + 0x20], 1
0x00012cef      48f744242000.  test qword [rsp + 0x20], 0x100
0x00012cf8      7408           je 0x12d02
0x00012cfa      49810c240004.  or qword [r12], 0x400                   ; [0x400:8]=0x12000002c3
0x00012d02      49015e48       add qword [r14 + 0x48], rbx
0x00012d06      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x00012d0b      4c89f6         mov rsi, r14
0x00012d0e      488b542420     mov rdx, qword [rsp + 0x20]
0x00012d13      4c89df         mov rdi, r11
0x00012d16      e8c543ffff     call sym.peek_token_bracket
0x00012d1b      89c3           mov ebx, eax
0x00012d1d      410fb64308     movzx eax, byte [r11 + 8]
0x00012d22      3c02           cmp al, 2
0x00012d24      0f848f020000   je 0x12fb9
0x00012d2a      c644245701     mov byte [rsp + 0x57], 1
0x00012d2f      e9f2faffff     jmp 0x12826
0x00012d34      488b442418     mov rax, qword [rsp + 0x18]
0x00012d39      c6400801       mov byte [rax + 8], 1
0x00012d3d      e9ecfaffff     jmp 0x1282e
0x00012d42      41c707060000.  mov dword [r15], 6
0x00012d49      4d89f8         mov r8, r15
0x00012d4c      31c9           xor ecx, ecx
0x00012d4e      31d2           xor edx, edx
0x00012d50      4c89e6         mov rsi, r12
0x00012d53      4889df         mov rdi, rbx
0x00012d56      e8556bffff     call sym.create_token_tree.isra.16
0x00012d5b      41c707090000.  mov dword [r15], 9
0x00012d62      4889c5         mov rbp, rax
0x00012d65      e9ccf9ffff     jmp 0x12736
0x00012d6a      4c8b442418     mov r8, qword [rsp + 0x18]
0x00012d6f      31c9           xor ecx, ecx
0x00012d71      31d2           xor edx, edx
0x00012d73      4c89e6         mov rsi, r12
0x00012d76      4889df         mov rdi, rbx
0x00012d79      e8326bffff     call sym.create_token_tree.isra.16
0x00012d7e      4885c0         test rax, rax
0x00012d81      4889442428     mov qword [rsp + 0x28], rax
0x00012d86      0f8507faffff   jne 0x12793
0x00012d8c      e987fdffff     jmp 0x12b18
0x00012d91      488b442440     mov rax, qword [rsp + 0x40]
0x00012d96      c70007000000   mov dword [rax], 7
0x00012d9c      e987feffff     jmp 0x12c28
0x00012da1      4c897c2428     mov qword [rsp + 0x28], r15
0x00012da6      e9a1f3ffff     jmp 0x1214c
0x00012dab      488b542440     mov rdx, qword [rsp + 0x40]
0x00012db0      8902           mov dword [rdx], eax
0x00012db2      e971feffff     jmp 0x12c28
0x00012db7      4863c3         movsxd rax, ebx
0x00012dba      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x00012dbf      49014648       add qword [r14 + 0x48], rax
0x00012dc3      4c8b542460     mov r10, qword [rsp + 0x60]
0x00012dc8      4c89da         mov rdx, r11
0x00012dcb      4c89d7         mov rdi, r10
0x00012dce      e80d43ffff     call sym.peek_token_bracket
0x00012dd3      0fb69424c800.  movzx edx, byte [rsp + 0xc8]
0x00012ddb      80fa02         cmp dl, 2
0x00012dde      74b1           je 0x12d91
0x00012de0      80fa15         cmp dl, 0x15
0x00012de3      0f840e020000   je 0x12ff7
0x00012de9      488b542468     mov rdx, qword [rsp + 0x68]
0x00012dee      488dbc24b000.  lea rdi, [rsp + 0xb0]
0x00012df6      41b901000000   mov r9d, 1
0x00012dfc      4d89d8         mov r8, r11
0x00012dff      89c1           mov ecx, eax
0x00012e01      c78424b00000.  mov dword [rsp + 0xb0], 3
0x00012e0c      48899424b800.  mov qword [rsp + 0xb8], rdx
0x00012e14      4c89d2         mov rdx, r10
0x00012e17      e874e7ffff     call sym.parse_bracket_element.constprop.37
0x00012e1c      85c0           test eax, eax
0x00012e1e      758b           jne 0x12dab
0x00012e20      488b542420     mov rdx, qword [rsp + 0x20]
0x00012e25      4c89f6         mov rsi, r14
0x00012e28      4c89ff         mov rdi, r15
0x00012e2b      e8b042ffff     call sym.peek_token_bracket
0x00012e30      4863d8         movsxd rbx, eax
0x00012e33      488b442410     mov rax, qword [rsp + 0x10]
0x00012e38      8bb424a00000.  mov esi, dword [rsp + 0xa0]
0x00012e3f      41b900000000   mov r9d, 0
0x00012e45      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x00012e4c      8d46fe         lea eax, [rsi - 2]
0x00012e4f      4d0f4fcd       cmovg r9, r13
0x00012e53      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x00012e56      0f846d040000   je 0x132c9
0x00012e5c      448b9424b000.  mov r10d, dword [rsp + 0xb0]
0x00012e64      418d42fe       lea eax, [r10 - 2]
0x00012e68      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x00012e6b      0f8458040000   je 0x132c9
0x00012e71      83fe03         cmp esi, 3
0x00012e74      410f94c3       sete r11b
0x00012e78      0f848f040000   je 0x1330d
0x00012e7e      4183fa03       cmp r10d, 3
0x00012e82      0f8451040000   je 0x132d9
0x00012e88      85f6           test esi, esi
0x00012e8a      0f8569030000   jne 0x131f9
0x00012e90      0fb69424a800.  movzx edx, byte [rsp + 0xa8]
0x00012e98      4585d2         test r10d, r10d
0x00012e9b      0f853c030000   jne 0x131dd
0x00012ea1      440fb68424b8.  movzx r8d, byte [rsp + 0xb8]
0x00012eaa      85f6           test esi, esi
0x00012eac      0f84e4020000   je 0x13196
0x00012eb2      4584db         test r11b, r11b
0x00012eb5      0f85db020000   jne 0x13196
0x00012ebb      4d85c9         test r9, r9
0x00012ebe      8b9424a80000.  mov edx, dword [rsp + 0xa8]
0x00012ec5      741d           je 0x12ee4
0x00012ec7      4489c7         mov edi, r8d
0x00012eca      89542478       mov dword [rsp + 0x78], edx
0x00012ece      4c894c2470     mov qword [rsp + 0x70], r9
0x00012ed3      e8f8edfeff     call sym.imp.btowc
0x00012ed8      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x00012edd      8b542478       mov edx, dword [rsp + 0x78]
0x00012ee1      4189c0         mov r8d, eax
0x00012ee4      83faff         cmp edx, 0xffffffff
0x00012ee7      0f8410040000   je 0x132fd
0x00012eed      4183f8ff       cmp r8d, 0xffffffff
0x00012ef1      0f8406040000   je 0x132fd
0x00012ef7      48f744242000.  test qword [rsp + 0x20], 0x10000
0x00012f00      7409           je 0x12f0b
0x00012f02      4139d0         cmp r8d, edx
0x00012f05      0f82be030000   jb 0x132c9
0x00012f0b      4d85c9         test r9, r9
0x00012f0e      7426           je 0x12f36
0x00012f10      498b4140       mov rax, qword [r9 + 0x40]
0x00012f14      483b442448     cmp rax, qword [rsp + 0x48]
0x00012f19      498b4908       mov rcx, qword [r9 + 8]
0x00012f1d      0f8410040000   je 0x13333
0x00012f23      891481         mov dword [rcx + rax*4], edx
0x00012f26      498b4910       mov rcx, qword [r9 + 0x10]
0x00012f2a      488d7001       lea rsi, [rax + 1]
0x00012f2e      49897140       mov qword [r9 + 0x40], rsi
0x00012f32      44890481       mov dword [rcx + rax*4], r8d
0x00012f36      31c0           xor eax, eax
0x00012f38      bf01000000     mov edi, 1
0x00012f3d      39c2           cmp edx, eax
0x00012f3f      89c1           mov ecx, eax
0x00012f41      7716           ja 0x12f59
0x00012f43      4139c0         cmp r8d, eax
0x00012f46      7211           jb 0x12f59
0x00012f48      4889c6         mov rsi, rax
0x00012f4b      4989fb         mov r11, rdi
0x00012f4e      48c1fe06       sar rsi, 6
0x00012f52      49d3e3         shl r11, cl
0x00012f55      4d091cf4       or qword [r12 + rsi*8], r11
0x00012f59      4883c001       add rax, 1
0x00012f5d      483d00010000   cmp rax, 0x100
0x00012f63      75d8           jne 0x12f3d
0x00012f65      488b442440     mov rax, qword [rsp + 0x40]
0x00012f6a      c70000000000   mov dword [rax], 0
0x00012f70      e97bfcffff     jmp 0x12bf0
0x00012f75      488b5c2418     mov rbx, qword [rsp + 0x18]
0x00012f7a      4889c2         mov rdx, rax
0x00012f7d      4c89f6         mov rsi, r14
0x00012f80      4c890424       mov qword [rsp], r8
0x00012f84      4989c7         mov r15, rax
0x00012f87      4889df         mov rdi, rbx
0x00012f8a      e861e8ffff     call sym.peek_token
0x00012f8f      4898           cdqe
0x00012f91      49014648       add qword [r14 + 0x48], rax
0x00012f95      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00012f9a      4c8b0424       mov r8, qword [rsp]
0x00012f9e      4c89f9         mov rcx, r15
0x00012fa1      4889da         mov rdx, rbx
0x00012fa4      4889ee         mov rsi, rbp
0x00012fa7      4c89f7         mov rdi, r14
0x00012faa      e801f0ffff     call sym.parse_expression
0x00012faf      4889442428     mov qword [rsp + 0x28], rax
0x00012fb4      e907f1ffff     jmp 0x120c0
0x00012fb9      488b442440     mov rax, qword [rsp + 0x40]
0x00012fbe      c70002000000   mov dword [rax], 2
0x00012fc4      e95ffcffff     jmp 0x12c28
0x00012fc9      4c89e7         mov rdi, r12
0x00012fcc      e8ffe9feff     call sym.imp.free
0x00012fd1      4c89ef         mov rdi, r13
0x00012fd4      e8f7e9feff     call sym.imp.free
0x00012fd9      e93afbffff     jmp 0x12b18
0x00012fde      488b442440     mov rax, qword [rsp + 0x40]
0x00012fe3      48c744242800.  mov qword [rsp + 0x28], 0
0x00012fec      c70006000000   mov dword [rax], 6
0x00012ff2      e9c9f0ffff     jmp 0x120c0
0x00012ff7      89d8           mov eax, ebx
0x00012ff9      f7d8           neg eax
0x00012ffb      4898           cdqe
0x00012ffd      49014648       add qword [r14 + 0x48], rax
0x00013001      41c6470801     mov byte [r15 + 8], 1
0x00013006      8b8424a00000.  mov eax, dword [rsp + 0xa0]
0x0001300d      e9f3f8ffff     jmp 0x12905
0x00013012      49015e48       add qword [r14 + 0x48], rbx
0x00013016      807c245700     cmp byte [rsp + 0x57], 0
0x0001301b      7414           je 0x13031
0x0001301d      498d542420     lea rdx, [r12 + 0x20]
0x00013022      4c89e0         mov rax, r12
0x00013025      48f710         not qword [rax]
0x00013028      4883c008       add rax, 8
0x0001302c      4839c2         cmp rdx, rax
0x0001302f      75f4           jne 0x13025
0x00013031      488b442410     mov rax, qword [rsp + 0x10]
0x00013036      8b90b4000000   mov edx, dword [rax + 0xb4]
0x0001303c      83fa01         cmp edx, 1
0x0001303f      7e18           jle 0x13059
0x00013041      488b4878       mov rcx, qword [rax + 0x78]
0x00013045      31c0           xor eax, eax
0x00013047      488b3401       mov rsi, qword [rcx + rax]
0x0001304b      49213404       and qword [r12 + rax], rsi
0x0001304f      4883c008       add rax, 8
0x00013053      4883f820       cmp rax, 0x20                           ; "@"
0x00013057      75ee           jne 0x13047
0x00013059      49837d2800     cmp qword [r13 + 0x28], 0
0x0001305e      0f8584000000   jne 0x130e8
0x00013064      49837d3000     cmp qword [r13 + 0x30], 0
0x00013069      757d           jne 0x130e8
0x0001306b      49837d3800     cmp qword [r13 + 0x38], 0
0x00013070      7576           jne 0x130e8
0x00013072      49837d4000     cmp qword [r13 + 0x40], 0
0x00013077      756f           jne 0x130e8
0x00013079      83ea01         sub edx, 1
0x0001307c      7e0e           jle 0x1308c
0x0001307e      49837d4800     cmp qword [r13 + 0x48], 0
0x00013083      7563           jne 0x130e8
0x00013085      41f6452001     test byte [r13 + 0x20], 1
0x0001308a      755c           jne 0x130e8
0x0001308c      4c89ef         mov rdi, r13
0x0001308f      e87c52ffff     call sym.free_charset
0x00013094      488b442410     mov rax, qword [rsp + 0x10]
0x00013099      4c8d8424b000.  lea r8, [rsp + 0xb0]
0x000130a1      31c9           xor ecx, ecx
0x000130a3      31d2           xor edx, edx
0x000130a5      c68424b80000.  mov byte [rsp + 0xb8], 3
0x000130ad      4c89a424b000.  mov qword [rsp + 0xb0], r12
0x000130b5      488db0800000.  lea rsi, [rax + 0x80]
0x000130bc      488d7870       lea rdi, [rax + 0x70]
0x000130c0      e8eb67ffff     call sym.create_token_tree.isra.16
0x000130c5      4885c0         test rax, rax
0x000130c8      4889442428     mov qword [rsp + 0x28], rax
0x000130cd      0f8579f0ffff   jne 0x1214c
0x000130d3      488b442440     mov rax, qword [rsp + 0x40]
0x000130d8      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x000130de      e945fbffff     jmp 0x12c28
0x000130e3      0f1f440000     nop dword [rax + rax]
0x000130e8      488b442410     mov rax, qword [rsp + 0x10]
0x000130ed      4c8dbc24b000.  lea r15, [rsp + 0xb0]
0x000130f5      31d2           xor edx, edx
0x000130f7      31c9           xor ecx, ecx
0x000130f9      4d89f8         mov r8, r15
0x000130fc      8088b0000000.  or byte [rax + 0xb0], 2
0x00013103      488d5870       lea rbx, [rax + 0x70]
0x00013107      488da8800000.  lea rbp, [rax + 0x80]
0x0001310e      c68424b80000.  mov byte [rsp + 0xb8], 6
0x00013116      4c89ac24b000.  mov qword [rsp + 0xb0], r13
0x0001311e      4889df         mov rdi, rbx
0x00013121      4889ee         mov rsi, rbp
0x00013124      e88767ffff     call sym.create_token_tree.isra.16
0x00013129      4889c7         mov rdi, rax
0x0001312c      4889442428     mov qword [rsp + 0x28], rax
0x00013131      498d542420     lea rdx, [r12 + 0x20]
0x00013136      4885ff         test rdi, rdi
0x00013139      4c89e0         mov rax, r12
0x0001313c      7495           je 0x130d3
0x0001313e      48833800       cmp qword [rax], 0
0x00013142      0f85a5020000   jne 0x133ed
0x00013148      4883c008       add rax, 8
0x0001314c      4839c2         cmp rdx, rax
0x0001314f      75ed           jne 0x1313e
0x00013151      4c89e7         mov rdi, r12
0x00013154      e877e8feff     call sym.imp.free
0x00013159      e9eeefffff     jmp 0x1214c
0x0001315e      488b542430     mov rdx, qword [rsp + 0x30]
0x00013163      488d7c1201     lea rdi, [rdx + rdx + 1]
0x00013168      488d34bd0000.  lea rsi, [rdi*4]
0x00013170      48897c2430     mov qword [rsp + 0x30], rdi
0x00013175      4889c7         mov rdi, rax
0x00013178      e813ebfeff     call sym.imp.realloc
0x0001317d      4885c0         test rax, rax
0x00013180      0f844dffffff   je 0x130d3
0x00013186      49894500       mov qword [r13], rax
0x0001318a      498b5528       mov rdx, qword [r13 + 0x28]
0x0001318e      e9d7faffff     jmp 0x12c6a
0x00013193      4531c0         xor r8d, r8d
0x00013196      4d85c9         test r9, r9
0x00013199      7479           je 0x13214
0x0001319b      89d7           mov edi, edx
0x0001319d      4489442478     mov dword [rsp + 0x78], r8d
0x000131a2      4c894c2470     mov qword [rsp + 0x70], r9
0x000131a7      e824ebfeff     call sym.imp.btowc
0x000131ac      89c2           mov edx, eax
0x000131ae      8b8424b00000.  mov eax, dword [rsp + 0xb0]
0x000131b5      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x000131ba      448b442478     mov r8d, dword [rsp + 0x78]
0x000131bf      83f803         cmp eax, 3
0x000131c2      0f84fffcffff   je 0x12ec7
0x000131c8      85c0           test eax, eax
0x000131ca      0f84f7fcffff   je 0x12ec7
0x000131d0      448b8424b800.  mov r8d, dword [rsp + 0xb8]
0x000131d8      e907fdffff     jmp 0x12ee4
0x000131dd      4183fa03       cmp r10d, 3
0x000131e1      0f848b020000   je 0x13472
0x000131e7      85f6           test esi, esi
0x000131e9      74a8           je 0x13193
0x000131eb      4584db         test r11b, r11b
0x000131ee      75a3           jne 0x13193
0x000131f0      8b9424a80000.  mov edx, dword [rsp + 0xa8]
0x000131f7      ebd7           jmp 0x131d0
0x000131f9      31d2           xor edx, edx
0x000131fb      83fe03         cmp esi, 3
0x000131fe      0f8594fcffff   jne 0x12e98
0x00013204      488b8424a800.  mov rax, qword [rsp + 0xa8]
0x0001320c      0fb610         movzx edx, byte [rax]
0x0001320f      e984fcffff     jmp 0x12e98
0x00013214      4585d2         test r10d, r10d
0x00013217      0f84dafcffff   je 0x12ef7
0x0001321d      4183fa03       cmp r10d, 3
0x00013221      75ad           jne 0x131d0
0x00013223      e9cffcffff     jmp 0x12ef7
0x00013228      bb80000000     mov ebx, 0x80
0x0001322d      41bc02000000   mov r12d, 2
0x00013233      e888ebfeff     call sym.imp.__ctype_b_loc
0x00013238      4863d3         movsxd rdx, ebx
0x0001323b      4d63cc         movsxd r9, r12d
0x0001323e      41b801000000   mov r8d, 1
0x00013244      4801d2         add rdx, rdx
0x00013247      480310         add rdx, qword [rax]
0x0001324a      488b442410     mov rax, qword [rsp + 0x10]
0x0001324f      4a8d3cc8       lea rdi, [rax + r9*8]
0x00013253      31c0           xor eax, eax
0x00013255      eb1b           jmp 0x13272
0x00013257      660f1f840000.  nop word [rax + rax]
0x00013260      8d3403         lea esi, [rbx + rax]
0x00013263      83fe5f         cmp esi, 0x5f
0x00013266      7412           je 0x1327a
0x00013268      4883c001       add rax, 1
0x0001326c      4883f840       cmp rax, 0x40                           ; segment.PHDR
0x00013270      7417           je 0x13289
0x00013272      f6044208       test byte [rdx + rax*2], 8
0x00013276      89c1           mov ecx, eax
0x00013278      74e6           je 0x13260
0x0001327a      4c89c6         mov rsi, r8
0x0001327d      48d3e6         shl rsi, cl
0x00013280      4809b7b80000.  or qword [rdi + 0xb8], rsi
0x00013287      ebdf           jmp 0x13268
0x00013289      4983c101       add r9, 1
0x0001328d      83c340         add ebx, 0x40                           ; segment.PHDR
0x00013290      4883ea80       sub rdx, 0xffffffffffffff80
0x00013294      4883c708       add rdi, 8
0x00013298      4183f903       cmp r9d, 3
0x0001329c      7eb5           jle 0x13253
0x0001329e      e93ef4ffff     jmp 0x126e1
0x000132a3      31db           xor ebx, ebx
0x000132a5      4531e4         xor r12d, r12d
0x000132a8      eb89           jmp 0x13233
0x000132aa      488d0dbf3d00.  lea rcx, obj.__PRETTY_FUNCTION__.7327   ; 0x17070 ; "parse_bracket_exp"
0x000132b1      488d35e83700.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x16aa0 ; "../coreutils-8.31/lib/regcomp.c"
0x000132b8      488d3dce2c00.  lea rdi, [0x00015f8d]                   ; "0"
0x000132bf      baed0c0000     mov edx, 0xced
0x000132c4      e887e8feff     call sym.imp.__assert_fail
0x000132c9      488b442440     mov rax, qword [rsp + 0x40]
0x000132ce      c7000b000000   mov dword [rax], 0xb                    ; [0xb:4]=0
0x000132d4      e94ff9ffff     jmp 0x12c28
0x000132d9      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x000132e1      31c0           xor eax, eax
0x000132e3      4883c9ff       or rcx, 0xffffffffffffffff
0x000132e7      f2ae           repne scasb al, byte [rdi]
0x000132e9      4889c8         mov rax, rcx
0x000132ec      48f7d0         not rax
0x000132ef      4883e801       sub rax, 1
0x000132f3      4883f801       cmp rax, 1
0x000132f7      0f868bfbffff   jbe 0x12e88
0x000132fd      488b442440     mov rax, qword [rsp + 0x40]
0x00013302      c70003000000   mov dword [rax], 3
0x00013308      e91bf9ffff     jmp 0x12c28
0x0001330d      488bbc24a800.  mov rdi, qword [rsp + 0xa8]
0x00013315      31c0           xor eax, eax
0x00013317      4883c9ff       or rcx, 0xffffffffffffffff
0x0001331b      f2ae           repne scasb al, byte [rdi]
0x0001331d      4889c8         mov rax, rcx
0x00013320      48f7d0         not rax
0x00013323      4883e801       sub rax, 1
0x00013327      4883f801       cmp rax, 1
0x0001332b      0f864dfbffff   jbe 0x12e7e
0x00013331      ebca           jmp 0x132fd
0x00013333      488b442448     mov rax, qword [rsp + 0x48]
0x00013338      4889cf         mov rdi, rcx
0x0001333b      448984248c00.  mov dword [rsp + 0x8c], r8d
0x00013343      899424880000.  mov dword [rsp + 0x88], edx
0x0001334a      4c894c2470     mov qword [rsp + 0x70], r9
0x0001334f      4801c0         add rax, rax
0x00013352      4883c001       add rax, 1
0x00013356      4c8d14850000.  lea r10, [rax*4]
0x0001335e      4889442448     mov qword [rsp + 0x48], rax
0x00013363      4c89d6         mov rsi, r10
0x00013366      4c8994248000.  mov qword [rsp + 0x80], r10
0x0001336e      e81de9feff     call sym.imp.realloc
0x00013373      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x00013378      4c8b94248000.  mov r10, qword [rsp + 0x80]
0x00013380      4889442478     mov qword [rsp + 0x78], rax
0x00013385      498b7910       mov rdi, qword [r9 + 0x10]
0x00013389      4c89d6         mov rsi, r10
0x0001338c      e8ffe8feff     call sym.imp.realloc
0x00013391      488b4c2478     mov rcx, qword [rsp + 0x78]
0x00013396      4885c9         test rcx, rcx
0x00013399      742a           je 0x133c5
0x0001339b      4885c0         test rax, rax
0x0001339e      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x000133a3      8b9424880000.  mov edx, dword [rsp + 0x88]
0x000133aa      448b84248c00.  mov r8d, dword [rsp + 0x8c]
0x000133b2      7411           je 0x133c5
0x000133b4      49894110       mov qword [r9 + 0x10], rax
0x000133b8      49894908       mov qword [r9 + 8], rcx
0x000133bc      498b4140       mov rax, qword [r9 + 0x40]
0x000133c0      e95efbffff     jmp 0x12f23
0x000133c5      4889cf         mov rdi, rcx
0x000133c8      48890424       mov qword [rsp], rax
0x000133cc      e8ffe5feff     call sym.imp.free
0x000133d1      488b0424       mov rax, qword [rsp]
0x000133d5      4889c7         mov rdi, rax
0x000133d8      e8f3e5feff     call sym.imp.free
0x000133dd      488b442440     mov rax, qword [rsp + 0x40]
0x000133e2      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x000133e8      e93bf8ffff     jmp 0x12c28
0x000133ed      31c9           xor ecx, ecx
0x000133ef      31d2           xor edx, edx
0x000133f1      4d89f8         mov r8, r15
0x000133f4      4889ee         mov rsi, rbp
0x000133f7      4889df         mov rdi, rbx
0x000133fa      c68424b80000.  mov byte [rsp + 0xb8], 3
0x00013402      4c89a424b000.  mov qword [rsp + 0xb0], r12
0x0001340a      e8a164ffff     call sym.create_token_tree.isra.16
0x0001340f      4885c0         test rax, rax
0x00013412      0f84bbfcffff   je 0x130d3
0x00013418      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0001341d      4c8d8424c000.  lea r8, [rsp + 0xc0]
0x00013425      4889c2         mov rdx, rax
0x00013428      4889ee         mov rsi, rbp
0x0001342b      4889df         mov rdi, rbx
0x0001342e      c68424c80000.  mov byte [rsp + 0xc8], 0xa
0x00013436      e87564ffff     call sym.create_token_tree.isra.16
0x0001343b      4885c0         test rax, rax
0x0001343e      4889442428     mov qword [rsp + 0x28], rax
0x00013443      0f8503edffff   jne 0x1214c
0x00013449      e985fcffff     jmp 0x130d3
0x0001344e      e87de6feff     call sym.imp.__stack_chk_fail
0x00013453      488b442418     mov rax, qword [rsp + 0x18]
0x00013458      80780802       cmp byte [rax + 8], 2
0x0001345c      0f85eef1ffff   jne 0x12650
0x00013462      488b442440     mov rax, qword [rsp + 0x40]
0x00013467      c70009000000   mov dword [rax], 9
0x0001346d      e9e9f1ffff     jmp 0x1265b
0x00013472      488b8424b800.  mov rax, qword [rsp + 0xb8]
0x0001347a      440fb600       movzx r8d, byte [rax]
0x0001347e      e927faffff     jmp 0x12eaa
0x00013483      0f1f00         nop dword [rax]
0x00013486      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_branch:
0x00013490      4157           push r15
0x00013492      4156           push r14
0x00013494      4989cf         mov r15, rcx
0x00013497      4155           push r13
0x00013499      4154           push r12
0x0001349b      4989f5         mov r13, rsi
0x0001349e      55             push rbp
0x0001349f      53             push rbx
0x000134a0      4c89cb         mov rbx, r9
0x000134a3      4889d5         mov rbp, rdx
0x000134a6      4d89c4         mov r12, r8
0x000134a9      4883ec48       sub rsp, 0x48
0x000134ad      64488b042528.  mov rax, qword fs:[0x28]
0x000134b6      4889442438     mov qword [rsp + 0x38], rax
0x000134bb      31c0           xor eax, eax
0x000134bd      488b06         mov rax, qword [rsi]
0x000134c0      48893c24       mov qword [rsp], rdi
0x000134c4      4889442410     mov qword [rsp + 0x10], rax
0x000134c9      e8e2eaffff     call sym.parse_expression
0x000134ce      8b13           mov edx, dword [rbx]
0x000134d0      4989c6         mov r14, rax
0x000134d3      85d2           test edx, edx
0x000134d5      7409           je 0x134e0
0x000134d7      4885c0         test rax, rax
0x000134da      0f84fa000000   je 0x135da
0x000134e0      488d442420     lea rax, [rsp + 0x20]
0x000134e5      4889442418     mov qword [rsp + 0x18], rax
0x000134ea      660f1f440000   nop word [rax + rax]
0x000134f0      0fb64508       movzx eax, byte [rbp + 8]
0x000134f4      89c2           mov edx, eax
0x000134f6      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x000134f9      80fa02         cmp dl, 2
0x000134fc      0f848e000000   je 0x13590
0x00013502      3c09           cmp al, 9
0x00013504      7509           jne 0x1350f
0x00013506      4d85e4         test r12, r12
0x00013509      0f8581000000   jne 0x13590
0x0001350f      488b3c24       mov rdi, qword [rsp]
0x00013513      4989d9         mov r9, rbx
0x00013516      4d89e0         mov r8, r12
0x00013519      4c89f9         mov rcx, r15
0x0001351c      4889ea         mov rdx, rbp
0x0001351f      4c89ee         mov rsi, r13
0x00013522      e889eaffff     call sym.parse_expression
0x00013527      4989c1         mov r9, rax
0x0001352a      8b03           mov eax, dword [rbx]
0x0001352c      85c0           test eax, eax
0x0001352e      7409           je 0x13539
0x00013530      4d85c9         test r9, r9
0x00013533      0f848b000000   je 0x135c4
0x00013539      4d85f6         test r14, r14
0x0001353c      747a           je 0x135b8
0x0001353e      4d85c9         test r9, r9
0x00013541      7475           je 0x135b8
0x00013543      488b442410     mov rax, qword [rsp + 0x10]
0x00013548      4c8b442418     mov r8, qword [rsp + 0x18]
0x0001354d      4c89c9         mov rcx, r9
0x00013550      4c89f2         mov rdx, r14
0x00013553      4c894c2408     mov qword [rsp + 8], r9
0x00013558      c644242810     mov byte [rsp + 0x28], 0x10             ; [0x10:1]=3
0x0001355d      488db0800000.  lea rsi, [rax + 0x80]
0x00013564      488d7870       lea rdi, [rax + 0x70]
0x00013568      e84363ffff     call sym.create_token_tree.isra.16
0x0001356d      4885c0         test rax, rax
0x00013570      4c8b4c2408     mov r9, qword [rsp + 8]
0x00013575      7469           je 0x135e0
0x00013577      4989c6         mov r14, rax
0x0001357a      0fb64508       movzx eax, byte [rbp + 8]
0x0001357e      89c2           mov edx, eax
0x00013580      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x00013583      80fa02         cmp dl, 2
0x00013586      0f8576ffffff   jne 0x13502
0x0001358c      0f1f4000       nop dword [rax]
0x00013590      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00013595      6448330c2528.  xor rcx, qword fs:[0x28]
0x0001359e      4c89f0         mov rax, r14
0x000135a1      756a           jne 0x1360d
0x000135a3      4883c448       add rsp, 0x48
0x000135a7      5b             pop rbx
0x000135a8      5d             pop rbp
0x000135a9      415c           pop r12
0x000135ab      415d           pop r13
0x000135ad      415e           pop r14
0x000135af      415f           pop r15
0x000135b1      c3             ret
0x000135b2      660f1f440000   nop word [rax + rax]
0x000135b8      4d85f6         test r14, r14
0x000135bb      4d0f44f1       cmove r14, r9
0x000135bf      e92cffffff     jmp 0x134f0
0x000135c4      4d85f6         test r14, r14
0x000135c7      7411           je 0x135da
0x000135c9      488d35a04dff.  lea rsi, sym.free_tree                  ; 0x8370 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x000135d0      31d2           xor edx, edx
0x000135d2      4c89f7         mov rdi, r14
0x000135d5      e8f63effff     call sym.postorder
0x000135da      4531f6         xor r14d, r14d
0x000135dd      ebb1           jmp 0x13590
0x000135df      90             nop
0x000135e0      488d35894dff.  lea rsi, sym.free_tree                  ; 0x8370 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x000135e7      4c89cf         mov rdi, r9
0x000135ea      31d2           xor edx, edx
0x000135ec      e8df3effff     call sym.postorder
0x000135f1      488d35784dff.  lea rsi, sym.free_tree                  ; 0x8370 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x000135f8      4c89f7         mov rdi, r14
0x000135fb      31d2           xor edx, edx
0x000135fd      4531f6         xor r14d, r14d
0x00013600      e8cb3effff     call sym.postorder
0x00013605      c7030c000000   mov dword [rbx], 0xc                    ; [0xc:4]=0
0x0001360b      eb83           jmp 0x13590
0x0001360d      e8bee4feff     call sym.imp.__stack_chk_fail
0x00013612      0f1f4000       nop dword [rax]
0x00013616      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_reg_exp:
0x00013620      4157           push r15
0x00013622      4156           push r14
0x00013624      4989ce         mov r14, rcx
0x00013627      4155           push r13
0x00013629      4154           push r12
0x0001362b      4d89cd         mov r13, r9
0x0001362e      55             push rbp
0x0001362f      53             push rbx
0x00013630      4889d5         mov rbp, rdx
0x00013633      4989fc         mov r12, rdi
0x00013636      4883ec58       sub rsp, 0x58
0x0001363a      488b1e         mov rbx, qword [rsi]
0x0001363d      64488b042528.  mov rax, qword fs:[0x28]
0x00013646      4889442448     mov qword [rsp + 0x48], rax
0x0001364b      31c0           xor eax, eax
0x0001364d      4889742428     mov qword [rsp + 0x28], rsi
0x00013652      4c89442410     mov qword [rsp + 0x10], r8
0x00013657      488b83a80000.  mov rax, qword [rbx + 0xa8]
0x0001365e      4889442420     mov qword [rsp + 0x20], rax
0x00013663      e828feffff     call sym.parse_branch
0x00013668      418b5500       mov edx, dword [r13]
0x0001366c      4989c7         mov r15, rax
0x0001366f      85d2           test edx, edx
0x00013671      7409           je 0x1367c
0x00013673      4885c0         test rax, rax
0x00013676      0f84e6000000   je 0x13762
0x0001367c      488d442430     lea rax, [rsp + 0x30]
0x00013681      4889442408     mov qword [rsp + 8], rax
0x00013686      e989000000     jmp 0x13714
0x0001368b      0f1f440000     nop dword [rax + rax]
0x00013690      3c09           cmp al, 9
0x00013692      750c           jne 0x136a0
0x00013694      48837c241000   cmp qword [rsp + 0x10], 0
0x0001369a      0f85a8000000   jne 0x13748
0x000136a0      488b83a80000.  mov rax, qword [rbx + 0xa8]
0x000136a7      4c8b442410     mov r8, qword [rsp + 0x10]
0x000136ac      4c89f1         mov rcx, r14
0x000136af      488b742428     mov rsi, qword [rsp + 0x28]
0x000136b4      4d89e9         mov r9, r13
0x000136b7      4889ea         mov rdx, rbp
0x000136ba      4c89e7         mov rdi, r12
0x000136bd      4889442418     mov qword [rsp + 0x18], rax
0x000136c2      488b442420     mov rax, qword [rsp + 0x20]
0x000136c7      488983a80000.  mov qword [rbx + 0xa8], rax
0x000136ce      e8bdfdffff     call sym.parse_branch
0x000136d3      4889c1         mov rcx, rax
0x000136d6      418b4500       mov eax, dword [r13]
0x000136da      85c0           test eax, eax
0x000136dc      7405           je 0x136e3
0x000136de      4885c9         test rcx, rcx
0x000136e1      7469           je 0x1374c
0x000136e3      488b442418     mov rax, qword [rsp + 0x18]
0x000136e8      480983a80000.  or qword [rbx + 0xa8], rax
0x000136ef      4c8b442408     mov r8, qword [rsp + 8]
0x000136f4      488db3800000.  lea rsi, [rbx + 0x80]
0x000136fb      488d7b70       lea rdi, [rbx + 0x70]
0x000136ff      4c89fa         mov rdx, r15
0x00013702      c64424380a     mov byte [rsp + 0x38], 0xa
0x00013707      e8a461ffff     call sym.create_token_tree.isra.16
0x0001370c      4885c0         test rax, rax
0x0001370f      4989c7         mov r15, rax
0x00013712      747c           je 0x13790
0x00013714      807d080a       cmp byte [rbp + 8], 0xa
0x00013718      754e           jne 0x13768
0x0001371a      4c89f2         mov rdx, r14
0x0001371d      4c89e6         mov rsi, r12
0x00013720      4889ef         mov rdi, rbp
0x00013723      4881ca000080.  or rdx, 0x800000
0x0001372a      e8c1e0ffff     call sym.peek_token
0x0001372f      4898           cdqe
0x00013731      4901442448     add qword [r12 + 0x48], rax
0x00013736      0fb64508       movzx eax, byte [rbp + 8]
0x0001373a      89c2           mov edx, eax
0x0001373c      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x0001373f      80fa02         cmp dl, 2
0x00013742      0f8548ffffff   jne 0x13690
0x00013748      31c9           xor ecx, ecx
0x0001374a      eba3           jmp 0x136ef
0x0001374c      4d85ff         test r15, r15
0x0001374f      7411           je 0x13762
0x00013751      488d35184cff.  lea rsi, sym.free_tree                  ; 0x8370 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00013758      31d2           xor edx, edx
0x0001375a      4c89ff         mov rdi, r15
0x0001375d      e86e3dffff     call sym.postorder
0x00013762      4531ff         xor r15d, r15d
0x00013765      0f1f00         nop dword [rax]
0x00013768      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0001376d      6448330c2528.  xor rcx, qword fs:[0x28]
0x00013776      4c89f8         mov rax, r15
0x00013779      751f           jne 0x1379a
0x0001377b      4883c458       add rsp, 0x58
0x0001377f      5b             pop rbx
0x00013780      5d             pop rbp
0x00013781      415c           pop r12
0x00013783      415d           pop r13
0x00013785      415e           pop r14
0x00013787      415f           pop r15
0x00013789      c3             ret
0x0001378a      660f1f440000   nop word [rax + rax]
0x00013790      41c745000c00.  mov dword [r13], 0xc                    ; [0xc:4]=0
0x00013798      ebce           jmp 0x13768
0x0001379a      e831e3feff     call sym.imp.__stack_chk_fail
0x0001379f      90             nop
;-- re_compile_internal:
0x000137a0      4157           push r15
0x000137a2      4156           push r14
0x000137a4      4155           push r13
0x000137a6      4154           push r12
0x000137a8      55             push rbp
0x000137a9      53             push rbx
0x000137aa      4881ec280100.  sub rsp, 0x128
0x000137b1      48894f18       mov qword [rdi + 0x18], rcx
0x000137b5      48c747100000.  mov qword [rdi + 0x10], 0
0x000137bd      64488b042528.  mov rax, qword fs:[0x28]
0x000137c6      488984241801.  mov qword [rsp + 0x118], rax
0x000137ce      31c0           xor eax, eax
0x000137d0      0fb64738       movzx eax, byte [rdi + 0x38]
0x000137d4      48897c2408     mov qword [rsp + 8], rdi
0x000137d9      4889742410     mov qword [rsp + 0x10], rsi
0x000137de      48891424       mov qword [rsp], rdx
0x000137e2      48894c2418     mov qword [rsp + 0x18], rcx
0x000137e7      c744244c0000.  mov dword [rsp + 0x4c], 0
0x000137ef      48c747300000.  mov qword [rdi + 0x30], 0
0x000137f7      488b1f         mov rbx, qword [rdi]
0x000137fa      88442420       mov byte [rsp + 0x20], al
0x000137fe      83e090         and eax, 0xffffff90                     ; 4294967184
0x00013801      48817f08e700.  cmp qword [rdi + 8], 0xe7
0x00013809      884738         mov byte [rdi + 0x38], al
0x0001380c      0f86f40d0000   jbe 0x14606
0x00013812      488d7b08       lea rdi, [rbx + 8]
0x00013816      488b442408     mov rax, qword [rsp + 8]
0x0001381b      4889d9         mov rcx, rbx
0x0001381e      4883e7f8       and rdi, 0xfffffffffffffff8
0x00013822      4829f9         sub rcx, rdi
0x00013825      48c74010e800.  mov qword [rax + 0x10], 0xe8            ; [0xe8:8]=0x600000001
0x0001382d      31c0           xor eax, eax
0x0001382f      81c1e8000000   add ecx, 0xe8
0x00013835      48c703000000.  mov qword [rbx], 0
0x0001383c      48c783e00000.  mov qword [rbx + 0xe0], 0
0x00013847      c1e903         shr ecx, 3
0x0001384a      f348ab         rep stosq qword [rdi], rax
0x0001384d      48b854555555.  movabs rax, 0x555555555555554
0x00013857      c78380000000.  mov dword [rbx + 0x80], 0xf             ; [0xf:4]=0x3e000300
0x00013861      48390424       cmp qword [rsp], rax
0x00013865      0f873b060000   ja 0x13ea6
0x0001386b      4c8b3424       mov r14, qword [rsp]
0x0001386f      498d4601       lea rax, [r14 + 1]
0x00013873      4889c7         mov rdi, rax
0x00013876      48894308       mov qword [rbx + 8], rax
0x0001387a      4889442428     mov qword [rsp + 0x28], rax
0x0001387f      48c1e704       shl rdi, 4
0x00013883      e898e3feff     call sym.imp.malloc
0x00013888      4d85f6         test r14, r14
0x0001388b      488903         mov qword [rbx], rax
0x0001388e      0f84e10c0000   je 0x14575
0x00013894      be01000000     mov esi, 1
0x00013899      0f1f80000000.  nop dword [rax]
0x000138a0      4801f6         add rsi, rsi
0x000138a3      48393424       cmp qword [rsp], rsi
0x000138a7      73f7           jae 0x138a0
0x000138a9      488d6eff       lea rbp, [rsi - 1]
0x000138ad      bf18000000     mov edi, 0x18
0x000138b2      e809e3feff     call sym.imp.calloc
0x000138b7      4889ab880000.  mov qword [rbx + 0x88], rbp
0x000138be      48894340       mov qword [rbx + 0x40], rax
0x000138c2      e8d9e1feff     call sym.imp.__ctype_get_mb_cur_max
0x000138c7      bf0e000000     mov edi, 0xe
0x000138cc      8983b4000000   mov dword [rbx + 0xb4], eax
0x000138d2      e889e3feff     call sym.imp.nl_langinfo
0x000138d7      0fb610         movzx edx, byte [rax]
0x000138da      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000138dd      80fa55         cmp dl, 0x55
0x000138e0      754e           jne 0x13930
0x000138e2      0fb65001       movzx edx, byte [rax + 1]
0x000138e6      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000138e9      80fa54         cmp dl, 0x54
0x000138ec      7542           jne 0x13930
0x000138ee      0fb65002       movzx edx, byte [rax + 2]
0x000138f2      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000138f5      80fa46         cmp dl, 0x46
0x000138f8      7536           jne 0x13930
0x000138fa      31d2           xor edx, edx
0x000138fc      8078032d       cmp byte [rax + 3], 0x2d
0x00013900      488d3d3f3200.  lea rdi, [0x00016b46]                   ; "8"
0x00013907      b902000000     mov ecx, 2
0x0001390c      0f94c2         sete dl
0x0001390f      488d741003     lea rsi, [rax + rdx + 3]
0x00013914      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00013916      0f97c0         seta al
0x00013919      1c00           sbb al, 0
0x0001391b      84c0           test al, al
0x0001391d      7511           jne 0x13930
0x0001391f      808bb0000000.  or byte [rbx + 0xb0], 4
0x00013926      662e0f1f8400.  nop word cs:[rax + rax]
0x00013930      0fb683b00000.  movzx eax, byte [rbx + 0xb0]
0x00013937      89c2           mov edx, eax
0x00013939      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x0001393c      83bbb4000000.  cmp dword [rbx + 0xb4], 1
0x00013943      8893b0000000   mov byte [rbx + 0xb0], dl
0x00013949      7e13           jle 0x1395e
0x0001394b      a804           test al, 4
0x0001394d      0f8460050000   je 0x13eb3
0x00013953      488d05463700.  lea rax, obj.utf8_sb_map                ; 0x170a0
0x0001395a      48894378       mov qword [rbx + 0x78], rax
0x0001395e      48833b00       cmp qword [rbx], 0
0x00013962      0f843e050000   je 0x13ea6
0x00013968      48837b4000     cmp qword [rbx + 0x40], 0
0x0001396d      0f8433050000   je 0x13ea6
0x00013973      488b442418     mov rax, qword [rsp + 0x18]
0x00013978      488dac248000.  lea rbp, [rsp + 0x80]
0x00013980      b912000000     mov ecx, 0x12
0x00013985      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001398d      4c8d4508       lea r8, [rbp + 8]
0x00013991      2500004000     and eax, 0x400000
0x00013996      4889442420     mov qword [rsp + 0x20], rax
0x0001399b      488b442408     mov rax, qword [rsp + 8]
0x000139a0      0f95c2         setne dl
0x000139a3      4c89c7         mov rdi, r8
0x000139a6      488b7028       mov rsi, qword [rax + 0x28]
0x000139aa      31c0           xor eax, eax
0x000139ac      f348ab         rep stosq qword [rdi], rax
0x000139af      488b442410     mov rax, qword [rsp + 0x10]
0x000139b4      488b3c24       mov rdi, qword [rsp]
0x000139b8      4885f6         test rsi, rsi
0x000139bb      889424080100.  mov byte [rsp + 0x108], dl
0x000139c2      8b8bb4000000   mov ecx, dword [rbx + 0xb4]
0x000139c8      410f95c4       setne r12b
0x000139cc      4889b424f800.  mov qword [rsp + 0xf8], rsi
0x000139d4      488984248000.  mov qword [rsp + 0x80], rax
0x000139dc      0fb683b00000.  movzx eax, byte [rbx + 0xb0]
0x000139e3      4109d4         or r12d, edx
0x000139e6      4889bc24d800.  mov qword [rsp + 0xd8], rdi
0x000139ee      4889bc24d000.  mov qword [rsp + 0xd0], rdi
0x000139f6      4489e6         mov esi, r12d
0x000139f9      4488a4240b01.  mov byte [rsp + 0x10b], r12b
0x00013a01      898c24100100.  mov dword [rsp + 0x110], ecx
0x00013a08      4889bc24e800.  mov qword [rsp + 0xe8], rdi
0x00013a10      4889bc24e000.  mov qword [rsp + 0xe0], rdi
0x00013a18      89c2           mov edx, eax
0x00013a1a      c0e803         shr al, 3
0x00013a1d      c0ea02         shr dl, 2
0x00013a20      83e001         and eax, 1
0x00013a23      83e201         and edx, 1
0x00013a26      4885ff         test rdi, rdi
0x00013a29      8884240a0100.  mov byte [rsp + 0x10a], al
0x00013a30      889424090100.  mov byte [rsp + 0x109], dl
0x00013a37      0f8538040000   jne 0x13e75
0x00013a3d      4084f6         test sil, sil
0x00013a40      740d           je 0x13a4f
0x00013a42      488b84248800.  mov rax, qword [rsp + 0x88]
0x00013a4a      4889442410     mov qword [rsp + 0x10], rax
0x00013a4f      48837c242000   cmp qword [rsp + 0x20], 0
0x00013a55      488b442410     mov rax, qword [rsp + 0x10]
0x00013a5a      488984248800.  mov qword [rsp + 0x88], rax
0x00013a62      0f84fd000000   je 0x13b65
0x00013a68      83f901         cmp ecx, 1
0x00013a6b      0f8eec0b0000   jle 0x1465d
0x00013a71      4889ef         mov rdi, rbp
0x00013a74      e89740ffff     call sym.build_wcs_upper_buffer
0x00013a79      85c0           test eax, eax
0x00013a7b      7543           jne 0x13ac0
0x00013a7d      488b0424       mov rax, qword [rsp]
0x00013a81      483b8424b800.  cmp rax, qword [rsp + 0xb8]
0x00013a89      0f8eb10b0000   jle 0x14640
0x00013a8f      486383b40000.  movsxd rax, dword [rbx + 0xb4]
0x00013a96      488bb424c000.  mov rsi, qword [rsp + 0xc0]
0x00013a9e      48038424b000.  add rax, qword [rsp + 0xb0]
0x00013aa6      4839c6         cmp rsi, rax
0x00013aa9      0f8f910b0000   jg 0x14640
0x00013aaf      4801f6         add rsi, rsi
0x00013ab2      4889ef         mov rdi, rbp
0x00013ab5      e8e63affff     call sym.re_string_realloc_buffers
0x00013aba      85c0           test eax, eax
0x00013abc      74b3           je 0x13a71
0x00013abe      6690           nop
0x00013ac0      8944244c       mov dword [rsp + 0x4c], eax
0x00013ac4      488b442408     mov rax, qword [rsp + 8]
0x00013ac9      4c8b28         mov r13, qword [rax]
0x00013acc      498b7d70       mov rdi, qword [r13 + 0x70]
0x00013ad0      4885ff         test rdi, rdi
0x00013ad3      7413           je 0x13ae8
0x00013ad5      0f1f00         nop dword [rax]
0x00013ad8      4c8b27         mov r12, qword [rdi]
0x00013adb      e8f0defeff     call sym.imp.free
0x00013ae0      4d85e4         test r12, r12
0x00013ae3      4c89e7         mov rdi, r12
0x00013ae6      75f0           jne 0x13ad8
0x00013ae8      498b7d20       mov rdi, qword [r13 + 0x20]
0x00013aec      49c745700000.  mov qword [r13 + 0x70], 0
0x00013af4      41c785800000.  mov dword [r13 + 0x80], 0xf             ; [0xf:4]=0x3e000300
0x00013aff      49c745680000.  mov qword [r13 + 0x68], 0
0x00013b07      e8c4defeff     call sym.imp.free
0x00013b0c      49c745200000.  mov qword [r13 + 0x20], 0
0x00013b14      4889ef         mov rdi, rbp
0x00013b17      e8c44dffff     call sym.re_string_destruct
0x00013b1c      4889df         mov rdi, rbx
0x00013b1f      e8fc4dffff     call sym.free_dfa_content
0x00013b24      488b442408     mov rax, qword [rsp + 8]
0x00013b29      48c700000000.  mov qword [rax], 0
0x00013b30      48c740080000.  mov qword [rax + 8], 0
0x00013b38      8b44244c       mov eax, dword [rsp + 0x4c]
0x00013b3c      488b9c241801.  mov rbx, qword [rsp + 0x118]
0x00013b44      6448331c2528.  xor rbx, qword fs:[0x28]
0x00013b4d      0f853d0d0000   jne 0x14890
0x00013b53      4881c4280100.  add rsp, 0x128
0x00013b5a      5b             pop rbx
0x00013b5b      5d             pop rbp
0x00013b5c      415c           pop r12
0x00013b5e      415d           pop r13
0x00013b60      415e           pop r14
0x00013b62      415f           pop r15
0x00013b64      c3             ret
0x00013b65      83f901         cmp ecx, 1
0x00013b68      0f8fac090000   jg 0x1451a
0x00013b6e      4584e4         test r12b, r12b
0x00013b71      488bb424c000.  mov rsi, qword [rsp + 0xc0]
0x00013b79      0f8415060000   je 0x14194
0x00013b7f      4839b424d800.  cmp qword [rsp + 0xd8], rsi
0x00013b87      488b8424b000.  mov rax, qword [rsp + 0xb0]
0x00013b8f      480f4eb424d8.  cmovle rsi, qword [rsp + 0xd8]
0x00013b98      4839c6         cmp rsi, rax
0x00013b9b      7f10           jg 0x13bad
0x00013b9d      eb41           jmp 0x13be0
0x00013b9f      90             nop
0x00013ba0      488b94248800.  mov rdx, qword [rsp + 0x88]
0x00013ba8      4889542410     mov qword [rsp + 0x10], rdx
0x00013bad      488b94248000.  mov rdx, qword [rsp + 0x80]
0x00013bb5      488b8c24f800.  mov rcx, qword [rsp + 0xf8]
0x00013bbd      4801c2         add rdx, rax
0x00013bc0      48039424a800.  add rdx, qword [rsp + 0xa8]
0x00013bc8      0fb612         movzx edx, byte [rdx]
0x00013bcb      0fb61411       movzx edx, byte [rcx + rdx]
0x00013bcf      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00013bd4      881401         mov byte [rcx + rax], dl
0x00013bd7      4883c001       add rax, 1
0x00013bdb      4839c6         cmp rsi, rax
0x00013bde      75c0           jne 0x13ba0
0x00013be0      48898424b000.  mov qword [rsp + 0xb0], rax
0x00013be8      48898424b800.  mov qword [rsp + 0xb8], rax
0x00013bf0      c744244c0000.  mov dword [rsp + 0x4c], 0
0x00013bf8      4c8b642408     mov r12, qword [rsp + 8]
0x00013bfd      4c8b742418     mov r14, qword [rsp + 0x18]
0x00013c02      4c8d6c2450     lea r13, [rsp + 0x50]
0x00013c07      4889ee         mov rsi, rbp
0x00013c0a      4c89ef         mov rdi, r13
0x00013c0d      4c896c2428     mov qword [rsp + 0x28], r13
0x00013c12      4d8b3c24       mov r15, qword [r12]
0x00013c16      4c89f2         mov rdx, r14
0x00013c19      49c744243000.  mov qword [r12 + 0x30], 0
0x00013c22      4881ca000080.  or rdx, 0x800000
0x00013c29      4d89b7d80000.  mov qword [r15 + 0xd8], r14
0x00013c30      e8bbdbffff     call sym.peek_token
0x00013c35      4c8d4c244c     lea r9, [rsp + 0x4c]
0x00013c3a      4531c0         xor r8d, r8d
0x00013c3d      4c89f1         mov rcx, r14
0x00013c40      4c89ea         mov rdx, r13
0x00013c43      4c89e6         mov rsi, r12
0x00013c46      4889ef         mov rdi, rbp
0x00013c49      4898           cdqe
0x00013c4b      48018424c800.  add qword [rsp + 0xc8], rax
0x00013c53      e8c8f9ffff     call sym.parse_reg_exp
0x00013c58      8b4c244c       mov ecx, dword [rsp + 0x4c]
0x00013c5c      85c9           test ecx, ecx
0x00013c5e      0f85230a0000   jne 0x14687
0x00013c64      4d8d6f70       lea r13, [r15 + 0x70]
0x00013c68      4c8d642460     lea r12, [rsp + 0x60]
0x00013c6d      4983ef80       sub r15, 0xffffffffffffff80
0x00013c71      31d2           xor edx, edx
0x00013c73      31c9           xor ecx, ecx
0x00013c75      4c89fe         mov rsi, r15
0x00013c78      4d89e0         mov r8, r12
0x00013c7b      4c89ef         mov rdi, r13
0x00013c7e      48890424       mov qword [rsp], rax
0x00013c82      c644246802     mov byte [rsp + 0x68], 2
0x00013c87      e8245cffff     call sym.create_token_tree.isra.16
0x00013c8c      4c8b0c24       mov r9, qword [rsp]
0x00013c90      4989c3         mov r11, rax
0x00013c93      4889c2         mov rdx, rax
0x00013c96      4d85c9         test r9, r9
0x00013c99      7427           je 0x13cc2
0x00013c9b      4c89d9         mov rcx, r11
0x00013c9e      4c89ca         mov rdx, r9
0x00013ca1      4d89e0         mov r8, r12
0x00013ca4      4c89fe         mov rsi, r15
0x00013ca7      4c89ef         mov rdi, r13
0x00013caa      4c891c24       mov qword [rsp], r11
0x00013cae      c644246810     mov byte [rsp + 0x68], 0x10             ; [0x10:1]=3
0x00013cb3      e8f85bffff     call sym.create_token_tree.isra.16
0x00013cb8      4c8b1c24       mov r11, qword [rsp]
0x00013cbc      4c89da         mov rdx, r11
0x00013cbf      4989c3         mov r11, rax
0x00013cc2      4885d2         test rdx, rdx
0x00013cc5      488b4c2408     mov rcx, qword [rsp + 8]
0x00013cca      0f94c2         sete dl
0x00013ccd      4d85db         test r11, r11
0x00013cd0      0f94c0         sete al
0x00013cd3      08c2           or dl, al
0x00013cd5      4c8b29         mov r13, qword [rcx]
0x00013cd8      0f8594090000   jne 0x14672
0x00013cde      4d8b7d08       mov r15, qword [r13 + 8]
0x00013ce2      4c895b68       mov qword [rbx + 0x68], r11
0x00013ce6      4a8d0cfd0000.  lea rcx, [r15*8]
0x00013cee      4f8d3c7f       lea r15, [r15 + r15*2]
0x00013cf2      4889cf         mov rdi, rcx
0x00013cf5      48890c24       mov qword [rsp], rcx
0x00013cf9      49c1e703       shl r15, 3
0x00013cfd      e81edffeff     call sym.imp.malloc
0x00013d02      488b0c24       mov rcx, qword [rsp]
0x00013d06      49894518       mov qword [r13 + 0x18], rax
0x00013d0a      4889442418     mov qword [rsp + 0x18], rax
0x00013d0f      4889cf         mov rdi, rcx
0x00013d12      e809dffeff     call sym.imp.malloc
0x00013d17      4c89ff         mov rdi, r15
0x00013d1a      49894520       mov qword [r13 + 0x20], rax
0x00013d1e      4889442410     mov qword [rsp + 0x10], rax
0x00013d23      e8f8defeff     call sym.imp.malloc
0x00013d28      4c89ff         mov rdi, r15
0x00013d2b      49894528       mov qword [r13 + 0x28], rax
0x00013d2f      48890424       mov qword [rsp], rax
0x00013d33      e8e8defeff     call sym.imp.malloc
0x00013d38      488b542418     mov rdx, qword [rsp + 0x18]
0x00013d3d      49894530       mov qword [r13 + 0x30], rax
0x00013d41      488b3424       mov rsi, qword [rsp]
0x00013d45      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00013d4a      4885d2         test rdx, rdx
0x00013d4d      0f84ba070000   je 0x1450d
0x00013d53      4885c9         test rcx, rcx
0x00013d56      0f84b1070000   je 0x1450d
0x00013d5c      4885f6         test rsi, rsi
0x00013d5f      0f84a8070000   je 0x1450d
0x00013d65      4885c0         test rax, rax
0x00013d68      0f849f070000   je 0x1450d
0x00013d6e      488b442408     mov rax, qword [rsp + 8]
0x00013d73      4c8b7830       mov r15, qword [rax + 0x30]
0x00013d77      4a8d3cfd0000.  lea rdi, [r15*8]
0x00013d7f      e89cdefeff     call sym.imp.malloc
0x00013d84      4885c0         test rax, rax
0x00013d87      498985e00000.  mov qword [r13 + 0xe0], rax
0x00013d8e      746d           je 0x13dfd
0x00013d90      4d85ff         test r15, r15
0x00013d93      7418           je 0x13dad
0x00013d95      31d2           xor edx, edx
0x00013d97      660f1f840000.  nop word [rax + rax]
0x00013da0      488914d0       mov qword [rax + rdx*8], rdx
0x00013da4      4883c201       add rdx, 1
0x00013da8      4c39fa         cmp rdx, r15
0x00013dab      75f3           jne 0x13da0
0x00013dad      498b7d68       mov rdi, qword [r13 + 0x68]
0x00013db1      488d35f84fff.  lea rsi, sym.optimize_subexps           ; 0x8db0
0x00013db8      4c89ea         mov rdx, r13
0x00013dbb      e88037ffff     call sym.preorder
0x00013dc0      488b442408     mov rax, qword [rsp + 8]
0x00013dc5      498bbde00000.  mov rdi, qword [r13 + 0xe0]
0x00013dcc      488b5030       mov rdx, qword [rax + 0x30]
0x00013dd0      4885d2         test rdx, rdx
0x00013dd3      0f84eb080000   je 0x146c4
0x00013dd9      488b07         mov rax, qword [rdi]
0x00013ddc      4885c0         test rax, rax
0x00013ddf      740d           je 0x13dee
0x00013de1      eb1a           jmp 0x13dfd
0x00013de3      0f1f440000     nop dword [rax + rax]
0x00013de8      483904c7       cmp qword [rdi + rax*8], rax
0x00013dec      750f           jne 0x13dfd
0x00013dee      4883c001       add rax, 1
0x00013df2      4839c2         cmp rdx, rax
0x00013df5      77f1           ja 0x13de8
0x00013df7      0f84c7080000   je 0x146c4
0x00013dfd      498b7d68       mov rdi, qword [r13 + 0x68]
0x00013e01      488b542408     mov rdx, qword [rsp + 8]
0x00013e06      488d35a35eff.  lea rsi, sym.lower_subexps              ; 0x9cb0 ; "USH\x89\xfdH\x89\xf3H\x83\xec\x18H\x8bV\bdH\x8b\x04%("
0x00013e0d      e8be36ffff     call sym.postorder
0x00013e12      85c0           test eax, eax
0x00013e14      0f85a6fcffff   jne 0x13ac0
0x00013e1a      498b7d68       mov rdi, qword [r13 + 0x68]
0x00013e1e      488d35fb83ff.  lea rsi, sym.calc_first                 ; 0xc220
0x00013e25      4c89ea         mov rdx, r13
0x00013e28      e8a336ffff     call sym.postorder
0x00013e2d      85c0           test eax, eax
0x00013e2f      0f858bfcffff   jne 0x13ac0
0x00013e35      498b7d68       mov rdi, qword [r13 + 0x68]
0x00013e39      488d350050ff.  lea rsi, sym.calc_next                  ; 0x8e40
0x00013e40      4c89ea         mov rdx, r13
0x00013e43      e8f836ffff     call sym.preorder
0x00013e48      498b5568       mov rdx, qword [r13 + 0x68]
0x00013e4c      488d35553100.  lea rsi, [0x00016fa8]
0x00013e53      0f1f440000     nop dword [rax + rax]
0x00013e58      0fb64a30       movzx ecx, byte [rdx + 0x30]
0x00013e5c      488b7a38       mov rdi, qword [rdx + 0x38]
0x00013e60      80f910         cmp cl, 0x10
0x00013e63      0f87cf000000   ja 0x13f38
0x00013e69      0fb6c1         movzx eax, cl
0x00013e6c      48630486       movsxd rax, dword [rsi + rax*4]
0x00013e70      4801f0         add rax, rsi
0x00013e73      ffe0           jmp rax
0x00013e75      488b742428     mov rsi, qword [rsp + 0x28]
0x00013e7a      4889ef         mov rdi, rbp
0x00013e7d      e81e37ffff     call sym.re_string_realloc_buffers
0x00013e82      85c0           test eax, eax
0x00013e84      0f8536fcffff   jne 0x13ac0
0x00013e8a      0fb6b4240b01.  movzx esi, byte [rsp + 0x10b]
0x00013e92      8b8bb4000000   mov ecx, dword [rbx + 0xb4]
0x00013e98      4084f6         test sil, sil
0x00013e9b      0f84aefbffff   je 0x13a4f
0x00013ea1      e99cfbffff     jmp 0x13a42
0x00013ea6      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x00013eae      e969fcffff     jmp 0x13b1c
0x00013eb3      be01000000     mov esi, 1
0x00013eb8      bf20000000     mov edi, 0x20                           ; "@"
0x00013ebd      e8fedcfeff     call sym.imp.calloc
0x00013ec2      4885c0         test rax, rax
0x00013ec5      48894378       mov qword [rbx + 0x78], rax
0x00013ec9      74db           je 0x13ea6
0x00013ecb      4531e4         xor r12d, r12d
0x00013ece      31ed           xor ebp, ebp
0x00013ed0      41bd01000000   mov r13d, 1
0x00013ed6      4531ff         xor r15d, r15d
0x00013ed9      0f1f80000000.  nop dword [rax]
0x00013ee0      468d743d00     lea r14d, [rbp + r15]
0x00013ee5      4489f7         mov edi, r14d
0x00013ee8      e8e3ddfeff     call sym.imp.btowc
0x00013eed      83f8ff         cmp eax, 0xffffffff
0x00013ef0      7413           je 0x13f05
0x00013ef2      488b7378       mov rsi, qword [rbx + 0x78]
0x00013ef6      4c89ef         mov rdi, r13
0x00013ef9      4489f9         mov ecx, r15d
0x00013efc      48d3e7         shl rdi, cl
0x00013eff      4c01e6         add rsi, r12
0x00013f02      48093e         or qword [rsi], rdi
0x00013f05      41f7c680ffff.  test r14d, 0xffffff80                   ; 4294967168
0x00013f0c      750c           jne 0x13f1a
0x00013f0e      4439f0         cmp eax, r14d
0x00013f11      7407           je 0x13f1a
0x00013f13      808bb0000000.  or byte [rbx + 0xb0], 8
0x00013f1a      4983c701       add r15, 1
0x00013f1e      4983ff40       cmp r15, 0x40                           ; segment.PHDR
0x00013f22      75bc           jne 0x13ee0
0x00013f24      83c540         add ebp, 0x40                           ; segment.PHDR
0x00013f27      4983c408       add r12, 8
0x00013f2b      81fd00010000   cmp ebp, 0x100
0x00013f31      75a3           jne 0x13ed6
0x00013f33      e926faffff     jmp 0x1395e
0x00013f38      83e108         and ecx, 8
0x00013f3b      0f8511090000   jne 0x14852
0x00013f41      488b4220       mov rax, qword [rdx + 0x20]
0x00013f45      488b4838       mov rcx, qword [rax + 0x38]
0x00013f49      498b4518       mov rax, qword [r13 + 0x18]
0x00013f4d      48890cf8       mov qword [rax + rdi*8], rcx
0x00013f51      4c8b7a08       mov r15, qword [rdx + 8]
0x00013f55      31ff           xor edi, edi
0x00013f57      4d85ff         test r15, r15
0x00013f5a      740f           je 0x13f6b
0x00013f5c      4c89fa         mov rdx, r15
0x00013f5f      e9f4feffff     jmp 0x13e58
0x00013f64      0f1f4000       nop dword [rax]
0x00013f68      4889c2         mov rdx, rax
0x00013f6b      4c8b7a10       mov r15, qword [rdx + 0x10]
0x00013f6f      4d85ff         test r15, r15
0x00013f72      0f94c1         sete cl
0x00013f75      4939ff         cmp r15, rdi
0x00013f78      0f94c0         sete al
0x00013f7b      08c1           or cl, al
0x00013f7d      884c2410       mov byte [rsp + 0x10], cl
0x00013f81      74d9           je 0x13f5c
0x00013f83      488b02         mov rax, qword [rdx]
0x00013f86      4889d7         mov rdi, rdx
0x00013f89      4885c0         test rax, rax
0x00013f8c      75da           jne 0x13f68
0x00013f8e      4531f6         xor r14d, r14d
0x00013f91      4531ff         xor r15d, r15d
0x00013f94      0f1f4000       nop dword [rax]
0x00013f98      498b5510       mov rdx, qword [r13 + 0x10]
0x00013f9c      4c39fa         cmp rdx, r15
0x00013f9f      7425           je 0x13fc6
0x00013fa1      4f8d147f       lea r10, [r15 + r15*2]
0x00013fa5      498b4530       mov rax, qword [r13 + 0x30]
0x00013fa9      49c1e203       shl r10, 3
0x00013fad      4a837c100800   cmp qword [rax + r10 + 8], 0
0x00013fb3      0f84ff010000   je 0x141b8
0x00013fb9      498b5510       mov rdx, qword [r13 + 0x10]
0x00013fbd      4983c701       add r15, 1
0x00013fc1      4c39fa         cmp rdx, r15
0x00013fc4      75db           jne 0x13fa1
0x00013fc6      4584f6         test r14b, r14b
0x00013fc9      0f843f020000   je 0x1420e
0x00013fcf      4531f6         xor r14d, r14d
0x00013fd2      4531ff         xor r15d, r15d
0x00013fd5      ebca           jmp 0x13fa1
0x00013fd7      41808db00000.  or byte [r13 + 0xb0], 1
0x00013fdf      4c8b7a08       mov r15, qword [rdx + 8]
0x00013fe3      4d85ff         test r15, r15
0x00013fe6      0f840d060000   je 0x145f9
0x00013fec      498b4718       mov rax, qword [r15 + 0x18]
0x00013ff0      488b4838       mov rcx, qword [rax + 0x38]
0x00013ff4      488b4210       mov rax, qword [rdx + 0x10]
0x00013ff8      4885c0         test rax, rax
0x00013ffb      0f84eb050000   je 0x145ec
0x00014001      488b4018       mov rax, qword [rax + 0x18]
0x00014005      4c8b4838       mov r9, qword [rax + 0x38]
0x00014009      4885c9         test rcx, rcx
0x0001400c      0f885f080000   js 0x14871
0x00014012      4d85c9         test r9, r9
0x00014015      0f8818080000   js 0x14833
0x0001401b      498b4528       mov rax, qword [r13 + 0x28]
0x0001401f      488d3c7f       lea rdi, [rdi + rdi*2]
0x00014023      4889742438     mov qword [rsp + 0x38], rsi
0x00014028      4c894c2430     mov qword [rsp + 0x30], r9
0x0001402d      48894c2418     mov qword [rsp + 0x18], rcx
0x00014032      4889542410     mov qword [rsp + 0x10], rdx
0x00014037      4c8d14f8       lea r10, [rax + rdi*8]
0x0001403b      bf10000000     mov edi, 0x10
0x00014040      49c702020000.  mov qword [r10], 2
0x00014047      4c891424       mov qword [rsp], r10
0x0001404b      e8d0dbfeff     call sym.imp.malloc
0x00014050      4c8b1424       mov r10, qword [rsp]
0x00014054      4885c0         test rax, rax
0x00014057      488b542410     mov rdx, qword [rsp + 0x10]
0x0001405c      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00014061      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00014066      488b742438     mov rsi, qword [rsp + 0x38]
0x0001406b      49894210       mov qword [r10 + 0x10], rax
0x0001406f      0f8495020000   je 0x1430a
0x00014075      4c39c9         cmp rcx, r9
0x00014078      0f84cf050000   je 0x1464d
0x0001407e      49c742080200.  mov qword [r10 + 8], 2
0x00014086      0f8ca8050000   jl 0x14634
0x0001408c      4c8908         mov qword [rax], r9
0x0001408f      48894808       mov qword [rax + 8], rcx
0x00014093      e9bdfeffff     jmp 0x13f55
0x00014098      488b4220       mov rax, qword [rdx + 0x20]
0x0001409c      488d0c7f       lea rcx, [rdi + rdi*2]
0x000140a0      bf08000000     mov edi, 8
0x000140a5      4889742410     mov qword [rsp + 0x10], rsi
0x000140aa      48891424       mov qword [rsp], rdx
0x000140ae      4c8b7038       mov r14, qword [rax + 0x38]
0x000140b2      498b4528       mov rax, qword [r13 + 0x28]
0x000140b6      4c8d3cc8       lea r15, [rax + rcx*8]
0x000140ba      49c707010000.  mov qword [r15], 1
0x000140c1      49c747080100.  mov qword [r15 + 8], 1
0x000140c9      e852dbfeff     call sym.imp.malloc
0x000140ce      4885c0         test rax, rax
0x000140d1      49894710       mov qword [r15 + 0x10], rax
0x000140d5      488b1424       mov rdx, qword [rsp]
0x000140d9      488b742410     mov rsi, qword [rsp + 0x10]
0x000140de      0f84a4060000   je 0x14788
0x000140e4      4c8930         mov qword [rax], r14
0x000140e7      4c8b7a08       mov r15, qword [rdx + 8]
0x000140eb      e965feffff     jmp 0x13f55
0x000140f0      48837a2000     cmp qword [rdx + 0x20], 0
0x000140f5      0f8456feffff   je 0x13f51
0x000140fb      488d0d5e2f00.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x17060 ; "link_nfa_nodes"
0x00014102      488d35972900.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x16aa0 ; "../coreutils-8.31/lib/regcomp.c"
0x00014109      488d3d382a00.  lea rdi, str.node__next____NULL         ; 0x16b48 ; "node->next == NULL"
0x00014110      ba9f050000     mov edx, 0x59f
0x00014115      e836dafeff     call sym.imp.__assert_fail
0x0001411a      660f1f440000   nop word [rax + rax]
0x00014120      488b4220       mov rax, qword [rdx + 0x20]
0x00014124      4c8b7838       mov r15, qword [rax + 0x38]
0x00014128      498b4518       mov rax, qword [r13 + 0x18]
0x0001412c      4c893cf8       mov qword [rax + rdi*8], r15
0x00014130      807a3004       cmp byte [rdx + 0x30], 4
0x00014134      0f8517feffff   jne 0x13f51
0x0001413a      498b4528       mov rax, qword [r13 + 0x28]
0x0001413e      488d0c7f       lea rcx, [rdi + rdi*2]
0x00014142      bf08000000     mov edi, 8
0x00014147      4889742418     mov qword [rsp + 0x18], rsi
0x0001414c      4889542410     mov qword [rsp + 0x10], rdx
0x00014151      488d0cc8       lea rcx, [rax + rcx*8]
0x00014155      48c701010000.  mov qword [rcx], 1
0x0001415c      48c741080100.  mov qword [rcx + 8], 1
0x00014164      48890c24       mov qword [rsp], rcx
0x00014168      e8b3dafeff     call sym.imp.malloc
0x0001416d      488b0c24       mov rcx, qword [rsp]
0x00014171      4885c0         test rax, rax
0x00014174      488b542410     mov rdx, qword [rsp + 0x10]
0x00014179      488b742418     mov rsi, qword [rsp + 0x18]
0x0001417e      48894110       mov qword [rcx + 0x10], rax
0x00014182      0f8448060000   je 0x147d0
0x00014188      4c8938         mov qword [rax], r15
0x0001418b      4c8b7a08       mov r15, qword [rdx + 8]
0x0001418f      e9c1fdffff     jmp 0x13f55
0x00014194      4889b424b000.  mov qword [rsp + 0xb0], rsi
0x0001419c      4889b424b800.  mov qword [rsp + 0xb8], rsi
0x000141a4      c744244c0000.  mov dword [rsp + 0x4c], 0
0x000141ac      e947faffff     jmp 0x13bf8
0x000141b1      0f1f80000000.  nop dword [rax]
0x000141b8      b901000000     mov ecx, 1
0x000141bd      4c89fa         mov rdx, r15
0x000141c0      4c89ee         mov rsi, r13
0x000141c3      4c89e7         mov rdi, r12
0x000141c6      4c891424       mov qword [rsp], r10
0x000141ca      e82151ffff     call sym.calc_eclosure_iter
0x000141cf      85c0           test eax, eax
0x000141d1      0f85e9f8ffff   jne 0x13ac0
0x000141d7      498b4530       mov rax, qword [r13 + 0x30]
0x000141db      4c8b1424       mov r10, qword [rsp]
0x000141df      4983c701       add r15, 1
0x000141e3      4a837c100800   cmp qword [rax + r10 + 8], 0
0x000141e9      0f85a9fdffff   jne 0x13f98
0x000141ef      488b7c2470     mov rdi, qword [rsp + 0x70]
0x000141f4      e8d7d7feff     call sym.imp.free
0x000141f9      4d397d10       cmp qword [r13 + 0x10], r15
0x000141fd      0f84ccfdffff   je 0x13fcf
0x00014203      440fb6742410   movzx r14d, byte [rsp + 0x10]
0x00014209      e993fdffff     jmp 0x13fa1
0x0001420e      488b442408     mov rax, qword [rsp + 8]
0x00014213      f6403810       test byte [rax + 0x38], 0x10
0x00014217      7511           jne 0x1422a
0x00014219      4883783000     cmp qword [rax + 0x30], 0
0x0001421e      740a           je 0x1422a
0x00014220      41f685b00000.  test byte [r13 + 0xb0], 1
0x00014228      750e           jne 0x14238
0x0001422a      4983bd980000.  cmp qword [r13 + 0x98], 0
0x00014232      0f84f3000000   je 0x1432b
0x00014238      488d3c52       lea rdi, [rdx + rdx*2]
0x0001423c      48891424       mov qword [rsp], rdx
0x00014240      48c1e703       shl rdi, 3
0x00014244      e8d7d9feff     call sym.imp.malloc
0x00014249      4885c0         test rax, rax
0x0001424c      49894538       mov qword [r13 + 0x38], rax
0x00014250      0f8446050000   je 0x1479c
0x00014256      488b1424       mov rdx, qword [rsp]
0x0001425a      31f6           xor esi, esi
0x0001425c      31c9           xor ecx, ecx
0x0001425e      4885d2         test rdx, rdx
0x00014261      7511           jne 0x14274
0x00014263      e9c3000000     jmp 0x1432b
0x00014268      0f1f84000000.  nop dword [rax + rax]
0x00014270      498b4538       mov rax, qword [r13 + 0x38]
0x00014274      660fefc0       pxor xmm0, xmm0
0x00014278      4801f0         add rax, rsi
0x0001427b      4883c101       add rcx, 1
0x0001427f      48c740100000.  mov qword [rax + 0x10], 0
0x00014287      4883c618       add rsi, 0x18
0x0001428b      0f1100         movups xmmword [rax], xmm0
0x0001428e      498b4510       mov rax, qword [r13 + 0x10]
0x00014292      4839c1         cmp rcx, rax
0x00014295      72d9           jb 0x14270
0x00014297      4885c0         test rax, rax
0x0001429a      0f848b000000   je 0x1432b
0x000142a0      498b4530       mov rax, qword [r13 + 0x30]
0x000142a4      48c744241800.  mov qword [rsp + 0x18], 0
0x000142ad      48c744241000.  mov qword [rsp + 0x10], 0
0x000142b6      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000142bb      488d1408       lea rdx, [rax + rcx]
0x000142bf      48837a0800     cmp qword [rdx + 8], 0
0x000142c4      488b4a10       mov rcx, qword [rdx + 0x10]
0x000142c8      7e4a           jle 0x14314
0x000142ca      4531ff         xor r15d, r15d
0x000142cd      eb19           jmp 0x142e8
0x000142cf      90             nop
0x000142d0      498b4530       mov rax, qword [r13 + 0x30]
0x000142d4      488b542418     mov rdx, qword [rsp + 0x18]
0x000142d9      4983c701       add r15, 1
0x000142dd      488b0c24       mov rcx, qword [rsp]
0x000142e1      4c3b7c1008     cmp r15, qword [rax + rdx + 8]
0x000142e6      7d2c           jge 0x14314
0x000142e8      4a8b04f9       mov rax, qword [rcx + r15*8]
0x000142ec      48890c24       mov qword [rsp], rcx
0x000142f0      488d3440       lea rsi, [rax + rax*2]
0x000142f4      498b4538       mov rax, qword [r13 + 0x38]
0x000142f8      488d3cf0       lea rdi, [rax + rsi*8]
0x000142fc      488b742410     mov rsi, qword [rsp + 0x10]
0x00014301      e83a33ffff     call sym.re_node_set_insert_last
0x00014306      84c0           test al, al
0x00014308      75c6           jne 0x142d0
0x0001430a      b80c000000     mov eax, 0xc
0x0001430f      e9acf7ffff     jmp 0x13ac0
0x00014314      488344241001   add qword [rsp + 0x10], 1
0x0001431a      488344241818   add qword [rsp + 0x18], 0x18            ; [0x18:8]=0x1fd0 rip
0x00014320      488b542410     mov rdx, qword [rsp + 0x10]
0x00014325      493b5510       cmp rdx, qword [r13 + 0x10]
0x00014329      728b           jb 0x142b6
0x0001432b      0fb683b00000.  movzx eax, byte [rbx + 0xb0]
0x00014332      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001433a      c0e802         shr al, 2
0x0001433d      48837c242000   cmp qword [rsp + 0x20], 0
0x00014343      0f94c2         sete dl
0x00014346      20d0           and al, dl
0x00014348      0f85e1010000   jne 0x1452f
0x0001434e      488b4368       mov rax, qword [rbx + 0x68]
0x00014352      4c89e7         mov rdi, r12
0x00014355      488b4018       mov rax, qword [rax + 0x18]
0x00014359      488b4038       mov rax, qword [rax + 0x38]
0x0001435d      488d1440       lea rdx, [rax + rax*2]
0x00014361      488983900000.  mov qword [rbx + 0x90], rax
0x00014368      488b4330       mov rax, qword [rbx + 0x30]
0x0001436c      488d34d0       lea rsi, [rax + rdx*8]
0x00014370      e8db59ffff     call sym.re_node_set_init_copy
0x00014375      85c0           test eax, eax
0x00014377      4189c7         mov r15d, eax
0x0001437a      89442450       mov dword [rsp + 0x50], eax
0x0001437e      0f851b010000   jne 0x1449f
0x00014384      4883bb980000.  cmp qword [rbx + 0x98], 0
0x0001438c      0f8ece000000   jle 0x14460
0x00014392      4c8b4c2468     mov r9, qword [rsp + 0x68]
0x00014397      4d85c9         test r9, r9
0x0001439a      0f8ec0000000   jle 0x14460
0x000143a0      4531d2         xor r10d, r10d
0x000143a3      4d8d6c2410     lea r13, [r12 + 0x10]
0x000143a8      eb13           jmp 0x143bd
0x000143aa      660f1f440000   nop word [rax + rax]
0x000143b0      4983c201       add r10, 1
0x000143b4      4d39d1         cmp r9, r10
0x000143b7      0f8ea3000000   jle 0x14460
0x000143bd      488b4c2470     mov rcx, qword [rsp + 0x70]
0x000143c2      488b33         mov rsi, qword [rbx]
0x000143c5      4e8b04d1       mov r8, qword [rcx + r10*8]
0x000143c9      4c89c7         mov rdi, r8
0x000143cc      48c1e704       shl rdi, 4
0x000143d0      4801f7         add rdi, rsi
0x000143d3      807f0804       cmp byte [rdi + 8], 4
0x000143d7      75d7           jne 0x143b0
0x000143d9      31d2           xor edx, edx
0x000143db      eb0c           jmp 0x143e9
0x000143dd      0f1f00         nop dword [rax]
0x000143e0      4883c201       add rdx, 1
0x000143e4      4939d1         cmp r9, rdx
0x000143e7      74c7           je 0x143b0
0x000143e9      488b04d1       mov rax, qword [rcx + rdx*8]
0x000143ed      48c1e004       shl rax, 4
0x000143f1      4801f0         add rax, rsi
0x000143f4      80780809       cmp byte [rax + 8], 9
0x000143f8      75e6           jne 0x143e0
0x000143fa      4c8b1f         mov r11, qword [rdi]
0x000143fd      4c3918         cmp qword [rax], r11
0x00014400      75de           jne 0x143e0
0x00014402      488b5328       mov rdx, qword [rbx + 0x28]
0x00014406      4b8d0440       lea rax, [r8 + r8*2]
0x0001440a      4c89ee         mov rsi, r13
0x0001440d      4c89cf         mov rdi, r9
0x00014410      488d04c2       lea rax, [rdx + rax*8]
0x00014414      488b4010       mov rax, qword [rax + 0x10]
0x00014418      4c8b18         mov r11, qword [rax]
0x0001441b      4c89da         mov rdx, r11
0x0001441e      e8cd47ffff     call sym.re_node_set_contains.isra.3
0x00014423      4885c0         test rax, rax
0x00014426      7588           jne 0x143b0
0x00014428      488b4330       mov rax, qword [rbx + 0x30]
0x0001442c      4b8d145b       lea rdx, [r11 + r11*2]
0x00014430      4c89e7         mov rdi, r12
0x00014433      488d34d0       lea rsi, [rax + rdx*8]
0x00014437      e8d44cffff     call sym.re_node_set_merge
0x0001443c      85c0           test eax, eax
0x0001443e      0f853c030000   jne 0x14780
0x00014444      4c8b4c2468     mov r9, qword [rsp + 0x68]
0x00014449      41ba01000000   mov r10d, 1
0x0001444f      4d39d1         cmp r9, r10
0x00014452      0f8f65ffffff   jg 0x143bd
0x00014458      0f1f84000000.  nop dword [rax + rax]
0x00014460      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00014465      31c9           xor ecx, ecx
0x00014467      4c89e2         mov rdx, r12
0x0001446a      4889de         mov rsi, rbx
0x0001446d      e8ce5affff     call sym.re_acquire_state_context
0x00014472      4885c0         test rax, rax
0x00014475      48894348       mov qword [rbx + 0x48], rax
0x00014479      0f8463010000   je 0x145e2
0x0001447f      80786800       cmp byte [rax + 0x68], 0
0x00014483      0f88f8000000   js 0x14581
0x00014489      48894360       mov qword [rbx + 0x60], rax
0x0001448d      48894358       mov qword [rbx + 0x58], rax
0x00014491      48894350       mov qword [rbx + 0x50], rax
0x00014495      488b7c2470     mov rdi, qword [rsp + 0x70]
0x0001449a      e831d5feff     call sym.imp.free
0x0001449f      488b442408     mov rax, qword [rsp + 8]
0x000144a4      44897c244c     mov dword [rsp + 0x4c], r15d
0x000144a9      4c8b28         mov r13, qword [rax]
0x000144ac      498b7d70       mov rdi, qword [r13 + 0x70]
0x000144b0      4885ff         test rdi, rdi
0x000144b3      7413           je 0x144c8
0x000144b5      0f1f00         nop dword [rax]
0x000144b8      4c8b27         mov r12, qword [rdi]
0x000144bb      e810d5feff     call sym.imp.free
0x000144c0      4d85e4         test r12, r12
0x000144c3      4c89e7         mov rdi, r12
0x000144c6      75f0           jne 0x144b8
0x000144c8      498b7d20       mov rdi, qword [r13 + 0x20]
0x000144cc      49c745700000.  mov qword [r13 + 0x70], 0
0x000144d4      41c785800000.  mov dword [r13 + 0x80], 0xf             ; [0xf:4]=0x3e000300
0x000144df      49c745680000.  mov qword [r13 + 0x68], 0
0x000144e7      e8e4d4feff     call sym.imp.free
0x000144ec      49c745200000.  mov qword [r13 + 0x20], 0
0x000144f4      4889ef         mov rdi, rbp
0x000144f7      e8e443ffff     call sym.re_string_destruct
0x000144fc      8b44244c       mov eax, dword [rsp + 0x4c]
0x00014500      85c0           test eax, eax
0x00014502      0f8434f6ffff   je 0x13b3c
0x00014508      e90ff6ffff     jmp 0x13b1c
0x0001450d      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x00014515      e9b2f5ffff     jmp 0x13acc
0x0001451a      4889ef         mov rdi, rbp
0x0001451d      e81e34ffff     call sym.build_wcs_buffer
0x00014522      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001452a      e9c9f6ffff     jmp 0x13bf8
0x0001452f      488b4c2408     mov rcx, qword [rsp + 8]
0x00014534      4883792800     cmp qword [rcx + 0x28], 0
0x00014539      0f850ffeffff   jne 0x1434e
0x0001453f      4c8b5310       mov r10, qword [rbx + 0x10]
0x00014543      4d85d2         test r10, r10
0x00014546      0f84ae020000   je 0x147fa
0x0001454c      488b33         mov rsi, qword [rbx]
0x0001454f      4c8d0d962a00.  lea r9, [0x00016fec]
0x00014556      4531c0         xor r8d, r8d
0x00014559      31d2           xor edx, edx
0x0001455b      4889f1         mov rcx, rsi
0x0001455e      8079080c       cmp byte [rcx + 8], 0xc
0x00014562      0f87c6020000   ja 0x1482e
0x00014568      0fb67908       movzx edi, byte [rcx + 8]
0x0001456c      49633cb9       movsxd rdi, dword [r9 + rdi*4]
0x00014570      4c01cf         add rdi, r9
0x00014573      ffe7           jmp rdi
0x00014575      31ed           xor ebp, ebp
0x00014577      be01000000     mov esi, 1
0x0001457c      e92cf3ffff     jmp 0x138ad
0x00014581      4c8b742428     mov r14, qword [rsp + 0x28]
0x00014586      b901000000     mov ecx, 1
0x0001458b      4c89e2         mov rdx, r12
0x0001458e      4889de         mov rsi, rbx
0x00014591      4c89f7         mov rdi, r14
0x00014594      e8a759ffff     call sym.re_acquire_state_context
0x00014599      b902000000     mov ecx, 2
0x0001459e      4c89e2         mov rdx, r12
0x000145a1      4889de         mov rsi, rbx
0x000145a4      4c89f7         mov rdi, r14
0x000145a7      48894350       mov qword [rbx + 0x50], rax
0x000145ab      e89059ffff     call sym.re_acquire_state_context
0x000145b0      b906000000     mov ecx, 6
0x000145b5      48894358       mov qword [rbx + 0x58], rax
0x000145b9      4c89e2         mov rdx, r12
0x000145bc      4889de         mov rsi, rbx
0x000145bf      4c89f7         mov rdi, r14
0x000145c2      e87959ffff     call sym.re_acquire_state_context
0x000145c7      48837b5000     cmp qword [rbx + 0x50], 0
0x000145cc      48894360       mov qword [rbx + 0x60], rax
0x000145d0      7410           je 0x145e2
0x000145d2      48837b5800     cmp qword [rbx + 0x58], 0
0x000145d7      7409           je 0x145e2
0x000145d9      4885c0         test rax, rax
0x000145dc      0f85b3feffff   jne 0x14495
0x000145e2      448b7c2450     mov r15d, dword [rsp + 0x50]
0x000145e7      e9b3feffff     jmp 0x1449f
0x000145ec      488b4220       mov rax, qword [rdx + 0x20]
0x000145f0      4c8b4838       mov r9, qword [rax + 0x38]
0x000145f4      e910faffff     jmp 0x14009
0x000145f9      488b4220       mov rax, qword [rdx + 0x20]
0x000145fd      488b4838       mov rcx, qword [rax + 0x38]
0x00014601      e9eef9ffff     jmp 0x13ff4
0x00014606      4889df         mov rdi, rbx
0x00014609      bee8000000     mov esi, 0xe8
0x0001460e      e87dd6feff     call sym.imp.realloc
0x00014613      4885c0         test rax, rax
0x00014616      4889c3         mov rbx, rax
0x00014619      0f8492010000   je 0x147b1
0x0001461f      488b442408     mov rax, qword [rsp + 8]
0x00014624      48c74008e800.  mov qword [rax + 8], 0xe8               ; [0xe8:8]=0x600000001
0x0001462c      488918         mov qword [rax], rbx
0x0001462f      e9def1ffff     jmp 0x13812
0x00014634      488908         mov qword [rax], rcx
0x00014637      4c894808       mov qword [rax + 8], r9
0x0001463b      e915f9ffff     jmp 0x13f55
0x00014640      c744244c0000.  mov dword [rsp + 0x4c], 0
0x00014648      e9abf5ffff     jmp 0x13bf8
0x0001464d      49c742080100.  mov qword [r10 + 8], 1
0x00014655      488908         mov qword [rax], rcx
0x00014658      e9f8f8ffff     jmp 0x13f55
0x0001465d      4889ef         mov rdi, rbp
0x00014660      e86b32ffff     call sym.build_upper_buffer
0x00014665      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001466d      e986f5ffff     jmp 0x13bf8
0x00014672      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x0001467a      48c743680000.  mov qword [rbx + 0x68], 0
0x00014682      e945f4ffff     jmp 0x13acc
0x00014687      4885c0         test rax, rax
0x0001468a      0f842b010000   je 0x147bb
0x00014690      4d8d6f70       lea r13, [r15 + 0x70]
0x00014694      4c8d642460     lea r12, [rsp + 0x60]
0x00014699      4983ef80       sub r15, 0xffffffffffffff80
0x0001469d      31c9           xor ecx, ecx
0x0001469f      31d2           xor edx, edx
0x000146a1      4c89fe         mov rsi, r15
0x000146a4      4d89e0         mov r8, r12
0x000146a7      4c89ef         mov rdi, r13
0x000146aa      48890424       mov qword [rsp], rax
0x000146ae      c644246802     mov byte [rsp + 0x68], 2
0x000146b3      e8f851ffff     call sym.create_token_tree.isra.16
0x000146b8      4c8b0c24       mov r9, qword [rsp]
0x000146bc      4989c3         mov r11, rax
0x000146bf      e9d7f5ffff     jmp 0x13c9b
0x000146c4      e807d3feff     call sym.imp.free
0x000146c9      49c785e00000.  mov qword [r13 + 0xe0], 0
0x000146d4      e924f7ffff     jmp 0x13dfd
0x000146d9      4189c0         mov r8d, eax
0x000146dc      4883c201       add rdx, 1
0x000146e0      4883c110       add rcx, 0x10
0x000146e4      4c39d2         cmp rdx, r10
0x000146e7      0f8571feffff   jne 0x1455e
0x000146ed      4508c6         or r14b, r8b
0x000146f0      0f8404010000   je 0x147fa
0x000146f6      4889d0         mov rax, rdx
0x000146f9      48c1e004       shl rax, 4
0x000146fd      4801f0         add rax, rsi
0x00014700      eb16           jmp 0x14718
0x00014702      80fa05         cmp dl, 5
0x00014705      7504           jne 0x1470b
0x00014707      c6460807       mov byte [rsi + 8], 7
0x0001470b      4883c610       add rsi, 0x10
0x0001470f      4839f0         cmp rax, rsi
0x00014712      0f84df000000   je 0x147f7
0x00014718      0fb65608       movzx edx, byte [rsi + 8]
0x0001471c      80fa01         cmp dl, 1
0x0001471f      75e1           jne 0x14702
0x00014721      803e00         cmp byte [rsi], 0
0x00014724      79e5           jns 0x1470b
0x00014726      80660adf       and byte [rsi + 0xa], 0xdf              ; [0xdf:1]=0
0x0001472a      ebdf           jmp 0x1470b
0x0001472c      0f1f4000       nop dword [rax]
0x00014730      803900         cmp byte [rcx], 0
0x00014733      440f48f0       cmovs r14d, eax
0x00014737      eba3           jmp 0x146dc
0x00014739      8b39           mov edi, dword [rcx]
0x0001473b      83ff20         cmp edi, 0x20                           ; "@"
0x0001473e      749c           je 0x146dc
0x00014740      0f86a3000000   jbe 0x147e9
0x00014746      83ff40         cmp edi, 0x40                           ; segment.PHDR
0x00014749      7491           je 0x146dc
0x0001474b      83c780         add edi, 0xffffff80
0x0001474e      748c           je 0x146dc
0x00014750      e9f9fbffff     jmp 0x1434e
0x00014755      0f1f00         nop dword [rax]
0x00014758      488b39         mov rdi, qword [rcx]
0x0001475b      48837f1000     cmp qword [rdi + 0x10], 0
0x00014760      0f85e8fbffff   jne 0x1434e
0x00014766      48837f1800     cmp qword [rdi + 0x18], 0
0x0001476b      0f846bffffff   je 0x146dc
0x00014771      e9d8fbffff     jmp 0x1434e
0x00014776      662e0f1f8400.  nop word cs:[rax + rax]
0x00014780      4189c7         mov r15d, eax
0x00014783      e917fdffff     jmp 0x1449f
0x00014788      49c747080000.  mov qword [r15 + 8], 0
0x00014790      49c707000000.  mov qword [r15], 0
0x00014797      e96efbffff     jmp 0x1430a
0x0001479c      488b442408     mov rax, qword [rsp + 8]
0x000147a1      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x000147a9      4c8b28         mov r13, qword [rax]
0x000147ac      e91bf3ffff     jmp 0x13acc
0x000147b1      b80c000000     mov eax, 0xc
0x000147b6      e981f3ffff     jmp 0x13b3c
0x000147bb      488b442408     mov rax, qword [rsp + 8]
0x000147c0      48c743680000.  mov qword [rbx + 0x68], 0
0x000147c8      4c8b28         mov r13, qword [rax]
0x000147cb      e9fcf2ffff     jmp 0x13acc
0x000147d0      48c741080000.  mov qword [rcx + 8], 0
0x000147d8      48c701000000.  mov qword [rcx], 0
0x000147df      b80c000000     mov eax, 0xc
0x000147e4      e9d7f2ffff     jmp 0x13ac0
0x000147e9      83ff10         cmp edi, 0x10
0x000147ec      0f84eafeffff   je 0x146dc
0x000147f2      e957fbffff     jmp 0x1434e
0x000147f7      4589c6         mov r14d, r8d
0x000147fa      4883bb980000.  cmp qword [rbx + 0x98], 0
0x00014802      0fb693b00000.  movzx edx, byte [rbx + 0xb0]
0x00014809      c783b4000000.  mov dword [rbx + 0xb4], 1
0x00014813      0f9fc0         setg al
0x00014816      83e2f9         and edx, 0xfffffff9                     ; 4294967289
0x00014819      4409f0         or eax, r14d
0x0001481c      83e001         and eax, 1
0x0001481f      01c0           add eax, eax
0x00014821      09d0           or eax, edx
0x00014823      8883b0000000   mov byte [rbx + 0xb0], al
0x00014829      e920fbffff     jmp 0x1434e
0x0001482e      e8add1feff     call sym.imp.abort
0x00014833      488d0d262800.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x17060 ; "link_nfa_nodes"
0x0001483a      488d355f2200.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x16aa0 ; "../coreutils-8.31/lib/regcomp.c"
0x00014841      488d3d1d2300.  lea rdi, str.right____1                 ; 0x16b65 ; "right > -1"
0x00014848      bab0050000     mov edx, 0x5b0
0x0001484d      e8fed2feff     call sym.imp.__assert_fail
0x00014852      488d0d072800.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x17060 ; "link_nfa_nodes"
0x00014859      488d35402200.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x16aa0 ; "../coreutils-8.31/lib/regcomp.c"
0x00014860      488d3d592200.  lea rdi, str.IS_EPSILON_NODE__node__token.type ; 0x16ac0 ; "!IS_EPSILON_NODE (node->token.type)"
0x00014867      bac2050000     mov edx, 0x5c2
0x0001486c      e8dfd2feff     call sym.imp.__assert_fail
0x00014871      488d0de82700.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x17060 ; "link_nfa_nodes"
0x00014878      488d35212200.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x16aa0 ; "../coreutils-8.31/lib/regcomp.c"
0x0001487f      488d3dd52200.  lea rdi, str.left____1                  ; 0x16b5b ; "left > -1"
0x00014886      baaf050000     mov edx, 0x5af
0x0001488b      e8c0d2feff     call sym.imp.__assert_fail
0x00014890      e83bd2feff     call sym.imp.__stack_chk_fail
0x00014895      90             nop
0x00014896      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_re_compile_pattern:
0x000148a0      4883ec08       sub rsp, 8
0x000148a4      488b0d8d6920.  mov rcx, qword [obj.rpl_re_syntax_options] ; [0x21b238:8]=0
0x000148ab      4989f8         mov r8, rdi
0x000148ae      4889d7         mov rdi, rdx
0x000148b1      4889c8         mov rax, rcx
0x000148b4      48c1e819       shr rax, 0x19
0x000148b8      83e001         and eax, 1
0x000148bb      c1e004         shl eax, 4
0x000148be      89c2           mov edx, eax
0x000148c0      0fb64738       movzx eax, byte [rdi + 0x38]
0x000148c4      83e0ef         and eax, 0xffffffef                     ; 4294967279
0x000148c7      09d0           or eax, edx
0x000148c9      4889f2         mov rdx, rsi
0x000148cc      4c89c6         mov rsi, r8
0x000148cf      83c880         or eax, 0xffffff80                      ; 4294967168
0x000148d2      884738         mov byte [rdi + 0x38], al
0x000148d5      e8c6eeffff     call sym.re_compile_internal
0x000148da      85c0           test eax, eax
0x000148dc      742a           je 0x14908
0x000148de      488d15db2700.  lea rdx, obj.__re_error_msgid_idx       ; 0x170c0
0x000148e5      4898           cdqe
0x000148e7      488d35722800.  lea rsi, obj.__re_error_msgid           ; 0x17160 ; "Success"
0x000148ee      31ff           xor edi, edi
0x000148f0      480334c2       add rsi, qword [rdx + rax*8]
0x000148f4      ba05000000     mov edx, 5
0x000148f9      4883c408       add rsp, 8
0x000148fd      e98ed1feff     jmp sym.imp.dcgettext
0x00014902      660f1f440000   nop word [rax + rax]
0x00014908      31c0           xor eax, eax
0x0001490a      4883c408       add rsp, 8
0x0001490e      c3             ret
0x0001490f      90             nop
;-- rpl_re_set_syntax:
0x00014910      488b05216920.  mov rax, qword [obj.rpl_re_syntax_options] ; [0x21b238:8]=0
0x00014917      48893d1a6920.  mov qword [obj.rpl_re_syntax_options], rdi ; [0x21b238:8]=0
0x0001491e      c3             ret
0x0001491f      90             nop
;-- rpl_re_compile_fastmap:
0x00014920      4154           push r12
0x00014922      55             push rbp
0x00014923      31c0           xor eax, eax
0x00014925      53             push rbx
0x00014926      488b6f20       mov rbp, qword [rdi + 0x20]
0x0001492a      4889fb         mov rbx, rdi
0x0001492d      4c8b27         mov r12, qword [rdi]
0x00014930      488d7d08       lea rdi, [rbp + 8]
0x00014934      4889e9         mov rcx, rbp
0x00014937      48c745000000.  mov qword [rbp], 0
0x0001493f      48c785f80000.  mov qword [rbp + 0xf8], 0
0x0001494a      4883e7f8       and rdi, 0xfffffffffffffff8
0x0001494e      4829f9         sub rcx, rdi
0x00014951      81c100010000   add ecx, 0x100
0x00014957      c1e903         shr ecx, 3
0x0001495a      f348ab         rep stosq qword [rdi], rax
0x0001495d      4889e9         mov rcx, rbp
0x00014960      4889df         mov rdi, rbx
0x00014963      498b742448     mov rsi, qword [r12 + 0x48]
0x00014968      488d5618       lea rdx, [rsi + 0x18]
0x0001496c      4883c610       add rsi, 0x10
0x00014970      e8fb84ffff     call sym.re_compile_fastmap_iter.isra.30
0x00014975      498b442450     mov rax, qword [r12 + 0x50]
0x0001497a      4939442448     cmp qword [r12 + 0x48], rax
0x0001497f      7418           je 0x14999
0x00014981      488d5018       lea rdx, [rax + 0x18]
0x00014985      488d7010       lea rsi, [rax + 0x10]
0x00014989      4889e9         mov rcx, rbp
0x0001498c      4889df         mov rdi, rbx
0x0001498f      e8dc84ffff     call sym.re_compile_fastmap_iter.isra.30
0x00014994      498b442448     mov rax, qword [r12 + 0x48]
0x00014999      498b742458     mov rsi, qword [r12 + 0x58]
0x0001499e      4839c6         cmp rsi, rax
0x000149a1      7418           je 0x149bb
0x000149a3      488d5618       lea rdx, [rsi + 0x18]
0x000149a7      4889e9         mov rcx, rbp
0x000149aa      4883c610       add rsi, 0x10
0x000149ae      4889df         mov rdi, rbx
0x000149b1      e8ba84ffff     call sym.re_compile_fastmap_iter.isra.30
0x000149b6      498b442448     mov rax, qword [r12 + 0x48]
0x000149bb      498b742460     mov rsi, qword [r12 + 0x60]
0x000149c0      4839c6         cmp rsi, rax
0x000149c3      7413           je 0x149d8
0x000149c5      488d5618       lea rdx, [rsi + 0x18]
0x000149c9      4889e9         mov rcx, rbp
0x000149cc      4883c610       add rsi, 0x10
0x000149d0      4889df         mov rdi, rbx
0x000149d3      e89884ffff     call sym.re_compile_fastmap_iter.isra.30
0x000149d8      804b3808       or byte [rbx + 0x38], 8
0x000149dc      31c0           xor eax, eax
0x000149de      5b             pop rbx
0x000149df      5d             pop rbp
0x000149e0      415c           pop r12
0x000149e2      c3             ret
0x000149e3      0f1f00         nop dword [rax]
0x000149e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_search_stub:
0x000149f0      4157           push r15
0x000149f2      4156           push r14
0x000149f4      4c89c0         mov rax, r8
0x000149f7      4155           push r13
0x000149f9      4154           push r12
0x000149fb      4901c8         add r8, rcx
0x000149fe      55             push rbp
0x000149ff      53             push rbx
0x00014a00      4883ec38       sub rsp, 0x38
0x00014a04      4885c9         test rcx, rcx
0x00014a07      8b5c2478       mov ebx, dword [rsp + 0x78]
0x00014a0b      4c8b642470     mov r12, qword [rsp + 0x70]
0x00014a10      895c2428       mov dword [rsp + 0x28], ebx
0x00014a14      0f8836030000   js 0x14d50
0x00014a1a      4839d1         cmp rcx, rdx
0x00014a1d      0f8f2d030000   jg 0x14d50
0x00014a23      4939d0         cmp r8, rdx
0x00014a26      4889cb         mov rbx, rcx
0x00014a29      4989ff         mov r15, rdi
0x00014a2c      0f8f7e020000   jg 0x14cb0
0x00014a32      4885c0         test rax, rax
0x00014a35      7809           js 0x14a40
0x00014a37      4c39c1         cmp rcx, r8
0x00014a3a      0f8f70020000   jg 0x14cb0
0x00014a40      4d85c0         test r8, r8
0x00014a43      0f88df020000   js 0x14d28
0x00014a49      4885c0         test rax, rax
0x00014a4c      7909           jns 0x14a57
0x00014a4e      4c39c3         cmp rbx, r8
0x00014a51      0f8ed1020000   jle 0x14d28
0x00014a57      410fb64738     movzx eax, byte [r15 + 0x38]
0x00014a5c      4189c5         mov r13d, eax
0x00014a5f      41c0ed05       shr r13b, 5
0x00014a63      4489ef         mov edi, r13d
0x00014a66      83e703         and edi, 3
0x00014a69      4939d8         cmp r8, rbx
0x00014a6c      897c242c       mov dword [rsp + 0x2c], edi
0x00014a70      7e0f           jle 0x14a81
0x00014a72      49837f2000     cmp qword [r15 + 0x20], 0
0x00014a77      7408           je 0x14a81
0x00014a79      a808           test al, 8
0x00014a7b      0f84ef010000   je 0x14c70
0x00014a81      a810           test al, 0x10
0x00014a83      0f85c7010000   jne 0x14c50
0x00014a89      4d85e4         test r12, r12
0x00014a8c      0f84be010000   je 0x14c50
0x00014a92      83e006         and eax, 6
0x00014a95      498b4f30       mov rcx, qword [r15 + 0x30]
0x00014a99      3c04           cmp al, 4
0x00014a9b      0f848f010000   je 0x14c30
0x00014aa1      4c8d7101       lea r14, [rcx + 1]
0x00014aa5      4d89f5         mov r13, r14
0x00014aa8      4c89f7         mov rdi, r14
0x00014aab      48c1e704       shl rdi, 4
0x00014aaf      4c894c2420     mov qword [rsp + 0x20], r9
0x00014ab4      4889542418     mov qword [rsp + 0x18], rdx
0x00014ab9      4889742410     mov qword [rsp + 0x10], rsi
0x00014abe      4c89442408     mov qword [rsp + 8], r8
0x00014ac3      e858d1feff     call sym.imp.malloc
0x00014ac8      4885c0         test rax, rax
0x00014acb      4889c5         mov rbp, rax
0x00014ace      0f848c020000   je 0x14d60
0x00014ad4      4883ec08       sub rsp, 8
0x00014ad8      4889d9         mov rcx, rbx
0x00014adb      4c89ff         mov rdi, r15
0x00014ade      8b442434       mov eax, dword [rsp + 0x34]
0x00014ae2      50             push rax
0x00014ae3      55             push rbp
0x00014ae4      4156           push r14
0x00014ae6      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00014aeb      4c8b442428     mov r8, qword [rsp + 0x28]
0x00014af0      488b542438     mov rdx, qword [rsp + 0x38]
0x00014af5      488b742430     mov rsi, qword [rsp + 0x30]
0x00014afa      e811abffff     call sym.re_search_internal
0x00014aff      4883c420       add rsp, 0x20
0x00014b03      85c0           test eax, eax
0x00014b05      7431           je 0x14b38
0x00014b07      83f801         cmp eax, 1
0x00014b0a      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x00014b11      7407           je 0x14b1a
0x00014b13      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x00014b1a      4889ef         mov rdi, rbp
0x00014b1d      e8aecefeff     call sym.imp.free
0x00014b22      4883c438       add rsp, 0x38
0x00014b26      4c89e0         mov rax, r12
0x00014b29      5b             pop rbx
0x00014b2a      5d             pop rbp
0x00014b2b      415c           pop r12
0x00014b2d      415d           pop r13
0x00014b2f      415e           pop r14
0x00014b31      415f           pop r15
0x00014b33      c3             ret
0x00014b34      0f1f4000       nop dword [rax]
0x00014b38      4d85e4         test r12, r12
0x00014b3b      0f84c7000000   je 0x14c08
0x00014b41      410fb64738     movzx eax, byte [r15 + 0x38]
0x00014b46      498d5501       lea rdx, [r13 + 1]
0x00014b4a      d0e8           shr al, 1
0x00014b4c      83e003         and eax, 3
0x00014b4f      0f846b010000   je 0x14cc0
0x00014b55      83f801         cmp eax, 1
0x00014b58      0f8412020000   je 0x14d70
0x00014b5e      83f802         cmp eax, 2
0x00014b61      0f85e9020000   jne 0x14e50
0x00014b67      4d3b3424       cmp r14, qword [r12]
0x00014b6b      0f87c0020000   ja 0x14e31
0x00014b71      41b902000000   mov r9d, 2
0x00014b77      4d85ed         test r13, r13
0x00014b7a      0f8e68020000   jle 0x14de8
0x00014b80      4d8b442408     mov r8, qword [r12 + 8]
0x00014b85      498b7c2410     mov rdi, qword [r12 + 0x10]
0x00014b8a      4a8d34ed0000.  lea rsi, [r13*8]
0x00014b92      4c89ea         mov rdx, r13
0x00014b95      31c0           xor eax, eax
0x00014b97      660f1f840000.  nop word [rax + rax]
0x00014ba0      488b4c4500     mov rcx, qword [rbp + rax*2]
0x00014ba5      49890c00       mov qword [r8 + rax], rcx
0x00014ba9      488b4c4508     mov rcx, qword [rbp + rax*2 + 8]
0x00014bae      48890c07       mov qword [rdi + rax], rcx
0x00014bb2      4883c008       add rax, 8
0x00014bb6      4839c6         cmp rsi, rax
0x00014bb9      75e5           jne 0x14ba0
0x00014bbb      49391424       cmp qword [r12], rdx
0x00014bbf      762c           jbe 0x14bed
0x00014bc1      498b742410     mov rsi, qword [r12 + 0x10]
0x00014bc6      498b4c2408     mov rcx, qword [r12 + 8]
0x00014bcb      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00014bd2      660f1f440000   nop word [rax + rax]
0x00014bd8      488904d6       mov qword [rsi + rdx*8], rax
0x00014bdc      4983c501       add r13, 1
0x00014be0      488904d1       mov qword [rcx + rdx*8], rax
0x00014be4      4d3b2c24       cmp r13, qword [r12]
0x00014be8      4c89ea         mov rdx, r13
0x00014beb      72eb           jb 0x14bd8
0x00014bed      410fb64738     movzx eax, byte [r15 + 0x38]
0x00014bf2      478d2c09       lea r13d, [r9 + r9]
0x00014bf6      83e0f9         and eax, 0xfffffff9                     ; 4294967289
0x00014bf9      4409e8         or eax, r13d
0x00014bfc      a806           test al, 6
0x00014bfe      41884738       mov byte [r15 + 0x38], al
0x00014c02      0f840bffffff   je 0x14b13
0x00014c08      807c242800     cmp byte [rsp + 0x28], 0
0x00014c0d      4c8b6500       mov r12, qword [rbp]
0x00014c11      0f8403ffffff   je 0x14b1a
0x00014c17      4939dc         cmp r12, rbx
0x00014c1a      0f85f2010000   jne 0x14e12
0x00014c20      4c8b6508       mov r12, qword [rbp + 8]
0x00014c24      4929dc         sub r12, rbx
0x00014c27      e9eefeffff     jmp 0x14b1a
0x00014c2c      0f1f4000       nop dword [rax]
0x00014c30      4d8b3424       mov r14, qword [r12]
0x00014c34      4939ce         cmp r14, rcx
0x00014c37      0f8764feffff   ja 0x14aa1
0x00014c3d      4d85f6         test r14, r14
0x00014c40      4d89f5         mov r13, r14
0x00014c43      0f8f5ffeffff   jg 0x14aa8
0x00014c49      0f1f80000000.  nop dword [rax]
0x00014c50      bf10000000     mov edi, 0x10
0x00014c55      41be01000000   mov r14d, 1
0x00014c5b      41bd01000000   mov r13d, 1
0x00014c61      4531e4         xor r12d, r12d
0x00014c64      e946feffff     jmp 0x14aaf
0x00014c69      0f1f80000000.  nop dword [rax]
0x00014c70      4c89ff         mov rdi, r15
0x00014c73      4c894c2420     mov qword [rsp + 0x20], r9
0x00014c78      4889542418     mov qword [rsp + 0x18], rdx
0x00014c7d      4889742410     mov qword [rsp + 0x10], rsi
0x00014c82      4c89442408     mov qword [rsp + 8], r8
0x00014c87      e894fcffff     call sym.rpl_re_compile_fastmap
0x00014c8c      410fb64738     movzx eax, byte [r15 + 0x38]
0x00014c91      4c8b4c2420     mov r9, qword [rsp + 0x20]
0x00014c96      488b542418     mov rdx, qword [rsp + 0x18]
0x00014c9b      488b742410     mov rsi, qword [rsp + 0x10]
0x00014ca0      4c8b442408     mov r8, qword [rsp + 8]
0x00014ca5      e9d7fdffff     jmp 0x14a81
0x00014caa      660f1f440000   nop word [rax + rax]
0x00014cb0      4989d0         mov r8, rdx
0x00014cb3      e99ffdffff     jmp 0x14a57
0x00014cb8      0f1f84000000.  nop dword [rax + rax]
0x00014cc0      4c8d34d50000.  lea r14, [rdx*8]
0x00014cc8      4889542408     mov qword [rsp + 8], rdx
0x00014ccd      4c89f7         mov rdi, r14
0x00014cd0      e84bcffeff     call sym.imp.malloc
0x00014cd5      4885c0         test rax, rax
0x00014cd8      4989442408     mov qword [r12 + 8], rax
0x00014cdd      488b542408     mov rdx, qword [rsp + 8]
0x00014ce2      0f8412010000   je 0x14dfa
0x00014ce8      4c89f7         mov rdi, r14
0x00014ceb      4889542408     mov qword [rsp + 8], rdx
0x00014cf0      4889442410     mov qword [rsp + 0x10], rax
0x00014cf5      e826cffeff     call sym.imp.malloc
0x00014cfa      4885c0         test rax, rax
0x00014cfd      4989442410     mov qword [r12 + 0x10], rax
0x00014d02      488b542408     mov rdx, qword [rsp + 8]
0x00014d07      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00014d0c      0f84e0000000   je 0x14df2
0x00014d12      49891424       mov qword [r12], rdx
0x00014d16      41b901000000   mov r9d, 1
0x00014d1c      e956feffff     jmp 0x14b77
0x00014d21      0f1f80000000.  nop dword [rax]
0x00014d28      410fb64738     movzx eax, byte [r15 + 0x38]
0x00014d2d      4531c0         xor r8d, r8d
0x00014d30      4189c5         mov r13d, eax
0x00014d33      41c0ed05       shr r13b, 5
0x00014d37      4489ef         mov edi, r13d
0x00014d3a      83e703         and edi, 3
0x00014d3d      897c242c       mov dword [rsp + 0x2c], edi
0x00014d41      e93bfdffff     jmp 0x14a81
0x00014d46      662e0f1f8400.  nop word cs:[rax + rax]
0x00014d50      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x00014d57      e9c6fdffff     jmp 0x14b22
0x00014d5c      0f1f4000       nop dword [rax]
0x00014d60      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x00014d67      e9b6fdffff     jmp 0x14b22
0x00014d6c      0f1f4000       nop dword [rax]
0x00014d70      49391424       cmp qword [r12], rdx
0x00014d74      41b901000000   mov r9d, 1
0x00014d7a      0f83f7fdffff   jae 0x14b77
0x00014d80      488d0cd50000.  lea rcx, [rdx*8]
0x00014d88      498b7c2408     mov rdi, qword [r12 + 8]
0x00014d8d      44884c2418     mov byte [rsp + 0x18], r9b
0x00014d92      4889542410     mov qword [rsp + 0x10], rdx
0x00014d97      4889ce         mov rsi, rcx
0x00014d9a      48894c2408     mov qword [rsp + 8], rcx
0x00014d9f      e8eccefeff     call sym.imp.realloc
0x00014da4      4885c0         test rax, rax
0x00014da7      4989c6         mov r14, rax
0x00014daa      744e           je 0x14dfa
0x00014dac      488b4c2408     mov rcx, qword [rsp + 8]
0x00014db1      498b7c2410     mov rdi, qword [r12 + 0x10]
0x00014db6      4889ce         mov rsi, rcx
0x00014db9      e8d2cefeff     call sym.imp.realloc
0x00014dbe      4885c0         test rax, rax
0x00014dc1      488b542410     mov rdx, qword [rsp + 0x10]
0x00014dc6      440fb64c2418   movzx r9d, byte [rsp + 0x18]
0x00014dcc      7434           je 0x14e02
0x00014dce      4d89742408     mov qword [r12 + 8], r14
0x00014dd3      4989442410     mov qword [r12 + 0x10], rax
0x00014dd8      49891424       mov qword [r12], rdx
0x00014ddc      e996fdffff     jmp 0x14b77
0x00014de1      0f1f80000000.  nop dword [rax]
0x00014de8      31d2           xor edx, edx
0x00014dea      4531ed         xor r13d, r13d
0x00014ded      e9c9fdffff     jmp 0x14bbb
0x00014df2      4889cf         mov rdi, rcx
0x00014df5      e8d6cbfeff     call sym.imp.free
0x00014dfa      4531c9         xor r9d, r9d
0x00014dfd      e9ebfdffff     jmp 0x14bed
0x00014e02      4c89f7         mov rdi, r14
0x00014e05      e8c6cbfeff     call sym.imp.free
0x00014e0a      4531c9         xor r9d, r9d
0x00014e0d      e9dbfdffff     jmp 0x14bed
0x00014e12      488d0d172200.  lea rcx, obj.__PRETTY_FUNCTION__.7847   ; 0x17030 ; "re_search_stub"
0x00014e19      488d35601c00.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x16a80 ; "../coreutils-8.31/lib/regexec.c"
0x00014e20      488d3d7e1d00.  lea rdi, str.pmatch_0_.rm_so____start   ; 0x16ba5 ; "pmatch[0].rm_so == start"
0x00014e27      babe010000     mov edx, 0x1be
0x00014e2c      e81fcdfeff     call sym.imp.__assert_fail
0x00014e31      488d0de82100.  lea rcx, obj.__PRETTY_FUNCTION__.7859   ; 0x17020 ; "re_copy_regs"
0x00014e38      488d35411c00.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x16a80 ; "../coreutils-8.31/lib/regexec.c"
0x00014e3f      488d3d471d00.  lea rdi, str.regs__num_regs____nregs    ; 0x16b8d ; "regs->num_regs >= nregs"
0x00014e46      bafb010000     mov edx, 0x1fb
0x00014e4b      e800cdfeff     call sym.imp.__assert_fail
0x00014e50      488d0dc92100.  lea rcx, obj.__PRETTY_FUNCTION__.7859   ; 0x17020 ; "re_copy_regs"
0x00014e57      488d35221c00.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x16a80 ; "../coreutils-8.31/lib/regexec.c"
0x00014e5e      488d3d0b1d00.  lea rdi, str.regs_allocated____REGS_FIXED ; 0x16b70 ; "regs_allocated == REGS_FIXED"
0x00014e65      baf9010000     mov edx, 0x1f9
0x00014e6a      e8e1ccfeff     call sym.imp.__assert_fail
0x00014e6f      90             nop
;-- re_search_2_stub:
0x00014e70      4157           push r15
0x00014e72      4156           push r14
0x00014e74      4155           push r13
0x00014e76      4154           push r12
0x00014e78      4989fc         mov r12, rdi
0x00014e7b      55             push rbp
0x00014e7c      53             push rbx
0x00014e7d      4c89c5         mov rbp, r8
0x00014e80      4889d3         mov rbx, rdx
0x00014e83      4889ea         mov rdx, rbp
0x00014e86      4883ec28       sub rsp, 0x28
0x00014e8a      48c1ea3f       shr rdx, 0x3f
0x00014e8e      488b442470     mov rax, qword [rsp + 0x70]
0x00014e93      89d7           mov edi, edx
0x00014e95      448b442478     mov r8d, dword [rsp + 0x78]
0x00014e9a      48c1e83f       shr rax, 0x3f
0x00014e9e      4008c7         or dil, al
0x00014ea1      0f85c9000000   jne 0x14f70
0x00014ea7      4885db         test rbx, rbx
0x00014eaa      0f88c0000000   js 0x14f70
0x00014eb0      4989df         mov r15, rbx
0x00014eb3      4901ef         add r15, rbp
0x00014eb6      0f80b4000000   jo 0x14f70
0x00014ebc      4885ed         test rbp, rbp
0x00014ebf      4989ce         mov r14, rcx
0x00014ec2      4c89c9         mov rcx, r9
0x00014ec5      0f84b5000000   je 0x14f80
0x00014ecb      4531ed         xor r13d, r13d
0x00014ece      4885db         test rbx, rbx
0x00014ed1      4889742408     mov qword [rsp + 8], rsi
0x00014ed6      7548           jne 0x14f20
0x00014ed8      450fb6c0       movzx r8d, r8b
0x00014edc      4c89fa         mov rdx, r15
0x00014edf      4c89f6         mov rsi, r14
0x00014ee2      4150           push r8
0x00014ee4      ff742470       push qword [rsp + 0x70]
0x00014ee8      4c89e7         mov rdi, r12
0x00014eeb      4c8b8c248000.  mov r9, qword [rsp + 0x80]
0x00014ef3      4c8b442470     mov r8, qword [rsp + 0x70]
0x00014ef8      e8f3faffff     call sym.re_search_stub
0x00014efd      4c89ef         mov rdi, r13
0x00014f00      4889c3         mov rbx, rax
0x00014f03      e8c8cafeff     call sym.imp.free
0x00014f08      58             pop rax
0x00014f09      5a             pop rdx
0x00014f0a      4883c428       add rsp, 0x28
0x00014f0e      4889d8         mov rax, rbx
0x00014f11      5b             pop rbx
0x00014f12      5d             pop rbp
0x00014f13      415c           pop r12
0x00014f15      415d           pop r13
0x00014f17      415e           pop r14
0x00014f19      415f           pop r15
0x00014f1b      c3             ret
0x00014f1c      0f1f4000       nop dword [rax]
0x00014f20      4c89ff         mov rdi, r15
0x00014f23      448944241c     mov dword [rsp + 0x1c], r8d
0x00014f28      4c894c2410     mov qword [rsp + 0x10], r9
0x00014f2d      e8eeccfeff     call sym.imp.malloc
0x00014f32      4885c0         test rax, rax
0x00014f35      4989c5         mov r13, rax
0x00014f38      7436           je 0x14f70
0x00014f3a      488b742408     mov rsi, qword [rsp + 8]
0x00014f3f      4889da         mov rdx, rbx
0x00014f42      4889c7         mov rdi, rax
0x00014f45      e896ccfeff     call sym.imp.memcpy
0x00014f4a      498d7c1d00     lea rdi, [r13 + rbx]
0x00014f4f      4c89f6         mov rsi, r14
0x00014f52      4889ea         mov rdx, rbp
0x00014f55      4d89ee         mov r14, r13
0x00014f58      e883ccfeff     call sym.imp.memcpy
0x00014f5d      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00014f62      448b44241c     mov r8d, dword [rsp + 0x1c]
0x00014f67      e96cffffff     jmp 0x14ed8
0x00014f6c      0f1f4000       nop dword [rax]
0x00014f70      48c7c3feffff.  mov rbx, 0xfffffffffffffffe
0x00014f77      eb91           jmp 0x14f0a
0x00014f79      0f1f80000000.  nop dword [rax]
0x00014f80      4989f6         mov r14, rsi
0x00014f83      4531ed         xor r13d, r13d
0x00014f86      e94dffffff     jmp 0x14ed8
0x00014f8b      0f1f440000     nop dword [rax + rax]
;-- rpl_regcomp:
0x00014f90      89d0           mov eax, edx
0x00014f92      4156           push r14
0x00014f94      4155           push r13
0x00014f96      83e001         and eax, 1
0x00014f99      4154           push r12
0x00014f9b      55             push rbp
0x00014f9c      83f801         cmp eax, 1
0x00014f9f      53             push rbx
0x00014fa0      4889fb         mov rbx, rdi
0x00014fa3      4d19f6         sbb r14, r14
0x00014fa6      48c707000000.  mov qword [rdi], 0
0x00014fad      48c747080000.  mov qword [rdi + 8], 0
0x00014fb5      4181e6ca4ffd.  and r14d, 0xfd4fca
0x00014fbc      48c747100000.  mov qword [rdi + 0x10], 0
0x00014fc4      bf00010000     mov edi, 0x100
0x00014fc9      4989f4         mov r12, rsi
0x00014fcc      89d5           mov ebp, edx
0x00014fce      4981c6fcb203.  add r14, 0x3b2fc
0x00014fd5      e846ccfeff     call sym.imp.malloc
0x00014fda      4885c0         test rax, rax
0x00014fdd      48894320       mov qword [rbx + 0x20], rax
0x00014fe1      0f84a9000000   je 0x15090
0x00014fe7      4989ed         mov r13, rbp
0x00014fea      49c1e515       shl r13, 0x15
0x00014fee      4181e5000040.  and r13d, 0x400000
0x00014ff5      4d09f5         or r13, r14
0x00014ff8      40f6c504       test bpl, 4
0x00014ffc      7562           jne 0x15060
0x00014ffe      8063387f       and byte [rbx + 0x38], 0x7f             ; [0x7f:1]=0
0x00015002      0fb65338       movzx edx, byte [rbx + 0x38]
0x00015006      c1ed03         shr ebp, 3
0x00015009      4c89e7         mov rdi, r12
0x0001500c      83e501         and ebp, 1
0x0001500f      48c743280000.  mov qword [rbx + 0x28], 0
0x00015017      c1e504         shl ebp, 4
0x0001501a      83e2ef         and edx, 0xffffffef                     ; 4294967279
0x0001501d      09d5           or ebp, edx
0x0001501f      40886b38       mov byte [rbx + 0x38], bpl
0x00015023      e888cafeff     call sym.imp.strlen
0x00015028      4c89e9         mov rcx, r13
0x0001502b      4889c2         mov rdx, rax
0x0001502e      4c89e6         mov rsi, r12
0x00015031      4889df         mov rdi, rbx
0x00015034      e867e7ffff     call sym.re_compile_internal
0x00015039      83f810         cmp eax, 0x10
0x0001503c      89c5           mov ebp, eax
0x0001503e      7438           je 0x15078
0x00015040      85c0           test eax, eax
0x00015042      7539           jne 0x1507d
0x00015044      4889df         mov rdi, rbx
0x00015047      e8d4f8ffff     call sym.rpl_re_compile_fastmap
0x0001504c      5b             pop rbx
0x0001504d      89e8           mov eax, ebp
0x0001504f      5d             pop rbp
0x00015050      415c           pop r12
0x00015052      415d           pop r13
0x00015054      415e           pop r14
0x00015056      c3             ret
0x00015057      660f1f840000.  nop word [rax + rax]
0x00015060      4983e5bf       and r13, 0xffffffffffffffbf
0x00015064      804b3880       or byte [rbx + 0x38], 0x80              ; [0x80:1]=56
0x00015068      4981cd000100.  or r13, 0x100
0x0001506f      eb91           jmp 0x15002
0x00015071      0f1f80000000.  nop dword [rax]
0x00015078      bd08000000     mov ebp, 8
0x0001507d      488b7b20       mov rdi, qword [rbx + 0x20]
0x00015081      e84ac9feff     call sym.imp.free
0x00015086      48c743200000.  mov qword [rbx + 0x20], 0
0x0001508e      ebbc           jmp 0x1504c
0x00015090      bd0c000000     mov ebp, 0xc
0x00015095      5b             pop rbx
0x00015096      89e8           mov eax, ebp
0x00015098      5d             pop rbp
0x00015099      415c           pop r12
0x0001509b      415d           pop r13
0x0001509d      415e           pop r14
0x0001509f      c3             ret
;-- rpl_regerror:
0x000150a0      4155           push r13
0x000150a2      4154           push r12
0x000150a4      55             push rbp
0x000150a5      53             push rbx
0x000150a6      4883ec08       sub rsp, 8
0x000150aa      83ff10         cmp edi, 0x10
0x000150ad      7761           ja 0x15110
0x000150af      488d050a2000.  lea rax, obj.__re_error_msgid_idx       ; 0x170c0
0x000150b6      4863ff         movsxd rdi, edi
0x000150b9      488d35a02000.  lea rsi, obj.__re_error_msgid           ; 0x17160 ; "Success"
0x000150c0      4889d5         mov rbp, rdx
0x000150c3      ba05000000     mov edx, 5
0x000150c8      4989cc         mov r12, rcx
0x000150cb      480334f8       add rsi, qword [rax + rdi*8]
0x000150cf      31ff           xor edi, edi
0x000150d1      e8bac9feff     call sym.imp.dcgettext
0x000150d6      4889c7         mov rdi, rax
0x000150d9      4989c5         mov r13, rax
0x000150dc      e8cfc9feff     call sym.imp.strlen
0x000150e1      4d85e4         test r12, r12
0x000150e4      488d5801       lea rbx, [rax + 1]
0x000150e8      7413           je 0x150fd
0x000150ea      4c39e3         cmp rbx, r12
0x000150ed      4889da         mov rdx, rbx
0x000150f0      7726           ja 0x15118
0x000150f2      4c89ee         mov rsi, r13
0x000150f5      4889ef         mov rdi, rbp
0x000150f8      e8e3cafeff     call sym.imp.memcpy
0x000150fd      4883c408       add rsp, 8
0x00015101      4889d8         mov rax, rbx
0x00015104      5b             pop rbx
0x00015105      5d             pop rbp
0x00015106      415c           pop r12
0x00015108      415d           pop r13
0x0001510a      c3             ret
0x0001510b      0f1f440000     nop dword [rax + rax]
0x00015110      e8cbc8feff     call sym.imp.abort
0x00015115      0f1f00         nop dword [rax]
0x00015118      498d5424ff     lea rdx, [r12 - 1]
0x0001511d      42c64425ff00   mov byte [rbp + r12 - 1], 0
0x00015123      ebcd           jmp 0x150f2
0x00015125      90             nop
0x00015126      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_regfree:
0x00015130      53             push rbx
0x00015131      4889fb         mov rbx, rdi
0x00015134      488b3f         mov rdi, qword [rdi]
0x00015137      4885ff         test rdi, rdi
0x0001513a      7405           je 0x15141
0x0001513c      e8df37ffff     call sym.free_dfa_content
0x00015141      488b7b20       mov rdi, qword [rbx + 0x20]
0x00015145      48c703000000.  mov qword [rbx], 0
0x0001514c      48c743080000.  mov qword [rbx + 8], 0
0x00015154      e877c8feff     call sym.imp.free
0x00015159      488b7b28       mov rdi, qword [rbx + 0x28]
0x0001515d      48c743200000.  mov qword [rbx + 0x20], 0
0x00015165      e866c8feff     call sym.imp.free
0x0001516a      48c743280000.  mov qword [rbx + 0x28], 0
0x00015172      5b             pop rbx
0x00015173      c3             ret
0x00015174      6690           nop
0x00015176      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_regexec:
0x00015180      41f7c0f8ffff.  test r8d, 0xfffffff8                    ; 4294967288
0x00015187      0f858b000000   jne 0x15218
0x0001518d      4155           push r13
0x0001518f      4154           push r12
0x00015191      4989d5         mov r13, rdx
0x00015194      55             push rbp
0x00015195      53             push rbx
0x00015196      4989cc         mov r12, rcx
0x00015199      4489c3         mov ebx, r8d
0x0001519c      4889fd         mov rbp, rdi
0x0001519f      4883ec18       sub rsp, 0x18
0x000151a3      41f6c004       test r8b, 4
0x000151a7      754f           jne 0x151f8
0x000151a9      4889f7         mov rdi, rsi
0x000151ac      4889742408     mov qword [rsp + 8], rsi
0x000151b1      e8fac8feff     call sym.imp.strlen
0x000151b6      31c9           xor ecx, ecx
0x000151b8      f6453810       test byte [rbp + 0x38], 0x10
0x000151bc      4889c2         mov rdx, rax
0x000151bf      488b742408     mov rsi, qword [rsp + 8]
0x000151c4      7440           je 0x15206
0x000151c6      4883ec08       sub rsp, 8
0x000151ca      53             push rbx
0x000151cb      6a00           push 0
0x000151cd      6a00           push 0
0x000151cf      4889ef         mov rdi, rbp
0x000151d2      4989d1         mov r9, rdx
0x000151d5      4989d0         mov r8, rdx
0x000151d8      e833a4ffff     call sym.re_search_internal
0x000151dd      4883c420       add rsp, 0x20
0x000151e1      85c0           test eax, eax
0x000151e3      0f95c0         setne al
0x000151e6      4883c418       add rsp, 0x18
0x000151ea      5b             pop rbx
0x000151eb      0fb6c0         movzx eax, al
0x000151ee      5d             pop rbp
0x000151ef      415c           pop r12
0x000151f1      415d           pop r13
0x000151f3      c3             ret
0x000151f4      0f1f4000       nop dword [rax]
0x000151f8      f6453810       test byte [rbp + 0x38], 0x10
0x000151fc      488b09         mov rcx, qword [rcx]
0x000151ff      498b542408     mov rdx, qword [r12 + 8]
0x00015204      75c0           jne 0x151c6
0x00015206      4883ec08       sub rsp, 8
0x0001520a      53             push rbx
0x0001520b      4154           push r12
0x0001520d      4155           push r13
0x0001520f      ebbe           jmp 0x151cf
0x00015211      0f1f80000000.  nop dword [rax]
0x00015218      b802000000     mov eax, 2
0x0001521d      c3             ret
0x0001521e      6690           nop
;-- rpl_re_match:
0x00015220      4883ec08       sub rsp, 8
0x00015224      4989d1         mov r9, rdx
0x00015227      6a01           push 1
0x00015229      4150           push r8
0x0001522b      4531c0         xor r8d, r8d
0x0001522e      e8bdf7ffff     call sym.re_search_stub
0x00015233      4883c418       add rsp, 0x18
0x00015237      c3             ret
0x00015238      0f1f84000000.  nop dword [rax + rax]
;-- rpl_re_search:
0x00015240      4883ec08       sub rsp, 8
0x00015244      6a00           push 0
0x00015246      4151           push r9
0x00015248      4989d1         mov r9, rdx
0x0001524b      e8a0f7ffff     call sym.re_search_stub
0x00015250      4883c418       add rsp, 0x18
0x00015254      c3             ret
0x00015255      90             nop
0x00015256      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_re_match_2:
0x00015260      4883ec08       sub rsp, 8
0x00015264      6a01           push 1
0x00015266      ff742420       push qword [rsp + 0x20]
0x0001526a      ff742420       push qword [rsp + 0x20]
0x0001526e      6a00           push 0
0x00015270      e8fbfbffff     call sym.re_search_2_stub
0x00015275      4883c428       add rsp, 0x28
0x00015279      c3             ret
0x0001527a      660f1f440000   nop word [rax + rax]
;-- rpl_re_search_2:
0x00015280      4883ec08       sub rsp, 8
0x00015284      6a00           push 0
0x00015286      ff742428       push qword [rsp + 0x28]
0x0001528a      ff742428       push qword [rsp + 0x28]
0x0001528e      ff742428       push qword [rsp + 0x28]
0x00015292      e8d9fbffff     call sym.re_search_2_stub
0x00015297      4883c428       add rsp, 0x28
0x0001529b      c3             ret
0x0001529c      0f1f4000       nop dword [rax]
;-- rpl_re_set_registers:
0x000152a0      4885d2         test rdx, rdx
0x000152a3      7523           jne 0x152c8
0x000152a5      806738f9       and byte [rdi + 0x38], 0xf9             ; [0xf9:1]=170
0x000152a9      48c706000000.  mov qword [rsi], 0
0x000152b0      48c746100000.  mov qword [rsi + 0x10], 0
0x000152b8      48c746080000.  mov qword [rsi + 8], 0
0x000152c0      c3             ret
0x000152c1      0f1f80000000.  nop dword [rax]
0x000152c8      0fb64738       movzx eax, byte [rdi + 0x38]
0x000152cc      83e0f9         and eax, 0xfffffff9                     ; 4294967289
0x000152cf      83c802         or eax, 2
0x000152d2      884738         mov byte [rdi + 0x38], al
0x000152d5      488916         mov qword [rsi], rdx
0x000152d8      48894e08       mov qword [rsi + 8], rcx
0x000152dc      4c894610       mov qword [rsi + 0x10], r8
0x000152e0      c3             ret
0x000152e1      662e0f1f8400.  nop word cs:[rax + rax]
0x000152eb      0f1f440000     nop dword [rax + rax]
;-- close_stream:
0x000152f0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x000152f2      55             push rbp
0x000152f3      4889fd         mov rbp, rdi
0x000152f6      53             push rbx
0x000152f7      e824c7feff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x000152fc      8b5d00         mov ebx, dword [rbp]
0x000152ff      4889ef         mov rdi, rbp
0x00015302      4989c4         mov r12, rax
0x00015305      e806010000     call sym.rpl_fclose
0x0001530a      83e320         and ebx, 0x20                           ; "@"
0x0001530d      85db           test ebx, ebx
0x0001530f      7517           jne 0x15328
0x00015311      85c0           test eax, eax
0x00015313      740a           je 0x1531f                              ; stdio.h:-186
0x00015315      4d85e4         test r12, r12                           ; stdio.h:-178
0x00015318      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0001531d      7439           je 0x15358
0x0001531f      5b             pop rbx
0x00015320      5d             pop rbp
0x00015321      415c           pop r12
0x00015323      c3             ret
0x00015324      0f1f4000       nop dword [rax]
0x00015328      85c0           test eax, eax
0x0001532a      751c           jne 0x15348
0x0001532c      e8bfc6feff     call sym.imp.__errno_location
0x00015331      c70000000000   mov dword [rax], 0
0x00015337      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0001533c      5b             pop rbx
0x0001533d      5d             pop rbp
0x0001533e      415c           pop r12
0x00015340      c3             ret
0x00015341      0f1f80000000.  nop dword [rax]
0x00015348      5b             pop rbx
0x00015349      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0001534e      5d             pop rbp                                 ; stdio.h:-186
0x0001534f      415c           pop r12
0x00015351      c3             ret
0x00015352      660f1f440000   nop word [rax + rax]
0x00015358      e893c6feff     call sym.imp.__errno_location
0x0001535d      833809         cmp dword [rax], 9
0x00015360      5b             pop rbx
0x00015361      5d             pop rbp
0x00015362      415c           pop r12                                 ; stdio.h:-178
0x00015364      0f95c0         setne al
0x00015367      0fb6c0         movzx eax, al
0x0001536a      f7d8           neg eax
0x0001536c      c3             ret
0x0001536d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00015370      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00015374      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00015376      e825c9feff     call sym.imp.setlocale
0x0001537b      4889c2         mov rdx, rax
0x0001537e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00015383      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00015386      741d           je 0x153a5
0x00015388      488d3d611f00.  lea rdi, [0x000172f0]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0001538f      b902000000     mov ecx, 2
0x00015394      4889d6         mov rsi, rdx
0x00015397      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00015399      0f97c1         seta cl
0x0001539c      80d900         sbb cl, 0
0x0001539f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x000153a1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x000153a3      750b           jne 0x153b0
0x000153a5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000153a9      c3             ret
0x000153aa      660f1f440000   nop word [rax + rax]
0x000153b0      488d3d3b1f00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x172f2 ; "POSIX"
0x000153b7      b906000000     mov ecx, 6
0x000153bc      4889d6         mov rsi, rdx
0x000153bf      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000153c1      0f97c0         seta al
0x000153c4      1c00           sbb al, 0
0x000153c6      84c0           test al, al
0x000153c8      0f95c0         setne al
0x000153cb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000153cf      c3             ret
;-- locale_charset:
0x000153d0      4883ec08       sub rsp, 8
0x000153d4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x000153d9      e882c8feff     call sym.imp.nl_langinfo
0x000153de      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x000153e1      741d           je 0x15400
0x000153e3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x000153e6      488d150b1f00.  lea rdx, str.ASCII                      ; 0x172f8 ; "ASCII"
0x000153ed      480f44c2       cmove rax, rdx
0x000153f1      4883c408       add rsp, 8
0x000153f5      c3             ret
0x000153f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00015400      488d05f11e00.  lea rax, str.ASCII                      ; 0x172f8 ; "ASCII"
0x00015407      4883c408       add rsp, 8
0x0001540b      c3             ret
0x0001540c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00015410      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00015412      55             push rbp
0x00015413      53             push rbx
0x00015414      4889fb         mov rbx, rdi
0x00015417      e8d4c7feff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0001541c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0001541e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00015421      7854           js 0x15477                              ; ../coreutils-8.31/lib/fclose.c:66
0x00015423      e858c8feff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00015428      85c0           test eax, eax
0x0001542a      752c           jne 0x15458
0x0001542c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0001542f      e85c000000     call sym.rpl_fflush
0x00015434      85c0           test eax, eax
0x00015436      743c           je 0x15474
0x00015438      e8b3c5feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0001543d      448b20         mov r12d, dword [rax]
0x00015440      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00015443      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00015446      e825c6feff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0001544b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0001544e      7530           jne 0x15480
0x00015450      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00015451      5d             pop rbp
0x00015452      415c           pop r12
0x00015454      c3             ret
0x00015455      0f1f00         nop dword [rax]
0x00015458      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0001545b      e890c7feff     call sym.imp.fileno
0x00015460      31f6           xor esi, esi
0x00015462      ba01000000     mov edx, 1
0x00015467      89c7           mov edi, eax
0x00015469      e8c2c6feff     call sym.imp.lseek
0x0001546e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00015472      75b8           jne 0x1542c
0x00015474      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00015477      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00015478      5d             pop rbp
0x00015479      415c           pop r12
0x0001547b      e9f0c5feff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00015480      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00015484      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00015489      ebc5           jmp 0x15450
0x0001548b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00015490      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00015493      53             push rbx
0x00015494      4889fb         mov rbx, rdi
0x00015497      7411           je 0x154aa                              ; ../coreutils-8.31/lib/fflush.c:150
0x00015499      e8e2c7feff     call sym.imp.__freading
0x0001549e      85c0           test eax, eax
0x000154a0      7408           je 0x154aa
0x000154a2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x000154a8      750e           jne 0x154b8
0x000154aa      4889df         mov rdi, rbx
0x000154ad      5b             pop rbx
0x000154ae      e98dc7feff     jmp sym.imp.fflush
0x000154b3      0f1f440000     nop dword [rax + rax]
0x000154b8      4889df         mov rdi, rbx
0x000154bb      ba01000000     mov edx, 1
0x000154c0      31f6           xor esi, esi
0x000154c2      e809000000     call sym.rpl_fseeko
0x000154c7      4889df         mov rdi, rbx
0x000154ca      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x000154cb      e970c7feff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x000154d0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x000154d4      48394710       cmp qword [rdi + 0x10], rax
0x000154d8      7406           je 0x154e0                              ; ../coreutils-8.31/lib/fseeko.c:32
0x000154da      e931c8feff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x000154df      90             nop
0x000154e0      488b4720       mov rax, qword [rdi + 0x20]
0x000154e4      48394728       cmp qword [rdi + 0x28], rax
0x000154e8      75f0           jne 0x154da                             ; ../coreutils-8.31/lib/fseeko.c:33
0x000154ea      48837f4800     cmp qword [rdi + 0x48], 0
0x000154ef      75e9           jne 0x154da                             ; ../coreutils-8.31/lib/fseeko.c:21
0x000154f1      4154           push r12
0x000154f3      55             push rbp
0x000154f4      4189d4         mov r12d, edx
0x000154f7      53             push rbx
0x000154f8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x000154fb      4889fb         mov rbx, rdi
0x000154fe      e8edc6feff     call sym.imp.fileno
0x00015503      4489e2         mov edx, r12d
0x00015506      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00015509      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x0001550b      e820c6feff     call sym.imp.lseek
0x00015510      4883f8ff       cmp rax, 0xffffffffffffffff
0x00015514      740c           je 0x15522
0x00015516      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00015519      488983900000.  mov qword [rbx + 0x90], rax
0x00015520      31c0           xor eax, eax
0x00015522      5b             pop rbx                                 ; /sys_errlist.h:19
0x00015523      5d             pop rbp
0x00015524      415c           pop r12
0x00015526      c3             ret
0x00015527      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x00015530      4157           push r15
0x00015532      4156           push r14
0x00015534      4989d7         mov r15, rdx
0x00015537      4155           push r13
0x00015539      4154           push r12
0x0001553b      4c8d256e5520.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x21aab0
0x00015542      55             push rbp
0x00015543      488d2d6e5520.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x21aab8
0x0001554a      53             push rbx
0x0001554b      4189fd         mov r13d, edi
0x0001554e      4989f6         mov r14, rsi
0x00015551      4c29e5         sub rbp, r12
0x00015554      4883ec08       sub rsp, 8
0x00015558      48c1fd03       sar rbp, 3
0x0001555c      e82fc4feff     call sym._init
0x00015561      4885ed         test rbp, rbp
0x00015564      7420           je 0x15586
0x00015566      31db           xor ebx, ebx
0x00015568      0f1f84000000.  nop dword [rax + rax]
0x00015570      4c89fa         mov rdx, r15
0x00015573      4c89f6         mov rsi, r14
0x00015576      4489ef         mov edi, r13d
0x00015579      41ff14dc       call qword [r12 + rbx*8]
0x0001557d      4883c301       add rbx, 1
0x00015581      4839dd         cmp rbp, rbx
0x00015584      75ea           jne 0x15570
0x00015586      4883c408       add rsp, 8
0x0001558a      5b             pop rbx
0x0001558b      5d             pop rbp
0x0001558c      415c           pop r12
0x0001558e      415d           pop r13
0x00015590      415e           pop r14
0x00015592      415f           pop r15
0x00015594      c3             ret
0x00015595      90             nop
0x00015596      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x000155a0      f3c3           ret
0x000155a2      662e0f1f8400.  nop word cs:[rax + rax]
0x000155ac      0f1f4000       nop dword [rax]
;-- atexit:
0x000155b0      488b15515a20.  mov rdx, qword [obj.__dso_handle]       ; [0x21b008:8]=0x21b008 obj.__dso_handle
0x000155b7      31f6           xor esi, esi
0x000155b9      e992c7feff     jmp sym.imp.__cxa_atexit
0x000155be      0000           add byte [rax], al
