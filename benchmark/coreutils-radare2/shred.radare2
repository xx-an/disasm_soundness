;-- section..plt:
;-- .plt:
0x00001c30      ff351ac12000   push qword [0x0020dd50]                 ; [12] -r-x section size 1280 named .plt
0x00001c36      ff251cc12000   jmp qword [0x0020dd58]                  ; [0x20dd58:8]=0
0x00001c3c      0f1f4000       nop dword [rax]
;-- imp.getenv:
0x00001c40      ff251ac12000   jmp qword [reloc.getenv]                ; [0x20dd60:8]=0x1c46 ; "F\x1c"
0x00001c46      6800000000     push 0
0x00001c4b      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x00001c50      ff2512c12000   jmp qword [reloc.free]                  ; [0x20dd68:8]=0x1c56 ; "V\x1c"
0x00001c56      6801000000     push 1
0x00001c5b      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x00001c60      ff250ac12000   jmp qword [reloc.abort]                 ; [0x20dd70:8]=0x1c66 ; "f\x1c"
0x00001c66      6802000000     push 2
0x00001c6b      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001c70      ff2502c12000   jmp qword [reloc.__errno_location]      ; [0x20dd78:8]=0x1c76 ; "v\x1c"
0x00001c76      6803000000     push 3
0x00001c7b      e9b0ffffff     jmp sym..plt
;-- imp.fdatasync:
0x00001c80      ff25fac02000   jmp qword [reloc.fdatasync]             ; [0x20dd80:8]=0x1c86
0x00001c86      6804000000     push 4
0x00001c8b      e9a0ffffff     jmp sym..plt
;-- imp.unlink:
0x00001c90      ff25f2c02000   jmp qword [reloc.unlink]                ; [0x20dd88:8]=0x1c96
0x00001c96      6805000000     push 5
0x00001c9b      e990ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001ca0      ff25eac02000   jmp qword [reloc.strncmp]               ; [0x20dd90:8]=0x1ca6
0x00001ca6      6806000000     push 6
0x00001cab      e980ffffff     jmp sym..plt
;-- imp._exit:
0x00001cb0      ff25e2c02000   jmp qword [reloc._exit]                 ; [0x20dd98:8]=0x1cb6
0x00001cb6      6807000000     push 7
0x00001cbb      e970ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001cc0      ff25dac02000   jmp qword [reloc.__fpending]            ; [0x20dda0:8]=0x1cc6
0x00001cc6      6808000000     push 8
0x00001ccb      e960ffffff     jmp sym..plt
;-- imp.__read_chk:
0x00001cd0      ff25d2c02000   jmp qword [reloc.__read_chk]            ; [0x20dda8:8]=0x1cd6
0x00001cd6      6809000000     push 9
0x00001cdb      e950ffffff     jmp sym..plt
;-- imp.isatty:
0x00001ce0      ff25cac02000   jmp qword [reloc.isatty]                ; [0x20ddb0:8]=0x1ce6
0x00001ce6      680a000000     push 0xa
0x00001ceb      e940ffffff     jmp sym..plt
;-- imp.localeconv:
0x00001cf0      ff25c2c02000   jmp qword [reloc.localeconv]            ; [0x20ddb8:8]=0x1cf6
0x00001cf6      680b000000     push 0xb
0x00001cfb      e930ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001d00      ff25bac02000   jmp qword [reloc.fcntl]                 ; [0x20ddc0:8]=0x1d06
0x00001d06      680c000000     push 0xc
0x00001d0b      e920ffffff     jmp sym..plt
;-- imp.write:
0x00001d10      ff25b2c02000   jmp qword [reloc.write]                 ; [0x20ddc8:8]=0x1d16
0x00001d16      680d000000     push 0xd
0x00001d1b      e910ffffff     jmp sym..plt
;-- imp.getpid:
0x00001d20      ff25aac02000   jmp qword [reloc.getpid]                ; [0x20ddd0:8]=0x1d26 ; "&\x1d"
0x00001d26      680e000000     push 0xe
0x00001d2b      e900ffffff     jmp sym..plt
;-- imp.fread_unlocked:
0x00001d30      ff25a2c02000   jmp qword [reloc.fread_unlocked]        ; [0x20ddd8:8]=0x1d36 ; "6\x1d"
0x00001d36      680f000000     push 0xf
0x00001d3b      e9f0feffff     jmp sym..plt
;-- imp.textdomain:
0x00001d40      ff259ac02000   jmp qword [reloc.textdomain]            ; [0x20dde0:8]=0x1d46 ; "F\x1d"
0x00001d46      6810000000     push 0x10
0x00001d4b      e9e0feffff     jmp sym..plt
;-- imp.fclose:
0x00001d50      ff2592c02000   jmp qword [reloc.fclose]                ; [0x20dde8:8]=0x1d56 ; "V\x1d"
0x00001d56      6811000000     push 0x11
0x00001d5b      e9d0feffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001d60      ff258ac02000   jmp qword [reloc.bindtextdomain]        ; [0x20ddf0:8]=0x1d66 ; "f\x1d"
0x00001d66      6812000000     push 0x12
0x00001d6b      e9c0feffff     jmp sym..plt
;-- imp.dcgettext:
0x00001d70      ff2582c02000   jmp qword [reloc.dcgettext]             ; [0x20ddf8:8]=0x1d76 ; "v\x1d"
0x00001d76      6813000000     push 0x13
0x00001d7b      e9b0feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001d80      ff257ac02000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20de00:8]=0x1d86
0x00001d86      6814000000     push 0x14
0x00001d8b      e9a0feffff     jmp sym..plt
;-- imp.strlen:
0x00001d90      ff2572c02000   jmp qword [reloc.strlen]                ; [0x20de08:8]=0x1d96
0x00001d96      6815000000     push 0x15
0x00001d9b      e990feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001da0      ff256ac02000   jmp qword [reloc.__stack_chk_fail]      ; [0x20de10:8]=0x1da6
0x00001da6      6816000000     push 0x16
0x00001dab      e980feffff     jmp sym..plt
;-- imp.getuid:
0x00001db0      ff2562c02000   jmp qword [reloc.getuid]                ; [0x20de18:8]=0x1db6
0x00001db6      6817000000     push 0x17
0x00001dbb      e970feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001dc0      ff255ac02000   jmp qword [reloc.getopt_long]           ; [0x20de20:8]=0x1dc6
0x00001dc6      6818000000     push 0x18
0x00001dcb      e960feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001dd0      ff2552c02000   jmp qword [reloc.mbrtowc]               ; [0x20de28:8]=0x1dd6
0x00001dd6      6819000000     push 0x19
0x00001ddb      e950feffff     jmp sym..plt
;-- imp.strchr:
0x00001de0      ff254ac02000   jmp qword [reloc.strchr]                ; [0x20de30:8]=0x1de6
0x00001de6      681a000000     push 0x1a
0x00001deb      e940feffff     jmp sym..plt
;-- imp.__fxstatat:
0x00001df0      ff2542c02000   jmp qword [reloc.__fxstatat]            ; [0x20de38:8]=0x1df6
0x00001df6      681b000000     push 0x1b
0x00001dfb      e930feffff     jmp sym..plt
;-- imp.__overflow:
0x00001e00      ff253ac02000   jmp qword [reloc.__overflow]            ; [0x20de40:8]=0x1e06
0x00001e06      681c000000     push 0x1c
0x00001e0b      e920feffff     jmp sym..plt
;-- imp.strrchr:
0x00001e10      ff2532c02000   jmp qword [reloc.strrchr]               ; [0x20de48:8]=0x1e16
0x00001e16      681d000000     push 0x1d
0x00001e1b      e910feffff     jmp sym..plt
;-- imp.ftruncate:
0x00001e20      ff252ac02000   jmp qword [reloc.ftruncate]             ; [0x20de50:8]=0x1e26 ; "&\x1e"
0x00001e26      681e000000     push 0x1e
0x00001e2b      e900feffff     jmp sym..plt
;-- imp.lseek:
0x00001e30      ff2522c02000   jmp qword [reloc.lseek]                 ; [0x20de58:8]=0x1e36 ; "6\x1e"
0x00001e36      681f000000     push 0x1f
0x00001e3b      e9f0fdffff     jmp sym..plt
;-- imp.gettimeofday:
0x00001e40      ff251ac02000   jmp qword [reloc.gettimeofday]          ; [0x20de60:8]=0x1e46 ; "F\x1e"
0x00001e46      6820000000     push 0x20                               ; "@"
0x00001e4b      e9e0fdffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001e50      ff2512c02000   jmp qword [reloc.__assert_fail]         ; [0x20de68:8]=0x1e56 ; "V\x1e"
0x00001e56      6821000000     push 0x21                               ; '!'
0x00001e5b      e9d0fdffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00001e60      ff250ac02000   jmp qword [reloc.__strtoul_internal]    ; [0x20de70:8]=0x1e66 ; "f\x1e"
0x00001e66      6822000000     push 0x22                               ; '"'
0x00001e6b      e9c0fdffff     jmp sym..plt
;-- imp.memset:
0x00001e70      ff2502c02000   jmp qword [reloc.memset]                ; [0x20de78:8]=0x1e76 ; "v\x1e"
0x00001e76      6823000000     push 0x23                               ; '#'
0x00001e7b      e9b0fdffff     jmp sym..plt
;-- imp.ioctl:
0x00001e80      ff25fabf2000   jmp qword [reloc.ioctl]                 ; [0x20de80:8]=0x1e86
0x00001e86      6824000000     push 0x24                               ; '$'
0x00001e8b      e9a0fdffff     jmp sym..plt
;-- imp.close:
0x00001e90      ff25f2bf2000   jmp qword [reloc.close]                 ; [0x20de88:8]=0x1e96
0x00001e96      6825000000     push 0x25                               ; '%'
0x00001e9b      e990fdffff     jmp sym..plt
;-- imp.memcmp:
0x00001ea0      ff25eabf2000   jmp qword [reloc.memcmp]                ; [0x20de90:8]=0x1ea6
0x00001ea6      6826000000     push 0x26                               ; '&'
0x00001eab      e980fdffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001eb0      ff25e2bf2000   jmp qword [reloc.fputs_unlocked]        ; [0x20de98:8]=0x1eb6
0x00001eb6      6827000000     push 0x27                               ; '''
0x00001ebb      e970fdffff     jmp sym..plt
;-- imp.calloc:
0x00001ec0      ff25dabf2000   jmp qword [reloc.calloc]                ; [0x20dea0:8]=0x1ec6
0x00001ec6      6828000000     push 0x28                               ; '('
0x00001ecb      e960fdffff     jmp sym..plt
;-- imp.strcmp:
0x00001ed0      ff25d2bf2000   jmp qword [reloc.strcmp]                ; [0x20dea8:8]=0x1ed6
0x00001ed6      6829000000     push 0x29                               ; ')'
0x00001edb      e950fdffff     jmp sym..plt
;-- imp.__memcpy_chk:
0x00001ee0      ff25cabf2000   jmp qword [reloc.__memcpy_chk]          ; [0x20deb0:8]=0x1ee6
0x00001ee6      682a000000     push 0x2a                               ; '*'
0x00001eeb      e940fdffff     jmp sym..plt
;-- imp.syscall:
0x00001ef0      ff25c2bf2000   jmp qword [reloc.syscall]               ; [0x20deb8:8]=0x1ef6
0x00001ef6      682b000000     push 0x2b                               ; '+'
0x00001efb      e930fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001f00      ff25babf2000   jmp qword [reloc.memcpy]                ; [0x20dec0:8]=0x1f06
0x00001f06      682c000000     push 0x2c                               ; ','
0x00001f0b      e920fdffff     jmp sym..plt
;-- imp.time:
0x00001f10      ff25b2bf2000   jmp qword [reloc.time]                  ; [0x20dec8:8]=0x1f16
0x00001f16      682d000000     push 0x2d                               ; '-'
0x00001f1b      e910fdffff     jmp sym..plt
;-- imp.fileno:
0x00001f20      ff25aabf2000   jmp qword [reloc.fileno]                ; [0x20ded0:8]=0x1f26 ; "&\x1f"
0x00001f26      682e000000     push 0x2e                               ; '.'
0x00001f2b      e900fdffff     jmp sym..plt
;-- imp.getgid:
0x00001f30      ff25a2bf2000   jmp qword [reloc.getgid]                ; [0x20ded8:8]=0x1f36 ; "6\x1f"
0x00001f36      682f000000     push 0x2f                               ; '/'
0x00001f3b      e9f0fcffff     jmp sym..plt
;-- imp.sync:
0x00001f40      ff259abf2000   jmp qword [reloc.sync]                  ; [0x20dee0:8]=0x1f46 ; "F\x1f"
0x00001f46      6830000000     push 0x30                               ; '0'
0x00001f4b      e9e0fcffff     jmp sym..plt
;-- imp.malloc:
0x00001f50      ff2592bf2000   jmp qword [reloc.malloc]                ; [0x20dee8:8]=0x1f56 ; "V\x1f"
0x00001f56      6831000000     push 0x31                               ; '1'
0x00001f5b      e9d0fcffff     jmp sym..plt
;-- imp.fflush:
0x00001f60      ff258abf2000   jmp qword [reloc.fflush]                ; [0x20def0:8]=0x1f66 ; "f\x1f"
0x00001f66      6832000000     push 0x32                               ; '2'
0x00001f6b      e9c0fcffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001f70      ff2582bf2000   jmp qword [reloc.nl_langinfo]           ; [0x20def8:8]=0x1f76 ; "v\x1f"
0x00001f76      6833000000     push 0x33                               ; '3'
0x00001f7b      e9b0fcffff     jmp sym..plt
;-- imp.__fxstat:
0x00001f80      ff257abf2000   jmp qword [reloc.__fxstat]              ; [0x20df00:8]=0x1f86
0x00001f86      6834000000     push 0x34                               ; '4'
0x00001f8b      e9a0fcffff     jmp sym..plt
;-- imp.__freading:
0x00001f90      ff2572bf2000   jmp qword [reloc.__freading]            ; [0x20df08:8]=0x1f96
0x00001f96      6835000000     push 0x35                               ; '5'
0x00001f9b      e990fcffff     jmp sym..plt
;-- imp.realloc:
0x00001fa0      ff256abf2000   jmp qword [reloc.realloc]               ; [0x20df10:8]=0x1fa6
0x00001fa6      6836000000     push 0x36                               ; '6'
0x00001fab      e980fcffff     jmp sym..plt
;-- imp.__strcpy_chk:
0x00001fb0      ff2562bf2000   jmp qword [reloc.__strcpy_chk]          ; [0x20df18:8]=0x1fb6
0x00001fb6      6837000000     push 0x37                               ; '7'
0x00001fbb      e970fcffff     jmp sym..plt
;-- imp.fdopen:
0x00001fc0      ff255abf2000   jmp qword [reloc.fdopen]                ; [0x20df20:8]=0x1fc6
0x00001fc6      6838000000     push 0x38                               ; '8'
0x00001fcb      e960fcffff     jmp sym..plt
;-- imp.setlocale:
0x00001fd0      ff2552bf2000   jmp qword [reloc.setlocale]             ; [0x20df28:8]=0x1fd6
0x00001fd6      6839000000     push 0x39                               ; '9'
0x00001fdb      e950fcffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001fe0      ff254abf2000   jmp qword [reloc.__printf_chk]          ; [0x20df30:8]=0x1fe6
0x00001fe6      683a000000     push 0x3a                               ; ':'
0x00001feb      e940fcffff     jmp sym..plt
;-- imp.setvbuf:
0x00001ff0      ff2542bf2000   jmp qword [reloc.setvbuf]               ; [0x20df38:8]=0x1ff6
0x00001ff6      683b000000     push 0x3b                               ; ';'
0x00001ffb      e930fcffff     jmp sym..plt
;-- imp.chmod:
0x00002000      ff253abf2000   jmp qword [reloc.chmod]                 ; [0x20df40:8]=0x2006
0x00002006      683c000000     push 0x3c                               ; '<'
0x0000200b      e920fcffff     jmp sym..plt
;-- imp.memmove:
0x00002010      ff2532bf2000   jmp qword [reloc.memmove]               ; [0x20df48:8]=0x2016
0x00002016      683d000000     push 0x3d                               ; '='
0x0000201b      e910fcffff     jmp sym..plt
;-- imp.error:
0x00002020      ff252abf2000   jmp qword [reloc.error]                 ; [0x20df50:8]=0x2026 ; "& "
0x00002026      683e000000     push 0x3e                               ; '>'
0x0000202b      e900fcffff     jmp sym..plt
;-- imp.fsync:
0x00002030      ff2522bf2000   jmp qword [reloc.fsync]                 ; [0x20df58:8]=0x2036 ; "6 "
0x00002036      683f000000     push 0x3f                               ; '?'
0x0000203b      e9f0fbffff     jmp sym..plt
;-- imp.__explicit_bzero_chk:
0x00002040      ff251abf2000   jmp qword [reloc.__explicit_bzero_chk]  ; [0x20df60:8]=0x2046 ; "F "
0x00002046      6840000000     push 0x40                               ; segment.PHDR
0x0000204b      e9e0fbffff     jmp sym..plt
;-- imp.open:
0x00002050      ff2512bf2000   jmp qword [reloc.open]                  ; [0x20df68:8]=0x2056 ; "V "
0x00002056      6841000000     push 0x41                               ; 'A'
0x0000205b      e9d0fbffff     jmp sym..plt
;-- imp.fseeko:
0x00002060      ff250abf2000   jmp qword [reloc.fseeko]                ; [0x20df70:8]=0x2066 ; "f "
0x00002066      6842000000     push 0x42                               ; 'B'
0x0000206b      e9c0fbffff     jmp sym..plt
;-- imp.fopen:
0x00002070      ff2502bf2000   jmp qword [reloc.fopen]                 ; [0x20df78:8]=0x2076 ; "v "
0x00002076      6843000000     push 0x43                               ; 'C'
0x0000207b      e9b0fbffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00002080      ff25fabe2000   jmp qword [reloc.__cxa_atexit]          ; [0x20df80:8]=0x2086
0x00002086      6844000000     push 0x44                               ; 'D'
0x0000208b      e9a0fbffff     jmp sym..plt
;-- imp.renameat:
0x00002090      ff25f2be2000   jmp qword [reloc.renameat]              ; [0x20df88:8]=0x2096
0x00002096      6845000000     push 0x45                               ; 'E'
0x0000209b      e990fbffff     jmp sym..plt
;-- imp.getpagesize:
0x000020a0      ff25eabe2000   jmp qword [reloc.getpagesize]           ; [0x20df90:8]=0x20a6
0x000020a6      6846000000     push 0x46                               ; 'F'
0x000020ab      e980fbffff     jmp sym..plt
;-- imp.getppid:
0x000020b0      ff25e2be2000   jmp qword [reloc.getppid]               ; [0x20df98:8]=0x20b6
0x000020b6      6847000000     push 0x47                               ; 'G'
0x000020bb      e970fbffff     jmp sym..plt
;-- imp.exit:
0x000020c0      ff25dabe2000   jmp qword [reloc.exit]                  ; [0x20dfa0:8]=0x20c6
0x000020c6      6848000000     push 0x48                               ; 'H'
0x000020cb      e960fbffff     jmp sym..plt
;-- imp.fwrite:
0x000020d0      ff25d2be2000   jmp qword [reloc.fwrite]                ; [0x20dfa8:8]=0x20d6
0x000020d6      6849000000     push 0x49                               ; 'I'
0x000020db      e950fbffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x000020e0      ff25cabe2000   jmp qword [reloc.__fprintf_chk]         ; [0x20dfb0:8]=0x20e6
0x000020e6      684a000000     push 0x4a                               ; 'J'
0x000020eb      e940fbffff     jmp sym..plt
;-- imp.mbsinit:
0x000020f0      ff25c2be2000   jmp qword [reloc.mbsinit]               ; [0x20dfb8:8]=0x20f6
0x000020f6      684b000000     push 0x4b                               ; 'K'
0x000020fb      e930fbffff     jmp sym..plt
;-- imp.iswprint:
0x00002100      ff25babe2000   jmp qword [reloc.iswprint]              ; [0x20dfc0:8]=0x2106
0x00002106      684c000000     push 0x4c                               ; 'L'
0x0000210b      e920fbffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00002110      ff25b2be2000   jmp qword [reloc.__ctype_b_loc]         ; [0x20dfc8:8]=0x2116
0x00002116      684d000000     push 0x4d                               ; 'M'
0x0000211b      e910fbffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x00002120      ff25aabe2000   jmp qword [reloc.__sprintf_chk]         ; [0x20dfd0:8]=0x2126 ; "&!"
0x00002126      684e000000     push 0x4e                               ; 'N'
0x0000212b      e900fbffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00002130      .qword 0x90660020bec225ff                              ; [13] -r-x section size 8 named .plt.got
0x00002138      0000           add byte [rax], al
0x0000213a      0000           add byte [rax], al
0x0000213c      0000           add byte [rax], al
0x0000213e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00002140      4157           push r15                                ; [14] -r-x section size 29726 named .text
0x00002142      4156           push r14
0x00002144      4155           push r13
0x00002146      4154           push r12
0x00002148      4c8d2511b820.  lea r12, obj.long_opts                  ; 0x20d960 ; ")\x98"
0x0000214f      55             push rbp
0x00002150      53             push rbx
0x00002151      89fd           mov ebp, edi
0x00002153      660fefc0       pxor xmm0, xmm0
0x00002157      4889f3         mov rbx, rsi
0x0000215a      4881ec880000.  sub rsp, 0x88
0x00002161      488b3e         mov rdi, qword [rsi]
0x00002164      4531ed         xor r13d, r13d
0x00002167      64488b042528.  mov rax, qword fs:[0x28]
0x00002170      4889442478     mov qword [rsp + 0x78], rax
0x00002175      31c0           xor eax, eax
0x00002177      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x0000217c      0f29442460     movaps xmmword [rsp + 0x60], xmm0
0x00002181      e8da320000     call sym.set_program_name
0x00002186      488d35238c00.  lea rsi, [0x0000adb0]
0x0000218d      bf06000000     mov edi, 6
0x00002192      e839feffff     call sym.imp.setlocale
0x00002197      488d35837500.  lea rsi, str.usr_local_share_locale     ; 0x9721 ; "/usr/local/share/locale"
0x0000219e      488d3d537500.  lea rdi, [0x000096f8]                   ; "coreutils"
0x000021a5      e8b6fbffff     call sym.imp.bindtextdomain
0x000021aa      488d3d477500.  lea rdi, [0x000096f8]                   ; "coreutils"
0x000021b1      e88afbffff     call sym.imp.textdomain
0x000021b6      488d3dd32200.  lea rdi, sym.close_stdout               ; 0x4490 ; "USH\x83\xec\bH\x8b=\v\x9c "
0x000021bd      e88e730000     call sym.atexit
0x000021c2      48c744245803.  mov qword [rsp + 0x58], 3
0x000021cb      48c7442460ff.  mov qword [rsp + 0x60], 0xffffffffffffffff
0x000021d4      0f1f4000       nop dword [rax]
0x000021d8      488d15a87500.  lea rdx, str.fn:s:uvxz                  ; 0x9787 ; "fn:s:uvxz"
0x000021df      4531c0         xor r8d, r8d
0x000021e2      4c89e1         mov rcx, r12
0x000021e5      4889de         mov rsi, rbx
0x000021e8      89ef           mov edi, ebp
0x000021ea      e8d1fbffff     call sym.imp.getopt_long
0x000021ef      83f8ff         cmp eax, 0xffffffff
0x000021f2      0f84f4010000   je 0x23ec
0x000021f8      83f873         cmp eax, 0x73
0x000021fb      0f84ef000000   je 0x22f0
0x00002201      7e2d           jle 0x2230
0x00002203      83f878         cmp eax, 0x78
0x00002206      0f84d4000000   je 0x22e0
0x0000220c      0f8f86000000   jg 0x2298
0x00002212      83f875         cmp eax, 0x75
0x00002215      0f8425010000   je 0x2340
0x0000221b      83f876         cmp eax, 0x76
0x0000221e      0f8599070000   jne 0x29bd
0x00002224      c644246c01     mov byte [rsp + 0x6c], 1
0x00002229      ebad           jmp 0x21d8
0x0000222b      0f1f440000     nop dword [rax + rax]
0x00002230      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00002235      0f845a070000   je 0x2995
0x0000223b      0f8e5f010000   jle 0x23a0
0x00002241      83f866         cmp eax, 0x66
0x00002244      0f8446010000   je 0x2390
0x0000224a      83f86e         cmp eax, 0x6e
0x0000224d      0f856a070000   jne 0x29bd
0x00002253      488d35df7400.  lea rsi, str.invalid_number_of_passes   ; 0x9739 ; "invalid number of passes"
0x0000225a      ba05000000     mov edx, 5
0x0000225f      31ff           xor edi, edi
0x00002261      e80afbffff     call sym.imp.dcgettext
0x00002266      488b3d4bbe20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e0b8:8]=0
0x0000226d      488d0d3c8b00.  lea rcx, [0x0000adb0]
0x00002274      4989c0         mov r8, rax
0x00002277      4531c9         xor r9d, r9d
0x0000227a      48baffffffff.  movabs rdx, 0x3fffffffffffffff          ; 4611686018427387903
0x00002284      31f6           xor esi, esi
0x00002286      e8f5670000     call sym.xdectoumax
0x0000228b      4889442458     mov qword [rsp + 0x58], rax
0x00002290      e943ffffff     jmp 0x21d8
0x00002295      0f1f00         nop dword [rax]
0x00002298      83f87a         cmp eax, 0x7a
0x0000229b      7433           je 0x22d0
0x0000229d      83c080         add eax, 0xffffff80
0x000022a0      0f8517070000   jne 0x29bd
0x000022a6      4d85ed         test r13, r13
0x000022a9      4c8b3508be20.  mov r14, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e0b8:8]=0
0x000022b0      7413           je 0x22c5
0x000022b2      4c89f6         mov rsi, r14
0x000022b5      4c89ef         mov rdi, r13
0x000022b8      e813fcffff     call sym.imp.strcmp
0x000022bd      85c0           test eax, eax
0x000022bf      0f8555070000   jne 0x2a1a
0x000022c5      4d89f5         mov r13, r14
0x000022c8      e90bffffff     jmp 0x21d8
0x000022cd      0f1f00         nop dword [rax]
0x000022d0      c644246e01     mov byte [rsp + 0x6e], 1
0x000022d5      e9fefeffff     jmp 0x21d8
0x000022da      660f1f440000   nop word [rax + rax]
0x000022e0      c644246d01     mov byte [rsp + 0x6d], 1
0x000022e5      e9eefeffff     jmp 0x21d8
0x000022ea      660f1f440000   nop word [rax + rax]
0x000022f0      488d35647400.  lea rsi, str.invalid_file_size          ; 0x975b ; "invalid file size"
0x000022f7      ba05000000     mov edx, 5
0x000022fc      31ff           xor edi, edi
0x000022fe      e86dfaffff     call sym.imp.dcgettext
0x00002303      4883ec08       sub rsp, 8
0x00002307      488b3daabd20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e0b8:8]=0
0x0000230e      4c8d05587400.  lea r8, str.cbBkKMGTPEZY0               ; 0x976d ; "cbBkKMGTPEZY0"
0x00002315      6a00           push 0
0x00002317      31d2           xor edx, edx
0x00002319      4989c1         mov r9, rax
0x0000231c      48b9ffffffff.  movabs rcx, 0x7fffffffffffffff          ; 9223372036854775807
0x00002326      31f6           xor esi, esi
0x00002328      e853660000     call sym.xnumtoumax
0x0000232d      4889442470     mov qword [rsp + 0x70], rax
0x00002332      58             pop rax
0x00002333      5a             pop rdx
0x00002334      e99ffeffff     jmp 0x21d8
0x00002339      0f1f80000000.  nop dword [rax]
0x00002340      488b3571bd20.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e0b8:8]=0
0x00002347      4885f6         test rsi, rsi
0x0000234a      0f848f000000   je 0x23df
0x00002350      4c8b0dc1bc20.  mov r9, qword [obj.argmatch_die]        ; [0x20e018:8]=0x40e0 sym.__argmatch_die
0x00002357      488d1562b720.  lea rdx, obj.remove_args                ; 0x20dac0 ; "h\x98"
0x0000235e      488d0d9b8300.  lea rcx, obj.remove_methods             ; 0xa700
0x00002365      488d3de67300.  lea rdi, str.remove                     ; 0x9752 ; "--remove"
0x0000236c      41b804000000   mov r8d, 4
0x00002372      e839200000     call sym.__xargmatch_internal
0x00002377      488d15828300.  lea rdx, obj.remove_methods             ; 0xa700
0x0000237e      8b0482         mov eax, dword [rdx + rax*4]
0x00002381      89442468       mov dword [rsp + 0x68], eax
0x00002385      e94efeffff     jmp 0x21d8
0x0000238a      660f1f440000   nop word [rax + rax]
0x00002390      c644245001     mov byte [rsp + 0x50], 1
0x00002395      e93efeffff     jmp 0x21d8
0x0000239a      660f1f440000   nop word [rax + rax]
0x000023a0      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x000023a5      0f8512060000   jne 0x29bd
0x000023ab      488b3df6bc20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x000023b2      488b0d57bc20.  mov rcx, qword [obj.Version]            ; [0x20e010:8]=0xa70c str.8.31
0x000023b9      4c8d05bb7300.  lea r8, str.Colin_Plumb                 ; 0x977b ; "Colin Plumb"
0x000023c0      488d152d7300.  lea rdx, str.GNU_coreutils              ; 0x96f4 ; "GNU coreutils"
0x000023c7      488d35aa7200.  lea rsi, str.shred                      ; 0x9678 ; "shred"
0x000023ce      4531c9         xor r9d, r9d
0x000023d1      31c0           xor eax, eax
0x000023d3      e8b8610000     call sym.version_etc
0x000023d8      31ff           xor edi, edi
0x000023da      e8e1fcffff     call sym.imp.exit
0x000023df      c74424680300.  mov dword [rsp + 0x68], 3
0x000023e7      e9ecfdffff     jmp 0x21d8
0x000023ec      4c6325bdbc20.  movsxd r12, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20e0b0:4]=0
0x000023f3      4189c6         mov r14d, eax
0x000023f6      4c89e0         mov rax, r12
0x000023f9      49c1e403       shl r12, 3
0x000023fd      29c5           sub ebp, eax
0x000023ff      0f8497050000   je 0x299c
0x00002405      4883ceff       or rsi, 0xffffffffffffffff
0x00002409      4c89ef         mov rdi, r13
0x0000240c      e8af4d0000     call sym.randint_all_new
0x00002411      4885c0         test rax, rax
0x00002414      488905d5bc20.  mov qword [obj.randint_source], rax     ; [0x20e0f0:8]=0
0x0000241b      0f84ca050000   je 0x29eb
0x00002421      488d3d280700.  lea rdi, sym.clear_random_data          ; 0x2b50 ; "H\x8b=\x99\xb5 "
0x00002428      e823710000     call sym.atexit
0x0000242d      85ed           test ebp, ebp
0x0000242f      0f8e7f010000   jle 0x25b4
0x00002435      4a8d442308     lea rax, [rbx + r12 + 8]
0x0000243a      8d55ff         lea edx, [rbp - 1]
0x0000243d      4e8d3c23       lea r15, [rbx + r12]
0x00002441      c644241301     mov byte [rsp + 0x13], 1
0x00002446      4489742420     mov dword [rsp + 0x20], r14d
0x0000244b      488d04d0       lea rax, [rax + rdx*8]
0x0000244f      48890424       mov qword [rsp], rax
0x00002453      488d442450     lea rax, [rsp + 0x50]
0x00002458      4889442408     mov qword [rsp + 8], rax
0x0000245d      eb56           jmp 0x24b5
0x0000245f      be03000000     mov esi, 3
0x00002464      bf01000000     mov edi, 1
0x00002469      488b2d80bc20.  mov rbp, qword [obj.randint_source]     ; [0x20e0f0:8]=0
0x00002470      e8db6a0000     call sym.rpl_fcntl
0x00002475      85c0           test eax, eax
0x00002477      0f88a1010000   js 0x261e
0x0000247d      f6c404         test ah, 4
0x00002480      0f85c7000000   jne 0x254d
0x00002486      488b4c2408     mov rcx, qword [rsp + 8]
0x0000248b      4889ea         mov rdx, rbp
0x0000248e      4889de         mov rsi, rbx
0x00002491      bf01000000     mov edi, 1
0x00002496      e875100000     call sym.do_wipefd
0x0000249b      20442413       and byte [rsp + 0x13], al
0x0000249f      4889df         mov rdi, rbx
0x000024a2      4983c708       add r15, 8
0x000024a6      e8a5f7ffff     call sym.imp.free
0x000024ab      4c3b3c24       cmp r15, qword [rsp]
0x000024af      0f8404010000   je 0x25b9
0x000024b5      498b17         mov rdx, qword [r15]
0x000024b8      be03000000     mov esi, 3
0x000024bd      31ff           xor edi, edi
0x000024bf      e8dc4a0000     call sym.quotearg_n_style_colon
0x000024c4      4889c7         mov rdi, rax
0x000024c7      e854640000     call sym.xstrdup
0x000024cc      498b2f         mov rbp, qword [r15]
0x000024cf      488d3d7c8300.  lea rdi, [0x0000a852]                   ; "-"
0x000024d6      b902000000     mov ecx, 2
0x000024db      4889c3         mov rbx, rax
0x000024de      4889ee         mov rsi, rbp
0x000024e1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000024e3      0f97c0         seta al
0x000024e6      1c00           sbb al, 0
0x000024e8      84c0           test al, al
0x000024ea      0f846fffffff   je 0x245f
0x000024f0      31c0           xor eax, eax
0x000024f2      be01010000     mov esi, 0x101
0x000024f7      4889ef         mov rdi, rbp
0x000024fa      4c8b25efbb20.  mov r12, qword [obj.randint_source]     ; [0x20e0f0:8]=0
0x00002501      e8ca210000     call sym.open_safer
0x00002506      85c0           test eax, eax
0x00002508      4189c6         mov r14d, eax
0x0000250b      786b           js 0x2578
0x0000250d      488b4c2408     mov rcx, qword [rsp + 8]
0x00002512      4c89e2         mov rdx, r12
0x00002515      4889de         mov rsi, rbx
0x00002518      4489f7         mov edi, r14d
0x0000251b      e8f00f0000     call sym.do_wipefd
0x00002520      4489f7         mov edi, r14d
0x00002523      4189c5         mov r13d, eax
0x00002526      e865f9ffff     call sym.imp.close
0x0000252b      85c0           test eax, eax
0x0000252d      0f85b7000000   jne 0x25ea
0x00002533      4584ed         test r13b, r13b
0x00002536      740b           je 0x2543
0x00002538      837c246800     cmp dword [rsp + 0x68], 0
0x0000253d      0f854b010000   jne 0x268e
0x00002543      44206c2413     and byte [rsp + 0x13], r13b
0x00002548      e952ffffff     jmp 0x249f
0x0000254d      488d35ec7f00.  lea rsi, str.s:_cannot_shred_append_only_file_descriptor ; 0xa540 ; "%s: cannot shred append-only file descriptor"
0x00002554      ba05000000     mov edx, 5
0x00002559      31ff           xor edi, edi
0x0000255b      e810f8ffff     call sym.imp.dcgettext
0x00002560      4889d9         mov rcx, rbx
0x00002563      4889c2         mov rdx, rax
0x00002566      31f6           xor esi, esi
0x00002568      31c0           xor eax, eax
0x0000256a      31ff           xor edi, edi
0x0000256c      e8affaffff     call sym.imp.error
0x00002571      31c0           xor eax, eax
0x00002573      e923ffffff     jmp 0x249b
0x00002578      e8f3f6ffff     call sym.imp.__errno_location
0x0000257d      83380d         cmp dword [rax], 0xd
0x00002580      4989c5         mov r13, rax
0x00002583      0f84c8000000   je 0x2651
0x00002589      488d35e07f00.  lea rsi, str.s:_failed_to_open_for_writing ; 0xa570 ; "%s: failed to open for writing"
0x00002590      ba05000000     mov edx, 5
0x00002595      31ff           xor edi, edi
0x00002597      e8d4f7ffff     call sym.imp.dcgettext
0x0000259c      418b7500       mov esi, dword [r13]
0x000025a0      4889c2         mov rdx, rax
0x000025a3      4889d9         mov rcx, rbx
0x000025a6      31ff           xor edi, edi
0x000025a8      31c0           xor eax, eax
0x000025aa      4531ed         xor r13d, r13d
0x000025ad      e86efaffff     call sym.imp.error
0x000025b2      eb8f           jmp 0x2543
0x000025b4      c644241301     mov byte [rsp + 0x13], 1
0x000025b9      0fb6442413     movzx eax, byte [rsp + 0x13]
0x000025be      83f001         xor eax, 1
0x000025c1      488b4c2478     mov rcx, qword [rsp + 0x78]
0x000025c6      6448330c2528.  xor rcx, qword fs:[0x28]
0x000025cf      0fb6c0         movzx eax, al
0x000025d2      0f850e040000   jne 0x29e6
0x000025d8      4881c4880000.  add rsp, 0x88
0x000025df      5b             pop rbx
0x000025e0      5d             pop rbp
0x000025e1      415c           pop r12
0x000025e3      415d           pop r13
0x000025e5      415e           pop r14
0x000025e7      415f           pop r15
0x000025e9      c3             ret
0x000025ea      488d35c67100.  lea rsi, str.s:_failed_to_close         ; 0x97b7 ; "%s: failed to close"
0x000025f1      ba05000000     mov edx, 5
0x000025f6      31ff           xor edi, edi
0x000025f8      4531ed         xor r13d, r13d
0x000025fb      e870f7ffff     call sym.imp.dcgettext
0x00002600      4889c5         mov rbp, rax
0x00002603      e868f6ffff     call sym.imp.__errno_location
0x00002608      8b30           mov esi, dword [rax]
0x0000260a      4889d9         mov rcx, rbx
0x0000260d      4889ea         mov rdx, rbp
0x00002610      31ff           xor edi, edi
0x00002612      31c0           xor eax, eax
0x00002614      e807faffff     call sym.imp.error
0x00002619      e925ffffff     jmp 0x2543
0x0000261e      488d35817100.  lea rsi, str.s:_fcntl_failed            ; 0x97a6 ; "%s: fcntl failed"
0x00002625      ba05000000     mov edx, 5
0x0000262a      31ff           xor edi, edi
0x0000262c      e83ff7ffff     call sym.imp.dcgettext
0x00002631      4889c5         mov rbp, rax
0x00002634      e837f6ffff     call sym.imp.__errno_location
0x00002639      8b30           mov esi, dword [rax]
0x0000263b      4889d9         mov rcx, rbx
0x0000263e      31c0           xor eax, eax
0x00002640      4889ea         mov rdx, rbp
0x00002643      31ff           xor edi, edi
0x00002645      e8d6f9ffff     call sym.imp.error
0x0000264a      31c0           xor eax, eax
0x0000264c      e94afeffff     jmp 0x249b
0x00002651      807c245000     cmp byte [rsp + 0x50], 0
0x00002656      0f842dffffff   je 0x2589
0x0000265c      be80000000     mov esi, 0x80
0x00002661      4889ef         mov rdi, rbp
0x00002664      e897f9ffff     call sym.imp.chmod
0x00002669      85c0           test eax, eax
0x0000266b      0f8518ffffff   jne 0x2589
0x00002671      be01010000     mov esi, 0x101
0x00002676      4889ef         mov rdi, rbp
0x00002679      e852200000     call sym.open_safer
0x0000267e      85c0           test eax, eax
0x00002680      4189c6         mov r14d, eax
0x00002683      0f8984feffff   jns 0x250d
0x00002689      e9fbfeffff     jmp 0x2589
0x0000268e      4889ef         mov rdi, rbp
0x00002691      e88a620000     call sym.xstrdup
0x00002696      4989c6         mov r14, rax
0x00002699      4889c7         mov rdi, rax
0x0000269c      4889442428     mov qword [rsp + 0x28], rax
0x000026a1      e87a1f0000     call sym.last_component
0x000026a6      4c89f7         mov rdi, r14
0x000026a9      4989c4         mov r12, rax
0x000026ac      e88f1e0000     call sym.dir_name
0x000026b1      31ff           xor edi, edi
0x000026b3      4889c2         mov rdx, rax
0x000026b6      be03000000     mov esi, 3
0x000026bb      4889442440     mov qword [rsp + 0x40], rax
0x000026c0      e8db480000     call sym.quotearg_n_style_colon
0x000026c5      4889c7         mov rdi, rax
0x000026c8      e853620000     call sym.xstrdup
0x000026cd      837c246803     cmp dword [rsp + 0x68], 3
0x000026d2      4889442418     mov qword [rsp + 0x18], rax
0x000026d7      8b442420       mov eax, dword [rsp + 0x20]
0x000026db      89442414       mov dword [rsp + 0x14], eax
0x000026df      0f84df010000   je 0x28c4
0x000026e5      807c246c00     cmp byte [rsp + 0x6c], 0
0x000026ea      0f85ab010000   jne 0x289b
0x000026f0      837c246801     cmp dword [rsp + 0x68], 1
0x000026f5      0f84cf000000   je 0x27ca
0x000026fb      4c89e7         mov rdi, r12
0x000026fe      4d89e6         mov r14, r12
0x00002701      4d8d6424ff     lea r12, [r12 - 1]
0x00002706      e8751f0000     call sym.base_len
0x0000270b      4c897c2448     mov qword [rsp + 0x48], r15
0x00002710      4c8b7c2428     mov r15, qword [rsp + 0x28]
0x00002715      4883e801       sub rax, 1
0x00002719      48895c2438     mov qword [rsp + 0x38], rbx
0x0000271e      44886c2430     mov byte [rsp + 0x30], r13b
0x00002723      4889c3         mov rbx, rax
0x00002726      44886c2427     mov byte [rsp + 0x27], r13b
0x0000272b      4883fbff       cmp rbx, 0xffffffffffffffff
0x0000272f      488d5301       lea rdx, [rbx + 1]
0x00002733      0f8481000000   je 0x27ba
0x00002739      be30000000     mov esi, 0x30                           ; '0'
0x0000273e      4c89f7         mov rdi, r14
0x00002741      e82af7ffff     call sym.imp.memset
0x00002746      41c6441e0100   mov byte [r14 + rbx + 1], 0
0x0000274c      ba9cffffff     mov edx, 0xffffff9c                     ; 4294967196
0x00002751      41b801000000   mov r8d, 1
0x00002757      4c89f9         mov rcx, r15
0x0000275a      4889ee         mov rsi, rbp
0x0000275d      89d7           mov edi, edx
0x0000275f      e8bc560000     call sym.renameatu
0x00002764      85c0           test eax, eax
0x00002766      0f8472010000   je 0x28de
0x0000276c      e8fff4ffff     call sym.imp.__errno_location
0x00002771      833811         cmp dword [rax], 0x11
0x00002774      0f85e9010000   jne 0x2963
0x0000277a      4d8d2c1e       lea r13, [r14 + rbx]
0x0000277e      eb12           jmp 0x2792
0x00002780      41c6450030     mov byte [r13], 0x30                    ; '0'
                                                                       ; [0x30:1]=0
0x00002785      4983ed01       sub r13, 1
0x00002789      4d39ec         cmp r12, r13
0x0000278c      0f84d1010000   je 0x2963
0x00002792      410fbe7500     movsx esi, byte [r13]
0x00002797      488d3d227e00.  lea rdi, obj.nameset                    ; 0xa5c0 ; "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_."
0x0000279e      e83df6ffff     call sym.imp.strchr
0x000027a3      4885c0         test rax, rax
0x000027a6      0f841b020000   je 0x29c7
0x000027ac      0fb64001       movzx eax, byte [rax + 1]
0x000027b0      84c0           test al, al
0x000027b2      74cc           je 0x2780
0x000027b4      41884500       mov byte [r13], al
0x000027b8      eb92           jmp 0x274c
0x000027ba      440fb66c2427   movzx r13d, byte [rsp + 0x27]
0x000027c0      488b5c2438     mov rbx, qword [rsp + 0x38]
0x000027c5      4c8b7c2448     mov r15, qword [rsp + 0x48]
0x000027ca      4889ef         mov rdi, rbp
0x000027cd      e8bef4ffff     call sym.imp.unlink
0x000027d2      85c0           test eax, eax
0x000027d4      0f858d000000   jne 0x2867
0x000027da      807c246c00     cmp byte [rsp + 0x6c], 0
0x000027df      0f8587010000   jne 0x296c
0x000027e5      448b742414     mov r14d, dword [rsp + 0x14]
0x000027ea      4585f6         test r14d, r14d
0x000027ed      7855           js 0x2844
0x000027ef      488b742418     mov rsi, qword [rsp + 0x18]
0x000027f4      4489f7         mov edi, r14d
0x000027f7      e8b4030000     call sym.dosync
0x000027fc      4489f7         mov edi, r14d
0x000027ff      85c0           test eax, eax
0x00002801      b800000000     mov eax, 0
0x00002806      440f45e8       cmovne r13d, eax
0x0000280a      e881f6ffff     call sym.imp.close
0x0000280f      85c0           test eax, eax
0x00002811      7431           je 0x2844
0x00002813      488d359d6f00.  lea rsi, str.s:_failed_to_close         ; 0x97b7 ; "%s: failed to close"
0x0000281a      ba05000000     mov edx, 5
0x0000281f      31ff           xor edi, edi
0x00002821      4531ed         xor r13d, r13d
0x00002824      e847f5ffff     call sym.imp.dcgettext
0x00002829      4889c5         mov rbp, rax
0x0000282c      e83ff4ffff     call sym.imp.__errno_location
0x00002831      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00002836      8b30           mov esi, dword [rax]
0x00002838      4889ea         mov rdx, rbp
0x0000283b      31ff           xor edi, edi
0x0000283d      31c0           xor eax, eax
0x0000283f      e8dcf7ffff     call sym.imp.error
0x00002844      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00002849      e802f4ffff     call sym.imp.free
0x0000284e      488b7c2440     mov rdi, qword [rsp + 0x40]
0x00002853      e8f8f3ffff     call sym.imp.free
0x00002858      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000285d      e8eef3ffff     call sym.imp.free
0x00002862      e9dcfcffff     jmp 0x2543
0x00002867      488d359a6f00.  lea rsi, str.s:_failed_to_remove        ; 0x9808 ; "%s: failed to remove"
0x0000286e      ba05000000     mov edx, 5
0x00002873      31ff           xor edi, edi
0x00002875      4531ed         xor r13d, r13d
0x00002878      e8f3f4ffff     call sym.imp.dcgettext
0x0000287d      4889c5         mov rbp, rax
0x00002880      e8ebf3ffff     call sym.imp.__errno_location
0x00002885      8b30           mov esi, dword [rax]
0x00002887      4889d9         mov rcx, rbx
0x0000288a      4889ea         mov rdx, rbp
0x0000288d      31ff           xor edi, edi
0x0000288f      31c0           xor eax, eax
0x00002891      e88af7ffff     call sym.imp.error
0x00002896      e94affffff     jmp 0x27e5
0x0000289b      488d35296f00.  lea rsi, str.s:_removing                ; 0x97cb ; "%s: removing"
0x000028a2      31ff           xor edi, edi
0x000028a4      ba05000000     mov edx, 5
0x000028a9      e8c2f4ffff     call sym.imp.dcgettext
0x000028ae      4889d9         mov rcx, rbx
0x000028b1      4889c2         mov rdx, rax
0x000028b4      31f6           xor esi, esi
0x000028b6      31ff           xor edi, edi
0x000028b8      31c0           xor eax, eax
0x000028ba      e861f7ffff     call sym.imp.error
0x000028bf      e92cfeffff     jmp 0x26f0
0x000028c4      488b7c2440     mov rdi, qword [rsp + 0x40]
0x000028c9      be00090100     mov esi, 0x10900
0x000028ce      31c0           xor eax, eax
0x000028d0      e8fb1d0000     call sym.open_safer
0x000028d5      89442414       mov dword [rsp + 0x14], eax
0x000028d9      e907feffff     jmp 0x26e5
0x000028de      837c241400     cmp dword [rsp + 0x14], 0
0x000028e3      7821           js 0x2906
0x000028e5      488b742418     mov rsi, qword [rsp + 0x18]
0x000028ea      8b7c2414       mov edi, dword [rsp + 0x14]
0x000028ee      e8bd020000     call sym.dosync
0x000028f3      0fb64c2427     movzx ecx, byte [rsp + 0x27]
0x000028f8      85c0           test eax, eax
0x000028fa      b800000000     mov eax, 0
0x000028ff      0f45c8         cmovne ecx, eax
0x00002902      884c2427       mov byte [rsp + 0x27], cl
0x00002906      807c246c00     cmp byte [rsp + 0x6c], 0
0x0000290b      7441           je 0x294e
0x0000290d      807c243000     cmp byte [rsp + 0x30], 0
0x00002912      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00002917      488d35d86e00.  lea rsi, str.s:_renamed_to__s           ; 0x97f6 ; "%s: renamed to %s"
0x0000291e      ba05000000     mov edx, 5
0x00002923      480f44cd       cmove rcx, rbp
0x00002927      31ff           xor edi, edi
0x00002929      48894c2430     mov qword [rsp + 0x30], rcx
0x0000292e      e83df4ffff     call sym.imp.dcgettext
0x00002933      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00002938      4889c2         mov rdx, rax
0x0000293b      4d89f8         mov r8, r15
0x0000293e      31f6           xor esi, esi
0x00002940      31ff           xor edi, edi
0x00002942      31c0           xor eax, eax
0x00002944      e8d7f6ffff     call sym.imp.error
0x00002949      c644243000     mov byte [rsp + 0x30], 0
0x0000294e      4c89f7         mov rdi, r14
0x00002951      488d5302       lea rdx, [rbx + 2]
0x00002955      4c89f6         mov rsi, r14
0x00002958      4c29ff         sub rdi, r15
0x0000295b      4801ef         add rdi, rbp
0x0000295e      e89df5ffff     call sym.imp.memcpy
0x00002963      4883eb01       sub rbx, 1
0x00002967      e9bffdffff     jmp 0x272b
0x0000296c      488d35aa6e00.  lea rsi, str.s:_removed                 ; 0x981d ; "%s: removed"
0x00002973      31ff           xor edi, edi
0x00002975      ba05000000     mov edx, 5
0x0000297a      e8f1f3ffff     call sym.imp.dcgettext
0x0000297f      4889d9         mov rcx, rbx
0x00002982      4889c2         mov rdx, rax
0x00002985      31f6           xor esi, esi
0x00002987      31ff           xor edi, edi
0x00002989      31c0           xor eax, eax
0x0000298b      e890f6ffff     call sym.imp.error
0x00002990      e950feffff     jmp 0x27e5
0x00002995      31ff           xor edi, edi
0x00002997      e884120000     call sym.usage
0x0000299c      488d35ee6d00.  lea rsi, str.missing_file_operand       ; 0x9791 ; "missing file operand"
0x000029a3      ba05000000     mov edx, 5
0x000029a8      31ff           xor edi, edi
0x000029aa      e8c1f3ffff     call sym.imp.dcgettext
0x000029af      31f6           xor esi, esi
0x000029b1      4889c2         mov rdx, rax
0x000029b4      31ff           xor edi, edi
0x000029b6      31c0           xor eax, eax
0x000029b8      e863f6ffff     call sym.imp.error
0x000029bd      bf01000000     mov edi, 1
0x000029c2      e859120000     call sym.usage
0x000029c7      488d0dd27b00.  lea rcx, obj.__PRETTY_FUNCTION__.7286   ; 0xa5a0 ; "incname"
0x000029ce      488d35036e00.  lea rsi, str..._coreutils_8.31_src_shred.c ; 0x97d8 ; "../coreutils-8.31/src/shred.c"
0x000029d5      488d3d826e00.  lea rdi, [0x0000985e]                   ; "p"
0x000029dc      ba0c040000     mov edx, 0x40c
0x000029e1      e86af4ffff     call sym.imp.__assert_fail
0x000029e6      e8b5f3ffff     call sym.imp.__stack_chk_fail
0x000029eb      4c89ea         mov rdx, r13
0x000029ee      be03000000     mov esi, 3
0x000029f3      31ff           xor edi, edi
0x000029f5      e8a6450000     call sym.quotearg_n_style_colon
0x000029fa      4889c3         mov rbx, rax
0x000029fd      e86ef2ffff     call sym.imp.__errno_location
0x00002a02      8b30           mov esi, dword [rax]
0x00002a04      488d155d7d00.  lea rdx, [0x0000a768]                   ; "%s"
0x00002a0b      4889d9         mov rcx, rbx
0x00002a0e      bf01000000     mov edi, 1
0x00002a13      31c0           xor eax, eax
0x00002a15      e806f6ffff     call sym.imp.error
0x00002a1a      488d35f77a00.  lea rsi, str.multiple_random_sources_specified ; 0xa518 ; "multiple random sources specified"
0x00002a21      ba05000000     mov edx, 5
0x00002a26      31ff           xor edi, edi
0x00002a28      e843f3ffff     call sym.imp.dcgettext
0x00002a2d      31f6           xor esi, esi
0x00002a2f      4889c2         mov rdx, rax
0x00002a32      bf01000000     mov edi, 1
0x00002a37      31c0           xor eax, eax
0x00002a39      e8e2f5ffff     call sym.imp.error
0x00002a3e      6690           nop
;-- entry0:
;-- _start:
;-- rip:
0x00002a40      31ed           xor ebp, ebp
0x00002a42      4989d1         mov r9, rdx
0x00002a45      5e             pop rsi
0x00002a46      4889e2         mov rdx, rsp
0x00002a49      4883e4f0       and rsp, 0xfffffffffffffff0
0x00002a4d      50             push rax
0x00002a4e      54             push rsp
0x00002a4f      4c8d05ea6a00.  lea r8, sym.__libc_csu_fini             ; 0x9540
0x00002a56      488d0d736a00.  lea rcx, sym.__libc_csu_init            ; 0x94d0 ; "AWAVI\x89\xd7AUATL\x8d%nD "
0x00002a5d      488d3ddcf6ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x2140 ; "AWAVAUATL\x8d%\x11\xb8 "
0x00002a64      ff1576b52000   call qword [reloc.__libc_start_main]    ; [0x20dfe0:8]=0
0x00002a6a      f4             hlt
0x00002a6b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002a70      488d3d29b620.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e0a0
0x00002a77      55             push rbp
0x00002a78      488d0521b620.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e0a0
0x00002a7f      4839f8         cmp rax, rdi
0x00002a82      4889e5         mov rbp, rsp
0x00002a85      7419           je 0x2aa0
0x00002a87      488b054ab520.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20dfd8:8]=0
0x00002a8e      4885c0         test rax, rax
0x00002a91      740d           je 0x2aa0
0x00002a93      5d             pop rbp
0x00002a94      ffe0           jmp rax
0x00002a96      662e0f1f8400.  nop word cs:[rax + rax]
0x00002aa0      5d             pop rbp
0x00002aa1      c3             ret
0x00002aa2      0f1f4000       nop dword [rax]
0x00002aa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002ab0      488d3de9b520.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e0a0
0x00002ab7      488d35e2b520.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e0a0
0x00002abe      55             push rbp
0x00002abf      4829fe         sub rsi, rdi
0x00002ac2      4889e5         mov rbp, rsp
0x00002ac5      48c1fe03       sar rsi, 3
0x00002ac9      4889f0         mov rax, rsi
0x00002acc      48c1e83f       shr rax, 0x3f
0x00002ad0      4801c6         add rsi, rax
0x00002ad3      48d1fe         sar rsi, 1
0x00002ad6      7418           je 0x2af0
0x00002ad8      488b0511b520.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20dff0:8]=0
0x00002adf      4885c0         test rax, rax
0x00002ae2      740c           je 0x2af0
0x00002ae4      5d             pop rbp
0x00002ae5      ffe0           jmp rax
0x00002ae7      660f1f840000.  nop word [rax + rax]
0x00002af0      5d             pop rbp
0x00002af1      c3             ret
0x00002af2      0f1f4000       nop dword [rax]
0x00002af6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002b00      803de1b52000.  cmp byte [obj.completed.7697], 0        ; [0x20e0e8:1]=0
0x00002b07      752f           jne 0x2b38
0x00002b09      48833de7b420.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20dff8:8]=0
0x00002b11      55             push rbp
0x00002b12      4889e5         mov rbp, rsp
0x00002b15      740c           je 0x2b23
0x00002b17      488b3deab420.  mov rdi, qword [obj.__dso_handle]       ; [0x20e008:8]=0x20e008 obj.__dso_handle
0x00002b1e      e80df6ffff     call sym..plt.got
0x00002b23      e848ffffff     call sym.deregister_tm_clones
0x00002b28      c605b9b52000.  mov byte [obj.completed.7697], 1        ; [0x20e0e8:1]=0
0x00002b2f      5d             pop rbp
0x00002b30      c3             ret
0x00002b31      0f1f80000000.  nop dword [rax]
0x00002b38      f3c3           ret
0x00002b3a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002b40      55             push rbp
0x00002b41      4889e5         mov rbp, rsp
0x00002b44      5d             pop rbp
0x00002b45      e966ffffff     jmp sym.register_tm_clones
0x00002b4a      660f1f440000   nop word [rax + rax]
;-- clear_random_data:
0x00002b50      488b3d99b520.  mov rdi, qword [obj.randint_source]     ; /src:1198 ; [0x20e0f0:8]=0
0x00002b57      e9f4470000     jmp sym.randint_all_free
0x00002b5c      0f1f4000       nop dword [rax]
;-- direct_mode:
0x00002b60      55             push rbp                                ; /src:368
0x00002b61      53             push rbx
0x00002b62      31c0           xor eax, eax                            ; /src:371
0x00002b64      89f5           mov ebp, esi                            ; /src:368
0x00002b66      be03000000     mov esi, 3                              ; /src:371
0x00002b6b      89fb           mov ebx, edi                            ; /src:368
0x00002b6d      4883ec08       sub rsp, 8
0x00002b71      e8da630000     call sym.rpl_fcntl                      ; /src:371
0x00002b76      85c0           test eax, eax                           ; /src:372
0x00002b78      7e2e           jle 0x2ba8
0x00002b7a      89c1           mov ecx, eax                            ; /src:376
0x00002b7c      89c2           mov edx, eax
0x00002b7e      80cd40         or ch, 0x40                             ; segment.PHDR
0x00002b81      80e6bf         and dh, 0xbf
0x00002b84      4084ed         test bpl, bpl
0x00002b87      0f45d1         cmovne edx, ecx
0x00002b8a      39c2           cmp edx, eax                            ; /src:377
0x00002b8c      741a           je 0x2ba8
0x00002b8e      4883c408       add rsp, 8                              ; /src:386
0x00002b92      89df           mov edi, ebx                            ; /src:378
0x00002b94      be04000000     mov esi, 4
0x00002b99      5b             pop rbx                                 ; /src:386
0x00002b9a      5d             pop rbp
0x00002b9b      31c0           xor eax, eax                            ; /src:378
0x00002b9d      e9ae630000     jmp sym.rpl_fcntl
0x00002ba2      660f1f440000   nop word [rax + rax]
0x00002ba8      4883c408       add rsp, 8                              ; /src:386
0x00002bac      5b             pop rbx
0x00002bad      5d             pop rbp
0x00002bae      c3             ret
0x00002baf      90             nop
;-- dosync:
0x00002bb0      4155           push r13                                ; /src:335
0x00002bb2      4154           push r12
0x00002bb4      4989f5         mov r13, rsi
0x00002bb7      55             push rbp
0x00002bb8      53             push rbx
0x00002bb9      89fb           mov ebx, edi
0x00002bbb      4883ec08       sub rsp, 8
0x00002bbf      e8bcf0ffff     call sym.imp.fdatasync                  ; /src:339
0x00002bc4      85c0           test eax, eax
0x00002bc6      746d           je 0x2c35
0x00002bc8      e8a3f0ffff     call sym.imp.__errno_location           ; /src:341
0x00002bcd      8b28           mov ebp, dword [rax]
0x00002bcf      4989c4         mov r12, rax
0x00002bd2      8d45eb         lea eax, [rbp - 0x15]                   ; /src:324
0x00002bd5      83f801         cmp eax, 1
0x00002bd8      7605           jbe 0x2bdf
0x00002bda      83fd09         cmp ebp, 9
0x00002bdd      7569           jne 0x2c48
0x00002bdf      89df           mov edi, ebx                            ; /src:350
0x00002be1      e84af4ffff     call sym.imp.fsync
0x00002be6      85c0           test eax, eax
0x00002be8      744b           je 0x2c35
0x00002bea      418b1c24       mov ebx, dword [r12]                    ; /src:352
0x00002bee      8d43eb         lea eax, [rbx - 0x15]                   ; /src:324
0x00002bf1      83f801         cmp eax, 1
0x00002bf4      763a           jbe 0x2c30
0x00002bf6      83fb09         cmp ebx, 9
0x00002bf9      7435           je 0x2c30
0x00002bfb      488d35976900.  lea rsi, str.s:_fsync_failed            ; /src:355 ; 0x9599 ; "%s: fsync failed"
0x00002c02      ba05000000     mov edx, 5
0x00002c07      31ff           xor edi, edi
0x00002c09      e862f1ffff     call sym.imp.dcgettext
0x00002c0e      4c89e9         mov rcx, r13
0x00002c11      4889c2         mov rdx, rax
0x00002c14      89de           mov esi, ebx
0x00002c16      31c0           xor eax, eax
0x00002c18      31ff           xor edi, edi
0x00002c1a      e801f4ffff     call sym.imp.error
0x00002c1f      41891c24       mov dword [r12], ebx                    ; /src:356
0x00002c23      b8ffffffff     mov eax, 0xffffffff                     ; /src:357 ; -1
0x00002c28      eb0d           jmp 0x2c37
0x00002c2a      660f1f440000   nop word [rax + rax]
0x00002c30      e80bf3ffff     call sym.imp.sync                       ; /src:360
0x00002c35      31c0           xor eax, eax                            ; /src:361
0x00002c37      4883c408       add rsp, 8                              ; /src:362
0x00002c3b      5b             pop rbx
0x00002c3c      5d             pop rbp
0x00002c3d      415c           pop r12
0x00002c3f      415d           pop r13
0x00002c41      c3             ret
0x00002c42      660f1f440000   nop word [rax + rax]
0x00002c48      488d35356900.  lea rsi, str.s:_fdatasync_failed        ; /src:344 ; 0x9584 ; "%s: fdatasync failed"
0x00002c4f      ba05000000     mov edx, 5
0x00002c54      31ff           xor edi, edi
0x00002c56      e815f1ffff     call sym.imp.dcgettext
0x00002c5b      4c89e9         mov rcx, r13
0x00002c5e      4889c2         mov rdx, rax
0x00002c61      89ee           mov esi, ebp
0x00002c63      31c0           xor eax, eax
0x00002c65      31ff           xor edi, edi
0x00002c67      e8b4f3ffff     call sym.imp.error
0x00002c6c      41892c24       mov dword [r12], ebp                    ; /src:345
0x00002c70      4883c408       add rsp, 8                              ; /src:362
0x00002c74      b8ffffffff     mov eax, 0xffffffff                     ; /src:346 ; -1
0x00002c79      5b             pop rbx                                 ; /src:362
0x00002c7a      5d             pop rbp
0x00002c7b      415c           pop r12
0x00002c7d      415d           pop r13
0x00002c7f      c3             ret
;-- dopass:
0x00002c80      4157           push r15
0x00002c82      4156           push r14                                ; /src:306
0x00002c84      4889c8         mov rax, rcx
0x00002c87      4155           push r13
0x00002c89      4154           push r12
0x00002c8b      4189fe         mov r14d, edi
0x00002c8e      55             push rbp
0x00002c8f      53             push rbx
0x00002c90      4489c3         mov ebx, r8d
0x00002c93      4881ec480800.  sub rsp, 0x848
0x00002c9a      4c8b38         mov r15, qword [rax]
0x00002c9d      48894c2450     mov qword [rsp + 0x50], rcx
0x00002ca2      48893424       mov qword [rsp], rsi
0x00002ca6      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00002caf      48898c243808.  mov qword [rsp + 0x838], rcx
0x00002cb7      31c9           xor ecx, ecx                            ; /src:315
0x00002cb9      4889542408     mov qword [rsp + 8], rdx
0x00002cbe      4489442420     mov dword [rsp + 0x20], r8d
0x00002cc3      4c894c2448     mov qword [rsp + 0x48], r9
0x00002cc8      e8d3f3ffff     call sym.imp.getpagesize                ; /src:139
0x00002ccd      85db           test ebx, ebx
0x00002ccf      4863e8         movsxd rbp, eax                         ; /src:140
0x00002cd2      0f8ef8000000   jle 0x2dd0
0x00002cd8      89da           mov edx, ebx
0x00002cda      81e2ff0f0000   and edx, 0xfff
0x00002ce0      89d0           mov eax, edx
0x00002ce2      c1e00c         shl eax, 0xc
0x00002ce5      09d0           or eax, edx
0x00002ce7      89c2           mov edx, eax
0x00002ce9      c1ea04         shr edx, 4
0x00002cec      38d4           cmp ah, dl
0x00002cee      7508           jne 0x2cf8
0x00002cf0      38c2           cmp dl, al
0x00002cf2      0f84d8000000   je 0x2dd0
0x00002cf8      41bd00f00000   mov r13d, 0xf000
0x00002cfe      48c744241800.  mov qword [rsp + 0x18], 0xf000          ; [0xf000:8]=-1
0x00002d07      488d5dff       lea rbx, [rbp - 1]
0x00002d0b      4d89fc         mov r12, r15
0x00002d0e      498d7c1d00     lea rdi, [r13 + rbx]
0x00002d13      e8d8590000     call sym.xmalloc                        ; /src:339
0x00002d18      4d85ff         test r15, r15
0x00002d1b      4889442430     mov qword [rsp + 0x30], rax
0x00002d20      0f9fc2         setg dl
0x00002d23      4c3b7c2418     cmp r15, qword [rsp + 0x18]
0x00002d28      0f92c0         setb al
0x00002d2b      20c2           and dl, al
0x00002d2d      88542427       mov byte [rsp + 0x27], dl
0x00002d31      0f84e9030000   je 0x3120
0x00002d37      488b0424       mov rax, qword [rsp]
0x00002d3b      8b4018         mov eax, dword [rax + 0x18]
0x00002d3e      2500f00000     and eax, 0xf000
0x00002d43      3d00200000     cmp eax, sym.imp.chmod                  ; 0x2000 ; int chmod(const char *path, int mode)
0x00002d48      0f849a000000   je 0x2de8
0x00002d4e      31d2           xor edx, edx                            ; /src:145
0x00002d50      31f6           xor esi, esi
0x00002d52      4489f7         mov edi, r14d
0x00002d55      e8d6f0ffff     call sym.imp.lseek
0x00002d5a      4883f800       cmp rax, 0
0x00002d5e      0f8ed4030000   jle 0x3138
0x00002d64      e807efffff     call sym.imp.__errno_location
0x00002d69      4889c3         mov rbx, rax
0x00002d6c      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x2a400000
0x00002d72      488d35316800.  lea rsi, str.s:_cannot_rewind           ; 0x95aa ; "%s: cannot rewind"
0x00002d79      ba05000000     mov edx, 5
0x00002d7e      31ff           xor edi, edi
0x00002d80      e8ebefffff     call sym.imp.dcgettext
0x00002d85      488b4c2408     mov rcx, qword [rsp + 8]
0x00002d8a      8b33           mov esi, dword [rbx]
0x00002d8c      4889c2         mov rdx, rax                            ; /src:-46
0x00002d8f      31ff           xor edi, edi
0x00002d91      31c0           xor eax, eax
0x00002d93      e888f2ffff     call sym.imp.error                      ; /src:-45
0x00002d98      488b7c2430     mov rdi, qword [rsp + 0x30]             ; /src:-43
0x00002d9d      e8aeeeffff     call sym.imp.free
0x00002da2      b8ffffffff     mov eax, 0xffffffff                     ; /src:-45 ; -1
0x00002da7      488b8c243808.  mov rcx, qword [rsp + 0x838]
0x00002daf      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002db8      0f853e070000   jne 0x34fc
0x00002dbe      4881c4480800.  add rsp, 0x848
0x00002dc5      5b             pop rbx
0x00002dc6      5d             pop rbp
0x00002dc7      415c           pop r12
0x00002dc9      415d           pop r13                                 ; /src:-36
0x00002dcb      415e           pop r14
0x00002dcd      415f           pop r15
0x00002dcf      c3             ret
0x00002dd0      41bd02000100   mov r13d, 0x10002
0x00002dd6      48c744241800.  mov qword [rsp + 0x18], 0x10000         ; [0x10000:8]=-1
0x00002ddf      e923ffffff     jmp 0x2d07
0x00002de4      0f1f4000       nop dword [rax]
0x00002de8      b806000000     mov eax, 6
0x00002ded      488d542470     lea rdx, [rsp + 0x70]
0x00002df2      be016d0840     mov esi, 0x40086d01
0x00002df7      6689442470     mov word [rsp + 0x70], ax
0x00002dfc      4489f7         mov edi, r14d
0x00002dff      31c0           xor eax, eax
0x00002e01      c74424740100.  mov dword [rsp + 0x74], 1
0x00002e09      e872f0ffff     call sym.imp.ioctl
0x00002e0e      85c0           test eax, eax
0x00002e10      0f8538ffffff   jne 0x2d4e
0x00002e16      48035c2430     add rbx, qword [rsp + 0x30]
0x00002e1b      31d2           xor edx, edx
0x00002e1d      448b5c2420     mov r11d, dword [rsp + 0x20]
0x00002e22      4889d8         mov rax, rbx
0x00002e25      48f7f5         div rbp
0x00002e28      4829d3         sub rbx, rdx
0x00002e2b      4585db         test r11d, r11d
0x00002e2e      0f88ac030000   js 0x31e0
0x00002e34      4d39ef         cmp r15, r13
0x00002e37      0f8393030000   jae 0x31d0
0x00002e3d      4d85ff         test r15, r15
0x00002e40      0f888a030000   js 0x31d0
0x00002e46      8b442420       mov eax, dword [rsp + 0x20]
0x00002e4a      4c89e5         mov rbp, r12
0x00002e4d      41bd03000000   mov r13d, 3                             ; /src:241
0x00002e53      48d1ed         shr rbp, 1
0x00002e56      25ff0f0000     and eax, 0xfff
0x00002e5b      89c2           mov edx, eax
0x00002e5d      c1e20c         shl edx, 0xc
0x00002e60      09d0           or eax, edx
0x00002e62      89c2           mov edx, eax
0x00002e64      886301         mov byte [rbx + 1], ah
0x00002e67      884302         mov byte [rbx + 2], al
0x00002e6a      c1ea04         shr edx, 4
0x00002e6d      4883fd02       cmp rbp, 2
0x00002e71      8813           mov byte [rbx], dl
0x00002e73      761a           jbe 0x2e8f                              ; /src:174
0x00002e75      0f1f00         nop dword [rax]
0x00002e78      4a8d3c2b       lea rdi, [rbx + r13]
0x00002e7c      4c89ea         mov rdx, r13
0x00002e7f      4889de         mov rsi, rbx
0x00002e82      4d01ed         add r13, r13
0x00002e85      e876f0ffff     call sym.imp.memcpy                     ; /src:177
0x00002e8a      4c39ed         cmp rbp, r13
0x00002e8d      73e9           jae 0x2e78
0x00002e8f      4d39ec         cmp r12, r13
0x00002e92      0f8718030000   ja 0x31b0
0x00002e98      f74424200010.  test dword [rsp + 0x20], 0x1000
0x00002ea0      741d           je 0x2ebf
0x00002ea2      4d85e4         test r12, r12
0x00002ea5      7418           je 0x2ebf
0x00002ea7      31c0           xor eax, eax
0x00002ea9      0f1f80000000.  nop dword [rax]
0x00002eb0      80040380       add byte [rbx + rax], 0x80              ; [0x80:1]=56
0x00002eb4      480500020000   add rax, 0x200
0x00002eba      4939c4         cmp r12, rax
0x00002ebd      77f1           ja 0x2eb0
0x00002ebf      0fb64302       movzx eax, byte [rbx + 2]
0x00002ec3      488d7c2479     lea rdi, [rsp + 0x79]
0x00002ec8      4883ec08       sub rsp, 8
0x00002ecc      488d0d416700.  lea rcx, str.02x_02x_02x                ; 0x9614 ; "%02x%02x%02x"
0x00002ed3      ba07000000     mov edx, 7
0x00002ed8      be01000000     mov esi, 1
0x00002edd      50             push rax
0x00002ede      440fb64b01     movzx r9d, byte [rbx + 1]
0x00002ee3      31c0           xor eax, eax
0x00002ee5      440fb603       movzx r8d, byte [rbx]
0x00002ee9      e832f2ffff     call sym.imp.__sprintf_chk
0x00002eee      58             pop rax
0x00002eef      5a             pop rdx
0x00002ef0      4883bc248808.  cmp qword [rsp + 0x888], 0
0x00002ef9      0f8551020000   jne 0x3150
0x00002eff      488d05aa7e00.  lea rax, [0x0000adb0]
0x00002f06      c644241000     mov byte [rsp + 0x10], 0
0x00002f0b      48c744246000.  mov qword [rsp + 0x60], 0
0x00002f14      48c704240000.  mov qword [rsp], 0
0x00002f1c      4d89fd         mov r13, r15
0x00002f1f      4889442458     mov qword [rsp + 0x58], rax
0x00002f24      4d85ed         test r13, r13
0x00002f27      0f88cb010000   js 0x30f8
0x00002f2d      488b0424       mov rax, qword [rsp]
0x00002f31      4c89ed         mov rbp, r13
0x00002f34      4829c5         sub rbp, rax
0x00002f37      483b6c2418     cmp rbp, qword [rsp + 0x18]
0x00002f3c      0f83b6010000   jae 0x30f8
0x00002f42      4885ed         test rbp, rbp
0x00002f45      0f84ef040000   je 0x343a
0x00002f4b      4939c5         cmp r13, rax
0x00002f4e      0f8ce6040000   jl 0x343a
0x00002f54      8b7c2420       mov edi, dword [rsp + 0x20]
0x00002f58      85ff           test edi, edi
0x00002f5a      0f88a9010000   js 0x3109
0x00002f60      488d8424a005.  lea rax, [rsp + 0x5a0]
0x00002f68      4531ff         xor r15d, r15d
0x00002f6b      4c896c2428     mov qword [rsp + 0x28], r13
0x00002f70      4889442438     mov qword [rsp + 0x38], rax
0x00002f75      4c89e8         mov rax, r13
0x00002f78      48f7d0         not rax
0x00002f7b      48c1e83f       shr rax, 0x3f
0x00002f7f      4889442440     mov qword [rsp + 0x40], rax
0x00002f84      eb16           jmp 0x2f9c
0x00002f86      662e0f1f8400.  nop word cs:[rax + rax]
0x00002f90      4901c7         add r15, rax
0x00002f93      4c39fd         cmp rbp, r15
0x00002f96      0f8684020000   jbe 0x3220
0x00002f9c      4889ea         mov rdx, rbp
0x00002f9f      4a8d343b       lea rsi, [rbx + r15]
0x00002fa3      4489f7         mov edi, r14d
0x00002fa6      4c29fa         sub rdx, r15
0x00002fa9      e862edffff     call sym.imp.write
0x00002fae      4885c0         test rax, rax
0x00002fb1      7fdd           jg 0x2f90
0x00002fb3      48837c242800   cmp qword [rsp + 0x28], 0
0x00002fb9      0f88e1000000   js 0x30a0
0x00002fbf      e8acecffff     call sym.imp.__errno_location
0x00002fc4      448b20         mov r12d, dword [rax]
0x00002fc7      4989c5         mov r13, rax
0x00002fca      0fb6442427     movzx eax, byte [rsp + 0x27]
0x00002fcf      83f001         xor eax, 1
0x00002fd2      4183fc16       cmp r12d, 0x16
0x00002fd6      0f94c2         sete dl                                 ; /src:187
0x00002fd9      20d0           and al, dl
0x00002fdb      0f851f020000   jne 0x3200
0x00002fe1      488b0424       mov rax, qword [rsp]
0x00002fe5      488b742438     mov rsi, qword [rsp + 0x38]
0x00002fea      4a8d3c38       lea rdi, [rax + r15]
0x00002fee      e81d240000     call sym.umaxtostr
0x00002ff3      488d35866800.  lea rsi, str.s:_error_writing_at_offset__s ; 0x9880 ; "%s: error writing at offset %s"
0x00002ffa      31ff           xor edi, edi
0x00002ffc      ba05000000     mov edx, 5
0x00003001      4889442410     mov qword [rsp + 0x10], rax
0x00003006      e865edffff     call sym.imp.dcgettext
0x0000300b      4c8b442410     mov r8, qword [rsp + 0x10]
0x00003010      488b4c2408     mov rcx, qword [rsp + 8]
0x00003015      4889c2         mov rdx, rax
0x00003018      31ff           xor edi, edi
0x0000301a      31c0           xor eax, eax
0x0000301c      4489e6         mov esi, r12d
0x0000301f      e8fcefffff     call sym.imp.error
0x00003024      4183fc05       cmp r12d, 5
0x00003028      0f94c0         sete al
0x0000302b      22442440       and al, byte [rsp + 0x40]
0x0000302f      88442410       mov byte [rsp + 0x10], al
0x00003033      0f845ffdffff   je 0x2d98
0x00003039      4d89f9         mov r9, r15
0x0000303c      4981c9ff0100.  or r9, 0x1ff
0x00003043      4939e9         cmp r9, rbp
0x00003046      0f834cfdffff   jae 0x2d98
0x0000304c      488b0424       mov rax, qword [rsp]
0x00003050      4d8d7901       lea r15, [r9 + 1]
0x00003054      31d2           xor edx, edx
0x00003056      4489f7         mov edi, r14d
0x00003059      4a8d3438       lea rsi, [rax + r15]
0x0000305d      e8ceedffff     call sym.imp.lseek
0x00003062      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003066      0f8527ffffff   jne 0x2f93
0x0000306c      488d35756500.  lea rsi, str.s:_lseek_failed            ; 0x95e8 ; "%s: lseek failed"
0x00003073      31ff           xor edi, edi
0x00003075      ba05000000     mov edx, 5
0x0000307a      e8f1ecffff     call sym.imp.dcgettext
0x0000307f      488b4c2408     mov rcx, qword [rsp + 8]
0x00003084      418b7500       mov esi, dword [r13]
0x00003088      4889c2         mov rdx, rax
0x0000308b      31ff           xor edi, edi
0x0000308d      31c0           xor eax, eax
0x0000308f      e88cefffff     call sym.imp.error
0x00003094      e9fffcffff     jmp 0x2d98
0x00003099      0f1f80000000.  nop dword [rax]
0x000030a0      4885c0         test rax, rax
0x000030a3      7415           je 0x30ba
0x000030a5      e8c6ebffff     call sym.imp.__errno_location
0x000030aa      448b20         mov r12d, dword [rax]
0x000030ad      4989c5         mov r13, rax
0x000030b0      4183fc1c       cmp r12d, 0x1c
0x000030b4      0f8510ffffff   jne 0x2fca
0x000030ba      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x000030c4      482b0424       sub rax, qword [rsp]                    ; /src:160
0x000030c8      4c39f8         cmp rax, r15
0x000030cb      0f83ea020000   jae 0x33bb
0x000030d1      488d35fd6400.  lea rsi, str.s:_file_too_large          ; 0x95d5 ; "%s: file too large"
0x000030d8      ba05000000     mov edx, 5
0x000030dd      31ff           xor edi, edi
0x000030df      e88cecffff     call sym.imp.dcgettext
0x000030e4      488b4c2408     mov rcx, qword [rsp + 8]
0x000030e9      4889c2         mov rdx, rax
0x000030ec      31f6           xor esi, esi
0x000030ee      e99cfcffff     jmp 0x2d8f                              ; ../coreutils-8.31/src/red.c:-299
0x000030f3      0f1f440000     nop dword [rax + rax]
0x000030f8      8b7c2420       mov edi, dword [rsp + 0x20]
0x000030fc      488b6c2418     mov rbp, qword [rsp + 0x18]
0x00003101      85ff           test edi, edi                           ; /src:147
0x00003103      0f8957feffff   jns 0x2f60
0x00003109      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0000310e      4889ea         mov rdx, rbp
0x00003111      4889de         mov rsi, rbx                            ; ../coreutils-8.31/src/red.c:-299
0x00003114      e847460000     call sym.randread
0x00003119      e942feffff     jmp 0x2f60
0x0000311e      6690           nop
0x00003120      be01000000     mov esi, 1
0x00003125      4489f7         mov edi, r14d
0x00003128      e833faffff     call sym.direct_mode
0x0000312d      e905fcffff     jmp 0x2d37
0x00003132      660f1f440000   nop word [rax + rax]
0x00003138      0f84d8fcffff   je 0x2e16
0x0000313e      e82debffff     call sym.imp.__errno_location
0x00003143      4889c3         mov rbx, rax
0x00003146      e927fcffff     jmp 0x2d72
0x0000314b      0f1f440000     nop dword [rax + rax]
0x00003150      488d35656400.  lea rsi, str.s:_pass__lu__lu___s_...    ; 0x95bc ; "%s: pass %lu/%lu (%s)..."
0x00003157      ba05000000     mov edx, 5
0x0000315c      31ff           xor edi, edi
0x0000315e      e80decffff     call sym.imp.dcgettext
0x00003163      4883ec08       sub rsp, 8
0x00003167      31f6           xor esi, esi
0x00003169      31ff           xor edi, edi
0x0000316b      488d94248100.  lea rdx, [rsp + 0x81]
0x00003173      52             push rdx                                ; /src:253
0x00003174      4c8b8c249808.  mov r9, qword [rsp + 0x898]
0x0000317c      4889c2         mov rdx, rax
0x0000317f      4c8b84249008.  mov r8, qword [rsp + 0x890]
0x00003187      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000318c      31c0           xor eax, eax
0x0000318e      e88deeffff     call sym.imp.error
0x00003193      31ff           xor edi, edi
0x00003195      e876edffff     call sym.imp.time
0x0000319a      4883c005       add rax, 5
0x0000319e      4889442478     mov qword [rsp + 0x78], rax
0x000031a3      4158           pop r8
0x000031a5      4159           pop r9
0x000031a7      e953fdffff     jmp 0x2eff
0x000031ac      0f1f4000       nop dword [rax]
0x000031b0      4c89e2         mov rdx, r12
0x000031b3      4a8d3c2b       lea rdi, [rbx + r13]
0x000031b7      4889de         mov rsi, rbx
0x000031ba      4c29ea         sub rdx, r13
0x000031bd      e83eedffff     call sym.imp.memcpy
0x000031c2      e9d1fcffff     jmp 0x2e98
0x000031c7      660f1f840000.  nop word [rax + rax]
0x000031d0      4d89ec         mov r12, r13
0x000031d3      e96efcffff     jmp 0x2e46
0x000031d8      0f1f84000000.  nop dword [rax + rax]
0x000031e0      41ba6f6d0000   mov r10d, 0x6d6f                        ; 'om'
0x000031e6      c74424797261.  mov dword [rsp + 0x79], 0x646e6172      ; 'rand'
                                                                       ; [0x646e6172:4]=-1
0x000031ee      c644247f00     mov byte [rsp + 0x7f], 0
0x000031f3      66448954247d   mov word [rsp + 0x7d], r10w             ; /src:272
0x000031f9      e9f2fcffff     jmp 0x2ef0
0x000031fe      6690           nop
0x00003200      31f6           xor esi, esi
0x00003202      4489f7         mov edi, r14d
0x00003205      88442427       mov byte [rsp + 0x27], al
0x00003209      e852f9ffff     call sym.direct_mode
0x0000320e      4c39fd         cmp rbp, r15
0x00003211      0f8785fdffff   ja 0x2f9c
0x00003217      660f1f840000.  nop word [rax + rax]
0x00003220      488b0c24       mov rcx, qword [rsp]
0x00003224      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x0000322e      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x00003233      4829c8         sub rax, rcx
0x00003236      4c39f8         cmp rax, r15
0x00003239      0f8292feffff   jb 0x30d1
0x0000323f      4c01f9         add rcx, r15
0x00003242      4883bc248808.  cmp qword [rsp + 0x888], 0
0x0000324b      4889cd         mov rbp, rcx
0x0000324e      48890c24       mov qword [rsp], rcx                    ; /src:283
0x00003252      0f84ccfcffff   je 0x2f24
0x00003258      4939cd         cmp r13, rcx
0x0000325b      0f847f010000   je 0x33e0
0x00003261      31ff           xor edi, edi
0x00003263      e8a8ecffff     call sym.imp.time
0x00003268      4839442468     cmp qword [rsp + 0x68], rax
0x0000326d      4889442460     mov qword [rsp + 0x60], rax
0x00003272      0f8facfcffff   jg 0x2f24
0x00003278      488b3c24       mov rdi, qword [rsp]
0x0000327c      488db4241003.  lea rsi, [rsp + 0x310]
0x00003284      41b801000000   mov r8d, 1
0x0000328a      b901000000     mov ecx, 1
0x0000328f      bab2010000     mov edx, 0x1b2
0x00003294      e877150000     call sym.human_readable                 ; ../coreutils-8.31/src/red.c:-243
0x00003299      488b7c2458     mov rdi, qword [rsp + 0x58]
0x0000329e      4889c6         mov rsi, rax
0x000032a1      4989c4         mov r12, rax
0x000032a4      e827ecffff     call sym.imp.strcmp
0x000032a9      85c0           test eax, eax
0x000032ab      0f8473fcffff   je 0x2f24
0x000032b1      4d85ed         test r13, r13                           ; /src:299
0x000032b4      0f88b7010000   js 0x3471
0x000032ba      41bf64000000   mov r15d, 0x64                          ; 'd'
0x000032c0      7428           je 0x32ea
0x000032c2      48b85c8fc2f5.  movabs rax, 0x28f5c28f5c28f5c
0x000032cc      4839c5         cmp rbp, rax
0x000032cf      0f87e4010000   ja 0x34b9                               ; /src:301
0x000032d5      488d44ad00     lea rax, [rbp + rbp*4]
0x000032da      31d2           xor edx, edx
0x000032dc      488d0480       lea rax, [rax + rax*4]
0x000032e0      48c1e002       shl rax, 2
0x000032e4      49f7f5         div r13
0x000032e7      4189c7         mov r15d, eax
0x000032ea      488db424a005.  lea rsi, [rsp + 0x5a0]
0x000032f2      41b801000000   mov r8d, 1
0x000032f8      b901000000     mov ecx, 1                              ; /src:253
0x000032fd      bab0010000     mov edx, 0x1b0
0x00003302      4c89ef         mov rdi, r13
0x00003305      e806150000     call sym.human_readable
0x0000330a      4c39ed         cmp rbp, r13
0x0000330d      488d358c6500.  lea rsi, str.s:_pass__lu__lu___s_..._s__s__d ; 0x98a0 ; "%s: pass %lu/%lu (%s)...%s/%s %d%%"
0x00003314      ba05000000     mov edx, 5
0x00003319      4c0f44e0       cmove r12, rax
0x0000331d      31ff           xor edi, edi
0x0000331f      4889442428     mov qword [rsp + 0x28], rax
0x00003324      e847eaffff     call sym.imp.dcgettext
0x00003329      4157           push r15
0x0000332b      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00003330      31f6           xor esi, esi
0x00003332      31ff           xor edi, edi
0x00003334      51             push rcx
0x00003335      4154           push r12
0x00003337      488d94249100.  lea rdx, [rsp + 0x91]
0x0000333f      52             push rdx
0x00003340      4c8b8c24a808.  mov r9, qword [rsp + 0x8a8]
0x00003348      4889c2         mov rdx, rax
0x0000334b      4c8b8424a008.  mov r8, qword [rsp + 0x8a0]
0x00003353      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003358      31c0           xor eax, eax
0x0000335a      e8c1ecffff     call sym.imp.error
0x0000335f      4883c420       add rsp, 0x20
0x00003363      488dac248000.  lea rbp, [rsp + 0x80]
0x0000336b      ba8c020000     mov edx, 0x28c                          ; /src:313
0x00003370      4c89e6         mov rsi, r12
0x00003373      4889ef         mov rdi, rbp
0x00003376      e835ecffff     call sym.imp.__strcpy_chk
0x0000337b      488b442460     mov rax, qword [rsp + 0x60]
0x00003380      488b742408     mov rsi, qword [rsp + 8]                ; /src:315
0x00003385      4489f7         mov edi, r14d
0x00003388      4883c005       add rax, 5                              ; /src:324
0x0000338c      4889442468     mov qword [rsp + 0x68], rax
0x00003391      e81af8ffff     call sym.dosync
0x00003396      85c0           test eax, eax
0x00003398      0f8492000000   je 0x3430
0x0000339e      e8cde8ffff     call sym.imp.__errno_location
0x000033a3      833805         cmp dword [rax], 5
0x000033a6      0f85ecf9ffff   jne 0x2d98
0x000033ac      48896c2458     mov qword [rsp + 0x58], rbp
0x000033b1      c644241001     mov byte [rsp + 0x10], 1
0x000033b6      e969fbffff     jmp 0x2f24
0x000033bb      488b2c24       mov rbp, qword [rsp]
0x000033bf      488b442450     mov rax, qword [rsp + 0x50]
0x000033c4      4c01fd         add rbp, r15
0x000033c7      4883bc248808.  cmp qword [rsp + 0x888], 0
0x000033d0      4989ed         mov r13, rbp
0x000033d3      48892c24       mov qword [rsp], rbp
0x000033d7      488928         mov qword [rax], rbp
0x000033da      0f8444fbffff   je 0x2f24
0x000033e0      488b442458     mov rax, qword [rsp + 0x58]
0x000033e5      803800         cmp byte [rax], 0
0x000033e8      7428           je 0x3412
0x000033ea      488db4241003.  lea rsi, [rsp + 0x310]                  ; /src:276
0x000033f2      41b801000000   mov r8d, 1
0x000033f8      b901000000     mov ecx, 1
0x000033fd      bab2010000     mov edx, 0x1b2
0x00003402      4889ef         mov rdi, rbp
0x00003405      e806140000     call sym.human_readable
0x0000340a      4989c4         mov r12, rax
0x0000340d      e99ffeffff     jmp 0x32b1
0x00003412      31ff           xor edi, edi
0x00003414      e8f7eaffff     call sym.imp.time
0x00003419      4839442468     cmp qword [rsp + 0x68], rax             ; /src:324
0x0000341e      4889442460     mov qword [rsp + 0x60], rax
0x00003423      0f8ffbfaffff   jg 0x2f24
0x00003429      ebbf           jmp 0x33ea
0x0000342b      0f1f440000     nop dword [rax + rax]
0x00003430      48896c2458     mov qword [rsp + 0x58], rbp
0x00003435      e9eafaffff     jmp 0x2f24
0x0000343a      488b742408     mov rsi, qword [rsp + 8]
0x0000343f      4489f7         mov edi, r14d
0x00003442      e869f7ffff     call sym.dosync
0x00003447      85c0           test eax, eax
0x00003449      0f8499000000   je 0x34e8
0x0000344f      e81ce8ffff     call sym.imp.__errno_location
0x00003454      833805         cmp dword [rax], 5
0x00003457      488b7c2430     mov rdi, qword [rsp + 0x30]             ; /src:525
0x0000345c      0f853bf9ffff   jne 0x2d9d
0x00003462      e8e9e7ffff     call sym.imp.free
0x00003467      b801000000     mov eax, 1
0x0000346c      e936f9ffff     jmp 0x2da7
0x00003471      488d35816100.  lea rsi, str.s:_pass__lu__lu___s_..._s  ; 0x95f9 ; "%s: pass %lu/%lu (%s)...%s"
0x00003478      ba05000000     mov edx, 5
0x0000347d      31ff           xor edi, edi
0x0000347f      e8ece8ffff     call sym.imp.dcgettext
0x00003484      4154           push r12
0x00003486      31f6           xor esi, esi
0x00003488      31ff           xor edi, edi
0x0000348a      488d94248100.  lea rdx, [rsp + 0x81]
0x00003492      52             push rdx
0x00003493      4c8b8c249808.  mov r9, qword [rsp + 0x898]
0x0000349b      4889c2         mov rdx, rax
0x0000349e      4c8b84249008.  mov r8, qword [rsp + 0x890]
0x000034a6      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000034ab      31c0           xor eax, eax
0x000034ad      e86eebffff     call sym.imp.error
0x000034b2      59             pop rcx
0x000034b3      5e             pop rsi
0x000034b4      e9aafeffff     jmp 0x3363
0x000034b9      48b80bd7a370.  movabs rax, 0xa3d70a3d70a3d70b
0x000034c3      49f7ed         imul r13
0x000034c6      4c89e8         mov rax, r13
0x000034c9      48c1f83f       sar rax, 0x3f
0x000034cd      4a8d0c2a       lea rcx, [rdx + r13]
0x000034d1      31d2           xor edx, edx
0x000034d3      48c1f906       sar rcx, 6
0x000034d7      4829c1         sub rcx, rax                            ; /src:550
0x000034da      4889e8         mov rax, rbp
0x000034dd      48f7f1         div rcx
0x000034e0      4189c7         mov r15d, eax
0x000034e3      e902feffff     jmp 0x32ea
0x000034e8      488b7c2430     mov rdi, qword [rsp + 0x30]
0x000034ed      e85ee7ffff     call sym.imp.free
0x000034f2      0fb6442410     movzx eax, byte [rsp + 0x10]
0x000034f7      e9abf8ffff     jmp 0x2da7
0x000034fc      e89fe8ffff     call sym.imp.__stack_chk_fail
0x00003501      0f1f440000     nop dword [rax + rax]
0x00003506      662e0f1f8400.  nop word cs:[rax + rax]
;-- do_wipefd:
0x00003510      4157           push r15
0x00003512      4156           push r14
0x00003514      4155           push r13
0x00003516      4154           push r12
0x00003518      55             push rbp
0x00003519      53             push rbx
0x0000351a      89fd           mov ebp, edi                            ; /src:603
0x0000351c      4889cb         mov rbx, rcx
0x0000351f      4881ec180100.  sub rsp, 0x118                          ; stdio2.h:-226
0x00003526      64488b042528.  mov rax, qword fs:[0x28]
0x0000352f      488984240801.  mov qword [rsp + 0x108], rax
0x00003537      31c0           xor eax, eax
0x00003539      80791c00       cmp byte [rcx + 0x1c], 0                ; /src:433
0x0000353d      48893424       mov qword [rsp], rsi
0x00003541      4889542430     mov qword [rsp + 0x30], rdx
0x00003546      48c744242800.  mov qword [rsp + 0x28], 0
0x0000354f      740d           je 0x355e
0x00003551      0fb6411e       movzx eax, byte [rcx + 0x1e]
0x00003555      48034108       add rax, qword [rcx + 8]                ; /src:447
0x00003559      4889442428     mov qword [rsp + 0x28], rax
0x0000355e      488d442470     lea rax, [rsp + 0x70]
0x00003563      89ee           mov esi, ebp
0x00003565      bf01000000     mov edi, 1
0x0000356a      4889c2         mov rdx, rax
0x0000356d      4889442408     mov qword [rsp + 8], rax
0x00003572      e809eaffff     call sym.imp.__fxstat
0x00003577      85c0           test eax, eax
0x00003579      0f85a1010000   jne 0x3720
0x0000357f      8b8424880000.  mov eax, dword [rsp + 0x88]
0x00003586      2500f00000     and eax, 0xf000
0x0000358b      3d00200000     cmp eax, sym.imp.chmod                  ; ../coreutils-8.31/src/red.c:-295 ; 0x2000 ; int chmod(const char *path, int mode)
0x00003590      0f84c2020000   je 0x3858
0x00003596      3d00c00000     cmp eax, 0xc000
0x0000359b      0f94c1         sete cl
0x0000359e      3d00100000     cmp eax, 0x1000
0x000035a3      0f94c2         sete dl
0x000035a6      08d1           or cl, dl
0x000035a8      884c2427       mov byte [rsp + 0x27], cl
0x000035ac      7462           je 0x3610
0x000035ae      488d357d6000.  lea rsi, str.s:_invalid_file_type       ; 0x9632 ; "%s: invalid file type"
0x000035b5      ba05000000     mov edx, 5
0x000035ba      31ff           xor edi, edi
0x000035bc      e8afe7ffff     call sym.imp.dcgettext
0x000035c1      488b0c24       mov rcx, qword [rsp]
0x000035c5      4889c2         mov rdx, rax
0x000035c8      31f6           xor esi, esi
0x000035ca      31ff           xor edi, edi
0x000035cc      31c0           xor eax, eax
0x000035ce      e84deaffff     call sym.imp.error
0x000035d3      c644242700     mov byte [rsp + 0x27], 0
0x000035d8      488b8c240801.  mov rcx, qword [rsp + 0x108]
0x000035e0      6448330c2528.  xor rcx, qword fs:[0x28]
0x000035e9      0fb6442427     movzx eax, byte [rsp + 0x27]
0x000035ee      0f851d060000   jne 0x3c11
0x000035f4      4881c4180100.  add rsp, 0x118
0x000035fb      5b             pop rbx
0x000035fc      5d             pop rbp
0x000035fd      415c           pop r12
0x000035ff      415d           pop r13
0x00003601      415e           pop r14
0x00003603      415f           pop r15
0x00003605      c3             ret
0x00003606      662e0f1f8400.  nop word cs:[rax + rax]
0x00003610      3d00800000     cmp eax, 0x8000
0x00003615      0f8465020000   je 0x3880
0x0000361b      488b7b08       mov rdi, qword [rbx + 8]
0x0000361f      ba04000000     mov edx, 4
0x00003624      31c9           xor ecx, ecx
0x00003626      4889d0         mov rax, rdx
0x00003629      48f7e7         mul rdi
0x0000362c      0f80d5050000   jo 0x3c07
0x00003632      4885c0         test rax, rax
0x00003635      0f88db050000   js 0x3c16
0x0000363b      4885c9         test rcx, rcx
0x0000363e      0f85d2050000   jne 0x3c16
0x00003644      48c1e702       shl rdi, 2
0x00003648      e8a3500000     call sym.xmalloc
0x0000364d      4889442410     mov qword [rsp + 0x10], rax
0x00003652      488b4310       mov rax, qword [rbx + 0x10]
0x00003656      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000365a      4889442440     mov qword [rsp + 0x40], rax
0x0000365f      0f84fb000000   je 0x3760
0x00003665      488b4308       mov rax, qword [rbx + 8]
0x00003669      4889442438     mov qword [rsp + 0x38], rax
0x0000366e      8b8424880000.  mov eax, dword [rsp + 0x88]
0x00003675      2500f00000     and eax, 0xf000
0x0000367a      3d00800000     cmp eax, 0x8000
0x0000367f      0f844a030000   je 0x39cf
0x00003685      48837c243800   cmp qword [rsp + 0x38], 0
0x0000368b      48c744244800.  mov qword [rsp + 0x48], 0
0x00003694      0f841f020000   je 0x38b9
0x0000369a      4c8b642410     mov r12, qword [rsp + 0x10]
0x0000369f      31c9           xor ecx, ecx
0x000036a1      4c8b742438     mov r14, qword [rsp + 0x38]
0x000036a6      b8feffffff     mov eax, 0xfffffffe                     ; 4294967294
0x000036ab      4c8d2d6e6f00.  lea r13, obj.patterns                   ; 0xa620
0x000036b2      48895c2450     mov qword [rsp + 0x50], rbx
0x000036b7      4d89e0         mov r8, r12
0x000036ba      4989cc         mov r12, rcx
0x000036bd      eb24           jmp 0x36e3
0x000036bf      90             nop
0x000036c0      4c8d2d5d6f00.  lea r13, [0x0000a624]
0x000036c7      b8feffffff     mov eax, 0xfffffffe                     ; 4294967294
0x000036cc      f7d8           neg eax
0x000036ce      4898           cdqe
0x000036d0      4c39f0         cmp rax, r14
0x000036d3      0f833f030000   jae 0x3a18
0x000036d9      4901c4         add r12, rax
0x000036dc      4929c6         sub r14, rax
0x000036df      418b4500       mov eax, dword [r13]
0x000036e3      85c0           test eax, eax
0x000036e5      74d9           je 0x36c0
0x000036e7      4983c504       add r13, 4
0x000036eb      85c0           test eax, eax
0x000036ed      78dd           js 0x36cc
0x000036ef      4c63f8         movsxd r15, eax
0x000036f2      4d39f7         cmp r15, r14
0x000036f5      0f87fd030000   ja 0x3af8
0x000036fb      4a8d1cbd0000.  lea rbx, [r15*4]
0x00003703      4c89ee         mov rsi, r13
0x00003706      4c89c7         mov rdi, r8
0x00003709      4d29fe         sub r14, r15
0x0000370c      4889da         mov rdx, rbx
0x0000370f      4901dd         add r13, rbx
0x00003712      e8e9e7ffff     call sym.imp.memcpy
0x00003717      4989c0         mov r8, rax
0x0000371a      4901d8         add r8, rbx
0x0000371d      ebc0           jmp 0x36df
0x0000371f      90             nop
0x00003720      488d35fa5e00.  lea rsi, str.s:_fstat_failed            ; 0x9621 ; "%s: fstat failed"
0x00003727      ba05000000     mov edx, 5
0x0000372c      31ff           xor edi, edi
0x0000372e      e83de6ffff     call sym.imp.dcgettext
0x00003733      4889c3         mov rbx, rax
0x00003736      e835e5ffff     call sym.imp.__errno_location
0x0000373b      488b0c24       mov rcx, qword [rsp]
0x0000373f      8b30           mov esi, dword [rax]
0x00003741      4889da         mov rdx, rbx
0x00003744      31ff           xor edi, edi
0x00003746      31c0           xor eax, eax
0x00003748      e8d3e8ffff     call sym.imp.error
0x0000374d      c644242700     mov byte [rsp + 0x27], 0
0x00003752      e981feffff     jmp 0x35d8
0x00003757      660f1f840000.  nop word [rax + rax]
0x00003760      8b8424880000.  mov eax, dword [rsp + 0x88]
0x00003767      2500f00000     and eax, 0xf000
0x0000376c      3d00800000     cmp eax, 0x8000
0x00003771      0f85f6030000   jne 0x3b6d
0x00003777      488b8424a000.  mov rax, qword [rsp + 0xa0]
0x0000377f      488b4b08       mov rcx, qword [rbx + 8]
0x00003783      4889442440     mov qword [rsp + 0x40], rax
0x00003788      0fb6431d       movzx eax, byte [rbx + 0x1d]
0x0000378c      48894c2438     mov qword [rsp + 0x38], rcx
0x00003791      84c0           test al, al
0x00003793      88442418       mov byte [rsp + 0x18], al
0x00003797      0f8534030000   jne 0x3ad1
0x0000379d      488b8c24a800.  mov rcx, qword [rsp + 0xa8]
0x000037a5      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; 2305843009213693951
0x000037af      488d51ff       lea rdx, [rcx - 1]
0x000037b3      4839c2         cmp rdx, rax
0x000037b6      b800020000     mov eax, 0x200
0x000037bb      480f47c8       cmova rcx, rax
0x000037bf      488b442440     mov rax, qword [rsp + 0x40]
0x000037c4      4899           cqo
0x000037c6      48f7f9         idiv rcx
0x000037c9      488b442440     mov rax, qword [rsp + 0x40]
0x000037ce      4839c1         cmp rcx, rax
0x000037d1      0f8e18040000   jle 0x3bef
0x000037d7      4885c0         test rax, rax
0x000037da      4889442448     mov qword [rsp + 0x48], rax
0x000037df      0f840a040000   je 0x3bef
0x000037e5      4885d2         test rdx, rdx
0x000037e8      7424           je 0x380e
0x000037ea      488b7c2440     mov rdi, qword [rsp + 0x40]
0x000037ef      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x000037f9      4829d1         sub rcx, rdx
0x000037fc      4829f8         sub rax, rdi
0x000037ff      4839c8         cmp rax, rcx
0x00003802      480f4ec8       cmovle rcx, rax
0x00003806      4801cf         add rdi, rcx
0x00003809      48897c2440     mov qword [rsp + 0x40], rdi
0x0000380e      48837c243800   cmp qword [rsp + 0x38], 0
0x00003814      0f8580feffff   jne 0x369a
0x0000381a      660f1f440000   nop word [rax + rax]
0x00003820      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00003825      e8d6390000     call sym.randint_get_source
0x0000382a      4989c6         mov r14, rax
0x0000382d      488b442448     mov rax, qword [rsp + 0x48]
0x00003832      4885c0         test rax, rax
0x00003835      0f84c2030000   je 0x3bfd
0x0000383b      4889442468     mov qword [rsp + 0x68], rax
0x00003840      488b5308       mov rdx, qword [rbx + 8]
0x00003844      4531ed         xor r13d, r13d
0x00003847      c644241801     mov byte [rsp + 0x18], 1
0x0000384c      e9a7000000     jmp 0x38f8
0x00003851      0f1f80000000.  nop dword [rax]
0x00003858      89ef           mov edi, ebp
0x0000385a      e881e4ffff     call sym.imp.isatty
0x0000385f      85c0           test eax, eax
0x00003861      0f8547fdffff   jne 0x35ae
0x00003867      8b8424880000.  mov eax, dword [rsp + 0x88]
0x0000386e      2500f00000     and eax, 0xf000
0x00003873      e91efdffff     jmp 0x3596
0x00003878      0f1f84000000.  nop dword [rax + rax]
0x00003880      4883bc24a000.  cmp qword [rsp + 0xa0], 0
0x00003889      0f898cfdffff   jns 0x361b
0x0000388f      488d35b25d00.  lea rsi, str.s:_file_has_negative_size  ; 0x9648 ; "%s: file has negative size"
0x00003896      31ff           xor edi, edi
0x00003898      ba05000000     mov edx, 5
0x0000389d      e8cee4ffff     call sym.imp.dcgettext
0x000038a2      488b0c24       mov rcx, qword [rsp]
0x000038a6      4889c2         mov rdx, rax
0x000038a9      31f6           xor esi, esi
0x000038ab      31ff           xor edi, edi
0x000038ad      31c0           xor eax, eax
0x000038af      e86ce7ffff     call sym.imp.error
0x000038b4      e91ffdffff     jmp 0x35d8
0x000038b9      488b7c2430     mov rdi, qword [rsp + 0x30]
0x000038be      e83d390000     call sym.randint_get_source
0x000038c3      c644241801     mov byte [rsp + 0x18], 1
0x000038c8      4989c6         mov r14, rax
0x000038cb      0f1f440000     nop dword [rax + rax]
0x000038d0      48837c244000   cmp qword [rsp + 0x40], 0
0x000038d6      0f84c8020000   je 0x3ba4
0x000038dc      488b5308       mov rdx, qword [rbx + 8]
0x000038e0      488b442440     mov rax, qword [rsp + 0x40]
0x000038e5      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x000038ea      48c744244000.  mov qword [rsp + 0x40], 0
0x000038f3      4889442468     mov qword [rsp + 0x68], rax
0x000038f8      4c8d642468     lea r12, [rsp + 0x68]
0x000038fd      4531ff         xor r15d, r15d
0x00003900      4c89e0         mov rax, r12
0x00003903      4d89fc         mov r12, r15
0x00003906      4989df         mov r15, rbx
0x00003909      4889c3         mov rbx, rax
0x0000390c      eb43           jmp 0x3951
0x0000390e      6690           nop
0x00003910      4531c0         xor r8d, r8d
0x00003913      4939d4         cmp r12, rdx
0x00003916      7309           jae 0x3921
0x00003918      488b442410     mov rax, qword [rsp + 0x10]
0x0000391d      468b04a0       mov r8d, dword [rax + r12*4]
0x00003921      4983c401       add r12, 1
0x00003925      4155           push r13
0x00003927      4889d9         mov rcx, rbx
0x0000392a      4154           push r12
0x0000392c      488b542410     mov rdx, qword [rsp + 0x10]
0x00003931      4d89f1         mov r9, r14
0x00003934      488b742418     mov rsi, qword [rsp + 0x18]
0x00003939      89ef           mov edi, ebp
0x0000393b      e840f3ffff     call sym.dopass
0x00003940      85c0           test eax, eax
0x00003942      5a             pop rdx
0x00003943      59             pop rcx
0x00003944      7407           je 0x394d
0x00003946      7878           js 0x39c0
0x00003948      c644241800     mov byte [rsp + 0x18], 0
0x0000394d      498b5708       mov rdx, qword [r15 + 8]
0x00003951      410fb6471e     movzx eax, byte [r15 + 0x1e]
0x00003956      4801d0         add rax, rdx
0x00003959      4c39e0         cmp rax, r12
0x0000395c      77b2           ja 0x3910
0x0000395e      4c89fb         mov rbx, r15
0x00003961      e96affffff     jmp 0x38d0
0x00003966      31f6           xor esi, esi
0x00003968      89ef           mov edi, ebp
0x0000396a      e8b1e4ffff     call sym.imp.ftruncate
0x0000396f      85c0           test eax, eax
0x00003971      0f8438020000   je 0x3baf
0x00003977      8b8424880000.  mov eax, dword [rsp + 0x88]
0x0000397e      2500f00000     and eax, 0xf000
0x00003983      3d00800000     cmp eax, 0x8000
0x00003988      0f8521020000   jne 0x3baf
0x0000398e      488d35ce5c00.  lea rsi, str.s:_error_truncating        ; 0x9663 ; "%s: error truncating"
0x00003995      ba05000000     mov edx, 5
0x0000399a      31ff           xor edi, edi
0x0000399c      e8cfe3ffff     call sym.imp.dcgettext
0x000039a1      4889c3         mov rbx, rax
0x000039a4      e8c7e2ffff     call sym.imp.__errno_location
0x000039a9      488b0c24       mov rcx, qword [rsp]
0x000039ad      8b30           mov esi, dword [rax]
0x000039af      4889da         mov rdx, rbx
0x000039b2      31ff           xor edi, edi
0x000039b4      31c0           xor eax, eax
0x000039b6      e865e6ffff     call sym.imp.error
0x000039bb      0f1f440000     nop dword [rax + rax]
0x000039c0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000039c5      e886e2ffff     call sym.imp.free
0x000039ca      e909fcffff     jmp 0x35d8
0x000039cf      488b8424a800.  mov rax, qword [rsp + 0xa8]
0x000039d7      48baffffffff.  movabs rdx, 0x1fffffffffffffff          ; 2305843009213693951
0x000039e1      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x000039e9      488d48ff       lea rcx, [rax - 1]
0x000039ed      48897c2448     mov qword [rsp + 0x48], rdi
0x000039f2      4839d1         cmp rcx, rdx
0x000039f5      488b4c2440     mov rcx, qword [rsp + 0x40]
0x000039fa      ba00020000     mov edx, 0x200
0x000039ff      480f47c2       cmova rax, rdx
0x00003a03      4839c8         cmp rax, rcx
0x00003a06      480f4fc1       cmovg rax, rcx
0x00003a0a      4839c7         cmp rdi, rax
0x00003a0d      0f8cfbfdffff   jl 0x380e
0x00003a13      e96dfcffff     jmp 0x3685
0x00003a18      488b5c2450     mov rbx, qword [rsp + 0x50]
0x00003a1d      4d01f4         add r12, r14
0x00003a20      4c89642418     mov qword [rsp + 0x18], r12
0x00003a25      488b442438     mov rax, qword [rsp + 0x38]
0x00003a2a      488b742418     mov rsi, qword [rsp + 0x18]
0x00003a2f      4531e4         xor r12d, r12d
0x00003a32      896c2450       mov dword [rsp + 0x50], ebp
0x00003a36      48895c2458     mov qword [rsp + 0x58], rbx
0x00003a3b      4c8b742410     mov r14, qword [rsp + 0x10]
0x00003a40      488d56ff       lea rdx, [rsi - 1]
0x00003a44      4989c7         mov r15, rax
0x00003a47      4c8d40ff       lea r8, [rax - 1]
0x00003a4b      4929f7         sub r15, rsi
0x00003a4e      4c89fb         mov rbx, r15
0x00003a51      4989d5         mov r13, rdx
0x00003a54      4889d5         mov rbp, rdx
0x00003a57      4d89c7         mov r15, r8
0x00003a5a      eb25           jmp 0x3a81
0x00003a5c      0f1f4000       nop dword [rax]
0x00003a60      4d01fd         add r13, r15
0x00003a63      45890c9e       mov dword [r14 + rbx*4], r9d
0x00003a67      43c704a6ffff.  mov dword [r14 + r12*4], 0xffffffff     ; [0xffffffff:4]=-1 ; -1
0x00003a6f      4883c301       add rbx, 1
0x00003a73      4929ed         sub r13, rbp
0x00003a76      4983c401       add r12, 1
0x00003a7a      4c3b642438     cmp r12, qword [rsp + 0x38]
0x00003a7f      7442           je 0x3ac3
0x00003a81      4939ed         cmp r13, rbp
0x00003a84      478b0ca6       mov r9d, dword [r14 + r12*4]
0x00003a88      76d6           jbe 0x3a60
0x00003a8a      488d73ff       lea rsi, [rbx - 1]
0x00003a8e      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00003a93      44894c2418     mov dword [rsp + 0x18], r9d
0x00003a98      4929ed         sub r13, rbp
0x00003a9b      4c29e6         sub rsi, r12
0x00003a9e      e86d370000     call sym.randint_genmax
0x00003aa3      4c01e0         add rax, r12
0x00003aa6      448b4c2418     mov r9d, dword [rsp + 0x18]
0x00003aab      498d0486       lea rax, [r14 + rax*4]
0x00003aaf      8b30           mov esi, dword [rax]
0x00003ab1      438934a6       mov dword [r14 + r12*4], esi
0x00003ab5      4983c401       add r12, 1
0x00003ab9      4c3b642438     cmp r12, qword [rsp + 0x38]
0x00003abe      448908         mov dword [rax], r9d
0x00003ac1      75be           jne 0x3a81
0x00003ac3      8b6c2450       mov ebp, dword [rsp + 0x50]
0x00003ac7      488b5c2458     mov rbx, qword [rsp + 0x58]
0x00003acc      e94ffdffff     jmp 0x3820
0x00003ad1      4885c9         test rcx, rcx
0x00003ad4      48c744244800.  mov qword [rsp + 0x48], 0
0x00003add      0f85b7fbffff   jne 0x369a
0x00003ae3      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00003ae8      e813370000     call sym.randint_get_source
0x00003aed      4989c6         mov r14, rax
0x00003af0      e9dbfdffff     jmp 0x38d0
0x00003af5      0f1f00         nop dword [rax]
0x00003af8      4983fe01       cmp r14, 1
0x00003afc      4c89642418     mov qword [rsp + 0x18], r12
0x00003b01      488b5c2450     mov rbx, qword [rsp + 0x50]
0x00003b06      765b           jbe 0x3b63
0x00003b08      4b8d0476       lea rax, [r14 + r14*2]
0x00003b0c      4939c7         cmp r15, rax
0x00003b0f      7752           ja 0x3b63
0x00003b11      48895c2450     mov qword [rsp + 0x50], rbx
0x00003b16      4c89c3         mov rbx, r8
0x00003b19      eb0f           jmp 0x3b2a
0x00003b1b      0f1f440000     nop dword [rax + rax]
0x00003b20      4d8d67ff       lea r12, [r15 - 1]
0x00003b24      4889cb         mov rbx, rcx
0x00003b27      4d89e7         mov r15, r12
0x00003b2a      4983c504       add r13, 4
0x00003b2e      4d39fe         cmp r14, r15
0x00003b31      7416           je 0x3b49
0x00003b33      4d8d67ff       lea r12, [r15 - 1]
0x00003b37      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00003b3c      4c89e6         mov rsi, r12
0x00003b3f      e8cc360000     call sym.randint_genmax
0x00003b44      4939c6         cmp r14, rax
0x00003b47      76de           jbe 0x3b27
0x00003b49      418b45fc       mov eax, dword [r13 - 4]
0x00003b4d      4983ee01       sub r14, 1
0x00003b51      488d4b04       lea rcx, [rbx + 4]
0x00003b55      8903           mov dword [rbx], eax
0x00003b57      75c7           jne 0x3b20
0x00003b59      488b5c2450     mov rbx, qword [rsp + 0x50]
0x00003b5e      e9c2feffff     jmp 0x3a25
0x00003b63      4c01742418     add qword [rsp + 0x18], r14
0x00003b68      e9b8feffff     jmp 0x3a25
0x00003b6d      31f6           xor esi, esi
0x00003b6f      ba02000000     mov edx, 2
0x00003b74      89ef           mov edi, ebp
0x00003b76      e8b5e2ffff     call sym.imp.lseek
0x00003b7b      4989c4         mov r12, rax
0x00003b7e      488b4308       mov rax, qword [rbx + 8]
0x00003b82      4d85e4         test r12, r12
0x00003b85      4889442438     mov qword [rsp + 0x38], rax
0x00003b8a      7e31           jle 0x3bbd
0x00003b8c      4885c0         test rax, rax
0x00003b8f      744a           je 0x3bdb
0x00003b91      4c89642440     mov qword [rsp + 0x40], r12
0x00003b96      48c744244800.  mov qword [rsp + 0x48], 0
0x00003b9f      e9f6faffff     jmp 0x369a
0x00003ba4      8b4318         mov eax, dword [rbx + 0x18]
0x00003ba7      85c0           test eax, eax
0x00003ba9      0f85b7fdffff   jne 0x3966
0x00003baf      0fb6442418     movzx eax, byte [rsp + 0x18]
0x00003bb4      88442427       mov byte [rsp + 0x27], al
0x00003bb8      e903feffff     jmp 0x39c0
0x00003bbd      4885c0         test rax, rax
0x00003bc0      75d4           jne 0x3b96
0x00003bc2      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00003bc7      e834360000     call sym.randint_get_source
0x00003bcc      4989c6         mov r14, rax
0x00003bcf      31d2           xor edx, edx
0x00003bd1      c644241801     mov byte [rsp + 0x18], 1
0x00003bd6      e905fdffff     jmp 0x38e0
0x00003bdb      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00003be0      e81b360000     call sym.randint_get_source
0x00003be5      4c89642440     mov qword [rsp + 0x40], r12
0x00003bea      4989c6         mov r14, rax
0x00003bed      ebe0           jmp 0x3bcf
0x00003bef      48c744244800.  mov qword [rsp + 0x48], 0
0x00003bf8      e9e8fbffff     jmp 0x37e5
0x00003bfd      c644241801     mov byte [rsp + 0x18], 1
0x00003c02      e9c9fcffff     jmp 0x38d0
0x00003c07      b901000000     mov ecx, 1
0x00003c0c      e921faffff     jmp 0x3632
0x00003c11      e88ae1ffff     call sym.imp.__stack_chk_fail
0x00003c16      e8254d0000     call sym.xalloc_die
0x00003c1b      0f1f440000     nop dword [rax + rax]
;-- usage:
0x00003c20      4155           push r13
0x00003c22      4154           push r12
0x00003c24      ba05000000     mov edx, 5
0x00003c29      55             push rbp
0x00003c2a      53             push rbx
0x00003c2b      89fd           mov ebp, edi
0x00003c2d      4881ec880000.  sub rsp, 0x88
0x00003c34      488b1dcda420.  mov rbx, qword [obj.program_name]       ; [0x20e108:8]=0
0x00003c3b      64488b042528.  mov rax, qword fs:[0x28]
0x00003c44      4889442478     mov qword [rsp + 0x78], rax
0x00003c49      31c0           xor eax, eax
0x00003c4b      85ff           test edi, edi
0x00003c4d      742e           je 0x3c7d
0x00003c4f      488d35725c00.  lea rsi, str.Try___s___help__for_more_information. ; 0x98c8 ; "Try '%s --help' for more information.\n"
0x00003c56      31ff           xor edi, edi
0x00003c58      e813e1ffff     call sym.imp.dcgettext
0x00003c5d      488b3d7ca420.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x00003c64      4889c2         mov rdx, rax
0x00003c67      4889d9         mov rcx, rbx
0x00003c6a      be01000000     mov esi, 1
0x00003c6f      31c0           xor eax, eax
0x00003c71      e86ae4ffff     call sym.imp.__fprintf_chk
0x00003c76      89ef           mov edi, ebp
0x00003c78      e843e4ffff     call sym.imp.exit
0x00003c7d      488d356c5c00.  lea rsi, str.Usage:__s__OPTION_..._FILE... ; 0x98f0 ; "Usage: %s [OPTION]... FILE...\n"
0x00003c84      31ff           xor edi, edi
0x00003c86      e8e5e0ffff     call sym.imp.dcgettext
0x00003c8b      4889da         mov rdx, rbx
0x00003c8e      4889c6         mov rsi, rax
0x00003c91      bf01000000     mov edi, 1
0x00003c96      31c0           xor eax, eax
0x00003c98      e843e3ffff     call sym.imp.__printf_chk
0x00003c9d      488b1d04a420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00003ca4      488d35655c00.  lea rsi, str.Overwrite_the_specified_FILE_s__repeatedly__in_order_to_make_it_harder__for_even_very_expensive_hardware_probing_to_recover_the_data. ; 0x9910 ; "Overwrite the specified FILE(s) repeatedly, in order to make it harder\nfor even very expensive hardware probing to recover the data.\n"
0x00003cab      ba05000000     mov edx, 5
0x00003cb0      31ff           xor edi, edi
0x00003cb2      e8b9e0ffff     call sym.imp.dcgettext
0x00003cb7      4889de         mov rsi, rbx
0x00003cba      4889c7         mov rdi, rax
0x00003cbd      e8eee1ffff     call sym.imp.fputs_unlocked
0x00003cc2      488b1ddfa320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00003cc9      488d35c85c00.  lea rsi, str.If_FILE_is____shred_standard_output. ; 0x9998 ; "\nIf FILE is -, shred standard output.\n"
0x00003cd0      ba05000000     mov edx, 5
0x00003cd5      31ff           xor edi, edi
0x00003cd7      e894e0ffff     call sym.imp.dcgettext
0x00003cdc      4889de         mov rsi, rbx
0x00003cdf      4889c7         mov rdi, rax
0x00003ce2      e8c9e1ffff     call sym.imp.fputs_unlocked
0x00003ce7      488b1dbaa320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00003cee      488d35cb5c00.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x99c0 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00003cf5      ba05000000     mov edx, 5
0x00003cfa      31ff           xor edi, edi
0x00003cfc      e86fe0ffff     call sym.imp.dcgettext
0x00003d01      4889de         mov rsi, rbx
0x00003d04      4889c7         mov rdi, rax
0x00003d07      e8a4e1ffff     call sym.imp.fputs_unlocked
0x00003d0c      488d35fd5c00.  lea rsi, str.f____force____change_permissions_to_allow_writing_if_necessary_____n____iterations_N__overwrite_N_times_instead_of_the_default___d___________random_source_FILE__get_random_bytes_from_FILE_____s____size_N___shred_this_many_bytes__suffixes_like_K__M__G_accepted ; 0x9a10 ; "  -f, --force    change permissions to allow writing if necessary\n  -n, --iterations=N  overwrite N times instead of the default (%d)\n      --random-source=FILE  get random bytes from FILE\n  -s, --size=N   shred this many bytes (suffixes like K, M, G accepted)\n"
0x00003d13      31ff           xor edi, edi
0x00003d15      ba05000000     mov edx, 5
0x00003d1a      e851e0ffff     call sym.imp.dcgettext
0x00003d1f      ba03000000     mov edx, 3
0x00003d24      4889c6         mov rsi, rax
0x00003d27      bf01000000     mov edi, 1
0x00003d2c      31c0           xor eax, eax
0x00003d2e      e8ade2ffff     call sym.imp.__printf_chk
0x00003d33      488b1d6ea320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00003d3a      488d35d75d00.  lea rsi, str.u_____________deallocate_and_remove_file_after_overwriting__________remove__HOW___like__u_but_give_control_on_HOW_to_delete___See_below_____v____verbose__show_progress_____x____exact____do_not_round_file_sizes_up_to_the_next_full_block______________________this_is_the_default_for_non_regular_files_____z____zero_____add_a_final_overwrite_with_zeros_to_hide_shredding ; 0x9b18 ; "  -u             deallocate and remove file after overwriting\n      --remove[=HOW]  like -u but give control on HOW to delete;  See below\n  -v, --verbose  show progress\n  -x, --exact    do not round file sizes up to the next full block;\n                   this is the default for non-regular files\n  -z, --zero     add a final overwrite with zeros to hide shredding\n"
0x00003d41      ba05000000     mov edx, 5
0x00003d46      31ff           xor edi, edi
0x00003d48      e823e0ffff     call sym.imp.dcgettext
0x00003d4d      4889de         mov rsi, rbx
0x00003d50      4889c7         mov rdi, rax
0x00003d53      e858e1ffff     call sym.imp.fputs_unlocked
0x00003d58      488b1d49a320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00003d5f      488d35225f00.  lea rsi, str.help_____display_this_help_and_exit ; 0x9c88 ; "      --help     display this help and exit\n"
0x00003d66      ba05000000     mov edx, 5
0x00003d6b      31ff           xor edi, edi
0x00003d6d      e8fedfffff     call sym.imp.dcgettext
0x00003d72      4889de         mov rsi, rbx
0x00003d75      4889c7         mov rdi, rax
0x00003d78      e833e1ffff     call sym.imp.fputs_unlocked
0x00003d7d      488b1d24a320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00003d84      488d352d5f00.  lea rsi, str.version__output_version_information_and_exit ; 0x9cb8 ; "      --version  output version information and exit\n"
0x00003d8b      ba05000000     mov edx, 5
0x00003d90      31ff           xor edi, edi
0x00003d92      e8d9dfffff     call sym.imp.dcgettext
0x00003d97      4889de         mov rsi, rbx
0x00003d9a      4889c7         mov rdi, rax
0x00003d9d      e80ee1ffff     call sym.imp.fputs_unlocked
0x00003da2      488b1dffa220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00003da9      488d35405f00.  lea rsi, str.Delete_FILE_s__if___remove___u__is_specified.__The_default_is_not_to_remove__the_files_because_it_is_common_to_operate_on_device_files_like__dev_hda___and_those_files_usually_should_not_be_removed.__The_optional_HOW_parameter_indicates_how_to_remove_a_directory_entry:___unlink_____use_a_standard_unlink_call.___wipe_____also_first_obfuscate_bytes_in_the_name.___wipesync_____also_sync_each_obfuscated_byte_to_disk.__The_default_mode_is__wipesync___but_note_it_can_be_expensive. ; 0x9cf0 ; "\nDelete FILE(s) if --remove (-u) is specified.  The default is not to remove\nthe files because it is common to operate on device files like /dev/hda,\nand those files usually should not be removed.\nThe optional HOW parameter indicates how to remove a directory entry:\n'unlink' => use a standard unlink call.\n'wipe' => also first obfuscate bytes in the name.\n'wipesync' => also sync each obfuscated byte to disk.\nThe default mode is 'wipesync', but note it can be expensive.\n\n"
0x00003db0      ba05000000     mov edx, 5
0x00003db5      31ff           xor edi, edi
0x00003db7      e8b4dfffff     call sym.imp.dcgettext
0x00003dbc      4889de         mov rsi, rbx
0x00003dbf      4889c7         mov rdi, rax
0x00003dc2      e8e9e0ffff     call sym.imp.fputs_unlocked
0x00003dc7      488b1ddaa220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00003dce      488d35fb6000.  lea rsi, str.CAUTION:_Note_that_shred_relies_on_a_very_important_assumption:__that_the_file_system_overwrites_data_in_place.__This_is_the_traditional__way_to_do_things__but_many_modern_file_system_designs_do_not_satisfy_this__assumption.__The_following_are_examples_of_file_systems_on_which_shred_is__not_effective__or_is_not_guaranteed_to_be_effective_in_all_file_system_modes: ; 0x9ed0 ; "CAUTION: Note that shred relies on a very important assumption:\nthat the file system overwrites data in place.  This is the traditional\nway to do things, but many modern file system designs do not satisfy this\nassumption.  The following are examples of file systems on which shred is\nnot effective, or is not guaranteed to be effective in all file system modes:\n\n"
0x00003dd5      ba05000000     mov edx, 5
0x00003dda      31ff           xor edi, edi
0x00003ddc      e88fdfffff     call sym.imp.dcgettext
0x00003de1      4889de         mov rsi, rbx
0x00003de4      4889c7         mov rdi, rax
0x00003de7      e8c4e0ffff     call sym.imp.fputs_unlocked
0x00003dec      488b1db5a220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00003df3      488d35466200.  lea rsi, str.log_structured_or_journaled_file_systems__such_as_those_supplied_with__AIX_and_Solaris__and_JFS__ReiserFS__XFS__Ext3__etc._______file_systems_that_write_redundant_data_and_carry_on_even_if_some_writes__fail__such_as_RAID_based_file_systems______file_systems_that_make_snapshots__such_as_Network_Appliance_s_NFS_server ; 0xa040 ; "* log-structured or journaled file systems, such as those supplied with\nAIX and Solaris (and JFS, ReiserFS, XFS, Ext3, etc.)\n\n* file systems that write redundant data and carry on even if some writes\nfail, such as RAID-based file systems\n\n* file systems that make snapshots, such as Network Appliance's NFS server\n\n"
0x00003dfa      31ff           xor edi, edi
0x00003dfc      ba05000000     mov edx, 5
0x00003e01      e86adfffff     call sym.imp.dcgettext
0x00003e06      4889de         mov rsi, rbx
0x00003e09      4889c7         mov rdi, rax
0x00003e0c      e89fe0ffff     call sym.imp.fputs_unlocked
0x00003e11      488b1d90a220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00003e18      488d35616300.  lea rsi, str.file_systems_that_cache_in_temporary_locations__such_as_NFS__version_3_clients______compressed_file_systems ; 0xa180 ; "* file systems that cache in temporary locations, such as NFS\nversion 3 clients\n\n* compressed file systems\n\n"
0x00003e1f      ba05000000     mov edx, 5
0x00003e24      31ff           xor edi, edi
0x00003e26      e845dfffff     call sym.imp.dcgettext
0x00003e2b      4889de         mov rsi, rbx
0x00003e2e      4889c7         mov rdi, rax
0x00003e31      e87ae0ffff     call sym.imp.fputs_unlocked
0x00003e36      488b1d6ba220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00003e3d      488d35ac6300.  lea rsi, str.In_the_case_of_ext3_file_systems__the_above_disclaimer_applies___and_shred_is_thus_of_limited_effectiveness__only_in_data_journal_mode___which_journals_file_data_in_addition_to_just_metadata.__In_both_the__data_ordered__default__and_data_writeback_modes__shred_works_as_usual.__Ext3_journaling_modes_can_be_changed_by_adding_the_data_something_option__to_the_mount_options_for_a_particular_file_system_in_the__etc_fstab_file___as_documented_in_the_mount_man_page__man_mount_. ; 0xa1f0 ; "In the case of ext3 file systems, the above disclaimer applies\n(and shred is thus of limited effectiveness) only in data=journal mode,\nwhich journals file data in addition to just metadata.  In both the\ndata=ordered (default) and data=writeback modes, shred works as usual.\nExt3 journaling modes can be changed by adding the data=something option\nto the mount options for a particular file system in the /etc/fstab file,\nas documented in the mount man page (man mount).\n\n"
0x00003e44      ba05000000     mov edx, 5
0x00003e49      31ff           xor edi, edi
0x00003e4b      e820dfffff     call sym.imp.dcgettext
0x00003e50      4889de         mov rsi, rbx
0x00003e53      4889c7         mov rdi, rax
0x00003e56      e855e0ffff     call sym.imp.fputs_unlocked
0x00003e5b      488b1d46a220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00003e62      488d355f6500.  lea rsi, str.In_addition__file_system_backups_and_remote_mirrors_may_contain_copies__of_the_file_that_cannot_be_removed__and_that_will_allow_a_shredded_file__to_be_recovered_later. ; 0xa3c8 ; "In addition, file system backups and remote mirrors may contain copies\nof the file that cannot be removed, and that will allow a shredded file\nto be recovered later.\n"
0x00003e69      ba05000000     mov edx, 5
0x00003e6e      31ff           xor edi, edi
0x00003e70      e8fbdeffff     call sym.imp.dcgettext
0x00003e75      4889de         mov rsi, rbx
0x00003e78      4889c7         mov rdi, rax
0x00003e7b      488d1df65700.  lea rbx, str.shred                      ; 0x9678 ; "shred"
0x00003e82      e829e0ffff     call sym.imp.fputs_unlocked
0x00003e87      488d05f05700.  lea rax, [0x0000967e]                   ; "["
0x00003e8e      488d0d2a5800.  lea rcx, str.sha256sum                  ; 0x96bf ; "sha256sum"
0x00003e95      48c744246000.  mov qword [rsp + 0x60], 0
0x00003e9e      48c744246800.  mov qword [rsp + 0x68], 0
0x00003ea7      4889e2         mov rdx, rsp
0x00003eaa      48890424       mov qword [rsp], rax
0x00003eae      488d05cb5700.  lea rax, str.test_invocation            ; 0x9680 ; "test invocation"
0x00003eb5      48894c2430     mov qword [rsp + 0x30], rcx
0x00003eba      488d0d085800.  lea rcx, str.sha384sum                  ; 0x96c9 ; "sha384sum"
0x00003ec1      4889442408     mov qword [rsp + 8], rax
0x00003ec6      488d052b5800.  lea rax, [0x000096f8]                   ; "coreutils"
0x00003ecd      48894c2440     mov qword [rsp + 0x40], rcx
0x00003ed2      488d0dfa5700.  lea rcx, str.sha512sum                  ; 0x96d3 ; "sha512sum"
0x00003ed9      4889442410     mov qword [rsp + 0x10], rax
0x00003ede      488d05ab5700.  lea rax, str.Multi_call_invocation      ; 0x9690 ; "Multi-call invocation"
0x00003ee5      48894c2450     mov qword [rsp + 0x50], rcx
0x00003eea      4889442418     mov qword [rsp + 0x18], rax
0x00003eef      488d05b05700.  lea rax, str.sha224sum                  ; 0x96a6 ; "sha224sum"
0x00003ef6      4889442420     mov qword [rsp + 0x20], rax
0x00003efb      488d05ae5700.  lea rax, str.sha2_utilities             ; 0x96b0 ; "sha2 utilities"
0x00003f02      4889442428     mov qword [rsp + 0x28], rax
0x00003f07      4889442438     mov qword [rsp + 0x38], rax
0x00003f0c      4889442448     mov qword [rsp + 0x48], rax
0x00003f11      4889442458     mov qword [rsp + 0x58], rax
0x00003f16      662e0f1f8400.  nop word cs:[rax + rax]
0x00003f20      4883c210       add rdx, 0x10
0x00003f24      488b3a         mov rdi, qword [rdx]
0x00003f27      4885ff         test rdi, rdi
0x00003f2a      7413           je 0x3f3f
0x00003f2c      b906000000     mov ecx, 6
0x00003f31      4889de         mov rsi, rbx
0x00003f34      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003f36      0f97c0         seta al
0x00003f39      1c00           sbb al, 0
0x00003f3b      84c0           test al, al
0x00003f3d      75e1           jne 0x3f20
0x00003f3f      4c8b6208       mov r12, qword [rdx + 8]
0x00003f43      31ff           xor edi, edi
0x00003f45      ba05000000     mov edx, 5
0x00003f4a      488d358c5700.  lea rsi, str.s_online_help:___s         ; 0x96dd ; "\n%s online help: <%s>\n"
0x00003f51      4d85e4         test r12, r12
0x00003f54      0f84c1000000   je 0x401b
0x00003f5a      e811deffff     call sym.imp.dcgettext
0x00003f5f      488d0d0a6500.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xa470 ; "https://www.gnu.org/software/coreutils/"
0x00003f66      488d15875700.  lea rdx, str.GNU_coreutils              ; 0x96f4 ; "GNU coreutils"
0x00003f6d      4889c6         mov rsi, rax
0x00003f70      bf01000000     mov edi, 1
0x00003f75      31c0           xor eax, eax
0x00003f77      e864e0ffff     call sym.imp.__printf_chk
0x00003f7c      31f6           xor esi, esi
0x00003f7e      bf05000000     mov edi, 5
0x00003f83      e848e0ffff     call sym.imp.setlocale
0x00003f88      4885c0         test rax, rax
0x00003f8b      741c           je 0x3fa9
0x00003f8d      488d356e5700.  lea rsi, [0x00009702]                   ; "en_"
0x00003f94      ba03000000     mov edx, 3
0x00003f99      4889c7         mov rdi, rax
0x00003f9c      e8ffdcffff     call sym.imp.strncmp
0x00003fa1      85c0           test eax, eax
0x00003fa3      0f8507010000   jne 0x40b0
0x00003fa9      488d35565700.  lea rsi, str.Full_documentation___s_s   ; 0x9706 ; "Full documentation <%s%s>\n"
0x00003fb0      31ff           xor edi, edi
0x00003fb2      ba05000000     mov edx, 5
0x00003fb7      e8b4ddffff     call sym.imp.dcgettext
0x00003fbc      488d0db55600.  lea rcx, str.shred                      ; 0x9678 ; "shred"
0x00003fc3      488d15a66400.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xa470 ; "https://www.gnu.org/software/coreutils/"
0x00003fca      4889c6         mov rsi, rax
0x00003fcd      bf01000000     mov edi, 1
0x00003fd2      31c0           xor eax, eax
0x00003fd4      e807e0ffff     call sym.imp.__printf_chk
0x00003fd9      4939dc         cmp r12, rbx
0x00003fdc      488d0db75600.  lea rcx, [0x0000969a]                   ; " invocation"
0x00003fe3      488d1dc66d00.  lea rbx, [0x0000adb0]
0x00003fea      480f44d9       cmove rbx, rcx
0x00003fee      488d35eb6400.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0xa4e0 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00003ff5      31ff           xor edi, edi
0x00003ff7      ba05000000     mov edx, 5
0x00003ffc      e86fddffff     call sym.imp.dcgettext
0x00004001      4889d9         mov rcx, rbx
0x00004004      4889c6         mov rsi, rax
0x00004007      4c89e2         mov rdx, r12
0x0000400a      bf01000000     mov edi, 1
0x0000400f      31c0           xor eax, eax
0x00004011      e8cadfffff     call sym.imp.__printf_chk
0x00004016      e95bfcffff     jmp 0x3c76
0x0000401b      e850ddffff     call sym.imp.dcgettext
0x00004020      488d0d496400.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xa470 ; "https://www.gnu.org/software/coreutils/"
0x00004027      488d15c65600.  lea rdx, str.GNU_coreutils              ; 0x96f4 ; "GNU coreutils"
0x0000402e      4889c6         mov rsi, rax
0x00004031      bf01000000     mov edi, 1
0x00004036      31c0           xor eax, eax
0x00004038      e8a3dfffff     call sym.imp.__printf_chk
0x0000403d      31f6           xor esi, esi
0x0000403f      bf05000000     mov edi, 5
0x00004044      e887dfffff     call sym.imp.setlocale
0x00004049      4885c0         test rax, rax
0x0000404c      7418           je 0x4066
0x0000404e      488d35ad5600.  lea rsi, [0x00009702]                   ; "en_"
0x00004055      ba03000000     mov edx, 3
0x0000405a      4889c7         mov rdi, rax
0x0000405d      e83edcffff     call sym.imp.strncmp
0x00004062      85c0           test eax, eax
0x00004064      7543           jne 0x40a9
0x00004066      488d35995600.  lea rsi, str.Full_documentation___s_s   ; 0x9706 ; "Full documentation <%s%s>\n"
0x0000406d      ba05000000     mov edx, 5
0x00004072      31ff           xor edi, edi
0x00004074      4c8d25fd5500.  lea r12, str.shred                      ; 0x9678 ; "shred"
0x0000407b      488d1d185600.  lea rbx, [0x0000969a]                   ; " invocation"
0x00004082      e8e9dcffff     call sym.imp.dcgettext
0x00004087      488d0dea5500.  lea rcx, str.shred                      ; 0x9678 ; "shred"
0x0000408e      488d15db6300.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xa470 ; "https://www.gnu.org/software/coreutils/"
0x00004095      4889c6         mov rsi, rax
0x00004098      bf01000000     mov edi, 1
0x0000409d      31c0           xor eax, eax
0x0000409f      e83cdfffff     call sym.imp.__printf_chk
0x000040a4      e945ffffff     jmp 0x3fee
0x000040a9      4c8d25c85500.  lea r12, str.shred                      ; 0x9678 ; "shred"
0x000040b0      4c8b2df19f20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x000040b7      488d35da6300.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0xa498 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000040be      31ff           xor edi, edi
0x000040c0      ba05000000     mov edx, 5
0x000040c5      e8a6dcffff     call sym.imp.dcgettext
0x000040ca      4c89ee         mov rsi, r13
0x000040cd      4889c7         mov rdi, rax
0x000040d0      e8dbddffff     call sym.imp.fputs_unlocked
0x000040d5      e9cffeffff     jmp 0x3fa9
0x000040da      660f1f440000   nop word [rax + rax]
;-- __argmatch_die:
0x000040e0      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/argmatch.c:63
0x000040e5      e936fbffff     jmp sym.usage
0x000040ea      660f1f440000   nop word [rax + rax]
;-- argmatch:
0x000040f0      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:86
0x000040f2      4156           push r14
0x000040f4      4989f7         mov r15, rsi
0x000040f7      4155           push r13
0x000040f9      4154           push r12
0x000040fb      4989cd         mov r13, rcx
0x000040fe      55             push rbp
0x000040ff      53             push rbx
0x00004100      4889d5         mov rbp, rdx
0x00004103      4883ec28       sub rsp, 0x28
0x00004107      48897c2408     mov qword [rsp + 8], rdi
0x0000410c      4889542418     mov qword [rsp + 0x18], rdx
0x00004111      e87adcffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/argmatch.c:92
0x00004116      4d8b37         mov r14, qword [r15]                    ; ../coreutils-8.31/lib/argmatch.c:95
0x00004119      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:89
0x00004121      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/argmatch.c:95
0x00004124      0f84b3000000   je 0x41dd
0x0000412a      4989c4         mov r12, rax
0x0000412d      c644241700     mov byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:90
0x00004132      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:95
0x00004134      eb51           jmp 0x4187
0x00004136      662e0f1f8400.  nop word cs:[rax + rax]
0x00004140      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/argmatch.c:108
0x00004145      4885c0         test rax, rax
0x00004148      0f84a2000000   je 0x41f0
0x0000414e      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:109
0x00004152      4c89ea         mov rdx, r13
0x00004155      4889ee         mov rsi, rbp
0x00004158      490faffd       imul rdi, r13
0x0000415c      4801c7         add rdi, rax
0x0000415f      e83cddffff     call sym.imp.memcmp
0x00004164      85c0           test eax, eax                           ; ../coreutils-8.31/lib/argmatch.c:114
0x00004166      0fb6442417     movzx eax, byte [rsp + 0x17]
0x0000416b      b901000000     mov ecx, 1
0x00004170      0f45c1         cmovne eax, ecx
0x00004173      88442417       mov byte [rsp + 0x17], al
0x00004177      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x0000417b      4c01ed         add rbp, r13
0x0000417e      4d8b34df       mov r14, qword [r15 + rbx*8]
0x00004182      4d85f6         test r14, r14
0x00004185      7441           je 0x41c8
0x00004187      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/argmatch.c:97
0x0000418c      4c89e2         mov rdx, r12
0x0000418f      4c89f7         mov rdi, r14
0x00004192      e809dbffff     call sym.imp.strncmp
0x00004197      85c0           test eax, eax
0x00004199      75dc           jne 0x4177
0x0000419b      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/argmatch.c:99
0x0000419e      e8eddbffff     call sym.imp.strlen
0x000041a3      4c39e0         cmp rax, r12
0x000041a6      7458           je 0x4200
0x000041a8      48833c24ff     cmp qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:102
0x000041ad      7591           jne 0x4140
0x000041af      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:104
0x000041b3      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x000041b7      4c01ed         add rbp, r13
0x000041ba      4d8b34df       mov r14, qword [r15 + rbx*8]
0x000041be      4d85f6         test r14, r14
0x000041c1      75c4           jne 0x4187
0x000041c3      0f1f440000     nop dword [rax + rax]
0x000041c8      807c241700     cmp byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:120
0x000041cd      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x000041d4      480f440424     cmove rax, qword [rsp]
0x000041d9      48890424       mov qword [rsp], rax
0x000041dd      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:123
0x000041e1      4883c428       add rsp, 0x28
0x000041e5      5b             pop rbx
0x000041e6      5d             pop rbp
0x000041e7      415c           pop r12
0x000041e9      415d           pop r13
0x000041eb      415e           pop r14
0x000041ed      415f           pop r15
0x000041ef      c3             ret
0x000041f0      c644241701     mov byte [rsp + 0x17], 1                ; ../coreutils-8.31/lib/argmatch.c:114
0x000041f5      eb80           jmp 0x4177
0x000041f7      660f1f840000.  nop word [rax + rax]
0x00004200      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:101
0x00004204      ebd7           jmp 0x41dd
0x00004206      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_invalid:
0x00004210      4883faff       cmp rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/argmatch.c:132
0x00004214      4154           push r12
0x00004216      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:133
0x0000421b      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:132
0x0000421c      4989f4         mov r12, rsi
0x0000421f      53             push rbx
0x00004220      4889fd         mov rbp, rdi
0x00004223      744b           je 0x4270                               ; ../coreutils-8.31/lib/argmatch.c:133
0x00004225      488d35006500.  lea rsi, str.ambiguous_argument__s_for__s ; 0xa72c ; "ambiguous argument %s for %s"
0x0000422c      31ff           xor edi, edi
0x0000422e      e83ddbffff     call sym.imp.dcgettext
0x00004233      4889c3         mov rbx, rax
0x00004236      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00004239      bf01000000     mov edi, 1
0x0000423e      e80d2f0000     call sym.quote_n
0x00004243      4c89e2         mov rdx, r12
0x00004246      4889c5         mov rbp, rax
0x00004249      be08000000     mov esi, 8
0x0000424e      31ff           xor edi, edi
0x00004250      e82b2b0000     call sym.quotearg_n_style
0x00004255      4989e8         mov r8, rbp
0x00004258      4889da         mov rdx, rbx
0x0000425b      4889c1         mov rcx, rax
0x0000425e      5b             pop rbx                                 ; ../coreutils-8.31/lib/argmatch.c:139
0x0000425f      5d             pop rbp
0x00004260      415c           pop r12
0x00004262      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00004264      31ff           xor edi, edi
0x00004266      31c0           xor eax, eax
0x00004268      e9b3ddffff     jmp sym.imp.error
0x0000426d      0f1f00         nop dword [rax]
0x00004270      488d359a6400.  lea rsi, str.invalid_argument__s_for__s ; ../coreutils-8.31/lib/argmatch.c:133 ; 0xa711 ; "invalid argument %s for %s"
0x00004277      31ff           xor edi, edi
0x00004279      e8f2daffff     call sym.imp.dcgettext
0x0000427e      4889c3         mov rbx, rax
0x00004281      ebb3           jmp 0x4236
0x00004283      0f1f00         nop dword [rax]
0x00004286      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_valid:
0x00004290      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:148
0x00004292      4156           push r14
0x00004294      4989fe         mov r14, rdi
0x00004297      4155           push r13
0x00004299      4154           push r12
0x0000429b      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/argmatch.c:154
0x0000429d      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:148
0x0000429e      53             push rbx
0x0000429f      4889f5         mov rbp, rsi
0x000042a2      488d35a06400.  lea rsi, str.Valid_arguments_are:       ; ../coreutils-8.31/lib/argmatch.c:154 ; 0xa749 ; "Valid arguments are:"
0x000042a9      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/argmatch.c:148
0x000042ac      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:154
0x000042b1      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argmatch.c:148
0x000042b5      488b1d249e20.  mov rbx, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:154 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x000042bc      e8afdaffff     call sym.imp.dcgettext
0x000042c1      4889c7         mov rdi, rax
0x000042c4      4889de         mov rsi, rbx
0x000042c7      e8e4dbffff     call sym.imp.fputs_unlocked
0x000042cc      4d8b3e         mov r15, qword [r14]                    ; ../coreutils-8.31/lib/argmatch.c:155
0x000042cf      4d85ff         test r15, r15
0x000042d2      0f8490000000   je 0x4368
0x000042d8      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/argmatch.c:150
0x000042db      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:155
0x000042dd      eb39           jmp 0x4318
0x000042df      90             nop
0x000042e0      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:159
0x000042e3      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x000042e7      4989ed         mov r13, rbp                            ; ../coreutils-8.31/lib/argmatch.c:160
0x000042ea      e8812e0000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:159
0x000042ef      488b3dea9d20.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x000042f6      488d15616400.  lea rdx, [0x0000a75e]                   ; "\n  - %s"
0x000042fd      4889c1         mov rcx, rax
0x00004300      be01000000     mov esi, 1
0x00004305      31c0           xor eax, eax
0x00004307      4c01e5         add rbp, r12
0x0000430a      e8d1ddffff     call sym.imp.__fprintf_chk
0x0000430f      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x00004313      4d85ff         test r15, r15
0x00004316      7450           je 0x4368
0x00004318      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/argmatch.c:156
0x0000431b      74c3           je 0x42e0
0x0000431d      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/argmatch.c:157
0x00004320      4889ee         mov rsi, rbp
0x00004323      4c89ef         mov rdi, r13
0x00004326      e875dbffff     call sym.imp.memcmp
0x0000432b      85c0           test eax, eax
0x0000432d      75b1           jne 0x42e0
0x0000432f      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:164
0x00004332      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00004336      4c01e5         add rbp, r12
0x00004339      e8322e0000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:164
0x0000433e      488b3d9b9d20.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x00004345      488d151a6400.  lea rdx, str.s                          ; 0xa766 ; ", %s"
0x0000434c      4889c1         mov rcx, rax
0x0000434f      be01000000     mov esi, 1
0x00004354      31c0           xor eax, eax
0x00004356      e885ddffff     call sym.imp.__fprintf_chk
0x0000435b      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000435f      4d85ff         test r15, r15
0x00004362      75b4           jne 0x4318
0x00004364      0f1f4000       nop dword [rax]
0x00004368      488b3d719d20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:166 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x0000436f      488b4728       mov rax, qword [rdi + 0x28]             ; stdio.h:100   return _IO_putc_unlocked (__c, __stream);
0x00004373      483b4730       cmp rax, qword [rdi + 0x30]
0x00004377      731f           jae 0x4398
0x00004379      488d5001       lea rdx, [rax + 1]
0x0000437d      48895728       mov qword [rdi + 0x28], rdx
0x00004381      c6000a         mov byte [rax], 0xa
0x00004384      4883c408       add rsp, 8
0x00004388      5b             pop rbx
0x00004389      5d             pop rbp
0x0000438a      415c           pop r12
0x0000438c      415d           pop r13
0x0000438e      415e           pop r14
0x00004390      415f           pop r15
0x00004392      c3             ret
0x00004393      0f1f440000     nop dword [rax + rax]
0x00004398      4883c408       add rsp, 8
0x0000439c      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/argmatch.c:-204
0x000043a1      5b             pop rbx
0x000043a2      5d             pop rbp
0x000043a3      415c           pop r12
0x000043a5      415d           pop r13
0x000043a7      415e           pop r14
0x000043a9      415f           pop r15
0x000043ab      e950daffff     jmp sym.imp.__overflow
;-- __xargmatch_internal:
0x000043b0      4157           push r15
0x000043b2      4156           push r14
0x000043b4      4989fe         mov r14, rdi
0x000043b7      4155           push r13
0x000043b9      4154           push r12
0x000043bb      4989f4         mov r12, rsi
0x000043be      55             push rbp
0x000043bf      53             push rbx
0x000043c0      4889cd         mov rbp, rcx
0x000043c3      4889d3         mov rbx, rdx
0x000043c6      4c89c1         mov rcx, r8
0x000043c9      4889ea         mov rdx, rbp
0x000043cc      4883ec08       sub rsp, 8
0x000043d0      4889de         mov rsi, rbx
0x000043d3      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-196
0x000043d6      4d89c7         mov r15, r8
0x000043d9      4d89cd         mov r13, r9
0x000043dc      e80ffdffff     call sym.argmatch
0x000043e1      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argmatch.c:-195
0x000043e4      780f           js 0x43f5                               ; ../coreutils-8.31/lib/argmatch.c:-193
0x000043e6      4883c408       add rsp, 8
0x000043ea      5b             pop rbx
0x000043eb      5d             pop rbp
0x000043ec      415c           pop r12
0x000043ee      415d           pop r13
0x000043f0      415e           pop r14                                 ; ../coreutils-8.31/lib/argmatch.c:-184
0x000043f2      415f           pop r15
0x000043f4      c3             ret
0x000043f5      4889c2         mov rdx, rax
0x000043f8      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-181
0x000043fb      4c89f7         mov rdi, r14
0x000043fe      e80dfeffff     call sym.argmatch_invalid
0x00004403      4c89fa         mov rdx, r15
0x00004406      4889ee         mov rsi, rbp
0x00004409      4889df         mov rdi, rbx
0x0000440c      e87ffeffff     call sym.argmatch_valid
0x00004411      41ffd5         call r13
0x00004414      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000441b      ebc9           jmp 0x43e6
0x0000441d      0f1f00         nop dword [rax]
;-- argmatch_to_argument:
0x00004420      4156           push r14
0x00004422      4155           push r13
0x00004424      4154           push r12
0x00004426      55             push rbp
0x00004427      53             push rbx
0x00004428      4c8b36         mov r14, qword [rsi]
0x0000442b      4d85f6         test r14, r14
0x0000442e      7431           je 0x4461
0x00004430      4989cc         mov r12, rcx
0x00004433      4989fd         mov r13, rdi
0x00004436      4889d5         mov rbp, rdx
0x00004439      488d5e08       lea rbx, [rsi + 8]
0x0000443d      eb10           jmp 0x444f                              ; ../coreutils-8.31/lib/argmatch.c:-177
0x0000443f      90             nop
0x00004440      4c8b33         mov r14, qword [rbx]
0x00004443      4c01e5         add rbp, r12
0x00004446      4883c308       add rbx, 8
0x0000444a      4d85f6         test r14, r14
0x0000444d      7412           je 0x4461
0x0000444f      4c89e2         mov rdx, r12
0x00004452      4889ee         mov rsi, rbp
0x00004455      4c89ef         mov rdi, r13
0x00004458      e843daffff     call sym.imp.memcmp
0x0000445d      85c0           test eax, eax
0x0000445f      75df           jne 0x4440
0x00004461      5b             pop rbx
0x00004462      4c89f0         mov rax, r14
0x00004465      5d             pop rbp
0x00004466      415c           pop r12
0x00004468      415d           pop r13
0x0000446a      415e           pop r14
0x0000446c      c3             ret
0x0000446d      0f1f00         nop dword [rax]
;-- close_stdout_set_file_name:
0x00004470      48893d899c20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20e100:8]=0
0x00004477      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00004478      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00004480      40883d719c20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20e0f8:1]=0
0x00004487      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00004488      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00004490      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00004491      53             push rbx
0x00004492      4883ec08       sub rsp, 8
0x00004496      488b3d0b9c20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x0000449d      e85e4e0000     call sym.close_stream
0x000044a2      85c0           test eax, eax
0x000044a4      7416           je 0x44bc
0x000044a6      e8c5d7ffff     call sym.imp.__errno_location
0x000044ab      803d469c2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20e0f8:1]=0
0x000044b2      4889c3         mov rbx, rax
0x000044b5      741c           je 0x44d3
0x000044b7      833820         cmp dword [rax], 0x20
0x000044ba      7517           jne 0x44d3
0x000044bc      488b3d1d9c20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x000044c3      e8384e0000     call sym.close_stream
0x000044c8      85c0           test eax, eax
0x000044ca      7546           jne 0x4512
0x000044cc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x000044d0      5b             pop rbx
0x000044d1      5d             pop rbp
0x000044d2      c3             ret
0x000044d3      488d35916200.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0xa76b ; "write error"
0x000044da      31ff           xor edi, edi
0x000044dc      ba05000000     mov edx, 5
0x000044e1      e88ad8ffff     call sym.imp.dcgettext
0x000044e6      488b3d139c20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20e100:8]=0
0x000044ed      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x000044f0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x000044f3      7428           je 0x451d
0x000044f5      e8762a0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x000044fa      8b33           mov esi, dword [rbx]
0x000044fc      488d15746200.  lea rdx, str.s:__s                      ; 0xa777 ; "%s: %s"
0x00004503      4889c1         mov rcx, rax
0x00004506      4989e8         mov r8, rbp
0x00004509      31ff           xor edi, edi
0x0000450b      31c0           xor eax, eax
0x0000450d      e80edbffff     call sym.imp.error
0x00004512      8b3d089b2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20e020:4]=1
0x00004518      e893d7ffff     call sym.imp._exit
0x0000451d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000451f      488d15426200.  lea rdx, [0x0000a768]                   ; "%s"
0x00004526      4889c1         mov rcx, rax
0x00004529      31ff           xor edi, edi
0x0000452b      31c0           xor eax, eax
0x0000452d      e8eedaffff     call sym.imp.error
0x00004532      ebde           jmp 0x4512
0x00004534      662e0f1f8400.  nop word cs:[rax + rax]
0x0000453e      6690           nop
;-- dir_name:
0x00004540      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/dirname.c:33
0x00004544      e877000000     call sym.mdir_name                      ; ../coreutils-8.31/lib/dirname.c:34
0x00004549      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname.c:35
0x0000454c      7405           je 0x4553
0x0000454e      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname.c:38
0x00004552      c3             ret
0x00004553      e8e8430000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/dirname.c:36
0x00004558      0f1f84000000.  nop dword [rax + rax]
;-- dir_len:
0x00004560      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x00004561      53             push rbx
0x00004562      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x00004564      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x00004567      4883ec08       sub rsp, 8
0x0000456b      803f2f         cmp byte [rdi], 0x2f                    ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x0000456e      400f94c5       sete bpl
0x00004572      e8a9000000     call sym.last_component                 ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x00004577      4889c1         mov rcx, rax
0x0000457a      4829d9         sub rcx, rbx
0x0000457d      4839e9         cmp rcx, rbp
0x00004580      762e           jbe 0x45b0
0x00004582      8078ff2f       cmp byte [rax - 1], 0x2f                ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x00004586      488d51ff       lea rdx, [rcx - 1]
0x0000458a      7412           je 0x459e
0x0000458c      eb22           jmp 0x45b0
0x0000458e      6690           nop
0x00004590      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x00004595      488d42ff       lea rax, [rdx - 1]
0x00004599      7508           jne 0x45a3
0x0000459b      4889c2         mov rdx, rax
0x0000459e      4839d5         cmp rbp, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x000045a1      75ed           jne 0x4590
0x000045a3      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x000045a7      4889d0         mov rax, rdx
0x000045aa      5b             pop rbx
0x000045ab      5d             pop rbp
0x000045ac      c3             ret
0x000045ad      0f1f00         nop dword [rax]
0x000045b0      4883c408       add rsp, 8
0x000045b4      4889ca         mov rdx, rcx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x000045b7      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x000045ba      5b             pop rbx
0x000045bb      5d             pop rbp
0x000045bc      c3             ret
0x000045bd      0f1f00         nop dword [rax]
;-- mdir_name:
0x000045c0      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:72
0x000045c1      53             push rbx
0x000045c2      4889fd         mov rbp, rdi
0x000045c5      4883ec08       sub rsp, 8
0x000045c9      e892ffffff     call sym.dir_len                        ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x000045ce      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x000045d1      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x000045d4      0f94c0         sete al                                 ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x000045d7      0fb6c0         movzx eax, al
0x000045da      488d7c0301     lea rdi, [rbx + rax + 1]                ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x000045df      e86cd9ffff     call sym.imp.malloc
0x000045e4      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x000045e7      4889c1         mov rcx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x000045ea      741a           je 0x4606                               ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x000045ec      4889da         mov rdx, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000045ef      4889ee         mov rsi, rbp
0x000045f2      4889c7         mov rdi, rax
0x000045f5      e806d9ffff     call sym.imp.memcpy
0x000045fa      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x000045fd      4889c1         mov rcx, rax                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00004600      740e           je 0x4610                               ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x00004602      c6041900       mov byte [rcx + rbx], 0                 ; ../coreutils-8.31/lib/dirname-lgpl.c:84
0x00004606      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:86
0x0000460a      4889c8         mov rax, rcx
0x0000460d      5b             pop rbx
0x0000460e      5d             pop rbp
0x0000460f      c3             ret
0x00004610      c6002e         mov byte [rax], 0x2e                    ; ../coreutils-8.31/lib/dirname-lgpl.c:83 ; '.'
                                                                       ; [0x2e:1]=0
0x00004613      bb01000000     mov ebx, 1
0x00004618      ebe8           jmp 0x4602
0x0000461a      660f1f440000   nop word [rax + rax]
;-- last_component:
0x00004620      0fb617         movzx edx, byte [rdi]                   ; ../coreutils-8.31/lib/basename-lgpl.c:31
0x00004623      4889f8         mov rax, rdi
0x00004626      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x00004629      7511           jne 0x463c
0x0000462b      0f1f440000     nop dword [rax + rax]
0x00004630      4883c001       add rax, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:37
0x00004634      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x00004637      80fa2f         cmp dl, 0x2f
0x0000463a      74f4           je 0x4630
0x0000463c      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000463e      743a           je 0x467a
0x00004640      4889c1         mov rcx, rax
0x00004643      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:34
0x00004645      eb1e           jmp 0x4665
0x00004647      660f1f840000.  nop word [rax + rax]
0x00004650      4084f6         test sil, sil                           ; ../coreutils-8.31/lib/basename-lgpl.c:43
0x00004653      7405           je 0x465a
0x00004655      4889c8         mov rax, rcx
0x00004658      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:46
0x0000465a      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000465e      0fb611         movzx edx, byte [rcx]
0x00004661      84d2           test dl, dl
0x00004663      7415           je 0x467a
0x00004665      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:41
0x00004668      75e6           jne 0x4650
0x0000466a      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000466e      0fb611         movzx edx, byte [rcx]
0x00004671      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:42
0x00004676      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00004678      75eb           jne 0x4665
0x0000467a      f3c3           ret                                     ; ../coreutils-8.31/lib/basename-lgpl.c:51
0x0000467c      0f1f4000       nop dword [rax]
;-- base_len:
0x00004680      53             push rbx                                ; ../coreutils-8.31/lib/basename-lgpl.c:59
0x00004681      4889fb         mov rbx, rdi
0x00004684      e807d7ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00004689      4883f801       cmp rax, 1
0x0000468d      760b           jbe 0x469a
0x0000468f      807c03ff2f     cmp byte [rbx + rax - 1], 0x2f
0x00004694      488d50ff       lea rdx, [rax - 1]
0x00004698      740e           je 0x46a8
0x0000469a      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x0000469b      c3             ret
0x0000469c      0f1f4000       nop dword [rax]
0x000046a0      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x000046a3      0f1f440000     nop dword [rax + rax]
0x000046a8      4883fa01       cmp rdx, 1
0x000046ac      7412           je 0x46c0
0x000046ae      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x000046b3      488d42ff       lea rax, [rdx - 1]
0x000046b7      74e7           je 0x46a0
0x000046b9      4889d0         mov rax, rdx
0x000046bc      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x000046bd      c3             ret
0x000046be      6690           nop
0x000046c0      b801000000     mov eax, 1
0x000046c5      5b             pop rbx
0x000046c6      c3             ret
0x000046c7      660f1f840000.  nop word [rax + rax]
;-- open_safer:
0x000046d0      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/open-safer.c:30
0x000046d4      4889542430     mov qword [rsp + 0x30], rdx
0x000046d9      31d2           xor edx, edx
0x000046db      64488b042528.  mov rax, qword fs:[0x28]
0x000046e4      4889442418     mov qword [rsp + 0x18], rax
0x000046e9      31c0           xor eax, eax
0x000046eb      40f6c640       test sil, 0x40                          ; ../coreutils-8.31/lib/open-safer.c:33 ; segment.PHDR
0x000046ef      7527           jne 0x4718
0x000046f1      31c0           xor eax, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x000046f3      e858d9ffff     call sym.imp.open
0x000046f8      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/open-safer.c:45
0x000046fa      e891390000     call sym.fd_safer
0x000046ff      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/open-safer.c:46
0x00004704      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000470d      752a           jne 0x4739
0x0000470f      4883c458       add rsp, 0x58
0x00004713      c3             ret
0x00004714      0f1f4000       nop dword [rax]
0x00004718      488d442460     lea rax, [rsp + 0x60]                   ; ../coreutils-8.31/lib/open-safer.c:36
0x0000471d      c70424100000.  mov dword [rsp], 0x10                   ; [0x10:4]=0x3e0003
0x00004724      8b542430       mov edx, dword [rsp + 0x30]             ; ../coreutils-8.31/lib/open-safer.c:40
0x00004728      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/open-safer.c:36
0x0000472d      488d442420     lea rax, [rsp + 0x20]
0x00004732      4889442410     mov qword [rsp + 0x10], rax
0x00004737      ebb8           jmp 0x46f1
0x00004739      e862d6ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/open-safer.c:46
0x0000473e      6690           nop
;-- adjust_value.part.0:
0x00004740      d905a6600000   fld dword [0x0000a7ec]                  ; ../coreutils-8.31/lib/human.c:54
0x00004746      db6c2408       fld xword [rsp + 8]
0x0000474a      dbe9           fucomi st(1)                            ; ../coreutils-8.31/lib/human.c:62
0x0000474c      7372           jae 0x47c0
0x0000474e      ddd9           fstp st(1)
0x00004750      d97c24f6       fnstcw word [rsp - 0xa]
0x00004754      0fb74424f6     movzx eax, word [rsp - 0xa]
0x00004759      80cc0c         or ah, 0xc
0x0000475c      66894424f4     mov word [rsp - 0xc], ax
0x00004761      d9c0           fld st(0)
0x00004763      d96c24f4       fldcw word [rsp - 0xc]
0x00004767      df7c24e8       fistp qword [rsp - 0x18]
0x0000476b      d96c24f6       fldcw word [rsp - 0xa]
0x0000476f      488b4424e8     mov rax, qword [rsp - 0x18]
0x00004774      48894424e0     mov qword [rsp - 0x20], rax
0x00004779      4885c0         test rax, rax
0x0000477c      df6c24e0       fild qword [rsp - 0x20]
0x00004780      7906           jns 0x4788
0x00004782      d80568600000   fadd dword [0x0000a7f0]
0x00004788      85ff           test edi, edi                           ; ../coreutils-8.31/lib/human.c:63
0x0000478a      752c           jne 0x47b8
0x0000478c      d9c9           fxch st(1)
0x0000478e      dfe9           fucomip st(1)
0x00004790      7a06           jp 0x4798
0x00004792      7426           je 0x47ba
0x00004794      ddd8           fstp st(0)
0x00004796      eb08           jmp 0x47a0
0x00004798      ddd8           fstp st(0)
0x0000479a      660f1f440000   nop word [rax + rax]
0x000047a0      4883c001       add rax, 1
0x000047a4      48894424e0     mov qword [rsp - 0x20], rax
0x000047a9      4885c0         test rax, rax
0x000047ac      df6c24e0       fild qword [rsp - 0x20]
0x000047b0      784e           js 0x4800
0x000047b2      eb06           jmp 0x47ba
0x000047b4      0f1f4000       nop dword [rax]
0x000047b8      ddd9           fstp st(1)
0x000047ba      f3c3           ret                                     ; ../coreutils-8.31/lib/human.c:67
0x000047bc      0f1f4000       nop dword [rax]
0x000047c0      d97c24f6       fnstcw word [rsp - 0xa]                 ; ../coreutils-8.31/lib/human.c:62
0x000047c4      0fb74424f6     movzx eax, word [rsp - 0xa]
0x000047c9      dce1           fsubr st(1), st(0)
0x000047cb      d9c9           fxch st(1)
0x000047cd      48ba00000000.  movabs rdx, 0x8000000000000000
0x000047d7      80cc0c         or ah, 0xc
0x000047da      66894424f4     mov word [rsp - 0xc], ax
0x000047df      d96c24f4       fldcw word [rsp - 0xc]
0x000047e3      df7c24e8       fistp qword [rsp - 0x18]
0x000047e7      d96c24f6       fldcw word [rsp - 0xa]
0x000047eb      488b4424e8     mov rax, qword [rsp - 0x18]
0x000047f0      4831d0         xor rax, rdx
0x000047f3      e97cffffff     jmp 0x4774
0x000047f8      0f1f84000000.  nop dword [rax + rax]
0x00004800      d805ea5f0000   fadd dword [0x0000a7f0]
0x00004806      c3             ret                                     ; ../coreutils-8.31/lib/human.c:67
0x00004807      660f1f840000.  nop word [rax + rax]
;-- human_readable:
0x00004810      4157           push r15
0x00004812      4156           push r14                                ; ../coreutils-8.31/lib/human.c:28
0x00004814      89d0           mov eax, edx
0x00004816      4155           push r13                                ; ../coreutils-8.31/lib/human.c:27
0x00004818      4154           push r12
0x0000481a      4189d7         mov r15d, edx
0x0000481d      55             push rbp
0x0000481e      53             push rbx
0x0000481f      83e020         and eax, 0x20                           ; "@"
0x00004822      4183e703       and r15d, 3
0x00004826      4189d4         mov r12d, edx
0x00004829      4889fb         mov rbx, rdi
0x0000482c      4881ec980000.  sub rsp, 0x98
0x00004833      48894c2418     mov qword [rsp + 0x18], rcx
0x00004838      89442430       mov dword [rsp + 0x30], eax
0x0000483c      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004845      48898c248800.  mov qword [rsp + 0x88], rcx
0x0000484d      31c9           xor ecx, ecx
0x0000484f      83f801         cmp eax, 1
0x00004852      48893424       mov qword [rsp], rsi
0x00004856      4c89442410     mov qword [rsp + 0x10], r8
0x0000485b      19c0           sbb eax, eax
0x0000485d      83e0e8         and eax, 0xffffffe8                     ; 4294967272
0x00004860      0500040000     add eax, 0x400
0x00004865      89442434       mov dword [rsp + 0x34], eax
0x00004869      e882d4ffff     call sym.imp.localeconv
0x0000486e      4c8b30         mov r14, qword [rax]
0x00004871      4989c5         mov r13, rax
0x00004874      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/human.c:50
0x00004877      e814d5ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/human.c:51
0x0000487c      498b4d10       mov rcx, qword [r13 + 0x10]
0x00004880      4d8b6d08       mov r13, qword [r13 + 8]
0x00004884      4889c5         mov rbp, rax
0x00004887      4883e801       sub rax, 1
0x0000488b      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/human.c:57
0x00004890      4883f810       cmp rax, 0x10
0x00004894      488d05384d00.  lea rax, [0x000095d3]                   ; "."
0x0000489b      4c89ef         mov rdi, r13
0x0000489e      480f43ea       cmovae rbp, rdx
0x000048a2      48894c2438     mov qword [rsp + 0x38], rcx
0x000048a7      4c0f43f0       cmovae r14, rax
0x000048ab      e8e0d4ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/human.c:67
0x000048b0      4883f811       cmp rax, 0x11
0x000048b4      488d05f56400.  lea rax, [0x0000adb0]
0x000048bb      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000048c0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000048c5      4c0f43e8       cmovae r13, rax
0x000048c9      488b0424       mov rax, qword [rsp]
0x000048cd      480587020000   add rax, 0x287
0x000048d3      4839cf         cmp rdi, rcx
0x000048d6      4889442408     mov qword [rsp + 8], rax
0x000048db      0f8747010000   ja 0x4a28
0x000048e1      31d2           xor edx, edx
0x000048e3      4889c8         mov rax, rcx
0x000048e6      48f7f7         div rdi
0x000048e9      4885d2         test rdx, rdx
0x000048ec      4889c7         mov rdi, rax
0x000048ef      0f845b030000   je 0x4c50
0x000048f5      48894c2418     mov qword [rsp + 0x18], rcx
0x000048fa      4885c9         test rcx, rcx
0x000048fd      df6c2418       fild qword [rsp + 0x18]
0x00004901      7906           jns 0x4909
0x00004903      d805e75e0000   fadd dword [0x0000a7f0]
0x00004909      488b442410     mov rax, qword [rsp + 0x10]
0x0000490e      4889442418     mov qword [rsp + 0x18], rax
0x00004913      4885c0         test rax, rax
0x00004916      df6c2418       fild qword [rsp + 0x18]
0x0000491a      7906           jns 0x4922
0x0000491c      d805ce5e0000   fadd dword [0x0000a7f0]
0x00004922      def9           fdivp st(1)
0x00004924      48895c2418     mov qword [rsp + 0x18], rbx
0x00004929      4885db         test rbx, rbx
0x0000492c      df6c2418       fild qword [rsp + 0x18]                 ; ../coreutils-8.31/lib/human.c:98
0x00004930      7906           jns 0x4938
0x00004932      d805b85e0000   fadd dword [0x0000a7f0]
0x00004938      41f6c410       test r12b, 0x10                         ; ../coreutils-8.31/lib/human.c:111
0x0000493c      dec9           fmulp st(1)
0x0000493e      0f84c4010000   je 0x4b08
0x00004944      db442434       fild dword [rsp + 0x34]                 ; ../coreutils-8.31/lib/human.c:115
0x00004948      31db           xor ebx, ebx
0x0000494a      d9c0           fld st(0)
0x0000494c      eb06           jmp 0x4954
0x0000494e      6690           nop
0x00004950      ddd9           fstp st(1)
0x00004952      d9ca           fxch st(2)
0x00004954      d9c0           fld st(0)
0x00004956      83c301         add ebx, 1
0x00004959      d8ca           fmul st(2)
0x0000495b      d9cb           fxch st(3)
0x0000495d      dbeb           fucomi st(3)
0x0000495f      720f           jb 0x4970
0x00004961      83fb08         cmp ebx, 8
0x00004964      75ea           jne 0x4950
0x00004966      ddda           fstp st(2)
0x00004968      ddda           fstp st(2)
0x0000496a      eb08           jmp 0x4974
0x0000496c      0f1f4000       nop dword [rax]
0x00004970      ddda           fstp st(2)
0x00004972      ddda           fstp st(2)
0x00004974      8b4c2430       mov ecx, dword [rsp + 0x30]
0x00004978      4883c501       add rbp, 1
0x0000497c      31c0           xor eax, eax
0x0000497e      def1           fdivrp st(1)
0x00004980      85c9           test ecx, ecx
0x00004982      0f94c0         sete al
0x00004985      4183ff01       cmp r15d, 1
0x00004989      488d440501     lea rax, [rbp + rax + 1]
0x0000498e      4889442418     mov qword [rsp + 0x18], rax
0x00004993      0f8467050000   je 0x4f00
0x00004999      db2d615e0000   fld xword [0x0000a800]
0x0000499f      dfe9           fucomip st(1)
0x000049a1      0f87d1030000   ja 0x4d78
0x000049a7      d9c0           fld st(0)
0x000049a9      db7c2420       fstp xword [rsp + 0x20]
0x000049ad      4883ec10       sub rsp, 0x10
0x000049b1      488d0dcc5d00.  lea rcx, str..1Lf                       ; 0xa784 ; "%.1Lf"
0x000049b8      be01000000     mov esi, 1
0x000049bd      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000049c4      31c0           xor eax, eax
0x000049c6      4c8b742410     mov r14, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/human.c:123
0x000049cb      4c89f7         mov rdi, r14
0x000049ce      db3c24         fstp xword [rsp]                        ; ../coreutils-8.31/lib/human.c:126
0x000049d1      e84ad7ffff     call sym.imp.__sprintf_chk
0x000049d6      4c89f7         mov rdi, r14
0x000049d9      e8b2d3ffff     call sym.imp.strlen
0x000049de      59             pop rcx
0x000049df      5e             pop rsi
0x000049e0      483b442418     cmp rax, qword [rsp + 0x18]
0x000049e5      4989c6         mov r14, rax
0x000049e8      db6c2420       fld xword [rsp + 0x20]
0x000049ec      0f87a6050000   ja 0x4f98                               ; ../coreutils-8.31/lib/human.c:128
0x000049f2      41f6c408       test r12b, 8
0x000049f6      0f8464010000   je 0x4b60
0x000049fc      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/human.c:131
0x00004a00      42807c30ff30   cmp byte [rax + r14 - 1], 0x30
0x00004a06      0f855c010000   jne 0x4b68
0x00004a0c      d905e25d0000   fld dword [0x0000a7f4]
0x00004a12      4183ff01       cmp r15d, 1
0x00004a16      dcc9           fmul st(1), st(0)
0x00004a18      0f8582050000   jne 0x4fa0                              ; ../coreutils-8.31/lib/human.c:81
0x00004a1e      e930050000     jmp 0x4f53
0x00004a23      0f1f440000     nop dword [rax + rax]
0x00004a28      4885c9         test rcx, rcx
0x00004a2b      0f84c4feffff   je 0x48f5
0x00004a31      488b442410     mov rax, qword [rsp + 0x10]
0x00004a36      31d2           xor edx, edx
0x00004a38      48f7f1         div rcx
0x00004a3b      4885d2         test rdx, rdx
0x00004a3e      4989c0         mov r8, rax
0x00004a41      0f85aefeffff   jne 0x48f5
0x00004a47      4889d8         mov rax, rbx
0x00004a4a      31d2           xor edx, edx
0x00004a4c      49f7f0         div r8
0x00004a4f      4889c3         mov rbx, rax
0x00004a52      488d0492       lea rax, [rdx + rdx*4]
0x00004a56      31d2           xor edx, edx
0x00004a58      4889de         mov rsi, rbx
0x00004a5b      4801c0         add rax, rax
0x00004a5e      49f7f0         div r8
0x00004a61      4801d2         add rdx, rdx
0x00004a64      4189c1         mov r9d, eax
0x00004a67      4939d0         cmp r8, rdx
0x00004a6a      0f8688050000   jbe 0x4ff8
0x00004a70      31ff           xor edi, edi
0x00004a72      4885d2         test rdx, rdx
0x00004a75      400f95c7       setne dil
0x00004a79      4489e1         mov ecx, r12d
0x00004a7c      4c8b442408     mov r8, qword [rsp + 8]
0x00004a81      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00004a86      83e110         and ecx, 0x10
0x00004a89      0f84c1030000   je 0x4e50
0x00004a8f      448b442434     mov r8d, dword [rsp + 0x34]
0x00004a94      4939f0         cmp r8, rsi                             ; ../coreutils-8.31/lib/human.c:33
0x00004a97      4d89c3         mov r11, r8                             ; ../coreutils-8.31/lib/human.c:35
0x00004a9a      0f8770050000   ja 0x5010
0x00004aa0      31db           xor ebx, ebx
0x00004aa2      eb23           jmp 0x4ac7
0x00004aa4      0f1f4000       nop dword [rax]
0x00004aa8      85ff           test edi, edi
0x00004aaa      400f95c7       setne dil
0x00004aae      400fb6ff       movzx edi, dil                          ; ../coreutils-8.31/lib/human.c:27
0x00004ab2      83c301         add ebx, 1
0x00004ab5      4d39d0         cmp r8, r10
0x00004ab8      0f870f030000   ja 0x4dcd                               ; ../coreutils-8.31/lib/human.c:26
0x00004abe      83fb08         cmp ebx, 8
0x00004ac1      0f84a1050000   je 0x5068
0x00004ac7      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/human.c:29
0x00004aca      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/human.c:28
0x00004acc      89fe           mov esi, edi
0x00004ace      49f7f0         div r8
0x00004ad1      d1fe           sar esi, 1
0x00004ad3      4989c2         mov r10, rax
0x00004ad6      8d0492         lea eax, [rdx + rdx*4]
0x00004ad9      31d2           xor edx, edx
0x00004adb      418d0441       lea eax, [r9 + rax*2]
0x00004adf      41f7f3         div r11d
0x00004ae2      8d1456         lea edx, [rsi + rdx*2]
0x00004ae5      4189c1         mov r9d, eax
0x00004ae8      4c89d6         mov rsi, r10
0x00004aeb      01d7           add edi, edx
0x00004aed      4139d3         cmp r11d, edx
0x00004af0      77b6           ja 0x4aa8
0x00004af2      4139fb         cmp r11d, edi
0x00004af5      400f92c7       setb dil
0x00004af9      400fb6ff       movzx edi, dil
0x00004afd      83c702         add edi, 2
0x00004b00      ebb0           jmp 0x4ab2
0x00004b02      660f1f440000   nop word [rax + rax]
0x00004b08      4183ff01       cmp r15d, 1
0x00004b0c      740e           je 0x4b1c
0x00004b0e      db2dec5c0000   fld xword [0x0000a800]
0x00004b14      dfe9           fucomip st(1)
0x00004b16      0f8784020000   ja 0x4da0
0x00004b1c      4883ec10       sub rsp, 0x10
0x00004b20      488d0d575c00.  lea rcx, str..0Lf                       ; 0xa77e ; "%.0Lf"
0x00004b27      be01000000     mov esi, 1
0x00004b2c      488b5c2410     mov rbx, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/human.c:-99
0x00004b31      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004b38      31c0           xor eax, eax
0x00004b3a      db3c24         fstp xword [rsp]
0x00004b3d      31ed           xor ebp, ebp
0x00004b3f      4889df         mov rdi, rbx
0x00004b42      e8d9d5ffff     call sym.imp.__sprintf_chk
0x00004b47      4889df         mov rdi, rbx
0x00004b4a      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00004b4f      e83cd2ffff     call sym.imp.strlen
0x00004b54      5e             pop rsi
0x00004b55      5f             pop rdi
0x00004b56      4989c6         mov r14, rax
0x00004b59      eb15           jmp 0x4b70
0x00004b5b      0f1f440000     nop dword [rax + rax]
0x00004b60      ddd8           fstp st(0)
0x00004b62      eb0c           jmp 0x4b70
0x00004b64      0f1f4000       nop dword [rax]
0x00004b68      ddd8           fstp st(0)
0x00004b6a      660f1f440000   nop word [rax + rax]
0x00004b70      4c8b7c2408     mov r15, qword [rsp + 8]
0x00004b75      488b3424       mov rsi, qword [rsp]
0x00004b79      4c89f2         mov rdx, r14
0x00004b7c      4d29f7         sub r15, r14
0x00004b7f      4929ee         sub r14, rbp
0x00004b82      4c89ff         mov rdi, r15
0x00004b85      e886d4ffff     call sym.imp.memmove
0x00004b8a      4d89f0         mov r8, r14
0x00004b8d      4d01f8         add r8, r15
0x00004b90      41f6c404       test r12b, 4
0x00004b94      0f85de000000   jne 0x4c78
0x00004b9a      41f6c480       test r12b, 0x80
0x00004b9e      7477           je 0x4c17
0x00004ba0      83fbff         cmp ebx, 0xffffffff
0x00004ba3      0f8417030000   je 0x4ec0
0x00004ba9      4489e0         mov eax, r12d
0x00004bac      2500010000     and eax, 0x100
0x00004bb1      89c1           mov ecx, eax
0x00004bb3      09d9           or ecx, ebx                             ; ../coreutils-8.31/lib/human.c:-125
0x00004bb5      7460           je 0x4c17
0x00004bb7      4183e440       and r12d, 0x40                          ; segment.PHDR
0x00004bbb      0f8597010000   jne 0x4d58
0x00004bc1      85db           test ebx, ebx
0x00004bc3      0f842d060000   je 0x51f6
0x00004bc9      83fb01         cmp ebx, 1
0x00004bcc      750e           jne 0x4bdc                              ; ../coreutils-8.31/lib/human.c:-122
0x00004bce      448b4c2430     mov r9d, dword [rsp + 0x30]
0x00004bd3      4585c9         test r9d, r9d
0x00004bd6      0f8444040000   je 0x5020
0x00004bdc      488d0dfd5b00.  lea rcx, obj.power_letter               ; 0xa7e0
0x00004be3      4863db         movsxd rbx, ebx
0x00004be6      488b7c2408     mov rdi, qword [rsp + 8]
0x00004beb      85c0           test eax, eax
0x00004bed      0fb60c19       movzx ecx, byte [rcx + rbx]
0x00004bf1      488d5701       lea rdx, [rdi + 1]                      ; ../coreutils-8.31/lib/human.c:-311
0x00004bf5      880f           mov byte [rdi], cl                      ; ../coreutils-8.31/lib/human.c:-310
0x00004bf7      0f8437040000   je 0x5034
0x00004bfd      448b442430     mov r8d, dword [rsp + 0x30]
0x00004c02      4585c0         test r8d, r8d
0x00004c05      0f85b5010000   jne 0x4dc0
0x00004c0b      488d4201       lea rax, [rdx + 1]
0x00004c0f      c60242         mov byte [rdx], 0x42                    ; 'B'
                                                                       ; [0x42:1]=0
0x00004c12      4889442408     mov qword [rsp + 8], rax
0x00004c17      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/human.c:-427
0x00004c1c      488b8c248800.  mov rcx, qword [rsp + 0x88]
0x00004c24      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004c2d      c60000         mov byte [rax], 0
0x00004c30      4c89f8         mov rax, r15
0x00004c33      0f8592050000   jne 0x51cb
0x00004c39      4881c4980000.  add rsp, 0x98
0x00004c40      5b             pop rbx
0x00004c41      5d             pop rbp
0x00004c42      415c           pop r12
0x00004c44      415d           pop r13
0x00004c46      415e           pop r14
0x00004c48      415f           pop r15
0x00004c4a      c3             ret
0x00004c4b      0f1f440000     nop dword [rax + rax]
0x00004c50      4889de         mov rsi, rbx
0x00004c53      31d2           xor edx, edx
0x00004c55      480faff0       imul rsi, rax
0x00004c59      4889f0         mov rax, rsi
0x00004c5c      48f7f7         div rdi
0x00004c5f      4839d8         cmp rax, rbx
0x00004c62      0f858dfcffff   jne 0x48f5
0x00004c68      31ff           xor edi, edi
0x00004c6a      4531c9         xor r9d, r9d
0x00004c6d      e907feffff     jmp 0x4a79
0x00004c72      660f1f440000   nop word [rax + rax]
0x00004c78      4d89c6         mov r14, r8
0x00004c7b      4c89ef         mov rdi, r13
0x00004c7e      4c89442448     mov qword [rsp + 0x48], r8
0x00004c83      4d29fe         sub r14, r15                            ; ../coreutils-8.31/lib/human.c:-605
0x00004c86      48c7c5ffffff.  mov rbp, 0xffffffffffffffff             ; ../coreutils-8.31/lib/human.c:-733
0x00004c8d      e8fed0ffff     call sym.imp.strlen
0x00004c92      488d7c2450     lea rdi, [rsp + 0x50]
0x00004c97      b929000000     mov ecx, 0x29                           ; ')'
0x00004c9c      4c89f2         mov rdx, r14
0x00004c9f      4c89fe         mov rsi, r15
0x00004ca2      4889442440     mov qword [rsp + 0x40], rax             ; ../coreutils-8.31/lib/human.c:-798
0x00004ca7      48897c2418     mov qword [rsp + 0x18], rdi
0x00004cac      e82fd2ffff     call sym.imp.__memcpy_chk
0x00004cb1      4489e1         mov ecx, r12d
0x00004cb4      895c2420       mov dword [rsp + 0x20], ebx
0x00004cb8      4d89f4         mov r12, r14
0x00004cbb      4c89eb         mov rbx, r13
0x00004cbe      4c8b442448     mov r8, qword [rsp + 0x48]
0x00004cc3      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x00004cc8      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x00004ccd      4189ce         mov r14d, ecx
0x00004cd0      eb40           jmp 0x4d12
0x00004cd2      660f1f440000   nop word [rax + rax]
0x00004cd8      488b442418     mov rax, qword [rsp + 0x18]
0x00004cdd      4929ec         sub r12, rbp
0x00004ce0      4929e8         sub r8, rbp
0x00004ce3      4c89c7         mov rdi, r8
0x00004ce6      4889ea         mov rdx, rbp
0x00004ce9      4a8d3420       lea rsi, [rax + r12]
0x00004ced      e80ed2ffff     call sym.imp.memcpy
0x00004cf2      4d85e4         test r12, r12
0x00004cf5      4989c0         mov r8, rax
0x00004cf8      0f840a050000   je 0x5208
0x00004cfe      4d29e8         sub r8, r13
0x00004d01      4c89ea         mov rdx, r13
0x00004d04      4889de         mov rsi, rbx
0x00004d07      4c89c7         mov rdi, r8
0x00004d0a      e8f1d1ffff     call sym.imp.memcpy
0x00004d0f      4989c0         mov r8, rax
0x00004d12      410fb607       movzx eax, byte [r15]
0x00004d16      84c0           test al, al
0x00004d18      740d           je 0x4d27
0x00004d1a      3c7f           cmp al, 0x7f
0x00004d1c      0fb6e8         movzx ebp, al
0x00004d1f      490f43ec       cmovae rbp, r12
0x00004d23      4983c701       add r15, 1
0x00004d27      4c39e5         cmp rbp, r12
0x00004d2a      76ac           jbe 0x4cd8
0x00004d2c      4489f0         mov eax, r14d
0x00004d2f      4d89c7         mov r15, r8
0x00004d32      4d89e6         mov r14, r12
0x00004d35      488b742418     mov rsi, qword [rsp + 0x18]
0x00004d3a      4d29f7         sub r15, r14
0x00004d3d      4c89f2         mov rdx, r14
0x00004d40      4c89ff         mov rdi, r15
0x00004d43      8b5c2420       mov ebx, dword [rsp + 0x20]             ; ../coreutils-8.31/lib/human.c:-645
0x00004d47      4189c4         mov r12d, eax
0x00004d4a      e8b1d1ffff     call sym.imp.memcpy
0x00004d4f      e946feffff     jmp 0x4b9a
0x00004d54      0f1f4000       nop dword [rax]
0x00004d58      488b0c24       mov rcx, qword [rsp]
0x00004d5c      488db9880200.  lea rdi, [rcx + 0x288]
0x00004d63      c68187020000.  mov byte [rcx + 0x287], 0x20            ; [0x20:1]=64 ; "@"
0x00004d6a      48897c2408     mov qword [rsp + 8], rdi
0x00004d6f      e94dfeffff     jmp 0x4bc1
0x00004d74      0f1f4000       nop dword [rax]
0x00004d78      4883ec10       sub rsp, 0x10
0x00004d7c      4489ff         mov edi, r15d
0x00004d7f      d9c0           fld st(0)                               ; ../coreutils-8.31/lib/human.c:-720
0x00004d81      db3c24         fstp xword [rsp]
0x00004d84      db7c2430       fstp xword [rsp + 0x30]
0x00004d88      e8b3f9ffff     call sym.adjust_value.part.0
0x00004d8d      58             pop rax                                 ; ../coreutils-8.31/lib/human.c:-710
0x00004d8e      5a             pop rdx
0x00004d8f      db6c2420       fld xword [rsp + 0x20]
0x00004d93      e911fcffff     jmp 0x49a9
0x00004d98      0f1f84000000.  nop dword [rax + rax]
0x00004da0      4883ec10       sub rsp, 0x10
0x00004da4      4489ff         mov edi, r15d                           ; string_fortified.h:-992
0x00004da7      db3c24         fstp xword [rsp]
0x00004daa      e891f9ffff     call sym.adjust_value.part.0
0x00004daf      4158           pop r8
0x00004db1      4159           pop r9
0x00004db3      e964fdffff     jmp 0x4b1c
0x00004db8      0f1f84000000.  nop dword [rax + rax]
0x00004dc0      488d5702       lea rdx, [rdi + 2]
0x00004dc4      c6470169       mov byte [rdi + 1], 0x69                ; 'i'
                                                                       ; [0x69:1]=1
0x00004dc8      e93efeffff     jmp 0x4c0b
0x00004dcd      4983fa09       cmp r10, 9
0x00004dd1      0f8791020000   ja 0x5068
0x00004dd7      4183ff01       cmp r15d, 1
0x00004ddb      0f84b1020000   je 0x5092
0x00004de1      4585ff         test r15d, r15d
0x00004de4      0f94c2         sete dl
0x00004de7      85ff           test edi, edi
0x00004de9      410f9fc0       setg r8b                                ; ../coreutils-8.31/lib/human.c:-697
0x00004ded      4421c2         and edx, r8d                            ; ../coreutils-8.31/lib/human.c:-695
0x00004df0      84d2           test dl, dl
0x00004df2      0f8481020000   je 0x5079
0x00004df8      448d4801       lea r9d, [rax + 1]
0x00004dfc      4183f90a       cmp r9d, 0xa
0x00004e00      0f84fb020000   je 0x5101
0x00004e06      4183c130       add r9d, 0x30                           ; ../coreutils-8.31/lib/human.c:-677
0x00004e0a      488b0424       mov rax, qword [rsp]
0x00004e0e      4c8d80860200.  lea r8, [rax + 0x286]
0x00004e15      448888860200.  mov byte [rax + 0x286], r9b
0x00004e1c      89e8           mov eax, ebp
0x00004e1e      4929e8         sub r8, rbp
0x00004e21      83fd08         cmp ebp, 8
0x00004e24      0f8387020000   jae 0x50b1
0x00004e2a      40f6c504       test bpl, 4
0x00004e2e      0f8582030000   jne 0x51b6                              ; ../coreutils-8.31/lib/human.c:-674
0x00004e34      85c0           test eax, eax
0x00004e36      740f           je 0x4e47
0x00004e38      410fb616       movzx edx, byte [r14]
0x00004e3c      a802           test al, 2
0x00004e3e      418810         mov byte [r8], dl
0x00004e41      0f8589030000   jne 0x51d0
0x00004e47      31ff           xor edi, edi
0x00004e49      4531c9         xor r9d, r9d
0x00004e4c      0f1f4000       nop dword [rax]
0x00004e50      4183ff01       cmp r15d, 1
0x00004e54      0f8476010000   je 0x4fd0
0x00004e5a      4585ff         test r15d, r15d
0x00004e5d      7521           jne 0x4e80
0x00004e5f      4401cf         add edi, r9d
0x00004e62      85ff           test edi, edi
0x00004e64      7e1a           jle 0x4e80
0x00004e66      4883c601       add rsi, 1
0x00004e6a      85c9           test ecx, ecx
0x00004e6c      7412           je 0x4e80
0x00004e6e      8b442434       mov eax, dword [rsp + 0x34]
0x00004e72      4839f0         cmp rax, rsi
0x00004e75      0f84c5010000   je 0x5040
0x00004e7b      0f1f440000     nop dword [rax + rax]
0x00004e80      4d89c7         mov r15, r8
0x00004e83      48b9cdcccccc.  movabs rcx, 0xcccccccccccccccd          ; stdio2.h:-993
0x00004e8d      0f1f00         nop dword [rax]
0x00004e90      4889f0         mov rax, rsi
0x00004e93      4983ef01       sub r15, 1
0x00004e97      48f7e1         mul rcx
0x00004e9a      48c1ea03       shr rdx, 3
0x00004e9e      488d0492       lea rax, [rdx + rdx*4]
0x00004ea2      4801c0         add rax, rax
0x00004ea5      4829c6         sub rsi, rax
0x00004ea8      83c630         add esi, 0x30
0x00004eab      4885d2         test rdx, rdx
0x00004eae      418837         mov byte [r15], sil
0x00004eb1      4889d6         mov rsi, rdx
0x00004eb4      75da           jne 0x4e90
0x00004eb6      e9d5fcffff     jmp 0x4b90
0x00004ebb      0f1f440000     nop dword [rax + rax]
0x00004ec0      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00004ec5      4883f901       cmp rcx, 1
0x00004ec9      0f86a3010000   jbe 0x5072
0x00004ecf      8b542434       mov edx, dword [rsp + 0x34]
0x00004ed3      bb01000000     mov ebx, 1
0x00004ed8      b801000000     mov eax, 1
0x00004edd      480fafc2       imul rax, rdx
0x00004ee1      4839c1         cmp rcx, rax
0x00004ee4      0f86bffcffff   jbe 0x4ba9
0x00004eea      83c301         add ebx, 1
0x00004eed      83fb08         cmp ebx, 8
0x00004ef0      75eb           jne 0x4edd
0x00004ef2      e9b2fcffff     jmp 0x4ba9
0x00004ef7      660f1f840000.  nop word [rax + rax]
0x00004f00      4883ec10       sub rsp, 0x10
0x00004f04      488d0d795800.  lea rcx, str..1Lf                       ; 0xa784 ; "%.1Lf"
0x00004f0b      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004f12      d9c0           fld st(0)
0x00004f14      db3c24         fstp xword [rsp]
0x00004f17      4c8b742410     mov r14, qword [rsp + 0x10]
0x00004f1c      be01000000     mov esi, 1
0x00004f21      31c0           xor eax, eax
0x00004f23      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/human.c:-966
0x00004f26      db7c2430       fstp xword [rsp + 0x30]
0x00004f2a      e8f1d1ffff     call sym.imp.__sprintf_chk
0x00004f2f      4c89f7         mov rdi, r14
0x00004f32      e859ceffff     call sym.imp.strlen
0x00004f37      4989c6         mov r14, rax
0x00004f3a      58             pop rax
0x00004f3b      5a             pop rdx
0x00004f3c      4c3b742418     cmp r14, qword [rsp + 0x18]
0x00004f41      db6c2420       fld xword [rsp + 0x20]
0x00004f45      0f86a7faffff   jbe 0x49f2
0x00004f4b      d905a3580000   fld dword [0x0000a7f4]
0x00004f51      dcc9           fmul st(1), st(0)
0x00004f53      def9           fdivp st(1)                             ; ../coreutils-8.31/lib/human.c:-700
0x00004f55      4883ec10       sub rsp, 0x10
0x00004f59      488d0d1e5800.  lea rcx, str..0Lf                       ; 0xa77e ; "%.0Lf"
0x00004f60      4c8b742410     mov r14, qword [rsp + 0x10]
0x00004f65      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004f6c      be01000000     mov esi, 1
0x00004f71      31c0           xor eax, eax
0x00004f73      31ed           xor ebp, ebp
0x00004f75      4c89f7         mov rdi, r14
0x00004f78      db3c24         fstp xword [rsp]
0x00004f7b      e8a0d1ffff     call sym.imp.__sprintf_chk              ; ../coreutils-8.31/lib/human.c:-810
0x00004f80      4c89f7         mov rdi, r14
0x00004f83      e808ceffff     call sym.imp.strlen
0x00004f88      415a           pop r10
0x00004f8a      4989c6         mov r14, rax
0x00004f8d      415b           pop r11
0x00004f8f      e9dcfbffff     jmp 0x4b70
0x00004f94      0f1f4000       nop dword [rax]
0x00004f98      d90556580000   fld dword [0x0000a7f4]
0x00004f9e      dcc9           fmul st(1), st(0)
0x00004fa0      db2d5a580000   fld xword [0x0000a800]
0x00004fa6      dfea           fucomip st(2)
0x00004fa8      76a9           jbe 0x4f53
0x00004faa      d95c2418       fstp dword [rsp + 0x18]
0x00004fae      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/human.c:-920
0x00004fb2      4489ff         mov edi, r15d
0x00004fb5      db3c24         fstp xword [rsp]
0x00004fb8      e883f7ffff     call sym.adjust_value.part.0
0x00004fbd      5d             pop rbp
0x00004fbe      415e           pop r14
0x00004fc0      d9442418       fld dword [rsp + 0x18]
0x00004fc4      eb8d           jmp 0x4f53                              ; ../coreutils-8.31/lib/human.c:-902
0x00004fc6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004fd0      4889f0         mov rax, rsi
0x00004fd3      4863ff         movsxd rdi, edi
0x00004fd6      83e001         and eax, 1                              ; ../coreutils-8.31/lib/human.c:-1062
0x00004fd9      4801f8         add rax, rdi
0x00004fdc      0f95c0         setne al
0x00004fdf      0fb6c0         movzx eax, al
0x00004fe2      4101c1         add r9d, eax
0x00004fe5      4183f905       cmp r9d, 5
0x00004fe9      0f8f77feffff   jg 0x4e66
0x00004fef      e98cfeffff     jmp 0x4e80                              ; ../coreutils-8.31/lib/human.c:-938
0x00004ff4      0f1f4000       nop dword [rax]
0x00004ff8      400f92c7       setb dil
0x00004ffc      400fb6ff       movzx edi, dil
0x00005000      83c702         add edi, 2                              ; ../coreutils-8.31/lib/human.c:-952
0x00005003      e971faffff     jmp 0x4a79
0x00005008      0f1f84000000.  nop dword [rax + rax]
0x00005010      4c8b442408     mov r8, qword [rsp + 8]
0x00005015      31db           xor ebx, ebx
0x00005017      e934feffff     jmp 0x4e50
0x0000501c      0f1f4000       nop dword [rax]
0x00005020      488b5c2408     mov rbx, qword [rsp + 8]
0x00005025      85c0           test eax, eax
0x00005027      488d5301       lea rdx, [rbx + 1]
0x0000502b      c6036b         mov byte [rbx], 0x6b                    ; 'k'
                                                                       ; [0x6b:1]=0
0x0000502e      0f85d7fbffff   jne 0x4c0b
0x00005034      4889542408     mov qword [rsp + 8], rdx
0x00005039      e9d9fbffff     jmp 0x4c17
0x0000503e      6690           nop
0x00005040      83fb08         cmp ebx, 8
0x00005043      0f8437feffff   je 0x4e80
0x00005049      83c301         add ebx, 1
0x0000504c      41f6c408       test r12b, 8
0x00005050      0f84bc000000   je 0x5112
0x00005056      4d8d78ff       lea r15, [r8 - 1]
0x0000505a      41c640ff31     mov byte [r8 - 1], 0x31                 ; '1'
                                                                       ; [0x31:1]=0
0x0000505f      e92cfbffff     jmp 0x4b90
0x00005064      0f1f4000       nop dword [rax]
0x00005068      4c8b442408     mov r8, qword [rsp + 8]
0x0000506d      e9defdffff     jmp 0x4e50
0x00005072      31db           xor ebx, ebx
0x00005074      e930fbffff     jmp 0x4ba9
0x00005079      85c0           test eax, eax                           ; ../coreutils-8.31/lib/human.c:-948
0x0000507b      0f8585fdffff   jne 0x4e06
0x00005081      41f6c408       test r12b, 8
0x00005085      751d           jne 0x50a4
0x00005087      41b930000000   mov r9d, 0x30                           ; '0'
0x0000508d      e978fdffff     jmp 0x4e0a
0x00005092      89c2           mov edx, eax
0x00005094      83e201         and edx, 1
0x00005097      01fa           add edx, edi
0x00005099      83fa02         cmp edx, 2
0x0000509c      0f9fc2         setg dl
0x0000509f      e94cfdffff     jmp 0x4df0
0x000050a4      4c8b442408     mov r8, qword [rsp + 8]
0x000050a9      4531c9         xor r9d, r9d
0x000050ac      e99ffdffff     jmp 0x4e50
0x000050b1      498b06         mov rax, qword [r14]
0x000050b4      4d89f1         mov r9, r14
0x000050b7      498900         mov qword [r8], rax
0x000050ba      89e8           mov eax, ebp
0x000050bc      498b5406f8     mov rdx, qword [r14 + rax - 8]
0x000050c1      49895400f8     mov qword [r8 + rax - 8], rdx
0x000050c6      498d5008       lea rdx, [r8 + 8]
0x000050ca      4c89c0         mov rax, r8
0x000050cd      4883e2f8       and rdx, 0xfffffffffffffff8
0x000050d1      4829d0         sub rax, rdx
0x000050d4      4929c1         sub r9, rax
0x000050d7      01e8           add eax, ebp
0x000050d9      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x000050dc      83f808         cmp eax, 8
0x000050df      0f8262fdffff   jb 0x4e47
0x000050e5      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x000050e8      31ff           xor edi, edi
0x000050ea      4189fa         mov r10d, edi
0x000050ed      83c708         add edi, 8
0x000050f0      4f8b1c11       mov r11, qword [r9 + r10]
0x000050f4      39c7           cmp edi, eax
0x000050f6      4e891c12       mov qword [rdx + r10], r11
0x000050fa      72ee           jb 0x50ea
0x000050fc      e946fdffff     jmp 0x4e47
0x00005101      498d7201       lea rsi, [r10 + 1]
0x00005105      4883fe0a       cmp rsi, 0xa
0x00005109      7455           je 0x5160
0x0000510b      31ff           xor edi, edi
0x0000510d      e96fffffff     jmp 0x5081
0x00005112      4889e8         mov rax, rbp
0x00005115      41c640ff30     mov byte [r8 - 1], 0x30                 ; '0'
                                                                       ; [0x30:1]=0
0x0000511a      48f7d0         not rax
0x0000511d      4901c0         add r8, rax
0x00005120      83fd08         cmp ebp, 8
0x00005123      89e8           mov eax, ebp
0x00005125      7343           jae 0x516a
0x00005127      83e504         and ebp, 4
0x0000512a      0f85b1000000   jne 0x51e1
0x00005130      85c0           test eax, eax
0x00005132      0f841effffff   je 0x5056
0x00005138      410fb616       movzx edx, byte [r14]
0x0000513c      a802           test al, 2
0x0000513e      418810         mov byte [r8], dl                       ; string_fortified.h:-1218
0x00005141      0f840fffffff   je 0x5056
0x00005147      410fb75406fe   movzx edx, word [r14 + rax - 2]
0x0000514d      6641895400fe   mov word [r8 + rax - 2], dx
0x00005153      e9fefeffff     jmp 0x5056
0x00005158      0f1f84000000.  nop dword [rax + rax]
0x00005160      4c8b442408     mov r8, qword [rsp + 8]
0x00005165      e9ddfcffff     jmp 0x4e47
0x0000516a      498b06         mov rax, qword [r14]
0x0000516d      498d4808       lea rcx, [r8 + 8]
0x00005171      4883e1f8       and rcx, 0xfffffffffffffff8
0x00005175      498900         mov qword [r8], rax
0x00005178      89e8           mov eax, ebp
0x0000517a      498b5406f8     mov rdx, qword [r14 + rax - 8]
0x0000517f      49895400f8     mov qword [r8 + rax - 8], rdx
0x00005184      4c89c0         mov rax, r8
0x00005187      4829c8         sub rax, rcx                            ; ../coreutils-8.31/lib/human.c:-963
0x0000518a      4929c6         sub r14, rax
0x0000518d      01e8           add eax, ebp
0x0000518f      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x00005192      83f808         cmp eax, 8                              ; ../coreutils-8.31/lib/human.c:-957
0x00005195      0f82bbfeffff   jb 0x5056
0x0000519b      83e0f8         and eax, 0xfffffff8                     ; ../coreutils-8.31/lib/human.c:-955 ; 4294967288
0x0000519e      31d2           xor edx, edx
0x000051a0      89d6           mov esi, edx                            ; ../coreutils-8.31/lib/human.c:-951
0x000051a2      83c208         add edx, 8
0x000051a5      498b3c36       mov rdi, qword [r14 + rsi]
0x000051a9      39c2           cmp edx, eax
0x000051ab      48893c31       mov qword [rcx + rsi], rdi
0x000051af      72ef           jb 0x51a0
0x000051b1      e9a0feffff     jmp 0x5056
0x000051b6      418b16         mov edx, dword [r14]
0x000051b9      418910         mov dword [r8], edx
0x000051bc      418b5406fc     mov edx, dword [r14 + rax - 4]
0x000051c1      41895400fc     mov dword [r8 + rax - 4], edx
0x000051c6      e97cfcffff     jmp 0x4e47
0x000051cb      e8d0cbffff     call sym.imp.__stack_chk_fail
0x000051d0      410fb75406fe   movzx edx, word [r14 + rax - 2]         ; ../coreutils-8.31/lib/human.c:-949
0x000051d6      6641895400fe   mov word [r8 + rax - 2], dx
0x000051dc      e966fcffff     jmp 0x4e47
0x000051e1      418b16         mov edx, dword [r14]
0x000051e4      418910         mov dword [r8], edx
0x000051e7      418b5406fc     mov edx, dword [r14 + rax - 4]
0x000051ec      41895400fc     mov dword [r8 + rax - 4], edx
0x000051f1      e960feffff     jmp 0x5056
0x000051f6      85c0           test eax, eax
0x000051f8      488b542408     mov rdx, qword [rsp + 8]
0x000051fd      0f8508faffff   jne 0x4c0b
0x00005203      e90ffaffff     jmp 0x4c17
0x00005208      8b5c2420       mov ebx, dword [rsp + 0x20]
0x0000520c      4989c7         mov r15, rax
0x0000520f      4589f4         mov r12d, r14d
0x00005212      e983f9ffff     jmp 0x4b9a
0x00005217      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/human.c:-936
;-- human_options:
0x00005220      4155           push r13
0x00005222      4154           push r12                                ; ../coreutils-8.31/lib/human.c:-935
0x00005224      4989f5         mov r13, rsi
0x00005227      55             push rbp
0x00005228      53             push rbx
0x00005229      4989d4         mov r12, rdx
0x0000522c      4889fb         mov rbx, rdi
0x0000522f      4883ec18       sub rsp, 0x18
0x00005233      64488b042528.  mov rax, qword fs:[0x28]
0x0000523c      4889442408     mov qword [rsp + 8], rax
0x00005241      31c0           xor eax, eax
0x00005243      4885ff         test rdi, rdi
0x00005246      0f8414010000   je 0x5360
0x0000524c      31ed           xor ebp, ebp
0x0000524e      803b27         cmp byte [rbx], 0x27
0x00005251      7509           jne 0x525c
0x00005253      4883c301       add rbx, 1
0x00005257      bd04000000     mov ebp, 4
0x0000525c      488d15755500.  lea rdx, obj.block_size_opts            ; 0xa7d8
0x00005263      488d35768820.  lea rsi, obj.block_size_args            ; 0x20dae0
0x0000526a      b904000000     mov ecx, 4
0x0000526f      4889df         mov rdi, rbx
0x00005272      e879eeffff     call sym.argmatch
0x00005277      85c0           test eax, eax
0x00005279      783d           js 0x52b8
0x0000527b      488d15565500.  lea rdx, obj.block_size_opts            ; 0xa7d8
0x00005282      4898           cdqe
0x00005284      49c704240100.  mov qword [r12], 1
0x0000528c      0b2c82         or ebp, dword [rdx + rax*4]
0x0000528f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/human.c:-913
0x00005291      41896d00       mov dword [r13], ebp
0x00005295      488b4c2408     mov rcx, qword [rsp + 8]
0x0000529a      6448330c2528.  xor rcx, qword fs:[0x28]
0x000052a3      0f8558010000   jne 0x5401
0x000052a9      4883c418       add rsp, 0x18
0x000052ad      5b             pop rbx
0x000052ae      5d             pop rbp
0x000052af      415c           pop r12
0x000052b1      415d           pop r13
0x000052b3      c3             ret
0x000052b4      0f1f4000       nop dword [rax]
0x000052b8      4c8d05f05400.  lea r8, str.eEgGkKmMpPtTyYzZ0           ; 0xa7af ; "eEgGkKmMpPtTyYzZ0"
0x000052bf      31d2           xor edx, edx
0x000052c1      4889e6         mov rsi, rsp
0x000052c4      4c89e1         mov rcx, r12
0x000052c7      4889df         mov rdi, rbx
0x000052ca      e8e1370000     call sym.xstrtoumax
0x000052cf      85c0           test eax, eax
0x000052d1      7545           jne 0x5318
0x000052d3      0fb633         movzx esi, byte [rbx]
0x000052d6      8d56d0         lea edx, [rsi - 0x30]
0x000052d9      80fa09         cmp dl, 9
0x000052dc      762a           jbe 0x5308
0x000052de      488b0c24       mov rcx, qword [rsp]
0x000052e2      4839cb         cmp rbx, rcx
0x000052e5      7512           jne 0x52f9                              ; ../coreutils-8.31/lib/human.c:-960
0x000052e7      e9d4000000     jmp 0x53c0
0x000052ec      0f1f4000       nop dword [rax]
0x000052f0      4839cb         cmp rbx, rcx
0x000052f3      0f84c7000000   je 0x53c0
0x000052f9      4883c301       add rbx, 1
0x000052fd      0fb63b         movzx edi, byte [rbx]
0x00005300      8d57d0         lea edx, [rdi - 0x30]
0x00005303      80fa09         cmp dl, 9
0x00005306      77e8           ja 0x52f0
0x00005308      498b1424       mov rdx, qword [r12]
0x0000530c      41896d00       mov dword [r13], ebp
0x00005310      eb12           jmp 0x5324
0x00005312      660f1f440000   nop word [rax + rax]
0x00005318      498b1424       mov rdx, qword [r12]
0x0000531c      41c745000000.  mov dword [r13], 0                      ; ../coreutils-8.31/lib/human.c:-931
0x00005324      4885d2         test rdx, rdx
0x00005327      0f8568ffffff   jne 0x5295
0x0000532d      488d3d6b5400.  lea rdi, str.POSIXLY_CORRECT            ; 0xa79f ; "POSIXLY_CORRECT"
0x00005334      e807c9ffff     call sym.imp.getenv
0x00005339      4883f801       cmp rax, 1
0x0000533d      4819c0         sbb rax, rax
0x00005340      2500020000     and eax, 0x200
0x00005345      480500020000   add rax, 0x200                          ; ../coreutils-8.31/lib/human.c:-909
0x0000534b      49890424       mov qword [r12], rax
0x0000534f      b804000000     mov eax, 4
0x00005354      e93cffffff     jmp 0x5295
0x00005359      0f1f80000000.  nop dword [rax]
0x00005360      488d3d235400.  lea rdi, str.BLOCK_SIZE                 ; 0xa78a ; "BLOCK_SIZE"
0x00005367      e8d4c8ffff     call sym.imp.getenv
0x0000536c      4885c0         test rax, rax
0x0000536f      4889c3         mov rbx, rax
0x00005372      0f85d4feffff   jne 0x524c
0x00005378      488d3d165400.  lea rdi, str.BLOCKSIZE                  ; 0xa795 ; "BLOCKSIZE"
0x0000537f      e8bcc8ffff     call sym.imp.getenv
0x00005384      4885c0         test rax, rax
0x00005387      4889c3         mov rbx, rax
0x0000538a      0f85bcfeffff   jne 0x524c
0x00005390      488d3d085400.  lea rdi, str.POSIXLY_CORRECT            ; 0xa79f ; "POSIXLY_CORRECT"
0x00005397      e8a4c8ffff     call sym.imp.getenv
0x0000539c      4885c0         test rax, rax
0x0000539f      7449           je 0x53ea
0x000053a1      49c704240002.  mov qword [r12], 0x200                  ; [0x200:8]=0x46474e552
0x000053a9      31c0           xor eax, eax
0x000053ab      41c745000000.  mov dword [r13], 0
0x000053b3      e9ddfeffff     jmp 0x5295
0x000053b8      0f1f84000000.  nop dword [rax + rax]
0x000053c0      8079ff42       cmp byte [rcx - 1], 0x42
0x000053c4      7412           je 0x53d8
0x000053c6      4080cd80       or bpl, 0x80
0x000053ca      83cd20         or ebp, 0x20                            ; "@"
0x000053cd      e936ffffff     jmp 0x5308
0x000053d2      660f1f440000   nop word [rax + rax]
0x000053d8      81cd80010000   or ebp, 0x180
0x000053de      8079fe69       cmp byte [rcx - 2], 0x69
0x000053e2      0f8520ffffff   jne 0x5308
0x000053e8      ebe0           jmp 0x53ca
0x000053ea      49c704240004.  mov qword [r12], 0x400                  ; [0x400:8]=0x12000000fd
0x000053f2      31c0           xor eax, eax
0x000053f4      41c745000000.  mov dword [r13], 0
0x000053fc      e994feffff     jmp 0x5295
0x00005401      e89ac9ffff     call sym.imp.__stack_chk_fail
0x00005406      662e0f1f8400.  nop word cs:[rax + rax]
;-- umaxtostr:
0x00005410      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:37
0x00005414      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x00005418      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x00005422      660f1f440000   nop word [rax + rax]
0x00005428      4889f8         mov rax, rdi
0x0000542b      4883e901       sub rcx, 1
0x0000542f      48f7e6         mul rsi
0x00005432      48c1ea03       shr rdx, 3
0x00005436      488d0492       lea rax, [rdx + rdx*4]
0x0000543a      4801c0         add rax, rax
0x0000543d      4829c7         sub rdi, rax
0x00005440      83c730         add edi, 0x30
0x00005443      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x00005446      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x00005449      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x0000544c      75da           jne 0x5428
0x0000544e      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x00005451      c3             ret
0x00005452      662e0f1f8400.  nop word cs:[rax + rax]
0x0000545c      0f1f4000       nop dword [rax]
;-- set_program_name:
0x00005460      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00005463      53             push rbx
0x00005464      7477           je 0x54dd                               ; ../coreutils-8.31/lib/progname.c:51
0x00005466      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000546b      4889fb         mov rbx, rdi
0x0000546e      e89dc9ffff     call sym.imp.strrchr
0x00005473      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00005476      7455           je 0x54cd
0x00005478      4c8d4001       lea r8, [rax + 1]
0x0000547c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000547f      4829da         sub rdx, rbx
0x00005482      4883fa06       cmp rdx, 6
0x00005486      7e45           jle 0x54cd
0x00005488      488d70fa       lea rsi, [rax - 6]
0x0000548c      488d3db55300.  lea rdi, str..libs                      ; 0xa848 ; "/.libs/"
0x00005493      b907000000     mov ecx, 7
0x00005498      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000549a      0f97c2         seta dl
0x0000549d      80da00         sbb dl, 0
0x000054a0      84d2           test dl, dl
0x000054a2      7529           jne 0x54cd
0x000054a4      488d3da55300.  lea rdi, [0x0000a850]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x000054ab      b903000000     mov ecx, 3
0x000054b0      4c89c6         mov rsi, r8
0x000054b3      4c89c3         mov rbx, r8
0x000054b6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000054b8      0f97c2         seta dl
0x000054bb      80da00         sbb dl, 0
0x000054be      84d2           test dl, dl
0x000054c0      750b           jne 0x54cd
0x000054c2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x000054c6      48891dd38b20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20e0a0:8]=0
0x000054cd      48891d348c20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20e108:8]=0
0x000054d4      48891de58b20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20e0c0:8]=0
0x000054db      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000054dc      c3             ret
0x000054dd      488b0dfc8b20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x000054e4      488d3d255300.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0xa810 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000054eb      ba37000000     mov edx, 0x37                           ; '7'
0x000054f0      be01000000     mov esi, 1
0x000054f5      e8d6cbffff     call sym.imp.fwrite
0x000054fa      e861c7ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000054ff      90             nop
;-- gettext_quote.part.1:
0x00005500      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00005501      53             push rbx
0x00005502      4889fd         mov rbp, rdi
0x00005505      89f3           mov ebx, esi
0x00005507      4883ec08       sub rsp, 8
0x0000550b      e8703f0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00005510      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00005513      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00005516      80fa55         cmp dl, 0x55
0x00005519      7475           je 0x5590
0x0000551b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000551e      7420           je 0x5540
0x00005520      488d053c5300.  lea rax, str.l______l                   ; 0xa863 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005527      488d15375300.  lea rdx, [0x0000a865]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000552e      83fb09         cmp ebx, 9
0x00005531      480f45c2       cmovne rax, rdx
0x00005535      4883c408       add rsp, 8
0x00005539      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000553a      5d             pop rbp
0x0000553b      c3             ret
0x0000553c      0f1f4000       nop dword [rax]
0x00005540      0fb65001       movzx edx, byte [rax + 1]
0x00005544      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00005547      80fa42         cmp dl, 0x42
0x0000554a      75d4           jne 0x5520
0x0000554c      80780231       cmp byte [rax + 2], 0x31
0x00005550      75ce           jne 0x5520
0x00005552      80780338       cmp byte [rax + 3], 0x38
0x00005556      75c8           jne 0x5520
0x00005558      80780430       cmp byte [rax + 4], 0x30
0x0000555c      75c2           jne 0x5520
0x0000555e      80780533       cmp byte [rax + 5], 0x33
0x00005562      75bc           jne 0x5520
0x00005564      80780630       cmp byte [rax + 6], 0x30
0x00005568      75b6           jne 0x5520
0x0000556a      80780700       cmp byte [rax + 7], 0
0x0000556e      75b0           jne 0x5520
0x00005570      807d0060       cmp byte [rbp], 0x60
0x00005574      488d05e15200.  lea rax, [0x0000a85c]
0x0000557b      488d15de5200.  lea rdx, [0x0000a860]
0x00005582      480f45c2       cmovne rax, rdx
0x00005586      4883c408       add rsp, 8
0x0000558a      5b             pop rbx
0x0000558b      5d             pop rbp
0x0000558c      c3             ret
0x0000558d      0f1f00         nop dword [rax]
0x00005590      0fb65001       movzx edx, byte [rax + 1]
0x00005594      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00005597      80fa54         cmp dl, 0x54
0x0000559a      7584           jne 0x5520
0x0000559c      0fb65002       movzx edx, byte [rax + 2]
0x000055a0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000055a3      80fa46         cmp dl, 0x46
0x000055a6      0f8574ffffff   jne 0x5520
0x000055ac      8078032d       cmp byte [rax + 3], 0x2d
0x000055b0      0f856affffff   jne 0x5520
0x000055b6      80780438       cmp byte [rax + 4], 0x38
0x000055ba      0f8560ffffff   jne 0x5520
0x000055c0      80780500       cmp byte [rax + 5], 0
0x000055c4      0f8556ffffff   jne 0x5520
0x000055ca      807d0060       cmp byte [rbp], 0x60
0x000055ce      488d057f5200.  lea rax, [0x0000a854]                   ; "\u2018"
0x000055d5      488d157c5200.  lea rdx, [0x0000a858]                   ; "\u2019"
0x000055dc      480f45c2       cmovne rax, rdx
0x000055e0      4883c408       add rsp, 8
0x000055e4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000055e5      5d             pop rbp
0x000055e6      c3             ret
0x000055e7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000055f0      4157           push r15
0x000055f2      4156           push r14
0x000055f4      4589c7         mov r15d, r8d
0x000055f7      4155           push r13
0x000055f9      4154           push r12
0x000055fb      4989fe         mov r14, rdi
0x000055fe      55             push rbp
0x000055ff      53             push rbx
0x00005600      4489cb         mov ebx, r9d
0x00005603      4989f5         mov r13, rsi
0x00005606      4889cd         mov rbp, rcx
0x00005609      83e302         and ebx, 2
0x0000560c      4881ecb80000.  sub rsp, 0xb8
0x00005613      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000561b      4889542410     mov qword [rsp + 0x10], rdx
0x00005620      4489442408     mov dword [rsp + 8], r8d
0x00005625      44894c2478     mov dword [rsp + 0x78], r9d
0x0000562a      4889442420     mov qword [rsp + 0x20], rax
0x0000562f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00005637      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000563c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00005644      4889442460     mov qword [rsp + 0x60], rax
0x00005649      64488b042528.  mov rax, qword fs:[0x28]
0x00005652      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000565a      31c0           xor eax, eax
0x0000565c      e81fc7ffff     call sym.imp.__ctype_get_mb_cur_max
0x00005661      4183ff0a       cmp r15d, 0xa
0x00005665      4889442458     mov qword [rsp + 0x58], rax
0x0000566a      0f87af110000   ja 0x681f
0x00005670      488d0d495200.  lea rcx, [0x0000a8c0]
0x00005677      4489fa         mov edx, r15d
0x0000567a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000567e      4801c8         add rax, rcx
0x00005681      ffe0           jmp rax
0x00005683      c644240e01     mov byte [rsp + 0xe], 1
0x00005688      c644247c00     mov byte [rsp + 0x7c], 0
0x0000568d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00005690      48c744245000.  mov qword [rsp + 0x50], 0
0x00005699      c644240f01     mov byte [rsp + 0xf], 1
0x0000569e      c644240d00     mov byte [rsp + 0xd], 0
0x000056a3      488d05bb5100.  lea rax, [0x0000a865]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000056aa      48c744241801.  mov qword [rsp + 0x18], 1
0x000056b3      4531ff         xor r15d, r15d
0x000056b6      c74424080200.  mov dword [rsp + 8], 2
0x000056be      4889442448     mov qword [rsp + 0x48], rax
0x000056c3      4531db         xor r11d, r11d
0x000056c6      4889e8         mov rax, rbp
0x000056c9      4589e0         mov r8d, r12d
0x000056cc      4c89dd         mov rbp, r11
0x000056cf      4989c3         mov r11, rax
0x000056d2      660f1f440000   nop word [rax + rax]
0x000056d8      4939eb         cmp r11, rbp
0x000056db      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000056df      4983fbff       cmp r11, 0xffffffffffffffff
0x000056e3      750d           jne 0x56f2
0x000056e5      488b442410     mov rax, qword [rsp + 0x10]
0x000056ea      803c2800       cmp byte [rax + rbp], 0
0x000056ee      410f95c4       setne r12b
0x000056f2      4584e4         test r12b, r12b
0x000056f5      0f8455060000   je 0x5d50
0x000056fb      837c240802     cmp dword [rsp + 8], 2
0x00005700      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00005705      4c8d0c2f       lea r9, [rdi + rbp]
0x00005709      0f95c0         setne al
0x0000570c      2244240d       and al, byte [rsp + 0xd]
0x00005710      4189c2         mov r10d, eax
0x00005713      0f84a7000000   je 0x57c0
0x00005719      488b442418     mov rax, qword [rsp + 0x18]
0x0000571e      4885c0         test rax, rax
0x00005721      0f8429040000   je 0x5b50
0x00005727      4983fbff       cmp r11, 0xffffffffffffffff
0x0000572b      488d5c0500     lea rbx, [rbp + rax]
0x00005730      752e           jne 0x5760
0x00005732      4883f801       cmp rax, 1
0x00005736      7628           jbe 0x5760
0x00005738      4488442438     mov byte [rsp + 0x38], r8b
0x0000573d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00005742      4c894c2428     mov qword [rsp + 0x28], r9
0x00005747      e844c6ffff     call sym.imp.strlen
0x0000574c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00005752      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00005758      4989c3         mov r11, rax
0x0000575b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005760      4c39db         cmp rbx, r11
0x00005763      4488542428     mov byte [rsp + 0x28], r10b
0x00005768      0f87b2050000   ja 0x5d20
0x0000576e      488b542418     mov rdx, qword [rsp + 0x18]
0x00005773      488b742448     mov rsi, qword [rsp + 0x48]
0x00005778      4c89cf         mov rdi, r9
0x0000577b      4c895c2440     mov qword [rsp + 0x40], r11
0x00005780      4488442438     mov byte [rsp + 0x38], r8b
0x00005785      4c894c2430     mov qword [rsp + 0x30], r9
0x0000578a      e811c7ffff     call sym.imp.memcmp
0x0000578f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00005791      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005796      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000579c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x000057a1      0f8579050000   jne 0x5d20
0x000057a7      807c240f00     cmp byte [rsp + 0xf], 0
0x000057ac      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000057b2      0f857d0f0000   jne 0x6735
0x000057b8      0f1f84000000.  nop dword [rax + rax]
0x000057c0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x000057c4      80fb7e         cmp bl, 0x7e
0x000057c7      0f871b030000   ja 0x5ae8
0x000057cd      488d0d185100.  lea rcx, [0x0000a8ec]
0x000057d4      0fb6d3         movzx edx, bl
0x000057d7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000057db      4801c8         add rax, rcx
0x000057de      ffe0           jmp rax
0x000057e0      4531d2         xor r10d, r10d
0x000057e3      4983fb01       cmp r11, 1
0x000057e7      0f95c0         setne al
0x000057ea      4983fbff       cmp r11, 0xffffffffffffffff
0x000057ee      750c           jne 0x57fc
0x000057f0      488b442410     mov rax, qword [rsp + 0x10]
0x000057f5      80780100       cmp byte [rax + 1], 0
0x000057f9      0f95c0         setne al
0x000057fc      837c240802     cmp dword [rsp + 8], 2
0x00005801      0f94c2         sete dl
0x00005804      84c0           test al, al
0x00005806      0f844c020000   je 0x5a58
0x0000580c      4531e4         xor r12d, r12d
0x0000580f      31c0           xor eax, eax
0x00005811      0f1f80000000.  nop dword [rax]
0x00005818      807c240d01     cmp byte [rsp + 0xd], 1
0x0000581d      0f850f010000   jne 0x5932
0x00005823      84d2           test dl, dl
0x00005825      0f8507010000   jne 0x5932
0x0000582b      488b742420     mov rsi, qword [rsp + 0x20]
0x00005830      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00005833      7414           je 0x5849
0x00005835      89da           mov edx, ebx
0x00005837      c0ea05         shr dl, 5
0x0000583a      0fb6d2         movzx edx, dl
0x0000583d      8b1496         mov edx, dword [rsi + rdx*4]
0x00005840      0fa3da         bt edx, ebx
0x00005843      0f824a010000   jb 0x5993
0x00005849      4584d2         test r10b, r10b
0x0000584c      0f8541010000   jne 0x5993
0x00005852      83f001         xor eax, 1
0x00005855      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00005859      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000585c      84c0           test al, al
0x0000585e      7420           je 0x5880                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00005860      4d39fd         cmp r13, r15
0x00005863      7605           jbe 0x586a
0x00005865      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000586a      498d4701       lea rax, [r15 + 1]
0x0000586e      4939c5         cmp r13, rax
0x00005871      7606           jbe 0x5879
0x00005873      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00005879      4983c702       add r15, 2
0x0000587d      4531c0         xor r8d, r8d
0x00005880      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00005883      7304           jae 0x5889                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00005885      43881c3e       mov byte [r14 + r15], bl
0x00005889      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000588e      4983c701       add r15, 1
0x00005892      b800000000     mov eax, 0
0x00005897      4584e4         test r12b, r12b
0x0000589a      0f44f8         cmove edi, eax
0x0000589d      40887c240e     mov byte [rsp + 0xe], dil
0x000058a2      e931feffff     jmp 0x56d8
0x000058a7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000058b0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000058b3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000058b7      83f802         cmp eax, 2
0x000058ba      0f84b8050000   je 0x5e78
0x000058c0      83f805         cmp eax, 5
0x000058c3      0f846f050000   je 0x5e38
0x000058c9      83f802         cmp eax, 2
0x000058cc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000058d1      0f94c2         sete dl
0x000058d4      4531e4         xor r12d, r12d
0x000058d7      31c0           xor eax, eax
0x000058d9      e93affffff     jmp 0x5818
0x000058de      6690           nop
0x000058e0      4531d2         xor r10d, r10d
0x000058e3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000058e8      0f8402050000   je 0x5df0
0x000058ee      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x000058f3      31d2           xor edx, edx
0x000058f5      31c0           xor eax, eax
0x000058f7      bb27000000     mov ebx, 0x27                           ; '''
0x000058fc      e917ffffff     jmp 0x5818
0x00005901      0f1f80000000.  nop dword [rax]
0x00005908      ba09000000     mov edx, 9
0x0000590d      bb74000000     mov ebx, 0x74                           ; 't'
0x00005912      837c240802     cmp dword [rsp + 8], 2
0x00005917      0f94c0         sete al
0x0000591a      2244240f       and al, byte [rsp + 0xf]
0x0000591e      0f854a010000   jne 0x5a6e
0x00005924      807c240d00     cmp byte [rsp + 0xd], 0
0x00005929      7565           jne 0x5990
0x0000592b      89d3           mov ebx, edx
0x0000592d      4531e4         xor r12d, r12d
0x00005930      31c0           xor eax, eax
0x00005932      807c240f00     cmp byte [rsp + 0xf], 0
0x00005937      0f85eefeffff   jne 0x582b
0x0000593d      e907ffffff     jmp 0x5849                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00005942      660f1f440000   nop word [rax + rax]
0x00005948      ba08000000     mov edx, 8
0x0000594d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00005952      ebd0           jmp 0x5924
0x00005954      0f1f4000       nop dword [rax]
0x00005958      837c240802     cmp dword [rsp + 8], 2
0x0000595d      0f84cd030000   je 0x5d30
0x00005963      807c240d00     cmp byte [rsp + 0xd], 0
0x00005968      0f8412020000   je 0x5b80
0x0000596e      807c240f00     cmp byte [rsp + 0xf], 0
0x00005973      0f8407020000   je 0x5b80
0x00005979      48837c241800   cmp qword [rsp + 0x18], 0
0x0000597f      0f85b6030000   jne 0x5d3b
0x00005985      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000598a      660f1f440000   nop word [rax + rax]
0x00005990      4531e4         xor r12d, r12d
0x00005993      837c240802     cmp dword [rsp + 8], 2
0x00005998      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000599b      807c240f00     cmp byte [rsp + 0xf], 0
0x000059a0      89d0           mov eax, edx
0x000059a2      0f8550080000   jne 0x61f8
0x000059a8      4489c0         mov eax, r8d
0x000059ab      83f001         xor eax, 1
0x000059ae      20d0           and al, dl
0x000059b0      742f           je 0x59e1
0x000059b2      4d39fd         cmp r13, r15
0x000059b5      7605           jbe 0x59bc
0x000059b7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000059bc      498d5701       lea rdx, [r15 + 1]
0x000059c0      4939d5         cmp r13, rdx
0x000059c3      7606           jbe 0x59cb
0x000059c5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000059cb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x000059cf      4939d5         cmp r13, rdx
0x000059d2      7606           jbe 0x59da
0x000059d4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000059da      4983c703       add r15, 3
0x000059de      4189c0         mov r8d, eax
0x000059e1      4d39fd         cmp r13, r15
0x000059e4      7605           jbe 0x59eb
0x000059e6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000059eb      4983c701       add r15, 1
0x000059ef      4883c501       add rbp, 1
0x000059f3      e988feffff     jmp 0x5880
0x000059f8      0f1f84000000.  nop dword [rax + rax]
0x00005a00      807c240d00     cmp byte [rsp + 0xd], 0
0x00005a05      0f85c8010000   jne 0x5bd3
0x00005a0b      31d2           xor edx, edx
0x00005a0d      f644247801     test byte [rsp + 0x78], 1
0x00005a12      0f8413ffffff   je 0x592b
0x00005a18      4883c501       add rbp, 1
0x00005a1c      e9b7fcffff     jmp 0x56d8
0x00005a21      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00005a28      837c240802     cmp dword [rsp + 8], 2
0x00005a2d      0f94c2         sete dl
0x00005a30      31c0           xor eax, eax
0x00005a32      e9e1fdffff     jmp 0x5818
0x00005a37      660f1f840000.  nop word [rax + rax]
0x00005a40      ba07000000     mov edx, 7
0x00005a45      bb61000000     mov ebx, 0x61                           ; 'a'
0x00005a4a      e9d5feffff     jmp 0x5924
0x00005a4f      90             nop
0x00005a50      837c240802     cmp dword [rsp + 8], 2
0x00005a55      0f94c2         sete dl
0x00005a58      4885ed         test rbp, rbp
0x00005a5b      0f85abfdffff   jne 0x580c
0x00005a61      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00005a66      20d0           and al, dl
0x00005a68      0f84aafdffff   je 0x5818
0x00005a6e      4c89dd         mov rbp, r11
0x00005a71      c74424080200.  mov dword [rsp + 8], 2
0x00005a79      e9fb060000     jmp 0x6179
0x00005a7e      6690           nop
0x00005a80      837c240802     cmp dword [rsp + 8], 2
0x00005a85      0f94c2         sete dl
0x00005a88      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00005a8b      ebd4           jmp 0x5a61
0x00005a8d      0f1f00         nop dword [rax]
0x00005a90      837c240802     cmp dword [rsp + 8], 2
0x00005a95      bb20000000     mov ebx, 0x20                           ; "@"
0x00005a9a      0f94c2         sete dl
0x00005a9d      ebc2           jmp 0x5a61
0x00005a9f      90             nop
0x00005aa0      ba0d000000     mov edx, 0xd
0x00005aa5      bb72000000     mov ebx, 0x72                           ; 'r'
0x00005aaa      e963feffff     jmp 0x5912
0x00005aaf      90             nop
0x00005ab0      ba0c000000     mov edx, 0xc
0x00005ab5      bb66000000     mov ebx, 0x66                           ; 'f'
0x00005aba      e965feffff     jmp 0x5924
0x00005abf      90             nop
0x00005ac0      ba0b000000     mov edx, 0xb
0x00005ac5      bb76000000     mov ebx, 0x76                           ; 'v'
0x00005aca      e955feffff     jmp 0x5924
0x00005acf      90             nop
0x00005ad0      ba0a000000     mov edx, 0xa
0x00005ad5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00005ada      e933feffff     jmp 0x5912
0x00005adf      90             nop
0x00005ae0      4531d2         xor r10d, r10d
0x00005ae3      0f1f440000     nop dword [rax + rax]
0x00005ae8      48837c245801   cmp qword [rsp + 0x58], 1
0x00005aee      0f85a4030000   jne 0x5e98
0x00005af4      4c895c2438     mov qword [rsp + 0x38], r11
0x00005af9      4488442430     mov byte [rsp + 0x30], r8b
0x00005afe      4488542428     mov byte [rsp + 0x28], r10b
0x00005b03      e808c6ffff     call sym.imp.__ctype_b_loc
0x00005b08      488b08         mov rcx, qword [rax]
0x00005b0b      0fb6d3         movzx edx, bl
0x00005b0e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00005b14      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00005b1a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00005b1f      bf01000000     mov edi, 1
0x00005b24      0fb70451       movzx eax, word [rcx + rdx*2]
0x00005b28      66250040       and ax, 0x4000
0x00005b2c      410f95c4       setne r12b
0x00005b30      0f94c0         sete al
0x00005b33      2244240d       and al, byte [rsp + 0xd]
0x00005b37      84c0           test al, al
0x00005b39      0f8592090000   jne 0x64d1
0x00005b3f      837c240802     cmp dword [rsp + 8], 2
0x00005b44      0f94c2         sete dl
0x00005b47      e9ccfcffff     jmp 0x5818
0x00005b4c      0f1f4000       nop dword [rax]
0x00005b50      410fb619       movzx ebx, byte [r9]
0x00005b54      80fb7e         cmp bl, 0x7e
0x00005b57      7787           ja 0x5ae0
0x00005b59      488d0d884f00.  lea rcx, [0x0000aae8]
0x00005b60      0fb6d3         movzx edx, bl
0x00005b63      48630491       movsxd rax, dword [rcx + rdx*4]
0x00005b67      4801c8         add rax, rcx
0x00005b6a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00005b6c      0f1f4000       nop dword [rax]
0x00005b70      4531d2         xor r10d, r10d
0x00005b73      807c240d00     cmp byte [rsp + 0xd], 0
0x00005b78      0f85f0fdffff   jne 0x596e
0x00005b7e      6690           nop
0x00005b80      ba5c000000     mov edx, 0x5c                           ; '\'
0x00005b85      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00005b8a      e995fdffff     jmp 0x5924
0x00005b8f      90             nop
0x00005b90      ba0c000000     mov edx, 0xc
0x00005b95      4531d2         xor r10d, r10d
0x00005b98      bb66000000     mov ebx, 0x66                           ; 'f'
0x00005b9d      e982fdffff     jmp 0x5924
0x00005ba2      660f1f440000   nop word [rax + rax]
0x00005ba8      ba0a000000     mov edx, 0xa
0x00005bad      4531d2         xor r10d, r10d
0x00005bb0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00005bb5      e958fdffff     jmp 0x5912
0x00005bba      660f1f440000   nop word [rax + rax]
0x00005bc0      bb61000000     mov ebx, 0x61                           ; 'a'
0x00005bc5      e9c6fdffff     jmp 0x5990
0x00005bca      660f1f440000   nop word [rax + rax]
0x00005bd0      4531d2         xor r10d, r10d
0x00005bd3      837c240802     cmp dword [rsp + 8], 2
0x00005bd8      0f94c2         sete dl
0x00005bdb      807c240f00     cmp byte [rsp + 0xf], 0
0x00005be0      0f85940b0000   jne 0x677a
0x00005be6      4489c0         mov eax, r8d
0x00005be9      4c89f9         mov rcx, r15
0x00005bec      83f001         xor eax, 1
0x00005bef      20d0           and al, dl
0x00005bf1      742d           je 0x5c20
0x00005bf3      4d39fd         cmp r13, r15
0x00005bf6      7605           jbe 0x5bfd
0x00005bf8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00005bfd      498d4f01       lea rcx, [r15 + 1]
0x00005c01      4939cd         cmp r13, rcx
0x00005c04      7606           jbe 0x5c0c
0x00005c06      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00005c0c      498d4f02       lea rcx, [r15 + 2]
0x00005c10      4939cd         cmp r13, rcx
0x00005c13      0f8730060000   ja 0x6249
0x00005c19      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00005c1d      4189c0         mov r8d, eax
0x00005c20      4939cd         cmp r13, rcx
0x00005c23      7605           jbe 0x5c2a
0x00005c25      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00005c2a      837c240802     cmp dword [rsp + 8], 2
0x00005c2f      4c8d7901       lea r15, [rcx + 1]
0x00005c33      0f8400060000   je 0x6239
0x00005c39      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00005c3d      4c39d8         cmp rax, r11
0x00005c40      7319           jae 0x5c5b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00005c42      488b442410     mov rax, qword [rsp + 0x10]
0x00005c47      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00005c4c      88442428       mov byte [rsp + 0x28], al
0x00005c50      83e830         sub eax, 0x30
0x00005c53      3c09           cmp al, 9
0x00005c55      0f862e080000   jbe 0x6489
0x00005c5b      4489e0         mov eax, r12d
0x00005c5e      bb30000000     mov ebx, 0x30                           ; '0'
0x00005c63      4531e4         xor r12d, r12d
0x00005c66      e9adfbffff     jmp 0x5818                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00005c6b      0f1f440000     nop dword [rax + rax]
0x00005c70      837c240802     cmp dword [rsp + 8], 2
0x00005c75      4589d4         mov r12d, r10d
0x00005c78      0f94c2         sete dl
0x00005c7b      4531d2         xor r10d, r10d
0x00005c7e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00005c80      e993fbffff     jmp 0x5818                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00005c85      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00005c88      837c240802     cmp dword [rsp + 8], 2
0x00005c8d      0f94c2         sete dl
0x00005c90      4531d2         xor r10d, r10d
0x00005c93      e9c0fdffff     jmp 0x5a58
0x00005c98      0f1f84000000.  nop dword [rax + rax]
0x00005ca0      837c240802     cmp dword [rsp + 8], 2
0x00005ca5      0f94c2         sete dl
0x00005ca8      4531d2         xor r10d, r10d
0x00005cab      4531e4         xor r12d, r12d
0x00005cae      e9aefdffff     jmp 0x5a61
0x00005cb3      0f1f440000     nop dword [rax + rax]
0x00005cb8      837c240802     cmp dword [rsp + 8], 2
0x00005cbd      4589d4         mov r12d, r10d
0x00005cc0      bb20000000     mov ebx, 0x20                           ; "@"
0x00005cc5      0f94c2         sete dl
0x00005cc8      4531d2         xor r10d, r10d
0x00005ccb      e991fdffff     jmp 0x5a61
0x00005cd0      ba0d000000     mov edx, 0xd
0x00005cd5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00005cd8      bb72000000     mov ebx, 0x72                           ; 'r'
0x00005cdd      e930fcffff     jmp 0x5912
0x00005ce2      660f1f440000   nop word [rax + rax]
0x00005ce8      bb76000000     mov ebx, 0x76                           ; 'v'
0x00005ced      e99efcffff     jmp 0x5990
0x00005cf2      660f1f440000   nop word [rax + rax]
0x00005cf8      ba09000000     mov edx, 9
0x00005cfd      4531d2         xor r10d, r10d
0x00005d00      bb74000000     mov ebx, 0x74                           ; 't'
0x00005d05      e908fcffff     jmp 0x5912
0x00005d0a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00005d10      bb62000000     mov ebx, 0x62                           ; 'b'
0x00005d15      e976fcffff     jmp 0x5990
0x00005d1a      660f1f440000   nop word [rax + rax]
0x00005d20      4531d2         xor r10d, r10d
0x00005d23      e998faffff     jmp 0x57c0
0x00005d28      0f1f84000000.  nop dword [rax + rax]
0x00005d30      807c240f00     cmp byte [rsp + 0xf], 0
0x00005d35      0f8565090000   jne 0x66a0
0x00005d3b      4883c501       add rbp, 1
0x00005d3f      4489c0         mov eax, r8d
0x00005d42      4531e4         xor r12d, r12d
0x00005d45      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00005d4a      e90dfbffff     jmp 0x585c
0x00005d4f      90             nop
0x00005d50      837c240802     cmp dword [rsp + 8], 2
0x00005d55      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00005d5a      4589c4         mov r12d, r8d
0x00005d5d      4c89dd         mov rbp, r11
0x00005d60      0f94c2         sete dl
0x00005d63      89d8           mov eax, ebx
0x00005d65      4d85ff         test r15, r15
0x00005d68      0f94c1         sete cl
0x00005d6b      21d0           and eax, edx
0x00005d6d      20c8           and al, cl
0x00005d6f      0f85610a0000   jne 0x67d6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00005d75      89d8           mov eax, ebx
0x00005d77      83f001         xor eax, 1
0x00005d7a      20c2           and dl, al
0x00005d7c      0f846a090000   je 0x66ec
0x00005d82      807c247c00     cmp byte [rsp + 0x7c], 0
0x00005d87      0f845d090000   je 0x66ea
0x00005d8d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00005d92      0f85f5090000   jne 0x678d
0x00005d98      4d85ed         test r13, r13
0x00005d9b      0f94c0         sete al
0x00005d9e      48837c245000   cmp qword [rsp + 0x50], 0
0x00005da4      0f95c2         setne dl
0x00005da7      20d0           and al, dl
0x00005da9      0f841d0a0000   je 0x67cc
0x00005daf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00005db4      488d1daa4a00.  lea rbx, [0x0000a865]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005dbb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00005dbf      c74424080200.  mov dword [rsp + 8], 2
0x00005dc7      41bf01000000   mov r15d, 1
0x00005dcd      48c744241801.  mov qword [rsp + 0x18], 1
0x00005dd6      c644240f00     mov byte [rsp + 0xf], 0
0x00005ddb      48895c2448     mov qword [rsp + 0x48], rbx
0x00005de0      8844247c       mov byte [rsp + 0x7c], al
0x00005de4      e9daf8ffff     jmp 0x56c3
0x00005de9      0f1f80000000.  nop dword [rax]
0x00005df0      807c240f00     cmp byte [rsp + 0xf], 0
0x00005df5      0f85a5080000   jne 0x66a0
0x00005dfb      4d85ed         test r13, r13
0x00005dfe      0f84fc030000   je 0x6200                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00005e04      31d2           xor edx, edx
0x00005e06      48837c245000   cmp qword [rsp + 0x50], 0
0x00005e0c      0f85ee030000   jne 0x6200                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00005e12      4c896c2450     mov qword [rsp + 0x50], r13
0x00005e17      4983c703       add r15, 3
0x00005e1b      31c0           xor eax, eax
0x00005e1d      448864247c     mov byte [rsp + 0x7c], r12b
0x00005e22      4531c0         xor r8d, r8d
0x00005e25      4989d5         mov r13, rdx
0x00005e28      bb27000000     mov ebx, 0x27                           ; '''
0x00005e2d      e917faffff     jmp 0x5849
0x00005e32      660f1f440000   nop word [rax + rax]
0x00005e38      f644247804     test byte [rsp + 0x78], 4
0x00005e3d      7421           je 0x5e60
0x00005e3f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00005e43      4c39d9         cmp rcx, r11
0x00005e46      7318           jae 0x5e60
0x00005e48      488b442410     mov rax, qword [rsp + 0x10]
0x00005e4d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00005e52      0f848a070000   je 0x65e2
0x00005e58      0f1f84000000.  nop dword [rax + rax]
0x00005e60      31d2           xor edx, edx
0x00005e62      4531e4         xor r12d, r12d
0x00005e65      31c0           xor eax, eax
0x00005e67      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00005e6c      e9a7f9ffff     jmp 0x5818
0x00005e71      0f1f80000000.  nop dword [rax]
0x00005e78      807c240f00     cmp byte [rsp + 0xf], 0
0x00005e7d      0f851d080000   jne 0x66a0
0x00005e83      4531e4         xor r12d, r12d
0x00005e86      31c0           xor eax, eax
0x00005e88      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00005e8d      e9b7f9ffff     jmp 0x5849                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00005e92      660f1f440000   nop word [rax + rax]
0x00005e98      488d8424a000.  lea rax, [rsp + 0xa0]
0x00005ea0      4983fbff       cmp r11, 0xffffffffffffffff
0x00005ea4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00005eb0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00005eb5      752d           jne 0x5ee4
0x00005eb7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00005ebc      4488442440     mov byte [rsp + 0x40], r8b
0x00005ec1      4488542438     mov byte [rsp + 0x38], r10b
0x00005ec6      4c894c2430     mov qword [rsp + 0x30], r9
0x00005ecb      e8c0beffff     call sym.imp.strlen
0x00005ed0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00005ed6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00005edc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00005edf      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005ee4      488d84249c00.  lea rax, [rsp + 0x9c]
0x00005eec      31c9           xor ecx, ecx
0x00005eee      885c247e       mov byte [rsp + 0x7e], bl
0x00005ef2      448844247d     mov byte [rsp + 0x7d], r8b
0x00005ef7      4889cb         mov rbx, rcx
0x00005efa      4c898c248800.  mov qword [rsp + 0x88], r9
0x00005f02      4889442438     mov qword [rsp + 0x38], rax
0x00005f07      448854247f     mov byte [rsp + 0x7f], r10b
0x00005f0c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00005f14      4c89742440     mov qword [rsp + 0x40], r14
0x00005f19      4c896c2470     mov qword [rsp + 0x70], r13
0x00005f1e      4c895c2430     mov qword [rsp + 0x30], r11
0x00005f23      488b442410     mov rax, qword [rsp + 0x10]
0x00005f28      4c8d741d00     lea r14, [rbp + rbx]
0x00005f2d      488b542430     mov rdx, qword [rsp + 0x30]
0x00005f32      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00005f37      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005f3c      4e8d2c30       lea r13, [rax + r14]
0x00005f40      4c29f2         sub rdx, r14
0x00005f43      4c89ee         mov rsi, r13
0x00005f46      e825330000     call sym.rpl_mbrtowc
0x00005f4b      4885c0         test rax, rax
0x00005f4e      4989c7         mov r15, rax
0x00005f51      744e           je 0x5fa1
0x00005f53      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005f57      0f8418060000   je 0x6575
0x00005f5d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00005f61      0f849a050000   je 0x6501
0x00005f67      837c240802     cmp dword [rsp + 8], 2
0x00005f6c      0f94c0         sete al
0x00005f6f      2244240f       and al, byte [rsp + 0xf]
0x00005f73      0f8597010000   jne 0x6110
0x00005f79      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00005f80      e87bc1ffff     call sym.imp.iswprint
0x00005f85      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00005f8a      85c0           test eax, eax
0x00005f8c      b800000000     mov eax, 0
0x00005f91      440f44e0       cmove r12d, eax
0x00005f95      4c01fb         add rbx, r15
0x00005f98      e853c1ffff     call sym.imp.mbsinit
0x00005f9d      85c0           test eax, eax
0x00005f9f      7482           je 0x5f23
0x00005fa1      4489e2         mov edx, r12d
0x00005fa4      4889df         mov rdi, rbx
0x00005fa7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00005fad      83f201         xor edx, 1
0x00005fb0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00005fb5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00005fbb      2254240d       and dl, byte [rsp + 0xd]
0x00005fbf      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00005fc7      4c8b742440     mov r14, qword [rsp + 0x40]
0x00005fcc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00005fd1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00005fd6      4883ff01       cmp rdi, 1
0x00005fda      0f86fb050000   jbe 0x65db
0x00005fe0      4889f9         mov rcx, rdi
0x00005fe3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00005fe5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00005feb      4801e9         add rcx, rbp
0x00005fee      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00005ff3      e9b6000000     jmp 0x60ae
0x00005ff8      0f1f84000000.  nop dword [rax + rax]
0x00006000      837c240802     cmp dword [rsp + 8], 2
0x00006005      0f94c0         sete al
0x00006008      4584c9         test r9b, r9b
0x0000600b      0f85af040000   jne 0x64c0
0x00006011      4489c6         mov esi, r8d
0x00006014      83f601         xor esi, 1
0x00006017      4020f0         and al, sil
0x0000601a      742f           je 0x604b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000601c      4d39fd         cmp r13, r15
0x0000601f      7605           jbe 0x6026
0x00006021      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00006026      498d7701       lea rsi, [r15 + 1]
0x0000602a      4939f5         cmp r13, rsi
0x0000602d      7606           jbe 0x6035                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000602f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00006035      498d7702       lea rsi, [r15 + 2]
0x00006039      4939f5         cmp r13, rsi
0x0000603c      7606           jbe 0x6044
0x0000603e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00006044      4983c703       add r15, 3
0x00006048      4189c0         mov r8d, eax
0x0000604b      4d39fd         cmp r13, r15
0x0000604e      7605           jbe 0x6055
0x00006050      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00006055      498d4701       lea rax, [r15 + 1]
0x00006059      4939c5         cmp r13, rax
0x0000605c      760d           jbe 0x606b
0x0000605e      89d8           mov eax, ebx
0x00006060      c0e806         shr al, 6
0x00006063      83c030         add eax, 0x30
0x00006066      4388443e01     mov byte [r14 + r15 + 1], al
0x0000606b      498d4702       lea rax, [r15 + 2]
0x0000606f      4939c5         cmp r13, rax
0x00006072      7610           jbe 0x6084
0x00006074      89d8           mov eax, ebx
0x00006076      c0e803         shr al, 3
0x00006079      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000607c      83c030         add eax, 0x30
0x0000607f      4388443e02     mov byte [r14 + r15 + 2], al
0x00006084      83e307         and ebx, 7
0x00006087      4883c501       add rbp, 1
0x0000608b      4983c703       add r15, 3
0x0000608f      83c330         add ebx, 0x30
0x00006092      4839cd         cmp rbp, rcx
0x00006095      0f83e5f7ffff   jae 0x5880
0x0000609b      89d6           mov esi, edx
0x0000609d      4d39fd         cmp r13, r15
0x000060a0      7604           jbe 0x60a6
0x000060a2      43881c3e       mov byte [r14 + r15], bl
0x000060a6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000060aa      4983c701       add r15, 1
0x000060ae      84d2           test dl, dl
0x000060b0      0f854affffff   jne 0x6000
0x000060b6      89f0           mov eax, esi
0x000060b8      83f001         xor eax, 1
0x000060bb      4421c0         and eax, r8d
0x000060be      4584d2         test r10b, r10b
0x000060c1      740e           je 0x60d1
0x000060c3      4d39fd         cmp r13, r15
0x000060c6      7605           jbe 0x60cd
0x000060c8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000060cd      4983c701       add r15, 1
0x000060d1      4883c501       add rbp, 1
0x000060d5      4839cd         cmp rbp, rcx
0x000060d8      0f837ef7ffff   jae 0x585c
0x000060de      84c0           test al, al
0x000060e0      0f84f8030000   je 0x64de
0x000060e6      4d39fd         cmp r13, r15
0x000060e9      7605           jbe 0x60f0
0x000060eb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000060f0      498d4701       lea rax, [r15 + 1]
0x000060f4      4939c5         cmp r13, rax
0x000060f7      7606           jbe 0x60ff
0x000060f9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000060ff      4983c702       add r15, 2
0x00006103      4531d2         xor r10d, r10d
0x00006106      4531c0         xor r8d, r8d
0x00006109      eb92           jmp 0x609d
0x0000610b      0f1f440000     nop dword [rax + rax]
0x00006110      4983ff01       cmp r15, 1
0x00006114      0f845ffeffff   je 0x5f79
0x0000611a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000611f      4a8d0c3f       lea rcx, [rdi + r15]
0x00006123      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00006128      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000612c      eb0f           jmp 0x613d
0x0000612e      6690           nop
0x00006130      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00006134      4939d0         cmp r8, rdx
0x00006137      0f843cfeffff   je 0x5f79
0x0000613d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00006140      83e95b         sub ecx, 0x5b
0x00006143      80f921         cmp cl, 0x21
0x00006146      77e8           ja 0x6130                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00006148      be01000000     mov esi, 1
0x0000614d      48d3e6         shl rsi, cl
0x00006150      4889f1         mov rcx, rsi
0x00006153      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000615d      4885f1         test rcx, rsi
0x00006160      74ce           je 0x6130
0x00006162      4c8b742440     mov r14, qword [rsp + 0x40]
0x00006167      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000616c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00006171      c74424080200.  mov dword [rsp + 8], 2
0x00006179      807c240d00     cmp byte [rsp + 0xd], 0
0x0000617e      7410           je 0x6190
0x00006180      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00006182      b804000000     mov eax, 4
0x00006187      0f44442408     cmove eax, dword [rsp + 8]
0x0000618c      89442408       mov dword [rsp + 8], eax
0x00006190      4883ec08       sub rsp, 8
0x00006194      4889e9         mov rcx, rbp
0x00006197      4c89ee         mov rsi, r13
0x0000619a      ff742468       push qword [rsp + 0x68]
0x0000619e      ff742478       push qword [rsp + 0x78]
0x000061a2      4c89f7         mov rdi, r14
0x000061a5      6a00           push 0
0x000061a7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000061af      448b442428     mov r8d, dword [rsp + 0x28]
0x000061b4      488b542430     mov rdx, qword [rsp + 0x30]
0x000061b9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x000061bd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x000061c2      4883c420       add rsp, 0x20
0x000061c6      4989c7         mov r15, rax
0x000061c9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x000061d1      6448331c2528.  xor rbx, qword fs:[0x28]
0x000061da      4c89f8         mov rax, r15
0x000061dd      0f8500060000   jne 0x67e3
0x000061e3      4881c4b80000.  add rsp, 0xb8
0x000061ea      5b             pop rbx
0x000061eb      5d             pop rbp
0x000061ec      415c           pop r12
0x000061ee      415d           pop r13
0x000061f0      415e           pop r14
0x000061f2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x000061f4      c3             ret
0x000061f5      0f1f00         nop dword [rax]
0x000061f8      4c89dd         mov rbp, r11
0x000061fb      e979ffffff     jmp 0x6179
0x00006200      4d39fd         cmp r13, r15
0x00006203      7605           jbe 0x620a
0x00006205      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000620a      498d4701       lea rax, [r15 + 1]
0x0000620e      4939c5         cmp r13, rax
0x00006211      7606           jbe 0x6219
0x00006213      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00006219      498d4702       lea rax, [r15 + 2]
0x0000621d      4939c5         cmp r13, rax
0x00006220      0f86ec050000   jbe 0x6812
0x00006226      4c89ea         mov rdx, r13
0x00006229      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000622f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00006234      e9d9fbffff     jmp 0x5e12
0x00006239      4489e0         mov eax, r12d
0x0000623c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00006241      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00006244      e900f6ffff     jmp 0x5849                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00006249      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000624f      e9c5f9ffff     jmp 0x5c19
0x00006254      85db           test ebx, ebx
0x00006256      0f8527f4ffff   jne 0x5683
0x0000625c      c644240d01     mov byte [rsp + 0xd], 1
0x00006261      4d85ed         test r13, r13
0x00006264      0f8590050000   jne 0x67fa
0x0000626a      488d05f44500.  lea rax, [0x0000a865]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006271      48c744245000.  mov qword [rsp + 0x50], 0
0x0000627a      c644240e01     mov byte [rsp + 0xe], 1
0x0000627f      c644247c00     mov byte [rsp + 0x7c], 0
0x00006284      4531e4         xor r12d, r12d
0x00006287      c644240f00     mov byte [rsp + 0xf], 0
0x0000628c      48c744241801.  mov qword [rsp + 0x18], 1
0x00006295      4889442448     mov qword [rsp + 0x48], rax
0x0000629a      41bf01000000   mov r15d, 1
0x000062a0      c74424080200.  mov dword [rsp + 8], 2
0x000062a8      e916f4ffff     jmp 0x56c3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x000062ad      0f1f00         nop dword [rax]
0x000062b0      85db           test ebx, ebx
0x000062b2      0f85f5030000   jne 0x66ad
0x000062b8      4d85ed         test r13, r13
0x000062bb      0f8425020000   je 0x64e6
0x000062c1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x000062c5      c644240e01     mov byte [rsp + 0xe], 1
0x000062ca      4531e4         xor r12d, r12d
0x000062cd      c644247c00     mov byte [rsp + 0x7c], 0
0x000062d2      48c744245000.  mov qword [rsp + 0x50], 0
0x000062db      488d05814500.  lea rax, str.l______l                   ; 0xa863 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000062e2      c644240f00     mov byte [rsp + 0xf], 0
0x000062e7      c644240d01     mov byte [rsp + 0xd], 1
0x000062ec      48c744241801.  mov qword [rsp + 0x18], 1
0x000062f5      41bf01000000   mov r15d, 1
0x000062fb      4889442448     mov qword [rsp + 0x48], rax
0x00006300      e9bef3ffff     jmp 0x56c3
0x00006305      488d05574500.  lea rax, str.l______l                   ; 0xa863 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000630c      c644240e01     mov byte [rsp + 0xe], 1
0x00006311      c644247c00     mov byte [rsp + 0x7c], 0
0x00006316      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00006319      48c744245000.  mov qword [rsp + 0x50], 0
0x00006322      c644240f01     mov byte [rsp + 0xf], 1
0x00006327      c644240d01     mov byte [rsp + 0xd], 1
0x0000632c      48c744241801.  mov qword [rsp + 0x18], 1
0x00006335      4531ff         xor r15d, r15d
0x00006338      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000633d      c74424080500.  mov dword [rsp + 8], 5
0x00006345      e979f3ffff     jmp 0x56c3
0x0000634a      c644240e01     mov byte [rsp + 0xe], 1
0x0000634f      c644247c00     mov byte [rsp + 0x7c], 0
0x00006354      4531e4         xor r12d, r12d
0x00006357      48c744245000.  mov qword [rsp + 0x50], 0
0x00006360      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00006365      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00006368      c644240d01     mov byte [rsp + 0xd], 1
0x0000636d      48c744241800.  mov qword [rsp + 0x18], 0
0x00006376      48c744244800.  mov qword [rsp + 0x48], 0
0x0000637f      e93ff3ffff     jmp 0x56c3
0x00006384      837c24080a     cmp dword [rsp + 8], 0xa
0x00006389      7456           je 0x63e1
0x0000638b      488d35d54400.  lea rsi, [0x0000a867]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00006392      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00006394      ba05000000     mov edx, 5
0x00006399      e8d2b9ffff     call sym.imp.dcgettext
0x0000639e      4889c1         mov rcx, rax
0x000063a1      4889442468     mov qword [rsp + 0x68], rax
0x000063a6      488d05ba4400.  lea rax, [0x0000a867]                   ; "`"
0x000063ad      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x000063b0      0f8498030000   je 0x674e
0x000063b6      488d35a84400.  lea rsi, [0x0000a865]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000063bd      31ff           xor edi, edi
0x000063bf      ba05000000     mov edx, 5
0x000063c4      e8a7b9ffff     call sym.imp.dcgettext
0x000063c9      4889c1         mov rcx, rax
0x000063cc      4889442460     mov qword [rsp + 0x60], rax
0x000063d1      488d058d4400.  lea rax, [0x0000a865]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000063d8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000063db      0f8483030000   je 0x6764
0x000063e1      4531ff         xor r15d, r15d
0x000063e4      85db           test ebx, ebx
0x000063e6      0f84c1010000   je 0x65ad
0x000063ec      85db           test ebx, ebx
0x000063ee      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000063f3      0f9544240f     setne byte [rsp + 0xf]
0x000063f8      4531e4         xor r12d, r12d
0x000063fb      4889df         mov rdi, rbx
0x000063fe      e88db9ffff     call sym.imp.strlen
0x00006403      48895c2448     mov qword [rsp + 0x48], rbx
0x00006408      4889442418     mov qword [rsp + 0x18], rax
0x0000640d      c644240e01     mov byte [rsp + 0xe], 1
0x00006412      c644247c00     mov byte [rsp + 0x7c], 0
0x00006417      48c744245000.  mov qword [rsp + 0x50], 0
0x00006420      c644240d01     mov byte [rsp + 0xd], 1
0x00006425      e999f2ffff     jmp 0x56c3
0x0000642a      c644240e01     mov byte [rsp + 0xe], 1
0x0000642f      c644247c00     mov byte [rsp + 0x7c], 0
0x00006434      4531e4         xor r12d, r12d
0x00006437      48c744245000.  mov qword [rsp + 0x50], 0
0x00006440      c644240f00     mov byte [rsp + 0xf], 0
0x00006445      4531ff         xor r15d, r15d
0x00006448      c644240d00     mov byte [rsp + 0xd], 0
0x0000644d      48c744241800.  mov qword [rsp + 0x18], 0
0x00006456      48c744244800.  mov qword [rsp + 0x48], 0
0x0000645f      e95ff2ffff     jmp 0x56c3
0x00006464      c644240e01     mov byte [rsp + 0xe], 1
0x00006469      c644247c00     mov byte [rsp + 0x7c], 0
0x0000646e      4531e4         xor r12d, r12d
0x00006471      48c744245000.  mov qword [rsp + 0x50], 0
0x0000647a      c644240f01     mov byte [rsp + 0xf], 1
0x0000647f      c644240d01     mov byte [rsp + 0xd], 1
0x00006484      e91af2ffff     jmp 0x56a3
0x00006489      4d39fd         cmp r13, r15
0x0000648c      7605           jbe 0x6493
0x0000648e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00006493      488d4102       lea rax, [rcx + 2]
0x00006497      4939c5         cmp r13, rax
0x0000649a      7606           jbe 0x64a2
0x0000649c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x000064a2      4489e0         mov eax, r12d
0x000064a5      4c8d7903       lea r15, [rcx + 3]
0x000064a9      4531e4         xor r12d, r12d
0x000064ac      bb30000000     mov ebx, 0x30                           ; '0'
0x000064b1      e962f3ffff     jmp 0x5818
0x000064b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000064c0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000064c5      4c89dd         mov rbp, r11
0x000064c8      885c240d       mov byte [rsp + 0xd], bl
0x000064cc      e9a8fcffff     jmp 0x6179
0x000064d1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000064d6      4531e4         xor r12d, r12d
0x000064d9      e902fbffff     jmp 0x5fe0
0x000064de      4531d2         xor r10d, r10d
0x000064e1      e9b7fbffff     jmp 0x609d
0x000064e6      48c744245000.  mov qword [rsp + 0x50], 0
0x000064ef      c644240e01     mov byte [rsp + 0xe], 1
0x000064f4      4531e4         xor r12d, r12d
0x000064f7      c644247c00     mov byte [rsp + 0x7c], 0
0x000064fc      e9dafdffff     jmp 0x62db
0x00006501      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00006506      4c89f6         mov rsi, r14
0x00006509      4c89e9         mov rcx, r13
0x0000650c      4889d8         mov rax, rbx
0x0000650f      4889df         mov rdi, rbx
0x00006512      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00006518      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000651d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00006525      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00006528      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000652e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00006536      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000653b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00006540      7326           jae 0x6568
0x00006542      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00006545      7510           jne 0x6557
0x00006547      eb1f           jmp 0x6568
0x00006549      0f1f80000000.  nop dword [rax]
0x00006550      41803c0100     cmp byte [r9 + rax], 0
0x00006555      740e           je 0x6565
0x00006557      4883c001       add rax, 1
0x0000655b      488d540500     lea rdx, [rbp + rax]
0x00006560      4939d3         cmp r11, rdx
0x00006563      77eb           ja 0x6550
0x00006565      4889c7         mov rdi, rax
0x00006568      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000656d      4531e4         xor r12d, r12d
0x00006570      e961faffff     jmp 0x5fd6
0x00006575      4889df         mov rdi, rbx
0x00006578      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000657e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00006583      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00006589      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00006591      4531e4         xor r12d, r12d
0x00006594      4c8b742440     mov r14, qword [rsp + 0x40]
0x00006599      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000659e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000065a3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000065a8      e929faffff     jmp 0x5fd6
0x000065ad      488b542468     mov rdx, qword [rsp + 0x68]
0x000065b2      0fb602         movzx eax, byte [rdx]
0x000065b5      84c0           test al, al
0x000065b7      0f842ffeffff   je 0x63ec
0x000065bd      0f1f00         nop dword [rax]
0x000065c0      4d39fd         cmp r13, r15
0x000065c3      7604           jbe 0x65c9
0x000065c5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000065c9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000065cd      420fb6043a     movzx eax, byte [rdx + r15]
0x000065d2      84c0           test al, al
0x000065d4      75ea           jne 0x65c0
0x000065d6      e911feffff     jmp 0x63ec
0x000065db      89d0           mov eax, edx
0x000065dd      e955f5ffff     jmp 0x5b37
0x000065e2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000065e6      80fb3e         cmp bl, 0x3e
0x000065e9      0f8771f8ffff   ja 0x5e60
0x000065ef      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000065f9      480fa3d8       bt rax, rbx
0x000065fd      0f835df8ffff   jae 0x5e60
0x00006603      807c240f00     cmp byte [rsp + 0xf], 0
0x00006608      0f85e4010000   jne 0x67f2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000660e      4d39fd         cmp r13, r15
0x00006611      7605           jbe 0x6618
0x00006613      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00006618      498d4701       lea rax, [r15 + 1]
0x0000661c      4939c5         cmp r13, rax
0x0000661f      7606           jbe 0x6627
0x00006621      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00006627      498d4702       lea rax, [r15 + 2]
0x0000662b      4939c5         cmp r13, rax
0x0000662e      7606           jbe 0x6636
0x00006630      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00006636      498d4703       lea rax, [r15 + 3]
0x0000663a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000663d      7606           jbe 0x6645
0x0000663f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00006645      4983c704       add r15, 4
0x00006649      31d2           xor edx, edx
0x0000664b      4531e4         xor r12d, r12d
0x0000664e      31c0           xor eax, eax
0x00006650      4889cd         mov rbp, rcx
0x00006653      e9c0f1ffff     jmp 0x5818
0x00006658      85db           test ebx, ebx
0x0000665a      0f8488010000   je 0x67e8
0x00006660      488d05fe4100.  lea rax, [0x0000a865]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006667      c644240e01     mov byte [rsp + 0xe], 1
0x0000666c      c644247c00     mov byte [rsp + 0x7c], 0
0x00006671      4531e4         xor r12d, r12d
0x00006674      48c744245000.  mov qword [rsp + 0x50], 0
0x0000667d      c644240f01     mov byte [rsp + 0xf], 1
0x00006682      c644240d00     mov byte [rsp + 0xd], 0
0x00006687      48c744241801.  mov qword [rsp + 0x18], 1
0x00006690      4531ff         xor r15d, r15d
0x00006693      4889442448     mov qword [rsp + 0x48], rax
0x00006698      e926f0ffff     jmp 0x56c3
0x0000669d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x000066a0      4c89dd         mov rbp, r11
0x000066a3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000066a8      e9ccfaffff     jmp 0x6179
0x000066ad      488d05af4100.  lea rax, str.l______l                   ; 0xa863 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000066b4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x000066b9      c644247c00     mov byte [rsp + 0x7c], 0
0x000066be      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x000066c1      48c744245000.  mov qword [rsp + 0x50], 0
0x000066ca      c644240f01     mov byte [rsp + 0xf], 1
0x000066cf      c644240d01     mov byte [rsp + 0xd], 1
0x000066d4      48c744241801.  mov qword [rsp + 0x18], 1
0x000066dd      4531ff         xor r15d, r15d
0x000066e0      4889442448     mov qword [rsp + 0x48], rax
0x000066e5      e9d9efffff     jmp 0x56c3
0x000066ea      89d0           mov eax, edx
0x000066ec      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000066f1      4885db         test rbx, rbx
0x000066f4      742c           je 0x6722
0x000066f6      84c0           test al, al
0x000066f8      7428           je 0x6722
0x000066fa      0fb60b         movzx ecx, byte [rbx]
0x000066fd      4889d8         mov rax, rbx
0x00006700      84c9           test cl, cl
0x00006702      741e           je 0x6722
0x00006704      4c89fa         mov rdx, r15
0x00006707      4c29f8         sub rax, r15
0x0000670a      4939d5         cmp r13, rdx
0x0000670d      7604           jbe 0x6713
0x0000670f      41880c16       mov byte [r14 + rdx], cl
0x00006713      4883c201       add rdx, 1
0x00006717      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000671b      84c9           test cl, cl
0x0000671d      75eb           jne 0x670a
0x0000671f      4989d7         mov r15, rdx
0x00006722      4d39fd         cmp r13, r15
0x00006725      0f869efaffff   jbe 0x61c9
0x0000672b      43c6043e00     mov byte [r14 + r15], 0
0x00006730      e994faffff     jmp 0x61c9
0x00006735      837c240802     cmp dword [rsp + 8], 2
0x0000673a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000673f      4c89dd         mov rbp, r11
0x00006742      0f94c0         sete al
0x00006745      885c240d       mov byte [rsp + 0xd], bl
0x00006749      e92bfaffff     jmp 0x6179
0x0000674e      8b742408       mov esi, dword [rsp + 8]
0x00006752      4889cf         mov rdi, rcx
0x00006755      e8a6edffff     call sym.gettext_quote.part.1
0x0000675a      4889442468     mov qword [rsp + 0x68], rax
0x0000675f      e952fcffff     jmp 0x63b6
0x00006764      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00006768      4889cf         mov rdi, rcx
0x0000676b      e890edffff     call sym.gettext_quote.part.1
0x00006770      4889442460     mov qword [rsp + 0x60], rax
0x00006775      e967fcffff     jmp 0x63e1
0x0000677a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000677f      4c89dd         mov rbp, r11
0x00006782      89d0           mov eax, edx
0x00006784      885c240d       mov byte [rsp + 0xd], bl
0x00006788      e9ecf9ffff     jmp 0x6179
0x0000678d      4883ec08       sub rsp, 8
0x00006791      41b805000000   mov r8d, 5
0x00006797      4c89d9         mov rcx, r11
0x0000679a      ff742468       push qword [rsp + 0x68]
0x0000679e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x000067a2      4c89f7         mov rdi, r14
0x000067a5      ff742438       push qword [rsp + 0x38]
0x000067a9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000067b1      488b542430     mov rdx, qword [rsp + 0x30]
0x000067b6      488b742470     mov rsi, qword [rsp + 0x70]
0x000067bb      e830eeffff     call sym.quotearg_buffer_restyled
0x000067c0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x000067c4      4989c7         mov r15, rax
0x000067c7      e9fdf9ffff     jmp 0x61c9
0x000067cc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000067d1      e916ffffff     jmp 0x66ec
0x000067d6      c74424080200.  mov dword [rsp + 8], 2
0x000067de      e996f9ffff     jmp 0x6179
0x000067e3      e8b8b5ffff     call sym.imp.__stack_chk_fail
0x000067e8      c644240d00     mov byte [rsp + 0xd], 0
0x000067ed      e96ffaffff     jmp 0x6261
0x000067f2      4c89dd         mov rbp, r11
0x000067f5      e996f9ffff     jmp 0x6190
0x000067fa      c644240e01     mov byte [rsp + 0xe], 1
0x000067ff      31c0           xor eax, eax
0x00006801      4531e4         xor r12d, r12d
0x00006804      48c744245000.  mov qword [rsp + 0x50], 0
0x0000680d      e9a2f5ffff     jmp 0x5db4
0x00006812      4c89ea         mov rdx, r13
0x00006815      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000681a      e9f3f5ffff     jmp 0x5e12
0x0000681f      e83cb4ffff     call sym.imp.abort
0x00006824      6690           nop
0x00006826      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00006830      4157           push r15
0x00006832      4156           push r14
0x00006834      4c63ff         movsxd r15, edi
0x00006837      4155           push r13
0x00006839      4154           push r12
0x0000683b      4989d6         mov r14, rdx
0x0000683e      55             push rbp
0x0000683f      53             push rbx
0x00006840      4889cd         mov rbp, rcx
0x00006843      4883ec28       sub rsp, 0x28
0x00006847      4889742408     mov qword [rsp + 8], rsi
0x0000684c      e81fb4ffff     call sym.imp.__errno_location
0x00006851      4989c5         mov r13, rax
0x00006854      8b00           mov eax, dword [rax]
0x00006856      4585ff         test r15d, r15d
0x00006859      488b1d207820.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20e080:8]=0x20e090 obj.slotvec0
0x00006860      89442418       mov dword [rsp + 0x18], eax
0x00006864      0f8867010000   js 0x69d1
0x0000686a      44393d077820.  cmp dword [obj.nslots], r15d            ; [0x20e078:4]=1
0x00006871      7f62           jg 0x68d5
0x00006873      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000687a      0f8456010000   je 0x69d6
0x00006880      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00006884      488d05057820.  lea rax, obj.slotvec0                   ; 0x20e090
0x0000688b      4963f4         movsxd rsi, r12d
0x0000688e      48c1e604       shl rsi, 4
0x00006892      4839c3         cmp rbx, rax
0x00006895      0f8415010000   je 0x69b0
0x0000689b      4889df         mov rdi, rbx
0x0000689e      e8ad1e0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x000068a3      4889c3         mov rbx, rax
0x000068a6      488905d37720.  mov qword [obj.slotvec], rax            ; [0x20e080:8]=0x20e090 obj.slotvec0
0x000068ad      48633dc47720.  movsxd rdi, dword [obj.nslots]          ; [0x20e078:4]=1
0x000068b4      4489e2         mov edx, r12d
0x000068b7      31f6           xor esi, esi
0x000068b9      29fa           sub edx, edi
0x000068bb      48c1e704       shl rdi, 4
0x000068bf      4863d2         movsxd rdx, edx
0x000068c2      4801df         add rdi, rbx
0x000068c5      48c1e204       shl rdx, 4
0x000068c9      e8a2b5ffff     call sym.imp.memset
0x000068ce      448925a37720.  mov dword [obj.nslots], r12d            ; [0x20e078:4]=1
0x000068d5      8b4504         mov eax, dword [rbp + 4]
0x000068d8      49c1e704       shl r15, 4
0x000068dc      4883ec08       sub rsp, 8
0x000068e0      4c01fb         add rbx, r15
0x000068e3      4c8d7d08       lea r15, [rbp + 8]
0x000068e7      448b4500       mov r8d, dword [rbp]
0x000068eb      4c8b1b         mov r11, qword [rbx]
0x000068ee      4c8b6308       mov r12, qword [rbx + 8]
0x000068f2      4c89f1         mov rcx, r14
0x000068f5      83c801         or eax, 1
0x000068f8      89442424       mov dword [rsp + 0x24], eax
0x000068fc      ff7530         push qword [rbp + 0x30]
0x000068ff      4189c1         mov r9d, eax
0x00006902      ff7528         push qword [rbp + 0x28]
0x00006905      4157           push r15
0x00006907      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000690a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000690f      4c89e7         mov rdi, r12
0x00006912      4c895c2430     mov qword [rsp + 0x30], r11
0x00006917      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000691c      4883c420       add rsp, 0x20
0x00006920      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00006925      4939c3         cmp r11, rax
0x00006928      7767           ja 0x6991
0x0000692a      488d7001       lea rsi, [rax + 1]
0x0000692e      488d05eb7720.  lea rax, obj.slot0                      ; 0x20e120
0x00006935      4939c4         cmp r12, rax
0x00006938      488933         mov qword [rbx], rsi
0x0000693b      7412           je 0x694f
0x0000693d      4c89e7         mov rdi, r12
0x00006940      4889742410     mov qword [rsp + 0x10], rsi
0x00006945      e806b3ffff     call sym.imp.free
0x0000694a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000694f      4889f7         mov rdi, rsi
0x00006952      4889742410     mov qword [rsp + 0x10], rsi
0x00006957      e8941d0000     call sym.xmalloc
0x0000695c      4883ec08       sub rsp, 8
0x00006960      48894308       mov qword [rbx + 8], rax
0x00006964      448b4500       mov r8d, dword [rbp]
0x00006968      ff7530         push qword [rbp + 0x30]
0x0000696b      ff7528         push qword [rbp + 0x28]
0x0000696e      4c89f1         mov rcx, r14
0x00006971      4157           push r15
0x00006973      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00006978      4889c7         mov rdi, rax
0x0000697b      488b542428     mov rdx, qword [rsp + 0x28]
0x00006980      488b742430     mov rsi, qword [rsp + 0x30]
0x00006985      4989c4         mov r12, rax
0x00006988      e863ecffff     call sym.quotearg_buffer_restyled
0x0000698d      4883c420       add rsp, 0x20
0x00006991      8b442418       mov eax, dword [rsp + 0x18]
0x00006995      41894500       mov dword [r13], eax
0x00006999      4883c428       add rsp, 0x28
0x0000699d      4c89e0         mov rax, r12
0x000069a0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x000069a1      5d             pop rbp
0x000069a2      415c           pop r12
0x000069a4      415d           pop r13
0x000069a6      415e           pop r14
0x000069a8      415f           pop r15
0x000069aa      c3             ret
0x000069ab      0f1f440000     nop dword [rax + rax]
0x000069b0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x000069b2      e8991d0000     call sym.xrealloc
0x000069b7      660f6f05d176.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x000069bf      4889c3         mov rbx, rax
0x000069c2      488905b77620.  mov qword [obj.slotvec], rax            ; [0x20e080:8]=0x20e090 obj.slotvec0
0x000069c9      0f1100         movups xmmword [rax], xmm0
0x000069cc      e9dcfeffff     jmp 0x68ad
0x000069d1      e88ab2ffff     call sym.imp.abort
0x000069d6      e8651f0000     call sym.xalloc_die
0x000069db      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x000069e0      4154           push r12
0x000069e2      55             push rbp
0x000069e3      53             push rbx
0x000069e4      4889fb         mov rbx, rdi
0x000069e7      e884b2ffff     call sym.imp.__errno_location
0x000069ec      448b20         mov r12d, dword [rax]
0x000069ef      4889c5         mov rbp, rax
0x000069f2      488d05277820.  lea rax, obj.default_quoting_options    ; 0x20e220
0x000069f9      4885db         test rbx, rbx
0x000069fc      be38000000     mov esi, 0x38                           ; '8'
0x00006a01      480f44d8       cmove rbx, rax
0x00006a05      4889df         mov rdi, rbx
0x00006a08      e8e31e0000     call sym.xmemdup
0x00006a0d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00006a11      5b             pop rbx
0x00006a12      5d             pop rbp
0x00006a13      415c           pop r12
0x00006a15      c3             ret
0x00006a16      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00006a20      488d05f97720.  lea rax, obj.default_quoting_options    ; 0x20e220
0x00006a27      4885ff         test rdi, rdi
0x00006a2a      480f44f8       cmove rdi, rax
0x00006a2e      8b07           mov eax, dword [rdi]
0x00006a30      c3             ret
0x00006a31      0f1f440000     nop dword [rax + rax]
0x00006a36      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00006a40      488d05d97720.  lea rax, obj.default_quoting_options    ; 0x20e220
0x00006a47      4885ff         test rdi, rdi
0x00006a4a      480f44f8       cmove rdi, rax
0x00006a4e      8937           mov dword [rdi], esi
0x00006a50      c3             ret
0x00006a51      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00006a56      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00006a60      488d05b97720.  lea rax, obj.default_quoting_options    ; 0x20e220
0x00006a67      4885ff         test rdi, rdi
0x00006a6a      89f1           mov ecx, esi
0x00006a6c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00006a70      89f0           mov eax, esi
0x00006a72      83e11f         and ecx, 0x1f
0x00006a75      c0e805         shr al, 5
0x00006a78      0fb6c0         movzx eax, al
0x00006a7b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00006a80      8b37           mov esi, dword [rdi]
0x00006a82      89f0           mov eax, esi
0x00006a84      d3e8           shr eax, cl
0x00006a86      31c2           xor edx, eax
0x00006a88      83e001         and eax, 1
0x00006a8b      83e201         and edx, 1
0x00006a8e      d3e2           shl edx, cl
0x00006a90      31f2           xor edx, esi
0x00006a92      8917           mov dword [rdi], edx
0x00006a94      c3             ret
0x00006a95      90             nop
0x00006a96      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00006aa0      488d05797720.  lea rax, obj.default_quoting_options    ; 0x20e220
0x00006aa7      4885ff         test rdi, rdi
0x00006aaa      480f44f8       cmove rdi, rax
0x00006aae      8b4704         mov eax, dword [rdi + 4]
0x00006ab1      897704         mov dword [rdi + 4], esi
0x00006ab4      c3             ret
0x00006ab5      90             nop
0x00006ab6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00006ac0      488d05597720.  lea rax, obj.default_quoting_options    ; 0x20e220
0x00006ac7      4885ff         test rdi, rdi
0x00006aca      480f44f8       cmove rdi, rax
0x00006ace      4885f6         test rsi, rsi
0x00006ad1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00006ad7      740e           je 0x6ae7
0x00006ad9      4885d2         test rdx, rdx
0x00006adc      7409           je 0x6ae7
0x00006ade      48897728       mov qword [rdi + 0x28], rsi
0x00006ae2      48895730       mov qword [rdi + 0x30], rdx
0x00006ae6      c3             ret
0x00006ae7      4883ec08       sub rsp, 8
0x00006aeb      e870b1ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00006af0      4157           push r15
0x00006af2      4156           push r14
0x00006af4      488d05257720.  lea rax, obj.default_quoting_options    ; 0x20e220
0x00006afb      4155           push r13
0x00006afd      4154           push r12
0x00006aff      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00006b02      55             push rbp
0x00006b03      53             push rbx
0x00006b04      4c89c3         mov rbx, r8
0x00006b07      4989f6         mov r14, rsi
0x00006b0a      4989d7         mov r15, rdx
0x00006b0d      4883ec18       sub rsp, 0x18
0x00006b11      4d85c0         test r8, r8
0x00006b14      480f44d8       cmove rbx, rax
0x00006b18      48894c2408     mov qword [rsp + 8], rcx
0x00006b1d      e84eb1ffff     call sym.imp.__errno_location
0x00006b22      448b20         mov r12d, dword [rax]
0x00006b25      4889c5         mov rbp, rax
0x00006b28      488d4308       lea rax, [rbx + 8]
0x00006b2c      4883ec08       sub rsp, 8
0x00006b30      448b4b04       mov r9d, dword [rbx + 4]
0x00006b34      ff7330         push qword [rbx + 0x30]
0x00006b37      448b03         mov r8d, dword [rbx]
0x00006b3a      ff7328         push qword [rbx + 0x28]
0x00006b3d      4c89fa         mov rdx, r15
0x00006b40      50             push rax
0x00006b41      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00006b46      4c89f6         mov rsi, r14
0x00006b49      4c89ef         mov rdi, r13
0x00006b4c      e89feaffff     call sym.quotearg_buffer_restyled
0x00006b51      44896500       mov dword [rbp], r12d
0x00006b55      4883c438       add rsp, 0x38
0x00006b59      5b             pop rbx
0x00006b5a      5d             pop rbp
0x00006b5b      415c           pop r12
0x00006b5d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00006b5f      415e           pop r14
0x00006b61      415f           pop r15
0x00006b63      c3             ret
0x00006b64      6690           nop
0x00006b66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00006b70      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00006b72      4156           push r14
0x00006b74      488d05a57620.  lea rax, obj.default_quoting_options    ; 0x20e220
0x00006b7b      4155           push r13
0x00006b7d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00006b7f      4989d4         mov r12, rdx
0x00006b82      55             push rbp
0x00006b83      53             push rbx
0x00006b84      4889cb         mov rbx, rcx
0x00006b87      4989fe         mov r14, rdi
0x00006b8a      4989f7         mov r15, rsi
0x00006b8d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00006b91      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00006b94      480f44d8       cmove rbx, rax
0x00006b98      31ed           xor ebp, ebp
0x00006b9a      e8d1b0ffff     call sym.imp.__errno_location
0x00006b9f      4d85e4         test r12, r12
0x00006ba2      4989c5         mov r13, rax
0x00006ba5      8b00           mov eax, dword [rax]
0x00006ba7      400f94c5       sete bpl
0x00006bab      0b6b04         or ebp, dword [rbx + 4]
0x00006bae      4c8d5308       lea r10, [rbx + 8]
0x00006bb2      4883ec08       sub rsp, 8
0x00006bb6      448b03         mov r8d, dword [rbx]
0x00006bb9      4c89f9         mov rcx, r15
0x00006bbc      89442414       mov dword [rsp + 0x14], eax
0x00006bc0      ff7330         push qword [rbx + 0x30]
0x00006bc3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00006bc6      ff7328         push qword [rbx + 0x28]
0x00006bc9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00006bcb      31f6           xor esi, esi
0x00006bcd      4189e9         mov r9d, ebp
0x00006bd0      31ff           xor edi, edi
0x00006bd2      4c89542440     mov qword [rsp + 0x40], r10
0x00006bd7      e814eaffff     call sym.quotearg_buffer_restyled
0x00006bdc      488d7001       lea rsi, [rax + 1]
0x00006be0      4889442448     mov qword [rsp + 0x48], rax
0x00006be5      4883c420       add rsp, 0x20
0x00006be9      4889f7         mov rdi, rsi
0x00006bec      4889742418     mov qword [rsp + 0x18], rsi
0x00006bf1      e8fa1a0000     call sym.xmalloc
0x00006bf6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00006bfb      4883ec08       sub rsp, 8
0x00006bff      ff7330         push qword [rbx + 0x30]
0x00006c02      ff7328         push qword [rbx + 0x28]
0x00006c05      4c8b542438     mov r10, qword [rsp + 0x38]
0x00006c0a      4189e9         mov r9d, ebp
0x00006c0d      448b03         mov r8d, dword [rbx]
0x00006c10      4c89f9         mov rcx, r15
0x00006c13      4c89f2         mov rdx, r14
0x00006c16      4889c7         mov rdi, rax
0x00006c19      4152           push r10
0x00006c1b      488b742438     mov rsi, qword [rsp + 0x38]
0x00006c20      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00006c25      8b44242c       mov eax, dword [rsp + 0x2c]
0x00006c29      4883c420       add rsp, 0x20
0x00006c2d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00006c30      41894500       mov dword [r13], eax
0x00006c34      7409           je 0x6c3f
0x00006c36      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00006c3b      4d891c24       mov qword [r12], r11
0x00006c3f      488b442410     mov rax, qword [rsp + 0x10]
0x00006c44      4883c438       add rsp, 0x38
0x00006c48      5b             pop rbx
0x00006c49      5d             pop rbp
0x00006c4a      415c           pop r12
0x00006c4c      415d           pop r13
0x00006c4e      415e           pop r14
0x00006c50      415f           pop r15
0x00006c52      c3             ret
0x00006c53      0f1f00         nop dword [rax]
0x00006c56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00006c60      4889d1         mov rcx, rdx
0x00006c63      31d2           xor edx, edx
0x00006c65      e906ffffff     jmp sym.quotearg_alloc_mem
0x00006c6a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00006c70      8b0502742000   mov eax, dword [obj.nslots]             ; [0x20e078:4]=1
0x00006c76      4154           push r12
0x00006c78      4c8b25017420.  mov r12, qword [obj.slotvec]            ; [0x20e080:8]=0x20e090 obj.slotvec0
0x00006c7f      55             push rbp
0x00006c80      53             push rbx
0x00006c81      83f801         cmp eax, 1
0x00006c84      7e2b           jle 0x6cb1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00006c86      83e802         sub eax, 2
0x00006c89      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00006c8e      48c1e004       shl rax, 4
0x00006c92      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00006c97      660f1f840000.  nop word [rax + rax]
0x00006ca0      488b3b         mov rdi, qword [rbx]
0x00006ca3      4883c310       add rbx, 0x10
0x00006ca7      e8a4afffff     call sym.imp.free
0x00006cac      4839eb         cmp rbx, rbp
0x00006caf      75ef           jne 0x6ca0
0x00006cb1      498b7c2408     mov rdi, qword [r12 + 8]
0x00006cb6      488d1d637420.  lea rbx, obj.slot0                      ; 0x20e120
0x00006cbd      4839df         cmp rdi, rbx
0x00006cc0      7417           je 0x6cd9
0x00006cc2      e889afffff     call sym.imp.free
0x00006cc7      48c705be7320.  mov qword [obj.slotvec0], 0x100         ; [0x20e090:8]=256
0x00006cd2      48891dbf7320.  mov qword [0x0020e098], rbx             ; [0x20e098:8]=0x20e120 obj.slot0
0x00006cd9      488d1db07320.  lea rbx, obj.slotvec0                   ; 0x20e090
0x00006ce0      4939dc         cmp r12, rbx
0x00006ce3      740f           je 0x6cf4
0x00006ce5      4c89e7         mov rdi, r12
0x00006ce8      e863afffff     call sym.imp.free
0x00006ced      48891d8c7320.  mov qword [obj.slotvec], rbx            ; [0x20e080:8]=0x20e090 obj.slotvec0
0x00006cf4      5b             pop rbx
0x00006cf5      c70579732000.  mov dword [obj.nslots], 1               ; [0x20e078:4]=1
0x00006cff      5d             pop rbp
0x00006d00      415c           pop r12
0x00006d02      c3             ret
0x00006d03      0f1f00         nop dword [rax]
0x00006d06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00006d10      488d0d097520.  lea rcx, obj.default_quoting_options    ; 0x20e220
0x00006d17      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00006d1e      e90dfbffff     jmp sym.quotearg_n_options
0x00006d23      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00006d26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00006d30      488d0de97420.  lea rcx, obj.default_quoting_options    ; 0x20e220
0x00006d37      e9f4faffff     jmp sym.quotearg_n_options
0x00006d3c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00006d40      488d0dd97420.  lea rcx, obj.default_quoting_options    ; 0x20e220
0x00006d47      4889fe         mov rsi, rdi
0x00006d4a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00006d51      31ff           xor edi, edi
0x00006d53      e9d8faffff     jmp sym.quotearg_n_options
0x00006d58      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00006d60      488d0db97420.  lea rcx, obj.default_quoting_options    ; 0x20e220
0x00006d67      4889f2         mov rdx, rsi
0x00006d6a      4889fe         mov rsi, rdi
0x00006d6d      31ff           xor edi, edi
0x00006d6f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00006d74      6690           nop
0x00006d76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00006d80      4883ec48       sub rsp, 0x48
0x00006d84      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00006d87      64488b142528.  mov rdx, qword fs:[0x28]
0x00006d90      4889542438     mov qword [rsp + 0x38], rdx
0x00006d95      31d2           xor edx, edx
0x00006d97      83fe0a         cmp esi, 0xa
0x00006d9a      7468           je 0x6e04
0x00006d9c      893424         mov dword [rsp], esi
0x00006d9f      4889e1         mov rcx, rsp
0x00006da2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00006da9      4889c6         mov rsi, rax
0x00006dac      48c744240400.  mov qword [rsp + 4], 0
0x00006db5      48c744240c00.  mov qword [rsp + 0xc], 0
0x00006dbe      48c744241400.  mov qword [rsp + 0x14], 0
0x00006dc7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00006dd0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00006dd9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00006de2      c74424340000.  mov dword [rsp + 0x34], 0
0x00006dea      e841faffff     call sym.quotearg_n_options
0x00006def      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00006df4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00006dfd      750a           jne 0x6e09                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00006dff      4883c448       add rsp, 0x48
0x00006e03      c3             ret
0x00006e04      e857aeffff     call sym.imp.abort
0x00006e09      e892afffff     call sym.imp.__stack_chk_fail
0x00006e0e      6690           nop
;-- quotearg_n_style_mem:
0x00006e10      4883ec48       sub rsp, 0x48
0x00006e14      4889d0         mov rax, rdx
0x00006e17      4889ca         mov rdx, rcx
0x00006e1a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00006e23      48894c2438     mov qword [rsp + 0x38], rcx
0x00006e28      31c9           xor ecx, ecx
0x00006e2a      83fe0a         cmp esi, 0xa
0x00006e2d      7461           je 0x6e90
0x00006e2f      893424         mov dword [rsp], esi
0x00006e32      4889e1         mov rcx, rsp
0x00006e35      4889c6         mov rsi, rax
0x00006e38      48c744240400.  mov qword [rsp + 4], 0
0x00006e41      48c744240c00.  mov qword [rsp + 0xc], 0
0x00006e4a      48c744241400.  mov qword [rsp + 0x14], 0
0x00006e53      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00006e5c      48c744242400.  mov qword [rsp + 0x24], 0
0x00006e65      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00006e6e      c74424340000.  mov dword [rsp + 0x34], 0
0x00006e76      e8b5f9ffff     call sym.quotearg_n_options
0x00006e7b      488b542438     mov rdx, qword [rsp + 0x38]
0x00006e80      644833142528.  xor rdx, qword fs:[0x28]
0x00006e89      750a           jne 0x6e95
0x00006e8b      4883c448       add rsp, 0x48
0x00006e8f      c3             ret
0x00006e90      e8cbadffff     call sym.imp.abort
0x00006e95      e806afffff     call sym.imp.__stack_chk_fail
0x00006e9a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00006ea0      4889f2         mov rdx, rsi
0x00006ea3      89fe           mov esi, edi
0x00006ea5      31ff           xor edi, edi
0x00006ea7      e9d4feffff     jmp sym.quotearg_n_style
0x00006eac      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00006eb0      4889d1         mov rcx, rdx
0x00006eb3      4889f2         mov rdx, rsi
0x00006eb6      89fe           mov esi, edi
0x00006eb8      31ff           xor edi, edi
0x00006eba      e951ffffff     jmp sym.quotearg_n_style_mem
0x00006ebf      90             nop
;-- quotearg_char_mem:
0x00006ec0      4883ec48       sub rsp, 0x48
0x00006ec4      89d1           mov ecx, edx
0x00006ec6      64488b042528.  mov rax, qword fs:[0x28]
0x00006ecf      4889442438     mov qword [rsp + 0x38], rax
0x00006ed4      31c0           xor eax, eax
0x00006ed6      488b05737320.  mov rax, qword [0x0020e250]             ; [0x20e250:8]=0
0x00006edd      4989e0         mov r8, rsp
0x00006ee0      83e11f         and ecx, 0x1f
0x00006ee3      660f6f053573.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00006eeb      4889442430     mov qword [rsp + 0x30], rax
0x00006ef0      89d0           mov eax, edx
0x00006ef2      0f290424       movaps xmmword [rsp], xmm0
0x00006ef6      c0e805         shr al, 5
0x00006ef9      0fb6c0         movzx eax, al
0x00006efc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00006f01      660f6f052773.  movdqa xmm0, xmmword [0x0020e230]
0x00006f09      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00006f0e      660f6f052a73.  movdqa xmm0, xmmword [0x0020e240]
0x00006f16      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00006f1b      418b11         mov edx, dword [r9]
0x00006f1e      89d0           mov eax, edx
0x00006f20      d3e8           shr eax, cl
0x00006f22      f7d0           not eax
0x00006f24      83e001         and eax, 1
0x00006f27      d3e0           shl eax, cl
0x00006f29      4c89c1         mov rcx, r8
0x00006f2c      31d0           xor eax, edx
0x00006f2e      4889f2         mov rdx, rsi
0x00006f31      4889fe         mov rsi, rdi
0x00006f34      418901         mov dword [r9], eax
0x00006f37      31ff           xor edi, edi
0x00006f39      e8f2f8ffff     call sym.quotearg_n_options
0x00006f3e      488b742438     mov rsi, qword [rsp + 0x38]
0x00006f43      644833342528.  xor rsi, qword fs:[0x28]
0x00006f4c      7505           jne 0x6f53
0x00006f4e      4883c448       add rsp, 0x48
0x00006f52      c3             ret
0x00006f53      e848aeffff     call sym.imp.__stack_chk_fail
0x00006f58      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00006f60      400fbed6       movsx edx, sil
0x00006f64      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00006f6b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00006f70      ba3a000000     mov edx, 0x3a                           ; ':'
0x00006f75      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00006f7c      e93fffffff     jmp sym.quotearg_char_mem
0x00006f81      0f1f440000     nop dword [rax + rax]
0x00006f86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00006f90      ba3a000000     mov edx, 0x3a                           ; ':'
0x00006f95      e926ffffff     jmp sym.quotearg_char_mem
0x00006f9a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00006fa0      4883ec48       sub rsp, 0x48
0x00006fa4      4889d0         mov rax, rdx
0x00006fa7      64488b142528.  mov rdx, qword fs:[0x28]
0x00006fb0      4889542438     mov qword [rsp + 0x38], rdx
0x00006fb5      31d2           xor edx, edx
0x00006fb7      83fe0a         cmp esi, 0xa
0x00006fba      7468           je 0x7024
0x00006fbc      893424         mov dword [rsp], esi
0x00006fbf      4889e1         mov rcx, rsp
0x00006fc2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00006fc9      4889c6         mov rsi, rax
0x00006fcc      48c744240400.  mov qword [rsp + 4], 0
0x00006fd5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00006fde      48c744241400.  mov qword [rsp + 0x14], 0
0x00006fe7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00006ff0      48c744242400.  mov qword [rsp + 0x24], 0
0x00006ff9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00007002      c74424340000.  mov dword [rsp + 0x34], 0
0x0000700a      e821f8ffff     call sym.quotearg_n_options
0x0000700f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00007014      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000701d      750a           jne 0x7029
0x0000701f      4883c448       add rsp, 0x48
0x00007023      c3             ret
0x00007024      e837acffff     call sym.imp.abort
0x00007029      e872adffff     call sym.imp.__stack_chk_fail
0x0000702e      6690           nop
;-- quotearg_n_custom_mem:
0x00007030      4883ec48       sub rsp, 0x48
0x00007034      4989c9         mov r9, rcx
0x00007037      488b0d127220.  mov rcx, qword [0x0020e250]             ; [0x20e250:8]=0
0x0000703e      660f6f05da71.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00007046      64488b042528.  mov rax, qword fs:[0x28]
0x0000704f      4889442438     mov qword [rsp + 0x38], rax
0x00007054      31c0           xor eax, eax
0x00007056      0f290424       movaps xmmword [rsp], xmm0
0x0000705a      4885f6         test rsi, rsi
0x0000705d      48894c2430     mov qword [rsp + 0x30], rcx
0x00007062      c704240a0000.  mov dword [rsp], 0xa
0x00007069      660f6f05bf71.  movdqa xmm0, xmmword [0x0020e230]
0x00007071      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00007076      660f6f05c271.  movdqa xmm0, xmmword [0x0020e240]
0x0000707e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00007083      7432           je 0x70b7
0x00007085      4885d2         test rdx, rdx
0x00007088      742d           je 0x70b7
0x0000708a      4889742428     mov qword [rsp + 0x28], rsi
0x0000708f      4889542430     mov qword [rsp + 0x30], rdx
0x00007094      4889e1         mov rcx, rsp
0x00007097      4c89c2         mov rdx, r8
0x0000709a      4c89ce         mov rsi, r9
0x0000709d      e88ef7ffff     call sym.quotearg_n_options
0x000070a2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000070a7      6448333c2528.  xor rdi, qword fs:[0x28]
0x000070b0      750a           jne 0x70bc
0x000070b2      4883c448       add rsp, 0x48
0x000070b6      c3             ret
0x000070b7      e8a4abffff     call sym.imp.abort
0x000070bc      e8dfacffff     call sym.imp.__stack_chk_fail
0x000070c1      0f1f440000     nop dword [rax + rax]
0x000070c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x000070d0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000070d7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x000070dc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x000070e0      4889d1         mov rcx, rdx
0x000070e3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000070ea      4889f2         mov rdx, rsi
0x000070ed      4889fe         mov rsi, rdi
0x000070f0      31ff           xor edi, edi
0x000070f2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x000070f7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00007100      4989c8         mov r8, rcx
0x00007103      4889d1         mov rcx, rdx
0x00007106      4889f2         mov rdx, rsi
0x00007109      4889fe         mov rsi, rdi
0x0000710c      31ff           xor edi, edi
0x0000710e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00007113      0f1f00         nop dword [rax]
0x00007116      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00007120      488d0d196f20.  lea rcx, obj.quote_quoting_options      ; 0x20e040
0x00007127      e904f7ffff     jmp sym.quotearg_n_options
0x0000712c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00007130      488d0d096f20.  lea rcx, obj.quote_quoting_options      ; 0x20e040
0x00007137      4889f2         mov rdx, rsi
0x0000713a      4889fe         mov rsi, rdi
0x0000713d      31ff           xor edi, edi
0x0000713f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00007144      6690           nop
0x00007146      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00007150      488d0de96e20.  lea rcx, obj.quote_quoting_options      ; 0x20e040
0x00007157      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000715e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00007163      0f1f00         nop dword [rax]
0x00007166      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00007170      488d0dc96e20.  lea rcx, obj.quote_quoting_options      ; 0x20e040
0x00007177      4889fe         mov rsi, rdi
0x0000717a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007181      31ff           xor edi, edi
0x00007183      e9a8f6ffff     jmp sym.quotearg_n_options
0x00007188      0f1f84000000.  nop dword [rax + rax]
;-- randint_new:
0x00007190      53             push rbx
0x00007191      4889fb         mov rbx, rdi
0x00007194      bf18000000     mov edi, 0x18
0x00007199      e852150000     call sym.xmalloc
0x0000719e      488918         mov qword [rax], rbx
0x000071a1      48c740100000.  mov qword [rax + 0x10], 0
0x000071a9      48c740080000.  mov qword [rax + 8], 0
0x000071b1      5b             pop rbx
0x000071b2      c3             ret
0x000071b3      0f1f00         nop dword [rax]
0x000071b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_all_new:
0x000071c0      53             push rbx
0x000071c1      e84a020000     call sym.randread_new
0x000071c6      4885c0         test rax, rax
0x000071c9      7425           je 0x71f0
0x000071cb      4889c3         mov rbx, rax
0x000071ce      bf18000000     mov edi, 0x18
0x000071d3      e818150000     call sym.xmalloc
0x000071d8      488918         mov qword [rax], rbx
0x000071db      48c740100000.  mov qword [rax + 0x10], 0
0x000071e3      48c740080000.  mov qword [rax + 8], 0
0x000071eb      5b             pop rbx
0x000071ec      c3             ret
0x000071ed      0f1f00         nop dword [rax]
0x000071f0      31c0           xor eax, eax
0x000071f2      5b             pop rbx
0x000071f3      c3             ret
0x000071f4      6690           nop
0x000071f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_get_source:
0x00007200      488b07         mov rax, qword [rdi]
0x00007203      c3             ret
0x00007204      6690           nop
0x00007206      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_genmax:
0x00007210      4157           push r15
0x00007212      4156           push r14
0x00007214      4c8d7e01       lea r15, [rsi + 1]
0x00007218      4155           push r13
0x0000721a      4154           push r12
0x0000721c      4989fd         mov r13, rdi
0x0000721f      55             push rbp
0x00007220      53             push rbx
0x00007221      4989f6         mov r14, rsi
0x00007224      4883ec28       sub rsp, 0x28
0x00007228      488b6f08       mov rbp, qword [rdi + 8]
0x0000722c      488b5f10       mov rbx, qword [rdi + 0x10]
0x00007230      64488b042528.  mov rax, qword fs:[0x28]
0x00007239      4889442418     mov qword [rsp + 0x18], rax
0x0000723e      31c0           xor eax, eax
0x00007240      488b07         mov rax, qword [rdi]
0x00007243      4c8d642410     lea r12, [rsp + 0x10]
0x00007248      4889442408     mov qword [rsp + 8], rax
0x0000724d      eb36           jmp 0x7285
0x0000724f      90             nop
0x00007250      4c39f3         cmp rbx, r14
0x00007253      0f8486000000   je 0x72df
0x00007259      4889d8         mov rax, rbx
0x0000725c      31d2           xor edx, edx
0x0000725e      4c29f0         sub rax, r14
0x00007261      49f7f7         div r15
0x00007264      4829d3         sub rbx, rdx
0x00007267      4889d7         mov rdi, rdx
0x0000726a      4889c6         mov rsi, rax
0x0000726d      31d2           xor edx, edx
0x0000726f      4889e8         mov rax, rbp
0x00007272      49f7f7         div r15
0x00007275      4839dd         cmp rbp, rbx
0x00007278      0f869a000000   jbe 0x7318
0x0000727e      488d5fff       lea rbx, [rdi - 1]
0x00007282      4889d5         mov rbp, rdx
0x00007285      4c39f3         cmp rbx, r14
0x00007288      73c6           jae 0x7250
0x0000728a      4889d8         mov rax, rbx
0x0000728d      31d2           xor edx, edx
0x0000728f      90             nop
0x00007290      48c1e008       shl rax, 8
0x00007294      4883c201       add rdx, 1
0x00007298      4805ff000000   add rax, 0xff
0x0000729e      4939c6         cmp r14, rax
0x000072a1      77ed           ja 0x7290
0x000072a3      488b7c2408     mov rdi, qword [rsp + 8]
0x000072a8      4c89e6         mov rsi, r12
0x000072ab      e8b0040000     call sym.randread
0x000072b0      4c89e0         mov rax, r12
0x000072b3      0f1f440000     nop dword [rax + rax]
0x000072b8      0fb610         movzx edx, byte [rax]
0x000072bb      48c1e308       shl rbx, 8
0x000072bf      48c1e508       shl rbp, 8
0x000072c3      4881c3ff0000.  add rbx, 0xff
0x000072ca      4883c001       add rax, 1
0x000072ce      4801d5         add rbp, rdx
0x000072d1      4939de         cmp r14, rbx
0x000072d4      77e2           ja 0x72b8
0x000072d6      4c39f3         cmp rbx, r14
0x000072d9      0f857affffff   jne 0x7259
0x000072df      49c745100000.  mov qword [r13 + 0x10], 0
0x000072e7      49c745080000.  mov qword [r13 + 8], 0
0x000072ef      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000072f4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000072fd      4889e8         mov rax, rbp
0x00007300      7523           jne 0x7325
0x00007302      4883c428       add rsp, 0x28
0x00007306      5b             pop rbx
0x00007307      5d             pop rbp
0x00007308      415c           pop r12
0x0000730a      415d           pop r13
0x0000730c      415e           pop r14
0x0000730e      415f           pop r15
0x00007310      c3             ret
0x00007311      0f1f80000000.  nop dword [rax]
0x00007318      49894508       mov qword [r13 + 8], rax
0x0000731c      49897510       mov qword [r13 + 0x10], rsi
0x00007320      4889d5         mov rbp, rdx
0x00007323      ebca           jmp 0x72ef
0x00007325      e876aaffff     call sym.imp.__stack_chk_fail
0x0000732a      660f1f440000   nop word [rax + rax]
;-- randint_free:
0x00007330      53             push rbx
0x00007331      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007338      4889fb         mov rbx, rdi
0x0000733b      be18000000     mov esi, 0x18
0x00007340      e8fbacffff     call sym.imp.__explicit_bzero_chk
0x00007345      4889df         mov rdi, rbx
0x00007348      5b             pop rbx
0x00007349      e902a9ffff     jmp sym.imp.free
0x0000734e      6690           nop
;-- randint_all_free:
0x00007350      4155           push r13
0x00007352      4154           push r12
0x00007354      55             push rbp
0x00007355      53             push rbx
0x00007356      4889fb         mov rbx, rdi
0x00007359      4883ec08       sub rsp, 8
0x0000735d      488b3f         mov rdi, qword [rdi]
0x00007360      e89b050000     call sym.randread_free
0x00007365      4189c4         mov r12d, eax
0x00007368      e803a9ffff     call sym.imp.__errno_location
0x0000736d      448b28         mov r13d, dword [rax]
0x00007370      4889df         mov rdi, rbx
0x00007373      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000737a      be18000000     mov esi, 0x18
0x0000737f      4889c5         mov rbp, rax
0x00007382      e8b9acffff     call sym.imp.__explicit_bzero_chk
0x00007387      4889df         mov rdi, rbx
0x0000738a      e8c1a8ffff     call sym.imp.free
0x0000738f      44896d00       mov dword [rbp], r13d
0x00007393      4883c408       add rsp, 8
0x00007397      4489e0         mov eax, r12d
0x0000739a      5b             pop rbx
0x0000739b      5d             pop rbp
0x0000739c      415c           pop r12
0x0000739e      415d           pop r13
0x000073a0      c3             ret
0x000073a1      662e0f1f8400.  nop word cs:[rax + rax]
0x000073ab      0f1f440000     nop dword [rax + rax]
;-- randread_error:
0x000073b0      55             push rbp
0x000073b1      53             push rbx
0x000073b2      4883ec08       sub rsp, 8
0x000073b6      4885ff         test rdi, rdi
0x000073b9      743d           je 0x73f8
0x000073bb      e8b0fdffff     call sym.quote
0x000073c0      4889c5         mov rbp, rax
0x000073c3      e8a8a8ffff     call sym.imp.__errno_location
0x000073c8      833800         cmp dword [rax], 0
0x000073cb      4889c3         mov rbx, rax
0x000073ce      ba05000000     mov edx, 5
0x000073d3      7428           je 0x73fd
0x000073d5      488d355c3900.  lea rsi, str.s:_read_error              ; 0xad38 ; "%s: read error"
0x000073dc      31ff           xor edi, edi
0x000073de      e88da9ffff     call sym.imp.dcgettext
0x000073e3      8b3d376c2000   mov edi, dword [obj.exit_failure]       ; [0x20e020:4]=1
0x000073e9      8b33           mov esi, dword [rbx]
0x000073eb      4889c2         mov rdx, rax
0x000073ee      4889e9         mov rcx, rbp
0x000073f1      31c0           xor eax, eax
0x000073f3      e828acffff     call sym.imp.error
0x000073f8      e863a8ffff     call sym.imp.abort
0x000073fd      488d35243900.  lea rsi, [0x0000ad28]                   ; "%s: end of file"
0x00007404      31ff           xor edi, edi
0x00007406      e865a9ffff     call sym.imp.dcgettext
0x0000740b      ebd6           jmp 0x73e3
0x0000740d      0f1f00         nop dword [rax]
;-- randread_new:
0x00007410      4157           push r15
0x00007412      4156           push r14
0x00007414      4155           push r13
0x00007416      4154           push r12
0x00007418      55             push rbp
0x00007419      53             push rbx
0x0000741a      4883ec38       sub rsp, 0x38
0x0000741e      64488b042528.  mov rax, qword fs:[0x28]
0x00007427      4889442428     mov qword [rsp + 0x28], rax
0x0000742c      31c0           xor eax, eax
0x0000742e      4885f6         test rsi, rsi
0x00007431      0f8421010000   je 0x7558
0x00007437      4885ff         test rdi, rdi
0x0000743a      4989fc         mov r12, rdi
0x0000743d      4889f5         mov rbp, rsi
0x00007440      747e           je 0x74c0
0x00007442      488d350b3900.  lea rsi, [0x0000ad54]                   ; "rb"
0x00007449      e8321f0000     call sym.fopen_safer
0x0000744e      4885c0         test rax, rax
0x00007451      4989c5         mov r13, rax
0x00007454      0f84fe010000   je 0x7658
0x0000745a      bf38100000     mov edi, sym..gnu.version_r             ; 0x1038
0x0000745f      e88c120000     call sym.xmalloc
0x00007464      4889c3         mov rbx, rax
0x00007467      4c8928         mov qword [rax], r13
0x0000746a      488d053fffff.  lea rax, sym.randread_error             ; 0x73b0 ; "USH\x83\xec\bH\x85\xfft=\xe8\xb0\xfd\xff\xffH\x89\xc5\u8a28\xff\xff\x838"
0x00007471      4881fd001000.  cmp rbp, 0x1000
0x00007478      b900100000     mov ecx, 0x1000
0x0000747d      488d7318       lea rsi, [rbx + 0x18]
0x00007481      480f46cd       cmovbe rcx, rbp
0x00007485      48894308       mov qword [rbx + 8], rax
0x00007489      4c896310       mov qword [rbx + 0x10], r12
0x0000748d      31d2           xor edx, edx
0x0000748f      4c89ef         mov rdi, r13
0x00007492      e859abffff     call sym.imp.setvbuf
0x00007497      488b542428     mov rdx, qword [rsp + 0x28]
0x0000749c      644833142528.  xor rdx, qword fs:[0x28]
0x000074a5      4889d8         mov rax, rbx
0x000074a8      0f85b1010000   jne 0x765f
0x000074ae      4883c438       add rsp, 0x38
0x000074b2      5b             pop rbx
0x000074b3      5d             pop rbp
0x000074b4      415c           pop r12
0x000074b6      415d           pop r13
0x000074b8      415e           pop r14
0x000074ba      415f           pop r15
0x000074bc      c3             ret
0x000074bd      0f1f00         nop dword [rax]
0x000074c0      bf38100000     mov edi, sym..gnu.version_r             ; 0x1038
0x000074c5      e826120000     call sym.xmalloc
0x000074ca      4889c3         mov rbx, rax
0x000074cd      48c700000000.  mov qword [rax], 0
0x000074d4      488d05d5feff.  lea rax, sym.randread_error             ; 0x73b0 ; "USH\x83\xec\bH\x85\xfft=\xe8\xb0\xfd\xff\xffH\x89\xc5\u8a28\xff\xff\x838"
0x000074db      488d3d653800.  lea rdi, str.dev_urandom                ; 0xad47 ; "/dev/urandom"
0x000074e2      31f6           xor esi, esi
0x000074e4      48c743100000.  mov qword [rbx + 0x10], 0
0x000074ec      48894308       mov qword [rbx + 8], rax
0x000074f0      48c743180000.  mov qword [rbx + 0x18], 0
0x000074f8      31c0           xor eax, eax
0x000074fa      e851abffff     call sym.imp.open
0x000074ff      85c0           test eax, eax
0x00007501      4c8d6b20       lea r13, [rbx + 0x20]
0x00007505      4189c7         mov r15d, eax
0x00007508      787e           js 0x7588
0x0000750a      4881fd000800.  cmp rbp, 0x800
0x00007511      4889ea         mov rdx, rbp
0x00007514      41be00080000   mov r14d, 0x800
0x0000751a      490f47d6       cmova rdx, r14
0x0000751e      b918100000     mov ecx, 0x1018
0x00007523      4c89ee         mov rsi, r13
0x00007526      89c7           mov edi, eax
0x00007528      e8a3a7ffff     call sym.imp.__read_chk
0x0000752d      4489ff         mov edi, r15d
0x00007530      4889c5         mov rbp, rax
0x00007533      e858a9ffff     call sym.imp.close
0x00007538      4881fdff0700.  cmp rbp, 0x7ff
0x0000753f      0f8e1f010000   jle 0x7664
0x00007545      4c89ef         mov rdi, r13
0x00007548      e893060000     call sym.isaac_seed
0x0000754d      e945ffffff     jmp 0x7497
0x00007552      660f1f440000   nop word [rax + rax]
0x00007558      bf38100000     mov edi, sym..gnu.version_r             ; 0x1038
0x0000755d      e88e110000     call sym.xmalloc
0x00007562      4889c3         mov rbx, rax
0x00007565      48c700000000.  mov qword [rax], 0
0x0000756c      488d053dfeff.  lea rax, sym.randread_error             ; 0x73b0 ; "USH\x83\xec\bH\x85\xfft=\xe8\xb0\xfd\xff\xffH\x89\xc5\u8a28\xff\xff\x838"
0x00007573      48c743100000.  mov qword [rbx + 0x10], 0
0x0000757b      48894308       mov qword [rbx + 8], rax
0x0000757f      e913ffffff     jmp 0x7497
0x00007584      0f1f4000       nop dword [rax]
0x00007588      4c8d642410     lea r12, [rsp + 0x10]
0x0000758d      31f6           xor esi, esi
0x0000758f      41be18000000   mov r14d, 0x18
0x00007595      4c89e7         mov rdi, r12
0x00007598      e8a3a8ffff     call sym.imp.gettimeofday
0x0000759d      660f6f442410   movdqa xmm0, xmmword [rsp + 0x10]
0x000075a3      0f114320       movups xmmword [rbx + 0x20], xmm0
0x000075a7      e874a7ffff     call sym.imp.getpid
0x000075ac      894330         mov dword [rbx + 0x30], eax
0x000075af      89442410       mov dword [rsp + 0x10], eax
0x000075b3      e8f8aaffff     call sym.imp.getppid
0x000075b8      89442410       mov dword [rsp + 0x10], eax
0x000075bc      894334         mov dword [rbx + 0x34], eax
0x000075bf      bd00080000     mov ebp, 0x800
0x000075c4      b804000000     mov eax, 4
0x000075c9      4c29f5         sub rbp, r14
0x000075cc      4883fd04       cmp rbp, 4
0x000075d0      480f47e8       cmova rbp, rax
0x000075d4      e8d7a7ffff     call sym.imp.getuid
0x000075d9      85ed           test ebp, ebp
0x000075db      89442410       mov dword [rsp + 0x10], eax
0x000075df      4b8d4c3500     lea rcx, [r13 + r14]
0x000075e4      89ee           mov esi, ebp
0x000075e6      7414           je 0x75fc
0x000075e8      31c0           xor eax, eax
0x000075ea      89c2           mov edx, eax
0x000075ec      83c001         add eax, 1
0x000075ef      410fb63c14     movzx edi, byte [r12 + rdx]
0x000075f4      39f0           cmp eax, esi
0x000075f6      40883c11       mov byte [rcx + rdx], dil
0x000075fa      72ee           jb 0x75ea
0x000075fc      4c01f5         add rbp, r14
0x000075ff      4881fdff0700.  cmp rbp, 0x7ff
0x00007606      0f8739ffffff   ja 0x7545
0x0000760c      e81fa9ffff     call sym.imp.getgid
0x00007611      89442410       mov dword [rsp + 0x10], eax
0x00007615      b800080000     mov eax, 0x800
0x0000761a      ba04000000     mov edx, 4
0x0000761f      4829e8         sub rax, rbp
0x00007622      498d4c2d00     lea rcx, [r13 + rbp]
0x00007627      4883f804       cmp rax, 4
0x0000762b      480f47c2       cmova rax, rdx
0x0000762f      85c0           test eax, eax
0x00007631      89c6           mov esi, eax
0x00007633      0f840cffffff   je 0x7545
0x00007639      31c0           xor eax, eax
0x0000763b      89c2           mov edx, eax
0x0000763d      83c001         add eax, 1
0x00007640      410fb63c14     movzx edi, byte [r12 + rdx]
0x00007645      39f0           cmp eax, esi
0x00007647      40883c11       mov byte [rcx + rdx], dil
0x0000764b      72ee           jb 0x763b
0x0000764d      e9f3feffff     jmp 0x7545
0x00007652      660f1f440000   nop word [rax + rax]
0x00007658      31db           xor ebx, ebx
0x0000765a      e938feffff     jmp 0x7497
0x0000765f      e83ca7ffff     call sym.imp.__stack_chk_fail
0x00007664      4885ed         test rbp, rbp
0x00007667      4d89f7         mov r15, r14
0x0000766a      b810000000     mov eax, 0x10
0x0000766f      490f48ec       cmovs rbp, r12
0x00007673      4c8d642410     lea r12, [rsp + 0x10]
0x00007678      4929ef         sub r15, rbp
0x0000767b      4983ff10       cmp r15, 0x10
0x0000767f      4c89e7         mov rdi, r12
0x00007682      4c0f47f8       cmova r15, rax
0x00007686      31f6           xor esi, esi
0x00007688      e8b3a7ffff     call sym.imp.gettimeofday
0x0000768d      498d442d00     lea rax, [r13 + rbp]
0x00007692      4c01fd         add rbp, r15
0x00007695      4489f9         mov ecx, r15d
0x00007698      4881fdff0700.  cmp rbp, 0x7ff
0x0000769f      4c89e6         mov rsi, r12
0x000076a2      4889c7         mov rdi, rax
0x000076a5      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x000076a7      0f8798feffff   ja 0x7545
0x000076ad      4d89f7         mov r15, r14
0x000076b0      41b804000000   mov r8d, 4
0x000076b6      4929ef         sub r15, rbp
0x000076b9      4c89442408     mov qword [rsp + 8], r8
0x000076be      4983ff04       cmp r15, 4
0x000076c2      4d0f47f8       cmova r15, r8
0x000076c6      4a8d543d00     lea rdx, [rbp + r15]
0x000076cb      4c01ed         add rbp, r13
0x000076ce      48891424       mov qword [rsp], rdx
0x000076d2      e849a6ffff     call sym.imp.getpid
0x000076d7      488b1424       mov rdx, qword [rsp]
0x000076db      89442410       mov dword [rsp + 0x10], eax
0x000076df      4489f9         mov ecx, r15d
0x000076e2      4889ef         mov rdi, rbp
0x000076e5      4c89e6         mov rsi, r12
0x000076e8      4c8b442408     mov r8, qword [rsp + 8]
0x000076ed      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x000076ef      4881faff0700.  cmp rdx, 0x7ff
0x000076f6      0f8f49feffff   jg 0x7545
0x000076fc      4929d6         sub r14, rdx
0x000076ff      4983fe04       cmp r14, 4
0x00007703      4d0f47f0       cmova r14, r8
0x00007707      e8a4a9ffff     call sym.imp.getppid
0x0000770c      488b1424       mov rdx, qword [rsp]
0x00007710      89442410       mov dword [rsp + 0x10], eax
0x00007714      4489f1         mov ecx, r14d
0x00007717      4c89e6         mov rsi, r12
0x0000771a      498d441500     lea rax, [r13 + rdx]
0x0000771f      4901d6         add r14, rdx
0x00007722      4981feff0700.  cmp r14, 0x7ff
0x00007729      4889c7         mov rdi, rax
0x0000772c      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x0000772e      0f8711feffff   ja 0x7545
0x00007734      e986feffff     jmp 0x75bf
0x00007739      0f1f80000000.  nop dword [rax]
;-- randread_set_handler:
0x00007740      48897708       mov qword [rdi + 8], rsi
0x00007744      c3             ret
0x00007745      90             nop
0x00007746      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread_set_handler_arg:
0x00007750      48897710       mov qword [rdi + 0x10], rsi
0x00007754      c3             ret
0x00007755      90             nop
0x00007756      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread:
0x00007760      4157           push r15
0x00007762      4156           push r14
0x00007764      4155           push r13
0x00007766      4154           push r12
0x00007768      4989fc         mov r12, rdi
0x0000776b      55             push rbp
0x0000776c      53             push rbx
0x0000776d      4889d5         mov rbp, rdx
0x00007770      4889f3         mov rbx, rsi
0x00007773      4883ec18       sub rsp, 0x18
0x00007777      488b0f         mov rcx, qword [rdi]
0x0000777a      4885c9         test rcx, rcx
0x0000777d      48894c2408     mov qword [rsp + 8], rcx
0x00007782      7464           je 0x77e8
0x00007784      e8e7a4ffff     call sym.imp.__errno_location
0x00007789      488b4c2408     mov rcx, qword [rsp + 8]
0x0000778e      4989c5         mov r13, rax
0x00007791      eb23           jmp 0x77b6
0x00007793      0f1f440000     nop dword [rax + rax]
0x00007798      498b0424       mov rax, qword [r12]
0x0000779c      498b7c2410     mov rdi, qword [r12 + 0x10]
0x000077a1      8b00           mov eax, dword [rax]
0x000077a3      83e020         and eax, 0x20                           ; "@"
0x000077a6      0f45c2         cmovne eax, edx
0x000077a9      41894500       mov dword [r13], eax
0x000077ad      41ff542408     call qword [r12 + 8]
0x000077b2      498b0c24       mov rcx, qword [r12]
0x000077b6      4889ea         mov rdx, rbp
0x000077b9      4889df         mov rdi, rbx
0x000077bc      be01000000     mov esi, 1
0x000077c1      e86aa5ffff     call sym.imp.fread_unlocked
0x000077c6      4801c3         add rbx, rax
0x000077c9      4829c5         sub rbp, rax
0x000077cc      418b5500       mov edx, dword [r13]
0x000077d0      75c6           jne 0x7798
0x000077d2      4883c418       add rsp, 0x18
0x000077d6      5b             pop rbx
0x000077d7      5d             pop rbp
0x000077d8      415c           pop r12
0x000077da      415d           pop r13
0x000077dc      415e           pop r14
0x000077de      415f           pop r15
0x000077e0      c3             ret
0x000077e1      0f1f80000000.  nop dword [rax]
0x000077e8      4c8b7718       mov r14, qword [rdi + 0x18]
0x000077ec      488d87380800.  lea rax, [rdi + 0x838]
0x000077f3      4c8d6f20       lea r13, [rdi + 0x20]
0x000077f7      4889442408     mov qword [rsp + 8], rax
0x000077fc      4c39f2         cmp rdx, r14
0x000077ff      0f86dd000000   jbe 0x78e2
0x00007805      be00080000     mov esi, 0x800
0x0000780a      4889df         mov rdi, rbx
0x0000780d      4c89f2         mov rdx, r14
0x00007810      4c29f6         sub rsi, r14
0x00007813      4803742408     add rsi, qword [rsp + 8]
0x00007818      4c01f3         add rbx, r14
0x0000781b      4c29f5         sub rbp, r14
0x0000781e      e8dda6ffff     call sym.imp.memcpy
0x00007823      f6c307         test bl, 7
0x00007826      7568           jne 0x7890
0x00007828      4881fdff0700.  cmp rbp, 0x7ff
0x0000782f      0f869e000000   jbe 0x78d3
0x00007835      4c8dbd00f8ff.  lea r15, [rbp - 0x800]
0x0000783c      4d89fe         mov r14, r15
0x0000783f      4181e6ff0700.  and r14d, 0x7ff
0x00007846      eb14           jmp 0x785c
0x00007848      0f1f84000000.  nop dword [rax + rax]
0x00007850      4d39f7         cmp r15, r14
0x00007853      743b           je 0x7890
0x00007855      4981ef000800.  sub r15, 0x800
0x0000785c      4889de         mov rsi, rbx
0x0000785f      4c89ef         mov rdi, r13
0x00007862      4881c3000800.  add rbx, 0x800
0x00007869      e8e2000000     call sym.isaac_refill
0x0000786e      4d85ff         test r15, r15
0x00007871      4c89fd         mov rbp, r15
0x00007874      75da           jne 0x7850
0x00007876      49c744241800.  mov qword [r12 + 0x18], 0
0x0000787f      4883c418       add rsp, 0x18
0x00007883      5b             pop rbx
0x00007884      5d             pop rbp
0x00007885      415c           pop r12
0x00007887      415d           pop r13
0x00007889      415e           pop r14
0x0000788b      415f           pop r15
0x0000788d      c3             ret
0x0000788e      6690           nop
0x00007890      488b742408     mov rsi, qword [rsp + 8]
0x00007895      4c89ef         mov rdi, r13
0x00007898      41be00080000   mov r14d, 0x800
0x0000789e      e8ad000000     call sym.isaac_refill
0x000078a3      4881fd000800.  cmp rbp, 0x800
0x000078aa      0f8755ffffff   ja 0x7805
0x000078b0      41be00080000   mov r14d, 0x800
0x000078b6      488b742408     mov rsi, qword [rsp + 8]
0x000078bb      4889ea         mov rdx, rbp
0x000078be      4889df         mov rdi, rbx
0x000078c1      4929ee         sub r14, rbp
0x000078c4      e837a6ffff     call sym.imp.memcpy
0x000078c9      4d89742418     mov qword [r12 + 0x18], r14
0x000078ce      e9fffeffff     jmp 0x77d2
0x000078d3      488b742408     mov rsi, qword [rsp + 8]
0x000078d8      4c89ef         mov rdi, r13
0x000078db      e870000000     call sym.isaac_refill
0x000078e0      ebce           jmp 0x78b0
0x000078e2      4989c7         mov r15, rax
0x000078e5      4d29f7         sub r15, r14
0x000078e8      498d87000800.  lea rax, [r15 + 0x800]
0x000078ef      4889442408     mov qword [rsp + 8], rax
0x000078f4      ebc0           jmp 0x78b6
0x000078f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread_free:
0x00007900      55             push rbp
0x00007901      53             push rbx
0x00007902      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007909      4889fb         mov rbx, rdi
0x0000790c      be38100000     mov esi, sym..gnu.version_r             ; 0x1038
0x00007911      4883ec08       sub rsp, 8
0x00007915      488b2f         mov rbp, qword [rdi]
0x00007918      e823a7ffff     call sym.imp.__explicit_bzero_chk
0x0000791d      4889df         mov rdi, rbx
0x00007920      e82ba3ffff     call sym.imp.free
0x00007925      4885ed         test rbp, rbp
0x00007928      7416           je 0x7940
0x0000792a      4883c408       add rsp, 8
0x0000792e      4889ef         mov rdi, rbp
0x00007931      5b             pop rbx
0x00007932      5d             pop rbp
0x00007933      e998150000     jmp sym.rpl_fclose
0x00007938      0f1f84000000.  nop dword [rax + rax]
0x00007940      4883c408       add rsp, 8
0x00007944      31c0           xor eax, eax
0x00007946      5b             pop rbx
0x00007947      5d             pop rbp
0x00007948      c3             ret
0x00007949      0f1f80000000.  nop dword [rax]
;-- isaac_refill:
0x00007950      488b87100800.  mov rax, qword [rdi + 0x810]
0x00007957      488b97000800.  mov rdx, qword [rdi + 0x800]
0x0000795e      4c8d8f000400.  lea r9, [rdi + 0x400]
0x00007965      488d4801       lea rcx, [rax + 1]
0x00007969      4889f8         mov rax, rdi
0x0000796c      48898f100800.  mov qword [rdi + 0x810], rcx
0x00007973      48038f080800.  add rcx, qword [rdi + 0x808]
0x0000797a      660f1f440000   nop word [rax + rax]
0x00007980      4989d0         mov r8, rdx
0x00007983      49c1e015       shl r8, 0x15
0x00007987      4c31c2         xor rdx, r8
0x0000798a      4c8b00         mov r8, qword [rax]
0x0000798d      48f7d2         not rdx
0x00007990      480390000400.  add rdx, qword [rax + 0x400]
0x00007997      4d89c2         mov r10, r8
0x0000799a      4181e2f80700.  and r10d, 0x7f8
0x000079a1      4e8b1c17       mov r11, qword [rdi + r10]
0x000079a5      4989d2         mov r10, rdx
0x000079a8      49c1ea05       shr r10, 5
0x000079ac      4901d3         add r11, rdx
0x000079af      4c31d2         xor rdx, r10
0x000079b2      4c01d9         add rcx, r11
0x000079b5      488908         mov qword [rax], rcx
0x000079b8      48c1e908       shr rcx, 8
0x000079bc      81e1f8070000   and ecx, 0x7f8
0x000079c2      4c8b1c0f       mov r11, qword [rdi + rcx]
0x000079c6      4d01c3         add r11, r8
0x000079c9      4c891e         mov qword [rsi], r11
0x000079cc      480390080400.  add rdx, qword [rax + 0x408]
0x000079d3      488b4808       mov rcx, qword [rax + 8]
0x000079d7      4989d2         mov r10, rdx
0x000079da      4889ca         mov rdx, rcx
0x000079dd      81e2f8070000   and edx, 0x7f8
0x000079e3      4c8b0417       mov r8, qword [rdi + rdx]
0x000079e7      4c89d2         mov rdx, r10
0x000079ea      48c1e20c       shl rdx, 0xc
0x000079ee      4c31d2         xor rdx, r10
0x000079f1      4d01d0         add r8, r10
0x000079f4      4d01d8         add r8, r11
0x000079f7      4c894008       mov qword [rax + 8], r8
0x000079fb      49c1e808       shr r8, 8
0x000079ff      4181e0f80700.  and r8d, 0x7f8
0x00007a06      4a030c07       add rcx, qword [rdi + r8]
0x00007a0a      48894e08       mov qword [rsi + 8], rcx
0x00007a0e      4c8b4010       mov r8, qword [rax + 0x10]
0x00007a12      4989cb         mov r11, rcx
0x00007a15      480390100400.  add rdx, qword [rax + 0x410]
0x00007a1c      4c89c1         mov rcx, r8
0x00007a1f      81e1f8070000   and ecx, 0x7f8
0x00007a25      4c8b140f       mov r10, qword [rdi + rcx]
0x00007a29      4901d2         add r10, rdx
0x00007a2c      4c89d1         mov rcx, r10
0x00007a2f      4c01d9         add rcx, r11
0x00007a32      48894810       mov qword [rax + 0x10], rcx
0x00007a36      48c1e908       shr rcx, 8
0x00007a3a      81e1f8070000   and ecx, 0x7f8
0x00007a40      4c8b140f       mov r10, qword [rdi + rcx]
0x00007a44      4889d1         mov rcx, rdx
0x00007a47      48c1e921       shr rcx, 0x21
0x00007a4b      4831ca         xor rdx, rcx
0x00007a4e      4d01c2         add r10, r8
0x00007a51      4c895610       mov qword [rsi + 0x10], r10
0x00007a55      488b4818       mov rcx, qword [rax + 0x18]
0x00007a59      480390180400.  add rdx, qword [rax + 0x418]
0x00007a60      4989c8         mov r8, rcx
0x00007a63      4181e0f80700.  and r8d, 0x7f8
0x00007a6a      4e8b1c07       mov r11, qword [rdi + r8]
0x00007a6e      4901d3         add r11, rdx
0x00007a71      4d89d8         mov r8, r11
0x00007a74      4d01d0         add r8, r10
0x00007a77      4883c020       add rax, 0x20                           ; "@"
0x00007a7b      4883c620       add rsi, 0x20                           ; "@"
0x00007a7f      4c8940f8       mov qword [rax - 8], r8
0x00007a83      49c1e808       shr r8, 8
0x00007a87      4181e0f80700.  and r8d, 0x7f8
0x00007a8e      4a030c07       add rcx, qword [rdi + r8]
0x00007a92      48894ef8       mov qword [rsi - 8], rcx
0x00007a96      4c39c8         cmp rax, r9
0x00007a99      0f82e1feffff   jb 0x7980
0x00007a9f      4c8d8f000800.  lea r9, [rdi + 0x800]
0x00007aa6      662e0f1f8400.  nop word cs:[rax + rax]
0x00007ab0      4989d0         mov r8, rdx
0x00007ab3      49c1e015       shl r8, 0x15
0x00007ab7      4c31c2         xor rdx, r8
0x00007aba      4c8b00         mov r8, qword [rax]
0x00007abd      48f7d2         not rdx
0x00007ac0      48039000fcff.  add rdx, qword [rax - 0x400]
0x00007ac7      4d89c2         mov r10, r8
0x00007aca      4181e2f80700.  and r10d, 0x7f8
0x00007ad1      4e8b1c17       mov r11, qword [rdi + r10]
0x00007ad5      4989d2         mov r10, rdx
0x00007ad8      49c1ea05       shr r10, 5
0x00007adc      4901d3         add r11, rdx
0x00007adf      4c31d2         xor rdx, r10
0x00007ae2      4c01d9         add rcx, r11
0x00007ae5      488908         mov qword [rax], rcx
0x00007ae8      48c1e908       shr rcx, 8
0x00007aec      81e1f8070000   and ecx, 0x7f8
0x00007af2      4c8b1c0f       mov r11, qword [rdi + rcx]
0x00007af6      4d01c3         add r11, r8
0x00007af9      4c891e         mov qword [rsi], r11
0x00007afc      48039008fcff.  add rdx, qword [rax - 0x3f8]
0x00007b03      488b4808       mov rcx, qword [rax + 8]
0x00007b07      4989d2         mov r10, rdx
0x00007b0a      4889ca         mov rdx, rcx
0x00007b0d      81e2f8070000   and edx, 0x7f8
0x00007b13      4c8b0417       mov r8, qword [rdi + rdx]
0x00007b17      4c89d2         mov rdx, r10
0x00007b1a      48c1e20c       shl rdx, 0xc
0x00007b1e      4c31d2         xor rdx, r10
0x00007b21      4d01d0         add r8, r10
0x00007b24      4d01d8         add r8, r11
0x00007b27      4c894008       mov qword [rax + 8], r8
0x00007b2b      49c1e808       shr r8, 8
0x00007b2f      4181e0f80700.  and r8d, 0x7f8
0x00007b36      4a030c07       add rcx, qword [rdi + r8]
0x00007b3a      48894e08       mov qword [rsi + 8], rcx
0x00007b3e      4c8b4010       mov r8, qword [rax + 0x10]
0x00007b42      4989cb         mov r11, rcx
0x00007b45      48039010fcff.  add rdx, qword [rax - 0x3f0]
0x00007b4c      4c89c1         mov rcx, r8
0x00007b4f      81e1f8070000   and ecx, 0x7f8
0x00007b55      4c8b140f       mov r10, qword [rdi + rcx]
0x00007b59      4901d2         add r10, rdx
0x00007b5c      4c89d1         mov rcx, r10
0x00007b5f      4c01d9         add rcx, r11
0x00007b62      48894810       mov qword [rax + 0x10], rcx
0x00007b66      48c1e908       shr rcx, 8
0x00007b6a      81e1f8070000   and ecx, 0x7f8
0x00007b70      4c8b140f       mov r10, qword [rdi + rcx]
0x00007b74      4889d1         mov rcx, rdx
0x00007b77      48c1e921       shr rcx, 0x21
0x00007b7b      4831ca         xor rdx, rcx
0x00007b7e      4d01c2         add r10, r8
0x00007b81      4c895610       mov qword [rsi + 0x10], r10
0x00007b85      488b4818       mov rcx, qword [rax + 0x18]
0x00007b89      48039018fcff.  add rdx, qword [rax - 0x3e8]
0x00007b90      4989c8         mov r8, rcx
0x00007b93      4181e0f80700.  and r8d, 0x7f8
0x00007b9a      4e8b1c07       mov r11, qword [rdi + r8]
0x00007b9e      4901d3         add r11, rdx
0x00007ba1      4d89d8         mov r8, r11
0x00007ba4      4d01d0         add r8, r10
0x00007ba7      4883c020       add rax, 0x20                           ; "@"
0x00007bab      4883c620       add rsi, 0x20                           ; "@"
0x00007baf      4c8940f8       mov qword [rax - 8], r8
0x00007bb3      49c1e808       shr r8, 8
0x00007bb7      4181e0f80700.  and r8d, 0x7f8
0x00007bbe      4a030c07       add rcx, qword [rdi + r8]
0x00007bc2      48894ef8       mov qword [rsi - 8], rcx
0x00007bc6      4c39c8         cmp rax, r9
0x00007bc9      0f82e1feffff   jb 0x7ab0
0x00007bcf      488997000800.  mov qword [rdi + 0x800], rdx
0x00007bd6      48898f080800.  mov qword [rdi + 0x808], rcx
0x00007bdd      c3             ret
0x00007bde      6690           nop
;-- isaac_seed:
0x00007be0      4155           push r13
0x00007be2      4154           push r12
0x00007be4      4c8da7000800.  lea r12, [rdi + 0x800]
0x00007beb      55             push rbp
0x00007bec      4889fa         mov rdx, rdi
0x00007bef      53             push rbx
0x00007bf0      4889f8         mov rax, rdi
0x00007bf3      48b9abc0446c.  movabs rcx, 0x98f5704f6c44c0ab
0x00007bfd      49baed89fccb.  movabs r10, 0xae985bf2cbfc89ed
0x00007c07      48bd1593a0a5.  movabs rbp, 0x48fe4a0fa5a09315
0x00007c11      48becee05583.  movabs rsi, 0x82f053db8355e0ce
0x00007c1b      49b82455594a.  movabs r8, 0xb29b2e824a595524
0x00007c25      48bba012473d.  movabs rbx, 0x8c0ea5053d4712a0
0x00007c2f      49bb62c83ac7.  movabs r11, 0xb9f8b322c73ac862
0x00007c39      49b97c4b88a2.  movabs r9, 0x647c4677a2884b7c
0x00007c43      0f1f440000     nop dword [rax + rax]
0x00007c48      48037020       add rsi, qword [rax + 0x20]
0x00007c4c      48034838       add rcx, qword [rax + 0x38]
0x00007c50      4c8b28         mov r13, qword [rax]
0x00007c53      48036828       add rbp, qword [rax + 0x28]
0x00007c57      4c035030       add r10, qword [rax + 0x30]
0x00007c5b      4929f5         sub r13, rsi
0x00007c5e      4d01e9         add r9, r13
0x00007c61      4989cd         mov r13, rcx
0x00007c64      49c1ed09       shr r13, 9
0x00007c68      4c01c9         add rcx, r9
0x00007c6b      4c31ed         xor rbp, r13
0x00007c6e      4c8b6808       mov r13, qword [rax + 8]
0x00007c72      4929ed         sub r13, rbp
0x00007c75      4d01eb         add r11, r13
0x00007c78      4d89cd         mov r13, r9
0x00007c7b      49c1e509       shl r13, 9
0x00007c7f      4d01d9         add r9, r11
0x00007c82      4d31ea         xor r10, r13
0x00007c85      4c8b6810       mov r13, qword [rax + 0x10]
0x00007c89      4d29d5         sub r13, r10
0x00007c8c      4c01eb         add rbx, r13
0x00007c8f      4d89dd         mov r13, r11
0x00007c92      49c1ed17       shr r13, 0x17
0x00007c96      4901db         add r11, rbx
0x00007c99      4c31e9         xor rcx, r13
0x00007c9c      4c8b6818       mov r13, qword [rax + 0x18]
0x00007ca0      4929cd         sub r13, rcx
0x00007ca3      4d01e8         add r8, r13
0x00007ca6      4989dd         mov r13, rbx
0x00007ca9      49c1e50f       shl r13, 0xf
0x00007cad      4c01c3         add rbx, r8
0x00007cb0      4d31e9         xor r9, r13
0x00007cb3      4d89c5         mov r13, r8
0x00007cb6      4c29ce         sub rsi, r9
0x00007cb9      49c1ed0e       shr r13, 0xe
0x00007cbd      4c8908         mov qword [rax], r9
0x00007cc0      4d31eb         xor r11, r13
0x00007cc3      4989f5         mov r13, rsi
0x00007cc6      4901f0         add r8, rsi
0x00007cc9      4c29dd         sub rbp, r11
0x00007ccc      49c1e514       shl r13, 0x14
0x00007cd0      4c895808       mov qword [rax + 8], r11
0x00007cd4      4c31eb         xor rbx, r13
0x00007cd7      4c8d2c2e       lea r13, [rsi + rbp]
0x00007cdb      4889ee         mov rsi, rbp
0x00007cde      4929da         sub r10, rbx
0x00007ce1      48c1ee11       shr rsi, 0x11
0x00007ce5      48895810       mov qword [rax + 0x10], rbx
0x00007ce9      4931f0         xor r8, rsi
0x00007cec      4c89d6         mov rsi, r10
0x00007cef      4c01d5         add rbp, r10
0x00007cf2      4c29c1         sub rcx, r8
0x00007cf5      48c1e60e       shl rsi, 0xe
0x00007cf9      4c894018       mov qword [rax + 0x18], r8
0x00007cfd      4c31ee         xor rsi, r13
0x00007d00      4901ca         add r10, rcx
0x00007d03      48896828       mov qword [rax + 0x28], rbp
0x00007d07      48897020       mov qword [rax + 0x20], rsi
0x00007d0b      4c895030       mov qword [rax + 0x30], r10
0x00007d0f      4883c040       add rax, 0x40                           ; segment.PHDR
0x00007d13      488948f8       mov qword [rax - 8], rcx
0x00007d17      4939c4         cmp r12, rax
0x00007d1a      0f8528ffffff   jne 0x7c48
0x00007d20      48037220       add rsi, qword [rdx + 0x20]
0x00007d24      48034a38       add rcx, qword [rdx + 0x38]
0x00007d28      4c8b22         mov r12, qword [rdx]
0x00007d2b      48036a28       add rbp, qword [rdx + 0x28]
0x00007d2f      4c035230       add r10, qword [rdx + 0x30]
0x00007d33      4929f4         sub r12, rsi
0x00007d36      4d01e1         add r9, r12
0x00007d39      4989cc         mov r12, rcx
0x00007d3c      49c1ec09       shr r12, 9
0x00007d40      4c01c9         add rcx, r9
0x00007d43      4c31e5         xor rbp, r12
0x00007d46      4c8b6208       mov r12, qword [rdx + 8]
0x00007d4a      4929ec         sub r12, rbp
0x00007d4d      4d01e3         add r11, r12
0x00007d50      4d89cc         mov r12, r9
0x00007d53      49c1e409       shl r12, 9
0x00007d57      4d01d9         add r9, r11
0x00007d5a      4d31e2         xor r10, r12
0x00007d5d      4c8b6210       mov r12, qword [rdx + 0x10]
0x00007d61      4d29d4         sub r12, r10
0x00007d64      4c01e3         add rbx, r12
0x00007d67      4d89dc         mov r12, r11
0x00007d6a      49c1ec17       shr r12, 0x17
0x00007d6e      4901db         add r11, rbx
0x00007d71      4c31e1         xor rcx, r12
0x00007d74      4c8b6218       mov r12, qword [rdx + 0x18]
0x00007d78      4929cc         sub r12, rcx
0x00007d7b      4d01e0         add r8, r12
0x00007d7e      4989dc         mov r12, rbx
0x00007d81      49c1e40f       shl r12, 0xf
0x00007d85      4c01c3         add rbx, r8
0x00007d88      4d31e1         xor r9, r12
0x00007d8b      4d89c4         mov r12, r8
0x00007d8e      4c29ce         sub rsi, r9
0x00007d91      49c1ec0e       shr r12, 0xe
0x00007d95      4c890a         mov qword [rdx], r9
0x00007d98      4d31e3         xor r11, r12
0x00007d9b      4989f4         mov r12, rsi
0x00007d9e      4901f0         add r8, rsi
0x00007da1      4c29dd         sub rbp, r11
0x00007da4      49c1e414       shl r12, 0x14
0x00007da8      4c895a08       mov qword [rdx + 8], r11
0x00007dac      4c31e3         xor rbx, r12
0x00007daf      4c8d242e       lea r12, [rsi + rbp]
0x00007db3      4889ee         mov rsi, rbp
0x00007db6      4929da         sub r10, rbx
0x00007db9      48c1ee11       shr rsi, 0x11
0x00007dbd      48895a10       mov qword [rdx + 0x10], rbx
0x00007dc1      4931f0         xor r8, rsi
0x00007dc4      4c89d6         mov rsi, r10
0x00007dc7      4c01d5         add rbp, r10
0x00007dca      4c29c1         sub rcx, r8
0x00007dcd      48c1e60e       shl rsi, 0xe
0x00007dd1      4c894218       mov qword [rdx + 0x18], r8
0x00007dd5      4c31e6         xor rsi, r12
0x00007dd8      4901ca         add r10, rcx
0x00007ddb      48896a28       mov qword [rdx + 0x28], rbp
0x00007ddf      48897220       mov qword [rdx + 0x20], rsi
0x00007de3      4c895230       mov qword [rdx + 0x30], r10
0x00007de7      4883c240       add rdx, 0x40                           ; segment.PHDR
0x00007deb      48894af8       mov qword [rdx - 8], rcx
0x00007def      4839d0         cmp rax, rdx
0x00007df2      0f8528ffffff   jne 0x7d20
0x00007df8      5b             pop rbx
0x00007df9      48c787100800.  mov qword [rdi + 0x810], 0
0x00007e04      48c787080800.  mov qword [rdi + 0x808], 0
0x00007e0f      5d             pop rbp
0x00007e10      48c787000800.  mov qword [rdi + 0x800], 0
0x00007e1b      415c           pop r12
0x00007e1d      415d           pop r13
0x00007e1f      c3             ret
;-- renameatu:
0x00007e20      4157           push r15
0x00007e22      4156           push r14
0x00007e24      4589c1         mov r9d, r8d
0x00007e27      4155           push r13
0x00007e29      4154           push r12
0x00007e2b      4189d6         mov r14d, edx
0x00007e2e      55             push rbp
0x00007e2f      53             push rbx
0x00007e30      4989f4         mov r12, rsi
0x00007e33      4989cd         mov r13, rcx
0x00007e36      4489c5         mov ebp, r8d
0x00007e39      4989c8         mov r8, rcx
0x00007e3c      4881ec480100.  sub rsp, 0x148
0x00007e43      89d1           mov ecx, edx
0x00007e45      4889f2         mov rdx, rsi
0x00007e48      64488b042528.  mov rax, qword fs:[0x28]
0x00007e51      488984243801.  mov qword [rsp + 0x138], rax
0x00007e59      31c0           xor eax, eax
0x00007e5b      89fe           mov esi, edi
0x00007e5d      897c2404       mov dword [rsp + 4], edi
0x00007e61      bf3c010000     mov edi, 0x13c
0x00007e66      e885a0ffff     call sym.imp.syscall
0x00007e6b      4889c3         mov rbx, rax
0x00007e6e      4189c7         mov r15d, eax
0x00007e71      e8fa9dffff     call sym.imp.__errno_location
0x00007e76      85db           test ebx, ebx
0x00007e78      7836           js 0x7eb0
0x00007e7a      488b94243801.  mov rdx, qword [rsp + 0x138]
0x00007e82      644833142528.  xor rdx, qword fs:[0x28]
0x00007e8b      4489f8         mov eax, r15d
0x00007e8e      0f85f1010000   jne 0x8085
0x00007e94      4881c4480100.  add rsp, 0x148
0x00007e9b      5b             pop rbx
0x00007e9c      5d             pop rbp
0x00007e9d      415c           pop r12
0x00007e9f      415d           pop r13
0x00007ea1      415e           pop r14
0x00007ea3      415f           pop r15
0x00007ea5      c3             ret
0x00007ea6      662e0f1f8400.  nop word cs:[rax + rax]
0x00007eb0      4989c1         mov r9, rax
0x00007eb3      8b00           mov eax, dword [rax]
0x00007eb5      8d48ea         lea ecx, [rax - 0x16]
0x00007eb8      83e1ef         and ecx, 0xffffffef                     ; 4294967279
0x00007ebb      0f95c3         setne bl
0x00007ebe      83f85f         cmp eax, 0x5f
0x00007ec1      0f95c0         setne al
0x00007ec4      20c3           and bl, al
0x00007ec6      75b2           jne 0x7e7a
0x00007ec8      85ed           test ebp, ebp
0x00007eca      7554           jne 0x7f20
0x00007ecc      4c89e7         mov rdi, r12
0x00007ecf      4c894c2408     mov qword [rsp + 8], r9
0x00007ed4      e8b79effff     call sym.imp.strlen
0x00007ed9      4c89ef         mov rdi, r13
0x00007edc      4889c5         mov rbp, rax
0x00007edf      e8ac9effff     call sym.imp.strlen
0x00007ee4      4885ed         test rbp, rbp
0x00007ee7      741a           je 0x7f03
0x00007ee9      4885c0         test rax, rax
0x00007eec      4c8b4c2408     mov r9, qword [rsp + 8]
0x00007ef1      7410           je 0x7f03
0x00007ef3      41807c2cff2f   cmp byte [r12 + rbp - 1], 0x2f
0x00007ef9      7445           je 0x7f40
0x00007efb      41807c05ff2f   cmp byte [r13 + rax - 1], 0x2f
0x00007f01      743d           je 0x7f40
0x00007f03      8b7c2404       mov edi, dword [rsp + 4]
0x00007f07      4c89e9         mov rcx, r13
0x00007f0a      4489f2         mov edx, r14d
0x00007f0d      4c89e6         mov rsi, r12
0x00007f10      e87ba1ffff     call sym.imp.renameat
0x00007f15      4189c7         mov r15d, eax
0x00007f18      e95dffffff     jmp 0x7e7a
0x00007f1d      0f1f00         nop dword [rax]
0x00007f20      83e5fe         and ebp, 0xfffffffe                     ; 4294967294
0x00007f23      746b           je 0x7f90
0x00007f25      41c7015f0000.  mov dword [r9], 0x5f                    ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x00007f2c      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x00007f32      e943ffffff     jmp 0x7e7a
0x00007f37      660f1f840000.  nop word [rax + rax]
0x00007f40      8b742404       mov esi, dword [rsp + 4]
0x00007f44      488d4c2410     lea rcx, [rsp + 0x10]
0x00007f49      41b800010000   mov r8d, 0x100
0x00007f4f      4c89e2         mov rdx, r12
0x00007f52      bf01000000     mov edi, 1
0x00007f57      4c894c2408     mov qword [rsp + 8], r9
0x00007f5c      e88f9effff     call sym.imp.__fxstatat
0x00007f61      85c0           test eax, eax
0x00007f63      7564           jne 0x7fc9
0x00007f65      84db           test bl, bl
0x00007f67      4c8b4c2408     mov r9, qword [rsp + 8]
0x00007f6c      747c           je 0x7fea
0x00007f6e      8b442428       mov eax, dword [rsp + 0x28]
0x00007f72      2500f00000     and eax, 0xf000
0x00007f77      3d00400000     cmp eax, 0x4000
0x00007f7c      7485           je 0x7f03
0x00007f7e      41c701020000.  mov dword [r9], 2
0x00007f85      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x00007f8b      e9eafeffff     jmp 0x7e7a
0x00007f90      488d8c24a000.  lea rcx, [rsp + 0xa0]
0x00007f98      41b800010000   mov r8d, 0x100
0x00007f9e      4c89ea         mov rdx, r13
0x00007fa1      4489f6         mov esi, r14d
0x00007fa4      bf01000000     mov edi, 1
0x00007fa9      4c894c2408     mov qword [rsp + 8], r9
0x00007fae      e83d9effff     call sym.imp.__fxstatat
0x00007fb3      85c0           test eax, eax
0x00007fb5      4c8b4c2408     mov r9, qword [rsp + 8]
0x00007fba      741c           je 0x7fd8
0x00007fbc      418b01         mov eax, dword [r9]
0x00007fbf      83f84b         cmp eax, 0x4b
0x00007fc2      7414           je 0x7fd8
0x00007fc4      83f802         cmp eax, 2
0x00007fc7      746f           je 0x8038
0x00007fc9      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x00007fcf      e9a6feffff     jmp 0x7e7a
0x00007fd4      0f1f4000       nop dword [rax]
0x00007fd8      41c701110000.  mov dword [r9], 0x11                    ; [0x11:4]=0x1003e00
0x00007fdf      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x00007fe5      e990feffff     jmp 0x7e7a
0x00007fea      488d8c24a000.  lea rcx, [rsp + 0xa0]
0x00007ff2      41b800010000   mov r8d, 0x100
0x00007ff8      4c89ea         mov rdx, r13
0x00007ffb      4489f6         mov esi, r14d
0x00007ffe      bf01000000     mov edi, 1
0x00008003      4c894c2408     mov qword [rsp + 8], r9
0x00008008      e8e39dffff     call sym.imp.__fxstatat
0x0000800d      85c0           test eax, eax
0x0000800f      4c8b4c2408     mov r9, qword [rsp + 8]
0x00008014      742c           je 0x8042
0x00008016      41833902       cmp dword [r9], 2
0x0000801a      75ad           jne 0x7fc9
0x0000801c      8b442428       mov eax, dword [rsp + 0x28]
0x00008020      2500f00000     and eax, 0xf000
0x00008025      3d00400000     cmp eax, 0x4000
0x0000802a      759d           jne 0x7fc9
0x0000802c      e9d2feffff     jmp 0x7f03
0x00008031      0f1f80000000.  nop dword [rax]
0x00008038      bb01000000     mov ebx, 1
0x0000803d      e98afeffff     jmp 0x7ecc
0x00008042      8b8424b80000.  mov eax, dword [rsp + 0xb8]
0x00008049      2500f00000     and eax, 0xf000
0x0000804e      3d00400000     cmp eax, 0x4000
0x00008053      740c           je 0x8061
0x00008055      41c701140000.  mov dword [r9], 0x14                    ; [0x14:4]=1
0x0000805c      e968ffffff     jmp 0x7fc9
0x00008061      8b442428       mov eax, dword [rsp + 0x28]
0x00008065      2500f00000     and eax, 0xf000
0x0000806a      3d00400000     cmp eax, 0x4000
0x0000806f      0f848efeffff   je 0x7f03
0x00008075      41c701150000.  mov dword [r9], 0x15                    ; [0x15:4]=0x40000000
0x0000807c      4183cfff       or r15d, 0xffffffff                     ; -1
0x00008080      e9f5fdffff     jmp 0x7e7a
0x00008085      e8169dffff     call sym.imp.__stack_chk_fail
0x0000808a      660f1f440000   nop word [rax + rax]
;-- fd_safer:
0x00008090      4155           push r13                                ; ../coreutils-8.31/lib/fd-safer.c:38
0x00008092      4154           push r12
0x00008094      55             push rbp
0x00008095      53             push rbx
0x00008096      89fb           mov ebx, edi
0x00008098      4883ec08       sub rsp, 8
0x0000809c      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/fd-safer.c:39
0x0000809f      7721           ja 0x80c2
0x000080a1      e81a140000     call sym.dup_safer                      ; ../coreutils-8.31/lib/fd-safer.c:41
0x000080a6      4189c4         mov r12d, eax
0x000080a9      e8c29bffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-safer.c:42
0x000080ae      448b28         mov r13d, dword [rax]
0x000080b1      4889c5         mov rbp, rax
0x000080b4      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-safer.c:43
0x000080b6      e8d59dffff     call sym.imp.close
0x000080bb      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-safer.c:45
0x000080be      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-safer.c:44
0x000080c2      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-safer.c:49
0x000080c6      89d8           mov eax, ebx
0x000080c8      5b             pop rbx
0x000080c9      5d             pop rbp
0x000080ca      415c           pop r12
0x000080cc      415d           pop r13
0x000080ce      c3             ret
0x000080cf      90             nop
;-- version_etc_arn:
0x000080d0      4157           push r15
0x000080d2      4156           push r14
0x000080d4      4155           push r13
0x000080d6      4154           push r12
0x000080d8      4d89cc         mov r12, r9
0x000080db      55             push rbp
0x000080dc      53             push rbx
0x000080dd      4889fd         mov rbp, rdi
0x000080e0      4c89c3         mov rbx, r8
0x000080e3      4883ec28       sub rsp, 0x28
0x000080e7      4885f6         test rsi, rsi
0x000080ea      0f8418010000   je 0x8208
0x000080f0      4989d0         mov r8, rdx
0x000080f3      488d155d2c00.  lea rdx, str.s___s___s                  ; 0xad57 ; "%s (%s) %s\n"
0x000080fa      4989c9         mov r9, rcx
0x000080fd      31c0           xor eax, eax
0x000080ff      4889f1         mov rcx, rsi
0x00008102      be01000000     mov esi, 1
0x00008107      e8d49fffff     call sym.imp.__fprintf_chk
0x0000810c      488d35572c00.  lea rsi, [0x0000ad6a]                   ; "(C)"
0x00008113      31ff           xor edi, edi
0x00008115      ba05000000     mov edx, 5
0x0000811a      e8519cffff     call sym.imp.dcgettext
0x0000811f      488d155a2f00.  lea rdx, obj.version_etc_copyright      ; 0xb080 ; "Copyright %s %d Free Software Foundation, Inc."
0x00008126      4889c1         mov rcx, rax
0x00008129      41b8e3070000   mov r8d, 0x7e3
0x0000812f      be01000000     mov esi, 1
0x00008134      4889ef         mov rdi, rbp
0x00008137      31c0           xor eax, eax
0x00008139      e8a29fffff     call sym.imp.__fprintf_chk
0x0000813e      488d35ab2c00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0xadf0 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00008145      31ff           xor edi, edi
0x00008147      ba05000000     mov edx, 5
0x0000814c      e81f9cffff     call sym.imp.dcgettext
0x00008151      4889ee         mov rsi, rbp
0x00008154      4889c7         mov rdi, rax
0x00008157      e8549dffff     call sym.imp.fputs_unlocked
0x0000815c      4983fc09       cmp r12, 9
0x00008160      0f873a030000   ja 0x84a0
0x00008166      488d15df2e00.  lea rdx, [0x0000b04c]
0x0000816d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00008171      4801d0         add rax, rdx
0x00008174      ffe0           jmp rax
0x00008176      662e0f1f8400.  nop word cs:[rax + rax]
0x00008180      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00008184      488b4310       mov rax, qword [rbx + 0x10]
0x00008188      488d35d12d00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0xaf60 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000818f      4c8b4308       mov r8, qword [rbx + 8]
0x00008193      ba05000000     mov edx, 5
0x00008198      31ff           xor edi, edi
0x0000819a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000819e      4c8b6328       mov r12, qword [rbx + 0x28]
0x000081a2      4c894c2410     mov qword [rsp + 0x10], r9
0x000081a7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000081ab      4c8b7318       mov r14, qword [rbx + 0x18]
0x000081af      48890424       mov qword [rsp], rax
0x000081b3      4c89442408     mov qword [rsp + 8], r8
0x000081b8      488b1b         mov rbx, qword [rbx]
0x000081bb      e8b09bffff     call sym.imp.dcgettext
0x000081c0      4883ec08       sub rsp, 8
0x000081c4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000081c9      4889c2         mov rdx, rax
0x000081cc      4889d9         mov rcx, rbx
0x000081cf      be01000000     mov esi, 1
0x000081d4      4889ef         mov rdi, rbp
0x000081d7      31c0           xor eax, eax
0x000081d9      4151           push r9
0x000081db      4155           push r13
0x000081dd      4154           push r12
0x000081df      4157           push r15
0x000081e1      4156           push r14
0x000081e3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000081e8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000081ed      e8ee9effff     call sym.imp.__fprintf_chk
0x000081f2      4883c430       add rsp, 0x30
0x000081f6      4883c428       add rsp, 0x28
0x000081fa      5b             pop rbx
0x000081fb      5d             pop rbp
0x000081fc      415c           pop r12
0x000081fe      415d           pop r13
0x00008200      415e           pop r14
0x00008202      415f           pop r15
0x00008204      c3             ret
0x00008205      0f1f00         nop dword [rax]
0x00008208      4989c8         mov r8, rcx
0x0000820b      4889d1         mov rcx, rdx
0x0000820e      488d154e2b00.  lea rdx, str.s__s                       ; 0xad63 ; "%s %s\n"
0x00008215      be01000000     mov esi, 1
0x0000821a      31c0           xor eax, eax
0x0000821c      e8bf9effff     call sym.imp.__fprintf_chk
0x00008221      e9e6feffff     jmp 0x810c
0x00008226      662e0f1f8400.  nop word cs:[rax + rax]
0x00008230      4c8b5340       mov r10, qword [rbx + 0x40]
0x00008234      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00008238      488d35512d00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0xaf90 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000823f      488b4310       mov rax, qword [rbx + 0x10]
0x00008243      4c8b4308       mov r8, qword [rbx + 8]
0x00008247      ba05000000     mov edx, 5
0x0000824c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00008250      4c8b6328       mov r12, qword [rbx + 0x28]
0x00008254      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00008258      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000825c      488b1b         mov rbx, qword [rbx]
0x0000825f      4c89542418     mov qword [rsp + 0x18], r10
0x00008264      4c894c2410     mov qword [rsp + 0x10], r9
0x00008269      48890424       mov qword [rsp], rax
0x0000826d      4c89442408     mov qword [rsp + 8], r8
0x00008272      31ff           xor edi, edi
0x00008274      e8f79affff     call sym.imp.dcgettext
0x00008279      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000827e      4152           push r10
0x00008280      e93fffffff     jmp 0x81c4
0x00008285      0f1f00         nop dword [rax]
0x00008288      488b1b         mov rbx, qword [rbx]
0x0000828b      488d35dc2a00.  lea rsi, str.Written_by__s.             ; 0xad6e ; "Written by %s.\n"
0x00008292      ba05000000     mov edx, 5
0x00008297      31ff           xor edi, edi
0x00008299      e8d29affff     call sym.imp.dcgettext
0x0000829e      4883c428       add rsp, 0x28
0x000082a2      4889d9         mov rcx, rbx
0x000082a5      4889ef         mov rdi, rbp
0x000082a8      5b             pop rbx
0x000082a9      5d             pop rbp
0x000082aa      415c           pop r12
0x000082ac      415d           pop r13
0x000082ae      415e           pop r14
0x000082b0      415f           pop r15
0x000082b2      4889c2         mov rdx, rax
0x000082b5      be01000000     mov esi, 1
0x000082ba      31c0           xor eax, eax
0x000082bc      e91f9effff     jmp sym.imp.__fprintf_chk
0x000082c1      0f1f80000000.  nop dword [rax]
0x000082c8      4c8b6308       mov r12, qword [rbx + 8]
0x000082cc      488d35ab2a00.  lea rsi, str.Written_by__s_and__s.      ; 0xad7e ; "Written by %s and %s.\n"
0x000082d3      488b1b         mov rbx, qword [rbx]
0x000082d6      ba05000000     mov edx, 5
0x000082db      31ff           xor edi, edi
0x000082dd      e88e9affff     call sym.imp.dcgettext
0x000082e2      4883c428       add rsp, 0x28
0x000082e6      4d89e0         mov r8, r12
0x000082e9      4889d9         mov rcx, rbx
0x000082ec      4889ef         mov rdi, rbp
0x000082ef      4889c2         mov rdx, rax
0x000082f2      be01000000     mov esi, 1
0x000082f7      5b             pop rbx
0x000082f8      5d             pop rbp
0x000082f9      415c           pop r12
0x000082fb      415d           pop r13
0x000082fd      415e           pop r14
0x000082ff      415f           pop r15
0x00008301      31c0           xor eax, eax
0x00008303      e9d89dffff     jmp sym.imp.__fprintf_chk
0x00008308      0f1f84000000.  nop dword [rax + rax]
0x00008310      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00008314      4c8b6308       mov r12, qword [rbx + 8]
0x00008318      488d35762a00.  lea rsi, str.Written_by__s___s__and__s. ; 0xad95 ; "Written by %s, %s, and %s.\n"
0x0000831f      488b1b         mov rbx, qword [rbx]
0x00008322      ba05000000     mov edx, 5
0x00008327      31ff           xor edi, edi
0x00008329      e8429affff     call sym.imp.dcgettext
0x0000832e      4883c428       add rsp, 0x28
0x00008332      4d89e9         mov r9, r13
0x00008335      4d89e0         mov r8, r12
0x00008338      4889d9         mov rcx, rbx
0x0000833b      4889ef         mov rdi, rbp
0x0000833e      4889c2         mov rdx, rax
0x00008341      5b             pop rbx
0x00008342      5d             pop rbp
0x00008343      415c           pop r12
0x00008345      415d           pop r13
0x00008347      415e           pop r14
0x00008349      415f           pop r15
0x0000834b      be01000000     mov esi, 1
0x00008350      31c0           xor eax, eax
0x00008352      e9899dffff     jmp sym.imp.__fprintf_chk
0x00008357      660f1f840000.  nop word [rax + rax]
0x00008360      488d35592b00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0xaec0 ; "Written by %s, %s, %s,\nand %s.\n"
0x00008367      ba05000000     mov edx, 5
0x0000836c      31ff           xor edi, edi
0x0000836e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00008372      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00008376      4c8b6308       mov r12, qword [rbx + 8]
0x0000837a      488b1b         mov rbx, qword [rbx]
0x0000837d      e8ee99ffff     call sym.imp.dcgettext
0x00008382      4883ec08       sub rsp, 8
0x00008386      4156           push r14
0x00008388      4889c2         mov rdx, rax
0x0000838b      4d89e9         mov r9, r13
0x0000838e      4d89e0         mov r8, r12
0x00008391      4889d9         mov rcx, rbx
0x00008394      4889ef         mov rdi, rbp
0x00008397      be01000000     mov esi, 1
0x0000839c      31c0           xor eax, eax
0x0000839e      e83d9dffff     call sym.imp.__fprintf_chk
0x000083a3      58             pop rax
0x000083a4      5a             pop rdx
0x000083a5      4883c428       add rsp, 0x28
0x000083a9      5b             pop rbx
0x000083aa      5d             pop rbp
0x000083ab      415c           pop r12
0x000083ad      415d           pop r13
0x000083af      415e           pop r14
0x000083b1      415f           pop r15
0x000083b3      c3             ret
0x000083b4      0f1f4000       nop dword [rax]
0x000083b8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000083bc      488d351d2b00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0xaee0 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x000083c3      ba05000000     mov edx, 5
0x000083c8      31ff           xor edi, edi
0x000083ca      4c8b7318       mov r14, qword [rbx + 0x18]
0x000083ce      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000083d2      4c8b6308       mov r12, qword [rbx + 8]
0x000083d6      488b1b         mov rbx, qword [rbx]
0x000083d9      e89299ffff     call sym.imp.dcgettext
0x000083de      4157           push r15
0x000083e0      eba4           jmp 0x8386
0x000083e2      660f1f440000   nop word [rax + rax]
0x000083e8      4c8b4308       mov r8, qword [rbx + 8]
0x000083ec      4c8b6328       mov r12, qword [rbx + 0x28]
0x000083f0      488d35112b00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0xaf08 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000083f7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000083fb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000083ff      ba05000000     mov edx, 5
0x00008404      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00008408      31ff           xor edi, edi
0x0000840a      488b1b         mov rbx, qword [rbx]
0x0000840d      4c890424       mov qword [rsp], r8
0x00008411      e85a99ffff     call sym.imp.dcgettext
0x00008416      4883ec08       sub rsp, 8
0x0000841a      4d89e9         mov r9, r13
0x0000841d      4154           push r12
0x0000841f      4157           push r15
0x00008421      4156           push r14
0x00008423      4c8b442420     mov r8, qword [rsp + 0x20]
0x00008428      4889d9         mov rcx, rbx
0x0000842b      4889c2         mov rdx, rax
0x0000842e      4889ef         mov rdi, rbp
0x00008431      be01000000     mov esi, 1
0x00008436      31c0           xor eax, eax
0x00008438      e8a39cffff     call sym.imp.__fprintf_chk
0x0000843d      4883c420       add rsp, 0x20
0x00008441      4883c428       add rsp, 0x28
0x00008445      5b             pop rbx
0x00008446      5d             pop rbp
0x00008447      415c           pop r12
0x00008449      415d           pop r13
0x0000844b      415e           pop r14
0x0000844d      415f           pop r15
0x0000844f      c3             ret
0x00008450      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00008454      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00008458      488d35d12a00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0xaf30 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000845f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00008463      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00008467      ba05000000     mov edx, 5
0x0000846c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00008470      4c8b4308       mov r8, qword [rbx + 8]
0x00008474      31ff           xor edi, edi
0x00008476      4c894c2408     mov qword [rsp + 8], r9
0x0000847b      488b1b         mov rbx, qword [rbx]
0x0000847e      4c890424       mov qword [rsp], r8
0x00008482      e8e998ffff     call sym.imp.dcgettext
0x00008487      4155           push r13
0x00008489      4154           push r12
0x0000848b      4157           push r15
0x0000848d      4156           push r14
0x0000848f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00008494      eb8d           jmp 0x8423
0x00008496      662e0f1f8400.  nop word cs:[rax + rax]
0x000084a0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000084a4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000084a8      ba05000000     mov edx, 5
0x000084ad      488b4310       mov rax, qword [rbx + 0x10]
0x000084b1      4c8b4308       mov r8, qword [rbx + 8]
0x000084b5      488d350c2b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0xafc8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x000084bc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000084c0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000084c4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000084c8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000084cc      4c89542418     mov qword [rsp + 0x18], r10
0x000084d1      4c894c2410     mov qword [rsp + 0x10], r9
0x000084d6      48890424       mov qword [rsp], rax
0x000084da      4c89442408     mov qword [rsp + 8], r8
0x000084df      488b1b         mov rbx, qword [rbx]
0x000084e2      e98bfdffff     jmp 0x8272
0x000084e7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000084f0      4531c9         xor r9d, r9d
0x000084f3      49833800       cmp qword [r8], 0
0x000084f7      7412           je 0x850b
0x000084f9      0f1f80000000.  nop dword [rax]
0x00008500      4983c101       add r9, 1
0x00008504      4b833cc800     cmp qword [r8 + r9*8], 0
0x00008509      75f5           jne 0x8500
0x0000850b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00008510      4883ec68       sub rsp, 0x68
0x00008514      4d89c2         mov r10, r8
0x00008517      4531c9         xor r9d, r9d
0x0000851a      64488b042528.  mov rax, qword fs:[0x28]
0x00008523      4889442458     mov qword [rsp + 0x58], rax
0x00008528      31c0           xor eax, eax
0x0000852a      4989e0         mov r8, rsp
0x0000852d      0f1f00         nop dword [rax]
0x00008530      418b02         mov eax, dword [r10]
0x00008533      83f82f         cmp eax, 0x2f
0x00008536      7742           ja 0x857a
0x00008538      4189c3         mov r11d, eax
0x0000853b      4d035a10       add r11, qword [r10 + 0x10]
0x0000853f      83c008         add eax, 8
0x00008542      418902         mov dword [r10], eax
0x00008545      498b03         mov rax, qword [r11]
0x00008548      4885c0         test rax, rax
0x0000854b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000854f      740a           je 0x855b
0x00008551      4983c101       add r9, 1
0x00008555      4983f90a       cmp r9, 0xa
0x00008559      75d5           jne 0x8530
0x0000855b      e870fbffff     call sym.version_etc_arn
0x00008560      488b442458     mov rax, qword [rsp + 0x58]
0x00008565      644833042528.  xor rax, qword fs:[0x28]
0x0000856e      7505           jne 0x8575
0x00008570      4883c468       add rsp, 0x68
0x00008574      c3             ret
0x00008575      e82698ffff     call sym.imp.__stack_chk_fail
0x0000857a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000857e      498d4308       lea rax, [r11 + 8]
0x00008582      49894208       mov qword [r10 + 8], rax
0x00008586      ebbd           jmp 0x8545
0x00008588      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00008590      55             push rbp
0x00008591      53             push rbx
0x00008592      41ba20000000   mov r10d, 0x20                          ; "@"
0x00008598      4531db         xor r11d, r11d
0x0000859b      4881ecb80000.  sub rsp, 0xb8
0x000085a2      64488b042528.  mov rax, qword fs:[0x28]
0x000085ab      4889442478     mov qword [rsp + 0x78], rax
0x000085b0      31c0           xor eax, eax
0x000085b2      488d8424d000.  lea rax, [rsp + 0xd0]
0x000085ba      4c898424a000.  mov qword [rsp + 0xa0], r8
0x000085c2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x000085ca      4c8d442420     lea r8, [rsp + 0x20]
0x000085cf      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000085d7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000085df      4889442410     mov qword [rsp + 0x10], rax
0x000085e4      488d84248000.  lea rax, [rsp + 0x80]
0x000085ec      4531c9         xor r9d, r9d
0x000085ef      4889442418     mov qword [rsp + 0x18], rax
0x000085f4      4889c5         mov rbp, rax
0x000085f7      660f1f840000.  nop word [rax + rax]
0x00008600      4183fa2f       cmp r10d, 0x2f
0x00008604      7756           ja 0x865c
0x00008606      4489d0         mov eax, r10d
0x00008609      41bb01000000   mov r11d, 1
0x0000860f      4183c208       add r10d, 8
0x00008613      4801e8         add rax, rbp
0x00008616      488b00         mov rax, qword [rax]
0x00008619      4885c0         test rax, rax
0x0000861c      4b8904c8       mov qword [r8 + r9*8], rax
0x00008620      740a           je 0x862c
0x00008622      4983c101       add r9, 1
0x00008626      4983f90a       cmp r9, 0xa
0x0000862a      75d4           jne 0x8600
0x0000862c      4584db         test r11b, r11b
0x0000862f      7524           jne 0x8655
0x00008631      e89afaffff     call sym.version_etc_arn
0x00008636      488b442478     mov rax, qword [rsp + 0x78]
0x0000863b      644833042528.  xor rax, qword fs:[0x28]
0x00008644      750a           jne 0x8650
0x00008646      4881c4b80000.  add rsp, 0xb8
0x0000864d      5b             pop rbx
0x0000864e      5d             pop rbp
0x0000864f      c3             ret
0x00008650      e84b97ffff     call sym.imp.__stack_chk_fail
0x00008655      4489542408     mov dword [rsp + 8], r10d
0x0000865a      ebd5           jmp 0x8631
0x0000865c      4889d8         mov rax, rbx
0x0000865f      4883c308       add rbx, 8
0x00008663      ebb1           jmp 0x8616
0x00008665      90             nop
0x00008666      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00008670      53             push rbx
0x00008671      488d35392700.  lea rsi, str.Report_bugs_to:__s         ; 0xadb1 ; "\nReport bugs to: %s\n"
0x00008678      ba05000000     mov edx, 5
0x0000867d      31ff           xor edi, edi
0x0000867f      e8ec96ffff     call sym.imp.dcgettext
0x00008684      488d153b2700.  lea rdx, str.bug_coreutils_gnu.org      ; 0xadc6 ; "bug-coreutils@gnu.org"
0x0000868b      4889c6         mov rsi, rax
0x0000868e      bf01000000     mov edi, 1
0x00008693      31c0           xor eax, eax
0x00008695      e84699ffff     call sym.imp.__printf_chk
0x0000869a      488d353b2700.  lea rsi, str.s_home_page:___s           ; 0xaddc ; "%s home page: <%s>\n"
0x000086a1      ba05000000     mov edx, 5
0x000086a6      31ff           xor edi, edi
0x000086a8      e8c396ffff     call sym.imp.dcgettext
0x000086ad      488d0dbc1d00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xa470 ; "https://www.gnu.org/software/coreutils/"
0x000086b4      488d15391000.  lea rdx, str.GNU_coreutils              ; 0x96f4 ; "GNU coreutils"
0x000086bb      4889c6         mov rsi, rax
0x000086be      bf01000000     mov edi, 1
0x000086c3      31c0           xor eax, eax
0x000086c5      e81699ffff     call sym.imp.__printf_chk
0x000086ca      488b1dd75920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x000086d1      488d35302900.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0xb008 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000086d8      31ff           xor edi, edi
0x000086da      ba05000000     mov edx, 5
0x000086df      e88c96ffff     call sym.imp.dcgettext
0x000086e4      4889de         mov rsi, rbx
0x000086e7      4889c7         mov rdi, rax
0x000086ea      5b             pop rbx
0x000086eb      e9c097ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000086f0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000086f1      4889fb         mov rbx, rdi
0x000086f4      e85798ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000086f9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000086fc      7505           jne 0x8703
0x000086fe      4885db         test rbx, rbx
0x00008701      7502           jne 0x8705
0x00008703      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00008704      c3             ret
0x00008705      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000870a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00008710      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00008713      48f7e6         mul rsi
0x00008716      4889c7         mov rdi, rax
0x00008719      0f90c0         seto al
0x0000871c      4885ff         test rdi, rdi
0x0000871f      780a           js 0x872b
0x00008721      0fb6c0         movzx eax, al
0x00008724      4885c0         test rax, rax
0x00008727      7502           jne 0x872b
0x00008729      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000872b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000872f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00008734      6690           nop
0x00008736      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00008740      ebae           jmp sym.xmalloc
0x00008742      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00008746      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00008750      4885f6         test rsi, rsi
0x00008753      53             push rbx
0x00008754      4889f3         mov rbx, rsi
0x00008757      7505           jne 0x875e
0x00008759      4885ff         test rdi, rdi
0x0000875c      751a           jne 0x8778
0x0000875e      4889de         mov rsi, rbx
0x00008761      e83a98ffff     call sym.imp.realloc
0x00008766      4885c0         test rax, rax
0x00008769      7505           jne 0x8770
0x0000876b      4885db         test rbx, rbx
0x0000876e      7511           jne 0x8781                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00008770      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00008771      c3             ret
0x00008772      660f1f440000   nop word [rax + rax]
0x00008778      e8d394ffff     call sym.imp.free
0x0000877d      31c0           xor eax, eax
0x0000877f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00008780      c3             ret
0x00008781      e8ba010000     call sym.xalloc_die
0x00008786      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00008790      4889f0         mov rax, rsi
0x00008793      48f7e2         mul rdx
0x00008796      4889c6         mov rsi, rax
0x00008799      0f90c0         seto al
0x0000879c      4885f6         test rsi, rsi
0x0000879f      780a           js 0x87ab
0x000087a1      0fb6c0         movzx eax, al
0x000087a4      4885c0         test rax, rax
0x000087a7      7502           jne 0x87ab
0x000087a9      eba5           jmp sym.xrealloc
0x000087ab      4883ec08       sub rsp, 8
0x000087af      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x000087b4      6690           nop
0x000087b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000087c0      4885ff         test rdi, rdi
0x000087c3      4989d1         mov r9, rdx
0x000087c6      488b0e         mov rcx, qword [rsi]
0x000087c9      7435           je 0x8800
0x000087cb      31d2           xor edx, edx
0x000087cd      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000087d7      49f7f1         div r9
0x000087da      4839c8         cmp rax, rcx
0x000087dd      763c           jbe 0x881b
0x000087df      4889c8         mov rax, rcx
0x000087e2      48d1e8         shr rax, 1
0x000087e5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000087ea      48890e         mov qword [rsi], rcx
0x000087ed      490fafc9       imul rcx, r9
0x000087f1      4889ce         mov rsi, rcx
0x000087f4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000087f9      0f1f80000000.  nop dword [rax]
0x00008800      4885c9         test rcx, rcx
0x00008803      7423           je 0x8828
0x00008805      4889c8         mov rax, rcx
0x00008808      49f7e1         mul r9
0x0000880b      0f90c2         seto dl
0x0000880e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00008811      0fb6d2         movzx edx, dl
0x00008814      7805           js 0x881b
0x00008816      4885d2         test rdx, rdx
0x00008819      74cf           je 0x87ea
0x0000881b      4883ec08       sub rsp, 8
0x0000881f      e81c010000     call sym.xalloc_die
0x00008824      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00008828      31d2           xor edx, edx
0x0000882a      b880000000     mov eax, 0x80
0x0000882f      4531c0         xor r8d, r8d
0x00008832      49f7f1         div r9
0x00008835      4885c0         test rax, rax
0x00008838      410f94c0       sete r8b
0x0000883c      498d0c00       lea rcx, [r8 + rax]
0x00008840      ebc3           jmp 0x8805
0x00008842      0f1f4000       nop dword [rax]
0x00008846      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00008850      4885ff         test rdi, rdi
0x00008853      488b06         mov rax, qword [rsi]
0x00008856      7428           je 0x8880
0x00008858      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00008862      4839d0         cmp rax, rdx
0x00008865      772a           ja 0x8891
0x00008867      4889c2         mov rdx, rax
0x0000886a      48d1ea         shr rdx, 1
0x0000886d      488d440201     lea rax, [rdx + rax + 1]
0x00008872      488906         mov qword [rsi], rax
0x00008875      4889c6         mov rsi, rax
0x00008878      e9d3feffff     jmp sym.xrealloc
0x0000887d      0f1f00         nop dword [rax]
0x00008880      4885c0         test rax, rax
0x00008883      ba80000000     mov edx, 0x80
0x00008888      480f44c2       cmove rax, rdx
0x0000888c      4885c0         test rax, rax
0x0000888f      79e1           jns 0x8872
0x00008891      4883ec08       sub rsp, 8
0x00008895      e8a6000000     call sym.xalloc_die
0x0000889a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x000088a0      53             push rbx
0x000088a1      4889fb         mov rbx, rdi
0x000088a4      e847feffff     call sym.xmalloc
0x000088a9      4889da         mov rdx, rbx
0x000088ac      31f6           xor esi, esi
0x000088ae      4889c7         mov rdi, rax
0x000088b1      5b             pop rbx
0x000088b2      e9b995ffff     jmp sym.imp.memset
0x000088b7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x000088c0      4889f8         mov rax, rdi
0x000088c3      4883ec08       sub rsp, 8
0x000088c7      48f7e6         mul rsi
0x000088ca      0f90c2         seto dl
0x000088cd      4885c0         test rax, rax
0x000088d0      7817           js 0x88e9
0x000088d2      0fb6d2         movzx edx, dl
0x000088d5      4885d2         test rdx, rdx
0x000088d8      750f           jne 0x88e9
0x000088da      e8e195ffff     call sym.imp.calloc
0x000088df      4885c0         test rax, rax
0x000088e2      7405           je 0x88e9
0x000088e4      4883c408       add rsp, 8
0x000088e8      c3             ret
0x000088e9      e852000000     call sym.xalloc_die
0x000088ee      6690           nop
;-- xmemdup:
0x000088f0      55             push rbp
0x000088f1      53             push rbx
0x000088f2      4889fd         mov rbp, rdi
0x000088f5      4889f7         mov rdi, rsi
0x000088f8      4889f3         mov rbx, rsi
0x000088fb      4883ec08       sub rsp, 8
0x000088ff      e8ecfdffff     call sym.xmalloc
0x00008904      4883c408       add rsp, 8
0x00008908      4889da         mov rdx, rbx
0x0000890b      4889ee         mov rsi, rbp
0x0000890e      5b             pop rbx
0x0000890f      5d             pop rbp
0x00008910      4889c7         mov rdi, rax
0x00008913      e9e895ffff     jmp sym.imp.memcpy
0x00008918      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00008920      53             push rbx
0x00008921      4889fb         mov rbx, rdi
0x00008924      e86794ffff     call sym.imp.strlen
0x00008929      4889df         mov rdi, rbx
0x0000892c      488d7001       lea rsi, [rax + 1]
0x00008930      5b             pop rbx
0x00008931      ebbd           jmp sym.xmemdup
0x00008933      662e0f1f8400.  nop word cs:[rax + rax]
0x0000893d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00008940      488d35682700.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0xb0af ; "memory exhausted"
0x00008947      4883ec08       sub rsp, 8
0x0000894b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00008950      31ff           xor edi, edi
0x00008952      e81994ffff     call sym.imp.dcgettext
0x00008957      8b3dc3562000   mov edi, dword [obj.exit_failure]       ; [0x20e020:4]=1
0x0000895d      488d15041e00.  lea rdx, [0x0000a768]                   ; "%s"
0x00008964      4889c1         mov rcx, rax
0x00008967      31f6           xor esi, esi
0x00008969      31c0           xor eax, eax
0x0000896b      e8b096ffff     call sym.imp.error
0x00008970      e8eb92ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00008975      662e0f1f8400.  nop word cs:[rax + rax]
0x0000897f      90             nop
;-- xnumtoumax:
0x00008980      4157           push r15                                ; ../coreutils-8.31/lib/xdectoint.c:38
0x00008982      4156           push r14
0x00008984      4989cf         mov r15, rcx
0x00008987      4155           push r13
0x00008989      4154           push r12
0x0000898b      4989d6         mov r14, rdx
0x0000898e      55             push rbp
0x0000898f      53             push rbx
0x00008990      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00008992      31f6           xor esi, esi
0x00008994      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/xdectoint.c:38
0x00008997      4d89cd         mov r13, r9
0x0000899a      4883ec18       sub rsp, 0x18
0x0000899e      4889e1         mov rcx, rsp                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x000089a1      8b5c2450       mov ebx, dword [rsp + 0x50]             ; ../coreutils-8.31/lib/xdectoint.c:38
0x000089a5      64488b042528.  mov rax, qword fs:[0x28]
0x000089ae      4889442408     mov qword [rsp + 8], rax
0x000089b3      31c0           xor eax, eax
0x000089b5      e8f6000000     call sym.xstrtoumax                     ; ../coreutils-8.31/lib/xdectoint.c:42
0x000089ba      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xdectoint.c:44
0x000089bc      0f858e000000   jne 0x8a50
0x000089c2      488b2c24       mov rbp, qword [rsp]                    ; ../coreutils-8.31/lib/xdectoint.c:46
0x000089c6      4c39f5         cmp rbp, r14
0x000089c9      7205           jb 0x89d0
0x000089cb      4c39fd         cmp rbp, r15
0x000089ce      7654           jbe 0x8a24
0x000089d0      e89b92ffff     call sym.imp.__errno_location
0x000089d5      4881fd000000.  cmp rbp, 0x40000000                     ; ../coreutils-8.31/lib/xdectoint.c:52
0x000089dc      4989c6         mov r14, rax
0x000089df      19c0           sbb eax, eax
0x000089e1      83e0d7         and eax, 0xffffffd7                     ; 4294967255
0x000089e4      83c04b         add eax, 0x4b
0x000089e7      418906         mov dword [r14], eax
0x000089ea      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/xdectoint.c:69
0x000089ed      e87ee7ffff     call sym.quote
0x000089f2      418b36         mov esi, dword [r14]
0x000089f5      4989c0         mov r8, rax
0x000089f8      b800000000     mov eax, 0
0x000089fd      488d15731d00.  lea rdx, str.s:__s                      ; 0xa777 ; "%s: %s"
0x00008a04      4c89e9         mov rcx, r13
0x00008a07      83fe16         cmp esi, 0x16
0x00008a0a      0f44f0         cmove esi, eax
0x00008a0d      85db           test ebx, ebx
0x00008a0f      b801000000     mov eax, 1
0x00008a14      0f44d8         cmove ebx, eax
0x00008a17      31c0           xor eax, eax
0x00008a19      89df           mov edi, ebx
0x00008a1b      e80096ffff     call sym.imp.error
0x00008a20      488b2c24       mov rbp, qword [rsp]
0x00008a24      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xdectoint.c:74
0x00008a29      644833142528.  xor rdx, qword fs:[0x28]
0x00008a32      4889e8         mov rax, rbp
0x00008a35      7544           jne 0x8a7b
0x00008a37      4883c418       add rsp, 0x18
0x00008a3b      5b             pop rbx
0x00008a3c      5d             pop rbp
0x00008a3d      415c           pop r12
0x00008a3f      415d           pop r13
0x00008a41      415e           pop r14
0x00008a43      415f           pop r15
0x00008a45      c3             ret
0x00008a46      662e0f1f8400.  nop word cs:[rax + rax]
0x00008a50      89c5           mov ebp, eax
0x00008a52      e81992ffff     call sym.imp.__errno_location
0x00008a57      83fd01         cmp ebp, 1                              ; ../coreutils-8.31/lib/xdectoint.c:61
0x00008a5a      4989c6         mov r14, rax
0x00008a5d      7411           je 0x8a70
0x00008a5f      83fd03         cmp ebp, 3                              ; ../coreutils-8.31/lib/xdectoint.c:63
0x00008a62      7586           jne 0x89ea
0x00008a64      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/xdectoint.c:64
0x00008a6a      e97bffffff     jmp 0x89ea
0x00008a6f      90             nop
0x00008a70      c7004b000000   mov dword [rax], 0x4b                   ; ../coreutils-8.31/lib/xdectoint.c:62 ; 'K'
                                                                       ; [0x4b:4]=0
0x00008a76      e96fffffff     jmp 0x89ea
0x00008a7b      e82093ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xdectoint.c:74
;-- xdectoumax:
0x00008a80      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/xdectoint.c:84
0x00008a84      4151           push r9                                 ; ../coreutils-8.31/lib/xdectoint.c:85
0x00008a86      4d89c1         mov r9, r8
0x00008a89      4989c8         mov r8, rcx
0x00008a8c      4889d1         mov rcx, rdx
0x00008a8f      4889f2         mov rdx, rsi
0x00008a92      be0a000000     mov esi, 0xa
0x00008a97      e8e4feffff     call sym.xnumtoumax
0x00008a9c      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/xdectoint.c:86
0x00008aa0      c3             ret
0x00008aa1      662e0f1f8400.  nop word cs:[rax + rax]
0x00008aab      0f1f440000     nop dword [rax + rax]
;-- xstrtoumax:
0x00008ab0      4157           push r15
0x00008ab2      4156           push r14
0x00008ab4      4155           push r13
0x00008ab6      4154           push r12
0x00008ab8      55             push rbp
0x00008ab9      53             push rbx
0x00008aba      4883ec28       sub rsp, 0x28
0x00008abe      64488b042528.  mov rax, qword fs:[0x28]
0x00008ac7      4889442418     mov qword [rsp + 0x18], rax
0x00008acc      31c0           xor eax, eax
0x00008ace      83fa24         cmp edx, 0x24
0x00008ad1      0f875e030000   ja 0x8e35
0x00008ad7      488d442410     lea rax, [rsp + 0x10]
0x00008adc      4989f7         mov r15, rsi
0x00008adf      4885f6         test rsi, rsi
0x00008ae2      4889fd         mov rbp, rdi
0x00008ae5      89542408       mov dword [rsp + 8], edx
0x00008ae9      4989ce         mov r14, rcx
0x00008aec      4d89c5         mov r13, r8
0x00008aef      4c0f44f8       cmove r15, rax
0x00008af3      e87891ffff     call sym.imp.__errno_location
0x00008af8      c70000000000   mov dword [rax], 0
0x00008afe      4989c4         mov r12, rax
0x00008b01      0fb65d00       movzx ebx, byte [rbp]
0x00008b05      e80696ffff     call sym.imp.__ctype_b_loc
0x00008b0a      8b542408       mov edx, dword [rsp + 8]
0x00008b0e      488b30         mov rsi, qword [rax]
0x00008b11      4889e8         mov rax, rbp
0x00008b14      eb11           jmp 0x8b27
0x00008b16      662e0f1f8400.  nop word cs:[rax + rax]
0x00008b20      4883c001       add rax, 1
0x00008b24      0fb618         movzx ebx, byte [rax]
0x00008b27      0fb6cb         movzx ecx, bl
0x00008b2a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x00008b2f      75ef           jne 0x8b20
0x00008b31      80fb2d         cmp bl, 0x2d
0x00008b34      7452           je 0x8b88
0x00008b36      31c9           xor ecx, ecx
0x00008b38      4c89fe         mov rsi, r15
0x00008b3b      4889ef         mov rdi, rbp
0x00008b3e      e81d93ffff     call sym.imp.__strtoul_internal
0x00008b43      498b0f         mov rcx, qword [r15]
0x00008b46      4889c3         mov rbx, rax
0x00008b49      4839e9         cmp rcx, rbp
0x00008b4c      742a           je 0x8b78
0x00008b4e      418b0424       mov eax, dword [r12]
0x00008b52      85c0           test eax, eax
0x00008b54      7462           je 0x8bb8
0x00008b56      83f822         cmp eax, 0x22
0x00008b59      bd01000000     mov ebp, 1
0x00008b5e      7528           jne 0x8b88
0x00008b60      4d85ed         test r13, r13
0x00008b63      7409           je 0x8b6e
0x00008b65      440fb621       movzx r12d, byte [rcx]
0x00008b69      4584e4         test r12b, r12b
0x00008b6c      7579           jne 0x8be7
0x00008b6e      49891e         mov qword [r14], rbx
0x00008b71      eb1a           jmp 0x8b8d
0x00008b73      0f1f440000     nop dword [rax + rax]
0x00008b78      4d85ed         test r13, r13
0x00008b7b      48894c2408     mov qword [rsp + 8], rcx
0x00008b80      753e           jne 0x8bc0
0x00008b82      660f1f440000   nop word [rax + rax]
0x00008b88      bd04000000     mov ebp, 4
0x00008b8d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00008b92      6448333c2528.  xor rdi, qword fs:[0x28]
0x00008b9b      89e8           mov eax, ebp
0x00008b9d      0f858d020000   jne 0x8e30
0x00008ba3      4883c428       add rsp, 0x28
0x00008ba7      5b             pop rbx
0x00008ba8      5d             pop rbp
0x00008ba9      415c           pop r12
0x00008bab      415d           pop r13
0x00008bad      415e           pop r14
0x00008baf      415f           pop r15
0x00008bb1      c3             ret
0x00008bb2      660f1f440000   nop word [rax + rax]
0x00008bb8      31ed           xor ebp, ebp
0x00008bba      eba4           jmp 0x8b60
0x00008bbc      0f1f4000       nop dword [rax]
0x00008bc0      440fb66500     movzx r12d, byte [rbp]
0x00008bc5      4584e4         test r12b, r12b
0x00008bc8      74be           je 0x8b88
0x00008bca      410fbef4       movsx esi, r12b
0x00008bce      4c89ef         mov rdi, r13
0x00008bd1      31ed           xor ebp, ebp
0x00008bd3      e80892ffff     call sym.imp.strchr
0x00008bd8      4885c0         test rax, rax
0x00008bdb      bb01000000     mov ebx, 1
0x00008be0      488b4c2408     mov rcx, qword [rsp + 8]
0x00008be5      74a1           je 0x8b88
0x00008be7      410fbef4       movsx esi, r12b
0x00008beb      4c89ef         mov rdi, r13
0x00008bee      48894c2408     mov qword [rsp + 8], rcx
0x00008bf3      e8e891ffff     call sym.imp.strchr
0x00008bf8      4885c0         test rax, rax
0x00008bfb      488b4c2408     mov rcx, qword [rsp + 8]
0x00008c00      0f84c6000000   je 0x8ccc
0x00008c06      418d4424bb     lea eax, [r12 - 0x45]
0x00008c0b      3c2f           cmp al, 0x2f
0x00008c0d      7751           ja 0x8c60
0x00008c0f      48ba45893000.  movabs rdx, 0x814400308945
0x00008c19      480fa3c2       bt rdx, rax
0x00008c1d      7341           jae 0x8c60
0x00008c1f      be30000000     mov esi, 0x30                           ; '0'
0x00008c24      4c89ef         mov rdi, r13
0x00008c27      48894c2408     mov qword [rsp + 8], rcx
0x00008c2c      e8af91ffff     call sym.imp.strchr
0x00008c31      4885c0         test rax, rax
0x00008c34      488b4c2408     mov rcx, qword [rsp + 8]
0x00008c39      7425           je 0x8c60
0x00008c3b      0fb64101       movzx eax, byte [rcx + 1]
0x00008c3f      3c44           cmp al, 0x44
0x00008c41      740c           je 0x8c4f
0x00008c43      3c69           cmp al, 0x69
0x00008c45      0f84cd010000   je 0x8e18
0x00008c4b      3c42           cmp al, 0x42
0x00008c4d      7511           jne 0x8c60
0x00008c4f      bf02000000     mov edi, 2
0x00008c54      bee8030000     mov esi, 0x3e8
0x00008c59      eb0f           jmp 0x8c6a
0x00008c5b      0f1f440000     nop dword [rax + rax]
0x00008c60      bf01000000     mov edi, 1
0x00008c65      be00040000     mov esi, 0x400
0x00008c6a      4183ec42       sub r12d, 0x42
0x00008c6e      4180fc35       cmp r12b, 0x35
0x00008c72      7758           ja 0x8ccc
0x00008c74      488d158d2400.  lea rdx, [0x0000b108]
0x00008c7b      450fb6e4       movzx r12d, r12b
0x00008c7f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00008c83      4801d0         add rax, rdx
0x00008c86      ffe0           jmp rax
0x00008c88      4889d8         mov rax, rbx
0x00008c8b      48f7e6         mul rsi
0x00008c8e      0f80ed010000   jo 0x8e81
0x00008c94      4531c0         xor r8d, r8d
0x00008c97      48f7e6         mul rsi
0x00008c9a      0f80d2010000   jo 0x8e72
0x00008ca0      4889c3         mov rbx, rax
0x00008ca3      4409c5         or ebp, r8d
0x00008ca6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008cb0      4863ff         movsxd rdi, edi
0x00008cb3      89e8           mov eax, ebp
0x00008cb5      4801f9         add rcx, rdi
0x00008cb8      83c802         or eax, 2
0x00008cbb      49890f         mov qword [r15], rcx
0x00008cbe      803900         cmp byte [rcx], 0
0x00008cc1      49891e         mov qword [r14], rbx
0x00008cc4      0f45e8         cmovne ebp, eax
0x00008cc7      e9c1feffff     jmp 0x8b8d
0x00008ccc      49891e         mov qword [r14], rbx
0x00008ccf      83cd02         or ebp, 2
0x00008cd2      e9b6feffff     jmp 0x8b8d
0x00008cd7      ba02000000     mov edx, 2
0x00008cdc      4889d0         mov rax, rdx
0x00008cdf      48f7e3         mul rbx
0x00008ce2      0f8096000000   jo 0x8d7e
0x00008ce8      4801db         add rbx, rbx
0x00008ceb      ebc3           jmp 0x8cb0
0x00008ced      ba00020000     mov edx, 0x200
0x00008cf2      4889d0         mov rax, rdx
0x00008cf5      48f7e3         mul rbx
0x00008cf8      0f8080000000   jo 0x8d7e
0x00008cfe      48c1e309       shl rbx, 9
0x00008d02      ebac           jmp 0x8cb0
0x00008d04      41b807000000   mov r8d, 7
0x00008d0a      4531c9         xor r9d, r9d
0x00008d0d      0f1f00         nop dword [rax]
0x00008d10      4889d8         mov rax, rbx
0x00008d13      48f7e6         mul rsi
0x00008d16      4889c3         mov rbx, rax
0x00008d19      0f808f010000   jo 0x8eae
0x00008d1f      4183e801       sub r8d, 1
0x00008d23      75eb           jne 0x8d10
0x00008d25      4409cd         or ebp, r9d
0x00008d28      eb86           jmp 0x8cb0
0x00008d2a      41b808000000   mov r8d, 8
0x00008d30      4531c9         xor r9d, r9d
0x00008d33      0f1f440000     nop dword [rax + rax]
0x00008d38      4889d8         mov rax, rbx
0x00008d3b      48f7e6         mul rsi
0x00008d3e      4889c3         mov rbx, rax
0x00008d41      0f8049010000   jo 0x8e90
0x00008d47      4183e801       sub r8d, 1
0x00008d4b      75eb           jne 0x8d38
0x00008d4d      ebd6           jmp 0x8d25
0x00008d4f      41b804000000   mov r8d, 4
0x00008d55      4531c9         xor r9d, r9d
0x00008d58      4889d8         mov rax, rbx
0x00008d5b      48f7e6         mul rsi
0x00008d5e      4889c3         mov rbx, rax
0x00008d61      0f80fc000000   jo 0x8e63
0x00008d67      4183e801       sub r8d, 1
0x00008d6b      75eb           jne 0x8d58
0x00008d6d      ebb6           jmp 0x8d25
0x00008d6f      4889d8         mov rax, rbx
0x00008d72      48f7e6         mul rsi
0x00008d75      4889c3         mov rbx, rax
0x00008d78      0f8132ffffff   jno 0x8cb0
0x00008d7e      bd01000000     mov ebp, 1
0x00008d83      4883cbff       or rbx, 0xffffffffffffffff
0x00008d87      e924ffffff     jmp 0x8cb0
0x00008d8c      0f1f4000       nop dword [rax]
0x00008d90      41b805000000   mov r8d, 5
0x00008d96      4531c9         xor r9d, r9d
0x00008d99      4889d8         mov rax, rbx
0x00008d9c      48f7e6         mul rsi
0x00008d9f      4889c3         mov rbx, rax
0x00008da2      0f80f7000000   jo 0x8e9f
0x00008da8      4183e801       sub r8d, 1
0x00008dac      75eb           jne 0x8d99
0x00008dae      e972ffffff     jmp 0x8d25
0x00008db3      41b806000000   mov r8d, 6
0x00008db9      4531c9         xor r9d, r9d
0x00008dbc      4889d8         mov rax, rbx
0x00008dbf      48f7e6         mul rsi
0x00008dc2      4889c3         mov rbx, rax
0x00008dc5      0f8089000000   jo 0x8e54
0x00008dcb      4183e801       sub r8d, 1
0x00008dcf      75eb           jne 0x8dbc
0x00008dd1      e94fffffff     jmp 0x8d25
0x00008dd6      ba00040000     mov edx, 0x400
0x00008ddb      4889d0         mov rax, rdx
0x00008dde      48f7e3         mul rbx
0x00008de1      709b           jo 0x8d7e
0x00008de3      48c1e30a       shl rbx, 0xa
0x00008de7      e9c4feffff     jmp 0x8cb0
0x00008dec      4889d8         mov rax, rbx
0x00008def      48f7e6         mul rsi
0x00008df2      0f80c5000000   jo 0x8ebd
0x00008df8      4531c0         xor r8d, r8d
0x00008dfb      48f7e6         mul rsi
0x00008dfe      0f8193feffff   jno 0x8c97
0x00008e04      41b801000000   mov r8d, 1
0x00008e0a      4883c8ff       or rax, 0xffffffffffffffff
0x00008e0e      e984feffff     jmp 0x8c97
0x00008e13      0f1f440000     nop dword [rax + rax]
0x00008e18      31ff           xor edi, edi
0x00008e1a      80790242       cmp byte [rcx + 2], 0x42
0x00008e1e      be00040000     mov esi, 0x400
0x00008e23      400f94c7       sete dil
0x00008e27      8d7c3f01       lea edi, [rdi + rdi + 1]
0x00008e2b      e93afeffff     jmp 0x8c6a
0x00008e30      e86b8fffff     call sym.imp.__stack_chk_fail
0x00008e35      488d0da42300.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0xb1e0 ; "xstrtoumax"
0x00008e3c      488d357d2200.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0xb0c0 ; "../coreutils-8.31/lib/xstrtol.c"
0x00008e43      488d3d962200.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0xb0e0 ; "0 <= strtol_base && strtol_base <= 36"
0x00008e4a      ba54000000     mov edx, 0x54                           ; 'T'
0x00008e4f      e8fc8fffff     call sym.imp.__assert_fail
0x00008e54      41b901000000   mov r9d, 1
0x00008e5a      4883cbff       or rbx, 0xffffffffffffffff
0x00008e5e      e968ffffff     jmp 0x8dcb
0x00008e63      41b901000000   mov r9d, 1
0x00008e69      4883cbff       or rbx, 0xffffffffffffffff
0x00008e6d      e9f5feffff     jmp 0x8d67
0x00008e72      41b801000000   mov r8d, 1
0x00008e78      4883cbff       or rbx, 0xffffffffffffffff
0x00008e7c      e922feffff     jmp 0x8ca3
0x00008e81      4883c8ff       or rax, 0xffffffffffffffff
0x00008e85      41b801000000   mov r8d, 1
0x00008e8b      e907feffff     jmp 0x8c97
0x00008e90      41b901000000   mov r9d, 1
0x00008e96      4883cbff       or rbx, 0xffffffffffffffff
0x00008e9a      e9a8feffff     jmp 0x8d47
0x00008e9f      41b901000000   mov r9d, 1
0x00008ea5      4883cbff       or rbx, 0xffffffffffffffff
0x00008ea9      e9fafeffff     jmp 0x8da8
0x00008eae      41b901000000   mov r9d, 1
0x00008eb4      4883cbff       or rbx, 0xffffffffffffffff
0x00008eb8      e962feffff     jmp 0x8d1f
0x00008ebd      41b801000000   mov r8d, 1
0x00008ec3      4883c8ff       or rax, 0xffffffffffffffff
0x00008ec7      e92fffffff     jmp 0x8dfb
0x00008ecc      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00008ed0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00008ed2      55             push rbp
0x00008ed3      53             push rbx
0x00008ed4      4889fb         mov rbx, rdi
0x00008ed7      e84490ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00008edc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00008ede      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00008ee1      7854           js 0x8f37                               ; ../coreutils-8.31/lib/fclose.c:66
0x00008ee3      e8a890ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00008ee8      85c0           test eax, eax
0x00008eea      752c           jne 0x8f18
0x00008eec      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00008eef      e8dc020000     call sym.rpl_fflush
0x00008ef4      85c0           test eax, eax
0x00008ef6      743c           je 0x8f34
0x00008ef8      e8738dffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00008efd      448b20         mov r12d, dword [rax]
0x00008f00      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00008f03      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00008f06      e8458effff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00008f0b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00008f0e      7530           jne 0x8f40
0x00008f10      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00008f11      5d             pop rbp
0x00008f12      415c           pop r12
0x00008f14      c3             ret
0x00008f15      0f1f00         nop dword [rax]
0x00008f18      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00008f1b      e80090ffff     call sym.imp.fileno
0x00008f20      31f6           xor esi, esi
0x00008f22      ba01000000     mov edx, 1
0x00008f27      89c7           mov edi, eax
0x00008f29      e8028fffff     call sym.imp.lseek
0x00008f2e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00008f32      75b8           jne 0x8eec
0x00008f34      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00008f37      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00008f38      5d             pop rbp
0x00008f39      415c           pop r12
0x00008f3b      e9108effff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00008f40      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00008f44      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00008f49      ebc5           jmp 0x8f10
0x00008f4b      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x00008f50      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x00008f52      55             push rbp
0x00008f53      89fd           mov ebp, edi
0x00008f55      53             push rbx
0x00008f56      4883ec50       sub rsp, 0x50
0x00008f5a      64488b042528.  mov rax, qword fs:[0x28]
0x00008f63      4889442418     mov qword [rsp + 0x18], rax
0x00008f68      31c0           xor eax, eax
0x00008f6a      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x00008f6f      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x00008f71      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x00008f76      48894c2438     mov qword [rsp + 0x38], rcx
0x00008f7b      4c89442440     mov qword [rsp + 0x40], r8
0x00008f80      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x00008f85      488d442420     lea rax, [rsp + 0x20]
0x00008f8a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x00008f8f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x00008f96      4889442410     mov qword [rsp + 0x10], rax
0x00008f9b      0f8401020000   je 0x91a2                               ; ../coreutils-8.31/lib/fcntl.c:210
0x00008fa1      81fe06040000   cmp esi, 0x406
0x00008fa7      7547           jne 0x8ff0
0x00008fa9      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x00008fae      833da3522000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x20e258:4]=0
0x00008fb5      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x2a40 rip
0x00008fbc      448b6010       mov r12d, dword [rax + 0x10]
0x00008fc0      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00008fc3      0f882a010000   js 0x90f3                               ; ../coreutils-8.31/lib/fcntl.c:507
0x00008fc9      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00008fcb      be06040000     mov esi, 0x406
0x00008fd0      e82b8dffff     call sym.imp.fcntl
0x00008fd5      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00008fd7      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00008fd9      0f8889010000   js 0x9168                               ; ../coreutils-8.31/lib/fcntl.c:510
0x00008fdf      c7056f522000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x20e258:4]=0
0x00008fe9      eb45           jmp 0x9030
0x00008feb      0f1f440000     nop dword [rax + rax]
0x00008ff0      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x00008ff3      742b           je 0x9020
0x00008ff5      7f59           jg 0x9050
0x00008ff7      83fe04         cmp esi, 4
0x00008ffa      0f84d0000000   je 0x90d0
0x00009000      0f8fba000000   jg 0x90c0
0x00009006      83fe02         cmp esi, 2
0x00009009      0f84c1000000   je 0x90d0
0x0000900f      7f0f           jg 0x9020
0x00009011      83fe01         cmp esi, 1
0x00009014      7562           jne 0x9078
0x00009016      662e0f1f8400.  nop word cs:[rax + rax]
0x00009020      89ef           mov edi, ebp
0x00009022      31c0           xor eax, eax
0x00009024      e8d78cffff     call sym.imp.fcntl
0x00009029      89c3           mov ebx, eax
0x0000902b      0f1f440000     nop dword [rax + rax]
0x00009030      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00009035      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000903e      89d8           mov eax, ebx
0x00009040      0f8557010000   jne 0x919d                              ; ../coreutils-8.31/lib/fcntl.c:355
0x00009046      4883c450       add rsp, 0x50
0x0000904a      5b             pop rbx
0x0000904b      5d             pop rbp
0x0000904c      415c           pop r12
0x0000904e      c3             ret
0x0000904f      90             nop
0x00009050      81fe07040000   cmp esi, 0x407
0x00009056      7f48           jg 0x90a0
0x00009058      81fe06040000   cmp esi, 0x406
0x0000905e      7d70           jge 0x90d0
0x00009060      81fe01040000   cmp esi, 0x401
0x00009066      74b8           je 0x9020
0x00009068      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x0000906e      7460           je 0x90d0
0x00009070      81fe00040000   cmp esi, 0x400
0x00009076      7458           je 0x90d0
0x00009078      8b0424         mov eax, dword [rsp]
0x0000907b      83f82f         cmp eax, 0x2f
0x0000907e      0f8736010000   ja 0x91ba
0x00009084      4803442410     add rax, qword [rsp + 0x10]
0x00009089      488b10         mov rdx, qword [rax]
0x0000908c      89ef           mov edi, ebp
0x0000908e      31c0           xor eax, eax
0x00009090      e86b8cffff     call sym.imp.fcntl
0x00009095      89c3           mov ebx, eax
0x00009097      eb97           jmp 0x9030
0x00009099      0f1f80000000.  nop dword [rax]
0x000090a0      81fe09040000   cmp esi, 0x409
0x000090a6      7428           je 0x90d0
0x000090a8      0f8c72ffffff   jl 0x9020
0x000090ae      81fe0a040000   cmp esi, 0x40a
0x000090b4      75c2           jne 0x9078
0x000090b6      e965ffffff     jmp 0x9020                              ; ../coreutils-8.31/lib/fcntl.c:350
0x000090bb      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x000090c0      83fe09         cmp esi, 9
0x000090c3      0f8457ffffff   je 0x9020
0x000090c9      7f05           jg 0x90d0
0x000090cb      83fe08         cmp esi, 8
0x000090ce      75a8           jne 0x9078
0x000090d0      8b0424         mov eax, dword [rsp]
0x000090d3      83f82f         cmp eax, 0x2f
0x000090d6      0f87e8000000   ja 0x91c4
0x000090dc      4803442410     add rax, qword [rsp + 0x10]
0x000090e1      8b10           mov edx, dword [rax]
0x000090e3      89ef           mov edi, ebp
0x000090e5      31c0           xor eax, eax
0x000090e7      e8148cffff     call sym.imp.fcntl
0x000090ec      89c3           mov ebx, eax
0x000090ee      e93dffffff     jmp 0x9030
0x000090f3      31f6           xor esi, esi
0x000090f5      31c0           xor eax, eax
0x000090f7      e8048cffff     call sym.imp.fcntl
0x000090fc      85c0           test eax, eax
0x000090fe      89c3           mov ebx, eax
0x00009100      0f882affffff   js 0x9030
0x00009106      833d4b512000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20e258:4]=0
0x0000910d      0f851dffffff   jne 0x9030
0x00009113      31c0           xor eax, eax
0x00009115      be01000000     mov esi, 1
0x0000911a      89df           mov edi, ebx
0x0000911c      e8df8bffff     call sym.imp.fcntl
0x00009121      85c0           test eax, eax
0x00009123      781c           js 0x9141
0x00009125      83c801         or eax, 1
0x00009128      be02000000     mov esi, 2
0x0000912d      89df           mov edi, ebx
0x0000912f      89c2           mov edx, eax
0x00009131      31c0           xor eax, eax
0x00009133      e8c88bffff     call sym.imp.fcntl
0x00009138      83f8ff         cmp eax, 0xffffffff
0x0000913b      0f85effeffff   jne 0x9030
0x00009141      e82a8bffff     call sym.imp.__errno_location
0x00009146      448b20         mov r12d, dword [rax]
0x00009149      4889c5         mov rbp, rax
0x0000914c      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x0000914e      e83d8dffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x00009153      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00009158      44896500       mov dword [rbp], r12d
0x0000915c      e9cffeffff     jmp 0x9030
0x00009161      0f1f80000000.  nop dword [rax]
0x00009168      e8038bffff     call sym.imp.__errno_location
0x0000916d      833816         cmp dword [rax], 0x16
0x00009170      0f8569feffff   jne 0x8fdf
0x00009176      31f6           xor esi, esi
0x00009178      31c0           xor eax, eax
0x0000917a      4489e2         mov edx, r12d
0x0000917d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x0000917f      e87c8bffff     call sym.imp.fcntl
0x00009184      85c0           test eax, eax
0x00009186      89c3           mov ebx, eax
0x00009188      0f88a2feffff   js 0x9030
0x0000918e      c705c0502000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20e258:4]=0
0x00009198      e976ffffff     jmp 0x9113
0x0000919d      e8fe8bffff     call sym.imp.__stack_chk_fail
0x000091a2      488b442410     mov rax, qword [rsp + 0x10]
0x000091a7      31f6           xor esi, esi
0x000091a9      8b5010         mov edx, dword [rax + 0x10]
0x000091ac      31c0           xor eax, eax
0x000091ae      e84d8bffff     call sym.imp.fcntl
0x000091b3      89c3           mov ebx, eax
0x000091b5      e976feffff     jmp 0x9030
0x000091ba      488b442408     mov rax, qword [rsp + 8]
0x000091bf      e9c5feffff     jmp 0x9089
0x000091c4      488b442408     mov rax, qword [rsp + 8]
0x000091c9      e913ffffff     jmp 0x90e1
0x000091ce      6690           nop
;-- rpl_fflush:
0x000091d0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x000091d3      53             push rbx
0x000091d4      4889fb         mov rbx, rdi
0x000091d7      7411           je 0x91ea                               ; ../coreutils-8.31/lib/fflush.c:150
0x000091d9      e8b28dffff     call sym.imp.__freading
0x000091de      85c0           test eax, eax
0x000091e0      7408           je 0x91ea
0x000091e2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x000091e8      750e           jne 0x91f8
0x000091ea      4889df         mov rdi, rbx
0x000091ed      5b             pop rbx
0x000091ee      e96d8dffff     jmp sym.imp.fflush
0x000091f3      0f1f440000     nop dword [rax + rax]
0x000091f8      4889df         mov rdi, rbx
0x000091fb      ba01000000     mov edx, 1
0x00009200      31f6           xor esi, esi
0x00009202      e809000000     call sym.rpl_fseeko
0x00009207      4889df         mov rdi, rbx
0x0000920a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000920b      e9508dffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00009210      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00009214      48394710       cmp qword [rdi + 0x10], rax
0x00009218      7406           je 0x9220                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000921a      e9418effff     jmp sym.imp.fseeko
0x0000921f      90             nop
0x00009220      488b4720       mov rax, qword [rdi + 0x20]
0x00009224      48394728       cmp qword [rdi + 0x28], rax
0x00009228      75f0           jne 0x921a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000922a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000922f      75e9           jne 0x921a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00009231      4154           push r12
0x00009233      55             push rbp
0x00009234      4189d4         mov r12d, edx
0x00009237      53             push rbx
0x00009238      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000923b      4889fb         mov rbx, rdi
0x0000923e      e8dd8cffff     call sym.imp.fileno
0x00009243      4489e2         mov edx, r12d
0x00009246      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00009249      89c7           mov edi, eax
0x0000924b      e8e08bffff     call sym.imp.lseek
0x00009250      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009254      740c           je 0x9262
0x00009256      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00009259      488983900000.  mov qword [rbx + 0x90], rax
0x00009260      31c0           xor eax, eax
0x00009262      5b             pop rbx
0x00009263      5d             pop rbp
0x00009264      415c           pop r12
0x00009266      c3             ret
0x00009267      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00009270      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00009272      4154           push r12
0x00009274      4989f5         mov r13, rsi
0x00009277      55             push rbp
0x00009278      53             push rbx
0x00009279      4889fb         mov rbx, rdi
0x0000927c      4989d4         mov r12, rdx
0x0000927f      4883ec18       sub rsp, 0x18
0x00009283      64488b042528.  mov rax, qword fs:[0x28]
0x0000928c      4889442408     mov qword [rsp + 8], rax
0x00009291      31c0           xor eax, eax
0x00009293      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00009298      4885ff         test rdi, rdi
0x0000929b      480f44d8       cmove rbx, rax
0x0000929f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000092a2      e8298bffff     call sym.imp.mbrtowc
0x000092a7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000092ab      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000092ae      7620           jbe 0x92d0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000092b0      4d85e4         test r12, r12
0x000092b3      741b           je 0x92d0
0x000092b5      31ff           xor edi, edi
0x000092b7      e864010000     call sym.hard_locale
0x000092bc      84c0           test al, al
0x000092be      7510           jne 0x92d0
0x000092c0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000092c5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x000092ca      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000092cc      0f1f4000       nop dword [rax]
0x000092d0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x000092d5      644833142528.  xor rdx, qword fs:[0x28]
0x000092de      4889e8         mov rax, rbp
0x000092e1      750b           jne 0x92ee
0x000092e3      4883c418       add rsp, 0x18
0x000092e7      5b             pop rbx
0x000092e8      5d             pop rbp
0x000092e9      415c           pop r12
0x000092eb      415d           pop r13
0x000092ed      c3             ret
0x000092ee      e8ad8affff     call sym.imp.__stack_chk_fail
0x000092f3      662e0f1f8400.  nop word cs:[rax + rax]
0x000092fd      0f1f00         nop dword [rax]
;-- close_stream:
0x00009300      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00009302      55             push rbp
0x00009303      4889fd         mov rbp, rdi
0x00009306      53             push rbx
0x00009307      e8b489ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000930c      8b5d00         mov ebx, dword [rbp]
0x0000930f      4889ef         mov rdi, rbp
0x00009312      4989c4         mov r12, rax
0x00009315      e8b6fbffff     call sym.rpl_fclose
0x0000931a      83e320         and ebx, 0x20                           ; "@"
0x0000931d      85db           test ebx, ebx
0x0000931f      7517           jne 0x9338
0x00009321      85c0           test eax, eax
0x00009323      740a           je 0x932f                               ; stdio.h:-186
0x00009325      4d85e4         test r12, r12                           ; stdio.h:-178
0x00009328      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000932d      7439           je 0x9368
0x0000932f      5b             pop rbx
0x00009330      5d             pop rbp
0x00009331      415c           pop r12
0x00009333      c3             ret
0x00009334      0f1f4000       nop dword [rax]
0x00009338      85c0           test eax, eax
0x0000933a      751c           jne 0x9358
0x0000933c      e82f89ffff     call sym.imp.__errno_location
0x00009341      c70000000000   mov dword [rax], 0
0x00009347      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000934c      5b             pop rbx
0x0000934d      5d             pop rbp
0x0000934e      415c           pop r12
0x00009350      c3             ret
0x00009351      0f1f80000000.  nop dword [rax]
0x00009358      5b             pop rbx
0x00009359      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000935e      5d             pop rbp                                 ; stdio.h:-186
0x0000935f      415c           pop r12
0x00009361      c3             ret
0x00009362      660f1f440000   nop word [rax + rax]
0x00009368      e80389ffff     call sym.imp.__errno_location
0x0000936d      833809         cmp dword [rax], 9
0x00009370      5b             pop rbx
0x00009371      5d             pop rbp
0x00009372      415c           pop r12                                 ; stdio.h:-178
0x00009374      0f95c0         setne al
0x00009377      0fb6c0         movzx eax, al
0x0000937a      f7d8           neg eax
0x0000937c      c3             ret
0x0000937d      0f1f00         nop dword [rax]
;-- fopen_safer:
0x00009380      4154           push r12                                ; ../coreutils-8.31/lib/fopen-safer.c:32
0x00009382      55             push rbp
0x00009383      4889f5         mov rbp, rsi
0x00009386      53             push rbx
0x00009387      e8e48cffff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/fopen-safer.c:33
0x0000938c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fopen-safer.c:35
0x0000938f      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:33
0x00009392      740d           je 0x93a1                               ; ../coreutils-8.31/lib/fopen-safer.c:35
0x00009394      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:37
0x00009397      e8848bffff     call sym.imp.fileno
0x0000939c      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/fopen-safer.c:39
0x0000939f      760f           jbe 0x93b0
0x000093a1      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:63
0x000093a4      5b             pop rbx
0x000093a5      5d             pop rbp
0x000093a6      415c           pop r12
0x000093a8      c3             ret
0x000093a9      0f1f80000000.  nop dword [rax]
0x000093b0      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fopen-safer.c:41
0x000093b2      e809010000     call sym.dup_safer
0x000093b7      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:43
0x000093b9      4189c4         mov r12d, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:41
0x000093bc      783a           js 0x93f8                               ; ../coreutils-8.31/lib/fopen-safer.c:43
0x000093be      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:51
0x000093c1      e80afbffff     call sym.rpl_fclose
0x000093c6      85c0           test eax, eax
0x000093c8      7513           jne 0x93dd
0x000093ca      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fopen-safer.c:52
0x000093cd      4489e7         mov edi, r12d
0x000093d0      e8eb8bffff     call sym.imp.fdopen
0x000093d5      4885c0         test rax, rax
0x000093d8      4889c3         mov rbx, rax
0x000093db      75c4           jne 0x93a1
0x000093dd      e88e88ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:54
0x000093e2      8b28           mov ebp, dword [rax]
0x000093e4      4889c3         mov rbx, rax
0x000093e7      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/fopen-safer.c:55
0x000093ea      e8a18affff     call sym.imp.close
0x000093ef      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/fopen-safer.c:56
0x000093f1      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:57
0x000093f3      ebac           jmp 0x93a1
0x000093f5      0f1f00         nop dword [rax]
0x000093f8      e87388ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:45
0x000093fd      448b20         mov r12d, dword [rax]
0x00009400      4889c5         mov rbp, rax
0x00009403      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:46
0x00009406      e8c5faffff     call sym.rpl_fclose
0x0000940b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:48
0x0000940d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fopen-safer.c:47
0x00009411      eb8e           jmp 0x93a1                              ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00009413      662e0f1f8400.  nop word cs:[rax + rax]
0x0000941d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00009420      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00009424      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00009426      e8a58bffff     call sym.imp.setlocale
0x0000942b      4889c2         mov rdx, rax
0x0000942e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00009433      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00009436      741d           je 0x9455
0x00009438      488d3dac1d00.  lea rdi, [0x0000b1eb]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000943f      b902000000     mov ecx, 2
0x00009444      4889d6         mov rsi, rdx
0x00009447      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00009449      0f97c1         seta cl
0x0000944c      80d900         sbb cl, 0
0x0000944f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00009451      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00009453      750b           jne 0x9460
0x00009455      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00009459      c3             ret
0x0000945a      660f1f440000   nop word [rax + rax]
0x00009460      488d3d861d00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0xb1ed ; "POSIX"
0x00009467      b906000000     mov ecx, 6
0x0000946c      4889d6         mov rsi, rdx
0x0000946f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00009471      0f97c0         seta al
0x00009474      1c00           sbb al, 0
0x00009476      84c0           test al, al
0x00009478      0f95c0         setne al
0x0000947b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000947f      c3             ret
;-- locale_charset:
0x00009480      4883ec08       sub rsp, 8
0x00009484      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00009489      e8e28affff     call sym.imp.nl_langinfo
0x0000948e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00009491      741d           je 0x94b0
0x00009493      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00009496      488d15561d00.  lea rdx, str.ASCII                      ; 0xb1f3 ; "ASCII"
0x0000949d      480f44c2       cmove rax, rdx
0x000094a1      4883c408       add rsp, 8
0x000094a5      c3             ret
0x000094a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000094b0      488d053c1d00.  lea rax, str.ASCII                      ; 0xb1f3 ; "ASCII"
0x000094b7      4883c408       add rsp, 8
0x000094bb      c3             ret
0x000094bc      0f1f4000       nop dword [rax]
;-- dup_safer:
0x000094c0      ba03000000     mov edx, 3
0x000094c5      31f6           xor esi, esi
0x000094c7      31c0           xor eax, eax
0x000094c9      e982faffff     jmp sym.rpl_fcntl
0x000094ce      6690           nop
;-- __libc_csu_init:
0x000094d0      4157           push r15
0x000094d2      4156           push r14
0x000094d4      4989d7         mov r15, rdx
0x000094d7      4155           push r13
0x000094d9      4154           push r12
0x000094db      4c8d256e4420.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20d950 ; "@+"
0x000094e2      55             push rbp
0x000094e3      488d2d6e4420.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20d958
0x000094ea      53             push rbx
0x000094eb      4189fd         mov r13d, edi
0x000094ee      4989f6         mov r14, rsi
0x000094f1      4c29e5         sub rbp, r12
0x000094f4      4883ec08       sub rsp, 8
0x000094f8      48c1fd03       sar rbp, 3
0x000094fc      e81787ffff     call sym._init
0x00009501      4885ed         test rbp, rbp
0x00009504      7420           je 0x9526
0x00009506      31db           xor ebx, ebx
0x00009508      0f1f84000000.  nop dword [rax + rax]
0x00009510      4c89fa         mov rdx, r15
0x00009513      4c89f6         mov rsi, r14
0x00009516      4489ef         mov edi, r13d
0x00009519      41ff14dc       call qword [r12 + rbx*8]
0x0000951d      4883c301       add rbx, 1
0x00009521      4839dd         cmp rbp, rbx
0x00009524      75ea           jne 0x9510
0x00009526      4883c408       add rsp, 8
0x0000952a      5b             pop rbx
0x0000952b      5d             pop rbp
0x0000952c      415c           pop r12
0x0000952e      415d           pop r13
0x00009530      415e           pop r14
0x00009532      415f           pop r15
0x00009534      c3             ret
0x00009535      90             nop
0x00009536      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00009540      f3c3           ret
0x00009542      662e0f1f8400.  nop word cs:[rax + rax]
0x0000954c      0f1f4000       nop dword [rax]
;-- atexit:
0x00009550      488b15b14a20.  mov rdx, qword [obj.__dso_handle]       ; [0x20e008:8]=0x20e008 obj.__dso_handle
0x00009557      31f6           xor esi, esi
0x00009559      e9228bffff     jmp sym.imp.__cxa_atexit
0x0000955e      0000           add byte [rax], al
