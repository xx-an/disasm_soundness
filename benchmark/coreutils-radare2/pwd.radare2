;-- section..plt:
;-- .plt:
0x00001470      ff359a692000   push qword [0x00207e10]                 ; [12] -r-x section size 848 named .plt
0x00001476      ff259c692000   jmp qword [0x00207e18]                  ; [0x207e18:8]=0
0x0000147c      0f1f4000       nop dword [rax]
;-- imp.getenv:
0x00001480      ff259a692000   jmp qword [reloc.getenv]                ; [0x207e20:8]=0x1486
0x00001486      6800000000     push 0
0x0000148b      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x00001490      ff2592692000   jmp qword [reloc.free]                  ; [0x207e28:8]=0x1496
0x00001496      6801000000     push 1
0x0000149b      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x000014a0      ff258a692000   jmp qword [reloc.abort]                 ; [0x207e30:8]=0x14a6
0x000014a6      6802000000     push 2
0x000014ab      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000014b0      ff2582692000   jmp qword [reloc.__errno_location]      ; [0x207e38:8]=0x14b6
0x000014b6      6803000000     push 3
0x000014bb      e9b0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000014c0      ff257a692000   jmp qword [reloc.strncmp]               ; [0x207e40:8]=0x14c6
0x000014c6      6804000000     push 4
0x000014cb      e9a0ffffff     jmp sym..plt
;-- imp._exit:
0x000014d0      ff2572692000   jmp qword [reloc._exit]                 ; [0x207e48:8]=0x14d6
0x000014d6      6805000000     push 5
0x000014db      e990ffffff     jmp sym..plt
;-- imp.__fpending:
0x000014e0      ff256a692000   jmp qword [reloc.__fpending]            ; [0x207e50:8]=0x14e6
0x000014e6      6806000000     push 6
0x000014eb      e980ffffff     jmp sym..plt
;-- imp.puts:
0x000014f0      ff2562692000   jmp qword [reloc.puts]                  ; [0x207e58:8]=0x14f6
0x000014f6      6807000000     push 7
0x000014fb      e970ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001500      ff255a692000   jmp qword [reloc.textdomain]            ; [0x207e60:8]=0x1506
0x00001506      6808000000     push 8
0x0000150b      e960ffffff     jmp sym..plt
;-- imp.fclose:
0x00001510      ff2552692000   jmp qword [reloc.fclose]                ; [0x207e68:8]=0x1516
0x00001516      6809000000     push 9
0x0000151b      e950ffffff     jmp sym..plt
;-- imp.opendir:
0x00001520      ff254a692000   jmp qword [reloc.opendir]               ; [0x207e70:8]=0x1526 ; "&\x15"
0x00001526      680a000000     push 0xa
0x0000152b      e940ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001530      ff2542692000   jmp qword [reloc.bindtextdomain]        ; [0x207e78:8]=0x1536 ; "6\x15"
0x00001536      680b000000     push 0xb
0x0000153b      e930ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001540      ff253a692000   jmp qword [reloc.dcgettext]             ; [0x207e80:8]=0x1546 ; "F\x15"
0x00001546      680c000000     push 0xc
0x0000154b      e920ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001550      ff2532692000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x207e88:8]=0x1556 ; "V\x15"
0x00001556      680d000000     push 0xd
0x0000155b      e910ffffff     jmp sym..plt
;-- imp.strlen:
0x00001560      ff252a692000   jmp qword [reloc.strlen]                ; [0x207e90:8]=0x1566 ; "f\x15"
0x00001566      680e000000     push 0xe
0x0000156b      e900ffffff     jmp sym..plt
;-- imp.__lxstat:
0x00001570      ff2522692000   jmp qword [reloc.__lxstat]              ; [0x207e98:8]=0x1576 ; "v\x15"
0x00001576      680f000000     push 0xf
0x0000157b      e9f0feffff     jmp sym..plt
;-- imp.chdir:
0x00001580      ff251a692000   jmp qword [reloc.chdir]                 ; [0x207ea0:8]=0x1586
0x00001586      6810000000     push 0x10
0x0000158b      e9e0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001590      ff2512692000   jmp qword [reloc.__stack_chk_fail]      ; [0x207ea8:8]=0x1596
0x00001596      6811000000     push 0x11
0x0000159b      e9d0feffff     jmp sym..plt
;-- imp.getopt_long:
0x000015a0      ff250a692000   jmp qword [reloc.getopt_long]           ; [0x207eb0:8]=0x15a6
0x000015a6      6812000000     push 0x12
0x000015ab      e9c0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x000015b0      ff2502692000   jmp qword [reloc.mbrtowc]               ; [0x207eb8:8]=0x15b6
0x000015b6      6813000000     push 0x13
0x000015bb      e9b0feffff     jmp sym..plt
;-- imp.strrchr:
0x000015c0      ff25fa682000   jmp qword [reloc.strrchr]               ; [0x207ec0:8]=0x15c6
0x000015c6      6814000000     push 0x14
0x000015cb      e9a0feffff     jmp sym..plt
;-- imp.lseek:
0x000015d0      ff25f2682000   jmp qword [reloc.lseek]                 ; [0x207ec8:8]=0x15d6
0x000015d6      6815000000     push 0x15
0x000015db      e990feffff     jmp sym..plt
;-- imp.memset:
0x000015e0      ff25ea682000   jmp qword [reloc.memset]                ; [0x207ed0:8]=0x15e6
0x000015e6      6816000000     push 0x16
0x000015eb      e980feffff     jmp sym..plt
;-- imp.getcwd:
0x000015f0      ff25e2682000   jmp qword [reloc.getcwd]                ; [0x207ed8:8]=0x15f6
0x000015f6      6817000000     push 0x17
0x000015fb      e970feffff     jmp sym..plt
;-- imp.closedir:
0x00001600      ff25da682000   jmp qword [reloc.closedir]              ; [0x207ee0:8]=0x1606
0x00001606      6818000000     push 0x18
0x0000160b      e960feffff     jmp sym..plt
;-- imp.memcmp:
0x00001610      ff25d2682000   jmp qword [reloc.memcmp]                ; [0x207ee8:8]=0x1616
0x00001616      6819000000     push 0x19
0x0000161b      e950feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001620      ff25ca682000   jmp qword [reloc.fputs_unlocked]        ; [0x207ef0:8]=0x1626 ; "&\x16"
0x00001626      681a000000     push 0x1a
0x0000162b      e940feffff     jmp sym..plt
;-- imp.calloc:
0x00001630      ff25c2682000   jmp qword [reloc.calloc]                ; [0x207ef8:8]=0x1636 ; "6\x16"
0x00001636      681b000000     push 0x1b
0x0000163b      e930feffff     jmp sym..plt
;-- imp.dirfd:
0x00001640      ff25ba682000   jmp qword [reloc.dirfd]                 ; [0x207f00:8]=0x1646 ; "F\x16"
0x00001646      681c000000     push 0x1c
0x0000164b      e920feffff     jmp sym..plt
;-- imp.memcpy:
0x00001650      ff25b2682000   jmp qword [reloc.memcpy]                ; [0x207f08:8]=0x1656 ; "V\x16"
0x00001656      681d000000     push 0x1d
0x0000165b      e910feffff     jmp sym..plt
;-- imp.fileno:
0x00001660      ff25aa682000   jmp qword [reloc.fileno]                ; [0x207f10:8]=0x1666 ; "f\x16"
0x00001666      681e000000     push 0x1e
0x0000166b      e900feffff     jmp sym..plt
;-- imp.__xstat:
0x00001670      ff25a2682000   jmp qword [reloc.__xstat]               ; [0x207f18:8]=0x1676 ; "v\x16"
0x00001676      681f000000     push 0x1f
0x0000167b      e9f0fdffff     jmp sym..plt
;-- imp.readdir:
0x00001680      ff259a682000   jmp qword [reloc.readdir]               ; [0x207f20:8]=0x1686
0x00001686      6820000000     push 0x20                               ; "@"
0x0000168b      e9e0fdffff     jmp sym..plt
;-- imp.malloc:
0x00001690      ff2592682000   jmp qword [reloc.malloc]                ; [0x207f28:8]=0x1696
0x00001696      6821000000     push 0x21                               ; '!'
0x0000169b      e9d0fdffff     jmp sym..plt
;-- imp.fflush:
0x000016a0      ff258a682000   jmp qword [reloc.fflush]                ; [0x207f30:8]=0x16a6
0x000016a6      6822000000     push 0x22                               ; '"'
0x000016ab      e9c0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000016b0      ff2582682000   jmp qword [reloc.nl_langinfo]           ; [0x207f38:8]=0x16b6
0x000016b6      6823000000     push 0x23                               ; '#'
0x000016bb      e9b0fdffff     jmp sym..plt
;-- imp.__fxstat:
0x000016c0      ff257a682000   jmp qword [reloc.__fxstat]              ; [0x207f40:8]=0x16c6
0x000016c6      6824000000     push 0x24                               ; '$'
0x000016cb      e9a0fdffff     jmp sym..plt
;-- imp.__freading:
0x000016d0      ff2572682000   jmp qword [reloc.__freading]            ; [0x207f48:8]=0x16d6
0x000016d6      6825000000     push 0x25                               ; '%'
0x000016db      e990fdffff     jmp sym..plt
;-- imp.fchdir:
0x000016e0      ff256a682000   jmp qword [reloc.fchdir]                ; [0x207f50:8]=0x16e6
0x000016e6      6826000000     push 0x26                               ; '&'
0x000016eb      e980fdffff     jmp sym..plt
;-- imp.realloc:
0x000016f0      ff2562682000   jmp qword [reloc.realloc]               ; [0x207f58:8]=0x16f6
0x000016f6      6827000000     push 0x27                               ; '''
0x000016fb      e970fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001700      ff255a682000   jmp qword [reloc.setlocale]             ; [0x207f60:8]=0x1706
0x00001706      6828000000     push 0x28                               ; '('
0x0000170b      e960fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001710      ff2552682000   jmp qword [reloc.__printf_chk]          ; [0x207f68:8]=0x1716
0x00001716      6829000000     push 0x29                               ; ')'
0x0000171b      e950fdffff     jmp sym..plt
;-- imp.error:
0x00001720      ff254a682000   jmp qword [reloc.error]                 ; [0x207f70:8]=0x1726 ; "&\x17"
0x00001726      682a000000     push 0x2a                               ; '*'
0x0000172b      e940fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001730      ff2542682000   jmp qword [reloc.fseeko]                ; [0x207f78:8]=0x1736 ; "6\x17"
0x00001736      682b000000     push 0x2b                               ; '+'
0x0000173b      e930fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001740      ff253a682000   jmp qword [reloc.__cxa_atexit]          ; [0x207f80:8]=0x1746 ; "F\x17"
0x00001746      682c000000     push 0x2c                               ; ','
0x0000174b      e920fdffff     jmp sym..plt
;-- imp.exit:
0x00001750      ff2532682000   jmp qword [reloc.exit]                  ; [0x207f88:8]=0x1756 ; "V\x17"
0x00001756      682d000000     push 0x2d                               ; '-'
0x0000175b      e910fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001760      ff252a682000   jmp qword [reloc.fwrite]                ; [0x207f90:8]=0x1766 ; "f\x17"
0x00001766      682e000000     push 0x2e                               ; '.'
0x0000176b      e900fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001770      ff2522682000   jmp qword [reloc.__fprintf_chk]         ; [0x207f98:8]=0x1776 ; "v\x17"
0x00001776      682f000000     push 0x2f                               ; '/'
0x0000177b      e9f0fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001780      ff251a682000   jmp qword [reloc.mbsinit]               ; [0x207fa0:8]=0x1786
0x00001786      6830000000     push 0x30                               ; '0'
0x0000178b      e9e0fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001790      ff2512682000   jmp qword [reloc.iswprint]              ; [0x207fa8:8]=0x1796
0x00001796      6831000000     push 0x31                               ; '1'
0x0000179b      e9d0fcffff     jmp sym..plt
;-- imp.strstr:
0x000017a0      ff250a682000   jmp qword [reloc.strstr]                ; [0x207fb0:8]=0x17a6
0x000017a6      6832000000     push 0x32                               ; '2'
0x000017ab      e9c0fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000017b0      ff2502682000   jmp qword [reloc.__ctype_b_loc]         ; [0x207fb8:8]=0x17b6
0x000017b6      6833000000     push 0x33                               ; '3'
0x000017bb      e9b0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000017c0      .qword 0x90660020681a25ff                              ; [13] -r-x section size 8 named .plt.got
0x000017c8      0000           add byte [rax], al
0x000017ca      0000           add byte [rax], al
0x000017cc      0000           add byte [rax], al
0x000017ce      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x000017d0      4154           push r12                                ; [14] -r-x section size 14558 named .text
0x000017d2      55             push rbp
0x000017d3      89fd           mov ebp, edi
0x000017d5      53             push rbx
0x000017d6      488d3d053a00.  lea rdi, str.POSIXLY_CORRECT            ; 0x51e2 ; "POSIXLY_CORRECT"
0x000017dd      4889f3         mov rbx, rsi
0x000017e0      e89bfcffff     call sym.imp.getenv
0x000017e5      488b3b         mov rdi, qword [rbx]
0x000017e8      4885c0         test rax, rax
0x000017eb      410f95c4       setne r12b
0x000017ef      e8cc0e0000     call sym.set_program_name
0x000017f4      488d35433900.  lea rsi, [0x0000513e]
0x000017fb      bf06000000     mov edi, 6
0x00001800      e8fbfeffff     call sym.imp.setlocale
0x00001805      488d35e63900.  lea rsi, str.usr_local_share_locale     ; 0x51f2 ; "/usr/local/share/locale"
0x0000180c      488d3da63900.  lea rdi, [0x000051b9]                   ; "coreutils"
0x00001813      e818fdffff     call sym.imp.bindtextdomain
0x00001818      488d3d9a3900.  lea rdi, [0x000051b9]                   ; "coreutils"
0x0000181f      e8dcfcffff     call sym.imp.textdomain
0x00001824      488d3de50d00.  lea rdi, sym.close_stdout               ; 0x2610 ; "USH\x83\xec\bH\x8b=kZ "
0x0000182b      e870380000     call sym.atexit
0x00001830      488d0de96220.  lea rcx, obj.longopts                   ; 0x207b20 ; "8R"
0x00001837      488d15cc3900.  lea rdx, [0x0000520a]                   ; "LP"
0x0000183e      4531c0         xor r8d, r8d
0x00001841      4889de         mov rsi, rbx
0x00001844      89ef           mov edi, ebp
0x00001846      e855fdffff     call sym.imp.getopt_long
0x0000184b      83f8ff         cmp eax, 0xffffffff
0x0000184e      746b           je 0x18bb
0x00001850      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001855      0f842a010000   je 0x1985
0x0000185b      7e13           jle 0x1870
0x0000185d      83f84c         cmp eax, 0x4c
0x00001860      744e           je 0x18b0
0x00001862      83f850         cmp eax, 0x50
0x00001865      0f8510010000   jne 0x197b
0x0000186b      4531e4         xor r12d, r12d
0x0000186e      ebc0           jmp 0x1830
0x00001870      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001875      0f8500010000   jne 0x197b
0x0000187b      488b3d066820.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001882      488b0d876720.  mov rcx, qword [obj.Version]            ; [0x208010:8]=0x558b str.8.31
0x00001889      4c8d057d3900.  lea r8, str.Jim_Meyering                ; 0x520d ; "Jim Meyering"
0x00001890      488d151e3900.  lea rdx, str.GNU_coreutils              ; 0x51b5 ; "GNU coreutils"
0x00001897      488d35863800.  lea rsi, [0x00005124]                   ; "pwd"
0x0000189e      4531c9         xor r9d, r9d
0x000018a1      31c0           xor eax, eax
0x000018a3      e888300000     call sym.version_etc
0x000018a8      31ff           xor edi, edi
0x000018aa      e8a1feffff     call sym.imp.exit
0x000018af      90             nop
0x000018b0      41bc01000000   mov r12d, 1
0x000018b6      e975ffffff     jmp 0x1830
0x000018bb      392dcf672000   cmp dword [obj.optind], ebp             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208090:4]=0
0x000018c1      7c3d           jl 0x1900
0x000018c3      4584e4         test r12b, r12b
0x000018c6      740a           je 0x18d2
0x000018c8      e8d3010000     call sym.logical_getcwd
0x000018cd      4885c0         test rax, rax
0x000018d0      7524           jne 0x18f6
0x000018d2      e849340000     call sym.xgetcwd
0x000018d7      4885c0         test rax, rax
0x000018da      4889c3         mov rbx, rax
0x000018dd      7444           je 0x1923
0x000018df      4889c7         mov rdi, rax
0x000018e2      e809fcffff     call sym.imp.puts
0x000018e7      4889df         mov rdi, rbx
0x000018ea      e8a1fbffff     call sym.imp.free
0x000018ef      5b             pop rbx
0x000018f0      31c0           xor eax, eax
0x000018f2      5d             pop rbp
0x000018f3      415c           pop r12
0x000018f5      c3             ret
0x000018f6      4889c7         mov rdi, rax
0x000018f9      e8f2fbffff     call sym.imp.puts
0x000018fe      ebef           jmp 0x18ef
0x00001900      488d35133900.  lea rsi, str.ignoring_non_option_arguments ; 0x521a ; "ignoring non-option arguments"
0x00001907      31ff           xor edi, edi
0x00001909      ba05000000     mov edx, 5
0x0000190e      e82dfcffff     call sym.imp.dcgettext
0x00001913      31f6           xor esi, esi
0x00001915      4889c2         mov rdx, rax
0x00001918      31ff           xor edi, edi
0x0000191a      31c0           xor eax, eax
0x0000191c      e8fffdffff     call sym.imp.error
0x00001921      eba0           jmp 0x18c3
0x00001923      bf18000000     mov edi, 0x18
0x00001928      e863310000     call sym.xmalloc
0x0000192d      bf00200000     mov edi, 0x2000                         ; "$@H9\x84$`\x01"
0x00001932      4889c3         mov rbx, rax
0x00001935      48c740080020.  mov qword [rax + 8], 0x2000             ; [0x2000:8]=0x160248439484024 ; "$@H9\x84$`\x01"
0x0000193d      e84e310000     call sym.xmalloc
0x00001942      488b5308       mov rdx, qword [rbx + 8]
0x00001946      488903         mov qword [rbx], rax
0x00001949      4889df         mov rdi, rbx
0x0000194c      488d4410ff     lea rax, [rax + rdx - 1]
0x00001951      48894310       mov qword [rbx + 0x10], rax
0x00001955      c60000         mov byte [rax], 0
0x00001958      e8b3030000     call sym.robust_getcwd
0x0000195d      488b7b10       mov rdi, qword [rbx + 0x10]
0x00001961      e88afbffff     call sym.imp.puts
0x00001966      488b3b         mov rdi, qword [rbx]
0x00001969      e822fbffff     call sym.imp.free
0x0000196e      4889df         mov rdi, rbx
0x00001971      e81afbffff     call sym.imp.free
0x00001976      e974ffffff     jmp 0x18ef
0x0000197b      bf01000000     mov edi, 1
0x00001980      e8ab080000     call sym.usage
0x00001985      31ff           xor edi, edi
0x00001987      e8a4080000     call sym.usage
0x0000198c      0f1f4000       nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00001990      31ed           xor ebp, ebp
0x00001992      4989d1         mov r9, rdx
0x00001995      5e             pop rsi
0x00001996      4889e2         mov rdx, rsp
0x00001999      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000199d      50             push rax
0x0000199e      54             push rsp
0x0000199f      4c8d05ea3600.  lea r8, sym.__libc_csu_fini             ; 0x5090
0x000019a6      488d0d733600.  lea rcx, sym.__libc_csu_init            ; 0x5020 ; "AWAVI\x89\xd7AUATL\x8d%\xde* "
0x000019ad      488d3d1cfeff.  lea rdi, main                           ; sym.main
                                                                       ; 0x17d0 ; "ATU\x89\xfdSH\x8d=\x05:"
0x000019b4      ff150e662000   call qword [reloc.__libc_start_main]    ; [0x207fc8:8]=0
0x000019ba      f4             hlt
0x000019bb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x000019c0      488d3db96620.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x000019c7      55             push rbp
0x000019c8      488d05b16620.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x000019cf      4839f8         cmp rax, rdi
0x000019d2      4889e5         mov rbp, rsp
0x000019d5      7419           je 0x19f0
0x000019d7      488b05e26520.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x207fc0:8]=0
0x000019de      4885c0         test rax, rax
0x000019e1      740d           je 0x19f0
0x000019e3      5d             pop rbp
0x000019e4      ffe0           jmp rax
0x000019e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000019f0      5d             pop rbp
0x000019f1      c3             ret
0x000019f2      0f1f4000       nop dword [rax]
0x000019f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001a00      488d3d796620.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00001a07      488d35726620.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00001a0e      55             push rbp
0x00001a0f      4829fe         sub rsi, rdi
0x00001a12      4889e5         mov rbp, rsp
0x00001a15      48c1fe03       sar rsi, 3
0x00001a19      4889f0         mov rax, rsi
0x00001a1c      48c1e83f       shr rax, 0x3f
0x00001a20      4801c6         add rsi, rax
0x00001a23      48d1fe         sar rsi, 1
0x00001a26      7418           je 0x1a40
0x00001a28      488b05a96520.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x207fd8:8]=0
0x00001a2f      4885c0         test rax, rax
0x00001a32      740c           je 0x1a40
0x00001a34      5d             pop rbp
0x00001a35      ffe0           jmp rax
0x00001a37      660f1f840000.  nop word [rax + rax]
0x00001a40      5d             pop rbp
0x00001a41      c3             ret
0x00001a42      0f1f4000       nop dword [rax]
0x00001a46      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00001a50      803d51662000.  cmp byte [obj.completed.7697], 0        ; [0x2080a8:1]=0
0x00001a57      752f           jne 0x1a88
0x00001a59      48833d7f6520.  cmp qword [reloc.__cxa_finalize], 0     ; [0x207fe0:8]=0
0x00001a61      55             push rbp
0x00001a62      4889e5         mov rbp, rsp
0x00001a65      740c           je 0x1a73
0x00001a67      488b3d9a6520.  mov rdi, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x00001a6e      e84dfdffff     call sym..plt.got
0x00001a73      e848ffffff     call sym.deregister_tm_clones
0x00001a78      c60529662000.  mov byte [obj.completed.7697], 1        ; [0x2080a8:1]=0
0x00001a7f      5d             pop rbp
0x00001a80      c3             ret
0x00001a81      0f1f80000000.  nop dword [rax]
0x00001a88      f3c3           ret
0x00001a8a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00001a90      55             push rbp
0x00001a91      4889e5         mov rbp, rsp
0x00001a94      5d             pop rbp
0x00001a95      e966ffffff     jmp sym.register_tm_clones
0x00001a9a      660f1f440000   nop word [rax + rax]
;-- logical_getcwd:
0x00001aa0      55             push rbp                                ; .//src:301
0x00001aa1      53             push rbx
0x00001aa2      488d3d1b3600.  lea rdi, [0x000050c4]                   ; .//src:304 ; "PWD"
0x00001aa9      4881ec380100.  sub rsp, 0x138                          ; .//src:301
0x00001ab0      64488b042528.  mov rax, qword fs:[0x28]
0x00001ab9      488984242801.  mov qword [rsp + 0x128], rax
0x00001ac1      31c0           xor eax, eax
0x00001ac3      e8b8f9ffff     call sym.imp.getenv                     ; .//src:304
0x00001ac8      4885c0         test rax, rax                           ; .//src:308
0x00001acb      7453           je 0x1b20
0x00001acd      80382f         cmp byte [rax], 0x2f
0x00001ad0      4889c5         mov rbp, rax
0x00001ad3      754b           jne 0x1b20
0x00001ad5      4889c7         mov rdi, rax
0x00001ad8      488d1de93500.  lea rbx, [0x000050c8]                   ; .//src:311 ; "/."
0x00001adf      eb0b           jmp 0x1aec
0x00001ae1      0f1f80000000.  nop dword [rax]
0x00001ae8      488d7801       lea rdi, [rax + 1]                      ; .//src:316
0x00001aec      4889de         mov rsi, rbx                            ; .//src:311
0x00001aef      e8acfcffff     call sym.imp.strstr
0x00001af4      4885c0         test rax, rax
0x00001af7      7449           je 0x1b42
0x00001af9      0fb65002       movzx edx, byte [rax + 2]               ; .//src:313
0x00001afd      84d2           test dl, dl
0x00001aff      741f           je 0x1b20
0x00001b01      80fa2f         cmp dl, 0x2f
0x00001b04      741a           je 0x1b20
0x00001b06      80fa2e         cmp dl, 0x2e                            ; .//src:314
0x00001b09      75dd           jne 0x1ae8
0x00001b0b      0fb65003       movzx edx, byte [rax + 3]
0x00001b0f      84d2           test dl, dl
0x00001b11      740d           je 0x1b20
0x00001b13      80fa2f         cmp dl, 0x2f
0x00001b16      75d0           jne 0x1ae8
0x00001b18      0f1f84000000.  nop dword [rax + rax]
0x00001b20      31ed           xor ebp, ebp                            ; .//src:322
0x00001b22      488b8c242801.  mov rcx, qword [rsp + 0x128]            ; .//src:323
0x00001b2a      6448330c2528.  xor rcx, qword fs:[0x28]
0x00001b33      4889e8         mov rax, rbp
0x00001b36      755a           jne 0x1b92
0x00001b38      4881c4380100.  add rsp, 0x138
0x00001b3f      5b             pop rbx
0x00001b40      5d             pop rbp
0x00001b41      c3             ret
0x00001b42      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/src/d.c:451
0x00001b45      4889ee         mov rsi, rbp
0x00001b48      bf01000000     mov edi, 1
0x00001b4d      e81efbffff     call sym.imp.__xstat
0x00001b52      85c0           test eax, eax                           ; .//src:320
0x00001b54      75ca           jne 0x1b20
0x00001b56      488d94249000.  lea rdx, [rsp + 0x90]                   ; ../coreutils-8.31/src/d.c:451
0x00001b5e      488d35793500.  lea rsi, [0x000050de]                   ; "."
0x00001b65      bf01000000     mov edi, 1
0x00001b6a      e801fbffff     call sym.imp.__xstat
0x00001b6f      85c0           test eax, eax                           ; .//src:320
0x00001b71      75ad           jne 0x1b20
0x00001b73      488b84249800.  mov rax, qword [rsp + 0x98]
0x00001b7b      4839442408     cmp qword [rsp + 8], rax
0x00001b80      759e           jne 0x1b20
0x00001b82      488b84249000.  mov rax, qword [rsp + 0x90]
0x00001b8a      48390424       cmp qword [rsp], rax
0x00001b8e      7492           je 0x1b22
0x00001b90      eb8e           jmp 0x1b20
0x00001b92      e8f9f9ffff     call sym.imp.__stack_chk_fail           ; .//src:323
0x00001b97      660f1f840000.  nop word [rax + rax]
;-- nth_parent:
0x00001ba0      55             push rbp                                ; .//src:128
0x00001ba1      53             push rbx
0x00001ba2      b803000000     mov eax, 3                              ; stat.h:101 #include <bits/stat.h>
0x00001ba7      4889fd         mov rbp, rdi                            ; .//src:128
0x00001baa      4883ec08       sub rsp, 8
0x00001bae      48f7e7         mul rdi                                 ; stat.h:101 #include <bits/stat.h>
0x00001bb1      7063           jo 0x1c16
0x00001bb3      31c9           xor ecx, ecx
0x00001bb5      4885c0         test rax, rax
0x00001bb8      7863           js 0x1c1d
0x00001bba      4885c9         test rcx, rcx
0x00001bbd      755e           jne 0x1c1d
0x00001bbf      488d5c6d00     lea rbx, [rbp + rbp*2]                  ; stat.h:103 #if defined __USE_MISC || defined __USE_XOPEN
0x00001bc4      4889df         mov rdi, rbx
0x00001bc7      e8c42e0000     call sym.xmalloc
0x00001bcc      4885ed         test rbp, rbp                           ; .//src:132
0x00001bcf      7437           je 0x1c08
0x00001bd1      488d3c18       lea rdi, [rax + rbx]
0x00001bd5      4889c2         mov rdx, rax                            ; .//src:130
0x00001bd8      0f1f84000000.  nop dword [rax + rax]
0x00001be0      b92e2e0000     mov ecx, 0x2e2e                         ; ../coreutils-8.31/lib/xalloc.h:34 ; '..'
0x00001be5      c642022f       mov byte [rdx + 2], 0x2f                ; '/'
                                                                       ; [0x2f:1]=0
0x00001be9      4883c203       add rdx, 3
0x00001bed      66894afd       mov word [rdx - 3], cx
0x00001bf1      4839fa         cmp rdx, rdi
0x00001bf4      75ea           jne 0x1be0
0x00001bf6      c647ff00       mov byte [rdi - 1], 0                   ; .//src:1
0x00001bfa      4883c408       add rsp, 8                              ; .//src:-27
0x00001bfe      5b             pop rbx
0x00001bff      5d             pop rbp
0x00001c00      c3             ret
0x00001c01      0f1f80000000.  nop dword [rax]
0x00001c08      4889c7         mov rdi, rax                            ; .//src:-36
0x00001c0b      c647ff00       mov byte [rdi - 1], 0                   ; .//src:-29
0x00001c0f      4883c408       add rsp, 8                              ; .//src:-27
0x00001c13      5b             pop rbx
0x00001c14      5d             pop rbp
0x00001c15      c3             ret
0x00001c16      b901000000     mov ecx, 1                              ; stat.h:-65
0x00001c1b      eb98           jmp 0x1bb5
0x00001c1d      e8be300000     call sym.xalloc_die                     ; stat.h:-64
0x00001c22      0f1f4000       nop dword [rax]
0x00001c26      662e0f1f8400.  nop word cs:[rax + rax]
;-- file_name_prepend:
0x00001c30      4157           push r15                                ; .//src:-64
0x00001c32      4156           push r14
0x00001c34      4989f6         mov r14, rsi
0x00001c37      4155           push r13
0x00001c39      4154           push r12
0x00001c3b      4989d5         mov r13, rdx
0x00001c3e      55             push rbp
0x00001c3f      53             push rbx
0x00001c40      4889fb         mov rbx, rdi
0x00001c43      4883ec18       sub rsp, 0x18
0x00001c47      488b4710       mov rax, qword [rdi + 0x10]             ; .//src:-63
0x00001c4b      4989c4         mov r12, rax
0x00001c4e      4c2b27         sub r12, qword [rdi]
0x00001c51      488d7a01       lea rdi, [rdx + 1]                      ; .//src:-62
0x00001c55      4c39e7         cmp rdi, r12
0x00001c58      7672           jbe 0x1ccc
0x00001c5a      48037b08       add rdi, qword [rbx + 8]                ; .//src:-60
0x00001c5e      b802000000     mov eax, 2                              ; stat.h:-65
0x00001c63      31c9           xor ecx, ecx
0x00001c65      48f7e7         mul rdi
0x00001c68      0f808f000000   jo 0x1cfd
0x00001c6e      4885c0         test rax, rax
0x00001c71      0f8890000000   js 0x1d07
0x00001c77      4885c9         test rcx, rcx
0x00001c7a      0f8587000000   jne 0x1d07
0x00001c80      488d2c3f       lea rbp, [rdi + rdi]                    ; stat.h:-63
0x00001c84      4889ef         mov rdi, rbp
0x00001c87      e8042e0000     call sym.xmalloc
0x00001c8c      488b5308       mov rdx, qword [rbx + 8]                ; .//src:-54
0x00001c90      488b0b         mov rcx, qword [rbx]                    ; .//src:-52
0x00001c93      4889ef         mov rdi, rbp                            ; .//src:-53
0x00001c96      4989c7         mov r15, rax                            ; stat.h:-63
0x00001c99      4c29e2         sub rdx, r12                            ; .//src:-54
0x00001c9c      4a8d3421       lea rsi, [rcx + r12]                    ; .//src:-52
0x00001ca0      48894c2408     mov qword [rsp + 8], rcx
0x00001ca5      4829d7         sub rdi, rdx                            ; .//src:-53
0x00001ca8      4801c7         add rdi, rax
0x00001cab      48897b10       mov qword [rbx + 0x10], rdi
0x00001caf      e89cf9ffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/xalloc.h:-132
0x00001cb4      488b4c2408     mov rcx, qword [rsp + 8]
0x00001cb9      4889cf         mov rdi, rcx                            ; ../coreutils-8.31/lib/xalloc.h:-260
0x00001cbc      e8cff7ffff     call sym.imp.free
0x00001cc1      488b4310       mov rax, qword [rbx + 0x10]
0x00001cc5      4c893b         mov qword [rbx], r15
0x00001cc8      48896b08       mov qword [rbx + 8], rbp
0x00001ccc      4c89ea         mov rdx, r13
0x00001ccf      4c89f6         mov rsi, r14
0x00001cd2      48f7d2         not rdx
0x00001cd5      4801d0         add rax, rdx
0x00001cd8      4c89ea         mov rdx, r13                            ; ../coreutils-8.31/lib/xalloc.h:-517
0x00001cdb      48894310       mov qword [rbx + 0x10], rax
0x00001cdf      c6002f         mov byte [rax], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x00001ce2      488b7b10       mov rdi, qword [rbx + 0x10]
0x00001ce6      4883c418       add rsp, 0x18
0x00001cea      5b             pop rbx
0x00001ceb      5d             pop rbp
0x00001cec      415c           pop r12
0x00001cee      415d           pop r13
0x00001cf0      415e           pop r14
0x00001cf2      415f           pop r15                                 ; .//src:-411
0x00001cf4      4883c701       add rdi, 1
0x00001cf8      e953f9ffff     jmp sym.imp.memcpy
0x00001cfd      b901000000     mov ecx, 1
0x00001d02      e967ffffff     jmp 0x1c6e
0x00001d07      e8d42f0000     call sym.xalloc_die
0x00001d0c      0f1f4000       nop dword [rax]
;-- robust_getcwd:
0x00001d10      4157           push r15
0x00001d12      4156           push r14
0x00001d14      4155           push r13                                ; .//src:-405
0x00001d16      4154           push r12
0x00001d18      55             push rbp
0x00001d19      53             push rbx
0x00001d1a      4881ec080200.  sub rsp, 0x208
0x00001d21      48897c2428     mov qword [rsp + 0x28], rdi
0x00001d26      488d7c2430     lea rdi, [rsp + 0x30]
0x00001d2b      64488b042528.  mov rax, qword fs:[0x28]
0x00001d34      48898424f801.  mov qword [rsp + 0x1f8], rax
0x00001d3c      31c0           xor eax, eax
0x00001d3e      e8ad260000     call sym.get_root_dev_ino
0x00001d43      4885c0         test rax, rax
0x00001d46      4889442418     mov qword [rsp + 0x18], rax
0x00001d4b      0f8494040000   je 0x21e5
0x00001d51      488d542440     lea rdx, [rsp + 0x40]                   ; ../coreutils-8.31/src/d.c:-229
0x00001d56      488d35813300.  lea rsi, [0x000050de]                   ; ../coreutils-8.31/src/d.c:-222 ; "."
0x00001d5d      bf01000000     mov edi, 1
0x00001d62      e809f9ffff     call sym.imp.__xstat
0x00001d67      85c0           test eax, eax
0x00001d69      0f88ef030000   js 0x215e                               ; .//src:-395
0x00001d6f      488d8424d000.  lea rax, [rsp + 0xd0]
0x00001d77      48c744240801.  mov qword [rsp + 8], 1
0x00001d80      4889442420     mov qword [rsp + 0x20], rax
0x00001d85      488d84246001.  lea rax, [rsp + 0x160]
0x00001d8d      48890424       mov qword [rsp], rax
0x00001d91      0f1f80000000.  nop dword [rax]
0x00001d98      488b442418     mov rax, qword [rsp + 0x18]
0x00001d9d      488b08         mov rcx, qword [rax]
0x00001da0      48394c2448     cmp qword [rsp + 0x48], rcx             ; .//src:-508
0x00001da5      750f           jne 0x1db6
0x00001da7      488b4008       mov rax, qword [rax + 8]
0x00001dab      4839442440     cmp qword [rsp + 0x40], rax
0x00001db0      0f8494020000   je 0x204a
0x00001db6      488b442408     mov rax, qword [rsp + 8]
0x00001dbb      488d3d1b3300.  lea rdi, [0x000050dd]                   ; ".."
0x00001dc2      4883c001       add rax, 1
0x00001dc6      4889442410     mov qword [rsp + 0x10], rax
0x00001dcb      e850f7ffff     call sym.imp.opendir
0x00001dd0      4885c0         test rax, rax
0x00001dd3      4889c3         mov rbx, rax
0x00001dd6      0f84c5030000   je 0x21a1
0x00001ddc      4889c7         mov rdi, rax
0x00001ddf      e85cf8ffff     call sym.imp.dirfd
0x00001de4      85c0           test eax, eax
0x00001de6      89c5           mov ebp, eax
0x00001de8      0f8827020000   js 0x2015
0x00001dee      89c7           mov edi, eax
0x00001df0      e8ebf8ffff     call sym.imp.fchdir
0x00001df5      85c0           test eax, eax
0x00001df7      0f88e0020000   js 0x20dd
0x00001dfd      488b542420     mov rdx, qword [rsp + 0x20]
0x00001e02      89ee           mov esi, ebp
0x00001e04      bf01000000     mov edi, 1
0x00001e09      e8b2f8ffff     call sym.imp.__fxstat
0x00001e0e      c1e81f         shr eax, 0x1f
0x00001e11      4189c4         mov r12d, eax
0x00001e14      e897f6ffff     call sym.imp.__errno_location
0x00001e19      4584e4         test r12b, r12b
0x00001e1c      4889c5         mov rbp, rax
0x00001e1f      0f85fc020000   jne 0x2121
0x00001e25      4c8bb424d000.  mov r14, qword [rsp + 0xd0]
0x00001e2d      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x00001e32      4d39ee         cmp r14, r13
0x00001e35      410f95c4       setne r12b
0x00001e39      0f1f80000000.  nop dword [rax]
0x00001e40      c74500000000.  mov dword [rbp], 0
0x00001e47      660f1f840000.  nop word [rax + rax]
0x00001e50      4889df         mov rdi, rbx
0x00001e53      e828f8ffff     call sym.imp.readdir
0x00001e58      4885c0         test rax, rax
0x00001e5b      0f8407010000   je 0x1f68
0x00001e61      8078132e       cmp byte [rax + 0x13], 0x2e
0x00001e65      4c8d7813       lea r15, [rax + 0x13]
0x00001e69      7517           jne 0x1e82
0x00001e6b      31d2           xor edx, edx
0x00001e6d      8078142e       cmp byte [rax + 0x14], 0x2e
0x00001e71      0f94c2         sete dl
0x00001e74      0fb6541014     movzx edx, byte [rax + rdx + 0x14]
0x00001e79      84d2           test dl, dl
0x00001e7b      74d3           je 0x1e50
0x00001e7d      80fa2f         cmp dl, 0x2f
0x00001e80      74ce           je 0x1e50
0x00001e82      488b00         mov rax, qword [rax]
0x00001e85      4885c0         test rax, rax
0x00001e88      0f843a010000   je 0x1fc8
0x00001e8e      4584e4         test r12b, r12b
0x00001e91      0f8531010000   jne 0x1fc8
0x00001e97      483b442448     cmp rax, qword [rsp + 0x48]
0x00001e9c      75a2           jne 0x1e40
0x00001e9e      4c89ff         mov rdi, r15
0x00001ea1      e8baf6ffff     call sym.imp.strlen
0x00001ea6      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00001eab      4889c2         mov rdx, rax
0x00001eae      4c89fe         mov rsi, r15
0x00001eb1      e87afdffff     call sym.file_name_prepend
0x00001eb6      4889df         mov rdi, rbx
0x00001eb9      e842f7ffff     call sym.imp.closedir
0x00001ebe      85c0           test eax, eax
0x00001ec0      0f85da010000   jne 0x20a0                              ; .//src:-554
0x00001ec6      660f6f8424d0.  movdqa xmm0, xmmword [rsp + 0xd0]
0x00001ecf      488b442410     mov rax, qword [rsp + 0x10]
0x00001ed4      0f29442440     movaps xmmword [rsp + 0x40], xmm0
0x00001ed9      660f6f8424e0.  movdqa xmm0, xmmword [rsp + 0xe0]
0x00001ee2      4889442408     mov qword [rsp + 8], rax
0x00001ee7      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x00001eec      660f6f8424f0.  movdqa xmm0, xmmword [rsp + 0xf0]
0x00001ef5      0f29442460     movaps xmmword [rsp + 0x60], xmm0
0x00001efa      660f6f842400.  movdqa xmm0, xmmword [rsp + 0x100]
0x00001f03      0f29442470     movaps xmmword [rsp + 0x70], xmm0       ; ../coreutils-8.31/src/d.c:-333
0x00001f08      660f6f842410.  movdqa xmm0, xmmword [rsp + 0x110]
0x00001f11      0f2984248000.  movaps xmmword [rsp + 0x80], xmm0
0x00001f19      660f6f842420.  movdqa xmm0, xmmword [rsp + 0x120]
0x00001f22      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x00001f2a      660f6f842430.  movdqa xmm0, xmmword [rsp + 0x130]
0x00001f33      0f298424a000.  movaps xmmword [rsp + 0xa0], xmm0
0x00001f3b      660f6f842440.  movdqa xmm0, xmmword [rsp + 0x140]
0x00001f44      0f298424b000.  movaps xmmword [rsp + 0xb0], xmm0
0x00001f4c      660f6f842450.  movdqa xmm0, xmmword [rsp + 0x150]
0x00001f55      0f298424c000.  movaps xmmword [rsp + 0xc0], xmm0
0x00001f5d      e936feffff     jmp 0x1d98
0x00001f62      660f1f440000   nop word [rax + rax]
0x00001f68      448b6500       mov r12d, dword [rbp]
0x00001f6c      4585e4         test r12d, r12d
0x00001f6f      0f851f010000   jne 0x2094
0x00001f75      4889df         mov rdi, rbx
0x00001f78      e883f6ffff     call sym.imp.closedir
0x00001f7d      85c0           test eax, eax
0x00001f7f      0f851b010000   jne 0x20a0
0x00001f85      488b7c2408     mov rdi, qword [rsp + 8]
0x00001f8a      e811fcffff     call sym.nth_parent
0x00001f8f      4889c7         mov rdi, rax
0x00001f92      e839240000     call sym.quote
0x00001f97      488d35da3200.  lea rsi, str.couldn_t_find_directory_entry_in__s_with_matching_i_node ; 0x5278 ; "couldn't find directory entry in %s with matching i-node"
0x00001f9e      4889c3         mov rbx, rax
0x00001fa1      ba05000000     mov edx, 5
0x00001fa6      31ff           xor edi, edi
0x00001fa8      e893f5ffff     call sym.imp.dcgettext
0x00001fad      4889d9         mov rcx, rbx
0x00001fb0      4889c2         mov rdx, rax
0x00001fb3      31f6           xor esi, esi
0x00001fb5      bf01000000     mov edi, 1
0x00001fba      31c0           xor eax, eax
0x00001fbc      e85ff7ffff     call sym.imp.error
0x00001fc1      0f1f80000000.  nop dword [rax]
0x00001fc8      488b1424       mov rdx, qword [rsp]
0x00001fcc      4c89fe         mov rsi, r15
0x00001fcf      bf01000000     mov edi, 1
0x00001fd4      e897f5ffff     call sym.imp.__lxstat
0x00001fd9      85c0           test eax, eax
0x00001fdb      0f885ffeffff   js 0x1e40
0x00001fe1      488b442448     mov rax, qword [rsp + 0x48]
0x00001fe6      483984246801.  cmp qword [rsp + 0x168], rax
0x00001fee      0f854cfeffff   jne 0x1e40
0x00001ff4      4d39ee         cmp r14, r13
0x00001ff7      0f84a1feffff   je 0x1e9e
0x00001ffd      488b442440     mov rax, qword [rsp + 0x40]
0x00002002      483984246001.  cmp qword [rsp + 0x160], rax
0x0000200a      0f8530feffff   jne 0x1e40
0x00002010      e989feffff     jmp 0x1e9e
0x00002015      488d3dc13000.  lea rdi, [0x000050dd]                   ; ".."
0x0000201c      e85ff5ffff     call sym.imp.chdir
0x00002021      85c0           test eax, eax
0x00002023      0f88b4000000   js 0x20dd
0x00002029      488b542420     mov rdx, qword [rsp + 0x20]
0x0000202e      488d35a93000.  lea rsi, [0x000050de]                   ; "."
0x00002035      bf01000000     mov edi, 1
0x0000203a      e831f6ffff     call sym.imp.__xstat
0x0000203f      c1e81f         shr eax, 0x1f
0x00002042      4189c4         mov r12d, eax
0x00002045      e9cafdffff     jmp 0x1e14
0x0000204a      488b442428     mov rax, qword [rsp + 0x28]
0x0000204f      488b4010       mov rax, qword [rax + 0x10]
0x00002053      803800         cmp byte [rax], 0
0x00002056      7513           jne 0x206b
0x00002058      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000205d      488d35da3000.  lea rsi, [0x0000513e]
0x00002064      31d2           xor edx, edx
0x00002066      e8c5fbffff     call sym.file_name_prepend
0x0000206b      488b8424f801.  mov rax, qword [rsp + 0x1f8]
0x00002073      644833042528.  xor rax, qword fs:[0x28]                ; .//src:-885
0x0000207c      0f85a6010000   jne 0x2228
0x00002082      4881c4080200.  add rsp, 0x208
0x00002089      5b             pop rbx
0x0000208a      5d             pop rbp
0x0000208b      415c           pop r12
0x0000208d      415d           pop r13
0x0000208f      415e           pop r14
0x00002091      415f           pop r15
0x00002093      c3             ret
0x00002094      4889df         mov rdi, rbx
0x00002097      e864f5ffff     call sym.imp.closedir
0x0000209c      44896500       mov dword [rbp], r12d
0x000020a0      488b7c2408     mov rdi, qword [rsp + 8]
0x000020a5      e8f6faffff     call sym.nth_parent
0x000020aa      4889c7         mov rdi, rax
0x000020ad      e81e230000     call sym.quote
0x000020b2      488d35563000.  lea rsi, str.reading_directory__s       ; 0x510f ; "reading directory %s"
0x000020b9      ba05000000     mov edx, 5
0x000020be      31ff           xor edi, edi                            ; .//src:-1125
0x000020c0      4889c3         mov rbx, rax
0x000020c3      e878f4ffff     call sym.imp.dcgettext
0x000020c8      8b7500         mov esi, dword [rbp]
0x000020cb      4889c2         mov rdx, rax
0x000020ce      4889d9         mov rcx, rbx
0x000020d1      bf01000000     mov edi, 1
0x000020d6      31c0           xor eax, eax
0x000020d8      e843f6ffff     call sym.imp.error
0x000020dd      488b7c2408     mov rdi, qword [rsp + 8]
0x000020e2      e8b9faffff     call sym.nth_parent
0x000020e7      4889c7         mov rdi, rax
0x000020ea      e8e1220000     call sym.quote
0x000020ef      488d35033000.  lea rsi, str.failed_to_chdir_to__s      ; 0x50f9 ; "failed to chdir to %s"
0x000020f6      ba05000000     mov edx, 5
0x000020fb      31ff           xor edi, edi                            ; ../coreutils-8.31/src/system.h:-1080
0x000020fd      4889c5         mov rbp, rax
0x00002100      e83bf4ffff     call sym.imp.dcgettext
0x00002105      4889c3         mov rbx, rax
0x00002108      e8a3f3ffff     call sym.imp.__errno_location
0x0000210d      8b30           mov esi, dword [rax]
0x0000210f      4889e9         mov rcx, rbp
0x00002112      4889da         mov rdx, rbx
0x00002115      bf01000000     mov edi, 1
0x0000211a      31c0           xor eax, eax
0x0000211c      e8fff5ffff     call sym.imp.error
0x00002121      488b7c2408     mov rdi, qword [rsp + 8]
0x00002126      e875faffff     call sym.nth_parent
0x0000212b      4889c7         mov rdi, rax
0x0000212e      e89d220000     call sym.quote
0x00002133      488d35912f00.  lea rsi, str.failed_to_stat__s          ; 0x50cb ; "failed to stat %s"
0x0000213a      ba05000000     mov edx, 5
0x0000213f      31ff           xor edi, edi
0x00002141      4889c3         mov rbx, rax
0x00002144      e8f7f3ffff     call sym.imp.dcgettext
0x00002149      8b7500         mov esi, dword [rbp]
0x0000214c      4889c2         mov rdx, rax
0x0000214f      4889d9         mov rcx, rbx
0x00002152      bf01000000     mov edi, 1
0x00002157      31c0           xor eax, eax
0x00002159      e8c2f5ffff     call sym.imp.error
0x0000215e      488d35792f00.  lea rsi, [0x000050de]                   ; "."
0x00002165      bf04000000     mov edi, 4
0x0000216a      e8911f0000     call sym.quotearg_style
0x0000216f      488d35552f00.  lea rsi, str.failed_to_stat__s          ; 0x50cb ; "failed to stat %s"
0x00002176      ba05000000     mov edx, 5
0x0000217b      31ff           xor edi, edi
0x0000217d      4889c5         mov rbp, rax
0x00002180      e8bbf3ffff     call sym.imp.dcgettext
0x00002185      4889c3         mov rbx, rax                            ; .//src:-1111
0x00002188      e823f3ffff     call sym.imp.__errno_location
0x0000218d      8b30           mov esi, dword [rax]
0x0000218f      4889e9         mov rcx, rbp
0x00002192      4889da         mov rdx, rbx
0x00002195      bf01000000     mov edi, 1
0x0000219a      31c0           xor eax, eax
0x0000219c      e87ff5ffff     call sym.imp.error
0x000021a1      488b7c2408     mov rdi, qword [rsp + 8]
0x000021a6      e8f5f9ffff     call sym.nth_parent
0x000021ab      4889c7         mov rdi, rax
0x000021ae      e81d220000     call sym.quote
0x000021b3      488d35262f00.  lea rsi, str.cannot_open_directory__s   ; 0x50e0 ; "cannot open directory %s"
0x000021ba      ba05000000     mov edx, 5
0x000021bf      31ff           xor edi, edi
0x000021c1      4889c5         mov rbp, rax
0x000021c4      e877f3ffff     call sym.imp.dcgettext
0x000021c9      4889c3         mov rbx, rax
0x000021cc      e8dff2ffff     call sym.imp.__errno_location
0x000021d1      8b30           mov esi, dword [rax]
0x000021d3      4889e9         mov rcx, rbp
0x000021d6      4889da         mov rdx, rbx
0x000021d9      bf01000000     mov edi, 1
0x000021de      31c0           xor eax, eax
0x000021e0      e83bf5ffff     call sym.imp.error
0x000021e5      488d35fa3300.  lea rsi, [0x000055e6]                   ; "/"
0x000021ec      bf04000000     mov edi, 4
0x000021f1      e80a1f0000     call sym.quotearg_style
0x000021f6      488d355b3000.  lea rsi, str.failed_to_get_attributes_of__s ; 0x5258 ; "failed to get attributes of %s"
0x000021fd      ba05000000     mov edx, 5
0x00002202      31ff           xor edi, edi
0x00002204      4889c5         mov rbp, rax
0x00002207      e834f3ffff     call sym.imp.dcgettext
0x0000220c      4889c3         mov rbx, rax
0x0000220f      e89cf2ffff     call sym.imp.__errno_location
0x00002214      8b30           mov esi, dword [rax]
0x00002216      4889e9         mov rcx, rbp
0x00002219      4889da         mov rdx, rbx
0x0000221c      bf01000000     mov edi, 1
0x00002221      31c0           xor eax, eax
0x00002223      e8f8f4ffff     call sym.imp.error
0x00002228      e863f3ffff     call sym.imp.__stack_chk_fail
0x0000222d      0f1f00         nop dword [rax]
;-- usage:
0x00002230      4155           push r13
0x00002232      4154           push r12
0x00002234      ba05000000     mov edx, 5
0x00002239      55             push rbp
0x0000223a      53             push rbx
0x0000223b      89fd           mov ebp, edi
0x0000223d      4881ec880000.  sub rsp, 0x88
0x00002244      488b1d755e20.  mov rbx, qword [obj.program_name]       ; string_fortified.h:-533 ; [0x2080c0:8]=0
0x0000224b      64488b042528.  mov rax, qword fs:[0x28]
0x00002254      4889442478     mov qword [rsp + 0x78], rax
0x00002259      31c0           xor eax, eax
0x0000225b      85ff           test edi, edi
0x0000225d      742e           je 0x228d
0x0000225f      488d35523000.  lea rsi, str.Try___s___help__for_more_information. ; 0x52b8 ; "Try '%s --help' for more information.\n"
0x00002266      31ff           xor edi, edi
0x00002268      e8d3f2ffff     call sym.imp.dcgettext
0x0000226d      488b3d2c5e20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080a0:8]=0
0x00002274      4889c2         mov rdx, rax
0x00002277      4889d9         mov rcx, rbx
0x0000227a      be01000000     mov esi, 1
0x0000227f      31c0           xor eax, eax
0x00002281      e8eaf4ffff     call sym.imp.__fprintf_chk
0x00002286      89ef           mov edi, ebp
0x00002288      e8c3f4ffff     call sym.imp.exit
0x0000228d      488d35942e00.  lea rsi, str.Usage:__s__OPTION_...      ; 0x5128 ; "Usage: %s [OPTION]...\n"
0x00002294      31ff           xor edi, edi
0x00002296      e8a5f2ffff     call sym.imp.dcgettext
0x0000229b      4889da         mov rdx, rbx
0x0000229e      4889c6         mov rsi, rax
0x000022a1      bf01000000     mov edi, 1
0x000022a6      31c0           xor eax, eax
0x000022a8      e863f4ffff     call sym.imp.__printf_chk
0x000022ad      488b1dd45d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x000022b4      488d35253000.  lea rsi, str.Print_the_full_filename_of_the_current_working_directory. ; 0x52e0 ; "Print the full filename of the current working directory.\n\n"
0x000022bb      ba05000000     mov edx, 5
0x000022c0      31ff           xor edi, edi
0x000022c2      e879f2ffff     call sym.imp.dcgettext
0x000022c7      4889de         mov rsi, rbx
0x000022ca      4889c7         mov rdi, rax
0x000022cd      e84ef3ffff     call sym.imp.fputs_unlocked
0x000022d2      488b1daf5d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x000022d9      488d35403000.  lea rsi, str.L____logical___use_PWD_from_environment__even_if_it_contains_symlinks_____P____physical__avoid_all_symlinks ; string_fortified.h:-525 ; 0x5320 ; "  -L, --logical   use PWD from environment, even if it contains symlinks\n  -P, --physical  avoid all symlinks\n"
0x000022e0      ba05000000     mov edx, 5
0x000022e5      31ff           xor edi, edi
0x000022e7      e854f2ffff     call sym.imp.dcgettext                  ; string_fortified.h:-528
0x000022ec      4889de         mov rsi, rbx
0x000022ef      4889c7         mov rdi, rax
0x000022f2      e829f3ffff     call sym.imp.fputs_unlocked
0x000022f7      488b1d8a5d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x000022fe      488d358b3000.  lea rsi, str.help_____display_this_help_and_exit ; 0x5390 ; "      --help     display this help and exit\n"
0x00002305      ba05000000     mov edx, 5
0x0000230a      31ff           xor edi, edi
0x0000230c      e82ff2ffff     call sym.imp.dcgettext
0x00002311      4889de         mov rsi, rbx
0x00002314      4889c7         mov rdi, rax
0x00002317      e804f3ffff     call sym.imp.fputs_unlocked
0x0000231c      488b1d655d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00002323      488d35963000.  lea rsi, str.version__output_version_information_and_exit ; 0x53c0 ; "      --version  output version information and exit\n"
0x0000232a      ba05000000     mov edx, 5
0x0000232f      31ff           xor edi, edi
0x00002331      e80af2ffff     call sym.imp.dcgettext
0x00002336      4889de         mov rsi, rbx
0x00002339      4889c7         mov rdi, rax
0x0000233c      e8dff2ffff     call sym.imp.fputs_unlocked
0x00002341      488b1d405d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00002348      488d35a93000.  lea rsi, str.If_no_option_is_specified___P_is_assumed. ; 0x53f8 ; "\nIf no option is specified, -P is assumed.\n"
0x0000234f      ba05000000     mov edx, 5
0x00002354      31ff           xor edi, edi
0x00002356      e8e5f1ffff     call sym.imp.dcgettext
0x0000235b      4889de         mov rsi, rbx
0x0000235e      4889c7         mov rdi, rax
0x00002361      488d1dbc2d00.  lea rbx, [0x00005124]                   ; "pwd"
0x00002368      e8b3f2ffff     call sym.imp.fputs_unlocked
0x0000236d      488d35b43000.  lea rsi, str.NOTE:_your_shell_may_have_its_own_version_of__s__which_usually_supersedes__the_version_described_here.__Please_refer_to_your_shell_s_documentation__for_details_about_the_options_it_supports. ; 0x5428 ; "\nNOTE: your shell may have its own version of %s, which usually supersedes\nthe version described here.  Please refer to your shell's documentation\nfor details about the options it supports.\n"
0x00002374      ba05000000     mov edx, 5
0x00002379      31ff           xor edi, edi
0x0000237b      e8c0f1ffff     call sym.imp.dcgettext
0x00002380      488d159d2d00.  lea rdx, [0x00005124]                   ; "pwd"
0x00002387      4889c6         mov rsi, rax
0x0000238a      bf01000000     mov edi, 1
0x0000238f      31c0           xor eax, eax
0x00002391      e87af3ffff     call sym.imp.__printf_chk
0x00002396      488d05a22d00.  lea rax, [0x0000513f]                   ; "["
0x0000239d      488d0ddc2d00.  lea rcx, str.sha256sum                  ; 0x5180 ; "sha256sum"
0x000023a4      48c744246000.  mov qword [rsp + 0x60], 0
0x000023ad      48c744246800.  mov qword [rsp + 0x68], 0
0x000023b6      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/src/system.h:-1073
0x000023b9      48890424       mov qword [rsp], rax
0x000023bd      488d057d2d00.  lea rax, str.test_invocation            ; 0x5141 ; "test invocation"
0x000023c4      48894c2430     mov qword [rsp + 0x30], rcx
0x000023c9      488d0dba2d00.  lea rcx, str.sha384sum                  ; 0x518a ; "sha384sum"
0x000023d0      4889442408     mov qword [rsp + 8], rax
0x000023d5      488d05dd2d00.  lea rax, [0x000051b9]                   ; "coreutils"
0x000023dc      48894c2440     mov qword [rsp + 0x40], rcx
0x000023e1      488d0dac2d00.  lea rcx, str.sha512sum                  ; 0x5194 ; "sha512sum"
0x000023e8      4889442410     mov qword [rsp + 0x10], rax
0x000023ed      488d055d2d00.  lea rax, str.Multi_call_invocation      ; 0x5151 ; "Multi-call invocation"
0x000023f4      48894c2450     mov qword [rsp + 0x50], rcx
0x000023f9      4889442418     mov qword [rsp + 0x18], rax
0x000023fe      488d05622d00.  lea rax, str.sha224sum                  ; 0x5167 ; "sha224sum"
0x00002405      4889442420     mov qword [rsp + 0x20], rax
0x0000240a      488d05602d00.  lea rax, str.sha2_utilities             ; string_fortified.h:-534 ; 0x5171 ; "sha2 utilities"
0x00002411      4889442428     mov qword [rsp + 0x28], rax             ; string_fortified.h:-509
0x00002416      4889442438     mov qword [rsp + 0x38], rax
0x0000241b      4889442448     mov qword [rsp + 0x48], rax
0x00002420      4889442458     mov qword [rsp + 0x58], rax
0x00002425      0f1f00         nop dword [rax]
0x00002428      4883c210       add rdx, 0x10
0x0000242c      488b3a         mov rdi, qword [rdx]
0x0000242f      4885ff         test rdi, rdi
0x00002432      7413           je 0x2447
0x00002434      b904000000     mov ecx, 4
0x00002439      4889de         mov rsi, rbx
0x0000243c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000243e      0f97c0         seta al
0x00002441      1c00           sbb al, 0
0x00002443      84c0           test al, al
0x00002445      75e1           jne 0x2428
0x00002447      4c8b6208       mov r12, qword [rdx + 8]
0x0000244b      31ff           xor edi, edi
0x0000244d      ba05000000     mov edx, 5
0x00002452      488d35452d00.  lea rsi, str.s_online_help:___s         ; 0x519e ; "\n%s online help: <%s>\n"
0x00002459      4d85e4         test r12, r12
0x0000245c      0f84c1000000   je 0x2523
0x00002462      e8d9f0ffff     call sym.imp.dcgettext
0x00002467      488d0d7a3000.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x54e8 ; "https://www.gnu.org/software/coreutils/"
0x0000246e      488d15402d00.  lea rdx, str.GNU_coreutils              ; 0x51b5 ; "GNU coreutils"
0x00002475      4889c6         mov rsi, rax
0x00002478      bf01000000     mov edi, 1
0x0000247d      31c0           xor eax, eax
0x0000247f      e88cf2ffff     call sym.imp.__printf_chk
0x00002484      31f6           xor esi, esi
0x00002486      bf05000000     mov edi, 5
0x0000248b      e870f2ffff     call sym.imp.setlocale
0x00002490      4885c0         test rax, rax
0x00002493      741c           je 0x24b1
0x00002495      488d35272d00.  lea rsi, [0x000051c3]                   ; "en_"
0x0000249c      ba03000000     mov edx, 3
0x000024a1      4889c7         mov rdi, rax
0x000024a4      e817f0ffff     call sym.imp.strncmp
0x000024a9      85c0           test eax, eax
0x000024ab      0f8507010000   jne 0x25b8
0x000024b1      488d350f2d00.  lea rsi, str.Full_documentation___s_s   ; 0x51c7 ; "Full documentation <%s%s>\n"
0x000024b8      31ff           xor edi, edi
0x000024ba      ba05000000     mov edx, 5
0x000024bf      e87cf0ffff     call sym.imp.dcgettext
0x000024c4      488d0d592c00.  lea rcx, [0x00005124]                   ; "pwd"
0x000024cb      488d15163000.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x54e8 ; "https://www.gnu.org/software/coreutils/"
0x000024d2      4889c6         mov rsi, rax
0x000024d5      bf01000000     mov edi, 1
0x000024da      31c0           xor eax, eax
0x000024dc      e82ff2ffff     call sym.imp.__printf_chk
0x000024e1      4939dc         cmp r12, rbx
0x000024e4      488d0d702c00.  lea rcx, [0x0000515b]                   ; " invocation"
0x000024eb      488d1d4c2c00.  lea rbx, [0x0000513e]
0x000024f2      480f44d9       cmove rbx, rcx
0x000024f6      488d355b3000.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x5558 ; "or available locally via: info '(coreutils) %s%s'\n"
0x000024fd      31ff           xor edi, edi
0x000024ff      ba05000000     mov edx, 5
0x00002504      e837f0ffff     call sym.imp.dcgettext
0x00002509      4889d9         mov rcx, rbx
0x0000250c      4889c6         mov rsi, rax
0x0000250f      4c89e2         mov rdx, r12
0x00002512      bf01000000     mov edi, 1
0x00002517      31c0           xor eax, eax
0x00002519      e8f2f1ffff     call sym.imp.__printf_chk
0x0000251e      e963fdffff     jmp 0x2286
0x00002523      e818f0ffff     call sym.imp.dcgettext
0x00002528      488d0db92f00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x54e8 ; "https://www.gnu.org/software/coreutils/"
0x0000252f      488d157f2c00.  lea rdx, str.GNU_coreutils              ; 0x51b5 ; "GNU coreutils"
0x00002536      4889c6         mov rsi, rax
0x00002539      bf01000000     mov edi, 1
0x0000253e      31c0           xor eax, eax
0x00002540      e8cbf1ffff     call sym.imp.__printf_chk
0x00002545      31f6           xor esi, esi
0x00002547      bf05000000     mov edi, 5
0x0000254c      e8aff1ffff     call sym.imp.setlocale
0x00002551      4885c0         test rax, rax
0x00002554      7418           je 0x256e
0x00002556      488d35662c00.  lea rsi, [0x000051c3]                   ; "en_"
0x0000255d      ba03000000     mov edx, 3
0x00002562      4889c7         mov rdi, rax
0x00002565      e856efffff     call sym.imp.strncmp
0x0000256a      85c0           test eax, eax
0x0000256c      7543           jne 0x25b1
0x0000256e      488d35522c00.  lea rsi, str.Full_documentation___s_s   ; 0x51c7 ; "Full documentation <%s%s>\n"
0x00002575      ba05000000     mov edx, 5
0x0000257a      31ff           xor edi, edi
0x0000257c      4c8d25a12b00.  lea r12, [0x00005124]                   ; "pwd"
0x00002583      488d1dd12b00.  lea rbx, [0x0000515b]                   ; " invocation"
0x0000258a      e8b1efffff     call sym.imp.dcgettext
0x0000258f      488d0d8e2b00.  lea rcx, [0x00005124]                   ; "pwd"
0x00002596      488d154b2f00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x54e8 ; "https://www.gnu.org/software/coreutils/"
0x0000259d      4889c6         mov rsi, rax
0x000025a0      bf01000000     mov edi, 1
0x000025a5      31c0           xor eax, eax
0x000025a7      e864f1ffff     call sym.imp.__printf_chk
0x000025ac      e945ffffff     jmp 0x24f6
0x000025b1      4c8d256c2b00.  lea r12, [0x00005124]                   ; "pwd"
0x000025b8      4c8b2dc95a20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x000025bf      488d354a2f00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x5510 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000025c6      31ff           xor edi, edi
0x000025c8      ba05000000     mov edx, 5
0x000025cd      e86eefffff     call sym.imp.dcgettext
0x000025d2      4c89ee         mov rsi, r13
0x000025d5      4889c7         mov rdi, rax
0x000025d8      e843f0ffff     call sym.imp.fputs_unlocked
0x000025dd      e9cffeffff     jmp 0x24b1
0x000025e2      662e0f1f8400.  nop word cs:[rax + rax]
0x000025ec      0f1f4000       nop dword [rax]
;-- close_stdout_set_file_name:
0x000025f0      48893dc15a20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x2080b8:8]=0
0x000025f7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x000025f8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00002600      40883da95a20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x2080b0:1]=0
0x00002607      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00002608      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00002610      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00002611      53             push rbx
0x00002612      4883ec08       sub rsp, 8
0x00002616      488b3d6b5a20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x0000261d      e8be270000     call sym.close_stream
0x00002622      85c0           test eax, eax
0x00002624      7416           je 0x263c
0x00002626      e885eeffff     call sym.imp.__errno_location
0x0000262b      803d7e5a2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x2080b0:1]=0
0x00002632      4889c3         mov rbx, rax
0x00002635      741c           je 0x2653
0x00002637      833820         cmp dword [rax], 0x20
0x0000263a      7517           jne 0x2653
0x0000263c      488b3d5d5a20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080a0:8]=0
0x00002643      e898270000     call sym.close_stream
0x00002648      85c0           test eax, eax
0x0000264a      7546           jne 0x2692
0x0000264c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00002650      5b             pop rbx
0x00002651      5d             pop rbp
0x00002652      c3             ret
0x00002653      488d35362f00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x5590 ; "write error"
0x0000265a      31ff           xor edi, edi
0x0000265c      ba05000000     mov edx, 5
0x00002661      e8daeeffff     call sym.imp.dcgettext
0x00002666      488b3d4b5a20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x2080b8:8]=0
0x0000266d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002670      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002673      7428           je 0x269d
0x00002675      e8561b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000267a      8b33           mov esi, dword [rbx]
0x0000267c      488d15192f00.  lea rdx, str.s:__s                      ; 0x559c ; "%s: %s"
0x00002683      4889c1         mov rcx, rax
0x00002686      4989e8         mov r8, rbp
0x00002689      31ff           xor edi, edi
0x0000268b      31c0           xor eax, eax
0x0000268d      e88ef0ffff     call sym.imp.error
0x00002692      8b3d80592000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x208018:4]=1
0x00002698      e833eeffff     call sym.imp._exit
0x0000269d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000269f      488d15fa2e00.  lea rdx, [0x000055a0]                   ; "%s"
0x000026a6      4889c1         mov rcx, rax
0x000026a9      31ff           xor edi, edi
0x000026ab      31c0           xor eax, eax
0x000026ad      e86ef0ffff     call sym.imp.error
0x000026b2      ebde           jmp 0x2692
0x000026b4      662e0f1f8400.  nop word cs:[rax + rax]
0x000026be      6690           nop
;-- set_program_name:
0x000026c0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x000026c3      53             push rbx
0x000026c4      7477           je 0x273d                               ; ../coreutils-8.31/lib/progname.c:51
0x000026c6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x000026cb      4889fb         mov rbx, rdi
0x000026ce      e8edeeffff     call sym.imp.strrchr
0x000026d3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x000026d6      7455           je 0x272d
0x000026d8      4c8d4001       lea r8, [rax + 1]
0x000026dc      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x000026df      4829da         sub rdx, rbx
0x000026e2      4883fa06       cmp rdx, 6
0x000026e6      7e45           jle 0x272d
0x000026e8      488d70fa       lea rsi, [rax - 6]
0x000026ec      488d3ded2e00.  lea rdi, str..libs                      ; 0x55e0 ; "/.libs/"
0x000026f3      b907000000     mov ecx, 7
0x000026f8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000026fa      0f97c2         seta dl
0x000026fd      80da00         sbb dl, 0
0x00002700      84d2           test dl, dl
0x00002702      7529           jne 0x272d
0x00002704      488d3ddd2e00.  lea rdi, [0x000055e8]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000270b      b903000000     mov ecx, 3
0x00002710      4c89c6         mov rsi, r8
0x00002713      4c89c3         mov rbx, r8
0x00002716      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002718      0f97c2         seta dl
0x0000271b      80da00         sbb dl, 0
0x0000271e      84d2           test dl, dl
0x00002720      750b           jne 0x272d
0x00002722      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00002726      48891d535920.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x208080:8]=0
0x0000272d      48891d8c5920.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x2080c0:8]=0
0x00002734      48891d5d5920.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x208098:8]=0
0x0000273b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000273c      c3             ret
0x0000273d      488b0d5c5920.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080a0:8]=0
0x00002744      488d3d5d2e00.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x55a8 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000274b      ba37000000     mov edx, 0x37                           ; '7'
0x00002750      be01000000     mov esi, 1
0x00002755      e806f0ffff     call sym.imp.fwrite
0x0000275a      e841edffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000275f      90             nop
;-- gettext_quote.part.1:
0x00002760      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002761      53             push rbx
0x00002762      4889fd         mov rbp, rdi
0x00002765      89f3           mov ebx, esi
0x00002767      4883ec08       sub rsp, 8
0x0000276b      e850270000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002770      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002773      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002776      80fa55         cmp dl, 0x55
0x00002779      7475           je 0x27f0
0x0000277b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000277e      7420           je 0x27a0
0x00002780      488d05742e00.  lea rax, str.l______l                   ; 0x55fb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002787      488d156f2e00.  lea rdx, [0x000055fd]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000278e      83fb09         cmp ebx, 9
0x00002791      480f45c2       cmovne rax, rdx
0x00002795      4883c408       add rsp, 8
0x00002799      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000279a      5d             pop rbp
0x0000279b      c3             ret
0x0000279c      0f1f4000       nop dword [rax]
0x000027a0      0fb65001       movzx edx, byte [rax + 1]
0x000027a4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000027a7      80fa42         cmp dl, 0x42
0x000027aa      75d4           jne 0x2780
0x000027ac      80780231       cmp byte [rax + 2], 0x31
0x000027b0      75ce           jne 0x2780
0x000027b2      80780338       cmp byte [rax + 3], 0x38
0x000027b6      75c8           jne 0x2780
0x000027b8      80780430       cmp byte [rax + 4], 0x30
0x000027bc      75c2           jne 0x2780
0x000027be      80780533       cmp byte [rax + 5], 0x33
0x000027c2      75bc           jne 0x2780
0x000027c4      80780630       cmp byte [rax + 6], 0x30
0x000027c8      75b6           jne 0x2780
0x000027ca      80780700       cmp byte [rax + 7], 0
0x000027ce      75b0           jne 0x2780
0x000027d0      807d0060       cmp byte [rbp], 0x60
0x000027d4      488d05192e00.  lea rax, [0x000055f4]
0x000027db      488d15162e00.  lea rdx, [0x000055f8]
0x000027e2      480f45c2       cmovne rax, rdx
0x000027e6      4883c408       add rsp, 8
0x000027ea      5b             pop rbx
0x000027eb      5d             pop rbp
0x000027ec      c3             ret
0x000027ed      0f1f00         nop dword [rax]
0x000027f0      0fb65001       movzx edx, byte [rax + 1]
0x000027f4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000027f7      80fa54         cmp dl, 0x54
0x000027fa      7584           jne 0x2780
0x000027fc      0fb65002       movzx edx, byte [rax + 2]
0x00002800      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002803      80fa46         cmp dl, 0x46
0x00002806      0f8574ffffff   jne 0x2780
0x0000280c      8078032d       cmp byte [rax + 3], 0x2d
0x00002810      0f856affffff   jne 0x2780
0x00002816      80780438       cmp byte [rax + 4], 0x38
0x0000281a      0f8560ffffff   jne 0x2780
0x00002820      80780500       cmp byte [rax + 5], 0
0x00002824      0f8556ffffff   jne 0x2780
0x0000282a      807d0060       cmp byte [rbp], 0x60
0x0000282e      488d05b72d00.  lea rax, [0x000055ec]                   ; "\u2018"
0x00002835      488d15b42d00.  lea rdx, [0x000055f0]                   ; "\u2019"
0x0000283c      480f45c2       cmovne rax, rdx
0x00002840      4883c408       add rsp, 8
0x00002844      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002845      5d             pop rbp
0x00002846      c3             ret
0x00002847      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002850      4157           push r15
0x00002852      4156           push r14
0x00002854      4589c7         mov r15d, r8d
0x00002857      4155           push r13
0x00002859      4154           push r12
0x0000285b      4989fe         mov r14, rdi
0x0000285e      55             push rbp
0x0000285f      53             push rbx
0x00002860      4489cb         mov ebx, r9d
0x00002863      4989f5         mov r13, rsi
0x00002866      4889cd         mov rbp, rcx
0x00002869      83e302         and ebx, 2
0x0000286c      4881ecb80000.  sub rsp, 0xb8
0x00002873      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000287b      4889542410     mov qword [rsp + 0x10], rdx
0x00002880      4489442408     mov dword [rsp + 8], r8d
0x00002885      44894c2478     mov dword [rsp + 0x78], r9d
0x0000288a      4889442420     mov qword [rsp + 0x20], rax
0x0000288f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002897      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000289c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x000028a4      4889442460     mov qword [rsp + 0x60], rax
0x000028a9      64488b042528.  mov rax, qword fs:[0x28]
0x000028b2      48898424a800.  mov qword [rsp + 0xa8], rax
0x000028ba      31c0           xor eax, eax
0x000028bc      e88fecffff     call sym.imp.__ctype_get_mb_cur_max
0x000028c1      4183ff0a       cmp r15d, 0xa
0x000028c5      4889442458     mov qword [rsp + 0x58], rax
0x000028ca      0f87af110000   ja 0x3a7f
0x000028d0      488d0d892d00.  lea rcx, [0x00005660]                   ; "*\xe0\xff\xff\x83\xd2\xff\xffX\xe2\xff\xffd\xe0\xff\xffT\xde\xff\xff\xb0\xde\xff\xff\x05\xdf\xff\xffJ\xdf\xff\xff\x84\xdf\xff\xff\x84\xdf\xff\xff\x84\xdf\xff\xff\xd4\xd5\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\x14\xd6\xff\xff\x1c\xd5\xff\xff\xdc\xd4\xff\xff\xa4\xd6\xff\xff\x94\xd6\xff\xff\x84\xd6\xff\xfft\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xff\xbc\xd6\xff\xffd\xd6\xff\xffT\xd6\xff\xffT\xd6\xff\xff$\xd6\xff\xffT\xd6\xff\xff\xfc\xd5\xff\xffT\xd6\xff\xff\xb7\xd4\xff\xffT\xd6\xff\xffT\xd6\xff\xffT\xd6\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xffT\xd6\xff\xffT\xd6\xff\xffT\xd6\xff\xffT\xd6\xff\xff\x87\xd4\xff\xff\xbc\xd6\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xffT\xd6\xff\xff,\xd5\xff\xff\xfc\xd5\xff\xffT\xd6\xff\xff\xfc\xd5\xff\xffT\xd6\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xfc\xd5\xff\xff\xb7\xd3\xff\xffT\xd6\xff\xff\xb7\xd3\xff\xff$\xd6\xff\xff\xa8\xd5\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\x98\xd5\xff\xff\xe8\xd6\xff\xff\xd0\xd6\xff\xff\x80\xd5\xff\xff\xc0\xd6\xff\xffh\xd5\xff\xff\xa8\xd6\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\xb8\xd4\xff\xff\x90\xd6\xff\xffx\xd6\xff\xffx\xd6\xff\xff`\xd6\xff\xffx\xd6\xff\xffH\xd6\xff\xffx\xd6\xff\xff\xb8\xd2\xff\xffx\xd6\xff\xffx\xd6\xff\xffx\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffx\xd6\xff\xffx\xd6\xff\xffx\xd6\xff\xffx\xd6\xff\xff\x88\xd2\xff\xff\xb8\xd4\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffx\xd6\xff\xffH\xd5\xff\xffH\xd6\xff\xffx\xd6\xff\xffH\xd6\xff\xffx\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xffH\xd6\xff\xff\xb8\xd1\xff\xffx\xd6\xff\xff\xb8\xd1\xff\xff`\xd6\xff\xff"
0x000028d7      4489fa         mov edx, r15d
0x000028da      48630491       movsxd rax, dword [rcx + rdx*4]
0x000028de      4801c8         add rax, rcx
0x000028e1      ffe0           jmp rax
0x000028e3      c644240e01     mov byte [rsp + 0xe], 1
0x000028e8      c644247c00     mov byte [rsp + 0x7c], 0
0x000028ed      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x000028f0      48c744245000.  mov qword [rsp + 0x50], 0
0x000028f9      c644240f01     mov byte [rsp + 0xf], 1
0x000028fe      c644240d00     mov byte [rsp + 0xd], 0
0x00002903      488d05f32c00.  lea rax, [0x000055fd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000290a      48c744241801.  mov qword [rsp + 0x18], 1
0x00002913      4531ff         xor r15d, r15d
0x00002916      c74424080200.  mov dword [rsp + 8], 2
0x0000291e      4889442448     mov qword [rsp + 0x48], rax
0x00002923      4531db         xor r11d, r11d
0x00002926      4889e8         mov rax, rbp
0x00002929      4589e0         mov r8d, r12d
0x0000292c      4c89dd         mov rbp, r11
0x0000292f      4989c3         mov r11, rax
0x00002932      660f1f440000   nop word [rax + rax]
0x00002938      4939eb         cmp r11, rbp
0x0000293b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000293f      4983fbff       cmp r11, 0xffffffffffffffff
0x00002943      750d           jne 0x2952
0x00002945      488b442410     mov rax, qword [rsp + 0x10]
0x0000294a      803c2800       cmp byte [rax + rbp], 0
0x0000294e      410f95c4       setne r12b
0x00002952      4584e4         test r12b, r12b
0x00002955      0f8455060000   je 0x2fb0
0x0000295b      837c240802     cmp dword [rsp + 8], 2
0x00002960      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002965      4c8d0c2f       lea r9, [rdi + rbp]
0x00002969      0f95c0         setne al
0x0000296c      2244240d       and al, byte [rsp + 0xd]
0x00002970      4189c2         mov r10d, eax
0x00002973      0f84a7000000   je 0x2a20
0x00002979      488b442418     mov rax, qword [rsp + 0x18]
0x0000297e      4885c0         test rax, rax
0x00002981      0f8429040000   je 0x2db0
0x00002987      4983fbff       cmp r11, 0xffffffffffffffff
0x0000298b      488d5c0500     lea rbx, [rbp + rax]
0x00002990      752e           jne 0x29c0
0x00002992      4883f801       cmp rax, 1
0x00002996      7628           jbe 0x29c0
0x00002998      4488442438     mov byte [rsp + 0x38], r8b
0x0000299d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x000029a2      4c894c2428     mov qword [rsp + 0x28], r9
0x000029a7      e8b4ebffff     call sym.imp.strlen
0x000029ac      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000029b2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x000029b8      4989c3         mov r11, rax
0x000029bb      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000029c0      4c39db         cmp rbx, r11
0x000029c3      4488542428     mov byte [rsp + 0x28], r10b
0x000029c8      0f87b2050000   ja 0x2f80
0x000029ce      488b542418     mov rdx, qword [rsp + 0x18]
0x000029d3      488b742448     mov rsi, qword [rsp + 0x48]
0x000029d8      4c89cf         mov rdi, r9
0x000029db      4c895c2440     mov qword [rsp + 0x40], r11
0x000029e0      4488442438     mov byte [rsp + 0x38], r8b
0x000029e5      4c894c2430     mov qword [rsp + 0x30], r9
0x000029ea      e821ecffff     call sym.imp.memcmp
0x000029ef      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x000029f1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000029f6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000029fc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00002a01      0f8579050000   jne 0x2f80
0x00002a07      807c240f00     cmp byte [rsp + 0xf], 0
0x00002a0c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002a12      0f857d0f0000   jne 0x3995
0x00002a18      0f1f84000000.  nop dword [rax + rax]
0x00002a20      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00002a24      80fb7e         cmp bl, 0x7e
0x00002a27      0f871b030000   ja 0x2d48
0x00002a2d      488d0d582c00.  lea rcx, [0x0000568c]
0x00002a34      0fb6d3         movzx edx, bl
0x00002a37      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002a3b      4801c8         add rax, rcx
0x00002a3e      ffe0           jmp rax
0x00002a40      4531d2         xor r10d, r10d
0x00002a43      4983fb01       cmp r11, 1
0x00002a47      0f95c0         setne al
0x00002a4a      4983fbff       cmp r11, 0xffffffffffffffff
0x00002a4e      750c           jne 0x2a5c
0x00002a50      488b442410     mov rax, qword [rsp + 0x10]
0x00002a55      80780100       cmp byte [rax + 1], 0
0x00002a59      0f95c0         setne al
0x00002a5c      837c240802     cmp dword [rsp + 8], 2
0x00002a61      0f94c2         sete dl
0x00002a64      84c0           test al, al
0x00002a66      0f844c020000   je 0x2cb8
0x00002a6c      4531e4         xor r12d, r12d
0x00002a6f      31c0           xor eax, eax
0x00002a71      0f1f80000000.  nop dword [rax]
0x00002a78      807c240d01     cmp byte [rsp + 0xd], 1
0x00002a7d      0f850f010000   jne 0x2b92
0x00002a83      84d2           test dl, dl
0x00002a85      0f8507010000   jne 0x2b92
0x00002a8b      488b742420     mov rsi, qword [rsp + 0x20]
0x00002a90      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00002a93      7414           je 0x2aa9
0x00002a95      89da           mov edx, ebx
0x00002a97      c0ea05         shr dl, 5
0x00002a9a      0fb6d2         movzx edx, dl
0x00002a9d      8b1496         mov edx, dword [rsi + rdx*4]
0x00002aa0      0fa3da         bt edx, ebx
0x00002aa3      0f824a010000   jb 0x2bf3
0x00002aa9      4584d2         test r10b, r10b
0x00002aac      0f8541010000   jne 0x2bf3
0x00002ab2      83f001         xor eax, 1
0x00002ab5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00002ab9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00002abc      84c0           test al, al
0x00002abe      7420           je 0x2ae0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00002ac0      4d39fd         cmp r13, r15
0x00002ac3      7605           jbe 0x2aca
0x00002ac5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002aca      498d4701       lea rax, [r15 + 1]
0x00002ace      4939c5         cmp r13, rax
0x00002ad1      7606           jbe 0x2ad9
0x00002ad3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002ad9      4983c702       add r15, 2
0x00002add      4531c0         xor r8d, r8d
0x00002ae0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00002ae3      7304           jae 0x2ae9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00002ae5      43881c3e       mov byte [r14 + r15], bl
0x00002ae9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00002aee      4983c701       add r15, 1
0x00002af2      b800000000     mov eax, 0
0x00002af7      4584e4         test r12b, r12b
0x00002afa      0f44f8         cmove edi, eax
0x00002afd      40887c240e     mov byte [rsp + 0xe], dil
0x00002b02      e931feffff     jmp 0x2938
0x00002b07      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00002b10      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00002b13      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00002b17      83f802         cmp eax, 2
0x00002b1a      0f84b8050000   je 0x30d8
0x00002b20      83f805         cmp eax, 5
0x00002b23      0f846f050000   je 0x3098
0x00002b29      83f802         cmp eax, 2
0x00002b2c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002b31      0f94c2         sete dl
0x00002b34      4531e4         xor r12d, r12d
0x00002b37      31c0           xor eax, eax
0x00002b39      e93affffff     jmp 0x2a78
0x00002b3e      6690           nop
0x00002b40      4531d2         xor r10d, r10d
0x00002b43      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00002b48      0f8402050000   je 0x3050
0x00002b4e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00002b53      31d2           xor edx, edx
0x00002b55      31c0           xor eax, eax
0x00002b57      bb27000000     mov ebx, 0x27                           ; '''
0x00002b5c      e917ffffff     jmp 0x2a78
0x00002b61      0f1f80000000.  nop dword [rax]
0x00002b68      ba09000000     mov edx, 9
0x00002b6d      bb74000000     mov ebx, 0x74                           ; 't'
0x00002b72      837c240802     cmp dword [rsp + 8], 2
0x00002b77      0f94c0         sete al
0x00002b7a      2244240f       and al, byte [rsp + 0xf]
0x00002b7e      0f854a010000   jne 0x2cce
0x00002b84      807c240d00     cmp byte [rsp + 0xd], 0
0x00002b89      7565           jne 0x2bf0
0x00002b8b      89d3           mov ebx, edx
0x00002b8d      4531e4         xor r12d, r12d
0x00002b90      31c0           xor eax, eax
0x00002b92      807c240f00     cmp byte [rsp + 0xf], 0
0x00002b97      0f85eefeffff   jne 0x2a8b
0x00002b9d      e907ffffff     jmp 0x2aa9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00002ba2      660f1f440000   nop word [rax + rax]
0x00002ba8      ba08000000     mov edx, 8
0x00002bad      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002bb2      ebd0           jmp 0x2b84
0x00002bb4      0f1f4000       nop dword [rax]
0x00002bb8      837c240802     cmp dword [rsp + 8], 2
0x00002bbd      0f84cd030000   je 0x2f90
0x00002bc3      807c240d00     cmp byte [rsp + 0xd], 0
0x00002bc8      0f8412020000   je 0x2de0
0x00002bce      807c240f00     cmp byte [rsp + 0xf], 0
0x00002bd3      0f8407020000   je 0x2de0
0x00002bd9      48837c241800   cmp qword [rsp + 0x18], 0
0x00002bdf      0f85b6030000   jne 0x2f9b
0x00002be5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002bea      660f1f440000   nop word [rax + rax]
0x00002bf0      4531e4         xor r12d, r12d
0x00002bf3      837c240802     cmp dword [rsp + 8], 2
0x00002bf8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00002bfb      807c240f00     cmp byte [rsp + 0xf], 0
0x00002c00      89d0           mov eax, edx
0x00002c02      0f8550080000   jne 0x3458
0x00002c08      4489c0         mov eax, r8d
0x00002c0b      83f001         xor eax, 1
0x00002c0e      20d0           and al, dl
0x00002c10      742f           je 0x2c41
0x00002c12      4d39fd         cmp r13, r15
0x00002c15      7605           jbe 0x2c1c
0x00002c17      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002c1c      498d5701       lea rdx, [r15 + 1]
0x00002c20      4939d5         cmp r13, rdx
0x00002c23      7606           jbe 0x2c2b
0x00002c25      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002c2b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00002c2f      4939d5         cmp r13, rdx
0x00002c32      7606           jbe 0x2c3a
0x00002c34      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002c3a      4983c703       add r15, 3
0x00002c3e      4189c0         mov r8d, eax
0x00002c41      4d39fd         cmp r13, r15
0x00002c44      7605           jbe 0x2c4b
0x00002c46      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002c4b      4983c701       add r15, 1
0x00002c4f      4883c501       add rbp, 1
0x00002c53      e988feffff     jmp 0x2ae0
0x00002c58      0f1f84000000.  nop dword [rax + rax]
0x00002c60      807c240d00     cmp byte [rsp + 0xd], 0
0x00002c65      0f85c8010000   jne 0x2e33
0x00002c6b      31d2           xor edx, edx
0x00002c6d      f644247801     test byte [rsp + 0x78], 1
0x00002c72      0f8413ffffff   je 0x2b8b
0x00002c78      4883c501       add rbp, 1
0x00002c7c      e9b7fcffff     jmp 0x2938
0x00002c81      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00002c88      837c240802     cmp dword [rsp + 8], 2
0x00002c8d      0f94c2         sete dl
0x00002c90      31c0           xor eax, eax
0x00002c92      e9e1fdffff     jmp 0x2a78
0x00002c97      660f1f840000.  nop word [rax + rax]
0x00002ca0      ba07000000     mov edx, 7
0x00002ca5      bb61000000     mov ebx, 0x61                           ; 'a'
0x00002caa      e9d5feffff     jmp 0x2b84
0x00002caf      90             nop
0x00002cb0      837c240802     cmp dword [rsp + 8], 2
0x00002cb5      0f94c2         sete dl
0x00002cb8      4885ed         test rbp, rbp
0x00002cbb      0f85abfdffff   jne 0x2a6c
0x00002cc1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00002cc6      20d0           and al, dl
0x00002cc8      0f84aafdffff   je 0x2a78
0x00002cce      4c89dd         mov rbp, r11
0x00002cd1      c74424080200.  mov dword [rsp + 8], 2
0x00002cd9      e9fb060000     jmp 0x33d9
0x00002cde      6690           nop
0x00002ce0      837c240802     cmp dword [rsp + 8], 2
0x00002ce5      0f94c2         sete dl
0x00002ce8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00002ceb      ebd4           jmp 0x2cc1
0x00002ced      0f1f00         nop dword [rax]
0x00002cf0      837c240802     cmp dword [rsp + 8], 2
0x00002cf5      bb20000000     mov ebx, 0x20                           ; "@"
0x00002cfa      0f94c2         sete dl
0x00002cfd      ebc2           jmp 0x2cc1
0x00002cff      90             nop
0x00002d00      ba0d000000     mov edx, 0xd
0x00002d05      bb72000000     mov ebx, 0x72                           ; 'r'
0x00002d0a      e963feffff     jmp 0x2b72
0x00002d0f      90             nop
0x00002d10      ba0c000000     mov edx, 0xc
0x00002d15      bb66000000     mov ebx, 0x66                           ; 'f'
0x00002d1a      e965feffff     jmp 0x2b84
0x00002d1f      90             nop
0x00002d20      ba0b000000     mov edx, 0xb
0x00002d25      bb76000000     mov ebx, 0x76                           ; 'v'
0x00002d2a      e955feffff     jmp 0x2b84
0x00002d2f      90             nop
0x00002d30      ba0a000000     mov edx, 0xa
0x00002d35      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00002d3a      e933feffff     jmp 0x2b72
0x00002d3f      90             nop
0x00002d40      4531d2         xor r10d, r10d
0x00002d43      0f1f440000     nop dword [rax + rax]
0x00002d48      48837c245801   cmp qword [rsp + 0x58], 1
0x00002d4e      0f85a4030000   jne 0x30f8
0x00002d54      4c895c2438     mov qword [rsp + 0x38], r11
0x00002d59      4488442430     mov byte [rsp + 0x30], r8b
0x00002d5e      4488542428     mov byte [rsp + 0x28], r10b
0x00002d63      e848eaffff     call sym.imp.__ctype_b_loc
0x00002d68      488b08         mov rcx, qword [rax]
0x00002d6b      0fb6d3         movzx edx, bl
0x00002d6e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002d74      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00002d7a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00002d7f      bf01000000     mov edi, 1
0x00002d84      0fb70451       movzx eax, word [rcx + rdx*2]
0x00002d88      66250040       and ax, 0x4000
0x00002d8c      410f95c4       setne r12b
0x00002d90      0f94c0         sete al
0x00002d93      2244240d       and al, byte [rsp + 0xd]
0x00002d97      84c0           test al, al
0x00002d99      0f8592090000   jne 0x3731
0x00002d9f      837c240802     cmp dword [rsp + 8], 2
0x00002da4      0f94c2         sete dl
0x00002da7      e9ccfcffff     jmp 0x2a78
0x00002dac      0f1f4000       nop dword [rax]
0x00002db0      410fb619       movzx ebx, byte [r9]
0x00002db4      80fb7e         cmp bl, 0x7e
0x00002db7      7787           ja 0x2d40
0x00002db9      488d0dc82a00.  lea rcx, [0x00005888]
0x00002dc0      0fb6d3         movzx edx, bl
0x00002dc3      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002dc7      4801c8         add rax, rcx
0x00002dca      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00002dcc      0f1f4000       nop dword [rax]
0x00002dd0      4531d2         xor r10d, r10d
0x00002dd3      807c240d00     cmp byte [rsp + 0xd], 0
0x00002dd8      0f85f0fdffff   jne 0x2bce
0x00002dde      6690           nop
0x00002de0      ba5c000000     mov edx, 0x5c                           ; '\'
0x00002de5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002dea      e995fdffff     jmp 0x2b84
0x00002def      90             nop
0x00002df0      ba0c000000     mov edx, 0xc
0x00002df5      4531d2         xor r10d, r10d
0x00002df8      bb66000000     mov ebx, 0x66                           ; 'f'
0x00002dfd      e982fdffff     jmp 0x2b84
0x00002e02      660f1f440000   nop word [rax + rax]
0x00002e08      ba0a000000     mov edx, 0xa
0x00002e0d      4531d2         xor r10d, r10d
0x00002e10      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00002e15      e958fdffff     jmp 0x2b72
0x00002e1a      660f1f440000   nop word [rax + rax]
0x00002e20      bb61000000     mov ebx, 0x61                           ; 'a'
0x00002e25      e9c6fdffff     jmp 0x2bf0
0x00002e2a      660f1f440000   nop word [rax + rax]
0x00002e30      4531d2         xor r10d, r10d
0x00002e33      837c240802     cmp dword [rsp + 8], 2
0x00002e38      0f94c2         sete dl
0x00002e3b      807c240f00     cmp byte [rsp + 0xf], 0
0x00002e40      0f85940b0000   jne 0x39da
0x00002e46      4489c0         mov eax, r8d
0x00002e49      4c89f9         mov rcx, r15
0x00002e4c      83f001         xor eax, 1
0x00002e4f      20d0           and al, dl
0x00002e51      742d           je 0x2e80
0x00002e53      4d39fd         cmp r13, r15
0x00002e56      7605           jbe 0x2e5d
0x00002e58      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002e5d      498d4f01       lea rcx, [r15 + 1]
0x00002e61      4939cd         cmp r13, rcx
0x00002e64      7606           jbe 0x2e6c
0x00002e66      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002e6c      498d4f02       lea rcx, [r15 + 2]
0x00002e70      4939cd         cmp r13, rcx
0x00002e73      0f8730060000   ja 0x34a9
0x00002e79      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00002e7d      4189c0         mov r8d, eax
0x00002e80      4939cd         cmp r13, rcx
0x00002e83      7605           jbe 0x2e8a
0x00002e85      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002e8a      837c240802     cmp dword [rsp + 8], 2
0x00002e8f      4c8d7901       lea r15, [rcx + 1]
0x00002e93      0f8400060000   je 0x3499
0x00002e99      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00002e9d      4c39d8         cmp rax, r11
0x00002ea0      7319           jae 0x2ebb                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00002ea2      488b442410     mov rax, qword [rsp + 0x10]
0x00002ea7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00002eac      88442428       mov byte [rsp + 0x28], al
0x00002eb0      83e830         sub eax, 0x30
0x00002eb3      3c09           cmp al, 9
0x00002eb5      0f862e080000   jbe 0x36e9
0x00002ebb      4489e0         mov eax, r12d
0x00002ebe      bb30000000     mov ebx, 0x30                           ; '0'
0x00002ec3      4531e4         xor r12d, r12d
0x00002ec6      e9adfbffff     jmp 0x2a78                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00002ecb      0f1f440000     nop dword [rax + rax]
0x00002ed0      837c240802     cmp dword [rsp + 8], 2
0x00002ed5      4589d4         mov r12d, r10d
0x00002ed8      0f94c2         sete dl
0x00002edb      4531d2         xor r10d, r10d
0x00002ede      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00002ee0      e993fbffff     jmp 0x2a78                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00002ee5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00002ee8      837c240802     cmp dword [rsp + 8], 2
0x00002eed      0f94c2         sete dl
0x00002ef0      4531d2         xor r10d, r10d
0x00002ef3      e9c0fdffff     jmp 0x2cb8
0x00002ef8      0f1f84000000.  nop dword [rax + rax]
0x00002f00      837c240802     cmp dword [rsp + 8], 2
0x00002f05      0f94c2         sete dl
0x00002f08      4531d2         xor r10d, r10d
0x00002f0b      4531e4         xor r12d, r12d
0x00002f0e      e9aefdffff     jmp 0x2cc1
0x00002f13      0f1f440000     nop dword [rax + rax]
0x00002f18      837c240802     cmp dword [rsp + 8], 2
0x00002f1d      4589d4         mov r12d, r10d
0x00002f20      bb20000000     mov ebx, 0x20                           ; "@"
0x00002f25      0f94c2         sete dl
0x00002f28      4531d2         xor r10d, r10d
0x00002f2b      e991fdffff     jmp 0x2cc1
0x00002f30      ba0d000000     mov edx, 0xd
0x00002f35      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00002f38      bb72000000     mov ebx, 0x72                           ; 'r'
0x00002f3d      e930fcffff     jmp 0x2b72
0x00002f42      660f1f440000   nop word [rax + rax]
0x00002f48      bb76000000     mov ebx, 0x76                           ; 'v'
0x00002f4d      e99efcffff     jmp 0x2bf0
0x00002f52      660f1f440000   nop word [rax + rax]
0x00002f58      ba09000000     mov edx, 9
0x00002f5d      4531d2         xor r10d, r10d
0x00002f60      bb74000000     mov ebx, 0x74                           ; 't'
0x00002f65      e908fcffff     jmp 0x2b72
0x00002f6a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00002f70      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002f75      e976fcffff     jmp 0x2bf0
0x00002f7a      660f1f440000   nop word [rax + rax]
0x00002f80      4531d2         xor r10d, r10d
0x00002f83      e998faffff     jmp 0x2a20
0x00002f88      0f1f84000000.  nop dword [rax + rax]
0x00002f90      807c240f00     cmp byte [rsp + 0xf], 0
0x00002f95      0f8565090000   jne 0x3900
0x00002f9b      4883c501       add rbp, 1
0x00002f9f      4489c0         mov eax, r8d
0x00002fa2      4531e4         xor r12d, r12d
0x00002fa5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002faa      e90dfbffff     jmp 0x2abc
0x00002faf      90             nop
0x00002fb0      837c240802     cmp dword [rsp + 8], 2
0x00002fb5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00002fba      4589c4         mov r12d, r8d
0x00002fbd      4c89dd         mov rbp, r11
0x00002fc0      0f94c2         sete dl
0x00002fc3      89d8           mov eax, ebx
0x00002fc5      4d85ff         test r15, r15
0x00002fc8      0f94c1         sete cl
0x00002fcb      21d0           and eax, edx
0x00002fcd      20c8           and al, cl
0x00002fcf      0f85610a0000   jne 0x3a36                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00002fd5      89d8           mov eax, ebx
0x00002fd7      83f001         xor eax, 1
0x00002fda      20c2           and dl, al
0x00002fdc      0f846a090000   je 0x394c
0x00002fe2      807c247c00     cmp byte [rsp + 0x7c], 0
0x00002fe7      0f845d090000   je 0x394a
0x00002fed      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00002ff2      0f85f5090000   jne 0x39ed
0x00002ff8      4d85ed         test r13, r13
0x00002ffb      0f94c0         sete al
0x00002ffe      48837c245000   cmp qword [rsp + 0x50], 0
0x00003004      0f95c2         setne dl
0x00003007      20d0           and al, dl
0x00003009      0f841d0a0000   je 0x3a2c
0x0000300f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003014      488d1de22500.  lea rbx, [0x000055fd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000301b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000301f      c74424080200.  mov dword [rsp + 8], 2
0x00003027      41bf01000000   mov r15d, 1
0x0000302d      48c744241801.  mov qword [rsp + 0x18], 1
0x00003036      c644240f00     mov byte [rsp + 0xf], 0
0x0000303b      48895c2448     mov qword [rsp + 0x48], rbx
0x00003040      8844247c       mov byte [rsp + 0x7c], al
0x00003044      e9daf8ffff     jmp 0x2923
0x00003049      0f1f80000000.  nop dword [rax]
0x00003050      807c240f00     cmp byte [rsp + 0xf], 0
0x00003055      0f85a5080000   jne 0x3900
0x0000305b      4d85ed         test r13, r13
0x0000305e      0f84fc030000   je 0x3460                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003064      31d2           xor edx, edx
0x00003066      48837c245000   cmp qword [rsp + 0x50], 0
0x0000306c      0f85ee030000   jne 0x3460                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003072      4c896c2450     mov qword [rsp + 0x50], r13
0x00003077      4983c703       add r15, 3
0x0000307b      31c0           xor eax, eax
0x0000307d      448864247c     mov byte [rsp + 0x7c], r12b
0x00003082      4531c0         xor r8d, r8d
0x00003085      4989d5         mov r13, rdx
0x00003088      bb27000000     mov ebx, 0x27                           ; '''
0x0000308d      e917faffff     jmp 0x2aa9
0x00003092      660f1f440000   nop word [rax + rax]
0x00003098      f644247804     test byte [rsp + 0x78], 4
0x0000309d      7421           je 0x30c0
0x0000309f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x000030a3      4c39d9         cmp rcx, r11
0x000030a6      7318           jae 0x30c0
0x000030a8      488b442410     mov rax, qword [rsp + 0x10]
0x000030ad      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x000030b2      0f848a070000   je 0x3842
0x000030b8      0f1f84000000.  nop dword [rax + rax]
0x000030c0      31d2           xor edx, edx
0x000030c2      4531e4         xor r12d, r12d
0x000030c5      31c0           xor eax, eax
0x000030c7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000030cc      e9a7f9ffff     jmp 0x2a78
0x000030d1      0f1f80000000.  nop dword [rax]
0x000030d8      807c240f00     cmp byte [rsp + 0xf], 0
0x000030dd      0f851d080000   jne 0x3900
0x000030e3      4531e4         xor r12d, r12d
0x000030e6      31c0           xor eax, eax
0x000030e8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000030ed      e9b7f9ffff     jmp 0x2aa9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000030f2      660f1f440000   nop word [rax + rax]
0x000030f8      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003100      4983fbff       cmp r11, 0xffffffffffffffff
0x00003104      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003110      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003115      752d           jne 0x3144
0x00003117      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000311c      4488442440     mov byte [rsp + 0x40], r8b
0x00003121      4488542438     mov byte [rsp + 0x38], r10b
0x00003126      4c894c2430     mov qword [rsp + 0x30], r9
0x0000312b      e830e4ffff     call sym.imp.strlen
0x00003130      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003136      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000313c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000313f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003144      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000314c      31c9           xor ecx, ecx
0x0000314e      885c247e       mov byte [rsp + 0x7e], bl
0x00003152      448844247d     mov byte [rsp + 0x7d], r8b
0x00003157      4889cb         mov rbx, rcx
0x0000315a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003162      4889442438     mov qword [rsp + 0x38], rax
0x00003167      448854247f     mov byte [rsp + 0x7f], r10b
0x0000316c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003174      4c89742440     mov qword [rsp + 0x40], r14
0x00003179      4c896c2470     mov qword [rsp + 0x70], r13
0x0000317e      4c895c2430     mov qword [rsp + 0x30], r11
0x00003183      488b442410     mov rax, qword [rsp + 0x10]
0x00003188      4c8d741d00     lea r14, [rbp + rbx]
0x0000318d      488b542430     mov rdx, qword [rsp + 0x30]
0x00003192      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003197      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000319c      4e8d2c30       lea r13, [rax + r14]
0x000031a0      4c29f2         sub rdx, r14
0x000031a3      4c89ee         mov rsi, r13
0x000031a6      e8a51b0000     call sym.rpl_mbrtowc
0x000031ab      4885c0         test rax, rax
0x000031ae      4989c7         mov r15, rax
0x000031b1      744e           je 0x3201
0x000031b3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000031b7      0f8418060000   je 0x37d5
0x000031bd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000031c1      0f849a050000   je 0x3761
0x000031c7      837c240802     cmp dword [rsp + 8], 2
0x000031cc      0f94c0         sete al
0x000031cf      2244240f       and al, byte [rsp + 0xf]
0x000031d3      0f8597010000   jne 0x3370
0x000031d9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x000031e0      e8abe5ffff     call sym.imp.iswprint
0x000031e5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000031ea      85c0           test eax, eax
0x000031ec      b800000000     mov eax, 0
0x000031f1      440f44e0       cmove r12d, eax
0x000031f5      4c01fb         add rbx, r15
0x000031f8      e883e5ffff     call sym.imp.mbsinit
0x000031fd      85c0           test eax, eax
0x000031ff      7482           je 0x3183
0x00003201      4489e2         mov edx, r12d
0x00003204      4889df         mov rdi, rbx
0x00003207      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000320d      83f201         xor edx, 1
0x00003210      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003215      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000321b      2254240d       and dl, byte [rsp + 0xd]
0x0000321f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003227      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000322c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003231      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003236      4883ff01       cmp rdi, 1
0x0000323a      0f86fb050000   jbe 0x383b
0x00003240      4889f9         mov rcx, rdi
0x00003243      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003245      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000324b      4801e9         add rcx, rbp
0x0000324e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003253      e9b6000000     jmp 0x330e
0x00003258      0f1f84000000.  nop dword [rax + rax]
0x00003260      837c240802     cmp dword [rsp + 8], 2
0x00003265      0f94c0         sete al
0x00003268      4584c9         test r9b, r9b
0x0000326b      0f85af040000   jne 0x3720
0x00003271      4489c6         mov esi, r8d
0x00003274      83f601         xor esi, 1
0x00003277      4020f0         and al, sil
0x0000327a      742f           je 0x32ab                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000327c      4d39fd         cmp r13, r15
0x0000327f      7605           jbe 0x3286
0x00003281      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003286      498d7701       lea rsi, [r15 + 1]
0x0000328a      4939f5         cmp r13, rsi
0x0000328d      7606           jbe 0x3295                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000328f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003295      498d7702       lea rsi, [r15 + 2]
0x00003299      4939f5         cmp r13, rsi
0x0000329c      7606           jbe 0x32a4
0x0000329e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000032a4      4983c703       add r15, 3
0x000032a8      4189c0         mov r8d, eax
0x000032ab      4d39fd         cmp r13, r15
0x000032ae      7605           jbe 0x32b5
0x000032b0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000032b5      498d4701       lea rax, [r15 + 1]
0x000032b9      4939c5         cmp r13, rax
0x000032bc      760d           jbe 0x32cb
0x000032be      89d8           mov eax, ebx
0x000032c0      c0e806         shr al, 6
0x000032c3      83c030         add eax, 0x30
0x000032c6      4388443e01     mov byte [r14 + r15 + 1], al
0x000032cb      498d4702       lea rax, [r15 + 2]
0x000032cf      4939c5         cmp r13, rax
0x000032d2      7610           jbe 0x32e4
0x000032d4      89d8           mov eax, ebx
0x000032d6      c0e803         shr al, 3
0x000032d9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x000032dc      83c030         add eax, 0x30
0x000032df      4388443e02     mov byte [r14 + r15 + 2], al
0x000032e4      83e307         and ebx, 7
0x000032e7      4883c501       add rbp, 1
0x000032eb      4983c703       add r15, 3
0x000032ef      83c330         add ebx, 0x30
0x000032f2      4839cd         cmp rbp, rcx
0x000032f5      0f83e5f7ffff   jae 0x2ae0
0x000032fb      89d6           mov esi, edx
0x000032fd      4d39fd         cmp r13, r15
0x00003300      7604           jbe 0x3306
0x00003302      43881c3e       mov byte [r14 + r15], bl
0x00003306      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000330a      4983c701       add r15, 1
0x0000330e      84d2           test dl, dl
0x00003310      0f854affffff   jne 0x3260
0x00003316      89f0           mov eax, esi
0x00003318      83f001         xor eax, 1
0x0000331b      4421c0         and eax, r8d
0x0000331e      4584d2         test r10b, r10b
0x00003321      740e           je 0x3331
0x00003323      4d39fd         cmp r13, r15
0x00003326      7605           jbe 0x332d
0x00003328      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000332d      4983c701       add r15, 1
0x00003331      4883c501       add rbp, 1
0x00003335      4839cd         cmp rbp, rcx
0x00003338      0f837ef7ffff   jae 0x2abc
0x0000333e      84c0           test al, al
0x00003340      0f84f8030000   je 0x373e
0x00003346      4d39fd         cmp r13, r15
0x00003349      7605           jbe 0x3350
0x0000334b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003350      498d4701       lea rax, [r15 + 1]
0x00003354      4939c5         cmp r13, rax
0x00003357      7606           jbe 0x335f
0x00003359      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000335f      4983c702       add r15, 2
0x00003363      4531d2         xor r10d, r10d
0x00003366      4531c0         xor r8d, r8d
0x00003369      eb92           jmp 0x32fd
0x0000336b      0f1f440000     nop dword [rax + rax]
0x00003370      4983ff01       cmp r15, 1
0x00003374      0f845ffeffff   je 0x31d9
0x0000337a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000337f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003383      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003388      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000338c      eb0f           jmp 0x339d
0x0000338e      6690           nop
0x00003390      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003394      4939d0         cmp r8, rdx
0x00003397      0f843cfeffff   je 0x31d9
0x0000339d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x000033a0      83e95b         sub ecx, 0x5b
0x000033a3      80f921         cmp cl, 0x21
0x000033a6      77e8           ja 0x3390                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x000033a8      be01000000     mov esi, 1
0x000033ad      48d3e6         shl rsi, cl
0x000033b0      4889f1         mov rcx, rsi
0x000033b3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x000033bd      4885f1         test rcx, rsi
0x000033c0      74ce           je 0x3390
0x000033c2      4c8b742440     mov r14, qword [rsp + 0x40]
0x000033c7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000033cc      488b6c2430     mov rbp, qword [rsp + 0x30]
0x000033d1      c74424080200.  mov dword [rsp + 8], 2
0x000033d9      807c240d00     cmp byte [rsp + 0xd], 0
0x000033de      7410           je 0x33f0
0x000033e0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x000033e2      b804000000     mov eax, 4
0x000033e7      0f44442408     cmove eax, dword [rsp + 8]
0x000033ec      89442408       mov dword [rsp + 8], eax
0x000033f0      4883ec08       sub rsp, 8
0x000033f4      4889e9         mov rcx, rbp
0x000033f7      4c89ee         mov rsi, r13
0x000033fa      ff742468       push qword [rsp + 0x68]
0x000033fe      ff742478       push qword [rsp + 0x78]
0x00003402      4c89f7         mov rdi, r14
0x00003405      6a00           push 0
0x00003407      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000340f      448b442428     mov r8d, dword [rsp + 0x28]
0x00003414      488b542430     mov rdx, qword [rsp + 0x30]
0x00003419      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000341d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00003422      4883c420       add rsp, 0x20
0x00003426      4989c7         mov r15, rax
0x00003429      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003431      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000343a      4c89f8         mov rax, r15
0x0000343d      0f8500060000   jne 0x3a43
0x00003443      4881c4b80000.  add rsp, 0xb8
0x0000344a      5b             pop rbx
0x0000344b      5d             pop rbp
0x0000344c      415c           pop r12
0x0000344e      415d           pop r13
0x00003450      415e           pop r14
0x00003452      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003454      c3             ret
0x00003455      0f1f00         nop dword [rax]
0x00003458      4c89dd         mov rbp, r11
0x0000345b      e979ffffff     jmp 0x33d9
0x00003460      4d39fd         cmp r13, r15
0x00003463      7605           jbe 0x346a
0x00003465      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000346a      498d4701       lea rax, [r15 + 1]
0x0000346e      4939c5         cmp r13, rax
0x00003471      7606           jbe 0x3479
0x00003473      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003479      498d4702       lea rax, [r15 + 2]
0x0000347d      4939c5         cmp r13, rax
0x00003480      0f86ec050000   jbe 0x3a72
0x00003486      4c89ea         mov rdx, r13
0x00003489      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000348f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003494      e9d9fbffff     jmp 0x3072
0x00003499      4489e0         mov eax, r12d
0x0000349c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x000034a1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x000034a4      e900f6ffff     jmp 0x2aa9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x000034a9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000034af      e9c5f9ffff     jmp 0x2e79
0x000034b4      85db           test ebx, ebx
0x000034b6      0f8527f4ffff   jne 0x28e3
0x000034bc      c644240d01     mov byte [rsp + 0xd], 1
0x000034c1      4d85ed         test r13, r13
0x000034c4      0f8590050000   jne 0x3a5a
0x000034ca      488d052c2100.  lea rax, [0x000055fd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000034d1      48c744245000.  mov qword [rsp + 0x50], 0
0x000034da      c644240e01     mov byte [rsp + 0xe], 1
0x000034df      c644247c00     mov byte [rsp + 0x7c], 0
0x000034e4      4531e4         xor r12d, r12d
0x000034e7      c644240f00     mov byte [rsp + 0xf], 0
0x000034ec      48c744241801.  mov qword [rsp + 0x18], 1
0x000034f5      4889442448     mov qword [rsp + 0x48], rax
0x000034fa      41bf01000000   mov r15d, 1
0x00003500      c74424080200.  mov dword [rsp + 8], 2
0x00003508      e916f4ffff     jmp 0x2923                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000350d      0f1f00         nop dword [rax]
0x00003510      85db           test ebx, ebx
0x00003512      0f85f5030000   jne 0x390d
0x00003518      4d85ed         test r13, r13
0x0000351b      0f8425020000   je 0x3746
0x00003521      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003525      c644240e01     mov byte [rsp + 0xe], 1
0x0000352a      4531e4         xor r12d, r12d
0x0000352d      c644247c00     mov byte [rsp + 0x7c], 0
0x00003532      48c744245000.  mov qword [rsp + 0x50], 0
0x0000353b      488d05b92000.  lea rax, str.l______l                   ; 0x55fb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003542      c644240f00     mov byte [rsp + 0xf], 0
0x00003547      c644240d01     mov byte [rsp + 0xd], 1
0x0000354c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003555      41bf01000000   mov r15d, 1
0x0000355b      4889442448     mov qword [rsp + 0x48], rax
0x00003560      e9bef3ffff     jmp 0x2923
0x00003565      488d058f2000.  lea rax, str.l______l                   ; 0x55fb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000356c      c644240e01     mov byte [rsp + 0xe], 1
0x00003571      c644247c00     mov byte [rsp + 0x7c], 0
0x00003576      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003579      48c744245000.  mov qword [rsp + 0x50], 0
0x00003582      c644240f01     mov byte [rsp + 0xf], 1
0x00003587      c644240d01     mov byte [rsp + 0xd], 1
0x0000358c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003595      4531ff         xor r15d, r15d
0x00003598      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000359d      c74424080500.  mov dword [rsp + 8], 5
0x000035a5      e979f3ffff     jmp 0x2923
0x000035aa      c644240e01     mov byte [rsp + 0xe], 1
0x000035af      c644247c00     mov byte [rsp + 0x7c], 0
0x000035b4      4531e4         xor r12d, r12d
0x000035b7      48c744245000.  mov qword [rsp + 0x50], 0
0x000035c0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x000035c5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x000035c8      c644240d01     mov byte [rsp + 0xd], 1
0x000035cd      48c744241800.  mov qword [rsp + 0x18], 0
0x000035d6      48c744244800.  mov qword [rsp + 0x48], 0
0x000035df      e93ff3ffff     jmp 0x2923
0x000035e4      837c24080a     cmp dword [rsp + 8], 0xa
0x000035e9      7456           je 0x3641
0x000035eb      488d350d2000.  lea rsi, [0x000055ff]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000035f2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000035f4      ba05000000     mov edx, 5
0x000035f9      e842dfffff     call sym.imp.dcgettext
0x000035fe      4889c1         mov rcx, rax
0x00003601      4889442468     mov qword [rsp + 0x68], rax
0x00003606      488d05f21f00.  lea rax, [0x000055ff]                   ; "`"
0x0000360d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00003610      0f8498030000   je 0x39ae
0x00003616      488d35e01f00.  lea rsi, [0x000055fd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000361d      31ff           xor edi, edi
0x0000361f      ba05000000     mov edx, 5
0x00003624      e817dfffff     call sym.imp.dcgettext
0x00003629      4889c1         mov rcx, rax
0x0000362c      4889442460     mov qword [rsp + 0x60], rax
0x00003631      488d05c51f00.  lea rax, [0x000055fd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003638      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000363b      0f8483030000   je 0x39c4
0x00003641      4531ff         xor r15d, r15d
0x00003644      85db           test ebx, ebx
0x00003646      0f84c1010000   je 0x380d
0x0000364c      85db           test ebx, ebx
0x0000364e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00003653      0f9544240f     setne byte [rsp + 0xf]
0x00003658      4531e4         xor r12d, r12d
0x0000365b      4889df         mov rdi, rbx
0x0000365e      e8fddeffff     call sym.imp.strlen
0x00003663      48895c2448     mov qword [rsp + 0x48], rbx
0x00003668      4889442418     mov qword [rsp + 0x18], rax
0x0000366d      c644240e01     mov byte [rsp + 0xe], 1
0x00003672      c644247c00     mov byte [rsp + 0x7c], 0
0x00003677      48c744245000.  mov qword [rsp + 0x50], 0
0x00003680      c644240d01     mov byte [rsp + 0xd], 1
0x00003685      e999f2ffff     jmp 0x2923
0x0000368a      c644240e01     mov byte [rsp + 0xe], 1
0x0000368f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003694      4531e4         xor r12d, r12d
0x00003697      48c744245000.  mov qword [rsp + 0x50], 0
0x000036a0      c644240f00     mov byte [rsp + 0xf], 0
0x000036a5      4531ff         xor r15d, r15d
0x000036a8      c644240d00     mov byte [rsp + 0xd], 0
0x000036ad      48c744241800.  mov qword [rsp + 0x18], 0
0x000036b6      48c744244800.  mov qword [rsp + 0x48], 0
0x000036bf      e95ff2ffff     jmp 0x2923
0x000036c4      c644240e01     mov byte [rsp + 0xe], 1
0x000036c9      c644247c00     mov byte [rsp + 0x7c], 0
0x000036ce      4531e4         xor r12d, r12d
0x000036d1      48c744245000.  mov qword [rsp + 0x50], 0
0x000036da      c644240f01     mov byte [rsp + 0xf], 1
0x000036df      c644240d01     mov byte [rsp + 0xd], 1
0x000036e4      e91af2ffff     jmp 0x2903
0x000036e9      4d39fd         cmp r13, r15
0x000036ec      7605           jbe 0x36f3
0x000036ee      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x000036f3      488d4102       lea rax, [rcx + 2]
0x000036f7      4939c5         cmp r13, rax
0x000036fa      7606           jbe 0x3702
0x000036fc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00003702      4489e0         mov eax, r12d
0x00003705      4c8d7903       lea r15, [rcx + 3]
0x00003709      4531e4         xor r12d, r12d
0x0000370c      bb30000000     mov ebx, 0x30                           ; '0'
0x00003711      e962f3ffff     jmp 0x2a78
0x00003716      662e0f1f8400.  nop word cs:[rax + rax]
0x00003720      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003725      4c89dd         mov rbp, r11
0x00003728      885c240d       mov byte [rsp + 0xd], bl
0x0000372c      e9a8fcffff     jmp 0x33d9
0x00003731      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003736      4531e4         xor r12d, r12d
0x00003739      e902fbffff     jmp 0x3240
0x0000373e      4531d2         xor r10d, r10d
0x00003741      e9b7fbffff     jmp 0x32fd
0x00003746      48c744245000.  mov qword [rsp + 0x50], 0
0x0000374f      c644240e01     mov byte [rsp + 0xe], 1
0x00003754      4531e4         xor r12d, r12d
0x00003757      c644247c00     mov byte [rsp + 0x7c], 0
0x0000375c      e9dafdffff     jmp 0x353b
0x00003761      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003766      4c89f6         mov rsi, r14
0x00003769      4c89e9         mov rcx, r13
0x0000376c      4889d8         mov rax, rbx
0x0000376f      4889df         mov rdi, rbx
0x00003772      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003778      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000377d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003785      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003788      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000378e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003796      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000379b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000037a0      7326           jae 0x37c8
0x000037a2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000037a5      7510           jne 0x37b7
0x000037a7      eb1f           jmp 0x37c8
0x000037a9      0f1f80000000.  nop dword [rax]
0x000037b0      41803c0100     cmp byte [r9 + rax], 0
0x000037b5      740e           je 0x37c5
0x000037b7      4883c001       add rax, 1
0x000037bb      488d540500     lea rdx, [rbp + rax]
0x000037c0      4939d3         cmp r11, rdx
0x000037c3      77eb           ja 0x37b0
0x000037c5      4889c7         mov rdi, rax
0x000037c8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000037cd      4531e4         xor r12d, r12d
0x000037d0      e961faffff     jmp 0x3236
0x000037d5      4889df         mov rdi, rbx
0x000037d8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000037de      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000037e3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000037e9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000037f1      4531e4         xor r12d, r12d
0x000037f4      4c8b742440     mov r14, qword [rsp + 0x40]
0x000037f9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000037fe      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003803      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003808      e929faffff     jmp 0x3236
0x0000380d      488b542468     mov rdx, qword [rsp + 0x68]
0x00003812      0fb602         movzx eax, byte [rdx]
0x00003815      84c0           test al, al
0x00003817      0f842ffeffff   je 0x364c
0x0000381d      0f1f00         nop dword [rax]
0x00003820      4d39fd         cmp r13, r15
0x00003823      7604           jbe 0x3829
0x00003825      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00003829      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000382d      420fb6043a     movzx eax, byte [rdx + r15]
0x00003832      84c0           test al, al
0x00003834      75ea           jne 0x3820
0x00003836      e911feffff     jmp 0x364c
0x0000383b      89d0           mov eax, edx
0x0000383d      e955f5ffff     jmp 0x2d97
0x00003842      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003846      80fb3e         cmp bl, 0x3e
0x00003849      0f8771f8ffff   ja 0x30c0
0x0000384f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003859      480fa3d8       bt rax, rbx
0x0000385d      0f835df8ffff   jae 0x30c0
0x00003863      807c240f00     cmp byte [rsp + 0xf], 0
0x00003868      0f85e4010000   jne 0x3a52                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000386e      4d39fd         cmp r13, r15
0x00003871      7605           jbe 0x3878
0x00003873      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003878      498d4701       lea rax, [r15 + 1]
0x0000387c      4939c5         cmp r13, rax
0x0000387f      7606           jbe 0x3887
0x00003881      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003887      498d4702       lea rax, [r15 + 2]
0x0000388b      4939c5         cmp r13, rax
0x0000388e      7606           jbe 0x3896
0x00003890      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003896      498d4703       lea rax, [r15 + 3]
0x0000389a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000389d      7606           jbe 0x38a5
0x0000389f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x000038a5      4983c704       add r15, 4
0x000038a9      31d2           xor edx, edx
0x000038ab      4531e4         xor r12d, r12d
0x000038ae      31c0           xor eax, eax
0x000038b0      4889cd         mov rbp, rcx
0x000038b3      e9c0f1ffff     jmp 0x2a78
0x000038b8      85db           test ebx, ebx
0x000038ba      0f8488010000   je 0x3a48
0x000038c0      488d05361d00.  lea rax, [0x000055fd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000038c7      c644240e01     mov byte [rsp + 0xe], 1
0x000038cc      c644247c00     mov byte [rsp + 0x7c], 0
0x000038d1      4531e4         xor r12d, r12d
0x000038d4      48c744245000.  mov qword [rsp + 0x50], 0
0x000038dd      c644240f01     mov byte [rsp + 0xf], 1
0x000038e2      c644240d00     mov byte [rsp + 0xd], 0
0x000038e7      48c744241801.  mov qword [rsp + 0x18], 1
0x000038f0      4531ff         xor r15d, r15d
0x000038f3      4889442448     mov qword [rsp + 0x48], rax
0x000038f8      e926f0ffff     jmp 0x2923
0x000038fd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00003900      4c89dd         mov rbp, r11
0x00003903      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003908      e9ccfaffff     jmp 0x33d9
0x0000390d      488d05e71c00.  lea rax, str.l______l                   ; 0x55fb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003914      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00003919      c644247c00     mov byte [rsp + 0x7c], 0
0x0000391e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00003921      48c744245000.  mov qword [rsp + 0x50], 0
0x0000392a      c644240f01     mov byte [rsp + 0xf], 1
0x0000392f      c644240d01     mov byte [rsp + 0xd], 1
0x00003934      48c744241801.  mov qword [rsp + 0x18], 1
0x0000393d      4531ff         xor r15d, r15d
0x00003940      4889442448     mov qword [rsp + 0x48], rax
0x00003945      e9d9efffff     jmp 0x2923
0x0000394a      89d0           mov eax, edx
0x0000394c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003951      4885db         test rbx, rbx
0x00003954      742c           je 0x3982
0x00003956      84c0           test al, al
0x00003958      7428           je 0x3982
0x0000395a      0fb60b         movzx ecx, byte [rbx]
0x0000395d      4889d8         mov rax, rbx
0x00003960      84c9           test cl, cl
0x00003962      741e           je 0x3982
0x00003964      4c89fa         mov rdx, r15
0x00003967      4c29f8         sub rax, r15
0x0000396a      4939d5         cmp r13, rdx
0x0000396d      7604           jbe 0x3973
0x0000396f      41880c16       mov byte [r14 + rdx], cl
0x00003973      4883c201       add rdx, 1
0x00003977      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000397b      84c9           test cl, cl
0x0000397d      75eb           jne 0x396a
0x0000397f      4989d7         mov r15, rdx
0x00003982      4d39fd         cmp r13, r15
0x00003985      0f869efaffff   jbe 0x3429
0x0000398b      43c6043e00     mov byte [r14 + r15], 0
0x00003990      e994faffff     jmp 0x3429
0x00003995      837c240802     cmp dword [rsp + 8], 2
0x0000399a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000399f      4c89dd         mov rbp, r11
0x000039a2      0f94c0         sete al
0x000039a5      885c240d       mov byte [rsp + 0xd], bl
0x000039a9      e92bfaffff     jmp 0x33d9
0x000039ae      8b742408       mov esi, dword [rsp + 8]
0x000039b2      4889cf         mov rdi, rcx
0x000039b5      e8a6edffff     call sym.gettext_quote.part.1
0x000039ba      4889442468     mov qword [rsp + 0x68], rax
0x000039bf      e952fcffff     jmp 0x3616
0x000039c4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x000039c8      4889cf         mov rdi, rcx
0x000039cb      e890edffff     call sym.gettext_quote.part.1
0x000039d0      4889442460     mov qword [rsp + 0x60], rax
0x000039d5      e967fcffff     jmp 0x3641
0x000039da      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000039df      4c89dd         mov rbp, r11
0x000039e2      89d0           mov eax, edx
0x000039e4      885c240d       mov byte [rsp + 0xd], bl
0x000039e8      e9ecf9ffff     jmp 0x33d9
0x000039ed      4883ec08       sub rsp, 8
0x000039f1      41b805000000   mov r8d, 5
0x000039f7      4c89d9         mov rcx, r11
0x000039fa      ff742468       push qword [rsp + 0x68]
0x000039fe      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00003a02      4c89f7         mov rdi, r14
0x00003a05      ff742438       push qword [rsp + 0x38]
0x00003a09      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003a11      488b542430     mov rdx, qword [rsp + 0x30]
0x00003a16      488b742470     mov rsi, qword [rsp + 0x70]
0x00003a1b      e830eeffff     call sym.quotearg_buffer_restyled
0x00003a20      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00003a24      4989c7         mov r15, rax
0x00003a27      e9fdf9ffff     jmp 0x3429
0x00003a2c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00003a31      e916ffffff     jmp 0x394c
0x00003a36      c74424080200.  mov dword [rsp + 8], 2
0x00003a3e      e996f9ffff     jmp 0x33d9
0x00003a43      e848dbffff     call sym.imp.__stack_chk_fail
0x00003a48      c644240d00     mov byte [rsp + 0xd], 0
0x00003a4d      e96ffaffff     jmp 0x34c1
0x00003a52      4c89dd         mov rbp, r11
0x00003a55      e996f9ffff     jmp 0x33f0
0x00003a5a      c644240e01     mov byte [rsp + 0xe], 1
0x00003a5f      31c0           xor eax, eax
0x00003a61      4531e4         xor r12d, r12d
0x00003a64      48c744245000.  mov qword [rsp + 0x50], 0
0x00003a6d      e9a2f5ffff     jmp 0x3014
0x00003a72      4c89ea         mov rdx, r13
0x00003a75      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003a7a      e9f3f5ffff     jmp 0x3072
0x00003a7f      e81cdaffff     call sym.imp.abort
0x00003a84      6690           nop
0x00003a86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00003a90      4157           push r15
0x00003a92      4156           push r14
0x00003a94      4c63ff         movsxd r15, edi
0x00003a97      4155           push r13
0x00003a99      4154           push r12
0x00003a9b      4989d6         mov r14, rdx
0x00003a9e      55             push rbp
0x00003a9f      53             push rbx
0x00003aa0      4889cd         mov rbp, rcx
0x00003aa3      4883ec28       sub rsp, 0x28
0x00003aa7      4889742408     mov qword [rsp + 8], rsi
0x00003aac      e8ffd9ffff     call sym.imp.__errno_location
0x00003ab1      4989c5         mov r13, rax
0x00003ab4      8b00           mov eax, dword [rax]
0x00003ab6      4585ff         test r15d, r15d
0x00003ab9      488b1da04520.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003ac0      89442418       mov dword [rsp + 0x18], eax
0x00003ac4      0f8867010000   js 0x3c31
0x00003aca      44393d874520.  cmp dword [obj.nslots], r15d            ; [0x208058:4]=1
0x00003ad1      7f62           jg 0x3b35
0x00003ad3      4181ffffffff.  cmp r15d, 0x7fffffff
0x00003ada      0f8456010000   je 0x3c36
0x00003ae0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003ae4      488d05854520.  lea rax, obj.slotvec0                   ; 0x208070
0x00003aeb      4963f4         movsxd rsi, r12d
0x00003aee      48c1e604       shl rsi, 4
0x00003af2      4839c3         cmp rbx, rax
0x00003af5      0f8415010000   je 0x3c10
0x00003afb      4889df         mov rdi, rbx
0x00003afe      e8ed0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00003b03      4889c3         mov rbx, rax
0x00003b06      488905534520.  mov qword [obj.slotvec], rax            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003b0d      48633d444520.  movsxd rdi, dword [obj.nslots]          ; [0x208058:4]=1
0x00003b14      4489e2         mov edx, r12d
0x00003b17      31f6           xor esi, esi
0x00003b19      29fa           sub edx, edi
0x00003b1b      48c1e704       shl rdi, 4
0x00003b1f      4863d2         movsxd rdx, edx
0x00003b22      4801df         add rdi, rbx
0x00003b25      48c1e204       shl rdx, 4
0x00003b29      e8b2daffff     call sym.imp.memset
0x00003b2e      448925234520.  mov dword [obj.nslots], r12d            ; [0x208058:4]=1
0x00003b35      8b4504         mov eax, dword [rbp + 4]
0x00003b38      49c1e704       shl r15, 4
0x00003b3c      4883ec08       sub rsp, 8
0x00003b40      4c01fb         add rbx, r15
0x00003b43      4c8d7d08       lea r15, [rbp + 8]
0x00003b47      448b4500       mov r8d, dword [rbp]
0x00003b4b      4c8b1b         mov r11, qword [rbx]
0x00003b4e      4c8b6308       mov r12, qword [rbx + 8]
0x00003b52      4c89f1         mov rcx, r14
0x00003b55      83c801         or eax, 1
0x00003b58      89442424       mov dword [rsp + 0x24], eax
0x00003b5c      ff7530         push qword [rbp + 0x30]
0x00003b5f      4189c1         mov r9d, eax
0x00003b62      ff7528         push qword [rbp + 0x28]
0x00003b65      4157           push r15
0x00003b67      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003b6a      488b542428     mov rdx, qword [rsp + 0x28]
0x00003b6f      4c89e7         mov rdi, r12
0x00003b72      4c895c2430     mov qword [rsp + 0x30], r11
0x00003b77      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00003b7c      4883c420       add rsp, 0x20
0x00003b80      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00003b85      4939c3         cmp r11, rax
0x00003b88      7767           ja 0x3bf1
0x00003b8a      488d7001       lea rsi, [rax + 1]
0x00003b8e      488d054b4520.  lea rax, obj.slot0                      ; 0x2080e0
0x00003b95      4939c4         cmp r12, rax
0x00003b98      488933         mov qword [rbx], rsi
0x00003b9b      7412           je 0x3baf
0x00003b9d      4c89e7         mov rdi, r12
0x00003ba0      4889742410     mov qword [rsp + 0x10], rsi
0x00003ba5      e8e6d8ffff     call sym.imp.free
0x00003baa      488b742410     mov rsi, qword [rsp + 0x10]
0x00003baf      4889f7         mov rdi, rsi
0x00003bb2      4889742410     mov qword [rsp + 0x10], rsi
0x00003bb7      e8d40e0000     call sym.xmalloc
0x00003bbc      4883ec08       sub rsp, 8
0x00003bc0      48894308       mov qword [rbx + 8], rax
0x00003bc4      448b4500       mov r8d, dword [rbp]
0x00003bc8      ff7530         push qword [rbp + 0x30]
0x00003bcb      ff7528         push qword [rbp + 0x28]
0x00003bce      4c89f1         mov rcx, r14
0x00003bd1      4157           push r15
0x00003bd3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00003bd8      4889c7         mov rdi, rax
0x00003bdb      488b542428     mov rdx, qword [rsp + 0x28]
0x00003be0      488b742430     mov rsi, qword [rsp + 0x30]
0x00003be5      4989c4         mov r12, rax
0x00003be8      e863ecffff     call sym.quotearg_buffer_restyled
0x00003bed      4883c420       add rsp, 0x20
0x00003bf1      8b442418       mov eax, dword [rsp + 0x18]
0x00003bf5      41894500       mov dword [r13], eax
0x00003bf9      4883c428       add rsp, 0x28
0x00003bfd      4c89e0         mov rax, r12
0x00003c00      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00003c01      5d             pop rbp
0x00003c02      415c           pop r12
0x00003c04      415d           pop r13
0x00003c06      415e           pop r14
0x00003c08      415f           pop r15
0x00003c0a      c3             ret
0x00003c0b      0f1f440000     nop dword [rax + rax]
0x00003c10      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00003c12      e8d90e0000     call sym.xrealloc
0x00003c17      660f6f055144.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00003c1f      4889c3         mov rbx, rax
0x00003c22      488905374420.  mov qword [obj.slotvec], rax            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003c29      0f1100         movups xmmword [rax], xmm0
0x00003c2c      e9dcfeffff     jmp 0x3b0d
0x00003c31      e86ad8ffff     call sym.imp.abort
0x00003c36      e8a5100000     call sym.xalloc_die
0x00003c3b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00003c40      4154           push r12
0x00003c42      55             push rbp
0x00003c43      53             push rbx
0x00003c44      4889fb         mov rbx, rdi
0x00003c47      e864d8ffff     call sym.imp.__errno_location
0x00003c4c      448b20         mov r12d, dword [rax]
0x00003c4f      4889c5         mov rbp, rax
0x00003c52      488d05874520.  lea rax, obj.default_quoting_options    ; 0x2081e0
0x00003c59      4885db         test rbx, rbx
0x00003c5c      be38000000     mov esi, 0x38                           ; '8'
0x00003c61      480f44d8       cmove rbx, rax
0x00003c65      4889df         mov rdi, rbx
0x00003c68      e823100000     call sym.xmemdup
0x00003c6d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003c71      5b             pop rbx
0x00003c72      5d             pop rbp
0x00003c73      415c           pop r12
0x00003c75      c3             ret
0x00003c76      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00003c80      488d05594520.  lea rax, obj.default_quoting_options    ; 0x2081e0
0x00003c87      4885ff         test rdi, rdi
0x00003c8a      480f44f8       cmove rdi, rax
0x00003c8e      8b07           mov eax, dword [rdi]
0x00003c90      c3             ret
0x00003c91      0f1f440000     nop dword [rax + rax]
0x00003c96      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00003ca0      488d05394520.  lea rax, obj.default_quoting_options    ; 0x2081e0
0x00003ca7      4885ff         test rdi, rdi
0x00003caa      480f44f8       cmove rdi, rax
0x00003cae      8937           mov dword [rdi], esi
0x00003cb0      c3             ret
0x00003cb1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003cb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00003cc0      488d05194520.  lea rax, obj.default_quoting_options    ; 0x2081e0
0x00003cc7      4885ff         test rdi, rdi
0x00003cca      89f1           mov ecx, esi
0x00003ccc      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00003cd0      89f0           mov eax, esi
0x00003cd2      83e11f         and ecx, 0x1f
0x00003cd5      c0e805         shr al, 5
0x00003cd8      0fb6c0         movzx eax, al
0x00003cdb      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00003ce0      8b37           mov esi, dword [rdi]
0x00003ce2      89f0           mov eax, esi
0x00003ce4      d3e8           shr eax, cl
0x00003ce6      31c2           xor edx, eax
0x00003ce8      83e001         and eax, 1
0x00003ceb      83e201         and edx, 1
0x00003cee      d3e2           shl edx, cl
0x00003cf0      31f2           xor edx, esi
0x00003cf2      8917           mov dword [rdi], edx
0x00003cf4      c3             ret
0x00003cf5      90             nop
0x00003cf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00003d00      488d05d94420.  lea rax, obj.default_quoting_options    ; 0x2081e0
0x00003d07      4885ff         test rdi, rdi
0x00003d0a      480f44f8       cmove rdi, rax
0x00003d0e      8b4704         mov eax, dword [rdi + 4]
0x00003d11      897704         mov dword [rdi + 4], esi
0x00003d14      c3             ret
0x00003d15      90             nop
0x00003d16      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00003d20      488d05b94420.  lea rax, obj.default_quoting_options    ; 0x2081e0
0x00003d27      4885ff         test rdi, rdi
0x00003d2a      480f44f8       cmove rdi, rax
0x00003d2e      4885f6         test rsi, rsi
0x00003d31      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003d37      740e           je 0x3d47
0x00003d39      4885d2         test rdx, rdx
0x00003d3c      7409           je 0x3d47
0x00003d3e      48897728       mov qword [rdi + 0x28], rsi
0x00003d42      48895730       mov qword [rdi + 0x30], rdx
0x00003d46      c3             ret
0x00003d47      4883ec08       sub rsp, 8
0x00003d4b      e850d7ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00003d50      4157           push r15
0x00003d52      4156           push r14
0x00003d54      488d05854420.  lea rax, obj.default_quoting_options    ; 0x2081e0
0x00003d5b      4155           push r13
0x00003d5d      4154           push r12
0x00003d5f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00003d62      55             push rbp
0x00003d63      53             push rbx
0x00003d64      4c89c3         mov rbx, r8
0x00003d67      4989f6         mov r14, rsi
0x00003d6a      4989d7         mov r15, rdx
0x00003d6d      4883ec18       sub rsp, 0x18
0x00003d71      4d85c0         test r8, r8
0x00003d74      480f44d8       cmove rbx, rax
0x00003d78      48894c2408     mov qword [rsp + 8], rcx
0x00003d7d      e82ed7ffff     call sym.imp.__errno_location
0x00003d82      448b20         mov r12d, dword [rax]
0x00003d85      4889c5         mov rbp, rax
0x00003d88      488d4308       lea rax, [rbx + 8]
0x00003d8c      4883ec08       sub rsp, 8
0x00003d90      448b4b04       mov r9d, dword [rbx + 4]
0x00003d94      ff7330         push qword [rbx + 0x30]
0x00003d97      448b03         mov r8d, dword [rbx]
0x00003d9a      ff7328         push qword [rbx + 0x28]
0x00003d9d      4c89fa         mov rdx, r15
0x00003da0      50             push rax
0x00003da1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003da6      4c89f6         mov rsi, r14
0x00003da9      4c89ef         mov rdi, r13
0x00003dac      e89feaffff     call sym.quotearg_buffer_restyled
0x00003db1      44896500       mov dword [rbp], r12d
0x00003db5      4883c438       add rsp, 0x38
0x00003db9      5b             pop rbx
0x00003dba      5d             pop rbp
0x00003dbb      415c           pop r12
0x00003dbd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003dbf      415e           pop r14
0x00003dc1      415f           pop r15
0x00003dc3      c3             ret
0x00003dc4      6690           nop
0x00003dc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00003dd0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00003dd2      4156           push r14
0x00003dd4      488d05054420.  lea rax, obj.default_quoting_options    ; 0x2081e0
0x00003ddb      4155           push r13
0x00003ddd      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00003ddf      4989d4         mov r12, rdx
0x00003de2      55             push rbp
0x00003de3      53             push rbx
0x00003de4      4889cb         mov rbx, rcx
0x00003de7      4989fe         mov r14, rdi
0x00003dea      4989f7         mov r15, rsi
0x00003ded      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00003df1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00003df4      480f44d8       cmove rbx, rax
0x00003df8      31ed           xor ebp, ebp
0x00003dfa      e8b1d6ffff     call sym.imp.__errno_location
0x00003dff      4d85e4         test r12, r12
0x00003e02      4989c5         mov r13, rax
0x00003e05      8b00           mov eax, dword [rax]
0x00003e07      400f94c5       sete bpl
0x00003e0b      0b6b04         or ebp, dword [rbx + 4]
0x00003e0e      4c8d5308       lea r10, [rbx + 8]
0x00003e12      4883ec08       sub rsp, 8
0x00003e16      448b03         mov r8d, dword [rbx]
0x00003e19      4c89f9         mov rcx, r15
0x00003e1c      89442414       mov dword [rsp + 0x14], eax
0x00003e20      ff7330         push qword [rbx + 0x30]
0x00003e23      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00003e26      ff7328         push qword [rbx + 0x28]
0x00003e29      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00003e2b      31f6           xor esi, esi
0x00003e2d      4189e9         mov r9d, ebp
0x00003e30      31ff           xor edi, edi
0x00003e32      4c89542440     mov qword [rsp + 0x40], r10
0x00003e37      e814eaffff     call sym.quotearg_buffer_restyled
0x00003e3c      488d7001       lea rsi, [rax + 1]
0x00003e40      4889442448     mov qword [rsp + 0x48], rax
0x00003e45      4883c420       add rsp, 0x20
0x00003e49      4889f7         mov rdi, rsi
0x00003e4c      4889742418     mov qword [rsp + 0x18], rsi
0x00003e51      e83a0c0000     call sym.xmalloc
0x00003e56      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00003e5b      4883ec08       sub rsp, 8
0x00003e5f      ff7330         push qword [rbx + 0x30]
0x00003e62      ff7328         push qword [rbx + 0x28]
0x00003e65      4c8b542438     mov r10, qword [rsp + 0x38]
0x00003e6a      4189e9         mov r9d, ebp
0x00003e6d      448b03         mov r8d, dword [rbx]
0x00003e70      4c89f9         mov rcx, r15
0x00003e73      4c89f2         mov rdx, r14
0x00003e76      4889c7         mov rdi, rax
0x00003e79      4152           push r10
0x00003e7b      488b742438     mov rsi, qword [rsp + 0x38]
0x00003e80      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00003e85      8b44242c       mov eax, dword [rsp + 0x2c]
0x00003e89      4883c420       add rsp, 0x20
0x00003e8d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00003e90      41894500       mov dword [r13], eax
0x00003e94      7409           je 0x3e9f
0x00003e96      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00003e9b      4d891c24       mov qword [r12], r11
0x00003e9f      488b442410     mov rax, qword [rsp + 0x10]
0x00003ea4      4883c438       add rsp, 0x38
0x00003ea8      5b             pop rbx
0x00003ea9      5d             pop rbp
0x00003eaa      415c           pop r12
0x00003eac      415d           pop r13
0x00003eae      415e           pop r14
0x00003eb0      415f           pop r15
0x00003eb2      c3             ret
0x00003eb3      0f1f00         nop dword [rax]
0x00003eb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00003ec0      4889d1         mov rcx, rdx
0x00003ec3      31d2           xor edx, edx
0x00003ec5      e906ffffff     jmp sym.quotearg_alloc_mem
0x00003eca      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00003ed0      8b0582412000   mov eax, dword [obj.nslots]             ; [0x208058:4]=1
0x00003ed6      4154           push r12
0x00003ed8      4c8b25814120.  mov r12, qword [obj.slotvec]            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003edf      55             push rbp
0x00003ee0      53             push rbx
0x00003ee1      83f801         cmp eax, 1
0x00003ee4      7e2b           jle 0x3f11                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00003ee6      83e802         sub eax, 2
0x00003ee9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003eee      48c1e004       shl rax, 4
0x00003ef2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00003ef7      660f1f840000.  nop word [rax + rax]
0x00003f00      488b3b         mov rdi, qword [rbx]
0x00003f03      4883c310       add rbx, 0x10
0x00003f07      e884d5ffff     call sym.imp.free
0x00003f0c      4839eb         cmp rbx, rbp
0x00003f0f      75ef           jne 0x3f00
0x00003f11      498b7c2408     mov rdi, qword [r12 + 8]
0x00003f16      488d1dc34120.  lea rbx, obj.slot0                      ; 0x2080e0
0x00003f1d      4839df         cmp rdi, rbx
0x00003f20      7417           je 0x3f39
0x00003f22      e869d5ffff     call sym.imp.free
0x00003f27      48c7053e4120.  mov qword [obj.slotvec0], 0x100         ; [0x208070:8]=256
0x00003f32      48891d3f4120.  mov qword [0x00208078], rbx             ; [0x208078:8]=0x2080e0 obj.slot0
0x00003f39      488d1d304120.  lea rbx, obj.slotvec0                   ; 0x208070
0x00003f40      4939dc         cmp r12, rbx
0x00003f43      740f           je 0x3f54
0x00003f45      4c89e7         mov rdi, r12
0x00003f48      e843d5ffff     call sym.imp.free
0x00003f4d      48891d0c4120.  mov qword [obj.slotvec], rbx            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003f54      5b             pop rbx
0x00003f55      c705f9402000.  mov dword [obj.nslots], 1               ; [0x208058:4]=1
0x00003f5f      5d             pop rbp
0x00003f60      415c           pop r12
0x00003f62      c3             ret
0x00003f63      0f1f00         nop dword [rax]
0x00003f66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00003f70      488d0d694220.  lea rcx, obj.default_quoting_options    ; 0x2081e0
0x00003f77      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003f7e      e90dfbffff     jmp sym.quotearg_n_options
0x00003f83      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00003f86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00003f90      488d0d494220.  lea rcx, obj.default_quoting_options    ; 0x2081e0
0x00003f97      e9f4faffff     jmp sym.quotearg_n_options
0x00003f9c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00003fa0      488d0d394220.  lea rcx, obj.default_quoting_options    ; 0x2081e0
0x00003fa7      4889fe         mov rsi, rdi
0x00003faa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003fb1      31ff           xor edi, edi
0x00003fb3      e9d8faffff     jmp sym.quotearg_n_options
0x00003fb8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00003fc0      488d0d194220.  lea rcx, obj.default_quoting_options    ; 0x2081e0
0x00003fc7      4889f2         mov rdx, rsi
0x00003fca      4889fe         mov rsi, rdi
0x00003fcd      31ff           xor edi, edi
0x00003fcf      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00003fd4      6690           nop
0x00003fd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00003fe0      4883ec48       sub rsp, 0x48
0x00003fe4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00003fe7      64488b142528.  mov rdx, qword fs:[0x28]
0x00003ff0      4889542438     mov qword [rsp + 0x38], rdx
0x00003ff5      31d2           xor edx, edx
0x00003ff7      83fe0a         cmp esi, 0xa
0x00003ffa      7468           je 0x4064
0x00003ffc      893424         mov dword [rsp], esi
0x00003fff      4889e1         mov rcx, rsp
0x00004002      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004009      4889c6         mov rsi, rax
0x0000400c      48c744240400.  mov qword [rsp + 4], 0
0x00004015      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000401e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004027      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004030      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004039      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004042      c74424340000.  mov dword [rsp + 0x34], 0
0x0000404a      e841faffff     call sym.quotearg_n_options
0x0000404f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004054      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000405d      750a           jne 0x4069                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000405f      4883c448       add rsp, 0x48
0x00004063      c3             ret
0x00004064      e837d4ffff     call sym.imp.abort
0x00004069      e822d5ffff     call sym.imp.__stack_chk_fail
0x0000406e      6690           nop
;-- quotearg_n_style_mem:
0x00004070      4883ec48       sub rsp, 0x48
0x00004074      4889d0         mov rax, rdx
0x00004077      4889ca         mov rdx, rcx
0x0000407a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004083      48894c2438     mov qword [rsp + 0x38], rcx
0x00004088      31c9           xor ecx, ecx
0x0000408a      83fe0a         cmp esi, 0xa
0x0000408d      7461           je 0x40f0
0x0000408f      893424         mov dword [rsp], esi
0x00004092      4889e1         mov rcx, rsp
0x00004095      4889c6         mov rsi, rax
0x00004098      48c744240400.  mov qword [rsp + 4], 0
0x000040a1      48c744240c00.  mov qword [rsp + 0xc], 0
0x000040aa      48c744241400.  mov qword [rsp + 0x14], 0
0x000040b3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000040bc      48c744242400.  mov qword [rsp + 0x24], 0
0x000040c5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000040ce      c74424340000.  mov dword [rsp + 0x34], 0
0x000040d6      e8b5f9ffff     call sym.quotearg_n_options
0x000040db      488b542438     mov rdx, qword [rsp + 0x38]
0x000040e0      644833142528.  xor rdx, qword fs:[0x28]
0x000040e9      750a           jne 0x40f5
0x000040eb      4883c448       add rsp, 0x48
0x000040ef      c3             ret
0x000040f0      e8abd3ffff     call sym.imp.abort
0x000040f5      e896d4ffff     call sym.imp.__stack_chk_fail
0x000040fa      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004100      4889f2         mov rdx, rsi
0x00004103      89fe           mov esi, edi
0x00004105      31ff           xor edi, edi
0x00004107      e9d4feffff     jmp sym.quotearg_n_style
0x0000410c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004110      4889d1         mov rcx, rdx
0x00004113      4889f2         mov rdx, rsi
0x00004116      89fe           mov esi, edi
0x00004118      31ff           xor edi, edi
0x0000411a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000411f      90             nop
;-- quotearg_char_mem:
0x00004120      4883ec48       sub rsp, 0x48
0x00004124      89d1           mov ecx, edx
0x00004126      64488b042528.  mov rax, qword fs:[0x28]
0x0000412f      4889442438     mov qword [rsp + 0x38], rax
0x00004134      31c0           xor eax, eax
0x00004136      488b05d34020.  mov rax, qword [0x00208210]             ; [0x208210:8]=0
0x0000413d      4989e0         mov r8, rsp
0x00004140      83e11f         and ecx, 0x1f
0x00004143      660f6f059540.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000414b      4889442430     mov qword [rsp + 0x30], rax
0x00004150      89d0           mov eax, edx
0x00004152      0f290424       movaps xmmword [rsp], xmm0
0x00004156      c0e805         shr al, 5
0x00004159      0fb6c0         movzx eax, al
0x0000415c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004161      660f6f058740.  movdqa xmm0, xmmword [0x002081f0]
0x00004169      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000416e      660f6f058a40.  movdqa xmm0, xmmword [0x00208200]
0x00004176      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000417b      418b11         mov edx, dword [r9]
0x0000417e      89d0           mov eax, edx
0x00004180      d3e8           shr eax, cl
0x00004182      f7d0           not eax
0x00004184      83e001         and eax, 1
0x00004187      d3e0           shl eax, cl
0x00004189      4c89c1         mov rcx, r8
0x0000418c      31d0           xor eax, edx
0x0000418e      4889f2         mov rdx, rsi
0x00004191      4889fe         mov rsi, rdi
0x00004194      418901         mov dword [r9], eax
0x00004197      31ff           xor edi, edi
0x00004199      e8f2f8ffff     call sym.quotearg_n_options
0x0000419e      488b742438     mov rsi, qword [rsp + 0x38]
0x000041a3      644833342528.  xor rsi, qword fs:[0x28]
0x000041ac      7505           jne 0x41b3
0x000041ae      4883c448       add rsp, 0x48
0x000041b2      c3             ret
0x000041b3      e8d8d3ffff     call sym.imp.__stack_chk_fail
0x000041b8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x000041c0      400fbed6       movsx edx, sil
0x000041c4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000041cb      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x000041d0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000041d5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000041dc      e93fffffff     jmp sym.quotearg_char_mem
0x000041e1      0f1f440000     nop dword [rax + rax]
0x000041e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000041f0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000041f5      e926ffffff     jmp sym.quotearg_char_mem
0x000041fa      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004200      4883ec48       sub rsp, 0x48
0x00004204      4889d0         mov rax, rdx
0x00004207      64488b142528.  mov rdx, qword fs:[0x28]
0x00004210      4889542438     mov qword [rsp + 0x38], rdx
0x00004215      31d2           xor edx, edx
0x00004217      83fe0a         cmp esi, 0xa
0x0000421a      7468           je 0x4284
0x0000421c      893424         mov dword [rsp], esi
0x0000421f      4889e1         mov rcx, rsp
0x00004222      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004229      4889c6         mov rsi, rax
0x0000422c      48c744240400.  mov qword [rsp + 4], 0
0x00004235      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000423e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004247      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004250      48c744242400.  mov qword [rsp + 0x24], 0
0x00004259      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004262      c74424340000.  mov dword [rsp + 0x34], 0
0x0000426a      e821f8ffff     call sym.quotearg_n_options
0x0000426f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004274      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000427d      750a           jne 0x4289
0x0000427f      4883c448       add rsp, 0x48
0x00004283      c3             ret
0x00004284      e817d2ffff     call sym.imp.abort
0x00004289      e802d3ffff     call sym.imp.__stack_chk_fail
0x0000428e      6690           nop
;-- quotearg_n_custom_mem:
0x00004290      4883ec48       sub rsp, 0x48
0x00004294      4989c9         mov r9, rcx
0x00004297      488b0d723f20.  mov rcx, qword [0x00208210]             ; [0x208210:8]=0
0x0000429e      660f6f053a3f.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000042a6      64488b042528.  mov rax, qword fs:[0x28]
0x000042af      4889442438     mov qword [rsp + 0x38], rax
0x000042b4      31c0           xor eax, eax
0x000042b6      0f290424       movaps xmmword [rsp], xmm0
0x000042ba      4885f6         test rsi, rsi
0x000042bd      48894c2430     mov qword [rsp + 0x30], rcx
0x000042c2      c704240a0000.  mov dword [rsp], 0xa
0x000042c9      660f6f051f3f.  movdqa xmm0, xmmword [0x002081f0]
0x000042d1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000042d6      660f6f05223f.  movdqa xmm0, xmmword [0x00208200]
0x000042de      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000042e3      7432           je 0x4317
0x000042e5      4885d2         test rdx, rdx
0x000042e8      742d           je 0x4317
0x000042ea      4889742428     mov qword [rsp + 0x28], rsi
0x000042ef      4889542430     mov qword [rsp + 0x30], rdx
0x000042f4      4889e1         mov rcx, rsp
0x000042f7      4c89c2         mov rdx, r8
0x000042fa      4c89ce         mov rsi, r9
0x000042fd      e88ef7ffff     call sym.quotearg_n_options
0x00004302      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004307      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004310      750a           jne 0x431c
0x00004312      4883c448       add rsp, 0x48
0x00004316      c3             ret
0x00004317      e884d1ffff     call sym.imp.abort
0x0000431c      e86fd2ffff     call sym.imp.__stack_chk_fail
0x00004321      0f1f440000     nop dword [rax + rax]
0x00004326      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004330      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004337      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000433c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004340      4889d1         mov rcx, rdx
0x00004343      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000434a      4889f2         mov rdx, rsi
0x0000434d      4889fe         mov rsi, rdi
0x00004350      31ff           xor edi, edi
0x00004352      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004357      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004360      4989c8         mov r8, rcx
0x00004363      4889d1         mov rcx, rdx
0x00004366      4889f2         mov rdx, rsi
0x00004369      4889fe         mov rsi, rdi
0x0000436c      31ff           xor edi, edi
0x0000436e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004373      0f1f00         nop dword [rax]
0x00004376      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004380      488d0d993c20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00004387      e904f7ffff     jmp sym.quotearg_n_options
0x0000438c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004390      488d0d893c20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00004397      4889f2         mov rdx, rsi
0x0000439a      4889fe         mov rsi, rdi
0x0000439d      31ff           xor edi, edi
0x0000439f      e9ecf6ffff     jmp sym.quotearg_n_options
0x000043a4      6690           nop
0x000043a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x000043b0      488d0d693c20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x000043b7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000043be      e9cdf6ffff     jmp sym.quotearg_n_options
0x000043c3      0f1f00         nop dword [rax]
0x000043c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x000043d0      488d0d493c20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x000043d7      4889fe         mov rsi, rdi
0x000043da      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000043e1      31ff           xor edi, edi
0x000043e3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000043e8      0f1f84000000.  nop dword [rax + rax]
;-- get_root_dev_ino:
0x000043f0      53             push rbx                                ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x000043f1      488d35ee1100.  lea rsi, [0x000055e6]                   ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf); ; "/"
0x000043f8      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x000043fb      bf01000000     mov edi, 1                              ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00004400      4881eca00000.  sub rsp, 0xa0                           ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x00004407      4889e2         mov rdx, rsp                            ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x0000440a      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x00004413      488984249800.  mov qword [rsp + 0x98], rax
0x0000441b      31c0           xor eax, eax
0x0000441d      e84ed1ffff     call sym.imp.__lxstat                   ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00004422      85c0           test eax, eax                           ; ../coreutils-8.31/lib/root-dev-ino.c:32
0x00004424      7532           jne 0x4458
0x00004426      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/root-dev-ino.c:34
0x0000442b      488903         mov qword [rbx], rax
0x0000442e      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/root-dev-ino.c:35
0x00004432      48894308       mov qword [rbx + 8], rax
0x00004436      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/root-dev-ino.c:36
0x00004439      488b8c249800.  mov rcx, qword [rsp + 0x98]             ; ../coreutils-8.31/lib/root-dev-ino.c:37
0x00004441      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000444a      7510           jne 0x445c
0x0000444c      4881c4a00000.  add rsp, 0xa0
0x00004453      5b             pop rbx
0x00004454      c3             ret
0x00004455      0f1f00         nop dword [rax]
0x00004458      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/root-dev-ino.c:33
0x0000445a      ebdd           jmp 0x4439
0x0000445c      e82fd1ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/root-dev-ino.c:37
0x00004461      662e0f1f8400.  nop word cs:[rax + rax]
0x0000446b      0f1f440000     nop dword [rax + rax]
;-- version_etc_arn:
0x00004470      4157           push r15
0x00004472      4156           push r14
0x00004474      4155           push r13
0x00004476      4154           push r12
0x00004478      4d89cc         mov r12, r9
0x0000447b      55             push rbp
0x0000447c      53             push rbx
0x0000447d      4889fd         mov rbp, rdi
0x00004480      4c89c3         mov rbx, r8
0x00004483      4883ec28       sub rsp, 0x28
0x00004487      4885f6         test rsi, rsi
0x0000448a      0f8418010000   je 0x45a8
0x00004490      4989d0         mov r8, rdx
0x00004493      488d152e1600.  lea rdx, [0x00005ac8]                   ; "%s (%s) %s\n"
0x0000449a      4989c9         mov r9, rcx
0x0000449d      31c0           xor eax, eax
0x0000449f      4889f1         mov rcx, rsi
0x000044a2      be01000000     mov esi, 1
0x000044a7      e8c4d2ffff     call sym.imp.__fprintf_chk
0x000044ac      488d35281600.  lea rsi, [0x00005adb]                   ; "(C)"
0x000044b3      31ff           xor edi, edi
0x000044b5      ba05000000     mov edx, 5
0x000044ba      e881d0ffff     call sym.imp.dcgettext
0x000044bf      488d153a1900.  lea rdx, obj.version_etc_copyright      ; 0x5e00 ; "Copyright %s %d Free Software Foundation, Inc."
0x000044c6      4889c1         mov rcx, rax
0x000044c9      41b8e3070000   mov r8d, 0x7e3
0x000044cf      be01000000     mov esi, 1
0x000044d4      4889ef         mov rdi, rbp
0x000044d7      31c0           xor eax, eax
0x000044d9      e892d2ffff     call sym.imp.__fprintf_chk
0x000044de      488d35831600.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x5b68 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x000044e5      31ff           xor edi, edi
0x000044e7      ba05000000     mov edx, 5
0x000044ec      e84fd0ffff     call sym.imp.dcgettext
0x000044f1      4889ee         mov rsi, rbp
0x000044f4      4889c7         mov rdi, rax
0x000044f7      e824d1ffff     call sym.imp.fputs_unlocked
0x000044fc      4983fc09       cmp r12, 9
0x00004500      0f873a030000   ja 0x4840
0x00004506      488d15bb1800.  lea rdx, [0x00005dc8]
0x0000450d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004511      4801d0         add rax, rdx
0x00004514      ffe0           jmp rax
0x00004516      662e0f1f8400.  nop word cs:[rax + rax]
0x00004520      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004524      488b4310       mov rax, qword [rbx + 0x10]
0x00004528      488d35a91700.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x5cd8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000452f      4c8b4308       mov r8, qword [rbx + 8]
0x00004533      ba05000000     mov edx, 5
0x00004538      31ff           xor edi, edi
0x0000453a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000453e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004542      4c894c2410     mov qword [rsp + 0x10], r9
0x00004547      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000454b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000454f      48890424       mov qword [rsp], rax
0x00004553      4c89442408     mov qword [rsp + 8], r8
0x00004558      488b1b         mov rbx, qword [rbx]
0x0000455b      e8e0cfffff     call sym.imp.dcgettext
0x00004560      4883ec08       sub rsp, 8
0x00004564      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00004569      4889c2         mov rdx, rax
0x0000456c      4889d9         mov rcx, rbx
0x0000456f      be01000000     mov esi, 1
0x00004574      4889ef         mov rdi, rbp
0x00004577      31c0           xor eax, eax
0x00004579      4151           push r9
0x0000457b      4155           push r13
0x0000457d      4154           push r12
0x0000457f      4157           push r15
0x00004581      4156           push r14
0x00004583      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004588      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000458d      e8ded1ffff     call sym.imp.__fprintf_chk
0x00004592      4883c430       add rsp, 0x30
0x00004596      4883c428       add rsp, 0x28
0x0000459a      5b             pop rbx
0x0000459b      5d             pop rbp
0x0000459c      415c           pop r12
0x0000459e      415d           pop r13
0x000045a0      415e           pop r14
0x000045a2      415f           pop r15
0x000045a4      c3             ret
0x000045a5      0f1f00         nop dword [rax]
0x000045a8      4989c8         mov r8, rcx
0x000045ab      4889d1         mov rcx, rdx
0x000045ae      488d151f1500.  lea rdx, str.s__s                       ; 0x5ad4 ; "%s %s\n"
0x000045b5      be01000000     mov esi, 1
0x000045ba      31c0           xor eax, eax
0x000045bc      e8afd1ffff     call sym.imp.__fprintf_chk
0x000045c1      e9e6feffff     jmp 0x44ac
0x000045c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000045d0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000045d4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000045d8      488d35291700.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x5d08 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x000045df      488b4310       mov rax, qword [rbx + 0x10]
0x000045e3      4c8b4308       mov r8, qword [rbx + 8]
0x000045e7      ba05000000     mov edx, 5
0x000045ec      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000045f0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000045f4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000045f8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000045fc      488b1b         mov rbx, qword [rbx]
0x000045ff      4c89542418     mov qword [rsp + 0x18], r10
0x00004604      4c894c2410     mov qword [rsp + 0x10], r9
0x00004609      48890424       mov qword [rsp], rax
0x0000460d      4c89442408     mov qword [rsp + 8], r8
0x00004612      31ff           xor edi, edi
0x00004614      e827cfffff     call sym.imp.dcgettext
0x00004619      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000461e      4152           push r10
0x00004620      e93fffffff     jmp 0x4564
0x00004625      0f1f00         nop dword [rax]
0x00004628      488b1b         mov rbx, qword [rbx]
0x0000462b      488d35ad1400.  lea rsi, str.Written_by__s.             ; 0x5adf ; "Written by %s.\n"
0x00004632      ba05000000     mov edx, 5
0x00004637      31ff           xor edi, edi
0x00004639      e802cfffff     call sym.imp.dcgettext
0x0000463e      4883c428       add rsp, 0x28
0x00004642      4889d9         mov rcx, rbx
0x00004645      4889ef         mov rdi, rbp
0x00004648      5b             pop rbx
0x00004649      5d             pop rbp
0x0000464a      415c           pop r12
0x0000464c      415d           pop r13
0x0000464e      415e           pop r14
0x00004650      415f           pop r15
0x00004652      4889c2         mov rdx, rax
0x00004655      be01000000     mov esi, 1
0x0000465a      31c0           xor eax, eax
0x0000465c      e90fd1ffff     jmp sym.imp.__fprintf_chk
0x00004661      0f1f80000000.  nop dword [rax]
0x00004668      4c8b6308       mov r12, qword [rbx + 8]
0x0000466c      488d357c1400.  lea rsi, str.Written_by__s_and__s.      ; 0x5aef ; "Written by %s and %s.\n"
0x00004673      488b1b         mov rbx, qword [rbx]
0x00004676      ba05000000     mov edx, 5
0x0000467b      31ff           xor edi, edi
0x0000467d      e8beceffff     call sym.imp.dcgettext
0x00004682      4883c428       add rsp, 0x28
0x00004686      4d89e0         mov r8, r12
0x00004689      4889d9         mov rcx, rbx
0x0000468c      4889ef         mov rdi, rbp
0x0000468f      4889c2         mov rdx, rax
0x00004692      be01000000     mov esi, 1
0x00004697      5b             pop rbx
0x00004698      5d             pop rbp
0x00004699      415c           pop r12
0x0000469b      415d           pop r13
0x0000469d      415e           pop r14
0x0000469f      415f           pop r15
0x000046a1      31c0           xor eax, eax
0x000046a3      e9c8d0ffff     jmp sym.imp.__fprintf_chk
0x000046a8      0f1f84000000.  nop dword [rax + rax]
0x000046b0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000046b4      4c8b6308       mov r12, qword [rbx + 8]
0x000046b8      488d35471400.  lea rsi, str.Written_by__s___s__and__s. ; 0x5b06 ; "Written by %s, %s, and %s.\n"
0x000046bf      488b1b         mov rbx, qword [rbx]
0x000046c2      ba05000000     mov edx, 5
0x000046c7      31ff           xor edi, edi
0x000046c9      e872ceffff     call sym.imp.dcgettext
0x000046ce      4883c428       add rsp, 0x28
0x000046d2      4d89e9         mov r9, r13
0x000046d5      4d89e0         mov r8, r12
0x000046d8      4889d9         mov rcx, rbx
0x000046db      4889ef         mov rdi, rbp
0x000046de      4889c2         mov rdx, rax
0x000046e1      5b             pop rbx
0x000046e2      5d             pop rbp
0x000046e3      415c           pop r12
0x000046e5      415d           pop r13
0x000046e7      415e           pop r14
0x000046e9      415f           pop r15
0x000046eb      be01000000     mov esi, 1
0x000046f0      31c0           xor eax, eax
0x000046f2      e979d0ffff     jmp sym.imp.__fprintf_chk
0x000046f7      660f1f840000.  nop word [rax + rax]
0x00004700      488d35311500.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x5c38 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004707      ba05000000     mov edx, 5
0x0000470c      31ff           xor edi, edi
0x0000470e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004712      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004716      4c8b6308       mov r12, qword [rbx + 8]
0x0000471a      488b1b         mov rbx, qword [rbx]
0x0000471d      e81eceffff     call sym.imp.dcgettext
0x00004722      4883ec08       sub rsp, 8
0x00004726      4156           push r14
0x00004728      4889c2         mov rdx, rax
0x0000472b      4d89e9         mov r9, r13
0x0000472e      4d89e0         mov r8, r12
0x00004731      4889d9         mov rcx, rbx
0x00004734      4889ef         mov rdi, rbp
0x00004737      be01000000     mov esi, 1
0x0000473c      31c0           xor eax, eax
0x0000473e      e82dd0ffff     call sym.imp.__fprintf_chk
0x00004743      58             pop rax
0x00004744      5a             pop rdx
0x00004745      4883c428       add rsp, 0x28
0x00004749      5b             pop rbx
0x0000474a      5d             pop rbp
0x0000474b      415c           pop r12
0x0000474d      415d           pop r13
0x0000474f      415e           pop r14
0x00004751      415f           pop r15
0x00004753      c3             ret
0x00004754      0f1f4000       nop dword [rax]
0x00004758      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000475c      488d35f51400.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x5c58 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00004763      ba05000000     mov edx, 5
0x00004768      31ff           xor edi, edi
0x0000476a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000476e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004772      4c8b6308       mov r12, qword [rbx + 8]
0x00004776      488b1b         mov rbx, qword [rbx]
0x00004779      e8c2cdffff     call sym.imp.dcgettext
0x0000477e      4157           push r15
0x00004780      eba4           jmp 0x4726
0x00004782      660f1f440000   nop word [rax + rax]
0x00004788      4c8b4308       mov r8, qword [rbx + 8]
0x0000478c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004790      488d35e91400.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x5c80 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00004797      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000479b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000479f      ba05000000     mov edx, 5
0x000047a4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000047a8      31ff           xor edi, edi
0x000047aa      488b1b         mov rbx, qword [rbx]
0x000047ad      4c890424       mov qword [rsp], r8
0x000047b1      e88acdffff     call sym.imp.dcgettext
0x000047b6      4883ec08       sub rsp, 8
0x000047ba      4d89e9         mov r9, r13
0x000047bd      4154           push r12
0x000047bf      4157           push r15
0x000047c1      4156           push r14
0x000047c3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000047c8      4889d9         mov rcx, rbx
0x000047cb      4889c2         mov rdx, rax
0x000047ce      4889ef         mov rdi, rbp
0x000047d1      be01000000     mov esi, 1
0x000047d6      31c0           xor eax, eax
0x000047d8      e893cfffff     call sym.imp.__fprintf_chk
0x000047dd      4883c420       add rsp, 0x20
0x000047e1      4883c428       add rsp, 0x28
0x000047e5      5b             pop rbx
0x000047e6      5d             pop rbp
0x000047e7      415c           pop r12
0x000047e9      415d           pop r13
0x000047eb      415e           pop r14
0x000047ed      415f           pop r15
0x000047ef      c3             ret
0x000047f0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x000047f4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000047f8      488d35a91400.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x5ca8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x000047ff      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004803      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004807      ba05000000     mov edx, 5
0x0000480c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004810      4c8b4308       mov r8, qword [rbx + 8]
0x00004814      31ff           xor edi, edi
0x00004816      4c894c2408     mov qword [rsp + 8], r9
0x0000481b      488b1b         mov rbx, qword [rbx]
0x0000481e      4c890424       mov qword [rsp], r8
0x00004822      e819cdffff     call sym.imp.dcgettext
0x00004827      4155           push r13
0x00004829      4154           push r12
0x0000482b      4157           push r15
0x0000482d      4156           push r14
0x0000482f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004834      eb8d           jmp 0x47c3
0x00004836      662e0f1f8400.  nop word cs:[rax + rax]
0x00004840      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004844      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004848      ba05000000     mov edx, 5
0x0000484d      488b4310       mov rax, qword [rbx + 0x10]
0x00004851      4c8b4308       mov r8, qword [rbx + 8]
0x00004855      488d35e41400.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x5d40 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000485c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004860      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004864      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004868      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000486c      4c89542418     mov qword [rsp + 0x18], r10
0x00004871      4c894c2410     mov qword [rsp + 0x10], r9
0x00004876      48890424       mov qword [rsp], rax
0x0000487a      4c89442408     mov qword [rsp + 8], r8
0x0000487f      488b1b         mov rbx, qword [rbx]
0x00004882      e98bfdffff     jmp 0x4612
0x00004887      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00004890      4531c9         xor r9d, r9d
0x00004893      49833800       cmp qword [r8], 0
0x00004897      7412           je 0x48ab
0x00004899      0f1f80000000.  nop dword [rax]
0x000048a0      4983c101       add r9, 1
0x000048a4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000048a9      75f5           jne 0x48a0
0x000048ab      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000048b0      4883ec68       sub rsp, 0x68
0x000048b4      4d89c2         mov r10, r8
0x000048b7      4531c9         xor r9d, r9d
0x000048ba      64488b042528.  mov rax, qword fs:[0x28]
0x000048c3      4889442458     mov qword [rsp + 0x58], rax
0x000048c8      31c0           xor eax, eax
0x000048ca      4989e0         mov r8, rsp
0x000048cd      0f1f00         nop dword [rax]
0x000048d0      418b02         mov eax, dword [r10]
0x000048d3      83f82f         cmp eax, 0x2f
0x000048d6      7742           ja 0x491a
0x000048d8      4189c3         mov r11d, eax
0x000048db      4d035a10       add r11, qword [r10 + 0x10]
0x000048df      83c008         add eax, 8
0x000048e2      418902         mov dword [r10], eax
0x000048e5      498b03         mov rax, qword [r11]
0x000048e8      4885c0         test rax, rax
0x000048eb      4b8904c8       mov qword [r8 + r9*8], rax
0x000048ef      740a           je 0x48fb
0x000048f1      4983c101       add r9, 1
0x000048f5      4983f90a       cmp r9, 0xa
0x000048f9      75d5           jne 0x48d0
0x000048fb      e870fbffff     call sym.version_etc_arn
0x00004900      488b442458     mov rax, qword [rsp + 0x58]
0x00004905      644833042528.  xor rax, qword fs:[0x28]
0x0000490e      7505           jne 0x4915
0x00004910      4883c468       add rsp, 0x68
0x00004914      c3             ret
0x00004915      e876ccffff     call sym.imp.__stack_chk_fail
0x0000491a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000491e      498d4308       lea rax, [r11 + 8]
0x00004922      49894208       mov qword [r10 + 8], rax
0x00004926      ebbd           jmp 0x48e5
0x00004928      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00004930      55             push rbp
0x00004931      53             push rbx
0x00004932      41ba20000000   mov r10d, 0x20                          ; "@"
0x00004938      4531db         xor r11d, r11d
0x0000493b      4881ecb80000.  sub rsp, 0xb8
0x00004942      64488b042528.  mov rax, qword fs:[0x28]
0x0000494b      4889442478     mov qword [rsp + 0x78], rax
0x00004950      31c0           xor eax, eax
0x00004952      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000495a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00004962      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000496a      4c8d442420     lea r8, [rsp + 0x20]
0x0000496f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00004977      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000497f      4889442410     mov qword [rsp + 0x10], rax
0x00004984      488d84248000.  lea rax, [rsp + 0x80]
0x0000498c      4531c9         xor r9d, r9d
0x0000498f      4889442418     mov qword [rsp + 0x18], rax
0x00004994      4889c5         mov rbp, rax
0x00004997      660f1f840000.  nop word [rax + rax]
0x000049a0      4183fa2f       cmp r10d, 0x2f
0x000049a4      7756           ja 0x49fc
0x000049a6      4489d0         mov eax, r10d
0x000049a9      41bb01000000   mov r11d, 1
0x000049af      4183c208       add r10d, 8
0x000049b3      4801e8         add rax, rbp
0x000049b6      488b00         mov rax, qword [rax]
0x000049b9      4885c0         test rax, rax
0x000049bc      4b8904c8       mov qword [r8 + r9*8], rax
0x000049c0      740a           je 0x49cc
0x000049c2      4983c101       add r9, 1
0x000049c6      4983f90a       cmp r9, 0xa
0x000049ca      75d4           jne 0x49a0
0x000049cc      4584db         test r11b, r11b
0x000049cf      7524           jne 0x49f5
0x000049d1      e89afaffff     call sym.version_etc_arn
0x000049d6      488b442478     mov rax, qword [rsp + 0x78]
0x000049db      644833042528.  xor rax, qword fs:[0x28]
0x000049e4      750a           jne 0x49f0
0x000049e6      4881c4b80000.  add rsp, 0xb8
0x000049ed      5b             pop rbx
0x000049ee      5d             pop rbp
0x000049ef      c3             ret
0x000049f0      e89bcbffff     call sym.imp.__stack_chk_fail
0x000049f5      4489542408     mov dword [rsp + 8], r10d
0x000049fa      ebd5           jmp 0x49d1
0x000049fc      4889d8         mov rax, rbx
0x000049ff      4883c308       add rbx, 8
0x00004a03      ebb1           jmp 0x49b6
0x00004a05      90             nop
0x00004a06      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00004a10      53             push rbx
0x00004a11      488d350a1100.  lea rsi, str.Report_bugs_to:__s         ; 0x5b22 ; "\nReport bugs to: %s\n"
0x00004a18      ba05000000     mov edx, 5
0x00004a1d      31ff           xor edi, edi
0x00004a1f      e81ccbffff     call sym.imp.dcgettext
0x00004a24      488d150c1100.  lea rdx, str.bug_coreutils_gnu.org      ; 0x5b37 ; "bug-coreutils@gnu.org"
0x00004a2b      4889c6         mov rsi, rax
0x00004a2e      bf01000000     mov edi, 1
0x00004a33      31c0           xor eax, eax
0x00004a35      e8d6ccffff     call sym.imp.__printf_chk
0x00004a3a      488d350c1100.  lea rsi, str.s_home_page:___s           ; 0x5b4d ; "%s home page: <%s>\n"
0x00004a41      ba05000000     mov edx, 5
0x00004a46      31ff           xor edi, edi
0x00004a48      e8f3caffff     call sym.imp.dcgettext
0x00004a4d      488d0d940a00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x54e8 ; "https://www.gnu.org/software/coreutils/"
0x00004a54      488d155a0700.  lea rdx, str.GNU_coreutils              ; 0x51b5 ; "GNU coreutils"
0x00004a5b      4889c6         mov rsi, rax
0x00004a5e      bf01000000     mov edi, 1
0x00004a63      31c0           xor eax, eax
0x00004a65      e8a6ccffff     call sym.imp.__printf_chk
0x00004a6a      488b1d173620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00004a71      488d35081300.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x5d80 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00004a78      31ff           xor edi, edi
0x00004a7a      ba05000000     mov edx, 5
0x00004a7f      e8bccaffff     call sym.imp.dcgettext
0x00004a84      4889de         mov rsi, rbx
0x00004a87      4889c7         mov rdi, rax
0x00004a8a      5b             pop rbx
0x00004a8b      e990cbffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00004a90      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00004a91      4889fb         mov rbx, rdi
0x00004a94      e8f7cbffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00004a99      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00004a9c      7505           jne 0x4aa3
0x00004a9e      4885db         test rbx, rbx
0x00004aa1      7502           jne 0x4aa5
0x00004aa3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00004aa4      c3             ret
0x00004aa5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00004aaa      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00004ab0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00004ab3      48f7e6         mul rsi
0x00004ab6      4889c7         mov rdi, rax
0x00004ab9      0f90c0         seto al
0x00004abc      4885ff         test rdi, rdi
0x00004abf      780a           js 0x4acb
0x00004ac1      0fb6c0         movzx eax, al
0x00004ac4      4885c0         test rax, rax
0x00004ac7      7502           jne 0x4acb
0x00004ac9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00004acb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00004acf      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00004ad4      6690           nop
0x00004ad6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00004ae0      ebae           jmp sym.xmalloc
0x00004ae2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00004ae6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00004af0      4885f6         test rsi, rsi
0x00004af3      53             push rbx
0x00004af4      4889f3         mov rbx, rsi
0x00004af7      7505           jne 0x4afe
0x00004af9      4885ff         test rdi, rdi
0x00004afc      751a           jne 0x4b18
0x00004afe      4889de         mov rsi, rbx
0x00004b01      e8eacbffff     call sym.imp.realloc
0x00004b06      4885c0         test rax, rax
0x00004b09      7505           jne 0x4b10
0x00004b0b      4885db         test rbx, rbx
0x00004b0e      7511           jne 0x4b21                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00004b10      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00004b11      c3             ret
0x00004b12      660f1f440000   nop word [rax + rax]
0x00004b18      e873c9ffff     call sym.imp.free
0x00004b1d      31c0           xor eax, eax
0x00004b1f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00004b20      c3             ret
0x00004b21      e8ba010000     call sym.xalloc_die
0x00004b26      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00004b30      4889f0         mov rax, rsi
0x00004b33      48f7e2         mul rdx
0x00004b36      4889c6         mov rsi, rax
0x00004b39      0f90c0         seto al
0x00004b3c      4885f6         test rsi, rsi
0x00004b3f      780a           js 0x4b4b
0x00004b41      0fb6c0         movzx eax, al
0x00004b44      4885c0         test rax, rax
0x00004b47      7502           jne 0x4b4b
0x00004b49      eba5           jmp sym.xrealloc
0x00004b4b      4883ec08       sub rsp, 8
0x00004b4f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00004b54      6690           nop
0x00004b56      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00004b60      4885ff         test rdi, rdi
0x00004b63      4989d1         mov r9, rdx
0x00004b66      488b0e         mov rcx, qword [rsi]
0x00004b69      7435           je 0x4ba0
0x00004b6b      31d2           xor edx, edx
0x00004b6d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00004b77      49f7f1         div r9
0x00004b7a      4839c8         cmp rax, rcx
0x00004b7d      763c           jbe 0x4bbb
0x00004b7f      4889c8         mov rax, rcx
0x00004b82      48d1e8         shr rax, 1
0x00004b85      488d4c0801     lea rcx, [rax + rcx + 1]
0x00004b8a      48890e         mov qword [rsi], rcx
0x00004b8d      490fafc9       imul rcx, r9
0x00004b91      4889ce         mov rsi, rcx
0x00004b94      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00004b99      0f1f80000000.  nop dword [rax]
0x00004ba0      4885c9         test rcx, rcx
0x00004ba3      7423           je 0x4bc8
0x00004ba5      4889c8         mov rax, rcx
0x00004ba8      49f7e1         mul r9
0x00004bab      0f90c2         seto dl
0x00004bae      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00004bb1      0fb6d2         movzx edx, dl
0x00004bb4      7805           js 0x4bbb
0x00004bb6      4885d2         test rdx, rdx
0x00004bb9      74cf           je 0x4b8a
0x00004bbb      4883ec08       sub rsp, 8
0x00004bbf      e81c010000     call sym.xalloc_die
0x00004bc4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00004bc8      31d2           xor edx, edx
0x00004bca      b880000000     mov eax, 0x80
0x00004bcf      4531c0         xor r8d, r8d
0x00004bd2      49f7f1         div r9
0x00004bd5      4885c0         test rax, rax
0x00004bd8      410f94c0       sete r8b
0x00004bdc      498d0c00       lea rcx, [r8 + rax]
0x00004be0      ebc3           jmp 0x4ba5
0x00004be2      0f1f4000       nop dword [rax]
0x00004be6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00004bf0      4885ff         test rdi, rdi
0x00004bf3      488b06         mov rax, qword [rsi]
0x00004bf6      7428           je 0x4c20
0x00004bf8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00004c02      4839d0         cmp rax, rdx
0x00004c05      772a           ja 0x4c31
0x00004c07      4889c2         mov rdx, rax
0x00004c0a      48d1ea         shr rdx, 1
0x00004c0d      488d440201     lea rax, [rdx + rax + 1]
0x00004c12      488906         mov qword [rsi], rax
0x00004c15      4889c6         mov rsi, rax
0x00004c18      e9d3feffff     jmp sym.xrealloc
0x00004c1d      0f1f00         nop dword [rax]
0x00004c20      4885c0         test rax, rax
0x00004c23      ba80000000     mov edx, 0x80
0x00004c28      480f44c2       cmove rax, rdx
0x00004c2c      4885c0         test rax, rax
0x00004c2f      79e1           jns 0x4c12
0x00004c31      4883ec08       sub rsp, 8
0x00004c35      e8a6000000     call sym.xalloc_die
0x00004c3a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00004c40      53             push rbx
0x00004c41      4889fb         mov rbx, rdi
0x00004c44      e847feffff     call sym.xmalloc
0x00004c49      4889da         mov rdx, rbx
0x00004c4c      31f6           xor esi, esi
0x00004c4e      4889c7         mov rdi, rax
0x00004c51      5b             pop rbx
0x00004c52      e989c9ffff     jmp sym.imp.memset
0x00004c57      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00004c60      4889f8         mov rax, rdi
0x00004c63      4883ec08       sub rsp, 8
0x00004c67      48f7e6         mul rsi
0x00004c6a      0f90c2         seto dl
0x00004c6d      4885c0         test rax, rax
0x00004c70      7817           js 0x4c89
0x00004c72      0fb6d2         movzx edx, dl
0x00004c75      4885d2         test rdx, rdx
0x00004c78      750f           jne 0x4c89
0x00004c7a      e8b1c9ffff     call sym.imp.calloc
0x00004c7f      4885c0         test rax, rax
0x00004c82      7405           je 0x4c89
0x00004c84      4883c408       add rsp, 8
0x00004c88      c3             ret
0x00004c89      e852000000     call sym.xalloc_die
0x00004c8e      6690           nop
;-- xmemdup:
0x00004c90      55             push rbp
0x00004c91      53             push rbx
0x00004c92      4889fd         mov rbp, rdi
0x00004c95      4889f7         mov rdi, rsi
0x00004c98      4889f3         mov rbx, rsi
0x00004c9b      4883ec08       sub rsp, 8
0x00004c9f      e8ecfdffff     call sym.xmalloc
0x00004ca4      4883c408       add rsp, 8
0x00004ca8      4889da         mov rdx, rbx
0x00004cab      4889ee         mov rsi, rbp
0x00004cae      5b             pop rbx
0x00004caf      5d             pop rbp
0x00004cb0      4889c7         mov rdi, rax
0x00004cb3      e998c9ffff     jmp sym.imp.memcpy
0x00004cb8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00004cc0      53             push rbx
0x00004cc1      4889fb         mov rbx, rdi
0x00004cc4      e897c8ffff     call sym.imp.strlen
0x00004cc9      4889df         mov rdi, rbx
0x00004ccc      488d7001       lea rsi, [rax + 1]
0x00004cd0      5b             pop rbx
0x00004cd1      ebbd           jmp sym.xmemdup
0x00004cd3      662e0f1f8400.  nop word cs:[rax + rax]
0x00004cdd      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00004ce0      488d35481100.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x5e2f ; "memory exhausted"
0x00004ce7      4883ec08       sub rsp, 8
0x00004ceb      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00004cf0      31ff           xor edi, edi
0x00004cf2      e849c8ffff     call sym.imp.dcgettext
0x00004cf7      8b3d1b332000   mov edi, dword [obj.exit_failure]       ; [0x208018:4]=1
0x00004cfd      488d159c0800.  lea rdx, [0x000055a0]                   ; "%s"
0x00004d04      4889c1         mov rcx, rax
0x00004d07      31f6           xor esi, esi
0x00004d09      31c0           xor eax, eax
0x00004d0b      e810caffff     call sym.imp.error
0x00004d10      e88bc7ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00004d15      662e0f1f8400.  nop word cs:[rax + rax]
0x00004d1f      90             nop
;-- xgetcwd:
0x00004d20      53             push rbx                                ; ../coreutils-8.31/lib/xgetcwd.c:36
0x00004d21      31f6           xor esi, esi                            ; unistd.h:210   return __getcwd_alias (__buf, __size);
0x00004d23      31ff           xor edi, edi
0x00004d25      e8c6c8ffff     call sym.imp.getcwd
0x00004d2a      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xgetcwd.c:38
0x00004d2d      4889c3         mov rbx, rax                            ; unistd.h:210   return __getcwd_alias (__buf, __size);
0x00004d30      740e           je 0x4d40                               ; ../coreutils-8.31/lib/xgetcwd.c:38
0x00004d32      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/xgetcwd.c:41
0x00004d35      5b             pop rbx
0x00004d36      c3             ret
0x00004d37      660f1f840000.  nop word [rax + rax]
0x00004d40      e86bc7ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xgetcwd.c:38
0x00004d45      83380c         cmp dword [rax], 0xc
0x00004d48      75e8           jne 0x4d32
0x00004d4a      e891ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xgetcwd.c:39
0x00004d4f      90             nop
;-- rpl_mbrtowc:
0x00004d50      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00004d52      4154           push r12
0x00004d54      4989f5         mov r13, rsi
0x00004d57      55             push rbp
0x00004d58      53             push rbx
0x00004d59      4889fb         mov rbx, rdi
0x00004d5c      4989d4         mov r12, rdx
0x00004d5f      4883ec18       sub rsp, 0x18
0x00004d63      64488b042528.  mov rax, qword fs:[0x28]
0x00004d6c      4889442408     mov qword [rsp + 8], rax
0x00004d71      31c0           xor eax, eax
0x00004d73      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00004d78      4885ff         test rdi, rdi
0x00004d7b      480f44d8       cmove rbx, rax
0x00004d7f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00004d82      e829c8ffff     call sym.imp.mbrtowc
0x00004d87      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00004d8b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00004d8e      7620           jbe 0x4db0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00004d90      4d85e4         test r12, r12
0x00004d93      741b           je 0x4db0
0x00004d95      31ff           xor edi, edi
0x00004d97      e8c4000000     call sym.hard_locale
0x00004d9c      84c0           test al, al
0x00004d9e      7510           jne 0x4db0
0x00004da0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00004da5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00004daa      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00004dac      0f1f4000       nop dword [rax]
0x00004db0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00004db5      644833142528.  xor rdx, qword fs:[0x28]
0x00004dbe      4889e8         mov rax, rbp
0x00004dc1      750b           jne 0x4dce
0x00004dc3      4883c418       add rsp, 0x18
0x00004dc7      5b             pop rbx
0x00004dc8      5d             pop rbp
0x00004dc9      415c           pop r12
0x00004dcb      415d           pop r13
0x00004dcd      c3             ret
0x00004dce      e8bdc7ffff     call sym.imp.__stack_chk_fail
0x00004dd3      662e0f1f8400.  nop word cs:[rax + rax]
0x00004ddd      0f1f00         nop dword [rax]
;-- close_stream:
0x00004de0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00004de2      55             push rbp
0x00004de3      4889fd         mov rbp, rdi
0x00004de6      53             push rbx
0x00004de7      e8f4c6ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00004dec      8b5d00         mov ebx, dword [rbp]
0x00004def      4889ef         mov rdi, rbp
0x00004df2      4989c4         mov r12, rax
0x00004df5      e806010000     call sym.rpl_fclose
0x00004dfa      83e320         and ebx, 0x20                           ; "@"
0x00004dfd      85db           test ebx, ebx
0x00004dff      7517           jne 0x4e18
0x00004e01      85c0           test eax, eax
0x00004e03      740a           je 0x4e0f                               ; stdio.h:-186
0x00004e05      4d85e4         test r12, r12                           ; stdio.h:-178
0x00004e08      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00004e0d      7439           je 0x4e48
0x00004e0f      5b             pop rbx
0x00004e10      5d             pop rbp
0x00004e11      415c           pop r12
0x00004e13      c3             ret
0x00004e14      0f1f4000       nop dword [rax]
0x00004e18      85c0           test eax, eax
0x00004e1a      751c           jne 0x4e38
0x00004e1c      e88fc6ffff     call sym.imp.__errno_location
0x00004e21      c70000000000   mov dword [rax], 0
0x00004e27      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00004e2c      5b             pop rbx
0x00004e2d      5d             pop rbp
0x00004e2e      415c           pop r12
0x00004e30      c3             ret
0x00004e31      0f1f80000000.  nop dword [rax]
0x00004e38      5b             pop rbx
0x00004e39      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00004e3e      5d             pop rbp                                 ; stdio.h:-186
0x00004e3f      415c           pop r12
0x00004e41      c3             ret
0x00004e42      660f1f440000   nop word [rax + rax]
0x00004e48      e863c6ffff     call sym.imp.__errno_location
0x00004e4d      833809         cmp dword [rax], 9
0x00004e50      5b             pop rbx
0x00004e51      5d             pop rbp
0x00004e52      415c           pop r12                                 ; stdio.h:-178
0x00004e54      0f95c0         setne al
0x00004e57      0fb6c0         movzx eax, al
0x00004e5a      f7d8           neg eax
0x00004e5c      c3             ret
0x00004e5d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00004e60      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00004e64      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00004e66      e895c8ffff     call sym.imp.setlocale
0x00004e6b      4889c2         mov rdx, rax
0x00004e6e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00004e73      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00004e76      741d           je 0x4e95
0x00004e78      488d3dc10f00.  lea rdi, [0x00005e40]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00004e7f      b902000000     mov ecx, 2
0x00004e84      4889d6         mov rsi, rdx
0x00004e87      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004e89      0f97c1         seta cl
0x00004e8c      80d900         sbb cl, 0
0x00004e8f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00004e91      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00004e93      750b           jne 0x4ea0
0x00004e95      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00004e99      c3             ret
0x00004e9a      660f1f440000   nop word [rax + rax]
0x00004ea0      488d3d9b0f00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x5e42 ; "POSIX"
0x00004ea7      b906000000     mov ecx, 6
0x00004eac      4889d6         mov rsi, rdx
0x00004eaf      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004eb1      0f97c0         seta al
0x00004eb4      1c00           sbb al, 0
0x00004eb6      84c0           test al, al
0x00004eb8      0f95c0         setne al
0x00004ebb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00004ebf      c3             ret
;-- locale_charset:
0x00004ec0      4883ec08       sub rsp, 8
0x00004ec4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00004ec9      e8e2c7ffff     call sym.imp.nl_langinfo
0x00004ece      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00004ed1      741d           je 0x4ef0
0x00004ed3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00004ed6      488d156b0f00.  lea rdx, str.ASCII                      ; 0x5e48 ; "ASCII"
0x00004edd      480f44c2       cmove rax, rdx
0x00004ee1      4883c408       add rsp, 8
0x00004ee5      c3             ret
0x00004ee6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004ef0      488d05510f00.  lea rax, str.ASCII                      ; 0x5e48 ; "ASCII"
0x00004ef7      4883c408       add rsp, 8
0x00004efb      c3             ret
0x00004efc      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00004f00      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00004f02      55             push rbp
0x00004f03      53             push rbx
0x00004f04      4889fb         mov rbx, rdi
0x00004f07      e854c7ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00004f0c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00004f0e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00004f11      7854           js 0x4f67                               ; ../coreutils-8.31/lib/fclose.c:66
0x00004f13      e8b8c7ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00004f18      85c0           test eax, eax
0x00004f1a      752c           jne 0x4f48
0x00004f1c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00004f1f      e85c000000     call sym.rpl_fflush
0x00004f24      85c0           test eax, eax
0x00004f26      743c           je 0x4f64
0x00004f28      e883c5ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00004f2d      448b20         mov r12d, dword [rax]
0x00004f30      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00004f33      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00004f36      e8d5c5ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00004f3b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00004f3e      7530           jne 0x4f70
0x00004f40      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00004f41      5d             pop rbp
0x00004f42      415c           pop r12
0x00004f44      c3             ret
0x00004f45      0f1f00         nop dword [rax]
0x00004f48      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00004f4b      e810c7ffff     call sym.imp.fileno
0x00004f50      31f6           xor esi, esi
0x00004f52      ba01000000     mov edx, 1
0x00004f57      89c7           mov edi, eax
0x00004f59      e872c6ffff     call sym.imp.lseek
0x00004f5e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004f62      75b8           jne 0x4f1c
0x00004f64      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00004f67      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00004f68      5d             pop rbp
0x00004f69      415c           pop r12
0x00004f6b      e9a0c5ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00004f70      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00004f74      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00004f79      ebc5           jmp 0x4f40
0x00004f7b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00004f80      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00004f83      53             push rbx
0x00004f84      4889fb         mov rbx, rdi
0x00004f87      7411           je 0x4f9a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00004f89      e842c7ffff     call sym.imp.__freading
0x00004f8e      85c0           test eax, eax
0x00004f90      7408           je 0x4f9a
0x00004f92      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00004f98      750e           jne 0x4fa8
0x00004f9a      4889df         mov rdi, rbx
0x00004f9d      5b             pop rbx
0x00004f9e      e9fdc6ffff     jmp sym.imp.fflush
0x00004fa3      0f1f440000     nop dword [rax + rax]
0x00004fa8      4889df         mov rdi, rbx
0x00004fab      ba01000000     mov edx, 1
0x00004fb0      31f6           xor esi, esi
0x00004fb2      e809000000     call sym.rpl_fseeko
0x00004fb7      4889df         mov rdi, rbx
0x00004fba      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00004fbb      e9e0c6ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00004fc0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00004fc4      48394710       cmp qword [rdi + 0x10], rax
0x00004fc8      7406           je 0x4fd0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00004fca      e961c7ffff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x00004fcf      90             nop
0x00004fd0      488b4720       mov rax, qword [rdi + 0x20]
0x00004fd4      48394728       cmp qword [rdi + 0x28], rax
0x00004fd8      75f0           jne 0x4fca                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00004fda      48837f4800     cmp qword [rdi + 0x48], 0
0x00004fdf      75e9           jne 0x4fca                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00004fe1      4154           push r12
0x00004fe3      55             push rbp
0x00004fe4      4189d4         mov r12d, edx
0x00004fe7      53             push rbx
0x00004fe8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00004feb      4889fb         mov rbx, rdi
0x00004fee      e86dc6ffff     call sym.imp.fileno
0x00004ff3      4489e2         mov edx, r12d
0x00004ff6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00004ff9      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x00004ffb      e8d0c5ffff     call sym.imp.lseek
0x00005000      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005004      740c           je 0x5012
0x00005006      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005009      488983900000.  mov qword [rbx + 0x90], rax
0x00005010      31c0           xor eax, eax
0x00005012      5b             pop rbx                                 ; /sys_errlist.h:19
0x00005013      5d             pop rbp
0x00005014      415c           pop r12
0x00005016      c3             ret
0x00005017      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x00005020      4157           push r15
0x00005022      4156           push r14
0x00005024      4989d7         mov r15, rdx
0x00005027      4155           push r13
0x00005029      4154           push r12
0x0000502b      4c8d25de2a20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x207b10
0x00005032      55             push rbp
0x00005033      488d2dde2a20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x207b18 ; "P\x1a"
0x0000503a      53             push rbx
0x0000503b      4189fd         mov r13d, edi
0x0000503e      4989f6         mov r14, rsi
0x00005041      4c29e5         sub rbp, r12
0x00005044      4883ec08       sub rsp, 8
0x00005048      48c1fd03       sar rbp, 3
0x0000504c      e807c4ffff     call sym._init
0x00005051      4885ed         test rbp, rbp
0x00005054      7420           je 0x5076
0x00005056      31db           xor ebx, ebx
0x00005058      0f1f84000000.  nop dword [rax + rax]
0x00005060      4c89fa         mov rdx, r15
0x00005063      4c89f6         mov rsi, r14
0x00005066      4489ef         mov edi, r13d
0x00005069      41ff14dc       call qword [r12 + rbx*8]
0x0000506d      4883c301       add rbx, 1
0x00005071      4839dd         cmp rbp, rbx
0x00005074      75ea           jne 0x5060
0x00005076      4883c408       add rsp, 8
0x0000507a      5b             pop rbx
0x0000507b      5d             pop rbp
0x0000507c      415c           pop r12
0x0000507e      415d           pop r13
0x00005080      415e           pop r14
0x00005082      415f           pop r15
0x00005084      c3             ret
0x00005085      90             nop
0x00005086      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00005090      f3c3           ret
0x00005092      662e0f1f8400.  nop word cs:[rax + rax]
0x0000509c      0f1f4000       nop dword [rax]
;-- atexit:
0x000050a0      488b15612f20.  mov rdx, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x000050a7      31f6           xor esi, esi
0x000050a9      e992c6ffff     jmp sym.imp.__cxa_atexit
0x000050ae      0000           add byte [rax], al
