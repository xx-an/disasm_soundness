;-- section..plt:
;-- .plt:
0x000012f0      ff353a9b2000   push qword [0x0020ae30]                 ; [12] -r-x section size 784 named .plt
0x000012f6      ff253c9b2000   jmp qword [0x0020ae38]                  ; [0x20ae38:8]=0
0x000012fc      0f1f4000       nop dword [rax]
;-- imp.__snprintf_chk:
0x00001300      ff253a9b2000   jmp qword [reloc.__snprintf_chk]        ; [0x20ae40:8]=0x1306
0x00001306      6800000000     push 0
0x0000130b      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x00001310      ff25329b2000   jmp qword [reloc.free]                  ; [0x20ae48:8]=0x1316
0x00001316      6801000000     push 1
0x0000131b      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x00001320      ff252a9b2000   jmp qword [reloc.abort]                 ; [0x20ae50:8]=0x1326 ; "&\x13"
0x00001326      6802000000     push 2
0x0000132b      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001330      ff25229b2000   jmp qword [reloc.__errno_location]      ; [0x20ae58:8]=0x1336 ; "6\x13"
0x00001336      6803000000     push 3
0x0000133b      e9b0ffffff     jmp sym..plt
;-- imp.error_at_line:
0x00001340      ff251a9b2000   jmp qword [reloc.error_at_line]         ; [0x20ae60:8]=0x1346 ; "F\x13"
0x00001346      6804000000     push 4
0x0000134b      e9a0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001350      ff25129b2000   jmp qword [reloc.strncmp]               ; [0x20ae68:8]=0x1356 ; "V\x13"
0x00001356      6805000000     push 5
0x0000135b      e990ffffff     jmp sym..plt
;-- imp._exit:
0x00001360      ff250a9b2000   jmp qword [reloc._exit]                 ; [0x20ae70:8]=0x1366 ; "f\x13"
0x00001366      6806000000     push 6
0x0000136b      e980ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001370      ff25029b2000   jmp qword [reloc.__fpending]            ; [0x20ae78:8]=0x1376 ; "v\x13"
0x00001376      6807000000     push 7
0x0000137b      e970ffffff     jmp sym..plt
;-- imp.isatty:
0x00001380      ff25fa9a2000   jmp qword [reloc.isatty]                ; [0x20ae80:8]=0x1386
0x00001386      6808000000     push 8
0x0000138b      e960ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001390      ff25f29a2000   jmp qword [reloc.textdomain]            ; [0x20ae88:8]=0x1396
0x00001396      6809000000     push 9
0x0000139b      e950ffffff     jmp sym..plt
;-- imp.fclose:
0x000013a0      ff25ea9a2000   jmp qword [reloc.fclose]                ; [0x20ae90:8]=0x13a6
0x000013a6      680a000000     push 0xa
0x000013ab      e940ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000013b0      ff25e29a2000   jmp qword [reloc.bindtextdomain]        ; [0x20ae98:8]=0x13b6
0x000013b6      680b000000     push 0xb
0x000013bb      e930ffffff     jmp sym..plt
;-- imp.dcgettext:
0x000013c0      ff25da9a2000   jmp qword [reloc.dcgettext]             ; [0x20aea0:8]=0x13c6
0x000013c6      680c000000     push 0xc
0x000013cb      e920ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000013d0      ff25d29a2000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20aea8:8]=0x13d6
0x000013d6      680d000000     push 0xd
0x000013db      e910ffffff     jmp sym..plt
;-- imp.strlen:
0x000013e0      ff25ca9a2000   jmp qword [reloc.strlen]                ; [0x20aeb0:8]=0x13e6
0x000013e6      680e000000     push 0xe
0x000013eb      e900ffffff     jmp sym..plt
;-- imp.__lxstat:
0x000013f0      ff25c29a2000   jmp qword [reloc.__lxstat]              ; [0x20aeb8:8]=0x13f6
0x000013f6      680f000000     push 0xf
0x000013fb      e9f0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001400      ff25ba9a2000   jmp qword [reloc.__stack_chk_fail]      ; [0x20aec0:8]=0x1406
0x00001406      6810000000     push 0x10
0x0000140b      e9e0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001410      ff25b29a2000   jmp qword [reloc.mbrtowc]               ; [0x20aec8:8]=0x1416
0x00001416      6811000000     push 0x11
0x0000141b      e9d0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001420      ff25aa9a2000   jmp qword [reloc.strrchr]               ; [0x20aed0:8]=0x1426 ; "&\x14"
0x00001426      6812000000     push 0x12
0x0000142b      e9c0feffff     jmp sym..plt
;-- imp.lseek:
0x00001430      ff25a29a2000   jmp qword [reloc.lseek]                 ; [0x20aed8:8]=0x1436 ; "6\x14"
0x00001436      6813000000     push 0x13
0x0000143b      e9b0feffff     jmp sym..plt
;-- imp.memset:
0x00001440      ff259a9a2000   jmp qword [reloc.memset]                ; [0x20aee0:8]=0x1446 ; "F\x14"
0x00001446      6814000000     push 0x14
0x0000144b      e9a0feffff     jmp sym..plt
;-- imp.geteuid:
0x00001450      ff25929a2000   jmp qword [reloc.geteuid]               ; [0x20aee8:8]=0x1456 ; "V\x14"
0x00001456      6815000000     push 0x15
0x0000145b      e990feffff     jmp sym..plt
;-- imp.memcmp:
0x00001460      ff258a9a2000   jmp qword [reloc.memcmp]                ; [0x20aef0:8]=0x1466 ; "f\x14"
0x00001466      6816000000     push 0x16
0x0000146b      e980feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001470      ff25829a2000   jmp qword [reloc.fputs_unlocked]        ; [0x20aef8:8]=0x1476 ; "v\x14"
0x00001476      6817000000     push 0x17
0x0000147b      e970feffff     jmp sym..plt
;-- imp.calloc:
0x00001480      ff257a9a2000   jmp qword [reloc.calloc]                ; [0x20af00:8]=0x1486
0x00001486      6818000000     push 0x18
0x0000148b      e960feffff     jmp sym..plt
;-- imp.strcmp:
0x00001490      ff25729a2000   jmp qword [reloc.strcmp]                ; [0x20af08:8]=0x1496
0x00001496      6819000000     push 0x19
0x0000149b      e950feffff     jmp sym..plt
;-- imp.strtol:
0x000014a0      ff256a9a2000   jmp qword [reloc.strtol]                ; [0x20af10:8]=0x14a6
0x000014a6      681a000000     push 0x1a
0x000014ab      e940feffff     jmp sym..plt
;-- imp.memcpy:
0x000014b0      ff25629a2000   jmp qword [reloc.memcpy]                ; [0x20af18:8]=0x14b6
0x000014b6      681b000000     push 0x1b
0x000014bb      e930feffff     jmp sym..plt
;-- imp.fileno:
0x000014c0      ff255a9a2000   jmp qword [reloc.fileno]                ; [0x20af20:8]=0x14c6
0x000014c6      681c000000     push 0x1c
0x000014cb      e920feffff     jmp sym..plt
;-- imp.__xstat:
0x000014d0      ff25529a2000   jmp qword [reloc.__xstat]               ; [0x20af28:8]=0x14d6
0x000014d6      681d000000     push 0x1d
0x000014db      e910feffff     jmp sym..plt
;-- imp.malloc:
0x000014e0      ff254a9a2000   jmp qword [reloc.malloc]                ; [0x20af30:8]=0x14e6
0x000014e6      681e000000     push 0x1e
0x000014eb      e900feffff     jmp sym..plt
;-- imp.fflush:
0x000014f0      ff25429a2000   jmp qword [reloc.fflush]                ; [0x20af38:8]=0x14f6
0x000014f6      681f000000     push 0x1f
0x000014fb      e9f0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001500      ff253a9a2000   jmp qword [reloc.nl_langinfo]           ; [0x20af40:8]=0x1506
0x00001506      6820000000     push 0x20                               ; "@"
0x0000150b      e9e0fdffff     jmp sym..plt
;-- imp.getegid:
0x00001510      ff25329a2000   jmp qword [reloc.getegid]               ; [0x20af48:8]=0x1516
0x00001516      6821000000     push 0x21                               ; '!'
0x0000151b      e9d0fdffff     jmp sym..plt
;-- imp.__freading:
0x00001520      ff252a9a2000   jmp qword [reloc.__freading]            ; [0x20af50:8]=0x1526 ; "&\x15"
0x00001526      6822000000     push 0x22                               ; '"'
0x0000152b      e9c0fdffff     jmp sym..plt
;-- imp.realloc:
0x00001530      ff25229a2000   jmp qword [reloc.realloc]               ; [0x20af58:8]=0x1536 ; "6\x15"
0x00001536      6823000000     push 0x23                               ; '#'
0x0000153b      e9b0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001540      ff251a9a2000   jmp qword [reloc.setlocale]             ; [0x20af60:8]=0x1546 ; "F\x15"
0x00001546      6824000000     push 0x24                               ; '$'
0x0000154b      e9a0fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001550      ff25129a2000   jmp qword [reloc.__printf_chk]          ; [0x20af68:8]=0x1556 ; "V\x15"
0x00001556      6825000000     push 0x25                               ; '%'
0x0000155b      e990fdffff     jmp sym..plt
;-- imp.error:
0x00001560      ff250a9a2000   jmp qword [reloc.error]                 ; [0x20af70:8]=0x1566 ; "f\x15"
0x00001566      6826000000     push 0x26                               ; '&'
0x0000156b      e980fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001570      ff25029a2000   jmp qword [reloc.fseeko]                ; [0x20af78:8]=0x1576 ; "v\x15"
0x00001576      6827000000     push 0x27                               ; '''
0x0000157b      e970fdffff     jmp sym..plt
;-- imp.euidaccess:
0x00001580      ff25fa992000   jmp qword [reloc.euidaccess]            ; [0x20af80:8]=0x1586
0x00001586      6828000000     push 0x28                               ; '('
0x0000158b      e960fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001590      ff25f2992000   jmp qword [reloc.__cxa_atexit]          ; [0x20af88:8]=0x1596
0x00001596      6829000000     push 0x29                               ; ')'
0x0000159b      e950fdffff     jmp sym..plt
;-- imp.exit:
0x000015a0      ff25ea992000   jmp qword [reloc.exit]                  ; [0x20af90:8]=0x15a6
0x000015a6      682a000000     push 0x2a                               ; '*'
0x000015ab      e940fdffff     jmp sym..plt
;-- imp.fwrite:
0x000015b0      ff25e2992000   jmp qword [reloc.fwrite]                ; [0x20af98:8]=0x15b6
0x000015b6      682b000000     push 0x2b                               ; '+'
0x000015bb      e930fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x000015c0      ff25da992000   jmp qword [reloc.__fprintf_chk]         ; [0x20afa0:8]=0x15c6
0x000015c6      682c000000     push 0x2c                               ; ','
0x000015cb      e920fdffff     jmp sym..plt
;-- imp.mbsinit:
0x000015d0      ff25d2992000   jmp qword [reloc.mbsinit]               ; [0x20afa8:8]=0x15d6
0x000015d6      682d000000     push 0x2d                               ; '-'
0x000015db      e910fdffff     jmp sym..plt
;-- imp.iswprint:
0x000015e0      ff25ca992000   jmp qword [reloc.iswprint]              ; [0x20afb0:8]=0x15e6
0x000015e6      682e000000     push 0x2e                               ; '.'
0x000015eb      e900fdffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000015f0      ff25c2992000   jmp qword [reloc.__ctype_b_loc]         ; [0x20afb8:8]=0x15f6
0x000015f6      682f000000     push 0x2f                               ; '/'
0x000015fb      e9f0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001600      .qword 0x9066002099da25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001608      0000           add byte [rax], al
0x0000160a      0000           add byte [rax], al
0x0000160c      0000           add byte [rax], al
0x0000160e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001610      55             push rbp                                ; [14] -r-x section size 26398 named .text
0x00001611      53             push rbx
0x00001612      89fb           mov ebx, edi
0x00001614      4889f5         mov rbp, rsi
0x00001617      4883ec08       sub rsp, 8
0x0000161b      488b3e         mov rdi, qword [rsi]
0x0000161e      e8dd1d0000     call sym.set_program_name
0x00001623      488d35bd6800.  lea rsi, [0x00007ee7]
0x0000162a      bf06000000     mov edi, 6
0x0000162f      e80cffffff     call sym.imp.setlocale
0x00001634      488d35da6800.  lea rsi, str.usr_local_share_locale     ; 0x7f15 ; "/usr/local/share/locale"
0x0000163b      488d3daa6800.  lea rdi, [0x00007eec]                   ; "coreutils"
0x00001642      e869fdffff     call sym.imp.bindtextdomain
0x00001647      488d3d9e6800.  lea rdi, [0x00007eec]                   ; "coreutils"
0x0000164e      e83dfdffff     call sym.imp.textdomain
0x00001653      488d3da61c00.  lea rdi, sym.close_stdout               ; 0x3300 ; "USH\x83\xec\bH\x8b={} "
0x0000165a      c705ac992000.  mov dword [obj.exit_failure], 2         ; [0x20b010:4]=1
0x00001664      e8b7660000     call sym.atexit
0x00001669      83fb01         cmp ebx, 1
0x0000166c      48892d3d9a20.  mov qword [obj.argv], rbp               ; [0x20b0b0:8]=0
0x00001673      891d3f9a2000   mov dword [obj.argc], ebx               ; [0x20b0b8:4]=0
0x00001679      c705399a2000.  mov dword [obj.pos], 1                  ; [0x20b0bc:4]=0
0x00001683      7e24           jle 0x16a9
0x00001685      8d7bff         lea edi, [rbx - 1]
0x00001688      e8a3100000     call sym.posixtest
0x0000168d      486315289a20.  movsxd rdx, dword [obj.pos]             ; [0x20b0bc:4]=0
0x00001694      3b151e9a2000   cmp edx, dword [obj.argc]               ; [0x20b0b8:4]=0
0x0000169a      7514           jne 0x16b0
0x0000169c      83f001         xor eax, 1
0x0000169f      0fb6c0         movzx eax, al
0x000016a2      4883c408       add rsp, 8
0x000016a6      5b             pop rbx
0x000016a7      5d             pop rbp
0x000016a8      c3             ret
0x000016a9      b801000000     mov eax, 1
0x000016ae      ebf2           jmp 0x16a2
0x000016b0      488b05f99920.  mov rax, qword [obj.argv]               ; [0x20b0b0:8]=0
0x000016b7      488b3cd0       mov rdi, qword [rax + rdx*8]
0x000016bb      e8503a0000     call sym.quote
0x000016c0      488d35666800.  lea rsi, str.extra_argument__s          ; 0x7f2d ; "extra argument %s"
0x000016c7      4889c3         mov rbx, rax
0x000016ca      31ff           xor edi, edi
0x000016cc      ba05000000     mov edx, 5
0x000016d1      e8eafcffff     call sym.imp.dcgettext
0x000016d6      4889de         mov rsi, rbx
0x000016d9      4889c7         mov rdi, rax
0x000016dc      31c0           xor eax, eax
0x000016de      e88d020000     call sym.test_syntax_error
0x000016e3      662e0f1f8400.  nop word cs:[rax + rax]
0x000016ed      0f1f00         nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x000016f0      31ed           xor ebp, ebp
0x000016f2      4989d1         mov r9, rdx
0x000016f5      5e             pop rsi
0x000016f6      4889e2         mov rdx, rsp
0x000016f9      4883e4f0       and rsp, 0xfffffffffffffff0
0x000016fd      50             push rax
0x000016fe      54             push rsp
0x000016ff      4c8d050a6600.  lea r8, sym.__libc_csu_fini             ; 0x7d10
0x00001706      488d0d936500.  lea rcx, sym.__libc_csu_init            ; 0x7ca0 ; "AWAVI\x89\xd7AUATL\x8d%\x1e/ "
0x0000170d      488d3dfcfeff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1610 ; "US\x89\xfbH\x89\xf5H\x83\xec\bH\x8b>\xe8\xdd\x1d"
0x00001714      ff15ae982000   call qword [reloc.__libc_start_main]    ; [0x20afc8:8]=0
0x0000171a      f4             hlt
0x0000171b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001720      488d3d599920.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x00001727      55             push rbp
0x00001728      488d05519920.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x0000172f      4839f8         cmp rax, rdi
0x00001732      4889e5         mov rbp, rsp
0x00001735      7419           je 0x1750
0x00001737      488b05829820.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20afc0:8]=0
0x0000173e      4885c0         test rax, rax
0x00001741      740d           je 0x1750
0x00001743      5d             pop rbp
0x00001744      ffe0           jmp rax
0x00001746      662e0f1f8400.  nop word cs:[rax + rax]
0x00001750      5d             pop rbp
0x00001751      c3             ret
0x00001752      0f1f4000       nop dword [rax]
0x00001756      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001760      488d3d199920.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x00001767      488d35129920.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x0000176e      55             push rbp
0x0000176f      4829fe         sub rsi, rdi
0x00001772      4889e5         mov rbp, rsp
0x00001775      48c1fe03       sar rsi, 3
0x00001779      4889f0         mov rax, rsi
0x0000177c      48c1e83f       shr rax, 0x3f
0x00001780      4801c6         add rsi, rax
0x00001783      48d1fe         sar rsi, 1
0x00001786      7418           je 0x17a0
0x00001788      488b05499820.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20afd8:8]=0
0x0000178f      4885c0         test rax, rax
0x00001792      740c           je 0x17a0
0x00001794      5d             pop rbp
0x00001795      ffe0           jmp rax
0x00001797      660f1f840000.  nop word [rax + rax]
0x000017a0      5d             pop rbp
0x000017a1      c3             ret
0x000017a2      0f1f4000       nop dword [rax]
0x000017a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x000017b0      803df1982000.  cmp byte [obj.completed.7697], 0        ; [0x20b0a8:1]=0
0x000017b7      752f           jne 0x17e8
0x000017b9      48833d1f9820.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20afe0:8]=0
0x000017c1      55             push rbp
0x000017c2      4889e5         mov rbp, rsp
0x000017c5      740c           je 0x17d3
0x000017c7      488b3d3a9820.  mov rdi, qword [obj.__dso_handle]       ; [0x20b008:8]=0x20b008 obj.__dso_handle
0x000017ce      e82dfeffff     call sym..plt.got
0x000017d3      e848ffffff     call sym.deregister_tm_clones
0x000017d8      c605c9982000.  mov byte [obj.completed.7697], 1        ; [0x20b0a8:1]=0
0x000017df      5d             pop rbp
0x000017e0      c3             ret
0x000017e1      0f1f80000000.  nop dword [rax]
0x000017e8      f3c3           ret
0x000017ea      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x000017f0      55             push rbp
0x000017f1      4889e5         mov rbp, rsp
0x000017f4      5d             pop rbp
0x000017f5      e966ffffff     jmp sym.register_tm_clones
0x000017fa      660f1f440000   nop word [rax + rax]
;-- binop:
0x00001800      4989f8         mov r8, rdi                             ; .//src:184
0x00001803      488d3d3b6500.  lea rdi, [0x00007d45]                   ; .//src:185 ; "="
0x0000180a      b902000000     mov ecx, 2
0x0000180f      4c89c6         mov rsi, r8
0x00001812      b801000000     mov eax, 1
0x00001817      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001819      0f97c2         seta dl
0x0000181c      80da00         sbb dl, 0
0x0000181f      84d2           test dl, dl                             ; .//src:189
0x00001821      0f8441010000   je 0x1968
0x00001827      488d3d166500.  lea rdi, [0x00007d44]                   ; .//src:185 ; "!="
0x0000182e      b903000000     mov ecx, 3
0x00001833      4c89c6         mov rsi, r8
0x00001836      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001838      0f97c2         seta dl
0x0000183b      80da00         sbb dl, 0
0x0000183e      84d2           test dl, dl
0x00001840      0f8422010000   je 0x1968
0x00001846      488d3dfa6400.  lea rdi, [0x00007d47]                   ; "=="
0x0000184d      b903000000     mov ecx, 3
0x00001852      4c89c6         mov rsi, r8
0x00001855      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001857      0f97c2         seta dl
0x0000185a      80da00         sbb dl, 0
0x0000185d      84d2           test dl, dl
0x0000185f      0f8403010000   je 0x1968
0x00001865      488d3dde6400.  lea rdi, [0x00007d4a]                   ; .//src:186 ; "-nt"
0x0000186c      b904000000     mov ecx, 4
0x00001871      4c89c6         mov rsi, r8
0x00001874      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001876      0f97c2         seta dl
0x00001879      80da00         sbb dl, 0
0x0000187c      84d2           test dl, dl                             ; .//src:185
0x0000187e      0f84e4000000   je 0x1968
0x00001884      488d3dc36400.  lea rdi, [0x00007d4e]                   ; .//src:187 ; "-ot"
0x0000188b      b904000000     mov ecx, 4
0x00001890      4c89c6         mov rsi, r8
0x00001893      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001895      0f97c2         seta dl
0x00001898      80da00         sbb dl, 0
0x0000189b      84d2           test dl, dl                             ; .//src:186
0x0000189d      0f84c5000000   je 0x1968
0x000018a3      488d3da86400.  lea rdi, [0x00007d52]                   ; .//src:187 ; "-ef"
0x000018aa      b904000000     mov ecx, 4
0x000018af      4c89c6         mov rsi, r8
0x000018b2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000018b4      0f97c2         seta dl
0x000018b7      80da00         sbb dl, 0
0x000018ba      84d2           test dl, dl
0x000018bc      0f84a6000000   je 0x1968
0x000018c2      488d3d8d6400.  lea rdi, [0x00007d56]                   ; "-eq"
0x000018c9      b904000000     mov ecx, 4
0x000018ce      4c89c6         mov rsi, r8
0x000018d1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000018d3      0f97c2         seta dl
0x000018d6      80da00         sbb dl, 0
0x000018d9      84d2           test dl, dl
0x000018db      0f8487000000   je 0x1968
0x000018e1      488d3d726400.  lea rdi, [0x00007d5a]                   ; .//src:188 ; "-ne"
0x000018e8      b904000000     mov ecx, 4
0x000018ed      4c89c6         mov rsi, r8
0x000018f0      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000018f2      0f97c2         seta dl
0x000018f5      80da00         sbb dl, 0
0x000018f8      84d2           test dl, dl                             ; .//src:187
0x000018fa      746c           je 0x1968
0x000018fc      488d3d5b6400.  lea rdi, [0x00007d5e]                   ; .//src:188 ; "-lt"
0x00001903      b904000000     mov ecx, 4
0x00001908      4c89c6         mov rsi, r8
0x0000190b      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000190d      0f97c2         seta dl
0x00001910      80da00         sbb dl, 0
0x00001913      84d2           test dl, dl
0x00001915      7451           je 0x1968
0x00001917      488d3d446400.  lea rdi, [0x00007d62]                   ; "-le"
0x0000191e      b904000000     mov ecx, 4
0x00001923      4c89c6         mov rsi, r8
0x00001926      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001928      0f97c2         seta dl
0x0000192b      80da00         sbb dl, 0
0x0000192e      84d2           test dl, dl
0x00001930      7436           je 0x1968
0x00001932      488d3d2d6400.  lea rdi, [0x00007d66]                   ; .//src:189 ; "-gt"
0x00001939      b904000000     mov ecx, 4
0x0000193e      4c89c6         mov rsi, r8
0x00001941      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001943      0f97c2         seta dl
0x00001946      80da00         sbb dl, 0
0x00001949      84d2           test dl, dl                             ; .//src:188
0x0000194b      741b           je 0x1968
0x0000194d      488d3d166400.  lea rdi, [0x00007d6a]                   ; .//src:189 ; "-ge"
0x00001954      b904000000     mov ecx, 4
0x00001959      4c89c6         mov rsi, r8
0x0000195c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000195e      0f97c0         seta al
0x00001961      1c00           sbb al, 0
0x00001963      84c0           test al, al
0x00001965      0f94c0         sete al
0x00001968      f3c3           ret                                     ; .//src:190
0x0000196a      660f1f440000   nop word [rax + rax]
;-- test_syntax_error:
0x00001970      4881ecd80000.  sub rsp, 0xd8                           ; .//src:92
0x00001977      84c0           test al, al
0x00001979      4889742428     mov qword [rsp + 0x28], rsi
0x0000197e      4889542430     mov qword [rsp + 0x30], rdx
0x00001983      48894c2438     mov qword [rsp + 0x38], rcx
0x00001988      4c89442440     mov qword [rsp + 0x40], r8
0x0000198d      4c894c2448     mov qword [rsp + 0x48], r9
0x00001992      7437           je 0x19cb
0x00001994      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x00001999      0f294c2460     movaps xmmword [rsp + 0x60], xmm1
0x0000199e      0f29542470     movaps xmmword [rsp + 0x70], xmm2
0x000019a3      0f299c248000.  movaps xmmword [rsp + 0x80], xmm3
0x000019ab      0f29a4249000.  movaps xmmword [rsp + 0x90], xmm4
0x000019b3      0f29ac24a000.  movaps xmmword [rsp + 0xa0], xmm5
0x000019bb      0f29b424b000.  movaps xmmword [rsp + 0xb0], xmm6
0x000019c3      0f29bc24c000.  movaps xmmword [rsp + 0xc0], xmm7
0x000019cb      64488b042528.  mov rax, qword fs:[0x28]
0x000019d4      4889442418     mov qword [rsp + 0x18], rax
0x000019d9      31c0           xor eax, eax
0x000019db      488d8424e000.  lea rax, [rsp + 0xe0]                   ; .//src:94
0x000019e3      4889fa         mov rdx, rdi                            ; .//src:95
0x000019e6      4889e1         mov rcx, rsp
0x000019e9      31ff           xor edi, edi
0x000019eb      31f6           xor esi, esi
0x000019ed      4889442408     mov qword [rsp + 8], rax                ; .//src:94
0x000019f2      488d442420     lea rax, [rsp + 0x20]
0x000019f7      c70424080000.  mov dword [rsp], 8
0x000019fe      c74424043000.  mov dword [rsp + 4], 0x30               ; '0'
                                                                       ; [0x30:4]=0
0x00001a06      4889442410     mov qword [rsp + 0x10], rax
0x00001a0b      e8903a0000     call sym.verror                         ; .//src:95
0x00001a10      bf02000000     mov edi, 2                              ; .//src:96
0x00001a15      e886fbffff     call sym.imp.exit
0x00001a1a      660f1f440000   nop word [rax + rax]
;-- find_int:
0x00001a20      53             push rbx                                ; .//src:134
0x00001a21      4889fb         mov rbx, rdi
0x00001a24      e8c7fbffff     call sym.imp.__ctype_b_loc              ; .//src:138
0x00001a29      4c8b00         mov r8, qword [rax]
0x00001a2c      4889d8         mov rax, rbx
0x00001a2f      0fb608         movzx ecx, byte [rax]
0x00001a32      41f6044801     test byte [r8 + rcx*2], 1
0x00001a37      4889ca         mov rdx, rcx
0x00001a3a      7574           jne 0x1ab0
0x00001a3c      80f92b         cmp cl, 0x2b                            ; .//src:141
0x00001a3f      747f           je 0x1ac0
0x00001a41      31c9           xor ecx, ecx                            ; .//src:149
0x00001a43      80fa2d         cmp dl, 0x2d
0x00001a46      0f94c1         sete cl
0x00001a49      4801c1         add rcx, rax
0x00001a4c      0fbe31         movsx esi, byte [rcx]                   ; .//src:152
0x00001a4f      488d5101       lea rdx, [rcx + 1]
0x00001a53      83ee30         sub esi, 0x30
0x00001a56      83fe09         cmp esi, 9
0x00001a59      776e           ja 0x1ac9
0x00001a5b      0fbe7101       movsx esi, byte [rcx + 1]               ; .//src:154
0x00001a5f      89f1           mov ecx, esi
0x00001a61      83ee30         sub esi, 0x30
0x00001a64      83fe09         cmp esi, 9
0x00001a67      7718           ja 0x1a81
0x00001a69      0f1f80000000.  nop dword [rax]
0x00001a70      4883c201       add rdx, 1                              ; .//src:155
0x00001a74      0fbe32         movsx esi, byte [rdx]                   ; .//src:154
0x00001a77      89f1           mov ecx, esi
0x00001a79      83ee30         sub esi, 0x30
0x00001a7c      83fe09         cmp esi, 9
0x00001a7f      76ef           jbe 0x1a70
0x00001a81      0fb6f1         movzx esi, cl                           ; .//src:156
0x00001a84      41f6047001     test byte [r8 + rsi*2], 1
0x00001a89      7416           je 0x1aa1
0x00001a8b      0f1f440000     nop dword [rax + rax]
0x00001a90      4883c201       add rdx, 1                              ; .//src:157
0x00001a94      0fb632         movzx esi, byte [rdx]                   ; .//src:156
0x00001a97      41f6047001     test byte [r8 + rsi*2], 1
0x00001a9c      4889f1         mov rcx, rsi
0x00001a9f      75ef           jne 0x1a90
0x00001aa1      84c9           test cl, cl                             ; .//src:158
0x00001aa3      7524           jne 0x1ac9
0x00001aa5      5b             pop rbx                                 ; .//src:163
0x00001aa6      c3             ret
0x00001aa7      660f1f840000.  nop word [rax + rax]
0x00001ab0      4883c001       add rax, 1                              ; .//src:138
0x00001ab4      e976ffffff     jmp 0x1a2f
0x00001ab9      0f1f80000000.  nop dword [rax]
0x00001ac0      488d4801       lea rcx, [rax + 1]                      ; .//src:143
0x00001ac4      4889c8         mov rax, rcx                            ; .//src:144
0x00001ac7      eb83           jmp 0x1a4c
0x00001ac9      4889df         mov rdi, rbx                            ; .//src:162
0x00001acc      e83f360000     call sym.quote
0x00001ad1      488d35966200.  lea rsi, str.invalid_integer__s         ; 0x7d6e ; "invalid integer %s"
0x00001ad8      4889c3         mov rbx, rax
0x00001adb      31ff           xor edi, edi
0x00001add      ba05000000     mov edx, 5
0x00001ae2      e8d9f8ffff     call sym.imp.dcgettext
0x00001ae7      4889de         mov rsi, rbx
0x00001aea      4889c7         mov rdi, rax
0x00001aed      31c0           xor eax, eax
0x00001aef      e87cfeffff     call sym.test_syntax_error
0x00001af4      6690           nop
0x00001af6      662e0f1f8400.  nop word cs:[rax + rax]
;-- beyond:
0x00001b00      486315b19520.  movsxd rdx, dword [obj.argc]            ; .//src:125 ; [0x20b0b8:4]=0
0x00001b07      488b05a29520.  mov rax, qword [obj.argv]               ; [0x20b0b0:8]=0
0x00001b0e      53             push rbx
0x00001b0f      488b7cd0f8     mov rdi, qword [rax + rdx*8 - 8]        ; .//src:126
0x00001b14      e8f7350000     call sym.quote
0x00001b19      488d35616200.  lea rsi, str.missing_argument_after__s  ; 0x7d81 ; "missing argument after %s"
0x00001b20      4889c3         mov rbx, rax
0x00001b23      31ff           xor edi, edi
0x00001b25      ba05000000     mov edx, 5
0x00001b2a      e891f8ffff     call sym.imp.dcgettext
0x00001b2f      4889de         mov rsi, rbx
0x00001b32      4889c7         mov rdi, rax
0x00001b35      31c0           xor eax, eax
0x00001b37      e834feffff     call sym.test_syntax_error
0x00001b3c      0f1f4000       nop dword [rax]
;-- unary_advance:
0x00001b40      8b0576952000   mov eax, dword [obj.pos]                ; .//src:114 ; [0x20b0bc:4]=0
0x00001b46      8d5001         lea edx, [rax + 1]
0x00001b49      3b1569952000   cmp edx, dword [obj.argc]               ; .//src:108 ; [0x20b0b8:4]=0
0x00001b4f      891567952000   mov dword [obj.pos], edx                ; .//src:106 ; [0x20b0bc:4]=0
0x00001b55      7d0a           jge 0x1b61                              ; .//src:108
0x00001b57      83c002         add eax, 2                              ; .//src:116
0x00001b5a      89055c952000   mov dword [obj.pos], eax                ; [0x20b0bc:4]=0
0x00001b60      c3             ret
0x00001b61      4883ec08       sub rsp, 8                              ; .//src:114
0x00001b65      e896ffffff     call sym.beyond                         ; .//src:109
0x00001b6a      660f1f440000   nop word [rax + rax]
;-- binary_operator:
0x00001b70      4157           push r15                                ; .//src:272
0x00001b72      4156           push r14
0x00001b74      89f8           mov eax, edi
0x00001b76      4155           push r13
0x00001b78      4154           push r12
0x00001b7a      55             push rbp
0x00001b7b      53             push rbx
0x00001b7c      4881ec780100.  sub rsp, 0x178
0x00001b83      8b0d33952000   mov ecx, dword [obj.pos]                ; [0x20b0bc:4]=0
0x00001b89      64488b1c2528.  mov rbx, qword fs:[0x28]
0x00001b92      48899c246801.  mov qword [rsp + 0x168], rbx
0x00001b9a      31db           xor ebx, ebx
0x00001b9c      4084ff         test dil, dil                           ; .//src:278
0x00001b9f      8d5101         lea edx, [rcx + 1]
0x00001ba2      7409           je 0x1bad
0x00001ba4      891512952000   mov dword [obj.pos], edx                ; .//src:106 ; [0x20b0bc:4]=0
0x00001baa      8d5102         lea edx, [rcx + 2]
0x00001bad      8b3d05952000   mov edi, dword [obj.argc]               ; .//src:282 ; [0x20b0b8:4]=0
0x00001bb3      4531ed         xor r13d, r13d                          ; .//src:288
0x00001bb6      488b1df39420.  mov rbx, qword [obj.argv]               ; [0x20b0b0:8]=0
0x00001bbd      4c63f2         movsxd r14, edx
0x00001bc0      8d4ffe         lea ecx, [rdi - 2]                      ; .//src:282
0x00001bc3      39d1           cmp ecx, edx
0x00001bc5      7e21           jle 0x1be8
0x00001bc7      4a8b74f308     mov rsi, qword [rbx + r14*8 + 8]
0x00001bcc      488d3df36100.  lea rdi, [0x00007dc6]                   ; "-l"
0x00001bd3      b903000000     mov ecx, 3
0x00001bd8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001bda      0f97c1         seta cl
0x00001bdd      80d900         sbb cl, 0
0x00001be0      84c9           test cl, cl
0x00001be2      0f8498000000   je 0x1c80
0x00001be8      4a8b34f3       mov rsi, qword [rbx + r14*8]            ; .//src:290
0x00001bec      4e8d3cf50000.  lea r15, [r14*8]
0x00001bf4      0fb616         movzx edx, byte [rsi]
0x00001bf7      80fa2d         cmp dl, 0x2d
0x00001bfa      0f84f0000000   je 0x1cf0
0x00001c00      80fa3d         cmp dl, 0x3d
0x00001c03      0f848f000000   je 0x1c98
0x00001c09      488d3d346100.  lea rdi, [0x00007d44]                   ; "!="
0x00001c10      b903000000     mov ecx, 3
0x00001c15      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001c17      0f97c0         seta al
0x00001c1a      1c00           sbb al, 0
0x00001c1c      84c0           test al, al
0x00001c1e      0f8579040000   jne 0x209d
0x00001c24      486305919420.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x00001c2b      4889c5         mov rbp, rax
0x00001c2e      4883c002       add rax, 2                              ; .//src:252
0x00001c32      488b34c3       mov rsi, qword [rbx + rax*8]
0x00001c36      488b7cc3f0     mov rdi, qword [rbx + rax*8 - 0x10]
0x00001c3b      e850f8ffff     call sym.imp.strcmp
0x00001c40      85c0           test eax, eax
0x00001c42      410f95c5       setne r13b
0x00001c46      83c503         add ebp, 3
0x00001c49      892d6d942000   mov dword [obj.pos], ebp                ; [0x20b0bc:4]=0
0x00001c4f      488b9c246801.  mov rbx, qword [rsp + 0x168]
0x00001c57      6448331c2528.  xor rbx, qword fs:[0x28]
0x00001c60      4489e8         mov eax, r13d
0x00001c63      0f852f040000   jne 0x2098
0x00001c69      4881c4780100.  add rsp, 0x178
0x00001c70      5b             pop rbx
0x00001c71      5d             pop rbp
0x00001c72      415c           pop r12
0x00001c74      415d           pop r13
0x00001c76      415e           pop r14                                 ; .//src:114
0x00001c78      415f           pop r15
0x00001c7a      c3             ret
0x00001c7b      0f1f440000     nop dword [rax + rax]
0x00001c80      891536942000   mov dword [obj.pos], edx                ; [0x20b0bc:4]=0
0x00001c86      41bd01000000   mov r13d, 1
0x00001c8c      e957ffffff     jmp 0x1be8
0x00001c91      0f1f80000000.  nop dword [rax]
0x00001c98      0fb64601       movzx eax, byte [rsi + 1]
0x00001c9c      84c0           test al, al
0x00001c9e      7418           je 0x1cb8
0x00001ca0      3c3d           cmp al, 0x3d
0x00001ca2      0f8561ffffff   jne 0x1c09
0x00001ca8      807e0200       cmp byte [rsi + 2], 0
0x00001cac      0f8557ffffff   jne 0x1c09
0x00001cb2      660f1f440000   nop word [rax + rax]
0x00001cb8      486305fd9320.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x00001cbf      4889c5         mov rbp, rax
0x00001cc2      4883c002       add rax, 2
0x00001cc6      488b34c3       mov rsi, qword [rbx + rax*8]            ; .//src:37
0x00001cca      488b7cc3f0     mov rdi, qword [rbx + rax*8 - 0x10]
0x00001ccf      e8bcf7ffff     call sym.imp.strcmp
0x00001cd4      85c0           test eax, eax
0x00001cd6      410f94c5       sete r13b
0x00001cda      83c503         add ebp, 3
0x00001cdd      892dd9932000   mov dword [obj.pos], ebp                ; [0x20b0bc:4]=0
0x00001ce3      e967ffffff     jmp 0x1c4f
0x00001ce8      0f1f84000000.  nop dword [rax + rax]
0x00001cf0      0fb65601       movzx edx, byte [rsi + 1]
0x00001cf4      80fa6c         cmp dl, 0x6c
0x00001cf7      0f846b010000   je 0x1e68                               ; .//src:94
0x00001cfd      80fa67         cmp dl, 0x67
0x00001d00      0f8462010000   je 0x1e68
0x00001d06      80fa65         cmp dl, 0x65
0x00001d09      0f84c1000000   je 0x1dd0
0x00001d0f      80fa6e         cmp dl, 0x6e
0x00001d12      0f84f8010000   je 0x1f10                               ; .//src:100
0x00001d18      80fa6f         cmp dl, 0x6f
0x00001d1b      0f854f030000   jne 0x2070
0x00001d21      807e0274       cmp byte [rsi + 2], 0x74
0x00001d25      0f856f020000   jne 0x1f9a
0x00001d2b      807e0300       cmp byte [rsi + 3], 0
0x00001d2f      0f8565020000   jne 0x1f9a
0x00001d35      830580932000.  add dword [obj.pos], 3                  ; [0x20b0bc:4]=0
0x00001d3c      4108c5         or r13b, al
0x00001d3f      0f855d030000   jne 0x20a2
0x00001d45      4c8db424a000.  lea r14, [rsp + 0xa0]
0x00001d4d      4a8b743bf8     mov rsi, qword [rbx + r15 - 8]
0x00001d52      bf01000000     mov edi, 1
0x00001d57      4c89f2         mov rdx, r14
0x00001d5a      e871f7ffff     call sym.imp.__xstat
0x00001d5f      85c0           test eax, eax
0x00001d61      89c5           mov ebp, eax
0x00001d63      7515           jne 0x1d7a
0x00001d65      488b84240001.  mov rax, qword [rsp + 0x100]
0x00001d6d      4c8ba424f800.  mov r12, qword [rsp + 0xf8]
0x00001d75      4889442408     mov qword [rsp + 8], rax
0x00001d7a      4a8b743b08     mov rsi, qword [rbx + r15 + 8]
0x00001d7f      4c89f2         mov rdx, r14
0x00001d82      bf01000000     mov edi, 1
0x00001d87      e844f7ffff     call sym.imp.__xstat
0x00001d8c      85c0           test eax, eax
0x00001d8e      0f85bbfeffff   jne 0x1c4f
0x00001d94      488b9424f800.  mov rdx, qword [rsp + 0xf8]
0x00001d9c      85ed           test ebp, ebp
0x00001d9e      488bb4240001.  mov rsi, qword [rsp + 0x100]
0x00001da6      410f95c5       setne r13b
0x00001daa      4939d4         cmp r12, rdx                            ; .//src:-48
0x00001dad      0f9cc0         setl al
0x00001db0      4108c5         or r13b, al
0x00001db3      0f8596feffff   jne 0x1c4f
0x00001db9      8b6c2408       mov ebp, dword [rsp + 8]
0x00001dbd      29f5           sub ebp, esi                            ; .//src:-45
0x00001dbf      c1ed1f         shr ebp, 0x1f
0x00001dc2      4939d4         cmp r12, rdx
0x00001dc5      440f4eed       cmovle r13d, ebp
0x00001dc9      e981feffff     jmp 0x1c4f
0x00001dce      6690           nop
0x00001dd0      0fb65602       movzx edx, byte [rsi + 2]
0x00001dd4      80fa71         cmp dl, 0x71
0x00001dd7      0f84b3010000   je 0x1f90
0x00001ddd      80fa66         cmp dl, 0x66
0x00001de0      0f85b4010000   jne 0x1f9a
0x00001de6      807e0300       cmp byte [rsi + 3], 0
0x00001dea      0f85aa010000   jne 0x1f9a
0x00001df0      8305c5922000.  add dword [obj.pos], 3                  ; [0x20b0bc:4]=0
0x00001df7      4108c5         or r13b, al                             ; ../coreutils-8.31/src/st.c:-296
0x00001dfa      0f85c1020000   jne 0x20c1
0x00001e00      4a8b743bf8     mov rsi, qword [rbx + r15 - 8]
0x00001e05      488d542410     lea rdx, [rsp + 0x10]
0x00001e0a      bf01000000     mov edi, 1                              ; ../coreutils-8.31/src/st.c:-295
0x00001e0f      e8bcf6ffff     call sym.imp.__xstat
0x00001e14      85c0           test eax, eax
0x00001e16      0f8533feffff   jne 0x1c4f
0x00001e1c      4a8b743b08     mov rsi, qword [rbx + r15 + 8]
0x00001e21      488d9424a000.  lea rdx, [rsp + 0xa0]
0x00001e29      bf01000000     mov edi, 1
0x00001e2e      e89df6ffff     call sym.imp.__xstat
0x00001e33      85c0           test eax, eax
0x00001e35      0f8514feffff   jne 0x1c4f
0x00001e3b      488b8424a000.  mov rax, qword [rsp + 0xa0]
0x00001e43      4839442410     cmp qword [rsp + 0x10], rax
0x00001e48      0f8501feffff   jne 0x1c4f
0x00001e4e      488b8424a800.  mov rax, qword [rsp + 0xa8]
0x00001e56      4839442418     cmp qword [rsp + 0x18], rax
0x00001e5b      410f94c5       sete r13b
0x00001e5f      e9ebfdffff     jmp 0x1c4f
0x00001e64      0f1f4000       nop dword [rax]
0x00001e68      0fb64e02       movzx ecx, byte [rsi + 2]
0x00001e6c      80f965         cmp cl, 0x65
0x00001e6f      7409           je 0x1e7a                               ; ../coreutils-8.31/src/st.c:-334
0x00001e71      80f974         cmp cl, 0x74
0x00001e74      0f858cfeffff   jne 0x1d06
0x00001e7a      807e0300       cmp byte [rsi + 3], 0
0x00001e7e      0f855c010000   jne 0x1fe0
0x00001e84      84c0           test al, al
0x00001e86      4a8b7c3bf8     mov rdi, qword [rbx + r15 - 8]
0x00001e8b      0f855f010000   jne 0x1ff0
0x00001e91      e88afbffff     call sym.find_int
0x00001e96      4889c3         mov rbx, rax
0x00001e99      4584ed         test r13b, r13b                         ; ../coreutils-8.31/src/st.c:-330
0x00001e9c      488b050d9220.  mov rax, qword [obj.argv]               ; [0x20b0b0:8]=0
0x00001ea3      0f8467010000   je 0x2010
0x00001ea9      4a8b7c3810     mov rdi, qword [rax + r15 + 0x10]
0x00001eae      e82df5ffff     call sym.imp.strlen
0x00001eb3      488db4245001.  lea rsi, [rsp + 0x150]
0x00001ebb      4889c7         mov rdi, rax
0x00001ebe      e8ed140000     call sym.umaxtostr                      ; ../coreutils-8.31/src/st.c:-329
0x00001ec3      4889c6         mov rsi, rax
0x00001ec6      4889df         mov rdi, rbx
0x00001ec9      e862320000     call sym.strintcmp
0x00001ece      488b15db9120.  mov rdx, qword [obj.argv]               ; [0x20b0b0:8]=0
0x00001ed5      4a8b0cf2       mov rcx, qword [rdx + r14*8]            ; ../coreutils-8.31/src/st.c:-319
0x00001ed9      80790265       cmp byte [rcx + 2], 0x65
0x00001edd      0fb64901       movzx ecx, byte [rcx + 1]
0x00001ee1      0f94c2         sete dl
0x00001ee4      8305d1912000.  add dword [obj.pos], 3                  ; [0x20b0bc:4]=0
0x00001eeb      80f96c         cmp cl, 0x6c
0x00001eee      0f8464010000   je 0x2058
0x00001ef4      80f967         cmp cl, 0x67
0x00001ef7      0f848b010000   je 0x2088
0x00001efd      85c0           test eax, eax
0x00001eff      0f95c0         setne al
0x00001f02      38d0           cmp al, dl
0x00001f04      410f94c5       sete r13b
0x00001f08      e942fdffff     jmp 0x1c4f
0x00001f0d      0f1f00         nop dword [rax]
0x00001f10      0fb64e02       movzx ecx, byte [rsi + 2]
0x00001f14      80f965         cmp cl, 0x65
0x00001f17      7477           je 0x1f90
0x00001f19      80f974         cmp cl, 0x74
0x00001f1c      757c           jne 0x1f9a
0x00001f1e      807e0300       cmp byte [rsi + 3], 0
0x00001f22      7576           jne 0x1f9a
0x00001f24      830591912000.  add dword [obj.pos], 3                  ; [0x20b0bc:4]=0
0x00001f2b      4108c5         or r13b, al
0x00001f2e      0f859b010000   jne 0x20cf
0x00001f34      488dac24a000.  lea rbp, [rsp + 0xa0]
0x00001f3c      4a8b743bf8     mov rsi, qword [rbx + r15 - 8]
0x00001f41      bf01000000     mov edi, 1
0x00001f46      4889ea         mov rdx, rbp
0x00001f49      e882f5ffff     call sym.imp.__xstat
0x00001f4e      85c0           test eax, eax
0x00001f50      4a8d4c3b08     lea rcx, [rbx + r15 + 8]
0x00001f55      7571           jne 0x1fc8
0x00001f57      488b31         mov rsi, qword [rcx]
0x00001f5a      4889ea         mov rdx, rbp
0x00001f5d      bf01000000     mov edi, 1
0x00001f62      488b9c24f800.  mov rbx, qword [rsp + 0xf8]
0x00001f6a      4c8ba4240001.  mov r12, qword [rsp + 0x100]
0x00001f72      e859f5ffff     call sym.imp.__xstat
0x00001f77      85c0           test eax, eax
0x00001f79      0f84a1000000   je 0x2020
0x00001f7f      41bd01000000   mov r13d, 1
0x00001f85      e9c5fcffff     jmp 0x1c4f
0x00001f8a      660f1f440000   nop word [rax + rax]
0x00001f90      807e0300       cmp byte [rsi + 3], 0
0x00001f94      0f84eafeffff   je 0x1e84
0x00001f9a      4889f7         mov rdi, rsi
0x00001f9d      e86e310000     call sym.quote
0x00001fa2      488d35375e00.  lea rsi, str.s:_unknown_binary_operator ; 0x7de0 ; "%s: unknown binary operator"
0x00001fa9      4889c3         mov rbx, rax
0x00001fac      31ff           xor edi, edi
0x00001fae      ba05000000     mov edx, 5
0x00001fb3      e808f4ffff     call sym.imp.dcgettext
0x00001fb8      4889de         mov rsi, rbx
0x00001fbb      4889c7         mov rdi, rax
0x00001fbe      31c0           xor eax, eax
0x00001fc0      e8abf9ffff     call sym.test_syntax_error
0x00001fc5      0f1f00         nop dword [rax]
0x00001fc8      488b31         mov rsi, qword [rcx]
0x00001fcb      4889ea         mov rdx, rbp
0x00001fce      bf01000000     mov edi, 1
0x00001fd3      e8f8f4ffff     call sym.imp.__xstat
0x00001fd8      e972fcffff     jmp 0x1c4f
0x00001fdd      0f1f00         nop dword [rax]
0x00001fe0      80fa6e         cmp dl, 0x6e
0x00001fe3      0f852ffdffff   jne 0x1d18
0x00001fe9      e92bffffff     jmp 0x1f19
0x00001fee      6690           nop
0x00001ff0      e8ebf3ffff     call sym.imp.strlen
0x00001ff5      488db4243001.  lea rsi, [rsp + 0x130]
0x00001ffd      4889c7         mov rdi, rax
0x00002000      e8ab130000     call sym.umaxtostr
0x00002005      4889c3         mov rbx, rax
0x00002008      e98cfeffff     jmp 0x1e99
0x0000200d      0f1f00         nop dword [rax]
0x00002010      4a8b7c3808     mov rdi, qword [rax + r15 + 8]
0x00002015      e806faffff     call sym.find_int
0x0000201a      e9a4feffff     jmp 0x1ec3
0x0000201f      90             nop
0x00002020      483b9c24f800.  cmp rbx, qword [rsp + 0xf8]
0x00002028      488b84240001.  mov rax, qword [rsp + 0x100]
0x00002030      0f8c19fcffff   jl 0x1c4f
0x00002036      41bd01000000   mov r13d, 1
0x0000203c      0f8f0dfcffff   jg 0x1c4f
0x00002042      4129c4         sub r12d, eax
0x00002045      4585e4         test r12d, r12d
0x00002048      410f9fc5       setg r13b
0x0000204c      e9fefbffff     jmp 0x1c4f
0x00002051      0f1f80000000.  nop dword [rax]
0x00002058      0fb6d2         movzx edx, dl
0x0000205b      39c2           cmp edx, eax
0x0000205d      410f9fc5       setg r13b
0x00002061      e9e9fbffff     jmp 0x1c4f
0x00002066      662e0f1f8400.  nop word cs:[rax + rax]
0x00002070      80fa65         cmp dl, 0x65
0x00002073      0f8521ffffff   jne 0x1f9a
0x00002079      0fb65602       movzx edx, byte [rsi + 2]
0x0000207d      e95bfdffff     jmp 0x1ddd
0x00002082      660f1f440000   nop word [rax + rax]
0x00002088      0fb6d2         movzx edx, dl
0x0000208b      f7da           neg edx
0x0000208d      39c2           cmp edx, eax
0x0000208f      410f9cc5       setl r13b
0x00002093      e9b7fbffff     jmp 0x1c4f
0x00002098      e863f3ffff     call sym.imp.__stack_chk_fail
0x0000209d      e87ef2ffff     call sym.imp.abort
0x000020a2      488d35205d00.  lea rsi, str.ot_does_not_accept__l      ; 0x7dc9 ; "-ot does not accept -l"
0x000020a9      ba05000000     mov edx, 5
0x000020ae      31ff           xor edi, edi
0x000020b0      e80bf3ffff     call sym.imp.dcgettext
0x000020b5      31f6           xor esi, esi
0x000020b7      4889c7         mov rdi, rax
0x000020ba      31c0           xor eax, eax
0x000020bc      e8aff8ffff     call sym.test_syntax_error
0x000020c1      ba05000000     mov edx, 5
0x000020c6      488d35e55c00.  lea rsi, str.ef_does_not_accept__l      ; 0x7db2 ; "-ef does not accept -l"
0x000020cd      ebdf           jmp 0x20ae
0x000020cf      ba05000000     mov edx, 5
0x000020d4      488d35c05c00.  lea rsi, str.nt_does_not_accept__l      ; 0x7d9b ; "-nt does not accept -l"
0x000020db      ebd1           jmp 0x20ae
0x000020dd      0f1f00         nop dword [rax]
;-- unary_operator:
0x000020e0      55             push rbp
0x000020e1      53             push rbx
0x000020e2      4881eca80000.  sub rsp, 0xa8
0x000020e9      488b1dc08f20.  mov rbx, qword [obj.argv]               ; [0x20b0b0:8]=0
0x000020f0      64488b042528.  mov rax, qword fs:[0x28]
0x000020f9      488984249800.  mov qword [rsp + 0x98], rax
0x00002101      31c0           xor eax, eax
0x00002103      486305b28f20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x0000210a      488b3cc3       mov rdi, qword [rbx + rax*8]
0x0000210e      0fb64701       movzx eax, byte [rdi + 1]
0x00002112      83e847         sub eax, 0x47
0x00002115      3c33           cmp al, 0x33
0x00002117      0f8749050000   ja 0x2666
0x0000211d      488d151c5e00.  lea rdx, [0x00007f40]
0x00002124      0fb6c0         movzx eax, al
0x00002127      48630482       movsxd rax, dword [rdx + rax*4]
0x0000212b      4801d0         add rax, rdx
0x0000212e      ffe0           jmp rax
0x00002130      e80bfaffff     call sym.unary_advance
0x00002135      486305808f20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x0000213c      488b44c3f8     mov rax, qword [rbx + rax*8 - 8]
0x00002141      803800         cmp byte [rax], 0
0x00002144      0f94c0         sete al
0x00002147      660f1f840000.  nop word [rax + rax]
0x00002150      488b8c249800.  mov rcx, qword [rsp + 0x98]
0x00002158      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002161      0f8545050000   jne 0x26ac
0x00002167      4881c4a80000.  add rsp, 0xa8
0x0000216e      5b             pop rbx
0x0000216f      5d             pop rbp
0x00002170      c3             ret
0x00002171      0f1f80000000.  nop dword [rax]
0x00002178      e8c3f9ffff     call sym.unary_advance
0x0000217d      486305388f20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x00002184      be01000000     mov esi, 1
0x00002189      488b7cc3f8     mov rdi, qword [rbx + rax*8 - 8]
0x0000218e      e8edf3ffff     call sym.imp.euidaccess
0x00002193      85c0           test eax, eax
0x00002195      0f94c0         sete al
0x00002198      ebb6           jmp 0x2150
0x0000219a      660f1f440000   nop word [rax + rax]
0x000021a0      e89bf9ffff     call sym.unary_advance
0x000021a5      486305108f20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x000021ac      4889e2         mov rdx, rsp
0x000021af      bf01000000     mov edi, 1
0x000021b4      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x000021b9      e812f3ffff     call sym.imp.__xstat
0x000021be      89c2           mov edx, eax
0x000021c0      31c0           xor eax, eax
0x000021c2      85d2           test edx, edx
0x000021c4      758a           jne 0x2150
0x000021c6      8b442418       mov eax, dword [rsp + 0x18]
0x000021ca      c1e80b         shr eax, 0xb
0x000021cd      83e001         and eax, 1
0x000021d0      e97bffffff     jmp 0x2150
0x000021d5      0f1f00         nop dword [rax]
0x000021d8      e863f9ffff     call sym.unary_advance
0x000021dd      486305d88e20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x000021e4      488b7cc3f8     mov rdi, qword [rbx + rax*8 - 8]
0x000021e9      e832f8ffff     call sym.find_int
0x000021ee      4889c5         mov rbp, rax
0x000021f1      e83af1ffff     call sym.imp.__errno_location
0x000021f6      31f6           xor esi, esi
0x000021f8      4889c3         mov rbx, rax
0x000021fb      4889ef         mov rdi, rbp
0x000021fe      c70000000000   mov dword [rax], 0
0x00002204      ba0a000000     mov edx, 0xa
0x00002209      e892f2ffff     call sym.imp.strtol
0x0000220e      4889c7         mov rdi, rax
0x00002211      31c0           xor eax, eax
0x00002213      833b22         cmp dword [rbx], 0x22
0x00002216      0f8434ffffff   je 0x2150
0x0000221c      4881ffffffff.  cmp rdi, 0x7fffffff
0x00002223      0f8727ffffff   ja 0x2150
0x00002229      e852f1ffff     call sym.imp.isatty
0x0000222e      85c0           test eax, eax
0x00002230      0f95c0         setne al
0x00002233      e918ffffff     jmp 0x2150
0x00002238      0f1f84000000.  nop dword [rax + rax]
0x00002240      e8fbf8ffff     call sym.unary_advance
0x00002245      486305708e20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x0000224c      be02000000     mov esi, 2
0x00002251      488b7cc3f8     mov rdi, qword [rbx + rax*8 - 8]
0x00002256      e825f3ffff     call sym.imp.euidaccess
0x0000225b      85c0           test eax, eax
0x0000225d      0f94c0         sete al
0x00002260      e9ebfeffff     jmp 0x2150
0x00002265      0f1f00         nop dword [rax]
0x00002268      e8d3f8ffff     call sym.unary_advance
0x0000226d      486305488e20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x00002274      4889e2         mov rdx, rsp
0x00002277      bf01000000     mov edi, 1
0x0000227c      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x00002281      e84af2ffff     call sym.imp.__xstat
0x00002286      89c2           mov edx, eax
0x00002288      31c0           xor eax, eax
0x0000228a      85d2           test edx, edx
0x0000228c      0f85befeffff   jne 0x2150
0x00002292      48837c243000   cmp qword [rsp + 0x30], 0
0x00002298      0f9fc0         setg al
0x0000229b      e9b0feffff     jmp 0x2150
0x000022a0      e89bf8ffff     call sym.unary_advance
0x000022a5      486305108e20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x000022ac      be04000000     mov esi, 4
0x000022b1      488b7cc3f8     mov rdi, qword [rbx + rax*8 - 8]
0x000022b6      e8c5f2ffff     call sym.imp.euidaccess
0x000022bb      85c0           test eax, eax
0x000022bd      0f94c0         sete al
0x000022c0      e98bfeffff     jmp 0x2150
0x000022c5      0f1f00         nop dword [rax]
0x000022c8      e873f8ffff     call sym.unary_advance
0x000022cd      486305e88d20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x000022d4      4889e2         mov rdx, rsp
0x000022d7      bf01000000     mov edi, 1
0x000022dc      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x000022e1      e8eaf1ffff     call sym.imp.__xstat
0x000022e6      89c2           mov edx, eax
0x000022e8      31c0           xor eax, eax
0x000022ea      85d2           test edx, edx
0x000022ec      0f855efeffff   jne 0x2150
0x000022f2      8b442418       mov eax, dword [rsp + 0x18]
0x000022f6      2500f00000     and eax, 0xf000
0x000022fb      3d00100000     cmp eax, 0x1000
0x00002300      0f94c0         sete al
0x00002303      e948feffff     jmp 0x2150
0x00002308      0f1f84000000.  nop dword [rax + rax]
0x00002310      e82bf8ffff     call sym.unary_advance
0x00002315      486305a08d20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x0000231c      488b44c3f8     mov rax, qword [rbx + rax*8 - 8]
0x00002321      803800         cmp byte [rax], 0
0x00002324      0f95c0         setne al
0x00002327      e924feffff     jmp 0x2150
0x0000232c      0f1f4000       nop dword [rax]
0x00002330      e80bf8ffff     call sym.unary_advance
0x00002335      486305808d20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x0000233c      4889e2         mov rdx, rsp
0x0000233f      bf01000000     mov edi, 1
0x00002344      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x00002349      e882f1ffff     call sym.imp.__xstat
0x0000234e      89c2           mov edx, eax
0x00002350      31c0           xor eax, eax
0x00002352      85d2           test edx, edx
0x00002354      0f85f6fdffff   jne 0x2150
0x0000235a      8b442418       mov eax, dword [rsp + 0x18]
0x0000235e      c1e809         shr eax, 9
0x00002361      83e001         and eax, 1
0x00002364      e9e7fdffff     jmp 0x2150
0x00002369      0f1f80000000.  nop dword [rax]
0x00002370      e8cbf7ffff     call sym.unary_advance
0x00002375      486305408d20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x0000237c      4889e2         mov rdx, rsp
0x0000237f      bf01000000     mov edi, 1
0x00002384      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x00002389      e842f1ffff     call sym.imp.__xstat
0x0000238e      89c2           mov edx, eax
0x00002390      31c0           xor eax, eax
0x00002392      85d2           test edx, edx
0x00002394      0f85b6fdffff   jne 0x2150
0x0000239a      8b442418       mov eax, dword [rsp + 0x18]
0x0000239e      c1e80a         shr eax, 0xa
0x000023a1      83e001         and eax, 1
0x000023a4      e9a7fdffff     jmp 0x2150
0x000023a9      0f1f80000000.  nop dword [rax]
0x000023b0      e88bf7ffff     call sym.unary_advance
0x000023b5      486305008d20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x000023bc      4889e2         mov rdx, rsp
0x000023bf      bf01000000     mov edi, 1
0x000023c4      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x000023c9      e802f1ffff     call sym.imp.__xstat
0x000023ce      89c2           mov edx, eax
0x000023d0      31c0           xor eax, eax
0x000023d2      85d2           test edx, edx
0x000023d4      0f8576fdffff   jne 0x2150
0x000023da      8b442418       mov eax, dword [rsp + 0x18]
0x000023de      2500f00000     and eax, 0xf000
0x000023e3      3d00800000     cmp eax, 0x8000
0x000023e8      0f94c0         sete al
0x000023eb      e960fdffff     jmp 0x2150
0x000023f0      e84bf7ffff     call sym.unary_advance
0x000023f5      486305c08c20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x000023fc      4889e2         mov rdx, rsp
0x000023ff      bf01000000     mov edi, 1
0x00002404      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x00002409      e8c2f0ffff     call sym.imp.__xstat
0x0000240e      85c0           test eax, eax
0x00002410      0f94c0         sete al
0x00002413      e938fdffff     jmp 0x2150
0x00002418      0f1f84000000.  nop dword [rax + rax]
0x00002420      e81bf7ffff     call sym.unary_advance
0x00002425      486305908c20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x0000242c      4889e2         mov rdx, rsp
0x0000242f      bf01000000     mov edi, 1
0x00002434      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x00002439      e892f0ffff     call sym.imp.__xstat
0x0000243e      89c2           mov edx, eax
0x00002440      31c0           xor eax, eax
0x00002442      85d2           test edx, edx
0x00002444      0f8506fdffff   jne 0x2150
0x0000244a      8b442418       mov eax, dword [rsp + 0x18]
0x0000244e      2500f00000     and eax, 0xf000
0x00002453      3d00400000     cmp eax, 0x4000
0x00002458      0f94c0         sete al
0x0000245b      e9f0fcffff     jmp 0x2150
0x00002460      e8dbf6ffff     call sym.unary_advance
0x00002465      486305508c20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x0000246c      4889e2         mov rdx, rsp
0x0000246f      bf01000000     mov edi, 1
0x00002474      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x00002479      e852f0ffff     call sym.imp.__xstat
0x0000247e      89c2           mov edx, eax
0x00002480      31c0           xor eax, eax
0x00002482      85d2           test edx, edx
0x00002484      0f85c6fcffff   jne 0x2150
0x0000248a      8b442418       mov eax, dword [rsp + 0x18]
0x0000248e      2500f00000     and eax, 0xf000
0x00002493      3d00200000     cmp eax, 0x2000
0x00002498      0f94c0         sete al
0x0000249b      e9b0fcffff     jmp 0x2150
0x000024a0      e89bf6ffff     call sym.unary_advance
0x000024a5      486305108c20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x000024ac      4889e2         mov rdx, rsp
0x000024af      bf01000000     mov edi, 1
0x000024b4      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x000024b9      e812f0ffff     call sym.imp.__xstat
0x000024be      89c2           mov edx, eax
0x000024c0      31c0           xor eax, eax
0x000024c2      85d2           test edx, edx
0x000024c4      0f8586fcffff   jne 0x2150
0x000024ca      8b442418       mov eax, dword [rsp + 0x18]
0x000024ce      2500f00000     and eax, 0xf000
0x000024d3      3d00600000     cmp eax, 0x6000                         ; " H9\xd6t0H\x89\xd1H\x89\xdfL\x89\x85 \xfc\xff\xffH)\xf1H\x89\xcaH\x89\x8d8\xfc\xff\xff\u82f4\xff\xffH\x8b\x8d8\xfc\xff\xffL\x8b\x85 \xfc\xff\xffH\x01\xcbI\x8bu0I\x8bU8H9\xd6t0H\x89\xd1H\x89\xdfL\x89\x85 \xfc\xff\xffH)\xf1H\x89\xcaH\x89\x8d8\xfc\xff\xff\xe8N\xb4\xff\xffH\x8b\x8d8\xfc\xff\xffL\x8b\x85 \xfc\xff\xffH\x01\u02cb\xbd0\xfc\xff\xff\x83\xff\x10w-\xb8\x01"
0x000024d8      0f94c0         sete al
0x000024db      e970fcffff     jmp 0x2150
0x000024e0      e85bf6ffff     call sym.unary_advance
0x000024e5      486305d08b20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x000024ec      4889e2         mov rdx, rsp
0x000024ef      bf01000000     mov edi, 1
0x000024f4      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x000024f9      e8d2efffff     call sym.imp.__xstat
0x000024fe      89c2           mov edx, eax
0x00002500      31c0           xor eax, eax
0x00002502      85d2           test edx, edx
0x00002504      0f8546fcffff   jne 0x2150
0x0000250a      8b442418       mov eax, dword [rsp + 0x18]
0x0000250e      2500f00000     and eax, 0xf000
0x00002513      3d00c00000     cmp eax, 0xc000
0x00002518      0f94c0         sete al
0x0000251b      e930fcffff     jmp 0x2150
0x00002520      e81bf6ffff     call sym.unary_advance
0x00002525      486305908b20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x0000252c      4889e2         mov rdx, rsp
0x0000252f      bf01000000     mov edi, 1
0x00002534      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x00002539      e892efffff     call sym.imp.__xstat
0x0000253e      85c0           test eax, eax
0x00002540      0f84fa000000   je 0x2640
0x00002546      31c0           xor eax, eax
0x00002548      e903fcffff     jmp 0x2150
0x0000254d      0f1f00         nop dword [rax]
0x00002550      e8ebf5ffff     call sym.unary_advance
0x00002555      486305608b20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x0000255c      4889e2         mov rdx, rsp
0x0000255f      bf01000000     mov edi, 1
0x00002564      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x00002569      e862efffff     call sym.imp.__xstat
0x0000256e      85c0           test eax, eax
0x00002570      75d4           jne 0x2546
0x00002572      31c0           xor eax, eax
0x00002574      488b742458     mov rsi, qword [rsp + 0x58]
0x00002579      4839742448     cmp qword [rsp + 0x48], rsi
0x0000257e      488b4c2450     mov rcx, qword [rsp + 0x50]
0x00002583      488b542460     mov rdx, qword [rsp + 0x60]
0x00002588      0f8fc2fbffff   jg 0x2150
0x0000258e      b801000000     mov eax, 1
0x00002593      0f8cb7fbffff   jl 0x2150
0x00002599      29ca           sub edx, ecx
0x0000259b      85d2           test edx, edx
0x0000259d      0f9fc0         setg al
0x000025a0      e9abfbffff     jmp 0x2150
0x000025a5      0f1f00         nop dword [rax]
0x000025a8      e893f5ffff     call sym.unary_advance
0x000025ad      486305088b20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x000025b4      4889e2         mov rdx, rsp
0x000025b7      bf01000000     mov edi, 1
0x000025bc      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x000025c1      e82aeeffff     call sym.imp.__lxstat
0x000025c6      89c2           mov edx, eax
0x000025c8      31c0           xor eax, eax
0x000025ca      85d2           test edx, edx
0x000025cc      0f857efbffff   jne 0x2150
0x000025d2      8b442418       mov eax, dword [rsp + 0x18]
0x000025d6      2500f00000     and eax, 0xf000
0x000025db      3d00a00000     cmp eax, 0xa000
0x000025e0      0f94c0         sete al
0x000025e3      e968fbffff     jmp 0x2150
0x000025e8      0f1f84000000.  nop dword [rax + rax]
0x000025f0      e84bf5ffff     call sym.unary_advance
0x000025f5      486305c08a20.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x000025fc      4889e2         mov rdx, rsp
0x000025ff      bf01000000     mov edi, 1
0x00002604      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x00002609      e8c2eeffff     call sym.imp.__xstat
0x0000260e      85c0           test eax, eax
0x00002610      0f8530ffffff   jne 0x2546
0x00002616      e815edffff     call sym.imp.__errno_location
0x0000261b      c70000000000   mov dword [rax], 0
0x00002621      4889c3         mov rbx, rax
0x00002624      e8e7eeffff     call sym.imp.getegid
0x00002629      83f8ff         cmp eax, 0xffffffff
0x0000262c      89c2           mov edx, eax
0x0000262e      746e           je 0x269e
0x00002630      39542420       cmp dword [rsp + 0x20], edx
0x00002634      0f94c0         sete al
0x00002637      e914fbffff     jmp 0x2150
0x0000263c      0f1f4000       nop dword [rax]
0x00002640      e8ebecffff     call sym.imp.__errno_location
0x00002645      c70000000000   mov dword [rax], 0
0x0000264b      4889c3         mov rbx, rax
0x0000264e      e8fdedffff     call sym.imp.geteuid
0x00002653      83f8ff         cmp eax, 0xffffffff
0x00002656      89c2           mov edx, eax
0x00002658      7436           je 0x2690
0x0000265a      3954241c       cmp dword [rsp + 0x1c], edx
0x0000265e      0f94c0         sete al
0x00002661      e9eafaffff     jmp 0x2150
0x00002666      e8a52a0000     call sym.quote
0x0000266b      488d358a5700.  lea rsi, str.s:_unary_operator_expected ; 0x7dfc ; "%s: unary operator expected"
0x00002672      4889c3         mov rbx, rax
0x00002675      31ff           xor edi, edi
0x00002677      ba05000000     mov edx, 5
0x0000267c      e83fedffff     call sym.imp.dcgettext
0x00002681      4889de         mov rsi, rbx
0x00002684      4889c7         mov rdi, rax
0x00002687      31c0           xor eax, eax
0x00002689      e8e2f2ffff     call sym.test_syntax_error
0x0000268e      6690           nop
0x00002690      8b33           mov esi, dword [rbx]
0x00002692      31c0           xor eax, eax
0x00002694      85f6           test esi, esi
0x00002696      0f85b4faffff   jne 0x2150
0x0000269c      ebbc           jmp 0x265a
0x0000269e      8b0b           mov ecx, dword [rbx]
0x000026a0      31c0           xor eax, eax
0x000026a2      85c9           test ecx, ecx
0x000026a4      0f85a6faffff   jne 0x2150
0x000026aa      eb84           jmp 0x2630
0x000026ac      e84fedffff     call sym.imp.__stack_chk_fail
0x000026b1      0f1f440000     nop dword [rax + rax]
0x000026b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- two_arguments:
0x000026c0      486305f58920.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x000026c7      4c8b0de28920.  mov r9, qword [obj.argv]                ; [0x20b0b0:8]=0
0x000026ce      488d3d435700.  lea rdi, [0x00007e18]                   ; u"!(\u7325\u6520\u7078\u6365\u6574d\u7325\u6520\u7078\u6365\u6574\u2c64\u6620\u756f\u646e\u2520s\u612d\u2d00o\u7325\u203a\u6962\u616e\u7972\u6f20\u6570\u6172\u6f74\u2072\u7865\u6570\u7463\u6465\u7400\u7365t\u6574\u7473\u6120\u646e\u6f2f\u2072[\u6574\u7473\u6920\u766e\u636f\u7461\u6f69n\u754d\u746c\u2d69\u6163\u6c6c\u6920\u766e\u636f\u7461"
0x000026d5      b902000000     mov ecx, 2
0x000026da      498b14c1       mov rdx, qword [r9 + rax*8]
0x000026de      4989c0         mov r8, rax
0x000026e1      4c8d14c50000.  lea r10, [rax*8]
0x000026e9      4889d6         mov rsi, rdx
0x000026ec      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000026ee      0f97c0         seta al
0x000026f1      1c00           sbb al, 0
0x000026f3      84c0           test al, al
0x000026f5      7419           je 0x2710
0x000026f7      803a2d         cmp byte [rdx], 0x2d
0x000026fa      752b           jne 0x2727
0x000026fc      807a0100       cmp byte [rdx + 1], 0
0x00002700      7425           je 0x2727
0x00002702      807a0200       cmp byte [rdx + 2], 0
0x00002706      751f           jne 0x2727
0x00002708      e9d3f9ffff     jmp sym.unary_operator
0x0000270d      0f1f00         nop dword [rax]
0x00002710      4b8b441108     mov rax, qword [r9 + r10 + 8]
0x00002715      4183c002       add r8d, 2
0x00002719      4489059c8920.  mov dword [obj.pos], r8d                ; [0x20b0bc:4]=0
0x00002720      803800         cmp byte [rax], 0
0x00002723      0f94c0         sete al
0x00002726      c3             ret
0x00002727      4883ec08       sub rsp, 8
0x0000272b      e8d0f3ffff     call sym.beyond
;-- posixtest:
0x00002730      4883ec08       sub rsp, 8
0x00002734      83ff02         cmp edi, 2
0x00002737      0f84cb000000   je 0x2808
0x0000273d      0f8e7d000000   jle 0x27c0
0x00002743      83ff03         cmp edi, 3
0x00002746      7468           je 0x27b0
0x00002748      83ff04         cmp edi, 4
0x0000274b      0f859f000000   jne 0x27f0
0x00002751      486315648920.  movsxd rdx, dword [obj.pos]             ; [0x20b0bc:4]=0
0x00002758      4c8b0d518920.  mov r9, qword [obj.argv]                ; [0x20b0b0:8]=0
0x0000275f      488d3db25600.  lea rdi, [0x00007e18]                   ; u"!(\u7325\u6520\u7078\u6365\u6574d\u7325\u6520\u7078\u6365\u6574\u2c64\u6620\u756f\u646e\u2520s\u612d\u2d00o\u7325\u203a\u6962\u616e\u7972\u6f20\u6570\u6172\u6f74\u2072\u7865\u6570\u7463\u6465\u7400\u7365t\u6574\u7473\u6120\u646e\u6f2f\u2072[\u6574\u7473\u6920\u766e\u636f\u7461\u6f69n\u754d\u746c\u2d69\u6163\u6c6c\u6920\u766e\u636f\u7461"
0x00002766      b902000000     mov ecx, 2
0x0000276b      4d8b04d1       mov r8, qword [r9 + rdx*8]
0x0000276f      4889d0         mov rax, rdx
0x00002772      4c8d14d50000.  lea r10, [rdx*8]
0x0000277a      4c89c6         mov rsi, r8
0x0000277d      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000277f      0f97c2         seta dl
0x00002782      80da00         sbb dl, 0
0x00002785      84d2           test dl, dl
0x00002787      0f858b000000   jne 0x2818
0x0000278d      83c001         add eax, 1
0x00002790      3b0522892000   cmp eax, dword [obj.argc]               ; [0x20b0b8:4]=0
0x00002796      890520892000   mov dword [obj.pos], eax                ; [0x20b0bc:4]=0
0x0000279c      0f8dc8000000   jge 0x286a
0x000027a2      e8a9040000     call sym.three_arguments
0x000027a7      4883c408       add rsp, 8
0x000027ab      83f001         xor eax, 1
0x000027ae      c3             ret
0x000027af      90             nop
0x000027b0      4883c408       add rsp, 8
0x000027b4      e997040000     jmp sym.three_arguments
0x000027b9      0f1f80000000.  nop dword [rax]
0x000027c0      83ff01         cmp edi, 1
0x000027c3      752b           jne 0x27f0
0x000027c5      486305f08820.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x000027cc      8d5001         lea edx, [rax + 1]
0x000027cf      8915e7882000   mov dword [obj.pos], edx                ; [0x20b0bc:4]=0
0x000027d5      488b15d48820.  mov rdx, qword [obj.argv]               ; [0x20b0b0:8]=0
0x000027dc      488b04c2       mov rax, qword [rdx + rax*8]
0x000027e0      803800         cmp byte [rax], 0
0x000027e3      0f95c0         setne al
0x000027e6      4883c408       add rsp, 8
0x000027ea      c3             ret
0x000027eb      0f1f440000     nop dword [rax + rax]
0x000027f0      8b05c6882000   mov eax, dword [obj.pos]                ; [0x20b0bc:4]=0
0x000027f6      3b05bc882000   cmp eax, dword [obj.argc]               ; [0x20b0b8:4]=0
0x000027fc      7d6c           jge 0x286a
0x000027fe      4883c408       add rsp, 8
0x00002802      eb6c           jmp sym.or
0x00002804      0f1f4000       nop dword [rax]
0x00002808      4883c408       add rsp, 8
0x0000280c      e9affeffff     jmp sym.two_arguments
0x00002811      0f1f80000000.  nop dword [rax]
0x00002818      488d3dfb5500.  lea rdi, [0x00007e1a]                   ; "("
0x0000281f      b902000000     mov ecx, 2
0x00002824      4c89c6         mov rsi, r8
0x00002827      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002829      0f97c2         seta dl
0x0000282c      80da00         sbb dl, 0
0x0000282f      84d2           test dl, dl
0x00002831      75c3           jne 0x27f6
0x00002833      4b8b741118     mov rsi, qword [r9 + r10 + 0x18]
0x00002838      488d3d0a6b00.  lea rdi, [0x00009349]                   ; ")"
0x0000283f      b902000000     mov ecx, 2
0x00002844      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002846      0f97c2         seta dl
0x00002849      80da00         sbb dl, 0
0x0000284c      84d2           test dl, dl
0x0000284e      75a6           jne 0x27f6
0x00002850      83c001         add eax, 1
0x00002853      890563882000   mov dword [obj.pos], eax                ; [0x20b0bc:4]=0
0x00002859      e862feffff     call sym.two_arguments
0x0000285e      830557882000.  add dword [obj.pos], 1                  ; [0x20b0bc:4]=0
0x00002865      e97cffffff     jmp 0x27e6
0x0000286a      e891f2ffff     call sym.beyond
0x0000286f      90             nop
;-- or:
0x00002870      4157           push r15
0x00002872      4156           push r14
0x00002874      4155           push r13
0x00002876      4154           push r12
0x00002878      55             push rbp
0x00002879      53             push rbx
0x0000287a      4883ec18       sub rsp, 0x18
0x0000287e      448b1d378820.  mov r11d, dword [obj.pos]               ; [0x20b0bc:4]=0
0x00002885      448b252c8820.  mov r12d, dword [obj.argc]              ; [0x20b0b8:4]=0
0x0000288c      c644240f00     mov byte [rsp + 0xf], 0
0x00002891      0f1f80000000.  nop dword [rax]
0x00002898      4539e3         cmp r11d, r12d
0x0000289b      bb01000000     mov ebx, 1
0x000028a0      488d2d975500.  lea rbp, [0x00007e3e]                   ; "-a"
0x000028a7      0f8db1010000   jge 0x2a5e
0x000028ad      0f1f00         nop dword [rax]
0x000028b0      4c8b3df98720.  mov r15, qword [obj.argv]               ; [0x20b0b0:8]=0
0x000028b7      4d63cb         movsxd r9, r11d
0x000028ba      4f8b14cf       mov r10, qword [r15 + r9*8]
0x000028be      450fb62a       movzx r13d, byte [r10]
0x000028c2      4180fd21       cmp r13b, 0x21
0x000028c6      0f85db020000   jne 0x2ba7
0x000028cc      41807a0100     cmp byte [r10 + 1], 0
0x000028d1      0f85d8020000   jne 0x2baf
0x000028d7      458d4b01       lea r9d, [r11 + 1]
0x000028db      4539e1         cmp r9d, r12d
0x000028de      44890dd78720.  mov dword [obj.pos], r9d                ; [0x20b0bc:4]=0
0x000028e5      0f8d73010000   jge 0x2a5e
0x000028eb      418d4424fe     lea eax, [r12 - 2]
0x000028f0      4d63c9         movsxd r9, r9d
0x000028f3      31c9           xor ecx, ecx
0x000028f5      41be01000000   mov r14d, 1
0x000028fb      4429d8         sub eax, r11d
0x000028fe      498d740101     lea rsi, [r9 + rax + 1]
0x00002903      eb28           jmp 0x292d
0x00002905      0f1f00         nop dword [rax]
0x00002908      41807a0100     cmp byte [r10 + 1], 0
0x0000290d      0f8555010000   jne 0x2a68
0x00002913      418d4101       lea eax, [r9 + 1]
0x00002917      4983c101       add r9, 1
0x0000291b      4939f1         cmp r9, rsi
0x0000291e      0f84aa020000   je 0x2bce
0x00002924      4183f601       xor r14d, 1
0x00002928      b901000000     mov ecx, 1
0x0000292d      4f8b14cf       mov r10, qword [r15 + r9*8]
0x00002931      4589cb         mov r11d, r9d
0x00002934      410fb602       movzx eax, byte [r10]
0x00002938      3c21           cmp al, 0x21
0x0000293a      74cc           je 0x2908
0x0000293c      84c9           test cl, cl
0x0000293e      0f857e020000   jne 0x2bc2
0x00002944      4189c5         mov r13d, eax
0x00002947      4180fd28       cmp r13b, 0x28
0x0000294b      0f8527010000   jne 0x2a78
0x00002951      41807a0100     cmp byte [r10 + 1], 0
0x00002956      0f851c010000   jne 0x2a78
0x0000295c      458d4b01       lea r9d, [r11 + 1]
0x00002960      4539e1         cmp r9d, r12d
0x00002963      44890d528720.  mov dword [obj.pos], r9d                ; [0x20b0bc:4]=0
0x0000296a      0f8dee000000   jge 0x2a5e
0x00002970      418d4302       lea eax, [r11 + 2]
0x00002974      4439e0         cmp eax, r12d
0x00002977      0f8d3a020000   jge 0x2bb7
0x0000297d      4898           cdqe
0x0000297f      41b801000000   mov r8d, 1
0x00002985      4d8d14c7       lea r10, [r15 + rax*8]
0x00002989      418d4424ff     lea eax, [r12 - 1]
0x0000298e      4429d8         sub eax, r11d
0x00002991      4189c3         mov r11d, eax
0x00002994      498b32         mov rsi, qword [r10]
0x00002997      488d3dab6900.  lea rdi, [0x00009349]                   ; ")"
0x0000299e      b902000000     mov ecx, 2
0x000029a3      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000029a5      0f97c0         seta al
0x000029a8      1c00           sbb al, 0
0x000029aa      84c0           test al, al
0x000029ac      741a           je 0x29c8
0x000029ae      4183f804       cmp r8d, 4
0x000029b2      0f84a8010000   je 0x2b60
0x000029b8      4183c001       add r8d, 1
0x000029bc      4983c208       add r10, 8
0x000029c0      4539c3         cmp r11d, r8d
0x000029c3      75cf           jne 0x2994
0x000029c5      0f1f00         nop dword [rax]
0x000029c8      4489c7         mov edi, r8d
0x000029cb      e860fdffff     call sym.posixtest
0x000029d0      48630de58620.  movsxd rcx, dword [obj.pos]             ; [0x20b0bc:4]=0
0x000029d7      488b15d28620.  mov rdx, qword [obj.argv]               ; [0x20b0b0:8]=0
0x000029de      488b34ca       mov rsi, qword [rdx + rcx*8]
0x000029e2      4989cb         mov r11, rcx
0x000029e5      4885f6         test rsi, rsi
0x000029e8      0f842c020000   je 0x2c1a
0x000029ee      803e29         cmp byte [rsi], 0x29
0x000029f1      0f85e2010000   jne 0x2bd9
0x000029f7      807e0100       cmp byte [rsi + 1], 0
0x000029fb      0f85d8010000   jne 0x2bd9
0x00002a01      448b25b08620.  mov r12d, dword [obj.argc]              ; [0x20b0b8:4]=0
0x00002a08      4183c301       add r11d, 1
0x00002a0c      44891da98620.  mov dword [obj.pos], r11d               ; [0x20b0bc:4]=0
0x00002a13      4131c6         xor r14d, eax
0x00002a16      4421f3         and ebx, r14d
0x00002a19      4539dc         cmp r12d, r11d
0x00002a1c      0f8ec5000000   jle 0x2ae7
0x00002a22      488b0d878620.  mov rcx, qword [obj.argv]               ; [0x20b0b0:8]=0
0x00002a29      4963c3         movsxd rax, r11d
0x00002a2c      4889ef         mov rdi, rbp
0x00002a2f      4c8b04c1       mov r8, qword [rcx + rax*8]
0x00002a33      b903000000     mov ecx, 3
0x00002a38      4c89c6         mov rsi, r8
0x00002a3b      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002a3d      0f97c0         seta al
0x00002a40      1c00           sbb al, 0
0x00002a42      84c0           test al, al
0x00002a44      0f85e4000000   jne 0x2b2e
0x00002a4a      4183c301       add r11d, 1
0x00002a4e      4539e3         cmp r11d, r12d
0x00002a51      44891d648620.  mov dword [obj.pos], r11d               ; [0x20b0bc:4]=0
0x00002a58      0f8c52feffff   jl 0x28b0
0x00002a5e      e89df0ffff     call sym.beyond
0x00002a63      0f1f440000     nop dword [rax + rax]
0x00002a68      84c9           test cl, cl
0x00002a6a      740c           je 0x2a78
0x00002a6c      44890d498620.  mov dword [obj.pos], r9d                ; [0x20b0bc:4]=0
0x00002a73      0f1f440000     nop dword [rax + rax]
0x00002a78      4489e0         mov eax, r12d
0x00002a7b      4429d8         sub eax, r11d
0x00002a7e      83f803         cmp eax, 3
0x00002a81      7e7d           jle 0x2b00
0x00002a83      488d3d3c5300.  lea rdi, [0x00007dc6]                   ; "-l"
0x00002a8a      b903000000     mov ecx, 3
0x00002a8f      4c89d6         mov rsi, r10
0x00002a92      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002a94      0f97c0         seta al
0x00002a97      1c00           sbb al, 0
0x00002a99      84c0           test al, al
0x00002a9b      7512           jne 0x2aaf
0x00002a9d      4b8b7ccf10     mov rdi, qword [r15 + r9*8 + 0x10]
0x00002aa2      e859edffff     call sym.binop
0x00002aa7      84c0           test al, al
0x00002aa9      0f85db000000   jne 0x2b8a
0x00002aaf      4b8b7ccf08     mov rdi, qword [r15 + r9*8 + 8]
0x00002ab4      e847edffff     call sym.binop
0x00002ab9      84c0           test al, al
0x00002abb      0f85af000000   jne 0x2b70
0x00002ac1      4180fd2d       cmp r13b, 0x2d
0x00002ac5      7441           je 0x2b08
0x00002ac7      4584ed         test r13b, r13b
0x00002aca      0f95c0         setne al
0x00002acd      4183c301       add r11d, 1
0x00002ad1      4131c6         xor r14d, eax
0x00002ad4      44891de18520.  mov dword [obj.pos], r11d               ; [0x20b0bc:4]=0
0x00002adb      4421f3         and ebx, r14d
0x00002ade      4539dc         cmp r12d, r11d
0x00002ae1      0f8f3bffffff   jg 0x2a22
0x00002ae7      085c240f       or byte [rsp + 0xf], bl
0x00002aeb      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00002af0      4883c418       add rsp, 0x18
0x00002af4      5b             pop rbx
0x00002af5      5d             pop rbp
0x00002af6      415c           pop r12
0x00002af8      415d           pop r13
0x00002afa      415e           pop r14
0x00002afc      415f           pop r15
0x00002afe      c3             ret
0x00002aff      90             nop
0x00002b00      74ad           je 0x2aaf
0x00002b02      4180fd2d       cmp r13b, 0x2d
0x00002b06      75bf           jne 0x2ac7
0x00002b08      41807a0100     cmp byte [r10 + 1], 0
0x00002b0d      74b8           je 0x2ac7
0x00002b0f      41807a0200     cmp byte [r10 + 2], 0
0x00002b14      75b1           jne 0x2ac7
0x00002b16      e8c5f5ffff     call sym.unary_operator
0x00002b1b      448b1d9a8520.  mov r11d, dword [obj.pos]               ; [0x20b0bc:4]=0
0x00002b22      448b258f8520.  mov r12d, dword [obj.argc]              ; [0x20b0b8:4]=0
0x00002b29      e9e5feffff     jmp 0x2a13
0x00002b2e      488d3d0c5300.  lea rdi, [0x00007e41]                   ; "-o"
0x00002b35      b903000000     mov ecx, 3
0x00002b3a      4c89c6         mov rsi, r8
0x00002b3d      085c240f       or byte [rsp + 0xf], bl
0x00002b41      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002b43      0f97c0         seta al
0x00002b46      1c00           sbb al, 0
0x00002b48      84c0           test al, al
0x00002b4a      759f           jne 0x2aeb
0x00002b4c      4183c301       add r11d, 1
0x00002b50      44891d658520.  mov dword [obj.pos], r11d               ; [0x20b0bc:4]=0
0x00002b57      e93cfdffff     jmp 0x2898
0x00002b5c      0f1f4000       nop dword [rax]
0x00002b60      4589e0         mov r8d, r12d
0x00002b63      4529c8         sub r8d, r9d
0x00002b66      e95dfeffff     jmp 0x29c8
0x00002b6b      0f1f440000     nop dword [rax + rax]
0x00002b70      31ff           xor edi, edi
0x00002b72      e8f9efffff     call sym.binary_operator
0x00002b77      448b1d3e8520.  mov r11d, dword [obj.pos]               ; [0x20b0bc:4]=0
0x00002b7e      448b25338520.  mov r12d, dword [obj.argc]              ; [0x20b0b8:4]=0
0x00002b85      e989feffff     jmp 0x2a13
0x00002b8a      bf01000000     mov edi, 1
0x00002b8f      e8dcefffff     call sym.binary_operator
0x00002b94      448b1d218520.  mov r11d, dword [obj.pos]               ; [0x20b0bc:4]=0
0x00002b9b      448b25168520.  mov r12d, dword [obj.argc]              ; [0x20b0b8:4]=0
0x00002ba2      e96cfeffff     jmp 0x2a13
0x00002ba7      4531f6         xor r14d, r14d
0x00002baa      e998fdffff     jmp 0x2947
0x00002baf      4531f6         xor r14d, r14d
0x00002bb2      e9c1feffff     jmp 0x2a78
0x00002bb7      41b801000000   mov r8d, 1
0x00002bbd      e906feffff     jmp 0x29c8
0x00002bc2      44890df38420.  mov dword [obj.pos], r9d                ; [0x20b0bc:4]=0
0x00002bc9      e976fdffff     jmp 0x2944
0x00002bce      8905e8842000   mov dword [obj.pos], eax                ; [0x20b0bc:4]=0
0x00002bd4      e985feffff     jmp 0x2a5e
0x00002bd9      bf01000000     mov edi, 1
0x00002bde      e80d250000     call sym.quote_n
0x00002be3      488d355f6700.  lea rsi, [0x00009349]                   ; ")"
0x00002bea      31ff           xor edi, edi
0x00002bec      4889c5         mov rbp, rax
0x00002bef      e8fc240000     call sym.quote_n
0x00002bf4      488d352d5200.  lea rsi, [0x00007e28]                   ; "%s expected, found %s"
0x00002bfb      4889c3         mov rbx, rax
0x00002bfe      ba05000000     mov edx, 5
0x00002c03      31ff           xor edi, edi
0x00002c05      e8b6e7ffff     call sym.imp.dcgettext
0x00002c0a      4889ea         mov rdx, rbp
0x00002c0d      4889c7         mov rdi, rax
0x00002c10      4889de         mov rsi, rbx
0x00002c13      31c0           xor eax, eax
0x00002c15      e856edffff     call sym.test_syntax_error
0x00002c1a      488d3d286700.  lea rdi, [0x00009349]                   ; ")"
0x00002c21      e8ea240000     call sym.quote
0x00002c26      488d35ef5100.  lea rsi, [0x00007e1c]                   ; "%s expected"
0x00002c2d      4889c3         mov rbx, rax
0x00002c30      31ff           xor edi, edi
0x00002c32      ba05000000     mov edx, 5
0x00002c37      e884e7ffff     call sym.imp.dcgettext
0x00002c3c      4889de         mov rsi, rbx
0x00002c3f      4889c7         mov rdi, rax
0x00002c42      31c0           xor eax, eax
0x00002c44      e827edffff     call sym.test_syntax_error
0x00002c49      0f1f80000000.  nop dword [rax]
;-- three_arguments:
0x00002c50      486305658420.  movsxd rax, dword [obj.pos]             ; [0x20b0bc:4]=0
0x00002c57      4c8b15528420.  mov r10, qword [obj.argv]               ; [0x20b0b0:8]=0
0x00002c5e      53             push rbx
0x00002c5f      4989c1         mov r9, rax
0x00002c62      4883c001       add rax, 1
0x00002c66      4d8b1cc2       mov r11, qword [r10 + rax*8]
0x00002c6a      488d1cc50000.  lea rbx, [rax*8]
0x00002c72      4c89df         mov rdi, r11
0x00002c75      e886ebffff     call sym.binop
0x00002c7a      84c0           test al, al
0x00002c7c      0f85de000000   jne 0x2d60
0x00002c82      498b541af8     mov rdx, qword [r10 + rbx - 8]
0x00002c87      488d3d8a5100.  lea rdi, [0x00007e18]                   ; u"!(\u7325\u6520\u7078\u6365\u6574d\u7325\u6520\u7078\u6365\u6574\u2c64\u6620\u756f\u646e\u2520s\u612d\u2d00o\u7325\u203a\u6962\u616e\u7972\u6f20\u6570\u6172\u6f74\u2072\u7865\u6570\u7463\u6465\u7400\u7365t\u6574\u7473\u6120\u646e\u6f2f\u2072[\u6574\u7473\u6920\u766e\u636f\u7461\u6f69n\u754d\u746c\u2d69\u6163\u6c6c\u6920\u766e\u636f\u7461"
0x00002c8e      b902000000     mov ecx, 2
0x00002c93      4889d6         mov rsi, rdx
0x00002c96      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002c98      0f97c0         seta al
0x00002c9b      1c00           sbb al, 0
0x00002c9d      84c0           test al, al
0x00002c9f      7527           jne 0x2cc8
0x00002ca1      4183c101       add r9d, 1
0x00002ca5      443b0d0c8420.  cmp r9d, dword [obj.argc]               ; [0x20b0b8:4]=0
0x00002cac      44890d098420.  mov dword [obj.pos], r9d                ; [0x20b0bc:4]=0
0x00002cb3      0f8dda000000   jge 0x2d93
0x00002cb9      e802faffff     call sym.two_arguments
0x00002cbe      5b             pop rbx
0x00002cbf      83f001         xor eax, 1
0x00002cc2      c3             ret
0x00002cc3      0f1f440000     nop dword [rax + rax]
0x00002cc8      488d3d4b5100.  lea rdi, [0x00007e1a]                   ; "("
0x00002ccf      b902000000     mov ecx, 2
0x00002cd4      4889d6         mov rsi, rdx
0x00002cd7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002cd9      0f97c0         seta al
0x00002cdc      1c00           sbb al, 0
0x00002cde      84c0           test al, al
0x00002ce0      7536           jne 0x2d18
0x00002ce2      498b741a08     mov rsi, qword [r10 + rbx + 8]
0x00002ce7      488d3d5b6600.  lea rdi, [0x00009349]                   ; ")"
0x00002cee      b902000000     mov ecx, 2
0x00002cf3      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002cf5      0f97c0         seta al
0x00002cf8      1c00           sbb al, 0
0x00002cfa      84c0           test al, al
0x00002cfc      751a           jne 0x2d18
0x00002cfe      41803b00       cmp byte [r11], 0
0x00002d02      5b             pop rbx
0x00002d03      0f95c0         setne al
0x00002d06      4183c103       add r9d, 3
0x00002d0a      44890dab8320.  mov dword [obj.pos], r9d                ; [0x20b0bc:4]=0
0x00002d11      c3             ret
0x00002d12      660f1f440000   nop word [rax + rax]
0x00002d18      488d3d1f5100.  lea rdi, [0x00007e3e]                   ; "-a"
0x00002d1f      b903000000     mov ecx, 3
0x00002d24      4c89de         mov rsi, r11
0x00002d27      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002d29      0f97c0         seta al
0x00002d2c      1c00           sbb al, 0
0x00002d2e      84c0           test al, al
0x00002d30      741a           je 0x2d4c
0x00002d32      488d3d085100.  lea rdi, [0x00007e41]                   ; "-o"
0x00002d39      b903000000     mov ecx, 3
0x00002d3e      4c89de         mov rsi, r11
0x00002d41      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002d43      0f97c0         seta al
0x00002d46      1c00           sbb al, 0
0x00002d48      84c0           test al, al
0x00002d4a      751c           jne 0x2d68
0x00002d4c      443b0d658320.  cmp r9d, dword [obj.argc]               ; [0x20b0b8:4]=0
0x00002d53      7d3e           jge 0x2d93
0x00002d55      5b             pop rbx
0x00002d56      e915fbffff     jmp sym.or
0x00002d5b      0f1f440000     nop dword [rax + rax]
0x00002d60      5b             pop rbx
0x00002d61      31ff           xor edi, edi
0x00002d63      e908eeffff     jmp sym.binary_operator
0x00002d68      4c89df         mov rdi, r11
0x00002d6b      e8a0230000     call sym.quote
0x00002d70      488d35cd5000.  lea rsi, [0x00007e44]                   ; "%s: binary operator expected"
0x00002d77      4889c3         mov rbx, rax
0x00002d7a      31ff           xor edi, edi
0x00002d7c      ba05000000     mov edx, 5
0x00002d81      e83ae6ffff     call sym.imp.dcgettext
0x00002d86      4889de         mov rsi, rbx
0x00002d89      4889c7         mov rdi, rax
0x00002d8c      31c0           xor eax, eax
0x00002d8e      e8ddebffff     call sym.test_syntax_error
0x00002d93      e868edffff     call sym.beyond
0x00002d98      0f1f84000000.  nop dword [rax + rax]
;-- usage:
0x00002da0      4155           push r13
0x00002da2      4154           push r12
0x00002da4      55             push rbp
0x00002da5      53             push rbx
0x00002da6      89fd           mov ebp, edi
0x00002da8      4881ec880000.  sub rsp, 0x88
0x00002daf      64488b042528.  mov rax, qword fs:[0x28]
0x00002db8      4889442478     mov qword [rsp + 0x78], rax
0x00002dbd      31c0           xor eax, eax
0x00002dbf      85ff           test edi, edi
0x00002dc1      743a           je 0x2dfd
0x00002dc3      488d35465200.  lea rsi, str.Try___s___help__for_more_information. ; 0x8010 ; "Try '%s --help' for more information.\n"
0x00002dca      488b1dff8220.  mov rbx, qword [obj.program_name]       ; [0x20b0d0:8]=0
0x00002dd1      ba05000000     mov edx, 5
0x00002dd6      31ff           xor edi, edi
0x00002dd8      e8e3e5ffff     call sym.imp.dcgettext
0x00002ddd      488b3dbc8220.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0a0:8]=0
0x00002de4      4889c2         mov rdx, rax
0x00002de7      4889d9         mov rcx, rbx
0x00002dea      be01000000     mov esi, 1
0x00002def      31c0           xor eax, eax
0x00002df1      e8cae7ffff     call sym.imp.__fprintf_chk
0x00002df6      89ef           mov edi, ebp
0x00002df8      e8a3e7ffff     call sym.imp.exit
0x00002dfd      488b1d848220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002e04      488d352d5200.  lea rsi, str.Usage:_test_EXPRESSION____or:__test____or:____EXPRESSION______or:_________or:____OPTION ; 0x8038 ; "Usage: test EXPRESSION\n  or:  test\n  or:  [ EXPRESSION ]\n  or:  [ ]\n  or:  [ OPTION\n"
0x00002e0b      ba05000000     mov edx, 5
0x00002e10      31ff           xor edi, edi
0x00002e12      e8a9e5ffff     call sym.imp.dcgettext
0x00002e17      4889de         mov rsi, rbx
0x00002e1a      4889c7         mov rdi, rax
0x00002e1d      e84ee6ffff     call sym.imp.fputs_unlocked
0x00002e22      488b1d5f8220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002e29      488d35605200.  lea rsi, str.Exit_with_the_status_determined_by_EXPRESSION. ; 0x8090 ; "Exit with the status determined by EXPRESSION.\n\n"
0x00002e30      ba05000000     mov edx, 5
0x00002e35      31ff           xor edi, edi
0x00002e37      e884e5ffff     call sym.imp.dcgettext
0x00002e3c      4889de         mov rsi, rbx
0x00002e3f      4889c7         mov rdi, rax
0x00002e42      e829e6ffff     call sym.imp.fputs_unlocked
0x00002e47      488b1d3a8220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002e4e      488d35735200.  lea rsi, str.help_____display_this_help_and_exit ; 0x80c8 ; "      --help     display this help and exit\n"
0x00002e55      ba05000000     mov edx, 5
0x00002e5a      31ff           xor edi, edi
0x00002e5c      e85fe5ffff     call sym.imp.dcgettext
0x00002e61      4889de         mov rsi, rbx
0x00002e64      4889c7         mov rdi, rax
0x00002e67      e804e6ffff     call sym.imp.fputs_unlocked
0x00002e6c      488b1d158220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002e73      488d357e5200.  lea rsi, str.version__output_version_information_and_exit ; 0x80f8 ; "      --version  output version information and exit\n"
0x00002e7a      ba05000000     mov edx, 5
0x00002e7f      31ff           xor edi, edi
0x00002e81      e83ae5ffff     call sym.imp.dcgettext
0x00002e86      4889de         mov rsi, rbx
0x00002e89      4889c7         mov rdi, rax
0x00002e8c      e8dfe5ffff     call sym.imp.fputs_unlocked
0x00002e91      488b1df08120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002e98      488d35915200.  lea rsi, str.An_omitted_EXPRESSION_defaults_to_false.__Otherwise___EXPRESSION_is_true_or_false_and_sets_exit_status.__It_is_one_of: ; 0x8130 ; "\nAn omitted EXPRESSION defaults to false.  Otherwise,\nEXPRESSION is true or false and sets exit status.  It is one of:\n"
0x00002e9f      ba05000000     mov edx, 5
0x00002ea4      31ff           xor edi, edi
0x00002ea6      e815e5ffff     call sym.imp.dcgettext
0x00002eab      4889de         mov rsi, rbx
0x00002eae      4889c7         mov rdi, rax
0x00002eb1      e8bae5ffff     call sym.imp.fputs_unlocked
0x00002eb6      488b1dcb8120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002ebd      488d35e45200.  lea rsi, str.EXPRESSION_________________EXPRESSION_is_true______EXPRESSION_________________EXPRESSION_is_false____EXPRESSION1__a_EXPRESSION2___both_EXPRESSION1_and_EXPRESSION2_are_true____EXPRESSION1__o_EXPRESSION2___either_EXPRESSION1_or_EXPRESSION2_is_true ; 0x81a8 ; "\n  ( EXPRESSION )               EXPRESSION is true\n  ! EXPRESSION                 EXPRESSION is false\n  EXPRESSION1 -a EXPRESSION2   both EXPRESSION1 and EXPRESSION2 are true\n  EXPRESSION1 -o EXPRESSION2   either EXPRESSION1 or EXPRESSION2 is true\n"
0x00002ec4      ba05000000     mov edx, 5
0x00002ec9      31ff           xor edi, edi
0x00002ecb      e8f0e4ffff     call sym.imp.dcgettext
0x00002ed0      4889de         mov rsi, rbx
0x00002ed3      4889c7         mov rdi, rax
0x00002ed6      e895e5ffff     call sym.imp.fputs_unlocked
0x00002edb      488b1da68120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002ee2      488d35bf5300.  lea rsi, str.n_STRING____________the_length_of_STRING_is_nonzero____STRING_______________equivalent_to__n_STRING_____z_STRING____________the_length_of_STRING_is_zero____STRING1___STRING2____the_strings_are_equal____STRING1____STRING2___the_strings_are_not_equal ; 0x82a8 ; "\n  -n STRING            the length of STRING is nonzero\n  STRING               equivalent to -n STRING\n  -z STRING            the length of STRING is zero\n  STRING1 = STRING2    the strings are equal\n  STRING1 != STRING2   the strings are not equal\n"
0x00002ee9      ba05000000     mov edx, 5
0x00002eee      31ff           xor edi, edi
0x00002ef0      e8cbe4ffff     call sym.imp.dcgettext
0x00002ef5      4889de         mov rsi, rbx
0x00002ef8      4889c7         mov rdi, rax
0x00002efb      e870e5ffff     call sym.imp.fputs_unlocked
0x00002f00      488b1d818120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002f07      488d359a5400.  lea rsi, str.INTEGER1__eq_INTEGER2___INTEGER1_is_equal_to_INTEGER2____INTEGER1__ge_INTEGER2___INTEGER1_is_greater_than_or_equal_to_INTEGER2____INTEGER1__gt_INTEGER2___INTEGER1_is_greater_than_INTEGER2____INTEGER1__le_INTEGER2___INTEGER1_is_less_than_or_equal_to_INTEGER2____INTEGER1__lt_INTEGER2___INTEGER1_is_less_than_INTEGER2____INTEGER1__ne_INTEGER2___INTEGER1_is_not_equal_to_INTEGER2 ; 0x83a8 ; "\n  INTEGER1 -eq INTEGER2   INTEGER1 is equal to INTEGER2\n  INTEGER1 -ge INTEGER2   INTEGER1 is greater than or equal to INTEGER2\n  INTEGER1 -gt INTEGER2   INTEGER1 is greater than INTEGER2\n  INTEGER1 -le INTEGER2   INTEGER1 is less than or equal to INTEGER2\n  INTEGER1 -lt INTEGER2   INTEGER1 is less than INTEGER2\n  INTEGER1 -ne INTEGER2   INTEGER1 is not equal to INTEGER2\n"
0x00002f0e      ba05000000     mov edx, 5
0x00002f13      31ff           xor edi, edi
0x00002f15      e8a6e4ffff     call sym.imp.dcgettext
0x00002f1a      4889de         mov rsi, rbx
0x00002f1d      4889c7         mov rdi, rax
0x00002f20      e84be5ffff     call sym.imp.fputs_unlocked
0x00002f25      488b1d5c8120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002f2c      488d35ed5500.  lea rsi, str.FILE1__ef_FILE2___FILE1_and_FILE2_have_the_same_device_and_inode_numbers____FILE1__nt_FILE2___FILE1_is_newer__modification_date__than_FILE2____FILE1__ot_FILE2___FILE1_is_older_than_FILE2 ; 0x8520 ; "\n  FILE1 -ef FILE2   FILE1 and FILE2 have the same device and inode numbers\n  FILE1 -nt FILE2   FILE1 is newer (modification date) than FILE2\n  FILE1 -ot FILE2   FILE1 is older than FILE2\n"
0x00002f33      ba05000000     mov edx, 5
0x00002f38      31ff           xor edi, edi
0x00002f3a      e881e4ffff     call sym.imp.dcgettext
0x00002f3f      4889de         mov rsi, rbx
0x00002f42      4889c7         mov rdi, rax
0x00002f45      e826e5ffff     call sym.imp.fputs_unlocked
0x00002f4a      488b1d378120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002f51      488d35885600.  lea rsi, str.b_FILE_____FILE_exists_and_is_block_special_____c_FILE_____FILE_exists_and_is_character_special_____d_FILE_____FILE_exists_and_is_a_directory_____e_FILE_____FILE_exists ; 0x85e0 ; "\n  -b FILE     FILE exists and is block special\n  -c FILE     FILE exists and is character special\n  -d FILE     FILE exists and is a directory\n  -e FILE     FILE exists\n"
0x00002f58      ba05000000     mov edx, 5
0x00002f5d      31ff           xor edi, edi
0x00002f5f      e85ce4ffff     call sym.imp.dcgettext
0x00002f64      4889de         mov rsi, rbx
0x00002f67      4889c7         mov rdi, rax
0x00002f6a      e801e5ffff     call sym.imp.fputs_unlocked
0x00002f6f      488b1d128120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002f76      488d35135700.  lea rsi, str.f_FILE_____FILE_exists_and_is_a_regular_file_____g_FILE_____FILE_exists_and_is_set_group_ID_____G_FILE_____FILE_exists_and_is_owned_by_the_effective_group_ID_____h_FILE_____FILE_exists_and_is_a_symbolic_link__same_as__L______k_FILE_____FILE_exists_and_has_its_sticky_bit_set ; 0x8690 ; "  -f FILE     FILE exists and is a regular file\n  -g FILE     FILE exists and is set-group-ID\n  -G FILE     FILE exists and is owned by the effective group ID\n  -h FILE     FILE exists and is a symbolic link (same as -L)\n  -k FILE     FILE exists and has its sticky bit set\n"
0x00002f7d      ba05000000     mov edx, 5
0x00002f82      31ff           xor edi, edi
0x00002f84      e837e4ffff     call sym.imp.dcgettext
0x00002f89      4889de         mov rsi, rbx
0x00002f8c      4889c7         mov rdi, rax
0x00002f8f      e8dce4ffff     call sym.imp.fputs_unlocked
0x00002f94      488b1ded8020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002f9b      488d35065800.  lea rsi, str.L_FILE_____FILE_exists_and_is_a_symbolic_link__same_as__h______N_FILE_____FILE_exists_and_has_been_modified_since_it_was_last_read_____O_FILE_____FILE_exists_and_is_owned_by_the_effective_user_ID_____p_FILE_____FILE_exists_and_is_a_named_pipe_____r_FILE_____FILE_exists_and_read_permission_is_granted_____s_FILE_____FILE_exists_and_has_a_size_greater_than_zero ; 0x87a8 ; "  -L FILE     FILE exists and is a symbolic link (same as -h)\n  -N FILE     FILE exists and has been modified since it was last read\n  -O FILE     FILE exists and is owned by the effective user ID\n  -p FILE     FILE exists and is a named pipe\n  -r FILE     FILE exists and read permission is granted\n  -s FILE     FILE exists and has a size greater than zero\n"
0x00002fa2      ba05000000     mov edx, 5
0x00002fa7      31ff           xor edi, edi
0x00002fa9      e812e4ffff     call sym.imp.dcgettext
0x00002fae      4889de         mov rsi, rbx
0x00002fb1      4889c7         mov rdi, rax
0x00002fb4      e8b7e4ffff     call sym.imp.fputs_unlocked
0x00002fb9      488b1dc88020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002fc0      488d35495900.  lea rsi, str.S_FILE_____FILE_exists_and_is_a_socket_____t_FD_______file_descriptor_FD_is_opened_on_a_terminal_____u_FILE_____FILE_exists_and_its_set_user_ID_bit_is_set_____w_FILE_____FILE_exists_and_write_permission_is_granted_____x_FILE_____FILE_exists_and_execute__or_search__permission_is_granted ; 0x8910 ; "  -S FILE     FILE exists and is a socket\n  -t FD       file descriptor FD is opened on a terminal\n  -u FILE     FILE exists and its set-user-ID bit is set\n  -w FILE     FILE exists and write permission is granted\n  -x FILE     FILE exists and execute (or search) permission is granted\n"
0x00002fc7      ba05000000     mov edx, 5
0x00002fcc      31ff           xor edi, edi
0x00002fce      e8ede3ffff     call sym.imp.dcgettext
0x00002fd3      4889de         mov rsi, rbx
0x00002fd6      4889c7         mov rdi, rax
0x00002fd9      e892e4ffff     call sym.imp.fputs_unlocked
0x00002fde      488b1da38020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002fe5      488d35445a00.  lea rsi, str.Except_for__h_and__L__all_FILE_related_tests_dereference_symbolic_links.__Beware_that_parentheses_need_to_be_escaped__e.g.__by_backslashes__for_shells.__INTEGER_may_also_be__l_STRING__which_evaluates_to_the_length_of_STRING. ; 0x8a30 ; "\nExcept for -h and -L, all FILE-related tests dereference symbolic links.\nBeware that parentheses need to be escaped (e.g., by backslashes) for shells.\nINTEGER may also be -l STRING, which evaluates to the length of STRING.\n"
0x00002fec      ba05000000     mov edx, 5
0x00002ff1      31ff           xor edi, edi
0x00002ff3      e8c8e3ffff     call sym.imp.dcgettext
0x00002ff8      4889de         mov rsi, rbx
0x00002ffb      4889c7         mov rdi, rax
0x00002ffe      e86de4ffff     call sym.imp.fputs_unlocked
0x00003003      488b1d7e8020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x0000300a      488d35075b00.  lea rsi, str.NOTE:_Binary__a_and__o_are_inherently_ambiguous.__Use__test_EXPR1____test__EXPR2__or__test_EXPR1____test_EXPR2__instead. ; 0x8b18 ; "\nNOTE: Binary -a and -o are inherently ambiguous.  Use 'test EXPR1 && test\nEXPR2' or 'test EXPR1 || test EXPR2' instead.\n"
0x00003011      ba05000000     mov edx, 5
0x00003016      31ff           xor edi, edi
0x00003018      e8a3e3ffff     call sym.imp.dcgettext
0x0000301d      4889de         mov rsi, rbx
0x00003020      4889c7         mov rdi, rax
0x00003023      e848e4ffff     call sym.imp.fputs_unlocked
0x00003028      488b1d598020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x0000302f      488d35625b00.  lea rsi, str.NOTE:___honors_the___help_and___version_options__but_test_does_not.__test_treats_each_of_those_as_it_treats_any_other_nonempty_STRING. ; 0x8b98 ; "\nNOTE: [ honors the --help and --version options, but test does not.\ntest treats each of those as it treats any other nonempty STRING.\n"
0x00003036      ba05000000     mov edx, 5
0x0000303b      31ff           xor edi, edi
0x0000303d      e87ee3ffff     call sym.imp.dcgettext
0x00003042      4889de         mov rsi, rbx
0x00003045      4889c7         mov rdi, rax
0x00003048      e823e4ffff     call sym.imp.fputs_unlocked
0x0000304d      488d35124e00.  lea rsi, str.test_and_or                ; 0x7e66 ; "test and/or ["
0x00003054      ba05000000     mov edx, 5
0x00003059      31ff           xor edi, edi
0x0000305b      e860e3ffff     call sym.imp.dcgettext
0x00003060      488d35b95b00.  lea rsi, str.NOTE:_your_shell_may_have_its_own_version_of__s__which_usually_supersedes__the_version_described_here.__Please_refer_to_your_shell_s_documentation__for_details_about_the_options_it_supports. ; 0x8c20 ; "\nNOTE: your shell may have its own version of %s, which usually supersedes\nthe version described here.  Please refer to your shell's documentation\nfor details about the options it supports.\n"
0x00003067      4889c3         mov rbx, rax
0x0000306a      ba05000000     mov edx, 5
0x0000306f      31ff           xor edi, edi
0x00003071      e84ae3ffff     call sym.imp.dcgettext
0x00003076      4889da         mov rdx, rbx
0x00003079      4889c6         mov rsi, rax
0x0000307c      bf01000000     mov edi, 1
0x00003081      31c0           xor eax, eax
0x00003083      488d1dd74d00.  lea rbx, str.test                       ; 0x7e61 ; "test"
0x0000308a      e8c1e4ffff     call sym.imp.__printf_chk
0x0000308f      488d05dc4d00.  lea rax, [0x00007e72]                   ; "["
0x00003096      488d0d164e00.  lea rcx, str.sha256sum                  ; 0x7eb3 ; "sha256sum"
0x0000309d      48c744246000.  mov qword [rsp + 0x60], 0
0x000030a6      48c744246800.  mov qword [rsp + 0x68], 0
0x000030af      4889e2         mov rdx, rsp
0x000030b2      48890424       mov qword [rsp], rax
0x000030b6      488d05b74d00.  lea rax, str.test_invocation            ; 0x7e74 ; "test invocation"
0x000030bd      48894c2430     mov qword [rsp + 0x30], rcx
0x000030c2      488d0df44d00.  lea rcx, str.sha384sum                  ; 0x7ebd ; "sha384sum"
0x000030c9      4889442408     mov qword [rsp + 8], rax
0x000030ce      488d05174e00.  lea rax, [0x00007eec]                   ; "coreutils"
0x000030d5      48894c2440     mov qword [rsp + 0x40], rcx
0x000030da      488d0de64d00.  lea rcx, str.sha512sum                  ; 0x7ec7 ; "sha512sum"
0x000030e1      4889442410     mov qword [rsp + 0x10], rax
0x000030e6      488d05974d00.  lea rax, str.Multi_call_invocation      ; 0x7e84 ; "Multi-call invocation"
0x000030ed      48894c2450     mov qword [rsp + 0x50], rcx
0x000030f2      4889442418     mov qword [rsp + 0x18], rax
0x000030f7      488d059c4d00.  lea rax, str.sha224sum                  ; 0x7e9a ; "sha224sum"
0x000030fe      4889442420     mov qword [rsp + 0x20], rax
0x00003103      488d059a4d00.  lea rax, str.sha2_utilities             ; 0x7ea4 ; "sha2 utilities"
0x0000310a      4889442428     mov qword [rsp + 0x28], rax
0x0000310f      4889442438     mov qword [rsp + 0x38], rax
0x00003114      4889442448     mov qword [rsp + 0x48], rax
0x00003119      4889442458     mov qword [rsp + 0x58], rax
0x0000311e      6690           nop
0x00003120      4883c210       add rdx, 0x10
0x00003124      488b3a         mov rdi, qword [rdx]
0x00003127      4885ff         test rdi, rdi
0x0000312a      7413           je 0x313f
0x0000312c      b905000000     mov ecx, 5
0x00003131      4889de         mov rsi, rbx
0x00003134      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003136      0f97c0         seta al
0x00003139      1c00           sbb al, 0
0x0000313b      84c0           test al, al
0x0000313d      75e1           jne 0x3120
0x0000313f      4c8b6208       mov r12, qword [rdx + 8]
0x00003143      31ff           xor edi, edi
0x00003145      ba05000000     mov edx, 5
0x0000314a      488d35804d00.  lea rsi, str.s_online_help:___s         ; 0x7ed1 ; "\n%s online help: <%s>\n"
0x00003151      4d85e4         test r12, r12
0x00003154      0f84c1000000   je 0x321b
0x0000315a      e861e2ffff     call sym.imp.dcgettext
0x0000315f      488d0d7a5b00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x8ce0 ; "https://www.gnu.org/software/coreutils/"
0x00003166      488d157b4d00.  lea rdx, str.GNU_coreutils              ; 0x7ee8 ; "GNU coreutils"
0x0000316d      4889c6         mov rsi, rax
0x00003170      bf01000000     mov edi, 1
0x00003175      31c0           xor eax, eax
0x00003177      e8d4e3ffff     call sym.imp.__printf_chk
0x0000317c      31f6           xor esi, esi
0x0000317e      bf05000000     mov edi, 5
0x00003183      e8b8e3ffff     call sym.imp.setlocale
0x00003188      4885c0         test rax, rax
0x0000318b      741c           je 0x31a9
0x0000318d      488d35624d00.  lea rsi, [0x00007ef6]                   ; "en_"
0x00003194      ba03000000     mov edx, 3
0x00003199      4889c7         mov rdi, rax
0x0000319c      e8afe1ffff     call sym.imp.strncmp
0x000031a1      85c0           test eax, eax
0x000031a3      0f8507010000   jne 0x32b0
0x000031a9      488d354a4d00.  lea rsi, str.Full_documentation___s_s   ; 0x7efa ; "Full documentation <%s%s>\n"
0x000031b0      31ff           xor edi, edi
0x000031b2      ba05000000     mov edx, 5
0x000031b7      e804e2ffff     call sym.imp.dcgettext
0x000031bc      488d0d9e4c00.  lea rcx, str.test                       ; 0x7e61 ; "test"
0x000031c3      488d15165b00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x8ce0 ; "https://www.gnu.org/software/coreutils/"
0x000031ca      4889c6         mov rsi, rax
0x000031cd      bf01000000     mov edi, 1
0x000031d2      31c0           xor eax, eax
0x000031d4      e877e3ffff     call sym.imp.__printf_chk
0x000031d9      4939dc         cmp r12, rbx
0x000031dc      488d0d044d00.  lea rcx, [0x00007ee7]
0x000031e3      488d1da44c00.  lea rbx, [0x00007e8e]                   ; " invocation"
0x000031ea      480f45d9       cmovne rbx, rcx
0x000031ee      488d355b5b00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x8d50 ; "or available locally via: info '(coreutils) %s%s'\n"
0x000031f5      31ff           xor edi, edi
0x000031f7      ba05000000     mov edx, 5
0x000031fc      e8bfe1ffff     call sym.imp.dcgettext
0x00003201      4889d9         mov rcx, rbx
0x00003204      4889c6         mov rsi, rax
0x00003207      4c89e2         mov rdx, r12
0x0000320a      bf01000000     mov edi, 1
0x0000320f      31c0           xor eax, eax
0x00003211      e83ae3ffff     call sym.imp.__printf_chk
0x00003216      e9dbfbffff     jmp 0x2df6
0x0000321b      e8a0e1ffff     call sym.imp.dcgettext
0x00003220      488d0db95a00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x8ce0 ; "https://www.gnu.org/software/coreutils/"
0x00003227      488d15ba4c00.  lea rdx, str.GNU_coreutils              ; 0x7ee8 ; "GNU coreutils"
0x0000322e      4889c6         mov rsi, rax
0x00003231      bf01000000     mov edi, 1
0x00003236      31c0           xor eax, eax
0x00003238      e813e3ffff     call sym.imp.__printf_chk
0x0000323d      31f6           xor esi, esi
0x0000323f      bf05000000     mov edi, 5
0x00003244      e8f7e2ffff     call sym.imp.setlocale
0x00003249      4885c0         test rax, rax
0x0000324c      7418           je 0x3266
0x0000324e      488d35a14c00.  lea rsi, [0x00007ef6]                   ; "en_"
0x00003255      ba03000000     mov edx, 3
0x0000325a      4889c7         mov rdi, rax
0x0000325d      e8eee0ffff     call sym.imp.strncmp
0x00003262      85c0           test eax, eax
0x00003264      7543           jne 0x32a9
0x00003266      488d358d4c00.  lea rsi, str.Full_documentation___s_s   ; 0x7efa ; "Full documentation <%s%s>\n"
0x0000326d      ba05000000     mov edx, 5
0x00003272      31ff           xor edi, edi
0x00003274      4c8d25e64b00.  lea r12, str.test                       ; 0x7e61 ; "test"
0x0000327b      488d1d0c4c00.  lea rbx, [0x00007e8e]                   ; " invocation"
0x00003282      e839e1ffff     call sym.imp.dcgettext
0x00003287      488d0dd34b00.  lea rcx, str.test                       ; 0x7e61 ; "test"
0x0000328e      488d154b5a00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x8ce0 ; "https://www.gnu.org/software/coreutils/"
0x00003295      4889c6         mov rsi, rax
0x00003298      bf01000000     mov edi, 1
0x0000329d      31c0           xor eax, eax
0x0000329f      e8ace2ffff     call sym.imp.__printf_chk
0x000032a4      e945ffffff     jmp 0x31ee
0x000032a9      4c8d25b14b00.  lea r12, str.test                       ; 0x7e61 ; "test"
0x000032b0      4c8b2dd17d20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x000032b7      488d354a5a00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x8d08 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000032be      31ff           xor edi, edi
0x000032c0      ba05000000     mov edx, 5
0x000032c5      e8f6e0ffff     call sym.imp.dcgettext
0x000032ca      4c89ee         mov rsi, r13
0x000032cd      4889c7         mov rdi, rax
0x000032d0      e89be1ffff     call sym.imp.fputs_unlocked
0x000032d5      e9cffeffff     jmp 0x31a9
0x000032da      660f1f440000   nop word [rax + rax]
;-- close_stdout_set_file_name:
0x000032e0      48893de17d20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20b0c8:8]=0
0x000032e7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x000032e8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x000032f0      40883dc97d20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20b0c0:1]=0
0x000032f7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x000032f8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00003300      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00003301      53             push rbx
0x00003302      4883ec08       sub rsp, 8
0x00003306      488b3d7b7d20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x0000330d      e83e270000     call sym.close_stream
0x00003312      85c0           test eax, eax
0x00003314      7416           je 0x332c
0x00003316      e815e0ffff     call sym.imp.__errno_location
0x0000331b      803d9e7d2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20b0c0:1]=0
0x00003322      4889c3         mov rbx, rax
0x00003325      741c           je 0x3343
0x00003327      833820         cmp dword [rax], 0x20
0x0000332a      7517           jne 0x3343
0x0000332c      488b3d6d7d20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0a0:8]=0
0x00003333      e818270000     call sym.close_stream
0x00003338      85c0           test eax, eax
0x0000333a      7546           jne 0x3382
0x0000333c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00003340      5b             pop rbx
0x00003341      5d             pop rbp
0x00003342      c3             ret
0x00003343      488d35395a00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x8d83 ; "write error"
0x0000334a      31ff           xor edi, edi
0x0000334c      ba05000000     mov edx, 5
0x00003351      e86ae0ffff     call sym.imp.dcgettext
0x00003356      488b3d6b7d20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20b0c8:8]=0
0x0000335d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003360      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003363      7428           je 0x338d
0x00003365      e8a61b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000336a      8b33           mov esi, dword [rbx]
0x0000336c      488d151c5a00.  lea rdx, str.s:__s                      ; 0x8d8f ; "%s: %s"
0x00003373      4889c1         mov rcx, rax
0x00003376      4989e8         mov r8, rbp
0x00003379      31ff           xor edi, edi
0x0000337b      31c0           xor eax, eax
0x0000337d      e8dee1ffff     call sym.imp.error
0x00003382      8b3d887c2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20b010:4]=1
0x00003388      e8d3dfffff     call sym.imp._exit
0x0000338d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000338f      488d15fd5900.  lea rdx, [0x00008d93]                   ; "%s"
0x00003396      4889c1         mov rcx, rax
0x00003399      31ff           xor edi, edi
0x0000339b      31c0           xor eax, eax
0x0000339d      e8bee1ffff     call sym.imp.error
0x000033a2      ebde           jmp 0x3382
0x000033a4      662e0f1f8400.  nop word cs:[rax + rax]
0x000033ae      6690           nop
;-- umaxtostr:
0x000033b0      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:37
0x000033b4      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x000033b8      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x000033c2      660f1f440000   nop word [rax + rax]
0x000033c8      4889f8         mov rax, rdi
0x000033cb      4883e901       sub rcx, 1
0x000033cf      48f7e6         mul rsi
0x000033d2      48c1ea03       shr rdx, 3
0x000033d6      488d0492       lea rax, [rdx + rdx*4]
0x000033da      4801c0         add rax, rax
0x000033dd      4829c7         sub rdi, rax
0x000033e0      83c730         add edi, 0x30
0x000033e3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x000033e6      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x000033e9      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x000033ec      75da           jne 0x33c8
0x000033ee      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x000033f1      c3             ret
0x000033f2      662e0f1f8400.  nop word cs:[rax + rax]
0x000033fc      0f1f4000       nop dword [rax]
;-- set_program_name:
0x00003400      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00003403      53             push rbx
0x00003404      7477           je 0x347d                               ; ../coreutils-8.31/lib/progname.c:51
0x00003406      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000340b      4889fb         mov rbx, rdi
0x0000340e      e80de0ffff     call sym.imp.strrchr
0x00003413      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00003416      7455           je 0x346d
0x00003418      4c8d4001       lea r8, [rax + 1]
0x0000341c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000341f      4829da         sub rdx, rbx
0x00003422      4883fa06       cmp rdx, 6
0x00003426      7e45           jle 0x346d
0x00003428      488d70fa       lea rsi, [rax - 6]
0x0000342c      488d3d9d5900.  lea rdi, str..libs                      ; 0x8dd0 ; "/.libs/"
0x00003433      b907000000     mov ecx, 7
0x00003438      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000343a      0f97c2         seta dl
0x0000343d      80da00         sbb dl, 0
0x00003440      84d2           test dl, dl
0x00003442      7529           jne 0x346d
0x00003444      488d3d8d5900.  lea rdi, [0x00008dd8]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000344b      b903000000     mov ecx, 3
0x00003450      4c89c6         mov rsi, r8
0x00003453      4c89c3         mov rbx, r8
0x00003456      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003458      0f97c2         seta dl
0x0000345b      80da00         sbb dl, 0
0x0000345e      84d2           test dl, dl
0x00003460      750b           jne 0x346d
0x00003462      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00003466      48891d137c20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20b080:8]=0
0x0000346d      48891d5c7c20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20b0d0:8]=0
0x00003474      48891d157c20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20b090:8]=0
0x0000347b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000347c      c3             ret
0x0000347d      488b0d1c7c20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0a0:8]=0
0x00003484      488d3d0d5900.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x8d98 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000348b      ba37000000     mov edx, 0x37                           ; '7'
0x00003490      be01000000     mov esi, 1
0x00003495      e816e1ffff     call sym.imp.fwrite
0x0000349a      e881deffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000349f      90             nop
;-- gettext_quote.part.1:
0x000034a0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000034a1      53             push rbx
0x000034a2      4889fd         mov rbp, rdi
0x000034a5      89f3           mov ebx, esi
0x000034a7      4883ec08       sub rsp, 8
0x000034ab      e880260000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000034b0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000034b3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000034b6      80fa55         cmp dl, 0x55
0x000034b9      7475           je 0x3530
0x000034bb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000034be      7420           je 0x34e0
0x000034c0      488d05245900.  lea rax, str.l______l                   ; 0x8deb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u8a00\uffb5\ue3ff\uffa7\ub8ff\uffb7\uc4ff\uffb5\ub4ff\uffb3\u10ff\uffb4\u65ff\uffb4\uaaff\uffb4\ue4ff\uffb4\ue4ff\uffb4\ue4ff\uffb4\u34ff\uffab\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u74ff\uffab\u7cff\uffaa\u3cff\uffaa\u04ff\uffac\uf4ff\uffab\ue4ff\uffab\ud4ff\uffab\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\uc4ff\uffab\ub4ff\uffab\ub4ff\uffab\u84ff\uffab\ub4ff\uffab\u5cff\uffab\ub4ff\uffab\u17ff\uffaa\ub4ff\uffab\ub4ff\uffab\ub4ff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\ub4ff\uffab\ub4ff\uffab\ub4ff\uffab\ub4ff\uffab\ue7ff\uffa9\u1cff\uffac\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\ub4ff\uffab\u8cff\uffaa\u5cff\uffab\ub4ff\uffab\u5cff\uffab\ub4ff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u17ff\uffa9\ub4ff\uffab\u17ff\uffa9\u84ff\uffab\u08ff\uffab\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\U010003aa\u48ff\uffac\u30ff\uffac\ue0ff\uffaa\u20ff\uffac\uc8ff\uffaa\u08ff\uffac\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\uf0ff\uffab\U010003ab\U010003ab\uc0ff\uffab\U010003ab\ua8ff\uffab\U010003ab\u18ff\uffa8\U010003ab\U010003ab\U010003ab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\U010003ab\U010003ab\U010003ab\U010003ab\ue8ff\uffa7\u18ff\uffaa\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\U010003ab\ua8ff\uffaa\ua8ff\uffab\U010003ab\ua8ff\uffab\U010003ab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\u18ff\uffa7\U010003ab\u18ff\uffa7\uc0ff\uffab\xff"
0x000034c7      488d151f5900.  lea rdx, [0x00008ded]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u8a00\uffb5\ue3ff\uffa7\ub8ff\uffb7\uc4ff\uffb5\ub4ff\uffb3\u10ff\uffb4\u65ff\uffb4\uaaff\uffb4\ue4ff\uffb4\ue4ff\uffb4\ue4ff\uffb4"
0x000034ce      83fb09         cmp ebx, 9
0x000034d1      480f45c2       cmovne rax, rdx
0x000034d5      4883c408       add rsp, 8
0x000034d9      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x000034da      5d             pop rbp
0x000034db      c3             ret
0x000034dc      0f1f4000       nop dword [rax]
0x000034e0      0fb65001       movzx edx, byte [rax + 1]
0x000034e4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000034e7      80fa42         cmp dl, 0x42
0x000034ea      75d4           jne 0x34c0
0x000034ec      80780231       cmp byte [rax + 2], 0x31
0x000034f0      75ce           jne 0x34c0
0x000034f2      80780338       cmp byte [rax + 3], 0x38
0x000034f6      75c8           jne 0x34c0
0x000034f8      80780430       cmp byte [rax + 4], 0x30
0x000034fc      75c2           jne 0x34c0
0x000034fe      80780533       cmp byte [rax + 5], 0x33
0x00003502      75bc           jne 0x34c0
0x00003504      80780630       cmp byte [rax + 6], 0x30
0x00003508      75b6           jne 0x34c0
0x0000350a      80780700       cmp byte [rax + 7], 0
0x0000350e      75b0           jne 0x34c0
0x00003510      807d0060       cmp byte [rbp], 0x60
0x00003514      488d05c95800.  lea rax, [0x00008de4]
0x0000351b      488d15c65800.  lea rdx, [0x00008de8]
0x00003522      480f45c2       cmovne rax, rdx
0x00003526      4883c408       add rsp, 8
0x0000352a      5b             pop rbx
0x0000352b      5d             pop rbp
0x0000352c      c3             ret
0x0000352d      0f1f00         nop dword [rax]
0x00003530      0fb65001       movzx edx, byte [rax + 1]
0x00003534      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003537      80fa54         cmp dl, 0x54
0x0000353a      7584           jne 0x34c0
0x0000353c      0fb65002       movzx edx, byte [rax + 2]
0x00003540      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003543      80fa46         cmp dl, 0x46
0x00003546      0f8574ffffff   jne 0x34c0
0x0000354c      8078032d       cmp byte [rax + 3], 0x2d
0x00003550      0f856affffff   jne 0x34c0
0x00003556      80780438       cmp byte [rax + 4], 0x38
0x0000355a      0f8560ffffff   jne 0x34c0
0x00003560      80780500       cmp byte [rax + 5], 0
0x00003564      0f8556ffffff   jne 0x34c0
0x0000356a      807d0060       cmp byte [rbp], 0x60
0x0000356e      488d05675800.  lea rax, [0x00008ddc]                   ; "\u2018"
0x00003575      488d15645800.  lea rdx, [0x00008de0]                   ; "\u2019"
0x0000357c      480f45c2       cmovne rax, rdx
0x00003580      4883c408       add rsp, 8
0x00003584      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00003585      5d             pop rbp
0x00003586      c3             ret
0x00003587      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00003590      4157           push r15
0x00003592      4156           push r14
0x00003594      4589c7         mov r15d, r8d
0x00003597      4155           push r13
0x00003599      4154           push r12
0x0000359b      4989fe         mov r14, rdi
0x0000359e      55             push rbp
0x0000359f      53             push rbx
0x000035a0      4489cb         mov ebx, r9d
0x000035a3      4989f5         mov r13, rsi
0x000035a6      4889cd         mov rbp, rcx
0x000035a9      83e302         and ebx, 2
0x000035ac      4881ecb80000.  sub rsp, 0xb8
0x000035b3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x000035bb      4889542410     mov qword [rsp + 0x10], rdx
0x000035c0      4489442408     mov dword [rsp + 8], r8d
0x000035c5      44894c2478     mov dword [rsp + 0x78], r9d
0x000035ca      4889442420     mov qword [rsp + 0x20], rax
0x000035cf      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x000035d7      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x000035dc      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x000035e4      4889442460     mov qword [rsp + 0x60], rax
0x000035e9      64488b042528.  mov rax, qword fs:[0x28]
0x000035f2      48898424a800.  mov qword [rsp + 0xa8], rax
0x000035fa      31c0           xor eax, eax
0x000035fc      e8cfddffff     call sym.imp.__ctype_get_mb_cur_max
0x00003601      4183ff0a       cmp r15d, 0xa
0x00003605      4889442458     mov qword [rsp + 0x58], rax
0x0000360a      0f87af110000   ja 0x47bf
0x00003610      488d0d295800.  lea rcx, [0x00008e40]
0x00003617      4489fa         mov edx, r15d
0x0000361a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000361e      4801c8         add rax, rcx
0x00003621      ffe0           jmp rax
0x00003623      c644240e01     mov byte [rsp + 0xe], 1
0x00003628      c644247c00     mov byte [rsp + 0x7c], 0
0x0000362d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00003630      48c744245000.  mov qword [rsp + 0x50], 0
0x00003639      c644240f01     mov byte [rsp + 0xf], 1
0x0000363e      c644240d00     mov byte [rsp + 0xd], 0
0x00003643      488d05a35700.  lea rax, [0x00008ded]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u8a00\uffb5\ue3ff\uffa7\ub8ff\uffb7\uc4ff\uffb5\ub4ff\uffb3\u10ff\uffb4\u65ff\uffb4\uaaff\uffb4\ue4ff\uffb4\ue4ff\uffb4\ue4ff\uffb4"
0x0000364a      48c744241801.  mov qword [rsp + 0x18], 1
0x00003653      4531ff         xor r15d, r15d
0x00003656      c74424080200.  mov dword [rsp + 8], 2
0x0000365e      4889442448     mov qword [rsp + 0x48], rax
0x00003663      4531db         xor r11d, r11d
0x00003666      4889e8         mov rax, rbp
0x00003669      4589e0         mov r8d, r12d
0x0000366c      4c89dd         mov rbp, r11
0x0000366f      4989c3         mov r11, rax
0x00003672      660f1f440000   nop word [rax + rax]
0x00003678      4939eb         cmp r11, rbp
0x0000367b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000367f      4983fbff       cmp r11, 0xffffffffffffffff
0x00003683      750d           jne 0x3692
0x00003685      488b442410     mov rax, qword [rsp + 0x10]
0x0000368a      803c2800       cmp byte [rax + rbp], 0
0x0000368e      410f95c4       setne r12b
0x00003692      4584e4         test r12b, r12b
0x00003695      0f8455060000   je 0x3cf0
0x0000369b      837c240802     cmp dword [rsp + 8], 2
0x000036a0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000036a5      4c8d0c2f       lea r9, [rdi + rbp]
0x000036a9      0f95c0         setne al
0x000036ac      2244240d       and al, byte [rsp + 0xd]
0x000036b0      4189c2         mov r10d, eax
0x000036b3      0f84a7000000   je 0x3760
0x000036b9      488b442418     mov rax, qword [rsp + 0x18]
0x000036be      4885c0         test rax, rax
0x000036c1      0f8429040000   je 0x3af0
0x000036c7      4983fbff       cmp r11, 0xffffffffffffffff
0x000036cb      488d5c0500     lea rbx, [rbp + rax]
0x000036d0      752e           jne 0x3700
0x000036d2      4883f801       cmp rax, 1
0x000036d6      7628           jbe 0x3700
0x000036d8      4488442438     mov byte [rsp + 0x38], r8b
0x000036dd      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x000036e2      4c894c2428     mov qword [rsp + 0x28], r9
0x000036e7      e8f4dcffff     call sym.imp.strlen
0x000036ec      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000036f2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x000036f8      4989c3         mov r11, rax
0x000036fb      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003700      4c39db         cmp rbx, r11
0x00003703      4488542428     mov byte [rsp + 0x28], r10b
0x00003708      0f87b2050000   ja 0x3cc0
0x0000370e      488b542418     mov rdx, qword [rsp + 0x18]
0x00003713      488b742448     mov rsi, qword [rsp + 0x48]
0x00003718      4c89cf         mov rdi, r9
0x0000371b      4c895c2440     mov qword [rsp + 0x40], r11
0x00003720      4488442438     mov byte [rsp + 0x38], r8b
0x00003725      4c894c2430     mov qword [rsp + 0x30], r9
0x0000372a      e831ddffff     call sym.imp.memcmp
0x0000372f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00003731      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003736      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000373c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00003741      0f8579050000   jne 0x3cc0
0x00003747      807c240f00     cmp byte [rsp + 0xf], 0
0x0000374c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003752      0f857d0f0000   jne 0x46d5
0x00003758      0f1f84000000.  nop dword [rax + rax]
0x00003760      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00003764      80fb7e         cmp bl, 0x7e
0x00003767      0f871b030000   ja 0x3a88
0x0000376d      488d0df85600.  lea rcx, [0x00008e6c]
0x00003774      0fb6d3         movzx edx, bl
0x00003777      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000377b      4801c8         add rax, rcx
0x0000377e      ffe0           jmp rax
0x00003780      4531d2         xor r10d, r10d
0x00003783      4983fb01       cmp r11, 1
0x00003787      0f95c0         setne al
0x0000378a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000378e      750c           jne 0x379c
0x00003790      488b442410     mov rax, qword [rsp + 0x10]
0x00003795      80780100       cmp byte [rax + 1], 0
0x00003799      0f95c0         setne al
0x0000379c      837c240802     cmp dword [rsp + 8], 2
0x000037a1      0f94c2         sete dl
0x000037a4      84c0           test al, al
0x000037a6      0f844c020000   je 0x39f8
0x000037ac      4531e4         xor r12d, r12d
0x000037af      31c0           xor eax, eax
0x000037b1      0f1f80000000.  nop dword [rax]
0x000037b8      807c240d01     cmp byte [rsp + 0xd], 1
0x000037bd      0f850f010000   jne 0x38d2
0x000037c3      84d2           test dl, dl
0x000037c5      0f8507010000   jne 0x38d2
0x000037cb      488b742420     mov rsi, qword [rsp + 0x20]
0x000037d0      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x000037d3      7414           je 0x37e9
0x000037d5      89da           mov edx, ebx
0x000037d7      c0ea05         shr dl, 5
0x000037da      0fb6d2         movzx edx, dl
0x000037dd      8b1496         mov edx, dword [rsi + rdx*4]
0x000037e0      0fa3da         bt edx, ebx
0x000037e3      0f824a010000   jb 0x3933
0x000037e9      4584d2         test r10b, r10b
0x000037ec      0f8541010000   jne 0x3933
0x000037f2      83f001         xor eax, 1
0x000037f5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x000037f9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x000037fc      84c0           test al, al
0x000037fe      7420           je 0x3820                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003800      4d39fd         cmp r13, r15
0x00003803      7605           jbe 0x380a
0x00003805      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000380a      498d4701       lea rax, [r15 + 1]
0x0000380e      4939c5         cmp r13, rax
0x00003811      7606           jbe 0x3819
0x00003813      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003819      4983c702       add r15, 2
0x0000381d      4531c0         xor r8d, r8d
0x00003820      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003823      7304           jae 0x3829                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003825      43881c3e       mov byte [r14 + r15], bl
0x00003829      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000382e      4983c701       add r15, 1
0x00003832      b800000000     mov eax, 0
0x00003837      4584e4         test r12b, r12b
0x0000383a      0f44f8         cmove edi, eax
0x0000383d      40887c240e     mov byte [rsp + 0xe], dil
0x00003842      e931feffff     jmp 0x3678
0x00003847      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00003850      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00003853      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00003857      83f802         cmp eax, 2
0x0000385a      0f84b8050000   je 0x3e18
0x00003860      83f805         cmp eax, 5
0x00003863      0f846f050000   je 0x3dd8
0x00003869      83f802         cmp eax, 2
0x0000386c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003871      0f94c2         sete dl
0x00003874      4531e4         xor r12d, r12d
0x00003877      31c0           xor eax, eax
0x00003879      e93affffff     jmp 0x37b8
0x0000387e      6690           nop
0x00003880      4531d2         xor r10d, r10d
0x00003883      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00003888      0f8402050000   je 0x3d90
0x0000388e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00003893      31d2           xor edx, edx
0x00003895      31c0           xor eax, eax
0x00003897      bb27000000     mov ebx, 0x27                           ; '''
0x0000389c      e917ffffff     jmp 0x37b8
0x000038a1      0f1f80000000.  nop dword [rax]
0x000038a8      ba09000000     mov edx, 9
0x000038ad      bb74000000     mov ebx, 0x74                           ; 't'
0x000038b2      837c240802     cmp dword [rsp + 8], 2
0x000038b7      0f94c0         sete al
0x000038ba      2244240f       and al, byte [rsp + 0xf]
0x000038be      0f854a010000   jne 0x3a0e
0x000038c4      807c240d00     cmp byte [rsp + 0xd], 0
0x000038c9      7565           jne 0x3930
0x000038cb      89d3           mov ebx, edx
0x000038cd      4531e4         xor r12d, r12d
0x000038d0      31c0           xor eax, eax
0x000038d2      807c240f00     cmp byte [rsp + 0xf], 0
0x000038d7      0f85eefeffff   jne 0x37cb
0x000038dd      e907ffffff     jmp 0x37e9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x000038e2      660f1f440000   nop word [rax + rax]
0x000038e8      ba08000000     mov edx, 8
0x000038ed      bb62000000     mov ebx, 0x62                           ; 'b'
0x000038f2      ebd0           jmp 0x38c4
0x000038f4      0f1f4000       nop dword [rax]
0x000038f8      837c240802     cmp dword [rsp + 8], 2
0x000038fd      0f84cd030000   je 0x3cd0
0x00003903      807c240d00     cmp byte [rsp + 0xd], 0
0x00003908      0f8412020000   je 0x3b20
0x0000390e      807c240f00     cmp byte [rsp + 0xf], 0
0x00003913      0f8407020000   je 0x3b20
0x00003919      48837c241800   cmp qword [rsp + 0x18], 0
0x0000391f      0f85b6030000   jne 0x3cdb
0x00003925      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000392a      660f1f440000   nop word [rax + rax]
0x00003930      4531e4         xor r12d, r12d
0x00003933      837c240802     cmp dword [rsp + 8], 2
0x00003938      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000393b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003940      89d0           mov eax, edx
0x00003942      0f8550080000   jne 0x4198
0x00003948      4489c0         mov eax, r8d
0x0000394b      83f001         xor eax, 1
0x0000394e      20d0           and al, dl
0x00003950      742f           je 0x3981
0x00003952      4d39fd         cmp r13, r15
0x00003955      7605           jbe 0x395c
0x00003957      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000395c      498d5701       lea rdx, [r15 + 1]
0x00003960      4939d5         cmp r13, rdx
0x00003963      7606           jbe 0x396b
0x00003965      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000396b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000396f      4939d5         cmp r13, rdx
0x00003972      7606           jbe 0x397a
0x00003974      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000397a      4983c703       add r15, 3
0x0000397e      4189c0         mov r8d, eax
0x00003981      4d39fd         cmp r13, r15
0x00003984      7605           jbe 0x398b
0x00003986      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000398b      4983c701       add r15, 1
0x0000398f      4883c501       add rbp, 1
0x00003993      e988feffff     jmp 0x3820
0x00003998      0f1f84000000.  nop dword [rax + rax]
0x000039a0      807c240d00     cmp byte [rsp + 0xd], 0
0x000039a5      0f85c8010000   jne 0x3b73
0x000039ab      31d2           xor edx, edx
0x000039ad      f644247801     test byte [rsp + 0x78], 1
0x000039b2      0f8413ffffff   je 0x38cb
0x000039b8      4883c501       add rbp, 1
0x000039bc      e9b7fcffff     jmp 0x3678
0x000039c1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x000039c8      837c240802     cmp dword [rsp + 8], 2
0x000039cd      0f94c2         sete dl
0x000039d0      31c0           xor eax, eax
0x000039d2      e9e1fdffff     jmp 0x37b8
0x000039d7      660f1f840000.  nop word [rax + rax]
0x000039e0      ba07000000     mov edx, 7
0x000039e5      bb61000000     mov ebx, 0x61                           ; 'a'
0x000039ea      e9d5feffff     jmp 0x38c4
0x000039ef      90             nop
0x000039f0      837c240802     cmp dword [rsp + 8], 2
0x000039f5      0f94c2         sete dl
0x000039f8      4885ed         test rbp, rbp
0x000039fb      0f85abfdffff   jne 0x37ac
0x00003a01      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003a06      20d0           and al, dl
0x00003a08      0f84aafdffff   je 0x37b8
0x00003a0e      4c89dd         mov rbp, r11
0x00003a11      c74424080200.  mov dword [rsp + 8], 2
0x00003a19      e9fb060000     jmp 0x4119
0x00003a1e      6690           nop
0x00003a20      837c240802     cmp dword [rsp + 8], 2
0x00003a25      0f94c2         sete dl
0x00003a28      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00003a2b      ebd4           jmp 0x3a01
0x00003a2d      0f1f00         nop dword [rax]
0x00003a30      837c240802     cmp dword [rsp + 8], 2
0x00003a35      bb20000000     mov ebx, 0x20                           ; "@"
0x00003a3a      0f94c2         sete dl
0x00003a3d      ebc2           jmp 0x3a01
0x00003a3f      90             nop
0x00003a40      ba0d000000     mov edx, 0xd
0x00003a45      bb72000000     mov ebx, 0x72                           ; 'r'
0x00003a4a      e963feffff     jmp 0x38b2
0x00003a4f      90             nop
0x00003a50      ba0c000000     mov edx, 0xc
0x00003a55      bb66000000     mov ebx, 0x66                           ; 'f'
0x00003a5a      e965feffff     jmp 0x38c4
0x00003a5f      90             nop
0x00003a60      ba0b000000     mov edx, 0xb
0x00003a65      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003a6a      e955feffff     jmp 0x38c4
0x00003a6f      90             nop
0x00003a70      ba0a000000     mov edx, 0xa
0x00003a75      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00003a7a      e933feffff     jmp 0x38b2
0x00003a7f      90             nop
0x00003a80      4531d2         xor r10d, r10d
0x00003a83      0f1f440000     nop dword [rax + rax]
0x00003a88      48837c245801   cmp qword [rsp + 0x58], 1
0x00003a8e      0f85a4030000   jne 0x3e38
0x00003a94      4c895c2438     mov qword [rsp + 0x38], r11
0x00003a99      4488442430     mov byte [rsp + 0x30], r8b
0x00003a9e      4488542428     mov byte [rsp + 0x28], r10b
0x00003aa3      e848dbffff     call sym.imp.__ctype_b_loc
0x00003aa8      488b08         mov rcx, qword [rax]
0x00003aab      0fb6d3         movzx edx, bl
0x00003aae      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003ab4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00003aba      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00003abf      bf01000000     mov edi, 1
0x00003ac4      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003ac8      66250040       and ax, 0x4000
0x00003acc      410f95c4       setne r12b
0x00003ad0      0f94c0         sete al
0x00003ad3      2244240d       and al, byte [rsp + 0xd]
0x00003ad7      84c0           test al, al
0x00003ad9      0f8592090000   jne 0x4471
0x00003adf      837c240802     cmp dword [rsp + 8], 2
0x00003ae4      0f94c2         sete dl
0x00003ae7      e9ccfcffff     jmp 0x37b8
0x00003aec      0f1f4000       nop dword [rax]
0x00003af0      410fb619       movzx ebx, byte [r9]
0x00003af4      80fb7e         cmp bl, 0x7e
0x00003af7      7787           ja 0x3a80
0x00003af9      488d0d685500.  lea rcx, [0x00009068]
0x00003b00      0fb6d3         movzx edx, bl
0x00003b03      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003b07      4801c8         add rax, rcx
0x00003b0a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00003b0c      0f1f4000       nop dword [rax]
0x00003b10      4531d2         xor r10d, r10d
0x00003b13      807c240d00     cmp byte [rsp + 0xd], 0
0x00003b18      0f85f0fdffff   jne 0x390e
0x00003b1e      6690           nop
0x00003b20      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003b25      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003b2a      e995fdffff     jmp 0x38c4
0x00003b2f      90             nop
0x00003b30      ba0c000000     mov edx, 0xc
0x00003b35      4531d2         xor r10d, r10d
0x00003b38      bb66000000     mov ebx, 0x66                           ; 'f'
0x00003b3d      e982fdffff     jmp 0x38c4
0x00003b42      660f1f440000   nop word [rax + rax]
0x00003b48      ba0a000000     mov edx, 0xa
0x00003b4d      4531d2         xor r10d, r10d
0x00003b50      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003b55      e958fdffff     jmp 0x38b2
0x00003b5a      660f1f440000   nop word [rax + rax]
0x00003b60      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003b65      e9c6fdffff     jmp 0x3930
0x00003b6a      660f1f440000   nop word [rax + rax]
0x00003b70      4531d2         xor r10d, r10d
0x00003b73      837c240802     cmp dword [rsp + 8], 2
0x00003b78      0f94c2         sete dl
0x00003b7b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003b80      0f85940b0000   jne 0x471a
0x00003b86      4489c0         mov eax, r8d
0x00003b89      4c89f9         mov rcx, r15
0x00003b8c      83f001         xor eax, 1
0x00003b8f      20d0           and al, dl
0x00003b91      742d           je 0x3bc0
0x00003b93      4d39fd         cmp r13, r15
0x00003b96      7605           jbe 0x3b9d
0x00003b98      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003b9d      498d4f01       lea rcx, [r15 + 1]
0x00003ba1      4939cd         cmp r13, rcx
0x00003ba4      7606           jbe 0x3bac
0x00003ba6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003bac      498d4f02       lea rcx, [r15 + 2]
0x00003bb0      4939cd         cmp r13, rcx
0x00003bb3      0f8730060000   ja 0x41e9
0x00003bb9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00003bbd      4189c0         mov r8d, eax
0x00003bc0      4939cd         cmp r13, rcx
0x00003bc3      7605           jbe 0x3bca
0x00003bc5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003bca      837c240802     cmp dword [rsp + 8], 2
0x00003bcf      4c8d7901       lea r15, [rcx + 1]
0x00003bd3      0f8400060000   je 0x41d9
0x00003bd9      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003bdd      4c39d8         cmp rax, r11
0x00003be0      7319           jae 0x3bfb                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003be2      488b442410     mov rax, qword [rsp + 0x10]
0x00003be7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00003bec      88442428       mov byte [rsp + 0x28], al
0x00003bf0      83e830         sub eax, 0x30
0x00003bf3      3c09           cmp al, 9
0x00003bf5      0f862e080000   jbe 0x4429
0x00003bfb      4489e0         mov eax, r12d
0x00003bfe      bb30000000     mov ebx, 0x30                           ; '0'
0x00003c03      4531e4         xor r12d, r12d
0x00003c06      e9adfbffff     jmp 0x37b8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00003c0b      0f1f440000     nop dword [rax + rax]
0x00003c10      837c240802     cmp dword [rsp + 8], 2
0x00003c15      4589d4         mov r12d, r10d
0x00003c18      0f94c2         sete dl
0x00003c1b      4531d2         xor r10d, r10d
0x00003c1e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003c20      e993fbffff     jmp 0x37b8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003c25      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003c28      837c240802     cmp dword [rsp + 8], 2
0x00003c2d      0f94c2         sete dl
0x00003c30      4531d2         xor r10d, r10d
0x00003c33      e9c0fdffff     jmp 0x39f8
0x00003c38      0f1f84000000.  nop dword [rax + rax]
0x00003c40      837c240802     cmp dword [rsp + 8], 2
0x00003c45      0f94c2         sete dl
0x00003c48      4531d2         xor r10d, r10d
0x00003c4b      4531e4         xor r12d, r12d
0x00003c4e      e9aefdffff     jmp 0x3a01
0x00003c53      0f1f440000     nop dword [rax + rax]
0x00003c58      837c240802     cmp dword [rsp + 8], 2
0x00003c5d      4589d4         mov r12d, r10d
0x00003c60      bb20000000     mov ebx, 0x20                           ; "@"
0x00003c65      0f94c2         sete dl
0x00003c68      4531d2         xor r10d, r10d
0x00003c6b      e991fdffff     jmp 0x3a01
0x00003c70      ba0d000000     mov edx, 0xd
0x00003c75      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003c78      bb72000000     mov ebx, 0x72                           ; 'r'
0x00003c7d      e930fcffff     jmp 0x38b2
0x00003c82      660f1f440000   nop word [rax + rax]
0x00003c88      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003c8d      e99efcffff     jmp 0x3930
0x00003c92      660f1f440000   nop word [rax + rax]
0x00003c98      ba09000000     mov edx, 9
0x00003c9d      4531d2         xor r10d, r10d
0x00003ca0      bb74000000     mov ebx, 0x74                           ; 't'
0x00003ca5      e908fcffff     jmp 0x38b2
0x00003caa      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003cb0      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003cb5      e976fcffff     jmp 0x3930
0x00003cba      660f1f440000   nop word [rax + rax]
0x00003cc0      4531d2         xor r10d, r10d
0x00003cc3      e998faffff     jmp 0x3760
0x00003cc8      0f1f84000000.  nop dword [rax + rax]
0x00003cd0      807c240f00     cmp byte [rsp + 0xf], 0
0x00003cd5      0f8565090000   jne 0x4640
0x00003cdb      4883c501       add rbp, 1
0x00003cdf      4489c0         mov eax, r8d
0x00003ce2      4531e4         xor r12d, r12d
0x00003ce5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003cea      e90dfbffff     jmp 0x37fc
0x00003cef      90             nop
0x00003cf0      837c240802     cmp dword [rsp + 8], 2
0x00003cf5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003cfa      4589c4         mov r12d, r8d
0x00003cfd      4c89dd         mov rbp, r11
0x00003d00      0f94c2         sete dl
0x00003d03      89d8           mov eax, ebx
0x00003d05      4d85ff         test r15, r15
0x00003d08      0f94c1         sete cl
0x00003d0b      21d0           and eax, edx
0x00003d0d      20c8           and al, cl
0x00003d0f      0f85610a0000   jne 0x4776                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003d15      89d8           mov eax, ebx
0x00003d17      83f001         xor eax, 1
0x00003d1a      20c2           and dl, al
0x00003d1c      0f846a090000   je 0x468c
0x00003d22      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003d27      0f845d090000   je 0x468a
0x00003d2d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003d32      0f85f5090000   jne 0x472d
0x00003d38      4d85ed         test r13, r13
0x00003d3b      0f94c0         sete al
0x00003d3e      48837c245000   cmp qword [rsp + 0x50], 0
0x00003d44      0f95c2         setne dl
0x00003d47      20d0           and al, dl
0x00003d49      0f841d0a0000   je 0x476c
0x00003d4f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003d54      488d1d925000.  lea rbx, [0x00008ded]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u8a00\uffb5\ue3ff\uffa7\ub8ff\uffb7\uc4ff\uffb5\ub4ff\uffb3\u10ff\uffb4\u65ff\uffb4\uaaff\uffb4\ue4ff\uffb4\ue4ff\uffb4\ue4ff\uffb4"
0x00003d5b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00003d5f      c74424080200.  mov dword [rsp + 8], 2
0x00003d67      41bf01000000   mov r15d, 1
0x00003d6d      48c744241801.  mov qword [rsp + 0x18], 1
0x00003d76      c644240f00     mov byte [rsp + 0xf], 0
0x00003d7b      48895c2448     mov qword [rsp + 0x48], rbx
0x00003d80      8844247c       mov byte [rsp + 0x7c], al
0x00003d84      e9daf8ffff     jmp 0x3663
0x00003d89      0f1f80000000.  nop dword [rax]
0x00003d90      807c240f00     cmp byte [rsp + 0xf], 0
0x00003d95      0f85a5080000   jne 0x4640
0x00003d9b      4d85ed         test r13, r13
0x00003d9e      0f84fc030000   je 0x41a0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003da4      31d2           xor edx, edx
0x00003da6      48837c245000   cmp qword [rsp + 0x50], 0
0x00003dac      0f85ee030000   jne 0x41a0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003db2      4c896c2450     mov qword [rsp + 0x50], r13
0x00003db7      4983c703       add r15, 3
0x00003dbb      31c0           xor eax, eax
0x00003dbd      448864247c     mov byte [rsp + 0x7c], r12b
0x00003dc2      4531c0         xor r8d, r8d
0x00003dc5      4989d5         mov r13, rdx
0x00003dc8      bb27000000     mov ebx, 0x27                           ; '''
0x00003dcd      e917faffff     jmp 0x37e9
0x00003dd2      660f1f440000   nop word [rax + rax]
0x00003dd8      f644247804     test byte [rsp + 0x78], 4
0x00003ddd      7421           je 0x3e00
0x00003ddf      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003de3      4c39d9         cmp rcx, r11
0x00003de6      7318           jae 0x3e00
0x00003de8      488b442410     mov rax, qword [rsp + 0x10]
0x00003ded      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003df2      0f848a070000   je 0x4582
0x00003df8      0f1f84000000.  nop dword [rax + rax]
0x00003e00      31d2           xor edx, edx
0x00003e02      4531e4         xor r12d, r12d
0x00003e05      31c0           xor eax, eax
0x00003e07      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003e0c      e9a7f9ffff     jmp 0x37b8
0x00003e11      0f1f80000000.  nop dword [rax]
0x00003e18      807c240f00     cmp byte [rsp + 0xf], 0
0x00003e1d      0f851d080000   jne 0x4640
0x00003e23      4531e4         xor r12d, r12d
0x00003e26      31c0           xor eax, eax
0x00003e28      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003e2d      e9b7f9ffff     jmp 0x37e9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003e32      660f1f440000   nop word [rax + rax]
0x00003e38      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003e40      4983fbff       cmp r11, 0xffffffffffffffff
0x00003e44      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003e50      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003e55      752d           jne 0x3e84
0x00003e57      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003e5c      4488442440     mov byte [rsp + 0x40], r8b
0x00003e61      4488542438     mov byte [rsp + 0x38], r10b
0x00003e66      4c894c2430     mov qword [rsp + 0x30], r9
0x00003e6b      e870d5ffff     call sym.imp.strlen
0x00003e70      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003e76      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00003e7c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00003e7f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003e84      488d84249c00.  lea rax, [rsp + 0x9c]
0x00003e8c      31c9           xor ecx, ecx
0x00003e8e      885c247e       mov byte [rsp + 0x7e], bl
0x00003e92      448844247d     mov byte [rsp + 0x7d], r8b
0x00003e97      4889cb         mov rbx, rcx
0x00003e9a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003ea2      4889442438     mov qword [rsp + 0x38], rax
0x00003ea7      448854247f     mov byte [rsp + 0x7f], r10b
0x00003eac      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003eb4      4c89742440     mov qword [rsp + 0x40], r14
0x00003eb9      4c896c2470     mov qword [rsp + 0x70], r13
0x00003ebe      4c895c2430     mov qword [rsp + 0x30], r11
0x00003ec3      488b442410     mov rax, qword [rsp + 0x10]
0x00003ec8      4c8d741d00     lea r14, [rbp + rbx]
0x00003ecd      488b542430     mov rdx, qword [rsp + 0x30]
0x00003ed2      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003ed7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00003edc      4e8d2c30       lea r13, [rax + r14]
0x00003ee0      4c29f2         sub rdx, r14
0x00003ee3      4c89ee         mov rsi, r13
0x00003ee6      e8551a0000     call sym.rpl_mbrtowc
0x00003eeb      4885c0         test rax, rax
0x00003eee      4989c7         mov r15, rax
0x00003ef1      744e           je 0x3f41
0x00003ef3      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003ef7      0f8418060000   je 0x4515
0x00003efd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003f01      0f849a050000   je 0x44a1
0x00003f07      837c240802     cmp dword [rsp + 8], 2
0x00003f0c      0f94c0         sete al
0x00003f0f      2244240f       and al, byte [rsp + 0xf]
0x00003f13      0f8597010000   jne 0x40b0
0x00003f19      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003f20      e8bbd6ffff     call sym.imp.iswprint
0x00003f25      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00003f2a      85c0           test eax, eax
0x00003f2c      b800000000     mov eax, 0
0x00003f31      440f44e0       cmove r12d, eax
0x00003f35      4c01fb         add rbx, r15
0x00003f38      e893d6ffff     call sym.imp.mbsinit
0x00003f3d      85c0           test eax, eax
0x00003f3f      7482           je 0x3ec3
0x00003f41      4489e2         mov edx, r12d
0x00003f44      4889df         mov rdi, rbx
0x00003f47      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003f4d      83f201         xor edx, 1
0x00003f50      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003f55      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003f5b      2254240d       and dl, byte [rsp + 0xd]
0x00003f5f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003f67      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003f6c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003f71      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003f76      4883ff01       cmp rdi, 1
0x00003f7a      0f86fb050000   jbe 0x457b
0x00003f80      4889f9         mov rcx, rdi
0x00003f83      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003f85      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00003f8b      4801e9         add rcx, rbp
0x00003f8e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003f93      e9b6000000     jmp 0x404e
0x00003f98      0f1f84000000.  nop dword [rax + rax]
0x00003fa0      837c240802     cmp dword [rsp + 8], 2
0x00003fa5      0f94c0         sete al
0x00003fa8      4584c9         test r9b, r9b
0x00003fab      0f85af040000   jne 0x4460
0x00003fb1      4489c6         mov esi, r8d
0x00003fb4      83f601         xor esi, 1
0x00003fb7      4020f0         and al, sil
0x00003fba      742f           je 0x3feb                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00003fbc      4d39fd         cmp r13, r15
0x00003fbf      7605           jbe 0x3fc6
0x00003fc1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003fc6      498d7701       lea rsi, [r15 + 1]
0x00003fca      4939f5         cmp r13, rsi
0x00003fcd      7606           jbe 0x3fd5                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00003fcf      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003fd5      498d7702       lea rsi, [r15 + 2]
0x00003fd9      4939f5         cmp r13, rsi
0x00003fdc      7606           jbe 0x3fe4
0x00003fde      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003fe4      4983c703       add r15, 3
0x00003fe8      4189c0         mov r8d, eax
0x00003feb      4d39fd         cmp r13, r15
0x00003fee      7605           jbe 0x3ff5
0x00003ff0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003ff5      498d4701       lea rax, [r15 + 1]
0x00003ff9      4939c5         cmp r13, rax
0x00003ffc      760d           jbe 0x400b
0x00003ffe      89d8           mov eax, ebx
0x00004000      c0e806         shr al, 6
0x00004003      83c030         add eax, 0x30
0x00004006      4388443e01     mov byte [r14 + r15 + 1], al
0x0000400b      498d4702       lea rax, [r15 + 2]
0x0000400f      4939c5         cmp r13, rax
0x00004012      7610           jbe 0x4024
0x00004014      89d8           mov eax, ebx
0x00004016      c0e803         shr al, 3
0x00004019      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000401c      83c030         add eax, 0x30
0x0000401f      4388443e02     mov byte [r14 + r15 + 2], al
0x00004024      83e307         and ebx, 7
0x00004027      4883c501       add rbp, 1
0x0000402b      4983c703       add r15, 3
0x0000402f      83c330         add ebx, 0x30
0x00004032      4839cd         cmp rbp, rcx
0x00004035      0f83e5f7ffff   jae 0x3820
0x0000403b      89d6           mov esi, edx
0x0000403d      4d39fd         cmp r13, r15
0x00004040      7604           jbe 0x4046
0x00004042      43881c3e       mov byte [r14 + r15], bl
0x00004046      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000404a      4983c701       add r15, 1
0x0000404e      84d2           test dl, dl
0x00004050      0f854affffff   jne 0x3fa0
0x00004056      89f0           mov eax, esi
0x00004058      83f001         xor eax, 1
0x0000405b      4421c0         and eax, r8d
0x0000405e      4584d2         test r10b, r10b
0x00004061      740e           je 0x4071
0x00004063      4d39fd         cmp r13, r15
0x00004066      7605           jbe 0x406d
0x00004068      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000406d      4983c701       add r15, 1
0x00004071      4883c501       add rbp, 1
0x00004075      4839cd         cmp rbp, rcx
0x00004078      0f837ef7ffff   jae 0x37fc
0x0000407e      84c0           test al, al
0x00004080      0f84f8030000   je 0x447e
0x00004086      4d39fd         cmp r13, r15
0x00004089      7605           jbe 0x4090
0x0000408b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004090      498d4701       lea rax, [r15 + 1]
0x00004094      4939c5         cmp r13, rax
0x00004097      7606           jbe 0x409f
0x00004099      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000409f      4983c702       add r15, 2
0x000040a3      4531d2         xor r10d, r10d
0x000040a6      4531c0         xor r8d, r8d
0x000040a9      eb92           jmp 0x403d
0x000040ab      0f1f440000     nop dword [rax + rax]
0x000040b0      4983ff01       cmp r15, 1
0x000040b4      0f845ffeffff   je 0x3f19
0x000040ba      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000040bf      4a8d0c3f       lea rcx, [rdi + r15]
0x000040c3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x000040c8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000040cc      eb0f           jmp 0x40dd
0x000040ce      6690           nop
0x000040d0      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x000040d4      4939d0         cmp r8, rdx
0x000040d7      0f843cfeffff   je 0x3f19
0x000040dd      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x000040e0      83e95b         sub ecx, 0x5b
0x000040e3      80f921         cmp cl, 0x21
0x000040e6      77e8           ja 0x40d0                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x000040e8      be01000000     mov esi, 1
0x000040ed      48d3e6         shl rsi, cl
0x000040f0      4889f1         mov rcx, rsi
0x000040f3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x000040fd      4885f1         test rcx, rsi
0x00004100      74ce           je 0x40d0
0x00004102      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004107      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000410c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00004111      c74424080200.  mov dword [rsp + 8], 2
0x00004119      807c240d00     cmp byte [rsp + 0xd], 0
0x0000411e      7410           je 0x4130
0x00004120      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00004122      b804000000     mov eax, 4
0x00004127      0f44442408     cmove eax, dword [rsp + 8]
0x0000412c      89442408       mov dword [rsp + 8], eax
0x00004130      4883ec08       sub rsp, 8
0x00004134      4889e9         mov rcx, rbp
0x00004137      4c89ee         mov rsi, r13
0x0000413a      ff742468       push qword [rsp + 0x68]
0x0000413e      ff742478       push qword [rsp + 0x78]
0x00004142      4c89f7         mov rdi, r14
0x00004145      6a00           push 0
0x00004147      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000414f      448b442428     mov r8d, dword [rsp + 0x28]
0x00004154      488b542430     mov rdx, qword [rsp + 0x30]
0x00004159      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000415d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00004162      4883c420       add rsp, 0x20
0x00004166      4989c7         mov r15, rax
0x00004169      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00004171      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000417a      4c89f8         mov rax, r15
0x0000417d      0f8500060000   jne 0x4783
0x00004183      4881c4b80000.  add rsp, 0xb8
0x0000418a      5b             pop rbx
0x0000418b      5d             pop rbp
0x0000418c      415c           pop r12
0x0000418e      415d           pop r13
0x00004190      415e           pop r14
0x00004192      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00004194      c3             ret
0x00004195      0f1f00         nop dword [rax]
0x00004198      4c89dd         mov rbp, r11
0x0000419b      e979ffffff     jmp 0x4119
0x000041a0      4d39fd         cmp r13, r15
0x000041a3      7605           jbe 0x41aa
0x000041a5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000041aa      498d4701       lea rax, [r15 + 1]
0x000041ae      4939c5         cmp r13, rax
0x000041b1      7606           jbe 0x41b9
0x000041b3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x000041b9      498d4702       lea rax, [r15 + 2]
0x000041bd      4939c5         cmp r13, rax
0x000041c0      0f86ec050000   jbe 0x47b2
0x000041c6      4c89ea         mov rdx, r13
0x000041c9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000041cf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000041d4      e9d9fbffff     jmp 0x3db2
0x000041d9      4489e0         mov eax, r12d
0x000041dc      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x000041e1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x000041e4      e900f6ffff     jmp 0x37e9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x000041e9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000041ef      e9c5f9ffff     jmp 0x3bb9
0x000041f4      85db           test ebx, ebx
0x000041f6      0f8527f4ffff   jne 0x3623
0x000041fc      c644240d01     mov byte [rsp + 0xd], 1
0x00004201      4d85ed         test r13, r13
0x00004204      0f8590050000   jne 0x479a
0x0000420a      488d05dc4b00.  lea rax, [0x00008ded]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u8a00\uffb5\ue3ff\uffa7\ub8ff\uffb7\uc4ff\uffb5\ub4ff\uffb3\u10ff\uffb4\u65ff\uffb4\uaaff\uffb4\ue4ff\uffb4\ue4ff\uffb4\ue4ff\uffb4"
0x00004211      48c744245000.  mov qword [rsp + 0x50], 0
0x0000421a      c644240e01     mov byte [rsp + 0xe], 1
0x0000421f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004224      4531e4         xor r12d, r12d
0x00004227      c644240f00     mov byte [rsp + 0xf], 0
0x0000422c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004235      4889442448     mov qword [rsp + 0x48], rax
0x0000423a      41bf01000000   mov r15d, 1
0x00004240      c74424080200.  mov dword [rsp + 8], 2
0x00004248      e916f4ffff     jmp 0x3663                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000424d      0f1f00         nop dword [rax]
0x00004250      85db           test ebx, ebx
0x00004252      0f85f5030000   jne 0x464d
0x00004258      4d85ed         test r13, r13
0x0000425b      0f8425020000   je 0x4486
0x00004261      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00004265      c644240e01     mov byte [rsp + 0xe], 1
0x0000426a      4531e4         xor r12d, r12d
0x0000426d      c644247c00     mov byte [rsp + 0x7c], 0
0x00004272      48c744245000.  mov qword [rsp + 0x50], 0
0x0000427b      488d05694b00.  lea rax, str.l______l                   ; 0x8deb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u8a00\uffb5\ue3ff\uffa7\ub8ff\uffb7\uc4ff\uffb5\ub4ff\uffb3\u10ff\uffb4\u65ff\uffb4\uaaff\uffb4\ue4ff\uffb4\ue4ff\uffb4\ue4ff\uffb4\u34ff\uffab\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u74ff\uffab\u7cff\uffaa\u3cff\uffaa\u04ff\uffac\uf4ff\uffab\ue4ff\uffab\ud4ff\uffab\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\uc4ff\uffab\ub4ff\uffab\ub4ff\uffab\u84ff\uffab\ub4ff\uffab\u5cff\uffab\ub4ff\uffab\u17ff\uffaa\ub4ff\uffab\ub4ff\uffab\ub4ff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\ub4ff\uffab\ub4ff\uffab\ub4ff\uffab\ub4ff\uffab\ue7ff\uffa9\u1cff\uffac\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\ub4ff\uffab\u8cff\uffaa\u5cff\uffab\ub4ff\uffab\u5cff\uffab\ub4ff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u17ff\uffa9\ub4ff\uffab\u17ff\uffa9\u84ff\uffab\u08ff\uffab\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\U010003aa\u48ff\uffac\u30ff\uffac\ue0ff\uffaa\u20ff\uffac\uc8ff\uffaa\u08ff\uffac\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\uf0ff\uffab\U010003ab\U010003ab\uc0ff\uffab\U010003ab\ua8ff\uffab\U010003ab\u18ff\uffa8\U010003ab\U010003ab\U010003ab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\U010003ab\U010003ab\U010003ab\U010003ab\ue8ff\uffa7\u18ff\uffaa\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\U010003ab\ua8ff\uffaa\ua8ff\uffab\U010003ab\ua8ff\uffab\U010003ab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\u18ff\uffa7\U010003ab\u18ff\uffa7\uc0ff\uffab\xff"
0x00004282      c644240f00     mov byte [rsp + 0xf], 0
0x00004287      c644240d01     mov byte [rsp + 0xd], 1
0x0000428c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004295      41bf01000000   mov r15d, 1
0x0000429b      4889442448     mov qword [rsp + 0x48], rax
0x000042a0      e9bef3ffff     jmp 0x3663
0x000042a5      488d053f4b00.  lea rax, str.l______l                   ; 0x8deb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u8a00\uffb5\ue3ff\uffa7\ub8ff\uffb7\uc4ff\uffb5\ub4ff\uffb3\u10ff\uffb4\u65ff\uffb4\uaaff\uffb4\ue4ff\uffb4\ue4ff\uffb4\ue4ff\uffb4\u34ff\uffab\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u74ff\uffab\u7cff\uffaa\u3cff\uffaa\u04ff\uffac\uf4ff\uffab\ue4ff\uffab\ud4ff\uffab\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\uc4ff\uffab\ub4ff\uffab\ub4ff\uffab\u84ff\uffab\ub4ff\uffab\u5cff\uffab\ub4ff\uffab\u17ff\uffaa\ub4ff\uffab\ub4ff\uffab\ub4ff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\ub4ff\uffab\ub4ff\uffab\ub4ff\uffab\ub4ff\uffab\ue7ff\uffa9\u1cff\uffac\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\ub4ff\uffab\u8cff\uffaa\u5cff\uffab\ub4ff\uffab\u5cff\uffab\ub4ff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u17ff\uffa9\ub4ff\uffab\u17ff\uffa9\u84ff\uffab\u08ff\uffab\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\U010003aa\u48ff\uffac\u30ff\uffac\ue0ff\uffaa\u20ff\uffac\uc8ff\uffaa\u08ff\uffac\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\uf0ff\uffab\U010003ab\U010003ab\uc0ff\uffab\U010003ab\ua8ff\uffab\U010003ab\u18ff\uffa8\U010003ab\U010003ab\U010003ab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\U010003ab\U010003ab\U010003ab\U010003ab\ue8ff\uffa7\u18ff\uffaa\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\U010003ab\ua8ff\uffaa\ua8ff\uffab\U010003ab\ua8ff\uffab\U010003ab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\u18ff\uffa7\U010003ab\u18ff\uffa7\uc0ff\uffab\xff"
0x000042ac      c644240e01     mov byte [rsp + 0xe], 1
0x000042b1      c644247c00     mov byte [rsp + 0x7c], 0
0x000042b6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x000042b9      48c744245000.  mov qword [rsp + 0x50], 0
0x000042c2      c644240f01     mov byte [rsp + 0xf], 1
0x000042c7      c644240d01     mov byte [rsp + 0xd], 1
0x000042cc      48c744241801.  mov qword [rsp + 0x18], 1
0x000042d5      4531ff         xor r15d, r15d
0x000042d8      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x000042dd      c74424080500.  mov dword [rsp + 8], 5
0x000042e5      e979f3ffff     jmp 0x3663
0x000042ea      c644240e01     mov byte [rsp + 0xe], 1
0x000042ef      c644247c00     mov byte [rsp + 0x7c], 0
0x000042f4      4531e4         xor r12d, r12d
0x000042f7      48c744245000.  mov qword [rsp + 0x50], 0
0x00004300      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00004305      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00004308      c644240d01     mov byte [rsp + 0xd], 1
0x0000430d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004316      48c744244800.  mov qword [rsp + 0x48], 0
0x0000431f      e93ff3ffff     jmp 0x3663
0x00004324      837c24080a     cmp dword [rsp + 8], 0xa
0x00004329      7456           je 0x4381
0x0000432b      488d35bd4a00.  lea rsi, [0x00008def]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00004332      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00004334      ba05000000     mov edx, 5
0x00004339      e882d0ffff     call sym.imp.dcgettext
0x0000433e      4889c1         mov rcx, rax
0x00004341      4889442468     mov qword [rsp + 0x68], rax
0x00004346      488d05a24a00.  lea rax, [0x00008def]                   ; "`"
0x0000434d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00004350      0f8498030000   je 0x46ee
0x00004356      488d35904a00.  lea rsi, [0x00008ded]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u8a00\uffb5\ue3ff\uffa7\ub8ff\uffb7\uc4ff\uffb5\ub4ff\uffb3\u10ff\uffb4\u65ff\uffb4\uaaff\uffb4\ue4ff\uffb4\ue4ff\uffb4\ue4ff\uffb4"
0x0000435d      31ff           xor edi, edi
0x0000435f      ba05000000     mov edx, 5
0x00004364      e857d0ffff     call sym.imp.dcgettext
0x00004369      4889c1         mov rcx, rax
0x0000436c      4889442460     mov qword [rsp + 0x60], rax
0x00004371      488d05754a00.  lea rax, [0x00008ded]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u8a00\uffb5\ue3ff\uffa7\ub8ff\uffb7\uc4ff\uffb5\ub4ff\uffb3\u10ff\uffb4\u65ff\uffb4\uaaff\uffb4\ue4ff\uffb4\ue4ff\uffb4\ue4ff\uffb4"
0x00004378      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000437b      0f8483030000   je 0x4704
0x00004381      4531ff         xor r15d, r15d
0x00004384      85db           test ebx, ebx
0x00004386      0f84c1010000   je 0x454d
0x0000438c      85db           test ebx, ebx
0x0000438e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00004393      0f9544240f     setne byte [rsp + 0xf]
0x00004398      4531e4         xor r12d, r12d
0x0000439b      4889df         mov rdi, rbx
0x0000439e      e83dd0ffff     call sym.imp.strlen
0x000043a3      48895c2448     mov qword [rsp + 0x48], rbx
0x000043a8      4889442418     mov qword [rsp + 0x18], rax
0x000043ad      c644240e01     mov byte [rsp + 0xe], 1
0x000043b2      c644247c00     mov byte [rsp + 0x7c], 0
0x000043b7      48c744245000.  mov qword [rsp + 0x50], 0
0x000043c0      c644240d01     mov byte [rsp + 0xd], 1
0x000043c5      e999f2ffff     jmp 0x3663
0x000043ca      c644240e01     mov byte [rsp + 0xe], 1
0x000043cf      c644247c00     mov byte [rsp + 0x7c], 0
0x000043d4      4531e4         xor r12d, r12d
0x000043d7      48c744245000.  mov qword [rsp + 0x50], 0
0x000043e0      c644240f00     mov byte [rsp + 0xf], 0
0x000043e5      4531ff         xor r15d, r15d
0x000043e8      c644240d00     mov byte [rsp + 0xd], 0
0x000043ed      48c744241800.  mov qword [rsp + 0x18], 0
0x000043f6      48c744244800.  mov qword [rsp + 0x48], 0
0x000043ff      e95ff2ffff     jmp 0x3663
0x00004404      c644240e01     mov byte [rsp + 0xe], 1
0x00004409      c644247c00     mov byte [rsp + 0x7c], 0
0x0000440e      4531e4         xor r12d, r12d
0x00004411      48c744245000.  mov qword [rsp + 0x50], 0
0x0000441a      c644240f01     mov byte [rsp + 0xf], 1
0x0000441f      c644240d01     mov byte [rsp + 0xd], 1
0x00004424      e91af2ffff     jmp 0x3643
0x00004429      4d39fd         cmp r13, r15
0x0000442c      7605           jbe 0x4433
0x0000442e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00004433      488d4102       lea rax, [rcx + 2]
0x00004437      4939c5         cmp r13, rax
0x0000443a      7606           jbe 0x4442
0x0000443c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00004442      4489e0         mov eax, r12d
0x00004445      4c8d7903       lea r15, [rcx + 3]
0x00004449      4531e4         xor r12d, r12d
0x0000444c      bb30000000     mov ebx, 0x30                           ; '0'
0x00004451      e962f3ffff     jmp 0x37b8
0x00004456      662e0f1f8400.  nop word cs:[rax + rax]
0x00004460      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004465      4c89dd         mov rbp, r11
0x00004468      885c240d       mov byte [rsp + 0xd], bl
0x0000446c      e9a8fcffff     jmp 0x4119
0x00004471      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004476      4531e4         xor r12d, r12d
0x00004479      e902fbffff     jmp 0x3f80
0x0000447e      4531d2         xor r10d, r10d
0x00004481      e9b7fbffff     jmp 0x403d
0x00004486      48c744245000.  mov qword [rsp + 0x50], 0
0x0000448f      c644240e01     mov byte [rsp + 0xe], 1
0x00004494      4531e4         xor r12d, r12d
0x00004497      c644247c00     mov byte [rsp + 0x7c], 0
0x0000449c      e9dafdffff     jmp 0x427b
0x000044a1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000044a6      4c89f6         mov rsi, r14
0x000044a9      4c89e9         mov rcx, r13
0x000044ac      4889d8         mov rax, rbx
0x000044af      4889df         mov rdi, rbx
0x000044b2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000044b8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000044bd      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x000044c5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x000044c8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000044ce      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000044d6      4c8b742440     mov r14, qword [rsp + 0x40]
0x000044db      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000044e0      7326           jae 0x4508
0x000044e2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000044e5      7510           jne 0x44f7
0x000044e7      eb1f           jmp 0x4508
0x000044e9      0f1f80000000.  nop dword [rax]
0x000044f0      41803c0100     cmp byte [r9 + rax], 0
0x000044f5      740e           je 0x4505
0x000044f7      4883c001       add rax, 1
0x000044fb      488d540500     lea rdx, [rbp + rax]
0x00004500      4939d3         cmp r11, rdx
0x00004503      77eb           ja 0x44f0
0x00004505      4889c7         mov rdi, rax
0x00004508      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000450d      4531e4         xor r12d, r12d
0x00004510      e961faffff     jmp 0x3f76
0x00004515      4889df         mov rdi, rbx
0x00004518      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000451e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004523      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004529      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004531      4531e4         xor r12d, r12d
0x00004534      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004539      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000453e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004543      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004548      e929faffff     jmp 0x3f76
0x0000454d      488b542468     mov rdx, qword [rsp + 0x68]
0x00004552      0fb602         movzx eax, byte [rdx]
0x00004555      84c0           test al, al
0x00004557      0f842ffeffff   je 0x438c
0x0000455d      0f1f00         nop dword [rax]
0x00004560      4d39fd         cmp r13, r15
0x00004563      7604           jbe 0x4569
0x00004565      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00004569      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000456d      420fb6043a     movzx eax, byte [rdx + r15]
0x00004572      84c0           test al, al
0x00004574      75ea           jne 0x4560
0x00004576      e911feffff     jmp 0x438c
0x0000457b      89d0           mov eax, edx
0x0000457d      e955f5ffff     jmp 0x3ad7
0x00004582      0fb61c08       movzx ebx, byte [rax + rcx]
0x00004586      80fb3e         cmp bl, 0x3e
0x00004589      0f8771f8ffff   ja 0x3e00
0x0000458f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00004599      480fa3d8       bt rax, rbx
0x0000459d      0f835df8ffff   jae 0x3e00
0x000045a3      807c240f00     cmp byte [rsp + 0xf], 0
0x000045a8      0f85e4010000   jne 0x4792                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x000045ae      4d39fd         cmp r13, r15
0x000045b1      7605           jbe 0x45b8
0x000045b3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x000045b8      498d4701       lea rax, [r15 + 1]
0x000045bc      4939c5         cmp r13, rax
0x000045bf      7606           jbe 0x45c7
0x000045c1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000045c7      498d4702       lea rax, [r15 + 2]
0x000045cb      4939c5         cmp r13, rax
0x000045ce      7606           jbe 0x45d6
0x000045d0      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000045d6      498d4703       lea rax, [r15 + 3]
0x000045da      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x000045dd      7606           jbe 0x45e5
0x000045df      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x000045e5      4983c704       add r15, 4
0x000045e9      31d2           xor edx, edx
0x000045eb      4531e4         xor r12d, r12d
0x000045ee      31c0           xor eax, eax
0x000045f0      4889cd         mov rbp, rcx
0x000045f3      e9c0f1ffff     jmp 0x37b8
0x000045f8      85db           test ebx, ebx
0x000045fa      0f8488010000   je 0x4788
0x00004600      488d05e64700.  lea rax, [0x00008ded]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u8a00\uffb5\ue3ff\uffa7\ub8ff\uffb7\uc4ff\uffb5\ub4ff\uffb3\u10ff\uffb4\u65ff\uffb4\uaaff\uffb4\ue4ff\uffb4\ue4ff\uffb4\ue4ff\uffb4"
0x00004607      c644240e01     mov byte [rsp + 0xe], 1
0x0000460c      c644247c00     mov byte [rsp + 0x7c], 0
0x00004611      4531e4         xor r12d, r12d
0x00004614      48c744245000.  mov qword [rsp + 0x50], 0
0x0000461d      c644240f01     mov byte [rsp + 0xf], 1
0x00004622      c644240d00     mov byte [rsp + 0xd], 0
0x00004627      48c744241801.  mov qword [rsp + 0x18], 1
0x00004630      4531ff         xor r15d, r15d
0x00004633      4889442448     mov qword [rsp + 0x48], rax
0x00004638      e926f0ffff     jmp 0x3663
0x0000463d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00004640      4c89dd         mov rbp, r11
0x00004643      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004648      e9ccfaffff     jmp 0x4119
0x0000464d      488d05974700.  lea rax, str.l______l                   ; 0x8deb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u8a00\uffb5\ue3ff\uffa7\ub8ff\uffb7\uc4ff\uffb5\ub4ff\uffb3\u10ff\uffb4\u65ff\uffb4\uaaff\uffb4\ue4ff\uffb4\ue4ff\uffb4\ue4ff\uffb4\u34ff\uffab\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u74ff\uffab\u7cff\uffaa\u3cff\uffaa\u04ff\uffac\uf4ff\uffab\ue4ff\uffab\ud4ff\uffab\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\u1cff\uffac\uc4ff\uffab\ub4ff\uffab\ub4ff\uffab\u84ff\uffab\ub4ff\uffab\u5cff\uffab\ub4ff\uffab\u17ff\uffaa\ub4ff\uffab\ub4ff\uffab\ub4ff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\ub4ff\uffab\ub4ff\uffab\ub4ff\uffab\ub4ff\uffab\ue7ff\uffa9\u1cff\uffac\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\ub4ff\uffab\u8cff\uffaa\u5cff\uffab\ub4ff\uffab\u5cff\uffab\ub4ff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u5cff\uffab\u17ff\uffa9\ub4ff\uffab\u17ff\uffa9\u84ff\uffab\u08ff\uffab\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\U010003aa\u48ff\uffac\u30ff\uffac\ue0ff\uffaa\u20ff\uffac\uc8ff\uffaa\u08ff\uffac\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\u18ff\uffaa\uf0ff\uffab\U010003ab\U010003ab\uc0ff\uffab\U010003ab\ua8ff\uffab\U010003ab\u18ff\uffa8\U010003ab\U010003ab\U010003ab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\U010003ab\U010003ab\U010003ab\U010003ab\ue8ff\uffa7\u18ff\uffaa\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\U010003ab\ua8ff\uffaa\ua8ff\uffab\U010003ab\ua8ff\uffab\U010003ab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\ua8ff\uffab\u18ff\uffa7\U010003ab\u18ff\uffa7\uc0ff\uffab\xff"
0x00004654      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00004659      c644247c00     mov byte [rsp + 0x7c], 0
0x0000465e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00004661      48c744245000.  mov qword [rsp + 0x50], 0
0x0000466a      c644240f01     mov byte [rsp + 0xf], 1
0x0000466f      c644240d01     mov byte [rsp + 0xd], 1
0x00004674      48c744241801.  mov qword [rsp + 0x18], 1
0x0000467d      4531ff         xor r15d, r15d
0x00004680      4889442448     mov qword [rsp + 0x48], rax
0x00004685      e9d9efffff     jmp 0x3663
0x0000468a      89d0           mov eax, edx
0x0000468c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00004691      4885db         test rbx, rbx
0x00004694      742c           je 0x46c2
0x00004696      84c0           test al, al
0x00004698      7428           je 0x46c2
0x0000469a      0fb60b         movzx ecx, byte [rbx]
0x0000469d      4889d8         mov rax, rbx
0x000046a0      84c9           test cl, cl
0x000046a2      741e           je 0x46c2
0x000046a4      4c89fa         mov rdx, r15
0x000046a7      4c29f8         sub rax, r15
0x000046aa      4939d5         cmp r13, rdx
0x000046ad      7604           jbe 0x46b3
0x000046af      41880c16       mov byte [r14 + rdx], cl
0x000046b3      4883c201       add rdx, 1
0x000046b7      0fb60c10       movzx ecx, byte [rax + rdx]
0x000046bb      84c9           test cl, cl
0x000046bd      75eb           jne 0x46aa
0x000046bf      4989d7         mov r15, rdx
0x000046c2      4d39fd         cmp r13, r15
0x000046c5      0f869efaffff   jbe 0x4169
0x000046cb      43c6043e00     mov byte [r14 + r15], 0
0x000046d0      e994faffff     jmp 0x4169
0x000046d5      837c240802     cmp dword [rsp + 8], 2
0x000046da      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000046df      4c89dd         mov rbp, r11
0x000046e2      0f94c0         sete al
0x000046e5      885c240d       mov byte [rsp + 0xd], bl
0x000046e9      e92bfaffff     jmp 0x4119
0x000046ee      8b742408       mov esi, dword [rsp + 8]
0x000046f2      4889cf         mov rdi, rcx
0x000046f5      e8a6edffff     call sym.gettext_quote.part.1
0x000046fa      4889442468     mov qword [rsp + 0x68], rax
0x000046ff      e952fcffff     jmp 0x4356
0x00004704      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004708      4889cf         mov rdi, rcx
0x0000470b      e890edffff     call sym.gettext_quote.part.1
0x00004710      4889442460     mov qword [rsp + 0x60], rax
0x00004715      e967fcffff     jmp 0x4381
0x0000471a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000471f      4c89dd         mov rbp, r11
0x00004722      89d0           mov eax, edx
0x00004724      885c240d       mov byte [rsp + 0xd], bl
0x00004728      e9ecf9ffff     jmp 0x4119
0x0000472d      4883ec08       sub rsp, 8
0x00004731      41b805000000   mov r8d, 5
0x00004737      4c89d9         mov rcx, r11
0x0000473a      ff742468       push qword [rsp + 0x68]
0x0000473e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00004742      4c89f7         mov rdi, r14
0x00004745      ff742438       push qword [rsp + 0x38]
0x00004749      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004751      488b542430     mov rdx, qword [rsp + 0x30]
0x00004756      488b742470     mov rsi, qword [rsp + 0x70]
0x0000475b      e830eeffff     call sym.quotearg_buffer_restyled
0x00004760      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00004764      4989c7         mov r15, rax
0x00004767      e9fdf9ffff     jmp 0x4169
0x0000476c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00004771      e916ffffff     jmp 0x468c
0x00004776      c74424080200.  mov dword [rsp + 8], 2
0x0000477e      e996f9ffff     jmp 0x4119
0x00004783      e878ccffff     call sym.imp.__stack_chk_fail
0x00004788      c644240d00     mov byte [rsp + 0xd], 0
0x0000478d      e96ffaffff     jmp 0x4201
0x00004792      4c89dd         mov rbp, r11
0x00004795      e996f9ffff     jmp 0x4130
0x0000479a      c644240e01     mov byte [rsp + 0xe], 1
0x0000479f      31c0           xor eax, eax
0x000047a1      4531e4         xor r12d, r12d
0x000047a4      48c744245000.  mov qword [rsp + 0x50], 0
0x000047ad      e9a2f5ffff     jmp 0x3d54
0x000047b2      4c89ea         mov rdx, r13
0x000047b5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000047ba      e9f3f5ffff     jmp 0x3db2
0x000047bf      e85ccbffff     call sym.imp.abort
0x000047c4      6690           nop
0x000047c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x000047d0      4157           push r15
0x000047d2      4156           push r14
0x000047d4      4c63ff         movsxd r15, edi
0x000047d7      4155           push r13
0x000047d9      4154           push r12
0x000047db      4989d6         mov r14, rdx
0x000047de      55             push rbp
0x000047df      53             push rbx
0x000047e0      4889cd         mov rbp, rcx
0x000047e3      4883ec28       sub rsp, 0x28
0x000047e7      4889742408     mov qword [rsp + 8], rsi
0x000047ec      e83fcbffff     call sym.imp.__errno_location
0x000047f1      4989c5         mov r13, rax
0x000047f4      8b00           mov eax, dword [rax]
0x000047f6      4585ff         test r15d, r15d
0x000047f9      488b1d606820.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x00004800      89442418       mov dword [rsp + 0x18], eax
0x00004804      0f8867010000   js 0x4971
0x0000480a      44393d476820.  cmp dword [obj.nslots], r15d            ; [0x20b058:4]=1
0x00004811      7f62           jg 0x4875
0x00004813      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000481a      0f8456010000   je 0x4976
0x00004820      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004824      488d05456820.  lea rax, obj.slotvec0                   ; 0x20b070
0x0000482b      4963f4         movsxd rsi, r12d
0x0000482e      48c1e604       shl rsi, 4
0x00004832      4839c3         cmp rbx, rax
0x00004835      0f8415010000   je 0x4950
0x0000483b      4889df         mov rdi, rbx
0x0000483e      e8cd0c0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00004843      4889c3         mov rbx, rax
0x00004846      488905136820.  mov qword [obj.slotvec], rax            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x0000484d      48633d046820.  movsxd rdi, dword [obj.nslots]          ; [0x20b058:4]=1
0x00004854      4489e2         mov edx, r12d
0x00004857      31f6           xor esi, esi
0x00004859      29fa           sub edx, edi
0x0000485b      48c1e704       shl rdi, 4
0x0000485f      4863d2         movsxd rdx, edx
0x00004862      4801df         add rdi, rbx
0x00004865      48c1e204       shl rdx, 4
0x00004869      e8d2cbffff     call sym.imp.memset
0x0000486e      448925e36720.  mov dword [obj.nslots], r12d            ; [0x20b058:4]=1
0x00004875      8b4504         mov eax, dword [rbp + 4]
0x00004878      49c1e704       shl r15, 4
0x0000487c      4883ec08       sub rsp, 8
0x00004880      4c01fb         add rbx, r15
0x00004883      4c8d7d08       lea r15, [rbp + 8]
0x00004887      448b4500       mov r8d, dword [rbp]
0x0000488b      4c8b1b         mov r11, qword [rbx]
0x0000488e      4c8b6308       mov r12, qword [rbx + 8]
0x00004892      4c89f1         mov rcx, r14
0x00004895      83c801         or eax, 1
0x00004898      89442424       mov dword [rsp + 0x24], eax
0x0000489c      ff7530         push qword [rbp + 0x30]
0x0000489f      4189c1         mov r9d, eax
0x000048a2      ff7528         push qword [rbp + 0x28]
0x000048a5      4157           push r15
0x000048a7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000048aa      488b542428     mov rdx, qword [rsp + 0x28]
0x000048af      4c89e7         mov rdi, r12
0x000048b2      4c895c2430     mov qword [rsp + 0x30], r11
0x000048b7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x000048bc      4883c420       add rsp, 0x20
0x000048c0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x000048c5      4939c3         cmp r11, rax
0x000048c8      7767           ja 0x4931
0x000048ca      488d7001       lea rsi, [rax + 1]
0x000048ce      488d050b6820.  lea rax, obj.slot0                      ; 0x20b0e0
0x000048d5      4939c4         cmp r12, rax
0x000048d8      488933         mov qword [rbx], rsi
0x000048db      7412           je 0x48ef
0x000048dd      4c89e7         mov rdi, r12
0x000048e0      4889742410     mov qword [rsp + 0x10], rsi
0x000048e5      e826caffff     call sym.imp.free
0x000048ea      488b742410     mov rsi, qword [rsp + 0x10]
0x000048ef      4889f7         mov rdi, rsi
0x000048f2      4889742410     mov qword [rsp + 0x10], rsi
0x000048f7      e8b40b0000     call sym.xmalloc
0x000048fc      4883ec08       sub rsp, 8
0x00004900      48894308       mov qword [rbx + 8], rax
0x00004904      448b4500       mov r8d, dword [rbp]
0x00004908      ff7530         push qword [rbp + 0x30]
0x0000490b      ff7528         push qword [rbp + 0x28]
0x0000490e      4c89f1         mov rcx, r14
0x00004911      4157           push r15
0x00004913      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004918      4889c7         mov rdi, rax
0x0000491b      488b542428     mov rdx, qword [rsp + 0x28]
0x00004920      488b742430     mov rsi, qword [rsp + 0x30]
0x00004925      4989c4         mov r12, rax
0x00004928      e863ecffff     call sym.quotearg_buffer_restyled
0x0000492d      4883c420       add rsp, 0x20
0x00004931      8b442418       mov eax, dword [rsp + 0x18]
0x00004935      41894500       mov dword [r13], eax
0x00004939      4883c428       add rsp, 0x28
0x0000493d      4c89e0         mov rax, r12
0x00004940      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004941      5d             pop rbp
0x00004942      415c           pop r12
0x00004944      415d           pop r13
0x00004946      415e           pop r14
0x00004948      415f           pop r15
0x0000494a      c3             ret
0x0000494b      0f1f440000     nop dword [rax + rax]
0x00004950      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004952      e8b90b0000     call sym.xrealloc
0x00004957      660f6f051167.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000495f      4889c3         mov rbx, rax
0x00004962      488905f76620.  mov qword [obj.slotvec], rax            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x00004969      0f1100         movups xmmword [rax], xmm0
0x0000496c      e9dcfeffff     jmp 0x484d
0x00004971      e8aac9ffff     call sym.imp.abort
0x00004976      e8850d0000     call sym.xalloc_die
0x0000497b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004980      4154           push r12
0x00004982      55             push rbp
0x00004983      53             push rbx
0x00004984      4889fb         mov rbx, rdi
0x00004987      e8a4c9ffff     call sym.imp.__errno_location
0x0000498c      448b20         mov r12d, dword [rax]
0x0000498f      4889c5         mov rbp, rax
0x00004992      488d05476820.  lea rax, obj.default_quoting_options    ; 0x20b1e0
0x00004999      4885db         test rbx, rbx
0x0000499c      be38000000     mov esi, 0x38                           ; '8'
0x000049a1      480f44d8       cmove rbx, rax
0x000049a5      4889df         mov rdi, rbx
0x000049a8      e8030d0000     call sym.xmemdup
0x000049ad      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000049b1      5b             pop rbx
0x000049b2      5d             pop rbp
0x000049b3      415c           pop r12
0x000049b5      c3             ret
0x000049b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x000049c0      488d05196820.  lea rax, obj.default_quoting_options    ; 0x20b1e0
0x000049c7      4885ff         test rdi, rdi
0x000049ca      480f44f8       cmove rdi, rax
0x000049ce      8b07           mov eax, dword [rdi]
0x000049d0      c3             ret
0x000049d1      0f1f440000     nop dword [rax + rax]
0x000049d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x000049e0      488d05f96720.  lea rax, obj.default_quoting_options    ; 0x20b1e0
0x000049e7      4885ff         test rdi, rdi
0x000049ea      480f44f8       cmove rdi, rax
0x000049ee      8937           mov dword [rdi], esi
0x000049f0      c3             ret
0x000049f1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000049f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004a00      488d05d96720.  lea rax, obj.default_quoting_options    ; 0x20b1e0
0x00004a07      4885ff         test rdi, rdi
0x00004a0a      89f1           mov ecx, esi
0x00004a0c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004a10      89f0           mov eax, esi
0x00004a12      83e11f         and ecx, 0x1f
0x00004a15      c0e805         shr al, 5
0x00004a18      0fb6c0         movzx eax, al
0x00004a1b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004a20      8b37           mov esi, dword [rdi]
0x00004a22      89f0           mov eax, esi
0x00004a24      d3e8           shr eax, cl
0x00004a26      31c2           xor edx, eax
0x00004a28      83e001         and eax, 1
0x00004a2b      83e201         and edx, 1
0x00004a2e      d3e2           shl edx, cl
0x00004a30      31f2           xor edx, esi
0x00004a32      8917           mov dword [rdi], edx
0x00004a34      c3             ret
0x00004a35      90             nop
0x00004a36      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004a40      488d05996720.  lea rax, obj.default_quoting_options    ; 0x20b1e0
0x00004a47      4885ff         test rdi, rdi
0x00004a4a      480f44f8       cmove rdi, rax
0x00004a4e      8b4704         mov eax, dword [rdi + 4]
0x00004a51      897704         mov dword [rdi + 4], esi
0x00004a54      c3             ret
0x00004a55      90             nop
0x00004a56      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004a60      488d05796720.  lea rax, obj.default_quoting_options    ; 0x20b1e0
0x00004a67      4885ff         test rdi, rdi
0x00004a6a      480f44f8       cmove rdi, rax
0x00004a6e      4885f6         test rsi, rsi
0x00004a71      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004a77      740e           je 0x4a87
0x00004a79      4885d2         test rdx, rdx
0x00004a7c      7409           je 0x4a87
0x00004a7e      48897728       mov qword [rdi + 0x28], rsi
0x00004a82      48895730       mov qword [rdi + 0x30], rdx
0x00004a86      c3             ret
0x00004a87      4883ec08       sub rsp, 8
0x00004a8b      e890c8ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004a90      4157           push r15
0x00004a92      4156           push r14
0x00004a94      488d05456720.  lea rax, obj.default_quoting_options    ; 0x20b1e0
0x00004a9b      4155           push r13
0x00004a9d      4154           push r12
0x00004a9f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004aa2      55             push rbp
0x00004aa3      53             push rbx
0x00004aa4      4c89c3         mov rbx, r8
0x00004aa7      4989f6         mov r14, rsi
0x00004aaa      4989d7         mov r15, rdx
0x00004aad      4883ec18       sub rsp, 0x18
0x00004ab1      4d85c0         test r8, r8
0x00004ab4      480f44d8       cmove rbx, rax
0x00004ab8      48894c2408     mov qword [rsp + 8], rcx
0x00004abd      e86ec8ffff     call sym.imp.__errno_location
0x00004ac2      448b20         mov r12d, dword [rax]
0x00004ac5      4889c5         mov rbp, rax
0x00004ac8      488d4308       lea rax, [rbx + 8]
0x00004acc      4883ec08       sub rsp, 8
0x00004ad0      448b4b04       mov r9d, dword [rbx + 4]
0x00004ad4      ff7330         push qword [rbx + 0x30]
0x00004ad7      448b03         mov r8d, dword [rbx]
0x00004ada      ff7328         push qword [rbx + 0x28]
0x00004add      4c89fa         mov rdx, r15
0x00004ae0      50             push rax
0x00004ae1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004ae6      4c89f6         mov rsi, r14
0x00004ae9      4c89ef         mov rdi, r13
0x00004aec      e89feaffff     call sym.quotearg_buffer_restyled
0x00004af1      44896500       mov dword [rbp], r12d
0x00004af5      4883c438       add rsp, 0x38
0x00004af9      5b             pop rbx
0x00004afa      5d             pop rbp
0x00004afb      415c           pop r12
0x00004afd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004aff      415e           pop r14
0x00004b01      415f           pop r15
0x00004b03      c3             ret
0x00004b04      6690           nop
0x00004b06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004b10      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004b12      4156           push r14
0x00004b14      488d05c56620.  lea rax, obj.default_quoting_options    ; 0x20b1e0
0x00004b1b      4155           push r13
0x00004b1d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00004b1f      4989d4         mov r12, rdx
0x00004b22      55             push rbp
0x00004b23      53             push rbx
0x00004b24      4889cb         mov rbx, rcx
0x00004b27      4989fe         mov r14, rdi
0x00004b2a      4989f7         mov r15, rsi
0x00004b2d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004b31      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004b34      480f44d8       cmove rbx, rax
0x00004b38      31ed           xor ebp, ebp
0x00004b3a      e8f1c7ffff     call sym.imp.__errno_location
0x00004b3f      4d85e4         test r12, r12
0x00004b42      4989c5         mov r13, rax
0x00004b45      8b00           mov eax, dword [rax]
0x00004b47      400f94c5       sete bpl
0x00004b4b      0b6b04         or ebp, dword [rbx + 4]
0x00004b4e      4c8d5308       lea r10, [rbx + 8]
0x00004b52      4883ec08       sub rsp, 8
0x00004b56      448b03         mov r8d, dword [rbx]
0x00004b59      4c89f9         mov rcx, r15
0x00004b5c      89442414       mov dword [rsp + 0x14], eax
0x00004b60      ff7330         push qword [rbx + 0x30]
0x00004b63      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004b66      ff7328         push qword [rbx + 0x28]
0x00004b69      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00004b6b      31f6           xor esi, esi
0x00004b6d      4189e9         mov r9d, ebp
0x00004b70      31ff           xor edi, edi
0x00004b72      4c89542440     mov qword [rsp + 0x40], r10
0x00004b77      e814eaffff     call sym.quotearg_buffer_restyled
0x00004b7c      488d7001       lea rsi, [rax + 1]
0x00004b80      4889442448     mov qword [rsp + 0x48], rax
0x00004b85      4883c420       add rsp, 0x20
0x00004b89      4889f7         mov rdi, rsi
0x00004b8c      4889742418     mov qword [rsp + 0x18], rsi
0x00004b91      e81a090000     call sym.xmalloc
0x00004b96      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00004b9b      4883ec08       sub rsp, 8
0x00004b9f      ff7330         push qword [rbx + 0x30]
0x00004ba2      ff7328         push qword [rbx + 0x28]
0x00004ba5      4c8b542438     mov r10, qword [rsp + 0x38]
0x00004baa      4189e9         mov r9d, ebp
0x00004bad      448b03         mov r8d, dword [rbx]
0x00004bb0      4c89f9         mov rcx, r15
0x00004bb3      4c89f2         mov rdx, r14
0x00004bb6      4889c7         mov rdi, rax
0x00004bb9      4152           push r10
0x00004bbb      488b742438     mov rsi, qword [rsp + 0x38]
0x00004bc0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004bc5      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004bc9      4883c420       add rsp, 0x20
0x00004bcd      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004bd0      41894500       mov dword [r13], eax
0x00004bd4      7409           je 0x4bdf
0x00004bd6      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00004bdb      4d891c24       mov qword [r12], r11
0x00004bdf      488b442410     mov rax, qword [rsp + 0x10]
0x00004be4      4883c438       add rsp, 0x38
0x00004be8      5b             pop rbx
0x00004be9      5d             pop rbp
0x00004bea      415c           pop r12
0x00004bec      415d           pop r13
0x00004bee      415e           pop r14
0x00004bf0      415f           pop r15
0x00004bf2      c3             ret
0x00004bf3      0f1f00         nop dword [rax]
0x00004bf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004c00      4889d1         mov rcx, rdx
0x00004c03      31d2           xor edx, edx
0x00004c05      e906ffffff     jmp sym.quotearg_alloc_mem
0x00004c0a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004c10      8b0542642000   mov eax, dword [obj.nslots]             ; [0x20b058:4]=1
0x00004c16      4154           push r12
0x00004c18      4c8b25416420.  mov r12, qword [obj.slotvec]            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x00004c1f      55             push rbp
0x00004c20      53             push rbx
0x00004c21      83f801         cmp eax, 1
0x00004c24      7e2b           jle 0x4c51                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004c26      83e802         sub eax, 2
0x00004c29      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004c2e      48c1e004       shl rax, 4
0x00004c32      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004c37      660f1f840000.  nop word [rax + rax]
0x00004c40      488b3b         mov rdi, qword [rbx]
0x00004c43      4883c310       add rbx, 0x10
0x00004c47      e8c4c6ffff     call sym.imp.free
0x00004c4c      4839eb         cmp rbx, rbp
0x00004c4f      75ef           jne 0x4c40
0x00004c51      498b7c2408     mov rdi, qword [r12 + 8]
0x00004c56      488d1d836420.  lea rbx, obj.slot0                      ; 0x20b0e0
0x00004c5d      4839df         cmp rdi, rbx
0x00004c60      7417           je 0x4c79
0x00004c62      e8a9c6ffff     call sym.imp.free
0x00004c67      48c705fe6320.  mov qword [obj.slotvec0], 0x100         ; [0x20b070:8]=256
0x00004c72      48891dff6320.  mov qword [0x0020b078], rbx             ; [0x20b078:8]=0x20b0e0 obj.slot0
0x00004c79      488d1df06320.  lea rbx, obj.slotvec0                   ; 0x20b070
0x00004c80      4939dc         cmp r12, rbx
0x00004c83      740f           je 0x4c94
0x00004c85      4c89e7         mov rdi, r12
0x00004c88      e883c6ffff     call sym.imp.free
0x00004c8d      48891dcc6320.  mov qword [obj.slotvec], rbx            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x00004c94      5b             pop rbx
0x00004c95      c705b9632000.  mov dword [obj.nslots], 1               ; [0x20b058:4]=1
0x00004c9f      5d             pop rbp
0x00004ca0      415c           pop r12
0x00004ca2      c3             ret
0x00004ca3      0f1f00         nop dword [rax]
0x00004ca6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004cb0      488d0d296520.  lea rcx, obj.default_quoting_options    ; 0x20b1e0
0x00004cb7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004cbe      e90dfbffff     jmp sym.quotearg_n_options
0x00004cc3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004cc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004cd0      488d0d096520.  lea rcx, obj.default_quoting_options    ; 0x20b1e0
0x00004cd7      e9f4faffff     jmp sym.quotearg_n_options
0x00004cdc      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004ce0      488d0df96420.  lea rcx, obj.default_quoting_options    ; 0x20b1e0
0x00004ce7      4889fe         mov rsi, rdi
0x00004cea      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004cf1      31ff           xor edi, edi
0x00004cf3      e9d8faffff     jmp sym.quotearg_n_options
0x00004cf8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004d00      488d0dd96420.  lea rcx, obj.default_quoting_options    ; 0x20b1e0
0x00004d07      4889f2         mov rdx, rsi
0x00004d0a      4889fe         mov rsi, rdi
0x00004d0d      31ff           xor edi, edi
0x00004d0f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004d14      6690           nop
0x00004d16      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004d20      4883ec48       sub rsp, 0x48
0x00004d24      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004d27      64488b142528.  mov rdx, qword fs:[0x28]
0x00004d30      4889542438     mov qword [rsp + 0x38], rdx
0x00004d35      31d2           xor edx, edx
0x00004d37      83fe0a         cmp esi, 0xa
0x00004d3a      7468           je 0x4da4
0x00004d3c      893424         mov dword [rsp], esi
0x00004d3f      4889e1         mov rcx, rsp
0x00004d42      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004d49      4889c6         mov rsi, rax
0x00004d4c      48c744240400.  mov qword [rsp + 4], 0
0x00004d55      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004d5e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004d67      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004d70      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004d79      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004d82      c74424340000.  mov dword [rsp + 0x34], 0
0x00004d8a      e841faffff     call sym.quotearg_n_options
0x00004d8f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004d94      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004d9d      750a           jne 0x4da9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00004d9f      4883c448       add rsp, 0x48
0x00004da3      c3             ret
0x00004da4      e877c5ffff     call sym.imp.abort
0x00004da9      e852c6ffff     call sym.imp.__stack_chk_fail
0x00004dae      6690           nop
;-- quotearg_n_style_mem:
0x00004db0      4883ec48       sub rsp, 0x48
0x00004db4      4889d0         mov rax, rdx
0x00004db7      4889ca         mov rdx, rcx
0x00004dba      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004dc3      48894c2438     mov qword [rsp + 0x38], rcx
0x00004dc8      31c9           xor ecx, ecx
0x00004dca      83fe0a         cmp esi, 0xa
0x00004dcd      7461           je 0x4e30
0x00004dcf      893424         mov dword [rsp], esi
0x00004dd2      4889e1         mov rcx, rsp
0x00004dd5      4889c6         mov rsi, rax
0x00004dd8      48c744240400.  mov qword [rsp + 4], 0
0x00004de1      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004dea      48c744241400.  mov qword [rsp + 0x14], 0
0x00004df3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004dfc      48c744242400.  mov qword [rsp + 0x24], 0
0x00004e05      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004e0e      c74424340000.  mov dword [rsp + 0x34], 0
0x00004e16      e8b5f9ffff     call sym.quotearg_n_options
0x00004e1b      488b542438     mov rdx, qword [rsp + 0x38]
0x00004e20      644833142528.  xor rdx, qword fs:[0x28]
0x00004e29      750a           jne 0x4e35
0x00004e2b      4883c448       add rsp, 0x48
0x00004e2f      c3             ret
0x00004e30      e8ebc4ffff     call sym.imp.abort
0x00004e35      e8c6c5ffff     call sym.imp.__stack_chk_fail
0x00004e3a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004e40      4889f2         mov rdx, rsi
0x00004e43      89fe           mov esi, edi
0x00004e45      31ff           xor edi, edi
0x00004e47      e9d4feffff     jmp sym.quotearg_n_style
0x00004e4c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004e50      4889d1         mov rcx, rdx
0x00004e53      4889f2         mov rdx, rsi
0x00004e56      89fe           mov esi, edi
0x00004e58      31ff           xor edi, edi
0x00004e5a      e951ffffff     jmp sym.quotearg_n_style_mem
0x00004e5f      90             nop
;-- quotearg_char_mem:
0x00004e60      4883ec48       sub rsp, 0x48
0x00004e64      89d1           mov ecx, edx
0x00004e66      64488b042528.  mov rax, qword fs:[0x28]
0x00004e6f      4889442438     mov qword [rsp + 0x38], rax
0x00004e74      31c0           xor eax, eax
0x00004e76      488b05936320.  mov rax, qword [0x0020b210]             ; [0x20b210:8]=0
0x00004e7d      4989e0         mov r8, rsp
0x00004e80      83e11f         and ecx, 0x1f
0x00004e83      660f6f055563.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004e8b      4889442430     mov qword [rsp + 0x30], rax
0x00004e90      89d0           mov eax, edx
0x00004e92      0f290424       movaps xmmword [rsp], xmm0
0x00004e96      c0e805         shr al, 5
0x00004e99      0fb6c0         movzx eax, al
0x00004e9c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004ea1      660f6f054763.  movdqa xmm0, xmmword [0x0020b1f0]
0x00004ea9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004eae      660f6f054a63.  movdqa xmm0, xmmword [0x0020b200]
0x00004eb6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004ebb      418b11         mov edx, dword [r9]
0x00004ebe      89d0           mov eax, edx
0x00004ec0      d3e8           shr eax, cl
0x00004ec2      f7d0           not eax
0x00004ec4      83e001         and eax, 1
0x00004ec7      d3e0           shl eax, cl
0x00004ec9      4c89c1         mov rcx, r8
0x00004ecc      31d0           xor eax, edx
0x00004ece      4889f2         mov rdx, rsi
0x00004ed1      4889fe         mov rsi, rdi
0x00004ed4      418901         mov dword [r9], eax
0x00004ed7      31ff           xor edi, edi
0x00004ed9      e8f2f8ffff     call sym.quotearg_n_options
0x00004ede      488b742438     mov rsi, qword [rsp + 0x38]
0x00004ee3      644833342528.  xor rsi, qword fs:[0x28]
0x00004eec      7505           jne 0x4ef3
0x00004eee      4883c448       add rsp, 0x48
0x00004ef2      c3             ret
0x00004ef3      e808c5ffff     call sym.imp.__stack_chk_fail
0x00004ef8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004f00      400fbed6       movsx edx, sil
0x00004f04      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004f0b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00004f10      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004f15      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004f1c      e93fffffff     jmp sym.quotearg_char_mem
0x00004f21      0f1f440000     nop dword [rax + rax]
0x00004f26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004f30      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004f35      e926ffffff     jmp sym.quotearg_char_mem
0x00004f3a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004f40      4883ec48       sub rsp, 0x48
0x00004f44      4889d0         mov rax, rdx
0x00004f47      64488b142528.  mov rdx, qword fs:[0x28]
0x00004f50      4889542438     mov qword [rsp + 0x38], rdx
0x00004f55      31d2           xor edx, edx
0x00004f57      83fe0a         cmp esi, 0xa
0x00004f5a      7468           je 0x4fc4
0x00004f5c      893424         mov dword [rsp], esi
0x00004f5f      4889e1         mov rcx, rsp
0x00004f62      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004f69      4889c6         mov rsi, rax
0x00004f6c      48c744240400.  mov qword [rsp + 4], 0
0x00004f75      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00004f7e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004f87      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004f90      48c744242400.  mov qword [rsp + 0x24], 0
0x00004f99      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004fa2      c74424340000.  mov dword [rsp + 0x34], 0
0x00004faa      e821f8ffff     call sym.quotearg_n_options
0x00004faf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004fb4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004fbd      750a           jne 0x4fc9
0x00004fbf      4883c448       add rsp, 0x48
0x00004fc3      c3             ret
0x00004fc4      e857c3ffff     call sym.imp.abort
0x00004fc9      e832c4ffff     call sym.imp.__stack_chk_fail
0x00004fce      6690           nop
;-- quotearg_n_custom_mem:
0x00004fd0      4883ec48       sub rsp, 0x48
0x00004fd4      4989c9         mov r9, rcx
0x00004fd7      488b0d326220.  mov rcx, qword [0x0020b210]             ; [0x20b210:8]=0
0x00004fde      660f6f05fa61.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004fe6      64488b042528.  mov rax, qword fs:[0x28]
0x00004fef      4889442438     mov qword [rsp + 0x38], rax
0x00004ff4      31c0           xor eax, eax
0x00004ff6      0f290424       movaps xmmword [rsp], xmm0
0x00004ffa      4885f6         test rsi, rsi
0x00004ffd      48894c2430     mov qword [rsp + 0x30], rcx
0x00005002      c704240a0000.  mov dword [rsp], 0xa
0x00005009      660f6f05df61.  movdqa xmm0, xmmword [0x0020b1f0]
0x00005011      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005016      660f6f05e261.  movdqa xmm0, xmmword [0x0020b200]
0x0000501e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005023      7432           je 0x5057
0x00005025      4885d2         test rdx, rdx
0x00005028      742d           je 0x5057
0x0000502a      4889742428     mov qword [rsp + 0x28], rsi
0x0000502f      4889542430     mov qword [rsp + 0x30], rdx
0x00005034      4889e1         mov rcx, rsp
0x00005037      4c89c2         mov rdx, r8
0x0000503a      4c89ce         mov rsi, r9
0x0000503d      e88ef7ffff     call sym.quotearg_n_options
0x00005042      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005047      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005050      750a           jne 0x505c
0x00005052      4883c448       add rsp, 0x48
0x00005056      c3             ret
0x00005057      e8c4c2ffff     call sym.imp.abort
0x0000505c      e89fc3ffff     call sym.imp.__stack_chk_fail
0x00005061      0f1f440000     nop dword [rax + rax]
0x00005066      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00005070      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005077      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000507c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00005080      4889d1         mov rcx, rdx
0x00005083      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000508a      4889f2         mov rdx, rsi
0x0000508d      4889fe         mov rsi, rdi
0x00005090      31ff           xor edi, edi
0x00005092      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00005097      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x000050a0      4989c8         mov r8, rcx
0x000050a3      4889d1         mov rcx, rdx
0x000050a6      4889f2         mov rdx, rsi
0x000050a9      4889fe         mov rsi, rdi
0x000050ac      31ff           xor edi, edi
0x000050ae      e91dffffff     jmp sym.quotearg_n_custom_mem
0x000050b3      0f1f00         nop dword [rax]
0x000050b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x000050c0      488d0d595f20.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x000050c7      e904f7ffff     jmp sym.quotearg_n_options
0x000050cc      0f1f4000       nop dword [rax]
;-- quote_mem:
0x000050d0      488d0d495f20.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x000050d7      4889f2         mov rdx, rsi
0x000050da      4889fe         mov rsi, rdi
0x000050dd      31ff           xor edi, edi
0x000050df      e9ecf6ffff     jmp sym.quotearg_n_options
0x000050e4      6690           nop
0x000050e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x000050f0      488d0d295f20.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x000050f7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000050fe      e9cdf6ffff     jmp sym.quotearg_n_options
0x00005103      0f1f00         nop dword [rax]
0x00005106      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00005110      488d0d095f20.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x00005117      4889fe         mov rsi, rdi
0x0000511a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005121      31ff           xor edi, edi
0x00005123      e9a8f6ffff     jmp sym.quotearg_n_options
0x00005128      0f1f84000000.  nop dword [rax + rax]
;-- strintcmp:
0x00005130      440fb607       movzx r8d, byte [rdi]                   ; ../coreutils-8.31/lib/strintcmp.c:30
0x00005134      0fb616         movzx edx, byte [rsi]
0x00005137      4180f82d       cmp r8b, 0x2d
0x0000513b      0f849f000000   je 0x51e0
0x00005141      80fa2d         cmp dl, 0x2d
0x00005144      0f84de000000   je 0x5228
0x0000514a      660f1f440000   nop word [rax + rax]
0x00005150      4180f830       cmp r8b, 0x30
0x00005154      0f848e010000   je 0x52e8
0x0000515a      80fa30         cmp dl, 0x30
0x0000515d      0f8475010000   je 0x52d8
0x00005163      0fb6c2         movzx eax, dl
0x00005166      4438c2         cmp dl, r8b
0x00005169      8d48d0         lea ecx, [rax - 0x30]
0x0000516c      0f8596010000   jne 0x5308
0x00005172      83f909         cmp ecx, 9
0x00005175      0f8725020000   ja 0x53a0
0x0000517b      4883c701       add rdi, 1
0x0000517f      4883c601       add rsi, 1
0x00005183      0fb606         movzx eax, byte [rsi]
0x00005186      440fb607       movzx r8d, byte [rdi]
0x0000518a      89c2           mov edx, eax
0x0000518c      8d48d0         lea ecx, [rax - 0x30]
0x0000518f      4138c0         cmp r8b, al
0x00005192      0f8570010000   jne 0x5308
0x00005198      83f909         cmp ecx, 9
0x0000519b      76de           jbe 0x517b
0x0000519d      410fb6d0       movzx edx, r8b
0x000051a1      4531c9         xor r9d, r9d
0x000051a4      83f909         cmp ecx, 9
0x000051a7      0f87f3010000   ja 0x53a0
0x000051ad      0f1f00         nop dword [rax]
0x000051b0      31c9           xor ecx, ecx
0x000051b2      660f1f440000   nop word [rax + rax]
0x000051b8      0fb6440e01     movzx eax, byte [rsi + rcx + 1]
0x000051bd      4883c101       add rcx, 1
0x000051c1      83e830         sub eax, 0x30
0x000051c4      83f809         cmp eax, 9
0x000051c7      76ef           jbe 0x51b8
0x000051c9      4939c9         cmp r9, rcx
0x000051cc      0f84d1010000   je 0x53a3
0x000051d2      19c0           sbb eax, eax
0x000051d4      83c801         or eax, 1
0x000051d7      c3             ret
0x000051d8      0f1f84000000.  nop dword [rax + rax]
0x000051e0      4883c701       add rdi, 1
0x000051e4      0fb60f         movzx ecx, byte [rdi]
0x000051e7      80f930         cmp cl, 0x30
0x000051ea      74f4           je 0x51e0
0x000051ec      0fb6c1         movzx eax, cl
0x000051ef      80fa2d         cmp dl, 0x2d
0x000051f2      448d40d0       lea r8d, [rax - 0x30]
0x000051f6      7468           je 0x5260
0x000051f8      4183f809       cmp r8d, 9
0x000051fc      0f86cc010000   jbe 0x53ce
0x00005202      660f1f440000   nop word [rax + rax]
0x00005208      80fa30         cmp dl, 0x30
0x0000520b      0f84e7000000   je 0x52f8
0x00005211      83ea30         sub edx, 0x30
0x00005214      4531c9         xor r9d, r9d
0x00005217      83fa09         cmp edx, 9
0x0000521a      410f96c1       setbe r9b
0x0000521e      4489c8         mov eax, r9d
0x00005221      f7d8           neg eax
0x00005223      c3             ret
0x00005224      0f1f4000       nop dword [rax]
0x00005228      4883c601       add rsi, 1
0x0000522c      0fb606         movzx eax, byte [rsi]
0x0000522f      3c30           cmp al, 0x30
0x00005231      74f5           je 0x5228
0x00005233      8d50d0         lea edx, [rax - 0x30]
0x00005236      b801000000     mov eax, 1
0x0000523b      83fa09         cmp edx, 9
0x0000523e      0f86ff000000   jbe 0x5343
0x00005244      4180f830       cmp r8b, 0x30
0x00005248      0f84fa000000   je 0x5348
0x0000524e      4183e830       sub r8d, 0x30
0x00005252      31c0           xor eax, eax
0x00005254      4183f809       cmp r8d, 9
0x00005258      0f96c0         setbe al
0x0000525b      c3             ret
0x0000525c      0f1f4000       nop dword [rax]
0x00005260      4883c601       add rsi, 1
0x00005264      440fb60e       movzx r9d, byte [rsi]
0x00005268      4180f930       cmp r9b, 0x30
0x0000526c      74f2           je 0x5260
0x0000526e      4438c9         cmp cl, r9b
0x00005271      0f853d010000   jne 0x53b4
0x00005277      4183f809       cmp r8d, 9
0x0000527b      8d50d0         lea edx, [rax - 0x30]
0x0000527e      7721           ja 0x52a1
0x00005280      4883c701       add rdi, 1
0x00005284      4883c601       add rsi, 1
0x00005288      0fb606         movzx eax, byte [rsi]
0x0000528b      0fb60f         movzx ecx, byte [rdi]
0x0000528e      4189c1         mov r9d, eax
0x00005291      8d50d0         lea edx, [rax - 0x30]
0x00005294      38c1           cmp cl, al
0x00005296      0f85bc000000   jne 0x5358
0x0000529c      83fa09         cmp edx, 9
0x0000529f      76df           jbe 0x5280
0x000052a1      4531d2         xor r10d, r10d
0x000052a4      83fa09         cmp edx, 9
0x000052a7      0f87f3000000   ja 0x53a0
0x000052ad      31d2           xor edx, edx
0x000052af      90             nop
0x000052b0      0fb6441601     movzx eax, byte [rsi + rdx + 1]
0x000052b5      4883c201       add rdx, 1
0x000052b9      83e830         sub eax, 0x30
0x000052bc      83f809         cmp eax, 9
0x000052bf      76ef           jbe 0x52b0
0x000052c1      4939d2         cmp r10, rdx
0x000052c4      0f84f3000000   je 0x53bd
0x000052ca      19c0           sbb eax, eax
0x000052cc      83e002         and eax, 2
0x000052cf      83e801         sub eax, 1
0x000052d2      c3             ret
0x000052d3      0f1f440000     nop dword [rax + rax]
0x000052d8      4883c601       add rsi, 1
0x000052dc      0fb616         movzx edx, byte [rsi]
0x000052df      e976feffff     jmp 0x515a
0x000052e4      0f1f4000       nop dword [rax]
0x000052e8      4883c701       add rdi, 1
0x000052ec      440fb607       movzx r8d, byte [rdi]
0x000052f0      e95bfeffff     jmp 0x5150
0x000052f5      0f1f00         nop dword [rax]
0x000052f8      4883c601       add rsi, 1
0x000052fc      0fb616         movzx edx, byte [rsi]
0x000052ff      e904ffffff     jmp 0x5208
0x00005304      0f1f4000       nop dword [rax]
0x00005308      410fb6c0       movzx eax, r8b
0x0000530c      83e830         sub eax, 0x30
0x0000530f      83f809         cmp eax, 9
0x00005312      0f8789feffff   ja 0x51a1
0x00005318      4531c9         xor r9d, r9d
0x0000531b      0f1f440000     nop dword [rax + rax]
0x00005320      420fb6440f01   movzx eax, byte [rdi + r9 + 1]
0x00005326      4983c101       add r9, 1
0x0000532a      83e830         sub eax, 0x30
0x0000532d      83f809         cmp eax, 9
0x00005330      76ee           jbe 0x5320
0x00005332      83f909         cmp ecx, 9
0x00005335      0f8675feffff   jbe 0x51b0
0x0000533b      31c0           xor eax, eax
0x0000533d      4d85c9         test r9, r9
0x00005340      0f95c0         setne al
0x00005343      f3c3           ret
0x00005345      0f1f00         nop dword [rax]
0x00005348      4883c701       add rdi, 1
0x0000534c      440fb607       movzx r8d, byte [rdi]
0x00005350      e9effeffff     jmp 0x5244
0x00005355      0f1f00         nop dword [rax]
0x00005358      440fb6c1       movzx r8d, cl
0x0000535c      4183e830       sub r8d, 0x30
0x00005360      4183f809       cmp r8d, 9
0x00005364      0f8737ffffff   ja 0x52a1
0x0000536a      4531d2         xor r10d, r10d
0x0000536d      0f1f00         nop dword [rax]
0x00005370      420fb6441701   movzx eax, byte [rdi + r10 + 1]
0x00005376      4983c201       add r10, 1
0x0000537a      83e830         sub eax, 0x30
0x0000537d      83f809         cmp eax, 9
0x00005380      76ee           jbe 0x5370
0x00005382      83fa09         cmp edx, 9
0x00005385      0f8622ffffff   jbe 0x52ad
0x0000538b      31c0           xor eax, eax
0x0000538d      4d85d2         test r10, r10
0x00005390      0f95c0         setne al
0x00005393      f7d8           neg eax
0x00005395      c3             ret
0x00005396      662e0f1f8400.  nop word cs:[rax + rax]
0x000053a0      31c0           xor eax, eax
0x000053a2      c3             ret
0x000053a3      31c0           xor eax, eax
0x000053a5      4d85c9         test r9, r9
0x000053a8      7499           je 0x5343
0x000053aa      450fb6c8       movzx r9d, r8b
0x000053ae      4489c8         mov eax, r9d
0x000053b1      29d0           sub eax, edx
0x000053b3      c3             ret
0x000053b4      410fb6c1       movzx eax, r9b
0x000053b8      8d50d0         lea edx, [rax - 0x30]
0x000053bb      eba3           jmp 0x5360
0x000053bd      31c0           xor eax, eax
0x000053bf      4d85d2         test r10, r10
0x000053c2      0f847bffffff   je 0x5343
0x000053c8      4489c8         mov eax, r9d
0x000053cb      29c8           sub eax, ecx
0x000053cd      c3             ret
0x000053ce      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000053d3      c3             ret
0x000053d4      662e0f1f8400.  nop word cs:[rax + rax]
0x000053de      6690           nop
;-- verror_at_line:
0x000053e0      4156           push r14                                ; ../coreutils-8.31/lib/verror.c:57
0x000053e2      4155           push r13
0x000053e4      4189f5         mov r13d, esi
0x000053e7      4154           push r12
0x000053e9      55             push rbp
0x000053ea      4189fc         mov r12d, edi
0x000053ed      53             push rbx
0x000053ee      4c89ce         mov rsi, r9                             ; ../coreutils-8.31/lib/verror.c:58
0x000053f1      4c89c7         mov rdi, r8
0x000053f4      4889d5         mov rbp, rdx                            ; ../coreutils-8.31/lib/verror.c:57
0x000053f7      4189ce         mov r14d, ecx
0x000053fa      e891040000     call sym.xvasprintf                     ; ../coreutils-8.31/lib/verror.c:58
0x000053ff      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/verror.c:59
0x00005402      7463           je 0x5467
0x00005404      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/verror.c:64
0x00005407      4889c3         mov rbx, rax
0x0000540a      7434           je 0x5440
0x0000540c      4c8d05803900.  lea r8, [0x00008d93]                    ; ../coreutils-8.31/lib/verror.c:65 ; "%s"
0x00005413      4489e7         mov edi, r12d
0x00005416      4989c1         mov r9, rax
0x00005419      4489f1         mov ecx, r14d
0x0000541c      4889ea         mov rdx, rbp
0x0000541f      4489ee         mov esi, r13d
0x00005422      31c0           xor eax, eax
0x00005424      e817bfffff     call sym.imp.error_at_line
0x00005429      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/verror.c:76
0x0000542c      5b             pop rbx                                 ; ../coreutils-8.31/lib/verror.c:77
0x0000542d      5d             pop rbp
0x0000542e      415c           pop r12
0x00005430      415d           pop r13
0x00005432      415e           pop r14
0x00005434      e9d7beffff     jmp sym.imp.free                        ; ../coreutils-8.31/lib/verror.c:76
0x00005439      0f1f80000000.  nop dword [rax]
0x00005440      488d154c3900.  lea rdx, [0x00008d93]                   ; ../coreutils-8.31/lib/verror.c:67 ; "%s"
0x00005447      4489e7         mov edi, r12d
0x0000544a      4889c1         mov rcx, rax
0x0000544d      4489ee         mov esi, r13d
0x00005450      31c0           xor eax, eax
0x00005452      e809c1ffff     call sym.imp.error
0x00005457      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/verror.c:76
0x0000545a      5b             pop rbx                                 ; ../coreutils-8.31/lib/verror.c:77
0x0000545b      5d             pop rbp
0x0000545c      415c           pop r12
0x0000545e      415d           pop r13
0x00005460      415e           pop r14
0x00005462      e9a9beffff     jmp sym.imp.free                        ; ../coreutils-8.31/lib/verror.c:76
0x00005467      488d353a3e00.  lea rsi, [0x000092a8]                   ; ../coreutils-8.31/lib/verror.c:73 ; "unable to display error message"
0x0000546e      ba05000000     mov edx, 5
0x00005473      31ff           xor edi, edi
0x00005475      e846bfffff     call sym.imp.dcgettext
0x0000547a      4889c3         mov rbx, rax
0x0000547d      e8aebeffff     call sym.imp.__errno_location
0x00005482      8b30           mov esi, dword [rax]
0x00005484      4889da         mov rdx, rbx
0x00005487      31ff           xor edi, edi
0x00005489      31c0           xor eax, eax
0x0000548b      e8d0c0ffff     call sym.imp.error
0x00005490      e88bbeffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/verror.c:74
0x00005495      90             nop
0x00005496      662e0f1f8400.  nop word cs:[rax + rax]
;-- verror:
0x000054a0      4989d0         mov r8, rdx                             ; ../coreutils-8.31/lib/verror.c:44
0x000054a3      4989c9         mov r9, rcx
0x000054a6      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/verror.c:45
0x000054a8      31c9           xor ecx, ecx
0x000054aa      e931ffffff     jmp sym.verror_at_line
0x000054af      90             nop
;-- xmalloc:
0x000054b0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000054b1      4889fb         mov rbx, rdi
0x000054b4      e827c0ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000054b9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000054bc      7505           jne 0x54c3
0x000054be      4885db         test rbx, rbx
0x000054c1      7502           jne 0x54c5
0x000054c3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000054c4      c3             ret
0x000054c5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000054ca      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000054d0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000054d3      48f7e6         mul rsi
0x000054d6      4889c7         mov rdi, rax
0x000054d9      0f90c0         seto al
0x000054dc      4885ff         test rdi, rdi
0x000054df      780a           js 0x54eb
0x000054e1      0fb6c0         movzx eax, al
0x000054e4      4885c0         test rax, rax
0x000054e7      7502           jne 0x54eb
0x000054e9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x000054eb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x000054ef      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x000054f4      6690           nop
0x000054f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00005500      ebae           jmp sym.xmalloc
0x00005502      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00005506      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00005510      4885f6         test rsi, rsi
0x00005513      53             push rbx
0x00005514      4889f3         mov rbx, rsi
0x00005517      7505           jne 0x551e
0x00005519      4885ff         test rdi, rdi
0x0000551c      751a           jne 0x5538
0x0000551e      4889de         mov rsi, rbx
0x00005521      e80ac0ffff     call sym.imp.realloc
0x00005526      4885c0         test rax, rax
0x00005529      7505           jne 0x5530
0x0000552b      4885db         test rbx, rbx
0x0000552e      7511           jne 0x5541                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00005530      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00005531      c3             ret
0x00005532      660f1f440000   nop word [rax + rax]
0x00005538      e8d3bdffff     call sym.imp.free
0x0000553d      31c0           xor eax, eax
0x0000553f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00005540      c3             ret
0x00005541      e8ba010000     call sym.xalloc_die
0x00005546      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00005550      4889f0         mov rax, rsi
0x00005553      48f7e2         mul rdx
0x00005556      4889c6         mov rsi, rax
0x00005559      0f90c0         seto al
0x0000555c      4885f6         test rsi, rsi
0x0000555f      780a           js 0x556b
0x00005561      0fb6c0         movzx eax, al
0x00005564      4885c0         test rax, rax
0x00005567      7502           jne 0x556b
0x00005569      eba5           jmp sym.xrealloc
0x0000556b      4883ec08       sub rsp, 8
0x0000556f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005574      6690           nop
0x00005576      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005580      4885ff         test rdi, rdi
0x00005583      4989d1         mov r9, rdx
0x00005586      488b0e         mov rcx, qword [rsi]
0x00005589      7435           je 0x55c0
0x0000558b      31d2           xor edx, edx
0x0000558d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005597      49f7f1         div r9
0x0000559a      4839c8         cmp rax, rcx
0x0000559d      763c           jbe 0x55db
0x0000559f      4889c8         mov rax, rcx
0x000055a2      48d1e8         shr rax, 1
0x000055a5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000055aa      48890e         mov qword [rsi], rcx
0x000055ad      490fafc9       imul rcx, r9
0x000055b1      4889ce         mov rsi, rcx
0x000055b4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000055b9      0f1f80000000.  nop dword [rax]
0x000055c0      4885c9         test rcx, rcx
0x000055c3      7423           je 0x55e8
0x000055c5      4889c8         mov rax, rcx
0x000055c8      49f7e1         mul r9
0x000055cb      0f90c2         seto dl
0x000055ce      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000055d1      0fb6d2         movzx edx, dl
0x000055d4      7805           js 0x55db
0x000055d6      4885d2         test rdx, rdx
0x000055d9      74cf           je 0x55aa
0x000055db      4883ec08       sub rsp, 8
0x000055df      e81c010000     call sym.xalloc_die
0x000055e4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x000055e8      31d2           xor edx, edx
0x000055ea      b880000000     mov eax, 0x80
0x000055ef      4531c0         xor r8d, r8d
0x000055f2      49f7f1         div r9
0x000055f5      4885c0         test rax, rax
0x000055f8      410f94c0       sete r8b
0x000055fc      498d0c00       lea rcx, [r8 + rax]
0x00005600      ebc3           jmp 0x55c5
0x00005602      0f1f4000       nop dword [rax]
0x00005606      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00005610      4885ff         test rdi, rdi
0x00005613      488b06         mov rax, qword [rsi]
0x00005616      7428           je 0x5640
0x00005618      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00005622      4839d0         cmp rax, rdx
0x00005625      772a           ja 0x5651
0x00005627      4889c2         mov rdx, rax
0x0000562a      48d1ea         shr rdx, 1
0x0000562d      488d440201     lea rax, [rdx + rax + 1]
0x00005632      488906         mov qword [rsi], rax
0x00005635      4889c6         mov rsi, rax
0x00005638      e9d3feffff     jmp sym.xrealloc
0x0000563d      0f1f00         nop dword [rax]
0x00005640      4885c0         test rax, rax
0x00005643      ba80000000     mov edx, 0x80
0x00005648      480f44c2       cmove rax, rdx
0x0000564c      4885c0         test rax, rax
0x0000564f      79e1           jns 0x5632
0x00005651      4883ec08       sub rsp, 8
0x00005655      e8a6000000     call sym.xalloc_die
0x0000565a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005660      53             push rbx
0x00005661      4889fb         mov rbx, rdi
0x00005664      e847feffff     call sym.xmalloc
0x00005669      4889da         mov rdx, rbx
0x0000566c      31f6           xor esi, esi
0x0000566e      4889c7         mov rdi, rax
0x00005671      5b             pop rbx
0x00005672      e9c9bdffff     jmp sym.imp.memset
0x00005677      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005680      4889f8         mov rax, rdi
0x00005683      4883ec08       sub rsp, 8
0x00005687      48f7e6         mul rsi
0x0000568a      0f90c2         seto dl
0x0000568d      4885c0         test rax, rax
0x00005690      7817           js 0x56a9
0x00005692      0fb6d2         movzx edx, dl
0x00005695      4885d2         test rdx, rdx
0x00005698      750f           jne 0x56a9
0x0000569a      e8e1bdffff     call sym.imp.calloc
0x0000569f      4885c0         test rax, rax
0x000056a2      7405           je 0x56a9
0x000056a4      4883c408       add rsp, 8
0x000056a8      c3             ret
0x000056a9      e852000000     call sym.xalloc_die
0x000056ae      6690           nop
;-- xmemdup:
0x000056b0      55             push rbp
0x000056b1      53             push rbx
0x000056b2      4889fd         mov rbp, rdi
0x000056b5      4889f7         mov rdi, rsi
0x000056b8      4889f3         mov rbx, rsi
0x000056bb      4883ec08       sub rsp, 8
0x000056bf      e8ecfdffff     call sym.xmalloc
0x000056c4      4883c408       add rsp, 8
0x000056c8      4889da         mov rdx, rbx
0x000056cb      4889ee         mov rsi, rbp
0x000056ce      5b             pop rbx
0x000056cf      5d             pop rbp
0x000056d0      4889c7         mov rdi, rax
0x000056d3      e9d8bdffff     jmp sym.imp.memcpy
0x000056d8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x000056e0      53             push rbx
0x000056e1      4889fb         mov rbx, rdi
0x000056e4      e8f7bcffff     call sym.imp.strlen
0x000056e9      4889df         mov rdi, rbx
0x000056ec      488d7001       lea rsi, [rax + 1]
0x000056f0      5b             pop rbx
0x000056f1      ebbd           jmp sym.xmemdup
0x000056f3      662e0f1f8400.  nop word cs:[rax + rax]
0x000056fd      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005700      488d35c13b00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x92c8 ; "memory exhausted"
0x00005707      4883ec08       sub rsp, 8
0x0000570b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005710      31ff           xor edi, edi
0x00005712      e8a9bcffff     call sym.imp.dcgettext
0x00005717      8b3df3582000   mov edi, dword [obj.exit_failure]       ; [0x20b010:4]=1
0x0000571d      488d156f3600.  lea rdx, [0x00008d93]                   ; "%s"
0x00005724      4889c1         mov rcx, rax
0x00005727      31f6           xor esi, esi
0x00005729      31c0           xor eax, eax
0x0000572b      e830beffff     call sym.imp.error
0x00005730      e8ebbbffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005735      662e0f1f8400.  nop word cs:[rax + rax]
0x0000573f      90             nop
;-- xstrcat:
0x00005740      4157           push r15                                ; ../coreutils-8.31/lib/xvasprintf.c:34
0x00005742      4156           push r14
0x00005744      4155           push r13
0x00005746      4154           push r12
0x00005748      55             push rbp
0x00005749      53             push rbx
0x0000574a      4883ec28       sub rsp, 0x28
0x0000574e      64488b042528.  mov rax, qword fs:[0x28]
0x00005757      4889442418     mov qword [rsp + 0x18], rax
0x0000575c      31c0           xor eax, eax
0x0000575e      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/xvasprintf.c:44
0x00005761      f30f6f06       movdqu xmm0, xmmword [rsi]              ; ../coreutils-8.31/lib/xvasprintf.c:43
0x00005765      0f110424       movups xmmword [rsp], xmm0
0x00005769      4c8b7610       mov r14, qword [rsi + 0x10]
0x0000576d      4c89742410     mov qword [rsp + 0x10], r14
0x00005772      0f84a8000000   je 0x5820                               ; ../coreutils-8.31/lib/xvasprintf.c:44
0x00005778      4989fc         mov r12, rdi
0x0000577b      4989f7         mov r15, rsi
0x0000577e      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/xvasprintf.c:46
0x00005781      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/xvasprintf.c:42
0x00005783      49c7c5ffffff.  mov r13, 0xffffffffffffffff             ; ../coreutils-8.31/lib/xsize.h:66
0x0000578a      8b1424         mov edx, dword [rsp]                    ; ../coreutils-8.31/lib/xvasprintf.c:46
0x0000578d      83fa2f         cmp edx, 0x2f
0x00005790      0f87da000000   ja 0x5870
0x00005796      89d0           mov eax, edx
0x00005798      83c208         add edx, 8
0x0000579b      4c01f0         add rax, r14
0x0000579e      891424         mov dword [rsp], edx
0x000057a1      488b38         mov rdi, qword [rax]                    ; ../coreutils-8.31/lib/xvasprintf.c:47
0x000057a4      e837bcffff     call sym.imp.strlen
0x000057a9      4801c3         add rbx, rax                            ; ../coreutils-8.31/lib/xsize.h:66
0x000057ac      490f42dd       cmovb rbx, r13
0x000057b0      4883ed01       sub rbp, 1                              ; ../coreutils-8.31/lib/xvasprintf.c:44
0x000057b4      75d4           jne 0x578a
0x000057b6      4881fbffffff.  cmp rbx, 0x7fffffff                     ; ../coreutils-8.31/lib/xvasprintf.c:54
0x000057bd      0f879d000000   ja 0x5860
0x000057c3      488d7b01       lea rdi, [rbx + 1]                      ; ../coreutils-8.31/lib/xvasprintf.c:61
0x000057c7      e8e4fcffff     call sym.xmalloc
0x000057cc      4989c6         mov r14, rax
0x000057cf      4889c3         mov rbx, rax
0x000057d2      eb31           jmp 0x5805
0x000057d4      89d0           mov eax, edx                            ; ../coreutils-8.31/lib/xvasprintf.c:65
0x000057d6      49034710       add rax, qword [r15 + 0x10]
0x000057da      83c208         add edx, 8
0x000057dd      418917         mov dword [r15], edx
0x000057e0      4c8b28         mov r13, qword [rax]
0x000057e3      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/lib/xvasprintf.c:66
0x000057e6      e8f5bbffff     call sym.imp.strlen
0x000057eb      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000057ee      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/xvasprintf.c:66
0x000057f1      4889c2         mov rdx, rax                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000057f4      4c89ee         mov rsi, r13
0x000057f7      4801eb         add rbx, rbp                            ; ../coreutils-8.31/lib/xvasprintf.c:68
0x000057fa      e8b1bcffff     call sym.imp.memcpy                     ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000057ff      4983ec01       sub r12, 1                              ; ../coreutils-8.31/lib/xvasprintf.c:63
0x00005803      742b           je 0x5830
0x00005805      418b17         mov edx, dword [r15]                    ; ../coreutils-8.31/lib/xvasprintf.c:65
0x00005808      83fa2f         cmp edx, 0x2f
0x0000580b      76c7           jbe 0x57d4
0x0000580d      498b4708       mov rax, qword [r15 + 8]
0x00005811      488d5008       lea rdx, [rax + 8]
0x00005815      49895708       mov qword [r15 + 8], rdx
0x00005819      ebc5           jmp 0x57e0
0x0000581b      0f1f440000     nop dword [rax + rax]
0x00005820      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/xvasprintf.c:61
0x00005825      e886fcffff     call sym.xmalloc
0x0000582a      4889c3         mov rbx, rax
0x0000582d      4989c6         mov r14, rax
0x00005830      c60300         mov byte [rbx], 0                       ; ../coreutils-8.31/lib/xvasprintf.c:70
0x00005833      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/xvasprintf.c:73
0x00005838      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005841      4c89f0         mov rax, r14
0x00005844      750f           jne 0x5855
0x00005846      4883c428       add rsp, 0x28
0x0000584a      5b             pop rbx
0x0000584b      5d             pop rbp
0x0000584c      415c           pop r12
0x0000584e      415d           pop r13
0x00005850      415e           pop r14
0x00005852      415f           pop r15
0x00005854      c3             ret
0x00005855      e8a6bbffff     call sym.imp.__stack_chk_fail
0x0000585a      660f1f440000   nop word [rax + rax]
0x00005860      e8cbbaffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xvasprintf.c:56
0x00005865      4531f6         xor r14d, r14d                          ; ../coreutils-8.31/lib/xvasprintf.c:57
0x00005868      c7004b000000   mov dword [rax], 0x4b                   ; ../coreutils-8.31/lib/xvasprintf.c:56 ; 'K'
                                                                       ; [0x4b:4]=0
0x0000586e      ebc3           jmp 0x5833                              ; ../coreutils-8.31/lib/xvasprintf.c:57
0x00005870      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/xvasprintf.c:46
0x00005875      488d5008       lea rdx, [rax + 8]
0x00005879      4889542408     mov qword [rsp + 8], rdx
0x0000587e      e91effffff     jmp 0x57a1
0x00005883      0f1f00         nop dword [rax]
0x00005886      662e0f1f8400.  nop word cs:[rax + rax]
;-- xvasprintf:
0x00005890      4883ec18       sub rsp, 0x18                           ; ../coreutils-8.31/lib/xvasprintf.c:77
0x00005894      64488b042528.  mov rax, qword fs:[0x28]
0x0000589d      4889442408     mov qword [rsp + 8], rax
0x000058a2      31c0           xor eax, eax
0x000058a4      0fb607         movzx eax, byte [rdi]                   ; ../coreutils-8.31/lib/xvasprintf.c:89
0x000058a7      84c0           test al, al
0x000058a9      747b           je 0x5926
0x000058ab      3c25           cmp al, 0x25                            ; ../coreutils-8.31/lib/xvasprintf.c:92
0x000058ad      4989f8         mov r8, rdi
0x000058b0      7536           jne 0x58e8
0x000058b2      807f0173       cmp byte [rdi + 1], 0x73                ; ../coreutils-8.31/lib/xvasprintf.c:95
0x000058b6      7530           jne 0x58e8
0x000058b8      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/xvasprintf.c:84
0x000058ba      eb11           jmp 0x58cd
0x000058bc      0f1f4000       nop dword [rax]
0x000058c0      80f925         cmp cl, 0x25                            ; ../coreutils-8.31/lib/xvasprintf.c:92
0x000058c3      7523           jne 0x58e8
0x000058c5      41807c780173   cmp byte [r8 + rdi*2 + 1], 0x73         ; ../coreutils-8.31/lib/xvasprintf.c:95
0x000058cb      751b           jne 0x58e8
0x000058cd      4883c701       add rdi, 1                              ; ../coreutils-8.31/lib/xvasprintf.c:98
0x000058d1      410fb60c78     movzx ecx, byte [r8 + rdi*2]            ; ../coreutils-8.31/lib/xvasprintf.c:89
0x000058d6      84c9           test cl, cl
0x000058d8      75e6           jne 0x58c0
0x000058da      e861feffff     call sym.xstrcat                        ; ../coreutils-8.31/lib/xvasprintf.c:91
0x000058df      eb1d           jmp 0x58fe
0x000058e1      0f1f80000000.  nop dword [rax]
0x000058e8      4889f2         mov rdx, rsi                            ; ../coreutils-8.31/lib/xvasprintf.c:102
0x000058eb      4889e7         mov rdi, rsp
0x000058ee      4c89c6         mov rsi, r8
0x000058f1      e8da000000     call sym.rpl_vasprintf
0x000058f6      85c0           test eax, eax
0x000058f8      781e           js 0x5918
0x000058fa      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/xvasprintf.c:109
0x000058fe      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xvasprintf.c:110
0x00005903      644833142528.  xor rdx, qword fs:[0x28]
0x0000590c      751c           jne 0x592a
0x0000590e      4883c418       add rsp, 0x18
0x00005912      c3             ret
0x00005913      0f1f440000     nop dword [rax + rax]
0x00005918      e813baffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xvasprintf.c:104
0x0000591d      83380c         cmp dword [rax], 0xc
0x00005920      740d           je 0x592f
0x00005922      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/xvasprintf.c:106
0x00005924      ebd8           jmp 0x58fe
0x00005926      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/xvasprintf.c:84
0x00005928      ebb0           jmp 0x58da
0x0000592a      e8d1baffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xvasprintf.c:110
0x0000592f      e8ccfdffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xvasprintf.c:105
0x00005934      662e0f1f8400.  nop word cs:[rax + rax]
0x0000593e      6690           nop
;-- rpl_mbrtowc:
0x00005940      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005942      4154           push r12
0x00005944      4989f5         mov r13, rsi
0x00005947      55             push rbp
0x00005948      53             push rbx
0x00005949      4889fb         mov rbx, rdi
0x0000594c      4989d4         mov r12, rdx
0x0000594f      4883ec18       sub rsp, 0x18
0x00005953      64488b042528.  mov rax, qword fs:[0x28]
0x0000595c      4889442408     mov qword [rsp + 8], rax
0x00005961      31c0           xor eax, eax
0x00005963      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005968      4885ff         test rdi, rdi
0x0000596b      480f44d8       cmove rbx, rax
0x0000596f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005972      e899baffff     call sym.imp.mbrtowc
0x00005977      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000597b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000597e      7620           jbe 0x59a0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005980      4d85e4         test r12, r12
0x00005983      741b           je 0x59a0
0x00005985      31ff           xor edi, edi
0x00005987      e844010000     call sym.hard_locale
0x0000598c      84c0           test al, al
0x0000598e      7510           jne 0x59a0
0x00005990      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005995      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000599a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000599c      0f1f4000       nop dword [rax]
0x000059a0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x000059a5      644833142528.  xor rdx, qword fs:[0x28]
0x000059ae      4889e8         mov rax, rbp
0x000059b1      750b           jne 0x59be
0x000059b3      4883c418       add rsp, 0x18
0x000059b7      5b             pop rbx
0x000059b8      5d             pop rbp
0x000059b9      415c           pop r12
0x000059bb      415d           pop r13
0x000059bd      c3             ret
0x000059be      e83dbaffff     call sym.imp.__stack_chk_fail
0x000059c3      662e0f1f8400.  nop word cs:[rax + rax]
0x000059cd      0f1f00         nop dword [rax]
;-- rpl_vasprintf:
0x000059d0      53             push rbx                                ; ../coreutils-8.31/lib/vasprintf.c:34
0x000059d1      4889f0         mov rax, rsi
0x000059d4      4889fb         mov rbx, rdi
0x000059d7      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/vasprintf.c:36
0x000059d9      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/vasprintf.c:34
0x000059dd      64488b0c2528.  mov rcx, qword fs:[0x28]
0x000059e6      48894c2408     mov qword [rsp + 8], rcx
0x000059eb      31c9           xor ecx, ecx
0x000059ed      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/vasprintf.c:36
0x000059f0      4889d1         mov rcx, rdx
0x000059f3      4889c2         mov rdx, rax
0x000059f6      e895020000     call sym.vasnprintf
0x000059fb      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasprintf.c:37
0x000059fe      7442           je 0x5a42
0x00005a00      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/vasprintf.c:40
0x00005a04      4881faffffff.  cmp rdx, 0x7fffffff
0x00005a0b      771b           ja 0x5a28
0x00005a0d      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/vasprintf.c:47
0x00005a10      89d0           mov eax, edx                            ; ../coreutils-8.31/lib/vasprintf.c:49
0x00005a12      488b5c2408     mov rbx, qword [rsp + 8]                ; ../coreutils-8.31/lib/vasprintf.c:50
0x00005a17      6448331c2528.  xor rbx, qword fs:[0x28]
0x00005a20      7527           jne 0x5a49
0x00005a22      4883c410       add rsp, 0x10
0x00005a26      5b             pop rbx
0x00005a27      c3             ret
0x00005a28      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/vasprintf.c:42
0x00005a2b      e8e0b8ffff     call sym.imp.free
0x00005a30      e8fbb8ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasprintf.c:43
0x00005a35      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x00005a3b      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/vasprintf.c:44 ; -1
0x00005a40      ebd0           jmp 0x5a12
0x00005a42      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/vasprintf.c:38 ; -1
0x00005a47      ebc9           jmp 0x5a12
0x00005a49      e8b2b9ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/vasprintf.c:50
0x00005a4e      6690           nop
;-- close_stream:
0x00005a50      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00005a52      55             push rbp
0x00005a53      4889fd         mov rbp, rdi
0x00005a56      53             push rbx
0x00005a57      e814b9ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00005a5c      8b5d00         mov ebx, dword [rbp]
0x00005a5f      4889ef         mov rdi, rbp
0x00005a62      4989c4         mov r12, rax
0x00005a65      e806010000     call sym.rpl_fclose
0x00005a6a      83e320         and ebx, 0x20                           ; "@"
0x00005a6d      85db           test ebx, ebx
0x00005a6f      7517           jne 0x5a88
0x00005a71      85c0           test eax, eax
0x00005a73      740a           je 0x5a7f                               ; stdio.h:-186
0x00005a75      4d85e4         test r12, r12                           ; stdio.h:-178
0x00005a78      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005a7d      7439           je 0x5ab8
0x00005a7f      5b             pop rbx
0x00005a80      5d             pop rbp
0x00005a81      415c           pop r12
0x00005a83      c3             ret
0x00005a84      0f1f4000       nop dword [rax]
0x00005a88      85c0           test eax, eax
0x00005a8a      751c           jne 0x5aa8
0x00005a8c      e89fb8ffff     call sym.imp.__errno_location
0x00005a91      c70000000000   mov dword [rax], 0
0x00005a97      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005a9c      5b             pop rbx
0x00005a9d      5d             pop rbp
0x00005a9e      415c           pop r12
0x00005aa0      c3             ret
0x00005aa1      0f1f80000000.  nop dword [rax]
0x00005aa8      5b             pop rbx
0x00005aa9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005aae      5d             pop rbp                                 ; stdio.h:-186
0x00005aaf      415c           pop r12
0x00005ab1      c3             ret
0x00005ab2      660f1f440000   nop word [rax + rax]
0x00005ab8      e873b8ffff     call sym.imp.__errno_location
0x00005abd      833809         cmp dword [rax], 9
0x00005ac0      5b             pop rbx
0x00005ac1      5d             pop rbp
0x00005ac2      415c           pop r12                                 ; stdio.h:-178
0x00005ac4      0f95c0         setne al
0x00005ac7      0fb6c0         movzx eax, al
0x00005aca      f7d8           neg eax
0x00005acc      c3             ret
0x00005acd      0f1f00         nop dword [rax]
;-- hard_locale:
0x00005ad0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00005ad4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00005ad6      e865baffff     call sym.imp.setlocale
0x00005adb      4889c2         mov rdx, rax
0x00005ade      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00005ae3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00005ae6      741d           je 0x5b05
0x00005ae8      488d3dea3700.  lea rdi, [0x000092d9]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00005aef      b902000000     mov ecx, 2
0x00005af4      4889d6         mov rsi, rdx
0x00005af7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005af9      0f97c1         seta cl
0x00005afc      80d900         sbb cl, 0
0x00005aff      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00005b01      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00005b03      750b           jne 0x5b10
0x00005b05      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005b09      c3             ret
0x00005b0a      660f1f440000   nop word [rax + rax]
0x00005b10      488d3dc43700.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x92db ; "POSIX"
0x00005b17      b906000000     mov ecx, 6
0x00005b1c      4889d6         mov rsi, rdx
0x00005b1f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005b21      0f97c0         seta al
0x00005b24      1c00           sbb al, 0
0x00005b26      84c0           test al, al
0x00005b28      0f95c0         setne al
0x00005b2b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005b2f      c3             ret
;-- locale_charset:
0x00005b30      4883ec08       sub rsp, 8
0x00005b34      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00005b39      e8c2b9ffff     call sym.imp.nl_langinfo
0x00005b3e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00005b41      741d           je 0x5b60
0x00005b43      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00005b46      488d15943700.  lea rdx, str.ASCII                      ; 0x92e1 ; "ASCII"
0x00005b4d      480f44c2       cmove rax, rdx
0x00005b51      4883c408       add rsp, 8
0x00005b55      c3             ret
0x00005b56      662e0f1f8400.  nop word cs:[rax + rax]
0x00005b60      488d057a3700.  lea rax, str.ASCII                      ; 0x92e1 ; "ASCII"
0x00005b67      4883c408       add rsp, 8
0x00005b6b      c3             ret
0x00005b6c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00005b70      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00005b72      55             push rbp
0x00005b73      53             push rbx
0x00005b74      4889fb         mov rbx, rdi
0x00005b77      e844b9ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00005b7c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00005b7e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00005b81      7854           js 0x5bd7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00005b83      e898b9ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00005b88      85c0           test eax, eax
0x00005b8a      752c           jne 0x5bb8
0x00005b8c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00005b8f      e85c000000     call sym.rpl_fflush
0x00005b94      85c0           test eax, eax
0x00005b96      743c           je 0x5bd4
0x00005b98      e893b7ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00005b9d      448b20         mov r12d, dword [rax]
0x00005ba0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005ba3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00005ba6      e8f5b7ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00005bab      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00005bae      7530           jne 0x5be0
0x00005bb0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005bb1      5d             pop rbp
0x00005bb2      415c           pop r12
0x00005bb4      c3             ret
0x00005bb5      0f1f00         nop dword [rax]
0x00005bb8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00005bbb      e800b9ffff     call sym.imp.fileno
0x00005bc0      31f6           xor esi, esi
0x00005bc2      ba01000000     mov edx, 1
0x00005bc7      89c7           mov edi, eax
0x00005bc9      e862b8ffff     call sym.imp.lseek
0x00005bce      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005bd2      75b8           jne 0x5b8c
0x00005bd4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005bd7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005bd8      5d             pop rbp
0x00005bd9      415c           pop r12
0x00005bdb      e9c0b7ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00005be0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00005be4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00005be9      ebc5           jmp 0x5bb0
0x00005beb      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00005bf0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00005bf3      53             push rbx
0x00005bf4      4889fb         mov rbx, rdi
0x00005bf7      7411           je 0x5c0a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00005bf9      e822b9ffff     call sym.imp.__freading
0x00005bfe      85c0           test eax, eax
0x00005c00      7408           je 0x5c0a
0x00005c02      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00005c08      750e           jne 0x5c18
0x00005c0a      4889df         mov rdi, rbx
0x00005c0d      5b             pop rbx
0x00005c0e      e9ddb8ffff     jmp sym.imp.fflush
0x00005c13      0f1f440000     nop dword [rax + rax]
0x00005c18      4889df         mov rdi, rbx
0x00005c1b      ba01000000     mov edx, 1
0x00005c20      31f6           xor esi, esi
0x00005c22      e809000000     call sym.rpl_fseeko
0x00005c27      4889df         mov rdi, rbx
0x00005c2a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00005c2b      e9c0b8ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00005c30      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005c34      48394710       cmp qword [rdi + 0x10], rax
0x00005c38      7406           je 0x5c40                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00005c3a      e931b9ffff     jmp sym.imp.fseeko
0x00005c3f      90             nop
0x00005c40      488b4720       mov rax, qword [rdi + 0x20]
0x00005c44      48394728       cmp qword [rdi + 0x28], rax
0x00005c48      75f0           jne 0x5c3a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00005c4a      48837f4800     cmp qword [rdi + 0x48], 0
0x00005c4f      75e9           jne 0x5c3a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005c51      4154           push r12
0x00005c53      55             push rbp
0x00005c54      4189d4         mov r12d, edx
0x00005c57      53             push rbx
0x00005c58      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00005c5b      4889fb         mov rbx, rdi
0x00005c5e      e85db8ffff     call sym.imp.fileno
0x00005c63      4489e2         mov edx, r12d
0x00005c66      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00005c69      89c7           mov edi, eax
0x00005c6b      e8c0b7ffff     call sym.imp.lseek
0x00005c70      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005c74      740c           je 0x5c82
0x00005c76      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005c79      488983900000.  mov qword [rbx + 0x90], rax
0x00005c80      31c0           xor eax, eax
0x00005c82      5b             pop rbx
0x00005c83      5d             pop rbp
0x00005c84      415c           pop r12
0x00005c86      c3             ret
0x00005c87      660f1f840000.  nop word [rax + rax]
;-- vasnprintf:
0x00005c90      55             push rbp                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00005c91      4889e5         mov rbp, rsp
0x00005c94      4157           push r15
0x00005c96      4156           push r14
0x00005c98      4155           push r13
0x00005c9a      4154           push r12
0x00005c9c      4c8db550fcff.  lea r14, [rbp - 0x3b0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00005ca3      53             push rbx                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00005ca4      4889d3         mov rbx, rdx
0x00005ca7      4989cc         mov r12, rcx
0x00005caa      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00005cad      4881ec080400.  sub rsp, 0x408                          ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00005cb4      4889b5e8fbff.  mov qword [rbp - 0x418], rsi
0x00005cbb      488db540fdff.  lea rsi, [rbp - 0x2c0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00005cc2      4889bd18fcff.  mov qword [rbp - 0x3e8], rdi            ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00005cc9      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00005ccc      4c89b5f0fbff.  mov qword [rbp - 0x410], r14
0x00005cd3      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00005cdc      488945c8       mov qword [rbp - 0x38], rax
0x00005ce0      31c0           xor eax, eax
0x00005ce2      4889b5f8fbff.  mov qword [rbp - 0x408], rsi            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00005ce9      e8c2120000     call sym.printf_parse
0x00005cee      85c0           test eax, eax
0x00005cf0      0f88620e0000   js 0x6b58
0x00005cf6      4c89f6         mov rsi, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1802
0x00005cf9      4c89e7         mov rdi, r12
0x00005cfc      e8af100000     call sym.printf_fetchargs
0x00005d01      85c0           test eax, eax
0x00005d03      0f88b70e0000   js 0x6bc0
0x00005d09      488b8550fdff.  mov rax, qword [rbp - 0x2b0]            ; ../coreutils-8.31/lib/xsize.h:65
0x00005d10      48c7c2ffffff.  mov rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/xsize.h:66
0x00005d17      4883c007       add rax, 7                              ; ../coreutils-8.31/lib/xsize.h:65
0x00005d1b      4883f806       cmp rax, 6                              ; ../coreutils-8.31/lib/xsize.h:66
0x00005d1f      480f46c2       cmovbe rax, rdx
0x00005d23      48038558fdff.  add rax, qword [rbp - 0x2a8]
0x00005d2a      0f82280a0000   jb 0x6758
0x00005d30      4889c7         mov rdi, rax
0x00005d33      4531c0         xor r8d, r8d
0x00005d36      4883c706       add rdi, 6
0x00005d3a      410f92c0       setb r8b
0x00005d3e      0f82140a0000   jb 0x6758
0x00005d44      4881ff9f0f00.  cmp rdi, 0xf9f                          ; ../coreutils-8.31/lib/vasnprintf.c:1826
0x00005d4b      0f8647010000   jbe 0x5e98
0x00005d51      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1835
0x00005d55      4c898538fcff.  mov qword [rbp - 0x3c8], r8
0x00005d5c      0f84f6090000   je 0x6758
0x00005d62      e879b7ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x00005d67      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x00005d6a      48898528fcff.  mov qword [rbp - 0x3d8], rax            ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x00005d71      0f84e1090000   je 0x6758                               ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x00005d77      4c8b8538fcff.  mov r8, qword [rbp - 0x3c8]
0x00005d7e      488985e0fbff.  mov qword [rbp - 0x420], rax
0x00005d85      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/vasnprintf.c:1851
0x00005d88      4883bd18fcff.  cmp qword [rbp - 0x3e8], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1843
0x00005d90      740a           je 0x5d9c
0x00005d92      488b85e8fbff.  mov rax, qword [rbp - 0x418]            ; ../coreutils-8.31/lib/vasnprintf.c:1846
0x00005d99      4c8b20         mov r12, qword [rax]
0x00005d9c      4c8bad48fdff.  mov r13, qword [rbp - 0x2b8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x00005da3      488d8544fcff.  lea rax, [rbp - 0x3bc]                  ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x00005daa      4c8bbd18fcff.  mov r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x00005db1      48c78500fcff.  mov qword [rbp - 0x400], 0
0x00005dbc      48898510fcff.  mov qword [rbp - 0x3f0], rax            ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x00005dc3      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x00005dc6      4c89c3         mov rbx, r8
0x00005dc9      498b4d00       mov rcx, qword [r13]                    ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x00005dcd      4989c0         mov r8, rax                             ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x00005dd0      4c39c1         cmp rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x00005dd3      0f8468090000   je 0x6741
0x00005dd9      4c29c1         sub rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1887
0x00005ddc      4889d8         mov rax, rbx
0x00005ddf      4801c8         add rax, rcx
0x00005de2      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/xsize.h:65
0x00005de5      0f83dd000000   jae 0x5ec8                              ; ../coreutils-8.31/lib/xsize.h:66
0x00005deb      4983fcff       cmp r12, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x00005def      0f84cb0a0000   je 0x68c0
0x00005df5      e836b5ffff     call sym.imp.__errno_location
0x00005dfa      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00005e01      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:5606
0x00005e08      7409           je 0x5e13
0x00005e0a      4d85ff         test r15, r15
0x00005e0d      0f85dd0a0000   jne 0x68f0
0x00005e13      488b85e0fbff.  mov rax, qword [rbp - 0x420]            ; ../coreutils-8.31/lib/vasnprintf.c:5608
0x00005e1a      4885c0         test rax, rax
0x00005e1d      7408           je 0x5e27
0x00005e1f      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:5609
0x00005e22      e8e9b4ffff     call sym.imp.free
0x00005e27      488b85f8fbff.  mov rax, qword [rbp - 0x408]            ; ../coreutils-8.31/lib/vasnprintf.c:5611
0x00005e2e      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00005e35      4883c020       add rax, 0x20                           ; "@"
0x00005e39      4839c7         cmp rdi, rax
0x00005e3c      7405           je 0x5e43
0x00005e3e      e8cdb4ffff     call sym.imp.free
0x00005e43      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00005e4a      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00005e51      4883c010       add rax, 0x10
0x00005e55      4839c7         cmp rdi, rax
0x00005e58      7405           je 0x5e5f
0x00005e5a      e8b1b4ffff     call sym.imp.free
0x00005e5f      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5612
0x00005e66      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/vasnprintf.c:5613
0x00005e69      c7000c000000   mov dword [rax], 0xc                    ; ../coreutils-8.31/lib/vasnprintf.c:5612 ; [0xc:4]=0
0x00005e6f      488b7dc8       mov rdi, qword [rbp - 0x38]             ; ../coreutils-8.31/lib/vasnprintf.c:5615
0x00005e73      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005e7c      4c89f8         mov rax, r15
0x00005e7f      0f85020f0000   jne 0x6d87
0x00005e85      488d65d8       lea rsp, [rbp - 0x28]
0x00005e89      5b             pop rbx
0x00005e8a      415c           pop r12
0x00005e8c      415d           pop r13
0x00005e8e      415e           pop r14
0x00005e90      415f           pop r15
0x00005e92      5d             pop rbp
0x00005e93      c3             ret
0x00005e94      0f1f4000       nop dword [rax]
0x00005e98      4883c024       add rax, 0x24                           ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x00005e9c      48c785e0fbff.  mov qword [rbp - 0x420], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1829
0x00005ea7      4883e0f0       and rax, 0xfffffffffffffff0             ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x00005eab      4829c4         sub rsp, rax
0x00005eae      488d44240f     lea rax, [rsp + 0xf]
0x00005eb3      4883e0f0       and rax, 0xfffffffffffffff0
0x00005eb7      48898528fcff.  mov qword [rbp - 0x3d8], rax
0x00005ebe      e9c2feffff     jmp 0x5d85
0x00005ec3      0f1f440000     nop dword [rax + rax]
0x00005ec8      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x00005ecb      7367           jae 0x5f34
0x00005ecd      4d85e4         test r12, r12
0x00005ed0      0f852a090000   jne 0x6800
0x00005ed6      4883f80c       cmp rax, 0xc
0x00005eda      0f8732090000   ja 0x6812
0x00005ee0      41bc0c000000   mov r12d, 0xc
0x00005ee6      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00005eed      0f94c2         sete dl
0x00005ef0      4d85ff         test r15, r15
0x00005ef3      0f843f090000   je 0x6838
0x00005ef9      84d2           test dl, dl
0x00005efb      0f8537090000   jne 0x6838
0x00005f01      4c89e6         mov rsi, r12
0x00005f04      4c89ff         mov rdi, r15
0x00005f07      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x00005f0e      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00005f15      e816b6ffff     call sym.imp.realloc
0x00005f1a      4885c0         test rax, rax
0x00005f1d      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00005f24      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x00005f2b      0f84aa090000   je 0x68db
0x00005f31      4989c7         mov r15, rax
0x00005f34      498d3c1f       lea rdi, [r15 + rbx]                    ; ../coreutils-8.31/lib/vasnprintf.c:1896
0x00005f38      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005f3b      4c89c6         mov rsi, r8
0x00005f3e      e86db5ffff     call sym.imp.memcpy
0x00005f43      488b8500fcff.  mov rax, qword [rbp - 0x400]            ; ../coreutils-8.31/lib/vasnprintf.c:1906
0x00005f4a      48398540fdff.  cmp qword [rbp - 0x2c0], rax
0x00005f51      0f84b40c0000   je 0x6c0b
0x00005f57      410fb65548     movzx edx, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:1910
0x00005f5c      498b4550       mov rax, qword [r13 + 0x50]
0x00005f60      80fa25         cmp dl, 0x25
0x00005f63      0f848f070000   je 0x66f8
0x00005f69      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1923
0x00005f6d      0f84430c0000   je 0x6bb6
0x00005f73      4c8b8558fcff.  mov r8, qword [rbp - 0x3a8]
0x00005f7a      48c1e005       shl rax, 5
0x00005f7e      4c01c0         add rax, r8
0x00005f81      80fa6e         cmp dl, 0x6e                            ; ../coreutils-8.31/lib/vasnprintf.c:1926
0x00005f84      8b38           mov edi, dword [rax]
0x00005f86      89bd30fcffff   mov dword [rbp - 0x3d0], edi
0x00005f8c      0f84de070000   je 0x6770
0x00005f92      418b4510       mov eax, dword [r13 + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4603
0x00005f96      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4770
0x00005f9d      a801           test al, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x00005f9f      c60725         mov byte [rdi], 0x25                    ; ../coreutils-8.31/lib/vasnprintf.c:4770 ; '%'
                                                                       ; [0x25:1]=0
0x00005fa2      488d5f01       lea rbx, [rdi + 1]
0x00005fa6      740f           je 0x5fb7                               ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x00005fa8      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4777
0x00005faf      488d5f02       lea rbx, [rdi + 2]
0x00005fb3      c6470127       mov byte [rdi + 1], 0x27                ; '''
                                                                       ; [0x27:1]=0
0x00005fb7      a802           test al, 2                              ; ../coreutils-8.31/lib/vasnprintf.c:4779
0x00005fb9      7407           je 0x5fc2
0x00005fbb      c6032d         mov byte [rbx], 0x2d                    ; ../coreutils-8.31/lib/vasnprintf.c:4780 ; '-'
                                                                       ; [0x2d:1]=0
0x00005fbe      4883c301       add rbx, 1
0x00005fc2      a804           test al, 4                              ; ../coreutils-8.31/lib/vasnprintf.c:4781
0x00005fc4      7407           je 0x5fcd
0x00005fc6      c6032b         mov byte [rbx], 0x2b                    ; ../coreutils-8.31/lib/vasnprintf.c:4782 ; '+'
                                                                       ; [0x2b:1]=0
0x00005fc9      4883c301       add rbx, 1
0x00005fcd      a808           test al, 8                              ; ../coreutils-8.31/lib/vasnprintf.c:4783
0x00005fcf      7407           je 0x5fd8
0x00005fd1      c60320         mov byte [rbx], 0x20                    ; ../coreutils-8.31/lib/vasnprintf.c:4784 ; [0x20:1]=64 ; "@"
0x00005fd4      4883c301       add rbx, 1
0x00005fd8      a810           test al, 0x10                           ; ../coreutils-8.31/lib/vasnprintf.c:4785
0x00005fda      7407           je 0x5fe3
0x00005fdc      c60323         mov byte [rbx], 0x23                    ; ../coreutils-8.31/lib/vasnprintf.c:4786 ; '#'
                                                                       ; [0x23:1]=0
0x00005fdf      4883c301       add rbx, 1
0x00005fe3      a840           test al, 0x40                           ; ../coreutils-8.31/lib/vasnprintf.c:4788 ; segment.PHDR
0x00005fe5      7407           je 0x5fee
0x00005fe7      c60349         mov byte [rbx], 0x49                    ; ../coreutils-8.31/lib/vasnprintf.c:4789 ; 'I'
                                                                       ; [0x49:1]=0
0x00005fea      4883c301       add rbx, 1
0x00005fee      a820           test al, 0x20                           ; ../coreutils-8.31/lib/vasnprintf.c:4793 ; "@"
0x00005ff0      7407           je 0x5ff9
0x00005ff2      c60330         mov byte [rbx], 0x30                    ; ../coreutils-8.31/lib/vasnprintf.c:4794 ; '0'
                                                                       ; [0x30:1]=0
0x00005ff5      4883c301       add rbx, 1
0x00005ff9      498b7518       mov rsi, qword [r13 + 0x18]             ; ../coreutils-8.31/lib/vasnprintf.c:4795
0x00005ffd      498b5520       mov rdx, qword [r13 + 0x20]
0x00006001      4839d6         cmp rsi, rdx
0x00006004      7430           je 0x6036
0x00006006      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x00006009      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000600c      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00006013      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x00006016      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006019      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00006020      e88bb4ffff     call sym.imp.memcpy
0x00006025      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4803
0x0000602c      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x00006033      4801cb         add rbx, rcx
0x00006036      498b7530       mov rsi, qword [r13 + 0x30]             ; ../coreutils-8.31/lib/vasnprintf.c:4816
0x0000603a      498b5538       mov rdx, qword [r13 + 0x38]
0x0000603e      4839d6         cmp rsi, rdx
0x00006041      7430           je 0x6073
0x00006043      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x00006046      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006049      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00006050      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x00006053      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006056      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x0000605d      e84eb4ffff     call sym.imp.memcpy
0x00006062      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4824
0x00006069      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x00006070      4801cb         add rbx, rcx
0x00006073      8bbd30fcffff   mov edi, dword [rbp - 0x3d0]
0x00006079      83ff10         cmp edi, 0x10
0x0000607c      772d           ja 0x60ab
0x0000607e      b801000000     mov eax, 1
0x00006083      89f9           mov ecx, edi
0x00006085      48d3e0         shl rax, cl
0x00006088      a980410100     test eax, 0x14180
0x0000608d      7515           jne 0x60a4
0x0000608f      f6c410         test ah, 0x10
0x00006092      0f8558090000   jne 0x69f0
0x00006098      f6c406         test ah, 6
0x0000609b      740e           je 0x60ab
0x0000609d      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4847 ; 'l'
                                                                       ; [0x6c:1]=0
0x000060a0      4883c301       add rbx, 1
0x000060a4      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4859 ; 'l'
                                                                       ; [0x6c:1]=0
0x000060a7      4883c301       add rbx, 1
0x000060ab      410fb64548     movzx eax, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x000060b0      c6430100       mov byte [rbx + 1], 0                   ; ../coreutils-8.31/lib/vasnprintf.c:4922
0x000060b4      8803           mov byte [rbx], al                      ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x000060b6      498b4528       mov rax, qword [r13 + 0x28]             ; ../coreutils-8.31/lib/vasnprintf.c:4930
0x000060ba      4883f8ff       cmp rax, 0xffffffffffffffff
0x000060be      0f842c070000   je 0x67f0
0x000060c4      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4932
0x000060c8      4c01c0         add rax, r8
0x000060cb      833805         cmp dword [rax], 5
0x000060ce      0f85e20a0000   jne 0x6bb6
0x000060d4      8b4010         mov eax, dword [rax + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4934
0x000060d7      c78520fcffff.  mov dword [rbp - 0x3e0], 1
0x000060e1      898548fcffff   mov dword [rbp - 0x3b8], eax
0x000060e7      498b4540       mov rax, qword [r13 + 0x40]             ; ../coreutils-8.31/lib/vasnprintf.c:4936
0x000060eb      4883f8ff       cmp rax, 0xffffffffffffffff
0x000060ef      742b           je 0x611c
0x000060f1      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4938
0x000060f5      4901c0         add r8, rax
0x000060f8      41833805       cmp dword [r8], 5
0x000060fc      0f85b40a0000   jne 0x6bb6
0x00006102      8b8520fcffff   mov eax, dword [rbp - 0x3e0]            ; ../coreutils-8.31/lib/vasnprintf.c:4940
0x00006108      418b5010       mov edx, dword [r8 + 0x10]
0x0000610c      89948548fcff.  mov dword [rbp + rax*4 - 0x3b8], edx
0x00006113      8d4001         lea eax, [rax + 1]
0x00006116      898520fcffff   mov dword [rbp - 0x3e0], eax
0x0000611c      4c89f0         mov rax, r14
0x0000611f      31d2           xor edx, edx
0x00006121      4883c002       add rax, 2
0x00006125      0f82610c0000   jb 0x6d8c
0x0000612b      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:4952
0x0000612e      734b           jae 0x617b
0x00006130      4d85e4         test r12, r12
0x00006133      0f851f080000   jne 0x6958
0x00006139      4883f80c       cmp rax, 0xc
0x0000613d      0f872d080000   ja 0x6970
0x00006143      41bc0c000000   mov r12d, 0xc
0x00006149      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006150      0f94c2         sete dl
0x00006153      4d85ff         test r15, r15
0x00006156      0f8444080000   je 0x69a0
0x0000615c      84d2           test dl, dl
0x0000615e      0f853c080000   jne 0x69a0
0x00006164      4c89e6         mov rsi, r12
0x00006167      4c89ff         mov rdi, r15
0x0000616a      e8c1b3ffff     call sym.imp.realloc
0x0000616f      4885c0         test rax, rax
0x00006172      0f847dfcffff   je 0x5df5
0x00006178      4989c7         mov r15, rax
0x0000617b      43c6043700     mov byte [r15 + r14], 0                 ; ../coreutils-8.31/lib/vasnprintf.c:4957
0x00006180      e8abb1ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:4960
0x00006185      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x0000618c      8b00           mov eax, dword [rax]
0x0000618e      48899d08fcff.  mov qword [rbp - 0x3f8], rbx
0x00006195      8985dcfbffff   mov dword [rbp - 0x424], eax
0x0000619b      0f1f440000     nop dword [rax + rax]
0x000061a0      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x000061a7      4c89e3         mov rbx, r12                            ; ../coreutils-8.31/lib/vasnprintf.c:4968
0x000061aa      41baffffff7f   mov r10d, 0x7fffffff
0x000061b0      4c29f3         sub rbx, r14
0x000061b3      c78544fcffff.  mov dword [rbp - 0x3bc], 0xffffffff     ; ../coreutils-8.31/lib/vasnprintf.c:4964 ; -1
0x000061bd      4881fbffffff.  cmp rbx, 0x7fffffff
0x000061c4      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x000061ca      8b8530fcffff   mov eax, dword [rbp - 0x3d0]            ; ../coreutils-8.31/lib/vasnprintf.c:5016
0x000061d0      4c0f46d3       cmovbe r10, rbx
0x000061d4      83f811         cmp eax, 0x11
0x000061d7      0f87d9090000   ja 0x6bb6
0x000061dd      488d35043100.  lea rsi, [0x000092e8]
0x000061e4      48630486       movsxd rax, dword [rsi + rax*4]
0x000061e8      4801f0         add rax, rsi
0x000061eb      ffe0           jmp rax
0x000061ed      0f1f00         nop dword [rax]
0x000061f0      498b4550       mov rax, qword [r13 + 0x50]
0x000061f4      4b8d3c37       lea rdi, [r15 + r14]
0x000061f8      48c1e005       shl rax, 5
0x000061fc      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006203      4c8b4810       mov r9, qword [rax + 0x10]
0x00006207      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000620d      83f801         cmp eax, 1
0x00006210      0f84c2040000   je 0x66d8
0x00006216      83f802         cmp eax, 2
0x00006219      0f84a1040000   je 0x66c0
0x0000621f      4883ec08       sub rsp, 8
0x00006223      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006229      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006230      4c89d6         mov rsi, r10                            ; ../coreutils-8.31/lib/vasnprintf.c:5007
0x00006233      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000623a      ba01000000     mov edx, 1
0x0000623f      31c0           xor eax, eax
0x00006241      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006248      e8b3b0ffff     call sym.imp.__snprintf_chk
0x0000624d      5e             pop rsi
0x0000624e      5f             pop rdi
0x0000624f      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006256      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x0000625c      85c9           test ecx, ecx
0x0000625e      0f8838010000   js 0x639c
0x00006264      4863d1         movsxd rdx, ecx
0x00006267      4c39d2         cmp rdx, r10
0x0000626a      730e           jae 0x627a
0x0000626c      4c01fa         add rdx, r15
0x0000626f      42803c3200     cmp byte [rdx + r14], 0
0x00006274      0f853c090000   jne 0x6bb6
0x0000627a      39c1           cmp ecx, eax
0x0000627c      7d08           jge 0x6286
0x0000627e      898544fcffff   mov dword [rbp - 0x3bc], eax
0x00006284      89c1           mov ecx, eax
0x00006286      8d4101         lea eax, [rcx + 1]
0x00006289      4c39d0         cmp rax, r10
0x0000628c      0f822e080000   jb 0x6ac0
0x00006292      4881fbfeffff.  cmp rbx, 0x7ffffffe
0x00006299      0f8741080000   ja 0x6ae0
0x0000629f      4b8d3424       lea rsi, [r12 + r12]
0x000062a3      8d5102         lea edx, [rcx + 2]
0x000062a6      4d85e4         test r12, r12
0x000062a9      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x000062b0      480f49c6       cmovns rax, rsi
0x000062b4      4c01f2         add rdx, r14
0x000062b7      0f82bb0a0000   jb 0x6d78
0x000062bd      4839d0         cmp rax, rdx
0x000062c0      480f42c2       cmovb rax, rdx
0x000062c4      4939c4         cmp r12, rax
0x000062c7      0f83d3feffff   jae 0x61a0
0x000062cd      4d85e4         test r12, r12
0x000062d0      0f882bfbffff   js 0x5e01
0x000062d6      4839c6         cmp rsi, rax
0x000062d9      4989f4         mov r12, rsi
0x000062dc      730d           jae 0x62eb
0x000062de      4883f8ff       cmp rax, 0xffffffffffffffff
0x000062e2      0f8419fbffff   je 0x5e01
0x000062e8      4989c4         mov r12, rax
0x000062eb      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000062f2      0f94c3         sete bl
0x000062f5      4d85ff         test r15, r15
0x000062f8      0f8482030000   je 0x6680
0x000062fe      84db           test bl, bl
0x00006300      0f857a030000   jne 0x6680
0x00006306      4c89e6         mov rsi, r12
0x00006309      4c89ff         mov rdi, r15
0x0000630c      e81fb2ffff     call sym.imp.realloc
0x00006311      4885c0         test rax, rax
0x00006314      0f84e7faffff   je 0x5e01
0x0000631a      4989c7         mov r15, rax
0x0000631d      e97efeffff     jmp 0x61a0                              ; stdio2.h:-211
0x00006322      660f1f440000   nop word [rax + rax]
0x00006328      498b4550       mov rax, qword [r13 + 0x50]
0x0000632c      4b8d3c37       lea rdi, [r15 + r14]
0x00006330      48c1e005       shl rax, 5
0x00006334      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000633b      448b4810       mov r9d, dword [rax + 0x10]
0x0000633f      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006345      83f801         cmp eax, 1
0x00006348      0f8432020000   je 0x6580
0x0000634e      83f802         cmp eax, 2
0x00006351      0f8471020000   je 0x65c8
0x00006357      4883ec08       sub rsp, 8
0x0000635b      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006361      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006368      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000636f      ba01000000     mov edx, 1
0x00006374      4c89d6         mov rsi, r10
0x00006377      31c0           xor eax, eax
0x00006379      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006380      e87bafffff     call sym.imp.__snprintf_chk
0x00006385      5a             pop rdx
0x00006386      59             pop rcx
0x00006387      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x0000638d      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]            ; ../coreutils-8.31/lib/vasnprintf.c:4942
0x00006394      85c9           test ecx, ecx
0x00006396      0f89c8feffff   jns 0x6264
0x0000639c      488bbd08fcff.  mov rdi, qword [rbp - 0x3f8]
0x000063a3      807f0100       cmp byte [rdi + 1], 0
0x000063a7      0f853b030000   jne 0x66e8
0x000063ad      85c0           test eax, eax
0x000063af      0f89c9feffff   jns 0x627e
0x000063b5      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x000063bc      8b18           mov ebx, dword [rax]
0x000063be      85db           test ebx, ebx
0x000063c0      751e           jne 0x63e0
0x000063c2      410fb64548     movzx eax, byte [r13 + 0x48]
0x000063c7      bb16000000     mov ebx, 0x16
0x000063cc      83e0ef         and eax, 0xffffffef                     ; ../coreutils-8.31/lib/vasnprintf.c:4951 ; 4294967279
0x000063cf      3c63           cmp al, 0x63
0x000063d1      b854000000     mov eax, 0x54                           ; 'T'
0x000063d6      0f44d8         cmove ebx, eax
0x000063d9      0f1f80000000.  nop dword [rax]
0x000063e0      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000063e7      7409           je 0x63f2
0x000063e9      4d85ff         test r15, r15
0x000063ec      0f85aa070000   jne 0x6b9c
0x000063f2      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x000063f9      4885c0         test rax, rax
0x000063fc      7408           je 0x6406
0x000063fe      4889c7         mov rdi, rax
0x00006401      e80aafffff     call sym.imp.free
0x00006406      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000640d      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00006414      4883c020       add rax, 0x20                           ; "@"
0x00006418      4839c7         cmp rdi, rax
0x0000641b      7405           je 0x6422
0x0000641d      e8eeaeffff     call sym.imp.free
0x00006422      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00006429      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00006430      4883c010       add rax, 0x10
0x00006434      4839c7         cmp rdi, rax
0x00006437      7405           je 0x643e
0x00006439      e8d2aeffff     call sym.imp.free
0x0000643e      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00006445      4531ff         xor r15d, r15d
0x00006448      8918           mov dword [rax], ebx
0x0000644a      e920faffff     jmp 0x5e6f
0x0000644f      90             nop
0x00006450      498b4550       mov rax, qword [r13 + 0x50]
0x00006454      4b8d3c37       lea rdi, [r15 + r14]
0x00006458      48c1e005       shl rax, 5
0x0000645c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006463      db6810         fld xword [rax + 0x10]
0x00006466      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000646c      83f801         cmp eax, 1
0x0000646f      0f842b060000   je 0x6aa0
0x00006475      83f802         cmp eax, 2
0x00006478      0f85c2040000   jne 0x6940
0x0000647e      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x00006484      4883ec08       sub rsp, 8
0x00006488      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/vasnprintf.c:4814
0x0000648e      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x00006495      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x0000649c      4c89d6         mov rsi, r10
0x0000649f      4883ec18       sub rsp, 0x18
0x000064a3      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x000064aa      ba01000000     mov edx, 1
0x000064af      db7c2408       fstp xword [rsp + 8]
0x000064b3      50             push rax
0x000064b4      31c0           xor eax, eax
0x000064b6      4c8995d0fbff.  mov qword [rbp - 0x430], r10            ; ../coreutils-8.31/lib/vasnprintf.c:4808
0x000064bd      e83eaeffff     call sym.imp.__snprintf_chk
0x000064c2      4883c430       add rsp, 0x30
0x000064c6      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x000064cd      e984fdffff     jmp 0x6256
0x000064d2      660f1f440000   nop word [rax + rax]
0x000064d8      498b4550       mov rax, qword [r13 + 0x50]
0x000064dc      4b8d3c37       lea rdi, [r15 + r14]
0x000064e0      48c1e005       shl rax, 5
0x000064e4      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000064eb      f20f104010     movsd xmm0, qword [rax + 0x10]
0x000064f0      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x000064f6      83f801         cmp eax, 1
0x000064f9      0f8491050000   je 0x6a90
0x000064ff      83f802         cmp eax, 2
0x00006502      0f85f8030000   jne 0x6900
0x00006508      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x0000650e      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006514      50             push rax
0x00006515      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x0000651c      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006523      4c89d6         mov rsi, r10
0x00006526      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000652d      ba01000000     mov edx, 1
0x00006532      b801000000     mov eax, 1
0x00006537      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x0000653e      e8bdadffff     call sym.imp.__snprintf_chk
0x00006543      4158           pop r8
0x00006545      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x0000654c      4159           pop r9
0x0000654e      e903fdffff     jmp 0x6256
0x00006553      0f1f440000     nop dword [rax + rax]
0x00006558      498b4550       mov rax, qword [r13 + 0x50]
0x0000655c      4b8d3c37       lea rdi, [r15 + r14]
0x00006560      48c1e005       shl rax, 5
0x00006564      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000656b      440fb74810     movzx r9d, word [rax + 0x10]
0x00006570      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006576      83f801         cmp eax, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4758
0x00006579      0f85cffdffff   jne 0x634e
0x0000657f      90             nop
0x00006580      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006586      4151           push r9
0x00006588      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x0000658f      e9cdfdffff     jmp 0x6361
0x00006594      0f1f4000       nop dword [rax]
0x00006598      498b4550       mov rax, qword [r13 + 0x50]
0x0000659c      4b8d3c37       lea rdi, [r15 + r14]
0x000065a0      48c1e005       shl rax, 5
0x000065a4      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000065ab      440fbf4810     movsx r9d, word [rax + 0x10]
0x000065b0      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x000065b6      83f801         cmp eax, 1
0x000065b9      74c5           je 0x6580
0x000065bb      83f802         cmp eax, 2
0x000065be      0f8593fdffff   jne 0x6357
0x000065c4      0f1f4000       nop dword [rax]
0x000065c8      4883ec08       sub rsp, 8
0x000065cc      ffb510fcffff   push qword [rbp - 0x3f0]
0x000065d2      4151           push r9
0x000065d4      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x000065da      50             push rax
0x000065db      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]            ; ../coreutils-8.31/lib/vasnprintf.c:4623
0x000065e2      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x000065e9      4c89d6         mov rsi, r10
0x000065ec      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x000065f3      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4624
0x000065f8      31c0           xor eax, eax
0x000065fa      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006601      e8faacffff     call sym.imp.__snprintf_chk
0x00006606      4883c420       add rsp, 0x20
0x0000660a      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006611      e940fcffff     jmp 0x6256
0x00006616      662e0f1f8400.  nop word cs:[rax + rax]
0x00006620      498b4550       mov rax, qword [r13 + 0x50]
0x00006624      4b8d3c37       lea rdi, [r15 + r14]
0x00006628      48c1e005       shl rax, 5
0x0000662c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006633      440fb64810     movzx r9d, byte [rax + 0x10]
0x00006638      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000663e      83f801         cmp eax, 1
0x00006641      0f8507fdffff   jne 0x634e
0x00006647      e934ffffff     jmp 0x6580
0x0000664c      0f1f4000       nop dword [rax]
0x00006650      498b4550       mov rax, qword [r13 + 0x50]
0x00006654      4b8d3c37       lea rdi, [r15 + r14]
0x00006658      48c1e005       shl rax, 5
0x0000665c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006663      440fbe4810     movsx r9d, byte [rax + 0x10]
0x00006668      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000666e      83f801         cmp eax, 1
0x00006671      0f85d7fcffff   jne 0x634e
0x00006677      e904ffffff     jmp 0x6580
0x0000667c      0f1f4000       nop dword [rax]
0x00006680      4c89e7         mov rdi, r12
0x00006683      e858aeffff     call sym.imp.malloc
0x00006688      4885c0         test rax, rax
0x0000668b      4889c1         mov rcx, rax
0x0000668e      0f846df7ffff   je 0x5e01
0x00006694      4d85f6         test r14, r14
0x00006697      0f84b3000000   je 0x6750
0x0000669d      84db           test bl, bl
0x0000669f      0f84ab000000   je 0x6750
0x000066a5      4c89fe         mov rsi, r15
0x000066a8      4c89f2         mov rdx, r14
0x000066ab      4889c7         mov rdi, rax
0x000066ae      e8fdadffff     call sym.imp.memcpy
0x000066b3      4989c7         mov r15, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1511
0x000066b6      e9e5faffff     jmp 0x61a0
0x000066bb      0f1f440000     nop dword [rax + rax]
0x000066c0      4883ec08       sub rsp, 8
0x000066c4      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/xsize.h:-338
0x000066ca      4151           push r9
0x000066cc      e903ffffff     jmp 0x65d4
0x000066d1      0f1f80000000.  nop dword [rax]
0x000066d8      ffb510fcffff   push qword [rbp - 0x3f0]
0x000066de      4151           push r9
0x000066e0      e9a3feffff     jmp 0x6588
0x000066e5      0f1f00         nop dword [rax]
0x000066e8      c6470100       mov byte [rdi + 1], 0
0x000066ec      e9affaffff     jmp 0x61a0
0x000066f1      0f1f80000000.  nop dword [rax]
0x000066f8      4883f8ff       cmp rax, 0xffffffffffffffff
0x000066fc      0f85b4040000   jne 0x6bb6
0x00006702      4c89f0         mov rax, r14
0x00006705      4883c001       add rax, 1
0x00006709      4889c3         mov rbx, rax
0x0000670c      0f8386000000   jae 0x6798
0x00006712      4983fcff       cmp r12, 0xffffffffffffffff
0x00006716      0f85d9f6ffff   jne 0x5df5
0x0000671c      4c89e3         mov rbx, r12
0x0000671f      43c6043725     mov byte [r15 + r14], 0x25              ; '%'
                                                                       ; [0x25:1]=0
0x00006724      4d8b4508       mov r8, qword [r13 + 8]
0x00006728      4983c558       add r13, 0x58
0x0000672c      498b4d00       mov rcx, qword [r13]
0x00006730      48838500fcff.  add qword [rbp - 0x400], 1
0x00006738      4c39c1         cmp rcx, r8
0x0000673b      0f8598f6ffff   jne 0x5dd9
0x00006741      4989de         mov r14, rbx
0x00006744      e9faf7ffff     jmp 0x5f43                              ; ../coreutils-8.31/lib/vasnprintf.c:1525
0x00006749      0f1f80000000.  nop dword [rax]
0x00006750      4989cf         mov r15, rcx
0x00006753      e948faffff     jmp 0x61a0                              ; ../coreutils-8.31/lib/vasnprintf.c:1514
0x00006758      e8d3abffff     call sym.imp.__errno_location
0x0000675d      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00006764      e9bef6ffff     jmp 0x5e27
0x00006769      0f1f80000000.  nop dword [rax]
0x00006770      89fa           mov edx, edi
0x00006772      83ea12         sub edx, 0x12
0x00006775      83fa04         cmp edx, 4
0x00006778      0f8738040000   ja 0x6bb6
0x0000677e      488d3dab2b00.  lea rdi, [0x00009330]
0x00006785      488b4010       mov rax, qword [rax + 0x10]
0x00006789      48631497       movsxd rdx, dword [rdi + rdx*4]
0x0000678d      4801fa         add rdx, rdi
0x00006790      ffe2           jmp rdx
0x00006792      660f1f440000   nop word [rax + rax]
0x00006798      4939c4         cmp r12, rax
0x0000679b      7382           jae 0x671f
0x0000679d      4d85e4         test r12, r12
0x000067a0      0f85ca030000   jne 0x6b70
0x000067a6      4883f80c       cmp rax, 0xc
0x000067aa      0f87d2030000   ja 0x6b82
0x000067b0      41bc0c000000   mov r12d, 0xc
0x000067b6      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000067bd      0f94c2         sete dl
0x000067c0      4d85ff         test r15, r15
0x000067c3      0f8467020000   je 0x6a30
0x000067c9      84d2           test dl, dl
0x000067cb      0f855f020000   jne 0x6a30
0x000067d1      4c89e6         mov rsi, r12
0x000067d4      4c89ff         mov rdi, r15
0x000067d7      e854adffff     call sym.imp.realloc                    ; ../coreutils-8.31/lib/vasnprintf.c:1487
0x000067dc      4885c0         test rax, rax
0x000067df      0f84f6000000   je 0x68db
0x000067e5      4989c7         mov r15, rax
0x000067e8      e932ffffff     jmp 0x671f
0x000067ed      0f1f00         nop dword [rax]
0x000067f0      c78520fcffff.  mov dword [rbp - 0x3e0], 0
0x000067fa      e9e8f8ffff     jmp 0x60e7
0x000067ff      90             nop
0x00006800      0f88eff5ffff   js 0x5df5
0x00006806      4d01e4         add r12, r12
0x00006809      4939c4         cmp r12, rax
0x0000680c      0f83d4f6ffff   jae 0x5ee6
0x00006812      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006816      0f84d9f5ffff   je 0x5df5
0x0000681c      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006823      4989c4         mov r12, rax
0x00006826      0f94c2         sete dl
0x00006829      4d85ff         test r15, r15
0x0000682c      0f85c7f6ffff   jne 0x5ef9
0x00006832      660f1f440000   nop word [rax + rax]
0x00006838      4c89e7         mov rdi, r12
0x0000683b      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00006842      889530fcffff   mov byte [rbp - 0x3d0], dl
0x00006848      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x0000684f      e88cacffff     call sym.imp.malloc
0x00006854      4885c0         test rax, rax
0x00006857      4989c1         mov r9, rax
0x0000685a      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00006861      0fb69530fcff.  movzx edx, byte [rbp - 0x3d0]
0x00006868      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x0000686f      0f8480f5ffff   je 0x5df5
0x00006875      4885db         test rbx, rbx
0x00006878      0f8402020000   je 0x6a80
0x0000687e      84d2           test dl, dl
0x00006880      0f84fa010000   je 0x6a80
0x00006886      4c89fe         mov rsi, r15
0x00006889      4889da         mov rdx, rbx
0x0000688c      4889c7         mov rdi, rax
0x0000688f      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x00006896      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x0000689d      e80eacffff     call sym.imp.memcpy
0x000068a2      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x000068a9      4989c7         mov r15, rax
0x000068ac      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x000068b3      e97cf6ffff     jmp 0x5f34
0x000068b8      0f1f84000000.  nop dword [rax + rax]
0x000068c0      4d89e6         mov r14, r12
0x000068c3      e96cf6ffff     jmp 0x5f34
0x000068c8      0f1f84000000.  nop dword [rax + rax]
0x000068d0      4c8930         mov qword [rax], r14
0x000068d3      4c89f3         mov rbx, r14
0x000068d6      e949feffff     jmp 0x6724
0x000068db      e850aaffff     call sym.imp.__errno_location
0x000068e0      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x000068e7      660f1f840000.  nop word [rax + rax]
0x000068f0      4c89ff         mov rdi, r15
0x000068f3      e818aaffff     call sym.imp.free
0x000068f8      e916f5ffff     jmp 0x5e13
0x000068fd      0f1f00         nop dword [rax]
0x00006900      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x00006907      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x0000690e      4c89d6         mov rsi, r10
0x00006911      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00006918      ba01000000     mov edx, 1
0x0000691d      b801000000     mov eax, 1
0x00006922      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006929      e8d2a9ffff     call sym.imp.__snprintf_chk
0x0000692e      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006935      e91cf9ffff     jmp 0x6256
0x0000693a      660f1f440000   nop word [rax + rax]
0x00006940      4883ec10       sub rsp, 0x10
0x00006944      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x0000694b      db3c24         fstp xword [rsp]
0x0000694e      e9d6f8ffff     jmp 0x6229
0x00006953      0f1f440000     nop dword [rax + rax]
0x00006958      0f8897f4ffff   js 0x5df5
0x0000695e      4d01e4         add r12, r12
0x00006961      4939c4         cmp r12, rax
0x00006964      0f83dff7ffff   jae 0x6149
0x0000696a      660f1f440000   nop word [rax + rax]
0x00006970      4885d2         test rdx, rdx
0x00006973      0f857cf4ffff   jne 0x5df5
0x00006979      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000697d      0f8472f4ffff   je 0x5df5
0x00006983      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000698a      4989c4         mov r12, rax
0x0000698d      0f94c2         sete dl                                 ; string_fortified.h:-369
0x00006990      4d85ff         test r15, r15
0x00006993      0f85c3f7ffff   jne 0x615c
0x00006999      0f1f80000000.  nop dword [rax]
0x000069a0      4c89e7         mov rdi, r12
0x000069a3      889538fcffff   mov byte [rbp - 0x3c8], dl
0x000069a9      e832abffff     call sym.imp.malloc
0x000069ae      4885c0         test rax, rax
0x000069b1      4889c1         mov rcx, rax
0x000069b4      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x000069bb      0f8434f4ffff   je 0x5df5                               ; ../coreutils-8.31/lib/vasnprintf.c:1528
0x000069c1      4d85f6         test r14, r14
0x000069c4      0f8496010000   je 0x6b60
0x000069ca      84d2           test dl, dl
0x000069cc      0f848e010000   je 0x6b60
0x000069d2      4c89fe         mov rsi, r15
0x000069d5      4c89f2         mov rdx, r14
0x000069d8      4889c7         mov rdi, rax
0x000069db      e8d0aaffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/vasnprintf.c:1531
0x000069e0      4989c7         mov r15, rax
0x000069e3      e993f7ffff     jmp 0x617b
0x000069e8      0f1f84000000.  nop dword [rax + rax]
0x000069f0      c6034c         mov byte [rbx], 0x4c                    ; 'L'
                                                                       ; [0x4c:1]=0
0x000069f3      4883c301       add rbx, 1
0x000069f7      e9aff6ffff     jmp 0x60ab
0x000069fc      0f1f4000       nop dword [rax]
0x00006a00      448830         mov byte [rax], r14b
0x00006a03      4c89f3         mov rbx, r14
0x00006a06      e919fdffff     jmp 0x6724
0x00006a0b      0f1f440000     nop dword [rax + rax]
0x00006a10      448930         mov dword [rax], r14d
0x00006a13      4c89f3         mov rbx, r14
0x00006a16      e909fdffff     jmp 0x6724
0x00006a1b      0f1f440000     nop dword [rax + rax]
0x00006a20      66448930       mov word [rax], r14w
0x00006a24      4c89f3         mov rbx, r14
0x00006a27      e9f8fcffff     jmp 0x6724
0x00006a2c      0f1f4000       nop dword [rax]
0x00006a30      4c89e7         mov rdi, r12
0x00006a33      889538fcffff   mov byte [rbp - 0x3c8], dl
0x00006a39      e8a2aaffff     call sym.imp.malloc
0x00006a3e      4885c0         test rax, rax
0x00006a41      4889c1         mov rcx, rax
0x00006a44      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x00006a4b      0f84a4f3ffff   je 0x5df5                               ; stdio2.h:-339
0x00006a51      4d85f6         test r14, r14
0x00006a54      0f843a010000   je 0x6b94
0x00006a5a      84d2           test dl, dl
0x00006a5c      0f8432010000   je 0x6b94
0x00006a62      4c89fe         mov rsi, r15
0x00006a65      4c89f2         mov rdx, r14
0x00006a68      4889c7         mov rdi, rax
0x00006a6b      e840aaffff     call sym.imp.memcpy
0x00006a70      4989c7         mov r15, rax
0x00006a73      e9a7fcffff     jmp 0x671f
0x00006a78      0f1f84000000.  nop dword [rax + rax]
0x00006a80      4d89cf         mov r15, r9
0x00006a83      e9acf4ffff     jmp 0x5f34
0x00006a88      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/vasnprintf.c:5157
0x00006a90      4883ec08       sub rsp, 8
0x00006a94      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006a9a      e976faffff     jmp 0x6515
0x00006a9f      90             nop
0x00006aa0      4883ec08       sub rsp, 8
0x00006aa4      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006aaa      4883ec10       sub rsp, 0x10
0x00006aae      db3c24         fstp xword [rsp]
0x00006ab1      e925fbffff     jmp 0x65db
0x00006ab6      662e0f1f8400.  nop word cs:[rax + rax]
0x00006ac0      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00006ac7      8bbddcfbffff   mov edi, dword [rbp - 0x424]
0x00006acd      4863d9         movsxd rbx, ecx
0x00006ad0      4c01f3         add rbx, r14
0x00006ad3      8938           mov dword [rax], edi
0x00006ad5      e94afcffff     jmp 0x6724
0x00006ada      660f1f440000   nop word [rax + rax]
0x00006ae0      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006ae7      7409           je 0x6af2
0x00006ae9      4d85ff         test r15, r15
0x00006aec      0f85b7000000   jne 0x6ba9
0x00006af2      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x00006af9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5198
0x00006afc      7408           je 0x6b06
0x00006afe      4889c7         mov rdi, rax
0x00006b01      e80aa8ffff     call sym.imp.free
0x00006b06      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x00006b0d      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00006b14      4883c020       add rax, 0x20                           ; "@"
0x00006b18      4839c7         cmp rdi, rax
0x00006b1b      7405           je 0x6b22
0x00006b1d      e8eea7ffff     call sym.imp.free
0x00006b22      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00006b29      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00006b30      4883c010       add rax, 0x10
0x00006b34      4839c7         cmp rdi, rax
0x00006b37      7405           je 0x6b3e
0x00006b39      e8d2a7ffff     call sym.imp.free
0x00006b3e      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00006b45      4531ff         xor r15d, r15d
0x00006b48      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x00006b4e      e91cf3ffff     jmp 0x5e6f
0x00006b53      0f1f440000     nop dword [rax + rax]
0x00006b58      4531ff         xor r15d, r15d
0x00006b5b      e90ff3ffff     jmp 0x5e6f
0x00006b60      4989cf         mov r15, rcx
0x00006b63      e913f6ffff     jmp 0x617b                              ; ../coreutils-8.31/lib/vasnprintf.c:1273
0x00006b68      0f1f84000000.  nop dword [rax + rax]
0x00006b70      0f887ff2ffff   js 0x5df5
0x00006b76      4d01e4         add r12, r12
0x00006b79      4939c4         cmp r12, rax
0x00006b7c      0f8334fcffff   jae 0x67b6
0x00006b82      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006b86      0f8469f2ffff   je 0x5df5
0x00006b8c      4989c4         mov r12, rax
0x00006b8f      e922fcffff     jmp 0x67b6
0x00006b94      4989cf         mov r15, rcx
0x00006b97      e983fbffff     jmp 0x671f
0x00006b9c      4c89ff         mov rdi, r15
0x00006b9f      e86ca7ffff     call sym.imp.free
0x00006ba4      e949f8ffff     jmp 0x63f2
0x00006ba9      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/vasnprintf.c:1275
0x00006bac      e85fa7ffff     call sym.imp.free
0x00006bb1      e93cffffff     jmp 0x6af2
0x00006bb6      e865a7ffff     call sym.imp.abort
0x00006bbb      0f1f440000     nop dword [rax + rax]
0x00006bc0      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x00006bc7      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00006bce      4883c020       add rax, 0x20                           ; "@"
0x00006bd2      4839c7         cmp rdi, rax
0x00006bd5      7405           je 0x6bdc
0x00006bd7      e834a7ffff     call sym.imp.free
0x00006bdc      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00006be3      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00006bea      4883c010       add rax, 0x10
0x00006bee      4839c7         cmp rdi, rax
0x00006bf1      7405           je 0x6bf8
0x00006bf3      e818a7ffff     call sym.imp.free
0x00006bf8      e833a7ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:5040
0x00006bfd      4531ff         xor r15d, r15d
0x00006c00      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x16f00000
0x00006c06      e964f2ffff     jmp 0x5e6f
0x00006c0b      4c89f3         mov rbx, r14
0x00006c0e      31c0           xor eax, eax
0x00006c10      4883c301       add rbx, 1
0x00006c14      0f8206010000   jb 0x6d20
0x00006c1a      4939dc         cmp r12, rbx
0x00006c1d      734d           jae 0x6c6c
0x00006c1f      4d85e4         test r12, r12
0x00006c22      0f8531010000   jne 0x6d59                              ; ../coreutils-8.31/lib/vasnprintf.c:5048
0x00006c28      4883fb0c       cmp rbx, 0xc
0x00006c2c      0f870c010000   ja 0x6d3e
0x00006c32      41bc0c000000   mov r12d, 0xc
0x00006c38      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006c3f      410f94c5       sete r13b
0x00006c43      4d85ff         test r15, r15
0x00006c46      0f84a0000000   je 0x6cec
0x00006c4c      4584ed         test r13b, r13b
0x00006c4f      0f8597000000   jne 0x6cec
0x00006c55      4c89e6         mov rsi, r12
0x00006c58      4c89ff         mov rdi, r15
0x00006c5b      e8d0a8ffff     call sym.imp.realloc
0x00006c60      4885c0         test rax, rax
0x00006c63      0f8472fcffff   je 0x68db
0x00006c69      4989c7         mov r15, rax
0x00006c6c      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006c73      43c6043700     mov byte [r15 + r14], 0
0x00006c78      7417           je 0x6c91
0x00006c7a      4939dc         cmp r12, rbx
0x00006c7d      7612           jbe 0x6c91
0x00006c7f      4c89ff         mov rdi, r15
0x00006c82      4889de         mov rsi, rbx
0x00006c85      e8a6a8ffff     call sym.imp.realloc
0x00006c8a      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5061
0x00006c8d      4c0f45f8       cmovne r15, rax
0x00006c91      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x00006c98      4885c0         test rax, rax
0x00006c9b      7408           je 0x6ca5
0x00006c9d      4889c7         mov rdi, rax
0x00006ca0      e86ba6ffff     call sym.imp.free
0x00006ca5      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x00006cac      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00006cb3      4883c020       add rax, 0x20                           ; "@"
0x00006cb7      4839c7         cmp rdi, rax
0x00006cba      7405           je 0x6cc1
0x00006cbc      e84fa6ffff     call sym.imp.free
0x00006cc1      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00006cc8      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00006ccf      4883c010       add rax, 0x10
0x00006cd3      4839c7         cmp rdi, rax
0x00006cd6      7405           je 0x6cdd
0x00006cd8      e833a6ffff     call sym.imp.free
0x00006cdd      488b85e8fbff.  mov rax, qword [rbp - 0x418]
0x00006ce4      4c8930         mov qword [rax], r14
0x00006ce7      e983f1ffff     jmp 0x5e6f
0x00006cec      4c89e7         mov rdi, r12
0x00006cef      e8eca7ffff     call sym.imp.malloc
0x00006cf4      4885c0         test rax, rax
0x00006cf7      4889c1         mov rcx, rax
0x00006cfa      0f84f5f0ffff   je 0x5df5
0x00006d00      4d85f6         test r14, r14
0x00006d03      746b           je 0x6d70
0x00006d05      4584ed         test r13b, r13b
0x00006d08      7466           je 0x6d70
0x00006d0a      4c89fe         mov rsi, r15
0x00006d0d      4c89f2         mov rdx, r14
0x00006d10      4889c7         mov rdi, rax
0x00006d13      e898a7ffff     call sym.imp.memcpy
0x00006d18      4989c7         mov r15, rax
0x00006d1b      e94cffffff     jmp 0x6c6c                              ; ../coreutils-8.31/lib/vasnprintf.c:4732
0x00006d20      4983fcff       cmp r12, 0xffffffffffffffff
0x00006d24      b801000000     mov eax, 1
0x00006d29      0f843dffffff   je 0x6c6c
0x00006d2f      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/vasnprintf.c:4421
0x00006d32      0f84bdf0ffff   je 0x5df5
0x00006d38      0f88b7f0ffff   js 0x5df5
0x00006d3e      4885c0         test rax, rax
0x00006d41      0f85aef0ffff   jne 0x5df5
0x00006d47      4883fbff       cmp rbx, 0xffffffffffffffff
0x00006d4b      0f84a4f0ffff   je 0x5df5
0x00006d51      4989dc         mov r12, rbx
0x00006d54      e9dffeffff     jmp 0x6c38
0x00006d59      0f8896f0ffff   js 0x5df5
0x00006d5f      4d01e4         add r12, r12
0x00006d62      4939dc         cmp r12, rbx
0x00006d65      0f83cdfeffff   jae 0x6c38
0x00006d6b      ebd1           jmp 0x6d3e
0x00006d6d      0f1f00         nop dword [rax]
0x00006d70      4989cf         mov r15, rcx
0x00006d73      e9f4feffff     jmp 0x6c6c
0x00006d78      4983fcff       cmp r12, 0xffffffffffffffff
0x00006d7c      0f841ef4ffff   je 0x61a0
0x00006d82      e97af0ffff     jmp 0x5e01
0x00006d87      e874a6ffff     call sym.imp.__stack_chk_fail
0x00006d8c      4983fcff       cmp r12, 0xffffffffffffffff
0x00006d90      ba01000000     mov edx, 1
0x00006d95      0f84e0f3ffff   je 0x617b
0x00006d9b      4d85e4         test r12, r12
0x00006d9e      0f8451f0ffff   je 0x5df5
0x00006da4      0f89c6fbffff   jns 0x6970
0x00006daa      e946f0ffff     jmp 0x5df5
0x00006daf      90             nop
;-- printf_fetchargs:
0x00006db0      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/printf-args.c:37
0x00006db4      488b4608       mov rax, qword [rsi + 8]
0x00006db8      7463           je 0x6e1d
0x00006dba      4c8d058f2500.  lea r8, [0x00009350]                    ; ../coreutils-8.31/lib/printf-args.c:42
0x00006dc1      4c8d15e82500.  lea r10, obj.wide_null_string.2696      ; 0x93b0 ; U"(NULL)"
0x00006dc8      4c8d0d752500.  lea r9, [0x00009344]                    ; "(NULL)"
0x00006dcf      31c9           xor ecx, ecx
0x00006dd1      0f1f80000000.  nop dword [rax]
0x00006dd8      833816         cmp dword [rax], 0x16
0x00006ddb      7743           ja 0x6e20
0x00006ddd      8b10           mov edx, dword [rax]
0x00006ddf      49631490       movsxd rdx, dword [r8 + rdx*4]
0x00006de3      4c01c2         add rdx, r8
0x00006de6      ffe2           jmp rdx
0x00006de8      0f1f84000000.  nop dword [rax + rax]
0x00006df0      488b5708       mov rdx, qword [rdi + 8]                ; stddef.h:38      && !defined(__need_wint_t))
0x00006df4      4883c20f       add rdx, 0xf
0x00006df8      4883e2f0       and rdx, 0xfffffffffffffff0
0x00006dfc      4c8d5a10       lea r11, [rdx + 0x10]
0x00006e00      4c895f08       mov qword [rdi + 8], r11
0x00006e04      db2a           fld xword [rdx]
0x00006e06      db7810         fstp xword [rax + 0x10]
0x00006e09      0f1f80000000.  nop dword [rax]
0x00006e10      4883c101       add rcx, 1
0x00006e14      4883c020       add rax, 0x20                           ; stddef.h:-9 ; "@"
0x00006e18      48390e         cmp qword [rsi], rcx
0x00006e1b      77bb           ja 0x6dd8
0x00006e1d      31c0           xor eax, eax
0x00006e1f      c3             ret
0x00006e20      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006e25      c3             ret
0x00006e26      448b1f         mov r11d, dword [rdi]
0x00006e29      4183fb2f       cmp r11d, 0x2f
0x00006e2d      0f8737010000   ja 0x6f6a
0x00006e33      4489da         mov edx, r11d
0x00006e36      48035710       add rdx, qword [rdi + 0x10]             ; stddef.h:-54
0x00006e3a      4183c308       add r11d, 8
0x00006e3e      44891f         mov dword [rdi], r11d
0x00006e41      488b12         mov rdx, qword [rdx]
0x00006e44      48895010       mov qword [rax + 0x10], rdx
0x00006e48      ebc6           jmp 0x6e10
0x00006e4a      448b1f         mov r11d, dword [rdi]
0x00006e4d      4183fb2f       cmp r11d, 0x2f
0x00006e51      0f8735010000   ja 0x6f8c
0x00006e57      4489da         mov edx, r11d
0x00006e5a      48035710       add rdx, qword [rdi + 0x10]
0x00006e5e      4183c308       add r11d, 8
0x00006e62      44891f         mov dword [rdi], r11d
0x00006e65      8b12           mov edx, dword [rdx]
0x00006e67      895010         mov dword [rax + 0x10], edx
0x00006e6a      eba4           jmp 0x6e10
0x00006e6c      448b1f         mov r11d, dword [rdi]
0x00006e6f      4183fb2f       cmp r11d, 0x2f
0x00006e73      0f8702010000   ja 0x6f7b
0x00006e79      4489da         mov edx, r11d                           ; stddef.h:-47
0x00006e7c      48035710       add rdx, qword [rdi + 0x10]
0x00006e80      4183c308       add r11d, 8
0x00006e84      44891f         mov dword [rdi], r11d
0x00006e87      8b12           mov edx, dword [rdx]
0x00006e89      885010         mov byte [rax + 0x10], dl
0x00006e8c      eb82           jmp 0x6e10
0x00006e8e      448b1f         mov r11d, dword [rdi]
0x00006e91      4183fb2f       cmp r11d, 0x2f
0x00006e95      0f879f000000   ja 0x6f3a
0x00006e9b      4489da         mov edx, r11d
0x00006e9e      48035710       add rdx, qword [rdi + 0x10]
0x00006ea2      4183c308       add r11d, 8
0x00006ea6      44891f         mov dword [rdi], r11d
0x00006ea9      8b12           mov edx, dword [rdx]
0x00006eab      66895010       mov word [rax + 0x10], dx
0x00006eaf      e95cffffff     jmp 0x6e10
0x00006eb4      448b1f         mov r11d, dword [rdi]
0x00006eb7      4183fb2f       cmp r11d, 0x2f
0x00006ebb      0f878a000000   ja 0x6f4b
0x00006ec1      4489da         mov edx, r11d
0x00006ec4      48035710       add rdx, qword [rdi + 0x10]
0x00006ec8      4183c308       add r11d, 8
0x00006ecc      44891f         mov dword [rdi], r11d
0x00006ecf      488b12         mov rdx, qword [rdx]
0x00006ed2      4885d2         test rdx, rdx
0x00006ed5      490f44d1       cmove rdx, r9                           ; stddef.h:-24
0x00006ed9      48895010       mov qword [rax + 0x10], rdx
0x00006edd      e92effffff     jmp 0x6e10
0x00006ee2      448b5f04       mov r11d, dword [rdi + 4]
0x00006ee6      4181fbaf0000.  cmp r11d, 0xaf
0x00006eed      0f87aa000000   ja 0x6f9d
0x00006ef3      4489da         mov edx, r11d
0x00006ef6      48035710       add rdx, qword [rdi + 0x10]
0x00006efa      4183c310       add r11d, 0x10
0x00006efe      44895f04       mov dword [rdi + 4], r11d
0x00006f02      f20f1002       movsd xmm0, qword [rdx]
0x00006f06      f20f114010     movsd qword [rax + 0x10], xmm0
0x00006f0b      e900ffffff     jmp 0x6e10
0x00006f10      448b1f         mov r11d, dword [rdi]
0x00006f13      4183fb2f       cmp r11d, 0x2f
0x00006f17      7743           ja 0x6f5c
0x00006f19      4489da         mov edx, r11d
0x00006f1c      48035710       add rdx, qword [rdi + 0x10]
0x00006f20      4183c308       add r11d, 8
0x00006f24      44891f         mov dword [rdi], r11d
0x00006f27      488b12         mov rdx, qword [rdx]
0x00006f2a      4885d2         test rdx, rdx
0x00006f2d      490f44d2       cmove rdx, r10
0x00006f31      48895010       mov qword [rax + 0x10], rdx
0x00006f35      e9d6feffff     jmp 0x6e10
0x00006f3a      488b5708       mov rdx, qword [rdi + 8]
0x00006f3e      4c8d5a08       lea r11, [rdx + 8]
0x00006f42      4c895f08       mov qword [rdi + 8], r11
0x00006f46      e95effffff     jmp 0x6ea9
0x00006f4b      488b5708       mov rdx, qword [rdi + 8]
0x00006f4f      4c8d5a08       lea r11, [rdx + 8]
0x00006f53      4c895f08       mov qword [rdi + 8], r11
0x00006f57      e973ffffff     jmp 0x6ecf
0x00006f5c      488b5708       mov rdx, qword [rdi + 8]
0x00006f60      4c8d5a08       lea r11, [rdx + 8]
0x00006f64      4c895f08       mov qword [rdi + 8], r11
0x00006f68      ebbd           jmp 0x6f27
0x00006f6a      488b5708       mov rdx, qword [rdi + 8]
0x00006f6e      4c8d5a08       lea r11, [rdx + 8]
0x00006f72      4c895f08       mov qword [rdi + 8], r11
0x00006f76      e9c6feffff     jmp 0x6e41
0x00006f7b      488b5708       mov rdx, qword [rdi + 8]
0x00006f7f      4c8d5a08       lea r11, [rdx + 8]
0x00006f83      4c895f08       mov qword [rdi + 8], r11
0x00006f87      e9fbfeffff     jmp 0x6e87
0x00006f8c      488b5708       mov rdx, qword [rdi + 8]
0x00006f90      4c8d5a08       lea r11, [rdx + 8]
0x00006f94      4c895f08       mov qword [rdi + 8], r11
0x00006f98      e9c8feffff     jmp 0x6e65
0x00006f9d      488b5708       mov rdx, qword [rdi + 8]
0x00006fa1      4c8d5a08       lea r11, [rdx + 8]
0x00006fa5      4c895f08       mov qword [rdi + 8], r11
0x00006fa9      e954ffffff     jmp 0x6f02
0x00006fae      6690           nop
;-- printf_parse:
0x00006fb0      4157           push r15
0x00006fb2      4156           push r14
0x00006fb4      488d4e20       lea rcx, [rsi + 0x20]
0x00006fb8      4155           push r13
0x00006fba      4154           push r12
0x00006fbc      488d4210       lea rax, [rdx + 0x10]
0x00006fc0      55             push rbp
0x00006fc1      53             push rbx
0x00006fc2      4989f6         mov r14, rsi
0x00006fc5      4989d7         mov r15, rdx
0x00006fc8      31db           xor ebx, ebx
0x00006fca      41b907000000   mov r9d, 7
0x00006fd0      4883ec58       sub rsp, 0x58
0x00006fd4      41ba07000000   mov r10d, 7
0x00006fda      48c706000000.  mov qword [rsi], 0
0x00006fe1      48894e08       mov qword [rsi + 8], rcx
0x00006fe5      48894c2428     mov qword [rsp + 0x28], rcx
0x00006fea      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00006ff1      48c702000000.  mov qword [rdx], 0
0x00006ff8      4889442408     mov qword [rsp + 8], rax
0x00006ffd      48894208       mov qword [rdx + 8], rax
0x00007001      48c744241800.  mov qword [rsp + 0x18], 0
0x0000700a      48c744241000.  mov qword [rsp + 0x10], 0
0x00007013      48c744242000.  mov qword [rsp + 0x20], 0
0x0000701c      eb0d           jmp 0x702b
0x0000701e      6690           nop
0x00007020      3c25           cmp al, 0x25
0x00007022      488d6f01       lea rbp, [rdi + 1]
0x00007026      7440           je 0x7068
0x00007028      4889ef         mov rdi, rbp
0x0000702b      0fb607         movzx eax, byte [rdi]
0x0000702e      84c0           test al, al
0x00007030      75ee           jne 0x7020
0x00007032      488d049b       lea rax, [rbx + rbx*4]
0x00007036      488d0443       lea rax, [rbx + rax*2]
0x0000703a      48893cc1       mov qword [rcx + rax*8], rdi
0x0000703e      488b442410     mov rax, qword [rsp + 0x10]
0x00007043      49894610       mov qword [r14 + 0x10], rax
0x00007047      488b442418     mov rax, qword [rsp + 0x18]
0x0000704c      49894618       mov qword [r14 + 0x18], rax
0x00007050      31c0           xor eax, eax
0x00007052      4883c458       add rsp, 0x58
0x00007056      5b             pop rbx
0x00007057      5d             pop rbp
0x00007058      415c           pop r12
0x0000705a      415d           pop r13
0x0000705c      415e           pop r14
0x0000705e      415f           pop r15
0x00007060      c3             ret
0x00007061      0f1f80000000.  nop dword [rax]
0x00007068      488d049b       lea rax, [rbx + rbx*4]
0x0000706c      4d89c5         mov r13, r8
0x0000706f      488d0443       lea rax, [rbx + rax*2]
0x00007073      4c8d24c1       lea r12, [rcx + rax*8]
0x00007077      49893c24       mov qword [r12], rdi
0x0000707b      41c744241000.  mov dword [r12 + 0x10], 0
0x00007084      49c744241800.  mov qword [r12 + 0x18], 0
0x0000708d      49c744242000.  mov qword [r12 + 0x20], 0
0x00007096      4d89442428     mov qword [r12 + 0x28], r8
0x0000709b      49c744243000.  mov qword [r12 + 0x30], 0
0x000070a4      49c744243800.  mov qword [r12 + 0x38], 0
0x000070ad      4d89442440     mov qword [r12 + 0x40], r8
0x000070b2      4d89442450     mov qword [r12 + 0x50], r8
0x000070b7      0fb65f01       movzx ebx, byte [rdi + 1]
0x000070bb      8d43d0         lea eax, [rbx - 0x30]
0x000070be      3c09           cmp al, 9
0x000070c0      773c           ja 0x70fe
0x000070c2      e933040000     jmp 0x74fa
0x000070c7      660f1f840000.  nop word [rax + rax]
0x000070d0      80fb2d         cmp bl, 0x2d
0x000070d3      7443           je 0x7118
0x000070d5      80fb2b         cmp bl, 0x2b
0x000070d8      7446           je 0x7120
0x000070da      80fb20         cmp bl, 0x20                            ; "@"
0x000070dd      7451           je 0x7130
0x000070df      80fb23         cmp bl, 0x23
0x000070e2      745c           je 0x7140
0x000070e4      80fb30         cmp bl, 0x30
0x000070e7      7467           je 0x7150
0x000070e9      80fb49         cmp bl, 0x49
0x000070ec      7572           jne 0x7160
0x000070ee      41834c241040   or dword [r12 + 0x10], 0x40             ; segment.PHDR
                                                                       ; [0x40:4]=6
0x000070f4      0f1f4000       nop dword [rax]
0x000070f8      0fb618         movzx ebx, byte [rax]
0x000070fb      4889c5         mov rbp, rax
0x000070fe      488d4501       lea rax, [rbp + 1]
0x00007102      80fb27         cmp bl, 0x27
0x00007105      4889c2         mov rdx, rax
0x00007108      75c6           jne 0x70d0
0x0000710a      41834c241001   or dword [r12 + 0x10], 1
0x00007110      ebe6           jmp 0x70f8
0x00007112      660f1f440000   nop word [rax + rax]
0x00007118      41834c241002   or dword [r12 + 0x10], 2
0x0000711e      ebd8           jmp 0x70f8
0x00007120      41834c241004   or dword [r12 + 0x10], 4
0x00007126      ebd0           jmp 0x70f8
0x00007128      0f1f84000000.  nop dword [rax + rax]
0x00007130      41834c241008   or dword [r12 + 0x10], 8
0x00007136      ebc0           jmp 0x70f8
0x00007138      0f1f84000000.  nop dword [rax + rax]
0x00007140      41834c241010   or dword [r12 + 0x10], 0x10             ; [0x10:4]=0x3e0003
0x00007146      ebb0           jmp 0x70f8
0x00007148      0f1f84000000.  nop dword [rax + rax]
0x00007150      41834c241020   or dword [r12 + 0x10], 0x20             ; [0x20:4]=64 ; "@"
0x00007156      eba0           jmp 0x70f8
0x00007158      0f1f84000000.  nop dword [rax + rax]
0x00007160      80fb2a         cmp bl, 0x2a
0x00007163      0f84b0010000   je 0x7319
0x00007169      8d4bd0         lea ecx, [rbx - 0x30]
0x0000716c      80f909         cmp cl, 9
0x0000716f      0f8612040000   jbe 0x7587
0x00007175      80fb2e         cmp bl, 0x2e
0x00007178      0f84d1020000   je 0x744f
0x0000717e      31c0           xor eax, eax
0x00007180      be01000000     mov esi, 1
0x00007185      eb30           jmp 0x71b7
0x00007187      660f1f840000.  nop word [rax + rax]
0x00007190      80fb4c         cmp bl, 0x4c
0x00007193      743b           je 0x71d0
0x00007195      80fb6c         cmp bl, 0x6c
0x00007198      7416           je 0x71b0
0x0000719a      80fb6a         cmp bl, 0x6a
0x0000719d      7411           je 0x71b0
0x0000719f      89da           mov edx, ebx
0x000071a1      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000071a4      80fa5a         cmp dl, 0x5a
0x000071a7      7407           je 0x71b0
0x000071a9      80fb74         cmp bl, 0x74
0x000071ac      752a           jne 0x71d8
0x000071ae      6690           nop
0x000071b0      83c008         add eax, 8
0x000071b3      0fb65d00       movzx ebx, byte [rbp]
0x000071b7      4883c501       add rbp, 1
0x000071bb      80fb68         cmp bl, 0x68
0x000071be      75d0           jne 0x7190
0x000071c0      89c1           mov ecx, eax
0x000071c2      89f2           mov edx, esi
0x000071c4      83e101         and ecx, 1
0x000071c7      d3e2           shl edx, cl
0x000071c9      09d0           or eax, edx
0x000071cb      ebe6           jmp 0x71b3
0x000071cd      0f1f00         nop dword [rax]
0x000071d0      83c804         or eax, 4
0x000071d3      ebde           jmp 0x71b3
0x000071d5      0f1f00         nop dword [rax]
0x000071d8      8d53db         lea edx, [rbx - 0x25]
0x000071db      80fa53         cmp dl, 0x53
0x000071de      0f8717060000   ja 0x77fb
0x000071e4      488d0de12100.  lea rcx, [0x000093cc]
0x000071eb      0fb6d2         movzx edx, dl
0x000071ee      48631491       movsxd rdx, dword [rcx + rdx*4]
0x000071f2      4801ca         add rdx, rcx
0x000071f5      ffe2           jmp rdx
0x000071f7      41bb10000000   mov r11d, 0x10
0x000071fd      bb73000000     mov ebx, 0x73                           ; 's'
0x00007202      660f1f440000   nop word [rax + rax]
0x00007208      4983fdff       cmp r13, 0xffffffffffffffff
0x0000720c      0f84b5060000   je 0x78c7
0x00007212      4d896c2450     mov qword [r12 + 0x50], r13
0x00007217      4d39e9         cmp r9, r13
0x0000721a      498b4f08       mov rcx, qword [r15 + 8]
0x0000721e      0f861c060000   jbe 0x7840
0x00007224      498b07         mov rax, qword [r15]
0x00007227      4889c2         mov rdx, rax
0x0000722a      48c1e205       shl rdx, 5
0x0000722e      4801ca         add rdx, rcx
0x00007231      4c39e8         cmp rax, r13
0x00007234      7720           ja 0x7256
0x00007236      662e0f1f8400.  nop word cs:[rax + rax]
0x00007240      4883c001       add rax, 1
0x00007244      c70200000000   mov dword [rdx], 0
0x0000724a      4883c220       add rdx, 0x20                           ; "@"
0x0000724e      4c39e8         cmp rax, r13
0x00007251      76ed           jbe 0x7240
0x00007253      498907         mov qword [r15], rax
0x00007256      49c1e505       shl r13, 5
0x0000725a      4a8d0429       lea rax, [rcx + r13]
0x0000725e      8b10           mov edx, dword [rax]
0x00007260      85d2           test edx, edx
0x00007262      0f85cb050000   jne 0x7833
0x00007268      448918         mov dword [rax], r11d
0x0000726b      41885c2448     mov byte [r12 + 0x48], bl
0x00007270      498b06         mov rax, qword [r14]
0x00007273      49896c2408     mov qword [r12 + 8], rbp
0x00007278      488d5801       lea rbx, [rax + 1]
0x0000727c      4939da         cmp r10, rbx
0x0000727f      49891e         mov qword [r14], rbx
0x00007282      0f8788000000   ja 0x7310
0x00007288      4d85d2         test r10, r10
0x0000728b      0f88a6090000   js 0x7c37
0x00007291      4d01d2         add r10, r10
0x00007294      48b8bae8a28b.  movabs rax, 0x2e8ba2e8ba2e8ba
0x0000729e      4939c2         cmp r10, rax
0x000072a1      0f8790090000   ja 0x7c37
0x000072a7      4b8d0492       lea rax, [r10 + r10*4]
0x000072ab      498b7e08       mov rdi, qword [r14 + 8]
0x000072af      48397c2428     cmp qword [rsp + 0x28], rdi
0x000072b4      4c894c2440     mov qword [rsp + 0x40], r9
0x000072b9      4c89542438     mov qword [rsp + 0x38], r10
0x000072be      498d0442       lea rax, [r10 + rax*2]
0x000072c2      4c89442430     mov qword [rsp + 0x30], r8
0x000072c7      488d34c50000.  lea rsi, [rax*8]
0x000072cf      0f84b8060000   je 0x798d
0x000072d5      e856a2ffff     call sym.imp.realloc
0x000072da      4885c0         test rax, rax
0x000072dd      4889c1         mov rcx, rax
0x000072e0      4c8b442430     mov r8, qword [rsp + 0x30]
0x000072e5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000072ea      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x000072ef      0f8442090000   je 0x7c37
0x000072f5      488b442428     mov rax, qword [rsp + 0x28]
0x000072fa      493b4608       cmp rax, qword [r14 + 8]
0x000072fe      498b1e         mov rbx, qword [r14]
0x00007301      0f84a9060000   je 0x79b0
0x00007307      49894e08       mov qword [r14 + 8], rcx
0x0000730b      e918fdffff     jmp 0x7028
0x00007310      498b4e08       mov rcx, qword [r14 + 8]
0x00007314      e90ffdffff     jmp 0x7028
0x00007319      488b742410     mov rsi, qword [rsp + 0x10]
0x0000731e      b901000000     mov ecx, 1
0x00007323      49896c2418     mov qword [r12 + 0x18], rbp
0x00007328      4989442420     mov qword [r12 + 0x20], rax
0x0000732d      4885f6         test rsi, rsi
0x00007330      480f45ce       cmovne rcx, rsi
0x00007334      48894c2410     mov qword [rsp + 0x10], rcx
0x00007339      0fb64d01       movzx ecx, byte [rbp + 1]
0x0000733d      8d71d0         lea esi, [rcx - 0x30]
0x00007340      4080fe09       cmp sil, 9
0x00007344      0f86db020000   jbe 0x7625
0x0000734a      488b742420     mov rsi, qword [rsp + 0x20]
0x0000734f      4883feff       cmp rsi, 0xffffffffffffffff
0x00007353      488d5601       lea rdx, [rsi + 1]
0x00007357      4989742428     mov qword [r12 + 0x28], rsi
0x0000735c      0f8499040000   je 0x77fb
0x00007362      488b5c2420     mov rbx, qword [rsp + 0x20]
0x00007367      4889c5         mov rbp, rax
0x0000736a      4889542420     mov qword [rsp + 0x20], rdx
0x0000736f      4939d9         cmp r9, rbx
0x00007372      498b4f08       mov rcx, qword [r15 + 8]
0x00007376      0f8776060000   ja 0x79f2
0x0000737c      4d01c9         add r9, r9
0x0000737f      488d4301       lea rax, [rbx + 1]
0x00007383      4939d9         cmp r9, rbx
0x00007386      4c0f46c8       cmovbe r9, rax
0x0000738a      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x00007394      4939c1         cmp r9, rax
0x00007397      0f879e080000   ja 0x7c3b
0x0000739d      4c89ce         mov rsi, r9
0x000073a0      4c894c2440     mov qword [rsp + 0x40], r9
0x000073a5      4c89542438     mov qword [rsp + 0x38], r10
0x000073aa      48c1e605       shl rsi, 5
0x000073ae      48394c2408     cmp qword [rsp + 8], rcx
0x000073b3      4c89442430     mov qword [rsp + 0x30], r8
0x000073b8      0f8413070000   je 0x7ad1
0x000073be      4889cf         mov rdi, rcx
0x000073c1      e86aa1ffff     call sym.imp.realloc
0x000073c6      498b5708       mov rdx, qword [r15 + 8]
0x000073ca      4c8b442430     mov r8, qword [rsp + 0x30]
0x000073cf      4889c1         mov rcx, rax
0x000073d2      4c8b542438     mov r10, qword [rsp + 0x38]
0x000073d7      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x000073dc      4885c9         test rcx, rcx
0x000073df      0f84b2080000   je 0x7c97
0x000073e5      4839542408     cmp qword [rsp + 8], rdx
0x000073ea      498b07         mov rax, qword [r15]
0x000073ed      0f84b8070000   je 0x7bab
0x000073f3      49894f08       mov qword [r15 + 8], rcx
0x000073f7      4889c2         mov rdx, rax
0x000073fa      48c1e205       shl rdx, 5
0x000073fe      4801ca         add rdx, rcx
0x00007401      4839d8         cmp rax, rbx
0x00007404      7720           ja 0x7426
0x00007406      662e0f1f8400.  nop word cs:[rax + rax]
0x00007410      4883c001       add rax, 1
0x00007414      c70200000000   mov dword [rdx], 0
0x0000741a      4883c220       add rdx, 0x20                           ; "@"
0x0000741e      4839d8         cmp rax, rbx
0x00007421      76ed           jbe 0x7410
0x00007423      498907         mov qword [r15], rax
0x00007426      48c1e305       shl rbx, 5
0x0000742a      488d0419       lea rax, [rcx + rbx]
0x0000742e      8b10           mov edx, dword [rax]
0x00007430      85d2           test edx, edx
0x00007432      0f85d3040000   jne 0x790b
0x00007438      c70005000000   mov dword [rax], 5
0x0000743e      0fb65d00       movzx ebx, byte [rbp]
0x00007442      488d5501       lea rdx, [rbp + 1]
0x00007446      80fb2e         cmp bl, 0x2e
0x00007449      0f852ffdffff   jne 0x717e
0x0000744f      807d012a       cmp byte [rbp + 1], 0x2a
0x00007453      49896c2430     mov qword [r12 + 0x30], rbp
0x00007458      0f8580010000   jne 0x75de
0x0000745e      488b742418     mov rsi, qword [rsp + 0x18]
0x00007463      4c8d5d02       lea r11, [rbp + 2]
0x00007467      b802000000     mov eax, 2
0x0000746c      4d895c2438     mov qword [r12 + 0x38], r11
0x00007471      4883fe02       cmp rsi, 2
0x00007475      480f43c6       cmovae rax, rsi
0x00007479      4889442418     mov qword [rsp + 0x18], rax
0x0000747e      0fbe4502       movsx eax, byte [rbp + 2]
0x00007482      8d50d0         lea edx, [rax - 0x30]
0x00007485      80fa09         cmp dl, 9
0x00007488      0f868e060000   jbe 0x7b1c
0x0000748e      498b5c2440     mov rbx, qword [r12 + 0x40]
0x00007493      4883fbff       cmp rbx, 0xffffffffffffffff
0x00007497      0f8458060000   je 0x7af5
0x0000749d      4939d9         cmp r9, rbx
0x000074a0      498b4f08       mov rcx, qword [r15 + 8]
0x000074a4      0f8665050000   jbe 0x7a0f
0x000074aa      498b07         mov rax, qword [r15]
0x000074ad      4889c2         mov rdx, rax
0x000074b0      48c1e205       shl rdx, 5
0x000074b4      4801ca         add rdx, rcx
0x000074b7      4839d8         cmp rax, rbx
0x000074ba      771a           ja 0x74d6
0x000074bc      0f1f4000       nop dword [rax]
0x000074c0      4883c001       add rax, 1
0x000074c4      c70200000000   mov dword [rdx], 0
0x000074ca      4883c220       add rdx, 0x20                           ; "@"
0x000074ce      4839d8         cmp rax, rbx
0x000074d1      76ed           jbe 0x74c0
0x000074d3      498907         mov qword [r15], rax
0x000074d6      48c1e305       shl rbx, 5
0x000074da      488d0419       lea rax, [rcx + rbx]
0x000074de      8b10           mov edx, dword [rax]
0x000074e0      85d2           test edx, edx
0x000074e2      0f8512050000   jne 0x79fa
0x000074e8      c70005000000   mov dword [rax], 5
0x000074ee      4c89dd         mov rbp, r11
0x000074f1      410fb61b       movzx ebx, byte [r11]
0x000074f5      e984fcffff     jmp 0x717e
0x000074fa      4889e8         mov rax, rbp
0x000074fd      0f1f00         nop dword [rax]
0x00007500      4883c001       add rax, 1
0x00007504      0fb610         movzx edx, byte [rax]
0x00007507      8d4ad0         lea ecx, [rdx - 0x30]
0x0000750a      80f909         cmp cl, 9
0x0000750d      76f1           jbe 0x7500
0x0000750f      80fa24         cmp dl, 0x24
0x00007512      4d89c5         mov r13, r8
0x00007515      0f85e3fbffff   jne 0x70fe
0x0000751b      31d2           xor edx, edx
0x0000751d      0fbec3         movsx eax, bl
0x00007520      48bf99999999.  movabs rdi, 0x1999999999999999
0x0000752a      4c89c6         mov rsi, r8
0x0000752d      83e830         sub eax, 0x30
0x00007530      4839fa         cmp rdx, rdi
0x00007533      4898           cdqe
0x00007535      7707           ja 0x753e
0x00007537      488d3492       lea rsi, [rdx + rdx*4]
0x0000753b      4801f6         add rsi, rsi
0x0000753e      4889e9         mov rcx, rbp
0x00007541      4801f0         add rax, rsi
0x00007544      0fb65d01       movzx ebx, byte [rbp + 1]
0x00007548      400f92c6       setb sil
0x0000754c      4883c501       add rbp, 1
0x00007550      4889c2         mov rdx, rax
0x00007553      400fb6f6       movzx esi, sil
0x00007557      4885f6         test rsi, rsi
0x0000755a      8d7bd0         lea edi, [rbx - 0x30]
0x0000755d      0f858b030000   jne 0x78ee
0x00007563      4080ff09       cmp dil, 9
0x00007567      76b4           jbe 0x751d
0x00007569      4989c5         mov r13, rax
0x0000756c      4983ed01       sub r13, 1
0x00007570      4983fdfd       cmp r13, 0xfffffffffffffffd
0x00007574      0f8781020000   ja 0x77fb
0x0000757a      488d6902       lea rbp, [rcx + 2]
0x0000757e      0fb65902       movzx ebx, byte [rcx + 2]
0x00007582      e977fbffff     jmp 0x70fe
0x00007587      49896c2418     mov qword [r12 + 0x18], rbp
0x0000758c      0fb67d00       movzx edi, byte [rbp]
0x00007590      4889ee         mov rsi, rbp
0x00007593      8d4fd0         lea ecx, [rdi - 0x30]
0x00007596      80f909         cmp cl, 9
0x00007599      760c           jbe 0x75a7
0x0000759b      eb33           jmp 0x75d0
0x0000759d      0f1f00         nop dword [rax]
0x000075a0      4889c5         mov rbp, rax
0x000075a3      4883c001       add rax, 1
0x000075a7      0fb638         movzx edi, byte [rax]
0x000075aa      8d57d0         lea edx, [rdi - 0x30]
0x000075ad      80fa09         cmp dl, 9
0x000075b0      76ee           jbe 0x75a0
0x000075b2      4889c1         mov rcx, rax
0x000075b5      488d5502       lea rdx, [rbp + 2]
0x000075b9      4889c5         mov rbp, rax
0x000075bc      4829f1         sub rcx, rsi
0x000075bf      488b742410     mov rsi, qword [rsp + 0x10]
0x000075c4      4839ce         cmp rsi, rcx
0x000075c7      480f43ce       cmovae rcx, rsi
0x000075cb      48894c2410     mov qword [rsp + 0x10], rcx
0x000075d0      49896c2420     mov qword [r12 + 0x20], rbp
0x000075d5      0fb65d00       movzx ebx, byte [rbp]
0x000075d9      e997fbffff     jmp 0x7175
0x000075de      0fb64501       movzx eax, byte [rbp + 1]
0x000075e2      83e830         sub eax, 0x30
0x000075e5      3c09           cmp al, 9
0x000075e7      7715           ja 0x75fe
0x000075e9      0f1f80000000.  nop dword [rax]
0x000075f0      4883c201       add rdx, 1
0x000075f4      0fb602         movzx eax, byte [rdx]
0x000075f7      83e830         sub eax, 0x30
0x000075fa      3c09           cmp al, 9
0x000075fc      76f2           jbe 0x75f0
0x000075fe      488b742418     mov rsi, qword [rsp + 0x18]
0x00007603      4889d0         mov rax, rdx
0x00007606      4989542438     mov qword [r12 + 0x38], rdx
0x0000760b      4829e8         sub rax, rbp
0x0000760e      0fb61a         movzx ebx, byte [rdx]
0x00007611      4889d5         mov rbp, rdx
0x00007614      4839c6         cmp rsi, rax
0x00007617      480f43c6       cmovae rax, rsi
0x0000761b      4889442418     mov qword [rsp + 0x18], rax
0x00007620      e959fbffff     jmp 0x717e
0x00007625      4889c6         mov rsi, rax
0x00007628      4883c601       add rsi, 1
0x0000762c      0fb63e         movzx edi, byte [rsi]
0x0000762f      448d5fd0       lea r11d, [rdi - 0x30]
0x00007633      4180fb09       cmp r11b, 9
0x00007637      76ef           jbe 0x7628
0x00007639      4080ff24       cmp dil, 0x24
0x0000763d      0f8507fdffff   jne 0x734a
0x00007643      31f6           xor esi, esi
0x00007645      0fbec1         movsx eax, cl
0x00007648      48bf99999999.  movabs rdi, 0x1999999999999999
0x00007652      4c89c1         mov rcx, r8
0x00007655      83e830         sub eax, 0x30
0x00007658      4839fe         cmp rsi, rdi
0x0000765b      4898           cdqe
0x0000765d      7707           ja 0x7666
0x0000765f      488d0cb6       lea rcx, [rsi + rsi*4]
0x00007663      4801c9         add rcx, rcx
0x00007666      4889d5         mov rbp, rdx
0x00007669      4531db         xor r11d, r11d
0x0000766c      4801c8         add rax, rcx
0x0000766f      0fb64a01       movzx ecx, byte [rdx + 1]
0x00007673      410f92c3       setb r11b
0x00007677      4883c201       add rdx, 1
0x0000767b      4889c6         mov rsi, rax
0x0000767e      4d85db         test r11, r11
0x00007681      8d79d0         lea edi, [rcx - 0x30]
0x00007684      0f8504050000   jne 0x7b8e
0x0000768a      4080ff09       cmp dil, 9
0x0000768e      76b5           jbe 0x7645
0x00007690      488d58ff       lea rbx, [rax - 1]
0x00007694      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x00007698      0f875d010000   ja 0x77fb
0x0000769e      49895c2428     mov qword [r12 + 0x28], rbx
0x000076a3      4883c502       add rbp, 2
0x000076a7      e9c3fcffff     jmp 0x736f
0x000076ac      83f80f         cmp eax, 0xf
0x000076af      41bb16000000   mov r11d, 0x16
0x000076b5      0f8f4dfbffff   jg 0x7208
0x000076bb      a804           test al, 4
0x000076bd      0f8545fbffff   jne 0x7208
0x000076c3      83f807         cmp eax, 7
0x000076c6      41bb15000000   mov r11d, 0x15
0x000076cc      0f8f36fbffff   jg 0x7208
0x000076d2      a802           test al, 2
0x000076d4      41bb12000000   mov r11d, 0x12
0x000076da      0f8528fbffff   jne 0x7208
0x000076e0      4531db         xor r11d, r11d
0x000076e3      a801           test al, 1
0x000076e5      410f94c3       sete r11b
0x000076e9      4183c313       add r11d, 0x13
0x000076ed      e916fbffff     jmp 0x7208
0x000076f2      660f1f440000   nop word [rax + rax]
0x000076f8      4531db         xor r11d, r11d
0x000076fb      83f807         cmp eax, 7
0x000076fe      410f9fc3       setg r11b
0x00007702      4183c30d       add r11d, 0xd
0x00007706      e9fdfaffff     jmp 0x7208
0x0000770b      83f80f         cmp eax, 0xf
0x0000770e      41bb09000000   mov r11d, 9
0x00007714      0f8feefaffff   jg 0x7208
0x0000771a      a804           test al, 4
0x0000771c      0f85e6faffff   jne 0x7208
0x00007722      83f807         cmp eax, 7
0x00007725      41bb07000000   mov r11d, 7
0x0000772b      0f8fd7faffff   jg 0x7208
0x00007731      a802           test al, 2
0x00007733      41bb01000000   mov r11d, 1
0x00007739      0f85c9faffff   jne 0x7208
0x0000773f      83e001         and eax, 1
0x00007742      83f801         cmp eax, 1
0x00007745      4519db         sbb r11d, r11d
0x00007748      4183e302       and r11d, 2
0x0000774c      4183c303       add r11d, 3
0x00007750      e9b3faffff     jmp 0x7208
0x00007755      0f1f00         nop dword [rax]
0x00007758      4531db         xor r11d, r11d
0x0000775b      83f807         cmp eax, 7
0x0000775e      410f9fc3       setg r11b
0x00007762      4183c30f       add r11d, 0xf
0x00007766      e99dfaffff     jmp 0x7208
0x0000776b      83f80f         cmp eax, 0xf
0x0000776e      41bb0c000000   mov r11d, 0xc
0x00007774      0f8f8efaffff   jg 0x7208
0x0000777a      4531db         xor r11d, r11d
0x0000777d      a804           test al, 4
0x0000777f      410f95c3       setne r11b
0x00007783      4183c30b       add r11d, 0xb
0x00007787      e97cfaffff     jmp 0x7208
0x0000778c      41bb0e000000   mov r11d, 0xe
0x00007792      bb63000000     mov ebx, 0x63                           ; 'c'
0x00007797      e96cfaffff     jmp 0x7208
0x0000779c      83f80f         cmp eax, 0xf
0x0000779f      41bb0a000000   mov r11d, 0xa
0x000077a5      0f8f5dfaffff   jg 0x7208
0x000077ab      a804           test al, 4
0x000077ad      0f8555faffff   jne 0x7208
0x000077b3      83f807         cmp eax, 7
0x000077b6      41bb08000000   mov r11d, 8
0x000077bc      0f8f46faffff   jg 0x7208
0x000077c2      a802           test al, 2
0x000077c4      41bb02000000   mov r11d, 2
0x000077ca      0f8538faffff   jne 0x7208
0x000077d0      83e001         and eax, 1
0x000077d3      83f801         cmp eax, 1
0x000077d6      4519db         sbb r11d, r11d
0x000077d9      4183e302       and r11d, 2
0x000077dd      4183c304       add r11d, 4
0x000077e1      e922faffff     jmp 0x7208
0x000077e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000077f0      41bb11000000   mov r11d, 0x11
0x000077f6      e90dfaffff     jmp 0x7208
0x000077fb      498b4f08       mov rcx, qword [r15 + 8]
0x000077ff      48394c2408     cmp qword [rsp + 8], rcx
0x00007804      7408           je 0x780e
0x00007806      4889cf         mov rdi, rcx
0x00007809      e8029bffff     call sym.imp.free
0x0000780e      498b7e08       mov rdi, qword [r14 + 8]
0x00007812      48397c2428     cmp qword [rsp + 0x28], rdi
0x00007817      7405           je 0x781e
0x00007819      e8f29affff     call sym.imp.free
0x0000781e      e80d9bffff     call sym.imp.__errno_location
0x00007823      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x16f00000
0x00007829      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000782e      e91ff8ffff     jmp 0x7052
0x00007833      4439da         cmp edx, r11d
0x00007836      0f842ffaffff   je 0x726b
0x0000783c      ebc1           jmp 0x77ff
0x0000783e      6690           nop
0x00007840      4d01c9         add r9, r9
0x00007843      498d4501       lea rax, [r13 + 1]
0x00007847      4d39e9         cmp r9, r13
0x0000784a      4c0f46c8       cmovbe r9, rax
0x0000784e      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x00007858      4939c1         cmp r9, rax
0x0000785b      0f87da030000   ja 0x7c3b
0x00007861      4c89ce         mov rsi, r9
0x00007864      4c894c2448     mov qword [rsp + 0x48], r9
0x00007869      4c89542440     mov qword [rsp + 0x40], r10
0x0000786e      48c1e605       shl rsi, 5
0x00007872      48394c2408     cmp qword [rsp + 8], rcx
0x00007877      4c89442438     mov qword [rsp + 0x38], r8
0x0000787c      44895c2430     mov dword [rsp + 0x30], r11d
0x00007881      0f849a000000   je 0x7921
0x00007887      4889cf         mov rdi, rcx
0x0000788a      e8a19cffff     call sym.imp.realloc
0x0000788f      4885c0         test rax, rax
0x00007892      4889c1         mov rcx, rax
0x00007895      448b5c2430     mov r11d, dword [rsp + 0x30]
0x0000789a      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000789f      4c8b542440     mov r10, qword [rsp + 0x40]
0x000078a4      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x000078a9      0f8488030000   je 0x7c37
0x000078af      488b442408     mov rax, qword [rsp + 8]
0x000078b4      493b4708       cmp rax, qword [r15 + 8]
0x000078b8      0f848b000000   je 0x7949
0x000078be      49894f08       mov qword [r15 + 8], rcx
0x000078c2      e95df9ffff     jmp 0x7224
0x000078c7      488b742420     mov rsi, qword [rsp + 0x20]
0x000078cc      4883feff       cmp rsi, 0xffffffffffffffff
0x000078d0      488d4601       lea rax, [rsi + 1]
0x000078d4      4989742450     mov qword [r12 + 0x50], rsi
0x000078d9      0f841cffffff   je 0x77fb
0x000078df      4c8b6c2420     mov r13, qword [rsp + 0x20]
0x000078e4      4889442420     mov qword [rsp + 0x20], rax
0x000078e9      e929f9ffff     jmp 0x7217
0x000078ee      4080ff09       cmp dil, 9
0x000078f2      0f8703ffffff   ja 0x77fb
0x000078f8      0fbec3         movsx eax, bl
0x000078fb      4c89c6         mov rsi, r8
0x000078fe      4889e9         mov rcx, rbp
0x00007901      83e830         sub eax, 0x30
0x00007904      4898           cdqe
0x00007906      e936fcffff     jmp 0x7541
0x0000790b      83fa05         cmp edx, 5
0x0000790e      0f85ebfeffff   jne 0x77ff
0x00007914      0fb65d00       movzx ebx, byte [rbp]
0x00007918      488d5501       lea rdx, [rbp + 1]
0x0000791c      e954f8ffff     jmp 0x7175
0x00007921      4889f7         mov rdi, rsi
0x00007924      e8b79bffff     call sym.imp.malloc
0x00007929      4885c0         test rax, rax
0x0000792c      4889c1         mov rcx, rax
0x0000792f      448b5c2430     mov r11d, dword [rsp + 0x30]
0x00007934      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007939      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000793e      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007943      0f8463010000   je 0x7aac
0x00007949      498b17         mov rdx, qword [r15]
0x0000794c      488b742408     mov rsi, qword [rsp + 8]
0x00007951      4889cf         mov rdi, rcx
0x00007954      4c894c2448     mov qword [rsp + 0x48], r9
0x00007959      4c89542440     mov qword [rsp + 0x40], r10
0x0000795e      4c89442438     mov qword [rsp + 0x38], r8
0x00007963      44895c2430     mov dword [rsp + 0x30], r11d
0x00007968      48c1e205       shl rdx, 5
0x0000796c      e83f9bffff     call sym.imp.memcpy
0x00007971      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007976      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000797b      4889c1         mov rcx, rax
0x0000797e      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007983      448b5c2430     mov r11d, dword [rsp + 0x30]
0x00007988      e931ffffff     jmp 0x78be
0x0000798d      4889f7         mov rdi, rsi
0x00007990      e84b9bffff     call sym.imp.malloc
0x00007995      4885c0         test rax, rax
0x00007998      4889c1         mov rcx, rax
0x0000799b      4c8b442430     mov r8, qword [rsp + 0x30]
0x000079a0      4c8b542438     mov r10, qword [rsp + 0x38]
0x000079a5      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x000079aa      0f84e9000000   je 0x7a99
0x000079b0      488d049b       lea rax, [rbx + rbx*4]
0x000079b4      488b742428     mov rsi, qword [rsp + 0x28]
0x000079b9      4889cf         mov rdi, rcx
0x000079bc      4c894c2440     mov qword [rsp + 0x40], r9
0x000079c1      4c89542438     mov qword [rsp + 0x38], r10
0x000079c6      488d1443       lea rdx, [rbx + rax*2]
0x000079ca      4c89442430     mov qword [rsp + 0x30], r8
0x000079cf      48c1e203       shl rdx, 3
0x000079d3      e8d89affff     call sym.imp.memcpy
0x000079d8      498b1e         mov rbx, qword [r14]
0x000079db      4889c1         mov rcx, rax
0x000079de      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x000079e3      4c8b542438     mov r10, qword [rsp + 0x38]
0x000079e8      4c8b442430     mov r8, qword [rsp + 0x30]
0x000079ed      e915f9ffff     jmp 0x7307
0x000079f2      498b07         mov rax, qword [r15]
0x000079f5      e9fdf9ffff     jmp 0x73f7
0x000079fa      83fa05         cmp edx, 5
0x000079fd      0f85fcfdffff   jne 0x77ff
0x00007a03      410fb61b       movzx ebx, byte [r11]
0x00007a07      4c89dd         mov rbp, r11
0x00007a0a      e96ff7ffff     jmp 0x717e
0x00007a0f      4d01c9         add r9, r9
0x00007a12      488d4301       lea rax, [rbx + 1]
0x00007a16      4939d9         cmp r9, rbx
0x00007a19      4c0f46c8       cmovbe r9, rax
0x00007a1d      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x00007a27      4939c1         cmp r9, rax
0x00007a2a      0f870b020000   ja 0x7c3b
0x00007a30      4c89ce         mov rsi, r9
0x00007a33      4c894c2448     mov qword [rsp + 0x48], r9
0x00007a38      4c89542440     mov qword [rsp + 0x40], r10
0x00007a3d      48c1e605       shl rsi, 5
0x00007a41      48394c2408     cmp qword [rsp + 8], rcx
0x00007a46      4c89442438     mov qword [rsp + 0x38], r8
0x00007a4b      4c895c2430     mov qword [rsp + 0x30], r11
0x00007a50      0f84b8010000   je 0x7c0e
0x00007a56      4889cf         mov rdi, rcx
0x00007a59      e8d29affff     call sym.imp.realloc
0x00007a5e      498b5708       mov rdx, qword [r15 + 8]
0x00007a62      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00007a67      4889c1         mov rcx, rax
0x00007a6a      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007a6f      4c8b542440     mov r10, qword [rsp + 0x40]
0x00007a74      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007a79      4885c9         test rcx, rcx
0x00007a7c      0f8415020000   je 0x7c97
0x00007a82      4839542408     cmp qword [rsp + 8], rdx
0x00007a87      498b07         mov rax, qword [r15]
0x00007a8a      0f84c0010000   je 0x7c50
0x00007a90      49894f08       mov qword [r15 + 8], rcx
0x00007a94      e914faffff     jmp 0x74ad
0x00007a99      498b4f08       mov rcx, qword [r15 + 8]
0x00007a9d      48394c2408     cmp qword [rsp + 8], rcx
0x00007aa2      7418           je 0x7abc
0x00007aa4      4889cf         mov rdi, rcx
0x00007aa7      e86498ffff     call sym.imp.free
0x00007aac      498b7e08       mov rdi, qword [r14 + 8]
0x00007ab0      48397c2428     cmp qword [rsp + 0x28], rdi
0x00007ab5      7405           je 0x7abc
0x00007ab7      e85498ffff     call sym.imp.free
0x00007abc      e86f98ffff     call sym.imp.__errno_location
0x00007ac1      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00007ac7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00007acc      e981f5ffff     jmp 0x7052
0x00007ad1      4889f7         mov rdi, rsi
0x00007ad4      e8079affff     call sym.imp.malloc
0x00007ad9      488b542408     mov rdx, qword [rsp + 8]
0x00007ade      4889c1         mov rcx, rax
0x00007ae1      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00007ae6      4c8b542438     mov r10, qword [rsp + 0x38]
0x00007aeb      4c8b442430     mov r8, qword [rsp + 0x30]
0x00007af0      e9e7f8ffff     jmp 0x73dc
0x00007af5      488b742420     mov rsi, qword [rsp + 0x20]
0x00007afa      4883feff       cmp rsi, 0xffffffffffffffff
0x00007afe      488d4601       lea rax, [rsi + 1]
0x00007b02      4989742440     mov qword [r12 + 0x40], rsi
0x00007b07      0f84eefcffff   je 0x77fb
0x00007b0d      488b5c2420     mov rbx, qword [rsp + 0x20]
0x00007b12      4889442420     mov qword [rsp + 0x20], rax
0x00007b17      e981f9ffff     jmp 0x749d
0x00007b1c      4c89da         mov rdx, r11
0x00007b1f      4883c201       add rdx, 1
0x00007b23      0fb60a         movzx ecx, byte [rdx]
0x00007b26      8d71d0         lea esi, [rcx - 0x30]
0x00007b29      4080fe09       cmp sil, 9
0x00007b2d      76f0           jbe 0x7b1f
0x00007b2f      80f924         cmp cl, 0x24
0x00007b32      0f8556f9ffff   jne 0x748e
0x00007b38      31c9           xor ecx, ecx
0x00007b3a      48be99999999.  movabs rsi, 0x1999999999999999
0x00007b44      83e830         sub eax, 0x30
0x00007b47      4c89c2         mov rdx, r8
0x00007b4a      4839f1         cmp rcx, rsi
0x00007b4d      4898           cdqe
0x00007b4f      7707           ja 0x7b58
0x00007b51      488d1489       lea rdx, [rcx + rcx*4]
0x00007b55      4801d2         add rdx, rdx
0x00007b58      4c89de         mov rsi, r11
0x00007b5b      31db           xor ebx, ebx
0x00007b5d      4801c2         add rdx, rax
0x00007b60      410fbe4301     movsx eax, byte [r11 + 1]
0x00007b65      0f92c3         setb bl
0x00007b68      4983c301       add r11, 1
0x00007b6c      4889d1         mov rcx, rdx
0x00007b6f      4885db         test rbx, rbx
0x00007b72      8d78d0         lea edi, [rax - 0x30]
0x00007b75      7471           je 0x7be8
0x00007b77      4080ff09       cmp dil, 9
0x00007b7b      0f877afcffff   ja 0x77fb
0x00007b81      83e830         sub eax, 0x30
0x00007b84      4c89c2         mov rdx, r8
0x00007b87      4c89de         mov rsi, r11
0x00007b8a      4898           cdqe
0x00007b8c      ebcd           jmp 0x7b5b
0x00007b8e      4080ff09       cmp dil, 9
0x00007b92      0f8763fcffff   ja 0x77fb
0x00007b98      0fbec1         movsx eax, cl
0x00007b9b      4889d5         mov rbp, rdx
0x00007b9e      4c89c1         mov rcx, r8
0x00007ba1      83e830         sub eax, 0x30
0x00007ba4      4898           cdqe
0x00007ba6      e9befaffff     jmp 0x7669
0x00007bab      488b742408     mov rsi, qword [rsp + 8]
0x00007bb0      48c1e005       shl rax, 5
0x00007bb4      4889cf         mov rdi, rcx
0x00007bb7      4889c2         mov rdx, rax
0x00007bba      4c894c2440     mov qword [rsp + 0x40], r9
0x00007bbf      4c89542438     mov qword [rsp + 0x38], r10
0x00007bc4      4c89442430     mov qword [rsp + 0x30], r8
0x00007bc9      e8e298ffff     call sym.imp.memcpy
0x00007bce      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00007bd3      4889c1         mov rcx, rax
0x00007bd6      4c8b542438     mov r10, qword [rsp + 0x38]
0x00007bdb      498b07         mov rax, qword [r15]
0x00007bde      4c8b442430     mov r8, qword [rsp + 0x30]
0x00007be3      e90bf8ffff     jmp 0x73f3
0x00007be8      4080ff09       cmp dil, 9
0x00007bec      0f8648ffffff   jbe 0x7b3a
0x00007bf2      488d5aff       lea rbx, [rdx - 1]
0x00007bf6      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x00007bfa      0f87fbfbffff   ja 0x77fb
0x00007c00      49895c2440     mov qword [r12 + 0x40], rbx
0x00007c05      4c8d5e02       lea r11, [rsi + 2]
0x00007c09      e98ff8ffff     jmp 0x749d
0x00007c0e      4889f7         mov rdi, rsi
0x00007c11      e8ca98ffff     call sym.imp.malloc
0x00007c16      488b542408     mov rdx, qword [rsp + 8]
0x00007c1b      4889c1         mov rcx, rax
0x00007c1e      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007c23      4c8b542440     mov r10, qword [rsp + 0x40]
0x00007c28      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007c2d      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00007c32      e942feffff     jmp 0x7a79
0x00007c37      498b4f08       mov rcx, qword [r15 + 8]
0x00007c3b      48394c2408     cmp qword [rsp + 8], rcx
0x00007c40      0f855efeffff   jne 0x7aa4
0x00007c46      e961feffff     jmp 0x7aac
0x00007c4b      0f1f440000     nop dword [rax + rax]
0x00007c50      488b742408     mov rsi, qword [rsp + 8]
0x00007c55      48c1e005       shl rax, 5
0x00007c59      4889cf         mov rdi, rcx
0x00007c5c      4889c2         mov rdx, rax
0x00007c5f      4c894c2448     mov qword [rsp + 0x48], r9
0x00007c64      4c89542440     mov qword [rsp + 0x40], r10
0x00007c69      4c89442438     mov qword [rsp + 0x38], r8
0x00007c6e      4c895c2430     mov qword [rsp + 0x30], r11
0x00007c73      e83898ffff     call sym.imp.memcpy
0x00007c78      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007c7d      4889c1         mov rcx, rax
0x00007c80      4c8b542440     mov r10, qword [rsp + 0x40]
0x00007c85      498b07         mov rax, qword [r15]
0x00007c88      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007c8d      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00007c92      e9f9fdffff     jmp 0x7a90
0x00007c97      4889d1         mov rcx, rdx
0x00007c9a      eb9f           jmp 0x7c3b
0x00007c9c      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00007ca0      4157           push r15
0x00007ca2      4156           push r14
0x00007ca4      4989d7         mov r15, rdx
0x00007ca7      4155           push r13
0x00007ca9      4154           push r12
0x00007cab      4c8d251e2f20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20abd0
0x00007cb2      55             push rbp
0x00007cb3      488d2d1e2f20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20abd8
0x00007cba      53             push rbx
0x00007cbb      4189fd         mov r13d, edi
0x00007cbe      4989f6         mov r14, rsi
0x00007cc1      4c29e5         sub rbp, r12
0x00007cc4      4883ec08       sub rsp, 8
0x00007cc8      48c1fd03       sar rbp, 3
0x00007ccc      e80796ffff     call sym._init
0x00007cd1      4885ed         test rbp, rbp
0x00007cd4      7420           je 0x7cf6
0x00007cd6      31db           xor ebx, ebx
0x00007cd8      0f1f84000000.  nop dword [rax + rax]
0x00007ce0      4c89fa         mov rdx, r15
0x00007ce3      4c89f6         mov rsi, r14
0x00007ce6      4489ef         mov edi, r13d
0x00007ce9      41ff14dc       call qword [r12 + rbx*8]
0x00007ced      4883c301       add rbx, 1
0x00007cf1      4839dd         cmp rbp, rbx
0x00007cf4      75ea           jne 0x7ce0
0x00007cf6      4883c408       add rsp, 8
0x00007cfa      5b             pop rbx
0x00007cfb      5d             pop rbp
0x00007cfc      415c           pop r12
0x00007cfe      415d           pop r13
0x00007d00      415e           pop r14
0x00007d02      415f           pop r15
0x00007d04      c3             ret
0x00007d05      90             nop
0x00007d06      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00007d10      f3c3           ret
0x00007d12      662e0f1f8400.  nop word cs:[rax + rax]
0x00007d1c      0f1f4000       nop dword [rax]
;-- atexit:
0x00007d20      488b15e13220.  mov rdx, qword [obj.__dso_handle]       ; [0x20b008:8]=0x20b008 obj.__dso_handle
0x00007d27      31f6           xor esi, esi
0x00007d29      e96298ffff     jmp sym.imp.__cxa_atexit
0x00007d2e      0000           add byte [rax], al
