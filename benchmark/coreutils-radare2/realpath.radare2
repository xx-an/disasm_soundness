;-- section..plt:
;-- .plt:
0x000014a0      ff358a892000   push qword [0x00209e30]                 ; [12] -r-x section size 784 named .plt
0x000014a6      ff258c892000   jmp qword [0x00209e38]                  ; [0x209e38:8]=0
0x000014ac      0f1f4000       nop dword [rax]
;-- imp.free:
0x000014b0      ff258a892000   jmp qword [reloc.free]                  ; [0x209e40:8]=0x14b6
0x000014b6      6800000000     push 0
0x000014bb      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x000014c0      ff2582892000   jmp qword [reloc.abort]                 ; [0x209e48:8]=0x14c6
0x000014c6      6801000000     push 1
0x000014cb      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000014d0      ff257a892000   jmp qword [reloc.__errno_location]      ; [0x209e50:8]=0x14d6
0x000014d6      6802000000     push 2
0x000014db      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000014e0      ff2572892000   jmp qword [reloc.strncmp]               ; [0x209e58:8]=0x14e6
0x000014e6      6803000000     push 3
0x000014eb      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x000014f0      ff256a892000   jmp qword [reloc._exit]                 ; [0x209e60:8]=0x14f6
0x000014f6      6804000000     push 4
0x000014fb      e9a0ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001500      ff2562892000   jmp qword [reloc.__fpending]            ; [0x209e68:8]=0x1506
0x00001506      6805000000     push 5
0x0000150b      e990ffffff     jmp sym..plt
;-- imp.readlink:
0x00001510      ff255a892000   jmp qword [reloc.readlink]              ; [0x209e70:8]=0x1516
0x00001516      6806000000     push 6
0x0000151b      e980ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001520      ff2552892000   jmp qword [reloc.textdomain]            ; [0x209e78:8]=0x1526 ; "&\x15"
0x00001526      6807000000     push 7
0x0000152b      e970ffffff     jmp sym..plt
;-- imp.fclose:
0x00001530      ff254a892000   jmp qword [reloc.fclose]                ; [0x209e80:8]=0x1536 ; "6\x15"
0x00001536      6808000000     push 8
0x0000153b      e960ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001540      ff2542892000   jmp qword [reloc.bindtextdomain]        ; [0x209e88:8]=0x1546 ; "F\x15"
0x00001546      6809000000     push 9
0x0000154b      e950ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001550      ff253a892000   jmp qword [reloc.dcgettext]             ; [0x209e90:8]=0x1556 ; "V\x15"
0x00001556      680a000000     push 0xa
0x0000155b      e940ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001560      ff2532892000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x209e98:8]=0x1566 ; "f\x15"
0x00001566      680b000000     push 0xb
0x0000156b      e930ffffff     jmp sym..plt
;-- imp.strlen:
0x00001570      ff252a892000   jmp qword [reloc.strlen]                ; [0x209ea0:8]=0x1576 ; "v\x15"
0x00001576      680c000000     push 0xc
0x0000157b      e920ffffff     jmp sym..plt
;-- imp.__lxstat:
0x00001580      ff2522892000   jmp qword [reloc.__lxstat]              ; [0x209ea8:8]=0x1586
0x00001586      680d000000     push 0xd
0x0000158b      e910ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001590      ff251a892000   jmp qword [reloc.__stack_chk_fail]      ; [0x209eb0:8]=0x1596
0x00001596      680e000000     push 0xe
0x0000159b      e900ffffff     jmp sym..plt
;-- imp.getopt_long:
0x000015a0      ff2512892000   jmp qword [reloc.getopt_long]           ; [0x209eb8:8]=0x15a6
0x000015a6      680f000000     push 0xf
0x000015ab      e9f0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x000015b0      ff250a892000   jmp qword [reloc.mbrtowc]               ; [0x209ec0:8]=0x15b6
0x000015b6      6810000000     push 0x10
0x000015bb      e9e0feffff     jmp sym..plt
;-- imp.__fxstatat:
0x000015c0      ff2502892000   jmp qword [reloc.__fxstatat]            ; [0x209ec8:8]=0x15c6
0x000015c6      6811000000     push 0x11
0x000015cb      e9d0feffff     jmp sym..plt
;-- imp.__overflow:
0x000015d0      ff25fa882000   jmp qword [reloc.__overflow]            ; [0x209ed0:8]=0x15d6
0x000015d6      6812000000     push 0x12
0x000015db      e9c0feffff     jmp sym..plt
;-- imp.strrchr:
0x000015e0      ff25f2882000   jmp qword [reloc.strrchr]               ; [0x209ed8:8]=0x15e6
0x000015e6      6813000000     push 0x13
0x000015eb      e9b0feffff     jmp sym..plt
;-- imp.lseek:
0x000015f0      ff25ea882000   jmp qword [reloc.lseek]                 ; [0x209ee0:8]=0x15f6
0x000015f6      6814000000     push 0x14
0x000015fb      e9a0feffff     jmp sym..plt
;-- imp.memset:
0x00001600      ff25e2882000   jmp qword [reloc.memset]                ; [0x209ee8:8]=0x1606
0x00001606      6815000000     push 0x15
0x0000160b      e990feffff     jmp sym..plt
;-- imp.getcwd:
0x00001610      ff25da882000   jmp qword [reloc.getcwd]                ; [0x209ef0:8]=0x1616
0x00001616      6816000000     push 0x16
0x0000161b      e980feffff     jmp sym..plt
;-- imp.strspn:
0x00001620      ff25d2882000   jmp qword [reloc.strspn]                ; [0x209ef8:8]=0x1626 ; "&\x16"
0x00001626      6817000000     push 0x17
0x0000162b      e970feffff     jmp sym..plt
;-- imp.memcmp:
0x00001630      ff25ca882000   jmp qword [reloc.memcmp]                ; [0x209f00:8]=0x1636 ; "6\x16"
0x00001636      6818000000     push 0x18
0x0000163b      e960feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001640      ff25c2882000   jmp qword [reloc.fputs_unlocked]        ; [0x209f08:8]=0x1646 ; "F\x16"
0x00001646      6819000000     push 0x19
0x0000164b      e950feffff     jmp sym..plt
;-- imp.calloc:
0x00001650      ff25ba882000   jmp qword [reloc.calloc]                ; [0x209f10:8]=0x1656 ; "V\x16"
0x00001656      681a000000     push 0x1a
0x0000165b      e940feffff     jmp sym..plt
;-- imp.strcmp:
0x00001660      ff25b2882000   jmp qword [reloc.strcmp]                ; [0x209f18:8]=0x1666 ; "f\x16"
0x00001666      681b000000     push 0x1b
0x0000166b      e930feffff     jmp sym..plt
;-- imp.memcpy:
0x00001670      ff25aa882000   jmp qword [reloc.memcpy]                ; [0x209f20:8]=0x1676 ; "v\x16"
0x00001676      681c000000     push 0x1c
0x0000167b      e920feffff     jmp sym..plt
;-- imp.fileno:
0x00001680      ff25a2882000   jmp qword [reloc.fileno]                ; [0x209f28:8]=0x1686
0x00001686      681d000000     push 0x1d
0x0000168b      e910feffff     jmp sym..plt
;-- imp.__xstat:
0x00001690      ff259a882000   jmp qword [reloc.__xstat]               ; [0x209f30:8]=0x1696
0x00001696      681e000000     push 0x1e
0x0000169b      e900feffff     jmp sym..plt
;-- imp.malloc:
0x000016a0      ff2592882000   jmp qword [reloc.malloc]                ; [0x209f38:8]=0x16a6
0x000016a6      681f000000     push 0x1f
0x000016ab      e9f0fdffff     jmp sym..plt
;-- imp.fflush:
0x000016b0      ff258a882000   jmp qword [reloc.fflush]                ; [0x209f40:8]=0x16b6
0x000016b6      6820000000     push 0x20                               ; "@"
0x000016bb      e9e0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000016c0      ff2582882000   jmp qword [reloc.nl_langinfo]           ; [0x209f48:8]=0x16c6
0x000016c6      6821000000     push 0x21                               ; '!'
0x000016cb      e9d0fdffff     jmp sym..plt
;-- imp.__freading:
0x000016d0      ff257a882000   jmp qword [reloc.__freading]            ; [0x209f50:8]=0x16d6
0x000016d6      6822000000     push 0x22                               ; '"'
0x000016db      e9c0fdffff     jmp sym..plt
;-- imp.realloc:
0x000016e0      ff2572882000   jmp qword [reloc.realloc]               ; [0x209f58:8]=0x16e6
0x000016e6      6823000000     push 0x23                               ; '#'
0x000016eb      e9b0fdffff     jmp sym..plt
;-- imp.setlocale:
0x000016f0      ff256a882000   jmp qword [reloc.setlocale]             ; [0x209f60:8]=0x16f6
0x000016f6      6824000000     push 0x24                               ; '$'
0x000016fb      e9a0fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001700      ff2562882000   jmp qword [reloc.__printf_chk]          ; [0x209f68:8]=0x1706
0x00001706      6825000000     push 0x25                               ; '%'
0x0000170b      e990fdffff     jmp sym..plt
;-- imp.memmove:
0x00001710      ff255a882000   jmp qword [reloc.memmove]               ; [0x209f70:8]=0x1716
0x00001716      6826000000     push 0x26                               ; '&'
0x0000171b      e980fdffff     jmp sym..plt
;-- imp.error:
0x00001720      ff2552882000   jmp qword [reloc.error]                 ; [0x209f78:8]=0x1726 ; "&\x17"
0x00001726      6827000000     push 0x27                               ; '''
0x0000172b      e970fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001730      ff254a882000   jmp qword [reloc.fseeko]                ; [0x209f80:8]=0x1736 ; "6\x17"
0x00001736      6828000000     push 0x28                               ; '('
0x0000173b      e960fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001740      ff2542882000   jmp qword [reloc.__cxa_atexit]          ; [0x209f88:8]=0x1746 ; "F\x17"
0x00001746      6829000000     push 0x29                               ; ')'
0x0000174b      e950fdffff     jmp sym..plt
;-- imp.exit:
0x00001750      ff253a882000   jmp qword [reloc.exit]                  ; [0x209f90:8]=0x1756 ; "V\x17"
0x00001756      682a000000     push 0x2a                               ; '*'
0x0000175b      e940fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001760      ff2532882000   jmp qword [reloc.fwrite]                ; [0x209f98:8]=0x1766 ; "f\x17"
0x00001766      682b000000     push 0x2b                               ; '+'
0x0000176b      e930fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001770      ff252a882000   jmp qword [reloc.__fprintf_chk]         ; [0x209fa0:8]=0x1776 ; "v\x17"
0x00001776      682c000000     push 0x2c                               ; ','
0x0000177b      e920fdffff     jmp sym..plt
;-- imp.mbsinit:
0x00001780      ff2522882000   jmp qword [reloc.mbsinit]               ; [0x209fa8:8]=0x1786
0x00001786      682d000000     push 0x2d                               ; '-'
0x0000178b      e910fdffff     jmp sym..plt
;-- imp.iswprint:
0x00001790      ff251a882000   jmp qword [reloc.iswprint]              ; [0x209fb0:8]=0x1796
0x00001796      682e000000     push 0x2e                               ; '.'
0x0000179b      e900fdffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000017a0      ff2512882000   jmp qword [reloc.__ctype_b_loc]         ; [0x209fb8:8]=0x17a6
0x000017a6      682f000000     push 0x2f                               ; '/'
0x000017ab      e9f0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000017b0      .qword 0x90660020882a25ff                              ; [13] -r-x section size 8 named .plt.got
0x000017b8      0000           add byte [rax], al
0x000017ba      0000           add byte [rax], al
0x000017bc      0000           add byte [rax], al
0x000017be      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x000017c0      4157           push r15                                ; [14] -r-x section size 22382 named .text
0x000017c2      4156           push r14
0x000017c4      4531ff         xor r15d, r15d
0x000017c7      4155           push r13
0x000017c9      4154           push r12
0x000017cb      4189fc         mov r12d, edi
0x000017ce      55             push rbp
0x000017cf      53             push rbx
0x000017d0      4889f5         mov rbp, rsi
0x000017d3      4c8d2d668220.  lea r13, obj.longopts                   ; 0x209a40 ; "=p"
0x000017da      4531f6         xor r14d, r14d
0x000017dd      bb01000000     mov ebx, 1
0x000017e2      4883ec08       sub rsp, 8
0x000017e6      488b3e         mov rdi, qword [rsi]
0x000017e9      e822290000     call sym.set_program_name
0x000017ee      488d354c6300.  lea rsi, [0x00007b41]
0x000017f5      bf06000000     mov edi, 6
0x000017fa      e8f1feffff     call sym.imp.setlocale
0x000017ff      488d35f95700.  lea rsi, str.usr_local_share_locale     ; 0x6fff ; "/usr/local/share/locale"
0x00001806      488d3dc95700.  lea rdi, [0x00006fd6]                   ; "coreutils"
0x0000180d      e82efdffff     call sym.imp.bindtextdomain
0x00001812      488d3dbd5700.  lea rdi, [0x00006fd6]                   ; "coreutils"
0x00001819      e802fdffff     call sym.imp.textdomain
0x0000181e      488d3d9b1300.  lea rdi, sym.close_stdout               ; 0x2bc0 ; "USH\x83\xec\bH\x8b=\xdbt "
0x00001825      e8f6560000     call sym.atexit
0x0000182a      660f1f440000   nop word [rax + rax]
0x00001830      488d15e05700.  lea rdx, str.eLmPqsz                    ; 0x7017 ; "eLmPqsz"
0x00001837      4531c0         xor r8d, r8d
0x0000183a      4c89e9         mov rcx, r13
0x0000183d      4889ee         mov rsi, rbp
0x00001840      4489e7         mov edi, r12d
0x00001843      e858fdffff     call sym.imp.getopt_long
0x00001848      83f8ff         cmp eax, 0xffffffff
0x0000184b      0f842b010000   je 0x197c
0x00001851      83f86d         cmp eax, 0x6d
0x00001854      0f84c6000000   je 0x1920
0x0000185a      7e2c           jle 0x1888
0x0000185c      83f87a         cmp eax, 0x7a
0x0000185f      0f84db000000   je 0x1940
0x00001865      7f49           jg 0x18b0
0x00001867      83f871         cmp eax, 0x71
0x0000186a      0f84c0000000   je 0x1930
0x00001870      83f873         cmp eax, 0x73
0x00001873      0f85a1030000   jne 0x1c1a
0x00001879      83cb04         or ebx, 4
0x0000187c      c6057e882000.  mov byte [obj.logical], 0               ; [0x20a101:1]=0
0x00001883      ebab           jmp 0x1830
0x00001885      0f1f00         nop dword [rax]
0x00001888      83f84c         cmp eax, 0x4c
0x0000188b      0f84cf000000   je 0x1960
0x00001891      7e45           jle 0x18d8
0x00001893      83f850         cmp eax, 0x50
0x00001896      0f84b4000000   je 0x1950
0x0000189c      83f865         cmp eax, 0x65
0x0000189f      0f8575030000   jne 0x1c1a
0x000018a5      83e3fc         and ebx, 0xfffffffc                     ; 4294967292
0x000018a8      eb86           jmp 0x1830
0x000018aa      660f1f440000   nop word [rax + rax]
0x000018b0      3d80000000     cmp eax, 0x80
0x000018b5      0f84b5000000   je 0x1970
0x000018bb      3d81000000     cmp eax, 0x81
0x000018c0      0f8554030000   jne 0x1c1a
0x000018c6      4c8b35eb8720.  mov r14, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a0b8:8]=0
0x000018cd      e95effffff     jmp 0x1830
0x000018d2      660f1f440000   nop word [rax + rax]
0x000018d8      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x000018dd      0f8508030000   jne 0x1beb
0x000018e3      488b3dbe8720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000018ea      488b0d278720.  mov rcx, qword [obj.Version]            ; [0x20a018:8]=0x74f8 str.8.31
0x000018f1      4c8d05275700.  lea r8, str.Padraig_Brady               ; 0x701f ; "Padraig Brady"
0x000018f8      488d15d35600.  lea rdx, str.GNU_coreutils              ; 0x6fd2 ; "GNU coreutils"
0x000018ff      488d354d5600.  lea rsi, str.realpath                   ; 0x6f53 ; "realpath"
0x00001906      4531c9         xor r9d, r9d
0x00001909      31c0           xor eax, eax
0x0000190b      e8e04b0000     call sym.version_etc
0x00001910      31ff           xor edi, edi
0x00001912      e839feffff     call sym.imp.exit
0x00001917      660f1f840000.  nop word [rax + rax]
0x00001920      83e3fc         and ebx, 0xfffffffc                     ; 4294967292
0x00001923      83cb02         or ebx, 2
0x00001926      e905ffffff     jmp 0x1830
0x0000192b      0f1f440000     nop dword [rax + rax]
0x00001930      c605d9862000.  mov byte [obj.verbose], 0               ; [0x20a010:1]=1
0x00001937      e9f4feffff     jmp 0x1830
0x0000193c      0f1f4000       nop dword [rax]
0x00001940      c605b9872000.  mov byte [obj.use_nuls], 1              ; [0x20a100:1]=0
0x00001947      e9e4feffff     jmp 0x1830
0x0000194c      0f1f4000       nop dword [rax]
0x00001950      83e3fb         and ebx, 0xfffffffb                     ; 4294967291
0x00001953      c605a7872000.  mov byte [obj.logical], 0               ; [0x20a101:1]=0
0x0000195a      e9d1feffff     jmp 0x1830
0x0000195f      90             nop
0x00001960      83cb04         or ebx, 4
0x00001963      c60597872000.  mov byte [obj.logical], 1               ; [0x20a101:1]=0
0x0000196a      e9c1feffff     jmp 0x1830
0x0000196f      90             nop
0x00001970      4c8b3d418720.  mov r15, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a0b8:8]=0
0x00001977      e9b4feffff     jmp 0x1830
0x0000197c      4439252d8720.  cmp dword [obj.optind], r12d            ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a0b0:4]=0
0x00001983      0f8d70020000   jge 0x1bf9
0x00001989      4189dd         mov r13d, ebx
0x0000198c      4183e503       and r13d, 3
0x00001990      4d85f6         test r14, r14
0x00001993      0f8480010000   je 0x1b19
0x00001999      4d85ff         test r15, r15
0x0000199c      0f8577010000   jne 0x1b19
0x000019a2      4d89f7         mov r15, r14
0x000019a5      89de           mov esi, ebx
0x000019a7      4c89ff         mov rdi, r15
0x000019aa      e881040000     call sym.realpath_canon
0x000019af      4885c0         test rax, rax
0x000019b2      4889053f8720.  mov qword [obj.can_relative_to], rax    ; [0x20a0f8:8]=0
0x000019b9      0f8465020000   je 0x1c24
0x000019bf      4585ed         test r13d, r13d
0x000019c2      0f8490010000   je 0x1b58
0x000019c8      4d39fe         cmp r14, r15
0x000019cb      0f8474010000   je 0x1b45
0x000019d1      4d85f6         test r14, r14
0x000019d4      7440           je 0x1a16
0x000019d6      89de           mov esi, ebx
0x000019d8      4c89f7         mov rdi, r14
0x000019db      e850040000     call sym.realpath_canon
0x000019e0      4885c0         test rax, rax
0x000019e3      4989c7         mov r15, rax
0x000019e6      0f8467020000   je 0x1c53
0x000019ec      4585ed         test r13d, r13d
0x000019ef      0f849d010000   je 0x1b92
0x000019f5      4c8b2dfc8620.  mov r13, qword [obj.can_relative_to]    ; [0x20a0f8:8]=0
0x000019fc      4c89ff         mov rdi, r15
0x000019ff      4c89ee         mov rsi, r13
0x00001a02      e899030000     call sym.path_prefix
0x00001a07      84c0           test al, al
0x00001a09      0f84bd010000   je 0x1bcc
0x00001a0f      4c893dda8620.  mov qword [obj.can_relative_base], r15  ; [0x20a0f0:8]=0
0x00001a16      8b0594862000   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a0b0:4]=0
0x00001a1c      41bd01000000   mov r13d, 1
0x00001a22      4439e0         cmp eax, r12d
0x00001a25      0f8c93000000   jl 0x1abe
0x00001a2b      e9f7000000     jmp 0x1b27
0x00001a30      4c8b0dc18620.  mov r9, qword [obj.can_relative_to]     ; [0x20a0f8:8]=0
0x00001a37      4d85c9         test r9, r9
0x00001a3a      742b           je 0x1a67
0x00001a3c      488b3dad8620.  mov rdi, qword [obj.can_relative_base]  ; [0x20a0f0:8]=0
0x00001a43      4885ff         test rdi, rdi
0x00001a46      740c           je 0x1a54
0x00001a48      4889c6         mov rsi, rax
0x00001a4b      e850030000     call sym.path_prefix
0x00001a50      84c0           test al, al
0x00001a52      7413           je 0x1a67
0x00001a54      31c9           xor ecx, ecx
0x00001a56      31d2           xor edx, edx
0x00001a58      4c89ce         mov rsi, r9
0x00001a5b      4c89f7         mov rdi, r14
0x00001a5e      e8bd080000     call sym.relpath
0x00001a63      84c0           test al, al
0x00001a65      750f           jne 0x1a76
0x00001a67      488b353a8620.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00001a6e      4c89f7         mov rdi, r14
0x00001a71      e8cafbffff     call sym.imp.fputs_unlocked
0x00001a76      803d83862000.  cmp byte [obj.use_nuls], 1              ; [0x20a100:1]=0
0x00001a7d      488b3d248620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00001a84      488b4728       mov rax, qword [rdi + 0x28]
0x00001a88      19f6           sbb esi, esi
0x00001a8a      83e60a         and esi, 0xa
0x00001a8d      483b4730       cmp rax, qword [rdi + 0x30]
0x00001a91      0f83a4000000   jae 0x1b3b
0x00001a97      488d5001       lea rdx, [rax + 1]
0x00001a9b      48895728       mov qword [rdi + 0x28], rdx
0x00001a9f      408830         mov byte [rax], sil
0x00001aa2      4c89f7         mov rdi, r14
0x00001aa5      e806faffff     call sym.imp.free
0x00001aaa      8b0500862000   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a0b0:4]=0
0x00001ab0      83c001         add eax, 1
0x00001ab3      4439e0         cmp eax, r12d
0x00001ab6      8905f4852000   mov dword [obj.optind], eax             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a0b0:4]=0
0x00001abc      7d69           jge 0x1b27
0x00001abe      4898           cdqe
0x00001ac0      89de           mov esi, ebx
0x00001ac2      4c8b7cc500     mov r15, qword [rbp + rax*8]
0x00001ac7      4c89ff         mov rdi, r15
0x00001aca      e861030000     call sym.realpath_canon
0x00001acf      4885c0         test rax, rax
0x00001ad2      4989c6         mov r14, rax
0x00001ad5      0f8555ffffff   jne 0x1a30
0x00001adb      440fb62d2d85.  movzx r13d, byte [obj.verbose]          ; [0x20a010:1]=1
0x00001ae3      4584ed         test r13b, r13b
0x00001ae6      74c2           je 0x1aaa
0x00001ae8      4c89fa         mov rdx, r15
0x00001aeb      be03000000     mov esi, 3
0x00001af0      31ff           xor edi, edi
0x00001af2      e859410000     call sym.quotearg_n_style_colon
0x00001af7      4989c5         mov r13, rax
0x00001afa      e8d1f9ffff     call sym.imp.__errno_location
0x00001aff      8b30           mov esi, dword [rax]
0x00001b01      488d15055a00.  lea rdx, [0x0000750d]                   ; "%s"
0x00001b08      4c89e9         mov rcx, r13
0x00001b0b      31ff           xor edi, edi
0x00001b0d      31c0           xor eax, eax
0x00001b0f      4531ed         xor r13d, r13d
0x00001b12      e809fcffff     call sym.imp.error
0x00001b17      eb91           jmp 0x1aaa
0x00001b19      4d85ff         test r15, r15
0x00001b1c      0f84a6feffff   je 0x19c8
0x00001b22      e97efeffff     jmp 0x19a5
0x00001b27      4183f501       xor r13d, 1
0x00001b2b      5a             pop rdx
0x00001b2c      410fb6c5       movzx eax, r13b
0x00001b30      5b             pop rbx
0x00001b31      5d             pop rbp
0x00001b32      415c           pop r12
0x00001b34      415d           pop r13
0x00001b36      415e           pop r14
0x00001b38      415f           pop r15
0x00001b3a      c3             ret
0x00001b3b      e890faffff     call sym.imp.__overflow
0x00001b40      e95dffffff     jmp 0x1aa2
0x00001b45      488b05ac8520.  mov rax, qword [obj.can_relative_to]    ; [0x20a0f8:8]=0
0x00001b4c      4889059d8520.  mov qword [obj.can_relative_base], rax  ; [0x20a0f0:8]=0
0x00001b53      e9befeffff     jmp 0x1a16
0x00001b58      4889c7         mov rdi, rax
0x00001b5b      e820030000     call sym.isdir
0x00001b60      84c0           test al, al
0x00001b62      0f8560feffff   jne 0x19c8
0x00001b68      4c89fa         mov rdx, r15
0x00001b6b      be03000000     mov esi, 3
0x00001b70      31ff           xor edi, edi
0x00001b72      e8d9400000     call sym.quotearg_n_style_colon
0x00001b77      488d158f5900.  lea rdx, [0x0000750d]                   ; "%s"
0x00001b7e      4889c1         mov rcx, rax
0x00001b81      be14000000     mov esi, 0x14
0x00001b86      bf01000000     mov edi, 1
0x00001b8b      31c0           xor eax, eax
0x00001b8d      e88efbffff     call sym.imp.error
0x00001b92      4889c7         mov rdi, rax
0x00001b95      e8e6020000     call sym.isdir
0x00001b9a      84c0           test al, al
0x00001b9c      0f8553feffff   jne 0x19f5
0x00001ba2      4c89f2         mov rdx, r14
0x00001ba5      be03000000     mov esi, 3
0x00001baa      31ff           xor edi, edi
0x00001bac      e89f400000     call sym.quotearg_n_style_colon
0x00001bb1      488d15555900.  lea rdx, [0x0000750d]                   ; "%s"
0x00001bb8      4889c1         mov rcx, rax
0x00001bbb      be14000000     mov esi, 0x14
0x00001bc0      bf01000000     mov edi, 1
0x00001bc5      31c0           xor eax, eax
0x00001bc7      e854fbffff     call sym.imp.error
0x00001bcc      4c89ff         mov rdi, r15
0x00001bcf      e8dcf8ffff     call sym.imp.free
0x00001bd4      4c892d158520.  mov qword [obj.can_relative_base], r13  ; [0x20a0f0:8]=0
0x00001bdb      48c705128520.  mov qword [obj.can_relative_to], 0      ; [0x20a0f8:8]=0
0x00001be6      e92bfeffff     jmp 0x1a16
0x00001beb      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001bf0      7528           jne 0x1c1a
0x00001bf2      31ff           xor edi, edi
0x00001bf4      e837030000     call sym.usage
0x00001bf9      488d352d5400.  lea rsi, str.missing_operand            ; 0x702d ; "missing operand"
0x00001c00      ba05000000     mov edx, 5
0x00001c05      31ff           xor edi, edi
0x00001c07      e844f9ffff     call sym.imp.dcgettext
0x00001c0c      31f6           xor esi, esi
0x00001c0e      4889c2         mov rdx, rax
0x00001c11      31ff           xor edi, edi
0x00001c13      31c0           xor eax, eax
0x00001c15      e806fbffff     call sym.imp.error
0x00001c1a      bf01000000     mov edi, 1
0x00001c1f      e80c030000     call sym.usage
0x00001c24      4c89fa         mov rdx, r15
0x00001c27      be03000000     mov esi, 3
0x00001c2c      31ff           xor edi, edi
0x00001c2e      e81d400000     call sym.quotearg_n_style_colon
0x00001c33      4889c3         mov rbx, rax
0x00001c36      e895f8ffff     call sym.imp.__errno_location
0x00001c3b      8b30           mov esi, dword [rax]
0x00001c3d      488d15c95800.  lea rdx, [0x0000750d]                   ; "%s"
0x00001c44      4889d9         mov rcx, rbx
0x00001c47      bf01000000     mov edi, 1
0x00001c4c      31c0           xor eax, eax
0x00001c4e      e8cdfaffff     call sym.imp.error
0x00001c53      4c89f2         mov rdx, r14
0x00001c56      be03000000     mov esi, 3
0x00001c5b      31ff           xor edi, edi
0x00001c5d      e8ee3f0000     call sym.quotearg_n_style_colon
0x00001c62      4889c3         mov rbx, rax
0x00001c65      e866f8ffff     call sym.imp.__errno_location
0x00001c6a      8b30           mov esi, dword [rax]
0x00001c6c      488d159a5800.  lea rdx, [0x0000750d]                   ; "%s"
0x00001c73      4889d9         mov rcx, rbx
0x00001c76      bf01000000     mov edi, 1
0x00001c7b      31c0           xor eax, eax
0x00001c7d      e89efaffff     call sym.imp.error
0x00001c82      662e0f1f8400.  nop word cs:[rax + rax]
0x00001c8c      0f1f4000       nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00001c90      31ed           xor ebp, ebp
0x00001c92      4989d1         mov r9, rdx
0x00001c95      5e             pop rsi
0x00001c96      4889e2         mov rdx, rsp
0x00001c99      4883e4f0       and rsp, 0xfffffffffffffff0
0x00001c9d      50             push rax
0x00001c9e      54             push rsp
0x00001c9f      4c8d056a5200.  lea r8, sym.__libc_csu_fini             ; 0x6f10
0x00001ca6      488d0df35100.  lea rcx, sym.__libc_csu_init            ; 0x6ea0 ; "AWAVI\x89\xd7AUATL\x8d%~+ "
0x00001cad      488d3d0cfbff.  lea rdi, main                           ; sym.main
                                                                       ; 0x17c0 ; "AWAVE1\xffAUATA\x89\xfcUSH\x89\xf5L\x8d-f\x82 "
0x00001cb4      ff150e832000   call qword [reloc.__libc_start_main]    ; [0x209fc8:8]=0
0x00001cba      f4             hlt
0x00001cbb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001cc0      488d3dd98320.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a0a0
0x00001cc7      55             push rbp
0x00001cc8      488d05d18320.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a0a0
0x00001ccf      4839f8         cmp rax, rdi
0x00001cd2      4889e5         mov rbp, rsp
0x00001cd5      7419           je 0x1cf0
0x00001cd7      488b05e28220.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x209fc0:8]=0
0x00001cde      4885c0         test rax, rax
0x00001ce1      740d           je 0x1cf0
0x00001ce3      5d             pop rbp
0x00001ce4      ffe0           jmp rax
0x00001ce6      662e0f1f8400.  nop word cs:[rax + rax]
0x00001cf0      5d             pop rbp
0x00001cf1      c3             ret
0x00001cf2      0f1f4000       nop dword [rax]
0x00001cf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001d00      488d3d998320.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a0a0
0x00001d07      488d35928320.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a0a0
0x00001d0e      55             push rbp
0x00001d0f      4829fe         sub rsi, rdi
0x00001d12      4889e5         mov rbp, rsp
0x00001d15      48c1fe03       sar rsi, 3
0x00001d19      4889f0         mov rax, rsi
0x00001d1c      48c1e83f       shr rax, 0x3f
0x00001d20      4801c6         add rsi, rax
0x00001d23      48d1fe         sar rsi, 1
0x00001d26      7418           je 0x1d40
0x00001d28      488b05a98220.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x209fd8:8]=0
0x00001d2f      4885c0         test rax, rax
0x00001d32      740c           je 0x1d40
0x00001d34      5d             pop rbp
0x00001d35      ffe0           jmp rax
0x00001d37      660f1f840000.  nop word [rax + rax]
0x00001d40      5d             pop rbp
0x00001d41      c3             ret
0x00001d42      0f1f4000       nop dword [rax]
0x00001d46      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00001d50      803d91832000.  cmp byte [obj.completed.7697], 0        ; [0x20a0e8:1]=0
0x00001d57      752f           jne 0x1d88
0x00001d59      48833d7f8220.  cmp qword [reloc.__cxa_finalize], 0     ; [0x209fe0:8]=0
0x00001d61      55             push rbp
0x00001d62      4889e5         mov rbp, rsp
0x00001d65      740c           je 0x1d73
0x00001d67      488b3d9a8220.  mov rdi, qword [obj.__dso_handle]       ; [0x20a008:8]=0x20a008 obj.__dso_handle
0x00001d6e      e83dfaffff     call sym..plt.got
0x00001d73      e848ffffff     call sym.deregister_tm_clones
0x00001d78      c60569832000.  mov byte [obj.completed.7697], 1        ; [0x20a0e8:1]=0
0x00001d7f      5d             pop rbp
0x00001d80      c3             ret
0x00001d81      0f1f80000000.  nop dword [rax]
0x00001d88      f3c3           ret
0x00001d8a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00001d90      55             push rbp
0x00001d91      4889e5         mov rbp, rsp
0x00001d94      5d             pop rbp
0x00001d95      e966ffffff     jmp sym.register_tm_clones
0x00001d9a      660f1f440000   nop word [rax + rax]
;-- path_prefix:
0x00001da0      0fb64701       movzx eax, byte [rdi + 1]
0x00001da4      84c0           test al, al
0x00001da6      7458           je 0x1e00
0x00001da8      3c2f           cmp al, 0x2f
0x00001daa      7464           je 0x1e10
0x00001dac      0fb65601       movzx edx, byte [rsi + 1]
0x00001db0      38d0           cmp al, dl
0x00001db2      0f95c0         setne al
0x00001db5      84d2           test dl, dl
0x00001db7      0f94c2         sete dl
0x00001dba      08d0           or al, dl
0x00001dbc      756a           jne 0x1e28
0x00001dbe      4883c701       add rdi, 1
0x00001dc2      4883c601       add rsi, 1
0x00001dc6      eb13           jmp 0x1ddb
0x00001dc8      0f1f84000000.  nop dword [rax + rax]
0x00001dd0      0fb60e         movzx ecx, byte [rsi]
0x00001dd3      84c9           test cl, cl
0x00001dd5      7423           je 0x1dfa
0x00001dd7      38ca           cmp dl, cl
0x00001dd9      7545           jne 0x1e20
0x00001ddb      4883c701       add rdi, 1
0x00001ddf      0fb617         movzx edx, byte [rdi]
0x00001de2      4883c601       add rsi, 1
0x00001de6      84d2           test dl, dl
0x00001de8      75e6           jne 0x1dd0
0x00001dea      0fb616         movzx edx, byte [rsi]
0x00001ded      80fa2f         cmp dl, 0x2f
0x00001df0      0f94c0         sete al
0x00001df3      84d2           test dl, dl
0x00001df5      0f94c2         sete dl
0x00001df8      09d0           or eax, edx
0x00001dfa      f3c3           ret
0x00001dfc      0f1f4000       nop dword [rax]
0x00001e00      807e012f       cmp byte [rsi + 1], 0x2f
0x00001e04      0f95c0         setne al
0x00001e07      c3             ret
0x00001e08      0f1f84000000.  nop dword [rax + rax]
0x00001e10      807f0200       cmp byte [rdi + 2], 0
0x00001e14      7596           jne 0x1dac
0x00001e16      807e012f       cmp byte [rsi + 1], 0x2f
0x00001e1a      0f94c0         sete al
0x00001e1d      c3             ret
0x00001e1e      6690           nop
0x00001e20      f3c3           ret
0x00001e22      660f1f440000   nop word [rax + rax]
0x00001e28      31c0           xor eax, eax
0x00001e2a      c3             ret
0x00001e2b      0f1f440000     nop dword [rax + rax]
;-- realpath_canon:
0x00001e30      55             push rbp
0x00001e31      53             push rbx
0x00001e32      89f5           mov ebp, esi
0x00001e34      4883ec08       sub rsp, 8
0x00001e38      e823070000     call sym.canonicalize_filename_mode
0x00001e3d      803dbd822000.  cmp byte [obj.logical], 0               ; [0x20a101:1]=0
0x00001e44      4889c3         mov rbx, rax
0x00001e47      7420           je 0x1e69
0x00001e49      4885c0         test rax, rax
0x00001e4c      741b           je 0x1e69
0x00001e4e      89ee           mov esi, ebp
0x00001e50      4889c7         mov rdi, rax
0x00001e53      83e6fb         and esi, 0xfffffffb                     ; 4294967291
0x00001e56      e805070000     call sym.canonicalize_filename_mode
0x00001e5b      4889c5         mov rbp, rax
0x00001e5e      4889df         mov rdi, rbx
0x00001e61      4889eb         mov rbx, rbp
0x00001e64      e847f6ffff     call sym.imp.free
0x00001e69      4883c408       add rsp, 8
0x00001e6d      4889d8         mov rax, rbx
0x00001e70      5b             pop rbx
0x00001e71      5d             pop rbp
0x00001e72      c3             ret
0x00001e73      0f1f00         nop dword [rax]
0x00001e76      662e0f1f8400.  nop word cs:[rax + rax]
;-- isdir:
0x00001e80      55             push rbp
0x00001e81      53             push rbx
0x00001e82      4889fe         mov rsi, rdi
0x00001e85      4889fb         mov rbx, rdi
0x00001e88      bf01000000     mov edi, 1
0x00001e8d      4881eca80000.  sub rsp, 0xa8
0x00001e94      4889e2         mov rdx, rsp
0x00001e97      64488b042528.  mov rax, qword fs:[0x28]
0x00001ea0      488984249800.  mov qword [rsp + 0x98], rax
0x00001ea8      31c0           xor eax, eax
0x00001eaa      e8e1f7ffff     call sym.imp.__xstat
0x00001eaf      85c0           test eax, eax
0x00001eb1      752e           jne 0x1ee1
0x00001eb3      8b442418       mov eax, dword [rsp + 0x18]
0x00001eb7      2500f00000     and eax, 0xf000
0x00001ebc      3d00400000     cmp eax, 0x4000
0x00001ec1      0f94c0         sete al
0x00001ec4      488b8c249800.  mov rcx, qword [rsp + 0x98]
0x00001ecc      6448330c2528.  xor rcx, qword fs:[0x28]
0x00001ed5      7549           jne 0x1f20
0x00001ed7      4881c4a80000.  add rsp, 0xa8
0x00001ede      5b             pop rbx
0x00001edf      5d             pop rbp
0x00001ee0      c3             ret
0x00001ee1      4889de         mov rsi, rbx
0x00001ee4      bf04000000     mov edi, 4
0x00001ee9      e8623c0000     call sym.quotearg_style
0x00001eee      488d354f5000.  lea rsi, str.cannot_stat__s             ; 0x6f44 ; "cannot stat %s"
0x00001ef5      ba05000000     mov edx, 5
0x00001efa      31ff           xor edi, edi
0x00001efc      4889c5         mov rbp, rax
0x00001eff      e84cf6ffff     call sym.imp.dcgettext
0x00001f04      4889c3         mov rbx, rax
0x00001f07      e8c4f5ffff     call sym.imp.__errno_location
0x00001f0c      8b30           mov esi, dword [rax]
0x00001f0e      4889e9         mov rcx, rbp
0x00001f11      4889da         mov rdx, rbx
0x00001f14      bf01000000     mov edi, 1
0x00001f19      31c0           xor eax, eax
0x00001f1b      e800f8ffff     call sym.imp.error
0x00001f20      e86bf6ffff     call sym.imp.__stack_chk_fail
0x00001f25      90             nop
0x00001f26      662e0f1f8400.  nop word cs:[rax + rax]
;-- usage:
0x00001f30      4155           push r13
0x00001f32      4154           push r12
0x00001f34      ba05000000     mov edx, 5
0x00001f39      55             push rbp
0x00001f3a      53             push rbx
0x00001f3b      89fd           mov ebp, edi
0x00001f3d      4881ec880000.  sub rsp, 0x88
0x00001f44      488b1dcd8120.  mov rbx, qword [obj.program_name]       ; [0x20a118:8]=0
0x00001f4b      64488b042528.  mov rax, qword fs:[0x28]
0x00001f54      4889442478     mov qword [rsp + 0x78], rax
0x00001f59      31c0           xor eax, eax
0x00001f5b      85ff           test edi, edi
0x00001f5d      742e           je 0x1f8d
0x00001f5f      488d355a5100.  lea rsi, str.Try___s___help__for_more_information. ; 0x70c0 ; "Try '%s --help' for more information.\n"
0x00001f66      31ff           xor edi, edi
0x00001f68      e8e3f5ffff     call sym.imp.dcgettext
0x00001f6d      488b3d6c8120.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00001f74      4889c2         mov rdx, rax
0x00001f77      4889d9         mov rcx, rbx
0x00001f7a      be01000000     mov esi, 1
0x00001f7f      31c0           xor eax, eax
0x00001f81      e8eaf7ffff     call sym.imp.__fprintf_chk
0x00001f86      89ef           mov edi, ebp
0x00001f88      e8c3f7ffff     call sym.imp.exit
0x00001f8d      488d35545100.  lea rsi, str.Usage:__s__OPTION_..._FILE... ; 0x70e8 ; "Usage: %s [OPTION]... FILE...\n"
0x00001f94      31ff           xor edi, edi
0x00001f96      e8b5f5ffff     call sym.imp.dcgettext
0x00001f9b      4889da         mov rdx, rbx
0x00001f9e      4889c6         mov rsi, rax
0x00001fa1      bf01000000     mov edi, 1
0x00001fa6      31c0           xor eax, eax
0x00001fa8      e853f7ffff     call sym.imp.__printf_chk
0x00001fad      488b1df48020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00001fb4      488d354d5100.  lea rsi, str.Print_the_resolved_absolute_file_name___all_but_the_last_component_must_exist ; 0x7108 ; "Print the resolved absolute file name;\nall but the last component must exist\n\n"
0x00001fbb      ba05000000     mov edx, 5
0x00001fc0      31ff           xor edi, edi
0x00001fc2      e889f5ffff     call sym.imp.dcgettext
0x00001fc7      4889de         mov rsi, rbx
0x00001fca      4889c7         mov rdi, rax
0x00001fcd      e86ef6ffff     call sym.imp.fputs_unlocked
0x00001fd2      488b1dcf8020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00001fd9      488d35785100.  lea rsi, str.e____canonicalize_existing__all_components_of_the_path_must_exist_____m____canonicalize_missing___no_path_components_need_exist_or_be_a_directory_____L____logical________________resolve__..__components_before_symlinks_____P____physical_______________resolve_symlinks_as_encountered__default______q____quiet__________________suppress_most_error_messages__________relative_to_DIR________print_the_resolved_path_relative_to_DIR__________relative_base_DIR______print_absolute_paths_unless_paths_below_DIR_____s____strip____no_symlinks___don_t_expand_symlinks_____z____zero___________________end_each_output_line_with_NUL__not_newline ; 0x7158 ; "  -e, --canonicalize-existing  all components of the path must exist\n  -m, --canonicalize-missing   no path components need exist or be a directory\n  -L, --logical                resolve '..' components before symlinks\n  -P, --physical               resolve symlinks as encountered (default)\n  -q, --quiet                  suppress most error messages\n      --relative-to=DIR        print the resolved path relative to DIR\n      --relative-base=DIR      print absolute paths unless paths below DIR\n  -s, --strip, --no-symlinks   don't expand symlinks\n  -z, --zero                   end each output line with NUL, not newline\n\n"
0x00001fe0      ba05000000     mov edx, 5
0x00001fe5      31ff           xor edi, edi
0x00001fe7      e864f5ffff     call sym.imp.dcgettext
0x00001fec      4889de         mov rsi, rbx
0x00001fef      4889c7         mov rdi, rax
0x00001ff2      e849f6ffff     call sym.imp.fputs_unlocked
0x00001ff7      488b1daa8020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00001ffe      488d35cb5300.  lea rsi, str.help_____display_this_help_and_exit ; 0x73d0 ; "      --help     display this help and exit\n"
0x00002005      ba05000000     mov edx, 5
0x0000200a      31ff           xor edi, edi
0x0000200c      e83ff5ffff     call sym.imp.dcgettext
0x00002011      4889de         mov rsi, rbx
0x00002014      4889c7         mov rdi, rax
0x00002017      e824f6ffff     call sym.imp.fputs_unlocked
0x0000201c      488b1d858020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002023      488d35d65300.  lea rsi, str.version__output_version_information_and_exit ; 0x7400 ; "      --version  output version information and exit\n"
0x0000202a      ba05000000     mov edx, 5
0x0000202f      31ff           xor edi, edi
0x00002031      e81af5ffff     call sym.imp.dcgettext
0x00002036      4889de         mov rsi, rbx
0x00002039      4889c7         mov rdi, rax
0x0000203c      488d1d104f00.  lea rbx, str.realpath                   ; 0x6f53 ; "realpath"
0x00002043      e8f8f5ffff     call sym.imp.fputs_unlocked
0x00002048      488d050d4f00.  lea rax, [0x00006f5c]                   ; "["
0x0000204f      488d0d474f00.  lea rcx, str.sha256sum                  ; 0x6f9d ; "sha256sum"
0x00002056      48c744246000.  mov qword [rsp + 0x60], 0
0x0000205f      48c744246800.  mov qword [rsp + 0x68], 0
0x00002068      4889e2         mov rdx, rsp
0x0000206b      48890424       mov qword [rsp], rax
0x0000206f      488d05e84e00.  lea rax, str.test_invocation            ; 0x6f5e ; "test invocation"
0x00002076      48894c2430     mov qword [rsp + 0x30], rcx
0x0000207b      488d0d254f00.  lea rcx, str.sha384sum                  ; 0x6fa7 ; "sha384sum"
0x00002082      4889442408     mov qword [rsp + 8], rax
0x00002087      488d05484f00.  lea rax, [0x00006fd6]                   ; "coreutils"
0x0000208e      48894c2440     mov qword [rsp + 0x40], rcx
0x00002093      488d0d174f00.  lea rcx, str.sha512sum                  ; 0x6fb1 ; "sha512sum"
0x0000209a      4889442410     mov qword [rsp + 0x10], rax
0x0000209f      488d05c84e00.  lea rax, str.Multi_call_invocation      ; 0x6f6e ; "Multi-call invocation"
0x000020a6      48894c2450     mov qword [rsp + 0x50], rcx
0x000020ab      4889442418     mov qword [rsp + 0x18], rax
0x000020b0      488d05cd4e00.  lea rax, str.sha224sum                  ; 0x6f84 ; "sha224sum"
0x000020b7      4889442420     mov qword [rsp + 0x20], rax
0x000020bc      488d05cb4e00.  lea rax, str.sha2_utilities             ; 0x6f8e ; "sha2 utilities"
0x000020c3      4889442428     mov qword [rsp + 0x28], rax
0x000020c8      4889442438     mov qword [rsp + 0x38], rax
0x000020cd      4889442448     mov qword [rsp + 0x48], rax
0x000020d2      4889442458     mov qword [rsp + 0x58], rax
0x000020d7      660f1f840000.  nop word [rax + rax]
0x000020e0      4883c210       add rdx, 0x10
0x000020e4      488b3a         mov rdi, qword [rdx]
0x000020e7      4885ff         test rdi, rdi
0x000020ea      7413           je 0x20ff
0x000020ec      b909000000     mov ecx, 9
0x000020f1      4889de         mov rsi, rbx
0x000020f4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000020f6      0f97c0         seta al
0x000020f9      1c00           sbb al, 0
0x000020fb      84c0           test al, al
0x000020fd      75e1           jne 0x20e0
0x000020ff      4c8b6208       mov r12, qword [rdx + 8]
0x00002103      31ff           xor edi, edi
0x00002105      ba05000000     mov edx, 5
0x0000210a      488d35aa4e00.  lea rsi, str.s_online_help:___s         ; 0x6fbb ; "\n%s online help: <%s>\n"
0x00002111      4d85e4         test r12, r12
0x00002114      0f84c1000000   je 0x21db
0x0000211a      e831f4ffff     call sym.imp.dcgettext
0x0000211f      488d0d125300.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x7438 ; "https://www.gnu.org/software/coreutils/"
0x00002126      488d15a54e00.  lea rdx, str.GNU_coreutils              ; 0x6fd2 ; "GNU coreutils"
0x0000212d      4889c6         mov rsi, rax
0x00002130      bf01000000     mov edi, 1
0x00002135      31c0           xor eax, eax
0x00002137      e8c4f5ffff     call sym.imp.__printf_chk
0x0000213c      31f6           xor esi, esi
0x0000213e      bf05000000     mov edi, 5
0x00002143      e8a8f5ffff     call sym.imp.setlocale
0x00002148      4885c0         test rax, rax
0x0000214b      741c           je 0x2169
0x0000214d      488d358c4e00.  lea rsi, [0x00006fe0]                   ; "en_"
0x00002154      ba03000000     mov edx, 3
0x00002159      4889c7         mov rdi, rax
0x0000215c      e87ff3ffff     call sym.imp.strncmp
0x00002161      85c0           test eax, eax
0x00002163      0f8507010000   jne 0x2270
0x00002169      488d35744e00.  lea rsi, str.Full_documentation___s_s   ; 0x6fe4 ; "Full documentation <%s%s>\n"
0x00002170      31ff           xor edi, edi
0x00002172      ba05000000     mov edx, 5
0x00002177      e8d4f3ffff     call sym.imp.dcgettext
0x0000217c      488d0dd04d00.  lea rcx, str.realpath                   ; 0x6f53 ; "realpath"
0x00002183      488d15ae5200.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x7438 ; "https://www.gnu.org/software/coreutils/"
0x0000218a      4889c6         mov rsi, rax
0x0000218d      bf01000000     mov edi, 1
0x00002192      31c0           xor eax, eax
0x00002194      e867f5ffff     call sym.imp.__printf_chk
0x00002199      4939dc         cmp r12, rbx
0x0000219c      488d0dd54d00.  lea rcx, [0x00006f78]                   ; " invocation"
0x000021a3      488d1d975900.  lea rbx, [0x00007b41]
0x000021aa      480f44d9       cmove rbx, rcx
0x000021ae      488d35f35200.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x74a8 ; "or available locally via: info '(coreutils) %s%s'\n"
0x000021b5      31ff           xor edi, edi
0x000021b7      ba05000000     mov edx, 5
0x000021bc      e88ff3ffff     call sym.imp.dcgettext
0x000021c1      4889d9         mov rcx, rbx
0x000021c4      4889c6         mov rsi, rax
0x000021c7      4c89e2         mov rdx, r12
0x000021ca      bf01000000     mov edi, 1
0x000021cf      31c0           xor eax, eax
0x000021d1      e82af5ffff     call sym.imp.__printf_chk
0x000021d6      e9abfdffff     jmp 0x1f86
0x000021db      e870f3ffff     call sym.imp.dcgettext
0x000021e0      488d0d515200.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x7438 ; "https://www.gnu.org/software/coreutils/"
0x000021e7      488d15e44d00.  lea rdx, str.GNU_coreutils              ; 0x6fd2 ; "GNU coreutils"
0x000021ee      4889c6         mov rsi, rax
0x000021f1      bf01000000     mov edi, 1
0x000021f6      31c0           xor eax, eax
0x000021f8      e803f5ffff     call sym.imp.__printf_chk
0x000021fd      31f6           xor esi, esi
0x000021ff      bf05000000     mov edi, 5
0x00002204      e8e7f4ffff     call sym.imp.setlocale
0x00002209      4885c0         test rax, rax
0x0000220c      7418           je 0x2226
0x0000220e      488d35cb4d00.  lea rsi, [0x00006fe0]                   ; "en_"
0x00002215      ba03000000     mov edx, 3
0x0000221a      4889c7         mov rdi, rax
0x0000221d      e8bef2ffff     call sym.imp.strncmp
0x00002222      85c0           test eax, eax
0x00002224      7543           jne 0x2269
0x00002226      488d35b74d00.  lea rsi, str.Full_documentation___s_s   ; 0x6fe4 ; "Full documentation <%s%s>\n"
0x0000222d      ba05000000     mov edx, 5
0x00002232      31ff           xor edi, edi
0x00002234      4c8d25184d00.  lea r12, str.realpath                   ; 0x6f53 ; "realpath"
0x0000223b      488d1d364d00.  lea rbx, [0x00006f78]                   ; " invocation"
0x00002242      e809f3ffff     call sym.imp.dcgettext
0x00002247      488d0d054d00.  lea rcx, str.realpath                   ; 0x6f53 ; "realpath"
0x0000224e      488d15e35100.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x7438 ; "https://www.gnu.org/software/coreutils/"
0x00002255      4889c6         mov rsi, rax
0x00002258      bf01000000     mov edi, 1
0x0000225d      31c0           xor eax, eax
0x0000225f      e89cf4ffff     call sym.imp.__printf_chk
0x00002264      e945ffffff     jmp 0x21ae
0x00002269      4c8d25e34c00.  lea r12, str.realpath                   ; 0x6f53 ; "realpath"
0x00002270      4c8b2d317e20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002277      488d35e25100.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x7460 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000227e      31ff           xor edi, edi
0x00002280      ba05000000     mov edx, 5
0x00002285      e8c6f2ffff     call sym.imp.dcgettext
0x0000228a      4c89ee         mov rsi, r13
0x0000228d      4889c7         mov rdi, rax
0x00002290      e8abf3ffff     call sym.imp.fputs_unlocked
0x00002295      e9cffeffff     jmp 0x2169
0x0000229a      660f1f440000   nop word [rax + rax]
;-- buffer_or_output:
0x000022a0      4156           push r14
0x000022a2      4155           push r13
0x000022a4      4989fe         mov r14, rdi
0x000022a7      4154           push r12
0x000022a9      55             push rbp
0x000022aa      53             push rbx
0x000022ab      4c8b2e         mov r13, qword [rsi]
0x000022ae      4d85ed         test r13, r13
0x000022b1      744d           je 0x2300
0x000022b3      4989d4         mov r12, rdx
0x000022b6      4889f3         mov rbx, rsi
0x000022b9      e8b2f2ffff     call sym.imp.strlen
0x000022be      4889c5         mov rbp, rax
0x000022c1      49392c24       cmp qword [r12], rbp
0x000022c5      b801000000     mov eax, 1
0x000022ca      770c           ja 0x22d8
0x000022cc      5b             pop rbx
0x000022cd      5d             pop rbp
0x000022ce      415c           pop r12
0x000022d0      415d           pop r13
0x000022d2      415e           pop r14
0x000022d4      c3             ret
0x000022d5      0f1f00         nop dword [rax]
0x000022d8      488d5501       lea rdx, [rbp + 1]
0x000022dc      4c89f6         mov rsi, r14
0x000022df      4c89ef         mov rdi, r13
0x000022e2      e889f3ffff     call sym.imp.memcpy
0x000022e7      48012b         add qword [rbx], rbp
0x000022ea      49292c24       sub qword [r12], rbp
0x000022ee      31c0           xor eax, eax
0x000022f0      5b             pop rbx
0x000022f1      5d             pop rbp
0x000022f2      415c           pop r12
0x000022f4      415d           pop r13
0x000022f6      415e           pop r14
0x000022f8      c3             ret
0x000022f9      0f1f80000000.  nop dword [rax]
0x00002300      488b35a17d20.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002307      e834f3ffff     call sym.imp.fputs_unlocked
0x0000230c      5b             pop rbx
0x0000230d      31c0           xor eax, eax
0x0000230f      5d             pop rbp
0x00002310      415c           pop r12
0x00002312      415d           pop r13
0x00002314      415e           pop r14
0x00002316      c3             ret
0x00002317      660f1f840000.  nop word [rax + rax]
;-- relpath:
0x00002320      4157           push r15
0x00002322      4156           push r14
0x00002324      4155           push r13
0x00002326      4154           push r12
0x00002328      55             push rbp
0x00002329      53             push rbx
0x0000232a      4883ec18       sub rsp, 0x18
0x0000232e      440fb64701     movzx r8d, byte [rdi + 1]
0x00002333      48890c24       mov qword [rsp], rcx
0x00002337      0fb64e01       movzx ecx, byte [rsi + 1]
0x0000233b      4889542408     mov qword [rsp + 8], rdx
0x00002340      80f92f         cmp cl, 0x2f
0x00002343      410f94c1       sete r9b
0x00002347      4180f82f       cmp r8b, 0x2f
0x0000234b      0f94c2         sete dl
0x0000234e      31c0           xor eax, eax
0x00002350      4138d1         cmp r9b, dl
0x00002353      7413           je 0x2368
0x00002355      4883c418       add rsp, 0x18
0x00002359      5b             pop rbx
0x0000235a      5d             pop rbp
0x0000235b      415c           pop r12
0x0000235d      415d           pop r13
0x0000235f      415e           pop r14
0x00002361      415f           pop r15
0x00002363      c3             ret
0x00002364      0f1f4000       nop dword [rax]
0x00002368      0fb617         movzx edx, byte [rdi]
0x0000236b      440fb616       movzx r10d, byte [rsi]
0x0000236f      84d2           test dl, dl
0x00002371      410f94c1       sete r9b
0x00002375      4584d2         test r10b, r10b
0x00002378      74db           je 0x2355
0x0000237a      4138d2         cmp r10b, dl
0x0000237d      0f95c0         setne al
0x00002380      4408c8         or al, r9b
0x00002383      0f85c7010000   jne 0x2550
0x00002389      31d2           xor edx, edx
0x0000238b      4531c9         xor r9d, r9d
0x0000238e      eb24           jmp 0x23b4
0x00002390      4883c201       add rdx, 1
0x00002394      4138c8         cmp r8b, cl
0x00002397      0f8593010000   jne 0x2530
0x0000239d      4584d2         test r10b, r10b
0x000023a0      0f858a010000   jne 0x2530
0x000023a6      4189ca         mov r10d, ecx
0x000023a9      440fb6441701   movzx r8d, byte [rdi + rdx + 1]
0x000023af      0fb64c1601     movzx ecx, byte [rsi + rdx + 1]
0x000023b4      448d5a01       lea r11d, [rdx + 1]
0x000023b8      4180fa2f       cmp r10b, 0x2f
0x000023bc      450f44cb       cmove r9d, r11d
0x000023c0      4584c0         test r8b, r8b
0x000023c3      410f94c2       sete r10b
0x000023c7      84c9           test cl, cl
0x000023c9      75c5           jne 0x2390
0x000023cb      4180f82f       cmp r8b, 0x2f
0x000023cf      0f846b010000   je 0x2540
0x000023d5      4584d2         test r10b, r10b
0x000023d8      0f8562010000   jne 0x2540
0x000023de      4585c9         test r9d, r9d
0x000023e1      0f846effffff   je 0x2355
0x000023e7      4d63c9         movsxd r9, r9d
0x000023ea      4e8d240e       lea r12, [rsi + r9]
0x000023ee      4a8d1c0f       lea rbx, [rdi + r9]
0x000023f2      410fb60424     movzx eax, byte [r12]
0x000023f7      3c2f           cmp al, 0x2f
0x000023f9      750a           jne 0x2405
0x000023fb      410fb6442401   movzx eax, byte [r12 + 1]
0x00002401      4983c401       add r12, 1
0x00002405      31d2           xor edx, edx
0x00002407      803b2f         cmp byte [rbx], 0x2f
0x0000240a      0f94c2         sete dl
0x0000240d      4801d3         add rbx, rdx
0x00002410      84c0           test al, al
0x00002412      7544           jne 0x2458
0x00002414      803b00         cmp byte [rbx], 0
0x00002417      488d05bf5000.  lea rax, [0x000074dd]                   ; "."
0x0000241e      488d742408     lea rsi, [rsp + 8]
0x00002423      4889e2         mov rdx, rsp
0x00002426      480f44d8       cmove rbx, rax
0x0000242a      4889df         mov rdi, rbx
0x0000242d      e86efeffff     call sym.buffer_or_output
0x00002432      89c5           mov ebp, eax
0x00002434      4084ed         test bpl, bpl
0x00002437      0f85c3000000   jne 0x2500
0x0000243d      4883c418       add rsp, 0x18
0x00002441      89e8           mov eax, ebp
0x00002443      5b             pop rbx
0x00002444      83f001         xor eax, 1
0x00002447      5d             pop rbp
0x00002448      415c           pop r12
0x0000244a      415d           pop r13
0x0000244c      415e           pop r14
0x0000244e      415f           pop r15
0x00002450      c3             ret
0x00002451      0f1f80000000.  nop dword [rax]
0x00002458      4c8d6c2408     lea r13, [rsp + 8]
0x0000245d      4989e6         mov r14, rsp
0x00002460      488d3d755000.  lea rdi, [0x000074dc]                   ; ".."
0x00002467      4c89f2         mov rdx, r14
0x0000246a      4c89ee         mov rsi, r13
0x0000246d      e82efeffff     call sym.buffer_or_output
0x00002472      89c5           mov ebp, eax
0x00002474      410fb60424     movzx eax, byte [r12]
0x00002479      84c0           test al, al
0x0000247b      7443           je 0x24c0
0x0000247d      4c8d3d575000.  lea r15, [0x000074db]                   ; "/.."
0x00002484      eb17           jmp 0x249d
0x00002486      662e0f1f8400.  nop word cs:[rax + rax]
0x00002490      4983c401       add r12, 1
0x00002494      410fb60424     movzx eax, byte [r12]
0x00002499      84c0           test al, al
0x0000249b      7423           je 0x24c0
0x0000249d      3c2f           cmp al, 0x2f
0x0000249f      75ef           jne 0x2490
0x000024a1      4983c401       add r12, 1
0x000024a5      4c89f2         mov rdx, r14
0x000024a8      4c89ee         mov rsi, r13
0x000024ab      4c89ff         mov rdi, r15
0x000024ae      e8edfdffff     call sym.buffer_or_output
0x000024b3      09c5           or ebp, eax
0x000024b5      410fb60424     movzx eax, byte [r12]
0x000024ba      84c0           test al, al
0x000024bc      75df           jne 0x249d
0x000024be      6690           nop
0x000024c0      803b00         cmp byte [rbx], 0
0x000024c3      0f846bffffff   je 0x2434
0x000024c9      488d3d2e5100.  lea rdi, [0x000075fe]                   ; "/"
0x000024d0      4c89f2         mov rdx, r14
0x000024d3      4c89ee         mov rsi, r13
0x000024d6      e8c5fdffff     call sym.buffer_or_output
0x000024db      4c89f2         mov rdx, r14
0x000024de      4189c4         mov r12d, eax
0x000024e1      4c89ee         mov rsi, r13
0x000024e4      4889df         mov rdi, rbx
0x000024e7      e8b4fdffff     call sym.buffer_or_output
0x000024ec      4109c4         or r12d, eax
0x000024ef      4409e5         or ebp, r12d
0x000024f2      e93dffffff     jmp 0x2434
0x000024f7      660f1f840000.  nop word [rax + rax]
0x00002500      488d35d84f00.  lea rsi, str.generating_relative_path   ; 0x74df ; "generating relative path"
0x00002507      31ff           xor edi, edi
0x00002509      ba05000000     mov edx, 5
0x0000250e      e83df0ffff     call sym.imp.dcgettext
0x00002513      488d15f34f00.  lea rdx, [0x0000750d]                   ; "%s"
0x0000251a      4889c1         mov rcx, rax
0x0000251d      be24000000     mov esi, 0x24                           ; '$'
0x00002522      31ff           xor edi, edi
0x00002524      31c0           xor eax, eax
0x00002526      e8f5f1ffff     call sym.imp.error
0x0000252b      e90dffffff     jmp 0x243d
0x00002530      80f92f         cmp cl, 0x2f
0x00002533      0f849cfeffff   je 0x23d5
0x00002539      e9a0feffff     jmp 0x23de
0x0000253e      6690           nop
0x00002540      4589d9         mov r9d, r11d
0x00002543      e99ffeffff     jmp 0x23e7
0x00002548      0f1f84000000.  nop dword [rax + rax]
0x00002550      31c0           xor eax, eax
0x00002552      e9fefdffff     jmp 0x2355
0x00002557      660f1f840000.  nop word [rax + rax]
;-- canonicalize_filename_mode:
0x00002560      4157           push r15
0x00002562      4156           push r14
0x00002564      4155           push r13
0x00002566      4154           push r12
0x00002568      55             push rbp
0x00002569      53             push rbx
0x0000256a      4881ece80000.  sub rsp, 0xe8
0x00002571      64488b042528.  mov rax, qword fs:[0x28]
0x0000257a      48898424d800.  mov qword [rsp + 0xd8], rax
0x00002582      31c0           xor eax, eax
0x00002584      89f0           mov eax, esi
0x00002586      83e004         and eax, 4
0x00002589      0f9544241b     setne byte [rsp + 0x1b]
0x0000258e      83e603         and esi, 3
0x00002591      8944241c       mov dword [rsp + 0x1c], eax
0x00002595      8d46ff         lea eax, [rsi - 1]
0x00002598      89742404       mov dword [rsp + 4], esi
0x0000259c      85c6           test esi, eax
0x0000259e      0f854c050000   jne 0x2af0
0x000025a4      4885ff         test rdi, rdi
0x000025a7      4989fe         mov r14, rdi
0x000025aa      0f8440050000   je 0x2af0
0x000025b0      0fb607         movzx eax, byte [rdi]
0x000025b3      84c0           test al, al
0x000025b5      0f8475050000   je 0x2b30
0x000025bb      3c2f           cmp al, 0x2f
0x000025bd      0f84bd040000   je 0x2a80
0x000025c3      e818430000     call sym.xgetcwd
0x000025c8      4885c0         test rax, rax
0x000025cb      4889c5         mov rbp, rax
0x000025ce      0f84ac010000   je 0x2780
0x000025d4      4889c7         mov rdi, rax
0x000025d7      e894efffff     call sym.imp.strlen
0x000025dc      483dff0f0000   cmp rax, 0xfff
0x000025e2      4989c7         mov r15, rax
0x000025e5      0f86b5040000   jbe 0x2aa0
0x000025eb      4901ef         add r15, rbp
0x000025ee      4c89fb         mov rbx, r15
0x000025f1      488d442440     lea rax, [rsp + 0x40]
0x000025f6      4c89742420     mov qword [rsp + 0x20], r14
0x000025fb      48c744241000.  mov qword [rsp + 0x10], 0
0x00002604      48c744243000.  mov qword [rsp + 0x30], 0
0x0000260d      48c744242800.  mov qword [rsp + 0x28], 0
0x00002616      4889442408     mov qword [rsp + 8], rax
0x0000261b      410fb606       movzx eax, byte [r14]
0x0000261f      84c0           test al, al
0x00002621      0f8408010000   je 0x272f
0x00002627      660f1f840000.  nop word [rax + rax]
0x00002630      3c2f           cmp al, 0x2f
0x00002632      7518           jne 0x264c
0x00002634      0f1f4000       nop dword [rax]
0x00002638      4983c601       add r14, 1
0x0000263c      410fb606       movzx eax, byte [r14]
0x00002640      3c2f           cmp al, 0x2f
0x00002642      74f4           je 0x2638
0x00002644      84c0           test al, al
0x00002646      0f84c4020000   je 0x2910
0x0000264c      4d89f5         mov r13, r14
0x0000264f      eb0c           jmp 0x265d
0x00002651      0f1f80000000.  nop dword [rax]
0x00002658      80fa2f         cmp dl, 0x2f
0x0000265b      740d           je 0x266a
0x0000265d      4983c501       add r13, 1
0x00002661      410fb65500     movzx edx, byte [r13]
0x00002666      84d2           test dl, dl
0x00002668      75ee           jne 0x2658
0x0000266a      4d39f5         cmp r13, r14
0x0000266d      0f84bc000000   je 0x272f
0x00002673      4d89ec         mov r12, r13
0x00002676      4d29f4         sub r12, r14
0x00002679      4983fc01       cmp r12, 1
0x0000267d      0f84cd010000   je 0x2850
0x00002683      4983fc02       cmp r12, 2
0x00002687      7508           jne 0x2691
0x00002689      3c2e           cmp al, 0x2e
0x0000268b      0f848f020000   je 0x2920
0x00002691      41807fff2f     cmp byte [r15 - 1], 0x2f
0x00002696      7408           je 0x26a0
0x00002698      41c6072f       mov byte [r15], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x0000269c      4983c701       add r15, 1
0x000026a0      4b8d0427       lea rax, [r15 + r12]
0x000026a4      4839c3         cmp rbx, rax
0x000026a7      7731           ja 0x26da
0x000026a9      4829eb         sub rbx, rbp
0x000026ac      4929ef         sub r15, rbp
0x000026af      4889ef         mov rdi, rbp
0x000026b2      498d441c01     lea rax, [r12 + rbx + 1]
0x000026b7      4881c3001000.  add rbx, sym..rela.plt                  ; 0x1000 ; "@\x9e "
0x000026be      4981fc001000.  cmp r12, sym..rela.plt                  ; 0x1000 ; "@\x9e "
0x000026c5      480f4dd8       cmovge rbx, rax
0x000026c9      4889de         mov rsi, rbx
0x000026cc      e8df3f0000     call sym.xrealloc
0x000026d1      4889c5         mov rbp, rax
0x000026d4      4801c3         add rbx, rax
0x000026d7      4901c7         add r15, rax
0x000026da      4c89ff         mov rdi, r15
0x000026dd      4c89e2         mov rdx, r12
0x000026e0      4c89f6         mov rsi, r14
0x000026e3      e888efffff     call sym.imp.memcpy
0x000026e8      837c240402     cmp dword [rsp + 4], 2
0x000026ed      4f8d3c27       lea r15, [r15 + r12]
0x000026f1      41c60700       mov byte [r15], 0
0x000026f5      0f85b5000000   jne 0x27b0
0x000026fb      807c241b00     cmp byte [rsp + 0x1b], 0
0x00002700      0f84aa000000   je 0x27b0
0x00002706      c74424580000.  mov dword [rsp + 0x58], 0
0x0000270e      41807d0000     cmp byte [r13], 0
0x00002713      740b           je 0x2720
0x00002715      837c240402     cmp dword [rsp + 4], 2
0x0000271a      0f8557040000   jne 0x2b77
0x00002720      4d89ee         mov r14, r13
0x00002723      410fb606       movzx eax, byte [r14]
0x00002727      84c0           test al, al
0x00002729      0f8501ffffff   jne 0x2630
0x0000272f      488d4501       lea rax, [rbp + 1]
0x00002733      4939c7         cmp r15, rax
0x00002736      760b           jbe 0x2743
0x00002738      41807fff2f     cmp byte [r15 - 1], 0x2f
0x0000273d      7504           jne 0x2743
0x0000273f      4983ef01       sub r15, 1
0x00002743      498d4701       lea rax, [r15 + 1]
0x00002747      41c60700       mov byte [r15], 0
0x0000274b      4839c3         cmp rbx, rax
0x0000274e      7412           je 0x2762
0x00002750      4929ef         sub r15, rbp
0x00002753      4889ef         mov rdi, rbp
0x00002756      498d7701       lea rsi, [r15 + 1]
0x0000275a      e8513f0000     call sym.xrealloc
0x0000275f      4889c5         mov rbp, rax
0x00002762      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00002767      e844edffff     call sym.imp.free
0x0000276c      488b442410     mov rax, qword [rsp + 0x10]
0x00002771      4885c0         test rax, rax
0x00002774      740a           je 0x2780
0x00002776      4889c7         mov rdi, rax
0x00002779      e8a2100000     call sym.hash_free
0x0000277e      6690           nop
0x00002780      488b8c24d800.  mov rcx, qword [rsp + 0xd8]
0x00002788      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002791      4889e8         mov rax, rbp
0x00002794      0f85f7030000   jne 0x2b91
0x0000279a      4881c4e80000.  add rsp, 0xe8
0x000027a1      5b             pop rbx
0x000027a2      5d             pop rbp
0x000027a3      415c           pop r12
0x000027a5      415d           pop r13
0x000027a7      415e           pop r14
0x000027a9      415f           pop r15
0x000027ab      c3             ret
0x000027ac      0f1f4000       nop dword [rax]
0x000027b0      8b44241c       mov eax, dword [rsp + 0x1c]
0x000027b4      488b542408     mov rdx, qword [rsp + 8]
0x000027b9      4889ee         mov rsi, rbp
0x000027bc      bf01000000     mov edi, 1
0x000027c1      85c0           test eax, eax
0x000027c3      0f84b7000000   je 0x2880
0x000027c9      e8c2eeffff     call sym.imp.__xstat
0x000027ce      85c0           test eax, eax
0x000027d0      0f95c0         setne al
0x000027d3      84c0           test al, al
0x000027d5      0f8485000000   je 0x2860
0x000027db      e8f0ecffff     call sym.imp.__errno_location
0x000027e0      4989c6         mov r14, rax
0x000027e3      8b10           mov edx, dword [rax]
0x000027e5      8b442404       mov eax, dword [rsp + 4]
0x000027e9      85c0           test eax, eax
0x000027eb      7431           je 0x281e
0x000027ed      83f801         cmp eax, 1
0x000027f0      0f8510ffffff   jne 0x2706
0x000027f6      488d35014e00.  lea rsi, [0x000075fe]                   ; "/"
0x000027fd      4c89ef         mov rdi, r13
0x00002800      89542438       mov dword [rsp + 0x38], edx
0x00002804      e817eeffff     call sym.imp.strspn
0x00002809      41807c050000   cmp byte [r13 + rax], 0
0x0000280f      8b542438       mov edx, dword [rsp + 0x38]
0x00002813      7509           jne 0x281e
0x00002815      83fa02         cmp edx, 2
0x00002818      0f8402ffffff   je 0x2720
0x0000281e      4d89f4         mov r12, r14
0x00002821      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00002826      89542404       mov dword [rsp + 4], edx
0x0000282a      e881ecffff     call sym.imp.free
0x0000282f      4889ef         mov rdi, rbp
0x00002832      e879ecffff     call sym.imp.free
0x00002837      48837c241000   cmp qword [rsp + 0x10], 0
0x0000283d      8b542404       mov edx, dword [rsp + 4]
0x00002841      0f84b5000000   je 0x28fc
0x00002847      e99e000000     jmp 0x28ea
0x0000284c      0f1f4000       nop dword [rax]
0x00002850      3c2e           cmp al, 0x2e
0x00002852      0f8539feffff   jne 0x2691
0x00002858      e9c3feffff     jmp 0x2720
0x0000285d      0f1f00         nop dword [rax]
0x00002860      8b442458       mov eax, dword [rsp + 0x58]
0x00002864      2500f00000     and eax, 0xf000
0x00002869      3d00a00000     cmp eax, 0xa000
0x0000286e      7420           je 0x2890
0x00002870      3d00400000     cmp eax, 0x4000
0x00002875      0f84a5feffff   je 0x2720
0x0000287b      e98efeffff     jmp 0x270e
0x00002880      e8fbecffff     call sym.imp.__lxstat
0x00002885      85c0           test eax, eax
0x00002887      0f95c0         setne al
0x0000288a      e944ffffff     jmp 0x27d3
0x0000288f      90             nop
0x00002890      48837c241000   cmp qword [rsp + 0x10], 0
0x00002896      0f84aa010000   je 0x2a46
0x0000289c      488b542408     mov rdx, qword [rsp + 8]
0x000028a1      488b742420     mov rsi, qword [rsp + 0x20]
0x000028a6      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000028ab      e850040000     call sym.seen_file
0x000028b0      84c0           test al, al
0x000028b2      0f84b8000000   je 0x2970
0x000028b8      837c240402     cmp dword [rsp + 4], 2
0x000028bd      0f845dfeffff   je 0x2720
0x000028c3      e808ecffff     call sym.imp.__errno_location
0x000028c8      ba28000000     mov edx, 0x28                           ; '('
0x000028cd      4989c4         mov r12, rax
0x000028d0      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000028d5      89542404       mov dword [rsp + 4], edx
0x000028d9      e8d2ebffff     call sym.imp.free
0x000028de      4889ef         mov rdi, rbp
0x000028e1      e8caebffff     call sym.imp.free
0x000028e6      8b542404       mov edx, dword [rsp + 4]
0x000028ea      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000028ef      89542404       mov dword [rsp + 4], edx
0x000028f3      e8280f0000     call sym.hash_free
0x000028f8      8b542404       mov edx, dword [rsp + 4]
0x000028fc      41891424       mov dword [r12], edx
0x00002900      31ed           xor ebp, ebp
0x00002902      e979feffff     jmp 0x2780
0x00002907      660f1f840000.  nop word [rax + rax]
0x00002910      4d89f5         mov r13, r14
0x00002913      e952fdffff     jmp 0x266a
0x00002918      0f1f84000000.  nop dword [rax + rax]
0x00002920      41807e012e     cmp byte [r14 + 1], 0x2e
0x00002925      0f8566fdffff   jne 0x2691
0x0000292b      488d4501       lea rax, [rbp + 1]
0x0000292f      4d89ee         mov r14, r13
0x00002932      4939c7         cmp r15, rax
0x00002935      0f86e0fcffff   jbe 0x261b
0x0000293b      498d47ff       lea rax, [r15 - 1]
0x0000293f      4839c5         cmp rbp, rax
0x00002942      0f8341020000   jae 0x2b89
0x00002948      41807ffe2f     cmp byte [r15 - 2], 0x2f
0x0000294d      4989c7         mov r15, rax
0x00002950      0f84c5fcffff   je 0x261b
0x00002956      4983ef01       sub r15, 1
0x0000295a      4c39fd         cmp rbp, r15
0x0000295d      0f84bdfdffff   je 0x2720
0x00002963      41807fff2f     cmp byte [r15 - 1], 0x2f
0x00002968      0f84b2fdffff   je 0x2720
0x0000296e      ebe6           jmp 0x2956
0x00002970      488b542408     mov rdx, qword [rsp + 8]
0x00002975      488b742420     mov rsi, qword [rsp + 0x20]
0x0000297a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000297f      e8ec020000     call sym.record_file
0x00002984      488b742470     mov rsi, qword [rsp + 0x70]
0x00002989      4889ef         mov rdi, rbp
0x0000298c      e80f400000     call sym.areadlink_with_size
0x00002991      4885c0         test rax, rax
0x00002994      4989c6         mov r14, rax
0x00002997      0f8465010000   je 0x2b02
0x0000299d      4889c7         mov rdi, rax
0x000029a0      e8cbebffff     call sym.imp.strlen
0x000029a5      4c89ef         mov rdi, r13
0x000029a8      4989c4         mov r12, rax
0x000029ab      4889442420     mov qword [rsp + 0x20], rax
0x000029b0      e8bbebffff     call sym.imp.strlen
0x000029b5      48837c243000   cmp qword [rsp + 0x30], 0
0x000029bb      4889c2         mov rdx, rax
0x000029be      498d4c1401     lea rcx, [r12 + rdx + 1]
0x000029c3      0f84f6000000   je 0x2abf
0x000029c9      48394c2430     cmp qword [rsp + 0x30], rcx
0x000029ce      7321           jae 0x29f1
0x000029d0      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000029d5      4889ce         mov rsi, rcx
0x000029d8      4889542438     mov qword [rsp + 0x38], rdx
0x000029dd      48894c2430     mov qword [rsp + 0x30], rcx
0x000029e2      e8c93c0000     call sym.xrealloc
0x000029e7      488b542438     mov rdx, qword [rsp + 0x38]
0x000029ec      4889442428     mov qword [rsp + 0x28], rax
0x000029f1      4c8b642428     mov r12, qword [rsp + 0x28]
0x000029f6      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000029fb      4883c201       add rdx, 1
0x000029ff      4c89ee         mov rsi, r13
0x00002a02      4c01e7         add rdi, r12
0x00002a05      4d89e5         mov r13, r12
0x00002a08      e803edffff     call sym.imp.memmove
0x00002a0d      488b542420     mov rdx, qword [rsp + 0x20]
0x00002a12      4c89f6         mov rsi, r14
0x00002a15      4c89e7         mov rdi, r12
0x00002a18      e853ecffff     call sym.imp.memcpy
0x00002a1d      41803e2f       cmp byte [r14], 0x2f
0x00002a21      4c89642420     mov qword [rsp + 0x20], r12
0x00002a26      488d4501       lea rax, [rbp + 1]
0x00002a2a      0f84f4000000   je 0x2b24
0x00002a30      4939c7         cmp r15, rax
0x00002a33      0f8709010000   ja 0x2b42
0x00002a39      4c89f7         mov rdi, r14
0x00002a3c      e86feaffff     call sym.imp.free
0x00002a41      e9dafcffff     jmp 0x2720
0x00002a46      4c8d05a31600.  lea r8, sym.triple_free                 ; 0x40f0 ; "SH\x89\xfbH\x8b?\xe8\xb4\xd3\xff\xffH\x89\xdf[\xe9\xab\xd3\xff\xfff.\x0f\x1f\x84"
0x00002a4d      488d0d5c1600.  lea rcx, sym.triple_compare_ino_str     ; 0x40b0 ; "1\xc0H\x8bV\bH9W\bt\x04\xf3\xc3f\x90H\x8bN\x10H9O\x10u\xf2H\x83\xec\bH\x8b6H\x8b?\xe8\x87\xd5\xff\xff\x85\xc0\x0f\x94\xc0H\x83\xc4\b\xc3\x0f\x1f"
0x00002a54      31f6           xor esi, esi
0x00002a56      488d15e31500.  lea rdx, sym.triple_hash                ; 0x4040 ; "USH\x89\xfdH\x89\xf3H\x83\xec\bH\x8b?\xe8\xac,"
0x00002a5d      bf07000000     mov edi, 7
0x00002a62      e8690b0000     call sym.hash_initialize
0x00002a67      4885c0         test rax, rax
0x00002a6a      4889442410     mov qword [rsp + 0x10], rax
0x00002a6f      0f8527feffff   jne 0x289c
0x00002a75      e8263e0000     call sym.xalloc_die
0x00002a7a      660f1f440000   nop word [rax + rax]
0x00002a80      bf00100000     mov edi, sym..rela.plt                  ; 0x1000 ; "@\x9e "
0x00002a85      e8c63b0000     call sym.xmalloc
0x00002a8a      4889c5         mov rbp, rax
0x00002a8d      488d98001000.  lea rbx, [rax + sym..rela.plt]
0x00002a94      4c8d7801       lea r15, [rax + 1]
0x00002a98      c6002f         mov byte [rax], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x00002a9b      e951fbffff     jmp 0x25f1
0x00002aa0      4889ef         mov rdi, rbp
0x00002aa3      be00100000     mov esi, sym..rela.plt                  ; 0x1000 ; "@\x9e "
0x00002aa8      e8033c0000     call sym.xrealloc
0x00002aad      4889c5         mov rbp, rax
0x00002ab0      4901c7         add r15, rax
0x00002ab3      488d98001000.  lea rbx, [rax + sym..rela.plt]
0x00002aba      e932fbffff     jmp 0x25f1
0x00002abf      4881f9001000.  cmp rcx, sym..rela.plt                  ; 0x1000 ; "@\x9e "
0x00002ac6      b800100000     mov eax, sym..rela.plt                  ; 0x1000 ; "@\x9e "
0x00002acb      4889542438     mov qword [rsp + 0x38], rdx
0x00002ad0      480f43c1       cmovae rax, rcx
0x00002ad4      4889c7         mov rdi, rax
0x00002ad7      4889442430     mov qword [rsp + 0x30], rax
0x00002adc      e86f3b0000     call sym.xmalloc
0x00002ae1      488b542438     mov rdx, qword [rsp + 0x38]
0x00002ae6      4889442428     mov qword [rsp + 0x28], rax
0x00002aeb      e901ffffff     jmp 0x29f1
0x00002af0      e8dbe9ffff     call sym.imp.__errno_location
0x00002af5      31ed           xor ebp, ebp
0x00002af7      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x1c900000
0x00002afd      e97efcffff     jmp 0x2780
0x00002b02      e8c9e9ffff     call sym.imp.__errno_location
0x00002b07      837c240402     cmp dword [rsp + 4], 2
0x00002b0c      4989c6         mov r14, rax
0x00002b0f      8b10           mov edx, dword [rax]
0x00002b11      7509           jne 0x2b1c
0x00002b13      83fa0c         cmp edx, 0xc
0x00002b16      0f8504fcffff   jne 0x2720
0x00002b1c      4d89f4         mov r12, r14
0x00002b1f      e9acfdffff     jmp 0x28d0
0x00002b24      c645002f       mov byte [rbp], 0x2f                    ; '/'
0x00002b28      4989c7         mov r15, rax
0x00002b2b      e909ffffff     jmp 0x2a39
0x00002b30      e89be9ffff     call sym.imp.__errno_location
0x00002b35      31ed           xor ebp, ebp
0x00002b37      c70002000000   mov dword [rax], 2
0x00002b3d      e93efcffff     jmp 0x2780
0x00002b42      498d47ff       lea rax, [r15 - 1]
0x00002b46      4839c5         cmp rbp, rax
0x00002b49      7307           jae 0x2b52
0x00002b4b      41807ffe2f     cmp byte [r15 - 2], 0x2f
0x00002b50      750b           jne 0x2b5d
0x00002b52      4989c7         mov r15, rax
0x00002b55      e9dffeffff     jmp 0x2a39
0x00002b5a      4c89f8         mov rax, r15
0x00002b5d      4c8d78ff       lea r15, [rax - 1]
0x00002b61      4c39fd         cmp rbp, r15
0x00002b64      0f84cffeffff   je 0x2a39
0x00002b6a      41807fff2f     cmp byte [r15 - 1], 0x2f
0x00002b6f      0f84c4feffff   je 0x2a39
0x00002b75      ebe3           jmp 0x2b5a
0x00002b77      e854e9ffff     call sym.imp.__errno_location
0x00002b7c      ba14000000     mov edx, 0x14
0x00002b81      4989c4         mov r12, rax
0x00002b84      e998fcffff     jmp 0x2821
0x00002b89      4989c7         mov r15, rax
0x00002b8c      e98afaffff     jmp 0x261b
0x00002b91      e8fae9ffff     call sym.imp.__stack_chk_fail
0x00002b96      662e0f1f8400.  nop word cs:[rax + rax]
;-- close_stdout_set_file_name:
0x00002ba0      48893d697520.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20a110:8]=0
0x00002ba7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002ba8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00002bb0      40883d517520.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20a108:1]=0
0x00002bb7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00002bb8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00002bc0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00002bc1      53             push rbx
0x00002bc2      4883ec08       sub rsp, 8
0x00002bc6      488b3ddb7420.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002bcd      e8be3e0000     call sym.close_stream
0x00002bd2      85c0           test eax, eax
0x00002bd4      7416           je 0x2bec
0x00002bd6      e8f5e8ffff     call sym.imp.__errno_location
0x00002bdb      803d26752000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20a108:1]=0
0x00002be2      4889c3         mov rbx, rax
0x00002be5      741c           je 0x2c03
0x00002be7      833820         cmp dword [rax], 0x20
0x00002bea      7517           jne 0x2c03
0x00002bec      488b3ded7420.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00002bf3      e8983e0000     call sym.close_stream
0x00002bf8      85c0           test eax, eax
0x00002bfa      7546           jne 0x2c42
0x00002bfc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00002c00      5b             pop rbx
0x00002c01      5d             pop rbp
0x00002c02      c3             ret
0x00002c03      488d35f34800.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x74fd ; "write error"
0x00002c0a      31ff           xor edi, edi
0x00002c0c      ba05000000     mov edx, 5
0x00002c11      e83ae9ffff     call sym.imp.dcgettext
0x00002c16      488b3df37420.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20a110:8]=0
0x00002c1d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002c20      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002c23      7428           je 0x2c4d
0x00002c25      e8f62f0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00002c2a      8b33           mov esi, dword [rbx]
0x00002c2c      488d15d64800.  lea rdx, str.s:__s                      ; 0x7509 ; "%s: %s"
0x00002c33      4889c1         mov rcx, rax
0x00002c36      4989e8         mov r8, rbp
0x00002c39      31ff           xor edi, edi
0x00002c3b      31c0           xor eax, eax
0x00002c3d      e8deeaffff     call sym.imp.error
0x00002c42      8b3dd8732000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20a020:4]=1
0x00002c48      e8a3e8ffff     call sym.imp._exit
0x00002c4d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00002c4f      488d15b74800.  lea rdx, [0x0000750d]                   ; "%s"
0x00002c56      4889c1         mov rcx, rax
0x00002c59      31ff           xor edi, edi
0x00002c5b      31c0           xor eax, eax
0x00002c5d      e8beeaffff     call sym.imp.error
0x00002c62      ebde           jmp 0x2c42
0x00002c64      662e0f1f8400.  nop word cs:[rax + rax]
0x00002c6e      6690           nop
;-- record_file:
0x00002c70      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/file-set.c:30
0x00002c73      747b           je 0x2cf0
0x00002c75      4155           push r13
0x00002c77      4154           push r12
0x00002c79      4989fd         mov r13, rdi
0x00002c7c      55             push rbp
0x00002c7d      53             push rbx
0x00002c7e      4989f4         mov r12, rsi
0x00002c81      bf18000000     mov edi, 0x18                           ; ../coreutils-8.31/lib/file-set.c:36
0x00002c86      4889d5         mov rbp, rdx
0x00002c89      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:30
0x00002c8d      e8be390000     call sym.xmalloc                        ; ../coreutils-8.31/lib/file-set.c:36
0x00002c92      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/file-set.c:37
0x00002c95      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/file-set.c:36
0x00002c98      e8e33b0000     call sym.xstrdup                        ; ../coreutils-8.31/lib/file-set.c:37
0x00002c9d      488903         mov qword [rbx], rax
0x00002ca0      488b4508       mov rax, qword [rbp + 8]                ; ../coreutils-8.31/lib/file-set.c:38
0x00002ca4      4889de         mov rsi, rbx                            ; ../coreutils-8.31/lib/file-set.c:42
0x00002ca7      4c89ef         mov rdi, r13
0x00002caa      48894308       mov qword [rbx + 8], rax                ; ../coreutils-8.31/lib/file-set.c:38
0x00002cae      488b4500       mov rax, qword [rbp]                    ; ../coreutils-8.31/lib/file-set.c:39
0x00002cb2      48894310       mov qword [rbx + 0x10], rax
0x00002cb6      e815110000     call sym.hash_insert                    ; ../coreutils-8.31/lib/file-set.c:42
0x00002cbb      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/file-set.c:43
0x00002cbe      7432           je 0x2cf2
0x00002cc0      4839c3         cmp rbx, rax                            ; ../coreutils-8.31/lib/file-set.c:49
0x00002cc3      741b           je 0x2ce0
0x00002cc5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:56
0x00002cc9      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/file-set.c:53
0x00002ccc      5b             pop rbx                                 ; ../coreutils-8.31/lib/file-set.c:56
0x00002ccd      5d             pop rbp
0x00002cce      415c           pop r12
0x00002cd0      415d           pop r13
0x00002cd2      e919140000     jmp sym.triple_free                     ; ../coreutils-8.31/lib/file-set.c:53
0x00002cd7      660f1f840000.  nop word [rax + rax]
0x00002ce0      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:56
0x00002ce4      5b             pop rbx
0x00002ce5      5d             pop rbp
0x00002ce6      415c           pop r12
0x00002ce8      415d           pop r13
0x00002cea      c3             ret
0x00002ceb      0f1f440000     nop dword [rax + rax]
0x00002cf0      f3c3           ret
0x00002cf2      e8a93b0000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/file-set.c:46
0x00002cf7      660f1f840000.  nop word [rax + rax]
;-- seen_file:
0x00002d00      4883ec28       sub rsp, 0x28                           ; ../coreutils-8.31/lib/file-set.c:63
0x00002d04      64488b042528.  mov rax, qword fs:[0x28]
0x00002d0d      4889442418     mov qword [rsp + 0x18], rax
0x00002d12      31c0           xor eax, eax
0x00002d14      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/file-set.c:66
0x00002d17      7423           je 0x2d3c
0x00002d19      488b4208       mov rax, qword [rdx + 8]                ; ../coreutils-8.31/lib/file-set.c:70
0x00002d1d      48893424       mov qword [rsp], rsi                    ; ../coreutils-8.31/lib/file-set.c:69
0x00002d21      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/file-set.c:73
0x00002d24      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/file-set.c:70
0x00002d29      488b02         mov rax, qword [rdx]                    ; ../coreutils-8.31/lib/file-set.c:71
0x00002d2c      4889442410     mov qword [rsp + 0x10], rax
0x00002d31      e82a060000     call sym.hash_lookup                    ; ../coreutils-8.31/lib/file-set.c:73
0x00002d36      4885c0         test rax, rax
0x00002d39      0f95c0         setne al
0x00002d3c      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/file-set.c:74
0x00002d41      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002d4a      7505           jne 0x2d51
0x00002d4c      4883c428       add rsp, 0x28
0x00002d50      c3             ret
0x00002d51      e83ae8ffff     call sym.imp.__stack_chk_fail
0x00002d56      662e0f1f8400.  nop word cs:[rax + rax]
;-- next_prime:
0x00002d60      4883ff0a       cmp rdi, 0xa                            ; ../coreutils-8.31/lib/hash.c:464
0x00002d64      b80a000000     mov eax, 0xa
0x00002d69      49b9abaaaaaa.  movabs r9, 0xaaaaaaaaaaaaaaab
0x00002d73      480f42f8       cmovb rdi, rax
0x00002d77      4883cf01       or rdi, 1                               ; ../coreutils-8.31/lib/hash.c:470
0x00002d7b      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x00002d7f      746e           je 0x2def
0x00002d81      0f1f80000000.  nop dword [rax]
0x00002d88      4889f8         mov rax, rdi
0x00002d8b      4889f9         mov rcx, rdi
0x00002d8e      49f7e1         mul r9
0x00002d91      4889d0         mov rax, rdx
0x00002d94      48d1e8         shr rax, 1
0x00002d97      488d0440       lea rax, [rax + rax*2]
0x00002d9b      4829c1         sub rcx, rax
0x00002d9e      4883ff09       cmp rdi, 9                              ; ../coreutils-8.31/lib/hash.c:449
0x00002da2      4889c8         mov rax, rcx
0x00002da5      7639           jbe 0x2de0
0x00002da7      4885c9         test rcx, rcx
0x00002daa      7439           je 0x2de5
0x00002dac      41b810000000   mov r8d, 0x10
0x00002db2      be09000000     mov esi, 9                              ; ../coreutils-8.31/lib/hash.c:447
0x00002db7      b903000000     mov ecx, 3                              ; ../coreutils-8.31/lib/hash.c:446
0x00002dbc      eb0b           jmp 0x2dc9
0x00002dbe      6690           nop
0x00002dc0      4983c008       add r8, 8
0x00002dc4      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:449
0x00002dc7      741c           je 0x2de5
0x00002dc9      4883c102       add rcx, 2                              ; ../coreutils-8.31/lib/hash.c:453
0x00002dcd      31d2           xor edx, edx
0x00002dcf      4889f8         mov rax, rdi
0x00002dd2      48f7f1         div rcx
0x00002dd5      4c01c6         add rsi, r8                             ; ../coreutils-8.31/lib/hash.c:452
0x00002dd8      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/hash.c:449
0x00002ddb      4889d0         mov rax, rdx
0x00002dde      72e0           jb 0x2dc0
0x00002de0      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:472
0x00002de3      750a           jne 0x2def
0x00002de5      4883c702       add rdi, 2                              ; ../coreutils-8.31/lib/hash.c:473
0x00002de9      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x00002ded      7599           jne 0x2d88
0x00002def      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:476
0x00002df2      c3             ret
0x00002df3      0f1f00         nop dword [rax]
0x00002df6      662e0f1f8400.  nop word cs:[rax + rax]
;-- raw_hasher:
0x00002e00      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:487
0x00002e03      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash.c:494
0x00002e05      48c1c803       ror rax, 3                              ; ../coreutils-8.31/lib/bitrotate.h:87
0x00002e09      48f7f6         div rsi                                 ; ../coreutils-8.31/lib/hash.c:494
0x00002e0c      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash.c:495
0x00002e0f      c3             ret
;-- raw_comparator:
0x00002e10      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/hash.c:500
0x00002e13      0f94c0         sete al
0x00002e16      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:502
0x00002e17      660f1f840000.  nop word [rax + rax]
;-- safe_hasher:
0x00002e20      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:250
0x00002e21      4889fb         mov rbx, rdi
0x00002e24      4889f7         mov rdi, rsi
0x00002e27      488b7310       mov rsi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/hash.c:251
0x00002e2b      ff5330         call qword [rbx + 0x30]
0x00002e2e      48394310       cmp qword [rbx + 0x10], rax             ; ../coreutils-8.31/lib/hash.c:252
0x00002e32      7609           jbe 0x2e3d
0x00002e34      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/hash.c:254
0x00002e38      480303         add rax, qword [rbx]
0x00002e3b      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:255
0x00002e3c      c3             ret
0x00002e3d      e87ee6ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/hash.c:253
0x00002e42      0f1f4000       nop dword [rax]
0x00002e46      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_find_entry:
0x00002e50      4156           push r14                                ; ../coreutils-8.31/lib/hash.c:792
0x00002e52      4155           push r13
0x00002e54      4989d6         mov r14, rdx
0x00002e57      4154           push r12
0x00002e59      55             push rbp
0x00002e5a      4989fc         mov r12, rdi
0x00002e5d      53             push rbx
0x00002e5e      4889f5         mov rbp, rsi
0x00002e61      4189cd         mov r13d, ecx
0x00002e64      e8b7ffffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:793
0x00002e69      498906         mov qword [r14], rax                    ; ../coreutils-8.31/lib/hash.c:796
0x00002e6c      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:799
0x00002e6f      4885f6         test rsi, rsi
0x00002e72      0f84e8000000   je 0x2f60
0x00002e78      4839ee         cmp rsi, rbp                            ; ../coreutils-8.31/lib/hash.c:803
0x00002e7b      4889c3         mov rbx, rax
0x00002e7e      0f848f000000   je 0x2f13
0x00002e84      4889ef         mov rdi, rbp
0x00002e87      41ff542438     call qword [r12 + 0x38]
0x00002e8c      84c0           test al, al
0x00002e8e      0f857c000000   jne 0x2f10
0x00002e94      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x00002e98      4885c0         test rax, rax
0x00002e9b      0f84bf000000   je 0x2f60
0x00002ea1      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x00002ea4      4839f5         cmp rbp, rsi
0x00002ea7      7520           jne 0x2ec9
0x00002ea9      eb31           jmp 0x2edc
0x00002eab      0f1f440000     nop dword [rax + rax]
0x00002eb0      488b5b08       mov rbx, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x00002eb4      488b4308       mov rax, qword [rbx + 8]
0x00002eb8      4885c0         test rax, rax
0x00002ebb      0f849f000000   je 0x2f60
0x00002ec1      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x00002ec4      4839ee         cmp rsi, rbp
0x00002ec7      7413           je 0x2edc
0x00002ec9      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:831
0x00002ecc      41ff542438     call qword [r12 + 0x38]
0x00002ed1      84c0           test al, al
0x00002ed3      74db           je 0x2eb0
0x00002ed5      488b4308       mov rax, qword [rbx + 8]
0x00002ed9      488b30         mov rsi, qword [rax]
0x00002edc      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/hash.c:835
0x00002edf      741d           je 0x2efe
0x00002ee1      488b5008       mov rdx, qword [rax + 8]                ; ../coreutils-8.31/lib/hash.c:841
0x00002ee5      48895308       mov qword [rbx + 8], rdx
0x00002ee9      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/hash.c:778
0x00002ef0      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:779
0x00002ef5      48895008       mov qword [rax + 8], rdx
0x00002ef9      4989442448     mov qword [r12 + 0x48], rax             ; ../coreutils-8.31/lib/hash.c:780
0x00002efe      5b             pop rbx
0x00002eff      4889f0         mov rax, rsi
0x00002f02      5d             pop rbp
0x00002f03      415c           pop r12
0x00002f05      415d           pop r13
0x00002f07      415e           pop r14
0x00002f09      c3             ret
0x00002f0a      660f1f440000   nop word [rax + rax]
0x00002f10      488b33         mov rsi, qword [rbx]
0x00002f13      4584ed         test r13b, r13b
0x00002f16      74e6           je 0x2efe
0x00002f18      488b4308       mov rax, qword [rbx + 8]
0x00002f1c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:672
0x00002f1f      742f           je 0x2f50
0x00002f21      f30f6f00       movdqu xmm0, xmmword [rax]
0x00002f25      0f1103         movups xmmword [rbx], xmm0
0x00002f28      48c700000000.  mov qword [rax], 0
0x00002f2f      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:388
0x00002f34      48895008       mov qword [rax + 8], rdx
0x00002f38      4989442448     mov qword [r12 + 0x48], rax
0x00002f3d      4889f0         mov rax, rsi
0x00002f40      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:398
0x00002f41      5d             pop rbp
0x00002f42      415c           pop r12
0x00002f44      415d           pop r13
0x00002f46      415e           pop r14
0x00002f48      c3             ret
0x00002f49      0f1f80000000.  nop dword [rax]
0x00002f50      48c703000000.  mov qword [rbx], 0
0x00002f57      eba5           jmp 0x2efe
0x00002f59      0f1f80000000.  nop dword [rax]
0x00002f60      31f6           xor esi, esi
0x00002f62      5b             pop rbx
0x00002f63      4889f0         mov rax, rsi
0x00002f66      5d             pop rbp
0x00002f67      415c           pop r12
0x00002f69      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:401
0x00002f6b      415e           pop r14
0x00002f6d      c3             ret
0x00002f6e      6690           nop
;-- check_tuning.isra.0:
0x00002f70      488b17         mov rdx, qword [rdi]
0x00002f73      488d0d064600.  lea rcx, obj.default_tuning             ; 0x7580
0x00002f7a      b801000000     mov eax, 1
0x00002f7f      4839ca         cmp rdx, rcx
0x00002f82      7461           je 0x2fe5
0x00002f84      f30f104208     movss xmm0, dword [rdx + 8]
0x00002f89      0f2e05044600.  ucomiss xmm0, dword [0x00007594]
0x00002f90      764e           jbe 0x2fe0
0x00002f92      f30f100dfe45.  movss xmm1, dword [0x00007598]          ; [0x7598:4]=0x3f666666
0x00002f9a      0f2ec8         ucomiss xmm1, xmm0
0x00002f9d      7641           jbe 0x2fe0
0x00002f9f      f30f104a0c     movss xmm1, dword [rdx + 0xc]           ; ../coreutils-8.31/lib/hash.c:408
0x00002fa4      0f2e0df14500.  ucomiss xmm1, dword [0x0000759c]
0x00002fab      7633           jbe 0x2fe0
0x00002fad      f30f100a       movss xmm1, dword [rdx]
0x00002fb1      0f2e0de84500.  ucomiss xmm1, dword [0x000075a0]
0x00002fb8      7226           jb 0x2fe0
0x00002fba      f30f580dd245.  addss xmm1, dword [0x00007594]          ; ../coreutils-8.31/lib/hash.c:737
0x00002fc2      f30f105204     movss xmm2, dword [rdx + 4]
0x00002fc7      0f2ed1         ucomiss xmm2, xmm1
0x00002fca      7614           jbe 0x2fe0
0x00002fcc      f30f101dd045.  movss xmm3, dword [0x000075a4]          ; [0x75a4:4]=0x3f800000
0x00002fd4      0f2eda         ucomiss xmm3, xmm2                      ; ../coreutils-8.31/lib/hash.c:738
0x00002fd7      7207           jb 0x2fe0
0x00002fd9      0f2ec1         ucomiss xmm0, xmm1
0x00002fdc      7707           ja 0x2fe5
0x00002fde      6690           nop
0x00002fe0      48890f         mov qword [rdi], rcx
0x00002fe3      31c0           xor eax, eax
0x00002fe5      f3c3           ret
0x00002fe7      660f1f840000.  nop word [rax + rax]
;-- transfer_entries:
0x00002ff0      4157           push r15
0x00002ff2      4156           push r14
0x00002ff4      4155           push r13                                ; ../coreutils-8.31/lib/hash.c:760
0x00002ff6      4154           push r12
0x00002ff8      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:749
0x00002ff9      53             push rbx
0x00002ffa      4883ec08       sub rsp, 8
0x00002ffe      4c8b26         mov r12, qword [rsi]
0x00003001      4c3b6608       cmp r12, qword [rsi + 8]
0x00003005      0f83dd000000   jae 0x30e8
0x0000300b      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:752
0x0000300e      4989f5         mov r13, rsi
0x00003011      4189d6         mov r14d, edx
0x00003014      0f1f4000       nop dword [rax]
0x00003018      4d8b3c24       mov r15, qword [r12]
0x0000301c      4d85ff         test r15, r15
0x0000301f      0f84b5000000   je 0x30da
0x00003025      498b5c2408     mov rbx, qword [r12 + 8]
0x0000302a      4885db         test rbx, rbx
0x0000302d      751d           jne 0x304c
0x0000302f      eb5a           jmp 0x308b
0x00003031      0f1f80000000.  nop dword [rax]
0x00003038      488b4808       mov rcx, qword [rax + 8]
0x0000303c      4885d2         test rdx, rdx
0x0000303f      48894b08       mov qword [rbx + 8], rcx                ; ../coreutils-8.31/lib/bitrotate.h:557
0x00003043      48895808       mov qword [rax + 8], rbx
0x00003047      4889d3         mov rbx, rdx
0x0000304a      743b           je 0x3087
0x0000304c      4c8b3b         mov r15, qword [rbx]
0x0000304f      4889ef         mov rdi, rbp
0x00003052      4c89fe         mov rsi, r15
0x00003055      e8c6fdffff     call sym.safe_hasher
0x0000305a      48833800       cmp qword [rax], 0
0x0000305e      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:329
0x00003062      75d4           jne 0x3038
0x00003064      4c8938         mov qword [rax], r15
0x00003067      4883451801     add qword [rbp + 0x18], 1
0x0000306c      4885d2         test rdx, rdx
0x0000306f      48c703000000.  mov qword [rbx], 0
0x00003076      488b4548       mov rax, qword [rbp + 0x48]
0x0000307a      48894308       mov qword [rbx + 8], rax
0x0000307e      48895d48       mov qword [rbp + 0x48], rbx             ; ../coreutils-8.31/lib/bitrotate.h:-285
0x00003082      4889d3         mov rbx, rdx                            ; ../coreutils-8.31/lib/bitrotate.h:-283
0x00003085      75c5           jne 0x304c
0x00003087      4d8b3c24       mov r15, qword [r12]
0x0000308b      4584f6         test r14b, r14b
0x0000308e      49c744240800.  mov qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/bitrotate.h:-277
0x00003097      7541           jne 0x30da
0x00003099      4c89fe         mov rsi, r15
0x0000309c      4889ef         mov rdi, rbp
0x0000309f      e87cfdffff     call sym.safe_hasher
0x000030a4      48833800       cmp qword [rax], 0
0x000030a8      4889c3         mov rbx, rax
0x000030ab      7453           je 0x3100
0x000030ad      488b4548       mov rax, qword [rbp + 0x48]
0x000030b1      4885c0         test rax, rax
0x000030b4      745a           je 0x3110
0x000030b6      488b5008       mov rdx, qword [rax + 8]
0x000030ba      48895548       mov qword [rbp + 0x48], rdx
0x000030be      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:-255
0x000030c2      4c8938         mov qword [rax], r15
0x000030c5      48895008       mov qword [rax + 8], rdx
0x000030c9      48894308       mov qword [rbx + 8], rax
0x000030cd      49c704240000.  mov qword [r12], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-250
0x000030d5      49836d1801     sub qword [r13 + 0x18], 1
0x000030da      4983c410       add r12, 0x10                           ; ../coreutils-8.31/lib/bitrotate.h:-249
0x000030de      4d396508       cmp qword [r13 + 8], r12                ; ../coreutils-8.31/lib/bitrotate.h:-250
0x000030e2      0f8730ffffff   ja 0x3018
0x000030e8      4883c408       add rsp, 8
0x000030ec      b801000000     mov eax, 1
0x000030f1      5b             pop rbx
0x000030f2      5d             pop rbp
0x000030f3      415c           pop r12
0x000030f5      415d           pop r13                                 ; ../coreutils-8.31/lib/bitrotate.h:-241
0x000030f7      415e           pop r14
0x000030f9      415f           pop r15
0x000030fb      c3             ret
0x000030fc      0f1f4000       nop dword [rax]
0x00003100      4c8938         mov qword [rax], r15
0x00003103      4883451801     add qword [rbp + 0x18], 1
0x00003108      ebc3           jmp 0x30cd
0x0000310a      660f1f440000   nop word [rax + rax]
0x00003110      bf10000000     mov edi, 0x10
0x00003115      e886e5ffff     call sym.imp.malloc
0x0000311a      4885c0         test rax, rax
0x0000311d      759f           jne 0x30be
0x0000311f      4883c408       add rsp, 8
0x00003123      31c0           xor eax, eax
0x00003125      5b             pop rbx
0x00003126      5d             pop rbp
0x00003127      415c           pop r12
0x00003129      415d           pop r13
0x0000312b      415e           pop r14
0x0000312d      415f           pop r15
0x0000312f      c3             ret
;-- hash_get_n_buckets:
0x00003130      488b4710       mov rax, qword [rdi + 0x10]
0x00003134      c3             ret
0x00003135      90             nop
0x00003136      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-218
;-- hash_get_n_buckets_used:
0x00003140      488b4718       mov rax, qword [rdi + 0x18]
0x00003144      c3             ret                                     ; ../coreutils-8.31/lib/bitrotate.h:-210
0x00003145      90             nop
0x00003146      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-213
;-- hash_get_n_entries:
0x00003150      488b4720       mov rax, qword [rdi + 0x20]
0x00003154      c3             ret
0x00003155      90             nop                                     ; ../coreutils-8.31/lib/bitrotate.h:-209
0x00003156      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_max_bucket_length:
0x00003160      488b37         mov rsi, qword [rdi]
0x00003163      488b7f08       mov rdi, qword [rdi + 8]
0x00003167      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/bitrotate.h:-259
0x00003169      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/bitrotate.h:-205
0x0000316c      7339           jae 0x31a7
0x0000316e      6690           nop
0x00003170      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-268
0x00003174      7426           je 0x319c                               ; ../coreutils-8.31/lib/bitrotate.h:-284
0x00003176      488b5608       mov rdx, qword [rsi + 8]
0x0000317a      b901000000     mov ecx, 1
0x0000317f      4885d2         test rdx, rdx
0x00003182      7411           je 0x3195
0x00003184      0f1f4000       nop dword [rax]
0x00003188      488b5208       mov rdx, qword [rdx + 8]
0x0000318c      4883c101       add rcx, 1
0x00003190      4885d2         test rdx, rdx
0x00003193      75f3           jne 0x3188
0x00003195      4839c8         cmp rax, rcx
0x00003198      480f42c1       cmovb rax, rcx                          ; ../coreutils-8.31/lib/bitrotate.h:-252
0x0000319c      4883c610       add rsi, 0x10
0x000031a0      4839fe         cmp rsi, rdi
0x000031a3      72cb           jb 0x3170
0x000031a5      f3c3           ret
0x000031a7      f3c3           ret
0x000031a9      0f1f80000000.  nop dword [rax]
;-- hash_table_ok:
0x000031b0      488b0f         mov rcx, qword [rdi]
0x000031b3      4c8b4708       mov r8, qword [rdi + 8]
0x000031b7      31d2           xor edx, edx
0x000031b9      31f6           xor esi, esi
0x000031bb      4c39c1         cmp rcx, r8
0x000031be      7336           jae 0x31f6
0x000031c0      48833900       cmp qword [rcx], 0
0x000031c4      7427           je 0x31ed
0x000031c6      488b4108       mov rax, qword [rcx + 8]
0x000031ca      4883c601       add rsi, 1
0x000031ce      4883c201       add rdx, 1
0x000031d2      4885c0         test rax, rax
0x000031d5      7416           je 0x31ed
0x000031d7      660f1f840000.  nop word [rax + rax]
0x000031e0      488b4008       mov rax, qword [rax + 8]
0x000031e4      4883c201       add rdx, 1
0x000031e8      4885c0         test rax, rax
0x000031eb      75f3           jne 0x31e0
0x000031ed      4883c110       add rcx, 0x10
0x000031f1      4c39c1         cmp rcx, r8
0x000031f4      72ca           jb 0x31c0
0x000031f6      31c0           xor eax, eax
0x000031f8      48397718       cmp qword [rdi + 0x18], rsi
0x000031fc      7402           je 0x3200
0x000031fe      f3c3           ret                                     ; ../coreutils-8.31/lib/hash.c:-195
0x00003200      48395720       cmp qword [rdi + 0x20], rdx
0x00003204      0f94c0         sete al
0x00003207      c3             ret
0x00003208      0f1f84000000.  nop dword [rax + rax]
;-- hash_print_statistics:
0x00003210      4155           push r13
0x00003212      4154           push r12
0x00003214      4989f4         mov r12, rsi
0x00003217      55             push rbp
0x00003218      53             push rbx
0x00003219      31db           xor ebx, ebx
0x0000321b      4883ec08       sub rsp, 8
0x0000321f      488b37         mov rsi, qword [rdi]
0x00003222      488b4f20       mov rcx, qword [rdi + 0x20]
0x00003226      488b6f10       mov rbp, qword [rdi + 0x10]
0x0000322a      4c8b6f18       mov r13, qword [rdi + 0x18]
0x0000322e      488b7f08       mov rdi, qword [rdi + 8]
0x00003232      4839fe         cmp rsi, rdi
0x00003235      733e           jae 0x3275
0x00003237      660f1f840000.  nop word [rax + rax]
0x00003240      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/hash.c:-192
0x00003244      7426           je 0x326c
0x00003246      488b4608       mov rax, qword [rsi + 8]                ; stdio2.h:-339
0x0000324a      ba01000000     mov edx, 1
0x0000324f      4885c0         test rax, rax
0x00003252      7411           je 0x3265
0x00003254      0f1f4000       nop dword [rax]
0x00003258      488b4008       mov rax, qword [rax + 8]
0x0000325c      4883c201       add rdx, 1
0x00003260      4885c0         test rax, rax
0x00003263      75f3           jne 0x3258
0x00003265      4839d3         cmp rbx, rdx
0x00003268      480f42da       cmovb rbx, rdx
0x0000326c      4883c610       add rsi, 0x10
0x00003270      4839fe         cmp rsi, rdi
0x00003273      72cb           jb 0x3240
0x00003275      488d15944200.  lea rdx, str.entries:__________lu       ; 0x7510 ; "# entries:         %lu\n"
0x0000327c      be01000000     mov esi, 1
0x00003281      4c89e7         mov rdi, r12
0x00003284      31c0           xor eax, eax
0x00003286      e8e5e4ffff     call sym.imp.__fprintf_chk
0x0000328b      488d15964200.  lea rdx, str.buckets:__________lu       ; 0x7528 ; "# buckets:         %lu\n"
0x00003292      31c0           xor eax, eax
0x00003294      4889e9         mov rcx, rbp
0x00003297      be01000000     mov esi, 1
0x0000329c      4c89e7         mov rdi, r12
0x0000329f      e8cce4ffff     call sym.imp.__fprintf_chk
0x000032a4      4d85ed         test r13, r13
0x000032a7      7867           js 0x3310
0x000032a9      660fefc0       pxor xmm0, xmm0
0x000032ad      4885ed         test rbp, rbp
0x000032b0      f2490f2ac5     cvtsi2sd xmm0, r13
0x000032b5      f20f5905fb42.  mulsd xmm0, qword [0x000075b8]          ; ../coreutils-8.31/lib/hash.c:-174
0x000032bd      787a           js 0x3339                               ; ../coreutils-8.31/lib/hash.c:-170
0x000032bf      660fefc9       pxor xmm1, xmm1
0x000032c3      f2480f2acd     cvtsi2sd xmm1, rbp
0x000032c8      f20f5ec1       divsd xmm0, xmm1
0x000032cc      488d15854200.  lea rdx, str.buckets_used:_____lu___.2f ; 0x7558 ; "# buckets used:    %lu (%.2f%%)\n"
0x000032d3      4c89e9         mov rcx, r13
0x000032d6      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/hash.c:-166
0x000032d9      be01000000     mov esi, 1
0x000032de      b801000000     mov eax, 1
0x000032e3      e888e4ffff     call sym.imp.__fprintf_chk
0x000032e8      4883c408       add rsp, 8
0x000032ec      4889d9         mov rcx, rbx
0x000032ef      4c89e7         mov rdi, r12
0x000032f2      5b             pop rbx
0x000032f3      5d             pop rbp
0x000032f4      415c           pop r12
0x000032f6      415d           pop r13
0x000032f8      488d15414200.  lea rdx, str.max_bucket_length:__lu     ; 0x7540 ; "max bucket length: %lu\n"
0x000032ff      be01000000     mov esi, 1
0x00003304      31c0           xor eax, eax
0x00003306      e965e4ffff     jmp sym.imp.__fprintf_chk
0x0000330b      0f1f440000     nop dword [rax + rax]
0x00003310      4c89e8         mov rax, r13
0x00003313      4c89ea         mov rdx, r13
0x00003316      660fefc0       pxor xmm0, xmm0
0x0000331a      48d1e8         shr rax, 1
0x0000331d      83e201         and edx, 1
0x00003320      4809d0         or rax, rdx
0x00003323      4885ed         test rbp, rbp
0x00003326      f2480f2ac0     cvtsi2sd xmm0, rax
0x0000332b      f20f58c0       addsd xmm0, xmm0
0x0000332f      f20f59058142.  mulsd xmm0, qword [0x000075b8]
0x00003337      7986           jns 0x32bf                              ; ../coreutils-8.31/lib/hash.c:-138
0x00003339      4889e8         mov rax, rbp
0x0000333c      660fefc9       pxor xmm1, xmm1
0x00003340      48d1e8         shr rax, 1
0x00003343      83e501         and ebp, 1                              ; ../coreutils-8.31/lib/hash.c:-136
0x00003346      4809e8         or rax, rbp                             ; ../coreutils-8.31/lib/hash.c:-147
0x00003349      f2480f2ac8     cvtsi2sd xmm1, rax
0x0000334e      f20f58c9       addsd xmm1, xmm1
0x00003352      e971ffffff     jmp 0x32c8
0x00003357      660f1f840000.  nop word [rax + rax]
;-- hash_lookup:
0x00003360      4154           push r12
0x00003362      55             push rbp
0x00003363      4989fc         mov r12, rdi
0x00003366      53             push rbx
0x00003367      4889f5         mov rbp, rsi
0x0000336a      e8b1faffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:-127
0x0000336f      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:-123
0x00003372      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/hash.c:-127
0x00003375      7426           je 0x339d                               ; ../coreutils-8.31/lib/hash.c:-120
0x00003377      4889c3         mov rbx, rax
0x0000337a      eb07           jmp 0x3383
0x0000337c      0f1f4000       nop dword [rax]
0x00003380      488b33         mov rsi, qword [rbx]
0x00003383      4839ee         cmp rsi, rbp
0x00003386      7417           je 0x339f                               ; ../coreutils-8.31/lib/hash.c:-116
0x00003388      4889ef         mov rdi, rbp
0x0000338b      41ff542438     call qword [r12 + 0x38]                 ; ../coreutils-8.31/lib/hash.c:-120
0x00003390      84c0           test al, al
0x00003392      751c           jne 0x33b0
0x00003394      488b5b08       mov rbx, qword [rbx + 8]
0x00003398      4885db         test rbx, rbx
0x0000339b      75e3           jne 0x3380
0x0000339d      31f6           xor esi, esi
0x0000339f      5b             pop rbx
0x000033a0      4889f0         mov rax, rsi
0x000033a3      5d             pop rbp
0x000033a4      415c           pop r12
0x000033a6      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-112
0x000033a7      660f1f840000.  nop word [rax + rax]
0x000033b0      488b33         mov rsi, qword [rbx]
0x000033b3      5b             pop rbx
0x000033b4      5d             pop rbp
0x000033b5      4889f0         mov rax, rsi
0x000033b8      415c           pop r12
0x000033ba      c3             ret
0x000033bb      0f1f440000     nop dword [rax + rax]
;-- hash_get_first:
0x000033c0      48837f2000     cmp qword [rdi + 0x20], 0
0x000033c5      742c           je 0x33f3
0x000033c7      488b17         mov rdx, qword [rdi]
0x000033ca      488b4f08       mov rcx, qword [rdi + 8]
0x000033ce      4839ca         cmp rdx, rcx
0x000033d1      7325           jae 0x33f8
0x000033d3      488b02         mov rax, qword [rdx]
0x000033d6      4885c0         test rax, rax
0x000033d9      751b           jne 0x33f6
0x000033db      0f1f440000     nop dword [rax + rax]
0x000033e0      4883c210       add rdx, 0x10
0x000033e4      4839ca         cmp rdx, rcx
0x000033e7      730f           jae 0x33f8                              ; ../coreutils-8.31/lib/hash.c:-97
0x000033e9      488b02         mov rax, qword [rdx]
0x000033ec      4885c0         test rax, rax
0x000033ef      74ef           je 0x33e0
0x000033f1      f3c3           ret
0x000033f3      31c0           xor eax, eax
0x000033f5      c3             ret
0x000033f6      f3c3           ret
0x000033f8      4883ec08       sub rsp, 8
0x000033fc      e8bfe0ffff     call sym.imp.abort
0x00003401      0f1f440000     nop dword [rax + rax]
0x00003406      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_next:
0x00003410      55             push rbp
0x00003411      53             push rbx
0x00003412      4889fd         mov rbp, rdi
0x00003415      4889f3         mov rbx, rsi
0x00003418      4883ec08       sub rsp, 8
0x0000341c      e8fff9ffff     call sym.safe_hasher
0x00003421      4889c2         mov rdx, rax
0x00003424      4889c1         mov rcx, rax
0x00003427      488b02         mov rax, qword [rdx]
0x0000342a      488b5208       mov rdx, qword [rdx + 8]
0x0000342e      4839d8         cmp rax, rbx
0x00003431      7416           je 0x3449
0x00003433      0f1f440000     nop dword [rax + rax]
0x00003438      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-79
0x0000343b      7411           je 0x344e
0x0000343d      488b02         mov rax, qword [rdx]
0x00003440      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/hash.c:-97
0x00003444      4839d8         cmp rax, rbx
0x00003447      75ef           jne 0x3438
0x00003449      4885d2         test rdx, rdx
0x0000344c      752a           jne 0x3478
0x0000344e      488b5508       mov rdx, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash.c:-66
0x00003452      eb0c           jmp 0x3460
0x00003454      0f1f4000       nop dword [rax]
0x00003458      488b01         mov rax, qword [rcx]
0x0000345b      4885c0         test rax, rax
0x0000345e      750b           jne 0x346b
0x00003460      4883c110       add rcx, 0x10
0x00003464      4839ca         cmp rdx, rcx
0x00003467      77ef           ja 0x3458
0x00003469      31c0           xor eax, eax
0x0000346b      4883c408       add rsp, 8
0x0000346f      5b             pop rbx
0x00003470      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:-59
0x00003471      c3             ret
0x00003472      660f1f440000   nop word [rax + rax]
0x00003478      488b02         mov rax, qword [rdx]
0x0000347b      4883c408       add rsp, 8
0x0000347f      5b             pop rbx
0x00003480      5d             pop rbp
0x00003481      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-55
0x00003482      0f1f4000       nop dword [rax]
0x00003486      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_entries:
0x00003490      4c8b0f         mov r9, qword [rdi]
0x00003493      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-57
0x00003497      7659           jbe 0x34f2
0x00003499      4531c0         xor r8d, r8d
0x0000349c      498b09         mov rcx, qword [r9]
0x0000349f      4885c9         test rcx, rcx
0x000034a2      7439           je 0x34dd                               ; ../coreutils-8.31/lib/hash.c:-47
0x000034a4      4c39c2         cmp rdx, r8
0x000034a7      763e           jbe 0x34e7
0x000034a9      4a890cc6       mov qword [rsi + r8*8], rcx
0x000034ad      498b4908       mov rcx, qword [r9 + 8]
0x000034b1      498d4001       lea rax, [r8 + 1]
0x000034b5      4885c9         test rcx, rcx
0x000034b8      7420           je 0x34da
0x000034ba      660f1f440000   nop word [rax + rax]
0x000034c0      4839c2         cmp rdx, rax
0x000034c3      742b           je 0x34f0                               ; ../coreutils-8.31/lib/hash.c:-3
0x000034c5      4c8b01         mov r8, qword [rcx]
0x000034c8      4883c001       add rax, 1
0x000034cc      4c8944c6f8     mov qword [rsi + rax*8 - 8], r8
0x000034d1      488b4908       mov rcx, qword [rcx + 8]
0x000034d5      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/hash.c:-2
0x000034d8      75e6           jne 0x34c0
0x000034da      4989c0         mov r8, rax
0x000034dd      4983c110       add r9, 0x10
0x000034e1      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-3
0x000034e5      77b5           ja 0x349c
0x000034e7      4c89c0         mov rax, r8
0x000034ea      c3             ret
0x000034eb      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:0
0x000034f0      f3c3           ret
0x000034f2      31c0           xor eax, eax
0x000034f4      c3             ret
0x000034f5      90             nop
0x000034f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_do_for_each:
0x00003500      4157           push r15
0x00003502      4156           push r14
0x00003504      4155           push r13
0x00003506      4154           push r12
0x00003508      55             push rbp
0x00003509      53             push rbx
0x0000350a      4883ec08       sub rsp, 8
0x0000350e      4c8b37         mov r14, qword [rdi]
0x00003511      4c397708       cmp qword [rdi + 8], r14
0x00003515      764f           jbe 0x3566
0x00003517      4989d5         mov r13, rdx
0x0000351a      4989f4         mov r12, rsi
0x0000351d      4989ff         mov r15, rdi                            ; ../coreutils-8.31/lib/hash.c:46
0x00003520      31ed           xor ebp, ebp
0x00003522      498b3e         mov rdi, qword [r14]
0x00003525      4885ff         test rdi, rdi
0x00003528      7420           je 0x354a
0x0000352a      4c89f3         mov rbx, r14
0x0000352d      eb04           jmp 0x3533
0x0000352f      90             nop
0x00003530      488b3b         mov rdi, qword [rbx]
0x00003533      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/hash.c:37
0x00003536      41ffd4         call r12
0x00003539      84c0           test al, al
0x0000353b      7417           je 0x3554
0x0000353d      488b5b08       mov rbx, qword [rbx + 8]
0x00003541      4883c501       add rbp, 1
0x00003545      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/hash.c:33
0x00003548      75e6           jne 0x3530
0x0000354a      4983c610       add r14, 0x10
0x0000354e      4d397708       cmp qword [r15 + 8], r14
0x00003552      77ce           ja 0x3522
0x00003554      4883c408       add rsp, 8
0x00003558      4889e8         mov rax, rbp
0x0000355b      5b             pop rbx
0x0000355c      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:38
0x0000355d      415c           pop r12
0x0000355f      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:37
0x00003561      415e           pop r14
0x00003563      415f           pop r15
0x00003565      c3             ret
0x00003566      31ed           xor ebp, ebp
0x00003568      ebea           jmp 0x3554                              ; ../coreutils-8.31/lib/hash.c:41
0x0000356a      660f1f440000   nop word [rax + rax]
;-- hash_string:
0x00003570      0fb60f         movzx ecx, byte [rdi]
0x00003573      31d2           xor edx, edx
0x00003575      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:43
0x00003577      7424           je 0x359d
0x00003579      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/hash.c:44
0x00003580      4889d0         mov rax, rdx
0x00003583      4883c701       add rdi, 1
0x00003587      48c1e005       shl rax, 5
0x0000358b      4829d0         sub rax, rdx
0x0000358e      31d2           xor edx, edx
0x00003590      4801c8         add rax, rcx
0x00003593      0fb60f         movzx ecx, byte [rdi]
0x00003596      48f7f6         div rsi
0x00003599      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:-14
0x0000359b      75e3           jne 0x3580
0x0000359d      4889d0         mov rax, rdx
0x000035a0      c3             ret
0x000035a1      0f1f440000     nop dword [rax + rax]
0x000035a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_reset_tuning:
0x000035b0      48b800000000.  movabs rax, 0x3f80000000000000          ; 4575657221408423936
0x000035ba      c6471000       mov byte [rdi + 0x10], 0                ; ../coreutils-8.31/lib/hash.c:-70
0x000035be      488907         mov qword [rdi], rax
0x000035c1      48b8cdcc4c3f.  movabs rax, 0x3fb4fdf43f4ccccd
0x000035cb      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/hash.c:-65
0x000035cf      c3             ret
;-- hash_initialize:
0x000035d0      4157           push r15
0x000035d2      4156           push r14
0x000035d4      488d0525f8ff.  lea rax, sym.raw_hasher                 ; 0x2e00 ; "H\x89\xf81\xd2H\xc1\xc8\x03H\xf7\xf6H\x89\xd0\xc3H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x000035db      4155           push r13
0x000035dd      4154           push r12
0x000035df      4989d4         mov r12, rdx
0x000035e2      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:-61
0x000035e3      53             push rbx
0x000035e4      4989cd         mov r13, rcx
0x000035e7      4889fd         mov rbp, rdi
0x000035ea      bf50000000     mov edi, 0x50                           ; 'P'
0x000035ef      4989f7         mov r15, rsi
0x000035f2      4883ec08       sub rsp, 8
0x000035f6      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-52
0x000035f9      4d89c6         mov r14, r8
0x000035fc      4c0f44e0       cmove r12, rax
0x00003600      488d0509f8ff.  lea rax, sym.raw_comparator             ; 0x2e10 ; "H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x00003607      4885c9         test rcx, rcx
0x0000360a      4c0f44e8       cmove r13, rax
0x0000360e      e88de0ffff     call sym.imp.malloc
0x00003613      4885c0         test rax, rax
0x00003616      4889c3         mov rbx, rax
0x00003619      0f84ab000000   je 0x36ca
0x0000361f      4d85ff         test r15, r15
0x00003622      488d7828       lea rdi, [rax + 0x28]
0x00003626      0f84b4000000   je 0x36e0
0x0000362c      4c897828       mov qword [rax + 0x28], r15
0x00003630      e83bf9ffff     call sym.check_tuning.isra.0
0x00003635      84c0           test al, al
0x00003637      0f8483000000   je 0x36c0
0x0000363d      41807f1000     cmp byte [r15 + 0x10], 0
0x00003642      0f84f8000000   je 0x3740
0x00003648      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:-145
0x0000364b      e810f7ffff     call sym.next_prime
0x00003650      ba08000000     mov edx, 8
0x00003655      4889c5         mov rbp, rax
0x00003658      31c9           xor ecx, ecx
0x0000365a      4889d0         mov rax, rdx
0x0000365d      48f7e5         mul rbp
0x00003660      0f8014010000   jo 0x377a
0x00003666      4885c0         test rax, rax
0x00003669      7855           js 0x36c0
0x0000366b      4885c9         test rcx, rcx
0x0000366e      7550           jne 0x36c0
0x00003670      4885ed         test rbp, rbp
0x00003673      48896b10       mov qword [rbx + 0x10], rbp
0x00003677      7447           je 0x36c0
0x00003679      be10000000     mov esi, 0x10
0x0000367e      4889ef         mov rdi, rbp
0x00003681      e8cadfffff     call sym.imp.calloc
0x00003686      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:-197
0x00003689      488903         mov qword [rbx], rax
0x0000368c      7432           je 0x36c0
0x0000368e      48c1e504       shl rbp, 4
0x00003692      48c743180000.  mov qword [rbx + 0x18], 0
0x0000369a      48c743200000.  mov qword [rbx + 0x20], 0
0x000036a2      4801c5         add rbp, rax
0x000036a5      4c896330       mov qword [rbx + 0x30], r12
0x000036a9      4c896b38       mov qword [rbx + 0x38], r13
0x000036ad      48896b08       mov qword [rbx + 8], rbp
0x000036b1      4c897340       mov qword [rbx + 0x40], r14
0x000036b5      48c743480000.  mov qword [rbx + 0x48], 0
0x000036bd      eb0b           jmp 0x36ca
0x000036bf      90             nop
0x000036c0      4889df         mov rdi, rbx
0x000036c3      31db           xor ebx, ebx
0x000036c5      e8e6ddffff     call sym.imp.free
0x000036ca      4883c408       add rsp, 8
0x000036ce      4889d8         mov rax, rbx
0x000036d1      5b             pop rbx
0x000036d2      5d             pop rbp
0x000036d3      415c           pop r12
0x000036d5      415d           pop r13
0x000036d7      415e           pop r14
0x000036d9      415f           pop r15
0x000036db      c3             ret
0x000036dc      0f1f4000       nop dword [rax]
0x000036e0      488d05993e00.  lea rax, obj.default_tuning             ; 0x7580
0x000036e7      48894328       mov qword [rbx + 0x28], rax             ; ../coreutils-8.31/lib/hash.c:-199
0x000036eb      e880f8ffff     call sym.check_tuning.isra.0
0x000036f0      84c0           test al, al
0x000036f2      f30f100dae3e.  movss xmm1, dword [0x000075a8]          ; [0x75a8:4]=0x3f4ccccd
0x000036fa      74c4           je 0x36c0
0x000036fc      4885ed         test rbp, rbp
0x000036ff      784a           js 0x374b
0x00003701      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-168
0x00003705      f3480f2ac5     cvtsi2ss xmm0, rbp
0x0000370a      f30f5ec1       divss xmm0, xmm1
0x0000370e      0f2e05973e00.  ucomiss xmm0, dword [0x000075ac]
0x00003715      73a9           jae 0x36c0
0x00003717      0f2e05923e00.  ucomiss xmm0, dword [0x000075b0]
0x0000371e      7250           jb 0x3770
0x00003720      f30f5c05883e.  subss xmm0, dword [0x000075b0]
0x00003728      48b800000000.  movabs rax, 0x8000000000000000
0x00003732      f3480f2ce8     cvttss2si rbp, xmm0
0x00003737      4831c5         xor rbp, rax
0x0000373a      e909ffffff     jmp 0x3648
0x0000373f      90             nop
0x00003740      4885ed         test rbp, rbp
0x00003743      f3410f104f08   movss xmm1, dword [r15 + 8]
0x00003749      79b6           jns 0x3701                              ; ../coreutils-8.31/lib/hash.c:-146
0x0000374b      4889e8         mov rax, rbp
0x0000374e      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-147
0x00003752      48d1e8         shr rax, 1
0x00003755      83e501         and ebp, 1
0x00003758      4809e8         or rax, rbp
0x0000375b      f3480f2ac0     cvtsi2ss xmm0, rax
0x00003760      f30f58c0       addss xmm0, xmm0
0x00003764      eba4           jmp 0x370a
0x00003766      662e0f1f8400.  nop word cs:[rax + rax]
0x00003770      f3480f2ce8     cvttss2si rbp, xmm0
0x00003775      e9cefeffff     jmp 0x3648
0x0000377a      b901000000     mov ecx, 1
0x0000377f      e9e2feffff     jmp 0x3666
0x00003784      6690           nop
0x00003786      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/hash.c:-130
;-- hash_clear:
0x00003790      4154           push r12
0x00003792      55             push rbp
0x00003793      4889fd         mov rbp, rdi
0x00003796      53             push rbx
0x00003797      4c8b27         mov r12, qword [rdi]                    ; ../coreutils-8.31/lib/hash.c:-134
0x0000379a      4c3b6708       cmp r12, qword [rdi + 8]
0x0000379e      736b           jae 0x380b
0x000037a0      49833c2400     cmp qword [r12], 0
0x000037a5      745a           je 0x3801
0x000037a7      498b5c2408     mov rbx, qword [r12 + 8]
0x000037ac      488b4540       mov rax, qword [rbp + 0x40]
0x000037b0      4885db         test rbx, rbx
0x000037b3      7430           je 0x37e5
0x000037b5      0f1f00         nop dword [rax]
0x000037b8      4885c0         test rax, rax
0x000037bb      7409           je 0x37c6
0x000037bd      488b3b         mov rdi, qword [rbx]
0x000037c0      ffd0           call rax
0x000037c2      488b4540       mov rax, qword [rbp + 0x40]
0x000037c6      488b5308       mov rdx, qword [rbx + 8]
0x000037ca      488b4d48       mov rcx, qword [rbp + 0x48]
0x000037ce      48c703000000.  mov qword [rbx], 0
0x000037d5      4885d2         test rdx, rdx
0x000037d8      48894b08       mov qword [rbx + 8], rcx
0x000037dc      48895d48       mov qword [rbp + 0x48], rbx
0x000037e0      4889d3         mov rbx, rdx
0x000037e3      75d3           jne 0x37b8
0x000037e5      4885c0         test rax, rax
0x000037e8      7406           je 0x37f0
0x000037ea      498b3c24       mov rdi, qword [r12]
0x000037ee      ffd0           call rax
0x000037f0      49c704240000.  mov qword [r12], 0
0x000037f8      49c744240800.  mov qword [r12 + 8], 0
0x00003801      4983c410       add r12, 0x10
0x00003805      4c396508       cmp qword [rbp + 8], r12                ; ../coreutils-8.31/lib/hash.c:-310
0x00003809      7795           ja 0x37a0
0x0000380b      48c745180000.  mov qword [rbp + 0x18], 0
0x00003813      48c745200000.  mov qword [rbp + 0x20], 0
0x0000381b      5b             pop rbx
0x0000381c      5d             pop rbp
0x0000381d      415c           pop r12
0x0000381f      c3             ret
;-- hash_free:
0x00003820      4154           push r12
0x00003822      55             push rbp
0x00003823      4989fc         mov r12, rdi
0x00003826      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:-307
0x00003827      48837f4000     cmp qword [rdi + 0x40], 0
0x0000382c      488b2f         mov rbp, qword [rdi]
0x0000382f      488b4708       mov rax, qword [rdi + 8]
0x00003833      744e           je 0x3883                               ; ../coreutils-8.31/lib/hash.c:-305
0x00003835      48837f2000     cmp qword [rdi + 0x20], 0
0x0000383a      7447           je 0x3883
0x0000383c      4839c5         cmp rbp, rax
0x0000383f      737b           jae 0x38bc
0x00003841      0f1f80000000.  nop dword [rax]
0x00003848      488b7d00       mov rdi, qword [rbp]
0x0000384c      4885ff         test rdi, rdi
0x0000384f      7425           je 0x3876
0x00003851      4889eb         mov rbx, rbp
0x00003854      eb0d           jmp 0x3863
0x00003856      662e0f1f8400.  nop word cs:[rax + rax]
0x00003860      488b3b         mov rdi, qword [rbx]
0x00003863      41ff542440     call qword [r12 + 0x40]                 ; segment.PHDR
0x00003868      488b5b08       mov rbx, qword [rbx + 8]
0x0000386c      4885db         test rbx, rbx
0x0000386f      75ef           jne 0x3860
0x00003871      498b442408     mov rax, qword [r12 + 8]
0x00003876      4883c510       add rbp, 0x10
0x0000387a      4839e8         cmp rax, rbp
0x0000387d      77c9           ja 0x3848
0x0000387f      498b2c24       mov rbp, qword [r12]
0x00003883      4839c5         cmp rbp, rax
0x00003886      7334           jae 0x38bc
0x00003888      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:93
0x00003890      488b7d08       mov rdi, qword [rbp + 8]
0x00003894      4885ff         test rdi, rdi
0x00003897      7418           je 0x38b1
0x00003899      0f1f80000000.  nop dword [rax]
0x000038a0      488b5f08       mov rbx, qword [rdi + 8]
0x000038a4      e807dcffff     call sym.imp.free                       ; ../coreutils-8.31/lib/hash.c:98
0x000038a9      4885db         test rbx, rbx
0x000038ac      4889df         mov rdi, rbx
0x000038af      75ef           jne 0x38a0
0x000038b1      4883c510       add rbp, 0x10                           ; ../coreutils-8.31/lib/hash.c:99
0x000038b5      49396c2408     cmp qword [r12 + 8], rbp
0x000038ba      77d4           ja 0x3890
0x000038bc      498b7c2448     mov rdi, qword [r12 + 0x48]
0x000038c1      4885ff         test rdi, rdi
0x000038c4      741b           je 0x38e1
0x000038c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000038d0      488b5f08       mov rbx, qword [rdi + 8]
0x000038d4      e8d7dbffff     call sym.imp.free
0x000038d9      4885db         test rbx, rbx
0x000038dc      4889df         mov rdi, rbx
0x000038df      75ef           jne 0x38d0
0x000038e1      498b3c24       mov rdi, qword [r12]
0x000038e5      e8c6dbffff     call sym.imp.free
0x000038ea      5b             pop rbx
0x000038eb      4c89e7         mov rdi, r12
0x000038ee      5d             pop rbp
0x000038ef      415c           pop r12
0x000038f1      e9badbffff     jmp sym.imp.free                        ; ../coreutils-8.31/lib/hash.c:107
0x000038f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_rehash:
0x00003900      4154           push r12
0x00003902      55             push rbp
0x00003903      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:108
0x00003906      53             push rbx
0x00003907      4883ec60       sub rsp, 0x60
0x0000390b      4c8b6728       mov r12, qword [rdi + 0x28]
0x0000390f      64488b042528.  mov rax, qword fs:[0x28]
0x00003918      4889442458     mov qword [rsp + 0x58], rax
0x0000391d      31c0           xor eax, eax
0x0000391f      41807c241000   cmp byte [r12 + 0x10], 0
0x00003925      7551           jne 0x3978
0x00003927      4885f6         test rsi, rsi
0x0000392a      0f8878010000   js 0x3aa8
0x00003930      660fefc0       pxor xmm0, xmm0
0x00003934      f3480f2ac6     cvtsi2ss xmm0, rsi                      ; ../coreutils-8.31/lib/hash.c:156
0x00003939      f3410f5e4424.  divss xmm0, dword [r12 + 8]
0x00003940      0f2e05653c00.  ucomiss xmm0, dword [0x000075ac]
0x00003947      0f8333010000   jae 0x3a80
0x0000394d      0f2e055c3c00.  ucomiss xmm0, dword [0x000075b0]
0x00003954      0f8276010000   jb 0x3ad0
0x0000395a      f30f5c054e3c.  subss xmm0, dword [0x000075b0]          ; ../coreutils-8.31/lib/hash.c:161
0x00003962      48b800000000.  movabs rax, 0x8000000000000000
0x0000396c      f3480f2cf0     cvttss2si rsi, xmm0
0x00003971      4831c6         xor rsi, rax                            ; ../coreutils-8.31/lib/bitrotate.h:35
0x00003974      0f1f4000       nop dword [rax]
0x00003978      4889f7         mov rdi, rsi
0x0000397b      e8e0f3ffff     call sym.next_prime
0x00003980      ba08000000     mov edx, 8
0x00003985      4889c3         mov rbx, rax
0x00003988      31c9           xor ecx, ecx
0x0000398a      4889d0         mov rax, rdx
0x0000398d      48f7e3         mul rbx
0x00003990      0f8099010000   jo 0x3b2f
0x00003996      4885c0         test rax, rax
0x00003999      b801000000     mov eax, 1
0x0000399e      480f48c8       cmovs rcx, rax
0x000039a2      4885db         test rbx, rbx
0x000039a5      0f84d5000000   je 0x3a80
0x000039ab      83e101         and ecx, 1
0x000039ae      0f85cc000000   jne 0x3a80
0x000039b4      48395d10       cmp qword [rbp + 0x10], rbx
0x000039b8      0f8422010000   je 0x3ae0
0x000039be      be10000000     mov esi, 0x10
0x000039c3      4889df         mov rdi, rbx
0x000039c6      e885dcffff     call sym.imp.calloc
0x000039cb      4885c0         test rax, rax
0x000039ce      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/bitrotate.h:-72
0x000039d2      0f84a8000000   je 0x3a80
0x000039d8      48895c2410     mov qword [rsp + 0x10], rbx
0x000039dd      48c1e304       shl rbx, 4
0x000039e1      4c89642428     mov qword [rsp + 0x28], r12
0x000039e6      4801c3         add rbx, rax
0x000039e9      488b4530       mov rax, qword [rbp + 0x30]
0x000039ed      4989e4         mov r12, rsp
0x000039f0      31d2           xor edx, edx
0x000039f2      4889ee         mov rsi, rbp
0x000039f5      4c89e7         mov rdi, r12
0x000039f8      48895c2408     mov qword [rsp + 8], rbx
0x000039fd      48c744241800.  mov qword [rsp + 0x18], 0
0x00003a06      4889442430     mov qword [rsp + 0x30], rax
0x00003a0b      488b4538       mov rax, qword [rbp + 0x38]
0x00003a0f      48c744242000.  mov qword [rsp + 0x20], 0
0x00003a18      4889442438     mov qword [rsp + 0x38], rax
0x00003a1d      488b4540       mov rax, qword [rbp + 0x40]
0x00003a21      4889442440     mov qword [rsp + 0x40], rax
0x00003a26      488b4548       mov rax, qword [rbp + 0x48]
0x00003a2a      4889442448     mov qword [rsp + 0x48], rax
0x00003a2f      e8bcf5ffff     call sym.transfer_entries
0x00003a34      84c0           test al, al
0x00003a36      89c3           mov ebx, eax
0x00003a38      0f85b2000000   jne 0x3af0
0x00003a3e      488b442448     mov rax, qword [rsp + 0x48]
0x00003a43      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/bitrotate.h:-53
0x00003a48      4c89e6         mov rsi, r12
0x00003a4b      4889ef         mov rdi, rbp
0x00003a4e      48894548       mov qword [rbp + 0x48], rax
0x00003a52      e899f5ffff     call sym.transfer_entries
0x00003a57      84c0           test al, al
0x00003a59      0f84da000000   je 0x3b39
0x00003a5f      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/bitrotate.h:-43
0x00003a61      4c89e6         mov rsi, r12
0x00003a64      4889ef         mov rdi, rbp
0x00003a67      e884f5ffff     call sym.transfer_entries
0x00003a6c      84c0           test al, al
0x00003a6e      0f84c5000000   je 0x3b39
0x00003a74      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/bitrotate.h:-38
0x00003a78      e833daffff     call sym.imp.free
0x00003a7d      eb03           jmp 0x3a82
0x00003a7f      90             nop
0x00003a80      31db           xor ebx, ebx
0x00003a82      488b4c2458     mov rcx, qword [rsp + 0x58]
0x00003a87      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003a90      89d8           mov eax, ebx
0x00003a92      0f8592000000   jne 0x3b2a
0x00003a98      4883c460       add rsp, 0x60
0x00003a9c      5b             pop rbx
0x00003a9d      5d             pop rbp
0x00003a9e      415c           pop r12
0x00003aa0      c3             ret
0x00003aa1      0f1f80000000.  nop dword [rax]
0x00003aa8      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/bitrotate.h:-37
0x00003aab      660fefc0       pxor xmm0, xmm0
0x00003aaf      48d1e8         shr rax, 1
0x00003ab2      83e601         and esi, 1
0x00003ab5      4809f0         or rax, rsi
0x00003ab8      f3480f2ac0     cvtsi2ss xmm0, rax
0x00003abd      f30f58c0       addss xmm0, xmm0
0x00003ac1      e973feffff     jmp 0x3939
0x00003ac6      662e0f1f8400.  nop word cs:[rax + rax]
0x00003ad0      f3480f2cf0     cvttss2si rsi, xmm0
0x00003ad5      e99efeffff     jmp 0x3978
0x00003ada      660f1f440000   nop word [rax + rax]
0x00003ae0      bb01000000     mov ebx, 1
0x00003ae5      eb9b           jmp 0x3a82
0x00003ae7      660f1f840000.  nop word [rax + rax]
0x00003af0      488b7d00       mov rdi, qword [rbp]
0x00003af4      e8b7d9ffff     call sym.imp.free
0x00003af9      488b0424       mov rax, qword [rsp]
0x00003afd      48894500       mov qword [rbp], rax
0x00003b01      488b442408     mov rax, qword [rsp + 8]
0x00003b06      48894508       mov qword [rbp + 8], rax
0x00003b0a      488b442410     mov rax, qword [rsp + 0x10]
0x00003b0f      48894510       mov qword [rbp + 0x10], rax
0x00003b13      488b442418     mov rax, qword [rsp + 0x18]
0x00003b18      48894518       mov qword [rbp + 0x18], rax
0x00003b1c      488b442448     mov rax, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/bitrotate.h:-12
0x00003b21      48894548       mov qword [rbp + 0x48], rax
0x00003b25      e958ffffff     jmp 0x3a82
0x00003b2a      e861daffff     call sym.imp.__stack_chk_fail
0x00003b2f      b901000000     mov ecx, 1
0x00003b34      e95dfeffff     jmp 0x3996
0x00003b39      e882d9ffff     call sym.imp.abort
0x00003b3e      6690           nop
;-- hash_insert_if_absent:
0x00003b40      4155           push r13
0x00003b42      4154           push r12
0x00003b44      55             push rbp
0x00003b45      53             push rbx
0x00003b46      4883ec18       sub rsp, 0x18
0x00003b4a      64488b042528.  mov rax, qword fs:[0x28]
0x00003b53      4889442408     mov qword [rsp + 8], rax
0x00003b58      31c0           xor eax, eax
0x00003b5a      4885f6         test rsi, rsi
0x00003b5d      0f84ba010000   je 0x3d1d
0x00003b63      4989e4         mov r12, rsp
0x00003b66      31c9           xor ecx, ecx
0x00003b68      4989d5         mov r13, rdx
0x00003b6b      4c89e2         mov rdx, r12
0x00003b6e      4889fb         mov rbx, rdi
0x00003b71      4889f5         mov rbp, rsi
0x00003b74      e8d7f2ffff     call sym.hash_find_entry
0x00003b79      4885c0         test rax, rax
0x00003b7c      4889c2         mov rdx, rax
0x00003b7f      742f           je 0x3bb0
0x00003b81      31c0           xor eax, eax
0x00003b83      4d85ed         test r13, r13
0x00003b86      7404           je 0x3b8c
0x00003b88      49895500       mov qword [r13], rdx
0x00003b8c      488b4c2408     mov rcx, qword [rsp + 8]
0x00003b91      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003b9a      0f851f020000   jne 0x3dbf
0x00003ba0      4883c418       add rsp, 0x18
0x00003ba4      5b             pop rbx
0x00003ba5      5d             pop rbp
0x00003ba6      415c           pop r12
0x00003ba8      415d           pop r13
0x00003baa      c3             ret
0x00003bab      0f1f440000     nop dword [rax + rax]
0x00003bb0      488b4318       mov rax, qword [rbx + 0x18]
0x00003bb4      4885c0         test rax, rax
0x00003bb7      7877           js 0x3c30
0x00003bb9      660fefc9       pxor xmm1, xmm1
0x00003bbd      488b5328       mov rdx, qword [rbx + 0x28]
0x00003bc1      f3480f2ac8     cvtsi2ss xmm1, rax
0x00003bc6      488b4310       mov rax, qword [rbx + 0x10]
0x00003bca      4885c0         test rax, rax
0x00003bcd      0f8887000000   js 0x3c5a
0x00003bd3      660fefc0       pxor xmm0, xmm0
0x00003bd7      f3480f2ac0     cvtsi2ss xmm0, rax
0x00003bdc      f30f594208     mulss xmm0, dword [rdx + 8]             ; ../coreutils-8.31/lib/bitrotate.h:15
0x00003be1      0f2ec8         ucomiss xmm1, xmm0
0x00003be4      0f8796000000   ja 0x3c80
0x00003bea      4c8b2424       mov r12, qword [rsp]
0x00003bee      49833c2400     cmp qword [r12], 0
0x00003bf3      0f842f010000   je 0x3d28
0x00003bf9      488b4348       mov rax, qword [rbx + 0x48]
0x00003bfd      4885c0         test rax, rax
0x00003c00      0f843a010000   je 0x3d40
0x00003c06      488b5008       mov rdx, qword [rax + 8]
0x00003c0a      48895348       mov qword [rbx + 0x48], rdx
0x00003c0e      498b542408     mov rdx, qword [r12 + 8]
0x00003c13      488928         mov qword [rax], rbp
0x00003c16      48895008       mov qword [rax + 8], rdx
0x00003c1a      4989442408     mov qword [r12 + 8], rax
0x00003c1f      b801000000     mov eax, 1
0x00003c24      4883432001     add qword [rbx + 0x20], 1
0x00003c29      e95effffff     jmp 0x3b8c
0x00003c2e      6690           nop
0x00003c30      4889c2         mov rdx, rax
0x00003c33      660fefc9       pxor xmm1, xmm1
0x00003c37      83e001         and eax, 1
0x00003c3a      48d1ea         shr rdx, 1
0x00003c3d      4809c2         or rdx, rax
0x00003c40      488b4310       mov rax, qword [rbx + 0x10]
0x00003c44      f3480f2aca     cvtsi2ss xmm1, rdx                      ; ../coreutils-8.31/lib/bitrotate.h:-3
0x00003c49      488b5328       mov rdx, qword [rbx + 0x28]
0x00003c4d      4885c0         test rax, rax
0x00003c50      f30f58c9       addss xmm1, xmm1
0x00003c54      0f8979ffffff   jns 0x3bd3
0x00003c5a      4889c1         mov rcx, rax
0x00003c5d      660fefc0       pxor xmm0, xmm0
0x00003c61      48d1e9         shr rcx, 1
0x00003c64      83e001         and eax, 1                              ; ../coreutils-8.31/lib/bitrotate.h:1
0x00003c67      4809c1         or rcx, rax
0x00003c6a      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00003c6f      f30f58c0       addss xmm0, xmm0
0x00003c73      e964ffffff     jmp 0x3bdc
0x00003c78      0f1f84000000.  nop dword [rax + rax]
0x00003c80      488d7b28       lea rdi, [rbx + 0x28]
0x00003c84      e8e7f2ffff     call sym.check_tuning.isra.0
0x00003c89      488b4310       mov rax, qword [rbx + 0x10]
0x00003c8d      488b5328       mov rdx, qword [rbx + 0x28]
0x00003c91      4885c0         test rax, rax
0x00003c94      f30f105208     movss xmm2, dword [rdx + 8]
0x00003c99      0f88c1000000   js 0x3d60
0x00003c9f      660fefc0       pxor xmm0, xmm0
0x00003ca3      f3480f2ac0     cvtsi2ss xmm0, rax
0x00003ca8      488b4318       mov rax, qword [rbx + 0x18]
0x00003cac      4885c0         test rax, rax
0x00003caf      0f88cb000000   js 0x3d80
0x00003cb5      660fefc9       pxor xmm1, xmm1
0x00003cb9      f3480f2ac8     cvtsi2ss xmm1, rax
0x00003cbe      0f28da         movaps xmm3, xmm2
0x00003cc1      f30f59d8       mulss xmm3, xmm0
0x00003cc5      0f2ecb         ucomiss xmm1, xmm3
0x00003cc8      0f861cffffff   jbe 0x3bea
0x00003cce      807a1000       cmp byte [rdx + 0x10], 0
0x00003cd2      f30f59420c     mulss xmm0, dword [rdx + 0xc]
0x00003cd7      7504           jne 0x3cdd
0x00003cd9      f30f59c2       mulss xmm0, xmm2
0x00003cdd      0f2e05c83800.  ucomiss xmm0, dword [0x000075ac]
0x00003ce4      736d           jae 0x3d53
0x00003ce6      0f2e05c33800.  ucomiss xmm0, dword [0x000075b0]
0x00003ced      0f83ad000000   jae 0x3da0
0x00003cf3      f3480f2cf0     cvttss2si rsi, xmm0
0x00003cf8      4889df         mov rdi, rbx
0x00003cfb      e800fcffff     call sym.hash_rehash
0x00003d00      84c0           test al, al
0x00003d02      744f           je 0x3d53
0x00003d04      31c9           xor ecx, ecx
0x00003d06      4c89e2         mov rdx, r12
0x00003d09      4889ee         mov rsi, rbp
0x00003d0c      4889df         mov rdi, rbx
0x00003d0f      e83cf1ffff     call sym.hash_find_entry
0x00003d14      4885c0         test rax, rax
0x00003d17      0f84cdfeffff   je 0x3bea
0x00003d1d      e89ed7ffff     call sym.imp.abort
0x00003d22      660f1f440000   nop word [rax + rax]
0x00003d28      49892c24       mov qword [r12], rbp
0x00003d2c      b801000000     mov eax, 1
0x00003d31      4883432001     add qword [rbx + 0x20], 1
0x00003d36      4883431801     add qword [rbx + 0x18], 1
0x00003d3b      e94cfeffff     jmp 0x3b8c
0x00003d40      bf10000000     mov edi, 0x10
0x00003d45      e856d9ffff     call sym.imp.malloc
0x00003d4a      4885c0         test rax, rax
0x00003d4d      0f85bbfeffff   jne 0x3c0e
0x00003d53      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00003d58      e92ffeffff     jmp 0x3b8c
0x00003d5d      0f1f00         nop dword [rax]
0x00003d60      4889c1         mov rcx, rax
0x00003d63      660fefc0       pxor xmm0, xmm0
0x00003d67      48d1e9         shr rcx, 1
0x00003d6a      83e001         and eax, 1
0x00003d6d      4809c1         or rcx, rax
0x00003d70      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00003d75      f30f58c0       addss xmm0, xmm0
0x00003d79      e92affffff     jmp 0x3ca8
0x00003d7e      6690           nop
0x00003d80      4889c1         mov rcx, rax
0x00003d83      660fefc9       pxor xmm1, xmm1
0x00003d87      48d1e9         shr rcx, 1
0x00003d8a      83e001         and eax, 1
0x00003d8d      4809c1         or rcx, rax
0x00003d90      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00003d95      f30f58c9       addss xmm1, xmm1
0x00003d99      e920ffffff     jmp 0x3cbe
0x00003d9e      6690           nop
0x00003da0      f30f5c050838.  subss xmm0, dword [0x000075b0]
0x00003da8      48b800000000.  movabs rax, 0x8000000000000000
0x00003db2      f3480f2cf0     cvttss2si rsi, xmm0
0x00003db7      4831c6         xor rsi, rax
0x00003dba      e939ffffff     jmp 0x3cf8
0x00003dbf      e8ccd7ffff     call sym.imp.__stack_chk_fail
0x00003dc4      6690           nop
0x00003dc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_insert:
0x00003dd0      53             push rbx
0x00003dd1      4889f3         mov rbx, rsi
0x00003dd4      4883ec10       sub rsp, 0x10
0x00003dd8      4889e2         mov rdx, rsp
0x00003ddb      64488b042528.  mov rax, qword fs:[0x28]
0x00003de4      4889442408     mov qword [rsp + 8], rax
0x00003de9      31c0           xor eax, eax
0x00003deb      e850fdffff     call sym.hash_insert_if_absent
0x00003df0      83f8ff         cmp eax, 0xffffffff
0x00003df3      742b           je 0x3e20
0x00003df5      85c0           test eax, eax
0x00003df7      7504           jne 0x3dfd
0x00003df9      488b1c24       mov rbx, qword [rsp]
0x00003dfd      488b4c2408     mov rcx, qword [rsp + 8]
0x00003e02      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003e0b      4889d8         mov rax, rbx
0x00003e0e      7514           jne 0x3e24
0x00003e10      4883c410       add rsp, 0x10
0x00003e14      5b             pop rbx
0x00003e15      c3             ret
0x00003e16      662e0f1f8400.  nop word cs:[rax + rax]
0x00003e20      31db           xor ebx, ebx
0x00003e22      ebd9           jmp 0x3dfd
0x00003e24      e867d7ffff     call sym.imp.__stack_chk_fail
0x00003e29      0f1f80000000.  nop dword [rax]
;-- hash_delete:
0x00003e30      4154           push r12
0x00003e32      55             push rbp
0x00003e33      b901000000     mov ecx, 1
0x00003e38      53             push rbx
0x00003e39      4889fb         mov rbx, rdi
0x00003e3c      4883ec10       sub rsp, 0x10
0x00003e40      4889e2         mov rdx, rsp
0x00003e43      64488b042528.  mov rax, qword fs:[0x28]
0x00003e4c      4889442408     mov qword [rsp + 8], rax
0x00003e51      31c0           xor eax, eax
0x00003e53      e8f8efffff     call sym.hash_find_entry
0x00003e58      4885c0         test rax, rax
0x00003e5b      4889c5         mov rbp, rax
0x00003e5e      740f           je 0x3e6f
0x00003e60      488b0424       mov rax, qword [rsp]
0x00003e64      48836b2001     sub qword [rbx + 0x20], 1
0x00003e69      48833800       cmp qword [rax], 0
0x00003e6d      7421           je 0x3e90
0x00003e6f      488b4c2408     mov rcx, qword [rsp + 8]
0x00003e74      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003e7d      4889e8         mov rax, rbp
0x00003e80      0f85a8010000   jne 0x402e
0x00003e86      4883c410       add rsp, 0x10
0x00003e8a      5b             pop rbx
0x00003e8b      5d             pop rbp
0x00003e8c      415c           pop r12
0x00003e8e      c3             ret
0x00003e8f      90             nop
0x00003e90      488b4318       mov rax, qword [rbx + 0x18]
0x00003e94      4883e801       sub rax, 1
0x00003e98      4885c0         test rax, rax
0x00003e9b      48894318       mov qword [rbx + 0x18], rax
0x00003e9f      0f88fb000000   js 0x3fa0
0x00003ea5      660fefc0       pxor xmm0, xmm0
0x00003ea9      f3480f2ac0     cvtsi2ss xmm0, rax
0x00003eae      488b4310       mov rax, qword [rbx + 0x10]
0x00003eb2      488b5328       mov rdx, qword [rbx + 0x28]
0x00003eb6      4885c0         test rax, rax
0x00003eb9      0f88c1000000   js 0x3f80
0x00003ebf      660fefc9       pxor xmm1, xmm1
0x00003ec3      f3480f2ac8     cvtsi2ss xmm1, rax
0x00003ec8      f30f590a       mulss xmm1, dword [rdx]
0x00003ecc      0f2ec8         ucomiss xmm1, xmm0
0x00003ecf      769e           jbe 0x3e6f
0x00003ed1      488d7b28       lea rdi, [rbx + 0x28]
0x00003ed5      e896f0ffff     call sym.check_tuning.isra.0
0x00003eda      488b4310       mov rax, qword [rbx + 0x10]
0x00003ede      488b5328       mov rdx, qword [rbx + 0x28]
0x00003ee2      4885c0         test rax, rax
0x00003ee5      0f8825010000   js 0x4010
0x00003eeb      660fefc0       pxor xmm0, xmm0
0x00003eef      f3480f2ac0     cvtsi2ss xmm0, rax
0x00003ef4      488b4318       mov rax, qword [rbx + 0x18]
0x00003ef8      4885c0         test rax, rax
0x00003efb      0f88ef000000   js 0x3ff0
0x00003f01      660fefc9       pxor xmm1, xmm1
0x00003f05      f3480f2ac8     cvtsi2ss xmm1, rax
0x00003f0a      f30f1012       movss xmm2, dword [rdx]
0x00003f0e      f30f59d0       mulss xmm2, xmm0
0x00003f12      0f2ed1         ucomiss xmm2, xmm1
0x00003f15      0f8654ffffff   jbe 0x3e6f
0x00003f1b      807a1000       cmp byte [rdx + 0x10], 0
0x00003f1f      f30f594204     mulss xmm0, dword [rdx + 4]
0x00003f24      0f84b6000000   je 0x3fe0
0x00003f2a      0f2e057f3600.  ucomiss xmm0, dword [0x000075b0]
0x00003f31      0f8389000000   jae 0x3fc0
0x00003f37      f3480f2cf0     cvttss2si rsi, xmm0
0x00003f3c      4889df         mov rdi, rbx
0x00003f3f      e8bcf9ffff     call sym.hash_rehash
0x00003f44      84c0           test al, al
0x00003f46      0f8523ffffff   jne 0x3e6f
0x00003f4c      488b7b48       mov rdi, qword [rbx + 0x48]
0x00003f50      4885ff         test rdi, rdi
0x00003f53      7414           je 0x3f69
0x00003f55      0f1f00         nop dword [rax]
0x00003f58      4c8b6708       mov r12, qword [rdi + 8]
0x00003f5c      e84fd5ffff     call sym.imp.free
0x00003f61      4d85e4         test r12, r12
0x00003f64      4c89e7         mov rdi, r12
0x00003f67      75ef           jne 0x3f58
0x00003f69      48c743480000.  mov qword [rbx + 0x48], 0
0x00003f71      e9f9feffff     jmp 0x3e6f
0x00003f76      662e0f1f8400.  nop word cs:[rax + rax]
0x00003f80      4889c1         mov rcx, rax
0x00003f83      660fefc9       pxor xmm1, xmm1
0x00003f87      48d1e9         shr rcx, 1
0x00003f8a      83e001         and eax, 1
0x00003f8d      4809c1         or rcx, rax
0x00003f90      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00003f95      f30f58c9       addss xmm1, xmm1
0x00003f99      e92affffff     jmp 0x3ec8
0x00003f9e      6690           nop
0x00003fa0      4889c2         mov rdx, rax
0x00003fa3      660fefc0       pxor xmm0, xmm0
0x00003fa7      48d1ea         shr rdx, 1
0x00003faa      83e001         and eax, 1
0x00003fad      4809c2         or rdx, rax
0x00003fb0      f3480f2ac2     cvtsi2ss xmm0, rdx
0x00003fb5      f30f58c0       addss xmm0, xmm0
0x00003fb9      e9f0feffff     jmp 0x3eae
0x00003fbe      6690           nop
0x00003fc0      f30f5c05e835.  subss xmm0, dword [0x000075b0]
0x00003fc8      48b800000000.  movabs rax, 0x8000000000000000
0x00003fd2      f3480f2cf0     cvttss2si rsi, xmm0
0x00003fd7      4831c6         xor rsi, rax
0x00003fda      e95dffffff     jmp 0x3f3c
0x00003fdf      90             nop
0x00003fe0      f30f594208     mulss xmm0, dword [rdx + 8]
0x00003fe5      e940ffffff     jmp 0x3f2a
0x00003fea      660f1f440000   nop word [rax + rax]
0x00003ff0      4889c1         mov rcx, rax
0x00003ff3      660fefc9       pxor xmm1, xmm1
0x00003ff7      48d1e9         shr rcx, 1
0x00003ffa      83e001         and eax, 1
0x00003ffd      4809c1         or rcx, rax
0x00004000      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00004005      f30f58c9       addss xmm1, xmm1
0x00004009      e9fcfeffff     jmp 0x3f0a
0x0000400e      6690           nop
0x00004010      4889c1         mov rcx, rax
0x00004013      660fefc0       pxor xmm0, xmm0
0x00004017      48d1e9         shr rcx, 1
0x0000401a      83e001         and eax, 1
0x0000401d      4809c1         or rcx, rax
0x00004020      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00004025      f30f58c0       addss xmm0, xmm0
0x00004029      e9c6feffff     jmp 0x3ef4
0x0000402e      e85dd5ffff     call sym.imp.__stack_chk_fail
0x00004033      662e0f1f8400.  nop word cs:[rax + rax]
0x0000403d      0f1f00         nop dword [rax]
;-- triple_hash:
0x00004040      55             push rbp                                ; ../coreutils-8.31/lib/hash-triple.c:35
0x00004041      53             push rbx
0x00004042      4889fd         mov rbp, rdi
0x00004045      4889f3         mov rbx, rsi
0x00004048      4883ec08       sub rsp, 8
0x0000404c      488b3f         mov rdi, qword [rdi]                    ; ../coreutils-8.31/lib/hash-triple.c:37
0x0000404f      e8ac2c0000     call sym.hash_pjw
0x00004054      48334508       xor rax, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash-triple.c:40
0x00004058      31d2           xor edx, edx
0x0000405a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:41
0x0000405e      48f7f3         div rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:40
0x00004061      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:41
0x00004062      5d             pop rbp
0x00004063      4889d0         mov rax, rdx
0x00004066      c3             ret
0x00004067      660f1f840000.  nop word [rax + rax]
;-- triple_hash_no_name:
0x00004070      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:46
0x00004074      31d2           xor edx, edx
0x00004076      48f7f6         div rsi
0x00004079      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-triple.c:51
0x0000407c      c3             ret
0x0000407d      0f1f00         nop dword [rax]
;-- triple_compare:
0x00004080      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-triple.c:56
0x00004082      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:59
0x00004086      48395708       cmp qword [rdi + 8], rdx
0x0000408a      7404           je 0x4090
0x0000408c      f3c3           ret                                     ; ../coreutils-8.31/lib/hash-triple.c:60
0x0000408e      6690           nop
0x00004090      488b4e10       mov rcx, qword [rsi + 0x10]             ; ../coreutils-8.31/lib/hash-triple.c:59
0x00004094      48394f10       cmp qword [rdi + 0x10], rcx
0x00004098      75f2           jne 0x408c
0x0000409a      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:56
0x0000409e      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/hash-triple.c:59
0x000040a1      488b3f         mov rdi, qword [rdi]
0x000040a4      e8671f0000     call sym.same_name
0x000040a9      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:60
0x000040ad      c3             ret
0x000040ae      6690           nop
;-- triple_compare_ino_str:
0x000040b0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-triple.c:64
0x000040b2      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:67
0x000040b6      48395708       cmp qword [rdi + 8], rdx
0x000040ba      7404           je 0x40c0
0x000040bc      f3c3           ret                                     ; ../coreutils-8.31/lib/hash-triple.c:68
0x000040be      6690           nop
0x000040c0      488b4e10       mov rcx, qword [rsi + 0x10]             ; ../coreutils-8.31/lib/hash-triple.c:67
0x000040c4      48394f10       cmp qword [rdi + 0x10], rcx
0x000040c8      75f2           jne 0x40bc
0x000040ca      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:64
0x000040ce      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/hash-triple.c:67
0x000040d1      488b3f         mov rdi, qword [rdi]
0x000040d4      e887d5ffff     call sym.imp.strcmp
0x000040d9      85c0           test eax, eax
0x000040db      0f94c0         sete al
0x000040de      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:68
0x000040e2      c3             ret
0x000040e3      0f1f00         nop dword [rax]
0x000040e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- triple_free:
0x000040f0      53             push rbx                                ; ../coreutils-8.31/lib/hash-triple.c:73
0x000040f1      4889fb         mov rbx, rdi
0x000040f4      488b3f         mov rdi, qword [rdi]                    ; ../coreutils-8.31/lib/hash-triple.c:75
0x000040f7      e8b4d3ffff     call sym.imp.free
0x000040fc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/hash-triple.c:76
0x000040ff      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:77
0x00004100      e9abd3ffff     jmp sym.imp.free                        ; ../coreutils-8.31/lib/hash-triple.c:76
0x00004105      662e0f1f8400.  nop word cs:[rax + rax]
0x0000410f      90             nop
;-- set_program_name:
0x00004110      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00004113      53             push rbx
0x00004114      7477           je 0x418d                               ; ../coreutils-8.31/lib/progname.c:51
0x00004116      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000411b      4889fb         mov rbx, rdi
0x0000411e      e8bdd4ffff     call sym.imp.strrchr
0x00004123      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00004126      7455           je 0x417d
0x00004128      4c8d4001       lea r8, [rax + 1]
0x0000412c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000412f      4829da         sub rdx, rbx
0x00004132      4883fa06       cmp rdx, 6
0x00004136      7e45           jle 0x417d
0x00004138      488d70fa       lea rsi, [rax - 6]
0x0000413c      488d3db53400.  lea rdi, str..libs                      ; 0x75f8 ; "/.libs/"
0x00004143      b907000000     mov ecx, 7
0x00004148      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000414a      0f97c2         seta dl
0x0000414d      80da00         sbb dl, 0
0x00004150      84d2           test dl, dl
0x00004152      7529           jne 0x417d
0x00004154      488d3da53400.  lea rdi, [0x00007600]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000415b      b903000000     mov ecx, 3
0x00004160      4c89c6         mov rsi, r8
0x00004163      4c89c3         mov rbx, r8
0x00004166      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004168      0f97c2         seta dl
0x0000416b      80da00         sbb dl, 0
0x0000416e      84d2           test dl, dl
0x00004170      750b           jne 0x417d
0x00004172      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00004176      48891d235f20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20a0a0:8]=0
0x0000417d      48891d945f20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20a118:8]=0
0x00004184      48891d355f20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20a0c0:8]=0
0x0000418b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000418c      c3             ret
0x0000418d      488b0d4c5f20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00004194      488d3d253400.  lea rdi, [0x000075c0]                   ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000419b      ba37000000     mov edx, 0x37                           ; '7'
0x000041a0      be01000000     mov esi, 1
0x000041a5      e8b6d5ffff     call sym.imp.fwrite
0x000041aa      e811d3ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000041af      90             nop
;-- gettext_quote.part.1:
0x000041b0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000041b1      53             push rbx
0x000041b2      4889fd         mov rbp, rdi
0x000041b5      89f3           mov ebx, esi
0x000041b7      4883ec08       sub rsp, 8
0x000041bb      e8802b0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000041c0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000041c3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000041c6      80fa55         cmp dl, 0x55
0x000041c9      7475           je 0x4240
0x000041cb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000041ce      7420           je 0x41f0
0x000041d0      488d053c3400.  lea rax, str.l______l                   ; 0x7613 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000041d7      488d15373400.  lea rdx, [0x00007615]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000041de      83fb09         cmp ebx, 9
0x000041e1      480f45c2       cmovne rax, rdx
0x000041e5      4883c408       add rsp, 8
0x000041e9      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x000041ea      5d             pop rbp
0x000041eb      c3             ret
0x000041ec      0f1f4000       nop dword [rax]
0x000041f0      0fb65001       movzx edx, byte [rax + 1]
0x000041f4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000041f7      80fa42         cmp dl, 0x42
0x000041fa      75d4           jne 0x41d0
0x000041fc      80780231       cmp byte [rax + 2], 0x31
0x00004200      75ce           jne 0x41d0
0x00004202      80780338       cmp byte [rax + 3], 0x38
0x00004206      75c8           jne 0x41d0
0x00004208      80780430       cmp byte [rax + 4], 0x30
0x0000420c      75c2           jne 0x41d0
0x0000420e      80780533       cmp byte [rax + 5], 0x33
0x00004212      75bc           jne 0x41d0
0x00004214      80780630       cmp byte [rax + 6], 0x30
0x00004218      75b6           jne 0x41d0
0x0000421a      80780700       cmp byte [rax + 7], 0
0x0000421e      75b0           jne 0x41d0
0x00004220      807d0060       cmp byte [rbp], 0x60
0x00004224      488d05e13300.  lea rax, [0x0000760c]
0x0000422b      488d15de3300.  lea rdx, [0x00007610]
0x00004232      480f45c2       cmovne rax, rdx
0x00004236      4883c408       add rsp, 8
0x0000423a      5b             pop rbx
0x0000423b      5d             pop rbp
0x0000423c      c3             ret
0x0000423d      0f1f00         nop dword [rax]
0x00004240      0fb65001       movzx edx, byte [rax + 1]
0x00004244      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004247      80fa54         cmp dl, 0x54
0x0000424a      7584           jne 0x41d0
0x0000424c      0fb65002       movzx edx, byte [rax + 2]
0x00004250      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004253      80fa46         cmp dl, 0x46
0x00004256      0f8574ffffff   jne 0x41d0
0x0000425c      8078032d       cmp byte [rax + 3], 0x2d
0x00004260      0f856affffff   jne 0x41d0
0x00004266      80780438       cmp byte [rax + 4], 0x38
0x0000426a      0f8560ffffff   jne 0x41d0
0x00004270      80780500       cmp byte [rax + 5], 0
0x00004274      0f8556ffffff   jne 0x41d0
0x0000427a      807d0060       cmp byte [rbp], 0x60
0x0000427e      488d057f3300.  lea rax, [0x00007604]                   ; "\u2018"
0x00004285      488d157c3300.  lea rdx, [0x00007608]                   ; "\u2019"
0x0000428c      480f45c2       cmovne rax, rdx
0x00004290      4883c408       add rsp, 8
0x00004294      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00004295      5d             pop rbp
0x00004296      c3             ret
0x00004297      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000042a0      4157           push r15
0x000042a2      4156           push r14
0x000042a4      4589c7         mov r15d, r8d
0x000042a7      4155           push r13
0x000042a9      4154           push r12
0x000042ab      4989fe         mov r14, rdi
0x000042ae      55             push rbp
0x000042af      53             push rbx
0x000042b0      4489cb         mov ebx, r9d
0x000042b3      4989f5         mov r13, rsi
0x000042b6      4889cd         mov rbp, rcx
0x000042b9      83e302         and ebx, 2
0x000042bc      4881ecb80000.  sub rsp, 0xb8
0x000042c3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x000042cb      4889542410     mov qword [rsp + 0x10], rdx
0x000042d0      4489442408     mov dword [rsp + 8], r8d
0x000042d5      44894c2478     mov dword [rsp + 0x78], r9d
0x000042da      4889442420     mov qword [rsp + 0x20], rax
0x000042df      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x000042e7      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x000042ec      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x000042f4      4889442460     mov qword [rsp + 0x60], rax
0x000042f9      64488b042528.  mov rax, qword fs:[0x28]
0x00004302      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000430a      31c0           xor eax, eax
0x0000430c      e84fd2ffff     call sym.imp.__ctype_get_mb_cur_max
0x00004311      4183ff0a       cmp r15d, 0xa
0x00004315      4889442458     mov qword [rsp + 0x58], rax
0x0000431a      0f87af110000   ja 0x54cf
0x00004320      488d0d593300.  lea rcx, [0x00007680]
0x00004327      4489fa         mov edx, r15d
0x0000432a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000432e      4801c8         add rax, rcx
0x00004331      ffe0           jmp rax
0x00004333      c644240e01     mov byte [rsp + 0xe], 1
0x00004338      c644247c00     mov byte [rsp + 0x7c], 0
0x0000433d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00004340      48c744245000.  mov qword [rsp + 0x50], 0
0x00004349      c644240f01     mov byte [rsp + 0xf], 1
0x0000434e      c644240d00     mov byte [rsp + 0xd], 0
0x00004353      488d05bb3200.  lea rax, [0x00007615]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000435a      48c744241801.  mov qword [rsp + 0x18], 1
0x00004363      4531ff         xor r15d, r15d
0x00004366      c74424080200.  mov dword [rsp + 8], 2
0x0000436e      4889442448     mov qword [rsp + 0x48], rax
0x00004373      4531db         xor r11d, r11d
0x00004376      4889e8         mov rax, rbp
0x00004379      4589e0         mov r8d, r12d
0x0000437c      4c89dd         mov rbp, r11
0x0000437f      4989c3         mov r11, rax
0x00004382      660f1f440000   nop word [rax + rax]
0x00004388      4939eb         cmp r11, rbp
0x0000438b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000438f      4983fbff       cmp r11, 0xffffffffffffffff
0x00004393      750d           jne 0x43a2
0x00004395      488b442410     mov rax, qword [rsp + 0x10]
0x0000439a      803c2800       cmp byte [rax + rbp], 0
0x0000439e      410f95c4       setne r12b
0x000043a2      4584e4         test r12b, r12b
0x000043a5      0f8455060000   je 0x4a00
0x000043ab      837c240802     cmp dword [rsp + 8], 2
0x000043b0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000043b5      4c8d0c2f       lea r9, [rdi + rbp]
0x000043b9      0f95c0         setne al
0x000043bc      2244240d       and al, byte [rsp + 0xd]
0x000043c0      4189c2         mov r10d, eax
0x000043c3      0f84a7000000   je 0x4470
0x000043c9      488b442418     mov rax, qword [rsp + 0x18]
0x000043ce      4885c0         test rax, rax
0x000043d1      0f8429040000   je 0x4800
0x000043d7      4983fbff       cmp r11, 0xffffffffffffffff
0x000043db      488d5c0500     lea rbx, [rbp + rax]
0x000043e0      752e           jne 0x4410
0x000043e2      4883f801       cmp rax, 1
0x000043e6      7628           jbe 0x4410
0x000043e8      4488442438     mov byte [rsp + 0x38], r8b
0x000043ed      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x000043f2      4c894c2428     mov qword [rsp + 0x28], r9
0x000043f7      e874d1ffff     call sym.imp.strlen
0x000043fc      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00004402      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00004408      4989c3         mov r11, rax
0x0000440b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004410      4c39db         cmp rbx, r11
0x00004413      4488542428     mov byte [rsp + 0x28], r10b
0x00004418      0f87b2050000   ja 0x49d0
0x0000441e      488b542418     mov rdx, qword [rsp + 0x18]
0x00004423      488b742448     mov rsi, qword [rsp + 0x48]
0x00004428      4c89cf         mov rdi, r9
0x0000442b      4c895c2440     mov qword [rsp + 0x40], r11
0x00004430      4488442438     mov byte [rsp + 0x38], r8b
0x00004435      4c894c2430     mov qword [rsp + 0x30], r9
0x0000443a      e8f1d1ffff     call sym.imp.memcmp
0x0000443f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00004441      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004446      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000444c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00004451      0f8579050000   jne 0x49d0
0x00004457      807c240f00     cmp byte [rsp + 0xf], 0
0x0000445c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00004462      0f857d0f0000   jne 0x53e5
0x00004468      0f1f84000000.  nop dword [rax + rax]
0x00004470      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00004474      80fb7e         cmp bl, 0x7e
0x00004477      0f871b030000   ja 0x4798
0x0000447d      488d0d283200.  lea rcx, [0x000076ac]
0x00004484      0fb6d3         movzx edx, bl
0x00004487      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000448b      4801c8         add rax, rcx
0x0000448e      ffe0           jmp rax
0x00004490      4531d2         xor r10d, r10d
0x00004493      4983fb01       cmp r11, 1
0x00004497      0f95c0         setne al
0x0000449a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000449e      750c           jne 0x44ac
0x000044a0      488b442410     mov rax, qword [rsp + 0x10]
0x000044a5      80780100       cmp byte [rax + 1], 0
0x000044a9      0f95c0         setne al
0x000044ac      837c240802     cmp dword [rsp + 8], 2
0x000044b1      0f94c2         sete dl
0x000044b4      84c0           test al, al
0x000044b6      0f844c020000   je 0x4708
0x000044bc      4531e4         xor r12d, r12d
0x000044bf      31c0           xor eax, eax
0x000044c1      0f1f80000000.  nop dword [rax]
0x000044c8      807c240d01     cmp byte [rsp + 0xd], 1
0x000044cd      0f850f010000   jne 0x45e2
0x000044d3      84d2           test dl, dl
0x000044d5      0f8507010000   jne 0x45e2
0x000044db      488b742420     mov rsi, qword [rsp + 0x20]
0x000044e0      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x000044e3      7414           je 0x44f9
0x000044e5      89da           mov edx, ebx
0x000044e7      c0ea05         shr dl, 5
0x000044ea      0fb6d2         movzx edx, dl
0x000044ed      8b1496         mov edx, dword [rsi + rdx*4]
0x000044f0      0fa3da         bt edx, ebx
0x000044f3      0f824a010000   jb 0x4643
0x000044f9      4584d2         test r10b, r10b
0x000044fc      0f8541010000   jne 0x4643
0x00004502      83f001         xor eax, 1
0x00004505      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00004509      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000450c      84c0           test al, al
0x0000450e      7420           je 0x4530                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00004510      4d39fd         cmp r13, r15
0x00004513      7605           jbe 0x451a
0x00004515      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000451a      498d4701       lea rax, [r15 + 1]
0x0000451e      4939c5         cmp r13, rax
0x00004521      7606           jbe 0x4529
0x00004523      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004529      4983c702       add r15, 2
0x0000452d      4531c0         xor r8d, r8d
0x00004530      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00004533      7304           jae 0x4539                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00004535      43881c3e       mov byte [r14 + r15], bl
0x00004539      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000453e      4983c701       add r15, 1
0x00004542      b800000000     mov eax, 0
0x00004547      4584e4         test r12b, r12b
0x0000454a      0f44f8         cmove edi, eax
0x0000454d      40887c240e     mov byte [rsp + 0xe], dil
0x00004552      e931feffff     jmp 0x4388
0x00004557      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00004560      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00004563      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00004567      83f802         cmp eax, 2
0x0000456a      0f84b8050000   je 0x4b28
0x00004570      83f805         cmp eax, 5
0x00004573      0f846f050000   je 0x4ae8
0x00004579      83f802         cmp eax, 2
0x0000457c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00004581      0f94c2         sete dl
0x00004584      4531e4         xor r12d, r12d
0x00004587      31c0           xor eax, eax
0x00004589      e93affffff     jmp 0x44c8
0x0000458e      6690           nop
0x00004590      4531d2         xor r10d, r10d
0x00004593      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00004598      0f8402050000   je 0x4aa0
0x0000459e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x000045a3      31d2           xor edx, edx
0x000045a5      31c0           xor eax, eax
0x000045a7      bb27000000     mov ebx, 0x27                           ; '''
0x000045ac      e917ffffff     jmp 0x44c8
0x000045b1      0f1f80000000.  nop dword [rax]
0x000045b8      ba09000000     mov edx, 9
0x000045bd      bb74000000     mov ebx, 0x74                           ; 't'
0x000045c2      837c240802     cmp dword [rsp + 8], 2
0x000045c7      0f94c0         sete al
0x000045ca      2244240f       and al, byte [rsp + 0xf]
0x000045ce      0f854a010000   jne 0x471e
0x000045d4      807c240d00     cmp byte [rsp + 0xd], 0
0x000045d9      7565           jne 0x4640
0x000045db      89d3           mov ebx, edx
0x000045dd      4531e4         xor r12d, r12d
0x000045e0      31c0           xor eax, eax
0x000045e2      807c240f00     cmp byte [rsp + 0xf], 0
0x000045e7      0f85eefeffff   jne 0x44db
0x000045ed      e907ffffff     jmp 0x44f9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x000045f2      660f1f440000   nop word [rax + rax]
0x000045f8      ba08000000     mov edx, 8
0x000045fd      bb62000000     mov ebx, 0x62                           ; 'b'
0x00004602      ebd0           jmp 0x45d4
0x00004604      0f1f4000       nop dword [rax]
0x00004608      837c240802     cmp dword [rsp + 8], 2
0x0000460d      0f84cd030000   je 0x49e0
0x00004613      807c240d00     cmp byte [rsp + 0xd], 0
0x00004618      0f8412020000   je 0x4830
0x0000461e      807c240f00     cmp byte [rsp + 0xf], 0
0x00004623      0f8407020000   je 0x4830
0x00004629      48837c241800   cmp qword [rsp + 0x18], 0
0x0000462f      0f85b6030000   jne 0x49eb
0x00004635      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000463a      660f1f440000   nop word [rax + rax]
0x00004640      4531e4         xor r12d, r12d
0x00004643      837c240802     cmp dword [rsp + 8], 2
0x00004648      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000464b      807c240f00     cmp byte [rsp + 0xf], 0
0x00004650      89d0           mov eax, edx
0x00004652      0f8550080000   jne 0x4ea8
0x00004658      4489c0         mov eax, r8d
0x0000465b      83f001         xor eax, 1
0x0000465e      20d0           and al, dl
0x00004660      742f           je 0x4691
0x00004662      4d39fd         cmp r13, r15
0x00004665      7605           jbe 0x466c
0x00004667      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000466c      498d5701       lea rdx, [r15 + 1]
0x00004670      4939d5         cmp r13, rdx
0x00004673      7606           jbe 0x467b
0x00004675      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000467b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000467f      4939d5         cmp r13, rdx
0x00004682      7606           jbe 0x468a
0x00004684      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000468a      4983c703       add r15, 3
0x0000468e      4189c0         mov r8d, eax
0x00004691      4d39fd         cmp r13, r15
0x00004694      7605           jbe 0x469b
0x00004696      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000469b      4983c701       add r15, 1
0x0000469f      4883c501       add rbp, 1
0x000046a3      e988feffff     jmp 0x4530
0x000046a8      0f1f84000000.  nop dword [rax + rax]
0x000046b0      807c240d00     cmp byte [rsp + 0xd], 0
0x000046b5      0f85c8010000   jne 0x4883
0x000046bb      31d2           xor edx, edx
0x000046bd      f644247801     test byte [rsp + 0x78], 1
0x000046c2      0f8413ffffff   je 0x45db
0x000046c8      4883c501       add rbp, 1
0x000046cc      e9b7fcffff     jmp 0x4388
0x000046d1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x000046d8      837c240802     cmp dword [rsp + 8], 2
0x000046dd      0f94c2         sete dl
0x000046e0      31c0           xor eax, eax
0x000046e2      e9e1fdffff     jmp 0x44c8
0x000046e7      660f1f840000.  nop word [rax + rax]
0x000046f0      ba07000000     mov edx, 7
0x000046f5      bb61000000     mov ebx, 0x61                           ; 'a'
0x000046fa      e9d5feffff     jmp 0x45d4
0x000046ff      90             nop
0x00004700      837c240802     cmp dword [rsp + 8], 2
0x00004705      0f94c2         sete dl
0x00004708      4885ed         test rbp, rbp
0x0000470b      0f85abfdffff   jne 0x44bc
0x00004711      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004716      20d0           and al, dl
0x00004718      0f84aafdffff   je 0x44c8
0x0000471e      4c89dd         mov rbp, r11
0x00004721      c74424080200.  mov dword [rsp + 8], 2
0x00004729      e9fb060000     jmp 0x4e29
0x0000472e      6690           nop
0x00004730      837c240802     cmp dword [rsp + 8], 2
0x00004735      0f94c2         sete dl
0x00004738      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000473b      ebd4           jmp 0x4711
0x0000473d      0f1f00         nop dword [rax]
0x00004740      837c240802     cmp dword [rsp + 8], 2
0x00004745      bb20000000     mov ebx, 0x20                           ; "@"
0x0000474a      0f94c2         sete dl
0x0000474d      ebc2           jmp 0x4711
0x0000474f      90             nop
0x00004750      ba0d000000     mov edx, 0xd
0x00004755      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000475a      e963feffff     jmp 0x45c2
0x0000475f      90             nop
0x00004760      ba0c000000     mov edx, 0xc
0x00004765      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000476a      e965feffff     jmp 0x45d4
0x0000476f      90             nop
0x00004770      ba0b000000     mov edx, 0xb
0x00004775      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000477a      e955feffff     jmp 0x45d4
0x0000477f      90             nop
0x00004780      ba0a000000     mov edx, 0xa
0x00004785      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000478a      e933feffff     jmp 0x45c2
0x0000478f      90             nop
0x00004790      4531d2         xor r10d, r10d
0x00004793      0f1f440000     nop dword [rax + rax]
0x00004798      48837c245801   cmp qword [rsp + 0x58], 1
0x0000479e      0f85a4030000   jne 0x4b48
0x000047a4      4c895c2438     mov qword [rsp + 0x38], r11
0x000047a9      4488442430     mov byte [rsp + 0x30], r8b
0x000047ae      4488542428     mov byte [rsp + 0x28], r10b
0x000047b3      e8e8cfffff     call sym.imp.__ctype_b_loc
0x000047b8      488b08         mov rcx, qword [rax]
0x000047bb      0fb6d3         movzx edx, bl
0x000047be      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000047c4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x000047ca      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x000047cf      bf01000000     mov edi, 1
0x000047d4      0fb70451       movzx eax, word [rcx + rdx*2]
0x000047d8      66250040       and ax, 0x4000
0x000047dc      410f95c4       setne r12b
0x000047e0      0f94c0         sete al
0x000047e3      2244240d       and al, byte [rsp + 0xd]
0x000047e7      84c0           test al, al
0x000047e9      0f8592090000   jne 0x5181
0x000047ef      837c240802     cmp dword [rsp + 8], 2
0x000047f4      0f94c2         sete dl
0x000047f7      e9ccfcffff     jmp 0x44c8
0x000047fc      0f1f4000       nop dword [rax]
0x00004800      410fb619       movzx ebx, byte [r9]
0x00004804      80fb7e         cmp bl, 0x7e
0x00004807      7787           ja 0x4790
0x00004809      488d0d983000.  lea rcx, [0x000078a8]
0x00004810      0fb6d3         movzx edx, bl
0x00004813      48630491       movsxd rax, dword [rcx + rdx*4]
0x00004817      4801c8         add rax, rcx
0x0000481a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000481c      0f1f4000       nop dword [rax]
0x00004820      4531d2         xor r10d, r10d
0x00004823      807c240d00     cmp byte [rsp + 0xd], 0
0x00004828      0f85f0fdffff   jne 0x461e
0x0000482e      6690           nop
0x00004830      ba5c000000     mov edx, 0x5c                           ; '\'
0x00004835      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000483a      e995fdffff     jmp 0x45d4
0x0000483f      90             nop
0x00004840      ba0c000000     mov edx, 0xc
0x00004845      4531d2         xor r10d, r10d
0x00004848      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000484d      e982fdffff     jmp 0x45d4
0x00004852      660f1f440000   nop word [rax + rax]
0x00004858      ba0a000000     mov edx, 0xa
0x0000485d      4531d2         xor r10d, r10d
0x00004860      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00004865      e958fdffff     jmp 0x45c2
0x0000486a      660f1f440000   nop word [rax + rax]
0x00004870      bb61000000     mov ebx, 0x61                           ; 'a'
0x00004875      e9c6fdffff     jmp 0x4640
0x0000487a      660f1f440000   nop word [rax + rax]
0x00004880      4531d2         xor r10d, r10d
0x00004883      837c240802     cmp dword [rsp + 8], 2
0x00004888      0f94c2         sete dl
0x0000488b      807c240f00     cmp byte [rsp + 0xf], 0
0x00004890      0f85940b0000   jne 0x542a
0x00004896      4489c0         mov eax, r8d
0x00004899      4c89f9         mov rcx, r15
0x0000489c      83f001         xor eax, 1
0x0000489f      20d0           and al, dl
0x000048a1      742d           je 0x48d0
0x000048a3      4d39fd         cmp r13, r15
0x000048a6      7605           jbe 0x48ad
0x000048a8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000048ad      498d4f01       lea rcx, [r15 + 1]
0x000048b1      4939cd         cmp r13, rcx
0x000048b4      7606           jbe 0x48bc
0x000048b6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000048bc      498d4f02       lea rcx, [r15 + 2]
0x000048c0      4939cd         cmp r13, rcx
0x000048c3      0f8730060000   ja 0x4ef9
0x000048c9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x000048cd      4189c0         mov r8d, eax
0x000048d0      4939cd         cmp r13, rcx
0x000048d3      7605           jbe 0x48da
0x000048d5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000048da      837c240802     cmp dword [rsp + 8], 2
0x000048df      4c8d7901       lea r15, [rcx + 1]
0x000048e3      0f8400060000   je 0x4ee9
0x000048e9      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000048ed      4c39d8         cmp rax, r11
0x000048f0      7319           jae 0x490b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x000048f2      488b442410     mov rax, qword [rsp + 0x10]
0x000048f7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x000048fc      88442428       mov byte [rsp + 0x28], al
0x00004900      83e830         sub eax, 0x30
0x00004903      3c09           cmp al, 9
0x00004905      0f862e080000   jbe 0x5139
0x0000490b      4489e0         mov eax, r12d
0x0000490e      bb30000000     mov ebx, 0x30                           ; '0'
0x00004913      4531e4         xor r12d, r12d
0x00004916      e9adfbffff     jmp 0x44c8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000491b      0f1f440000     nop dword [rax + rax]
0x00004920      837c240802     cmp dword [rsp + 8], 2
0x00004925      4589d4         mov r12d, r10d
0x00004928      0f94c2         sete dl
0x0000492b      4531d2         xor r10d, r10d
0x0000492e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004930      e993fbffff     jmp 0x44c8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00004935      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004938      837c240802     cmp dword [rsp + 8], 2
0x0000493d      0f94c2         sete dl
0x00004940      4531d2         xor r10d, r10d
0x00004943      e9c0fdffff     jmp 0x4708
0x00004948      0f1f84000000.  nop dword [rax + rax]
0x00004950      837c240802     cmp dword [rsp + 8], 2
0x00004955      0f94c2         sete dl
0x00004958      4531d2         xor r10d, r10d
0x0000495b      4531e4         xor r12d, r12d
0x0000495e      e9aefdffff     jmp 0x4711
0x00004963      0f1f440000     nop dword [rax + rax]
0x00004968      837c240802     cmp dword [rsp + 8], 2
0x0000496d      4589d4         mov r12d, r10d
0x00004970      bb20000000     mov ebx, 0x20                           ; "@"
0x00004975      0f94c2         sete dl
0x00004978      4531d2         xor r10d, r10d
0x0000497b      e991fdffff     jmp 0x4711
0x00004980      ba0d000000     mov edx, 0xd
0x00004985      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00004988      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000498d      e930fcffff     jmp 0x45c2
0x00004992      660f1f440000   nop word [rax + rax]
0x00004998      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000499d      e99efcffff     jmp 0x4640
0x000049a2      660f1f440000   nop word [rax + rax]
0x000049a8      ba09000000     mov edx, 9
0x000049ad      4531d2         xor r10d, r10d
0x000049b0      bb74000000     mov ebx, 0x74                           ; 't'
0x000049b5      e908fcffff     jmp 0x45c2
0x000049ba      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x000049c0      bb62000000     mov ebx, 0x62                           ; 'b'
0x000049c5      e976fcffff     jmp 0x4640
0x000049ca      660f1f440000   nop word [rax + rax]
0x000049d0      4531d2         xor r10d, r10d
0x000049d3      e998faffff     jmp 0x4470
0x000049d8      0f1f84000000.  nop dword [rax + rax]
0x000049e0      807c240f00     cmp byte [rsp + 0xf], 0
0x000049e5      0f8565090000   jne 0x5350
0x000049eb      4883c501       add rbp, 1
0x000049ef      4489c0         mov eax, r8d
0x000049f2      4531e4         xor r12d, r12d
0x000049f5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000049fa      e90dfbffff     jmp 0x450c
0x000049ff      90             nop
0x00004a00      837c240802     cmp dword [rsp + 8], 2
0x00004a05      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004a0a      4589c4         mov r12d, r8d
0x00004a0d      4c89dd         mov rbp, r11
0x00004a10      0f94c2         sete dl
0x00004a13      89d8           mov eax, ebx
0x00004a15      4d85ff         test r15, r15
0x00004a18      0f94c1         sete cl
0x00004a1b      21d0           and eax, edx
0x00004a1d      20c8           and al, cl
0x00004a1f      0f85610a0000   jne 0x5486                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00004a25      89d8           mov eax, ebx
0x00004a27      83f001         xor eax, 1
0x00004a2a      20c2           and dl, al
0x00004a2c      0f846a090000   je 0x539c
0x00004a32      807c247c00     cmp byte [rsp + 0x7c], 0
0x00004a37      0f845d090000   je 0x539a
0x00004a3d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00004a42      0f85f5090000   jne 0x543d
0x00004a48      4d85ed         test r13, r13
0x00004a4b      0f94c0         sete al
0x00004a4e      48837c245000   cmp qword [rsp + 0x50], 0
0x00004a54      0f95c2         setne dl
0x00004a57      20d0           and al, dl
0x00004a59      0f841d0a0000   je 0x547c
0x00004a5f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004a64      488d1daa2b00.  lea rbx, [0x00007615]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004a6b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00004a6f      c74424080200.  mov dword [rsp + 8], 2
0x00004a77      41bf01000000   mov r15d, 1
0x00004a7d      48c744241801.  mov qword [rsp + 0x18], 1
0x00004a86      c644240f00     mov byte [rsp + 0xf], 0
0x00004a8b      48895c2448     mov qword [rsp + 0x48], rbx
0x00004a90      8844247c       mov byte [rsp + 0x7c], al
0x00004a94      e9daf8ffff     jmp 0x4373
0x00004a99      0f1f80000000.  nop dword [rax]
0x00004aa0      807c240f00     cmp byte [rsp + 0xf], 0
0x00004aa5      0f85a5080000   jne 0x5350
0x00004aab      4d85ed         test r13, r13
0x00004aae      0f84fc030000   je 0x4eb0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00004ab4      31d2           xor edx, edx
0x00004ab6      48837c245000   cmp qword [rsp + 0x50], 0
0x00004abc      0f85ee030000   jne 0x4eb0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00004ac2      4c896c2450     mov qword [rsp + 0x50], r13
0x00004ac7      4983c703       add r15, 3
0x00004acb      31c0           xor eax, eax
0x00004acd      448864247c     mov byte [rsp + 0x7c], r12b
0x00004ad2      4531c0         xor r8d, r8d
0x00004ad5      4989d5         mov r13, rdx
0x00004ad8      bb27000000     mov ebx, 0x27                           ; '''
0x00004add      e917faffff     jmp 0x44f9
0x00004ae2      660f1f440000   nop word [rax + rax]
0x00004ae8      f644247804     test byte [rsp + 0x78], 4
0x00004aed      7421           je 0x4b10
0x00004aef      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00004af3      4c39d9         cmp rcx, r11
0x00004af6      7318           jae 0x4b10
0x00004af8      488b442410     mov rax, qword [rsp + 0x10]
0x00004afd      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00004b02      0f848a070000   je 0x5292
0x00004b08      0f1f84000000.  nop dword [rax + rax]
0x00004b10      31d2           xor edx, edx
0x00004b12      4531e4         xor r12d, r12d
0x00004b15      31c0           xor eax, eax
0x00004b17      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00004b1c      e9a7f9ffff     jmp 0x44c8
0x00004b21      0f1f80000000.  nop dword [rax]
0x00004b28      807c240f00     cmp byte [rsp + 0xf], 0
0x00004b2d      0f851d080000   jne 0x5350
0x00004b33      4531e4         xor r12d, r12d
0x00004b36      31c0           xor eax, eax
0x00004b38      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00004b3d      e9b7f9ffff     jmp 0x44f9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00004b42      660f1f440000   nop word [rax + rax]
0x00004b48      488d8424a000.  lea rax, [rsp + 0xa0]
0x00004b50      4983fbff       cmp r11, 0xffffffffffffffff
0x00004b54      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00004b60      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00004b65      752d           jne 0x4b94
0x00004b67      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004b6c      4488442440     mov byte [rsp + 0x40], r8b
0x00004b71      4488542438     mov byte [rsp + 0x38], r10b
0x00004b76      4c894c2430     mov qword [rsp + 0x30], r9
0x00004b7b      e8f0c9ffff     call sym.imp.strlen
0x00004b80      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00004b86      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00004b8c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00004b8f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004b94      488d84249c00.  lea rax, [rsp + 0x9c]
0x00004b9c      31c9           xor ecx, ecx
0x00004b9e      885c247e       mov byte [rsp + 0x7e], bl
0x00004ba2      448844247d     mov byte [rsp + 0x7d], r8b
0x00004ba7      4889cb         mov rbx, rcx
0x00004baa      4c898c248800.  mov qword [rsp + 0x88], r9
0x00004bb2      4889442438     mov qword [rsp + 0x38], rax
0x00004bb7      448854247f     mov byte [rsp + 0x7f], r10b
0x00004bbc      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00004bc4      4c89742440     mov qword [rsp + 0x40], r14
0x00004bc9      4c896c2470     mov qword [rsp + 0x70], r13
0x00004bce      4c895c2430     mov qword [rsp + 0x30], r11
0x00004bd3      488b442410     mov rax, qword [rsp + 0x10]
0x00004bd8      4c8d741d00     lea r14, [rbp + rbx]
0x00004bdd      488b542430     mov rdx, qword [rsp + 0x30]
0x00004be2      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004be7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004bec      4e8d2c30       lea r13, [rax + r14]
0x00004bf0      4c29f2         sub rdx, r14
0x00004bf3      4c89ee         mov rsi, r13
0x00004bf6      e8151d0000     call sym.rpl_mbrtowc
0x00004bfb      4885c0         test rax, rax
0x00004bfe      4989c7         mov r15, rax
0x00004c01      744e           je 0x4c51
0x00004c03      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004c07      0f8418060000   je 0x5225
0x00004c0d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00004c11      0f849a050000   je 0x51b1
0x00004c17      837c240802     cmp dword [rsp + 8], 2
0x00004c1c      0f94c0         sete al
0x00004c1f      2244240f       and al, byte [rsp + 0xf]
0x00004c23      0f8597010000   jne 0x4dc0
0x00004c29      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00004c30      e85bcbffff     call sym.imp.iswprint
0x00004c35      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00004c3a      85c0           test eax, eax
0x00004c3c      b800000000     mov eax, 0
0x00004c41      440f44e0       cmove r12d, eax
0x00004c45      4c01fb         add rbx, r15
0x00004c48      e833cbffff     call sym.imp.mbsinit
0x00004c4d      85c0           test eax, eax
0x00004c4f      7482           je 0x4bd3
0x00004c51      4489e2         mov edx, r12d
0x00004c54      4889df         mov rdi, rbx
0x00004c57      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004c5d      83f201         xor edx, 1
0x00004c60      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004c65      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004c6b      2254240d       and dl, byte [rsp + 0xd]
0x00004c6f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004c77      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004c7c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004c81      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004c86      4883ff01       cmp rdi, 1
0x00004c8a      0f86fb050000   jbe 0x528b
0x00004c90      4889f9         mov rcx, rdi
0x00004c93      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00004c95      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00004c9b      4801e9         add rcx, rbp
0x00004c9e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004ca3      e9b6000000     jmp 0x4d5e
0x00004ca8      0f1f84000000.  nop dword [rax + rax]
0x00004cb0      837c240802     cmp dword [rsp + 8], 2
0x00004cb5      0f94c0         sete al
0x00004cb8      4584c9         test r9b, r9b
0x00004cbb      0f85af040000   jne 0x5170
0x00004cc1      4489c6         mov esi, r8d
0x00004cc4      83f601         xor esi, 1
0x00004cc7      4020f0         and al, sil
0x00004cca      742f           je 0x4cfb                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00004ccc      4d39fd         cmp r13, r15
0x00004ccf      7605           jbe 0x4cd6
0x00004cd1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004cd6      498d7701       lea rsi, [r15 + 1]
0x00004cda      4939f5         cmp r13, rsi
0x00004cdd      7606           jbe 0x4ce5                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00004cdf      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00004ce5      498d7702       lea rsi, [r15 + 2]
0x00004ce9      4939f5         cmp r13, rsi
0x00004cec      7606           jbe 0x4cf4
0x00004cee      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004cf4      4983c703       add r15, 3
0x00004cf8      4189c0         mov r8d, eax
0x00004cfb      4d39fd         cmp r13, r15
0x00004cfe      7605           jbe 0x4d05
0x00004d00      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004d05      498d4701       lea rax, [r15 + 1]
0x00004d09      4939c5         cmp r13, rax
0x00004d0c      760d           jbe 0x4d1b
0x00004d0e      89d8           mov eax, ebx
0x00004d10      c0e806         shr al, 6
0x00004d13      83c030         add eax, 0x30
0x00004d16      4388443e01     mov byte [r14 + r15 + 1], al
0x00004d1b      498d4702       lea rax, [r15 + 2]
0x00004d1f      4939c5         cmp r13, rax
0x00004d22      7610           jbe 0x4d34
0x00004d24      89d8           mov eax, ebx
0x00004d26      c0e803         shr al, 3
0x00004d29      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00004d2c      83c030         add eax, 0x30
0x00004d2f      4388443e02     mov byte [r14 + r15 + 2], al
0x00004d34      83e307         and ebx, 7
0x00004d37      4883c501       add rbp, 1
0x00004d3b      4983c703       add r15, 3
0x00004d3f      83c330         add ebx, 0x30
0x00004d42      4839cd         cmp rbp, rcx
0x00004d45      0f83e5f7ffff   jae 0x4530
0x00004d4b      89d6           mov esi, edx
0x00004d4d      4d39fd         cmp r13, r15
0x00004d50      7604           jbe 0x4d56
0x00004d52      43881c3e       mov byte [r14 + r15], bl
0x00004d56      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00004d5a      4983c701       add r15, 1
0x00004d5e      84d2           test dl, dl
0x00004d60      0f854affffff   jne 0x4cb0
0x00004d66      89f0           mov eax, esi
0x00004d68      83f001         xor eax, 1
0x00004d6b      4421c0         and eax, r8d
0x00004d6e      4584d2         test r10b, r10b
0x00004d71      740e           je 0x4d81
0x00004d73      4d39fd         cmp r13, r15
0x00004d76      7605           jbe 0x4d7d
0x00004d78      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004d7d      4983c701       add r15, 1
0x00004d81      4883c501       add rbp, 1
0x00004d85      4839cd         cmp rbp, rcx
0x00004d88      0f837ef7ffff   jae 0x450c
0x00004d8e      84c0           test al, al
0x00004d90      0f84f8030000   je 0x518e
0x00004d96      4d39fd         cmp r13, r15
0x00004d99      7605           jbe 0x4da0
0x00004d9b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004da0      498d4701       lea rax, [r15 + 1]
0x00004da4      4939c5         cmp r13, rax
0x00004da7      7606           jbe 0x4daf
0x00004da9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004daf      4983c702       add r15, 2
0x00004db3      4531d2         xor r10d, r10d
0x00004db6      4531c0         xor r8d, r8d
0x00004db9      eb92           jmp 0x4d4d
0x00004dbb      0f1f440000     nop dword [rax + rax]
0x00004dc0      4983ff01       cmp r15, 1
0x00004dc4      0f845ffeffff   je 0x4c29
0x00004dca      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004dcf      4a8d0c3f       lea rcx, [rdi + r15]
0x00004dd3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00004dd8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00004ddc      eb0f           jmp 0x4ded
0x00004dde      6690           nop
0x00004de0      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00004de4      4939d0         cmp r8, rdx
0x00004de7      0f843cfeffff   je 0x4c29
0x00004ded      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00004df0      83e95b         sub ecx, 0x5b
0x00004df3      80f921         cmp cl, 0x21
0x00004df6      77e8           ja 0x4de0                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00004df8      be01000000     mov esi, 1
0x00004dfd      48d3e6         shl rsi, cl
0x00004e00      4889f1         mov rcx, rsi
0x00004e03      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00004e0d      4885f1         test rcx, rsi
0x00004e10      74ce           je 0x4de0
0x00004e12      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004e17      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004e1c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00004e21      c74424080200.  mov dword [rsp + 8], 2
0x00004e29      807c240d00     cmp byte [rsp + 0xd], 0
0x00004e2e      7410           je 0x4e40
0x00004e30      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00004e32      b804000000     mov eax, 4
0x00004e37      0f44442408     cmove eax, dword [rsp + 8]
0x00004e3c      89442408       mov dword [rsp + 8], eax
0x00004e40      4883ec08       sub rsp, 8
0x00004e44      4889e9         mov rcx, rbp
0x00004e47      4c89ee         mov rsi, r13
0x00004e4a      ff742468       push qword [rsp + 0x68]
0x00004e4e      ff742478       push qword [rsp + 0x78]
0x00004e52      4c89f7         mov rdi, r14
0x00004e55      6a00           push 0
0x00004e57      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004e5f      448b442428     mov r8d, dword [rsp + 0x28]
0x00004e64      488b542430     mov rdx, qword [rsp + 0x30]
0x00004e69      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00004e6d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00004e72      4883c420       add rsp, 0x20
0x00004e76      4989c7         mov r15, rax
0x00004e79      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00004e81      6448331c2528.  xor rbx, qword fs:[0x28]
0x00004e8a      4c89f8         mov rax, r15
0x00004e8d      0f8500060000   jne 0x5493
0x00004e93      4881c4b80000.  add rsp, 0xb8
0x00004e9a      5b             pop rbx
0x00004e9b      5d             pop rbp
0x00004e9c      415c           pop r12
0x00004e9e      415d           pop r13
0x00004ea0      415e           pop r14
0x00004ea2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00004ea4      c3             ret
0x00004ea5      0f1f00         nop dword [rax]
0x00004ea8      4c89dd         mov rbp, r11
0x00004eab      e979ffffff     jmp 0x4e29
0x00004eb0      4d39fd         cmp r13, r15
0x00004eb3      7605           jbe 0x4eba
0x00004eb5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004eba      498d4701       lea rax, [r15 + 1]
0x00004ebe      4939c5         cmp r13, rax
0x00004ec1      7606           jbe 0x4ec9
0x00004ec3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00004ec9      498d4702       lea rax, [r15 + 2]
0x00004ecd      4939c5         cmp r13, rax
0x00004ed0      0f86ec050000   jbe 0x54c2
0x00004ed6      4c89ea         mov rdx, r13
0x00004ed9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004edf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004ee4      e9d9fbffff     jmp 0x4ac2
0x00004ee9      4489e0         mov eax, r12d
0x00004eec      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00004ef1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00004ef4      e900f6ffff     jmp 0x44f9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00004ef9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004eff      e9c5f9ffff     jmp 0x48c9
0x00004f04      85db           test ebx, ebx
0x00004f06      0f8527f4ffff   jne 0x4333
0x00004f0c      c644240d01     mov byte [rsp + 0xd], 1
0x00004f11      4d85ed         test r13, r13
0x00004f14      0f8590050000   jne 0x54aa
0x00004f1a      488d05f42600.  lea rax, [0x00007615]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004f21      48c744245000.  mov qword [rsp + 0x50], 0
0x00004f2a      c644240e01     mov byte [rsp + 0xe], 1
0x00004f2f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004f34      4531e4         xor r12d, r12d
0x00004f37      c644240f00     mov byte [rsp + 0xf], 0
0x00004f3c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004f45      4889442448     mov qword [rsp + 0x48], rax
0x00004f4a      41bf01000000   mov r15d, 1
0x00004f50      c74424080200.  mov dword [rsp + 8], 2
0x00004f58      e916f4ffff     jmp 0x4373                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00004f5d      0f1f00         nop dword [rax]
0x00004f60      85db           test ebx, ebx
0x00004f62      0f85f5030000   jne 0x535d
0x00004f68      4d85ed         test r13, r13
0x00004f6b      0f8425020000   je 0x5196
0x00004f71      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00004f75      c644240e01     mov byte [rsp + 0xe], 1
0x00004f7a      4531e4         xor r12d, r12d
0x00004f7d      c644247c00     mov byte [rsp + 0x7c], 0
0x00004f82      48c744245000.  mov qword [rsp + 0x50], 0
0x00004f8b      488d05812600.  lea rax, str.l______l                   ; 0x7613 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004f92      c644240f00     mov byte [rsp + 0xf], 0
0x00004f97      c644240d01     mov byte [rsp + 0xd], 1
0x00004f9c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004fa5      41bf01000000   mov r15d, 1
0x00004fab      4889442448     mov qword [rsp + 0x48], rax
0x00004fb0      e9bef3ffff     jmp 0x4373
0x00004fb5      488d05572600.  lea rax, str.l______l                   ; 0x7613 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004fbc      c644240e01     mov byte [rsp + 0xe], 1
0x00004fc1      c644247c00     mov byte [rsp + 0x7c], 0
0x00004fc6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00004fc9      48c744245000.  mov qword [rsp + 0x50], 0
0x00004fd2      c644240f01     mov byte [rsp + 0xf], 1
0x00004fd7      c644240d01     mov byte [rsp + 0xd], 1
0x00004fdc      48c744241801.  mov qword [rsp + 0x18], 1
0x00004fe5      4531ff         xor r15d, r15d
0x00004fe8      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00004fed      c74424080500.  mov dword [rsp + 8], 5
0x00004ff5      e979f3ffff     jmp 0x4373
0x00004ffa      c644240e01     mov byte [rsp + 0xe], 1
0x00004fff      c644247c00     mov byte [rsp + 0x7c], 0
0x00005004      4531e4         xor r12d, r12d
0x00005007      48c744245000.  mov qword [rsp + 0x50], 0
0x00005010      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00005015      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00005018      c644240d01     mov byte [rsp + 0xd], 1
0x0000501d      48c744241800.  mov qword [rsp + 0x18], 0
0x00005026      48c744244800.  mov qword [rsp + 0x48], 0
0x0000502f      e93ff3ffff     jmp 0x4373
0x00005034      837c24080a     cmp dword [rsp + 8], 0xa
0x00005039      7456           je 0x5091
0x0000503b      488d35d52500.  lea rsi, [0x00007617]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00005042      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00005044      ba05000000     mov edx, 5
0x00005049      e802c5ffff     call sym.imp.dcgettext
0x0000504e      4889c1         mov rcx, rax
0x00005051      4889442468     mov qword [rsp + 0x68], rax
0x00005056      488d05ba2500.  lea rax, [0x00007617]                   ; "`"
0x0000505d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00005060      0f8498030000   je 0x53fe
0x00005066      488d35a82500.  lea rsi, [0x00007615]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000506d      31ff           xor edi, edi
0x0000506f      ba05000000     mov edx, 5
0x00005074      e8d7c4ffff     call sym.imp.dcgettext
0x00005079      4889c1         mov rcx, rax
0x0000507c      4889442460     mov qword [rsp + 0x60], rax
0x00005081      488d058d2500.  lea rax, [0x00007615]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005088      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000508b      0f8483030000   je 0x5414
0x00005091      4531ff         xor r15d, r15d
0x00005094      85db           test ebx, ebx
0x00005096      0f84c1010000   je 0x525d
0x0000509c      85db           test ebx, ebx
0x0000509e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000050a3      0f9544240f     setne byte [rsp + 0xf]
0x000050a8      4531e4         xor r12d, r12d
0x000050ab      4889df         mov rdi, rbx
0x000050ae      e8bdc4ffff     call sym.imp.strlen
0x000050b3      48895c2448     mov qword [rsp + 0x48], rbx
0x000050b8      4889442418     mov qword [rsp + 0x18], rax
0x000050bd      c644240e01     mov byte [rsp + 0xe], 1
0x000050c2      c644247c00     mov byte [rsp + 0x7c], 0
0x000050c7      48c744245000.  mov qword [rsp + 0x50], 0
0x000050d0      c644240d01     mov byte [rsp + 0xd], 1
0x000050d5      e999f2ffff     jmp 0x4373
0x000050da      c644240e01     mov byte [rsp + 0xe], 1
0x000050df      c644247c00     mov byte [rsp + 0x7c], 0
0x000050e4      4531e4         xor r12d, r12d
0x000050e7      48c744245000.  mov qword [rsp + 0x50], 0
0x000050f0      c644240f00     mov byte [rsp + 0xf], 0
0x000050f5      4531ff         xor r15d, r15d
0x000050f8      c644240d00     mov byte [rsp + 0xd], 0
0x000050fd      48c744241800.  mov qword [rsp + 0x18], 0
0x00005106      48c744244800.  mov qword [rsp + 0x48], 0
0x0000510f      e95ff2ffff     jmp 0x4373
0x00005114      c644240e01     mov byte [rsp + 0xe], 1
0x00005119      c644247c00     mov byte [rsp + 0x7c], 0
0x0000511e      4531e4         xor r12d, r12d
0x00005121      48c744245000.  mov qword [rsp + 0x50], 0
0x0000512a      c644240f01     mov byte [rsp + 0xf], 1
0x0000512f      c644240d01     mov byte [rsp + 0xd], 1
0x00005134      e91af2ffff     jmp 0x4353
0x00005139      4d39fd         cmp r13, r15
0x0000513c      7605           jbe 0x5143
0x0000513e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00005143      488d4102       lea rax, [rcx + 2]
0x00005147      4939c5         cmp r13, rax
0x0000514a      7606           jbe 0x5152
0x0000514c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00005152      4489e0         mov eax, r12d
0x00005155      4c8d7903       lea r15, [rcx + 3]
0x00005159      4531e4         xor r12d, r12d
0x0000515c      bb30000000     mov ebx, 0x30                           ; '0'
0x00005161      e962f3ffff     jmp 0x44c8
0x00005166      662e0f1f8400.  nop word cs:[rax + rax]
0x00005170      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00005175      4c89dd         mov rbp, r11
0x00005178      885c240d       mov byte [rsp + 0xd], bl
0x0000517c      e9a8fcffff     jmp 0x4e29
0x00005181      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00005186      4531e4         xor r12d, r12d
0x00005189      e902fbffff     jmp 0x4c90
0x0000518e      4531d2         xor r10d, r10d
0x00005191      e9b7fbffff     jmp 0x4d4d
0x00005196      48c744245000.  mov qword [rsp + 0x50], 0
0x0000519f      c644240e01     mov byte [rsp + 0xe], 1
0x000051a4      4531e4         xor r12d, r12d
0x000051a7      c644247c00     mov byte [rsp + 0x7c], 0
0x000051ac      e9dafdffff     jmp 0x4f8b
0x000051b1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000051b6      4c89f6         mov rsi, r14
0x000051b9      4c89e9         mov rcx, r13
0x000051bc      4889d8         mov rax, rbx
0x000051bf      4889df         mov rdi, rbx
0x000051c2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000051c8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000051cd      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x000051d5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x000051d8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000051de      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000051e6      4c8b742440     mov r14, qword [rsp + 0x40]
0x000051eb      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000051f0      7326           jae 0x5218
0x000051f2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000051f5      7510           jne 0x5207
0x000051f7      eb1f           jmp 0x5218
0x000051f9      0f1f80000000.  nop dword [rax]
0x00005200      41803c0100     cmp byte [r9 + rax], 0
0x00005205      740e           je 0x5215
0x00005207      4883c001       add rax, 1
0x0000520b      488d540500     lea rdx, [rbp + rax]
0x00005210      4939d3         cmp r11, rdx
0x00005213      77eb           ja 0x5200
0x00005215      4889c7         mov rdi, rax
0x00005218      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000521d      4531e4         xor r12d, r12d
0x00005220      e961faffff     jmp 0x4c86
0x00005225      4889df         mov rdi, rbx
0x00005228      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000522e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00005233      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00005239      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00005241      4531e4         xor r12d, r12d
0x00005244      4c8b742440     mov r14, qword [rsp + 0x40]
0x00005249      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000524e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00005253      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00005258      e929faffff     jmp 0x4c86
0x0000525d      488b542468     mov rdx, qword [rsp + 0x68]
0x00005262      0fb602         movzx eax, byte [rdx]
0x00005265      84c0           test al, al
0x00005267      0f842ffeffff   je 0x509c
0x0000526d      0f1f00         nop dword [rax]
0x00005270      4d39fd         cmp r13, r15
0x00005273      7604           jbe 0x5279
0x00005275      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00005279      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000527d      420fb6043a     movzx eax, byte [rdx + r15]
0x00005282      84c0           test al, al
0x00005284      75ea           jne 0x5270
0x00005286      e911feffff     jmp 0x509c
0x0000528b      89d0           mov eax, edx
0x0000528d      e955f5ffff     jmp 0x47e7
0x00005292      0fb61c08       movzx ebx, byte [rax + rcx]
0x00005296      80fb3e         cmp bl, 0x3e
0x00005299      0f8771f8ffff   ja 0x4b10
0x0000529f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000052a9      480fa3d8       bt rax, rbx
0x000052ad      0f835df8ffff   jae 0x4b10
0x000052b3      807c240f00     cmp byte [rsp + 0xf], 0
0x000052b8      0f85e4010000   jne 0x54a2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x000052be      4d39fd         cmp r13, r15
0x000052c1      7605           jbe 0x52c8
0x000052c3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x000052c8      498d4701       lea rax, [r15 + 1]
0x000052cc      4939c5         cmp r13, rax
0x000052cf      7606           jbe 0x52d7
0x000052d1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000052d7      498d4702       lea rax, [r15 + 2]
0x000052db      4939c5         cmp r13, rax
0x000052de      7606           jbe 0x52e6
0x000052e0      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000052e6      498d4703       lea rax, [r15 + 3]
0x000052ea      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x000052ed      7606           jbe 0x52f5
0x000052ef      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x000052f5      4983c704       add r15, 4
0x000052f9      31d2           xor edx, edx
0x000052fb      4531e4         xor r12d, r12d
0x000052fe      31c0           xor eax, eax
0x00005300      4889cd         mov rbp, rcx
0x00005303      e9c0f1ffff     jmp 0x44c8
0x00005308      85db           test ebx, ebx
0x0000530a      0f8488010000   je 0x5498
0x00005310      488d05fe2200.  lea rax, [0x00007615]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005317      c644240e01     mov byte [rsp + 0xe], 1
0x0000531c      c644247c00     mov byte [rsp + 0x7c], 0
0x00005321      4531e4         xor r12d, r12d
0x00005324      48c744245000.  mov qword [rsp + 0x50], 0
0x0000532d      c644240f01     mov byte [rsp + 0xf], 1
0x00005332      c644240d00     mov byte [rsp + 0xd], 0
0x00005337      48c744241801.  mov qword [rsp + 0x18], 1
0x00005340      4531ff         xor r15d, r15d
0x00005343      4889442448     mov qword [rsp + 0x48], rax
0x00005348      e926f0ffff     jmp 0x4373
0x0000534d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00005350      4c89dd         mov rbp, r11
0x00005353      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00005358      e9ccfaffff     jmp 0x4e29
0x0000535d      488d05af2200.  lea rax, str.l______l                   ; 0x7613 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005364      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00005369      c644247c00     mov byte [rsp + 0x7c], 0
0x0000536e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00005371      48c744245000.  mov qword [rsp + 0x50], 0
0x0000537a      c644240f01     mov byte [rsp + 0xf], 1
0x0000537f      c644240d01     mov byte [rsp + 0xd], 1
0x00005384      48c744241801.  mov qword [rsp + 0x18], 1
0x0000538d      4531ff         xor r15d, r15d
0x00005390      4889442448     mov qword [rsp + 0x48], rax
0x00005395      e9d9efffff     jmp 0x4373
0x0000539a      89d0           mov eax, edx
0x0000539c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000053a1      4885db         test rbx, rbx
0x000053a4      742c           je 0x53d2
0x000053a6      84c0           test al, al
0x000053a8      7428           je 0x53d2
0x000053aa      0fb60b         movzx ecx, byte [rbx]
0x000053ad      4889d8         mov rax, rbx
0x000053b0      84c9           test cl, cl
0x000053b2      741e           je 0x53d2
0x000053b4      4c89fa         mov rdx, r15
0x000053b7      4c29f8         sub rax, r15
0x000053ba      4939d5         cmp r13, rdx
0x000053bd      7604           jbe 0x53c3
0x000053bf      41880c16       mov byte [r14 + rdx], cl
0x000053c3      4883c201       add rdx, 1
0x000053c7      0fb60c10       movzx ecx, byte [rax + rdx]
0x000053cb      84c9           test cl, cl
0x000053cd      75eb           jne 0x53ba
0x000053cf      4989d7         mov r15, rdx
0x000053d2      4d39fd         cmp r13, r15
0x000053d5      0f869efaffff   jbe 0x4e79
0x000053db      43c6043e00     mov byte [r14 + r15], 0
0x000053e0      e994faffff     jmp 0x4e79
0x000053e5      837c240802     cmp dword [rsp + 8], 2
0x000053ea      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000053ef      4c89dd         mov rbp, r11
0x000053f2      0f94c0         sete al
0x000053f5      885c240d       mov byte [rsp + 0xd], bl
0x000053f9      e92bfaffff     jmp 0x4e29
0x000053fe      8b742408       mov esi, dword [rsp + 8]
0x00005402      4889cf         mov rdi, rcx
0x00005405      e8a6edffff     call sym.gettext_quote.part.1
0x0000540a      4889442468     mov qword [rsp + 0x68], rax
0x0000540f      e952fcffff     jmp 0x5066
0x00005414      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00005418      4889cf         mov rdi, rcx
0x0000541b      e890edffff     call sym.gettext_quote.part.1
0x00005420      4889442460     mov qword [rsp + 0x60], rax
0x00005425      e967fcffff     jmp 0x5091
0x0000542a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000542f      4c89dd         mov rbp, r11
0x00005432      89d0           mov eax, edx
0x00005434      885c240d       mov byte [rsp + 0xd], bl
0x00005438      e9ecf9ffff     jmp 0x4e29
0x0000543d      4883ec08       sub rsp, 8
0x00005441      41b805000000   mov r8d, 5
0x00005447      4c89d9         mov rcx, r11
0x0000544a      ff742468       push qword [rsp + 0x68]
0x0000544e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00005452      4c89f7         mov rdi, r14
0x00005455      ff742438       push qword [rsp + 0x38]
0x00005459      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00005461      488b542430     mov rdx, qword [rsp + 0x30]
0x00005466      488b742470     mov rsi, qword [rsp + 0x70]
0x0000546b      e830eeffff     call sym.quotearg_buffer_restyled
0x00005470      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00005474      4989c7         mov r15, rax
0x00005477      e9fdf9ffff     jmp 0x4e79
0x0000547c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00005481      e916ffffff     jmp 0x539c
0x00005486      c74424080200.  mov dword [rsp + 8], 2
0x0000548e      e996f9ffff     jmp 0x4e29
0x00005493      e8f8c0ffff     call sym.imp.__stack_chk_fail
0x00005498      c644240d00     mov byte [rsp + 0xd], 0
0x0000549d      e96ffaffff     jmp 0x4f11
0x000054a2      4c89dd         mov rbp, r11
0x000054a5      e996f9ffff     jmp 0x4e40
0x000054aa      c644240e01     mov byte [rsp + 0xe], 1
0x000054af      31c0           xor eax, eax
0x000054b1      4531e4         xor r12d, r12d
0x000054b4      48c744245000.  mov qword [rsp + 0x50], 0
0x000054bd      e9a2f5ffff     jmp 0x4a64
0x000054c2      4c89ea         mov rdx, r13
0x000054c5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000054ca      e9f3f5ffff     jmp 0x4ac2
0x000054cf      e8ecbfffff     call sym.imp.abort
0x000054d4      6690           nop
0x000054d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x000054e0      4157           push r15
0x000054e2      4156           push r14
0x000054e4      4c63ff         movsxd r15, edi
0x000054e7      4155           push r13
0x000054e9      4154           push r12
0x000054eb      4989d6         mov r14, rdx
0x000054ee      55             push rbp
0x000054ef      53             push rbx
0x000054f0      4889cd         mov rbp, rcx
0x000054f3      4883ec28       sub rsp, 0x28
0x000054f7      4889742408     mov qword [rsp + 8], rsi
0x000054fc      e8cfbfffff     call sym.imp.__errno_location
0x00005501      4989c5         mov r13, rax
0x00005504      8b00           mov eax, dword [rax]
0x00005506      4585ff         test r15d, r15d
0x00005509      488b1d704b20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20a080:8]=0x20a090 obj.slotvec0
0x00005510      89442418       mov dword [rsp + 0x18], eax
0x00005514      0f8867010000   js 0x5681
0x0000551a      44393d574b20.  cmp dword [obj.nslots], r15d            ; [0x20a078:4]=1
0x00005521      7f62           jg 0x5585
0x00005523      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000552a      0f8456010000   je 0x5686
0x00005530      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00005534      488d05554b20.  lea rax, obj.slotvec0                   ; 0x20a090
0x0000553b      4963f4         movsxd rsi, r12d
0x0000553e      48c1e604       shl rsi, 4
0x00005542      4839c3         cmp rbx, rax
0x00005545      0f8415010000   je 0x5660
0x0000554b      4889df         mov rdi, rbx
0x0000554e      e85d110000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00005553      4889c3         mov rbx, rax
0x00005556      488905234b20.  mov qword [obj.slotvec], rax            ; [0x20a080:8]=0x20a090 obj.slotvec0
0x0000555d      48633d144b20.  movsxd rdi, dword [obj.nslots]          ; [0x20a078:4]=1
0x00005564      4489e2         mov edx, r12d
0x00005567      31f6           xor esi, esi
0x00005569      29fa           sub edx, edi
0x0000556b      48c1e704       shl rdi, 4
0x0000556f      4863d2         movsxd rdx, edx
0x00005572      4801df         add rdi, rbx
0x00005575      48c1e204       shl rdx, 4
0x00005579      e882c0ffff     call sym.imp.memset
0x0000557e      448925f34a20.  mov dword [obj.nslots], r12d            ; [0x20a078:4]=1
0x00005585      8b4504         mov eax, dword [rbp + 4]
0x00005588      49c1e704       shl r15, 4
0x0000558c      4883ec08       sub rsp, 8
0x00005590      4c01fb         add rbx, r15
0x00005593      4c8d7d08       lea r15, [rbp + 8]
0x00005597      448b4500       mov r8d, dword [rbp]
0x0000559b      4c8b1b         mov r11, qword [rbx]
0x0000559e      4c8b6308       mov r12, qword [rbx + 8]
0x000055a2      4c89f1         mov rcx, r14
0x000055a5      83c801         or eax, 1
0x000055a8      89442424       mov dword [rsp + 0x24], eax
0x000055ac      ff7530         push qword [rbp + 0x30]
0x000055af      4189c1         mov r9d, eax
0x000055b2      ff7528         push qword [rbp + 0x28]
0x000055b5      4157           push r15
0x000055b7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000055ba      488b542428     mov rdx, qword [rsp + 0x28]
0x000055bf      4c89e7         mov rdi, r12
0x000055c2      4c895c2430     mov qword [rsp + 0x30], r11
0x000055c7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x000055cc      4883c420       add rsp, 0x20
0x000055d0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x000055d5      4939c3         cmp r11, rax
0x000055d8      7767           ja 0x5641
0x000055da      488d7001       lea rsi, [rax + 1]
0x000055de      488d053b4b20.  lea rax, obj.slot0                      ; 0x20a120
0x000055e5      4939c4         cmp r12, rax
0x000055e8      488933         mov qword [rbx], rsi
0x000055eb      7412           je 0x55ff
0x000055ed      4c89e7         mov rdi, r12
0x000055f0      4889742410     mov qword [rsp + 0x10], rsi
0x000055f5      e8b6beffff     call sym.imp.free
0x000055fa      488b742410     mov rsi, qword [rsp + 0x10]
0x000055ff      4889f7         mov rdi, rsi
0x00005602      4889742410     mov qword [rsp + 0x10], rsi
0x00005607      e844100000     call sym.xmalloc
0x0000560c      4883ec08       sub rsp, 8
0x00005610      48894308       mov qword [rbx + 8], rax
0x00005614      448b4500       mov r8d, dword [rbp]
0x00005618      ff7530         push qword [rbp + 0x30]
0x0000561b      ff7528         push qword [rbp + 0x28]
0x0000561e      4c89f1         mov rcx, r14
0x00005621      4157           push r15
0x00005623      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00005628      4889c7         mov rdi, rax
0x0000562b      488b542428     mov rdx, qword [rsp + 0x28]
0x00005630      488b742430     mov rsi, qword [rsp + 0x30]
0x00005635      4989c4         mov r12, rax
0x00005638      e863ecffff     call sym.quotearg_buffer_restyled
0x0000563d      4883c420       add rsp, 0x20
0x00005641      8b442418       mov eax, dword [rsp + 0x18]
0x00005645      41894500       mov dword [r13], eax
0x00005649      4883c428       add rsp, 0x28
0x0000564d      4c89e0         mov rax, r12
0x00005650      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00005651      5d             pop rbp
0x00005652      415c           pop r12
0x00005654      415d           pop r13
0x00005656      415e           pop r14
0x00005658      415f           pop r15
0x0000565a      c3             ret
0x0000565b      0f1f440000     nop dword [rax + rax]
0x00005660      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00005662      e849100000     call sym.xrealloc
0x00005667      660f6f05214a.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000566f      4889c3         mov rbx, rax
0x00005672      488905074a20.  mov qword [obj.slotvec], rax            ; [0x20a080:8]=0x20a090 obj.slotvec0
0x00005679      0f1100         movups xmmword [rax], xmm0
0x0000567c      e9dcfeffff     jmp 0x555d
0x00005681      e83abeffff     call sym.imp.abort
0x00005686      e815120000     call sym.xalloc_die
0x0000568b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00005690      4154           push r12
0x00005692      55             push rbp
0x00005693      53             push rbx
0x00005694      4889fb         mov rbx, rdi
0x00005697      e834beffff     call sym.imp.__errno_location
0x0000569c      448b20         mov r12d, dword [rax]
0x0000569f      4889c5         mov rbp, rax
0x000056a2      488d05774b20.  lea rax, obj.default_quoting_options    ; 0x20a220
0x000056a9      4885db         test rbx, rbx
0x000056ac      be38000000     mov esi, 0x38                           ; '8'
0x000056b1      480f44d8       cmove rbx, rax
0x000056b5      4889df         mov rdi, rbx
0x000056b8      e893110000     call sym.xmemdup
0x000056bd      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000056c1      5b             pop rbx
0x000056c2      5d             pop rbp
0x000056c3      415c           pop r12
0x000056c5      c3             ret
0x000056c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x000056d0      488d05494b20.  lea rax, obj.default_quoting_options    ; 0x20a220
0x000056d7      4885ff         test rdi, rdi
0x000056da      480f44f8       cmove rdi, rax
0x000056de      8b07           mov eax, dword [rdi]
0x000056e0      c3             ret
0x000056e1      0f1f440000     nop dword [rax + rax]
0x000056e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x000056f0      488d05294b20.  lea rax, obj.default_quoting_options    ; 0x20a220
0x000056f7      4885ff         test rdi, rdi
0x000056fa      480f44f8       cmove rdi, rax
0x000056fe      8937           mov dword [rdi], esi
0x00005700      c3             ret
0x00005701      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00005706      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00005710      488d05094b20.  lea rax, obj.default_quoting_options    ; 0x20a220
0x00005717      4885ff         test rdi, rdi
0x0000571a      89f1           mov ecx, esi
0x0000571c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00005720      89f0           mov eax, esi
0x00005722      83e11f         and ecx, 0x1f
0x00005725      c0e805         shr al, 5
0x00005728      0fb6c0         movzx eax, al
0x0000572b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00005730      8b37           mov esi, dword [rdi]
0x00005732      89f0           mov eax, esi
0x00005734      d3e8           shr eax, cl
0x00005736      31c2           xor edx, eax
0x00005738      83e001         and eax, 1
0x0000573b      83e201         and edx, 1
0x0000573e      d3e2           shl edx, cl
0x00005740      31f2           xor edx, esi
0x00005742      8917           mov dword [rdi], edx
0x00005744      c3             ret
0x00005745      90             nop
0x00005746      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00005750      488d05c94a20.  lea rax, obj.default_quoting_options    ; 0x20a220
0x00005757      4885ff         test rdi, rdi
0x0000575a      480f44f8       cmove rdi, rax
0x0000575e      8b4704         mov eax, dword [rdi + 4]
0x00005761      897704         mov dword [rdi + 4], esi
0x00005764      c3             ret
0x00005765      90             nop
0x00005766      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00005770      488d05a94a20.  lea rax, obj.default_quoting_options    ; 0x20a220
0x00005777      4885ff         test rdi, rdi
0x0000577a      480f44f8       cmove rdi, rax
0x0000577e      4885f6         test rsi, rsi
0x00005781      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00005787      740e           je 0x5797
0x00005789      4885d2         test rdx, rdx
0x0000578c      7409           je 0x5797
0x0000578e      48897728       mov qword [rdi + 0x28], rsi
0x00005792      48895730       mov qword [rdi + 0x30], rdx
0x00005796      c3             ret
0x00005797      4883ec08       sub rsp, 8
0x0000579b      e820bdffff     call sym.imp.abort
;-- quotearg_buffer:
0x000057a0      4157           push r15
0x000057a2      4156           push r14
0x000057a4      488d05754a20.  lea rax, obj.default_quoting_options    ; 0x20a220
0x000057ab      4155           push r13
0x000057ad      4154           push r12
0x000057af      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x000057b2      55             push rbp
0x000057b3      53             push rbx
0x000057b4      4c89c3         mov rbx, r8
0x000057b7      4989f6         mov r14, rsi
0x000057ba      4989d7         mov r15, rdx
0x000057bd      4883ec18       sub rsp, 0x18
0x000057c1      4d85c0         test r8, r8
0x000057c4      480f44d8       cmove rbx, rax
0x000057c8      48894c2408     mov qword [rsp + 8], rcx
0x000057cd      e8febcffff     call sym.imp.__errno_location
0x000057d2      448b20         mov r12d, dword [rax]
0x000057d5      4889c5         mov rbp, rax
0x000057d8      488d4308       lea rax, [rbx + 8]
0x000057dc      4883ec08       sub rsp, 8
0x000057e0      448b4b04       mov r9d, dword [rbx + 4]
0x000057e4      ff7330         push qword [rbx + 0x30]
0x000057e7      448b03         mov r8d, dword [rbx]
0x000057ea      ff7328         push qword [rbx + 0x28]
0x000057ed      4c89fa         mov rdx, r15
0x000057f0      50             push rax
0x000057f1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000057f6      4c89f6         mov rsi, r14
0x000057f9      4c89ef         mov rdi, r13
0x000057fc      e89feaffff     call sym.quotearg_buffer_restyled
0x00005801      44896500       mov dword [rbp], r12d
0x00005805      4883c438       add rsp, 0x38
0x00005809      5b             pop rbx
0x0000580a      5d             pop rbp
0x0000580b      415c           pop r12
0x0000580d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000580f      415e           pop r14
0x00005811      415f           pop r15
0x00005813      c3             ret
0x00005814      6690           nop
0x00005816      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00005820      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00005822      4156           push r14
0x00005824      488d05f54920.  lea rax, obj.default_quoting_options    ; 0x20a220
0x0000582b      4155           push r13
0x0000582d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000582f      4989d4         mov r12, rdx
0x00005832      55             push rbp
0x00005833      53             push rbx
0x00005834      4889cb         mov rbx, rcx
0x00005837      4989fe         mov r14, rdi
0x0000583a      4989f7         mov r15, rsi
0x0000583d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00005841      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00005844      480f44d8       cmove rbx, rax
0x00005848      31ed           xor ebp, ebp
0x0000584a      e881bcffff     call sym.imp.__errno_location
0x0000584f      4d85e4         test r12, r12
0x00005852      4989c5         mov r13, rax
0x00005855      8b00           mov eax, dword [rax]
0x00005857      400f94c5       sete bpl
0x0000585b      0b6b04         or ebp, dword [rbx + 4]
0x0000585e      4c8d5308       lea r10, [rbx + 8]
0x00005862      4883ec08       sub rsp, 8
0x00005866      448b03         mov r8d, dword [rbx]
0x00005869      4c89f9         mov rcx, r15
0x0000586c      89442414       mov dword [rsp + 0x14], eax
0x00005870      ff7330         push qword [rbx + 0x30]
0x00005873      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00005876      ff7328         push qword [rbx + 0x28]
0x00005879      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000587b      31f6           xor esi, esi
0x0000587d      4189e9         mov r9d, ebp
0x00005880      31ff           xor edi, edi
0x00005882      4c89542440     mov qword [rsp + 0x40], r10
0x00005887      e814eaffff     call sym.quotearg_buffer_restyled
0x0000588c      488d7001       lea rsi, [rax + 1]
0x00005890      4889442448     mov qword [rsp + 0x48], rax
0x00005895      4883c420       add rsp, 0x20
0x00005899      4889f7         mov rdi, rsi
0x0000589c      4889742418     mov qword [rsp + 0x18], rsi
0x000058a1      e8aa0d0000     call sym.xmalloc
0x000058a6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x000058ab      4883ec08       sub rsp, 8
0x000058af      ff7330         push qword [rbx + 0x30]
0x000058b2      ff7328         push qword [rbx + 0x28]
0x000058b5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000058ba      4189e9         mov r9d, ebp
0x000058bd      448b03         mov r8d, dword [rbx]
0x000058c0      4c89f9         mov rcx, r15
0x000058c3      4c89f2         mov rdx, r14
0x000058c6      4889c7         mov rdi, rax
0x000058c9      4152           push r10
0x000058cb      488b742438     mov rsi, qword [rsp + 0x38]
0x000058d0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x000058d5      8b44242c       mov eax, dword [rsp + 0x2c]
0x000058d9      4883c420       add rsp, 0x20
0x000058dd      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x000058e0      41894500       mov dword [r13], eax
0x000058e4      7409           je 0x58ef
0x000058e6      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x000058eb      4d891c24       mov qword [r12], r11
0x000058ef      488b442410     mov rax, qword [rsp + 0x10]
0x000058f4      4883c438       add rsp, 0x38
0x000058f8      5b             pop rbx
0x000058f9      5d             pop rbp
0x000058fa      415c           pop r12
0x000058fc      415d           pop r13
0x000058fe      415e           pop r14
0x00005900      415f           pop r15
0x00005902      c3             ret
0x00005903      0f1f00         nop dword [rax]
0x00005906      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00005910      4889d1         mov rcx, rdx
0x00005913      31d2           xor edx, edx
0x00005915      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000591a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00005920      8b0552472000   mov eax, dword [obj.nslots]             ; [0x20a078:4]=1
0x00005926      4154           push r12
0x00005928      4c8b25514720.  mov r12, qword [obj.slotvec]            ; [0x20a080:8]=0x20a090 obj.slotvec0
0x0000592f      55             push rbp
0x00005930      53             push rbx
0x00005931      83f801         cmp eax, 1
0x00005934      7e2b           jle 0x5961                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00005936      83e802         sub eax, 2
0x00005939      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000593e      48c1e004       shl rax, 4
0x00005942      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00005947      660f1f840000.  nop word [rax + rax]
0x00005950      488b3b         mov rdi, qword [rbx]
0x00005953      4883c310       add rbx, 0x10
0x00005957      e854bbffff     call sym.imp.free
0x0000595c      4839eb         cmp rbx, rbp
0x0000595f      75ef           jne 0x5950
0x00005961      498b7c2408     mov rdi, qword [r12 + 8]
0x00005966      488d1db34720.  lea rbx, obj.slot0                      ; 0x20a120
0x0000596d      4839df         cmp rdi, rbx
0x00005970      7417           je 0x5989
0x00005972      e839bbffff     call sym.imp.free
0x00005977      48c7050e4720.  mov qword [obj.slotvec0], 0x100         ; [0x20a090:8]=256
0x00005982      48891d0f4720.  mov qword [0x0020a098], rbx             ; [0x20a098:8]=0x20a120 obj.slot0
0x00005989      488d1d004720.  lea rbx, obj.slotvec0                   ; 0x20a090
0x00005990      4939dc         cmp r12, rbx
0x00005993      740f           je 0x59a4
0x00005995      4c89e7         mov rdi, r12
0x00005998      e813bbffff     call sym.imp.free
0x0000599d      48891ddc4620.  mov qword [obj.slotvec], rbx            ; [0x20a080:8]=0x20a090 obj.slotvec0
0x000059a4      5b             pop rbx
0x000059a5      c705c9462000.  mov dword [obj.nslots], 1               ; [0x20a078:4]=1
0x000059af      5d             pop rbp
0x000059b0      415c           pop r12
0x000059b2      c3             ret
0x000059b3      0f1f00         nop dword [rax]
0x000059b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x000059c0      488d0d594820.  lea rcx, obj.default_quoting_options    ; 0x20a220
0x000059c7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000059ce      e90dfbffff     jmp sym.quotearg_n_options
0x000059d3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x000059d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x000059e0      488d0d394820.  lea rcx, obj.default_quoting_options    ; 0x20a220
0x000059e7      e9f4faffff     jmp sym.quotearg_n_options
0x000059ec      0f1f4000       nop dword [rax]
;-- quotearg:
0x000059f0      488d0d294820.  lea rcx, obj.default_quoting_options    ; 0x20a220
0x000059f7      4889fe         mov rsi, rdi
0x000059fa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005a01      31ff           xor edi, edi
0x00005a03      e9d8faffff     jmp sym.quotearg_n_options
0x00005a08      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00005a10      488d0d094820.  lea rcx, obj.default_quoting_options    ; 0x20a220
0x00005a17      4889f2         mov rdx, rsi
0x00005a1a      4889fe         mov rsi, rdi
0x00005a1d      31ff           xor edi, edi
0x00005a1f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00005a24      6690           nop
0x00005a26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00005a30      4883ec48       sub rsp, 0x48
0x00005a34      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00005a37      64488b142528.  mov rdx, qword fs:[0x28]
0x00005a40      4889542438     mov qword [rsp + 0x38], rdx
0x00005a45      31d2           xor edx, edx
0x00005a47      83fe0a         cmp esi, 0xa
0x00005a4a      7468           je 0x5ab4
0x00005a4c      893424         mov dword [rsp], esi
0x00005a4f      4889e1         mov rcx, rsp
0x00005a52      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005a59      4889c6         mov rsi, rax
0x00005a5c      48c744240400.  mov qword [rsp + 4], 0
0x00005a65      48c744240c00.  mov qword [rsp + 0xc], 0
0x00005a6e      48c744241400.  mov qword [rsp + 0x14], 0
0x00005a77      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005a80      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00005a89      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005a92      c74424340000.  mov dword [rsp + 0x34], 0
0x00005a9a      e841faffff     call sym.quotearg_n_options
0x00005a9f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00005aa4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005aad      750a           jne 0x5ab9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00005aaf      4883c448       add rsp, 0x48
0x00005ab3      c3             ret
0x00005ab4      e807baffff     call sym.imp.abort
0x00005ab9      e8d2baffff     call sym.imp.__stack_chk_fail
0x00005abe      6690           nop
;-- quotearg_n_style_mem:
0x00005ac0      4883ec48       sub rsp, 0x48
0x00005ac4      4889d0         mov rax, rdx
0x00005ac7      4889ca         mov rdx, rcx
0x00005aca      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00005ad3      48894c2438     mov qword [rsp + 0x38], rcx
0x00005ad8      31c9           xor ecx, ecx
0x00005ada      83fe0a         cmp esi, 0xa
0x00005add      7461           je 0x5b40
0x00005adf      893424         mov dword [rsp], esi
0x00005ae2      4889e1         mov rcx, rsp
0x00005ae5      4889c6         mov rsi, rax
0x00005ae8      48c744240400.  mov qword [rsp + 4], 0
0x00005af1      48c744240c00.  mov qword [rsp + 0xc], 0
0x00005afa      48c744241400.  mov qword [rsp + 0x14], 0
0x00005b03      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005b0c      48c744242400.  mov qword [rsp + 0x24], 0
0x00005b15      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005b1e      c74424340000.  mov dword [rsp + 0x34], 0
0x00005b26      e8b5f9ffff     call sym.quotearg_n_options
0x00005b2b      488b542438     mov rdx, qword [rsp + 0x38]
0x00005b30      644833142528.  xor rdx, qword fs:[0x28]
0x00005b39      750a           jne 0x5b45
0x00005b3b      4883c448       add rsp, 0x48
0x00005b3f      c3             ret
0x00005b40      e87bb9ffff     call sym.imp.abort
0x00005b45      e846baffff     call sym.imp.__stack_chk_fail
0x00005b4a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00005b50      4889f2         mov rdx, rsi
0x00005b53      89fe           mov esi, edi
0x00005b55      31ff           xor edi, edi
0x00005b57      e9d4feffff     jmp sym.quotearg_n_style
0x00005b5c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00005b60      4889d1         mov rcx, rdx
0x00005b63      4889f2         mov rdx, rsi
0x00005b66      89fe           mov esi, edi
0x00005b68      31ff           xor edi, edi
0x00005b6a      e951ffffff     jmp sym.quotearg_n_style_mem
0x00005b6f      90             nop
;-- quotearg_char_mem:
0x00005b70      4883ec48       sub rsp, 0x48
0x00005b74      89d1           mov ecx, edx
0x00005b76      64488b042528.  mov rax, qword fs:[0x28]
0x00005b7f      4889442438     mov qword [rsp + 0x38], rax
0x00005b84      31c0           xor eax, eax
0x00005b86      488b05c34620.  mov rax, qword [0x0020a250]             ; [0x20a250:8]=0
0x00005b8d      4989e0         mov r8, rsp
0x00005b90      83e11f         and ecx, 0x1f
0x00005b93      660f6f058546.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005b9b      4889442430     mov qword [rsp + 0x30], rax
0x00005ba0      89d0           mov eax, edx
0x00005ba2      0f290424       movaps xmmword [rsp], xmm0
0x00005ba6      c0e805         shr al, 5
0x00005ba9      0fb6c0         movzx eax, al
0x00005bac      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00005bb1      660f6f057746.  movdqa xmm0, xmmword [0x0020a230]
0x00005bb9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005bbe      660f6f057a46.  movdqa xmm0, xmmword [0x0020a240]
0x00005bc6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005bcb      418b11         mov edx, dword [r9]
0x00005bce      89d0           mov eax, edx
0x00005bd0      d3e8           shr eax, cl
0x00005bd2      f7d0           not eax
0x00005bd4      83e001         and eax, 1
0x00005bd7      d3e0           shl eax, cl
0x00005bd9      4c89c1         mov rcx, r8
0x00005bdc      31d0           xor eax, edx
0x00005bde      4889f2         mov rdx, rsi
0x00005be1      4889fe         mov rsi, rdi
0x00005be4      418901         mov dword [r9], eax
0x00005be7      31ff           xor edi, edi
0x00005be9      e8f2f8ffff     call sym.quotearg_n_options
0x00005bee      488b742438     mov rsi, qword [rsp + 0x38]
0x00005bf3      644833342528.  xor rsi, qword fs:[0x28]
0x00005bfc      7505           jne 0x5c03
0x00005bfe      4883c448       add rsp, 0x48
0x00005c02      c3             ret
0x00005c03      e888b9ffff     call sym.imp.__stack_chk_fail
0x00005c08      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00005c10      400fbed6       movsx edx, sil
0x00005c14      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00005c1b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00005c20      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005c25      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00005c2c      e93fffffff     jmp sym.quotearg_char_mem
0x00005c31      0f1f440000     nop dword [rax + rax]
0x00005c36      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00005c40      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005c45      e926ffffff     jmp sym.quotearg_char_mem
0x00005c4a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00005c50      4883ec48       sub rsp, 0x48
0x00005c54      4889d0         mov rax, rdx
0x00005c57      64488b142528.  mov rdx, qword fs:[0x28]
0x00005c60      4889542438     mov qword [rsp + 0x38], rdx
0x00005c65      31d2           xor edx, edx
0x00005c67      83fe0a         cmp esi, 0xa
0x00005c6a      7468           je 0x5cd4
0x00005c6c      893424         mov dword [rsp], esi
0x00005c6f      4889e1         mov rcx, rsp
0x00005c72      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005c79      4889c6         mov rsi, rax
0x00005c7c      48c744240400.  mov qword [rsp + 4], 0
0x00005c85      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00005c8e      48c744241400.  mov qword [rsp + 0x14], 0
0x00005c97      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005ca0      48c744242400.  mov qword [rsp + 0x24], 0
0x00005ca9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005cb2      c74424340000.  mov dword [rsp + 0x34], 0
0x00005cba      e821f8ffff     call sym.quotearg_n_options
0x00005cbf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00005cc4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005ccd      750a           jne 0x5cd9
0x00005ccf      4883c448       add rsp, 0x48
0x00005cd3      c3             ret
0x00005cd4      e8e7b7ffff     call sym.imp.abort
0x00005cd9      e8b2b8ffff     call sym.imp.__stack_chk_fail
0x00005cde      6690           nop
;-- quotearg_n_custom_mem:
0x00005ce0      4883ec48       sub rsp, 0x48
0x00005ce4      4989c9         mov r9, rcx
0x00005ce7      488b0d624520.  mov rcx, qword [0x0020a250]             ; [0x20a250:8]=0
0x00005cee      660f6f052a45.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005cf6      64488b042528.  mov rax, qword fs:[0x28]
0x00005cff      4889442438     mov qword [rsp + 0x38], rax
0x00005d04      31c0           xor eax, eax
0x00005d06      0f290424       movaps xmmword [rsp], xmm0
0x00005d0a      4885f6         test rsi, rsi
0x00005d0d      48894c2430     mov qword [rsp + 0x30], rcx
0x00005d12      c704240a0000.  mov dword [rsp], 0xa
0x00005d19      660f6f050f45.  movdqa xmm0, xmmword [0x0020a230]
0x00005d21      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005d26      660f6f051245.  movdqa xmm0, xmmword [0x0020a240]
0x00005d2e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005d33      7432           je 0x5d67
0x00005d35      4885d2         test rdx, rdx
0x00005d38      742d           je 0x5d67
0x00005d3a      4889742428     mov qword [rsp + 0x28], rsi
0x00005d3f      4889542430     mov qword [rsp + 0x30], rdx
0x00005d44      4889e1         mov rcx, rsp
0x00005d47      4c89c2         mov rdx, r8
0x00005d4a      4c89ce         mov rsi, r9
0x00005d4d      e88ef7ffff     call sym.quotearg_n_options
0x00005d52      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005d57      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005d60      750a           jne 0x5d6c
0x00005d62      4883c448       add rsp, 0x48
0x00005d66      c3             ret
0x00005d67      e854b7ffff     call sym.imp.abort
0x00005d6c      e81fb8ffff     call sym.imp.__stack_chk_fail
0x00005d71      0f1f440000     nop dword [rax + rax]
0x00005d76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00005d80      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005d87      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00005d8c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00005d90      4889d1         mov rcx, rdx
0x00005d93      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005d9a      4889f2         mov rdx, rsi
0x00005d9d      4889fe         mov rsi, rdi
0x00005da0      31ff           xor edi, edi
0x00005da2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00005da7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00005db0      4989c8         mov r8, rcx
0x00005db3      4889d1         mov rcx, rdx
0x00005db6      4889f2         mov rdx, rsi
0x00005db9      4889fe         mov rsi, rdi
0x00005dbc      31ff           xor edi, edi
0x00005dbe      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00005dc3      0f1f00         nop dword [rax]
0x00005dc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00005dd0      488d0d694220.  lea rcx, obj.quote_quoting_options      ; 0x20a040
0x00005dd7      e904f7ffff     jmp sym.quotearg_n_options
0x00005ddc      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00005de0      488d0d594220.  lea rcx, obj.quote_quoting_options      ; 0x20a040
0x00005de7      4889f2         mov rdx, rsi
0x00005dea      4889fe         mov rsi, rdi
0x00005ded      31ff           xor edi, edi
0x00005def      e9ecf6ffff     jmp sym.quotearg_n_options
0x00005df4      6690           nop
0x00005df6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00005e00      488d0d394220.  lea rcx, obj.quote_quoting_options      ; 0x20a040
0x00005e07      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005e0e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00005e13      0f1f00         nop dword [rax]
0x00005e16      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00005e20      488d0d194220.  lea rcx, obj.quote_quoting_options      ; 0x20a040
0x00005e27      4889fe         mov rsi, rdi
0x00005e2a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005e31      31ff           xor edi, edi
0x00005e33      e9a8f6ffff     jmp sym.quotearg_n_options
0x00005e38      0f1f84000000.  nop dword [rax + rax]
;-- same_nameat.part.0:
0x00005e40      4155           push r13
0x00005e42      4154           push r12
0x00005e44      4189fd         mov r13d, edi
0x00005e47      55             push rbp
0x00005e48      53             push rbx
0x00005e49      4889f7         mov rdi, rsi
0x00005e4c      89d5           mov ebp, edx
0x00005e4e      4989cc         mov r12, rcx
0x00005e51      4881ec380100.  sub rsp, 0x138
0x00005e58      64488b042528.  mov rax, qword fs:[0x28]
0x00005e61      488984242801.  mov qword [rsp + 0x128], rax
0x00005e69      31c0           xor eax, eax
0x00005e6b      e8a00c0000     call sym.dir_name
0x00005e70      4889e1         mov rcx, rsp
0x00005e73      41b800010000   mov r8d, 0x100
0x00005e79      4889c2         mov rdx, rax
0x00005e7c      4489ee         mov esi, r13d
0x00005e7f      bf01000000     mov edi, 1
0x00005e84      4889c3         mov rbx, rax
0x00005e87      e834b7ffff     call sym.imp.__fxstatat
0x00005e8c      85c0           test eax, eax
0x00005e8e      0f85ac000000   jne 0x5f40
0x00005e94      4889df         mov rdi, rbx
0x00005e97      e814b6ffff     call sym.imp.free
0x00005e9c      4c89e7         mov rdi, r12
0x00005e9f      e86c0c0000     call sym.dir_name
0x00005ea4      488d8c249000.  lea rcx, [rsp + 0x90]
0x00005eac      41b800010000   mov r8d, 0x100
0x00005eb2      4889c2         mov rdx, rax
0x00005eb5      89ee           mov esi, ebp
0x00005eb7      bf01000000     mov edi, 1
0x00005ebc      4889c3         mov rbx, rax
0x00005ebf      e8fcb6ffff     call sym.imp.__fxstatat
0x00005ec4      85c0           test eax, eax
0x00005ec6      7550           jne 0x5f18
0x00005ec8      31ed           xor ebp, ebp
0x00005eca      488b84249800.  mov rax, qword [rsp + 0x98]
0x00005ed2      4839442408     cmp qword [rsp + 8], rax
0x00005ed7      7510           jne 0x5ee9
0x00005ed9      488b84249000.  mov rax, qword [rsp + 0x90]
0x00005ee1      48390424       cmp qword [rsp], rax
0x00005ee5      400f94c5       sete bpl
0x00005ee9      4889df         mov rdi, rbx
0x00005eec      e8bfb5ffff     call sym.imp.free
0x00005ef1      488b94242801.  mov rdx, qword [rsp + 0x128]
0x00005ef9      644833142528.  xor rdx, qword fs:[0x28]
0x00005f02      89e8           mov eax, ebp
0x00005f04      755c           jne 0x5f62
0x00005f06      4881c4380100.  add rsp, 0x138
0x00005f0d      5b             pop rbx
0x00005f0e      5d             pop rbp
0x00005f0f      415c           pop r12
0x00005f11      415d           pop r13
0x00005f13      c3             ret
0x00005f14      0f1f4000       nop dword [rax]
0x00005f18      e8b3b5ffff     call sym.imp.__errno_location
0x00005f1d      8b30           mov esi, dword [rax]
0x00005f1f      488d15e71500.  lea rdx, [0x0000750d]                   ; "%s"
0x00005f26      4889d9         mov rcx, rbx
0x00005f29      bf01000000     mov edi, 1
0x00005f2e      31c0           xor eax, eax
0x00005f30      e8ebb7ffff     call sym.imp.error
0x00005f35      eb91           jmp 0x5ec8
0x00005f37      660f1f840000.  nop word [rax + rax]
0x00005f40      e88bb5ffff     call sym.imp.__errno_location
0x00005f45      8b30           mov esi, dword [rax]
0x00005f47      488d15bf1500.  lea rdx, [0x0000750d]                   ; "%s"
0x00005f4e      4889d9         mov rcx, rbx
0x00005f51      bf01000000     mov edi, 1
0x00005f56      31c0           xor eax, eax
0x00005f58      e8c3b7ffff     call sym.imp.error
0x00005f5d      e932ffffff     jmp 0x5e94
0x00005f62      e829b6ffff     call sym.imp.__stack_chk_fail
0x00005f67      660f1f840000.  nop word [rax + rax]
;-- same_nameat:
0x00005f70      4157           push r15
0x00005f72      4156           push r14
0x00005f74      4189d7         mov r15d, edx
0x00005f77      4155           push r13
0x00005f79      4154           push r12
0x00005f7b      55             push rbp
0x00005f7c      53             push rbx
0x00005f7d      4889cd         mov rbp, rcx
0x00005f80      4889f3         mov rbx, rsi
0x00005f83      4883ec18       sub rsp, 0x18
0x00005f87      897c240c       mov dword [rsp + 0xc], edi
0x00005f8b      4889f7         mov rdi, rsi
0x00005f8e      e85d0c0000     call sym.last_component
0x00005f93      4889ef         mov rdi, rbp
0x00005f96      4989c4         mov r12, rax
0x00005f99      e8520c0000     call sym.last_component
0x00005f9e      4c89e7         mov rdi, r12
0x00005fa1      4989c5         mov r13, rax
0x00005fa4      e8a70c0000     call sym.base_len
0x00005fa9      4c89ef         mov rdi, r13
0x00005fac      4989c6         mov r14, rax
0x00005faf      e89c0c0000     call sym.base_len
0x00005fb4      4939c6         cmp r14, rax
0x00005fb7      7417           je 0x5fd0
0x00005fb9      4883c418       add rsp, 0x18
0x00005fbd      31c0           xor eax, eax
0x00005fbf      5b             pop rbx
0x00005fc0      5d             pop rbp
0x00005fc1      415c           pop r12
0x00005fc3      415d           pop r13
0x00005fc5      415e           pop r14
0x00005fc7      415f           pop r15
0x00005fc9      c3             ret
0x00005fca      660f1f440000   nop word [rax + rax]
0x00005fd0      4c89f2         mov rdx, r14
0x00005fd3      4c89ee         mov rsi, r13
0x00005fd6      4c89e7         mov rdi, r12
0x00005fd9      e852b6ffff     call sym.imp.memcmp
0x00005fde      85c0           test eax, eax
0x00005fe0      75d7           jne 0x5fb9
0x00005fe2      8b7c240c       mov edi, dword [rsp + 0xc]
0x00005fe6      4883c418       add rsp, 0x18
0x00005fea      4889e9         mov rcx, rbp
0x00005fed      4489fa         mov edx, r15d
0x00005ff0      4889de         mov rsi, rbx
0x00005ff3      5b             pop rbx
0x00005ff4      5d             pop rbp
0x00005ff5      415c           pop r12
0x00005ff7      415d           pop r13
0x00005ff9      415e           pop r14
0x00005ffb      415f           pop r15
0x00005ffd      e93efeffff     jmp sym.same_nameat.part.0
0x00006002      0f1f4000       nop dword [rax]
0x00006006      662e0f1f8400.  nop word cs:[rax + rax]
;-- same_name:
0x00006010      ba9cffffff     mov edx, 0xffffff9c                     ; 4294967196
0x00006015      4889f1         mov rcx, rsi
0x00006018      4889fe         mov rsi, rdi
0x0000601b      89d7           mov edi, edx
0x0000601d      e94effffff     jmp sym.same_nameat
0x00006022      662e0f1f8400.  nop word cs:[rax + rax]
0x0000602c      0f1f4000       nop dword [rax]
;-- version_etc_arn:
0x00006030      4157           push r15
0x00006032      4156           push r14
0x00006034      4155           push r13
0x00006036      4154           push r12
0x00006038      4d89cc         mov r12, r9
0x0000603b      55             push rbp
0x0000603c      53             push rbx
0x0000603d      4889fd         mov rbp, rdi
0x00006040      4c89c3         mov rbx, r8
0x00006043      4883ec28       sub rsp, 0x28
0x00006047      4885f6         test rsi, rsi
0x0000604a      0f8418010000   je 0x6168
0x00006050      4989d0         mov r8, rdx
0x00006053      488d158e1a00.  lea rdx, [0x00007ae8]                   ; "%s (%s) %s\n"
0x0000605a      4989c9         mov r9, rcx
0x0000605d      31c0           xor eax, eax
0x0000605f      4889f1         mov rcx, rsi
0x00006062      be01000000     mov esi, 1
0x00006067      e804b7ffff     call sym.imp.__fprintf_chk
0x0000606c      488d35881a00.  lea rsi, [0x00007afb]                   ; "(C)"
0x00006073      31ff           xor edi, edi
0x00006075      ba05000000     mov edx, 5
0x0000607a      e8d1b4ffff     call sym.imp.dcgettext
0x0000607f      488d159a1d00.  lea rdx, obj.version_etc_copyright      ; 0x7e20 ; "Copyright %s %d Free Software Foundation, Inc."
0x00006086      4889c1         mov rcx, rax
0x00006089      41b8e3070000   mov r8d, 0x7e3
0x0000608f      be01000000     mov esi, 1
0x00006094      4889ef         mov rdi, rbp
0x00006097      31c0           xor eax, eax
0x00006099      e8d2b6ffff     call sym.imp.__fprintf_chk
0x0000609e      488d35e31a00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x7b88 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x000060a5      31ff           xor edi, edi
0x000060a7      ba05000000     mov edx, 5
0x000060ac      e89fb4ffff     call sym.imp.dcgettext
0x000060b1      4889ee         mov rsi, rbp
0x000060b4      4889c7         mov rdi, rax
0x000060b7      e884b5ffff     call sym.imp.fputs_unlocked
0x000060bc      4983fc09       cmp r12, 9
0x000060c0      0f873a030000   ja 0x6400
0x000060c6      488d151b1d00.  lea rdx, [0x00007de8]
0x000060cd      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000060d1      4801d0         add rax, rdx
0x000060d4      ffe0           jmp rax
0x000060d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000060e0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000060e4      488b4310       mov rax, qword [rbx + 0x10]
0x000060e8      488d35091c00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x7cf8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x000060ef      4c8b4308       mov r8, qword [rbx + 8]
0x000060f3      ba05000000     mov edx, 5
0x000060f8      31ff           xor edi, edi
0x000060fa      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000060fe      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006102      4c894c2410     mov qword [rsp + 0x10], r9
0x00006107      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000610b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000610f      48890424       mov qword [rsp], rax
0x00006113      4c89442408     mov qword [rsp + 8], r8
0x00006118      488b1b         mov rbx, qword [rbx]
0x0000611b      e830b4ffff     call sym.imp.dcgettext
0x00006120      4883ec08       sub rsp, 8
0x00006124      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00006129      4889c2         mov rdx, rax
0x0000612c      4889d9         mov rcx, rbx
0x0000612f      be01000000     mov esi, 1
0x00006134      4889ef         mov rdi, rbp
0x00006137      31c0           xor eax, eax
0x00006139      4151           push r9
0x0000613b      4155           push r13
0x0000613d      4154           push r12
0x0000613f      4157           push r15
0x00006141      4156           push r14
0x00006143      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00006148      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000614d      e81eb6ffff     call sym.imp.__fprintf_chk
0x00006152      4883c430       add rsp, 0x30
0x00006156      4883c428       add rsp, 0x28
0x0000615a      5b             pop rbx
0x0000615b      5d             pop rbp
0x0000615c      415c           pop r12
0x0000615e      415d           pop r13
0x00006160      415e           pop r14
0x00006162      415f           pop r15
0x00006164      c3             ret
0x00006165      0f1f00         nop dword [rax]
0x00006168      4989c8         mov r8, rcx
0x0000616b      4889d1         mov rcx, rdx
0x0000616e      488d157f1900.  lea rdx, str.s__s                       ; 0x7af4 ; "%s %s\n"
0x00006175      be01000000     mov esi, 1
0x0000617a      31c0           xor eax, eax
0x0000617c      e8efb5ffff     call sym.imp.__fprintf_chk
0x00006181      e9e6feffff     jmp 0x606c
0x00006186      662e0f1f8400.  nop word cs:[rax + rax]
0x00006190      4c8b5340       mov r10, qword [rbx + 0x40]
0x00006194      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006198      488d35891b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x7d28 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000619f      488b4310       mov rax, qword [rbx + 0x10]
0x000061a3      4c8b4308       mov r8, qword [rbx + 8]
0x000061a7      ba05000000     mov edx, 5
0x000061ac      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000061b0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000061b4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000061b8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000061bc      488b1b         mov rbx, qword [rbx]
0x000061bf      4c89542418     mov qword [rsp + 0x18], r10
0x000061c4      4c894c2410     mov qword [rsp + 0x10], r9
0x000061c9      48890424       mov qword [rsp], rax
0x000061cd      4c89442408     mov qword [rsp + 8], r8
0x000061d2      31ff           xor edi, edi
0x000061d4      e877b3ffff     call sym.imp.dcgettext
0x000061d9      4c8b542418     mov r10, qword [rsp + 0x18]
0x000061de      4152           push r10
0x000061e0      e93fffffff     jmp 0x6124
0x000061e5      0f1f00         nop dword [rax]
0x000061e8      488b1b         mov rbx, qword [rbx]
0x000061eb      488d350d1900.  lea rsi, str.Written_by__s.             ; 0x7aff ; "Written by %s.\n"
0x000061f2      ba05000000     mov edx, 5
0x000061f7      31ff           xor edi, edi
0x000061f9      e852b3ffff     call sym.imp.dcgettext
0x000061fe      4883c428       add rsp, 0x28
0x00006202      4889d9         mov rcx, rbx
0x00006205      4889ef         mov rdi, rbp
0x00006208      5b             pop rbx
0x00006209      5d             pop rbp
0x0000620a      415c           pop r12
0x0000620c      415d           pop r13
0x0000620e      415e           pop r14
0x00006210      415f           pop r15
0x00006212      4889c2         mov rdx, rax
0x00006215      be01000000     mov esi, 1
0x0000621a      31c0           xor eax, eax
0x0000621c      e94fb5ffff     jmp sym.imp.__fprintf_chk
0x00006221      0f1f80000000.  nop dword [rax]
0x00006228      4c8b6308       mov r12, qword [rbx + 8]
0x0000622c      488d35dc1800.  lea rsi, str.Written_by__s_and__s.      ; 0x7b0f ; "Written by %s and %s.\n"
0x00006233      488b1b         mov rbx, qword [rbx]
0x00006236      ba05000000     mov edx, 5
0x0000623b      31ff           xor edi, edi
0x0000623d      e80eb3ffff     call sym.imp.dcgettext
0x00006242      4883c428       add rsp, 0x28
0x00006246      4d89e0         mov r8, r12
0x00006249      4889d9         mov rcx, rbx
0x0000624c      4889ef         mov rdi, rbp
0x0000624f      4889c2         mov rdx, rax
0x00006252      be01000000     mov esi, 1
0x00006257      5b             pop rbx
0x00006258      5d             pop rbp
0x00006259      415c           pop r12
0x0000625b      415d           pop r13
0x0000625d      415e           pop r14
0x0000625f      415f           pop r15
0x00006261      31c0           xor eax, eax
0x00006263      e908b5ffff     jmp sym.imp.__fprintf_chk
0x00006268      0f1f84000000.  nop dword [rax + rax]
0x00006270      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006274      4c8b6308       mov r12, qword [rbx + 8]
0x00006278      488d35a71800.  lea rsi, str.Written_by__s___s__and__s. ; 0x7b26 ; "Written by %s, %s, and %s.\n"
0x0000627f      488b1b         mov rbx, qword [rbx]
0x00006282      ba05000000     mov edx, 5
0x00006287      31ff           xor edi, edi
0x00006289      e8c2b2ffff     call sym.imp.dcgettext
0x0000628e      4883c428       add rsp, 0x28
0x00006292      4d89e9         mov r9, r13
0x00006295      4d89e0         mov r8, r12
0x00006298      4889d9         mov rcx, rbx
0x0000629b      4889ef         mov rdi, rbp
0x0000629e      4889c2         mov rdx, rax
0x000062a1      5b             pop rbx
0x000062a2      5d             pop rbp
0x000062a3      415c           pop r12
0x000062a5      415d           pop r13
0x000062a7      415e           pop r14
0x000062a9      415f           pop r15
0x000062ab      be01000000     mov esi, 1
0x000062b0      31c0           xor eax, eax
0x000062b2      e9b9b4ffff     jmp sym.imp.__fprintf_chk
0x000062b7      660f1f840000.  nop word [rax + rax]
0x000062c0      488d35911900.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x7c58 ; "Written by %s, %s, %s,\nand %s.\n"
0x000062c7      ba05000000     mov edx, 5
0x000062cc      31ff           xor edi, edi
0x000062ce      4c8b7318       mov r14, qword [rbx + 0x18]
0x000062d2      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000062d6      4c8b6308       mov r12, qword [rbx + 8]
0x000062da      488b1b         mov rbx, qword [rbx]
0x000062dd      e86eb2ffff     call sym.imp.dcgettext
0x000062e2      4883ec08       sub rsp, 8
0x000062e6      4156           push r14
0x000062e8      4889c2         mov rdx, rax
0x000062eb      4d89e9         mov r9, r13
0x000062ee      4d89e0         mov r8, r12
0x000062f1      4889d9         mov rcx, rbx
0x000062f4      4889ef         mov rdi, rbp
0x000062f7      be01000000     mov esi, 1
0x000062fc      31c0           xor eax, eax
0x000062fe      e86db4ffff     call sym.imp.__fprintf_chk
0x00006303      58             pop rax
0x00006304      5a             pop rdx
0x00006305      4883c428       add rsp, 0x28
0x00006309      5b             pop rbx
0x0000630a      5d             pop rbp
0x0000630b      415c           pop r12
0x0000630d      415d           pop r13
0x0000630f      415e           pop r14
0x00006311      415f           pop r15
0x00006313      c3             ret
0x00006314      0f1f4000       nop dword [rax]
0x00006318      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000631c      488d35551900.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x7c78 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00006323      ba05000000     mov edx, 5
0x00006328      31ff           xor edi, edi
0x0000632a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000632e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006332      4c8b6308       mov r12, qword [rbx + 8]
0x00006336      488b1b         mov rbx, qword [rbx]
0x00006339      e812b2ffff     call sym.imp.dcgettext
0x0000633e      4157           push r15
0x00006340      eba4           jmp 0x62e6
0x00006342      660f1f440000   nop word [rax + rax]
0x00006348      4c8b4308       mov r8, qword [rbx + 8]
0x0000634c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006350      488d35491900.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x7ca0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00006357      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000635b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000635f      ba05000000     mov edx, 5
0x00006364      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006368      31ff           xor edi, edi
0x0000636a      488b1b         mov rbx, qword [rbx]
0x0000636d      4c890424       mov qword [rsp], r8
0x00006371      e8dab1ffff     call sym.imp.dcgettext
0x00006376      4883ec08       sub rsp, 8
0x0000637a      4d89e9         mov r9, r13
0x0000637d      4154           push r12
0x0000637f      4157           push r15
0x00006381      4156           push r14
0x00006383      4c8b442420     mov r8, qword [rsp + 0x20]
0x00006388      4889d9         mov rcx, rbx
0x0000638b      4889c2         mov rdx, rax
0x0000638e      4889ef         mov rdi, rbp
0x00006391      be01000000     mov esi, 1
0x00006396      31c0           xor eax, eax
0x00006398      e8d3b3ffff     call sym.imp.__fprintf_chk
0x0000639d      4883c420       add rsp, 0x20
0x000063a1      4883c428       add rsp, 0x28
0x000063a5      5b             pop rbx
0x000063a6      5d             pop rbp
0x000063a7      415c           pop r12
0x000063a9      415d           pop r13
0x000063ab      415e           pop r14
0x000063ad      415f           pop r15
0x000063af      c3             ret
0x000063b0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x000063b4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000063b8      488d35091900.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x7cc8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x000063bf      4c8b6328       mov r12, qword [rbx + 0x28]
0x000063c3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000063c7      ba05000000     mov edx, 5
0x000063cc      4c8b7318       mov r14, qword [rbx + 0x18]
0x000063d0      4c8b4308       mov r8, qword [rbx + 8]
0x000063d4      31ff           xor edi, edi
0x000063d6      4c894c2408     mov qword [rsp + 8], r9
0x000063db      488b1b         mov rbx, qword [rbx]
0x000063de      4c890424       mov qword [rsp], r8
0x000063e2      e869b1ffff     call sym.imp.dcgettext
0x000063e7      4155           push r13
0x000063e9      4154           push r12
0x000063eb      4157           push r15
0x000063ed      4156           push r14
0x000063ef      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000063f4      eb8d           jmp 0x6383
0x000063f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00006400      4c8b5340       mov r10, qword [rbx + 0x40]
0x00006404      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006408      ba05000000     mov edx, 5
0x0000640d      488b4310       mov rax, qword [rbx + 0x10]
0x00006411      4c8b4308       mov r8, qword [rbx + 8]
0x00006415      488d35441900.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x7d60 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000641c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006420      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006424      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006428      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000642c      4c89542418     mov qword [rsp + 0x18], r10
0x00006431      4c894c2410     mov qword [rsp + 0x10], r9
0x00006436      48890424       mov qword [rsp], rax
0x0000643a      4c89442408     mov qword [rsp + 8], r8
0x0000643f      488b1b         mov rbx, qword [rbx]
0x00006442      e98bfdffff     jmp 0x61d2
0x00006447      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00006450      4531c9         xor r9d, r9d
0x00006453      49833800       cmp qword [r8], 0
0x00006457      7412           je 0x646b
0x00006459      0f1f80000000.  nop dword [rax]
0x00006460      4983c101       add r9, 1
0x00006464      4b833cc800     cmp qword [r8 + r9*8], 0
0x00006469      75f5           jne 0x6460
0x0000646b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00006470      4883ec68       sub rsp, 0x68
0x00006474      4d89c2         mov r10, r8
0x00006477      4531c9         xor r9d, r9d
0x0000647a      64488b042528.  mov rax, qword fs:[0x28]
0x00006483      4889442458     mov qword [rsp + 0x58], rax
0x00006488      31c0           xor eax, eax
0x0000648a      4989e0         mov r8, rsp
0x0000648d      0f1f00         nop dword [rax]
0x00006490      418b02         mov eax, dword [r10]
0x00006493      83f82f         cmp eax, 0x2f
0x00006496      7742           ja 0x64da
0x00006498      4189c3         mov r11d, eax
0x0000649b      4d035a10       add r11, qword [r10 + 0x10]
0x0000649f      83c008         add eax, 8
0x000064a2      418902         mov dword [r10], eax
0x000064a5      498b03         mov rax, qword [r11]
0x000064a8      4885c0         test rax, rax
0x000064ab      4b8904c8       mov qword [r8 + r9*8], rax
0x000064af      740a           je 0x64bb
0x000064b1      4983c101       add r9, 1
0x000064b5      4983f90a       cmp r9, 0xa
0x000064b9      75d5           jne 0x6490
0x000064bb      e870fbffff     call sym.version_etc_arn
0x000064c0      488b442458     mov rax, qword [rsp + 0x58]
0x000064c5      644833042528.  xor rax, qword fs:[0x28]
0x000064ce      7505           jne 0x64d5
0x000064d0      4883c468       add rsp, 0x68
0x000064d4      c3             ret
0x000064d5      e8b6b0ffff     call sym.imp.__stack_chk_fail
0x000064da      4d8b5a08       mov r11, qword [r10 + 8]
0x000064de      498d4308       lea rax, [r11 + 8]
0x000064e2      49894208       mov qword [r10 + 8], rax
0x000064e6      ebbd           jmp 0x64a5
0x000064e8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x000064f0      55             push rbp
0x000064f1      53             push rbx
0x000064f2      41ba20000000   mov r10d, 0x20                          ; "@"
0x000064f8      4531db         xor r11d, r11d
0x000064fb      4881ecb80000.  sub rsp, 0xb8
0x00006502      64488b042528.  mov rax, qword fs:[0x28]
0x0000650b      4889442478     mov qword [rsp + 0x78], rax
0x00006510      31c0           xor eax, eax
0x00006512      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000651a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00006522      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000652a      4c8d442420     lea r8, [rsp + 0x20]
0x0000652f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00006537      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000653f      4889442410     mov qword [rsp + 0x10], rax
0x00006544      488d84248000.  lea rax, [rsp + 0x80]
0x0000654c      4531c9         xor r9d, r9d
0x0000654f      4889442418     mov qword [rsp + 0x18], rax
0x00006554      4889c5         mov rbp, rax
0x00006557      660f1f840000.  nop word [rax + rax]
0x00006560      4183fa2f       cmp r10d, 0x2f
0x00006564      7756           ja 0x65bc
0x00006566      4489d0         mov eax, r10d
0x00006569      41bb01000000   mov r11d, 1
0x0000656f      4183c208       add r10d, 8
0x00006573      4801e8         add rax, rbp
0x00006576      488b00         mov rax, qword [rax]
0x00006579      4885c0         test rax, rax
0x0000657c      4b8904c8       mov qword [r8 + r9*8], rax
0x00006580      740a           je 0x658c
0x00006582      4983c101       add r9, 1
0x00006586      4983f90a       cmp r9, 0xa
0x0000658a      75d4           jne 0x6560
0x0000658c      4584db         test r11b, r11b
0x0000658f      7524           jne 0x65b5
0x00006591      e89afaffff     call sym.version_etc_arn
0x00006596      488b442478     mov rax, qword [rsp + 0x78]
0x0000659b      644833042528.  xor rax, qword fs:[0x28]
0x000065a4      750a           jne 0x65b0
0x000065a6      4881c4b80000.  add rsp, 0xb8
0x000065ad      5b             pop rbx
0x000065ae      5d             pop rbp
0x000065af      c3             ret
0x000065b0      e8dbafffff     call sym.imp.__stack_chk_fail
0x000065b5      4489542408     mov dword [rsp + 8], r10d
0x000065ba      ebd5           jmp 0x6591
0x000065bc      4889d8         mov rax, rbx
0x000065bf      4883c308       add rbx, 8
0x000065c3      ebb1           jmp 0x6576
0x000065c5      90             nop
0x000065c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x000065d0      53             push rbx
0x000065d1      488d356a1500.  lea rsi, str.Report_bugs_to:__s         ; 0x7b42 ; "\nReport bugs to: %s\n"
0x000065d8      ba05000000     mov edx, 5
0x000065dd      31ff           xor edi, edi
0x000065df      e86cafffff     call sym.imp.dcgettext
0x000065e4      488d156c1500.  lea rdx, str.bug_coreutils_gnu.org      ; 0x7b57 ; "bug-coreutils@gnu.org"
0x000065eb      4889c6         mov rsi, rax
0x000065ee      bf01000000     mov edi, 1
0x000065f3      31c0           xor eax, eax
0x000065f5      e806b1ffff     call sym.imp.__printf_chk
0x000065fa      488d356c1500.  lea rsi, str.s_home_page:___s           ; 0x7b6d ; "%s home page: <%s>\n"
0x00006601      ba05000000     mov edx, 5
0x00006606      31ff           xor edi, edi
0x00006608      e843afffff     call sym.imp.dcgettext
0x0000660d      488d0d240e00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x7438 ; "https://www.gnu.org/software/coreutils/"
0x00006614      488d15b70900.  lea rdx, str.GNU_coreutils              ; 0x6fd2 ; "GNU coreutils"
0x0000661b      4889c6         mov rsi, rax
0x0000661e      bf01000000     mov edi, 1
0x00006623      31c0           xor eax, eax
0x00006625      e8d6b0ffff     call sym.imp.__printf_chk
0x0000662a      488b1d773a20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00006631      488d35681700.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x7da0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00006638      31ff           xor edi, edi
0x0000663a      ba05000000     mov edx, 5
0x0000663f      e80cafffff     call sym.imp.dcgettext
0x00006644      4889de         mov rsi, rbx
0x00006647      4889c7         mov rdi, rax
0x0000664a      5b             pop rbx
0x0000664b      e9f0afffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00006650      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00006651      4889fb         mov rbx, rdi
0x00006654      e847b0ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00006659      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000665c      7505           jne 0x6663
0x0000665e      4885db         test rbx, rbx
0x00006661      7502           jne 0x6665
0x00006663      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00006664      c3             ret
0x00006665      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000666a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00006670      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00006673      48f7e6         mul rsi
0x00006676      4889c7         mov rdi, rax
0x00006679      0f90c0         seto al
0x0000667c      4885ff         test rdi, rdi
0x0000667f      780a           js 0x668b
0x00006681      0fb6c0         movzx eax, al
0x00006684      4885c0         test rax, rax
0x00006687      7502           jne 0x668b
0x00006689      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000668b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000668f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00006694      6690           nop
0x00006696      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x000066a0      ebae           jmp sym.xmalloc
0x000066a2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x000066a6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x000066b0      4885f6         test rsi, rsi
0x000066b3      53             push rbx
0x000066b4      4889f3         mov rbx, rsi
0x000066b7      7505           jne 0x66be
0x000066b9      4885ff         test rdi, rdi
0x000066bc      751a           jne 0x66d8
0x000066be      4889de         mov rsi, rbx
0x000066c1      e81ab0ffff     call sym.imp.realloc
0x000066c6      4885c0         test rax, rax
0x000066c9      7505           jne 0x66d0
0x000066cb      4885db         test rbx, rbx
0x000066ce      7511           jne 0x66e1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x000066d0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x000066d1      c3             ret
0x000066d2      660f1f440000   nop word [rax + rax]
0x000066d8      e8d3adffff     call sym.imp.free
0x000066dd      31c0           xor eax, eax
0x000066df      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x000066e0      c3             ret
0x000066e1      e8ba010000     call sym.xalloc_die
0x000066e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x000066f0      4889f0         mov rax, rsi
0x000066f3      48f7e2         mul rdx
0x000066f6      4889c6         mov rsi, rax
0x000066f9      0f90c0         seto al
0x000066fc      4885f6         test rsi, rsi
0x000066ff      780a           js 0x670b
0x00006701      0fb6c0         movzx eax, al
0x00006704      4885c0         test rax, rax
0x00006707      7502           jne 0x670b
0x00006709      eba5           jmp sym.xrealloc
0x0000670b      4883ec08       sub rsp, 8
0x0000670f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00006714      6690           nop
0x00006716      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00006720      4885ff         test rdi, rdi
0x00006723      4989d1         mov r9, rdx
0x00006726      488b0e         mov rcx, qword [rsi]
0x00006729      7435           je 0x6760
0x0000672b      31d2           xor edx, edx
0x0000672d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00006737      49f7f1         div r9
0x0000673a      4839c8         cmp rax, rcx
0x0000673d      763c           jbe 0x677b
0x0000673f      4889c8         mov rax, rcx
0x00006742      48d1e8         shr rax, 1
0x00006745      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000674a      48890e         mov qword [rsi], rcx
0x0000674d      490fafc9       imul rcx, r9
0x00006751      4889ce         mov rsi, rcx
0x00006754      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00006759      0f1f80000000.  nop dword [rax]
0x00006760      4885c9         test rcx, rcx
0x00006763      7423           je 0x6788
0x00006765      4889c8         mov rax, rcx
0x00006768      49f7e1         mul r9
0x0000676b      0f90c2         seto dl
0x0000676e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00006771      0fb6d2         movzx edx, dl
0x00006774      7805           js 0x677b
0x00006776      4885d2         test rdx, rdx
0x00006779      74cf           je 0x674a
0x0000677b      4883ec08       sub rsp, 8
0x0000677f      e81c010000     call sym.xalloc_die
0x00006784      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00006788      31d2           xor edx, edx
0x0000678a      b880000000     mov eax, 0x80
0x0000678f      4531c0         xor r8d, r8d
0x00006792      49f7f1         div r9
0x00006795      4885c0         test rax, rax
0x00006798      410f94c0       sete r8b
0x0000679c      498d0c00       lea rcx, [r8 + rax]
0x000067a0      ebc3           jmp 0x6765
0x000067a2      0f1f4000       nop dword [rax]
0x000067a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x000067b0      4885ff         test rdi, rdi
0x000067b3      488b06         mov rax, qword [rsi]
0x000067b6      7428           je 0x67e0
0x000067b8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x000067c2      4839d0         cmp rax, rdx
0x000067c5      772a           ja 0x67f1
0x000067c7      4889c2         mov rdx, rax
0x000067ca      48d1ea         shr rdx, 1
0x000067cd      488d440201     lea rax, [rdx + rax + 1]
0x000067d2      488906         mov qword [rsi], rax
0x000067d5      4889c6         mov rsi, rax
0x000067d8      e9d3feffff     jmp sym.xrealloc
0x000067dd      0f1f00         nop dword [rax]
0x000067e0      4885c0         test rax, rax
0x000067e3      ba80000000     mov edx, 0x80
0x000067e8      480f44c2       cmove rax, rdx
0x000067ec      4885c0         test rax, rax
0x000067ef      79e1           jns 0x67d2
0x000067f1      4883ec08       sub rsp, 8
0x000067f5      e8a6000000     call sym.xalloc_die
0x000067fa      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00006800      53             push rbx
0x00006801      4889fb         mov rbx, rdi
0x00006804      e847feffff     call sym.xmalloc
0x00006809      4889da         mov rdx, rbx
0x0000680c      31f6           xor esi, esi
0x0000680e      4889c7         mov rdi, rax
0x00006811      5b             pop rbx
0x00006812      e9e9adffff     jmp sym.imp.memset
0x00006817      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00006820      4889f8         mov rax, rdi
0x00006823      4883ec08       sub rsp, 8
0x00006827      48f7e6         mul rsi
0x0000682a      0f90c2         seto dl
0x0000682d      4885c0         test rax, rax
0x00006830      7817           js 0x6849
0x00006832      0fb6d2         movzx edx, dl
0x00006835      4885d2         test rdx, rdx
0x00006838      750f           jne 0x6849
0x0000683a      e811aeffff     call sym.imp.calloc
0x0000683f      4885c0         test rax, rax
0x00006842      7405           je 0x6849
0x00006844      4883c408       add rsp, 8
0x00006848      c3             ret
0x00006849      e852000000     call sym.xalloc_die
0x0000684e      6690           nop
;-- xmemdup:
0x00006850      55             push rbp
0x00006851      53             push rbx
0x00006852      4889fd         mov rbp, rdi
0x00006855      4889f7         mov rdi, rsi
0x00006858      4889f3         mov rbx, rsi
0x0000685b      4883ec08       sub rsp, 8
0x0000685f      e8ecfdffff     call sym.xmalloc
0x00006864      4883c408       add rsp, 8
0x00006868      4889da         mov rdx, rbx
0x0000686b      4889ee         mov rsi, rbp
0x0000686e      5b             pop rbx
0x0000686f      5d             pop rbp
0x00006870      4889c7         mov rdi, rax
0x00006873      e9f8adffff     jmp sym.imp.memcpy
0x00006878      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00006880      53             push rbx
0x00006881      4889fb         mov rbx, rdi
0x00006884      e8e7acffff     call sym.imp.strlen
0x00006889      4889df         mov rdi, rbx
0x0000688c      488d7001       lea rsi, [rax + 1]
0x00006890      5b             pop rbx
0x00006891      ebbd           jmp sym.xmemdup
0x00006893      662e0f1f8400.  nop word cs:[rax + rax]
0x0000689d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x000068a0      488d35a81500.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x7e4f ; "memory exhausted"
0x000068a7      4883ec08       sub rsp, 8
0x000068ab      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x000068b0      31ff           xor edi, edi
0x000068b2      e899acffff     call sym.imp.dcgettext
0x000068b7      8b3d63372000   mov edi, dword [obj.exit_failure]       ; [0x20a020:4]=1
0x000068bd      488d15490c00.  lea rdx, [0x0000750d]                   ; "%s"
0x000068c4      4889c1         mov rcx, rax
0x000068c7      31f6           xor esi, esi
0x000068c9      31c0           xor eax, eax
0x000068cb      e850aeffff     call sym.imp.error
0x000068d0      e8ebabffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x000068d5      662e0f1f8400.  nop word cs:[rax + rax]
0x000068df      90             nop
;-- xgetcwd:
0x000068e0      53             push rbx                                ; ../coreutils-8.31/lib/xgetcwd.c:36
0x000068e1      31f6           xor esi, esi                            ; unistd.h:210   return __getcwd_alias (__buf, __size);
0x000068e3      31ff           xor edi, edi
0x000068e5      e826adffff     call sym.imp.getcwd
0x000068ea      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xgetcwd.c:38
0x000068ed      4889c3         mov rbx, rax                            ; unistd.h:210   return __getcwd_alias (__buf, __size);
0x000068f0      740e           je 0x6900                               ; ../coreutils-8.31/lib/xgetcwd.c:38
0x000068f2      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/xgetcwd.c:41
0x000068f5      5b             pop rbx
0x000068f6      c3             ret
0x000068f7      660f1f840000.  nop word [rax + rax]
0x00006900      e8cbabffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xgetcwd.c:38
0x00006905      83380c         cmp dword [rax], 0xc
0x00006908      75e8           jne 0x68f2
0x0000690a      e891ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xgetcwd.c:39
0x0000690f      90             nop
;-- rpl_mbrtowc:
0x00006910      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00006912      4154           push r12
0x00006914      4989f5         mov r13, rsi
0x00006917      55             push rbp
0x00006918      53             push rbx
0x00006919      4889fb         mov rbx, rdi
0x0000691c      4989d4         mov r12, rdx
0x0000691f      4883ec18       sub rsp, 0x18
0x00006923      64488b042528.  mov rax, qword fs:[0x28]
0x0000692c      4889442408     mov qword [rsp + 8], rax
0x00006931      31c0           xor eax, eax
0x00006933      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00006938      4885ff         test rdi, rdi
0x0000693b      480f44d8       cmove rbx, rax
0x0000693f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00006942      e869acffff     call sym.imp.mbrtowc
0x00006947      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000694b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000694e      7620           jbe 0x6970                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00006950      4d85e4         test r12, r12
0x00006953      741b           je 0x6970
0x00006955      31ff           xor edi, edi
0x00006957      e844030000     call sym.hard_locale
0x0000695c      84c0           test al, al
0x0000695e      7510           jne 0x6970
0x00006960      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00006965      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000696a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000696c      0f1f4000       nop dword [rax]
0x00006970      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00006975      644833142528.  xor rdx, qword fs:[0x28]
0x0000697e      4889e8         mov rax, rbp
0x00006981      750b           jne 0x698e
0x00006983      4883c418       add rsp, 0x18
0x00006987      5b             pop rbx
0x00006988      5d             pop rbp
0x00006989      415c           pop r12
0x0000698b      415d           pop r13
0x0000698d      c3             ret
0x0000698e      e8fdabffff     call sym.imp.__stack_chk_fail
0x00006993      662e0f1f8400.  nop word cs:[rax + rax]
0x0000699d      0f1f00         nop dword [rax]
;-- areadlink_with_size:
0x000069a0      4157           push r15                                ; ../coreutils-8.31/lib/areadlink-with-size.c:53
0x000069a2      4156           push r14
0x000069a4      b801040000     mov eax, 0x401                          ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x000069a9      4155           push r13                                ; ../coreutils-8.31/lib/areadlink-with-size.c:53
0x000069ab      4154           push r12
0x000069ad      4989fd         mov r13, rdi
0x000069b0      55             push rbp
0x000069b1      53             push rbx
0x000069b2      488d5e01       lea rbx, [rsi + 1]                      ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x000069b6      49beffffffff.  movabs r14, 0x3fffffffffffffff          ; ../coreutils-8.31/lib/areadlink-with-size.c:94 ; 4611686018427387903
0x000069c0      49bffeffffff.  movabs r15, 0x7ffffffffffffffe          ; ../coreutils-8.31/lib/areadlink-with-size.c:96 ; 9223372036854775806
0x000069ca      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/areadlink-with-size.c:53
0x000069ce      4881fe010400.  cmp rsi, 0x401                          ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x000069d5      480f43d8       cmovae rbx, rax
0x000069d9      0f1f80000000.  nop dword [rax]
0x000069e0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/areadlink-with-size.c:70
0x000069e3      e8b8acffff     call sym.imp.malloc
0x000069e8      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/areadlink-with-size.c:72
0x000069eb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/areadlink-with-size.c:70
0x000069ee      743b           je 0x6a2b                               ; ../coreutils-8.31/lib/areadlink-with-size.c:72
0x000069f0      4889da         mov rdx, rbx
0x000069f3      4889c6         mov rsi, rax
0x000069f6      4c89ef         mov rdi, r13
0x000069f9      e812abffff     call sym.imp.readlink
0x000069fe      4885c0         test rax, rax
0x00006a01      4989c4         mov r12, rax                            ; unistd.h:-169
0x00006a04      7852           js 0x6a58
0x00006a06      4c39e3         cmp rbx, r12                            ; unistd.h:-163
0x00006a09      7765           ja 0x6a70
0x00006a0b      4889ef         mov rdi, rbp
0x00006a0e      e89daaffff     call sym.imp.free                       ; unistd.h:-162
0x00006a13      4c39f3         cmp rbx, r14                            ; unistd.h:-161
0x00006a16      7728           ja 0x6a40                               ; unistd.h:-186
0x00006a18      4801db         add rbx, rbx
0x00006a1b      4889df         mov rdi, rbx
0x00006a1e      e87dacffff     call sym.imp.malloc                     ; unistd.h:-184
0x00006a23      4885c0         test rax, rax
0x00006a26      4889c5         mov rbp, rax                            ; unistd.h:-152
0x00006a29      75c5           jne 0x69f0
0x00006a2b      4883c408       add rsp, 8
0x00006a2f      4889e8         mov rax, rbp
0x00006a32      5b             pop rbx
0x00006a33      5d             pop rbp
0x00006a34      415c           pop r12
0x00006a36      415d           pop r13
0x00006a38      415e           pop r14
0x00006a3a      415f           pop r15
0x00006a3c      c3             ret
0x00006a3d      0f1f00         nop dword [rax]
0x00006a40      4c39fb         cmp rbx, r15                            ; unistd.h:-159
0x00006a43      773b           ja 0x6a80
0x00006a45      48bbffffffff.  movabs rbx, 0x7fffffffffffffff          ; 9223372036854775807
0x00006a4f      eb8f           jmp 0x69e0
0x00006a51      0f1f80000000.  nop dword [rax]
0x00006a58      e873aaffff     call sym.imp.__errno_location
0x00006a5d      833822         cmp dword [rax], 0x22                   ; unistd.h:-174
0x00006a60      74a4           je 0x6a06                               ; unistd.h:-172
0x00006a62      4889ef         mov rdi, rbp                            ; unistd.h:-174
0x00006a65      31ed           xor ebp, ebp
0x00006a67      e844aaffff     call sym.imp.free                       ; unistd.h:-172
0x00006a6c      ebbd           jmp 0x6a2b
0x00006a6e      6690           nop
0x00006a70      42c644250000   mov byte [rbp + r12], 0
0x00006a76      ebb3           jmp 0x6a2b
0x00006a78      0f1f84000000.  nop dword [rax + rax]
0x00006a80      e84baaffff     call sym.imp.__errno_location           ; unistd.h:-155
0x00006a85      31ed           xor ebp, ebp
0x00006a87      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00006a8d      eb9c           jmp 0x6a2b
0x00006a8f      90             nop
;-- close_stream:
0x00006a90      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00006a92      55             push rbp
0x00006a93      4889fd         mov rbp, rdi
0x00006a96      53             push rbx
0x00006a97      e864aaffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00006a9c      8b5d00         mov ebx, dword [rbp]
0x00006a9f      4889ef         mov rdi, rbp
0x00006aa2      4989c4         mov r12, rax
0x00006aa5      e8d6020000     call sym.rpl_fclose
0x00006aaa      83e320         and ebx, 0x20                           ; "@"
0x00006aad      85db           test ebx, ebx
0x00006aaf      7517           jne 0x6ac8
0x00006ab1      85c0           test eax, eax
0x00006ab3      740a           je 0x6abf                               ; stdio.h:-186
0x00006ab5      4d85e4         test r12, r12                           ; stdio.h:-178
0x00006ab8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006abd      7439           je 0x6af8
0x00006abf      5b             pop rbx
0x00006ac0      5d             pop rbp
0x00006ac1      415c           pop r12
0x00006ac3      c3             ret
0x00006ac4      0f1f4000       nop dword [rax]
0x00006ac8      85c0           test eax, eax
0x00006aca      751c           jne 0x6ae8
0x00006acc      e8ffa9ffff     call sym.imp.__errno_location
0x00006ad1      c70000000000   mov dword [rax], 0
0x00006ad7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006adc      5b             pop rbx
0x00006add      5d             pop rbp
0x00006ade      415c           pop r12
0x00006ae0      c3             ret
0x00006ae1      0f1f80000000.  nop dword [rax]
0x00006ae8      5b             pop rbx
0x00006ae9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006aee      5d             pop rbp                                 ; stdio.h:-186
0x00006aef      415c           pop r12
0x00006af1      c3             ret
0x00006af2      660f1f440000   nop word [rax + rax]
0x00006af8      e8d3a9ffff     call sym.imp.__errno_location
0x00006afd      833809         cmp dword [rax], 9
0x00006b00      5b             pop rbx
0x00006b01      5d             pop rbp
0x00006b02      415c           pop r12                                 ; stdio.h:-178
0x00006b04      0f95c0         setne al
0x00006b07      0fb6c0         movzx eax, al
0x00006b0a      f7d8           neg eax
0x00006b0c      c3             ret
0x00006b0d      0f1f00         nop dword [rax]
;-- dir_name:
0x00006b10      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/dirname.c:33
0x00006b14      e877000000     call sym.mdir_name                      ; ../coreutils-8.31/lib/dirname.c:34
0x00006b19      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname.c:35
0x00006b1c      7405           je 0x6b23
0x00006b1e      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname.c:38
0x00006b22      c3             ret
0x00006b23      e878fdffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/dirname.c:36
0x00006b28      0f1f84000000.  nop dword [rax + rax]
;-- dir_len:
0x00006b30      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x00006b31      53             push rbx
0x00006b32      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x00006b34      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x00006b37      4883ec08       sub rsp, 8
0x00006b3b      803f2f         cmp byte [rdi], 0x2f                    ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x00006b3e      400f94c5       sete bpl
0x00006b42      e8a9000000     call sym.last_component                 ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x00006b47      4889c1         mov rcx, rax
0x00006b4a      4829d9         sub rcx, rbx
0x00006b4d      4839e9         cmp rcx, rbp
0x00006b50      762e           jbe 0x6b80
0x00006b52      8078ff2f       cmp byte [rax - 1], 0x2f                ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x00006b56      488d51ff       lea rdx, [rcx - 1]
0x00006b5a      7412           je 0x6b6e
0x00006b5c      eb22           jmp 0x6b80
0x00006b5e      6690           nop
0x00006b60      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x00006b65      488d42ff       lea rax, [rdx - 1]
0x00006b69      7508           jne 0x6b73
0x00006b6b      4889c2         mov rdx, rax
0x00006b6e      4839d5         cmp rbp, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x00006b71      75ed           jne 0x6b60
0x00006b73      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x00006b77      4889d0         mov rax, rdx
0x00006b7a      5b             pop rbx
0x00006b7b      5d             pop rbp
0x00006b7c      c3             ret
0x00006b7d      0f1f00         nop dword [rax]
0x00006b80      4883c408       add rsp, 8
0x00006b84      4889ca         mov rdx, rcx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x00006b87      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x00006b8a      5b             pop rbx
0x00006b8b      5d             pop rbp
0x00006b8c      c3             ret
0x00006b8d      0f1f00         nop dword [rax]
;-- mdir_name:
0x00006b90      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:72
0x00006b91      53             push rbx
0x00006b92      4889fd         mov rbp, rdi
0x00006b95      4883ec08       sub rsp, 8
0x00006b99      e892ffffff     call sym.dir_len                        ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x00006b9e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x00006ba1      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x00006ba4      0f94c0         sete al                                 ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x00006ba7      0fb6c0         movzx eax, al
0x00006baa      488d7c0301     lea rdi, [rbx + rax + 1]                ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x00006baf      e8ecaaffff     call sym.imp.malloc
0x00006bb4      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x00006bb7      4889c1         mov rcx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x00006bba      741a           je 0x6bd6                               ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x00006bbc      4889da         mov rdx, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006bbf      4889ee         mov rsi, rbp
0x00006bc2      4889c7         mov rdi, rax
0x00006bc5      e8a6aaffff     call sym.imp.memcpy
0x00006bca      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x00006bcd      4889c1         mov rcx, rax                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006bd0      740e           je 0x6be0                               ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x00006bd2      c6041900       mov byte [rcx + rbx], 0                 ; ../coreutils-8.31/lib/dirname-lgpl.c:84
0x00006bd6      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:86
0x00006bda      4889c8         mov rax, rcx
0x00006bdd      5b             pop rbx
0x00006bde      5d             pop rbp
0x00006bdf      c3             ret
0x00006be0      c6002e         mov byte [rax], 0x2e                    ; ../coreutils-8.31/lib/dirname-lgpl.c:83 ; '.'
                                                                       ; [0x2e:1]=0
0x00006be3      bb01000000     mov ebx, 1
0x00006be8      ebe8           jmp 0x6bd2
0x00006bea      660f1f440000   nop word [rax + rax]
;-- last_component:
0x00006bf0      0fb617         movzx edx, byte [rdi]                   ; ../coreutils-8.31/lib/basename-lgpl.c:31
0x00006bf3      4889f8         mov rax, rdi
0x00006bf6      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x00006bf9      7511           jne 0x6c0c
0x00006bfb      0f1f440000     nop dword [rax + rax]
0x00006c00      4883c001       add rax, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:37
0x00006c04      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x00006c07      80fa2f         cmp dl, 0x2f
0x00006c0a      74f4           je 0x6c00
0x00006c0c      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00006c0e      743a           je 0x6c4a
0x00006c10      4889c1         mov rcx, rax
0x00006c13      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:34
0x00006c15      eb1e           jmp 0x6c35
0x00006c17      660f1f840000.  nop word [rax + rax]
0x00006c20      4084f6         test sil, sil                           ; ../coreutils-8.31/lib/basename-lgpl.c:43
0x00006c23      7405           je 0x6c2a
0x00006c25      4889c8         mov rax, rcx
0x00006c28      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:46
0x00006c2a      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00006c2e      0fb611         movzx edx, byte [rcx]
0x00006c31      84d2           test dl, dl
0x00006c33      7415           je 0x6c4a
0x00006c35      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:41
0x00006c38      75e6           jne 0x6c20
0x00006c3a      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00006c3e      0fb611         movzx edx, byte [rcx]
0x00006c41      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:42
0x00006c46      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00006c48      75eb           jne 0x6c35
0x00006c4a      f3c3           ret                                     ; ../coreutils-8.31/lib/basename-lgpl.c:51
0x00006c4c      0f1f4000       nop dword [rax]
;-- base_len:
0x00006c50      53             push rbx                                ; ../coreutils-8.31/lib/basename-lgpl.c:59
0x00006c51      4889fb         mov rbx, rdi
0x00006c54      e817a9ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00006c59      4883f801       cmp rax, 1
0x00006c5d      760b           jbe 0x6c6a
0x00006c5f      807c03ff2f     cmp byte [rbx + rax - 1], 0x2f
0x00006c64      488d50ff       lea rdx, [rax - 1]
0x00006c68      740e           je 0x6c78
0x00006c6a      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x00006c6b      c3             ret
0x00006c6c      0f1f4000       nop dword [rax]
0x00006c70      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00006c73      0f1f440000     nop dword [rax + rax]
0x00006c78      4883fa01       cmp rdx, 1
0x00006c7c      7412           je 0x6c90
0x00006c7e      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x00006c83      488d42ff       lea rax, [rdx - 1]
0x00006c87      74e7           je 0x6c70
0x00006c89      4889d0         mov rax, rdx
0x00006c8c      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x00006c8d      c3             ret
0x00006c8e      6690           nop
0x00006c90      b801000000     mov eax, 1
0x00006c95      5b             pop rbx
0x00006c96      c3             ret
0x00006c97      660f1f840000.  nop word [rax + rax]
;-- hard_locale:
0x00006ca0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00006ca4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00006ca6      e845aaffff     call sym.imp.setlocale
0x00006cab      4889c2         mov rdx, rax
0x00006cae      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00006cb3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00006cb6      741d           je 0x6cd5
0x00006cb8      488d3da11100.  lea rdi, [0x00007e60]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00006cbf      b902000000     mov ecx, 2
0x00006cc4      4889d6         mov rsi, rdx
0x00006cc7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006cc9      0f97c1         seta cl
0x00006ccc      80d900         sbb cl, 0
0x00006ccf      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00006cd1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00006cd3      750b           jne 0x6ce0
0x00006cd5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00006cd9      c3             ret
0x00006cda      660f1f440000   nop word [rax + rax]
0x00006ce0      488d3d7b1100.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x7e62 ; "POSIX"
0x00006ce7      b906000000     mov ecx, 6
0x00006cec      4889d6         mov rsi, rdx
0x00006cef      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006cf1      0f97c0         seta al
0x00006cf4      1c00           sbb al, 0
0x00006cf6      84c0           test al, al
0x00006cf8      0f95c0         setne al
0x00006cfb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00006cff      c3             ret
;-- hash_pjw:
0x00006d00      480fbe0f       movsx rcx, byte [rdi]
0x00006d04      84c9           test cl, cl
0x00006d06      7428           je 0x6d30
0x00006d08      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-pjw.c:34
0x00006d0a      660f1f440000   nop word [rax + rax]
0x00006d10      48c1c009       rol rax, 9                              ; ../coreutils-8.31/lib/hash-pjw.c:37
0x00006d14      4883c701       add rdi, 1                              ; ../coreutils-8.31/lib/hash-pjw.c:36
0x00006d18      4801c8         add rax, rcx                            ; ../coreutils-8.31/lib/hash-pjw.c:37
0x00006d1b      480fbe0f       movsx rcx, byte [rdi]                   ; ../coreutils-8.31/lib/hash-pjw.c:36
0x00006d1f      84c9           test cl, cl
0x00006d21      75ed           jne 0x6d10
0x00006d23      31d2           xor edx, edx
0x00006d25      48f7f6         div rsi
0x00006d28      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-pjw.c:40
0x00006d2b      c3             ret
0x00006d2c      0f1f4000       nop dword [rax]
0x00006d30      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash-pjw.c:36
0x00006d32      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-pjw.c:40
0x00006d35      c3             ret
0x00006d36      662e0f1f8400.  nop word cs:[rax + rax]
;-- locale_charset:
0x00006d40      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x00006d44      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00006d49      e872a9ffff     call sym.imp.nl_langinfo
0x00006d4e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00006d51      741d           je 0x6d70
0x00006d53      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00006d56      488d150b1100.  lea rdx, str.ASCII                      ; 0x7e68 ; "ASCII"
0x00006d5d      480f44c2       cmove rax, rdx
0x00006d61      4883c408       add rsp, 8
0x00006d65      c3             ret
0x00006d66      662e0f1f8400.  nop word cs:[rax + rax]
0x00006d70      488d05f11000.  lea rax, str.ASCII                      ; 0x7e68 ; "ASCII"
0x00006d77      4883c408       add rsp, 8
0x00006d7b      c3             ret
0x00006d7c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00006d80      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00006d82      55             push rbp
0x00006d83      53             push rbx
0x00006d84      4889fb         mov rbx, rdi
0x00006d87      e8f4a8ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00006d8c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00006d8e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00006d91      7854           js 0x6de7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00006d93      e838a9ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00006d98      85c0           test eax, eax
0x00006d9a      752c           jne 0x6dc8
0x00006d9c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00006d9f      e85c000000     call sym.rpl_fflush
0x00006da4      85c0           test eax, eax
0x00006da6      743c           je 0x6de4
0x00006da8      e823a7ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00006dad      448b20         mov r12d, dword [rax]
0x00006db0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00006db3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00006db6      e875a7ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00006dbb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00006dbe      7530           jne 0x6df0
0x00006dc0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00006dc1      5d             pop rbp
0x00006dc2      415c           pop r12
0x00006dc4      c3             ret
0x00006dc5      0f1f00         nop dword [rax]
0x00006dc8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00006dcb      e8b0a8ffff     call sym.imp.fileno
0x00006dd0      31f6           xor esi, esi
0x00006dd2      ba01000000     mov edx, 1
0x00006dd7      89c7           mov edi, eax
0x00006dd9      e812a8ffff     call sym.imp.lseek
0x00006dde      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006de2      75b8           jne 0x6d9c
0x00006de4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00006de7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00006de8      5d             pop rbp
0x00006de9      415c           pop r12
0x00006deb      e940a7ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00006df0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00006df4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00006df9      ebc5           jmp 0x6dc0
0x00006dfb      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00006e00      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00006e03      53             push rbx
0x00006e04      4889fb         mov rbx, rdi
0x00006e07      7411           je 0x6e1a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00006e09      e8c2a8ffff     call sym.imp.__freading
0x00006e0e      85c0           test eax, eax
0x00006e10      7408           je 0x6e1a
0x00006e12      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00006e18      750e           jne 0x6e28
0x00006e1a      4889df         mov rdi, rbx
0x00006e1d      5b             pop rbx
0x00006e1e      e98da8ffff     jmp sym.imp.fflush
0x00006e23      0f1f440000     nop dword [rax + rax]
0x00006e28      4889df         mov rdi, rbx
0x00006e2b      ba01000000     mov edx, 1
0x00006e30      31f6           xor esi, esi
0x00006e32      e809000000     call sym.rpl_fseeko
0x00006e37      4889df         mov rdi, rbx
0x00006e3a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00006e3b      e970a8ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00006e40      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00006e44      48394710       cmp qword [rdi + 0x10], rax
0x00006e48      7406           je 0x6e50                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00006e4a      e9e1a8ffff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x00006e4f      90             nop
0x00006e50      488b4720       mov rax, qword [rdi + 0x20]
0x00006e54      48394728       cmp qword [rdi + 0x28], rax
0x00006e58      75f0           jne 0x6e4a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00006e5a      48837f4800     cmp qword [rdi + 0x48], 0
0x00006e5f      75e9           jne 0x6e4a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00006e61      4154           push r12
0x00006e63      55             push rbp
0x00006e64      4189d4         mov r12d, edx
0x00006e67      53             push rbx
0x00006e68      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00006e6b      4889fb         mov rbx, rdi
0x00006e6e      e80da8ffff     call sym.imp.fileno
0x00006e73      4489e2         mov edx, r12d
0x00006e76      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00006e79      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x00006e7b      e870a7ffff     call sym.imp.lseek
0x00006e80      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006e84      740c           je 0x6e92
0x00006e86      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00006e89      488983900000.  mov qword [rbx + 0x90], rax
0x00006e90      31c0           xor eax, eax
0x00006e92      5b             pop rbx                                 ; /sys_errlist.h:19
0x00006e93      5d             pop rbp
0x00006e94      415c           pop r12
0x00006e96      c3             ret
0x00006e97      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x00006ea0      4157           push r15
0x00006ea2      4156           push r14
0x00006ea4      4989d7         mov r15, rdx
0x00006ea7      4155           push r13
0x00006ea9      4154           push r12
0x00006eab      4c8d257e2b20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x209a30
0x00006eb2      55             push rbp
0x00006eb3      488d2d7e2b20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x209a38 ; "P\x1d"
0x00006eba      53             push rbx
0x00006ebb      4189fd         mov r13d, edi
0x00006ebe      4989f6         mov r14, rsi
0x00006ec1      4c29e5         sub rbp, r12
0x00006ec4      4883ec08       sub rsp, 8
0x00006ec8      48c1fd03       sar rbp, 3
0x00006ecc      e8afa5ffff     call sym._init
0x00006ed1      4885ed         test rbp, rbp
0x00006ed4      7420           je 0x6ef6
0x00006ed6      31db           xor ebx, ebx
0x00006ed8      0f1f84000000.  nop dword [rax + rax]
0x00006ee0      4c89fa         mov rdx, r15
0x00006ee3      4c89f6         mov rsi, r14
0x00006ee6      4489ef         mov edi, r13d
0x00006ee9      41ff14dc       call qword [r12 + rbx*8]
0x00006eed      4883c301       add rbx, 1
0x00006ef1      4839dd         cmp rbp, rbx
0x00006ef4      75ea           jne 0x6ee0
0x00006ef6      4883c408       add rsp, 8
0x00006efa      5b             pop rbx
0x00006efb      5d             pop rbp
0x00006efc      415c           pop r12
0x00006efe      415d           pop r13
0x00006f00      415e           pop r14
0x00006f02      415f           pop r15
0x00006f04      c3             ret
0x00006f05      90             nop
0x00006f06      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00006f10      f3c3           ret
0x00006f12      662e0f1f8400.  nop word cs:[rax + rax]
0x00006f1c      0f1f4000       nop dword [rax]
;-- atexit:
0x00006f20      488b15e13020.  mov rdx, qword [obj.__dso_handle]       ; [0x20a008:8]=0x20a008 obj.__dso_handle
0x00006f27      31f6           xor esi, esi
0x00006f29      e912a8ffff     jmp sym.imp.__cxa_atexit
0x00006f2e      0000           add byte [rax], al
