;-- section..plt:
;-- .plt:
0x000012f0      ff355a6b2000   push qword [0x00207e50]                 ; [12] -r-x section size 736 named .plt
0x000012f6      ff255c6b2000   jmp qword [0x00207e58]                  ; [0x207e58:8]=0
0x000012fc      0f1f4000       nop dword [rax]
;-- imp.__snprintf_chk:
0x00001300      ff255a6b2000   jmp qword [reloc.__snprintf_chk]        ; [0x207e60:8]=0x1306
0x00001306      6800000000     push 0
0x0000130b      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x00001310      ff25526b2000   jmp qword [reloc.free]                  ; [0x207e68:8]=0x1316
0x00001316      6801000000     push 1
0x0000131b      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x00001320      ff254a6b2000   jmp qword [reloc.abort]                 ; [0x207e70:8]=0x1326 ; "&\x13"
0x00001326      6802000000     push 2
0x0000132b      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001330      ff25426b2000   jmp qword [reloc.__errno_location]      ; [0x207e78:8]=0x1336 ; "6\x13"
0x00001336      6803000000     push 3
0x0000133b      e9b0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001340      ff253a6b2000   jmp qword [reloc.strncmp]               ; [0x207e80:8]=0x1346 ; "F\x13"
0x00001346      6804000000     push 4
0x0000134b      e9a0ffffff     jmp sym..plt
;-- imp._exit:
0x00001350      ff25326b2000   jmp qword [reloc._exit]                 ; [0x207e88:8]=0x1356 ; "V\x13"
0x00001356      6805000000     push 5
0x0000135b      e990ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001360      ff252a6b2000   jmp qword [reloc.__fpending]            ; [0x207e90:8]=0x1366 ; "f\x13"
0x00001366      6806000000     push 6
0x0000136b      e980ffffff     jmp sym..plt
;-- imp.puts:
0x00001370      ff25226b2000   jmp qword [reloc.puts]                  ; [0x207e98:8]=0x1376 ; "v\x13"
0x00001376      6807000000     push 7
0x0000137b      e970ffffff     jmp sym..plt
;-- imp.strtod:
0x00001380      ff251a6b2000   jmp qword [reloc.strtod]                ; [0x207ea0:8]=0x1386
0x00001386      6808000000     push 8
0x0000138b      e960ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001390      ff25126b2000   jmp qword [reloc.textdomain]            ; [0x207ea8:8]=0x1396
0x00001396      6809000000     push 9
0x0000139b      e950ffffff     jmp sym..plt
;-- imp.fclose:
0x000013a0      ff250a6b2000   jmp qword [reloc.fclose]                ; [0x207eb0:8]=0x13a6
0x000013a6      680a000000     push 0xa
0x000013ab      e940ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000013b0      ff25026b2000   jmp qword [reloc.bindtextdomain]        ; [0x207eb8:8]=0x13b6
0x000013b6      680b000000     push 0xb
0x000013bb      e930ffffff     jmp sym..plt
;-- imp.dcgettext:
0x000013c0      ff25fa6a2000   jmp qword [reloc.dcgettext]             ; [0x207ec0:8]=0x13c6
0x000013c6      680c000000     push 0xc
0x000013cb      e920ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000013d0      ff25f26a2000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x207ec8:8]=0x13d6
0x000013d6      680d000000     push 0xd
0x000013db      e910ffffff     jmp sym..plt
;-- imp.strlen:
0x000013e0      ff25ea6a2000   jmp qword [reloc.strlen]                ; [0x207ed0:8]=0x13e6
0x000013e6      680e000000     push 0xe
0x000013eb      e900ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000013f0      ff25e26a2000   jmp qword [reloc.__stack_chk_fail]      ; [0x207ed8:8]=0x13f6
0x000013f6      680f000000     push 0xf
0x000013fb      e9f0feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001400      ff25da6a2000   jmp qword [reloc.getopt_long]           ; [0x207ee0:8]=0x1406
0x00001406      6810000000     push 0x10
0x0000140b      e9e0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001410      ff25d26a2000   jmp qword [reloc.mbrtowc]               ; [0x207ee8:8]=0x1416
0x00001416      6811000000     push 0x11
0x0000141b      e9d0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001420      ff25ca6a2000   jmp qword [reloc.strrchr]               ; [0x207ef0:8]=0x1426 ; "&\x14"
0x00001426      6812000000     push 0x12
0x0000142b      e9c0feffff     jmp sym..plt
;-- imp.lseek:
0x00001430      ff25c26a2000   jmp qword [reloc.lseek]                 ; [0x207ef8:8]=0x1436 ; "6\x14"
0x00001436      6813000000     push 0x13
0x0000143b      e9b0feffff     jmp sym..plt
;-- imp.strtof:
0x00001440      ff25ba6a2000   jmp qword [reloc.strtof]                ; [0x207f00:8]=0x1446 ; "F\x14"
0x00001446      6814000000     push 0x14
0x0000144b      e9a0feffff     jmp sym..plt
;-- imp.memset:
0x00001450      ff25b26a2000   jmp qword [reloc.memset]                ; [0x207f08:8]=0x1456 ; "V\x14"
0x00001456      6815000000     push 0x15
0x0000145b      e990feffff     jmp sym..plt
;-- imp.memcmp:
0x00001460      ff25aa6a2000   jmp qword [reloc.memcmp]                ; [0x207f10:8]=0x1466 ; "f\x14"
0x00001466      6816000000     push 0x16
0x0000146b      e980feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001470      ff25a26a2000   jmp qword [reloc.fputs_unlocked]        ; [0x207f18:8]=0x1476 ; "v\x14"
0x00001476      6817000000     push 0x17
0x0000147b      e970feffff     jmp sym..plt
;-- imp.calloc:
0x00001480      ff259a6a2000   jmp qword [reloc.calloc]                ; [0x207f20:8]=0x1486
0x00001486      6818000000     push 0x18
0x0000148b      e960feffff     jmp sym..plt
;-- imp.memcpy:
0x00001490      ff25926a2000   jmp qword [reloc.memcpy]                ; [0x207f28:8]=0x1496
0x00001496      6819000000     push 0x19
0x0000149b      e950feffff     jmp sym..plt
;-- imp.fileno:
0x000014a0      ff258a6a2000   jmp qword [reloc.fileno]                ; [0x207f30:8]=0x14a6
0x000014a6      681a000000     push 0x1a
0x000014ab      e940feffff     jmp sym..plt
;-- imp.malloc:
0x000014b0      ff25826a2000   jmp qword [reloc.malloc]                ; [0x207f38:8]=0x14b6
0x000014b6      681b000000     push 0x1b
0x000014bb      e930feffff     jmp sym..plt
;-- imp.fflush:
0x000014c0      ff257a6a2000   jmp qword [reloc.fflush]                ; [0x207f40:8]=0x14c6
0x000014c6      681c000000     push 0x1c
0x000014cb      e920feffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000014d0      ff25726a2000   jmp qword [reloc.nl_langinfo]           ; [0x207f48:8]=0x14d6
0x000014d6      681d000000     push 0x1d
0x000014db      e910feffff     jmp sym..plt
;-- imp.__freading:
0x000014e0      ff256a6a2000   jmp qword [reloc.__freading]            ; [0x207f50:8]=0x14e6
0x000014e6      681e000000     push 0x1e
0x000014eb      e900feffff     jmp sym..plt
;-- imp.realloc:
0x000014f0      ff25626a2000   jmp qword [reloc.realloc]               ; [0x207f58:8]=0x14f6
0x000014f6      681f000000     push 0x1f
0x000014fb      e9f0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001500      ff255a6a2000   jmp qword [reloc.setlocale]             ; [0x207f60:8]=0x1506
0x00001506      6820000000     push 0x20                               ; "@"
0x0000150b      e9e0fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001510      ff25526a2000   jmp qword [reloc.__printf_chk]          ; [0x207f68:8]=0x1516
0x00001516      6821000000     push 0x21                               ; '!'
0x0000151b      e9d0fdffff     jmp sym..plt
;-- imp.strtold:
0x00001520      ff254a6a2000   jmp qword [reloc.strtold]               ; [0x207f70:8]=0x1526 ; "&\x15"
0x00001526      6822000000     push 0x22                               ; '"'
0x0000152b      e9c0fdffff     jmp sym..plt
;-- imp.error:
0x00001530      ff25426a2000   jmp qword [reloc.error]                 ; [0x207f78:8]=0x1536 ; "6\x15"
0x00001536      6823000000     push 0x23                               ; '#'
0x0000153b      e9b0fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001540      ff253a6a2000   jmp qword [reloc.fseeko]                ; [0x207f80:8]=0x1546 ; "F\x15"
0x00001546      6824000000     push 0x24                               ; '$'
0x0000154b      e9a0fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001550      ff25326a2000   jmp qword [reloc.__cxa_atexit]          ; [0x207f88:8]=0x1556 ; "V\x15"
0x00001556      6825000000     push 0x25                               ; '%'
0x0000155b      e990fdffff     jmp sym..plt
;-- imp.exit:
0x00001560      ff252a6a2000   jmp qword [reloc.exit]                  ; [0x207f90:8]=0x1566 ; "f\x15"
0x00001566      6826000000     push 0x26                               ; '&'
0x0000156b      e980fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001570      ff25226a2000   jmp qword [reloc.fwrite]                ; [0x207f98:8]=0x1576 ; "v\x15"
0x00001576      6827000000     push 0x27                               ; '''
0x0000157b      e970fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001580      ff251a6a2000   jmp qword [reloc.__fprintf_chk]         ; [0x207fa0:8]=0x1586
0x00001586      6828000000     push 0x28                               ; '('
0x0000158b      e960fdffff     jmp sym..plt
;-- imp.mbsinit:
0x00001590      ff25126a2000   jmp qword [reloc.mbsinit]               ; [0x207fa8:8]=0x1596
0x00001596      6829000000     push 0x29                               ; ')'
0x0000159b      e950fdffff     jmp sym..plt
;-- imp.iswprint:
0x000015a0      ff250a6a2000   jmp qword [reloc.iswprint]              ; [0x207fb0:8]=0x15a6
0x000015a6      682a000000     push 0x2a                               ; '*'
0x000015ab      e940fdffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000015b0      ff25026a2000   jmp qword [reloc.__ctype_b_loc]         ; [0x207fb8:8]=0x15b6
0x000015b6      682b000000     push 0x2b                               ; '+'
0x000015bb      e930fdffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x000015c0      ff25fa692000   jmp qword [reloc.__sprintf_chk]         ; [0x207fc0:8]=0x15c6
0x000015c6      682c000000     push 0x2c                               ; ','
0x000015cb      e920fdffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000015d0      .qword 0x906600206a1225ff                              ; [13] -r-x section size 8 named .plt.got
0x000015d8      0000           add byte [rax], al
0x000015da      0000           add byte [rax], al
0x000015dc      0000           add byte [rax], al
0x000015de      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x000015e0      55             push rbp                                ; [14] -r-x section size 16702 named .text
0x000015e1      53             push rbx
0x000015e2      89fd           mov ebp, edi
0x000015e4      4889f3         mov rbx, rsi
0x000015e7      4883ec28       sub rsp, 0x28
0x000015eb      488b3e         mov rdi, qword [rsi]
0x000015ee      64488b042528.  mov rax, qword fs:[0x28]
0x000015f7      4889442418     mov qword [rsp + 0x18], rax
0x000015fc      31c0           xor eax, eax
0x000015fe      e8dd170000     call sym.set_program_name
0x00001603      488d35374c00.  lea rsi, [0x00006241]
0x0000160a      bf06000000     mov edi, 6
0x0000160f      e8ecfeffff     call sym.imp.setlocale
0x00001614      488d35e14100.  lea rsi, str.usr_local_share_locale     ; 0x57fc ; "/usr/local/share/locale"
0x0000161b      488d3db14100.  lea rdi, [0x000057d3]                   ; "coreutils"
0x00001622      e889fdffff     call sym.imp.bindtextdomain
0x00001627      488d3da54100.  lea rdi, [0x000057d3]                   ; "coreutils"
0x0000162e      e85dfdffff     call sym.imp.textdomain
0x00001633      488d3d461000.  lea rdi, sym.close_stdout               ; 0x2680 ; "USH\x83\xec\bH\x8b=\xfbY "
0x0000163a      e8d1400000     call sym.atexit
0x0000163f      488d05d34100.  lea rax, str.Padraig_Brady              ; 0x5819 ; "Padraig Brady"
0x00001646      6a00           push 0
0x00001648      89ef           mov edi, ebp
0x0000164a      4c8d0dbf0c00.  lea r9, sym.usage                       ; 0x2310 ; "AUAT\xba\x05"
0x00001651      4c8d05bc4100.  lea r8, str.8.31                        ; 0x5814 ; "8.31"
0x00001658      488d0d704100.  lea rcx, str.GNU_coreutils              ; 0x57cf ; "GNU coreutils"
0x0000165f      50             push rax
0x00001660      488d15dd4000.  lea rdx, str.getlimits                  ; 0x5744 ; "getlimits"
0x00001667      4889de         mov rsi, rbx
0x0000166a      31c0           xor eax, eax
0x0000166c      488d6c2410     lea rbp, [rsp + 0x10]
0x00001671      e8ea140000     call sym.parse_long_options
0x00001676      488d5d01       lea rbx, [rbp + 1]
0x0000167a      488d0da64100.  lea rcx, [0x00005827]                   ; "%lu"
0x00001681      41b87f000000   mov r8d, 0x7f
0x00001687      ba15000000     mov edx, 0x15
0x0000168c      be01000000     mov esi, 1
0x00001691      31c0           xor eax, eax
0x00001693      4889df         mov rdi, rbx
0x00001696      e825ffffff     call sym.imp.__sprintf_chk
0x0000169b      488d358e4100.  lea rsi, [0x00005830]                   ; "CHAR_MAX=%s\n"
0x000016a2      4889da         mov rdx, rbx
0x000016a5      bf01000000     mov edi, 1
0x000016aa      31c0           xor eax, eax
0x000016ac      e85ffeffff     call sym.imp.__printf_chk
0x000016b1      4889ef         mov rdi, rbp
0x000016b4      e8e70a0000     call sym.decimal_absval_add_one
0x000016b9      488d357e4100.  lea rsi, [0x0000583e]                   ; "CHAR_OFLOW=%s\n"
0x000016c0      4889c2         mov rdx, rax
0x000016c3      bf01000000     mov edi, 1
0x000016c8      31c0           xor eax, eax
0x000016ca      e841feffff     call sym.imp.__printf_chk
0x000016cf      488d0d554100.  lea rcx, [0x0000582b]                   ; "%ld"
0x000016d6      49c7c080ffff.  mov r8, 0xffffffffffffff80
0x000016dd      ba15000000     mov edx, 0x15
0x000016e2      be01000000     mov esi, 1
0x000016e7      4889df         mov rdi, rbx
0x000016ea      31c0           xor eax, eax
0x000016ec      e8cffeffff     call sym.imp.__sprintf_chk
0x000016f1      488d35564100.  lea rsi, [0x0000584e]                   ; "CHAR_MIN=%s\n"
0x000016f8      4889da         mov rdx, rbx
0x000016fb      bf01000000     mov edi, 1
0x00001700      31c0           xor eax, eax
0x00001702      e809feffff     call sym.imp.__printf_chk
0x00001707      4889ef         mov rdi, rbp
0x0000170a      e8910a0000     call sym.decimal_absval_add_one
0x0000170f      488d35464100.  lea rsi, [0x0000585c]                   ; "CHAR_UFLOW=%s\n"
0x00001716      4889c2         mov rdx, rax
0x00001719      bf01000000     mov edi, 1
0x0000171e      31c0           xor eax, eax
0x00001720      e8ebfdffff     call sym.imp.__printf_chk
0x00001725      488d0dfb4000.  lea rcx, [0x00005827]                   ; "%lu"
0x0000172c      41b87f000000   mov r8d, 0x7f
0x00001732      ba15000000     mov edx, 0x15
0x00001737      be01000000     mov esi, 1
0x0000173c      4889df         mov rdi, rbx
0x0000173f      31c0           xor eax, eax
0x00001741      e87afeffff     call sym.imp.__sprintf_chk
0x00001746      488d35e24000.  lea rsi, str.SCHAR_MAX__s               ; 0x582f ; "SCHAR_MAX=%s\n"
0x0000174d      4889da         mov rdx, rbx
0x00001750      bf01000000     mov edi, 1
0x00001755      31c0           xor eax, eax
0x00001757      e8b4fdffff     call sym.imp.__printf_chk
0x0000175c      4889ef         mov rdi, rbp
0x0000175f      e83c0a0000     call sym.decimal_absval_add_one
0x00001764      488d35d24000.  lea rsi, str.SCHAR_OFLOW__s             ; 0x583d ; "SCHAR_OFLOW=%s\n"
0x0000176b      4889c2         mov rdx, rax
0x0000176e      bf01000000     mov edi, 1
0x00001773      31c0           xor eax, eax
0x00001775      e896fdffff     call sym.imp.__printf_chk
0x0000177a      488d0daa4000.  lea rcx, [0x0000582b]                   ; "%ld"
0x00001781      49c7c080ffff.  mov r8, 0xffffffffffffff80
0x00001788      ba15000000     mov edx, 0x15
0x0000178d      be01000000     mov esi, 1
0x00001792      4889df         mov rdi, rbx
0x00001795      31c0           xor eax, eax
0x00001797      e824feffff     call sym.imp.__sprintf_chk
0x0000179c      488d35aa4000.  lea rsi, str.SCHAR_MIN__s               ; 0x584d ; "SCHAR_MIN=%s\n"
0x000017a3      31c0           xor eax, eax
0x000017a5      4889da         mov rdx, rbx
0x000017a8      bf01000000     mov edi, 1
0x000017ad      e85efdffff     call sym.imp.__printf_chk
0x000017b2      4889ef         mov rdi, rbp
0x000017b5      e8e6090000     call sym.decimal_absval_add_one
0x000017ba      488d359a4000.  lea rsi, str.SCHAR_UFLOW__s             ; 0x585b ; "SCHAR_UFLOW=%s\n"
0x000017c1      4889c2         mov rdx, rax
0x000017c4      bf01000000     mov edi, 1
0x000017c9      31c0           xor eax, eax
0x000017cb      e840fdffff     call sym.imp.__printf_chk
0x000017d0      488d0d504000.  lea rcx, [0x00005827]                   ; "%lu"
0x000017d7      41b8ff000000   mov r8d, 0xff
0x000017dd      ba15000000     mov edx, 0x15
0x000017e2      be01000000     mov esi, 1
0x000017e7      4889df         mov rdi, rbx
0x000017ea      31c0           xor eax, eax
0x000017ec      e8cffdffff     call sym.imp.__sprintf_chk
0x000017f1      488d35734000.  lea rsi, str.UCHAR_MAX__s               ; 0x586b ; "UCHAR_MAX=%s\n"
0x000017f8      4889da         mov rdx, rbx
0x000017fb      bf01000000     mov edi, 1
0x00001800      31c0           xor eax, eax
0x00001802      e809fdffff     call sym.imp.__printf_chk
0x00001807      4889ef         mov rdi, rbp
0x0000180a      e891090000     call sym.decimal_absval_add_one
0x0000180f      488d35634000.  lea rsi, str.UCHAR_OFLOW__s             ; 0x5879 ; "UCHAR_OFLOW=%s\n"
0x00001816      4889c2         mov rdx, rax
0x00001819      bf01000000     mov edi, 1
0x0000181e      31c0           xor eax, eax
0x00001820      e8ebfcffff     call sym.imp.__printf_chk
0x00001825      488d0dfb3f00.  lea rcx, [0x00005827]                   ; "%lu"
0x0000182c      41b8ff7f0000   mov r8d, 0x7fff
0x00001832      ba15000000     mov edx, 0x15
0x00001837      be01000000     mov esi, 1
0x0000183c      4889df         mov rdi, rbx
0x0000183f      31c0           xor eax, eax
0x00001841      e87afdffff     call sym.imp.__sprintf_chk
0x00001846      488d353c4000.  lea rsi, str.SHRT_MAX__s                ; 0x5889 ; "SHRT_MAX=%s\n"
0x0000184d      4889da         mov rdx, rbx
0x00001850      bf01000000     mov edi, 1
0x00001855      31c0           xor eax, eax
0x00001857      e8b4fcffff     call sym.imp.__printf_chk
0x0000185c      4889ef         mov rdi, rbp
0x0000185f      e83c090000     call sym.decimal_absval_add_one
0x00001864      488d352b4000.  lea rsi, str.SHRT_OFLOW__s              ; 0x5896 ; "SHRT_OFLOW=%s\n"
0x0000186b      4889c2         mov rdx, rax
0x0000186e      bf01000000     mov edi, 1
0x00001873      31c0           xor eax, eax
0x00001875      e896fcffff     call sym.imp.__printf_chk
0x0000187a      488d0daa3f00.  lea rcx, [0x0000582b]                   ; "%ld"
0x00001881      49c7c00080ff.  mov r8, 0xffffffffffff8000
0x00001888      ba15000000     mov edx, 0x15
0x0000188d      be01000000     mov esi, 1
0x00001892      4889df         mov rdi, rbx
0x00001895      31c0           xor eax, eax
0x00001897      e824fdffff     call sym.imp.__sprintf_chk
0x0000189c      488d35024000.  lea rsi, str.SHRT_MIN__s                ; 0x58a5 ; "SHRT_MIN=%s\n"
0x000018a3      4889da         mov rdx, rbx
0x000018a6      bf01000000     mov edi, 1
0x000018ab      31c0           xor eax, eax
0x000018ad      e85efcffff     call sym.imp.__printf_chk
0x000018b2      4889ef         mov rdi, rbp
0x000018b5      e8e6080000     call sym.decimal_absval_add_one
0x000018ba      488d35f13f00.  lea rsi, str.SHRT_UFLOW__s              ; 0x58b2 ; "SHRT_UFLOW=%s\n"
0x000018c1      4889c2         mov rdx, rax
0x000018c4      bf01000000     mov edi, 1
0x000018c9      31c0           xor eax, eax
0x000018cb      e840fcffff     call sym.imp.__printf_chk
0x000018d0      488d0d503f00.  lea rcx, [0x00005827]                   ; "%lu"
0x000018d7      41b8ffffff7f   mov r8d, 0x7fffffff
0x000018dd      ba15000000     mov edx, 0x15
0x000018e2      be01000000     mov esi, 1
0x000018e7      4889df         mov rdi, rbx
0x000018ea      31c0           xor eax, eax
0x000018ec      e8cffcffff     call sym.imp.__sprintf_chk
0x000018f1      488d35e43f00.  lea rsi, [0x000058dc]                   ; "INT_MAX=%s\n"
0x000018f8      4889da         mov rdx, rbx
0x000018fb      bf01000000     mov edi, 1
0x00001900      31c0           xor eax, eax
0x00001902      e809fcffff     call sym.imp.__printf_chk
0x00001907      4889ef         mov rdi, rbp
0x0000190a      e891080000     call sym.decimal_absval_add_one
0x0000190f      488d35d33f00.  lea rsi, [0x000058e9]                   ; "INT_OFLOW=%s\n"
0x00001916      4889c2         mov rdx, rax
0x00001919      bf01000000     mov edi, 1
0x0000191e      31c0           xor eax, eax
0x00001920      e8ebfbffff     call sym.imp.__printf_chk
0x00001925      488d0dff3e00.  lea rcx, [0x0000582b]                   ; "%ld"
0x0000192c      49c7c0000000.  mov r8, 0xffffffff80000000
0x00001933      ba15000000     mov edx, 0x15
0x00001938      be01000000     mov esi, 1
0x0000193d      4889df         mov rdi, rbx
0x00001940      31c0           xor eax, eax
0x00001942      e879fcffff     call sym.imp.__sprintf_chk
0x00001947      488d35733f00.  lea rsi, str.INT_MIN__s                 ; 0x58c1 ; "INT_MIN=%s\n"
0x0000194e      4889da         mov rdx, rbx
0x00001951      bf01000000     mov edi, 1
0x00001956      31c0           xor eax, eax
0x00001958      e8b3fbffff     call sym.imp.__printf_chk
0x0000195d      4889ef         mov rdi, rbp
0x00001960      e83b080000     call sym.decimal_absval_add_one
0x00001965      488d35613f00.  lea rsi, str.INT_UFLOW__s               ; 0x58cd ; "INT_UFLOW=%s\n"
0x0000196c      4889c2         mov rdx, rax
0x0000196f      bf01000000     mov edi, 1
0x00001974      31c0           xor eax, eax
0x00001976      e895fbffff     call sym.imp.__printf_chk
0x0000197b      488d0da53e00.  lea rcx, [0x00005827]                   ; "%lu"
0x00001982      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x00001988      ba15000000     mov edx, 0x15
0x0000198d      be01000000     mov esi, 1
0x00001992      4889df         mov rdi, rbx
0x00001995      31c0           xor eax, eax
0x00001997      e824fcffff     call sym.imp.__sprintf_chk
0x0000199c      488d35383f00.  lea rsi, str.UINT_MAX__s                ; 0x58db ; "UINT_MAX=%s\n"
0x000019a3      4889da         mov rdx, rbx
0x000019a6      bf01000000     mov edi, 1
0x000019ab      31c0           xor eax, eax
0x000019ad      e85efbffff     call sym.imp.__printf_chk
0x000019b2      4889ef         mov rdi, rbp
0x000019b5      e8e6070000     call sym.decimal_absval_add_one
0x000019ba      488d35273f00.  lea rsi, str.UINT_OFLOW__s              ; 0x58e8 ; "UINT_OFLOW=%s\n"
0x000019c1      4889c2         mov rdx, rax
0x000019c4      bf01000000     mov edi, 1
0x000019c9      31c0           xor eax, eax
0x000019cb      e840fbffff     call sym.imp.__printf_chk
0x000019d0      488d0d503e00.  lea rcx, [0x00005827]                   ; "%lu"
0x000019d7      49b8ffffffff.  movabs r8, 0x7fffffffffffffff           ; 9223372036854775807
0x000019e1      ba15000000     mov edx, 0x15
0x000019e6      be01000000     mov esi, 1
0x000019eb      4889df         mov rdi, rbx
0x000019ee      31c0           xor eax, eax
0x000019f0      e8cbfbffff     call sym.imp.__sprintf_chk
0x000019f5      488d35183f00.  lea rsi, [0x00005914]                   ; "LONG_MAX=%s\n"
0x000019fc      4889da         mov rdx, rbx
0x000019ff      bf01000000     mov edi, 1
0x00001a04      31c0           xor eax, eax
0x00001a06      e805fbffff     call sym.imp.__printf_chk
0x00001a0b      4889ef         mov rdi, rbp
0x00001a0e      e88d070000     call sym.decimal_absval_add_one
0x00001a13      488d35083f00.  lea rsi, [0x00005922]                   ; "LONG_OFLOW=%s\n"
0x00001a1a      4889c2         mov rdx, rax
0x00001a1d      bf01000000     mov edi, 1
0x00001a22      31c0           xor eax, eax
0x00001a24      e8e7faffff     call sym.imp.__printf_chk
0x00001a29      488d0dfb3d00.  lea rcx, [0x0000582b]                   ; "%ld"
0x00001a30      49b800000000.  movabs r8, 0x8000000000000000
0x00001a3a      ba15000000     mov edx, 0x15
0x00001a3f      be01000000     mov esi, 1
0x00001a44      4889df         mov rdi, rbx
0x00001a47      31c0           xor eax, eax
0x00001a49      e872fbffff     call sym.imp.__sprintf_chk
0x00001a4e      488d35a23e00.  lea rsi, str.LONG_MIN__s                ; 0x58f7 ; "LONG_MIN=%s\n"
0x00001a55      4889da         mov rdx, rbx
0x00001a58      bf01000000     mov edi, 1
0x00001a5d      31c0           xor eax, eax
0x00001a5f      e8acfaffff     call sym.imp.__printf_chk
0x00001a64      4889ef         mov rdi, rbp
0x00001a67      e834070000     call sym.decimal_absval_add_one
0x00001a6c      488d35913e00.  lea rsi, str.LONG_UFLOW__s              ; 0x5904 ; "LONG_UFLOW=%s\n"
0x00001a73      4889c2         mov rdx, rax
0x00001a76      bf01000000     mov edi, 1
0x00001a7b      31c0           xor eax, eax
0x00001a7d      e88efaffff     call sym.imp.__printf_chk
0x00001a82      488d0d9e3d00.  lea rcx, [0x00005827]                   ; "%lu"
0x00001a89      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00001a90      ba15000000     mov edx, 0x15
0x00001a95      be01000000     mov esi, 1
0x00001a9a      4889df         mov rdi, rbx
0x00001a9d      31c0           xor eax, eax
0x00001a9f      e81cfbffff     call sym.imp.__sprintf_chk
0x00001aa4      488d35683e00.  lea rsi, str.ULONG_MAX__s               ; 0x5913 ; "ULONG_MAX=%s\n"
0x00001aab      4889da         mov rdx, rbx
0x00001aae      bf01000000     mov edi, 1
0x00001ab3      31c0           xor eax, eax
0x00001ab5      e856faffff     call sym.imp.__printf_chk
0x00001aba      4889ef         mov rdi, rbp
0x00001abd      e8de060000     call sym.decimal_absval_add_one
0x00001ac2      488d35583e00.  lea rsi, str.ULONG_OFLOW__s             ; 0x5921 ; "ULONG_OFLOW=%s\n"
0x00001ac9      4889c2         mov rdx, rax
0x00001acc      bf01000000     mov edi, 1
0x00001ad1      31c0           xor eax, eax
0x00001ad3      e838faffff     call sym.imp.__printf_chk
0x00001ad8      488d0d483d00.  lea rcx, [0x00005827]                   ; "%lu"
0x00001adf      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00001ae6      ba15000000     mov edx, 0x15
0x00001aeb      be01000000     mov esi, 1
0x00001af0      4889df         mov rdi, rbx
0x00001af3      31c0           xor eax, eax
0x00001af5      e8c6faffff     call sym.imp.__sprintf_chk
0x00001afa      488d35313e00.  lea rsi, [0x00005932]                   ; "SIZE_MAX=%s\n"
0x00001b01      4889da         mov rdx, rbx
0x00001b04      bf01000000     mov edi, 1
0x00001b09      31c0           xor eax, eax
0x00001b0b      e800faffff     call sym.imp.__printf_chk
0x00001b10      4889ef         mov rdi, rbp
0x00001b13      e888060000     call sym.decimal_absval_add_one
0x00001b18      488d35213e00.  lea rsi, [0x00005940]                   ; "SIZE_OFLOW=%s\n"
0x00001b1f      4889c2         mov rdx, rax
0x00001b22      bf01000000     mov edi, 1
0x00001b27      31c0           xor eax, eax
0x00001b29      e8e2f9ffff     call sym.imp.__printf_chk
0x00001b2e      488d0df23c00.  lea rcx, [0x00005827]                   ; "%lu"
0x00001b35      49b8ffffffff.  movabs r8, 0x7fffffffffffffff           ; 9223372036854775807
0x00001b3f      ba15000000     mov edx, 0x15
0x00001b44      be01000000     mov esi, 1
0x00001b49      4889df         mov rdi, rbx
0x00001b4c      31c0           xor eax, eax
0x00001b4e      e86dfaffff     call sym.imp.__sprintf_chk
0x00001b53      488d35d73d00.  lea rsi, str.SSIZE_MAX__s               ; 0x5931 ; "SSIZE_MAX=%s\n"
0x00001b5a      4889da         mov rdx, rbx
0x00001b5d      bf01000000     mov edi, 1
0x00001b62      31c0           xor eax, eax
0x00001b64      e8a7f9ffff     call sym.imp.__printf_chk
0x00001b69      4889ef         mov rdi, rbp
0x00001b6c      e82f060000     call sym.decimal_absval_add_one
0x00001b71      488d35c73d00.  lea rsi, str.SSIZE_OFLOW__s             ; 0x593f ; "SSIZE_OFLOW=%s\n"
0x00001b78      4889c2         mov rdx, rax
0x00001b7b      bf01000000     mov edi, 1
0x00001b80      31c0           xor eax, eax
0x00001b82      e889f9ffff     call sym.imp.__printf_chk
0x00001b87      488d0d9d3c00.  lea rcx, [0x0000582b]                   ; "%ld"
0x00001b8e      49b800000000.  movabs r8, 0x8000000000000000
0x00001b98      ba15000000     mov edx, 0x15
0x00001b9d      be01000000     mov esi, 1
0x00001ba2      4889df         mov rdi, rbx
0x00001ba5      31c0           xor eax, eax
0x00001ba7      e814faffff     call sym.imp.__sprintf_chk
0x00001bac      488d359c3d00.  lea rsi, str.SSIZE_MIN__s               ; 0x594f ; "SSIZE_MIN=%s\n"
0x00001bb3      4889da         mov rdx, rbx
0x00001bb6      bf01000000     mov edi, 1
0x00001bbb      31c0           xor eax, eax
0x00001bbd      e84ef9ffff     call sym.imp.__printf_chk
0x00001bc2      4889ef         mov rdi, rbp
0x00001bc5      e8d6050000     call sym.decimal_absval_add_one
0x00001bca      488d358c3d00.  lea rsi, str.SSIZE_UFLOW__s             ; 0x595d ; "SSIZE_UFLOW=%s\n"
0x00001bd1      4889c2         mov rdx, rax
0x00001bd4      bf01000000     mov edi, 1
0x00001bd9      31c0           xor eax, eax
0x00001bdb      e830f9ffff     call sym.imp.__printf_chk
0x00001be0      488d0d403c00.  lea rcx, [0x00005827]                   ; "%lu"
0x00001be7      49b8ffffffff.  movabs r8, 0x7fffffffffffffff           ; 9223372036854775807
0x00001bf1      ba15000000     mov edx, 0x15
0x00001bf6      be01000000     mov esi, 1
0x00001bfb      4889df         mov rdi, rbx
0x00001bfe      31c0           xor eax, eax
0x00001c00      e8bbf9ffff     call sym.imp.__sprintf_chk
0x00001c05      488d35613d00.  lea rsi, str.TIME_T_MAX__s              ; 0x596d ; "TIME_T_MAX=%s\n"
0x00001c0c      4889da         mov rdx, rbx
0x00001c0f      bf01000000     mov edi, 1
0x00001c14      31c0           xor eax, eax
0x00001c16      e8f5f8ffff     call sym.imp.__printf_chk
0x00001c1b      4889ef         mov rdi, rbp
0x00001c1e      e87d050000     call sym.decimal_absval_add_one
0x00001c23      488d35523d00.  lea rsi, str.TIME_T_OFLOW__s            ; 0x597c ; "TIME_T_OFLOW=%s\n"
0x00001c2a      4889c2         mov rdx, rax
0x00001c2d      bf01000000     mov edi, 1
0x00001c32      31c0           xor eax, eax
0x00001c34      e8d7f8ffff     call sym.imp.__printf_chk
0x00001c39      488d0deb3b00.  lea rcx, [0x0000582b]                   ; "%ld"
0x00001c40      31c0           xor eax, eax
0x00001c42      49b800000000.  movabs r8, 0x8000000000000000
0x00001c4c      ba15000000     mov edx, 0x15
0x00001c51      be01000000     mov esi, 1
0x00001c56      4889df         mov rdi, rbx
0x00001c59      e862f9ffff     call sym.imp.__sprintf_chk
0x00001c5e      488d35283d00.  lea rsi, str.TIME_T_MIN__s              ; 0x598d ; "TIME_T_MIN=%s\n"
0x00001c65      4889da         mov rdx, rbx
0x00001c68      bf01000000     mov edi, 1
0x00001c6d      31c0           xor eax, eax
0x00001c6f      e89cf8ffff     call sym.imp.__printf_chk
0x00001c74      4889ef         mov rdi, rbp
0x00001c77      e824050000     call sym.decimal_absval_add_one
0x00001c7c      488d35193d00.  lea rsi, str.TIME_T_UFLOW__s            ; 0x599c ; "TIME_T_UFLOW=%s\n"
0x00001c83      4889c2         mov rdx, rax
0x00001c86      bf01000000     mov edi, 1
0x00001c8b      31c0           xor eax, eax
0x00001c8d      e87ef8ffff     call sym.imp.__printf_chk
0x00001c92      488d0d8e3b00.  lea rcx, [0x00005827]                   ; "%lu"
0x00001c99      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x00001c9f      ba15000000     mov edx, 0x15
0x00001ca4      be01000000     mov esi, 1
0x00001ca9      4889df         mov rdi, rbx
0x00001cac      31c0           xor eax, eax
0x00001cae      e80df9ffff     call sym.imp.__sprintf_chk
0x00001cb3      488d35f33c00.  lea rsi, str.UID_T_MAX__s               ; 0x59ad ; "UID_T_MAX=%s\n"
0x00001cba      4889da         mov rdx, rbx
0x00001cbd      bf01000000     mov edi, 1
0x00001cc2      31c0           xor eax, eax
0x00001cc4      e847f8ffff     call sym.imp.__printf_chk
0x00001cc9      4889ef         mov rdi, rbp
0x00001ccc      e8cf040000     call sym.decimal_absval_add_one
0x00001cd1      488d35e33c00.  lea rsi, str.UID_T_OFLOW__s             ; 0x59bb ; "UID_T_OFLOW=%s\n"
0x00001cd8      4889c2         mov rdx, rax
0x00001cdb      bf01000000     mov edi, 1
0x00001ce0      31c0           xor eax, eax
0x00001ce2      e829f8ffff     call sym.imp.__printf_chk
0x00001ce7      488d0d393b00.  lea rcx, [0x00005827]                   ; "%lu"
0x00001cee      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x00001cf4      ba15000000     mov edx, 0x15
0x00001cf9      be01000000     mov esi, 1
0x00001cfe      4889df         mov rdi, rbx
0x00001d01      31c0           xor eax, eax
0x00001d03      e8b8f8ffff     call sym.imp.__sprintf_chk
0x00001d08      488d35bc3c00.  lea rsi, str.GID_T_MAX__s               ; 0x59cb ; "GID_T_MAX=%s\n"
0x00001d0f      4889da         mov rdx, rbx
0x00001d12      bf01000000     mov edi, 1
0x00001d17      31c0           xor eax, eax
0x00001d19      e8f2f7ffff     call sym.imp.__printf_chk
0x00001d1e      4889ef         mov rdi, rbp
0x00001d21      e87a040000     call sym.decimal_absval_add_one
0x00001d26      488d35ac3c00.  lea rsi, str.GID_T_OFLOW__s             ; 0x59d9 ; "GID_T_OFLOW=%s\n"
0x00001d2d      4889c2         mov rdx, rax
0x00001d30      bf01000000     mov edi, 1
0x00001d35      31c0           xor eax, eax
0x00001d37      e8d4f7ffff     call sym.imp.__printf_chk
0x00001d3c      488d0de43a00.  lea rcx, [0x00005827]                   ; "%lu"
0x00001d43      41b8ffffff7f   mov r8d, 0x7fffffff
0x00001d49      ba15000000     mov edx, 0x15
0x00001d4e      be01000000     mov esi, 1
0x00001d53      4889df         mov rdi, rbx
0x00001d56      31c0           xor eax, eax
0x00001d58      e863f8ffff     call sym.imp.__sprintf_chk
0x00001d5d      488d35853c00.  lea rsi, str.PID_T_MAX__s               ; 0x59e9 ; "PID_T_MAX=%s\n"
0x00001d64      4889da         mov rdx, rbx
0x00001d67      bf01000000     mov edi, 1
0x00001d6c      31c0           xor eax, eax
0x00001d6e      e89df7ffff     call sym.imp.__printf_chk
0x00001d73      4889ef         mov rdi, rbp
0x00001d76      e825040000     call sym.decimal_absval_add_one
0x00001d7b      488d35753c00.  lea rsi, str.PID_T_OFLOW__s             ; 0x59f7 ; "PID_T_OFLOW=%s\n"
0x00001d82      4889c2         mov rdx, rax
0x00001d85      bf01000000     mov edi, 1
0x00001d8a      31c0           xor eax, eax
0x00001d8c      e87ff7ffff     call sym.imp.__printf_chk
0x00001d91      488d0d933a00.  lea rcx, [0x0000582b]                   ; "%ld"
0x00001d98      49c7c0000000.  mov r8, 0xffffffff80000000
0x00001d9f      ba15000000     mov edx, 0x15
0x00001da4      be01000000     mov esi, 1
0x00001da9      4889df         mov rdi, rbx
0x00001dac      31c0           xor eax, eax
0x00001dae      e80df8ffff     call sym.imp.__sprintf_chk
0x00001db3      488d354d3c00.  lea rsi, str.PID_T_MIN__s               ; 0x5a07 ; "PID_T_MIN=%s\n"
0x00001dba      4889da         mov rdx, rbx
0x00001dbd      bf01000000     mov edi, 1
0x00001dc2      31c0           xor eax, eax
0x00001dc4      e847f7ffff     call sym.imp.__printf_chk
0x00001dc9      4889ef         mov rdi, rbp
0x00001dcc      e8cf030000     call sym.decimal_absval_add_one
0x00001dd1      488d353d3c00.  lea rsi, str.PID_T_UFLOW__s             ; 0x5a15 ; "PID_T_UFLOW=%s\n"
0x00001dd8      4889c2         mov rdx, rax
0x00001ddb      bf01000000     mov edi, 1
0x00001de0      31c0           xor eax, eax
0x00001de2      e829f7ffff     call sym.imp.__printf_chk
0x00001de7      488d0d393a00.  lea rcx, [0x00005827]                   ; "%lu"
0x00001dee      49b8ffffffff.  movabs r8, 0x7fffffffffffffff           ; 9223372036854775807
0x00001df8      ba15000000     mov edx, 0x15
0x00001dfd      be01000000     mov esi, 1
0x00001e02      4889df         mov rdi, rbx
0x00001e05      31c0           xor eax, eax
0x00001e07      e8b4f7ffff     call sym.imp.__sprintf_chk
0x00001e0c      488d35123c00.  lea rsi, str.OFF_T_MAX__s               ; 0x5a25 ; "OFF_T_MAX=%s\n"
0x00001e13      4889da         mov rdx, rbx
0x00001e16      bf01000000     mov edi, 1
0x00001e1b      31c0           xor eax, eax
0x00001e1d      e8eef6ffff     call sym.imp.__printf_chk
0x00001e22      4889ef         mov rdi, rbp
0x00001e25      e876030000     call sym.decimal_absval_add_one
0x00001e2a      488d35023c00.  lea rsi, str.OFF_T_OFLOW__s             ; 0x5a33 ; "OFF_T_OFLOW=%s\n"
0x00001e31      4889c2         mov rdx, rax
0x00001e34      bf01000000     mov edi, 1
0x00001e39      31c0           xor eax, eax
0x00001e3b      e8d0f6ffff     call sym.imp.__printf_chk
0x00001e40      488d0de43900.  lea rcx, [0x0000582b]                   ; "%ld"
0x00001e47      49b800000000.  movabs r8, 0x8000000000000000
0x00001e51      ba15000000     mov edx, 0x15
0x00001e56      be01000000     mov esi, 1
0x00001e5b      4889df         mov rdi, rbx
0x00001e5e      31c0           xor eax, eax
0x00001e60      e85bf7ffff     call sym.imp.__sprintf_chk
0x00001e65      488d35d73b00.  lea rsi, str.OFF_T_MIN__s               ; 0x5a43 ; "OFF_T_MIN=%s\n"
0x00001e6c      4889da         mov rdx, rbx
0x00001e6f      bf01000000     mov edi, 1
0x00001e74      31c0           xor eax, eax
0x00001e76      e895f6ffff     call sym.imp.__printf_chk
0x00001e7b      4889ef         mov rdi, rbp
0x00001e7e      e81d030000     call sym.decimal_absval_add_one
0x00001e83      488d35c73b00.  lea rsi, str.OFF_T_UFLOW__s             ; 0x5a51 ; "OFF_T_UFLOW=%s\n"
0x00001e8a      4889c2         mov rdx, rax
0x00001e8d      bf01000000     mov edi, 1
0x00001e92      31c0           xor eax, eax
0x00001e94      e877f6ffff     call sym.imp.__printf_chk
0x00001e99      488d0d873900.  lea rcx, [0x00005827]                   ; "%lu"
0x00001ea0      49b8ffffffff.  movabs r8, 0x7fffffffffffffff           ; 9223372036854775807
0x00001eaa      ba15000000     mov edx, 0x15
0x00001eaf      be01000000     mov esi, 1
0x00001eb4      4889df         mov rdi, rbx
0x00001eb7      31c0           xor eax, eax
0x00001eb9      e802f7ffff     call sym.imp.__sprintf_chk
0x00001ebe      488d35bd3b00.  lea rsi, [0x00005a82]                   ; "INTMAX_MAX=%s\n"
0x00001ec5      4889da         mov rdx, rbx
0x00001ec8      bf01000000     mov edi, 1
0x00001ecd      31c0           xor eax, eax
0x00001ecf      e83cf6ffff     call sym.imp.__printf_chk
0x00001ed4      4889ef         mov rdi, rbp
0x00001ed7      e8c4020000     call sym.decimal_absval_add_one
0x00001edc      488d35af3b00.  lea rsi, [0x00005a92]                   ; "INTMAX_OFLOW=%s\n"
0x00001ee3      4889c2         mov rdx, rax
0x00001ee6      bf01000000     mov edi, 1
0x00001eeb      31c0           xor eax, eax
0x00001eed      e81ef6ffff     call sym.imp.__printf_chk
0x00001ef2      488d0d323900.  lea rcx, [0x0000582b]                   ; "%ld"
0x00001ef9      49b800000000.  movabs r8, 0x8000000000000000
0x00001f03      ba15000000     mov edx, 0x15
0x00001f08      be01000000     mov esi, 1
0x00001f0d      4889df         mov rdi, rbx
0x00001f10      31c0           xor eax, eax
0x00001f12      e8a9f6ffff     call sym.imp.__sprintf_chk
0x00001f17      488d35433b00.  lea rsi, str.INTMAX_MIN__s              ; 0x5a61 ; "INTMAX_MIN=%s\n"
0x00001f1e      4889da         mov rdx, rbx
0x00001f21      bf01000000     mov edi, 1
0x00001f26      31c0           xor eax, eax
0x00001f28      e8e3f5ffff     call sym.imp.__printf_chk
0x00001f2d      4889ef         mov rdi, rbp
0x00001f30      e86b020000     call sym.decimal_absval_add_one
0x00001f35      488d35343b00.  lea rsi, str.INTMAX_UFLOW__s            ; 0x5a70 ; "INTMAX_UFLOW=%s\n"
0x00001f3c      4889c2         mov rdx, rax
0x00001f3f      bf01000000     mov edi, 1
0x00001f44      31c0           xor eax, eax
0x00001f46      e8c5f5ffff     call sym.imp.__printf_chk
0x00001f4b      488d0dd53800.  lea rcx, [0x00005827]                   ; "%lu"
0x00001f52      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00001f59      ba15000000     mov edx, 0x15
0x00001f5e      be01000000     mov esi, 1
0x00001f63      4889df         mov rdi, rbx
0x00001f66      31c0           xor eax, eax
0x00001f68      e853f6ffff     call sym.imp.__sprintf_chk
0x00001f6d      488d350d3b00.  lea rsi, str.UINTMAX_MAX__s             ; 0x5a81 ; "UINTMAX_MAX=%s\n"
0x00001f74      4889da         mov rdx, rbx
0x00001f77      bf01000000     mov edi, 1
0x00001f7c      31c0           xor eax, eax
0x00001f7e      e88df5ffff     call sym.imp.__printf_chk
0x00001f83      4889ef         mov rdi, rbp
0x00001f86      e815020000     call sym.decimal_absval_add_one
0x00001f8b      488d35ff3a00.  lea rsi, str.UINTMAX_OFLOW__s           ; 0x5a91 ; "UINTMAX_OFLOW=%s\n"
0x00001f92      4889c2         mov rdx, rax
0x00001f95      bf01000000     mov edi, 1
0x00001f9a      31c0           xor eax, eax
0x00001f9c      e86ff5ffff     call sym.imp.__printf_chk
0x00001fa1      488d35fb3a00.  lea rsi, str.FLT_MIN                    ; 0x5aa3 ; "FLT_MIN="
0x00001fa8      bf01000000     mov edi, 1
0x00001fad      31c0           xor eax, eax
0x00001faf      e85cf5ffff     call sym.imp.__printf_chk
0x00001fb4      f30f1005983c.  movss xmm0, dword [0x00005c54]          ; [0x5c54:4]=0x800000
0x00001fbc      e84f020000     call sym.print_FLT
0x00001fc1      488d35e43a00.  lea rsi, str.FLT_MAX                    ; 0x5aac ; "FLT_MAX="
0x00001fc8      bf01000000     mov edi, 1
0x00001fcd      31c0           xor eax, eax
0x00001fcf      e83cf5ffff     call sym.imp.__printf_chk
0x00001fd4      f30f10057c3c.  movss xmm0, dword [0x00005c58]          ; [0x5c58:4]=0x7f7fffff
0x00001fdc      e82f020000     call sym.print_FLT
0x00001fe1      488d35ce3a00.  lea rsi, [0x00005ab6]                   ; "DBL_MIN="
0x00001fe8      bf01000000     mov edi, 1
0x00001fed      31c0           xor eax, eax
0x00001fef      e81cf5ffff     call sym.imp.__printf_chk
0x00001ff4      f20f1005643c.  movsd xmm0, qword [0x00005c60]          ; [0x5c60:8]=0x10000000000000
0x00001ffc      e85f020000     call sym.print_DBL
0x00002001      488d35b83a00.  lea rsi, [0x00005ac0]                   ; "DBL_MAX="
0x00002008      bf01000000     mov edi, 1
0x0000200d      31c0           xor eax, eax
0x0000200f      e8fcf4ffff     call sym.imp.__printf_chk
0x00002014      f20f10054c3c.  movsd xmm0, qword [0x00005c68]          ; [0x5c68:8]=0x7fefffffffffffff
0x0000201c      e83f020000     call sym.print_DBL
0x00002021      488d358d3a00.  lea rsi, str.LDBL_MIN                   ; 0x5ab5 ; "LDBL_MIN="
0x00002028      bf01000000     mov edi, 1
0x0000202d      31c0           xor eax, eax
0x0000202f      e8dcf4ffff     call sym.imp.__printf_chk
0x00002034      48b800000000.  movabs rax, 0x8000000000000000
0x0000203e      6a01           push 1
0x00002040      50             push rax
0x00002041      e86a020000     call sym.print_LDBL
0x00002046      488d35723a00.  lea rsi, str.LDBL_MAX                   ; 0x5abf ; "LDBL_MAX="
0x0000204d      4883c420       add rsp, 0x20
0x00002051      bf01000000     mov edi, 1
0x00002056      31c0           xor eax, eax
0x00002058      e8b3f4ffff     call sym.imp.__printf_chk
0x0000205d      68fe7f0000     push 0x7ffe
0x00002062      6aff           push 0xffffffffffffffff
0x00002064      e847020000     call sym.print_LDBL
0x00002069      5a             pop rdx
0x0000206a      59             pop rcx
0x0000206b      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00002070      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002079      7509           jne 0x2084
0x0000207b      4883c428       add rsp, 0x28
0x0000207f      31c0           xor eax, eax
0x00002081      5b             pop rbx
0x00002082      5d             pop rbp
0x00002083      c3             ret
0x00002084      e867f3ffff     call sym.imp.__stack_chk_fail
0x00002089      0f1f80000000.  nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002090      31ed           xor ebp, ebp
0x00002092      4989d1         mov r9, rdx
0x00002095      5e             pop rsi
0x00002096      4889e2         mov rdx, rsp
0x00002099      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000209d      50             push rax
0x0000209e      54             push rsp
0x0000209f      4c8d055a3600.  lea r8, sym.__libc_csu_fini             ; 0x5700
0x000020a6      488d0de33500.  lea rcx, sym.__libc_csu_init            ; 0x5690 ; "AWAVI\x89\xd7AUATL\x8d%\xee$ "
0x000020ad      488d3d2cf5ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x15e0 ; "US\x89\xfdH\x89\xf3H\x83\xec(H\x8b>dH\x8b\x04%("
0x000020b4      ff15165f2000   call qword [reloc.__libc_start_main]    ; [0x207fd0:8]=0
0x000020ba      f4             hlt
0x000020bb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x000020c0      488d3db95f20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x000020c7      55             push rbp
0x000020c8      488d05b15f20.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x000020cf      4839f8         cmp rax, rdi
0x000020d2      4889e5         mov rbp, rsp
0x000020d5      7419           je 0x20f0
0x000020d7      488b05ea5e20.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x207fc8:8]=0
0x000020de      4885c0         test rax, rax
0x000020e1      740d           je 0x20f0
0x000020e3      5d             pop rbp
0x000020e4      ffe0           jmp rax
0x000020e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000020f0      5d             pop rbp
0x000020f1      c3             ret
0x000020f2      0f1f4000       nop dword [rax]
0x000020f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002100      488d3d795f20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00002107      488d35725f20.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x0000210e      55             push rbp
0x0000210f      4829fe         sub rsi, rdi
0x00002112      4889e5         mov rbp, rsp
0x00002115      48c1fe03       sar rsi, 3
0x00002119      4889f0         mov rax, rsi
0x0000211c      48c1e83f       shr rax, 0x3f
0x00002120      4801c6         add rsi, rax
0x00002123      48d1fe         sar rsi, 1
0x00002126      7418           je 0x2140
0x00002128      488b05b15e20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x207fe0:8]=0
0x0000212f      4885c0         test rax, rax
0x00002132      740c           je 0x2140
0x00002134      5d             pop rbp
0x00002135      ffe0           jmp rax
0x00002137      660f1f840000.  nop word [rax + rax]
0x00002140      5d             pop rbp
0x00002141      c3             ret
0x00002142      0f1f4000       nop dword [rax]
0x00002146      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002150      803d715f2000.  cmp byte [obj.completed.7697], 0        ; [0x2080c8:1]=0
0x00002157      752f           jne 0x2188
0x00002159      48833d875e20.  cmp qword [reloc.__cxa_finalize], 0     ; [0x207fe8:8]=0
0x00002161      55             push rbp
0x00002162      4889e5         mov rbp, rsp
0x00002165      740c           je 0x2173
0x00002167      488b3d9a5e20.  mov rdi, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x0000216e      e85df4ffff     call sym..plt.got
0x00002173      e848ffffff     call sym.deregister_tm_clones
0x00002178      c605495f2000.  mov byte [obj.completed.7697], 1        ; [0x2080c8:1]=0
0x0000217f      5d             pop rbp
0x00002180      c3             ret
0x00002181      0f1f80000000.  nop dword [rax]
0x00002188      f3c3           ret
0x0000218a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002190      55             push rbp
0x00002191      4889e5         mov rbp, rsp
0x00002194      5d             pop rbp
0x00002195      e966ffffff     jmp sym.register_tm_clones
0x0000219a      660f1f440000   nop word [rax + rax]
;-- decimal_absval_add_one:
0x000021a0      55             push rbp
0x000021a1      53             push rbx
0x000021a2      31c0           xor eax, eax
0x000021a4      4883ec08       sub rsp, 8
0x000021a8      0fb66f01       movzx ebp, byte [rdi + 1]
0x000021ac      4080fd2d       cmp bpl, 0x2d
0x000021b0      0f94c0         sete al
0x000021b3      488d5c0701     lea rbx, [rdi + rax + 1]
0x000021b8      4889df         mov rdi, rbx
0x000021bb      e820f2ffff     call sym.imp.strlen
0x000021c0      4801d8         add rax, rbx
0x000021c3      c643ff30       mov byte [rbx - 1], 0x30                ; '0'
                                                                       ; [0x30:1]=0
0x000021c7      0fb648ff       movzx ecx, byte [rax - 1]
0x000021cb      488d50ff       lea rdx, [rax - 1]
0x000021cf      80f939         cmp cl, 0x39
0x000021d2      7513           jne 0x21e7
0x000021d4      0f1f4000       nop dword [rax]
0x000021d8      c60230         mov byte [rdx], 0x30                    ; '0'
                                                                       ; [0x30:1]=0
0x000021db      4883ea01       sub rdx, 1
0x000021df      0fb60a         movzx ecx, byte [rdx]
0x000021e2      80f939         cmp cl, 0x39
0x000021e5      74f1           je 0x21d8
0x000021e7      83c101         add ecx, 1
0x000021ea      4889d0         mov rax, rdx
0x000021ed      4839d3         cmp rbx, rdx
0x000021f0      480f46c3       cmovbe rax, rbx
0x000021f4      4080fd2d       cmp bpl, 0x2d
0x000021f8      880a           mov byte [rdx], cl
0x000021fa      7508           jne 0x2204
0x000021fc      c640ff2d       mov byte [rax - 1], 0x2d                ; '-'
                                                                       ; [0x2d:1]=0
0x00002200      4883e801       sub rax, 1
0x00002204      4883c408       add rsp, 8
0x00002208      5b             pop rbx
0x00002209      5d             pop rbp
0x0000220a      c3             ret
0x0000220b      0f1f440000     nop dword [rax + rax]
;-- print_FLT:
0x00002210      53             push rbx
0x00002211      31c9           xor ecx, ecx
0x00002213      ba01000000     mov edx, 1
0x00002218      be1f000000     mov esi, 0x1f
0x0000221d      4883ec30       sub rsp, 0x30
0x00002221      4889e3         mov rbx, rsp
0x00002224      4889df         mov rdi, rbx
0x00002227      64488b042528.  mov rax, qword fs:[0x28]
0x00002230      4889442428     mov qword [rsp + 0x28], rax
0x00002235      31c0           xor eax, eax
0x00002237      e864060000     call sym.ftoastr
0x0000223c      4889df         mov rdi, rbx
0x0000223f      e82cf1ffff     call sym.imp.puts
0x00002244      488b442428     mov rax, qword [rsp + 0x28]
0x00002249      644833042528.  xor rax, qword fs:[0x28]
0x00002252      7506           jne 0x225a
0x00002254      4883c430       add rsp, 0x30
0x00002258      5b             pop rbx
0x00002259      c3             ret
0x0000225a      e891f1ffff     call sym.imp.__stack_chk_fail
0x0000225f      90             nop
;-- print_DBL:
0x00002260      53             push rbx
0x00002261      31c9           xor ecx, ecx
0x00002263      ba01000000     mov edx, 1
0x00002268      be28000000     mov esi, 0x28                           ; '('
0x0000226d      4883ec30       sub rsp, 0x30
0x00002271      4889e3         mov rbx, rsp
0x00002274      4889df         mov rdi, rbx
0x00002277      64488b042528.  mov rax, qword fs:[0x28]
0x00002280      4889442428     mov qword [rsp + 0x28], rax
0x00002285      31c0           xor eax, eax
0x00002287      e8a4040000     call sym.dtoastr
0x0000228c      4889df         mov rdi, rbx
0x0000228f      e8dcf0ffff     call sym.imp.puts
0x00002294      488b442428     mov rax, qword [rsp + 0x28]
0x00002299      644833042528.  xor rax, qword fs:[0x28]
0x000022a2      7506           jne 0x22aa
0x000022a4      4883c430       add rsp, 0x30
0x000022a8      5b             pop rbx
0x000022a9      c3             ret
0x000022aa      e841f1ffff     call sym.imp.__stack_chk_fail
0x000022af      90             nop
;-- print_LDBL:
0x000022b0      53             push rbx
0x000022b1      31c9           xor ecx, ecx
0x000022b3      ba01000000     mov edx, 1
0x000022b8      be2d000000     mov esi, 0x2d                           ; '-'
0x000022bd      4883ec40       sub rsp, 0x40
0x000022c1      64488b042528.  mov rax, qword fs:[0x28]
0x000022ca      4889442438     mov qword [rsp + 0x38], rax
0x000022cf      31c0           xor eax, eax
0x000022d1      4889e3         mov rbx, rsp
0x000022d4      ff742458       push qword [rsp + 0x58]
0x000022d8      ff742458       push qword [rsp + 0x58]
0x000022dc      4889df         mov rdi, rbx
0x000022df      e82c070000     call sym.ldtoastr
0x000022e4      4889df         mov rdi, rbx
0x000022e7      e884f0ffff     call sym.imp.puts
0x000022ec      58             pop rax
0x000022ed      5a             pop rdx
0x000022ee      488b442438     mov rax, qword [rsp + 0x38]
0x000022f3      644833042528.  xor rax, qword fs:[0x28]
0x000022fc      7506           jne 0x2304
0x000022fe      4883c440       add rsp, 0x40
0x00002302      5b             pop rbx
0x00002303      c3             ret
0x00002304      e8e7f0ffff     call sym.imp.__stack_chk_fail
0x00002309      0f1f80000000.  nop dword [rax]
;-- usage:
0x00002310      4155           push r13
0x00002312      4154           push r12
0x00002314      ba05000000     mov edx, 5
0x00002319      55             push rbp
0x0000231a      53             push rbx
0x0000231b      89fd           mov ebp, edi
0x0000231d      4881ec880000.  sub rsp, 0x88
0x00002324      488b1db55d20.  mov rbx, qword [obj.program_name]       ; [0x2080e0:8]=0
0x0000232b      64488b042528.  mov rax, qword fs:[0x28]
0x00002334      4889442478     mov qword [rsp + 0x78], rax
0x00002339      31c0           xor eax, eax
0x0000233b      85ff           test edi, edi
0x0000233d      742e           je 0x236d
0x0000233f      488d358a3700.  lea rsi, str.Try___s___help__for_more_information. ; 0x5ad0 ; "Try '%s --help' for more information.\n"
0x00002346      31ff           xor edi, edi
0x00002348      e873f0ffff     call sym.imp.dcgettext
0x0000234d      488b3d6c5d20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x00002354      4889c2         mov rdx, rax
0x00002357      4889d9         mov rcx, rbx
0x0000235a      be01000000     mov esi, 1
0x0000235f      31c0           xor eax, eax
0x00002361      e81af2ffff     call sym.imp.__fprintf_chk
0x00002366      89ef           mov edi, ebp
0x00002368      e8f3f1ffff     call sym.imp.exit
0x0000236d      488d35da3300.  lea rsi, str.Usage:__s                  ; 0x574e ; "Usage: %s\n"
0x00002374      31ff           xor edi, edi
0x00002376      e845f0ffff     call sym.imp.dcgettext
0x0000237b      4889da         mov rdx, rbx
0x0000237e      4889c6         mov rsi, rax
0x00002381      bf01000000     mov edi, 1
0x00002386      31c0           xor eax, eax
0x00002388      e883f1ffff     call sym.imp.__printf_chk
0x0000238d      488b1df45c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00002394      488d355d3700.  lea rsi, str.Output_platform_dependent_limits_in_a_format_useful_for_shell_scripts. ; 0x5af8 ; "Output platform dependent limits in a format useful for shell scripts.\n\n"
0x0000239b      ba05000000     mov edx, 5
0x000023a0      31ff           xor edi, edi
0x000023a2      e819f0ffff     call sym.imp.dcgettext
0x000023a7      4889de         mov rsi, rbx
0x000023aa      4889c7         mov rdi, rax
0x000023ad      e8bef0ffff     call sym.imp.fputs_unlocked
0x000023b2      488b1dcf5c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x000023b9      488d35883700.  lea rsi, str.help_____display_this_help_and_exit ; 0x5b48 ; "      --help     display this help and exit\n"
0x000023c0      ba05000000     mov edx, 5
0x000023c5      31ff           xor edi, edi
0x000023c7      e8f4efffff     call sym.imp.dcgettext
0x000023cc      4889de         mov rsi, rbx
0x000023cf      4889c7         mov rdi, rax
0x000023d2      e899f0ffff     call sym.imp.fputs_unlocked
0x000023d7      488b1daa5c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x000023de      488d35933700.  lea rsi, str.version__output_version_information_and_exit ; 0x5b78 ; "      --version  output version information and exit\n"
0x000023e5      ba05000000     mov edx, 5
0x000023ea      31ff           xor edi, edi
0x000023ec      e8cfefffff     call sym.imp.dcgettext
0x000023f1      4889de         mov rsi, rbx
0x000023f4      4889c7         mov rdi, rax
0x000023f7      488d1d463300.  lea rbx, str.getlimits                  ; 0x5744 ; "getlimits"
0x000023fe      e86df0ffff     call sym.imp.fputs_unlocked
0x00002403      488d054f3300.  lea rax, [0x00005759]                   ; "["
0x0000240a      488d0d893300.  lea rcx, str.sha256sum                  ; 0x579a ; "sha256sum"
0x00002411      48c744246000.  mov qword [rsp + 0x60], 0
0x0000241a      48c744246800.  mov qword [rsp + 0x68], 0
0x00002423      4889e2         mov rdx, rsp
0x00002426      48890424       mov qword [rsp], rax
0x0000242a      488d052a3300.  lea rax, str.test_invocation            ; 0x575b ; "test invocation"
0x00002431      48894c2430     mov qword [rsp + 0x30], rcx
0x00002436      488d0d673300.  lea rcx, str.sha384sum                  ; 0x57a4 ; "sha384sum"
0x0000243d      4889442408     mov qword [rsp + 8], rax
0x00002442      488d058a3300.  lea rax, [0x000057d3]                   ; "coreutils"
0x00002449      48894c2440     mov qword [rsp + 0x40], rcx
0x0000244e      488d0d593300.  lea rcx, str.sha512sum                  ; 0x57ae ; "sha512sum"
0x00002455      4889442410     mov qword [rsp + 0x10], rax
0x0000245a      488d050a3300.  lea rax, str.Multi_call_invocation      ; 0x576b ; "Multi-call invocation"
0x00002461      48894c2450     mov qword [rsp + 0x50], rcx
0x00002466      4889442418     mov qword [rsp + 0x18], rax
0x0000246b      488d050f3300.  lea rax, str.sha224sum                  ; 0x5781 ; "sha224sum"
0x00002472      4889442420     mov qword [rsp + 0x20], rax
0x00002477      488d050d3300.  lea rax, str.sha2_utilities             ; 0x578b ; "sha2 utilities"
0x0000247e      4889442428     mov qword [rsp + 0x28], rax
0x00002483      4889442438     mov qword [rsp + 0x38], rax
0x00002488      4889442448     mov qword [rsp + 0x48], rax
0x0000248d      4889442458     mov qword [rsp + 0x58], rax
0x00002492      660f1f440000   nop word [rax + rax]
0x00002498      4883c210       add rdx, 0x10
0x0000249c      488b3a         mov rdi, qword [rdx]
0x0000249f      4885ff         test rdi, rdi
0x000024a2      7413           je 0x24b7
0x000024a4      b90a000000     mov ecx, 0xa
0x000024a9      4889de         mov rsi, rbx
0x000024ac      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000024ae      0f97c0         seta al
0x000024b1      1c00           sbb al, 0
0x000024b3      84c0           test al, al
0x000024b5      75e1           jne 0x2498
0x000024b7      4c8b6208       mov r12, qword [rdx + 8]
0x000024bb      31ff           xor edi, edi
0x000024bd      ba05000000     mov edx, 5
0x000024c2      488d35ef3200.  lea rsi, str.s_online_help:___s         ; 0x57b8 ; "\n%s online help: <%s>\n"
0x000024c9      4d85e4         test r12, r12
0x000024cc      0f84c1000000   je 0x2593
0x000024d2      e8e9eeffff     call sym.imp.dcgettext
0x000024d7      488d0dd23600.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5bb0 ; "https://www.gnu.org/software/coreutils/"
0x000024de      488d15ea3200.  lea rdx, str.GNU_coreutils              ; 0x57cf ; "GNU coreutils"
0x000024e5      4889c6         mov rsi, rax
0x000024e8      bf01000000     mov edi, 1
0x000024ed      31c0           xor eax, eax
0x000024ef      e81cf0ffff     call sym.imp.__printf_chk
0x000024f4      31f6           xor esi, esi
0x000024f6      bf05000000     mov edi, 5
0x000024fb      e800f0ffff     call sym.imp.setlocale
0x00002500      4885c0         test rax, rax
0x00002503      741c           je 0x2521
0x00002505      488d35d13200.  lea rsi, [0x000057dd]                   ; "en_"
0x0000250c      ba03000000     mov edx, 3
0x00002511      4889c7         mov rdi, rax
0x00002514      e827eeffff     call sym.imp.strncmp
0x00002519      85c0           test eax, eax
0x0000251b      0f8507010000   jne 0x2628
0x00002521      488d35b93200.  lea rsi, str.Full_documentation___s_s   ; 0x57e1 ; "Full documentation <%s%s>\n"
0x00002528      31ff           xor edi, edi
0x0000252a      ba05000000     mov edx, 5
0x0000252f      e88ceeffff     call sym.imp.dcgettext
0x00002534      488d0d093200.  lea rcx, str.getlimits                  ; 0x5744 ; "getlimits"
0x0000253b      488d156e3600.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x5bb0 ; "https://www.gnu.org/software/coreutils/"
0x00002542      4889c6         mov rsi, rax
0x00002545      bf01000000     mov edi, 1
0x0000254a      31c0           xor eax, eax
0x0000254c      e8bfefffff     call sym.imp.__printf_chk
0x00002551      4939dc         cmp r12, rbx
0x00002554      488d0d1a3200.  lea rcx, [0x00005775]                   ; " invocation"
0x0000255b      488d1ddf3c00.  lea rbx, [0x00006241]
0x00002562      480f44d9       cmove rbx, rcx
0x00002566      488d35b33600.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x5c20 ; "or available locally via: info '(coreutils) %s%s'\n"
0x0000256d      31ff           xor edi, edi
0x0000256f      ba05000000     mov edx, 5
0x00002574      e847eeffff     call sym.imp.dcgettext
0x00002579      4889d9         mov rcx, rbx
0x0000257c      4889c6         mov rsi, rax
0x0000257f      4c89e2         mov rdx, r12
0x00002582      bf01000000     mov edi, 1
0x00002587      31c0           xor eax, eax
0x00002589      e882efffff     call sym.imp.__printf_chk
0x0000258e      e9d3fdffff     jmp 0x2366
0x00002593      e828eeffff     call sym.imp.dcgettext
0x00002598      488d0d113600.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5bb0 ; "https://www.gnu.org/software/coreutils/"
0x0000259f      488d15293200.  lea rdx, str.GNU_coreutils              ; 0x57cf ; "GNU coreutils"
0x000025a6      4889c6         mov rsi, rax
0x000025a9      bf01000000     mov edi, 1
0x000025ae      31c0           xor eax, eax
0x000025b0      e85befffff     call sym.imp.__printf_chk
0x000025b5      31f6           xor esi, esi
0x000025b7      bf05000000     mov edi, 5
0x000025bc      e83fefffff     call sym.imp.setlocale
0x000025c1      4885c0         test rax, rax
0x000025c4      7418           je 0x25de
0x000025c6      488d35103200.  lea rsi, [0x000057dd]                   ; "en_"
0x000025cd      ba03000000     mov edx, 3
0x000025d2      4889c7         mov rdi, rax
0x000025d5      e866edffff     call sym.imp.strncmp
0x000025da      85c0           test eax, eax
0x000025dc      7543           jne 0x2621
0x000025de      488d35fc3100.  lea rsi, str.Full_documentation___s_s   ; 0x57e1 ; "Full documentation <%s%s>\n"
0x000025e5      ba05000000     mov edx, 5
0x000025ea      31ff           xor edi, edi
0x000025ec      4c8d25513100.  lea r12, str.getlimits                  ; 0x5744 ; "getlimits"
0x000025f3      488d1d7b3100.  lea rbx, [0x00005775]                   ; " invocation"
0x000025fa      e8c1edffff     call sym.imp.dcgettext
0x000025ff      488d0d3e3100.  lea rcx, str.getlimits                  ; 0x5744 ; "getlimits"
0x00002606      488d15a33500.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x5bb0 ; "https://www.gnu.org/software/coreutils/"
0x0000260d      4889c6         mov rsi, rax
0x00002610      bf01000000     mov edi, 1
0x00002615      31c0           xor eax, eax
0x00002617      e8f4eeffff     call sym.imp.__printf_chk
0x0000261c      e945ffffff     jmp 0x2566
0x00002621      4c8d251c3100.  lea r12, str.getlimits                  ; 0x5744 ; "getlimits"
0x00002628      4c8b2d595a20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x0000262f      488d35a23500.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x5bd8 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00002636      31ff           xor edi, edi
0x00002638      ba05000000     mov edx, 5
0x0000263d      e87eedffff     call sym.imp.dcgettext
0x00002642      4c89ee         mov rsi, r13
0x00002645      4889c7         mov rdi, rax
0x00002648      e823eeffff     call sym.imp.fputs_unlocked
0x0000264d      e9cffeffff     jmp 0x2521
0x00002652      662e0f1f8400.  nop word cs:[rax + rax]
0x0000265c      0f1f4000       nop dword [rax]
;-- close_stdout_set_file_name:
0x00002660      48893d715a20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x2080d8:8]=0
0x00002667      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002668      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00002670      40883d595a20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x2080d0:1]=0
0x00002677      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00002678      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00002680      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00002681      53             push rbx
0x00002682      4883ec08       sub rsp, 8
0x00002686      488b3dfb5920.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x0000268d      e8be2d0000     call sym.close_stream
0x00002692      85c0           test eax, eax
0x00002694      7416           je 0x26ac
0x00002696      e895ecffff     call sym.imp.__errno_location
0x0000269b      803d2e5a2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x2080d0:1]=0
0x000026a2      4889c3         mov rbx, rax
0x000026a5      741c           je 0x26c3
0x000026a7      833820         cmp dword [rax], 0x20
0x000026aa      7517           jne 0x26c3
0x000026ac      488b3d0d5a20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x000026b3      e8982d0000     call sym.close_stream
0x000026b8      85c0           test eax, eax
0x000026ba      7546           jne 0x2702
0x000026bc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x000026c0      5b             pop rbx
0x000026c1      5d             pop rbp
0x000026c2      c3             ret
0x000026c3      488d35a63500.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x5c70 ; "write error"
0x000026ca      31ff           xor edi, edi
0x000026cc      ba05000000     mov edx, 5
0x000026d1      e8eaecffff     call sym.imp.dcgettext
0x000026d6      488b3dfb5920.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x2080d8:8]=0
0x000026dd      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x000026e0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x000026e3      7428           je 0x270d
0x000026e5      e806220000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x000026ea      8b33           mov esi, dword [rbx]
0x000026ec      488d15893500.  lea rdx, str.s:__s                      ; 0x5c7c ; "%s: %s"
0x000026f3      4889c1         mov rcx, rax
0x000026f6      4989e8         mov r8, rbp
0x000026f9      31ff           xor edi, edi
0x000026fb      31c0           xor eax, eax
0x000026fd      e82eeeffff     call sym.imp.error
0x00002702      8b3d08592000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x208010:4]=1
0x00002708      e843ecffff     call sym.imp._exit
0x0000270d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000270f      488d156a3500.  lea rdx, [0x00005c80]                   ; "%s"
0x00002716      4889c1         mov rcx, rax
0x00002719      31ff           xor edi, edi
0x0000271b      31c0           xor eax, eax
0x0000271d      e80eeeffff     call sym.imp.error
0x00002722      ebde           jmp 0x2702
0x00002724      662e0f1f8400.  nop word cs:[rax + rax]
0x0000272e      6690           nop
;-- dtoastr:
0x00002730      4157           push r15
0x00002732      4156           push r14
0x00002734      4189ce         mov r14d, ecx
0x00002737      4155           push r13
0x00002739      4154           push r12
0x0000273b      4989fc         mov r12, rdi
0x0000273e      55             push rbp
0x0000273f      53             push rbx
0x00002740      4889f5         mov rbp, rsi
0x00002743      660f28d8       movapd xmm3, xmm0
0x00002747      4883ec38       sub rsp, 0x38
0x0000274b      f20f110424     movsd qword [rsp], xmm0
0x00002750      660fefc0       pxor xmm0, xmm0
0x00002754      64488b042528.  mov rax, qword fs:[0x28]
0x0000275d      4889442428     mov qword [rsp + 0x28], rax
0x00002762      31c0           xor eax, eax
0x00002764      660f2ec3       ucomisd xmm0, xmm3
0x00002768      0f8712010000   ja 0x2880
0x0000276e      f20f100424     movsd xmm0, qword [rsp]
0x00002773      89d0           mov eax, edx
0x00002775      4c8d6c241d     lea r13, [rsp + 0x1d]
0x0000277a      89d1           mov ecx, edx
0x0000277c      83e001         and eax, 1
0x0000277f      d1e9           shr ecx, 1
0x00002781      be252d0000     mov esi, 0x2d25                         ; '%-' ; "D\xd0E1\u000b\x1dpS "
0x00002786      498d7c0501     lea rdi, [r13 + rax + 1]
0x0000278b      83e101         and ecx, 1
0x0000278e      89d0           mov eax, edx
0x00002790      668974241d     mov word [rsp + 0x1d], si
0x00002795      c1e802         shr eax, 2
0x00002798      bb01000000     mov ebx, 1
0x0000279d      488d340f       lea rsi, [rdi + rcx]
0x000027a1      83e001         and eax, 1
0x000027a4      c6072b         mov byte [rdi], 0x2b                    ; '+'
                                                                       ; [0x2b:1]=0
0x000027a7      f20f100db134.  movsd xmm1, qword [0x00005c60]          ; [0x5c60:8]=0x10000000000000
0x000027af      bf2a2e0000     mov edi, 0x2e2a                         ; '*.'
0x000027b4      488d0c06       lea rcx, [rsi + rax]
0x000027b8      89d0           mov eax, edx
0x000027ba      83e210         and edx, 0x10
0x000027bd      c1e803         shr eax, 3
0x000027c0      c60620         mov byte [rsi], 0x20                    ; [0x20:1]=64 ; "@"
0x000027c3      49c7c7ffffff.  mov r15, 0xffffffffffffffff
0x000027ca      83e001         and eax, 1
0x000027cd      c60130         mov byte [rcx], 0x30                    ; '0'
                                                                       ; [0x30:1]=0
0x000027d0      4801c8         add rax, rcx
0x000027d3      83fa01         cmp edx, 1
0x000027d6      19d2           sbb edx, edx
0x000027d8      668938         mov word [rax], di
0x000027db      c640022a       mov byte [rax + 2], 0x2a                ; '*'
                                                                       ; [0x2a:1]=2
0x000027df      83e220         and edx, 0x20                           ; "@"
0x000027e2      c6400400       mov byte [rax + 4], 0
0x000027e6      83c247         add edx, 0x47
0x000027e9      660f2ec8       ucomisd xmm1, xmm0
0x000027ed      885003         mov byte [rax + 3], dl
0x000027f0      b80f000000     mov eax, 0xf
0x000027f5      0f46d8         cmovbe ebx, eax
0x000027f8      eb09           jmp 0x2803
0x000027fa      660f1f440000   nop word [rax + rax]
0x00002800      83c301         add ebx, 1
0x00002803      4883ec08       sub rsp, 8
0x00002807      4c89f9         mov rcx, r15
0x0000280a      ba01000000     mov edx, 1
0x0000280f      53             push rbx
0x00002810      4589f1         mov r9d, r14d
0x00002813      4d89e8         mov r8, r13
0x00002816      4889ee         mov rsi, rbp
0x00002819      4c89e7         mov rdi, r12
0x0000281c      b801000000     mov eax, 1
0x00002821      f20f10442410   movsd xmm0, qword [rsp + 0x10]
0x00002827      e8d4eaffff     call sym.imp.__snprintf_chk
0x0000282c      85c0           test eax, eax
0x0000282e      5a             pop rdx
0x0000282f      59             pop rcx
0x00002830      7828           js 0x285a
0x00002832      83fb10         cmp ebx, 0x10
0x00002835      7f23           jg 0x285a
0x00002837      4863d0         movsxd rdx, eax
0x0000283a      4839ea         cmp rdx, rbp
0x0000283d      73c1           jae 0x2800
0x0000283f      31f6           xor esi, esi
0x00002841      4c89e7         mov rdi, r12
0x00002844      8944240c       mov dword [rsp + 0xc], eax
0x00002848      e833ebffff     call sym.imp.strtod
0x0000284d      660f2e0424     ucomisd xmm0, qword [rsp]
0x00002852      7aac           jp 0x2800
0x00002854      8b44240c       mov eax, dword [rsp + 0xc]
0x00002858      75a6           jne 0x2800
0x0000285a      488b742428     mov rsi, qword [rsp + 0x28]
0x0000285f      644833342528.  xor rsi, qword fs:[0x28]
0x00002868      7527           jne 0x2891
0x0000286a      4883c438       add rsp, 0x38
0x0000286e      5b             pop rbx
0x0000286f      5d             pop rbp
0x00002870      415c           pop r12
0x00002872      415d           pop r13
0x00002874      415e           pop r14
0x00002876      415f           pop r15
0x00002878      c3             ret
0x00002879      0f1f80000000.  nop dword [rax]
0x00002880      660f28c3       movapd xmm0, xmm3
0x00002884      660f57050434.  xorpd xmm0, xmmword [0x00005c90]
0x0000288c      e9e2feffff     jmp 0x2773
0x00002891      e85aebffff     call sym.imp.__stack_chk_fail
0x00002896      662e0f1f8400.  nop word cs:[rax + rax]
;-- ftoastr:
0x000028a0      4157           push r15
0x000028a2      660fefe4       pxor xmm4, xmm4
0x000028a6      4156           push r14
0x000028a8      4155           push r13
0x000028aa      4189cf         mov r15d, ecx
0x000028ad      4154           push r12
0x000028af      55             push rbp
0x000028b0      4989fc         mov r12, rdi
0x000028b3      53             push rbx
0x000028b4      0f28d8         movaps xmm3, xmm0
0x000028b7      f30f5ae0       cvtss2sd xmm4, xmm0
0x000028bb      4889f5         mov rbp, rsi
0x000028be      4883ec38       sub rsp, 0x38
0x000028c2      f30f1144240c   movss dword [rsp + 0xc], xmm0
0x000028c8      660fefc0       pxor xmm0, xmm0
0x000028cc      64488b042528.  mov rax, qword fs:[0x28]
0x000028d5      4889442428     mov qword [rsp + 0x28], rax
0x000028da      31c0           xor eax, eax
0x000028dc      f20f112424     movsd qword [rsp], xmm4
0x000028e1      0f2ec3         ucomiss xmm0, xmm3
0x000028e4      0f870e010000   ja 0x29f8
0x000028ea      f30f1044240c   movss xmm0, dword [rsp + 0xc]
0x000028f0      89d0           mov eax, edx
0x000028f2      4c8d6c241d     lea r13, [rsp + 0x1d]
0x000028f7      89d1           mov ecx, edx
0x000028f9      83e001         and eax, 1
0x000028fc      d1e9           shr ecx, 1
0x000028fe      be252d0000     mov esi, 0x2d25                         ; '%-' ; "D\xd0E1\u000b\x1dpS "
0x00002903      498d7c0501     lea rdi, [r13 + rax + 1]
0x00002908      83e101         and ecx, 1
0x0000290b      89d0           mov eax, edx
0x0000290d      668974241d     mov word [rsp + 0x1d], si
0x00002912      c1e802         shr eax, 2
0x00002915      49c7c6ffffff.  mov r14, 0xffffffffffffffff
0x0000291c      488d340f       lea rsi, [rdi + rcx]
0x00002920      83e001         and eax, 1
0x00002923      c6072b         mov byte [rdi], 0x2b                    ; '+'
                                                                       ; [0x2b:1]=0
0x00002926      f30f100d2633.  movss xmm1, dword [0x00005c54]          ; [0x5c54:4]=0x800000
0x0000292e      bf2a2e0000     mov edi, 0x2e2a                         ; '*.'
0x00002933      488d0c06       lea rcx, [rsi + rax]
0x00002937      89d0           mov eax, edx
0x00002939      83e210         and edx, 0x10
0x0000293c      c1e803         shr eax, 3
0x0000293f      c60620         mov byte [rsi], 0x20                    ; [0x20:1]=64 ; "@"
0x00002942      83e001         and eax, 1
0x00002945      c60130         mov byte [rcx], 0x30                    ; '0'
                                                                       ; [0x30:1]=0
0x00002948      4801c8         add rax, rcx
0x0000294b      83fa01         cmp edx, 1
0x0000294e      19d2           sbb edx, edx
0x00002950      31db           xor ebx, ebx
0x00002952      668938         mov word [rax], di
0x00002955      83e220         and edx, 0x20                           ; "@"
0x00002958      c640022a       mov byte [rax + 2], 0x2a                ; '*'
                                                                       ; [0x2a:1]=2
0x0000295c      c6400400       mov byte [rax + 4], 0
0x00002960      83c247         add edx, 0x47
0x00002963      0f2ec8         ucomiss xmm1, xmm0
0x00002966      885003         mov byte [rax + 3], dl
0x00002969      0f96c3         setbe bl
0x0000296c      8d5c9b01       lea ebx, [rbx + rbx*4 + 1]
0x00002970      eb09           jmp 0x297b
0x00002972      660f1f440000   nop word [rax + rax]
0x00002978      83c301         add ebx, 1
0x0000297b      4883ec08       sub rsp, 8
0x0000297f      4c89f1         mov rcx, r14
0x00002982      ba01000000     mov edx, 1
0x00002987      53             push rbx
0x00002988      4589f9         mov r9d, r15d
0x0000298b      4d89e8         mov r8, r13
0x0000298e      4889ee         mov rsi, rbp
0x00002991      4c89e7         mov rdi, r12
0x00002994      b801000000     mov eax, 1
0x00002999      f20f10442410   movsd xmm0, qword [rsp + 0x10]
0x0000299f      e85ce9ffff     call sym.imp.__snprintf_chk
0x000029a4      85c0           test eax, eax
0x000029a6      5a             pop rdx
0x000029a7      59             pop rcx
0x000029a8      7828           js 0x29d2
0x000029aa      83fb08         cmp ebx, 8
0x000029ad      7f23           jg 0x29d2
0x000029af      4863d0         movsxd rdx, eax
0x000029b2      4839ea         cmp rdx, rbp
0x000029b5      73c1           jae 0x2978
0x000029b7      31f6           xor esi, esi
0x000029b9      4c89e7         mov rdi, r12
0x000029bc      89442408       mov dword [rsp + 8], eax
0x000029c0      e87beaffff     call sym.imp.strtof
0x000029c5      0f2e44240c     ucomiss xmm0, dword [rsp + 0xc]
0x000029ca      7aac           jp 0x2978
0x000029cc      8b442408       mov eax, dword [rsp + 8]
0x000029d0      75a6           jne 0x2978
0x000029d2      488b742428     mov rsi, qword [rsp + 0x28]
0x000029d7      644833342528.  xor rsi, qword fs:[0x28]
0x000029e0      7525           jne 0x2a07
0x000029e2      4883c438       add rsp, 0x38
0x000029e6      5b             pop rbx
0x000029e7      5d             pop rbp
0x000029e8      415c           pop r12
0x000029ea      415d           pop r13
0x000029ec      415e           pop r14
0x000029ee      415f           pop r15
0x000029f0      c3             ret
0x000029f1      0f1f80000000.  nop dword [rax]
0x000029f8      0f28c3         movaps xmm0, xmm3
0x000029fb      0f57059e3200.  xorps xmm0, xmmword [0x00005ca0]
0x00002a02      e9e9feffff     jmp 0x28f0
0x00002a07      e8e4e9ffff     call sym.imp.__stack_chk_fail
0x00002a0c      0f1f4000       nop dword [rax]
;-- ldtoastr:
0x00002a10      4157           push r15
0x00002a12      4156           push r14
0x00002a14      d9ee           fldz
0x00002a16      4155           push r13
0x00002a18      4154           push r12
0x00002a1a      4189ce         mov r14d, ecx
0x00002a1d      55             push rbp
0x00002a1e      53             push rbx
0x00002a1f      4989fc         mov r12, rdi
0x00002a22      4889f5         mov rbp, rsi
0x00002a25      4883ec38       sub rsp, 0x38
0x00002a29      db6c2470       fld xword [rsp + 0x70]
0x00002a2d      d9c9           fxch st(1)
0x00002a2f      64488b042528.  mov rax, qword fs:[0x28]
0x00002a38      4889442428     mov qword [rsp + 0x28], rax
0x00002a3d      31c0           xor eax, eax
0x00002a3f      dfe9           fucomip st(1)
0x00002a41      0f8709010000   ja 0x2b50
0x00002a47      ddd8           fstp st(0)
0x00002a49      db6c2470       fld xword [rsp + 0x70]
0x00002a4d      b8252d0000     mov eax, 0x2d25                         ; '%-' ; "D\xd0E1\u000b\x1dpS "
0x00002a52      4c8d6c241d     lea r13, [rsp + 0x1d]
0x00002a57      89d1           mov ecx, edx
0x00002a59      668944241d     mov word [rsp + 0x1d], ax
0x00002a5e      89d0           mov eax, edx
0x00002a60      d1e9           shr ecx, 1
0x00002a62      83e001         and eax, 1
0x00002a65      83e101         and ecx, 1
0x00002a68      bb01000000     mov ebx, 1
0x00002a6d      498d7c0501     lea rdi, [r13 + rax + 1]
0x00002a72      89d0           mov eax, edx
0x00002a74      49c7c7ffffff.  mov r15, 0xffffffffffffffff
0x00002a7b      c1e802         shr eax, 2
0x00002a7e      488d340f       lea rsi, [rdi + rcx]
0x00002a82      83e001         and eax, 1
0x00002a85      c6072b         mov byte [rdi], 0x2b                    ; '+'
                                                                       ; [0x2b:1]=0
0x00002a88      488d0c06       lea rcx, [rsi + rax]
0x00002a8c      89d0           mov eax, edx
0x00002a8e      83e210         and edx, 0x10
0x00002a91      db2d19320000   fld xword [0x00005cb0]
0x00002a97      c1e803         shr eax, 3
0x00002a9a      c60620         mov byte [rsi], 0x20                    ; [0x20:1]=64 ; "@"
0x00002a9d      c60130         mov byte [rcx], 0x30                    ; '0'
                                                                       ; [0x30:1]=0
0x00002aa0      83e001         and eax, 1
0x00002aa3      4801c8         add rax, rcx
0x00002aa6      83fa01         cmp edx, 1
0x00002aa9      19d2           sbb edx, edx
0x00002aab      c7002a2e2a4c   mov dword [rax], 0x4c2a2e2a             ; '*.*L'
                                                                       ; [0x4c2a2e2a:4]=-1
0x00002ab1      c6400500       mov byte [rax + 5], 0
0x00002ab5      83e220         and edx, 0x20                           ; "@"
0x00002ab8      83c247         add edx, 0x47
0x00002abb      885004         mov byte [rax + 4], dl
0x00002abe      b812000000     mov eax, 0x12
0x00002ac3      dfe9           fucomip st(1)
0x00002ac5      ddd8           fstp st(0)
0x00002ac7      0f46d8         cmovbe ebx, eax
0x00002aca      eb07           jmp 0x2ad3
0x00002acc      0f1f4000       nop dword [rax]
0x00002ad0      83c301         add ebx, 1
0x00002ad3      ff742478       push qword [rsp + 0x78]
0x00002ad7      ff742478       push qword [rsp + 0x78]
0x00002adb      31c0           xor eax, eax
0x00002add      4589f1         mov r9d, r14d
0x00002ae0      4d89e8         mov r8, r13
0x00002ae3      4c89f9         mov rcx, r15
0x00002ae6      4883ec08       sub rsp, 8
0x00002aea      ba01000000     mov edx, 1
0x00002aef      4889ee         mov rsi, rbp
0x00002af2      53             push rbx
0x00002af3      4c89e7         mov rdi, r12
0x00002af6      e805e8ffff     call sym.imp.__snprintf_chk
0x00002afb      4883c420       add rsp, 0x20
0x00002aff      85c0           test eax, eax
0x00002b01      782d           js 0x2b30
0x00002b03      83fb14         cmp ebx, 0x14
0x00002b06      7f28           jg 0x2b30
0x00002b08      4863d0         movsxd rdx, eax
0x00002b0b      4839ea         cmp rdx, rbp
0x00002b0e      73c0           jae 0x2ad0
0x00002b10      31f6           xor esi, esi
0x00002b12      4c89e7         mov rdi, r12
0x00002b15      8944240c       mov dword [rsp + 0xc], eax
0x00002b19      e802eaffff     call sym.imp.strtold
0x00002b1e      db6c2470       fld xword [rsp + 0x70]
0x00002b22      d9c9           fxch st(1)
0x00002b24      dfe9           fucomip st(1)
0x00002b26      ddd8           fstp st(0)
0x00002b28      7aa6           jp 0x2ad0
0x00002b2a      8b44240c       mov eax, dword [rsp + 0xc]
0x00002b2e      75a0           jne 0x2ad0
0x00002b30      488b742428     mov rsi, qword [rsp + 0x28]
0x00002b35      644833342528.  xor rsi, qword fs:[0x28]
0x00002b3e      7517           jne 0x2b57
0x00002b40      4883c438       add rsp, 0x38
0x00002b44      5b             pop rbx
0x00002b45      5d             pop rbp
0x00002b46      415c           pop r12
0x00002b48      415d           pop r13
0x00002b4a      415e           pop r14
0x00002b4c      415f           pop r15
0x00002b4e      c3             ret
0x00002b4f      90             nop
0x00002b50      d9e0           fchs
0x00002b52      e9f6feffff     jmp 0x2a4d
0x00002b57      e894e8ffff     call sym.imp.__stack_chk_fail
0x00002b5c      0f1f4000       nop dword [rax]
;-- parse_long_options:
0x00002b60      4155           push r13                                ; ../coreutils-8.31/lib/long-options.c:52
0x00002b62      4154           push r12
0x00002b64      4d89c5         mov r13, r8
0x00002b67      55             push rbp
0x00002b68      53             push rbx
0x00002b69      4889d5         mov rbp, rdx
0x00002b6c      4989cc         mov r12, rcx
0x00002b6f      4881ece80000.  sub rsp, 0xe8
0x00002b76      84c0           test al, al
0x00002b78      743a           je 0x2bb4
0x00002b7a      0f29442460     movaps xmmword [rsp + 0x60], xmm0
0x00002b7f      0f294c2470     movaps xmmword [rsp + 0x70], xmm1
0x00002b84      0f2994248000.  movaps xmmword [rsp + 0x80], xmm2
0x00002b8c      0f299c249000.  movaps xmmword [rsp + 0x90], xmm3
0x00002b94      0f29a424a000.  movaps xmmword [rsp + 0xa0], xmm4
0x00002b9c      0f29ac24b000.  movaps xmmword [rsp + 0xb0], xmm5
0x00002ba4      0f29b424c000.  movaps xmmword [rsp + 0xc0], xmm6
0x00002bac      0f29bc24d000.  movaps xmmword [rsp + 0xd0], xmm7
0x00002bb4      64488b042528.  mov rax, qword fs:[0x28]
0x00002bbd      4889442428     mov qword [rsp + 0x28], rax
0x00002bc2      31c0           xor eax, eax
0x00002bc4      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/long-options.c:61
0x00002bc7      8b1dd3542000   mov ebx, dword [obj.opterr]             ; ../coreutils-8.31/lib/long-options.c:56 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2080a0:4]=0
0x00002bcd      c705c9542000.  mov dword [obj.opterr], 0               ; ../coreutils-8.31/lib/long-options.c:59 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2080a0:4]=0
0x00002bd7      7437           je 0x2c10                               ; ../coreutils-8.31/lib/long-options.c:61
0x00002bd9      488b442428     mov rax, qword [rsp + 0x28]             ; ../coreutils-8.31/lib/long-options.c:90
0x00002bde      644833042528.  xor rax, qword fs:[0x28]
0x00002be7      891db3542000   mov dword [obj.opterr], ebx             ; ../coreutils-8.31/lib/long-options.c:85 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2080a0:4]=0
0x00002bed      c70599542000.  mov dword [obj.optind], 0               ; ../coreutils-8.31/lib/long-options.c:89 ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208090:4]=0
0x00002bf7      0f859d000000   jne 0x2c9a                              ; ../coreutils-8.31/lib/long-options.c:90
0x00002bfd      4881c4e80000.  add rsp, 0xe8
0x00002c04      5b             pop rbx
0x00002c05      5d             pop rbp
0x00002c06      415c           pop r12
0x00002c08      415d           pop r13
0x00002c0a      c3             ret
0x00002c0b      0f1f440000     nop dword [rax + rax]
0x00002c10      488d0d894f20.  lea rcx, obj.long_options               ; ../coreutils-8.31/lib/long-options.c:62 ; 0x207ba0
0x00002c17      488d15a23000.  lea rdx, [0x00005cc0]                   ; "+"
0x00002c1e      4531c0         xor r8d, r8d
0x00002c21      4c894c2408     mov qword [rsp + 8], r9
0x00002c26      e8d5e7ffff     call sym.imp.getopt_long
0x00002c2b      83f8ff         cmp eax, 0xffffffff
0x00002c2e      74a9           je 0x2bd9
0x00002c30      83f868         cmp eax, 0x68                           ; ../coreutils-8.31/lib/long-options.c:64
0x00002c33      4c8b4c2408     mov r9, qword [rsp + 8]
0x00002c38      7456           je 0x2c90
0x00002c3a      83f876         cmp eax, 0x76
0x00002c3d      759a           jne 0x2bd9
0x00002c3f      488d84241001.  lea rax, [rsp + 0x110]                  ; ../coreutils-8.31/lib/long-options.c:73
0x00002c47      488b3d3a5420.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/long-options.c:74 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00002c4e      4c8d442410     lea r8, [rsp + 0x10]
0x00002c53      4c89e9         mov rcx, r13
0x00002c56      4c89e2         mov rdx, r12
0x00002c59      4889ee         mov rsi, rbp
0x00002c5c      4889442418     mov qword [rsp + 0x18], rax             ; ../coreutils-8.31/lib/long-options.c:73
0x00002c61      488d442430     lea rax, [rsp + 0x30]
0x00002c66      c74424103000.  mov dword [rsp + 0x10], 0x30            ; '0'
                                                                       ; [0x30:4]=0
0x00002c6e      c74424143000.  mov dword [rsp + 0x14], 0x30            ; '0'
                                                                       ; [0x30:4]=0
0x00002c76      4889442420     mov qword [rsp + 0x20], rax
0x00002c7b      e8d0220000     call sym.version_etc_va                 ; ../coreutils-8.31/lib/long-options.c:74
0x00002c80      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:75
0x00002c82      e8d9e8ffff     call sym.imp.exit
0x00002c87      660f1f840000.  nop word [rax + rax]
0x00002c90      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:67
0x00002c92      41ffd1         call r9
0x00002c95      e93fffffff     jmp 0x2bd9                              ; ../coreutils-8.31/lib/long-options.c:68
0x00002c9a      e851e7ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/long-options.c:90
0x00002c9f      90             nop
;-- parse_gnu_standard_options_only:
0x00002ca0      4156           push r14                                ; ../coreutils-8.31/lib/long-options.c:106
0x00002ca2      4155           push r13
0x00002ca4      4d89c6         mov r14, r8
0x00002ca7      4154           push r12
0x00002ca9      55             push rbp
0x00002caa      4989d4         mov r12, rdx
0x00002cad      53             push rbx
0x00002cae      4989cd         mov r13, rcx
0x00002cb1      4881ecd00000.  sub rsp, 0xd0
0x00002cb8      84c0           test al, al
0x00002cba      488bac240001.  mov rbp, qword [rsp + 0x100]
0x00002cc2      7437           je 0x2cfb
0x00002cc4      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x00002cc9      0f294c2460     movaps xmmword [rsp + 0x60], xmm1
0x00002cce      0f29542470     movaps xmmword [rsp + 0x70], xmm2
0x00002cd3      0f299c248000.  movaps xmmword [rsp + 0x80], xmm3
0x00002cdb      0f29a4249000.  movaps xmmword [rsp + 0x90], xmm4
0x00002ce3      0f29ac24a000.  movaps xmmword [rsp + 0xa0], xmm5
0x00002ceb      0f29b424b000.  movaps xmmword [rsp + 0xb0], xmm6
0x00002cf3      0f29bc24c000.  movaps xmmword [rsp + 0xc0], xmm7
0x00002cfb      64488b042528.  mov rax, qword fs:[0x28]
0x00002d04      4889442418     mov qword [rsp + 0x18], rax
0x00002d09      31c0           xor eax, eax
0x00002d0b      488d152f3500.  lea rdx, [0x00006241]                   ; ../coreutils-8.31/lib/long-options.c:113
0x00002d12      488d05a72f00.  lea rax, [0x00005cc0]                   ; "+"
0x00002d19      4584c9         test r9b, r9b
0x00002d1c      488d0d7d4e20.  lea rcx, obj.long_options               ; ../coreutils-8.31/lib/long-options.c:115 ; 0x207ba0
0x00002d23      480f44d0       cmove rdx, rax                          ; ../coreutils-8.31/lib/long-options.c:113
0x00002d27      4531c0         xor r8d, r8d                            ; ../coreutils-8.31/lib/long-options.c:115
0x00002d2a      8b1d70532000   mov ebx, dword [obj.opterr]             ; ../coreutils-8.31/lib/long-options.c:108 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2080a0:4]=0
0x00002d30      c70566532000.  mov dword [obj.opterr], 1               ; ../coreutils-8.31/lib/long-options.c:111 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2080a0:4]=0
0x00002d3a      e8c1e6ffff     call sym.imp.getopt_long                ; ../coreutils-8.31/lib/long-options.c:115
0x00002d3f      83f8ff         cmp eax, 0xffffffff
0x00002d42      7464           je 0x2da8
0x00002d44      83f868         cmp eax, 0x68                           ; ../coreutils-8.31/lib/long-options.c:117
0x00002d47      0f8483000000   je 0x2dd0
0x00002d4d      83f876         cmp eax, 0x76
0x00002d50      754e           jne 0x2da0
0x00002d52      488d84240801.  lea rax, [rsp + 0x108]                  ; ../coreutils-8.31/lib/long-options.c:126
0x00002d5a      488b3d275320.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/long-options.c:127 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00002d61      4989e0         mov r8, rsp
0x00002d64      4c89f1         mov rcx, r14
0x00002d67      4c89ea         mov rdx, r13
0x00002d6a      4c89e6         mov rsi, r12
0x00002d6d      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/long-options.c:126
0x00002d72      488d442420     lea rax, [rsp + 0x20]
0x00002d77      c70424300000.  mov dword [rsp], 0x30                   ; '0'
                                                                       ; [0x30:4]=0
0x00002d7e      c74424043000.  mov dword [rsp + 4], 0x30               ; '0'
                                                                       ; [0x30:4]=0
0x00002d86      4889442410     mov qword [rsp + 0x10], rax
0x00002d8b      e8c0210000     call sym.version_etc_va                 ; ../coreutils-8.31/lib/long-options.c:127
0x00002d90      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:128
0x00002d92      e8c9e7ffff     call sym.imp.exit
0x00002d97      660f1f840000.  nop word [rax + rax]
0x00002da0      8b3d6a522000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/long-options.c:132 ; [0x208010:4]=1
0x00002da6      ffd5           call rbp
0x00002da8      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/long-options.c:139
0x00002dad      644833042528.  xor rax, qword fs:[0x28]
0x00002db6      891de4522000   mov dword [obj.opterr], ebx             ; ../coreutils-8.31/lib/long-options.c:138 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2080a0:4]=0
0x00002dbc      7518           jne 0x2dd6                              ; ../coreutils-8.31/lib/long-options.c:139
0x00002dbe      4881c4d00000.  add rsp, 0xd0
0x00002dc5      5b             pop rbx
0x00002dc6      5d             pop rbp
0x00002dc7      415c           pop r12
0x00002dc9      415d           pop r13
0x00002dcb      415e           pop r14
0x00002dcd      c3             ret
0x00002dce      6690           nop
0x00002dd0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:120
0x00002dd2      ffd5           call rbp
0x00002dd4      ebd2           jmp 0x2da8                              ; ../coreutils-8.31/lib/long-options.c:121
0x00002dd6      e815e6ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/long-options.c:139
0x00002ddb      0f1f440000     nop dword [rax + rax]
;-- set_program_name:
0x00002de0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00002de3      53             push rbx
0x00002de4      7477           je 0x2e5d                               ; ../coreutils-8.31/lib/progname.c:51
0x00002de6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00002deb      4889fb         mov rbx, rdi
0x00002dee      e82de6ffff     call sym.imp.strrchr
0x00002df3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00002df6      7455           je 0x2e4d
0x00002df8      4c8d4001       lea r8, [rax + 1]
0x00002dfc      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00002dff      4829da         sub rdx, rbx
0x00002e02      4883fa06       cmp rdx, 6
0x00002e06      7e45           jle 0x2e4d
0x00002e08      488d70fa       lea rsi, [rax - 6]
0x00002e0c      488d3df52e00.  lea rdi, str..libs                      ; 0x5d08 ; "/.libs/"
0x00002e13      b907000000     mov ecx, 7
0x00002e18      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002e1a      0f97c2         seta dl
0x00002e1d      80da00         sbb dl, 0
0x00002e20      84d2           test dl, dl
0x00002e22      7529           jne 0x2e4d
0x00002e24      488d3de52e00.  lea rdi, [0x00005d10]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00002e2b      b903000000     mov ecx, 3
0x00002e30      4c89c6         mov rsi, r8
0x00002e33      4c89c3         mov rbx, r8
0x00002e36      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002e38      0f97c2         seta dl
0x00002e3b      80da00         sbb dl, 0
0x00002e3e      84d2           test dl, dl
0x00002e40      750b           jne 0x2e4d
0x00002e42      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00002e46      48891d335220.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x208080:8]=0
0x00002e4d      48891d8c5220.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x2080e0:8]=0
0x00002e54      48891d3d5220.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x208098:8]=0
0x00002e5b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00002e5c      c3             ret
0x00002e5d      488b0d5c5220.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x00002e64      488d3d652e00.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x5cd0 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00002e6b      ba37000000     mov edx, 0x37                           ; '7'
0x00002e70      be01000000     mov esi, 1
0x00002e75      e8f6e6ffff     call sym.imp.fwrite
0x00002e7a      e8a1e4ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00002e7f      90             nop
;-- gettext_quote.part.1:
0x00002e80      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002e81      53             push rbx
0x00002e82      4889fd         mov rbp, rdi
0x00002e85      89f3           mov ebx, esi
0x00002e87      4883ec08       sub rsp, 8
0x00002e8b      e8a0260000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002e90      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002e93      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002e96      80fa55         cmp dl, 0x55
0x00002e99      7475           je 0x2f10
0x00002e9b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00002e9e      7420           je 0x2ec0
0x00002ea0      488d057c2e00.  lea rax, str.l______l                   ; 0x5d23 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002ea7      488d15772e00.  lea rdx, [0x00005d25]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002eae      83fb09         cmp ebx, 9
0x00002eb1      480f45c2       cmovne rax, rdx
0x00002eb5      4883c408       add rsp, 8
0x00002eb9      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00002eba      5d             pop rbp
0x00002ebb      c3             ret
0x00002ebc      0f1f4000       nop dword [rax]
0x00002ec0      0fb65001       movzx edx, byte [rax + 1]
0x00002ec4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002ec7      80fa42         cmp dl, 0x42
0x00002eca      75d4           jne 0x2ea0
0x00002ecc      80780231       cmp byte [rax + 2], 0x31
0x00002ed0      75ce           jne 0x2ea0
0x00002ed2      80780338       cmp byte [rax + 3], 0x38
0x00002ed6      75c8           jne 0x2ea0
0x00002ed8      80780430       cmp byte [rax + 4], 0x30
0x00002edc      75c2           jne 0x2ea0
0x00002ede      80780533       cmp byte [rax + 5], 0x33
0x00002ee2      75bc           jne 0x2ea0
0x00002ee4      80780630       cmp byte [rax + 6], 0x30
0x00002ee8      75b6           jne 0x2ea0
0x00002eea      80780700       cmp byte [rax + 7], 0
0x00002eee      75b0           jne 0x2ea0
0x00002ef0      807d0060       cmp byte [rbp], 0x60
0x00002ef4      488d05212e00.  lea rax, [0x00005d1c]
0x00002efb      488d151e2e00.  lea rdx, [0x00005d20]
0x00002f02      480f45c2       cmovne rax, rdx
0x00002f06      4883c408       add rsp, 8
0x00002f0a      5b             pop rbx
0x00002f0b      5d             pop rbp
0x00002f0c      c3             ret
0x00002f0d      0f1f00         nop dword [rax]
0x00002f10      0fb65001       movzx edx, byte [rax + 1]
0x00002f14      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002f17      80fa54         cmp dl, 0x54
0x00002f1a      7584           jne 0x2ea0
0x00002f1c      0fb65002       movzx edx, byte [rax + 2]
0x00002f20      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002f23      80fa46         cmp dl, 0x46
0x00002f26      0f8574ffffff   jne 0x2ea0
0x00002f2c      8078032d       cmp byte [rax + 3], 0x2d
0x00002f30      0f856affffff   jne 0x2ea0
0x00002f36      80780438       cmp byte [rax + 4], 0x38
0x00002f3a      0f8560ffffff   jne 0x2ea0
0x00002f40      80780500       cmp byte [rax + 5], 0
0x00002f44      0f8556ffffff   jne 0x2ea0
0x00002f4a      807d0060       cmp byte [rbp], 0x60
0x00002f4e      488d05bf2d00.  lea rax, [0x00005d14]                   ; "\u2018"
0x00002f55      488d15bc2d00.  lea rdx, [0x00005d18]                   ; "\u2019"
0x00002f5c      480f45c2       cmovne rax, rdx
0x00002f60      4883c408       add rsp, 8
0x00002f64      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002f65      5d             pop rbp
0x00002f66      c3             ret
0x00002f67      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002f70      4157           push r15
0x00002f72      4156           push r14
0x00002f74      4589c7         mov r15d, r8d
0x00002f77      4155           push r13
0x00002f79      4154           push r12
0x00002f7b      4989fe         mov r14, rdi
0x00002f7e      55             push rbp
0x00002f7f      53             push rbx
0x00002f80      4489cb         mov ebx, r9d
0x00002f83      4989f5         mov r13, rsi
0x00002f86      4889cd         mov rbp, rcx
0x00002f89      83e302         and ebx, 2
0x00002f8c      4881ecb80000.  sub rsp, 0xb8
0x00002f93      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00002f9b      4889542410     mov qword [rsp + 0x10], rdx
0x00002fa0      4489442408     mov dword [rsp + 8], r8d
0x00002fa5      44894c2478     mov dword [rsp + 0x78], r9d
0x00002faa      4889442420     mov qword [rsp + 0x20], rax
0x00002faf      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002fb7      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00002fbc      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00002fc4      4889442460     mov qword [rsp + 0x60], rax
0x00002fc9      64488b042528.  mov rax, qword fs:[0x28]
0x00002fd2      48898424a800.  mov qword [rsp + 0xa8], rax
0x00002fda      31c0           xor eax, eax
0x00002fdc      e8efe3ffff     call sym.imp.__ctype_get_mb_cur_max
0x00002fe1      4183ff0a       cmp r15d, 0xa
0x00002fe5      4889442458     mov qword [rsp + 0x58], rax
0x00002fea      0f87af110000   ja 0x419f
0x00002ff0      488d0d892d00.  lea rcx, [0x00005d80]
0x00002ff7      4489fa         mov edx, r15d
0x00002ffa      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002ffe      4801c8         add rax, rcx
0x00003001      ffe0           jmp rax
0x00003003      c644240e01     mov byte [rsp + 0xe], 1
0x00003008      c644247c00     mov byte [rsp + 0x7c], 0
0x0000300d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00003010      48c744245000.  mov qword [rsp + 0x50], 0
0x00003019      c644240f01     mov byte [rsp + 0xf], 1
0x0000301e      c644240d00     mov byte [rsp + 0xd], 0
0x00003023      488d05fb2c00.  lea rax, [0x00005d25]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000302a      48c744241801.  mov qword [rsp + 0x18], 1
0x00003033      4531ff         xor r15d, r15d
0x00003036      c74424080200.  mov dword [rsp + 8], 2
0x0000303e      4889442448     mov qword [rsp + 0x48], rax
0x00003043      4531db         xor r11d, r11d
0x00003046      4889e8         mov rax, rbp
0x00003049      4589e0         mov r8d, r12d
0x0000304c      4c89dd         mov rbp, r11
0x0000304f      4989c3         mov r11, rax
0x00003052      660f1f440000   nop word [rax + rax]
0x00003058      4939eb         cmp r11, rbp
0x0000305b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000305f      4983fbff       cmp r11, 0xffffffffffffffff
0x00003063      750d           jne 0x3072
0x00003065      488b442410     mov rax, qword [rsp + 0x10]
0x0000306a      803c2800       cmp byte [rax + rbp], 0
0x0000306e      410f95c4       setne r12b
0x00003072      4584e4         test r12b, r12b
0x00003075      0f8455060000   je 0x36d0
0x0000307b      837c240802     cmp dword [rsp + 8], 2
0x00003080      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003085      4c8d0c2f       lea r9, [rdi + rbp]
0x00003089      0f95c0         setne al
0x0000308c      2244240d       and al, byte [rsp + 0xd]
0x00003090      4189c2         mov r10d, eax
0x00003093      0f84a7000000   je 0x3140
0x00003099      488b442418     mov rax, qword [rsp + 0x18]
0x0000309e      4885c0         test rax, rax
0x000030a1      0f8429040000   je 0x34d0
0x000030a7      4983fbff       cmp r11, 0xffffffffffffffff
0x000030ab      488d5c0500     lea rbx, [rbp + rax]
0x000030b0      752e           jne 0x30e0
0x000030b2      4883f801       cmp rax, 1
0x000030b6      7628           jbe 0x30e0
0x000030b8      4488442438     mov byte [rsp + 0x38], r8b
0x000030bd      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x000030c2      4c894c2428     mov qword [rsp + 0x28], r9
0x000030c7      e814e3ffff     call sym.imp.strlen
0x000030cc      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000030d2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x000030d8      4989c3         mov r11, rax
0x000030db      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000030e0      4c39db         cmp rbx, r11
0x000030e3      4488542428     mov byte [rsp + 0x28], r10b
0x000030e8      0f87b2050000   ja 0x36a0
0x000030ee      488b542418     mov rdx, qword [rsp + 0x18]
0x000030f3      488b742448     mov rsi, qword [rsp + 0x48]
0x000030f8      4c89cf         mov rdi, r9
0x000030fb      4c895c2440     mov qword [rsp + 0x40], r11
0x00003100      4488442438     mov byte [rsp + 0x38], r8b
0x00003105      4c894c2430     mov qword [rsp + 0x30], r9
0x0000310a      e851e3ffff     call sym.imp.memcmp
0x0000310f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00003111      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003116      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000311c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00003121      0f8579050000   jne 0x36a0
0x00003127      807c240f00     cmp byte [rsp + 0xf], 0
0x0000312c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003132      0f857d0f0000   jne 0x40b5
0x00003138      0f1f84000000.  nop dword [rax + rax]
0x00003140      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00003144      80fb7e         cmp bl, 0x7e
0x00003147      0f871b030000   ja 0x3468
0x0000314d      488d0d582c00.  lea rcx, [0x00005dac]
0x00003154      0fb6d3         movzx edx, bl
0x00003157      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000315b      4801c8         add rax, rcx
0x0000315e      ffe0           jmp rax
0x00003160      4531d2         xor r10d, r10d
0x00003163      4983fb01       cmp r11, 1
0x00003167      0f95c0         setne al
0x0000316a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000316e      750c           jne 0x317c
0x00003170      488b442410     mov rax, qword [rsp + 0x10]
0x00003175      80780100       cmp byte [rax + 1], 0
0x00003179      0f95c0         setne al
0x0000317c      837c240802     cmp dword [rsp + 8], 2
0x00003181      0f94c2         sete dl
0x00003184      84c0           test al, al
0x00003186      0f844c020000   je 0x33d8
0x0000318c      4531e4         xor r12d, r12d
0x0000318f      31c0           xor eax, eax
0x00003191      0f1f80000000.  nop dword [rax]
0x00003198      807c240d01     cmp byte [rsp + 0xd], 1
0x0000319d      0f850f010000   jne 0x32b2
0x000031a3      84d2           test dl, dl
0x000031a5      0f8507010000   jne 0x32b2
0x000031ab      488b742420     mov rsi, qword [rsp + 0x20]
0x000031b0      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x000031b3      7414           je 0x31c9
0x000031b5      89da           mov edx, ebx
0x000031b7      c0ea05         shr dl, 5
0x000031ba      0fb6d2         movzx edx, dl
0x000031bd      8b1496         mov edx, dword [rsi + rdx*4]
0x000031c0      0fa3da         bt edx, ebx
0x000031c3      0f824a010000   jb 0x3313
0x000031c9      4584d2         test r10b, r10b
0x000031cc      0f8541010000   jne 0x3313
0x000031d2      83f001         xor eax, 1
0x000031d5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x000031d9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x000031dc      84c0           test al, al
0x000031de      7420           je 0x3200                               ; ../coreutils-8.31/lib/quotearg.c:338
0x000031e0      4d39fd         cmp r13, r15
0x000031e3      7605           jbe 0x31ea
0x000031e5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000031ea      498d4701       lea rax, [r15 + 1]
0x000031ee      4939c5         cmp r13, rax
0x000031f1      7606           jbe 0x31f9
0x000031f3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000031f9      4983c702       add r15, 2
0x000031fd      4531c0         xor r8d, r8d
0x00003200      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003203      7304           jae 0x3209                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003205      43881c3e       mov byte [r14 + r15], bl
0x00003209      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000320e      4983c701       add r15, 1
0x00003212      b800000000     mov eax, 0
0x00003217      4584e4         test r12b, r12b
0x0000321a      0f44f8         cmove edi, eax
0x0000321d      40887c240e     mov byte [rsp + 0xe], dil
0x00003222      e931feffff     jmp 0x3058
0x00003227      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00003230      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00003233      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00003237      83f802         cmp eax, 2
0x0000323a      0f84b8050000   je 0x37f8
0x00003240      83f805         cmp eax, 5
0x00003243      0f846f050000   je 0x37b8
0x00003249      83f802         cmp eax, 2
0x0000324c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003251      0f94c2         sete dl
0x00003254      4531e4         xor r12d, r12d
0x00003257      31c0           xor eax, eax
0x00003259      e93affffff     jmp 0x3198
0x0000325e      6690           nop
0x00003260      4531d2         xor r10d, r10d
0x00003263      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00003268      0f8402050000   je 0x3770
0x0000326e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00003273      31d2           xor edx, edx
0x00003275      31c0           xor eax, eax
0x00003277      bb27000000     mov ebx, 0x27                           ; '''
0x0000327c      e917ffffff     jmp 0x3198
0x00003281      0f1f80000000.  nop dword [rax]
0x00003288      ba09000000     mov edx, 9
0x0000328d      bb74000000     mov ebx, 0x74                           ; 't'
0x00003292      837c240802     cmp dword [rsp + 8], 2
0x00003297      0f94c0         sete al
0x0000329a      2244240f       and al, byte [rsp + 0xf]
0x0000329e      0f854a010000   jne 0x33ee
0x000032a4      807c240d00     cmp byte [rsp + 0xd], 0
0x000032a9      7565           jne 0x3310
0x000032ab      89d3           mov ebx, edx
0x000032ad      4531e4         xor r12d, r12d
0x000032b0      31c0           xor eax, eax
0x000032b2      807c240f00     cmp byte [rsp + 0xf], 0
0x000032b7      0f85eefeffff   jne 0x31ab
0x000032bd      e907ffffff     jmp 0x31c9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x000032c2      660f1f440000   nop word [rax + rax]
0x000032c8      ba08000000     mov edx, 8
0x000032cd      bb62000000     mov ebx, 0x62                           ; 'b'
0x000032d2      ebd0           jmp 0x32a4
0x000032d4      0f1f4000       nop dword [rax]
0x000032d8      837c240802     cmp dword [rsp + 8], 2
0x000032dd      0f84cd030000   je 0x36b0
0x000032e3      807c240d00     cmp byte [rsp + 0xd], 0
0x000032e8      0f8412020000   je 0x3500
0x000032ee      807c240f00     cmp byte [rsp + 0xf], 0
0x000032f3      0f8407020000   je 0x3500
0x000032f9      48837c241800   cmp qword [rsp + 0x18], 0
0x000032ff      0f85b6030000   jne 0x36bb
0x00003305      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000330a      660f1f440000   nop word [rax + rax]
0x00003310      4531e4         xor r12d, r12d
0x00003313      837c240802     cmp dword [rsp + 8], 2
0x00003318      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000331b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003320      89d0           mov eax, edx
0x00003322      0f8550080000   jne 0x3b78
0x00003328      4489c0         mov eax, r8d
0x0000332b      83f001         xor eax, 1
0x0000332e      20d0           and al, dl
0x00003330      742f           je 0x3361
0x00003332      4d39fd         cmp r13, r15
0x00003335      7605           jbe 0x333c
0x00003337      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000333c      498d5701       lea rdx, [r15 + 1]
0x00003340      4939d5         cmp r13, rdx
0x00003343      7606           jbe 0x334b
0x00003345      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000334b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000334f      4939d5         cmp r13, rdx
0x00003352      7606           jbe 0x335a
0x00003354      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000335a      4983c703       add r15, 3
0x0000335e      4189c0         mov r8d, eax
0x00003361      4d39fd         cmp r13, r15
0x00003364      7605           jbe 0x336b
0x00003366      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000336b      4983c701       add r15, 1
0x0000336f      4883c501       add rbp, 1
0x00003373      e988feffff     jmp 0x3200
0x00003378      0f1f84000000.  nop dword [rax + rax]
0x00003380      807c240d00     cmp byte [rsp + 0xd], 0
0x00003385      0f85c8010000   jne 0x3553
0x0000338b      31d2           xor edx, edx
0x0000338d      f644247801     test byte [rsp + 0x78], 1
0x00003392      0f8413ffffff   je 0x32ab
0x00003398      4883c501       add rbp, 1
0x0000339c      e9b7fcffff     jmp 0x3058
0x000033a1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x000033a8      837c240802     cmp dword [rsp + 8], 2
0x000033ad      0f94c2         sete dl
0x000033b0      31c0           xor eax, eax
0x000033b2      e9e1fdffff     jmp 0x3198
0x000033b7      660f1f840000.  nop word [rax + rax]
0x000033c0      ba07000000     mov edx, 7
0x000033c5      bb61000000     mov ebx, 0x61                           ; 'a'
0x000033ca      e9d5feffff     jmp 0x32a4
0x000033cf      90             nop
0x000033d0      837c240802     cmp dword [rsp + 8], 2
0x000033d5      0f94c2         sete dl
0x000033d8      4885ed         test rbp, rbp
0x000033db      0f85abfdffff   jne 0x318c
0x000033e1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000033e6      20d0           and al, dl
0x000033e8      0f84aafdffff   je 0x3198
0x000033ee      4c89dd         mov rbp, r11
0x000033f1      c74424080200.  mov dword [rsp + 8], 2
0x000033f9      e9fb060000     jmp 0x3af9
0x000033fe      6690           nop
0x00003400      837c240802     cmp dword [rsp + 8], 2
0x00003405      0f94c2         sete dl
0x00003408      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000340b      ebd4           jmp 0x33e1
0x0000340d      0f1f00         nop dword [rax]
0x00003410      837c240802     cmp dword [rsp + 8], 2
0x00003415      bb20000000     mov ebx, 0x20                           ; "@"
0x0000341a      0f94c2         sete dl
0x0000341d      ebc2           jmp 0x33e1
0x0000341f      90             nop
0x00003420      ba0d000000     mov edx, 0xd
0x00003425      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000342a      e963feffff     jmp 0x3292
0x0000342f      90             nop
0x00003430      ba0c000000     mov edx, 0xc
0x00003435      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000343a      e965feffff     jmp 0x32a4
0x0000343f      90             nop
0x00003440      ba0b000000     mov edx, 0xb
0x00003445      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000344a      e955feffff     jmp 0x32a4
0x0000344f      90             nop
0x00003450      ba0a000000     mov edx, 0xa
0x00003455      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000345a      e933feffff     jmp 0x3292
0x0000345f      90             nop
0x00003460      4531d2         xor r10d, r10d
0x00003463      0f1f440000     nop dword [rax + rax]
0x00003468      48837c245801   cmp qword [rsp + 0x58], 1
0x0000346e      0f85a4030000   jne 0x3818
0x00003474      4c895c2438     mov qword [rsp + 0x38], r11
0x00003479      4488442430     mov byte [rsp + 0x30], r8b
0x0000347e      4488542428     mov byte [rsp + 0x28], r10b
0x00003483      e828e1ffff     call sym.imp.__ctype_b_loc
0x00003488      488b08         mov rcx, qword [rax]
0x0000348b      0fb6d3         movzx edx, bl
0x0000348e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003494      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000349a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000349f      bf01000000     mov edi, 1
0x000034a4      0fb70451       movzx eax, word [rcx + rdx*2]
0x000034a8      66250040       and ax, 0x4000
0x000034ac      410f95c4       setne r12b
0x000034b0      0f94c0         sete al
0x000034b3      2244240d       and al, byte [rsp + 0xd]
0x000034b7      84c0           test al, al
0x000034b9      0f8592090000   jne 0x3e51
0x000034bf      837c240802     cmp dword [rsp + 8], 2
0x000034c4      0f94c2         sete dl
0x000034c7      e9ccfcffff     jmp 0x3198
0x000034cc      0f1f4000       nop dword [rax]
0x000034d0      410fb619       movzx ebx, byte [r9]
0x000034d4      80fb7e         cmp bl, 0x7e
0x000034d7      7787           ja 0x3460
0x000034d9      488d0dc82a00.  lea rcx, [0x00005fa8]
0x000034e0      0fb6d3         movzx edx, bl
0x000034e3      48630491       movsxd rax, dword [rcx + rdx*4]
0x000034e7      4801c8         add rax, rcx
0x000034ea      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x000034ec      0f1f4000       nop dword [rax]
0x000034f0      4531d2         xor r10d, r10d
0x000034f3      807c240d00     cmp byte [rsp + 0xd], 0
0x000034f8      0f85f0fdffff   jne 0x32ee
0x000034fe      6690           nop
0x00003500      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003505      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000350a      e995fdffff     jmp 0x32a4
0x0000350f      90             nop
0x00003510      ba0c000000     mov edx, 0xc
0x00003515      4531d2         xor r10d, r10d
0x00003518      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000351d      e982fdffff     jmp 0x32a4
0x00003522      660f1f440000   nop word [rax + rax]
0x00003528      ba0a000000     mov edx, 0xa
0x0000352d      4531d2         xor r10d, r10d
0x00003530      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003535      e958fdffff     jmp 0x3292
0x0000353a      660f1f440000   nop word [rax + rax]
0x00003540      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003545      e9c6fdffff     jmp 0x3310
0x0000354a      660f1f440000   nop word [rax + rax]
0x00003550      4531d2         xor r10d, r10d
0x00003553      837c240802     cmp dword [rsp + 8], 2
0x00003558      0f94c2         sete dl
0x0000355b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003560      0f85940b0000   jne 0x40fa
0x00003566      4489c0         mov eax, r8d
0x00003569      4c89f9         mov rcx, r15
0x0000356c      83f001         xor eax, 1
0x0000356f      20d0           and al, dl
0x00003571      742d           je 0x35a0
0x00003573      4d39fd         cmp r13, r15
0x00003576      7605           jbe 0x357d
0x00003578      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000357d      498d4f01       lea rcx, [r15 + 1]
0x00003581      4939cd         cmp r13, rcx
0x00003584      7606           jbe 0x358c
0x00003586      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000358c      498d4f02       lea rcx, [r15 + 2]
0x00003590      4939cd         cmp r13, rcx
0x00003593      0f8730060000   ja 0x3bc9
0x00003599      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000359d      4189c0         mov r8d, eax
0x000035a0      4939cd         cmp r13, rcx
0x000035a3      7605           jbe 0x35aa
0x000035a5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000035aa      837c240802     cmp dword [rsp + 8], 2
0x000035af      4c8d7901       lea r15, [rcx + 1]
0x000035b3      0f8400060000   je 0x3bb9
0x000035b9      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000035bd      4c39d8         cmp rax, r11
0x000035c0      7319           jae 0x35db                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x000035c2      488b442410     mov rax, qword [rsp + 0x10]
0x000035c7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x000035cc      88442428       mov byte [rsp + 0x28], al
0x000035d0      83e830         sub eax, 0x30
0x000035d3      3c09           cmp al, 9
0x000035d5      0f862e080000   jbe 0x3e09
0x000035db      4489e0         mov eax, r12d
0x000035de      bb30000000     mov ebx, 0x30                           ; '0'
0x000035e3      4531e4         xor r12d, r12d
0x000035e6      e9adfbffff     jmp 0x3198                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x000035eb      0f1f440000     nop dword [rax + rax]
0x000035f0      837c240802     cmp dword [rsp + 8], 2
0x000035f5      4589d4         mov r12d, r10d
0x000035f8      0f94c2         sete dl
0x000035fb      4531d2         xor r10d, r10d
0x000035fe      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003600      e993fbffff     jmp 0x3198                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003605      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003608      837c240802     cmp dword [rsp + 8], 2
0x0000360d      0f94c2         sete dl
0x00003610      4531d2         xor r10d, r10d
0x00003613      e9c0fdffff     jmp 0x33d8
0x00003618      0f1f84000000.  nop dword [rax + rax]
0x00003620      837c240802     cmp dword [rsp + 8], 2
0x00003625      0f94c2         sete dl
0x00003628      4531d2         xor r10d, r10d
0x0000362b      4531e4         xor r12d, r12d
0x0000362e      e9aefdffff     jmp 0x33e1
0x00003633      0f1f440000     nop dword [rax + rax]
0x00003638      837c240802     cmp dword [rsp + 8], 2
0x0000363d      4589d4         mov r12d, r10d
0x00003640      bb20000000     mov ebx, 0x20                           ; "@"
0x00003645      0f94c2         sete dl
0x00003648      4531d2         xor r10d, r10d
0x0000364b      e991fdffff     jmp 0x33e1
0x00003650      ba0d000000     mov edx, 0xd
0x00003655      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003658      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000365d      e930fcffff     jmp 0x3292
0x00003662      660f1f440000   nop word [rax + rax]
0x00003668      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000366d      e99efcffff     jmp 0x3310
0x00003672      660f1f440000   nop word [rax + rax]
0x00003678      ba09000000     mov edx, 9
0x0000367d      4531d2         xor r10d, r10d
0x00003680      bb74000000     mov ebx, 0x74                           ; 't'
0x00003685      e908fcffff     jmp 0x3292
0x0000368a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003690      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003695      e976fcffff     jmp 0x3310
0x0000369a      660f1f440000   nop word [rax + rax]
0x000036a0      4531d2         xor r10d, r10d
0x000036a3      e998faffff     jmp 0x3140
0x000036a8      0f1f84000000.  nop dword [rax + rax]
0x000036b0      807c240f00     cmp byte [rsp + 0xf], 0
0x000036b5      0f8565090000   jne 0x4020
0x000036bb      4883c501       add rbp, 1
0x000036bf      4489c0         mov eax, r8d
0x000036c2      4531e4         xor r12d, r12d
0x000036c5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000036ca      e90dfbffff     jmp 0x31dc
0x000036cf      90             nop
0x000036d0      837c240802     cmp dword [rsp + 8], 2
0x000036d5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000036da      4589c4         mov r12d, r8d
0x000036dd      4c89dd         mov rbp, r11
0x000036e0      0f94c2         sete dl
0x000036e3      89d8           mov eax, ebx
0x000036e5      4d85ff         test r15, r15
0x000036e8      0f94c1         sete cl
0x000036eb      21d0           and eax, edx
0x000036ed      20c8           and al, cl
0x000036ef      0f85610a0000   jne 0x4156                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x000036f5      89d8           mov eax, ebx
0x000036f7      83f001         xor eax, 1
0x000036fa      20c2           and dl, al
0x000036fc      0f846a090000   je 0x406c
0x00003702      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003707      0f845d090000   je 0x406a
0x0000370d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003712      0f85f5090000   jne 0x410d
0x00003718      4d85ed         test r13, r13
0x0000371b      0f94c0         sete al
0x0000371e      48837c245000   cmp qword [rsp + 0x50], 0
0x00003724      0f95c2         setne dl
0x00003727      20d0           and al, dl
0x00003729      0f841d0a0000   je 0x414c
0x0000372f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003734      488d1dea2500.  lea rbx, [0x00005d25]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000373b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000373f      c74424080200.  mov dword [rsp + 8], 2
0x00003747      41bf01000000   mov r15d, 1
0x0000374d      48c744241801.  mov qword [rsp + 0x18], 1
0x00003756      c644240f00     mov byte [rsp + 0xf], 0
0x0000375b      48895c2448     mov qword [rsp + 0x48], rbx
0x00003760      8844247c       mov byte [rsp + 0x7c], al
0x00003764      e9daf8ffff     jmp 0x3043
0x00003769      0f1f80000000.  nop dword [rax]
0x00003770      807c240f00     cmp byte [rsp + 0xf], 0
0x00003775      0f85a5080000   jne 0x4020
0x0000377b      4d85ed         test r13, r13
0x0000377e      0f84fc030000   je 0x3b80                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003784      31d2           xor edx, edx
0x00003786      48837c245000   cmp qword [rsp + 0x50], 0
0x0000378c      0f85ee030000   jne 0x3b80                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003792      4c896c2450     mov qword [rsp + 0x50], r13
0x00003797      4983c703       add r15, 3
0x0000379b      31c0           xor eax, eax
0x0000379d      448864247c     mov byte [rsp + 0x7c], r12b
0x000037a2      4531c0         xor r8d, r8d
0x000037a5      4989d5         mov r13, rdx
0x000037a8      bb27000000     mov ebx, 0x27                           ; '''
0x000037ad      e917faffff     jmp 0x31c9
0x000037b2      660f1f440000   nop word [rax + rax]
0x000037b8      f644247804     test byte [rsp + 0x78], 4
0x000037bd      7421           je 0x37e0
0x000037bf      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x000037c3      4c39d9         cmp rcx, r11
0x000037c6      7318           jae 0x37e0
0x000037c8      488b442410     mov rax, qword [rsp + 0x10]
0x000037cd      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x000037d2      0f848a070000   je 0x3f62
0x000037d8      0f1f84000000.  nop dword [rax + rax]
0x000037e0      31d2           xor edx, edx
0x000037e2      4531e4         xor r12d, r12d
0x000037e5      31c0           xor eax, eax
0x000037e7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000037ec      e9a7f9ffff     jmp 0x3198
0x000037f1      0f1f80000000.  nop dword [rax]
0x000037f8      807c240f00     cmp byte [rsp + 0xf], 0
0x000037fd      0f851d080000   jne 0x4020
0x00003803      4531e4         xor r12d, r12d
0x00003806      31c0           xor eax, eax
0x00003808      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000380d      e9b7f9ffff     jmp 0x31c9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003812      660f1f440000   nop word [rax + rax]
0x00003818      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003820      4983fbff       cmp r11, 0xffffffffffffffff
0x00003824      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003830      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003835      752d           jne 0x3864
0x00003837      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000383c      4488442440     mov byte [rsp + 0x40], r8b
0x00003841      4488542438     mov byte [rsp + 0x38], r10b
0x00003846      4c894c2430     mov qword [rsp + 0x30], r9
0x0000384b      e890dbffff     call sym.imp.strlen
0x00003850      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003856      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000385c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000385f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003864      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000386c      31c9           xor ecx, ecx
0x0000386e      885c247e       mov byte [rsp + 0x7e], bl
0x00003872      448844247d     mov byte [rsp + 0x7d], r8b
0x00003877      4889cb         mov rbx, rcx
0x0000387a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003882      4889442438     mov qword [rsp + 0x38], rax
0x00003887      448854247f     mov byte [rsp + 0x7f], r10b
0x0000388c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003894      4c89742440     mov qword [rsp + 0x40], r14
0x00003899      4c896c2470     mov qword [rsp + 0x70], r13
0x0000389e      4c895c2430     mov qword [rsp + 0x30], r11
0x000038a3      488b442410     mov rax, qword [rsp + 0x10]
0x000038a8      4c8d741d00     lea r14, [rbp + rbx]
0x000038ad      488b542430     mov rdx, qword [rsp + 0x30]
0x000038b2      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000038b7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000038bc      4e8d2c30       lea r13, [rax + r14]
0x000038c0      4c29f2         sub rdx, r14
0x000038c3      4c89ee         mov rsi, r13
0x000038c6      e8f51a0000     call sym.rpl_mbrtowc
0x000038cb      4885c0         test rax, rax
0x000038ce      4989c7         mov r15, rax
0x000038d1      744e           je 0x3921
0x000038d3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000038d7      0f8418060000   je 0x3ef5
0x000038dd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000038e1      0f849a050000   je 0x3e81
0x000038e7      837c240802     cmp dword [rsp + 8], 2
0x000038ec      0f94c0         sete al
0x000038ef      2244240f       and al, byte [rsp + 0xf]
0x000038f3      0f8597010000   jne 0x3a90
0x000038f9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003900      e89bdcffff     call sym.imp.iswprint
0x00003905      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000390a      85c0           test eax, eax
0x0000390c      b800000000     mov eax, 0
0x00003911      440f44e0       cmove r12d, eax
0x00003915      4c01fb         add rbx, r15
0x00003918      e873dcffff     call sym.imp.mbsinit
0x0000391d      85c0           test eax, eax
0x0000391f      7482           je 0x38a3
0x00003921      4489e2         mov edx, r12d
0x00003924      4889df         mov rdi, rbx
0x00003927      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000392d      83f201         xor edx, 1
0x00003930      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003935      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000393b      2254240d       and dl, byte [rsp + 0xd]
0x0000393f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003947      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000394c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003951      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003956      4883ff01       cmp rdi, 1
0x0000395a      0f86fb050000   jbe 0x3f5b
0x00003960      4889f9         mov rcx, rdi
0x00003963      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003965      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000396b      4801e9         add rcx, rbp
0x0000396e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003973      e9b6000000     jmp 0x3a2e
0x00003978      0f1f84000000.  nop dword [rax + rax]
0x00003980      837c240802     cmp dword [rsp + 8], 2
0x00003985      0f94c0         sete al
0x00003988      4584c9         test r9b, r9b
0x0000398b      0f85af040000   jne 0x3e40
0x00003991      4489c6         mov esi, r8d
0x00003994      83f601         xor esi, 1
0x00003997      4020f0         and al, sil
0x0000399a      742f           je 0x39cb                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000399c      4d39fd         cmp r13, r15
0x0000399f      7605           jbe 0x39a6
0x000039a1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000039a6      498d7701       lea rsi, [r15 + 1]
0x000039aa      4939f5         cmp r13, rsi
0x000039ad      7606           jbe 0x39b5                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x000039af      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000039b5      498d7702       lea rsi, [r15 + 2]
0x000039b9      4939f5         cmp r13, rsi
0x000039bc      7606           jbe 0x39c4
0x000039be      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000039c4      4983c703       add r15, 3
0x000039c8      4189c0         mov r8d, eax
0x000039cb      4d39fd         cmp r13, r15
0x000039ce      7605           jbe 0x39d5
0x000039d0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000039d5      498d4701       lea rax, [r15 + 1]
0x000039d9      4939c5         cmp r13, rax
0x000039dc      760d           jbe 0x39eb
0x000039de      89d8           mov eax, ebx
0x000039e0      c0e806         shr al, 6
0x000039e3      83c030         add eax, 0x30
0x000039e6      4388443e01     mov byte [r14 + r15 + 1], al
0x000039eb      498d4702       lea rax, [r15 + 2]
0x000039ef      4939c5         cmp r13, rax
0x000039f2      7610           jbe 0x3a04
0x000039f4      89d8           mov eax, ebx
0x000039f6      c0e803         shr al, 3
0x000039f9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x000039fc      83c030         add eax, 0x30
0x000039ff      4388443e02     mov byte [r14 + r15 + 2], al
0x00003a04      83e307         and ebx, 7
0x00003a07      4883c501       add rbp, 1
0x00003a0b      4983c703       add r15, 3
0x00003a0f      83c330         add ebx, 0x30
0x00003a12      4839cd         cmp rbp, rcx
0x00003a15      0f83e5f7ffff   jae 0x3200
0x00003a1b      89d6           mov esi, edx
0x00003a1d      4d39fd         cmp r13, r15
0x00003a20      7604           jbe 0x3a26
0x00003a22      43881c3e       mov byte [r14 + r15], bl
0x00003a26      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003a2a      4983c701       add r15, 1
0x00003a2e      84d2           test dl, dl
0x00003a30      0f854affffff   jne 0x3980
0x00003a36      89f0           mov eax, esi
0x00003a38      83f001         xor eax, 1
0x00003a3b      4421c0         and eax, r8d
0x00003a3e      4584d2         test r10b, r10b
0x00003a41      740e           je 0x3a51
0x00003a43      4d39fd         cmp r13, r15
0x00003a46      7605           jbe 0x3a4d
0x00003a48      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003a4d      4983c701       add r15, 1
0x00003a51      4883c501       add rbp, 1
0x00003a55      4839cd         cmp rbp, rcx
0x00003a58      0f837ef7ffff   jae 0x31dc
0x00003a5e      84c0           test al, al
0x00003a60      0f84f8030000   je 0x3e5e
0x00003a66      4d39fd         cmp r13, r15
0x00003a69      7605           jbe 0x3a70
0x00003a6b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003a70      498d4701       lea rax, [r15 + 1]
0x00003a74      4939c5         cmp r13, rax
0x00003a77      7606           jbe 0x3a7f
0x00003a79      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003a7f      4983c702       add r15, 2
0x00003a83      4531d2         xor r10d, r10d
0x00003a86      4531c0         xor r8d, r8d
0x00003a89      eb92           jmp 0x3a1d
0x00003a8b      0f1f440000     nop dword [rax + rax]
0x00003a90      4983ff01       cmp r15, 1
0x00003a94      0f845ffeffff   je 0x38f9
0x00003a9a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003a9f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003aa3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003aa8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003aac      eb0f           jmp 0x3abd
0x00003aae      6690           nop
0x00003ab0      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003ab4      4939d0         cmp r8, rdx
0x00003ab7      0f843cfeffff   je 0x38f9
0x00003abd      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00003ac0      83e95b         sub ecx, 0x5b
0x00003ac3      80f921         cmp cl, 0x21
0x00003ac6      77e8           ja 0x3ab0                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00003ac8      be01000000     mov esi, 1
0x00003acd      48d3e6         shl rsi, cl
0x00003ad0      4889f1         mov rcx, rsi
0x00003ad3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00003add      4885f1         test rcx, rsi
0x00003ae0      74ce           je 0x3ab0
0x00003ae2      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003ae7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003aec      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00003af1      c74424080200.  mov dword [rsp + 8], 2
0x00003af9      807c240d00     cmp byte [rsp + 0xd], 0
0x00003afe      7410           je 0x3b10
0x00003b00      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00003b02      b804000000     mov eax, 4
0x00003b07      0f44442408     cmove eax, dword [rsp + 8]
0x00003b0c      89442408       mov dword [rsp + 8], eax
0x00003b10      4883ec08       sub rsp, 8
0x00003b14      4889e9         mov rcx, rbp
0x00003b17      4c89ee         mov rsi, r13
0x00003b1a      ff742468       push qword [rsp + 0x68]
0x00003b1e      ff742478       push qword [rsp + 0x78]
0x00003b22      4c89f7         mov rdi, r14
0x00003b25      6a00           push 0
0x00003b27      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003b2f      448b442428     mov r8d, dword [rsp + 0x28]
0x00003b34      488b542430     mov rdx, qword [rsp + 0x30]
0x00003b39      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00003b3d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00003b42      4883c420       add rsp, 0x20
0x00003b46      4989c7         mov r15, rax
0x00003b49      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003b51      6448331c2528.  xor rbx, qword fs:[0x28]
0x00003b5a      4c89f8         mov rax, r15
0x00003b5d      0f8500060000   jne 0x4163
0x00003b63      4881c4b80000.  add rsp, 0xb8
0x00003b6a      5b             pop rbx
0x00003b6b      5d             pop rbp
0x00003b6c      415c           pop r12
0x00003b6e      415d           pop r13
0x00003b70      415e           pop r14
0x00003b72      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003b74      c3             ret
0x00003b75      0f1f00         nop dword [rax]
0x00003b78      4c89dd         mov rbp, r11
0x00003b7b      e979ffffff     jmp 0x3af9
0x00003b80      4d39fd         cmp r13, r15
0x00003b83      7605           jbe 0x3b8a
0x00003b85      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003b8a      498d4701       lea rax, [r15 + 1]
0x00003b8e      4939c5         cmp r13, rax
0x00003b91      7606           jbe 0x3b99
0x00003b93      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003b99      498d4702       lea rax, [r15 + 2]
0x00003b9d      4939c5         cmp r13, rax
0x00003ba0      0f86ec050000   jbe 0x4192
0x00003ba6      4c89ea         mov rdx, r13
0x00003ba9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003baf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003bb4      e9d9fbffff     jmp 0x3792
0x00003bb9      4489e0         mov eax, r12d
0x00003bbc      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00003bc1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00003bc4      e900f6ffff     jmp 0x31c9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00003bc9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003bcf      e9c5f9ffff     jmp 0x3599
0x00003bd4      85db           test ebx, ebx
0x00003bd6      0f8527f4ffff   jne 0x3003
0x00003bdc      c644240d01     mov byte [rsp + 0xd], 1
0x00003be1      4d85ed         test r13, r13
0x00003be4      0f8590050000   jne 0x417a
0x00003bea      488d05342100.  lea rax, [0x00005d25]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003bf1      48c744245000.  mov qword [rsp + 0x50], 0
0x00003bfa      c644240e01     mov byte [rsp + 0xe], 1
0x00003bff      c644247c00     mov byte [rsp + 0x7c], 0
0x00003c04      4531e4         xor r12d, r12d
0x00003c07      c644240f00     mov byte [rsp + 0xf], 0
0x00003c0c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003c15      4889442448     mov qword [rsp + 0x48], rax
0x00003c1a      41bf01000000   mov r15d, 1
0x00003c20      c74424080200.  mov dword [rsp + 8], 2
0x00003c28      e916f4ffff     jmp 0x3043                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00003c2d      0f1f00         nop dword [rax]
0x00003c30      85db           test ebx, ebx
0x00003c32      0f85f5030000   jne 0x402d
0x00003c38      4d85ed         test r13, r13
0x00003c3b      0f8425020000   je 0x3e66
0x00003c41      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003c45      c644240e01     mov byte [rsp + 0xe], 1
0x00003c4a      4531e4         xor r12d, r12d
0x00003c4d      c644247c00     mov byte [rsp + 0x7c], 0
0x00003c52      48c744245000.  mov qword [rsp + 0x50], 0
0x00003c5b      488d05c12000.  lea rax, str.l______l                   ; 0x5d23 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003c62      c644240f00     mov byte [rsp + 0xf], 0
0x00003c67      c644240d01     mov byte [rsp + 0xd], 1
0x00003c6c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003c75      41bf01000000   mov r15d, 1
0x00003c7b      4889442448     mov qword [rsp + 0x48], rax
0x00003c80      e9bef3ffff     jmp 0x3043
0x00003c85      488d05972000.  lea rax, str.l______l                   ; 0x5d23 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003c8c      c644240e01     mov byte [rsp + 0xe], 1
0x00003c91      c644247c00     mov byte [rsp + 0x7c], 0
0x00003c96      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003c99      48c744245000.  mov qword [rsp + 0x50], 0
0x00003ca2      c644240f01     mov byte [rsp + 0xf], 1
0x00003ca7      c644240d01     mov byte [rsp + 0xd], 1
0x00003cac      48c744241801.  mov qword [rsp + 0x18], 1
0x00003cb5      4531ff         xor r15d, r15d
0x00003cb8      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00003cbd      c74424080500.  mov dword [rsp + 8], 5
0x00003cc5      e979f3ffff     jmp 0x3043
0x00003cca      c644240e01     mov byte [rsp + 0xe], 1
0x00003ccf      c644247c00     mov byte [rsp + 0x7c], 0
0x00003cd4      4531e4         xor r12d, r12d
0x00003cd7      48c744245000.  mov qword [rsp + 0x50], 0
0x00003ce0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00003ce5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00003ce8      c644240d01     mov byte [rsp + 0xd], 1
0x00003ced      48c744241800.  mov qword [rsp + 0x18], 0
0x00003cf6      48c744244800.  mov qword [rsp + 0x48], 0
0x00003cff      e93ff3ffff     jmp 0x3043
0x00003d04      837c24080a     cmp dword [rsp + 8], 0xa
0x00003d09      7456           je 0x3d61
0x00003d0b      488d35152000.  lea rsi, [0x00005d27]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00003d12      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00003d14      ba05000000     mov edx, 5
0x00003d19      e8a2d6ffff     call sym.imp.dcgettext
0x00003d1e      4889c1         mov rcx, rax
0x00003d21      4889442468     mov qword [rsp + 0x68], rax
0x00003d26      488d05fa1f00.  lea rax, [0x00005d27]                   ; "`"
0x00003d2d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00003d30      0f8498030000   je 0x40ce
0x00003d36      488d35e81f00.  lea rsi, [0x00005d25]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003d3d      31ff           xor edi, edi
0x00003d3f      ba05000000     mov edx, 5
0x00003d44      e877d6ffff     call sym.imp.dcgettext
0x00003d49      4889c1         mov rcx, rax
0x00003d4c      4889442460     mov qword [rsp + 0x60], rax
0x00003d51      488d05cd1f00.  lea rax, [0x00005d25]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003d58      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00003d5b      0f8483030000   je 0x40e4
0x00003d61      4531ff         xor r15d, r15d
0x00003d64      85db           test ebx, ebx
0x00003d66      0f84c1010000   je 0x3f2d
0x00003d6c      85db           test ebx, ebx
0x00003d6e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00003d73      0f9544240f     setne byte [rsp + 0xf]
0x00003d78      4531e4         xor r12d, r12d
0x00003d7b      4889df         mov rdi, rbx
0x00003d7e      e85dd6ffff     call sym.imp.strlen
0x00003d83      48895c2448     mov qword [rsp + 0x48], rbx
0x00003d88      4889442418     mov qword [rsp + 0x18], rax
0x00003d8d      c644240e01     mov byte [rsp + 0xe], 1
0x00003d92      c644247c00     mov byte [rsp + 0x7c], 0
0x00003d97      48c744245000.  mov qword [rsp + 0x50], 0
0x00003da0      c644240d01     mov byte [rsp + 0xd], 1
0x00003da5      e999f2ffff     jmp 0x3043
0x00003daa      c644240e01     mov byte [rsp + 0xe], 1
0x00003daf      c644247c00     mov byte [rsp + 0x7c], 0
0x00003db4      4531e4         xor r12d, r12d
0x00003db7      48c744245000.  mov qword [rsp + 0x50], 0
0x00003dc0      c644240f00     mov byte [rsp + 0xf], 0
0x00003dc5      4531ff         xor r15d, r15d
0x00003dc8      c644240d00     mov byte [rsp + 0xd], 0
0x00003dcd      48c744241800.  mov qword [rsp + 0x18], 0
0x00003dd6      48c744244800.  mov qword [rsp + 0x48], 0
0x00003ddf      e95ff2ffff     jmp 0x3043
0x00003de4      c644240e01     mov byte [rsp + 0xe], 1
0x00003de9      c644247c00     mov byte [rsp + 0x7c], 0
0x00003dee      4531e4         xor r12d, r12d
0x00003df1      48c744245000.  mov qword [rsp + 0x50], 0
0x00003dfa      c644240f01     mov byte [rsp + 0xf], 1
0x00003dff      c644240d01     mov byte [rsp + 0xd], 1
0x00003e04      e91af2ffff     jmp 0x3023
0x00003e09      4d39fd         cmp r13, r15
0x00003e0c      7605           jbe 0x3e13
0x00003e0e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00003e13      488d4102       lea rax, [rcx + 2]
0x00003e17      4939c5         cmp r13, rax
0x00003e1a      7606           jbe 0x3e22
0x00003e1c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00003e22      4489e0         mov eax, r12d
0x00003e25      4c8d7903       lea r15, [rcx + 3]
0x00003e29      4531e4         xor r12d, r12d
0x00003e2c      bb30000000     mov ebx, 0x30                           ; '0'
0x00003e31      e962f3ffff     jmp 0x3198
0x00003e36      662e0f1f8400.  nop word cs:[rax + rax]
0x00003e40      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003e45      4c89dd         mov rbp, r11
0x00003e48      885c240d       mov byte [rsp + 0xd], bl
0x00003e4c      e9a8fcffff     jmp 0x3af9
0x00003e51      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003e56      4531e4         xor r12d, r12d
0x00003e59      e902fbffff     jmp 0x3960
0x00003e5e      4531d2         xor r10d, r10d
0x00003e61      e9b7fbffff     jmp 0x3a1d
0x00003e66      48c744245000.  mov qword [rsp + 0x50], 0
0x00003e6f      c644240e01     mov byte [rsp + 0xe], 1
0x00003e74      4531e4         xor r12d, r12d
0x00003e77      c644247c00     mov byte [rsp + 0x7c], 0
0x00003e7c      e9dafdffff     jmp 0x3c5b
0x00003e81      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003e86      4c89f6         mov rsi, r14
0x00003e89      4c89e9         mov rcx, r13
0x00003e8c      4889d8         mov rax, rbx
0x00003e8f      4889df         mov rdi, rbx
0x00003e92      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003e98      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003e9d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003ea5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003ea8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003eae      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003eb6      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003ebb      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003ec0      7326           jae 0x3ee8
0x00003ec2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003ec5      7510           jne 0x3ed7
0x00003ec7      eb1f           jmp 0x3ee8
0x00003ec9      0f1f80000000.  nop dword [rax]
0x00003ed0      41803c0100     cmp byte [r9 + rax], 0
0x00003ed5      740e           je 0x3ee5
0x00003ed7      4883c001       add rax, 1
0x00003edb      488d540500     lea rdx, [rbp + rax]
0x00003ee0      4939d3         cmp r11, rdx
0x00003ee3      77eb           ja 0x3ed0
0x00003ee5      4889c7         mov rdi, rax
0x00003ee8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003eed      4531e4         xor r12d, r12d
0x00003ef0      e961faffff     jmp 0x3956
0x00003ef5      4889df         mov rdi, rbx
0x00003ef8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003efe      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003f03      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003f09      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003f11      4531e4         xor r12d, r12d
0x00003f14      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003f19      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003f1e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003f23      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003f28      e929faffff     jmp 0x3956
0x00003f2d      488b542468     mov rdx, qword [rsp + 0x68]
0x00003f32      0fb602         movzx eax, byte [rdx]
0x00003f35      84c0           test al, al
0x00003f37      0f842ffeffff   je 0x3d6c
0x00003f3d      0f1f00         nop dword [rax]
0x00003f40      4d39fd         cmp r13, r15
0x00003f43      7604           jbe 0x3f49
0x00003f45      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00003f49      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00003f4d      420fb6043a     movzx eax, byte [rdx + r15]
0x00003f52      84c0           test al, al
0x00003f54      75ea           jne 0x3f40
0x00003f56      e911feffff     jmp 0x3d6c
0x00003f5b      89d0           mov eax, edx
0x00003f5d      e955f5ffff     jmp 0x34b7
0x00003f62      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003f66      80fb3e         cmp bl, 0x3e
0x00003f69      0f8771f8ffff   ja 0x37e0
0x00003f6f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003f79      480fa3d8       bt rax, rbx
0x00003f7d      0f835df8ffff   jae 0x37e0
0x00003f83      807c240f00     cmp byte [rsp + 0xf], 0
0x00003f88      0f85e4010000   jne 0x4172                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00003f8e      4d39fd         cmp r13, r15
0x00003f91      7605           jbe 0x3f98
0x00003f93      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003f98      498d4701       lea rax, [r15 + 1]
0x00003f9c      4939c5         cmp r13, rax
0x00003f9f      7606           jbe 0x3fa7
0x00003fa1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003fa7      498d4702       lea rax, [r15 + 2]
0x00003fab      4939c5         cmp r13, rax
0x00003fae      7606           jbe 0x3fb6
0x00003fb0      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003fb6      498d4703       lea rax, [r15 + 3]
0x00003fba      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00003fbd      7606           jbe 0x3fc5
0x00003fbf      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00003fc5      4983c704       add r15, 4
0x00003fc9      31d2           xor edx, edx
0x00003fcb      4531e4         xor r12d, r12d
0x00003fce      31c0           xor eax, eax
0x00003fd0      4889cd         mov rbp, rcx
0x00003fd3      e9c0f1ffff     jmp 0x3198
0x00003fd8      85db           test ebx, ebx
0x00003fda      0f8488010000   je 0x4168
0x00003fe0      488d053e1d00.  lea rax, [0x00005d25]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003fe7      c644240e01     mov byte [rsp + 0xe], 1
0x00003fec      c644247c00     mov byte [rsp + 0x7c], 0
0x00003ff1      4531e4         xor r12d, r12d
0x00003ff4      48c744245000.  mov qword [rsp + 0x50], 0
0x00003ffd      c644240f01     mov byte [rsp + 0xf], 1
0x00004002      c644240d00     mov byte [rsp + 0xd], 0
0x00004007      48c744241801.  mov qword [rsp + 0x18], 1
0x00004010      4531ff         xor r15d, r15d
0x00004013      4889442448     mov qword [rsp + 0x48], rax
0x00004018      e926f0ffff     jmp 0x3043
0x0000401d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00004020      4c89dd         mov rbp, r11
0x00004023      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004028      e9ccfaffff     jmp 0x3af9
0x0000402d      488d05ef1c00.  lea rax, str.l______l                   ; 0x5d23 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004034      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00004039      c644247c00     mov byte [rsp + 0x7c], 0
0x0000403e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00004041      48c744245000.  mov qword [rsp + 0x50], 0
0x0000404a      c644240f01     mov byte [rsp + 0xf], 1
0x0000404f      c644240d01     mov byte [rsp + 0xd], 1
0x00004054      48c744241801.  mov qword [rsp + 0x18], 1
0x0000405d      4531ff         xor r15d, r15d
0x00004060      4889442448     mov qword [rsp + 0x48], rax
0x00004065      e9d9efffff     jmp 0x3043
0x0000406a      89d0           mov eax, edx
0x0000406c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00004071      4885db         test rbx, rbx
0x00004074      742c           je 0x40a2
0x00004076      84c0           test al, al
0x00004078      7428           je 0x40a2
0x0000407a      0fb60b         movzx ecx, byte [rbx]
0x0000407d      4889d8         mov rax, rbx
0x00004080      84c9           test cl, cl
0x00004082      741e           je 0x40a2
0x00004084      4c89fa         mov rdx, r15
0x00004087      4c29f8         sub rax, r15
0x0000408a      4939d5         cmp r13, rdx
0x0000408d      7604           jbe 0x4093
0x0000408f      41880c16       mov byte [r14 + rdx], cl
0x00004093      4883c201       add rdx, 1
0x00004097      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000409b      84c9           test cl, cl
0x0000409d      75eb           jne 0x408a
0x0000409f      4989d7         mov r15, rdx
0x000040a2      4d39fd         cmp r13, r15
0x000040a5      0f869efaffff   jbe 0x3b49
0x000040ab      43c6043e00     mov byte [r14 + r15], 0
0x000040b0      e994faffff     jmp 0x3b49
0x000040b5      837c240802     cmp dword [rsp + 8], 2
0x000040ba      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000040bf      4c89dd         mov rbp, r11
0x000040c2      0f94c0         sete al
0x000040c5      885c240d       mov byte [rsp + 0xd], bl
0x000040c9      e92bfaffff     jmp 0x3af9
0x000040ce      8b742408       mov esi, dword [rsp + 8]
0x000040d2      4889cf         mov rdi, rcx
0x000040d5      e8a6edffff     call sym.gettext_quote.part.1
0x000040da      4889442468     mov qword [rsp + 0x68], rax
0x000040df      e952fcffff     jmp 0x3d36
0x000040e4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x000040e8      4889cf         mov rdi, rcx
0x000040eb      e890edffff     call sym.gettext_quote.part.1
0x000040f0      4889442460     mov qword [rsp + 0x60], rax
0x000040f5      e967fcffff     jmp 0x3d61
0x000040fa      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000040ff      4c89dd         mov rbp, r11
0x00004102      89d0           mov eax, edx
0x00004104      885c240d       mov byte [rsp + 0xd], bl
0x00004108      e9ecf9ffff     jmp 0x3af9
0x0000410d      4883ec08       sub rsp, 8
0x00004111      41b805000000   mov r8d, 5
0x00004117      4c89d9         mov rcx, r11
0x0000411a      ff742468       push qword [rsp + 0x68]
0x0000411e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00004122      4c89f7         mov rdi, r14
0x00004125      ff742438       push qword [rsp + 0x38]
0x00004129      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004131      488b542430     mov rdx, qword [rsp + 0x30]
0x00004136      488b742470     mov rsi, qword [rsp + 0x70]
0x0000413b      e830eeffff     call sym.quotearg_buffer_restyled
0x00004140      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00004144      4989c7         mov r15, rax
0x00004147      e9fdf9ffff     jmp 0x3b49
0x0000414c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00004151      e916ffffff     jmp 0x406c
0x00004156      c74424080200.  mov dword [rsp + 8], 2
0x0000415e      e996f9ffff     jmp 0x3af9
0x00004163      e888d2ffff     call sym.imp.__stack_chk_fail
0x00004168      c644240d00     mov byte [rsp + 0xd], 0
0x0000416d      e96ffaffff     jmp 0x3be1
0x00004172      4c89dd         mov rbp, r11
0x00004175      e996f9ffff     jmp 0x3b10
0x0000417a      c644240e01     mov byte [rsp + 0xe], 1
0x0000417f      31c0           xor eax, eax
0x00004181      4531e4         xor r12d, r12d
0x00004184      48c744245000.  mov qword [rsp + 0x50], 0
0x0000418d      e9a2f5ffff     jmp 0x3734
0x00004192      4c89ea         mov rdx, r13
0x00004195      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000419a      e9f3f5ffff     jmp 0x3792
0x0000419f      e87cd1ffff     call sym.imp.abort
0x000041a4      6690           nop
0x000041a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x000041b0      4157           push r15
0x000041b2      4156           push r14
0x000041b4      4c63ff         movsxd r15, edi
0x000041b7      4155           push r13
0x000041b9      4154           push r12
0x000041bb      4989d6         mov r14, rdx
0x000041be      55             push rbp
0x000041bf      53             push rbx
0x000041c0      4889cd         mov rbp, rcx
0x000041c3      4883ec28       sub rsp, 0x28
0x000041c7      4889742408     mov qword [rsp + 8], rsi
0x000041cc      e85fd1ffff     call sym.imp.__errno_location
0x000041d1      4989c5         mov r13, rax
0x000041d4      8b00           mov eax, dword [rax]
0x000041d6      4585ff         test r15d, r15d
0x000041d9      488b1d803e20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x000041e0      89442418       mov dword [rsp + 0x18], eax
0x000041e4      0f8867010000   js 0x4351
0x000041ea      44393d673e20.  cmp dword [obj.nslots], r15d            ; [0x208058:4]=1
0x000041f1      7f62           jg 0x4255
0x000041f3      4181ffffffff.  cmp r15d, 0x7fffffff
0x000041fa      0f8456010000   je 0x4356
0x00004200      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004204      488d05653e20.  lea rax, obj.slotvec0                   ; 0x208070
0x0000420b      4963f4         movsxd rsi, r12d
0x0000420e      48c1e604       shl rsi, 4
0x00004212      4839c3         cmp rbx, rax
0x00004215      0f8415010000   je 0x4330
0x0000421b      4889df         mov rdi, rbx
0x0000421e      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00004223      4889c3         mov rbx, rax
0x00004226      488905333e20.  mov qword [obj.slotvec], rax            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x0000422d      48633d243e20.  movsxd rdi, dword [obj.nslots]          ; [0x208058:4]=1
0x00004234      4489e2         mov edx, r12d
0x00004237      31f6           xor esi, esi
0x00004239      29fa           sub edx, edi
0x0000423b      48c1e704       shl rdi, 4
0x0000423f      4863d2         movsxd rdx, edx
0x00004242      4801df         add rdi, rbx
0x00004245      48c1e204       shl rdx, 4
0x00004249      e802d2ffff     call sym.imp.memset
0x0000424e      448925033e20.  mov dword [obj.nslots], r12d            ; [0x208058:4]=1
0x00004255      8b4504         mov eax, dword [rbp + 4]
0x00004258      49c1e704       shl r15, 4
0x0000425c      4883ec08       sub rsp, 8
0x00004260      4c01fb         add rbx, r15
0x00004263      4c8d7d08       lea r15, [rbp + 8]
0x00004267      448b4500       mov r8d, dword [rbp]
0x0000426b      4c8b1b         mov r11, qword [rbx]
0x0000426e      4c8b6308       mov r12, qword [rbx + 8]
0x00004272      4c89f1         mov rcx, r14
0x00004275      83c801         or eax, 1
0x00004278      89442424       mov dword [rsp + 0x24], eax
0x0000427c      ff7530         push qword [rbp + 0x30]
0x0000427f      4189c1         mov r9d, eax
0x00004282      ff7528         push qword [rbp + 0x28]
0x00004285      4157           push r15
0x00004287      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000428a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000428f      4c89e7         mov rdi, r12
0x00004292      4c895c2430     mov qword [rsp + 0x30], r11
0x00004297      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000429c      4883c420       add rsp, 0x20
0x000042a0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x000042a5      4939c3         cmp r11, rax
0x000042a8      7767           ja 0x4311
0x000042aa      488d7001       lea rsi, [rax + 1]
0x000042ae      488d054b3e20.  lea rax, obj.slot0                      ; 0x208100
0x000042b5      4939c4         cmp r12, rax
0x000042b8      488933         mov qword [rbx], rsi
0x000042bb      7412           je 0x42cf
0x000042bd      4c89e7         mov rdi, r12
0x000042c0      4889742410     mov qword [rsp + 0x10], rsi
0x000042c5      e846d0ffff     call sym.imp.free
0x000042ca      488b742410     mov rsi, qword [rsp + 0x10]
0x000042cf      4889f7         mov rdi, rsi
0x000042d2      4889742410     mov qword [rsp + 0x10], rsi
0x000042d7      e8540e0000     call sym.xmalloc
0x000042dc      4883ec08       sub rsp, 8
0x000042e0      48894308       mov qword [rbx + 8], rax
0x000042e4      448b4500       mov r8d, dword [rbp]
0x000042e8      ff7530         push qword [rbp + 0x30]
0x000042eb      ff7528         push qword [rbp + 0x28]
0x000042ee      4c89f1         mov rcx, r14
0x000042f1      4157           push r15
0x000042f3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x000042f8      4889c7         mov rdi, rax
0x000042fb      488b542428     mov rdx, qword [rsp + 0x28]
0x00004300      488b742430     mov rsi, qword [rsp + 0x30]
0x00004305      4989c4         mov r12, rax
0x00004308      e863ecffff     call sym.quotearg_buffer_restyled
0x0000430d      4883c420       add rsp, 0x20
0x00004311      8b442418       mov eax, dword [rsp + 0x18]
0x00004315      41894500       mov dword [r13], eax
0x00004319      4883c428       add rsp, 0x28
0x0000431d      4c89e0         mov rax, r12
0x00004320      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004321      5d             pop rbp
0x00004322      415c           pop r12
0x00004324      415d           pop r13
0x00004326      415e           pop r14
0x00004328      415f           pop r15
0x0000432a      c3             ret
0x0000432b      0f1f440000     nop dword [rax + rax]
0x00004330      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004332      e8590e0000     call sym.xrealloc
0x00004337      660f6f05313d.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000433f      4889c3         mov rbx, rax
0x00004342      488905173d20.  mov qword [obj.slotvec], rax            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00004349      0f1100         movups xmmword [rax], xmm0
0x0000434c      e9dcfeffff     jmp 0x422d
0x00004351      e8cacfffff     call sym.imp.abort
0x00004356      e825100000     call sym.xalloc_die
0x0000435b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004360      4154           push r12
0x00004362      55             push rbp
0x00004363      53             push rbx
0x00004364      4889fb         mov rbx, rdi
0x00004367      e8c4cfffff     call sym.imp.__errno_location
0x0000436c      448b20         mov r12d, dword [rax]
0x0000436f      4889c5         mov rbp, rax
0x00004372      488d05873e20.  lea rax, obj.default_quoting_options    ; 0x208200
0x00004379      4885db         test rbx, rbx
0x0000437c      be38000000     mov esi, 0x38                           ; '8'
0x00004381      480f44d8       cmove rbx, rax
0x00004385      4889df         mov rdi, rbx
0x00004388      e8a30f0000     call sym.xmemdup
0x0000438d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004391      5b             pop rbx
0x00004392      5d             pop rbp
0x00004393      415c           pop r12
0x00004395      c3             ret
0x00004396      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x000043a0      488d05593e20.  lea rax, obj.default_quoting_options    ; 0x208200
0x000043a7      4885ff         test rdi, rdi
0x000043aa      480f44f8       cmove rdi, rax
0x000043ae      8b07           mov eax, dword [rdi]
0x000043b0      c3             ret
0x000043b1      0f1f440000     nop dword [rax + rax]
0x000043b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x000043c0      488d05393e20.  lea rax, obj.default_quoting_options    ; 0x208200
0x000043c7      4885ff         test rdi, rdi
0x000043ca      480f44f8       cmove rdi, rax
0x000043ce      8937           mov dword [rdi], esi
0x000043d0      c3             ret
0x000043d1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000043d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x000043e0      488d05193e20.  lea rax, obj.default_quoting_options    ; 0x208200
0x000043e7      4885ff         test rdi, rdi
0x000043ea      89f1           mov ecx, esi
0x000043ec      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x000043f0      89f0           mov eax, esi
0x000043f2      83e11f         and ecx, 0x1f
0x000043f5      c0e805         shr al, 5
0x000043f8      0fb6c0         movzx eax, al
0x000043fb      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004400      8b37           mov esi, dword [rdi]
0x00004402      89f0           mov eax, esi
0x00004404      d3e8           shr eax, cl
0x00004406      31c2           xor edx, eax
0x00004408      83e001         and eax, 1
0x0000440b      83e201         and edx, 1
0x0000440e      d3e2           shl edx, cl
0x00004410      31f2           xor edx, esi
0x00004412      8917           mov dword [rdi], edx
0x00004414      c3             ret
0x00004415      90             nop
0x00004416      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004420      488d05d93d20.  lea rax, obj.default_quoting_options    ; 0x208200
0x00004427      4885ff         test rdi, rdi
0x0000442a      480f44f8       cmove rdi, rax
0x0000442e      8b4704         mov eax, dword [rdi + 4]
0x00004431      897704         mov dword [rdi + 4], esi
0x00004434      c3             ret
0x00004435      90             nop
0x00004436      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004440      488d05b93d20.  lea rax, obj.default_quoting_options    ; 0x208200
0x00004447      4885ff         test rdi, rdi
0x0000444a      480f44f8       cmove rdi, rax
0x0000444e      4885f6         test rsi, rsi
0x00004451      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004457      740e           je 0x4467
0x00004459      4885d2         test rdx, rdx
0x0000445c      7409           je 0x4467
0x0000445e      48897728       mov qword [rdi + 0x28], rsi
0x00004462      48895730       mov qword [rdi + 0x30], rdx
0x00004466      c3             ret
0x00004467      4883ec08       sub rsp, 8
0x0000446b      e8b0ceffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004470      4157           push r15
0x00004472      4156           push r14
0x00004474      488d05853d20.  lea rax, obj.default_quoting_options    ; 0x208200
0x0000447b      4155           push r13
0x0000447d      4154           push r12
0x0000447f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004482      55             push rbp
0x00004483      53             push rbx
0x00004484      4c89c3         mov rbx, r8
0x00004487      4989f6         mov r14, rsi
0x0000448a      4989d7         mov r15, rdx
0x0000448d      4883ec18       sub rsp, 0x18
0x00004491      4d85c0         test r8, r8
0x00004494      480f44d8       cmove rbx, rax
0x00004498      48894c2408     mov qword [rsp + 8], rcx
0x0000449d      e88eceffff     call sym.imp.__errno_location
0x000044a2      448b20         mov r12d, dword [rax]
0x000044a5      4889c5         mov rbp, rax
0x000044a8      488d4308       lea rax, [rbx + 8]
0x000044ac      4883ec08       sub rsp, 8
0x000044b0      448b4b04       mov r9d, dword [rbx + 4]
0x000044b4      ff7330         push qword [rbx + 0x30]
0x000044b7      448b03         mov r8d, dword [rbx]
0x000044ba      ff7328         push qword [rbx + 0x28]
0x000044bd      4c89fa         mov rdx, r15
0x000044c0      50             push rax
0x000044c1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000044c6      4c89f6         mov rsi, r14
0x000044c9      4c89ef         mov rdi, r13
0x000044cc      e89feaffff     call sym.quotearg_buffer_restyled
0x000044d1      44896500       mov dword [rbp], r12d
0x000044d5      4883c438       add rsp, 0x38
0x000044d9      5b             pop rbx
0x000044da      5d             pop rbp
0x000044db      415c           pop r12
0x000044dd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000044df      415e           pop r14
0x000044e1      415f           pop r15
0x000044e3      c3             ret
0x000044e4      6690           nop
0x000044e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x000044f0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x000044f2      4156           push r14
0x000044f4      488d05053d20.  lea rax, obj.default_quoting_options    ; 0x208200
0x000044fb      4155           push r13
0x000044fd      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x000044ff      4989d4         mov r12, rdx
0x00004502      55             push rbp
0x00004503      53             push rbx
0x00004504      4889cb         mov rbx, rcx
0x00004507      4989fe         mov r14, rdi
0x0000450a      4989f7         mov r15, rsi
0x0000450d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004511      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004514      480f44d8       cmove rbx, rax
0x00004518      31ed           xor ebp, ebp
0x0000451a      e811ceffff     call sym.imp.__errno_location
0x0000451f      4d85e4         test r12, r12
0x00004522      4989c5         mov r13, rax
0x00004525      8b00           mov eax, dword [rax]
0x00004527      400f94c5       sete bpl
0x0000452b      0b6b04         or ebp, dword [rbx + 4]
0x0000452e      4c8d5308       lea r10, [rbx + 8]
0x00004532      4883ec08       sub rsp, 8
0x00004536      448b03         mov r8d, dword [rbx]
0x00004539      4c89f9         mov rcx, r15
0x0000453c      89442414       mov dword [rsp + 0x14], eax
0x00004540      ff7330         push qword [rbx + 0x30]
0x00004543      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004546      ff7328         push qword [rbx + 0x28]
0x00004549      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000454b      31f6           xor esi, esi
0x0000454d      4189e9         mov r9d, ebp
0x00004550      31ff           xor edi, edi
0x00004552      4c89542440     mov qword [rsp + 0x40], r10
0x00004557      e814eaffff     call sym.quotearg_buffer_restyled
0x0000455c      488d7001       lea rsi, [rax + 1]
0x00004560      4889442448     mov qword [rsp + 0x48], rax
0x00004565      4883c420       add rsp, 0x20
0x00004569      4889f7         mov rdi, rsi
0x0000456c      4889742418     mov qword [rsp + 0x18], rsi
0x00004571      e8ba0b0000     call sym.xmalloc
0x00004576      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000457b      4883ec08       sub rsp, 8
0x0000457f      ff7330         push qword [rbx + 0x30]
0x00004582      ff7328         push qword [rbx + 0x28]
0x00004585      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000458a      4189e9         mov r9d, ebp
0x0000458d      448b03         mov r8d, dword [rbx]
0x00004590      4c89f9         mov rcx, r15
0x00004593      4c89f2         mov rdx, r14
0x00004596      4889c7         mov rdi, rax
0x00004599      4152           push r10
0x0000459b      488b742438     mov rsi, qword [rsp + 0x38]
0x000045a0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x000045a5      8b44242c       mov eax, dword [rsp + 0x2c]
0x000045a9      4883c420       add rsp, 0x20
0x000045ad      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x000045b0      41894500       mov dword [r13], eax
0x000045b4      7409           je 0x45bf
0x000045b6      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x000045bb      4d891c24       mov qword [r12], r11
0x000045bf      488b442410     mov rax, qword [rsp + 0x10]
0x000045c4      4883c438       add rsp, 0x38
0x000045c8      5b             pop rbx
0x000045c9      5d             pop rbp
0x000045ca      415c           pop r12
0x000045cc      415d           pop r13
0x000045ce      415e           pop r14
0x000045d0      415f           pop r15
0x000045d2      c3             ret
0x000045d3      0f1f00         nop dword [rax]
0x000045d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x000045e0      4889d1         mov rcx, rdx
0x000045e3      31d2           xor edx, edx
0x000045e5      e906ffffff     jmp sym.quotearg_alloc_mem
0x000045ea      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x000045f0      8b05623a2000   mov eax, dword [obj.nslots]             ; [0x208058:4]=1
0x000045f6      4154           push r12
0x000045f8      4c8b25613a20.  mov r12, qword [obj.slotvec]            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x000045ff      55             push rbp
0x00004600      53             push rbx
0x00004601      83f801         cmp eax, 1
0x00004604      7e2b           jle 0x4631                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004606      83e802         sub eax, 2
0x00004609      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000460e      48c1e004       shl rax, 4
0x00004612      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004617      660f1f840000.  nop word [rax + rax]
0x00004620      488b3b         mov rdi, qword [rbx]
0x00004623      4883c310       add rbx, 0x10
0x00004627      e8e4ccffff     call sym.imp.free
0x0000462c      4839eb         cmp rbx, rbp
0x0000462f      75ef           jne 0x4620
0x00004631      498b7c2408     mov rdi, qword [r12 + 8]
0x00004636      488d1dc33a20.  lea rbx, obj.slot0                      ; 0x208100
0x0000463d      4839df         cmp rdi, rbx
0x00004640      7417           je 0x4659
0x00004642      e8c9ccffff     call sym.imp.free
0x00004647      48c7051e3a20.  mov qword [obj.slotvec0], 0x100         ; [0x208070:8]=256
0x00004652      48891d1f3a20.  mov qword [0x00208078], rbx             ; [0x208078:8]=0x208100 obj.slot0
0x00004659      488d1d103a20.  lea rbx, obj.slotvec0                   ; 0x208070
0x00004660      4939dc         cmp r12, rbx
0x00004663      740f           je 0x4674
0x00004665      4c89e7         mov rdi, r12
0x00004668      e8a3ccffff     call sym.imp.free
0x0000466d      48891dec3920.  mov qword [obj.slotvec], rbx            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00004674      5b             pop rbx
0x00004675      c705d9392000.  mov dword [obj.nslots], 1               ; [0x208058:4]=1
0x0000467f      5d             pop rbp
0x00004680      415c           pop r12
0x00004682      c3             ret
0x00004683      0f1f00         nop dword [rax]
0x00004686      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004690      488d0d693b20.  lea rcx, obj.default_quoting_options    ; 0x208200
0x00004697      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000469e      e90dfbffff     jmp sym.quotearg_n_options
0x000046a3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x000046a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x000046b0      488d0d493b20.  lea rcx, obj.default_quoting_options    ; 0x208200
0x000046b7      e9f4faffff     jmp sym.quotearg_n_options
0x000046bc      0f1f4000       nop dword [rax]
;-- quotearg:
0x000046c0      488d0d393b20.  lea rcx, obj.default_quoting_options    ; 0x208200
0x000046c7      4889fe         mov rsi, rdi
0x000046ca      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000046d1      31ff           xor edi, edi
0x000046d3      e9d8faffff     jmp sym.quotearg_n_options
0x000046d8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x000046e0      488d0d193b20.  lea rcx, obj.default_quoting_options    ; 0x208200
0x000046e7      4889f2         mov rdx, rsi
0x000046ea      4889fe         mov rsi, rdi
0x000046ed      31ff           xor edi, edi
0x000046ef      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x000046f4      6690           nop
0x000046f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004700      4883ec48       sub rsp, 0x48
0x00004704      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004707      64488b142528.  mov rdx, qword fs:[0x28]
0x00004710      4889542438     mov qword [rsp + 0x38], rdx
0x00004715      31d2           xor edx, edx
0x00004717      83fe0a         cmp esi, 0xa
0x0000471a      7468           je 0x4784
0x0000471c      893424         mov dword [rsp], esi
0x0000471f      4889e1         mov rcx, rsp
0x00004722      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004729      4889c6         mov rsi, rax
0x0000472c      48c744240400.  mov qword [rsp + 4], 0
0x00004735      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000473e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004747      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004750      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004759      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004762      c74424340000.  mov dword [rsp + 0x34], 0
0x0000476a      e841faffff     call sym.quotearg_n_options
0x0000476f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004774      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000477d      750a           jne 0x4789                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000477f      4883c448       add rsp, 0x48
0x00004783      c3             ret
0x00004784      e897cbffff     call sym.imp.abort
0x00004789      e862ccffff     call sym.imp.__stack_chk_fail
0x0000478e      6690           nop
;-- quotearg_n_style_mem:
0x00004790      4883ec48       sub rsp, 0x48
0x00004794      4889d0         mov rax, rdx
0x00004797      4889ca         mov rdx, rcx
0x0000479a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x000047a3      48894c2438     mov qword [rsp + 0x38], rcx
0x000047a8      31c9           xor ecx, ecx
0x000047aa      83fe0a         cmp esi, 0xa
0x000047ad      7461           je 0x4810
0x000047af      893424         mov dword [rsp], esi
0x000047b2      4889e1         mov rcx, rsp
0x000047b5      4889c6         mov rsi, rax
0x000047b8      48c744240400.  mov qword [rsp + 4], 0
0x000047c1      48c744240c00.  mov qword [rsp + 0xc], 0
0x000047ca      48c744241400.  mov qword [rsp + 0x14], 0
0x000047d3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000047dc      48c744242400.  mov qword [rsp + 0x24], 0
0x000047e5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000047ee      c74424340000.  mov dword [rsp + 0x34], 0
0x000047f6      e8b5f9ffff     call sym.quotearg_n_options
0x000047fb      488b542438     mov rdx, qword [rsp + 0x38]
0x00004800      644833142528.  xor rdx, qword fs:[0x28]
0x00004809      750a           jne 0x4815
0x0000480b      4883c448       add rsp, 0x48
0x0000480f      c3             ret
0x00004810      e80bcbffff     call sym.imp.abort
0x00004815      e8d6cbffff     call sym.imp.__stack_chk_fail
0x0000481a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004820      4889f2         mov rdx, rsi
0x00004823      89fe           mov esi, edi
0x00004825      31ff           xor edi, edi
0x00004827      e9d4feffff     jmp sym.quotearg_n_style
0x0000482c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004830      4889d1         mov rcx, rdx
0x00004833      4889f2         mov rdx, rsi
0x00004836      89fe           mov esi, edi
0x00004838      31ff           xor edi, edi
0x0000483a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000483f      90             nop
;-- quotearg_char_mem:
0x00004840      4883ec48       sub rsp, 0x48
0x00004844      89d1           mov ecx, edx
0x00004846      64488b042528.  mov rax, qword fs:[0x28]
0x0000484f      4889442438     mov qword [rsp + 0x38], rax
0x00004854      31c0           xor eax, eax
0x00004856      488b05d33920.  mov rax, qword [0x00208230]             ; [0x208230:8]=0
0x0000485d      4989e0         mov r8, rsp
0x00004860      83e11f         and ecx, 0x1f
0x00004863      660f6f059539.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000486b      4889442430     mov qword [rsp + 0x30], rax
0x00004870      89d0           mov eax, edx
0x00004872      0f290424       movaps xmmword [rsp], xmm0
0x00004876      c0e805         shr al, 5
0x00004879      0fb6c0         movzx eax, al
0x0000487c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004881      660f6f058739.  movdqa xmm0, xmmword [0x00208210]
0x00004889      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000488e      660f6f058a39.  movdqa xmm0, xmmword [0x00208220]
0x00004896      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000489b      418b11         mov edx, dword [r9]
0x0000489e      89d0           mov eax, edx
0x000048a0      d3e8           shr eax, cl
0x000048a2      f7d0           not eax
0x000048a4      83e001         and eax, 1
0x000048a7      d3e0           shl eax, cl
0x000048a9      4c89c1         mov rcx, r8
0x000048ac      31d0           xor eax, edx
0x000048ae      4889f2         mov rdx, rsi
0x000048b1      4889fe         mov rsi, rdi
0x000048b4      418901         mov dword [r9], eax
0x000048b7      31ff           xor edi, edi
0x000048b9      e8f2f8ffff     call sym.quotearg_n_options
0x000048be      488b742438     mov rsi, qword [rsp + 0x38]
0x000048c3      644833342528.  xor rsi, qword fs:[0x28]
0x000048cc      7505           jne 0x48d3
0x000048ce      4883c448       add rsp, 0x48
0x000048d2      c3             ret
0x000048d3      e818cbffff     call sym.imp.__stack_chk_fail
0x000048d8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x000048e0      400fbed6       movsx edx, sil
0x000048e4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000048eb      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x000048f0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000048f5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000048fc      e93fffffff     jmp sym.quotearg_char_mem
0x00004901      0f1f440000     nop dword [rax + rax]
0x00004906      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004910      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004915      e926ffffff     jmp sym.quotearg_char_mem
0x0000491a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004920      4883ec48       sub rsp, 0x48
0x00004924      4889d0         mov rax, rdx
0x00004927      64488b142528.  mov rdx, qword fs:[0x28]
0x00004930      4889542438     mov qword [rsp + 0x38], rdx
0x00004935      31d2           xor edx, edx
0x00004937      83fe0a         cmp esi, 0xa
0x0000493a      7468           je 0x49a4
0x0000493c      893424         mov dword [rsp], esi
0x0000493f      4889e1         mov rcx, rsp
0x00004942      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004949      4889c6         mov rsi, rax
0x0000494c      48c744240400.  mov qword [rsp + 4], 0
0x00004955      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000495e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004967      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004970      48c744242400.  mov qword [rsp + 0x24], 0
0x00004979      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004982      c74424340000.  mov dword [rsp + 0x34], 0
0x0000498a      e821f8ffff     call sym.quotearg_n_options
0x0000498f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004994      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000499d      750a           jne 0x49a9
0x0000499f      4883c448       add rsp, 0x48
0x000049a3      c3             ret
0x000049a4      e877c9ffff     call sym.imp.abort
0x000049a9      e842caffff     call sym.imp.__stack_chk_fail
0x000049ae      6690           nop
;-- quotearg_n_custom_mem:
0x000049b0      4883ec48       sub rsp, 0x48
0x000049b4      4989c9         mov r9, rcx
0x000049b7      488b0d723820.  mov rcx, qword [0x00208230]             ; [0x208230:8]=0
0x000049be      660f6f053a38.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000049c6      64488b042528.  mov rax, qword fs:[0x28]
0x000049cf      4889442438     mov qword [rsp + 0x38], rax
0x000049d4      31c0           xor eax, eax
0x000049d6      0f290424       movaps xmmword [rsp], xmm0
0x000049da      4885f6         test rsi, rsi
0x000049dd      48894c2430     mov qword [rsp + 0x30], rcx
0x000049e2      c704240a0000.  mov dword [rsp], 0xa
0x000049e9      660f6f051f38.  movdqa xmm0, xmmword [0x00208210]
0x000049f1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000049f6      660f6f052238.  movdqa xmm0, xmmword [0x00208220]
0x000049fe      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004a03      7432           je 0x4a37
0x00004a05      4885d2         test rdx, rdx
0x00004a08      742d           je 0x4a37
0x00004a0a      4889742428     mov qword [rsp + 0x28], rsi
0x00004a0f      4889542430     mov qword [rsp + 0x30], rdx
0x00004a14      4889e1         mov rcx, rsp
0x00004a17      4c89c2         mov rdx, r8
0x00004a1a      4c89ce         mov rsi, r9
0x00004a1d      e88ef7ffff     call sym.quotearg_n_options
0x00004a22      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004a27      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004a30      750a           jne 0x4a3c
0x00004a32      4883c448       add rsp, 0x48
0x00004a36      c3             ret
0x00004a37      e8e4c8ffff     call sym.imp.abort
0x00004a3c      e8afc9ffff     call sym.imp.__stack_chk_fail
0x00004a41      0f1f440000     nop dword [rax + rax]
0x00004a46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004a50      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004a57      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00004a5c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004a60      4889d1         mov rcx, rdx
0x00004a63      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004a6a      4889f2         mov rdx, rsi
0x00004a6d      4889fe         mov rsi, rdi
0x00004a70      31ff           xor edi, edi
0x00004a72      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004a77      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004a80      4989c8         mov r8, rcx
0x00004a83      4889d1         mov rcx, rdx
0x00004a86      4889f2         mov rdx, rsi
0x00004a89      4889fe         mov rsi, rdi
0x00004a8c      31ff           xor edi, edi
0x00004a8e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004a93      0f1f00         nop dword [rax]
0x00004a96      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004aa0      488d0d793520.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00004aa7      e904f7ffff     jmp sym.quotearg_n_options
0x00004aac      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004ab0      488d0d693520.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00004ab7      4889f2         mov rdx, rsi
0x00004aba      4889fe         mov rsi, rdi
0x00004abd      31ff           xor edi, edi
0x00004abf      e9ecf6ffff     jmp sym.quotearg_n_options
0x00004ac4      6690           nop
0x00004ac6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00004ad0      488d0d493520.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00004ad7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004ade      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004ae3      0f1f00         nop dword [rax]
0x00004ae6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00004af0      488d0d293520.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00004af7      4889fe         mov rsi, rdi
0x00004afa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004b01      31ff           xor edi, edi
0x00004b03      e9a8f6ffff     jmp sym.quotearg_n_options
0x00004b08      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00004b10      4157           push r15
0x00004b12      4156           push r14
0x00004b14      4155           push r13
0x00004b16      4154           push r12
0x00004b18      4d89cc         mov r12, r9
0x00004b1b      55             push rbp
0x00004b1c      53             push rbx
0x00004b1d      4889fd         mov rbp, rdi
0x00004b20      4c89c3         mov rbx, r8
0x00004b23      4883ec28       sub rsp, 0x28
0x00004b27      4885f6         test rsi, rsi
0x00004b2a      0f8418010000   je 0x4c48
0x00004b30      4989d0         mov r8, rdx
0x00004b33      488d15ae1600.  lea rdx, [0x000061e8]                   ; "%s (%s) %s\n"
0x00004b3a      4989c9         mov r9, rcx
0x00004b3d      31c0           xor eax, eax
0x00004b3f      4889f1         mov rcx, rsi
0x00004b42      be01000000     mov esi, 1
0x00004b47      e834caffff     call sym.imp.__fprintf_chk
0x00004b4c      488d35a81600.  lea rsi, [0x000061fb]                   ; "(C)"
0x00004b53      31ff           xor edi, edi
0x00004b55      ba05000000     mov edx, 5
0x00004b5a      e861c8ffff     call sym.imp.dcgettext
0x00004b5f      488d15ba1900.  lea rdx, obj.version_etc_copyright      ; 0x6520 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004b66      4889c1         mov rcx, rax
0x00004b69      41b8e3070000   mov r8d, 0x7e3
0x00004b6f      be01000000     mov esi, 1
0x00004b74      4889ef         mov rdi, rbp
0x00004b77      31c0           xor eax, eax
0x00004b79      e802caffff     call sym.imp.__fprintf_chk
0x00004b7e      488d35031700.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x6288 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004b85      31ff           xor edi, edi
0x00004b87      ba05000000     mov edx, 5
0x00004b8c      e82fc8ffff     call sym.imp.dcgettext
0x00004b91      4889ee         mov rsi, rbp
0x00004b94      4889c7         mov rdi, rax
0x00004b97      e8d4c8ffff     call sym.imp.fputs_unlocked
0x00004b9c      4983fc09       cmp r12, 9
0x00004ba0      0f873a030000   ja 0x4ee0
0x00004ba6      488d153b1900.  lea rdx, [0x000064e8]
0x00004bad      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004bb1      4801d0         add rax, rdx
0x00004bb4      ffe0           jmp rax
0x00004bb6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004bc0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004bc4      488b4310       mov rax, qword [rbx + 0x10]
0x00004bc8      488d35291800.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x63f8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00004bcf      4c8b4308       mov r8, qword [rbx + 8]
0x00004bd3      ba05000000     mov edx, 5
0x00004bd8      31ff           xor edi, edi
0x00004bda      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004bde      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004be2      4c894c2410     mov qword [rsp + 0x10], r9
0x00004be7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004beb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004bef      48890424       mov qword [rsp], rax
0x00004bf3      4c89442408     mov qword [rsp + 8], r8
0x00004bf8      488b1b         mov rbx, qword [rbx]
0x00004bfb      e8c0c7ffff     call sym.imp.dcgettext
0x00004c00      4883ec08       sub rsp, 8
0x00004c04      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00004c09      4889c2         mov rdx, rax
0x00004c0c      4889d9         mov rcx, rbx
0x00004c0f      be01000000     mov esi, 1
0x00004c14      4889ef         mov rdi, rbp
0x00004c17      31c0           xor eax, eax
0x00004c19      4151           push r9
0x00004c1b      4155           push r13
0x00004c1d      4154           push r12
0x00004c1f      4157           push r15
0x00004c21      4156           push r14
0x00004c23      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004c28      4c8b442438     mov r8, qword [rsp + 0x38]
0x00004c2d      e84ec9ffff     call sym.imp.__fprintf_chk
0x00004c32      4883c430       add rsp, 0x30
0x00004c36      4883c428       add rsp, 0x28
0x00004c3a      5b             pop rbx
0x00004c3b      5d             pop rbp
0x00004c3c      415c           pop r12
0x00004c3e      415d           pop r13
0x00004c40      415e           pop r14
0x00004c42      415f           pop r15
0x00004c44      c3             ret
0x00004c45      0f1f00         nop dword [rax]
0x00004c48      4989c8         mov r8, rcx
0x00004c4b      4889d1         mov rcx, rdx
0x00004c4e      488d159f1500.  lea rdx, str.s__s                       ; 0x61f4 ; "%s %s\n"
0x00004c55      be01000000     mov esi, 1
0x00004c5a      31c0           xor eax, eax
0x00004c5c      e81fc9ffff     call sym.imp.__fprintf_chk
0x00004c61      e9e6feffff     jmp 0x4b4c
0x00004c66      662e0f1f8400.  nop word cs:[rax + rax]
0x00004c70      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004c74      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004c78      488d35a91700.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x6428 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00004c7f      488b4310       mov rax, qword [rbx + 0x10]
0x00004c83      4c8b4308       mov r8, qword [rbx + 8]
0x00004c87      ba05000000     mov edx, 5
0x00004c8c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004c90      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004c94      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004c98      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004c9c      488b1b         mov rbx, qword [rbx]
0x00004c9f      4c89542418     mov qword [rsp + 0x18], r10
0x00004ca4      4c894c2410     mov qword [rsp + 0x10], r9
0x00004ca9      48890424       mov qword [rsp], rax
0x00004cad      4c89442408     mov qword [rsp + 8], r8
0x00004cb2      31ff           xor edi, edi
0x00004cb4      e807c7ffff     call sym.imp.dcgettext
0x00004cb9      4c8b542418     mov r10, qword [rsp + 0x18]
0x00004cbe      4152           push r10
0x00004cc0      e93fffffff     jmp 0x4c04
0x00004cc5      0f1f00         nop dword [rax]
0x00004cc8      488b1b         mov rbx, qword [rbx]
0x00004ccb      488d352d1500.  lea rsi, str.Written_by__s.             ; 0x61ff ; "Written by %s.\n"
0x00004cd2      ba05000000     mov edx, 5
0x00004cd7      31ff           xor edi, edi
0x00004cd9      e8e2c6ffff     call sym.imp.dcgettext
0x00004cde      4883c428       add rsp, 0x28
0x00004ce2      4889d9         mov rcx, rbx
0x00004ce5      4889ef         mov rdi, rbp
0x00004ce8      5b             pop rbx
0x00004ce9      5d             pop rbp
0x00004cea      415c           pop r12
0x00004cec      415d           pop r13
0x00004cee      415e           pop r14
0x00004cf0      415f           pop r15
0x00004cf2      4889c2         mov rdx, rax
0x00004cf5      be01000000     mov esi, 1
0x00004cfa      31c0           xor eax, eax
0x00004cfc      e97fc8ffff     jmp sym.imp.__fprintf_chk
0x00004d01      0f1f80000000.  nop dword [rax]
0x00004d08      4c8b6308       mov r12, qword [rbx + 8]
0x00004d0c      488d35fc1400.  lea rsi, str.Written_by__s_and__s.      ; 0x620f ; "Written by %s and %s.\n"
0x00004d13      488b1b         mov rbx, qword [rbx]
0x00004d16      ba05000000     mov edx, 5
0x00004d1b      31ff           xor edi, edi
0x00004d1d      e89ec6ffff     call sym.imp.dcgettext
0x00004d22      4883c428       add rsp, 0x28
0x00004d26      4d89e0         mov r8, r12
0x00004d29      4889d9         mov rcx, rbx
0x00004d2c      4889ef         mov rdi, rbp
0x00004d2f      4889c2         mov rdx, rax
0x00004d32      be01000000     mov esi, 1
0x00004d37      5b             pop rbx
0x00004d38      5d             pop rbp
0x00004d39      415c           pop r12
0x00004d3b      415d           pop r13
0x00004d3d      415e           pop r14
0x00004d3f      415f           pop r15
0x00004d41      31c0           xor eax, eax
0x00004d43      e938c8ffff     jmp sym.imp.__fprintf_chk
0x00004d48      0f1f84000000.  nop dword [rax + rax]
0x00004d50      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004d54      4c8b6308       mov r12, qword [rbx + 8]
0x00004d58      488d35c71400.  lea rsi, str.Written_by__s___s__and__s. ; 0x6226 ; "Written by %s, %s, and %s.\n"
0x00004d5f      488b1b         mov rbx, qword [rbx]
0x00004d62      ba05000000     mov edx, 5
0x00004d67      31ff           xor edi, edi
0x00004d69      e852c6ffff     call sym.imp.dcgettext
0x00004d6e      4883c428       add rsp, 0x28
0x00004d72      4d89e9         mov r9, r13
0x00004d75      4d89e0         mov r8, r12
0x00004d78      4889d9         mov rcx, rbx
0x00004d7b      4889ef         mov rdi, rbp
0x00004d7e      4889c2         mov rdx, rax
0x00004d81      5b             pop rbx
0x00004d82      5d             pop rbp
0x00004d83      415c           pop r12
0x00004d85      415d           pop r13
0x00004d87      415e           pop r14
0x00004d89      415f           pop r15
0x00004d8b      be01000000     mov esi, 1
0x00004d90      31c0           xor eax, eax
0x00004d92      e9e9c7ffff     jmp sym.imp.__fprintf_chk
0x00004d97      660f1f840000.  nop word [rax + rax]
0x00004da0      488d35b11500.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x6358 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004da7      ba05000000     mov edx, 5
0x00004dac      31ff           xor edi, edi
0x00004dae      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004db2      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004db6      4c8b6308       mov r12, qword [rbx + 8]
0x00004dba      488b1b         mov rbx, qword [rbx]
0x00004dbd      e8fec5ffff     call sym.imp.dcgettext
0x00004dc2      4883ec08       sub rsp, 8
0x00004dc6      4156           push r14
0x00004dc8      4889c2         mov rdx, rax
0x00004dcb      4d89e9         mov r9, r13
0x00004dce      4d89e0         mov r8, r12
0x00004dd1      4889d9         mov rcx, rbx
0x00004dd4      4889ef         mov rdi, rbp
0x00004dd7      be01000000     mov esi, 1
0x00004ddc      31c0           xor eax, eax
0x00004dde      e89dc7ffff     call sym.imp.__fprintf_chk
0x00004de3      58             pop rax
0x00004de4      5a             pop rdx
0x00004de5      4883c428       add rsp, 0x28
0x00004de9      5b             pop rbx
0x00004dea      5d             pop rbp
0x00004deb      415c           pop r12
0x00004ded      415d           pop r13
0x00004def      415e           pop r14
0x00004df1      415f           pop r15
0x00004df3      c3             ret
0x00004df4      0f1f4000       nop dword [rax]
0x00004df8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004dfc      488d35751500.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x6378 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00004e03      ba05000000     mov edx, 5
0x00004e08      31ff           xor edi, edi
0x00004e0a      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004e0e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004e12      4c8b6308       mov r12, qword [rbx + 8]
0x00004e16      488b1b         mov rbx, qword [rbx]
0x00004e19      e8a2c5ffff     call sym.imp.dcgettext
0x00004e1e      4157           push r15
0x00004e20      eba4           jmp 0x4dc6
0x00004e22      660f1f440000   nop word [rax + rax]
0x00004e28      4c8b4308       mov r8, qword [rbx + 8]
0x00004e2c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004e30      488d35691500.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x63a0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00004e37      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004e3b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004e3f      ba05000000     mov edx, 5
0x00004e44      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004e48      31ff           xor edi, edi
0x00004e4a      488b1b         mov rbx, qword [rbx]
0x00004e4d      4c890424       mov qword [rsp], r8
0x00004e51      e86ac5ffff     call sym.imp.dcgettext
0x00004e56      4883ec08       sub rsp, 8
0x00004e5a      4d89e9         mov r9, r13
0x00004e5d      4154           push r12
0x00004e5f      4157           push r15
0x00004e61      4156           push r14
0x00004e63      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004e68      4889d9         mov rcx, rbx
0x00004e6b      4889c2         mov rdx, rax
0x00004e6e      4889ef         mov rdi, rbp
0x00004e71      be01000000     mov esi, 1
0x00004e76      31c0           xor eax, eax
0x00004e78      e803c7ffff     call sym.imp.__fprintf_chk
0x00004e7d      4883c420       add rsp, 0x20
0x00004e81      4883c428       add rsp, 0x28
0x00004e85      5b             pop rbx
0x00004e86      5d             pop rbp
0x00004e87      415c           pop r12
0x00004e89      415d           pop r13
0x00004e8b      415e           pop r14
0x00004e8d      415f           pop r15
0x00004e8f      c3             ret
0x00004e90      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00004e94      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004e98      488d35291500.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x63c8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00004e9f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004ea3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004ea7      ba05000000     mov edx, 5
0x00004eac      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004eb0      4c8b4308       mov r8, qword [rbx + 8]
0x00004eb4      31ff           xor edi, edi
0x00004eb6      4c894c2408     mov qword [rsp + 8], r9
0x00004ebb      488b1b         mov rbx, qword [rbx]
0x00004ebe      4c890424       mov qword [rsp], r8
0x00004ec2      e8f9c4ffff     call sym.imp.dcgettext
0x00004ec7      4155           push r13
0x00004ec9      4154           push r12
0x00004ecb      4157           push r15
0x00004ecd      4156           push r14
0x00004ecf      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004ed4      eb8d           jmp 0x4e63
0x00004ed6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004ee0      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004ee4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004ee8      ba05000000     mov edx, 5
0x00004eed      488b4310       mov rax, qword [rbx + 0x10]
0x00004ef1      4c8b4308       mov r8, qword [rbx + 8]
0x00004ef5      488d35641500.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x6460 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00004efc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004f00      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004f04      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004f08      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004f0c      4c89542418     mov qword [rsp + 0x18], r10
0x00004f11      4c894c2410     mov qword [rsp + 0x10], r9
0x00004f16      48890424       mov qword [rsp], rax
0x00004f1a      4c89442408     mov qword [rsp + 8], r8
0x00004f1f      488b1b         mov rbx, qword [rbx]
0x00004f22      e98bfdffff     jmp 0x4cb2
0x00004f27      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00004f30      4531c9         xor r9d, r9d
0x00004f33      49833800       cmp qword [r8], 0
0x00004f37      7412           je 0x4f4b
0x00004f39      0f1f80000000.  nop dword [rax]
0x00004f40      4983c101       add r9, 1
0x00004f44      4b833cc800     cmp qword [r8 + r9*8], 0
0x00004f49      75f5           jne 0x4f40
0x00004f4b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00004f50      4883ec68       sub rsp, 0x68
0x00004f54      4d89c2         mov r10, r8
0x00004f57      4531c9         xor r9d, r9d
0x00004f5a      64488b042528.  mov rax, qword fs:[0x28]
0x00004f63      4889442458     mov qword [rsp + 0x58], rax
0x00004f68      31c0           xor eax, eax
0x00004f6a      4989e0         mov r8, rsp
0x00004f6d      0f1f00         nop dword [rax]
0x00004f70      418b02         mov eax, dword [r10]
0x00004f73      83f82f         cmp eax, 0x2f
0x00004f76      7742           ja 0x4fba
0x00004f78      4189c3         mov r11d, eax
0x00004f7b      4d035a10       add r11, qword [r10 + 0x10]
0x00004f7f      83c008         add eax, 8
0x00004f82      418902         mov dword [r10], eax
0x00004f85      498b03         mov rax, qword [r11]
0x00004f88      4885c0         test rax, rax
0x00004f8b      4b8904c8       mov qword [r8 + r9*8], rax
0x00004f8f      740a           je 0x4f9b
0x00004f91      4983c101       add r9, 1
0x00004f95      4983f90a       cmp r9, 0xa
0x00004f99      75d5           jne 0x4f70
0x00004f9b      e870fbffff     call sym.version_etc_arn
0x00004fa0      488b442458     mov rax, qword [rsp + 0x58]
0x00004fa5      644833042528.  xor rax, qword fs:[0x28]
0x00004fae      7505           jne 0x4fb5
0x00004fb0      4883c468       add rsp, 0x68
0x00004fb4      c3             ret
0x00004fb5      e836c4ffff     call sym.imp.__stack_chk_fail
0x00004fba      4d8b5a08       mov r11, qword [r10 + 8]
0x00004fbe      498d4308       lea rax, [r11 + 8]
0x00004fc2      49894208       mov qword [r10 + 8], rax
0x00004fc6      ebbd           jmp 0x4f85
0x00004fc8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00004fd0      55             push rbp
0x00004fd1      53             push rbx
0x00004fd2      41ba20000000   mov r10d, 0x20                          ; "@"
0x00004fd8      4531db         xor r11d, r11d
0x00004fdb      4881ecb80000.  sub rsp, 0xb8
0x00004fe2      64488b042528.  mov rax, qword fs:[0x28]
0x00004feb      4889442478     mov qword [rsp + 0x78], rax
0x00004ff0      31c0           xor eax, eax
0x00004ff2      488d8424d000.  lea rax, [rsp + 0xd0]
0x00004ffa      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00005002      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000500a      4c8d442420     lea r8, [rsp + 0x20]
0x0000500f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00005017      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000501f      4889442410     mov qword [rsp + 0x10], rax
0x00005024      488d84248000.  lea rax, [rsp + 0x80]
0x0000502c      4531c9         xor r9d, r9d
0x0000502f      4889442418     mov qword [rsp + 0x18], rax
0x00005034      4889c5         mov rbp, rax
0x00005037      660f1f840000.  nop word [rax + rax]
0x00005040      4183fa2f       cmp r10d, 0x2f
0x00005044      7756           ja 0x509c
0x00005046      4489d0         mov eax, r10d
0x00005049      41bb01000000   mov r11d, 1
0x0000504f      4183c208       add r10d, 8
0x00005053      4801e8         add rax, rbp
0x00005056      488b00         mov rax, qword [rax]
0x00005059      4885c0         test rax, rax
0x0000505c      4b8904c8       mov qword [r8 + r9*8], rax
0x00005060      740a           je 0x506c
0x00005062      4983c101       add r9, 1
0x00005066      4983f90a       cmp r9, 0xa
0x0000506a      75d4           jne 0x5040
0x0000506c      4584db         test r11b, r11b
0x0000506f      7524           jne 0x5095
0x00005071      e89afaffff     call sym.version_etc_arn
0x00005076      488b442478     mov rax, qword [rsp + 0x78]
0x0000507b      644833042528.  xor rax, qword fs:[0x28]
0x00005084      750a           jne 0x5090
0x00005086      4881c4b80000.  add rsp, 0xb8
0x0000508d      5b             pop rbx
0x0000508e      5d             pop rbp
0x0000508f      c3             ret
0x00005090      e85bc3ffff     call sym.imp.__stack_chk_fail
0x00005095      4489542408     mov dword [rsp + 8], r10d
0x0000509a      ebd5           jmp 0x5071
0x0000509c      4889d8         mov rax, rbx
0x0000509f      4883c308       add rbx, 8
0x000050a3      ebb1           jmp 0x5056
0x000050a5      90             nop
0x000050a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x000050b0      53             push rbx
0x000050b1      488d358a1100.  lea rsi, str.Report_bugs_to:__s         ; 0x6242 ; "\nReport bugs to: %s\n"
0x000050b8      ba05000000     mov edx, 5
0x000050bd      31ff           xor edi, edi
0x000050bf      e8fcc2ffff     call sym.imp.dcgettext
0x000050c4      488d158c1100.  lea rdx, str.bug_coreutils_gnu.org      ; 0x6257 ; "bug-coreutils@gnu.org"
0x000050cb      4889c6         mov rsi, rax
0x000050ce      bf01000000     mov edi, 1
0x000050d3      31c0           xor eax, eax
0x000050d5      e836c4ffff     call sym.imp.__printf_chk
0x000050da      488d358c1100.  lea rsi, str.s_home_page:___s           ; 0x626d ; "%s home page: <%s>\n"
0x000050e1      ba05000000     mov edx, 5
0x000050e6      31ff           xor edi, edi
0x000050e8      e8d3c2ffff     call sym.imp.dcgettext
0x000050ed      488d0dbc0a00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5bb0 ; "https://www.gnu.org/software/coreutils/"
0x000050f4      488d15d40600.  lea rdx, str.GNU_coreutils              ; 0x57cf ; "GNU coreutils"
0x000050fb      4889c6         mov rsi, rax
0x000050fe      bf01000000     mov edi, 1
0x00005103      31c0           xor eax, eax
0x00005105      e806c4ffff     call sym.imp.__printf_chk
0x0000510a      488b1d772f20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00005111      488d35881300.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x64a0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00005118      31ff           xor edi, edi
0x0000511a      ba05000000     mov edx, 5
0x0000511f      e89cc2ffff     call sym.imp.dcgettext
0x00005124      4889de         mov rsi, rbx
0x00005127      4889c7         mov rdi, rax
0x0000512a      5b             pop rbx
0x0000512b      e940c3ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00005130      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00005131      4889fb         mov rbx, rdi
0x00005134      e877c3ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00005139      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000513c      7505           jne 0x5143
0x0000513e      4885db         test rbx, rbx
0x00005141      7502           jne 0x5145
0x00005143      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00005144      c3             ret
0x00005145      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000514a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00005150      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00005153      48f7e6         mul rsi
0x00005156      4889c7         mov rdi, rax
0x00005159      0f90c0         seto al
0x0000515c      4885ff         test rdi, rdi
0x0000515f      780a           js 0x516b
0x00005161      0fb6c0         movzx eax, al
0x00005164      4885c0         test rax, rax
0x00005167      7502           jne 0x516b
0x00005169      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000516b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000516f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00005174      6690           nop
0x00005176      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00005180      ebae           jmp sym.xmalloc
0x00005182      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00005186      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00005190      4885f6         test rsi, rsi
0x00005193      53             push rbx
0x00005194      4889f3         mov rbx, rsi
0x00005197      7505           jne 0x519e
0x00005199      4885ff         test rdi, rdi
0x0000519c      751a           jne 0x51b8
0x0000519e      4889de         mov rsi, rbx
0x000051a1      e84ac3ffff     call sym.imp.realloc
0x000051a6      4885c0         test rax, rax
0x000051a9      7505           jne 0x51b0
0x000051ab      4885db         test rbx, rbx
0x000051ae      7511           jne 0x51c1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x000051b0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x000051b1      c3             ret
0x000051b2      660f1f440000   nop word [rax + rax]
0x000051b8      e853c1ffff     call sym.imp.free
0x000051bd      31c0           xor eax, eax
0x000051bf      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x000051c0      c3             ret
0x000051c1      e8ba010000     call sym.xalloc_die
0x000051c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x000051d0      4889f0         mov rax, rsi
0x000051d3      48f7e2         mul rdx
0x000051d6      4889c6         mov rsi, rax
0x000051d9      0f90c0         seto al
0x000051dc      4885f6         test rsi, rsi
0x000051df      780a           js 0x51eb
0x000051e1      0fb6c0         movzx eax, al
0x000051e4      4885c0         test rax, rax
0x000051e7      7502           jne 0x51eb
0x000051e9      eba5           jmp sym.xrealloc
0x000051eb      4883ec08       sub rsp, 8
0x000051ef      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x000051f4      6690           nop
0x000051f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005200      4885ff         test rdi, rdi
0x00005203      4989d1         mov r9, rdx
0x00005206      488b0e         mov rcx, qword [rsi]
0x00005209      7435           je 0x5240
0x0000520b      31d2           xor edx, edx
0x0000520d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005217      49f7f1         div r9
0x0000521a      4839c8         cmp rax, rcx
0x0000521d      763c           jbe 0x525b
0x0000521f      4889c8         mov rax, rcx
0x00005222      48d1e8         shr rax, 1
0x00005225      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000522a      48890e         mov qword [rsi], rcx
0x0000522d      490fafc9       imul rcx, r9
0x00005231      4889ce         mov rsi, rcx
0x00005234      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00005239      0f1f80000000.  nop dword [rax]
0x00005240      4885c9         test rcx, rcx
0x00005243      7423           je 0x5268
0x00005245      4889c8         mov rax, rcx
0x00005248      49f7e1         mul r9
0x0000524b      0f90c2         seto dl
0x0000524e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00005251      0fb6d2         movzx edx, dl
0x00005254      7805           js 0x525b
0x00005256      4885d2         test rdx, rdx
0x00005259      74cf           je 0x522a
0x0000525b      4883ec08       sub rsp, 8
0x0000525f      e81c010000     call sym.xalloc_die
0x00005264      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005268      31d2           xor edx, edx
0x0000526a      b880000000     mov eax, 0x80
0x0000526f      4531c0         xor r8d, r8d
0x00005272      49f7f1         div r9
0x00005275      4885c0         test rax, rax
0x00005278      410f94c0       sete r8b
0x0000527c      498d0c00       lea rcx, [r8 + rax]
0x00005280      ebc3           jmp 0x5245
0x00005282      0f1f4000       nop dword [rax]
0x00005286      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00005290      4885ff         test rdi, rdi
0x00005293      488b06         mov rax, qword [rsi]
0x00005296      7428           je 0x52c0
0x00005298      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x000052a2      4839d0         cmp rax, rdx
0x000052a5      772a           ja 0x52d1
0x000052a7      4889c2         mov rdx, rax
0x000052aa      48d1ea         shr rdx, 1
0x000052ad      488d440201     lea rax, [rdx + rax + 1]
0x000052b2      488906         mov qword [rsi], rax
0x000052b5      4889c6         mov rsi, rax
0x000052b8      e9d3feffff     jmp sym.xrealloc
0x000052bd      0f1f00         nop dword [rax]
0x000052c0      4885c0         test rax, rax
0x000052c3      ba80000000     mov edx, 0x80
0x000052c8      480f44c2       cmove rax, rdx
0x000052cc      4885c0         test rax, rax
0x000052cf      79e1           jns 0x52b2
0x000052d1      4883ec08       sub rsp, 8
0x000052d5      e8a6000000     call sym.xalloc_die
0x000052da      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x000052e0      53             push rbx
0x000052e1      4889fb         mov rbx, rdi
0x000052e4      e847feffff     call sym.xmalloc
0x000052e9      4889da         mov rdx, rbx
0x000052ec      31f6           xor esi, esi
0x000052ee      4889c7         mov rdi, rax
0x000052f1      5b             pop rbx
0x000052f2      e959c1ffff     jmp sym.imp.memset
0x000052f7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005300      4889f8         mov rax, rdi
0x00005303      4883ec08       sub rsp, 8
0x00005307      48f7e6         mul rsi
0x0000530a      0f90c2         seto dl
0x0000530d      4885c0         test rax, rax
0x00005310      7817           js 0x5329
0x00005312      0fb6d2         movzx edx, dl
0x00005315      4885d2         test rdx, rdx
0x00005318      750f           jne 0x5329
0x0000531a      e861c1ffff     call sym.imp.calloc
0x0000531f      4885c0         test rax, rax
0x00005322      7405           je 0x5329
0x00005324      4883c408       add rsp, 8
0x00005328      c3             ret
0x00005329      e852000000     call sym.xalloc_die
0x0000532e      6690           nop
;-- xmemdup:
0x00005330      55             push rbp
0x00005331      53             push rbx
0x00005332      4889fd         mov rbp, rdi
0x00005335      4889f7         mov rdi, rsi
0x00005338      4889f3         mov rbx, rsi
0x0000533b      4883ec08       sub rsp, 8
0x0000533f      e8ecfdffff     call sym.xmalloc
0x00005344      4883c408       add rsp, 8
0x00005348      4889da         mov rdx, rbx
0x0000534b      4889ee         mov rsi, rbp
0x0000534e      5b             pop rbx
0x0000534f      5d             pop rbp
0x00005350      4889c7         mov rdi, rax
0x00005353      e938c1ffff     jmp sym.imp.memcpy
0x00005358      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005360      53             push rbx
0x00005361      4889fb         mov rbx, rdi
0x00005364      e877c0ffff     call sym.imp.strlen
0x00005369      4889df         mov rdi, rbx
0x0000536c      488d7001       lea rsi, [rax + 1]
0x00005370      5b             pop rbx
0x00005371      ebbd           jmp sym.xmemdup
0x00005373      662e0f1f8400.  nop word cs:[rax + rax]
0x0000537d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005380      488d35c81100.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x654f ; "memory exhausted"
0x00005387      4883ec08       sub rsp, 8
0x0000538b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005390      31ff           xor edi, edi
0x00005392      e829c0ffff     call sym.imp.dcgettext
0x00005397      8b3d732c2000   mov edi, dword [obj.exit_failure]       ; [0x208010:4]=1
0x0000539d      488d15dc0800.  lea rdx, [0x00005c80]                   ; "%s"
0x000053a4      4889c1         mov rcx, rax
0x000053a7      31f6           xor esi, esi
0x000053a9      31c0           xor eax, eax
0x000053ab      e880c1ffff     call sym.imp.error
0x000053b0      e86bbfffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x000053b5      662e0f1f8400.  nop word cs:[rax + rax]
0x000053bf      90             nop
;-- rpl_mbrtowc:
0x000053c0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x000053c2      4154           push r12
0x000053c4      4989f5         mov r13, rsi
0x000053c7      55             push rbp
0x000053c8      53             push rbx
0x000053c9      4889fb         mov rbx, rdi
0x000053cc      4989d4         mov r12, rdx
0x000053cf      4883ec18       sub rsp, 0x18
0x000053d3      64488b042528.  mov rax, qword fs:[0x28]
0x000053dc      4889442408     mov qword [rsp + 8], rax
0x000053e1      31c0           xor eax, eax
0x000053e3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x000053e8      4885ff         test rdi, rdi
0x000053eb      480f44d8       cmove rbx, rax
0x000053ef      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000053f2      e819c0ffff     call sym.imp.mbrtowc
0x000053f7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000053fb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000053fe      7620           jbe 0x5420                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005400      4d85e4         test r12, r12
0x00005403      741b           je 0x5420
0x00005405      31ff           xor edi, edi
0x00005407      e8c4000000     call sym.hard_locale
0x0000540c      84c0           test al, al
0x0000540e      7510           jne 0x5420
0x00005410      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005415      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000541a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000541c      0f1f4000       nop dword [rax]
0x00005420      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005425      644833142528.  xor rdx, qword fs:[0x28]
0x0000542e      4889e8         mov rax, rbp
0x00005431      750b           jne 0x543e
0x00005433      4883c418       add rsp, 0x18
0x00005437      5b             pop rbx
0x00005438      5d             pop rbp
0x00005439      415c           pop r12
0x0000543b      415d           pop r13
0x0000543d      c3             ret
0x0000543e      e8adbfffff     call sym.imp.__stack_chk_fail
0x00005443      662e0f1f8400.  nop word cs:[rax + rax]
0x0000544d      0f1f00         nop dword [rax]
;-- close_stream:
0x00005450      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00005452      55             push rbp
0x00005453      4889fd         mov rbp, rdi
0x00005456      53             push rbx
0x00005457      e804bfffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000545c      8b5d00         mov ebx, dword [rbp]
0x0000545f      4889ef         mov rdi, rbp
0x00005462      4989c4         mov r12, rax
0x00005465      e806010000     call sym.rpl_fclose
0x0000546a      83e320         and ebx, 0x20                           ; "@"
0x0000546d      85db           test ebx, ebx
0x0000546f      7517           jne 0x5488
0x00005471      85c0           test eax, eax
0x00005473      740a           je 0x547f                               ; stdio.h:-186
0x00005475      4d85e4         test r12, r12                           ; stdio.h:-178
0x00005478      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000547d      7439           je 0x54b8
0x0000547f      5b             pop rbx
0x00005480      5d             pop rbp
0x00005481      415c           pop r12
0x00005483      c3             ret
0x00005484      0f1f4000       nop dword [rax]
0x00005488      85c0           test eax, eax
0x0000548a      751c           jne 0x54a8
0x0000548c      e89fbeffff     call sym.imp.__errno_location
0x00005491      c70000000000   mov dword [rax], 0
0x00005497      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000549c      5b             pop rbx
0x0000549d      5d             pop rbp
0x0000549e      415c           pop r12
0x000054a0      c3             ret
0x000054a1      0f1f80000000.  nop dword [rax]
0x000054a8      5b             pop rbx
0x000054a9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000054ae      5d             pop rbp                                 ; stdio.h:-186
0x000054af      415c           pop r12
0x000054b1      c3             ret
0x000054b2      660f1f440000   nop word [rax + rax]
0x000054b8      e873beffff     call sym.imp.__errno_location
0x000054bd      833809         cmp dword [rax], 9
0x000054c0      5b             pop rbx
0x000054c1      5d             pop rbp
0x000054c2      415c           pop r12                                 ; stdio.h:-178
0x000054c4      0f95c0         setne al
0x000054c7      0fb6c0         movzx eax, al
0x000054ca      f7d8           neg eax
0x000054cc      c3             ret
0x000054cd      0f1f00         nop dword [rax]
;-- hard_locale:
0x000054d0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x000054d4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x000054d6      e825c0ffff     call sym.imp.setlocale
0x000054db      4889c2         mov rdx, rax
0x000054de      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x000054e3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x000054e6      741d           je 0x5505
0x000054e8      488d3d711000.  lea rdi, [0x00006560]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x000054ef      b902000000     mov ecx, 2
0x000054f4      4889d6         mov rsi, rdx
0x000054f7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000054f9      0f97c1         seta cl
0x000054fc      80d900         sbb cl, 0
0x000054ff      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00005501      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00005503      750b           jne 0x5510
0x00005505      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005509      c3             ret
0x0000550a      660f1f440000   nop word [rax + rax]
0x00005510      488d3d4b1000.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x6562 ; "POSIX"
0x00005517      b906000000     mov ecx, 6
0x0000551c      4889d6         mov rsi, rdx
0x0000551f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005521      0f97c0         seta al
0x00005524      1c00           sbb al, 0
0x00005526      84c0           test al, al
0x00005528      0f95c0         setne al
0x0000552b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000552f      c3             ret
;-- locale_charset:
0x00005530      4883ec08       sub rsp, 8
0x00005534      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00005539      e892bfffff     call sym.imp.nl_langinfo
0x0000553e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00005541      741d           je 0x5560
0x00005543      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00005546      488d151b1000.  lea rdx, str.ASCII                      ; 0x6568 ; "ASCII"
0x0000554d      480f44c2       cmove rax, rdx
0x00005551      4883c408       add rsp, 8
0x00005555      c3             ret
0x00005556      662e0f1f8400.  nop word cs:[rax + rax]
0x00005560      488d05011000.  lea rax, str.ASCII                      ; 0x6568 ; "ASCII"
0x00005567      4883c408       add rsp, 8
0x0000556b      c3             ret
0x0000556c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00005570      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00005572      55             push rbp
0x00005573      53             push rbx
0x00005574      4889fb         mov rbx, rdi
0x00005577      e824bfffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000557c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000557e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00005581      7854           js 0x55d7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00005583      e858bfffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00005588      85c0           test eax, eax
0x0000558a      752c           jne 0x55b8
0x0000558c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000558f      e85c000000     call sym.rpl_fflush
0x00005594      85c0           test eax, eax
0x00005596      743c           je 0x55d4
0x00005598      e893bdffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000559d      448b20         mov r12d, dword [rax]
0x000055a0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000055a3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x000055a6      e8f5bdffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x000055ab      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x000055ae      7530           jne 0x55e0
0x000055b0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000055b1      5d             pop rbp
0x000055b2      415c           pop r12
0x000055b4      c3             ret
0x000055b5      0f1f00         nop dword [rax]
0x000055b8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x000055bb      e8e0beffff     call sym.imp.fileno
0x000055c0      31f6           xor esi, esi
0x000055c2      ba01000000     mov edx, 1
0x000055c7      89c7           mov edi, eax
0x000055c9      e862beffff     call sym.imp.lseek
0x000055ce      4883f8ff       cmp rax, 0xffffffffffffffff
0x000055d2      75b8           jne 0x558c
0x000055d4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000055d7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000055d8      5d             pop rbp
0x000055d9      415c           pop r12
0x000055db      e9c0bdffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x000055e0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x000055e4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x000055e9      ebc5           jmp 0x55b0
0x000055eb      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x000055f0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x000055f3      53             push rbx
0x000055f4      4889fb         mov rbx, rdi
0x000055f7      7411           je 0x560a                               ; ../coreutils-8.31/lib/fflush.c:150
0x000055f9      e8e2beffff     call sym.imp.__freading
0x000055fe      85c0           test eax, eax
0x00005600      7408           je 0x560a
0x00005602      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00005608      750e           jne 0x5618
0x0000560a      4889df         mov rdi, rbx
0x0000560d      5b             pop rbx
0x0000560e      e9adbeffff     jmp sym.imp.fflush
0x00005613      0f1f440000     nop dword [rax + rax]
0x00005618      4889df         mov rdi, rbx
0x0000561b      ba01000000     mov edx, 1
0x00005620      31f6           xor esi, esi
0x00005622      e809000000     call sym.rpl_fseeko
0x00005627      4889df         mov rdi, rbx
0x0000562a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000562b      e990beffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00005630      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005634      48394710       cmp qword [rdi + 0x10], rax
0x00005638      7406           je 0x5640                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000563a      e901bfffff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x0000563f      90             nop
0x00005640      488b4720       mov rax, qword [rdi + 0x20]
0x00005644      48394728       cmp qword [rdi + 0x28], rax
0x00005648      75f0           jne 0x563a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000564a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000564f      75e9           jne 0x563a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005651      4154           push r12
0x00005653      55             push rbp
0x00005654      4189d4         mov r12d, edx
0x00005657      53             push rbx
0x00005658      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000565b      4889fb         mov rbx, rdi
0x0000565e      e83dbeffff     call sym.imp.fileno
0x00005663      4489e2         mov edx, r12d
0x00005666      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00005669      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x0000566b      e8c0bdffff     call sym.imp.lseek
0x00005670      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005674      740c           je 0x5682
0x00005676      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005679      488983900000.  mov qword [rbx + 0x90], rax
0x00005680      31c0           xor eax, eax
0x00005682      5b             pop rbx                                 ; /sys_errlist.h:19
0x00005683      5d             pop rbp
0x00005684      415c           pop r12
0x00005686      c3             ret
0x00005687      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x00005690      4157           push r15
0x00005692      4156           push r14
0x00005694      4989d7         mov r15, rdx
0x00005697      4155           push r13
0x00005699      4154           push r12
0x0000569b      4c8d25ee2420.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x207b90
0x000056a2      55             push rbp
0x000056a3      488d2dee2420.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x207b98 ; "P!"
0x000056aa      53             push rbx
0x000056ab      4189fd         mov r13d, edi
0x000056ae      4989f6         mov r14, rsi
0x000056b1      4c29e5         sub rbp, r12
0x000056b4      4883ec08       sub rsp, 8
0x000056b8      48c1fd03       sar rbp, 3
0x000056bc      e80fbcffff     call sym._init
0x000056c1      4885ed         test rbp, rbp
0x000056c4      7420           je 0x56e6
0x000056c6      31db           xor ebx, ebx
0x000056c8      0f1f84000000.  nop dword [rax + rax]
0x000056d0      4c89fa         mov rdx, r15
0x000056d3      4c89f6         mov rsi, r14
0x000056d6      4489ef         mov edi, r13d
0x000056d9      41ff14dc       call qword [r12 + rbx*8]
0x000056dd      4883c301       add rbx, 1
0x000056e1      4839dd         cmp rbp, rbx
0x000056e4      75ea           jne 0x56d0
0x000056e6      4883c408       add rsp, 8
0x000056ea      5b             pop rbx
0x000056eb      5d             pop rbp
0x000056ec      415c           pop r12
0x000056ee      415d           pop r13
0x000056f0      415e           pop r14
0x000056f2      415f           pop r15
0x000056f4      c3             ret
0x000056f5      90             nop
0x000056f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00005700      f3c3           ret
0x00005702      662e0f1f8400.  nop word cs:[rax + rax]
0x0000570c      0f1f4000       nop dword [rax]
;-- atexit:
0x00005710      488b15f12820.  mov rdx, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x00005717      31f6           xor esi, esi
0x00005719      e932beffff     jmp sym.imp.__cxa_atexit
0x0000571e      0000           add byte [rax], al
