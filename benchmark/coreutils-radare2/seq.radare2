;-- section..plt:
;-- .plt:
0x00001570      ff359a982000   push qword [0x0020ae10]                 ; [12] -r-x section size 880 named .plt
0x00001576      ff259c982000   jmp qword [0x0020ae18]                  ; [0x20ae18:8]=0
0x0000157c      0f1f4000       nop dword [rax]
;-- imp.__snprintf_chk:
0x00001580      ff259a982000   jmp qword [reloc.__snprintf_chk]        ; [0x20ae20:8]=0x1586
0x00001586      6800000000     push 0
0x0000158b      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x00001590      ff2592982000   jmp qword [reloc.free]                  ; [0x20ae28:8]=0x1596
0x00001596      6801000000     push 1
0x0000159b      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x000015a0      ff258a982000   jmp qword [reloc.abort]                 ; [0x20ae30:8]=0x15a6
0x000015a6      6802000000     push 2
0x000015ab      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000015b0      ff2582982000   jmp qword [reloc.__errno_location]      ; [0x20ae38:8]=0x15b6
0x000015b6      6803000000     push 3
0x000015bb      e9b0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000015c0      ff257a982000   jmp qword [reloc.strncmp]               ; [0x20ae40:8]=0x15c6
0x000015c6      6804000000     push 4
0x000015cb      e9a0ffffff     jmp sym..plt
;-- imp._exit:
0x000015d0      ff2572982000   jmp qword [reloc._exit]                 ; [0x20ae48:8]=0x15d6
0x000015d6      6805000000     push 5
0x000015db      e990ffffff     jmp sym..plt
;-- imp.strcpy:
0x000015e0      ff256a982000   jmp qword [reloc.strcpy]                ; [0x20ae50:8]=0x15e6
0x000015e6      6806000000     push 6
0x000015eb      e980ffffff     jmp sym..plt
;-- imp.__fpending:
0x000015f0      ff2562982000   jmp qword [reloc.__fpending]            ; [0x20ae58:8]=0x15f6
0x000015f6      6807000000     push 7
0x000015fb      e970ffffff     jmp sym..plt
;-- imp.clearerr_unlocked:
0x00001600      ff255a982000   jmp qword [reloc.clearerr_unlocked]     ; [0x20ae60:8]=0x1606
0x00001606      6808000000     push 8
0x0000160b      e960ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001610      ff2552982000   jmp qword [reloc.textdomain]            ; [0x20ae68:8]=0x1616
0x00001616      6809000000     push 9
0x0000161b      e950ffffff     jmp sym..plt
;-- imp.fclose:
0x00001620      ff254a982000   jmp qword [reloc.fclose]                ; [0x20ae70:8]=0x1626 ; "&\x16"
0x00001626      680a000000     push 0xa
0x0000162b      e940ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001630      ff2542982000   jmp qword [reloc.bindtextdomain]        ; [0x20ae78:8]=0x1636 ; "6\x16"
0x00001636      680b000000     push 0xb
0x0000163b      e930ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001640      ff253a982000   jmp qword [reloc.dcgettext]             ; [0x20ae80:8]=0x1646 ; "F\x16"
0x00001646      680c000000     push 0xc
0x0000164b      e920ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001650      ff2532982000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20ae88:8]=0x1656 ; "V\x16"
0x00001656      680d000000     push 0xd
0x0000165b      e910ffffff     jmp sym..plt
;-- imp.strlen:
0x00001660      ff252a982000   jmp qword [reloc.strlen]                ; [0x20ae90:8]=0x1666 ; "f\x16"
0x00001666      680e000000     push 0xe
0x0000166b      e900ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001670      ff2522982000   jmp qword [reloc.__stack_chk_fail]      ; [0x20ae98:8]=0x1676 ; "v\x16"
0x00001676      680f000000     push 0xf
0x0000167b      e9f0feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001680      ff251a982000   jmp qword [reloc.getopt_long]           ; [0x20aea0:8]=0x1686
0x00001686      6810000000     push 0x10
0x0000168b      e9e0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001690      ff2512982000   jmp qword [reloc.mbrtowc]               ; [0x20aea8:8]=0x1696
0x00001696      6811000000     push 0x11
0x0000169b      e9d0feffff     jmp sym..plt
;-- imp.strchr:
0x000016a0      ff250a982000   jmp qword [reloc.strchr]                ; [0x20aeb0:8]=0x16a6
0x000016a6      6812000000     push 0x12
0x000016ab      e9c0feffff     jmp sym..plt
;-- imp.newlocale:
0x000016b0      ff2502982000   jmp qword [reloc.newlocale]             ; [0x20aeb8:8]=0x16b6
0x000016b6      6813000000     push 0x13
0x000016bb      e9b0feffff     jmp sym..plt
;-- imp.strrchr:
0x000016c0      ff25fa972000   jmp qword [reloc.strrchr]               ; [0x20aec0:8]=0x16c6
0x000016c6      6814000000     push 0x14
0x000016cb      e9a0feffff     jmp sym..plt
;-- imp.lseek:
0x000016d0      ff25f2972000   jmp qword [reloc.lseek]                 ; [0x20aec8:8]=0x16d6
0x000016d6      6815000000     push 0x15
0x000016db      e990feffff     jmp sym..plt
;-- imp.memset:
0x000016e0      ff25ea972000   jmp qword [reloc.memset]                ; [0x20aed0:8]=0x16e6
0x000016e6      6816000000     push 0x16
0x000016eb      e980feffff     jmp sym..plt
;-- imp.strspn:
0x000016f0      ff25e2972000   jmp qword [reloc.strspn]                ; [0x20aed8:8]=0x16f6
0x000016f6      6817000000     push 0x17
0x000016fb      e970feffff     jmp sym..plt
;-- imp.strcspn:
0x00001700      ff25da972000   jmp qword [reloc.strcspn]               ; [0x20aee0:8]=0x1706
0x00001706      6818000000     push 0x18
0x0000170b      e960feffff     jmp sym..plt
;-- imp.memcmp:
0x00001710      ff25d2972000   jmp qword [reloc.memcmp]                ; [0x20aee8:8]=0x1716
0x00001716      6819000000     push 0x19
0x0000171b      e950feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001720      ff25ca972000   jmp qword [reloc.fputs_unlocked]        ; [0x20aef0:8]=0x1726 ; "&\x17"
0x00001726      681a000000     push 0x1a
0x0000172b      e940feffff     jmp sym..plt
;-- imp.calloc:
0x00001730      ff25c2972000   jmp qword [reloc.calloc]                ; [0x20aef8:8]=0x1736 ; "6\x17"
0x00001736      681b000000     push 0x1b
0x0000173b      e930feffff     jmp sym..plt
;-- imp.strcmp:
0x00001740      ff25ba972000   jmp qword [reloc.strcmp]                ; [0x20af00:8]=0x1746 ; "F\x17"
0x00001746      681c000000     push 0x1c
0x0000174b      e920feffff     jmp sym..plt
;-- imp.strtol:
0x00001750      ff25b2972000   jmp qword [reloc.strtol]                ; [0x20af08:8]=0x1756 ; "V\x17"
0x00001756      681d000000     push 0x1d
0x0000175b      e910feffff     jmp sym..plt
;-- imp.memcpy:
0x00001760      ff25aa972000   jmp qword [reloc.memcpy]                ; [0x20af10:8]=0x1766 ; "f\x17"
0x00001766      681e000000     push 0x1e
0x0000176b      e900feffff     jmp sym..plt
;-- imp.fileno:
0x00001770      ff25a2972000   jmp qword [reloc.fileno]                ; [0x20af18:8]=0x1776 ; "v\x17"
0x00001776      681f000000     push 0x1f
0x0000177b      e9f0fdffff     jmp sym..plt
;-- imp.uselocale:
0x00001780      ff259a972000   jmp qword [reloc.uselocale]             ; [0x20af20:8]=0x1786
0x00001786      6820000000     push 0x20                               ; "@"
0x0000178b      e9e0fdffff     jmp sym..plt
;-- imp.malloc:
0x00001790      ff2592972000   jmp qword [reloc.malloc]                ; [0x20af28:8]=0x1796
0x00001796      6821000000     push 0x21                               ; '!'
0x0000179b      e9d0fdffff     jmp sym..plt
;-- imp.fflush:
0x000017a0      ff258a972000   jmp qword [reloc.fflush]                ; [0x20af30:8]=0x17a6
0x000017a6      6822000000     push 0x22                               ; '"'
0x000017ab      e9c0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000017b0      ff2582972000   jmp qword [reloc.nl_langinfo]           ; [0x20af38:8]=0x17b6
0x000017b6      6823000000     push 0x23                               ; '#'
0x000017bb      e9b0fdffff     jmp sym..plt
;-- imp.__freading:
0x000017c0      ff257a972000   jmp qword [reloc.__freading]            ; [0x20af40:8]=0x17c6
0x000017c6      6824000000     push 0x24                               ; '$'
0x000017cb      e9a0fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x000017d0      ff2572972000   jmp qword [reloc.fwrite_unlocked]       ; [0x20af48:8]=0x17d6
0x000017d6      6825000000     push 0x25                               ; '%'
0x000017db      e990fdffff     jmp sym..plt
;-- imp.realloc:
0x000017e0      ff256a972000   jmp qword [reloc.realloc]               ; [0x20af50:8]=0x17e6
0x000017e6      6826000000     push 0x26                               ; '&'
0x000017eb      e980fdffff     jmp sym..plt
;-- imp.setlocale:
0x000017f0      ff2562972000   jmp qword [reloc.setlocale]             ; [0x20af58:8]=0x17f6
0x000017f6      6827000000     push 0x27                               ; '''
0x000017fb      e970fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001800      ff255a972000   jmp qword [reloc.__printf_chk]          ; [0x20af60:8]=0x1806
0x00001806      6828000000     push 0x28                               ; '('
0x0000180b      e960fdffff     jmp sym..plt
;-- imp.mempcpy:
0x00001810      ff2552972000   jmp qword [reloc.mempcpy]               ; [0x20af68:8]=0x1816
0x00001816      6829000000     push 0x29                               ; ')'
0x0000181b      e950fdffff     jmp sym..plt
;-- imp.memmove:
0x00001820      ff254a972000   jmp qword [reloc.memmove]               ; [0x20af70:8]=0x1826 ; "&\x18"
0x00001826      682a000000     push 0x2a                               ; '*'
0x0000182b      e940fdffff     jmp sym..plt
;-- imp.strtold:
0x00001830      ff2542972000   jmp qword [reloc.strtold]               ; [0x20af78:8]=0x1836 ; "6\x18"
0x00001836      682b000000     push 0x2b                               ; '+'
0x0000183b      e930fdffff     jmp sym..plt
;-- imp.error:
0x00001840      ff253a972000   jmp qword [reloc.error]                 ; [0x20af80:8]=0x1846 ; "F\x18"
0x00001846      682c000000     push 0x2c                               ; ','
0x0000184b      e920fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001850      ff2532972000   jmp qword [reloc.fseeko]                ; [0x20af88:8]=0x1856 ; "V\x18"
0x00001856      682d000000     push 0x2d                               ; '-'
0x0000185b      e910fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001860      ff252a972000   jmp qword [reloc.__cxa_atexit]          ; [0x20af90:8]=0x1866 ; "f\x18"
0x00001866      682e000000     push 0x2e                               ; '.'
0x0000186b      e900fdffff     jmp sym..plt
;-- imp.exit:
0x00001870      ff2522972000   jmp qword [reloc.exit]                  ; [0x20af98:8]=0x1876 ; "v\x18"
0x00001876      682f000000     push 0x2f                               ; '/'
0x0000187b      e9f0fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001880      ff251a972000   jmp qword [reloc.fwrite]                ; [0x20afa0:8]=0x1886
0x00001886      6830000000     push 0x30                               ; '0'
0x0000188b      e9e0fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001890      ff2512972000   jmp qword [reloc.__fprintf_chk]         ; [0x20afa8:8]=0x1896
0x00001896      6831000000     push 0x31                               ; '1'
0x0000189b      e9d0fcffff     jmp sym..plt
;-- imp.mbsinit:
0x000018a0      ff250a972000   jmp qword [reloc.mbsinit]               ; [0x20afb0:8]=0x18a6
0x000018a6      6832000000     push 0x32                               ; '2'
0x000018ab      e9c0fcffff     jmp sym..plt
;-- imp.iswprint:
0x000018b0      ff2502972000   jmp qword [reloc.iswprint]              ; [0x20afb8:8]=0x18b6
0x000018b6      6833000000     push 0x33                               ; '3'
0x000018bb      e9b0fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000018c0      ff25fa962000   jmp qword [reloc.__ctype_b_loc]         ; [0x20afc0:8]=0x18c6
0x000018c6      6834000000     push 0x34                               ; '4'
0x000018cb      e9a0fcffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x000018d0      ff25f2962000   jmp qword [reloc.__sprintf_chk]         ; [0x20afc8:8]=0x18d6
0x000018d6      6835000000     push 0x35                               ; '5'
0x000018db      e990fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000018e0      .qword 0x90660020970a25ff                              ; [13] -r-x section size 8 named .plt.got
0x000018e8      0000           add byte [rax], al
0x000018ea      0000           add byte [rax], al
0x000018ec      0000           add byte [rax], al
0x000018ee      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x000018f0      4157           push r15                                ; [14] -r-x section size 26238 named .text
0x000018f2      4156           push r14
0x000018f4      4155           push r13
0x000018f6      4154           push r12
0x000018f8      4189fd         mov r13d, edi
0x000018fb      55             push rbp
0x000018fc      53             push rbx
0x000018fd      4989f4         mov r12, rsi
0x00001900      488d2df99120.  lea rbp, obj.long_options               ; 0x20ab00 ; "\"\x81"
0x00001907      4881ecd80000.  sub rsp, 0xd8
0x0000190e      488b3e         mov rdi, qword [rsi]
0x00001911      64488b042528.  mov rax, qword fs:[0x28]
0x0000191a      48898424c800.  mov qword [rsp + 0xc8], rax
0x00001922      31c0           xor eax, eax
0x00001924      e8371a0000     call sym.set_program_name
0x00001929      488d35717400.  lea rsi, [0x00008da1]
0x00001930      bf06000000     mov edi, 6
0x00001935      e8b6feffff     call sym.imp.setlocale
0x0000193a      488d35346700.  lea rsi, str.usr_local_share_locale     ; 0x8075 ; "/usr/local/share/locale"
0x00001941      488d3dd56600.  lea rdi, [0x0000801d]                   ; "coreutils"
0x00001948      4885c0         test rax, rax
0x0000194b      0f9505a79720.  setne byte [obj.locale_ok]
0x00001952      31db           xor ebx, ebx
0x00001954      e8d7fcffff     call sym.imp.bindtextdomain
0x00001959      488d3dbd6600.  lea rdi, [0x0000801d]                   ; "coreutils"
0x00001960      e8abfcffff     call sym.imp.textdomain
0x00001965      488d3d441900.  lea rdi, sym.close_stdout               ; 0x32b0 ; "USH\x83\xec\bH\x8b=\xcb} "
0x0000196c      e8ef650000     call sym.atexit
0x00001971      488d05287400.  lea rax, [0x00008da0]                   ; "\n"
0x00001978      c60579972000.  mov byte [obj.equal_width], 0           ; [0x20b0f8:1]=0
0x0000197f      4889056a9720.  mov qword [obj.separator], rax          ; [0x20b0f0:8]=0
0x00001986      448b3d039720.  mov r15d, dword [obj.optind]            ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b090:4]=0
0x0000198d      4539ef         cmp r15d, r13d
0x00001990      7d71           jge 0x1a03
0x00001992      4963c7         movsxd rax, r15d
0x00001995      498b04c4       mov rax, qword [r12 + rax*8]
0x00001999      80382d         cmp byte [rax], 0x2d
0x0000199c      7510           jne 0x19ae
0x0000199e      0fbe4001       movsx eax, byte [rax + 1]
0x000019a2      3c2e           cmp al, 0x2e
0x000019a4      745d           je 0x1a03
0x000019a6      83e830         sub eax, 0x30
0x000019a9      83f809         cmp eax, 9
0x000019ac      7655           jbe 0x1a03
0x000019ae      488d15d86600.  lea rdx, str.f:s:w                      ; 0x808d ; "+f:s:w"
0x000019b5      4531c0         xor r8d, r8d
0x000019b8      4889e9         mov rcx, rbp
0x000019bb      4c89e6         mov rsi, r12
0x000019be      4489ef         mov edi, r13d
0x000019c1      e8bafcffff     call sym.imp.getopt_long
0x000019c6      83f8ff         cmp eax, 0xffffffff
0x000019c9      0f842a060000   je 0x1ff9
0x000019cf      83f866         cmp eax, 0x66
0x000019d2      0f84d8000000   je 0x1ab0
0x000019d8      0f8e8a000000   jle 0x1a68
0x000019de      83f873         cmp eax, 0x73
0x000019e1      0f84d9000000   je 0x1ac0
0x000019e7      83f877         cmp eax, 0x77
0x000019ea      0f8583090000   jne 0x2373
0x000019f0      448b3d999620.  mov r15d, dword [obj.optind]            ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b090:4]=0
0x000019f7      c605fa962000.  mov byte [obj.equal_width], 1           ; [0x20b0f8:1]=0
0x000019fe      4539ef         cmp r15d, r13d
0x00001a01      7c8f           jl 0x1992
0x00001a03      4489e8         mov eax, r13d
0x00001a06      4429f8         sub eax, r15d
0x00001a09      890424         mov dword [rsp], eax
0x00001a0c      0f841c0a0000   je 0x242e
0x00001a12      833c2403       cmp dword [rsp], 3
0x00001a16      0f8723090000   ja 0x233f
0x00001a1c      4885db         test rbx, rbx
0x00001a1f      0f84ae000000   je 0x1ad3
0x00001a25      31ed           xor ebp, ebp
0x00001a27      31c0           xor eax, eax
0x00001a29      eb19           jmp 0x1a44
0x00001a2b      0f1f440000     nop dword [rax + rax]
0x00001a30      84d2           test dl, dl
0x00001a32      0f845e080000   je 0x2296
0x00001a38      ba01000000     mov edx, 1
0x00001a3d      4801d0         add rax, rdx
0x00001a40      4883c501       add rbp, 1
0x00001a44      0fb61403       movzx edx, byte [rbx + rax]
0x00001a48      80fa25         cmp dl, 0x25
0x00001a4b      75e3           jne 0x1a30
0x00001a4d      4c8d7001       lea r14, [rax + 1]
0x00001a51      4a8d3c33       lea rdi, [rbx + r14]
0x00001a55      803f25         cmp byte [rdi], 0x25
0x00001a58      0f85d2030000   jne 0x1e30
0x00001a5e      ba02000000     mov edx, 2
0x00001a63      ebd8           jmp 0x1a3d
0x00001a65      0f1f00         nop dword [rax]
0x00001a68      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001a6d      0f8555080000   jne 0x22c8
0x00001a73      488b3d0e9620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00001a7a      488b0d8f9520.  mov rcx, qword [obj.Version]            ; [0x20b010:8]=0x8813 str.8.31
0x00001a81      4c8d050c6600.  lea r8, str.Ulrich_Drepper              ; 0x8094 ; "Ulrich Drepper"
0x00001a88      488d158a6500.  lea rdx, str.GNU_coreutils              ; 0x8019 ; "GNU coreutils"
0x00001a8f      488d35096500.  lea rsi, [0x00007f9f]                   ; "seq"
0x00001a96      4531c9         xor r9d, r9d
0x00001a99      31c0           xor eax, eax
0x00001a9b      e8b03a0000     call sym.version_etc
0x00001aa0      31ff           xor edi, edi
0x00001aa2      e8c9fdffff     call sym.imp.exit
0x00001aa7      660f1f840000.  nop word [rax + rax]
0x00001ab0      488b1de19520.  mov rbx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20b098:8]=0
0x00001ab7      e9cafeffff     jmp 0x1986
0x00001abc      0f1f4000       nop dword [rax]
0x00001ac0      488b05d19520.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20b098:8]=0
0x00001ac7      488905229620.  mov qword [obj.separator], rax          ; [0x20b0f0:8]=0
0x00001ace      e9b3feffff     jmp 0x1986
0x00001ad3      4531f6         xor r14d, r14d
0x00001ad6      31ed           xor ebp, ebp
0x00001ad8      4963c7         movsxd rax, r15d
0x00001adb      488d0cc50000.  lea rcx, [rax*8]
0x00001ae3      498b04c4       mov rax, qword [r12 + rax*8]
0x00001ae7      48894c2410     mov qword [rsp + 0x10], rcx
0x00001aec      4889c7         mov rdi, rax
0x00001aef      4889442420     mov qword [rsp + 0x20], rax
0x00001af4      e8570b0000     call sym.all_digits_p
0x00001af9      84c0           test al, al
0x00001afb      7429           je 0x1b26
0x00001afd      833c2401       cmp dword [rsp], 1
0x00001b01      0f8434050000   je 0x203b
0x00001b07      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00001b0c      498b740c08     mov rsi, qword [r12 + rcx + 8]
0x00001b11      4889f7         mov rdi, rsi
0x00001b14      4889742430     mov qword [rsp + 0x30], rsi
0x00001b19      e8320b0000     call sym.all_digits_p
0x00001b1e      84c0           test al, al
0x00001b20      0f85df040000   jne 0x2005
0x00001b26      4963d7         movsxd rdx, r15d
0x00001b29      418d4701       lea eax, [r15 + 1]
0x00001b2d      488dbc24a000.  lea rdi, [rsp + 0xa0]
0x00001b35      498b34d4       mov rsi, qword [r12 + rdx*8]
0x00001b39      890551952000   mov dword [obj.optind], eax             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b090:4]=0
0x00001b3f      48893c24       mov qword [rsp], rdi
0x00001b43      e838130000     call sym.scan_arg
0x00001b48      dbac24a00000.  fld xword [rsp + 0xa0]
0x00001b4f      4863153a9520.  movsxd rdx, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b090:4]=0
0x00001b56      4c8b9424b000.  mov r10, qword [rsp + 0xb0]
0x00001b5e      8b8424b80000.  mov eax, dword [rsp + 0xb8]
0x00001b65      4439ea         cmp edx, r13d
0x00001b68      db7c2440       fstp xword [rsp + 0x40]
0x00001b6c      0f8cde030000   jl 0x1f50
0x00001b72      85c0           test eax, eax
0x00001b74      0f8453060000   je 0x21cd
0x00001b7a      89c1           mov ecx, eax
0x00001b7c      4d89d4         mov r12, r10
0x00001b7f      4531c9         xor r9d, r9d
0x00001b82      31c0           xor eax, eax
0x00001b84      41ba01000000   mov r10d, 1
0x00001b8a      db6c2440       fld xword [rsp + 0x40]
0x00001b8e      660fefc0       pxor xmm0, xmm0
0x00001b92      f30f11442464   movss dword [rsp + 0x64], xmm0
0x00001b98      db7c2430       fstp xword [rsp + 0x30]
0x00001b9c      d9e8           fld1
0x00001b9e      d9c0           fld st(0)
0x00001ba0      db7c2450       fstp xword [rsp + 0x50]
0x00001ba4      db7c2440       fstp xword [rsp + 0x40]
0x00001ba8      eb06           jmp 0x1bb0
0x00001baa      ddd8           fstp st(0)
0x00001bac      eb02           jmp 0x1bb0
0x00001bae      ddd8           fstp st(0)
0x00001bb0      4885db         test rbx, rbx
0x00001bb3      0f8463050000   je 0x211c
0x00001bb9      eb02           jmp 0x1bbd
0x00001bbb      ddd8           fstp st(0)
0x00001bbd      db6c2450       fld xword [rsp + 0x50]
0x00001bc1      d9ee           fldz
0x00001bc3      dfe9           fucomip st(1)
0x00001bc5      ddd8           fstp st(0)
0x00001bc7      0f876e030000   ja 0x1f3b
0x00001bcd      db6c2430       fld xword [rsp + 0x30]
0x00001bd1      db6c2440       fld xword [rsp + 0x40]
0x00001bd5      dfe9           fucomip st(1)
0x00001bd7      ddd8           fstp st(0)
0x00001bd9      410f97c5       seta r13b
0x00001bdd      4584ed         test r13b, r13b
0x00001be0      0f851f020000   jne 0x1e05
0x00001be6      db6c2440       fld xword [rsp + 0x40]
0x00001bea      488d84248000.  lea rax, [rsp + 0x80]
0x00001bf2      4889442468     mov qword [rsp + 0x68], rax
0x00001bf7      db7c2420       fstp xword [rsp + 0x20]
0x00001bfb      d9e8           fld1
0x00001bfd      db7c2410       fstp xword [rsp + 0x10]
0x00001c01      e94d010000     jmp 0x1d53
0x00001c06      662e0f1f8400.  nop word cs:[rax + rax]
0x00001c10      db6c2430       fld xword [rsp + 0x30]
0x00001c14      db2c24         fld xword [rsp]
0x00001c17      dfe9           fucomip st(1)
0x00001c19      ddd8           fstp st(0)
0x00001c1b      410f97c5       seta r13b
0x00001c1f      4584ed         test r13b, r13b
0x00001c22      0f84fc000000   je 0x1d24
0x00001c28      803dca942000.  cmp byte [obj.locale_ok], 0             ; [0x20b0f9:1]=0
0x00001c2f      0f8591010000   jne 0x1dc6
0x00001c35      ff742408       push qword [rsp + 8]
0x00001c39      ff742408       push qword [rsp + 8]
0x00001c3d      4889de         mov rsi, rbx
0x00001c40      488b7c2478     mov rdi, qword [rsp + 0x78]
0x00001c45      31c0           xor eax, eax
0x00001c47      e8b43d0000     call sym.rpl_asprintf
0x00001c4c      803da6942000.  cmp byte [obj.locale_ok], 0             ; [0x20b0f9:1]=0
0x00001c53      4c63e0         movsxd r12, eax
0x00001c56      5e             pop rsi
0x00001c57      5f             pop rdi
0x00001c58      0f8552010000   jne 0x1db0
0x00001c5e      4585e4         test r12d, r12d
0x00001c61      0f88d3060000   js 0x233a
0x00001c67      488b84248000.  mov rax, qword [rsp + 0x80]
0x00001c6f      4d29f4         sub r12, r14
0x00001c72      488d0d671500.  lea rcx, sym.cl_strtold                 ; 0x31e0 ; "AUATUSH\x89\xf3H\x89\xfdH\x83\xec8H\x8dt$\x18dH\x8b\x04%("
0x00001c79      488d94249000.  lea rdx, [rsp + 0x90]
0x00001c81      31f6           xor esi, esi
0x00001c83      42c6042000     mov byte [rax + r12], 0
0x00001c88      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x00001c90      4801ef         add rdi, rbp
0x00001c93      e8a83c0000     call sym.xstrtold
0x00001c98      84c0           test al, al
0x00001c9a      0f843c010000   je 0x1ddc
0x00001ca0      db6c2430       fld xword [rsp + 0x30]
0x00001ca4      dbac24900000.  fld xword [rsp + 0x90]
0x00001cab      dfe9           fucomip st(1)
0x00001cad      ddd8           fstp st(0)
0x00001caf      0f8a27010000   jp 0x1ddc
0x00001cb5      0f8521010000   jne 0x1ddc
0x00001cbb      48c784248800.  mov qword [rsp + 0x88], 0
0x00001cc7      488dbc248800.  lea rdi, [rsp + 0x88]
0x00001ccf      ff742428       push qword [rsp + 0x28]
0x00001cd3      ff742428       push qword [rsp + 0x28]
0x00001cd7      31c0           xor eax, eax
0x00001cd9      4889de         mov rsi, rbx
0x00001cdc      e81f3d0000     call sym.rpl_asprintf
0x00001ce1      85c0           test eax, eax
0x00001ce3      5a             pop rdx
0x00001ce4      59             pop rcx
0x00001ce5      0f884f060000   js 0x233a
0x00001ceb      4c8ba4248800.  mov r12, qword [rsp + 0x88]
0x00001cf3      488bb4248000.  mov rsi, qword [rsp + 0x80]
0x00001cfb      4c89e7         mov rdi, r12
0x00001cfe      e83dfaffff     call sym.imp.strcmp
0x00001d03      4c89e7         mov rdi, r12
0x00001d06      4189c7         mov r15d, eax
0x00001d09      e882f8ffff     call sym.imp.free
0x00001d0e      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x00001d16      e875f8ffff     call sym.imp.free
0x00001d1b      4585ff         test r15d, r15d
0x00001d1e      0f84c5000000   je 0x1de9
0x00001d24      488b355d9320.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00001d2b      488b3dbe9320.  mov rdi, qword [obj.separator]          ; [0x20b0f0:8]=0
0x00001d32      e8e9f9ffff     call sym.imp.fputs_unlocked
0x00001d37      83f8ff         cmp eax, 0xffffffff
0x00001d3a      0f8451050000   je 0x2291
0x00001d40      db6c2410       fld xword [rsp + 0x10]
0x00001d44      d9e8           fld1
0x00001d46      dec1           faddp st(1)
0x00001d48      db7c2410       fstp xword [rsp + 0x10]
0x00001d4c      db2c24         fld xword [rsp]
0x00001d4f      db7c2420       fstp xword [rsp + 0x20]
0x00001d53      ff742428       push qword [rsp + 0x28]
0x00001d57      ff742428       push qword [rsp + 0x28]
0x00001d5b      31c0           xor eax, eax
0x00001d5d      4889de         mov rsi, rbx
0x00001d60      bf01000000     mov edi, 1
0x00001d65      e896faffff     call sym.imp.__printf_chk
0x00001d6a      85c0           test eax, eax
0x00001d6c      4158           pop r8
0x00001d6e      4159           pop r9
0x00001d70      0f881b050000   js 0x2291
0x00001d76      4584ed         test r13b, r13b
0x00001d79      756e           jne 0x1de9
0x00001d7b      db6c2410       fld xword [rsp + 0x10]
0x00001d7f      db6c2450       fld xword [rsp + 0x50]
0x00001d83      dcc9           fmul st(1), st(0)
0x00001d85      db6c2440       fld xword [rsp + 0x40]
0x00001d89      dec2           faddp st(2)
0x00001d8b      d9c9           fxch st(1)
0x00001d8d      db3c24         fstp xword [rsp]
0x00001d90      d9ee           fldz
0x00001d92      dfe9           fucomip st(1)
0x00001d94      ddd8           fstp st(0)
0x00001d96      0f8674feffff   jbe 0x1c10
0x00001d9c      db2c24         fld xword [rsp]
0x00001d9f      db6c2430       fld xword [rsp + 0x30]
0x00001da3      dfe9           fucomip st(1)
0x00001da5      ddd8           fstp st(0)
0x00001da7      410f97c5       seta r13b
0x00001dab      e96ffeffff     jmp 0x1c1f
0x00001db0      488d35ea6f00.  lea rsi, [0x00008da1]
0x00001db7      bf01000000     mov edi, 1
0x00001dbc      e82ffaffff     call sym.imp.setlocale
0x00001dc1      e998feffff     jmp 0x1c5e
0x00001dc6      488d35536300.  lea rsi, [0x00008120]                   ; "C"
0x00001dcd      bf01000000     mov edi, 1
0x00001dd2      e819faffff     call sym.imp.setlocale
0x00001dd7      e959feffff     jmp 0x1c35
0x00001ddc      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x00001de4      e8a7f7ffff     call sym.imp.free
0x00001de9      488b35989220.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00001df0      488d3d1a6a00.  lea rdi, obj.terminator                 ; 0x8811 ; "\n"
0x00001df7      e824f9ffff     call sym.imp.fputs_unlocked
0x00001dfc      83c001         add eax, 1
0x00001dff      0f848c040000   je 0x2291
0x00001e05      31c0           xor eax, eax
0x00001e07      488b8c24c800.  mov rcx, qword [rsp + 0xc8]
0x00001e0f      6448330c2528.  xor rcx, qword fs:[0x28]
0x00001e18      0f855f050000   jne 0x237d
0x00001e1e      4881c4d80000.  add rsp, 0xd8
0x00001e25      5b             pop rbx
0x00001e26      5d             pop rbp
0x00001e27      415c           pop r12
0x00001e29      415d           pop r13
0x00001e2b      415e           pop r14
0x00001e2d      415f           pop r15
0x00001e2f      c3             ret
0x00001e30      488d35ab6200.  lea rsi, str.0                          ; 0x80e2 ; "-+#0 '"
0x00001e37      e8b4f8ffff     call sym.imp.strspn
0x00001e3c      4901c6         add r14, rax
0x00001e3f      488d353e6100.  lea rsi, str.0123456789                 ; 0x7f84 ; "0123456789"
0x00001e46      4a8d3c33       lea rdi, [rbx + r14]
0x00001e4a      e8a1f8ffff     call sym.imp.strspn
0x00001e4f      4d8d3c06       lea r15, [r14 + rax]
0x00001e53      42803c3b2e     cmp byte [rbx + r15], 0x2e
0x00001e58      7517           jne 0x1e71
0x00001e5a      4983c701       add r15, 1
0x00001e5e      488d351f6100.  lea rsi, str.0123456789                 ; 0x7f84 ; "0123456789"
0x00001e65      4a8d3c3b       lea rdi, [rbx + r15]
0x00001e69      e882f8ffff     call sym.imp.strspn
0x00001e6e      4901c7         add r15, rax
0x00001e71      31ff           xor edi, edi
0x00001e73      42803c3b4c     cmp byte [rbx + r15], 0x4c
0x00001e78      400f94c7       sete dil
0x00001e7c      4d8d343f       lea r14, [r15 + rdi]
0x00001e80      4a8d0433       lea rax, [rbx + r14]
0x00001e84      4889442420     mov qword [rsp + 0x20], rax
0x00001e89      0fbe00         movsx eax, byte [rax]
0x00001e8c      84c0           test al, al
0x00001e8e      0f8472060000   je 0x2506
0x00001e94      488d3d636200.  lea rdi, str.efgaEFGA                   ; 0x80fe ; "efgaEFGA"
0x00001e9b      89c6           mov esi, eax
0x00001e9d      89442410       mov dword [rsp + 0x10], eax
0x00001ea1      e8faf7ffff     call sym.imp.strchr
0x00001ea6      498d7e01       lea rdi, [r14 + 1]
0x00001eaa      4531f6         xor r14d, r14d
0x00001ead      4885c0         test rax, rax
0x00001eb0      751e           jne 0x1ed0
0x00001eb2      e918060000     jmp 0x24cf
0x00001eb7      660f1f840000.  nop word [rax + rax]
0x00001ec0      84c0           test al, al
0x00001ec2      7426           je 0x1eea
0x00001ec4      b801000000     mov eax, 1
0x00001ec9      4801c7         add rdi, rax
0x00001ecc      4983c601       add r14, 1
0x00001ed0      0fb6043b       movzx eax, byte [rbx + rdi]
0x00001ed4      3c25           cmp al, 0x25
0x00001ed6      75e8           jne 0x1ec0
0x00001ed8      807c3b0125     cmp byte [rbx + rdi + 1], 0x25
0x00001edd      0f85ba050000   jne 0x249d
0x00001ee3      b802000000     mov eax, 2
0x00001ee8      ebdf           jmp 0x1ec9
0x00001eea      4883c702       add rdi, 2
0x00001eee      e8bd370000     call sym.xmalloc
0x00001ef3      4c89fa         mov rdx, r15
0x00001ef6      4889de         mov rsi, rbx
0x00001ef9      4889c7         mov rdi, rax
0x00001efc      e85ff8ffff     call sym.imp.memcpy
0x00001f01      488b742420     mov rsi, qword [rsp + 0x20]
0x00001f06      4a8d7c3801     lea rdi, [rax + r15 + 1]
0x00001f0b      42c604384c     mov byte [rax + r15], 0x4c              ; 'L'
                                                                       ; [0x4c:1]=0
0x00001f10      4889442410     mov qword [rsp + 0x10], rax
0x00001f15      e8c6f6ffff     call sym.imp.strcpy
0x00001f1a      803dd7912000.  cmp byte [obj.equal_width], 0           ; [0x20b0f8:1]=0
0x00001f21      0f854b050000   jne 0x2472
0x00001f27      4c8b442410     mov r8, qword [rsp + 0x10]
0x00001f2c      448b3d5d9120.  mov r15d, dword [obj.optind]            ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b090:4]=0
0x00001f33      4c89c3         mov rbx, r8
0x00001f36      e99dfbffff     jmp 0x1ad8
0x00001f3b      db6c2440       fld xword [rsp + 0x40]
0x00001f3f      db6c2430       fld xword [rsp + 0x30]
0x00001f43      dfe9           fucomip st(1)
0x00001f45      ddd8           fstp st(0)
0x00001f47      410f97c5       seta r13b
0x00001f4b      e98dfcffff     jmp 0x1bdd
0x00001f50      498b34d4       mov rsi, qword [r12 + rdx*8]
0x00001f54      488b3c24       mov rdi, qword [rsp]
0x00001f58      8d4a01         lea ecx, [rdx + 1]
0x00001f5b      89442420       mov dword [rsp + 0x20], eax
0x00001f5f      4c89542410     mov qword [rsp + 0x10], r10
0x00001f64      890d26912000   mov dword [obj.optind], ecx             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b090:4]=0
0x00001f6a      e8110f0000     call sym.scan_arg
0x00001f6f      dbac24a00000.  fld xword [rsp + 0xa0]
0x00001f76      8b0d14912000   mov ecx, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b090:4]=0
0x00001f7c      448b8c24b800.  mov r9d, dword [rsp + 0xb8]
0x00001f84      4c8b542410     mov r10, qword [rsp + 0x10]
0x00001f89      8b442420       mov eax, dword [rsp + 0x20]
0x00001f8d      4439e9         cmp ecx, r13d
0x00001f90      d9c0           fld st(0)
0x00001f92      db7c2450       fstp xword [rsp + 0x50]
0x00001f96      0f8c06010000   jl 0x20a2
0x00001f9c      4489c9         mov ecx, r9d
0x00001f9f      4531c9         xor r9d, r9d
0x00001fa2      4c8ba424b000.  mov r12, qword [rsp + 0xb0]
0x00001faa      db7c2430       fstp xword [rsp + 0x30]
0x00001fae      660fefc9       pxor xmm1, xmm1
0x00001fb2      d9e8           fld1
0x00001fb4      f30f114c2464   movss dword [rsp + 0x64], xmm1
0x00001fba      db7c2450       fstp xword [rsp + 0x50]
0x00001fbe      bf00000000     mov edi, 0
0x00001fc3      d9ee           fldz
0x00001fc5      db6c2440       fld xword [rsp + 0x40]
0x00001fc9      d8c9           fmul st(1)
0x00001fcb      dfe9           fucomip st(1)
0x00001fcd      400f9bc6       setnp sil
0x00001fd1      0f45f7         cmovne esi, edi
0x00001fd4      4084f6         test sil, sil
0x00001fd7      0f84cdfbffff   je 0x1baa
0x00001fdd      85c0           test eax, eax
0x00001fdf      0f85c9fbffff   jne 0x1bae
0x00001fe5      89c8           mov eax, ecx
0x00001fe7      4409c8         or eax, r9d
0x00001fea      0f84ea020000   je 0x22da
0x00001ff0      ddd8           fstp st(0)
0x00001ff2      31c0           xor eax, eax
0x00001ff4      e9b7fbffff     jmp 0x1bb0
0x00001ff9      448b3d909020.  mov r15d, dword [obj.optind]            ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b090:4]=0
0x00002000      e9fef9ffff     jmp 0x1a03
0x00002005      833c2403       cmp dword [rsp], 3
0x00002009      7530           jne 0x203b
0x0000200b      488b742430     mov rsi, qword [rsp + 0x30]
0x00002010      488d3dff6700.  lea rdi, [0x00008816]                   ; "1"
0x00002017      e824f7ffff     call sym.imp.strcmp
0x0000201c      85c0           test eax, eax
0x0000201e      0f8502fbffff   jne 0x1b26
0x00002024      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00002029      498b7c0c10     mov rdi, qword [r12 + rcx + 0x10]
0x0000202e      e81d060000     call sym.all_digits_p
0x00002033      84c0           test al, al
0x00002035      0f84ebfaffff   je 0x1b26
0x0000203b      803db6902000.  cmp byte [obj.equal_width], 1           ; [0x20b0f8:1]=0
0x00002042      0f84defaffff   je 0x1b26
0x00002048      4885db         test rbx, rbx
0x0000204b      0f85d5faffff   jne 0x1b26
0x00002051      488b3d989020.  mov rdi, qword [obj.separator]          ; [0x20b0f0:8]=0
0x00002058      4883c9ff       or rcx, 0xffffffffffffffff
0x0000205c      31c0           xor eax, eax
0x0000205e      f2ae           repne scasb al, byte [rdi]
0x00002060      4883f9fd       cmp rcx, 0xfffffffffffffffd
0x00002064      0f85bcfaffff   jne 0x1b26
0x0000206a      8b0c24         mov ecx, dword [rsp]
0x0000206d      488d05a26700.  lea rax, [0x00008816]                   ; "1"
0x00002074      83f901         cmp ecx, 1
0x00002077      480f45442420   cmovne rax, qword [rsp + 0x20]
0x0000207d      4889c7         mov rdi, rax
0x00002080      428d4439ff     lea eax, [rcx + r15 - 1]
0x00002085      498b34c4       mov rsi, qword [r12 + rax*8]
0x00002089      e842060000     call sym.seq_fast
0x0000208e      84c0           test al, al
0x00002090      0f856ffdffff   jne 0x1e05
0x00002096      448b3df38f20.  mov r15d, dword [obj.optind]            ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b090:4]=0
0x0000209d      e984faffff     jmp 0x1b26
0x000020a2      ddd8           fstp st(0)
0x000020a4      d9ee           fldz
0x000020a6      660fefd2       pxor xmm2, xmm2
0x000020aa      4863f1         movsxd rsi, ecx
0x000020ad      db6c2450       fld xword [rsp + 0x50]
0x000020b1      488d3cf50000.  lea rdi, [rsi*8]
0x000020b9      f30f11542464   movss dword [rsp + 0x64], xmm2
0x000020bf      dfe9           fucomip st(1)
0x000020c1      ddd8           fstp st(0)
0x000020c3      7a06           jp 0x20cb
0x000020c5      0f8489030000   je 0x2454
0x000020cb      498b34f4       mov rsi, qword [r12 + rsi*8]
0x000020cf      488b3c24       mov rdi, qword [rsp]
0x000020d3      83c101         add ecx, 1
0x000020d6      89442468       mov dword [rsp + 0x68], eax
0x000020da      4c89542420     mov qword [rsp + 0x20], r10
0x000020df      44894c2410     mov dword [rsp + 0x10], r9d
0x000020e4      890da68f2000   mov dword [obj.optind], ecx             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b090:4]=0
0x000020ea      e8910d0000     call sym.scan_arg
0x000020ef      dbac24a00000.  fld xword [rsp + 0xa0]
0x000020f6      4c8ba424b000.  mov r12, qword [rsp + 0xb0]
0x000020fe      8b8c24b80000.  mov ecx, dword [rsp + 0xb8]
0x00002105      8b442468       mov eax, dword [rsp + 0x68]
0x00002109      4c8b542420     mov r10, qword [rsp + 0x20]
0x0000210e      448b4c2410     mov r9d, dword [rsp + 0x10]
0x00002113      db7c2430       fstp xword [rsp + 0x30]
0x00002117      e9a2feffff     jmp 0x1fbe
0x0000211c      4439c8         cmp eax, r9d
0x0000211f      440f4dc8       cmovge r9d, eax
0x00002123      81f9ffffff7f   cmp ecx, 0x7fffffff
0x00002129      0f8492000000   je 0x21c1
0x0000212f      4181f9ffffff.  cmp r9d, 0x7fffffff
0x00002136      0f8485000000   je 0x21c1
0x0000213c      803db58f2000.  cmp byte [obj.equal_width], 0           ; [0x20b0f8:1]=0
0x00002143      0f84e5000000   je 0x222e
0x00002149      4489ca         mov edx, r9d
0x0000214c      29c2           sub edx, eax
0x0000214e      4863d2         movsxd rdx, edx
0x00002151      4901d2         add r10, rdx
0x00002154      4489ca         mov edx, r9d
0x00002157      29ca           sub edx, ecx
0x00002159      4863d2         movsxd rdx, edx
0x0000215c      4901d4         add r12, rdx
0x0000215f      85c9           test ecx, ecx
0x00002161      0f84f5000000   je 0x225c
0x00002167      4585c9         test r9d, r9d
0x0000216a      0f8418010000   je 0x2288
0x00002170      85c0           test eax, eax
0x00002172      7504           jne 0x2178
0x00002174      4983c201       add r10, 1
0x00002178      4d39e2         cmp r10, r12
0x0000217b      488d1def5e00.  lea rbx, [0x00008071]                   ; "%Lg"
0x00002182      4d0f42d4       cmovb r10, r12
0x00002186      4981faffffff.  cmp r10, 0x7fffffff
0x0000218d      0f872afaffff   ja 0x1bbd
0x00002193      488d0d735f00.  lea rcx, str.0_d._dLf                   ; 0x810d ; "%%0%d.%dLf"
0x0000219a      488d3d2f8f20.  lea rdi, obj.format_buf.6939            ; 0x20b0d0
0x000021a1      4589d0         mov r8d, r10d
0x000021a4      ba1c000000     mov edx, 0x1c
0x000021a9      be01000000     mov esi, 1
0x000021ae      31c0           xor eax, eax
0x000021b0      e81bf7ffff     call sym.imp.__sprintf_chk
0x000021b5      488d1d148f20.  lea rbx, obj.format_buf.6939            ; 0x20b0d0
0x000021bc      e9fcf9ffff     jmp 0x1bbd
0x000021c1      488d1da95e00.  lea rbx, [0x00008071]                   ; "%Lg"
0x000021c8      e9f0f9ffff     jmp 0x1bbd
0x000021cd      db6c2440       fld xword [rsp + 0x40]
0x000021d1      4d89d4         mov r12, r10
0x000021d4      41ba01000000   mov r10d, 1
0x000021da      660fefdb       pxor xmm3, xmm3
0x000021de      f30f115c2464   movss dword [rsp + 0x64], xmm3
0x000021e4      db7c2430       fstp xword [rsp + 0x30]
0x000021e8      d9e8           fld1
0x000021ea      d9c0           fld st(0)
0x000021ec      db7c2450       fstp xword [rsp + 0x50]
0x000021f0      db7c2440       fstp xword [rsp + 0x40]
0x000021f4      d9ee           fldz
0x000021f6      db6c2430       fld xword [rsp + 0x30]
0x000021fa      dfe9           fucomip st(1)
0x000021fc      7278           jb 0x2276
0x000021fe      803df38e2000.  cmp byte [obj.equal_width], 0           ; [0x20b0f8:1]=0
0x00002205      7573           jne 0x227a
0x00002207      4885db         test rbx, rbx
0x0000220a      0f85abf9ffff   jne 0x1bbb
0x00002210      488b3dd98e20.  mov rdi, qword [obj.separator]          ; [0x20b0f0:8]=0
0x00002217      4883c9ff       or rcx, 0xffffffffffffffff
0x0000221b      31c0           xor eax, eax
0x0000221d      4531c9         xor r9d, r9d
0x00002220      f2ae           repne scasb al, byte [rdi]
0x00002222      4883f9fd       cmp rcx, 0xfffffffffffffffd
0x00002226      0f8456010000   je 0x2382
0x0000222c      ddd8           fstp st(0)
0x0000222e      488d0de35e00.  lea rcx, str.._dLf                      ; 0x8118 ; "%%.%dLf"
0x00002235      488d3d948e20.  lea rdi, obj.format_buf.6939            ; 0x20b0d0
0x0000223c      4589c8         mov r8d, r9d
0x0000223f      ba1c000000     mov edx, 0x1c
0x00002244      be01000000     mov esi, 1
0x00002249      31c0           xor eax, eax
0x0000224b      e880f6ffff     call sym.imp.__sprintf_chk
0x00002250      488d1d798e20.  lea rbx, obj.format_buf.6939            ; 0x20b0d0
0x00002257      e961f9ffff     jmp 0x1bbd
0x0000225c      4585c9         test r9d, r9d
0x0000225f      0f8413ffffff   je 0x2178
0x00002265      4983c401       add r12, 1
0x00002269      85c0           test eax, eax
0x0000226b      0f8403ffffff   je 0x2174
0x00002271      e902ffffff     jmp 0x2178
0x00002276      ddd8           fstp st(0)
0x00002278      eb02           jmp 0x227c
0x0000227a      ddd8           fstp st(0)
0x0000227c      4531c9         xor r9d, r9d
0x0000227f      31c0           xor eax, eax
0x00002281      31c9           xor ecx, ecx
0x00002283      e928f9ffff     jmp 0x1bb0
0x00002288      4983ec01       sub r12, 1
0x0000228c      e9e7feffff     jmp 0x2178
0x00002291      e8fa030000     call sym.io_error
0x00002296      4889df         mov rdi, rbx
0x00002299      e8d22d0000     call sym.quote
0x0000229e      488d351f5e00.  lea rsi, str.format__s_has_no____directive ; 0x80c4 ; "format %s has no %% directive"
0x000022a5      4889c3         mov rbx, rax
0x000022a8      ba05000000     mov edx, 5
0x000022ad      31ff           xor edi, edi
0x000022af      e88cf3ffff     call sym.imp.dcgettext
0x000022b4      4889d9         mov rcx, rbx
0x000022b7      4889c2         mov rdx, rax
0x000022ba      31f6           xor esi, esi
0x000022bc      bf01000000     mov edi, 1
0x000022c1      31c0           xor eax, eax
0x000022c3      e878f5ffff     call sym.imp.error
0x000022c8      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x000022cd      0f85a0000000   jne 0x2373
0x000022d3      31ff           xor edi, edi
0x000022d5      e8c6070000     call sym.usage
0x000022da      d9e8           fld1
0x000022dc      db6c2450       fld xword [rsp + 0x50]
0x000022e0      dfe9           fucomip st(1)
0x000022e2      ddd8           fstp st(0)
0x000022e4      0f9bc2         setnp dl
0x000022e7      0f44fa         cmove edi, edx
0x000022ea      4084ff         test dil, dil
0x000022ed      7410           je 0x22ff
0x000022ef      db6c2440       fld xword [rsp + 0x40]
0x000022f3      dfe9           fucomip st(1)
0x000022f5      ddd8           fstp st(0)
0x000022f7      0f83f7feffff   jae 0x21f4
0x000022fd      eb02           jmp 0x2301
0x000022ff      ddd8           fstp st(0)
0x00002301      4531c9         xor r9d, r9d
0x00002304      31c9           xor ecx, ecx
0x00002306      e9a5f8ffff     jmp 0x1bb0
0x0000230b      488d7c2478     lea rdi, [rsp + 0x78]
0x00002310      488d35f05d00.  lea rsi, str.0.Lf                       ; 0x8107 ; "%0.Lf"
0x00002317      ff742438       push qword [rsp + 0x38]
0x0000231b      ff742438       push qword [rsp + 0x38]
0x0000231f      31c0           xor eax, eax
0x00002321      e8da360000     call sym.rpl_asprintf
0x00002326      415a           pop r10
0x00002328      85c0           test eax, eax
0x0000232a      415b           pop r11
0x0000232c      4c8b1424       mov r10, qword [rsp]
0x00002330      0f89a7000000   jns 0x23dd
0x00002336      eb02           jmp 0x233a
0x00002338      ddd8           fstp st(0)
0x0000233a      e8c1350000     call sym.xalloc_die
0x0000233f      4963d7         movsxd rdx, r15d
0x00002342      498b7cd418     mov rdi, qword [r12 + rdx*8 + 0x18]
0x00002347      e8242d0000     call sym.quote
0x0000234c      488d35605d00.  lea rsi, str.extra_operand__s           ; 0x80b3 ; "extra operand %s"
0x00002353      4889c3         mov rbx, rax
0x00002356      ba05000000     mov edx, 5
0x0000235b      31ff           xor edi, edi
0x0000235d      e8def2ffff     call sym.imp.dcgettext
0x00002362      4889d9         mov rcx, rbx
0x00002365      4889c2         mov rdx, rax
0x00002368      31f6           xor esi, esi
0x0000236a      31ff           xor edi, edi
0x0000236c      31c0           xor eax, eax
0x0000236e      e8cdf4ffff     call sym.imp.error
0x00002373      bf01000000     mov edi, 1
0x00002378      e823070000     call sym.usage
0x0000237d      e8eef2ffff     call sym.imp.__stack_chk_fail
0x00002382      db7c2410       fstp xword [rsp + 0x10]
0x00002386      4c891424       mov qword [rsp], r10
0x0000238a      488d7c2470     lea rdi, [rsp + 0x70]
0x0000238f      488d35715d00.  lea rsi, str.0.Lf                       ; 0x8107 ; "%0.Lf"
0x00002396      ff742448       push qword [rsp + 0x48]
0x0000239a      ff742448       push qword [rsp + 0x48]
0x0000239e      e85d360000     call sym.rpl_asprintf
0x000023a3      5b             pop rbx
0x000023a4      415d           pop r13
0x000023a6      85c0           test eax, eax
0x000023a8      4c8b1424       mov r10, qword [rsp]
0x000023ac      db6c2410       fld xword [rsp + 0x10]
0x000023b0      7886           js 0x2338
0x000023b2      4c891424       mov qword [rsp], r10
0x000023b6      db6c2430       fld xword [rsp + 0x30]
0x000023ba      d8c9           fmul st(1)
0x000023bc      dfe9           fucomip st(1)
0x000023be      ddd8           fstp st(0)
0x000023c0      7a06           jp 0x23c8
0x000023c2      0f8443ffffff   je 0x230b
0x000023c8      488d3dcc5b00.  lea rdi, [0x00007f9b]                   ; "inf"
0x000023cf      e80c350000     call sym.xstrdup
0x000023d4      4c8b1424       mov r10, qword [rsp]
0x000023d8      4889442478     mov qword [rsp + 0x78], rax
0x000023dd      488b7c2470     mov rdi, qword [rsp + 0x70]
0x000023e2      803f2d         cmp byte [rdi], 0x2d
0x000023e5      7424           je 0x240b
0x000023e7      488b742478     mov rsi, qword [rsp + 0x78]
0x000023ec      803e2d         cmp byte [rsi], 0x2d
0x000023ef      741a           je 0x240b
0x000023f1      4c891424       mov qword [rsp], r10
0x000023f5      e8d6020000     call sym.seq_fast
0x000023fa      84c0           test al, al
0x000023fc      0f8503faffff   jne 0x1e05
0x00002402      488b7c2470     mov rdi, qword [rsp + 0x70]
0x00002407      4c8b1424       mov r10, qword [rsp]
0x0000240b      4c891424       mov qword [rsp], r10
0x0000240f      e87cf1ffff     call sym.imp.free
0x00002414      488b7c2478     mov rdi, qword [rsp + 0x78]
0x00002419      e872f1ffff     call sym.imp.free
0x0000241e      31c0           xor eax, eax
0x00002420      31c9           xor ecx, ecx
0x00002422      4531c9         xor r9d, r9d
0x00002425      4c8b1424       mov r10, qword [rsp]
0x00002429      e90efdffff     jmp 0x213c
0x0000242e      488d356e5c00.  lea rsi, str.missing_operand            ; 0x80a3 ; "missing operand"
0x00002435      31ff           xor edi, edi
0x00002437      ba05000000     mov edx, 5
0x0000243c      e8fff1ffff     call sym.imp.dcgettext
0x00002441      31f6           xor esi, esi
0x00002443      4889c2         mov rdx, rax
0x00002446      31ff           xor edi, edi
0x00002448      31c0           xor eax, eax
0x0000244a      e8f1f3ffff     call sym.imp.error
0x0000244f      e91fffffff     jmp 0x2373
0x00002454      498b7c3cf8     mov rdi, qword [r12 + rdi - 8]
0x00002459      e8122c0000     call sym.quote
0x0000245e      ba05000000     mov edx, 5
0x00002463      4889c3         mov rbx, rax
0x00002466      488d35836300.  lea rsi, str.invalid_Zero_increment_value:__s ; 0x87f0 ; "invalid Zero increment value: %s"
0x0000246d      e9e9feffff     jmp 0x235b
0x00002472      488d352f6300.  lea rsi, str.format_string_may_not_be_specified_when_printing_equal_width_strings ; 0x87a8 ; "format string may not be specified when printing equal width strings"
0x00002479      ba05000000     mov edx, 5
0x0000247e      31ff           xor edi, edi
0x00002480      e8bbf1ffff     call sym.imp.dcgettext
0x00002485      31ff           xor edi, edi
0x00002487      4889c2         mov rdx, rax
0x0000248a      31f6           xor esi, esi
0x0000248c      31c0           xor eax, eax
0x0000248e      e8adf3ffff     call sym.imp.error
0x00002493      bf01000000     mov edi, 1
0x00002498      e803060000     call sym.usage
0x0000249d      4889df         mov rdi, rbx
0x000024a0      e8cb2b0000     call sym.quote
0x000024a5      488d35d46200.  lea rsi, str.format__s_has_too_many____directives ; 0x8780 ; "format %s has too many %% directives"
0x000024ac      4889c3         mov rbx, rax
0x000024af      ba05000000     mov edx, 5
0x000024b4      31ff           xor edi, edi
0x000024b6      e885f1ffff     call sym.imp.dcgettext
0x000024bb      4889d9         mov rcx, rbx
0x000024be      4889c2         mov rdx, rax
0x000024c1      31f6           xor esi, esi
0x000024c3      bf01000000     mov edi, 1
0x000024c8      31c0           xor eax, eax
0x000024ca      e871f3ffff     call sym.imp.error
0x000024cf      4889df         mov rdi, rbx
0x000024d2      e8992b0000     call sym.quote
0x000024d7      488d357a6200.  lea rsi, str.format__s_has_unknown____c_directive ; 0x8758 ; "format %s has unknown %%%c directive"
0x000024de      ba05000000     mov edx, 5
0x000024e3      31ff           xor edi, edi
0x000024e5      4889c3         mov rbx, rax
0x000024e8      e853f1ffff     call sym.imp.dcgettext
0x000024ed      448b442410     mov r8d, dword [rsp + 0x10]
0x000024f2      4889c2         mov rdx, rax
0x000024f5      4889d9         mov rcx, rbx
0x000024f8      31f6           xor esi, esi
0x000024fa      bf01000000     mov edi, 1
0x000024ff      31c0           xor eax, eax
0x00002501      e83af3ffff     call sym.imp.error
0x00002506      4889df         mov rdi, rbx
0x00002509      e8622b0000     call sym.quote
0x0000250e      488d35d45b00.  lea rsi, str.format__s_ends_in          ; 0x80e9 ; "format %s ends in %%"
0x00002515      4889c3         mov rbx, rax
0x00002518      ba05000000     mov edx, 5
0x0000251d      31ff           xor edi, edi
0x0000251f      e81cf1ffff     call sym.imp.dcgettext
0x00002524      4889d9         mov rcx, rbx
0x00002527      4889c2         mov rdx, rax
0x0000252a      31f6           xor esi, esi
0x0000252c      bf01000000     mov edi, 1
0x00002531      31c0           xor eax, eax
0x00002533      e808f3ffff     call sym.imp.error
0x00002538      0f1f84000000.  nop dword [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002540      31ed           xor ebp, ebp
0x00002542      4989d1         mov r9, rdx
0x00002545      5e             pop rsi
0x00002546      4889e2         mov rdx, rsp
0x00002549      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000254d      50             push rax
0x0000254e      54             push rsp
0x0000254f      4c8d05fa5900.  lea r8, sym.__libc_csu_fini             ; 0x7f50
0x00002556      488d0d835900.  lea rcx, sym.__libc_csu_init            ; 0x7ee0 ; "AWAVI\x89\xd7AUATL\x8d%\xfe+ "
0x0000255d      488d3d8cf3ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x18f0 ; "AWAVAUATA\x89\xfdUSI\x89\xf4H\x8d-\xf9\x91 "
0x00002564      ff156e8a2000   call qword [reloc.__libc_start_main]    ; [0x20afd8:8]=0
0x0000256a      f4             hlt
0x0000256b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002570      488d3d098b20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x00002577      55             push rbp
0x00002578      488d05018b20.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x0000257f      4839f8         cmp rax, rdi
0x00002582      4889e5         mov rbp, rsp
0x00002585      7419           je 0x25a0
0x00002587      488b05428a20.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20afd0:8]=0
0x0000258e      4885c0         test rax, rax
0x00002591      740d           je 0x25a0
0x00002593      5d             pop rbp
0x00002594      ffe0           jmp rax
0x00002596      662e0f1f8400.  nop word cs:[rax + rax]
0x000025a0      5d             pop rbp
0x000025a1      c3             ret
0x000025a2      0f1f4000       nop dword [rax]
0x000025a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x000025b0      488d3dc98a20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x000025b7      488d35c28a20.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x000025be      55             push rbp
0x000025bf      4829fe         sub rsi, rdi
0x000025c2      4889e5         mov rbp, rsp
0x000025c5      48c1fe03       sar rsi, 3
0x000025c9      4889f0         mov rax, rsi
0x000025cc      48c1e83f       shr rax, 0x3f
0x000025d0      4801c6         add rsi, rax
0x000025d3      48d1fe         sar rsi, 1
0x000025d6      7418           je 0x25f0
0x000025d8      488b05098a20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20afe8:8]=0
0x000025df      4885c0         test rax, rax
0x000025e2      740c           je 0x25f0
0x000025e4      5d             pop rbp
0x000025e5      ffe0           jmp rax
0x000025e7      660f1f840000.  nop word [rax + rax]
0x000025f0      5d             pop rbp
0x000025f1      c3             ret
0x000025f2      0f1f4000       nop dword [rax]
0x000025f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002600      803dc18a2000.  cmp byte [obj.completed.7697], 0        ; [0x20b0c8:1]=0
0x00002607      752f           jne 0x2638
0x00002609      48833ddf8920.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20aff0:8]=0
0x00002611      55             push rbp
0x00002612      4889e5         mov rbp, rsp
0x00002615      740c           je 0x2623
0x00002617      488b3dea8920.  mov rdi, qword [obj.__dso_handle]       ; [0x20b008:8]=0x20b008 obj.__dso_handle
0x0000261e      e8bdf2ffff     call sym..plt.got
0x00002623      e848ffffff     call sym.deregister_tm_clones
0x00002628      c605998a2000.  mov byte [obj.completed.7697], 1        ; [0x20b0c8:1]=0
0x0000262f      5d             pop rbp
0x00002630      c3             ret
0x00002631      0f1f80000000.  nop dword [rax]
0x00002638      f3c3           ret
0x0000263a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002640      55             push rbp
0x00002641      4889e5         mov rbp, rsp
0x00002644      5d             pop rbp
0x00002645      e966ffffff     jmp sym.register_tm_clones
0x0000264a      660f1f440000   nop word [rax + rax]
;-- all_digits_p:
0x00002650      55             push rbp                                ; /src:548
0x00002651      53             push rbx
0x00002652      4889fb         mov rbx, rdi
0x00002655      4883ec08       sub rsp, 8
0x00002659      e802f0ffff     call sym.imp.strlen                     ; /src:549
0x0000265e      0fbe13         movsx edx, byte [rbx]                   ; /src:550
0x00002661      83ea30         sub edx, 0x30
0x00002664      83fa09         cmp edx, 9
0x00002667      771f           ja 0x2688
0x00002669      488d35145900.  lea rsi, str.0123456789                 ; 0x7f84 ; "0123456789"
0x00002670      4889c5         mov rbp, rax
0x00002673      4889df         mov rdi, rbx
0x00002676      e875f0ffff     call sym.imp.strspn
0x0000267b      4839e8         cmp rax, rbp
0x0000267e      0f94c0         sete al
0x00002681      4883c408       add rsp, 8                              ; /src:551
0x00002685      5b             pop rbx
0x00002686      5d             pop rbp
0x00002687      c3             ret
0x00002688      31c0           xor eax, eax
0x0000268a      ebf5           jmp 0x2681
0x0000268c      0f1f4000       nop dword [rax]
;-- io_error:
0x00002690      488b3df18920.  mov rdi, qword [obj.stdout]             ; /src:287 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002697      53             push rbx
0x00002698      e863efffff     call sym.imp.clearerr_unlocked          ; /src:289
0x0000269d      488d35eb5800.  lea rsi, str.write_error                ; /src:290 ; 0x7f8f ; "write error"
0x000026a4      ba05000000     mov edx, 5
0x000026a9      31ff           xor edi, edi
0x000026ab      e890efffff     call sym.imp.dcgettext
0x000026b0      4889c3         mov rbx, rax
0x000026b3      e8f8eeffff     call sym.imp.__errno_location
0x000026b8      8b30           mov esi, dword [rax]
0x000026ba      4889da         mov rdx, rbx
0x000026bd      bf01000000     mov edi, 1
0x000026c2      31c0           xor eax, eax
0x000026c4      e877f1ffff     call sym.imp.error
0x000026c9      0f1f80000000.  nop dword [rax]
;-- seq_fast:
0x000026d0      4157           push r15                                ; /src:455
0x000026d2      4156           push r14
0x000026d4      4989f9         mov r9, rdi
0x000026d7      4155           push r13
0x000026d9      4154           push r12
0x000026db      488d3db95800.  lea rdi, [0x00007f9b]                   ; /src:456 ; "inf"
0x000026e2      55             push rbp                                ; /src:455
0x000026e3      53             push rbx
0x000026e4      b904000000     mov ecx, 4                              ; /src:456
0x000026e9      4989f0         mov r8, rsi                             ; /src:455
0x000026ec      4d89cd         mov r13, r9                             ; /src:441
0x000026ef      4883ec48       sub rsp, 0x48                           ; /src:455
0x000026f3      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]   ; /src:456
0x000026f5      0f97c0         seta al
0x000026f8      1c00           sbb al, 0
0x000026fa      41803930       cmp byte [r9], 0x30                     ; /src:441
0x000026fe      0fbec0         movsx eax, al                           ; /src:456
0x00002701      89442408       mov dword [rsp + 8], eax
0x00002705      740c           je 0x2713                               ; /src:441
0x00002707      eb28           jmp 0x2731
0x00002709      0f1f80000000.  nop dword [rax]
0x00002710      4989d5         mov r13, rdx
0x00002713      410fb64501     movzx eax, byte [r13 + 1]
0x00002718      498d5501       lea rdx, [r13 + 1]                      ; /src:442
0x0000271c      3c30           cmp al, 0x30                            ; /src:441
0x0000271e      74f0           je 0x2710
0x00002720      84c0           test al, al                             ; /src:445
0x00002722      0f85da010000   jne 0x2902
0x00002728      4939d1         cmp r9, rdx
0x0000272b      0f84d1010000   je 0x2902
0x00002731      41803830       cmp byte [r8], 0x30                     ; /src:441
0x00002735      4c89c5         mov rbp, r8
0x00002738      7409           je 0x2743
0x0000273a      eb24           jmp 0x2760
0x0000273c      0f1f4000       nop dword [rax]
0x00002740      4889d5         mov rbp, rdx
0x00002743      0fb64501       movzx eax, byte [rbp + 1]
0x00002747      488d5501       lea rdx, [rbp + 1]                      ; /src:442
0x0000274b      3c30           cmp al, 0x30                            ; /src:441
0x0000274d      74f1           je 0x2740
0x0000274f      4939d0         cmp r8, rdx                             ; /src:445
0x00002752      0f84a2010000   je 0x28fa
0x00002758      84c0           test al, al
0x0000275a      0f859a010000   jne 0x28fa
0x00002760      4c89ef         mov rdi, r13                            ; /src:463
0x00002763      bb1f000000     mov ebx, 0x1f
0x00002768      e8f3eeffff     call sym.imp.strlen
0x0000276d      8b542408       mov edx, dword [rsp + 8]                ; /src:464
0x00002771      4c8d7001       lea r14, [rax + 1]
0x00002775      4989c7         mov r15, rax                            ; /src:463
0x00002778      48890424       mov qword [rsp], rax
0x0000277c      4983fe1f       cmp r14, 0x1f
0x00002780      490f43de       cmovae rbx, r14
0x00002784      85d2           test edx, edx                           ; /src:464
0x00002786      0f84a2020000   je 0x2a2e
0x0000278c      31c0           xor eax, eax
0x0000278e      4883c9ff       or rcx, 0xffffffffffffffff
0x00002792      4889ef         mov rdi, rbp
0x00002795      f2ae           repne scasb al, byte [rdi]
0x00002797      4889ce         mov rsi, rcx
0x0000279a      48f7d6         not rsi
0x0000279d      4c8d66ff       lea r12, [rsi - 1]
0x000027a1      4889742420     mov qword [rsp + 0x20], rsi
0x000027a6      4c39e3         cmp rbx, r12                            ; /src:468
0x000027a9      490f42dc       cmovb rbx, r12
0x000027ad      488d7b01       lea rdi, [rbx + 1]                      ; /src:471
0x000027b1      48897c2418     mov qword [rsp + 0x18], rdi
0x000027b6      e8f52e0000     call sym.xmalloc
0x000027bb      4889de         mov rsi, rbx                            ; /src:472
0x000027be      482b3424       sub rsi, qword [rsp]
0x000027c2      4c89f2         mov rdx, r14                            ; /coreutils-8.31/lib:34
0x000027c5      4889442410     mov qword [rsp + 0x10], rax             ; /src:471
0x000027ca      4889f7         mov rdi, rsi                            ; /src:472
0x000027cd      4c89ee         mov rsi, r13                            ; /coreutils-8.31/lib:34
0x000027d0      4801c7         add rdi, rax                            ; /src:472
0x000027d3      e888efffff     call sym.imp.memcpy                     ; /coreutils-8.31/lib:34
0x000027d8      488b7c2418     mov rdi, qword [rsp + 0x18]             ; /src:477
0x000027dd      4989c5         mov r13, rax                            ; /coreutils-8.31/lib:34
0x000027e0      4989c6         mov r14, rax
0x000027e3      e8c82e0000     call sym.xmalloc                        ; /src:477
0x000027e8      488b4c2420     mov rcx, qword [rsp + 0x20]             ; /coreutils-8.31/lib:34
0x000027ed      4889df         mov rdi, rbx                            ; /src:478
0x000027f0      4889ee         mov rsi, rbp                            ; /coreutils-8.31/lib:34
0x000027f3      4c29e7         sub rdi, r12                            ; /src:478
0x000027f6      4889442438     mov qword [rsp + 0x38], rax             ; /src:477
0x000027fb      4801c7         add rdi, rax                            ; /src:478
0x000027fe      4889ca         mov rdx, rcx                            ; /coreutils-8.31/lib:34
0x00002801      e85aefffff     call sym.imp.memcpy
0x00002806      4c392424       cmp qword [rsp], r12                    ; /src:428
0x0000280a      4889442430     mov qword [rsp + 0x30], rax             ; /coreutils-8.31/lib:34
0x0000280f      0f8361020000   jae 0x2a76                              ; /src:428
0x00002815      488b7c2418     mov rdi, qword [rsp + 0x18]             ; /src:489
0x0000281a      b800200000     mov eax, 0x2000
0x0000281f      4801ff         add rdi, rdi
0x00002822      4881ff002000.  cmp rdi, 0x2000
0x00002829      480f43c7       cmovae rax, rdi
0x0000282d      4889c7         mov rdi, rax                            ; /src:490
0x00002830      4989c5         mov r13, rax                            ; /src:489
0x00002833      4889442428     mov qword [rsp + 0x28], rax
0x00002838      e8732e0000     call sym.xmalloc                        ; /src:490
0x0000283d      488b1424       mov rdx, qword [rsp]                    ; /coreutils-8.31/lib:48
0x00002841      4889c5         mov rbp, rax                            ; /src:490
0x00002844      4c89f6         mov rsi, r14                            ; /coreutils-8.31/lib:48
0x00002847      4889ef         mov rdi, rbp
0x0000284a      4e8d6c2d00     lea r13, [rbp + r13]                    ; /src:491
0x0000284f      e8bcefffff     call sym.imp.mempcpy                    ; /coreutils-8.31/lib:48
0x00002854      4889c2         mov rdx, rax
0x00002857      8b442408       mov eax, dword [rsp + 8]
0x0000285b      85c0           test eax, eax
0x0000285d      0f940424       sete byte [rsp]
0x00002861      0f1f80000000.  nop dword [rax]
0x00002868      4d39e7         cmp r15, r12                            ; /src:428
0x0000286b      720a           jb 0x2877
0x0000286d      803c2400       cmp byte [rsp], 0
0x00002871      0f8441010000   je 0x29b8
0x00002877      488b05728820.  mov rax, qword [obj.separator]          ; [0x20b0f0:8]=0
0x0000287e      488d4a01       lea rcx, [rdx + 1]
0x00002882      0fb600         movzx eax, byte [rax]
0x00002885      8802           mov byte [rdx], al
0x00002887      4b8d443eff     lea rax, [r14 + r15 - 1]
0x0000288c      eb0f           jmp 0x289d
0x0000288e      6690           nop
0x00002890      4883e801       sub rax, 1
0x00002894      c6400130       mov byte [rax + 1], 0x30                ; '0'
                                                                       ; [0x30:1]=0
0x00002898      4c39f0         cmp rax, r14
0x0000289b      7273           jb 0x2910
0x0000289d      0fb610         movzx edx, byte [rax]
0x000028a0      80fa38         cmp dl, 0x38
0x000028a3      7feb           jg 0x2890                               ; /src:-160
0x000028a5      83c201         add edx, 1
0x000028a8      4c39fb         cmp rbx, r15
0x000028ab      8810           mov byte [rax], dl
0x000028ad      7473           je 0x2922
0x000028af      4c89fa         mov rdx, r15
0x000028b2      4c89f6         mov rsi, r14
0x000028b5      4889cf         mov rdi, rcx
0x000028b8      e853efffff     call sym.imp.mempcpy
0x000028bd      4889c2         mov rdx, rax
0x000028c0      4c89f8         mov rax, r15
0x000028c3      48f7d0         not rax
0x000028c6      4c01e8         add rax, r13
0x000028c9      4839c2         cmp rdx, rax
0x000028cc      769a           jbe 0x2868
0x000028ce      488b0db38720.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x000028d5      4889d6         mov rsi, rdx
0x000028d8      4889ef         mov rdi, rbp
0x000028db      4829ee         sub rsi, rbp
0x000028de      ba01000000     mov edx, 1
0x000028e3      e8e8eeffff     call sym.imp.fwrite_unlocked
0x000028e8      4883f801       cmp rax, 1
0x000028ec      0f85a4010000   jne 0x2a96
0x000028f2      4889ea         mov rdx, rbp
0x000028f5      e96effffff     jmp 0x2868
0x000028fa      4889d5         mov rbp, rdx
0x000028fd      e95efeffff     jmp 0x2760
0x00002902      4989d5         mov r13, rdx
0x00002905      e927feffff     jmp 0x2731
0x0000290a      660f1f440000   nop word [rax + rax]
0x00002910      4983c701       add r15, 1
0x00002914      41c646ff31     mov byte [r14 - 1], 0x31                ; '1'
                                                                       ; [0x31:1]=0
0x00002919      4983ee01       sub r14, 1
0x0000291d      4c39fb         cmp rbx, r15
0x00002920      758d           jne 0x28af
0x00002922      4c8d1c1b       lea r11, [rbx + rbx]
0x00002926      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000292b      48894c2420     mov qword [rsp + 0x20], rcx
0x00002930      4d8d5301       lea r10, [r11 + 1]                      ; /src:169
0x00002934      4c895c2418     mov qword [rsp + 0x18], r11
0x00002939      4c89d6         mov rsi, r10
0x0000293c      4c89542408     mov qword [rsp + 8], r10
0x00002941      e8ca2d0000     call sym.xrealloc
0x00002946      488d5301       lea rdx, [rbx + 1]
0x0000294a      488d3c18       lea rdi, [rax + rbx]                    ; /src:172
0x0000294e      4889c6         mov rsi, rax
0x00002951      4889442410     mov qword [rsp + 0x10], rax
0x00002956      e8c5eeffff     call sym.imp.memmove
0x0000295b      4c8b542408     mov r10, qword [rsp + 8]
0x00002960      4c8b5c2418     mov r11, qword [rsp + 0x18]             ; /src:174
0x00002965      4989c6         mov r14, rax
0x00002968      488b4c2420     mov rcx, qword [rsp + 0x20]
0x0000296d      4d01d2         add r10, r10
0x00002970      4c3b542428     cmp r10, qword [rsp + 0x28]
0x00002975      4c89db         mov rbx, r11
0x00002978      0f8631ffffff   jbe 0x28af                              ; /src:177
0x0000297e      4829e9         sub rcx, rbp
0x00002981      4c89d6         mov rsi, r10
0x00002984      4889ef         mov rdi, rbp
0x00002987      48894c2408     mov qword [rsp + 8], rcx
0x0000298c      4c89542418     mov qword [rsp + 0x18], r10
0x00002991      e87a2d0000     call sym.xrealloc
0x00002996      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000299b      488b4c2408     mov rcx, qword [rsp + 8]
0x000029a0      4889c5         mov rbp, rax
0x000029a3      4e8d2c10       lea r13, [rax + r10]
0x000029a7      4801c1         add rcx, rax
0x000029aa      4c89542428     mov qword [rsp + 0x28], r10
0x000029af      e9fbfeffff     jmp 0x28af
0x000029b4      0f1f4000       nop dword [rax]
0x000029b8      4d39e7         cmp r15, r12
0x000029bb      771f           ja 0x29dc
0x000029bd      488b742430     mov rsi, qword [rsp + 0x30]
0x000029c2      4c89f7         mov rdi, r14
0x000029c5      4889542408     mov qword [rsp + 8], rdx
0x000029ca      e871edffff     call sym.imp.strcmp
0x000029cf      85c0           test eax, eax
0x000029d1      488b542408     mov rdx, qword [rsp + 8]
0x000029d6      0f889bfeffff   js 0x2877
0x000029dc      c6020a         mov byte [rdx], 0xa
0x000029df      488d7201       lea rsi, [rdx + 1]
0x000029e3      488b0d9e8620.  mov rcx, qword [obj.stdout]             ; /src:74 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x000029ea      ba01000000     mov edx, 1
0x000029ef      4889ef         mov rdi, rbp
0x000029f2      4829ee         sub rsi, rbp
0x000029f5      e8d6edffff     call sym.imp.fwrite_unlocked
0x000029fa      4883e801       sub rax, 1
0x000029fe      0f8592000000   jne 0x2a96                              ; /src:4
0x00002a04      bb01000000     mov ebx, 1
0x00002a09      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002a0e      e87debffff     call sym.imp.free
0x00002a13      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00002a18      e873ebffff     call sym.imp.free
0x00002a1d      4883c448       add rsp, 0x48
0x00002a21      89d8           mov eax, ebx
0x00002a23      5b             pop rbx
0x00002a24      5d             pop rbp                                 ; /src:5
0x00002a25      415c           pop r12
0x00002a27      415d           pop r13                                 ; /coreutils-8.31/lib:-433
0x00002a29      415e           pop r14
0x00002a2b      415f           pop r15
0x00002a2d      c3             ret
0x00002a2e      488d4301       lea rax, [rbx + 1]
0x00002a32      4531e4         xor r12d, r12d
0x00002a35      4889c7         mov rdi, rax
0x00002a38      4889442418     mov qword [rsp + 0x18], rax             ; /src:14
0x00002a3d      e86e2c0000     call sym.xmalloc
0x00002a42      4889df         mov rdi, rbx
0x00002a45      482b3c24       sub rdi, qword [rsp]
0x00002a49      4c89f2         mov rdx, r14
0x00002a4c      4c89ee         mov rsi, r13                            ; /src:-35
0x00002a4f      4889442410     mov qword [rsp + 0x10], rax
0x00002a54      4801c7         add rdi, rax
0x00002a57      e804edffff     call sym.imp.memcpy                     ; /src:16
0x00002a5c      48c744243800.  mov qword [rsp + 0x38], 0
0x00002a65      4989c6         mov r14, rax
0x00002a68      48c744243000.  mov qword [rsp + 0x30], 0
0x00002a71      e99ffdffff     jmp 0x2815
0x00002a76      7604           jbe 0x2a7c
0x00002a78      31db           xor ebx, ebx
0x00002a7a      eb8d           jmp 0x2a09
0x00002a7c      4889c6         mov rsi, rax
0x00002a7f      4c89ef         mov rdi, r13
0x00002a82      e8b9ecffff     call sym.imp.strcmp
0x00002a87      85c0           test eax, eax
0x00002a89      0f8e86fdffff   jle 0x2815
0x00002a8f      31db           xor ebx, ebx
0x00002a91      e973ffffff     jmp 0x2a09
0x00002a96      e8f5fbffff     call sym.io_error
0x00002a9b      0f1f440000     nop dword [rax + rax]                   ; /src:-396
;-- usage:
0x00002aa0      4155           push r13
0x00002aa2      4154           push r12
0x00002aa4      ba05000000     mov edx, 5
0x00002aa9      55             push rbp
0x00002aaa      53             push rbx
0x00002aab      89fd           mov ebp, edi
0x00002aad      4881ec880000.  sub rsp, 0x88                           ; .//ib:-370
0x00002ab4      488b1d558620.  mov rbx, qword [obj.program_name]       ; [0x20b110:8]=0
0x00002abb      64488b042528.  mov rax, qword fs:[0x28]
0x00002ac4      4889442478     mov qword [rsp + 0x78], rax
0x00002ac9      31c0           xor eax, eax
0x00002acb      85ff           test edi, edi
0x00002acd      742e           je 0x2afd                               ; /src:-392
0x00002acf      488d357a5600.  lea rsi, str.Try___s___help__for_more_information. ; 0x8150 ; "Try '%s --help' for more information.\n"
0x00002ad6      31ff           xor edi, edi
0x00002ad8      e863ebffff     call sym.imp.dcgettext
0x00002add      488b3ddc8520.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x00002ae4      4889c2         mov rdx, rax
0x00002ae7      4889d9         mov rcx, rbx
0x00002aea      be01000000     mov esi, 1
0x00002aef      31c0           xor eax, eax
0x00002af1      e89aedffff     call sym.imp.__fprintf_chk
0x00002af6      89ef           mov edi, ebp
0x00002af8      e873edffff     call sym.imp.exit
0x00002afd      488d35745600.  lea rsi, str.Usage:__s__OPTION_..._LAST____or:___s__OPTION_..._FIRST_LAST____or:___s__OPTION_..._FIRST_INCREMENT_LAST ; 0x8178 ; "Usage: %s [OPTION]... LAST\n  or:  %s [OPTION]... FIRST LAST\n  or:  %s [OPTION]... FIRST INCREMENT LAST\n"
0x00002b04      31ff           xor edi, edi
0x00002b06      e835ebffff     call sym.imp.dcgettext
0x00002b0b      4889d9         mov rcx, rbx
0x00002b0e      4989d8         mov r8, rbx
0x00002b11      4889da         mov rdx, rbx
0x00002b14      4889c6         mov rsi, rax
0x00002b17      bf01000000     mov edi, 1
0x00002b1c      31c0           xor eax, eax
0x00002b1e      e8ddecffff     call sym.imp.__printf_chk
0x00002b23      488b1d5e8520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002b2a      488d35af5600.  lea rsi, str.Print_numbers_from_FIRST_to_LAST__in_steps_of_INCREMENT. ; 0x81e0 ; "Print numbers from FIRST to LAST, in steps of INCREMENT.\n"
0x00002b31      ba05000000     mov edx, 5
0x00002b36      31ff           xor edi, edi
0x00002b38      e803ebffff     call sym.imp.dcgettext
0x00002b3d      4889de         mov rsi, rbx                            ; /src:-381
0x00002b40      4889c7         mov rdi, rax
0x00002b43      e8d8ebffff     call sym.imp.fputs_unlocked
0x00002b48      488b1d398520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002b4f      488d35ca5600.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x8220 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00002b56      ba05000000     mov edx, 5
0x00002b5b      31ff           xor edi, edi
0x00002b5d      e8deeaffff     call sym.imp.dcgettext
0x00002b62      4889de         mov rsi, rbx                            ; /src:-376
0x00002b65      4889c7         mov rdi, rax
0x00002b68      e8b3ebffff     call sym.imp.fputs_unlocked
0x00002b6d      488b1d148520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002b74      488d35f55600.  lea rsi, str.f____format_FORMAT______use_printf_style_floating_point_FORMAT_____s____separator_STRING___use_STRING_to_separate_numbers__default:__________w____equal_width________equalize_width_by_padding_with_leading_zeroes ; 0x8270 ; "  -f, --format=FORMAT      use printf style floating-point FORMAT\n  -s, --separator=STRING   use STRING to separate numbers (default: \n)\n  -w, --equal-width        equalize width by padding with leading zeroes\n"
0x00002b7b      ba05000000     mov edx, 5
0x00002b80      31ff           xor edi, edi
0x00002b82      e8b9eaffff     call sym.imp.dcgettext
0x00002b87      4889de         mov rsi, rbx                            ; /src:-375
0x00002b8a      4889c7         mov rdi, rax
0x00002b8d      e88eebffff     call sym.imp.fputs_unlocked
0x00002b92      488b1def8420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002b99      488d35a85700.  lea rsi, str.help_____display_this_help_and_exit ; 0x8348 ; "      --help     display this help and exit\n"
0x00002ba0      ba05000000     mov edx, 5
0x00002ba5      31ff           xor edi, edi
0x00002ba7      e894eaffff     call sym.imp.dcgettext
0x00002bac      4889de         mov rsi, rbx                            ; /src:-374
0x00002baf      4889c7         mov rdi, rax
0x00002bb2      e869ebffff     call sym.imp.fputs_unlocked
0x00002bb7      488b1dca8420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002bbe      488d35b35700.  lea rsi, str.version__output_version_information_and_exit ; 0x8378 ; "      --version  output version information and exit\n"
0x00002bc5      ba05000000     mov edx, 5
0x00002bca      31ff           xor edi, edi
0x00002bcc      e86feaffff     call sym.imp.dcgettext
0x00002bd1      4889de         mov rsi, rbx                            ; /src:-363
0x00002bd4      4889c7         mov rdi, rax
0x00002bd7      e844ebffff     call sym.imp.fputs_unlocked
0x00002bdc      488b1da58420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002be3      488d35c65700.  lea rsi, str.If_FIRST_or_INCREMENT_is_omitted__it_defaults_to_1.__That_is__an__omitted_INCREMENT_defaults_to_1_even_when_LAST_is_smaller_than_FIRST.__The_sequence_of_numbers_ends_when_the_sum_of_the_current_number_and__INCREMENT_would_become_greater_than_LAST.__FIRST__INCREMENT__and_LAST_are_interpreted_as_floating_point_values.__INCREMENT_is_usually_positive_if_FIRST_is_smaller_than_LAST__and__INCREMENT_is_usually_negative_if_FIRST_is_greater_than_LAST.__INCREMENT_must_not_be_0__none_of_FIRST__INCREMENT_and_LAST_may_be_NaN. ; 0x83b0 ; "\nIf FIRST or INCREMENT is omitted, it defaults to 1.  That is, an\nomitted INCREMENT defaults to 1 even when LAST is smaller than FIRST.\nThe sequence of numbers ends when the sum of the current number and\nINCREMENT would become greater than LAST.\nFIRST, INCREMENT, and LAST are interpreted as floating point values.\nINCREMENT is usually positive if FIRST is smaller than LAST, and\nINCREMENT is usually negative if FIRST is greater than LAST.\nINCREMENT must not be 0; none of FIRST, INCREMENT and LAST may be NaN.\n"
0x00002bea      ba05000000     mov edx, 5
0x00002bef      31ff           xor edi, edi
0x00002bf1      e84aeaffff     call sym.imp.dcgettext
0x00002bf6      4889de         mov rsi, rbx
0x00002bf9      4889c7         mov rdi, rax
0x00002bfc      e81febffff     call sym.imp.fputs_unlocked
0x00002c01      488b1d808420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002c08      488d35a95900.  lea rsi, str.FORMAT_must_be_suitable_for_printing_one_argument_of_type__double____it_defaults_to__.PRECf_if_FIRST__INCREMENT__and_LAST_are_all_fixed_point__decimal_numbers_with_maximum_precision_PREC__and_to__g_otherwise. ; 0x85b8 ; "FORMAT must be suitable for printing one argument of type 'double';\nit defaults to %.PRECf if FIRST, INCREMENT, and LAST are all fixed point\ndecimal numbers with maximum precision PREC, and to %g otherwise.\n"
0x00002c0f      ba05000000     mov edx, 5
0x00002c14      31ff           xor edi, edi
0x00002c16      e825eaffff     call sym.imp.dcgettext
0x00002c1b      4889de         mov rsi, rbx
0x00002c1e      4889c7         mov rdi, rax
0x00002c21      488d1d775300.  lea rbx, [0x00007f9f]                   ; "seq"
0x00002c28      e8f3eaffff     call sym.imp.fputs_unlocked
0x00002c2d      488d056f5300.  lea rax, [0x00007fa3]                   ; "["
0x00002c34      488d0da95300.  lea rcx, str.sha256sum                  ; 0x7fe4 ; "sha256sum"
0x00002c3b      48c744246000.  mov qword [rsp + 0x60], 0
0x00002c44      48c744246800.  mov qword [rsp + 0x68], 0
0x00002c4d      4889e2         mov rdx, rsp
0x00002c50      48890424       mov qword [rsp], rax
0x00002c54      488d054a5300.  lea rax, [0x00007fa5]                   ; "test invocation"
0x00002c5b      48894c2430     mov qword [rsp + 0x30], rcx
0x00002c60      488d0d875300.  lea rcx, str.sha384sum                  ; 0x7fee ; "sha384sum"
0x00002c67      4889442408     mov qword [rsp + 8], rax
0x00002c6c      488d05aa5300.  lea rax, [0x0000801d]                   ; "coreutils"
0x00002c73      48894c2440     mov qword [rsp + 0x40], rcx
0x00002c78      488d0d795300.  lea rcx, str.sha512sum                  ; 0x7ff8 ; "sha512sum"
0x00002c7f      4889442410     mov qword [rsp + 0x10], rax
0x00002c84      488d052a5300.  lea rax, [0x00007fb5]                   ; "Multi-call invocation"
0x00002c8b      48894c2450     mov qword [rsp + 0x50], rcx
0x00002c90      4889442418     mov qword [rsp + 0x18], rax             ; ../coreutils-8.31/src/q.c:180
0x00002c95      488d052f5300.  lea rax, str.sha224sum                  ; 0x7fcb ; "sha224sum"
0x00002c9c      4889442420     mov qword [rsp + 0x20], rax
0x00002ca1      488d052d5300.  lea rax, str.sha2_utilities             ; 0x7fd5 ; "sha2 utilities"
0x00002ca8      4889442428     mov qword [rsp + 0x28], rax
0x00002cad      4889442438     mov qword [rsp + 0x38], rax
0x00002cb2      4889442448     mov qword [rsp + 0x48], rax
0x00002cb7      4889442458     mov qword [rsp + 0x58], rax
0x00002cbc      0f1f4000       nop dword [rax]
0x00002cc0      4883c210       add rdx, 0x10
0x00002cc4      488b3a         mov rdi, qword [rdx]
0x00002cc7      4885ff         test rdi, rdi
0x00002cca      7413           je 0x2cdf                               ; ../coreutils-8.31/src/q.c:185
0x00002ccc      b904000000     mov ecx, 4
0x00002cd1      4889de         mov rsi, rbx
0x00002cd4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002cd6      0f97c0         seta al
0x00002cd9      1c00           sbb al, 0
0x00002cdb      84c0           test al, al
0x00002cdd      75e1           jne 0x2cc0
0x00002cdf      4c8b6208       mov r12, qword [rdx + 8]
0x00002ce3      31ff           xor edi, edi
0x00002ce5      ba05000000     mov edx, 5
0x00002cea      488d35115300.  lea rsi, str.s_online_help:___s         ; 0x8002 ; "\n%s online help: <%s>\n"
0x00002cf1      4d85e4         test r12, r12
0x00002cf4      0f84c1000000   je 0x2dbb
0x00002cfa      e841e9ffff     call sym.imp.dcgettext
0x00002cff      488d0d825900.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x8688 ; "https://www.gnu.org/software/coreutils/"
0x00002d06      488d150c5300.  lea rdx, str.GNU_coreutils              ; 0x8019 ; "GNU coreutils"
0x00002d0d      4889c6         mov rsi, rax
0x00002d10      bf01000000     mov edi, 1
0x00002d15      31c0           xor eax, eax
0x00002d17      e8e4eaffff     call sym.imp.__printf_chk
0x00002d1c      31f6           xor esi, esi
0x00002d1e      bf05000000     mov edi, 5
0x00002d23      e8c8eaffff     call sym.imp.setlocale
0x00002d28      4885c0         test rax, rax
0x00002d2b      741c           je 0x2d49
0x00002d2d      488d35f35200.  lea rsi, [0x00008027]                   ; "en_"
0x00002d34      ba03000000     mov edx, 3
0x00002d39      4889c7         mov rdi, rax
0x00002d3c      e87fe8ffff     call sym.imp.strncmp
0x00002d41      85c0           test eax, eax
0x00002d43      0f8507010000   jne 0x2e50
0x00002d49      488d35db5200.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/q.c:201 ; 0x802b ; "Full documentation <%s%s>\n"
0x00002d50      31ff           xor edi, edi
0x00002d52      ba05000000     mov edx, 5
0x00002d57      e8e4e8ffff     call sym.imp.dcgettext
0x00002d5c      488d0d3c5200.  lea rcx, [0x00007f9f]                   ; "seq"
0x00002d63      488d151e5900.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x8688 ; "https://www.gnu.org/software/coreutils/"
0x00002d6a      4889c6         mov rsi, rax
0x00002d6d      bf01000000     mov edi, 1
0x00002d72      31c0           xor eax, eax
0x00002d74      e887eaffff     call sym.imp.__printf_chk
0x00002d79      4939dc         cmp r12, rbx
0x00002d7c      488d0d3c5200.  lea rcx, [0x00007fbf]                   ; " invocation"
0x00002d83      488d1d176000.  lea rbx, [0x00008da1]
0x00002d8a      480f44d9       cmove rbx, rcx
0x00002d8e      488d35635900.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x86f8 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00002d95      31ff           xor edi, edi
0x00002d97      ba05000000     mov edx, 5
0x00002d9c      e89fe8ffff     call sym.imp.dcgettext
0x00002da1      4889d9         mov rcx, rbx
0x00002da4      4889c6         mov rsi, rax
0x00002da7      4c89e2         mov rdx, r12
0x00002daa      bf01000000     mov edi, 1
0x00002daf      31c0           xor eax, eax
0x00002db1      e84aeaffff     call sym.imp.__printf_chk
0x00002db6      e93bfdffff     jmp 0x2af6
0x00002dbb      e880e8ffff     call sym.imp.dcgettext
0x00002dc0      488d0dc15800.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x8688 ; "https://www.gnu.org/software/coreutils/"
0x00002dc7      488d154b5200.  lea rdx, str.GNU_coreutils              ; 0x8019 ; "GNU coreutils"
0x00002dce      4889c6         mov rsi, rax
0x00002dd1      bf01000000     mov edi, 1
0x00002dd6      31c0           xor eax, eax                            ; ../coreutils-8.31/src/q.c:199
0x00002dd8      e823eaffff     call sym.imp.__printf_chk
0x00002ddd      31f6           xor esi, esi
0x00002ddf      bf05000000     mov edi, 5
0x00002de4      e807eaffff     call sym.imp.setlocale                  ; ../coreutils-8.31/src/q.c:176
0x00002de9      4885c0         test rax, rax
0x00002dec      7418           je 0x2e06
0x00002dee      488d35325200.  lea rsi, [0x00008027]                   ; "en_"
0x00002df5      ba03000000     mov edx, 3
0x00002dfa      4889c7         mov rdi, rax
0x00002dfd      e8bee7ffff     call sym.imp.strncmp
0x00002e02      85c0           test eax, eax
0x00002e04      7543           jne 0x2e49
0x00002e06      488d351e5200.  lea rsi, str.Full_documentation___s_s   ; 0x802b ; "Full documentation <%s%s>\n"
0x00002e0d      ba05000000     mov edx, 5
0x00002e12      31ff           xor edi, edi
0x00002e14      4c8d25845100.  lea r12, [0x00007f9f]                   ; "seq"
0x00002e1b      488d1d9d5100.  lea rbx, [0x00007fbf]                   ; " invocation"
0x00002e22      e819e8ffff     call sym.imp.dcgettext
0x00002e27      488d0d715100.  lea rcx, [0x00007f9f]                   ; "seq"
0x00002e2e      488d15535800.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x8688 ; "https://www.gnu.org/software/coreutils/"
0x00002e35      4889c6         mov rsi, rax
0x00002e38      bf01000000     mov edi, 1
0x00002e3d      31c0           xor eax, eax
0x00002e3f      e8bce9ffff     call sym.imp.__printf_chk
0x00002e44      e945ffffff     jmp 0x2d8e
0x00002e49      4c8d254f5100.  lea r12, [0x00007f9f]                   ; "seq"
0x00002e50      4c8b2d318220.  mov r13, qword [obj.stdout]             ; /src:-322 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002e57      488d35525800.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x86b0 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00002e5e      31ff           xor edi, edi
0x00002e60      ba05000000     mov edx, 5                              ; /src:-319
0x00002e65      e8d6e7ffff     call sym.imp.dcgettext                  ; /src:-322
0x00002e6a      4c89ee         mov rsi, r13
0x00002e6d      4889c7         mov rdi, rax
0x00002e70      e8abe8ffff     call sym.imp.fputs_unlocked
0x00002e75      e9cffeffff     jmp 0x2d49
0x00002e7a      660f1f440000   nop word [rax + rax]
;-- scan_arg:
0x00002e80      4157           push r15
0x00002e82      4156           push r14
0x00002e84      4155           push r13
0x00002e86      4154           push r12
0x00002e88      55             push rbp
0x00002e89      53             push rbx
0x00002e8a      4889f3         mov rbx, rsi
0x00002e8d      4889fd         mov rbp, rdi
0x00002e90      31f6           xor esi, esi
0x00002e92      4889df         mov rdi, rbx                            ; /src:-313
0x00002e95      4883ec48       sub rsp, 0x48
0x00002e99      488d0d400300.  lea rcx, sym.cl_strtold                 ; 0x31e0 ; "AUATUSH\x89\xf3H\x89\xfdH\x83\xec8H\x8dt$\x18dH\x8b\x04%("
0x00002ea0      488d542410     lea rdx, [rsp + 0x10]
0x00002ea5      64488b042528.  mov rax, qword fs:[0x28]
0x00002eae      4889442438     mov qword [rsp + 0x38], rax
0x00002eb3      31c0           xor eax, eax
0x00002eb5      e8862a0000     call sym.xstrtold
0x00002eba      84c0           test al, al
0x00002ebc      0f84d8020000   je 0x319a
0x00002ec2      db6c2410       fld xword [rsp + 0x10]
0x00002ec6      d9c0           fld st(0)
0x00002ec8      db3c24         fstp xword [rsp]
0x00002ecb      dfe8           fucomip st(0)                           ; /src:-301
0x00002ecd      0f8a75020000   jp 0x3148
0x00002ed3      e8e8e9ffff     call sym.imp.__ctype_b_loc
0x00002ed8      488b08         mov rcx, qword [rax]
0x00002edb      eb07           jmp 0x2ee4
0x00002edd      0f1f00         nop dword [rax]
0x00002ee0      4883c301       add rbx, 1
0x00002ee4      0fb613         movzx edx, byte [rbx]                   ; /src:-297
0x00002ee7      f644510120     test byte [rcx + rdx*2 + 1], 0x20       ; /src:-296
0x00002eec      75f2           jne 0x2ee0
0x00002eee      80fa2b         cmp dl, 0x2b
0x00002ef1      74ed           je 0x2ee0
0x00002ef3      be2e000000     mov esi, 0x2e                           ; '.'
0x00002ef8      4889df         mov rdi, rbx
0x00002efb      48c744242000.  mov qword [rsp + 0x20], 0
0x00002f04      c7442428ffff.  mov dword [rsp + 0x28], 0x7fffffff      ; [0x7fffffff:4]=-1
0x00002f0c      e88fe7ffff     call sym.imp.strchr
0x00002f11      4885c0         test rax, rax
0x00002f14      4989c4         mov r12, rax
0x00002f17      0f846d010000   je 0x308a
0x00002f1d      488d35475100.  lea rsi, [0x0000806b]                   ; /src:-289 ; "xX"
0x00002f24      4889df         mov rdi, rbx
0x00002f27      e8d4e7ffff     call sym.imp.strcspn
0x00002f2c      803c0300       cmp byte [rbx + rax], 0
0x00002f30      0f851a010000   jne 0x3050
0x00002f36      d9ee           fldz
0x00002f38      db2c24         fld xword [rsp]
0x00002f3b      d8c9           fmul st(1)
0x00002f3d      dfe9           fucomip st(1)                           ; /src:-287
0x00002f3f      ddd8           fstp st(0)
0x00002f41      0f8a09010000   jp 0x3050
0x00002f47      0f8503010000   jne 0x3050
0x00002f4d      4983cfff       or r15, 0xffffffffffffffff
0x00002f51      31c0           xor eax, eax
0x00002f53      4889df         mov rdi, rbx
0x00002f56      4c89f9         mov rcx, r15
0x00002f59      f2ae           repne scasb al, byte [rdi]
0x00002f5b      4d85e4         test r12, r12
0x00002f5e      4889c8         mov rax, rcx
0x00002f61      48f7d0         not rax
0x00002f64      4e8d2c38       lea r13, [rax + r15]
0x00002f68      4c896c2420     mov qword [rsp + 0x20], r13
0x00002f6d      0f844c010000   je 0x30bf
0x00002f73      498d7c2401     lea rdi, [r12 + 1]
0x00002f78      488d35ef5000.  lea rsi, [0x0000806e]                   ; "eE"
0x00002f7f      e87ce7ffff     call sym.imp.strcspn                    ; /src:-282
0x00002f84      483dffffff7f   cmp rax, 0x7fffffff
0x00002f8a      4989c6         mov r14, rax
0x00002f8d      0f861a010000   jbe 0x30ad
0x00002f93      4c39e3         cmp rbx, r12
0x00002f96      0f84a1010000   je 0x313d
0x00002f9c      410fbe4424ff   movsx eax, byte [r12 - 1]
0x00002fa2      4531ff         xor r15d, r15d
0x00002fa5      83e830         sub eax, 0x30
0x00002fa8      83f809         cmp eax, 9
0x00002fab      410f97c7       seta r15b
0x00002faf      4d01fd         add r13, r15
0x00002fb2      4c896c2420     mov qword [rsp + 0x20], r13
0x00002fb7      be65000000     mov esi, 0x65                           ; 'e'
0x00002fbc      4889df         mov rdi, rbx
0x00002fbf      e8dce6ffff     call sym.imp.strchr
0x00002fc4      4885c0         test rax, rax
0x00002fc7      4989c5         mov r13, rax
0x00002fca      0f84f7000000   je 0x30c7
0x00002fd0      498d7d01       lea rdi, [r13 + 1]
0x00002fd4      ba0a000000     mov edx, 0xa
0x00002fd9      31f6           xor esi, esi                            ; /src:-271
0x00002fdb      e870e7ffff     call sym.imp.strtol                     ; /src:-268
0x00002fe0      4d89e8         mov r8, r13
0x00002fe3      4889c2         mov rdx, rax
0x00002fe6      8b4c2428       mov ecx, dword [rsp + 0x28]
0x00002fea      4929d8         sub r8, rbx
0x00002fed      4885c0         test rax, rax
0x00002ff0      0f88ef000000   js 0x30e5
0x00002ff6      4863c1         movsxd rax, ecx
0x00002ff9      89ce           mov esi, ecx
0x00002ffb      4889df         mov rdi, rbx
0x00002ffe      4839d0         cmp rax, rdx
0x00003001      480f4fc2       cmovg rax, rdx
0x00003005      4883c9ff       or rcx, 0xffffffffffffffff              ; /src:-253
0x00003009      29c6           sub esi, eax
0x0000300b      31c0           xor eax, eax
0x0000300d      89742428       mov dword [rsp + 0x28], esi
0x00003011      f2ae           repne scasb al, byte [rdi]
0x00003013      488b442420     mov rax, qword [rsp + 0x20]
0x00003018      4c01c0         add rax, r8
0x0000301b      4d85e4         test r12, r12
0x0000301e      400f95c7       setne dil
0x00003022      4d85f6         test r14, r14
0x00003025      488d440102     lea rax, [rcx + rax + 2]
0x0000302a      0f95c1         setne cl
0x0000302d      4084cf         test dil, cl
0x00003030      4889442420     mov qword [rsp + 0x20], rax
0x00003035      7408           je 0x303f
0x00003037      85f6           test esi, esi                           ; /src:-245
0x00003039      0f84e5000000   je 0x3124
0x0000303f      4c39f2         cmp rdx, r14
0x00003042      4c0f46f2       cmovbe r14, rdx
0x00003046      4c29f2         sub rdx, r14
0x00003049      4801542420     add qword [rsp + 0x20], rdx
0x0000304e      6690           nop
0x00003050      660f6f442410   movdqa xmm0, xmmword [rsp + 0x10]
0x00003056      4889e8         mov rax, rbp
0x00003059      488b742438     mov rsi, qword [rsp + 0x38]
0x0000305e      644833342528.  xor rsi, qword fs:[0x28]
0x00003067      0f294500       movaps xmmword [rbp], xmm0
0x0000306b      660f6f442420   movdqa xmm0, xmmword [rsp + 0x20]
0x00003071      0f294510       movaps xmmword [rbp + 0x10], xmm0
0x00003075      0f8558010000   jne 0x31d3
0x0000307b      4883c448       add rsp, 0x48
0x0000307f      5b             pop rbx
0x00003080      5d             pop rbp                                 ; /src:-283
0x00003081      415c           pop r12
0x00003083      415d           pop r13
0x00003085      415e           pop r14
0x00003087      415f           pop r15
0x00003089      c3             ret
0x0000308a      be70000000     mov esi, 0x70                           ; 'p'
0x0000308f      4889df         mov rdi, rbx                            ; /src:-290
0x00003092      e809e6ffff     call sym.imp.strchr
0x00003097      4885c0         test rax, rax                           ; /src:-275
0x0000309a      0f857dfeffff   jne 0x2f1d
0x000030a0      c74424280000.  mov dword [rsp + 0x28], 0
0x000030a8      e970feffff     jmp 0x2f1d
0x000030ad      4885c0         test rax, rax
0x000030b0      89442428       mov dword [rsp + 0x28], eax
0x000030b4      0f84f5feffff   je 0x2faf
0x000030ba      e9d4feffff     jmp 0x2f93
0x000030bf      4531f6         xor r14d, r14d
0x000030c2      e9f0feffff     jmp 0x2fb7
0x000030c7      be45000000     mov esi, 0x45                           ; 'E'
0x000030cc      4889df         mov rdi, rbx
0x000030cf      e8cce5ffff     call sym.imp.strchr
0x000030d4      4885c0         test rax, rax
0x000030d7      4989c5         mov r13, rax
0x000030da      0f8470ffffff   je 0x3050
0x000030e0      e9ebfeffff     jmp 0x2fd0
0x000030e5      29c1           sub ecx, eax
0x000030e7      4889df         mov rdi, rbx
0x000030ea      31c0           xor eax, eax
0x000030ec      894c2428       mov dword [rsp + 0x28], ecx             ; /src:-257
0x000030f0      4883c9ff       or rcx, 0xffffffffffffffff
0x000030f4      f2ae           repne scasb al, byte [rdi]              ; /src:-252
0x000030f6      488b442420     mov rax, qword [rsp + 0x20]
0x000030fb      4c01c0         add rax, r8
0x000030fe      4d85e4         test r12, r12
0x00003101      488d440102     lea rax, [rcx + rax + 2]
0x00003106      742a           je 0x3132
0x00003108      4983c401       add r12, 1
0x0000310c      488d4801       lea rcx, [rax + 1]
0x00003110      4d39e5         cmp r13, r12
0x00003113      480f44c1       cmove rax, rcx
0x00003117      4889442420     mov qword [rsp + 0x20], rax
0x0000311c      48f7da         neg rdx
0x0000311f      e925ffffff     jmp 0x3049
0x00003124      4883e801       sub rax, 1
0x00003128      4889442420     mov qword [rsp + 0x20], rax
0x0000312d      e90dffffff     jmp 0x303f
0x00003132      4883c001       add rax, 1
0x00003136      4889442420     mov qword [rsp + 0x20], rax
0x0000313b      ebdf           jmp 0x311c
0x0000313d      41bf01000000   mov r15d, 1
0x00003143      e967feffff     jmp 0x2faf
0x00003148      4889de         mov rsi, rbx
0x0000314b      bf01000000     mov edi, 1
0x00003150      e8fb1e0000     call sym.quote_n
0x00003155      488d35ea4e00.  lea rsi, str.not_a_number               ; 0x8046 ; "not-a-number"
0x0000315c      31ff           xor edi, edi
0x0000315e      4889c5         mov rbp, rax
0x00003161      e8ea1e0000     call sym.quote_n
0x00003166      488d35e64e00.  lea rsi, str.invalid__s_argument:__s    ; 0x8053 ; "invalid %s argument: %s"
0x0000316d      4889c3         mov rbx, rax
0x00003170      ba05000000     mov edx, 5
0x00003175      31ff           xor edi, edi
0x00003177      e8c4e4ffff     call sym.imp.dcgettext
0x0000317c      31ff           xor edi, edi
0x0000317e      4889c2         mov rdx, rax
0x00003181      4989e8         mov r8, rbp
0x00003184      4889d9         mov rcx, rbx
0x00003187      31f6           xor esi, esi
0x00003189      31c0           xor eax, eax
0x0000318b      e8b0e6ffff     call sym.imp.error
0x00003190      bf01000000     mov edi, 1
0x00003195      e806f9ffff     call sym.usage
0x0000319a      4889df         mov rdi, rbx
0x0000319d      e8ce1e0000     call sym.quote
0x000031a2      488d35875500.  lea rsi, str.invalid_floating_point_argument:__s ; 0x8730 ; "invalid floating point argument: %s"
0x000031a9      4889c3         mov rbx, rax
0x000031ac      ba05000000     mov edx, 5
0x000031b1      31ff           xor edi, edi
0x000031b3      e888e4ffff     call sym.imp.dcgettext
0x000031b8      31ff           xor edi, edi
0x000031ba      4889c2         mov rdx, rax
0x000031bd      4889d9         mov rcx, rbx
0x000031c0      31f6           xor esi, esi
0x000031c2      31c0           xor eax, eax
0x000031c4      e877e6ffff     call sym.imp.error
0x000031c9      bf01000000     mov edi, 1
0x000031ce      e8cdf8ffff     call sym.usage
0x000031d3      e898e4ffff     call sym.imp.__stack_chk_fail
0x000031d8      0f1f84000000.  nop dword [rax + rax]
;-- cl_strtold:
0x000031e0      4155           push r13                                ; ../coreutils-8.31/lib/cl-strtod.c:60
0x000031e2      4154           push r12
0x000031e4      55             push rbp
0x000031e5      53             push rbx
0x000031e6      4889f3         mov rbx, rsi
0x000031e9      4889fd         mov rbp, rdi
0x000031ec      4883ec38       sub rsp, 0x38
0x000031f0      488d742418     lea rsi, [rsp + 0x18]                   ; ../coreutils-8.31/lib/cl-strtod.c:62
0x000031f5      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/cl-strtod.c:60
0x000031fe      4889442428     mov qword [rsp + 0x28], rax
0x00003203      31c0           xor eax, eax
0x00003205      e826e6ffff     call sym.imp.strtold                    ; ../coreutils-8.31/lib/cl-strtod.c:62
0x0000320a      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/cl-strtod.c:63
0x0000320f      d9c0           fld st(0)                               ; ../coreutils-8.31/lib/cl-strtod.c:62
0x00003211      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/cl-strtod.c:63
0x00003214      752a           jne 0x3240
0x00003216      ddd9           fstp st(1)
0x00003218      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/cl-strtod.c:73
0x0000321b      7408           je 0x3225
0x0000321d      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/cl-strtod.c:74
0x00003222      488903         mov qword [rbx], rax
0x00003225      488b442428     mov rax, qword [rsp + 0x28]             ; ../coreutils-8.31/lib/cl-strtod.c:76
0x0000322a      644833042528.  xor rax, qword fs:[0x28]
0x00003233      754b           jne 0x3280
0x00003235      4883c438       add rsp, 0x38
0x00003239      5b             pop rbx
0x0000323a      5d             pop rbp
0x0000323b      415c           pop r12
0x0000323d      415d           pop r13
0x0000323f      c3             ret
0x00003240      ddd8           fstp st(0)
0x00003242      db3c24         fstp xword [rsp]
0x00003245      e866e3ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/cl-strtod.c:65
0x0000324a      488d742420     lea rsi, [rsp + 0x20]                   ; ../coreutils-8.31/lib/cl-strtod.c:67
0x0000324f      4889ef         mov rdi, rbp
0x00003252      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/cl-strtod.c:65
0x00003255      448b28         mov r13d, dword [rax]
0x00003258      e873290000     call sym.c_strtold                      ; ../coreutils-8.31/lib/cl-strtod.c:67
0x0000325d      488b442420     mov rax, qword [rsp + 0x20]             ; ../coreutils-8.31/lib/cl-strtod.c:68
0x00003262      4839442418     cmp qword [rsp + 0x18], rax
0x00003267      db2c24         fld xword [rsp]
0x0000326a      730c           jae 0x3278
0x0000326c      ddd8           fstp st(0)
0x0000326e      4889442418     mov qword [rsp + 0x18], rax             ; ../coreutils-8.31/lib/cl-strtod.c:69
0x00003273      eba3           jmp 0x3218
0x00003275      0f1f00         nop dword [rax]
0x00003278      ddd9           fstp st(1)
0x0000327a      45892c24       mov dword [r12], r13d                   ; ../coreutils-8.31/lib/cl-strtod.c:71
0x0000327e      eb98           jmp 0x3218
0x00003280      ddd8           fstp st(0)
0x00003282      e8e9e3ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/cl-strtod.c:76
0x00003287      660f1f840000.  nop word [rax + rax]
;-- close_stdout_set_file_name:
0x00003290      48893d717e20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20b108:8]=0
0x00003297      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00003298      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x000032a0      40883d597e20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20b100:1]=0
0x000032a7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x000032a8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x000032b0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x000032b1      53             push rbx
0x000032b2      4883ec08       sub rsp, 8
0x000032b6      488b3dcb7d20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x000032bd      e8ce290000     call sym.close_stream
0x000032c2      85c0           test eax, eax
0x000032c4      7416           je 0x32dc
0x000032c6      e8e5e2ffff     call sym.imp.__errno_location
0x000032cb      803d2e7e2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20b100:1]=0
0x000032d2      4889c3         mov rbx, rax
0x000032d5      741c           je 0x32f3
0x000032d7      833820         cmp dword [rax], 0x20
0x000032da      7517           jne 0x32f3
0x000032dc      488b3ddd7d20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x000032e3      e8a8290000     call sym.close_stream
0x000032e8      85c0           test eax, eax
0x000032ea      7546           jne 0x3332
0x000032ec      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x000032f0      5b             pop rbx
0x000032f1      5d             pop rbp
0x000032f2      c3             ret
0x000032f3      488d35954c00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x7f8f ; "write error"
0x000032fa      31ff           xor edi, edi
0x000032fc      ba05000000     mov edx, 5
0x00003301      e83ae3ffff     call sym.imp.dcgettext
0x00003306      488b3dfb7d20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20b108:8]=0
0x0000330d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003310      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003313      7428           je 0x333d
0x00003315      e8561b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000331a      8b33           mov esi, dword [rbx]
0x0000331c      488d15f55400.  lea rdx, str.s:__s                      ; 0x8818 ; "%s: %s"
0x00003323      4889c1         mov rcx, rax
0x00003326      4989e8         mov r8, rbp
0x00003329      31ff           xor edi, edi
0x0000332b      31c0           xor eax, eax
0x0000332d      e80ee5ffff     call sym.imp.error
0x00003332      8b3de07c2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20b018:4]=1
0x00003338      e893e2ffff     call sym.imp._exit
0x0000333d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000333f      488d15d65400.  lea rdx, [0x0000881c]                   ; "%s"
0x00003346      4889c1         mov rcx, rax
0x00003349      31ff           xor edi, edi
0x0000334b      31c0           xor eax, eax
0x0000334d      e8eee4ffff     call sym.imp.error
0x00003352      ebde           jmp 0x3332
0x00003354      662e0f1f8400.  nop word cs:[rax + rax]
0x0000335e      6690           nop
;-- set_program_name:
0x00003360      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00003363      53             push rbx
0x00003364      7477           je 0x33dd                               ; ../coreutils-8.31/lib/progname.c:51
0x00003366      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000336b      4889fb         mov rbx, rdi
0x0000336e      e84de3ffff     call sym.imp.strrchr
0x00003373      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00003376      7455           je 0x33cd
0x00003378      4c8d4001       lea r8, [rax + 1]
0x0000337c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000337f      4829da         sub rdx, rbx
0x00003382      4883fa06       cmp rdx, 6
0x00003386      7e45           jle 0x33cd
0x00003388      488d70fa       lea rsi, [rax - 6]
0x0000338c      488d3dc55400.  lea rdi, str..libs                      ; 0x8858 ; "/.libs/"
0x00003393      b907000000     mov ecx, 7
0x00003398      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000339a      0f97c2         seta dl
0x0000339d      80da00         sbb dl, 0
0x000033a0      84d2           test dl, dl
0x000033a2      7529           jne 0x33cd
0x000033a4      488d3db55400.  lea rdi, [0x00008860]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x000033ab      b903000000     mov ecx, 3
0x000033b0      4c89c6         mov rsi, r8
0x000033b3      4c89c3         mov rbx, r8
0x000033b6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000033b8      0f97c2         seta dl
0x000033bb      80da00         sbb dl, 0
0x000033be      84d2           test dl, dl
0x000033c0      750b           jne 0x33cd
0x000033c2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x000033c6      48891db37c20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20b080:8]=0
0x000033cd      48891d3c7d20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20b110:8]=0
0x000033d4      48891dc57c20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20b0a0:8]=0
0x000033db      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000033dc      c3             ret
0x000033dd      488b0ddc7c20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x000033e4      488d3d355400.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x8820 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000033eb      ba37000000     mov edx, 0x37                           ; '7'
0x000033f0      be01000000     mov esi, 1
0x000033f5      e886e4ffff     call sym.imp.fwrite
0x000033fa      e8a1e1ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000033ff      90             nop
;-- gettext_quote.part.1:
0x00003400      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00003401      53             push rbx
0x00003402      4889fd         mov rbp, rdi
0x00003405      89f3           mov ebx, esi
0x00003407      4883ec08       sub rsp, 8
0x0000340b      e860290000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00003410      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00003413      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003416      80fa55         cmp dl, 0x55
0x00003419      7475           je 0x3490
0x0000341b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000341e      7420           je 0x3440
0x00003420      488d054c5400.  lea rax, str.l______l                   ; 0x8873 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003427      488d15b94c00.  lea rdx, [0x000080e7]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; "'"
0x0000342e      83fb09         cmp ebx, 9
0x00003431      480f45c2       cmovne rax, rdx
0x00003435      4883c408       add rsp, 8
0x00003439      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000343a      5d             pop rbp
0x0000343b      c3             ret
0x0000343c      0f1f4000       nop dword [rax]
0x00003440      0fb65001       movzx edx, byte [rax + 1]
0x00003444      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003447      80fa42         cmp dl, 0x42
0x0000344a      75d4           jne 0x3420
0x0000344c      80780231       cmp byte [rax + 2], 0x31
0x00003450      75ce           jne 0x3420
0x00003452      80780338       cmp byte [rax + 3], 0x38
0x00003456      75c8           jne 0x3420
0x00003458      80780430       cmp byte [rax + 4], 0x30
0x0000345c      75c2           jne 0x3420
0x0000345e      80780533       cmp byte [rax + 5], 0x33
0x00003462      75bc           jne 0x3420
0x00003464      80780630       cmp byte [rax + 6], 0x30
0x00003468      75b6           jne 0x3420
0x0000346a      80780700       cmp byte [rax + 7], 0
0x0000346e      75b0           jne 0x3420
0x00003470      807d0060       cmp byte [rbp], 0x60
0x00003474      488d05f15300.  lea rax, [0x0000886c]
0x0000347b      488d15ee5300.  lea rdx, [0x00008870]
0x00003482      480f45c2       cmovne rax, rdx
0x00003486      4883c408       add rsp, 8
0x0000348a      5b             pop rbx
0x0000348b      5d             pop rbp
0x0000348c      c3             ret
0x0000348d      0f1f00         nop dword [rax]
0x00003490      0fb65001       movzx edx, byte [rax + 1]
0x00003494      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003497      80fa54         cmp dl, 0x54
0x0000349a      7584           jne 0x3420
0x0000349c      0fb65002       movzx edx, byte [rax + 2]
0x000034a0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000034a3      80fa46         cmp dl, 0x46
0x000034a6      0f8574ffffff   jne 0x3420
0x000034ac      8078032d       cmp byte [rax + 3], 0x2d
0x000034b0      0f856affffff   jne 0x3420
0x000034b6      80780438       cmp byte [rax + 4], 0x38
0x000034ba      0f8560ffffff   jne 0x3420
0x000034c0      80780500       cmp byte [rax + 5], 0
0x000034c4      0f8556ffffff   jne 0x3420
0x000034ca      807d0060       cmp byte [rbp], 0x60
0x000034ce      488d058f5300.  lea rax, [0x00008864]                   ; "\u2018"
0x000034d5      488d158c5300.  lea rdx, [0x00008868]                   ; "\u2019"
0x000034dc      480f45c2       cmovne rax, rdx
0x000034e0      4883c408       add rsp, 8
0x000034e4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000034e5      5d             pop rbp
0x000034e6      c3             ret
0x000034e7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000034f0      4157           push r15
0x000034f2      4156           push r14
0x000034f4      4589c7         mov r15d, r8d
0x000034f7      4155           push r13
0x000034f9      4154           push r12
0x000034fb      4989fe         mov r14, rdi
0x000034fe      55             push rbp
0x000034ff      53             push rbx
0x00003500      4489cb         mov ebx, r9d
0x00003503      4989f5         mov r13, rsi
0x00003506      4889cd         mov rbp, rcx
0x00003509      83e302         and ebx, 2
0x0000350c      4881ecb80000.  sub rsp, 0xb8
0x00003513      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000351b      4889542410     mov qword [rsp + 0x10], rdx
0x00003520      4489442408     mov dword [rsp + 8], r8d
0x00003525      44894c2478     mov dword [rsp + 0x78], r9d
0x0000352a      4889442420     mov qword [rsp + 0x20], rax
0x0000352f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00003537      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000353c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00003544      4889442460     mov qword [rsp + 0x60], rax
0x00003549      64488b042528.  mov rax, qword fs:[0x28]
0x00003552      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000355a      31c0           xor eax, eax
0x0000355c      e8efe0ffff     call sym.imp.__ctype_get_mb_cur_max
0x00003561      4183ff0a       cmp r15d, 0xa
0x00003565      4889442458     mov qword [rsp + 0x58], rax
0x0000356a      0f87af110000   ja 0x471f
0x00003570      488d0d695300.  lea rcx, [0x000088e0]
0x00003577      4489fa         mov edx, r15d
0x0000357a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000357e      4801c8         add rax, rcx
0x00003581      ffe0           jmp rax
0x00003583      c644240e01     mov byte [rsp + 0xe], 1
0x00003588      c644247c00     mov byte [rsp + 0x7c], 0
0x0000358d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00003590      48c744245000.  mov qword [rsp + 0x50], 0
0x00003599      c644240f01     mov byte [rsp + 0xf], 1
0x0000359e      c644240d00     mov byte [rsp + 0xd], 0
0x000035a3      488d053d4b00.  lea rax, [0x000080e7]                   ; "'"
0x000035aa      48c744241801.  mov qword [rsp + 0x18], 1
0x000035b3      4531ff         xor r15d, r15d
0x000035b6      c74424080200.  mov dword [rsp + 8], 2
0x000035be      4889442448     mov qword [rsp + 0x48], rax
0x000035c3      4531db         xor r11d, r11d
0x000035c6      4889e8         mov rax, rbp
0x000035c9      4589e0         mov r8d, r12d
0x000035cc      4c89dd         mov rbp, r11
0x000035cf      4989c3         mov r11, rax
0x000035d2      660f1f440000   nop word [rax + rax]
0x000035d8      4939eb         cmp r11, rbp
0x000035db      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000035df      4983fbff       cmp r11, 0xffffffffffffffff
0x000035e3      750d           jne 0x35f2
0x000035e5      488b442410     mov rax, qword [rsp + 0x10]
0x000035ea      803c2800       cmp byte [rax + rbp], 0
0x000035ee      410f95c4       setne r12b
0x000035f2      4584e4         test r12b, r12b
0x000035f5      0f8455060000   je 0x3c50
0x000035fb      837c240802     cmp dword [rsp + 8], 2
0x00003600      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003605      4c8d0c2f       lea r9, [rdi + rbp]
0x00003609      0f95c0         setne al
0x0000360c      2244240d       and al, byte [rsp + 0xd]
0x00003610      4189c2         mov r10d, eax
0x00003613      0f84a7000000   je 0x36c0
0x00003619      488b442418     mov rax, qword [rsp + 0x18]
0x0000361e      4885c0         test rax, rax
0x00003621      0f8429040000   je 0x3a50
0x00003627      4983fbff       cmp r11, 0xffffffffffffffff
0x0000362b      488d5c0500     lea rbx, [rbp + rax]
0x00003630      752e           jne 0x3660
0x00003632      4883f801       cmp rax, 1
0x00003636      7628           jbe 0x3660
0x00003638      4488442438     mov byte [rsp + 0x38], r8b
0x0000363d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00003642      4c894c2428     mov qword [rsp + 0x28], r9
0x00003647      e814e0ffff     call sym.imp.strlen
0x0000364c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003652      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00003658      4989c3         mov r11, rax
0x0000365b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003660      4c39db         cmp rbx, r11
0x00003663      4488542428     mov byte [rsp + 0x28], r10b
0x00003668      0f87b2050000   ja 0x3c20
0x0000366e      488b542418     mov rdx, qword [rsp + 0x18]
0x00003673      488b742448     mov rsi, qword [rsp + 0x48]
0x00003678      4c89cf         mov rdi, r9
0x0000367b      4c895c2440     mov qword [rsp + 0x40], r11
0x00003680      4488442438     mov byte [rsp + 0x38], r8b
0x00003685      4c894c2430     mov qword [rsp + 0x30], r9
0x0000368a      e881e0ffff     call sym.imp.memcmp
0x0000368f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00003691      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003696      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000369c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x000036a1      0f8579050000   jne 0x3c20
0x000036a7      807c240f00     cmp byte [rsp + 0xf], 0
0x000036ac      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000036b2      0f857d0f0000   jne 0x4635
0x000036b8      0f1f84000000.  nop dword [rax + rax]
0x000036c0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x000036c4      80fb7e         cmp bl, 0x7e
0x000036c7      0f871b030000   ja 0x39e8
0x000036cd      488d0d385200.  lea rcx, [0x0000890c]
0x000036d4      0fb6d3         movzx edx, bl
0x000036d7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000036db      4801c8         add rax, rcx
0x000036de      ffe0           jmp rax
0x000036e0      4531d2         xor r10d, r10d
0x000036e3      4983fb01       cmp r11, 1
0x000036e7      0f95c0         setne al
0x000036ea      4983fbff       cmp r11, 0xffffffffffffffff
0x000036ee      750c           jne 0x36fc
0x000036f0      488b442410     mov rax, qword [rsp + 0x10]
0x000036f5      80780100       cmp byte [rax + 1], 0
0x000036f9      0f95c0         setne al
0x000036fc      837c240802     cmp dword [rsp + 8], 2
0x00003701      0f94c2         sete dl
0x00003704      84c0           test al, al
0x00003706      0f844c020000   je 0x3958
0x0000370c      4531e4         xor r12d, r12d
0x0000370f      31c0           xor eax, eax
0x00003711      0f1f80000000.  nop dword [rax]
0x00003718      807c240d01     cmp byte [rsp + 0xd], 1
0x0000371d      0f850f010000   jne 0x3832
0x00003723      84d2           test dl, dl
0x00003725      0f8507010000   jne 0x3832
0x0000372b      488b742420     mov rsi, qword [rsp + 0x20]
0x00003730      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00003733      7414           je 0x3749
0x00003735      89da           mov edx, ebx
0x00003737      c0ea05         shr dl, 5
0x0000373a      0fb6d2         movzx edx, dl
0x0000373d      8b1496         mov edx, dword [rsi + rdx*4]
0x00003740      0fa3da         bt edx, ebx
0x00003743      0f824a010000   jb 0x3893
0x00003749      4584d2         test r10b, r10b
0x0000374c      0f8541010000   jne 0x3893
0x00003752      83f001         xor eax, 1
0x00003755      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00003759      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000375c      84c0           test al, al
0x0000375e      7420           je 0x3780                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003760      4d39fd         cmp r13, r15
0x00003763      7605           jbe 0x376a
0x00003765      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000376a      498d4701       lea rax, [r15 + 1]
0x0000376e      4939c5         cmp r13, rax
0x00003771      7606           jbe 0x3779
0x00003773      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003779      4983c702       add r15, 2
0x0000377d      4531c0         xor r8d, r8d
0x00003780      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003783      7304           jae 0x3789                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003785      43881c3e       mov byte [r14 + r15], bl
0x00003789      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000378e      4983c701       add r15, 1
0x00003792      b800000000     mov eax, 0
0x00003797      4584e4         test r12b, r12b
0x0000379a      0f44f8         cmove edi, eax
0x0000379d      40887c240e     mov byte [rsp + 0xe], dil
0x000037a2      e931feffff     jmp 0x35d8
0x000037a7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000037b0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000037b3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000037b7      83f802         cmp eax, 2
0x000037ba      0f84b8050000   je 0x3d78
0x000037c0      83f805         cmp eax, 5
0x000037c3      0f846f050000   je 0x3d38
0x000037c9      83f802         cmp eax, 2
0x000037cc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000037d1      0f94c2         sete dl
0x000037d4      4531e4         xor r12d, r12d
0x000037d7      31c0           xor eax, eax
0x000037d9      e93affffff     jmp 0x3718
0x000037de      6690           nop
0x000037e0      4531d2         xor r10d, r10d
0x000037e3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000037e8      0f8402050000   je 0x3cf0
0x000037ee      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x000037f3      31d2           xor edx, edx
0x000037f5      31c0           xor eax, eax
0x000037f7      bb27000000     mov ebx, 0x27                           ; '''
0x000037fc      e917ffffff     jmp 0x3718
0x00003801      0f1f80000000.  nop dword [rax]
0x00003808      ba09000000     mov edx, 9
0x0000380d      bb74000000     mov ebx, 0x74                           ; 't'
0x00003812      837c240802     cmp dword [rsp + 8], 2
0x00003817      0f94c0         sete al
0x0000381a      2244240f       and al, byte [rsp + 0xf]
0x0000381e      0f854a010000   jne 0x396e
0x00003824      807c240d00     cmp byte [rsp + 0xd], 0
0x00003829      7565           jne 0x3890
0x0000382b      89d3           mov ebx, edx
0x0000382d      4531e4         xor r12d, r12d
0x00003830      31c0           xor eax, eax
0x00003832      807c240f00     cmp byte [rsp + 0xf], 0
0x00003837      0f85eefeffff   jne 0x372b
0x0000383d      e907ffffff     jmp 0x3749                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00003842      660f1f440000   nop word [rax + rax]
0x00003848      ba08000000     mov edx, 8
0x0000384d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003852      ebd0           jmp 0x3824
0x00003854      0f1f4000       nop dword [rax]
0x00003858      837c240802     cmp dword [rsp + 8], 2
0x0000385d      0f84cd030000   je 0x3c30
0x00003863      807c240d00     cmp byte [rsp + 0xd], 0
0x00003868      0f8412020000   je 0x3a80
0x0000386e      807c240f00     cmp byte [rsp + 0xf], 0
0x00003873      0f8407020000   je 0x3a80
0x00003879      48837c241800   cmp qword [rsp + 0x18], 0
0x0000387f      0f85b6030000   jne 0x3c3b
0x00003885      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000388a      660f1f440000   nop word [rax + rax]
0x00003890      4531e4         xor r12d, r12d
0x00003893      837c240802     cmp dword [rsp + 8], 2
0x00003898      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000389b      807c240f00     cmp byte [rsp + 0xf], 0
0x000038a0      89d0           mov eax, edx
0x000038a2      0f8550080000   jne 0x40f8
0x000038a8      4489c0         mov eax, r8d
0x000038ab      83f001         xor eax, 1
0x000038ae      20d0           and al, dl
0x000038b0      742f           je 0x38e1
0x000038b2      4d39fd         cmp r13, r15
0x000038b5      7605           jbe 0x38bc
0x000038b7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000038bc      498d5701       lea rdx, [r15 + 1]
0x000038c0      4939d5         cmp r13, rdx
0x000038c3      7606           jbe 0x38cb
0x000038c5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000038cb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x000038cf      4939d5         cmp r13, rdx
0x000038d2      7606           jbe 0x38da
0x000038d4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000038da      4983c703       add r15, 3
0x000038de      4189c0         mov r8d, eax
0x000038e1      4d39fd         cmp r13, r15
0x000038e4      7605           jbe 0x38eb
0x000038e6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000038eb      4983c701       add r15, 1
0x000038ef      4883c501       add rbp, 1
0x000038f3      e988feffff     jmp 0x3780
0x000038f8      0f1f84000000.  nop dword [rax + rax]
0x00003900      807c240d00     cmp byte [rsp + 0xd], 0
0x00003905      0f85c8010000   jne 0x3ad3
0x0000390b      31d2           xor edx, edx
0x0000390d      f644247801     test byte [rsp + 0x78], 1
0x00003912      0f8413ffffff   je 0x382b
0x00003918      4883c501       add rbp, 1
0x0000391c      e9b7fcffff     jmp 0x35d8
0x00003921      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003928      837c240802     cmp dword [rsp + 8], 2
0x0000392d      0f94c2         sete dl
0x00003930      31c0           xor eax, eax
0x00003932      e9e1fdffff     jmp 0x3718
0x00003937      660f1f840000.  nop word [rax + rax]
0x00003940      ba07000000     mov edx, 7
0x00003945      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000394a      e9d5feffff     jmp 0x3824
0x0000394f      90             nop
0x00003950      837c240802     cmp dword [rsp + 8], 2
0x00003955      0f94c2         sete dl
0x00003958      4885ed         test rbp, rbp
0x0000395b      0f85abfdffff   jne 0x370c
0x00003961      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003966      20d0           and al, dl
0x00003968      0f84aafdffff   je 0x3718
0x0000396e      4c89dd         mov rbp, r11
0x00003971      c74424080200.  mov dword [rsp + 8], 2
0x00003979      e9fb060000     jmp 0x4079
0x0000397e      6690           nop
0x00003980      837c240802     cmp dword [rsp + 8], 2
0x00003985      0f94c2         sete dl
0x00003988      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000398b      ebd4           jmp 0x3961
0x0000398d      0f1f00         nop dword [rax]
0x00003990      837c240802     cmp dword [rsp + 8], 2
0x00003995      bb20000000     mov ebx, 0x20                           ; "@"
0x0000399a      0f94c2         sete dl
0x0000399d      ebc2           jmp 0x3961
0x0000399f      90             nop
0x000039a0      ba0d000000     mov edx, 0xd
0x000039a5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000039aa      e963feffff     jmp 0x3812
0x000039af      90             nop
0x000039b0      ba0c000000     mov edx, 0xc
0x000039b5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000039ba      e965feffff     jmp 0x3824
0x000039bf      90             nop
0x000039c0      ba0b000000     mov edx, 0xb
0x000039c5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000039ca      e955feffff     jmp 0x3824
0x000039cf      90             nop
0x000039d0      ba0a000000     mov edx, 0xa
0x000039d5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000039da      e933feffff     jmp 0x3812
0x000039df      90             nop
0x000039e0      4531d2         xor r10d, r10d
0x000039e3      0f1f440000     nop dword [rax + rax]
0x000039e8      48837c245801   cmp qword [rsp + 0x58], 1
0x000039ee      0f85a4030000   jne 0x3d98
0x000039f4      4c895c2438     mov qword [rsp + 0x38], r11
0x000039f9      4488442430     mov byte [rsp + 0x30], r8b
0x000039fe      4488542428     mov byte [rsp + 0x28], r10b
0x00003a03      e8b8deffff     call sym.imp.__ctype_b_loc
0x00003a08      488b08         mov rcx, qword [rax]
0x00003a0b      0fb6d3         movzx edx, bl
0x00003a0e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003a14      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00003a1a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00003a1f      bf01000000     mov edi, 1
0x00003a24      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003a28      66250040       and ax, 0x4000
0x00003a2c      410f95c4       setne r12b
0x00003a30      0f94c0         sete al
0x00003a33      2244240d       and al, byte [rsp + 0xd]
0x00003a37      84c0           test al, al
0x00003a39      0f8592090000   jne 0x43d1
0x00003a3f      837c240802     cmp dword [rsp + 8], 2
0x00003a44      0f94c2         sete dl
0x00003a47      e9ccfcffff     jmp 0x3718
0x00003a4c      0f1f4000       nop dword [rax]
0x00003a50      410fb619       movzx ebx, byte [r9]
0x00003a54      80fb7e         cmp bl, 0x7e
0x00003a57      7787           ja 0x39e0
0x00003a59      488d0da85000.  lea rcx, [0x00008b08]
0x00003a60      0fb6d3         movzx edx, bl
0x00003a63      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003a67      4801c8         add rax, rcx
0x00003a6a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00003a6c      0f1f4000       nop dword [rax]
0x00003a70      4531d2         xor r10d, r10d
0x00003a73      807c240d00     cmp byte [rsp + 0xd], 0
0x00003a78      0f85f0fdffff   jne 0x386e
0x00003a7e      6690           nop
0x00003a80      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003a85      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003a8a      e995fdffff     jmp 0x3824
0x00003a8f      90             nop
0x00003a90      ba0c000000     mov edx, 0xc
0x00003a95      4531d2         xor r10d, r10d
0x00003a98      bb66000000     mov ebx, 0x66                           ; 'f'
0x00003a9d      e982fdffff     jmp 0x3824
0x00003aa2      660f1f440000   nop word [rax + rax]
0x00003aa8      ba0a000000     mov edx, 0xa
0x00003aad      4531d2         xor r10d, r10d
0x00003ab0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003ab5      e958fdffff     jmp 0x3812
0x00003aba      660f1f440000   nop word [rax + rax]
0x00003ac0      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003ac5      e9c6fdffff     jmp 0x3890
0x00003aca      660f1f440000   nop word [rax + rax]
0x00003ad0      4531d2         xor r10d, r10d
0x00003ad3      837c240802     cmp dword [rsp + 8], 2
0x00003ad8      0f94c2         sete dl
0x00003adb      807c240f00     cmp byte [rsp + 0xf], 0
0x00003ae0      0f85940b0000   jne 0x467a
0x00003ae6      4489c0         mov eax, r8d
0x00003ae9      4c89f9         mov rcx, r15
0x00003aec      83f001         xor eax, 1
0x00003aef      20d0           and al, dl
0x00003af1      742d           je 0x3b20
0x00003af3      4d39fd         cmp r13, r15
0x00003af6      7605           jbe 0x3afd
0x00003af8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003afd      498d4f01       lea rcx, [r15 + 1]
0x00003b01      4939cd         cmp r13, rcx
0x00003b04      7606           jbe 0x3b0c
0x00003b06      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003b0c      498d4f02       lea rcx, [r15 + 2]
0x00003b10      4939cd         cmp r13, rcx
0x00003b13      0f8730060000   ja 0x4149
0x00003b19      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00003b1d      4189c0         mov r8d, eax
0x00003b20      4939cd         cmp r13, rcx
0x00003b23      7605           jbe 0x3b2a
0x00003b25      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003b2a      837c240802     cmp dword [rsp + 8], 2
0x00003b2f      4c8d7901       lea r15, [rcx + 1]
0x00003b33      0f8400060000   je 0x4139
0x00003b39      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003b3d      4c39d8         cmp rax, r11
0x00003b40      7319           jae 0x3b5b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003b42      488b442410     mov rax, qword [rsp + 0x10]
0x00003b47      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00003b4c      88442428       mov byte [rsp + 0x28], al
0x00003b50      83e830         sub eax, 0x30
0x00003b53      3c09           cmp al, 9
0x00003b55      0f862e080000   jbe 0x4389
0x00003b5b      4489e0         mov eax, r12d
0x00003b5e      bb30000000     mov ebx, 0x30                           ; '0'
0x00003b63      4531e4         xor r12d, r12d
0x00003b66      e9adfbffff     jmp 0x3718                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00003b6b      0f1f440000     nop dword [rax + rax]
0x00003b70      837c240802     cmp dword [rsp + 8], 2
0x00003b75      4589d4         mov r12d, r10d
0x00003b78      0f94c2         sete dl
0x00003b7b      4531d2         xor r10d, r10d
0x00003b7e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003b80      e993fbffff     jmp 0x3718                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003b85      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003b88      837c240802     cmp dword [rsp + 8], 2
0x00003b8d      0f94c2         sete dl
0x00003b90      4531d2         xor r10d, r10d
0x00003b93      e9c0fdffff     jmp 0x3958
0x00003b98      0f1f84000000.  nop dword [rax + rax]
0x00003ba0      837c240802     cmp dword [rsp + 8], 2
0x00003ba5      0f94c2         sete dl
0x00003ba8      4531d2         xor r10d, r10d
0x00003bab      4531e4         xor r12d, r12d
0x00003bae      e9aefdffff     jmp 0x3961
0x00003bb3      0f1f440000     nop dword [rax + rax]
0x00003bb8      837c240802     cmp dword [rsp + 8], 2
0x00003bbd      4589d4         mov r12d, r10d
0x00003bc0      bb20000000     mov ebx, 0x20                           ; "@"
0x00003bc5      0f94c2         sete dl
0x00003bc8      4531d2         xor r10d, r10d
0x00003bcb      e991fdffff     jmp 0x3961
0x00003bd0      ba0d000000     mov edx, 0xd
0x00003bd5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003bd8      bb72000000     mov ebx, 0x72                           ; 'r'
0x00003bdd      e930fcffff     jmp 0x3812
0x00003be2      660f1f440000   nop word [rax + rax]
0x00003be8      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003bed      e99efcffff     jmp 0x3890
0x00003bf2      660f1f440000   nop word [rax + rax]
0x00003bf8      ba09000000     mov edx, 9
0x00003bfd      4531d2         xor r10d, r10d
0x00003c00      bb74000000     mov ebx, 0x74                           ; 't'
0x00003c05      e908fcffff     jmp 0x3812
0x00003c0a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003c10      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003c15      e976fcffff     jmp 0x3890
0x00003c1a      660f1f440000   nop word [rax + rax]
0x00003c20      4531d2         xor r10d, r10d
0x00003c23      e998faffff     jmp 0x36c0
0x00003c28      0f1f84000000.  nop dword [rax + rax]
0x00003c30      807c240f00     cmp byte [rsp + 0xf], 0
0x00003c35      0f8565090000   jne 0x45a0
0x00003c3b      4883c501       add rbp, 1
0x00003c3f      4489c0         mov eax, r8d
0x00003c42      4531e4         xor r12d, r12d
0x00003c45      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003c4a      e90dfbffff     jmp 0x375c
0x00003c4f      90             nop
0x00003c50      837c240802     cmp dword [rsp + 8], 2
0x00003c55      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003c5a      4589c4         mov r12d, r8d
0x00003c5d      4c89dd         mov rbp, r11
0x00003c60      0f94c2         sete dl
0x00003c63      89d8           mov eax, ebx
0x00003c65      4d85ff         test r15, r15
0x00003c68      0f94c1         sete cl
0x00003c6b      21d0           and eax, edx
0x00003c6d      20c8           and al, cl
0x00003c6f      0f85610a0000   jne 0x46d6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003c75      89d8           mov eax, ebx
0x00003c77      83f001         xor eax, 1
0x00003c7a      20c2           and dl, al
0x00003c7c      0f846a090000   je 0x45ec
0x00003c82      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003c87      0f845d090000   je 0x45ea
0x00003c8d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003c92      0f85f5090000   jne 0x468d
0x00003c98      4d85ed         test r13, r13
0x00003c9b      0f94c0         sete al
0x00003c9e      48837c245000   cmp qword [rsp + 0x50], 0
0x00003ca4      0f95c2         setne dl
0x00003ca7      20d0           and al, dl
0x00003ca9      0f841d0a0000   je 0x46cc
0x00003caf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003cb4      488d1d2c4400.  lea rbx, [0x000080e7]                   ; "'"
0x00003cbb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00003cbf      c74424080200.  mov dword [rsp + 8], 2
0x00003cc7      41bf01000000   mov r15d, 1
0x00003ccd      48c744241801.  mov qword [rsp + 0x18], 1
0x00003cd6      c644240f00     mov byte [rsp + 0xf], 0
0x00003cdb      48895c2448     mov qword [rsp + 0x48], rbx
0x00003ce0      8844247c       mov byte [rsp + 0x7c], al
0x00003ce4      e9daf8ffff     jmp 0x35c3
0x00003ce9      0f1f80000000.  nop dword [rax]
0x00003cf0      807c240f00     cmp byte [rsp + 0xf], 0
0x00003cf5      0f85a5080000   jne 0x45a0
0x00003cfb      4d85ed         test r13, r13
0x00003cfe      0f84fc030000   je 0x4100                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003d04      31d2           xor edx, edx
0x00003d06      48837c245000   cmp qword [rsp + 0x50], 0
0x00003d0c      0f85ee030000   jne 0x4100                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003d12      4c896c2450     mov qword [rsp + 0x50], r13
0x00003d17      4983c703       add r15, 3
0x00003d1b      31c0           xor eax, eax
0x00003d1d      448864247c     mov byte [rsp + 0x7c], r12b
0x00003d22      4531c0         xor r8d, r8d
0x00003d25      4989d5         mov r13, rdx
0x00003d28      bb27000000     mov ebx, 0x27                           ; '''
0x00003d2d      e917faffff     jmp 0x3749
0x00003d32      660f1f440000   nop word [rax + rax]
0x00003d38      f644247804     test byte [rsp + 0x78], 4
0x00003d3d      7421           je 0x3d60
0x00003d3f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003d43      4c39d9         cmp rcx, r11
0x00003d46      7318           jae 0x3d60
0x00003d48      488b442410     mov rax, qword [rsp + 0x10]
0x00003d4d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003d52      0f848a070000   je 0x44e2
0x00003d58      0f1f84000000.  nop dword [rax + rax]
0x00003d60      31d2           xor edx, edx
0x00003d62      4531e4         xor r12d, r12d
0x00003d65      31c0           xor eax, eax
0x00003d67      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003d6c      e9a7f9ffff     jmp 0x3718
0x00003d71      0f1f80000000.  nop dword [rax]
0x00003d78      807c240f00     cmp byte [rsp + 0xf], 0
0x00003d7d      0f851d080000   jne 0x45a0
0x00003d83      4531e4         xor r12d, r12d
0x00003d86      31c0           xor eax, eax
0x00003d88      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003d8d      e9b7f9ffff     jmp 0x3749                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003d92      660f1f440000   nop word [rax + rax]
0x00003d98      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003da0      4983fbff       cmp r11, 0xffffffffffffffff
0x00003da4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003db0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003db5      752d           jne 0x3de4
0x00003db7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003dbc      4488442440     mov byte [rsp + 0x40], r8b
0x00003dc1      4488542438     mov byte [rsp + 0x38], r10b
0x00003dc6      4c894c2430     mov qword [rsp + 0x30], r9
0x00003dcb      e890d8ffff     call sym.imp.strlen
0x00003dd0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003dd6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00003ddc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00003ddf      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003de4      488d84249c00.  lea rax, [rsp + 0x9c]
0x00003dec      31c9           xor ecx, ecx
0x00003dee      885c247e       mov byte [rsp + 0x7e], bl
0x00003df2      448844247d     mov byte [rsp + 0x7d], r8b
0x00003df7      4889cb         mov rbx, rcx
0x00003dfa      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003e02      4889442438     mov qword [rsp + 0x38], rax
0x00003e07      448854247f     mov byte [rsp + 0x7f], r10b
0x00003e0c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003e14      4c89742440     mov qword [rsp + 0x40], r14
0x00003e19      4c896c2470     mov qword [rsp + 0x70], r13
0x00003e1e      4c895c2430     mov qword [rsp + 0x30], r11
0x00003e23      488b442410     mov rax, qword [rsp + 0x10]
0x00003e28      4c8d741d00     lea r14, [rbp + rbx]
0x00003e2d      488b542430     mov rdx, qword [rsp + 0x30]
0x00003e32      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003e37      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00003e3c      4e8d2c30       lea r13, [rax + r14]
0x00003e40      4c29f2         sub rdx, r14
0x00003e43      4c89ee         mov rsi, r13
0x00003e46      e8751c0000     call sym.rpl_mbrtowc
0x00003e4b      4885c0         test rax, rax
0x00003e4e      4989c7         mov r15, rax
0x00003e51      744e           je 0x3ea1
0x00003e53      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003e57      0f8418060000   je 0x4475
0x00003e5d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003e61      0f849a050000   je 0x4401
0x00003e67      837c240802     cmp dword [rsp + 8], 2
0x00003e6c      0f94c0         sete al
0x00003e6f      2244240f       and al, byte [rsp + 0xf]
0x00003e73      0f8597010000   jne 0x4010
0x00003e79      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003e80      e82bdaffff     call sym.imp.iswprint
0x00003e85      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00003e8a      85c0           test eax, eax
0x00003e8c      b800000000     mov eax, 0
0x00003e91      440f44e0       cmove r12d, eax
0x00003e95      4c01fb         add rbx, r15
0x00003e98      e803daffff     call sym.imp.mbsinit
0x00003e9d      85c0           test eax, eax
0x00003e9f      7482           je 0x3e23
0x00003ea1      4489e2         mov edx, r12d
0x00003ea4      4889df         mov rdi, rbx
0x00003ea7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003ead      83f201         xor edx, 1
0x00003eb0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003eb5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003ebb      2254240d       and dl, byte [rsp + 0xd]
0x00003ebf      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003ec7      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003ecc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003ed1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003ed6      4883ff01       cmp rdi, 1
0x00003eda      0f86fb050000   jbe 0x44db
0x00003ee0      4889f9         mov rcx, rdi
0x00003ee3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003ee5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00003eeb      4801e9         add rcx, rbp
0x00003eee      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003ef3      e9b6000000     jmp 0x3fae
0x00003ef8      0f1f84000000.  nop dword [rax + rax]
0x00003f00      837c240802     cmp dword [rsp + 8], 2
0x00003f05      0f94c0         sete al
0x00003f08      4584c9         test r9b, r9b
0x00003f0b      0f85af040000   jne 0x43c0
0x00003f11      4489c6         mov esi, r8d
0x00003f14      83f601         xor esi, 1
0x00003f17      4020f0         and al, sil
0x00003f1a      742f           je 0x3f4b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00003f1c      4d39fd         cmp r13, r15
0x00003f1f      7605           jbe 0x3f26
0x00003f21      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003f26      498d7701       lea rsi, [r15 + 1]
0x00003f2a      4939f5         cmp r13, rsi
0x00003f2d      7606           jbe 0x3f35                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00003f2f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003f35      498d7702       lea rsi, [r15 + 2]
0x00003f39      4939f5         cmp r13, rsi
0x00003f3c      7606           jbe 0x3f44
0x00003f3e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003f44      4983c703       add r15, 3
0x00003f48      4189c0         mov r8d, eax
0x00003f4b      4d39fd         cmp r13, r15
0x00003f4e      7605           jbe 0x3f55
0x00003f50      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003f55      498d4701       lea rax, [r15 + 1]
0x00003f59      4939c5         cmp r13, rax
0x00003f5c      760d           jbe 0x3f6b
0x00003f5e      89d8           mov eax, ebx
0x00003f60      c0e806         shr al, 6
0x00003f63      83c030         add eax, 0x30
0x00003f66      4388443e01     mov byte [r14 + r15 + 1], al
0x00003f6b      498d4702       lea rax, [r15 + 2]
0x00003f6f      4939c5         cmp r13, rax
0x00003f72      7610           jbe 0x3f84
0x00003f74      89d8           mov eax, ebx
0x00003f76      c0e803         shr al, 3
0x00003f79      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00003f7c      83c030         add eax, 0x30
0x00003f7f      4388443e02     mov byte [r14 + r15 + 2], al
0x00003f84      83e307         and ebx, 7
0x00003f87      4883c501       add rbp, 1
0x00003f8b      4983c703       add r15, 3
0x00003f8f      83c330         add ebx, 0x30
0x00003f92      4839cd         cmp rbp, rcx
0x00003f95      0f83e5f7ffff   jae 0x3780
0x00003f9b      89d6           mov esi, edx
0x00003f9d      4d39fd         cmp r13, r15
0x00003fa0      7604           jbe 0x3fa6
0x00003fa2      43881c3e       mov byte [r14 + r15], bl
0x00003fa6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003faa      4983c701       add r15, 1
0x00003fae      84d2           test dl, dl
0x00003fb0      0f854affffff   jne 0x3f00
0x00003fb6      89f0           mov eax, esi
0x00003fb8      83f001         xor eax, 1
0x00003fbb      4421c0         and eax, r8d
0x00003fbe      4584d2         test r10b, r10b
0x00003fc1      740e           je 0x3fd1
0x00003fc3      4d39fd         cmp r13, r15
0x00003fc6      7605           jbe 0x3fcd
0x00003fc8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003fcd      4983c701       add r15, 1
0x00003fd1      4883c501       add rbp, 1
0x00003fd5      4839cd         cmp rbp, rcx
0x00003fd8      0f837ef7ffff   jae 0x375c
0x00003fde      84c0           test al, al
0x00003fe0      0f84f8030000   je 0x43de
0x00003fe6      4d39fd         cmp r13, r15
0x00003fe9      7605           jbe 0x3ff0
0x00003feb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003ff0      498d4701       lea rax, [r15 + 1]
0x00003ff4      4939c5         cmp r13, rax
0x00003ff7      7606           jbe 0x3fff
0x00003ff9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003fff      4983c702       add r15, 2
0x00004003      4531d2         xor r10d, r10d
0x00004006      4531c0         xor r8d, r8d
0x00004009      eb92           jmp 0x3f9d
0x0000400b      0f1f440000     nop dword [rax + rax]
0x00004010      4983ff01       cmp r15, 1
0x00004014      0f845ffeffff   je 0x3e79
0x0000401a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000401f      4a8d0c3f       lea rcx, [rdi + r15]
0x00004023      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00004028      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000402c      eb0f           jmp 0x403d
0x0000402e      6690           nop
0x00004030      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00004034      4939d0         cmp r8, rdx
0x00004037      0f843cfeffff   je 0x3e79
0x0000403d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00004040      83e95b         sub ecx, 0x5b
0x00004043      80f921         cmp cl, 0x21
0x00004046      77e8           ja 0x4030                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00004048      be01000000     mov esi, 1
0x0000404d      48d3e6         shl rsi, cl
0x00004050      4889f1         mov rcx, rsi
0x00004053      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000405d      4885f1         test rcx, rsi
0x00004060      74ce           je 0x4030
0x00004062      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004067      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000406c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00004071      c74424080200.  mov dword [rsp + 8], 2
0x00004079      807c240d00     cmp byte [rsp + 0xd], 0
0x0000407e      7410           je 0x4090
0x00004080      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00004082      b804000000     mov eax, 4
0x00004087      0f44442408     cmove eax, dword [rsp + 8]
0x0000408c      89442408       mov dword [rsp + 8], eax
0x00004090      4883ec08       sub rsp, 8
0x00004094      4889e9         mov rcx, rbp
0x00004097      4c89ee         mov rsi, r13
0x0000409a      ff742468       push qword [rsp + 0x68]
0x0000409e      ff742478       push qword [rsp + 0x78]
0x000040a2      4c89f7         mov rdi, r14
0x000040a5      6a00           push 0
0x000040a7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000040af      448b442428     mov r8d, dword [rsp + 0x28]
0x000040b4      488b542430     mov rdx, qword [rsp + 0x30]
0x000040b9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x000040bd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x000040c2      4883c420       add rsp, 0x20
0x000040c6      4989c7         mov r15, rax
0x000040c9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x000040d1      6448331c2528.  xor rbx, qword fs:[0x28]
0x000040da      4c89f8         mov rax, r15
0x000040dd      0f8500060000   jne 0x46e3
0x000040e3      4881c4b80000.  add rsp, 0xb8
0x000040ea      5b             pop rbx
0x000040eb      5d             pop rbp
0x000040ec      415c           pop r12
0x000040ee      415d           pop r13
0x000040f0      415e           pop r14
0x000040f2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x000040f4      c3             ret
0x000040f5      0f1f00         nop dword [rax]
0x000040f8      4c89dd         mov rbp, r11
0x000040fb      e979ffffff     jmp 0x4079
0x00004100      4d39fd         cmp r13, r15
0x00004103      7605           jbe 0x410a
0x00004105      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000410a      498d4701       lea rax, [r15 + 1]
0x0000410e      4939c5         cmp r13, rax
0x00004111      7606           jbe 0x4119
0x00004113      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00004119      498d4702       lea rax, [r15 + 2]
0x0000411d      4939c5         cmp r13, rax
0x00004120      0f86ec050000   jbe 0x4712
0x00004126      4c89ea         mov rdx, r13
0x00004129      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000412f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004134      e9d9fbffff     jmp 0x3d12
0x00004139      4489e0         mov eax, r12d
0x0000413c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00004141      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00004144      e900f6ffff     jmp 0x3749                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00004149      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000414f      e9c5f9ffff     jmp 0x3b19
0x00004154      85db           test ebx, ebx
0x00004156      0f8527f4ffff   jne 0x3583
0x0000415c      c644240d01     mov byte [rsp + 0xd], 1
0x00004161      4d85ed         test r13, r13
0x00004164      0f8590050000   jne 0x46fa
0x0000416a      488d05763f00.  lea rax, [0x000080e7]                   ; "'"
0x00004171      48c744245000.  mov qword [rsp + 0x50], 0
0x0000417a      c644240e01     mov byte [rsp + 0xe], 1
0x0000417f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004184      4531e4         xor r12d, r12d
0x00004187      c644240f00     mov byte [rsp + 0xf], 0
0x0000418c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004195      4889442448     mov qword [rsp + 0x48], rax
0x0000419a      41bf01000000   mov r15d, 1
0x000041a0      c74424080200.  mov dword [rsp + 8], 2
0x000041a8      e916f4ffff     jmp 0x35c3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x000041ad      0f1f00         nop dword [rax]
0x000041b0      85db           test ebx, ebx
0x000041b2      0f85f5030000   jne 0x45ad
0x000041b8      4d85ed         test r13, r13
0x000041bb      0f8425020000   je 0x43e6
0x000041c1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x000041c5      c644240e01     mov byte [rsp + 0xe], 1
0x000041ca      4531e4         xor r12d, r12d
0x000041cd      c644247c00     mov byte [rsp + 0x7c], 0
0x000041d2      48c744245000.  mov qword [rsp + 0x50], 0
0x000041db      488d05914600.  lea rax, str.l______l                   ; 0x8873 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000041e2      c644240f00     mov byte [rsp + 0xf], 0
0x000041e7      c644240d01     mov byte [rsp + 0xd], 1
0x000041ec      48c744241801.  mov qword [rsp + 0x18], 1
0x000041f5      41bf01000000   mov r15d, 1
0x000041fb      4889442448     mov qword [rsp + 0x48], rax
0x00004200      e9bef3ffff     jmp 0x35c3
0x00004205      488d05674600.  lea rax, str.l______l                   ; 0x8873 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000420c      c644240e01     mov byte [rsp + 0xe], 1
0x00004211      c644247c00     mov byte [rsp + 0x7c], 0
0x00004216      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00004219      48c744245000.  mov qword [rsp + 0x50], 0
0x00004222      c644240f01     mov byte [rsp + 0xf], 1
0x00004227      c644240d01     mov byte [rsp + 0xd], 1
0x0000422c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004235      4531ff         xor r15d, r15d
0x00004238      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000423d      c74424080500.  mov dword [rsp + 8], 5
0x00004245      e979f3ffff     jmp 0x35c3
0x0000424a      c644240e01     mov byte [rsp + 0xe], 1
0x0000424f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004254      4531e4         xor r12d, r12d
0x00004257      48c744245000.  mov qword [rsp + 0x50], 0
0x00004260      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00004265      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00004268      c644240d01     mov byte [rsp + 0xd], 1
0x0000426d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004276      48c744244800.  mov qword [rsp + 0x48], 0
0x0000427f      e93ff3ffff     jmp 0x35c3
0x00004284      837c24080a     cmp dword [rsp + 8], 0xa
0x00004289      7456           je 0x42e1
0x0000428b      488d35e34500.  lea rsi, [0x00008875]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00004292      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00004294      ba05000000     mov edx, 5
0x00004299      e8a2d3ffff     call sym.imp.dcgettext
0x0000429e      4889c1         mov rcx, rax
0x000042a1      4889442468     mov qword [rsp + 0x68], rax
0x000042a6      488d05c84500.  lea rax, [0x00008875]                   ; "`"
0x000042ad      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x000042b0      0f8498030000   je 0x464e
0x000042b6      488d352a3e00.  lea rsi, [0x000080e7]                   ; "'"
0x000042bd      31ff           xor edi, edi
0x000042bf      ba05000000     mov edx, 5
0x000042c4      e877d3ffff     call sym.imp.dcgettext
0x000042c9      4889c1         mov rcx, rax
0x000042cc      4889442460     mov qword [rsp + 0x60], rax
0x000042d1      488d050f3e00.  lea rax, [0x000080e7]                   ; "'"
0x000042d8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000042db      0f8483030000   je 0x4664
0x000042e1      4531ff         xor r15d, r15d
0x000042e4      85db           test ebx, ebx
0x000042e6      0f84c1010000   je 0x44ad
0x000042ec      85db           test ebx, ebx
0x000042ee      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000042f3      0f9544240f     setne byte [rsp + 0xf]
0x000042f8      4531e4         xor r12d, r12d
0x000042fb      4889df         mov rdi, rbx
0x000042fe      e85dd3ffff     call sym.imp.strlen
0x00004303      48895c2448     mov qword [rsp + 0x48], rbx
0x00004308      4889442418     mov qword [rsp + 0x18], rax
0x0000430d      c644240e01     mov byte [rsp + 0xe], 1
0x00004312      c644247c00     mov byte [rsp + 0x7c], 0
0x00004317      48c744245000.  mov qword [rsp + 0x50], 0
0x00004320      c644240d01     mov byte [rsp + 0xd], 1
0x00004325      e999f2ffff     jmp 0x35c3
0x0000432a      c644240e01     mov byte [rsp + 0xe], 1
0x0000432f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004334      4531e4         xor r12d, r12d
0x00004337      48c744245000.  mov qword [rsp + 0x50], 0
0x00004340      c644240f00     mov byte [rsp + 0xf], 0
0x00004345      4531ff         xor r15d, r15d
0x00004348      c644240d00     mov byte [rsp + 0xd], 0
0x0000434d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004356      48c744244800.  mov qword [rsp + 0x48], 0
0x0000435f      e95ff2ffff     jmp 0x35c3
0x00004364      c644240e01     mov byte [rsp + 0xe], 1
0x00004369      c644247c00     mov byte [rsp + 0x7c], 0
0x0000436e      4531e4         xor r12d, r12d
0x00004371      48c744245000.  mov qword [rsp + 0x50], 0
0x0000437a      c644240f01     mov byte [rsp + 0xf], 1
0x0000437f      c644240d01     mov byte [rsp + 0xd], 1
0x00004384      e91af2ffff     jmp 0x35a3
0x00004389      4d39fd         cmp r13, r15
0x0000438c      7605           jbe 0x4393
0x0000438e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00004393      488d4102       lea rax, [rcx + 2]
0x00004397      4939c5         cmp r13, rax
0x0000439a      7606           jbe 0x43a2
0x0000439c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x000043a2      4489e0         mov eax, r12d
0x000043a5      4c8d7903       lea r15, [rcx + 3]
0x000043a9      4531e4         xor r12d, r12d
0x000043ac      bb30000000     mov ebx, 0x30                           ; '0'
0x000043b1      e962f3ffff     jmp 0x3718
0x000043b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000043c0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000043c5      4c89dd         mov rbp, r11
0x000043c8      885c240d       mov byte [rsp + 0xd], bl
0x000043cc      e9a8fcffff     jmp 0x4079
0x000043d1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000043d6      4531e4         xor r12d, r12d
0x000043d9      e902fbffff     jmp 0x3ee0
0x000043de      4531d2         xor r10d, r10d
0x000043e1      e9b7fbffff     jmp 0x3f9d
0x000043e6      48c744245000.  mov qword [rsp + 0x50], 0
0x000043ef      c644240e01     mov byte [rsp + 0xe], 1
0x000043f4      4531e4         xor r12d, r12d
0x000043f7      c644247c00     mov byte [rsp + 0x7c], 0
0x000043fc      e9dafdffff     jmp 0x41db
0x00004401      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004406      4c89f6         mov rsi, r14
0x00004409      4c89e9         mov rcx, r13
0x0000440c      4889d8         mov rax, rbx
0x0000440f      4889df         mov rdi, rbx
0x00004412      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004418      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000441d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00004425      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00004428      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000442e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004436      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000443b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004440      7326           jae 0x4468
0x00004442      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004445      7510           jne 0x4457
0x00004447      eb1f           jmp 0x4468
0x00004449      0f1f80000000.  nop dword [rax]
0x00004450      41803c0100     cmp byte [r9 + rax], 0
0x00004455      740e           je 0x4465
0x00004457      4883c001       add rax, 1
0x0000445b      488d540500     lea rdx, [rbp + rax]
0x00004460      4939d3         cmp r11, rdx
0x00004463      77eb           ja 0x4450
0x00004465      4889c7         mov rdi, rax
0x00004468      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000446d      4531e4         xor r12d, r12d
0x00004470      e961faffff     jmp 0x3ed6
0x00004475      4889df         mov rdi, rbx
0x00004478      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000447e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004483      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004489      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004491      4531e4         xor r12d, r12d
0x00004494      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004499      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000449e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000044a3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000044a8      e929faffff     jmp 0x3ed6
0x000044ad      488b542468     mov rdx, qword [rsp + 0x68]
0x000044b2      0fb602         movzx eax, byte [rdx]
0x000044b5      84c0           test al, al
0x000044b7      0f842ffeffff   je 0x42ec
0x000044bd      0f1f00         nop dword [rax]
0x000044c0      4d39fd         cmp r13, r15
0x000044c3      7604           jbe 0x44c9
0x000044c5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000044c9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000044cd      420fb6043a     movzx eax, byte [rdx + r15]
0x000044d2      84c0           test al, al
0x000044d4      75ea           jne 0x44c0
0x000044d6      e911feffff     jmp 0x42ec
0x000044db      89d0           mov eax, edx
0x000044dd      e955f5ffff     jmp 0x3a37
0x000044e2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000044e6      80fb3e         cmp bl, 0x3e
0x000044e9      0f8771f8ffff   ja 0x3d60
0x000044ef      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000044f9      480fa3d8       bt rax, rbx
0x000044fd      0f835df8ffff   jae 0x3d60
0x00004503      807c240f00     cmp byte [rsp + 0xf], 0
0x00004508      0f85e4010000   jne 0x46f2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000450e      4d39fd         cmp r13, r15
0x00004511      7605           jbe 0x4518
0x00004513      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00004518      498d4701       lea rax, [r15 + 1]
0x0000451c      4939c5         cmp r13, rax
0x0000451f      7606           jbe 0x4527
0x00004521      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004527      498d4702       lea rax, [r15 + 2]
0x0000452b      4939c5         cmp r13, rax
0x0000452e      7606           jbe 0x4536
0x00004530      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004536      498d4703       lea rax, [r15 + 3]
0x0000453a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000453d      7606           jbe 0x4545
0x0000453f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00004545      4983c704       add r15, 4
0x00004549      31d2           xor edx, edx
0x0000454b      4531e4         xor r12d, r12d
0x0000454e      31c0           xor eax, eax
0x00004550      4889cd         mov rbp, rcx
0x00004553      e9c0f1ffff     jmp 0x3718
0x00004558      85db           test ebx, ebx
0x0000455a      0f8488010000   je 0x46e8
0x00004560      488d05803b00.  lea rax, [0x000080e7]                   ; "'"
0x00004567      c644240e01     mov byte [rsp + 0xe], 1
0x0000456c      c644247c00     mov byte [rsp + 0x7c], 0
0x00004571      4531e4         xor r12d, r12d
0x00004574      48c744245000.  mov qword [rsp + 0x50], 0
0x0000457d      c644240f01     mov byte [rsp + 0xf], 1
0x00004582      c644240d00     mov byte [rsp + 0xd], 0
0x00004587      48c744241801.  mov qword [rsp + 0x18], 1
0x00004590      4531ff         xor r15d, r15d
0x00004593      4889442448     mov qword [rsp + 0x48], rax
0x00004598      e926f0ffff     jmp 0x35c3
0x0000459d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x000045a0      4c89dd         mov rbp, r11
0x000045a3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000045a8      e9ccfaffff     jmp 0x4079
0x000045ad      488d05bf4200.  lea rax, str.l______l                   ; 0x8873 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000045b4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x000045b9      c644247c00     mov byte [rsp + 0x7c], 0
0x000045be      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x000045c1      48c744245000.  mov qword [rsp + 0x50], 0
0x000045ca      c644240f01     mov byte [rsp + 0xf], 1
0x000045cf      c644240d01     mov byte [rsp + 0xd], 1
0x000045d4      48c744241801.  mov qword [rsp + 0x18], 1
0x000045dd      4531ff         xor r15d, r15d
0x000045e0      4889442448     mov qword [rsp + 0x48], rax
0x000045e5      e9d9efffff     jmp 0x35c3
0x000045ea      89d0           mov eax, edx
0x000045ec      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000045f1      4885db         test rbx, rbx
0x000045f4      742c           je 0x4622
0x000045f6      84c0           test al, al
0x000045f8      7428           je 0x4622
0x000045fa      0fb60b         movzx ecx, byte [rbx]
0x000045fd      4889d8         mov rax, rbx
0x00004600      84c9           test cl, cl
0x00004602      741e           je 0x4622
0x00004604      4c89fa         mov rdx, r15
0x00004607      4c29f8         sub rax, r15
0x0000460a      4939d5         cmp r13, rdx
0x0000460d      7604           jbe 0x4613
0x0000460f      41880c16       mov byte [r14 + rdx], cl
0x00004613      4883c201       add rdx, 1
0x00004617      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000461b      84c9           test cl, cl
0x0000461d      75eb           jne 0x460a
0x0000461f      4989d7         mov r15, rdx
0x00004622      4d39fd         cmp r13, r15
0x00004625      0f869efaffff   jbe 0x40c9
0x0000462b      43c6043e00     mov byte [r14 + r15], 0
0x00004630      e994faffff     jmp 0x40c9
0x00004635      837c240802     cmp dword [rsp + 8], 2
0x0000463a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000463f      4c89dd         mov rbp, r11
0x00004642      0f94c0         sete al
0x00004645      885c240d       mov byte [rsp + 0xd], bl
0x00004649      e92bfaffff     jmp 0x4079
0x0000464e      8b742408       mov esi, dword [rsp + 8]
0x00004652      4889cf         mov rdi, rcx
0x00004655      e8a6edffff     call sym.gettext_quote.part.1
0x0000465a      4889442468     mov qword [rsp + 0x68], rax
0x0000465f      e952fcffff     jmp 0x42b6
0x00004664      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004668      4889cf         mov rdi, rcx
0x0000466b      e890edffff     call sym.gettext_quote.part.1
0x00004670      4889442460     mov qword [rsp + 0x60], rax
0x00004675      e967fcffff     jmp 0x42e1
0x0000467a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000467f      4c89dd         mov rbp, r11
0x00004682      89d0           mov eax, edx
0x00004684      885c240d       mov byte [rsp + 0xd], bl
0x00004688      e9ecf9ffff     jmp 0x4079
0x0000468d      4883ec08       sub rsp, 8
0x00004691      41b805000000   mov r8d, 5
0x00004697      4c89d9         mov rcx, r11
0x0000469a      ff742468       push qword [rsp + 0x68]
0x0000469e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x000046a2      4c89f7         mov rdi, r14
0x000046a5      ff742438       push qword [rsp + 0x38]
0x000046a9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000046b1      488b542430     mov rdx, qword [rsp + 0x30]
0x000046b6      488b742470     mov rsi, qword [rsp + 0x70]
0x000046bb      e830eeffff     call sym.quotearg_buffer_restyled
0x000046c0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x000046c4      4989c7         mov r15, rax
0x000046c7      e9fdf9ffff     jmp 0x40c9
0x000046cc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000046d1      e916ffffff     jmp 0x45ec
0x000046d6      c74424080200.  mov dword [rsp + 8], 2
0x000046de      e996f9ffff     jmp 0x4079
0x000046e3      e888cfffff     call sym.imp.__stack_chk_fail
0x000046e8      c644240d00     mov byte [rsp + 0xd], 0
0x000046ed      e96ffaffff     jmp 0x4161
0x000046f2      4c89dd         mov rbp, r11
0x000046f5      e996f9ffff     jmp 0x4090
0x000046fa      c644240e01     mov byte [rsp + 0xe], 1
0x000046ff      31c0           xor eax, eax
0x00004701      4531e4         xor r12d, r12d
0x00004704      48c744245000.  mov qword [rsp + 0x50], 0
0x0000470d      e9a2f5ffff     jmp 0x3cb4
0x00004712      4c89ea         mov rdx, r13
0x00004715      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000471a      e9f3f5ffff     jmp 0x3d12
0x0000471f      e87cceffff     call sym.imp.abort
0x00004724      6690           nop
0x00004726      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00004730      4157           push r15
0x00004732      4156           push r14
0x00004734      4c63ff         movsxd r15, edi
0x00004737      4155           push r13
0x00004739      4154           push r12
0x0000473b      4989d6         mov r14, rdx
0x0000473e      55             push rbp
0x0000473f      53             push rbx
0x00004740      4889cd         mov rbp, rcx
0x00004743      4883ec28       sub rsp, 0x28
0x00004747      4889742408     mov qword [rsp + 8], rsi
0x0000474c      e85fceffff     call sym.imp.__errno_location
0x00004751      4989c5         mov r13, rax
0x00004754      8b00           mov eax, dword [rax]
0x00004756      4585ff         test r15d, r15d
0x00004759      488b1d006920.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x00004760      89442418       mov dword [rsp + 0x18], eax
0x00004764      0f8867010000   js 0x48d1
0x0000476a      44393de76820.  cmp dword [obj.nslots], r15d            ; [0x20b058:4]=1
0x00004771      7f62           jg 0x47d5
0x00004773      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000477a      0f8456010000   je 0x48d6
0x00004780      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004784      488d05e56820.  lea rax, obj.slotvec0                   ; 0x20b070
0x0000478b      4963f4         movsxd rsi, r12d
0x0000478e      48c1e604       shl rsi, 4
0x00004792      4839c3         cmp rbx, rax
0x00004795      0f8415010000   je 0x48b0
0x0000479b      4889df         mov rdi, rbx
0x0000479e      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x000047a3      4889c3         mov rbx, rax
0x000047a6      488905b36820.  mov qword [obj.slotvec], rax            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x000047ad      48633da46820.  movsxd rdi, dword [obj.nslots]          ; [0x20b058:4]=1
0x000047b4      4489e2         mov edx, r12d
0x000047b7      31f6           xor esi, esi
0x000047b9      29fa           sub edx, edi
0x000047bb      48c1e704       shl rdi, 4
0x000047bf      4863d2         movsxd rdx, edx
0x000047c2      4801df         add rdi, rbx
0x000047c5      48c1e204       shl rdx, 4
0x000047c9      e812cfffff     call sym.imp.memset
0x000047ce      448925836820.  mov dword [obj.nslots], r12d            ; [0x20b058:4]=1
0x000047d5      8b4504         mov eax, dword [rbp + 4]
0x000047d8      49c1e704       shl r15, 4
0x000047dc      4883ec08       sub rsp, 8
0x000047e0      4c01fb         add rbx, r15
0x000047e3      4c8d7d08       lea r15, [rbp + 8]
0x000047e7      448b4500       mov r8d, dword [rbp]
0x000047eb      4c8b1b         mov r11, qword [rbx]
0x000047ee      4c8b6308       mov r12, qword [rbx + 8]
0x000047f2      4c89f1         mov rcx, r14
0x000047f5      83c801         or eax, 1
0x000047f8      89442424       mov dword [rsp + 0x24], eax
0x000047fc      ff7530         push qword [rbp + 0x30]
0x000047ff      4189c1         mov r9d, eax
0x00004802      ff7528         push qword [rbp + 0x28]
0x00004805      4157           push r15
0x00004807      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000480a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000480f      4c89e7         mov rdi, r12
0x00004812      4c895c2430     mov qword [rsp + 0x30], r11
0x00004817      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000481c      4883c420       add rsp, 0x20
0x00004820      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00004825      4939c3         cmp r11, rax
0x00004828      7767           ja 0x4891
0x0000482a      488d7001       lea rsi, [rax + 1]
0x0000482e      488d05eb6820.  lea rax, obj.slot0                      ; 0x20b120
0x00004835      4939c4         cmp r12, rax
0x00004838      488933         mov qword [rbx], rsi
0x0000483b      7412           je 0x484f
0x0000483d      4c89e7         mov rdi, r12
0x00004840      4889742410     mov qword [rsp + 0x10], rsi
0x00004845      e846cdffff     call sym.imp.free
0x0000484a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000484f      4889f7         mov rdi, rsi
0x00004852      4889742410     mov qword [rsp + 0x10], rsi
0x00004857      e8540e0000     call sym.xmalloc
0x0000485c      4883ec08       sub rsp, 8
0x00004860      48894308       mov qword [rbx + 8], rax
0x00004864      448b4500       mov r8d, dword [rbp]
0x00004868      ff7530         push qword [rbp + 0x30]
0x0000486b      ff7528         push qword [rbp + 0x28]
0x0000486e      4c89f1         mov rcx, r14
0x00004871      4157           push r15
0x00004873      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004878      4889c7         mov rdi, rax
0x0000487b      488b542428     mov rdx, qword [rsp + 0x28]
0x00004880      488b742430     mov rsi, qword [rsp + 0x30]
0x00004885      4989c4         mov r12, rax
0x00004888      e863ecffff     call sym.quotearg_buffer_restyled
0x0000488d      4883c420       add rsp, 0x20
0x00004891      8b442418       mov eax, dword [rsp + 0x18]
0x00004895      41894500       mov dword [r13], eax
0x00004899      4883c428       add rsp, 0x28
0x0000489d      4c89e0         mov rax, r12
0x000048a0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x000048a1      5d             pop rbp
0x000048a2      415c           pop r12
0x000048a4      415d           pop r13
0x000048a6      415e           pop r14
0x000048a8      415f           pop r15
0x000048aa      c3             ret
0x000048ab      0f1f440000     nop dword [rax + rax]
0x000048b0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x000048b2      e8590e0000     call sym.xrealloc
0x000048b7      660f6f05b167.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x000048bf      4889c3         mov rbx, rax
0x000048c2      488905976720.  mov qword [obj.slotvec], rax            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x000048c9      0f1100         movups xmmword [rax], xmm0
0x000048cc      e9dcfeffff     jmp 0x47ad
0x000048d1      e8caccffff     call sym.imp.abort
0x000048d6      e825100000     call sym.xalloc_die
0x000048db      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x000048e0      4154           push r12
0x000048e2      55             push rbp
0x000048e3      53             push rbx
0x000048e4      4889fb         mov rbx, rdi
0x000048e7      e8c4ccffff     call sym.imp.__errno_location
0x000048ec      448b20         mov r12d, dword [rax]
0x000048ef      4889c5         mov rbp, rax
0x000048f2      488d05276920.  lea rax, obj.default_quoting_options    ; 0x20b220
0x000048f9      4885db         test rbx, rbx
0x000048fc      be38000000     mov esi, 0x38                           ; '8'
0x00004901      480f44d8       cmove rbx, rax
0x00004905      4889df         mov rdi, rbx
0x00004908      e8a30f0000     call sym.xmemdup
0x0000490d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004911      5b             pop rbx
0x00004912      5d             pop rbp
0x00004913      415c           pop r12
0x00004915      c3             ret
0x00004916      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004920      488d05f96820.  lea rax, obj.default_quoting_options    ; 0x20b220
0x00004927      4885ff         test rdi, rdi
0x0000492a      480f44f8       cmove rdi, rax
0x0000492e      8b07           mov eax, dword [rdi]
0x00004930      c3             ret
0x00004931      0f1f440000     nop dword [rax + rax]
0x00004936      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004940      488d05d96820.  lea rax, obj.default_quoting_options    ; 0x20b220
0x00004947      4885ff         test rdi, rdi
0x0000494a      480f44f8       cmove rdi, rax
0x0000494e      8937           mov dword [rdi], esi
0x00004950      c3             ret
0x00004951      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004956      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004960      488d05b96820.  lea rax, obj.default_quoting_options    ; 0x20b220
0x00004967      4885ff         test rdi, rdi
0x0000496a      89f1           mov ecx, esi
0x0000496c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004970      89f0           mov eax, esi
0x00004972      83e11f         and ecx, 0x1f
0x00004975      c0e805         shr al, 5
0x00004978      0fb6c0         movzx eax, al
0x0000497b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004980      8b37           mov esi, dword [rdi]
0x00004982      89f0           mov eax, esi
0x00004984      d3e8           shr eax, cl
0x00004986      31c2           xor edx, eax
0x00004988      83e001         and eax, 1
0x0000498b      83e201         and edx, 1
0x0000498e      d3e2           shl edx, cl
0x00004990      31f2           xor edx, esi
0x00004992      8917           mov dword [rdi], edx
0x00004994      c3             ret
0x00004995      90             nop
0x00004996      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000049a0      488d05796820.  lea rax, obj.default_quoting_options    ; 0x20b220
0x000049a7      4885ff         test rdi, rdi
0x000049aa      480f44f8       cmove rdi, rax
0x000049ae      8b4704         mov eax, dword [rdi + 4]
0x000049b1      897704         mov dword [rdi + 4], esi
0x000049b4      c3             ret
0x000049b5      90             nop
0x000049b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000049c0      488d05596820.  lea rax, obj.default_quoting_options    ; 0x20b220
0x000049c7      4885ff         test rdi, rdi
0x000049ca      480f44f8       cmove rdi, rax
0x000049ce      4885f6         test rsi, rsi
0x000049d1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000049d7      740e           je 0x49e7
0x000049d9      4885d2         test rdx, rdx
0x000049dc      7409           je 0x49e7
0x000049de      48897728       mov qword [rdi + 0x28], rsi
0x000049e2      48895730       mov qword [rdi + 0x30], rdx
0x000049e6      c3             ret
0x000049e7      4883ec08       sub rsp, 8
0x000049eb      e8b0cbffff     call sym.imp.abort
;-- quotearg_buffer:
0x000049f0      4157           push r15
0x000049f2      4156           push r14
0x000049f4      488d05256820.  lea rax, obj.default_quoting_options    ; 0x20b220
0x000049fb      4155           push r13
0x000049fd      4154           push r12
0x000049ff      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004a02      55             push rbp
0x00004a03      53             push rbx
0x00004a04      4c89c3         mov rbx, r8
0x00004a07      4989f6         mov r14, rsi
0x00004a0a      4989d7         mov r15, rdx
0x00004a0d      4883ec18       sub rsp, 0x18
0x00004a11      4d85c0         test r8, r8
0x00004a14      480f44d8       cmove rbx, rax
0x00004a18      48894c2408     mov qword [rsp + 8], rcx
0x00004a1d      e88ecbffff     call sym.imp.__errno_location
0x00004a22      448b20         mov r12d, dword [rax]
0x00004a25      4889c5         mov rbp, rax
0x00004a28      488d4308       lea rax, [rbx + 8]
0x00004a2c      4883ec08       sub rsp, 8
0x00004a30      448b4b04       mov r9d, dword [rbx + 4]
0x00004a34      ff7330         push qword [rbx + 0x30]
0x00004a37      448b03         mov r8d, dword [rbx]
0x00004a3a      ff7328         push qword [rbx + 0x28]
0x00004a3d      4c89fa         mov rdx, r15
0x00004a40      50             push rax
0x00004a41      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004a46      4c89f6         mov rsi, r14
0x00004a49      4c89ef         mov rdi, r13
0x00004a4c      e89feaffff     call sym.quotearg_buffer_restyled
0x00004a51      44896500       mov dword [rbp], r12d
0x00004a55      4883c438       add rsp, 0x38
0x00004a59      5b             pop rbx
0x00004a5a      5d             pop rbp
0x00004a5b      415c           pop r12
0x00004a5d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004a5f      415e           pop r14
0x00004a61      415f           pop r15
0x00004a63      c3             ret
0x00004a64      6690           nop
0x00004a66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004a70      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004a72      4156           push r14
0x00004a74      488d05a56720.  lea rax, obj.default_quoting_options    ; 0x20b220
0x00004a7b      4155           push r13
0x00004a7d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00004a7f      4989d4         mov r12, rdx
0x00004a82      55             push rbp
0x00004a83      53             push rbx
0x00004a84      4889cb         mov rbx, rcx
0x00004a87      4989fe         mov r14, rdi
0x00004a8a      4989f7         mov r15, rsi
0x00004a8d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004a91      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004a94      480f44d8       cmove rbx, rax
0x00004a98      31ed           xor ebp, ebp
0x00004a9a      e811cbffff     call sym.imp.__errno_location
0x00004a9f      4d85e4         test r12, r12
0x00004aa2      4989c5         mov r13, rax
0x00004aa5      8b00           mov eax, dword [rax]
0x00004aa7      400f94c5       sete bpl
0x00004aab      0b6b04         or ebp, dword [rbx + 4]
0x00004aae      4c8d5308       lea r10, [rbx + 8]
0x00004ab2      4883ec08       sub rsp, 8
0x00004ab6      448b03         mov r8d, dword [rbx]
0x00004ab9      4c89f9         mov rcx, r15
0x00004abc      89442414       mov dword [rsp + 0x14], eax
0x00004ac0      ff7330         push qword [rbx + 0x30]
0x00004ac3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004ac6      ff7328         push qword [rbx + 0x28]
0x00004ac9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00004acb      31f6           xor esi, esi
0x00004acd      4189e9         mov r9d, ebp
0x00004ad0      31ff           xor edi, edi
0x00004ad2      4c89542440     mov qword [rsp + 0x40], r10
0x00004ad7      e814eaffff     call sym.quotearg_buffer_restyled
0x00004adc      488d7001       lea rsi, [rax + 1]
0x00004ae0      4889442448     mov qword [rsp + 0x48], rax
0x00004ae5      4883c420       add rsp, 0x20
0x00004ae9      4889f7         mov rdi, rsi
0x00004aec      4889742418     mov qword [rsp + 0x18], rsi
0x00004af1      e8ba0b0000     call sym.xmalloc
0x00004af6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00004afb      4883ec08       sub rsp, 8
0x00004aff      ff7330         push qword [rbx + 0x30]
0x00004b02      ff7328         push qword [rbx + 0x28]
0x00004b05      4c8b542438     mov r10, qword [rsp + 0x38]
0x00004b0a      4189e9         mov r9d, ebp
0x00004b0d      448b03         mov r8d, dword [rbx]
0x00004b10      4c89f9         mov rcx, r15
0x00004b13      4c89f2         mov rdx, r14
0x00004b16      4889c7         mov rdi, rax
0x00004b19      4152           push r10
0x00004b1b      488b742438     mov rsi, qword [rsp + 0x38]
0x00004b20      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004b25      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004b29      4883c420       add rsp, 0x20
0x00004b2d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004b30      41894500       mov dword [r13], eax
0x00004b34      7409           je 0x4b3f
0x00004b36      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00004b3b      4d891c24       mov qword [r12], r11
0x00004b3f      488b442410     mov rax, qword [rsp + 0x10]
0x00004b44      4883c438       add rsp, 0x38
0x00004b48      5b             pop rbx
0x00004b49      5d             pop rbp
0x00004b4a      415c           pop r12
0x00004b4c      415d           pop r13
0x00004b4e      415e           pop r14
0x00004b50      415f           pop r15
0x00004b52      c3             ret
0x00004b53      0f1f00         nop dword [rax]
0x00004b56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004b60      4889d1         mov rcx, rdx
0x00004b63      31d2           xor edx, edx
0x00004b65      e906ffffff     jmp sym.quotearg_alloc_mem
0x00004b6a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004b70      8b05e2642000   mov eax, dword [obj.nslots]             ; [0x20b058:4]=1
0x00004b76      4154           push r12
0x00004b78      4c8b25e16420.  mov r12, qword [obj.slotvec]            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x00004b7f      55             push rbp
0x00004b80      53             push rbx
0x00004b81      83f801         cmp eax, 1
0x00004b84      7e2b           jle 0x4bb1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004b86      83e802         sub eax, 2
0x00004b89      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004b8e      48c1e004       shl rax, 4
0x00004b92      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004b97      660f1f840000.  nop word [rax + rax]
0x00004ba0      488b3b         mov rdi, qword [rbx]
0x00004ba3      4883c310       add rbx, 0x10
0x00004ba7      e8e4c9ffff     call sym.imp.free
0x00004bac      4839eb         cmp rbx, rbp
0x00004baf      75ef           jne 0x4ba0
0x00004bb1      498b7c2408     mov rdi, qword [r12 + 8]
0x00004bb6      488d1d636520.  lea rbx, obj.slot0                      ; 0x20b120
0x00004bbd      4839df         cmp rdi, rbx
0x00004bc0      7417           je 0x4bd9
0x00004bc2      e8c9c9ffff     call sym.imp.free
0x00004bc7      48c7059e6420.  mov qword [obj.slotvec0], 0x100         ; [0x20b070:8]=256
0x00004bd2      48891d9f6420.  mov qword [0x0020b078], rbx             ; [0x20b078:8]=0x20b120 obj.slot0
0x00004bd9      488d1d906420.  lea rbx, obj.slotvec0                   ; 0x20b070
0x00004be0      4939dc         cmp r12, rbx
0x00004be3      740f           je 0x4bf4
0x00004be5      4c89e7         mov rdi, r12
0x00004be8      e8a3c9ffff     call sym.imp.free
0x00004bed      48891d6c6420.  mov qword [obj.slotvec], rbx            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x00004bf4      5b             pop rbx
0x00004bf5      c70559642000.  mov dword [obj.nslots], 1               ; [0x20b058:4]=1
0x00004bff      5d             pop rbp
0x00004c00      415c           pop r12
0x00004c02      c3             ret
0x00004c03      0f1f00         nop dword [rax]
0x00004c06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004c10      488d0d096620.  lea rcx, obj.default_quoting_options    ; 0x20b220
0x00004c17      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004c1e      e90dfbffff     jmp sym.quotearg_n_options
0x00004c23      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004c26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004c30      488d0de96520.  lea rcx, obj.default_quoting_options    ; 0x20b220
0x00004c37      e9f4faffff     jmp sym.quotearg_n_options
0x00004c3c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004c40      488d0dd96520.  lea rcx, obj.default_quoting_options    ; 0x20b220
0x00004c47      4889fe         mov rsi, rdi
0x00004c4a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004c51      31ff           xor edi, edi
0x00004c53      e9d8faffff     jmp sym.quotearg_n_options
0x00004c58      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004c60      488d0db96520.  lea rcx, obj.default_quoting_options    ; 0x20b220
0x00004c67      4889f2         mov rdx, rsi
0x00004c6a      4889fe         mov rsi, rdi
0x00004c6d      31ff           xor edi, edi
0x00004c6f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004c74      6690           nop
0x00004c76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004c80      4883ec48       sub rsp, 0x48
0x00004c84      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004c87      64488b142528.  mov rdx, qword fs:[0x28]
0x00004c90      4889542438     mov qword [rsp + 0x38], rdx
0x00004c95      31d2           xor edx, edx
0x00004c97      83fe0a         cmp esi, 0xa
0x00004c9a      7468           je 0x4d04
0x00004c9c      893424         mov dword [rsp], esi
0x00004c9f      4889e1         mov rcx, rsp
0x00004ca2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004ca9      4889c6         mov rsi, rax
0x00004cac      48c744240400.  mov qword [rsp + 4], 0
0x00004cb5      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004cbe      48c744241400.  mov qword [rsp + 0x14], 0
0x00004cc7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004cd0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004cd9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004ce2      c74424340000.  mov dword [rsp + 0x34], 0
0x00004cea      e841faffff     call sym.quotearg_n_options
0x00004cef      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004cf4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004cfd      750a           jne 0x4d09                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00004cff      4883c448       add rsp, 0x48
0x00004d03      c3             ret
0x00004d04      e897c8ffff     call sym.imp.abort
0x00004d09      e862c9ffff     call sym.imp.__stack_chk_fail
0x00004d0e      6690           nop
;-- quotearg_n_style_mem:
0x00004d10      4883ec48       sub rsp, 0x48
0x00004d14      4889d0         mov rax, rdx
0x00004d17      4889ca         mov rdx, rcx
0x00004d1a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004d23      48894c2438     mov qword [rsp + 0x38], rcx
0x00004d28      31c9           xor ecx, ecx
0x00004d2a      83fe0a         cmp esi, 0xa
0x00004d2d      7461           je 0x4d90
0x00004d2f      893424         mov dword [rsp], esi
0x00004d32      4889e1         mov rcx, rsp
0x00004d35      4889c6         mov rsi, rax
0x00004d38      48c744240400.  mov qword [rsp + 4], 0
0x00004d41      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004d4a      48c744241400.  mov qword [rsp + 0x14], 0
0x00004d53      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004d5c      48c744242400.  mov qword [rsp + 0x24], 0
0x00004d65      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004d6e      c74424340000.  mov dword [rsp + 0x34], 0
0x00004d76      e8b5f9ffff     call sym.quotearg_n_options
0x00004d7b      488b542438     mov rdx, qword [rsp + 0x38]
0x00004d80      644833142528.  xor rdx, qword fs:[0x28]
0x00004d89      750a           jne 0x4d95
0x00004d8b      4883c448       add rsp, 0x48
0x00004d8f      c3             ret
0x00004d90      e80bc8ffff     call sym.imp.abort
0x00004d95      e8d6c8ffff     call sym.imp.__stack_chk_fail
0x00004d9a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004da0      4889f2         mov rdx, rsi
0x00004da3      89fe           mov esi, edi
0x00004da5      31ff           xor edi, edi
0x00004da7      e9d4feffff     jmp sym.quotearg_n_style
0x00004dac      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004db0      4889d1         mov rcx, rdx
0x00004db3      4889f2         mov rdx, rsi
0x00004db6      89fe           mov esi, edi
0x00004db8      31ff           xor edi, edi
0x00004dba      e951ffffff     jmp sym.quotearg_n_style_mem
0x00004dbf      90             nop
;-- quotearg_char_mem:
0x00004dc0      4883ec48       sub rsp, 0x48
0x00004dc4      89d1           mov ecx, edx
0x00004dc6      64488b042528.  mov rax, qword fs:[0x28]
0x00004dcf      4889442438     mov qword [rsp + 0x38], rax
0x00004dd4      31c0           xor eax, eax
0x00004dd6      488b05736420.  mov rax, qword [0x0020b250]             ; [0x20b250:8]=0
0x00004ddd      4989e0         mov r8, rsp
0x00004de0      83e11f         and ecx, 0x1f
0x00004de3      660f6f053564.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004deb      4889442430     mov qword [rsp + 0x30], rax
0x00004df0      89d0           mov eax, edx
0x00004df2      0f290424       movaps xmmword [rsp], xmm0
0x00004df6      c0e805         shr al, 5
0x00004df9      0fb6c0         movzx eax, al
0x00004dfc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004e01      660f6f052764.  movdqa xmm0, xmmword [0x0020b230]
0x00004e09      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004e0e      660f6f052a64.  movdqa xmm0, xmmword [0x0020b240]
0x00004e16      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004e1b      418b11         mov edx, dword [r9]
0x00004e1e      89d0           mov eax, edx
0x00004e20      d3e8           shr eax, cl
0x00004e22      f7d0           not eax
0x00004e24      83e001         and eax, 1
0x00004e27      d3e0           shl eax, cl
0x00004e29      4c89c1         mov rcx, r8
0x00004e2c      31d0           xor eax, edx
0x00004e2e      4889f2         mov rdx, rsi
0x00004e31      4889fe         mov rsi, rdi
0x00004e34      418901         mov dword [r9], eax
0x00004e37      31ff           xor edi, edi
0x00004e39      e8f2f8ffff     call sym.quotearg_n_options
0x00004e3e      488b742438     mov rsi, qword [rsp + 0x38]
0x00004e43      644833342528.  xor rsi, qword fs:[0x28]
0x00004e4c      7505           jne 0x4e53
0x00004e4e      4883c448       add rsp, 0x48
0x00004e52      c3             ret
0x00004e53      e818c8ffff     call sym.imp.__stack_chk_fail
0x00004e58      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004e60      400fbed6       movsx edx, sil
0x00004e64      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004e6b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00004e70      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004e75      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004e7c      e93fffffff     jmp sym.quotearg_char_mem
0x00004e81      0f1f440000     nop dword [rax + rax]
0x00004e86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004e90      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004e95      e926ffffff     jmp sym.quotearg_char_mem
0x00004e9a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004ea0      4883ec48       sub rsp, 0x48
0x00004ea4      4889d0         mov rax, rdx
0x00004ea7      64488b142528.  mov rdx, qword fs:[0x28]
0x00004eb0      4889542438     mov qword [rsp + 0x38], rdx
0x00004eb5      31d2           xor edx, edx
0x00004eb7      83fe0a         cmp esi, 0xa
0x00004eba      7468           je 0x4f24
0x00004ebc      893424         mov dword [rsp], esi
0x00004ebf      4889e1         mov rcx, rsp
0x00004ec2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004ec9      4889c6         mov rsi, rax
0x00004ecc      48c744240400.  mov qword [rsp + 4], 0
0x00004ed5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00004ede      48c744241400.  mov qword [rsp + 0x14], 0
0x00004ee7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004ef0      48c744242400.  mov qword [rsp + 0x24], 0
0x00004ef9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004f02      c74424340000.  mov dword [rsp + 0x34], 0
0x00004f0a      e821f8ffff     call sym.quotearg_n_options
0x00004f0f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004f14      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004f1d      750a           jne 0x4f29
0x00004f1f      4883c448       add rsp, 0x48
0x00004f23      c3             ret
0x00004f24      e877c6ffff     call sym.imp.abort
0x00004f29      e842c7ffff     call sym.imp.__stack_chk_fail
0x00004f2e      6690           nop
;-- quotearg_n_custom_mem:
0x00004f30      4883ec48       sub rsp, 0x48
0x00004f34      4989c9         mov r9, rcx
0x00004f37      488b0d126320.  mov rcx, qword [0x0020b250]             ; [0x20b250:8]=0
0x00004f3e      660f6f05da62.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004f46      64488b042528.  mov rax, qword fs:[0x28]
0x00004f4f      4889442438     mov qword [rsp + 0x38], rax
0x00004f54      31c0           xor eax, eax
0x00004f56      0f290424       movaps xmmword [rsp], xmm0
0x00004f5a      4885f6         test rsi, rsi
0x00004f5d      48894c2430     mov qword [rsp + 0x30], rcx
0x00004f62      c704240a0000.  mov dword [rsp], 0xa
0x00004f69      660f6f05bf62.  movdqa xmm0, xmmword [0x0020b230]
0x00004f71      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004f76      660f6f05c262.  movdqa xmm0, xmmword [0x0020b240]
0x00004f7e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004f83      7432           je 0x4fb7
0x00004f85      4885d2         test rdx, rdx
0x00004f88      742d           je 0x4fb7
0x00004f8a      4889742428     mov qword [rsp + 0x28], rsi
0x00004f8f      4889542430     mov qword [rsp + 0x30], rdx
0x00004f94      4889e1         mov rcx, rsp
0x00004f97      4c89c2         mov rdx, r8
0x00004f9a      4c89ce         mov rsi, r9
0x00004f9d      e88ef7ffff     call sym.quotearg_n_options
0x00004fa2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004fa7      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004fb0      750a           jne 0x4fbc
0x00004fb2      4883c448       add rsp, 0x48
0x00004fb6      c3             ret
0x00004fb7      e8e4c5ffff     call sym.imp.abort
0x00004fbc      e8afc6ffff     call sym.imp.__stack_chk_fail
0x00004fc1      0f1f440000     nop dword [rax + rax]
0x00004fc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004fd0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004fd7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00004fdc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004fe0      4889d1         mov rcx, rdx
0x00004fe3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004fea      4889f2         mov rdx, rsi
0x00004fed      4889fe         mov rsi, rdi
0x00004ff0      31ff           xor edi, edi
0x00004ff2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004ff7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00005000      4989c8         mov r8, rcx
0x00005003      4889d1         mov rcx, rdx
0x00005006      4889f2         mov rdx, rsi
0x00005009      4889fe         mov rsi, rdi
0x0000500c      31ff           xor edi, edi
0x0000500e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00005013      0f1f00         nop dword [rax]
0x00005016      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00005020      488d0df95f20.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x00005027      e904f7ffff     jmp sym.quotearg_n_options
0x0000502c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00005030      488d0de95f20.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x00005037      4889f2         mov rdx, rsi
0x0000503a      4889fe         mov rsi, rdi
0x0000503d      31ff           xor edi, edi
0x0000503f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00005044      6690           nop
0x00005046      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00005050      488d0dc95f20.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x00005057      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000505e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00005063      0f1f00         nop dword [rax]
0x00005066      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00005070      488d0da95f20.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x00005077      4889fe         mov rsi, rdi
0x0000507a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005081      31ff           xor edi, edi
0x00005083      e9a8f6ffff     jmp sym.quotearg_n_options
0x00005088      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00005090      4157           push r15
0x00005092      4156           push r14
0x00005094      4155           push r13
0x00005096      4154           push r12
0x00005098      4d89cc         mov r12, r9
0x0000509b      55             push rbp
0x0000509c      53             push rbx
0x0000509d      4889fd         mov rbp, rdi
0x000050a0      4c89c3         mov rbx, r8
0x000050a3      4883ec28       sub rsp, 0x28
0x000050a7      4885f6         test rsi, rsi
0x000050aa      0f8418010000   je 0x51c8
0x000050b0      4989d0         mov r8, rdx
0x000050b3      488d158e3c00.  lea rdx, [0x00008d48]                   ; "%s (%s) %s\n"
0x000050ba      4989c9         mov r9, rcx
0x000050bd      31c0           xor eax, eax
0x000050bf      4889f1         mov rcx, rsi
0x000050c2      be01000000     mov esi, 1
0x000050c7      e8c4c7ffff     call sym.imp.__fprintf_chk
0x000050cc      488d35883c00.  lea rsi, [0x00008d5b]                   ; "(C)"
0x000050d3      31ff           xor edi, edi
0x000050d5      ba05000000     mov edx, 5
0x000050da      e861c5ffff     call sym.imp.dcgettext
0x000050df      488d159a3f00.  lea rdx, obj.version_etc_copyright      ; 0x9080 ; "Copyright %s %d Free Software Foundation, Inc."
0x000050e6      4889c1         mov rcx, rax
0x000050e9      41b8e3070000   mov r8d, 0x7e3
0x000050ef      be01000000     mov esi, 1
0x000050f4      4889ef         mov rdi, rbp
0x000050f7      31c0           xor eax, eax
0x000050f9      e892c7ffff     call sym.imp.__fprintf_chk
0x000050fe      488d35e33c00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x8de8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00005105      31ff           xor edi, edi
0x00005107      ba05000000     mov edx, 5
0x0000510c      e82fc5ffff     call sym.imp.dcgettext
0x00005111      4889ee         mov rsi, rbp
0x00005114      4889c7         mov rdi, rax
0x00005117      e804c6ffff     call sym.imp.fputs_unlocked
0x0000511c      4983fc09       cmp r12, 9
0x00005120      0f873a030000   ja 0x5460
0x00005126      488d151b3f00.  lea rdx, [0x00009048]
0x0000512d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00005131      4801d0         add rax, rdx
0x00005134      ffe0           jmp rax
0x00005136      662e0f1f8400.  nop word cs:[rax + rax]
0x00005140      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005144      488b4310       mov rax, qword [rbx + 0x10]
0x00005148      488d35093e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x8f58 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000514f      4c8b4308       mov r8, qword [rbx + 8]
0x00005153      ba05000000     mov edx, 5
0x00005158      31ff           xor edi, edi
0x0000515a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000515e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005162      4c894c2410     mov qword [rsp + 0x10], r9
0x00005167      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000516b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000516f      48890424       mov qword [rsp], rax
0x00005173      4c89442408     mov qword [rsp + 8], r8
0x00005178      488b1b         mov rbx, qword [rbx]
0x0000517b      e8c0c4ffff     call sym.imp.dcgettext
0x00005180      4883ec08       sub rsp, 8
0x00005184      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00005189      4889c2         mov rdx, rax
0x0000518c      4889d9         mov rcx, rbx
0x0000518f      be01000000     mov esi, 1
0x00005194      4889ef         mov rdi, rbp
0x00005197      31c0           xor eax, eax
0x00005199      4151           push r9
0x0000519b      4155           push r13
0x0000519d      4154           push r12
0x0000519f      4157           push r15
0x000051a1      4156           push r14
0x000051a3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000051a8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000051ad      e8dec6ffff     call sym.imp.__fprintf_chk
0x000051b2      4883c430       add rsp, 0x30
0x000051b6      4883c428       add rsp, 0x28
0x000051ba      5b             pop rbx
0x000051bb      5d             pop rbp
0x000051bc      415c           pop r12
0x000051be      415d           pop r13
0x000051c0      415e           pop r14
0x000051c2      415f           pop r15
0x000051c4      c3             ret
0x000051c5      0f1f00         nop dword [rax]
0x000051c8      4989c8         mov r8, rcx
0x000051cb      4889d1         mov rcx, rdx
0x000051ce      488d157f3b00.  lea rdx, str.s__s                       ; 0x8d54 ; "%s %s\n"
0x000051d5      be01000000     mov esi, 1
0x000051da      31c0           xor eax, eax
0x000051dc      e8afc6ffff     call sym.imp.__fprintf_chk
0x000051e1      e9e6feffff     jmp 0x50cc
0x000051e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000051f0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000051f4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000051f8      488d35893d00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x8f88 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x000051ff      488b4310       mov rax, qword [rbx + 0x10]
0x00005203      4c8b4308       mov r8, qword [rbx + 8]
0x00005207      ba05000000     mov edx, 5
0x0000520c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005210      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005214      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005218      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000521c      488b1b         mov rbx, qword [rbx]
0x0000521f      4c89542418     mov qword [rsp + 0x18], r10
0x00005224      4c894c2410     mov qword [rsp + 0x10], r9
0x00005229      48890424       mov qword [rsp], rax
0x0000522d      4c89442408     mov qword [rsp + 8], r8
0x00005232      31ff           xor edi, edi
0x00005234      e807c4ffff     call sym.imp.dcgettext
0x00005239      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000523e      4152           push r10
0x00005240      e93fffffff     jmp 0x5184
0x00005245      0f1f00         nop dword [rax]
0x00005248      488b1b         mov rbx, qword [rbx]
0x0000524b      488d350d3b00.  lea rsi, str.Written_by__s.             ; 0x8d5f ; "Written by %s.\n"
0x00005252      ba05000000     mov edx, 5
0x00005257      31ff           xor edi, edi
0x00005259      e8e2c3ffff     call sym.imp.dcgettext
0x0000525e      4883c428       add rsp, 0x28
0x00005262      4889d9         mov rcx, rbx
0x00005265      4889ef         mov rdi, rbp
0x00005268      5b             pop rbx
0x00005269      5d             pop rbp
0x0000526a      415c           pop r12
0x0000526c      415d           pop r13
0x0000526e      415e           pop r14
0x00005270      415f           pop r15
0x00005272      4889c2         mov rdx, rax
0x00005275      be01000000     mov esi, 1
0x0000527a      31c0           xor eax, eax
0x0000527c      e90fc6ffff     jmp sym.imp.__fprintf_chk
0x00005281      0f1f80000000.  nop dword [rax]
0x00005288      4c8b6308       mov r12, qword [rbx + 8]
0x0000528c      488d35dc3a00.  lea rsi, str.Written_by__s_and__s.      ; 0x8d6f ; "Written by %s and %s.\n"
0x00005293      488b1b         mov rbx, qword [rbx]
0x00005296      ba05000000     mov edx, 5
0x0000529b      31ff           xor edi, edi
0x0000529d      e89ec3ffff     call sym.imp.dcgettext
0x000052a2      4883c428       add rsp, 0x28
0x000052a6      4d89e0         mov r8, r12
0x000052a9      4889d9         mov rcx, rbx
0x000052ac      4889ef         mov rdi, rbp
0x000052af      4889c2         mov rdx, rax
0x000052b2      be01000000     mov esi, 1
0x000052b7      5b             pop rbx
0x000052b8      5d             pop rbp
0x000052b9      415c           pop r12
0x000052bb      415d           pop r13
0x000052bd      415e           pop r14
0x000052bf      415f           pop r15
0x000052c1      31c0           xor eax, eax
0x000052c3      e9c8c5ffff     jmp sym.imp.__fprintf_chk
0x000052c8      0f1f84000000.  nop dword [rax + rax]
0x000052d0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000052d4      4c8b6308       mov r12, qword [rbx + 8]
0x000052d8      488d35a73a00.  lea rsi, str.Written_by__s___s__and__s. ; 0x8d86 ; "Written by %s, %s, and %s.\n"
0x000052df      488b1b         mov rbx, qword [rbx]
0x000052e2      ba05000000     mov edx, 5
0x000052e7      31ff           xor edi, edi
0x000052e9      e852c3ffff     call sym.imp.dcgettext
0x000052ee      4883c428       add rsp, 0x28
0x000052f2      4d89e9         mov r9, r13
0x000052f5      4d89e0         mov r8, r12
0x000052f8      4889d9         mov rcx, rbx
0x000052fb      4889ef         mov rdi, rbp
0x000052fe      4889c2         mov rdx, rax
0x00005301      5b             pop rbx
0x00005302      5d             pop rbp
0x00005303      415c           pop r12
0x00005305      415d           pop r13
0x00005307      415e           pop r14
0x00005309      415f           pop r15
0x0000530b      be01000000     mov esi, 1
0x00005310      31c0           xor eax, eax
0x00005312      e979c5ffff     jmp sym.imp.__fprintf_chk
0x00005317      660f1f840000.  nop word [rax + rax]
0x00005320      488d35913b00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x8eb8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00005327      ba05000000     mov edx, 5
0x0000532c      31ff           xor edi, edi
0x0000532e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005332      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005336      4c8b6308       mov r12, qword [rbx + 8]
0x0000533a      488b1b         mov rbx, qword [rbx]
0x0000533d      e8fec2ffff     call sym.imp.dcgettext
0x00005342      4883ec08       sub rsp, 8
0x00005346      4156           push r14
0x00005348      4889c2         mov rdx, rax
0x0000534b      4d89e9         mov r9, r13
0x0000534e      4d89e0         mov r8, r12
0x00005351      4889d9         mov rcx, rbx
0x00005354      4889ef         mov rdi, rbp
0x00005357      be01000000     mov esi, 1
0x0000535c      31c0           xor eax, eax
0x0000535e      e82dc5ffff     call sym.imp.__fprintf_chk
0x00005363      58             pop rax
0x00005364      5a             pop rdx
0x00005365      4883c428       add rsp, 0x28
0x00005369      5b             pop rbx
0x0000536a      5d             pop rbp
0x0000536b      415c           pop r12
0x0000536d      415d           pop r13
0x0000536f      415e           pop r14
0x00005371      415f           pop r15
0x00005373      c3             ret
0x00005374      0f1f4000       nop dword [rax]
0x00005378      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000537c      488d35553b00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x8ed8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00005383      ba05000000     mov edx, 5
0x00005388      31ff           xor edi, edi
0x0000538a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000538e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005392      4c8b6308       mov r12, qword [rbx + 8]
0x00005396      488b1b         mov rbx, qword [rbx]
0x00005399      e8a2c2ffff     call sym.imp.dcgettext
0x0000539e      4157           push r15
0x000053a0      eba4           jmp 0x5346
0x000053a2      660f1f440000   nop word [rax + rax]
0x000053a8      4c8b4308       mov r8, qword [rbx + 8]
0x000053ac      4c8b6328       mov r12, qword [rbx + 0x28]
0x000053b0      488d35493b00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x8f00 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000053b7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000053bb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000053bf      ba05000000     mov edx, 5
0x000053c4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000053c8      31ff           xor edi, edi
0x000053ca      488b1b         mov rbx, qword [rbx]
0x000053cd      4c890424       mov qword [rsp], r8
0x000053d1      e86ac2ffff     call sym.imp.dcgettext
0x000053d6      4883ec08       sub rsp, 8
0x000053da      4d89e9         mov r9, r13
0x000053dd      4154           push r12
0x000053df      4157           push r15
0x000053e1      4156           push r14
0x000053e3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000053e8      4889d9         mov rcx, rbx
0x000053eb      4889c2         mov rdx, rax
0x000053ee      4889ef         mov rdi, rbp
0x000053f1      be01000000     mov esi, 1
0x000053f6      31c0           xor eax, eax
0x000053f8      e893c4ffff     call sym.imp.__fprintf_chk
0x000053fd      4883c420       add rsp, 0x20
0x00005401      4883c428       add rsp, 0x28
0x00005405      5b             pop rbx
0x00005406      5d             pop rbp
0x00005407      415c           pop r12
0x00005409      415d           pop r13
0x0000540b      415e           pop r14
0x0000540d      415f           pop r15
0x0000540f      c3             ret
0x00005410      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00005414      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005418      488d35093b00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x8f28 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000541f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005423      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005427      ba05000000     mov edx, 5
0x0000542c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005430      4c8b4308       mov r8, qword [rbx + 8]
0x00005434      31ff           xor edi, edi
0x00005436      4c894c2408     mov qword [rsp + 8], r9
0x0000543b      488b1b         mov rbx, qword [rbx]
0x0000543e      4c890424       mov qword [rsp], r8
0x00005442      e8f9c1ffff     call sym.imp.dcgettext
0x00005447      4155           push r13
0x00005449      4154           push r12
0x0000544b      4157           push r15
0x0000544d      4156           push r14
0x0000544f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005454      eb8d           jmp 0x53e3
0x00005456      662e0f1f8400.  nop word cs:[rax + rax]
0x00005460      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005464      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005468      ba05000000     mov edx, 5
0x0000546d      488b4310       mov rax, qword [rbx + 0x10]
0x00005471      4c8b4308       mov r8, qword [rbx + 8]
0x00005475      488d35443b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x8fc0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000547c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005480      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005484      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005488      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000548c      4c89542418     mov qword [rsp + 0x18], r10
0x00005491      4c894c2410     mov qword [rsp + 0x10], r9
0x00005496      48890424       mov qword [rsp], rax
0x0000549a      4c89442408     mov qword [rsp + 8], r8
0x0000549f      488b1b         mov rbx, qword [rbx]
0x000054a2      e98bfdffff     jmp 0x5232
0x000054a7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000054b0      4531c9         xor r9d, r9d
0x000054b3      49833800       cmp qword [r8], 0
0x000054b7      7412           je 0x54cb
0x000054b9      0f1f80000000.  nop dword [rax]
0x000054c0      4983c101       add r9, 1
0x000054c4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000054c9      75f5           jne 0x54c0
0x000054cb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000054d0      4883ec68       sub rsp, 0x68
0x000054d4      4d89c2         mov r10, r8
0x000054d7      4531c9         xor r9d, r9d
0x000054da      64488b042528.  mov rax, qword fs:[0x28]
0x000054e3      4889442458     mov qword [rsp + 0x58], rax
0x000054e8      31c0           xor eax, eax
0x000054ea      4989e0         mov r8, rsp
0x000054ed      0f1f00         nop dword [rax]
0x000054f0      418b02         mov eax, dword [r10]
0x000054f3      83f82f         cmp eax, 0x2f
0x000054f6      7742           ja 0x553a
0x000054f8      4189c3         mov r11d, eax
0x000054fb      4d035a10       add r11, qword [r10 + 0x10]
0x000054ff      83c008         add eax, 8
0x00005502      418902         mov dword [r10], eax
0x00005505      498b03         mov rax, qword [r11]
0x00005508      4885c0         test rax, rax
0x0000550b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000550f      740a           je 0x551b
0x00005511      4983c101       add r9, 1
0x00005515      4983f90a       cmp r9, 0xa
0x00005519      75d5           jne 0x54f0
0x0000551b      e870fbffff     call sym.version_etc_arn
0x00005520      488b442458     mov rax, qword [rsp + 0x58]
0x00005525      644833042528.  xor rax, qword fs:[0x28]
0x0000552e      7505           jne 0x5535
0x00005530      4883c468       add rsp, 0x68
0x00005534      c3             ret
0x00005535      e836c1ffff     call sym.imp.__stack_chk_fail
0x0000553a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000553e      498d4308       lea rax, [r11 + 8]
0x00005542      49894208       mov qword [r10 + 8], rax
0x00005546      ebbd           jmp 0x5505
0x00005548      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00005550      55             push rbp
0x00005551      53             push rbx
0x00005552      41ba20000000   mov r10d, 0x20                          ; "@"
0x00005558      4531db         xor r11d, r11d
0x0000555b      4881ecb80000.  sub rsp, 0xb8
0x00005562      64488b042528.  mov rax, qword fs:[0x28]
0x0000556b      4889442478     mov qword [rsp + 0x78], rax
0x00005570      31c0           xor eax, eax
0x00005572      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000557a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00005582      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000558a      4c8d442420     lea r8, [rsp + 0x20]
0x0000558f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00005597      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000559f      4889442410     mov qword [rsp + 0x10], rax
0x000055a4      488d84248000.  lea rax, [rsp + 0x80]
0x000055ac      4531c9         xor r9d, r9d
0x000055af      4889442418     mov qword [rsp + 0x18], rax
0x000055b4      4889c5         mov rbp, rax
0x000055b7      660f1f840000.  nop word [rax + rax]
0x000055c0      4183fa2f       cmp r10d, 0x2f
0x000055c4      7756           ja 0x561c
0x000055c6      4489d0         mov eax, r10d
0x000055c9      41bb01000000   mov r11d, 1
0x000055cf      4183c208       add r10d, 8
0x000055d3      4801e8         add rax, rbp
0x000055d6      488b00         mov rax, qword [rax]
0x000055d9      4885c0         test rax, rax
0x000055dc      4b8904c8       mov qword [r8 + r9*8], rax
0x000055e0      740a           je 0x55ec
0x000055e2      4983c101       add r9, 1
0x000055e6      4983f90a       cmp r9, 0xa
0x000055ea      75d4           jne 0x55c0
0x000055ec      4584db         test r11b, r11b
0x000055ef      7524           jne 0x5615
0x000055f1      e89afaffff     call sym.version_etc_arn
0x000055f6      488b442478     mov rax, qword [rsp + 0x78]
0x000055fb      644833042528.  xor rax, qword fs:[0x28]
0x00005604      750a           jne 0x5610
0x00005606      4881c4b80000.  add rsp, 0xb8
0x0000560d      5b             pop rbx
0x0000560e      5d             pop rbp
0x0000560f      c3             ret
0x00005610      e85bc0ffff     call sym.imp.__stack_chk_fail
0x00005615      4489542408     mov dword [rsp + 8], r10d
0x0000561a      ebd5           jmp 0x55f1
0x0000561c      4889d8         mov rax, rbx
0x0000561f      4883c308       add rbx, 8
0x00005623      ebb1           jmp 0x55d6
0x00005625      90             nop
0x00005626      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00005630      53             push rbx
0x00005631      488d356a3700.  lea rsi, str.Report_bugs_to:__s         ; 0x8da2 ; "\nReport bugs to: %s\n"
0x00005638      ba05000000     mov edx, 5
0x0000563d      31ff           xor edi, edi
0x0000563f      e8fcbfffff     call sym.imp.dcgettext
0x00005644      488d156c3700.  lea rdx, str.bug_coreutils_gnu.org      ; 0x8db7 ; "bug-coreutils@gnu.org"
0x0000564b      4889c6         mov rsi, rax
0x0000564e      bf01000000     mov edi, 1
0x00005653      31c0           xor eax, eax
0x00005655      e8a6c1ffff     call sym.imp.__printf_chk
0x0000565a      488d356c3700.  lea rsi, str.s_home_page:___s           ; 0x8dcd ; "%s home page: <%s>\n"
0x00005661      ba05000000     mov edx, 5
0x00005666      31ff           xor edi, edi
0x00005668      e8d3bfffff     call sym.imp.dcgettext
0x0000566d      488d0d143000.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x8688 ; "https://www.gnu.org/software/coreutils/"
0x00005674      488d159e2900.  lea rdx, str.GNU_coreutils              ; 0x8019 ; "GNU coreutils"
0x0000567b      4889c6         mov rsi, rax
0x0000567e      bf01000000     mov edi, 1
0x00005683      31c0           xor eax, eax
0x00005685      e876c1ffff     call sym.imp.__printf_chk
0x0000568a      488b1df75920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00005691      488d35683900.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x9000 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00005698      31ff           xor edi, edi
0x0000569a      ba05000000     mov edx, 5
0x0000569f      e89cbfffff     call sym.imp.dcgettext
0x000056a4      4889de         mov rsi, rbx
0x000056a7      4889c7         mov rdi, rax
0x000056aa      5b             pop rbx
0x000056ab      e970c0ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000056b0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000056b1      4889fb         mov rbx, rdi
0x000056b4      e8d7c0ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000056b9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000056bc      7505           jne 0x56c3
0x000056be      4885db         test rbx, rbx
0x000056c1      7502           jne 0x56c5
0x000056c3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000056c4      c3             ret
0x000056c5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000056ca      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000056d0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000056d3      48f7e6         mul rsi
0x000056d6      4889c7         mov rdi, rax
0x000056d9      0f90c0         seto al
0x000056dc      4885ff         test rdi, rdi
0x000056df      780a           js 0x56eb
0x000056e1      0fb6c0         movzx eax, al
0x000056e4      4885c0         test rax, rax
0x000056e7      7502           jne 0x56eb
0x000056e9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x000056eb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x000056ef      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x000056f4      6690           nop
0x000056f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00005700      ebae           jmp sym.xmalloc
0x00005702      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00005706      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00005710      4885f6         test rsi, rsi
0x00005713      53             push rbx
0x00005714      4889f3         mov rbx, rsi
0x00005717      7505           jne 0x571e
0x00005719      4885ff         test rdi, rdi
0x0000571c      751a           jne 0x5738
0x0000571e      4889de         mov rsi, rbx
0x00005721      e8bac0ffff     call sym.imp.realloc
0x00005726      4885c0         test rax, rax
0x00005729      7505           jne 0x5730
0x0000572b      4885db         test rbx, rbx
0x0000572e      7511           jne 0x5741                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00005730      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00005731      c3             ret
0x00005732      660f1f440000   nop word [rax + rax]
0x00005738      e853beffff     call sym.imp.free
0x0000573d      31c0           xor eax, eax
0x0000573f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00005740      c3             ret
0x00005741      e8ba010000     call sym.xalloc_die
0x00005746      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00005750      4889f0         mov rax, rsi
0x00005753      48f7e2         mul rdx
0x00005756      4889c6         mov rsi, rax
0x00005759      0f90c0         seto al
0x0000575c      4885f6         test rsi, rsi
0x0000575f      780a           js 0x576b
0x00005761      0fb6c0         movzx eax, al
0x00005764      4885c0         test rax, rax
0x00005767      7502           jne 0x576b
0x00005769      eba5           jmp sym.xrealloc
0x0000576b      4883ec08       sub rsp, 8
0x0000576f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005774      6690           nop
0x00005776      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005780      4885ff         test rdi, rdi
0x00005783      4989d1         mov r9, rdx
0x00005786      488b0e         mov rcx, qword [rsi]
0x00005789      7435           je 0x57c0
0x0000578b      31d2           xor edx, edx
0x0000578d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005797      49f7f1         div r9
0x0000579a      4839c8         cmp rax, rcx
0x0000579d      763c           jbe 0x57db
0x0000579f      4889c8         mov rax, rcx
0x000057a2      48d1e8         shr rax, 1
0x000057a5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000057aa      48890e         mov qword [rsi], rcx
0x000057ad      490fafc9       imul rcx, r9
0x000057b1      4889ce         mov rsi, rcx
0x000057b4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000057b9      0f1f80000000.  nop dword [rax]
0x000057c0      4885c9         test rcx, rcx
0x000057c3      7423           je 0x57e8
0x000057c5      4889c8         mov rax, rcx
0x000057c8      49f7e1         mul r9
0x000057cb      0f90c2         seto dl
0x000057ce      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000057d1      0fb6d2         movzx edx, dl
0x000057d4      7805           js 0x57db
0x000057d6      4885d2         test rdx, rdx
0x000057d9      74cf           je 0x57aa
0x000057db      4883ec08       sub rsp, 8
0x000057df      e81c010000     call sym.xalloc_die
0x000057e4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x000057e8      31d2           xor edx, edx
0x000057ea      b880000000     mov eax, 0x80
0x000057ef      4531c0         xor r8d, r8d
0x000057f2      49f7f1         div r9
0x000057f5      4885c0         test rax, rax
0x000057f8      410f94c0       sete r8b
0x000057fc      498d0c00       lea rcx, [r8 + rax]
0x00005800      ebc3           jmp 0x57c5
0x00005802      0f1f4000       nop dword [rax]
0x00005806      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00005810      4885ff         test rdi, rdi
0x00005813      488b06         mov rax, qword [rsi]
0x00005816      7428           je 0x5840
0x00005818      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00005822      4839d0         cmp rax, rdx
0x00005825      772a           ja 0x5851
0x00005827      4889c2         mov rdx, rax
0x0000582a      48d1ea         shr rdx, 1
0x0000582d      488d440201     lea rax, [rdx + rax + 1]
0x00005832      488906         mov qword [rsi], rax
0x00005835      4889c6         mov rsi, rax
0x00005838      e9d3feffff     jmp sym.xrealloc
0x0000583d      0f1f00         nop dword [rax]
0x00005840      4885c0         test rax, rax
0x00005843      ba80000000     mov edx, 0x80
0x00005848      480f44c2       cmove rax, rdx
0x0000584c      4885c0         test rax, rax
0x0000584f      79e1           jns 0x5832
0x00005851      4883ec08       sub rsp, 8
0x00005855      e8a6000000     call sym.xalloc_die
0x0000585a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005860      53             push rbx
0x00005861      4889fb         mov rbx, rdi
0x00005864      e847feffff     call sym.xmalloc
0x00005869      4889da         mov rdx, rbx
0x0000586c      31f6           xor esi, esi
0x0000586e      4889c7         mov rdi, rax
0x00005871      5b             pop rbx
0x00005872      e969beffff     jmp sym.imp.memset
0x00005877      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005880      4889f8         mov rax, rdi
0x00005883      4883ec08       sub rsp, 8
0x00005887      48f7e6         mul rsi
0x0000588a      0f90c2         seto dl
0x0000588d      4885c0         test rax, rax
0x00005890      7817           js 0x58a9
0x00005892      0fb6d2         movzx edx, dl
0x00005895      4885d2         test rdx, rdx
0x00005898      750f           jne 0x58a9
0x0000589a      e891beffff     call sym.imp.calloc
0x0000589f      4885c0         test rax, rax
0x000058a2      7405           je 0x58a9
0x000058a4      4883c408       add rsp, 8
0x000058a8      c3             ret
0x000058a9      e852000000     call sym.xalloc_die
0x000058ae      6690           nop
;-- xmemdup:
0x000058b0      55             push rbp
0x000058b1      53             push rbx
0x000058b2      4889fd         mov rbp, rdi
0x000058b5      4889f7         mov rdi, rsi
0x000058b8      4889f3         mov rbx, rsi
0x000058bb      4883ec08       sub rsp, 8
0x000058bf      e8ecfdffff     call sym.xmalloc
0x000058c4      4883c408       add rsp, 8
0x000058c8      4889da         mov rdx, rbx
0x000058cb      4889ee         mov rsi, rbp
0x000058ce      5b             pop rbx
0x000058cf      5d             pop rbp
0x000058d0      4889c7         mov rdi, rax
0x000058d3      e988beffff     jmp sym.imp.memcpy
0x000058d8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x000058e0      53             push rbx
0x000058e1      4889fb         mov rbx, rdi
0x000058e4      e877bdffff     call sym.imp.strlen
0x000058e9      4889df         mov rdi, rbx
0x000058ec      488d7001       lea rsi, [rax + 1]
0x000058f0      5b             pop rbx
0x000058f1      ebbd           jmp sym.xmemdup
0x000058f3      662e0f1f8400.  nop word cs:[rax + rax]
0x000058fd      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005900      488d35a83700.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x90af ; "memory exhausted"
0x00005907      4883ec08       sub rsp, 8
0x0000590b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005910      31ff           xor edi, edi
0x00005912      e829bdffff     call sym.imp.dcgettext
0x00005917      8b3dfb562000   mov edi, dword [obj.exit_failure]       ; [0x20b018:4]=1
0x0000591d      488d15f82e00.  lea rdx, [0x0000881c]                   ; "%s"
0x00005924      4889c1         mov rcx, rax
0x00005927      31f6           xor esi, esi
0x00005929      31c0           xor eax, eax
0x0000592b      e810bfffff     call sym.imp.error
0x00005930      e86bbcffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005935      662e0f1f8400.  nop word cs:[rax + rax]
0x0000593f      90             nop
;-- xstrtold:
0x00005940      4156           push r14                                ; ../coreutils-8.31/lib/xstrtod.c:46
0x00005942      4155           push r13
0x00005944      4989ce         mov r14, rcx
0x00005947      4154           push r12
0x00005949      55             push rbp
0x0000594a      4889fd         mov rbp, rdi
0x0000594d      53             push rbx
0x0000594e      4989d5         mov r13, rdx
0x00005951      4889f3         mov rbx, rsi
0x00005954      4883ec10       sub rsp, 0x10
0x00005958      64488b042528.  mov rax, qword fs:[0x28]
0x00005961      4889442408     mov qword [rsp + 8], rax
0x00005966      31c0           xor eax, eax
0x00005968      e843bcffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xstrtod.c:51
0x0000596d      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/xstrtod.c:52
0x00005970      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/xstrtod.c:51
0x00005973      c70000000000   mov dword [rax], 0
0x00005979      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/xstrtod.c:52
0x0000597c      41ffd6         call r14
0x0000597f      488b0c24       mov rcx, qword [rsp]                    ; ../coreutils-8.31/lib/xstrtod.c:55
0x00005983      4839e9         cmp rcx, rbp
0x00005986      7468           je 0x59f0
0x00005988      4885db         test rbx, rbx
0x0000598b      7443           je 0x59d0
0x0000598d      d9ee           fldz                                    ; ../coreutils-8.31/lib/xstrtod.c:62
0x0000598f      d9c9           fxch st(1)
0x00005991      dbe9           fucomi st(1)
0x00005993      ddd9           fstp st(1)
0x00005995      7a07           jp 0x599e
0x00005997      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/xstrtod.c:49
0x0000599c      740d           je 0x59ab                               ; ../coreutils-8.31/lib/xstrtod.c:62
0x0000599e      41833c2422     cmp dword [r12], 0x22
0x000059a3      0f95c0         setne al
0x000059a6      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/xstrtod.c:66
0x000059a9      7403           je 0x59ae
0x000059ab      48890b         mov qword [rbx], rcx                    ; ../coreutils-8.31/lib/xstrtod.c:67
0x000059ae      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xstrtod.c:71
0x000059b3      644833142528.  xor rdx, qword fs:[0x28]
0x000059bc      41db7d00       fstp xword [r13]                        ; ../coreutils-8.31/lib/xstrtod.c:69
0x000059c0      7532           jne 0x59f4                              ; ../coreutils-8.31/lib/xstrtod.c:71
0x000059c2      4883c410       add rsp, 0x10
0x000059c6      5b             pop rbx
0x000059c7      5d             pop rbp
0x000059c8      415c           pop r12
0x000059ca      415d           pop r13
0x000059cc      415e           pop r14
0x000059ce      c3             ret
0x000059cf      90             nop
0x000059d0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/xstrtod.c:56
0x000059d2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/xstrtod.c:55
0x000059d5      75d7           jne 0x59ae
0x000059d7      d9ee           fldz                                    ; ../coreutils-8.31/lib/xstrtod.c:62
0x000059d9      d9c9           fxch st(1)
0x000059db      dbe9           fucomi st(1)
0x000059dd      ddd9           fstp st(1)
0x000059df      7abd           jp 0x599e
0x000059e1      75bb           jne 0x599e
0x000059e3      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/xstrtod.c:49
0x000059e8      ebc4           jmp 0x59ae
0x000059ea      660f1f440000   nop word [rax + rax]
0x000059f0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/xstrtod.c:56
0x000059f2      ebb2           jmp 0x59a6
0x000059f4      e877bcffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xstrtod.c:71
0x000059f9      0f1f80000000.  nop dword [rax]
;-- rpl_asprintf:
0x00005a00      4881ecd80000.  sub rsp, 0xd8                           ; ../coreutils-8.31/lib/asprintf.c:31
0x00005a07      84c0           test al, al
0x00005a09      4889542430     mov qword [rsp + 0x30], rdx
0x00005a0e      48894c2438     mov qword [rsp + 0x38], rcx
0x00005a13      4c89442440     mov qword [rsp + 0x40], r8
0x00005a18      4c894c2448     mov qword [rsp + 0x48], r9
0x00005a1d      7437           je 0x5a56
0x00005a1f      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x00005a24      0f294c2460     movaps xmmword [rsp + 0x60], xmm1
0x00005a29      0f29542470     movaps xmmword [rsp + 0x70], xmm2
0x00005a2e      0f299c248000.  movaps xmmword [rsp + 0x80], xmm3
0x00005a36      0f29a4249000.  movaps xmmword [rsp + 0x90], xmm4
0x00005a3e      0f29ac24a000.  movaps xmmword [rsp + 0xa0], xmm5
0x00005a46      0f29b424b000.  movaps xmmword [rsp + 0xb0], xmm6
0x00005a4e      0f29bc24c000.  movaps xmmword [rsp + 0xc0], xmm7
0x00005a56      64488b042528.  mov rax, qword fs:[0x28]
0x00005a5f      4889442418     mov qword [rsp + 0x18], rax
0x00005a64      31c0           xor eax, eax
0x00005a66      488d8424e000.  lea rax, [rsp + 0xe0]                   ; ../coreutils-8.31/lib/asprintf.c:35
0x00005a6e      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/lib/asprintf.c:36
0x00005a71      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/asprintf.c:35
0x00005a76      488d442420     lea rax, [rsp + 0x20]
0x00005a7b      c70424100000.  mov dword [rsp], 0x10                   ; [0x10:4]=0x3e0003
0x00005a82      c74424043000.  mov dword [rsp + 4], 0x30               ; '0'
                                                                       ; [0x30:4]=0
0x00005a8a      4889442410     mov qword [rsp + 0x10], rax
0x00005a8f      e8bc000000     call sym.rpl_vasprintf                  ; ../coreutils-8.31/lib/asprintf.c:36
0x00005a94      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/asprintf.c:39
0x00005a99      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005aa2      7508           jne 0x5aac
0x00005aa4      4881c4d80000.  add rsp, 0xd8
0x00005aab      c3             ret
0x00005aac      e8bfbbffff     call sym.imp.__stack_chk_fail
0x00005ab1      662e0f1f8400.  nop word cs:[rax + rax]
0x00005abb      0f1f440000     nop dword [rax + rax]
;-- rpl_mbrtowc:
0x00005ac0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005ac2      4154           push r12
0x00005ac4      4989f5         mov r13, rsi
0x00005ac7      55             push rbp
0x00005ac8      53             push rbx
0x00005ac9      4889fb         mov rbx, rdi
0x00005acc      4989d4         mov r12, rdx
0x00005acf      4883ec18       sub rsp, 0x18
0x00005ad3      64488b042528.  mov rax, qword fs:[0x28]
0x00005adc      4889442408     mov qword [rsp + 8], rax
0x00005ae1      31c0           xor eax, eax
0x00005ae3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005ae8      4885ff         test rdi, rdi
0x00005aeb      480f44d8       cmove rbx, rax
0x00005aef      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005af2      e899bbffff     call sym.imp.mbrtowc
0x00005af7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005afb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005afe      7620           jbe 0x5b20                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005b00      4d85e4         test r12, r12
0x00005b03      741b           je 0x5b20
0x00005b05      31ff           xor edi, edi
0x00005b07      e804020000     call sym.hard_locale
0x00005b0c      84c0           test al, al
0x00005b0e      7510           jne 0x5b20
0x00005b10      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005b15      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00005b1a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005b1c      0f1f4000       nop dword [rax]
0x00005b20      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005b25      644833142528.  xor rdx, qword fs:[0x28]
0x00005b2e      4889e8         mov rax, rbp
0x00005b31      750b           jne 0x5b3e
0x00005b33      4883c418       add rsp, 0x18
0x00005b37      5b             pop rbx
0x00005b38      5d             pop rbp
0x00005b39      415c           pop r12
0x00005b3b      415d           pop r13
0x00005b3d      c3             ret
0x00005b3e      e82dbbffff     call sym.imp.__stack_chk_fail
0x00005b43      662e0f1f8400.  nop word cs:[rax + rax]
0x00005b4d      0f1f00         nop dword [rax]
;-- rpl_vasprintf:
0x00005b50      53             push rbx                                ; ../coreutils-8.31/lib/vasprintf.c:34
0x00005b51      4889f0         mov rax, rsi
0x00005b54      4889fb         mov rbx, rdi
0x00005b57      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/vasprintf.c:36
0x00005b59      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/vasprintf.c:34
0x00005b5d      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00005b66      48894c2408     mov qword [rsp + 8], rcx
0x00005b6b      31c9           xor ecx, ecx
0x00005b6d      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/vasprintf.c:36
0x00005b70      4889d1         mov rcx, rdx
0x00005b73      4889c2         mov rdx, rax
0x00005b76      e855030000     call sym.vasnprintf
0x00005b7b      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasprintf.c:37
0x00005b7e      7442           je 0x5bc2
0x00005b80      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/vasprintf.c:40
0x00005b84      4881faffffff.  cmp rdx, 0x7fffffff
0x00005b8b      771b           ja 0x5ba8
0x00005b8d      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/vasprintf.c:47
0x00005b90      89d0           mov eax, edx                            ; ../coreutils-8.31/lib/vasprintf.c:49
0x00005b92      488b5c2408     mov rbx, qword [rsp + 8]                ; ../coreutils-8.31/lib/vasprintf.c:50
0x00005b97      6448331c2528.  xor rbx, qword fs:[0x28]
0x00005ba0      7527           jne 0x5bc9
0x00005ba2      4883c410       add rsp, 0x10
0x00005ba6      5b             pop rbx
0x00005ba7      c3             ret
0x00005ba8      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/vasprintf.c:42
0x00005bab      e8e0b9ffff     call sym.imp.free
0x00005bb0      e8fbb9ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasprintf.c:43
0x00005bb5      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x00005bbb      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/vasprintf.c:44 ; -1
0x00005bc0      ebd0           jmp 0x5b92
0x00005bc2      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/vasprintf.c:38 ; -1
0x00005bc7      ebc9           jmp 0x5b92
0x00005bc9      e8a2baffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/vasprintf.c:50
0x00005bce      6690           nop
;-- c_strtold:
0x00005bd0      4154           push r12
0x00005bd2      55             push rbp
0x00005bd3      4889fd         mov rbp, rdi
0x00005bd6      53             push rbx
0x00005bd7      4889f3         mov rbx, rsi
0x00005bda      4883ec10       sub rsp, 0x10
0x00005bde      488b05735620.  mov rax, qword [obj.c_locale_cache]     ; [0x20b258:8]=0
0x00005be5      4885c0         test rax, rax
0x00005be8      7476           je 0x5c60
0x00005bea      488b3d675620.  mov rdi, qword [obj.c_locale_cache]     ; [0x20b258:8]=0
0x00005bf1      4885ff         test rdi, rdi
0x00005bf4      744a           je 0x5c40
0x00005bf6      e885bbffff     call sym.imp.uselocale
0x00005bfb      4885c0         test rax, rax
0x00005bfe      4989c4         mov r12, rax
0x00005c01      743d           je 0x5c40
0x00005c03      4889de         mov rsi, rbx
0x00005c06      4889ef         mov rdi, rbp
0x00005c09      e822bcffff     call sym.imp.strtold
0x00005c0e      db3c24         fstp xword [rsp]
0x00005c11      e89ab9ffff     call sym.imp.__errno_location
0x00005c16      4c89e7         mov rdi, r12
0x00005c19      4889c3         mov rbx, rax
0x00005c1c      8b28           mov ebp, dword [rax]
0x00005c1e      e85dbbffff     call sym.imp.uselocale
0x00005c23      4885c0         test rax, rax
0x00005c26      db2c24         fld xword [rsp]
0x00005c29      7454           je 0x5c7f
0x00005c2b      892b           mov dword [rbx], ebp
0x00005c2d      4883c410       add rsp, 0x10
0x00005c31      5b             pop rbx
0x00005c32      5d             pop rbp
0x00005c33      415c           pop r12
0x00005c35      c3             ret
0x00005c36      662e0f1f8400.  nop word cs:[rax + rax]
0x00005c40      4885db         test rbx, rbx
0x00005c43      750b           jne 0x5c50
0x00005c45      4883c410       add rsp, 0x10
0x00005c49      d9ee           fldz
0x00005c4b      5b             pop rbx
0x00005c4c      5d             pop rbp
0x00005c4d      415c           pop r12
0x00005c4f      c3             ret
0x00005c50      48892b         mov qword [rbx], rbp
0x00005c53      4883c410       add rsp, 0x10
0x00005c57      d9ee           fldz
0x00005c59      5b             pop rbx
0x00005c5a      5d             pop rbp
0x00005c5b      415c           pop r12
0x00005c5d      c3             ret
0x00005c5e      6690           nop
0x00005c60      488d35b92400.  lea rsi, [0x00008120]                   ; "C"
0x00005c67      31d2           xor edx, edx
0x00005c69      bfbf1f0000     mov edi, 0x1fbf
0x00005c6e      e83dbaffff     call sym.imp.newlocale
0x00005c73      488905de5520.  mov qword [obj.c_locale_cache], rax     ; [0x20b258:8]=0
0x00005c7a      e96bffffff     jmp 0x5bea
0x00005c7f      ddd8           fstp st(0)
0x00005c81      e81ab9ffff     call sym.imp.abort
0x00005c86      662e0f1f8400.  nop word cs:[rax + rax]
;-- close_stream:
0x00005c90      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00005c92      55             push rbp
0x00005c93      4889fd         mov rbp, rdi
0x00005c96      53             push rbx
0x00005c97      e854b9ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00005c9c      8b5d00         mov ebx, dword [rbp]
0x00005c9f      4889ef         mov rdi, rbp
0x00005ca2      4989c4         mov r12, rax
0x00005ca5      e806010000     call sym.rpl_fclose
0x00005caa      83e320         and ebx, 0x20                           ; "@"
0x00005cad      85db           test ebx, ebx
0x00005caf      7517           jne 0x5cc8
0x00005cb1      85c0           test eax, eax
0x00005cb3      740a           je 0x5cbf                               ; stdio.h:-186
0x00005cb5      4d85e4         test r12, r12                           ; stdio.h:-178
0x00005cb8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005cbd      7439           je 0x5cf8
0x00005cbf      5b             pop rbx
0x00005cc0      5d             pop rbp
0x00005cc1      415c           pop r12
0x00005cc3      c3             ret
0x00005cc4      0f1f4000       nop dword [rax]
0x00005cc8      85c0           test eax, eax
0x00005cca      751c           jne 0x5ce8
0x00005ccc      e8dfb8ffff     call sym.imp.__errno_location
0x00005cd1      c70000000000   mov dword [rax], 0
0x00005cd7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005cdc      5b             pop rbx
0x00005cdd      5d             pop rbp
0x00005cde      415c           pop r12
0x00005ce0      c3             ret
0x00005ce1      0f1f80000000.  nop dword [rax]
0x00005ce8      5b             pop rbx
0x00005ce9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005cee      5d             pop rbp                                 ; stdio.h:-186
0x00005cef      415c           pop r12
0x00005cf1      c3             ret
0x00005cf2      660f1f440000   nop word [rax + rax]
0x00005cf8      e8b3b8ffff     call sym.imp.__errno_location
0x00005cfd      833809         cmp dword [rax], 9
0x00005d00      5b             pop rbx
0x00005d01      5d             pop rbp
0x00005d02      415c           pop r12                                 ; stdio.h:-178
0x00005d04      0f95c0         setne al
0x00005d07      0fb6c0         movzx eax, al
0x00005d0a      f7d8           neg eax
0x00005d0c      c3             ret
0x00005d0d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00005d10      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00005d14      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00005d16      e8d5baffff     call sym.imp.setlocale
0x00005d1b      4889c2         mov rdx, rax
0x00005d1e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00005d23      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00005d26      741d           je 0x5d45
0x00005d28      488d3df12300.  lea rdi, [0x00008120]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00005d2f      b902000000     mov ecx, 2
0x00005d34      4889d6         mov rsi, rdx
0x00005d37      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005d39      0f97c1         seta cl
0x00005d3c      80d900         sbb cl, 0
0x00005d3f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00005d41      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00005d43      750b           jne 0x5d50
0x00005d45      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005d49      c3             ret
0x00005d4a      660f1f440000   nop word [rax + rax]
0x00005d50      488d3d693300.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x90c0 ; "POSIX"
0x00005d57      b906000000     mov ecx, 6
0x00005d5c      4889d6         mov rsi, rdx
0x00005d5f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005d61      0f97c0         seta al
0x00005d64      1c00           sbb al, 0
0x00005d66      84c0           test al, al
0x00005d68      0f95c0         setne al
0x00005d6b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005d6f      c3             ret
;-- locale_charset:
0x00005d70      4883ec08       sub rsp, 8
0x00005d74      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00005d79      e832baffff     call sym.imp.nl_langinfo
0x00005d7e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00005d81      741d           je 0x5da0
0x00005d83      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00005d86      488d15393300.  lea rdx, str.ASCII                      ; 0x90c6 ; "ASCII"
0x00005d8d      480f44c2       cmove rax, rdx
0x00005d91      4883c408       add rsp, 8
0x00005d95      c3             ret
0x00005d96      662e0f1f8400.  nop word cs:[rax + rax]
0x00005da0      488d051f3300.  lea rax, str.ASCII                      ; 0x90c6 ; "ASCII"
0x00005da7      4883c408       add rsp, 8
0x00005dab      c3             ret
0x00005dac      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00005db0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00005db2      55             push rbp
0x00005db3      53             push rbx
0x00005db4      4889fb         mov rbx, rdi
0x00005db7      e8b4b9ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00005dbc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00005dbe      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00005dc1      7854           js 0x5e17                               ; ../coreutils-8.31/lib/fclose.c:66
0x00005dc3      e8f8b9ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00005dc8      85c0           test eax, eax
0x00005dca      752c           jne 0x5df8
0x00005dcc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00005dcf      e85c000000     call sym.rpl_fflush
0x00005dd4      85c0           test eax, eax
0x00005dd6      743c           je 0x5e14
0x00005dd8      e8d3b7ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00005ddd      448b20         mov r12d, dword [rax]
0x00005de0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005de3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00005de6      e835b8ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00005deb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00005dee      7530           jne 0x5e20
0x00005df0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005df1      5d             pop rbp
0x00005df2      415c           pop r12
0x00005df4      c3             ret
0x00005df5      0f1f00         nop dword [rax]
0x00005df8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00005dfb      e870b9ffff     call sym.imp.fileno
0x00005e00      31f6           xor esi, esi
0x00005e02      ba01000000     mov edx, 1
0x00005e07      89c7           mov edi, eax
0x00005e09      e8c2b8ffff     call sym.imp.lseek
0x00005e0e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005e12      75b8           jne 0x5dcc
0x00005e14      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005e17      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005e18      5d             pop rbp
0x00005e19      415c           pop r12
0x00005e1b      e900b8ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00005e20      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00005e24      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00005e29      ebc5           jmp 0x5df0
0x00005e2b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00005e30      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00005e33      53             push rbx
0x00005e34      4889fb         mov rbx, rdi
0x00005e37      7411           je 0x5e4a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00005e39      e882b9ffff     call sym.imp.__freading
0x00005e3e      85c0           test eax, eax
0x00005e40      7408           je 0x5e4a
0x00005e42      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00005e48      750e           jne 0x5e58
0x00005e4a      4889df         mov rdi, rbx
0x00005e4d      5b             pop rbx
0x00005e4e      e94db9ffff     jmp sym.imp.fflush
0x00005e53      0f1f440000     nop dword [rax + rax]
0x00005e58      4889df         mov rdi, rbx
0x00005e5b      ba01000000     mov edx, 1
0x00005e60      31f6           xor esi, esi
0x00005e62      e809000000     call sym.rpl_fseeko
0x00005e67      4889df         mov rdi, rbx
0x00005e6a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00005e6b      e930b9ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00005e70      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005e74      48394710       cmp qword [rdi + 0x10], rax
0x00005e78      7406           je 0x5e80                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00005e7a      e9d1b9ffff     jmp sym.imp.fseeko
0x00005e7f      90             nop
0x00005e80      488b4720       mov rax, qword [rdi + 0x20]
0x00005e84      48394728       cmp qword [rdi + 0x28], rax
0x00005e88      75f0           jne 0x5e7a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00005e8a      48837f4800     cmp qword [rdi + 0x48], 0
0x00005e8f      75e9           jne 0x5e7a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005e91      4154           push r12
0x00005e93      55             push rbp
0x00005e94      4189d4         mov r12d, edx
0x00005e97      53             push rbx
0x00005e98      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00005e9b      4889fb         mov rbx, rdi
0x00005e9e      e8cdb8ffff     call sym.imp.fileno
0x00005ea3      4489e2         mov edx, r12d
0x00005ea6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00005ea9      89c7           mov edi, eax
0x00005eab      e820b8ffff     call sym.imp.lseek
0x00005eb0      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005eb4      740c           je 0x5ec2
0x00005eb6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005eb9      488983900000.  mov qword [rbx + 0x90], rax
0x00005ec0      31c0           xor eax, eax
0x00005ec2      5b             pop rbx
0x00005ec3      5d             pop rbp
0x00005ec4      415c           pop r12
0x00005ec6      c3             ret
0x00005ec7      660f1f840000.  nop word [rax + rax]
;-- vasnprintf:
0x00005ed0      55             push rbp                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00005ed1      4889e5         mov rbp, rsp
0x00005ed4      4157           push r15
0x00005ed6      4156           push r14
0x00005ed8      4155           push r13
0x00005eda      4154           push r12
0x00005edc      4c8db550fcff.  lea r14, [rbp - 0x3b0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00005ee3      53             push rbx                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00005ee4      4889d3         mov rbx, rdx
0x00005ee7      4989cc         mov r12, rcx
0x00005eea      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00005eed      4881ec080400.  sub rsp, 0x408                          ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00005ef4      4889b5e8fbff.  mov qword [rbp - 0x418], rsi
0x00005efb      488db540fdff.  lea rsi, [rbp - 0x2c0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00005f02      4889bd18fcff.  mov qword [rbp - 0x3e8], rdi            ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00005f09      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00005f0c      4c89b5f0fbff.  mov qword [rbp - 0x410], r14
0x00005f13      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00005f1c      488945c8       mov qword [rbp - 0x38], rax
0x00005f20      31c0           xor eax, eax
0x00005f22      4889b5f8fbff.  mov qword [rbp - 0x408], rsi            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00005f29      e8c2120000     call sym.printf_parse
0x00005f2e      85c0           test eax, eax
0x00005f30      0f88620e0000   js 0x6d98
0x00005f36      4c89f6         mov rsi, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1802
0x00005f39      4c89e7         mov rdi, r12
0x00005f3c      e8af100000     call sym.printf_fetchargs
0x00005f41      85c0           test eax, eax
0x00005f43      0f88b70e0000   js 0x6e00
0x00005f49      488b8550fdff.  mov rax, qword [rbp - 0x2b0]            ; ../coreutils-8.31/lib/xsize.h:65
0x00005f50      48c7c2ffffff.  mov rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/xsize.h:66
0x00005f57      4883c007       add rax, 7                              ; ../coreutils-8.31/lib/xsize.h:65
0x00005f5b      4883f806       cmp rax, 6                              ; ../coreutils-8.31/lib/xsize.h:66
0x00005f5f      480f46c2       cmovbe rax, rdx
0x00005f63      48038558fdff.  add rax, qword [rbp - 0x2a8]
0x00005f6a      0f82280a0000   jb 0x6998
0x00005f70      4889c7         mov rdi, rax
0x00005f73      4531c0         xor r8d, r8d
0x00005f76      4883c706       add rdi, 6
0x00005f7a      410f92c0       setb r8b
0x00005f7e      0f82140a0000   jb 0x6998
0x00005f84      4881ff9f0f00.  cmp rdi, 0xf9f                          ; ../coreutils-8.31/lib/vasnprintf.c:1826
0x00005f8b      0f8647010000   jbe 0x60d8
0x00005f91      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1835
0x00005f95      4c898538fcff.  mov qword [rbp - 0x3c8], r8
0x00005f9c      0f84f6090000   je 0x6998
0x00005fa2      e8e9b7ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x00005fa7      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x00005faa      48898528fcff.  mov qword [rbp - 0x3d8], rax            ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x00005fb1      0f84e1090000   je 0x6998                               ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x00005fb7      4c8b8538fcff.  mov r8, qword [rbp - 0x3c8]
0x00005fbe      488985e0fbff.  mov qword [rbp - 0x420], rax
0x00005fc5      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/vasnprintf.c:1851
0x00005fc8      4883bd18fcff.  cmp qword [rbp - 0x3e8], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1843
0x00005fd0      740a           je 0x5fdc
0x00005fd2      488b85e8fbff.  mov rax, qword [rbp - 0x418]            ; ../coreutils-8.31/lib/vasnprintf.c:1846
0x00005fd9      4c8b20         mov r12, qword [rax]
0x00005fdc      4c8bad48fdff.  mov r13, qword [rbp - 0x2b8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x00005fe3      488d8544fcff.  lea rax, [rbp - 0x3bc]                  ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x00005fea      4c8bbd18fcff.  mov r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x00005ff1      48c78500fcff.  mov qword [rbp - 0x400], 0
0x00005ffc      48898510fcff.  mov qword [rbp - 0x3f0], rax            ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x00006003      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x00006006      4c89c3         mov rbx, r8
0x00006009      498b4d00       mov rcx, qword [r13]                    ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x0000600d      4989c0         mov r8, rax                             ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x00006010      4c39c1         cmp rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x00006013      0f8468090000   je 0x6981
0x00006019      4c29c1         sub rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1887
0x0000601c      4889d8         mov rax, rbx
0x0000601f      4801c8         add rax, rcx
0x00006022      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/xsize.h:65
0x00006025      0f83dd000000   jae 0x6108                              ; ../coreutils-8.31/lib/xsize.h:66
0x0000602b      4983fcff       cmp r12, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x0000602f      0f84cb0a0000   je 0x6b00
0x00006035      e876b5ffff     call sym.imp.__errno_location
0x0000603a      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00006041      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:5606
0x00006048      7409           je 0x6053
0x0000604a      4d85ff         test r15, r15
0x0000604d      0f85dd0a0000   jne 0x6b30
0x00006053      488b85e0fbff.  mov rax, qword [rbp - 0x420]            ; ../coreutils-8.31/lib/vasnprintf.c:5608
0x0000605a      4885c0         test rax, rax
0x0000605d      7408           je 0x6067
0x0000605f      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:5609
0x00006062      e829b5ffff     call sym.imp.free
0x00006067      488b85f8fbff.  mov rax, qword [rbp - 0x408]            ; ../coreutils-8.31/lib/vasnprintf.c:5611
0x0000606e      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00006075      4883c020       add rax, 0x20                           ; "@"
0x00006079      4839c7         cmp rdi, rax
0x0000607c      7405           je 0x6083
0x0000607e      e80db5ffff     call sym.imp.free
0x00006083      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x0000608a      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00006091      4883c010       add rax, 0x10
0x00006095      4839c7         cmp rdi, rax
0x00006098      7405           je 0x609f
0x0000609a      e8f1b4ffff     call sym.imp.free
0x0000609f      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5612
0x000060a6      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/vasnprintf.c:5613
0x000060a9      c7000c000000   mov dword [rax], 0xc                    ; ../coreutils-8.31/lib/vasnprintf.c:5612 ; [0xc:4]=0
0x000060af      488b7dc8       mov rdi, qword [rbp - 0x38]             ; ../coreutils-8.31/lib/vasnprintf.c:5615
0x000060b3      6448333c2528.  xor rdi, qword fs:[0x28]
0x000060bc      4c89f8         mov rax, r15
0x000060bf      0f85020f0000   jne 0x6fc7
0x000060c5      488d65d8       lea rsp, [rbp - 0x28]
0x000060c9      5b             pop rbx
0x000060ca      415c           pop r12
0x000060cc      415d           pop r13
0x000060ce      415e           pop r14
0x000060d0      415f           pop r15
0x000060d2      5d             pop rbp
0x000060d3      c3             ret
0x000060d4      0f1f4000       nop dword [rax]
0x000060d8      4883c024       add rax, 0x24                           ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x000060dc      48c785e0fbff.  mov qword [rbp - 0x420], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1829
0x000060e7      4883e0f0       and rax, 0xfffffffffffffff0             ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x000060eb      4829c4         sub rsp, rax
0x000060ee      488d44240f     lea rax, [rsp + 0xf]
0x000060f3      4883e0f0       and rax, 0xfffffffffffffff0
0x000060f7      48898528fcff.  mov qword [rbp - 0x3d8], rax
0x000060fe      e9c2feffff     jmp 0x5fc5
0x00006103      0f1f440000     nop dword [rax + rax]
0x00006108      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x0000610b      7367           jae 0x6174
0x0000610d      4d85e4         test r12, r12
0x00006110      0f852a090000   jne 0x6a40
0x00006116      4883f80c       cmp rax, 0xc
0x0000611a      0f8732090000   ja 0x6a52
0x00006120      41bc0c000000   mov r12d, 0xc
0x00006126      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000612d      0f94c2         sete dl
0x00006130      4d85ff         test r15, r15
0x00006133      0f843f090000   je 0x6a78
0x00006139      84d2           test dl, dl
0x0000613b      0f8537090000   jne 0x6a78
0x00006141      4c89e6         mov rsi, r12
0x00006144      4c89ff         mov rdi, r15
0x00006147      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x0000614e      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00006155      e886b6ffff     call sym.imp.realloc
0x0000615a      4885c0         test rax, rax
0x0000615d      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00006164      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x0000616b      0f84aa090000   je 0x6b1b
0x00006171      4989c7         mov r15, rax
0x00006174      498d3c1f       lea rdi, [r15 + rbx]                    ; ../coreutils-8.31/lib/vasnprintf.c:1896
0x00006178      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000617b      4c89c6         mov rsi, r8
0x0000617e      e8ddb5ffff     call sym.imp.memcpy
0x00006183      488b8500fcff.  mov rax, qword [rbp - 0x400]            ; ../coreutils-8.31/lib/vasnprintf.c:1906
0x0000618a      48398540fdff.  cmp qword [rbp - 0x2c0], rax
0x00006191      0f84b40c0000   je 0x6e4b
0x00006197      410fb65548     movzx edx, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:1910
0x0000619c      498b4550       mov rax, qword [r13 + 0x50]
0x000061a0      80fa25         cmp dl, 0x25
0x000061a3      0f848f070000   je 0x6938
0x000061a9      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1923
0x000061ad      0f84430c0000   je 0x6df6
0x000061b3      4c8b8558fcff.  mov r8, qword [rbp - 0x3a8]
0x000061ba      48c1e005       shl rax, 5
0x000061be      4c01c0         add rax, r8
0x000061c1      80fa6e         cmp dl, 0x6e                            ; ../coreutils-8.31/lib/vasnprintf.c:1926
0x000061c4      8b38           mov edi, dword [rax]
0x000061c6      89bd30fcffff   mov dword [rbp - 0x3d0], edi
0x000061cc      0f84de070000   je 0x69b0
0x000061d2      418b4510       mov eax, dword [r13 + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4603
0x000061d6      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4770
0x000061dd      a801           test al, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x000061df      c60725         mov byte [rdi], 0x25                    ; ../coreutils-8.31/lib/vasnprintf.c:4770 ; '%'
                                                                       ; [0x25:1]=0
0x000061e2      488d5f01       lea rbx, [rdi + 1]
0x000061e6      740f           je 0x61f7                               ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x000061e8      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4777
0x000061ef      488d5f02       lea rbx, [rdi + 2]
0x000061f3      c6470127       mov byte [rdi + 1], 0x27                ; '''
                                                                       ; [0x27:1]=0
0x000061f7      a802           test al, 2                              ; ../coreutils-8.31/lib/vasnprintf.c:4779
0x000061f9      7407           je 0x6202
0x000061fb      c6032d         mov byte [rbx], 0x2d                    ; ../coreutils-8.31/lib/vasnprintf.c:4780 ; '-'
                                                                       ; [0x2d:1]=0
0x000061fe      4883c301       add rbx, 1
0x00006202      a804           test al, 4                              ; ../coreutils-8.31/lib/vasnprintf.c:4781
0x00006204      7407           je 0x620d
0x00006206      c6032b         mov byte [rbx], 0x2b                    ; ../coreutils-8.31/lib/vasnprintf.c:4782 ; '+'
                                                                       ; [0x2b:1]=0
0x00006209      4883c301       add rbx, 1
0x0000620d      a808           test al, 8                              ; ../coreutils-8.31/lib/vasnprintf.c:4783
0x0000620f      7407           je 0x6218
0x00006211      c60320         mov byte [rbx], 0x20                    ; ../coreutils-8.31/lib/vasnprintf.c:4784 ; [0x20:1]=64 ; "@"
0x00006214      4883c301       add rbx, 1
0x00006218      a810           test al, 0x10                           ; ../coreutils-8.31/lib/vasnprintf.c:4785
0x0000621a      7407           je 0x6223
0x0000621c      c60323         mov byte [rbx], 0x23                    ; ../coreutils-8.31/lib/vasnprintf.c:4786 ; '#'
                                                                       ; [0x23:1]=0
0x0000621f      4883c301       add rbx, 1
0x00006223      a840           test al, 0x40                           ; ../coreutils-8.31/lib/vasnprintf.c:4788 ; segment.PHDR
0x00006225      7407           je 0x622e
0x00006227      c60349         mov byte [rbx], 0x49                    ; ../coreutils-8.31/lib/vasnprintf.c:4789 ; 'I'
                                                                       ; [0x49:1]=0
0x0000622a      4883c301       add rbx, 1
0x0000622e      a820           test al, 0x20                           ; ../coreutils-8.31/lib/vasnprintf.c:4793 ; "@"
0x00006230      7407           je 0x6239
0x00006232      c60330         mov byte [rbx], 0x30                    ; ../coreutils-8.31/lib/vasnprintf.c:4794 ; '0'
                                                                       ; [0x30:1]=0
0x00006235      4883c301       add rbx, 1
0x00006239      498b7518       mov rsi, qword [r13 + 0x18]             ; ../coreutils-8.31/lib/vasnprintf.c:4795
0x0000623d      498b5520       mov rdx, qword [r13 + 0x20]
0x00006241      4839d6         cmp rsi, rdx
0x00006244      7430           je 0x6276
0x00006246      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x00006249      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000624c      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00006253      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x00006256      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006259      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00006260      e8fbb4ffff     call sym.imp.memcpy
0x00006265      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4803
0x0000626c      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x00006273      4801cb         add rbx, rcx
0x00006276      498b7530       mov rsi, qword [r13 + 0x30]             ; ../coreutils-8.31/lib/vasnprintf.c:4816
0x0000627a      498b5538       mov rdx, qword [r13 + 0x38]
0x0000627e      4839d6         cmp rsi, rdx
0x00006281      7430           je 0x62b3
0x00006283      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x00006286      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006289      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00006290      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x00006293      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006296      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x0000629d      e8beb4ffff     call sym.imp.memcpy
0x000062a2      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4824
0x000062a9      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x000062b0      4801cb         add rbx, rcx
0x000062b3      8bbd30fcffff   mov edi, dword [rbp - 0x3d0]
0x000062b9      83ff10         cmp edi, 0x10
0x000062bc      772d           ja 0x62eb
0x000062be      b801000000     mov eax, 1
0x000062c3      89f9           mov ecx, edi
0x000062c5      48d3e0         shl rax, cl
0x000062c8      a980410100     test eax, 0x14180
0x000062cd      7515           jne 0x62e4
0x000062cf      f6c410         test ah, 0x10
0x000062d2      0f8558090000   jne 0x6c30
0x000062d8      f6c406         test ah, 6
0x000062db      740e           je 0x62eb
0x000062dd      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4847 ; 'l'
                                                                       ; [0x6c:1]=0
0x000062e0      4883c301       add rbx, 1
0x000062e4      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4859 ; 'l'
                                                                       ; [0x6c:1]=0
0x000062e7      4883c301       add rbx, 1
0x000062eb      410fb64548     movzx eax, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x000062f0      c6430100       mov byte [rbx + 1], 0                   ; ../coreutils-8.31/lib/vasnprintf.c:4922
0x000062f4      8803           mov byte [rbx], al                      ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x000062f6      498b4528       mov rax, qword [r13 + 0x28]             ; ../coreutils-8.31/lib/vasnprintf.c:4930
0x000062fa      4883f8ff       cmp rax, 0xffffffffffffffff
0x000062fe      0f842c070000   je 0x6a30
0x00006304      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4932
0x00006308      4c01c0         add rax, r8
0x0000630b      833805         cmp dword [rax], 5
0x0000630e      0f85e20a0000   jne 0x6df6
0x00006314      8b4010         mov eax, dword [rax + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4934
0x00006317      c78520fcffff.  mov dword [rbp - 0x3e0], 1
0x00006321      898548fcffff   mov dword [rbp - 0x3b8], eax
0x00006327      498b4540       mov rax, qword [r13 + 0x40]             ; ../coreutils-8.31/lib/vasnprintf.c:4936
0x0000632b      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000632f      742b           je 0x635c
0x00006331      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4938
0x00006335      4901c0         add r8, rax
0x00006338      41833805       cmp dword [r8], 5
0x0000633c      0f85b40a0000   jne 0x6df6
0x00006342      8b8520fcffff   mov eax, dword [rbp - 0x3e0]            ; ../coreutils-8.31/lib/vasnprintf.c:4940
0x00006348      418b5010       mov edx, dword [r8 + 0x10]
0x0000634c      89948548fcff.  mov dword [rbp + rax*4 - 0x3b8], edx
0x00006353      8d4001         lea eax, [rax + 1]
0x00006356      898520fcffff   mov dword [rbp - 0x3e0], eax
0x0000635c      4c89f0         mov rax, r14
0x0000635f      31d2           xor edx, edx
0x00006361      4883c002       add rax, 2
0x00006365      0f82610c0000   jb 0x6fcc
0x0000636b      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:4952
0x0000636e      734b           jae 0x63bb
0x00006370      4d85e4         test r12, r12
0x00006373      0f851f080000   jne 0x6b98
0x00006379      4883f80c       cmp rax, 0xc
0x0000637d      0f872d080000   ja 0x6bb0
0x00006383      41bc0c000000   mov r12d, 0xc
0x00006389      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006390      0f94c2         sete dl
0x00006393      4d85ff         test r15, r15
0x00006396      0f8444080000   je 0x6be0
0x0000639c      84d2           test dl, dl
0x0000639e      0f853c080000   jne 0x6be0
0x000063a4      4c89e6         mov rsi, r12
0x000063a7      4c89ff         mov rdi, r15
0x000063aa      e831b4ffff     call sym.imp.realloc
0x000063af      4885c0         test rax, rax
0x000063b2      0f847dfcffff   je 0x6035
0x000063b8      4989c7         mov r15, rax
0x000063bb      43c6043700     mov byte [r15 + r14], 0                 ; ../coreutils-8.31/lib/vasnprintf.c:4957
0x000063c0      e8ebb1ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:4960
0x000063c5      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x000063cc      8b00           mov eax, dword [rax]
0x000063ce      48899d08fcff.  mov qword [rbp - 0x3f8], rbx
0x000063d5      8985dcfbffff   mov dword [rbp - 0x424], eax
0x000063db      0f1f440000     nop dword [rax + rax]
0x000063e0      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x000063e7      4c89e3         mov rbx, r12                            ; ../coreutils-8.31/lib/vasnprintf.c:4968
0x000063ea      41baffffff7f   mov r10d, 0x7fffffff
0x000063f0      4c29f3         sub rbx, r14
0x000063f3      c78544fcffff.  mov dword [rbp - 0x3bc], 0xffffffff     ; ../coreutils-8.31/lib/vasnprintf.c:4964 ; -1
0x000063fd      4881fbffffff.  cmp rbx, 0x7fffffff
0x00006404      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x0000640a      8b8530fcffff   mov eax, dword [rbp - 0x3d0]            ; ../coreutils-8.31/lib/vasnprintf.c:5016
0x00006410      4c0f46d3       cmovbe r10, rbx
0x00006414      83f811         cmp eax, 0x11
0x00006417      0f87d9090000   ja 0x6df6
0x0000641d      488d35a82c00.  lea rsi, [0x000090cc]
0x00006424      48630486       movsxd rax, dword [rsi + rax*4]
0x00006428      4801f0         add rax, rsi
0x0000642b      ffe0           jmp rax
0x0000642d      0f1f00         nop dword [rax]
0x00006430      498b4550       mov rax, qword [r13 + 0x50]
0x00006434      4b8d3c37       lea rdi, [r15 + r14]
0x00006438      48c1e005       shl rax, 5
0x0000643c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006443      4c8b4810       mov r9, qword [rax + 0x10]
0x00006447      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000644d      83f801         cmp eax, 1
0x00006450      0f84c2040000   je 0x6918
0x00006456      83f802         cmp eax, 2
0x00006459      0f84a1040000   je 0x6900
0x0000645f      4883ec08       sub rsp, 8
0x00006463      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006469      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006470      4c89d6         mov rsi, r10                            ; ../coreutils-8.31/lib/vasnprintf.c:5007
0x00006473      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000647a      ba01000000     mov edx, 1
0x0000647f      31c0           xor eax, eax
0x00006481      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006488      e8f3b0ffff     call sym.imp.__snprintf_chk
0x0000648d      5e             pop rsi
0x0000648e      5f             pop rdi
0x0000648f      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006496      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x0000649c      85c9           test ecx, ecx
0x0000649e      0f8838010000   js 0x65dc
0x000064a4      4863d1         movsxd rdx, ecx
0x000064a7      4c39d2         cmp rdx, r10
0x000064aa      730e           jae 0x64ba
0x000064ac      4c01fa         add rdx, r15
0x000064af      42803c3200     cmp byte [rdx + r14], 0
0x000064b4      0f853c090000   jne 0x6df6
0x000064ba      39c1           cmp ecx, eax
0x000064bc      7d08           jge 0x64c6
0x000064be      898544fcffff   mov dword [rbp - 0x3bc], eax
0x000064c4      89c1           mov ecx, eax
0x000064c6      8d4101         lea eax, [rcx + 1]
0x000064c9      4c39d0         cmp rax, r10
0x000064cc      0f822e080000   jb 0x6d00
0x000064d2      4881fbfeffff.  cmp rbx, 0x7ffffffe
0x000064d9      0f8741080000   ja 0x6d20
0x000064df      4b8d3424       lea rsi, [r12 + r12]
0x000064e3      8d5102         lea edx, [rcx + 2]
0x000064e6      4d85e4         test r12, r12
0x000064e9      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x000064f0      480f49c6       cmovns rax, rsi
0x000064f4      4c01f2         add rdx, r14
0x000064f7      0f82bb0a0000   jb 0x6fb8
0x000064fd      4839d0         cmp rax, rdx
0x00006500      480f42c2       cmovb rax, rdx
0x00006504      4939c4         cmp r12, rax
0x00006507      0f83d3feffff   jae 0x63e0
0x0000650d      4d85e4         test r12, r12
0x00006510      0f882bfbffff   js 0x6041
0x00006516      4839c6         cmp rsi, rax
0x00006519      4989f4         mov r12, rsi
0x0000651c      730d           jae 0x652b
0x0000651e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006522      0f8419fbffff   je 0x6041
0x00006528      4989c4         mov r12, rax
0x0000652b      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006532      0f94c3         sete bl
0x00006535      4d85ff         test r15, r15
0x00006538      0f8482030000   je 0x68c0
0x0000653e      84db           test bl, bl
0x00006540      0f857a030000   jne 0x68c0
0x00006546      4c89e6         mov rsi, r12
0x00006549      4c89ff         mov rdi, r15
0x0000654c      e88fb2ffff     call sym.imp.realloc
0x00006551      4885c0         test rax, rax
0x00006554      0f84e7faffff   je 0x6041
0x0000655a      4989c7         mov r15, rax
0x0000655d      e97efeffff     jmp 0x63e0                              ; stdio2.h:-211
0x00006562      660f1f440000   nop word [rax + rax]
0x00006568      498b4550       mov rax, qword [r13 + 0x50]
0x0000656c      4b8d3c37       lea rdi, [r15 + r14]
0x00006570      48c1e005       shl rax, 5
0x00006574      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000657b      448b4810       mov r9d, dword [rax + 0x10]
0x0000657f      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006585      83f801         cmp eax, 1
0x00006588      0f8432020000   je 0x67c0
0x0000658e      83f802         cmp eax, 2
0x00006591      0f8471020000   je 0x6808
0x00006597      4883ec08       sub rsp, 8
0x0000659b      ffb510fcffff   push qword [rbp - 0x3f0]
0x000065a1      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x000065a8      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x000065af      ba01000000     mov edx, 1
0x000065b4      4c89d6         mov rsi, r10
0x000065b7      31c0           xor eax, eax
0x000065b9      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x000065c0      e8bbafffff     call sym.imp.__snprintf_chk
0x000065c5      5a             pop rdx
0x000065c6      59             pop rcx
0x000065c7      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x000065cd      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]            ; ../coreutils-8.31/lib/vasnprintf.c:4942
0x000065d4      85c9           test ecx, ecx
0x000065d6      0f89c8feffff   jns 0x64a4
0x000065dc      488bbd08fcff.  mov rdi, qword [rbp - 0x3f8]
0x000065e3      807f0100       cmp byte [rdi + 1], 0
0x000065e7      0f853b030000   jne 0x6928
0x000065ed      85c0           test eax, eax
0x000065ef      0f89c9feffff   jns 0x64be
0x000065f5      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x000065fc      8b18           mov ebx, dword [rax]
0x000065fe      85db           test ebx, ebx
0x00006600      751e           jne 0x6620
0x00006602      410fb64548     movzx eax, byte [r13 + 0x48]
0x00006607      bb16000000     mov ebx, 0x16
0x0000660c      83e0ef         and eax, 0xffffffef                     ; ../coreutils-8.31/lib/vasnprintf.c:4951 ; 4294967279
0x0000660f      3c63           cmp al, 0x63
0x00006611      b854000000     mov eax, 0x54                           ; 'T'
0x00006616      0f44d8         cmove ebx, eax
0x00006619      0f1f80000000.  nop dword [rax]
0x00006620      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006627      7409           je 0x6632
0x00006629      4d85ff         test r15, r15
0x0000662c      0f85aa070000   jne 0x6ddc
0x00006632      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x00006639      4885c0         test rax, rax
0x0000663c      7408           je 0x6646
0x0000663e      4889c7         mov rdi, rax
0x00006641      e84aafffff     call sym.imp.free
0x00006646      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000664d      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00006654      4883c020       add rax, 0x20                           ; "@"
0x00006658      4839c7         cmp rdi, rax
0x0000665b      7405           je 0x6662
0x0000665d      e82eafffff     call sym.imp.free
0x00006662      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00006669      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00006670      4883c010       add rax, 0x10
0x00006674      4839c7         cmp rdi, rax
0x00006677      7405           je 0x667e
0x00006679      e812afffff     call sym.imp.free
0x0000667e      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00006685      4531ff         xor r15d, r15d
0x00006688      8918           mov dword [rax], ebx
0x0000668a      e920faffff     jmp 0x60af
0x0000668f      90             nop
0x00006690      498b4550       mov rax, qword [r13 + 0x50]
0x00006694      4b8d3c37       lea rdi, [r15 + r14]
0x00006698      48c1e005       shl rax, 5
0x0000669c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000066a3      db6810         fld xword [rax + 0x10]
0x000066a6      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x000066ac      83f801         cmp eax, 1
0x000066af      0f842b060000   je 0x6ce0
0x000066b5      83f802         cmp eax, 2
0x000066b8      0f85c2040000   jne 0x6b80
0x000066be      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x000066c4      4883ec08       sub rsp, 8
0x000066c8      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/vasnprintf.c:4814
0x000066ce      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x000066d5      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x000066dc      4c89d6         mov rsi, r10
0x000066df      4883ec18       sub rsp, 0x18
0x000066e3      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x000066ea      ba01000000     mov edx, 1
0x000066ef      db7c2408       fstp xword [rsp + 8]
0x000066f3      50             push rax
0x000066f4      31c0           xor eax, eax
0x000066f6      4c8995d0fbff.  mov qword [rbp - 0x430], r10            ; ../coreutils-8.31/lib/vasnprintf.c:4808
0x000066fd      e87eaeffff     call sym.imp.__snprintf_chk
0x00006702      4883c430       add rsp, 0x30
0x00006706      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x0000670d      e984fdffff     jmp 0x6496
0x00006712      660f1f440000   nop word [rax + rax]
0x00006718      498b4550       mov rax, qword [r13 + 0x50]
0x0000671c      4b8d3c37       lea rdi, [r15 + r14]
0x00006720      48c1e005       shl rax, 5
0x00006724      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000672b      f20f104010     movsd xmm0, qword [rax + 0x10]
0x00006730      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006736      83f801         cmp eax, 1
0x00006739      0f8491050000   je 0x6cd0
0x0000673f      83f802         cmp eax, 2
0x00006742      0f85f8030000   jne 0x6b40
0x00006748      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x0000674e      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006754      50             push rax
0x00006755      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x0000675c      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006763      4c89d6         mov rsi, r10
0x00006766      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000676d      ba01000000     mov edx, 1
0x00006772      b801000000     mov eax, 1
0x00006777      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x0000677e      e8fdadffff     call sym.imp.__snprintf_chk
0x00006783      4158           pop r8
0x00006785      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x0000678c      4159           pop r9
0x0000678e      e903fdffff     jmp 0x6496
0x00006793      0f1f440000     nop dword [rax + rax]
0x00006798      498b4550       mov rax, qword [r13 + 0x50]
0x0000679c      4b8d3c37       lea rdi, [r15 + r14]
0x000067a0      48c1e005       shl rax, 5
0x000067a4      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000067ab      440fb74810     movzx r9d, word [rax + 0x10]
0x000067b0      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x000067b6      83f801         cmp eax, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4758
0x000067b9      0f85cffdffff   jne 0x658e
0x000067bf      90             nop
0x000067c0      ffb510fcffff   push qword [rbp - 0x3f0]
0x000067c6      4151           push r9
0x000067c8      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x000067cf      e9cdfdffff     jmp 0x65a1
0x000067d4      0f1f4000       nop dword [rax]
0x000067d8      498b4550       mov rax, qword [r13 + 0x50]
0x000067dc      4b8d3c37       lea rdi, [r15 + r14]
0x000067e0      48c1e005       shl rax, 5
0x000067e4      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000067eb      440fbf4810     movsx r9d, word [rax + 0x10]
0x000067f0      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x000067f6      83f801         cmp eax, 1
0x000067f9      74c5           je 0x67c0
0x000067fb      83f802         cmp eax, 2
0x000067fe      0f8593fdffff   jne 0x6597
0x00006804      0f1f4000       nop dword [rax]
0x00006808      4883ec08       sub rsp, 8
0x0000680c      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006812      4151           push r9
0x00006814      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x0000681a      50             push rax
0x0000681b      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]            ; ../coreutils-8.31/lib/vasnprintf.c:4623
0x00006822      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006829      4c89d6         mov rsi, r10
0x0000682c      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00006833      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4624
0x00006838      31c0           xor eax, eax
0x0000683a      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006841      e83aadffff     call sym.imp.__snprintf_chk
0x00006846      4883c420       add rsp, 0x20
0x0000684a      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006851      e940fcffff     jmp 0x6496
0x00006856      662e0f1f8400.  nop word cs:[rax + rax]
0x00006860      498b4550       mov rax, qword [r13 + 0x50]
0x00006864      4b8d3c37       lea rdi, [r15 + r14]
0x00006868      48c1e005       shl rax, 5
0x0000686c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006873      440fb64810     movzx r9d, byte [rax + 0x10]
0x00006878      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000687e      83f801         cmp eax, 1
0x00006881      0f8507fdffff   jne 0x658e
0x00006887      e934ffffff     jmp 0x67c0
0x0000688c      0f1f4000       nop dword [rax]
0x00006890      498b4550       mov rax, qword [r13 + 0x50]
0x00006894      4b8d3c37       lea rdi, [r15 + r14]
0x00006898      48c1e005       shl rax, 5
0x0000689c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000068a3      440fbe4810     movsx r9d, byte [rax + 0x10]
0x000068a8      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x000068ae      83f801         cmp eax, 1
0x000068b1      0f85d7fcffff   jne 0x658e
0x000068b7      e904ffffff     jmp 0x67c0
0x000068bc      0f1f4000       nop dword [rax]
0x000068c0      4c89e7         mov rdi, r12
0x000068c3      e8c8aeffff     call sym.imp.malloc
0x000068c8      4885c0         test rax, rax
0x000068cb      4889c1         mov rcx, rax
0x000068ce      0f846df7ffff   je 0x6041
0x000068d4      4d85f6         test r14, r14
0x000068d7      0f84b3000000   je 0x6990
0x000068dd      84db           test bl, bl
0x000068df      0f84ab000000   je 0x6990
0x000068e5      4c89fe         mov rsi, r15
0x000068e8      4c89f2         mov rdx, r14
0x000068eb      4889c7         mov rdi, rax
0x000068ee      e86daeffff     call sym.imp.memcpy
0x000068f3      4989c7         mov r15, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1511
0x000068f6      e9e5faffff     jmp 0x63e0
0x000068fb      0f1f440000     nop dword [rax + rax]
0x00006900      4883ec08       sub rsp, 8
0x00006904      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/xsize.h:-338
0x0000690a      4151           push r9
0x0000690c      e903ffffff     jmp 0x6814
0x00006911      0f1f80000000.  nop dword [rax]
0x00006918      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000691e      4151           push r9
0x00006920      e9a3feffff     jmp 0x67c8
0x00006925      0f1f00         nop dword [rax]
0x00006928      c6470100       mov byte [rdi + 1], 0
0x0000692c      e9affaffff     jmp 0x63e0
0x00006931      0f1f80000000.  nop dword [rax]
0x00006938      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000693c      0f85b4040000   jne 0x6df6
0x00006942      4c89f0         mov rax, r14
0x00006945      4883c001       add rax, 1
0x00006949      4889c3         mov rbx, rax
0x0000694c      0f8386000000   jae 0x69d8
0x00006952      4983fcff       cmp r12, 0xffffffffffffffff
0x00006956      0f85d9f6ffff   jne 0x6035
0x0000695c      4c89e3         mov rbx, r12
0x0000695f      43c6043725     mov byte [r15 + r14], 0x25              ; '%'
                                                                       ; [0x25:1]=0
0x00006964      4d8b4508       mov r8, qword [r13 + 8]
0x00006968      4983c558       add r13, 0x58
0x0000696c      498b4d00       mov rcx, qword [r13]
0x00006970      48838500fcff.  add qword [rbp - 0x400], 1
0x00006978      4c39c1         cmp rcx, r8
0x0000697b      0f8598f6ffff   jne 0x6019
0x00006981      4989de         mov r14, rbx
0x00006984      e9faf7ffff     jmp 0x6183                              ; ../coreutils-8.31/lib/vasnprintf.c:1525
0x00006989      0f1f80000000.  nop dword [rax]
0x00006990      4989cf         mov r15, rcx
0x00006993      e948faffff     jmp 0x63e0                              ; ../coreutils-8.31/lib/vasnprintf.c:1514
0x00006998      e813acffff     call sym.imp.__errno_location
0x0000699d      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x000069a4      e9bef6ffff     jmp 0x6067
0x000069a9      0f1f80000000.  nop dword [rax]
0x000069b0      89fa           mov edx, edi
0x000069b2      83ea12         sub edx, 0x12
0x000069b5      83fa04         cmp edx, 4
0x000069b8      0f8738040000   ja 0x6df6
0x000069be      488d3d4f2700.  lea rdi, [0x00009114]
0x000069c5      488b4010       mov rax, qword [rax + 0x10]
0x000069c9      48631497       movsxd rdx, dword [rdi + rdx*4]
0x000069cd      4801fa         add rdx, rdi
0x000069d0      ffe2           jmp rdx
0x000069d2      660f1f440000   nop word [rax + rax]
0x000069d8      4939c4         cmp r12, rax
0x000069db      7382           jae 0x695f
0x000069dd      4d85e4         test r12, r12
0x000069e0      0f85ca030000   jne 0x6db0
0x000069e6      4883f80c       cmp rax, 0xc
0x000069ea      0f87d2030000   ja 0x6dc2
0x000069f0      41bc0c000000   mov r12d, 0xc
0x000069f6      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000069fd      0f94c2         sete dl
0x00006a00      4d85ff         test r15, r15
0x00006a03      0f8467020000   je 0x6c70
0x00006a09      84d2           test dl, dl
0x00006a0b      0f855f020000   jne 0x6c70
0x00006a11      4c89e6         mov rsi, r12
0x00006a14      4c89ff         mov rdi, r15
0x00006a17      e8c4adffff     call sym.imp.realloc                    ; ../coreutils-8.31/lib/vasnprintf.c:1487
0x00006a1c      4885c0         test rax, rax
0x00006a1f      0f84f6000000   je 0x6b1b
0x00006a25      4989c7         mov r15, rax
0x00006a28      e932ffffff     jmp 0x695f
0x00006a2d      0f1f00         nop dword [rax]
0x00006a30      c78520fcffff.  mov dword [rbp - 0x3e0], 0
0x00006a3a      e9e8f8ffff     jmp 0x6327
0x00006a3f      90             nop
0x00006a40      0f88eff5ffff   js 0x6035
0x00006a46      4d01e4         add r12, r12
0x00006a49      4939c4         cmp r12, rax
0x00006a4c      0f83d4f6ffff   jae 0x6126
0x00006a52      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006a56      0f84d9f5ffff   je 0x6035
0x00006a5c      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006a63      4989c4         mov r12, rax
0x00006a66      0f94c2         sete dl
0x00006a69      4d85ff         test r15, r15
0x00006a6c      0f85c7f6ffff   jne 0x6139
0x00006a72      660f1f440000   nop word [rax + rax]
0x00006a78      4c89e7         mov rdi, r12
0x00006a7b      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00006a82      889530fcffff   mov byte [rbp - 0x3d0], dl
0x00006a88      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00006a8f      e8fcacffff     call sym.imp.malloc
0x00006a94      4885c0         test rax, rax
0x00006a97      4989c1         mov r9, rax
0x00006a9a      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00006aa1      0fb69530fcff.  movzx edx, byte [rbp - 0x3d0]
0x00006aa8      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x00006aaf      0f8480f5ffff   je 0x6035
0x00006ab5      4885db         test rbx, rbx
0x00006ab8      0f8402020000   je 0x6cc0
0x00006abe      84d2           test dl, dl
0x00006ac0      0f84fa010000   je 0x6cc0
0x00006ac6      4c89fe         mov rsi, r15
0x00006ac9      4889da         mov rdx, rbx
0x00006acc      4889c7         mov rdi, rax
0x00006acf      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x00006ad6      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00006add      e87eacffff     call sym.imp.memcpy
0x00006ae2      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00006ae9      4989c7         mov r15, rax
0x00006aec      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x00006af3      e97cf6ffff     jmp 0x6174
0x00006af8      0f1f84000000.  nop dword [rax + rax]
0x00006b00      4d89e6         mov r14, r12
0x00006b03      e96cf6ffff     jmp 0x6174
0x00006b08      0f1f84000000.  nop dword [rax + rax]
0x00006b10      4c8930         mov qword [rax], r14
0x00006b13      4c89f3         mov rbx, r14
0x00006b16      e949feffff     jmp 0x6964
0x00006b1b      e890aaffff     call sym.imp.__errno_location
0x00006b20      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00006b27      660f1f840000.  nop word [rax + rax]
0x00006b30      4c89ff         mov rdi, r15
0x00006b33      e858aaffff     call sym.imp.free
0x00006b38      e916f5ffff     jmp 0x6053
0x00006b3d      0f1f00         nop dword [rax]
0x00006b40      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x00006b47      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006b4e      4c89d6         mov rsi, r10
0x00006b51      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00006b58      ba01000000     mov edx, 1
0x00006b5d      b801000000     mov eax, 1
0x00006b62      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006b69      e812aaffff     call sym.imp.__snprintf_chk
0x00006b6e      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006b75      e91cf9ffff     jmp 0x6496
0x00006b7a      660f1f440000   nop word [rax + rax]
0x00006b80      4883ec10       sub rsp, 0x10
0x00006b84      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x00006b8b      db3c24         fstp xword [rsp]
0x00006b8e      e9d6f8ffff     jmp 0x6469
0x00006b93      0f1f440000     nop dword [rax + rax]
0x00006b98      0f8897f4ffff   js 0x6035
0x00006b9e      4d01e4         add r12, r12
0x00006ba1      4939c4         cmp r12, rax
0x00006ba4      0f83dff7ffff   jae 0x6389
0x00006baa      660f1f440000   nop word [rax + rax]
0x00006bb0      4885d2         test rdx, rdx
0x00006bb3      0f857cf4ffff   jne 0x6035
0x00006bb9      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006bbd      0f8472f4ffff   je 0x6035
0x00006bc3      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006bca      4989c4         mov r12, rax
0x00006bcd      0f94c2         sete dl                                 ; string_fortified.h:-369
0x00006bd0      4d85ff         test r15, r15
0x00006bd3      0f85c3f7ffff   jne 0x639c
0x00006bd9      0f1f80000000.  nop dword [rax]
0x00006be0      4c89e7         mov rdi, r12
0x00006be3      889538fcffff   mov byte [rbp - 0x3c8], dl
0x00006be9      e8a2abffff     call sym.imp.malloc
0x00006bee      4885c0         test rax, rax
0x00006bf1      4889c1         mov rcx, rax
0x00006bf4      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x00006bfb      0f8434f4ffff   je 0x6035                               ; ../coreutils-8.31/lib/vasnprintf.c:1528
0x00006c01      4d85f6         test r14, r14
0x00006c04      0f8496010000   je 0x6da0
0x00006c0a      84d2           test dl, dl
0x00006c0c      0f848e010000   je 0x6da0
0x00006c12      4c89fe         mov rsi, r15
0x00006c15      4c89f2         mov rdx, r14
0x00006c18      4889c7         mov rdi, rax
0x00006c1b      e840abffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/vasnprintf.c:1531
0x00006c20      4989c7         mov r15, rax
0x00006c23      e993f7ffff     jmp 0x63bb
0x00006c28      0f1f84000000.  nop dword [rax + rax]
0x00006c30      c6034c         mov byte [rbx], 0x4c                    ; 'L'
                                                                       ; [0x4c:1]=0
0x00006c33      4883c301       add rbx, 1
0x00006c37      e9aff6ffff     jmp 0x62eb
0x00006c3c      0f1f4000       nop dword [rax]
0x00006c40      448830         mov byte [rax], r14b
0x00006c43      4c89f3         mov rbx, r14
0x00006c46      e919fdffff     jmp 0x6964
0x00006c4b      0f1f440000     nop dword [rax + rax]
0x00006c50      448930         mov dword [rax], r14d
0x00006c53      4c89f3         mov rbx, r14
0x00006c56      e909fdffff     jmp 0x6964
0x00006c5b      0f1f440000     nop dword [rax + rax]
0x00006c60      66448930       mov word [rax], r14w
0x00006c64      4c89f3         mov rbx, r14
0x00006c67      e9f8fcffff     jmp 0x6964
0x00006c6c      0f1f4000       nop dword [rax]
0x00006c70      4c89e7         mov rdi, r12
0x00006c73      889538fcffff   mov byte [rbp - 0x3c8], dl
0x00006c79      e812abffff     call sym.imp.malloc
0x00006c7e      4885c0         test rax, rax
0x00006c81      4889c1         mov rcx, rax
0x00006c84      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x00006c8b      0f84a4f3ffff   je 0x6035                               ; stdio2.h:-339
0x00006c91      4d85f6         test r14, r14
0x00006c94      0f843a010000   je 0x6dd4
0x00006c9a      84d2           test dl, dl
0x00006c9c      0f8432010000   je 0x6dd4
0x00006ca2      4c89fe         mov rsi, r15
0x00006ca5      4c89f2         mov rdx, r14
0x00006ca8      4889c7         mov rdi, rax
0x00006cab      e8b0aaffff     call sym.imp.memcpy
0x00006cb0      4989c7         mov r15, rax
0x00006cb3      e9a7fcffff     jmp 0x695f
0x00006cb8      0f1f84000000.  nop dword [rax + rax]
0x00006cc0      4d89cf         mov r15, r9
0x00006cc3      e9acf4ffff     jmp 0x6174
0x00006cc8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/vasnprintf.c:5157
0x00006cd0      4883ec08       sub rsp, 8
0x00006cd4      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006cda      e976faffff     jmp 0x6755
0x00006cdf      90             nop
0x00006ce0      4883ec08       sub rsp, 8
0x00006ce4      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006cea      4883ec10       sub rsp, 0x10
0x00006cee      db3c24         fstp xword [rsp]
0x00006cf1      e925fbffff     jmp 0x681b
0x00006cf6      662e0f1f8400.  nop word cs:[rax + rax]
0x00006d00      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00006d07      8bbddcfbffff   mov edi, dword [rbp - 0x424]
0x00006d0d      4863d9         movsxd rbx, ecx
0x00006d10      4c01f3         add rbx, r14
0x00006d13      8938           mov dword [rax], edi
0x00006d15      e94afcffff     jmp 0x6964
0x00006d1a      660f1f440000   nop word [rax + rax]
0x00006d20      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006d27      7409           je 0x6d32
0x00006d29      4d85ff         test r15, r15
0x00006d2c      0f85b7000000   jne 0x6de9
0x00006d32      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x00006d39      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5198
0x00006d3c      7408           je 0x6d46
0x00006d3e      4889c7         mov rdi, rax
0x00006d41      e84aa8ffff     call sym.imp.free
0x00006d46      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x00006d4d      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00006d54      4883c020       add rax, 0x20                           ; "@"
0x00006d58      4839c7         cmp rdi, rax
0x00006d5b      7405           je 0x6d62
0x00006d5d      e82ea8ffff     call sym.imp.free
0x00006d62      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00006d69      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00006d70      4883c010       add rax, 0x10
0x00006d74      4839c7         cmp rdi, rax
0x00006d77      7405           je 0x6d7e
0x00006d79      e812a8ffff     call sym.imp.free
0x00006d7e      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00006d85      4531ff         xor r15d, r15d
0x00006d88      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x00006d8e      e91cf3ffff     jmp 0x60af
0x00006d93      0f1f440000     nop dword [rax + rax]
0x00006d98      4531ff         xor r15d, r15d
0x00006d9b      e90ff3ffff     jmp 0x60af
0x00006da0      4989cf         mov r15, rcx
0x00006da3      e913f6ffff     jmp 0x63bb                              ; ../coreutils-8.31/lib/vasnprintf.c:1273
0x00006da8      0f1f84000000.  nop dword [rax + rax]
0x00006db0      0f887ff2ffff   js 0x6035
0x00006db6      4d01e4         add r12, r12
0x00006db9      4939c4         cmp r12, rax
0x00006dbc      0f8334fcffff   jae 0x69f6
0x00006dc2      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006dc6      0f8469f2ffff   je 0x6035
0x00006dcc      4989c4         mov r12, rax
0x00006dcf      e922fcffff     jmp 0x69f6
0x00006dd4      4989cf         mov r15, rcx
0x00006dd7      e983fbffff     jmp 0x695f
0x00006ddc      4c89ff         mov rdi, r15
0x00006ddf      e8aca7ffff     call sym.imp.free
0x00006de4      e949f8ffff     jmp 0x6632
0x00006de9      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/vasnprintf.c:1275
0x00006dec      e89fa7ffff     call sym.imp.free
0x00006df1      e93cffffff     jmp 0x6d32
0x00006df6      e8a5a7ffff     call sym.imp.abort
0x00006dfb      0f1f440000     nop dword [rax + rax]
0x00006e00      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x00006e07      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00006e0e      4883c020       add rax, 0x20                           ; "@"
0x00006e12      4839c7         cmp rdi, rax
0x00006e15      7405           je 0x6e1c
0x00006e17      e874a7ffff     call sym.imp.free
0x00006e1c      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00006e23      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00006e2a      4883c010       add rax, 0x10
0x00006e2e      4839c7         cmp rdi, rax
0x00006e31      7405           je 0x6e38
0x00006e33      e858a7ffff     call sym.imp.free
0x00006e38      e873a7ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:5040
0x00006e3d      4531ff         xor r15d, r15d
0x00006e40      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x25400000
0x00006e46      e964f2ffff     jmp 0x60af
0x00006e4b      4c89f3         mov rbx, r14
0x00006e4e      31c0           xor eax, eax
0x00006e50      4883c301       add rbx, 1
0x00006e54      0f8206010000   jb 0x6f60
0x00006e5a      4939dc         cmp r12, rbx
0x00006e5d      734d           jae 0x6eac
0x00006e5f      4d85e4         test r12, r12
0x00006e62      0f8531010000   jne 0x6f99                              ; ../coreutils-8.31/lib/vasnprintf.c:5048
0x00006e68      4883fb0c       cmp rbx, 0xc
0x00006e6c      0f870c010000   ja 0x6f7e
0x00006e72      41bc0c000000   mov r12d, 0xc
0x00006e78      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006e7f      410f94c5       sete r13b
0x00006e83      4d85ff         test r15, r15
0x00006e86      0f84a0000000   je 0x6f2c
0x00006e8c      4584ed         test r13b, r13b
0x00006e8f      0f8597000000   jne 0x6f2c
0x00006e95      4c89e6         mov rsi, r12
0x00006e98      4c89ff         mov rdi, r15
0x00006e9b      e840a9ffff     call sym.imp.realloc
0x00006ea0      4885c0         test rax, rax
0x00006ea3      0f8472fcffff   je 0x6b1b
0x00006ea9      4989c7         mov r15, rax
0x00006eac      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006eb3      43c6043700     mov byte [r15 + r14], 0
0x00006eb8      7417           je 0x6ed1
0x00006eba      4939dc         cmp r12, rbx
0x00006ebd      7612           jbe 0x6ed1
0x00006ebf      4c89ff         mov rdi, r15
0x00006ec2      4889de         mov rsi, rbx
0x00006ec5      e816a9ffff     call sym.imp.realloc
0x00006eca      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5061
0x00006ecd      4c0f45f8       cmovne r15, rax
0x00006ed1      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x00006ed8      4885c0         test rax, rax
0x00006edb      7408           je 0x6ee5
0x00006edd      4889c7         mov rdi, rax
0x00006ee0      e8aba6ffff     call sym.imp.free
0x00006ee5      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x00006eec      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00006ef3      4883c020       add rax, 0x20                           ; "@"
0x00006ef7      4839c7         cmp rdi, rax
0x00006efa      7405           je 0x6f01
0x00006efc      e88fa6ffff     call sym.imp.free
0x00006f01      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00006f08      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00006f0f      4883c010       add rax, 0x10
0x00006f13      4839c7         cmp rdi, rax
0x00006f16      7405           je 0x6f1d
0x00006f18      e873a6ffff     call sym.imp.free
0x00006f1d      488b85e8fbff.  mov rax, qword [rbp - 0x418]
0x00006f24      4c8930         mov qword [rax], r14
0x00006f27      e983f1ffff     jmp 0x60af
0x00006f2c      4c89e7         mov rdi, r12
0x00006f2f      e85ca8ffff     call sym.imp.malloc
0x00006f34      4885c0         test rax, rax
0x00006f37      4889c1         mov rcx, rax
0x00006f3a      0f84f5f0ffff   je 0x6035
0x00006f40      4d85f6         test r14, r14
0x00006f43      746b           je 0x6fb0
0x00006f45      4584ed         test r13b, r13b
0x00006f48      7466           je 0x6fb0
0x00006f4a      4c89fe         mov rsi, r15
0x00006f4d      4c89f2         mov rdx, r14
0x00006f50      4889c7         mov rdi, rax
0x00006f53      e808a8ffff     call sym.imp.memcpy
0x00006f58      4989c7         mov r15, rax
0x00006f5b      e94cffffff     jmp 0x6eac                              ; ../coreutils-8.31/lib/vasnprintf.c:4732
0x00006f60      4983fcff       cmp r12, 0xffffffffffffffff
0x00006f64      b801000000     mov eax, 1
0x00006f69      0f843dffffff   je 0x6eac
0x00006f6f      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/vasnprintf.c:4421
0x00006f72      0f84bdf0ffff   je 0x6035
0x00006f78      0f88b7f0ffff   js 0x6035
0x00006f7e      4885c0         test rax, rax
0x00006f81      0f85aef0ffff   jne 0x6035
0x00006f87      4883fbff       cmp rbx, 0xffffffffffffffff
0x00006f8b      0f84a4f0ffff   je 0x6035
0x00006f91      4989dc         mov r12, rbx
0x00006f94      e9dffeffff     jmp 0x6e78
0x00006f99      0f8896f0ffff   js 0x6035
0x00006f9f      4d01e4         add r12, r12
0x00006fa2      4939dc         cmp r12, rbx
0x00006fa5      0f83cdfeffff   jae 0x6e78
0x00006fab      ebd1           jmp 0x6f7e
0x00006fad      0f1f00         nop dword [rax]
0x00006fb0      4989cf         mov r15, rcx
0x00006fb3      e9f4feffff     jmp 0x6eac
0x00006fb8      4983fcff       cmp r12, 0xffffffffffffffff
0x00006fbc      0f841ef4ffff   je 0x63e0
0x00006fc2      e97af0ffff     jmp 0x6041
0x00006fc7      e8a4a6ffff     call sym.imp.__stack_chk_fail
0x00006fcc      4983fcff       cmp r12, 0xffffffffffffffff
0x00006fd0      ba01000000     mov edx, 1
0x00006fd5      0f84e0f3ffff   je 0x63bb
0x00006fdb      4d85e4         test r12, r12
0x00006fde      0f8451f0ffff   je 0x6035
0x00006fe4      0f89c6fbffff   jns 0x6bb0
0x00006fea      e946f0ffff     jmp 0x6035
0x00006fef      90             nop
;-- printf_fetchargs:
0x00006ff0      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/printf-args.c:37
0x00006ff4      488b4608       mov rax, qword [rsi + 8]
0x00006ff8      7463           je 0x705d
0x00006ffa      4c8d052f2100.  lea r8, [0x00009130]                    ; ../coreutils-8.31/lib/printf-args.c:42
0x00007001      4c8d15882100.  lea r10, obj.wide_null_string.2696      ; 0x9190 ; U"(NULL)"
0x00007008      4c8d0d192100.  lea r9, [0x00009128]                    ; "(NULL)"
0x0000700f      31c9           xor ecx, ecx
0x00007011      0f1f80000000.  nop dword [rax]
0x00007018      833816         cmp dword [rax], 0x16
0x0000701b      7743           ja 0x7060
0x0000701d      8b10           mov edx, dword [rax]
0x0000701f      49631490       movsxd rdx, dword [r8 + rdx*4]
0x00007023      4c01c2         add rdx, r8
0x00007026      ffe2           jmp rdx
0x00007028      0f1f84000000.  nop dword [rax + rax]
0x00007030      488b5708       mov rdx, qword [rdi + 8]                ; stddef.h:38      && !defined(__need_wint_t))
0x00007034      4883c20f       add rdx, 0xf
0x00007038      4883e2f0       and rdx, 0xfffffffffffffff0
0x0000703c      4c8d5a10       lea r11, [rdx + 0x10]
0x00007040      4c895f08       mov qword [rdi + 8], r11
0x00007044      db2a           fld xword [rdx]
0x00007046      db7810         fstp xword [rax + 0x10]
0x00007049      0f1f80000000.  nop dword [rax]
0x00007050      4883c101       add rcx, 1
0x00007054      4883c020       add rax, 0x20                           ; stddef.h:-9 ; "@"
0x00007058      48390e         cmp qword [rsi], rcx
0x0000705b      77bb           ja 0x7018
0x0000705d      31c0           xor eax, eax
0x0000705f      c3             ret
0x00007060      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00007065      c3             ret
0x00007066      448b1f         mov r11d, dword [rdi]
0x00007069      4183fb2f       cmp r11d, 0x2f
0x0000706d      0f8737010000   ja 0x71aa
0x00007073      4489da         mov edx, r11d
0x00007076      48035710       add rdx, qword [rdi + 0x10]             ; stddef.h:-54
0x0000707a      4183c308       add r11d, 8
0x0000707e      44891f         mov dword [rdi], r11d
0x00007081      488b12         mov rdx, qword [rdx]
0x00007084      48895010       mov qword [rax + 0x10], rdx
0x00007088      ebc6           jmp 0x7050
0x0000708a      448b1f         mov r11d, dword [rdi]
0x0000708d      4183fb2f       cmp r11d, 0x2f
0x00007091      0f8735010000   ja 0x71cc
0x00007097      4489da         mov edx, r11d
0x0000709a      48035710       add rdx, qword [rdi + 0x10]
0x0000709e      4183c308       add r11d, 8
0x000070a2      44891f         mov dword [rdi], r11d
0x000070a5      8b12           mov edx, dword [rdx]
0x000070a7      895010         mov dword [rax + 0x10], edx
0x000070aa      eba4           jmp 0x7050
0x000070ac      448b1f         mov r11d, dword [rdi]
0x000070af      4183fb2f       cmp r11d, 0x2f
0x000070b3      0f8702010000   ja 0x71bb
0x000070b9      4489da         mov edx, r11d                           ; stddef.h:-47
0x000070bc      48035710       add rdx, qword [rdi + 0x10]
0x000070c0      4183c308       add r11d, 8
0x000070c4      44891f         mov dword [rdi], r11d
0x000070c7      8b12           mov edx, dword [rdx]
0x000070c9      885010         mov byte [rax + 0x10], dl
0x000070cc      eb82           jmp 0x7050
0x000070ce      448b1f         mov r11d, dword [rdi]
0x000070d1      4183fb2f       cmp r11d, 0x2f
0x000070d5      0f879f000000   ja 0x717a
0x000070db      4489da         mov edx, r11d
0x000070de      48035710       add rdx, qword [rdi + 0x10]
0x000070e2      4183c308       add r11d, 8
0x000070e6      44891f         mov dword [rdi], r11d
0x000070e9      8b12           mov edx, dword [rdx]
0x000070eb      66895010       mov word [rax + 0x10], dx
0x000070ef      e95cffffff     jmp 0x7050
0x000070f4      448b1f         mov r11d, dword [rdi]
0x000070f7      4183fb2f       cmp r11d, 0x2f
0x000070fb      0f878a000000   ja 0x718b
0x00007101      4489da         mov edx, r11d
0x00007104      48035710       add rdx, qword [rdi + 0x10]
0x00007108      4183c308       add r11d, 8
0x0000710c      44891f         mov dword [rdi], r11d
0x0000710f      488b12         mov rdx, qword [rdx]
0x00007112      4885d2         test rdx, rdx
0x00007115      490f44d1       cmove rdx, r9                           ; stddef.h:-24
0x00007119      48895010       mov qword [rax + 0x10], rdx
0x0000711d      e92effffff     jmp 0x7050
0x00007122      448b5f04       mov r11d, dword [rdi + 4]
0x00007126      4181fbaf0000.  cmp r11d, 0xaf
0x0000712d      0f87aa000000   ja 0x71dd
0x00007133      4489da         mov edx, r11d
0x00007136      48035710       add rdx, qword [rdi + 0x10]
0x0000713a      4183c310       add r11d, 0x10
0x0000713e      44895f04       mov dword [rdi + 4], r11d
0x00007142      f20f1002       movsd xmm0, qword [rdx]
0x00007146      f20f114010     movsd qword [rax + 0x10], xmm0
0x0000714b      e900ffffff     jmp 0x7050
0x00007150      448b1f         mov r11d, dword [rdi]
0x00007153      4183fb2f       cmp r11d, 0x2f
0x00007157      7743           ja 0x719c
0x00007159      4489da         mov edx, r11d
0x0000715c      48035710       add rdx, qword [rdi + 0x10]
0x00007160      4183c308       add r11d, 8
0x00007164      44891f         mov dword [rdi], r11d
0x00007167      488b12         mov rdx, qword [rdx]
0x0000716a      4885d2         test rdx, rdx
0x0000716d      490f44d2       cmove rdx, r10
0x00007171      48895010       mov qword [rax + 0x10], rdx
0x00007175      e9d6feffff     jmp 0x7050
0x0000717a      488b5708       mov rdx, qword [rdi + 8]
0x0000717e      4c8d5a08       lea r11, [rdx + 8]
0x00007182      4c895f08       mov qword [rdi + 8], r11
0x00007186      e95effffff     jmp 0x70e9
0x0000718b      488b5708       mov rdx, qword [rdi + 8]
0x0000718f      4c8d5a08       lea r11, [rdx + 8]
0x00007193      4c895f08       mov qword [rdi + 8], r11
0x00007197      e973ffffff     jmp 0x710f
0x0000719c      488b5708       mov rdx, qword [rdi + 8]
0x000071a0      4c8d5a08       lea r11, [rdx + 8]
0x000071a4      4c895f08       mov qword [rdi + 8], r11
0x000071a8      ebbd           jmp 0x7167
0x000071aa      488b5708       mov rdx, qword [rdi + 8]
0x000071ae      4c8d5a08       lea r11, [rdx + 8]
0x000071b2      4c895f08       mov qword [rdi + 8], r11
0x000071b6      e9c6feffff     jmp 0x7081
0x000071bb      488b5708       mov rdx, qword [rdi + 8]
0x000071bf      4c8d5a08       lea r11, [rdx + 8]
0x000071c3      4c895f08       mov qword [rdi + 8], r11
0x000071c7      e9fbfeffff     jmp 0x70c7
0x000071cc      488b5708       mov rdx, qword [rdi + 8]
0x000071d0      4c8d5a08       lea r11, [rdx + 8]
0x000071d4      4c895f08       mov qword [rdi + 8], r11
0x000071d8      e9c8feffff     jmp 0x70a5
0x000071dd      488b5708       mov rdx, qword [rdi + 8]
0x000071e1      4c8d5a08       lea r11, [rdx + 8]
0x000071e5      4c895f08       mov qword [rdi + 8], r11
0x000071e9      e954ffffff     jmp 0x7142
0x000071ee      6690           nop
;-- printf_parse:
0x000071f0      4157           push r15
0x000071f2      4156           push r14
0x000071f4      488d4e20       lea rcx, [rsi + 0x20]
0x000071f8      4155           push r13
0x000071fa      4154           push r12
0x000071fc      488d4210       lea rax, [rdx + 0x10]
0x00007200      55             push rbp
0x00007201      53             push rbx
0x00007202      4989f6         mov r14, rsi
0x00007205      4989d7         mov r15, rdx
0x00007208      31db           xor ebx, ebx
0x0000720a      41b907000000   mov r9d, 7
0x00007210      4883ec58       sub rsp, 0x58
0x00007214      41ba07000000   mov r10d, 7
0x0000721a      48c706000000.  mov qword [rsi], 0
0x00007221      48894e08       mov qword [rsi + 8], rcx
0x00007225      48894c2428     mov qword [rsp + 0x28], rcx
0x0000722a      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00007231      48c702000000.  mov qword [rdx], 0
0x00007238      4889442408     mov qword [rsp + 8], rax
0x0000723d      48894208       mov qword [rdx + 8], rax
0x00007241      48c744241800.  mov qword [rsp + 0x18], 0
0x0000724a      48c744241000.  mov qword [rsp + 0x10], 0
0x00007253      48c744242000.  mov qword [rsp + 0x20], 0
0x0000725c      eb0d           jmp 0x726b
0x0000725e      6690           nop
0x00007260      3c25           cmp al, 0x25
0x00007262      488d6f01       lea rbp, [rdi + 1]
0x00007266      7440           je 0x72a8
0x00007268      4889ef         mov rdi, rbp
0x0000726b      0fb607         movzx eax, byte [rdi]
0x0000726e      84c0           test al, al
0x00007270      75ee           jne 0x7260
0x00007272      488d049b       lea rax, [rbx + rbx*4]
0x00007276      488d0443       lea rax, [rbx + rax*2]
0x0000727a      48893cc1       mov qword [rcx + rax*8], rdi
0x0000727e      488b442410     mov rax, qword [rsp + 0x10]
0x00007283      49894610       mov qword [r14 + 0x10], rax
0x00007287      488b442418     mov rax, qword [rsp + 0x18]
0x0000728c      49894618       mov qword [r14 + 0x18], rax
0x00007290      31c0           xor eax, eax
0x00007292      4883c458       add rsp, 0x58
0x00007296      5b             pop rbx
0x00007297      5d             pop rbp
0x00007298      415c           pop r12
0x0000729a      415d           pop r13
0x0000729c      415e           pop r14
0x0000729e      415f           pop r15
0x000072a0      c3             ret
0x000072a1      0f1f80000000.  nop dword [rax]
0x000072a8      488d049b       lea rax, [rbx + rbx*4]
0x000072ac      4d89c5         mov r13, r8
0x000072af      488d0443       lea rax, [rbx + rax*2]
0x000072b3      4c8d24c1       lea r12, [rcx + rax*8]
0x000072b7      49893c24       mov qword [r12], rdi
0x000072bb      41c744241000.  mov dword [r12 + 0x10], 0
0x000072c4      49c744241800.  mov qword [r12 + 0x18], 0
0x000072cd      49c744242000.  mov qword [r12 + 0x20], 0
0x000072d6      4d89442428     mov qword [r12 + 0x28], r8
0x000072db      49c744243000.  mov qword [r12 + 0x30], 0
0x000072e4      49c744243800.  mov qword [r12 + 0x38], 0
0x000072ed      4d89442440     mov qword [r12 + 0x40], r8
0x000072f2      4d89442450     mov qword [r12 + 0x50], r8
0x000072f7      0fb65f01       movzx ebx, byte [rdi + 1]
0x000072fb      8d43d0         lea eax, [rbx - 0x30]
0x000072fe      3c09           cmp al, 9
0x00007300      773c           ja 0x733e
0x00007302      e933040000     jmp 0x773a
0x00007307      660f1f840000.  nop word [rax + rax]
0x00007310      80fb2d         cmp bl, 0x2d
0x00007313      7443           je 0x7358
0x00007315      80fb2b         cmp bl, 0x2b
0x00007318      7446           je 0x7360
0x0000731a      80fb20         cmp bl, 0x20                            ; "@"
0x0000731d      7451           je 0x7370
0x0000731f      80fb23         cmp bl, 0x23
0x00007322      745c           je 0x7380
0x00007324      80fb30         cmp bl, 0x30
0x00007327      7467           je 0x7390
0x00007329      80fb49         cmp bl, 0x49
0x0000732c      7572           jne 0x73a0
0x0000732e      41834c241040   or dword [r12 + 0x10], 0x40             ; segment.PHDR
                                                                       ; [0x40:4]=6
0x00007334      0f1f4000       nop dword [rax]
0x00007338      0fb618         movzx ebx, byte [rax]
0x0000733b      4889c5         mov rbp, rax
0x0000733e      488d4501       lea rax, [rbp + 1]
0x00007342      80fb27         cmp bl, 0x27
0x00007345      4889c2         mov rdx, rax
0x00007348      75c6           jne 0x7310
0x0000734a      41834c241001   or dword [r12 + 0x10], 1
0x00007350      ebe6           jmp 0x7338
0x00007352      660f1f440000   nop word [rax + rax]
0x00007358      41834c241002   or dword [r12 + 0x10], 2
0x0000735e      ebd8           jmp 0x7338
0x00007360      41834c241004   or dword [r12 + 0x10], 4
0x00007366      ebd0           jmp 0x7338
0x00007368      0f1f84000000.  nop dword [rax + rax]
0x00007370      41834c241008   or dword [r12 + 0x10], 8
0x00007376      ebc0           jmp 0x7338
0x00007378      0f1f84000000.  nop dword [rax + rax]
0x00007380      41834c241010   or dword [r12 + 0x10], 0x10             ; [0x10:4]=0x3e0003
0x00007386      ebb0           jmp 0x7338
0x00007388      0f1f84000000.  nop dword [rax + rax]
0x00007390      41834c241020   or dword [r12 + 0x10], 0x20             ; [0x20:4]=64 ; "@"
0x00007396      eba0           jmp 0x7338
0x00007398      0f1f84000000.  nop dword [rax + rax]
0x000073a0      80fb2a         cmp bl, 0x2a
0x000073a3      0f84b0010000   je 0x7559
0x000073a9      8d4bd0         lea ecx, [rbx - 0x30]
0x000073ac      80f909         cmp cl, 9
0x000073af      0f8612040000   jbe 0x77c7
0x000073b5      80fb2e         cmp bl, 0x2e
0x000073b8      0f84d1020000   je 0x768f
0x000073be      31c0           xor eax, eax
0x000073c0      be01000000     mov esi, 1
0x000073c5      eb30           jmp 0x73f7
0x000073c7      660f1f840000.  nop word [rax + rax]
0x000073d0      80fb4c         cmp bl, 0x4c
0x000073d3      743b           je 0x7410
0x000073d5      80fb6c         cmp bl, 0x6c
0x000073d8      7416           je 0x73f0
0x000073da      80fb6a         cmp bl, 0x6a
0x000073dd      7411           je 0x73f0
0x000073df      89da           mov edx, ebx
0x000073e1      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000073e4      80fa5a         cmp dl, 0x5a
0x000073e7      7407           je 0x73f0
0x000073e9      80fb74         cmp bl, 0x74
0x000073ec      752a           jne 0x7418
0x000073ee      6690           nop
0x000073f0      83c008         add eax, 8
0x000073f3      0fb65d00       movzx ebx, byte [rbp]
0x000073f7      4883c501       add rbp, 1
0x000073fb      80fb68         cmp bl, 0x68
0x000073fe      75d0           jne 0x73d0
0x00007400      89c1           mov ecx, eax
0x00007402      89f2           mov edx, esi
0x00007404      83e101         and ecx, 1
0x00007407      d3e2           shl edx, cl
0x00007409      09d0           or eax, edx
0x0000740b      ebe6           jmp 0x73f3
0x0000740d      0f1f00         nop dword [rax]
0x00007410      83c804         or eax, 4
0x00007413      ebde           jmp 0x73f3
0x00007415      0f1f00         nop dword [rax]
0x00007418      8d53db         lea edx, [rbx - 0x25]
0x0000741b      80fa53         cmp dl, 0x53
0x0000741e      0f8717060000   ja 0x7a3b
0x00007424      488d0d811d00.  lea rcx, [0x000091ac]
0x0000742b      0fb6d2         movzx edx, dl
0x0000742e      48631491       movsxd rdx, dword [rcx + rdx*4]
0x00007432      4801ca         add rdx, rcx
0x00007435      ffe2           jmp rdx
0x00007437      41bb10000000   mov r11d, 0x10
0x0000743d      bb73000000     mov ebx, 0x73                           ; 's'
0x00007442      660f1f440000   nop word [rax + rax]
0x00007448      4983fdff       cmp r13, 0xffffffffffffffff
0x0000744c      0f84b5060000   je 0x7b07
0x00007452      4d896c2450     mov qword [r12 + 0x50], r13
0x00007457      4d39e9         cmp r9, r13
0x0000745a      498b4f08       mov rcx, qword [r15 + 8]
0x0000745e      0f861c060000   jbe 0x7a80
0x00007464      498b07         mov rax, qword [r15]
0x00007467      4889c2         mov rdx, rax
0x0000746a      48c1e205       shl rdx, 5
0x0000746e      4801ca         add rdx, rcx
0x00007471      4c39e8         cmp rax, r13
0x00007474      7720           ja 0x7496
0x00007476      662e0f1f8400.  nop word cs:[rax + rax]
0x00007480      4883c001       add rax, 1
0x00007484      c70200000000   mov dword [rdx], 0
0x0000748a      4883c220       add rdx, 0x20                           ; "@"
0x0000748e      4c39e8         cmp rax, r13
0x00007491      76ed           jbe 0x7480
0x00007493      498907         mov qword [r15], rax
0x00007496      49c1e505       shl r13, 5
0x0000749a      4a8d0429       lea rax, [rcx + r13]
0x0000749e      8b10           mov edx, dword [rax]
0x000074a0      85d2           test edx, edx
0x000074a2      0f85cb050000   jne 0x7a73
0x000074a8      448918         mov dword [rax], r11d
0x000074ab      41885c2448     mov byte [r12 + 0x48], bl
0x000074b0      498b06         mov rax, qword [r14]
0x000074b3      49896c2408     mov qword [r12 + 8], rbp
0x000074b8      488d5801       lea rbx, [rax + 1]
0x000074bc      4939da         cmp r10, rbx
0x000074bf      49891e         mov qword [r14], rbx
0x000074c2      0f8788000000   ja 0x7550
0x000074c8      4d85d2         test r10, r10
0x000074cb      0f88a6090000   js 0x7e77
0x000074d1      4d01d2         add r10, r10
0x000074d4      48b8bae8a28b.  movabs rax, 0x2e8ba2e8ba2e8ba
0x000074de      4939c2         cmp r10, rax
0x000074e1      0f8790090000   ja 0x7e77
0x000074e7      4b8d0492       lea rax, [r10 + r10*4]
0x000074eb      498b7e08       mov rdi, qword [r14 + 8]
0x000074ef      48397c2428     cmp qword [rsp + 0x28], rdi
0x000074f4      4c894c2440     mov qword [rsp + 0x40], r9
0x000074f9      4c89542438     mov qword [rsp + 0x38], r10
0x000074fe      498d0442       lea rax, [r10 + rax*2]
0x00007502      4c89442430     mov qword [rsp + 0x30], r8
0x00007507      488d34c50000.  lea rsi, [rax*8]
0x0000750f      0f84b8060000   je 0x7bcd
0x00007515      e8c6a2ffff     call sym.imp.realloc
0x0000751a      4885c0         test rax, rax
0x0000751d      4889c1         mov rcx, rax
0x00007520      4c8b442430     mov r8, qword [rsp + 0x30]
0x00007525      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000752a      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000752f      0f8442090000   je 0x7e77
0x00007535      488b442428     mov rax, qword [rsp + 0x28]
0x0000753a      493b4608       cmp rax, qword [r14 + 8]
0x0000753e      498b1e         mov rbx, qword [r14]
0x00007541      0f84a9060000   je 0x7bf0
0x00007547      49894e08       mov qword [r14 + 8], rcx
0x0000754b      e918fdffff     jmp 0x7268
0x00007550      498b4e08       mov rcx, qword [r14 + 8]
0x00007554      e90ffdffff     jmp 0x7268
0x00007559      488b742410     mov rsi, qword [rsp + 0x10]
0x0000755e      b901000000     mov ecx, 1
0x00007563      49896c2418     mov qword [r12 + 0x18], rbp
0x00007568      4989442420     mov qword [r12 + 0x20], rax
0x0000756d      4885f6         test rsi, rsi
0x00007570      480f45ce       cmovne rcx, rsi
0x00007574      48894c2410     mov qword [rsp + 0x10], rcx
0x00007579      0fb64d01       movzx ecx, byte [rbp + 1]
0x0000757d      8d71d0         lea esi, [rcx - 0x30]
0x00007580      4080fe09       cmp sil, 9
0x00007584      0f86db020000   jbe 0x7865
0x0000758a      488b742420     mov rsi, qword [rsp + 0x20]
0x0000758f      4883feff       cmp rsi, 0xffffffffffffffff
0x00007593      488d5601       lea rdx, [rsi + 1]
0x00007597      4989742428     mov qword [r12 + 0x28], rsi
0x0000759c      0f8499040000   je 0x7a3b
0x000075a2      488b5c2420     mov rbx, qword [rsp + 0x20]
0x000075a7      4889c5         mov rbp, rax
0x000075aa      4889542420     mov qword [rsp + 0x20], rdx
0x000075af      4939d9         cmp r9, rbx
0x000075b2      498b4f08       mov rcx, qword [r15 + 8]
0x000075b6      0f8776060000   ja 0x7c32
0x000075bc      4d01c9         add r9, r9
0x000075bf      488d4301       lea rax, [rbx + 1]
0x000075c3      4939d9         cmp r9, rbx
0x000075c6      4c0f46c8       cmovbe r9, rax
0x000075ca      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x000075d4      4939c1         cmp r9, rax
0x000075d7      0f879e080000   ja 0x7e7b
0x000075dd      4c89ce         mov rsi, r9
0x000075e0      4c894c2440     mov qword [rsp + 0x40], r9
0x000075e5      4c89542438     mov qword [rsp + 0x38], r10
0x000075ea      48c1e605       shl rsi, 5
0x000075ee      48394c2408     cmp qword [rsp + 8], rcx
0x000075f3      4c89442430     mov qword [rsp + 0x30], r8
0x000075f8      0f8413070000   je 0x7d11
0x000075fe      4889cf         mov rdi, rcx
0x00007601      e8daa1ffff     call sym.imp.realloc
0x00007606      498b5708       mov rdx, qword [r15 + 8]
0x0000760a      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000760f      4889c1         mov rcx, rax
0x00007612      4c8b542438     mov r10, qword [rsp + 0x38]
0x00007617      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000761c      4885c9         test rcx, rcx
0x0000761f      0f84b2080000   je 0x7ed7
0x00007625      4839542408     cmp qword [rsp + 8], rdx
0x0000762a      498b07         mov rax, qword [r15]
0x0000762d      0f84b8070000   je 0x7deb
0x00007633      49894f08       mov qword [r15 + 8], rcx
0x00007637      4889c2         mov rdx, rax
0x0000763a      48c1e205       shl rdx, 5
0x0000763e      4801ca         add rdx, rcx
0x00007641      4839d8         cmp rax, rbx
0x00007644      7720           ja 0x7666
0x00007646      662e0f1f8400.  nop word cs:[rax + rax]
0x00007650      4883c001       add rax, 1
0x00007654      c70200000000   mov dword [rdx], 0
0x0000765a      4883c220       add rdx, 0x20                           ; "@"
0x0000765e      4839d8         cmp rax, rbx
0x00007661      76ed           jbe 0x7650
0x00007663      498907         mov qword [r15], rax
0x00007666      48c1e305       shl rbx, 5
0x0000766a      488d0419       lea rax, [rcx + rbx]
0x0000766e      8b10           mov edx, dword [rax]
0x00007670      85d2           test edx, edx
0x00007672      0f85d3040000   jne 0x7b4b
0x00007678      c70005000000   mov dword [rax], 5
0x0000767e      0fb65d00       movzx ebx, byte [rbp]
0x00007682      488d5501       lea rdx, [rbp + 1]
0x00007686      80fb2e         cmp bl, 0x2e
0x00007689      0f852ffdffff   jne 0x73be
0x0000768f      807d012a       cmp byte [rbp + 1], 0x2a
0x00007693      49896c2430     mov qword [r12 + 0x30], rbp
0x00007698      0f8580010000   jne 0x781e
0x0000769e      488b742418     mov rsi, qword [rsp + 0x18]
0x000076a3      4c8d5d02       lea r11, [rbp + 2]
0x000076a7      b802000000     mov eax, 2
0x000076ac      4d895c2438     mov qword [r12 + 0x38], r11
0x000076b1      4883fe02       cmp rsi, 2
0x000076b5      480f43c6       cmovae rax, rsi
0x000076b9      4889442418     mov qword [rsp + 0x18], rax
0x000076be      0fbe4502       movsx eax, byte [rbp + 2]
0x000076c2      8d50d0         lea edx, [rax - 0x30]
0x000076c5      80fa09         cmp dl, 9
0x000076c8      0f868e060000   jbe 0x7d5c
0x000076ce      498b5c2440     mov rbx, qword [r12 + 0x40]
0x000076d3      4883fbff       cmp rbx, 0xffffffffffffffff
0x000076d7      0f8458060000   je 0x7d35
0x000076dd      4939d9         cmp r9, rbx
0x000076e0      498b4f08       mov rcx, qword [r15 + 8]
0x000076e4      0f8665050000   jbe 0x7c4f
0x000076ea      498b07         mov rax, qword [r15]
0x000076ed      4889c2         mov rdx, rax
0x000076f0      48c1e205       shl rdx, 5
0x000076f4      4801ca         add rdx, rcx
0x000076f7      4839d8         cmp rax, rbx
0x000076fa      771a           ja 0x7716
0x000076fc      0f1f4000       nop dword [rax]
0x00007700      4883c001       add rax, 1
0x00007704      c70200000000   mov dword [rdx], 0
0x0000770a      4883c220       add rdx, 0x20                           ; "@"
0x0000770e      4839d8         cmp rax, rbx
0x00007711      76ed           jbe 0x7700
0x00007713      498907         mov qword [r15], rax
0x00007716      48c1e305       shl rbx, 5
0x0000771a      488d0419       lea rax, [rcx + rbx]
0x0000771e      8b10           mov edx, dword [rax]
0x00007720      85d2           test edx, edx
0x00007722      0f8512050000   jne 0x7c3a
0x00007728      c70005000000   mov dword [rax], 5
0x0000772e      4c89dd         mov rbp, r11
0x00007731      410fb61b       movzx ebx, byte [r11]
0x00007735      e984fcffff     jmp 0x73be
0x0000773a      4889e8         mov rax, rbp
0x0000773d      0f1f00         nop dword [rax]
0x00007740      4883c001       add rax, 1
0x00007744      0fb610         movzx edx, byte [rax]
0x00007747      8d4ad0         lea ecx, [rdx - 0x30]
0x0000774a      80f909         cmp cl, 9
0x0000774d      76f1           jbe 0x7740
0x0000774f      80fa24         cmp dl, 0x24
0x00007752      4d89c5         mov r13, r8
0x00007755      0f85e3fbffff   jne 0x733e
0x0000775b      31d2           xor edx, edx
0x0000775d      0fbec3         movsx eax, bl
0x00007760      48bf99999999.  movabs rdi, 0x1999999999999999
0x0000776a      4c89c6         mov rsi, r8
0x0000776d      83e830         sub eax, 0x30
0x00007770      4839fa         cmp rdx, rdi
0x00007773      4898           cdqe
0x00007775      7707           ja 0x777e
0x00007777      488d3492       lea rsi, [rdx + rdx*4]
0x0000777b      4801f6         add rsi, rsi
0x0000777e      4889e9         mov rcx, rbp
0x00007781      4801f0         add rax, rsi
0x00007784      0fb65d01       movzx ebx, byte [rbp + 1]
0x00007788      400f92c6       setb sil
0x0000778c      4883c501       add rbp, 1
0x00007790      4889c2         mov rdx, rax
0x00007793      400fb6f6       movzx esi, sil
0x00007797      4885f6         test rsi, rsi
0x0000779a      8d7bd0         lea edi, [rbx - 0x30]
0x0000779d      0f858b030000   jne 0x7b2e
0x000077a3      4080ff09       cmp dil, 9
0x000077a7      76b4           jbe 0x775d
0x000077a9      4989c5         mov r13, rax
0x000077ac      4983ed01       sub r13, 1
0x000077b0      4983fdfd       cmp r13, 0xfffffffffffffffd
0x000077b4      0f8781020000   ja 0x7a3b
0x000077ba      488d6902       lea rbp, [rcx + 2]
0x000077be      0fb65902       movzx ebx, byte [rcx + 2]
0x000077c2      e977fbffff     jmp 0x733e
0x000077c7      49896c2418     mov qword [r12 + 0x18], rbp
0x000077cc      0fb67d00       movzx edi, byte [rbp]
0x000077d0      4889ee         mov rsi, rbp
0x000077d3      8d4fd0         lea ecx, [rdi - 0x30]
0x000077d6      80f909         cmp cl, 9
0x000077d9      760c           jbe 0x77e7
0x000077db      eb33           jmp 0x7810
0x000077dd      0f1f00         nop dword [rax]
0x000077e0      4889c5         mov rbp, rax
0x000077e3      4883c001       add rax, 1
0x000077e7      0fb638         movzx edi, byte [rax]
0x000077ea      8d57d0         lea edx, [rdi - 0x30]
0x000077ed      80fa09         cmp dl, 9
0x000077f0      76ee           jbe 0x77e0
0x000077f2      4889c1         mov rcx, rax
0x000077f5      488d5502       lea rdx, [rbp + 2]
0x000077f9      4889c5         mov rbp, rax
0x000077fc      4829f1         sub rcx, rsi
0x000077ff      488b742410     mov rsi, qword [rsp + 0x10]
0x00007804      4839ce         cmp rsi, rcx
0x00007807      480f43ce       cmovae rcx, rsi
0x0000780b      48894c2410     mov qword [rsp + 0x10], rcx
0x00007810      49896c2420     mov qword [r12 + 0x20], rbp
0x00007815      0fb65d00       movzx ebx, byte [rbp]
0x00007819      e997fbffff     jmp 0x73b5
0x0000781e      0fb64501       movzx eax, byte [rbp + 1]
0x00007822      83e830         sub eax, 0x30
0x00007825      3c09           cmp al, 9
0x00007827      7715           ja 0x783e
0x00007829      0f1f80000000.  nop dword [rax]
0x00007830      4883c201       add rdx, 1
0x00007834      0fb602         movzx eax, byte [rdx]
0x00007837      83e830         sub eax, 0x30
0x0000783a      3c09           cmp al, 9
0x0000783c      76f2           jbe 0x7830
0x0000783e      488b742418     mov rsi, qword [rsp + 0x18]
0x00007843      4889d0         mov rax, rdx
0x00007846      4989542438     mov qword [r12 + 0x38], rdx
0x0000784b      4829e8         sub rax, rbp
0x0000784e      0fb61a         movzx ebx, byte [rdx]
0x00007851      4889d5         mov rbp, rdx
0x00007854      4839c6         cmp rsi, rax
0x00007857      480f43c6       cmovae rax, rsi
0x0000785b      4889442418     mov qword [rsp + 0x18], rax
0x00007860      e959fbffff     jmp 0x73be
0x00007865      4889c6         mov rsi, rax
0x00007868      4883c601       add rsi, 1
0x0000786c      0fb63e         movzx edi, byte [rsi]
0x0000786f      448d5fd0       lea r11d, [rdi - 0x30]
0x00007873      4180fb09       cmp r11b, 9
0x00007877      76ef           jbe 0x7868
0x00007879      4080ff24       cmp dil, 0x24
0x0000787d      0f8507fdffff   jne 0x758a
0x00007883      31f6           xor esi, esi
0x00007885      0fbec1         movsx eax, cl
0x00007888      48bf99999999.  movabs rdi, 0x1999999999999999
0x00007892      4c89c1         mov rcx, r8
0x00007895      83e830         sub eax, 0x30
0x00007898      4839fe         cmp rsi, rdi
0x0000789b      4898           cdqe
0x0000789d      7707           ja 0x78a6
0x0000789f      488d0cb6       lea rcx, [rsi + rsi*4]
0x000078a3      4801c9         add rcx, rcx
0x000078a6      4889d5         mov rbp, rdx
0x000078a9      4531db         xor r11d, r11d
0x000078ac      4801c8         add rax, rcx
0x000078af      0fb64a01       movzx ecx, byte [rdx + 1]
0x000078b3      410f92c3       setb r11b
0x000078b7      4883c201       add rdx, 1
0x000078bb      4889c6         mov rsi, rax
0x000078be      4d85db         test r11, r11
0x000078c1      8d79d0         lea edi, [rcx - 0x30]
0x000078c4      0f8504050000   jne 0x7dce
0x000078ca      4080ff09       cmp dil, 9
0x000078ce      76b5           jbe 0x7885
0x000078d0      488d58ff       lea rbx, [rax - 1]
0x000078d4      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x000078d8      0f875d010000   ja 0x7a3b
0x000078de      49895c2428     mov qword [r12 + 0x28], rbx
0x000078e3      4883c502       add rbp, 2
0x000078e7      e9c3fcffff     jmp 0x75af
0x000078ec      83f80f         cmp eax, 0xf
0x000078ef      41bb16000000   mov r11d, 0x16
0x000078f5      0f8f4dfbffff   jg 0x7448
0x000078fb      a804           test al, 4
0x000078fd      0f8545fbffff   jne 0x7448
0x00007903      83f807         cmp eax, 7
0x00007906      41bb15000000   mov r11d, 0x15
0x0000790c      0f8f36fbffff   jg 0x7448
0x00007912      a802           test al, 2
0x00007914      41bb12000000   mov r11d, 0x12
0x0000791a      0f8528fbffff   jne 0x7448
0x00007920      4531db         xor r11d, r11d
0x00007923      a801           test al, 1
0x00007925      410f94c3       sete r11b
0x00007929      4183c313       add r11d, 0x13
0x0000792d      e916fbffff     jmp 0x7448
0x00007932      660f1f440000   nop word [rax + rax]
0x00007938      4531db         xor r11d, r11d
0x0000793b      83f807         cmp eax, 7
0x0000793e      410f9fc3       setg r11b
0x00007942      4183c30d       add r11d, 0xd
0x00007946      e9fdfaffff     jmp 0x7448
0x0000794b      83f80f         cmp eax, 0xf
0x0000794e      41bb09000000   mov r11d, 9
0x00007954      0f8feefaffff   jg 0x7448
0x0000795a      a804           test al, 4
0x0000795c      0f85e6faffff   jne 0x7448
0x00007962      83f807         cmp eax, 7
0x00007965      41bb07000000   mov r11d, 7
0x0000796b      0f8fd7faffff   jg 0x7448
0x00007971      a802           test al, 2
0x00007973      41bb01000000   mov r11d, 1
0x00007979      0f85c9faffff   jne 0x7448
0x0000797f      83e001         and eax, 1
0x00007982      83f801         cmp eax, 1
0x00007985      4519db         sbb r11d, r11d
0x00007988      4183e302       and r11d, 2
0x0000798c      4183c303       add r11d, 3
0x00007990      e9b3faffff     jmp 0x7448
0x00007995      0f1f00         nop dword [rax]
0x00007998      4531db         xor r11d, r11d
0x0000799b      83f807         cmp eax, 7
0x0000799e      410f9fc3       setg r11b
0x000079a2      4183c30f       add r11d, 0xf
0x000079a6      e99dfaffff     jmp 0x7448
0x000079ab      83f80f         cmp eax, 0xf
0x000079ae      41bb0c000000   mov r11d, 0xc
0x000079b4      0f8f8efaffff   jg 0x7448
0x000079ba      4531db         xor r11d, r11d
0x000079bd      a804           test al, 4
0x000079bf      410f95c3       setne r11b
0x000079c3      4183c30b       add r11d, 0xb
0x000079c7      e97cfaffff     jmp 0x7448
0x000079cc      41bb0e000000   mov r11d, 0xe
0x000079d2      bb63000000     mov ebx, 0x63                           ; 'c'
0x000079d7      e96cfaffff     jmp 0x7448
0x000079dc      83f80f         cmp eax, 0xf
0x000079df      41bb0a000000   mov r11d, 0xa
0x000079e5      0f8f5dfaffff   jg 0x7448
0x000079eb      a804           test al, 4
0x000079ed      0f8555faffff   jne 0x7448
0x000079f3      83f807         cmp eax, 7
0x000079f6      41bb08000000   mov r11d, 8
0x000079fc      0f8f46faffff   jg 0x7448
0x00007a02      a802           test al, 2
0x00007a04      41bb02000000   mov r11d, 2
0x00007a0a      0f8538faffff   jne 0x7448
0x00007a10      83e001         and eax, 1
0x00007a13      83f801         cmp eax, 1
0x00007a16      4519db         sbb r11d, r11d
0x00007a19      4183e302       and r11d, 2
0x00007a1d      4183c304       add r11d, 4
0x00007a21      e922faffff     jmp 0x7448
0x00007a26      662e0f1f8400.  nop word cs:[rax + rax]
0x00007a30      41bb11000000   mov r11d, 0x11
0x00007a36      e90dfaffff     jmp 0x7448
0x00007a3b      498b4f08       mov rcx, qword [r15 + 8]
0x00007a3f      48394c2408     cmp qword [rsp + 8], rcx
0x00007a44      7408           je 0x7a4e
0x00007a46      4889cf         mov rdi, rcx
0x00007a49      e8429bffff     call sym.imp.free
0x00007a4e      498b7e08       mov rdi, qword [r14 + 8]
0x00007a52      48397c2428     cmp qword [rsp + 0x28], rdi
0x00007a57      7405           je 0x7a5e
0x00007a59      e8329bffff     call sym.imp.free
0x00007a5e      e84d9bffff     call sym.imp.__errno_location
0x00007a63      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x25400000
0x00007a69      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00007a6e      e91ff8ffff     jmp 0x7292
0x00007a73      4439da         cmp edx, r11d
0x00007a76      0f842ffaffff   je 0x74ab
0x00007a7c      ebc1           jmp 0x7a3f
0x00007a7e      6690           nop
0x00007a80      4d01c9         add r9, r9
0x00007a83      498d4501       lea rax, [r13 + 1]
0x00007a87      4d39e9         cmp r9, r13
0x00007a8a      4c0f46c8       cmovbe r9, rax
0x00007a8e      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x00007a98      4939c1         cmp r9, rax
0x00007a9b      0f87da030000   ja 0x7e7b
0x00007aa1      4c89ce         mov rsi, r9
0x00007aa4      4c894c2448     mov qword [rsp + 0x48], r9
0x00007aa9      4c89542440     mov qword [rsp + 0x40], r10
0x00007aae      48c1e605       shl rsi, 5
0x00007ab2      48394c2408     cmp qword [rsp + 8], rcx
0x00007ab7      4c89442438     mov qword [rsp + 0x38], r8
0x00007abc      44895c2430     mov dword [rsp + 0x30], r11d
0x00007ac1      0f849a000000   je 0x7b61
0x00007ac7      4889cf         mov rdi, rcx
0x00007aca      e8119dffff     call sym.imp.realloc
0x00007acf      4885c0         test rax, rax
0x00007ad2      4889c1         mov rcx, rax
0x00007ad5      448b5c2430     mov r11d, dword [rsp + 0x30]
0x00007ada      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007adf      4c8b542440     mov r10, qword [rsp + 0x40]
0x00007ae4      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007ae9      0f8488030000   je 0x7e77
0x00007aef      488b442408     mov rax, qword [rsp + 8]
0x00007af4      493b4708       cmp rax, qword [r15 + 8]
0x00007af8      0f848b000000   je 0x7b89
0x00007afe      49894f08       mov qword [r15 + 8], rcx
0x00007b02      e95df9ffff     jmp 0x7464
0x00007b07      488b742420     mov rsi, qword [rsp + 0x20]
0x00007b0c      4883feff       cmp rsi, 0xffffffffffffffff
0x00007b10      488d4601       lea rax, [rsi + 1]
0x00007b14      4989742450     mov qword [r12 + 0x50], rsi
0x00007b19      0f841cffffff   je 0x7a3b
0x00007b1f      4c8b6c2420     mov r13, qword [rsp + 0x20]
0x00007b24      4889442420     mov qword [rsp + 0x20], rax
0x00007b29      e929f9ffff     jmp 0x7457
0x00007b2e      4080ff09       cmp dil, 9
0x00007b32      0f8703ffffff   ja 0x7a3b
0x00007b38      0fbec3         movsx eax, bl
0x00007b3b      4c89c6         mov rsi, r8
0x00007b3e      4889e9         mov rcx, rbp
0x00007b41      83e830         sub eax, 0x30
0x00007b44      4898           cdqe
0x00007b46      e936fcffff     jmp 0x7781
0x00007b4b      83fa05         cmp edx, 5
0x00007b4e      0f85ebfeffff   jne 0x7a3f
0x00007b54      0fb65d00       movzx ebx, byte [rbp]
0x00007b58      488d5501       lea rdx, [rbp + 1]
0x00007b5c      e954f8ffff     jmp 0x73b5
0x00007b61      4889f7         mov rdi, rsi
0x00007b64      e8279cffff     call sym.imp.malloc
0x00007b69      4885c0         test rax, rax
0x00007b6c      4889c1         mov rcx, rax
0x00007b6f      448b5c2430     mov r11d, dword [rsp + 0x30]
0x00007b74      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007b79      4c8b542440     mov r10, qword [rsp + 0x40]
0x00007b7e      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007b83      0f8463010000   je 0x7cec
0x00007b89      498b17         mov rdx, qword [r15]
0x00007b8c      488b742408     mov rsi, qword [rsp + 8]
0x00007b91      4889cf         mov rdi, rcx
0x00007b94      4c894c2448     mov qword [rsp + 0x48], r9
0x00007b99      4c89542440     mov qword [rsp + 0x40], r10
0x00007b9e      4c89442438     mov qword [rsp + 0x38], r8
0x00007ba3      44895c2430     mov dword [rsp + 0x30], r11d
0x00007ba8      48c1e205       shl rdx, 5
0x00007bac      e8af9bffff     call sym.imp.memcpy
0x00007bb1      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007bb6      4c8b542440     mov r10, qword [rsp + 0x40]
0x00007bbb      4889c1         mov rcx, rax
0x00007bbe      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007bc3      448b5c2430     mov r11d, dword [rsp + 0x30]
0x00007bc8      e931ffffff     jmp 0x7afe
0x00007bcd      4889f7         mov rdi, rsi
0x00007bd0      e8bb9bffff     call sym.imp.malloc
0x00007bd5      4885c0         test rax, rax
0x00007bd8      4889c1         mov rcx, rax
0x00007bdb      4c8b442430     mov r8, qword [rsp + 0x30]
0x00007be0      4c8b542438     mov r10, qword [rsp + 0x38]
0x00007be5      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00007bea      0f84e9000000   je 0x7cd9
0x00007bf0      488d049b       lea rax, [rbx + rbx*4]
0x00007bf4      488b742428     mov rsi, qword [rsp + 0x28]
0x00007bf9      4889cf         mov rdi, rcx
0x00007bfc      4c894c2440     mov qword [rsp + 0x40], r9
0x00007c01      4c89542438     mov qword [rsp + 0x38], r10
0x00007c06      488d1443       lea rdx, [rbx + rax*2]
0x00007c0a      4c89442430     mov qword [rsp + 0x30], r8
0x00007c0f      48c1e203       shl rdx, 3
0x00007c13      e8489bffff     call sym.imp.memcpy
0x00007c18      498b1e         mov rbx, qword [r14]
0x00007c1b      4889c1         mov rcx, rax
0x00007c1e      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00007c23      4c8b542438     mov r10, qword [rsp + 0x38]
0x00007c28      4c8b442430     mov r8, qword [rsp + 0x30]
0x00007c2d      e915f9ffff     jmp 0x7547
0x00007c32      498b07         mov rax, qword [r15]
0x00007c35      e9fdf9ffff     jmp 0x7637
0x00007c3a      83fa05         cmp edx, 5
0x00007c3d      0f85fcfdffff   jne 0x7a3f
0x00007c43      410fb61b       movzx ebx, byte [r11]
0x00007c47      4c89dd         mov rbp, r11
0x00007c4a      e96ff7ffff     jmp 0x73be
0x00007c4f      4d01c9         add r9, r9
0x00007c52      488d4301       lea rax, [rbx + 1]
0x00007c56      4939d9         cmp r9, rbx
0x00007c59      4c0f46c8       cmovbe r9, rax
0x00007c5d      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x00007c67      4939c1         cmp r9, rax
0x00007c6a      0f870b020000   ja 0x7e7b
0x00007c70      4c89ce         mov rsi, r9
0x00007c73      4c894c2448     mov qword [rsp + 0x48], r9
0x00007c78      4c89542440     mov qword [rsp + 0x40], r10
0x00007c7d      48c1e605       shl rsi, 5
0x00007c81      48394c2408     cmp qword [rsp + 8], rcx
0x00007c86      4c89442438     mov qword [rsp + 0x38], r8
0x00007c8b      4c895c2430     mov qword [rsp + 0x30], r11
0x00007c90      0f84b8010000   je 0x7e4e
0x00007c96      4889cf         mov rdi, rcx
0x00007c99      e8429bffff     call sym.imp.realloc
0x00007c9e      498b5708       mov rdx, qword [r15 + 8]
0x00007ca2      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00007ca7      4889c1         mov rcx, rax
0x00007caa      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007caf      4c8b542440     mov r10, qword [rsp + 0x40]
0x00007cb4      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007cb9      4885c9         test rcx, rcx
0x00007cbc      0f8415020000   je 0x7ed7
0x00007cc2      4839542408     cmp qword [rsp + 8], rdx
0x00007cc7      498b07         mov rax, qword [r15]
0x00007cca      0f84c0010000   je 0x7e90
0x00007cd0      49894f08       mov qword [r15 + 8], rcx
0x00007cd4      e914faffff     jmp 0x76ed
0x00007cd9      498b4f08       mov rcx, qword [r15 + 8]
0x00007cdd      48394c2408     cmp qword [rsp + 8], rcx
0x00007ce2      7418           je 0x7cfc
0x00007ce4      4889cf         mov rdi, rcx
0x00007ce7      e8a498ffff     call sym.imp.free
0x00007cec      498b7e08       mov rdi, qword [r14 + 8]
0x00007cf0      48397c2428     cmp qword [rsp + 0x28], rdi
0x00007cf5      7405           je 0x7cfc
0x00007cf7      e89498ffff     call sym.imp.free
0x00007cfc      e8af98ffff     call sym.imp.__errno_location
0x00007d01      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00007d07      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00007d0c      e981f5ffff     jmp 0x7292
0x00007d11      4889f7         mov rdi, rsi
0x00007d14      e8779affff     call sym.imp.malloc
0x00007d19      488b542408     mov rdx, qword [rsp + 8]
0x00007d1e      4889c1         mov rcx, rax
0x00007d21      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00007d26      4c8b542438     mov r10, qword [rsp + 0x38]
0x00007d2b      4c8b442430     mov r8, qword [rsp + 0x30]
0x00007d30      e9e7f8ffff     jmp 0x761c
0x00007d35      488b742420     mov rsi, qword [rsp + 0x20]
0x00007d3a      4883feff       cmp rsi, 0xffffffffffffffff
0x00007d3e      488d4601       lea rax, [rsi + 1]
0x00007d42      4989742440     mov qword [r12 + 0x40], rsi
0x00007d47      0f84eefcffff   je 0x7a3b
0x00007d4d      488b5c2420     mov rbx, qword [rsp + 0x20]
0x00007d52      4889442420     mov qword [rsp + 0x20], rax
0x00007d57      e981f9ffff     jmp 0x76dd
0x00007d5c      4c89da         mov rdx, r11
0x00007d5f      4883c201       add rdx, 1
0x00007d63      0fb60a         movzx ecx, byte [rdx]
0x00007d66      8d71d0         lea esi, [rcx - 0x30]
0x00007d69      4080fe09       cmp sil, 9
0x00007d6d      76f0           jbe 0x7d5f
0x00007d6f      80f924         cmp cl, 0x24
0x00007d72      0f8556f9ffff   jne 0x76ce
0x00007d78      31c9           xor ecx, ecx
0x00007d7a      48be99999999.  movabs rsi, 0x1999999999999999
0x00007d84      83e830         sub eax, 0x30
0x00007d87      4c89c2         mov rdx, r8
0x00007d8a      4839f1         cmp rcx, rsi
0x00007d8d      4898           cdqe
0x00007d8f      7707           ja 0x7d98
0x00007d91      488d1489       lea rdx, [rcx + rcx*4]
0x00007d95      4801d2         add rdx, rdx
0x00007d98      4c89de         mov rsi, r11
0x00007d9b      31db           xor ebx, ebx
0x00007d9d      4801c2         add rdx, rax
0x00007da0      410fbe4301     movsx eax, byte [r11 + 1]
0x00007da5      0f92c3         setb bl
0x00007da8      4983c301       add r11, 1
0x00007dac      4889d1         mov rcx, rdx
0x00007daf      4885db         test rbx, rbx
0x00007db2      8d78d0         lea edi, [rax - 0x30]
0x00007db5      7471           je 0x7e28
0x00007db7      4080ff09       cmp dil, 9
0x00007dbb      0f877afcffff   ja 0x7a3b
0x00007dc1      83e830         sub eax, 0x30
0x00007dc4      4c89c2         mov rdx, r8
0x00007dc7      4c89de         mov rsi, r11
0x00007dca      4898           cdqe
0x00007dcc      ebcd           jmp 0x7d9b
0x00007dce      4080ff09       cmp dil, 9
0x00007dd2      0f8763fcffff   ja 0x7a3b
0x00007dd8      0fbec1         movsx eax, cl
0x00007ddb      4889d5         mov rbp, rdx
0x00007dde      4c89c1         mov rcx, r8
0x00007de1      83e830         sub eax, 0x30
0x00007de4      4898           cdqe
0x00007de6      e9befaffff     jmp 0x78a9
0x00007deb      488b742408     mov rsi, qword [rsp + 8]
0x00007df0      48c1e005       shl rax, 5
0x00007df4      4889cf         mov rdi, rcx
0x00007df7      4889c2         mov rdx, rax
0x00007dfa      4c894c2440     mov qword [rsp + 0x40], r9
0x00007dff      4c89542438     mov qword [rsp + 0x38], r10
0x00007e04      4c89442430     mov qword [rsp + 0x30], r8
0x00007e09      e85299ffff     call sym.imp.memcpy
0x00007e0e      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00007e13      4889c1         mov rcx, rax
0x00007e16      4c8b542438     mov r10, qword [rsp + 0x38]
0x00007e1b      498b07         mov rax, qword [r15]
0x00007e1e      4c8b442430     mov r8, qword [rsp + 0x30]
0x00007e23      e90bf8ffff     jmp 0x7633
0x00007e28      4080ff09       cmp dil, 9
0x00007e2c      0f8648ffffff   jbe 0x7d7a
0x00007e32      488d5aff       lea rbx, [rdx - 1]
0x00007e36      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x00007e3a      0f87fbfbffff   ja 0x7a3b
0x00007e40      49895c2440     mov qword [r12 + 0x40], rbx
0x00007e45      4c8d5e02       lea r11, [rsi + 2]
0x00007e49      e98ff8ffff     jmp 0x76dd
0x00007e4e      4889f7         mov rdi, rsi
0x00007e51      e83a99ffff     call sym.imp.malloc
0x00007e56      488b542408     mov rdx, qword [rsp + 8]
0x00007e5b      4889c1         mov rcx, rax
0x00007e5e      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007e63      4c8b542440     mov r10, qword [rsp + 0x40]
0x00007e68      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007e6d      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00007e72      e942feffff     jmp 0x7cb9
0x00007e77      498b4f08       mov rcx, qword [r15 + 8]
0x00007e7b      48394c2408     cmp qword [rsp + 8], rcx
0x00007e80      0f855efeffff   jne 0x7ce4
0x00007e86      e961feffff     jmp 0x7cec
0x00007e8b      0f1f440000     nop dword [rax + rax]
0x00007e90      488b742408     mov rsi, qword [rsp + 8]
0x00007e95      48c1e005       shl rax, 5
0x00007e99      4889cf         mov rdi, rcx
0x00007e9c      4889c2         mov rdx, rax
0x00007e9f      4c894c2448     mov qword [rsp + 0x48], r9
0x00007ea4      4c89542440     mov qword [rsp + 0x40], r10
0x00007ea9      4c89442438     mov qword [rsp + 0x38], r8
0x00007eae      4c895c2430     mov qword [rsp + 0x30], r11
0x00007eb3      e8a898ffff     call sym.imp.memcpy
0x00007eb8      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007ebd      4889c1         mov rcx, rax
0x00007ec0      4c8b542440     mov r10, qword [rsp + 0x40]
0x00007ec5      498b07         mov rax, qword [r15]
0x00007ec8      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007ecd      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00007ed2      e9f9fdffff     jmp 0x7cd0
0x00007ed7      4889d1         mov rcx, rdx
0x00007eda      eb9f           jmp 0x7e7b
0x00007edc      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00007ee0      4157           push r15
0x00007ee2      4156           push r14
0x00007ee4      4989d7         mov r15, rdx
0x00007ee7      4155           push r13
0x00007ee9      4154           push r12
0x00007eeb      4c8d25fe2b20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20aaf0 ; "@&"
0x00007ef2      55             push rbp
0x00007ef3      488d2dfe2b20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20aaf8
0x00007efa      53             push rbx
0x00007efb      4189fd         mov r13d, edi
0x00007efe      4989f6         mov r14, rsi
0x00007f01      4c29e5         sub rbp, r12
0x00007f04      4883ec08       sub rsp, 8
0x00007f08      48c1fd03       sar rbp, 3
0x00007f0c      e83f96ffff     call sym._init
0x00007f11      4885ed         test rbp, rbp
0x00007f14      7420           je 0x7f36
0x00007f16      31db           xor ebx, ebx
0x00007f18      0f1f84000000.  nop dword [rax + rax]
0x00007f20      4c89fa         mov rdx, r15
0x00007f23      4c89f6         mov rsi, r14
0x00007f26      4489ef         mov edi, r13d
0x00007f29      41ff14dc       call qword [r12 + rbx*8]
0x00007f2d      4883c301       add rbx, 1
0x00007f31      4839dd         cmp rbp, rbx
0x00007f34      75ea           jne 0x7f20
0x00007f36      4883c408       add rsp, 8
0x00007f3a      5b             pop rbx
0x00007f3b      5d             pop rbp
0x00007f3c      415c           pop r12
0x00007f3e      415d           pop r13
0x00007f40      415e           pop r14
0x00007f42      415f           pop r15
0x00007f44      c3             ret
0x00007f45      90             nop
0x00007f46      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00007f50      f3c3           ret
0x00007f52      662e0f1f8400.  nop word cs:[rax + rax]
0x00007f5c      0f1f4000       nop dword [rax]
;-- atexit:
0x00007f60      488b15a13020.  mov rdx, qword [obj.__dso_handle]       ; [0x20b008:8]=0x20b008 obj.__dso_handle
0x00007f67      31f6           xor esi, esi
0x00007f69      e9f298ffff     jmp sym.imp.__cxa_atexit
0x00007f6e      0000           add byte [rax], al
