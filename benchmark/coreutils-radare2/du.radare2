;-- section..plt:
;-- .plt:
0x000023b0      ff35da582200   push qword [0x00227c90]                 ; [12] -r-x section size 1632 named .plt
0x000023b6      ff25dc582200   jmp qword [0x00227c98]                  ; [0x227c98:8]=0
0x000023bc      0f1f4000       nop dword [rax]
;-- imp.__ctype_toupper_loc:
0x000023c0      ff25da582200   jmp qword [reloc.__ctype_toupper_loc]   ; [0x227ca0:8]=0x23c6
0x000023c6      6800000000     push 0
0x000023cb      e9e0ffffff     jmp sym..plt
;-- imp.__uflow:
0x000023d0      ff25d2582200   jmp qword [reloc.__uflow]               ; [0x227ca8:8]=0x23d6
0x000023d6      6801000000     push 1                                  ; "ELF\x02\x01\x01"
0x000023db      e9d0ffffff     jmp sym..plt
;-- imp.getenv:
0x000023e0      ff25ca582200   jmp qword [reloc.getenv]                ; [0x227cb0:8]=0x23e6
0x000023e6      6802000000     push 2                                  ; "LF\x02\x01\x01"
0x000023eb      e9c0ffffff     jmp sym..plt
;-- imp.endmntent:
0x000023f0      ff25c2582200   jmp qword [reloc.endmntent]             ; [0x227cb8:8]=0x23f6
0x000023f6      6803000000     push 3                                  ; "F\x02\x01\x01"
0x000023fb      e9b0ffffff     jmp sym..plt
;-- imp.abort:
0x00002400      ff25ba582200   jmp qword [reloc.abort]                 ; [0x227cc0:8]=0x2406
0x00002406      6804000000     push 4
0x0000240b      e9a0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00002410      ff25b2582200   jmp qword [reloc.__errno_location]      ; [0x227cc8:8]=0x2416
0x00002416      6805000000     push 5
0x0000241b      e990ffffff     jmp sym..plt
;-- imp.strncmp:
0x00002420      ff25aa582200   jmp qword [reloc.strncmp]               ; [0x227cd0:8]=0x2426 ; "&$"
0x00002426      6806000000     push 6
0x0000242b      e980ffffff     jmp sym..plt
;-- imp.localtime_r:
0x00002430      ff25a2582200   jmp qword [reloc.localtime_r]           ; [0x227cd8:8]=0x2436 ; "6$"
0x00002436      6807000000     push 7
0x0000243b      e970ffffff     jmp sym..plt
;-- imp._exit:
0x00002440      ff259a582200   jmp qword [reloc._exit]                 ; [0x227ce0:8]=0x2446 ; "F$"
0x00002446      6808000000     push 8
0x0000244b      e960ffffff     jmp sym..plt
;-- imp.strcpy:
0x00002450      ff2592582200   jmp qword [reloc.strcpy]                ; [0x227ce8:8]=0x2456 ; "V$"
0x00002456      6809000000     push 9
0x0000245b      e950ffffff     jmp sym..plt
;-- imp.__fpending:
0x00002460      ff258a582200   jmp qword [reloc.__fpending]            ; [0x227cf0:8]=0x2466 ; "f$"
0x00002466      680a000000     push 0xa
0x0000246b      e940ffffff     jmp sym..plt
;-- imp.qsort:
0x00002470      ff2582582200   jmp qword [reloc.qsort]                 ; [0x227cf8:8]=0x2476 ; "v$"
0x00002476      680b000000     push 0xb
0x0000247b      e930ffffff     jmp sym..plt
;-- imp.iswcntrl:
0x00002480      ff257a582200   jmp qword [reloc.iswcntrl]              ; [0x227d00:8]=0x2486
0x00002486      680c000000     push 0xc
0x0000248b      e920ffffff     jmp sym..plt
;-- imp.localeconv:
0x00002490      ff2572582200   jmp qword [reloc.localeconv]            ; [0x227d08:8]=0x2496
0x00002496      680d000000     push 0xd
0x0000249b      e910ffffff     jmp sym..plt
;-- imp.fcntl:
0x000024a0      ff256a582200   jmp qword [reloc.fcntl]                 ; [0x227d10:8]=0x24a6
0x000024a6      680e000000     push 0xe
0x000024ab      e900ffffff     jmp sym..plt
;-- imp.setenv:
0x000024b0      ff2562582200   jmp qword [reloc.setenv]                ; [0x227d18:8]=0x24b6
0x000024b6      680f000000     push 0xf
0x000024bb      e9f0feffff     jmp sym..plt
;-- imp.textdomain:
0x000024c0      ff255a582200   jmp qword [reloc.textdomain]            ; [0x227d20:8]=0x24c6
0x000024c6      6810000000     push 0x10
0x000024cb      e9e0feffff     jmp sym..plt
;-- imp.__strtol_internal:
0x000024d0      ff2552582200   jmp qword [reloc.__strtol_internal]     ; [0x227d28:8]=0x24d6
0x000024d6      6811000000     push 0x11
0x000024db      e9d0feffff     jmp sym..plt
;-- imp.iswctype:
0x000024e0      ff254a582200   jmp qword [reloc.iswctype]              ; [0x227d30:8]=0x24e6
0x000024e6      6812000000     push 0x12                               ; u">\x01"
0x000024eb      e9c0feffff     jmp sym..plt
;-- imp.fclose:
0x000024f0      ff2542582200   jmp qword [reloc.fclose]                ; [0x227d38:8]=0x24f6
0x000024f6      6813000000     push 0x13
0x000024fb      e9b0feffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00002500      ff253a582200   jmp qword [reloc.bindtextdomain]        ; [0x227d40:8]=0x2506
0x00002506      6814000000     push 0x14
0x0000250b      e9a0feffff     jmp sym..plt
;-- imp.dcgettext:
0x00002510      ff2532582200   jmp qword [reloc.dcgettext]             ; [0x227d48:8]=0x2516
0x00002516      6815000000     push 0x15
0x0000251b      e990feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00002520      ff252a582200   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x227d50:8]=0x2526 ; "&%"
0x00002526      6816000000     push 0x16
0x0000252b      e980feffff     jmp sym..plt
;-- imp.strlen:
0x00002530      ff2522582200   jmp qword [reloc.strlen]                ; [0x227d58:8]=0x2536 ; "6%"
0x00002536      6817000000     push 0x17
0x0000253b      e970feffff     jmp sym..plt
;-- imp.__lxstat:
0x00002540      ff251a582200   jmp qword [reloc.__lxstat]              ; [0x227d60:8]=0x2546 ; "F%"
0x00002546      6818000000     push 0x18                               ; "@?"
0x0000254b      e960feffff     jmp sym..plt
;-- imp.openat:
0x00002550      ff2512582200   jmp qword [reloc.openat]                ; [0x227d68:8]=0x2556 ; "V%"
0x00002556      6819000000     push 0x19                               ; "?"
0x0000255b      e950feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00002560      ff250a582200   jmp qword [reloc.__stack_chk_fail]      ; [0x227d70:8]=0x2566 ; "f%"
0x00002566      681a000000     push 0x1a
0x0000256b      e940feffff     jmp sym..plt
;-- imp.getopt_long:
0x00002570      ff2502582200   jmp qword [reloc.getopt_long]           ; [0x227d78:8]=0x2576 ; "v%"
0x00002576      681b000000     push 0x1b
0x0000257b      e930feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00002580      ff25fa572200   jmp qword [reloc.mbrtowc]               ; [0x227d80:8]=0x2586
0x00002586      681c000000     push 0x1c
0x0000258b      e920feffff     jmp sym..plt
;-- imp.dup2:
0x00002590      ff25f2572200   jmp qword [reloc.dup2]                  ; [0x227d88:8]=0x2596
0x00002596      681d000000     push 0x1d
0x0000259b      e910feffff     jmp sym..plt
;-- imp.strchr:
0x000025a0      ff25ea572200   jmp qword [reloc.strchr]                ; [0x227d90:8]=0x25a6
0x000025a6      681e000000     push 0x1e
0x000025ab      e900feffff     jmp sym..plt
;-- imp.__fxstatat:
0x000025b0      ff25e2572200   jmp qword [reloc.__fxstatat]            ; [0x227d98:8]=0x25b6
0x000025b6      681f000000     push 0x1f
0x000025bb      e9f0fdffff     jmp sym..plt
;-- imp.__overflow:
0x000025c0      ff25da572200   jmp qword [reloc.__overflow]            ; [0x227da0:8]=0x25c6
0x000025c6      6820000000     push 0x20                               ; "@"
0x000025cb      e9e0fdffff     jmp sym..plt
;-- imp.strrchr:
0x000025d0      ff25d2572200   jmp qword [reloc.strrchr]               ; [0x227da8:8]=0x25d6
0x000025d6      6821000000     push 0x21                               ; '!'
0x000025db      e9d0fdffff     jmp sym..plt
;-- imp.gmtime_r:
0x000025e0      ff25ca572200   jmp qword [reloc.gmtime_r]              ; [0x227db0:8]=0x25e6
0x000025e6      6822000000     push 0x22                               ; '"'
0x000025eb      e9c0fdffff     jmp sym..plt
;-- imp.lseek:
0x000025f0      ff25c2572200   jmp qword [reloc.lseek]                 ; [0x227db8:8]=0x25f6
0x000025f6      6823000000     push 0x23                               ; '#'
0x000025fb      e9b0fdffff     jmp sym..plt
;-- imp.__assert_fail:
0x00002600      ff25ba572200   jmp qword [reloc.__assert_fail]         ; [0x227dc0:8]=0x2606
0x00002606      6824000000     push 0x24                               ; '$'
0x0000260b      e9a0fdffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00002610      ff25b2572200   jmp qword [reloc.__strtoul_internal]    ; [0x227dc8:8]=0x2616
0x00002616      6825000000     push 0x25                               ; '%'
0x0000261b      e990fdffff     jmp sym..plt
;-- imp.memset:
0x00002620      ff25aa572200   jmp qword [reloc.memset]                ; [0x227dd0:8]=0x2626 ; "&&"
0x00002626      6826000000     push 0x26                               ; '&'
0x0000262b      e980fdffff     jmp sym..plt
;-- imp.freopen:
0x00002630      ff25a2572200   jmp qword [reloc.freopen]               ; [0x227dd8:8]=0x2636 ; "6&"
0x00002636      6827000000     push 0x27                               ; '''
0x0000263b      e970fdffff     jmp sym..plt
;-- imp.close:
0x00002640      ff259a572200   jmp qword [reloc.close]                 ; [0x227de0:8]=0x2646 ; "F&"
0x00002646      6828000000     push 0x28                               ; '('
0x0000264b      e960fdffff     jmp sym..plt
;-- imp.closedir:
0x00002650      ff2592572200   jmp qword [reloc.closedir]              ; [0x227de8:8]=0x2656 ; "V&"
0x00002656      6829000000     push 0x29                               ; ')' ; "c\f"
0x0000265b      e950fdffff     jmp sym..plt
;-- imp.fputc:
0x00002660      ff258a572200   jmp qword [reloc.fputc]                 ; [0x227df0:8]=0x2666 ; "f&"
0x00002666      682a000000     push 0x2a                               ; '*'
0x0000266b      e940fdffff     jmp sym..plt
;-- imp.memchr:
0x00002670      ff2582572200   jmp qword [reloc.memchr]                ; [0x227df8:8]=0x2676 ; "v&"
0x00002676      682b000000     push 0x2b                               ; '+'
0x0000267b      e930fdffff     jmp sym..plt
;-- imp.memcmp:
0x00002680      ff257a572200   jmp qword [reloc.memcmp]                ; [0x227e00:8]=0x2686
0x00002686      682c000000     push 0x2c                               ; ','
0x0000268b      e920fdffff     jmp sym..plt
;-- imp.wctype:
0x00002690      ff2572572200   jmp qword [reloc.wctype]                ; [0x227e08:8]=0x2696
0x00002696      682d000000     push 0x2d                               ; '-'
0x0000269b      e910fdffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x000026a0      ff256a572200   jmp qword [reloc.fputs_unlocked]        ; [0x227e10:8]=0x26a6
0x000026a6      682e000000     push 0x2e                               ; '.'
0x000026ab      e900fdffff     jmp sym..plt
;-- imp.calloc:
0x000026b0      ff2562572200   jmp qword [reloc.calloc]                ; [0x227e18:8]=0x26b6
0x000026b6      682f000000     push 0x2f                               ; '/'
0x000026bb      e9f0fcffff     jmp sym..plt
;-- imp.__getdelim:
0x000026c0      ff255a572200   jmp qword [reloc.__getdelim]            ; [0x227e20:8]=0x26c6
0x000026c6      6830000000     push 0x30                               ; '0'
0x000026cb      e9e0fcffff     jmp sym..plt
;-- imp.strcmp:
0x000026d0      ff2552572200   jmp qword [reloc.strcmp]                ; [0x227e28:8]=0x26d6
0x000026d6      6831000000     push 0x31                               ; '1'
0x000026db      e9d0fcffff     jmp sym..plt
;-- imp.dirfd:
0x000026e0      ff254a572200   jmp qword [reloc.dirfd]                 ; [0x227e30:8]=0x26e6
0x000026e6      6832000000     push 0x32                               ; '2'
0x000026eb      e9c0fcffff     jmp sym..plt
;-- imp.__memcpy_chk:
0x000026f0      ff2542572200   jmp qword [reloc.__memcpy_chk]          ; [0x227e38:8]=0x26f6
0x000026f6      6833000000     push 0x33                               ; '3'
0x000026fb      e9b0fcffff     jmp sym..plt
;-- imp.feof:
0x00002700      ff253a572200   jmp qword [reloc.feof]                  ; [0x227e40:8]=0x2706
0x00002706      6834000000     push 0x34                               ; '4' ; u"@8\t@%$\x06"
0x0000270b      e9a0fcffff     jmp sym..plt
;-- imp.memcpy:
0x00002710      ff2532572200   jmp qword [reloc.memcpy]                ; [0x227e48:8]=0x2716
0x00002716      6835000000     push 0x35                               ; '5'
0x0000271b      e990fcffff     jmp sym..plt
;-- imp.tzset:
0x00002720      ff252a572200   jmp qword [reloc.tzset]                 ; [0x227e50:8]=0x2726 ; "&'"
0x00002726      6836000000     push 0x36                               ; '6' ; u"8\t@%$\x06"
0x0000272b      e980fcffff     jmp sym..plt
;-- imp.fileno:
0x00002730      ff2522572200   jmp qword [reloc.fileno]                ; [0x227e58:8]=0x2736 ; "6'"
0x00002736      6837000000     push 0x37                               ; '7'
0x0000273b      e970fcffff     jmp sym..plt
;-- imp.__xstat:
0x00002740      ff251a572200   jmp qword [reloc.__xstat]               ; [0x227e60:8]=0x2746 ; "F'"
0x00002746      6838000000     push 0x38                               ; '8' ; u"\t@%$\x06"
0x0000274b      e960fcffff     jmp sym..plt
;-- imp.readdir:
0x00002750      ff2512572200   jmp qword [reloc.readdir]               ; [0x227e68:8]=0x2756 ; "V'"
0x00002756      6839000000     push 0x39                               ; '9'
0x0000275b      e950fcffff     jmp sym..plt
;-- imp.wcwidth:
0x00002760      ff250a572200   jmp qword [reloc.wcwidth]               ; [0x227e70:8]=0x2766 ; "f'"
0x00002766      683a000000     push 0x3a                               ; ':' ; u"@%$\x06"
0x0000276b      e940fcffff     jmp sym..plt
;-- imp.iswalnum:
0x00002770      ff2502572200   jmp qword [reloc.iswalnum]              ; [0x227e78:8]=0x2776 ; "v'"
0x00002776      683b000000     push 0x3b                               ; ';'
0x0000277b      e930fcffff     jmp sym..plt
;-- imp.malloc:
0x00002780      ff25fa562200   jmp qword [reloc.malloc]                ; [0x227e80:8]=0x2786
0x00002786      683c000000     push 0x3c                               ; '<' ; u"%$\x06"
0x0000278b      e920fcffff     jmp sym..plt
;-- imp.wcrtomb:
0x00002790      ff25f2562200   jmp qword [reloc.wcrtomb]               ; [0x227e88:8]=0x2796
0x00002796      683d000000     push 0x3d                               ; '='
0x0000279b      e910fcffff     jmp sym..plt
;-- imp.fflush:
0x000027a0      ff25ea562200   jmp qword [reloc.fflush]                ; [0x227e90:8]=0x27a6
0x000027a6      683e000000     push 0x3e                               ; '>' ; u"$\x06"
0x000027ab      e900fcffff     jmp sym..plt
;-- imp.getmntent:
0x000027b0      ff25e2562200   jmp qword [reloc.getmntent]             ; [0x227e98:8]=0x27b6
0x000027b6      683f000000     push 0x3f                               ; '?'
0x000027bb      e9f0fbffff     jmp sym..plt
;-- imp.setmntent:
0x000027c0      ff25da562200   jmp qword [reloc.setmntent]             ; [0x227ea0:8]=0x27c6
0x000027c6      6840000000     push 0x40                               ; segment.PHDR
0x000027cb      e9e0fbffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000027d0      ff25d2562200   jmp qword [reloc.nl_langinfo]           ; [0x227ea8:8]=0x27d6
0x000027d6      6841000000     push 0x41                               ; 'A'
0x000027db      e9d0fbffff     jmp sym..plt
;-- imp.__fxstat:
0x000027e0      ff25ca562200   jmp qword [reloc.__fxstat]              ; [0x227eb0:8]=0x27e6
0x000027e6      6842000000     push 0x42                               ; 'B'
0x000027eb      e9c0fbffff     jmp sym..plt
;-- imp.sscanf:
0x000027f0      ff25c2562200   jmp qword [reloc.sscanf]                ; [0x227eb8:8]=0x27f6
0x000027f6      6843000000     push 0x43                               ; 'C'
0x000027fb      e9b0fbffff     jmp sym..plt
;-- imp.mktime:
0x00002800      ff25ba562200   jmp qword [reloc.mktime]                ; [0x227ec0:8]=0x2806
0x00002806      6844000000     push 0x44                               ; 'D'
0x0000280b      e9a0fbffff     jmp sym..plt
;-- imp.__freading:
0x00002810      ff25b2562200   jmp qword [reloc.__freading]            ; [0x227ec8:8]=0x2816
0x00002816      6845000000     push 0x45                               ; 'E'
0x0000281b      e990fbffff     jmp sym..plt
;-- imp.fchdir:
0x00002820      ff25aa562200   jmp qword [reloc.fchdir]                ; [0x227ed0:8]=0x2826 ; "&("
0x00002826      6846000000     push 0x46                               ; 'F'
0x0000282b      e980fbffff     jmp sym..plt
;-- imp.realloc:
0x00002830      ff25a2562200   jmp qword [reloc.realloc]               ; [0x227ed8:8]=0x2836 ; "6("
0x00002836      6847000000     push 0x47                               ; 'G'
0x0000283b      e970fbffff     jmp sym..plt
;-- imp.setlocale:
0x00002840      ff259a562200   jmp qword [reloc.setlocale]             ; [0x227ee0:8]=0x2846 ; "F("
0x00002846      6848000000     push 0x48                               ; 'H' ; "@"
0x0000284b      e960fbffff     jmp sym..plt
;-- imp.__printf_chk:
0x00002850      ff2592562200   jmp qword [reloc.__printf_chk]          ; [0x227ee8:8]=0x2856 ; "V("
0x00002856      6849000000     push 0x49                               ; 'I'
0x0000285b      e950fbffff     jmp sym..plt
;-- imp.timegm:
0x00002860      ff258a562200   jmp qword [reloc.timegm]                ; [0x227ef0:8]=0x2866 ; "f("
0x00002866      684a000000     push 0x4a                               ; 'J'
0x0000286b      e940fbffff     jmp sym..plt
;-- imp.strftime:
0x00002870      ff2582562200   jmp qword [reloc.strftime]              ; [0x227ef8:8]=0x2876 ; "v("
0x00002876      684b000000     push 0x4b                               ; 'K'
0x0000287b      e930fbffff     jmp sym..plt
;-- imp.btowc:
0x00002880      ff257a562200   jmp qword [reloc.btowc]                 ; [0x227f00:8]=0x2886
0x00002886      684c000000     push 0x4c                               ; 'L'
0x0000288b      e920fbffff     jmp sym..plt
;-- imp.memmove:
0x00002890      ff2572562200   jmp qword [reloc.memmove]               ; [0x227f08:8]=0x2896
0x00002896      684d000000     push 0x4d                               ; 'M'
0x0000289b      e910fbffff     jmp sym..plt
;-- imp.error:
0x000028a0      ff256a562200   jmp qword [reloc.error]                 ; [0x227f10:8]=0x28a6
0x000028a6      684e000000     push 0x4e                               ; 'N'
0x000028ab      e900fbffff     jmp sym..plt
;-- imp.open:
0x000028b0      ff2562562200   jmp qword [reloc.open]                  ; [0x227f18:8]=0x28b6
0x000028b6      684f000000     push 0x4f                               ; 'O'
0x000028bb      e9f0faffff     jmp sym..plt
;-- imp.fseeko:
0x000028c0      ff255a562200   jmp qword [reloc.fseeko]                ; [0x227f20:8]=0x28c6
0x000028c6      6850000000     push 0x50                               ; 'P' ; "@"
0x000028cb      e9e0faffff     jmp sym..plt
;-- imp.fopen:
0x000028d0      ff2552562200   jmp qword [reloc.fopen]                 ; [0x227f28:8]=0x28d6
0x000028d6      6851000000     push 0x51                               ; 'Q'
0x000028db      e9d0faffff     jmp sym..plt
;-- imp.towlower:
0x000028e0      ff254a562200   jmp qword [reloc.towlower]              ; [0x227f30:8]=0x28e6
0x000028e6      6852000000     push 0x52                               ; 'R'
0x000028eb      e9c0faffff     jmp sym..plt
;-- imp.fdopendir:
0x000028f0      ff2542562200   jmp qword [reloc.fdopendir]             ; [0x227f38:8]=0x28f6
0x000028f6      6853000000     push 0x53                               ; 'S'
0x000028fb      e9b0faffff     jmp sym..plt
;-- imp.unsetenv:
0x00002900      ff253a562200   jmp qword [reloc.unsetenv]              ; [0x227f40:8]=0x2906
0x00002906      6854000000     push 0x54                               ; 'T'
0x0000290b      e9a0faffff     jmp sym..plt
;-- imp.towupper:
0x00002910      ff2532562200   jmp qword [reloc.towupper]              ; [0x227f48:8]=0x2916
0x00002916      6855000000     push 0x55                               ; 'U'
0x0000291b      e990faffff     jmp sym..plt
;-- imp.strtoul:
0x00002920      ff252a562200   jmp qword [reloc.strtoul]               ; [0x227f50:8]=0x2926 ; "&)"
0x00002926      6856000000     push 0x56                               ; 'V'
0x0000292b      e980faffff     jmp sym..plt
;-- imp.fstatfs:
0x00002930      ff2522562200   jmp qword [reloc.fstatfs]               ; [0x227f58:8]=0x2936 ; "6)"
0x00002936      6857000000     push 0x57                               ; 'W'
0x0000293b      e970faffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00002940      ff251a562200   jmp qword [reloc.__cxa_atexit]          ; [0x227f60:8]=0x2946 ; "F)"
0x00002946      6858000000     push 0x58                               ; 'X' ; "@"
0x0000294b      e960faffff     jmp sym..plt
;-- imp.exit:
0x00002950      ff2512562200   jmp qword [reloc.exit]                  ; [0x227f68:8]=0x2956 ; "V)"
0x00002956      6859000000     push 0x59                               ; 'Y'
0x0000295b      e950faffff     jmp sym..plt
;-- imp.fwrite:
0x00002960      ff250a562200   jmp qword [reloc.fwrite]                ; [0x227f70:8]=0x2966 ; "f)"
0x00002966      685a000000     push 0x5a                               ; 'Z'
0x0000296b      e940faffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00002970      ff2502562200   jmp qword [reloc.__fprintf_chk]         ; [0x227f78:8]=0x2976 ; "v)"
0x00002976      685b000000     push 0x5b                               ; '['
0x0000297b      e930faffff     jmp sym..plt
;-- imp.fflush_unlocked:
0x00002980      ff25fa552200   jmp qword [reloc.fflush_unlocked]       ; [0x227f80:8]=0x2986
0x00002986      685c000000     push 0x5c                               ; '\'
0x0000298b      e920faffff     jmp sym..plt
;-- imp.mbsinit:
0x00002990      ff25f2552200   jmp qword [reloc.mbsinit]               ; [0x227f88:8]=0x2996
0x00002996      685d000000     push 0x5d                               ; ']'
0x0000299b      e910faffff     jmp sym..plt
;-- imp.iswprint:
0x000029a0      ff25ea552200   jmp qword [reloc.iswprint]              ; [0x227f90:8]=0x29a6
0x000029a6      685e000000     push 0x5e                               ; '^'
0x000029ab      e900faffff     jmp sym..plt
;-- imp.hasmntopt:
0x000029b0      ff25e2552200   jmp qword [reloc.hasmntopt]             ; [0x227f98:8]=0x29b6
0x000029b6      685f000000     push 0x5f                               ; '_'
0x000029bb      e9f0f9ffff     jmp sym..plt
;-- imp.getdelim:
0x000029c0      ff25da552200   jmp qword [reloc.getdelim]              ; [0x227fa0:8]=0x29c6
0x000029c6      6860000000     push 0x60                               ; '`'
0x000029cb      e9e0f9ffff     jmp sym..plt
;-- imp.strstr:
0x000029d0      ff25d2552200   jmp qword [reloc.strstr]                ; [0x227fa8:8]=0x29d6
0x000029d6      6861000000     push 0x61                               ; 'a'
0x000029db      e9d0f9ffff     jmp sym..plt
;-- imp.__ctype_tolower_loc:
0x000029e0      ff25ca552200   jmp qword [reloc.__ctype_tolower_loc]   ; [0x227fb0:8]=0x29e6
0x000029e6      6862000000     push 0x62                               ; 'b'
0x000029eb      e9c0f9ffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000029f0      ff25c2552200   jmp qword [reloc.__ctype_b_loc]         ; [0x227fb8:8]=0x29f6
0x000029f6      6863000000     push 0x63                               ; 'c'
0x000029fb      e9b0f9ffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x00002a00      ff25ba552200   jmp qword [reloc.__sprintf_chk]         ; [0x227fc0:8]=0x2a06
0x00002a06      6864000000     push 0x64                               ; 'd'
0x00002a0b      e9a0f9ffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00002a10      .qword 0x9066002255b225ff                              ; [13] -r-x section size 16 named .plt.got
0x00002a18      .qword 0x9066002255da25ff
;-- section..text:
;-- .text:
;-- mbuiter_multi_next.part.0:
0x00002a20      488d0d39f001.  lea rcx, obj.__PRETTY_FUNCTION__.5133   ; ../coreutils-8.31/lib/mbuiter.h:132 ; 0x21a60 ; "mbuiter_multi_next" ; [14] -r-x section size 118830 named .text
0x00002a27      488d357aea01.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x214a8 ; "../coreutils-8.31/lib/mbuiter.h"
0x00002a2e      488d3dc1ea01.  lea rdi, str.iter__cur.wc____0          ; 0x214f6 ; "iter->cur.wc == 0"
0x00002a35      4883ec08       sub rsp, 8
0x00002a39      bab3000000     mov edx, 0xb3                           ; ../coreutils-8.31/lib/mbuiter.h:179
0x00002a3e      e8bdfbffff     call sym.imp.__assert_fail
0x00002a43      662e0f1f8400.  nop word cs:[rax + rax]
0x00002a4d      0f1f00         nop dword [rax]
;-- main:
0x00002a50      4157           push r15
0x00002a52      4156           push r14
0x00002a54      4531ff         xor r15d, r15d
0x00002a57      4155           push r13
0x00002a59      4154           push r12
0x00002a5b      4189fc         mov r12d, edi
0x00002a5e      55             push rbp
0x00002a5f      53             push rbx
0x00002a60      4889f5         mov rbp, rsi
0x00002a63      488d1d56e501.  lea rbx, [0x00020fc0]
0x00002a6a      4531ed         xor r13d, r13d
0x00002a6d      4881ec380100.  sub rsp, 0x138
0x00002a74      488b3e         mov rdi, qword [rsi]
0x00002a77      64488b042528.  mov rax, qword fs:[0x28]
0x00002a80      488984242801.  mov qword [rsp + 0x128], rax
0x00002a88      31c0           xor eax, eax
0x00002a8a      488d050bfc01.  lea rax, [0x0002269c]                   ; "."
0x00002a91      48c784248800.  mov qword [rsp + 0x88], 0
0x00002a9d      4c8d74245c     lea r14, [rsp + 0x5c]
0x00002aa2      488984248000.  mov qword [rsp + 0x80], rax
0x00002aaa      e8a17b0000     call sym.set_program_name
0x00002aaf      488d352bf501.  lea rsi, [0x00021fe1]
0x00002ab6      bf06000000     mov edi, 6
0x00002abb      e880fdffff     call sym.imp.setlocale
0x00002ac0      488d3576d001.  lea rsi, str.usr_local_share_locale     ; 0x1fb3d ; "/usr/local/share/locale"
0x00002ac7      488d3d3dd001.  lea rdi, [0x0001fb0b]                   ; "coreutils"
0x00002ace      e82dfaffff     call sym.imp.bindtextdomain
0x00002ad3      488d3d31d001.  lea rdi, [0x0001fb0b]                   ; "coreutils"
0x00002ada      e8e1f9ffff     call sym.imp.textdomain
0x00002adf      488d3d0a2100.  lea rdi, sym.close_stdout               ; 0x4bf0 ; "USH\x83\xec\bH\x8b=\xab4\""
0x00002ae6      e855cf0100     call sym.atexit
0x00002aeb      e820290000     call sym.new_exclude
0x00002af0      488d3d5ed001.  lea rdi, str.DU_BLOCK_SIZE              ; 0x1fb55 ; "DU_BLOCK_SIZE"
0x00002af7      488905425622.  mov qword [obj.exclude], rax            ; [0x228140:8]=0
0x00002afe      e8ddf8ffff     call sym.imp.getenv
0x00002b03      488d153e5622.  lea rdx, obj.output_block_size          ; 0x228148
0x00002b0a      488d355f5622.  lea rsi, obj.human_output_opts          ; 0x228170
0x00002b11      4889c7         mov rdi, rax
0x00002b14      e8976f0000     call sym.human_options
0x00002b19      488d442460     lea rax, [rsp + 0x60]
0x00002b1e      c644241c00     mov byte [rsp + 0x1c], 0
0x00002b23      c74424181000.  mov dword [rsp + 0x18], 0x10            ; [0x10:4]=0x3e0003
0x00002b2b      c74424100800.  mov dword [rsp + 0x10], 8
0x00002b33      c644240801     mov byte [rsp + 8], 1
0x00002b38      c644242000     mov byte [rsp + 0x20], 0
0x00002b3d      4889442428     mov qword [rsp + 0x28], rax
0x00002b42      660f1f440000   nop word [rax + rax]
0x00002b48      488d0d914b22.  lea rcx, obj.long_options               ; 0x2276e0 ; "X\xfd\x01"
0x00002b4f      488d150dd001.  lea rdx, str.0abd:chHklmst:xB:DLPSX:    ; 0x1fb63 ; "0abd:chHklmst:xB:DLPSX:"
0x00002b56      4d89f0         mov r8, r14
0x00002b59      4889ee         mov rsi, rbp
0x00002b5c      4489e7         mov edi, r12d
0x00002b5f      c744245cffff.  mov dword [rsp + 0x5c], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00002b67      e804faffff     call sym.imp.getopt_long
0x00002b6c      83f8ff         cmp eax, 0xffffffff
0x00002b6f      0f8471030000   je 0x2ee6
0x00002b75      0583000000     add eax, 0x83
0x00002b7a      3d0a010000     cmp eax, 0x10a
0x00002b7f      0f8757030000   ja 0x2edc
0x00002b85      48630483       movsxd rax, dword [rbx + rax*4]
0x00002b89      4801d8         add rax, rbx
0x00002b8c      ffe0           jmp rax
0x00002b8e      c74424104800.  mov dword [rsp + 0x10], 0x48            ; 'H'
                                                                       ; [0x48:4]=64
0x00002b96      ebb0           jmp 0x2b48
0x00002b98      488b3d215522.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2280c0:8]=0
0x00002b9f      4c8d05eecf01.  lea r8, str.kKmMGTPEZY0                 ; 0x1fb94 ; "kKmMGTPEZY0"
0x00002ba6      488d0dcb5522.  lea rcx, obj.opt_threshold              ; 0x228178
0x00002bad      31d2           xor edx, edx
0x00002baf      31f6           xor esi, esi
0x00002bb1      e83aa10000     call sym.xstrtoimax
0x00002bb6      85c0           test eax, eax
0x00002bb8      0f8596120000   jne 0x3e54
0x00002bbe      48833db25522.  cmp qword [obj.opt_threshold], 0        ; [0x228178:8]=0
0x00002bc6      7580           jne 0x2b48
0x00002bc8      488b05f15422.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2280c0:8]=0
0x00002bcf      80382d         cmp byte [rax], 0x2d
0x00002bd2      0f8570ffffff   jne 0x2b48
0x00002bd8      488d3571e101.  lea rsi, str.invalid___threshold_argument___0 ; 0x20d50 ; "invalid --threshold argument '-0'"
0x00002bdf      ba05000000     mov edx, 5
0x00002be4      31ff           xor edi, edi
0x00002be6      e825f9ffff     call sym.imp.dcgettext
0x00002beb      31f6           xor esi, esi
0x00002bed      4889c2         mov rdx, rax
0x00002bf0      bf01000000     mov edi, 1
0x00002bf5      31c0           xor eax, eax
0x00002bf7      e8a4fcffff     call sym.imp.error
0x00002bfc      c644241c01     mov byte [rsp + 0x1c], 1
0x00002c01      e942ffffff     jmp 0x2b48
0x00002c06      44893d635522.  mov dword [obj.human_output_opts], r15d ; [0x228170:4]=0
0x00002c0d      48c705305522.  mov qword [obj.output_block_size], 0x100000 ; [0x228148:8]=0
0x00002c18      e92bffffff     jmp 0x2b48
0x00002c1d      c60560552200.  mov byte [obj.opt_count_all], 1         ; [0x228184:1]=0
0x00002c24      e91fffffff     jmp 0x2b48
0x00002c29      44893d405522.  mov dword [obj.human_output_opts], r15d ; [0x228170:4]=0
0x00002c30      48c7050d5522.  mov qword [obj.output_block_size], 0x400 ; [0x228148:8]=0
0x00002c3b      e908ffffff     jmp 0x2b48
0x00002c40      c70526552200.  mov dword [obj.human_output_opts], 0xb0 ; [0x228170:4]=0
0x00002c4a      48c705f35422.  mov qword [obj.output_block_size], 1    ; [0x228148:8]=0
0x00002c55      e9eefeffff     jmp 0x2b48
0x00002c5a      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00002c5f      488b3d5a5422.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2280c0:8]=0
0x00002c66      4531c0         xor r8d, r8d
0x00002c69      31d2           xor edx, edx
0x00002c6b      31f6           xor esi, esi
0x00002c6d      e83ea70000     call sym.xstrtoul
0x00002c72      85c0           test eax, eax
0x00002c74      0f85f80a0000   jne 0x3772
0x00002c7a      488b442460     mov rax, qword [rsp + 0x60]
0x00002c7f      c644242001     mov byte [rsp + 0x20], 1
0x00002c84      488905855322.  mov qword [obj.max_depth], rax          ; [0x228010:8]=-1
0x00002c8b      e9b8feffff     jmp 0x2b48
0x00002c90      c605ea542200.  mov byte [obj.print_grand_total], 1     ; [0x228181:1]=0
0x00002c97      e9acfeffff     jmp 0x2b48
0x00002c9c      c605e2542200.  mov byte [obj.apparent_size], 1         ; [0x228185:1]=0
0x00002ca3      44893dc65422.  mov dword [obj.human_output_opts], r15d ; [0x228170:4]=0
0x00002caa      48c705935422.  mov qword [obj.output_block_size], 1    ; [0x228148:8]=0
0x00002cb5      e98efeffff     jmp 0x2b48
0x00002cba      c605c5542200.  mov byte [obj.opt_all], 1               ; [0x228186:1]=0
0x00002cc1      e982feffff     jmp 0x2b48
0x00002cc6      488b15f35322.  mov rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2280c0:8]=0
0x00002ccd      488b356c5422.  mov rsi, qword [obj.exclude]            ; [0x228140:8]=0
0x00002cd4      41b80a000000   mov r8d, 0xa
0x00002cda      488d3d9f2a00.  lea rdi, sym.add_exclude                ; 0x5780 ; "AWAVAUATI\x89\xf5US\x89\xd5I\x89\xfcH\x83\xec\b\x81\xe2"
0x00002ce1      b900000010     mov ecx, 0x10000000
0x00002ce6      e825300000     call sym.add_exclude_file
0x00002ceb      85c0           test eax, eax
0x00002ced      0f8455feffff   je 0x2b48
0x00002cf3      488b15c65322.  mov rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2280c0:8]=0
0x00002cfa      be03000000     mov esi, 3
0x00002cff      31ff           xor edi, edi
0x00002d01      e88a940000     call sym.quotearg_n_style_colon
0x00002d06      4889442408     mov qword [rsp + 8], rax
0x00002d0b      e800f7ffff     call sym.imp.__errno_location
0x00002d10      488b4c2408     mov rcx, qword [rsp + 8]
0x00002d15      8b30           mov esi, dword [rax]
0x00002d17      488d1572e701.  lea rdx, [0x00021490]                   ; "%s"
0x00002d1e      31ff           xor edi, edi
0x00002d20      31c0           xor eax, eax
0x00002d22      e879fbffff     call sym.imp.error
0x00002d27      c644240800     mov byte [rsp + 8], 0
0x00002d2c      e917feffff     jmp 0x2b48
0x00002d31      c60548542200.  mov byte [obj.opt_separate_dirs], 1     ; [0x228180:1]=0
0x00002d38      e90bfeffff     jmp 0x2b48
0x00002d3d      c74424181000.  mov dword [rsp + 0x18], 0x10            ; [0x10:4]=0x3e0003
0x00002d45      e9fefdffff     jmp 0x2b48
0x00002d4a      c74424180200.  mov dword [rsp + 0x18], 2
0x00002d52      e9f1fdffff     jmp 0x2b48
0x00002d57      c74424181100.  mov dword [rsp + 0x18], 0x11            ; [0x11:4]=0x1003e00
0x00002d5f      e9e4fdffff     jmp 0x2b48
0x00002d64      488b3d555322.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2280c0:8]=0
0x00002d6b      488d15d65322.  lea rdx, obj.output_block_size          ; 0x228148
0x00002d72      488d35f75322.  lea rsi, obj.human_output_opts          ; 0x228170
0x00002d79      e8326d0000     call sym.human_options
0x00002d7e      85c0           test eax, eax
0x00002d80      0f84c2fdffff   je 0x2b48
0x00002d86      4c8b05335322.  mov r8, qword [obj.optarg]              ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2280c0:8]=0
0x00002d8d      8b74245c       mov esi, dword [rsp + 0x5c]
0x00002d91      488d0d484922.  lea rcx, obj.long_options               ; 0x2276e0 ; "X\xfd\x01"
0x00002d98      ba42000000     mov edx, 0x42                           ; 'B'
0x00002d9d      89c7           mov edi, eax
0x00002d9f      e82caa0000     call sym.xstrtol_fatal
0x00002da4      c605d7532200.  mov byte [obj.opt_nul_terminate_output], 1 ; [0x228182:1]=0
0x00002dab      e998fdffff     jmp 0x2b48
0x00002db0      488d0515ce01.  lea rax, str.Jim_Meyering               ; 0x1fbcc ; "Jim Meyering"
0x00002db7      4883ec08       sub rsp, 8
0x00002dbb      488b3de65222.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x00002dc2      6a00           push 0
0x00002dc4      488b0d4d5222.  mov rcx, qword [obj.Version]            ; [0x228018:8]=0x21434 str.8.31 ; "4\x14\x02"
0x00002dcb      4c8d0dd8cd01.  lea r9, str.David_MacKenzie             ; 0x1fbaa ; "David MacKenzie"
0x00002dd2      50             push rax
0x00002dd3      488d05ffcd01.  lea rax, str.Paul_Eggert                ; 0x1fbd9 ; "Paul Eggert"
0x00002dda      4c8d05d9cd01.  lea r8, str.Torbjorn_Granlund           ; 0x1fbba ; "Torbjorn Granlund"
0x00002de1      488d151fcd01.  lea rdx, str.GNU_coreutils              ; 0x1fb07 ; "GNU coreutils"
0x00002de8      488d359ccc01.  lea rsi, [0x0001fa8b]                   ; "du"
0x00002def      50             push rax
0x00002df0      31c0           xor eax, eax
0x00002df2      e8899a0000     call sym.version_etc
0x00002df7      4883c420       add rsp, 0x20
0x00002dfb      31ff           xor edi, edi
0x00002dfd      e84efbffff     call sym.imp.exit
0x00002e02      c60564532200.  mov byte [obj.opt_inodes], 1            ; [0x22816d:1]=0
0x00002e09      e93afdffff     jmp 0x2b48
0x00002e0e      488b05ab5222.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2280c0:8]=0
0x00002e15      488905445322.  mov qword [obj.time_style], rax         ; [0x228160:8]=0
0x00002e1c      e927fdffff     jmp 0x2b48
0x00002e21      488b35985222.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2280c0:8]=0
0x00002e28      31c0           xor eax, eax
0x00002e2a      c6053b532200.  mov byte [obj.opt_time], 1              ; [0x22816c:1]=0
0x00002e31      4885f6         test rsi, rsi
0x00002e34      7431           je 0x2e67
0x00002e36      4c8b0de35122.  mov r9, qword [obj.argmatch_die]        ; [0x228020:8]=0x4700 sym.__argmatch_die
0x00002e3d      488d155c4822.  lea rdx, obj.time_args                  ; 0x2276a0 ; ":\xfd\x01"
0x00002e44      488d0dd5e501.  lea rcx, obj.time_types                 ; 0x21420
0x00002e4b      488d3d4ecd01.  lea rdi, str.time                       ; 0x1fba0 ; "--time"
0x00002e52      41b804000000   mov r8d, 4
0x00002e58      e8731b0000     call sym.__xargmatch_internal
0x00002e5d      488d15bce501.  lea rdx, obj.time_types                 ; 0x21420
0x00002e64      8b0482         mov eax, dword [rdx + rax*4]
0x00002e67      488d3d39cd01.  lea rdi, [0x0001fba7]                   ; "TZ"
0x00002e6e      8905f4522200   mov dword [obj.time_type], eax          ; [0x228168:4]=0
0x00002e74      e867f5ffff     call sym.imp.getenv
0x00002e79      4889c7         mov rdi, rax
0x00002e7c      e8dfbf0100     call sym.tzalloc
0x00002e81      488905c85222.  mov qword [obj.localtz], rax            ; [0x228150:8]=0
0x00002e88      e9bbfcffff     jmp 0x2b48
0x00002e8d      c705d9522200.  mov dword [obj.human_output_opts], 0x90 ; [0x228170:4]=0
0x00002e97      48c705a65222.  mov qword [obj.output_block_size], 1    ; [0x228148:8]=0
0x00002ea2      e9a1fcffff     jmp 0x2b48
0x00002ea7      488b35125222.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2280c0:8]=0
0x00002eae      488b3d8b5222.  mov rdi, qword [obj.exclude]            ; [0x228140:8]=0
0x00002eb5      ba00000010     mov edx, 0x10000000
0x00002eba      e8c1280000     call sym.add_exclude
0x00002ebf      e984fcffff     jmp 0x2b48
0x00002ec4      c605ba522200.  mov byte [obj.apparent_size], 1         ; [0x228185:1]=0
0x00002ecb      e978fcffff     jmp 0x2b48
0x00002ed0      4c8b2de95122.  mov r13, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2280c0:8]=0
0x00002ed7      e96cfcffff     jmp 0x2b48
0x00002edc      c644240800     mov byte [rsp + 8], 0
0x00002ee1      e962fcffff     jmp 0x2b48
0x00002ee6      807c240800     cmp byte [rsp + 8], 0
0x00002eeb      0f843b100000   je 0x3f2c
0x00002ef1      803d8e522200.  cmp byte [obj.opt_all], 0               ; [0x228186:1]=0
0x00002ef8      0f8420080000   je 0x371e
0x00002efe      807c241c00     cmp byte [rsp + 0x1c], 0
0x00002f03      0f8502100000   jne 0x3f0b
0x00002f09      803d5d522200.  cmp byte [obj.opt_inodes], 0            ; [0x22816d:1]=0
0x00002f10      7418           je 0x2f2a
0x00002f12      803d6c522200.  cmp byte [obj.apparent_size], 0         ; [0x228185:1]=0
0x00002f19      0f85fa0a0000   jne 0x3a19
0x00002f1f      48c7051e5222.  mov qword [obj.output_block_size], 1    ; [0x228148:8]=0
0x00002f2a      803d3b522200.  cmp byte [obj.opt_time], 0              ; [0x22816c:1]=0
0x00002f31      742a           je 0x2f5d
0x00002f33      48833d255222.  cmp qword [obj.time_style], 0           ; [0x228160:8]=0
0x00002f3b      0f84a70c0000   je 0x3be8
0x00002f41      4c8b3d185222.  mov r15, qword [obj.time_style]         ; [0x228160:8]=0
0x00002f48      41803f2b       cmp byte [r15], 0x2b
0x00002f4c      0f85b30b0000   jne 0x3b05
0x00002f52      4983c701       add r15, 1
0x00002f56      4c893dfb5122.  mov qword [obj.time_format], r15        ; [0x228158:8]=0
0x00002f5d      4d85ed         test r13, r13
0x00002f60      486305515122.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2280b8:4]=0
0x00002f67      0f842a0b0000   je 0x3a97
0x00002f6d      4139c4         cmp r12d, eax
0x00002f70      0f8f730e0000   jg 0x3de9
0x00002f76      488d350df601.  lea rsi, [0x0002258a]                   ; "-"
0x00002f7d      4c89ef         mov rdi, r13
0x00002f80      e84bf7ffff     call sym.imp.strcmp
0x00002f85      85c0           test eax, eax
0x00002f87      0f8530090000   jne 0x38bd
0x00002f8d      488b3d1c5122.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2280b0:8]=0
0x00002f94      e8271b0000     call sym.argv_iter_init_stream
0x00002f99      c605e3512200.  mov byte [obj.hash_all], 1              ; [0x228183:1]=0
0x00002fa0      4989c7         mov r15, rax
0x00002fa3      4d85ff         test r15, r15
0x00002fa6      0f84330e0000   je 0x3ddf
0x00002fac      e86f1e0000     call sym.di_set_alloc
0x00002fb1      4885c0         test rax, rax
0x00002fb4      488905dd5122.  mov qword [obj.di_files], rax           ; [0x228198:8]=0
0x00002fbb      0f841e0e0000   je 0x3ddf
0x00002fc1      803dbc512200.  cmp byte [obj.opt_count_all], 0         ; [0x228184:1]=0
0x00002fc8      0f8561010000   jne 0x312f
0x00002fce      803dae512200.  cmp byte [obj.hash_all], 0              ; [0x228183:1]=0
0x00002fd5      0f8454010000   je 0x312f
0x00002fdb      8b442410       mov eax, dword [rsp + 0x10]
0x00002fdf      0b442418       or eax, dword [rsp + 0x18]
0x00002fe3      4d89f4         mov r12, r14
0x00002fe6      8944241c       mov dword [rsp + 0x1c], eax
0x00002fea      0fb6442408     movzx eax, byte [rsp + 8]
0x00002fef      88442418       mov byte [rsp + 0x18], al
0x00002ff3      488d84249000.  lea rax, [rsp + 0x90]
0x00002ffb      4889442448     mov qword [rsp + 0x48], rax
0x00003000      4c89e6         mov rsi, r12
0x00003003      4c89ff         mov rdi, r15
0x00003006      e8f51a0000     call sym.argv_iter
0x0000300b      4885c0         test rax, rax
0x0000300e      4889c3         mov rbx, rax
0x00003011      0f8412050000   je 0x3529
0x00003017      4d85ed         test r13, r13
0x0000301a      0f8490040000   je 0x34b0
0x00003020      488d1563f501.  lea rdx, [0x0002258a]                   ; "-"
0x00003027      b902000000     mov ecx, 2
0x0000302c      4c89ee         mov rsi, r13
0x0000302f      4889d7         mov rdi, rdx
0x00003032      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003034      0f97c0         seta al
0x00003037      1c00           sbb al, 0
0x00003039      84c0           test al, al
0x0000303b      751a           jne 0x3057
0x0000303d      b902000000     mov ecx, 2
0x00003042      4889de         mov rsi, rbx
0x00003045      4889d7         mov rdi, rdx
0x00003048      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000304a      0f97c0         seta al
0x0000304d      1c00           sbb al, 0
0x0000304f      84c0           test al, al
0x00003051      0f84c1030000   je 0x3418
0x00003057      803b00         cmp byte [rbx], 0
0x0000305a      0f84f8030000   je 0x3458
0x00003060      488d05a95022.  lea rax, obj.temp_argv.7378             ; 0x228110
0x00003067      8b74241c       mov esi, dword [rsp + 0x1c]
0x0000306b      31d2           xor edx, edx
0x0000306d      4889c7         mov rdi, rax
0x00003070      488918         mov qword [rax], rbx
0x00003073      e8f89b0000     call sym.xfts_open
0x00003078      4889442410     mov qword [rsp + 0x10], rax
0x0000307d      0fb6442408     movzx eax, byte [rsp + 8]
0x00003082      4c897c2428     mov qword [rsp + 0x28], r15
0x00003087      4c896c2420     mov qword [rsp + 0x20], r13
0x0000308c      4c89642430     mov qword [rsp + 0x30], r12
0x00003091      4189c7         mov r15d, eax
0x00003094      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003099      e842c80000     call sym.rpl_fts_read
0x0000309e      4885c0         test rax, rax
0x000030a1      4989c6         mov r14, rax
0x000030a4      0f841c060000   je 0x36c6
0x000030aa      0fb76870       movzx ebp, word [rax + 0x70]
0x000030ae      4c8b6838       mov r13, qword [rax + 0x38]
0x000030b2      83fd04         cmp ebp, 4
0x000030b5      0f84cd050000   je 0x3688
0x000030bb      83fd06         cmp ebp, 6
0x000030be      440fb6642408   movzx r12d, byte [rsp + 8]
0x000030c4      0f84e6000000   je 0x31b0
0x000030ca      488b3d6f5022.  mov rdi, qword [obj.exclude]            ; [0x228140:8]=0
0x000030d1      4c89ee         mov rsi, r13
0x000030d4      e807250000     call sym.excluded_file_name
0x000030d9      84c0           test al, al
0x000030db      753e           jne 0x311b
0x000030dd      83fd0b         cmp ebp, 0xb
0x000030e0      0f84d20a0000   je 0x3bb8
0x000030e6      83fd0a         cmp ebp, 0xa
0x000030e9      410f94c0       sete r8b
0x000030ed      83fd0d         cmp ebp, 0xd
0x000030f0      0f94c0         sete al
0x000030f3      4108c0         or r8b, al
0x000030f6      4589c4         mov r12d, r8d
0x000030f9      0f859b080000   jne 0x399a
0x000030ff      488b442410     mov rax, qword [rsp + 0x10]
0x00003104      f6404840       test byte [rax + 0x48], 0x40
0x00003108      7432           je 0x313c
0x0000310a      49837e5800     cmp qword [r14 + 0x58], 0
0x0000310f      7e2b           jle 0x313c
0x00003111      498b4e78       mov rcx, qword [r14 + 0x78]
0x00003115      48394818       cmp qword [rax + 0x18], rcx
0x00003119      7421           je 0x313c
0x0000311b      83ed01         sub ebp, 1
0x0000311e      0f841b090000   je 0x3a3f
0x00003124      440fb6642408   movzx r12d, byte [rsp + 8]
0x0000312a      e9d1020000     jmp 0x3400
0x0000312f      814c24100001.  or dword [rsp + 0x10], obj.__frame_dummy_init_array_entry ; [0x100:4]=0x227670 loc.__init_array_start
0x00003137      e99ffeffff     jmp 0x2fdb
0x0000313c      803d41502200.  cmp byte [obj.opt_count_all], 0         ; [0x228184:1]=0
0x00003143      7547           jne 0x318c
0x00003145      803d37502200.  cmp byte [obj.hash_all], 0              ; [0x228183:1]=0
0x0000314c      751d           jne 0x316b
0x0000314e      418b86900000.  mov eax, dword [r14 + 0x90]
0x00003155      2500f00000     and eax, 0xf000
0x0000315a      3d00400000     cmp eax, entry.fini0                    ; sym.__do_global_dtors_aux
                                                                       ; 0x4000
0x0000315f      742b           je 0x318c
0x00003161      4983be880000.  cmp qword [r14 + 0x88], 1
0x00003169      7621           jbe 0x318c
0x0000316b      498b96800000.  mov rdx, qword [r14 + 0x80]
0x00003172      498b7678       mov rsi, qword [r14 + 0x78]
0x00003176      488b3d1b5022.  mov rdi, qword [obj.di_files]           ; [0x228198:8]=0
0x0000317d      e83e1d0000     call sym.di_set_insert
0x00003182      85c0           test eax, eax
0x00003184      0f88550c0000   js 0x3ddf
0x0000318a      748f           je 0x311b
0x0000318c      83fd02         cmp ebp, 2
0x0000318f      0f84f80a0000   je 0x3c8d
0x00003195      83fd07         cmp ebp, 7
0x00003198      0f84c40a0000   je 0x3c62
0x0000319e      83fd01         cmp ebp, 1
0x000031a1      7481           je 0x3124
0x000031a3      440fb6642408   movzx r12d, byte [rsp + 8]
0x000031a9      0f1f80000000.  nop dword [rax]
0x000031b0      8b05b24f2200   mov eax, dword [obj.time_type]          ; [0x228168:4]=0
0x000031b6      85c0           test eax, eax
0x000031b8      0f854f030000   jne 0x350d
0x000031be      498b8ed00000.  mov rcx, qword [r14 + 0xd0]
0x000031c5      4d8b8ed80000.  mov r9, qword [r14 + 0xd8]
0x000031cc      803db24f2200.  cmp byte [obj.apparent_size], 0         ; [0x228185:1]=0
0x000031d3      0f8424030000   je 0x34fd
0x000031d9      4983bea80000.  cmp qword [r14 + 0xa8], 0
0x000031e1      bb00000000     mov ebx, 0
0x000031e6      490f499ea800.  cmovns rbx, qword [r14 + 0xa8]
0x000031ee      488b15134f22.  mov rdx, qword [obj.n_alloc.7286]       ; [0x228108:8]=0
0x000031f5      4d8b7658       mov r14, qword [r14 + 0x58]
0x000031f9      48895c2460     mov qword [rsp + 0x60], rbx
0x000031fe      48c744246801.  mov qword [rsp + 0x68], 1
0x00003207      48894c2470     mov qword [rsp + 0x70], rcx
0x0000320c      4c894c2478     mov qword [rsp + 0x78], r9
0x00003211      4885d2         test rdx, rdx
0x00003214      0f8439040000   je 0x3653
0x0000321a      488b05674f22.  mov rax, qword [obj.prev_level]         ; [0x228188:8]=0
0x00003221      4939c6         cmp r14, rax
0x00003224      0f84d6000000   je 0x3300
0x0000322a      0f8683050000   jbe 0x37b3
0x00003230      4939d6         cmp r14, rdx
0x00003233      7265           jb 0x329a
0x00003235      ba80000000     mov edx, 0x80
0x0000323a      31f6           xor esi, esi
0x0000323c      488b3dbd4e22.  mov rdi, qword [obj.dulvl.7287]         ; [0x228100:8]=0
0x00003243      4889d0         mov rax, rdx
0x00003246      49f7e6         mul r14
0x00003249      0f806a0c0000   jo 0x3eb9
0x0000324f      4885c0         test rax, rax
0x00003252      4c894c2440     mov qword [rsp + 0x40], r9
0x00003257      48894c2438     mov qword [rsp + 0x38], rcx
0x0000325c      0f887d0b0000   js 0x3ddf
0x00003262      4885f6         test rsi, rsi
0x00003265      0f85740b0000   jne 0x3ddf
0x0000326b      4c89f6         mov rsi, r14
0x0000326e      48c1e607       shl rsi, 7
0x00003272      e8c9970000     call sym.xrealloc
0x00003277      488905824e22.  mov qword [obj.dulvl.7287], rax         ; [0x228100:8]=0
0x0000327e      4b8d0436       lea rax, [r14 + r14]
0x00003282      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00003287      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000328c      488905754e22.  mov qword [obj.n_alloc.7286], rax       ; [0x228108:8]=0
0x00003293      488b05ee4e22.  mov rax, qword [obj.prev_level]         ; [0x228188:8]=0
0x0000329a      488d5001       lea rdx, [rax + 1]
0x0000329e      4939d6         cmp r14, rdx
0x000032a1      725d           jb 0x3300
0x000032a3      48c1e006       shl rax, 6
0x000032a7      480305524e22.  add rax, qword [obj.dulvl.7287]         ; [0x228100:8]=0
0x000032ae      6690           nop
0x000032b0      48be00000000.  movabs rsi, 0x8000000000000000
0x000032ba      4883c201       add rdx, 1
0x000032be      48c740400000.  mov qword [rax + 0x40], 0
0x000032c6      48c740480000.  mov qword [rax + 0x48], 0
0x000032ce      48897050       mov qword [rax + 0x50], rsi
0x000032d2      4883c040       add rax, 0x40                           ; segment.PHDR
0x000032d6      48c74018ffff.  mov qword [rax + 0x18], 0xffffffffffffffff
0x000032de      48c740200000.  mov qword [rax + 0x20], 0
0x000032e6      48c740280000.  mov qword [rax + 0x28], 0
0x000032ee      48897030       mov qword [rax + 0x30], rsi
0x000032f2      48c74038ffff.  mov qword [rax + 0x38], 0xffffffffffffffff
0x000032fa      4939d6         cmp r14, rdx
0x000032fd      73b1           jae 0x32b0
0x000032ff      90             nop
0x00003300      803d794e2200.  cmp byte [obj.opt_separate_dirs], 0     ; [0x228180:1]=0
0x00003307      4c89357a4e22.  mov qword [obj.prev_level], r14         ; [0x228188:8]=0
0x0000330e      740a           je 0x331a
0x00003310      89e8           mov eax, ebp
0x00003312      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x00003315      83f804         cmp eax, 4
0x00003318      7446           je 0x3360
0x0000331a      4c89f0         mov rax, r14
0x0000331d      31f6           xor esi, esi
0x0000331f      4889da         mov rdx, rbx
0x00003322      48c1e006       shl rax, 6
0x00003326      480305d34d22.  add rax, qword [obj.dulvl.7287]         ; [0x228100:8]=0
0x0000332d      480310         add rdx, qword [rax]
0x00003330      400f92c6       setb sil
0x00003334      4885f6         test rsi, rsi
0x00003337      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000333e      480f45d6       cmovne rdx, rsi
0x00003342      4883400801     add qword [rax + 8], 1
0x00003347      483b4810       cmp rcx, qword [rax + 0x10]
0x0000334b      488910         mov qword [rax], rdx
0x0000334e      0f8ff2020000   jg 0x3646
0x00003354      7c0a           jl 0x3360
0x00003356      44394818       cmp dword [rax + 0x18], r9d
0x0000335a      0f88e6020000   js 0x3646
0x00003360      31c0           xor eax, eax
0x00003362      48031db74d22.  add rbx, qword [obj.tot_dui]            ; [0x228120:8]=0
0x00003369      0f92c0         setb al
0x0000336c      4885c0         test rax, rax
0x0000336f      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00003376      480f45d8       cmovne rbx, rax
0x0000337a      488305a64d22.  add qword [0x00228128], 1               ; [0x228128:8]=0
0x00003382      483b0da74d22.  cmp rcx, qword [0x00228130]             ; [0x228130:8]=0
0x00003389      48891d904d22.  mov qword [obj.tot_dui], rbx            ; [0x228120:8]=0
0x00003390      7f76           jg 0x3408
0x00003392      7c0c           jl 0x33a0
0x00003394      44390d9d4d22.  cmp dword [0x00228138], r9d             ; [0x228138:4]=0
0x0000339b      786b           js 0x3408
0x0000339d      0f1f00         nop dword [rax]
0x000033a0      83e5fd         and ebp, 0xfffffffd                     ; 4294967293
0x000033a3      83fd04         cmp ebp, 4
0x000033a6      0f843f010000   je 0x34eb
0x000033ac      803dd34d2200.  cmp byte [obj.opt_all], 0               ; [0x228186:1]=0
0x000033b3      0f8532010000   jne 0x34eb
0x000033b9      4d85f6         test r14, r14
0x000033bc      7542           jne 0x3400
0x000033be      488b15b34d22.  mov rdx, qword [obj.opt_threshold]      ; [0x228178:8]=0
0x000033c5      803da14d2200.  cmp byte [obj.opt_inodes], 0            ; [0x22816d:1]=0
0x000033cc      488b442468     mov rax, qword [rsp + 0x68]
0x000033d1      480f44442460   cmove rax, qword [rsp + 0x60]
0x000033d7      4885d2         test rdx, rdx
0x000033da      0f8830030000   js 0x3710
0x000033e0      4839d0         cmp rax, rdx
0x000033e3      0f93c0         setae al
0x000033e6      84c0           test al, al
0x000033e8      7416           je 0x3400
0x000033ea      488d7c2460     lea rdi, [rsp + 0x60]
0x000033ef      4c89ee         mov rsi, r13
0x000033f2      e8e90c0000     call sym.print_size
0x000033f7      660f1f840000.  nop word [rax + rax]
0x00003400      4521e7         and r15d, r12d
0x00003403      e98cfcffff     jmp 0x3094
0x00003408      48890d214d22.  mov qword [0x00228130], rcx             ; [0x228130:8]=0
0x0000340f      4c890d224d22.  mov qword [0x00228138], r9              ; [0x228138:8]=0
0x00003416      eb88           jmp 0x33a0
0x00003418      4889de         mov rsi, rbx
0x0000341b      bf04000000     mov edi, 4
0x00003420      e86b8c0000     call sym.quotearg_style
0x00003425      488d3594da01.  lea rsi, str.when_reading_file_names_from_stdin__no_file_name_of__s_allowed ; 0x20ec0 ; "when reading file names from stdin, no file name of %s allowed"
0x0000342c      31ff           xor edi, edi
0x0000342e      4889c5         mov rbp, rax
0x00003431      ba05000000     mov edx, 5
0x00003436      e8d5f0ffff     call sym.imp.dcgettext
0x0000343b      31f6           xor esi, esi
0x0000343d      4889c2         mov rdx, rax
0x00003440      31ff           xor edi, edi
0x00003442      31c0           xor eax, eax
0x00003444      4889e9         mov rcx, rbp
0x00003447      e854f4ffff     call sym.imp.error
0x0000344c      803b00         cmp byte [rbx], 0
0x0000344f      0f858c000000   jne 0x34e1
0x00003455      0f1f00         nop dword [rax]
0x00003458      4c89ff         mov rdi, r15
0x0000345b      e830170000     call sym.argv_iter_n_args
0x00003460      488d35a1c801.  lea rsi, str.invalid_zero_length_file_name ; 0x1fd08 ; "invalid zero-length file name"
0x00003467      ba05000000     mov edx, 5
0x0000346c      31ff           xor edi, edi
0x0000346e      4889c3         mov rbx, rax
0x00003471      e89af0ffff     call sym.imp.dcgettext
0x00003476      4c89ea         mov rdx, r13
0x00003479      be03000000     mov esi, 3
0x0000347e      31ff           xor edi, edi
0x00003480      4889c5         mov rbp, rax
0x00003483      e8088d0000     call sym.quotearg_n_style_colon
0x00003488      488d1597c801.  lea rdx, str.s:_lu:__s                  ; 0x1fd26 ; "%s:%lu: %s"
0x0000348f      4889c1         mov rcx, rax
0x00003492      4989e9         mov r9, rbp
0x00003495      4989d8         mov r8, rbx
0x00003498      31f6           xor esi, esi
0x0000349a      31ff           xor edi, edi
0x0000349c      31c0           xor eax, eax
0x0000349e      e8fdf3ffff     call sym.imp.error
0x000034a3      c644241800     mov byte [rsp + 0x18], 0
0x000034a8      e953fbffff     jmp 0x3000
0x000034ad      0f1f00         nop dword [rax]
0x000034b0      803800         cmp byte [rax], 0
0x000034b3      0f85a7fbffff   jne 0x3060
0x000034b9      488d3548c801.  lea rsi, str.invalid_zero_length_file_name ; 0x1fd08 ; "invalid zero-length file name"
0x000034c0      ba05000000     mov edx, 5
0x000034c5      31ff           xor edi, edi
0x000034c7      e844f0ffff     call sym.imp.dcgettext
0x000034cc      488d15bddf01.  lea rdx, [0x00021490]                   ; "%s"
0x000034d3      4889c1         mov rcx, rax
0x000034d6      31f6           xor esi, esi
0x000034d8      31ff           xor edi, edi
0x000034da      31c0           xor eax, eax
0x000034dc      e8bff3ffff     call sym.imp.error
0x000034e1      c644241800     mov byte [rsp + 0x18], 0
0x000034e6      e915fbffff     jmp 0x3000
0x000034eb      4c3b351e4b22.  cmp r14, qword [obj.max_depth]          ; [0x228010:8]=-1
0x000034f2      0f86c6feffff   jbe 0x33be
0x000034f8      e9bcfeffff     jmp 0x33b9
0x000034fd      498b9eb80000.  mov rbx, qword [r14 + 0xb8]
0x00003504      48c1e309       shl rbx, 9
0x00003508      e9e1fcffff     jmp 0x31ee
0x0000350d      83f802         cmp eax, 2
0x00003510      0f846e050000   je 0x3a84
0x00003516      498b8ee00000.  mov rcx, qword [r14 + 0xe0]
0x0000351d      4d8b8ee80000.  mov r9, qword [r14 + 0xe8]
0x00003524      e9a3fcffff     jmp 0x31cc
0x00003529      8b44245c       mov eax, dword [rsp + 0x5c]
0x0000352d      83f803         cmp eax, 3
0x00003530      0f84a9080000   je 0x3ddf
0x00003536      83f804         cmp eax, 4
0x00003539      7424           je 0x355f
0x0000353b      83f802         cmp eax, 2
0x0000353e      7462           je 0x35a2
0x00003540      488d0db6de01.  lea rcx, obj.__PRETTY_FUNCTION__.7387   ; 0x213fd ; "main"
0x00003547      488d3518c701.  lea rsi, str..._coreutils_8.31_src_du.c ; 0x1fc66 ; "../coreutils-8.31/src/du.c"
0x0000354e      488d3d43d901.  lea rdi, str.unexpected_error_code_from_argv_iter ; 0x20e98 ; "!\"unexpected error code from argv_iter\""
0x00003555      ba38040000     mov edx, 0x438
0x0000355a      e8a1f0ffff     call sym.imp.__assert_fail
0x0000355f      4c89ea         mov rdx, r13
0x00003562      be03000000     mov esi, 3
0x00003567      31ff           xor edi, edi
0x00003569      e8228c0000     call sym.quotearg_n_style_colon
0x0000356e      488d35e2c601.  lea rsi, str.s:_read_error              ; 0x1fc57 ; "%s: read error"
0x00003575      ba05000000     mov edx, 5
0x0000357a      31ff           xor edi, edi
0x0000357c      4889c5         mov rbp, rax
0x0000357f      e88cefffff     call sym.imp.dcgettext
0x00003584      4889c3         mov rbx, rax
0x00003587      e884eeffff     call sym.imp.__errno_location
0x0000358c      8b30           mov esi, dword [rax]
0x0000358e      4889e9         mov rcx, rbp
0x00003591      4889da         mov rdx, rbx
0x00003594      31ff           xor edi, edi
0x00003596      31c0           xor eax, eax
0x00003598      e803f3ffff     call sym.imp.error
0x0000359d      c644241800     mov byte [rsp + 0x18], 0
0x000035a2      4c89ff         mov rdi, r15
0x000035a5      e806160000     call sym.argv_iter_free
0x000035aa      488b3de74b22.  mov rdi, qword [obj.di_files]           ; [0x228198:8]=0
0x000035b1      e8da180000     call sym.di_set_free
0x000035b6      488b3dd34b22.  mov rdi, qword [obj.di_mnt]             ; [0x228190:8]=0
0x000035bd      4885ff         test rdi, rdi
0x000035c0      7405           je 0x35c7
0x000035c2      e8c9180000     call sym.di_set_free
0x000035c7      4d85ed         test r13, r13
0x000035ca      741b           je 0x35e7
0x000035cc      488b3ddd4a22.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2280b0:8]=0
0x000035d3      f60720         test byte [rdi], 0x20
0x000035d6      0f843f030000   je 0x391b
0x000035dc      807c241800     cmp byte [rsp + 0x18], 0
0x000035e1      0f859b080000   jne 0x3e82
0x000035e7      803d934b2200.  cmp byte [obj.print_grand_total], 0     ; [0x228181:1]=0
0x000035ee      7422           je 0x3612
0x000035f0      488d350bc701.  lea rsi, str.total                      ; 0x1fd02 ; "total"
0x000035f7      31ff           xor edi, edi
0x000035f9      ba05000000     mov edx, 5
0x000035fe      e80defffff     call sym.imp.dcgettext
0x00003603      488d3d164b22.  lea rdi, obj.tot_dui                    ; 0x228120
0x0000360a      4889c6         mov rsi, rax
0x0000360d      e8ce0a0000     call sym.print_size
0x00003612      0fb6442418     movzx eax, byte [rsp + 0x18]
0x00003617      83f001         xor eax, 1
0x0000361a      488b8c242801.  mov rcx, qword [rsp + 0x128]
0x00003622      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000362b      0fb6c0         movzx eax, al
0x0000362e      0f85b0070000   jne 0x3de4
0x00003634      4881c4380100.  add rsp, 0x138
0x0000363b      5b             pop rbx
0x0000363c      5d             pop rbp
0x0000363d      415c           pop r12
0x0000363f      415d           pop r13
0x00003641      415e           pop r14
0x00003643      415f           pop r15
0x00003645      c3             ret
0x00003646      48894810       mov qword [rax + 0x10], rcx
0x0000364a      4c894818       mov qword [rax + 0x18], r9
0x0000364e      e90dfdffff     jmp 0x3360
0x00003653      498d7e0a       lea rdi, [r14 + 0xa]
0x00003657      be40000000     mov esi, 0x40                           ; segment.PHDR
0x0000365c      4c894c2440     mov qword [rsp + 0x40], r9
0x00003661      48894c2438     mov qword [rsp + 0x38], rcx
0x00003666      48893d9b4a22.  mov qword [obj.n_alloc.7286], rdi       ; [0x228108:8]=0
0x0000366d      e83e950000     call sym.xcalloc
0x00003672      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00003677      488905824a22.  mov qword [obj.dulvl.7287], rax         ; [0x228100:8]=0
0x0000367e      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00003683      e978fcffff     jmp 0x3300
0x00003688      4c89ee         mov rsi, r13
0x0000368b      bf04000000     mov edi, 4
0x00003690      4531e4         xor r12d, r12d
0x00003693      e8f8890000     call sym.quotearg_style
0x00003698      488d35f6c501.  lea rsi, str.cannot_read_directory__s   ; 0x1fc95 ; "cannot read directory %s"
0x0000369f      ba05000000     mov edx, 5
0x000036a4      31ff           xor edi, edi
0x000036a6      4889c3         mov rbx, rax
0x000036a9      e862eeffff     call sym.imp.dcgettext
0x000036ae      418b7640       mov esi, dword [r14 + 0x40]
0x000036b2      4889c2         mov rdx, rax
0x000036b5      4889d9         mov rcx, rbx
0x000036b8      31ff           xor edi, edi
0x000036ba      31c0           xor eax, eax
0x000036bc      e8dff1ffff     call sym.imp.error
0x000036c1      e9eafaffff     jmp 0x31b0
0x000036c6      e845edffff     call sym.imp.__errno_location
0x000036cb      833800         cmp dword [rax], 0
0x000036ce      4589fe         mov r14d, r15d
0x000036d1      4c8b6c2420     mov r13, qword [rsp + 0x20]
0x000036d6      4c8b7c2428     mov r15, qword [rsp + 0x28]
0x000036db      4c8b642430     mov r12, qword [rsp + 0x30]
0x000036e0      4889c3         mov rbx, rax
0x000036e3      0f856d020000   jne 0x3956
0x000036e9      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000036ee      48c7058f4a22.  mov qword [obj.prev_level], 0           ; [0x228188:8]=0
0x000036f9      e852c00000     call sym.rpl_fts_close
0x000036fe      85c0           test eax, eax
0x00003700      0f8527020000   jne 0x392d
0x00003706      4420742418     and byte [rsp + 0x18], r14b
0x0000370b      e9f0f8ffff     jmp 0x3000
0x00003710      48f7da         neg rdx
0x00003713      4839c2         cmp rdx, rax
0x00003716      0f93c0         setae al
0x00003719      e9c8fcffff     jmp 0x33e6
0x0000371e      807c242000     cmp byte [rsp + 0x20], 0
0x00003723      0f8449070000   je 0x3e72
0x00003729      807c241c00     cmp byte [rsp + 0x1c], 0
0x0000372e      0f84d5f7ffff   je 0x2f09
0x00003734      488b1dd54822.  mov rbx, qword [obj.max_depth]          ; [0x228010:8]=-1
0x0000373b      4885db         test rbx, rbx
0x0000373e      0f8494020000   je 0x39d8
0x00003744      488d3595d601.  lea rsi, str.warning:_summarizing_conflicts_with___max_depth__lu ; 0x20de0 ; "warning: summarizing conflicts with --max-depth=%lu"
0x0000374b      ba05000000     mov edx, 5
0x00003750      31ff           xor edi, edi
0x00003752      e8b9edffff     call sym.imp.dcgettext
0x00003757      31ff           xor edi, edi
0x00003759      4889c2         mov rdx, rax
0x0000375c      4889d9         mov rcx, rbx
0x0000375f      31f6           xor esi, esi
0x00003761      31c0           xor eax, eax
0x00003763      e838f1ffff     call sym.imp.error
0x00003768      bf01000000     mov edi, 1
0x0000376d      e8ce0a0000     call sym.usage
0x00003772      488b3d474922.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2280c0:8]=0
0x00003779      e8e28b0000     call sym.quote
0x0000377e      488d35f6c301.  lea rsi, str.invalid_maximum_depth__s   ; 0x1fb7b ; "invalid maximum depth %s"
0x00003785      ba05000000     mov edx, 5
0x0000378a      31ff           xor edi, edi
0x0000378c      4889442408     mov qword [rsp + 8], rax
0x00003791      e87aedffff     call sym.imp.dcgettext
0x00003796      488b4c2408     mov rcx, qword [rsp + 8]
0x0000379b      4889c2         mov rdx, rax
0x0000379e      31f6           xor esi, esi
0x000037a0      31ff           xor edi, edi
0x000037a2      31c0           xor eax, eax
0x000037a4      e8f7f0ffff     call sym.imp.error
0x000037a9      c644240800     mov byte [rsp + 8], 0
0x000037ae      e995f3ffff     jmp 0x2b48
0x000037b3      488d50ff       lea rdx, [rax - 1]
0x000037b7      4939d6         cmp r14, rdx
0x000037ba      0f852c070000   jne 0x3eec
0x000037c0      488b15394922.  mov rdx, qword [obj.dulvl.7287]         ; [0x228100:8]=0
0x000037c7      48c1e006       shl rax, 6
0x000037cb      31ff           xor edi, edi
0x000037cd      4889de         mov rsi, rbx
0x000037d0      4801d0         add rax, rdx
0x000037d3      480330         add rsi, qword [rax]
0x000037d6      400f92c7       setb dil
0x000037da      4885ff         test rdi, rdi
0x000037dd      48c7c7ffffff.  mov rdi, 0xffffffffffffffff
0x000037e4      480f45f7       cmovne rsi, rdi
0x000037e8      488b7808       mov rdi, qword [rax + 8]
0x000037ec      4889742460     mov qword [rsp + 0x60], rsi
0x000037f1      4883c701       add rdi, 1
0x000037f5      48897c2468     mov qword [rsp + 0x68], rdi
0x000037fa      483b4810       cmp rcx, qword [rax + 0x10]
0x000037fe      0f8ce4020000   jl 0x3ae8
0x00003804      7f0a           jg 0x3810
0x00003806      443b4818       cmp r9d, dword [rax + 0x18]
0x0000380a      0f88d8020000   js 0x3ae8
0x00003810      803d69492200.  cmp byte [obj.opt_separate_dirs], 0     ; [0x228180:1]=0
0x00003817      0f8447030000   je 0x3b64
0x0000381d      4c89f6         mov rsi, r14
0x00003820      31ff           xor edi, edi
0x00003822      48c1e606       shl rsi, 6
0x00003826      4801f2         add rdx, rsi
0x00003829      488b30         mov rsi, qword [rax]
0x0000382c      48037220       add rsi, qword [rdx + 0x20]
0x00003830      0f828d060000   jb 0x3ec3
0x00003836      4885ff         test rdi, rdi
0x00003839      48c7c7ffffff.  mov rdi, 0xffffffffffffffff
0x00003840      4c8b5230       mov r10, qword [rdx + 0x30]
0x00003844      480f45f7       cmovne rsi, rdi
0x00003848      488b7808       mov rdi, qword [rax + 8]
0x0000384c      48037a28       add rdi, qword [rdx + 0x28]
0x00003850      48897220       mov qword [rdx + 0x20], rsi
0x00003854      48897a28       mov qword [rdx + 0x28], rdi
0x00003858      4c3b5010       cmp r10, qword [rax + 0x10]
0x0000385c      0f8c73020000   jl 0x3ad5
0x00003862      7f0e           jg 0x3872
0x00003864      448b5818       mov r11d, dword [rax + 0x18]
0x00003868      44395a38       cmp dword [rdx + 0x38], r11d
0x0000386c      0f8863020000   js 0x3ad5
0x00003872      4531db         xor r11d, r11d
0x00003875      48037020       add rsi, qword [rax + 0x20]
0x00003879      410f92c3       setb r11b
0x0000387d      4d85db         test r11, r11
0x00003880      49c7c3ffffff.  mov r11, 0xffffffffffffffff
0x00003887      490f45f3       cmovne rsi, r11
0x0000388b      48037828       add rdi, qword [rax + 0x28]
0x0000388f      48897220       mov qword [rdx + 0x20], rsi
0x00003893      48897a28       mov qword [rdx + 0x28], rdi
0x00003897      4c3b5030       cmp r10, qword [rax + 0x30]
0x0000389b      7c12           jl 0x38af
0x0000389d      0f8f5dfaffff   jg 0x3300
0x000038a3      8b7038         mov esi, dword [rax + 0x38]
0x000038a6      397238         cmp dword [rdx + 0x38], esi
0x000038a9      0f8951faffff   jns 0x3300
0x000038af      f30f6f4030     movdqu xmm0, xmmword [rax + 0x30]
0x000038b4      0f114230       movups xmmword [rdx + 0x30], xmm0
0x000038b8      e943faffff     jmp 0x3300
0x000038bd      488b15ec4722.  mov rdx, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2280b0:8]=0
0x000038c4      488d354cef01.  lea rsi, [0x00022817]                   ; "r"
0x000038cb      4c89ef         mov rdi, r13
0x000038ce      e86d420000     call sym.freopen_safer
0x000038d3      4885c0         test rax, rax
0x000038d6      0f85b1f6ffff   jne 0x2f8d
0x000038dc      4c89ee         mov rsi, r13
0x000038df      bf04000000     mov edi, 4
0x000038e4      e8a7870000     call sym.quotearg_style
0x000038e9      488d354cc301.  lea rsi, str.cannot_open__s_for_reading ; 0x1fc3c ; "cannot open %s for reading"
0x000038f0      ba05000000     mov edx, 5
0x000038f5      31ff           xor edi, edi
0x000038f7      4889c5         mov rbp, rax
0x000038fa      e811ecffff     call sym.imp.dcgettext
0x000038ff      4889c3         mov rbx, rax
0x00003902      e809ebffff     call sym.imp.__errno_location
0x00003907      8b30           mov esi, dword [rax]
0x00003909      4889e9         mov rcx, rbp
0x0000390c      4889da         mov rdx, rbx
0x0000390f      bf01000000     mov edi, 1
0x00003914      31c0           xor eax, eax
0x00003916      e885efffff     call sym.imp.error
0x0000391b      e880a30000     call sym.rpl_fclose
0x00003920      85c0           test eax, eax
0x00003922      0f85b4fcffff   jne 0x35dc
0x00003928      e9bafcffff     jmp 0x35e7
0x0000392d      488d35acc301.  lea rsi, str.fts_close_failed           ; 0x1fce0 ; "fts_close failed"
0x00003934      ba05000000     mov edx, 5
0x00003939      31ff           xor edi, edi
0x0000393b      4531f6         xor r14d, r14d
0x0000393e      e8cdebffff     call sym.imp.dcgettext
0x00003943      8b33           mov esi, dword [rbx]
0x00003945      4889c2         mov rdx, rax
0x00003948      31ff           xor edi, edi
0x0000394a      31c0           xor eax, eax
0x0000394c      e84fefffff     call sym.imp.error
0x00003951      e9b0fdffff     jmp 0x3706
0x00003956      488b442410     mov rax, qword [rsp + 0x10]
0x0000395b      be03000000     mov esi, 3
0x00003960      31ff           xor edi, edi
0x00003962      4531f6         xor r14d, r14d
0x00003965      488b5020       mov rdx, qword [rax + 0x20]
0x00003969      e822880000     call sym.quotearg_n_style_colon
0x0000396e      488d350cc301.  lea rsi, str.fts_read_failed:__s        ; 0x1fc81 ; "fts_read failed: %s"
0x00003975      ba05000000     mov edx, 5
0x0000397a      31ff           xor edi, edi
0x0000397c      4889c5         mov rbp, rax
0x0000397f      e88cebffff     call sym.imp.dcgettext
0x00003984      8b33           mov esi, dword [rbx]
0x00003986      4889c2         mov rdx, rax
0x00003989      4889e9         mov rcx, rbp
0x0000398c      31ff           xor edi, edi
0x0000398e      31c0           xor eax, eax
0x00003990      e80befffff     call sym.imp.error
0x00003995      e94ffdffff     jmp 0x36e9
0x0000399a      4c89ee         mov rsi, r13
0x0000399d      bf04000000     mov edi, 4
0x000039a2      4531e4         xor r12d, r12d
0x000039a5      e8e6860000     call sym.quotearg_style
0x000039aa      488d3506c301.  lea rsi, str.cannot_access__s           ; 0x1fcb7 ; "cannot access %s"
0x000039b1      ba05000000     mov edx, 5
0x000039b6      31ff           xor edi, edi
0x000039b8      4889c3         mov rbx, rax
0x000039bb      e850ebffff     call sym.imp.dcgettext
0x000039c0      418b7640       mov esi, dword [r14 + 0x40]
0x000039c4      4889c2         mov rdx, rax
0x000039c7      4889d9         mov rcx, rbx
0x000039ca      31ff           xor edi, edi
0x000039cc      31c0           xor eax, eax
0x000039ce      e8cdeeffff     call sym.imp.error
0x000039d3      e928faffff     jmp 0x3400
0x000039d8      488d35c9d301.  lea rsi, str.warning:_summarizing_is_the_same_as_using___max_depth_0 ; 0x20da8 ; "warning: summarizing is the same as using --max-depth=0"
0x000039df      31ff           xor edi, edi
0x000039e1      ba05000000     mov edx, 5
0x000039e6      e825ebffff     call sym.imp.dcgettext
0x000039eb      31f6           xor esi, esi
0x000039ed      4889c2         mov rdx, rax
0x000039f0      31ff           xor edi, edi
0x000039f2      31c0           xor eax, eax
0x000039f4      e8a7eeffff     call sym.imp.error
0x000039f9      488b1d104622.  mov rbx, qword [obj.max_depth]          ; [0x228010:8]=-1
0x00003a00      4885db         test rbx, rbx
0x00003a03      0f853bfdffff   jne 0x3744
0x00003a09      48c705fc4522.  mov qword [obj.max_depth], 0            ; [0x228010:8]=-1
0x00003a14      e9f0f4ffff     jmp 0x2f09
0x00003a19      488d35f8d301.  lea rsi, str.warning:_options___apparent_size_and__b_are_ineffective_with___inodes ; 0x20e18 ; "warning: options --apparent-size and -b are ineffective with --inodes"
0x00003a20      31ff           xor edi, edi
0x00003a22      ba05000000     mov edx, 5
0x00003a27      e8e4eaffff     call sym.imp.dcgettext
0x00003a2c      31f6           xor esi, esi
0x00003a2e      4889c2         mov rdx, rax
0x00003a31      31ff           xor edi, edi
0x00003a33      31c0           xor eax, eax
0x00003a35      e866eeffff     call sym.imp.error
0x00003a3a      e9e0f4ffff     jmp 0x2f1f
0x00003a3f      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00003a44      ba04000000     mov edx, 4
0x00003a49      4c89f6         mov rsi, r14
0x00003a4c      4889df         mov rdi, rbx
0x00003a4f      e80cc60000     call sym.rpl_fts_set
0x00003a54      4889df         mov rdi, rbx
0x00003a57      e884be0000     call sym.rpl_fts_read
0x00003a5c      4939c6         cmp r14, rax
0x00003a5f      0f84bff6ffff   je 0x3124
0x00003a65      488d0d84d901.  lea rcx, obj.__PRETTY_FUNCTION__.7293   ; 0x213f0 ; "process_file"
0x00003a6c      488d35f3c101.  lea rsi, str..._coreutils_8.31_src_du.c ; 0x1fc66 ; "../coreutils-8.31/src/du.c"
0x00003a73      488d3d34c201.  lea rdi, str.e____ent                   ; 0x1fcae ; "e == ent"
0x00003a7a      ba2f020000     mov edx, 0x22f
0x00003a7f      e87cebffff     call sym.imp.__assert_fail
0x00003a84      498b8ec00000.  mov rcx, qword [r14 + 0xc0]
0x00003a8b      4d8b8ec80000.  mov r9, qword [r14 + 0xc8]
0x00003a92      e935f7ffff     jmp 0x31cc
0x00003a97      4139c4         cmp r12d, eax
0x00003a9a      488dbc248000.  lea rdi, [rsp + 0x80]
0x00003aa2      7e05           jle 0x3aa9
0x00003aa4      488d7cc500     lea rdi, [rbp + rax*8]
0x00003aa9      e8e20f0000     call sym.argv_iter_init_argv
0x00003aae      4989c7         mov r15, rax
0x00003ab1      8b0501462200   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2280b8:4]=0
0x00003ab7      83c001         add eax, 1
0x00003aba      4439e0         cmp eax, r12d
0x00003abd      0f9cc0         setl al
0x00003ac0      837c241802     cmp dword [rsp + 0x18], 2
0x00003ac5      0f94c2         sete dl
0x00003ac8      09d0           or eax, edx
0x00003aca      8805b3462200   mov byte [obj.hash_all], al             ; [0x228183:1]=0
0x00003ad0      e9cef4ffff     jmp 0x2fa3
0x00003ad5      f30f6f4010     movdqu xmm0, xmmword [rax + 0x10]
0x00003ada      66490f7ec2     movq r10, xmm0
0x00003adf      0f114230       movups xmmword [rdx + 0x30], xmm0
0x00003ae3      e98afdffff     jmp 0x3872
0x00003ae8      f30f6f4010     movdqu xmm0, xmmword [rax + 0x10]
0x00003aed      0f29442470     movaps xmmword [rsp + 0x70], xmm0
0x00003af2      e919fdffff     jmp 0x3810
0x00003af7      4c8d3d36c001.  lea r15, str.long_iso                   ; 0x1fb34 ; "long-iso"
0x00003afe      4c893d5b4622.  mov qword [obj.time_style], r15         ; [0x228160:8]=0
0x00003b05      4c8b0d144522.  mov r9, qword [obj.argmatch_die]        ; [0x228020:8]=0x4700 sym.__argmatch_die
0x00003b0c      488d156d3b22.  lea rdx, obj.time_style_args            ; 0x227680 ; "1\xfd\x01"
0x00003b13      488d0df6d801.  lea rcx, obj.time_style_types           ; 0x21410
0x00003b1a      488d3dcfc001.  lea rdi, [0x0001fbf0]                   ; "time style"
0x00003b21      41b804000000   mov r8d, 4
0x00003b27      4c89fe         mov rsi, r15
0x00003b2a      e8a10e0000     call sym.__xargmatch_internal
0x00003b2f      488d15dad801.  lea rdx, obj.time_style_types           ; 0x21410
0x00003b36      8b0482         mov eax, dword [rdx + rax*4]
0x00003b39      83f801         cmp eax, 1
0x00003b3c      0f84f6010000   je 0x3d38
0x00003b42      0f82dd010000   jb 0x3d25
0x00003b48      83f802         cmp eax, 2
0x00003b4b      0f850cf4ffff   jne 0x2f5d
0x00003b51      488d05cac001.  lea rax, str.Y__m__d                    ; 0x1fc22 ; "%Y-%m-%d"
0x00003b58      488905f94522.  mov qword [obj.time_format], rax        ; [0x228158:8]=0
0x00003b5f      e9f9f3ffff     jmp 0x2f5d
0x00003b64      4531d2         xor r10d, r10d
0x00003b67      48037020       add rsi, qword [rax + 0x20]
0x00003b6b      49c7c3ffffff.  mov r11, 0xffffffffffffffff
0x00003b72      410f92c2       setb r10b
0x00003b76      4d85d2         test r10, r10
0x00003b79      490f45f3       cmovne rsi, r11
0x00003b7d      48037828       add rdi, qword [rax + 0x28]
0x00003b81      4889742460     mov qword [rsp + 0x60], rsi
0x00003b86      48897c2468     mov qword [rsp + 0x68], rdi
0x00003b8b      488b7030       mov rsi, qword [rax + 0x30]
0x00003b8f      4839742470     cmp qword [rsp + 0x70], rsi
0x00003b94      7c13           jl 0x3ba9
0x00003b96      0f8f81fcffff   jg 0x381d
0x00003b9c      8b7038         mov esi, dword [rax + 0x38]
0x00003b9f      39742478       cmp dword [rsp + 0x78], esi
0x00003ba3      0f8974fcffff   jns 0x381d
0x00003ba9      f30f6f4030     movdqu xmm0, xmmword [rax + 0x30]
0x00003bae      0f29442470     movaps xmmword [rsp + 0x70], xmm0
0x00003bb3      e965fcffff     jmp 0x381d
0x00003bb8      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00003bbd      ba01000000     mov edx, 1
0x00003bc2      4c89f6         mov rsi, r14
0x00003bc5      4889df         mov rdi, rbx
0x00003bc8      e893c40000     call sym.rpl_fts_set
0x00003bcd      4889df         mov rdi, rbx
0x00003bd0      e80bbd0000     call sym.rpl_fts_read
0x00003bd5      4939c6         cmp r14, rax
0x00003bd8      0f85ef020000   jne 0x3ecd
0x00003bde      410fb76e70     movzx ebp, word [r14 + 0x70]
0x00003be3      e9fef4ffff     jmp 0x30e6
0x00003be8      488d3df6bf01.  lea rdi, str.TIME_STYLE                 ; 0x1fbe5 ; "TIME_STYLE"
0x00003bef      e8ece7ffff     call sym.imp.getenv
0x00003bf4      4885c0         test rax, rax
0x00003bf7      4989c7         mov r15, rax
0x00003bfa      4889055f4522.  mov qword [obj.time_style], rax         ; [0x228160:8]=0
0x00003c01      0f84f0feffff   je 0x3af7
0x00003c07      488d3540bf01.  lea rsi, [0x0001fb4e]                   ; "locale"
0x00003c0e      4889c7         mov rdi, rax
0x00003c11      e8baeaffff     call sym.imp.strcmp
0x00003c16      85c0           test eax, eax
0x00003c18      0f84d9feffff   je 0x3af7
0x00003c1e      41803f2b       cmp byte [r15], 0x2b
0x00003c22      488d1dd9d701.  lea rbx, obj.posix_prefix.7365          ; 0x21402 ; "posix-"
0x00003c29      7510           jne 0x3c3b
0x00003c2b      e91b010000     jmp 0x3d4b
0x00003c30      4983c706       add r15, 6
0x00003c34      4c893d254522.  mov qword [obj.time_style], r15         ; [0x228160:8]=0
0x00003c3b      4c8b3d1e4522.  mov r15, qword [obj.time_style]         ; [0x228160:8]=0
0x00003c42      ba06000000     mov edx, 6
0x00003c47      4889de         mov rsi, rbx
0x00003c4a      4c89ff         mov rdi, r15
0x00003c4d      e8cee7ffff     call sym.imp.strncmp
0x00003c52      85c0           test eax, eax
0x00003c54      74da           je 0x3c30
0x00003c56      e9edf2ffff     jmp 0x2f48
0x00003c5b      31ff           xor edi, edi
0x00003c5d      e8de050000     call sym.usage
0x00003c62      4c89ea         mov rdx, r13
0x00003c65      31ff           xor edi, edi
0x00003c67      be03000000     mov esi, 3
0x00003c6c      e81f850000     call sym.quotearg_n_style_colon
0x00003c71      418b7640       mov esi, dword [r14 + 0x40]
0x00003c75      488d1514d801.  lea rdx, [0x00021490]                   ; "%s"
0x00003c7c      4889c1         mov rcx, rax
0x00003c7f      31ff           xor edi, edi
0x00003c81      31c0           xor eax, eax
0x00003c83      e818ecffff     call sym.imp.error
0x00003c88      e923f5ffff     jmp 0x31b0
0x00003c8d      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003c92      4c89f6         mov rsi, r14
0x00003c95      e826900000     call sym.cycle_warning_required
0x00003c9a      84c0           test al, al
0x00003c9c      0f8482f4ffff   je 0x3124
0x00003ca2      48833de64422.  cmp qword [obj.di_mnt], 0               ; [0x228190:8]=0
0x00003caa      498b2e         mov rbp, qword [r14]
0x00003cad      7528           jne 0x3cd7
0x00003caf      e9b5000000     jmp 0x3d69
0x00003cb4      498b96800000.  mov rdx, qword [r14 + 0x80]
0x00003cbb      498b7678       mov rsi, qword [r14 + 0x78]
0x00003cbf      488b3dca4422.  mov rdi, qword [obj.di_mnt]             ; [0x228190:8]=0
0x00003cc6      e855120000     call sym.di_set_lookup
0x00003ccb      85c0           test eax, eax
0x00003ccd      0f8f51f4ffff   jg 0x3124
0x00003cd3      4d8b7608       mov r14, qword [r14 + 8]
0x00003cd7      4d85f6         test r14, r14
0x00003cda      0f95c0         setne al
0x00003cdd      4c39f5         cmp rbp, r14
0x00003ce0      0f95c2         setne dl
0x00003ce3      20d0           and al, dl
0x00003ce5      75cd           jne 0x3cb4
0x00003ce7      4c89ea         mov rdx, r13
0x00003cea      31ff           xor edi, edi
0x00003cec      be03000000     mov esi, 3
0x00003cf1      4189c4         mov r12d, eax
0x00003cf4      e897840000     call sym.quotearg_n_style_colon
0x00003cf9      488d3500d201.  lea rsi, str.WARNING:_Circular_directory_structure.__This_almost_certainly_means_that_you_have_a_corrupted_file_system.__NOTIFY_YOUR_SYSTEM_MANAGER.__The_following_directory_is_part_of_the_cycle:_____s ; 0x20f00 ; "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n"
0x00003d00      4889c3         mov rbx, rax
0x00003d03      31ff           xor edi, edi
0x00003d05      ba05000000     mov edx, 5
0x00003d0a      e801e8ffff     call sym.imp.dcgettext
0x00003d0f      4889d9         mov rcx, rbx
0x00003d12      4889c2         mov rdx, rax
0x00003d15      31f6           xor esi, esi
0x00003d17      31ff           xor edi, edi
0x00003d19      31c0           xor eax, eax
0x00003d1b      e880ebffff     call sym.imp.error
0x00003d20      e9dbf6ffff     jmp 0x3400
0x00003d25      488d05cfbe01.  lea rax, str.Y__m__d__H:_M:_S._N__z     ; 0x1fbfb ; "%Y-%m-%d %H:%M:%S.%N %z"
0x00003d2c      488905254422.  mov qword [obj.time_format], rax        ; [0x228158:8]=0
0x00003d33      e925f2ffff     jmp 0x2f5d
0x00003d38      488d05d4be01.  lea rax, str.Y__m__d__H:_M              ; 0x1fc13 ; "%Y-%m-%d %H:%M"
0x00003d3f      488905124422.  mov qword [obj.time_format], rax        ; [0x228158:8]=0
0x00003d46      e912f2ffff     jmp 0x2f5d
0x00003d4b      be0a000000     mov esi, 0xa
0x00003d50      4c89ff         mov rdi, r15
0x00003d53      e848e8ffff     call sym.imp.strchr
0x00003d58      4885c0         test rax, rax
0x00003d5b      0f84f1f1ffff   je 0x2f52
0x00003d61      c60000         mov byte [rax], 0
0x00003d64      e9dff1ffff     jmp 0x2f48
0x00003d69      e8b2100000     call sym.di_set_alloc
0x00003d6e      4885c0         test rax, rax
0x00003d71      488905184422.  mov qword [obj.di_mnt], rax             ; [0x228190:8]=0
0x00003d78      7465           je 0x3ddf
0x00003d7a      31ff           xor edi, edi
0x00003d7c      e8bfc50000     call sym.read_file_system_list
0x00003d81      4989c4         mov r12, rax
0x00003d84      eb10           jmp 0x3d96
0x00003d86      498b5c2430     mov rbx, qword [r12 + 0x30]
0x00003d8b      4c89e7         mov rdi, r12
0x00003d8e      e86dc50000     call sym.free_mount_entry
0x00003d93      4989dc         mov r12, rbx
0x00003d96      4d85e4         test r12, r12
0x00003d99      0f8438ffffff   je 0x3cd7
0x00003d9f      41f644242803   test byte [r12 + 0x28], 3
0x00003da5      75df           jne 0x3d86
0x00003da7      498b742408     mov rsi, qword [r12 + 8]
0x00003dac      488b542448     mov rdx, qword [rsp + 0x48]
0x00003db1      bf01000000     mov edi, 1
0x00003db6      e885e9ffff     call sym.imp.__xstat
0x00003dbb      85c0           test eax, eax
0x00003dbd      75c7           jne 0x3d86
0x00003dbf      488b94249800.  mov rdx, qword [rsp + 0x98]
0x00003dc7      488bb4249000.  mov rsi, qword [rsp + 0x90]
0x00003dcf      488b3dba4322.  mov rdi, qword [obj.di_mnt]             ; [0x228190:8]=0
0x00003dd6      e8e5100000     call sym.di_set_insert
0x00003ddb      85c0           test eax, eax
0x00003ddd      79a7           jns 0x3d86
0x00003ddf      e84c8e0000     call sym.xalloc_die
0x00003de4      e877e7ffff     call sym.imp.__stack_chk_fail
0x00003de9      488b7cc500     mov rdi, qword [rbp + rax*8]
0x00003dee      e86d850000     call sym.quote
0x00003df3      488d3531be01.  lea rsi, str.extra_operand__s           ; 0x1fc2b ; "extra operand %s"
0x00003dfa      4889c3         mov rbx, rax
0x00003dfd      ba05000000     mov edx, 5
0x00003e02      31ff           xor edi, edi
0x00003e04      e807e7ffff     call sym.imp.dcgettext
0x00003e09      4889d9         mov rcx, rbx
0x00003e0c      4889c2         mov rdx, rax
0x00003e0f      31f6           xor esi, esi
0x00003e11      31ff           xor edi, edi
0x00003e13      31c0           xor eax, eax
0x00003e15      e886eaffff     call sym.imp.error
0x00003e1a      488d353fd001.  lea rsi, str.file_operands_cannot_be_combined_with___files0_from ; 0x20e60 ; "file operands cannot be combined with --files0-from"
0x00003e21      ba05000000     mov edx, 5
0x00003e26      31ff           xor edi, edi
0x00003e28      e8e3e6ffff     call sym.imp.dcgettext
0x00003e2d      488b3dac4222.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2280e0:8]=0
0x00003e34      488d1555e101.  lea rdx, [0x00021f90]                   ; "%s\n"
0x00003e3b      4889c1         mov rcx, rax
0x00003e3e      be01000000     mov esi, 1
0x00003e43      31c0           xor eax, eax
0x00003e45      e826ebffff     call sym.imp.__fprintf_chk
0x00003e4a      bf01000000     mov edi, 1
0x00003e4f      e8ec030000     call sym.usage
0x00003e54      4c8b05654222.  mov r8, qword [obj.optarg]              ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2280c0:8]=0
0x00003e5b      8b74245c       mov esi, dword [rsp + 0x5c]
0x00003e5f      488d0d7a3822.  lea rcx, obj.long_options               ; 0x2276e0 ; "X\xfd\x01"
0x00003e66      ba74000000     mov edx, 0x74                           ; 't'
0x00003e6b      89c7           mov edi, eax
0x00003e6d      e85e990000     call sym.xstrtol_fatal
0x00003e72      807c241c00     cmp byte [rsp + 0x1c], 0
0x00003e77      0f858cfbffff   jne 0x3a09
0x00003e7d      e987f0ffff     jmp 0x2f09
0x00003e82      4c89ee         mov rsi, r13
0x00003e85      bf04000000     mov edi, 4
0x00003e8a      e801820000     call sym.quotearg_style
0x00003e8f      488d355bbe01.  lea rsi, str.error_reading__s           ; 0x1fcf1 ; "error reading %s"
0x00003e96      4889c3         mov rbx, rax
0x00003e99      ba05000000     mov edx, 5
0x00003e9e      31ff           xor edi, edi
0x00003ea0      e86be6ffff     call sym.imp.dcgettext
0x00003ea5      4889d9         mov rcx, rbx
0x00003ea8      4889c2         mov rdx, rax
0x00003eab      31f6           xor esi, esi
0x00003ead      bf01000000     mov edi, 1
0x00003eb2      31c0           xor eax, eax
0x00003eb4      e8e7e9ffff     call sym.imp.error
0x00003eb9      be01000000     mov esi, 1
0x00003ebe      e98cf3ffff     jmp 0x324f
0x00003ec3      bf01000000     mov edi, 1
0x00003ec8      e969f9ffff     jmp 0x3836
0x00003ecd      488d0d1cd501.  lea rcx, obj.__PRETTY_FUNCTION__.7293   ; 0x213f0 ; "process_file"
0x00003ed4      488d358bbd01.  lea rsi, str..._coreutils_8.31_src_du.c ; 0x1fc66 ; "../coreutils-8.31/src/du.c"
0x00003edb      488d3dccbd01.  lea rdi, str.e____ent                   ; 0x1fcae ; "e == ent"
0x00003ee2      ba0e020000     mov edx, 0x20e
0x00003ee7      e814e7ffff     call sym.imp.__assert_fail
0x00003eec      488d0dfdd401.  lea rcx, obj.__PRETTY_FUNCTION__.7293   ; 0x213f0 ; "process_file"
0x00003ef3      488d356cbd01.  lea rsi, str..._coreutils_8.31_src_du.c ; 0x1fc66 ; "../coreutils-8.31/src/du.c"
0x00003efa      488d3dc7bd01.  lea rdi, str.level____prev_level___1    ; 0x1fcc8 ; "level == prev_level - 1"
0x00003f01      ba7d020000     mov edx, 0x27d
0x00003f06      e8f5e6ffff     call sym.imp.__assert_fail
0x00003f0b      488d3566ce01.  lea rsi, str.cannot_both_summarize_and_show_all_entries ; 0x20d78 ; "cannot both summarize and show all entries"
0x00003f12      ba05000000     mov edx, 5
0x00003f17      31ff           xor edi, edi
0x00003f19      e8f2e5ffff     call sym.imp.dcgettext
0x00003f1e      31f6           xor esi, esi
0x00003f20      4889c2         mov rdx, rax
0x00003f23      31ff           xor edi, edi
0x00003f25      31c0           xor eax, eax
0x00003f27      e874e9ffff     call sym.imp.error
0x00003f2c      bf01000000     mov edi, 1
0x00003f31      e80a030000     call sym.usage
0x00003f36      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00003f40      31ed           xor ebp, ebp
0x00003f42      4989d1         mov r9, rdx
0x00003f45      5e             pop rsi
0x00003f46      4889e2         mov rdx, rsp
0x00003f49      4883e4f0       and rsp, 0xfffffffffffffff0
0x00003f4d      50             push rax
0x00003f4e      54             push rsp
0x00003f4f      4c8d05daba01.  lea r8, sym.__libc_csu_fini             ; 0x1fa30
0x00003f56      488d0d63ba01.  lea rcx, sym.__libc_csu_init            ; 0x1f9c0 ; "AWAVI\x89\xd7AUATL\x8d%\x9e| "
0x00003f5d      488d3deceaff.  lea rdi, main                           ; sym.main
                                                                       ; 0x2a50 ; "AWAVE1\xffAUATA\x89\xfcUSH\x89\xf5H\x8d\x1dV\xe5\x01"
0x00003f64      ff1576402200   call qword [reloc.__libc_start_main]    ; [0x227fe0:8]=0
0x00003f6a      f4             hlt
0x00003f6b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00003f70      488d3d294122.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2280a0
0x00003f77      55             push rbp
0x00003f78      488d05214122.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2280a0
0x00003f7f      4839f8         cmp rax, rdi
0x00003f82      4889e5         mov rbp, rsp
0x00003f85      7419           je 0x3fa0
0x00003f87      488b05424022.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x227fd0:8]=0
0x00003f8e      4885c0         test rax, rax
0x00003f91      740d           je 0x3fa0
0x00003f93      5d             pop rbp
0x00003f94      ffe0           jmp rax
0x00003f96      662e0f1f8400.  nop word cs:[rax + rax]
0x00003fa0      5d             pop rbp
0x00003fa1      c3             ret
0x00003fa2      0f1f4000       nop dword [rax]
0x00003fa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00003fb0      488d3de94022.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2280a0
0x00003fb7      488d35e24022.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2280a0
0x00003fbe      55             push rbp
0x00003fbf      4829fe         sub rsi, rdi
0x00003fc2      4889e5         mov rbp, rsp
0x00003fc5      48c1fe03       sar rsi, 3
0x00003fc9      4889f0         mov rax, rsi
0x00003fcc      48c1e83f       shr rax, 0x3f
0x00003fd0      4801c6         add rsi, rax
0x00003fd3      48d1fe         sar rsi, 1
0x00003fd6      7418           je 0x3ff0
0x00003fd8      488b05114022.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x227ff0:8]=0
0x00003fdf      4885c0         test rax, rax
0x00003fe2      740c           je 0x3ff0
0x00003fe4      5d             pop rbp
0x00003fe5      ffe0           jmp rax
0x00003fe7      660f1f840000.  nop word [rax + rax]
0x00003ff0      5d             pop rbp
0x00003ff1      c3             ret
0x00003ff2      0f1f4000       nop dword [rax]
0x00003ff6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00004000      803de1402200.  cmp byte [obj.completed.7697], 0        ; [0x2280e8:1]=0
0x00004007      752f           jne 0x4038
0x00004009      48833de73f22.  cmp qword [reloc.__cxa_finalize], 0     ; [0x227ff8:8]=0
0x00004011      55             push rbp
0x00004012      4889e5         mov rbp, rsp
0x00004015      740c           je 0x4023
0x00004017      488b3dea3f22.  mov rdi, qword [obj.__dso_handle]       ; [0x228008:8]=0x228008 obj.__dso_handle
0x0000401e      e8f5e9ffff     call 0x2a18
0x00004023      e848ffffff     call sym.deregister_tm_clones
0x00004028      c605b9402200.  mov byte [obj.completed.7697], 1        ; [0x2280e8:1]=0
0x0000402f      5d             pop rbp
0x00004030      c3             ret
0x00004031      0f1f80000000.  nop dword [rax]
0x00004038      f3c3           ret
0x0000403a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00004040      55             push rbp
0x00004041      4889e5         mov rbp, rsp
0x00004044      5d             pop rbp
0x00004045      e966ffffff     jmp sym.register_tm_clones
0x0000404a      660f1f440000   nop word [rax + rax]
;-- print_only_size:
0x00004050      53             push rbx                                ; .//src:397
0x00004051      4881eca00200.  sub rsp, 0x2a0
0x00004058      488b1d494022.  mov rbx, qword [obj.stdout]             ; .//src:399 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x0000405f      64488b042528.  mov rax, qword fs:[0x28]                ; .//src:397
0x00004068      488984249802.  mov qword [rsp + sym..gnu.hash], rax
0x00004070      31c0           xor eax, eax
0x00004072      4883ffff       cmp rdi, 0xffffffffffffffff             ; .//src:399
0x00004076      7448           je 0x40c0
0x00004078      4c8b05c94022.  mov r8, qword [obj.output_block_size]   ; [0x228148:8]=0
0x0000407f      8b15eb402200   mov edx, dword [obj.human_output_opts]  ; [0x228170:4]=0
0x00004085      4889e6         mov rsi, rsp
0x00004088      b901000000     mov ecx, 1
0x0000408d      e80e500000     call sym.human_readable
0x00004092      4889de         mov rsi, rbx
0x00004095      4889c7         mov rdi, rax
0x00004098      e803e6ffff     call sym.imp.fputs_unlocked
0x0000409d      488b84249802.  mov rax, qword [rsp + sym..gnu.hash]    ; .//src:404
0x000040a5      644833042528.  xor rax, qword fs:[0x28]
0x000040ae      7525           jne 0x40d5
0x000040b0      4881c4a00200.  add rsp, 0x2a0
0x000040b7      5b             pop rbx
0x000040b8      c3             ret
0x000040b9      0f1f80000000.  nop dword [rax]
0x000040c0      488d359db901.  lea rsi, str.Infinity                   ; .//src:399 ; 0x1fa64 ; "Infinity"
0x000040c7      ba05000000     mov edx, 5
0x000040cc      31ff           xor edi, edi
0x000040ce      e83de4ffff     call sym.imp.dcgettext
0x000040d3      ebbd           jmp 0x4092
0x000040d5      e886e4ffff     call sym.imp.__stack_chk_fail           ; .//src:404
0x000040da      660f1f440000   nop word [rax + rax]
;-- print_size:
0x000040e0      4155           push r13                                ; .//src:410
0x000040e2      4154           push r12
0x000040e4      55             push rbp
0x000040e5      53             push rbx
0x000040e6      4889fb         mov rbx, rdi
0x000040e9      4889f5         mov rbp, rsi
0x000040ec      4883ec78       sub rsp, 0x78
0x000040f0      488b7f08       mov rdi, qword [rdi + 8]                ; .//src:411
0x000040f4      64488b042528.  mov rax, qword fs:[0x28]                ; .//src:410
0x000040fd      4889442468     mov qword [rsp + 0x68], rax
0x00004102      31c0           xor eax, eax
0x00004104      803d62402200.  cmp byte [obj.opt_inodes], 0            ; .//src:411 ; [0x22816d:1]=0
0x0000410b      480f443b       cmove rdi, qword [rbx]
0x0000410f      e83cffffff     call sym.print_only_size
0x00004114      803d51402200.  cmp byte [obj.opt_time], 0              ; .//src:415 ; [0x22816c:1]=0
0x0000411b      7469           je 0x4186
0x0000411d      488b3d843f22.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/src/.c:107 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x00004124      488b4728       mov rax, qword [rdi + 0x28]
0x00004128      483b4730       cmp rax, qword [rdi + 0x30]
0x0000412c      0f839e000000   jae 0x41d0
0x00004132      488d5001       lea rdx, [rax + 1]
0x00004136      48895728       mov qword [rdi + 0x28], rdx
0x0000413a      c60009         mov byte [rax], 9
0x0000413d      4c8b250c4022.  mov r12, qword [obj.localtz]            ; .//src:418 ; [0x228150:8]=0
0x00004144      4889e6         mov rsi, rsp                            ; .//src:382
0x00004147      4c8b2d0a4022.  mov r13, qword [obj.time_format]        ; .//src:418 ; [0x228158:8]=0
0x0000414e      660f6f4310     movdqa xmm0, xmmword [rbx + 0x10]
0x00004153      488d5c2410     lea rbx, [rsp + 0x10]                   ; .//src:382
0x00004158      4c89e7         mov rdi, r12
0x0000415b      4889da         mov rdx, rbx
0x0000415e      0f290424       movaps xmmword [rsp], xmm0
0x00004162      e8b9af0100     call sym.localtime_rz
0x00004167      4885c0         test rax, rax
0x0000416a      7474           je 0x41e0
0x0000416c      448b442408     mov r8d, dword [rsp + 8]                ; .//src:383
0x00004171      488b3d303f22.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x00004178      4c89e1         mov rcx, r12
0x0000417b      4889da         mov rdx, rbx
0x0000417e      4c89ee         mov rsi, r13
0x00004181      e81a390000     call sym.fprintftime
0x00004186      803df53f2200.  cmp byte [obj.opt_nul_terminate_output], 1 ; .//src:420 ; [0x228182:1]=0
0x0000418d      488d35f1b801.  lea rsi, str.s_c                        ; stdio.h:104 __STDIO_INLINE int ; 0x1fa85 ; "\t%s%c"
0x00004194      4889ea         mov rdx, rbp
0x00004197      bf01000000     mov edi, 1
0x0000419c      19c9           sbb ecx, ecx                            ; .//src:420
0x0000419e      31c0           xor eax, eax                            ; stdio.h:104 __STDIO_INLINE int
0x000041a0      83e10a         and ecx, 0xa                            ; .//src:420
0x000041a3      e8a8e6ffff     call sym.imp.__printf_chk               ; stdio.h:104 __STDIO_INLINE int
0x000041a8      488b3df93e22.  mov rdi, qword [obj.stdout]             ; .//src:421 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x000041af      e8cce7ffff     call sym.imp.fflush_unlocked
0x000041b4      488b442468     mov rax, qword [rsp + 0x68]             ; .//src:422
0x000041b9      644833042528.  xor rax, qword fs:[0x28]
0x000041c2      7570           jne 0x4234
0x000041c4      4883c478       add rsp, 0x78
0x000041c8      5b             pop rbx
0x000041c9      5d             pop rbp
0x000041ca      415c           pop r12
0x000041cc      415d           pop r13
0x000041ce      c3             ret
0x000041cf      90             nop
0x000041d0      be09000000     mov esi, 9                              ; ../coreutils-8.31/src/.c:107
0x000041d5      e8e6e3ffff     call sym.imp.__overflow
0x000041da      e95effffff     jmp 0x413d
0x000041df      90             nop
0x000041e0      488b3c24       mov rdi, qword [rsp]                    ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:691
0x000041e4      488d742450     lea rsi, [rsp + 0x50]
0x000041e9      e8025c0000     call sym.imaxtostr
0x000041ee      4889c7         mov rdi, rax                            ; .//src:388
0x000041f1      4889c3         mov rbx, rax                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:691
0x000041f4      e867810000     call sym.quote                          ; .//src:388
0x000041f9      488d356db801.  lea rsi, str.time__s_is_out_of_range    ; 0x1fa6d ; "time %s is out of range"
0x00004200      4989c4         mov r12, rax
0x00004203      31ff           xor edi, edi
0x00004205      ba05000000     mov edx, 5
0x0000420a      e801e3ffff     call sym.imp.dcgettext
0x0000420f      31f6           xor esi, esi
0x00004211      4889c2         mov rdx, rax
0x00004214      31ff           xor edi, edi
0x00004216      4c89e1         mov rcx, r12
0x00004219      31c0           xor eax, eax
0x0000421b      e880e6ffff     call sym.imp.error
0x00004220      488b35813e22.  mov rsi, qword [obj.stdout]             ; .//src:389 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x00004227      4889df         mov rdi, rbx
0x0000422a      e871e4ffff     call sym.imp.fputs_unlocked
0x0000422f      e952ffffff     jmp 0x4186
0x00004234      e827e3ffff     call sym.imp.__stack_chk_fail           ; .//src:422
0x00004239      0f1f80000000.  nop dword [rax]
;-- usage:
0x00004240      4155           push r13                                ; .//src:279
0x00004242      4154           push r12
0x00004244      ba05000000     mov edx, 5                              ; .//src:281
0x00004249      55             push rbp                                ; .//src:279
0x0000424a      53             push rbx
0x0000424b      89fd           mov ebp, edi
0x0000424d      4881ec880000.  sub rsp, 0x88
0x00004254      488b1d553f22.  mov rbx, qword [obj.program_name]       ; [0x2281b0:8]=0
0x0000425b      64488b042528.  mov rax, qword fs:[0x28]
0x00004264      4889442478     mov qword [rsp + 0x78], rax
0x00004269      31c0           xor eax, eax
0x0000426b      85ff           test edi, edi                           ; .//src:280
0x0000426d      742e           je 0x429d
0x0000426f      488d35c2bb01.  lea rsi, str.Try___s___help__for_more_information. ; .//src:281 ; 0x1fe38 ; "Try '%s --help' for more information.\n"
0x00004276      31ff           xor edi, edi
0x00004278      e893e2ffff     call sym.imp.dcgettext
0x0000427d      488b3d5c3e22.  mov rdi, qword [obj.stderr]             ; stdio.h:97 __STDIO_INLINE int ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2280e0:8]=0
0x00004284      4889c2         mov rdx, rax
0x00004287      4889d9         mov rcx, rbx
0x0000428a      be01000000     mov esi, 1
0x0000428f      31c0           xor eax, eax
0x00004291      e8dae6ffff     call sym.imp.__fprintf_chk
0x00004296      89ef           mov edi, ebp                            ; .//src:359
0x00004298      e8b3e6ffff     call sym.imp.exit
0x0000429d      488d35bcbb01.  lea rsi, str.Usage:__s__OPTION_...__FILE_...____or:___s__OPTION_...___files0_from_F ; .//src:284 ; 0x1fe60 ; "Usage: %s [OPTION]... [FILE]...\n  or:  %s [OPTION]... --files0-from=F\n"
0x000042a4      31ff           xor edi, edi
0x000042a6      e865e2ffff     call sym.imp.dcgettext
0x000042ab      4889d9         mov rcx, rbx                            ; stdio.h:104 __STDIO_INLINE int
0x000042ae      4889da         mov rdx, rbx
0x000042b1      4889c6         mov rsi, rax
0x000042b4      bf01000000     mov edi, 1
0x000042b9      31c0           xor eax, eax
0x000042bb      e890e5ffff     call sym.imp.__printf_chk
0x000042c0      488b1de13d22.  mov rbx, qword [obj.stdout]             ; .//src:288 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x000042c7      488d35dabb01.  lea rsi, str.Summarize_disk_usage_of_the_set_of_FILEs__recursively_for_directories. ; 0x1fea8 ; "Summarize disk usage of the set of FILEs, recursively for directories.\n"
0x000042ce      ba05000000     mov edx, 5
0x000042d3      31ff           xor edi, edi
0x000042d5      e836e2ffff     call sym.imp.dcgettext
0x000042da      4889de         mov rsi, rbx
0x000042dd      4889c7         mov rdi, rax
0x000042e0      e8bbe3ffff     call sym.imp.fputs_unlocked
0x000042e5      488b1dbc3d22.  mov rbx, qword [obj.stdout]             ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:587 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x000042ec      488d35fdbb01.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x1fef0 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x000042f3      ba05000000     mov edx, 5
0x000042f8      31ff           xor edi, edi
0x000042fa      e811e2ffff     call sym.imp.dcgettext
0x000042ff      4889de         mov rsi, rbx
0x00004302      4889c7         mov rdi, rax
0x00004305      e896e3ffff     call sym.imp.fputs_unlocked
0x0000430a      488b1d973d22.  mov rbx, qword [obj.stdout]             ; .//src:294 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x00004311      488d3528bc01.  lea rsi, str.0____null____________end_each_output_line_with_NUL__not_newline_____a____all_____________write_counts_for_all_files__not_just_directories__________apparent_size___print_apparent_sizes__rather_than_disk_usage__although____________________________the_apparent_size_is_usually_smaller__it_may_be____________________________larger_due_to_holes_in___sparse___files__internal____________________________fragmentation__indirect_blocks__and_the_like ; 0x1ff40 ; "  -0, --null            end each output line with NUL, not newline\n  -a, --all             write counts for all files, not just directories\n      --apparent-size   print apparent sizes, rather than disk usage; although\n                          the apparent size is usually smaller, it may be\n                          larger due to holes in ('sparse') files, internal\n                          fragmentation, indirect blocks, and the like\n"
0x00004318      ba05000000     mov edx, 5
0x0000431d      31ff           xor edi, edi
0x0000431f      e8ece1ffff     call sym.imp.dcgettext
0x00004324      4889de         mov rsi, rbx
0x00004327      4889c7         mov rdi, rax
0x0000432a      e871e3ffff     call sym.imp.fputs_unlocked
0x0000432f      488b1d723d22.  mov rbx, qword [obj.stdout]             ; .//src:303 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x00004336      488d35c3bd01.  lea rsi, str.B____block_size_SIZE__scale_sizes_by_SIZE_before_printing_them__e.g.________________________________BM__prints_sizes_in_units_of_1_048_576_bytes______________________________see_SIZE_format_below_____b____bytes___________equivalent_to____apparent_size___block_size_1______c____total___________produce_a_grand_total_____D____dereference_args__dereference_only_symlinks_that_are_listed_on_the____________________________command_line_____d____max_depth_N_____print_the_total_for_a_directory__or_file__with___all_____________________________only_if_it_is_N_or_fewer_levels_below_the_command____________________________line_argument_____max_depth_0_is_the_same_as______________________________summarize ; 0x20100 ; "  -B, --block-size=SIZE  scale sizes by SIZE before printing them; e.g.,\n                           '-BM' prints sizes in units of 1,048,576 bytes;\n                           see SIZE format below\n  -b, --bytes           equivalent to '--apparent-size --block-size=1'\n  -c, --total           produce a grand total\n  -D, --dereference-args  dereference only symlinks that are listed on the\n                          command line\n  -d, --max-depth=N     print the total for a directory (or file, with --all)\n                          only if it is N or fewer levels below the command\n                          line argument;  --max-depth=0 is the same as\n                          --summarize\n"
0x0000433d      ba05000000     mov edx, 5
0x00004342      31ff           xor edi, edi
0x00004344      e8c7e1ffff     call sym.imp.dcgettext
0x00004349      4889de         mov rsi, rbx
0x0000434c      4889c7         mov rdi, rax
0x0000434f      e84ce3ffff     call sym.imp.fputs_unlocked
0x00004354      488b1d4d3d22.  mov rbx, qword [obj.stdout]             ; .//src:316 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x0000435b      488d3556c001.  lea rsi, str.files0_from_F___summarize_disk_usage_of_the____________________________NUL_terminated_file_names_specified_in_file_F_____________________________if_F_is____then_read_names_from_standard_input_____H____________________equivalent_to___dereference_args___D______h____human_readable__print_sizes_in_human_readable_format__e.g.__1K_234M_2G___________inodes__________list_inode_usage_information_instead_of_block_usage ; 0x203b8 ; "      --files0-from=F   summarize disk usage of the\n                          NUL-terminated file names specified in file F;\n                          if F is -, then read names from standard input\n  -H                    equivalent to --dereference-args (-D)\n  -h, --human-readable  print sizes in human readable format (e.g., 1K 234M 2G)\n      --inodes          list inode usage information instead of block usage\n"
0x00004362      ba05000000     mov edx, 5
0x00004367      31ff           xor edi, edi
0x00004369      e8a2e1ffff     call sym.imp.dcgettext
0x0000436e      4889de         mov rsi, rbx
0x00004371      4889c7         mov rdi, rax
0x00004374      e827e3ffff     call sym.imp.fputs_unlocked
0x00004379      488b1d283d22.  mov rbx, qword [obj.stdout]             ; .//src:325 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x00004380      488d35d9c101.  lea rsi, str.k____________________like___block_size_1K_____L____dereference_____dereference_all_symbolic_links_____l____count_links_____count_sizes_many_times_if_hard_linked_____m____________________like___block_size_1M ; 0x20560 ; "  -k                    like --block-size=1K\n  -L, --dereference     dereference all symbolic links\n  -l, --count-links     count sizes many times if hard linked\n  -m                    like --block-size=1M\n"
0x00004387      ba05000000     mov edx, 5
0x0000438c      31ff           xor edi, edi
0x0000438e      e87de1ffff     call sym.imp.dcgettext
0x00004393      4889de         mov rsi, rbx
0x00004396      4889c7         mov rdi, rax
0x00004399      e802e3ffff     call sym.imp.fputs_unlocked
0x0000439e      488b1d033d22.  mov rbx, qword [obj.stdout]             ; .//src:331 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x000043a5      488d3584c201.  lea rsi, str.P____no_dereference__don_t_follow_any_symbolic_links__this_is_the_default______S____separate_dirs___for_directories_do_not_include_size_of_subdirectories__________si______________like__h__but_use_powers_of_1000_not_1024_____s____summarize_______display_only_a_total_for_each_argument ; 0x20630 ; "  -P, --no-dereference  don't follow any symbolic links (this is the default)\n  -S, --separate-dirs   for directories do not include size of subdirectories\n      --si              like -h, but use powers of 1000 not 1024\n  -s, --summarize       display only a total for each argument\n"
0x000043ac      ba05000000     mov edx, 5
0x000043b1      31ff           xor edi, edi
0x000043b3      e858e1ffff     call sym.imp.dcgettext
0x000043b8      4889de         mov rsi, rbx
0x000043bb      4889c7         mov rdi, rax
0x000043be      e8dde2ffff     call sym.imp.fputs_unlocked
0x000043c3      488b1dde3c22.  mov rbx, qword [obj.stdout]             ; .//src:337 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x000043ca      488d357fc301.  lea rsi, str.t____threshold_SIZE__exclude_entries_smaller_than_SIZE_if_positive_____________________________or_entries_greater_than_SIZE_if_negative__________time____________show_time_of_the_last_modification_of_any_file_in_the____________________________directory__or_any_of_its_subdirectories__________time_WORD_______show_time_as_WORD_instead_of_modification_time:____________________________atime__access__use__ctime_or_status__________time_style_STYLE__show_times_using_STYLE__which_can_be:______________________________full_iso__long_iso__iso__or__FORMAT_______________________________FORMAT_is_interpreted_like_in__date ; 0x20750 ; "  -t, --threshold=SIZE  exclude entries smaller than SIZE if positive,\n                          or entries greater than SIZE if negative\n      --time            show time of the last modification of any file in the\n                          directory, or any of its subdirectories\n      --time=WORD       show time as WORD instead of modification time:\n                          atime, access, use, ctime or status\n      --time-style=STYLE  show times using STYLE, which can be:\n                            full-iso, long-iso, iso, or +FORMAT;\n                            FORMAT is interpreted like in 'date'\n"
0x000043d1      ba05000000     mov edx, 5
0x000043d6      31ff           xor edi, edi
0x000043d8      e833e1ffff     call sym.imp.dcgettext
0x000043dd      4889de         mov rsi, rbx
0x000043e0      4889c7         mov rdi, rax
0x000043e3      e8b8e2ffff     call sym.imp.fputs_unlocked
0x000043e8      488b1db93c22.  mov rbx, qword [obj.stdout]             ; .//src:348 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x000043ef      488d35c2c501.  lea rsi, str.X____exclude_from_FILE__exclude_files_that_match_any_pattern_in_FILE__________exclude_PATTERN____exclude_files_that_match_PATTERN_____x____one_file_system____skip_directories_on_different_file_systems ; 0x209b8 ; "  -X, --exclude-from=FILE  exclude files that match any pattern in FILE\n      --exclude=PATTERN    exclude files that match PATTERN\n  -x, --one-file-system    skip directories on different file systems\n"
0x000043f6      ba05000000     mov edx, 5
0x000043fb      31ff           xor edi, edi
0x000043fd      e80ee1ffff     call sym.imp.dcgettext
0x00004402      4889de         mov rsi, rbx
0x00004405      4889c7         mov rdi, rax
0x00004408      e893e2ffff     call sym.imp.fputs_unlocked
0x0000440d      488b1d943c22.  mov rbx, qword [obj.stdout]             ; .//src:353 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x00004414      488d356dc601.  lea rsi, str.help_____display_this_help_and_exit ; 0x20a88 ; "      --help     display this help and exit\n"
0x0000441b      ba05000000     mov edx, 5
0x00004420      31ff           xor edi, edi
0x00004422      e8e9e0ffff     call sym.imp.dcgettext
0x00004427      4889de         mov rsi, rbx
0x0000442a      4889c7         mov rdi, rax
0x0000442d      e86ee2ffff     call sym.imp.fputs_unlocked
0x00004432      488b1d6f3c22.  mov rbx, qword [obj.stdout]             ; .//src:354 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x00004439      488d3578c601.  lea rsi, str.version__output_version_information_and_exit ; 0x20ab8 ; "      --version  output version information and exit\n"
0x00004440      ba05000000     mov edx, 5
0x00004445      31ff           xor edi, edi
0x00004447      e8c4e0ffff     call sym.imp.dcgettext
0x0000444c      4889de         mov rsi, rbx
0x0000444f      4889c7         mov rdi, rax
0x00004452      e849e2ffff     call sym.imp.fputs_unlocked
0x00004457      488d3592c601.  lea rsi, str.Display_values_are_in_units_of_the_first_available_SIZE_from___block_size___and_the__s_BLOCK_SIZE__BLOCK_SIZE_and_BLOCKSIZE_environment_variables.__Otherwise__units_default_to_1024_bytes__or_512_if_POSIXLY_CORRECT_is_set_. ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:605 ; 0x20af0 ; "\nDisplay values are in units of the first available SIZE from --block-size,\nand the %s_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.\nOtherwise, units default to 1024 bytes (or 512 if POSIXLY_CORRECT is set).\n"
0x0000445e      ba05000000     mov edx, 5
0x00004463      31ff           xor edi, edi
0x00004465      e8a6e0ffff     call sym.imp.dcgettext
0x0000446a      488d151db601.  lea rdx, [0x0001fa8e]                   ; stdio.h:104 __STDIO_INLINE int ; "DU"
0x00004471      4889c6         mov rsi, rax
0x00004474      bf01000000     mov edi, 1
0x00004479      31c0           xor eax, eax
0x0000447b      e8d0e3ffff     call sym.imp.__printf_chk
0x00004480      488b1d213c22.  mov rbx, qword [obj.stdout]             ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:595 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x00004487      488d3542c701.  lea rsi, str.The_SIZE_argument_is_an_integer_and_optional_unit__example:_10K_is_10_1024_.__Units_are_K_M_G_T_P_E_Z_Y__powers_of_1024__or_KB_MB_...__powers_of_1000_.__Binary_prefixes_can_be_used__too:_KiB_K__MiB_M__and_so_on. ; 0x20bd0 ; "\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\n"
0x0000448e      ba05000000     mov edx, 5
0x00004493      31ff           xor edi, edi
0x00004495      e876e0ffff     call sym.imp.dcgettext
0x0000449a      4889de         mov rsi, rbx
0x0000449d      4889c7         mov rdi, rax
0x000044a0      488d1de4b501.  lea rbx, [0x0001fa8b]                   ; "du"
0x000044a7      e8f4e1ffff     call sym.imp.fputs_unlocked
0x000044ac      488d05deb501.  lea rax, [0x0001fa91]                   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:633 ; "["
0x000044b3      488d0d18b601.  lea rcx, str.sha256sum                  ; 0x1fad2 ; "sha256sum"
0x000044ba      48c744246000.  mov qword [rsp + 0x60], 0
0x000044c3      48c744246800.  mov qword [rsp + 0x68], 0
0x000044cc      4889e2         mov rdx, rsp                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:644
0x000044cf      48890424       mov qword [rsp], rax                    ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:633
0x000044d3      488d05b9b501.  lea rax, [0x0001fa93]                   ; "test invocation"
0x000044da      48894c2430     mov qword [rsp + 0x30], rcx
0x000044df      488d0df6b501.  lea rcx, str.sha384sum                  ; 0x1fadc ; "sha384sum"
0x000044e6      4889442408     mov qword [rsp + 8], rax
0x000044eb      488d0519b601.  lea rax, [0x0001fb0b]                   ; "coreutils"
0x000044f2      48894c2440     mov qword [rsp + 0x40], rcx
0x000044f7      488d0de8b501.  lea rcx, str.sha512sum                  ; 0x1fae6 ; "sha512sum"
0x000044fe      4889442410     mov qword [rsp + 0x10], rax
0x00004503      488d0599b501.  lea rax, [0x0001faa3]                   ; "Multi-call invocation"
0x0000450a      48894c2450     mov qword [rsp + 0x50], rcx
0x0000450f      4889442418     mov qword [rsp + 0x18], rax
0x00004514      488d059eb501.  lea rax, str.sha224sum                  ; 0x1fab9 ; "sha224sum"
0x0000451b      4889442420     mov qword [rsp + 0x20], rax
0x00004520      488d059cb501.  lea rax, str.sha2_utilities             ; 0x1fac3 ; "sha2 utilities"
0x00004527      4889442428     mov qword [rsp + 0x28], rax
0x0000452c      4889442438     mov qword [rsp + 0x38], rax
0x00004531      4889442448     mov qword [rsp + 0x48], rax
0x00004536      4889442458     mov qword [rsp + 0x58], rax
0x0000453b      0f1f440000     nop dword [rax + rax]
0x00004540      4883c210       add rdx, 0x10                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:647
0x00004544      488b3a         mov rdi, qword [rdx]                    ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:646
0x00004547      4885ff         test rdi, rdi
0x0000454a      7413           je 0x455f
0x0000454c      b903000000     mov ecx, 3
0x00004551      4889de         mov rsi, rbx
0x00004554      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004556      0f97c0         seta al
0x00004559      1c00           sbb al, 0
0x0000455b      84c0           test al, al
0x0000455d      75e1           jne 0x4540
0x0000455f      4c8b6208       mov r12, qword [rdx + 8]                ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:649
0x00004563      31ff           xor edi, edi                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:652
0x00004565      ba05000000     mov edx, 5
0x0000456a      488d357fb501.  lea rsi, str.s_online_help:___s         ; 0x1faf0 ; "\n%s online help: <%s>\n"
0x00004571      4d85e4         test r12, r12                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:649
0x00004574      0f84c1000000   je 0x463b
0x0000457a      e891dfffff     call sym.imp.dcgettext                  ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:652
0x0000457f      488d0d22c701.  lea rcx, str.https:__www.gnu.org_software_coreutils ; stdio.h:104 __STDIO_INLINE int ; 0x20ca8 ; "https://www.gnu.org/software/coreutils/"
0x00004586      488d157ab501.  lea rdx, str.GNU_coreutils              ; 0x1fb07 ; "GNU coreutils"
0x0000458d      4889c6         mov rsi, rax
0x00004590      bf01000000     mov edi, 1
0x00004595      31c0           xor eax, eax
0x00004597      e8b4e2ffff     call sym.imp.__printf_chk
0x0000459c      31f6           xor esi, esi                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:656
0x0000459e      bf05000000     mov edi, 5
0x000045a3      e898e2ffff     call sym.imp.setlocale
0x000045a8      4885c0         test rax, rax                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:657
0x000045ab      741c           je 0x45c9
0x000045ad      488d3561b501.  lea rsi, [0x0001fb15]                   ; "en_"
0x000045b4      ba03000000     mov edx, 3
0x000045b9      4889c7         mov rdi, rax
0x000045bc      e85fdeffff     call sym.imp.strncmp
0x000045c1      85c0           test eax, eax
0x000045c3      0f8507010000   jne 0x46d0
0x000045c9      488d3549b501.  lea rsi, str.Full_documentation___s_s   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:666 ; 0x1fb19 ; "Full documentation <%s%s>\n"
0x000045d0      31ff           xor edi, edi
0x000045d2      ba05000000     mov edx, 5
0x000045d7      e834dfffff     call sym.imp.dcgettext
0x000045dc      488d0da8b401.  lea rcx, [0x0001fa8b]                   ; stdio.h:104 __STDIO_INLINE int ; "du"
0x000045e3      488d15bec601.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x20ca8 ; "https://www.gnu.org/software/coreutils/"
0x000045ea      4889c6         mov rsi, rax
0x000045ed      bf01000000     mov edi, 1
0x000045f2      31c0           xor eax, eax
0x000045f4      e857e2ffff     call sym.imp.__printf_chk
0x000045f9      4939dc         cmp r12, rbx                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:668
0x000045fc      488d0daab401.  lea rcx, [0x0001faad]                   ; " invocation"
0x00004603      488d1dd7d901.  lea rbx, [0x00021fe1]
0x0000460a      480f44d9       cmove rbx, rcx
0x0000460e      488d3503c701.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x20d18 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00004615      31ff           xor edi, edi
0x00004617      ba05000000     mov edx, 5
0x0000461c      e8efdeffff     call sym.imp.dcgettext
0x00004621      4889d9         mov rcx, rbx                            ; stdio.h:104 __STDIO_INLINE int
0x00004624      4889c6         mov rsi, rax
0x00004627      4c89e2         mov rdx, r12
0x0000462a      bf01000000     mov edi, 1
0x0000462f      31c0           xor eax, eax
0x00004631      e81ae2ffff     call sym.imp.__printf_chk
0x00004636      e95bfcffff     jmp 0x4296
0x0000463b      e8d0deffff     call sym.imp.dcgettext                  ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:652
0x00004640      488d0d61c601.  lea rcx, str.https:__www.gnu.org_software_coreutils ; stdio.h:104 __STDIO_INLINE int ; 0x20ca8 ; "https://www.gnu.org/software/coreutils/"
0x00004647      488d15b9b401.  lea rdx, str.GNU_coreutils              ; 0x1fb07 ; "GNU coreutils"
0x0000464e      4889c6         mov rsi, rax
0x00004651      bf01000000     mov edi, 1
0x00004656      31c0           xor eax, eax
0x00004658      e8f3e1ffff     call sym.imp.__printf_chk
0x0000465d      31f6           xor esi, esi                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:656
0x0000465f      bf05000000     mov edi, 5
0x00004664      e8d7e1ffff     call sym.imp.setlocale
0x00004669      4885c0         test rax, rax                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:657
0x0000466c      7418           je 0x4686
0x0000466e      488d35a0b401.  lea rsi, [0x0001fb15]                   ; "en_"
0x00004675      ba03000000     mov edx, 3
0x0000467a      4889c7         mov rdi, rax
0x0000467d      e89eddffff     call sym.imp.strncmp
0x00004682      85c0           test eax, eax
0x00004684      7543           jne 0x46c9
0x00004686      488d358cb401.  lea rsi, str.Full_documentation___s_s   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:666 ; 0x1fb19 ; "Full documentation <%s%s>\n"
0x0000468d      ba05000000     mov edx, 5
0x00004692      31ff           xor edi, edi
0x00004694      4c8d25f0b301.  lea r12, [0x0001fa8b]                   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:643 ; "du"
0x0000469b      488d1d0bb401.  lea rbx, [0x0001faad]                   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:668 ; " invocation"
0x000046a2      e869deffff     call sym.imp.dcgettext                  ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:666
0x000046a7      488d0dddb301.  lea rcx, [0x0001fa8b]                   ; stdio.h:104 __STDIO_INLINE int ; "du"
0x000046ae      488d15f3c501.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x20ca8 ; "https://www.gnu.org/software/coreutils/"
0x000046b5      4889c6         mov rsi, rax
0x000046b8      bf01000000     mov edi, 1
0x000046bd      31c0           xor eax, eax
0x000046bf      e88ce1ffff     call sym.imp.__printf_chk
0x000046c4      e945ffffff     jmp 0x460e
0x000046c9      4c8d25bbb301.  lea r12, [0x0001fa8b]                   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:643 ; "du"
0x000046d0      4c8b2dd13922.  mov r13, qword [obj.stdout]             ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:663 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x000046d7      488d35f2c501.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x20cd0 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000046de      31ff           xor edi, edi
0x000046e0      ba05000000     mov edx, 5
0x000046e5      e826deffff     call sym.imp.dcgettext
0x000046ea      4c89ee         mov rsi, r13
0x000046ed      4889c7         mov rdi, rax
0x000046f0      e8abdfffff     call sym.imp.fputs_unlocked
0x000046f5      e9cffeffff     jmp 0x45c9
0x000046fa      660f1f440000   nop word [rax + rax]
;-- __argmatch_die:
0x00004700      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/argmatch.c:63
0x00004705      e936fbffff     jmp sym.usage
0x0000470a      660f1f440000   nop word [rax + rax]
;-- argmatch:
0x00004710      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:86
0x00004712      4156           push r14
0x00004714      4989f7         mov r15, rsi
0x00004717      4155           push r13
0x00004719      4154           push r12
0x0000471b      4989cd         mov r13, rcx
0x0000471e      55             push rbp
0x0000471f      53             push rbx
0x00004720      4889d5         mov rbp, rdx
0x00004723      4883ec28       sub rsp, 0x28
0x00004727      48897c2408     mov qword [rsp + 8], rdi
0x0000472c      4889542418     mov qword [rsp + 0x18], rdx
0x00004731      e8faddffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/argmatch.c:92
0x00004736      4d8b37         mov r14, qword [r15]                    ; ../coreutils-8.31/lib/argmatch.c:95
0x00004739      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:89
0x00004741      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/argmatch.c:95
0x00004744      0f84b3000000   je 0x47fd
0x0000474a      4989c4         mov r12, rax
0x0000474d      c644241700     mov byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:90
0x00004752      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:95
0x00004754      eb51           jmp 0x47a7
0x00004756      662e0f1f8400.  nop word cs:[rax + rax]
0x00004760      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/argmatch.c:108
0x00004765      4885c0         test rax, rax
0x00004768      0f84a2000000   je 0x4810
0x0000476e      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:109
0x00004772      4c89ea         mov rdx, r13
0x00004775      4889ee         mov rsi, rbp
0x00004778      490faffd       imul rdi, r13
0x0000477c      4801c7         add rdi, rax
0x0000477f      e8fcdeffff     call sym.imp.memcmp
0x00004784      85c0           test eax, eax                           ; ../coreutils-8.31/lib/argmatch.c:114
0x00004786      0fb6442417     movzx eax, byte [rsp + 0x17]
0x0000478b      b901000000     mov ecx, 1
0x00004790      0f45c1         cmovne eax, ecx
0x00004793      88442417       mov byte [rsp + 0x17], al
0x00004797      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x0000479b      4c01ed         add rbp, r13
0x0000479e      4d8b34df       mov r14, qword [r15 + rbx*8]
0x000047a2      4d85f6         test r14, r14
0x000047a5      7441           je 0x47e8
0x000047a7      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/argmatch.c:97
0x000047ac      4c89e2         mov rdx, r12
0x000047af      4c89f7         mov rdi, r14
0x000047b2      e869dcffff     call sym.imp.strncmp
0x000047b7      85c0           test eax, eax
0x000047b9      75dc           jne 0x4797
0x000047bb      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/argmatch.c:99
0x000047be      e86dddffff     call sym.imp.strlen
0x000047c3      4c39e0         cmp rax, r12
0x000047c6      7458           je 0x4820
0x000047c8      48833c24ff     cmp qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:102
0x000047cd      7591           jne 0x4760
0x000047cf      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:104
0x000047d3      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x000047d7      4c01ed         add rbp, r13
0x000047da      4d8b34df       mov r14, qword [r15 + rbx*8]
0x000047de      4d85f6         test r14, r14
0x000047e1      75c4           jne 0x47a7
0x000047e3      0f1f440000     nop dword [rax + rax]
0x000047e8      807c241700     cmp byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:120
0x000047ed      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x000047f4      480f440424     cmove rax, qword [rsp]
0x000047f9      48890424       mov qword [rsp], rax
0x000047fd      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:123
0x00004801      4883c428       add rsp, 0x28
0x00004805      5b             pop rbx
0x00004806      5d             pop rbp
0x00004807      415c           pop r12
0x00004809      415d           pop r13
0x0000480b      415e           pop r14
0x0000480d      415f           pop r15
0x0000480f      c3             ret
0x00004810      c644241701     mov byte [rsp + 0x17], 1                ; ../coreutils-8.31/lib/argmatch.c:114
0x00004815      eb80           jmp 0x4797
0x00004817      660f1f840000.  nop word [rax + rax]
0x00004820      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:101
0x00004824      ebd7           jmp 0x47fd
0x00004826      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_invalid:
0x00004830      4883faff       cmp rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/argmatch.c:132
0x00004834      4154           push r12
0x00004836      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:133
0x0000483b      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:132
0x0000483c      4989f4         mov r12, rsi
0x0000483f      53             push rbx
0x00004840      4889fd         mov rbp, rdi
0x00004843      744b           je 0x4890                               ; ../coreutils-8.31/lib/argmatch.c:133
0x00004845      488d3508cc01.  lea rsi, str.ambiguous_argument__s_for__s ; 0x21454 ; "ambiguous argument %s for %s"
0x0000484c      31ff           xor edi, edi
0x0000484e      e8bddcffff     call sym.imp.dcgettext
0x00004853      4889c3         mov rbx, rax
0x00004856      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00004859      bf01000000     mov edi, 1
0x0000485e      e8dd7a0000     call sym.quote_n
0x00004863      4c89e2         mov rdx, r12
0x00004866      4889c5         mov rbp, rax
0x00004869      be08000000     mov esi, 8
0x0000486e      31ff           xor edi, edi
0x00004870      e8fb760000     call sym.quotearg_n_style
0x00004875      4989e8         mov r8, rbp
0x00004878      4889da         mov rdx, rbx
0x0000487b      4889c1         mov rcx, rax
0x0000487e      5b             pop rbx                                 ; ../coreutils-8.31/lib/argmatch.c:139
0x0000487f      5d             pop rbp
0x00004880      415c           pop r12
0x00004882      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00004884      31ff           xor edi, edi
0x00004886      31c0           xor eax, eax
0x00004888      e913e0ffff     jmp sym.imp.error
0x0000488d      0f1f00         nop dword [rax]
0x00004890      488d35a2cb01.  lea rsi, str.invalid_argument__s_for__s ; ../coreutils-8.31/lib/argmatch.c:133 ; 0x21439 ; "invalid argument %s for %s"
0x00004897      31ff           xor edi, edi
0x00004899      e872dcffff     call sym.imp.dcgettext
0x0000489e      4889c3         mov rbx, rax
0x000048a1      ebb3           jmp 0x4856
0x000048a3      0f1f00         nop dword [rax]
0x000048a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_valid:
0x000048b0      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:148
0x000048b2      4156           push r14
0x000048b4      4989fe         mov r14, rdi
0x000048b7      4155           push r13
0x000048b9      4154           push r12
0x000048bb      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/argmatch.c:154
0x000048bd      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:148
0x000048be      53             push rbx
0x000048bf      4889f5         mov rbp, rsi
0x000048c2      488d35a8cb01.  lea rsi, str.Valid_arguments_are:       ; ../coreutils-8.31/lib/argmatch.c:154 ; 0x21471 ; "Valid arguments are:"
0x000048c9      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/argmatch.c:148
0x000048cc      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:154
0x000048d1      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argmatch.c:148
0x000048d5      488b1d043822.  mov rbx, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:154 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2280e0:8]=0
0x000048dc      e82fdcffff     call sym.imp.dcgettext
0x000048e1      4889c7         mov rdi, rax
0x000048e4      4889de         mov rsi, rbx
0x000048e7      e8b4ddffff     call sym.imp.fputs_unlocked
0x000048ec      4d8b3e         mov r15, qword [r14]                    ; ../coreutils-8.31/lib/argmatch.c:155
0x000048ef      4d85ff         test r15, r15
0x000048f2      0f8490000000   je 0x4988
0x000048f8      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/argmatch.c:150
0x000048fb      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:155
0x000048fd      eb39           jmp 0x4938
0x000048ff      90             nop
0x00004900      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:159
0x00004903      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00004907      4989ed         mov r13, rbp                            ; ../coreutils-8.31/lib/argmatch.c:160
0x0000490a      e8517a0000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:159
0x0000490f      488b3dca3722.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2280e0:8]=0
0x00004916      488d1569cb01.  lea rdx, [0x00021486]                   ; "\n  - %s"
0x0000491d      4889c1         mov rcx, rax
0x00004920      be01000000     mov esi, 1
0x00004925      31c0           xor eax, eax
0x00004927      4c01e5         add rbp, r12
0x0000492a      e841e0ffff     call sym.imp.__fprintf_chk
0x0000492f      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x00004933      4d85ff         test r15, r15
0x00004936      7450           je 0x4988
0x00004938      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/argmatch.c:156
0x0000493b      74c3           je 0x4900
0x0000493d      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/argmatch.c:157
0x00004940      4889ee         mov rsi, rbp
0x00004943      4c89ef         mov rdi, r13
0x00004946      e835ddffff     call sym.imp.memcmp
0x0000494b      85c0           test eax, eax
0x0000494d      75b1           jne 0x4900
0x0000494f      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:164
0x00004952      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00004956      4c01e5         add rbp, r12
0x00004959      e8027a0000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:164
0x0000495e      488b3d7b3722.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2280e0:8]=0
0x00004965      488d1522cb01.  lea rdx, str.s                          ; 0x2148e ; ", %s"
0x0000496c      4889c1         mov rcx, rax
0x0000496f      be01000000     mov esi, 1
0x00004974      31c0           xor eax, eax
0x00004976      e8f5dfffff     call sym.imp.__fprintf_chk
0x0000497b      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000497f      4d85ff         test r15, r15
0x00004982      75b4           jne 0x4938
0x00004984      0f1f4000       nop dword [rax]
0x00004988      488b3d513722.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:166 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2280e0:8]=0
0x0000498f      488b4728       mov rax, qword [rdi + 0x28]             ; stdio.h:100   return _IO_putc_unlocked (__c, __stream);
0x00004993      483b4730       cmp rax, qword [rdi + 0x30]
0x00004997      731f           jae 0x49b8
0x00004999      488d5001       lea rdx, [rax + 1]
0x0000499d      48895728       mov qword [rdi + 0x28], rdx
0x000049a1      c6000a         mov byte [rax], 0xa
0x000049a4      4883c408       add rsp, 8
0x000049a8      5b             pop rbx
0x000049a9      5d             pop rbp
0x000049aa      415c           pop r12
0x000049ac      415d           pop r13
0x000049ae      415e           pop r14
0x000049b0      415f           pop r15
0x000049b2      c3             ret
0x000049b3      0f1f440000     nop dword [rax + rax]
0x000049b8      4883c408       add rsp, 8
0x000049bc      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/argmatch.c:-204
0x000049c1      5b             pop rbx
0x000049c2      5d             pop rbp
0x000049c3      415c           pop r12
0x000049c5      415d           pop r13
0x000049c7      415e           pop r14
0x000049c9      415f           pop r15
0x000049cb      e9f0dbffff     jmp sym.imp.__overflow
;-- __xargmatch_internal:
0x000049d0      4157           push r15
0x000049d2      4156           push r14
0x000049d4      4989fe         mov r14, rdi
0x000049d7      4155           push r13
0x000049d9      4154           push r12
0x000049db      4989f4         mov r12, rsi
0x000049de      55             push rbp
0x000049df      53             push rbx
0x000049e0      4889cd         mov rbp, rcx
0x000049e3      4889d3         mov rbx, rdx
0x000049e6      4c89c1         mov rcx, r8
0x000049e9      4889ea         mov rdx, rbp
0x000049ec      4883ec08       sub rsp, 8
0x000049f0      4889de         mov rsi, rbx
0x000049f3      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-196
0x000049f6      4d89c7         mov r15, r8
0x000049f9      4d89cd         mov r13, r9
0x000049fc      e80ffdffff     call sym.argmatch
0x00004a01      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argmatch.c:-195
0x00004a04      780f           js 0x4a15                               ; ../coreutils-8.31/lib/argmatch.c:-193
0x00004a06      4883c408       add rsp, 8
0x00004a0a      5b             pop rbx
0x00004a0b      5d             pop rbp
0x00004a0c      415c           pop r12
0x00004a0e      415d           pop r13
0x00004a10      415e           pop r14                                 ; ../coreutils-8.31/lib/argmatch.c:-184
0x00004a12      415f           pop r15
0x00004a14      c3             ret
0x00004a15      4889c2         mov rdx, rax
0x00004a18      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-181
0x00004a1b      4c89f7         mov rdi, r14
0x00004a1e      e80dfeffff     call sym.argmatch_invalid
0x00004a23      4c89fa         mov rdx, r15
0x00004a26      4889ee         mov rsi, rbp
0x00004a29      4889df         mov rdi, rbx
0x00004a2c      e87ffeffff     call sym.argmatch_valid
0x00004a31      41ffd5         call r13
0x00004a34      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00004a3b      ebc9           jmp 0x4a06
0x00004a3d      0f1f00         nop dword [rax]
;-- argmatch_to_argument:
0x00004a40      4156           push r14
0x00004a42      4155           push r13
0x00004a44      4154           push r12
0x00004a46      55             push rbp
0x00004a47      53             push rbx
0x00004a48      4c8b36         mov r14, qword [rsi]
0x00004a4b      4d85f6         test r14, r14
0x00004a4e      7431           je 0x4a81
0x00004a50      4989cc         mov r12, rcx
0x00004a53      4989fd         mov r13, rdi
0x00004a56      4889d5         mov rbp, rdx
0x00004a59      488d5e08       lea rbx, [rsi + 8]
0x00004a5d      eb10           jmp 0x4a6f                              ; ../coreutils-8.31/lib/argmatch.c:-177
0x00004a5f      90             nop
0x00004a60      4c8b33         mov r14, qword [rbx]
0x00004a63      4c01e5         add rbp, r12
0x00004a66      4883c308       add rbx, 8
0x00004a6a      4d85f6         test r14, r14
0x00004a6d      7412           je 0x4a81
0x00004a6f      4c89e2         mov rdx, r12
0x00004a72      4889ee         mov rsi, rbp
0x00004a75      4c89ef         mov rdi, r13
0x00004a78      e803dcffff     call sym.imp.memcmp
0x00004a7d      85c0           test eax, eax
0x00004a7f      75df           jne 0x4a60
0x00004a81      5b             pop rbx
0x00004a82      4c89f0         mov rax, r14
0x00004a85      5d             pop rbp
0x00004a86      415c           pop r12
0x00004a88      415d           pop r13
0x00004a8a      415e           pop r14
0x00004a8c      c3             ret
0x00004a8d      0f1f00         nop dword [rax]
;-- argv_iter_init_argv:
0x00004a90      53             push rbx                                ; ../coreutils-8.31/lib/argv-iter.c:41
0x00004a91      4889fb         mov rbx, rdi
0x00004a94      bf30000000     mov edi, 0x30                           ; ../coreutils-8.31/lib/argv-iter.c:42 ; '0'
0x00004a99      e8e2dcffff     call sym.imp.malloc
0x00004a9e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argv-iter.c:43
0x00004aa1      740f           je 0x4ab2
0x00004aa3      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/argv-iter.c:45
0x00004aaa      48895820       mov qword [rax + 0x20], rbx             ; ../coreutils-8.31/lib/argv-iter.c:46
0x00004aae      48895828       mov qword [rax + 0x28], rbx             ; ../coreutils-8.31/lib/argv-iter.c:47
0x00004ab2      5b             pop rbx                                 ; ../coreutils-8.31/lib/argv-iter.c:49
0x00004ab3      c3             ret
0x00004ab4      6690           nop
0x00004ab6      662e0f1f8400.  nop word cs:[rax + rax]
;-- argv_iter_init_stream:
0x00004ac0      53             push rbx                                ; ../coreutils-8.31/lib/argv-iter.c:55
0x00004ac1      4889fb         mov rbx, rdi
0x00004ac4      bf30000000     mov edi, 0x30                           ; ../coreutils-8.31/lib/argv-iter.c:56 ; '0'
0x00004ac9      e8b2dcffff     call sym.imp.malloc
0x00004ace      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argv-iter.c:57
0x00004ad1      7423           je 0x4af6
0x00004ad3      488918         mov qword [rax], rbx                    ; ../coreutils-8.31/lib/argv-iter.c:59
0x00004ad6      48c740100000.  mov qword [rax + 0x10], 0               ; ../coreutils-8.31/lib/argv-iter.c:60
0x00004ade      48c740180000.  mov qword [rax + 0x18], 0               ; ../coreutils-8.31/lib/argv-iter.c:61
0x00004ae6      48c740080000.  mov qword [rax + 8], 0                  ; ../coreutils-8.31/lib/argv-iter.c:63
0x00004aee      48c740200000.  mov qword [rax + 0x20], 0               ; ../coreutils-8.31/lib/argv-iter.c:64
0x00004af6      5b             pop rbx                                 ; ../coreutils-8.31/lib/argv-iter.c:66
0x00004af7      c3             ret
0x00004af8      0f1f84000000.  nop dword [rax + rax]
;-- argv_iter:
0x00004b00      488b0f         mov rcx, qword [rdi]                    ; ../coreutils-8.31/lib/argv-iter.c:70
0x00004b03      4885c9         test rcx, rcx
0x00004b06      7438           je 0x4b40
0x00004b08      55             push rbp
0x00004b09      53             push rbx
0x00004b0a      4889f5         mov rbp, rsi
0x00004b0d      4889fb         mov rbx, rdi
0x00004b10      488d7718       lea rsi, [rdi + 0x18]                   ; ../coreutils-8.31/lib/argv-iter.c:73
0x00004b14      488d7f10       lea rdi, [rdi + 0x10]
0x00004b18      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argv-iter.c:70
0x00004b1c      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/argv-iter.c:73
0x00004b1e      e89ddeffff     call sym.imp.getdelim
0x00004b23      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argv-iter.c:74
0x00004b26      7848           js 0x4b70
0x00004b28      c74500010000.  mov dword [rbp], 1                      ; ../coreutils-8.31/lib/argv-iter.c:80
0x00004b2f      4883430801     add qword [rbx + 8], 1                  ; ../coreutils-8.31/lib/argv-iter.c:81
0x00004b34      488b4310       mov rax, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/argv-iter.c:82
0x00004b38      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/argv-iter.c:97
0x00004b3c      5b             pop rbx
0x00004b3d      5d             pop rbp
0x00004b3e      c3             ret
0x00004b3f      90             nop
0x00004b40      488b5728       mov rdx, qword [rdi + 0x28]             ; ../coreutils-8.31/lib/argv-iter.c:86
0x00004b44      488b02         mov rax, qword [rdx]
0x00004b47      4885c0         test rax, rax
0x00004b4a      7414           je 0x4b60
0x00004b4c      4883c208       add rdx, 8                              ; ../coreutils-8.31/lib/argv-iter.c:94
0x00004b50      c70601000000   mov dword [rsi], 1                      ; ../coreutils-8.31/lib/argv-iter.c:93
0x00004b56      48895728       mov qword [rdi + 0x28], rdx             ; ../coreutils-8.31/lib/argv-iter.c:94
0x00004b5a      c3             ret                                     ; ../coreutils-8.31/lib/argv-iter.c:97
0x00004b5b      0f1f440000     nop dword [rax + rax]
0x00004b60      c70602000000   mov dword [rsi], 2                      ; ../coreutils-8.31/lib/argv-iter.c:88
0x00004b66      c3             ret                                     ; ../coreutils-8.31/lib/argv-iter.c:89
0x00004b67      660f1f840000.  nop word [rax + rax]
0x00004b70      488b3b         mov rdi, qword [rbx]                    ; ../coreutils-8.31/lib/argv-iter.c:76
0x00004b73      e888dbffff     call sym.imp.feof
0x00004b78      83f801         cmp eax, 1
0x00004b7b      19c0           sbb eax, eax
0x00004b7d      83e002         and eax, 2
0x00004b80      83c002         add eax, 2
0x00004b83      894500         mov dword [rbp], eax
0x00004b86      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/argv-iter.c:77
0x00004b88      ebae           jmp 0x4b38
0x00004b8a      660f1f440000   nop word [rax + rax]
;-- argv_iter_n_args:
0x00004b90      48833f00       cmp qword [rdi], 0                      ; ../coreutils-8.31/lib/argv-iter.c:101
0x00004b94      740a           je 0x4ba0
0x00004b96      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/argv-iter.c:102
0x00004b9a      c3             ret
0x00004b9b      0f1f440000     nop dword [rax + rax]
0x00004ba0      488b4728       mov rax, qword [rdi + 0x28]
0x00004ba4      482b4720       sub rax, qword [rdi + 0x20]
0x00004ba8      48c1f803       sar rax, 3
0x00004bac      c3             ret                                     ; ../coreutils-8.31/lib/argv-iter.c:103
0x00004bad      0f1f00         nop dword [rax]
;-- argv_iter_free:
0x00004bb0      53             push rbx                                ; ../coreutils-8.31/lib/argv-iter.c:107
0x00004bb1      48833f00       cmp qword [rdi], 0                      ; ../coreutils-8.31/lib/argv-iter.c:108
0x00004bb5      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/argv-iter.c:107
0x00004bb8      7409           je 0x4bc3                               ; ../coreutils-8.31/lib/argv-iter.c:108
0x00004bba      488b7f10       mov rdi, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/argv-iter.c:109
0x00004bbe      e84ddeffff     call sym..plt.got
0x00004bc3      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/argv-iter.c:110
0x00004bc6      5b             pop rbx                                 ; ../coreutils-8.31/lib/argv-iter.c:111
0x00004bc7      e944deffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/argv-iter.c:110
0x00004bcc      0f1f4000       nop dword [rax]
;-- close_stdout_set_file_name:
0x00004bd0      48893dd13522.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x2281a8:8]=0
0x00004bd7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00004bd8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00004be0      40883db93522.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x2281a0:1]=0
0x00004be7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00004be8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00004bf0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00004bf1      53             push rbx
0x00004bf2      4883ec08       sub rsp, 8
0x00004bf6      488b3dab3422.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x00004bfd      e81ea70100     call sym.close_stream
0x00004c02      85c0           test eax, eax
0x00004c04      7416           je 0x4c1c
0x00004c06      e805d8ffff     call sym.imp.__errno_location
0x00004c0b      803d8e352200.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x2281a0:1]=0
0x00004c12      4889c3         mov rbx, rax
0x00004c15      741c           je 0x4c33
0x00004c17      833820         cmp dword [rax], 0x20
0x00004c1a      7517           jne 0x4c33
0x00004c1c      488b3dbd3422.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2280e0:8]=0
0x00004c23      e8f8a60100     call sym.close_stream
0x00004c28      85c0           test eax, eax
0x00004c2a      7546           jne 0x4c72
0x00004c2c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00004c30      5b             pop rbx
0x00004c31      5d             pop rbp
0x00004c32      c3             ret
0x00004c33      488d3559c801.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x21493 ; "write error"
0x00004c3a      31ff           xor edi, edi
0x00004c3c      ba05000000     mov edx, 5
0x00004c41      e8cad8ffff     call sym.imp.dcgettext
0x00004c46      488b3d5b3522.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x2281a8:8]=0
0x00004c4d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00004c50      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00004c53      7428           je 0x4c7d
0x00004c55      e806750000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00004c5a      8b33           mov esi, dword [rbx]
0x00004c5c      488d153cc801.  lea rdx, str.s:__s                      ; 0x2149f ; "%s: %s"
0x00004c63      4889c1         mov rcx, rax
0x00004c66      4989e8         mov r8, rbp
0x00004c69      31ff           xor edi, edi
0x00004c6b      31c0           xor eax, eax
0x00004c6d      e82edcffff     call sym.imp.error
0x00004c72      8b3db0332200   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x228028:4]=1
0x00004c78      e8c3d7ffff     call sym.imp._exit
0x00004c7d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00004c7f      488d150ac801.  lea rdx, [0x00021490]                   ; "%s"
0x00004c86      4889c1         mov rcx, rax
0x00004c89      31ff           xor edi, edi
0x00004c8b      31c0           xor eax, eax
0x00004c8d      e80edcffff     call sym.imp.error
0x00004c92      ebde           jmp 0x4c72
0x00004c94      662e0f1f8400.  nop word cs:[rax + rax]
0x00004c9e      6690           nop
;-- di_ent_hash:
0x00004ca0      488b07         mov rax, qword [rdi]
0x00004ca3      31d2           xor edx, edx
0x00004ca5      48f7f6         div rsi
0x00004ca8      4889d0         mov rax, rdx
0x00004cab      c3             ret
0x00004cac      0f1f4000       nop dword [rax]
;-- di_ent_compare:
0x00004cb0      488b06         mov rax, qword [rsi]
0x00004cb3      483907         cmp qword [rdi], rax
0x00004cb6      0f94c0         sete al
0x00004cb9      c3             ret
0x00004cba      660f1f440000   nop word [rax + rax]
;-- di_ino_hash:
0x00004cc0      4889f8         mov rax, rdi
0x00004cc3      31d2           xor edx, edx
0x00004cc5      48f7f6         div rsi
0x00004cc8      4889d0         mov rax, rdx
0x00004ccb      c3             ret
0x00004ccc      0f1f4000       nop dword [rax]
;-- di_ent_free:
0x00004cd0      53             push rbx
0x00004cd1      4889fb         mov rbx, rdi
0x00004cd4      488b7f08       mov rdi, qword [rdi + 8]
0x00004cd8      e8d33a0000     call sym.hash_free
0x00004cdd      4889df         mov rdi, rbx
0x00004ce0      5b             pop rbx
0x00004ce1      e92addffff     jmp sym..plt.got
0x00004ce6      662e0f1f8400.  nop word cs:[rax + rax]
;-- map_device.isra.0:
0x00004cf0      4154           push r12
0x00004cf2      55             push rbp
0x00004cf3      4989fc         mov r12, rdi
0x00004cf6      53             push rbx
0x00004cf7      4889f5         mov rbp, rsi
0x00004cfa      4883ec10       sub rsp, 0x10
0x00004cfe      488b1e         mov rbx, qword [rsi]
0x00004d01      4885db         test rbx, rbx
0x00004d04      7442           je 0x4d48
0x00004d06      483913         cmp qword [rbx], rdx
0x00004d09      742d           je 0x4d38
0x00004d0b      488913         mov qword [rbx], rdx
0x00004d0e      4889de         mov rsi, rbx
0x00004d11      4c89e7         mov rdi, r12
0x00004d14      e847400000     call sym.hash_insert
0x00004d19      4885c0         test rax, rax
0x00004d1c      7452           je 0x4d70
0x00004d1e      4839c3         cmp rbx, rax
0x00004d21      7455           je 0x4d78
0x00004d23      488b4008       mov rax, qword [rax + 8]
0x00004d27      48894308       mov qword [rbx + 8], rax
0x00004d2b      4883c410       add rsp, 0x10
0x00004d2f      5b             pop rbx
0x00004d30      5d             pop rbp
0x00004d31      415c           pop r12
0x00004d33      c3             ret
0x00004d34      0f1f4000       nop dword [rax]
0x00004d38      488b4308       mov rax, qword [rbx + 8]
0x00004d3c      4883c410       add rsp, 0x10
0x00004d40      5b             pop rbx
0x00004d41      5d             pop rbp
0x00004d42      415c           pop r12
0x00004d44      c3             ret
0x00004d45      0f1f00         nop dword [rax]
0x00004d48      bf10000000     mov edi, 0x10
0x00004d4d      4889542408     mov qword [rsp + 8], rdx
0x00004d52      e829daffff     call sym.imp.malloc
0x00004d57      4885c0         test rax, rax
0x00004d5a      4889c3         mov rbx, rax
0x00004d5d      48894500       mov qword [rbp], rax
0x00004d61      488b542408     mov rdx, qword [rsp + 8]
0x00004d66      75a3           jne 0x4d0b
0x00004d68      0f1f84000000.  nop dword [rax + rax]
0x00004d70      31c0           xor eax, eax
0x00004d72      ebb7           jmp 0x4d2b
0x00004d74      0f1f4000       nop dword [rax]
0x00004d78      488d1541ffff.  lea rdx, sym.di_ino_hash                ; 0x4cc0 ; "H\x89\xf81\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f@"
0x00004d7f      48c745000000.  mov qword [rbp], 0
0x00004d87      4531c0         xor r8d, r8d
0x00004d8a      31c9           xor ecx, ecx
0x00004d8c      31f6           xor esi, esi
0x00004d8e      bffd030000     mov edi, 0x3fd
0x00004d93      e8c8370000     call sym.hash_initialize
0x00004d98      48894308       mov qword [rbx + 8], rax
0x00004d9c      4883c410       add rsp, 0x10
0x00004da0      5b             pop rbx
0x00004da1      5d             pop rbp
0x00004da2      415c           pop r12
0x00004da4      c3             ret
0x00004da5      90             nop
0x00004da6      662e0f1f8400.  nop word cs:[rax + rax]
;-- map_inode_number.isra.1:
0x00004db0      488d56ff       lea rdx, [rsi - 1]
0x00004db4      48b8fdffffff.  movabs rax, 0x7ffffffffffffffd          ; 9223372036854775805
0x00004dbe      4839c2         cmp rdx, rax
0x00004dc1      761d           jbe 0x4de0
0x00004dc3      53             push rbx
0x00004dc4      4889fb         mov rbx, rdi
0x00004dc7      4883ec10       sub rsp, 0x10
0x00004dcb      488b3f         mov rdi, qword [rdi]
0x00004dce      4885ff         test rdi, rdi
0x00004dd1      7415           je 0x4de8
0x00004dd3      4883c410       add rsp, 0x10
0x00004dd7      5b             pop rbx
0x00004dd8      e9734f0000     jmp sym.ino_map_insert
0x00004ddd      0f1f00         nop dword [rax]
0x00004de0      4889f0         mov rax, rsi
0x00004de3      c3             ret
0x00004de4      0f1f4000       nop dword [rax]
0x00004de8      48bfffffffff.  movabs rdi, 0x7fffffffffffffff          ; 9223372036854775807
0x00004df2      4889742408     mov qword [rsp + 8], rsi
0x00004df7      e8c44e0000     call sym.ino_map_alloc
0x00004dfc      4885c0         test rax, rax
0x00004dff      4889c7         mov rdi, rax
0x00004e02      488903         mov qword [rbx], rax
0x00004e05      488b742408     mov rsi, qword [rsp + 8]
0x00004e0a      75c7           jne 0x4dd3
0x00004e0c      4883c410       add rsp, 0x10
0x00004e10      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00004e17      5b             pop rbx
0x00004e18      c3             ret
0x00004e19      0f1f80000000.  nop dword [rax]
;-- di_set_alloc:
0x00004e20      53             push rbx
0x00004e21      bf18000000     mov edi, 0x18
0x00004e26      e855d9ffff     call sym.imp.malloc
0x00004e2b      4885c0         test rax, rax
0x00004e2e      4889c3         mov rbx, rax
0x00004e31      7439           je 0x4e6c
0x00004e33      4c8d0596feff.  lea r8, sym.di_ent_free                 ; 0x4cd0 ; "SH\x89\xfbH\x8b\x7f\b\xe8\xd3:"
0x00004e3a      488d0d6ffeff.  lea rcx, sym.di_ent_compare             ; 0x4cb0 ; "H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x00004e41      488d1558feff.  lea rdx, sym.di_ent_hash                ; 0x4ca0 ; "H\x8b\a1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f@"
0x00004e48      31f6           xor esi, esi
0x00004e4a      bf0b000000     mov edi, 0xb
0x00004e4f      e80c370000     call sym.hash_initialize
0x00004e54      4885c0         test rax, rax
0x00004e57      488903         mov qword [rbx], rax
0x00004e5a      741c           je 0x4e78
0x00004e5c      48c743080000.  mov qword [rbx + 8], 0
0x00004e64      48c743100000.  mov qword [rbx + 0x10], 0
0x00004e6c      4889d8         mov rax, rbx
0x00004e6f      5b             pop rbx
0x00004e70      c3             ret
0x00004e71      0f1f80000000.  nop dword [rax]
0x00004e78      4889df         mov rdi, rbx
0x00004e7b      31db           xor ebx, ebx
0x00004e7d      e88edbffff     call sym..plt.got
0x00004e82      ebe8           jmp 0x4e6c
0x00004e84      6690           nop
0x00004e86      662e0f1f8400.  nop word cs:[rax + rax]
;-- di_set_free:
0x00004e90      53             push rbx
0x00004e91      4889fb         mov rbx, rdi
0x00004e94      488b3f         mov rdi, qword [rdi]
0x00004e97      e814390000     call sym.hash_free
0x00004e9c      488b7b08       mov rdi, qword [rbx + 8]
0x00004ea0      e86bdbffff     call sym..plt.got
0x00004ea5      488b7b10       mov rdi, qword [rbx + 0x10]
0x00004ea9      e862dbffff     call sym..plt.got
0x00004eae      4889df         mov rdi, rbx
0x00004eb1      5b             pop rbx
0x00004eb2      e959dbffff     jmp sym..plt.got
0x00004eb7      660f1f840000.  nop word [rax + rax]
;-- di_set_insert:
0x00004ec0      4154           push r12
0x00004ec2      4889f0         mov rax, rsi
0x00004ec5      55             push rbp
0x00004ec6      488d7710       lea rsi, [rdi + 0x10]
0x00004eca      53             push rbx
0x00004ecb      4889fb         mov rbx, rdi
0x00004ece      488b3f         mov rdi, qword [rdi]
0x00004ed1      4989d4         mov r12, rdx
0x00004ed4      4889c2         mov rdx, rax
0x00004ed7      e814feffff     call sym.map_device.isra.0
0x00004edc      4885c0         test rax, rax
0x00004edf      742f           je 0x4f10
0x00004ee1      488d7b08       lea rdi, [rbx + 8]
0x00004ee5      4c89e6         mov rsi, r12
0x00004ee8      4889c5         mov rbp, rax
0x00004eeb      e8c0feffff     call sym.map_inode_number.isra.1
0x00004ef0      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004ef4      741a           je 0x4f10
0x00004ef6      5b             pop rbx
0x00004ef7      4889ef         mov rdi, rbp
0x00004efa      31d2           xor edx, edx
0x00004efc      4889c6         mov rsi, rax
0x00004eff      5d             pop rbp
0x00004f00      415c           pop r12
0x00004f02      e9c93b0000     jmp sym.hash_insert_if_absent
0x00004f07      660f1f840000.  nop word [rax + rax]
0x00004f10      5b             pop rbx
0x00004f11      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00004f16      5d             pop rbp
0x00004f17      415c           pop r12
0x00004f19      c3             ret
0x00004f1a      660f1f440000   nop word [rax + rax]
;-- di_set_lookup:
0x00004f20      4154           push r12
0x00004f22      4889f0         mov rax, rsi
0x00004f25      55             push rbp
0x00004f26      488d7710       lea rsi, [rdi + 0x10]
0x00004f2a      53             push rbx
0x00004f2b      4889fb         mov rbx, rdi
0x00004f2e      488b3f         mov rdi, qword [rdi]
0x00004f31      4989d4         mov r12, rdx
0x00004f34      4889c2         mov rdx, rax
0x00004f37      e8b4fdffff     call sym.map_device.isra.0
0x00004f3c      4885c0         test rax, rax
0x00004f3f      742f           je 0x4f70
0x00004f41      488d7b08       lea rdi, [rbx + 8]
0x00004f45      4c89e6         mov rsi, r12
0x00004f48      4889c5         mov rbp, rax
0x00004f4b      e860feffff     call sym.map_inode_number.isra.1
0x00004f50      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004f54      741a           je 0x4f70
0x00004f56      4889c6         mov rsi, rax
0x00004f59      4889ef         mov rdi, rbp
0x00004f5c      e88f330000     call sym.hash_lookup
0x00004f61      4885c0         test rax, rax
0x00004f64      0f95c0         setne al
0x00004f67      0fb6c0         movzx eax, al
0x00004f6a      5b             pop rbx
0x00004f6b      5d             pop rbp
0x00004f6c      415c           pop r12
0x00004f6e      c3             ret
0x00004f6f      90             nop
0x00004f70      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00004f75      ebf3           jmp 0x4f6a
0x00004f77      660f1f840000.  nop word [rax + rax]
;-- call_addfn:
0x00004f80      ff21           jmp qword [rcx]                         ; ../coreutils-8.31/lib/exclude.c:670
0x00004f82      0f1f4000       nop dword [rax]
0x00004f86      662e0f1f8400.  nop word cs:[rax + rax]
;-- string_free:
0x00004f90      e97bdaffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/exclude.c:248
0x00004f95      90             nop
0x00004f96      662e0f1f8400.  nop word cs:[rax + rax]
;-- string_compare_ci:
0x00004fa0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/exclude.c:240
0x00004fa4      e8974f0000     call sym.mbscasecmp                     ; ../coreutils-8.31/lib/exclude.c:243
0x00004fa9      85c0           test eax, eax
0x00004fab      0f94c0         sete al
0x00004fae      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/exclude.c:244
0x00004fb2      c3             ret
0x00004fb3      0f1f00         nop dword [rax]
0x00004fb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- string_compare:
0x00004fc0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/exclude.c:231
0x00004fc4      e807d7ffff     call sym.imp.strcmp                     ; ../coreutils-8.31/lib/exclude.c:234
0x00004fc9      85c0           test eax, eax
0x00004fcb      0f94c0         sete al
0x00004fce      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/exclude.c:235
0x00004fd2      c3             ret
0x00004fd3      0f1f00         nop dword [rax]
0x00004fd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- string_hasher:
0x00004fe0      e91b350000     jmp sym.hash_string                     ; ../coreutils-8.31/lib/exclude.c:199
0x00004fe5      90             nop
0x00004fe6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fnmatch_no_wildcards:
0x00004ff0      89d0           mov eax, edx                            ; ../coreutils-8.31/lib/exclude.c:334
0x00004ff2      83e010         and eax, 0x10
0x00004ff5      83e208         and edx, 8                              ; ../coreutils-8.31/lib/exclude.c:335
0x00004ff8      750e           jne 0x5008
0x00004ffa      85c0           test eax, eax                           ; ../coreutils-8.31/lib/exclude.c:338
0x00004ffc      7452           je 0x5050
0x00004ffe      e93d4f0000     jmp sym.mbscasecmp
0x00005003      0f1f440000     nop dword [rax + rax]
0x00005008      4154           push r12                                ; ../coreutils-8.31/lib/exclude.c:334
0x0000500a      55             push rbp
0x0000500b      4889fd         mov rbp, rdi
0x0000500e      53             push rbx
0x0000500f      4889f3         mov rbx, rsi
0x00005012      4883ec10       sub rsp, 0x10
0x00005016      85c0           test eax, eax                           ; ../coreutils-8.31/lib/exclude.c:339
0x00005018      753e           jne 0x5058
0x0000501a      e811d5ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/exclude.c:341
0x0000501f      4889de         mov rsi, rbx                            ; ../coreutils-8.31/lib/exclude.c:342
0x00005022      4889c2         mov rdx, rax
0x00005025      4889ef         mov rdi, rbp
0x00005028      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/exclude.c:341
0x0000502b      e8f0d3ffff     call sym.imp.strncmp                    ; ../coreutils-8.31/lib/exclude.c:342
0x00005030      85c0           test eax, eax                           ; ../coreutils-8.31/lib/exclude.c:343
0x00005032      750b           jne 0x503f
0x00005034      420fbe1423     movsx edx, byte [rbx + r12]             ; ../coreutils-8.31/lib/exclude.c:345
0x00005039      83fa2f         cmp edx, 0x2f                           ; ../coreutils-8.31/lib/exclude.c:346
0x0000503c      0f45c2         cmovne eax, edx
0x0000503f      4883c410       add rsp, 0x10                           ; ../coreutils-8.31/lib/exclude.c:375
0x00005043      5b             pop rbx
0x00005044      5d             pop rbp
0x00005045      415c           pop r12
0x00005047      c3             ret
0x00005048      0f1f84000000.  nop dword [rax + rax]
0x00005050      e97bd6ffff     jmp sym.imp.strcmp                      ; ../coreutils-8.31/lib/exclude.c:338
0x00005055      0f1f00         nop dword [rax]
0x00005058      4889f7         mov rdi, rsi                            ; ../coreutils-8.31/lib/exclude.c:360
0x0000505b      e8b07b0000     call sym.xstrdup
0x00005060      4989c4         mov r12, rax
0x00005063      4889c7         mov rdi, rax
0x00005066      eb21           jmp 0x5089
0x00005068      0f1f84000000.  nop dword [rax + rax]
0x00005070      c60000         mov byte [rax], 0                       ; ../coreutils-8.31/lib/exclude.c:367
0x00005073      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/exclude.c:368
0x00005076      4889ef         mov rdi, rbp
0x00005079      e8c24e0000     call sym.mbscasecmp
0x0000507e      85c0           test eax, eax                           ; ../coreutils-8.31/lib/exclude.c:369
0x00005080      7e24           jle 0x50a6
0x00005082      488d7b01       lea rdi, [rbx + 1]                      ; ../coreutils-8.31/lib/exclude.c:363
0x00005086      c6032f         mov byte [rbx], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x00005089      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/exclude.c:365 ; '/'
0x0000508e      e80dd5ffff     call sym.imp.strchr
0x00005093      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/exclude.c:366
0x00005096      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/exclude.c:365
0x00005099      75d5           jne 0x5070                              ; ../coreutils-8.31/lib/exclude.c:366
0x0000509b      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/exclude.c:368
0x0000509e      4889ef         mov rdi, rbp
0x000050a1      e89a4e0000     call sym.mbscasecmp
0x000050a6      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/exclude.c:372
0x000050a9      8944240c       mov dword [rsp + 0xc], eax
0x000050ad      e85ed9ffff     call sym..plt.got
0x000050b2      8b44240c       mov eax, dword [rsp + 0xc]
0x000050b6      4883c410       add rsp, 0x10                           ; ../coreutils-8.31/lib/exclude.c:375
0x000050ba      5b             pop rbx
0x000050bb      5d             pop rbp
0x000050bc      415c           pop r12
0x000050be      c3             ret
0x000050bf      90             nop
;-- string_hasher_ci:
0x000050c0      4157           push r15                                ; ../coreutils-8.31/lib/exclude.c:207
0x000050c2      4156           push r14
0x000050c4      4531f6         xor r14d, r14d                          ; ../coreutils-8.31/lib/exclude.c:210
0x000050c7      4155           push r13                                ; ../coreutils-8.31/lib/exclude.c:207
0x000050c9      4154           push r12
0x000050cb      4c8d256ec901.  lea r12, obj.is_basic_table             ; 0x21a40
0x000050d2      55             push rbp
0x000050d3      53             push rbx
0x000050d4      4889f3         mov rbx, rsi
0x000050d7      4883ec68       sub rsp, 0x68                           ; ../coreutils-8.31/lib/mbuiter.h:22
0x000050db      488d6c2410     lea rbp, [rsp + 0x10]
0x000050e0      48897c2420     mov qword [rsp + 0x20], rdi
0x000050e5      c644241000     mov byte [rsp + 0x10], 0
0x000050ea      64488b042528.  mov rax, qword fs:[0x28]
0x000050f3      4889442458     mov qword [rsp + 0x58], rax
0x000050f8      31c0           xor eax, eax
0x000050fa      488d4504       lea rax, [rbp + 4]                      ; string_fortified.h:-57
0x000050fe      48c744241400.  mov qword [rsp + 0x14], 0
0x00005107      c644241c00     mov byte [rsp + 0x1c], 0
0x0000510c      4889442408     mov qword [rsp + 8], rax
0x00005111      eb33           jmp 0x5146
0x00005113      0f1f440000     nop dword [rax + rax]
0x00005118      4489ef         mov edi, r13d
0x0000511b      e8c0d7ffff     call sym.imp.towlower
0x00005120      4c89f2         mov rdx, r14
0x00005123      4898           cdqe
0x00005125      4c037c2428     add r15, qword [rsp + 0x28]
0x0000512a      48c1e205       shl rdx, 5                              ; ../coreutils-8.31/lib/exclude.c:84
0x0000512e      c644241c00     mov byte [rsp + 0x1c], 0
0x00005133      4c29f2         sub rdx, r14
0x00005136      4801d0         add rax, rdx
0x00005139      31d2           xor edx, edx
0x0000513b      48f7f3         div rbx
0x0000513e      4c897c2420     mov qword [rsp + 0x20], r15
0x00005143      4989d6         mov r14, rdx
0x00005146      807c241000     cmp byte [rsp + 0x10], 0
0x0000514b      756a           jne 0x51b7
0x0000514d      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00005152      0fb611         movzx edx, byte [rcx]
0x00005155      89d0           mov eax, edx
0x00005157      c0e805         shr al, 5
0x0000515a      83e007         and eax, 7
0x0000515d      418b0484       mov eax, dword [r12 + rax*4]            ; ../coreutils-8.31/lib/mbuiter.h:11
0x00005161      0fa3d0         bt eax, edx
0x00005164      733a           jae 0x51a0
0x00005166      48c744242801.  mov qword [rsp + 0x28], 1
0x0000516f      440fbe29       movsx r13d, byte [rcx]                  ; ../coreutils-8.31/lib/mbuiter.h:18
0x00005173      c644243001     mov byte [rsp + 0x30], 1
0x00005178      c644241c01     mov byte [rsp + 0x1c], 1
0x0000517d      44896c2434     mov dword [rsp + 0x34], r13d
0x00005182      4585ed         test r13d, r13d
0x00005185      0f84c5000000   je 0x5250                               ; ../coreutils-8.31/lib/exclude.c:-41
0x0000518b      807c243000     cmp byte [rsp + 0x30], 0
0x00005190      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x00005195      7581           jne 0x5118
0x00005197      410fbe07       movsx eax, byte [r15]
0x0000519b      eb83           jmp 0x5120
0x0000519d      0f1f00         nop dword [rax]
0x000051a0      488b7c2408     mov rdi, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbuiter.h:-110
0x000051a5      e8e6d7ffff     call sym.imp.mbsinit                    ; ../coreutils-8.31/lib/mbuiter.h:-108
0x000051aa      85c0           test eax, eax
0x000051ac      0f8430010000   je 0x52e2
0x000051b2      c644241001     mov byte [rsp + 0x10], 1
0x000051b7      e864d3ffff     call sym.imp.__ctype_get_mb_cur_max
0x000051bc      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x000051c1      4889c6         mov rsi, rax
0x000051c4      4c89ff         mov rdi, r15
0x000051c7      e8b4710000     call sym.strnlen1
0x000051cc      488d4d04       lea rcx, [rbp + 4]
0x000051d0      488d7d24       lea rdi, [rbp + 0x24]
0x000051d4      4889c2         mov rdx, rax
0x000051d7      4c89fe         mov rsi, r15
0x000051da      e801b00000     call sym.rpl_mbrtowc
0x000051df      4883f8ff       cmp rax, 0xffffffffffffffff
0x000051e3      4889442428     mov qword [rsp + 0x28], rax
0x000051e8      0f8492000000   je 0x5280
0x000051ee      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000051f2      0f84a8000000   je 0x52a0
0x000051f8      4885c0         test rax, rax
0x000051fb      0f85d7000000   jne 0x52d8
0x00005201      488b442420     mov rax, qword [rsp + 0x20]
0x00005206      48c744242801.  mov qword [rsp + 0x28], 1               ; ../coreutils-8.31/lib/mbuiter.h:-82
0x0000520f      803800         cmp byte [rax], 0
0x00005212      0f8508010000   jne 0x5320
0x00005218      448b6c2434     mov r13d, dword [rsp + 0x34]            ; ../coreutils-8.31/lib/mbuiter.h:-80
0x0000521d      4585ed         test r13d, r13d                         ; ../coreutils-8.31/lib/mbuiter.h:-76
0x00005220      0f85db000000   jne 0x5301
0x00005226      488d7d04       lea rdi, [rbp + 4]
0x0000522a      c644243001     mov byte [rsp + 0x30], 1                ; ../coreutils-8.31/lib/exclude.c:-49
0x0000522f      e85cd7ffff     call sym.imp.mbsinit
0x00005234      85c0           test eax, eax
0x00005236      0f848c000000   je 0x52c8
0x0000523c      4585ed         test r13d, r13d
0x0000523f      c644241000     mov byte [rsp + 0x10], 0
0x00005244      c644241c01     mov byte [rsp + 0x1c], 1
0x00005249      0f853cffffff   jne 0x518b
0x0000524f      90             nop
0x00005250      488b742458     mov rsi, qword [rsp + 0x58]
0x00005255      644833342528.  xor rsi, qword fs:[0x28]
0x0000525e      4c89f0         mov rax, r14
0x00005261      0f85d8000000   jne 0x533f
0x00005267      4883c468       add rsp, 0x68
0x0000526b      5b             pop rbx
0x0000526c      5d             pop rbp
0x0000526d      415c           pop r12
0x0000526f      415d           pop r13
0x00005271      415e           pop r14
0x00005273      415f           pop r15
0x00005275      c3             ret
0x00005276      662e0f1f8400.  nop word cs:[rax + rax]
0x00005280      48c744242801.  mov qword [rsp + 0x28], 1
0x00005289      c644243000     mov byte [rsp + 0x30], 0
0x0000528e      448b6c2434     mov r13d, dword [rsp + 0x34]            ; ../coreutils-8.31/lib/mbuiter.h:-94
0x00005293      c644241c01     mov byte [rsp + 0x1c], 1
0x00005298      e9eefeffff     jmp 0x518b                              ; ../coreutils-8.31/lib/mbuiter.h:-93
0x0000529d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/mbuiter.h:-94
0x000052a0      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000052a5      e886d2ffff     call sym.imp.strlen
0x000052aa      c644243000     mov byte [rsp + 0x30], 0
0x000052af      4889442428     mov qword [rsp + 0x28], rax
0x000052b4      448b6c2434     mov r13d, dword [rsp + 0x34]
0x000052b9      c644241c01     mov byte [rsp + 0x1c], 1
0x000052be      e9c8feffff     jmp 0x518b
0x000052c3      0f1f440000     nop dword [rax + rax]
0x000052c8      c644241c01     mov byte [rsp + 0x1c], 1
0x000052cd      e9b0feffff     jmp 0x5182
0x000052d2      660f1f440000   nop word [rax + rax]
0x000052d8      448b6c2434     mov r13d, dword [rsp + 0x34]
0x000052dd      e944ffffff     jmp 0x5226
0x000052e2      488d0d27c401.  lea rcx, obj.__PRETTY_FUNCTION__.5373   ; 0x21710 ; "mbuiter_multi_next"
0x000052e9      488d35b8c101.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x214a8 ; "../coreutils-8.31/lib/mbuiter.h"
0x000052f0      488d3dd1c101.  lea rdi, str.mbsinit___iter__state      ; 0x214c8 ; "mbsinit (&iter->state)"
0x000052f7      ba96000000     mov edx, 0x96
0x000052fc      e8ffd2ffff     call sym.imp.__assert_fail
0x00005301      488d0d08c401.  lea rcx, obj.__PRETTY_FUNCTION__.5373   ; 0x21710 ; "mbuiter_multi_next"
0x00005308      488d3599c101.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x214a8 ; "../coreutils-8.31/lib/mbuiter.h"
0x0000530f      488d3de0c101.  lea rdi, str.iter__cur.wc____0          ; 0x214f6 ; "iter->cur.wc == 0"
0x00005316      bab3000000     mov edx, 0xb3
0x0000531b      e8e0d2ffff     call sym.imp.__assert_fail
0x00005320      488d0de9c301.  lea rcx, obj.__PRETTY_FUNCTION__.5373   ; 0x21710 ; "mbuiter_multi_next"
0x00005327      488d357ac101.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x214a8 ; "../coreutils-8.31/lib/mbuiter.h"
0x0000532e      488d3daac101.  lea rdi, str.iter__cur.ptr_______0      ; 0x214df ; "*iter->cur.ptr == '\0'"
0x00005335      bab2000000     mov edx, 0xb2
0x0000533a      e8c1d2ffff     call sym.imp.__assert_fail
0x0000533f      e81cd2ffff     call sym.imp.__stack_chk_fail
0x00005344      6690           nop
0x00005346      662e0f1f8400.  nop word cs:[rax + rax]
;-- exclude_add_pattern_buffer:
0x00005350      55             push rbp
0x00005351      53             push rbx
0x00005352      4889fb         mov rbx, rdi
0x00005355      bf10000000     mov edi, 0x10
0x0000535a      4889f5         mov rbp, rsi
0x0000535d      4883ec08       sub rsp, 8
0x00005361      e87a760000     call sym.xmalloc
0x00005366      488b5308       mov rdx, qword [rbx + 8]
0x0000536a      48896808       mov qword [rax + 8], rbp
0x0000536e      48894308       mov qword [rbx + 8], rax                ; ../coreutils-8.31/lib/exclude.c:-117
0x00005372      488910         mov qword [rax], rdx
0x00005375      4883c408       add rsp, 8
0x00005379      5b             pop rbx
0x0000537a      5d             pop rbp
0x0000537b      c3             ret
0x0000537c      0f1f4000       nop dword [rax]
;-- fnmatch_pattern_has_wildcards:
0x00005380      0fb607         movzx eax, byte [rdi]
0x00005383      4189f1         mov r9d, esi
0x00005386      4189f0         mov r8d, esi
0x00005389      488d1580c101.  lea rdx, [0x00021510]                   ; ../coreutils-8.31/lib/exclude.c:-99
0x00005390      4183e120       and r9d, 0x20                           ; "@"
0x00005394      4181e0000000.  and r8d, 0x8000000
0x0000539b      83e602         and esi, 2
0x0000539e      3c7d           cmp al, 0x7d                            ; ../coreutils-8.31/lib/exclude.c:-87
0x000053a0      488d4f01       lea rcx, [rdi + 1]
0x000053a4      7722           ja 0x53c8
0x000053a6      48630482       movsxd rax, dword [rdx + rax*4]         ; ../coreutils-8.31/lib/exclude.c:-107
0x000053aa      4801d0         add rax, rdx
0x000053ad      ffe0           jmp rax
0x000053af      90             nop
0x000053b0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/exclude.c:-84
0x000053b2      c3             ret
0x000053b3      0f1f440000     nop dword [rax + rax]
0x000053b8      4585c0         test r8d, r8d
0x000053bb      740b           je 0x53c8
0x000053bd      b801000000     mov eax, 1
0x000053c2      c3             ret
0x000053c3      0f1f440000     nop dword [rax + rax]
0x000053c8      0fb64701       movzx eax, byte [rdi + 1]
0x000053cc      4889cf         mov rdi, rcx
0x000053cf      ebcd           jmp 0x539e
0x000053d1      0f1f80000000.  nop dword [rax]
0x000053d8      4585c0         test r8d, r8d
0x000053db      75eb           jne 0x53c8
0x000053dd      85f6           test esi, esi
0x000053df      488d4702       lea rax, [rdi + 2]
0x000053e3      7508           jne 0x53ed
0x000053e5      807f0100       cmp byte [rdi + 1], 0
0x000053e9      480f45c8       cmovne rcx, rax
0x000053ed      0fb601         movzx eax, byte [rcx]
0x000053f0      4889cf         mov rdi, rcx
0x000053f3      eba9           jmp 0x539e                              ; ../coreutils-8.31/lib/exclude.c:-114
0x000053f5      0f1f00         nop dword [rax]
0x000053f8      4585c9         test r9d, r9d
0x000053fb      74cb           je 0x53c8
0x000053fd      0fb64701       movzx eax, byte [rdi + 1]
0x00005401      3c28           cmp al, 0x28
0x00005403      74b8           je 0x53bd
0x00005405      4889cf         mov rdi, rcx
0x00005408      eb94           jmp 0x539e
0x0000540a      660f1f440000   nop word [rax + rax]
;-- new_exclude:
0x00005410      bf10000000     mov edi, 0x10
0x00005415      e976770000     jmp sym.xzalloc
0x0000541a      660f1f440000   nop word [rax + rax]
;-- free_exclude:
0x00005420      4156           push r14
0x00005422      4155           push r13
0x00005424      4989fe         mov r14, rdi
0x00005427      4154           push r12
0x00005429      55             push rbp
0x0000542a      53             push rbx
0x0000542b      488b1f         mov rbx, qword [rdi]
0x0000542e      4885db         test rbx, rbx
0x00005431      7477           je 0x54aa
0x00005433      0f1f440000     nop dword [rax + rax]
0x00005438      8b4308         mov eax, dword [rbx + 8]
0x0000543b      4c8b2b         mov r13, qword [rbx]
0x0000543e      85c0           test eax, eax
0x00005440      0f84a2000000   je 0x54e8
0x00005446      83f801         cmp eax, 1
0x00005449      754f           jne 0x549a
0x0000544b      48837b2000     cmp qword [rbx + 0x20], 0
0x00005450      488b7b10       mov rdi, qword [rbx + 0x10]
0x00005454      743f           je 0x5495
0x00005456      4531e4         xor r12d, r12d
0x00005459      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/exclude.c:-76
0x0000545b      eb11           jmp 0x546e
0x0000545d      0f1f00         nop dword [rax]
0x00005460      4883c501       add rbp, 1
0x00005464      4983c448       add r12, 0x48
0x00005468      483b6b20       cmp rbp, qword [rbx + 0x20]             ; ../coreutils-8.31/lib/exclude.c:-74
0x0000546c      7327           jae 0x5495
0x0000546e      4a8d0427       lea rax, [rdi + r12]
0x00005472      f70000000008   test dword [rax], 0x8000000
0x00005478      74e6           je 0x5460                               ; ../coreutils-8.31/lib/exclude.c:-57
0x0000547a      488d7808       lea rdi, [rax + 8]
0x0000547e      4883c501       add rbp, 1
0x00005482      4983c448       add r12, 0x48
0x00005486      e855970100     call sym.rpl_regfree
0x0000548b      483b6b20       cmp rbp, qword [rbx + 0x20]             ; ../coreutils-8.31/lib/exclude.c:-47
0x0000548f      488b7b10       mov rdi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/exclude.c:-48
0x00005493      72d9           jb 0x546e
0x00005495      e876d5ffff     call sym..plt.got
0x0000549a      4889df         mov rdi, rbx
0x0000549d      4c89eb         mov rbx, r13
0x000054a0      e86bd5ffff     call sym..plt.got
0x000054a5      4d85ed         test r13, r13
0x000054a8      758e           jne 0x5438                              ; ../coreutils-8.31/lib/exclude.c:-42
0x000054aa      498b5e08       mov rbx, qword [r14 + 8]
0x000054ae      4885db         test rbx, rbx
0x000054b1      7421           je 0x54d4
0x000054b3      0f1f440000     nop dword [rax + rax]
0x000054b8      488b7b08       mov rdi, qword [rbx + 8]
0x000054bc      488b2b         mov rbp, qword [rbx]
0x000054bf      e84cd5ffff     call sym..plt.got
0x000054c4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/exclude.c:-67
0x000054c7      4889eb         mov rbx, rbp
0x000054ca      e841d5ffff     call sym..plt.got
0x000054cf      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/exclude.c:-57
0x000054d2      75e4           jne 0x54b8
0x000054d4      5b             pop rbx
0x000054d5      4c89f7         mov rdi, r14
0x000054d8      5d             pop rbp
0x000054d9      415c           pop r12
0x000054db      415d           pop r13                                 ; ../coreutils-8.31/lib/exclude.c:-113
0x000054dd      415e           pop r14
0x000054df      e92cd5ffff     jmp sym..plt.got
0x000054e4      0f1f4000       nop dword [rax]
0x000054e8      488b7b10       mov rdi, qword [rbx + 0x10]
0x000054ec      e8bf320000     call sym.hash_free
0x000054f1      4889df         mov rdi, rbx
0x000054f4      4c89eb         mov rbx, r13
0x000054f7      e814d5ffff     call sym..plt.got
0x000054fc      4d85ed         test r13, r13
0x000054ff      0f8533ffffff   jne 0x5438
0x00005505      eba3           jmp 0x54aa
0x00005507      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/exclude.c:-109
;-- exclude_fnmatch:
0x00005510      4156           push r14                                ; ../coreutils-8.31/lib/exclude.c:-108
0x00005512      4155           push r13
0x00005514      4989fe         mov r14, rdi
0x00005517      4154           push r12
0x00005519      4189d4         mov r12d, edx
0x0000551c      81e200000010   and edx, 0x10000000
0x00005522      55             push rbp
0x00005523      4c8d2dc6faff.  lea r13, sym.fnmatch_no_wildcards       ; 0x4ff0
0x0000552a      53             push rbx
0x0000552b      4889f3         mov rbx, rsi
0x0000552e      7407           je 0x5537
0x00005530      4c8b2da12a22.  mov r13, qword [reloc.fnmatch]          ; [0x227fd8:8]=0
0x00005537      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/exclude.c:-103
0x0000553a      4889de         mov rsi, rbx
0x0000553d      4c89f7         mov rdi, r14
0x00005540      41ffd5         call r13
0x00005543      85c0           test eax, eax
0x00005545      0f94c1         sete cl
0x00005548      41f7c4000000.  test r12d, 0x40000000
0x0000554f      7527           jne 0x5578
0x00005551      0fb613         movzx edx, byte [rbx]
0x00005554      84d2           test dl, dl
0x00005556      7420           je 0x5578
0x00005558      85c0           test eax, eax
0x0000555a      745b           je 0x55b7
0x0000555c      0f1f4000       nop dword [rax]
0x00005560      80fa2f         cmp dl, 0x2f
0x00005563      488d6b01       lea rbp, [rbx + 1]
0x00005567      0fb64301       movzx eax, byte [rbx + 1]               ; ../coreutils-8.31/lib/exclude.c:-108
0x0000556b      742b           je 0x5598
0x0000556d      84c0           test al, al
0x0000556f      89c2           mov edx, eax
0x00005571      4889eb         mov rbx, rbp
0x00005574      75ea           jne 0x5560
0x00005576      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/exclude.c:-107
0x00005578      5b             pop rbx
0x00005579      89c8           mov eax, ecx
0x0000557b      5d             pop rbp                                 ; ../coreutils-8.31/lib/exclude.c:-103
0x0000557c      415c           pop r12
0x0000557e      415d           pop r13
0x00005580      415e           pop r14
0x00005582      c3             ret
0x00005583      0f1f440000     nop dword [rax + rax]
0x00005588      0fb64501       movzx eax, byte [rbp + 1]
0x0000558c      4889eb         mov rbx, rbp
0x0000558f      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/exclude.c:-106
0x00005593      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/exclude.c:-153
0x00005598      3c2f           cmp al, 0x2f
0x0000559a      74ec           je 0x5588                               ; ../coreutils-8.31/lib/exclude.c:-142
0x0000559c      4489e2         mov edx, r12d
0x0000559f      4889ee         mov rsi, rbp
0x000055a2      4c89f7         mov rdi, r14
0x000055a5      41ffd5         call r13
0x000055a8      0fb65301       movzx edx, byte [rbx + 1]
0x000055ac      84d2           test dl, dl                             ; ../coreutils-8.31/lib/exclude.c:-138
0x000055ae      7420           je 0x55d0
0x000055b0      85c0           test eax, eax
0x000055b2      4889eb         mov rbx, rbp
0x000055b5      75a9           jne 0x5560
0x000055b7      b901000000     mov ecx, 1
0x000055bc      5b             pop rbx
0x000055bd      89c8           mov eax, ecx
0x000055bf      5d             pop rbp
0x000055c0      415c           pop r12                                 ; string_fortified.h:-537
0x000055c2      415d           pop r13
0x000055c4      415e           pop r14
0x000055c6      c3             ret
0x000055c7      660f1f840000.  nop word [rax + rax]
0x000055d0      85c0           test eax, eax
0x000055d2      0f94c1         sete cl
0x000055d5      eba1           jmp 0x5578
0x000055d7      660f1f840000.  nop word [rax + rax]
;-- excluded_file_name:
0x000055e0      4157           push r15                                ; ../coreutils-8.31/lib/exclude.c:-184
0x000055e2      4156           push r14
0x000055e4      31c0           xor eax, eax
0x000055e6      4155           push r13
0x000055e8      4154           push r12
0x000055ea      55             push rbp
0x000055eb      53             push rbx
0x000055ec      4883ec18       sub rsp, 0x18
0x000055f0      4c8b37         mov r14, qword [rdi]
0x000055f3      4d85f6         test r14, r14
0x000055f6      0f848f000000   je 0x568b
0x000055fc      418b4608       mov eax, dword [r14 + 8]
0x00005600      31ed           xor ebp, ebp
0x00005602      4889742408     mov qword [rsp + 8], rsi
0x00005607      85c0           test eax, eax                           ; ../coreutils-8.31/lib/exclude.c:-116
0x00005609      0f85dc000000   jne 0x56eb
0x0000560f      90             nop                                     ; ../coreutils-8.31/lib/exclude.c:-115
0x00005610      4885ed         test rbp, rbp
0x00005613      0f8437010000   je 0x5750
0x00005619      458b7e0c       mov r15d, dword [r14 + 0xc]
0x0000561d      4d8b6610       mov r12, qword [r14 + 0x10]
0x00005621      488b5c2408     mov rbx, qword [rsp + 8]
0x00005626      4589fd         mov r13d, r15d
0x00005629      4183e508       and r13d, 8
0x0000562d      4889de         mov rsi, rbx
0x00005630      4889ef         mov rdi, rbp
0x00005633      e818ceffff     call sym.imp.strcpy                     ; ../coreutils-8.31/lib/exclude.c:-174
0x00005638      4889ee         mov rsi, rbp
0x0000563b      4c89e7         mov rdi, r12
0x0000563e      e8ad2c0000     call sym.hash_lookup
0x00005643      4885c0         test rax, rax
0x00005646      752a           jne 0x5672
0x00005648      4585ed         test r13d, r13d
0x0000564b      7453           je 0x56a0
0x0000564d      be2f000000     mov esi, 0x2f                           ; '/'
0x00005652      4889ef         mov rdi, rbp
0x00005655      e876cfffff     call sym.imp.strrchr
0x0000565a      4885c0         test rax, rax
0x0000565d      7441           je 0x56a0
0x0000565f      c60000         mov byte [rax], 0
0x00005662      4889ee         mov rsi, rbp
0x00005665      4c89e7         mov rdi, r12
0x00005668      e8832c0000     call sym.hash_lookup
0x0000566d      4885c0         test rax, rax
0x00005670      74d6           je 0x5648
0x00005672      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/exclude.c:-142
0x00005674      4889ef         mov rdi, rbp
0x00005677      e894d3ffff     call sym..plt.got
0x0000567c      418b460c       mov eax, dword [r14 + 0xc]
0x00005680      c1e81d         shr eax, 0x1d
0x00005683      83f001         xor eax, 1
0x00005686      83e001         and eax, 1                              ; ../coreutils-8.31/lib/exclude.c:-213
0x00005689      31d8           xor eax, ebx
0x0000568b      4883c418       add rsp, 0x18
0x0000568f      5b             pop rbx
0x00005690      5d             pop rbp
0x00005691      415c           pop r12
0x00005693      415d           pop r13
0x00005695      415e           pop r14
0x00005697      415f           pop r15
0x00005699      c3             ret
0x0000569a      660f1f440000   nop word [rax + rax]
0x000056a0      41f7c7000000.  test r15d, 0x40000000
0x000056a7      7527           jne 0x56d0
0x000056a9      be2f000000     mov esi, 0x2f                           ; '/'
0x000056ae      4889df         mov rdi, rbx
0x000056b1      e8eaceffff     call sym.imp.strchr
0x000056b6      4885c0         test rax, rax
0x000056b9      7415           je 0x56d0
0x000056bb      4883c001       add rax, 1
0x000056bf      4889c3         mov rbx, rax
0x000056c2      0f8565ffffff   jne 0x562d
0x000056c8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/exclude.c:-226
0x000056d0      498b06         mov rax, qword [r14]
0x000056d3      4885c0         test rax, rax
0x000056d6      0f848f000000   je 0x576b
0x000056dc      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/exclude.c:-225
0x000056df      418b4608       mov eax, dword [r14 + 8]
0x000056e3      85c0           test eax, eax
0x000056e5      0f8425ffffff   je 0x5610
0x000056eb      4d8b6620       mov r12, qword [r14 + 0x20]             ; ../coreutils-8.31/lib/exclude.c:-537
0x000056ef      498b5e10       mov rbx, qword [r14 + 0x10]
0x000056f3      4d85e4         test r12, r12
0x000056f6      74d8           je 0x56d0
0x000056f8      4883c308       add rbx, 8                              ; ../coreutils-8.31/lib/exclude.c:-536
0x000056fc      4531ed         xor r13d, r13d
0x000056ff      eb29           jmp 0x572a                              ; ../coreutils-8.31/lib/exclude.c:-535
0x00005701      0f1f80000000.  nop dword [rax]
0x00005708      488b742408     mov rsi, qword [rsp + 8]
0x0000570d      488b3b         mov rdi, qword [rbx]                    ; ../coreutils-8.31/lib/exclude.c:-259
0x00005710      e8fbfdffff     call sym.exclude_fnmatch
0x00005715      84c0           test al, al
0x00005717      0f8555ffffff   jne 0x5672
0x0000571d      4983c501       add r13, 1
0x00005721      4883c348       add rbx, 0x48
0x00005725      4d39ec         cmp r12, r13
0x00005728      74a6           je 0x56d0
0x0000572a      8b53f8         mov edx, dword [rbx - 8]
0x0000572d      f7c200000008   test edx, 0x8000000                     ; ../coreutils-8.31/lib/exclude.c:-256
0x00005733      74d3           je 0x5708
0x00005735      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/exclude.c:-254
0x0000573a      4531c0         xor r8d, r8d
0x0000573d      31c9           xor ecx, ecx
0x0000573f      31d2           xor edx, edx
0x00005741      4889df         mov rdi, rbx
0x00005744      e8e7940100     call sym.rpl_regexec
0x00005749      85c0           test eax, eax                           ; ../coreutils-8.31/lib/exclude.c:-250
0x0000574b      0f94c0         sete al
0x0000574e      ebc5           jmp 0x5715
0x00005750      488b7c2408     mov rdi, qword [rsp + 8]
0x00005755      e8d6cdffff     call sym.imp.strlen
0x0000575a      488d7801       lea rdi, [rax + 1]
0x0000575e      e87d720000     call sym.xmalloc                        ; ../coreutils-8.31/lib/exclude.c:-242
0x00005763      4889c5         mov rbp, rax
0x00005766      e9aefeffff     jmp 0x5619
0x0000576b      bb01000000     mov ebx, 1
0x00005770      e9fffeffff     jmp 0x5674
0x00005775      90             nop
0x00005776      662e0f1f8400.  nop word cs:[rax + rax]
;-- add_exclude:
0x00005780      4157           push r15
0x00005782      4156           push r14
0x00005784      4155           push r13
0x00005786      4154           push r12
0x00005788      4989f5         mov r13, rsi
0x0000578b      55             push rbp
0x0000578c      53             push rbx
0x0000578d      89d5           mov ebp, edx                            ; ../coreutils-8.31/lib/exclude.c:-223
0x0000578f      4989fc         mov r12, rdi
0x00005792      4883ec08       sub rsp, 8
0x00005796      81e200000018   and edx, 0x18000000
0x0000579c      488b1f         mov rbx, qword [rdi]
0x0000579f      0f84db000000   je 0x5880
0x000057a5      89ee           mov esi, ebp                            ; ../coreutils-8.31/lib/exclude.c:-204
0x000057a7      4c89ef         mov rdi, r13
0x000057aa      e8d1fbffff     call sym.fnmatch_pattern_has_wildcards
0x000057af      84c0           test al, al
0x000057b1      0f84c9000000   je 0x5880
0x000057b7      4885db         test rbx, rbx
0x000057ba      740a           je 0x57c6
0x000057bc      837b0801       cmp dword [rbx + 8], 1
0x000057c0      0f8422020000   je 0x59e8
0x000057c6      bf28000000     mov edi, 0x28                           ; ../coreutils-8.31/lib/exclude.c:-537 ; '('
0x000057cb      e8c0730000     call sym.xzalloc
0x000057d0      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/exclude.c:-535
0x000057d3      c74008010000.  mov dword [rax + 8], 1                  ; ../coreutils-8.31/lib/exclude.c:-528
0x000057da      89680c         mov dword [rax + 0xc], ebp
0x000057dd      498b0424       mov rax, qword [r12]
0x000057e1      49891c24       mov qword [r12], rbx
0x000057e5      488903         mov qword [rbx], rax
0x000057e8      488b4b20       mov rcx, qword [rbx + 0x20]
0x000057ec      483b4b18       cmp rcx, qword [rbx + 0x18]
0x000057f0      488b7b10       mov rdi, qword [rbx + 0x10]
0x000057f4      0f8406020000   je 0x5a00
0x000057fa      488d04c9       lea rax, [rcx + rcx*8]
0x000057fe      4c8d7901       lea r15, [rcx + 1]
0x00005802      f7c500000008   test ebp, 0x8000000
0x00005808      4c8d34c7       lea r14, [rdi + rax*8]
0x0000580c      4c897b20       mov qword [rbx + 0x20], r15
0x00005810      41892e         mov dword [r14], ebp
0x00005813      0f8487010000   je 0x59a0
0x00005819      4189ec         mov r12d, ebp
0x0000581c      41c1fc03       sar r12d, 3
0x00005820      4183e402       and r12d, 2
0x00005824      4183cc09       or r12d, 9
0x00005828      83e508         and ebp, 8                              ; ../coreutils-8.31/lib/exclude.c:-198
0x0000582b      0f843f020000   je 0x5a70                               ; ../coreutils-8.31/lib/exclude.c:-197
0x00005831      4c89ef         mov rdi, r13
0x00005834      e8f7ccffff     call sym.imp.strlen
0x00005839      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/exclude.c:-194
0x0000583c      742a           je 0x5868
0x0000583e      41807c05ff2f   cmp byte [r13 + rax - 1], 0x2f
0x00005844      488d68ff       lea rbp, [rax - 1]
0x00005848      7419           je 0x5863
0x0000584a      e943020000     jmp 0x5a92
0x0000584f      90             nop
0x00005850      41807c2dff2f   cmp byte [r13 + rbp - 1], 0x2f
0x00005856      488d45ff       lea rax, [rbp - 1]
0x0000585a      0f8538020000   jne 0x5a98
0x00005860      4889c5         mov rbp, rax
0x00005863      4885ed         test rbp, rbp
0x00005866      75e8           jne 0x5850
0x00005868      498d47ff       lea rax, [r15 - 1]
0x0000586c      48894320       mov qword [rbx + 0x20], rax
0x00005870      4883c408       add rsp, 8
0x00005874      5b             pop rbx
0x00005875      5d             pop rbp                                 ; ../coreutils-8.31/lib/exclude.c:-198
0x00005876      415c           pop r12
0x00005878      415d           pop r13
0x0000587a      415e           pop r14
0x0000587c      415f           pop r15
0x0000587e      c3             ret
0x0000587f      90             nop
0x00005880      4885db         test rbx, rbx
0x00005883      740b           je 0x5890
0x00005885      8b5308         mov edx, dword [rbx + 8]                ; ../coreutils-8.31/lib/exclude.c:-609
0x00005888      85d2           test edx, edx
0x0000588a      0f84a8000000   je 0x5938
0x00005890      bf28000000     mov edi, 0x28                           ; ../coreutils-8.31/lib/exclude.c:-659 ; '('
0x00005895      e8f6720000     call sym.xzalloc
0x0000589a      488d15fff6ff.  lea rdx, sym.string_compare_ci          ; 0x4fa0 ; "H\x83\xec\b\xe8\x97O"
0x000058a1      4889c3         mov rbx, rax
0x000058a4      c74008000000.  mov dword [rax + 8], 0
0x000058ab      89680c         mov dword [rax + 0xc], ebp
0x000058ae      488d0d0bf7ff.  lea rcx, sym.string_compare             ; 0x4fc0 ; "H\x83\xec\b\xe8\a\xd7\xff\xff\x85\xc0\x0f\x94\xc0H\x83\xc4\b\xc3\x0f\x1f"
0x000058b5      89e8           mov eax, ebp
0x000058b7      83e010         and eax, 0x10
0x000058ba      488d05fff7ff.  lea rax, sym.string_hasher_ci           ; 0x50c0 ; "AWAVE1\xf6AUATL\x8d%n\xc9\x01"
0x000058c1      4c8d05c8f6ff.  lea r8, sym.string_free                 ; 0x4f90
0x000058c8      480f45ca       cmovne rcx, rdx
0x000058cc      488d150df7ff.  lea rdx, sym.string_hasher              ; 0x4fe0
0x000058d3      480f45d0       cmovne rdx, rax
0x000058d7      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/exclude.c:-264
0x000058d9      31ff           xor edi, edi
0x000058db      e8802c0000     call sym.hash_initialize
0x000058e0      48894310       mov qword [rbx + 0x10], rax
0x000058e4      498b0424       mov rax, qword [r12]                    ; ../coreutils-8.31/lib/exclude.c:-708
0x000058e8      49891c24       mov qword [r12], rbx                    ; ../coreutils-8.31/lib/exclude.c:-706
0x000058ec      488903         mov qword [rbx], rax
0x000058ef      4c89ef         mov rdi, r13
0x000058f2      81e502000010   and ebp, 0x10000002
0x000058f8      e813730000     call sym.xstrdup
0x000058fd      81fd00000010   cmp ebp, 0x10000000
0x00005903      4989c4         mov r12, rax
0x00005906      7448           je 0x5950
0x00005908      488b7b10       mov rdi, qword [rbx + 0x10]
0x0000590c      4c89e6         mov rsi, r12
0x0000590f      e84c340000     call sym.hash_insert                    ; ../coreutils-8.31/lib/exclude.c:-316
0x00005914      4939c4         cmp r12, rax
0x00005917      0f8453ffffff   je 0x5870
0x0000591d      4883c408       add rsp, 8
0x00005921      4c89e7         mov rdi, r12
0x00005924      5b             pop rbx
0x00005925      5d             pop rbp
0x00005926      415c           pop r12
0x00005928      415d           pop r13
0x0000592a      415e           pop r14
0x0000592c      415f           pop r15
0x0000592e      e9ddd0ffff     jmp sym..plt.got
0x00005933      0f1f440000     nop dword [rax + rax]
0x00005938      8b430c         mov eax, dword [rbx + 0xc]
0x0000593b      31e8           xor eax, ebp
0x0000593d      a918000060     test eax, 0x60000018
0x00005942      74ab           je 0x58ef
0x00005944      e947ffffff     jmp 0x5890
0x00005949      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:-636
0x00005950      4889c2         mov rdx, rax
0x00005953      4889c1         mov rcx, rax
0x00005956      eb16           jmp 0x596e
0x00005958      0f1f84000000.  nop dword [rax + rax]
0x00005960      4883c101       add rcx, 1
0x00005964      84c0           test al, al
0x00005966      8841ff         mov byte [rcx - 1], al
0x00005969      749d           je 0x5908
0x0000596b      4889f2         mov rdx, rsi
0x0000596e      0fb602         movzx eax, byte [rdx]
0x00005971      488d7201       lea rsi, [rdx + 1]
0x00005975      3c5c           cmp al, 0x5c
0x00005977      75e7           jne 0x5960
0x00005979      807a0100       cmp byte [rdx + 1], 0
0x0000597d      7411           je 0x5990
0x0000597f      0fb64201       movzx eax, byte [rdx + 1]
0x00005983      488d7202       lea rsi, [rdx + 2]
0x00005987      ebd7           jmp 0x5960
0x00005989      0f1f80000000.  nop dword [rax]
0x00005990      4883c101       add rcx, 1
0x00005994      c641ff5c       mov byte [rcx - 1], 0x5c                ; '\'
                                                                       ; [0x5c:1]=0
0x00005998      ebd1           jmp 0x596b
0x0000599a      660f1f440000   nop word [rax + rax]
0x000059a0      81e500000004   and ebp, 0x4000000
0x000059a6      7426           je 0x59ce
0x000059a8      4c89ef         mov rdi, r13
0x000059ab      e860720000     call sym.xstrdup
0x000059b0      bf10000000     mov edi, 0x10
0x000059b5      4989c5         mov r13, rax
0x000059b8      e823700000     call sym.xmalloc
0x000059bd      498b542408     mov rdx, qword [r12 + 8]
0x000059c2      4c896808       mov qword [rax + 8], r13
0x000059c6      4989442408     mov qword [r12 + 8], rax                ; ../coreutils-8.31/lib/exclude.c:-284
0x000059cb      488910         mov qword [rax], rdx
0x000059ce      4d896e08       mov qword [r14 + 8], r13
0x000059d2      4883c408       add rsp, 8                              ; string_fortified.h:-809
0x000059d6      5b             pop rbx
0x000059d7      5d             pop rbp                                 ; ../coreutils-8.31/lib/exclude.c:-281
0x000059d8      415c           pop r12
0x000059da      415d           pop r13
0x000059dc      415e           pop r14
0x000059de      415f           pop r15
0x000059e0      c3             ret
0x000059e1      0f1f80000000.  nop dword [rax]
0x000059e8      8b430c         mov eax, dword [rbx + 0xc]
0x000059eb      31e8           xor eax, ebp
0x000059ed      a900000020     test eax, 0x20000000
0x000059f2      0f84f0fdffff   je 0x57e8
0x000059f8      e9c9fdffff     jmp 0x57c6
0x000059fd      0f1f00         nop dword [rax]
0x00005a00      4885ff         test rdi, rdi
0x00005a03      743b           je 0x5a40
0x00005a05      48b883f612da.  movabs rax, 0x12f684bda12f683
0x00005a0f      4839c1         cmp rcx, rax
0x00005a12      7755           ja 0x5a69                               ; ../coreutils-8.31/lib/exclude.c:-228
0x00005a14      4889c8         mov rax, rcx
0x00005a17      48d1e8         shr rax, 1
0x00005a1a      488d4c0101     lea rcx, [rcx + rax + 1]
0x00005a1f      488d34c9       lea rsi, [rcx + rcx*8]
0x00005a23      48894b18       mov qword [rbx + 0x18], rcx
0x00005a27      48c1e603       shl rsi, 3
0x00005a2b      e810700000     call sym.xrealloc
0x00005a30      488b4b20       mov rcx, qword [rbx + 0x20]
0x00005a34      4889c7         mov rdi, rax
0x00005a37      48894310       mov qword [rbx + 0x10], rax
0x00005a3b      e9bafdffff     jmp 0x57fa
0x00005a40      4885c9         test rcx, rcx
0x00005a43      b801000000     mov eax, 1
0x00005a48      ba48000000     mov edx, 0x48                           ; 'H'
0x00005a4d      480f44c8       cmove rcx, rax
0x00005a51      4889d0         mov rax, rdx
0x00005a54      31f6           xor esi, esi
0x00005a56      48f7e1         mul rcx                                 ; ../coreutils-8.31/lib/exclude.c:-223
0x00005a59      0f8085000000   jo 0x5ae4
0x00005a5f      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/exclude.c:-215
0x00005a62      7805           js 0x5a69
0x00005a64      4885f6         test rsi, rsi
0x00005a67      74b6           je 0x5a1f
0x00005a69      e8c2710000     call sym.xalloc_die
0x00005a6e      6690           nop
0x00005a70      498d7e08       lea rdi, [r14 + 8]
0x00005a74      4489e2         mov edx, r12d
0x00005a77      4c89ee         mov rsi, r13
0x00005a7a      e8c18f0100     call sym.rpl_regcomp
0x00005a7f      89c5           mov ebp, eax
0x00005a81      85ed           test ebp, ebp
0x00005a83      0f84e7fdffff   je 0x5870
0x00005a89      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005a8d      e9d6fdffff     jmp 0x5868
0x00005a92      4889c5         mov rbp, rax
0x00005a95      0f1f00         nop dword [rax]
0x00005a98      488d7d07       lea rdi, [rbp + 7]
0x00005a9c      e83f6f0000     call sym.xmalloc
0x00005aa1      4889ea         mov rdx, rbp
0x00005aa4      4989c7         mov r15, rax
0x00005aa7      4c89ee         mov rsi, r13
0x00005aaa      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/exclude.c:-218
0x00005aad      4c01fd         add rbp, r15                            ; stdio.h:-778
0x00005ab0      e85bccffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/exclude.c:-218
0x00005ab5      498d7e08       lea rdi, [r14 + 8]
0x00005ab9      b8293f0000     mov eax, 0x3f29                         ; ')?'
0x00005abe      c74500282f2e.  mov dword [rbp], 0x2a2e2f28             ; '(/.*'
0x00005ac5      66894504       mov word [rbp + 4], ax
0x00005ac9      c6450600       mov byte [rbp + 6], 0
0x00005acd      4489e2         mov edx, r12d
0x00005ad0      4c89fe         mov rsi, r15                            ; ../coreutils-8.31/lib/exclude.c:-210
0x00005ad3      e8688f0100     call sym.rpl_regcomp
0x00005ad8      4c89ff         mov rdi, r15
0x00005adb      89c5           mov ebp, eax
0x00005add      e82ecfffff     call sym..plt.got
0x00005ae2      eb9d           jmp 0x5a81
0x00005ae4      be01000000     mov esi, 1
0x00005ae9      e971ffffff     jmp 0x5a5f
0x00005aee      6690           nop
;-- add_exclude_fp:
0x00005af0      4157           push r15                                ; ../coreutils-8.31/lib/exclude.c:-207
0x00005af2      4156           push r14
0x00005af4      4989d7         mov r15, rdx                            ; ../coreutils-8.31/lib/exclude.c:-206
0x00005af7      4155           push r13                                ; ../coreutils-8.31/lib/exclude.c:-207
0x00005af9      4154           push r12
0x00005afb      4989f5         mov r13, rsi                            ; ../coreutils-8.31/lib/exclude.c:-206
0x00005afe      55             push rbp
0x00005aff      53             push rbx
0x00005b00      4489c5         mov ebp, r8d
0x00005b03      4531f6         xor r14d, r14d
0x00005b06      31db           xor ebx, ebx
0x00005b08      4883ec48       sub rsp, 0x48                           ; ../coreutils-8.31/lib/exclude.c:-709
0x00005b0c      64488b042528.  mov rax, qword fs:[0x28]
0x00005b15      4889442438     mov qword [rsp + 0x38], rax
0x00005b1a      31c0           xor eax, eax
0x00005b1c      488d442430     lea rax, [rsp + 0x30]                   ; ../coreutils-8.31/lib/exclude.c:-206
0x00005b21      48897c2408     mov qword [rsp + 8], rdi
0x00005b26      894c2418       mov dword [rsp + 0x18], ecx             ; ../coreutils-8.31/lib/exclude.c:-706
0x00005b2a      4489442420     mov dword [rsp + 0x20], r8d             ; ../coreutils-8.31/lib/exclude.c:-707
0x00005b2f      4c894c2410     mov qword [rsp + 0x10], r9              ; ../coreutils-8.31/lib/exclude.c:-195
0x00005b34      48c744243000.  mov qword [rsp + 0x30], 0
0x00005b3d      48890424       mov qword [rsp], rax
0x00005b41      eb0d           jmp 0x5b50
0x00005b43      0f1f440000     nop dword [rax + rax]
0x00005b48      46882433       mov byte [rbx + r14], r12b
0x00005b4c      4983c601       add r14, 1
0x00005b50      498b4708       mov rax, qword [r15 + 8]
0x00005b54      493b4710       cmp rax, qword [r15 + 0x10]
0x00005b58      7326           jae 0x5b80
0x00005b5a      488d5001       lea rdx, [rax + 1]
0x00005b5e      49895708       mov qword [r15 + 8], rdx
0x00005b62      440fb620       movzx r12d, byte [rax]
0x00005b66      4c39742430     cmp qword [rsp + 0x30], r14
0x00005b6b      75db           jne 0x5b48
0x00005b6d      488b3424       mov rsi, qword [rsp]
0x00005b71      4889df         mov rdi, rbx
0x00005b74      e8c76f0000     call sym.x2realloc
0x00005b79      4889c3         mov rbx, rax
0x00005b7c      ebca           jmp 0x5b48
0x00005b7e      6690           nop
0x00005b80      4c89ff         mov rdi, r15
0x00005b83      e848c8ffff     call sym.imp.__uflow
0x00005b88      83f8ff         cmp eax, 0xffffffff
0x00005b8b      4189c4         mov r12d, eax
0x00005b8e      75d6           jne 0x5b66
0x00005b90      458b27         mov r12d, dword [r15]
0x00005b93      e878c8ffff     call sym.imp.__errno_location
0x00005b98      c744241c0000.  mov dword [rsp + 0x1c], 0
0x00005ba0      4889442428     mov qword [rsp + 0x28], rax
0x00005ba5      4183e420       and r12d, 0x20                          ; "@"
0x00005ba9      4585e4         test r12d, r12d
0x00005bac      7411           je 0x5bbf
0x00005bae      448b20         mov r12d, dword [rax]
0x00005bb1      31c0           xor eax, eax
0x00005bb3      4585e4         test r12d, r12d
0x00005bb6      0f95c0         setne al
0x00005bb9      f7d8           neg eax
0x00005bbb      8944241c       mov dword [rsp + 0x1c], eax
0x00005bbf      498d7601       lea rsi, [r14 + 1]
0x00005bc3      4889df         mov rdi, rbx
0x00005bc6      e8756e0000     call sym.xrealloc
0x00005bcb      4989c7         mov r15, rax
0x00005bce      8b442420       mov eax, dword [rsp + 0x20]
0x00005bd2      4d85f6         test r14, r14
0x00005bd5      43880437       mov byte [r15 + r14], al
0x00005bd9      0f84c1000000   je 0x5ca0
0x00005bdf      31db           xor ebx, ebx
0x00005be1      43384437ff     cmp byte [r15 + r14 - 1], al
0x00005be6      bf10000000     mov edi, 0x10
0x00005beb      0f95c3         setne bl
0x00005bee      4c01f3         add rbx, r14
0x00005bf1      e8ea6d0000     call sym.xmalloc
0x00005bf6      498b4d08       mov rcx, qword [r13 + 8]
0x00005bfa      4c01fb         add rbx, r15
0x00005bfd      4c897808       mov qword [rax + 8], r15
0x00005c01      4939df         cmp r15, rbx
0x00005c04      49894508       mov qword [r13 + 8], rax
0x00005c08      488908         mov qword [rax], rcx
0x00005c0b      7362           jae 0x5c6f
0x00005c0d      400fb6c5       movzx eax, bpl
0x00005c11      4c89fe         mov rsi, r15
0x00005c14      4889442420     mov qword [rsp + 0x20], rax
0x00005c19      eb0d           jmp 0x5c28
0x00005c1b      0f1f440000     nop dword [rax + rax]
0x00005c20      4c39f3         cmp rbx, r14                            ; ../coreutils-8.31/lib/exclude.c:-177
0x00005c23      4d89f7         mov r15, r14
0x00005c26      7447           je 0x5c6f
0x00005c28      41382f         cmp byte [r15], bpl
0x00005c2b      4d8d7701       lea r14, [r15 + 1]
0x00005c2f      75ef           jne 0x5c20
0x00005c31      48893424       mov qword [rsp], rsi
0x00005c35      e8b6cdffff     call sym.imp.__ctype_b_loc
0x00005c3a      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00005c3f      488b00         mov rax, qword [rax]
0x00005c42      488b3424       mov rsi, qword [rsp]
0x00005c46      f644480120     test byte [rax + rcx*2 + 1], 0x20
0x00005c4b      7573           jne 0x5cc0
0x00005c4d      41c60700       mov byte [r15], 0
0x00005c51      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00005c56      4c89ef         mov rdi, r13
0x00005c59      8b542418       mov edx, dword [rsp + 0x18]
0x00005c5d      488b442408     mov rax, qword [rsp + 8]
0x00005c62      ffd0           call rax
0x00005c64      4c39f3         cmp rbx, r14
0x00005c67      4c89f6         mov rsi, r14
0x00005c6a      4d89f7         mov r15, r14
0x00005c6d      75b9           jne 0x5c28
0x00005c6f      488b442428     mov rax, qword [rsp + 0x28]
0x00005c74      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005c79      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005c82      448920         mov dword [rax], r12d
0x00005c85      8b44241c       mov eax, dword [rsp + 0x1c]
0x00005c89      7573           jne 0x5cfe                              ; ../coreutils-8.31/lib/exclude.c:-152
0x00005c8b      4883c448       add rsp, 0x48
0x00005c8f      5b             pop rbx
0x00005c90      5d             pop rbp
0x00005c91      415c           pop r12
0x00005c93      415d           pop r13
0x00005c95      415e           pop r14
0x00005c97      415f           pop r15
0x00005c99      c3             ret
0x00005c9a      660f1f440000   nop word [rax + rax]
0x00005ca0      bf10000000     mov edi, 0x10
0x00005ca5      e8366d0000     call sym.xmalloc
0x00005caa      498b5508       mov rdx, qword [r13 + 8]
0x00005cae      4c897808       mov qword [rax + 8], r15
0x00005cb2      49894508       mov qword [r13 + 8], rax
0x00005cb6      488910         mov qword [rax], rdx
0x00005cb9      ebb4           jmp 0x5c6f
0x00005cbb      0f1f440000     nop dword [rax + rax]
0x00005cc0      4939f7         cmp r15, rsi
0x00005cc3      749f           je 0x5c64
0x00005cc5      410fb64efe     movzx ecx, byte [r14 - 2]
0x00005cca      f644480120     test byte [rax + rcx*2 + 1], 0x20       ; ../coreutils-8.31/lib/exclude.c:-148
0x00005ccf      751f           jne 0x5cf0
0x00005cd1      e977ffffff     jmp 0x5c4d
0x00005cd6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005ce0      410fb64fff     movzx ecx, byte [r15 - 1]
0x00005ce5      f644480120     test byte [rax + rcx*2 + 1], 0x20
0x00005cea      0f845dffffff   je 0x5c4d
0x00005cf0      4983ef01       sub r15, 1
0x00005cf4      4939f7         cmp r15, rsi
0x00005cf7      75e7           jne 0x5ce0
0x00005cf9      e966ffffff     jmp 0x5c64
0x00005cfe      e85dc8ffff     call sym.imp.__stack_chk_fail
0x00005d03      0f1f00         nop dword [rax]
0x00005d06      662e0f1f8400.  nop word cs:[rax + rax]
;-- add_exclude_file:
0x00005d10      4154           push r12
0x00005d12      55             push rbp
0x00005d13      4589c4         mov r12d, r8d
0x00005d16      53             push rbx
0x00005d17      4889f5         mov rbp, rsi
0x00005d1a      4883ec10       sub rsp, 0x10
0x00005d1e      803a2d         cmp byte [rdx], 0x2d
0x00005d21      48897c2408     mov qword [rsp + 8], rdi
0x00005d26      7458           je 0x5d80
0x00005d28      488d35e8ca01.  lea rsi, [0x00022817]                   ; "r"
0x00005d2f      4889d7         mov rdi, rdx
0x00005d32      894c2404       mov dword [rsp + 4], ecx
0x00005d36      e895cbffff     call sym.imp.fopen
0x00005d3b      4885c0         test rax, rax
0x00005d3e      4889c3         mov rbx, rax
0x00005d41      8b4c2404       mov ecx, dword [rsp + 4]
0x00005d45      7469           je 0x5db0
0x00005d47      4c8d4c2408     lea r9, [rsp + 8]
0x00005d4c      488d3d2df2ff.  lea rdi, sym.call_addfn                 ; 0x4f80
0x00005d53      4889ee         mov rsi, rbp
0x00005d56      450fbec4       movsx r8d, r12b
0x00005d5a      4889c2         mov rdx, rax
0x00005d5d      e88efdffff     call sym.add_exclude_fp
0x00005d62      4889df         mov rdi, rbx
0x00005d65      89c5           mov ebp, eax
0x00005d67      e8347f0000     call sym.rpl_fclose
0x00005d6c      85c0           test eax, eax
0x00005d6e      7540           jne 0x5db0
0x00005d70      4883c410       add rsp, 0x10
0x00005d74      89e8           mov eax, ebp
0x00005d76      5b             pop rbx
0x00005d77      5d             pop rbp
0x00005d78      415c           pop r12
0x00005d7a      c3             ret
0x00005d7b      0f1f440000     nop dword [rax + rax]
0x00005d80      807a0100       cmp byte [rdx + 1], 0
0x00005d84      75a2           jne 0x5d28
0x00005d86      488b15232322.  mov rdx, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2280b0:8]=0
0x00005d8d      4c8d4c2408     lea r9, [rsp + 8]
0x00005d92      488d3de7f1ff.  lea rdi, sym.call_addfn                 ; 0x4f80
0x00005d99      450fbec0       movsx r8d, r8b
0x00005d9d      e84efdffff     call sym.add_exclude_fp
0x00005da2      4883c410       add rsp, 0x10
0x00005da6      89c5           mov ebp, eax
0x00005da8      89e8           mov eax, ebp
0x00005daa      5b             pop rbx
0x00005dab      5d             pop rbp
0x00005dac      415c           pop r12
0x00005dae      c3             ret
0x00005daf      90             nop
0x00005db0      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x00005db5      ebb9           jmp 0x5d70
0x00005db7      660f1f840000.  nop word [rax + rax]
;-- fwrite_lowcase:
0x00005dc0      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/nstrftime.c:298
0x00005dc3      744b           je 0x5e10
0x00005dc5      4155           push r13
0x00005dc7      4154           push r12
0x00005dc9      4989fc         mov r12, rdi
0x00005dcc      55             push rbp
0x00005dcd      53             push rbx
0x00005dce      4889d5         mov rbp, rdx
0x00005dd1      4889f3         mov rbx, rsi
0x00005dd4      4883ec08       sub rsp, 8
0x00005dd8      4801dd         add rbp, rbx
0x00005ddb      e800ccffff     call sym.imp.__ctype_tolower_loc        ; ../coreutils-8.31/lib/nstrftime.c:301
0x00005de0      4989c5         mov r13, rax
0x00005de3      0f1f440000     nop dword [rax + rax]
0x00005de8      0fb60b         movzx ecx, byte [rbx]
0x00005deb      498b4500       mov rax, qword [r13]
0x00005def      4c89e6         mov rsi, r12
0x00005df2      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/nstrftime.c:302
0x00005df6      8b3c88         mov edi, dword [rax + rcx*4]            ; ../coreutils-8.31/lib/nstrftime.c:301
0x00005df9      e862c8ffff     call sym.imp.fputc
0x00005dfe      4839eb         cmp rbx, rbp                            ; ../coreutils-8.31/lib/nstrftime.c:299
0x00005e01      75e5           jne 0x5de8
0x00005e03      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/nstrftime.c:304
0x00005e07      5b             pop rbx
0x00005e08      5d             pop rbp
0x00005e09      415c           pop r12
0x00005e0b      415d           pop r13
0x00005e0d      c3             ret
0x00005e0e      6690           nop
0x00005e10      f3c3           ret
0x00005e12      0f1f4000       nop dword [rax]
0x00005e16      662e0f1f8400.  nop word cs:[rax + rax]
;-- fwrite_uppcase:
0x00005e20      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/nstrftime.c:308
0x00005e23      744b           je 0x5e70
0x00005e25      4155           push r13
0x00005e27      4154           push r12
0x00005e29      4989fc         mov r12, rdi
0x00005e2c      55             push rbp
0x00005e2d      53             push rbx
0x00005e2e      4889d5         mov rbp, rdx
0x00005e31      4889f3         mov rbx, rsi
0x00005e34      4883ec08       sub rsp, 8
0x00005e38      4801dd         add rbp, rbx
0x00005e3b      e880c5ffff     call sym.imp.__ctype_toupper_loc        ; ../coreutils-8.31/lib/nstrftime.c:311
0x00005e40      4989c5         mov r13, rax
0x00005e43      0f1f440000     nop dword [rax + rax]
0x00005e48      0fb60b         movzx ecx, byte [rbx]
0x00005e4b      498b4500       mov rax, qword [r13]
0x00005e4f      4c89e6         mov rsi, r12
0x00005e52      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/nstrftime.c:312
0x00005e56      8b3c88         mov edi, dword [rax + rcx*4]            ; ../coreutils-8.31/lib/nstrftime.c:311
0x00005e59      e802c8ffff     call sym.imp.fputc
0x00005e5e      4839eb         cmp rbx, rbp                            ; ../coreutils-8.31/lib/nstrftime.c:309
0x00005e61      75e5           jne 0x5e48
0x00005e63      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/nstrftime.c:314
0x00005e67      5b             pop rbx
0x00005e68      5d             pop rbp
0x00005e69      415c           pop r12
0x00005e6b      415d           pop r13
0x00005e6d      c3             ret
0x00005e6e      6690           nop
0x00005e70      f3c3           ret
0x00005e72      0f1f4000       nop dword [rax]
0x00005e76      662e0f1f8400.  nop word cs:[rax + rax]
;-- __strftime_internal:
0x00005e80      4157           push r15                                ; ../coreutils-8.31/lib/nstrftime.c:452
0x00005e82      4156           push r14
0x00005e84      4989f2         mov r10, rsi                            ; ../coreutils-8.31/lib/nstrftime.c:332
0x00005e87      4155           push r13
0x00005e89      4154           push r12
0x00005e8b      4989fc         mov r12, rdi
0x00005e8e      55             push rbp
0x00005e8f      53             push rbx
0x00005e90      4489cd         mov ebp, r9d
0x00005e93      4881ecb80400.  sub rsp, 0x4b8
0x00005e9a      4c8b6a30       mov r13, qword [rdx + 0x30]
0x00005e9e      448b7208       mov r14d, dword [rdx + 8]
0x00005ea2      488b8424f004.  mov rax, qword [rsp + 0x4f0]
0x00005eaa      48891424       mov qword [rsp], rdx
0x00005eae      4489442424     mov dword [rsp + 0x24], r8d
0x00005eb3      884c2423       mov byte [rsp + 0x23], cl
0x00005eb7      4889442418     mov qword [rsp + 0x18], rax
0x00005ebc      488b8424f804.  mov rax, qword [rsp + 0x4f8]
0x00005ec4      4889442410     mov qword [rsp + 0x10], rax
0x00005ec9      64488b042528.  mov rax, qword fs:[0x28]
0x00005ed2      48898424a804.  mov qword [rsp + 0x4a8], rax
0x00005eda      31c0           xor eax, eax
0x00005edc      488d05fec001.  lea rax, [0x00021fe1]
0x00005ee3      4d85ed         test r13, r13
0x00005ee6      4c0f44e8       cmove r13, rax
0x00005eea      4183fe0c       cmp r14d, 0xc
0x00005eee      0f8e54010000   jle 0x6048
0x00005ef4      4183ee0c       sub r14d, 0xc
0x00005ef8      410fb602       movzx eax, byte [r10]
0x00005efc      4531ff         xor r15d, r15d
0x00005eff      84c0           test al, al
0x00005f01      743f           je 0x5f42
0x00005f03      3c25           cmp al, 0x25
0x00005f05      4c89d3         mov rbx, r10
0x00005f08      4489742430     mov dword [rsp + 0x30], r14d
0x00005f0d      4c896c2428     mov qword [rsp + 0x28], r13
0x00005f12      4c63d5         movsxd r10, ebp
0x00005f15      0f8490000000   je 0x5fab
0x00005f1b      4585d2         test r10d, r10d                         ; ../coreutils-8.31/lib/nstrftime.c:216
0x00005f1e      41be00000000   mov r14d, 0
0x00005f24      b801000000     mov eax, 1
0x00005f29      4d0f49f2       cmovns r14, r10
0x00005f2d      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/nstrftime.c:-21
0x00005f30      4c0f44f0       cmove r14, rax
0x00005f34      4c89f8         mov rax, r15
0x00005f37      48f7d0         not rax
0x00005f3a      4c39f0         cmp rax, r14                            ; ../coreutils-8.31/lib/nstrftime.c:-128
0x00005f3d      7731           ja 0x5f70                               ; ../coreutils-8.31/lib/nstrftime.c:-147
0x00005f3f      4531ff         xor r15d, r15d
0x00005f42      488bbc24a804.  mov rdi, qword [rsp + 0x4a8]
0x00005f4a      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005f53      4c89f8         mov rax, r15
0x00005f56      0f851c1b0000   jne 0x7a78
0x00005f5c      4881c4b80400.  add rsp, 0x4b8
0x00005f63      5b             pop rbx
0x00005f64      5d             pop rbp
0x00005f65      415c           pop r12
0x00005f67      415d           pop r13
0x00005f69      415e           pop r14
0x00005f6b      415f           pop r15
0x00005f6d      c3             ret
0x00005f6e      6690           nop
0x00005f70      4d85e4         test r12, r12
0x00005f73      7415           je 0x5f8a
0x00005f75      4183fa01       cmp r10d, 1
0x00005f79      0f8fe1010000   jg 0x6160
0x00005f7f      0fbe3b         movsx edi, byte [rbx]
0x00005f82      4c89e6         mov rsi, r12
0x00005f85      e8d6c6ffff     call sym.imp.fputc
0x00005f8a      4d01f7         add r15, r14
0x00005f8d      4889dd         mov rbp, rbx
0x00005f90      0fb64501       movzx eax, byte [rbp + 1]               ; ../coreutils-8.31/lib/nstrftime.c:-161
0x00005f94      488d5d01       lea rbx, [rbp + 1]
0x00005f98      49c7c2ffffff.  mov r10, 0xffffffffffffffff
0x00005f9f      84c0           test al, al
0x00005fa1      749f           je 0x5f42
0x00005fa3      3c25           cmp al, 0x25
0x00005fa5      0f8570ffffff   jne 0x5f1b
0x00005fab      0fb6442423     movzx eax, byte [rsp + 0x23]
0x00005fb0      4531f6         xor r14d, r14d
0x00005fb3      c74424080000.  mov dword [rsp + 8], 0
0x00005fbb      88442434       mov byte [rsp + 0x34], al
0x00005fbf      b801000000     mov eax, 1
0x00005fc4      4883c301       add rbx, 1
0x00005fc8      440fbe1b       movsx r11d, byte [rbx]
0x00005fcc      418d4bdd       lea ecx, [r11 - 0x23]
0x00005fd0      4589dd         mov r13d, r11d
0x00005fd3      4489df         mov edi, r11d
0x00005fd6      80f93c         cmp cl, 0x3c
0x00005fd9      7734           ja 0x600f
0x00005fdb      4889c2         mov rdx, rax
0x00005fde      48be00250000.  movabs rsi, 0x1000000000002500
0x00005fe8      48d3e2         shl rdx, cl
0x00005feb      4885f2         test rdx, rsi
0x00005fee      0f857c000000   jne 0x6070
0x00005ff4      84c9           test cl, cl
0x00005ff6      0f8484000000   je 0x6080
0x00005ffc      48be00000000.  movabs rsi, 0x800000000000000           ; 576460752303423488
0x00006006      4885f2         test rdx, rsi
0x00006009      0f8581010000   jne 0x6190
0x0000600f      418d43d0       lea eax, [r11 - 0x30]
0x00006013      83f809         cmp eax, 9
0x00006016      0f8684010000   jbe 0x61a0
0x0000601c      4180fd45       cmp r13b, 0x45
0x00006020      743e           je 0x6060
0x00006022      4180fd4f       cmp r13b, 0x4f
0x00006026      7438           je 0x6060
0x00006028      4531db         xor r11d, r11d
0x0000602b      4180fd7a       cmp r13b, 0x7a
0x0000602f      775f           ja 0x6090
0x00006031      488d3500b701.  lea rsi, [0x00021738]
0x00006038      410fb6c5       movzx eax, r13b
0x0000603c      48630486       movsxd rax, dword [rsi + rax*4]
0x00006040      4801f0         add rax, rsi
0x00006043      ffe0           jmp rax
0x00006045      0f1f00         nop dword [rax]
0x00006048      4585f6         test r14d, r14d
0x0000604b      b80c000000     mov eax, 0xc
0x00006050      440f44f0       cmove r14d, eax
0x00006054      e99ffeffff     jmp 0x5ef8
0x00006059      0f1f80000000.  nop dword [rax]
0x00006060      0fbe7b01       movsx edi, byte [rbx + 1]
0x00006064      4883c301       add rbx, 1
0x00006068      4189fd         mov r13d, edi                           ; ../coreutils-8.31/lib/nstrftime.c:660
0x0000606b      ebbe           jmp 0x602b
0x0000606d      0f1f00         nop dword [rax]
0x00006070      44895c2408     mov dword [rsp + 8], r11d
0x00006075      e94affffff     jmp 0x5fc4
0x0000607a      660f1f440000   nop word [rax + rax]
0x00006080      41be01000000   mov r14d, 1
0x00006086      e939ffffff     jmp 0x5fc4
0x0000608b      488b5c2438     mov rbx, qword [rsp + 0x38]
0x00006090      488d43ff       lea rax, [rbx - 1]
0x00006094      41bd01000000   mov r13d, 1
0x0000609a      4889c2         mov rdx, rax
0x0000609d      488d40ff       lea rax, [rax - 1]
0x000060a1      4183c501       add r13d, 1
0x000060a5      80780125       cmp byte [rax + 1], 0x25
0x000060a9      75ef           jne 0x609a
0x000060ab      4585d2         test r10d, r10d
0x000060ae      b800000000     mov eax, 0
0x000060b3      4d63ed         movsxd r13, r13d
0x000060b6      410f49c2       cmovns eax, r10d
0x000060ba      4889542438     mov qword [rsp + 0x38], rdx
0x000060bf      4d89ee         mov r14, r13
0x000060c2      4898           cdqe
0x000060c4      4c89fa         mov rdx, r15
0x000060c7      4889dd         mov rbp, rbx
0x000060ca      4c39e8         cmp rax, r13
0x000060cd      48f7d2         not rdx
0x000060d0      4c0f43f0       cmovae r14, rax
0x000060d4      4c39f2         cmp rdx, r14
0x000060d7      0f8662feffff   jbe 0x5f3f
0x000060dd      4d85e4         test r12, r12
0x000060e0      746c           je 0x614e
0x000060e2      4939c5         cmp r13, rax
0x000060e5      734c           jae 0x6133
0x000060e7      8b442408       mov eax, dword [rsp + 8]
0x000060eb      4963da         movsxd rbx, r10d
0x000060ee      4c29eb         sub rbx, r13
0x000060f1      83f830         cmp eax, 0x30                           ; ../coreutils-8.31/lib/nstrftime.c:-194
0x000060f4      0f8429120000   je 0x7323
0x000060fa      83f82b         cmp eax, 0x2b
0x000060fd      0f8420120000   je 0x7323
0x00006103      31d2           xor edx, edx
0x00006105      4885db         test rbx, rbx
0x00006108      7429           je 0x6133
0x0000610a      48896c2408     mov qword [rsp + 8], rbp
0x0000610f      4889d5         mov rbp, rdx
0x00006112      660f1f440000   nop word [rax + rax]
0x00006118      4c89e6         mov rsi, r12
0x0000611b      bf20000000     mov edi, 0x20                           ; "@"
0x00006120      4883c501       add rbp, 1
0x00006124      e837c5ffff     call sym.imp.fputc
0x00006129      4839eb         cmp rbx, rbp                            ; ../coreutils-8.31/lib/nstrftime.c:-156
0x0000612c      75ea           jne 0x6118
0x0000612e      488b6c2408     mov rbp, qword [rsp + 8]
0x00006133      807c243400     cmp byte [rsp + 0x34], 0
0x00006138      0f842a110000   je 0x7268
0x0000613e      488b742438     mov rsi, qword [rsp + 0x38]
0x00006143      4c89ea         mov rdx, r13
0x00006146      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/nstrftime.c:-149
0x00006149      e8d2fcffff     call sym.fwrite_uppcase
0x0000614e      4d01f7         add r15, r14                            ; ../coreutils-8.31/lib/nstrftime.c:-145
0x00006151      e93afeffff     jmp 0x5f90
0x00006156      662e0f1f8400.  nop word cs:[rax + rax]
0x00006160      4d8d6aff       lea r13, [r10 - 1]
0x00006164      31ed           xor ebp, ebp
0x00006166      662e0f1f8400.  nop word cs:[rax + rax]
0x00006170      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/nstrftime.c:-153
0x00006173      bf20000000     mov edi, 0x20                           ; "@"
0x00006178      4883c501       add rbp, 1
0x0000617c      e8dfc4ffff     call sym.imp.fputc
0x00006181      4939ed         cmp r13, rbp
0x00006184      75ea           jne 0x6170
0x00006186      e9f4fdffff     jmp 0x5f7f
0x0000618b      0f1f440000     nop dword [rax + rax]
0x00006190      c644243401     mov byte [rsp + 0x34], 1
0x00006195      e92afeffff     jmp 0x5fc4
0x0000619a      660f1f440000   nop word [rax + rax]
0x000061a0      4531d2         xor r10d, r10d
0x000061a3      440fbe5b01     movsx r11d, byte [rbx + 1]
0x000061a8      4181facccccc.  cmp r10d, 0xccccccc
0x000061af      488d4b01       lea rcx, [rbx + 1]
0x000061b3      4589dd         mov r13d, r11d                          ; ../coreutils-8.31/lib/nstrftime.c:42
0x000061b6      418d43d0       lea eax, [r11 - 0x30]                   ; ../coreutils-8.31/lib/nstrftime.c:40
0x000061ba      7f29           jg 0x61e5
0x000061bc      0fbe13         movsx edx, byte [rbx]
0x000061bf      741f           je 0x61e0
0x000061c1      438d3492       lea esi, [r10 + r10*4]
0x000061c5      4889cb         mov rbx, rcx
0x000061c8      448d5472d0     lea r10d, [rdx + rsi*2 - 0x30]
0x000061cd      83f809         cmp eax, 9
0x000061d0      76d1           jbe 0x61a3
0x000061d2      4489df         mov edi, r11d
0x000061d5      e942feffff     jmp 0x601c
0x000061da      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/nstrftime.c:46
0x000061e0      80fa37         cmp dl, 0x37
0x000061e3      7edc           jle 0x61c1
0x000061e5      83f809         cmp eax, 9
0x000061e8      771e           ja 0x6208
0x000061ea      440fbe5b02     movsx r11d, byte [rbx + 2]
0x000061ef      41baffffff7f   mov r10d, 0x7fffffff
0x000061f5      4883c302       add rbx, 2
0x000061f9      4589dd         mov r13d, r11d
0x000061fc      418d43d0       lea eax, [r11 - 0x30]
0x00006200      ebcb           jmp 0x61cd
0x00006202      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/nstrftime.c:47
0x00006208      4489df         mov edi, r11d
0x0000620b      4889cb         mov rbx, rcx                            ; ../coreutils-8.31/lib/nstrftime.c:48
0x0000620e      41baffffff7f   mov r10d, 0x7fffffff
0x00006214      e903feffff     jmp 0x601c
0x00006219      0f1f80000000.  nop dword [rax]
0x00006220      4183fb4f       cmp r11d, 0x4f
0x00006224      0f8466feffff   je 0x6090
0x0000622a      4531f6         xor r14d, r14d
0x0000622d      bd20250000     mov ebp, sym.imp.__ctype_get_mb_cur_max ; 0x2520
0x00006232      4585db         test r11d, r11d
0x00006235      6689ac249b00.  mov word [rsp + 0x9b], bp
0x0000623d      0f854d180000   jne 0x7a90
0x00006243      488d94249b00.  lea rdx, [rsp + 0x9b]
0x0000624b      4889dd         mov rbp, rbx
0x0000624e      488d4202       lea rax, [rdx + 2]
0x00006252      448828         mov byte [rax], r13b
0x00006255      c6400100       mov byte [rax + 1], 0
0x00006259      488d8424a000.  lea rax, [rsp + 0xa0]
0x00006261      488b0c24       mov rcx, qword [rsp]
0x00006265      be00040000     mov esi, 0x400
0x0000626a      4489542440     mov dword [rsp + 0x40], r10d
0x0000626f      4889c7         mov rdi, rax
0x00006272      44895c2458     mov dword [rsp + 0x58], r11d
0x00006277      4889442438     mov qword [rsp + 0x38], rax
0x0000627c      e8efc5ffff     call sym.imp.strftime
0x00006281      4885c0         test rax, rax
0x00006284      0f8406fdffff   je 0x5f90
0x0000628a      4c63542440     movsxd r10, dword [rsp + 0x40]
0x0000628f      4c8d68ff       lea r13, [rax - 1]
0x00006293      b800000000     mov eax, 0
0x00006298      4c89fa         mov rdx, r15
0x0000629b      48f7d2         not rdx
0x0000629e      4585d2         test r10d, r10d
0x000062a1      490f49c2       cmovns rax, r10
0x000062a5      4939c5         cmp r13, rax
0x000062a8      4889c7         mov rdi, rax
0x000062ab      490f43fd       cmovae rdi, r13
0x000062af      4839fa         cmp rdx, rdi
0x000062b2      48897c2440     mov qword [rsp + 0x40], rdi
0x000062b7      0f8682fcffff   jbe 0x5f3f
0x000062bd      4d85e4         test r12, r12
0x000062c0      0f847d000000   je 0x6343
0x000062c6      448b5c2458     mov r11d, dword [rsp + 0x58]
0x000062cb      4585db         test r11d, r11d
0x000062ce      754b           jne 0x631b
0x000062d0      4939c5         cmp r13, rax
0x000062d3      7346           jae 0x631b
0x000062d5      8b442408       mov eax, dword [rsp + 8]
0x000062d9      4963da         movsxd rbx, r10d
0x000062dc      4c29eb         sub rbx, r13
0x000062df      83f830         cmp eax, 0x30
0x000062e2      0f8408100000   je 0x72f0                               ; ../coreutils-8.31/lib/nstrftime.c:-90
0x000062e8      83f82b         cmp eax, 0x2b
0x000062eb      0f84ff0f0000   je 0x72f0
0x000062f1      31d2           xor edx, edx
0x000062f3      4885db         test rbx, rbx
0x000062f6      7423           je 0x631b
0x000062f8      48896c2408     mov qword [rsp + 8], rbp
0x000062fd      4889d5         mov rbp, rdx
0x00006300      4c89e6         mov rsi, r12
0x00006303      bf20000000     mov edi, 0x20                           ; "@"
0x00006308      4883c501       add rbp, 1
0x0000630c      e84fc3ffff     call sym.imp.fputc
0x00006311      4839eb         cmp rbx, rbp
0x00006314      75ea           jne 0x6300
0x00006316      488b6c2408     mov rbp, qword [rsp + 8]
0x0000631b      4584f6         test r14b, r14b
0x0000631e      0f858c0f0000   jne 0x72b0
0x00006324      807c243400     cmp byte [rsp + 0x34], 0
0x00006329      0f84590f0000   je 0x7288
0x0000632f      488b742438     mov rsi, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/nstrftime.c:250
0x00006334      4c89ea         mov rdx, r13
0x00006337      4c89e7         mov rdi, r12
0x0000633a      4883c601       add rsi, 1
0x0000633e      e8ddfaffff     call sym.fwrite_uppcase
0x00006343      4c037c2440     add r15, qword [rsp + 0x40]
0x00006348      e943fcffff     jmp 0x5f90
0x0000634d      0f1f00         nop dword [rax]
0x00006350      4585db         test r11d, r11d
0x00006353      0f8537fdffff   jne 0x6090
0x00006359      0fb6442434     movzx eax, byte [rsp + 0x34]
0x0000635e      4584f6         test r14b, r14b
0x00006361      488d94249b00.  lea rdx, [rsp + 0x9b]
0x00006369      4889dd         mov rbp, rbx
0x0000636c      410f45c6       cmovne eax, r14d
0x00006370      4531f6         xor r14d, r14d
0x00006373      4531db         xor r11d, r11d
0x00006376      88442434       mov byte [rsp + 0x34], al
0x0000637a      b820250000     mov eax, sym.imp.__ctype_get_mb_cur_max ; 0x2520
0x0000637f      668984249b00.  mov word [rsp + 0x9b], ax
0x00006387      488d4202       lea rax, [rdx + 2]
0x0000638b      e9c2feffff     jmp 0x6252
0x00006390      4585d2         test r10d, r10d
0x00006393      41bd00000000   mov r13d, 0
0x00006399      b801000000     mov eax, 1
0x0000639e      450f49ea       cmovns r13d, r10d
0x000063a2      4d63ed         movsxd r13, r13d
0x000063a5      4d85ed         test r13, r13
0x000063a8      4c0f44e8       cmove r13, rax
0x000063ac      4c89f8         mov rax, r15
0x000063af      48f7d0         not rax
0x000063b2      4c39e8         cmp rax, r13
0x000063b5      0f8684fbffff   jbe 0x5f3f
0x000063bb      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/nstrftime.c:-29
0x000063be      0f849b010000   je 0x655f
0x000063c4      4183fa01       cmp r10d, 1
0x000063c8      7e35           jle 0x63ff
0x000063ca      8b442408       mov eax, dword [rsp + 8]
0x000063ce      4d63d2         movsxd r10, r10d
0x000063d1      4d8d72ff       lea r14, [r10 - 1]
0x000063d5      83f830         cmp eax, 0x30
0x000063d8      0f84d1140000   je 0x78af
0x000063de      31ed           xor ebp, ebp
0x000063e0      83f82b         cmp eax, 0x2b
0x000063e3      0f84c6140000   je 0x78af
0x000063e9      4c89e6         mov rsi, r12
0x000063ec      bf20000000     mov edi, 0x20                           ; "@"
0x000063f1      4883c501       add rbp, 1
0x000063f5      e866c2ffff     call sym.imp.fputc                      ; ../coreutils-8.31/lib/nstrftime.c:-119
0x000063fa      4939ee         cmp r14, rbp
0x000063fd      75ea           jne 0x63e9
0x000063ff      4c89e6         mov rsi, r12
0x00006402      bf09000000     mov edi, 9
0x00006407      e854c2ffff     call sym.imp.fputc
0x0000640c      e94e010000     jmp 0x655f
0x00006411      488b0424       mov rax, qword [rsp]
0x00006415      ba93244992     mov edx, 0x92492493
0x0000641a      be01000000     mov esi, 1
0x0000641f      8b4018         mov eax, dword [rax + 0x18]
0x00006422      8d4806         lea ecx, [rax + 6]
0x00006425      89442438       mov dword [rsp + 0x38], eax
0x00006429      89c8           mov eax, ecx
0x0000642b      f7ea           imul edx
0x0000642d      8d040a         lea eax, [rdx + rcx]
0x00006430      89ca           mov edx, ecx
0x00006432      c1fa1f         sar edx, 0x1f
0x00006435      c1f802         sar eax, 2
0x00006438      29d0           sub eax, edx
0x0000643a      8d14c5000000.  lea edx, [rax*8]
0x00006441      29c2           sub edx, eax
0x00006443      29d1           sub ecx, edx
0x00006445      83c101         add ecx, 1
0x00006448      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/nstrftime.c:185
0x00006450      89c8           mov eax, ecx
0x00006452      4531c0         xor r8d, r8d
0x00006455      4531c9         xor r9d, r9d
0x00006458      c1e81f         shr eax, 0x1f
0x0000645b      4189c5         mov r13d, eax
0x0000645e      89c8           mov eax, ecx
0x00006460      f7d0           not eax
0x00006462      c1e81f         shr eax, 0x1f
0x00006465      4183fb4f       cmp r11d, 0x4f
0x00006469      0f85110d0000   jne 0x7180
0x0000646f      84c0           test al, al
0x00006471      0f84090d0000   je 0x7180
0x00006477      4189fd         mov r13d, edi
0x0000647a      ba20250000     mov edx, sym.imp.__ctype_get_mb_cur_max ; 0x2520
0x0000647f      4531f6         xor r14d, r14d
0x00006482      668994249b00.  mov word [rsp + 0x9b], dx
0x0000648a      488d94249b00.  lea rdx, [rsp + 0x9b]
0x00006492      44889c249d00.  mov byte [rsp + 0x9d], r11b
0x0000649a      4889dd         mov rbp, rbx
0x0000649d      4189f3         mov r11d, esi
0x000064a0      488d4203       lea rax, [rdx + 3]
0x000064a4      e9a9fdffff     jmp 0x6252
0x000064a9      4183fb45       cmp r11d, 0x45
0x000064ad      0f84ddfbffff   je 0x6090
0x000064b3      488b0424       mov rax, qword [rsp]
0x000064b7      be01000000     mov esi, 1
0x000064bc      8b4818         mov ecx, dword [rax + 0x18]
0x000064bf      eb8f           jmp 0x6450
0x000064c1      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/nstrftime.c:-149
0x000064c6      4584f6         test r14b, r14b
0x000064c9      0f855b0f0000   jne 0x742a
0x000064cf      4189c6         mov r14d, eax
0x000064d2      41bd70000000   mov r13d, 0x70                          ; 'p'
0x000064d8      e950fdffff     jmp 0x622d
0x000064dd      488d05389701.  lea rax, [0x0001fc1c]                   ; "%H:%M"
0x000064e4      41beffffffff   mov r14d, 0xffffffff                    ; -1
0x000064ea      4889442438     mov qword [rsp + 0x38], rax
0x000064ef      0fb66c2434     movzx ebp, byte [rsp + 0x34]            ; ../coreutils-8.31/lib/nstrftime.c:210
0x000064f4      4489542440     mov dword [rsp + 0x40], r10d
0x000064f9      4883ec08       sub rsp, 8
0x000064fd      8b8424080500.  mov eax, dword [rsp + 0x508]
0x00006504      31ff           xor edi, edi
0x00006506      4589f1         mov r9d, r14d
0x00006509      50             push rax
0x0000650a      ff742420       push qword [rsp + 0x20]
0x0000650e      89e9           mov ecx, ebp
0x00006510      ff742430       push qword [rsp + 0x30]
0x00006514      488b542420     mov rdx, qword [rsp + 0x20]
0x00006519      448b442428     mov r8d, dword [rsp + 0x28]
0x0000651e      488b742458     mov rsi, qword [rsp + 0x58]
0x00006523      e858f9ffff     call sym.__strftime_internal
0x00006528      4883c420       add rsp, 0x20
0x0000652c      4c63542440     movsxd r10, dword [rsp + 0x40]
0x00006531      ba00000000     mov edx, 0
0x00006536      4c89f9         mov rcx, r15                            ; ../coreutils-8.31/lib/nstrftime.c:211
0x00006539      48f7d1         not rcx
0x0000653c      4585d2         test r10d, r10d
0x0000653f      490f49d2       cmovns rdx, r10
0x00006543      4839d0         cmp rax, rdx
0x00006546      4989d5         mov r13, rdx                            ; ../coreutils-8.31/lib/nstrftime.c:216
0x00006549      4c0f43e8       cmovae r13, rax
0x0000654d      4c39e9         cmp rcx, r13
0x00006550      0f86e9f9ffff   jbe 0x5f3f
0x00006556      4d85e4         test r12, r12
0x00006559      0f85fc0d0000   jne 0x735b
0x0000655f      4d01ef         add r15, r13
0x00006562      4889dd         mov rbp, rbx
0x00006565      e926faffff     jmp 0x5f90
0x0000656a      4183fb45       cmp r11d, 0x45
0x0000656e      0f841cfbffff   je 0x6090
0x00006574      488b0424       mov rax, qword [rsp]
0x00006578      be02000000     mov esi, 2
0x0000657d      8b08           mov ecx, dword [rax]
0x0000657f      e9ccfeffff     jmp 0x6450
0x00006584      488b0424       mov rax, qword [rsp]
0x00006588      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000658d      488d742460     lea rsi, [rsp + 0x60]
0x00006592      4489542440     mov dword [rsp + 0x40], r10d            ; ../coreutils-8.31/lib/nstrftime.c:223
0x00006597      4c8db424b700.  lea r14, [rsp + 0xb7]
0x0000659f      f30f6f00       movdqu xmm0, xmmword [rax]
0x000065a3      0f29442460     movaps xmmword [rsp + 0x60], xmm0       ; ../coreutils-8.31/lib/nstrftime.c:225
0x000065a8      f30f6f4010     movdqu xmm0, xmmword [rax + 0x10]
0x000065ad      0f29442470     movaps xmmword [rsp + 0x70], xmm0
0x000065b2      f30f6f4020     movdqu xmm0, xmmword [rax + 0x20]
0x000065b7      488b4030       mov rax, qword [rax + 0x30]             ; ../coreutils-8.31/lib/nstrftime.c:27
0x000065bb      0f2984248000.  movaps xmmword [rsp + 0x80], xmm0
0x000065c3      488984249000.  mov qword [rsp + 0x90], rax
0x000065cb      e8008c0100     call sym.mktime_z
0x000065d0      448b542440     mov r10d, dword [rsp + 0x40]
0x000065d5      4889c6         mov rsi, rax
0x000065d8      4889c1         mov rcx, rax
0x000065db      488d8424a000.  lea rax, [rsp + 0xa0]
0x000065e3      49b867666666.  movabs r8, 0x6666666666666667           ; 'gfffffff'
0x000065ed      bf30000000     mov edi, 0x30                           ; '0'
0x000065f2      4889442438     mov qword [rsp + 0x38], rax
0x000065f7      660f1f840000.  nop word [rax + rax]
0x00006600      4889c8         mov rax, rcx
0x00006603      49f7e8         imul r8
0x00006606      4889c8         mov rax, rcx
0x00006609      48c1f83f       sar rax, 0x3f
0x0000660d      48c1fa02       sar rdx, 2
0x00006611      4829c2         sub rdx, rax
0x00006614      4889d0         mov rax, rdx
0x00006617      488d1492       lea rdx, [rdx + rdx*4]
0x0000661b      4801d2         add rdx, rdx
0x0000661e      4829d1         sub rcx, rdx
0x00006621      4889ca         mov rdx, rcx
0x00006624      4889c1         mov rcx, rax                            ; ../coreutils-8.31/lib/nstrftime.c:76
0x00006627      89f8           mov eax, edi
0x00006629      29d0           sub eax, edx
0x0000662b      83c230         add edx, 0x30
0x0000662e      4885f6         test rsi, rsi
0x00006631      0f48d0         cmovs edx, eax
0x00006634      4983ee01       sub r14, 1
0x00006638      4885c9         test rcx, rcx
0x0000663b      418816         mov byte [r14], dl
0x0000663e      75c0           jne 0x6600
0x00006640      4585d2         test r10d, r10d
0x00006643      b801000000     mov eax, 1
0x00006648      410f4fc2       cmovg eax, r10d
0x0000664c      4885f6         test rsi, rsi
0x0000664f      89442458       mov dword [rsp + 0x58], eax
0x00006653      0f88370b0000   js 0x7190
0x00006659      488b442438     mov rax, qword [rsp + 0x38]
0x0000665e      4c89fa         mov rdx, r15
0x00006661      48f7d2         not rdx
0x00006664      4883c017       add rax, 0x17
0x00006668      4c29f0         sub rax, r14
0x0000666b      837c24082d     cmp dword [rsp + 8], 0x2d
0x00006670      4889442440     mov qword [rsp + 0x40], rax
0x00006675      7413           je 0x668a
0x00006677      448b6c2458     mov r13d, dword [rsp + 0x58]
0x0000667c      442b6c2440     sub r13d, dword [rsp + 0x40]
0x00006681      4585ed         test r13d, r13d
0x00006684      0f8f34110000   jg 0x77be
0x0000668a      4585d2         test r10d, r10d
0x0000668d      b900000000     mov ecx, 0
0x00006692      4889dd         mov rbp, rbx
0x00006695      410f49ca       cmovns ecx, r10d
0x00006699      4c63e9         movsxd r13, ecx
0x0000669c      488b442440     mov rax, qword [rsp + 0x40]             ; ../coreutils-8.31/lib/nstrftime.c:77
0x000066a1      4c39e8         cmp rax, r13
0x000066a4      4889c3         mov rbx, rax
0x000066a7      490f42dd       cmovb rbx, r13
0x000066ab      4839d3         cmp rbx, rdx
0x000066ae      0f838bf8ffff   jae 0x5f3f
0x000066b4      4d85e4         test r12, r12
0x000066b7      7475           je 0x672e                               ; stddef.h:53 #endif
0x000066b9      8b542458       mov edx, dword [rsp + 0x58]
0x000066bd      85d2           test edx, edx
0x000066bf      7552           jne 0x6713
0x000066c1      4c39e8         cmp rax, r13
0x000066c4      734d           jae 0x6713
0x000066c6      4d63ea         movsxd r13, r10d
0x000066c9      4929c5         sub r13, rax
0x000066cc      8b442408       mov eax, dword [rsp + 8]
0x000066d0      83f830         cmp eax, 0x30
0x000066d3      0f84170d0000   je 0x73f0
0x000066d9      83f82b         cmp eax, 0x2b
0x000066dc      0f840e0d0000   je 0x73f0
0x000066e2      31d2           xor edx, edx
0x000066e4      4d85ed         test r13, r13
0x000066e7      742a           je 0x6713                               ; stddef.h:65 #define _SIZE_T
0x000066e9      48895c2408     mov qword [rsp + 8], rbx
0x000066ee      4889d3         mov rbx, rdx
0x000066f1      0f1f80000000.  nop dword [rax]
0x000066f8      4c89e6         mov rsi, r12
0x000066fb      bf20000000     mov edi, 0x20                           ; stddef.h:83 #undef _SIZE_T_ ; "@"
0x00006700      4883c301       add rbx, 1
0x00006704      e857bfffff     call sym.imp.fputc
0x00006709      4939dd         cmp r13, rbx
0x0000670c      75ea           jne 0x66f8                              ; stddef.h:87 #undef _WCHAR_T_
0x0000670e      488b5c2408     mov rbx, qword [rsp + 8]
0x00006713      807c243400     cmp byte [rsp + 0x34], 0
0x00006718      0f84b20b0000   je 0x72d0
0x0000671e      488b542440     mov rdx, qword [rsp + 0x40]
0x00006723      4c89f6         mov rsi, r14
0x00006726      4c89e7         mov rdi, r12
0x00006729      e8f2f6ffff     call sym.fwrite_uppcase
0x0000672e      4901df         add r15, rbx
0x00006731      e95af8ffff     jmp 0x5f90
0x00006736      488b0424       mov rax, qword [rsp]
0x0000673a      4183fb4f       cmp r11d, 0x4f
0x0000673e      be01000000     mov esi, 1
0x00006743      8b4010         mov eax, dword [rax + 0x10]
0x00006746      0f842efdffff   je 0x647a
0x0000674c      8d1480         lea edx, [rax + rax*4]
0x0000674f      4531c9         xor r9d, r9d
0x00006752      4531ed         xor r13d, r13d
0x00006755      4531c0         xor r8d, r8d
0x00006758      8d0c50         lea ecx, [rax + rdx*2]
0x0000675b      c1f905         sar ecx, 5
0x0000675e      83c101         add ecx, 1
0x00006761      0f1f80000000.  nop dword [rax]
0x00006768      488d8424a000.  lea rax, [rsp + 0xa0]
0x00006770      488dbc24b700.  lea rdi, [rsp + 0xb7]
0x00006778      41bbcdcccccc   mov r11d, 0xcccccccd
0x0000677e      4889442438     mov qword [rsp + 0x38], rax
0x00006783      0f1f440000     nop dword [rax + rax]
0x00006788      41f6c001       test r8b, 1
0x0000678c      4c8d77ff       lea r14, [rdi - 1]
0x00006790      740e           je 0x67a0
0x00006792      488d47fe       lea rax, [rdi - 2]
0x00006796      c647ff3a       mov byte [rdi - 1], 0x3a                ; ':'
                                                                       ; [0x3a:1]=64
0x0000679a      4c89f7         mov rdi, r14
0x0000679d      4989c6         mov r14, rax
0x000067a0      89c8           mov eax, ecx
0x000067a2      41d1f8         sar r8d, 1
0x000067a5      41f7e3         mul r11d
0x000067a8      c1ea03         shr edx, 3                              ; stddef.h:90 #endif /* defined(_ANSI_H_) || defined(_MACHINE_ANSI_H_) || defined(_X86_64_ANSI_H_) || defined(_I386_ANSI_H_) */
0x000067ab      8d0492         lea eax, [rdx + rdx*4]                  ; stddef.h:89 #endif
0x000067ae      01c0           add eax, eax
0x000067b0      29c1           sub ecx, eax
0x000067b2      4489c0         mov eax, r8d
0x000067b5      83c130         add ecx, 0x30
0x000067b8      09d0           or eax, edx
0x000067ba      884fff         mov byte [rdi - 1], cl
0x000067bd      89d1           mov ecx, edx
0x000067bf      4c89f7         mov rdi, r14
0x000067c2      75c4           jne 0x6788
0x000067c4      4139f2         cmp r10d, esi
0x000067c7      410f4df2       cmovge esi, r10d                        ; stddef.h:91
0x000067cb      4584ed         test r13b, r13b
0x000067ce      89742458       mov dword [rsp + 0x58], esi
0x000067d2      0f85b8090000   jne 0x7190
0x000067d8      4584c9         test r9b, r9b
0x000067db      0f8478feffff   je 0x6659                               ; stddef.h:272 #define __WCHAR_T
0x000067e1      837c24082d     cmp dword [rsp + 8], 0x2d
0x000067e6      bd2b000000     mov ebp, 0x2b                           ; '+'
0x000067eb      0f84ac0d0000   je 0x759d
0x000067f1      488b442438     mov rax, qword [rsp + 0x38]
0x000067f6      4c89fa         mov rdx, r15
0x000067f9      48f7d2         not rdx
0x000067fc      4883c017       add rax, 0x17                           ; stddef.h:286    corresponding type is defined).  If we define wchar_t, then we
0x00006800      4c29f0         sub rax, r14
0x00006803      4889c7         mov rdi, rax
0x00006806      4889442440     mov qword [rsp + 0x40], rax
0x0000680b      8b442458       mov eax, dword [rsp + 0x58]
0x0000680f      83e801         sub eax, 1
0x00006812      29f8           sub eax, edi
0x00006814      85c0           test eax, eax
0x00006816      4189c5         mov r13d, eax
0x00006819      0f8ec10c0000   jle 0x74e0
0x0000681f      837c24085f     cmp dword [rsp + 8], 0x5f               ; stddef.h:-741
0x00006824      0f84120c0000   je 0x743c                               ; stddef.h:170 #ifndef __size_t__ /* BeOS */
0x0000682a      4863442458     movsxd rax, dword [rsp + 0x58]
0x0000682f      4839d0         cmp rax, rdx                            ; stddef.h:173 #ifndef _SYS_SIZE_T_H
0x00006832      4889c7         mov rdi, rax
0x00006835      0f8304f7ffff   jae 0x5f3f
0x0000683b      4585d2         test r10d, r10d
0x0000683e      b800000000     mov eax, 0
0x00006843      b901000000     mov ecx, 1
0x00006848      410f49c2       cmovns eax, r10d
0x0000684c      4898           cdqe
0x0000684e      4885c0         test rax, rax
0x00006851      480f45c8       cmovne rcx, rax
0x00006855      4839d1         cmp rcx, rdx
0x00006858      48894c2448     mov qword [rsp + 0x48], rcx
0x0000685d      0f83dcf6ffff   jae 0x5f3f
0x00006863      4d85e4         test r12, r12
0x00006866      7464           je 0x68cc
0x00006868      85ff           test edi, edi
0x0000686a      7554           jne 0x68c0
0x0000686c      4883f801       cmp rax, 1
0x00006870      764e           jbe 0x68c0
0x00006872      8b7c2408       mov edi, dword [rsp + 8]
0x00006876      4d63d2         movsxd r10, r10d
0x00006879      498d42ff       lea rax, [r10 - 1]
0x0000687d      83ff30         cmp edi, 0x30
0x00006880      4889442438     mov qword [rsp + 0x38], rax             ; stddef.h:186 #ifndef __size_t
0x00006885      0f8405110000   je 0x7990
0x0000688b      83ff2b         cmp edi, 0x2b
0x0000688e      0f84fc100000   je 0x7990
0x00006894      31d2           xor edx, edx
0x00006896      4885c0         test rax, rax
0x00006899      7425           je 0x68c0
0x0000689b      48895c2450     mov qword [rsp + 0x50], rbx
0x000068a0      4889d3         mov rbx, rdx
0x000068a3      4c89e6         mov rsi, r12
0x000068a6      bf20000000     mov edi, 0x20                           ; "@"
0x000068ab      4883c301       add rbx, 1
0x000068af      e8acbdffff     call sym.imp.fputc
0x000068b4      48395c2438     cmp qword [rsp + 0x38], rbx
0x000068b9      75e8           jne 0x68a3
0x000068bb      488b5c2450     mov rbx, qword [rsp + 0x50]
0x000068c0      400fbefd       movsx edi, bpl
0x000068c4      4c89e6         mov rsi, r12
0x000068c7      e894bdffff     call sym.imp.fputc
0x000068cc      4c037c2448     add r15, qword [rsp + 0x48]
0x000068d1      4889dd         mov rbp, rbx
0x000068d4      4963dd         movsxd rbx, r13d
0x000068d7      4531ed         xor r13d, r13d
0x000068da      4d85e4         test r12, r12
0x000068dd      7417           je 0x68f6
0x000068df      90             nop
0x000068e0      4c89e6         mov rsi, r12
0x000068e3      bf30000000     mov edi, 0x30                           ; '0'
0x000068e8      4983c501       add r13, 1
0x000068ec      e86fbdffff     call sym.imp.fputc
0x000068f1      4939dd         cmp r13, rbx
0x000068f4      75ea           jne 0x68e0
0x000068f6      4901df         add r15, rbx                            ; stddef.h:-740
0x000068f9      4531ed         xor r13d, r13d
0x000068fc      4531d2         xor r10d, r10d
0x000068ff      4c89fa         mov rdx, r15
0x00006902      48f7d2         not rdx
0x00006905      e992fdffff     jmp 0x669c                              ; stddef.h:188 #define __SIZE_T__ /* Cray Unicos/Mk */
0x0000690a      488d0512ae01.  lea rax, str.H:_M:_S                    ; stddef.h:196 #define _SIZE_T_DEFINED_ ; 0x21723 ; "%H:%M:%S"
0x00006911      41beffffffff   mov r14d, 0xffffffff                    ; -1
0x00006917      4889442438     mov qword [rsp + 0x38], rax
0x0000691c      e9cefbffff     jmp 0x64ef
0x00006921      4183fb45       cmp r11d, 0x45
0x00006925      0f8465f7ffff   je 0x6090
0x0000692b      488b0424       mov rax, qword [rsp]
0x0000692f      ba93244992     mov edx, 0x92492493
0x00006934      8b701c         mov esi, dword [rax + 0x1c]
0x00006937      2b7018         sub esi, dword [rax + 0x18]
0x0000693a      83c607         add esi, 7
0x0000693d      89f0           mov eax, esi
0x0000693f      f7ea           imul edx
0x00006941      8d0c32         lea ecx, [rdx + rsi]
0x00006944      c1fe1f         sar esi, 0x1f
0x00006947      c1f902         sar ecx, 2
0x0000694a      29f1           sub ecx, esi
0x0000694c      be02000000     mov esi, 2
0x00006951      e9fafaffff     jmp 0x6450
0x00006956      4183fb45       cmp r11d, 0x45
0x0000695a      0f8430f7ffff   je 0x6090
0x00006960      488b0c24       mov rcx, qword [rsp]                    ; stddef.h:-145
0x00006964      ba93244992     mov edx, 0x92492493
0x00006969      8b7114         mov esi, dword [rcx + 0x14]
0x0000696c      448b411c       mov r8d, dword [rcx + 0x1c]
0x00006970      448b7118       mov r14d, dword [rcx + 0x18]
0x00006974      89f0           mov eax, esi                            ; stddef.h:-141
0x00006976      4489c1         mov ecx, r8d
0x00006979      c1f81f         sar eax, 0x1f
0x0000697c      4429f1         sub ecx, r14d
0x0000697f      81c17e010000   add ecx, 0x17e
0x00006985      2590010000     and eax, 0x190
0x0000698a      448d4c069c     lea r9d, [rsi + rax - 0x64]             ; stddef.h:-139
0x0000698f      89c8           mov eax, ecx                            ; stddef.h:-5
0x00006991      f7ea           imul edx
0x00006993      8d040a         lea eax, [rdx + rcx]
0x00006996      89ca           mov edx, ecx
0x00006998      c1fa1f         sar edx, 0x1f
0x0000699b      c1f802         sar eax, 2
0x0000699e      29d0           sub eax, edx
0x000069a0      8d14c5000000.  lea edx, [rax*8]
0x000069a7      29c2           sub edx, eax
0x000069a9      4489c0         mov eax, r8d
0x000069ac      29c8           sub eax, ecx
0x000069ae      8d6c1003       lea ebp, [rax + rdx + 3]
0x000069b2      85ed           test ebp, ebp
0x000069b4      0f88260e0000   js 0x77e0                               ; stddef.h:28      && !defined(__STDDEF_H__)) \
0x000069ba      41f6c103       test r9b, 3
0x000069be      b86d010000     mov eax, 0x16d
0x000069c3      7545           jne 0x6a0a
0x000069c5      4489c8         mov eax, r9d                            ; stddef.h:38      && !defined(__need_wint_t))
0x000069c8      ba1f85eb51     mov edx, 0x51eb851f
0x000069cd      4489c9         mov ecx, r9d
0x000069d0      f7ea           imul edx
0x000069d2      c1f91f         sar ecx, 0x1f
0x000069d5      b86e010000     mov eax, 0x16e
0x000069da      89542438       mov dword [rsp + 0x38], edx
0x000069de      c1fa05         sar edx, 5
0x000069e1      29ca           sub edx, ecx
0x000069e3      6bd264         imul edx, edx, 0x64                     ; stddef.h:41 /* snaroff@next.com says the NeXT needs this.  */
0x000069e6      4139d1         cmp r9d, edx
0x000069e9      751f           jne 0x6a0a
0x000069eb      8b542438       mov edx, dword [rsp + 0x38]
0x000069ef      c1fa07         sar edx, 7
0x000069f2      89d0           mov eax, edx
0x000069f4      29c8           sub eax, ecx
0x000069f6      69c090010000   imul eax, eax, 0x190
0x000069fc      4139c1         cmp r9d, eax
0x000069ff      0f94c0         sete al
0x00006a02      0fb6c0         movzx eax, al
0x00006a05      056d010000     add eax, 0x16d
0x00006a0a      4129c0         sub r8d, eax
0x00006a0d      ba93244992     mov edx, 0x92492493
0x00006a12      4489c1         mov ecx, r8d                            ; stddef.h:48
0x00006a15      4429f1         sub ecx, r14d
0x00006a18      81c17e010000   add ecx, 0x17e
0x00006a1e      89c8           mov eax, ecx
0x00006a20      4129c8         sub r8d, ecx
0x00006a23      f7ea           imul edx
0x00006a25      8d040a         lea eax, [rdx + rcx]
0x00006a28      89ca           mov edx, ecx
0x00006a2a      c1fa1f         sar edx, 0x1f
0x00006a2d      c1f802         sar eax, 2
0x00006a30      29d0           sub eax, edx
0x00006a32      8d14c5000000.  lea edx, [rax*8]                        ; stddef.h:-210
0x00006a39      29c2           sub edx, eax
0x00006a3b      418d4c1003     lea ecx, [r8 + rdx + 3]
0x00006a40      41b801000000   mov r8d, 1
0x00006a46      85c9           test ecx, ecx
0x00006a48      7905           jns 0x6a4f
0x00006a4a      89e9           mov ecx, ebp                            ; stddef.h:-189
0x00006a4c      4531c0         xor r8d, r8d
0x00006a4f      4180fd47       cmp r13b, 0x47
0x00006a53      0f848e0c0000   je 0x76e7
0x00006a59      4180fd67       cmp r13b, 0x67
0x00006a5d      0f85070e0000   jne 0x786a                              ; stddef.h:-188
0x00006a63      b91f85eb51     mov ecx, 0x51eb851f
0x00006a68      89f0           mov eax, esi
0x00006a6a      4189f1         mov r9d, esi
0x00006a6d      f7e9           imul ecx
0x00006a6f      89d0           mov eax, edx
0x00006a71      89f2           mov edx, esi
0x00006a73      c1fa1f         sar edx, 0x1f                           ; stddef.h:-187
0x00006a76      c1f805         sar eax, 5
0x00006a79      29d0           sub eax, edx
0x00006a7b      6bc064         imul eax, eax, 0x64
0x00006a7e      4129c1         sub r9d, eax
0x00006a81      4501c1         add r9d, r8d
0x00006a84      4489c8         mov eax, r9d
0x00006a87      f7e9           imul ecx
0x00006a89      4489c8         mov eax, r9d
0x00006a8c      c1f81f         sar eax, 0x1f
0x00006a8f      89d1           mov ecx, edx
0x00006a91      c1f905         sar ecx, 5                              ; stddef.h:-141
0x00006a94      29c1           sub ecx, eax
0x00006a96      6bc964         imul ecx, ecx, 0x64
0x00006a99      4129c9         sub r9d, ecx
0x00006a9c      4489c9         mov ecx, r9d
0x00006a9f      0f88ff0b0000   js 0x76a4
0x00006aa5      8b742408       mov esi, dword [rsp + 8]
0x00006aa9      85f6           test esi, esi                           ; stddef.h:-170
0x00006aab      0f84100c0000   je 0x76c1
0x00006ab1      b801000000     mov eax, 1
0x00006ab6      4531ed         xor r13d, r13d
0x00006ab9      837c24082b     cmp dword [rsp + 8], 0x2b               ; stddef.h:-258
0x00006abe      0f84990f0000   je 0x7a5d
0x00006ac4      4531c9         xor r9d, r9d
0x00006ac7      be02000000     mov esi, 2
0x00006acc      4531c0         xor r8d, r8d
0x00006acf      e991f9ffff     jmp 0x6465
0x00006ad4      4183fb45       cmp r11d, 0x45
0x00006ad8      0f84b2f5ffff   je 0x6090
0x00006ade      488b0424       mov rax, qword [rsp]
0x00006ae2      be02000000     mov esi, 2
0x00006ae7      8b4808         mov ecx, dword [rax + 8]
0x00006aea      e961f9ffff     jmp 0x6450
0x00006aef      4183fb45       cmp r11d, 0x45
0x00006af3      0f8497f5ffff   je 0x6090
0x00006af9      488b0424       mov rax, qword [rsp]
0x00006afd      be02000000     mov esi, 2
0x00006b02      8b4804         mov ecx, dword [rax + 4]
0x00006b05      e946f9ffff     jmp 0x6450
0x00006b0a      4183fb45       cmp r11d, 0x45
0x00006b0e      0f847cf5ffff   je 0x6090
0x00006b14      4183faff       cmp r10d, 0xffffffff
0x00006b18      0f84120c0000   je 0x7730
0x00006b1e      4183fa08       cmp r10d, 8
0x00006b22      0f8f440f0000   jg 0x7a6c
0x00006b28      8b8c24000500.  mov ecx, dword [rsp + 0x500]
0x00006b2f      4489d6         mov esi, r10d
0x00006b32      41b867666666   mov r8d, 0x66666667                     ; 'gfff'
0x00006b38      0f1f84000000.  nop dword [rax + rax]
0x00006b40      89c8           mov eax, ecx
0x00006b42      83c601         add esi, 1
0x00006b45      c1f91f         sar ecx, 0x1f
0x00006b48      41f7e8         imul r8d
0x00006b4b      c1fa02         sar edx, 2
0x00006b4e      29ca           sub edx, ecx
0x00006b50      83fe09         cmp esi, 9
0x00006b53      89d1           mov ecx, edx                            ; stddef.h:402 #ifdef __GNUG__
0x00006b55      75e9           jne 0x6b40
0x00006b57      4489d6         mov esi, r10d
0x00006b5a      e9f1f8ffff     jmp 0x6450
0x00006b5f      4183fb45       cmp r11d, 0x45
0x00006b63      0f8427f5ffff   je 0x6090
0x00006b69      8b4c2430       mov ecx, dword [rsp + 0x30]
0x00006b6d      be02000000     mov esi, 2
0x00006b72      e9d9f8ffff     jmp 0x6450
0x00006b77      4183fb45       cmp r11d, 0x45
0x00006b7b      0f84a2080000   je 0x7423
0x00006b81      488b0424       mov rax, qword [rsp]
0x00006b85      ba1f85eb51     mov edx, 0x51eb851f
0x00006b8a      448b4c2408     mov r9d, dword [rsp + 8]
0x00006b8f      8b7014         mov esi, dword [rax + 0x14]
0x00006b92      89f0           mov eax, esi
0x00006b94      f7ea           imul edx
0x00006b96      89d0           mov eax, edx
0x00006b98      89f2           mov edx, esi
0x00006b9a      c1fa1f         sar edx, 0x1f
0x00006b9d      c1f805         sar eax, 5
0x00006ba0      29d0           sub eax, edx
0x00006ba2      89f2           mov edx, esi
0x00006ba4      8d4813         lea ecx, [rax + 0x13]
0x00006ba7      6bc064         imul eax, eax, 0x64
0x00006baa      29c2           sub edx, eax                            ; stddef.h:405 #ifndef __cplusplus
0x00006bac      89d0           mov eax, edx
0x00006bae      c1e81f         shr eax, 0x1f
0x00006bb1      85c9           test ecx, ecx
0x00006bb3      0f9fc2         setg dl
0x00006bb6      21d0           and eax, edx                            ; stddef.h:404 #else   /* G++ */
0x00006bb8      81fe94f8ffff   cmp esi, 0xfffff894                     ; 4294965396
0x00006bbe      410f9cc5       setl r13b
0x00006bc2      29c1           sub ecx, eax
0x00006bc4      81fe94f8ffff   cmp esi, 0xfffff894                     ; 4294965396
0x00006bca      0f9dc0         setge al
0x00006bcd      4585c9         test r9d, r9d
0x00006bd0      0f85e3feffff   jne 0x6ab9
0x00006bd6      837c24242b     cmp dword [rsp + 0x24], 0x2b
0x00006bdb      0f847c0e0000   je 0x7a5d
0x00006be1      8b742424       mov esi, dword [rsp + 0x24]             ; stddef.h:422 #define _GCC_MAX_ALIGN_T
0x00006be5      89742408       mov dword [rsp + 8], esi
0x00006be9      e9d6feffff     jmp 0x6ac4
0x00006bee      4585db         test r11d, r11d                         ; stddef.h:-102
0x00006bf1      0f8599f4ffff   jne 0x6090
0x00006bf7      488d052eab01.  lea rax, str.m__d__y                    ; stddef.h:424    as great as that of any standard type not using alignment ; 0x2172c ; "%m/%d/%y"
0x00006bfe      41beffffffff   mov r14d, 0xffffffff                    ; -1
0x00006c04      4889442438     mov qword [rsp + 0x38], rax
0x00006c09      e9e1f8ffff     jmp 0x64ef
0x00006c0e      4585db         test r11d, r11d
0x00006c11      0f8579f4ffff   jne 0x6090
0x00006c17      448b5c2408     mov r11d, dword [rsp + 8]
0x00006c1c      4585db         test r11d, r11d
0x00006c1f      0f854a0d0000   jne 0x796f
0x00006c25      4585d2         test r10d, r10d
0x00006c28      0f89410d0000   jns 0x796f
0x00006c2e      488d05ed8f01.  lea rax, str.Y__m__d                    ; 0x1fc22 ; "%Y-%m-%d"
0x00006c35      41be04000000   mov r14d, 4
0x00006c3b      c74424082b00.  mov dword [rsp + 8], 0x2b               ; '+'
                                                                       ; [0x2b:4]=0
0x00006c43      4889442438     mov qword [rsp + 0x38], rax
0x00006c48      e9a2f8ffff     jmp 0x64ef
0x00006c4d      0fb64bff       movzx ecx, byte [rbx - 1]
0x00006c51      488d43ff       lea rax, [rbx - 1]
0x00006c55      4889442438     mov qword [rsp + 0x38], rax
0x00006c5a      4585d2         test r10d, r10d
0x00006c5d      b800000000     mov eax, 0                              ; stddef.h:298 #define _BSD_WCHAR_T_DEFINED_
0x00006c62      4c89fa         mov rdx, r15
0x00006c65      410f49c2       cmovns eax, r10d
0x00006c69      80f925         cmp cl, 0x25
0x00006c6c      48f7d2         not rdx
0x00006c6f      4898           cdqe
0x00006c71      0f8514f4ffff   jne 0x608b
0x00006c77      4885c0         test rax, rax
0x00006c7a      41be01000000   mov r14d, 1
0x00006c80      488b6c2438     mov rbp, qword [rsp + 0x38]
0x00006c85      4c0f45f0       cmovne r14, rax
0x00006c89      41bd01000000   mov r13d, 1
0x00006c8f      e940f4ffff     jmp 0x60d4
0x00006c94      4183fb45       cmp r11d, 0x45
0x00006c98      0f84f2f3ffff   je 0x6090
0x00006c9e      4584f6         test r14b, r14b
0x00006ca1      0f8486f5ffff   je 0x622d
0x00006ca7      4488742434     mov byte [rsp + 0x34], r14b             ; stddef.h:257 #ifndef _BSD_WCHAR_T_
0x00006cac      e979f5ffff     jmp 0x622a
0x00006cb1      4585d2         test r10d, r10d
0x00006cb4      b800000000     mov eax, 0
0x00006cb9      41be01000000   mov r14d, 1
0x00006cbf      410f49c2       cmovns eax, r10d
0x00006cc3      4c89fa         mov rdx, r15
0x00006cc6      4898           cdqe
0x00006cc8      48f7d2         not rdx
0x00006ccb      4885c0         test rax, rax
0x00006cce      4c0f45f0       cmovne r14, rax
0x00006cd2      4585db         test r11d, r11d
0x00006cd5      0f856c0a0000   jne 0x7747
0x00006cdb      4c39f2         cmp rdx, r14
0x00006cde      0f865bf2ffff   jbe 0x5f3f
0x00006ce4      4d85e4         test r12, r12
0x00006ce7      0f849df2ffff   je 0x5f8a
0x00006ced      4183fa01       cmp r10d, 1
0x00006cf1      0f8e8bf2ffff   jle 0x5f82
0x00006cf7      8b442408       mov eax, dword [rsp + 8]
0x00006cfb      4d63d2         movsxd r10, r10d
0x00006cfe      4d8d6aff       lea r13, [r10 - 1]
0x00006d02      83f830         cmp eax, 0x30                           ; stddef.h:204   || defined(__DragonFly__) \
0x00006d05      0f84230d0000   je 0x7a2e
0x00006d0b      31ed           xor ebp, ebp
0x00006d0d      83f82b         cmp eax, 0x2b
0x00006d10      0f84180d0000   je 0x7a2e
0x00006d16      4c89e6         mov rsi, r12
0x00006d19      bf20000000     mov edi, 0x20                           ; "@"
0x00006d1e      4883c501       add rbp, 1
0x00006d22      e839b9ffff     call sym.imp.fputc
0x00006d27      4939ed         cmp r13, rbp
0x00006d2a      75ea           jne 0x6d16
0x00006d2c      e94ef2ffff     jmp 0x5f7f
0x00006d31      0fb64301       movzx eax, byte [rbx + 1]
0x00006d35      488d5301       lea rdx, [rbx + 1]
0x00006d39      3c3a           cmp al, 0x3a
0x00006d3b      0f84e00b0000   je 0x7921
0x00006d41      41be01000000   mov r14d, 1
0x00006d47      3c7a           cmp al, 0x7a
0x00006d49      0f8541f3ffff   jne 0x6090
0x00006d4f      4889d3         mov rbx, rdx
0x00006d52      488b0424       mov rax, qword [rsp]
0x00006d56      8b4820         mov ecx, dword [rax + 0x20]
0x00006d59      85c9           test ecx, ecx
0x00006d5b      0f887a080000   js 0x75db
0x00006d61      488b4828       mov rcx, qword [rax + 0x28]
0x00006d65      41bd01000000   mov r13d, 1
0x00006d6b      85c9           test ecx, ecx
0x00006d6d      7814           js 0x6d83
0x00006d6f      41bd00000000   mov r13d, 0
0x00006d75      750c           jne 0x6d83
0x00006d77      488b442428     mov rax, qword [rsp + 0x28]
0x00006d7c      80382d         cmp byte [rax], 0x2d
0x00006d7f      410f94c5       sete r13b
0x00006d83      89c8           mov eax, ecx
0x00006d85      bac5b3a291     mov edx, 0x91a2b3c5
0x00006d8a      4189c9         mov r9d, ecx
0x00006d8d      f7ea           imul edx
0x00006d8f      41c1f91f       sar r9d, 0x1f
0x00006d93      41b889888888   mov r8d, 0x88888889
0x00006d99      89c8           mov eax, ecx
0x00006d9b      01ca           add edx, ecx
0x00006d9d      c1fa0b         sar edx, 0xb
0x00006da0      4429ca         sub edx, r9d
0x00006da3      89d5           mov ebp, edx
0x00006da5      41f7e8         imul r8d
0x00006da8      8d340a         lea esi, [rdx + rcx]
0x00006dab      c1fe05         sar esi, 5
0x00006dae      4429ce         sub esi, r9d
0x00006db1      89f0           mov eax, esi
0x00006db3      41f7e8         imul r8d                                ; stddef.h:183 #ifndef ___int_size_t_h
0x00006db6      89f0           mov eax, esi
0x00006db8      c1f81f         sar eax, 0x1f
0x00006dbb      448d0432       lea r8d, [rdx + rsi]
0x00006dbf      41c1f805       sar r8d, 5
0x00006dc3      4129c0         sub r8d, eax
0x00006dc6      89f0           mov eax, esi                            ; stddef.h:-259
0x00006dc8      456bc03c       imul r8d, r8d, 0x3c
0x00006dcc      6bf63c         imul esi, esi, 0x3c
0x00006dcf      4429c0         sub eax, r8d
0x00006dd2      29f1           sub ecx, esi
0x00006dd4      4983fe01       cmp r14, 1
0x00006dd8      4189c0         mov r8d, eax
0x00006ddb      0f84ac0a0000   je 0x788d
0x00006de1      0f826a0b0000   jb 0x7951                               ; stddef.h:-253
0x00006de7      4983fe02       cmp r14, 2
0x00006deb      0f84a2090000   je 0x7793                               ; stddef.h:-250
0x00006df1      4983fe03       cmp r14, 3
0x00006df5      0f85490b0000   jne 0x7944
0x00006dfb      85c9           test ecx, ecx
0x00006dfd      0f8590090000   jne 0x7793
0x00006e03      85c0           test eax, eax
0x00006e05      0f85820a0000   jne 0x788d                              ; stddef.h:-230
0x00006e0b      4489e8         mov eax, r13d
0x00006e0e      89e9           mov ecx, ebp
0x00006e10      41b901000000   mov r9d, 1
0x00006e16      83f001         xor eax, 1
0x00006e19      be03000000     mov esi, 3
0x00006e1e      e942f6ffff     jmp 0x6465
0x00006e23      0f1f440000     nop dword [rax + rax]
0x00006e28      4183fb45       cmp r11d, 0x45
0x00006e2c      0f845ef2ffff   je 0x6090
0x00006e32      4c8b0c24       mov r9, qword [rsp]
0x00006e36      b993244992     mov ecx, 0x92492493
0x00006e3b      418b4118       mov eax, dword [r9 + 0x18]              ; stddef.h:-222
0x00006e3f      8d7006         lea esi, [rax + 6]
0x00006e42      89442438       mov dword [rsp + 0x38], eax
0x00006e46      89f0           mov eax, esi
0x00006e48      f7e9           imul ecx
0x00006e4a      8d0432         lea eax, [rdx + rsi]
0x00006e4d      89f2           mov edx, esi                            ; stddef.h:-85
0x00006e4f      c1fa1f         sar edx, 0x1f
0x00006e52      c1f802         sar eax, 2
0x00006e55      29d0           sub eax, edx
0x00006e57      8d14c5000000.  lea edx, [rax*8]
0x00006e5e      29c2           sub edx, eax
0x00006e60      89d0           mov eax, edx                            ; stddef.h:-79
0x00006e62      418b511c       mov edx, dword [r9 + 0x1c]
0x00006e66      29f0           sub eax, esi                            ; stddef.h:-64
0x00006e68      8d741007       lea esi, [rax + rdx + 7]
0x00006e6c      89f0           mov eax, esi
0x00006e6e      f7e9           imul ecx
0x00006e70      e9ccfaffff     jmp 0x6941                              ; stddef.h:-61
0x00006e75      4183fb45       cmp r11d, 0x45
0x00006e79      0f84a4050000   je 0x7423
0x00006e7f      4183fb4f       cmp r11d, 0x4f
0x00006e83      0f8407f2ffff   je 0x6090
0x00006e89      488b0424       mov rax, qword [rsp]
0x00006e8d      448b442408     mov r8d, dword [rsp + 8]
0x00006e92      8b4014         mov eax, dword [rax + 0x14]
0x00006e95      3d94f8ffff     cmp eax, 0xfffff894                     ; 4294965396
0x00006e9a      8d886c070000   lea ecx, [rax + 0x76c]
0x00006ea0      410f9cc5       setl r13b
0x00006ea4      3d94f8ffff     cmp eax, 0xfffff894                     ; 4294965396
0x00006ea9      0f9dc0         setge al
0x00006eac      4585c0         test r8d, r8d
0x00006eaf      0f8559080000   jne 0x770e
0x00006eb5      8b742424       mov esi, dword [rsp + 0x24]
0x00006eb9      83fe2b         cmp esi, 0x2b
0x00006ebc      0f84e5060000   je 0x75a7
0x00006ec2      89742408       mov dword [rsp + 8], esi                ; stddef.h:-39
0x00006ec6      4531c9         xor r9d, r9d
0x00006ec9      be04000000     mov esi, 4
0x00006ece      e9f9fbffff     jmp 0x6acc
0x00006ed3      0fb67c2434     movzx edi, byte [rsp + 0x34]
0x00006ed8      4584f6         test r14b, r14b
0x00006edb      b800000000     mov eax, 0
0x00006ee0      4489542438     mov dword [rsp + 0x38], r10d
0x00006ee5      0f45f8         cmovne edi, eax
0x00006ee8      40887c2434     mov byte [rsp + 0x34], dil
0x00006eed      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00006ef2      e839b6ffff     call sym.imp.strlen
0x00006ef7      4c63542438     movsxd r10, dword [rsp + 0x38]
0x00006efc      4989c5         mov r13, rax
0x00006eff      b800000000     mov eax, 0
0x00006f04      4c89fa         mov rdx, r15
0x00006f07      48f7d2         not rdx
0x00006f0a      4585d2         test r10d, r10d
0x00006f0d      490f49c2       cmovns rax, r10
0x00006f11      4939c5         cmp r13, rax
0x00006f14      4889c5         mov rbp, rax
0x00006f17      490f43ed       cmovae rbp, r13
0x00006f1b      4839ea         cmp rdx, rbp
0x00006f1e      0f861bf0ffff   jbe 0x5f3f
0x00006f24      4d85e4         test r12, r12
0x00006f27      7476           je 0x6f9f
0x00006f29      4939c5         cmp r13, rax
0x00006f2c      734d           jae 0x6f7b
0x00006f2e      8b7c2408       mov edi, dword [rsp + 8]
0x00006f32      4c89d0         mov rax, r10
0x00006f35      4c29e8         sub rax, r13
0x00006f38      4889442438     mov qword [rsp + 0x38], rax
0x00006f3d      83ff30         cmp edi, 0x30
0x00006f40      0f847d0a0000   je 0x79c3
0x00006f46      83ff2b         cmp edi, 0x2b
0x00006f49      0f84740a0000   je 0x79c3
0x00006f4f      31d2           xor edx, edx
0x00006f51      4885c0         test rax, rax
0x00006f54      7425           je 0x6f7b                               ; stddef.h:-186
0x00006f56      48895c2408     mov qword [rsp + 8], rbx
0x00006f5b      4889d3         mov rbx, rdx
0x00006f5e      4c89e6         mov rsi, r12
0x00006f61      bf20000000     mov edi, 0x20                           ; "@"
0x00006f66      4883c301       add rbx, 1
0x00006f6a      e8f1b6ffff     call sym.imp.fputc
0x00006f6f      48395c2438     cmp qword [rsp + 0x38], rbx
0x00006f74      75e8           jne 0x6f5e                              ; stddef.h:-170
0x00006f76      488b5c2408     mov rbx, qword [rsp + 8]
0x00006f7b      4584f6         test r14b, r14b
0x00006f7e      0f857f090000   jne 0x7903
0x00006f84      807c243400     cmp byte [rsp + 0x34], 0
0x00006f89      0f845a090000   je 0x78e9
0x00006f8f      488b742428     mov rsi, qword [rsp + 0x28]
0x00006f94      4c89ea         mov rdx, r13
0x00006f97      4c89e7         mov rdi, r12
0x00006f9a      e881eeffff     call sym.fwrite_uppcase
0x00006f9f      4901ef         add r15, rbp
0x00006fa2      4889dd         mov rbp, rbx
0x00006fa5      e9e6efffff     jmp 0x5f90
0x00006faa      4183fb45       cmp r11d, 0x45
0x00006fae      0f846f040000   je 0x7423
0x00006fb4      488b0424       mov rax, qword [rsp]
0x00006fb8      ba1f85eb51     mov edx, 0x51eb851f
0x00006fbd      8b7014         mov esi, dword [rax + 0x14]
0x00006fc0      89f0           mov eax, esi
0x00006fc2      f7ea           imul edx
0x00006fc4      89f0           mov eax, esi
0x00006fc6      c1f81f         sar eax, 0x1f
0x00006fc9      89d1           mov ecx, edx
0x00006fcb      c1f905         sar ecx, 5
0x00006fce      29c1           sub ecx, eax
0x00006fd0      89f0           mov eax, esi
0x00006fd2      6bc964         imul ecx, ecx, 0x64
0x00006fd5      29c8           sub eax, ecx
0x00006fd7      89c1           mov ecx, eax
0x00006fd9      0f89c6faffff   jns 0x6aa5
0x00006fdf      f7d8           neg eax
0x00006fe1      83c164         add ecx, 0x64
0x00006fe4      81fe93f8ffff   cmp esi, 0xfffff893                     ; 4294965395
0x00006fea      0f4ec8         cmovle ecx, eax
0x00006fed      e9b3faffff     jmp 0x6aa5
0x00006ff2      4183fb45       cmp r11d, 0x45
0x00006ff6      0f8494f0ffff   je 0x6090                               ; stddef.h:-163
0x00006ffc      488b0424       mov rax, qword [rsp]
0x00007000      be02000000     mov esi, 2
0x00007005      8b480c         mov ecx, dword [rax + 0xc]
0x00007008      e943f4ffff     jmp 0x6450
0x0000700d      4183fb45       cmp r11d, 0x45
0x00007011      0f8479f0ffff   je 0x6090
0x00007017      488b0424       mov rax, qword [rsp]
0x0000701b      8b480c         mov ecx, dword [rax + 0xc]
0x0000701e      448b442408     mov r8d, dword [rsp + 8]
0x00007023      be02000000     mov esi, 2
0x00007028      4585c0         test r8d, r8d
0x0000702b      0f851ff4ffff   jne 0x6450
0x00007031      c74424085f00.  mov dword [rsp + 8], 0x5f               ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x00007039      e912f4ffff     jmp 0x6450
0x0000703e      4183fb45       cmp r11d, 0x45
0x00007042      0f8448f0ffff   je 0x6090
0x00007048      488b0424       mov rax, qword [rsp]
0x0000704c      be03000000     mov esi, 3
0x00007051      8b401c         mov eax, dword [rax + 0x1c]
0x00007054      83f8ff         cmp eax, 0xffffffff
0x00007057      8d4801         lea ecx, [rax + 1]
0x0000705a      410f9cc5       setl r13b
0x0000705e      83f8ff         cmp eax, 0xffffffff
0x00007061      0f9dc0         setge al
0x00007064      4531c0         xor r8d, r8d
0x00007067      4531c9         xor r9d, r9d
0x0000706a      e9f6f3ffff     jmp 0x6465
0x0000706f      4183fb45       cmp r11d, 0x45
0x00007073      0f8417f0ffff   je 0x6090
0x00007079      488b0424       mov rax, qword [rsp]
0x0000707d      8b4808         mov ecx, dword [rax + 8]
0x00007080      eb9c           jmp 0x701e
0x00007082      4183fb45       cmp r11d, 0x45
0x00007086      0f8404f0ffff   je 0x6090
0x0000708c      8b4c2430       mov ecx, dword [rsp + 0x30]
0x00007090      eb8c           jmp 0x701e
0x00007092      4183fb45       cmp r11d, 0x45
0x00007096      0f84f4efffff   je 0x6090
0x0000709c      488b0424       mov rax, qword [rsp]
0x000070a0      be02000000     mov esi, 2
0x000070a5      8b4010         mov eax, dword [rax + 0x10]
0x000070a8      83f8ff         cmp eax, 0xffffffff
0x000070ab      8d4801         lea ecx, [rax + 1]
0x000070ae      410f9cc5       setl r13b
0x000070b2      83f8ff         cmp eax, 0xffffffff
0x000070b5      0f9dc0         setge al
0x000070b8      4531c0         xor r8d, r8d
0x000070bb      4531c9         xor r9d, r9d
0x000070be      e9a2f3ffff     jmp 0x6465
0x000070c3      4585d2         test r10d, r10d
0x000070c6      41bd00000000   mov r13d, 0
0x000070cc      b801000000     mov eax, 1
0x000070d1      450f49ea       cmovns r13d, r10d
0x000070d5      4d63ed         movsxd r13, r13d
0x000070d8      4d85ed         test r13, r13
0x000070db      4c0f44e8       cmove r13, rax
0x000070df      4c89f8         mov rax, r15
0x000070e2      48f7d0         not rax
0x000070e5      4c39e8         cmp rax, r13
0x000070e8      0f8651eeffff   jbe 0x5f3f
0x000070ee      4d85e4         test r12, r12
0x000070f1      0f8468f4ffff   je 0x655f
0x000070f7      4183fa01       cmp r10d, 1                             ; stddef.h:301 /* Why is this file so hard to maintain properly?  In contrast to
0x000070fb      7e35           jle 0x7132
0x000070fd      8b442408       mov eax, dword [rsp + 8]
0x00007101      4d63d2         movsxd r10, r10d
0x00007104      4d8d72ff       lea r14, [r10 - 1]
0x00007108      83f830         cmp eax, 0x30
0x0000710b      0f84bb070000   je 0x78cc
0x00007111      31ed           xor ebp, ebp
0x00007113      83f82b         cmp eax, 0x2b
0x00007116      0f84b0070000   je 0x78cc
0x0000711c      4c89e6         mov rsi, r12
0x0000711f      bf20000000     mov edi, 0x20                           ; "@"
0x00007124      4883c501       add rbp, 1
0x00007128      e833b5ffff     call sym.imp.fputc
0x0000712d      4939ee         cmp r14, rbp
0x00007130      75ea           jne 0x711c
0x00007132      4c89e6         mov rsi, r12
0x00007135      bf0a000000     mov edi, 0xa
0x0000713a      e821b5ffff     call sym.imp.fputc
0x0000713f      e91bf4ffff     jmp 0x655f
0x00007144      31c0           xor eax, eax
0x00007146      e97bf3ffff     jmp 0x64c6
0x0000714b      0fb6442434     movzx eax, byte [rsp + 0x34]
0x00007150      4584f6         test r14b, r14b
0x00007153      410f45c6       cmovne eax, r14d                        ; stddef.h:-346
0x00007157      4183fb45       cmp r11d, 0x45
0x0000715b      0f84b7070000   je 0x7918
0x00007161      4189fd         mov r13d, edi
0x00007164      88442434       mov byte [rsp + 0x34], al
0x00007168      4531f6         xor r14d, r14d
0x0000716b      e9bdf0ffff     jmp 0x622d
0x00007170      4531f6         xor r14d, r14d
0x00007173      e9dafbffff     jmp 0x6d52
0x00007178      0f1f84000000.  nop dword [rax + rax]
0x00007180      89c8           mov eax, ecx
0x00007182      f7d8           neg eax
0x00007184      4584ed         test r13b, r13b
0x00007187      0f45c8         cmovne ecx, eax
0x0000718a      e9d9f5ffff     jmp 0x6768
0x0000718f      90             nop
0x00007190      837c24082d     cmp dword [rsp + 8], 0x2d
0x00007195      bd2d000000     mov ebp, 0x2d                           ; '-'
0x0000719a      0f8551f6ffff   jne 0x67f1
0x000071a0      c64424402d     mov byte [rsp + 0x40], 0x2d             ; '-'
                                                                       ; [0x2d:1]=0
0x000071a5      4585d2         test r10d, r10d
0x000071a8      b900000000     mov ecx, 0
0x000071ad      b801000000     mov eax, 1
0x000071b2      410f49ca       cmovns ecx, r10d
0x000071b6      4c63e9         movsxd r13, ecx
0x000071b9      4d85ed         test r13, r13
0x000071bc      490f45c5       cmovne rax, r13
0x000071c0      4889c7         mov rdi, rax
0x000071c3      4889442408     mov qword [rsp + 8], rax
0x000071c8      4c89f8         mov rax, r15
0x000071cb      48f7d0         not rax
0x000071ce      4839f8         cmp rax, rdi
0x000071d1      0f8668edffff   jbe 0x5f3f
0x000071d7      4d85e4         test r12, r12
0x000071da      745d           je 0x7239
0x000071dc      8b7c2458       mov edi, dword [rsp + 0x58]             ; stddef.h:-121
0x000071e0      85ff           test edi, edi
0x000071e2      753e           jne 0x7222
0x000071e4      4983fd01       cmp r13, 1
0x000071e8      7638           jbe 0x7222
0x000071ea      4963c2         movsxd rax, r10d
0x000071ed      4883e801       sub rax, 1
0x000071f1      742f           je 0x7222
0x000071f3      48895c2448     mov qword [rsp + 0x48], rbx
0x000071f8      31ed           xor ebp, ebp
0x000071fa      4889c3         mov rbx, rax
0x000071fd      4489542450     mov dword [rsp + 0x50], r10d
0x00007202      4c89e6         mov rsi, r12
0x00007205      bf20000000     mov edi, 0x20                           ; "@"
0x0000720a      4883c501       add rbp, 1
0x0000720e      e84db4ffff     call sym.imp.fputc                      ; stddef.h:-170
0x00007213      4839eb         cmp rbx, rbp
0x00007216      75ea           jne 0x7202
0x00007218      488b5c2448     mov rbx, qword [rsp + 0x48]
0x0000721d      448b542450     mov r10d, dword [rsp + 0x50]
0x00007222      0fbe7c2440     movsx edi, byte [rsp + 0x40]
0x00007227      4c89e6         mov rsi, r12
0x0000722a      4489542448     mov dword [rsp + 0x48], r10d
0x0000722f      e82cb4ffff     call sym.imp.fputc
0x00007234      448b542448     mov r10d, dword [rsp + 0x48]
0x00007239      4c037c2408     add r15, qword [rsp + 8]
0x0000723e      488b442438     mov rax, qword [rsp + 0x38]
0x00007243      4889dd         mov rbp, rbx
0x00007246      c74424082d00.  mov dword [rsp + 8], 0x2d               ; '-'
                                                                       ; [0x2d:4]=0
0x0000724e      4883c017       add rax, 0x17
0x00007252      4c29f0         sub rax, r14
0x00007255      4c89fa         mov rdx, r15
0x00007258      4889442440     mov qword [rsp + 0x40], rax
0x0000725d      48f7d2         not rdx
0x00007260      e937f4ffff     jmp 0x669c
0x00007265      0f1f00         nop dword [rax]
0x00007268      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000726d      4c89e1         mov rcx, r12
0x00007270      ba01000000     mov edx, 1
0x00007275      4c89ee         mov rsi, r13
0x00007278      e8e3b6ffff     call sym.imp.fwrite
0x0000727d      e9cceeffff     jmp 0x614e
0x00007282      660f1f440000   nop word [rax + rax]
0x00007288      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000728d      4c89e1         mov rcx, r12
0x00007290      ba01000000     mov edx, 1
0x00007295      4c89ee         mov rsi, r13
0x00007298      4883c701       add rdi, 1
0x0000729c      e8bfb6ffff     call sym.imp.fwrite
0x000072a1      e99df0ffff     jmp 0x6343
0x000072a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000072b0      488b742438     mov rsi, qword [rsp + 0x38]
0x000072b5      4c89ea         mov rdx, r13
0x000072b8      4c89e7         mov rdi, r12
0x000072bb      4883c601       add rsi, 1
0x000072bf      e8fceaffff     call sym.fwrite_lowcase
0x000072c4      e97af0ffff     jmp 0x6343
0x000072c9      0f1f80000000.  nop dword [rax]
0x000072d0      488b742440     mov rsi, qword [rsp + 0x40]
0x000072d5      4c89e1         mov rcx, r12
0x000072d8      ba01000000     mov edx, 1
0x000072dd      4c89f7         mov rdi, r14                            ; stddef.h:-125
0x000072e0      e87bb6ffff     call sym.imp.fwrite
0x000072e5      e944f4ffff     jmp 0x672e
0x000072ea      660f1f440000   nop word [rax + rax]
0x000072f0      4885db         test rbx, rbx
0x000072f3      0f8422f0ffff   je 0x631b
0x000072f9      31d2           xor edx, edx
0x000072fb      48896c2408     mov qword [rsp + 8], rbp
0x00007300      4889d5         mov rbp, rdx
0x00007303      0f1f440000     nop dword [rax + rax]
0x00007308      4c89e6         mov rsi, r12
0x0000730b      bf30000000     mov edi, 0x30                           ; '0'
0x00007310      4883c501       add rbp, 1
0x00007314      e847b3ffff     call sym.imp.fputc
0x00007319      4839eb         cmp rbx, rbp
0x0000731c      75ea           jne 0x7308
0x0000731e      e9f3efffff     jmp 0x6316
0x00007323      4885db         test rbx, rbx
0x00007326      0f8407eeffff   je 0x6133
0x0000732c      31d2           xor edx, edx
0x0000732e      48896c2408     mov qword [rsp + 8], rbp
0x00007333      4889d5         mov rbp, rdx
0x00007336      662e0f1f8400.  nop word cs:[rax + rax]
0x00007340      4c89e6         mov rsi, r12
0x00007343      bf30000000     mov edi, 0x30                           ; '0'
0x00007348      4883c501       add rbp, 1
0x0000734c      e80fb3ffff     call sym.imp.fputc
0x00007351      4839eb         cmp rbx, rbp
0x00007354      75ea           jne 0x7340
0x00007356      e9d3edffff     jmp 0x612e
0x0000735b      4839d0         cmp rax, rdx
0x0000735e      7357           jae 0x73b7
0x00007360      4963d2         movsxd rdx, r10d
0x00007363      4889d7         mov rdi, rdx
0x00007366      4829c7         sub rdi, rax
0x00007369      8b442408       mov eax, dword [rsp + 8]
0x0000736d      83f830         cmp eax, 0x30
0x00007370      0f84e4030000   je 0x775a
0x00007376      83f82b         cmp eax, 0x2b
0x00007379      0f84db030000   je 0x775a
0x0000737f      31d2           xor edx, edx
0x00007381      4885ff         test rdi, rdi
0x00007384      7431           je 0x73b7
0x00007386      896c2434       mov dword [rsp + 0x34], ebp
0x0000738a      48895c2440     mov qword [rsp + 0x40], rbx
0x0000738f      4889fd         mov rbp, rdi
0x00007392      4889d3         mov rbx, rdx
0x00007395      0f1f00         nop dword [rax]
0x00007398      4c89e6         mov rsi, r12
0x0000739b      bf20000000     mov edi, 0x20                           ; stddef.h:-235 ; "@"
0x000073a0      4883c301       add rbx, 1
0x000073a4      e8b7b2ffff     call sym.imp.fputc
0x000073a9      4839dd         cmp rbp, rbx
0x000073ac      75ea           jne 0x7398
0x000073ae      8b6c2434       mov ebp, dword [rsp + 0x34]
0x000073b2      488b5c2440     mov rbx, qword [rsp + 0x40]
0x000073b7      4883ec08       sub rsp, 8                              ; stddef.h:-144
0x000073bb      4589f1         mov r9d, r14d
0x000073be      89e9           mov ecx, ebp
0x000073c0      8b8424080500.  mov eax, dword [rsp + 0x508]
0x000073c7      4c89e7         mov rdi, r12
0x000073ca      50             push rax
0x000073cb      ff742420       push qword [rsp + 0x20]
0x000073cf      ff742430       push qword [rsp + 0x30]
0x000073d3      448b442428     mov r8d, dword [rsp + 0x28]
0x000073d8      488b542420     mov rdx, qword [rsp + 0x20]
0x000073dd      488b742458     mov rsi, qword [rsp + 0x58]
0x000073e2      e899eaffff     call sym.__strftime_internal
0x000073e7      4883c420       add rsp, 0x20
0x000073eb      e96ff1ffff     jmp 0x655f
0x000073f0      4d85ed         test r13, r13
0x000073f3      0f841af3ffff   je 0x6713
0x000073f9      31d2           xor edx, edx
0x000073fb      48895c2408     mov qword [rsp + 8], rbx
0x00007400      4889d3         mov rbx, rdx
0x00007403      0f1f440000     nop dword [rax + rax]
0x00007408      4c89e6         mov rsi, r12
0x0000740b      bf30000000     mov edi, 0x30                           ; '0'
0x00007410      4883c301       add rbx, 1
0x00007414      e847b2ffff     call sym.imp.fputc
0x00007419      4939dd         cmp r13, rbx
0x0000741c      75ea           jne 0x7408
0x0000741e      e9ebf2ffff     jmp 0x670e
0x00007423      31f6           xor esi, esi
0x00007425      e950f0ffff     jmp 0x647a
0x0000742a      41bd70000000   mov r13d, 0x70                          ; 'p'
0x00007430      c644243400     mov byte [rsp + 0x34], 0
0x00007435      e9f3edffff     jmp 0x622d
0x0000743a      31ed           xor ebp, ebp
0x0000743c      4963c5         movsxd rax, r13d
0x0000743f      4839d0         cmp rax, rdx
0x00007442      4889442408     mov qword [rsp + 8], rax
0x00007447      0f83f2eaffff   jae 0x5f3f
0x0000744d      4d85e4         test r12, r12
0x00007450      7443           je 0x7495
0x00007452      31d2           xor edx, edx
0x00007454      40886c2440     mov byte [rsp + 0x40], bpl
0x00007459      48895c2448     mov qword [rsp + 0x48], rbx
0x0000745e      4889d5         mov rbp, rdx
0x00007461      4889c3         mov rbx, rax
0x00007464      4489542450     mov dword [rsp + 0x50], r10d
0x00007469      0f1f80000000.  nop dword [rax]
0x00007470      4c89e6         mov rsi, r12
0x00007473      bf20000000     mov edi, 0x20                           ; "@"
0x00007478      4883c501       add rbp, 1                              ; stddef.h:106 #undef _TYPE_ptrdiff_t
0x0000747c      e8dfb1ffff     call sym.imp.fputc
0x00007481      4839eb         cmp rbx, rbp
0x00007484      77ea           ja 0x7470
0x00007486      0fb66c2440     movzx ebp, byte [rsp + 0x40]
0x0000748b      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00007490      448b542450     mov r10d, dword [rsp + 0x50]
0x00007495      4c037c2408     add r15, qword [rsp + 8]                ; stddef.h:-236
0x0000749a      4489d0         mov eax, r10d
0x0000749d      4429e8         sub eax, r13d
0x000074a0      4539ea         cmp r10d, r13d
0x000074a3      41ba00000000   mov r10d, 0
0x000074a9      440f4fd0       cmovg r10d, eax
0x000074ad      4084ed         test bpl, bpl
0x000074b0      4c89fa         mov rdx, r15
0x000074b3      48f7d2         not rdx
0x000074b6      0f8527010000   jne 0x75e3
0x000074bc      488b442438     mov rax, qword [rsp + 0x38]
0x000074c1      4d63ea         movsxd r13, r10d
0x000074c4      4889dd         mov rbp, rbx
0x000074c7      c74424085f00.  mov dword [rsp + 8], 0x5f               ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x000074cf      4883c017       add rax, 0x17
0x000074d3      4c29f0         sub rax, r14
0x000074d6      4889442440     mov qword [rsp + 0x40], rax
0x000074db      e9bcf1ffff     jmp 0x669c
0x000074e0      4585d2         test r10d, r10d
0x000074e3      b900000000     mov ecx, 0
0x000074e8      b801000000     mov eax, 1
0x000074ed      410f49ca       cmovns ecx, r10d
0x000074f1      4c63e9         movsxd r13, ecx
0x000074f4      4d85ed         test r13, r13
0x000074f7      490f45c5       cmovne rax, r13
0x000074fb      4839d0         cmp rax, rdx
0x000074fe      4889442448     mov qword [rsp + 0x48], rax
0x00007503      0f8336eaffff   jae 0x5f3f
0x00007509      4d85e4         test r12, r12
0x0000750c      747c           je 0x758a
0x0000750e      8b4c2458       mov ecx, dword [rsp + 0x58]
0x00007512      85c9           test ecx, ecx
0x00007514      755e           jne 0x7574
0x00007516      4983fd01       cmp r13, 1
0x0000751a      7658           jbe 0x7574
0x0000751c      8b7c2408       mov edi, dword [rsp + 8]
0x00007520      4963c2         movsxd rax, r10d
0x00007523      4883e801       sub rax, 1
0x00007527      4889442438     mov qword [rsp + 0x38], rax
0x0000752c      83ff30         cmp edi, 0x30
0x0000752f      0f84c1040000   je 0x79f6
0x00007535      83ff2b         cmp edi, 0x2b
0x00007538      0f84b8040000   je 0x79f6
0x0000753e      31d2           xor edx, edx
0x00007540      4885c0         test rax, rax
0x00007543      742f           je 0x7574
0x00007545      48895c2450     mov qword [rsp + 0x50], rbx
0x0000754a      448954245c     mov dword [rsp + 0x5c], r10d
0x0000754f      4889d3         mov rbx, rdx
0x00007552      4c89e6         mov rsi, r12
0x00007555      bf20000000     mov edi, 0x20                           ; "@"
0x0000755a      4883c301       add rbx, 1
0x0000755e      e8fdb0ffff     call sym.imp.fputc
0x00007563      48395c2438     cmp qword [rsp + 0x38], rbx
0x00007568      75e8           jne 0x7552
0x0000756a      488b5c2450     mov rbx, qword [rsp + 0x50]
0x0000756f      448b54245c     mov r10d, dword [rsp + 0x5c]
0x00007574      400fbefd       movsx edi, bpl
0x00007578      4c89e6         mov rsi, r12
0x0000757b      4489542438     mov dword [rsp + 0x38], r10d
0x00007580      e8dbb0ffff     call sym.imp.fputc
0x00007585      448b542438     mov r10d, dword [rsp + 0x38]
0x0000758a      4c037c2448     add r15, qword [rsp + 0x48]
0x0000758f      4889dd         mov rbp, rbx
0x00007592      4c89fa         mov rdx, r15                            ; stddef.h:-154
0x00007595      48f7d2         not rdx
0x00007598      e9fff0ffff     jmp 0x669c
0x0000759d      c64424402b     mov byte [rsp + 0x40], 0x2b             ; stddef.h:-140 ; '+'
                                                                       ; [0x2b:1]=0
0x000075a2      e9fefbffff     jmp 0x71a5
0x000075a7      be04000000     mov esi, 4
0x000075ac      ba0f270000     mov edx, 0x270f
0x000075b1      39ca           cmp edx, ecx
0x000075b3      41b901000000   mov r9d, 1
0x000075b9      c74424082b00.  mov dword [rsp + 8], 0x2b               ; '+'
                                                                       ; [0x2b:4]=0
0x000075c1      0f8205f5ffff   jb 0x6acc
0x000075c7      4139f2         cmp r10d, esi
0x000075ca      c74424082b00.  mov dword [rsp + 8], 0x2b               ; '+'
                                                                       ; [0x2b:4]=0
0x000075d2      410f9fc1       setg r9b
0x000075d6      e9f1f4ffff     jmp 0x6acc
0x000075db      4889dd         mov rbp, rbx
0x000075de      e9ade9ffff     jmp 0x5f90
0x000075e3      4963ca         movsxd rcx, r10d
0x000075e6      41bd01000000   mov r13d, 1
0x000075ec      4885c9         test rcx, rcx
0x000075ef      4c0f45e9       cmovne r13, rcx
0x000075f3      4939d5         cmp r13, rdx
0x000075f6      4c896c2408     mov qword [rsp + 8], r13
0x000075fb      0f833ee9ffff   jae 0x5f3f
0x00007601      4d85e4         test r12, r12
0x00007604      746f           je 0x7675
0x00007606      8b742458       mov esi, dword [rsp + 0x58]
0x0000760a      85f6           test esi, esi
0x0000760c      7547           jne 0x7655
0x0000760e      4183fa01       cmp r10d, 1
0x00007612      7641           jbe 0x7655
0x00007614      488d41ff       lea rax, [rcx - 1]
0x00007618      4531ed         xor r13d, r13d
0x0000761b      48895c2448     mov qword [rsp + 0x48], rbx
0x00007620      4489542450     mov dword [rsp + 0x50], r10d
0x00007625      4c89eb         mov rbx, r13
0x00007628      4989cd         mov r13, rcx
0x0000762b      4889442440     mov qword [rsp + 0x40], rax
0x00007630      4c89e6         mov rsi, r12
0x00007633      bf20000000     mov edi, 0x20                           ; stddef.h:85 #endif ; "@"
0x00007638      4883c301       add rbx, 1
0x0000763c      e81fb0ffff     call sym.imp.fputc
0x00007641      48395c2440     cmp qword [rsp + 0x40], rbx
0x00007646      75e8           jne 0x7630
0x00007648      488b5c2448     mov rbx, qword [rsp + 0x48]
0x0000764d      448b542450     mov r10d, dword [rsp + 0x50]
0x00007652      4c89e9         mov rcx, r13
0x00007655      400fbefd       movsx edi, bpl
0x00007659      4c89e6         mov rsi, r12
0x0000765c      4489542448     mov dword [rsp + 0x48], r10d
0x00007661      48894c2440     mov qword [rsp + 0x40], rcx             ; stddef.h:271 #define _T_WCHAR
0x00007666      e8f5afffff     call sym.imp.fputc
0x0000766b      448b542448     mov r10d, dword [rsp + 0x48]
0x00007670      488b4c2440     mov rcx, qword [rsp + 0x40]
0x00007675      4c037c2408     add r15, qword [rsp + 8]
0x0000767a      488b442438     mov rax, qword [rsp + 0x38]
0x0000767f      4989cd         mov r13, rcx
0x00007682      4889dd         mov rbp, rbx
0x00007685      c74424085f00.  mov dword [rsp + 8], 0x5f               ; stddef.h:53 #endif ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x0000768d      4883c017       add rax, 0x17
0x00007691      4c29f0         sub rax, r14
0x00007694      4c89fa         mov rdx, r15
0x00007697      4889442440     mov qword [rsp + 0x40], rax
0x0000769c      48f7d2         not rdx
0x0000769f      e9f8efffff     jmp 0x669c
0x000076a4      b894f8ffff     mov eax, 0xfffff894                     ; 4294965396
0x000076a9      4429c0         sub eax, r8d
0x000076ac      39c6           cmp esi, eax
0x000076ae      0f8dc9030000   jge 0x7a7d
0x000076b4      f7d9           neg ecx
0x000076b6      837c240800     cmp dword [rsp + 8], 0
0x000076bb      0f85f0f3ffff   jne 0x6ab1
0x000076c1      8b442424       mov eax, dword [rsp + 0x24]
0x000076c5      83f82b         cmp eax, 0x2b
0x000076c8      0f847d030000   je 0x7a4b
0x000076ce      89442408       mov dword [rsp + 8], eax
0x000076d2      4531c9         xor r9d, r9d
0x000076d5      b801000000     mov eax, 1
0x000076da      4531ed         xor r13d, r13d
0x000076dd      be02000000     mov esi, 2
0x000076e2      e9e5f3ffff     jmp 0x6acc
0x000076e7      b894f8ffff     mov eax, 0xfffff894                     ; 4294965396
0x000076ec      448b4c2408     mov r9d, dword [rsp + 8]
0x000076f1      428d8c066c07.  lea ecx, [rsi + r8 + 0x76c]
0x000076f9      4429c0         sub eax, r8d
0x000076fc      39c6           cmp esi, eax
0x000076fe      410f9cc5       setl r13b
0x00007702      0f9dc0         setge al
0x00007705      4585c9         test r9d, r9d
0x00007708      0f84a7f7ffff   je 0x6eb5
0x0000770e      837c24082b     cmp dword [rsp + 8], 0x2b
0x00007713      0f848efeffff   je 0x75a7
0x00007719      4531c9         xor r9d, r9d
0x0000771c      be04000000     mov esi, 4                              ; stddef.h:140 #define __PTRDIFF_T
0x00007721      e9a6f3ffff     jmp 0x6acc
0x00007726      662e0f1f8400.  nop word cs:[rax + rax]
0x00007730      8b8c24000500.  mov ecx, dword [rsp + 0x500]
0x00007737      be09000000     mov esi, 9
0x0000773c      41ba09000000   mov r10d, 9
0x00007742      e909edffff     jmp 0x6450
0x00007747      4889dd         mov rbp, rbx
0x0000774a      48895c2438     mov qword [rsp + 0x38], rbx
0x0000774f      41bd01000000   mov r13d, 1                             ; stddef.h:-264
0x00007755      e97ae9ffff     jmp 0x60d4
0x0000775a      4885ff         test rdi, rdi
0x0000775d      0f8454fcffff   je 0x73b7
0x00007763      31d2           xor edx, edx
0x00007765      896c2434       mov dword [rsp + 0x34], ebp
0x00007769      48895c2440     mov qword [rsp + 0x40], rbx
0x0000776e      4889fd         mov rbp, rdi
0x00007771      4889d3         mov rbx, rdx
0x00007774      0f1f4000       nop dword [rax]
0x00007778      4c89e6         mov rsi, r12
0x0000777b      bf30000000     mov edi, 0x30                           ; '0'
0x00007780      4883c301       add rbx, 1
0x00007784      e8d7aeffff     call sym.imp.fputc
0x00007789      4839dd         cmp rbp, rbx
0x0000778c      75ea           jne 0x7778
0x0000778e      e91bfcffff     jmp 0x73ae
0x00007793      456bc064       imul r8d, r8d, 0x64
0x00007797      41b901000000   mov r9d, 1
0x0000779d      be09000000     mov esi, 9
0x000077a2      69c510270000   imul eax, ebp, sym.imp.memcpy
0x000077a8      4401c0         add eax, r8d
0x000077ab      41b814000000   mov r8d, 0x14
0x000077b1      01c1           add ecx, eax
0x000077b3      4489e8         mov eax, r13d
0x000077b6      83f001         xor eax, 1
0x000077b9      e9a7ecffff     jmp 0x6465
0x000077be      837c24085f     cmp dword [rsp + 8], 0x5f
0x000077c3      0f8471fcffff   je 0x743a
0x000077c9      4863442458     movsxd rax, dword [rsp + 0x58]
0x000077ce      4839d0         cmp rax, rdx
0x000077d1      0f82faf0ffff   jb 0x68d1
0x000077d7      e963e7ffff     jmp 0x5f3f
0x000077dc      0f1f4000       nop dword [rax]
0x000077e0      4183e901       sub r9d, 1
0x000077e4      ba6d010000     mov edx, 0x16d
0x000077e9      41f6c103       test r9b, 3
0x000077ed      753a           jne 0x7829                              ; stddef.h:-566
0x000077ef      4489c8         mov eax, r9d
0x000077f2      ba1f85eb51     mov edx, 0x51eb851f
0x000077f7      f7ea           imul edx
0x000077f9      4489c8         mov eax, r9d
0x000077fc      c1f81f         sar eax, 0x1f
0x000077ff      c1fa05         sar edx, 5
0x00007802      29c2           sub edx, eax
0x00007804      6bc264         imul eax, edx, 0x64
0x00007807      ba6e010000     mov edx, 0x16e
0x0000780c      4139c1         cmp r9d, eax
0x0000780f      7518           jne 0x7829
0x00007811      4489c8         mov eax, r9d
0x00007814      b990010000     mov ecx, 0x190
0x00007819      99             cdq
0x0000781a      f7f9           idiv ecx
0x0000781c      83fa01         cmp edx, 1
0x0000781f      19d2           sbb edx, edx
0x00007821      f7d2           not edx
0x00007823      81c26e010000   add edx, 0x16e
0x00007829      4101d0         add r8d, edx
0x0000782c      ba93244992     mov edx, 0x92492493
0x00007831      4489c1         mov ecx, r8d
0x00007834      4429f1         sub ecx, r14d
0x00007837      81c17e010000   add ecx, 0x17e                          ; stddef.h:185 #ifndef _SIZET_
0x0000783d      89c8           mov eax, ecx
0x0000783f      4129c8         sub r8d, ecx                            ; stddef.h:-368
0x00007842      f7ea           imul edx
0x00007844      8d040a         lea eax, [rdx + rcx]
0x00007847      89ca           mov edx, ecx
0x00007849      c1fa1f         sar edx, 0x1f
0x0000784c      c1f802         sar eax, 2
0x0000784f      29d0           sub eax, edx
0x00007851      8d14c5000000.  lea edx, [rax*8]
0x00007858      29c2           sub edx, eax
0x0000785a      418d4c1003     lea ecx, [r8 + rdx + 3]
0x0000785f      41b8ffffffff   mov r8d, 0xffffffff                     ; stddef.h:-916 ; -1
0x00007865      e9e5f1ffff     jmp 0x6a4f
0x0000786a      89c8           mov eax, ecx
0x0000786c      ba93244992     mov edx, 0x92492493
0x00007871      be02000000     mov esi, 2
0x00007876      f7ea           imul edx
0x00007878      8d040a         lea eax, [rdx + rcx]
0x0000787b      c1f91f         sar ecx, 0x1f
0x0000787e      c1f802         sar eax, 2                              ; stddef.h:-914
0x00007881      29c8           sub eax, ecx
0x00007883      89c1           mov ecx, eax
0x00007885      83c101         add ecx, 1
0x00007888      e9c3ebffff     jmp 0x6450
0x0000788d      6bcd64         imul ecx, ebp, 0x64
0x00007890      4489e8         mov eax, r13d
0x00007893      41b901000000   mov r9d, 1
0x00007899      83f001         xor eax, 1
0x0000789c      be06000000     mov esi, 6
0x000078a1      4401c1         add ecx, r8d
0x000078a4      41b804000000   mov r8d, 4
0x000078aa      e9b6ebffff     jmp 0x6465
0x000078af      31ed           xor ebp, ebp                            ; stddef.h:-912
0x000078b1      4c89e6         mov rsi, r12
0x000078b4      bf30000000     mov edi, 0x30                           ; '0'
0x000078b9      4883c501       add rbp, 1
0x000078bd      e89eadffff     call sym.imp.fputc
0x000078c2      4939ee         cmp r14, rbp
0x000078c5      75ea           jne 0x78b1
0x000078c7      e933ebffff     jmp 0x63ff
0x000078cc      31ed           xor ebp, ebp
0x000078ce      4c89e6         mov rsi, r12
0x000078d1      bf30000000     mov edi, 0x30                           ; '0'
0x000078d6      4883c501       add rbp, 1
0x000078da      e881adffff     call sym.imp.fputc
0x000078df      4939ee         cmp r14, rbp
0x000078e2      75ea           jne 0x78ce
0x000078e4      e949f8ffff     jmp 0x7132
0x000078e9      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000078ee      4c89e1         mov rcx, r12
0x000078f1      ba01000000     mov edx, 1
0x000078f6      4c89ee         mov rsi, r13
0x000078f9      e862b0ffff     call sym.imp.fwrite
0x000078fe      e99cf6ffff     jmp 0x6f9f
0x00007903      488b742428     mov rsi, qword [rsp + 0x28]
0x00007908      4c89ea         mov rdx, r13
0x0000790b      4c89e7         mov rdi, r12
0x0000790e      e8ade4ffff     call sym.fwrite_lowcase
0x00007913      e987f6ffff     jmp 0x6f9f
0x00007918      88442434       mov byte [rsp + 0x34], al
0x0000791c      e96fe7ffff     jmp 0x6090
0x00007921      488d4b02       lea rcx, [rbx + 2]
0x00007925      41be01000000   mov r14d, 1
0x0000792b      4889ca         mov rdx, rcx
0x0000792e      4883c101       add rcx, 1
0x00007932      0fb641ff       movzx eax, byte [rcx - 1]
0x00007936      4983c601       add r14, 1
0x0000793a      3c3a           cmp al, 0x3a
0x0000793c      0f8505f4ffff   jne 0x6d47
0x00007942      ebe7           jmp 0x792b
0x00007944      0fb60b         movzx ecx, byte [rbx]
0x00007947      48895c2438     mov qword [rsp + 0x38], rbx
0x0000794c      e909f3ffff     jmp 0x6c5a
0x00007951      6bcd64         imul ecx, ebp, 0x64
0x00007954      4531c0         xor r8d, r8d
0x00007957      41b901000000   mov r9d, 1
0x0000795d      be05000000     mov esi, 5
0x00007962      01c1           add ecx, eax
0x00007964      4489e8         mov eax, r13d
0x00007967      83f001         xor eax, 1
0x0000796a      e9f6eaffff     jmp 0x6465
0x0000796f      4589d6         mov r14d, r10d
0x00007972      b800000000     mov eax, 0
0x00007977      4183ee06       sub r14d, 6
0x0000797b      440f48f0       cmovs r14d, eax
0x0000797f      488d059c8201.  lea rax, str.Y__m__d                    ; 0x1fc22 ; "%Y-%m-%d"
0x00007986      4889442438     mov qword [rsp + 0x38], rax
0x0000798b      e95febffff     jmp 0x64ef
0x00007990      48837c243800   cmp qword [rsp + 0x38], 0
0x00007996      0f8424efffff   je 0x68c0
0x0000799c      31d2           xor edx, edx
0x0000799e      48895c2450     mov qword [rsp + 0x50], rbx
0x000079a3      4889d3         mov rbx, rdx
0x000079a6      4c89e6         mov rsi, r12
0x000079a9      bf30000000     mov edi, 0x30                           ; '0'
0x000079ae      4883c301       add rbx, 1
0x000079b2      e8a9acffff     call sym.imp.fputc
0x000079b7      48395c2438     cmp qword [rsp + 0x38], rbx
0x000079bc      75e8           jne 0x79a6
0x000079be      e9f8eeffff     jmp 0x68bb
0x000079c3      48837c243800   cmp qword [rsp + 0x38], 0
0x000079c9      0f84acf5ffff   je 0x6f7b
0x000079cf      31d2           xor edx, edx
0x000079d1      48895c2408     mov qword [rsp + 8], rbx
0x000079d6      4889d3         mov rbx, rdx
0x000079d9      4c89e6         mov rsi, r12
0x000079dc      bf30000000     mov edi, 0x30                           ; '0'
0x000079e1      4883c301       add rbx, 1
0x000079e5      e876acffff     call sym.imp.fputc
0x000079ea      48395c2438     cmp qword [rsp + 0x38], rbx
0x000079ef      75e8           jne 0x79d9
0x000079f1      e980f5ffff     jmp 0x6f76
0x000079f6      48837c243800   cmp qword [rsp + 0x38], 0
0x000079fc      0f8472fbffff   je 0x7574
0x00007a02      31d2           xor edx, edx
0x00007a04      48895c2450     mov qword [rsp + 0x50], rbx
0x00007a09      448954245c     mov dword [rsp + 0x5c], r10d
0x00007a0e      4889d3         mov rbx, rdx
0x00007a11      4c89e6         mov rsi, r12
0x00007a14      bf30000000     mov edi, 0x30                           ; '0'
0x00007a19      4883c301       add rbx, 1
0x00007a1d      e83eacffff     call sym.imp.fputc
0x00007a22      48395c2438     cmp qword [rsp + 0x38], rbx
0x00007a27      75e8           jne 0x7a11
0x00007a29      e93cfbffff     jmp 0x756a
0x00007a2e      31ed           xor ebp, ebp
0x00007a30      4c89e6         mov rsi, r12
0x00007a33      bf30000000     mov edi, 0x30                           ; '0'
0x00007a38      4883c501       add rbp, 1
0x00007a3c      e81facffff     call sym.imp.fputc
0x00007a41      4939ed         cmp r13, rbp
0x00007a44      75ea           jne 0x7a30
0x00007a46      e934e5ffff     jmp 0x5f7f
0x00007a4b      b801000000     mov eax, 1
0x00007a50      4531ed         xor r13d, r13d
0x00007a53      be02000000     mov esi, 2
0x00007a58      e96afbffff     jmp 0x75c7
0x00007a5d      be02000000     mov esi, 2
0x00007a62      ba63000000     mov edx, 0x63                           ; 'c'
0x00007a67      e945fbffff     jmp 0x75b1
0x00007a6c      8b8c24000500.  mov ecx, dword [rsp + 0x500]
0x00007a73      e9dff0ffff     jmp 0x6b57
0x00007a78      e8e3aaffff     call sym.imp.__stack_chk_fail
0x00007a7d      83c164         add ecx, 0x64
0x00007a80      837c240800     cmp dword [rsp + 8], 0
0x00007a85      0f8436fcffff   je 0x76c1
0x00007a8b      e921f0ffff     jmp 0x6ab1
0x00007a90      31f6           xor esi, esi
0x00007a92      e9f3e9ffff     jmp 0x648a
0x00007a97      660f1f840000.  nop word [rax + rax]
;-- fprintftime:
0x00007aa0      4883ec20       sub rsp, 0x20
0x00007aa4      41b9ffffffff   mov r9d, 0xffffffff                     ; -1
0x00007aaa      64488b042528.  mov rax, qword fs:[0x28]
0x00007ab3      4889442410     mov qword [rsp + 0x10], rax
0x00007ab8      31c0           xor eax, eax
0x00007aba      c644240f00     mov byte [rsp + 0xf], 0
0x00007abf      4150           push r8
0x00007ac1      4531c0         xor r8d, r8d
0x00007ac4      51             push rcx
0x00007ac5      31c9           xor ecx, ecx
0x00007ac7      488d44241f     lea rax, [rsp + 0x1f]
0x00007acc      50             push rax
0x00007acd      e8aee3ffff     call sym.__strftime_internal
0x00007ad2      4883c420       add rsp, 0x20
0x00007ad6      488b542408     mov rdx, qword [rsp + 8]
0x00007adb      644833142528.  xor rdx, qword fs:[0x28]
0x00007ae4      7505           jne 0x7aeb
0x00007ae6      4883c418       add rsp, 0x18
0x00007aea      c3             ret
0x00007aeb      e870aaffff     call sym.imp.__stack_chk_fail
;-- protect_fd:
0x00007af0      55             push rbp                                ; ../coreutils-8.31/lib/freopen-safer.c:41
0x00007af1      53             push rbx
0x00007af2      89fd           mov ebp, edi
0x00007af4      488d3d299e01.  lea rdi, str.dev_null                   ; fcntl2.h:53       return __open_alias (__path, __oflag, __va_arg_pack ()); ; 0x21924 ; "/dev/null"
0x00007afb      31f6           xor esi, esi
0x00007afd      31c0           xor eax, eax
0x00007aff      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/freopen-safer.c:41
0x00007b03      bb01000000     mov ebx, 1                              ; ../coreutils-8.31/lib/freopen-safer.c:52
0x00007b08      e8a3adffff     call sym.imp.open                       ; fcntl2.h:53       return __open_alias (__path, __oflag, __va_arg_pack ());
0x00007b0d      39c5           cmp ebp, eax                            ; ../coreutils-8.31/lib/freopen-safer.c:43
0x00007b0f      7418           je 0x7b29
0x00007b11      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/freopen-safer.c:50
0x00007b13      85c0           test eax, eax                           ; ../coreutils-8.31/lib/freopen-safer.c:45
0x00007b15      7812           js 0x7b29
0x00007b17      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/freopen-safer.c:47
0x00007b19      e822abffff     call sym.imp.close
0x00007b1e      e8eda8ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/freopen-safer.c:48
0x00007b23      c70009000000   mov dword [rax], 9
0x00007b29      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/freopen-safer.c:53
0x00007b2d      89d8           mov eax, ebx
0x00007b2f      5b             pop rbx
0x00007b30      5d             pop rbp
0x00007b31      c3             ret
0x00007b32      0f1f4000       nop dword [rax]
0x00007b36      662e0f1f8400.  nop word cs:[rax + rax]
;-- freopen_safer:
0x00007b40      4157           push r15                                ; ../coreutils-8.31/lib/freopen-safer.c:63
0x00007b42      4156           push r14
0x00007b44      4989f7         mov r15, rsi
0x00007b47      4155           push r13
0x00007b49      4154           push r12
0x00007b4b      4989d4         mov r12, rdx
0x00007b4e      55             push rbp
0x00007b4f      53             push rbx
0x00007b50      4883ec18       sub rsp, 0x18
0x00007b54      48897c2408     mov qword [rsp + 8], rdi
0x00007b59      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/freopen-safer.c:75
0x00007b5c      e8cfabffff     call sym.imp.fileno
0x00007b61      89c3           mov ebx, eax
0x00007b63      e8a8a8ffff     call sym.imp.__errno_location
0x00007b68      83fb01         cmp ebx, 1
0x00007b6b      4989c6         mov r14, rax
0x00007b6e      0f845c010000   je 0x7cd0
0x00007b74      83fb02         cmp ebx, 2
0x00007b77      0f8443010000   je 0x7cc0
0x00007b7d      85db           test ebx, ebx
0x00007b7f      0f84b3000000   je 0x7c38
0x00007b85      be02000000     mov esi, 2                              ; ../coreutils-8.31/lib/freopen-safer.c:78
0x00007b8a      bf02000000     mov edi, 2
0x00007b8f      e8fca9ffff     call sym.imp.dup2
0x00007b94      83f802         cmp eax, 2
0x00007b97      0f95c3         setne bl
0x00007b9a      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/freopen-safer.c:82
0x00007b9f      bf01000000     mov edi, 1
0x00007ba4      e8e7a9ffff     call sym.imp.dup2
0x00007ba9      83f801         cmp eax, 1
0x00007bac      400f95c5       setne bpl
0x00007bb0      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/freopen-safer.c:86
0x00007bb2      31ff           xor edi, edi
0x00007bb4      e8d7a9ffff     call sym.imp.dup2
0x00007bb9      85c0           test eax, eax
0x00007bbb      0f8487000000   je 0x7c48
0x00007bc1      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/freopen-safer.c:93
0x00007bc3      e828ffffff     call sym.protect_fd
0x00007bc8      84c0           test al, al
0x00007bca      4189c5         mov r13d, eax
0x00007bcd      0f840d010000   je 0x7ce0
0x00007bd3      4084ed         test bpl, bpl                           ; ../coreutils-8.31/lib/freopen-safer.c:95
0x00007bd6      7578           jne 0x7c50
0x00007bd8      84db           test bl, bl                             ; ../coreutils-8.31/lib/freopen-safer.c:97
0x00007bda      7414           je 0x7bf0
0x00007bdc      bf02000000     mov edi, 2
0x00007be1      e80affffff     call sym.protect_fd
0x00007be6      84c0           test al, al
0x00007be8      89c3           mov ebx, eax
0x00007bea      0f84b0000000   je 0x7ca0
0x00007bf0      488b7c2408     mov rdi, qword [rsp + 8]                ; ../coreutils-8.31/lib/freopen-safer.c:100
0x00007bf5      4c89e2         mov rdx, r12
0x00007bf8      4c89fe         mov rsi, r15
0x00007bfb      e830aaffff     call sym.imp.freopen
0x00007c00      4989c4         mov r12, rax
0x00007c03      84db           test bl, bl                             ; ../coreutils-8.31/lib/freopen-safer.c:102
0x00007c05      458b3e         mov r15d, dword [r14]                   ; ../coreutils-8.31/lib/freopen-safer.c:101
0x00007c08      0f85a2000000   jne 0x7cb0                              ; ../coreutils-8.31/lib/freopen-safer.c:102
0x00007c0e      4084ed         test bpl, bpl                           ; ../coreutils-8.31/lib/freopen-safer.c:104
0x00007c11      756d           jne 0x7c80
0x00007c13      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/freopen-safer.c:106
0x00007c16      7577           jne 0x7c8f
0x00007c18      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/freopen-safer.c:108
0x00007c1b      7503           jne 0x7c20
0x00007c1d      45893e         mov dword [r14], r15d                   ; ../coreutils-8.31/lib/freopen-safer.c:109
0x00007c20      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/freopen-safer.c:111
0x00007c24      4c89e0         mov rax, r12
0x00007c27      5b             pop rbx
0x00007c28      5d             pop rbp
0x00007c29      415c           pop r12
0x00007c2b      415d           pop r13
0x00007c2d      415e           pop r14
0x00007c2f      415f           pop r15
0x00007c31      c3             ret
0x00007c32      660f1f440000   nop word [rax + rax]
0x00007c38      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/freopen-safer.c:72
0x00007c3a      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/freopen-safer.c:71
0x00007c3c      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/freopen-safer.c:70
0x00007c3f      ebaf           jmp 0x7bf0
0x00007c41      0f1f80000000.  nop dword [rax]
0x00007c48      4531ed         xor r13d, r13d
0x00007c4b      4084ed         test bpl, bpl                           ; ../coreutils-8.31/lib/freopen-safer.c:95
0x00007c4e      7488           je 0x7bd8
0x00007c50      bf01000000     mov edi, 1
0x00007c55      e896feffff     call sym.protect_fd
0x00007c5a      84c0           test al, al
0x00007c5c      89c5           mov ebp, eax
0x00007c5e      0f8574ffffff   jne 0x7bd8
0x00007c64      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/freopen-safer.c:96
0x00007c67      84db           test bl, bl                             ; ../coreutils-8.31/lib/freopen-safer.c:102
0x00007c69      458b3e         mov r15d, dword [r14]                   ; ../coreutils-8.31/lib/freopen-safer.c:101
0x00007c6c      7412           je 0x7c80                               ; ../coreutils-8.31/lib/freopen-safer.c:102
0x00007c6e      bf02000000     mov edi, 2                              ; ../coreutils-8.31/lib/freopen-safer.c:103
0x00007c73      e8c8a9ffff     call sym.imp.close
0x00007c78      0f1f84000000.  nop dword [rax + rax]
0x00007c80      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/freopen-safer.c:105
0x00007c85      e8b6a9ffff     call sym.imp.close
0x00007c8a      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/freopen-safer.c:106
0x00007c8d      7489           je 0x7c18
0x00007c8f      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/freopen-safer.c:107
0x00007c91      e8aaa9ffff     call sym.imp.close
0x00007c96      eb80           jmp 0x7c18
0x00007c98      0f1f84000000.  nop dword [rax + rax]
0x00007ca0      458b3e         mov r15d, dword [r14]                   ; ../coreutils-8.31/lib/freopen-safer.c:101
0x00007ca3      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/freopen-safer.c:98
0x00007ca6      662e0f1f8400.  nop word cs:[rax + rax]
0x00007cb0      bf02000000     mov edi, 2                              ; ../coreutils-8.31/lib/freopen-safer.c:103
0x00007cb5      e886a9ffff     call sym.imp.close
0x00007cba      e94fffffff     jmp 0x7c0e
0x00007cbf      90             nop
0x00007cc0      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/freopen-safer.c:72
0x00007cc2      e9d3feffff     jmp 0x7b9a
0x00007cc7      660f1f840000.  nop word [rax + rax]
0x00007cd0      31db           xor ebx, ebx
0x00007cd2      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/freopen-safer.c:71
0x00007cd4      e9d7feffff     jmp 0x7bb0
0x00007cd9      0f1f80000000.  nop dword [rax]
0x00007ce0      41bd01000000   mov r13d, 1                             ; ../coreutils-8.31/lib/freopen-safer.c:87
0x00007ce6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/freopen-safer.c:94
0x00007ce9      e915ffffff     jmp 0x7c03
0x00007cee      6690           nop
;-- next_prime:
0x00007cf0      4883ff0a       cmp rdi, 0xa                            ; ../coreutils-8.31/lib/hash.c:464
0x00007cf4      b80a000000     mov eax, 0xa
0x00007cf9      49b9abaaaaaa.  movabs r9, 0xaaaaaaaaaaaaaaab
0x00007d03      480f42f8       cmovb rdi, rax
0x00007d07      4883cf01       or rdi, 1                               ; ../coreutils-8.31/lib/hash.c:470
0x00007d0b      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x00007d0f      746e           je 0x7d7f
0x00007d11      0f1f80000000.  nop dword [rax]
0x00007d18      4889f8         mov rax, rdi
0x00007d1b      4889f9         mov rcx, rdi
0x00007d1e      49f7e1         mul r9
0x00007d21      4889d0         mov rax, rdx
0x00007d24      48d1e8         shr rax, 1
0x00007d27      488d0440       lea rax, [rax + rax*2]
0x00007d2b      4829c1         sub rcx, rax
0x00007d2e      4883ff09       cmp rdi, 9                              ; ../coreutils-8.31/lib/hash.c:449
0x00007d32      4889c8         mov rax, rcx
0x00007d35      7639           jbe 0x7d70
0x00007d37      4885c9         test rcx, rcx
0x00007d3a      7439           je 0x7d75
0x00007d3c      41b810000000   mov r8d, 0x10
0x00007d42      be09000000     mov esi, 9                              ; ../coreutils-8.31/lib/hash.c:447
0x00007d47      b903000000     mov ecx, 3                              ; ../coreutils-8.31/lib/hash.c:446
0x00007d4c      eb0b           jmp 0x7d59
0x00007d4e      6690           nop
0x00007d50      4983c008       add r8, 8
0x00007d54      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:449
0x00007d57      741c           je 0x7d75
0x00007d59      4883c102       add rcx, 2                              ; ../coreutils-8.31/lib/hash.c:453
0x00007d5d      31d2           xor edx, edx
0x00007d5f      4889f8         mov rax, rdi
0x00007d62      48f7f1         div rcx
0x00007d65      4c01c6         add rsi, r8                             ; ../coreutils-8.31/lib/hash.c:452
0x00007d68      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/hash.c:449
0x00007d6b      4889d0         mov rax, rdx
0x00007d6e      72e0           jb 0x7d50
0x00007d70      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:472
0x00007d73      750a           jne 0x7d7f
0x00007d75      4883c702       add rdi, 2                              ; ../coreutils-8.31/lib/hash.c:473
0x00007d79      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x00007d7d      7599           jne 0x7d18
0x00007d7f      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:476
0x00007d82      c3             ret
0x00007d83      0f1f00         nop dword [rax]
0x00007d86      662e0f1f8400.  nop word cs:[rax + rax]
;-- raw_hasher:
0x00007d90      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:487
0x00007d93      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash.c:494
0x00007d95      48c1c803       ror rax, 3                              ; ../coreutils-8.31/lib/bitrotate.h:87
0x00007d99      48f7f6         div rsi                                 ; ../coreutils-8.31/lib/hash.c:494
0x00007d9c      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash.c:495
0x00007d9f      c3             ret
;-- raw_comparator:
0x00007da0      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/hash.c:500
0x00007da3      0f94c0         sete al
0x00007da6      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:502
0x00007da7      660f1f840000.  nop word [rax + rax]
;-- safe_hasher:
0x00007db0      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:250
0x00007db1      4889fb         mov rbx, rdi
0x00007db4      4889f7         mov rdi, rsi
0x00007db7      488b7310       mov rsi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/hash.c:251
0x00007dbb      ff5330         call qword [rbx + 0x30]
0x00007dbe      48394310       cmp qword [rbx + 0x10], rax             ; ../coreutils-8.31/lib/hash.c:252
0x00007dc2      7609           jbe 0x7dcd
0x00007dc4      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/hash.c:254
0x00007dc8      480303         add rax, qword [rbx]
0x00007dcb      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:255
0x00007dcc      c3             ret
0x00007dcd      e82ea6ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/hash.c:253
0x00007dd2      0f1f4000       nop dword [rax]
0x00007dd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_find_entry:
0x00007de0      4156           push r14                                ; ../coreutils-8.31/lib/hash.c:792
0x00007de2      4155           push r13
0x00007de4      4989d6         mov r14, rdx
0x00007de7      4154           push r12
0x00007de9      55             push rbp
0x00007dea      4989fc         mov r12, rdi
0x00007ded      53             push rbx
0x00007dee      4889f5         mov rbp, rsi
0x00007df1      4189cd         mov r13d, ecx
0x00007df4      e8b7ffffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:793
0x00007df9      498906         mov qword [r14], rax                    ; ../coreutils-8.31/lib/hash.c:796
0x00007dfc      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:799
0x00007dff      4885f6         test rsi, rsi
0x00007e02      0f84e8000000   je 0x7ef0
0x00007e08      4839ee         cmp rsi, rbp                            ; ../coreutils-8.31/lib/hash.c:803
0x00007e0b      4889c3         mov rbx, rax
0x00007e0e      0f848f000000   je 0x7ea3
0x00007e14      4889ef         mov rdi, rbp
0x00007e17      41ff542438     call qword [r12 + 0x38]
0x00007e1c      84c0           test al, al
0x00007e1e      0f857c000000   jne 0x7ea0
0x00007e24      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x00007e28      4885c0         test rax, rax
0x00007e2b      0f84bf000000   je 0x7ef0
0x00007e31      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x00007e34      4839f5         cmp rbp, rsi
0x00007e37      7520           jne 0x7e59
0x00007e39      eb31           jmp 0x7e6c
0x00007e3b      0f1f440000     nop dword [rax + rax]
0x00007e40      488b5b08       mov rbx, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x00007e44      488b4308       mov rax, qword [rbx + 8]
0x00007e48      4885c0         test rax, rax
0x00007e4b      0f849f000000   je 0x7ef0
0x00007e51      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x00007e54      4839ee         cmp rsi, rbp
0x00007e57      7413           je 0x7e6c
0x00007e59      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:831
0x00007e5c      41ff542438     call qword [r12 + 0x38]
0x00007e61      84c0           test al, al
0x00007e63      74db           je 0x7e40
0x00007e65      488b4308       mov rax, qword [rbx + 8]
0x00007e69      488b30         mov rsi, qword [rax]
0x00007e6c      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/hash.c:835
0x00007e6f      741d           je 0x7e8e
0x00007e71      488b5008       mov rdx, qword [rax + 8]                ; ../coreutils-8.31/lib/hash.c:841
0x00007e75      48895308       mov qword [rbx + 8], rdx
0x00007e79      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/hash.c:778
0x00007e80      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:779
0x00007e85      48895008       mov qword [rax + 8], rdx
0x00007e89      4989442448     mov qword [r12 + 0x48], rax             ; ../coreutils-8.31/lib/hash.c:780
0x00007e8e      5b             pop rbx
0x00007e8f      4889f0         mov rax, rsi
0x00007e92      5d             pop rbp
0x00007e93      415c           pop r12
0x00007e95      415d           pop r13
0x00007e97      415e           pop r14
0x00007e99      c3             ret
0x00007e9a      660f1f440000   nop word [rax + rax]
0x00007ea0      488b33         mov rsi, qword [rbx]
0x00007ea3      4584ed         test r13b, r13b
0x00007ea6      74e6           je 0x7e8e
0x00007ea8      488b4308       mov rax, qword [rbx + 8]
0x00007eac      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:672
0x00007eaf      742f           je 0x7ee0
0x00007eb1      f30f6f00       movdqu xmm0, xmmword [rax]
0x00007eb5      0f1103         movups xmmword [rbx], xmm0
0x00007eb8      48c700000000.  mov qword [rax], 0
0x00007ebf      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:388
0x00007ec4      48895008       mov qword [rax + 8], rdx
0x00007ec8      4989442448     mov qword [r12 + 0x48], rax
0x00007ecd      4889f0         mov rax, rsi
0x00007ed0      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:398
0x00007ed1      5d             pop rbp
0x00007ed2      415c           pop r12
0x00007ed4      415d           pop r13
0x00007ed6      415e           pop r14
0x00007ed8      c3             ret
0x00007ed9      0f1f80000000.  nop dword [rax]
0x00007ee0      48c703000000.  mov qword [rbx], 0
0x00007ee7      eba5           jmp 0x7e8e
0x00007ee9      0f1f80000000.  nop dword [rax]
0x00007ef0      31f6           xor esi, esi
0x00007ef2      5b             pop rbx
0x00007ef3      4889f0         mov rax, rsi
0x00007ef6      5d             pop rbp
0x00007ef7      415c           pop r12
0x00007ef9      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:401
0x00007efb      415e           pop r14
0x00007efd      c3             ret
0x00007efe      6690           nop
;-- check_tuning.isra.0:
0x00007f00      488b17         mov rdx, qword [rdi]
0x00007f03      488d0d969a01.  lea rcx, obj.default_tuning             ; 0x219a0
0x00007f0a      b801000000     mov eax, 1
0x00007f0f      4839ca         cmp rdx, rcx
0x00007f12      7461           je 0x7f75
0x00007f14      f30f104208     movss xmm0, dword [rdx + 8]
0x00007f19      0f2e05949a01.  ucomiss xmm0, dword [0x000219b4]
0x00007f20      764e           jbe 0x7f70
0x00007f22      f30f100d8e9a.  movss xmm1, dword [0x000219b8]          ; [0x219b8:4]=0x3f666666
0x00007f2a      0f2ec8         ucomiss xmm1, xmm0
0x00007f2d      7641           jbe 0x7f70
0x00007f2f      f30f104a0c     movss xmm1, dword [rdx + 0xc]           ; ../coreutils-8.31/lib/hash.c:408
0x00007f34      0f2e0d819a01.  ucomiss xmm1, dword [0x000219bc]
0x00007f3b      7633           jbe 0x7f70
0x00007f3d      f30f100a       movss xmm1, dword [rdx]
0x00007f41      0f2e0d789a01.  ucomiss xmm1, dword [0x000219c0]
0x00007f48      7226           jb 0x7f70
0x00007f4a      f30f580d629a.  addss xmm1, dword [0x000219b4]          ; ../coreutils-8.31/lib/hash.c:737
0x00007f52      f30f105204     movss xmm2, dword [rdx + 4]
0x00007f57      0f2ed1         ucomiss xmm2, xmm1
0x00007f5a      7614           jbe 0x7f70
0x00007f5c      f30f101d609a.  movss xmm3, dword [0x000219c4]          ; [0x219c4:4]=0x3f800000
0x00007f64      0f2eda         ucomiss xmm3, xmm2                      ; ../coreutils-8.31/lib/hash.c:738
0x00007f67      7207           jb 0x7f70
0x00007f69      0f2ec1         ucomiss xmm0, xmm1
0x00007f6c      7707           ja 0x7f75
0x00007f6e      6690           nop
0x00007f70      48890f         mov qword [rdi], rcx
0x00007f73      31c0           xor eax, eax
0x00007f75      f3c3           ret
0x00007f77      660f1f840000.  nop word [rax + rax]
;-- transfer_entries:
0x00007f80      4157           push r15
0x00007f82      4156           push r14
0x00007f84      4155           push r13                                ; ../coreutils-8.31/lib/hash.c:760
0x00007f86      4154           push r12
0x00007f88      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:749
0x00007f89      53             push rbx
0x00007f8a      4883ec08       sub rsp, 8
0x00007f8e      4c8b26         mov r12, qword [rsi]
0x00007f91      4c3b6608       cmp r12, qword [rsi + 8]
0x00007f95      0f83dd000000   jae 0x8078
0x00007f9b      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:752
0x00007f9e      4989f5         mov r13, rsi
0x00007fa1      4189d6         mov r14d, edx
0x00007fa4      0f1f4000       nop dword [rax]
0x00007fa8      4d8b3c24       mov r15, qword [r12]
0x00007fac      4d85ff         test r15, r15
0x00007faf      0f84b5000000   je 0x806a
0x00007fb5      498b5c2408     mov rbx, qword [r12 + 8]
0x00007fba      4885db         test rbx, rbx
0x00007fbd      751d           jne 0x7fdc
0x00007fbf      eb5a           jmp 0x801b
0x00007fc1      0f1f80000000.  nop dword [rax]
0x00007fc8      488b4808       mov rcx, qword [rax + 8]
0x00007fcc      4885d2         test rdx, rdx
0x00007fcf      48894b08       mov qword [rbx + 8], rcx                ; ../coreutils-8.31/lib/bitrotate.h:557
0x00007fd3      48895808       mov qword [rax + 8], rbx
0x00007fd7      4889d3         mov rbx, rdx
0x00007fda      743b           je 0x8017
0x00007fdc      4c8b3b         mov r15, qword [rbx]
0x00007fdf      4889ef         mov rdi, rbp
0x00007fe2      4c89fe         mov rsi, r15
0x00007fe5      e8c6fdffff     call sym.safe_hasher
0x00007fea      48833800       cmp qword [rax], 0
0x00007fee      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:329
0x00007ff2      75d4           jne 0x7fc8
0x00007ff4      4c8938         mov qword [rax], r15
0x00007ff7      4883451801     add qword [rbp + 0x18], 1
0x00007ffc      4885d2         test rdx, rdx
0x00007fff      48c703000000.  mov qword [rbx], 0
0x00008006      488b4548       mov rax, qword [rbp + 0x48]
0x0000800a      48894308       mov qword [rbx + 8], rax
0x0000800e      48895d48       mov qword [rbp + 0x48], rbx             ; ../coreutils-8.31/lib/bitrotate.h:-285
0x00008012      4889d3         mov rbx, rdx                            ; ../coreutils-8.31/lib/bitrotate.h:-283
0x00008015      75c5           jne 0x7fdc
0x00008017      4d8b3c24       mov r15, qword [r12]
0x0000801b      4584f6         test r14b, r14b
0x0000801e      49c744240800.  mov qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/bitrotate.h:-277
0x00008027      7541           jne 0x806a
0x00008029      4c89fe         mov rsi, r15
0x0000802c      4889ef         mov rdi, rbp
0x0000802f      e87cfdffff     call sym.safe_hasher
0x00008034      48833800       cmp qword [rax], 0
0x00008038      4889c3         mov rbx, rax
0x0000803b      7453           je 0x8090
0x0000803d      488b4548       mov rax, qword [rbp + 0x48]
0x00008041      4885c0         test rax, rax
0x00008044      745a           je 0x80a0
0x00008046      488b5008       mov rdx, qword [rax + 8]
0x0000804a      48895548       mov qword [rbp + 0x48], rdx
0x0000804e      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:-255
0x00008052      4c8938         mov qword [rax], r15
0x00008055      48895008       mov qword [rax + 8], rdx
0x00008059      48894308       mov qword [rbx + 8], rax
0x0000805d      49c704240000.  mov qword [r12], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-250
0x00008065      49836d1801     sub qword [r13 + 0x18], 1
0x0000806a      4983c410       add r12, 0x10                           ; ../coreutils-8.31/lib/bitrotate.h:-249
0x0000806e      4d396508       cmp qword [r13 + 8], r12                ; ../coreutils-8.31/lib/bitrotate.h:-250
0x00008072      0f8730ffffff   ja 0x7fa8
0x00008078      4883c408       add rsp, 8
0x0000807c      b801000000     mov eax, 1
0x00008081      5b             pop rbx
0x00008082      5d             pop rbp
0x00008083      415c           pop r12
0x00008085      415d           pop r13                                 ; ../coreutils-8.31/lib/bitrotate.h:-241
0x00008087      415e           pop r14
0x00008089      415f           pop r15
0x0000808b      c3             ret
0x0000808c      0f1f4000       nop dword [rax]
0x00008090      4c8938         mov qword [rax], r15
0x00008093      4883451801     add qword [rbp + 0x18], 1
0x00008098      ebc3           jmp 0x805d
0x0000809a      660f1f440000   nop word [rax + rax]
0x000080a0      bf10000000     mov edi, 0x10
0x000080a5      e8d6a6ffff     call sym.imp.malloc
0x000080aa      4885c0         test rax, rax
0x000080ad      759f           jne 0x804e
0x000080af      4883c408       add rsp, 8
0x000080b3      31c0           xor eax, eax
0x000080b5      5b             pop rbx
0x000080b6      5d             pop rbp
0x000080b7      415c           pop r12
0x000080b9      415d           pop r13
0x000080bb      415e           pop r14
0x000080bd      415f           pop r15
0x000080bf      c3             ret
;-- hash_get_n_buckets:
0x000080c0      488b4710       mov rax, qword [rdi + 0x10]
0x000080c4      c3             ret
0x000080c5      90             nop
0x000080c6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-218
;-- hash_get_n_buckets_used:
0x000080d0      488b4718       mov rax, qword [rdi + 0x18]
0x000080d4      c3             ret                                     ; ../coreutils-8.31/lib/bitrotate.h:-210
0x000080d5      90             nop
0x000080d6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-213
;-- hash_get_n_entries:
0x000080e0      488b4720       mov rax, qword [rdi + 0x20]
0x000080e4      c3             ret
0x000080e5      90             nop                                     ; ../coreutils-8.31/lib/bitrotate.h:-209
0x000080e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_max_bucket_length:
0x000080f0      488b37         mov rsi, qword [rdi]
0x000080f3      488b7f08       mov rdi, qword [rdi + 8]
0x000080f7      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/bitrotate.h:-259
0x000080f9      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/bitrotate.h:-205
0x000080fc      7339           jae 0x8137
0x000080fe      6690           nop
0x00008100      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-268
0x00008104      7426           je 0x812c                               ; ../coreutils-8.31/lib/bitrotate.h:-284
0x00008106      488b5608       mov rdx, qword [rsi + 8]
0x0000810a      b901000000     mov ecx, 1
0x0000810f      4885d2         test rdx, rdx
0x00008112      7411           je 0x8125
0x00008114      0f1f4000       nop dword [rax]
0x00008118      488b5208       mov rdx, qword [rdx + 8]
0x0000811c      4883c101       add rcx, 1
0x00008120      4885d2         test rdx, rdx
0x00008123      75f3           jne 0x8118
0x00008125      4839c8         cmp rax, rcx
0x00008128      480f42c1       cmovb rax, rcx                          ; ../coreutils-8.31/lib/bitrotate.h:-252
0x0000812c      4883c610       add rsi, 0x10
0x00008130      4839fe         cmp rsi, rdi
0x00008133      72cb           jb 0x8100
0x00008135      f3c3           ret
0x00008137      f3c3           ret
0x00008139      0f1f80000000.  nop dword [rax]
;-- hash_table_ok:
0x00008140      488b0f         mov rcx, qword [rdi]
0x00008143      4c8b4708       mov r8, qword [rdi + 8]
0x00008147      31d2           xor edx, edx
0x00008149      31f6           xor esi, esi
0x0000814b      4c39c1         cmp rcx, r8
0x0000814e      7336           jae 0x8186
0x00008150      48833900       cmp qword [rcx], 0
0x00008154      7427           je 0x817d
0x00008156      488b4108       mov rax, qword [rcx + 8]
0x0000815a      4883c601       add rsi, 1
0x0000815e      4883c201       add rdx, 1
0x00008162      4885c0         test rax, rax
0x00008165      7416           je 0x817d
0x00008167      660f1f840000.  nop word [rax + rax]
0x00008170      488b4008       mov rax, qword [rax + 8]
0x00008174      4883c201       add rdx, 1
0x00008178      4885c0         test rax, rax
0x0000817b      75f3           jne 0x8170
0x0000817d      4883c110       add rcx, 0x10
0x00008181      4c39c1         cmp rcx, r8
0x00008184      72ca           jb 0x8150
0x00008186      31c0           xor eax, eax
0x00008188      48397718       cmp qword [rdi + 0x18], rsi
0x0000818c      7402           je 0x8190
0x0000818e      f3c3           ret                                     ; ../coreutils-8.31/lib/hash.c:-195
0x00008190      48395720       cmp qword [rdi + 0x20], rdx
0x00008194      0f94c0         sete al
0x00008197      c3             ret
0x00008198      0f1f84000000.  nop dword [rax + rax]
;-- hash_print_statistics:
0x000081a0      4155           push r13
0x000081a2      4154           push r12
0x000081a4      4989f4         mov r12, rsi
0x000081a7      55             push rbp
0x000081a8      53             push rbx
0x000081a9      31db           xor ebx, ebx
0x000081ab      4883ec08       sub rsp, 8
0x000081af      488b37         mov rsi, qword [rdi]
0x000081b2      488b4f20       mov rcx, qword [rdi + 0x20]
0x000081b6      488b6f10       mov rbp, qword [rdi + 0x10]
0x000081ba      4c8b6f18       mov r13, qword [rdi + 0x18]
0x000081be      488b7f08       mov rdi, qword [rdi + 8]
0x000081c2      4839fe         cmp rsi, rdi
0x000081c5      733e           jae 0x8205
0x000081c7      660f1f840000.  nop word [rax + rax]
0x000081d0      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/hash.c:-192
0x000081d4      7426           je 0x81fc
0x000081d6      488b4608       mov rax, qword [rsi + 8]                ; stdio2.h:-339
0x000081da      ba01000000     mov edx, 1
0x000081df      4885c0         test rax, rax
0x000081e2      7411           je 0x81f5
0x000081e4      0f1f4000       nop dword [rax]
0x000081e8      488b4008       mov rax, qword [rax + 8]
0x000081ec      4883c201       add rdx, 1
0x000081f0      4885c0         test rax, rax
0x000081f3      75f3           jne 0x81e8
0x000081f5      4839d3         cmp rbx, rdx
0x000081f8      480f42da       cmovb rbx, rdx
0x000081fc      4883c610       add rsi, 0x10
0x00008200      4839fe         cmp rsi, rdi
0x00008203      72cb           jb 0x81d0
0x00008205      488d15229701.  lea rdx, str.entries:__________lu       ; 0x2192e ; "# entries:         %lu\n"
0x0000820c      be01000000     mov esi, 1
0x00008211      4c89e7         mov rdi, r12
0x00008214      31c0           xor eax, eax
0x00008216      e855a7ffff     call sym.imp.__fprintf_chk
0x0000821b      488d15249701.  lea rdx, str.buckets:__________lu       ; 0x21946 ; "# buckets:         %lu\n"
0x00008222      31c0           xor eax, eax
0x00008224      4889e9         mov rcx, rbp
0x00008227      be01000000     mov esi, 1
0x0000822c      4c89e7         mov rdi, r12
0x0000822f      e83ca7ffff     call sym.imp.__fprintf_chk
0x00008234      4d85ed         test r13, r13
0x00008237      7867           js 0x82a0
0x00008239      660fefc0       pxor xmm0, xmm0
0x0000823d      4885ed         test rbp, rbp
0x00008240      f2490f2ac5     cvtsi2sd xmm0, r13
0x00008245      f20f59058b97.  mulsd xmm0, qword [0x000219d8]          ; ../coreutils-8.31/lib/hash.c:-174
0x0000824d      787a           js 0x82c9                               ; ../coreutils-8.31/lib/hash.c:-170
0x0000824f      660fefc9       pxor xmm1, xmm1
0x00008253      f2480f2acd     cvtsi2sd xmm1, rbp
0x00008258      f20f5ec1       divsd xmm0, xmm1
0x0000825c      488d15159701.  lea rdx, str.buckets_used:_____lu___.2f ; 0x21978 ; "# buckets used:    %lu (%.2f%%)\n"
0x00008263      4c89e9         mov rcx, r13
0x00008266      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/hash.c:-166
0x00008269      be01000000     mov esi, 1
0x0000826e      b801000000     mov eax, 1
0x00008273      e8f8a6ffff     call sym.imp.__fprintf_chk
0x00008278      4883c408       add rsp, 8
0x0000827c      4889d9         mov rcx, rbx
0x0000827f      4c89e7         mov rdi, r12
0x00008282      5b             pop rbx
0x00008283      5d             pop rbp
0x00008284      415c           pop r12
0x00008286      415d           pop r13
0x00008288      488d15cf9601.  lea rdx, str.max_bucket_length:__lu     ; 0x2195e ; "max bucket length: %lu\n"
0x0000828f      be01000000     mov esi, 1
0x00008294      31c0           xor eax, eax
0x00008296      e9d5a6ffff     jmp sym.imp.__fprintf_chk
0x0000829b      0f1f440000     nop dword [rax + rax]
0x000082a0      4c89e8         mov rax, r13
0x000082a3      4c89ea         mov rdx, r13
0x000082a6      660fefc0       pxor xmm0, xmm0
0x000082aa      48d1e8         shr rax, 1
0x000082ad      83e201         and edx, 1
0x000082b0      4809d0         or rax, rdx
0x000082b3      4885ed         test rbp, rbp
0x000082b6      f2480f2ac0     cvtsi2sd xmm0, rax
0x000082bb      f20f58c0       addsd xmm0, xmm0
0x000082bf      f20f59051197.  mulsd xmm0, qword [0x000219d8]
0x000082c7      7986           jns 0x824f                              ; ../coreutils-8.31/lib/hash.c:-138
0x000082c9      4889e8         mov rax, rbp
0x000082cc      660fefc9       pxor xmm1, xmm1
0x000082d0      48d1e8         shr rax, 1
0x000082d3      83e501         and ebp, 1                              ; ../coreutils-8.31/lib/hash.c:-136
0x000082d6      4809e8         or rax, rbp                             ; ../coreutils-8.31/lib/hash.c:-147
0x000082d9      f2480f2ac8     cvtsi2sd xmm1, rax
0x000082de      f20f58c9       addsd xmm1, xmm1
0x000082e2      e971ffffff     jmp 0x8258
0x000082e7      660f1f840000.  nop word [rax + rax]
;-- hash_lookup:
0x000082f0      4154           push r12
0x000082f2      55             push rbp
0x000082f3      4989fc         mov r12, rdi
0x000082f6      53             push rbx
0x000082f7      4889f5         mov rbp, rsi
0x000082fa      e8b1faffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:-127
0x000082ff      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:-123
0x00008302      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/hash.c:-127
0x00008305      7426           je 0x832d                               ; ../coreutils-8.31/lib/hash.c:-120
0x00008307      4889c3         mov rbx, rax
0x0000830a      eb07           jmp 0x8313
0x0000830c      0f1f4000       nop dword [rax]
0x00008310      488b33         mov rsi, qword [rbx]
0x00008313      4839ee         cmp rsi, rbp
0x00008316      7417           je 0x832f                               ; ../coreutils-8.31/lib/hash.c:-116
0x00008318      4889ef         mov rdi, rbp
0x0000831b      41ff542438     call qword [r12 + 0x38]                 ; ../coreutils-8.31/lib/hash.c:-120
0x00008320      84c0           test al, al
0x00008322      751c           jne 0x8340
0x00008324      488b5b08       mov rbx, qword [rbx + 8]
0x00008328      4885db         test rbx, rbx
0x0000832b      75e3           jne 0x8310
0x0000832d      31f6           xor esi, esi
0x0000832f      5b             pop rbx
0x00008330      4889f0         mov rax, rsi
0x00008333      5d             pop rbp
0x00008334      415c           pop r12
0x00008336      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-112
0x00008337      660f1f840000.  nop word [rax + rax]
0x00008340      488b33         mov rsi, qword [rbx]
0x00008343      5b             pop rbx
0x00008344      5d             pop rbp
0x00008345      4889f0         mov rax, rsi
0x00008348      415c           pop r12
0x0000834a      c3             ret
0x0000834b      0f1f440000     nop dword [rax + rax]
;-- hash_get_first:
0x00008350      48837f2000     cmp qword [rdi + 0x20], 0
0x00008355      742c           je 0x8383
0x00008357      488b17         mov rdx, qword [rdi]
0x0000835a      488b4f08       mov rcx, qword [rdi + 8]
0x0000835e      4839ca         cmp rdx, rcx
0x00008361      7325           jae 0x8388
0x00008363      488b02         mov rax, qword [rdx]
0x00008366      4885c0         test rax, rax
0x00008369      751b           jne 0x8386
0x0000836b      0f1f440000     nop dword [rax + rax]
0x00008370      4883c210       add rdx, 0x10
0x00008374      4839ca         cmp rdx, rcx
0x00008377      730f           jae 0x8388                              ; ../coreutils-8.31/lib/hash.c:-97
0x00008379      488b02         mov rax, qword [rdx]
0x0000837c      4885c0         test rax, rax
0x0000837f      74ef           je 0x8370
0x00008381      f3c3           ret
0x00008383      31c0           xor eax, eax
0x00008385      c3             ret
0x00008386      f3c3           ret
0x00008388      4883ec08       sub rsp, 8
0x0000838c      e86fa0ffff     call sym.imp.abort
0x00008391      0f1f440000     nop dword [rax + rax]
0x00008396      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_next:
0x000083a0      55             push rbp
0x000083a1      53             push rbx
0x000083a2      4889fd         mov rbp, rdi
0x000083a5      4889f3         mov rbx, rsi
0x000083a8      4883ec08       sub rsp, 8
0x000083ac      e8fff9ffff     call sym.safe_hasher
0x000083b1      4889c2         mov rdx, rax
0x000083b4      4889c1         mov rcx, rax
0x000083b7      488b02         mov rax, qword [rdx]
0x000083ba      488b5208       mov rdx, qword [rdx + 8]
0x000083be      4839d8         cmp rax, rbx
0x000083c1      7416           je 0x83d9
0x000083c3      0f1f440000     nop dword [rax + rax]
0x000083c8      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-79
0x000083cb      7411           je 0x83de
0x000083cd      488b02         mov rax, qword [rdx]
0x000083d0      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/hash.c:-97
0x000083d4      4839d8         cmp rax, rbx
0x000083d7      75ef           jne 0x83c8
0x000083d9      4885d2         test rdx, rdx
0x000083dc      752a           jne 0x8408
0x000083de      488b5508       mov rdx, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash.c:-66
0x000083e2      eb0c           jmp 0x83f0
0x000083e4      0f1f4000       nop dword [rax]
0x000083e8      488b01         mov rax, qword [rcx]
0x000083eb      4885c0         test rax, rax
0x000083ee      750b           jne 0x83fb
0x000083f0      4883c110       add rcx, 0x10
0x000083f4      4839ca         cmp rdx, rcx
0x000083f7      77ef           ja 0x83e8
0x000083f9      31c0           xor eax, eax
0x000083fb      4883c408       add rsp, 8
0x000083ff      5b             pop rbx
0x00008400      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:-59
0x00008401      c3             ret
0x00008402      660f1f440000   nop word [rax + rax]
0x00008408      488b02         mov rax, qword [rdx]
0x0000840b      4883c408       add rsp, 8
0x0000840f      5b             pop rbx
0x00008410      5d             pop rbp
0x00008411      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-55
0x00008412      0f1f4000       nop dword [rax]
0x00008416      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_entries:
0x00008420      4c8b0f         mov r9, qword [rdi]
0x00008423      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-57
0x00008427      7659           jbe 0x8482
0x00008429      4531c0         xor r8d, r8d
0x0000842c      498b09         mov rcx, qword [r9]
0x0000842f      4885c9         test rcx, rcx
0x00008432      7439           je 0x846d                               ; ../coreutils-8.31/lib/hash.c:-47
0x00008434      4c39c2         cmp rdx, r8
0x00008437      763e           jbe 0x8477
0x00008439      4a890cc6       mov qword [rsi + r8*8], rcx
0x0000843d      498b4908       mov rcx, qword [r9 + 8]
0x00008441      498d4001       lea rax, [r8 + 1]
0x00008445      4885c9         test rcx, rcx
0x00008448      7420           je 0x846a
0x0000844a      660f1f440000   nop word [rax + rax]
0x00008450      4839c2         cmp rdx, rax
0x00008453      742b           je 0x8480                               ; ../coreutils-8.31/lib/hash.c:-3
0x00008455      4c8b01         mov r8, qword [rcx]
0x00008458      4883c001       add rax, 1
0x0000845c      4c8944c6f8     mov qword [rsi + rax*8 - 8], r8
0x00008461      488b4908       mov rcx, qword [rcx + 8]
0x00008465      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/hash.c:-2
0x00008468      75e6           jne 0x8450
0x0000846a      4989c0         mov r8, rax
0x0000846d      4983c110       add r9, 0x10
0x00008471      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-3
0x00008475      77b5           ja 0x842c
0x00008477      4c89c0         mov rax, r8
0x0000847a      c3             ret
0x0000847b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:0
0x00008480      f3c3           ret
0x00008482      31c0           xor eax, eax
0x00008484      c3             ret
0x00008485      90             nop
0x00008486      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_do_for_each:
0x00008490      4157           push r15
0x00008492      4156           push r14
0x00008494      4155           push r13
0x00008496      4154           push r12
0x00008498      55             push rbp
0x00008499      53             push rbx
0x0000849a      4883ec08       sub rsp, 8
0x0000849e      4c8b37         mov r14, qword [rdi]
0x000084a1      4c397708       cmp qword [rdi + 8], r14
0x000084a5      764f           jbe 0x84f6
0x000084a7      4989d5         mov r13, rdx
0x000084aa      4989f4         mov r12, rsi
0x000084ad      4989ff         mov r15, rdi                            ; ../coreutils-8.31/lib/hash.c:46
0x000084b0      31ed           xor ebp, ebp
0x000084b2      498b3e         mov rdi, qword [r14]
0x000084b5      4885ff         test rdi, rdi
0x000084b8      7420           je 0x84da
0x000084ba      4c89f3         mov rbx, r14
0x000084bd      eb04           jmp 0x84c3
0x000084bf      90             nop
0x000084c0      488b3b         mov rdi, qword [rbx]
0x000084c3      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/hash.c:37
0x000084c6      41ffd4         call r12
0x000084c9      84c0           test al, al
0x000084cb      7417           je 0x84e4
0x000084cd      488b5b08       mov rbx, qword [rbx + 8]
0x000084d1      4883c501       add rbp, 1
0x000084d5      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/hash.c:33
0x000084d8      75e6           jne 0x84c0
0x000084da      4983c610       add r14, 0x10
0x000084de      4d397708       cmp qword [r15 + 8], r14
0x000084e2      77ce           ja 0x84b2
0x000084e4      4883c408       add rsp, 8
0x000084e8      4889e8         mov rax, rbp
0x000084eb      5b             pop rbx
0x000084ec      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:38
0x000084ed      415c           pop r12
0x000084ef      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:37
0x000084f1      415e           pop r14
0x000084f3      415f           pop r15
0x000084f5      c3             ret
0x000084f6      31ed           xor ebp, ebp
0x000084f8      ebea           jmp 0x84e4                              ; ../coreutils-8.31/lib/hash.c:41
0x000084fa      660f1f440000   nop word [rax + rax]
;-- hash_string:
0x00008500      0fb60f         movzx ecx, byte [rdi]
0x00008503      31d2           xor edx, edx
0x00008505      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:43
0x00008507      7424           je 0x852d
0x00008509      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/hash.c:44
0x00008510      4889d0         mov rax, rdx
0x00008513      4883c701       add rdi, 1
0x00008517      48c1e005       shl rax, 5
0x0000851b      4829d0         sub rax, rdx
0x0000851e      31d2           xor edx, edx
0x00008520      4801c8         add rax, rcx
0x00008523      0fb60f         movzx ecx, byte [rdi]
0x00008526      48f7f6         div rsi
0x00008529      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:-14
0x0000852b      75e3           jne 0x8510
0x0000852d      4889d0         mov rax, rdx
0x00008530      c3             ret
0x00008531      0f1f440000     nop dword [rax + rax]
0x00008536      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_reset_tuning:
0x00008540      48b800000000.  movabs rax, 0x3f80000000000000          ; 4575657221408423936
0x0000854a      c6471000       mov byte [rdi + 0x10], 0                ; ../coreutils-8.31/lib/hash.c:-70
0x0000854e      488907         mov qword [rdi], rax
0x00008551      48b8cdcc4c3f.  movabs rax, 0x3fb4fdf43f4ccccd
0x0000855b      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/hash.c:-65
0x0000855f      c3             ret
;-- hash_initialize:
0x00008560      4157           push r15
0x00008562      4156           push r14
0x00008564      488d0525f8ff.  lea rax, sym.raw_hasher                 ; 0x7d90 ; "H\x89\xf81\xd2H\xc1\xc8\x03H\xf7\xf6H\x89\xd0\xc3H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x0000856b      4155           push r13
0x0000856d      4154           push r12
0x0000856f      4989d4         mov r12, rdx
0x00008572      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:-61
0x00008573      53             push rbx
0x00008574      4989cd         mov r13, rcx
0x00008577      4889fd         mov rbp, rdi
0x0000857a      bf50000000     mov edi, 0x50                           ; 'P'
0x0000857f      4989f7         mov r15, rsi
0x00008582      4883ec08       sub rsp, 8
0x00008586      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-52
0x00008589      4d89c6         mov r14, r8
0x0000858c      4c0f44e0       cmove r12, rax
0x00008590      488d0509f8ff.  lea rax, sym.raw_comparator             ; 0x7da0 ; "H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x00008597      4885c9         test rcx, rcx
0x0000859a      4c0f44e8       cmove r13, rax
0x0000859e      e8dda1ffff     call sym.imp.malloc
0x000085a3      4885c0         test rax, rax
0x000085a6      4889c3         mov rbx, rax
0x000085a9      0f84ab000000   je 0x865a
0x000085af      4d85ff         test r15, r15
0x000085b2      488d7828       lea rdi, [rax + 0x28]
0x000085b6      0f84b4000000   je 0x8670
0x000085bc      4c897828       mov qword [rax + 0x28], r15
0x000085c0      e83bf9ffff     call sym.check_tuning.isra.0
0x000085c5      84c0           test al, al
0x000085c7      0f8483000000   je 0x8650
0x000085cd      41807f1000     cmp byte [r15 + 0x10], 0
0x000085d2      0f84f8000000   je 0x86d0
0x000085d8      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:-145
0x000085db      e810f7ffff     call sym.next_prime
0x000085e0      ba08000000     mov edx, 8
0x000085e5      4889c5         mov rbp, rax
0x000085e8      31c9           xor ecx, ecx
0x000085ea      4889d0         mov rax, rdx
0x000085ed      48f7e5         mul rbp
0x000085f0      0f8014010000   jo 0x870a
0x000085f6      4885c0         test rax, rax
0x000085f9      7855           js 0x8650
0x000085fb      4885c9         test rcx, rcx
0x000085fe      7550           jne 0x8650
0x00008600      4885ed         test rbp, rbp
0x00008603      48896b10       mov qword [rbx + 0x10], rbp
0x00008607      7447           je 0x8650
0x00008609      be10000000     mov esi, 0x10
0x0000860e      4889ef         mov rdi, rbp
0x00008611      e89aa0ffff     call sym.imp.calloc
0x00008616      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:-197
0x00008619      488903         mov qword [rbx], rax
0x0000861c      7432           je 0x8650
0x0000861e      48c1e504       shl rbp, 4
0x00008622      48c743180000.  mov qword [rbx + 0x18], 0
0x0000862a      48c743200000.  mov qword [rbx + 0x20], 0
0x00008632      4801c5         add rbp, rax
0x00008635      4c896330       mov qword [rbx + 0x30], r12
0x00008639      4c896b38       mov qword [rbx + 0x38], r13
0x0000863d      48896b08       mov qword [rbx + 8], rbp
0x00008641      4c897340       mov qword [rbx + 0x40], r14
0x00008645      48c743480000.  mov qword [rbx + 0x48], 0
0x0000864d      eb0b           jmp 0x865a
0x0000864f      90             nop
0x00008650      4889df         mov rdi, rbx
0x00008653      31db           xor ebx, ebx
0x00008655      e8b6a3ffff     call sym..plt.got
0x0000865a      4883c408       add rsp, 8
0x0000865e      4889d8         mov rax, rbx
0x00008661      5b             pop rbx
0x00008662      5d             pop rbp
0x00008663      415c           pop r12
0x00008665      415d           pop r13
0x00008667      415e           pop r14
0x00008669      415f           pop r15
0x0000866b      c3             ret
0x0000866c      0f1f4000       nop dword [rax]
0x00008670      488d05299301.  lea rax, obj.default_tuning             ; 0x219a0
0x00008677      48894328       mov qword [rbx + 0x28], rax             ; ../coreutils-8.31/lib/hash.c:-199
0x0000867b      e880f8ffff     call sym.check_tuning.isra.0
0x00008680      84c0           test al, al
0x00008682      f30f100d3e93.  movss xmm1, dword [0x000219c8]          ; [0x219c8:4]=0x3f4ccccd
0x0000868a      74c4           je 0x8650
0x0000868c      4885ed         test rbp, rbp
0x0000868f      784a           js 0x86db
0x00008691      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-168
0x00008695      f3480f2ac5     cvtsi2ss xmm0, rbp
0x0000869a      f30f5ec1       divss xmm0, xmm1
0x0000869e      0f2e05279301.  ucomiss xmm0, dword [0x000219cc]
0x000086a5      73a9           jae 0x8650
0x000086a7      0f2e05229301.  ucomiss xmm0, dword [0x000219d0]
0x000086ae      7250           jb 0x8700
0x000086b0      f30f5c051893.  subss xmm0, dword [0x000219d0]
0x000086b8      48b800000000.  movabs rax, 0x8000000000000000
0x000086c2      f3480f2ce8     cvttss2si rbp, xmm0
0x000086c7      4831c5         xor rbp, rax
0x000086ca      e909ffffff     jmp 0x85d8
0x000086cf      90             nop
0x000086d0      4885ed         test rbp, rbp
0x000086d3      f3410f104f08   movss xmm1, dword [r15 + 8]
0x000086d9      79b6           jns 0x8691                              ; ../coreutils-8.31/lib/hash.c:-146
0x000086db      4889e8         mov rax, rbp
0x000086de      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-147
0x000086e2      48d1e8         shr rax, 1
0x000086e5      83e501         and ebp, 1
0x000086e8      4809e8         or rax, rbp
0x000086eb      f3480f2ac0     cvtsi2ss xmm0, rax
0x000086f0      f30f58c0       addss xmm0, xmm0
0x000086f4      eba4           jmp 0x869a
0x000086f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008700      f3480f2ce8     cvttss2si rbp, xmm0
0x00008705      e9cefeffff     jmp 0x85d8
0x0000870a      b901000000     mov ecx, 1
0x0000870f      e9e2feffff     jmp 0x85f6
0x00008714      6690           nop
0x00008716      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/hash.c:-130
;-- hash_clear:
0x00008720      4154           push r12
0x00008722      55             push rbp
0x00008723      4889fd         mov rbp, rdi
0x00008726      53             push rbx
0x00008727      4c8b27         mov r12, qword [rdi]                    ; ../coreutils-8.31/lib/hash.c:-134
0x0000872a      4c3b6708       cmp r12, qword [rdi + 8]
0x0000872e      736b           jae 0x879b
0x00008730      49833c2400     cmp qword [r12], 0
0x00008735      745a           je 0x8791
0x00008737      498b5c2408     mov rbx, qword [r12 + 8]
0x0000873c      488b4540       mov rax, qword [rbp + 0x40]
0x00008740      4885db         test rbx, rbx
0x00008743      7430           je 0x8775
0x00008745      0f1f00         nop dword [rax]
0x00008748      4885c0         test rax, rax
0x0000874b      7409           je 0x8756
0x0000874d      488b3b         mov rdi, qword [rbx]
0x00008750      ffd0           call rax
0x00008752      488b4540       mov rax, qword [rbp + 0x40]
0x00008756      488b5308       mov rdx, qword [rbx + 8]
0x0000875a      488b4d48       mov rcx, qword [rbp + 0x48]
0x0000875e      48c703000000.  mov qword [rbx], 0
0x00008765      4885d2         test rdx, rdx
0x00008768      48894b08       mov qword [rbx + 8], rcx
0x0000876c      48895d48       mov qword [rbp + 0x48], rbx
0x00008770      4889d3         mov rbx, rdx
0x00008773      75d3           jne 0x8748
0x00008775      4885c0         test rax, rax
0x00008778      7406           je 0x8780
0x0000877a      498b3c24       mov rdi, qword [r12]
0x0000877e      ffd0           call rax
0x00008780      49c704240000.  mov qword [r12], 0
0x00008788      49c744240800.  mov qword [r12 + 8], 0
0x00008791      4983c410       add r12, 0x10
0x00008795      4c396508       cmp qword [rbp + 8], r12                ; ../coreutils-8.31/lib/hash.c:-310
0x00008799      7795           ja 0x8730
0x0000879b      48c745180000.  mov qword [rbp + 0x18], 0
0x000087a3      48c745200000.  mov qword [rbp + 0x20], 0
0x000087ab      5b             pop rbx
0x000087ac      5d             pop rbp
0x000087ad      415c           pop r12
0x000087af      c3             ret
;-- hash_free:
0x000087b0      4154           push r12
0x000087b2      55             push rbp
0x000087b3      4989fc         mov r12, rdi
0x000087b6      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:-307
0x000087b7      48837f4000     cmp qword [rdi + 0x40], 0
0x000087bc      488b2f         mov rbp, qword [rdi]
0x000087bf      488b4708       mov rax, qword [rdi + 8]
0x000087c3      744e           je 0x8813                               ; ../coreutils-8.31/lib/hash.c:-305
0x000087c5      48837f2000     cmp qword [rdi + 0x20], 0
0x000087ca      7447           je 0x8813
0x000087cc      4839c5         cmp rbp, rax
0x000087cf      737b           jae 0x884c
0x000087d1      0f1f80000000.  nop dword [rax]
0x000087d8      488b7d00       mov rdi, qword [rbp]
0x000087dc      4885ff         test rdi, rdi
0x000087df      7425           je 0x8806
0x000087e1      4889eb         mov rbx, rbp
0x000087e4      eb0d           jmp 0x87f3
0x000087e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000087f0      488b3b         mov rdi, qword [rbx]
0x000087f3      41ff542440     call qword [r12 + 0x40]                 ; segment.PHDR
0x000087f8      488b5b08       mov rbx, qword [rbx + 8]
0x000087fc      4885db         test rbx, rbx
0x000087ff      75ef           jne 0x87f0
0x00008801      498b442408     mov rax, qword [r12 + 8]
0x00008806      4883c510       add rbp, 0x10
0x0000880a      4839e8         cmp rax, rbp
0x0000880d      77c9           ja 0x87d8
0x0000880f      498b2c24       mov rbp, qword [r12]
0x00008813      4839c5         cmp rbp, rax
0x00008816      7334           jae 0x884c
0x00008818      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:93
0x00008820      488b7d08       mov rdi, qword [rbp + 8]
0x00008824      4885ff         test rdi, rdi
0x00008827      7418           je 0x8841
0x00008829      0f1f80000000.  nop dword [rax]
0x00008830      488b5f08       mov rbx, qword [rdi + 8]
0x00008834      e8d7a1ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/hash.c:98
0x00008839      4885db         test rbx, rbx
0x0000883c      4889df         mov rdi, rbx
0x0000883f      75ef           jne 0x8830
0x00008841      4883c510       add rbp, 0x10                           ; ../coreutils-8.31/lib/hash.c:99
0x00008845      49396c2408     cmp qword [r12 + 8], rbp
0x0000884a      77d4           ja 0x8820
0x0000884c      498b7c2448     mov rdi, qword [r12 + 0x48]
0x00008851      4885ff         test rdi, rdi
0x00008854      741b           je 0x8871
0x00008856      662e0f1f8400.  nop word cs:[rax + rax]
0x00008860      488b5f08       mov rbx, qword [rdi + 8]
0x00008864      e8a7a1ffff     call sym..plt.got
0x00008869      4885db         test rbx, rbx
0x0000886c      4889df         mov rdi, rbx
0x0000886f      75ef           jne 0x8860
0x00008871      498b3c24       mov rdi, qword [r12]
0x00008875      e896a1ffff     call sym..plt.got
0x0000887a      5b             pop rbx
0x0000887b      4c89e7         mov rdi, r12
0x0000887e      5d             pop rbp
0x0000887f      415c           pop r12
0x00008881      e98aa1ffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/hash.c:107
0x00008886      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_rehash:
0x00008890      4154           push r12
0x00008892      55             push rbp
0x00008893      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:108
0x00008896      53             push rbx
0x00008897      4883ec60       sub rsp, 0x60
0x0000889b      4c8b6728       mov r12, qword [rdi + 0x28]
0x0000889f      64488b042528.  mov rax, qword fs:[0x28]
0x000088a8      4889442458     mov qword [rsp + 0x58], rax
0x000088ad      31c0           xor eax, eax
0x000088af      41807c241000   cmp byte [r12 + 0x10], 0
0x000088b5      7551           jne 0x8908
0x000088b7      4885f6         test rsi, rsi
0x000088ba      0f8878010000   js 0x8a38
0x000088c0      660fefc0       pxor xmm0, xmm0
0x000088c4      f3480f2ac6     cvtsi2ss xmm0, rsi                      ; ../coreutils-8.31/lib/hash.c:156
0x000088c9      f3410f5e4424.  divss xmm0, dword [r12 + 8]
0x000088d0      0f2e05f59001.  ucomiss xmm0, dword [0x000219cc]
0x000088d7      0f8333010000   jae 0x8a10
0x000088dd      0f2e05ec9001.  ucomiss xmm0, dword [0x000219d0]
0x000088e4      0f8276010000   jb 0x8a60
0x000088ea      f30f5c05de90.  subss xmm0, dword [0x000219d0]          ; ../coreutils-8.31/lib/hash.c:161
0x000088f2      48b800000000.  movabs rax, 0x8000000000000000
0x000088fc      f3480f2cf0     cvttss2si rsi, xmm0
0x00008901      4831c6         xor rsi, rax                            ; ../coreutils-8.31/lib/bitrotate.h:35
0x00008904      0f1f4000       nop dword [rax]
0x00008908      4889f7         mov rdi, rsi
0x0000890b      e8e0f3ffff     call sym.next_prime
0x00008910      ba08000000     mov edx, 8
0x00008915      4889c3         mov rbx, rax
0x00008918      31c9           xor ecx, ecx
0x0000891a      4889d0         mov rax, rdx
0x0000891d      48f7e3         mul rbx
0x00008920      0f8099010000   jo 0x8abf
0x00008926      4885c0         test rax, rax
0x00008929      b801000000     mov eax, 1
0x0000892e      480f48c8       cmovs rcx, rax
0x00008932      4885db         test rbx, rbx
0x00008935      0f84d5000000   je 0x8a10
0x0000893b      83e101         and ecx, 1
0x0000893e      0f85cc000000   jne 0x8a10
0x00008944      48395d10       cmp qword [rbp + 0x10], rbx
0x00008948      0f8422010000   je 0x8a70
0x0000894e      be10000000     mov esi, 0x10
0x00008953      4889df         mov rdi, rbx
0x00008956      e8559dffff     call sym.imp.calloc
0x0000895b      4885c0         test rax, rax
0x0000895e      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/bitrotate.h:-72
0x00008962      0f84a8000000   je 0x8a10
0x00008968      48895c2410     mov qword [rsp + 0x10], rbx
0x0000896d      48c1e304       shl rbx, 4
0x00008971      4c89642428     mov qword [rsp + 0x28], r12
0x00008976      4801c3         add rbx, rax
0x00008979      488b4530       mov rax, qword [rbp + 0x30]
0x0000897d      4989e4         mov r12, rsp
0x00008980      31d2           xor edx, edx
0x00008982      4889ee         mov rsi, rbp
0x00008985      4c89e7         mov rdi, r12
0x00008988      48895c2408     mov qword [rsp + 8], rbx
0x0000898d      48c744241800.  mov qword [rsp + 0x18], 0
0x00008996      4889442430     mov qword [rsp + 0x30], rax
0x0000899b      488b4538       mov rax, qword [rbp + 0x38]
0x0000899f      48c744242000.  mov qword [rsp + 0x20], 0
0x000089a8      4889442438     mov qword [rsp + 0x38], rax
0x000089ad      488b4540       mov rax, qword [rbp + 0x40]
0x000089b1      4889442440     mov qword [rsp + 0x40], rax
0x000089b6      488b4548       mov rax, qword [rbp + 0x48]
0x000089ba      4889442448     mov qword [rsp + 0x48], rax
0x000089bf      e8bcf5ffff     call sym.transfer_entries
0x000089c4      84c0           test al, al
0x000089c6      89c3           mov ebx, eax
0x000089c8      0f85b2000000   jne 0x8a80
0x000089ce      488b442448     mov rax, qword [rsp + 0x48]
0x000089d3      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/bitrotate.h:-53
0x000089d8      4c89e6         mov rsi, r12
0x000089db      4889ef         mov rdi, rbp
0x000089de      48894548       mov qword [rbp + 0x48], rax
0x000089e2      e899f5ffff     call sym.transfer_entries
0x000089e7      84c0           test al, al
0x000089e9      0f84da000000   je 0x8ac9
0x000089ef      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/bitrotate.h:-43
0x000089f1      4c89e6         mov rsi, r12
0x000089f4      4889ef         mov rdi, rbp
0x000089f7      e884f5ffff     call sym.transfer_entries
0x000089fc      84c0           test al, al
0x000089fe      0f84c5000000   je 0x8ac9
0x00008a04      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/bitrotate.h:-38
0x00008a08      e803a0ffff     call sym..plt.got
0x00008a0d      eb03           jmp 0x8a12
0x00008a0f      90             nop
0x00008a10      31db           xor ebx, ebx
0x00008a12      488b4c2458     mov rcx, qword [rsp + 0x58]
0x00008a17      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008a20      89d8           mov eax, ebx
0x00008a22      0f8592000000   jne 0x8aba
0x00008a28      4883c460       add rsp, 0x60
0x00008a2c      5b             pop rbx
0x00008a2d      5d             pop rbp
0x00008a2e      415c           pop r12
0x00008a30      c3             ret
0x00008a31      0f1f80000000.  nop dword [rax]
0x00008a38      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/bitrotate.h:-37
0x00008a3b      660fefc0       pxor xmm0, xmm0
0x00008a3f      48d1e8         shr rax, 1
0x00008a42      83e601         and esi, 1
0x00008a45      4809f0         or rax, rsi
0x00008a48      f3480f2ac0     cvtsi2ss xmm0, rax
0x00008a4d      f30f58c0       addss xmm0, xmm0
0x00008a51      e973feffff     jmp 0x88c9
0x00008a56      662e0f1f8400.  nop word cs:[rax + rax]
0x00008a60      f3480f2cf0     cvttss2si rsi, xmm0
0x00008a65      e99efeffff     jmp 0x8908
0x00008a6a      660f1f440000   nop word [rax + rax]
0x00008a70      bb01000000     mov ebx, 1
0x00008a75      eb9b           jmp 0x8a12
0x00008a77      660f1f840000.  nop word [rax + rax]
0x00008a80      488b7d00       mov rdi, qword [rbp]
0x00008a84      e8879fffff     call sym..plt.got
0x00008a89      488b0424       mov rax, qword [rsp]
0x00008a8d      48894500       mov qword [rbp], rax
0x00008a91      488b442408     mov rax, qword [rsp + 8]
0x00008a96      48894508       mov qword [rbp + 8], rax
0x00008a9a      488b442410     mov rax, qword [rsp + 0x10]
0x00008a9f      48894510       mov qword [rbp + 0x10], rax
0x00008aa3      488b442418     mov rax, qword [rsp + 0x18]
0x00008aa8      48894518       mov qword [rbp + 0x18], rax
0x00008aac      488b442448     mov rax, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/bitrotate.h:-12
0x00008ab1      48894548       mov qword [rbp + 0x48], rax
0x00008ab5      e958ffffff     jmp 0x8a12
0x00008aba      e8a19affff     call sym.imp.__stack_chk_fail
0x00008abf      b901000000     mov ecx, 1
0x00008ac4      e95dfeffff     jmp 0x8926
0x00008ac9      e83299ffff     call sym.imp.abort
0x00008ace      6690           nop
;-- hash_insert_if_absent:
0x00008ad0      4155           push r13
0x00008ad2      4154           push r12
0x00008ad4      55             push rbp
0x00008ad5      53             push rbx
0x00008ad6      4883ec18       sub rsp, 0x18
0x00008ada      64488b042528.  mov rax, qword fs:[0x28]
0x00008ae3      4889442408     mov qword [rsp + 8], rax
0x00008ae8      31c0           xor eax, eax
0x00008aea      4885f6         test rsi, rsi
0x00008aed      0f84ba010000   je 0x8cad
0x00008af3      4989e4         mov r12, rsp
0x00008af6      31c9           xor ecx, ecx
0x00008af8      4989d5         mov r13, rdx
0x00008afb      4c89e2         mov rdx, r12
0x00008afe      4889fb         mov rbx, rdi
0x00008b01      4889f5         mov rbp, rsi
0x00008b04      e8d7f2ffff     call sym.hash_find_entry
0x00008b09      4885c0         test rax, rax
0x00008b0c      4889c2         mov rdx, rax
0x00008b0f      742f           je 0x8b40
0x00008b11      31c0           xor eax, eax
0x00008b13      4d85ed         test r13, r13
0x00008b16      7404           je 0x8b1c
0x00008b18      49895500       mov qword [r13], rdx
0x00008b1c      488b4c2408     mov rcx, qword [rsp + 8]
0x00008b21      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008b2a      0f851f020000   jne 0x8d4f
0x00008b30      4883c418       add rsp, 0x18
0x00008b34      5b             pop rbx
0x00008b35      5d             pop rbp
0x00008b36      415c           pop r12
0x00008b38      415d           pop r13
0x00008b3a      c3             ret
0x00008b3b      0f1f440000     nop dword [rax + rax]
0x00008b40      488b4318       mov rax, qword [rbx + 0x18]
0x00008b44      4885c0         test rax, rax
0x00008b47      7877           js 0x8bc0
0x00008b49      660fefc9       pxor xmm1, xmm1
0x00008b4d      488b5328       mov rdx, qword [rbx + 0x28]
0x00008b51      f3480f2ac8     cvtsi2ss xmm1, rax
0x00008b56      488b4310       mov rax, qword [rbx + 0x10]
0x00008b5a      4885c0         test rax, rax
0x00008b5d      0f8887000000   js 0x8bea
0x00008b63      660fefc0       pxor xmm0, xmm0
0x00008b67      f3480f2ac0     cvtsi2ss xmm0, rax
0x00008b6c      f30f594208     mulss xmm0, dword [rdx + 8]             ; ../coreutils-8.31/lib/bitrotate.h:15
0x00008b71      0f2ec8         ucomiss xmm1, xmm0
0x00008b74      0f8796000000   ja 0x8c10
0x00008b7a      4c8b2424       mov r12, qword [rsp]
0x00008b7e      49833c2400     cmp qword [r12], 0
0x00008b83      0f842f010000   je 0x8cb8
0x00008b89      488b4348       mov rax, qword [rbx + 0x48]
0x00008b8d      4885c0         test rax, rax
0x00008b90      0f843a010000   je 0x8cd0
0x00008b96      488b5008       mov rdx, qword [rax + 8]
0x00008b9a      48895348       mov qword [rbx + 0x48], rdx
0x00008b9e      498b542408     mov rdx, qword [r12 + 8]
0x00008ba3      488928         mov qword [rax], rbp
0x00008ba6      48895008       mov qword [rax + 8], rdx
0x00008baa      4989442408     mov qword [r12 + 8], rax
0x00008baf      b801000000     mov eax, 1
0x00008bb4      4883432001     add qword [rbx + 0x20], 1
0x00008bb9      e95effffff     jmp 0x8b1c
0x00008bbe      6690           nop
0x00008bc0      4889c2         mov rdx, rax
0x00008bc3      660fefc9       pxor xmm1, xmm1
0x00008bc7      83e001         and eax, 1
0x00008bca      48d1ea         shr rdx, 1
0x00008bcd      4809c2         or rdx, rax
0x00008bd0      488b4310       mov rax, qword [rbx + 0x10]
0x00008bd4      f3480f2aca     cvtsi2ss xmm1, rdx                      ; ../coreutils-8.31/lib/bitrotate.h:-3
0x00008bd9      488b5328       mov rdx, qword [rbx + 0x28]
0x00008bdd      4885c0         test rax, rax
0x00008be0      f30f58c9       addss xmm1, xmm1
0x00008be4      0f8979ffffff   jns 0x8b63
0x00008bea      4889c1         mov rcx, rax
0x00008bed      660fefc0       pxor xmm0, xmm0
0x00008bf1      48d1e9         shr rcx, 1
0x00008bf4      83e001         and eax, 1                              ; ../coreutils-8.31/lib/bitrotate.h:1
0x00008bf7      4809c1         or rcx, rax
0x00008bfa      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00008bff      f30f58c0       addss xmm0, xmm0
0x00008c03      e964ffffff     jmp 0x8b6c
0x00008c08      0f1f84000000.  nop dword [rax + rax]
0x00008c10      488d7b28       lea rdi, [rbx + 0x28]
0x00008c14      e8e7f2ffff     call sym.check_tuning.isra.0
0x00008c19      488b4310       mov rax, qword [rbx + 0x10]
0x00008c1d      488b5328       mov rdx, qword [rbx + 0x28]
0x00008c21      4885c0         test rax, rax
0x00008c24      f30f105208     movss xmm2, dword [rdx + 8]
0x00008c29      0f88c1000000   js 0x8cf0
0x00008c2f      660fefc0       pxor xmm0, xmm0
0x00008c33      f3480f2ac0     cvtsi2ss xmm0, rax
0x00008c38      488b4318       mov rax, qword [rbx + 0x18]
0x00008c3c      4885c0         test rax, rax
0x00008c3f      0f88cb000000   js 0x8d10
0x00008c45      660fefc9       pxor xmm1, xmm1
0x00008c49      f3480f2ac8     cvtsi2ss xmm1, rax
0x00008c4e      0f28da         movaps xmm3, xmm2
0x00008c51      f30f59d8       mulss xmm3, xmm0
0x00008c55      0f2ecb         ucomiss xmm1, xmm3
0x00008c58      0f861cffffff   jbe 0x8b7a
0x00008c5e      807a1000       cmp byte [rdx + 0x10], 0
0x00008c62      f30f59420c     mulss xmm0, dword [rdx + 0xc]
0x00008c67      7504           jne 0x8c6d
0x00008c69      f30f59c2       mulss xmm0, xmm2
0x00008c6d      0f2e05588d01.  ucomiss xmm0, dword [0x000219cc]
0x00008c74      736d           jae 0x8ce3
0x00008c76      0f2e05538d01.  ucomiss xmm0, dword [0x000219d0]
0x00008c7d      0f83ad000000   jae 0x8d30
0x00008c83      f3480f2cf0     cvttss2si rsi, xmm0
0x00008c88      4889df         mov rdi, rbx
0x00008c8b      e800fcffff     call sym.hash_rehash
0x00008c90      84c0           test al, al
0x00008c92      744f           je 0x8ce3
0x00008c94      31c9           xor ecx, ecx
0x00008c96      4c89e2         mov rdx, r12
0x00008c99      4889ee         mov rsi, rbp
0x00008c9c      4889df         mov rdi, rbx
0x00008c9f      e83cf1ffff     call sym.hash_find_entry
0x00008ca4      4885c0         test rax, rax
0x00008ca7      0f84cdfeffff   je 0x8b7a
0x00008cad      e84e97ffff     call sym.imp.abort
0x00008cb2      660f1f440000   nop word [rax + rax]
0x00008cb8      49892c24       mov qword [r12], rbp
0x00008cbc      b801000000     mov eax, 1
0x00008cc1      4883432001     add qword [rbx + 0x20], 1
0x00008cc6      4883431801     add qword [rbx + 0x18], 1
0x00008ccb      e94cfeffff     jmp 0x8b1c
0x00008cd0      bf10000000     mov edi, 0x10
0x00008cd5      e8a69affff     call sym.imp.malloc
0x00008cda      4885c0         test rax, rax
0x00008cdd      0f85bbfeffff   jne 0x8b9e
0x00008ce3      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00008ce8      e92ffeffff     jmp 0x8b1c
0x00008ced      0f1f00         nop dword [rax]
0x00008cf0      4889c1         mov rcx, rax
0x00008cf3      660fefc0       pxor xmm0, xmm0
0x00008cf7      48d1e9         shr rcx, 1
0x00008cfa      83e001         and eax, 1
0x00008cfd      4809c1         or rcx, rax
0x00008d00      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00008d05      f30f58c0       addss xmm0, xmm0
0x00008d09      e92affffff     jmp 0x8c38
0x00008d0e      6690           nop
0x00008d10      4889c1         mov rcx, rax
0x00008d13      660fefc9       pxor xmm1, xmm1
0x00008d17      48d1e9         shr rcx, 1
0x00008d1a      83e001         and eax, 1
0x00008d1d      4809c1         or rcx, rax
0x00008d20      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00008d25      f30f58c9       addss xmm1, xmm1
0x00008d29      e920ffffff     jmp 0x8c4e
0x00008d2e      6690           nop
0x00008d30      f30f5c05988c.  subss xmm0, dword [0x000219d0]
0x00008d38      48b800000000.  movabs rax, 0x8000000000000000
0x00008d42      f3480f2cf0     cvttss2si rsi, xmm0
0x00008d47      4831c6         xor rsi, rax
0x00008d4a      e939ffffff     jmp 0x8c88
0x00008d4f      e80c98ffff     call sym.imp.__stack_chk_fail
0x00008d54      6690           nop
0x00008d56      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_insert:
0x00008d60      53             push rbx
0x00008d61      4889f3         mov rbx, rsi
0x00008d64      4883ec10       sub rsp, 0x10
0x00008d68      4889e2         mov rdx, rsp
0x00008d6b      64488b042528.  mov rax, qword fs:[0x28]
0x00008d74      4889442408     mov qword [rsp + 8], rax
0x00008d79      31c0           xor eax, eax
0x00008d7b      e850fdffff     call sym.hash_insert_if_absent
0x00008d80      83f8ff         cmp eax, 0xffffffff
0x00008d83      742b           je 0x8db0
0x00008d85      85c0           test eax, eax
0x00008d87      7504           jne 0x8d8d
0x00008d89      488b1c24       mov rbx, qword [rsp]
0x00008d8d      488b4c2408     mov rcx, qword [rsp + 8]
0x00008d92      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008d9b      4889d8         mov rax, rbx
0x00008d9e      7514           jne 0x8db4
0x00008da0      4883c410       add rsp, 0x10
0x00008da4      5b             pop rbx
0x00008da5      c3             ret
0x00008da6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008db0      31db           xor ebx, ebx
0x00008db2      ebd9           jmp 0x8d8d
0x00008db4      e8a797ffff     call sym.imp.__stack_chk_fail
0x00008db9      0f1f80000000.  nop dword [rax]
;-- hash_delete:
0x00008dc0      4154           push r12
0x00008dc2      55             push rbp
0x00008dc3      b901000000     mov ecx, 1
0x00008dc8      53             push rbx
0x00008dc9      4889fb         mov rbx, rdi
0x00008dcc      4883ec10       sub rsp, 0x10
0x00008dd0      4889e2         mov rdx, rsp
0x00008dd3      64488b042528.  mov rax, qword fs:[0x28]
0x00008ddc      4889442408     mov qword [rsp + 8], rax
0x00008de1      31c0           xor eax, eax
0x00008de3      e8f8efffff     call sym.hash_find_entry
0x00008de8      4885c0         test rax, rax
0x00008deb      4889c5         mov rbp, rax
0x00008dee      740f           je 0x8dff
0x00008df0      488b0424       mov rax, qword [rsp]
0x00008df4      48836b2001     sub qword [rbx + 0x20], 1
0x00008df9      48833800       cmp qword [rax], 0
0x00008dfd      7421           je 0x8e20
0x00008dff      488b4c2408     mov rcx, qword [rsp + 8]
0x00008e04      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008e0d      4889e8         mov rax, rbp
0x00008e10      0f85a8010000   jne 0x8fbe
0x00008e16      4883c410       add rsp, 0x10
0x00008e1a      5b             pop rbx
0x00008e1b      5d             pop rbp
0x00008e1c      415c           pop r12
0x00008e1e      c3             ret
0x00008e1f      90             nop
0x00008e20      488b4318       mov rax, qword [rbx + 0x18]
0x00008e24      4883e801       sub rax, 1
0x00008e28      4885c0         test rax, rax
0x00008e2b      48894318       mov qword [rbx + 0x18], rax
0x00008e2f      0f88fb000000   js 0x8f30
0x00008e35      660fefc0       pxor xmm0, xmm0
0x00008e39      f3480f2ac0     cvtsi2ss xmm0, rax
0x00008e3e      488b4310       mov rax, qword [rbx + 0x10]
0x00008e42      488b5328       mov rdx, qword [rbx + 0x28]
0x00008e46      4885c0         test rax, rax
0x00008e49      0f88c1000000   js 0x8f10
0x00008e4f      660fefc9       pxor xmm1, xmm1
0x00008e53      f3480f2ac8     cvtsi2ss xmm1, rax
0x00008e58      f30f590a       mulss xmm1, dword [rdx]
0x00008e5c      0f2ec8         ucomiss xmm1, xmm0
0x00008e5f      769e           jbe 0x8dff
0x00008e61      488d7b28       lea rdi, [rbx + 0x28]
0x00008e65      e896f0ffff     call sym.check_tuning.isra.0
0x00008e6a      488b4310       mov rax, qword [rbx + 0x10]
0x00008e6e      488b5328       mov rdx, qword [rbx + 0x28]
0x00008e72      4885c0         test rax, rax
0x00008e75      0f8825010000   js 0x8fa0
0x00008e7b      660fefc0       pxor xmm0, xmm0
0x00008e7f      f3480f2ac0     cvtsi2ss xmm0, rax
0x00008e84      488b4318       mov rax, qword [rbx + 0x18]
0x00008e88      4885c0         test rax, rax
0x00008e8b      0f88ef000000   js 0x8f80
0x00008e91      660fefc9       pxor xmm1, xmm1
0x00008e95      f3480f2ac8     cvtsi2ss xmm1, rax
0x00008e9a      f30f1012       movss xmm2, dword [rdx]
0x00008e9e      f30f59d0       mulss xmm2, xmm0
0x00008ea2      0f2ed1         ucomiss xmm2, xmm1
0x00008ea5      0f8654ffffff   jbe 0x8dff
0x00008eab      807a1000       cmp byte [rdx + 0x10], 0
0x00008eaf      f30f594204     mulss xmm0, dword [rdx + 4]
0x00008eb4      0f84b6000000   je 0x8f70
0x00008eba      0f2e050f8b01.  ucomiss xmm0, dword [0x000219d0]
0x00008ec1      0f8389000000   jae 0x8f50
0x00008ec7      f3480f2cf0     cvttss2si rsi, xmm0
0x00008ecc      4889df         mov rdi, rbx
0x00008ecf      e8bcf9ffff     call sym.hash_rehash
0x00008ed4      84c0           test al, al
0x00008ed6      0f8523ffffff   jne 0x8dff
0x00008edc      488b7b48       mov rdi, qword [rbx + 0x48]
0x00008ee0      4885ff         test rdi, rdi
0x00008ee3      7414           je 0x8ef9
0x00008ee5      0f1f00         nop dword [rax]
0x00008ee8      4c8b6708       mov r12, qword [rdi + 8]
0x00008eec      e81f9bffff     call sym..plt.got
0x00008ef1      4d85e4         test r12, r12
0x00008ef4      4c89e7         mov rdi, r12
0x00008ef7      75ef           jne 0x8ee8
0x00008ef9      48c743480000.  mov qword [rbx + 0x48], 0
0x00008f01      e9f9feffff     jmp 0x8dff
0x00008f06      662e0f1f8400.  nop word cs:[rax + rax]
0x00008f10      4889c1         mov rcx, rax
0x00008f13      660fefc9       pxor xmm1, xmm1
0x00008f17      48d1e9         shr rcx, 1
0x00008f1a      83e001         and eax, 1
0x00008f1d      4809c1         or rcx, rax
0x00008f20      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00008f25      f30f58c9       addss xmm1, xmm1
0x00008f29      e92affffff     jmp 0x8e58
0x00008f2e      6690           nop
0x00008f30      4889c2         mov rdx, rax
0x00008f33      660fefc0       pxor xmm0, xmm0
0x00008f37      48d1ea         shr rdx, 1
0x00008f3a      83e001         and eax, 1
0x00008f3d      4809c2         or rdx, rax
0x00008f40      f3480f2ac2     cvtsi2ss xmm0, rdx
0x00008f45      f30f58c0       addss xmm0, xmm0
0x00008f49      e9f0feffff     jmp 0x8e3e
0x00008f4e      6690           nop
0x00008f50      f30f5c05788a.  subss xmm0, dword [0x000219d0]
0x00008f58      48b800000000.  movabs rax, 0x8000000000000000
0x00008f62      f3480f2cf0     cvttss2si rsi, xmm0
0x00008f67      4831c6         xor rsi, rax
0x00008f6a      e95dffffff     jmp 0x8ecc
0x00008f6f      90             nop
0x00008f70      f30f594208     mulss xmm0, dword [rdx + 8]
0x00008f75      e940ffffff     jmp 0x8eba
0x00008f7a      660f1f440000   nop word [rax + rax]
0x00008f80      4889c1         mov rcx, rax
0x00008f83      660fefc9       pxor xmm1, xmm1
0x00008f87      48d1e9         shr rcx, 1
0x00008f8a      83e001         and eax, 1
0x00008f8d      4809c1         or rcx, rax
0x00008f90      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00008f95      f30f58c9       addss xmm1, xmm1
0x00008f99      e9fcfeffff     jmp 0x8e9a
0x00008f9e      6690           nop
0x00008fa0      4889c1         mov rcx, rax
0x00008fa3      660fefc0       pxor xmm0, xmm0
0x00008fa7      48d1e9         shr rcx, 1
0x00008faa      83e001         and eax, 1
0x00008fad      4809c1         or rcx, rax
0x00008fb0      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00008fb5      f30f58c0       addss xmm0, xmm0
0x00008fb9      e9c6feffff     jmp 0x8e84
0x00008fbe      e89d95ffff     call sym.imp.__stack_chk_fail
0x00008fc3      662e0f1f8400.  nop word cs:[rax + rax]
0x00008fcd      0f1f00         nop dword [rax]
;-- adjust_value.part.0:
0x00008fd0      d905fa890100   fld dword [0x000219d0]                  ; ../coreutils-8.31/lib/human.c:54
0x00008fd6      db6c2408       fld xword [rsp + 8]
0x00008fda      dbe9           fucomi st(1)                            ; ../coreutils-8.31/lib/human.c:62
0x00008fdc      7372           jae 0x9050
0x00008fde      ddd9           fstp st(1)
0x00008fe0      d97c24f6       fnstcw word [rsp - 0xa]
0x00008fe4      0fb74424f6     movzx eax, word [rsp - 0xa]
0x00008fe9      80cc0c         or ah, 0xc
0x00008fec      66894424f4     mov word [rsp - 0xc], ax
0x00008ff1      d9c0           fld st(0)
0x00008ff3      d96c24f4       fldcw word [rsp - 0xc]
0x00008ff7      df7c24e8       fistp qword [rsp - 0x18]
0x00008ffb      d96c24f6       fldcw word [rsp - 0xa]
0x00008fff      488b4424e8     mov rax, qword [rsp - 0x18]
0x00009004      48894424e0     mov qword [rsp - 0x20], rax
0x00009009      4885c0         test rax, rax
0x0000900c      df6c24e0       fild qword [rsp - 0x20]
0x00009010      7906           jns 0x9018
0x00009012      d805b4890100   fadd dword [0x000219cc]
0x00009018      85ff           test edi, edi                           ; ../coreutils-8.31/lib/human.c:63
0x0000901a      752c           jne 0x9048
0x0000901c      d9c9           fxch st(1)
0x0000901e      dfe9           fucomip st(1)
0x00009020      7a06           jp 0x9028
0x00009022      7426           je 0x904a
0x00009024      ddd8           fstp st(0)
0x00009026      eb08           jmp 0x9030
0x00009028      ddd8           fstp st(0)
0x0000902a      660f1f440000   nop word [rax + rax]
0x00009030      4883c001       add rax, 1
0x00009034      48894424e0     mov qword [rsp - 0x20], rax
0x00009039      4885c0         test rax, rax
0x0000903c      df6c24e0       fild qword [rsp - 0x20]
0x00009040      784e           js 0x9090
0x00009042      eb06           jmp 0x904a
0x00009044      0f1f4000       nop dword [rax]
0x00009048      ddd9           fstp st(1)
0x0000904a      f3c3           ret                                     ; ../coreutils-8.31/lib/human.c:67
0x0000904c      0f1f4000       nop dword [rax]
0x00009050      d97c24f6       fnstcw word [rsp - 0xa]                 ; ../coreutils-8.31/lib/human.c:62
0x00009054      0fb74424f6     movzx eax, word [rsp - 0xa]
0x00009059      dce1           fsubr st(1), st(0)
0x0000905b      d9c9           fxch st(1)
0x0000905d      48ba00000000.  movabs rdx, 0x8000000000000000
0x00009067      80cc0c         or ah, 0xc
0x0000906a      66894424f4     mov word [rsp - 0xc], ax
0x0000906f      d96c24f4       fldcw word [rsp - 0xc]
0x00009073      df7c24e8       fistp qword [rsp - 0x18]
0x00009077      d96c24f6       fldcw word [rsp - 0xa]
0x0000907b      488b4424e8     mov rax, qword [rsp - 0x18]
0x00009080      4831d0         xor rax, rdx
0x00009083      e97cffffff     jmp 0x9004
0x00009088      0f1f84000000.  nop dword [rax + rax]
0x00009090      d80536890100   fadd dword [0x000219cc]
0x00009096      c3             ret                                     ; ../coreutils-8.31/lib/human.c:67
0x00009097      660f1f840000.  nop word [rax + rax]
;-- human_readable:
0x000090a0      4157           push r15
0x000090a2      4156           push r14                                ; ../coreutils-8.31/lib/human.c:28
0x000090a4      89d0           mov eax, edx
0x000090a6      4155           push r13                                ; ../coreutils-8.31/lib/human.c:27
0x000090a8      4154           push r12
0x000090aa      4189d7         mov r15d, edx
0x000090ad      55             push rbp
0x000090ae      53             push rbx
0x000090af      83e020         and eax, 0x20                           ; "@"
0x000090b2      4183e703       and r15d, 3
0x000090b6      4189d4         mov r12d, edx
0x000090b9      4889fb         mov rbx, rdi
0x000090bc      4881ec980000.  sub rsp, 0x98
0x000090c3      48894c2418     mov qword [rsp + 0x18], rcx
0x000090c8      89442430       mov dword [rsp + 0x30], eax
0x000090cc      64488b0c2528.  mov rcx, qword fs:[0x28]
0x000090d5      48898c248800.  mov qword [rsp + 0x88], rcx
0x000090dd      31c9           xor ecx, ecx
0x000090df      83f801         cmp eax, 1
0x000090e2      48893424       mov qword [rsp], rsi
0x000090e6      4c89442410     mov qword [rsp + 0x10], r8
0x000090eb      19c0           sbb eax, eax
0x000090ed      83e0e8         and eax, 0xffffffe8                     ; 4294967272
0x000090f0      0500040000     add eax, 0x400
0x000090f5      89442434       mov dword [rsp + 0x34], eax
0x000090f9      e89293ffff     call sym.imp.localeconv
0x000090fe      4c8b30         mov r14, qword [rax]
0x00009101      4989c5         mov r13, rax
0x00009104      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/human.c:50
0x00009107      e82494ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/human.c:51
0x0000910c      498b4d10       mov rcx, qword [r13 + 0x10]
0x00009110      4d8b6d08       mov r13, qword [r13 + 8]
0x00009114      4889c5         mov rbp, rax
0x00009117      4883e801       sub rax, 1
0x0000911b      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/human.c:57
0x00009120      4883f810       cmp rax, 0x10
0x00009124      488d05719501.  lea rax, [0x0002269c]                   ; "."
0x0000912b      4c89ef         mov rdi, r13
0x0000912e      480f43ea       cmovae rbp, rdx
0x00009132      48894c2438     mov qword [rsp + 0x38], rcx
0x00009137      4c0f43f0       cmovae r14, rax
0x0000913b      e8f093ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/human.c:67
0x00009140      4883f811       cmp rax, 0x11
0x00009144      488d05968e01.  lea rax, [0x00021fe1]
0x0000914b      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00009150      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00009155      4c0f43e8       cmovae r13, rax
0x00009159      488b0424       mov rax, qword [rsp]
0x0000915d      480587020000   add rax, 0x287
0x00009163      4839cf         cmp rdi, rcx
0x00009166      4889442408     mov qword [rsp + 8], rax
0x0000916b      0f8747010000   ja 0x92b8
0x00009171      31d2           xor edx, edx
0x00009173      4889c8         mov rax, rcx
0x00009176      48f7f7         div rdi
0x00009179      4885d2         test rdx, rdx
0x0000917c      4889c7         mov rdi, rax
0x0000917f      0f845b030000   je 0x94e0
0x00009185      48894c2418     mov qword [rsp + 0x18], rcx
0x0000918a      4885c9         test rcx, rcx
0x0000918d      df6c2418       fild qword [rsp + 0x18]
0x00009191      7906           jns 0x9199
0x00009193      d80533880100   fadd dword [0x000219cc]
0x00009199      488b442410     mov rax, qword [rsp + 0x10]
0x0000919e      4889442418     mov qword [rsp + 0x18], rax
0x000091a3      4885c0         test rax, rax
0x000091a6      df6c2418       fild qword [rsp + 0x18]
0x000091aa      7906           jns 0x91b2
0x000091ac      d8051a880100   fadd dword [0x000219cc]
0x000091b2      def9           fdivp st(1)
0x000091b4      48895c2418     mov qword [rsp + 0x18], rbx
0x000091b9      4885db         test rbx, rbx
0x000091bc      df6c2418       fild qword [rsp + 0x18]                 ; ../coreutils-8.31/lib/human.c:98
0x000091c0      7906           jns 0x91c8
0x000091c2      d80504880100   fadd dword [0x000219cc]
0x000091c8      41f6c410       test r12b, 0x10                         ; ../coreutils-8.31/lib/human.c:111
0x000091cc      dec9           fmulp st(1)
0x000091ce      0f84c4010000   je 0x9398
0x000091d4      db442434       fild dword [rsp + 0x34]                 ; ../coreutils-8.31/lib/human.c:115
0x000091d8      31db           xor ebx, ebx
0x000091da      d9c0           fld st(0)
0x000091dc      eb06           jmp 0x91e4
0x000091de      6690           nop
0x000091e0      ddd9           fstp st(1)
0x000091e2      d9ca           fxch st(2)
0x000091e4      d9c0           fld st(0)
0x000091e6      83c301         add ebx, 1
0x000091e9      d8ca           fmul st(2)
0x000091eb      d9cb           fxch st(3)
0x000091ed      dbeb           fucomi st(3)
0x000091ef      720f           jb 0x9200
0x000091f1      83fb08         cmp ebx, 8
0x000091f4      75ea           jne 0x91e0
0x000091f6      ddda           fstp st(2)
0x000091f8      ddda           fstp st(2)
0x000091fa      eb08           jmp 0x9204
0x000091fc      0f1f4000       nop dword [rax]
0x00009200      ddda           fstp st(2)
0x00009202      ddda           fstp st(2)
0x00009204      8b4c2430       mov ecx, dword [rsp + 0x30]
0x00009208      4883c501       add rbp, 1
0x0000920c      31c0           xor eax, eax
0x0000920e      def1           fdivrp st(1)
0x00009210      85c9           test ecx, ecx
0x00009212      0f94c0         sete al
0x00009215      4183ff01       cmp r15d, 1
0x00009219      488d440501     lea rax, [rbp + rax + 1]
0x0000921e      4889442418     mov qword [rsp + 0x18], rax
0x00009223      0f8467050000   je 0x9790
0x00009229      db2d01880100   fld xword [0x00021a30]
0x0000922f      dfe9           fucomip st(1)
0x00009231      0f87d1030000   ja 0x9608
0x00009237      d9c0           fld st(0)
0x00009239      db7c2420       fstp xword [rsp + 0x20]
0x0000923d      4883ec10       sub rsp, 0x10
0x00009241      488d0d9e8701.  lea rcx, str..1Lf                       ; 0x219e6 ; "%.1Lf"
0x00009248      be01000000     mov esi, 1
0x0000924d      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00009254      31c0           xor eax, eax
0x00009256      4c8b742410     mov r14, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/human.c:123
0x0000925b      4c89f7         mov rdi, r14
0x0000925e      db3c24         fstp xword [rsp]                        ; ../coreutils-8.31/lib/human.c:126
0x00009261      e89a97ffff     call sym.imp.__sprintf_chk
0x00009266      4c89f7         mov rdi, r14
0x00009269      e8c292ffff     call sym.imp.strlen
0x0000926e      59             pop rcx
0x0000926f      5e             pop rsi
0x00009270      483b442418     cmp rax, qword [rsp + 0x18]
0x00009275      4989c6         mov r14, rax
0x00009278      db6c2420       fld xword [rsp + 0x20]
0x0000927c      0f87a6050000   ja 0x9828                               ; ../coreutils-8.31/lib/human.c:128
0x00009282      41f6c408       test r12b, 8
0x00009286      0f8464010000   je 0x93f0
0x0000928c      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/human.c:131
0x00009290      42807c30ff30   cmp byte [rax + r14 - 1], 0x30
0x00009296      0f855c010000   jne 0x93f8
0x0000929c      d9058a870100   fld dword [0x00021a2c]
0x000092a2      4183ff01       cmp r15d, 1
0x000092a6      dcc9           fmul st(1), st(0)
0x000092a8      0f8582050000   jne 0x9830                              ; ../coreutils-8.31/lib/human.c:81
0x000092ae      e930050000     jmp 0x97e3
0x000092b3      0f1f440000     nop dword [rax + rax]
0x000092b8      4885c9         test rcx, rcx
0x000092bb      0f84c4feffff   je 0x9185
0x000092c1      488b442410     mov rax, qword [rsp + 0x10]
0x000092c6      31d2           xor edx, edx
0x000092c8      48f7f1         div rcx
0x000092cb      4885d2         test rdx, rdx
0x000092ce      4989c0         mov r8, rax
0x000092d1      0f85aefeffff   jne 0x9185
0x000092d7      4889d8         mov rax, rbx
0x000092da      31d2           xor edx, edx
0x000092dc      49f7f0         div r8
0x000092df      4889c3         mov rbx, rax
0x000092e2      488d0492       lea rax, [rdx + rdx*4]
0x000092e6      31d2           xor edx, edx
0x000092e8      4889de         mov rsi, rbx
0x000092eb      4801c0         add rax, rax
0x000092ee      49f7f0         div r8
0x000092f1      4801d2         add rdx, rdx
0x000092f4      4189c1         mov r9d, eax
0x000092f7      4939d0         cmp r8, rdx
0x000092fa      0f8688050000   jbe 0x9888
0x00009300      31ff           xor edi, edi
0x00009302      4885d2         test rdx, rdx
0x00009305      400f95c7       setne dil
0x00009309      4489e1         mov ecx, r12d
0x0000930c      4c8b442408     mov r8, qword [rsp + 8]
0x00009311      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00009316      83e110         and ecx, 0x10
0x00009319      0f84c1030000   je 0x96e0
0x0000931f      448b442434     mov r8d, dword [rsp + 0x34]
0x00009324      4939f0         cmp r8, rsi                             ; ../coreutils-8.31/lib/human.c:33
0x00009327      4d89c3         mov r11, r8                             ; ../coreutils-8.31/lib/human.c:35
0x0000932a      0f8770050000   ja 0x98a0
0x00009330      31db           xor ebx, ebx
0x00009332      eb23           jmp 0x9357
0x00009334      0f1f4000       nop dword [rax]
0x00009338      85ff           test edi, edi
0x0000933a      400f95c7       setne dil
0x0000933e      400fb6ff       movzx edi, dil                          ; ../coreutils-8.31/lib/human.c:27
0x00009342      83c301         add ebx, 1
0x00009345      4d39d0         cmp r8, r10
0x00009348      0f870f030000   ja 0x965d                               ; ../coreutils-8.31/lib/human.c:26
0x0000934e      83fb08         cmp ebx, 8
0x00009351      0f84a1050000   je 0x98f8
0x00009357      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/human.c:29
0x0000935a      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/human.c:28
0x0000935c      89fe           mov esi, edi
0x0000935e      49f7f0         div r8
0x00009361      d1fe           sar esi, 1
0x00009363      4989c2         mov r10, rax
0x00009366      8d0492         lea eax, [rdx + rdx*4]
0x00009369      31d2           xor edx, edx
0x0000936b      418d0441       lea eax, [r9 + rax*2]
0x0000936f      41f7f3         div r11d
0x00009372      8d1456         lea edx, [rsi + rdx*2]
0x00009375      4189c1         mov r9d, eax
0x00009378      4c89d6         mov rsi, r10
0x0000937b      01d7           add edi, edx
0x0000937d      4139d3         cmp r11d, edx
0x00009380      77b6           ja 0x9338
0x00009382      4139fb         cmp r11d, edi
0x00009385      400f92c7       setb dil
0x00009389      400fb6ff       movzx edi, dil
0x0000938d      83c702         add edi, 2
0x00009390      ebb0           jmp 0x9342
0x00009392      660f1f440000   nop word [rax + rax]
0x00009398      4183ff01       cmp r15d, 1
0x0000939c      740e           je 0x93ac
0x0000939e      db2d8c860100   fld xword [0x00021a30]
0x000093a4      dfe9           fucomip st(1)
0x000093a6      0f8784020000   ja 0x9630
0x000093ac      4883ec10       sub rsp, 0x10
0x000093b0      488d0d298601.  lea rcx, [0x000219e0]                   ; "%.0Lf"
0x000093b7      be01000000     mov esi, 1
0x000093bc      488b5c2410     mov rbx, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/human.c:-99
0x000093c1      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000093c8      31c0           xor eax, eax
0x000093ca      db3c24         fstp xword [rsp]
0x000093cd      31ed           xor ebp, ebp
0x000093cf      4889df         mov rdi, rbx
0x000093d2      e82996ffff     call sym.imp.__sprintf_chk
0x000093d7      4889df         mov rdi, rbx
0x000093da      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x000093df      e84c91ffff     call sym.imp.strlen
0x000093e4      5e             pop rsi
0x000093e5      5f             pop rdi
0x000093e6      4989c6         mov r14, rax
0x000093e9      eb15           jmp 0x9400
0x000093eb      0f1f440000     nop dword [rax + rax]
0x000093f0      ddd8           fstp st(0)
0x000093f2      eb0c           jmp 0x9400
0x000093f4      0f1f4000       nop dword [rax]
0x000093f8      ddd8           fstp st(0)
0x000093fa      660f1f440000   nop word [rax + rax]
0x00009400      4c8b7c2408     mov r15, qword [rsp + 8]
0x00009405      488b3424       mov rsi, qword [rsp]
0x00009409      4c89f2         mov rdx, r14
0x0000940c      4d29f7         sub r15, r14
0x0000940f      4929ee         sub r14, rbp
0x00009412      4c89ff         mov rdi, r15
0x00009415      e87694ffff     call sym.imp.memmove
0x0000941a      4d89f0         mov r8, r14
0x0000941d      4d01f8         add r8, r15
0x00009420      41f6c404       test r12b, 4
0x00009424      0f85de000000   jne 0x9508
0x0000942a      41f6c480       test r12b, 0x80
0x0000942e      7477           je 0x94a7
0x00009430      83fbff         cmp ebx, 0xffffffff
0x00009433      0f8417030000   je 0x9750
0x00009439      4489e0         mov eax, r12d
0x0000943c      2500010000     and eax, 0x100
0x00009441      89c1           mov ecx, eax
0x00009443      09d9           or ecx, ebx                             ; ../coreutils-8.31/lib/human.c:-125
0x00009445      7460           je 0x94a7
0x00009447      4183e440       and r12d, 0x40                          ; segment.PHDR
0x0000944b      0f8597010000   jne 0x95e8
0x00009451      85db           test ebx, ebx
0x00009453      0f842d060000   je 0x9a86
0x00009459      83fb01         cmp ebx, 1
0x0000945c      750e           jne 0x946c                              ; ../coreutils-8.31/lib/human.c:-122
0x0000945e      448b4c2430     mov r9d, dword [rsp + 0x30]
0x00009463      4585c9         test r9d, r9d
0x00009466      0f8444040000   je 0x98b0
0x0000946c      488d0dad8501.  lea rcx, obj.power_letter               ; 0x21a20
0x00009473      4863db         movsxd rbx, ebx
0x00009476      488b7c2408     mov rdi, qword [rsp + 8]
0x0000947b      85c0           test eax, eax
0x0000947d      0fb60c19       movzx ecx, byte [rcx + rbx]
0x00009481      488d5701       lea rdx, [rdi + 1]                      ; ../coreutils-8.31/lib/human.c:-311
0x00009485      880f           mov byte [rdi], cl                      ; ../coreutils-8.31/lib/human.c:-310
0x00009487      0f8437040000   je 0x98c4
0x0000948d      448b442430     mov r8d, dword [rsp + 0x30]
0x00009492      4585c0         test r8d, r8d
0x00009495      0f85b5010000   jne 0x9650
0x0000949b      488d4201       lea rax, [rdx + 1]
0x0000949f      c60242         mov byte [rdx], 0x42                    ; 'B'
                                                                       ; [0x42:1]=0
0x000094a2      4889442408     mov qword [rsp + 8], rax
0x000094a7      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/human.c:-427
0x000094ac      488b8c248800.  mov rcx, qword [rsp + 0x88]
0x000094b4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000094bd      c60000         mov byte [rax], 0
0x000094c0      4c89f8         mov rax, r15
0x000094c3      0f8592050000   jne 0x9a5b
0x000094c9      4881c4980000.  add rsp, 0x98
0x000094d0      5b             pop rbx
0x000094d1      5d             pop rbp
0x000094d2      415c           pop r12
0x000094d4      415d           pop r13
0x000094d6      415e           pop r14
0x000094d8      415f           pop r15
0x000094da      c3             ret
0x000094db      0f1f440000     nop dword [rax + rax]
0x000094e0      4889de         mov rsi, rbx
0x000094e3      31d2           xor edx, edx
0x000094e5      480faff0       imul rsi, rax
0x000094e9      4889f0         mov rax, rsi
0x000094ec      48f7f7         div rdi
0x000094ef      4839d8         cmp rax, rbx
0x000094f2      0f858dfcffff   jne 0x9185
0x000094f8      31ff           xor edi, edi
0x000094fa      4531c9         xor r9d, r9d
0x000094fd      e907feffff     jmp 0x9309
0x00009502      660f1f440000   nop word [rax + rax]
0x00009508      4d89c6         mov r14, r8
0x0000950b      4c89ef         mov rdi, r13
0x0000950e      4c89442448     mov qword [rsp + 0x48], r8
0x00009513      4d29fe         sub r14, r15                            ; ../coreutils-8.31/lib/human.c:-605
0x00009516      48c7c5ffffff.  mov rbp, 0xffffffffffffffff             ; ../coreutils-8.31/lib/human.c:-733
0x0000951d      e80e90ffff     call sym.imp.strlen
0x00009522      488d7c2450     lea rdi, [rsp + 0x50]
0x00009527      b929000000     mov ecx, 0x29                           ; ')'
0x0000952c      4c89f2         mov rdx, r14
0x0000952f      4c89fe         mov rsi, r15
0x00009532      4889442440     mov qword [rsp + 0x40], rax             ; ../coreutils-8.31/lib/human.c:-798
0x00009537      48897c2418     mov qword [rsp + 0x18], rdi
0x0000953c      e8af91ffff     call sym.imp.__memcpy_chk
0x00009541      4489e1         mov ecx, r12d
0x00009544      895c2420       mov dword [rsp + 0x20], ebx
0x00009548      4d89f4         mov r12, r14
0x0000954b      4c89eb         mov rbx, r13
0x0000954e      4c8b442448     mov r8, qword [rsp + 0x48]
0x00009553      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x00009558      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x0000955d      4189ce         mov r14d, ecx
0x00009560      eb40           jmp 0x95a2
0x00009562      660f1f440000   nop word [rax + rax]
0x00009568      488b442418     mov rax, qword [rsp + 0x18]
0x0000956d      4929ec         sub r12, rbp
0x00009570      4929e8         sub r8, rbp
0x00009573      4c89c7         mov rdi, r8
0x00009576      4889ea         mov rdx, rbp
0x00009579      4a8d3420       lea rsi, [rax + r12]
0x0000957d      e88e91ffff     call sym.imp.memcpy
0x00009582      4d85e4         test r12, r12
0x00009585      4989c0         mov r8, rax
0x00009588      0f840a050000   je 0x9a98
0x0000958e      4d29e8         sub r8, r13
0x00009591      4c89ea         mov rdx, r13
0x00009594      4889de         mov rsi, rbx
0x00009597      4c89c7         mov rdi, r8
0x0000959a      e87191ffff     call sym.imp.memcpy
0x0000959f      4989c0         mov r8, rax
0x000095a2      410fb607       movzx eax, byte [r15]
0x000095a6      84c0           test al, al
0x000095a8      740d           je 0x95b7
0x000095aa      3c7f           cmp al, 0x7f
0x000095ac      0fb6e8         movzx ebp, al
0x000095af      490f43ec       cmovae rbp, r12
0x000095b3      4983c701       add r15, 1
0x000095b7      4c39e5         cmp rbp, r12
0x000095ba      76ac           jbe 0x9568
0x000095bc      4489f0         mov eax, r14d
0x000095bf      4d89c7         mov r15, r8
0x000095c2      4d89e6         mov r14, r12
0x000095c5      488b742418     mov rsi, qword [rsp + 0x18]
0x000095ca      4d29f7         sub r15, r14
0x000095cd      4c89f2         mov rdx, r14
0x000095d0      4c89ff         mov rdi, r15
0x000095d3      8b5c2420       mov ebx, dword [rsp + 0x20]             ; ../coreutils-8.31/lib/human.c:-645
0x000095d7      4189c4         mov r12d, eax
0x000095da      e83191ffff     call sym.imp.memcpy
0x000095df      e946feffff     jmp 0x942a
0x000095e4      0f1f4000       nop dword [rax]
0x000095e8      488b0c24       mov rcx, qword [rsp]
0x000095ec      488db9880200.  lea rdi, [rcx + 0x288]
0x000095f3      c68187020000.  mov byte [rcx + 0x287], 0x20            ; [0x20:1]=64 ; "@"
0x000095fa      48897c2408     mov qword [rsp + 8], rdi
0x000095ff      e94dfeffff     jmp 0x9451
0x00009604      0f1f4000       nop dword [rax]
0x00009608      4883ec10       sub rsp, 0x10
0x0000960c      4489ff         mov edi, r15d
0x0000960f      d9c0           fld st(0)                               ; ../coreutils-8.31/lib/human.c:-720
0x00009611      db3c24         fstp xword [rsp]
0x00009614      db7c2430       fstp xword [rsp + 0x30]
0x00009618      e8b3f9ffff     call sym.adjust_value.part.0
0x0000961d      58             pop rax                                 ; ../coreutils-8.31/lib/human.c:-710
0x0000961e      5a             pop rdx
0x0000961f      db6c2420       fld xword [rsp + 0x20]
0x00009623      e911fcffff     jmp 0x9239
0x00009628      0f1f84000000.  nop dword [rax + rax]
0x00009630      4883ec10       sub rsp, 0x10
0x00009634      4489ff         mov edi, r15d                           ; string_fortified.h:-992
0x00009637      db3c24         fstp xword [rsp]
0x0000963a      e891f9ffff     call sym.adjust_value.part.0
0x0000963f      4158           pop r8
0x00009641      4159           pop r9
0x00009643      e964fdffff     jmp 0x93ac
0x00009648      0f1f84000000.  nop dword [rax + rax]
0x00009650      488d5702       lea rdx, [rdi + 2]
0x00009654      c6470169       mov byte [rdi + 1], 0x69                ; 'i'
                                                                       ; [0x69:1]=1
0x00009658      e93efeffff     jmp 0x949b
0x0000965d      4983fa09       cmp r10, 9
0x00009661      0f8791020000   ja 0x98f8
0x00009667      4183ff01       cmp r15d, 1
0x0000966b      0f84b1020000   je 0x9922
0x00009671      4585ff         test r15d, r15d
0x00009674      0f94c2         sete dl
0x00009677      85ff           test edi, edi
0x00009679      410f9fc0       setg r8b                                ; ../coreutils-8.31/lib/human.c:-697
0x0000967d      4421c2         and edx, r8d                            ; ../coreutils-8.31/lib/human.c:-695
0x00009680      84d2           test dl, dl
0x00009682      0f8481020000   je 0x9909
0x00009688      448d4801       lea r9d, [rax + 1]
0x0000968c      4183f90a       cmp r9d, 0xa
0x00009690      0f84fb020000   je 0x9991
0x00009696      4183c130       add r9d, 0x30                           ; ../coreutils-8.31/lib/human.c:-677
0x0000969a      488b0424       mov rax, qword [rsp]
0x0000969e      4c8d80860200.  lea r8, [rax + 0x286]
0x000096a5      448888860200.  mov byte [rax + 0x286], r9b
0x000096ac      89e8           mov eax, ebp
0x000096ae      4929e8         sub r8, rbp
0x000096b1      83fd08         cmp ebp, 8
0x000096b4      0f8387020000   jae 0x9941
0x000096ba      40f6c504       test bpl, 4
0x000096be      0f8582030000   jne 0x9a46                              ; ../coreutils-8.31/lib/human.c:-674
0x000096c4      85c0           test eax, eax
0x000096c6      740f           je 0x96d7
0x000096c8      410fb616       movzx edx, byte [r14]
0x000096cc      a802           test al, 2
0x000096ce      418810         mov byte [r8], dl
0x000096d1      0f8589030000   jne 0x9a60
0x000096d7      31ff           xor edi, edi
0x000096d9      4531c9         xor r9d, r9d
0x000096dc      0f1f4000       nop dword [rax]
0x000096e0      4183ff01       cmp r15d, 1
0x000096e4      0f8476010000   je 0x9860
0x000096ea      4585ff         test r15d, r15d
0x000096ed      7521           jne 0x9710
0x000096ef      4401cf         add edi, r9d
0x000096f2      85ff           test edi, edi
0x000096f4      7e1a           jle 0x9710
0x000096f6      4883c601       add rsi, 1
0x000096fa      85c9           test ecx, ecx
0x000096fc      7412           je 0x9710
0x000096fe      8b442434       mov eax, dword [rsp + 0x34]
0x00009702      4839f0         cmp rax, rsi
0x00009705      0f84c5010000   je 0x98d0
0x0000970b      0f1f440000     nop dword [rax + rax]
0x00009710      4d89c7         mov r15, r8
0x00009713      48b9cdcccccc.  movabs rcx, 0xcccccccccccccccd          ; stdio2.h:-993
0x0000971d      0f1f00         nop dword [rax]
0x00009720      4889f0         mov rax, rsi
0x00009723      4983ef01       sub r15, 1
0x00009727      48f7e1         mul rcx
0x0000972a      48c1ea03       shr rdx, 3
0x0000972e      488d0492       lea rax, [rdx + rdx*4]
0x00009732      4801c0         add rax, rax
0x00009735      4829c6         sub rsi, rax
0x00009738      83c630         add esi, 0x30
0x0000973b      4885d2         test rdx, rdx
0x0000973e      418837         mov byte [r15], sil
0x00009741      4889d6         mov rsi, rdx
0x00009744      75da           jne 0x9720
0x00009746      e9d5fcffff     jmp 0x9420
0x0000974b      0f1f440000     nop dword [rax + rax]
0x00009750      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00009755      4883f901       cmp rcx, 1
0x00009759      0f86a3010000   jbe 0x9902
0x0000975f      8b542434       mov edx, dword [rsp + 0x34]
0x00009763      bb01000000     mov ebx, 1
0x00009768      b801000000     mov eax, 1
0x0000976d      480fafc2       imul rax, rdx
0x00009771      4839c1         cmp rcx, rax
0x00009774      0f86bffcffff   jbe 0x9439
0x0000977a      83c301         add ebx, 1
0x0000977d      83fb08         cmp ebx, 8
0x00009780      75eb           jne 0x976d
0x00009782      e9b2fcffff     jmp 0x9439
0x00009787      660f1f840000.  nop word [rax + rax]
0x00009790      4883ec10       sub rsp, 0x10
0x00009794      488d0d4b8201.  lea rcx, str..1Lf                       ; 0x219e6 ; "%.1Lf"
0x0000979b      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000097a2      d9c0           fld st(0)
0x000097a4      db3c24         fstp xword [rsp]
0x000097a7      4c8b742410     mov r14, qword [rsp + 0x10]
0x000097ac      be01000000     mov esi, 1
0x000097b1      31c0           xor eax, eax
0x000097b3      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/human.c:-966
0x000097b6      db7c2430       fstp xword [rsp + 0x30]
0x000097ba      e84192ffff     call sym.imp.__sprintf_chk
0x000097bf      4c89f7         mov rdi, r14
0x000097c2      e8698dffff     call sym.imp.strlen
0x000097c7      4989c6         mov r14, rax
0x000097ca      58             pop rax
0x000097cb      5a             pop rdx
0x000097cc      4c3b742418     cmp r14, qword [rsp + 0x18]
0x000097d1      db6c2420       fld xword [rsp + 0x20]
0x000097d5      0f86a7faffff   jbe 0x9282
0x000097db      d9054b820100   fld dword [0x00021a2c]
0x000097e1      dcc9           fmul st(1), st(0)
0x000097e3      def9           fdivp st(1)                             ; ../coreutils-8.31/lib/human.c:-700
0x000097e5      4883ec10       sub rsp, 0x10
0x000097e9      488d0df08101.  lea rcx, [0x000219e0]                   ; "%.0Lf"
0x000097f0      4c8b742410     mov r14, qword [rsp + 0x10]
0x000097f5      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000097fc      be01000000     mov esi, 1
0x00009801      31c0           xor eax, eax
0x00009803      31ed           xor ebp, ebp
0x00009805      4c89f7         mov rdi, r14
0x00009808      db3c24         fstp xword [rsp]
0x0000980b      e8f091ffff     call sym.imp.__sprintf_chk              ; ../coreutils-8.31/lib/human.c:-810
0x00009810      4c89f7         mov rdi, r14
0x00009813      e8188dffff     call sym.imp.strlen
0x00009818      415a           pop r10
0x0000981a      4989c6         mov r14, rax
0x0000981d      415b           pop r11
0x0000981f      e9dcfbffff     jmp 0x9400
0x00009824      0f1f4000       nop dword [rax]
0x00009828      d905fe810100   fld dword [0x00021a2c]
0x0000982e      dcc9           fmul st(1), st(0)
0x00009830      db2dfa810100   fld xword [0x00021a30]
0x00009836      dfea           fucomip st(2)
0x00009838      76a9           jbe 0x97e3
0x0000983a      d95c2418       fstp dword [rsp + 0x18]
0x0000983e      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/human.c:-920
0x00009842      4489ff         mov edi, r15d
0x00009845      db3c24         fstp xword [rsp]
0x00009848      e883f7ffff     call sym.adjust_value.part.0
0x0000984d      5d             pop rbp
0x0000984e      415e           pop r14
0x00009850      d9442418       fld dword [rsp + 0x18]
0x00009854      eb8d           jmp 0x97e3                              ; ../coreutils-8.31/lib/human.c:-902
0x00009856      662e0f1f8400.  nop word cs:[rax + rax]
0x00009860      4889f0         mov rax, rsi
0x00009863      4863ff         movsxd rdi, edi
0x00009866      83e001         and eax, 1                              ; ../coreutils-8.31/lib/human.c:-1062
0x00009869      4801f8         add rax, rdi
0x0000986c      0f95c0         setne al
0x0000986f      0fb6c0         movzx eax, al
0x00009872      4101c1         add r9d, eax
0x00009875      4183f905       cmp r9d, 5
0x00009879      0f8f77feffff   jg 0x96f6
0x0000987f      e98cfeffff     jmp 0x9710                              ; ../coreutils-8.31/lib/human.c:-938
0x00009884      0f1f4000       nop dword [rax]
0x00009888      400f92c7       setb dil
0x0000988c      400fb6ff       movzx edi, dil
0x00009890      83c702         add edi, 2                              ; ../coreutils-8.31/lib/human.c:-952
0x00009893      e971faffff     jmp 0x9309
0x00009898      0f1f84000000.  nop dword [rax + rax]
0x000098a0      4c8b442408     mov r8, qword [rsp + 8]
0x000098a5      31db           xor ebx, ebx
0x000098a7      e934feffff     jmp 0x96e0
0x000098ac      0f1f4000       nop dword [rax]
0x000098b0      488b5c2408     mov rbx, qword [rsp + 8]
0x000098b5      85c0           test eax, eax
0x000098b7      488d5301       lea rdx, [rbx + 1]
0x000098bb      c6036b         mov byte [rbx], 0x6b                    ; 'k'
                                                                       ; [0x6b:1]=0
0x000098be      0f85d7fbffff   jne 0x949b
0x000098c4      4889542408     mov qword [rsp + 8], rdx
0x000098c9      e9d9fbffff     jmp 0x94a7
0x000098ce      6690           nop
0x000098d0      83fb08         cmp ebx, 8
0x000098d3      0f8437feffff   je 0x9710
0x000098d9      83c301         add ebx, 1
0x000098dc      41f6c408       test r12b, 8
0x000098e0      0f84bc000000   je 0x99a2
0x000098e6      4d8d78ff       lea r15, [r8 - 1]
0x000098ea      41c640ff31     mov byte [r8 - 1], 0x31                 ; '1'
                                                                       ; [0x31:1]=0
0x000098ef      e92cfbffff     jmp 0x9420
0x000098f4      0f1f4000       nop dword [rax]
0x000098f8      4c8b442408     mov r8, qword [rsp + 8]
0x000098fd      e9defdffff     jmp 0x96e0
0x00009902      31db           xor ebx, ebx
0x00009904      e930fbffff     jmp 0x9439
0x00009909      85c0           test eax, eax                           ; ../coreutils-8.31/lib/human.c:-948
0x0000990b      0f8585fdffff   jne 0x9696
0x00009911      41f6c408       test r12b, 8
0x00009915      751d           jne 0x9934
0x00009917      41b930000000   mov r9d, 0x30                           ; '0'
0x0000991d      e978fdffff     jmp 0x969a
0x00009922      89c2           mov edx, eax
0x00009924      83e201         and edx, 1
0x00009927      01fa           add edx, edi
0x00009929      83fa02         cmp edx, 2
0x0000992c      0f9fc2         setg dl
0x0000992f      e94cfdffff     jmp 0x9680
0x00009934      4c8b442408     mov r8, qword [rsp + 8]
0x00009939      4531c9         xor r9d, r9d
0x0000993c      e99ffdffff     jmp 0x96e0
0x00009941      498b06         mov rax, qword [r14]
0x00009944      4d89f1         mov r9, r14
0x00009947      498900         mov qword [r8], rax
0x0000994a      89e8           mov eax, ebp
0x0000994c      498b5406f8     mov rdx, qword [r14 + rax - 8]
0x00009951      49895400f8     mov qword [r8 + rax - 8], rdx
0x00009956      498d5008       lea rdx, [r8 + 8]
0x0000995a      4c89c0         mov rax, r8
0x0000995d      4883e2f8       and rdx, 0xfffffffffffffff8
0x00009961      4829d0         sub rax, rdx
0x00009964      4929c1         sub r9, rax
0x00009967      01e8           add eax, ebp
0x00009969      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x0000996c      83f808         cmp eax, 8
0x0000996f      0f8262fdffff   jb 0x96d7
0x00009975      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x00009978      31ff           xor edi, edi
0x0000997a      4189fa         mov r10d, edi
0x0000997d      83c708         add edi, 8
0x00009980      4f8b1c11       mov r11, qword [r9 + r10]
0x00009984      39c7           cmp edi, eax
0x00009986      4e891c12       mov qword [rdx + r10], r11
0x0000998a      72ee           jb 0x997a
0x0000998c      e946fdffff     jmp 0x96d7
0x00009991      498d7201       lea rsi, [r10 + 1]
0x00009995      4883fe0a       cmp rsi, 0xa
0x00009999      7455           je 0x99f0
0x0000999b      31ff           xor edi, edi
0x0000999d      e96fffffff     jmp 0x9911
0x000099a2      4889e8         mov rax, rbp
0x000099a5      41c640ff30     mov byte [r8 - 1], 0x30                 ; '0'
                                                                       ; [0x30:1]=0
0x000099aa      48f7d0         not rax
0x000099ad      4901c0         add r8, rax
0x000099b0      83fd08         cmp ebp, 8
0x000099b3      89e8           mov eax, ebp
0x000099b5      7343           jae 0x99fa
0x000099b7      83e504         and ebp, 4
0x000099ba      0f85b1000000   jne 0x9a71
0x000099c0      85c0           test eax, eax
0x000099c2      0f841effffff   je 0x98e6
0x000099c8      410fb616       movzx edx, byte [r14]
0x000099cc      a802           test al, 2
0x000099ce      418810         mov byte [r8], dl                       ; string_fortified.h:-1218
0x000099d1      0f840fffffff   je 0x98e6
0x000099d7      410fb75406fe   movzx edx, word [r14 + rax - 2]
0x000099dd      6641895400fe   mov word [r8 + rax - 2], dx
0x000099e3      e9fefeffff     jmp 0x98e6
0x000099e8      0f1f84000000.  nop dword [rax + rax]
0x000099f0      4c8b442408     mov r8, qword [rsp + 8]
0x000099f5      e9ddfcffff     jmp 0x96d7
0x000099fa      498b06         mov rax, qword [r14]
0x000099fd      498d4808       lea rcx, [r8 + 8]
0x00009a01      4883e1f8       and rcx, 0xfffffffffffffff8
0x00009a05      498900         mov qword [r8], rax
0x00009a08      89e8           mov eax, ebp
0x00009a0a      498b5406f8     mov rdx, qword [r14 + rax - 8]
0x00009a0f      49895400f8     mov qword [r8 + rax - 8], rdx
0x00009a14      4c89c0         mov rax, r8
0x00009a17      4829c8         sub rax, rcx                            ; ../coreutils-8.31/lib/human.c:-963
0x00009a1a      4929c6         sub r14, rax
0x00009a1d      01e8           add eax, ebp
0x00009a1f      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x00009a22      83f808         cmp eax, 8                              ; ../coreutils-8.31/lib/human.c:-957
0x00009a25      0f82bbfeffff   jb 0x98e6
0x00009a2b      83e0f8         and eax, 0xfffffff8                     ; ../coreutils-8.31/lib/human.c:-955 ; 4294967288
0x00009a2e      31d2           xor edx, edx
0x00009a30      89d6           mov esi, edx                            ; ../coreutils-8.31/lib/human.c:-951
0x00009a32      83c208         add edx, 8
0x00009a35      498b3c36       mov rdi, qword [r14 + rsi]
0x00009a39      39c2           cmp edx, eax
0x00009a3b      48893c31       mov qword [rcx + rsi], rdi
0x00009a3f      72ef           jb 0x9a30
0x00009a41      e9a0feffff     jmp 0x98e6
0x00009a46      418b16         mov edx, dword [r14]
0x00009a49      418910         mov dword [r8], edx
0x00009a4c      418b5406fc     mov edx, dword [r14 + rax - 4]
0x00009a51      41895400fc     mov dword [r8 + rax - 4], edx
0x00009a56      e97cfcffff     jmp 0x96d7
0x00009a5b      e8008bffff     call sym.imp.__stack_chk_fail
0x00009a60      410fb75406fe   movzx edx, word [r14 + rax - 2]         ; ../coreutils-8.31/lib/human.c:-949
0x00009a66      6641895400fe   mov word [r8 + rax - 2], dx
0x00009a6c      e966fcffff     jmp 0x96d7
0x00009a71      418b16         mov edx, dword [r14]
0x00009a74      418910         mov dword [r8], edx
0x00009a77      418b5406fc     mov edx, dword [r14 + rax - 4]
0x00009a7c      41895400fc     mov dword [r8 + rax - 4], edx
0x00009a81      e960feffff     jmp 0x98e6
0x00009a86      85c0           test eax, eax
0x00009a88      488b542408     mov rdx, qword [rsp + 8]
0x00009a8d      0f8508faffff   jne 0x949b
0x00009a93      e90ffaffff     jmp 0x94a7
0x00009a98      8b5c2420       mov ebx, dword [rsp + 0x20]
0x00009a9c      4989c7         mov r15, rax
0x00009a9f      4589f4         mov r12d, r14d
0x00009aa2      e983f9ffff     jmp 0x942a
0x00009aa7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/human.c:-936
;-- human_options:
0x00009ab0      4155           push r13
0x00009ab2      4154           push r12                                ; ../coreutils-8.31/lib/human.c:-935
0x00009ab4      4989f5         mov r13, rsi
0x00009ab7      55             push rbp
0x00009ab8      53             push rbx
0x00009ab9      4989d4         mov r12, rdx
0x00009abc      4889fb         mov rbx, rdi
0x00009abf      4883ec18       sub rsp, 0x18
0x00009ac3      64488b042528.  mov rax, qword fs:[0x28]
0x00009acc      4889442408     mov qword [rsp + 8], rax
0x00009ad1      31c0           xor eax, eax
0x00009ad3      4885ff         test rdi, rdi
0x00009ad6      0f8414010000   je 0x9bf0
0x00009adc      31ed           xor ebp, ebp
0x00009ade      803b27         cmp byte [rbx], 0x27
0x00009ae1      7509           jne 0x9aec
0x00009ae3      4883c301       add rbx, 1
0x00009ae7      bd04000000     mov ebp, 4
0x00009aec      488d15257f01.  lea rdx, obj.block_size_opts            ; 0x21a18
0x00009af3      488d3526df21.  lea rsi, obj.block_size_args            ; 0x227a20
0x00009afa      b904000000     mov ecx, 4
0x00009aff      4889df         mov rdi, rbx
0x00009b02      e809acffff     call sym.argmatch
0x00009b07      85c0           test eax, eax
0x00009b09      783d           js 0x9b48
0x00009b0b      488d15067f01.  lea rdx, obj.block_size_opts            ; 0x21a18
0x00009b12      4898           cdqe
0x00009b14      49c704240100.  mov qword [r12], 1
0x00009b1c      0b2c82         or ebp, dword [rdx + rax*4]
0x00009b1f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/human.c:-913
0x00009b21      41896d00       mov dword [r13], ebp
0x00009b25      488b4c2408     mov rcx, qword [rsp + 8]
0x00009b2a      6448330c2528.  xor rcx, qword fs:[0x28]
0x00009b33      0f8558010000   jne 0x9c91
0x00009b39      4883c418       add rsp, 0x18
0x00009b3d      5b             pop rbx
0x00009b3e      5d             pop rbp
0x00009b3f      415c           pop r12
0x00009b41      415d           pop r13
0x00009b43      c3             ret
0x00009b44      0f1f4000       nop dword [rax]
0x00009b48      4c8d05b77e01.  lea r8, str.eEgGkKmMpPtTyYzZ0           ; 0x21a06 ; "eEgGkKmMpPtTyYzZ0"
0x00009b4f      31d2           xor edx, edx
0x00009b51      4889e6         mov rsi, rsp
0x00009b54      4c89e1         mov rcx, r12
0x00009b57      4889df         mov rdi, rbx
0x00009b5a      e8213d0000     call sym.xstrtoumax
0x00009b5f      85c0           test eax, eax
0x00009b61      7545           jne 0x9ba8
0x00009b63      0fb633         movzx esi, byte [rbx]
0x00009b66      8d56d0         lea edx, [rsi - 0x30]
0x00009b69      80fa09         cmp dl, 9
0x00009b6c      762a           jbe 0x9b98
0x00009b6e      488b0c24       mov rcx, qword [rsp]
0x00009b72      4839cb         cmp rbx, rcx
0x00009b75      7512           jne 0x9b89                              ; ../coreutils-8.31/lib/human.c:-960
0x00009b77      e9d4000000     jmp 0x9c50
0x00009b7c      0f1f4000       nop dword [rax]
0x00009b80      4839cb         cmp rbx, rcx
0x00009b83      0f84c7000000   je 0x9c50
0x00009b89      4883c301       add rbx, 1
0x00009b8d      0fb63b         movzx edi, byte [rbx]
0x00009b90      8d57d0         lea edx, [rdi - 0x30]
0x00009b93      80fa09         cmp dl, 9
0x00009b96      77e8           ja 0x9b80
0x00009b98      498b1424       mov rdx, qword [r12]
0x00009b9c      41896d00       mov dword [r13], ebp
0x00009ba0      eb12           jmp 0x9bb4
0x00009ba2      660f1f440000   nop word [rax + rax]
0x00009ba8      498b1424       mov rdx, qword [r12]
0x00009bac      41c745000000.  mov dword [r13], 0                      ; ../coreutils-8.31/lib/human.c:-931
0x00009bb4      4885d2         test rdx, rdx
0x00009bb7      0f8568ffffff   jne 0x9b25
0x00009bbd      488d3d327e01.  lea rdi, str.POSIXLY_CORRECT            ; 0x219f6 ; "POSIXLY_CORRECT"
0x00009bc4      e81788ffff     call sym.imp.getenv
0x00009bc9      4883f801       cmp rax, 1
0x00009bcd      4819c0         sbb rax, rax
0x00009bd0      2500020000     and eax, 0x200
0x00009bd5      480500020000   add rax, 0x200                          ; ../coreutils-8.31/lib/human.c:-909
0x00009bdb      49890424       mov qword [r12], rax
0x00009bdf      b804000000     mov eax, 4
0x00009be4      e93cffffff     jmp 0x9b25
0x00009be9      0f1f80000000.  nop dword [rax]
0x00009bf0      488d3d615f01.  lea rdi, [0x0001fb58]                   ; "BLOCK_SIZE"
0x00009bf7      e8e487ffff     call sym.imp.getenv
0x00009bfc      4885c0         test rax, rax
0x00009bff      4889c3         mov rbx, rax
0x00009c02      0f85d4feffff   jne 0x9adc
0x00009c08      488d3ddd7d01.  lea rdi, str.BLOCKSIZE                  ; 0x219ec ; "BLOCKSIZE"
0x00009c0f      e8cc87ffff     call sym.imp.getenv
0x00009c14      4885c0         test rax, rax
0x00009c17      4889c3         mov rbx, rax
0x00009c1a      0f85bcfeffff   jne 0x9adc
0x00009c20      488d3dcf7d01.  lea rdi, str.POSIXLY_CORRECT            ; 0x219f6 ; "POSIXLY_CORRECT"
0x00009c27      e8b487ffff     call sym.imp.getenv
0x00009c2c      4885c0         test rax, rax
0x00009c2f      7449           je 0x9c7a
0x00009c31      49c704240002.  mov qword [r12], 0x200                  ; [0x200:8]=0x46474e552
0x00009c39      31c0           xor eax, eax
0x00009c3b      41c745000000.  mov dword [r13], 0
0x00009c43      e9ddfeffff     jmp 0x9b25
0x00009c48      0f1f84000000.  nop dword [rax + rax]
0x00009c50      8079ff42       cmp byte [rcx - 1], 0x42
0x00009c54      7412           je 0x9c68
0x00009c56      4080cd80       or bpl, 0x80
0x00009c5a      83cd20         or ebp, 0x20                            ; "@"
0x00009c5d      e936ffffff     jmp 0x9b98
0x00009c62      660f1f440000   nop word [rax + rax]
0x00009c68      81cd80010000   or ebp, 0x180
0x00009c6e      8079fe69       cmp byte [rcx - 2], 0x69
0x00009c72      0f8520ffffff   jne 0x9b98
0x00009c78      ebe0           jmp 0x9c5a
0x00009c7a      49c704240004.  mov qword [r12], 0x400                  ; [0x400:8]=0x1200000012
0x00009c82      31c0           xor eax, eax
0x00009c84      41c745000000.  mov dword [r13], 0
0x00009c8c      e994feffff     jmp 0x9b25
0x00009c91      e8ca88ffff     call sym.imp.__stack_chk_fail
0x00009c96      662e0f1f8400.  nop word cs:[rax + rax]
;-- ino_hash:
0x00009ca0      488b07         mov rax, qword [rdi]                    ; ../coreutils-8.31/lib/ino-map.c:55
0x00009ca3      31d2           xor edx, edx
0x00009ca5      48f7f6         div rsi
0x00009ca8      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/ino-map.c:69
0x00009cab      c3             ret
0x00009cac      0f1f4000       nop dword [rax]
;-- ino_compare:
0x00009cb0      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/ino-map.c:74
0x00009cb3      483907         cmp qword [rdi], rax
0x00009cb6      0f94c0         sete al
0x00009cb9      c3             ret                                     ; ../coreutils-8.31/lib/ino-map.c:78
0x00009cba      660f1f440000   nop word [rax + rax]
;-- ino_map_alloc:
0x00009cc0      55             push rbp                                ; ../coreutils-8.31/lib/ino-map.c:84
0x00009cc1      53             push rbx
0x00009cc2      4889fd         mov rbp, rdi
0x00009cc5      bf18000000     mov edi, 0x18                           ; ../coreutils-8.31/lib/ino-map.c:85
0x00009cca      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/ino-map.c:84
0x00009cce      e8ad8affff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/ino-map.c:85
0x00009cd3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/ino-map.c:87
0x00009cd6      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/ino-map.c:85
0x00009cd9      7435           je 0x9d10                               ; ../coreutils-8.31/lib/ino-map.c:87
0x00009cdb      4c8b05e6e221.  mov r8, qword [reloc.free]              ; ../coreutils-8.31/lib/ino-map.c:90 ; [0x227fc8:8]=0
0x00009ce2      488d0dc7ffff.  lea rcx, sym.ino_compare                ; 0x9cb0 ; "H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x00009ce9      488d15b0ffff.  lea rdx, sym.ino_hash                   ; 0x9ca0 ; "H\x8b\a1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f@"
0x00009cf0      31f6           xor esi, esi
0x00009cf2      bffd030000     mov edi, 0x3fd
0x00009cf7      e864e8ffff     call sym.hash_initialize
0x00009cfc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/ino-map.c:92
0x00009cff      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/ino-map.c:90
0x00009d02      741c           je 0x9d20                               ; ../coreutils-8.31/lib/ino-map.c:92
0x00009d04      48896b08       mov qword [rbx + 8], rbp                ; ../coreutils-8.31/lib/ino-map.c:97
0x00009d08      48c743100000.  mov qword [rbx + 0x10], 0               ; ../coreutils-8.31/lib/ino-map.c:98
0x00009d10      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/ino-map.c:102
0x00009d14      4889d8         mov rax, rbx
0x00009d17      5b             pop rbx
0x00009d18      5d             pop rbp
0x00009d19      c3             ret
0x00009d1a      660f1f440000   nop word [rax + rax]
0x00009d20      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/ino-map.c:94
0x00009d23      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/ino-map.c:95
0x00009d25      e8e68cffff     call sym..plt.got                       ; ../coreutils-8.31/lib/ino-map.c:94
0x00009d2a      ebe4           jmp 0x9d10                              ; ../coreutils-8.31/lib/ino-map.c:95
0x00009d2c      0f1f4000       nop dword [rax]
;-- ino_map_free:
0x00009d30      53             push rbx                                ; ../coreutils-8.31/lib/ino-map.c:107
0x00009d31      4889fb         mov rbx, rdi
0x00009d34      488b3f         mov rdi, qword [rdi]                    ; ../coreutils-8.31/lib/ino-map.c:108
0x00009d37      e874eaffff     call sym.hash_free
0x00009d3c      488b7b10       mov rdi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/ino-map.c:109
0x00009d40      e8cb8cffff     call sym..plt.got
0x00009d45      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/ino-map.c:110
0x00009d48      5b             pop rbx                                 ; ../coreutils-8.31/lib/ino-map.c:111
0x00009d49      e9c28cffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/ino-map.c:110
0x00009d4e      6690           nop
;-- ino_map_insert:
0x00009d50      55             push rbp                                ; ../coreutils-8.31/lib/ino-map.c:120
0x00009d51      53             push rbx
0x00009d52      4889fd         mov rbp, rdi
0x00009d55      4883ec18       sub rsp, 0x18
0x00009d59      488b5f10       mov rbx, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/ino-map.c:124
0x00009d5d      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/ino-map.c:125
0x00009d60      745e           je 0x9dc0
0x00009d62      483933         cmp qword [rbx], rsi                    ; ../coreutils-8.31/lib/ino-map.c:128
0x00009d65      7429           je 0x9d90
0x00009d67      488b7d00       mov rdi, qword [rbp]                    ; ../coreutils-8.31/lib/ino-map.c:139
0x00009d6b      488933         mov qword [rbx], rsi                    ; ../coreutils-8.31/lib/ino-map.c:138
0x00009d6e      4889de         mov rsi, rbx                            ; ../coreutils-8.31/lib/ino-map.c:139
0x00009d71      e8eaefffff     call sym.hash_insert
0x00009d76      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/ino-map.c:140
0x00009d79      7465           je 0x9de0
0x00009d7b      4839c3         cmp rbx, rax                            ; ../coreutils-8.31/lib/ino-map.c:143
0x00009d7e      7420           je 0x9da0
0x00009d80      488b4008       mov rax, qword [rax + 8]                ; ../coreutils-8.31/lib/ino-map.c:146
0x00009d84      48894308       mov qword [rbx + 8], rax
0x00009d88      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/ino-map.c:164
0x00009d8c      5b             pop rbx
0x00009d8d      5d             pop rbp
0x00009d8e      c3             ret
0x00009d8f      90             nop
0x00009d90      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/ino-map.c:129
0x00009d94      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/ino-map.c:164
0x00009d98      5b             pop rbx
0x00009d99      5d             pop rbp
0x00009d9a      c3             ret
0x00009d9b      0f1f440000     nop dword [rax + rax]
0x00009da0      488b4508       mov rax, qword [rbp + 8]                ; ../coreutils-8.31/lib/ino-map.c:160
0x00009da4      48c745100000.  mov qword [rbp + 0x10], 0               ; ../coreutils-8.31/lib/ino-map.c:157
0x00009dac      488d5001       lea rdx, [rax + 1]                      ; ../coreutils-8.31/lib/ino-map.c:160
0x00009db0      48895508       mov qword [rbp + 8], rdx
0x00009db4      48894308       mov qword [rbx + 8], rax
0x00009db8      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/ino-map.c:164
0x00009dbc      5b             pop rbx
0x00009dbd      5d             pop rbp
0x00009dbe      c3             ret
0x00009dbf      90             nop
0x00009dc0      bf10000000     mov edi, 0x10                           ; ../coreutils-8.31/lib/ino-map.c:133
0x00009dc5      4889742408     mov qword [rsp + 8], rsi
0x00009dca      e8b189ffff     call sym.imp.malloc
0x00009dcf      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/ino-map.c:134
0x00009dd2      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/ino-map.c:133
0x00009dd5      48894510       mov qword [rbp + 0x10], rax
0x00009dd9      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/ino-map.c:134
0x00009dde      7587           jne 0x9d67
0x00009de0      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/ino-map.c:164
0x00009de4      48c7c0ffffff.  mov rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/ino-map.c:135
0x00009deb      5b             pop rbx                                 ; ../coreutils-8.31/lib/ino-map.c:164
0x00009dec      5d             pop rbp
0x00009ded      c3             ret
0x00009dee      6690           nop
;-- imaxtostr:
0x00009df0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/anytostr.c:37
0x00009df3      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:38
0x00009df7      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x00009dfb      49b967666666.  movabs r9, 0x6666666666666667           ; ../coreutils-8.31/lib/anytostr.c:44 ; 'gfffffff'
0x00009e05      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x00009e0f      41b830000000   mov r8d, 0x30                           ; ../coreutils-8.31/lib/anytostr.c:44 ; '0'
0x00009e15      783c           js 0x9e53                               ; ../coreutils-8.31/lib/anytostr.c:41
0x00009e17      660f1f840000.  nop word [rax + rax]
0x00009e20      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/anytostr.c:52
0x00009e23      4883e901       sub rcx, 1
0x00009e27      48f7e6         mul rsi
0x00009e2a      48c1ea03       shr rdx, 3
0x00009e2e      488d0492       lea rax, [rdx + rdx*4]
0x00009e32      4801c0         add rax, rax
0x00009e35      4829c7         sub rdi, rax
0x00009e38      83c730         add edi, 0x30
0x00009e3b      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x00009e3e      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x00009e41      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x00009e44      75da           jne 0x9e20
0x00009e46      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x00009e49      c3             ret
0x00009e4a      660f1f440000   nop word [rax + rax]
0x00009e50      4889f1         mov rcx, rsi
0x00009e53      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/anytostr.c:44
0x00009e56      488d71ff       lea rsi, [rcx - 1]
0x00009e5a      49f7e9         imul r9
0x00009e5d      4889f8         mov rax, rdi
0x00009e60      48c1f83f       sar rax, 0x3f
0x00009e64      48c1fa02       sar rdx, 2
0x00009e68      4829c2         sub rdx, rax
0x00009e6b      488d0492       lea rax, [rdx + rdx*4]
0x00009e6f      418d0440       lea eax, [r8 + rax*2]
0x00009e73      29f8           sub eax, edi
0x00009e75      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:45
0x00009e78      4889d7         mov rdi, rdx
0x00009e7b      8841ff         mov byte [rcx - 1], al                  ; ../coreutils-8.31/lib/anytostr.c:44
0x00009e7e      75d0           jne 0x9e50                              ; ../coreutils-8.31/lib/anytostr.c:45
0x00009e80      4883e902       sub rcx, 2                              ; ../coreutils-8.31/lib/anytostr.c:47
0x00009e84      c646ff2d       mov byte [rsi - 1], 0x2d                ; '-'
                                                                       ; [0x2d:1]=0
0x00009e88      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x00009e8b      c3             ret
0x00009e8c      0f1f4000       nop dword [rax]
;-- mb_width_aux:
0x00009e90      53             push rbx                                ; ../coreutils-8.31/lib/mbchar.h:248
0x00009e91      89fb           mov ebx, edi
0x00009e93      e8c888ffff     call sym.imp.wcwidth                    ; ../coreutils-8.31/lib/mbchar.h:249
0x00009e98      85c0           test eax, eax                           ; ../coreutils-8.31/lib/mbchar.h:252
0x00009e9a      7804           js 0x9ea0
0x00009e9c      5b             pop rbx                                 ; ../coreutils-8.31/lib/mbchar.h:253
0x00009e9d      c3             ret
0x00009e9e      6690           nop
0x00009ea0      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/mbchar.h:252
0x00009ea2      e8d985ffff     call sym.imp.iswcntrl
0x00009ea7      85c0           test eax, eax
0x00009ea9      0f94c0         sete al
0x00009eac      0fb6c0         movzx eax, al
0x00009eaf      5b             pop rbx                                 ; ../coreutils-8.31/lib/mbchar.h:253
0x00009eb0      c3             ret
0x00009eb1      0f1f440000     nop dword [rax + rax]
0x00009eb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- mb_copy:
0x00009ec0      55             push rbp                                ; ../coreutils-8.31/lib/mbchar.h:269
0x00009ec1      53             push rbx
0x00009ec2      4889f3         mov rbx, rsi
0x00009ec5      488d4318       lea rax, [rbx + 0x18]                   ; ../coreutils-8.31/lib/mbchar.h:270
0x00009ec9      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/mbchar.h:269
0x00009ecc      4883ec08       sub rsp, 8
0x00009ed0      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/mbchar.h:270
0x00009ed3      488b5308       mov rdx, qword [rbx + 8]
0x00009ed7      4839c6         cmp rsi, rax
0x00009eda      7424           je 0x9f00
0x00009edc      488937         mov qword [rdi], rsi                    ; ../coreutils-8.31/lib/mbchar.h:276
0x00009edf      0fb64310       movzx eax, byte [rbx + 0x10]            ; ../coreutils-8.31/lib/mbchar.h:278
0x00009ee3      48895508       mov qword [rbp + 8], rdx                ; ../coreutils-8.31/lib/mbchar.h:277
0x00009ee7      84c0           test al, al                             ; ../coreutils-8.31/lib/mbchar.h:278
0x00009ee9      884510         mov byte [rbp + 0x10], al
0x00009eec      7406           je 0x9ef4
0x00009eee      8b4314         mov eax, dword [rbx + 0x14]             ; ../coreutils-8.31/lib/mbchar.h:279
0x00009ef1      894514         mov dword [rbp + 0x14], eax
0x00009ef4      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/mbchar.h:280
0x00009ef8      5b             pop rbx
0x00009ef9      5d             pop rbp
0x00009efa      c3             ret
0x00009efb      0f1f440000     nop dword [rax + rax]
0x00009f00      488d4f18       lea rcx, [rdi + 0x18]                   ; ../coreutils-8.31/lib/mbchar.h:272
0x00009f04      4889cf         mov rdi, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00009f07      e80488ffff     call sym.imp.memcpy
0x00009f0c      488b5308       mov rdx, qword [rbx + 8]
0x00009f10      48894500       mov qword [rbp], rax                    ; ../coreutils-8.31/lib/mbchar.h:273
0x00009f14      ebc9           jmp 0x9edf
0x00009f16      662e0f1f8400.  nop word cs:[rax + rax]
;-- is_basic:
0x00009f20      89f8           mov eax, edi                            ; ../coreutils-8.31/lib/mbchar.h:317
0x00009f22      488d15177b01.  lea rdx, obj.is_basic_table             ; 0x21a40
0x00009f29      89f9           mov ecx, edi
0x00009f2b      c0e805         shr al, 5
0x00009f2e      83e11f         and ecx, 0x1f
0x00009f31      83e007         and eax, 7
0x00009f34      8b0482         mov eax, dword [rdx + rax*4]
0x00009f37      d3e8           shr eax, cl
0x00009f39      83e001         and eax, 1                              ; ../coreutils-8.31/lib/mbchar.h:319
0x00009f3c      c3             ret                                     ; ../coreutils-8.31/lib/mbchar.h:320
0x00009f3d      0f1f00         nop dword [rax]
;-- mbscasecmp:
0x00009f40      4157           push r15
0x00009f42      4156           push r14
0x00009f44      4155           push r13
0x00009f46      4154           push r12
0x00009f48      55             push rbp
0x00009f49      53             push rbx
0x00009f4a      4881ec980000.  sub rsp, 0x98
0x00009f51      64488b042528.  mov rax, qword fs:[0x28]
0x00009f5a      488984248800.  mov qword [rsp + 0x88], rax
0x00009f62      31c0           xor eax, eax
0x00009f64      4839f7         cmp rdi, rsi
0x00009f67      0f8483030000   je 0xa2f0
0x00009f6d      4889fd         mov rbp, rdi
0x00009f70      4989f4         mov r12, rsi
0x00009f73      e8a885ffff     call sym.imp.__ctype_get_mb_cur_max
0x00009f78      4883f801       cmp rax, 1
0x00009f7c      0f8796000000   ja 0xa018
0x00009f82      e8698affff     call sym.imp.__ctype_b_loc
0x00009f87      4c8b30         mov r14, qword [rax]
0x00009f8a      eb14           jmp 0x9fa0
0x00009f8c      0f1f4000       nop dword [rax]
0x00009f90      4883c501       add rbp, 1
0x00009f94      4983c401       add r12, 1
0x00009f98      38d3           cmp bl, dl
0x00009f9a      0f8500040000   jne 0xa3a0
0x00009fa0      440fb66d00     movzx r13d, byte [rbp]
0x00009fa5      43f6446e0101   test byte [r14 + r13*2 + 1], 1
0x00009fab      4c89eb         mov rbx, r13
0x00009fae      740d           je 0x9fbd
0x00009fb0      e82b8affff     call sym.imp.__ctype_tolower_loc
0x00009fb5      488b00         mov rax, qword [rax]
0x00009fb8      420fb61ca8     movzx ebx, byte [rax + r13*4]
0x00009fbd      450fb62c24     movzx r13d, byte [r12]
0x00009fc2      43f6446e0101   test byte [r14 + r13*2 + 1], 1
0x00009fc8      4c89ea         mov rdx, r13
0x00009fcb      740d           je 0x9fda
0x00009fcd      e80e8affff     call sym.imp.__ctype_tolower_loc
0x00009fd2      488b00         mov rax, qword [rax]
0x00009fd5      420fb614a8     movzx edx, byte [rax + r13*4]
0x00009fda      84db           test bl, bl
0x00009fdc      75b2           jne 0x9f90
0x00009fde      31c0           xor eax, eax
0x00009fe0      29d0           sub eax, edx
0x00009fe2      660f1f440000   nop word [rax + rax]
0x00009fe8      488bb4248800.  mov rsi, qword [rsp + 0x88]
0x00009ff0      644833342528.  xor rsi, qword fs:[0x28]
0x00009ff9      0f8520060000   jne 0xa61f
0x00009fff      4881c4980000.  add rsp, 0x98
0x0000a006      5b             pop rbx
0x0000a007      5d             pop rbp
0x0000a008      415c           pop r12
0x0000a00a      415d           pop r13
0x0000a00c      415e           pop r14
0x0000a00e      415f           pop r15
0x0000a010      c3             ret
0x0000a011      0f1f80000000.  nop dword [rax]
0x0000a018      4c89642450     mov qword [rsp + 0x50], r12
0x0000a01d      4989e4         mov r12, rsp
0x0000a020      48896c2410     mov qword [rsp + 0x10], rbp
0x0000a025      c6042400       mov byte [rsp], 0
0x0000a029      48c744240400.  mov qword [rsp + 4], 0
0x0000a032      4c8d2d077a01.  lea r13, obj.is_basic_table             ; 0x21a40
0x0000a039      c644240c00     mov byte [rsp + 0xc], 0
0x0000a03e      c644244000     mov byte [rsp + 0x40], 0
0x0000a043      4d8d742404     lea r14, [r12 + 4]
0x0000a048      48c744244400.  mov qword [rsp + 0x44], 0
0x0000a051      c644244c00     mov byte [rsp + 0x4c], 0
0x0000a056      488d6c2440     lea rbp, [rsp + 0x40]
0x0000a05b      e999000000     jmp 0xa0f9
0x0000a060      807c244000     cmp byte [rsp + 0x40], 0
0x0000a065      0f85eb010000   jne 0xa256
0x0000a06b      488b4c2450     mov rcx, qword [rsp + 0x50]
0x0000a070      0fb611         movzx edx, byte [rcx]
0x0000a073      89d0           mov eax, edx
0x0000a075      c0e805         shr al, 5
0x0000a078      83e007         and eax, 7
0x0000a07b      418b448500     mov eax, dword [r13 + rax*4]
0x0000a080      0fa3d0         bt eax, edx
0x0000a083      0f83b7010000   jae 0xa240
0x0000a089      48c744245801.  mov qword [rsp + 0x58], 1
0x0000a092      0fbe01         movsx eax, byte [rcx]
0x0000a095      c644246001     mov byte [rsp + 0x60], 1
0x0000a09a      c644244c01     mov byte [rsp + 0x4c], 1
0x0000a09f      89442464       mov dword [rsp + 0x64], eax
0x0000a0a3      448b7c2464     mov r15d, dword [rsp + 0x64]
0x0000a0a8      4585ff         test r15d, r15d
0x0000a0ab      0f84ff020000   je 0xa3b0
0x0000a0b1      807c242000     cmp byte [rsp + 0x20], 0
0x0000a0b6      0f8404030000   je 0xa3c0
0x0000a0bc      8b7c2424       mov edi, dword [rsp + 0x24]
0x0000a0c0      e81b88ffff     call sym.imp.towlower
0x0000a0c5      4489ff         mov edi, r15d
0x0000a0c8      89c3           mov ebx, eax
0x0000a0ca      e81188ffff     call sym.imp.towlower
0x0000a0cf      29c3           sub ebx, eax
0x0000a0d1      89d8           mov eax, ebx
0x0000a0d3      85c0           test eax, eax
0x0000a0d5      0f850dffffff   jne 0x9fe8
0x0000a0db      488b442418     mov rax, qword [rsp + 0x18]
0x0000a0e0      4801442410     add qword [rsp + 0x10], rax
0x0000a0e5      488b442458     mov rax, qword [rsp + 0x58]
0x0000a0ea      4801442450     add qword [rsp + 0x50], rax
0x0000a0ef      c644240c00     mov byte [rsp + 0xc], 0
0x0000a0f4      c644244c00     mov byte [rsp + 0x4c], 0
0x0000a0f9      803c2400       cmp byte [rsp], 0
0x0000a0fd      0f85a1000000   jne 0xa1a4
0x0000a103      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000a108      0fb611         movzx edx, byte [rcx]
0x0000a10b      89d0           mov eax, edx
0x0000a10d      c0e805         shr al, 5
0x0000a110      83e007         and eax, 7
0x0000a113      418b448500     mov eax, dword [r13 + rax*4]
0x0000a118      0fa3d0         bt eax, edx
0x0000a11b      7373           jae 0xa190
0x0000a11d      48c744241801.  mov qword [rsp + 0x18], 1
0x0000a126      0fbe01         movsx eax, byte [rcx]
0x0000a129      c644242001     mov byte [rsp + 0x20], 1
0x0000a12e      c644240c01     mov byte [rsp + 0xc], 1
0x0000a133      89442424       mov dword [rsp + 0x24], eax
0x0000a137      448b4c2424     mov r9d, dword [rsp + 0x24]
0x0000a13c      4585c9         test r9d, r9d
0x0000a13f      0f84a3020000   je 0xa3e8
0x0000a145      807c244c00     cmp byte [rsp + 0x4c], 0
0x0000a14a      0f8410ffffff   je 0xa060
0x0000a150      807c246000     cmp byte [rsp + 0x60], 0
0x0000a155      0f8548ffffff   jne 0xa0a3
0x0000a15b      807c242000     cmp byte [rsp + 0x20], 0
0x0000a160      0f8572020000   jne 0xa3d8
0x0000a166      488b542418     mov rdx, qword [rsp + 0x18]
0x0000a16b      488b442458     mov rax, qword [rsp + 0x58]
0x0000a170      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000a175      488b742450     mov rsi, qword [rsp + 0x50]
0x0000a17a      4839c2         cmp rdx, rax
0x0000a17d      0f8525030000   jne 0xa4a8
0x0000a183      e8f884ffff     call sym.imp.memcmp
0x0000a188      e946ffffff     jmp 0xa0d3
0x0000a18d      0f1f00         nop dword [rax]
0x0000a190      4c89f7         mov rdi, r14
0x0000a193      e8f887ffff     call sym.imp.mbsinit
0x0000a198      85c0           test eax, eax
0x0000a19a      0f8460040000   je 0xa600
0x0000a1a0      c6042401       mov byte [rsp], 1
0x0000a1a4      e87783ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000a1a9      488b5c2410     mov rbx, qword [rsp + 0x10]
0x0000a1ae      4889c6         mov rsi, rax
0x0000a1b1      4889df         mov rdi, rbx
0x0000a1b4      e8c7210000     call sym.strnlen1
0x0000a1b9      498d4c2404     lea rcx, [r12 + 4]
0x0000a1be      498d7c2424     lea rdi, [r12 + 0x24]
0x0000a1c3      4889c2         mov rdx, rax
0x0000a1c6      4889de         mov rsi, rbx
0x0000a1c9      e812600000     call sym.rpl_mbrtowc
0x0000a1ce      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000a1d2      4889442418     mov qword [rsp + 0x18], rax
0x0000a1d7      0f8423010000   je 0xa300
0x0000a1dd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000a1e1      0f8459010000   je 0xa340
0x0000a1e7      4885c0         test rax, rax
0x0000a1ea      7525           jne 0xa211
0x0000a1ec      488b442410     mov rax, qword [rsp + 0x10]
0x0000a1f1      48c744241801.  mov qword [rsp + 0x18], 1
0x0000a1fa      803800         cmp byte [rax], 0
0x0000a1fd      0f8521040000   jne 0xa624
0x0000a203      448b542424     mov r10d, dword [rsp + 0x24]
0x0000a208      4585d2         test r10d, r10d
0x0000a20b      0f85ea030000   jne 0xa5fb
0x0000a211      498d7c2404     lea rdi, [r12 + 4]
0x0000a216      c644242001     mov byte [rsp + 0x20], 1
0x0000a21b      e87087ffff     call sym.imp.mbsinit
0x0000a220      85c0           test eax, eax
0x0000a222      0f8458010000   je 0xa380
0x0000a228      c6042400       mov byte [rsp], 0
0x0000a22c      c644240c01     mov byte [rsp + 0xc], 1
0x0000a231      e901ffffff     jmp 0xa137
0x0000a236      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a240      488d7d04       lea rdi, [rbp + 4]
0x0000a244      e84787ffff     call sym.imp.mbsinit
0x0000a249      85c0           test eax, eax
0x0000a24b      0f84af030000   je 0xa600
0x0000a251      c644244001     mov byte [rsp + 0x40], 1
0x0000a256      e8c582ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000a25b      488b5c2450     mov rbx, qword [rsp + 0x50]
0x0000a260      4889c6         mov rsi, rax
0x0000a263      4889df         mov rdi, rbx
0x0000a266      e815210000     call sym.strnlen1
0x0000a26b      488d4d04       lea rcx, [rbp + 4]
0x0000a26f      488d7d24       lea rdi, [rbp + 0x24]
0x0000a273      4889c2         mov rdx, rax
0x0000a276      4889de         mov rsi, rbx
0x0000a279      e8625f0000     call sym.rpl_mbrtowc
0x0000a27e      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000a282      4889442458     mov qword [rsp + 0x58], rax
0x0000a287      0f8493000000   je 0xa320
0x0000a28d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000a291      0f84c9000000   je 0xa360
0x0000a297      4885c0         test rax, rax
0x0000a29a      7525           jne 0xa2c1
0x0000a29c      488b442450     mov rax, qword [rsp + 0x50]
0x0000a2a1      48c744245801.  mov qword [rsp + 0x58], 1
0x0000a2aa      803800         cmp byte [rax], 0
0x0000a2ad      0f8571030000   jne 0xa624
0x0000a2b3      448b442464     mov r8d, dword [rsp + 0x64]
0x0000a2b8      4585c0         test r8d, r8d
0x0000a2bb      0f853a030000   jne 0xa5fb
0x0000a2c1      488d7d04       lea rdi, [rbp + 4]
0x0000a2c5      c644246001     mov byte [rsp + 0x60], 1
0x0000a2ca      e8c186ffff     call sym.imp.mbsinit
0x0000a2cf      85c0           test eax, eax
0x0000a2d1      0f84b9000000   je 0xa390
0x0000a2d7      c644244000     mov byte [rsp + 0x40], 0
0x0000a2dc      c644244c01     mov byte [rsp + 0x4c], 1
0x0000a2e1      e9bdfdffff     jmp 0xa0a3
0x0000a2e6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a2f0      31c0           xor eax, eax
0x0000a2f2      e9f1fcffff     jmp 0x9fe8
0x0000a2f7      660f1f840000.  nop word [rax + rax]
0x0000a300      48c744241801.  mov qword [rsp + 0x18], 1
0x0000a309      c644242000     mov byte [rsp + 0x20], 0
0x0000a30e      c644240c01     mov byte [rsp + 0xc], 1
0x0000a313      e92dfeffff     jmp 0xa145
0x0000a318      0f1f84000000.  nop dword [rax + rax]
0x0000a320      48c744245801.  mov qword [rsp + 0x58], 1
0x0000a329      c644246000     mov byte [rsp + 0x60], 0
0x0000a32e      c644244c01     mov byte [rsp + 0x4c], 1
0x0000a333      e923feffff     jmp 0xa15b
0x0000a338      0f1f84000000.  nop dword [rax + rax]
0x0000a340      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000a345      e8e681ffff     call sym.imp.strlen
0x0000a34a      c644242000     mov byte [rsp + 0x20], 0
0x0000a34f      4889442418     mov qword [rsp + 0x18], rax
0x0000a354      c644240c01     mov byte [rsp + 0xc], 1
0x0000a359      e9e7fdffff     jmp 0xa145
0x0000a35e      6690           nop
0x0000a360      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0000a365      e8c681ffff     call sym.imp.strlen
0x0000a36a      c644246000     mov byte [rsp + 0x60], 0
0x0000a36f      4889442458     mov qword [rsp + 0x58], rax
0x0000a374      c644244c01     mov byte [rsp + 0x4c], 1
0x0000a379      e9ddfdffff     jmp 0xa15b
0x0000a37e      6690           nop
0x0000a380      c644240c01     mov byte [rsp + 0xc], 1
0x0000a385      e9adfdffff     jmp 0xa137
0x0000a38a      660f1f440000   nop word [rax + rax]
0x0000a390      c644244c01     mov byte [rsp + 0x4c], 1
0x0000a395      e909fdffff     jmp 0xa0a3
0x0000a39a      660f1f440000   nop word [rax + rax]
0x0000a3a0      0fb6c3         movzx eax, bl
0x0000a3a3      29d0           sub eax, edx
0x0000a3a5      e93efcffff     jmp 0x9fe8
0x0000a3aa      660f1f440000   nop word [rax + rax]
0x0000a3b0      807c240c00     cmp byte [rsp + 0xc], 0
0x0000a3b5      7438           je 0xa3ef
0x0000a3b7      807c242000     cmp byte [rsp + 0x20], 0
0x0000a3bc      757b           jne 0xa439
0x0000a3be      6690           nop
0x0000a3c0      b801000000     mov eax, 1
0x0000a3c5      e91efcffff     jmp 0x9fe8
0x0000a3ca      807c246000     cmp byte [rsp + 0x60], 0
0x0000a3cf      0f85be000000   jne 0xa493
0x0000a3d5      0f1f00         nop dword [rax]
0x0000a3d8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000a3dd      e906fcffff     jmp 0x9fe8
0x0000a3e2      660f1f440000   nop word [rax + rax]
0x0000a3e8      807c240c00     cmp byte [rsp + 0xc], 0
0x0000a3ed      7556           jne 0xa445
0x0000a3ef      803c2400       cmp byte [rsp], 0
0x0000a3f3      4889e3         mov rbx, rsp
0x0000a3f6      0f85dc000000   jne 0xa4d8
0x0000a3fc      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000a401      488d35387601.  lea rsi, obj.is_basic_table             ; 0x21a40
0x0000a408      0fb611         movzx edx, byte [rcx]
0x0000a40b      89d0           mov eax, edx
0x0000a40d      c0e805         shr al, 5
0x0000a410      83e007         and eax, 7
0x0000a413      8b0486         mov eax, dword [rsi + rax*4]
0x0000a416      0fa3d0         bt eax, edx
0x0000a419      0f83a1000000   jae 0xa4c0
0x0000a41f      48c744241801.  mov qword [rsp + 0x18], 1
0x0000a428      0fbe01         movsx eax, byte [rcx]
0x0000a42b      c644242001     mov byte [rsp + 0x20], 1
0x0000a430      c644240c01     mov byte [rsp + 0xc], 1
0x0000a435      89442424       mov dword [rsp + 0x24], eax
0x0000a439      8b742424       mov esi, dword [rsp + 0x24]
0x0000a43d      85f6           test esi, esi
0x0000a43f      0f857bffffff   jne 0xa3c0
0x0000a445      807c244c00     cmp byte [rsp + 0x4c], 0
0x0000a44a      0f857affffff   jne 0xa3ca
0x0000a450      807c244000     cmp byte [rsp + 0x40], 0
0x0000a455      488d5c2440     lea rbx, [rsp + 0x40]
0x0000a45a      0f8538010000   jne 0xa598
0x0000a460      488b4c2450     mov rcx, qword [rsp + 0x50]
0x0000a465      488d35d47501.  lea rsi, obj.is_basic_table             ; 0x21a40
0x0000a46c      0fb611         movzx edx, byte [rcx]
0x0000a46f      89d0           mov eax, edx
0x0000a471      c0e805         shr al, 5
0x0000a474      83e007         and eax, 7
0x0000a477      8b0486         mov eax, dword [rsi + rax*4]
0x0000a47a      0fa3d0         bt eax, edx
0x0000a47d      0f83fd000000   jae 0xa580
0x0000a483      48c744245801.  mov qword [rsp + 0x58], 1
0x0000a48c      0fbe01         movsx eax, byte [rcx]
0x0000a48f      89442464       mov dword [rsp + 0x64], eax
0x0000a493      8b542464       mov edx, dword [rsp + 0x64]
0x0000a497      31c0           xor eax, eax
0x0000a499      85d2           test edx, edx
0x0000a49b      0f95c0         setne al
0x0000a49e      f7d8           neg eax
0x0000a4a0      e943fbffff     jmp 0x9fe8
0x0000a4a5      0f1f00         nop dword [rax]
0x0000a4a8      0f83b3000000   jae 0xa561
0x0000a4ae      e8cd81ffff     call sym.imp.memcmp
0x0000a4b3      85c0           test eax, eax
0x0000a4b5      0f8f05ffffff   jg 0xa3c0
0x0000a4bb      e918ffffff     jmp 0xa3d8
0x0000a4c0      4889e3         mov rbx, rsp
0x0000a4c3      488d7b04       lea rdi, [rbx + 4]
0x0000a4c7      e8c484ffff     call sym.imp.mbsinit
0x0000a4cc      85c0           test eax, eax
0x0000a4ce      0f842c010000   je 0xa600
0x0000a4d4      c6042401       mov byte [rsp], 1
0x0000a4d8      e84380ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000a4dd      488b6c2410     mov rbp, qword [rsp + 0x10]
0x0000a4e2      4889c6         mov rsi, rax
0x0000a4e5      4889ef         mov rdi, rbp
0x0000a4e8      e8931e0000     call sym.strnlen1
0x0000a4ed      488d4b04       lea rcx, [rbx + 4]
0x0000a4f1      488d7b24       lea rdi, [rbx + 0x24]
0x0000a4f5      4889c2         mov rdx, rax
0x0000a4f8      4889ee         mov rsi, rbp
0x0000a4fb      e8e05c0000     call sym.rpl_mbrtowc
0x0000a500      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000a504      4889442418     mov qword [rsp + 0x18], rax
0x0000a509      0f84b1feffff   je 0xa3c0
0x0000a50f      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000a513      0f84a7feffff   je 0xa3c0
0x0000a519      4885c0         test rax, rax
0x0000a51c      7523           jne 0xa541
0x0000a51e      488b442410     mov rax, qword [rsp + 0x10]
0x0000a523      48c744241801.  mov qword [rsp + 0x18], 1
0x0000a52c      803800         cmp byte [rax], 0
0x0000a52f      0f85ef000000   jne 0xa624
0x0000a535      8b7c2424       mov edi, dword [rsp + 0x24]
0x0000a539      85ff           test edi, edi
0x0000a53b      0f85ba000000   jne 0xa5fb
0x0000a541      488d7b04       lea rdi, [rbx + 4]
0x0000a545      c644242001     mov byte [rsp + 0x20], 1
0x0000a54a      e84184ffff     call sym.imp.mbsinit
0x0000a54f      85c0           test eax, eax
0x0000a551      7423           je 0xa576
0x0000a553      c6042400       mov byte [rsp], 0
0x0000a557      c644240c01     mov byte [rsp + 0xc], 1
0x0000a55c      e9d8feffff     jmp 0xa439
0x0000a561      4889c2         mov rdx, rax
0x0000a564      e81781ffff     call sym.imp.memcmp
0x0000a569      85c0           test eax, eax
0x0000a56b      0f894ffeffff   jns 0xa3c0
0x0000a571      e962feffff     jmp 0xa3d8
0x0000a576      c644240c01     mov byte [rsp + 0xc], 1
0x0000a57b      e9b9feffff     jmp 0xa439
0x0000a580      488d7c2444     lea rdi, [rsp + 0x44]
0x0000a585      488d5c2440     lea rbx, [rsp + 0x40]
0x0000a58a      e80184ffff     call sym.imp.mbsinit
0x0000a58f      85c0           test eax, eax
0x0000a591      746d           je 0xa600
0x0000a593      c644244001     mov byte [rsp + 0x40], 1
0x0000a598      e8837fffff     call sym.imp.__ctype_get_mb_cur_max
0x0000a59d      488b6c2450     mov rbp, qword [rsp + 0x50]
0x0000a5a2      4889c6         mov rsi, rax
0x0000a5a5      4889ef         mov rdi, rbp
0x0000a5a8      e8d31d0000     call sym.strnlen1
0x0000a5ad      488d4b04       lea rcx, [rbx + 4]
0x0000a5b1      488d7b24       lea rdi, [rbx + 0x24]
0x0000a5b5      4889c2         mov rdx, rax
0x0000a5b8      4889ee         mov rsi, rbp
0x0000a5bb      e8205c0000     call sym.rpl_mbrtowc
0x0000a5c0      488d5002       lea rdx, [rax + 2]
0x0000a5c4      4889442458     mov qword [rsp + 0x58], rax
0x0000a5c9      4883fa01       cmp rdx, 1
0x0000a5cd      0f8605feffff   jbe 0xa3d8
0x0000a5d3      4885c0         test rax, rax
0x0000a5d6      0f85b7feffff   jne 0xa493
0x0000a5dc      488b442450     mov rax, qword [rsp + 0x50]
0x0000a5e1      48c744245801.  mov qword [rsp + 0x58], 1
0x0000a5ea      803800         cmp byte [rax], 0
0x0000a5ed      7535           jne 0xa624
0x0000a5ef      8b4c2464       mov ecx, dword [rsp + 0x64]
0x0000a5f3      85c9           test ecx, ecx
0x0000a5f5      0f8498feffff   je 0xa493
0x0000a5fb      e82084ffff     call sym.mbuiter_multi_next.part.0
0x0000a600      488d0d597401.  lea rcx, obj.__PRETTY_FUNCTION__.5133   ; 0x21a60 ; "mbuiter_multi_next"
0x0000a607      488d359a6e01.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x214a8 ; "../coreutils-8.31/lib/mbuiter.h"
0x0000a60e      488d3db36e01.  lea rdi, str.mbsinit___iter__state      ; 0x214c8 ; "mbsinit (&iter->state)"
0x0000a615      ba96000000     mov edx, 0x96
0x0000a61a      e8e17fffff     call sym.imp.__assert_fail
0x0000a61f      e83c7fffff     call sym.imp.__stack_chk_fail
0x0000a624      488d0d357401.  lea rcx, obj.__PRETTY_FUNCTION__.5133   ; 0x21a60 ; "mbuiter_multi_next"
0x0000a62b      488d35766e01.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x214a8 ; "../coreutils-8.31/lib/mbuiter.h"
0x0000a632      488d3da66e01.  lea rdi, str.iter__cur.ptr_______0      ; 0x214df ; "*iter->cur.ptr == '\0'"
0x0000a639      bab2000000     mov edx, 0xb2
0x0000a63e      e8bd7fffff     call sym.imp.__assert_fail
0x0000a643      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a64d      0f1f00         nop dword [rax]
;-- set_program_name:
0x0000a650      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x0000a653      53             push rbx
0x0000a654      7477           je 0xa6cd                               ; ../coreutils-8.31/lib/progname.c:51
0x0000a656      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000a65b      4889fb         mov rbx, rdi
0x0000a65e      e86d7fffff     call sym.imp.strrchr
0x0000a663      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x0000a666      7455           je 0xa6bd
0x0000a668      4c8d4001       lea r8, [rax + 1]
0x0000a66c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000a66f      4829da         sub rdx, rbx
0x0000a672      4883fa06       cmp rdx, 6
0x0000a676      7e45           jle 0xa6bd
0x0000a678      488d70fa       lea rsi, [rax - 6]
0x0000a67c      488d3d2d7401.  lea rdi, str..libs                      ; 0x21ab0 ; "/.libs/"
0x0000a683      b907000000     mov ecx, 7
0x0000a688      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000a68a      0f97c2         seta dl
0x0000a68d      80da00         sbb dl, 0
0x0000a690      84d2           test dl, dl
0x0000a692      7529           jne 0xa6bd
0x0000a694      488d3d1d7401.  lea rdi, [0x00021ab8]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000a69b      b903000000     mov ecx, 3
0x0000a6a0      4c89c6         mov rsi, r8
0x0000a6a3      4c89c3         mov rbx, r8
0x0000a6a6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000a6a8      0f97c2         seta dl
0x0000a6ab      80da00         sbb dl, 0
0x0000a6ae      84d2           test dl, dl
0x0000a6b0      750b           jne 0xa6bd
0x0000a6b2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x0000a6b6      48891de3d921.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x2280a0:8]=0
0x0000a6bd      48891decda21.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x2281b0:8]=0
0x0000a6c4      48891dfdd921.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2280c8:8]=0
0x0000a6cb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000a6cc      c3             ret
0x0000a6cd      488b0d0cda21.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2280e0:8]=0
0x0000a6d4      488d3d9d7301.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x21a78 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000a6db      ba37000000     mov edx, 0x37                           ; '7'
0x0000a6e0      be01000000     mov esi, 1
0x0000a6e5      e87682ffff     call sym.imp.fwrite
0x0000a6ea      e8117dffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000a6ef      90             nop
;-- gettext_quote.part.1:
0x0000a6f0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x0000a6f1      53             push rbx
0x0000a6f2      4889fd         mov rbp, rdi
0x0000a6f5      89f3           mov ebx, esi
0x0000a6f7      4883ec08       sub rsp, 8
0x0000a6fb      e8c04e0100     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x0000a700      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x0000a703      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000a706      80fa55         cmp dl, 0x55
0x0000a709      7475           je 0xa780
0x0000a70b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000a70e      7420           je 0xa730
0x0000a710      488d05b47301.  lea rax, str.l______l                   ; 0x21acb ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000a717      488d15d66d01.  lea rdx, [0x000214f4]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; "'"
0x0000a71e      83fb09         cmp ebx, 9
0x0000a721      480f45c2       cmovne rax, rdx
0x0000a725      4883c408       add rsp, 8
0x0000a729      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000a72a      5d             pop rbp
0x0000a72b      c3             ret
0x0000a72c      0f1f4000       nop dword [rax]
0x0000a730      0fb65001       movzx edx, byte [rax + 1]
0x0000a734      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000a737      80fa42         cmp dl, 0x42
0x0000a73a      75d4           jne 0xa710
0x0000a73c      80780231       cmp byte [rax + 2], 0x31
0x0000a740      75ce           jne 0xa710
0x0000a742      80780338       cmp byte [rax + 3], 0x38
0x0000a746      75c8           jne 0xa710
0x0000a748      80780430       cmp byte [rax + 4], 0x30
0x0000a74c      75c2           jne 0xa710
0x0000a74e      80780533       cmp byte [rax + 5], 0x33
0x0000a752      75bc           jne 0xa710
0x0000a754      80780630       cmp byte [rax + 6], 0x30
0x0000a758      75b6           jne 0xa710
0x0000a75a      80780700       cmp byte [rax + 7], 0
0x0000a75e      75b0           jne 0xa710
0x0000a760      807d0060       cmp byte [rbp], 0x60
0x0000a764      488d05597301.  lea rax, [0x00021ac4]
0x0000a76b      488d15567301.  lea rdx, [0x00021ac8]
0x0000a772      480f45c2       cmovne rax, rdx
0x0000a776      4883c408       add rsp, 8
0x0000a77a      5b             pop rbx
0x0000a77b      5d             pop rbp
0x0000a77c      c3             ret
0x0000a77d      0f1f00         nop dword [rax]
0x0000a780      0fb65001       movzx edx, byte [rax + 1]
0x0000a784      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000a787      80fa54         cmp dl, 0x54
0x0000a78a      7584           jne 0xa710
0x0000a78c      0fb65002       movzx edx, byte [rax + 2]
0x0000a790      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000a793      80fa46         cmp dl, 0x46
0x0000a796      0f8574ffffff   jne 0xa710
0x0000a79c      8078032d       cmp byte [rax + 3], 0x2d
0x0000a7a0      0f856affffff   jne 0xa710
0x0000a7a6      80780438       cmp byte [rax + 4], 0x38
0x0000a7aa      0f8560ffffff   jne 0xa710
0x0000a7b0      80780500       cmp byte [rax + 5], 0
0x0000a7b4      0f8556ffffff   jne 0xa710
0x0000a7ba      807d0060       cmp byte [rbp], 0x60
0x0000a7be      488d05f77201.  lea rax, [0x00021abc]                   ; "\u2018"
0x0000a7c5      488d15f47201.  lea rdx, [0x00021ac0]                   ; "\u2019"
0x0000a7cc      480f45c2       cmovne rax, rdx
0x0000a7d0      4883c408       add rsp, 8
0x0000a7d4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x0000a7d5      5d             pop rbp
0x0000a7d6      c3             ret
0x0000a7d7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x0000a7e0      4157           push r15
0x0000a7e2      4156           push r14
0x0000a7e4      4589c7         mov r15d, r8d
0x0000a7e7      4155           push r13
0x0000a7e9      4154           push r12
0x0000a7eb      4989fe         mov r14, rdi
0x0000a7ee      55             push rbp
0x0000a7ef      53             push rbx
0x0000a7f0      4489cb         mov ebx, r9d
0x0000a7f3      4989f5         mov r13, rsi
0x0000a7f6      4889cd         mov rbp, rcx
0x0000a7f9      83e302         and ebx, 2
0x0000a7fc      4881ecb80000.  sub rsp, 0xb8
0x0000a803      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000a80b      4889542410     mov qword [rsp + 0x10], rdx
0x0000a810      4489442408     mov dword [rsp + 8], r8d
0x0000a815      44894c2478     mov dword [rsp + 0x78], r9d
0x0000a81a      4889442420     mov qword [rsp + 0x20], rax
0x0000a81f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x0000a827      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000a82c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x0000a834      4889442460     mov qword [rsp + 0x60], rax
0x0000a839      64488b042528.  mov rax, qword fs:[0x28]
0x0000a842      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000a84a      31c0           xor eax, eax
0x0000a84c      e8cf7cffff     call sym.imp.__ctype_get_mb_cur_max
0x0000a851      4183ff0a       cmp r15d, 0xa
0x0000a855      4889442458     mov qword [rsp + 0x58], rax
0x0000a85a      0f87af110000   ja 0xba0f
0x0000a860      488d0db97201.  lea rcx, [0x00021b20]
0x0000a867      4489fa         mov edx, r15d
0x0000a86a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000a86e      4801c8         add rax, rcx
0x0000a871      ffe0           jmp rax
0x0000a873      c644240e01     mov byte [rsp + 0xe], 1
0x0000a878      c644247c00     mov byte [rsp + 0x7c], 0
0x0000a87d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x0000a880      48c744245000.  mov qword [rsp + 0x50], 0
0x0000a889      c644240f01     mov byte [rsp + 0xf], 1
0x0000a88e      c644240d00     mov byte [rsp + 0xd], 0
0x0000a893      488d055a6c01.  lea rax, [0x000214f4]                   ; "'"
0x0000a89a      48c744241801.  mov qword [rsp + 0x18], 1
0x0000a8a3      4531ff         xor r15d, r15d
0x0000a8a6      c74424080200.  mov dword [rsp + 8], 2
0x0000a8ae      4889442448     mov qword [rsp + 0x48], rax
0x0000a8b3      4531db         xor r11d, r11d
0x0000a8b6      4889e8         mov rax, rbp
0x0000a8b9      4589e0         mov r8d, r12d
0x0000a8bc      4c89dd         mov rbp, r11
0x0000a8bf      4989c3         mov r11, rax
0x0000a8c2      660f1f440000   nop word [rax + rax]
0x0000a8c8      4939eb         cmp r11, rbp
0x0000a8cb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000a8cf      4983fbff       cmp r11, 0xffffffffffffffff
0x0000a8d3      750d           jne 0xa8e2
0x0000a8d5      488b442410     mov rax, qword [rsp + 0x10]
0x0000a8da      803c2800       cmp byte [rax + rbp], 0
0x0000a8de      410f95c4       setne r12b
0x0000a8e2      4584e4         test r12b, r12b
0x0000a8e5      0f8455060000   je 0xaf40
0x0000a8eb      837c240802     cmp dword [rsp + 8], 2
0x0000a8f0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000a8f5      4c8d0c2f       lea r9, [rdi + rbp]
0x0000a8f9      0f95c0         setne al
0x0000a8fc      2244240d       and al, byte [rsp + 0xd]
0x0000a900      4189c2         mov r10d, eax
0x0000a903      0f84a7000000   je 0xa9b0
0x0000a909      488b442418     mov rax, qword [rsp + 0x18]
0x0000a90e      4885c0         test rax, rax
0x0000a911      0f8429040000   je 0xad40
0x0000a917      4983fbff       cmp r11, 0xffffffffffffffff
0x0000a91b      488d5c0500     lea rbx, [rbp + rax]
0x0000a920      752e           jne 0xa950
0x0000a922      4883f801       cmp rax, 1
0x0000a926      7628           jbe 0xa950
0x0000a928      4488442438     mov byte [rsp + 0x38], r8b
0x0000a92d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x0000a932      4c894c2428     mov qword [rsp + 0x28], r9
0x0000a937      e8f47bffff     call sym.imp.strlen
0x0000a93c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000a942      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x0000a948      4989c3         mov r11, rax
0x0000a94b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x0000a950      4c39db         cmp rbx, r11
0x0000a953      4488542428     mov byte [rsp + 0x28], r10b
0x0000a958      0f87b2050000   ja 0xaf10
0x0000a95e      488b542418     mov rdx, qword [rsp + 0x18]
0x0000a963      488b742448     mov rsi, qword [rsp + 0x48]
0x0000a968      4c89cf         mov rdi, r9
0x0000a96b      4c895c2440     mov qword [rsp + 0x40], r11
0x0000a970      4488442438     mov byte [rsp + 0x38], r8b
0x0000a975      4c894c2430     mov qword [rsp + 0x30], r9
0x0000a97a      e8017dffff     call sym.imp.memcmp
0x0000a97f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x0000a981      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x0000a986      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000a98c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x0000a991      0f8579050000   jne 0xaf10
0x0000a997      807c240f00     cmp byte [rsp + 0xf], 0
0x0000a99c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x0000a9a2      0f857d0f0000   jne 0xb925
0x0000a9a8      0f1f84000000.  nop dword [rax + rax]
0x0000a9b0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x0000a9b4      80fb7e         cmp bl, 0x7e
0x0000a9b7      0f871b030000   ja 0xacd8
0x0000a9bd      488d0d887101.  lea rcx, [0x00021b4c]
0x0000a9c4      0fb6d3         movzx edx, bl
0x0000a9c7      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000a9cb      4801c8         add rax, rcx
0x0000a9ce      ffe0           jmp rax
0x0000a9d0      4531d2         xor r10d, r10d
0x0000a9d3      4983fb01       cmp r11, 1
0x0000a9d7      0f95c0         setne al
0x0000a9da      4983fbff       cmp r11, 0xffffffffffffffff
0x0000a9de      750c           jne 0xa9ec
0x0000a9e0      488b442410     mov rax, qword [rsp + 0x10]
0x0000a9e5      80780100       cmp byte [rax + 1], 0
0x0000a9e9      0f95c0         setne al
0x0000a9ec      837c240802     cmp dword [rsp + 8], 2
0x0000a9f1      0f94c2         sete dl
0x0000a9f4      84c0           test al, al
0x0000a9f6      0f844c020000   je 0xac48
0x0000a9fc      4531e4         xor r12d, r12d
0x0000a9ff      31c0           xor eax, eax
0x0000aa01      0f1f80000000.  nop dword [rax]
0x0000aa08      807c240d01     cmp byte [rsp + 0xd], 1
0x0000aa0d      0f850f010000   jne 0xab22
0x0000aa13      84d2           test dl, dl
0x0000aa15      0f8507010000   jne 0xab22
0x0000aa1b      488b742420     mov rsi, qword [rsp + 0x20]
0x0000aa20      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x0000aa23      7414           je 0xaa39
0x0000aa25      89da           mov edx, ebx
0x0000aa27      c0ea05         shr dl, 5
0x0000aa2a      0fb6d2         movzx edx, dl
0x0000aa2d      8b1496         mov edx, dword [rsi + rdx*4]
0x0000aa30      0fa3da         bt edx, ebx
0x0000aa33      0f824a010000   jb 0xab83
0x0000aa39      4584d2         test r10b, r10b
0x0000aa3c      0f8541010000   jne 0xab83
0x0000aa42      83f001         xor eax, 1
0x0000aa45      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x0000aa49      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000aa4c      84c0           test al, al
0x0000aa4e      7420           je 0xaa70                               ; ../coreutils-8.31/lib/quotearg.c:338
0x0000aa50      4d39fd         cmp r13, r15
0x0000aa53      7605           jbe 0xaa5a
0x0000aa55      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000aa5a      498d4701       lea rax, [r15 + 1]
0x0000aa5e      4939c5         cmp r13, rax
0x0000aa61      7606           jbe 0xaa69
0x0000aa63      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000aa69      4983c702       add r15, 2
0x0000aa6d      4531c0         xor r8d, r8d
0x0000aa70      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x0000aa73      7304           jae 0xaa79                              ; ../coreutils-8.31/lib/quotearg.c:68
0x0000aa75      43881c3e       mov byte [r14 + r15], bl
0x0000aa79      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000aa7e      4983c701       add r15, 1
0x0000aa82      b800000000     mov eax, 0
0x0000aa87      4584e4         test r12b, r12b
0x0000aa8a      0f44f8         cmove edi, eax
0x0000aa8d      40887c240e     mov byte [rsp + 0xe], dil
0x0000aa92      e931feffff     jmp 0xa8c8
0x0000aa97      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x0000aaa0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x0000aaa3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x0000aaa7      83f802         cmp eax, 2
0x0000aaaa      0f84b8050000   je 0xb068
0x0000aab0      83f805         cmp eax, 5
0x0000aab3      0f846f050000   je 0xb028
0x0000aab9      83f802         cmp eax, 2
0x0000aabc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000aac1      0f94c2         sete dl
0x0000aac4      4531e4         xor r12d, r12d
0x0000aac7      31c0           xor eax, eax
0x0000aac9      e93affffff     jmp 0xaa08
0x0000aace      6690           nop
0x0000aad0      4531d2         xor r10d, r10d
0x0000aad3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x0000aad8      0f8402050000   je 0xafe0
0x0000aade      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x0000aae3      31d2           xor edx, edx
0x0000aae5      31c0           xor eax, eax
0x0000aae7      bb27000000     mov ebx, 0x27                           ; '''
0x0000aaec      e917ffffff     jmp 0xaa08
0x0000aaf1      0f1f80000000.  nop dword [rax]
0x0000aaf8      ba09000000     mov edx, 9
0x0000aafd      bb74000000     mov ebx, 0x74                           ; 't'
0x0000ab02      837c240802     cmp dword [rsp + 8], 2
0x0000ab07      0f94c0         sete al
0x0000ab0a      2244240f       and al, byte [rsp + 0xf]
0x0000ab0e      0f854a010000   jne 0xac5e
0x0000ab14      807c240d00     cmp byte [rsp + 0xd], 0
0x0000ab19      7565           jne 0xab80
0x0000ab1b      89d3           mov ebx, edx
0x0000ab1d      4531e4         xor r12d, r12d
0x0000ab20      31c0           xor eax, eax
0x0000ab22      807c240f00     cmp byte [rsp + 0xf], 0
0x0000ab27      0f85eefeffff   jne 0xaa1b
0x0000ab2d      e907ffffff     jmp 0xaa39                              ; ../coreutils-8.31/lib/quotearg.c:210
0x0000ab32      660f1f440000   nop word [rax + rax]
0x0000ab38      ba08000000     mov edx, 8
0x0000ab3d      bb62000000     mov ebx, 0x62                           ; 'b'
0x0000ab42      ebd0           jmp 0xab14
0x0000ab44      0f1f4000       nop dword [rax]
0x0000ab48      837c240802     cmp dword [rsp + 8], 2
0x0000ab4d      0f84cd030000   je 0xaf20
0x0000ab53      807c240d00     cmp byte [rsp + 0xd], 0
0x0000ab58      0f8412020000   je 0xad70
0x0000ab5e      807c240f00     cmp byte [rsp + 0xf], 0
0x0000ab63      0f8407020000   je 0xad70
0x0000ab69      48837c241800   cmp qword [rsp + 0x18], 0
0x0000ab6f      0f85b6030000   jne 0xaf2b
0x0000ab75      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000ab7a      660f1f440000   nop word [rax + rax]
0x0000ab80      4531e4         xor r12d, r12d
0x0000ab83      837c240802     cmp dword [rsp + 8], 2
0x0000ab88      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000ab8b      807c240f00     cmp byte [rsp + 0xf], 0
0x0000ab90      89d0           mov eax, edx
0x0000ab92      0f8550080000   jne 0xb3e8
0x0000ab98      4489c0         mov eax, r8d
0x0000ab9b      83f001         xor eax, 1
0x0000ab9e      20d0           and al, dl
0x0000aba0      742f           je 0xabd1
0x0000aba2      4d39fd         cmp r13, r15
0x0000aba5      7605           jbe 0xabac
0x0000aba7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000abac      498d5701       lea rdx, [r15 + 1]
0x0000abb0      4939d5         cmp r13, rdx
0x0000abb3      7606           jbe 0xabbb
0x0000abb5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000abbb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000abbf      4939d5         cmp r13, rdx
0x0000abc2      7606           jbe 0xabca
0x0000abc4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000abca      4983c703       add r15, 3
0x0000abce      4189c0         mov r8d, eax
0x0000abd1      4d39fd         cmp r13, r15
0x0000abd4      7605           jbe 0xabdb
0x0000abd6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000abdb      4983c701       add r15, 1
0x0000abdf      4883c501       add rbp, 1
0x0000abe3      e988feffff     jmp 0xaa70
0x0000abe8      0f1f84000000.  nop dword [rax + rax]
0x0000abf0      807c240d00     cmp byte [rsp + 0xd], 0
0x0000abf5      0f85c8010000   jne 0xadc3
0x0000abfb      31d2           xor edx, edx
0x0000abfd      f644247801     test byte [rsp + 0x78], 1
0x0000ac02      0f8413ffffff   je 0xab1b
0x0000ac08      4883c501       add rbp, 1
0x0000ac0c      e9b7fcffff     jmp 0xa8c8
0x0000ac11      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x0000ac18      837c240802     cmp dword [rsp + 8], 2
0x0000ac1d      0f94c2         sete dl
0x0000ac20      31c0           xor eax, eax
0x0000ac22      e9e1fdffff     jmp 0xaa08
0x0000ac27      660f1f840000.  nop word [rax + rax]
0x0000ac30      ba07000000     mov edx, 7
0x0000ac35      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000ac3a      e9d5feffff     jmp 0xab14
0x0000ac3f      90             nop
0x0000ac40      837c240802     cmp dword [rsp + 8], 2
0x0000ac45      0f94c2         sete dl
0x0000ac48      4885ed         test rbp, rbp
0x0000ac4b      0f85abfdffff   jne 0xa9fc
0x0000ac51      0fb644240f     movzx eax, byte [rsp + 0xf]
0x0000ac56      20d0           and al, dl
0x0000ac58      0f84aafdffff   je 0xaa08
0x0000ac5e      4c89dd         mov rbp, r11
0x0000ac61      c74424080200.  mov dword [rsp + 8], 2
0x0000ac69      e9fb060000     jmp 0xb369
0x0000ac6e      6690           nop
0x0000ac70      837c240802     cmp dword [rsp + 8], 2
0x0000ac75      0f94c2         sete dl
0x0000ac78      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000ac7b      ebd4           jmp 0xac51
0x0000ac7d      0f1f00         nop dword [rax]
0x0000ac80      837c240802     cmp dword [rsp + 8], 2
0x0000ac85      bb20000000     mov ebx, 0x20                           ; "@"
0x0000ac8a      0f94c2         sete dl
0x0000ac8d      ebc2           jmp 0xac51
0x0000ac8f      90             nop
0x0000ac90      ba0d000000     mov edx, 0xd
0x0000ac95      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000ac9a      e963feffff     jmp 0xab02
0x0000ac9f      90             nop
0x0000aca0      ba0c000000     mov edx, 0xc
0x0000aca5      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000acaa      e965feffff     jmp 0xab14
0x0000acaf      90             nop
0x0000acb0      ba0b000000     mov edx, 0xb
0x0000acb5      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000acba      e955feffff     jmp 0xab14
0x0000acbf      90             nop
0x0000acc0      ba0a000000     mov edx, 0xa
0x0000acc5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000acca      e933feffff     jmp 0xab02
0x0000accf      90             nop
0x0000acd0      4531d2         xor r10d, r10d
0x0000acd3      0f1f440000     nop dword [rax + rax]
0x0000acd8      48837c245801   cmp qword [rsp + 0x58], 1
0x0000acde      0f85a4030000   jne 0xb088
0x0000ace4      4c895c2438     mov qword [rsp + 0x38], r11
0x0000ace9      4488442430     mov byte [rsp + 0x30], r8b
0x0000acee      4488542428     mov byte [rsp + 0x28], r10b
0x0000acf3      e8f87cffff     call sym.imp.__ctype_b_loc
0x0000acf8      488b08         mov rcx, qword [rax]
0x0000acfb      0fb6d3         movzx edx, bl
0x0000acfe      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x0000ad04      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000ad0a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000ad0f      bf01000000     mov edi, 1
0x0000ad14      0fb70451       movzx eax, word [rcx + rdx*2]
0x0000ad18      66250040       and ax, entry.fini0                     ; sym.__do_global_dtors_aux
                                                                       ; 0x4000
0x0000ad1c      410f95c4       setne r12b
0x0000ad20      0f94c0         sete al
0x0000ad23      2244240d       and al, byte [rsp + 0xd]
0x0000ad27      84c0           test al, al
0x0000ad29      0f8592090000   jne 0xb6c1
0x0000ad2f      837c240802     cmp dword [rsp + 8], 2
0x0000ad34      0f94c2         sete dl
0x0000ad37      e9ccfcffff     jmp 0xaa08
0x0000ad3c      0f1f4000       nop dword [rax]
0x0000ad40      410fb619       movzx ebx, byte [r9]
0x0000ad44      80fb7e         cmp bl, 0x7e
0x0000ad47      7787           ja 0xacd0
0x0000ad49      488d0df86f01.  lea rcx, [0x00021d48]
0x0000ad50      0fb6d3         movzx edx, bl
0x0000ad53      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000ad57      4801c8         add rax, rcx
0x0000ad5a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000ad5c      0f1f4000       nop dword [rax]
0x0000ad60      4531d2         xor r10d, r10d
0x0000ad63      807c240d00     cmp byte [rsp + 0xd], 0
0x0000ad68      0f85f0fdffff   jne 0xab5e
0x0000ad6e      6690           nop
0x0000ad70      ba5c000000     mov edx, 0x5c                           ; '\'
0x0000ad75      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000ad7a      e995fdffff     jmp 0xab14
0x0000ad7f      90             nop
0x0000ad80      ba0c000000     mov edx, 0xc
0x0000ad85      4531d2         xor r10d, r10d
0x0000ad88      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000ad8d      e982fdffff     jmp 0xab14
0x0000ad92      660f1f440000   nop word [rax + rax]
0x0000ad98      ba0a000000     mov edx, 0xa
0x0000ad9d      4531d2         xor r10d, r10d
0x0000ada0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x0000ada5      e958fdffff     jmp 0xab02
0x0000adaa      660f1f440000   nop word [rax + rax]
0x0000adb0      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000adb5      e9c6fdffff     jmp 0xab80
0x0000adba      660f1f440000   nop word [rax + rax]
0x0000adc0      4531d2         xor r10d, r10d
0x0000adc3      837c240802     cmp dword [rsp + 8], 2
0x0000adc8      0f94c2         sete dl
0x0000adcb      807c240f00     cmp byte [rsp + 0xf], 0
0x0000add0      0f85940b0000   jne 0xb96a
0x0000add6      4489c0         mov eax, r8d
0x0000add9      4c89f9         mov rcx, r15
0x0000addc      83f001         xor eax, 1
0x0000addf      20d0           and al, dl
0x0000ade1      742d           je 0xae10
0x0000ade3      4d39fd         cmp r13, r15
0x0000ade6      7605           jbe 0xaded
0x0000ade8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000aded      498d4f01       lea rcx, [r15 + 1]
0x0000adf1      4939cd         cmp r13, rcx
0x0000adf4      7606           jbe 0xadfc
0x0000adf6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000adfc      498d4f02       lea rcx, [r15 + 2]
0x0000ae00      4939cd         cmp r13, rcx
0x0000ae03      0f8730060000   ja 0xb439
0x0000ae09      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000ae0d      4189c0         mov r8d, eax
0x0000ae10      4939cd         cmp r13, rcx
0x0000ae13      7605           jbe 0xae1a
0x0000ae15      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000ae1a      837c240802     cmp dword [rsp + 8], 2
0x0000ae1f      4c8d7901       lea r15, [rcx + 1]
0x0000ae23      0f8400060000   je 0xb429
0x0000ae29      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000ae2d      4c39d8         cmp rax, r11
0x0000ae30      7319           jae 0xae4b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x0000ae32      488b442410     mov rax, qword [rsp + 0x10]
0x0000ae37      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000ae3c      88442428       mov byte [rsp + 0x28], al
0x0000ae40      83e830         sub eax, 0x30
0x0000ae43      3c09           cmp al, 9
0x0000ae45      0f862e080000   jbe 0xb679
0x0000ae4b      4489e0         mov eax, r12d
0x0000ae4e      bb30000000     mov ebx, 0x30                           ; '0'
0x0000ae53      4531e4         xor r12d, r12d
0x0000ae56      e9adfbffff     jmp 0xaa08                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000ae5b      0f1f440000     nop dword [rax + rax]
0x0000ae60      837c240802     cmp dword [rsp + 8], 2
0x0000ae65      4589d4         mov r12d, r10d
0x0000ae68      0f94c2         sete dl
0x0000ae6b      4531d2         xor r10d, r10d
0x0000ae6e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x0000ae70      e993fbffff     jmp 0xaa08                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x0000ae75      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x0000ae78      837c240802     cmp dword [rsp + 8], 2
0x0000ae7d      0f94c2         sete dl
0x0000ae80      4531d2         xor r10d, r10d
0x0000ae83      e9c0fdffff     jmp 0xac48
0x0000ae88      0f1f84000000.  nop dword [rax + rax]
0x0000ae90      837c240802     cmp dword [rsp + 8], 2
0x0000ae95      0f94c2         sete dl
0x0000ae98      4531d2         xor r10d, r10d
0x0000ae9b      4531e4         xor r12d, r12d
0x0000ae9e      e9aefdffff     jmp 0xac51
0x0000aea3      0f1f440000     nop dword [rax + rax]
0x0000aea8      837c240802     cmp dword [rsp + 8], 2
0x0000aead      4589d4         mov r12d, r10d
0x0000aeb0      bb20000000     mov ebx, 0x20                           ; "@"
0x0000aeb5      0f94c2         sete dl
0x0000aeb8      4531d2         xor r10d, r10d
0x0000aebb      e991fdffff     jmp 0xac51
0x0000aec0      ba0d000000     mov edx, 0xd
0x0000aec5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x0000aec8      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000aecd      e930fcffff     jmp 0xab02
0x0000aed2      660f1f440000   nop word [rax + rax]
0x0000aed8      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000aedd      e99efcffff     jmp 0xab80
0x0000aee2      660f1f440000   nop word [rax + rax]
0x0000aee8      ba09000000     mov edx, 9
0x0000aeed      4531d2         xor r10d, r10d
0x0000aef0      bb74000000     mov ebx, 0x74                           ; 't'
0x0000aef5      e908fcffff     jmp 0xab02
0x0000aefa      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x0000af00      bb62000000     mov ebx, 0x62                           ; 'b'
0x0000af05      e976fcffff     jmp 0xab80
0x0000af0a      660f1f440000   nop word [rax + rax]
0x0000af10      4531d2         xor r10d, r10d
0x0000af13      e998faffff     jmp 0xa9b0
0x0000af18      0f1f84000000.  nop dword [rax + rax]
0x0000af20      807c240f00     cmp byte [rsp + 0xf], 0
0x0000af25      0f8565090000   jne 0xb890
0x0000af2b      4883c501       add rbp, 1
0x0000af2f      4489c0         mov eax, r8d
0x0000af32      4531e4         xor r12d, r12d
0x0000af35      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000af3a      e90dfbffff     jmp 0xaa4c
0x0000af3f      90             nop
0x0000af40      837c240802     cmp dword [rsp + 8], 2
0x0000af45      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000af4a      4589c4         mov r12d, r8d
0x0000af4d      4c89dd         mov rbp, r11
0x0000af50      0f94c2         sete dl
0x0000af53      89d8           mov eax, ebx
0x0000af55      4d85ff         test r15, r15
0x0000af58      0f94c1         sete cl
0x0000af5b      21d0           and eax, edx
0x0000af5d      20c8           and al, cl
0x0000af5f      0f85610a0000   jne 0xb9c6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x0000af65      89d8           mov eax, ebx
0x0000af67      83f001         xor eax, 1
0x0000af6a      20c2           and dl, al
0x0000af6c      0f846a090000   je 0xb8dc
0x0000af72      807c247c00     cmp byte [rsp + 0x7c], 0
0x0000af77      0f845d090000   je 0xb8da
0x0000af7d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x0000af82      0f85f5090000   jne 0xb97d
0x0000af88      4d85ed         test r13, r13
0x0000af8b      0f94c0         sete al
0x0000af8e      48837c245000   cmp qword [rsp + 0x50], 0
0x0000af94      0f95c2         setne dl
0x0000af97      20d0           and al, dl
0x0000af99      0f841d0a0000   je 0xb9bc
0x0000af9f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000afa4      488d1d496501.  lea rbx, [0x000214f4]                   ; "'"
0x0000afab      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000afaf      c74424080200.  mov dword [rsp + 8], 2
0x0000afb7      41bf01000000   mov r15d, 1
0x0000afbd      48c744241801.  mov qword [rsp + 0x18], 1
0x0000afc6      c644240f00     mov byte [rsp + 0xf], 0
0x0000afcb      48895c2448     mov qword [rsp + 0x48], rbx
0x0000afd0      8844247c       mov byte [rsp + 0x7c], al
0x0000afd4      e9daf8ffff     jmp 0xa8b3
0x0000afd9      0f1f80000000.  nop dword [rax]
0x0000afe0      807c240f00     cmp byte [rsp + 0xf], 0
0x0000afe5      0f85a5080000   jne 0xb890
0x0000afeb      4d85ed         test r13, r13
0x0000afee      0f84fc030000   je 0xb3f0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x0000aff4      31d2           xor edx, edx
0x0000aff6      48837c245000   cmp qword [rsp + 0x50], 0
0x0000affc      0f85ee030000   jne 0xb3f0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000b002      4c896c2450     mov qword [rsp + 0x50], r13
0x0000b007      4983c703       add r15, 3
0x0000b00b      31c0           xor eax, eax
0x0000b00d      448864247c     mov byte [rsp + 0x7c], r12b
0x0000b012      4531c0         xor r8d, r8d
0x0000b015      4989d5         mov r13, rdx
0x0000b018      bb27000000     mov ebx, 0x27                           ; '''
0x0000b01d      e917faffff     jmp 0xaa39
0x0000b022      660f1f440000   nop word [rax + rax]
0x0000b028      f644247804     test byte [rsp + 0x78], 4
0x0000b02d      7421           je 0xb050
0x0000b02f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x0000b033      4c39d9         cmp rcx, r11
0x0000b036      7318           jae 0xb050
0x0000b038      488b442410     mov rax, qword [rsp + 0x10]
0x0000b03d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x0000b042      0f848a070000   je 0xb7d2
0x0000b048      0f1f84000000.  nop dword [rax + rax]
0x0000b050      31d2           xor edx, edx
0x0000b052      4531e4         xor r12d, r12d
0x0000b055      31c0           xor eax, eax
0x0000b057      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000b05c      e9a7f9ffff     jmp 0xaa08
0x0000b061      0f1f80000000.  nop dword [rax]
0x0000b068      807c240f00     cmp byte [rsp + 0xf], 0
0x0000b06d      0f851d080000   jne 0xb890
0x0000b073      4531e4         xor r12d, r12d
0x0000b076      31c0           xor eax, eax
0x0000b078      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000b07d      e9b7f9ffff     jmp 0xaa39                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x0000b082      660f1f440000   nop word [rax + rax]
0x0000b088      488d8424a000.  lea rax, [rsp + 0xa0]
0x0000b090      4983fbff       cmp r11, 0xffffffffffffffff
0x0000b094      48c78424a000.  mov qword [rsp + 0xa0], 0
0x0000b0a0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x0000b0a5      752d           jne 0xb0d4
0x0000b0a7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000b0ac      4488442440     mov byte [rsp + 0x40], r8b
0x0000b0b1      4488542438     mov byte [rsp + 0x38], r10b
0x0000b0b6      4c894c2430     mov qword [rsp + 0x30], r9
0x0000b0bb      e87074ffff     call sym.imp.strlen
0x0000b0c0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x0000b0c6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000b0cc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000b0cf      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x0000b0d4      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000b0dc      31c9           xor ecx, ecx
0x0000b0de      885c247e       mov byte [rsp + 0x7e], bl
0x0000b0e2      448844247d     mov byte [rsp + 0x7d], r8b
0x0000b0e7      4889cb         mov rbx, rcx
0x0000b0ea      4c898c248800.  mov qword [rsp + 0x88], r9
0x0000b0f2      4889442438     mov qword [rsp + 0x38], rax
0x0000b0f7      448854247f     mov byte [rsp + 0x7f], r10b
0x0000b0fc      4c89bc248000.  mov qword [rsp + 0x80], r15
0x0000b104      4c89742440     mov qword [rsp + 0x40], r14
0x0000b109      4c896c2470     mov qword [rsp + 0x70], r13
0x0000b10e      4c895c2430     mov qword [rsp + 0x30], r11
0x0000b113      488b442410     mov rax, qword [rsp + 0x10]
0x0000b118      4c8d741d00     lea r14, [rbp + rbx]
0x0000b11d      488b542430     mov rdx, qword [rsp + 0x30]
0x0000b122      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0000b127      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000b12c      4e8d2c30       lea r13, [rax + r14]
0x0000b130      4c29f2         sub rdx, r14
0x0000b133      4c89ee         mov rsi, r13
0x0000b136      e8a5500000     call sym.rpl_mbrtowc
0x0000b13b      4885c0         test rax, rax
0x0000b13e      4989c7         mov r15, rax
0x0000b141      744e           je 0xb191
0x0000b143      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000b147      0f8418060000   je 0xb765
0x0000b14d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000b151      0f849a050000   je 0xb6f1
0x0000b157      837c240802     cmp dword [rsp + 8], 2
0x0000b15c      0f94c0         sete al
0x0000b15f      2244240f       and al, byte [rsp + 0xf]
0x0000b163      0f8597010000   jne 0xb300
0x0000b169      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x0000b170      e82b78ffff     call sym.imp.iswprint
0x0000b175      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000b17a      85c0           test eax, eax
0x0000b17c      b800000000     mov eax, 0
0x0000b181      440f44e0       cmove r12d, eax
0x0000b185      4c01fb         add rbx, r15
0x0000b188      e80378ffff     call sym.imp.mbsinit
0x0000b18d      85c0           test eax, eax
0x0000b18f      7482           je 0xb113
0x0000b191      4489e2         mov edx, r12d
0x0000b194      4889df         mov rdi, rbx
0x0000b197      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000b19d      83f201         xor edx, 1
0x0000b1a0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000b1a5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000b1ab      2254240d       and dl, byte [rsp + 0xd]
0x0000b1af      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x0000b1b7      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000b1bc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000b1c1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000b1c6      4883ff01       cmp rdi, 1
0x0000b1ca      0f86fb050000   jbe 0xb7cb
0x0000b1d0      4889f9         mov rcx, rdi
0x0000b1d3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x0000b1d5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000b1db      4801e9         add rcx, rbp
0x0000b1de      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000b1e3      e9b6000000     jmp 0xb29e
0x0000b1e8      0f1f84000000.  nop dword [rax + rax]
0x0000b1f0      837c240802     cmp dword [rsp + 8], 2
0x0000b1f5      0f94c0         sete al
0x0000b1f8      4584c9         test r9b, r9b
0x0000b1fb      0f85af040000   jne 0xb6b0
0x0000b201      4489c6         mov esi, r8d
0x0000b204      83f601         xor esi, 1
0x0000b207      4020f0         and al, sil
0x0000b20a      742f           je 0xb23b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000b20c      4d39fd         cmp r13, r15
0x0000b20f      7605           jbe 0xb216
0x0000b211      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000b216      498d7701       lea rsi, [r15 + 1]
0x0000b21a      4939f5         cmp r13, rsi
0x0000b21d      7606           jbe 0xb225                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000b21f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000b225      498d7702       lea rsi, [r15 + 2]
0x0000b229      4939f5         cmp r13, rsi
0x0000b22c      7606           jbe 0xb234
0x0000b22e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000b234      4983c703       add r15, 3
0x0000b238      4189c0         mov r8d, eax
0x0000b23b      4d39fd         cmp r13, r15
0x0000b23e      7605           jbe 0xb245
0x0000b240      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000b245      498d4701       lea rax, [r15 + 1]
0x0000b249      4939c5         cmp r13, rax
0x0000b24c      760d           jbe 0xb25b
0x0000b24e      89d8           mov eax, ebx
0x0000b250      c0e806         shr al, 6
0x0000b253      83c030         add eax, 0x30
0x0000b256      4388443e01     mov byte [r14 + r15 + 1], al
0x0000b25b      498d4702       lea rax, [r15 + 2]
0x0000b25f      4939c5         cmp r13, rax
0x0000b262      7610           jbe 0xb274
0x0000b264      89d8           mov eax, ebx
0x0000b266      c0e803         shr al, 3
0x0000b269      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000b26c      83c030         add eax, 0x30
0x0000b26f      4388443e02     mov byte [r14 + r15 + 2], al
0x0000b274      83e307         and ebx, 7
0x0000b277      4883c501       add rbp, 1
0x0000b27b      4983c703       add r15, 3
0x0000b27f      83c330         add ebx, 0x30
0x0000b282      4839cd         cmp rbp, rcx
0x0000b285      0f83e5f7ffff   jae 0xaa70
0x0000b28b      89d6           mov esi, edx
0x0000b28d      4d39fd         cmp r13, r15
0x0000b290      7604           jbe 0xb296
0x0000b292      43881c3e       mov byte [r14 + r15], bl
0x0000b296      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000b29a      4983c701       add r15, 1
0x0000b29e      84d2           test dl, dl
0x0000b2a0      0f854affffff   jne 0xb1f0
0x0000b2a6      89f0           mov eax, esi
0x0000b2a8      83f001         xor eax, 1
0x0000b2ab      4421c0         and eax, r8d
0x0000b2ae      4584d2         test r10b, r10b
0x0000b2b1      740e           je 0xb2c1
0x0000b2b3      4d39fd         cmp r13, r15
0x0000b2b6      7605           jbe 0xb2bd
0x0000b2b8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000b2bd      4983c701       add r15, 1
0x0000b2c1      4883c501       add rbp, 1
0x0000b2c5      4839cd         cmp rbp, rcx
0x0000b2c8      0f837ef7ffff   jae 0xaa4c
0x0000b2ce      84c0           test al, al
0x0000b2d0      0f84f8030000   je 0xb6ce
0x0000b2d6      4d39fd         cmp r13, r15
0x0000b2d9      7605           jbe 0xb2e0
0x0000b2db      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000b2e0      498d4701       lea rax, [r15 + 1]
0x0000b2e4      4939c5         cmp r13, rax
0x0000b2e7      7606           jbe 0xb2ef
0x0000b2e9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000b2ef      4983c702       add r15, 2
0x0000b2f3      4531d2         xor r10d, r10d
0x0000b2f6      4531c0         xor r8d, r8d
0x0000b2f9      eb92           jmp 0xb28d
0x0000b2fb      0f1f440000     nop dword [rax + rax]
0x0000b300      4983ff01       cmp r15, 1
0x0000b304      0f845ffeffff   je 0xb169
0x0000b30a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000b30f      4a8d0c3f       lea rcx, [rdi + r15]
0x0000b313      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x0000b318      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000b31c      eb0f           jmp 0xb32d
0x0000b31e      6690           nop
0x0000b320      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x0000b324      4939d0         cmp r8, rdx
0x0000b327      0f843cfeffff   je 0xb169
0x0000b32d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x0000b330      83e95b         sub ecx, 0x5b
0x0000b333      80f921         cmp cl, 0x21
0x0000b336      77e8           ja 0xb320                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x0000b338      be01000000     mov esi, 1
0x0000b33d      48d3e6         shl rsi, cl
0x0000b340      4889f1         mov rcx, rsi
0x0000b343      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000b34d      4885f1         test rcx, rsi
0x0000b350      74ce           je 0xb320
0x0000b352      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000b357      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000b35c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x0000b361      c74424080200.  mov dword [rsp + 8], 2
0x0000b369      807c240d00     cmp byte [rsp + 0xd], 0
0x0000b36e      7410           je 0xb380
0x0000b370      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x0000b372      b804000000     mov eax, 4
0x0000b377      0f44442408     cmove eax, dword [rsp + 8]
0x0000b37c      89442408       mov dword [rsp + 8], eax
0x0000b380      4883ec08       sub rsp, 8
0x0000b384      4889e9         mov rcx, rbp
0x0000b387      4c89ee         mov rsi, r13
0x0000b38a      ff742468       push qword [rsp + 0x68]
0x0000b38e      ff742478       push qword [rsp + 0x78]
0x0000b392      4c89f7         mov rdi, r14
0x0000b395      6a00           push 0
0x0000b397      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000b39f      448b442428     mov r8d, dword [rsp + 0x28]
0x0000b3a4      488b542430     mov rdx, qword [rsp + 0x30]
0x0000b3a9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000b3ad      e82ef4ffff     call sym.quotearg_buffer_restyled
0x0000b3b2      4883c420       add rsp, 0x20
0x0000b3b6      4989c7         mov r15, rax
0x0000b3b9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x0000b3c1      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000b3ca      4c89f8         mov rax, r15
0x0000b3cd      0f8500060000   jne 0xb9d3
0x0000b3d3      4881c4b80000.  add rsp, 0xb8
0x0000b3da      5b             pop rbx
0x0000b3db      5d             pop rbp
0x0000b3dc      415c           pop r12
0x0000b3de      415d           pop r13
0x0000b3e0      415e           pop r14
0x0000b3e2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x0000b3e4      c3             ret
0x0000b3e5      0f1f00         nop dword [rax]
0x0000b3e8      4c89dd         mov rbp, r11
0x0000b3eb      e979ffffff     jmp 0xb369
0x0000b3f0      4d39fd         cmp r13, r15
0x0000b3f3      7605           jbe 0xb3fa
0x0000b3f5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000b3fa      498d4701       lea rax, [r15 + 1]
0x0000b3fe      4939c5         cmp r13, rax
0x0000b401      7606           jbe 0xb409
0x0000b403      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x0000b409      498d4702       lea rax, [r15 + 2]
0x0000b40d      4939c5         cmp r13, rax
0x0000b410      0f86ec050000   jbe 0xba02
0x0000b416      4c89ea         mov rdx, r13
0x0000b419      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000b41f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000b424      e9d9fbffff     jmp 0xb002
0x0000b429      4489e0         mov eax, r12d
0x0000b42c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x0000b431      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x0000b434      e900f6ffff     jmp 0xaa39                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x0000b439      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000b43f      e9c5f9ffff     jmp 0xae09
0x0000b444      85db           test ebx, ebx
0x0000b446      0f8527f4ffff   jne 0xa873
0x0000b44c      c644240d01     mov byte [rsp + 0xd], 1
0x0000b451      4d85ed         test r13, r13
0x0000b454      0f8590050000   jne 0xb9ea
0x0000b45a      488d05936001.  lea rax, [0x000214f4]                   ; "'"
0x0000b461      48c744245000.  mov qword [rsp + 0x50], 0
0x0000b46a      c644240e01     mov byte [rsp + 0xe], 1
0x0000b46f      c644247c00     mov byte [rsp + 0x7c], 0
0x0000b474      4531e4         xor r12d, r12d
0x0000b477      c644240f00     mov byte [rsp + 0xf], 0
0x0000b47c      48c744241801.  mov qword [rsp + 0x18], 1
0x0000b485      4889442448     mov qword [rsp + 0x48], rax
0x0000b48a      41bf01000000   mov r15d, 1
0x0000b490      c74424080200.  mov dword [rsp + 8], 2
0x0000b498      e916f4ffff     jmp 0xa8b3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000b49d      0f1f00         nop dword [rax]
0x0000b4a0      85db           test ebx, ebx
0x0000b4a2      0f85f5030000   jne 0xb89d
0x0000b4a8      4d85ed         test r13, r13
0x0000b4ab      0f8425020000   je 0xb6d6
0x0000b4b1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x0000b4b5      c644240e01     mov byte [rsp + 0xe], 1
0x0000b4ba      4531e4         xor r12d, r12d
0x0000b4bd      c644247c00     mov byte [rsp + 0x7c], 0
0x0000b4c2      48c744245000.  mov qword [rsp + 0x50], 0
0x0000b4cb      488d05f96501.  lea rax, str.l______l                   ; 0x21acb ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000b4d2      c644240f00     mov byte [rsp + 0xf], 0
0x0000b4d7      c644240d01     mov byte [rsp + 0xd], 1
0x0000b4dc      48c744241801.  mov qword [rsp + 0x18], 1
0x0000b4e5      41bf01000000   mov r15d, 1
0x0000b4eb      4889442448     mov qword [rsp + 0x48], rax
0x0000b4f0      e9bef3ffff     jmp 0xa8b3
0x0000b4f5      488d05cf6501.  lea rax, str.l______l                   ; 0x21acb ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000b4fc      c644240e01     mov byte [rsp + 0xe], 1
0x0000b501      c644247c00     mov byte [rsp + 0x7c], 0
0x0000b506      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x0000b509      48c744245000.  mov qword [rsp + 0x50], 0
0x0000b512      c644240f01     mov byte [rsp + 0xf], 1
0x0000b517      c644240d01     mov byte [rsp + 0xd], 1
0x0000b51c      48c744241801.  mov qword [rsp + 0x18], 1
0x0000b525      4531ff         xor r15d, r15d
0x0000b528      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000b52d      c74424080500.  mov dword [rsp + 8], 5
0x0000b535      e979f3ffff     jmp 0xa8b3
0x0000b53a      c644240e01     mov byte [rsp + 0xe], 1
0x0000b53f      c644247c00     mov byte [rsp + 0x7c], 0
0x0000b544      4531e4         xor r12d, r12d
0x0000b547      48c744245000.  mov qword [rsp + 0x50], 0
0x0000b550      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x0000b555      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x0000b558      c644240d01     mov byte [rsp + 0xd], 1
0x0000b55d      48c744241800.  mov qword [rsp + 0x18], 0
0x0000b566      48c744244800.  mov qword [rsp + 0x48], 0
0x0000b56f      e93ff3ffff     jmp 0xa8b3
0x0000b574      837c24080a     cmp dword [rsp + 8], 0xa
0x0000b579      7456           je 0xb5d1
0x0000b57b      488d354b6501.  lea rsi, [0x00021acd]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x0000b582      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x0000b584      ba05000000     mov edx, 5
0x0000b589      e8826fffff     call sym.imp.dcgettext
0x0000b58e      4889c1         mov rcx, rax
0x0000b591      4889442468     mov qword [rsp + 0x68], rax
0x0000b596      488d05306501.  lea rax, [0x00021acd]                   ; "`"
0x0000b59d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x0000b5a0      0f8498030000   je 0xb93e
0x0000b5a6      488d35475f01.  lea rsi, [0x000214f4]                   ; "'"
0x0000b5ad      31ff           xor edi, edi
0x0000b5af      ba05000000     mov edx, 5
0x0000b5b4      e8576fffff     call sym.imp.dcgettext
0x0000b5b9      4889c1         mov rcx, rax
0x0000b5bc      4889442460     mov qword [rsp + 0x60], rax
0x0000b5c1      488d052c5f01.  lea rax, [0x000214f4]                   ; "'"
0x0000b5c8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000b5cb      0f8483030000   je 0xb954
0x0000b5d1      4531ff         xor r15d, r15d
0x0000b5d4      85db           test ebx, ebx
0x0000b5d6      0f84c1010000   je 0xb79d
0x0000b5dc      85db           test ebx, ebx
0x0000b5de      488b5c2460     mov rbx, qword [rsp + 0x60]
0x0000b5e3      0f9544240f     setne byte [rsp + 0xf]
0x0000b5e8      4531e4         xor r12d, r12d
0x0000b5eb      4889df         mov rdi, rbx
0x0000b5ee      e83d6fffff     call sym.imp.strlen
0x0000b5f3      48895c2448     mov qword [rsp + 0x48], rbx
0x0000b5f8      4889442418     mov qword [rsp + 0x18], rax
0x0000b5fd      c644240e01     mov byte [rsp + 0xe], 1
0x0000b602      c644247c00     mov byte [rsp + 0x7c], 0
0x0000b607      48c744245000.  mov qword [rsp + 0x50], 0
0x0000b610      c644240d01     mov byte [rsp + 0xd], 1
0x0000b615      e999f2ffff     jmp 0xa8b3
0x0000b61a      c644240e01     mov byte [rsp + 0xe], 1
0x0000b61f      c644247c00     mov byte [rsp + 0x7c], 0
0x0000b624      4531e4         xor r12d, r12d
0x0000b627      48c744245000.  mov qword [rsp + 0x50], 0
0x0000b630      c644240f00     mov byte [rsp + 0xf], 0
0x0000b635      4531ff         xor r15d, r15d
0x0000b638      c644240d00     mov byte [rsp + 0xd], 0
0x0000b63d      48c744241800.  mov qword [rsp + 0x18], 0
0x0000b646      48c744244800.  mov qword [rsp + 0x48], 0
0x0000b64f      e95ff2ffff     jmp 0xa8b3
0x0000b654      c644240e01     mov byte [rsp + 0xe], 1
0x0000b659      c644247c00     mov byte [rsp + 0x7c], 0
0x0000b65e      4531e4         xor r12d, r12d
0x0000b661      48c744245000.  mov qword [rsp + 0x50], 0
0x0000b66a      c644240f01     mov byte [rsp + 0xf], 1
0x0000b66f      c644240d01     mov byte [rsp + 0xd], 1
0x0000b674      e91af2ffff     jmp 0xa893
0x0000b679      4d39fd         cmp r13, r15
0x0000b67c      7605           jbe 0xb683
0x0000b67e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x0000b683      488d4102       lea rax, [rcx + 2]
0x0000b687      4939c5         cmp r13, rax
0x0000b68a      7606           jbe 0xb692
0x0000b68c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x0000b692      4489e0         mov eax, r12d
0x0000b695      4c8d7903       lea r15, [rcx + 3]
0x0000b699      4531e4         xor r12d, r12d
0x0000b69c      bb30000000     mov ebx, 0x30                           ; '0'
0x0000b6a1      e962f3ffff     jmp 0xaa08
0x0000b6a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b6b0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000b6b5      4c89dd         mov rbp, r11
0x0000b6b8      885c240d       mov byte [rsp + 0xd], bl
0x0000b6bc      e9a8fcffff     jmp 0xb369
0x0000b6c1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000b6c6      4531e4         xor r12d, r12d
0x0000b6c9      e902fbffff     jmp 0xb1d0
0x0000b6ce      4531d2         xor r10d, r10d
0x0000b6d1      e9b7fbffff     jmp 0xb28d
0x0000b6d6      48c744245000.  mov qword [rsp + 0x50], 0
0x0000b6df      c644240e01     mov byte [rsp + 0xe], 1
0x0000b6e4      4531e4         xor r12d, r12d
0x0000b6e7      c644247c00     mov byte [rsp + 0x7c], 0
0x0000b6ec      e9dafdffff     jmp 0xb4cb
0x0000b6f1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000b6f6      4c89f6         mov rsi, r14
0x0000b6f9      4c89e9         mov rcx, r13
0x0000b6fc      4889d8         mov rax, rbx
0x0000b6ff      4889df         mov rdi, rbx
0x0000b702      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000b708      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000b70d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x0000b715      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x0000b718      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000b71e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x0000b726      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000b72b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000b730      7326           jae 0xb758
0x0000b732      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000b735      7510           jne 0xb747
0x0000b737      eb1f           jmp 0xb758
0x0000b739      0f1f80000000.  nop dword [rax]
0x0000b740      41803c0100     cmp byte [r9 + rax], 0
0x0000b745      740e           je 0xb755
0x0000b747      4883c001       add rax, 1
0x0000b74b      488d540500     lea rdx, [rbp + rax]
0x0000b750      4939d3         cmp r11, rdx
0x0000b753      77eb           ja 0xb740
0x0000b755      4889c7         mov rdi, rax
0x0000b758      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000b75d      4531e4         xor r12d, r12d
0x0000b760      e961faffff     jmp 0xb1c6
0x0000b765      4889df         mov rdi, rbx
0x0000b768      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000b76e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000b773      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000b779      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x0000b781      4531e4         xor r12d, r12d
0x0000b784      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000b789      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000b78e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000b793      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000b798      e929faffff     jmp 0xb1c6
0x0000b79d      488b542468     mov rdx, qword [rsp + 0x68]
0x0000b7a2      0fb602         movzx eax, byte [rdx]
0x0000b7a5      84c0           test al, al
0x0000b7a7      0f842ffeffff   je 0xb5dc
0x0000b7ad      0f1f00         nop dword [rax]
0x0000b7b0      4d39fd         cmp r13, r15
0x0000b7b3      7604           jbe 0xb7b9
0x0000b7b5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x0000b7b9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000b7bd      420fb6043a     movzx eax, byte [rdx + r15]
0x0000b7c2      84c0           test al, al
0x0000b7c4      75ea           jne 0xb7b0
0x0000b7c6      e911feffff     jmp 0xb5dc
0x0000b7cb      89d0           mov eax, edx
0x0000b7cd      e955f5ffff     jmp 0xad27
0x0000b7d2      0fb61c08       movzx ebx, byte [rax + rcx]
0x0000b7d6      80fb3e         cmp bl, 0x3e
0x0000b7d9      0f8771f8ffff   ja 0xb050
0x0000b7df      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x0000b7e9      480fa3d8       bt rax, rbx
0x0000b7ed      0f835df8ffff   jae 0xb050
0x0000b7f3      807c240f00     cmp byte [rsp + 0xf], 0
0x0000b7f8      0f85e4010000   jne 0xb9e2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000b7fe      4d39fd         cmp r13, r15
0x0000b801      7605           jbe 0xb808
0x0000b803      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x0000b808      498d4701       lea rax, [r15 + 1]
0x0000b80c      4939c5         cmp r13, rax
0x0000b80f      7606           jbe 0xb817
0x0000b811      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x0000b817      498d4702       lea rax, [r15 + 2]
0x0000b81b      4939c5         cmp r13, rax
0x0000b81e      7606           jbe 0xb826
0x0000b820      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x0000b826      498d4703       lea rax, [r15 + 3]
0x0000b82a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000b82d      7606           jbe 0xb835
0x0000b82f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x0000b835      4983c704       add r15, 4
0x0000b839      31d2           xor edx, edx
0x0000b83b      4531e4         xor r12d, r12d
0x0000b83e      31c0           xor eax, eax
0x0000b840      4889cd         mov rbp, rcx
0x0000b843      e9c0f1ffff     jmp 0xaa08
0x0000b848      85db           test ebx, ebx
0x0000b84a      0f8488010000   je 0xb9d8
0x0000b850      488d059d5c01.  lea rax, [0x000214f4]                   ; "'"
0x0000b857      c644240e01     mov byte [rsp + 0xe], 1
0x0000b85c      c644247c00     mov byte [rsp + 0x7c], 0
0x0000b861      4531e4         xor r12d, r12d
0x0000b864      48c744245000.  mov qword [rsp + 0x50], 0
0x0000b86d      c644240f01     mov byte [rsp + 0xf], 1
0x0000b872      c644240d00     mov byte [rsp + 0xd], 0
0x0000b877      48c744241801.  mov qword [rsp + 0x18], 1
0x0000b880      4531ff         xor r15d, r15d
0x0000b883      4889442448     mov qword [rsp + 0x48], rax
0x0000b888      e926f0ffff     jmp 0xa8b3
0x0000b88d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x0000b890      4c89dd         mov rbp, r11
0x0000b893      0fb644240f     movzx eax, byte [rsp + 0xf]
0x0000b898      e9ccfaffff     jmp 0xb369
0x0000b89d      488d05276201.  lea rax, str.l______l                   ; 0x21acb ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000b8a4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x0000b8a9      c644247c00     mov byte [rsp + 0x7c], 0
0x0000b8ae      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x0000b8b1      48c744245000.  mov qword [rsp + 0x50], 0
0x0000b8ba      c644240f01     mov byte [rsp + 0xf], 1
0x0000b8bf      c644240d01     mov byte [rsp + 0xd], 1
0x0000b8c4      48c744241801.  mov qword [rsp + 0x18], 1
0x0000b8cd      4531ff         xor r15d, r15d
0x0000b8d0      4889442448     mov qword [rsp + 0x48], rax
0x0000b8d5      e9d9efffff     jmp 0xa8b3
0x0000b8da      89d0           mov eax, edx
0x0000b8dc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x0000b8e1      4885db         test rbx, rbx
0x0000b8e4      742c           je 0xb912
0x0000b8e6      84c0           test al, al
0x0000b8e8      7428           je 0xb912
0x0000b8ea      0fb60b         movzx ecx, byte [rbx]
0x0000b8ed      4889d8         mov rax, rbx
0x0000b8f0      84c9           test cl, cl
0x0000b8f2      741e           je 0xb912
0x0000b8f4      4c89fa         mov rdx, r15
0x0000b8f7      4c29f8         sub rax, r15
0x0000b8fa      4939d5         cmp r13, rdx
0x0000b8fd      7604           jbe 0xb903
0x0000b8ff      41880c16       mov byte [r14 + rdx], cl
0x0000b903      4883c201       add rdx, 1
0x0000b907      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000b90b      84c9           test cl, cl
0x0000b90d      75eb           jne 0xb8fa
0x0000b90f      4989d7         mov r15, rdx
0x0000b912      4d39fd         cmp r13, r15
0x0000b915      0f869efaffff   jbe 0xb3b9
0x0000b91b      43c6043e00     mov byte [r14 + r15], 0
0x0000b920      e994faffff     jmp 0xb3b9
0x0000b925      837c240802     cmp dword [rsp + 8], 2
0x0000b92a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000b92f      4c89dd         mov rbp, r11
0x0000b932      0f94c0         sete al
0x0000b935      885c240d       mov byte [rsp + 0xd], bl
0x0000b939      e92bfaffff     jmp 0xb369
0x0000b93e      8b742408       mov esi, dword [rsp + 8]
0x0000b942      4889cf         mov rdi, rcx
0x0000b945      e8a6edffff     call sym.gettext_quote.part.1
0x0000b94a      4889442468     mov qword [rsp + 0x68], rax
0x0000b94f      e952fcffff     jmp 0xb5a6
0x0000b954      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x0000b958      4889cf         mov rdi, rcx
0x0000b95b      e890edffff     call sym.gettext_quote.part.1
0x0000b960      4889442460     mov qword [rsp + 0x60], rax
0x0000b965      e967fcffff     jmp 0xb5d1
0x0000b96a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000b96f      4c89dd         mov rbp, r11
0x0000b972      89d0           mov eax, edx
0x0000b974      885c240d       mov byte [rsp + 0xd], bl
0x0000b978      e9ecf9ffff     jmp 0xb369
0x0000b97d      4883ec08       sub rsp, 8
0x0000b981      41b805000000   mov r8d, 5
0x0000b987      4c89d9         mov rcx, r11
0x0000b98a      ff742468       push qword [rsp + 0x68]
0x0000b98e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x0000b992      4c89f7         mov rdi, r14
0x0000b995      ff742438       push qword [rsp + 0x38]
0x0000b999      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000b9a1      488b542430     mov rdx, qword [rsp + 0x30]
0x0000b9a6      488b742470     mov rsi, qword [rsp + 0x70]
0x0000b9ab      e830eeffff     call sym.quotearg_buffer_restyled
0x0000b9b0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x0000b9b4      4989c7         mov r15, rax
0x0000b9b7      e9fdf9ffff     jmp 0xb3b9
0x0000b9bc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x0000b9c1      e916ffffff     jmp 0xb8dc
0x0000b9c6      c74424080200.  mov dword [rsp + 8], 2
0x0000b9ce      e996f9ffff     jmp 0xb369
0x0000b9d3      e8886bffff     call sym.imp.__stack_chk_fail
0x0000b9d8      c644240d00     mov byte [rsp + 0xd], 0
0x0000b9dd      e96ffaffff     jmp 0xb451
0x0000b9e2      4c89dd         mov rbp, r11
0x0000b9e5      e996f9ffff     jmp 0xb380
0x0000b9ea      c644240e01     mov byte [rsp + 0xe], 1
0x0000b9ef      31c0           xor eax, eax
0x0000b9f1      4531e4         xor r12d, r12d
0x0000b9f4      48c744245000.  mov qword [rsp + 0x50], 0
0x0000b9fd      e9a2f5ffff     jmp 0xafa4
0x0000ba02      4c89ea         mov rdx, r13
0x0000ba05      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000ba0a      e9f3f5ffff     jmp 0xb002
0x0000ba0f      e8ec69ffff     call sym.imp.abort
0x0000ba14      6690           nop
0x0000ba16      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x0000ba20      4157           push r15
0x0000ba22      4156           push r14
0x0000ba24      4c63ff         movsxd r15, edi
0x0000ba27      4155           push r13
0x0000ba29      4154           push r12
0x0000ba2b      4989d6         mov r14, rdx
0x0000ba2e      55             push rbp
0x0000ba2f      53             push rbx
0x0000ba30      4889cd         mov rbp, rcx
0x0000ba33      4883ec28       sub rsp, 0x28
0x0000ba37      4889742408     mov qword [rsp + 8], rsi
0x0000ba3c      e8cf69ffff     call sym.imp.__errno_location
0x0000ba41      4989c5         mov r13, rax
0x0000ba44      8b00           mov eax, dword [rax]
0x0000ba46      4585ff         test r15d, r15d
0x0000ba49      488b1d30c621.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x228080:8]=0x228090 obj.slotvec0
0x0000ba50      89442418       mov dword [rsp + 0x18], eax
0x0000ba54      0f8867010000   js 0xbbc1
0x0000ba5a      44393d17c621.  cmp dword [obj.nslots], r15d            ; [0x228078:4]=1
0x0000ba61      7f62           jg 0xbac5
0x0000ba63      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000ba6a      0f8456010000   je 0xbbc6
0x0000ba70      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x0000ba74      488d0515c621.  lea rax, obj.slotvec0                   ; 0x228090
0x0000ba7b      4963f4         movsxd rsi, r12d
0x0000ba7e      48c1e604       shl rsi, 4
0x0000ba82      4839c3         cmp rbx, rax
0x0000ba85      0f8415010000   je 0xbba0
0x0000ba8b      4889df         mov rdi, rbx
0x0000ba8e      e8ad0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x0000ba93      4889c3         mov rbx, rax
0x0000ba96      488905e3c521.  mov qword [obj.slotvec], rax            ; [0x228080:8]=0x228090 obj.slotvec0
0x0000ba9d      48633dd4c521.  movsxd rdi, dword [obj.nslots]          ; [0x228078:4]=1
0x0000baa4      4489e2         mov edx, r12d
0x0000baa7      31f6           xor esi, esi
0x0000baa9      29fa           sub edx, edi
0x0000baab      48c1e704       shl rdi, 4
0x0000baaf      4863d2         movsxd rdx, edx
0x0000bab2      4801df         add rdi, rbx
0x0000bab5      48c1e204       shl rdx, 4
0x0000bab9      e8626bffff     call sym.imp.memset
0x0000babe      448925b3c521.  mov dword [obj.nslots], r12d            ; [0x228078:4]=1
0x0000bac5      8b4504         mov eax, dword [rbp + 4]
0x0000bac8      49c1e704       shl r15, 4
0x0000bacc      4883ec08       sub rsp, 8
0x0000bad0      4c01fb         add rbx, r15
0x0000bad3      4c8d7d08       lea r15, [rbp + 8]
0x0000bad7      448b4500       mov r8d, dword [rbp]
0x0000badb      4c8b1b         mov r11, qword [rbx]
0x0000bade      4c8b6308       mov r12, qword [rbx + 8]
0x0000bae2      4c89f1         mov rcx, r14
0x0000bae5      83c801         or eax, 1
0x0000bae8      89442424       mov dword [rsp + 0x24], eax
0x0000baec      ff7530         push qword [rbp + 0x30]
0x0000baef      4189c1         mov r9d, eax
0x0000baf2      ff7528         push qword [rbp + 0x28]
0x0000baf5      4157           push r15
0x0000baf7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000bafa      488b542428     mov rdx, qword [rsp + 0x28]
0x0000baff      4c89e7         mov rdi, r12
0x0000bb02      4c895c2430     mov qword [rsp + 0x30], r11
0x0000bb07      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000bb0c      4883c420       add rsp, 0x20
0x0000bb10      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x0000bb15      4939c3         cmp r11, rax
0x0000bb18      7767           ja 0xbb81
0x0000bb1a      488d7001       lea rsi, [rax + 1]
0x0000bb1e      488d059bc621.  lea rax, obj.slot0                      ; 0x2281c0
0x0000bb25      4939c4         cmp r12, rax
0x0000bb28      488933         mov qword [rbx], rsi
0x0000bb2b      7412           je 0xbb3f
0x0000bb2d      4c89e7         mov rdi, r12
0x0000bb30      4889742410     mov qword [rsp + 0x10], rsi
0x0000bb35      e8d66effff     call sym..plt.got
0x0000bb3a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000bb3f      4889f7         mov rdi, rsi
0x0000bb42      4889742410     mov qword [rsp + 0x10], rsi
0x0000bb47      e8940e0000     call sym.xmalloc
0x0000bb4c      4883ec08       sub rsp, 8
0x0000bb50      48894308       mov qword [rbx + 8], rax
0x0000bb54      448b4500       mov r8d, dword [rbp]
0x0000bb58      ff7530         push qword [rbp + 0x30]
0x0000bb5b      ff7528         push qword [rbp + 0x28]
0x0000bb5e      4c89f1         mov rcx, r14
0x0000bb61      4157           push r15
0x0000bb63      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x0000bb68      4889c7         mov rdi, rax
0x0000bb6b      488b542428     mov rdx, qword [rsp + 0x28]
0x0000bb70      488b742430     mov rsi, qword [rsp + 0x30]
0x0000bb75      4989c4         mov r12, rax
0x0000bb78      e863ecffff     call sym.quotearg_buffer_restyled
0x0000bb7d      4883c420       add rsp, 0x20
0x0000bb81      8b442418       mov eax, dword [rsp + 0x18]
0x0000bb85      41894500       mov dword [r13], eax
0x0000bb89      4883c428       add rsp, 0x28
0x0000bb8d      4c89e0         mov rax, r12
0x0000bb90      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x0000bb91      5d             pop rbp
0x0000bb92      415c           pop r12
0x0000bb94      415d           pop r13
0x0000bb96      415e           pop r14
0x0000bb98      415f           pop r15
0x0000bb9a      c3             ret
0x0000bb9b      0f1f440000     nop dword [rax + rax]
0x0000bba0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x0000bba2      e8990e0000     call sym.xrealloc
0x0000bba7      660f6f05e1c4.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000bbaf      4889c3         mov rbx, rax
0x0000bbb2      488905c7c421.  mov qword [obj.slotvec], rax            ; [0x228080:8]=0x228090 obj.slotvec0
0x0000bbb9      0f1100         movups xmmword [rax], xmm0
0x0000bbbc      e9dcfeffff     jmp 0xba9d
0x0000bbc1      e83a68ffff     call sym.imp.abort
0x0000bbc6      e865100000     call sym.xalloc_die
0x0000bbcb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x0000bbd0      4154           push r12
0x0000bbd2      55             push rbp
0x0000bbd3      53             push rbx
0x0000bbd4      4889fb         mov rbx, rdi
0x0000bbd7      e83468ffff     call sym.imp.__errno_location
0x0000bbdc      448b20         mov r12d, dword [rax]
0x0000bbdf      4889c5         mov rbp, rax
0x0000bbe2      488d05d7c621.  lea rax, obj.default_quoting_options    ; 0x2282c0
0x0000bbe9      4885db         test rbx, rbx
0x0000bbec      be38000000     mov esi, 0x38                           ; '8'
0x0000bbf1      480f44d8       cmove rbx, rax
0x0000bbf5      4889df         mov rdi, rbx
0x0000bbf8      e8e30f0000     call sym.xmemdup
0x0000bbfd      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x0000bc01      5b             pop rbx
0x0000bc02      5d             pop rbp
0x0000bc03      415c           pop r12
0x0000bc05      c3             ret
0x0000bc06      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x0000bc10      488d05a9c621.  lea rax, obj.default_quoting_options    ; 0x2282c0
0x0000bc17      4885ff         test rdi, rdi
0x0000bc1a      480f44f8       cmove rdi, rax
0x0000bc1e      8b07           mov eax, dword [rdi]
0x0000bc20      c3             ret
0x0000bc21      0f1f440000     nop dword [rax + rax]
0x0000bc26      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x0000bc30      488d0589c621.  lea rax, obj.default_quoting_options    ; 0x2282c0
0x0000bc37      4885ff         test rdi, rdi
0x0000bc3a      480f44f8       cmove rdi, rax
0x0000bc3e      8937           mov dword [rdi], esi
0x0000bc40      c3             ret
0x0000bc41      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000bc46      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x0000bc50      488d0569c621.  lea rax, obj.default_quoting_options    ; 0x2282c0
0x0000bc57      4885ff         test rdi, rdi
0x0000bc5a      89f1           mov ecx, esi
0x0000bc5c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x0000bc60      89f0           mov eax, esi
0x0000bc62      83e11f         and ecx, 0x1f
0x0000bc65      c0e805         shr al, 5
0x0000bc68      0fb6c0         movzx eax, al
0x0000bc6b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x0000bc70      8b37           mov esi, dword [rdi]
0x0000bc72      89f0           mov eax, esi
0x0000bc74      d3e8           shr eax, cl
0x0000bc76      31c2           xor edx, eax
0x0000bc78      83e001         and eax, 1
0x0000bc7b      83e201         and edx, 1
0x0000bc7e      d3e2           shl edx, cl
0x0000bc80      31f2           xor edx, esi
0x0000bc82      8917           mov dword [rdi], edx
0x0000bc84      c3             ret
0x0000bc85      90             nop
0x0000bc86      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x0000bc90      488d0529c621.  lea rax, obj.default_quoting_options    ; 0x2282c0
0x0000bc97      4885ff         test rdi, rdi
0x0000bc9a      480f44f8       cmove rdi, rax
0x0000bc9e      8b4704         mov eax, dword [rdi + 4]
0x0000bca1      897704         mov dword [rdi + 4], esi
0x0000bca4      c3             ret
0x0000bca5      90             nop
0x0000bca6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x0000bcb0      488d0509c621.  lea rax, obj.default_quoting_options    ; 0x2282c0
0x0000bcb7      4885ff         test rdi, rdi
0x0000bcba      480f44f8       cmove rdi, rax
0x0000bcbe      4885f6         test rsi, rsi
0x0000bcc1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000bcc7      740e           je 0xbcd7
0x0000bcc9      4885d2         test rdx, rdx
0x0000bccc      7409           je 0xbcd7
0x0000bcce      48897728       mov qword [rdi + 0x28], rsi
0x0000bcd2      48895730       mov qword [rdi + 0x30], rdx
0x0000bcd6      c3             ret
0x0000bcd7      4883ec08       sub rsp, 8
0x0000bcdb      e82067ffff     call sym.imp.abort
;-- quotearg_buffer:
0x0000bce0      4157           push r15
0x0000bce2      4156           push r14
0x0000bce4      488d05d5c521.  lea rax, obj.default_quoting_options    ; 0x2282c0
0x0000bceb      4155           push r13
0x0000bced      4154           push r12
0x0000bcef      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x0000bcf2      55             push rbp
0x0000bcf3      53             push rbx
0x0000bcf4      4c89c3         mov rbx, r8
0x0000bcf7      4989f6         mov r14, rsi
0x0000bcfa      4989d7         mov r15, rdx
0x0000bcfd      4883ec18       sub rsp, 0x18
0x0000bd01      4d85c0         test r8, r8
0x0000bd04      480f44d8       cmove rbx, rax
0x0000bd08      48894c2408     mov qword [rsp + 8], rcx
0x0000bd0d      e8fe66ffff     call sym.imp.__errno_location
0x0000bd12      448b20         mov r12d, dword [rax]
0x0000bd15      4889c5         mov rbp, rax
0x0000bd18      488d4308       lea rax, [rbx + 8]
0x0000bd1c      4883ec08       sub rsp, 8
0x0000bd20      448b4b04       mov r9d, dword [rbx + 4]
0x0000bd24      ff7330         push qword [rbx + 0x30]
0x0000bd27      448b03         mov r8d, dword [rbx]
0x0000bd2a      ff7328         push qword [rbx + 0x28]
0x0000bd2d      4c89fa         mov rdx, r15
0x0000bd30      50             push rax
0x0000bd31      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0000bd36      4c89f6         mov rsi, r14
0x0000bd39      4c89ef         mov rdi, r13
0x0000bd3c      e89feaffff     call sym.quotearg_buffer_restyled
0x0000bd41      44896500       mov dword [rbp], r12d
0x0000bd45      4883c438       add rsp, 0x38
0x0000bd49      5b             pop rbx
0x0000bd4a      5d             pop rbp
0x0000bd4b      415c           pop r12
0x0000bd4d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000bd4f      415e           pop r14
0x0000bd51      415f           pop r15
0x0000bd53      c3             ret
0x0000bd54      6690           nop
0x0000bd56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x0000bd60      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x0000bd62      4156           push r14
0x0000bd64      488d0555c521.  lea rax, obj.default_quoting_options    ; 0x2282c0
0x0000bd6b      4155           push r13
0x0000bd6d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000bd6f      4989d4         mov r12, rdx
0x0000bd72      55             push rbp
0x0000bd73      53             push rbx
0x0000bd74      4889cb         mov rbx, rcx
0x0000bd77      4989fe         mov r14, rdi
0x0000bd7a      4989f7         mov r15, rsi
0x0000bd7d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x0000bd81      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x0000bd84      480f44d8       cmove rbx, rax
0x0000bd88      31ed           xor ebp, ebp
0x0000bd8a      e88166ffff     call sym.imp.__errno_location
0x0000bd8f      4d85e4         test r12, r12
0x0000bd92      4989c5         mov r13, rax
0x0000bd95      8b00           mov eax, dword [rax]
0x0000bd97      400f94c5       sete bpl
0x0000bd9b      0b6b04         or ebp, dword [rbx + 4]
0x0000bd9e      4c8d5308       lea r10, [rbx + 8]
0x0000bda2      4883ec08       sub rsp, 8
0x0000bda6      448b03         mov r8d, dword [rbx]
0x0000bda9      4c89f9         mov rcx, r15
0x0000bdac      89442414       mov dword [rsp + 0x14], eax
0x0000bdb0      ff7330         push qword [rbx + 0x30]
0x0000bdb3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x0000bdb6      ff7328         push qword [rbx + 0x28]
0x0000bdb9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000bdbb      31f6           xor esi, esi
0x0000bdbd      4189e9         mov r9d, ebp
0x0000bdc0      31ff           xor edi, edi
0x0000bdc2      4c89542440     mov qword [rsp + 0x40], r10
0x0000bdc7      e814eaffff     call sym.quotearg_buffer_restyled
0x0000bdcc      488d7001       lea rsi, [rax + 1]
0x0000bdd0      4889442448     mov qword [rsp + 0x48], rax
0x0000bdd5      4883c420       add rsp, 0x20
0x0000bdd9      4889f7         mov rdi, rsi
0x0000bddc      4889742418     mov qword [rsp + 0x18], rsi
0x0000bde1      e8fa0b0000     call sym.xmalloc
0x0000bde6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000bdeb      4883ec08       sub rsp, 8
0x0000bdef      ff7330         push qword [rbx + 0x30]
0x0000bdf2      ff7328         push qword [rbx + 0x28]
0x0000bdf5      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000bdfa      4189e9         mov r9d, ebp
0x0000bdfd      448b03         mov r8d, dword [rbx]
0x0000be00      4c89f9         mov rcx, r15
0x0000be03      4c89f2         mov rdx, r14
0x0000be06      4889c7         mov rdi, rax
0x0000be09      4152           push r10
0x0000be0b      488b742438     mov rsi, qword [rsp + 0x38]
0x0000be10      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x0000be15      8b44242c       mov eax, dword [rsp + 0x2c]
0x0000be19      4883c420       add rsp, 0x20
0x0000be1d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x0000be20      41894500       mov dword [r13], eax
0x0000be24      7409           je 0xbe2f
0x0000be26      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000be2b      4d891c24       mov qword [r12], r11
0x0000be2f      488b442410     mov rax, qword [rsp + 0x10]
0x0000be34      4883c438       add rsp, 0x38
0x0000be38      5b             pop rbx
0x0000be39      5d             pop rbp
0x0000be3a      415c           pop r12
0x0000be3c      415d           pop r13
0x0000be3e      415e           pop r14
0x0000be40      415f           pop r15
0x0000be42      c3             ret
0x0000be43      0f1f00         nop dword [rax]
0x0000be46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x0000be50      4889d1         mov rcx, rdx
0x0000be53      31d2           xor edx, edx
0x0000be55      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000be5a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x0000be60      8b0512c22100   mov eax, dword [obj.nslots]             ; [0x228078:4]=1
0x0000be66      4154           push r12
0x0000be68      4c8b2511c221.  mov r12, qword [obj.slotvec]            ; [0x228080:8]=0x228090 obj.slotvec0
0x0000be6f      55             push rbp
0x0000be70      53             push rbx
0x0000be71      83f801         cmp eax, 1
0x0000be74      7e2b           jle 0xbea1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x0000be76      83e802         sub eax, 2
0x0000be79      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000be7e      48c1e004       shl rax, 4
0x0000be82      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x0000be87      660f1f840000.  nop word [rax + rax]
0x0000be90      488b3b         mov rdi, qword [rbx]
0x0000be93      4883c310       add rbx, 0x10
0x0000be97      e8746bffff     call sym..plt.got
0x0000be9c      4839eb         cmp rbx, rbp
0x0000be9f      75ef           jne 0xbe90
0x0000bea1      498b7c2408     mov rdi, qword [r12 + 8]
0x0000bea6      488d1d13c321.  lea rbx, obj.slot0                      ; 0x2281c0
0x0000bead      4839df         cmp rdi, rbx
0x0000beb0      7417           je 0xbec9
0x0000beb2      e8596bffff     call sym..plt.got
0x0000beb7      48c705cec121.  mov qword [obj.slotvec0], 0x100         ; [0x228090:8]=256
0x0000bec2      48891dcfc121.  mov qword [0x00228098], rbx             ; [0x228098:8]=0x2281c0 obj.slot0
0x0000bec9      488d1dc0c121.  lea rbx, obj.slotvec0                   ; 0x228090
0x0000bed0      4939dc         cmp r12, rbx
0x0000bed3      740f           je 0xbee4
0x0000bed5      4c89e7         mov rdi, r12
0x0000bed8      e8336bffff     call sym..plt.got
0x0000bedd      48891d9cc121.  mov qword [obj.slotvec], rbx            ; [0x228080:8]=0x228090 obj.slotvec0
0x0000bee4      5b             pop rbx
0x0000bee5      c70589c12100.  mov dword [obj.nslots], 1               ; [0x228078:4]=1
0x0000beef      5d             pop rbp
0x0000bef0      415c           pop r12
0x0000bef2      c3             ret
0x0000bef3      0f1f00         nop dword [rax]
0x0000bef6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x0000bf00      488d0db9c321.  lea rcx, obj.default_quoting_options    ; 0x2282c0
0x0000bf07      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000bf0e      e90dfbffff     jmp sym.quotearg_n_options
0x0000bf13      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x0000bf16      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x0000bf20      488d0d99c321.  lea rcx, obj.default_quoting_options    ; 0x2282c0
0x0000bf27      e9f4faffff     jmp sym.quotearg_n_options
0x0000bf2c      0f1f4000       nop dword [rax]
;-- quotearg:
0x0000bf30      488d0d89c321.  lea rcx, obj.default_quoting_options    ; 0x2282c0
0x0000bf37      4889fe         mov rsi, rdi
0x0000bf3a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000bf41      31ff           xor edi, edi
0x0000bf43      e9d8faffff     jmp sym.quotearg_n_options
0x0000bf48      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x0000bf50      488d0d69c321.  lea rcx, obj.default_quoting_options    ; 0x2282c0
0x0000bf57      4889f2         mov rdx, rsi
0x0000bf5a      4889fe         mov rsi, rdi
0x0000bf5d      31ff           xor edi, edi
0x0000bf5f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x0000bf64      6690           nop
0x0000bf66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x0000bf70      4883ec48       sub rsp, 0x48
0x0000bf74      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x0000bf77      64488b142528.  mov rdx, qword fs:[0x28]
0x0000bf80      4889542438     mov qword [rsp + 0x38], rdx
0x0000bf85      31d2           xor edx, edx
0x0000bf87      83fe0a         cmp esi, 0xa
0x0000bf8a      7468           je 0xbff4
0x0000bf8c      893424         mov dword [rsp], esi
0x0000bf8f      4889e1         mov rcx, rsp
0x0000bf92      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000bf99      4889c6         mov rsi, rax
0x0000bf9c      48c744240400.  mov qword [rsp + 4], 0
0x0000bfa5      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000bfae      48c744241400.  mov qword [rsp + 0x14], 0
0x0000bfb7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000bfc0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x0000bfc9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000bfd2      c74424340000.  mov dword [rsp + 0x34], 0
0x0000bfda      e841faffff     call sym.quotearg_n_options
0x0000bfdf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000bfe4      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000bfed      750a           jne 0xbff9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000bfef      4883c448       add rsp, 0x48
0x0000bff3      c3             ret
0x0000bff4      e80764ffff     call sym.imp.abort
0x0000bff9      e86265ffff     call sym.imp.__stack_chk_fail
0x0000bffe      6690           nop
;-- quotearg_n_style_mem:
0x0000c000      4883ec48       sub rsp, 0x48
0x0000c004      4889d0         mov rax, rdx
0x0000c007      4889ca         mov rdx, rcx
0x0000c00a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x0000c013      48894c2438     mov qword [rsp + 0x38], rcx
0x0000c018      31c9           xor ecx, ecx
0x0000c01a      83fe0a         cmp esi, 0xa
0x0000c01d      7461           je 0xc080
0x0000c01f      893424         mov dword [rsp], esi
0x0000c022      4889e1         mov rcx, rsp
0x0000c025      4889c6         mov rsi, rax
0x0000c028      48c744240400.  mov qword [rsp + 4], 0
0x0000c031      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000c03a      48c744241400.  mov qword [rsp + 0x14], 0
0x0000c043      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000c04c      48c744242400.  mov qword [rsp + 0x24], 0
0x0000c055      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000c05e      c74424340000.  mov dword [rsp + 0x34], 0
0x0000c066      e8b5f9ffff     call sym.quotearg_n_options
0x0000c06b      488b542438     mov rdx, qword [rsp + 0x38]
0x0000c070      644833142528.  xor rdx, qword fs:[0x28]
0x0000c079      750a           jne 0xc085
0x0000c07b      4883c448       add rsp, 0x48
0x0000c07f      c3             ret
0x0000c080      e87b63ffff     call sym.imp.abort
0x0000c085      e8d664ffff     call sym.imp.__stack_chk_fail
0x0000c08a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x0000c090      4889f2         mov rdx, rsi
0x0000c093      89fe           mov esi, edi
0x0000c095      31ff           xor edi, edi
0x0000c097      e9d4feffff     jmp sym.quotearg_n_style
0x0000c09c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x0000c0a0      4889d1         mov rcx, rdx
0x0000c0a3      4889f2         mov rdx, rsi
0x0000c0a6      89fe           mov esi, edi
0x0000c0a8      31ff           xor edi, edi
0x0000c0aa      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000c0af      90             nop
;-- quotearg_char_mem:
0x0000c0b0      4883ec48       sub rsp, 0x48
0x0000c0b4      89d1           mov ecx, edx
0x0000c0b6      64488b042528.  mov rax, qword fs:[0x28]
0x0000c0bf      4889442438     mov qword [rsp + 0x38], rax
0x0000c0c4      31c0           xor eax, eax
0x0000c0c6      488b0523c221.  mov rax, qword [0x002282f0]             ; [0x2282f0:8]=0
0x0000c0cd      4989e0         mov r8, rsp
0x0000c0d0      83e11f         and ecx, 0x1f
0x0000c0d3      660f6f05e5c1.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000c0db      4889442430     mov qword [rsp + 0x30], rax
0x0000c0e0      89d0           mov eax, edx
0x0000c0e2      0f290424       movaps xmmword [rsp], xmm0
0x0000c0e6      c0e805         shr al, 5
0x0000c0e9      0fb6c0         movzx eax, al
0x0000c0ec      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x0000c0f1      660f6f05d7c1.  movdqa xmm0, xmmword [0x002282d0]
0x0000c0f9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000c0fe      660f6f05dac1.  movdqa xmm0, xmmword [0x002282e0]
0x0000c106      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000c10b      418b11         mov edx, dword [r9]
0x0000c10e      89d0           mov eax, edx
0x0000c110      d3e8           shr eax, cl
0x0000c112      f7d0           not eax
0x0000c114      83e001         and eax, 1
0x0000c117      d3e0           shl eax, cl
0x0000c119      4c89c1         mov rcx, r8
0x0000c11c      31d0           xor eax, edx
0x0000c11e      4889f2         mov rdx, rsi
0x0000c121      4889fe         mov rsi, rdi
0x0000c124      418901         mov dword [r9], eax
0x0000c127      31ff           xor edi, edi
0x0000c129      e8f2f8ffff     call sym.quotearg_n_options
0x0000c12e      488b742438     mov rsi, qword [rsp + 0x38]
0x0000c133      644833342528.  xor rsi, qword fs:[0x28]
0x0000c13c      7505           jne 0xc143
0x0000c13e      4883c448       add rsp, 0x48
0x0000c142      c3             ret
0x0000c143      e81864ffff     call sym.imp.__stack_chk_fail
0x0000c148      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x0000c150      400fbed6       movsx edx, sil
0x0000c154      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000c15b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x0000c160      ba3a000000     mov edx, 0x3a                           ; ':'
0x0000c165      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000c16c      e93fffffff     jmp sym.quotearg_char_mem
0x0000c171      0f1f440000     nop dword [rax + rax]
0x0000c176      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x0000c180      ba3a000000     mov edx, 0x3a                           ; ':'
0x0000c185      e926ffffff     jmp sym.quotearg_char_mem
0x0000c18a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x0000c190      4883ec48       sub rsp, 0x48
0x0000c194      4889d0         mov rax, rdx
0x0000c197      64488b142528.  mov rdx, qword fs:[0x28]
0x0000c1a0      4889542438     mov qword [rsp + 0x38], rdx
0x0000c1a5      31d2           xor edx, edx
0x0000c1a7      83fe0a         cmp esi, 0xa
0x0000c1aa      7468           je 0xc214
0x0000c1ac      893424         mov dword [rsp], esi
0x0000c1af      4889e1         mov rcx, rsp
0x0000c1b2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000c1b9      4889c6         mov rsi, rax
0x0000c1bc      48c744240400.  mov qword [rsp + 4], 0
0x0000c1c5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000c1ce      48c744241400.  mov qword [rsp + 0x14], 0
0x0000c1d7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000c1e0      48c744242400.  mov qword [rsp + 0x24], 0
0x0000c1e9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000c1f2      c74424340000.  mov dword [rsp + 0x34], 0
0x0000c1fa      e821f8ffff     call sym.quotearg_n_options
0x0000c1ff      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000c204      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000c20d      750a           jne 0xc219
0x0000c20f      4883c448       add rsp, 0x48
0x0000c213      c3             ret
0x0000c214      e8e761ffff     call sym.imp.abort
0x0000c219      e84263ffff     call sym.imp.__stack_chk_fail
0x0000c21e      6690           nop
;-- quotearg_n_custom_mem:
0x0000c220      4883ec48       sub rsp, 0x48
0x0000c224      4989c9         mov r9, rcx
0x0000c227      488b0dc2c021.  mov rcx, qword [0x002282f0]             ; [0x2282f0:8]=0
0x0000c22e      660f6f058ac0.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000c236      64488b042528.  mov rax, qword fs:[0x28]
0x0000c23f      4889442438     mov qword [rsp + 0x38], rax
0x0000c244      31c0           xor eax, eax
0x0000c246      0f290424       movaps xmmword [rsp], xmm0
0x0000c24a      4885f6         test rsi, rsi
0x0000c24d      48894c2430     mov qword [rsp + 0x30], rcx
0x0000c252      c704240a0000.  mov dword [rsp], 0xa
0x0000c259      660f6f056fc0.  movdqa xmm0, xmmword [0x002282d0]
0x0000c261      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000c266      660f6f0572c0.  movdqa xmm0, xmmword [0x002282e0]
0x0000c26e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000c273      7432           je 0xc2a7
0x0000c275      4885d2         test rdx, rdx
0x0000c278      742d           je 0xc2a7
0x0000c27a      4889742428     mov qword [rsp + 0x28], rsi
0x0000c27f      4889542430     mov qword [rsp + 0x30], rdx
0x0000c284      4889e1         mov rcx, rsp
0x0000c287      4c89c2         mov rdx, r8
0x0000c28a      4c89ce         mov rsi, r9
0x0000c28d      e88ef7ffff     call sym.quotearg_n_options
0x0000c292      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000c297      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000c2a0      750a           jne 0xc2ac
0x0000c2a2      4883c448       add rsp, 0x48
0x0000c2a6      c3             ret
0x0000c2a7      e85461ffff     call sym.imp.abort
0x0000c2ac      e8af62ffff     call sym.imp.__stack_chk_fail
0x0000c2b1      0f1f440000     nop dword [rax + rax]
0x0000c2b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x0000c2c0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000c2c7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000c2cc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x0000c2d0      4889d1         mov rcx, rdx
0x0000c2d3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000c2da      4889f2         mov rdx, rsi
0x0000c2dd      4889fe         mov rsi, rdi
0x0000c2e0      31ff           xor edi, edi
0x0000c2e2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x0000c2e7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x0000c2f0      4989c8         mov r8, rcx
0x0000c2f3      4889d1         mov rcx, rdx
0x0000c2f6      4889f2         mov rdx, rsi
0x0000c2f9      4889fe         mov rsi, rdi
0x0000c2fc      31ff           xor edi, edi
0x0000c2fe      e91dffffff     jmp sym.quotearg_n_custom_mem
0x0000c303      0f1f00         nop dword [rax]
0x0000c306      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x0000c310      488d0d29bd21.  lea rcx, obj.quote_quoting_options      ; 0x228040
0x0000c317      e904f7ffff     jmp sym.quotearg_n_options
0x0000c31c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x0000c320      488d0d19bd21.  lea rcx, obj.quote_quoting_options      ; 0x228040
0x0000c327      4889f2         mov rdx, rsi
0x0000c32a      4889fe         mov rsi, rdi
0x0000c32d      31ff           xor edi, edi
0x0000c32f      e9ecf6ffff     jmp sym.quotearg_n_options
0x0000c334      6690           nop
0x0000c336      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x0000c340      488d0df9bc21.  lea rcx, obj.quote_quoting_options      ; 0x228040
0x0000c347      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000c34e      e9cdf6ffff     jmp sym.quotearg_n_options
0x0000c353      0f1f00         nop dword [rax]
0x0000c356      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x0000c360      488d0dd9bc21.  lea rcx, obj.quote_quoting_options      ; 0x228040
0x0000c367      4889fe         mov rsi, rdi
0x0000c36a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000c371      31ff           xor edi, edi
0x0000c373      e9a8f6ffff     jmp sym.quotearg_n_options
0x0000c378      0f1f84000000.  nop dword [rax + rax]
;-- strnlen1:
0x0000c380      55             push rbp                                ; ../coreutils-8.31/lib/strnlen1.c:29
0x0000c381      53             push rbx
0x0000c382      4889f2         mov rdx, rsi                            ; ../coreutils-8.31/lib/strnlen1.c:30
0x0000c385      4889f3         mov rbx, rsi                            ; ../coreutils-8.31/lib/strnlen1.c:29
0x0000c388      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/strnlen1.c:30
0x0000c38a      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/strnlen1.c:29
0x0000c38d      4883ec08       sub rsp, 8
0x0000c391      e8da62ffff     call sym.imp.memchr                     ; ../coreutils-8.31/lib/strnlen1.c:30
0x0000c396      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/strnlen1.c:32
0x0000c399      4829ea         sub rdx, rbp
0x0000c39c      4883c201       add rdx, 1
0x0000c3a0      4885c0         test rax, rax
0x0000c3a3      4889d8         mov rax, rbx
0x0000c3a6      480f45c2       cmovne rax, rdx
0x0000c3aa      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/strnlen1.c:35
0x0000c3ae      5b             pop rbx
0x0000c3af      5d             pop rbp
0x0000c3b0      c3             ret
0x0000c3b1      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c3bb      0f1f440000     nop dword [rax + rax]
;-- version_etc_arn:
0x0000c3c0      4157           push r15
0x0000c3c2      4156           push r14
0x0000c3c4      4155           push r13
0x0000c3c6      4154           push r12
0x0000c3c8      4d89cc         mov r12, r9
0x0000c3cb      55             push rbp
0x0000c3cc      53             push rbx
0x0000c3cd      4889fd         mov rbp, rdi
0x0000c3d0      4c89c3         mov rbx, r8
0x0000c3d3      4883ec28       sub rsp, 0x28
0x0000c3d7      4885f6         test rsi, rsi
0x0000c3da      0f8418010000   je 0xc4f8
0x0000c3e0      4989d0         mov r8, rdx
0x0000c3e3      488d159e5b01.  lea rdx, [0x00021f88]                   ; "%s (%s) %s\n"
0x0000c3ea      4989c9         mov r9, rcx
0x0000c3ed      31c0           xor eax, eax
0x0000c3ef      4889f1         mov rcx, rsi
0x0000c3f2      be01000000     mov esi, 1
0x0000c3f7      e87465ffff     call sym.imp.__fprintf_chk
0x0000c3fc      488d35985b01.  lea rsi, [0x00021f9b]                   ; "(C)"
0x0000c403      31ff           xor edi, edi
0x0000c405      ba05000000     mov edx, 5
0x0000c40a      e80161ffff     call sym.imp.dcgettext
0x0000c40f      488d15aa5e01.  lea rdx, obj.version_etc_copyright      ; 0x222c0 ; "Copyright %s %d Free Software Foundation, Inc."
0x0000c416      4889c1         mov rcx, rax
0x0000c419      41b8e3070000   mov r8d, 0x7e3
0x0000c41f      be01000000     mov esi, 1
0x0000c424      4889ef         mov rdi, rbp
0x0000c427      31c0           xor eax, eax
0x0000c429      e84265ffff     call sym.imp.__fprintf_chk
0x0000c42e      488d35f35b01.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x22028 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x0000c435      31ff           xor edi, edi
0x0000c437      ba05000000     mov edx, 5
0x0000c43c      e8cf60ffff     call sym.imp.dcgettext
0x0000c441      4889ee         mov rsi, rbp
0x0000c444      4889c7         mov rdi, rax
0x0000c447      e85462ffff     call sym.imp.fputs_unlocked
0x0000c44c      4983fc09       cmp r12, 9
0x0000c450      0f873a030000   ja 0xc790
0x0000c456      488d15275e01.  lea rdx, [0x00022284]
0x0000c45d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x0000c461      4801d0         add rax, rdx
0x0000c464      ffe0           jmp rax
0x0000c466      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c470      4c8b4b38       mov r9, qword [rbx + 0x38]
0x0000c474      488b4310       mov rax, qword [rbx + 0x10]
0x0000c478      488d35195d01.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x22198 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000c47f      4c8b4308       mov r8, qword [rbx + 8]
0x0000c483      ba05000000     mov edx, 5
0x0000c488      31ff           xor edi, edi
0x0000c48a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000c48e      4c8b6328       mov r12, qword [rbx + 0x28]
0x0000c492      4c894c2410     mov qword [rsp + 0x10], r9
0x0000c497      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000c49b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000c49f      48890424       mov qword [rsp], rax
0x0000c4a3      4c89442408     mov qword [rsp + 8], r8
0x0000c4a8      488b1b         mov rbx, qword [rbx]
0x0000c4ab      e86060ffff     call sym.imp.dcgettext
0x0000c4b0      4883ec08       sub rsp, 8
0x0000c4b4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x0000c4b9      4889c2         mov rdx, rax
0x0000c4bc      4889d9         mov rcx, rbx
0x0000c4bf      be01000000     mov esi, 1
0x0000c4c4      4889ef         mov rdi, rbp
0x0000c4c7      31c0           xor eax, eax
0x0000c4c9      4151           push r9
0x0000c4cb      4155           push r13
0x0000c4cd      4154           push r12
0x0000c4cf      4157           push r15
0x0000c4d1      4156           push r14
0x0000c4d3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x0000c4d8      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000c4dd      e88e64ffff     call sym.imp.__fprintf_chk
0x0000c4e2      4883c430       add rsp, 0x30
0x0000c4e6      4883c428       add rsp, 0x28
0x0000c4ea      5b             pop rbx
0x0000c4eb      5d             pop rbp
0x0000c4ec      415c           pop r12
0x0000c4ee      415d           pop r13
0x0000c4f0      415e           pop r14
0x0000c4f2      415f           pop r15
0x0000c4f4      c3             ret
0x0000c4f5      0f1f00         nop dword [rax]
0x0000c4f8      4989c8         mov r8, rcx
0x0000c4fb      4889d1         mov rcx, rdx
0x0000c4fe      488d158f5a01.  lea rdx, str.s__s                       ; 0x21f94 ; "%s %s\n"
0x0000c505      be01000000     mov esi, 1
0x0000c50a      31c0           xor eax, eax
0x0000c50c      e85f64ffff     call sym.imp.__fprintf_chk
0x0000c511      e9e6feffff     jmp 0xc3fc
0x0000c516      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c520      4c8b5340       mov r10, qword [rbx + 0x40]
0x0000c524      4c8b4b38       mov r9, qword [rbx + 0x38]
0x0000c528      488d35995c01.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x221c8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000c52f      488b4310       mov rax, qword [rbx + 0x10]
0x0000c533      4c8b4308       mov r8, qword [rbx + 8]
0x0000c537      ba05000000     mov edx, 5
0x0000c53c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000c540      4c8b6328       mov r12, qword [rbx + 0x28]
0x0000c544      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000c548      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000c54c      488b1b         mov rbx, qword [rbx]
0x0000c54f      4c89542418     mov qword [rsp + 0x18], r10
0x0000c554      4c894c2410     mov qword [rsp + 0x10], r9
0x0000c559      48890424       mov qword [rsp], rax
0x0000c55d      4c89442408     mov qword [rsp + 8], r8
0x0000c562      31ff           xor edi, edi
0x0000c564      e8a75fffff     call sym.imp.dcgettext
0x0000c569      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000c56e      4152           push r10
0x0000c570      e93fffffff     jmp 0xc4b4
0x0000c575      0f1f00         nop dword [rax]
0x0000c578      488b1b         mov rbx, qword [rbx]
0x0000c57b      488d351d5a01.  lea rsi, str.Written_by__s.             ; 0x21f9f ; "Written by %s.\n"
0x0000c582      ba05000000     mov edx, 5
0x0000c587      31ff           xor edi, edi
0x0000c589      e8825fffff     call sym.imp.dcgettext
0x0000c58e      4883c428       add rsp, 0x28
0x0000c592      4889d9         mov rcx, rbx
0x0000c595      4889ef         mov rdi, rbp
0x0000c598      5b             pop rbx
0x0000c599      5d             pop rbp
0x0000c59a      415c           pop r12
0x0000c59c      415d           pop r13
0x0000c59e      415e           pop r14
0x0000c5a0      415f           pop r15
0x0000c5a2      4889c2         mov rdx, rax
0x0000c5a5      be01000000     mov esi, 1
0x0000c5aa      31c0           xor eax, eax
0x0000c5ac      e9bf63ffff     jmp sym.imp.__fprintf_chk
0x0000c5b1      0f1f80000000.  nop dword [rax]
0x0000c5b8      4c8b6308       mov r12, qword [rbx + 8]
0x0000c5bc      488d35ec5901.  lea rsi, str.Written_by__s_and__s.      ; 0x21faf ; "Written by %s and %s.\n"
0x0000c5c3      488b1b         mov rbx, qword [rbx]
0x0000c5c6      ba05000000     mov edx, 5
0x0000c5cb      31ff           xor edi, edi
0x0000c5cd      e83e5fffff     call sym.imp.dcgettext
0x0000c5d2      4883c428       add rsp, 0x28
0x0000c5d6      4d89e0         mov r8, r12
0x0000c5d9      4889d9         mov rcx, rbx
0x0000c5dc      4889ef         mov rdi, rbp
0x0000c5df      4889c2         mov rdx, rax
0x0000c5e2      be01000000     mov esi, 1
0x0000c5e7      5b             pop rbx
0x0000c5e8      5d             pop rbp
0x0000c5e9      415c           pop r12
0x0000c5eb      415d           pop r13
0x0000c5ed      415e           pop r14
0x0000c5ef      415f           pop r15
0x0000c5f1      31c0           xor eax, eax
0x0000c5f3      e97863ffff     jmp sym.imp.__fprintf_chk
0x0000c5f8      0f1f84000000.  nop dword [rax + rax]
0x0000c600      4c8b6b10       mov r13, qword [rbx + 0x10]
0x0000c604      4c8b6308       mov r12, qword [rbx + 8]
0x0000c608      488d35b75901.  lea rsi, str.Written_by__s___s__and__s. ; 0x21fc6 ; "Written by %s, %s, and %s.\n"
0x0000c60f      488b1b         mov rbx, qword [rbx]
0x0000c612      ba05000000     mov edx, 5
0x0000c617      31ff           xor edi, edi
0x0000c619      e8f25effff     call sym.imp.dcgettext
0x0000c61e      4883c428       add rsp, 0x28
0x0000c622      4d89e9         mov r9, r13
0x0000c625      4d89e0         mov r8, r12
0x0000c628      4889d9         mov rcx, rbx
0x0000c62b      4889ef         mov rdi, rbp
0x0000c62e      4889c2         mov rdx, rax
0x0000c631      5b             pop rbx
0x0000c632      5d             pop rbp
0x0000c633      415c           pop r12
0x0000c635      415d           pop r13
0x0000c637      415e           pop r14
0x0000c639      415f           pop r15
0x0000c63b      be01000000     mov esi, 1
0x0000c640      31c0           xor eax, eax
0x0000c642      e92963ffff     jmp sym.imp.__fprintf_chk
0x0000c647      660f1f840000.  nop word [rax + rax]
0x0000c650      488d35a15a01.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x220f8 ; "Written by %s, %s, %s,\nand %s.\n"
0x0000c657      ba05000000     mov edx, 5
0x0000c65c      31ff           xor edi, edi
0x0000c65e      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000c662      4c8b6b10       mov r13, qword [rbx + 0x10]
0x0000c666      4c8b6308       mov r12, qword [rbx + 8]
0x0000c66a      488b1b         mov rbx, qword [rbx]
0x0000c66d      e89e5effff     call sym.imp.dcgettext
0x0000c672      4883ec08       sub rsp, 8
0x0000c676      4156           push r14
0x0000c678      4889c2         mov rdx, rax
0x0000c67b      4d89e9         mov r9, r13
0x0000c67e      4d89e0         mov r8, r12
0x0000c681      4889d9         mov rcx, rbx
0x0000c684      4889ef         mov rdi, rbp
0x0000c687      be01000000     mov esi, 1
0x0000c68c      31c0           xor eax, eax
0x0000c68e      e8dd62ffff     call sym.imp.__fprintf_chk
0x0000c693      58             pop rax
0x0000c694      5a             pop rdx
0x0000c695      4883c428       add rsp, 0x28
0x0000c699      5b             pop rbx
0x0000c69a      5d             pop rbp
0x0000c69b      415c           pop r12
0x0000c69d      415d           pop r13
0x0000c69f      415e           pop r14
0x0000c6a1      415f           pop r15
0x0000c6a3      c3             ret
0x0000c6a4      0f1f4000       nop dword [rax]
0x0000c6a8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000c6ac      488d35655a01.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x22118 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x0000c6b3      ba05000000     mov edx, 5
0x0000c6b8      31ff           xor edi, edi
0x0000c6ba      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000c6be      4c8b6b10       mov r13, qword [rbx + 0x10]
0x0000c6c2      4c8b6308       mov r12, qword [rbx + 8]
0x0000c6c6      488b1b         mov rbx, qword [rbx]
0x0000c6c9      e8425effff     call sym.imp.dcgettext
0x0000c6ce      4157           push r15
0x0000c6d0      eba4           jmp 0xc676
0x0000c6d2      660f1f440000   nop word [rax + rax]
0x0000c6d8      4c8b4308       mov r8, qword [rbx + 8]
0x0000c6dc      4c8b6328       mov r12, qword [rbx + 0x28]
0x0000c6e0      488d35595a01.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x22140 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x0000c6e7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000c6eb      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000c6ef      ba05000000     mov edx, 5
0x0000c6f4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x0000c6f8      31ff           xor edi, edi
0x0000c6fa      488b1b         mov rbx, qword [rbx]
0x0000c6fd      4c890424       mov qword [rsp], r8
0x0000c701      e80a5effff     call sym.imp.dcgettext
0x0000c706      4883ec08       sub rsp, 8
0x0000c70a      4d89e9         mov r9, r13
0x0000c70d      4154           push r12
0x0000c70f      4157           push r15
0x0000c711      4156           push r14
0x0000c713      4c8b442420     mov r8, qword [rsp + 0x20]
0x0000c718      4889d9         mov rcx, rbx
0x0000c71b      4889c2         mov rdx, rax
0x0000c71e      4889ef         mov rdi, rbp
0x0000c721      be01000000     mov esi, 1
0x0000c726      31c0           xor eax, eax
0x0000c728      e84362ffff     call sym.imp.__fprintf_chk
0x0000c72d      4883c420       add rsp, 0x20
0x0000c731      4883c428       add rsp, 0x28
0x0000c735      5b             pop rbx
0x0000c736      5d             pop rbp
0x0000c737      415c           pop r12
0x0000c739      415d           pop r13
0x0000c73b      415e           pop r14
0x0000c73d      415f           pop r15
0x0000c73f      c3             ret
0x0000c740      4c8b4b10       mov r9, qword [rbx + 0x10]
0x0000c744      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000c748      488d35195a01.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x22168 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000c74f      4c8b6328       mov r12, qword [rbx + 0x28]
0x0000c753      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000c757      ba05000000     mov edx, 5
0x0000c75c      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000c760      4c8b4308       mov r8, qword [rbx + 8]
0x0000c764      31ff           xor edi, edi
0x0000c766      4c894c2408     mov qword [rsp + 8], r9
0x0000c76b      488b1b         mov rbx, qword [rbx]
0x0000c76e      4c890424       mov qword [rsp], r8
0x0000c772      e8995dffff     call sym.imp.dcgettext
0x0000c777      4155           push r13
0x0000c779      4154           push r12
0x0000c77b      4157           push r15
0x0000c77d      4156           push r14
0x0000c77f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x0000c784      eb8d           jmp 0xc713
0x0000c786      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c790      4c8b5340       mov r10, qword [rbx + 0x40]
0x0000c794      4c8b4b38       mov r9, qword [rbx + 0x38]
0x0000c798      ba05000000     mov edx, 5
0x0000c79d      488b4310       mov rax, qword [rbx + 0x10]
0x0000c7a1      4c8b4308       mov r8, qword [rbx + 8]
0x0000c7a5      488d35545a01.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x22200 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000c7ac      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000c7b0      4c8b6328       mov r12, qword [rbx + 0x28]
0x0000c7b4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000c7b8      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000c7bc      4c89542418     mov qword [rsp + 0x18], r10
0x0000c7c1      4c894c2410     mov qword [rsp + 0x10], r9
0x0000c7c6      48890424       mov qword [rsp], rax
0x0000c7ca      4c89442408     mov qword [rsp + 8], r8
0x0000c7cf      488b1b         mov rbx, qword [rbx]
0x0000c7d2      e98bfdffff     jmp 0xc562
0x0000c7d7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x0000c7e0      4531c9         xor r9d, r9d
0x0000c7e3      49833800       cmp qword [r8], 0
0x0000c7e7      7412           je 0xc7fb
0x0000c7e9      0f1f80000000.  nop dword [rax]
0x0000c7f0      4983c101       add r9, 1
0x0000c7f4      4b833cc800     cmp qword [r8 + r9*8], 0
0x0000c7f9      75f5           jne 0xc7f0
0x0000c7fb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x0000c800      4883ec68       sub rsp, 0x68
0x0000c804      4d89c2         mov r10, r8
0x0000c807      4531c9         xor r9d, r9d
0x0000c80a      64488b042528.  mov rax, qword fs:[0x28]
0x0000c813      4889442458     mov qword [rsp + 0x58], rax
0x0000c818      31c0           xor eax, eax
0x0000c81a      4989e0         mov r8, rsp
0x0000c81d      0f1f00         nop dword [rax]
0x0000c820      418b02         mov eax, dword [r10]
0x0000c823      83f82f         cmp eax, 0x2f
0x0000c826      7742           ja 0xc86a
0x0000c828      4189c3         mov r11d, eax
0x0000c82b      4d035a10       add r11, qword [r10 + 0x10]
0x0000c82f      83c008         add eax, 8
0x0000c832      418902         mov dword [r10], eax
0x0000c835      498b03         mov rax, qword [r11]
0x0000c838      4885c0         test rax, rax
0x0000c83b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000c83f      740a           je 0xc84b
0x0000c841      4983c101       add r9, 1
0x0000c845      4983f90a       cmp r9, 0xa
0x0000c849      75d5           jne 0xc820
0x0000c84b      e870fbffff     call sym.version_etc_arn
0x0000c850      488b442458     mov rax, qword [rsp + 0x58]
0x0000c855      644833042528.  xor rax, qword fs:[0x28]
0x0000c85e      7505           jne 0xc865
0x0000c860      4883c468       add rsp, 0x68
0x0000c864      c3             ret
0x0000c865      e8f65cffff     call sym.imp.__stack_chk_fail
0x0000c86a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000c86e      498d4308       lea rax, [r11 + 8]
0x0000c872      49894208       mov qword [r10 + 8], rax
0x0000c876      ebbd           jmp 0xc835
0x0000c878      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x0000c880      55             push rbp
0x0000c881      53             push rbx
0x0000c882      41ba20000000   mov r10d, 0x20                          ; "@"
0x0000c888      4531db         xor r11d, r11d
0x0000c88b      4881ecb80000.  sub rsp, 0xb8
0x0000c892      64488b042528.  mov rax, qword fs:[0x28]
0x0000c89b      4889442478     mov qword [rsp + 0x78], rax
0x0000c8a0      31c0           xor eax, eax
0x0000c8a2      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000c8aa      4c898424a000.  mov qword [rsp + 0xa0], r8
0x0000c8b2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000c8ba      4c8d442420     lea r8, [rsp + 0x20]
0x0000c8bf      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x0000c8c7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000c8cf      4889442410     mov qword [rsp + 0x10], rax
0x0000c8d4      488d84248000.  lea rax, [rsp + 0x80]
0x0000c8dc      4531c9         xor r9d, r9d
0x0000c8df      4889442418     mov qword [rsp + 0x18], rax
0x0000c8e4      4889c5         mov rbp, rax
0x0000c8e7      660f1f840000.  nop word [rax + rax]
0x0000c8f0      4183fa2f       cmp r10d, 0x2f
0x0000c8f4      7756           ja 0xc94c
0x0000c8f6      4489d0         mov eax, r10d
0x0000c8f9      41bb01000000   mov r11d, 1
0x0000c8ff      4183c208       add r10d, 8
0x0000c903      4801e8         add rax, rbp
0x0000c906      488b00         mov rax, qword [rax]
0x0000c909      4885c0         test rax, rax
0x0000c90c      4b8904c8       mov qword [r8 + r9*8], rax
0x0000c910      740a           je 0xc91c
0x0000c912      4983c101       add r9, 1
0x0000c916      4983f90a       cmp r9, 0xa
0x0000c91a      75d4           jne 0xc8f0
0x0000c91c      4584db         test r11b, r11b
0x0000c91f      7524           jne 0xc945
0x0000c921      e89afaffff     call sym.version_etc_arn
0x0000c926      488b442478     mov rax, qword [rsp + 0x78]
0x0000c92b      644833042528.  xor rax, qword fs:[0x28]
0x0000c934      750a           jne 0xc940
0x0000c936      4881c4b80000.  add rsp, 0xb8
0x0000c93d      5b             pop rbx
0x0000c93e      5d             pop rbp
0x0000c93f      c3             ret
0x0000c940      e81b5cffff     call sym.imp.__stack_chk_fail
0x0000c945      4489542408     mov dword [rsp + 8], r10d
0x0000c94a      ebd5           jmp 0xc921
0x0000c94c      4889d8         mov rax, rbx
0x0000c94f      4883c308       add rbx, 8
0x0000c953      ebb1           jmp 0xc906
0x0000c955      90             nop
0x0000c956      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x0000c960      53             push rbx
0x0000c961      488d357a5601.  lea rsi, str.Report_bugs_to:__s         ; 0x21fe2 ; "\nReport bugs to: %s\n"
0x0000c968      ba05000000     mov edx, 5
0x0000c96d      31ff           xor edi, edi
0x0000c96f      e89c5bffff     call sym.imp.dcgettext
0x0000c974      488d157c5601.  lea rdx, str.bug_coreutils_gnu.org      ; 0x21ff7 ; "bug-coreutils@gnu.org"
0x0000c97b      4889c6         mov rsi, rax
0x0000c97e      bf01000000     mov edi, 1
0x0000c983      31c0           xor eax, eax
0x0000c985      e8c65effff     call sym.imp.__printf_chk
0x0000c98a      488d357c5601.  lea rsi, str.s_home_page:___s           ; 0x2200d ; "%s home page: <%s>\n"
0x0000c991      ba05000000     mov edx, 5
0x0000c996      31ff           xor edi, edi
0x0000c998      e8735bffff     call sym.imp.dcgettext
0x0000c99d      488d0d044301.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x20ca8 ; "https://www.gnu.org/software/coreutils/"
0x0000c9a4      488d155c3101.  lea rdx, str.GNU_coreutils              ; 0x1fb07 ; "GNU coreutils"
0x0000c9ab      4889c6         mov rsi, rax
0x0000c9ae      bf01000000     mov edi, 1
0x0000c9b3      31c0           xor eax, eax
0x0000c9b5      e8965effff     call sym.imp.__printf_chk
0x0000c9ba      488b1de7b621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2280a8:8]=0
0x0000c9c1      488d35785801.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x22240 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x0000c9c8      31ff           xor edi, edi
0x0000c9ca      ba05000000     mov edx, 5
0x0000c9cf      e83c5bffff     call sym.imp.dcgettext
0x0000c9d4      4889de         mov rsi, rbx
0x0000c9d7      4889c7         mov rdi, rax
0x0000c9da      5b             pop rbx
0x0000c9db      e9c05cffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x0000c9e0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x0000c9e1      4889fb         mov rbx, rdi
0x0000c9e4      e8975dffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x0000c9e9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000c9ec      7505           jne 0xc9f3
0x0000c9ee      4885db         test rbx, rbx
0x0000c9f1      7502           jne 0xc9f5
0x0000c9f3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x0000c9f4      c3             ret
0x0000c9f5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000c9fa      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x0000ca00      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x0000ca03      48f7e6         mul rsi
0x0000ca06      4889c7         mov rdi, rax
0x0000ca09      0f90c0         seto al
0x0000ca0c      4885ff         test rdi, rdi
0x0000ca0f      780a           js 0xca1b
0x0000ca11      0fb6c0         movzx eax, al
0x0000ca14      4885c0         test rax, rax
0x0000ca17      7502           jne 0xca1b
0x0000ca19      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000ca1b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000ca1f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x0000ca24      6690           nop
0x0000ca26      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x0000ca30      ebae           jmp sym.xmalloc
0x0000ca32      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x0000ca36      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x0000ca40      4885f6         test rsi, rsi
0x0000ca43      53             push rbx
0x0000ca44      4889f3         mov rbx, rsi
0x0000ca47      7505           jne 0xca4e
0x0000ca49      4885ff         test rdi, rdi
0x0000ca4c      751a           jne 0xca68
0x0000ca4e      4889de         mov rsi, rbx
0x0000ca51      e8da5dffff     call sym.imp.realloc
0x0000ca56      4885c0         test rax, rax
0x0000ca59      7505           jne 0xca60
0x0000ca5b      4885db         test rbx, rbx
0x0000ca5e      7511           jne 0xca71                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x0000ca60      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x0000ca61      c3             ret
0x0000ca62      660f1f440000   nop word [rax + rax]
0x0000ca68      e8a35fffff     call sym..plt.got
0x0000ca6d      31c0           xor eax, eax
0x0000ca6f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x0000ca70      c3             ret
0x0000ca71      e8ba010000     call sym.xalloc_die
0x0000ca76      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x0000ca80      4889f0         mov rax, rsi
0x0000ca83      48f7e2         mul rdx
0x0000ca86      4889c6         mov rsi, rax
0x0000ca89      0f90c0         seto al
0x0000ca8c      4885f6         test rsi, rsi
0x0000ca8f      780a           js 0xca9b
0x0000ca91      0fb6c0         movzx eax, al
0x0000ca94      4885c0         test rax, rax
0x0000ca97      7502           jne 0xca9b
0x0000ca99      eba5           jmp sym.xrealloc
0x0000ca9b      4883ec08       sub rsp, 8
0x0000ca9f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x0000caa4      6690           nop
0x0000caa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x0000cab0      4885ff         test rdi, rdi
0x0000cab3      4989d1         mov r9, rdx
0x0000cab6      488b0e         mov rcx, qword [rsi]
0x0000cab9      7435           je 0xcaf0
0x0000cabb      31d2           xor edx, edx
0x0000cabd      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x0000cac7      49f7f1         div r9
0x0000caca      4839c8         cmp rax, rcx
0x0000cacd      763c           jbe 0xcb0b
0x0000cacf      4889c8         mov rax, rcx
0x0000cad2      48d1e8         shr rax, 1
0x0000cad5      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000cada      48890e         mov qword [rsi], rcx
0x0000cadd      490fafc9       imul rcx, r9
0x0000cae1      4889ce         mov rsi, rcx
0x0000cae4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x0000cae9      0f1f80000000.  nop dword [rax]
0x0000caf0      4885c9         test rcx, rcx
0x0000caf3      7423           je 0xcb18
0x0000caf5      4889c8         mov rax, rcx
0x0000caf8      49f7e1         mul r9
0x0000cafb      0f90c2         seto dl
0x0000cafe      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x0000cb01      0fb6d2         movzx edx, dl
0x0000cb04      7805           js 0xcb0b
0x0000cb06      4885d2         test rdx, rdx
0x0000cb09      74cf           je 0xcada
0x0000cb0b      4883ec08       sub rsp, 8
0x0000cb0f      e81c010000     call sym.xalloc_die
0x0000cb14      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x0000cb18      31d2           xor edx, edx
0x0000cb1a      b880000000     mov eax, 0x80
0x0000cb1f      4531c0         xor r8d, r8d
0x0000cb22      49f7f1         div r9
0x0000cb25      4885c0         test rax, rax
0x0000cb28      410f94c0       sete r8b
0x0000cb2c      498d0c00       lea rcx, [r8 + rax]
0x0000cb30      ebc3           jmp 0xcaf5
0x0000cb32      0f1f4000       nop dword [rax]
0x0000cb36      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x0000cb40      4885ff         test rdi, rdi
0x0000cb43      488b06         mov rax, qword [rsi]
0x0000cb46      7428           je 0xcb70
0x0000cb48      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x0000cb52      4839d0         cmp rax, rdx
0x0000cb55      772a           ja 0xcb81
0x0000cb57      4889c2         mov rdx, rax
0x0000cb5a      48d1ea         shr rdx, 1
0x0000cb5d      488d440201     lea rax, [rdx + rax + 1]
0x0000cb62      488906         mov qword [rsi], rax
0x0000cb65      4889c6         mov rsi, rax
0x0000cb68      e9d3feffff     jmp sym.xrealloc
0x0000cb6d      0f1f00         nop dword [rax]
0x0000cb70      4885c0         test rax, rax
0x0000cb73      ba80000000     mov edx, 0x80
0x0000cb78      480f44c2       cmove rax, rdx
0x0000cb7c      4885c0         test rax, rax
0x0000cb7f      79e1           jns 0xcb62
0x0000cb81      4883ec08       sub rsp, 8
0x0000cb85      e8a6000000     call sym.xalloc_die
0x0000cb8a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x0000cb90      53             push rbx
0x0000cb91      4889fb         mov rbx, rdi
0x0000cb94      e847feffff     call sym.xmalloc
0x0000cb99      4889da         mov rdx, rbx
0x0000cb9c      31f6           xor esi, esi
0x0000cb9e      4889c7         mov rdi, rax
0x0000cba1      5b             pop rbx
0x0000cba2      e9795affff     jmp sym.imp.memset
0x0000cba7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x0000cbb0      4889f8         mov rax, rdi
0x0000cbb3      4883ec08       sub rsp, 8
0x0000cbb7      48f7e6         mul rsi
0x0000cbba      0f90c2         seto dl
0x0000cbbd      4885c0         test rax, rax
0x0000cbc0      7817           js 0xcbd9
0x0000cbc2      0fb6d2         movzx edx, dl
0x0000cbc5      4885d2         test rdx, rdx
0x0000cbc8      750f           jne 0xcbd9
0x0000cbca      e8e15affff     call sym.imp.calloc
0x0000cbcf      4885c0         test rax, rax
0x0000cbd2      7405           je 0xcbd9
0x0000cbd4      4883c408       add rsp, 8
0x0000cbd8      c3             ret
0x0000cbd9      e852000000     call sym.xalloc_die
0x0000cbde      6690           nop
;-- xmemdup:
0x0000cbe0      55             push rbp
0x0000cbe1      53             push rbx
0x0000cbe2      4889fd         mov rbp, rdi
0x0000cbe5      4889f7         mov rdi, rsi
0x0000cbe8      4889f3         mov rbx, rsi
0x0000cbeb      4883ec08       sub rsp, 8
0x0000cbef      e8ecfdffff     call sym.xmalloc
0x0000cbf4      4883c408       add rsp, 8
0x0000cbf8      4889da         mov rdx, rbx
0x0000cbfb      4889ee         mov rsi, rbp
0x0000cbfe      5b             pop rbx
0x0000cbff      5d             pop rbp
0x0000cc00      4889c7         mov rdi, rax
0x0000cc03      e9085bffff     jmp sym.imp.memcpy
0x0000cc08      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x0000cc10      53             push rbx
0x0000cc11      4889fb         mov rbx, rdi
0x0000cc14      e81759ffff     call sym.imp.strlen
0x0000cc19      4889df         mov rdi, rbx
0x0000cc1c      488d7001       lea rsi, [rax + 1]
0x0000cc20      5b             pop rbx
0x0000cc21      ebbd           jmp sym.xmemdup
0x0000cc23      662e0f1f8400.  nop word cs:[rax + rax]
0x0000cc2d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x0000cc30      488d35b85601.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x222ef ; "memory exhausted"
0x0000cc37      4883ec08       sub rsp, 8
0x0000cc3b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x0000cc40      31ff           xor edi, edi
0x0000cc42      e8c958ffff     call sym.imp.dcgettext
0x0000cc47      8b3ddbb32100   mov edi, dword [obj.exit_failure]       ; [0x228028:4]=1
0x0000cc4d      488d153c4801.  lea rdx, [0x00021490]                   ; "%s"
0x0000cc54      4889c1         mov rcx, rax
0x0000cc57      31f6           xor esi, esi
0x0000cc59      31c0           xor eax, eax
0x0000cc5b      e8405cffff     call sym.imp.error
0x0000cc60      e89b57ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x0000cc65      662e0f1f8400.  nop word cs:[rax + rax]
0x0000cc6f      90             nop
;-- xfts_open:
0x0000cc70      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xfts.c:35
0x0000cc74      81ce00020000   or esi, 0x200                           ; ../coreutils-8.31/lib/xfts.c:36
0x0000cc7a      e821270000     call sym.rpl_fts_open
0x0000cc7f      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xfts.c:37
0x0000cc82      740c           je 0xcc90
0x0000cc84      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/xfts.c:46
0x0000cc88      c3             ret
0x0000cc89      0f1f80000000.  nop dword [rax]
0x0000cc90      e87b57ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xfts.c:41
0x0000cc95      833816         cmp dword [rax], 0x16
0x0000cc98      7406           je 0xcca0
0x0000cc9a      e891ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xfts.c:42
0x0000cc9f      90             nop
0x0000cca0      488d0d895601.  lea rcx, obj.__PRETTY_FUNCTION__.3434   ; ../coreutils-8.31/lib/xfts.c:41 ; 0x22330 ; "xfts_open"
0x0000cca7      488d35525601.  lea rsi, str..._coreutils_8.31_lib_xfts.c ; 0x22300 ; "../coreutils-8.31/lib/xfts.c"
0x0000ccae      488d3d685601.  lea rdi, str.errno____EINVAL            ; 0x2231d ; "errno != EINVAL"
0x0000ccb5      ba29000000     mov edx, 0x29                           ; ')'
0x0000ccba      e84159ffff     call sym.imp.__assert_fail
0x0000ccbf      90             nop
;-- cycle_warning_required:
0x0000ccc0      8b5748         mov edx, dword [rdi + 0x48]             ; ../coreutils-8.31/lib/xfts.c:57
0x0000ccc3      b801000000     mov eax, 1
0x0000ccc8      83e211         and edx, 0x11
0x0000cccb      83fa10         cmp edx, 0x10                           ; ../coreutils-8.31/lib/xfts.c:63
0x0000ccce      7407           je 0xccd7
0x0000ccd0      31c0           xor eax, eax
0x0000ccd2      83fa11         cmp edx, 0x11
0x0000ccd5      7409           je 0xcce0
0x0000ccd7      f3c3           ret                                     ; ../coreutils-8.31/lib/xfts.c:65
0x0000ccd9      0f1f80000000.  nop dword [rax]
0x0000cce0      48837e5800     cmp qword [rsi + 0x58], 0               ; ../coreutils-8.31/lib/xfts.c:64
0x0000cce5      0f95c0         setne al
0x0000cce8      c3             ret                                     ; ../coreutils-8.31/lib/xfts.c:65
0x0000cce9      0f1f80000000.  nop dword [rax]
;-- xstrtoimax:
0x0000ccf0      4157           push r15
0x0000ccf2      4156           push r14
0x0000ccf4      4155           push r13
0x0000ccf6      4154           push r12
0x0000ccf8      55             push rbp
0x0000ccf9      53             push rbx
0x0000ccfa      4883ec28       sub rsp, 0x28
0x0000ccfe      64488b042528.  mov rax, qword fs:[0x28]
0x0000cd07      4889442418     mov qword [rsp + 0x18], rax
0x0000cd0c      31c0           xor eax, eax
0x0000cd0e      83fa24         cmp edx, 0x24
0x0000cd11      0f8768060000   ja 0xd37f
0x0000cd17      488d442410     lea rax, [rsp + 0x10]
0x0000cd1c      4885f6         test rsi, rsi
0x0000cd1f      4889f3         mov rbx, rsi
0x0000cd22      4989fc         mov r12, rdi
0x0000cd25      89d5           mov ebp, edx
0x0000cd27      4989ce         mov r14, rcx
0x0000cd2a      480f44d8       cmove rbx, rax
0x0000cd2e      4d89c7         mov r15, r8
0x0000cd31      e8da56ffff     call sym.imp.__errno_location
0x0000cd36      31c9           xor ecx, ecx
0x0000cd38      89ea           mov edx, ebp
0x0000cd3a      c70000000000   mov dword [rax], 0
0x0000cd40      4889de         mov rsi, rbx
0x0000cd43      4c89e7         mov rdi, r12
0x0000cd46      4989c5         mov r13, rax
0x0000cd49      e88257ffff     call sym.imp.__strtol_internal
0x0000cd4e      488b0b         mov rcx, qword [rbx]
0x0000cd51      4889c5         mov rbp, rax
0x0000cd54      4c39e1         cmp rcx, r12
0x0000cd57      745f           je 0xcdb8
0x0000cd59      418b4500       mov eax, dword [r13]
0x0000cd5d      85c0           test eax, eax
0x0000cd5f      753f           jne 0xcda0
0x0000cd61      4531e4         xor r12d, r12d
0x0000cd64      4d85ff         test r15, r15
0x0000cd67      740d           je 0xcd76
0x0000cd69      440fb629       movzx r13d, byte [rcx]
0x0000cd6d      4584ed         test r13b, r13b
0x0000cd70      0f857d000000   jne 0xcdf3
0x0000cd76      49892e         mov qword [r14], rbp
0x0000cd79      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000cd7e      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000cd87      4489e0         mov eax, r12d
0x0000cd8a      0f850e060000   jne 0xd39e
0x0000cd90      4883c428       add rsp, 0x28
0x0000cd94      5b             pop rbx
0x0000cd95      5d             pop rbp
0x0000cd96      415c           pop r12
0x0000cd98      415d           pop r13
0x0000cd9a      415e           pop r14
0x0000cd9c      415f           pop r15
0x0000cd9e      c3             ret
0x0000cd9f      90             nop
0x0000cda0      83f822         cmp eax, 0x22
0x0000cda3      41bc04000000   mov r12d, 4
0x0000cda9      75ce           jne 0xcd79
0x0000cdab      41bc01000000   mov r12d, 1
0x0000cdb1      ebb1           jmp 0xcd64
0x0000cdb3      0f1f440000     nop dword [rax + rax]
0x0000cdb8      4d85ff         test r15, r15
0x0000cdbb      0f848f040000   je 0xd250
0x0000cdc1      440fb629       movzx r13d, byte [rcx]
0x0000cdc5      48894c2408     mov qword [rsp + 8], rcx
0x0000cdca      41bc04000000   mov r12d, 4
0x0000cdd0      4584ed         test r13b, r13b
0x0000cdd3      74a4           je 0xcd79
0x0000cdd5      410fbef5       movsx esi, r13b
0x0000cdd9      4c89ff         mov rdi, r15
0x0000cddc      e8bf57ffff     call sym.imp.strchr
0x0000cde1      4885c0         test rax, rax
0x0000cde4      488b4c2408     mov rcx, qword [rsp + 8]
0x0000cde9      748e           je 0xcd79
0x0000cdeb      bd01000000     mov ebp, 1
0x0000cdf0      4531e4         xor r12d, r12d
0x0000cdf3      410fbef5       movsx esi, r13b
0x0000cdf7      4c89ff         mov rdi, r15
0x0000cdfa      48894c2408     mov qword [rsp + 8], rcx
0x0000cdff      e89c57ffff     call sym.imp.strchr
0x0000ce04      4885c0         test rax, rax
0x0000ce07      488b4c2408     mov rcx, qword [rsp + 8]
0x0000ce0c      745a           je 0xce68
0x0000ce0e      418d45bb       lea eax, [r13 - 0x45]
0x0000ce12      3c2f           cmp al, 0x2f
0x0000ce14      7762           ja 0xce78
0x0000ce16      48ba45893000.  movabs rdx, 0x814400308945
0x0000ce20      480fa3c2       bt rdx, rax
0x0000ce24      7352           jae 0xce78
0x0000ce26      be30000000     mov esi, 0x30                           ; '0'
0x0000ce2b      4c89ff         mov rdi, r15
0x0000ce2e      48894c2408     mov qword [rsp + 8], rcx
0x0000ce33      e86857ffff     call sym.imp.strchr
0x0000ce38      4885c0         test rax, rax
0x0000ce3b      488b4c2408     mov rcx, qword [rsp + 8]
0x0000ce40      7436           je 0xce78
0x0000ce42      0fb64101       movzx eax, byte [rcx + 1]
0x0000ce46      3c44           cmp al, 0x44
0x0000ce48      740c           je 0xce56
0x0000ce4a      3c69           cmp al, 0x69
0x0000ce4c      0f84e6040000   je 0xd338
0x0000ce52      3c42           cmp al, 0x42
0x0000ce54      7522           jne 0xce78
0x0000ce56      bf02000000     mov edi, 2
0x0000ce5b      b8e8030000     mov eax, 0x3e8
0x0000ce60      eb20           jmp 0xce82
0x0000ce62      660f1f440000   nop word [rax + rax]
0x0000ce68      49892e         mov qword [r14], rbp
0x0000ce6b      4183cc02       or r12d, 2
0x0000ce6f      e905ffffff     jmp 0xcd79
0x0000ce74      0f1f4000       nop dword [rax]
0x0000ce78      bf01000000     mov edi, 1
0x0000ce7d      b800040000     mov eax, 0x400
0x0000ce82      4183ed42       sub r13d, 0x42
0x0000ce86      4180fd35       cmp r13b, 0x35
0x0000ce8a      77dc           ja 0xce68
0x0000ce8c      488d35f55401.  lea rsi, [0x00022388]
0x0000ce93      450fb6ed       movzx r13d, r13b
0x0000ce97      4a6314ae       movsxd rdx, dword [rsi + r13*4]
0x0000ce9b      4801f2         add rdx, rsi
0x0000ce9e      ffe2           jmp rdx
0x0000cea0      49b800000000.  movabs r8, 0x8000000000000000
0x0000ceaa      4863f0         movsxd rsi, eax
0x0000cead      4c89c0         mov rax, r8
0x0000ceb0      4899           cqo
0x0000ceb2      48f7fe         idiv rsi
0x0000ceb5      4839c5         cmp rbp, rax
0x0000ceb8      4989c1         mov r9, rax
0x0000cebb      0f8ca4040000   jl 0xd365
0x0000cec1      49baffffffff.  movabs r10, 0x7fffffffffffffff          ; 9223372036854775807
0x0000cecb      4c89d0         mov rax, r10
0x0000cece      4899           cqo
0x0000ced0      48f7fe         idiv rsi
0x0000ced3      4839c5         cmp rbp, rax
0x0000ced6      0f8f96040000   jg 0xd372
0x0000cedc      480fafee       imul rbp, rsi
0x0000cee0      4939e9         cmp r9, rbp
0x0000cee3      0f8f7c040000   jg 0xd365
0x0000cee9      4839e8         cmp rax, rbp
0x0000ceec      0f8c80040000   jl 0xd372
0x0000cef2      480fafee       imul rbp, rsi
0x0000cef6      31c0           xor eax, eax
0x0000cef8      4109c4         or r12d, eax
0x0000cefb      0f1f440000     nop dword [rax + rax]
0x0000cf00      4863c7         movsxd rax, edi
0x0000cf03      4801c1         add rcx, rax
0x0000cf06      4489e0         mov eax, r12d
0x0000cf09      83c802         or eax, 2
0x0000cf0c      48890b         mov qword [rbx], rcx
0x0000cf0f      803900         cmp byte [rcx], 0
0x0000cf12      440f45e0       cmovne r12d, eax
0x0000cf16      e95bfeffff     jmp 0xcd76
0x0000cf1b      0f1f440000     nop dword [rax + rax]
0x0000cf20      48b800000000.  movabs rax, 0xc000000000000000
0x0000cf2a      4839c5         cmp rbp, rax
0x0000cf2d      0f8c2d030000   jl 0xd260
0x0000cf33      48b8ffffffff.  movabs rax, 0x3fffffffffffffff          ; 4611686018427387903
0x0000cf3d      4839c5         cmp rbp, rax
0x0000cf40      0f8fda030000   jg 0xd320
0x0000cf46      4801ed         add rbp, rbp
0x0000cf49      ebb5           jmp 0xcf00
0x0000cf4b      0f1f440000     nop dword [rax + rax]
0x0000cf50      48b800000000.  movabs rax, 0xffc0000000000000
0x0000cf5a      4839c5         cmp rbp, rax
0x0000cf5d      0f8cfd020000   jl 0xd260
0x0000cf63      48b8ffffffff.  movabs rax, 0x3fffffffffffff            ; 18014398509481983
0x0000cf6d      4839c5         cmp rbp, rax
0x0000cf70      0f8faa030000   jg 0xd320
0x0000cf76      48c1e509       shl rbp, 9
0x0000cf7a      eb84           jmp 0xcf00
0x0000cf7c      0f1f4000       nop dword [rax]
0x0000cf80      4863f0         movsxd rsi, eax
0x0000cf83      48b800000000.  movabs rax, 0x8000000000000000
0x0000cf8d      41b807000000   mov r8d, 7
0x0000cf93      4899           cqo
0x0000cf95      4531db         xor r11d, r11d
0x0000cf98      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000cfa2      48f7fe         idiv rsi
0x0000cfa5      4989c2         mov r10, rax
0x0000cfa8      eb25           jmp 0xcfcf
0x0000cfaa      660f1f440000   nop word [rax + rax]
0x0000cfb0      4c89c8         mov rax, r9
0x0000cfb3      4899           cqo
0x0000cfb5      48f7fe         idiv rsi
0x0000cfb8      4839e8         cmp rax, rbp
0x0000cfbb      0f8ce7020000   jl 0xd2a8
0x0000cfc1      480fafee       imul rbp, rsi
0x0000cfc5      4183e801       sub r8d, 1
0x0000cfc9      0f8421010000   je 0xd0f0
0x0000cfcf      4939ea         cmp r10, rbp
0x0000cfd2      7edc           jle 0xcfb0
0x0000cfd4      41bb01000000   mov r11d, 1
0x0000cfda      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000cfe4      ebdf           jmp 0xcfc5
0x0000cfe6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000cff0      4863f0         movsxd rsi, eax
0x0000cff3      48b800000000.  movabs rax, 0x8000000000000000
0x0000cffd      41b808000000   mov r8d, 8
0x0000d003      4899           cqo
0x0000d005      4531db         xor r11d, r11d
0x0000d008      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000d012      48f7fe         idiv rsi
0x0000d015      4989c2         mov r10, rax
0x0000d018      eb25           jmp 0xd03f
0x0000d01a      660f1f440000   nop word [rax + rax]
0x0000d020      4c89c8         mov rax, r9
0x0000d023      4899           cqo
0x0000d025      48f7fe         idiv rsi
0x0000d028      4839e8         cmp rax, rbp
0x0000d02b      0f8c47020000   jl 0xd278
0x0000d031      480fafee       imul rbp, rsi
0x0000d035      4183e801       sub r8d, 1
0x0000d039      0f84b1000000   je 0xd0f0
0x0000d03f      4939ea         cmp r10, rbp
0x0000d042      7edc           jle 0xd020
0x0000d044      41bb01000000   mov r11d, 1
0x0000d04a      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000d054      ebdf           jmp 0xd035
0x0000d056      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d060      49b800000000.  movabs r8, 0x8000000000000000
0x0000d06a      4863f0         movsxd rsi, eax
0x0000d06d      4c89c0         mov rax, r8
0x0000d070      4899           cqo
0x0000d072      48f7fe         idiv rsi
0x0000d075      4839c5         cmp rbp, rax
0x0000d078      0f8ce2010000   jl 0xd260
0x0000d07e      4983e801       sub r8, 1
0x0000d082      4c89c0         mov rax, r8
0x0000d085      4899           cqo
0x0000d087      48f7fe         idiv rsi
0x0000d08a      4839c5         cmp rbp, rax
0x0000d08d      0f8f8d020000   jg 0xd320
0x0000d093      480fafee       imul rbp, rsi
0x0000d097      e964feffff     jmp 0xcf00
0x0000d09c      0f1f4000       nop dword [rax]
0x0000d0a0      4863f0         movsxd rsi, eax
0x0000d0a3      48b800000000.  movabs rax, 0x8000000000000000
0x0000d0ad      41b803000000   mov r8d, 3
0x0000d0b3      4899           cqo
0x0000d0b5      4531db         xor r11d, r11d
0x0000d0b8      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000d0c2      48f7fe         idiv rsi
0x0000d0c5      4989c2         mov r10, rax
0x0000d0c8      4939ea         cmp r10, rbp
0x0000d0cb      0f8fef010000   jg 0xd2c0
0x0000d0d1      4c89c8         mov rax, r9
0x0000d0d4      4899           cqo
0x0000d0d6      48f7fe         idiv rsi
0x0000d0d9      4839e8         cmp rax, rbp
0x0000d0dc      0f8c6e020000   jl 0xd350
0x0000d0e2      480fafee       imul rbp, rsi
0x0000d0e6      4183e801       sub r8d, 1
0x0000d0ea      75dc           jne 0xd0c8
0x0000d0ec      0f1f4000       nop dword [rax]
0x0000d0f0      4509dc         or r12d, r11d
0x0000d0f3      e908feffff     jmp 0xcf00
0x0000d0f8      0f1f84000000.  nop dword [rax + rax]
0x0000d100      4863f0         movsxd rsi, eax
0x0000d103      48b800000000.  movabs rax, 0x8000000000000000
0x0000d10d      41b806000000   mov r8d, 6
0x0000d113      4899           cqo
0x0000d115      4531db         xor r11d, r11d
0x0000d118      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000d122      48f7fe         idiv rsi
0x0000d125      4989c2         mov r10, rax
0x0000d128      eb21           jmp 0xd14b
0x0000d12a      660f1f440000   nop word [rax + rax]
0x0000d130      4c89c8         mov rax, r9
0x0000d133      4899           cqo
0x0000d135      48f7fe         idiv rsi
0x0000d138      4839e8         cmp rax, rbp
0x0000d13b      0f8c97010000   jl 0xd2d8
0x0000d141      480fafee       imul rbp, rsi
0x0000d145      4183e801       sub r8d, 1
0x0000d149      74a5           je 0xd0f0
0x0000d14b      4939ea         cmp r10, rbp
0x0000d14e      7ee0           jle 0xd130
0x0000d150      41bb01000000   mov r11d, 1
0x0000d156      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000d160      ebe3           jmp 0xd145
0x0000d162      660f1f440000   nop word [rax + rax]
0x0000d168      4863f0         movsxd rsi, eax
0x0000d16b      48b800000000.  movabs rax, 0x8000000000000000
0x0000d175      41b805000000   mov r8d, 5
0x0000d17b      4899           cqo
0x0000d17d      4531db         xor r11d, r11d
0x0000d180      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000d18a      48f7fe         idiv rsi
0x0000d18d      4989c2         mov r10, rax
0x0000d190      eb25           jmp 0xd1b7
0x0000d192      660f1f440000   nop word [rax + rax]
0x0000d198      4c89c8         mov rax, r9
0x0000d19b      4899           cqo
0x0000d19d      48f7fe         idiv rsi
0x0000d1a0      4839e8         cmp rax, rbp
0x0000d1a3      0f8c47010000   jl 0xd2f0
0x0000d1a9      480fafee       imul rbp, rsi
0x0000d1ad      4183e801       sub r8d, 1
0x0000d1b1      0f8439ffffff   je 0xd0f0
0x0000d1b7      4939ea         cmp r10, rbp
0x0000d1ba      7edc           jle 0xd198
0x0000d1bc      41bb01000000   mov r11d, 1
0x0000d1c2      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000d1cc      ebdf           jmp 0xd1ad
0x0000d1ce      6690           nop
0x0000d1d0      48b800000000.  movabs rax, 0xffe0000000000000
0x0000d1da      4839c5         cmp rbp, rax
0x0000d1dd      0f8c7d000000   jl 0xd260
0x0000d1e3      48b8ffffffff.  movabs rax, 0x1fffffffffffff            ; 9007199254740991
0x0000d1ed      4839c5         cmp rbp, rax
0x0000d1f0      0f8f2a010000   jg 0xd320
0x0000d1f6      48c1e50a       shl rbp, 0xa
0x0000d1fa      e901fdffff     jmp 0xcf00
0x0000d1ff      90             nop
0x0000d200      4863f0         movsxd rsi, eax
0x0000d203      48b800000000.  movabs rax, 0x8000000000000000
0x0000d20d      41b804000000   mov r8d, 4
0x0000d213      4899           cqo
0x0000d215      4531db         xor r11d, r11d
0x0000d218      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000d222      48f7fe         idiv rsi
0x0000d225      4989c2         mov r10, rax
0x0000d228      4939ea         cmp r10, rbp
0x0000d22b      7f63           jg 0xd290
0x0000d22d      4c89c8         mov rax, r9
0x0000d230      4899           cqo
0x0000d232      48f7fe         idiv rsi
0x0000d235      4839e8         cmp rax, rbp
0x0000d238      0f8cca000000   jl 0xd308
0x0000d23e      480fafee       imul rbp, rsi
0x0000d242      4183e801       sub r8d, 1
0x0000d246      75e0           jne 0xd228
0x0000d248      e9a3feffff     jmp 0xd0f0
0x0000d24d      0f1f00         nop dword [rax]
0x0000d250      41bc04000000   mov r12d, 4
0x0000d256      e91efbffff     jmp 0xcd79
0x0000d25b      0f1f440000     nop dword [rax + rax]
0x0000d260      41bc01000000   mov r12d, 1
0x0000d266      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000d270      e98bfcffff     jmp 0xcf00
0x0000d275      0f1f00         nop dword [rax]
0x0000d278      41bb01000000   mov r11d, 1
0x0000d27e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000d288      e9a8fdffff     jmp 0xd035
0x0000d28d      0f1f00         nop dword [rax]
0x0000d290      41bb01000000   mov r11d, 1
0x0000d296      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000d2a0      eba0           jmp 0xd242
0x0000d2a2      660f1f440000   nop word [rax + rax]
0x0000d2a8      41bb01000000   mov r11d, 1
0x0000d2ae      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000d2b8      e908fdffff     jmp 0xcfc5
0x0000d2bd      0f1f00         nop dword [rax]
0x0000d2c0      41bb01000000   mov r11d, 1
0x0000d2c6      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000d2d0      e911feffff     jmp 0xd0e6
0x0000d2d5      0f1f00         nop dword [rax]
0x0000d2d8      41bb01000000   mov r11d, 1
0x0000d2de      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000d2e8      e958feffff     jmp 0xd145
0x0000d2ed      0f1f00         nop dword [rax]
0x0000d2f0      41bb01000000   mov r11d, 1
0x0000d2f6      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000d300      e9a8feffff     jmp 0xd1ad
0x0000d305      0f1f00         nop dword [rax]
0x0000d308      41bb01000000   mov r11d, 1
0x0000d30e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000d318      e925ffffff     jmp 0xd242
0x0000d31d      0f1f00         nop dword [rax]
0x0000d320      41bc01000000   mov r12d, 1
0x0000d326      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000d330      e9cbfbffff     jmp 0xcf00
0x0000d335      0f1f00         nop dword [rax]
0x0000d338      31ff           xor edi, edi
0x0000d33a      80790242       cmp byte [rcx + 2], 0x42
0x0000d33e      b800040000     mov eax, 0x400
0x0000d343      400f94c7       sete dil
0x0000d347      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000d34b      e932fbffff     jmp 0xce82
0x0000d350      41bb01000000   mov r11d, 1
0x0000d356      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000d360      e981fdffff     jmp 0xd0e6
0x0000d365      b801000000     mov eax, 1
0x0000d36a      4c89c5         mov rbp, r8
0x0000d36d      e986fbffff     jmp 0xcef8
0x0000d372      b801000000     mov eax, 1
0x0000d377      4c89d5         mov rbp, r10
0x0000d37a      e979fbffff     jmp 0xcef8
0x0000d37f      488d0dda5001.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x22460 ; "xstrtoimax"
0x0000d386      488d35b34f01.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x22340 ; "../coreutils-8.31/lib/xstrtol.c"
0x0000d38d      488d3dcc4f01.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x22360 ; "0 <= strtol_base && strtol_base <= 36"
0x0000d394      ba54000000     mov edx, 0x54                           ; 'T'
0x0000d399      e86252ffff     call sym.imp.__assert_fail
0x0000d39e      e8bd51ffff     call sym.imp.__stack_chk_fail
0x0000d3a3      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d3ad      0f1f00         nop dword [rax]
;-- xstrtoul:
0x0000d3b0      4157           push r15
0x0000d3b2      4156           push r14
0x0000d3b4      4155           push r13
0x0000d3b6      4154           push r12
0x0000d3b8      55             push rbp
0x0000d3b9      53             push rbx
0x0000d3ba      4883ec28       sub rsp, 0x28
0x0000d3be      64488b042528.  mov rax, qword fs:[0x28]
0x0000d3c7      4889442418     mov qword [rsp + 0x18], rax
0x0000d3cc      31c0           xor eax, eax
0x0000d3ce      83fa24         cmp edx, 0x24
0x0000d3d1      0f875e030000   ja 0xd735
0x0000d3d7      488d442410     lea rax, [rsp + 0x10]
0x0000d3dc      4989f7         mov r15, rsi
0x0000d3df      4885f6         test rsi, rsi
0x0000d3e2      4889fd         mov rbp, rdi
0x0000d3e5      89542408       mov dword [rsp + 8], edx
0x0000d3e9      4989ce         mov r14, rcx
0x0000d3ec      4d89c5         mov r13, r8
0x0000d3ef      4c0f44f8       cmove r15, rax
0x0000d3f3      e81850ffff     call sym.imp.__errno_location
0x0000d3f8      c70000000000   mov dword [rax], 0
0x0000d3fe      4989c4         mov r12, rax
0x0000d401      0fb65d00       movzx ebx, byte [rbp]
0x0000d405      e8e655ffff     call sym.imp.__ctype_b_loc
0x0000d40a      8b542408       mov edx, dword [rsp + 8]
0x0000d40e      488b30         mov rsi, qword [rax]
0x0000d411      4889e8         mov rax, rbp
0x0000d414      eb11           jmp 0xd427
0x0000d416      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d420      4883c001       add rax, 1
0x0000d424      0fb618         movzx ebx, byte [rax]
0x0000d427      0fb6cb         movzx ecx, bl
0x0000d42a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x0000d42f      75ef           jne 0xd420
0x0000d431      80fb2d         cmp bl, 0x2d
0x0000d434      7452           je 0xd488
0x0000d436      4c89fe         mov rsi, r15
0x0000d439      4889ef         mov rdi, rbp
0x0000d43c      e8df54ffff     call sym.imp.strtoul
0x0000d441      498b0f         mov rcx, qword [r15]
0x0000d444      4889c3         mov rbx, rax
0x0000d447      4839e9         cmp rcx, rbp
0x0000d44a      742c           je 0xd478
0x0000d44c      418b0424       mov eax, dword [r12]
0x0000d450      85c0           test eax, eax
0x0000d452      7464           je 0xd4b8
0x0000d454      83f822         cmp eax, 0x22
0x0000d457      bd01000000     mov ebp, 1
0x0000d45c      752a           jne 0xd488
0x0000d45e      4d85ed         test r13, r13
0x0000d461      7409           je 0xd46c
0x0000d463      440fb621       movzx r12d, byte [rcx]
0x0000d467      4584e4         test r12b, r12b
0x0000d46a      757b           jne 0xd4e7
0x0000d46c      49891e         mov qword [r14], rbx
0x0000d46f      eb1c           jmp 0xd48d
0x0000d471      0f1f80000000.  nop dword [rax]
0x0000d478      4d85ed         test r13, r13
0x0000d47b      48894c2408     mov qword [rsp + 8], rcx
0x0000d480      753e           jne 0xd4c0
0x0000d482      660f1f440000   nop word [rax + rax]
0x0000d488      bd04000000     mov ebp, 4
0x0000d48d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000d492      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000d49b      89e8           mov eax, ebp
0x0000d49d      0f858d020000   jne 0xd730
0x0000d4a3      4883c428       add rsp, 0x28
0x0000d4a7      5b             pop rbx
0x0000d4a8      5d             pop rbp
0x0000d4a9      415c           pop r12
0x0000d4ab      415d           pop r13
0x0000d4ad      415e           pop r14
0x0000d4af      415f           pop r15
0x0000d4b1      c3             ret
0x0000d4b2      660f1f440000   nop word [rax + rax]
0x0000d4b8      31ed           xor ebp, ebp
0x0000d4ba      eba2           jmp 0xd45e
0x0000d4bc      0f1f4000       nop dword [rax]
0x0000d4c0      440fb66500     movzx r12d, byte [rbp]
0x0000d4c5      4584e4         test r12b, r12b
0x0000d4c8      74be           je 0xd488
0x0000d4ca      410fbef4       movsx esi, r12b
0x0000d4ce      4c89ef         mov rdi, r13
0x0000d4d1      31ed           xor ebp, ebp
0x0000d4d3      e8c850ffff     call sym.imp.strchr
0x0000d4d8      4885c0         test rax, rax
0x0000d4db      bb01000000     mov ebx, 1
0x0000d4e0      488b4c2408     mov rcx, qword [rsp + 8]
0x0000d4e5      74a1           je 0xd488
0x0000d4e7      410fbef4       movsx esi, r12b
0x0000d4eb      4c89ef         mov rdi, r13
0x0000d4ee      48894c2408     mov qword [rsp + 8], rcx
0x0000d4f3      e8a850ffff     call sym.imp.strchr
0x0000d4f8      4885c0         test rax, rax
0x0000d4fb      488b4c2408     mov rcx, qword [rsp + 8]
0x0000d500      0f84c6000000   je 0xd5cc
0x0000d506      418d4424bb     lea eax, [r12 - 0x45]
0x0000d50b      3c2f           cmp al, 0x2f
0x0000d50d      7751           ja 0xd560
0x0000d50f      48ba45893000.  movabs rdx, 0x814400308945
0x0000d519      480fa3c2       bt rdx, rax
0x0000d51d      7341           jae 0xd560
0x0000d51f      be30000000     mov esi, 0x30                           ; '0'
0x0000d524      4c89ef         mov rdi, r13
0x0000d527      48894c2408     mov qword [rsp + 8], rcx
0x0000d52c      e86f50ffff     call sym.imp.strchr
0x0000d531      4885c0         test rax, rax
0x0000d534      488b4c2408     mov rcx, qword [rsp + 8]
0x0000d539      7425           je 0xd560
0x0000d53b      0fb64101       movzx eax, byte [rcx + 1]
0x0000d53f      3c44           cmp al, 0x44
0x0000d541      740c           je 0xd54f
0x0000d543      3c69           cmp al, 0x69
0x0000d545      0f84cd010000   je 0xd718
0x0000d54b      3c42           cmp al, 0x42
0x0000d54d      7511           jne 0xd560
0x0000d54f      bf02000000     mov edi, 2
0x0000d554      bee8030000     mov esi, 0x3e8
0x0000d559      eb0f           jmp 0xd56a
0x0000d55b      0f1f440000     nop dword [rax + rax]
0x0000d560      bf01000000     mov edi, 1
0x0000d565      be00040000     mov esi, 0x400
0x0000d56a      4183ec42       sub r12d, 0x42
0x0000d56e      4180fc35       cmp r12b, 0x35
0x0000d572      7758           ja 0xd5cc
0x0000d574      488d15f54e01.  lea rdx, [0x00022470]
0x0000d57b      450fb6e4       movzx r12d, r12b
0x0000d57f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x0000d583      4801d0         add rax, rdx
0x0000d586      ffe0           jmp rax
0x0000d588      4889d8         mov rax, rbx
0x0000d58b      48f7e6         mul rsi
0x0000d58e      0f80ed010000   jo 0xd781
0x0000d594      4531c0         xor r8d, r8d
0x0000d597      48f7e6         mul rsi
0x0000d59a      0f80d2010000   jo 0xd772
0x0000d5a0      4889c3         mov rbx, rax
0x0000d5a3      4409c5         or ebp, r8d
0x0000d5a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d5b0      4863ff         movsxd rdi, edi
0x0000d5b3      89e8           mov eax, ebp
0x0000d5b5      4801f9         add rcx, rdi
0x0000d5b8      83c802         or eax, 2
0x0000d5bb      49890f         mov qword [r15], rcx
0x0000d5be      803900         cmp byte [rcx], 0
0x0000d5c1      49891e         mov qword [r14], rbx
0x0000d5c4      0f45e8         cmovne ebp, eax
0x0000d5c7      e9c1feffff     jmp 0xd48d
0x0000d5cc      49891e         mov qword [r14], rbx
0x0000d5cf      83cd02         or ebp, 2
0x0000d5d2      e9b6feffff     jmp 0xd48d
0x0000d5d7      ba02000000     mov edx, 2
0x0000d5dc      4889d0         mov rax, rdx
0x0000d5df      48f7e3         mul rbx
0x0000d5e2      0f8096000000   jo 0xd67e
0x0000d5e8      4801db         add rbx, rbx
0x0000d5eb      ebc3           jmp 0xd5b0
0x0000d5ed      ba00020000     mov edx, 0x200
0x0000d5f2      4889d0         mov rax, rdx
0x0000d5f5      48f7e3         mul rbx
0x0000d5f8      0f8080000000   jo 0xd67e
0x0000d5fe      48c1e309       shl rbx, 9
0x0000d602      ebac           jmp 0xd5b0
0x0000d604      41b807000000   mov r8d, 7
0x0000d60a      4531c9         xor r9d, r9d
0x0000d60d      0f1f00         nop dword [rax]
0x0000d610      4889d8         mov rax, rbx
0x0000d613      48f7e6         mul rsi
0x0000d616      4889c3         mov rbx, rax
0x0000d619      0f808f010000   jo 0xd7ae
0x0000d61f      4183e801       sub r8d, 1
0x0000d623      75eb           jne 0xd610
0x0000d625      4409cd         or ebp, r9d
0x0000d628      eb86           jmp 0xd5b0
0x0000d62a      41b808000000   mov r8d, 8
0x0000d630      4531c9         xor r9d, r9d
0x0000d633      0f1f440000     nop dword [rax + rax]
0x0000d638      4889d8         mov rax, rbx
0x0000d63b      48f7e6         mul rsi
0x0000d63e      4889c3         mov rbx, rax
0x0000d641      0f8049010000   jo 0xd790
0x0000d647      4183e801       sub r8d, 1
0x0000d64b      75eb           jne 0xd638
0x0000d64d      ebd6           jmp 0xd625
0x0000d64f      41b804000000   mov r8d, 4
0x0000d655      4531c9         xor r9d, r9d
0x0000d658      4889d8         mov rax, rbx
0x0000d65b      48f7e6         mul rsi
0x0000d65e      4889c3         mov rbx, rax
0x0000d661      0f80fc000000   jo 0xd763
0x0000d667      4183e801       sub r8d, 1
0x0000d66b      75eb           jne 0xd658
0x0000d66d      ebb6           jmp 0xd625
0x0000d66f      4889d8         mov rax, rbx
0x0000d672      48f7e6         mul rsi
0x0000d675      4889c3         mov rbx, rax
0x0000d678      0f8132ffffff   jno 0xd5b0
0x0000d67e      bd01000000     mov ebp, 1
0x0000d683      4883cbff       or rbx, 0xffffffffffffffff
0x0000d687      e924ffffff     jmp 0xd5b0
0x0000d68c      0f1f4000       nop dword [rax]
0x0000d690      41b805000000   mov r8d, 5
0x0000d696      4531c9         xor r9d, r9d
0x0000d699      4889d8         mov rax, rbx
0x0000d69c      48f7e6         mul rsi
0x0000d69f      4889c3         mov rbx, rax
0x0000d6a2      0f80f7000000   jo 0xd79f
0x0000d6a8      4183e801       sub r8d, 1
0x0000d6ac      75eb           jne 0xd699
0x0000d6ae      e972ffffff     jmp 0xd625
0x0000d6b3      41b806000000   mov r8d, 6
0x0000d6b9      4531c9         xor r9d, r9d
0x0000d6bc      4889d8         mov rax, rbx
0x0000d6bf      48f7e6         mul rsi
0x0000d6c2      4889c3         mov rbx, rax
0x0000d6c5      0f8089000000   jo 0xd754
0x0000d6cb      4183e801       sub r8d, 1
0x0000d6cf      75eb           jne 0xd6bc
0x0000d6d1      e94fffffff     jmp 0xd625
0x0000d6d6      ba00040000     mov edx, 0x400
0x0000d6db      4889d0         mov rax, rdx
0x0000d6de      48f7e3         mul rbx
0x0000d6e1      709b           jo 0xd67e
0x0000d6e3      48c1e30a       shl rbx, 0xa
0x0000d6e7      e9c4feffff     jmp 0xd5b0
0x0000d6ec      4889d8         mov rax, rbx
0x0000d6ef      48f7e6         mul rsi
0x0000d6f2      0f80c5000000   jo 0xd7bd
0x0000d6f8      4531c0         xor r8d, r8d
0x0000d6fb      48f7e6         mul rsi
0x0000d6fe      0f8193feffff   jno 0xd597
0x0000d704      41b801000000   mov r8d, 1
0x0000d70a      4883c8ff       or rax, 0xffffffffffffffff
0x0000d70e      e984feffff     jmp 0xd597
0x0000d713      0f1f440000     nop dword [rax + rax]
0x0000d718      31ff           xor edi, edi
0x0000d71a      80790242       cmp byte [rcx + 2], 0x42
0x0000d71e      be00040000     mov esi, 0x400
0x0000d723      400f94c7       sete dil
0x0000d727      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000d72b      e93afeffff     jmp 0xd56a
0x0000d730      e82b4effff     call sym.imp.__stack_chk_fail
0x0000d735      488d0d0c4e01.  lea rcx, obj.__PRETTY_FUNCTION__.4162_1 ; 0x22548 ; "xstrtoul"
0x0000d73c      488d35fd4b01.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x22340 ; "../coreutils-8.31/lib/xstrtol.c"
0x0000d743      488d3d164c01.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x22360 ; "0 <= strtol_base && strtol_base <= 36"
0x0000d74a      ba54000000     mov edx, 0x54                           ; 'T'
0x0000d74f      e8ac4effff     call sym.imp.__assert_fail
0x0000d754      41b901000000   mov r9d, 1
0x0000d75a      4883cbff       or rbx, 0xffffffffffffffff
0x0000d75e      e968ffffff     jmp 0xd6cb
0x0000d763      41b901000000   mov r9d, 1
0x0000d769      4883cbff       or rbx, 0xffffffffffffffff
0x0000d76d      e9f5feffff     jmp 0xd667
0x0000d772      41b801000000   mov r8d, 1
0x0000d778      4883cbff       or rbx, 0xffffffffffffffff
0x0000d77c      e922feffff     jmp 0xd5a3
0x0000d781      4883c8ff       or rax, 0xffffffffffffffff
0x0000d785      41b801000000   mov r8d, 1
0x0000d78b      e907feffff     jmp 0xd597
0x0000d790      41b901000000   mov r9d, 1
0x0000d796      4883cbff       or rbx, 0xffffffffffffffff
0x0000d79a      e9a8feffff     jmp 0xd647
0x0000d79f      41b901000000   mov r9d, 1
0x0000d7a5      4883cbff       or rbx, 0xffffffffffffffff
0x0000d7a9      e9fafeffff     jmp 0xd6a8
0x0000d7ae      41b901000000   mov r9d, 1
0x0000d7b4      4883cbff       or rbx, 0xffffffffffffffff
0x0000d7b8      e962feffff     jmp 0xd61f
0x0000d7bd      41b801000000   mov r8d, 1
0x0000d7c3      4883c8ff       or rax, 0xffffffffffffffff
0x0000d7c7      e92fffffff     jmp 0xd6fb
0x0000d7cc      0f1f4000       nop dword [rax]
;-- xstrtol_fatal:
0x0000d7d0      4155           push r13
0x0000d7d2      4154           push r12
0x0000d7d4      4189f2         mov r10d, esi
0x0000d7d7      55             push rbp
0x0000d7d8      53             push rbx
0x0000d7d9      4d89c4         mov r12, r8
0x0000d7dc      4883ec18       sub rsp, 0x18
0x0000d7e0      64488b042528.  mov rax, qword fs:[0x28]
0x0000d7e9      4889442408     mov qword [rsp + 8], rax
0x0000d7ee      31c0           xor eax, eax
0x0000d7f0      83ff03         cmp edi, 3
0x0000d7f3      8b2d2fa82100   mov ebp, dword [obj.exit_failure]       ; [0x228028:4]=1
0x0000d7f9      7759           ja 0xd854
0x0000d7fb      83ff02         cmp edi, 2
0x0000d7fe      734b           jae 0xd84b
0x0000d800      83ef01         sub edi, 1
0x0000d803      488d35624d01.  lea rsi, str.s_s_argument___s__too_large ; 0x2256c ; "%s%s argument '%s' too large"
0x0000d80a      753a           jne 0xd846
0x0000d80c      4585d2         test r10d, r10d
0x0000d80f      4963c2         movsxd rax, r10d
0x0000d812      784e           js 0xd862
0x0000d814      48c1e005       shl rax, 5
0x0000d818      488d1d6a4d01.  lea rbx, [0x00022589]                   ; "--"
0x0000d81f      4c8b2c01       mov r13, qword [rcx + rax]
0x0000d823      ba05000000     mov edx, 5
0x0000d828      31ff           xor edi, edi
0x0000d82a      e8e14cffff     call sym.imp.dcgettext
0x0000d82f      4d89e1         mov r9, r12
0x0000d832      4889c2         mov rdx, rax
0x0000d835      4d89e8         mov r8, r13
0x0000d838      4889d9         mov rcx, rbx
0x0000d83b      31f6           xor esi, esi
0x0000d83d      89ef           mov edi, ebp
0x0000d83f      31c0           xor eax, eax
0x0000d841      e85a50ffff     call sym.imp.error
0x0000d846      e8b54bffff     call sym.imp.abort
0x0000d84b      488d353e4d01.  lea rsi, str.invalid_suffix_in__s_s_argument___s ; 0x22590 ; "invalid suffix in %s%s argument '%s'"
0x0000d852      ebb8           jmp 0xd80c
0x0000d854      83ff04         cmp edi, 4
0x0000d857      488d35f34c01.  lea rsi, str.invalid__s_s_argument___s  ; 0x22551 ; "invalid %s%s argument '%s'"
0x0000d85e      74ac           je 0xd80c
0x0000d860      ebe4           jmp 0xd846
0x0000d862      488d1d204d01.  lea rbx, [0x00022589]                   ; "--"
0x0000d869      88542406       mov byte [rsp + 6], dl
0x0000d86d      c644240700     mov byte [rsp + 7], 0
0x0000d872      4c8d6c2406     lea r13, [rsp + 6]
0x0000d877      4829c3         sub rbx, rax
0x0000d87a      eba7           jmp 0xd823
0x0000d87c      0f1f4000       nop dword [rax]
;-- xstrtoumax:
0x0000d880      4157           push r15
0x0000d882      4156           push r14
0x0000d884      4155           push r13
0x0000d886      4154           push r12
0x0000d888      55             push rbp
0x0000d889      53             push rbx
0x0000d88a      4883ec28       sub rsp, 0x28
0x0000d88e      64488b042528.  mov rax, qword fs:[0x28]
0x0000d897      4889442418     mov qword [rsp + 0x18], rax
0x0000d89c      31c0           xor eax, eax
0x0000d89e      83fa24         cmp edx, 0x24
0x0000d8a1      0f875e030000   ja 0xdc05
0x0000d8a7      488d442410     lea rax, [rsp + 0x10]
0x0000d8ac      4989f7         mov r15, rsi
0x0000d8af      4885f6         test rsi, rsi
0x0000d8b2      4889fd         mov rbp, rdi
0x0000d8b5      89542408       mov dword [rsp + 8], edx
0x0000d8b9      4989ce         mov r14, rcx
0x0000d8bc      4d89c5         mov r13, r8
0x0000d8bf      4c0f44f8       cmove r15, rax
0x0000d8c3      e8484bffff     call sym.imp.__errno_location
0x0000d8c8      c70000000000   mov dword [rax], 0
0x0000d8ce      4989c4         mov r12, rax
0x0000d8d1      0fb65d00       movzx ebx, byte [rbp]
0x0000d8d5      e81651ffff     call sym.imp.__ctype_b_loc
0x0000d8da      8b542408       mov edx, dword [rsp + 8]
0x0000d8de      488b30         mov rsi, qword [rax]
0x0000d8e1      4889e8         mov rax, rbp
0x0000d8e4      eb11           jmp 0xd8f7
0x0000d8e6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d8f0      4883c001       add rax, 1
0x0000d8f4      0fb618         movzx ebx, byte [rax]
0x0000d8f7      0fb6cb         movzx ecx, bl
0x0000d8fa      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x0000d8ff      75ef           jne 0xd8f0
0x0000d901      80fb2d         cmp bl, 0x2d
0x0000d904      7452           je 0xd958
0x0000d906      31c9           xor ecx, ecx
0x0000d908      4c89fe         mov rsi, r15
0x0000d90b      4889ef         mov rdi, rbp
0x0000d90e      e8fd4cffff     call sym.imp.__strtoul_internal
0x0000d913      498b0f         mov rcx, qword [r15]
0x0000d916      4889c3         mov rbx, rax
0x0000d919      4839e9         cmp rcx, rbp
0x0000d91c      742a           je 0xd948
0x0000d91e      418b0424       mov eax, dword [r12]
0x0000d922      85c0           test eax, eax
0x0000d924      7462           je 0xd988
0x0000d926      83f822         cmp eax, 0x22
0x0000d929      bd01000000     mov ebp, 1
0x0000d92e      7528           jne 0xd958
0x0000d930      4d85ed         test r13, r13
0x0000d933      7409           je 0xd93e
0x0000d935      440fb621       movzx r12d, byte [rcx]
0x0000d939      4584e4         test r12b, r12b
0x0000d93c      7579           jne 0xd9b7
0x0000d93e      49891e         mov qword [r14], rbx
0x0000d941      eb1a           jmp 0xd95d
0x0000d943      0f1f440000     nop dword [rax + rax]
0x0000d948      4d85ed         test r13, r13
0x0000d94b      48894c2408     mov qword [rsp + 8], rcx
0x0000d950      753e           jne 0xd990
0x0000d952      660f1f440000   nop word [rax + rax]
0x0000d958      bd04000000     mov ebp, 4
0x0000d95d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000d962      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000d96b      89e8           mov eax, ebp
0x0000d96d      0f858d020000   jne 0xdc00
0x0000d973      4883c428       add rsp, 0x28
0x0000d977      5b             pop rbx
0x0000d978      5d             pop rbp
0x0000d979      415c           pop r12
0x0000d97b      415d           pop r13
0x0000d97d      415e           pop r14
0x0000d97f      415f           pop r15
0x0000d981      c3             ret
0x0000d982      660f1f440000   nop word [rax + rax]
0x0000d988      31ed           xor ebp, ebp
0x0000d98a      eba4           jmp 0xd930
0x0000d98c      0f1f4000       nop dword [rax]
0x0000d990      440fb66500     movzx r12d, byte [rbp]
0x0000d995      4584e4         test r12b, r12b
0x0000d998      74be           je 0xd958
0x0000d99a      410fbef4       movsx esi, r12b
0x0000d99e      4c89ef         mov rdi, r13
0x0000d9a1      31ed           xor ebp, ebp
0x0000d9a3      e8f84bffff     call sym.imp.strchr
0x0000d9a8      4885c0         test rax, rax
0x0000d9ab      bb01000000     mov ebx, 1
0x0000d9b0      488b4c2408     mov rcx, qword [rsp + 8]
0x0000d9b5      74a1           je 0xd958
0x0000d9b7      410fbef4       movsx esi, r12b
0x0000d9bb      4c89ef         mov rdi, r13
0x0000d9be      48894c2408     mov qword [rsp + 8], rcx
0x0000d9c3      e8d84bffff     call sym.imp.strchr
0x0000d9c8      4885c0         test rax, rax
0x0000d9cb      488b4c2408     mov rcx, qword [rsp + 8]
0x0000d9d0      0f84c6000000   je 0xda9c
0x0000d9d6      418d4424bb     lea eax, [r12 - 0x45]
0x0000d9db      3c2f           cmp al, 0x2f
0x0000d9dd      7751           ja 0xda30
0x0000d9df      48ba45893000.  movabs rdx, 0x814400308945
0x0000d9e9      480fa3c2       bt rdx, rax
0x0000d9ed      7341           jae 0xda30
0x0000d9ef      be30000000     mov esi, 0x30                           ; '0'
0x0000d9f4      4c89ef         mov rdi, r13
0x0000d9f7      48894c2408     mov qword [rsp + 8], rcx
0x0000d9fc      e89f4bffff     call sym.imp.strchr
0x0000da01      4885c0         test rax, rax
0x0000da04      488b4c2408     mov rcx, qword [rsp + 8]
0x0000da09      7425           je 0xda30
0x0000da0b      0fb64101       movzx eax, byte [rcx + 1]
0x0000da0f      3c44           cmp al, 0x44
0x0000da11      740c           je 0xda1f
0x0000da13      3c69           cmp al, 0x69
0x0000da15      0f84cd010000   je 0xdbe8
0x0000da1b      3c42           cmp al, 0x42
0x0000da1d      7511           jne 0xda30
0x0000da1f      bf02000000     mov edi, 2
0x0000da24      bee8030000     mov esi, 0x3e8
0x0000da29      eb0f           jmp 0xda3a
0x0000da2b      0f1f440000     nop dword [rax + rax]
0x0000da30      bf01000000     mov edi, 1
0x0000da35      be00040000     mov esi, 0x400
0x0000da3a      4183ec42       sub r12d, 0x42
0x0000da3e      4180fc35       cmp r12b, 0x35
0x0000da42      7758           ja 0xda9c
0x0000da44      488d156d4b01.  lea rdx, [0x000225b8]
0x0000da4b      450fb6e4       movzx r12d, r12b
0x0000da4f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x0000da53      4801d0         add rax, rdx
0x0000da56      ffe0           jmp rax
0x0000da58      4889d8         mov rax, rbx
0x0000da5b      48f7e6         mul rsi
0x0000da5e      0f80ed010000   jo 0xdc51
0x0000da64      4531c0         xor r8d, r8d
0x0000da67      48f7e6         mul rsi
0x0000da6a      0f80d2010000   jo 0xdc42
0x0000da70      4889c3         mov rbx, rax
0x0000da73      4409c5         or ebp, r8d
0x0000da76      662e0f1f8400.  nop word cs:[rax + rax]
0x0000da80      4863ff         movsxd rdi, edi
0x0000da83      89e8           mov eax, ebp
0x0000da85      4801f9         add rcx, rdi
0x0000da88      83c802         or eax, 2
0x0000da8b      49890f         mov qword [r15], rcx
0x0000da8e      803900         cmp byte [rcx], 0
0x0000da91      49891e         mov qword [r14], rbx
0x0000da94      0f45e8         cmovne ebp, eax
0x0000da97      e9c1feffff     jmp 0xd95d
0x0000da9c      49891e         mov qword [r14], rbx
0x0000da9f      83cd02         or ebp, 2
0x0000daa2      e9b6feffff     jmp 0xd95d
0x0000daa7      ba02000000     mov edx, 2
0x0000daac      4889d0         mov rax, rdx
0x0000daaf      48f7e3         mul rbx
0x0000dab2      0f8096000000   jo 0xdb4e
0x0000dab8      4801db         add rbx, rbx
0x0000dabb      ebc3           jmp 0xda80
0x0000dabd      ba00020000     mov edx, 0x200
0x0000dac2      4889d0         mov rax, rdx
0x0000dac5      48f7e3         mul rbx
0x0000dac8      0f8080000000   jo 0xdb4e
0x0000dace      48c1e309       shl rbx, 9
0x0000dad2      ebac           jmp 0xda80
0x0000dad4      41b807000000   mov r8d, 7
0x0000dada      4531c9         xor r9d, r9d
0x0000dadd      0f1f00         nop dword [rax]
0x0000dae0      4889d8         mov rax, rbx
0x0000dae3      48f7e6         mul rsi
0x0000dae6      4889c3         mov rbx, rax
0x0000dae9      0f808f010000   jo 0xdc7e
0x0000daef      4183e801       sub r8d, 1
0x0000daf3      75eb           jne 0xdae0
0x0000daf5      4409cd         or ebp, r9d
0x0000daf8      eb86           jmp 0xda80
0x0000dafa      41b808000000   mov r8d, 8
0x0000db00      4531c9         xor r9d, r9d
0x0000db03      0f1f440000     nop dword [rax + rax]
0x0000db08      4889d8         mov rax, rbx
0x0000db0b      48f7e6         mul rsi
0x0000db0e      4889c3         mov rbx, rax
0x0000db11      0f8049010000   jo 0xdc60
0x0000db17      4183e801       sub r8d, 1
0x0000db1b      75eb           jne 0xdb08
0x0000db1d      ebd6           jmp 0xdaf5
0x0000db1f      41b804000000   mov r8d, 4
0x0000db25      4531c9         xor r9d, r9d
0x0000db28      4889d8         mov rax, rbx
0x0000db2b      48f7e6         mul rsi
0x0000db2e      4889c3         mov rbx, rax
0x0000db31      0f80fc000000   jo 0xdc33
0x0000db37      4183e801       sub r8d, 1
0x0000db3b      75eb           jne 0xdb28
0x0000db3d      ebb6           jmp 0xdaf5
0x0000db3f      4889d8         mov rax, rbx
0x0000db42      48f7e6         mul rsi
0x0000db45      4889c3         mov rbx, rax
0x0000db48      0f8132ffffff   jno 0xda80
0x0000db4e      bd01000000     mov ebp, 1
0x0000db53      4883cbff       or rbx, 0xffffffffffffffff
0x0000db57      e924ffffff     jmp 0xda80
0x0000db5c      0f1f4000       nop dword [rax]
0x0000db60      41b805000000   mov r8d, 5
0x0000db66      4531c9         xor r9d, r9d
0x0000db69      4889d8         mov rax, rbx
0x0000db6c      48f7e6         mul rsi
0x0000db6f      4889c3         mov rbx, rax
0x0000db72      0f80f7000000   jo 0xdc6f
0x0000db78      4183e801       sub r8d, 1
0x0000db7c      75eb           jne 0xdb69
0x0000db7e      e972ffffff     jmp 0xdaf5
0x0000db83      41b806000000   mov r8d, 6
0x0000db89      4531c9         xor r9d, r9d
0x0000db8c      4889d8         mov rax, rbx
0x0000db8f      48f7e6         mul rsi
0x0000db92      4889c3         mov rbx, rax
0x0000db95      0f8089000000   jo 0xdc24
0x0000db9b      4183e801       sub r8d, 1
0x0000db9f      75eb           jne 0xdb8c
0x0000dba1      e94fffffff     jmp 0xdaf5
0x0000dba6      ba00040000     mov edx, 0x400
0x0000dbab      4889d0         mov rax, rdx
0x0000dbae      48f7e3         mul rbx
0x0000dbb1      709b           jo 0xdb4e
0x0000dbb3      48c1e30a       shl rbx, 0xa
0x0000dbb7      e9c4feffff     jmp 0xda80
0x0000dbbc      4889d8         mov rax, rbx
0x0000dbbf      48f7e6         mul rsi
0x0000dbc2      0f80c5000000   jo 0xdc8d
0x0000dbc8      4531c0         xor r8d, r8d
0x0000dbcb      48f7e6         mul rsi
0x0000dbce      0f8193feffff   jno 0xda67
0x0000dbd4      41b801000000   mov r8d, 1
0x0000dbda      4883c8ff       or rax, 0xffffffffffffffff
0x0000dbde      e984feffff     jmp 0xda67
0x0000dbe3      0f1f440000     nop dword [rax + rax]
0x0000dbe8      31ff           xor edi, edi
0x0000dbea      80790242       cmp byte [rcx + 2], 0x42
0x0000dbee      be00040000     mov esi, 0x400
0x0000dbf3      400f94c7       sete dil
0x0000dbf7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000dbfb      e93afeffff     jmp 0xda3a
0x0000dc00      e85b49ffff     call sym.imp.__stack_chk_fail
0x0000dc05      488d0d844a01.  lea rcx, obj.__PRETTY_FUNCTION__.4162_2 ; 0x22690 ; "xstrtoumax"
0x0000dc0c      488d352d4701.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x22340 ; "../coreutils-8.31/lib/xstrtol.c"
0x0000dc13      488d3d464701.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x22360 ; "0 <= strtol_base && strtol_base <= 36"
0x0000dc1a      ba54000000     mov edx, 0x54                           ; 'T'
0x0000dc1f      e8dc49ffff     call sym.imp.__assert_fail
0x0000dc24      41b901000000   mov r9d, 1
0x0000dc2a      4883cbff       or rbx, 0xffffffffffffffff
0x0000dc2e      e968ffffff     jmp 0xdb9b
0x0000dc33      41b901000000   mov r9d, 1
0x0000dc39      4883cbff       or rbx, 0xffffffffffffffff
0x0000dc3d      e9f5feffff     jmp 0xdb37
0x0000dc42      41b801000000   mov r8d, 1
0x0000dc48      4883cbff       or rbx, 0xffffffffffffffff
0x0000dc4c      e922feffff     jmp 0xda73
0x0000dc51      4883c8ff       or rax, 0xffffffffffffffff
0x0000dc55      41b801000000   mov r8d, 1
0x0000dc5b      e907feffff     jmp 0xda67
0x0000dc60      41b901000000   mov r9d, 1
0x0000dc66      4883cbff       or rbx, 0xffffffffffffffff
0x0000dc6a      e9a8feffff     jmp 0xdb17
0x0000dc6f      41b901000000   mov r9d, 1
0x0000dc75      4883cbff       or rbx, 0xffffffffffffffff
0x0000dc79      e9fafeffff     jmp 0xdb78
0x0000dc7e      41b901000000   mov r9d, 1
0x0000dc84      4883cbff       or rbx, 0xffffffffffffffff
0x0000dc88      e962feffff     jmp 0xdaef
0x0000dc8d      41b801000000   mov r8d, 1
0x0000dc93      4883c8ff       or rax, 0xffffffffffffffff
0x0000dc97      e92fffffff     jmp 0xdbcb
0x0000dc9c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x0000dca0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x0000dca2      55             push rbp
0x0000dca3      53             push rbx
0x0000dca4      4889fb         mov rbx, rdi
0x0000dca7      e8844affff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000dcac      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000dcae      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x0000dcb1      7854           js 0xdd07                               ; ../coreutils-8.31/lib/fclose.c:66
0x0000dcb3      e8584bffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x0000dcb8      85c0           test eax, eax
0x0000dcba      752c           jne 0xdce8
0x0000dcbc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000dcbf      e85c000000     call sym.rpl_fflush
0x0000dcc4      85c0           test eax, eax
0x0000dcc6      743c           je 0xdd04
0x0000dcc8      e84347ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000dccd      448b20         mov r12d, dword [rax]
0x0000dcd0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000dcd3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x0000dcd6      e81548ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000dcdb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000dcde      7530           jne 0xdd10
0x0000dce0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000dce1      5d             pop rbp
0x0000dce2      415c           pop r12
0x0000dce4      c3             ret
0x0000dce5      0f1f00         nop dword [rax]
0x0000dce8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000dceb      e8404affff     call sym.imp.fileno
0x0000dcf0      31f6           xor esi, esi
0x0000dcf2      ba01000000     mov edx, 1
0x0000dcf7      89c7           mov edi, eax
0x0000dcf9      e8f248ffff     call sym.imp.lseek
0x0000dcfe      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000dd02      75b8           jne 0xdcbc
0x0000dd04      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000dd07      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000dd08      5d             pop rbp
0x0000dd09      415c           pop r12
0x0000dd0b      e9e047ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x0000dd10      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x0000dd14      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x0000dd19      ebc5           jmp 0xdce0
0x0000dd1b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x0000dd20      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x0000dd23      53             push rbx
0x0000dd24      4889fb         mov rbx, rdi
0x0000dd27      7411           je 0xdd3a                               ; ../coreutils-8.31/lib/fflush.c:150
0x0000dd29      e8e24affff     call sym.imp.__freading
0x0000dd2e      85c0           test eax, eax
0x0000dd30      7408           je 0xdd3a
0x0000dd32      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x0000dd38      750e           jne 0xdd48
0x0000dd3a      4889df         mov rdi, rbx
0x0000dd3d      5b             pop rbx
0x0000dd3e      e95d4affff     jmp sym.imp.fflush
0x0000dd43      0f1f440000     nop dword [rax + rax]
0x0000dd48      4889df         mov rdi, rbx
0x0000dd4b      ba01000000     mov edx, 1
0x0000dd50      31f6           xor esi, esi
0x0000dd52      e809000000     call sym.rpl_fseeko
0x0000dd57      4889df         mov rdi, rbx
0x0000dd5a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000dd5b      e9404affff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x0000dd60      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x0000dd64      48394710       cmp qword [rdi + 0x10], rax
0x0000dd68      7406           je 0xdd70                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000dd6a      e9514bffff     jmp sym.imp.fseeko
0x0000dd6f      90             nop
0x0000dd70      488b4720       mov rax, qword [rdi + 0x20]
0x0000dd74      48394728       cmp qword [rdi + 0x28], rax
0x0000dd78      75f0           jne 0xdd6a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000dd7a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000dd7f      75e9           jne 0xdd6a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x0000dd81      4154           push r12
0x0000dd83      55             push rbp
0x0000dd84      4189d4         mov r12d, edx
0x0000dd87      53             push rbx
0x0000dd88      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000dd8b      4889fb         mov rbx, rdi
0x0000dd8e      e89d49ffff     call sym.imp.fileno
0x0000dd93      4489e2         mov edx, r12d
0x0000dd96      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x0000dd99      89c7           mov edi, eax
0x0000dd9b      e85048ffff     call sym.imp.lseek
0x0000dda0      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000dda4      740c           je 0xddb2
0x0000dda6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x0000dda9      488983900000.  mov qword [rbx + 0x90], rax
0x0000ddb0      31c0           xor eax, eax
0x0000ddb2      5b             pop rbx
0x0000ddb3      5d             pop rbp
0x0000ddb4      415c           pop r12
0x0000ddb6      c3             ret
0x0000ddb7      660f1f840000.  nop word [rax + rax]
;-- AD_compare:
0x0000ddc0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts-cycle.c:33
0x0000ddc2      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/fts-cycle.c:37
0x0000ddc6      48395708       cmp qword [rdi + 8], rdx
0x0000ddca      7404           je 0xddd0
0x0000ddcc      f3c3           ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:38
0x0000ddce      6690           nop
0x0000ddd0      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/fts-cycle.c:37
0x0000ddd3      483907         cmp qword [rdi], rax
0x0000ddd6      0f94c0         sete al
0x0000ddd9      c3             ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:38
0x0000ddda      660f1f440000   nop word [rax + rax]
;-- AD_hash:
0x0000dde0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fts-cycle.c:42
0x0000dde4      31d2           xor edx, edx
0x0000dde6      48f7f6         div rsi
0x0000dde9      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts-cycle.c:45
0x0000ddec      c3             ret
0x0000dded      0f1f00         nop dword [rax]
;-- dev_type_hash:
0x0000ddf0      488b07         mov rax, qword [rdi]                    ; ../coreutils-8.31/lib/fts.c:690
0x0000ddf3      31d2           xor edx, edx
0x0000ddf5      48f7f6         div rsi
0x0000ddf8      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts.c:694
0x0000ddfb      c3             ret
0x0000ddfc      0f1f4000       nop dword [rax]
;-- dev_type_compare:
0x0000de00      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/fts.c:698
0x0000de03      483907         cmp qword [rdi], rax
0x0000de06      0f94c0         sete al
0x0000de09      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:702
0x0000de0a      660f1f440000   nop word [rax + rax]
;-- fts_compare_ino:
0x0000de10      488b17         mov rdx, qword [rdi]                    ; ../coreutils-8.31/lib/fts.c:1226
0x0000de13      488b06         mov rax, qword [rsi]
0x0000de16      488b80800000.  mov rax, qword [rax + 0x80]             ; ../coreutils-8.31/lib/fts.c:1228
0x0000de1d      483982800000.  cmp qword [rdx + 0x80], rax
0x0000de24      720a           jb 0xde30
0x0000de26      0f97c0         seta al
0x0000de29      0fb6c0         movzx eax, al
0x0000de2c      c3             ret
0x0000de2d      0f1f00         nop dword [rax]
0x0000de30      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000de35      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:1229
0x0000de36      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_stat:
0x0000de40      4154           push r12                                ; ../coreutils-8.31/lib/fts.c:1800
0x0000de42      55             push rbp
0x0000de43      4889f5         mov rbp, rsi
0x0000de46      53             push rbx
0x0000de47      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:1803
0x0000de4c      488d5e78       lea rbx, [rsi + 0x78]                   ; ../coreutils-8.31/lib/fts.c:1801
0x0000de50      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/fts.c:1800
0x0000de53      8b4748         mov eax, dword [rdi + 0x48]
0x0000de56      488b7630       mov rsi, qword [rsi + 0x30]
0x0000de5a      7564           jne 0xdec0                              ; ../coreutils-8.31/lib/fts.c:1803
0x0000de5c      a801           test al, 1
0x0000de5e      7460           je 0xdec0
0x0000de60      4889da         mov rdx, rbx                            ; stat.h:451   return __xstat (_STAT_VER, __path, __statbuf);
0x0000de63      bf01000000     mov edi, 1
0x0000de68      e8d348ffff     call sym.imp.__xstat
0x0000de6d      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1812
0x0000de6f      747a           je 0xdeeb
0x0000de71      e89a45ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1813
0x0000de76      4989c4         mov r12, rax
0x0000de79      8b00           mov eax, dword [rax]
0x0000de7b      83f802         cmp eax, 2
0x0000de7e      0f840c010000   je 0xdf90
0x0000de84      488d7b08       lea rdi, [rbx + 8]                      ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x0000de88      894540         mov dword [rbp + 0x40], eax             ; ../coreutils-8.31/lib/fts.c:1823
0x0000de8b      48c745780000.  mov qword [rbp + 0x78], 0               ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x0000de93      48c783880000.  mov qword [rbx + 0x88], 0
0x0000de9e      31c0           xor eax, eax
0x0000dea0      4883e7f8       and rdi, 0xfffffffffffffff8
0x0000dea4      4829fb         sub rbx, rdi
0x0000dea7      8d8b90000000   lea ecx, [rbx + 0x90]
0x0000dead      c1e903         shr ecx, 3
0x0000deb0      f348ab         rep stosq qword [rdi], rax
0x0000deb3      b80a000000     mov eax, 0xa                            ; ../coreutils-8.31/lib/fts.c:1825
0x0000deb8      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1846
0x0000deb9      5d             pop rbp
0x0000deba      415c           pop r12
0x0000debc      c3             ret
0x0000debd      0f1f00         nop dword [rax]
0x0000dec0      a802           test al, 2                              ; ../coreutils-8.31/lib/fts.c:1811
0x0000dec2      759c           jne 0xde60
0x0000dec4      84d2           test dl, dl
0x0000dec6      7598           jne 0xde60
0x0000dec8      4889f2         mov rdx, rsi                            ; stat.h:473   return __fxstatat (_STAT_VER, __fd, __filename, __statbuf, __flag);
0x0000decb      418b74242c     mov esi, dword [r12 + 0x2c]
0x0000ded0      41b800010000   mov r8d, 0x100
0x0000ded6      4889d9         mov rcx, rbx
0x0000ded9      bf01000000     mov edi, 1
0x0000dede      e8cd46ffff     call sym.imp.__fxstatat
0x0000dee3      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1821
0x0000dee5      0f8595000000   jne 0xdf80
0x0000deeb      8b8590000000   mov eax, dword [rbp + 0x90]             ; ../coreutils-8.31/lib/fts.c:1828
0x0000def1      2500f00000     and eax, 0xf000
0x0000def6      3d00400000     cmp eax, entry.fini0                    ; sym.__do_global_dtors_aux
                                                                       ; 0x4000
0x0000defb      7423           je 0xdf20
0x0000defd      3d00a00000     cmp eax, 0xa000                         ; ../coreutils-8.31/lib/fts.c:1841
0x0000df02      0f84d0000000   je 0xdfd8
0x0000df08      3d00800000     cmp eax, 0x8000                         ; ../coreutils-8.31/lib/fts.c:1844
0x0000df0d      0f94c0         sete al
0x0000df10      0fb6c0         movzx eax, al
0x0000df13      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1846
0x0000df14      8d448003       lea eax, [rax + rax*4 + 3]              ; ../coreutils-8.31/lib/fts.c:1844
0x0000df18      5d             pop rbp                                 ; ../coreutils-8.31/lib/fts.c:1846
0x0000df19      415c           pop r12
0x0000df1b      c3             ret
0x0000df1c      0f1f4000       nop dword [rax]
0x0000df20      488b85880000.  mov rax, qword [rbp + 0x88]             ; ../coreutils-8.31/lib/fts.c:1830
0x0000df27      4883f801       cmp rax, 1                              ; ../coreutils-8.31/lib/fts.c:1833
0x0000df2b      0f867f000000   jbe 0xdfb0
0x0000df31      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:1831
0x0000df36      7e78           jle 0xdfb0
0x0000df38      41f644244820   test byte [r12 + 0x48], 0x20
0x0000df3e      488d50fe       lea rdx, [rax - 2]
0x0000df42      480f44c2       cmove rax, rdx
0x0000df46      80bd08010000.  cmp byte [rbp + 0x108], 0x2e            ; ../coreutils-8.31/lib/fts.c:1834
0x0000df4d      48894568       mov qword [rbp + 0x68], rax             ; ../coreutils-8.31/lib/fts.c:1830
0x0000df51      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:1839
0x0000df56      0f855cffffff   jne 0xdeb8                              ; ../coreutils-8.31/lib/fts.c:1834
0x0000df5c      80bd09010000.  cmp byte [rbp + 0x109], 0
0x0000df63      0f857f000000   jne 0xdfe8
0x0000df69      48837d5801     cmp qword [rbp + 0x58], 1               ; ../coreutils-8.31/lib/fts.c:1839
0x0000df6e      19c0           sbb eax, eax
0x0000df70      83e0fc         and eax, 0xfffffffc                     ; 4294967292
0x0000df73      83c005         add eax, 5
0x0000df76      e93dffffff     jmp 0xdeb8
0x0000df7b      0f1f440000     nop dword [rax + rax]
0x0000df80      e88b44ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1823
0x0000df85      8b00           mov eax, dword [rax]
0x0000df87      e9f8feffff     jmp 0xde84
0x0000df8c      0f1f4000       nop dword [rax]
0x0000df90      488b7530       mov rsi, qword [rbp + 0x30]             ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x0000df94      4889da         mov rdx, rbx
0x0000df97      bf01000000     mov edi, 1
0x0000df9c      e89f45ffff     call sym.imp.__lxstat
0x0000dfa1      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1814
0x0000dfa3      741b           je 0xdfc0
0x0000dfa5      418b0424       mov eax, dword [r12]
0x0000dfa9      e9d6feffff     jmp 0xde84
0x0000dfae      6690           nop
0x0000dfb0      48c7c0ffffff.  mov rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/fts.c:1833
0x0000dfb7      eb8d           jmp 0xdf46
0x0000dfb9      0f1f80000000.  nop dword [rax]
0x0000dfc0      41c704240000.  mov dword [r12], 0                      ; ../coreutils-8.31/lib/fts.c:1815
0x0000dfc8      b80d000000     mov eax, 0xd                            ; ../coreutils-8.31/lib/fts.c:1816
0x0000dfcd      e9e6feffff     jmp 0xdeb8
0x0000dfd2      660f1f440000   nop word [rax + rax]
0x0000dfd8      b80c000000     mov eax, 0xc                            ; ../coreutils-8.31/lib/fts.c:1842
0x0000dfdd      e9d6feffff     jmp 0xdeb8
0x0000dfe2      660f1f440000   nop word [rax + rax]
0x0000dfe8      8b9508010000   mov edx, dword [rbp + 0x108]            ; ../coreutils-8.31/lib/fts.c:1834
0x0000dfee      81e200ffff00   and edx, 0xffff00
0x0000dff4      81fa002e0000   cmp edx, 0x2e00
0x0000dffa      0f85b8feffff   jne 0xdeb8
0x0000e000      e964ffffff     jmp 0xdf69
0x0000e005      90             nop
0x0000e006      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_sort:
0x0000e010      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1864
0x0000e012      4154           push r12
0x0000e014      4989d4         mov r12, rdx
0x0000e017      55             push rbp
0x0000e018      53             push rbx
0x0000e019      4889fd         mov rbp, rdi
0x0000e01c      4889f3         mov rbx, rsi
0x0000e01f      4883ec08       sub rsp, 8
0x0000e023      48395538       cmp qword [rbp + 0x38], rdx             ; ../coreutils-8.31/lib/fts.c:1888
0x0000e027      4c8b6f40       mov r13, qword [rdi + 0x40]             ; ../coreutils-8.31/lib/fts.c:1875
0x0000e02b      488b7f10       mov rdi, qword [rdi + 0x10]
0x0000e02f      7334           jae 0xe065                              ; ../coreutils-8.31/lib/fts.c:1888
0x0000e031      488d7228       lea rsi, [rdx + 0x28]                   ; ../coreutils-8.31/lib/fts.c:1891
0x0000e035      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; ../coreutils-8.31/lib/fts.c:1892 ; 2305843009213693951
0x0000e03f      4839c6         cmp rsi, rax
0x0000e042      48897538       mov qword [rbp + 0x38], rsi             ; ../coreutils-8.31/lib/fts.c:1891
0x0000e046      0f8798000000   ja 0xe0e4                               ; ../coreutils-8.31/lib/fts.c:1892
0x0000e04c      48c1e603       shl rsi, 3                              ; ../coreutils-8.31/lib/fts.c:1893
0x0000e050      e8db47ffff     call sym.imp.realloc
0x0000e055      4885c0         test rax, rax
0x0000e058      4889c7         mov rdi, rax
0x0000e05b      0f847f000000   je 0xe0e0
0x0000e061      48894510       mov qword [rbp + 0x10], rax             ; ../coreutils-8.31/lib/fts.c:1900
0x0000e065      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/fts.c:1902
0x0000e068      7417           je 0xe081
0x0000e06a      4889fa         mov rdx, rdi
0x0000e06d      0f1f00         nop dword [rax]
0x0000e070      4883c208       add rdx, 8                              ; ../coreutils-8.31/lib/fts.c:1903
0x0000e074      48895af8       mov qword [rdx - 8], rbx
0x0000e078      488b5b10       mov rbx, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/fts.c:1902
0x0000e07c      4885db         test rbx, rbx
0x0000e07f      75ef           jne 0xe070
0x0000e081      4c89e9         mov rcx, r13                            ; ../coreutils-8.31/lib/fts.c:1904
0x0000e084      ba08000000     mov edx, 8
0x0000e089      4c89e6         mov rsi, r12
0x0000e08c      e8df43ffff     call sym.imp.qsort
0x0000e091      4c8b4510       mov r8, qword [rbp + 0x10]              ; ../coreutils-8.31/lib/fts.c:1905
0x0000e095      4c89e1         mov rcx, r12
0x0000e098      4883e901       sub rcx, 1
0x0000e09c      498b00         mov rax, qword [r8]
0x0000e09f      746f           je 0xe110
0x0000e0a1      4889c7         mov rdi, rax
0x0000e0a4      4c89c2         mov rdx, r8
0x0000e0a7      eb0a           jmp 0xe0b3
0x0000e0a9      0f1f80000000.  nop dword [rax]
0x0000e0b0      488b3a         mov rdi, qword [rdx]
0x0000e0b3      488b7208       mov rsi, qword [rdx + 8]                ; ../coreutils-8.31/lib/fts.c:1906
0x0000e0b7      4883c208       add rdx, 8                              ; ../coreutils-8.31/lib/fts.c:1905
0x0000e0bb      4883e901       sub rcx, 1
0x0000e0bf      48897710       mov qword [rdi + 0x10], rsi             ; ../coreutils-8.31/lib/fts.c:1906
0x0000e0c3      75eb           jne 0xe0b0                              ; ../coreutils-8.31/lib/fts.c:1905
0x0000e0c5      4b8b54e0f8     mov rdx, qword [r8 + r12*8 - 8]
0x0000e0ca      48c742100000.  mov qword [rdx + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1907
0x0000e0d2      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1909
0x0000e0d6      5b             pop rbx
0x0000e0d7      5d             pop rbp
0x0000e0d8      415c           pop r12
0x0000e0da      415d           pop r13
0x0000e0dc      c3             ret
0x0000e0dd      0f1f00         nop dword [rax]
0x0000e0e0      488b7d10       mov rdi, qword [rbp + 0x10]
0x0000e0e4      e82749ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:1895
0x0000e0e9      48c745100000.  mov qword [rbp + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1896
0x0000e0f1      48c745380000.  mov qword [rbp + 0x38], 0               ; ../coreutils-8.31/lib/fts.c:1897
0x0000e0f9      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1909
0x0000e0fd      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fts.c:1898
0x0000e100      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1909
0x0000e101      5d             pop rbp
0x0000e102      415c           pop r12
0x0000e104      415d           pop r13
0x0000e106      c3             ret
0x0000e107      660f1f840000.  nop word [rax + rax]
0x0000e110      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/fts.c:1905
0x0000e113      ebb5           jmp 0xe0ca
0x0000e115      90             nop
0x0000e116      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_alloc:
0x0000e120      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1914
0x0000e122      4154           push r12
0x0000e124      4989fc         mov r12, rdi
0x0000e127      55             push rbp
0x0000e128      488dba100100.  lea rdi, [rdx + 0x110]                  ; ../coreutils-8.31/lib/fts.c:1922
0x0000e12f      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:1914
0x0000e130      4989f5         mov r13, rsi
0x0000e133      4889d5         mov rbp, rdx
0x0000e136      4883ec08       sub rsp, 8
0x0000e13a      4883e7f8       and rdi, 0xfffffffffffffff8             ; ../coreutils-8.31/lib/fts.c:1922
0x0000e13e      e83d46ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/fts.c:1923
0x0000e143      4885c0         test rax, rax
0x0000e146      4889c3         mov rbx, rax
0x0000e149      7451           je 0xe19c
0x0000e14b      488db8080100.  lea rdi, [rax + 0x108]                  ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000e152      4889ea         mov rdx, rbp
0x0000e155      4c89ee         mov rsi, r13
0x0000e158      e8b345ffff     call sym.imp.memcpy
0x0000e15d      498b442420     mov rax, qword [r12 + 0x20]             ; ../coreutils-8.31/lib/fts.c:1932
0x0000e162      c6842b080100.  mov byte [rbx + rbp + 0x108], 0         ; ../coreutils-8.31/lib/fts.c:1928
0x0000e16a      48896b60       mov qword [rbx + 0x60], rbp             ; ../coreutils-8.31/lib/fts.c:1930
0x0000e16e      4c896350       mov qword [rbx + 0x50], r12             ; ../coreutils-8.31/lib/fts.c:1931
0x0000e172      c74340000000.  mov dword [rbx + 0x40], 0               ; ../coreutils-8.31/lib/fts.c:1933
0x0000e179      48c743180000.  mov qword [rbx + 0x18], 0               ; ../coreutils-8.31/lib/fts.c:1934
0x0000e181      48894338       mov qword [rbx + 0x38], rax             ; ../coreutils-8.31/lib/fts.c:1932
0x0000e185      c74372000003.  mov dword [rbx + 0x72], 0x30000         ; ../coreutils-8.31/lib/fts.c:1935 ; [0x30000:4]=-1
0x0000e18c      48c743200000.  mov qword [rbx + 0x20], 0               ; ../coreutils-8.31/lib/fts.c:1937
0x0000e194      48c743280000.  mov qword [rbx + 0x28], 0               ; ../coreutils-8.31/lib/fts.c:1938
0x0000e19c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1940
0x0000e1a0      4889d8         mov rax, rbx
0x0000e1a3      5b             pop rbx
0x0000e1a4      5d             pop rbp
0x0000e1a5      415c           pop r12
0x0000e1a7      415d           pop r13
0x0000e1a9      c3             ret
0x0000e1aa      660f1f440000   nop word [rax + rax]
;-- fts_lfree:
0x0000e1b0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:1945
0x0000e1b3      743b           je 0xe1f0
0x0000e1b5      55             push rbp
0x0000e1b6      53             push rbx
0x0000e1b7      4889fb         mov rbx, rdi
0x0000e1ba      4883ec08       sub rsp, 8
0x0000e1be      6690           nop
0x0000e1c0      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/fts.c:1951
0x0000e1c4      488b6b10       mov rbp, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/fts.c:1950
0x0000e1c8      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:1951
0x0000e1cb      7405           je 0xe1d2
0x0000e1cd      e87e44ffff     call sym.imp.closedir                   ; ../coreutils-8.31/lib/fts.c:1952
0x0000e1d2      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:1953
0x0000e1d5      4889eb         mov rbx, rbp
0x0000e1d8      e83348ffff     call sym..plt.got
0x0000e1dd      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/fts.c:1949
0x0000e1e0      75de           jne 0xe1c0
0x0000e1e2      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1955
0x0000e1e6      5b             pop rbx
0x0000e1e7      5d             pop rbp
0x0000e1e8      c3             ret
0x0000e1e9      0f1f80000000.  nop dword [rax]
0x0000e1f0      f3c3           ret
0x0000e1f2      0f1f4000       nop dword [rax]
0x0000e1f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fd_ring_clear:
0x0000e200      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:277
0x0000e201      4889fb         mov rbx, rdi
0x0000e204      eb16           jmp 0xe21c                              ; ../coreutils-8.31/lib/fts.c:278
0x0000e206      662e0f1f8400.  nop word cs:[rax + rax]
0x0000e210      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:280
0x0000e213      e868130100     call sym.i_ring_pop
0x0000e218      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:281
0x0000e21a      7914           jns 0xe230
0x0000e21c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:278
0x0000e21f      e80c130100     call sym.i_ring_empty
0x0000e224      84c0           test al, al
0x0000e226      74e8           je 0xe210
0x0000e228      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:284
0x0000e229      c3             ret
0x0000e22a      660f1f440000   nop word [rax + rax]
0x0000e230      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fts.c:282
0x0000e232      e80944ffff     call sym.imp.close
0x0000e237      ebe3           jmp 0xe21c
0x0000e239      0f1f80000000.  nop dword [rax]
;-- filesystem_type:
0x0000e240      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:710
0x0000e242      4154           push r12
0x0000e244      55             push rbp
0x0000e245      53             push rbx
0x0000e246      4881ec980000.  sub rsp, 0x98
0x0000e24d      488b5f50       mov rbx, qword [rdi + 0x50]             ; ../coreutils-8.31/lib/fts.c:711
0x0000e251      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/fts.c:710
0x0000e25a      488984248800.  mov qword [rsp + 0x88], rax
0x0000e262      31c0           xor eax, eax
0x0000e264      f6434902       test byte [rbx + 0x49], 2               ; ../coreutils-8.31/lib/fts.c:718
0x0000e268      7468           je 0xe2d2
0x0000e26a      4c8b6350       mov r12, qword [rbx + 0x50]             ; ../coreutils-8.31/lib/fts.c:712
0x0000e26e      4889fd         mov rbp, rdi
0x0000e271      4189f5         mov r13d, esi
0x0000e274      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/fts.c:721
0x0000e277      7427           je 0xe2a0
0x0000e279      488b4578       mov rax, qword [rbp + 0x78]             ; ../coreutils-8.31/lib/fts.c:728
0x0000e27d      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/fts.c:729
0x0000e280      4c89e7         mov rdi, r12
0x0000e283      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/fts.c:728
0x0000e287      e864a0ffff     call sym.hash_lookup                    ; ../coreutils-8.31/lib/fts.c:729
0x0000e28c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:730
0x0000e28f      743c           je 0xe2cd
0x0000e291      488b5808       mov rbx, qword [rax + 8]                ; ../coreutils-8.31/lib/fts.c:731
0x0000e295      eb3d           jmp 0xe2d4
0x0000e297      660f1f840000.  nop word [rax + rax]
0x0000e2a0      4c8b05219d21.  mov r8, qword [reloc.free]              ; ../coreutils-8.31/lib/fts.c:723 ; [0x227fc8:8]=0
0x0000e2a7      488d0d52fbff.  lea rcx, sym.dev_type_compare           ; 0xde00 ; "H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x0000e2ae      488d153bfbff.  lea rdx, sym.dev_type_hash              ; 0xddf0 ; "H\x8b\a1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f@"
0x0000e2b5      31f6           xor esi, esi
0x0000e2b7      bf0d000000     mov edi, 0xd
0x0000e2bc      e89fa2ffff     call sym.hash_initialize
0x0000e2c1      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:725
0x0000e2c4      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/fts.c:723
0x0000e2c7      48894350       mov qword [rbx + 0x50], rax
0x0000e2cb      75ac           jne 0xe279                              ; ../coreutils-8.31/lib/fts.c:725
0x0000e2cd      4585ed         test r13d, r13d                         ; ../coreutils-8.31/lib/fts.c:735
0x0000e2d0      792e           jns 0xe300
0x0000e2d2      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:719
0x0000e2d4      488b94248800.  mov rdx, qword [rsp + 0x88]             ; ../coreutils-8.31/lib/fts.c:755
0x0000e2dc      644833142528.  xor rdx, qword fs:[0x28]
0x0000e2e5      4889d8         mov rax, rbx
0x0000e2e8      7578           jne 0xe362
0x0000e2ea      4881c4980000.  add rsp, 0x98
0x0000e2f1      5b             pop rbx
0x0000e2f2      5d             pop rbp
0x0000e2f3      415c           pop r12
0x0000e2f5      415d           pop r13
0x0000e2f7      c3             ret
0x0000e2f8      0f1f84000000.  nop dword [rax + rax]
0x0000e300      488d742410     lea rsi, [rsp + 0x10]                   ; ../coreutils-8.31/lib/fts.c:735
0x0000e305      4489ef         mov edi, r13d
0x0000e308      e82346ffff     call sym.imp.fstatfs
0x0000e30d      85c0           test eax, eax
0x0000e30f      75c1           jne 0xe2d2
0x0000e311      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/fts.c:738
0x0000e314      488b5c2410     mov rbx, qword [rsp + 0x10]
0x0000e319      74b9           je 0xe2d4
0x0000e31b      bf10000000     mov edi, 0x10                           ; ../coreutils-8.31/lib/fts.c:740
0x0000e320      e85b44ffff     call sym.imp.malloc
0x0000e325      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:741
0x0000e328      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/fts.c:740
0x0000e32b      74a7           je 0xe2d4                               ; ../coreutils-8.31/lib/fts.c:741
0x0000e32d      488b4578       mov rax, qword [rbp + 0x78]             ; ../coreutils-8.31/lib/fts.c:743
0x0000e331      49895d08       mov qword [r13 + 8], rbx                ; ../coreutils-8.31/lib/fts.c:744
0x0000e335      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/fts.c:746
0x0000e338      4c89e7         mov rdi, r12
0x0000e33b      49894500       mov qword [r13], rax                    ; ../coreutils-8.31/lib/fts.c:743
0x0000e33f      e81caaffff     call sym.hash_insert                    ; ../coreutils-8.31/lib/fts.c:746
0x0000e344      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:747
0x0000e347      740f           je 0xe358
0x0000e349      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/fts.c:748
0x0000e34c      7519           jne 0xe367
0x0000e34e      488b5c2410     mov rbx, qword [rsp + 0x10]
0x0000e353      e97cffffff     jmp 0xe2d4                              ; ../coreutils-8.31/lib/fts.c:754
0x0000e358      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/lib/fts.c:750
0x0000e35b      e8b046ffff     call sym..plt.got
0x0000e360      ebec           jmp 0xe34e
0x0000e362      e8f941ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/fts.c:755
0x0000e367      e89440ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:748
0x0000e36c      0f1f4000       nop dword [rax]
;-- leaf_optimization:
0x0000e370      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/fts.c:793
0x0000e374      e8c7feffff     call sym.filesystem_type                ; ../coreutils-8.31/lib/fts.c:794
0x0000e379      483d73496552   cmp rax, 0x52654973
0x0000e37f      744f           je 0xe3d0
0x0000e381      7e2d           jle 0xe3b0
0x0000e383      483d42534658   cmp rax, 0x58465342
0x0000e389      7445           je 0xe3d0
0x0000e38b      ba424d53ff     mov edx, 0xff534d42
0x0000e390      4839d0         cmp rax, rdx
0x0000e393      7430           je 0xe3c5
0x0000e395      483d4f414653   cmp rax, 0x5346414f
0x0000e39b      7428           je 0xe3c5
0x0000e39d      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:825
0x0000e3a2      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x0000e3a6      c3             ret
0x0000e3a7      660f1f840000.  nop word [rax + rax]
0x0000e3b0      483d69690000   cmp rax, 0x6969                         ; ../coreutils-8.31/lib/fts.c:794
0x0000e3b6      740d           je 0xe3c5
0x0000e3b8      483da09f0000   cmp rax, 0x9fa0
0x0000e3be      7405           je 0xe3c5
0x0000e3c0      4885c0         test rax, rax
0x0000e3c3      75d8           jne 0xe39d
0x0000e3c5      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts.c:822
0x0000e3c7      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x0000e3cb      c3             ret
0x0000e3cc      0f1f4000       nop dword [rax]
0x0000e3d0      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/fts.c:800
0x0000e3d5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x0000e3d9      c3             ret
0x0000e3da      660f1f440000   nop word [rax + rax]
;-- cwd_advance_fd:
0x0000e3e0      55             push rbp                                ; ../coreutils-8.31/lib/fts.c:306
0x0000e3e1      53             push rbx
0x0000e3e2      89f5           mov ebp, esi
0x0000e3e4      4889fb         mov rbx, rdi
0x0000e3e7      4883ec08       sub rsp, 8
0x0000e3eb      8b772c         mov esi, dword [rdi + 0x2c]             ; ../coreutils-8.31/lib/fts.c:307
0x0000e3ee      39ee           cmp esi, ebp                            ; ../coreutils-8.31/lib/fts.c:308
0x0000e3f0      7505           jne 0xe3f7
0x0000e3f2      83fe9c         cmp esi, 0xffffff9c
0x0000e3f5      754a           jne 0xe441
0x0000e3f7      84d2           test dl, dl                             ; ../coreutils-8.31/lib/fts.c:310
0x0000e3f9      7515           jne 0xe410
0x0000e3fb      f6434804       test byte [rbx + 0x48], 4               ; ../coreutils-8.31/lib/fts.c:321
0x0000e3ff      7504           jne 0xe405
0x0000e401      85f6           test esi, esi
0x0000e403      792b           jns 0xe430
0x0000e405      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x0000e408      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x0000e40c      5b             pop rbx
0x0000e40d      5d             pop rbp
0x0000e40e      c3             ret
0x0000e40f      90             nop
0x0000e410      488d7b60       lea rdi, [rbx + 0x60]                   ; ../coreutils-8.31/lib/fts.c:314
0x0000e414      e827110100     call sym.i_ring_push
0x0000e419      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:316
0x0000e41b      78e8           js 0xe405
0x0000e41d      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fts.c:317
0x0000e41f      e81c42ffff     call sym.imp.close
0x0000e424      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x0000e427      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x0000e42b      5b             pop rbx
0x0000e42c      5d             pop rbp
0x0000e42d      c3             ret
0x0000e42e      6690           nop
0x0000e430      89f7           mov edi, esi                            ; ../coreutils-8.31/lib/fts.c:322
0x0000e432      e80942ffff     call sym.imp.close
0x0000e437      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x0000e43a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x0000e43e      5b             pop rbx
0x0000e43f      5d             pop rbp
0x0000e440      c3             ret
0x0000e441      e8ba3fffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:308
0x0000e446      662e0f1f8400.  nop word cs:[rax + rax]
;-- restore_initial_cwd:
0x0000e450      55             push rbp                                ; ../coreutils-8.31/lib/fts.c:334
0x0000e451      53             push rbx
0x0000e452      4889fb         mov rbx, rdi
0x0000e455      4883ec08       sub rsp, 8
0x0000e459      8b5748         mov edx, dword [rdi + 0x48]             ; ../coreutils-8.31/lib/fts.c:335
0x0000e45c      89d5           mov ebp, edx
0x0000e45e      83e504         and ebp, 4
0x0000e461      7545           jne 0xe4a8
0x0000e463      80e602         and dh, 2
0x0000e466      7528           jne 0xe490
0x0000e468      8b7f28         mov edi, dword [rdi + 0x28]
0x0000e46b      31ed           xor ebp, ebp
0x0000e46d      e8ae43ffff     call sym.imp.fchdir
0x0000e472      85c0           test eax, eax
0x0000e474      400f95c5       setne bpl
0x0000e478      488d7b60       lea rdi, [rbx + 0x60]                   ; ../coreutils-8.31/lib/fts.c:336
0x0000e47c      e87ffdffff     call sym.fd_ring_clear
0x0000e481      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:338
0x0000e485      89e8           mov eax, ebp
0x0000e487      5b             pop rbx
0x0000e488      5d             pop rbp
0x0000e489      c3             ret
0x0000e48a      660f1f440000   nop word [rax + rax]
0x0000e490      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/fts.c:335
0x0000e495      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x0000e49a      e841ffffff     call sym.cwd_advance_fd
0x0000e49f      ebd7           jmp 0xe478
0x0000e4a1      0f1f80000000.  nop dword [rax]
0x0000e4a8      31ed           xor ebp, ebp
0x0000e4aa      ebcc           jmp 0xe478
0x0000e4ac      0f1f4000       nop dword [rax]
;-- fts_palloc.isra.2:
0x0000e4b0      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:1966
0x0000e4b1      488b0e         mov rcx, qword [rsi]                    ; ../coreutils-8.31/lib/fts.c:1969
0x0000e4b4      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/fts.c:1966
0x0000e4b7      488b3f         mov rdi, qword [rdi]
0x0000e4ba      488d84110001.  lea rax, [rcx + rdx + 0x100]            ; ../coreutils-8.31/lib/fts.c:1969
0x0000e4c2      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/fts.c:1974
0x0000e4c5      7721           ja 0xe4e8
0x0000e4c7      488906         mov qword [rsi], rax                    ; ../coreutils-8.31/lib/fts.c:1980
0x0000e4ca      4889c6         mov rsi, rax                            ; ../coreutils-8.31/lib/fts.c:1981
0x0000e4cd      e85e43ffff     call sym.imp.realloc
0x0000e4d2      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:1982
0x0000e4d5      7431           je 0xe508
0x0000e4d7      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/fts.c:1987
0x0000e4da      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:1988
0x0000e4df      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x0000e4e0      c3             ret
0x0000e4e1      0f1f80000000.  nop dword [rax]
0x0000e4e8      e82345ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:1975
0x0000e4ed      48c703000000.  mov qword [rbx], 0                      ; ../coreutils-8.31/lib/fts.c:1976
0x0000e4f4      e8173fffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1977
0x0000e4f9      c70024000000   mov dword [rax], 0x24                   ; '$'
                                                                       ; [0x24:4]=0
0x0000e4ff      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts.c:1978
0x0000e501      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x0000e502      c3             ret
0x0000e503      0f1f440000     nop dword [rax + rax]
0x0000e508      488b3b         mov rdi, qword [rbx]                    ; ../coreutils-8.31/lib/fts.c:1983
0x0000e50b      e80045ffff     call sym..plt.got
0x0000e510      48c703000000.  mov qword [rbx], 0                      ; ../coreutils-8.31/lib/fts.c:1984
0x0000e517      31c0           xor eax, eax
0x0000e519      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x0000e51a      c3             ret
0x0000e51b      0f1f440000     nop dword [rax + rax]
;-- setup_dir.isra.4:
0x0000e520      81e702010000   and edi, 0x102                          ; ../coreutils-8.31/lib/fts-cycle.c:50
0x0000e526      53             push rbx
0x0000e527      4889f3         mov rbx, rsi
0x0000e52a      7434           je 0xe560                               ; ../coreutils-8.31/lib/fts-cycle.c:52
0x0000e52c      4c8b05959a21.  mov r8, qword [reloc.free]              ; ../coreutils-8.31/lib/fts-cycle.c:55 ; [0x227fc8:8]=0
0x0000e533      488d0d86f8ff.  lea rcx, sym.AD_compare                 ; 0xddc0 ; "1\xc0H\x8bV\bH9W\bt\x04\xf3\xc3f\x90H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x0000e53a      488d159ff8ff.  lea rdx, sym.AD_hash                    ; 0xdde0 ; "H\x8bG\b1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f"
0x0000e541      31f6           xor esi, esi
0x0000e543      bf1f000000     mov edi, 0x1f
0x0000e548      e813a0ffff     call sym.hash_initialize
0x0000e54d      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts-cycle.c:57
0x0000e550      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/fts-cycle.c:55
0x0000e553      0f95c0         setne al                                ; ../coreutils-8.31/lib/fts-cycle.c:57
0x0000e556      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts-cycle.c:69
0x0000e557      c3             ret
0x0000e558      0f1f84000000.  nop dword [rax + rax]
0x0000e560      bf20000000     mov edi, 0x20                           ; ../coreutils-8.31/lib/fts-cycle.c:62 ; "@"
0x0000e565      e81642ffff     call sym.imp.malloc
0x0000e56a      4889c7         mov rdi, rax
0x0000e56d      488903         mov qword [rbx], rax
0x0000e570      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts-cycle.c:64
0x0000e572      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts-cycle.c:63
0x0000e575      74df           je 0xe556
0x0000e577      e8240e0100     call sym.cycle_check_init               ; ../coreutils-8.31/lib/fts-cycle.c:65
0x0000e57c      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts-cycle.c:68
0x0000e581      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts-cycle.c:69
0x0000e582      c3             ret
0x0000e583      0f1f00         nop dword [rax]
0x0000e586      662e0f1f8400.  nop word cs:[rax + rax]
;-- diropen.isra.6:
0x0000e590      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts.c:346
0x0000e593      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/fts.c:349
0x0000e595      c1e20d         shl edx, 0xd
0x0000e598      81e200000200   and edx, 0x20000
0x0000e59e      81ca00090900   or edx, 0x90900                         ; ../coreutils-8.31/lib/fts.c:348
0x0000e5a4      81e600020000   and esi, 0x200                          ; ../coreutils-8.31/lib/fts.c:353
0x0000e5aa      7514           jne 0xe5c0
0x0000e5ac      4889c7         mov rdi, rax
0x0000e5af      89d6           mov esi, edx
0x0000e5b1      31c0           xor eax, eax
0x0000e5b3      e9880e0100     jmp sym.open_safer
0x0000e5b8      0f1f84000000.  nop dword [rax + rax]
0x0000e5c0      4889c6         mov rsi, rax
0x0000e5c3      31c0           xor eax, eax
0x0000e5c5      e936100100     jmp sym.openat_safer
0x0000e5ca      660f1f440000   nop word [rax + rax]
;-- fts_safe_changedir:
0x0000e5d0      4157           push r15                                ; ../coreutils-8.31/lib/fts.c:2044
0x0000e5d2      4156           push r14
0x0000e5d4      4989f6         mov r14, rsi
0x0000e5d7      4155           push r13
0x0000e5d9      4154           push r12
0x0000e5db      4989fd         mov r13, rdi
0x0000e5de      55             push rbp
0x0000e5df      53             push rbx
0x0000e5e0      4189d4         mov r12d, edx
0x0000e5e3      4889cd         mov rbp, rcx
0x0000e5e6      4881ecb80000.  sub rsp, 0xb8
0x0000e5ed      8b5f48         mov ebx, dword [rdi + 0x48]
0x0000e5f0      64488b042528.  mov rax, qword fs:[0x28]
0x0000e5f9      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000e601      31c0           xor eax, eax
0x0000e603      4189d9         mov r9d, ebx
0x0000e606      4183e104       and r9d, 4
0x0000e60a      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/fts.c:2046
0x0000e60d      0f84ad000000   je 0xe6c0
0x0000e613      488d15814001.  lea rdx, [0x0002269b]                   ; ".."
0x0000e61a      b903000000     mov ecx, 3
0x0000e61f      4889ee         mov rsi, rbp
0x0000e622      4889d7         mov rdi, rdx
0x0000e625      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000e627      0f97c0         seta al
0x0000e62a      1c00           sbb al, 0
0x0000e62c      84c0           test al, al
0x0000e62e      0f858c000000   jne 0xe6c0
0x0000e634      4585c9         test r9d, r9d                           ; ../coreutils-8.31/lib/fts.c:2053
0x0000e637      0f8588000000   jne 0xe6c5
0x0000e63d      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fts.c:2060
0x0000e640      0f89e4010000   jns 0xe82a
0x0000e646      f6c702         test bh, 2
0x0000e649      0f8541010000   jne 0xe790
0x0000e64f      c644240f01     mov byte [rsp + 0xf], 1
0x0000e654      418b7d2c       mov edi, dword [r13 + 0x2c]             ; ../coreutils-8.31/lib/fts.c:2082
0x0000e658      4889ea         mov rdx, rbp
0x0000e65b      89de           mov esi, ebx
0x0000e65d      e82effffff     call sym.diropen.isra.6
0x0000e662      85c0           test eax, eax
0x0000e664      4189c7         mov r15d, eax
0x0000e667      0f88ae010000   js 0xe81b
0x0000e66d      418b5d48       mov ebx, dword [r13 + 0x48]
0x0000e671      f6c302         test bl, 2                              ; ../coreutils-8.31/lib/fts.c:2092
0x0000e674      0f84a0000000   je 0xe71a
0x0000e67a      660f1f440000   nop word [rax + rax]
0x0000e680      488d542410     lea rdx, [rsp + 0x10]                   ; stat.h:465   return __fxstat (_STAT_VER, __fd, __statbuf);
0x0000e685      4489fe         mov esi, r15d
0x0000e688      bf01000000     mov edi, 1
0x0000e68d      e84e41ffff     call sym.imp.__fxstat
0x0000e692      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:2096
0x0000e694      0f84c6000000   je 0xe760
0x0000e69a      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/fts.c:2099 ; -1
0x0000e69f      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fts.c:2118
0x0000e6a2      7931           jns 0xe6d5
0x0000e6a4      e8673dffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:2120
0x0000e6a9      448b20         mov r12d, dword [rax]
0x0000e6ac      4889c5         mov rbp, rax
0x0000e6af      4489ff         mov edi, r15d                           ; ../coreutils-8.31/lib/fts.c:2121
0x0000e6b2      e8893fffff     call sym.imp.close
0x0000e6b7      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fts.c:2122
0x0000e6bb      eb18           jmp 0xe6d5
0x0000e6bd      0f1f00         nop dword [rax]
0x0000e6c0      4585c9         test r9d, r9d                           ; ../coreutils-8.31/lib/fts.c:2053
0x0000e6c3      743b           je 0xe700
0x0000e6c5      80e702         and bh, 2                               ; ../coreutils-8.31/lib/fts.c:2055
0x0000e6c8      7409           je 0xe6d3
0x0000e6ca      4585e4         test r12d, r12d
0x0000e6cd      0f89ad000000   jns 0xe780
0x0000e6d3      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:2057
0x0000e6d5      488b8c24a800.  mov rcx, qword [rsp + 0xa8]
0x0000e6dd      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000e6e6      89d8           mov eax, ebx
0x0000e6e8      0f8537010000   jne 0xe825
0x0000e6ee      4881c4b80000.  add rsp, 0xb8
0x0000e6f5      5b             pop rbx
0x0000e6f6      5d             pop rbp
0x0000e6f7      415c           pop r12
0x0000e6f9      415d           pop r13                                 ; ../coreutils-8.31/lib/fts-cycle.c:2014
0x0000e6fb      415e           pop r14
0x0000e6fd      415f           pop r15
0x0000e6ff      c3             ret
0x0000e700      4585e4         test r12d, r12d
0x0000e703      0f8837010000   js 0xe840
0x0000e709      f6c302         test bl, 2
0x0000e70c      4589e7         mov r15d, r12d
0x0000e70f      c644240f00     mov byte [rsp + 0xf], 0
0x0000e714      0f8566ffffff   jne 0xe680
0x0000e71a      4885ed         test rbp, rbp
0x0000e71d      7421           je 0xe740
0x0000e71f      488d15753f01.  lea rdx, [0x0002269b]                   ; ".."
0x0000e726      b903000000     mov ecx, 3
0x0000e72b      4889ee         mov rsi, rbp
0x0000e72e      4889d7         mov rdi, rdx
0x0000e731      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000e733      0f97c0         seta al                                 ; ../coreutils-8.31/lib/fts-cycle.c:2010
0x0000e736      1c00           sbb al, 0
0x0000e738      84c0           test al, al
0x0000e73a      0f8440ffffff   je 0xe680
0x0000e740      80e702         and bh, 2
0x0000e743      0f858f000000   jne 0xe7d8
0x0000e749      4489ff         mov edi, r15d                           ; ../coreutils-8.31/lib/fts-cycle.c:1971
0x0000e74c      e8cf40ffff     call sym.imp.fchdir
0x0000e751      89c3           mov ebx, eax
0x0000e753      e947ffffff     jmp 0xe69f
0x0000e758      0f1f84000000.  nop dword [rax + rax]
0x0000e760      488b442410     mov rax, qword [rsp + 0x10]
0x0000e765      49394678       cmp qword [r14 + 0x78], rax
0x0000e769      0f8491000000   je 0xe800                               ; ../coreutils-8.31/lib/fts-cycle.c:1977
0x0000e76f      e89c3cffff     call sym.imp.__errno_location
0x0000e774      c70002000000   mov dword [rax], 2
0x0000e77a      e91bffffff     jmp 0xe69a
0x0000e77f      90             nop
0x0000e780      4489e7         mov edi, r12d
0x0000e783      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts-cycle.c:1996
0x0000e785      e8b63effff     call sym.imp.close
0x0000e78a      e946ffffff     jmp 0xe6d5
0x0000e78f      90             nop
0x0000e790      4d8d7d60       lea r15, [r13 + 0x60]
0x0000e794      4c89ff         mov rdi, r15
0x0000e797      e8940d0100     call sym.i_ring_empty
0x0000e79c      84c0           test al, al
0x0000e79e      8844240f       mov byte [rsp + 0xf], al
0x0000e7a2      0f85acfeffff   jne 0xe654
0x0000e7a8      4c89ff         mov rdi, r15
0x0000e7ab      e8d00d0100     call sym.i_ring_pop
0x0000e7b0      85c0           test eax, eax
0x0000e7b2      4189c7         mov r15d, eax
0x0000e7b5      418b5d48       mov ebx, dword [r13 + 0x48]
0x0000e7b9      0f8890feffff   js 0xe64f                               ; ../coreutils-8.31/lib/fts-cycle.c:2006
0x0000e7bf      f6c302         test bl, 2
0x0000e7c2      4189c4         mov r12d, eax
0x0000e7c5      c644240f01     mov byte [rsp + 0xf], 1
0x0000e7ca      0f8470ffffff   je 0xe740
0x0000e7d0      e9abfeffff     jmp 0xe680
0x0000e7d5      0f1f00         nop dword [rax]
0x0000e7d8      440fb674240f   movzx r14d, byte [rsp + 0xf]
0x0000e7de      4489fe         mov esi, r15d                           ; ../coreutils-8.31/lib/fts-cycle.c:2029
0x0000e7e1      4c89ef         mov rdi, r13
0x0000e7e4      31db           xor ebx, ebx
0x0000e7e6      4183f601       xor r14d, 1
0x0000e7ea      410fb6d6       movzx edx, r14b
0x0000e7ee      e8edfbffff     call sym.cwd_advance_fd                 ; ../coreutils-8.31/lib/fts-cycle.c:1996
0x0000e7f3      e9ddfeffff     jmp 0xe6d5
0x0000e7f8      0f1f84000000.  nop dword [rax + rax]
0x0000e800      488b442418     mov rax, qword [rsp + 0x18]
0x0000e805      493986800000.  cmp qword [r14 + 0x80], rax
0x0000e80c      0f855dffffff   jne 0xe76f
0x0000e812      418b5d48       mov ebx, dword [r13 + 0x48]
0x0000e816      e925ffffff     jmp 0xe740                              ; ../coreutils-8.31/lib/fts-cycle.c:-22
0x0000e81b      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/fts-cycle.c:-17 ; -1
0x0000e820      e9b0feffff     jmp 0xe6d5
0x0000e825      e8363dffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/fts-cycle.c:-14
0x0000e82a      f6c302         test bl, 2
0x0000e82d      4589e7         mov r15d, r12d
0x0000e830      c644240f01     mov byte [rsp + 0xf], 1
0x0000e835      0f84ebfeffff   je 0xe726                               ; ../coreutils-8.31/lib/fts-cycle.c:-4
0x0000e83b      e940feffff     jmp 0xe680
0x0000e840      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/fts-cycle.c:-11
0x0000e845      e90afeffff     jmp 0xe654
0x0000e84a      660f1f440000   nop word [rax + rax]
;-- enter_dir.isra.10:
0x0000e850      81e702010000   and edi, 0x102
0x0000e856      4154           push r12
0x0000e858      4989f4         mov r12, rsi
0x0000e85b      55             push rbp
0x0000e85c      53             push rbx                                ; ../coreutils-8.31/lib/fts-cycle.c:0
0x0000e85d      4889d3         mov rbx, rdx
0x0000e860      746e           je 0xe8d0
0x0000e862      bf18000000     mov edi, 0x18
0x0000e867      e8143fffff     call sym.imp.malloc
0x0000e86c      4885c0         test rax, rax
0x0000e86f      4889c5         mov rbp, rax
0x0000e872      0f8480000000   je 0xe8f8
0x0000e878      488b4378       mov rax, qword [rbx + 0x78]
0x0000e87c      498b3c24       mov rdi, qword [r12]
0x0000e880      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fts-cycle.c:24
0x0000e883      48895d10       mov qword [rbp + 0x10], rbx
0x0000e887      48894500       mov qword [rbp], rax
0x0000e88b      488b83800000.  mov rax, qword [rbx + 0x80]
0x0000e892      48894508       mov qword [rbp + 8], rax
0x0000e896      e8c5a4ffff     call sym.hash_insert
0x0000e89b      4839c5         cmp rbp, rax
0x0000e89e      4989c4         mov r12, rax
0x0000e8a1      741e           je 0xe8c1
0x0000e8a3      4889ef         mov rdi, rbp
0x0000e8a6      e86541ffff     call sym..plt.got
0x0000e8ab      4d85e4         test r12, r12
0x0000e8ae      7448           je 0xe8f8
0x0000e8b0      498b442410     mov rax, qword [r12 + 0x10]
0x0000e8b5      b902000000     mov ecx, 2
0x0000e8ba      66894b70       mov word [rbx + 0x70], cx
0x0000e8be      488903         mov qword [rbx], rax
0x0000e8c1      5b             pop rbx
0x0000e8c2      b801000000     mov eax, 1
0x0000e8c7      5d             pop rbp
0x0000e8c8      415c           pop r12
0x0000e8ca      c3             ret
0x0000e8cb      0f1f440000     nop dword [rax + rax]
0x0000e8d0      498b3c24       mov rdi, qword [r12]                    ; ../coreutils-8.31/lib/fts-cycle.c:32
0x0000e8d4      488d7278       lea rsi, [rdx + 0x78]
0x0000e8d8      e8d30a0100     call sym.cycle_check                    ; ../coreutils-8.31/lib/fts-cycle.c:45
0x0000e8dd      84c0           test al, al
0x0000e8df      74e0           je 0xe8c1
0x0000e8e1      ba02000000     mov edx, 2
0x0000e8e6      48891b         mov qword [rbx], rbx
0x0000e8e9      66895370       mov word [rbx + 0x70], dx
0x0000e8ed      5b             pop rbx
0x0000e8ee      5d             pop rbp
0x0000e8ef      415c           pop r12
0x0000e8f1      c3             ret
0x0000e8f2      660f1f440000   nop word [rax + rax]
0x0000e8f8      5b             pop rbx
0x0000e8f9      31c0           xor eax, eax
0x0000e8fb      5d             pop rbp
0x0000e8fc      415c           pop r12
0x0000e8fe      c3             ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:50
0x0000e8ff      90             nop
;-- leave_dir.isra.12:
0x0000e900      4883ec28       sub rsp, 0x28
0x0000e904      4889f1         mov rcx, rsi
0x0000e907      64488b042528.  mov rax, qword fs:[0x28]
0x0000e910      4889442418     mov qword [rsp + 0x18], rax
0x0000e915      31c0           xor eax, eax
0x0000e917      81e702010000   and edi, 0x102
0x0000e91d      7541           jne 0xe960                              ; ../coreutils-8.31/lib/fts-cycle.c:38
0x0000e91f      488b4208       mov rax, qword [rdx + 8]
0x0000e923      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts-cycle.c:36
0x0000e926      741d           je 0xe945
0x0000e928      4883785800     cmp qword [rax + 0x58], 0
0x0000e92d      7816           js 0xe945
0x0000e92f      488b0e         mov rcx, qword [rsi]
0x0000e932      4883791000     cmp qword [rcx + 0x10], 0
0x0000e937      747a           je 0xe9b3
0x0000e939      488bb2800000.  mov rsi, qword [rdx + 0x80]
0x0000e940      483931         cmp qword [rcx], rsi
0x0000e943      744b           je 0xe990
0x0000e945      488b442418     mov rax, qword [rsp + 0x18]
0x0000e94a      644833042528.  xor rax, qword fs:[0x28]
0x0000e953      7559           jne 0xe9ae
0x0000e955      4883c428       add rsp, 0x28
0x0000e959      c3             ret
0x0000e95a      660f1f440000   nop word [rax + rax]
0x0000e960      488b4278       mov rax, qword [rdx + 0x78]
0x0000e964      488b39         mov rdi, qword [rcx]
0x0000e967      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/fts-cycle.c:50
0x0000e96a      48890424       mov qword [rsp], rax
0x0000e96e      488b82800000.  mov rax, qword [rdx + 0x80]
0x0000e975      4889442408     mov qword [rsp + 8], rax
0x0000e97a      e841a4ffff     call sym.hash_delete
0x0000e97f      4885c0         test rax, rax
0x0000e982      742f           je 0xe9b3
0x0000e984      4889c7         mov rdi, rax
0x0000e987      e88440ffff     call sym..plt.got
0x0000e98c      ebb7           jmp 0xe945
0x0000e98e      6690           nop
0x0000e990      488b7278       mov rsi, qword [rdx + 0x78]
0x0000e994      48397108       cmp qword [rcx + 8], rsi
0x0000e998      75ab           jne 0xe945
0x0000e99a      488b5078       mov rdx, qword [rax + 0x78]
0x0000e99e      488b80800000.  mov rax, qword [rax + 0x80]
0x0000e9a5      48895108       mov qword [rcx + 8], rdx                ; ../coreutils-8.31/lib/fts.c:1225
0x0000e9a9      488901         mov qword [rcx], rax
0x0000e9ac      eb97           jmp 0xe945
0x0000e9ae      e8ad3bffff     call sym.imp.__stack_chk_fail
0x0000e9b3      e8483affff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:1228
0x0000e9b8      0f1f84000000.  nop dword [rax + rax]
;-- fts_build:
0x0000e9c0      4157           push r15
0x0000e9c2      4156           push r14
0x0000e9c4      4989ff         mov r15, rdi
0x0000e9c7      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1282
0x0000e9c9      4154           push r12
0x0000e9cb      55             push rbp
0x0000e9cc      53             push rbx
0x0000e9cd      4883ec78       sub rsp, 0x78
0x0000e9d1      488b2f         mov rbp, qword [rdi]
0x0000e9d4      64488b042528.  mov rax, qword fs:[0x28]
0x0000e9dd      4889442468     mov qword [rsp + 0x68], rax
0x0000e9e2      31c0           xor eax, eax
0x0000e9e4      89742458       mov dword [rsp + 0x58], esi             ; ../coreutils-8.31/lib/fts.c:1343
0x0000e9e8      488b4518       mov rax, qword [rbp + 0x18]
0x0000e9ec      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:1349
0x0000e9ef      4889442450     mov qword [rsp + 0x50], rax
0x0000e9f4      0f8436040000   je 0xee30
0x0000e9fa      4889c7         mov rdi, rax
0x0000e9fd      e8de3cffff     call sym.imp.dirfd
0x0000ea02      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1344
0x0000ea04      89442464       mov dword [rsp + 0x64], eax
0x0000ea08      0f8852050000   js 0xef60
0x0000ea0e      49837f4000     cmp qword [r15 + 0x40], 0
0x0000ea13      0f84cf070000   je 0xf1e8
0x0000ea19      48c7442438ff.  mov qword [rsp + 0x38], 0xffffffffffffffff
0x0000ea22      418b7f48       mov edi, dword [r15 + 0x48]
0x0000ea26      c644245f01     mov byte [rsp + 0x5f], 1
0x0000ea2b      488b4d48       mov rcx, qword [rbp + 0x48]
0x0000ea2f      488b5538       mov rdx, qword [rbp + 0x38]             ; ../coreutils-8.31/lib/fts.c:1359
0x0000ea33      48c744244000.  mov qword [rsp + 0x40], 0
0x0000ea3c      807c0aff2f     cmp byte [rdx + rcx - 1], 0x2f
0x0000ea41      488d41ff       lea rax, [rcx - 1]                      ; ../coreutils-8.31/lib/fts.c:1351
0x0000ea45      480f45c1       cmovne rax, rcx
0x0000ea49      83e704         and edi, 4
0x0000ea4c      4889442448     mov qword [rsp + 0x48], rax
0x0000ea51      7410           je 0xea63
0x0000ea53      49034720       add rax, qword [r15 + 0x20]
0x0000ea57      488d5801       lea rbx, [rax + 1]
0x0000ea5b      c6002f         mov byte [rax], 0x2f                    ; ../coreutils-8.31/lib/fts.c:1360 ; '/'
                                                                       ; [0x2f:1]=0
0x0000ea5e      48895c2440     mov qword [rsp + 0x40], rbx
0x0000ea63      488b442448     mov rax, qword [rsp + 0x48]
0x0000ea68      498b5f30       mov rbx, qword [r15 + 0x30]
0x0000ea6c      c644245e00     mov byte [rsp + 0x5e], 0
0x0000ea71      c644245d00     mov byte [rsp + 0x5d], 0
0x0000ea76      48c744240800.  mov qword [rsp + 8], 0                  ; ../coreutils-8.31/lib/fts.c:1298
0x0000ea7f      48c744241000.  mov qword [rsp + 0x10], 0
0x0000ea88      4883c001       add rax, 1
0x0000ea8c      48896c2420     mov qword [rsp + 0x20], rbp             ; ../coreutils-8.31/lib/fts.c:1306
0x0000ea91      4829c3         sub rbx, rax
0x0000ea94      4889442418     mov qword [rsp + 0x18], rax
0x0000ea99      488b4558       mov rax, qword [rbp + 0x58]
0x0000ea9d      48895c2428     mov qword [rsp + 0x28], rbx
0x0000eaa2      31db           xor ebx, ebx
0x0000eaa4      4883c001       add rax, 1
0x0000eaa8      4889442430     mov qword [rsp + 0x30], rax
0x0000eaad      e9dd000000     jmp 0xeb8f
0x0000eab2      660f1f440000   nop word [rax + rax]
0x0000eab8      4d89f1         mov r9, r14                             ; ../coreutils-8.31/lib/fts.c:1328
0x0000eabb      4c034c2418     add r9, qword [rsp + 0x18]
0x0000eac0      0f825a080000   jb 0xf320
0x0000eac6      488b442430     mov rax, qword [rsp + 0x30]
0x0000eacb      498db5080100.  lea rsi, [r13 + 0x108]
0x0000ead2      49894558       mov qword [r13 + 0x58], rax
0x0000ead6      498b07         mov rax, qword [r15]
0x0000ead9      4d894d48       mov qword [r13 + 0x48], r9
0x0000eadd      49894508       mov qword [r13 + 8], rax
0x0000eae1      488b4500       mov rax, qword [rbp]
0x0000eae5      498985800000.  mov qword [r13 + 0x80], rax             ; ../coreutils-8.31/lib/fts.c:71
0x0000eaec      418b4748       mov eax, dword [r15 + 0x48]
0x0000eaf0      a804           test al, 4
0x0000eaf2      0f8568020000   jne 0xed60
0x0000eaf8      49897530       mov qword [r13 + 0x30], rsi
0x0000eafc      49837f4000     cmp qword [r15 + 0x40], 0
0x0000eb01      7409           je 0xeb0c
0x0000eb03      f6c404         test ah, 4
0x0000eb06      0f84fc020000   je 0xee08
0x0000eb0c      0fb65512       movzx edx, byte [rbp + 0x12]
0x0000eb10      83e018         and eax, 0x18
0x0000eb13      89d6           mov esi, edx
0x0000eb15      83ea01         sub edx, 1
0x0000eb18      83f818         cmp eax, 0x18
0x0000eb1b      0f84af020000   je 0xedd0                               ; ../coreutils-8.31/lib/fts.c:1359
0x0000eb21      b90b000000     mov ecx, 0xb
0x0000eb26      83fa0b         cmp edx, 0xb
0x0000eb29      6641894d70     mov word [r13 + 0x70], cx
0x0000eb2e      0f8764020000   ja 0xed98
0x0000eb34      488d05653b01.  lea rax, obj.CSWTCH.53                  ; 0x226a0
0x0000eb3b      8b0490         mov eax, dword [rax + rdx*4]
0x0000eb3e      418985900000.  mov dword [r13 + 0x90], eax
0x0000eb45      b802000000     mov eax, 2
0x0000eb4a      498985a80000.  mov qword [r13 + 0xa8], rax
0x0000eb51      48837c241000   cmp qword [rsp + 0x10], 0
0x0000eb57      49c745100000.  mov qword [r13 + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1237
0x0000eb5f      0f8423020000   je 0xed88
0x0000eb65      488b442408     mov rax, qword [rsp + 8]
0x0000eb6a      4c896810       mov qword [rax + 0x10], r13             ; ../coreutils-8.31/lib/fts.c:1247
0x0000eb6e      4881fb102700.  cmp rbx, sym.imp.memcpy                 ; 0x2710 ; void *memcpy(void *s1, const void *s2, size_t n)
0x0000eb75      0f84f5000000   je 0xec70
0x0000eb7b      4883c301       add rbx, 1
0x0000eb7f      483b5c2438     cmp rbx, qword [rsp + 0x38]
0x0000eb84      0f833e010000   jae 0xecc8
0x0000eb8a      4c896c2408     mov qword [rsp + 8], r13
0x0000eb8f      488b442420     mov rax, qword [rsp + 0x20]
0x0000eb94      4c8b6818       mov r13, qword [rax + 0x18]             ; ../coreutils-8.31/lib/fts.c:1251
0x0000eb98      4d85ed         test r13, r13
0x0000eb9b      0f84c7040000   je 0xf068
0x0000eba1      e86a38ffff     call sym.imp.__errno_location
0x0000eba6      4c89ef         mov rdi, r13
0x0000eba9      c70000000000   mov dword [rax], 0
0x0000ebaf      4989c4         mov r12, rax
0x0000ebb2      e8993bffff     call sym.imp.readdir
0x0000ebb7      4885c0         test rax, rax
0x0000ebba      4889c5         mov rbp, rax
0x0000ebbd      0f847d050000   je 0xf140
0x0000ebc3      41f6474820     test byte [r15 + 0x48], 0x20
0x0000ebc8      750a           jne 0xebd4
0x0000ebca      8078132e       cmp byte [rax + 0x13], 0x2e
0x0000ebce      0f84dc010000   je 0xedb0
0x0000ebd4      4c8d6d13       lea r13, [rbp + 0x13]
0x0000ebd8      4c89ef         mov rdi, r13
0x0000ebdb      e85039ffff     call sym.imp.strlen
0x0000ebe0      4c89ee         mov rsi, r13
0x0000ebe3      4889c2         mov rdx, rax
0x0000ebe6      4c89ff         mov rdi, r15
0x0000ebe9      4989c6         mov r14, rax
0x0000ebec      e82ff5ffff     call sym.fts_alloc
0x0000ebf1      4885c0         test rax, rax
0x0000ebf4      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/fts.c:1278
0x0000ebf7      0f8413040000   je 0xf010
0x0000ebfd      4c39742428     cmp qword [rsp + 0x28], r14
0x0000ec02      0f87b0feffff   ja 0xeab8
0x0000ec08      498b4720       mov rax, qword [r15 + 0x20]
0x0000ec0c      498d7730       lea rsi, [r15 + 0x30]
0x0000ec10      498d7f20       lea rdi, [r15 + 0x20]
0x0000ec14      4889442428     mov qword [rsp + 0x28], rax
0x0000ec19      488b442448     mov rax, qword [rsp + 0x48]
0x0000ec1e      4a8d543002     lea rdx, [rax + r14 + 2]
0x0000ec23      e888f8ffff     call sym.fts_palloc.isra.2
0x0000ec28      84c0           test al, al
0x0000ec2a      0f84e0030000   je 0xf010
0x0000ec30      498b5720       mov rdx, qword [r15 + 0x20]
0x0000ec34      483b542428     cmp rdx, qword [rsp + 0x28]
0x0000ec39      0f84e1010000   je 0xee20
0x0000ec3f      4803542418     add rdx, qword [rsp + 0x18]
0x0000ec44      41f6474804     test byte [r15 + 0x48], 4
0x0000ec49      480f44542440   cmove rdx, qword [rsp + 0x40]
0x0000ec4f      4889542440     mov qword [rsp + 0x40], rdx
0x0000ec54      498b4f30       mov rcx, qword [r15 + 0x30]
0x0000ec58      482b4c2418     sub rcx, qword [rsp + 0x18]
0x0000ec5d      8844245d       mov byte [rsp + 0x5d], al
0x0000ec61      48894c2428     mov qword [rsp + 0x28], rcx
0x0000ec66      e94dfeffff     jmp 0xeab8
0x0000ec6b      0f1f440000     nop dword [rax + rax]
0x0000ec70      49837f4000     cmp qword [r15 + 0x40], 0
0x0000ec75      0f8500ffffff   jne 0xeb7b
0x0000ec7b      8b742464       mov esi, dword [rsp + 0x64]
0x0000ec7f      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000ec84      e8b7f5ffff     call sym.filesystem_type
0x0000ec89      483d94190201   cmp rax, 0x1021994
0x0000ec8f      0f846b030000   je 0xf000
0x0000ec95      b9424d53ff     mov ecx, 0xff534d42
0x0000ec9a      4839c8         cmp rax, rcx
0x0000ec9d      0f845d030000   je 0xf000
0x0000eca3      483d69690000   cmp rax, 0x6969
0x0000eca9      0f8451030000   je 0xf000
0x0000ecaf      4883c301       add rbx, 1
0x0000ecb3      483b5c2438     cmp rbx, qword [rsp + 0x38]
0x0000ecb8      c644245e01     mov byte [rsp + 0x5e], 1
0x0000ecbd      0f82c7feffff   jb 0xeb8a
0x0000ecc3      0f1f440000     nop dword [rax + rax]
0x0000ecc8      807c245d00     cmp byte [rsp + 0x5d], 0
0x0000eccd      488b6c2420     mov rbp, qword [rsp + 0x20]             ; ../coreutils-8.31/lib/fts.c:1664
0x0000ecd2      0f849e030000   je 0xf076
0x0000ecd8      498b4708       mov rax, qword [r15 + 8]
0x0000ecdc      498b4f20       mov rcx, qword [r15 + 0x20]
0x0000ece0      4885c0         test rax, rax
0x0000ece3      742b           je 0xed10
0x0000ece5      0f1f00         nop dword [rax]
0x0000ece8      488b5030       mov rdx, qword [rax + 0x30]             ; string_fortified.h:-312
0x0000ecec      488db0080100.  lea rsi, [rax + 0x108]
0x0000ecf3      4839f2         cmp rdx, rsi
0x0000ecf6      740b           je 0xed03
0x0000ecf8      482b5038       sub rdx, qword [rax + 0x38]
0x0000ecfc      4801ca         add rdx, rcx
0x0000ecff      48895030       mov qword [rax + 0x30], rdx
0x0000ed03      48894838       mov qword [rax + 0x38], rcx
0x0000ed07      488b4010       mov rax, qword [rax + 0x10]
0x0000ed0b      4885c0         test rax, rax
0x0000ed0e      75d8           jne 0xece8
0x0000ed10      488b442410     mov rax, qword [rsp + 0x10]
0x0000ed15      eb0c           jmp 0xed23
0x0000ed17      660f1f840000.  nop word [rax + rax]
0x0000ed20      4889d0         mov rax, rdx
0x0000ed23      4883785800     cmp qword [rax + 0x58], 0
0x0000ed28      0f8848030000   js 0xf076
0x0000ed2e      488b5030       mov rdx, qword [rax + 0x30]
0x0000ed32      488db0080100.  lea rsi, [rax + 0x108]
0x0000ed39      4839f2         cmp rdx, rsi
0x0000ed3c      740b           je 0xed49
0x0000ed3e      482b5038       sub rdx, qword [rax + 0x38]
0x0000ed42      4801ca         add rdx, rcx
0x0000ed45      48895030       mov qword [rax + 0x30], rdx
0x0000ed49      488b5010       mov rdx, qword [rax + 0x10]
0x0000ed4d      48894838       mov qword [rax + 0x38], rcx
0x0000ed51      4885d2         test rdx, rdx
0x0000ed54      75ca           jne 0xed20
0x0000ed56      488b5008       mov rdx, qword [rax + 8]
0x0000ed5a      ebc4           jmp 0xed20
0x0000ed5c      0f1f4000       nop dword [rax]
0x0000ed60      498b4538       mov rax, qword [r13 + 0x38]
0x0000ed64      488b7c2440     mov rdi, qword [rsp + 0x40]             ; ../coreutils-8.31/lib/fts.c:-185
0x0000ed69      49894530       mov qword [r13 + 0x30], rax
0x0000ed6d      498b4560       mov rax, qword [r13 + 0x60]
0x0000ed71      488d5001       lea rdx, [rax + 1]
0x0000ed75      e8163bffff     call sym.imp.memmove
0x0000ed7a      418b4748       mov eax, dword [r15 + 0x48]
0x0000ed7e      e979fdffff     jmp 0xeafc
0x0000ed83      0f1f440000     nop dword [rax + rax]
0x0000ed88      4c896c2410     mov qword [rsp + 0x10], r13
0x0000ed8d      e9dcfdffff     jmp 0xeb6e
0x0000ed92      660f1f440000   nop word [rax + rax]
0x0000ed98      41c785900000.  mov dword [r13 + 0x90], 0
0x0000eda3      b802000000     mov eax, 2
0x0000eda8      e99dfdffff     jmp 0xeb4a
0x0000edad      0f1f00         nop dword [rax]
0x0000edb0      80781400       cmp byte [rax + 0x14], 0
0x0000edb4      740b           je 0xedc1
0x0000edb6      668378142e     cmp word [rax + 0x14], 0x2e
0x0000edbb      0f8513feffff   jne 0xebd4
0x0000edc1      4c8b6c2408     mov r13, qword [rsp + 8]
0x0000edc6      e9bffdffff     jmp 0xeb8a                              ; ../coreutils-8.31/lib/fts.c:860
0x0000edcb      0f1f440000     nop dword [rax + rax]
0x0000edd0      81e6fb000000   and esi, 0xfb
0x0000edd6      0f8445fdffff   je 0xeb21
0x0000eddc      b80b000000     mov eax, 0xb
0x0000ede1      83fa0b         cmp edx, 0xb                            ; ../coreutils-8.31/lib/fts.c:872
0x0000ede4      6641894570     mov word [r13 + 0x70], ax
0x0000ede9      0f8687050000   jbe 0xf376
0x0000edef      41c785900000.  mov dword [r13 + 0x90], 0
0x0000edfa      b801000000     mov eax, 1
0x0000edff      e946fdffff     jmp 0xeb4a
0x0000ee04      0f1f4000       nop dword [rax]
0x0000ee08      31d2           xor edx, edx
0x0000ee0a      4c89ee         mov rsi, r13
0x0000ee0d      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/fts.c:926
0x0000ee10      e82bf0ffff     call sym.fts_stat
0x0000ee15      6641894570     mov word [r13 + 0x70], ax
0x0000ee1a      e932fdffff     jmp 0xeb51
0x0000ee1f      90             nop
0x0000ee20      0fb644245d     movzx eax, byte [rsp + 0x5d]
0x0000ee25      e92afeffff     jmp 0xec54
0x0000ee2a      660f1f440000   nop word [rax + rax]
0x0000ee30      8b4748         mov eax, dword [rdi + 0x48]
0x0000ee33      89c2           mov edx, eax
0x0000ee35      83e210         and edx, 0x10
0x0000ee38      740d           je 0xee47
0x0000ee3a      a801           test al, 1
0x0000ee3c      ba00000200     mov edx, 0x20000                        ; ../coreutils-8.31/lib/fts.c:931
0x0000ee41      0f8501010000   jne 0xef48
0x0000ee47      2504020000     and eax, 0x204
0x0000ee4c      488b7530       mov rsi, qword [rbp + 0x30]
0x0000ee50      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x0000ee55      3d00020000     cmp eax, 0x200
0x0000ee5a      7504           jne 0xee60
0x0000ee5c      418b7f2c       mov edi, dword [r15 + 0x2c]
0x0000ee60      488d4c2464     lea rcx, [rsp + 0x64]
0x0000ee65      e806080100     call sym.opendirat                      ; ../coreutils-8.31/lib/fts.c:938
0x0000ee6a      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:940
0x0000ee6d      48894518       mov qword [rbp + 0x18], rax
0x0000ee71      0f8419030000   je 0xf190
0x0000ee77      66837d700b     cmp word [rbp + 0x70], 0xb
0x0000ee7c      0f848e030000   je 0xf210
0x0000ee82      418b7f48       mov edi, dword [r15 + 0x48]
0x0000ee86      f7c700010000   test edi, 0x100
0x0000ee8c      0f851e010000   jne 0xefb0
0x0000ee92      49837f4001     cmp qword [r15 + 0x40], 1
0x0000ee97      4819c0         sbb rax, rax
0x0000ee9a      25a1860100     and eax, 0x186a1                        ; ../coreutils-8.31/lib/fts.c:943
0x0000ee9f      4883e801       sub rax, 1
0x0000eea3      837c245802     cmp dword [rsp + 0x58], 2
0x0000eea8      4889442438     mov qword [rsp + 0x38], rax
0x0000eead      0f844d030000   je 0xf200
0x0000eeb3      418b5748       mov edx, dword [r15 + 0x48]
0x0000eeb7      8b442464       mov eax, dword [rsp + 0x64]
0x0000eebb      83e238         and edx, 0x38
0x0000eebe      83fa18         cmp edx, 0x18
0x0000eec1      0f849d030000   je 0xf264
0x0000eec7      837c245803     cmp dword [rsp + 0x58], 3
0x0000eecc      41bc01000000   mov r12d, 1
0x0000eed2      0f94c3         sete bl
0x0000eed5      41f6474902     test byte [r15 + 0x49], 2
0x0000eeda      0f85dc030000   jne 0xf2bc
0x0000eee0      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:848
0x0000eee2      0f8960030000   jns 0xf248
0x0000eee8      84db           test bl, bl
0x0000eeea      740f           je 0xeefb
0x0000eeec      4584e4         test r12b, r12b
0x0000eeef      740a           je 0xeefb                               ; ../coreutils-8.31/lib/fts.c:1170
0x0000eef1      e81a35ffff     call sym.imp.__errno_location
0x0000eef6      8b00           mov eax, dword [rax]
0x0000eef8      894540         mov dword [rbp + 0x40], eax
0x0000eefb      66834d7201     or word [rbp + 0x72], 1
0x0000ef00      488b7d18       mov rdi, qword [rbp + 0x18]
0x0000ef04      e84737ffff     call sym.imp.closedir
0x0000ef09      418b7f48       mov edi, dword [r15 + 0x48]
0x0000ef0d      48c745180000.  mov qword [rbp + 0x18], 0
0x0000ef15      f7c700020000   test edi, 0x200
0x0000ef1b      7413           je 0xef30
0x0000ef1d      8b442464       mov eax, dword [rsp + 0x64]
0x0000ef21      85c0           test eax, eax
0x0000ef23      780b           js 0xef30
0x0000ef25      89c7           mov edi, eax
0x0000ef27      e81437ffff     call sym.imp.close
0x0000ef2c      418b7f48       mov edi, dword [r15 + 0x48]
0x0000ef30      48c745180000.  mov qword [rbp + 0x18], 0
0x0000ef38      c644245f00     mov byte [rsp + 0x5f], 0
0x0000ef3d      e9e9faffff     jmp 0xea2b
0x0000ef42      660f1f440000   nop word [rax + rax]
0x0000ef48      31d2           xor edx, edx
0x0000ef4a      48837d5800     cmp qword [rbp + 0x58], 0
0x0000ef4f      0f95c2         setne dl
0x0000ef52      c1e211         shl edx, 0x11                           ; ../coreutils-8.31/lib/fts.c:886
0x0000ef55      e9edfeffff     jmp 0xee47
0x0000ef5a      660f1f440000   nop word [rax + rax]
0x0000ef60      488b7d18       mov rdi, qword [rbp + 0x18]
0x0000ef64      e8e736ffff     call sym.imp.closedir
0x0000ef69      837c245803     cmp dword [rsp + 0x58], 3
0x0000ef6e      48c745180000.  mov qword [rbp + 0x18], 0
0x0000ef76      0f841f020000   je 0xf19b
0x0000ef7c      48c744241000.  mov qword [rsp + 0x10], 0
0x0000ef85      488b5c2468     mov rbx, qword [rsp + 0x68]
0x0000ef8a      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000ef93      488b442410     mov rax, qword [rsp + 0x10]
0x0000ef98      0f85d3030000   jne 0xf371
0x0000ef9e      4883c478       add rsp, 0x78                           ; ../coreutils-8.31/lib/fts.c:1011
0x0000efa2      5b             pop rbx
0x0000efa3      5d             pop rbp
0x0000efa4      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:1010
0x0000efa6      415d           pop r13
0x0000efa8      415e           pop r14
0x0000efaa      415f           pop r15
0x0000efac      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:1014
0x0000efad      0f1f00         nop dword [rax]
0x0000efb0      498d5f58       lea rbx, [r15 + 0x58]
0x0000efb4      4889ea         mov rdx, rbp
0x0000efb7      4889de         mov rsi, rbx
0x0000efba      e841f9ffff     call sym.leave_dir.isra.12              ; ../coreutils-8.31/lib/fts.c:1012
0x0000efbf      31d2           xor edx, edx
0x0000efc1      4889ee         mov rsi, rbp
0x0000efc4      4c89ff         mov rdi, r15
0x0000efc7      e874eeffff     call sym.fts_stat
0x0000efcc      418b7f48       mov edi, dword [r15 + 0x48]             ; ../coreutils-8.31/lib/fts.c:994
0x0000efd0      4889ea         mov rdx, rbp
0x0000efd3      4889de         mov rsi, rbx
0x0000efd6      e875f8ffff     call sym.enter_dir.isra.10
0x0000efdb      84c0           test al, al
0x0000efdd      0f85affeffff   jne 0xee92
0x0000efe3      e82834ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1004
0x0000efe8      48c744241000.  mov qword [rsp + 0x10], 0
0x0000eff1      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000eff7      eb8c           jmp 0xef85
0x0000eff9      0f1f80000000.  nop dword [rax]
0x0000f000      c644245e00     mov byte [rsp + 0x5e], 0
0x0000f005      e971fbffff     jmp 0xeb7b
0x0000f00a      660f1f440000   nop word [rax + rax]
0x0000f010      4c89ef         mov rdi, r13
0x0000f013      488b6c2420     mov rbp, qword [rsp + 0x20]
0x0000f018      418b1c24       mov ebx, dword [r12]
0x0000f01c      e8ef39ffff     call sym..plt.got
0x0000f021      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000f026      e885f1ffff     call sym.fts_lfree
0x0000f02b      488b7d18       mov rdi, qword [rbp + 0x18]
0x0000f02f      e81c36ffff     call sym.imp.closedir
0x0000f034      41b907000000   mov r9d, 7                              ; ../coreutils-8.31/lib/fts.c:1006
0x0000f03a      48c745180000.  mov qword [rbp + 0x18], 0
0x0000f042      48c744241000.  mov qword [rsp + 0x10], 0
0x0000f04b      6644894d70     mov word [rbp + 0x70], r9w
0x0000f050      41814f480020.  or dword [r15 + 0x48], reloc.getmntent  ; [0x2000:4]=0x227e98 reloc.getmntent
0x0000f058      41891c24       mov dword [r12], ebx
0x0000f05c      e924ffffff     jmp 0xef85
0x0000f061      0f1f80000000.  nop dword [rax]
0x0000f068      4889c5         mov rbp, rax
0x0000f06b      807c245d00     cmp byte [rsp + 0x5d], 0
0x0000f070      0f8562fcffff   jne 0xecd8
0x0000f076      41f6474804     test byte [r15 + 0x48], 4
0x0000f07b      741e           je 0xf09b
0x0000f07d      488b442418     mov rax, qword [rsp + 0x18]
0x0000f082      49394730       cmp qword [r15 + 0x30], rax
0x0000f086      7405           je 0xf08d                               ; ../coreutils-8.31/lib/fts.c:849
0x0000f088      4885db         test rbx, rbx
0x0000f08b      7506           jne 0xf093
0x0000f08d      48836c244001   sub qword [rsp + 0x40], 1
0x0000f093      488b442440     mov rax, qword [rsp + 0x40]
0x0000f098      c60000         mov byte [rax], 0
0x0000f09b      48837c245000   cmp qword [rsp + 0x50], 0
0x0000f0a1      756d           jne 0xf110
0x0000f0a3      807c245f00     cmp byte [rsp + 0x5f], 0
0x0000f0a8      7466           je 0xf110
0x0000f0aa      837c245801     cmp dword [rsp + 0x58], 1
0x0000f0af      743f           je 0xf0f0
0x0000f0b1      4885db         test rbx, rbx
0x0000f0b4      743a           je 0xf0f0
0x0000f0b6      807c245e00     cmp byte [rsp + 0x5e], 0
0x0000f0bb      0f85f7000000   jne 0xf1b8
0x0000f0c1      49837f4000     cmp qword [r15 + 0x40], 0
0x0000f0c6      0f84b9feffff   je 0xef85
0x0000f0cc      4883fb01       cmp rbx, 1
0x0000f0d0      0f84affeffff   je 0xef85
0x0000f0d6      488b742410     mov rsi, qword [rsp + 0x10]
0x0000f0db      4889da         mov rdx, rbx
0x0000f0de      4c89ff         mov rdi, r15
0x0000f0e1      e82aefffff     call sym.fts_sort
0x0000f0e6      4889442410     mov qword [rsp + 0x10], rax
0x0000f0eb      e995feffff     jmp 0xef85
0x0000f0f0      48837d5800     cmp qword [rbp + 0x58], 0
0x0000f0f5      0f852b010000   jne 0xf226
0x0000f0fb      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/fts.c:897
0x0000f0fe      e84df3ffff     call sym.restore_initial_cwd
0x0000f103      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:896
0x0000f105      0f95c0         setne al
0x0000f108      84c0           test al, al
0x0000f10a      0f8583010000   jne 0xf293
0x0000f110      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/fts.c:632
0x0000f113      75a1           jne 0xf0b6
0x0000f115      837c245803     cmp dword [rsp + 0x58], 3
0x0000f11a      0f84b8010000   je 0xf2d8
0x0000f120      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000f125      e886f0ffff     call sym.fts_lfree
0x0000f12a      48c744241000.  mov qword [rsp + 0x10], 0
0x0000f133      e94dfeffff     jmp 0xef85
0x0000f138      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fts.c:607
0x0000f140      418b0424       mov eax, dword [r12]
0x0000f144      488b6c2420     mov rbp, qword [rsp + 0x20]
0x0000f149      85c0           test eax, eax
0x0000f14b      7421           je 0xf16e
0x0000f14d      4885db         test rbx, rbx
0x0000f150      894540         mov dword [rbp + 0x40], eax
0x0000f153      0f8530010000   jne 0xf289
0x0000f159      48837c245000   cmp qword [rsp + 0x50], 0
0x0000f15f      b804000000     mov eax, 4
0x0000f164      0f851f010000   jne 0xf289
0x0000f16a      66894570       mov word [rbp + 0x70], ax
0x0000f16e      488b7d18       mov rdi, qword [rbp + 0x18]
0x0000f172      4885ff         test rdi, rdi
0x0000f175      0f84f0feffff   je 0xf06b
0x0000f17b      e8d034ffff     call sym.imp.closedir
0x0000f180      48c745180000.  mov qword [rbp + 0x18], 0
0x0000f188      e9defeffff     jmp 0xf06b
0x0000f18d      0f1f00         nop dword [rax]
0x0000f190      837c245803     cmp dword [rsp + 0x58], 3
0x0000f195      0f85e1fdffff   jne 0xef7c
0x0000f19b      41ba04000000   mov r10d, 4
0x0000f1a1      6644895570     mov word [rbp + 0x70], r10w
0x0000f1a6      e86532ffff     call sym.imp.__errno_location
0x0000f1ab      8b00           mov eax, dword [rax]
0x0000f1ad      894540         mov dword [rbp + 0x40], eax
0x0000f1b0      e9c7fdffff     jmp 0xef7c
0x0000f1b5      0f1f00         nop dword [rax]
0x0000f1b8      488d0551ecff.  lea rax, sym.fts_compare_ino            ; 0xde10 ; "H\x8b\x17H\x8b\x06H\x8b\x80\x80"
0x0000f1bf      488b742410     mov rsi, qword [rsp + 0x10]
0x0000f1c4      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/fts.c:880
0x0000f1c7      4c89ff         mov rdi, r15
0x0000f1ca      49894740       mov qword [r15 + 0x40], rax
0x0000f1ce      e83deeffff     call sym.fts_sort
0x0000f1d3      49c747400000.  mov qword [r15 + 0x40], 0
0x0000f1db      4889442410     mov qword [rsp + 0x10], rax
0x0000f1e0      e9a0fdffff     jmp 0xef85
0x0000f1e5      0f1f00         nop dword [rax]
0x0000f1e8      48c7442438a0.  mov qword [rsp + 0x38], 0x186a0         ; [0x186a0:8]=0xe900000000c53c8d
0x0000f1f1      c644245f01     mov byte [rsp + 0x5f], 1
0x0000f1f6      418b7f48       mov edi, dword [r15 + 0x48]
0x0000f1fa      e92cf8ffff     jmp 0xea2b
0x0000f1ff      90             nop
0x0000f200      c644245f00     mov byte [rsp + 0x5f], 0                ; ../coreutils-8.31/lib/fts.c:888
0x0000f205      418b7f48       mov edi, dword [r15 + 0x48]
0x0000f209      e91df8ffff     jmp 0xea2b
0x0000f20e      6690           nop
0x0000f210      31d2           xor edx, edx
0x0000f212      4889ee         mov rsi, rbp
0x0000f215      4c89ff         mov rdi, r15
0x0000f218      e823ecffff     call sym.fts_stat                       ; ../coreutils-8.31/lib/fts.c:889
0x0000f21d      66894570       mov word [rbp + 0x70], ax
0x0000f221      e96cfcffff     jmp 0xee92
0x0000f226      488b7508       mov rsi, qword [rbp + 8]                ; ../coreutils-8.31/lib/fts.c:665
0x0000f22a      488d0d6a3401.  lea rcx, [0x0002269b]                   ; ".."
0x0000f231      baffffffff     mov edx, 0xffffffff                     ; -1
0x0000f236      4c89ff         mov rdi, r15
0x0000f239      e892f3ffff     call sym.fts_safe_changedir
0x0000f23e      85c0           test eax, eax
0x0000f240      0f95c0         setne al
0x0000f243      e9c0feffff     jmp 0xf108
0x0000f248      31c9           xor ecx, ecx
0x0000f24a      89c2           mov edx, eax
0x0000f24c      4889ee         mov rsi, rbp
0x0000f24f      4c89ff         mov rdi, r15
0x0000f252      e879f3ffff     call sym.fts_safe_changedir
0x0000f257      85c0           test eax, eax
0x0000f259      0f8589fcffff   jne 0xeee8
0x0000f25f      e9bef7ffff     jmp 0xea22
0x0000f264      4883bd880000.  cmp qword [rbp + 0x88], 2
0x0000f26c      0f8555fcffff   jne 0xeec7
0x0000f272      89c6           mov esi, eax
0x0000f274      4889ef         mov rdi, rbp
0x0000f277      e8f4f0ffff     call sym.leaf_optimization
0x0000f27c      85c0           test eax, eax
0x0000f27e      757e           jne 0xf2fe
0x0000f280      8b442464       mov eax, dword [rsp + 0x64]
0x0000f284      e93efcffff     jmp 0xeec7
0x0000f289      b807000000     mov eax, 7
0x0000f28e      e9d7feffff     jmp 0xf16a
0x0000f293      bf07000000     mov edi, 7
0x0000f298      66897d70       mov word [rbp + 0x70], di
0x0000f29c      41814f480020.  or dword [r15 + 0x48], reloc.getmntent  ; [0x2000:4]=0x227e98 reloc.getmntent
0x0000f2a4      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000f2a9      e802efffff     call sym.fts_lfree
0x0000f2ae      48c744241000.  mov qword [rsp + 0x10], 0
0x0000f2b7      e9c9fcffff     jmp 0xef85
0x0000f2bc      89c7           mov edi, eax
0x0000f2be      ba03000000     mov edx, 3
0x0000f2c3      be06040000     mov esi, 0x406
0x0000f2c8      31c0           xor eax, eax
0x0000f2ca      e861040100     call sym.rpl_fcntl                      ; ../coreutils-8.31/lib/fts.c:-617
0x0000f2cf      89442464       mov dword [rsp + 0x64], eax
0x0000f2d3      e908fcffff     jmp 0xeee0
0x0000f2d8      0fb74570       movzx eax, word [rbp + 0x70]            ; ../coreutils-8.31/lib/fts.c:1018
0x0000f2dc      6683f807       cmp ax, 7                               ; ../coreutils-8.31/lib/fts.c:-620
0x0000f2e0      0f843afeffff   je 0xf120
0x0000f2e6      6683f804       cmp ax, 4                               ; ../coreutils-8.31/lib/fts.c:1018
0x0000f2ea      0f8430feffff   je 0xf120
0x0000f2f0      be06000000     mov esi, 6
0x0000f2f5      66897570       mov word [rbp + 0x70], si
0x0000f2f9      e922feffff     jmp 0xf120                              ; ../coreutils-8.31/lib/fts.c:1019
0x0000f2fe      837c245803     cmp dword [rsp + 0x58], 3
0x0000f303      0f85f7feffff   jne 0xf200
0x0000f309      8b442464       mov eax, dword [rsp + 0x64]
0x0000f30d      4531e4         xor r12d, r12d
0x0000f310      bb01000000     mov ebx, 1
0x0000f315      e9bbfbffff     jmp 0xeed5
0x0000f31a      660f1f440000   nop word [rax + rax]
0x0000f320      4c89ef         mov rdi, r13
0x0000f323      488b6c2420     mov rbp, qword [rsp + 0x20]
0x0000f328      e8e336ffff     call sym..plt.got
0x0000f32d      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000f332      e879eeffff     call sym.fts_lfree
0x0000f337      488b7d18       mov rdi, qword [rbp + 0x18]
0x0000f33b      e81033ffff     call sym.imp.closedir
0x0000f340      41b807000000   mov r8d, 7
0x0000f346      48c745180000.  mov qword [rbp + 0x18], 0
0x0000f34e      48c744241000.  mov qword [rsp + 0x10], 0
0x0000f357      6644894570     mov word [rbp + 0x70], r8w
0x0000f35c      41814f480020.  or dword [r15 + 0x48], reloc.getmntent  ; [0x2000:4]=0x227e98 reloc.getmntent
0x0000f364      41c704242400.  mov dword [r12], 0x24                   ; '$'
                                                                       ; [0x24:4]=0
0x0000f36c      e914fcffff     jmp 0xef85
0x0000f371      e8ea31ffff     call sym.imp.__stack_chk_fail
0x0000f376      488d05233301.  lea rax, obj.CSWTCH.53                  ; 0x226a0
0x0000f37d      8b0490         mov eax, dword [rax + rdx*4]
0x0000f380      418985900000.  mov dword [r13 + 0x90], eax
0x0000f387      b801000000     mov eax, 1
0x0000f38c      e9b9f7ffff     jmp 0xeb4a
0x0000f391      0f1f440000     nop dword [rax + rax]
0x0000f396      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_fts_open:
0x0000f3a0      4157           push r15
0x0000f3a2      4156           push r14
0x0000f3a4      4155           push r13
0x0000f3a6      4154           push r12
0x0000f3a8      55             push rbp
0x0000f3a9      53             push rbx
0x0000f3aa      4883ec28       sub rsp, 0x28
0x0000f3ae      f7c600f0ffff   test esi, 0xfffff000
0x0000f3b4      0f857e030000   jne 0xf738
0x0000f3ba      89f0           mov eax, esi
0x0000f3bc      89f5           mov ebp, esi
0x0000f3be      2504020000     and eax, 0x204
0x0000f3c3      3d04020000     cmp eax, 0x204
0x0000f3c8      0f846a030000   je 0xf738
0x0000f3ce      40f6c612       test sil, 0x12
0x0000f3d2      0f8460030000   je 0xf738
0x0000f3d8      4989fd         mov r13, rdi
0x0000f3db      be01000000     mov esi, 1
0x0000f3e0      bf80000000     mov edi, 0x80
0x0000f3e5      4989d6         mov r14, rdx
0x0000f3e8      e8c332ffff     call sym.imp.calloc
0x0000f3ed      4885c0         test rax, rax
0x0000f3f0      4889c3         mov rbx, rax
0x0000f3f3      0f8455020000   je 0xf64e
0x0000f3f9      40f6c502       test bpl, 2
0x0000f3fd      4c897040       mov qword [rax + 0x40], r14
0x0000f401      0f8559020000   jne 0xf660
0x0000f407      498b7d00       mov rdi, qword [r13]
0x0000f40b      896848         mov dword [rax + 0x48], ebp
0x0000f40e      c7432c9cffff.  mov dword [rbx + 0x2c], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x0000f415      4885ff         test rdi, rdi
0x0000f418      0f8461020000   je 0xf67f
0x0000f41e      4d89ef         mov r15, r13
0x0000f421      4531e4         xor r12d, r12d
0x0000f424      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/fts.c:-683
0x0000f428      e80331ffff     call sym.imp.strlen
0x0000f42d      4939c4         cmp r12, rax
0x0000f430      4c0f42e0       cmovb r12, rax
0x0000f434      4983c708       add r15, 8
0x0000f438      498b3f         mov rdi, qword [r15]
0x0000f43b      4885ff         test rdi, rdi
0x0000f43e      75e8           jne 0xf428
0x0000f440      498d542401     lea rdx, [r12 + 1]
0x0000f445      b800100000     mov eax, 0x1000
0x0000f44a      4881fa001000.  cmp rdx, 0x1000
0x0000f451      480f42d0       cmovb rdx, rax
0x0000f455      488d7330       lea rsi, [rbx + 0x30]
0x0000f459      488d7b20       lea rdi, [rbx + 0x20]
0x0000f45d      e84ef0ffff     call sym.fts_palloc.isra.2
0x0000f462      84c0           test al, al
0x0000f464      88442416       mov byte [rsp + 0x16], al
0x0000f468      0f849b020000   je 0xf709
0x0000f46e      498b7500       mov rsi, qword [r13]
0x0000f472      4885f6         test rsi, rsi
0x0000f475      0f84a5020000   je 0xf720
0x0000f47b      488d355f2b01.  lea rsi, [0x00021fe1]
0x0000f482      31d2           xor edx, edx
0x0000f484      4889df         mov rdi, rbx
0x0000f487      e894ecffff     call sym.fts_alloc
0x0000f48c      4885c0         test rax, rax
0x0000f48f      4989c7         mov r15, rax
0x0000f492      0f8468020000   je 0xf700
0x0000f498      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000f49f      4d85f6         test r14, r14
0x0000f4a2      498b7500       mov rsi, qword [r13]
0x0000f4a6      49894758       mov qword [r15 + 0x58], rax
0x0000f4aa      49894768       mov qword [r15 + 0x68], rax
0x0000f4ae      740d           je 0xf4bd
0x0000f4b0      8b4348         mov eax, dword [rbx + 0x48]
0x0000f4b3      c1e80a         shr eax, 0xa
0x0000f4b6      83e001         and eax, 1
0x0000f4b9      88442416       mov byte [rsp + 0x16], al               ; ../coreutils-8.31/lib/fts.c:-626
0x0000f4bd      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/fts.c:-629
0x0000f4c0      0f8466020000   je 0xf72c
0x0000f4c6      c1ed0b         shr ebp, 0xb
0x0000f4c9      48c744241800.  mov qword [rsp + 0x18], 0
0x0000f4d2      4531e4         xor r12d, r12d
0x0000f4d5      83f501         xor ebp, 1
0x0000f4d8      89e8           mov eax, ebp
0x0000f4da      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/fts.c:-616
0x0000f4dc      83e001         and eax, 1
0x0000f4df      88442417       mov byte [rsp + 0x17], al
0x0000f4e3      eb77           jmp 0xf55c
0x0000f4e5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/fts.c:-615
0x0000f4e8      4889c2         mov rdx, rax
0x0000f4eb      4889df         mov rdi, rbx
0x0000f4ee      e82decffff     call sym.fts_alloc
0x0000f4f3      4885c0         test rax, rax
0x0000f4f6      4889c1         mov rcx, rax
0x0000f4f9      0f84f1010000   je 0xf6f0
0x0000f4ff      48c740580000.  mov qword [rax + 0x58], 0
0x0000f507      4c897808       mov qword [rax + 8], r15
0x0000f50b      488d80080100.  lea rax, [rax + 0x108]
0x0000f512      4d85e4         test r12, r12
0x0000f515      48894130       mov qword [rcx + 0x30], rax
0x0000f519      0f8471010000   je 0xf690
0x0000f51f      807c241600     cmp byte [rsp + 0x16], 0
0x0000f524      0f8466010000   je 0xf690
0x0000f52a      be0b000000     mov esi, 0xb
0x0000f52f      4d85f6         test r14, r14
0x0000f532      48c781a80000.  mov qword [rcx + 0xa8], 2
0x0000f53d      66897170       mov word [rcx + 0x70], si
0x0000f541      0f8489010000   je 0xf6d0                               ; ../coreutils-8.31/lib/fts.c:876
0x0000f547      4c896110       mov qword [rcx + 0x10], r12
0x0000f54b      4989cc         mov r12, rcx
0x0000f54e      4883c501       add rbp, 1
0x0000f552      498b74ed00     mov rsi, qword [r13 + rbp*8]
0x0000f557      4885f6         test rsi, rsi
0x0000f55a      7454           je 0xf5b0
0x0000f55c      4889f7         mov rdi, rsi
0x0000f55f      4889742408     mov qword [rsp + 8], rsi
0x0000f564      e8c72fffff     call sym.imp.strlen
0x0000f569      4883f802       cmp rax, 2
0x0000f56d      488b742408     mov rsi, qword [rsp + 8]
0x0000f572      0f8670ffffff   jbe 0xf4e8                              ; ../coreutils-8.31/lib/fts.c:-659
0x0000f578      807c241700     cmp byte [rsp + 0x17], 0
0x0000f57d      0f8465ffffff   je 0xf4e8
0x0000f583      807c06ff2f     cmp byte [rsi + rax - 1], 0x2f
0x0000f588      0f855affffff   jne 0xf4e8
0x0000f58e      6690           nop
0x0000f590      807c06fe2f     cmp byte [rsi + rax - 2], 0x2f
0x0000f595      0f854dffffff   jne 0xf4e8
0x0000f59b      4883e801       sub rax, 1
0x0000f59f      4883f801       cmp rax, 1
0x0000f5a3      75eb           jne 0xf590
0x0000f5a5      e93effffff     jmp 0xf4e8
0x0000f5aa      660f1f440000   nop word [rax + rax]
0x0000f5b0      4d85f6         test r14, r14
0x0000f5b3      7417           je 0xf5cc
0x0000f5b5      4883fd01       cmp rbp, 1
0x0000f5b9      7611           jbe 0xf5cc
0x0000f5bb      4c89e6         mov rsi, r12
0x0000f5be      4889ea         mov rdx, rbp
0x0000f5c1      4889df         mov rdi, rbx
0x0000f5c4      e847eaffff     call sym.fts_sort
0x0000f5c9      4989c4         mov r12, rax
0x0000f5cc      488d350e2a01.  lea rsi, [0x00021fe1]
0x0000f5d3      31d2           xor edx, edx
0x0000f5d5      4889df         mov rdi, rbx
0x0000f5d8      e843ebffff     call sym.fts_alloc
0x0000f5dd      4885c0         test rax, rax
0x0000f5e0      488903         mov qword [rbx], rax
0x0000f5e3      0f8407010000   je 0xf6f0
0x0000f5e9      8b7b48         mov edi, dword [rbx + 0x48]
0x0000f5ec      ba09000000     mov edx, 9
0x0000f5f1      488d7358       lea rsi, [rbx + 0x58]
0x0000f5f5      4c896010       mov qword [rax + 0x10], r12
0x0000f5f9      66895070       mov word [rax + 0x70], dx               ; ../coreutils-8.31/lib/fts.c:-901
0x0000f5fd      48c740580100.  mov qword [rax + 0x58], 1
0x0000f605      e816efffff     call sym.setup_dir.isra.4
0x0000f60a      84c0           test al, al
0x0000f60c      0f84de000000   je 0xf6f0                               ; ../coreutils-8.31/lib/fts.c:-707
0x0000f612      8b7348         mov esi, dword [rbx + 0x48]
0x0000f615      f7c604020000   test esi, 0x204
0x0000f61b      7523           jne 0xf640                              ; ../coreutils-8.31/lib/fts.c:-697
0x0000f61d      8b7b2c         mov edi, dword [rbx + 0x2c]
0x0000f620      488d15753001.  lea rdx, [0x0002269c]                   ; "."
0x0000f627      e864efffff     call sym.diropen.isra.6
0x0000f62c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:-694
0x0000f62e      894328         mov dword [rbx + 0x28], eax
0x0000f631      790d           jns 0xf640                              ; ../coreutils-8.31/lib/fts.c:-697
0x0000f633      834b4804       or dword [rbx + 0x48], 4
0x0000f637      660f1f840000.  nop word [rax + rax]
0x0000f640      488d7b60       lea rdi, [rbx + 0x60]
0x0000f644      beffffffff     mov esi, 0xffffffff                     ; ../coreutils-8.31/lib/fts.c:-695 ; -1
0x0000f649      e8c2fe0000     call sym.i_ring_init
0x0000f64e      4883c428       add rsp, 0x28
0x0000f652      4889d8         mov rax, rbx
0x0000f655      5b             pop rbx
0x0000f656      5d             pop rbp
0x0000f657      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:-692
0x0000f659      415d           pop r13
0x0000f65b      415e           pop r14
0x0000f65d      415f           pop r15
0x0000f65f      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:-688
0x0000f660      498b7d00       mov rdi, qword [r13]
0x0000f664      89e8           mov eax, ebp
0x0000f666      c7432c9cffff.  mov dword [rbx + 0x2c], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x0000f66d      80e4fd         and ah, 0xfd                            ; ../coreutils-8.31/lib/fts.c:-686
0x0000f670      83c804         or eax, 4
0x0000f673      4885ff         test rdi, rdi
0x0000f676      894348         mov dword [rbx + 0x48], eax             ; ../coreutils-8.31/lib/fts.c:-685
0x0000f679      0f859ffdffff   jne 0xf41e
0x0000f67f      ba00100000     mov edx, 0x1000                         ; ../coreutils-8.31/lib/fts.c:-683
0x0000f684      e9ccfdffff     jmp 0xf455
0x0000f689      0f1f80000000.  nop dword [rax]
0x0000f690      31d2           xor edx, edx
0x0000f692      4889ce         mov rsi, rcx                            ; ../coreutils-8.31/lib/fts.c:-705
0x0000f695      4889df         mov rdi, rbx
0x0000f698      48894c2408     mov qword [rsp + 8], rcx
0x0000f69d      e89ee7ffff     call sym.fts_stat                       ; ../coreutils-8.31/lib/fts.c:-662
0x0000f6a2      488b4c2408     mov rcx, qword [rsp + 8]
0x0000f6a7      4d85f6         test r14, r14
0x0000f6aa      66894170       mov word [rcx + 0x70], ax
0x0000f6ae      0f8593feffff   jne 0xf547
0x0000f6b4      4d85e4         test r12, r12
0x0000f6b7      48c741100000.  mov qword [rcx + 0x10], 0
0x0000f6bf      7517           jne 0xf6d8
0x0000f6c1      48894c2418     mov qword [rsp + 0x18], rcx
0x0000f6c6      4989cc         mov r12, rcx
0x0000f6c9      e980feffff     jmp 0xf54e
0x0000f6ce      6690           nop
0x0000f6d0      48c741100000.  mov qword [rcx + 0x10], 0
0x0000f6d8      488b442418     mov rax, qword [rsp + 0x18]
0x0000f6dd      48894c2418     mov qword [rsp + 0x18], rcx
0x0000f6e2      48894810       mov qword [rax + 0x10], rcx
0x0000f6e6      e963feffff     jmp 0xf54e
0x0000f6eb      0f1f440000     nop dword [rax + rax]
0x0000f6f0      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/fts.c:-674
0x0000f6f3      e8b8eaffff     call sym.fts_lfree
0x0000f6f8      4c89ff         mov rdi, r15
0x0000f6fb      e81033ffff     call sym..plt.got
0x0000f700      488b7b20       mov rdi, qword [rbx + 0x20]
0x0000f704      e80733ffff     call sym..plt.got
0x0000f709      4889df         mov rdi, rbx
0x0000f70c      31db           xor ebx, ebx
0x0000f70e      e8fd32ffff     call sym..plt.got
0x0000f713      e936ffffff     jmp 0xf64e
0x0000f718      0f1f84000000.  nop dword [rax + rax]
0x0000f720      4531ff         xor r15d, r15d
0x0000f723      4d85f6         test r14, r14
0x0000f726      0f8584fdffff   jne 0xf4b0
0x0000f72c      4531e4         xor r12d, r12d
0x0000f72f      e998feffff     jmp 0xf5cc
0x0000f734      0f1f4000       nop dword [rax]
0x0000f738      e8d32cffff     call sym.imp.__errno_location
0x0000f73d      31db           xor ebx, ebx
0x0000f73f      c70016000000   mov dword [rax], 0x16                   ; ../coreutils-8.31/lib/fts.c:-692 ; [0x16:4]=0x3f400000
0x0000f745      e904ffffff     jmp 0xf64e
0x0000f74a      660f1f440000   nop word [rax + rax]
;-- rpl_fts_close:
0x0000f750      4154           push r12
0x0000f752      55             push rbp
0x0000f753      4889fd         mov rbp, rdi
0x0000f756      53             push rbx
0x0000f757      488b3f         mov rdi, qword [rdi]
0x0000f75a      4885ff         test rdi, rdi
0x0000f75d      7444           je 0xf7a3
0x0000f75f      48837f5800     cmp qword [rdi + 0x58], 0
0x0000f764      7919           jns 0xf77f
0x0000f766      e915010000     jmp 0xf880
0x0000f76b      0f1f440000     nop dword [rax + rax]
0x0000f770      e89b32ffff     call sym..plt.got
0x0000f775      48837b5800     cmp qword [rbx + 0x58], 0
0x0000f77a      4889df         mov rdi, rbx
0x0000f77d      781c           js 0xf79b                               ; ../coreutils-8.31/lib/fts.c:-652
0x0000f77f      488b5f10       mov rbx, qword [rdi + 0x10]
0x0000f783      4885db         test rbx, rbx
0x0000f786      75e8           jne 0xf770
0x0000f788      488b5f08       mov rbx, qword [rdi + 8]
0x0000f78c      e87f32ffff     call sym..plt.got
0x0000f791      48837b5800     cmp qword [rbx + 0x58], 0
0x0000f796      4889df         mov rdi, rbx
0x0000f799      79e4           jns 0xf77f
0x0000f79b      4889df         mov rdi, rbx
0x0000f79e      e86d32ffff     call sym..plt.got
0x0000f7a3      488b7d08       mov rdi, qword [rbp + 8]
0x0000f7a7      4885ff         test rdi, rdi
0x0000f7aa      7405           je 0xf7b1
0x0000f7ac      e8ffe9ffff     call sym.fts_lfree
0x0000f7b1      488b7d10       mov rdi, qword [rbp + 0x10]
0x0000f7b5      e85632ffff     call sym..plt.got
0x0000f7ba      488b7d20       mov rdi, qword [rbp + 0x20]
0x0000f7be      e84d32ffff     call sym..plt.got
0x0000f7c3      8b4548         mov eax, dword [rbp + 0x48]
0x0000f7c6      f6c402         test ah, 2
0x0000f7c9      7465           je 0xf830
0x0000f7cb      8b7d2c         mov edi, dword [rbp + 0x2c]
0x0000f7ce      85ff           test edi, edi
0x0000f7d0      0f898a000000   jns 0xf860
0x0000f7d6      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:-398
0x0000f7d8      488d7d60       lea rdi, [rbp + 0x60]
0x0000f7dc      e81feaffff     call sym.fd_ring_clear
0x0000f7e1      488b7d50       mov rdi, qword [rbp + 0x50]
0x0000f7e5      4885ff         test rdi, rdi
0x0000f7e8      7405           je 0xf7ef
0x0000f7ea      e8c18fffff     call sym.hash_free
0x0000f7ef      f74548020100.  test dword [rbp + 0x48], 0x102          ; ../coreutils-8.31/lib/fts.c:-413
0x0000f7f6      488b7d58       mov rdi, qword [rbp + 0x58]
0x0000f7fa      7424           je 0xf820
0x0000f7fc      4885ff         test rdi, rdi
0x0000f7ff      7405           je 0xf806
0x0000f801      e8aa8fffff     call sym.hash_free
0x0000f806      4889ef         mov rdi, rbp
0x0000f809      e80232ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:-455
0x0000f80e      85db           test ebx, ebx
0x0000f810      0f85ab000000   jne 0xf8c1
0x0000f816      89d8           mov eax, ebx
0x0000f818      5b             pop rbx
0x0000f819      5d             pop rbp
0x0000f81a      415c           pop r12
0x0000f81c      c3             ret
0x0000f81d      0f1f00         nop dword [rax]
0x0000f820      e8eb31ffff     call sym..plt.got
0x0000f825      ebdf           jmp 0xf806
0x0000f827      660f1f840000.  nop word [rax + rax]
0x0000f830      a804           test al, 4
0x0000f832      75a2           jne 0xf7d6
0x0000f834      8b7d28         mov edi, dword [rbp + 0x28]
0x0000f837      e8e42fffff     call sym.imp.fchdir                     ; ../coreutils-8.31/lib/fts.c:-449
0x0000f83c      85c0           test eax, eax
0x0000f83e      7550           jne 0xf890
0x0000f840      8b7d28         mov edi, dword [rbp + 0x28]
0x0000f843      e8f82dffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fts.c:-448
0x0000f848      85c0           test eax, eax
0x0000f84a      748a           je 0xf7d6
0x0000f84c      e8bf2bffff     call sym.imp.__errno_location
0x0000f851      4989c4         mov r12, rax
0x0000f854      eb62           jmp 0xf8b8
0x0000f856      662e0f1f8400.  nop word cs:[rax + rax]
0x0000f860      e8db2dffff     call sym.imp.close
0x0000f865      85c0           test eax, eax
0x0000f867      0f8469ffffff   je 0xf7d6
0x0000f86d      e89e2bffff     call sym.imp.__errno_location
0x0000f872      8b18           mov ebx, dword [rax]
0x0000f874      e95fffffff     jmp 0xf7d8
0x0000f879      0f1f80000000.  nop dword [rax]
0x0000f880      4889fb         mov rbx, rdi
0x0000f883      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:-429
0x0000f886      e88531ffff     call sym..plt.got
0x0000f88b      e913ffffff     jmp 0xf7a3
0x0000f890      e87b2bffff     call sym.imp.__errno_location
0x0000f895      8b7d28         mov edi, dword [rbp + 0x28]             ; ../coreutils-8.31/lib/fts.c:-664
0x0000f898      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/fts.c:-665
0x0000f89b      8b18           mov ebx, dword [rax]
0x0000f89d      e89e2dffff     call sym.imp.close
0x0000f8a2      85c0           test eax, eax
0x0000f8a4      0f842effffff   je 0xf7d8
0x0000f8aa      85db           test ebx, ebx
0x0000f8ac      0f8526ffffff   jne 0xf7d8
0x0000f8b2      660f1f440000   nop word [rax + rax]
0x0000f8b8      418b1c24       mov ebx, dword [r12]
0x0000f8bc      e917ffffff     jmp 0xf7d8
0x0000f8c1      e84a2bffff     call sym.imp.__errno_location
0x0000f8c6      8918           mov dword [rax], ebx
0x0000f8c8      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000f8cd      e944ffffff     jmp 0xf816
0x0000f8d2      0f1f4000       nop dword [rax]
0x0000f8d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_fts_read:
0x0000f8e0      4156           push r14
0x0000f8e2      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:-640
0x0000f8e4      4154           push r12
0x0000f8e6      55             push rbp
0x0000f8e7      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:-641
0x0000f8e8      488b2f         mov rbp, qword [rdi]
0x0000f8eb      4885ed         test rbp, rbp
0x0000f8ee      0f840a010000   je 0xf9fe
0x0000f8f4      8b5748         mov edx, dword [rdi + 0x48]
0x0000f8f7      f6c620         test dh, 0x20                           ; ../coreutils-8.31/lib/fts.c:-640 ; "@"
0x0000f8fa      0f85fe000000   jne 0xf9fe
0x0000f900      0fb74574       movzx eax, word [rbp + 0x74]
0x0000f904      bb03000000     mov ebx, 3
0x0000f909      4989fc         mov r12, rdi
0x0000f90c      66895d74       mov word [rbp + 0x74], bx
0x0000f910      6683f801       cmp ax, 1
0x0000f914      0f8446020000   je 0xfb60
0x0000f91a      6683f802       cmp ax, 2
0x0000f91e      0fb74d70       movzx ecx, word [rbp + 0x70]
0x0000f922      0f84e8000000   je 0xfa10                               ; ../coreutils-8.31/lib/fts.c:-662
0x0000f928      6683f901       cmp cx, 1
0x0000f92c      7532           jne 0xf960
0x0000f92e      e91d020000     jmp 0xfb50
0x0000f933      0f1f440000     nop dword [rax + rax]
0x0000f938      49891c24       mov qword [r12], rbx                    ; ../coreutils-8.31/lib/fts.c:-525
0x0000f93c      4889ef         mov rdi, rbp
0x0000f93f      e8cc30ffff     call sym..plt.got
0x0000f944      48837b5800     cmp qword [rbx + 0x58], 0
0x0000f949      0f8431020000   je 0xfb80
0x0000f94f      0fb74374       movzx eax, word [rbx + 0x74]
0x0000f953      4889dd         mov rbp, rbx
0x0000f956      6683f804       cmp ax, 4
0x0000f95a      0f8528030000   jne 0xfc88
0x0000f960      488b5d10       mov rbx, qword [rbp + 0x10]
0x0000f964      4885db         test rbx, rbx
0x0000f967      75cf           jne 0xf938
0x0000f969      488b5d08       mov rbx, qword [rbp + 8]
0x0000f96d      48837b1800     cmp qword [rbx + 0x18], 0
0x0000f972      0f8568050000   jne 0xfee0
0x0000f978      49891c24       mov qword [r12], rbx
0x0000f97c      4889ef         mov rdi, rbp
0x0000f97f      e88c30ffff     call sym..plt.got
0x0000f984      48837b58ff     cmp qword [rbx + 0x58], 0xffffffffffffffff
0x0000f989      0f84b3040000   je 0xfe42
0x0000f98f      66837b700b     cmp word [rbx + 0x70], 0xb
0x0000f994      0f8435010000   je 0xfacf
0x0000f99a      498b542420     mov rdx, qword [r12 + 0x20]
0x0000f99f      488b4348       mov rax, qword [rbx + 0x48]             ; ../coreutils-8.31/lib/fts.c:-613
0x0000f9a3      c6040200       mov byte [rdx + rax], 0
0x0000f9a7      48837b5800     cmp qword [rbx + 0x58], 0
0x0000f9ac      0f84be030000   je 0xfd70
0x0000f9b2      0fb74372       movzx eax, word [rbx + 0x72]
0x0000f9b6      a802           test al, 2
0x0000f9b8      0f846a030000   je 0xfd28
0x0000f9be      418b442448     mov eax, dword [r12 + 0x48]
0x0000f9c3      8b7b44         mov edi, dword [rbx + 0x44]
0x0000f9c6      a804           test al, 4
0x0000f9c8      0f84fe030000   je 0xfdcc
0x0000f9ce      e86d2cffff     call sym.imp.close
0x0000f9d3      418b7c2448     mov edi, dword [r12 + 0x48]
0x0000f9d8      66837b7002     cmp word [rbx + 0x70], 2
0x0000f9dd      7414           je 0xf9f3
0x0000f9df      8b4b40         mov ecx, dword [rbx + 0x40]
0x0000f9e2      85c9           test ecx, ecx
0x0000f9e4      0f849e030000   je 0xfd88
0x0000f9ea      ba07000000     mov edx, 7
0x0000f9ef      66895370       mov word [rbx + 0x70], dx
0x0000f9f3      81e700200000   and edi, 0x2000                         ; ../coreutils-8.31/lib/fts.c:-428
0x0000f9f9      4889dd         mov rbp, rbx
0x0000f9fc      747c           je 0xfa7a
0x0000f9fe      31ed           xor ebp, ebp
0x0000fa00      5b             pop rbx
0x0000fa01      4889e8         mov rax, rbp
0x0000fa04      5d             pop rbp
0x0000fa05      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:-559
0x0000fa07      415d           pop r13
0x0000fa09      415e           pop r14
0x0000fa0b      c3             ret
0x0000fa0c      0f1f4000       nop dword [rax]
0x0000fa10      8d41f4         lea eax, [rcx - 0xc]
0x0000fa13      6683f801       cmp ax, 1
0x0000fa17      7677           jbe 0xfa90
0x0000fa19      6683f901       cmp cx, 1
0x0000fa1d      0f853dffffff   jne 0xf960
0x0000fa23      f6c240         test dl, 0x40                           ; ../coreutils-8.31/lib/fts-cycle.c:-1395 ; segment.PHDR
0x0000fa26      0f84ac000000   je 0xfad8
0x0000fa2c      498b442418     mov rax, qword [r12 + 0x18]
0x0000fa31      48394578       cmp qword [rbp + 0x78], rax
0x0000fa35      0f849d000000   je 0xfad8
0x0000fa3b      f6457202       test byte [rbp + 0x72], 2
0x0000fa3f      0f85db040000   jne 0xff20
0x0000fa45      498b7c2408     mov rdi, qword [r12 + 8]
0x0000fa4a      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:-985
0x0000fa4d      740e           je 0xfa5d
0x0000fa4f      e85ce7ffff     call sym.fts_lfree
0x0000fa54      49c744240800.  mov qword [r12 + 8], 0
0x0000fa5d      418b7c2448     mov edi, dword [r12 + 0x48]
0x0000fa62      41ba06000000   mov r10d, 6
0x0000fa68      498d742458     lea rsi, [r12 + 0x58]
0x0000fa6d      6644895570     mov word [rbp + 0x70], r10w
0x0000fa72      4889ea         mov rdx, rbp
0x0000fa75      e886eeffff     call sym.leave_dir.isra.12
0x0000fa7a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:-982
0x0000fa7b      4889e8         mov rax, rbp
0x0000fa7e      5d             pop rbp                                 ; ../coreutils-8.31/lib/fts.c:-983
0x0000fa7f      415c           pop r12
0x0000fa81      415d           pop r13                                 ; string_fortified.h:-1508
0x0000fa83      415e           pop r14
0x0000fa85      c3             ret
0x0000fa86      662e0f1f8400.  nop word cs:[rax + rax]
0x0000fa90      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/fts.c:-979
0x0000fa95      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fts.c:-553
0x0000fa98      e8a3e3ffff     call sym.fts_stat
0x0000fa9d      6683f801       cmp ax, 1
0x0000faa1      66894570       mov word [rbp + 0x70], ax
0x0000faa5      0f8441030000   je 0xfdec
0x0000faab      6683f80b       cmp ax, 0xb
0x0000faaf      49892c24       mov qword [r12], rbp
0x0000fab3      75c5           jne 0xfa7a                              ; ../coreutils-8.31/lib/fts.c:-525
0x0000fab5      0f1f00         nop dword [rax]
0x0000fab8      488b85a80000.  mov rax, qword [rbp + 0xa8]
0x0000fabf      4883f802       cmp rax, 2
0x0000fac3      0f849f030000   je 0xfe68
0x0000fac9      4883f801       cmp rax, 1
0x0000facd      74ab           je 0xfa7a
0x0000facf      e82c29ffff     call sym.imp.abort
0x0000fad4      0f1f4000       nop dword [rax]
0x0000fad8      498b7c2408     mov rdi, qword [r12 + 8]
0x0000fadd      4885ff         test rdi, rdi
0x0000fae0      0f8412020000   je 0xfcf8
0x0000fae6      f6c610         test dh, 0x10
0x0000fae9      0f85f3010000   jne 0xfce2
0x0000faef      488b4d30       mov rcx, qword [rbp + 0x30]
0x0000faf3      baffffffff     mov edx, 0xffffffff                     ; -1
0x0000faf8      4889ee         mov rsi, rbp
0x0000fafb      4c89e7         mov rdi, r12
0x0000fafe      e8cdeaffff     call sym.fts_safe_changedir
0x0000fb03      85c0           test eax, eax
0x0000fb05      0f84b7020000   je 0xfdc2
0x0000fb0b      e80029ffff     call sym.imp.__errno_location
0x0000fb10      8b00           mov eax, dword [rax]
0x0000fb12      66834d7201     or word [rbp + 0x72], 1
0x0000fb17      894540         mov dword [rbp + 0x40], eax             ; ../coreutils-8.31/lib/fts.c:-530
0x0000fb1a      498b6c2408     mov rbp, qword [r12 + 8]
0x0000fb1f      4885ed         test rbp, rbp
0x0000fb22      0f84ee010000   je 0xfd16
0x0000fb28      4889e8         mov rax, rbp
0x0000fb2b      0f1f440000     nop dword [rax + rax]
0x0000fb30      488b5008       mov rdx, qword [rax + 8]
0x0000fb34      488b5230       mov rdx, qword [rdx + 0x30]
0x0000fb38      48895030       mov qword [rax + 0x30], rdx
0x0000fb3c      488b4010       mov rax, qword [rax + 0x10]             ; ../coreutils-8.31/lib/fts.c:-529
0x0000fb40      4885c0         test rax, rax
0x0000fb43      75eb           jne 0xfb30
0x0000fb45      e9cc010000     jmp 0xfd16
0x0000fb4a      660f1f440000   nop word [rax + rax]
0x0000fb50      6683f804       cmp ax, 4
0x0000fb54      0f85c9feffff   jne 0xfa23
0x0000fb5a      e9dcfeffff     jmp 0xfa3b
0x0000fb5f      90             nop
0x0000fb60      4889ee         mov rsi, rbp
0x0000fb63      31d2           xor edx, edx
0x0000fb65      e8d6e2ffff     call sym.fts_stat
0x0000fb6a      66894570       mov word [rbp + 0x70], ax
0x0000fb6e      4889e8         mov rax, rbp
0x0000fb71      5b             pop rbx
0x0000fb72      5d             pop rbp
0x0000fb73      415c           pop r12
0x0000fb75      415d           pop r13
0x0000fb77      415e           pop r14
0x0000fb79      c3             ret
0x0000fb7a      660f1f440000   nop word [rax + rax]
0x0000fb80      4c89e7         mov rdi, r12
0x0000fb83      e8c8e8ffff     call sym.restore_initial_cwd
0x0000fb88      85c0           test eax, eax
0x0000fb8a      0f8501040000   jne 0xff91
0x0000fb90      41f744244802.  test dword [r12 + 0x48], 0x102
0x0000fb99      498b7c2458     mov rdi, qword [r12 + 0x58]
0x0000fb9e      0f8434010000   je 0xfcd8
0x0000fba4      4885ff         test rdi, rdi
0x0000fba7      7405           je 0xfbae
0x0000fba9      e8028cffff     call sym.hash_free
0x0000fbae      488b5360       mov rdx, qword [rbx + 0x60]
0x0000fbb2      488dab080100.  lea rbp, [rbx + 0x108]
0x0000fbb9      498b7c2420     mov rdi, qword [r12 + 0x20]
0x0000fbbe      4889ee         mov rsi, rbp
0x0000fbc1      48895348       mov qword [rbx + 0x48], rdx
0x0000fbc5      4883c201       add rdx, 1
0x0000fbc9      e8c22cffff     call sym.imp.memmove
0x0000fbce      be2f000000     mov esi, 0x2f                           ; '/'
0x0000fbd3      4889ef         mov rdi, rbp
0x0000fbd6      e8f529ffff     call sym.imp.strrchr
0x0000fbdb      4885c0         test rax, rax
0x0000fbde      742b           je 0xfc0b
0x0000fbe0      4839c5         cmp rbp, rax
0x0000fbe3      0f84c7010000   je 0xfdb0                               ; ../coreutils-8.31/lib/fts.c:-581
0x0000fbe9      4c8d6801       lea r13, [rax + 1]
0x0000fbed      4c89ef         mov rdi, r13
0x0000fbf0      e83b29ffff     call sym.imp.strlen
0x0000fbf5      488d5001       lea rdx, [rax + 1]
0x0000fbf9      4989c6         mov r14, rax
0x0000fbfc      4c89ee         mov rsi, r13
0x0000fbff      4889ef         mov rdi, rbp
0x0000fc02      e8892cffff     call sym.imp.memmove
0x0000fc07      4c897360       mov qword [rbx + 0x60], r14
0x0000fc0b      498b442420     mov rax, qword [r12 + 0x20]
0x0000fc10      418b7c2448     mov edi, dword [r12 + 0x48]
0x0000fc15      498d742458     lea rsi, [r12 + 0x58]
0x0000fc1a      4889dd         mov rbp, rbx
0x0000fc1d      48894338       mov qword [rbx + 0x38], rax
0x0000fc21      48894330       mov qword [rbx + 0x30], rax
0x0000fc25      e8f6e8ffff     call sym.setup_dir.isra.4
0x0000fc2a      0fb74370       movzx eax, word [rbx + 0x70]
0x0000fc2e      6683f80b       cmp ax, 0xb
0x0000fc32      49892c24       mov qword [r12], rbp
0x0000fc36      0f847cfeffff   je 0xfab8
0x0000fc3c      6683f801       cmp ax, 1
0x0000fc40      0f8534feffff   jne 0xfa7a
0x0000fc46      48837d5800     cmp qword [rbp + 0x58], 0
0x0000fc4b      7509           jne 0xfc56
0x0000fc4d      488b4578       mov rax, qword [rbp + 0x78]
0x0000fc51      4989442418     mov qword [r12 + 0x18], rax
0x0000fc56      418b7c2448     mov edi, dword [r12 + 0x48]
0x0000fc5b      498d742458     lea rsi, [r12 + 0x58]
0x0000fc60      4889ea         mov rdx, rbp
0x0000fc63      e8e8ebffff     call sym.enter_dir.isra.10
0x0000fc68      84c0           test al, al
0x0000fc6a      0f850afeffff   jne 0xfa7a
0x0000fc70      e89b27ffff     call sym.imp.__errno_location
0x0000fc75      31ed           xor ebp, ebp
0x0000fc77      c7000c000000   mov dword [rax], 0xc                    ; ../coreutils-8.31/lib/fts.c:-735 ; [0xc:4]=0
0x0000fc7d      e9f8fdffff     jmp 0xfa7a
0x0000fc82      660f1f440000   nop word [rax + rax]
0x0000fc88      6683f802       cmp ax, 2                               ; ../coreutils-8.31/lib/fts.c:-730
0x0000fc8c      0f849b020000   je 0xff2d
0x0000fc92      488b4508       mov rax, qword [rbp + 8]
0x0000fc96      488db5080100.  lea rsi, [rbp + 0x108]
0x0000fc9d      488b7848       mov rdi, qword [rax + 0x48]
0x0000fca1      488b4038       mov rax, qword [rax + 0x38]
0x0000fca5      807c38ff2f     cmp byte [rax + rdi - 1], 0x2f
0x0000fcaa      488d57ff       lea rdx, [rdi - 1]
0x0000fcae      480f44fa       cmove rdi, rdx
0x0000fcb2      49037c2420     add rdi, qword [r12 + 0x20]
0x0000fcb7      c6072f         mov byte [rdi], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x0000fcba      488b4560       mov rax, qword [rbp + 0x60]             ; ../coreutils-8.31/lib/fts.c:-598
0x0000fcbe      4883c701       add rdi, 1
0x0000fcc2      488d5001       lea rdx, [rax + 1]
0x0000fcc6      e8c52bffff     call sym.imp.memmove
0x0000fccb      0fb74570       movzx eax, word [rbp + 0x70]
0x0000fccf      e95affffff     jmp 0xfc2e
0x0000fcd4      0f1f4000       nop dword [rax]
0x0000fcd8      e8332dffff     call sym..plt.got
0x0000fcdd      e9ccfeffff     jmp 0xfbae
0x0000fce2      80e6ef         and dh, 0xef
0x0000fce5      4189542448     mov dword [r12 + 0x48], edx
0x0000fcea      e8c1e4ffff     call sym.fts_lfree
0x0000fcef      49c744240800.  mov qword [r12 + 8], 0
0x0000fcf8      be03000000     mov esi, 3
0x0000fcfd      4c89e7         mov rdi, r12
0x0000fd00      e8bbecffff     call sym.fts_build
0x0000fd05      4885c0         test rax, rax
0x0000fd08      4989442408     mov qword [r12 + 8], rax
0x0000fd0d      0f84f1000000   je 0xfe04
0x0000fd13      4889c5         mov rbp, rax
0x0000fd16      49c744240800.  mov qword [r12 + 8], 0
0x0000fd1f      e96effffff     jmp 0xfc92
0x0000fd24      0f1f4000       nop dword [rax]
0x0000fd28      a801           test al, 1
0x0000fd2a      0f85a3fcffff   jne 0xf9d3
0x0000fd30      488b7308       mov rsi, qword [rbx + 8]
0x0000fd34      488d0d602901.  lea rcx, [0x0002269b]                   ; ".."
0x0000fd3b      baffffffff     mov edx, 0xffffffff                     ; -1
0x0000fd40      4c89e7         mov rdi, r12
0x0000fd43      e888e8ffff     call sym.fts_safe_changedir
0x0000fd48      85c0           test eax, eax
0x0000fd4a      0f8483fcffff   je 0xf9d3
0x0000fd50      e8bb26ffff     call sym.imp.__errno_location
0x0000fd55      418b7c2448     mov edi, dword [r12 + 0x48]
0x0000fd5a      8b00           mov eax, dword [rax]
0x0000fd5c      81cf00200000   or edi, 0x2000                          ; ../coreutils-8.31/lib/fts.c:-708
0x0000fd62      894340         mov dword [rbx + 0x40], eax
0x0000fd65      41897c2448     mov dword [r12 + 0x48], edi
0x0000fd6a      e969fcffff     jmp 0xf9d8
0x0000fd6f      90             nop
0x0000fd70      4c89e7         mov rdi, r12
0x0000fd73      e8d8e6ffff     call sym.restore_initial_cwd
0x0000fd78      85c0           test eax, eax
0x0000fd7a      75d4           jne 0xfd50
0x0000fd7c      e952fcffff     jmp 0xf9d3                              ; ../coreutils-8.31/lib/fts.c:-700
0x0000fd81      0f1f80000000.  nop dword [rax]
0x0000fd88      b806000000     mov eax, 6
0x0000fd8d      498d742458     lea rsi, [r12 + 0x58]
0x0000fd92      4889da         mov rdx, rbx
0x0000fd95      66894370       mov word [rbx + 0x70], ax               ; ../coreutils-8.31/lib/fts.c:-790
0x0000fd99      e862ebffff     call sym.leave_dir.isra.12
0x0000fd9e      418b7c2448     mov edi, dword [r12 + 0x48]
0x0000fda3      e94bfcffff     jmp 0xf9f3
0x0000fda8      0f1f84000000.  nop dword [rax + rax]
0x0000fdb0      80bb09010000.  cmp byte [rbx + 0x109], 0
0x0000fdb7      0f852cfeffff   jne 0xfbe9
0x0000fdbd      e949feffff     jmp 0xfc0b
0x0000fdc2      498b6c2408     mov rbp, qword [r12 + 8]
0x0000fdc7      e94affffff     jmp 0xfd16
0x0000fdcc      f6c402         test ah, 2
0x0000fdcf      0f8498010000   je 0xff6d
0x0000fdd5      89fe           mov esi, edi
0x0000fdd7      ba01000000     mov edx, 1
0x0000fddc      4c89e7         mov rdi, r12
0x0000fddf      e8fce5ffff     call sym.cwd_advance_fd                 ; ../coreutils-8.31/lib/fts.c:-815
0x0000fde4      8b7b44         mov edi, dword [rbx + 0x44]
0x0000fde7      e9e2fbffff     jmp 0xf9ce
0x0000fdec      418b742448     mov esi, dword [r12 + 0x48]
0x0000fdf1      40f6c604       test sil, 4
0x0000fdf5      0f8401020000   je 0xfffc
0x0000fdfb      49892c24       mov qword [r12], rbp
0x0000fdff      e942feffff     jmp 0xfc46
0x0000fe04      418b7c2448     mov edi, dword [r12 + 0x48]
0x0000fe09      f7c700200000   test edi, 0x2000
0x0000fe0f      0f85e9fbffff   jne 0xf9fe
0x0000fe15      448b4d40       mov r9d, dword [rbp + 0x40]
0x0000fe19      4585c9         test r9d, r9d
0x0000fe1c      7412           je 0xfe30                               ; ../coreutils-8.31/lib/fts.c:-755
0x0000fe1e      66837d7004     cmp word [rbp + 0x70], 4
0x0000fe23      740b           je 0xfe30
0x0000fe25      41b807000000   mov r8d, 7
0x0000fe2b      6644894570     mov word [rbp + 0x70], r8w              ; ../coreutils-8.31/lib/fts.c:-774
0x0000fe30      498d742458     lea rsi, [r12 + 0x58]
0x0000fe35      4889ea         mov rdx, rbp
0x0000fe38      e8c3eaffff     call sym.leave_dir.isra.12
0x0000fe3d      e938fcffff     jmp 0xfa7a
0x0000fe42      4889df         mov rdi, rbx
0x0000fe45      31ed           xor ebp, ebp
0x0000fe47      e8c42bffff     call sym..plt.got
0x0000fe4c      e8bf25ffff     call sym.imp.__errno_location
0x0000fe51      c70000000000   mov dword [rax], 0
0x0000fe57      49c704240000.  mov qword [r12], 0
0x0000fe5f      e916fcffff     jmp 0xfa7a
0x0000fe64      0f1f4000       nop dword [rax]
0x0000fe68      488b5d08       mov rbx, qword [rbp + 8]
0x0000fe6c      48837b6800     cmp qword [rbx + 0x68], 0
0x0000fe71      7511           jne 0xfe84
0x0000fe73      418b442448     mov eax, dword [r12 + 0x48]
0x0000fe78      83e018         and eax, 0x18
0x0000fe7b      83f818         cmp eax, 0x18
0x0000fe7e      0f8459010000   je 0xffdd
0x0000fe84      31d2           xor edx, edx
0x0000fe86      4889ee         mov rsi, rbp
0x0000fe89      4c89e7         mov rdi, r12
0x0000fe8c      e8afdfffff     call sym.fts_stat
0x0000fe91      8b9590000000   mov edx, dword [rbp + 0x90]
0x0000fe97      66894570       mov word [rbp + 0x70], ax
0x0000fe9b      81e200f00000   and edx, 0xf000
0x0000fea1      81fa00400000   cmp edx, entry.fini0                    ; sym.__do_global_dtors_aux
                                                                       ; 0x4000
0x0000fea7      0f858ffdffff   jne 0xfc3c
0x0000fead      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:-805
0x0000feb2      0f8416010000   je 0xffce
0x0000feb8      488b4b68       mov rcx, qword [rbx + 0x68]             ; ../coreutils-8.31/lib/fts.c:-804
0x0000febc      488d51ff       lea rdx, [rcx - 1]
0x0000fec0      4883fafd       cmp rdx, 0xfffffffffffffffd
0x0000fec4      7704           ja 0xfeca
0x0000fec6      48895368       mov qword [rbx + 0x68], rdx
0x0000feca      6683f801       cmp ax, 1
0x0000fece      0f85a6fbffff   jne 0xfa7a
0x0000fed4      e97dfdffff     jmp 0xfc56                              ; ../coreutils-8.31/lib/fts.c:-796
0x0000fed9      0f1f80000000.  nop dword [rax]
0x0000fee0      488b4348       mov rax, qword [rbx + 0x48]
0x0000fee4      498b542420     mov rdx, qword [r12 + 0x20]
0x0000fee9      be03000000     mov esi, 3
0x0000feee      49891c24       mov qword [r12], rbx
0x0000fef2      4c89e7         mov rdi, r12
0x0000fef5      c6040200       mov byte [rdx + rax], 0                 ; ../coreutils-8.31/lib/fts.c:-777
0x0000fef9      e8c2eaffff     call sym.fts_build
0x0000fefe      4885c0         test rax, rax
0x0000ff01      4889c3         mov rbx, rax
0x0000ff04      7452           je 0xff58
0x0000ff06      4889ef         mov rdi, rbp
0x0000ff09      4889dd         mov rbp, rbx
0x0000ff0c      e8ff2affff     call sym..plt.got
0x0000ff11      e97cfdffff     jmp 0xfc92
0x0000ff16      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ff20      8b7d44         mov edi, dword [rbp + 0x44]             ; ../coreutils-8.31/lib/fts.c:-754
0x0000ff23      e81827ffff     call sym.imp.close
0x0000ff28      e918fbffff     jmp 0xfa45                              ; ../coreutils-8.31/lib/fts.c:-757
0x0000ff2d      ba01000000     mov edx, 1
0x0000ff32      4889de         mov rsi, rbx
0x0000ff35      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/fts.c:-745
0x0000ff38      e803dfffff     call sym.fts_stat
0x0000ff3d      6683f801       cmp ax, 1
0x0000ff41      66894370       mov word [rbx + 0x70], ax
0x0000ff45      745a           je 0xffa1                               ; ../coreutils-8.31/lib/fts.c:-744
0x0000ff47      be03000000     mov esi, 3
0x0000ff4c      4889dd         mov rbp, rbx
0x0000ff4f      66897374       mov word [rbx + 0x74], si
0x0000ff53      e93afdffff     jmp 0xfc92
0x0000ff58      41f644244920   test byte [r12 + 0x49], 0x20
0x0000ff5e      0f859afaffff   jne 0xf9fe
0x0000ff64      488b5d08       mov rbx, qword [rbp + 8]
0x0000ff68      e90bfaffff     jmp 0xf978
0x0000ff6d      e8ae28ffff     call sym.imp.fchdir
0x0000ff72      85c0           test eax, eax
0x0000ff74      7413           je 0xff89
0x0000ff76      e89524ffff     call sym.imp.__errno_location
0x0000ff7b      8b00           mov eax, dword [rax]
0x0000ff7d      894340         mov dword [rbx + 0x40], eax
0x0000ff80      41814c244800.  or dword [r12 + 0x48], reloc.getmntent  ; [0x2000:4]=0x227e98 reloc.getmntent
0x0000ff89      8b7b44         mov edi, dword [rbx + 0x44]             ; ../coreutils-8.31/lib/fts.c:-741
0x0000ff8c      e93dfaffff     jmp 0xf9ce
0x0000ff91      41814c244800.  or dword [r12 + 0x48], reloc.getmntent  ; [0x2000:4]=0x227e98 reloc.getmntent
0x0000ff9a      31ed           xor ebp, ebp
0x0000ff9c      e9d9faffff     jmp 0xfa7a
0x0000ffa1      418b742448     mov esi, dword [r12 + 0x48]
0x0000ffa6      40f6c604       test sil, 4
0x0000ffaa      759b           jne 0xff47
0x0000ffac      418b7c242c     mov edi, dword [r12 + 0x2c]
0x0000ffb1      488d15e42601.  lea rdx, [0x0002269c]                   ; ../coreutils-8.31/lib/fts.c:-738 ; "."
0x0000ffb8      e8d3e5ffff     call sym.diropen.isra.6
0x0000ffbd      85c0           test eax, eax
0x0000ffbf      894344         mov dword [rbx + 0x44], eax
0x0000ffc2      787c           js 0x10040
0x0000ffc4      66834b7202     or word [rbx + 0x72], 2
0x0000ffc9      e979ffffff     jmp 0xff47
0x0000ffce      6683f801       cmp ax, 1
0x0000ffd2      0f85a2faffff   jne 0xfa7a
0x0000ffd8      e970fcffff     jmp 0xfc4d
0x0000ffdd      418b74242c     mov esi, dword [r12 + 0x2c]
0x0000ffe2      4889df         mov rdi, rbx
0x0000ffe5      e886e3ffff     call sym.leaf_optimization
0x0000ffea      83f802         cmp eax, 2
0x0000ffed      0f8591feffff   jne 0xfe84
0x0000fff3      0fb74570       movzx eax, word [rbp + 0x70]
0x0000fff7      e940fcffff     jmp 0xfc3c
0x0000fffc      418b7c242c     mov edi, dword [r12 + 0x2c]
0x00010001      488d15942601.  lea rdx, [0x0002269c]                   ; ../coreutils-8.31/lib/fts.c:-730 ; "."
0x00010008      e883e5ffff     call sym.diropen.isra.6
0x0001000d      85c0           test eax, eax
0x0001000f      894544         mov dword [rbp + 0x44], eax
0x00010012      780e           js 0x10022                              ; ../coreutils-8.31/lib/fts.c:-727
0x00010014      66834d7202     or word [rbp + 0x72], 2
0x00010019      0fb74570       movzx eax, word [rbp + 0x70]
0x0001001d      e90cfcffff     jmp 0xfc2e
0x00010022      e8e923ffff     call sym.imp.__errno_location
0x00010027      8b00           mov eax, dword [rax]
0x00010029      41bb07000000   mov r11d, 7
0x0001002f      6644895d70     mov word [rbp + 0x70], r11w
0x00010034      894540         mov dword [rbp + 0x40], eax
0x00010037      49892c24       mov qword [r12], rbp
0x0001003b      e93afaffff     jmp 0xfa7a
0x00010040      e8cb23ffff     call sym.imp.__errno_location
0x00010045      8b00           mov eax, dword [rax]
0x00010047      bf07000000     mov edi, 7
0x0001004c      66897b70       mov word [rbx + 0x70], di
0x00010050      894340         mov dword [rbx + 0x40], eax
0x00010053      e9effeffff     jmp 0xff47
0x00010058      0f1f84000000.  nop dword [rax + rax]
;-- rpl_fts_set:
0x00010060      83fa04         cmp edx, 4
0x00010063      770b           ja 0x10070
0x00010065      66895674       mov word [rsi + 0x74], dx
0x00010069      31c0           xor eax, eax
0x0001006b      c3             ret
0x0001006c      0f1f4000       nop dword [rax]
0x00010070      4883ec08       sub rsp, 8
0x00010074      e89723ffff     call sym.imp.__errno_location
0x00010079      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x3f400000
0x0001007f      b801000000     mov eax, 1
0x00010084      4883c408       add rsp, 8
0x00010088      c3             ret
0x00010089      0f1f80000000.  nop dword [rax]
;-- rpl_fts_children:
0x00010090      4156           push r14
0x00010092      4155           push r13
0x00010094      4154           push r12
0x00010096      55             push rbp
0x00010097      4189f4         mov r12d, esi
0x0001009a      53             push rbx
0x0001009b      4889fb         mov rbx, rdi
0x0001009e      e86d23ffff     call sym.imp.__errno_location
0x000100a3      41f7c4ffefff.  test r12d, 0xffffefff
0x000100aa      4989c5         mov r13, rax
0x000100ad      0f85e5000000   jne 0x10198
0x000100b3      488b2b         mov rbp, qword [rbx]
0x000100b6      c70000000000   mov dword [rax], 0
0x000100bc      f6434920       test byte [rbx + 0x49], 0x20
0x000100c0      757e           jne 0x10140
0x000100c2      0fb74570       movzx eax, word [rbp + 0x70]
0x000100c6      6683f809       cmp ax, 9
0x000100ca      7464           je 0x10130
0x000100cc      6683f801       cmp ax, 1
0x000100d0      756e           jne 0x10140
0x000100d2      488b7b08       mov rdi, qword [rbx + 8]
0x000100d6      4885ff         test rdi, rdi
0x000100d9      7405           je 0x100e0
0x000100db      e8d0e0ffff     call sym.fts_lfree
0x000100e0      4181fc001000.  cmp r12d, 0x1000
0x000100e7      41be01000000   mov r14d, 1
0x000100ed      750d           jne 0x100fc
0x000100ef      814b48001000.  or dword [rbx + 0x48], 0x1000           ; [0x1000:4]=0x6c616e72
0x000100f6      41be02000000   mov r14d, 2
0x000100fc      48837d5800     cmp qword [rbp + 0x58], 0
0x00010101      7512           jne 0x10115
0x00010103      488b4530       mov rax, qword [rbp + 0x30]
0x00010107      80382f         cmp byte [rax], 0x2f
0x0001010a      7409           je 0x10115
0x0001010c      8b7348         mov esi, dword [rbx + 0x48]
0x0001010f      40f6c604       test sil, 4
0x00010113      743b           je 0x10150
0x00010115      4489f6         mov esi, r14d
0x00010118      4889df         mov rdi, rbx
0x0001011b      e8a0e8ffff     call sym.fts_build
0x00010120      48894308       mov qword [rbx + 8], rax
0x00010124      5b             pop rbx
0x00010125      5d             pop rbp
0x00010126      415c           pop r12
0x00010128      415d           pop r13
0x0001012a      415e           pop r14
0x0001012c      c3             ret
0x0001012d      0f1f00         nop dword [rax]
0x00010130      5b             pop rbx
0x00010131      488b4510       mov rax, qword [rbp + 0x10]
0x00010135      5d             pop rbp
0x00010136      415c           pop r12
0x00010138      415d           pop r13
0x0001013a      415e           pop r14
0x0001013c      c3             ret
0x0001013d      0f1f00         nop dword [rax]
0x00010140      5b             pop rbx
0x00010141      31c0           xor eax, eax
0x00010143      5d             pop rbp
0x00010144      415c           pop r12
0x00010146      415d           pop r13
0x00010148      415e           pop r14
0x0001014a      c3             ret
0x0001014b      0f1f440000     nop dword [rax + rax]
0x00010150      8b7b2c         mov edi, dword [rbx + 0x2c]
0x00010153      488d15422501.  lea rdx, [0x0002269c]                   ; "."
0x0001015a      e831e4ffff     call sym.diropen.isra.6
0x0001015f      85c0           test eax, eax
0x00010161      89c5           mov ebp, eax
0x00010163      7854           js 0x101b9
0x00010165      4489f6         mov esi, r14d
0x00010168      4889df         mov rdi, rbx
0x0001016b      e850e8ffff     call sym.fts_build
0x00010170      f6434902       test byte [rbx + 0x49], 2
0x00010174      48894308       mov qword [rbx + 8], rax
0x00010178      752e           jne 0x101a8
0x0001017a      89ef           mov edi, ebp
0x0001017c      e89f26ffff     call sym.imp.fchdir
0x00010181      85c0           test eax, eax
0x00010183      7543           jne 0x101c8
0x00010185      89ef           mov edi, ebp
0x00010187      e8b424ffff     call sym.imp.close
0x0001018c      488b4308       mov rax, qword [rbx + 8]
0x00010190      eb92           jmp 0x10124
0x00010192      660f1f440000   nop word [rax + rax]
0x00010198      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x3f400000
0x0001019e      31c0           xor eax, eax
0x000101a0      e97fffffff     jmp 0x10124
0x000101a5      0f1f00         nop dword [rax]
0x000101a8      ba01000000     mov edx, 1
0x000101ad      89ee           mov esi, ebp
0x000101af      4889df         mov rdi, rbx
0x000101b2      e829e2ffff     call sym.cwd_advance_fd
0x000101b7      ebd3           jmp 0x1018c
0x000101b9      48c743080000.  mov qword [rbx + 8], 0
0x000101c1      31c0           xor eax, eax
0x000101c3      e95cffffff     jmp 0x10124
0x000101c8      418b5d00       mov ebx, dword [r13]
0x000101cc      89ef           mov edi, ebp
0x000101ce      e86d24ffff     call sym.imp.close
0x000101d3      31c0           xor eax, eax
0x000101d5      41895d00       mov dword [r13], ebx
0x000101d9      e946ffffff     jmp 0x10124
0x000101de      6690           nop
;-- rpl_mbrtowc:
0x000101e0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x000101e2      4154           push r12
0x000101e4      4989f5         mov r13, rsi
0x000101e7      55             push rbp
0x000101e8      53             push rbx
0x000101e9      4889fb         mov rbx, rdi
0x000101ec      4989d4         mov r12, rdx
0x000101ef      4883ec18       sub rsp, 0x18
0x000101f3      64488b042528.  mov rax, qword fs:[0x28]
0x000101fc      4889442408     mov qword [rsp + 8], rax
0x00010201      31c0           xor eax, eax
0x00010203      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00010208      4885ff         test rdi, rdi
0x0001020b      480f44d8       cmove rbx, rax
0x0001020f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00010212      e86923ffff     call sym.imp.mbrtowc
0x00010217      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0001021b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0001021e      7620           jbe 0x10240                             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00010220      4d85e4         test r12, r12
0x00010223      741b           je 0x10240
0x00010225      31ff           xor edi, edi
0x00010227      e884f20000     call sym.hard_locale
0x0001022c      84c0           test al, al
0x0001022e      7510           jne 0x10240
0x00010230      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00010235      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0001023a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0001023c      0f1f4000       nop dword [rax]
0x00010240      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00010245      644833142528.  xor rdx, qword fs:[0x28]
0x0001024e      4889e8         mov rax, rbp
0x00010251      750b           jne 0x1025e
0x00010253      4883c418       add rsp, 0x18
0x00010257      5b             pop rbx
0x00010258      5d             pop rbp
0x00010259      415c           pop r12
0x0001025b      415d           pop r13
0x0001025d      c3             ret
0x0001025e      e8fd22ffff     call sym.imp.__stack_chk_fail
0x00010263      662e0f1f8400.  nop word cs:[rax + rax]
0x0001026d      0f1f00         nop dword [rax]
;-- unescape_tab:
0x00010270      53             push rbx                                ; ../coreutils-8.31/lib/mountlist.c:402
0x00010271      4889fb         mov rbx, rdi
0x00010274      e8b722ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/mountlist.c:404
0x00010279      4889d9         mov rcx, rbx
0x0001027c      4883c001       add rax, 1
0x00010280      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/mountlist.c:405
0x00010282      eb13           jmp 0x10297
0x00010284      0f1f4000       nop dword [rax]
0x00010288      408831         mov byte [rcx], sil                     ; ../coreutils-8.31/lib/mountlist.c:418
0x0001028b      4889fa         mov rdx, rdi
0x0001028e      4883c101       add rcx, 1
0x00010292      4839d0         cmp rax, rdx                            ; ../coreutils-8.31/lib/mountlist.c:405
0x00010295      7659           jbe 0x102f0
0x00010297      0fb63413       movzx esi, byte [rbx + rdx]             ; ../coreutils-8.31/lib/mountlist.c:407
0x0001029b      488d7a01       lea rdi, [rdx + 1]
0x0001029f      4080fe5c       cmp sil, 0x5c
0x000102a3      75e3           jne 0x10288
0x000102a5      4c8d4204       lea r8, [rdx + 4]
0x000102a9      4939c0         cmp r8, rax
0x000102ac      73da           jae 0x10288
0x000102ae      440fb60c3b     movzx r9d, byte [rbx + rdi]             ; ../coreutils-8.31/lib/mountlist.c:408
0x000102b3      458d51d0       lea r10d, [r9 - 0x30]
0x000102b7      4180fa03       cmp r10b, 3
0x000102bb      77cb           ja 0x10288
0x000102bd      440fb6541302   movzx r10d, byte [rbx + rdx + 2]        ; ../coreutils-8.31/lib/mountlist.c:409
0x000102c3      458d5ad0       lea r11d, [r10 - 0x30]
0x000102c7      4180fb07       cmp r11b, 7
0x000102cb      77bb           ja 0x10288
0x000102cd      0fb6541303     movzx edx, byte [rbx + rdx + 3]         ; ../coreutils-8.31/lib/mountlist.c:410
0x000102d2      448d5ad0       lea r11d, [rdx - 0x30]
0x000102d6      4180fb07       cmp r11b, 7
0x000102da      77ac           ja 0x10288
0x000102dc      438d14ca       lea edx, [r10 + r9*8]                   ; ../coreutils-8.31/lib/mountlist.c:412
0x000102e0      418d54d380     lea edx, [r11 + rdx*8 - 0x80]           ; ../coreutils-8.31/lib/mountlist.c:413
0x000102e5      8811           mov byte [rcx], dl
0x000102e7      4c89c2         mov rdx, r8
0x000102ea      eba2           jmp 0x1028e                             ; ../coreutils-8.31/lib/mountlist.c:415
0x000102ec      0f1f4000       nop dword [rax]
0x000102f0      5b             pop rbx                                 ; ../coreutils-8.31/lib/mountlist.c:420
0x000102f1      c3             ret
0x000102f2      0f1f4000       nop dword [rax]
0x000102f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_mount_entry:
0x00010300      53             push rbx                                ; ../coreutils-8.31/lib/mountlist.c:1085
0x00010301      4889fb         mov rbx, rdi
0x00010304      488b3f         mov rdi, qword [rdi]                    ; ../coreutils-8.31/lib/mountlist.c:1086
0x00010307      e80427ffff     call sym..plt.got
0x0001030c      488b7b08       mov rdi, qword [rbx + 8]                ; ../coreutils-8.31/lib/mountlist.c:1087
0x00010310      e8fb26ffff     call sym..plt.got
0x00010315      488b7b10       mov rdi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/mountlist.c:1088
0x00010319      e8f226ffff     call sym..plt.got
0x0001031e      f6432804       test byte [rbx + 0x28], 4               ; ../coreutils-8.31/lib/mountlist.c:1089
0x00010322      7409           je 0x1032d
0x00010324      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/mountlist.c:1090
0x00010328      e8e326ffff     call sym..plt.got
0x0001032d      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mountlist.c:1091
0x00010330      5b             pop rbx                                 ; ../coreutils-8.31/lib/mountlist.c:1092
0x00010331      e9da26ffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/mountlist.c:1091
0x00010336      662e0f1f8400.  nop word cs:[rax + rax]
;-- read_file_system_list:
0x00010340      4157           push r15                                ; ../coreutils-8.31/lib/mountlist.c:430
0x00010342      4156           push r14
0x00010344      488d35cc2401.  lea rsi, [0x00022817]                   ; ../coreutils-8.31/lib/mountlist.c:447 ; "r"
0x0001034b      4155           push r13                                ; ../coreutils-8.31/lib/mountlist.c:430
0x0001034d      4154           push r12
0x0001034f      488d3d7a2301.  lea rdi, str.proc_self_mountinfo        ; ../coreutils-8.31/lib/mountlist.c:447 ; 0x226d0 ; "/proc/self/mountinfo"
0x00010356      55             push rbp                                ; ../coreutils-8.31/lib/mountlist.c:430
0x00010357      53             push rbx
0x00010358      4883ec68       sub rsp, 0x68
0x0001035c      64488b042528.  mov rax, qword fs:[0x28]
0x00010365      4889442458     mov qword [rsp + 0x58], rax
0x0001036a      31c0           xor eax, eax
0x0001036c      e85f25ffff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/mountlist.c:447
0x00010371      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/mountlist.c:448
0x00010374      0f8446040000   je 0x107c0
0x0001037a      4c8d742440     lea r14, [rsp + 0x40]                   ; ../coreutils-8.31/lib/mountlist.c:433
0x0001037f      4c8d6c2450     lea r13, [rsp + 0x50]
0x00010384      4c8d642448     lea r12, [rsp + 0x48]
0x00010389      4889c5         mov rbp, rax
0x0001038c      48c744244800.  mov qword [rsp + 0x48], 0               ; ../coreutils-8.31/lib/mountlist.c:450
0x00010395      48c744245000.  mov qword [rsp + 0x50], 0               ; ../coreutils-8.31/lib/mountlist.c:451
0x0001039e      6690           nop
0x000103a0      4889e9         mov rcx, rbp                            ; stdio.h:117   return __getdelim (__lineptr, __n, '\n', __stream);
0x000103a3      ba0a000000     mov edx, 0xa
0x000103a8      4c89ee         mov rsi, r13
0x000103ab      4c89e7         mov rdi, r12
0x000103ae      e80d23ffff     call sym.imp.__getdelim
0x000103b3      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/mountlist.c:453
0x000103b7      0f8433020000   je 0x105f0
0x000103bd      488d4c241c     lea rcx, [rsp + 0x1c]                   ; ../coreutils-8.31/lib/mountlist.c:462
0x000103c2      488d542418     lea rdx, [rsp + 0x18]
0x000103c7      4883ec08       sub rsp, 8
0x000103cb      488d5c241f     lea rbx, [rsp + 0x1f]
0x000103d0      488d35a92301.  lea rsi, str.u___u__u:_u__n__s_n__n__s_n_c ; 0x22780 ; "%*u %*u %u:%u %n%*s%n %n%*s%n%c"
0x000103d7      53             push rbx
0x000103d8      488d442434     lea rax, [rsp + 0x34]
0x000103dd      50             push rax
0x000103de      488d442438     lea rax, [rsp + 0x38]
0x000103e3      50             push rax
0x000103e4      488b7c2468     mov rdi, qword [rsp + 0x68]
0x000103e9      31c0           xor eax, eax
0x000103eb      4c8d4c245c     lea r9, [rsp + 0x5c]
0x000103f0      4c8d442458     lea r8, [rsp + 0x58]
0x000103f5      e8f623ffff     call sym.imp.sscanf
0x000103fa      83e0fb         and eax, 0xfffffffb                     ; ../coreutils-8.31/lib/mountlist.c:473 ; 4294967291
0x000103fd      4883c420       add rsp, 0x20
0x00010401      83f803         cmp eax, 3
0x00010404      759a           jne 0x103a0
0x00010406      48637c2424     movsxd rdi, dword [rsp + 0x24]          ; ../coreutils-8.31/lib/mountlist.c:477
0x0001040b      488d35d32201.  lea rsi, [0x000226e5]                   ; " - "
0x00010412      48037c2448     add rdi, qword [rsp + 0x48]
0x00010417      e8b425ffff     call sym.imp.strstr
0x0001041c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/mountlist.c:478
0x0001041f      4989c7         mov r15, rax                            ; ../coreutils-8.31/lib/mountlist.c:477
0x00010422      0f8478ffffff   je 0x103a0                              ; ../coreutils-8.31/lib/mountlist.c:478
0x00010428      488d4c242c     lea rcx, [rsp + 0x2c]                   ; ../coreutils-8.31/lib/mountlist.c:481
0x0001042d      488d542428     lea rdx, [rsp + 0x28]
0x00010432      4883ec08       sub rsp, 8
0x00010436      53             push rbx
0x00010437      488d35ab2201.  lea rsi, str.n__s_n__n__s_n__c          ; 0x226e9 ; " - %n%*s%n %n%*s%n %c"
0x0001043e      4889c7         mov rdi, rax
0x00010441      31c0           xor eax, eax
0x00010443      4c8d4c2444     lea r9, [rsp + 0x44]
0x00010448      4c8d442440     lea r8, [rsp + 0x40]
0x0001044d      e89e23ffff     call sym.imp.sscanf
0x00010452      83e0fb         and eax, 0xfffffffb                     ; ../coreutils-8.31/lib/mountlist.c:488 ; 4294967291
0x00010455      83f801         cmp eax, 1
0x00010458      5a             pop rdx
0x00010459      59             pop rcx
0x0001045a      0f8540ffffff   jne 0x103a0
0x00010460      486344243c     movsxd rax, dword [rsp + 0x3c]          ; ../coreutils-8.31/lib/mountlist.c:492
0x00010465      488b542448     mov rdx, qword [rsp + 0x48]
0x0001046a      c6040200       mov byte [rdx + rax], 0
0x0001046e      4863442424     movsxd rax, dword [rsp + 0x24]          ; ../coreutils-8.31/lib/mountlist.c:493
0x00010473      488b542448     mov rdx, qword [rsp + 0x48]
0x00010478      c6040200       mov byte [rdx + rax], 0
0x0001047c      486344242c     movsxd rax, dword [rsp + 0x2c]          ; ../coreutils-8.31/lib/mountlist.c:494
0x00010481      41c6040700     mov byte [r15 + rax], 0
0x00010486      4863442434     movsxd rax, dword [rsp + 0x34]          ; ../coreutils-8.31/lib/mountlist.c:495
0x0001048b      41c6040700     mov byte [r15 + rax], 0
0x00010490      48637c2430     movsxd rdi, dword [rsp + 0x30]          ; ../coreutils-8.31/lib/mountlist.c:496
0x00010495      4c01ff         add rdi, r15
0x00010498      e8d3fdffff     call sym.unescape_tab
0x0001049d      48637c2420     movsxd rdi, dword [rsp + 0x20]          ; ../coreutils-8.31/lib/mountlist.c:497
0x000104a2      48037c2448     add rdi, qword [rsp + 0x48]
0x000104a7      e8c4fdffff     call sym.unescape_tab
0x000104ac      48637c2438     movsxd rdi, dword [rsp + 0x38]          ; ../coreutils-8.31/lib/mountlist.c:498
0x000104b1      48037c2448     add rdi, qword [rsp + 0x48]
0x000104b6      e8b5fdffff     call sym.unescape_tab
0x000104bb      bf38000000     mov edi, 0x38                           ; ../coreutils-8.31/lib/mountlist.c:500 ; '8'
0x000104c0      e81bc5ffff     call sym.xmalloc
0x000104c5      48637c2430     movsxd rdi, dword [rsp + 0x30]          ; ../coreutils-8.31/lib/mountlist.c:502
0x000104ca      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/mountlist.c:500
0x000104cd      4c01ff         add rdi, r15                            ; ../coreutils-8.31/lib/mountlist.c:502
0x000104d0      e83bc7ffff     call sym.xstrdup
0x000104d5      48637c2420     movsxd rdi, dword [rsp + 0x20]          ; ../coreutils-8.31/lib/mountlist.c:503
0x000104da      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/mountlist.c:502
0x000104dd      48037c2448     add rdi, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/mountlist.c:503
0x000104e2      e829c7ffff     call sym.xstrdup
0x000104e7      48637c2438     movsxd rdi, dword [rsp + 0x38]          ; ../coreutils-8.31/lib/mountlist.c:504
0x000104ec      48894308       mov qword [rbx + 8], rax                ; ../coreutils-8.31/lib/mountlist.c:503
0x000104f0      48037c2448     add rdi, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/mountlist.c:504
0x000104f5      e816c7ffff     call sym.xstrdup
0x000104fa      48637c2428     movsxd rdi, dword [rsp + 0x28]          ; ../coreutils-8.31/lib/mountlist.c:505
0x000104ff      48894310       mov qword [rbx + 0x10], rax             ; ../coreutils-8.31/lib/mountlist.c:504
0x00010503      4c01ff         add rdi, r15                            ; ../coreutils-8.31/lib/mountlist.c:505
0x00010506      e805c7ffff     call sym.xstrdup
0x0001050b      8b542418       mov edx, dword [rsp + 0x18]             ; sysmacros.h:81 __SYSMACROS_DEFINE_MAKEDEV (__SYSMACROS_IMPL_TEMPL)
0x0001050f      4989c7         mov r15, rax                            ; ../coreutils-8.31/lib/mountlist.c:505
0x00010512      48894318       mov qword [rbx + 0x18], rax
0x00010516      8b44241c       mov eax, dword [rsp + 0x1c]             ; ../coreutils-8.31/lib/mountlist.c:507
0x0001051a      48be00000000.  movabs rsi, 0xfffff00000000000          ; sysmacros.h:81 __SYSMACROS_DEFINE_MAKEDEV (__SYSMACROS_IMPL_TEMPL)
0x00010524      488d3dd42101.  lea rdi, str.autofs                     ; ../coreutils-8.31/lib/mountlist.c:512 ; 0x226ff ; "autofs"
0x0001052b      804b2804       or byte [rbx + 0x28], 4                 ; ../coreutils-8.31/lib/mountlist.c:506
0x0001052f      4889d1         mov rcx, rdx                            ; sysmacros.h:81 __SYSMACROS_DEFINE_MAKEDEV (__SYSMACROS_IMPL_TEMPL)
0x00010532      48c1e220       shl rdx, 0x20
0x00010536      48c1e108       shl rcx, 8
0x0001053a      4821f2         and rdx, rsi
0x0001053d      48be0000f0ff.  movabs rsi, 0xffffff00000
0x00010547      81e100ff0f00   and ecx, 0xfff00
0x0001054d      4809ca         or rdx, rcx
0x00010550      0fb6c8         movzx ecx, al
0x00010553      48c1e00c       shl rax, 0xc
0x00010557      4809ca         or rdx, rcx
0x0001055a      4821f0         and rax, rsi
0x0001055d      b907000000     mov ecx, 7                              ; ../coreutils-8.31/lib/mountlist.c:512
0x00010562      4c89fe         mov rsi, r15
0x00010565      4809d0         or rax, rdx                             ; sysmacros.h:81 __SYSMACROS_DEFINE_MAKEDEV (__SYSMACROS_IMPL_TEMPL)
0x00010568      ba01000000     mov edx, 1
0x0001056d      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]   ; ../coreutils-8.31/lib/mountlist.c:512
0x0001056f      48894320       mov qword [rbx + 0x20], rax             ; sysmacros.h:81 __SYSMACROS_DEFINE_MAKEDEV (__SYSMACROS_IMPL_TEMPL)
0x00010573      0f97c0         seta al                                 ; ../coreutils-8.31/lib/mountlist.c:512
0x00010576      1c00           sbb al, 0
0x00010578      84c0           test al, al
0x0001057a      741e           je 0x1059a
0x0001057c      488d3d832101.  lea rdi, str.proc                       ; 0x22706 ; "proc"
0x00010583      b905000000     mov ecx, 5
0x00010588      4c89fe         mov rsi, r15
0x0001058b      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0001058d      0f97c0         seta al
0x00010590      1c00           sbb al, 0
0x00010592      84c0           test al, al
0x00010594      0f85ae000000   jne 0x10648
0x0001059a      0fb64328       movzx eax, byte [rbx + 0x28]
0x0001059e      4c8b03         mov r8, qword [rbx]                     ; ../coreutils-8.31/lib/mountlist.c:513
0x000105a1      be3a000000     mov esi, 0x3a                           ; ':'
0x000105a6      4c89c7         mov rdi, r8
0x000105a9      4c89442408     mov qword [rsp + 8], r8
0x000105ae      83e0fe         and eax, 0xfffffffe                     ; ../coreutils-8.31/lib/mountlist.c:512 ; 4294967294
0x000105b1      09d0           or eax, edx
0x000105b3      884328         mov byte [rbx + 0x28], al
0x000105b6      e8e51fffff     call sym.imp.strchr                     ; ../coreutils-8.31/lib/mountlist.c:513
0x000105bb      4885c0         test rax, rax
0x000105be      ba01000000     mov edx, 1
0x000105c3      4c8b442408     mov r8, qword [rsp + 8]
0x000105c8      0f84c2010000   je 0x10790
0x000105ce      0fb64328       movzx eax, byte [rbx + 0x28]
0x000105d2      01d2           add edx, edx
0x000105d4      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x000105d7      09d0           or eax, edx
0x000105d9      884328         mov byte [rbx + 0x28], al
0x000105dc      49891e         mov qword [r14], rbx                    ; ../coreutils-8.31/lib/mountlist.c:516
0x000105df      4c8d7330       lea r14, [rbx + 0x30]                   ; ../coreutils-8.31/lib/mountlist.c:517
0x000105e3      e9b8fdffff     jmp 0x103a0
0x000105e8      0f1f84000000.  nop dword [rax + rax]
0x000105f0      488b7c2448     mov rdi, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/mountlist.c:520
0x000105f5      e81624ffff     call sym..plt.got
0x000105fa      f6450020       test byte [rbp], 0x20                   ; ../coreutils-8.31/lib/mountlist.c:522
0x000105fe      0f855c050000   jne 0x10b60
0x00010604      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/mountlist.c:530
0x00010607      e894d6ffff     call sym.rpl_fclose
0x0001060c      83f8ff         cmp eax, 0xffffffff
0x0001060f      0f8439040000   je 0x10a4e
0x00010615      49c706000000.  mov qword [r14], 0                      ; ../coreutils-8.31/lib/mountlist.c:1061
0x0001061c      488b442440     mov rax, qword [rsp + 0x40]             ; ../coreutils-8.31/lib/mountlist.c:1062
0x00010621      488b5c2458     mov rbx, qword [rsp + 0x58]             ; ../coreutils-8.31/lib/mountlist.c:1080
0x00010626      6448331c2528.  xor rbx, qword fs:[0x28]
0x0001062f      0f854e050000   jne 0x10b83
0x00010635      4883c468       add rsp, 0x68
0x00010639      5b             pop rbx
0x0001063a      5d             pop rbp
0x0001063b      415c           pop r12
0x0001063d      415d           pop r13
0x0001063f      415e           pop r14
0x00010641      415f           pop r15
0x00010643      c3             ret
0x00010644      0f1f4000       nop dword [rax]
0x00010648      488d3dbc2001.  lea rdi, str.subfs                      ; ../coreutils-8.31/lib/mountlist.c:512 ; 0x2270b ; "subfs"
0x0001064f      b906000000     mov ecx, 6
0x00010654      4c89fe         mov rsi, r15
0x00010657      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00010659      0f97c0         seta al
0x0001065c      1c00           sbb al, 0
0x0001065e      84c0           test al, al
0x00010660      0f8434ffffff   je 0x1059a
0x00010666      488d3da42001.  lea rdi, str.debugfs                    ; 0x22711 ; "debugfs"
0x0001066d      b908000000     mov ecx, 8
0x00010672      4c89fe         mov rsi, r15
0x00010675      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00010677      0f97c0         seta al
0x0001067a      1c00           sbb al, 0
0x0001067c      84c0           test al, al
0x0001067e      0f8416ffffff   je 0x1059a
0x00010684      488d3d8e2001.  lea rdi, str.devpts                     ; 0x22719 ; "devpts"
0x0001068b      b907000000     mov ecx, 7
0x00010690      4c89fe         mov rsi, r15
0x00010693      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00010695      0f97c0         seta al
0x00010698      1c00           sbb al, 0
0x0001069a      84c0           test al, al
0x0001069c      0f84f8feffff   je 0x1059a
0x000106a2      488d3d772001.  lea rdi, str.fusectl                    ; 0x22720 ; "fusectl"
0x000106a9      b908000000     mov ecx, 8
0x000106ae      4c89fe         mov rsi, r15
0x000106b1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000106b3      0f97c0         seta al
0x000106b6      1c00           sbb al, 0
0x000106b8      84c0           test al, al
0x000106ba      0f84dafeffff   je 0x1059a
0x000106c0      488d3d612001.  lea rdi, str.mqueue                     ; 0x22728 ; "mqueue"
0x000106c7      b907000000     mov ecx, 7
0x000106cc      4c89fe         mov rsi, r15
0x000106cf      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000106d1      0f97c0         seta al
0x000106d4      1c00           sbb al, 0
0x000106d6      84c0           test al, al
0x000106d8      0f84bcfeffff   je 0x1059a
0x000106de      488d3d4a2001.  lea rdi, str.rpc_pipefs                 ; 0x2272f ; "rpc_pipefs"
0x000106e5      b90b000000     mov ecx, 0xb
0x000106ea      4c89fe         mov rsi, r15
0x000106ed      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000106ef      0f97c0         seta al
0x000106f2      1c00           sbb al, 0
0x000106f4      84c0           test al, al
0x000106f6      0f849efeffff   je 0x1059a
0x000106fc      488d3d372001.  lea rdi, str.sysfs                      ; 0x2273a ; "sysfs"
0x00010703      b906000000     mov ecx, 6
0x00010708      4c89fe         mov rsi, r15
0x0001070b      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0001070d      0f97c0         seta al
0x00010710      1c00           sbb al, 0
0x00010712      84c0           test al, al
0x00010714      0f8480feffff   je 0x1059a
0x0001071a      488d3d1f2001.  lea rdi, str.devfs                      ; 0x22740 ; "devfs"
0x00010721      b906000000     mov ecx, 6
0x00010726      4c89fe         mov rsi, r15
0x00010729      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0001072b      0f97c0         seta al
0x0001072e      1c00           sbb al, 0
0x00010730      84c0           test al, al
0x00010732      0f8462feffff   je 0x1059a
0x00010738      488d3d072001.  lea rdi, str.kernfs                     ; 0x22746 ; "kernfs"
0x0001073f      b907000000     mov ecx, 7
0x00010744      4c89fe         mov rsi, r15
0x00010747      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00010749      0f97c0         seta al
0x0001074c      1c00           sbb al, 0
0x0001074e      84c0           test al, al
0x00010750      0f8444feffff   je 0x1059a
0x00010756      488d35f01f01.  lea rsi, str.ignore                     ; 0x2274d ; "ignore"
0x0001075d      4c89ff         mov rdi, r15
0x00010760      88542408       mov byte [rsp + 8], dl
0x00010764      e8671fffff     call sym.imp.strcmp
0x00010769      85c0           test eax, eax
0x0001076b      0fb6542408     movzx edx, byte [rsp + 8]
0x00010770      0f8424feffff   je 0x1059a
0x00010776      488d35d71f01.  lea rsi, str.none                       ; 0x22754 ; "none"
0x0001077d      4c89ff         mov rdi, r15
0x00010780      e84b1fffff     call sym.imp.strcmp
0x00010785      85c0           test eax, eax
0x00010787      0f94c2         sete dl
0x0001078a      e90bfeffff     jmp 0x1059a
0x0001078f      90             nop
0x00010790      4180382f       cmp byte [r8], 0x2f                     ; ../coreutils-8.31/lib/mountlist.c:513
0x00010794      0f8426030000   je 0x10ac0
0x0001079a      488d35c31f01.  lea rsi, str.hosts                      ; 0x22764 ; "-hosts"
0x000107a1      b907000000     mov ecx, 7
0x000107a6      4c89c7         mov rdi, r8
0x000107a9      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000107ab      0f97c0         seta al
0x000107ae      1c00           sbb al, 0
0x000107b0      84c0           test al, al
0x000107b2      0f94c2         sete dl
0x000107b5      e914feffff     jmp 0x105ce
0x000107ba      660f1f440000   nop word [rax + rax]
0x000107c0      488d35502001.  lea rsi, [0x00022817]                   ; ../coreutils-8.31/lib/mountlist.c:539 ; "r"
0x000107c7      488d3d9d1f01.  lea rdi, str.etc_mtab                   ; 0x2276b ; "/etc/mtab"
0x000107ce      e8ed1fffff     call sym.imp.setmntent
0x000107d3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/mountlist.c:540
0x000107d6      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/mountlist.c:539
0x000107d9      0f849d030000   je 0x10b7c                              ; ../coreutils-8.31/lib/mountlist.c:540
0x000107df      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mountlist.c:543
0x000107e2      4c8d742440     lea r14, [rsp + 0x40]                   ; ../coreutils-8.31/lib/mountlist.c:433
0x000107e7      488d2d111f01.  lea rbp, str.autofs                     ; 0x226ff ; "autofs"
0x000107ee      e8bd1fffff     call sym.imp.getmntent
0x000107f3      4885c0         test rax, rax
0x000107f6      4989c5         mov r13, rax                            ; /usr/include/x86_64-linux-gnu/bits/stdio.h:425
0x000107f9      0f843f020000   je 0x10a3e
0x000107ff      90             nop
0x00010800      488d356e1f01.  lea rsi, str.bind                       ; 0x22775 ; "bind"
0x00010807      4c89ef         mov rdi, r13
0x0001080a      e8a121ffff     call sym.imp.hasmntopt
0x0001080f      bf38000000     mov edi, 0x38                           ; '8'
0x00010814      4989c7         mov r15, rax
0x00010817      e8c4c1ffff     call sym.xmalloc
0x0001081c      498b7d00       mov rdi, qword [r13]
0x00010820      4989c4         mov r12, rax
0x00010823      e8e8c3ffff     call sym.xstrdup
0x00010828      498b7d08       mov rdi, qword [r13 + 8]
0x0001082c      49890424       mov qword [r12], rax
0x00010830      e8dbc3ffff     call sym.xstrdup
0x00010835      498b7d10       mov rdi, qword [r13 + 0x10]
0x00010839      4989442408     mov qword [r12 + 8], rax
0x0001083e      49c744241000.  mov qword [r12 + 0x10], 0
0x00010847      e8c4c3ffff     call sym.xstrdup
0x0001084c      b907000000     mov ecx, 7
0x00010851      4889c6         mov rsi, rax
0x00010854      4889ef         mov rdi, rbp
0x00010857      41804c242804   or byte [r12 + 0x28], 4
0x0001085d      4989c5         mov r13, rax
0x00010860      4989442418     mov qword [r12 + 0x18], rax
0x00010865      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00010867      ba01000000     mov edx, 1
0x0001086c      0f97c0         seta al
0x0001086f      1c00           sbb al, 0
0x00010871      84c0           test al, al
0x00010873      0f845f010000   je 0x109d8
0x00010879      488d3d861e01.  lea rdi, str.proc                       ; 0x22706 ; "proc"
0x00010880      b905000000     mov ecx, 5
0x00010885      4c89ee         mov rsi, r13
0x00010888      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0001088a      0f97c0         seta al
0x0001088d      1c00           sbb al, 0
0x0001088f      84c0           test al, al
0x00010891      0f8441010000   je 0x109d8
0x00010897      488d3d6d1e01.  lea rdi, str.subfs                      ; 0x2270b ; "subfs"
0x0001089e      b906000000     mov ecx, 6
0x000108a3      4c89ee         mov rsi, r13
0x000108a6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000108a8      0f97c0         seta al
0x000108ab      1c00           sbb al, 0
0x000108ad      84c0           test al, al
0x000108af      0f8423010000   je 0x109d8
0x000108b5      488d3d551e01.  lea rdi, str.debugfs                    ; 0x22711 ; "debugfs"
0x000108bc      b908000000     mov ecx, 8
0x000108c1      4c89ee         mov rsi, r13
0x000108c4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000108c6      0f97c0         seta al
0x000108c9      1c00           sbb al, 0
0x000108cb      84c0           test al, al
0x000108cd      0f8405010000   je 0x109d8
0x000108d3      488d3d3f1e01.  lea rdi, str.devpts                     ; 0x22719 ; "devpts"
0x000108da      b907000000     mov ecx, 7
0x000108df      4c89ee         mov rsi, r13
0x000108e2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000108e4      0f97c0         seta al
0x000108e7      1c00           sbb al, 0
0x000108e9      84c0           test al, al
0x000108eb      0f84e7000000   je 0x109d8
0x000108f1      488d3d281e01.  lea rdi, str.fusectl                    ; 0x22720 ; "fusectl"
0x000108f8      b908000000     mov ecx, 8
0x000108fd      4c89ee         mov rsi, r13
0x00010900      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00010902      0f97c0         seta al
0x00010905      1c00           sbb al, 0
0x00010907      84c0           test al, al
0x00010909      0f84c9000000   je 0x109d8
0x0001090f      488d3d121e01.  lea rdi, str.mqueue                     ; 0x22728 ; "mqueue"
0x00010916      b907000000     mov ecx, 7
0x0001091b      4c89ee         mov rsi, r13
0x0001091e      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00010920      0f97c0         seta al
0x00010923      1c00           sbb al, 0
0x00010925      84c0           test al, al
0x00010927      0f84ab000000   je 0x109d8
0x0001092d      488d3dfb1d01.  lea rdi, str.rpc_pipefs                 ; 0x2272f ; "rpc_pipefs"
0x00010934      b90b000000     mov ecx, 0xb
0x00010939      4c89ee         mov rsi, r13
0x0001093c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0001093e      0f97c0         seta al
0x00010941      1c00           sbb al, 0
0x00010943      84c0           test al, al
0x00010945      0f848d000000   je 0x109d8
0x0001094b      488d3de81d01.  lea rdi, str.sysfs                      ; 0x2273a ; "sysfs"
0x00010952      b906000000     mov ecx, 6
0x00010957      4c89ee         mov rsi, r13
0x0001095a      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0001095c      0f97c0         seta al
0x0001095f      1c00           sbb al, 0
0x00010961      84c0           test al, al
0x00010963      7473           je 0x109d8
0x00010965      488d3dd41d01.  lea rdi, str.devfs                      ; 0x22740 ; "devfs"
0x0001096c      b906000000     mov ecx, 6
0x00010971      4c89ee         mov rsi, r13                            ; /usr/include/x86_64-linux-gnu/bits/stdio.h:426
0x00010974      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00010976      0f97c0         seta al
0x00010979      1c00           sbb al, 0
0x0001097b      84c0           test al, al
0x0001097d      7459           je 0x109d8
0x0001097f      488d3dc01d01.  lea rdi, str.kernfs                     ; 0x22746 ; "kernfs"
0x00010986      b907000000     mov ecx, 7
0x0001098b      4c89ee         mov rsi, r13
0x0001098e      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00010990      0f97c0         seta al
0x00010993      1c00           sbb al, 0
0x00010995      84c0           test al, al                             ; /usr/include/x86_64-linux-gnu/bits/stdio.h:415
0x00010997      743f           je 0x109d8
0x00010999      488d35ad1d01.  lea rsi, str.ignore                     ; 0x2274d ; "ignore"
0x000109a0      4c89ef         mov rdi, r13
0x000109a3      88542408       mov byte [rsp + 8], dl
0x000109a7      e8241dffff     call sym.imp.strcmp
0x000109ac      85c0           test eax, eax
0x000109ae      0fb6542408     movzx edx, byte [rsp + 8]
0x000109b3      7423           je 0x109d8
0x000109b5      488d35981d01.  lea rsi, str.none                       ; 0x22754 ; "none"
0x000109bc      4c89ef         mov rdi, r13
0x000109bf      e80c1dffff     call sym.imp.strcmp
0x000109c4      4d85ff         test r15, r15
0x000109c7      0f94c2         sete dl
0x000109ca      85c0           test eax, eax
0x000109cc      0f94c0         sete al
0x000109cf      21c2           and edx, eax
0x000109d1      0f1f80000000.  nop dword [rax]
0x000109d8      410fb6442428   movzx eax, byte [r12 + 0x28]
0x000109de      4d8b3c24       mov r15, qword [r12]
0x000109e2      be3a000000     mov esi, 0x3a                           ; ':'
0x000109e7      4c89ff         mov rdi, r15
0x000109ea      83e0fe         and eax, 0xfffffffe                     ; 4294967294
0x000109ed      09d0           or eax, edx                             ; /usr/include/x86_64-linux-gnu/bits/stdio.h:944
0x000109ef      4188442428     mov byte [r12 + 0x28], al
0x000109f4      e8a71bffff     call sym.imp.strchr
0x000109f9      4885c0         test rax, rax                           ; /usr/include/x86_64-linux-gnu/bits/stdio.h:946
0x000109fc      ba01000000     mov edx, 1
0x00010a01      0f8491000000   je 0x10a98                              ; /usr/include/x86_64-linux-gnu/bits/stdio.h:942
0x00010a07      410fb6442428   movzx eax, byte [r12 + 0x28]            ; /usr/include/x86_64-linux-gnu/bits/stdio.h:950
0x00010a0d      01d2           add edx, edx
0x00010a0f      49c7442420ff.  mov qword [r12 + 0x20], 0xffffffffffffffff
0x00010a18      4889df         mov rdi, rbx
0x00010a1b      83e0fd         and eax, 0xfffffffd                     ; /usr/include/x86_64-linux-gnu/bits/stdio.h:426 ; 4294967293
0x00010a1e      09d0           or eax, edx
0x00010a20      4188442428     mov byte [r12 + 0x28], al
0x00010a25      4d8926         mov qword [r14], r12
0x00010a28      4d8d742430     lea r14, [r12 + 0x30]
0x00010a2d      e87e1dffff     call sym.imp.getmntent
0x00010a32      4885c0         test rax, rax
0x00010a35      4989c5         mov r13, rax
0x00010a38      0f85c2fdffff   jne 0x10800
0x00010a3e      4889df         mov rdi, rbx
0x00010a41      e8aa19ffff     call sym.imp.endmntent
0x00010a46      85c0           test eax, eax
0x00010a48      0f85c7fbffff   jne 0x10615                             ; /usr/include/x86_64-linux-gnu/bits/stdio.h:385
0x00010a4e      e8bd19ffff     call sym.imp.__errno_location
0x00010a53      448b28         mov r13d, dword [rax]
0x00010a56      4989c4         mov r12, rax
0x00010a59      49c706000000.  mov qword [r14], 0
0x00010a60      488b7c2440     mov rdi, qword [rsp + 0x40]
0x00010a65      4885ff         test rdi, rdi
0x00010a68      741c           je 0x10a86
0x00010a6a      660f1f440000   nop word [rax + rax]
0x00010a70      488b5f30       mov rbx, qword [rdi + 0x30]
0x00010a74      e887f8ffff     call sym.free_mount_entry
0x00010a79      4885db         test rbx, rbx
0x00010a7c      48895c2440     mov qword [rsp + 0x40], rbx
0x00010a81      4889df         mov rdi, rbx
0x00010a84      75ea           jne 0x10a70
0x00010a86      45892c24       mov dword [r12], r13d
0x00010a8a      31c0           xor eax, eax
0x00010a8c      e990fbffff     jmp 0x10621
0x00010a91      0f1f80000000.  nop dword [rax]
0x00010a98      41803f2f       cmp byte [r15], 0x2f
0x00010a9c      7472           je 0x10b10
0x00010a9e      488d35bf1c01.  lea rsi, str.hosts                      ; 0x22764 ; "-hosts"
0x00010aa5      b907000000     mov ecx, 7
0x00010aaa      4c89ff         mov rdi, r15
0x00010aad      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00010aaf      0f97c0         seta al
0x00010ab2      1c00           sbb al, 0                               ; /usr/include/x86_64-linux-gnu/bits/stdio.h:426
0x00010ab4      84c0           test al, al
0x00010ab6      0f94c2         sete dl
0x00010ab9      e949ffffff     jmp 0x10a07
0x00010abe      6690           nop
0x00010ac0      418078012f     cmp byte [r8 + 1], 0x2f
0x00010ac5      0f85cffcffff   jne 0x1079a
0x00010acb      488d3d871c01.  lea rdi, str.smbfs                      ; 0x22759 ; "smbfs"
0x00010ad2      b906000000     mov ecx, 6
0x00010ad7      4c89fe         mov rsi, r15
0x00010ada      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00010adc      0f97c0         seta al
0x00010adf      1c00           sbb al, 0
0x00010ae1      84c0           test al, al
0x00010ae3      0f84e5faffff   je 0x105ce
0x00010ae9      488d3d6f1c01.  lea rdi, str.cifs                       ; 0x2275f ; "cifs"
0x00010af0      b905000000     mov ecx, 5                              ; /usr/include/x86_64-linux-gnu/bits/stdio.h:398
0x00010af5      4c89fe         mov rsi, r15
0x00010af8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00010afa      0f97c0         seta al
0x00010afd      1c00           sbb al, 0
0x00010aff      84c0           test al, al
0x00010b01      0f84c7faffff   je 0x105ce
0x00010b07      e98efcffff     jmp 0x1079a
0x00010b0c      0f1f4000       nop dword [rax]
0x00010b10      41807f012f     cmp byte [r15 + 1], 0x2f
0x00010b15      7587           jne 0x10a9e
0x00010b17      488d3d3b1c01.  lea rdi, str.smbfs                      ; 0x22759 ; "smbfs"
0x00010b1e      b906000000     mov ecx, 6
0x00010b23      4c89ee         mov rsi, r13
0x00010b26      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00010b28      0f97c0         seta al
0x00010b2b      1c00           sbb al, 0
0x00010b2d      84c0           test al, al
0x00010b2f      0f84d2feffff   je 0x10a07
0x00010b35      488d3d231c01.  lea rdi, str.cifs                       ; 0x2275f ; "cifs"
0x00010b3c      b905000000     mov ecx, 5
0x00010b41      4c89ee         mov rsi, r13
0x00010b44      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00010b46      0f97c0         seta al
0x00010b49      1c00           sbb al, 0
0x00010b4b      84c0           test al, al
0x00010b4d      0f84b4feffff   je 0x10a07
0x00010b53      e946ffffff     jmp 0x10a9e
0x00010b58      0f1f84000000.  nop dword [rax + rax]
0x00010b60      e8ab18ffff     call sym.imp.__errno_location
0x00010b65      448b28         mov r13d, dword [rax]
0x00010b68      4989c4         mov r12, rax
0x00010b6b      4889ef         mov rdi, rbp
0x00010b6e      e82dd1ffff     call sym.rpl_fclose
0x00010b73      45892c24       mov dword [r12], r13d
0x00010b77      e9ddfeffff     jmp 0x10a59
0x00010b7c      31c0           xor eax, eax
0x00010b7e      e99efaffff     jmp 0x10621
0x00010b83      e8d819ffff     call sym.imp.__stack_chk_fail
0x00010b88      0f1f84000000.  nop dword [rax + rax]
;-- peek_token_bracket:
0x00010b90      488b4648       mov rax, qword [rsi + 0x48]             ; ../coreutils-8.31/lib/regcomp.c:2026
0x00010b94      48394668       cmp qword [rsi + 0x68], rax
0x00010b98      7e56           jle 0x10bf0
0x00010b9a      4c8b4608       mov r8, qword [rsi + 8]                 ; ../coreutils-8.31/lib/regcomp.c:2033
0x00010b9e      83be90000000.  cmp dword [rsi + 0x90], 1               ; ../coreutils-8.31/lib/regcomp.c:2037
0x00010ba5      410fb60c00     movzx ecx, byte [r8 + rax]              ; ../coreutils-8.31/lib/regcomp.c:2033
0x00010baa      880f           mov byte [rdi], cl                      ; ../coreutils-8.31/lib/regcomp.c:2034
0x00010bac      7e15           jle 0x10bc3                             ; ../coreutils-8.31/lib/regcomp.c:2037
0x00010bae      483b4630       cmp rax, qword [rsi + 0x30]
0x00010bb2      740f           je 0x10bc3
0x00010bb4      4c8b4e10       mov r9, qword [rsi + 0x10]              ; ../coreutils-8.31/lib/regcomp.c:2038
0x00010bb8      41833c81ff     cmp dword [r9 + rax*4], 0xffffffff
0x00010bbd      0f847c000000   je 0x10c3f
0x00010bc3      80f95c         cmp cl, 0x5c                            ; ../coreutils-8.31/lib/regcomp.c:2045
0x00010bc6      7468           je 0x10c30
0x00010bc8      80f95b         cmp cl, 0x5b                            ; ../coreutils-8.31/lib/regcomp.c:2056
0x00010bcb      7433           je 0x10c00
0x00010bcd      80f95d         cmp cl, 0x5d                            ; ../coreutils-8.31/lib/regcomp.c:2091
0x00010bd0      0f849a000000   je 0x10c70
0x00010bd6      80f95e         cmp cl, 0x5e
0x00010bd9      0f8481000000   je 0x10c60
0x00010bdf      80f92d         cmp cl, 0x2d
0x00010be2      755b           jne 0x10c3f
0x00010be4      c6470816       mov byte [rdi + 8], 0x16                ; ../coreutils-8.31/lib/regcomp.c:2094 ; [0x16:1]=0
0x00010be8      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x00010bed      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2095
0x00010bee      6690           nop
0x00010bf0      c6470802       mov byte [rdi + 8], 2                   ; ../coreutils-8.31/lib/regcomp.c:2030
0x00010bf4      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/regcomp.c:2031
0x00010bf6      c3             ret
0x00010bf7      660f1f840000.  nop word [rax + rax]
0x00010c00      488d4801       lea rcx, [rax + 1]                      ; ../coreutils-8.31/lib/regcomp.c:2060
0x00010c04      483b4e58       cmp rcx, qword [rsi + 0x58]
0x00010c08      7d46           jge 0x10c50
0x00010c0a      410fb6440001   movzx eax, byte [r8 + rax + 1]          ; ../coreutils-8.31/lib/regcomp.c:2061
0x00010c10      3c3a           cmp al, 0x3a                            ; ../coreutils-8.31/lib/regcomp.c:2066
0x00010c12      8807           mov byte [rdi], al                      ; ../coreutils-8.31/lib/regcomp.c:2064
0x00010c14      0f8496000000   je 0x10cb0                              ; ../coreutils-8.31/lib/regcomp.c:2066
0x00010c1a      3c3d           cmp al, 0x3d
0x00010c1c      0f847e000000   je 0x10ca0
0x00010c22      3c2e           cmp al, 0x2e
0x00010c24      752a           jne 0x10c50
0x00010c26      c647081a       mov byte [rdi + 8], 0x1a                ; ../coreutils-8.31/lib/regcomp.c:2069 ; [0x1a:1]=0
0x00010c2a      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/regcomp.c:2065
0x00010c2f      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2070
0x00010c30      83e201         and edx, 1                              ; ../coreutils-8.31/lib/regcomp.c:2045
0x00010c33      740a           je 0x10c3f
0x00010c35      488d5001       lea rdx, [rax + 1]                      ; ../coreutils-8.31/lib/regcomp.c:2046
0x00010c39      483b5658       cmp rdx, qword [rsi + 0x58]
0x00010c3d      7c41           jl 0x10c80
0x00010c3f      c6470801       mov byte [rdi + 8], 1                   ; ../coreutils-8.31/lib/regcomp.c:2103
0x00010c43      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x00010c48      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2106
0x00010c49      0f1f80000000.  nop dword [rax]
0x00010c50      c6470801       mov byte [rdi + 8], 1                   ; ../coreutils-8.31/lib/regcomp.c:2084
0x00010c54      c6075b         mov byte [rdi], 0x5b                    ; ../coreutils-8.31/lib/regcomp.c:2085 ; '['
                                                                       ; [0x5b:1]=0
0x00010c57      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2086
0x00010c5c      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2087
0x00010c5d      0f1f00         nop dword [rax]
0x00010c60      c6470819       mov byte [rdi + 8], 0x19                ; ../coreutils-8.31/lib/regcomp.c:2100 ; [0x19:1]=63
0x00010c64      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x00010c69      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2101
0x00010c6a      660f1f440000   nop word [rax + rax]
0x00010c70      c6470815       mov byte [rdi + 8], 0x15                ; ../coreutils-8.31/lib/regcomp.c:2097 ; [0x15:1]=0
0x00010c74      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x00010c79      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2098
0x00010c7a      660f1f440000   nop word [rax + rax]
0x00010c80      48895648       mov qword [rsi + 0x48], rdx             ; ../coreutils-8.31/lib/regcomp.c:2050
0x00010c84      410fb6440001   movzx eax, byte [r8 + rax + 1]          ; ../coreutils-8.31/lib/regcomp.c:2051
0x00010c8a      c6470801       mov byte [rdi + 8], 1                   ; ../coreutils-8.31/lib/regcomp.c:2053
0x00010c8e      8807           mov byte [rdi], al                      ; ../coreutils-8.31/lib/regcomp.c:2052
0x00010c90      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2054
0x00010c95      c3             ret
0x00010c96      662e0f1f8400.  nop word cs:[rax + rax]
0x00010ca0      c647081c       mov byte [rdi + 8], 0x1c                ; ../coreutils-8.31/lib/regcomp.c:2073 ; [0x1c:1]=0
0x00010ca4      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/regcomp.c:2065
0x00010ca9      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2074
0x00010caa      660f1f440000   nop word [rax + rax]
0x00010cb0      83e204         and edx, 4                              ; ../coreutils-8.31/lib/regcomp.c:2077
0x00010cb3      749b           je 0x10c50
0x00010cb5      c647081e       mov byte [rdi + 8], 0x1e                ; ../coreutils-8.31/lib/regcomp.c:2079 ; [0x1e:1]=0
0x00010cb9      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/regcomp.c:2065
0x00010cbe      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2080
0x00010cbf      90             nop
;-- mark_opt_subexp:
0x00010cc0      807e3011       cmp byte [rsi + 0x30], 0x11             ; ../coreutils-8.31/lib/regcomp.c:3858
0x00010cc4      740a           je 0x10cd0
0x00010cc6      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/regcomp.c:3864
0x00010cc8      c3             ret
0x00010cc9      0f1f80000000.  nop dword [rax]
0x00010cd0      483b7e28       cmp rdi, qword [rsi + 0x28]             ; ../coreutils-8.31/lib/regcomp.c:3860
0x00010cd4      75f0           jne 0x10cc6
0x00010cd6      804e3208       or byte [rsi + 0x32], 8                 ; ../coreutils-8.31/lib/regcomp.c:3861
0x00010cda      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/regcomp.c:3864
0x00010cdc      c3             ret
0x00010cdd      0f1f00         nop dword [rax]
;-- check_dst_limits_calc_pos_1:
0x00010ce0      4157           push r15                                ; ../coreutils-8.31/lib/regexec.c:1905
0x00010ce2      4156           push r14
0x00010ce4      4989d1         mov r9, rdx
0x00010ce7      4155           push r13
0x00010ce9      4154           push r12
0x00010ceb      488d1449       lea rdx, [rcx + rcx*2]                  ; ../coreutils-8.31/lib/regexec.c:1907
0x00010cef      55             push rbp                                ; ../coreutils-8.31/lib/regexec.c:1905
0x00010cf0      53             push rbx
0x00010cf1      4189f7         mov r15d, esi
0x00010cf4      4883ec48       sub rsp, 0x48
0x00010cf8      4c8bb7980000.  mov r14, qword [rdi + 0x98]             ; ../coreutils-8.31/lib/regexec.c:1906
0x00010cff      48893c24       mov qword [rsp], rdi                    ; ../coreutils-8.31/lib/regexec.c:1905
0x00010d03      498b4630       mov rax, qword [r14 + 0x30]             ; ../coreutils-8.31/lib/regexec.c:1907
0x00010d07      4c8d24d0       lea r12, [rax + rdx*8]
0x00010d0b      49837c240800   cmp qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/regexec.c:1912
0x00010d11      0f8e8e010000   jle 0x10ea5
0x00010d17      4b8d0480       lea rax, [r8 + r8*4]                    ; ../coreutils-8.31/lib/regexec.c:1920
0x00010d1b      4989cb         mov r11, rcx
0x00010d1e      4489c9         mov ecx, r9d
0x00010d21      4d89c2         mov r10, r8
0x00010d24      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/regexec.c:1912
0x00010d26      89742420       mov dword [rsp + 0x20], esi             ; ../coreutils-8.31/lib/regexec.c:1971
0x00010d2a      48c1e003       shl rax, 3                              ; ../coreutils-8.31/lib/regexec.c:1920
0x00010d2e      4d89cf         mov r15, r9                             ; ../coreutils-8.31/lib/regexec.c:1971
0x00010d31      4c895c2410     mov qword [rsp + 0x10], r11
0x00010d36      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/regexec.c:1920
0x00010d3b      b801000000     mov eax, 1
0x00010d40      48d3e0         shl rax, cl
0x00010d43      4889442418     mov qword [rsp + 0x18], rax
0x00010d48      f7d0           not eax                                 ; ../coreutils-8.31/lib/regexec.c:1959
0x00010d4a      6689442426     mov word [rsp + 0x26], ax
0x00010d4f      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/regexec.c:1966
0x00010d51      83e001         and eax, 1
0x00010d54      8944240c       mov dword [rsp + 0xc], eax
0x00010d58      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/regexec.c:1971
0x00010d5a      83e002         and eax, 2
0x00010d5d      89442408       mov dword [rsp + 8], eax
0x00010d61      eb22           jmp 0x10d85
0x00010d63      0f1f440000     nop dword [rax + rax]
0x00010d68      80fa09         cmp dl, 9                               ; ../coreutils-8.31/lib/regexec.c:1915
0x00010d6b      0f844f010000   je 0x10ec0
0x00010d71      80fa04         cmp dl, 4
0x00010d74      7452           je 0x10dc8
0x00010d76      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/regexec.c:1912
0x00010d7a      49395c2408     cmp qword [r12 + 8], rbx
0x00010d7f      0f8e1b010000   jle 0x10ea0
0x00010d85      498b442410     mov rax, qword [r12 + 0x10]             ; ../coreutils-8.31/lib/regexec.c:1914
0x00010d8a      488b2cd8       mov rbp, qword [rax + rbx*8]
0x00010d8e      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/regexec.c:1915
0x00010d91      48c1e004       shl rax, 4
0x00010d95      490306         add rax, qword [r14]
0x00010d98      0fb65008       movzx edx, byte [rax + 8]
0x00010d9c      80fa08         cmp dl, 8
0x00010d9f      75c7           jne 0x10d68
0x00010da1      8b4c240c       mov ecx, dword [rsp + 0xc]              ; ../coreutils-8.31/lib/regexec.c:1966
0x00010da5      85c9           test ecx, ecx
0x00010da7      74cd           je 0x10d76
0x00010da9      4c3938         cmp qword [rax], r15
0x00010dac      75c8           jne 0x10d76
0x00010dae      4883c448       add rsp, 0x48                           ; ../coreutils-8.31/lib/regexec.c:1981
0x00010db2      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/regexec.c:1953 ; -1
0x00010db7      5b             pop rbx                                 ; ../coreutils-8.31/lib/regexec.c:1981
0x00010db8      5d             pop rbp
0x00010db9      415c           pop r12
0x00010dbb      415d           pop r13
0x00010dbd      415e           pop r14
0x00010dbf      415f           pop r15
0x00010dc1      c3             ret
0x00010dc2      660f1f440000   nop word [rax + rax]
0x00010dc8      4983faff       cmp r10, 0xffffffffffffffff             ; ../coreutils-8.31/lib/regexec.c:1918
0x00010dcc      74a8           je 0x10d76
0x00010dce      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/regexec.c:1920
0x00010dd2      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x00010dd7      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/regexec.c:1940
0x00010dda      4c89642430     mov qword [rsp + 0x30], r12
0x00010ddf      48895c2438     mov qword [rsp + 0x38], rbx
0x00010de4      4d89d4         mov r12, r10
0x00010de7      4c03a8d80000.  add r13, qword [rax + 0xd8]             ; ../coreutils-8.31/lib/regexec.c:1920
0x00010dee      488d446d00     lea rax, [rbp + rbp*2]                  ; ../coreutils-8.31/lib/regexec.c:1940
0x00010df3      4c89f5         mov rbp, r14
0x00010df6      4989fe         mov r14, rdi
0x00010df9      48c1e003       shl rax, 3
0x00010dfd      4889c3         mov rbx, rax
0x00010e00      4d397500       cmp qword [r13], r14                    ; ../coreutils-8.31/lib/regexec.c:1926
0x00010e04      756a           jne 0x10e70
0x00010e06      4983ff3f       cmp r15, 0x3f                           ; ../coreutils-8.31/lib/regexec.c:1929
0x00010e0a      7f0c           jg 0x10e18
0x00010e0c      410fb74522     movzx eax, word [r13 + 0x22]            ; ../coreutils-8.31/lib/regexec.c:1930
0x00010e11      4885442418     test qword [rsp + 0x18], rax
0x00010e16      7458           je 0x10e70
0x00010e18      488b4528       mov rax, qword [rbp + 0x28]             ; ../coreutils-8.31/lib/regexec.c:1940
0x00010e1c      488b441810     mov rax, qword [rax + rbx + 0x10]
0x00010e21      488b08         mov rcx, qword [rax]
0x00010e24      48394c2410     cmp qword [rsp + 0x10], rcx             ; ../coreutils-8.31/lib/regexec.c:1941
0x00010e29      0f84c1000000   je 0x10ef0
0x00010e2f      8b742420       mov esi, dword [rsp + 0x20]             ; ../coreutils-8.31/lib/regexec.c:1949
0x00010e33      488b3c24       mov rdi, qword [rsp]
0x00010e37      4d89e0         mov r8, r12
0x00010e3a      4c89fa         mov rdx, r15
0x00010e3d      e89efeffff     call sym.check_dst_limits_calc_pos_1
0x00010e42      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/regexec.c:1952
0x00010e45      0f8463ffffff   je 0x10dae
0x00010e4b      85c0           test eax, eax                           ; ../coreutils-8.31/lib/regexec.c:1954
0x00010e4d      7508           jne 0x10e57
0x00010e4f      8b742408       mov esi, dword [rsp + 8]
0x00010e53      85f6           test esi, esi
0x00010e55      757e           jne 0x10ed5
0x00010e57      4983ff3f       cmp r15, 0x3f                           ; ../coreutils-8.31/lib/regexec.c:1957
0x00010e5b      7f13           jg 0x10e70
0x00010e5d      0fb7442426     movzx eax, word [rsp + 0x26]            ; ../coreutils-8.31/lib/regexec.c:1959
0x00010e62      6641214522     and word [r13 + 0x22], ax
0x00010e67      660f1f840000.  nop word [rax + rax]
0x00010e70      4983c528       add r13, 0x28                           ; ../coreutils-8.31/lib/regexec.c:1961
0x00010e74      41807df800     cmp byte [r13 - 8], 0
0x00010e79      7585           jne 0x10e00
0x00010e7b      488b5c2438     mov rbx, qword [rsp + 0x38]
0x00010e80      4d89e2         mov r10, r12
0x00010e83      4c8b642430     mov r12, qword [rsp + 0x30]
0x00010e88      4989ee         mov r14, rbp
0x00010e8b      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/regexec.c:1912
0x00010e8f      49395c2408     cmp qword [r12 + 8], rbx                ; ../coreutils-8.31/lib/regexec.c:1852
0x00010e94      0f8febfeffff   jg 0x10d85
0x00010e9a      660f1f440000   nop word [rax + rax]
0x00010ea0      448b7c2420     mov r15d, dword [rsp + 0x20]
0x00010ea5      4883c448       add rsp, 0x48
0x00010ea9      4489f8         mov eax, r15d
0x00010eac      5b             pop rbx
0x00010ead      d1f8           sar eax, 1
0x00010eaf      5d             pop rbp
0x00010eb0      415c           pop r12
0x00010eb2      415d           pop r13                                 ; ../coreutils-8.31/lib/regexec.c:1843
0x00010eb4      415e           pop r14
0x00010eb6      415f           pop r15
0x00010eb8      c3             ret
0x00010eb9      0f1f80000000.  nop dword [rax]
0x00010ec0      8b542408       mov edx, dword [rsp + 8]
0x00010ec4      85d2           test edx, edx
0x00010ec6      0f84aafeffff   je 0x10d76
0x00010ecc      4c3938         cmp qword [rax], r15
0x00010ecf      0f85a1feffff   jne 0x10d76
0x00010ed5      4883c448       add rsp, 0x48
0x00010ed9      31c0           xor eax, eax
0x00010edb      5b             pop rbx
0x00010edc      5d             pop rbp
0x00010edd      415c           pop r12
0x00010edf      415d           pop r13
0x00010ee1      415e           pop r14                                 ; ../coreutils-8.31/lib/regexec.c:1815
0x00010ee3      415f           pop r15
0x00010ee5      c3             ret
0x00010ee6      662e0f1f8400.  nop word cs:[rax + rax]
0x00010ef0      448b7c2420     mov r15d, dword [rsp + 0x20]
0x00010ef5      4883c448       add rsp, 0x48
0x00010ef9      5b             pop rbx
0x00010efa      5d             pop rbp
0x00010efb      4489f8         mov eax, r15d
0x00010efe      83e001         and eax, 1
0x00010f01      415c           pop r12
0x00010f03      f7d8           neg eax
0x00010f05      415d           pop r13                                 ; ../coreutils-8.31/lib/regexec.c:1864
0x00010f07      415e           pop r14
0x00010f09      415f           pop r15
0x00010f0b      c3             ret
0x00010f0c      0f1f4000       nop dword [rax]
;-- check_dst_limits_calc_pos:
0x00010f10      488b87d80000.  mov rax, qword [rdi + 0xd8]
0x00010f17      488d34b6       lea rsi, [rsi + rsi*4]                  ; ../coreutils-8.31/lib/regexec.c:1871
0x00010f1b      488d04f0       lea rax, [rax + rsi*8]
0x00010f1f      4c8b5010       mov r10, qword [rax + 0x10]
0x00010f23      4d39c2         cmp r10, r8                             ; ../coreutils-8.31/lib/regexec.c:1872
0x00010f26      7f48           jg 0x10f70
0x00010f28      488b4018       mov rax, qword [rax + 0x18]             ; ../coreutils-8.31/lib/regexec.c:1874
0x00010f2c      4c39c0         cmp rax, r8
0x00010f2f      7c1f           jl 0x10f50                              ; ../coreutils-8.31/lib/regexec.c:1879
0x00010f31      31f6           xor esi, esi
0x00010f33      4d39c2         cmp r10, r8
0x00010f36      400f94c6       sete sil                                ; ../coreutils-8.31/lib/regexec.c:1868
0x00010f3a      83ce02         or esi, 2
0x00010f3d      4c39c0         cmp rax, r8
0x00010f40      7423           je 0x10f65
0x00010f42      31c0           xor eax, eax
0x00010f44      4d39c2         cmp r10, r8
0x00010f47      7417           je 0x10f60
0x00010f49      f3c3           ret
0x00010f4b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/regexec.c:1877
0x00010f50      b801000000     mov eax, 1
0x00010f55      c3             ret
0x00010f56      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regexec.c:1865
0x00010f60      be01000000     mov esi, 1
0x00010f65      4d89c8         mov r8, r9
0x00010f68      e973fdffff     jmp sym.check_dst_limits_calc_pos_1
0x00010f6d      0f1f00         nop dword [rax]
0x00010f70      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/regcomp.c:1100 ; -1
0x00010f75      c3             ret
0x00010f76      662e0f1f8400.  nop word cs:[rax + rax]
;-- postorder:
0x00010f80      4154           push r12
0x00010f82      4989f4         mov r12, rsi                            ; ../coreutils-8.31/lib/regcomp.c:1107
0x00010f85      55             push rbp
0x00010f86      4889d5         mov rbp, rdx
0x00010f89      53             push rbx
0x00010f8a      4889fb         mov rbx, rdi
0x00010f8d      eb04           jmp 0x10f93
0x00010f8f      90             nop
0x00010f90      4889c3         mov rbx, rax
0x00010f93      488b4308       mov rax, qword [rbx + 8]
0x00010f97      4885c0         test rax, rax
0x00010f9a      75f4           jne 0x10f90
0x00010f9c      488b4310       mov rax, qword [rbx + 0x10]
0x00010fa0      4885c0         test rax, rax
0x00010fa3      75eb           jne 0x10f90
0x00010fa5      4889de         mov rsi, rbx
0x00010fa8      4889ef         mov rdi, rbp
0x00010fab      41ffd4         call r12
0x00010fae      85c0           test eax, eax
0x00010fb0      7534           jne 0x10fe6
0x00010fb2      660f1f440000   nop word [rax + rax]
0x00010fb8      488b13         mov rdx, qword [rbx]
0x00010fbb      4885d2         test rdx, rdx
0x00010fbe      7426           je 0x10fe6
0x00010fc0      488b4210       mov rax, qword [rdx + 0x10]
0x00010fc4      4839d8         cmp rax, rbx
0x00010fc7      4889d3         mov rbx, rdx
0x00010fca      400f94c6       sete sil
0x00010fce      4885c0         test rax, rax
0x00010fd1      0f94c1         sete cl
0x00010fd4      4008ce         or sil, cl
0x00010fd7      74b7           je 0x10f90
0x00010fd9      4889de         mov rsi, rbx
0x00010fdc      4889ef         mov rdi, rbp
0x00010fdf      41ffd4         call r12
0x00010fe2      85c0           test eax, eax
0x00010fe4      74d2           je 0x10fb8
0x00010fe6      5b             pop rbx
0x00010fe7      5d             pop rbp
0x00010fe8      415c           pop r12
0x00010fea      c3             ret
0x00010feb      0f1f440000     nop dword [rax + rax]
;-- preorder:
0x00010ff0      4154           push r12
0x00010ff2      4989f4         mov r12, rsi                            ; ../coreutils-8.31/lib/regcomp.c:1138
0x00010ff5      55             push rbp
0x00010ff6      4889d5         mov rbp, rdx                            ; ../coreutils-8.31/lib/regcomp.c:1142
0x00010ff9      53             push rbx
0x00010ffa      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/regcomp.c:1146
0x00010ffd      eb04           jmp 0x11003
0x00010fff      90             nop
0x00011000      4889d3         mov rbx, rdx
0x00011003      4889de         mov rsi, rbx
0x00011006      4889ef         mov rdi, rbp
0x00011009      41ffd4         call r12                                ; ../coreutils-8.31/lib/regcomp.c:1147
0x0001100c      85c0           test eax, eax
0x0001100e      752c           jne 0x1103c
0x00011010      488b5308       mov rdx, qword [rbx + 8]
0x00011014      31c9           xor ecx, ecx
0x00011016      4885d2         test rdx, rdx
0x00011019      75e5           jne 0x11000
0x0001101b      eb06           jmp 0x11023
0x0001101d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/regcomp.c:1151
0x00011020      4889d3         mov rbx, rdx
0x00011023      488b5310       mov rdx, qword [rbx + 0x10]
0x00011027      4839ca         cmp rdx, rcx
0x0001102a      7405           je 0x11031
0x0001102c      4885d2         test rdx, rdx
0x0001102f      75cf           jne 0x11000
0x00011031      488b13         mov rdx, qword [rbx]
0x00011034      4889d9         mov rcx, rbx
0x00011037      4885d2         test rdx, rdx
0x0001103a      75e4           jne 0x11020
0x0001103c      5b             pop rbx
0x0001103d      5d             pop rbp
0x0001103e      415c           pop r12
0x00011040      c3             ret
0x00011041      0f1f440000     nop dword [rax + rax]
0x00011046      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_string_realloc_buffers:
0x00011050      55             push rbp
0x00011051      53             push rbx
0x00011052      4889f5         mov rbp, rsi
0x00011055      4889fb         mov rbx, rdi
0x00011058      4883ec08       sub rsp, 8
0x0001105c      83bf90000000.  cmp dword [rdi + 0x90], 1
0x00011063      7e48           jle 0x110ad
0x00011065      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; 2305843009213693951
0x0001106f      4839c6         cmp rsi, rax
0x00011072      776c           ja 0x110e0
0x00011074      488b7f10       mov rdi, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/regex_internal.c:28
0x00011078      488d34b50000.  lea rsi, [rsi*4]                        ; ../coreutils-8.31/lib/regex_internal.c:29
0x00011080      e8ab17ffff     call sym.imp.realloc
0x00011085      4885c0         test rax, rax
0x00011088      7456           je 0x110e0
0x0001108a      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/regex_internal.c:32
0x0001108e      48894310       mov qword [rbx + 0x10], rax
0x00011092      4885ff         test rdi, rdi
0x00011095      7416           je 0x110ad
0x00011097      488d34ed0000.  lea rsi, [rbp*8]
0x0001109f      e88c17ffff     call sym.imp.realloc
0x000110a4      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/regex_internal.c:47
0x000110a7      7437           je 0x110e0
0x000110a9      48894318       mov qword [rbx + 0x18], rax
0x000110ad      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x000110b4      7512           jne 0x110c8
0x000110b6      48896b40       mov qword [rbx + 0x40], rbp
0x000110ba      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/regex_internal.c:42
0x000110be      31c0           xor eax, eax
0x000110c0      5b             pop rbx
0x000110c1      5d             pop rbp
0x000110c2      c3             ret
0x000110c3      0f1f440000     nop dword [rax + rax]
0x000110c8      488b7b08       mov rdi, qword [rbx + 8]
0x000110cc      4889ee         mov rsi, rbp
0x000110cf      e85c17ffff     call sym.imp.realloc                    ; ../coreutils-8.31/lib/regex_internal.c:48
0x000110d4      4885c0         test rax, rax
0x000110d7      7407           je 0x110e0
0x000110d9      48894308       mov qword [rbx + 8], rax
0x000110dd      ebd7           jmp 0x110b6
0x000110df      90             nop
0x000110e0      4883c408       add rsp, 8
0x000110e4      b80c000000     mov eax, 0xc
0x000110e9      5b             pop rbx
0x000110ea      5d             pop rbp
0x000110eb      c3             ret
0x000110ec      0f1f4000       nop dword [rax]
;-- re_node_set_insert_last:
0x000110f0      55             push rbp
0x000110f1      53             push rbx
0x000110f2      4889f5         mov rbp, rsi
0x000110f5      4889fb         mov rbx, rdi
0x000110f8      4883ec08       sub rsp, 8
0x000110fc      488b7708       mov rsi, qword [rdi + 8]
0x00011100      483937         cmp qword [rdi], rsi                    ; ../coreutils-8.31/lib/regex_internal.c:1224
0x00011103      488b4710       mov rax, qword [rdi + 0x10]
0x00011107      741f           je 0x11128
0x00011109      488d5601       lea rdx, [rsi + 1]
0x0001110d      48895308       mov qword [rbx + 8], rdx
0x00011111      48892cf0       mov qword [rax + rsi*8], rbp
0x00011115      b801000000     mov eax, 1
0x0001111a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/regex_internal.c:1214
0x0001111e      5b             pop rbx
0x0001111f      5d             pop rbp
0x00011120      c3             ret
0x00011121      0f1f80000000.  nop dword [rax]
0x00011128      4883c601       add rsi, 1
0x0001112c      488d1436       lea rdx, [rsi + rsi]
0x00011130      48c1e604       shl rsi, 4
0x00011134      488917         mov qword [rdi], rdx
0x00011137      4889c7         mov rdi, rax
0x0001113a      e8f116ffff     call sym.imp.realloc
0x0001113f      4885c0         test rax, rax
0x00011142      740c           je 0x11150
0x00011144      48894310       mov qword [rbx + 0x10], rax
0x00011148      488b7308       mov rsi, qword [rbx + 8]
0x0001114c      ebbb           jmp 0x11109
0x0001114e      6690           nop
0x00011150      31c0           xor eax, eax
0x00011152      ebc6           jmp 0x1111a                             ; ../coreutils-8.31/lib/regex_internal.c:1160
0x00011154      6690           nop
0x00011156      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_insert:
0x00011160      55             push rbp
0x00011161      53             push rbx
0x00011162      4889f5         mov rbp, rsi
0x00011165      4889fb         mov rbx, rdi
0x00011168      4883ec08       sub rsp, 8
0x0001116c      488b17         mov rdx, qword [rdi]
0x0001116f      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/regex_internal.c:1168
0x00011172      7424           je 0x11198
0x00011174      488b7708       mov rsi, qword [rdi + 8]                ; ../coreutils-8.31/lib/regex_internal.c:1200
0x00011178      488b4710       mov rax, qword [rdi + 0x10]
0x0001117c      4885f6         test rsi, rsi
0x0001117f      754f           jne 0x111d0
0x00011181      488928         mov qword [rax], rbp
0x00011184      4883470801     add qword [rdi + 8], 1
0x00011189      b801000000     mov eax, 1
0x0001118e      4883c408       add rsp, 8
0x00011192      5b             pop rbx
0x00011193      5d             pop rbp
0x00011194      c3             ret
0x00011195      0f1f00         nop dword [rax]
0x00011198      48c707010000.  mov qword [rdi], 1
0x0001119f      48c747080100.  mov qword [rdi + 8], 1
0x000111a7      bf08000000     mov edi, 8
0x000111ac      e8cf15ffff     call sym.imp.malloc
0x000111b1      4885c0         test rax, rax
0x000111b4      48894310       mov qword [rbx + 0x10], rax
0x000111b8      0f848a000000   je 0x11248
0x000111be      488928         mov qword [rax], rbp
0x000111c1      4883c408       add rsp, 8
0x000111c5      b801000000     mov eax, 1
0x000111ca      5b             pop rbx
0x000111cb      5d             pop rbp
0x000111cc      c3             ret                                     ; ../coreutils-8.31/lib/regex_internal.c:1187
0x000111cd      0f1f00         nop dword [rax]
0x000111d0      4839f2         cmp rdx, rsi
0x000111d3      0f8487000000   je 0x11260
0x000111d9      483928         cmp qword [rax], rbp
0x000111dc      488d14f50000.  lea rdx, [rsi*8]
0x000111e4      7e3a           jle 0x11220
0x000111e6      4885f6         test rsi, rsi
0x000111e9      7e18           jle 0x11203                             ; ../coreutils-8.31/lib/regex_internal.c:1197
0x000111eb      4801c2         add rdx, rax
0x000111ee      6690           nop
0x000111f0      488b4af8       mov rcx, qword [rdx - 8]
0x000111f4      4883ea08       sub rdx, 8
0x000111f8      48894a08       mov qword [rdx + 8], rcx
0x000111fc      4839d0         cmp rax, rdx
0x000111ff      75ef           jne 0x111f0
0x00011201      31d2           xor edx, edx
0x00011203      48892c10       mov qword [rax + rdx], rbp
0x00011207      b801000000     mov eax, 1
0x0001120c      4883430801     add qword [rbx + 8], 1
0x00011211      e978ffffff     jmp 0x1118e
0x00011216      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regex_internal.c:1193
0x00011220      488b4c10f8     mov rcx, qword [rax + rdx - 8]
0x00011225      4839cd         cmp rbp, rcx
0x00011228      7dd9           jge 0x11203
0x0001122a      660f1f440000   nop word [rax + rax]
0x00011230      48890c10       mov qword [rax + rdx], rcx
0x00011234      4883ea08       sub rdx, 8
0x00011238      488b4c10f8     mov rcx, qword [rax + rdx - 8]
0x0001123d      4839e9         cmp rcx, rbp
0x00011240      7fee           jg 0x11230
0x00011242      ebbf           jmp 0x11203
0x00011244      0f1f4000       nop dword [rax]
0x00011248      48c743080000.  mov qword [rbx + 8], 0
0x00011250      48c703000000.  mov qword [rbx], 0
0x00011257      e932ffffff     jmp 0x1118e
0x0001125c      0f1f4000       nop dword [rax]
0x00011260      488d1436       lea rdx, [rsi + rsi]
0x00011264      48c1e604       shl rsi, 4
0x00011268      488917         mov qword [rdi], rdx
0x0001126b      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/regex_internal.c:1178
0x0001126e      e8bd15ffff     call sym.imp.realloc
0x00011273      4885c0         test rax, rax
0x00011276      740d           je 0x11285                              ; ../coreutils-8.31/lib/regex_internal.c:1446
0x00011278      48894310       mov qword [rbx + 0x10], rax
0x0001127c      488b7308       mov rsi, qword [rbx + 8]
0x00011280      e954ffffff     jmp 0x111d9
0x00011285      31c0           xor eax, eax
0x00011287      e902ffffff     jmp 0x1118e
0x0001128c      0f1f4000       nop dword [rax]
;-- register_state:
0x00011290      4156           push r14
0x00011292      4155           push r13
0x00011294      4989fe         mov r14, rdi
0x00011297      4154           push r12
0x00011299      55             push rbp
0x0001129a      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/regex_internal.c:849
0x0001129d      53             push rbx
0x0001129e      488b5e10       mov rbx, qword [rsi + 0x10]
0x000112a2      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/regex_internal.c:847
0x000112a5      488916         mov qword [rsi], rdx
0x000112a8      48c746280000.  mov qword [rsi + 0x28], 0
0x000112b0      4c8d6e20       lea r13, [rsi + 0x20]
0x000112b4      488d3cdd0000.  lea rdi, [rbx*8]                        ; ../coreutils-8.31/lib/regex_internal.c:1455
0x000112bc      48895e20       mov qword [rsi + 0x20], rbx
0x000112c0      e8bb14ffff     call sym.imp.malloc
0x000112c5      4885c0         test rax, rax
0x000112c8      48894530       mov qword [rbp + 0x30], rax
0x000112cc      7440           je 0x1130e
0x000112ce      4885db         test rbx, rbx
0x000112d1      7e4d           jle 0x11320
0x000112d3      31db           xor ebx, ebx
0x000112d5      eb13           jmp 0x112ea
0x000112d7      660f1f840000.  nop word [rax + rax]
0x000112e0      4883c301       add rbx, 1
0x000112e4      48395d10       cmp qword [rbp + 0x10], rbx
0x000112e8      7e36           jle 0x11320                             ; ../coreutils-8.31/lib/regex_internal.c:1459
0x000112ea      488b4518       mov rax, qword [rbp + 0x18]
0x000112ee      488b34d8       mov rsi, qword [rax + rbx*8]
0x000112f2      4889f0         mov rax, rsi
0x000112f5      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/regex_internal.c:1454
0x000112f9      490306         add rax, qword [r14]
0x000112fc      f6400808       test byte [rax + 8], 8
0x00011300      75de           jne 0x112e0
0x00011302      4c89ef         mov rdi, r13
0x00011305      e8e6fdffff     call sym.re_node_set_insert_last
0x0001130a      84c0           test al, al
0x0001130c      75d2           jne 0x112e0
0x0001130e      5b             pop rbx
0x0001130f      b80c000000     mov eax, 0xc
0x00011314      5d             pop rbp
0x00011315      415c           pop r12
0x00011317      415d           pop r13
0x00011319      415e           pop r14                                 ; ../coreutils-8.31/lib/regex_internal.c:1464
0x0001131b      c3             ret
0x0001131c      0f1f4000       nop dword [rax]
0x00011320      4d23a6880000.  and r12, qword [r14 + 0x88]
0x00011327      498b4640       mov rax, qword [r14 + 0x40]
0x0001132b      4b8d1464       lea rdx, [r12 + r12*2]
0x0001132f      488d1cd0       lea rbx, [rax + rdx*8]
0x00011333      488b13         mov rdx, qword [rbx]                    ; ../coreutils-8.31/lib/regex_internal.c:1476
0x00011336      48395308       cmp qword [rbx + 8], rdx
0x0001133a      488b4310       mov rax, qword [rbx + 0x10]
0x0001133e      488d7201       lea rsi, [rdx + 1]
0x00011342      7e12           jle 0x11356
0x00011344      488933         mov qword [rbx], rsi
0x00011347      48892cd0       mov qword [rax + rdx*8], rbp
0x0001134b      31c0           xor eax, eax
0x0001134d      5b             pop rbx
0x0001134e      5d             pop rbp
0x0001134f      415c           pop r12
0x00011351      415d           pop r13
0x00011353      415e           pop r14
0x00011355      c3             ret
0x00011356      4c8d2436       lea r12, [rsi + rsi]
0x0001135a      4889c7         mov rdi, rax
0x0001135d      48c1e604       shl rsi, 4
0x00011361      e8ca14ffff     call sym.imp.realloc
0x00011366      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/regex_internal.c:411
0x00011369      74a3           je 0x1130e
0x0001136b      488b13         mov rdx, qword [rbx]
0x0001136e      48894310       mov qword [rbx + 0x10], rax
0x00011372      4c896308       mov qword [rbx + 8], r12
0x00011376      488d7201       lea rsi, [rdx + 1]
0x0001137a      ebc8           jmp 0x11344                             ; ../coreutils-8.31/lib/regex_internal.c:415
0x0001137c      0f1f4000       nop dword [rax]
;-- build_upper_buffer:
0x00011380      4154           push r12
0x00011382      4c8b6758       mov r12, qword [rdi + 0x58]
0x00011386      4c396740       cmp qword [rdi + 0x40], r12
0x0001138a      55             push rbp
0x0001138b      4889fd         mov rbp, rdi
0x0001138e      4c0f4e6740     cmovle r12, qword [rdi + 0x40]          ; ../coreutils-8.31/lib/regex_internal.c:417
0x00011393      53             push rbx
0x00011394      488b5f30       mov rbx, qword [rdi + 0x30]
0x00011398      4939dc         cmp r12, rbx
0x0001139b      7e38           jle 0x113d5
0x0001139d      e81e10ffff     call sym.imp.__ctype_toupper_loc        ; ../coreutils-8.31/lib/regex_internal.c:418
0x000113a2      660f1f440000   nop word [rax + rax]
0x000113a8      488b5500       mov rdx, qword [rbp]                    ; ../coreutils-8.31/lib/regex_internal.c:420
0x000113ac      488b4d78       mov rcx, qword [rbp + 0x78]
0x000113b0      4801da         add rdx, rbx
0x000113b3      48035528       add rdx, qword [rbp + 0x28]
0x000113b7      4885c9         test rcx, rcx
0x000113ba      0fb612         movzx edx, byte [rdx]
0x000113bd      7529           jne 0x113e8
0x000113bf      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/regex_internal.c:423
0x000113c2      488b4d08       mov rcx, qword [rbp + 8]
0x000113c6      8b1496         mov edx, dword [rsi + rdx*4]
0x000113c9      881419         mov byte [rcx + rbx], dl
0x000113cc      4883c301       add rbx, 1
0x000113d0      4939dc         cmp r12, rbx
0x000113d3      75d3           jne 0x113a8
0x000113d5      48895d30       mov qword [rbp + 0x30], rbx
0x000113d9      48895d38       mov qword [rbp + 0x38], rbx
0x000113dd      5b             pop rbx
0x000113de      5d             pop rbp
0x000113df      415c           pop r12
0x000113e1      c3             ret
0x000113e2      660f1f440000   nop word [rax + rax]
0x000113e8      0fb61411       movzx edx, byte [rcx + rdx]
0x000113ec      ebd1           jmp 0x113bf
0x000113ee      6690           nop
;-- build_wcs_buffer:
0x000113f0      4157           push r15
0x000113f2      4156           push r14
0x000113f4      4155           push r13
0x000113f6      4154           push r12
0x000113f8      55             push rbp
0x000113f9      53             push rbx
0x000113fa      4889fb         mov rbx, rdi
0x000113fd      4883ec68       sub rsp, 0x68
0x00011401      4c8b6758       mov r12, qword [rdi + 0x58]
0x00011405      488b6f30       mov rbp, qword [rdi + 0x30]
0x00011409      64488b042528.  mov rax, qword fs:[0x28]
0x00011412      4889442458     mov qword [rsp + 0x58], rax
0x00011417      31c0           xor eax, eax
0x00011419      4c396740       cmp qword [rdi + 0x40], r12
0x0001141d      4c0f4e6740     cmovle r12, qword [rdi + 0x40]
0x00011422      4939ec         cmp r12, rbp                            ; ../coreutils-8.31/lib/regex_internal.c:103
0x00011425      0f8e89000000   jle 0x114b4                             ; ../coreutils-8.31/lib/regex_internal.c:104
0x0001142b      4c8d7720       lea r14, [rdi + 0x20]
0x0001142f      4c8d6c240c     lea r13, [rsp + 0xc]
0x00011434      0f1f4000       nop dword [rax]
0x00011438      488b7b78       mov rdi, qword [rbx + 0x78]
0x0001143c      4c89e2         mov rdx, r12
0x0001143f      4c8b7b20       mov r15, qword [rbx + 0x20]             ; ../coreutils-8.31/lib/regex_internal.c:119
0x00011443      4829ea         sub rdx, rbp
0x00011446      4885ff         test rdi, rdi
0x00011449      0f85e1000000   jne 0x11530
0x0001144f      488b7328       mov rsi, qword [rbx + 0x28]
0x00011453      4801ee         add rsi, rbp
0x00011456      480333         add rsi, qword [rbx]
0x00011459      4c89f1         mov rcx, r14
0x0001145c      4c89ef         mov rdi, r13
0x0001145f      e87cedffff     call sym.rpl_mbrtowc
0x00011464      488d50ff       lea rdx, [rax - 1]
0x00011468      4883fafd       cmp rdx, 0xfffffffffffffffd
0x0001146c      0f878e000000   ja 0x11500
0x00011472      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00011476      8b54240c       mov edx, dword [rsp + 0xc]
0x0001147a      7474           je 0x114f0
0x0001147c      488b4b10       mov rcx, qword [rbx + 0x10]
0x00011480      488d7501       lea rsi, [rbp + 1]
0x00011484      488d3cad0000.  lea rdi, [rbp*4]
0x0001148c      8914a9         mov dword [rcx + rbp*4], edx
0x0001148f      4801c5         add rbp, rax
0x00011492      4839ee         cmp rsi, rbp
0x00011495      7d49           jge 0x114e0                             ; ../coreutils-8.31/lib/regex_internal.c:98
0x00011497      488d543904     lea rdx, [rcx + rdi + 4]
0x0001149c      488d04a9       lea rax, [rcx + rbp*4]
0x000114a0      c702ffffffff   mov dword [rdx], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x000114a6      4883c204       add rdx, 4
0x000114aa      4839d0         cmp rax, rdx
0x000114ad      75f1           jne 0x114a0
0x000114af      4c39e5         cmp rbp, r12
0x000114b2      7c84           jl 0x11438
0x000114b4      488b442458     mov rax, qword [rsp + 0x58]
0x000114b9      644833042528.  xor rax, qword fs:[0x28]
0x000114c2      48896b30       mov qword [rbx + 0x30], rbp
0x000114c6      48896b38       mov qword [rbx + 0x38], rbp             ; ../coreutils-8.31/lib/regex_internal.c:141
0x000114ca      0f85de000000   jne 0x115ae
0x000114d0      4883c468       add rsp, 0x68
0x000114d4      5b             pop rbx
0x000114d5      5d             pop rbp
0x000114d6      415c           pop r12                                 ; ../coreutils-8.31/lib/regex_internal.c:120
0x000114d8      415d           pop r13
0x000114da      415e           pop r14
0x000114dc      415f           pop r15
0x000114de      c3             ret
0x000114df      90             nop
0x000114e0      4889f5         mov rbp, rsi
0x000114e3      4c39e5         cmp rbp, r12
0x000114e6      0f8c4cffffff   jl 0x11438                              ; ../coreutils-8.31/lib/regex_internal.c:126
0x000114ec      ebc6           jmp 0x114b4
0x000114ee      6690           nop
0x000114f0      488b4358       mov rax, qword [rbx + 0x58]
0x000114f4      48394340       cmp qword [rbx + 0x40], rax             ; ../coreutils-8.31/lib/regex_internal.c:127
0x000114f8      0f8c9a000000   jl 0x11598
0x000114fe      6690           nop
0x00011500      488b03         mov rax, qword [rbx]
0x00011503      488b4b78       mov rcx, qword [rbx + 0x78]
0x00011507      4801e8         add rax, rbp
0x0001150a      48034328       add rax, qword [rbx + 0x28]
0x0001150e      4885c9         test rcx, rcx
0x00011511      0fb610         movzx edx, byte [rax]
0x00011514      8954240c       mov dword [rsp + 0xc], edx
0x00011518      0f8583000000   jne 0x115a1
0x0001151e      4c897b20       mov qword [rbx + 0x20], r15
0x00011522      b801000000     mov eax, 1
0x00011527      e950ffffff     jmp 0x1147c
0x0001152c      0f1f4000       nop dword [rax]
0x00011530      8b8b90000000   mov ecx, dword [rbx + 0x90]
0x00011536      31c0           xor eax, eax
0x00011538      488d742410     lea rsi, [rsp + 0x10]
0x0001153d      85c9           test ecx, ecx
0x0001153f      7f20           jg 0x11561
0x00011541      e913ffffff     jmp 0x11459
0x00011546      662e0f1f8400.  nop word cs:[rax + rax]
0x00011550      4883c001       add rax, 1
0x00011554      4839c2         cmp rdx, rax                            ; ../coreutils-8.31/lib/regex_internal.c:113
0x00011557      0f84fcfeffff   je 0x11459
0x0001155d      488b7b78       mov rdi, qword [rbx + 0x78]
0x00011561      488b0b         mov rcx, qword [rbx]
0x00011564      4801e9         add rcx, rbp
0x00011567      4801c1         add rcx, rax
0x0001156a      48034b28       add rcx, qword [rbx + 0x28]
0x0001156e      0fb609         movzx ecx, byte [rcx]
0x00011571      0fb60c0f       movzx ecx, byte [rdi + rcx]
0x00011575      488b7b08       mov rdi, qword [rbx + 8]
0x00011579      4801ef         add rdi, rbp
0x0001157c      880c07         mov byte [rdi + rax], cl
0x0001157f      880c06         mov byte [rsi + rax], cl
0x00011582      8d4801         lea ecx, [rax + 1]
0x00011585      3b8b90000000   cmp ecx, dword [rbx + 0x90]
0x0001158b      7cc3           jl 0x11550
0x0001158d      e9c7feffff     jmp 0x11459
0x00011592      660f1f440000   nop word [rax + rax]
0x00011598      4c897b20       mov qword [rbx + 0x20], r15
0x0001159c      e913ffffff     jmp 0x114b4
0x000115a1      0fb61411       movzx edx, byte [rcx + rdx]
0x000115a5      8954240c       mov dword [rsp + 0xc], edx
0x000115a9      e970ffffff     jmp 0x1151e
0x000115ae      e8ad0fffff     call sym.imp.__stack_chk_fail
0x000115b3      0f1f00         nop dword [rax]
0x000115b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- build_wcs_upper_buffer:
0x000115c0      4157           push r15
0x000115c2      4156           push r14                                ; ../coreutils-8.31/lib/regex_internal.c:154
0x000115c4      4989fe         mov r14, rdi
0x000115c7      4155           push r13
0x000115c9      4154           push r12
0x000115cb      55             push rbp
0x000115cc      53             push rbx
0x000115cd      4881eca80000.  sub rsp, 0xa8
0x000115d4      488b5f58       mov rbx, qword [rdi + 0x58]
0x000115d8      4c8b7f30       mov r15, qword [rdi + 0x30]
0x000115dc      64488b042528.  mov rax, qword fs:[0x28]
0x000115e5      488984249800.  mov qword [rsp + 0x98], rax
0x000115ed      31c0           xor eax, eax
0x000115ef      48395f40       cmp qword [rdi + 0x40], rbx             ; ../coreutils-8.31/lib/regex_internal.c:114
0x000115f3      480f4e5f40     cmovle rbx, qword [rdi + 0x40]          ; ../coreutils-8.31/lib/regex_internal.c:105
0x000115f8      80bf8a000000.  cmp byte [rdi + 0x8a], 0
0x000115ff      750b           jne 0x1160c
0x00011601      48837f7800     cmp qword [rdi + 0x78], 0
0x00011606      0f8484010000   je 0x11790
0x0001160c      4d8b6e38       mov r13, qword [r14 + 0x38]
0x00011610      4939df         cmp r15, rbx
0x00011613      7c3b           jl 0x11650
0x00011615      4d897e30       mov qword [r14 + 0x30], r15
0x00011619      4d896e38       mov qword [r14 + 0x38], r13
0x0001161d      31c0           xor eax, eax
0x0001161f      488b8c249800.  mov rcx, qword [rsp + 0x98]
0x00011627      6448330c2528.  xor rcx, qword fs:[0x28]
0x00011630      0f8584050000   jne 0x11bba
0x00011636      4881c4a80000.  add rsp, 0xa8
0x0001163d      5b             pop rbx
0x0001163e      5d             pop rbp
0x0001163f      415c           pop r12
0x00011641      415d           pop r13
0x00011643      415e           pop r14
0x00011645      415f           pop r15
0x00011647      c3             ret
0x00011648      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/regex_internal.c:-9
0x00011650      498d4620       lea rax, [r14 + 0x20]
0x00011654      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/regex_internal.c:-8
0x00011659      4889d8         mov rax, rbx
0x0001165c      4c29f8         sub rax, r15
0x0001165f      4889442410     mov qword [rsp + 0x10], rax
0x00011664      488d442444     lea rax, [rsp + 0x44]
0x00011669      4889442420     mov qword [rsp + 0x20], rax             ; ../coreutils-8.31/lib/regex_internal.c:5
0x0001166e      498b5678       mov rdx, qword [r14 + 0x78]
0x00011672      498b4620       mov rax, qword [r14 + 0x20]
0x00011676      4885d2         test rdx, rdx
0x00011679      4889442448     mov qword [rsp + 0x48], rax
0x0001167e      0f8505030000   jne 0x11989
0x00011684      498b6e28       mov rbp, qword [r14 + 0x28]
0x00011688      4c01ed         add rbp, r13
0x0001168b      49032e         add rbp, qword [r14]
0x0001168e      48896c2418     mov qword [rsp + 0x18], rbp
0x00011693      488b4c2408     mov rcx, qword [rsp + 8]
0x00011698      488b542410     mov rdx, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/regex_internal.c:8
0x0001169d      488b742418     mov rsi, qword [rsp + 0x18]
0x000116a2      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000116a7      e834ebffff     call sym.rpl_mbrtowc                    ; ../coreutils-8.31/lib/regex_internal.c:9
0x000116ac      4889c5         mov rbp, rax
0x000116af      488d40ff       lea rax, [rax - 1]
0x000116b3      4883f8fc       cmp rax, 0xfffffffffffffffc
0x000116b7      4889442420     mov qword [rsp + 0x20], rax
0x000116bc      0f8737030000   ja 0x119f9
0x000116c2      8b542444       mov edx, dword [rsp + 0x44]
0x000116c6      89d7           mov edi, edx
0x000116c8      89542410       mov dword [rsp + 0x10], edx
0x000116cc      e83f12ffff     call sym.imp.towupper
0x000116d1      8b542410       mov edx, dword [rsp + 0x10]
0x000116d5      4189c4         mov r12d, eax
0x000116d8      4c897c2408     mov qword [rsp + 8], r15
0x000116dd      39c2           cmp edx, eax
0x000116df      0f84fb020000   je 0x119e0
0x000116e5      488d4c2450     lea rcx, [rsp + 0x50]                   ; ../coreutils-8.31/lib/regex_internal.c:15
0x000116ea      488d542448     lea rdx, [rsp + 0x48]
0x000116ef      89c6           mov esi, eax
0x000116f1      4889cf         mov rdi, rcx
0x000116f4      48894c2410     mov qword [rsp + 0x10], rcx
0x000116f9      e89210ffff     call sym.imp.wcrtomb
0x000116fe      4839c5         cmp rbp, rax
0x00011701      4989c3         mov r11, rax
0x00011704      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00011709      0f8587030000   jne 0x11a96
0x0001170f      498b7e08       mov rdi, qword [r14 + 8]
0x00011713      4889ea         mov rdx, rbp
0x00011716      4889ce         mov rsi, rcx
0x00011719      4c01ff         add rdi, r15
0x0001171c      e8ef0fffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/regex_internal.c:70
0x00011721      4180be8c0000.  cmp byte [r14 + 0x8c], 0
0x00011729      4a8d442d00     lea rax, [rbp + r13]
0x0001172e      0f8531030000   jne 0x11a65                             ; ../coreutils-8.31/lib/regex_internal.c:74
0x00011734      4983c701       add r15, 1
0x00011738      488b742408     mov rsi, qword [rsp + 8]
0x0001173d      498b5610       mov rdx, qword [r14 + 0x10]
0x00011741      498d4c2fff     lea rcx, [r15 + rbp - 1]
0x00011746      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/regex_internal.c:75
0x00011749      4939cf         cmp r15, rcx
0x0001174c      488d04b50000.  lea rax, [rsi*4]
0x00011754      448924b2       mov dword [rdx + rsi*4], r12d
0x00011758      0f8db2feffff   jge 0x11610
0x0001175e      488d440204     lea rax, [rdx + rax + 4]
0x00011763      488d148a       lea rdx, [rdx + rcx*4]
0x00011767      660f1f840000.  nop word [rax + rax]
0x00011770      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x00011776      4883c004       add rax, 4
0x0001177a      4839c2         cmp rdx, rax
0x0001177d      75f1           jne 0x11770
0x0001177f      4989cf         mov r15, rcx
0x00011782      e989feffff     jmp 0x11610
0x00011787      660f1f840000.  nop word [rax + rax]
0x00011790      80bf8c000000.  cmp byte [rdi + 0x8c], 0
0x00011797      0f856ffeffff   jne 0x1160c
0x0001179d      4939df         cmp r15, rbx
0x000117a0      0f8d92010000   jge 0x11938
0x000117a6      488d4720       lea rax, [rdi + 0x20]                   ; ../coreutils-8.31/lib/regex_internal.c:-81
0x000117aa      4889442408     mov qword [rsp + 8], rax
0x000117af      488d442444     lea rax, [rsp + 0x44]
0x000117b4      4889442430     mov qword [rsp + 0x30], rax
0x000117b9      488d442448     lea rax, [rsp + 0x48]
0x000117be      4889442438     mov qword [rsp + 0x38], rax             ; ../coreutils-8.31/lib/regex_internal.c:-80
0x000117c3      488d442450     lea rax, [rsp + 0x50]
0x000117c8      4889442428     mov qword [rsp + 0x28], rax
0x000117cd      0f1f00         nop dword [rax]
0x000117d0      498b6e28       mov rbp, qword [r14 + 0x28]             ; ../coreutils-8.31/lib/regex_internal.c:-67
0x000117d4      4d89fd         mov r13, r15                            ; ../coreutils-8.31/lib/regex_internal.c:-66
0x000117d7      4c01fd         add rbp, r15
0x000117da      49032e         add rbp, qword [r14]
0x000117dd      440fb66500     movzx r12d, byte [rbp]
0x000117e2      41f6c480       test r12b, 0x80
0x000117e6      7512           jne 0x117fa
0x000117e8      488b7c2408     mov rdi, qword [rsp + 8]
0x000117ed      e89e11ffff     call sym.imp.mbsinit
0x000117f2      85c0           test eax, eax
0x000117f4      0f85ee000000   jne 0x118e8
0x000117fa      498b4620       mov rax, qword [r14 + 0x20]
0x000117fe      488b7c2430     mov rdi, qword [rsp + 0x30]             ; ../coreutils-8.31/lib/regex_internal.c:-63
0x00011803      4889da         mov rdx, rbx
0x00011806      488b4c2408     mov rcx, qword [rsp + 8]
0x0001180b      4c29fa         sub rdx, r15
0x0001180e      4889ee         mov rsi, rbp
0x00011811      4889542410     mov qword [rsp + 0x10], rdx
0x00011816      4889442448     mov qword [rsp + 0x48], rax
0x0001181b      48897c2420     mov qword [rsp + 0x20], rdi             ; ../coreutils-8.31/lib/regex_internal.c:-60
0x00011820      e8bbe9ffff     call sym.rpl_mbrtowc
0x00011825      4889c5         mov rbp, rax
0x00011828      488d40ff       lea rax, [rax - 1]
0x0001182c      4883f8fc       cmp rax, 0xfffffffffffffffc
0x00011830      0f87e2000000   ja 0x11918
0x00011836      8b542444       mov edx, dword [rsp + 0x44]
0x0001183a      89d7           mov edi, edx
0x0001183c      89542418       mov dword [rsp + 0x18], edx             ; wchar2.h:-182
0x00011840      e8cb10ffff     call sym.imp.towupper                   ; string_fortified.h:-479
0x00011845      8b542418       mov edx, dword [rsp + 0x18]
0x00011849      4189c4         mov r12d, eax
0x0001184c      39c2           cmp edx, eax
0x0001184e      7478           je 0x118c8
0x00011850      488b542438     mov rdx, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/regex_internal.c:-172
0x00011855      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0001185a      89c6           mov esi, eax
0x0001185c      e82f0fffff     call sym.imp.wcrtomb
0x00011861      4839c5         cmp rbp, rax
0x00011864      0f856e010000   jne 0x119d8
0x0001186a      498b7e08       mov rdi, qword [r14 + 8]
0x0001186e      488b742428     mov rsi, qword [rsp + 0x28]
0x00011873      4889ea         mov rdx, rbp
0x00011876      4c01ff         add rdi, r15
0x00011879      e8920effff     call sym.imp.memcpy
0x0001187e      4983c701       add r15, 1
0x00011882      498b5610       mov rdx, qword [r14 + 0x10]
0x00011886      4a8d04ad0000.  lea rax, [r13*4]
0x0001188e      498d4c2fff     lea rcx, [r15 + rbp - 1]
0x00011893      4939cf         cmp r15, rcx
0x00011896      468924aa       mov dword [rdx + r13*4], r12d
0x0001189a      7d1e           jge 0x118ba                             ; ../coreutils-8.31/lib/regex_internal.c:-173
0x0001189c      488d440204     lea rax, [rdx + rax + 4]
0x000118a1      488d148a       lea rdx, [rdx + rcx*4]
0x000118a5      0f1f00         nop dword [rax]
0x000118a8      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x000118ae      4883c004       add rax, 4                              ; string_fortified.h:-479
0x000118b2      4839c2         cmp rdx, rax
0x000118b5      75f1           jne 0x118a8
0x000118b7      4989cf         mov r15, rcx
0x000118ba      4c39fb         cmp rbx, r15                            ; ../coreutils-8.31/lib/regex_internal.c:-204
0x000118bd      0f8f0dffffff   jg 0x117d0
0x000118c3      eb73           jmp 0x11938
0x000118c5      0f1f00         nop dword [rax]
0x000118c8      498b7628       mov rsi, qword [r14 + 0x28]
0x000118cc      498b7e08       mov rdi, qword [r14 + 8]
0x000118d0      4889ea         mov rdx, rbp
0x000118d3      4c01fe         add rsi, r15
0x000118d6      490336         add rsi, qword [r14]
0x000118d9      4c01ff         add rdi, r15
0x000118dc      e82f0effff     call sym.imp.memcpy
0x000118e1      eb9b           jmp 0x1187e
0x000118e3      0f1f440000     nop dword [rax + rax]
0x000118e8      e8d30affff     call sym.imp.__ctype_toupper_loc
0x000118ed      488b00         mov rax, qword [rax]
0x000118f0      498b5608       mov rdx, qword [r14 + 8]                ; ../coreutils-8.31/lib/regex_internal.c:-166
0x000118f4      428b04a0       mov eax, dword [rax + r12*4]
0x000118f8      4288043a       mov byte [rdx + r15], al
0x000118fc      498b5608       mov rdx, qword [r14 + 8]
0x00011900      498b4610       mov rax, qword [r14 + 0x10]
0x00011904      420fb6143a     movzx edx, byte [rdx + r15]
0x00011909      428914b8       mov dword [rax + r15*4], edx
0x0001190d      4983c701       add r15, 1
0x00011911      eba7           jmp 0x118ba
0x00011913      0f1f440000     nop dword [rax + rax]
0x00011918      4883f8fd       cmp rax, 0xfffffffffffffffd
0x0001191c      7532           jne 0x11950
0x0001191e      498b4658       mov rax, qword [r14 + 0x58]
0x00011922      49394640       cmp qword [r14 + 0x40], rax             ; ../coreutils-8.31/lib/regex_internal.c:-162
0x00011926      7d28           jge 0x11950
0x00011928      488b442448     mov rax, qword [rsp + 0x48]
0x0001192d      49894620       mov qword [r14 + 0x20], rax
0x00011931      0f1f80000000.  nop dword [rax]
0x00011938      4d897e30       mov qword [r14 + 0x30], r15
0x0001193c      4d897e38       mov qword [r14 + 0x38], r15
0x00011940      31c0           xor eax, eax
0x00011942      e9d8fcffff     jmp 0x1161f
0x00011947      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/regex_internal.c:-158
0x00011950      498b06         mov rax, qword [r14]
0x00011953      498b5608       mov rdx, qword [r14 + 8]
0x00011957      4c01f8         add rax, r15
0x0001195a      49034628       add rax, qword [r14 + 0x28]
0x0001195e      0fb600         movzx eax, byte [rax]
0x00011961      4288043a       mov byte [rdx + r15], al
0x00011965      498b5610       mov rdx, qword [r14 + 0x10]
0x00011969      4983c701       add r15, 1
0x0001196d      4883fdff       cmp rbp, 0xffffffffffffffff
0x00011971      428904aa       mov dword [rdx + r13*4], eax
0x00011975      0f853fffffff   jne 0x118ba
0x0001197b      488b442448     mov rax, qword [rsp + 0x48]
0x00011980      49894620       mov qword [r14 + 0x20], rax
0x00011984      e931ffffff     jmp 0x118ba
0x00011989      418b86900000.  mov eax, dword [r14 + 0x90]
0x00011990      85c0           test eax, eax                           ; ../coreutils-8.31/lib/regex_internal.c:-132
0x00011992      0f8e18020000   jle 0x11bb0
0x00011998      498b7e28       mov rdi, qword [r14 + 0x28]
0x0001199c      448d58ff       lea r11d, [rax - 1]
0x000119a0      488d4c2450     lea rcx, [rsp + 0x50]
0x000119a5      31c0           xor eax, eax
0x000119a7      4c01ef         add rdi, r13
0x000119aa      49033e         add rdi, qword [r14]                    ; ../coreutils-8.31/lib/regex_internal.c:-178
0x000119ad      eb0b           jmp 0x119ba
0x000119af      4883c001       add rax, 1
0x000119b3      4839442410     cmp qword [rsp + 0x10], rax
0x000119b8      7411           je 0x119cb
0x000119ba      0fb63407       movzx esi, byte [rdi + rax]
0x000119be      4939c3         cmp r11, rax
0x000119c1      0fb63432       movzx esi, byte [rdx + rsi]
0x000119c5      40883401       mov byte [rcx + rax], sil
0x000119c9      75e4           jne 0x119af
0x000119cb      48894c2418     mov qword [rsp + 0x18], rcx
0x000119d0      e9befcffff     jmp 0x11693
0x000119d5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/regex_internal.c:-175
0x000119d8      4d89fd         mov r13, r15                            ; ../coreutils-8.31/lib/regex_internal.c:-173
0x000119db      e98efcffff     jmp 0x1166e
0x000119e0      498b7e08       mov rdi, qword [r14 + 8]
0x000119e4      488b742418     mov rsi, qword [rsp + 0x18]
0x000119e9      4889ea         mov rdx, rbp
0x000119ec      4c01ff         add rdi, r15
0x000119ef      e81c0dffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/regex_internal.c:-171
0x000119f4      e928fdffff     jmp 0x11721
0x000119f9      48837c2420fd   cmp qword [rsp + 0x20], 0xfffffffffffffffd
0x000119ff      750a           jne 0x11a0b
0x00011a01      498b4658       mov rax, qword [r14 + 0x58]
0x00011a05      49394640       cmp qword [r14 + 0x40], rax
0x00011a09      7c7d           jl 0x11a88
0x00011a0b      498b06         mov rax, qword [r14]
0x00011a0e      498b5678       mov rdx, qword [r14 + 0x78]
0x00011a12      4c01e8         add rax, r13
0x00011a15      49034628       add rax, qword [r14 + 0x28]
0x00011a19      4885d2         test rdx, rdx
0x00011a1c      0fb600         movzx eax, byte [rax]
0x00011a1f      0f85a7010000   jne 0x11bcc
0x00011a25      498b5608       mov rdx, qword [r14 + 8]
0x00011a29      4c89f9         mov rcx, r15
0x00011a2c      4288043a       mov byte [rdx + r15], al
0x00011a30      4180be8c0000.  cmp byte [r14 + 0x8c], 0
0x00011a38      0f8581010000   jne 0x11bbf
0x00011a3e      498b5610       mov rdx, qword [r14 + 0x10]
0x00011a42      4983c501       add r13, 1
0x00011a46      4983c701       add r15, 1
0x00011a4a      4883fdff       cmp rbp, 0xffffffffffffffff
0x00011a4e      89048a         mov dword [rdx + rcx*4], eax
0x00011a51      0f85b9fbffff   jne 0x11610
0x00011a57      488b442448     mov rax, qword [rsp + 0x48]
0x00011a5c      49894620       mov qword [r14 + 0x20], rax
0x00011a60      e9abfbffff     jmp 0x11610                             ; ../coreutils-8.31/lib/regex_internal.c:-240
0x00011a65      498b5618       mov rdx, qword [r14 + 0x18]
0x00011a69      4c89f9         mov rcx, r15
0x00011a6c      4d89ea         mov r10, r13
0x00011a6f      4c29e9         sub rcx, r13
0x00011a72      488d14ca       lea rdx, [rdx + rcx*8]
0x00011a76      4e8914d2       mov qword [rdx + r10*8], r10
0x00011a7a      4983c201       add r10, 1
0x00011a7e      4c39d0         cmp rax, r10
0x00011a81      75f3           jne 0x11a76
0x00011a83      e9acfcffff     jmp 0x11734
0x00011a88      488b442448     mov rax, qword [rsp + 0x48]
0x00011a8d      49894620       mov qword [r14 + 0x20], rax
0x00011a91      e97ffbffff     jmp 0x11615
0x00011a96      4883f8ff       cmp rax, 0xffffffffffffffff
0x00011a9a      0f8440ffffff   je 0x119e0
0x00011aa0      4a8d0438       lea rax, [rax + r15]
0x00011aa4      4889c6         mov rsi, rax
0x00011aa7      4889442408     mov qword [rsp + 8], rax
0x00011aac      498b4640       mov rax, qword [r14 + 0x40]             ; ../coreutils-8.31/lib/regex_internal.c:-219
0x00011ab0      4839c6         cmp rsi, rax
0x00011ab3      77d3           ja 0x11a88
0x00011ab5      49837e1800     cmp qword [r14 + 0x18], 0
0x00011aba      0f84b8000000   je 0x11b78
0x00011ac0      4180be8c0000.  cmp byte [r14 + 0x8c], 0
0x00011ac8      7520           jne 0x11aea
0x00011aca      4d85ff         test r15, r15
0x00011acd      7413           je 0x11ae2
0x00011acf      498b5618       mov rdx, qword [r14 + 0x18]             ; ../coreutils-8.31/lib/regex_internal.c:-213
0x00011ad3      31c0           xor eax, eax
0x00011ad5      488904c2       mov qword [rdx + rax*8], rax
0x00011ad9      4883c001       add rax, 1
0x00011add      4c39f8         cmp rax, r15
0x00011ae0      75f3           jne 0x11ad5                             ; ../coreutils-8.31/lib/regex_internal.c:-215
0x00011ae2      41c6868c0000.  mov byte [r14 + 0x8c], 1
0x00011aea      498b7e08       mov rdi, qword [r14 + 8]                ; ../coreutils-8.31/lib/regex_internal.c:-213
0x00011aee      4889ce         mov rsi, rcx
0x00011af1      4c89da         mov rdx, r11                            ; ../coreutils-8.31/lib/regex_internal.c:-210
0x00011af4      4c895c2410     mov qword [rsp + 0x10], r11
0x00011af9      4c01ff         add rdi, r15
0x00011afc      e80f0cffff     call sym.imp.memcpy
0x00011b01      498b4610       mov rax, qword [r14 + 0x10]
0x00011b05      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00011b0a      4a8d0cb8       lea rcx, [rax + r15*4]
0x00011b0e      498b4618       mov rax, qword [r14 + 0x18]
0x00011b12      4983fb01       cmp r11, 1
0x00011b16      448921         mov dword [rcx], r12d
0x00011b19      4a8d34f8       lea rsi, [rax + r15*8]
0x00011b1d      4c892e         mov qword [rsi], r13
0x00011b20      7628           jbe 0x11b4a
0x00011b22      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regex_internal.c:-207
0x00011b27      488b542420     mov rdx, qword [rsp + 0x20]
0x00011b2c      4839e8         cmp rax, rbp                            ; ../coreutils-8.31/lib/regex_internal.c:-204
0x00011b2f      480f42d0       cmovb rdx, rax
0x00011b33      4c01ea         add rdx, r13
0x00011b36      488914c6       mov qword [rsi + rax*8], rdx
0x00011b3a      c70481ffffff.  mov dword [rcx + rax*4], 0xffffffff     ; ../coreutils-8.31/lib/regex_internal.c:-201 ; [0xffffffff:4]=-1 ; -1
0x00011b41      4883c001       add rax, 1
0x00011b45      4c39d8         cmp rax, r11
0x00011b48      75dd           jne 0x11b27
0x00011b4a      498b5e58       mov rbx, qword [r14 + 0x58]
0x00011b4e      4929eb         sub r11, rbp
0x00011b51      4c01db         add rbx, r11
0x00011b54      4d3b6e60       cmp r13, qword [r14 + 0x60]
0x00011b58      49895e58       mov qword [r14 + 0x58], rbx
0x00011b5c      7d04           jge 0x11b62                             ; ../coreutils-8.31/lib/regex_internal.c:-228
0x00011b5e      4d015e68       add qword [r14 + 0x68], r11
0x00011b62      49395e40       cmp qword [r14 + 0x40], rbx
0x00011b66      4c8b7c2408     mov r15, qword [rsp + 8]
0x00011b6b      490f4e5e40     cmovle rbx, qword [r14 + 0x40]
0x00011b70      4901ed         add r13, rbp                            ; ../coreutils-8.31/lib/regex_internal.c:-225
0x00011b73      e998faffff     jmp 0x11610
0x00011b78      488d3cc50000.  lea rdi, [rax*8]
0x00011b80      48894c2418     mov qword [rsp + 0x18], rcx
0x00011b85      4c895c2410     mov qword [rsp + 0x10], r11
0x00011b8a      e8f10bffff     call sym.imp.malloc
0x00011b8f      4885c0         test rax, rax
0x00011b92      49894618       mov qword [r14 + 0x18], rax
0x00011b96      4c8b5c2410     mov r11, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/regexec.c:3290
0x00011b9b      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00011ba0      0f851affffff   jne 0x11ac0
0x00011ba6      b80c000000     mov eax, 0xc                            ; ../coreutils-8.31/lib/regexec.c:3295
0x00011bab      e96ffaffff     jmp 0x1161f
0x00011bb0      488d4c2450     lea rcx, [rsp + 0x50]
0x00011bb5      e911feffff     jmp 0x119cb
0x00011bba      e8a109ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/regexec.c:3300
0x00011bbf      498b5618       mov rdx, qword [r14 + 0x18]
0x00011bc3      4e892cfa       mov qword [rdx + r15*8], r13
0x00011bc7      e972feffff     jmp 0x11a3e
0x00011bcc      0fb60402       movzx eax, byte [rdx + rax]
0x00011bd0      e950feffff     jmp 0x11a25
0x00011bd5      90             nop
0x00011bd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- extend_buffers:
0x00011be0      55             push rbp
0x00011be1      53             push rbx
0x00011be2      48bafeffffff.  movabs rdx, 0xffffffffffffffe           ; 1152921504606846974
0x00011bec      4883ec08       sub rsp, 8
0x00011bf0      488b4740       mov rax, qword [rdi + 0x40]
0x00011bf4      4839d0         cmp rax, rdx
0x00011bf7      0f870b010000   ja 0x11d08
0x00011bfd      488b5758       mov rdx, qword [rdi + 0x58]
0x00011c01      4801c0         add rax, rax
0x00011c04      4863f6         movsxd rsi, esi
0x00011c07      4889fb         mov rbx, rdi
0x00011c0a      4839d0         cmp rax, rdx                            ; ../coreutils-8.31/lib/regexec.c:3320
0x00011c0d      480f4fc2       cmovg rax, rdx
0x00011c11      4839f0         cmp rax, rsi
0x00011c14      480f4df0       cmovge rsi, rax
0x00011c18      e833f4ffff     call sym.re_string_realloc_buffers
0x00011c1d      85c0           test eax, eax
0x00011c1f      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/regexec.c:3323
0x00011c21      0f85b6000000   jne 0x11cdd
0x00011c27      488bbbb80000.  mov rdi, qword [rbx + 0xb8]
0x00011c2e      4885ff         test rdi, rdi
0x00011c31      7421           je 0x11c54
0x00011c33      488b4340       mov rax, qword [rbx + 0x40]
0x00011c37      488d34c50800.  lea rsi, [rax*8 + 8]
0x00011c3f      e8ec0bffff     call sym.imp.realloc
0x00011c44      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/regex_internal.c:-209
0x00011c47      0f84bb000000   je 0x11d08
0x00011c4d      488983b80000.  mov qword [rbx + 0xb8], rax
0x00011c54      80bb88000000.  cmp byte [rbx + 0x88], 0
0x00011c5b      8b8390000000   mov eax, dword [rbx + 0x90]
0x00011c61      741d           je 0x11c80
0x00011c63      83f801         cmp eax, 1
0x00011c66      4889df         mov rdi, rbx
0x00011c69      0f8eb1000000   jle 0x11d20
0x00011c6f      4883c408       add rsp, 8
0x00011c73      5b             pop rbx
0x00011c74      5d             pop rbp                                 ; ../coreutils-8.31/lib/regex_internal.c:-204
0x00011c75      e946f9ffff     jmp sym.build_wcs_upper_buffer
0x00011c7a      660f1f440000   nop word [rax + rax]
0x00011c80      83f801         cmp eax, 1
0x00011c83      7f6b           jg 0x11cf0
0x00011c85      488b4b78       mov rcx, qword [rbx + 0x78]
0x00011c89      4885c9         test rcx, rcx
0x00011c8c      744f           je 0x11cdd
0x00011c8e      488b7358       mov rsi, qword [rbx + 0x58]
0x00011c92      48397340       cmp qword [rbx + 0x40], rsi
0x00011c96      480f4e7340     cmovle rsi, qword [rbx + 0x40]
0x00011c9b      488b4330       mov rax, qword [rbx + 0x30]
0x00011c9f      4839c6         cmp rsi, rax
0x00011ca2      7f10           jg 0x11cb4
0x00011ca4      eb2f           jmp 0x11cd5
0x00011ca6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regexec.c:3337
0x00011cb0      488b4b78       mov rcx, qword [rbx + 0x78]
0x00011cb4      488b13         mov rdx, qword [rbx]
0x00011cb7      4801c2         add rdx, rax
0x00011cba      48035328       add rdx, qword [rbx + 0x28]
0x00011cbe      0fb612         movzx edx, byte [rdx]                   ; ../coreutils-8.31/lib/regexec.c:3297
0x00011cc1      0fb60c11       movzx ecx, byte [rcx + rdx]
0x00011cc5      488b5308       mov rdx, qword [rbx + 8]
0x00011cc9      880c02         mov byte [rdx + rax], cl
0x00011ccc      4883c001       add rax, 1
0x00011cd0      4839c6         cmp rsi, rax
0x00011cd3      75db           jne 0x11cb0
0x00011cd5      48894330       mov qword [rbx + 0x30], rax
0x00011cd9      48894338       mov qword [rbx + 0x38], rax
0x00011cdd      4883c408       add rsp, 8
0x00011ce1      89e8           mov eax, ebp
0x00011ce3      5b             pop rbx
0x00011ce4      5d             pop rbp
0x00011ce5      c3             ret
0x00011ce6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regexec.c:925
0x00011cf0      4889df         mov rdi, rbx
0x00011cf3      e8f8f6ffff     call sym.build_wcs_buffer
0x00011cf8      4883c408       add rsp, 8
0x00011cfc      89e8           mov eax, ebp
0x00011cfe      5b             pop rbx
0x00011cff      5d             pop rbp
0x00011d00      c3             ret                                     ; ../coreutils-8.31/lib/regexec.c:929
0x00011d01      0f1f80000000.  nop dword [rax]
0x00011d08      bd0c000000     mov ebp, 0xc
0x00011d0d      4883c408       add rsp, 8
0x00011d11      89e8           mov eax, ebp                            ; ../coreutils-8.31/lib/regexec.c:935
0x00011d13      5b             pop rbx
0x00011d14      5d             pop rbp
0x00011d15      c3             ret                                     ; ../coreutils-8.31/lib/regexec.c:939
0x00011d16      662e0f1f8400.  nop word cs:[rax + rax]
0x00011d20      e85bf6ffff     call sym.build_upper_buffer
0x00011d25      4883c408       add rsp, 8
0x00011d29      89e8           mov eax, ebp
0x00011d2b      5b             pop rbx
0x00011d2c      5d             pop rbp
0x00011d2d      c3             ret
0x00011d2e      6690           nop
;-- clean_state_log_if_needed:
0x00011d30      4154           push r12
0x00011d32      55             push rbp
0x00011d33      4889f5         mov rbp, rsi
0x00011d36      53             push rbx
0x00011d37      488b4740       mov rax, qword [rdi + 0x40]
0x00011d3b      4889fb         mov rbx, rdi
0x00011d3e      4c8ba7c00000.  mov r12, qword [rdi + 0xc0]
0x00011d45      4839f0         cmp rax, rsi
0x00011d48      7f26           jg 0x11d70
0x00011d4a      483b4758       cmp rax, qword [rdi + 0x58]
0x00011d4e      7d20           jge 0x11d70
0x00011d50      8d7501         lea esi, [rbp + 1]                      ; string_fortified.h:-698
0x00011d53      4889df         mov rdi, rbx
0x00011d56      e885feffff     call sym.extend_buffers
0x00011d5b      85c0           test eax, eax
0x00011d5d      7507           jne 0x11d66
0x00011d5f      4939ec         cmp r12, rbp
0x00011d62      7c2c           jl 0x11d90
0x00011d64      31c0           xor eax, eax
0x00011d66      5b             pop rbx
0x00011d67      5d             pop rbp
0x00011d68      415c           pop r12
0x00011d6a      c3             ret
0x00011d6b      0f1f440000     nop dword [rax + rax]
0x00011d70      488b4330       mov rax, qword [rbx + 0x30]
0x00011d74      4839e8         cmp rax, rbp
0x00011d77      7fe6           jg 0x11d5f                              ; ../coreutils-8.31/lib/regcomp.c:3021
0x00011d79      483b4358       cmp rax, qword [rbx + 0x58]
0x00011d7d      7de0           jge 0x11d5f
0x00011d7f      8d7501         lea esi, [rbp + 1]
0x00011d82      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/regcomp.c:3027
0x00011d85      e856feffff     call sym.extend_buffers
0x00011d8a      85c0           test eax, eax
0x00011d8c      74d1           je 0x11d5f
0x00011d8e      ebd6           jmp 0x11d66
0x00011d90      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x00011d97      4889ea         mov rdx, rbp
0x00011d9a      31f6           xor esi, esi
0x00011d9c      4c29e2         sub rdx, r12
0x00011d9f      48c1e203       shl rdx, 3
0x00011da3      4a8d7ce008     lea rdi, [rax + r12*8 + 8]
0x00011da8      e87308ffff     call sym.imp.memset
0x00011dad      4889abc00000.  mov qword [rbx + 0xc0], rbp
0x00011db4      ebae           jmp 0x11d64
0x00011db6      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_charset:
0x00011dc0      53             push rbx
0x00011dc1      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/regcomp.c:2974
0x00011dc4      488b3f         mov rdi, qword [rdi]
0x00011dc7      e8440cffff     call sym..plt.got
0x00011dcc      488b7b08       mov rdi, qword [rbx + 8]
0x00011dd0      e83b0cffff     call sym..plt.got
0x00011dd5      488b7b10       mov rdi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/regcomp.c:2986
0x00011dd9      e8320cffff     call sym..plt.got                       ; ../coreutils-8.31/lib/regcomp.c:2987
0x00011dde      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/regcomp.c:2989
0x00011de2      e8290cffff     call sym..plt.got
0x00011de7      4889df         mov rdi, rbx
0x00011dea      5b             pop rbx
0x00011deb      e9200cffff     jmp sym..plt.got
;-- free_token:
0x00011df0      8b4708         mov eax, dword [rdi + 8]
0x00011df3      25ff000400     and eax, 0x400ff
0x00011df8      83f806         cmp eax, 6
0x00011dfb      7413           je 0x11e10
0x00011dfd      83f803         cmp eax, 3
0x00011e00      7406           je 0x11e08
0x00011e02      f3c3           ret
0x00011e04      0f1f4000       nop dword [rax]
0x00011e08      488b3f         mov rdi, qword [rdi]
0x00011e0b      e9000cffff     jmp sym..plt.got
0x00011e10      488b3f         mov rdi, qword [rdi]
0x00011e13      ebab           jmp sym.free_charset
0x00011e15      90             nop
0x00011e16      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_tree:
0x00011e20      488d7e28       lea rdi, [rsi + 0x28]
0x00011e24      4883ec08       sub rsp, 8
0x00011e28      e8c3ffffff     call sym.free_token
0x00011e2d      31c0           xor eax, eax
0x00011e2f      4883c408       add rsp, 8
0x00011e33      c3             ret
0x00011e34      6690           nop                                     ; ../coreutils-8.31/lib/regex_internal.c:551
0x00011e36      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_dfa_add_node:
0x00011e40      4157           push r15
0x00011e42      4156           push r14
0x00011e44      4989f6         mov r14, rsi
0x00011e47      4155           push r13                                ; ../coreutils-8.31/lib/regex_internal.c:554
0x00011e49      4154           push r12
0x00011e4b      55             push rbp
0x00011e4c      53             push rbx
0x00011e4d      4889fb         mov rbx, rdi
0x00011e50      4883ec18       sub rsp, 0x18
0x00011e54      488b7710       mov rsi, qword [rdi + 0x10]
0x00011e58      488b6f08       mov rbp, qword [rdi + 8]
0x00011e5c      4839ee         cmp rsi, rbp
0x00011e5f      0f83ab000000   jae 0x11f10
0x00011e65      4c8b6718       mov r12, qword [rdi + 0x18]
0x00011e69      488b6f28       mov rbp, qword [rdi + 0x28]
0x00011e6d      4889f0         mov rax, rsi
0x00011e70      89d1           mov ecx, edx
0x00011e72      48c1e004       shl rax, 4
0x00011e76      480303         add rax, qword [rbx]
0x00011e79      81e1ff00fcff   and ecx, 0xfffc00ff
0x00011e7f      48895008       mov qword [rax + 8], rdx
0x00011e83      894808         mov dword [rax + 8], ecx
0x00011e86      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/regex_internal.c:559
0x00011e88      80fa06         cmp dl, 6
0x00011e8b      4c8930         mov qword [rax], r14
0x00011e8e      0f94c1         sete cl
0x00011e91      80fa05         cmp dl, 5
0x00011e94      750c           jne 0x11ea2
0x00011e96      31c9           xor ecx, ecx                            ; string_fortified.h:-828
0x00011e98      83bbb4000000.  cmp dword [rbx + 0xb4], 1
0x00011e9f      0f9fc1         setg cl
0x00011ea2      0fb6500a       movzx edx, byte [rax + 0xa]
0x00011ea6      c1e104         shl ecx, 4
0x00011ea9      660fefc0       pxor xmm0, xmm0
0x00011ead      83e2ef         and edx, 0xffffffef                     ; ../coreutils-8.31/lib/regex_internal.c:561 ; 4294967279
0x00011eb0      09ca           or edx, ecx
0x00011eb2      88500a         mov byte [rax + 0xa], dl
0x00011eb5      49c704f4ffff.  mov qword [r12 + rsi*8], 0xffffffffffffffff
0x00011ebd      488b4310       mov rax, qword [rbx + 0x10]
0x00011ec1      488d0440       lea rax, [rax + rax*2]                  ; ../coreutils-8.31/lib/regex_internal.c:514
0x00011ec5      488d44c500     lea rax, [rbp + rax*8]
0x00011eca      0f1100         movups xmmword [rax], xmm0
0x00011ecd      48c740100000.  mov qword [rax + 0x10], 0
0x00011ed5      488b4310       mov rax, qword [rbx + 0x10]
0x00011ed9      488d1440       lea rdx, [rax + rax*2]                  ; ../coreutils-8.31/lib/regex_internal.c:527
0x00011edd      488b4330       mov rax, qword [rbx + 0x30]
0x00011ee1      488d04d0       lea rax, [rax + rdx*8]
0x00011ee5      0f1100         movups xmmword [rax], xmm0
0x00011ee8      48c740100000.  mov qword [rax + 0x10], 0
0x00011ef0      488b4310       mov rax, qword [rbx + 0x10]
0x00011ef4      488d5001       lea rdx, [rax + 1]
0x00011ef8      48895310       mov qword [rbx + 0x10], rdx
0x00011efc      4883c418       add rsp, 0x18
0x00011f00      5b             pop rbx                                 ; ../coreutils-8.31/lib/regex_internal.c:531
0x00011f01      5d             pop rbp
0x00011f02      415c           pop r12
0x00011f04      415d           pop r13
0x00011f06      415e           pop r14
0x00011f08      415f           pop r15
0x00011f0a      c3             ret
0x00011f0b      0f1f440000     nop dword [rax + rax]
0x00011f10      4c8d6c2d00     lea r13, [rbp + rbp]
0x00011f15      48b8aaaaaaaa.  movabs rax, 0xaaaaaaaaaaaaaaa
0x00011f1f      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/regex_internal.c:532
0x00011f22      0f87da000000   ja 0x12002
0x00011f28      488b3f         mov rdi, qword [rdi]
0x00011f2b      4889ee         mov rsi, rbp
0x00011f2e      4889542408     mov qword [rsp + 8], rdx
0x00011f33      48c1e605       shl rsi, 5
0x00011f37      e8f408ffff     call sym.imp.realloc
0x00011f3c      4885c0         test rax, rax
0x00011f3f      0f84bd000000   je 0x12002
0x00011f45      4989ef         mov r15, rbp
0x00011f48      488b7b18       mov rdi, qword [rbx + 0x18]
0x00011f4c      488903         mov qword [rbx], rax
0x00011f4f      49c1e704       shl r15, 4
0x00011f53      4c89fe         mov rsi, r15
0x00011f56      e8d508ffff     call sym.imp.realloc
0x00011f5b      488b7b20       mov rdi, qword [rbx + 0x20]
0x00011f5f      4c89fe         mov rsi, r15
0x00011f62      4d8d7cad00     lea r15, [r13 + rbp*4]
0x00011f67      4989c4         mov r12, rax
0x00011f6a      49c1e703       shl r15, 3
0x00011f6e      e8bd08ffff     call sym.imp.realloc
0x00011f73      488b7b28       mov rdi, qword [rbx + 0x28]
0x00011f77      4c89fe         mov rsi, r15
0x00011f7a      48890424       mov qword [rsp], rax
0x00011f7e      e8ad08ffff     call sym.imp.realloc
0x00011f83      488b7b30       mov rdi, qword [rbx + 0x30]
0x00011f87      4c89fe         mov rsi, r15
0x00011f8a      4889c5         mov rbp, rax
0x00011f8d      e89e08ffff     call sym.imp.realloc
0x00011f92      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/regex_internal.c:539
0x00011f95      488b0c24       mov rcx, qword [rsp]
0x00011f99      7435           je 0x11fd0
0x00011f9b      4885c9         test rcx, rcx
0x00011f9e      7430           je 0x11fd0                              ; ../coreutils-8.31/lib/regex_internal.c:540
0x00011fa0      4885ed         test rbp, rbp
0x00011fa3      742b           je 0x11fd0
0x00011fa5      4885c0         test rax, rax
0x00011fa8      488b542408     mov rdx, qword [rsp + 8]
0x00011fad      7421           je 0x11fd0
0x00011faf      4c896318       mov qword [rbx + 0x18], r12
0x00011fb3      48894b20       mov qword [rbx + 0x20], rcx             ; ../coreutils-8.31/lib/regex_internal.c:542
0x00011fb7      48896b28       mov qword [rbx + 0x28], rbp
0x00011fbb      48894330       mov qword [rbx + 0x30], rax
0x00011fbf      4c896b08       mov qword [rbx + 8], r13
0x00011fc3      488b7310       mov rsi, qword [rbx + 0x10]
0x00011fc7      e9a1feffff     jmp 0x11e6d
0x00011fcc      0f1f4000       nop dword [rax]
0x00011fd0      4c89e7         mov rdi, r12
0x00011fd3      4889442408     mov qword [rsp + 8], rax
0x00011fd8      48890c24       mov qword [rsp], rcx
0x00011fdc      e82f0affff     call sym..plt.got
0x00011fe1      488b0c24       mov rcx, qword [rsp]
0x00011fe5      4889cf         mov rdi, rcx
0x00011fe8      e8230affff     call sym..plt.got
0x00011fed      4889ef         mov rdi, rbp
0x00011ff0      e81b0affff     call sym..plt.got
0x00011ff5      488b442408     mov rax, qword [rsp + 8]
0x00011ffa      4889c7         mov rdi, rax
0x00011ffd      e80e0affff     call sym..plt.got
0x00012002      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00012009      e9eefeffff     jmp 0x11efc
0x0001200e      6690           nop
;-- duplicate_node:
0x00012010      4155           push r13
0x00012012      4154           push r12
0x00012014      4989f5         mov r13, rsi
0x00012017      55             push rbp
0x00012018      53             push rbx
0x00012019      49c1e504       shl r13, 4
0x0001201d      4889f5         mov rbp, rsi
0x00012020      4189d4         mov r12d, edx
0x00012023      4889fb         mov rbx, rdi
0x00012026      4883ec08       sub rsp, 8
0x0001202a      488b07         mov rax, qword [rdi]
0x0001202d      4a8b3428       mov rsi, qword [rax + r13]
0x00012031      4a8b542808     mov rdx, qword [rax + r13 + 8]
0x00012036      e805feffff     call sym.re_dfa_add_node
0x0001203b      4883f8ff       cmp rax, 0xffffffffffffffff
0x0001203f      7463           je 0x120a4
0x00012041      4489e7         mov edi, r12d
0x00012044      4c8b03         mov r8, qword [rbx]
0x00012047      4889c6         mov rsi, rax
0x0001204a      6681e7ff03     and di, 0x3ff
0x0001204f      48c1e604       shl rsi, 4
0x00012053      89f9           mov ecx, edi
0x00012055      81e1ff030000   and ecx, 0x3ff                          ; ../coreutils-8.31/lib/regcomp.c:726
0x0001205b      4c01c6         add rsi, r8
0x0001205e      c1e108         shl ecx, 8
0x00012061      89ca           mov edx, ecx                            ; ../coreutils-8.31/lib/regcomp.c:590
0x00012063      8b4e08         mov ecx, dword [rsi + 8]
0x00012066      81e1ff00fcff   and ecx, 0xfffc00ff
0x0001206c      09d1           or ecx, edx
0x0001206e      894e08         mov dword [rsi + 8], ecx
0x00012071      438b542808     mov edx, dword [r8 + r13 + 8]
0x00012076      81e1ff00fcff   and ecx, 0xfffc00ff
0x0001207c      c1ea08         shr edx, 8
0x0001207f      09fa           or edx, edi
0x00012081      81e2ff030000   and edx, 0x3ff
0x00012087      c1e208         shl edx, 8
0x0001208a      09ca           or edx, ecx
0x0001208c      89d1           mov ecx, edx
0x0001208e      895608         mov dword [rsi + 8], edx
0x00012091      c1e910         shr ecx, 0x10
0x00012094      89ca           mov edx, ecx
0x00012096      83ca04         or edx, 4
0x00012099      88560a         mov byte [rsi + 0xa], dl
0x0001209c      488b5320       mov rdx, qword [rbx + 0x20]
0x000120a0      48892cc2       mov qword [rdx + rax*8], rbp
0x000120a4      4883c408       add rsp, 8
0x000120a8      5b             pop rbx
0x000120a9      5d             pop rbp
0x000120aa      415c           pop r12
0x000120ac      415d           pop r13
0x000120ae      c3             ret
0x000120af      90             nop
;-- duplicate_node_closure:
0x000120b0      4157           push r15
0x000120b2      4156           push r14
0x000120b4      4989f1         mov r9, rsi
0x000120b7      4155           push r13
0x000120b9      4154           push r12
0x000120bb      4989fe         mov r14, rdi
0x000120be      55             push rbp
0x000120bf      53             push rbx
0x000120c0      4989d5         mov r13, rdx
0x000120c3      4489c5         mov ebp, r8d
0x000120c6      4883ec18       sub rsp, 0x18
0x000120ca      48894c2408     mov qword [rsp + 8], rcx
0x000120cf      4d8b06         mov r8, qword [r14]
0x000120d2      4c89c8         mov rax, r9
0x000120d5      498b7e28       mov rdi, qword [r14 + 0x28]
0x000120d9      48c1e004       shl rax, 4
0x000120dd      4d89ec         mov r12, r13
0x000120e0      4c01c0         add rax, r8
0x000120e3      80780804       cmp byte [rax + 8], 4
0x000120e7      0f84b3010000   je 0x122a0
0x000120ed      4f8d2449       lea r12, [r9 + r9*2]
0x000120f1      49c1e403       shl r12, 3
0x000120f5      4a8d3427       lea rsi, [rdi + r12]
0x000120f9      488b4e08       mov rcx, qword [rsi + 8]
0x000120fd      4885c9         test rcx, rcx
0x00012100      0f84f3010000   je 0x122f9
0x00012106      4b8d5c6d00     lea rbx, [r13 + r13*2]
0x0001210b      488b7610       mov rsi, qword [rsi + 0x10]
0x0001210f      48c1e303       shl rbx, 3
0x00012113      4801df         add rdi, rbx
0x00012116      4883f901       cmp rcx, 1
0x0001211a      4c8b3e         mov r15, qword [rsi]
0x0001211d      48c747080000.  mov qword [rdi + 8], 0
0x00012125      0f8415010000   je 0x12240
0x0001212b      498b5610       mov rdx, qword [r14 + 0x10]
0x0001212f      488d72ff       lea rsi, [rdx - 1]
0x00012133      4889f0         mov rax, rsi
0x00012136      48c1e004       shl rax, 4
0x0001213a      4c01c0         add rax, r8
0x0001213d      f6400a04       test byte [rax + 0xa], 4
0x00012141      0f84a9000000   je 0x121f0
0x00012147      4885f6         test rsi, rsi
0x0001214a      0f8ea0000000   jle 0x121f0
0x00012150      48c1e204       shl rdx, 4
0x00012154      4929c0         sub r8, rax
0x00012157      498b4e20       mov rcx, qword [r14 + 0x20]
0x0001215b      4d8d4410e0     lea r8, [r8 + rdx - 0x20]
0x00012160      eb18           jmp 0x1217a
0x00012162      660f1f440000   nop word [rax + rax]
0x00012168      4c01c0         add rax, r8
0x0001216b      4883ee01       sub rsi, 1
0x0001216f      f6400a04       test byte [rax + 0xa], 4
0x00012173      747b           je 0x121f0
0x00012175      4885f6         test rsi, rsi
0x00012178      7e76           jle 0x121f0
0x0001217a      4c393cf1       cmp qword [rcx + rsi*8], r15
0x0001217e      75e8           jne 0x12168
0x00012180      8b5008         mov edx, dword [rax + 8]
0x00012183      c1ea08         shr edx, 8
0x00012186      81e2ff030000   and edx, 0x3ff
0x0001218c      39d5           cmp ebp, edx
0x0001218e      75d8           jne 0x12168
0x00012190      e8cbefffff     call sym.re_node_set_insert
0x00012195      84c0           test al, al
0x00012197      7442           je 0x121db
0x00012199      498b4628       mov rax, qword [r14 + 0x28]
0x0001219d      89ea           mov edx, ebp
0x0001219f      4c89f7         mov rdi, r14
0x000121a2      4a8b442010     mov rax, qword [rax + r12 + 0x10]
0x000121a7      4c8b4808       mov r9, qword [rax + 8]
0x000121ab      4c89ce         mov rsi, r9
0x000121ae      4c890c24       mov qword [rsp], r9
0x000121b2      e859feffff     call sym.duplicate_node
0x000121b7      4883f8ff       cmp rax, 0xffffffffffffffff
0x000121bb      4989c5         mov r13, rax
0x000121be      741b           je 0x121db
0x000121c0      49035e28       add rbx, qword [r14 + 0x28]
0x000121c4      4c89ee         mov rsi, r13
0x000121c7      4889df         mov rdi, rbx
0x000121ca      e891efffff     call sym.re_node_set_insert
0x000121cf      84c0           test al, al
0x000121d1      4c8b0c24       mov r9, qword [rsp]
0x000121d5      0f85f4feffff   jne 0x120cf
0x000121db      b80c000000     mov eax, 0xc
0x000121e0      4883c418       add rsp, 0x18
0x000121e4      5b             pop rbx
0x000121e5      5d             pop rbp
0x000121e6      415c           pop r12
0x000121e8      415d           pop r13
0x000121ea      415e           pop r14
0x000121ec      415f           pop r15
0x000121ee      c3             ret
0x000121ef      90             nop
0x000121f0      89ea           mov edx, ebp
0x000121f2      4c89fe         mov rsi, r15
0x000121f5      4c89f7         mov rdi, r14
0x000121f8      e813feffff     call sym.duplicate_node
0x000121fd      4883f8ff       cmp rax, 0xffffffffffffffff
0x00012201      4989c5         mov r13, rax
0x00012204      74d5           je 0x121db
0x00012206      498b7e28       mov rdi, qword [r14 + 0x28]
0x0001220a      4c89ee         mov rsi, r13
0x0001220d      4801df         add rdi, rbx
0x00012210      e84befffff     call sym.re_node_set_insert
0x00012215      84c0           test al, al
0x00012217      74c2           je 0x121db
0x00012219      488b4c2408     mov rcx, qword [rsp + 8]
0x0001221e      4189e8         mov r8d, ebp
0x00012221      4c89ea         mov rdx, r13
0x00012224      4c89fe         mov rsi, r15
0x00012227      4c89f7         mov rdi, r14
0x0001222a      e881feffff     call sym.duplicate_node_closure
0x0001222f      85c0           test eax, eax
0x00012231      0f8462ffffff   je 0x12199
0x00012237      eba7           jmp 0x121e0
0x00012239      0f1f80000000.  nop dword [rax]
0x00012240      4c3b4c2408     cmp r9, qword [rsp + 8]
0x00012245      7509           jne 0x12250
0x00012247      4d39e9         cmp r9, r13
0x0001224a      0f85bc000000   jne 0x1230c
0x00012250      8b4008         mov eax, dword [rax + 8]
0x00012253      4c89fe         mov rsi, r15
0x00012256      4c89f7         mov rdi, r14
0x00012259      c1e808         shr eax, 8
0x0001225c      25ff030000     and eax, 0x3ff
0x00012261      09c5           or ebp, eax
0x00012263      89ea           mov edx, ebp
0x00012265      e8a6fdffff     call sym.duplicate_node
0x0001226a      4883f8ff       cmp rax, 0xffffffffffffffff
0x0001226e      4989c5         mov r13, rax
0x00012271      0f8464ffffff   je 0x121db
0x00012277      49035e28       add rbx, qword [r14 + 0x28]
0x0001227b      4889c6         mov rsi, rax
0x0001227e      4889df         mov rdi, rbx
0x00012281      e8daeeffff     call sym.re_node_set_insert
0x00012286      84c0           test al, al
0x00012288      0f844dffffff   je 0x121db
0x0001228e      4d89f9         mov r9, r15
0x00012291      e939feffff     jmp 0x120cf
0x00012296      662e0f1f8400.  nop word cs:[rax + rax]
0x000122a0      498b4618       mov rax, qword [r14 + 0x18]
0x000122a4      4b8d5c6d00     lea rbx, [r13 + r13*2]
0x000122a9      4e8d3ccd0000.  lea r15, [r9*8]
0x000122b1      89ea           mov edx, ebp
0x000122b3      48c1e303       shl rbx, 3
0x000122b7      4e8b0cc8       mov r9, qword [rax + r9*8]
0x000122bb      48c7441f0800.  mov qword [rdi + rbx + 8], 0
0x000122c4      4c89f7         mov rdi, r14
0x000122c7      4c89ce         mov rsi, r9
0x000122ca      4c890c24       mov qword [rsp], r9
0x000122ce      e83dfdffff     call sym.duplicate_node
0x000122d3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000122d7      4989c5         mov r13, rax
0x000122da      4c8b0c24       mov r9, qword [rsp]
0x000122de      0f84f7feffff   je 0x121db
0x000122e4      498b4618       mov rax, qword [r14 + 0x18]
0x000122e8      4c890c24       mov qword [rsp], r9
0x000122ec      4a8b0c38       mov rcx, qword [rax + r15]
0x000122f0      4a890ce0       mov qword [rax + r12*8], rcx
0x000122f4      e9c7feffff     jmp 0x121c0
0x000122f9      498b4618       mov rax, qword [r14 + 0x18]
0x000122fd      4a8b0cc8       mov rcx, qword [rax + r9*8]
0x00012301      4a890ce8       mov qword [rax + r13*8], rcx
0x00012305      31c0           xor eax, eax
0x00012307      e9d4feffff     jmp 0x121e0
0x0001230c      4c89fe         mov rsi, r15
0x0001230f      e84ceeffff     call sym.re_node_set_insert
0x00012314      89c2           mov edx, eax
0x00012316      31c0           xor eax, eax
0x00012318      84d2           test dl, dl
0x0001231a      0f85c0feffff   jne 0x121e0
0x00012320      e9b6feffff     jmp 0x121db
0x00012325      90             nop
0x00012326      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_state:
0x00012330      53             push rbx
0x00012331      4889fb         mov rbx, rdi
0x00012334      488b7f30       mov rdi, qword [rdi + 0x30]
0x00012338      e8d306ffff     call sym..plt.got
0x0001233d      488b7b48       mov rdi, qword [rbx + 0x48]
0x00012341      e8ca06ffff     call sym..plt.got
0x00012346      488b4350       mov rax, qword [rbx + 0x50]
0x0001234a      488d5308       lea rdx, [rbx + 8]
0x0001234e      4839d0         cmp rax, rdx
0x00012351      7412           je 0x12365
0x00012353      488b7810       mov rdi, qword [rax + 0x10]
0x00012357      e8b406ffff     call sym..plt.got
0x0001235c      488b7b50       mov rdi, qword [rbx + 0x50]
0x00012360      e8ab06ffff     call sym..plt.got
0x00012365      488b7b18       mov rdi, qword [rbx + 0x18]
0x00012369      e8a206ffff     call sym..plt.got
0x0001236e      488b7b60       mov rdi, qword [rbx + 0x60]
0x00012372      e89906ffff     call sym..plt.got
0x00012377      488b7b58       mov rdi, qword [rbx + 0x58]
0x0001237b      e89006ffff     call sym..plt.got
0x00012380      4889df         mov rdi, rbx
0x00012383      5b             pop rbx
0x00012384      e98706ffff     jmp sym..plt.got
0x00012389      0f1f80000000.  nop dword [rax]
;-- re_string_destruct:
0x00012390      53             push rbx
0x00012391      4889fb         mov rbx, rdi
0x00012394      488b7f10       mov rdi, qword [rdi + 0x10]
0x00012398      e87306ffff     call sym..plt.got
0x0001239d      488b7b18       mov rdi, qword [rbx + 0x18]
0x000123a1      e86a06ffff     call sym..plt.got
0x000123a6      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x000123ad      7509           jne 0x123b8
0x000123af      5b             pop rbx
0x000123b0      c3             ret
0x000123b1      0f1f80000000.  nop dword [rax]
0x000123b8      488b7b08       mov rdi, qword [rbx + 8]
0x000123bc      5b             pop rbx
0x000123bd      e94e06ffff     jmp sym..plt.got
0x000123c2      0f1f4000       nop dword [rax]
0x000123c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_dfa_content:
0x000123d0      4156           push r14
0x000123d2      4155           push r13
0x000123d4      4154           push r12
0x000123d6      4989fc         mov r12, rdi
0x000123d9      55             push rbp
0x000123da      53             push rbx
0x000123db      488b3f         mov rdi, qword [rdi]
0x000123de      4885ff         test rdi, rdi
0x000123e1      742b           je 0x1240e
0x000123e3      49837c241000   cmp qword [r12 + 0x10], 0
0x000123e9      7423           je 0x1240e
0x000123eb      31db           xor ebx, ebx
0x000123ed      eb05           jmp 0x123f4
0x000123ef      90             nop
0x000123f0      498b3c24       mov rdi, qword [r12]
0x000123f4      4889d8         mov rax, rbx
0x000123f7      4883c301       add rbx, 1
0x000123fb      48c1e004       shl rax, 4
0x000123ff      4801c7         add rdi, rax
0x00012402      e8e9f9ffff     call sym.free_token
0x00012407      49395c2410     cmp qword [r12 + 0x10], rbx
0x0001240c      77e2           ja 0x123f0
0x0001240e      498b7c2418     mov rdi, qword [r12 + 0x18]
0x00012413      e8f805ffff     call sym..plt.got
0x00012418      49837c241000   cmp qword [r12 + 0x10], 0
0x0001241e      7453           je 0x12473
0x00012420      31db           xor ebx, ebx
0x00012422      31ed           xor ebp, ebp
0x00012424      0f1f4000       nop dword [rax]
0x00012428      498b442430     mov rax, qword [r12 + 0x30]
0x0001242d      4885c0         test rax, rax
0x00012430      740a           je 0x1243c
0x00012432      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x00012437      e8d405ffff     call sym..plt.got
0x0001243c      498b442438     mov rax, qword [r12 + 0x38]
0x00012441      4885c0         test rax, rax
0x00012444      740a           je 0x12450
0x00012446      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0001244b      e8c005ffff     call sym..plt.got
0x00012450      498b442428     mov rax, qword [r12 + 0x28]
0x00012455      4885c0         test rax, rax
0x00012458      740a           je 0x12464
0x0001245a      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0001245f      e8ac05ffff     call sym..plt.got
0x00012464      4883c501       add rbp, 1
0x00012468      4883c318       add rbx, 0x18
0x0001246c      49396c2410     cmp qword [r12 + 0x10], rbp
0x00012471      77b5           ja 0x12428
0x00012473      498b7c2428     mov rdi, qword [r12 + 0x28]
0x00012478      e89305ffff     call sym..plt.got
0x0001247d      498b7c2430     mov rdi, qword [r12 + 0x30]
0x00012482      e88905ffff     call sym..plt.got
0x00012487      498b7c2438     mov rdi, qword [r12 + 0x38]
0x0001248c      e87f05ffff     call sym..plt.got
0x00012491      498b3c24       mov rdi, qword [r12]
0x00012495      e87605ffff     call sym..plt.got
0x0001249a      498b7c2440     mov rdi, qword [r12 + 0x40]
0x0001249f      4885ff         test rdi, rdi
0x000124a2      7453           je 0x124f7
0x000124a4      4531f6         xor r14d, r14d
0x000124a7      4531ed         xor r13d, r13d
0x000124aa      660f1f440000   nop word [rax + rax]
0x000124b0      4a8d2c37       lea rbp, [rdi + r14]
0x000124b4      48837d0000     cmp qword [rbp], 0
0x000124b9      7e1c           jle 0x124d7
0x000124bb      31db           xor ebx, ebx
0x000124bd      0f1f00         nop dword [rax]
0x000124c0      488b4510       mov rax, qword [rbp + 0x10]
0x000124c4      488b3cd8       mov rdi, qword [rax + rbx*8]
0x000124c8      4883c301       add rbx, 1
0x000124cc      e85ffeffff     call sym.free_state
0x000124d1      48395d00       cmp qword [rbp], rbx
0x000124d5      7fe9           jg 0x124c0
0x000124d7      488b7d10       mov rdi, qword [rbp + 0x10]
0x000124db      4983c501       add r13, 1
0x000124df      4983c618       add r14, 0x18
0x000124e3      e82805ffff     call sym..plt.got
0x000124e8      4d39ac248800.  cmp qword [r12 + 0x88], r13
0x000124f0      498b7c2440     mov rdi, qword [r12 + 0x40]
0x000124f5      73b9           jae 0x124b0
0x000124f7      e81405ffff     call sym..plt.got
0x000124fc      498b7c2478     mov rdi, qword [r12 + 0x78]
0x00012501      488d05b80801.  lea rax, obj.utf8_sb_map                ; 0x22dc0
0x00012508      4839c7         cmp rdi, rax
0x0001250b      7405           je 0x12512
0x0001250d      e8fe04ffff     call sym..plt.got
0x00012512      498bbc24e000.  mov rdi, qword [r12 + 0xe0]
0x0001251a      e8f104ffff     call sym..plt.got
0x0001251f      5b             pop rbx
0x00012520      4c89e7         mov rdi, r12
0x00012523      5d             pop rbp
0x00012524      415c           pop r12
0x00012526      415d           pop r13
0x00012528      415e           pop r14
0x0001252a      e9e104ffff     jmp sym..plt.got
0x0001252f      90             nop
;-- match_ctx_clean:
0x00012530      4156           push r14
0x00012532      4155           push r13
0x00012534      4989fe         mov r14, rdi
0x00012537      4154           push r12
0x00012539      55             push rbp
0x0001253a      53             push rbx
0x0001253b      4883bfe80000.  cmp qword [rdi + 0xe8], 0
0x00012543      0f8e80000000   jle 0x125c9
0x00012549      4531ed         xor r13d, r13d
0x0001254c      0f1f4000       nop dword [rax]
0x00012550      498b86f80000.  mov rax, qword [r14 + 0xf8]
0x00012557      4e8b24e8       mov r12, qword [rax + r13*8]
0x0001255b      49837c242000   cmp qword [r12 + 0x20], 0
0x00012561      7e2a           jle 0x1258d
0x00012563      31db           xor ebx, ebx
0x00012565      0f1f00         nop dword [rax]
0x00012568      498b442428     mov rax, qword [r12 + 0x28]
0x0001256d      488b2cd8       mov rbp, qword [rax + rbx*8]
0x00012571      4883c301       add rbx, 1
0x00012575      488b7d20       mov rdi, qword [rbp + 0x20]
0x00012579      e89204ffff     call sym..plt.got
0x0001257e      4889ef         mov rdi, rbp
0x00012581      e88a04ffff     call sym..plt.got
0x00012586      49395c2420     cmp qword [r12 + 0x20], rbx
0x0001258b      7fdb           jg 0x12568
0x0001258d      498b7c2428     mov rdi, qword [r12 + 0x28]
0x00012592      e87904ffff     call sym..plt.got
0x00012597      498b442410     mov rax, qword [r12 + 0x10]
0x0001259c      4885c0         test rax, rax
0x0001259f      7413           je 0x125b4
0x000125a1      488b7810       mov rdi, qword [rax + 0x10]
0x000125a5      e86604ffff     call sym..plt.got
0x000125aa      498b7c2410     mov rdi, qword [r12 + 0x10]
0x000125af      e85c04ffff     call sym..plt.got
0x000125b4      4c89e7         mov rdi, r12
0x000125b7      4983c501       add r13, 1
0x000125bb      e85004ffff     call sym..plt.got
0x000125c0      4d39aee80000.  cmp qword [r14 + 0xe8], r13
0x000125c7      7f87           jg 0x12550
0x000125c9      5b             pop rbx
0x000125ca      49c786e80000.  mov qword [r14 + 0xe8], 0
0x000125d5      49c786c80000.  mov qword [r14 + 0xc8], 0
0x000125e0      5d             pop rbp
0x000125e1      415c           pop r12
0x000125e3      415d           pop r13
0x000125e5      415e           pop r14
0x000125e7      c3             ret
0x000125e8      0f1f84000000.  nop dword [rax + rax]
;-- re_string_char_size_at.part.0:
0x000125f0      488b4f30       mov rcx, qword [rdi + 0x30]
0x000125f4      488d4601       lea rax, [rsi + 1]
0x000125f8      4839c8         cmp rax, rcx
0x000125fb      7d3b           jge 0x12638
0x000125fd      488b5710       mov rdx, qword [rdi + 0x10]
0x00012601      488d3c850000.  lea rdi, [rax*4]
0x00012609      833c82ff       cmp dword [rdx + rax*4], 0xffffffff
0x0001260d      7529           jne 0x12638
0x0001260f      4829f1         sub rcx, rsi
0x00012612      488d743afc     lea rsi, [rdx + rdi - 4]
0x00012617      ba02000000     mov edx, 2
0x0001261c      eb0d           jmp 0x1262b
0x0001261e      6690           nop
0x00012620      4883c201       add rdx, 1
0x00012624      837c96fcff     cmp dword [rsi + rdx*4 - 4], 0xffffffff
0x00012629      7512           jne 0x1263d
0x0001262b      4839ca         cmp rdx, rcx
0x0001262e      89d0           mov eax, edx
0x00012630      75ee           jne 0x12620
0x00012632      f3c3           ret
0x00012634      0f1f4000       nop dword [rax]
0x00012638      b801000000     mov eax, 1
0x0001263d      f3c3           ret
0x0001263f      90             nop
;-- re_node_set_compare.part.2:
0x00012640      488b5708       mov rdx, qword [rdi + 8]
0x00012644      31c0           xor eax, eax
0x00012646      483b5608       cmp rdx, qword [rsi + 8]
0x0001264a      7404           je 0x12650
0x0001264c      f3c3           ret
0x0001264e      6690           nop
0x00012650      488d42ff       lea rax, [rdx - 1]
0x00012654      488d14c50000.  lea rdx, [rax*8]
0x0001265c      eb1f           jmp 0x1267d
0x0001265e      6690           nop
0x00012660      488b4f10       mov rcx, qword [rdi + 0x10]
0x00012664      4c8b0411       mov r8, qword [rcx + rdx]
0x00012668      488b4e10       mov rcx, qword [rsi + 0x10]
0x0001266c      488b0c11       mov rcx, qword [rcx + rdx]
0x00012670      4883ea08       sub rdx, 8
0x00012674      4939c8         cmp r8, rcx
0x00012677      7517           jne 0x12690
0x00012679      4883e801       sub rax, 1
0x0001267d      4885c0         test rax, rax
0x00012680      79de           jns 0x12660
0x00012682      b801000000     mov eax, 1
0x00012687      c3             ret
0x00012688      0f1f84000000.  nop dword [rax + rax]
0x00012690      31c0           xor eax, eax
0x00012692      c3             ret
0x00012693      0f1f00         nop dword [rax]
0x00012696      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_contains.isra.3:
0x000126a0      31c0           xor eax, eax
0x000126a2      4885ff         test rdi, rdi
0x000126a5      7e3e           jle 0x126e5
0x000126a7      4c8b06         mov r8, qword [rsi]
0x000126aa      4883ef01       sub rdi, 1
0x000126ae      31f6           xor esi, esi
0x000126b0      4839fe         cmp rsi, rdi
0x000126b3      7328           jae 0x126dd
0x000126b5      488d0c3e       lea rcx, [rsi + rdi]
0x000126b9      48d1e9         shr rcx, 1
0x000126bc      493b14c8       cmp rdx, qword [r8 + rcx*8]
0x000126c0      7e16           jle 0x126d8
0x000126c2      eb2c           jmp 0x126f0
0x000126c4      0f1f4000       nop dword [rax]
0x000126c8      488d040e       lea rax, [rsi + rcx]
0x000126cc      48d1e8         shr rax, 1
0x000126cf      493914c0       cmp qword [r8 + rax*8], rdx
0x000126d3      7c2b           jl 0x12700
0x000126d5      4889c1         mov rcx, rax
0x000126d8      4839ce         cmp rsi, rcx
0x000126db      72eb           jb 0x126c8
0x000126dd      31c0           xor eax, eax
0x000126df      493b14f0       cmp rdx, qword [r8 + rsi*8]
0x000126e3      742b           je 0x12710
0x000126e5      f3c3           ret
0x000126e7      660f1f840000.  nop word [rax + rax]
0x000126f0      4889c8         mov rax, rcx
0x000126f3      4889f9         mov rcx, rdi
0x000126f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00012700      488d7001       lea rsi, [rax + 1]
0x00012704      4889cf         mov rdi, rcx
0x00012707      eba7           jmp 0x126b0
0x00012709      0f1f80000000.  nop dword [rax]
0x00012710      488d4601       lea rax, [rsi + 1]
0x00012714      c3             ret
0x00012715      90             nop
0x00012716      662e0f1f8400.  nop word cs:[rax + rax]
;-- check_arrival_expand_ecl_sub:
0x00012720      4157           push r15
0x00012722      4156           push r14
0x00012724      4c8d7610       lea r14, [rsi + 0x10]
0x00012728      4155           push r13
0x0001272a      4154           push r12
0x0001272c      4989cf         mov r15, rcx
0x0001272f      55             push rbp
0x00012730      53             push rbx
0x00012731      4989fc         mov r12, rdi
0x00012734      4889f5         mov rbp, rsi
0x00012737      4889d3         mov rbx, rdx
0x0001273a      4589c5         mov r13d, r8d
0x0001273d      4883ec08       sub rsp, 8
0x00012741      488b7d08       mov rdi, qword [rbp + 8]
0x00012745      4889da         mov rdx, rbx
0x00012748      4c89f6         mov rsi, r14
0x0001274b      e850ffffff     call sym.re_node_set_contains.isra.3
0x00012750      4885c0         test rax, rax
0x00012753      756b           jne 0x127c0
0x00012755      4889d8         mov rax, rbx
0x00012758      48c1e004       shl rax, 4
0x0001275c      49030424       add rax, qword [r12]
0x00012760      0fb65008       movzx edx, byte [rax + 8]
0x00012764      4439ea         cmp edx, r13d
0x00012767      7505           jne 0x1276e
0x00012769      4c3938         cmp qword [rax], r15
0x0001276c      743a           je 0x127a8
0x0001276e      4889de         mov rsi, rbx
0x00012771      4889ef         mov rdi, rbp
0x00012774      e8e7e9ffff     call sym.re_node_set_insert
0x00012779      84c0           test al, al
0x0001277b      745b           je 0x127d8
0x0001277d      488d1c5b       lea rbx, [rbx + rbx*2]
0x00012781      498b542428     mov rdx, qword [r12 + 0x28]
0x00012786      48c1e303       shl rbx, 3
0x0001278a      4801da         add rdx, rbx
0x0001278d      488b4208       mov rax, qword [rdx + 8]
0x00012791      4885c0         test rax, rax
0x00012794      742a           je 0x127c0
0x00012796      4883f802       cmp rax, 2
0x0001279a      488b5210       mov rdx, qword [rdx + 0x10]
0x0001279e      7450           je 0x127f0
0x000127a0      488b1a         mov rbx, qword [rdx]
0x000127a3      eb9c           jmp 0x12741
0x000127a5      0f1f00         nop dword [rax]
0x000127a8      4183fd09       cmp r13d, 9
0x000127ac      7512           jne 0x127c0
0x000127ae      4889de         mov rsi, rbx
0x000127b1      4889ef         mov rdi, rbp
0x000127b4      e8a7e9ffff     call sym.re_node_set_insert
0x000127b9      84c0           test al, al
0x000127bb      741b           je 0x127d8
0x000127bd      0f1f00         nop dword [rax]
0x000127c0      31c0           xor eax, eax
0x000127c2      4883c408       add rsp, 8
0x000127c6      5b             pop rbx
0x000127c7      5d             pop rbp
0x000127c8      415c           pop r12
0x000127ca      415d           pop r13
0x000127cc      415e           pop r14
0x000127ce      415f           pop r15
0x000127d0      c3             ret
0x000127d1      0f1f80000000.  nop dword [rax]
0x000127d8      4883c408       add rsp, 8
0x000127dc      b80c000000     mov eax, 0xc
0x000127e1      5b             pop rbx
0x000127e2      5d             pop rbp
0x000127e3      415c           pop r12
0x000127e5      415d           pop r13
0x000127e7      415e           pop r14
0x000127e9      415f           pop r15
0x000127eb      c3             ret
0x000127ec      0f1f4000       nop dword [rax]
0x000127f0      488b5208       mov rdx, qword [rdx + 8]
0x000127f4      4589e8         mov r8d, r13d
0x000127f7      4c89f9         mov rcx, r15
0x000127fa      4889ee         mov rsi, rbp
0x000127fd      4c89e7         mov rdi, r12
0x00012800      e81bffffff     call sym.check_arrival_expand_ecl_sub
0x00012805      85c0           test eax, eax
0x00012807      75b9           jne 0x127c2
0x00012809      498b442428     mov rax, qword [r12 + 0x28]
0x0001280e      488b541810     mov rdx, qword [rax + rbx + 0x10]
0x00012813      eb8b           jmp 0x127a0
0x00012815      90             nop
0x00012816      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_remove_at.isra.4.part.5:
0x00012820      488b07         mov rax, qword [rdi]
0x00012823      4839d0         cmp rax, rdx
0x00012826      7e2a           jle 0x12852
0x00012828      4883e801       sub rax, 1
0x0001282c      4839c2         cmp rdx, rax
0x0001282f      488907         mov qword [rdi], rax
0x00012832      7d1e           jge 0x12852
0x00012834      488b06         mov rax, qword [rsi]
0x00012837      660f1f840000.  nop word [rax + rax]
0x00012840      488b4cd008     mov rcx, qword [rax + rdx*8 + 8]
0x00012845      48890cd0       mov qword [rax + rdx*8], rcx
0x00012849      4883c201       add rdx, 1
0x0001284d      483b17         cmp rdx, qword [rdi]
0x00012850      7cee           jl 0x12840
0x00012852      f3c3           ret
0x00012854      6690           nop
0x00012856      662e0f1f8400.  nop word cs:[rax + rax]
;-- optimize_subexps:
0x00012860      0fb64630       movzx eax, byte [rsi + 0x30]
0x00012864      3c04           cmp al, 4
0x00012866      7458           je 0x128c0
0x00012868      3c11           cmp al, 0x11
0x0001286a      7404           je 0x12870
0x0001286c      31c0           xor eax, eax
0x0001286e      c3             ret
0x0001286f      90             nop
0x00012870      488b4608       mov rax, qword [rsi + 8]
0x00012874      4885c0         test rax, rax
0x00012877      74f3           je 0x1286c
0x00012879      80783011       cmp byte [rax + 0x30], 0x11
0x0001287d      75ed           jne 0x1286c
0x0001287f      488b4828       mov rcx, qword [rax + 0x28]
0x00012883      488b4008       mov rax, qword [rax + 8]
0x00012887      4885c0         test rax, rax
0x0001288a      48894608       mov qword [rsi + 8], rax
0x0001288e      7403           je 0x12893
0x00012890      488930         mov qword [rax], rsi
0x00012893      488b87e00000.  mov rax, qword [rdi + 0xe0]
0x0001289a      488b5628       mov rdx, qword [rsi + 0x28]
0x0001289e      4883f93f       cmp rcx, 0x3f
0x000128a2      488b14d0       mov rdx, qword [rax + rdx*8]
0x000128a6      488914c8       mov qword [rax + rcx*8], rdx
0x000128aa      7fc0           jg 0x1286c
0x000128ac      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x000128b3      48d3c0         rol rax, cl
0x000128b6      482187a00000.  and qword [rdi + 0xa0], rax
0x000128bd      ebad           jmp 0x1286c
0x000128bf      90             nop
0x000128c0      488b87e00000.  mov rax, qword [rdi + 0xe0]
0x000128c7      4885c0         test rax, rax
0x000128ca      74a0           je 0x1286c
0x000128cc      48635628       movsxd rdx, dword [rsi + 0x28]
0x000128d0      488b0cd0       mov rcx, qword [rax + rdx*8]
0x000128d4      b801000000     mov eax, 1
0x000128d9      d3e0           shl eax, cl
0x000128db      48894e28       mov qword [rsi + 0x28], rcx
0x000128df      4898           cdqe
0x000128e1      480987a00000.  or qword [rdi + 0xa0], rax
0x000128e8      31c0           xor eax, eax
0x000128ea      c3             ret
0x000128eb      0f1f440000     nop dword [rax + rax]
;-- calc_next:
0x000128f0      0fb64630       movzx eax, byte [rsi + 0x30]
0x000128f4      488b5608       mov rdx, qword [rsi + 8]
0x000128f8      3c0b           cmp al, 0xb
0x000128fa      7444           je 0x12940
0x000128fc      3c10           cmp al, 0x10
0x000128fe      7428           je 0x12928
0x00012900      4885d2         test rdx, rdx
0x00012903      7408           je 0x1290d
0x00012905      488b4620       mov rax, qword [rsi + 0x20]
0x00012909      48894220       mov qword [rdx + 0x20], rax
0x0001290d      488b4610       mov rax, qword [rsi + 0x10]
0x00012911      4885c0         test rax, rax
0x00012914      7408           je 0x1291e
0x00012916      488b5620       mov rdx, qword [rsi + 0x20]
0x0001291a      48895020       mov qword [rax + 0x20], rdx
0x0001291e      31c0           xor eax, eax
0x00012920      c3             ret
0x00012921      0f1f80000000.  nop dword [rax]
0x00012928      488b4610       mov rax, qword [rsi + 0x10]
0x0001292c      488b4818       mov rcx, qword [rax + 0x18]
0x00012930      48894a20       mov qword [rdx + 0x20], rcx
0x00012934      488b5620       mov rdx, qword [rsi + 0x20]
0x00012938      48895020       mov qword [rax + 0x20], rdx
0x0001293c      31c0           xor eax, eax
0x0001293e      c3             ret
0x0001293f      90             nop
0x00012940      48897220       mov qword [rdx + 0x20], rsi
0x00012944      31c0           xor eax, eax
0x00012946      c3             ret
0x00012947      660f1f840000.  nop word [rax + rax]
;-- check_dst_limits.isra.13:
0x00012950      4157           push r15
0x00012952      4156           push r14
0x00012954      4155           push r13
0x00012956      4154           push r12
0x00012958      55             push rbp
0x00012959      53             push rbx
0x0001295a      31db           xor ebx, ebx
0x0001295c      4883ec48       sub rsp, 0x48
0x00012960      488b87980000.  mov rax, qword [rdi + 0x98]
0x00012967      4c8bbfc80000.  mov r15, qword [rdi + 0xc8]
0x0001296e      4c8ba4248000.  mov r12, qword [rsp + 0x80]
0x00012976      4889442408     mov qword [rsp + 8], rax
0x0001297b      4c89fd         mov rbp, r15
0x0001297e      4839eb         cmp rbx, rbp
0x00012981      7d58           jge 0x129db
0x00012983      488d042b       lea rax, [rbx + rbp]
0x00012987      4c8bafd80000.  mov r13, qword [rdi + 0xd8]
0x0001298e      4989c2         mov r10, rax
0x00012991      49c1ea3f       shr r10, 0x3f
0x00012995      4901c2         add r10, rax
0x00012998      49d1fa         sar r10, 1
0x0001299b      4b8d0492       lea rax, [r10 + r10*4]
0x0001299f      4d3b44c508     cmp r8, qword [r13 + rax*8 + 8]
0x000129a4      7e30           jle 0x129d6
0x000129a6      e995010000     jmp 0x12b40
0x000129ab      0f1f440000     nop dword [rax + rax]
0x000129b0      4e8d1c13       lea r11, [rbx + r10]
0x000129b4      4c89d8         mov rax, r11
0x000129b7      48c1e83f       shr rax, 0x3f
0x000129bb      4c01d8         add rax, r11
0x000129be      48d1f8         sar rax, 1
0x000129c1      4c8d1c80       lea r11, [rax + rax*4]
0x000129c5      4989c6         mov r14, rax
0x000129c8      4f3944dd08     cmp qword [r13 + r11*8 + 8], r8
0x000129cd      0f8c7d010000   jl 0x12b50
0x000129d3      4989c2         mov r10, rax
0x000129d6      4c39d3         cmp rbx, r10
0x000129d9      7cd5           jl 0x129b0
0x000129db      4939df         cmp r15, rbx
0x000129de      0f8e9c010000   jle 0x12b80
0x000129e4      4c8b9fd80000.  mov r11, qword [rdi + 0xd8]
0x000129eb      488d049b       lea rax, [rbx + rbx*4]
0x000129ef      498d04c3       lea rax, [r11 + rax*8]
0x000129f3      4c3b4008       cmp r8, qword [rax + 8]
0x000129f7      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x000129fe      480f45d8       cmovne rbx, rax
0x00012a02      4c89f8         mov rax, r15
0x00012a05      31ed           xor ebp, ebp
0x00012a07      4839c5         cmp rbp, rax
0x00012a0a      7d58           jge 0x12a64
0x00012a0c      4c8d5c0500     lea r11, [rbp + rax]
0x00012a11      4d89da         mov r10, r11
0x00012a14      49c1ea3f       shr r10, 0x3f
0x00012a18      4d01da         add r10, r11
0x00012a1b      4c8b9fd80000.  mov r11, qword [rdi + 0xd8]
0x00012a22      49d1fa         sar r10, 1
0x00012a25      4f8d2c92       lea r13, [r10 + r10*4]
0x00012a29      4f3b64eb08     cmp r12, qword [r11 + r13*8 + 8]
0x00012a2e      7e2f           jle 0x12a5f
0x00012a30      e92b010000     jmp 0x12b60
0x00012a35      0f1f00         nop dword [rax]
0x00012a38      4e8d6c1500     lea r13, [rbp + r10]
0x00012a3d      4c89e8         mov rax, r13
0x00012a40      48c1e83f       shr rax, 0x3f
0x00012a44      4c01e8         add rax, r13
0x00012a47      48d1f8         sar rax, 1
0x00012a4a      4c8d2c80       lea r13, [rax + rax*4]
0x00012a4e      4989c6         mov r14, rax
0x00012a51      4f3964eb08     cmp qword [r11 + r13*8 + 8], r12
0x00012a56      0f8c14010000   jl 0x12b70
0x00012a5c      4989c2         mov r10, rax
0x00012a5f      4c39d5         cmp rbp, r10
0x00012a62      7cd4           jl 0x12a38
0x00012a64      4939ef         cmp r15, rbp
0x00012a67      0f8e23010000   jle 0x12b90
0x00012a6d      4c8b97d80000.  mov r10, qword [rdi + 0xd8]
0x00012a74      488d44ad00     lea rax, [rbp + rbp*4]
0x00012a79      498d04c2       lea rax, [r10 + rax*8]
0x00012a7d      4c3b6008       cmp r12, qword [rax + 8]
0x00012a81      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00012a88      480f45e8       cmovne rbp, rax
0x00012a8c      48833e00       cmp qword [rsi], 0
0x00012a90      0f8e1c010000   jle 0x12bb2
0x00012a96      48896c2430     mov qword [rsp + 0x30], rbp
0x00012a9b      4c894c2420     mov qword [rsp + 0x20], r9
0x00012aa0      4989fd         mov r13, rdi
0x00012aa3      4c89442418     mov qword [rsp + 0x18], r8
0x00012aa8      48894c2410     mov qword [rsp + 0x10], rcx
0x00012aad      4531f6         xor r14d, r14d
0x00012ab0      4889742438     mov qword [rsp + 0x38], rsi
0x00012ab5      48895c2428     mov qword [rsp + 0x28], rbx
0x00012aba      4889d5         mov rbp, rdx
0x00012abd      4d89e7         mov r15, r12
0x00012ac0      488b4500       mov rax, qword [rbp]
0x00012ac4      498b95d80000.  mov rdx, qword [r13 + 0xd8]
0x00012acb      4c89ef         mov rdi, r13
0x00012ace      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00012ad3      4c8b442418     mov r8, qword [rsp + 0x18]
0x00012ad8      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00012add      4a8b34f0       mov rsi, qword [rax + r14*8]
0x00012ae1      488d04b6       lea rax, [rsi + rsi*4]
0x00012ae5      488d04c2       lea rax, [rdx + rax*8]
0x00012ae9      488b542408     mov rdx, qword [rsp + 8]
0x00012aee      488b00         mov rax, qword [rax]
0x00012af1      48c1e004       shl rax, 4
0x00012af5      480302         add rax, qword [rdx]
0x00012af8      4c8b20         mov r12, qword [rax]
0x00012afb      4c89e2         mov rdx, r12
0x00012afe      e80de4ffff     call sym.check_dst_limits_calc_pos
0x00012b03      89c3           mov ebx, eax
0x00012b05      488b4500       mov rax, qword [rbp]
0x00012b09      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00012b0e      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00012b13      4d89f8         mov r8, r15
0x00012b16      4c89e2         mov rdx, r12
0x00012b19      4c89ef         mov rdi, r13
0x00012b1c      4a8b34f0       mov rsi, qword [rax + r14*8]
0x00012b20      e8ebe3ffff     call sym.check_dst_limits_calc_pos
0x00012b25      39c3           cmp ebx, eax
0x00012b27      7477           je 0x12ba0
0x00012b29      b801000000     mov eax, 1
0x00012b2e      4883c448       add rsp, 0x48
0x00012b32      5b             pop rbx
0x00012b33      5d             pop rbp
0x00012b34      415c           pop r12
0x00012b36      415d           pop r13
0x00012b38      415e           pop r14
0x00012b3a      415f           pop r15
0x00012b3c      c3             ret
0x00012b3d      0f1f00         nop dword [rax]
0x00012b40      4d89d6         mov r14, r10
0x00012b43      4989ea         mov r10, rbp
0x00012b46      662e0f1f8400.  nop word cs:[rax + rax]
0x00012b50      498d5e01       lea rbx, [r14 + 1]
0x00012b54      4c89d5         mov rbp, r10
0x00012b57      e922feffff     jmp 0x1297e
0x00012b5c      0f1f4000       nop dword [rax]
0x00012b60      4d89d6         mov r14, r10
0x00012b63      4989c2         mov r10, rax
0x00012b66      662e0f1f8400.  nop word cs:[rax + rax]
0x00012b70      498d6e01       lea rbp, [r14 + 1]
0x00012b74      4c89d0         mov rax, r10
0x00012b77      e98bfeffff     jmp 0x12a07
0x00012b7c      0f1f4000       nop dword [rax]
0x00012b80      48c7c3ffffff.  mov rbx, 0xffffffffffffffff
0x00012b87      e976feffff     jmp 0x12a02
0x00012b8c      0f1f4000       nop dword [rax]
0x00012b90      48c7c5ffffff.  mov rbp, 0xffffffffffffffff
0x00012b97      e9f0feffff     jmp 0x12a8c
0x00012b9c      0f1f4000       nop dword [rax]
0x00012ba0      488b442438     mov rax, qword [rsp + 0x38]
0x00012ba5      4983c601       add r14, 1
0x00012ba9      4c3b30         cmp r14, qword [rax]
0x00012bac      0f8c0effffff   jl 0x12ac0
0x00012bb2      31c0           xor eax, eax
0x00012bb4      e975ffffff     jmp 0x12b2e
0x00012bb9      0f1f80000000.  nop dword [rax]
;-- re_node_set_merge:
0x00012bc0      4885f6         test rsi, rsi
0x00012bc3      0f84ef000000   je 0x12cb8
0x00012bc9      488b5608       mov rdx, qword [rsi + 8]
0x00012bcd      4885d2         test rdx, rdx
0x00012bd0      0f84e2000000   je 0x12cb8
0x00012bd6      4154           push r12
0x00012bd8      55             push rbp
0x00012bd9      4989f4         mov r12, rsi
0x00012bdc      53             push rbx
0x00012bdd      488b4708       mov rax, qword [rdi + 8]
0x00012be1      4889fb         mov rbx, rdi
0x00012be4      488b37         mov rsi, qword [rdi]
0x00012be7      488d0c50       lea rcx, [rax + rdx*2]
0x00012beb      4839ce         cmp rsi, rcx
0x00012bee      0f8c44010000   jl 0x12d38
0x00012bf4      4885c0         test rax, rax
0x00012bf7      0f8473010000   je 0x12d70
0x00012bfd      488d2c50       lea rbp, [rax + rdx*2]
0x00012c01      4883ea01       sub rdx, 1
0x00012c05      4883e801       sub rax, 1
0x00012c09      4889d7         mov rdi, rdx
0x00012c0c      48f7d7         not rdi
0x00012c0f      4885ff         test rdi, rdi
0x00012c12      793c           jns 0x12c50
0x00012c14      4885c0         test rax, rax
0x00012c17      7837           js 0x12c50
0x00012c19      488b4b10       mov rcx, qword [rbx + 0x10]
0x00012c1d      498b742410     mov rsi, qword [r12 + 0x10]
0x00012c22      488b34d6       mov rsi, qword [rsi + rdx*8]
0x00012c26      483934c1       cmp qword [rcx + rax*8], rsi
0x00012c2a      0f8490000000   je 0x12cc0
0x00012c30      0f8da2000000   jge 0x12cd8
0x00012c36      4883ea01       sub rdx, 1
0x00012c3a      4883ed01       sub rbp, 1
0x00012c3e      4889d7         mov rdi, rdx
0x00012c41      488934e9       mov qword [rcx + rbp*8], rsi
0x00012c45      48f7d7         not rdi
0x00012c48      4885ff         test rdi, rdi
0x00012c4b      78c7           js 0x12c14
0x00012c4d      0f1f00         nop dword [rax]
0x00012c50      4885d2         test rdx, rdx
0x00012c53      0f898f000000   jns 0x12ce8
0x00012c59      488b4b08       mov rcx, qword [rbx + 8]
0x00012c5d      498b442408     mov rax, qword [r12 + 8]
0x00012c62      4c8d4441ff     lea r8, [rcx + rax*2 - 1]
0x00012c67      4c89c2         mov rdx, r8
0x00012c6a      4829ea         sub rdx, rbp
0x00012c6d      4883c201       add rdx, 1
0x00012c71      7437           je 0x12caa
0x00012c73      488b7b10       mov rdi, qword [rbx + 0x10]
0x00012c77      488d41ff       lea rax, [rcx - 1]
0x00012c7b      4801d1         add rcx, rdx
0x00012c7e      48894b08       mov qword [rbx + 8], rcx
0x00012c82      660f1f440000   nop word [rax + rax]
0x00012c88      4a8b34c7       mov rsi, qword [rdi + r8*8]
0x00012c8c      488b0cc7       mov rcx, qword [rdi + rax*8]
0x00012c90      4c8d0c10       lea r9, [rax + rdx]
0x00012c94      4e8d0ccf       lea r9, [rdi + r9*8]
0x00012c98      4839ce         cmp rsi, rcx
0x00012c9b      7e73           jle 0x12d10
0x00012c9d      4983e801       sub r8, 1
0x00012ca1      4883ea01       sub rdx, 1
0x00012ca5      498931         mov qword [r9], rsi
0x00012ca8      75de           jne 0x12c88
0x00012caa      31c0           xor eax, eax
0x00012cac      5b             pop rbx
0x00012cad      5d             pop rbp
0x00012cae      415c           pop r12
0x00012cb0      c3             ret
0x00012cb1      0f1f80000000.  nop dword [rax]
0x00012cb8      31c0           xor eax, eax
0x00012cba      c3             ret
0x00012cbb      0f1f440000     nop dword [rax + rax]
0x00012cc0      4883ea01       sub rdx, 1
0x00012cc4      4883e801       sub rax, 1
0x00012cc8      4889d7         mov rdi, rdx
0x00012ccb      48f7d7         not rdi
0x00012cce      e93cffffff     jmp 0x12c0f
0x00012cd3      0f1f440000     nop dword [rax + rax]
0x00012cd8      4883e801       sub rax, 1
0x00012cdc      e92effffff     jmp 0x12c0f
0x00012ce1      0f1f80000000.  nop dword [rax]
0x00012ce8      488b4310       mov rax, qword [rbx + 0x10]
0x00012cec      4883c201       add rdx, 1
0x00012cf0      498b742410     mov rsi, qword [r12 + 0x10]
0x00012cf5      4829d5         sub rbp, rdx
0x00012cf8      48c1e203       shl rdx, 3
0x00012cfc      488d3ce8       lea rdi, [rax + rbp*8]
0x00012d00      e80bfafeff     call sym.imp.memcpy
0x00012d05      e94fffffff     jmp 0x12c59
0x00012d0a      660f1f440000   nop word [rax + rax]
0x00012d10      4883e801       sub rax, 1
0x00012d14      498909         mov qword [r9], rcx
0x00012d17      0f896bffffff   jns 0x12c88
0x00012d1d      488d34ef       lea rsi, [rdi + rbp*8]
0x00012d21      48c1e203       shl rdx, 3
0x00012d25      e8e6f9feff     call sym.imp.memcpy
0x00012d2a      31c0           xor eax, eax
0x00012d2c      e97bffffff     jmp 0x12cac
0x00012d31      0f1f80000000.  nop dword [rax]
0x00012d38      4801f2         add rdx, rsi
0x00012d3b      488b7f10       mov rdi, qword [rdi + 0x10]
0x00012d3f      488d2c12       lea rbp, [rdx + rdx]
0x00012d43      48c1e204       shl rdx, 4
0x00012d47      4889d6         mov rsi, rdx
0x00012d4a      e8e1fafeff     call sym.imp.realloc
0x00012d4f      4885c0         test rax, rax
0x00012d52      7440           je 0x12d94
0x00012d54      48894310       mov qword [rbx + 0x10], rax
0x00012d58      48892b         mov qword [rbx], rbp
0x00012d5b      488b4308       mov rax, qword [rbx + 8]
0x00012d5f      498b542408     mov rdx, qword [r12 + 8]
0x00012d64      e98bfeffff     jmp 0x12bf4
0x00012d69      0f1f80000000.  nop dword [rax]
0x00012d70      48895308       mov qword [rbx + 8], rdx
0x00012d74      498b442408     mov rax, qword [r12 + 8]
0x00012d79      488b7b10       mov rdi, qword [rbx + 0x10]
0x00012d7d      498b742410     mov rsi, qword [r12 + 0x10]
0x00012d82      488d14c50000.  lea rdx, [rax*8]
0x00012d8a      e881f9feff     call sym.imp.memcpy
0x00012d8f      e916ffffff     jmp 0x12caa
0x00012d94      b80c000000     mov eax, 0xc
0x00012d99      e90effffff     jmp 0x12cac
0x00012d9e      6690           nop
;-- calc_eclosure_iter:
0x00012da0      4157           push r15
0x00012da2      4156           push r14
0x00012da4      4989f7         mov r15, rsi
0x00012da7      4155           push r13
0x00012da9      4154           push r12
0x00012dab      55             push rbp
0x00012dac      53             push rbx
0x00012dad      488d1c52       lea rbx, [rdx + rdx*2]
0x00012db1      4889d5         mov rbp, rdx
0x00012db4      4883ec68       sub rsp, 0x68
0x00012db8      4c8b6628       mov r12, qword [rsi + 0x28]
0x00012dbc      48c1e303       shl rbx, 3
0x00012dc0      64488b042528.  mov rax, qword fs:[0x28]
0x00012dc9      4889442458     mov qword [rsp + 0x58], rax
0x00012dce      31c0           xor eax, eax
0x00012dd0      48897c2410     mov qword [rsp + 0x10], rdi
0x00012dd5      894c241c       mov dword [rsp + 0x1c], ecx
0x00012dd9      4901dc         add r12, rbx
0x00012ddc      498b442408     mov rax, qword [r12 + 8]
0x00012de1      48c744242800.  mov qword [rsp + 0x28], 0
0x00012dea      488d7801       lea rdi, [rax + 1]
0x00012dee      48897c2420     mov qword [rsp + 0x20], rdi
0x00012df3      48c1e703       shl rdi, 3
0x00012df7      e884f9feff     call sym.imp.malloc
0x00012dfc      4885c0         test rax, rax
0x00012dff      4889442430     mov qword [rsp + 0x30], rax
0x00012e04      0f8436020000   je 0x13040
0x00012e0a      498b4730       mov rax, qword [r15 + 0x30]
0x00012e0e      498b17         mov rdx, qword [r15]
0x00012e11      4989ed         mov r13, rbp
0x00012e14      49c1e504       shl r13, 4
0x00012e18      48c7441808ff.  mov qword [rax + rbx + 8], 0xffffffffffffffff
0x00012e21      4a8d042a       lea rax, [rdx + r13]
0x00012e25      448b4008       mov r8d, dword [rax + 8]
0x00012e29      41f7c000ff03.  test r8d, 0x3ff00
0x00012e30      0f859a010000   jne 0x12fd0
0x00012e36      f6400808       test byte [rax + 8], 8
0x00012e3a      0f84c0000000   je 0x12f00
0x00012e40      498b7728       mov rsi, qword [r15 + 0x28]
0x00012e44      488d041e       lea rax, [rsi + rbx]
0x00012e48      4883780800     cmp qword [rax + 8], 0
0x00012e4d      0f8ead000000   jle 0x12f00
0x00012e53      488d542420     lea rdx, [rsp + 0x20]
0x00012e58      c644241b00     mov byte [rsp + 0x1b], 0
0x00012e5d      4531f6         xor r14d, r14d
0x00012e60      4c8d642440     lea r12, [rsp + 0x40]
0x00012e65      4889542408     mov qword [rsp + 8], rdx
0x00012e6a      eb1a           jmp 0x12e86
0x00012e6c      0f1f4000       nop dword [rax]
0x00012e70      498b7728       mov rsi, qword [r15 + 0x28]
0x00012e74      4983c601       add r14, 1
0x00012e78      488d041e       lea rax, [rsi + rbx]
0x00012e7c      4c397008       cmp qword [rax + 8], r14
0x00012e80      0f8e01010000   jle 0x12f87
0x00012e86      488b4010       mov rax, qword [rax + 0x10]
0x00012e8a      4a8b14f0       mov rdx, qword [rax + r14*8]
0x00012e8e      498b4730       mov rax, qword [r15 + 0x30]
0x00012e92      4c8d0452       lea r8, [rdx + rdx*2]
0x00012e96      4e8d2cc50000.  lea r13, [r8*8]
0x00012e9e      4c01e8         add rax, r13
0x00012ea1      488b4808       mov rcx, qword [rax + 8]
0x00012ea5      4883f9ff       cmp rcx, 0xffffffffffffffff
0x00012ea9      0f84c1000000   je 0x12f70
0x00012eaf      4885c9         test rcx, rcx
0x00012eb2      0f8470010000   je 0x13028
0x00012eb8      f30f6f00       movdqu xmm0, xmmword [rax]
0x00012ebc      0f29442440     movaps xmmword [rsp + 0x40], xmm0
0x00012ec1      488b4010       mov rax, qword [rax + 0x10]
0x00012ec5      4889442450     mov qword [rsp + 0x50], rax
0x00012eca      488b7c2408     mov rdi, qword [rsp + 8]
0x00012ecf      4c89e6         mov rsi, r12
0x00012ed2      e8e9fcffff     call sym.re_node_set_merge
0x00012ed7      85c0           test eax, eax
0x00012ed9      756b           jne 0x12f46
0x00012edb      498b4730       mov rax, qword [r15 + 0x30]
0x00012edf      4a837c280800   cmp qword [rax + r13 + 8], 0
0x00012ee5      7589           jne 0x12e70
0x00012ee7      488b7c2450     mov rdi, qword [rsp + 0x50]
0x00012eec      e81ffbfeff     call sym..plt.got
0x00012ef1      c644241b01     mov byte [rsp + 0x1b], 1
0x00012ef6      e975ffffff     jmp 0x12e70
0x00012efb      0f1f440000     nop dword [rax + rax]
0x00012f00      488d7c2420     lea rdi, [rsp + 0x20]
0x00012f05      4889ee         mov rsi, rbp
0x00012f08      e853e2ffff     call sym.re_node_set_insert
0x00012f0d      84c0           test al, al
0x00012f0f      0f842b010000   je 0x13040
0x00012f15      498b4730       mov rax, qword [r15 + 0x30]
0x00012f19      660f6f442420   movdqa xmm0, xmmword [rsp + 0x20]
0x00012f1f      0f110418       movups xmmword [rax + rbx], xmm0
0x00012f23      488b542430     mov rdx, qword [rsp + 0x30]
0x00012f28      4889541810     mov qword [rax + rbx + 0x10], rdx
0x00012f2d      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00012f32      488b442430     mov rax, qword [rsp + 0x30]
0x00012f37      660f6f442420   movdqa xmm0, xmmword [rsp + 0x20]
0x00012f3d      0f2903         movaps xmmword [rbx], xmm0
0x00012f40      48894310       mov qword [rbx + 0x10], rax
0x00012f44      31c0           xor eax, eax
0x00012f46      488b742458     mov rsi, qword [rsp + 0x58]
0x00012f4b      644833342528.  xor rsi, qword fs:[0x28]
0x00012f54      0f85f0000000   jne 0x1304a
0x00012f5a      4883c468       add rsp, 0x68
0x00012f5e      5b             pop rbx
0x00012f5f      5d             pop rbp
0x00012f60      415c           pop r12
0x00012f62      415d           pop r13
0x00012f64      415e           pop r14
0x00012f66      415f           pop r15
0x00012f68      c3             ret
0x00012f69      0f1f80000000.  nop dword [rax]
0x00012f70      488d041e       lea rax, [rsi + rbx]
0x00012f74      4983c601       add r14, 1
0x00012f78      c644241b01     mov byte [rsp + 0x1b], 1
0x00012f7d      4c397008       cmp qword [rax + 8], r14
0x00012f81      0f8ffffeffff   jg 0x12e86
0x00012f87      488d7c2420     lea rdi, [rsp + 0x20]
0x00012f8c      4889ee         mov rsi, rbp
0x00012f8f      e8cce1ffff     call sym.re_node_set_insert
0x00012f94      84c0           test al, al
0x00012f96      0f84a4000000   je 0x13040
0x00012f9c      807c241c01     cmp byte [rsp + 0x1c], 1
0x00012fa1      498b4730       mov rax, qword [r15 + 0x30]
0x00012fa5      488d1418       lea rdx, [rax + rbx]
0x00012fa9      0f846affffff   je 0x12f19
0x00012faf      807c241b00     cmp byte [rsp + 0x1b], 0
0x00012fb4      0f845fffffff   je 0x12f19
0x00012fba      48c742080000.  mov qword [rdx + 8], 0
0x00012fc2      e966ffffff     jmp 0x12f2d
0x00012fc7      660f1f840000.  nop word [rax + rax]
0x00012fd0      49837c240800   cmp qword [r12 + 8], 0
0x00012fd6      0f8424ffffff   je 0x12f00
0x00012fdc      498b4c2410     mov rcx, qword [r12 + 0x10]
0x00012fe1      488b09         mov rcx, qword [rcx]
0x00012fe4      48c1e104       shl rcx, 4
0x00012fe8      f6440a0a04     test byte [rdx + rcx + 0xa], 4
0x00012fed      0f8543feffff   jne 0x12e36
0x00012ff3      41c1e808       shr r8d, 8
0x00012ff7      4889e9         mov rcx, rbp
0x00012ffa      4889ea         mov rdx, rbp
0x00012ffd      4181e0ff0300.  and r8d, 0x3ff
0x00013004      4889ee         mov rsi, rbp
0x00013007      4c89ff         mov rdi, r15
0x0001300a      e8a1f0ffff     call sym.duplicate_node_closure
0x0001300f      85c0           test eax, eax
0x00013011      0f852fffffff   jne 0x12f46
0x00013017      498b07         mov rax, qword [r15]
0x0001301a      4c01e8         add rax, r13
0x0001301d      e914feffff     jmp 0x12e36
0x00013022      660f1f440000   nop word [rax + rax]
0x00013028      4c89fe         mov rsi, r15
0x0001302b      4c89e7         mov rdi, r12
0x0001302e      e86dfdffff     call sym.calc_eclosure_iter
0x00013033      85c0           test eax, eax
0x00013035      0f848ffeffff   je 0x12eca
0x0001303b      e906ffffff     jmp 0x12f46
0x00013040      b80c000000     mov eax, 0xc
0x00013045      e9fcfeffff     jmp 0x12f46
0x0001304a      e811f5feff     call sym.imp.__stack_chk_fail
0x0001304f      90             nop
;-- check_arrival_expand_ecl:
0x00013050      4157           push r15
0x00013052      4156           push r14
0x00013054      4989fe         mov r14, rdi
0x00013057      4155           push r13
0x00013059      4154           push r12
0x0001305b      4989f7         mov r15, rsi
0x0001305e      55             push rbp
0x0001305f      53             push rbx
0x00013060      4889d5         mov rbp, rdx
0x00013063      89cb           mov ebx, ecx
0x00013065      4883ec38       sub rsp, 0x38
0x00013069      4c8b6608       mov r12, qword [rsi + 8]
0x0001306d      64488b042528.  mov rax, qword fs:[0x28]
0x00013076      4889442428     mov qword [rsp + 0x28], rax
0x0001307b      31c0           xor eax, eax
0x0001307d      48c744241800.  mov qword [rsp + 0x18], 0
0x00013086      4a8d3ce50000.  lea rdi, [r12*8]
0x0001308e      4c89642410     mov qword [rsp + 0x10], r12
0x00013093      e8e8f6feff     call sym.imp.malloc
0x00013098      4885c0         test rax, rax
0x0001309b      4889442420     mov qword [rsp + 0x20], rax
0x000130a0      0f84f7000000   je 0x1319d
0x000130a6      4d85e4         test r12, r12
0x000130a9      0f8e8c000000   jle 0x1313b
0x000130af      4c8d642410     lea r12, [rsp + 0x10]
0x000130b4      4531ed         xor r13d, r13d
0x000130b7      660f1f840000.  nop word [rax + rax]
0x000130c0      498b4710       mov rax, qword [r15 + 0x10]
0x000130c4      4a8b14e8       mov rdx, qword [rax + r13*8]
0x000130c8      498b4630       mov rax, qword [r14 + 0x30]
0x000130cc      488d0c52       lea rcx, [rdx + rdx*2]
0x000130d0      488d34c8       lea rsi, [rax + rcx*8]
0x000130d4      4c8b4608       mov r8, qword [rsi + 8]
0x000130d8      4d85c0         test r8, r8
0x000130db      0f8e7f000000   jle 0x13160
0x000130e1      4c8b5610       mov r10, qword [rsi + 0x10]
0x000130e5      4d8b0e         mov r9, qword [r14]
0x000130e8      31c9           xor ecx, ecx
0x000130ea      eb0d           jmp 0x130f9
0x000130ec      0f1f4000       nop dword [rax]
0x000130f0      4883c101       add rcx, 1
0x000130f4      4939c8         cmp r8, rcx
0x000130f7      7467           je 0x13160
0x000130f9      498b3cca       mov rdi, qword [r10 + rcx*8]
0x000130fd      4889f8         mov rax, rdi
0x00013100      48c1e004       shl rax, 4
0x00013104      4c01c8         add rax, r9
0x00013107      440fb65808     movzx r11d, byte [rax + 8]
0x0001310c      4439db         cmp ebx, r11d
0x0001310f      75df           jne 0x130f0
0x00013111      483b28         cmp rbp, qword [rax]
0x00013114      75da           jne 0x130f0
0x00013116      4883ffff       cmp rdi, 0xffffffffffffffff
0x0001311a      7444           je 0x13160
0x0001311c      4189d8         mov r8d, ebx
0x0001311f      4889e9         mov rcx, rbp
0x00013122      4c89e6         mov rsi, r12
0x00013125      4c89f7         mov rdi, r14
0x00013128      e8f3f5ffff     call sym.check_arrival_expand_ecl_sub
0x0001312d      85c0           test eax, eax
0x0001312f      753b           jne 0x1316c
0x00013131      4983c501       add r13, 1
0x00013135      4d396f08       cmp qword [r15 + 8], r13
0x00013139      7f85           jg 0x130c0
0x0001313b      498b7f10       mov rdi, qword [r15 + 0x10]
0x0001313f      e8ccf8feff     call sym..plt.got
0x00013144      488b442420     mov rax, qword [rsp + 0x20]
0x00013149      660f6f442410   movdqa xmm0, xmmword [rsp + 0x10]
0x0001314f      49894710       mov qword [r15 + 0x10], rax
0x00013153      31c0           xor eax, eax
0x00013155      410f2907       movaps xmmword [r15], xmm0
0x00013159      eb23           jmp 0x1317e
0x0001315b      0f1f440000     nop dword [rax + rax]
0x00013160      4c89e7         mov rdi, r12
0x00013163      e858faffff     call sym.re_node_set_merge
0x00013168      85c0           test eax, eax
0x0001316a      74c5           je 0x13131
0x0001316c      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00013171      8944240c       mov dword [rsp + 0xc], eax
0x00013175      e896f8feff     call sym..plt.got
0x0001317a      8b44240c       mov eax, dword [rsp + 0xc]
0x0001317e      488b542428     mov rdx, qword [rsp + 0x28]
0x00013183      644833142528.  xor rdx, qword fs:[0x28]
0x0001318c      7516           jne 0x131a4
0x0001318e      4883c438       add rsp, 0x38
0x00013192      5b             pop rbx
0x00013193      5d             pop rbp
0x00013194      415c           pop r12
0x00013196      415d           pop r13
0x00013198      415e           pop r14
0x0001319a      415f           pop r15
0x0001319c      c3             ret
0x0001319d      b80c000000     mov eax, 0xc
0x000131a2      ebda           jmp 0x1317e
0x000131a4      e8b7f3feff     call sym.imp.__stack_chk_fail
0x000131a9      0f1f80000000.  nop dword [rax]
;-- re_node_set_add_intersect:
0x000131b0      4c8b4e08       mov r9, qword [rsi + 8]
0x000131b4      31c0           xor eax, eax
0x000131b6      4d85c9         test r9, r9
0x000131b9      0f84b9000000   je 0x13278
0x000131bf      4c8b5a08       mov r11, qword [rdx + 8]
0x000131c3      4d85db         test r11, r11
0x000131c6      0f84ac000000   je 0x13278
0x000131cc      4155           push r13
0x000131ce      4154           push r12
0x000131d0      4b8d0419       lea rax, [r9 + r11]
0x000131d4      55             push rbp
0x000131d5      53             push rbx
0x000131d6      4989d4         mov r12, rdx
0x000131d9      4889fb         mov rbx, rdi
0x000131dc      4889f5         mov rbp, rsi
0x000131df      4883ec08       sub rsp, 8
0x000131e3      488b4f08       mov rcx, qword [rdi + 8]
0x000131e7      4c8b2f         mov r13, qword [rdi]
0x000131ea      488b7f10       mov rdi, qword [rdi + 0x10]
0x000131ee      488d1408       lea rdx, [rax + rcx]
0x000131f2      4c39ea         cmp rdx, r13
0x000131f5      0f8f25010000   jg 0x13320
0x000131fb      4a8d3409       lea rsi, [rcx + r9]
0x000131ff      4c8b6d10       mov r13, qword [rbp + 0x10]
0x00013203      498b542410     mov rdx, qword [r12 + 0x10]
0x00013208      4983e901       sub r9, 1
0x0001320c      4883e901       sub rcx, 1
0x00013210      4c01de         add rsi, r11
0x00013213      4983eb01       sub r11, 1
0x00013217      4b8b44cd00     mov rax, qword [r13 + r9*8]
0x0001321c      4e8b04da       mov r8, qword [rdx + r11*8]
0x00013220      4c39c0         cmp rax, r8
0x00013223      7411           je 0x13236
0x00013225      7d59           jge 0x13280
0x00013227      4983eb01       sub r11, 1
0x0001322b      7863           js 0x13290
0x0001322d      4e8b04da       mov r8, qword [rdx + r11*8]
0x00013231      4c39c0         cmp rax, r8
0x00013234      75ef           jne 0x13225
0x00013236      4885c9         test rcx, rcx
0x00013239      790f           jns 0x1324a
0x0001323b      eb1b           jmp 0x13258
0x0001323d      0f1f00         nop dword [rax]
0x00013240      4883e901       sub rcx, 1
0x00013244      4883f9ff       cmp rcx, 0xffffffffffffffff
0x00013248      740e           je 0x13258
0x0001324a      4c8b14cf       mov r10, qword [rdi + rcx*8]
0x0001324e      4d39c2         cmp r10, r8
0x00013251      7fed           jg 0x13240
0x00013253      4d39c2         cmp r10, r8
0x00013256      7408           je 0x13260
0x00013258      4883ee01       sub rsi, 1
0x0001325c      4c8904f7       mov qword [rdi + rsi*8], r8
0x00013260      4983e901       sub r9, 1
0x00013264      782a           js 0x13290
0x00013266      4983eb01       sub r11, 1
0x0001326a      7824           js 0x13290
0x0001326c      4b8b44cd00     mov rax, qword [r13 + r9*8]
0x00013271      ebba           jmp 0x1322d
0x00013273      0f1f440000     nop dword [rax + rax]
0x00013278      f3c3           ret
0x0001327a      660f1f440000   nop word [rax + rax]
0x00013280      4983e901       sub r9, 1
0x00013284      780a           js 0x13290
0x00013286      4b8b44cd00     mov rax, qword [r13 + r9*8]
0x0001328b      eb93           jmp 0x13220
0x0001328d      0f1f00         nop dword [rax]
0x00013290      488b4b08       mov rcx, qword [rbx + 8]
0x00013294      488b5508       mov rdx, qword [rbp + 8]
0x00013298      4801ca         add rdx, rcx
0x0001329b      4903542408     add rdx, qword [r12 + 8]
0x000132a0      488d41ff       lea rax, [rcx - 1]
0x000132a4      4c8d4aff       lea r9, [rdx - 1]
0x000132a8      4829f2         sub rdx, rsi
0x000132ab      4801d1         add rcx, rdx
0x000132ae      4885d2         test rdx, rdx
0x000132b1      48894b08       mov qword [rbx + 8], rcx
0x000132b5      7e46           jle 0x132fd
0x000132b7      4885c0         test rax, rax
0x000132ba      7841           js 0x132fd
0x000132bc      0f1f4000       nop dword [rax]
0x000132c0      4e8b04cf       mov r8, qword [rdi + r9*8]
0x000132c4      488b0cc7       mov rcx, qword [rdi + rax*8]
0x000132c8      4c8d1410       lea r10, [rax + rdx]
0x000132cc      4e8d14d7       lea r10, [rdi + r10*8]
0x000132d0      4939c8         cmp r8, rcx
0x000132d3      7e1b           jle 0x132f0
0x000132d5      4983e901       sub r9, 1
0x000132d9      4883ea01       sub rdx, 1
0x000132dd      4d8902         mov qword [r10], r8
0x000132e0      75de           jne 0x132c0
0x000132e2      31d2           xor edx, edx
0x000132e4      eb1b           jmp 0x13301
0x000132e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000132f0      4883e801       sub rax, 1
0x000132f4      49890a         mov qword [r10], rcx
0x000132f7      4883f8ff       cmp rax, 0xffffffffffffffff
0x000132fb      75c3           jne 0x132c0
0x000132fd      48c1e203       shl rdx, 3
0x00013301      488d34f7       lea rsi, [rdi + rsi*8]
0x00013305      e806f4feff     call sym.imp.memcpy
0x0001330a      31c0           xor eax, eax
0x0001330c      4883c408       add rsp, 8
0x00013310      5b             pop rbx
0x00013311      5d             pop rbp
0x00013312      415c           pop r12
0x00013314      415d           pop r13
0x00013316      c3             ret
0x00013317      660f1f840000.  nop word [rax + rax]
0x00013320      4901c5         add r13, rax
0x00013323      4a8d34ed0000.  lea rsi, [r13*8]
0x0001332b      e800f5feff     call sym.imp.realloc
0x00013330      4885c0         test rax, rax
0x00013333      4889c7         mov rdi, rax
0x00013336      7419           je 0x13351
0x00013338      48894310       mov qword [rbx + 0x10], rax
0x0001333c      4c892b         mov qword [rbx], r13
0x0001333f      488b4b08       mov rcx, qword [rbx + 8]
0x00013343      4c8b4d08       mov r9, qword [rbp + 8]
0x00013347      4d8b5c2408     mov r11, qword [r12 + 8]
0x0001334c      e9aafeffff     jmp 0x131fb
0x00013351      b80c000000     mov eax, 0xc
0x00013356      ebb4           jmp 0x1330c
0x00013358      0f1f84000000.  nop dword [rax + rax]
;-- create_token_tree.isra.16:
0x00013360      53             push rbx
0x00013361      4889fb         mov rbx, rdi
0x00013364      4883ec20       sub rsp, 0x20
0x00013368      8b06           mov eax, dword [rsi]
0x0001336a      83f80f         cmp eax, 0xf
0x0001336d      7479           je 0x133e8
0x0001336f      4c63c8         movsxd r9, eax
0x00013372      448d5001       lea r10d, [rax + 1]
0x00013376      488b3f         mov rdi, qword [rdi]
0x00013379      4c89c8         mov rax, r9
0x0001337c      48c1e006       shl rax, 6
0x00013380      4883c008       add rax, 8
0x00013384      49c1e106       shl r9, 6
0x00013388      448916         mov dword [rsi], r10d
0x0001338b      4801f8         add rax, rdi
0x0001338e      4a8d340f       lea rsi, [rdi + r9]
0x00013392      48c746080000.  mov qword [rsi + 8], 0
0x0001339a      48895610       mov qword [rsi + 0x10], rdx
0x0001339e      488d7e20       lea rdi, [rsi + 0x20]
0x000133a2      48894e18       mov qword [rsi + 0x18], rcx
0x000133a6      f3410f6f00     movdqu xmm0, xmmword [r8]
0x000133ab      0f114630       movups xmmword [rsi + 0x30], xmm0
0x000133af      80671af3       and byte [rdi + 0x1a], 0xf3             ; [0xf3:1]=0
0x000133b3      4885d2         test rdx, rdx
0x000133b6      48c746200000.  mov qword [rsi + 0x20], 0
0x000133be      48c746280000.  mov qword [rsi + 0x28], 0
0x000133c6      48c74640ffff.  mov qword [rsi + 0x40], 0xffffffffffffffff
0x000133ce      7403           je 0x133d3
0x000133d0      488902         mov qword [rdx], rax
0x000133d3      4885c9         test rcx, rcx
0x000133d6      7403           je 0x133db
0x000133d8      488901         mov qword [rcx], rax
0x000133db      4883c420       add rsp, 0x20
0x000133df      5b             pop rbx
0x000133e0      c3             ret
0x000133e1      0f1f80000000.  nop dword [rax]
0x000133e8      bfc8030000     mov edi, 0x3c8
0x000133ed      4c89442418     mov qword [rsp + 0x18], r8
0x000133f2      48894c2410     mov qword [rsp + 0x10], rcx
0x000133f7      4889542408     mov qword [rsp + 8], rdx
0x000133fc      48893424       mov qword [rsp], rsi
0x00013400      e87bf3feff     call sym.imp.malloc
0x00013405      4885c0         test rax, rax
0x00013408      4889c7         mov rdi, rax
0x0001340b      742f           je 0x1343c
0x0001340d      488b03         mov rax, qword [rbx]
0x00013410      41ba01000000   mov r10d, 1
0x00013416      48893b         mov qword [rbx], rdi
0x00013419      4531c9         xor r9d, r9d
0x0001341c      4c8b442418     mov r8, qword [rsp + 0x18]
0x00013421      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00013426      488b542408     mov rdx, qword [rsp + 8]
0x0001342b      488b3424       mov rsi, qword [rsp]
0x0001342f      488907         mov qword [rdi], rax
0x00013432      b808000000     mov eax, 8
0x00013437      e948ffffff     jmp 0x13384
0x0001343c      31c0           xor eax, eax
0x0001343e      eb9b           jmp 0x133db
;-- duplicate_tree:
0x00013440      4156           push r14
0x00013442      4155           push r13
0x00013444      4c8d6e70       lea r13, [rsi + 0x70]
0x00013448      4154           push r12
0x0001344a      55             push rbp
0x0001344b      4c8da6800000.  lea r12, [rsi + 0x80]
0x00013452      53             push rbx
0x00013453      4889fb         mov rbx, rdi
0x00013456      4883ec10       sub rsp, 0x10
0x0001345a      488b2f         mov rbp, qword [rdi]
0x0001345d      64488b042528.  mov rax, qword fs:[0x28]
0x00013466      4889442408     mov qword [rsp + 8], rax
0x0001346b      31c0           xor eax, eax
0x0001346d      4989e6         mov r14, rsp
0x00013470      4c8d4328       lea r8, [rbx + 0x28]
0x00013474      31c9           xor ecx, ecx
0x00013476      31d2           xor edx, edx
0x00013478      4c89e6         mov rsi, r12
0x0001347b      4c89ef         mov rdi, r13
0x0001347e      e8ddfeffff     call sym.create_token_tree.isra.16
0x00013483      4885c0         test rax, rax
0x00013486      498906         mov qword [r14], rax
0x00013489      7451           je 0x134dc
0x0001348b      488928         mov qword [rax], rbp
0x0001348e      498b2e         mov rbp, qword [r14]
0x00013491      804d3204       or byte [rbp + 0x32], 4
0x00013495      488b4308       mov rax, qword [rbx + 8]
0x00013499      4885c0         test rax, rax
0x0001349c      7412           je 0x134b0
0x0001349e      4c8d7508       lea r14, [rbp + 8]
0x000134a2      4889c3         mov rbx, rax
0x000134a5      ebc9           jmp 0x13470
0x000134a7      660f1f840000.  nop word [rax + rax]
0x000134b0      31d2           xor edx, edx
0x000134b2      eb07           jmp 0x134bb
0x000134b4      0f1f4000       nop dword [rax]
0x000134b8      4889c3         mov rbx, rax
0x000134bb      488b4310       mov rax, qword [rbx + 0x10]
0x000134bf      4885c0         test rax, rax
0x000134c2      7405           je 0x134c9
0x000134c4      4839d0         cmp rax, rdx
0x000134c7      7537           jne 0x13500
0x000134c9      488b03         mov rax, qword [rbx]
0x000134cc      488b6d00       mov rbp, qword [rbp]
0x000134d0      4889da         mov rdx, rbx
0x000134d3      4885c0         test rax, rax
0x000134d6      75e0           jne 0x134b8
0x000134d8      488b0424       mov rax, qword [rsp]
0x000134dc      488b4c2408     mov rcx, qword [rsp + 8]
0x000134e1      6448330c2528.  xor rcx, qword fs:[0x28]
0x000134ea      7520           jne 0x1350c
0x000134ec      4883c410       add rsp, 0x10
0x000134f0      5b             pop rbx
0x000134f1      5d             pop rbp
0x000134f2      415c           pop r12
0x000134f4      415d           pop r13
0x000134f6      415e           pop r14
0x000134f8      c3             ret
0x000134f9      0f1f80000000.  nop dword [rax]
0x00013500      4c8d7510       lea r14, [rbp + 0x10]
0x00013504      4889c3         mov rbx, rax
0x00013507      e964ffffff     jmp 0x13470
0x0001350c      e84ff0feff     call sym.imp.__stack_chk_fail
0x00013511      0f1f440000     nop dword [rax + rax]
0x00013516      662e0f1f8400.  nop word cs:[rax + rax]
;-- lower_subexp:
0x00013520      4157           push r15
0x00013522      4156           push r14
0x00013524      4155           push r13
0x00013526      4154           push r12
0x00013528      4989d5         mov r13, rdx
0x0001352b      55             push rbp
0x0001352c      53             push rbx
0x0001352d      4883ec48       sub rsp, 0x48
0x00013531      488b1e         mov rbx, qword [rsi]
0x00013534      488b6a08       mov rbp, qword [rdx + 8]
0x00013538      64488b042528.  mov rax, qword fs:[0x28]
0x00013541      4889442438     mov qword [rsp + 0x38], rax
0x00013546      31c0           xor eax, eax
0x00013548      f6463810       test byte [rsi + 0x38], 0x10
0x0001354c      48897c2418     mov qword [rsp + 0x18], rdi
0x00013551      0f8471010000   je 0x136c8
0x00013557      4885ed         test rbp, rbp
0x0001355a      7474           je 0x135d0
0x0001355c      488b4228       mov rax, qword [rdx + 0x28]
0x00013560      4883f83f       cmp rax, 0x3f
0x00013564      0f8f33010000   jg 0x1369d
0x0001356a      488b93a00000.  mov rdx, qword [rbx + 0xa0]
0x00013571      480fa3c2       bt rdx, rax
0x00013575      0f8322010000   jae 0x1369d
0x0001357b      488d4370       lea rax, [rbx + 0x70]
0x0001357f      4c8d742420     lea r14, [rsp + 0x20]
0x00013584      4883eb80       sub rbx, 0xffffffffffffff80
0x00013588      31c9           xor ecx, ecx
0x0001358a      31d2           xor edx, edx
0x0001358c      4889de         mov rsi, rbx
0x0001358f      4989c7         mov r15, rax
0x00013592      4d89f0         mov r8, r14
0x00013595      4889c7         mov rdi, rax
0x00013598      c644242808     mov byte [rsp + 0x28], 8
0x0001359d      4889442408     mov qword [rsp + 8], rax
0x000135a2      e8b9fdffff     call sym.create_token_tree.isra.16
0x000135a7      4c89ff         mov rdi, r15
0x000135aa      4d89f0         mov r8, r14
0x000135ad      31c9           xor ecx, ecx
0x000135af      31d2           xor edx, edx
0x000135b1      4889de         mov rsi, rbx
0x000135b4      4989c4         mov r12, rax
0x000135b7      c644242809     mov byte [rsp + 0x28], 9
0x000135bc      e89ffdffff     call sym.create_token_tree.isra.16
0x000135c1      4989c7         mov r15, rax
0x000135c4      e954010000     jmp 0x1371d
0x000135c9      0f1f80000000.  nop dword [rax]
0x000135d0      488d4370       lea rax, [rbx + 0x70]
0x000135d4      4c8d742420     lea r14, [rsp + 0x20]
0x000135d9      4883eb80       sub rbx, 0xffffffffffffff80
0x000135dd      31c9           xor ecx, ecx
0x000135df      31d2           xor edx, edx
0x000135e1      4889de         mov rsi, rbx
0x000135e4      4989c7         mov r15, rax
0x000135e7      4d89f0         mov r8, r14
0x000135ea      4889c7         mov rdi, rax
0x000135ed      c644242808     mov byte [rsp + 0x28], 8
0x000135f2      4889442408     mov qword [rsp + 8], rax
0x000135f7      e864fdffff     call sym.create_token_tree.isra.16
0x000135fc      4c89ff         mov rdi, r15
0x000135ff      4d89f0         mov r8, r14
0x00013602      31c9           xor ecx, ecx
0x00013604      31d2           xor edx, edx
0x00013606      4889de         mov rsi, rbx
0x00013609      4989c4         mov r12, rax
0x0001360c      c644242809     mov byte [rsp + 0x28], 9
0x00013611      e84afdffff     call sym.create_token_tree.isra.16
0x00013616      4989c3         mov r11, rax
0x00013619      4989c7         mov r15, rax
0x0001361c      488b7c2408     mov rdi, qword [rsp + 8]
0x00013621      4d89f0         mov r8, r14
0x00013624      4c89d9         mov rcx, r11
0x00013627      4c89e2         mov rdx, r12
0x0001362a      4889de         mov rsi, rbx
0x0001362d      c644242810     mov byte [rsp + 0x28], 0x10             ; [0x10:1]=3
0x00013632      4c895c2410     mov qword [rsp + 0x10], r11
0x00013637      e824fdffff     call sym.create_token_tree.isra.16
0x0001363c      4885c0         test rax, rax
0x0001363f      4889c5         mov rbp, rax
0x00013642      0f84f8000000   je 0x13740
0x00013648      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x0001364d      4d85db         test r11, r11
0x00013650      0f84ea000000   je 0x13740
0x00013656      4d85e4         test r12, r12
0x00013659      0f84e1000000   je 0x13740
0x0001365f      4d85ff         test r15, r15
0x00013662      0f84d8000000   je 0x13740
0x00013668      498b4528       mov rax, qword [r13 + 0x28]
0x0001366c      49894728       mov qword [r15 + 0x28], rax
0x00013670      4989442428     mov qword [r12 + 0x28], rax
0x00013675      410fb64532     movzx eax, byte [r13 + 0x32]
0x0001367a      410fb65732     movzx edx, byte [r15 + 0x32]
0x0001367f      83e008         and eax, 8
0x00013682      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x00013685      89c1           mov ecx, eax
0x00013687      09ca           or edx, ecx
0x00013689      41885732       mov byte [r15 + 0x32], dl
0x0001368d      410fb6442432   movzx eax, byte [r12 + 0x32]
0x00013693      83e0f7         and eax, 0xfffffff7                     ; 4294967287
0x00013696      09c8           or eax, ecx
0x00013698      4188442432     mov byte [r12 + 0x32], al
0x0001369d      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000136a2      6448333c2528.  xor rdi, qword fs:[0x28]
0x000136ab      4889e8         mov rax, rbp
0x000136ae      0f859e000000   jne 0x13752
0x000136b4      4883c448       add rsp, 0x48
0x000136b8      5b             pop rbx
0x000136b9      5d             pop rbp
0x000136ba      415c           pop r12
0x000136bc      415d           pop r13
0x000136be      415e           pop r14
0x000136c0      415f           pop r15
0x000136c2      c3             ret
0x000136c3      0f1f440000     nop dword [rax + rax]
0x000136c8      488d4370       lea rax, [rbx + 0x70]
0x000136cc      4c8d742420     lea r14, [rsp + 0x20]
0x000136d1      4883eb80       sub rbx, 0xffffffffffffff80
0x000136d5      31c9           xor ecx, ecx
0x000136d7      31d2           xor edx, edx
0x000136d9      4889de         mov rsi, rbx
0x000136dc      4989c7         mov r15, rax
0x000136df      4d89f0         mov r8, r14
0x000136e2      4889c7         mov rdi, rax
0x000136e5      c644242808     mov byte [rsp + 0x28], 8
0x000136ea      4889442408     mov qword [rsp + 8], rax
0x000136ef      e86cfcffff     call sym.create_token_tree.isra.16
0x000136f4      31c9           xor ecx, ecx
0x000136f6      31d2           xor edx, edx
0x000136f8      4c89ff         mov rdi, r15
0x000136fb      4d89f0         mov r8, r14
0x000136fe      4889de         mov rsi, rbx
0x00013701      4989c4         mov r12, rax
0x00013704      c644242809     mov byte [rsp + 0x28], 9
0x00013709      e852fcffff     call sym.create_token_tree.isra.16
0x0001370e      4885ed         test rbp, rbp
0x00013711      4989c7         mov r15, rax
0x00013714      4989c3         mov r11, rax
0x00013717      0f84fffeffff   je 0x1361c
0x0001371d      488b7c2408     mov rdi, qword [rsp + 8]
0x00013722      4d89f0         mov r8, r14
0x00013725      4c89f9         mov rcx, r15
0x00013728      4889ea         mov rdx, rbp
0x0001372b      4889de         mov rsi, rbx
0x0001372e      c644242810     mov byte [rsp + 0x28], 0x10             ; [0x10:1]=3
0x00013733      e828fcffff     call sym.create_token_tree.isra.16
0x00013738      4989c3         mov r11, rax
0x0001373b      e9dcfeffff     jmp 0x1361c
0x00013740      488b442418     mov rax, qword [rsp + 0x18]
0x00013745      31ed           xor ebp, ebp
0x00013747      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0001374d      e94bffffff     jmp 0x1369d
0x00013752      e809eefeff     call sym.imp.__stack_chk_fail
0x00013757      660f1f840000.  nop word [rax + rax]
;-- lower_subexps:
0x00013760      55             push rbp
0x00013761      53             push rbx
0x00013762      4889fd         mov rbp, rdi
0x00013765      4889f3         mov rbx, rsi
0x00013768      4883ec18       sub rsp, 0x18
0x0001376c      488b5608       mov rdx, qword [rsi + 8]
0x00013770      64488b042528.  mov rax, qword fs:[0x28]
0x00013779      4889442408     mov qword [rsp + 8], rax
0x0001377e      31c0           xor eax, eax
0x00013780      c74424040000.  mov dword [rsp + 4], 0
0x00013788      4885d2         test rdx, rdx
0x0001378b      7406           je 0x13793
0x0001378d      807a3011       cmp byte [rdx + 0x30], 0x11
0x00013791      744d           je 0x137e0
0x00013793      488b5310       mov rdx, qword [rbx + 0x10]
0x00013797      4885d2         test rdx, rdx
0x0001379a      7406           je 0x137a2
0x0001379c      807a3011       cmp byte [rdx + 0x30], 0x11
0x000137a0      741e           je 0x137c0
0x000137a2      488b4c2408     mov rcx, qword [rsp + 8]
0x000137a7      6448330c2528.  xor rcx, qword fs:[0x28]
0x000137b0      8b442404       mov eax, dword [rsp + 4]
0x000137b4      7545           jne 0x137fb
0x000137b6      4883c418       add rsp, 0x18
0x000137ba      5b             pop rbx
0x000137bb      5d             pop rbp
0x000137bc      c3             ret
0x000137bd      0f1f00         nop dword [rax]
0x000137c0      488d7c2404     lea rdi, [rsp + 4]
0x000137c5      4889ee         mov rsi, rbp
0x000137c8      e853fdffff     call sym.lower_subexp
0x000137cd      4885c0         test rax, rax
0x000137d0      48894310       mov qword [rbx + 0x10], rax
0x000137d4      74cc           je 0x137a2
0x000137d6      488918         mov qword [rax], rbx
0x000137d9      ebc7           jmp 0x137a2
0x000137db      0f1f440000     nop dword [rax + rax]
0x000137e0      488d7c2404     lea rdi, [rsp + 4]
0x000137e5      4889ee         mov rsi, rbp
0x000137e8      e833fdffff     call sym.lower_subexp
0x000137ed      4885c0         test rax, rax
0x000137f0      48894308       mov qword [rbx + 8], rax
0x000137f4      749d           je 0x13793
0x000137f6      488918         mov qword [rax], rbx
0x000137f9      eb98           jmp 0x13793
0x000137fb      e860edfeff     call sym.imp.__stack_chk_fail
;-- re_node_set_init_copy:
0x00013800      4154           push r12
0x00013802      55             push rbp
0x00013803      53             push rbx
0x00013804      488b4608       mov rax, qword [rsi + 8]
0x00013808      48894708       mov qword [rdi + 8], rax
0x0001380c      4c8b6608       mov r12, qword [rsi + 8]
0x00013810      4d85e4         test r12, r12
0x00013813      7e3b           jle 0x13850
0x00013815      4889fb         mov rbx, rdi
0x00013818      488907         mov qword [rdi], rax
0x0001381b      488d3cc50000.  lea rdi, [rax*8]
0x00013823      4889f5         mov rbp, rsi
0x00013826      e855effeff     call sym.imp.malloc
0x0001382b      4885c0         test rax, rax
0x0001382e      48894310       mov qword [rbx + 0x10], rax
0x00013832      743c           je 0x13870
0x00013834      488b7510       mov rsi, qword [rbp + 0x10]
0x00013838      4a8d14e50000.  lea rdx, [r12*8]
0x00013840      4889c7         mov rdi, rax
0x00013843      e8c8eefeff     call sym.imp.memcpy
0x00013848      31c0           xor eax, eax
0x0001384a      5b             pop rbx
0x0001384b      5d             pop rbp
0x0001384c      415c           pop r12
0x0001384e      c3             ret
0x0001384f      90             nop
0x00013850      660fefc0       pxor xmm0, xmm0
0x00013854      48c747100000.  mov qword [rdi + 0x10], 0
0x0001385c      31c0           xor eax, eax
0x0001385e      0f1107         movups xmmword [rdi], xmm0
0x00013861      5b             pop rbx
0x00013862      5d             pop rbp
0x00013863      415c           pop r12
0x00013865      c3             ret
0x00013866      662e0f1f8400.  nop word cs:[rax + rax]
0x00013870      48c743080000.  mov qword [rbx + 8], 0
0x00013878      48c703000000.  mov qword [rbx], 0
0x0001387f      b80c000000     mov eax, 0xc
0x00013884      ebc4           jmp 0x1384a
0x00013886      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_init_union:
0x00013890      4885f6         test rsi, rsi
0x00013893      4156           push r14
0x00013895      4155           push r13
0x00013897      4154           push r12
0x00013899      55             push rbp
0x0001389a      53             push rbx
0x0001389b      0f84a4000000   je 0x13945
0x000138a1      4885d2         test rdx, rdx
0x000138a4      4c8b6e08       mov r13, qword [rsi + 8]
0x000138a8      0f8492000000   je 0x13940
0x000138ae      4d85ed         test r13, r13
0x000138b1      0f8e89000000   jle 0x13940
0x000138b7      4c8b7208       mov r14, qword [rdx + 8]
0x000138bb      4d85f6         test r14, r14
0x000138be      0f8eaf000000   jle 0x13973
0x000138c4      4989fc         mov r12, rdi
0x000138c7      4b8d7c3500     lea rdi, [r13 + r14]
0x000138cc      4889d3         mov rbx, rdx
0x000138cf      4889f5         mov rbp, rsi
0x000138d2      49893c24       mov qword [r12], rdi
0x000138d6      48c1e703       shl rdi, 3
0x000138da      e8a1eefeff     call sym.imp.malloc
0x000138df      4885c0         test rax, rax
0x000138e2      4989442410     mov qword [r12 + 0x10], rax
0x000138e7      0f84eb000000   je 0x139d8
0x000138ed      4c8b4b10       mov r9, qword [rbx + 0x10]
0x000138f1      4c8b4510       mov r8, qword [rbp + 0x10]
0x000138f5      31db           xor ebx, ebx
0x000138f7      31c9           xor ecx, ecx
0x000138f9      31f6           xor esi, esi
0x000138fb      eb21           jmp 0x1391e
0x000138fd      0f1f00         nop dword [rax]
0x00013900      400f94c7       sete dil
0x00013904      488954d8f8     mov qword [rax + rbx*8 - 8], rdx
0x00013909      4883c601       add rsi, 1
0x0001390d      400fb6ff       movzx edi, dil
0x00013911      4801f9         add rcx, rdi
0x00013914      4939f5         cmp r13, rsi
0x00013917      7e67           jle 0x13980
0x00013919      4939ce         cmp r14, rcx
0x0001391c      7e7a           jle 0x13998
0x0001391e      498b14f0       mov rdx, qword [r8 + rsi*8]
0x00013922      498b3cc9       mov rdi, qword [r9 + rcx*8]
0x00013926      4883c301       add rbx, 1
0x0001392a      4839fa         cmp rdx, rdi
0x0001392d      7ed1           jle 0x13900
0x0001392f      4883c101       add rcx, 1
0x00013933      48897cd8f8     mov qword [rax + rbx*8 - 8], rdi
0x00013938      ebda           jmp 0x13914
0x0001393a      660f1f440000   nop word [rax + rax]
0x00013940      4d85ed         test r13, r13
0x00013943      7f2e           jg 0x13973
0x00013945      4885d2         test rdx, rdx
0x00013948      7407           je 0x13951
0x0001394a      48837a0800     cmp qword [rdx + 8], 0
0x0001394f      7f1f           jg 0x13970
0x00013951      660fefc0       pxor xmm0, xmm0
0x00013955      48c747100000.  mov qword [rdi + 0x10], 0
0x0001395d      31c0           xor eax, eax
0x0001395f      0f2907         movaps xmmword [rdi], xmm0
0x00013962      5b             pop rbx
0x00013963      5d             pop rbp
0x00013964      415c           pop r12
0x00013966      415d           pop r13
0x00013968      415e           pop r14
0x0001396a      c3             ret
0x0001396b      0f1f440000     nop dword [rax + rax]
0x00013970      4889d6         mov rsi, rdx
0x00013973      5b             pop rbx
0x00013974      5d             pop rbp
0x00013975      415c           pop r12
0x00013977      415d           pop r13
0x00013979      415e           pop r14
0x0001397b      e980feffff     jmp sym.re_node_set_init_copy
0x00013980      4939ce         cmp r14, rcx
0x00013983      7f33           jg 0x139b8
0x00013985      49895c2408     mov qword [r12 + 8], rbx
0x0001398a      31c0           xor eax, eax
0x0001398c      5b             pop rbx
0x0001398d      5d             pop rbp
0x0001398e      415c           pop r12
0x00013990      415d           pop r13
0x00013992      415e           pop r14
0x00013994      c3             ret
0x00013995      0f1f00         nop dword [rax]
0x00013998      4929f5         sub r13, rsi
0x0001399b      488d3cd8       lea rdi, [rax + rbx*8]
0x0001399f      498d34f0       lea rsi, [r8 + rsi*8]
0x000139a3      4a8d14ed0000.  lea rdx, [r13*8]
0x000139ab      4c01eb         add rbx, r13
0x000139ae      e85dedfeff     call sym.imp.memcpy
0x000139b3      ebd0           jmp 0x13985
0x000139b5      0f1f00         nop dword [rax]
0x000139b8      4929ce         sub r14, rcx
0x000139bb      488d3cd8       lea rdi, [rax + rbx*8]
0x000139bf      498d34c9       lea rsi, [r9 + rcx*8]
0x000139c3      4a8d14f50000.  lea rdx, [r14*8]
0x000139cb      4c01f3         add rbx, r14
0x000139ce      e83dedfeff     call sym.imp.memcpy
0x000139d3      ebb0           jmp 0x13985
0x000139d5      0f1f00         nop dword [rax]
0x000139d8      b80c000000     mov eax, 0xc
0x000139dd      e980ffffff     jmp 0x13962
0x000139e2      0f1f4000       nop dword [rax]
0x000139e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_acquire_state_context:
0x000139f0      4157           push r15
0x000139f2      4156           push r14
0x000139f4      4155           push r13
0x000139f6      4154           push r12
0x000139f8      55             push rbp
0x000139f9      53             push rbx
0x000139fa      4883ec28       sub rsp, 0x28
0x000139fe      4c8b5208       mov r10, qword [rdx + 8]
0x00013a02      4d85d2         test r10, r10
0x00013a05      0f8484020000   je 0x13c8f
0x00013a0b      4189c8         mov r8d, ecx
0x00013a0e      4d85d2         test r10, r10
0x00013a11      4f8d2410       lea r12, [r8 + r10]
0x00013a15      7e15           jle 0x13a2c
0x00013a17      488b4210       mov rax, qword [rdx + 0x10]
0x00013a1b      4e8d14d0       lea r10, [rax + r10*8]
0x00013a1f      90             nop
0x00013a20      4c0320         add r12, qword [rax]
0x00013a23      4883c008       add rax, 8
0x00013a27      4939c2         cmp r10, rax
0x00013a2a      75f4           jne 0x13a20
0x00013a2c      488b86880000.  mov rax, qword [rsi + 0x88]
0x00013a33      4889d5         mov rbp, rdx
0x00013a36      894c2404       mov dword [rsp + 4], ecx
0x00013a3a      4989f5         mov r13, rsi
0x00013a3d      48897c2418     mov qword [rsp + 0x18], rdi
0x00013a42      4c21e0         and rax, r12
0x00013a45      488d1440       lea rdx, [rax + rax*2]
0x00013a49      488b4640       mov rax, qword [rsi + 0x40]
0x00013a4d      488d04d0       lea rax, [rax + rdx*8]
0x00013a51      4c8b18         mov r11, qword [rax]
0x00013a54      4d85db         test r11, r11
0x00013a57      7e57           jle 0x13ab0
0x00013a59      488b5810       mov rbx, qword [rax + 0x10]
0x00013a5d      4531d2         xor r10d, r10d
0x00013a60      4189c9         mov r9d, ecx
0x00013a63      eb0c           jmp 0x13a71
0x00013a65      0f1f00         nop dword [rax]
0x00013a68      4983c201       add r10, 1
0x00013a6c      4d39da         cmp r10, r11
0x00013a6f      743f           je 0x13ab0
0x00013a71      4e8b34d3       mov r14, qword [rbx + r10*8]
0x00013a75      4d3926         cmp qword [r14], r12
0x00013a78      75ee           jne 0x13a68
0x00013a7a      410fb64668     movzx eax, byte [r14 + 0x68]
0x00013a7f      83e00f         and eax, 0xf
0x00013a82      4439c8         cmp eax, r9d
0x00013a85      75e1           jne 0x13a68
0x00013a87      498b7e50       mov rdi, qword [r14 + 0x50]
0x00013a8b      4885ff         test rdi, rdi
0x00013a8e      74d8           je 0x13a68
0x00013a90      4889ee         mov rsi, rbp
0x00013a93      e8a8ebffff     call sym.re_node_set_compare.part.2
0x00013a98      84c0           test al, al
0x00013a9a      74cc           je 0x13a68
0x00013a9c      4883c428       add rsp, 0x28
0x00013aa0      4c89f0         mov rax, r14
0x00013aa3      5b             pop rbx
0x00013aa4      5d             pop rbp
0x00013aa5      415c           pop r12
0x00013aa7      415d           pop r13
0x00013aa9      415e           pop r14
0x00013aab      415f           pop r15
0x00013aad      c3             ret
0x00013aae      6690           nop
0x00013ab0      be01000000     mov esi, 1
0x00013ab5      bf70000000     mov edi, 0x70                           ; 'p'
0x00013aba      e8f1ebfeff     call sym.imp.calloc
0x00013abf      4885c0         test rax, rax
0x00013ac2      4989c6         mov r14, rax
0x00013ac5      0f843b010000   je 0x13c06
0x00013acb      488d4008       lea rax, [rax + 8]
0x00013acf      4889ee         mov rsi, rbp
0x00013ad2      4889c7         mov rdi, rax
0x00013ad5      4889c3         mov rbx, rax
0x00013ad8      e823fdffff     call sym.re_node_set_init_copy
0x00013add      85c0           test eax, eax
0x00013adf      0f85b8010000   jne 0x13c9d
0x00013ae5      410fb64668     movzx eax, byte [r14 + 0x68]
0x00013aea      0fb6542404     movzx edx, byte [rsp + 4]
0x00013aef      49895e50       mov qword [r14 + 0x50], rbx
0x00013af3      83e20f         and edx, 0xf
0x00013af6      83e0f0         and eax, 0xfffffff0                     ; 4294967280
0x00013af9      09d0           or eax, edx
0x00013afb      48837d0800     cmp qword [rbp + 8], 0
0x00013b00      41884668       mov byte [r14 + 0x68], al
0x00013b04      0f8ede000000   jle 0x13be8
0x00013b0a      498d4e18       lea rcx, [r14 + 0x18]
0x00013b0e      4531ff         xor r15d, r15d
0x00013b11      4c89642410     mov qword [rsp + 0x10], r12
0x00013b16      4531d2         xor r10d, r10d
0x00013b19      4d89ec         mov r12, r13
0x00013b1c      4d89fd         mov r13, r15
0x00013b1f      48894c2408     mov qword [rsp + 8], rcx
0x00013b24      4989df         mov r15, rbx
0x00013b27      660f1f840000.  nop word [rax + rax]
0x00013b30      488b4510       mov rax, qword [rbp + 0x10]
0x00013b34      4a8b04e8       mov rax, qword [rax + r13*8]
0x00013b38      48c1e004       shl rax, 4
0x00013b3c      49030424       add rax, qword [r12]
0x00013b40      0fb67008       movzx esi, byte [rax + 8]
0x00013b44      8b5808         mov ebx, dword [rax + 8]
0x00013b47      c1eb08         shr ebx, 8
0x00013b4a      6681e3ff03     and bx, 0x3ff
0x00013b4f      83fe01         cmp esi, 1
0x00013b52      0fb7fb         movzx edi, bx
0x00013b55      7504           jne 0x13b5b
0x00013b57      85ff           test edi, edi
0x00013b59      7477           je 0x13bd2
0x00013b5b      410fb65668     movzx edx, byte [r14 + 0x68]
0x00013b60      0fb6400a       movzx eax, byte [rax + 0xa]
0x00013b64      4189d1         mov r9d, edx
0x00013b67      c0e804         shr al, 4
0x00013b6a      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00013b6d      41c0e905       shr r9b, 5
0x00013b71      4409c8         or eax, r9d
0x00013b74      83e001         and eax, 1
0x00013b77      c1e005         shl eax, 5
0x00013b7a      09d0           or eax, edx
0x00013b7c      83fe02         cmp esi, 2
0x00013b7f      41884668       mov byte [r14 + 0x68], al
0x00013b83      0f84c7000000   je 0x13c50
0x00013b89      83fe04         cmp esi, 4
0x00013b8c      7507           jne 0x13b95
0x00013b8e      83c840         or eax, 0x40                            ; segment.PHDR
0x00013b91      41884668       mov byte [r14 + 0x68], al
0x00013b95      85ff           test edi, edi
0x00013b97      7439           je 0x13bd2
0x00013b99      4d3b7e50       cmp r15, qword [r14 + 0x50]
0x00013b9d      0f84bd000000   je 0x13c60
0x00013ba3      f6c301         test bl, 1
0x00013ba6      7478           je 0x13c20
0x00013ba8      f644240401     test byte [rsp + 4], 1
0x00013bad      7409           je 0x13bb8
0x00013baf      f6c302         test bl, 2
0x00013bb2      7478           je 0x13c2c
0x00013bb4      0f1f4000       nop dword [rax]
0x00013bb8      4c89ea         mov rdx, r13
0x00013bbb      4c29d2         sub rdx, r10
0x00013bbe      780e           js 0x13bce
0x00013bc0      488b742408     mov rsi, qword [rsp + 8]
0x00013bc5      498d7e10       lea rdi, [r14 + 0x10]
0x00013bc9      e852ecffff     call sym.re_node_set_remove_at.isra.4.part.5
0x00013bce      4983c201       add r10, 1
0x00013bd2      4983c501       add r13, 1
0x00013bd6      4c3b6d08       cmp r13, qword [rbp + 8]
0x00013bda      0f8c50ffffff   jl 0x13b30
0x00013be0      4d89e5         mov r13, r12
0x00013be3      4c8b642410     mov r12, qword [rsp + 0x10]
0x00013be8      4c89e2         mov rdx, r12
0x00013beb      4c89f6         mov rsi, r14
0x00013bee      4c89ef         mov rdi, r13
0x00013bf1      e89ad6ffff     call sym.register_state
0x00013bf6      85c0           test eax, eax
0x00013bf8      0f849efeffff   je 0x13a9c
0x00013bfe      4c89f7         mov rdi, r14
0x00013c01      e82ae7ffff     call sym.free_state
0x00013c06      488b442418     mov rax, qword [rsp + 0x18]
0x00013c0b      4531f6         xor r14d, r14d
0x00013c0e      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00013c14      e983feffff     jmp 0x13a9c
0x00013c19      0f1f80000000.  nop dword [rax]
0x00013c20      f6c302         test bl, 2
0x00013c23      7407           je 0x13c2c
0x00013c25      f644240401     test byte [rsp + 4], 1
0x00013c2a      758c           jne 0x13bb8
0x00013c2c      f6c310         test bl, 0x10
0x00013c2f      7407           je 0x13c38
0x00013c31      f644240402     test byte [rsp + 4], 2
0x00013c36      7480           je 0x13bb8
0x00013c38      83e340         and ebx, 0x40                           ; segment.PHDR
0x00013c3b      7495           je 0x13bd2
0x00013c3d      f644240404     test byte [rsp + 4], 4
0x00013c42      758e           jne 0x13bd2
0x00013c44      e96fffffff     jmp 0x13bb8
0x00013c49      0f1f80000000.  nop dword [rax]
0x00013c50      83c810         or eax, 0x10
0x00013c53      41884668       mov byte [r14 + 0x68], al
0x00013c57      e939ffffff     jmp 0x13b95
0x00013c5c      0f1f4000       nop dword [rax]
0x00013c60      bf18000000     mov edi, 0x18
0x00013c65      e816ebfeff     call sym.imp.malloc
0x00013c6a      4885c0         test rax, rax
0x00013c6d      49894650       mov qword [r14 + 0x50], rax
0x00013c71      748b           je 0x13bfe
0x00013c73      4889ee         mov rsi, rbp
0x00013c76      4889c7         mov rdi, rax
0x00013c79      e882fbffff     call sym.re_node_set_init_copy
0x00013c7e      85c0           test eax, eax
0x00013c80      7584           jne 0x13c06
0x00013c82      41804e6880     or byte [r14 + 0x68], 0x80              ; [0x80:1]=56
0x00013c87      4531d2         xor r10d, r10d
0x00013c8a      e914ffffff     jmp 0x13ba3
0x00013c8f      c70700000000   mov dword [rdi], 0
0x00013c95      4531f6         xor r14d, r14d
0x00013c98      e9fffdffff     jmp 0x13a9c
0x00013c9d      4c89f7         mov rdi, r14
0x00013ca0      e86bedfeff     call sym..plt.got
0x00013ca5      e95cffffff     jmp 0x13c06
0x00013caa      660f1f440000   nop word [rax + rax]
;-- re_acquire_state:
0x00013cb0      4157           push r15
0x00013cb2      4156           push r14
0x00013cb4      4155           push r13
0x00013cb6      4154           push r12
0x00013cb8      55             push rbp
0x00013cb9      53             push rbx
0x00013cba      4883ec08       sub rsp, 8
0x00013cbe      488b6a08       mov rbp, qword [rdx + 8]
0x00013cc2      4885ed         test rbp, rbp
0x00013cc5      0f84d5010000   je 0x13ea0
0x00013ccb      4885ed         test rbp, rbp
0x00013cce      7e1c           jle 0x13cec
0x00013cd0      488b4210       mov rax, qword [rdx + 0x10]
0x00013cd4      488d0ce8       lea rcx, [rax + rbp*8]
0x00013cd8      0f1f84000000.  nop dword [rax + rax]
0x00013ce0      480328         add rbp, qword [rax]
0x00013ce3      4883c008       add rax, 8
0x00013ce7      4839c1         cmp rcx, rax
0x00013cea      75f4           jne 0x13ce0
0x00013cec      488b86880000.  mov rax, qword [rsi + 0x88]
0x00013cf3      4989d6         mov r14, rdx
0x00013cf6      4989f4         mov r12, rsi
0x00013cf9      4989fd         mov r13, rdi
0x00013cfc      4821e8         and rax, rbp
0x00013cff      488d1440       lea rdx, [rax + rax*2]
0x00013d03      488b4640       mov rax, qword [rsi + 0x40]
0x00013d07      488d04d0       lea rax, [rax + rdx*8]
0x00013d0b      4c8b10         mov r10, qword [rax]
0x00013d0e      4d85d2         test r10, r10
0x00013d11      7e33           jle 0x13d46
0x00013d13      4c8b5810       mov r11, qword [rax + 0x10]
0x00013d17      4531c9         xor r9d, r9d
0x00013d1a      660f1f440000   nop word [rax + rax]
0x00013d20      4b8b1ccb       mov rbx, qword [r11 + r9*8]
0x00013d24      48392b         cmp qword [rbx], rbp
0x00013d27      7514           jne 0x13d3d
0x00013d29      488d7b08       lea rdi, [rbx + 8]
0x00013d2d      4c89f6         mov rsi, r14
0x00013d30      e80be9ffff     call sym.re_node_set_compare.part.2
0x00013d35      84c0           test al, al
0x00013d37      0f8502010000   jne 0x13e3f
0x00013d3d      4983c101       add r9, 1
0x00013d41      4d39ca         cmp r10, r9
0x00013d44      75da           jne 0x13d20
0x00013d46      be01000000     mov esi, 1
0x00013d4b      bf70000000     mov edi, 0x70                           ; 'p'
0x00013d50      e85be9feff     call sym.imp.calloc
0x00013d55      4885c0         test rax, rax
0x00013d58      4889c3         mov rbx, rax
0x00013d5b      0f8427010000   je 0x13e88
0x00013d61      4c8d7808       lea r15, [rax + 8]
0x00013d65      4c89f6         mov rsi, r14
0x00013d68      4c89ff         mov rdi, r15
0x00013d6b      e890faffff     call sym.re_node_set_init_copy
0x00013d70      85c0           test eax, eax
0x00013d72      0f8508010000   jne 0x13e80
0x00013d78      498b4608       mov rax, qword [r14 + 8]
0x00013d7c      4c897b50       mov qword [rbx + 0x50], r15
0x00013d80      4885c0         test rax, rax
0x00013d83      0f8ea4000000   jle 0x13e2d
0x00013d89      498b7610       mov rsi, qword [r14 + 0x10]
0x00013d8d      4d8b0424       mov r8, qword [r12]
0x00013d91      4c8d0cc6       lea r9, [rsi + rax*8]
0x00013d95      eb4d           jmp 0x13de4
0x00013d97      660f1f840000.  nop word [rax + rax]
0x00013da0      0fb64b68       movzx ecx, byte [rbx + 0x68]
0x00013da4      0fb6500a       movzx edx, byte [rax + 0xa]
0x00013da8      4189ca         mov r10d, ecx
0x00013dab      c0ea04         shr dl, 4
0x00013dae      83e1df         and ecx, 0xffffffdf                     ; 4294967263
0x00013db1      41c0ea05       shr r10b, 5
0x00013db5      4409d2         or edx, r10d
0x00013db8      83e201         and edx, 1
0x00013dbb      c1e205         shl edx, 5
0x00013dbe      09ca           or edx, ecx
0x00013dc0      83ff02         cmp edi, 2
0x00013dc3      885368         mov byte [rbx + 0x68], dl
0x00013dc6      0f848c000000   je 0x13e58
0x00013dcc      83ff04         cmp edi, 4
0x00013dcf      0f8593000000   jne 0x13e68
0x00013dd5      83ca40         or edx, 0x40                            ; segment.PHDR
0x00013dd8      885368         mov byte [rbx + 0x68], dl
0x00013ddb      4883c608       add rsi, 8
0x00013ddf      4939f1         cmp r9, rsi
0x00013de2      7449           je 0x13e2d
0x00013de4      488b06         mov rax, qword [rsi]
0x00013de7      48c1e004       shl rax, 4
0x00013deb      4c01c0         add rax, r8
0x00013dee      0fb67808       movzx edi, byte [rax + 8]
0x00013df2      83ff01         cmp edi, 1
0x00013df5      75a9           jne 0x13da0
0x00013df7      f7400800ff03.  test dword [rax + 8], 0x3ff00
0x00013dfe      74db           je 0x13ddb
0x00013e00      0fb65368       movzx edx, byte [rbx + 0x68]
0x00013e04      0fb6400a       movzx eax, byte [rax + 0xa]
0x00013e08      89d1           mov ecx, edx
0x00013e0a      c0e804         shr al, 4
0x00013e0d      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00013e10      c0e905         shr cl, 5
0x00013e13      09c8           or eax, ecx
0x00013e15      83e001         and eax, 1
0x00013e18      c1e005         shl eax, 5
0x00013e1b      09d0           or eax, edx
0x00013e1d      884368         mov byte [rbx + 0x68], al
0x00013e20      4883c608       add rsi, 8
0x00013e24      804b6880       or byte [rbx + 0x68], 0x80              ; [0x80:1]=56
0x00013e28      4939f1         cmp r9, rsi
0x00013e2b      75b7           jne 0x13de4
0x00013e2d      4889ea         mov rdx, rbp
0x00013e30      4889de         mov rsi, rbx
0x00013e33      4c89e7         mov rdi, r12
0x00013e36      e855d4ffff     call sym.register_state
0x00013e3b      85c0           test eax, eax
0x00013e3d      7555           jne 0x13e94
0x00013e3f      4883c408       add rsp, 8
0x00013e43      4889d8         mov rax, rbx
0x00013e46      5b             pop rbx
0x00013e47      5d             pop rbp
0x00013e48      415c           pop r12
0x00013e4a      415d           pop r13
0x00013e4c      415e           pop r14
0x00013e4e      415f           pop r15
0x00013e50      c3             ret
0x00013e51      0f1f80000000.  nop dword [rax]
0x00013e58      83ca10         or edx, 0x10
0x00013e5b      885368         mov byte [rbx + 0x68], dl
0x00013e5e      e978ffffff     jmp 0x13ddb
0x00013e63      0f1f440000     nop dword [rax + rax]
0x00013e68      83ff0c         cmp edi, 0xc
0x00013e6b      74b3           je 0x13e20
0x00013e6d      f7400800ff03.  test dword [rax + 8], 0x3ff00
0x00013e74      0f8461ffffff   je 0x13ddb
0x00013e7a      eba4           jmp 0x13e20
0x00013e7c      0f1f4000       nop dword [rax]
0x00013e80      4889df         mov rdi, rbx
0x00013e83      e888ebfeff     call sym..plt.got
0x00013e88      41c745000c00.  mov dword [r13], 0xc                    ; [0xc:4]=0
0x00013e90      31db           xor ebx, ebx
0x00013e92      ebab           jmp 0x13e3f
0x00013e94      4889df         mov rdi, rbx
0x00013e97      e894e4ffff     call sym.free_state
0x00013e9c      ebea           jmp 0x13e88
0x00013e9e      6690           nop
0x00013ea0      c70700000000   mov dword [rdi], 0
0x00013ea6      31db           xor ebx, ebx
0x00013ea8      eb95           jmp 0x13e3f
0x00013eaa      660f1f440000   nop word [rax + rax]
;-- merge_state_array:
0x00013eb0      4157           push r15
0x00013eb2      4156           push r14
0x00013eb4      4155           push r13
0x00013eb6      4154           push r12
0x00013eb8      55             push rbp
0x00013eb9      53             push rbx
0x00013eba      4883ec48       sub rsp, 0x48
0x00013ebe      64488b042528.  mov rax, qword fs:[0x28]
0x00013ec7      4889442438     mov qword [rsp + 0x38], rax
0x00013ecc      31c0           xor eax, eax
0x00013ece      4885c9         test rcx, rcx
0x00013ed1      0f8e8f000000   jle 0x13f66
0x00013ed7      488d44241c     lea rax, [rsp + 0x1c]
0x00013edc      4989fe         mov r14, rdi
0x00013edf      4889f3         mov rbx, rsi
0x00013ee2      4989d4         mov r12, rdx
0x00013ee5      4889cd         mov rbp, rcx
0x00013ee8      4531ff         xor r15d, r15d
0x00013eeb      4c8d6c2420     lea r13, [rsp + 0x20]
0x00013ef0      4889442408     mov qword [rsp + 8], rax
0x00013ef5      eb55           jmp 0x13f4c
0x00013ef7      660f1f840000.  nop word [rax + rax]
0x00013f00      4885d2         test rdx, rdx
0x00013f03      743e           je 0x13f43
0x00013f05      4883c208       add rdx, 8
0x00013f09      4883c608       add rsi, 8
0x00013f0d      4c89ef         mov rdi, r13
0x00013f10      e87bf9ffff     call sym.re_node_set_init_union
0x00013f15      85c0           test eax, eax
0x00013f17      8944241c       mov dword [rsp + 0x1c], eax
0x00013f1b      754b           jne 0x13f68
0x00013f1d      488b7c2408     mov rdi, qword [rsp + 8]
0x00013f22      4c89ea         mov rdx, r13
0x00013f25      4c89f6         mov rsi, r14
0x00013f28      e883fdffff     call sym.re_acquire_state
0x00013f2d      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00013f32      4a8904fb       mov qword [rbx + r15*8], rax
0x00013f36      e8d5eafeff     call sym..plt.got
0x00013f3b      8b44241c       mov eax, dword [rsp + 0x1c]
0x00013f3f      85c0           test eax, eax
0x00013f41      7525           jne 0x13f68
0x00013f43      4983c701       add r15, 1
0x00013f47      4c39fd         cmp rbp, r15
0x00013f4a      741a           je 0x13f66
0x00013f4c      4a8b34fb       mov rsi, qword [rbx + r15*8]
0x00013f50      4b8b14fc       mov rdx, qword [r12 + r15*8]
0x00013f54      4885f6         test rsi, rsi
0x00013f57      75a7           jne 0x13f00
0x00013f59      4a8914fb       mov qword [rbx + r15*8], rdx
0x00013f5d      4983c701       add r15, 1
0x00013f61      4c39fd         cmp rbp, r15
0x00013f64      75e6           jne 0x13f4c
0x00013f66      31c0           xor eax, eax
0x00013f68      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00013f6d      6448330c2528.  xor rcx, qword fs:[0x28]
0x00013f76      750f           jne 0x13f87
0x00013f78      4883c448       add rsp, 0x48
0x00013f7c      5b             pop rbx
0x00013f7d      5d             pop rbp
0x00013f7e      415c           pop r12
0x00013f80      415d           pop r13
0x00013f82      415e           pop r14
0x00013f84      415f           pop r15
0x00013f86      c3             ret
0x00013f87      e8d4e5feff     call sym.imp.__stack_chk_fail
0x00013f8c      0f1f4000       nop dword [rax]
;-- expand_bkref_cache:
0x00013f90      4157           push r15
0x00013f92      4156           push r14
0x00013f94      4155           push r13
0x00013f96      4154           push r12
0x00013f98      4989d4         mov r12, rdx
0x00013f9b      55             push rbp
0x00013f9c      53             push rbx
0x00013f9d      4889fb         mov rbx, rdi
0x00013fa0      4889f5         mov rbp, rsi
0x00013fa3      31f6           xor esi, esi
0x00013fa5      4883ec78       sub rsp, 0x78
0x00013fa9      488bbfc80000.  mov rdi, qword [rdi + 0xc8]
0x00013fb0      64488b042528.  mov rax, qword fs:[0x28]
0x00013fb9      4889442468     mov qword [rsp + 0x68], rax
0x00013fbe      31c0           xor eax, eax
0x00013fc0      48894c2420     mov qword [rsp + 0x20], rcx
0x00013fc5      448944242c     mov dword [rsp + 0x2c], r8d
0x00013fca      4889fa         mov rdx, rdi
0x00013fcd      4839d6         cmp rsi, rdx
0x00013fd0      7d55           jge 0x14027
0x00013fd2      488d0416       lea rax, [rsi + rdx]
0x00013fd6      4c8b83d80000.  mov r8, qword [rbx + 0xd8]
0x00013fdd      4889c1         mov rcx, rax
0x00013fe0      48c1e93f       shr rcx, 0x3f
0x00013fe4      4801c1         add rcx, rax
0x00013fe7      48d1f9         sar rcx, 1
0x00013fea      488d0489       lea rax, [rcx + rcx*4]
0x00013fee      4d3b64c008     cmp r12, qword [r8 + rax*8 + 8]
0x00013ff3      7e2d           jle 0x14022
0x00013ff5      e97e000000     jmp 0x14078
0x00013ffa      660f1f440000   nop word [rax + rax]
0x00014000      488d140e       lea rdx, [rsi + rcx]
0x00014004      4889d0         mov rax, rdx
0x00014007      48c1e83f       shr rax, 0x3f
0x0001400b      4801d0         add rax, rdx
0x0001400e      48d1f8         sar rax, 1
0x00014011      488d1480       lea rdx, [rax + rax*4]
0x00014015      4989c1         mov r9, rax
0x00014018      4d3b64d008     cmp r12, qword [r8 + rdx*8 + 8]
0x0001401d      7f61           jg 0x14080
0x0001401f      4889c1         mov rcx, rax
0x00014022      4839ce         cmp rsi, rcx
0x00014025      7cd9           jl 0x14000
0x00014027      4839f7         cmp rdi, rsi
0x0001402a      7e21           jle 0x1404d
0x0001402c      488b8bd80000.  mov rcx, qword [rbx + 0xd8]
0x00014033      488d04b6       lea rax, [rsi + rsi*4]
0x00014037      48c1e003       shl rax, 3
0x0001403b      4c39640108     cmp qword [rcx + rax + 8], r12
0x00014040      4889442430     mov qword [rsp + 0x30], rax
0x00014045      7506           jne 0x1404d
0x00014047      4883feff       cmp rsi, 0xffffffffffffffff
0x0001404b      7543           jne 0x14090
0x0001404d      31c0           xor eax, eax
0x0001404f      488b5c2468     mov rbx, qword [rsp + 0x68]
0x00014054      6448331c2528.  xor rbx, qword fs:[0x28]
0x0001405d      0f85c6020000   jne 0x14329
0x00014063      4883c478       add rsp, 0x78
0x00014067      5b             pop rbx
0x00014068      5d             pop rbp
0x00014069      415c           pop r12
0x0001406b      415d           pop r13
0x0001406d      415e           pop r14
0x0001406f      415f           pop r15
0x00014071      c3             ret
0x00014072      660f1f440000   nop word [rax + rax]
0x00014078      4989c9         mov r9, rcx
0x0001407b      4889d1         mov rcx, rdx
0x0001407e      6690           nop
0x00014080      498d7101       lea rsi, [r9 + 1]
0x00014084      4889ca         mov rdx, rcx
0x00014087      e941ffffff     jmp 0x13fcd
0x0001408c      0f1f4000       nop dword [rax]
0x00014090      488d4510       lea rax, [rbp + 0x10]
0x00014094      4c8bab980000.  mov r13, qword [rbx + 0x98]
0x0001409b      48890424       mov qword [rsp], rax
0x0001409f      488d44244c     lea rax, [rsp + 0x4c]
0x000140a4      4889442438     mov qword [rsp + 0x38], rax
0x000140a9      488d442450     lea rax, [rsp + 0x50]
0x000140ae      4889442410     mov qword [rsp + 0x10], rax
0x000140b3      488b442430     mov rax, qword [rsp + 0x30]
0x000140b8      4c8d3c01       lea r15, [rcx + rax]
0x000140bc      e9d7000000     jmp 0x14198
0x000140c1      0f1f80000000.  nop dword [rax]
0x000140c8      498b4518       mov rax, qword [r13 + 0x18]
0x000140cc      4a8b0cd0       mov rcx, qword [rax + r10*8]
0x000140d0      4c8b93b80000.  mov r10, qword [rbx + 0xb8]
0x000140d7      4a8d04f50000.  lea rax, [r14*8]
0x000140df      4889442418     mov qword [rsp + 0x18], rax
0x000140e4      4901c2         add r10, rax
0x000140e7      48894c2408     mov qword [rsp + 8], rcx
0x000140ec      4d8b0a         mov r9, qword [r10]
0x000140ef      4d85c9         test r9, r9
0x000140f2      0f8488010000   je 0x14280
0x000140f8      498b7910       mov rdi, qword [r9 + 0x10]
0x000140fc      498d7118       lea rsi, [r9 + 0x18]
0x00014100      4889ca         mov rdx, rcx
0x00014103      e898e5ffff     call sym.re_node_set_contains.isra.3
0x00014108      4885c0         test rax, rax
0x0001410b      757c           jne 0x14189
0x0001410d      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00014112      498d7108       lea rsi, [r9 + 8]
0x00014116      e8e5f6ffff     call sym.re_node_set_init_copy
0x0001411b      488b742408     mov rsi, qword [rsp + 8]
0x00014120      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00014125      8944244c       mov dword [rsp + 0x4c], eax
0x00014129      e832d0ffff     call sym.re_node_set_insert
0x0001412e      8b54244c       mov edx, dword [rsp + 0x4c]
0x00014132      85d2           test edx, edx
0x00014134      0f859c010000   jne 0x142d6
0x0001413a      3c01           cmp al, 1
0x0001413c      0f8594010000   jne 0x142d6
0x00014142      4c8b542418     mov r10, qword [rsp + 0x18]
0x00014147      4c0393b80000.  add r10, qword [rbx + 0xb8]
0x0001414e      488b542410     mov rdx, qword [rsp + 0x10]
0x00014153      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00014158      4c89ee         mov rsi, r13
0x0001415b      4c89542408     mov qword [rsp + 8], r10
0x00014160      e84bfbffff     call sym.re_acquire_state
0x00014165      4c8b542408     mov r10, qword [rsp + 8]
0x0001416a      488b7c2460     mov rdi, qword [rsp + 0x60]
0x0001416f      498902         mov qword [r10], rax
0x00014172      e899e8feff     call sym..plt.got
0x00014177      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x0001417e      4a833cf000     cmp qword [rax + r14*8], 0
0x00014183      0f843c010000   je 0x142c5
0x00014189      4983c728       add r15, 0x28
0x0001418d      41807ff800     cmp byte [r15 - 8], 0
0x00014192      0f84b5feffff   je 0x1404d
0x00014198      4d8b17         mov r10, qword [r15]
0x0001419b      4c8b4d08       mov r9, qword [rbp + 8]
0x0001419f      488b3424       mov rsi, qword [rsp]
0x000141a3      4c89d2         mov rdx, r10
0x000141a6      4c89cf         mov rdi, r9
0x000141a9      e8f2e4ffff     call sym.re_node_set_contains.isra.3
0x000141ae      4885c0         test rax, rax
0x000141b1      74d6           je 0x14189
0x000141b3      4d8b4718       mov r8, qword [r15 + 0x18]
0x000141b7      4d01e0         add r8, r12
0x000141ba      4d89c6         mov r14, r8
0x000141bd      4d2b7710       sub r14, qword [r15 + 0x10]
0x000141c1      4d39f4         cmp r12, r14
0x000141c4      0f85fefeffff   jne 0x140c8
0x000141ca      498b4d28       mov rcx, qword [r13 + 0x28]
0x000141ce      4b8d0452       lea rax, [r10 + r10*2]
0x000141d2      488b3424       mov rsi, qword [rsp]
0x000141d6      4c89cf         mov rdi, r9
0x000141d9      488d04c1       lea rax, [rcx + rax*8]
0x000141dd      488b4010       mov rax, qword [rax + 0x10]
0x000141e1      4c8b30         mov r14, qword [rax]
0x000141e4      4c89f2         mov rdx, r14
0x000141e7      e8b4e4ffff     call sym.re_node_set_contains.isra.3
0x000141ec      4885c0         test rax, rax
0x000141ef      7598           jne 0x14189
0x000141f1      bf08000000     mov edi, 8
0x000141f6      48c744245001.  mov qword [rsp + 0x50], 1
0x000141ff      48c744245801.  mov qword [rsp + 0x58], 1
0x00014208      e873e5feff     call sym.imp.malloc
0x0001420d      4885c0         test rax, rax
0x00014210      4889442460     mov qword [rsp + 0x60], rax
0x00014215      0f84f2000000   je 0x1430d
0x0001421b      4c8930         mov qword [rax], r14
0x0001421e      31c0           xor eax, eax
0x00014220      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00014225      488b542420     mov rdx, qword [rsp + 0x20]
0x0001422a      4c89ef         mov rdi, r13
0x0001422d      8b4c242c       mov ecx, dword [rsp + 0x2c]
0x00014231      8944244c       mov dword [rsp + 0x4c], eax
0x00014235      4c89fe         mov rsi, r15
0x00014238      e813eeffff     call sym.check_arrival_expand_ecl
0x0001423d      4c89fe         mov rsi, r15
0x00014240      4889ef         mov rdi, rbp
0x00014243      4189c6         mov r14d, eax
0x00014246      e875e9ffff     call sym.re_node_set_merge
0x0001424b      488b7c2460     mov rdi, qword [rsp + 0x60]
0x00014250      4189c7         mov r15d, eax
0x00014253      e8b8e7feff     call sym..plt.got
0x00014258      8b44244c       mov eax, dword [rsp + 0x4c]
0x0001425c      4489f2         mov edx, r14d
0x0001425f      4409fa         or edx, r15d
0x00014262      09c2           or edx, eax
0x00014264      0f858c000000   jne 0x142f6
0x0001426a      488b8bd80000.  mov rcx, qword [rbx + 0xd8]
0x00014271      e93dfeffff     jmp 0x140b3
0x00014276      662e0f1f8400.  nop word cs:[rax + rax]
0x00014280      bf08000000     mov edi, 8
0x00014285      4c89542418     mov qword [rsp + 0x18], r10
0x0001428a      48c744245001.  mov qword [rsp + 0x50], 1
0x00014293      48c744245801.  mov qword [rsp + 0x58], 1
0x0001429c      e8dfe4feff     call sym.imp.malloc
0x000142a1      4885c0         test rax, rax
0x000142a4      4889442460     mov qword [rsp + 0x60], rax
0x000142a9      7441           je 0x142ec
0x000142ab      488b7c2408     mov rdi, qword [rsp + 8]
0x000142b0      c744244c0000.  mov dword [rsp + 0x4c], 0
0x000142b8      4c8b542418     mov r10, qword [rsp + 0x18]
0x000142bd      488938         mov qword [rax], rdi
0x000142c0      e989feffff     jmp 0x1414e
0x000142c5      8b44244c       mov eax, dword [rsp + 0x4c]
0x000142c9      85c0           test eax, eax
0x000142cb      0f84b8feffff   je 0x14189
0x000142d1      e979fdffff     jmp 0x1404f
0x000142d6      488b7c2460     mov rdi, qword [rsp + 0x60]
0x000142db      e830e7feff     call sym..plt.got
0x000142e0      8b44244c       mov eax, dword [rsp + 0x4c]
0x000142e4      85c0           test eax, eax
0x000142e6      0f8563fdffff   jne 0x1404f
0x000142ec      b80c000000     mov eax, 0xc
0x000142f1      e959fdffff     jmp 0x1404f
0x000142f6      85c0           test eax, eax
0x000142f8      0f8551fdffff   jne 0x1404f
0x000142fe      4585f6         test r14d, r14d
0x00014301      4489f0         mov eax, r14d
0x00014304      410f44c7       cmove eax, r15d
0x00014308      e942fdffff     jmp 0x1404f
0x0001430d      48c744245800.  mov qword [rsp + 0x58], 0
0x00014316      48c744245000.  mov qword [rsp + 0x50], 0
0x0001431f      b80c000000     mov eax, 0xc
0x00014324      e9f7feffff     jmp 0x14220
0x00014329      e832e2feff     call sym.imp.__stack_chk_fail
0x0001432e      6690           nop
;-- check_subexp_matching_top.isra.18:
0x00014330      4157           push r15
0x00014332      4156           push r14
0x00014334      4155           push r13
0x00014336      4154           push r12
0x00014338      55             push rbp
0x00014339      53             push rbx
0x0001433a      4883ec28       sub rsp, 0x28
0x0001433e      48833e00       cmp qword [rsi], 0
0x00014342      4c8baf980000.  mov r13, qword [rdi + 0x98]
0x00014349      0f8ec1000000   jle 0x14410
0x0001434f      4989d6         mov r14, rdx
0x00014352      4989f4         mov r12, rsi
0x00014355      4989ff         mov r15, rdi
0x00014358      31db           xor ebx, ebx
0x0001435a      eb12           jmp 0x1436e
0x0001435c      0f1f4000       nop dword [rax]
0x00014360      4883c301       add rbx, 1
0x00014364      493b1c24       cmp rbx, qword [r12]
0x00014368      0f8da2000000   jge 0x14410
0x0001436e      498b06         mov rax, qword [r14]
0x00014371      488b2cd8       mov rbp, qword [rax + rbx*8]
0x00014375      4889e8         mov rax, rbp
0x00014378      48c1e004       shl rax, 4
0x0001437c      49034500       add rax, qword [r13]
0x00014380      80780808       cmp byte [rax + 8], 8
0x00014384      75da           jne 0x14360
0x00014386      488b00         mov rax, qword [rax]
0x00014389      4883f83f       cmp rax, 0x3f
0x0001438d      7fd1           jg 0x14360
0x0001438f      498bb5a00000.  mov rsi, qword [r13 + 0xa0]
0x00014396      480fa3c6       bt rsi, rax
0x0001439a      73c4           jae 0x14360
0x0001439c      4d8b87e80000.  mov r8, qword [r15 + 0xe8]
0x000143a3      4d3b87f00000.  cmp r8, qword [r15 + 0xf0]
0x000143aa      4d8b8ff80000.  mov r9, qword [r15 + 0xf8]
0x000143b1      7475           je 0x14428
0x000143b3      be30000000     mov esi, 0x30                           ; '0'
0x000143b8      bf01000000     mov edi, 1
0x000143bd      4c894c2410     mov qword [rsp + 0x10], r9
0x000143c2      4c89442408     mov qword [rsp + 8], r8
0x000143c7      48894c2418     mov qword [rsp + 0x18], rcx
0x000143cc      e8dfe2feff     call sym.imp.calloc
0x000143d1      4c8b442408     mov r8, qword [rsp + 8]
0x000143d6      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x000143db      4885c0         test rax, rax
0x000143de      4b8904c1       mov qword [r9 + r8*8], rax
0x000143e2      743d           je 0x14421
0x000143e4      4983c001       add r8, 1
0x000143e8      4883c301       add rbx, 1
0x000143ec      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000143f1      4d8987e80000.  mov qword [r15 + 0xe8], r8
0x000143f8      493b1c24       cmp rbx, qword [r12]
0x000143fc      48896808       mov qword [rax + 8], rbp
0x00014400      488908         mov qword [rax], rcx
0x00014403      0f8c65ffffff   jl 0x1436e
0x00014409      0f1f80000000.  nop dword [rax]
0x00014410      31c0           xor eax, eax
0x00014412      4883c428       add rsp, 0x28
0x00014416      5b             pop rbx
0x00014417      5d             pop rbp
0x00014418      415c           pop r12
0x0001441a      415d           pop r13
0x0001441c      415e           pop r14
0x0001441e      415f           pop r15
0x00014420      c3             ret
0x00014421      b80c000000     mov eax, 0xc
0x00014426      ebea           jmp 0x14412
0x00014428      4b8d0400       lea rax, [r8 + r8]
0x0001442c      4c89c6         mov rsi, r8
0x0001442f      4c89cf         mov rdi, r9
0x00014432      48c1e604       shl rsi, 4
0x00014436      48894c2408     mov qword [rsp + 8], rcx
0x0001443b      4889442410     mov qword [rsp + 0x10], rax
0x00014440      e8ebe3feff     call sym.imp.realloc
0x00014445      4885c0         test rax, rax
0x00014448      4989c1         mov r9, rax
0x0001444b      488b4c2408     mov rcx, qword [rsp + 8]
0x00014450      74cf           je 0x14421
0x00014452      498987f80000.  mov qword [r15 + 0xf8], rax
0x00014459      488b442410     mov rax, qword [rsp + 0x10]
0x0001445e      4d8b87e80000.  mov r8, qword [r15 + 0xe8]
0x00014465      498987f00000.  mov qword [r15 + 0xf0], rax
0x0001446c      e942ffffff     jmp 0x143b3
0x00014471      0f1f440000     nop dword [rax + rax]
0x00014476      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_string_context_at:
0x00014480      55             push rbp
0x00014481      53             push rbx
0x00014482      4889fd         mov rbp, rdi
0x00014485      4883ec08       sub rsp, 8
0x00014489      4885f6         test rsi, rsi
0x0001448c      7852           js 0x144e0
0x0001448e      48397758       cmp qword [rdi + 0x58], rsi
0x00014492      0f84a0000000   je 0x14538
0x00014498      83bf90000000.  cmp dword [rdi + 0x90], 1
0x0001449f      7e4f           jle 0x144f0
0x000144a1      488b4710       mov rax, qword [rdi + 0x10]
0x000144a5      eb13           jmp 0x144ba
0x000144a7      660f1f840000.  nop word [rax + rax]
0x000144b0      4883ee01       sub rsi, 1
0x000144b4      4883feff       cmp rsi, 0xffffffffffffffff
0x000144b8      7426           je 0x144e0
0x000144ba      8b1cb0         mov ebx, dword [rax + rsi*4]
0x000144bd      83fbff         cmp ebx, 0xffffffff
0x000144c0      74ee           je 0x144b0
0x000144c2      80bd8e000000.  cmp byte [rbp + 0x8e], 0
0x000144c9      757d           jne 0x14548
0x000144cb      31c0           xor eax, eax
0x000144cd      83fb0a         cmp ebx, 0xa
0x000144d0      744a           je 0x1451c
0x000144d2      4883c408       add rsp, 8
0x000144d6      5b             pop rbx
0x000144d7      5d             pop rbp
0x000144d8      c3             ret
0x000144d9      0f1f80000000.  nop dword [rax]
0x000144e0      8b4570         mov eax, dword [rbp + 0x70]
0x000144e3      4883c408       add rsp, 8
0x000144e7      5b             pop rbx
0x000144e8      5d             pop rbp
0x000144e9      c3             ret
0x000144ea      660f1f440000   nop word [rax + rax]
0x000144f0      488b4708       mov rax, qword [rdi + 8]
0x000144f4      488b8f800000.  mov rcx, qword [rdi + 0x80]
0x000144fb      0fb60430       movzx eax, byte [rax + rsi]
0x000144ff      4889c2         mov rdx, rax
0x00014502      48c1f806       sar rax, 6
0x00014506      488b0cc1       mov rcx, qword [rcx + rax*8]
0x0001450a      b801000000     mov eax, 1
0x0001450f      480fa3d1       bt rcx, rdx
0x00014513      72bd           jb 0x144d2
0x00014515      31c0           xor eax, eax
0x00014517      80fa0a         cmp dl, 0xa
0x0001451a      75b6           jne 0x144d2
0x0001451c      31c0           xor eax, eax
0x0001451e      80bd8d000000.  cmp byte [rbp + 0x8d], 0
0x00014525      0f95c0         setne al
0x00014528      4883c408       add rsp, 8
0x0001452c      01c0           add eax, eax
0x0001452e      5b             pop rbx
0x0001452f      5d             pop rbp
0x00014530      c3             ret
0x00014531      0f1f80000000.  nop dword [rax]
0x00014538      83e202         and edx, 2
0x0001453b      83fa01         cmp edx, 1
0x0001453e      19c0           sbb eax, eax
0x00014540      83e002         and eax, 2
0x00014543      83c008         add eax, 8
0x00014546      eb8a           jmp 0x144d2
0x00014548      89df           mov edi, ebx
0x0001454a      e821e2feff     call sym.imp.iswalnum
0x0001454f      85c0           test eax, eax
0x00014551      7509           jne 0x1455c
0x00014553      83fb5f         cmp ebx, 0x5f
0x00014556      0f856fffffff   jne 0x144cb
0x0001455c      b801000000     mov eax, 1
0x00014561      e96cffffff     jmp 0x144d2
0x00014566      662e0f1f8400.  nop word cs:[rax + rax]
;-- check_node_accept:
0x00014570      488b4708       mov rax, qword [rdi + 8]
0x00014574      0fb60c10       movzx ecx, byte [rax + rdx]
0x00014578      0fb64608       movzx eax, byte [rsi + 8]
0x0001457c      3c03           cmp al, 3
0x0001457e      0f84b4000000   je 0x14638
0x00014584      0f8696000000   jbe 0x14620
0x0001458a      3c05           cmp al, 5
0x0001458c      7412           je 0x145a0
0x0001458e      3c07           cmp al, 7
0x00014590      0f859a000000   jne 0x14630
0x00014596      31c0           xor eax, eax
0x00014598      84c9           test cl, cl
0x0001459a      0f888a000000   js 0x1462a
0x000145a0      80f90a         cmp cl, 0xa
0x000145a3      0f84bf000000   je 0x14668
0x000145a9      84c9           test cl, cl
0x000145ab      7513           jne 0x145c0
0x000145ad      488b8f980000.  mov rcx, qword [rdi + 0x98]
0x000145b4      31c0           xor eax, eax
0x000145b6      f681d8000000.  test byte [rcx + 0xd8], 0x80
0x000145bd      756b           jne 0x1462a
0x000145bf      90             nop
0x000145c0      53             push rbx
0x000145c1      8b5e08         mov ebx, dword [rsi + 8]
0x000145c4      b801000000     mov eax, 1
0x000145c9      f7c300ff0300   test ebx, 0x3ff00
0x000145cf      744b           je 0x1461c
0x000145d1      4889d6         mov rsi, rdx
0x000145d4      8b97a0000000   mov edx, dword [rdi + 0xa0]
0x000145da      c1eb08         shr ebx, 8
0x000145dd      e89efeffff     call sym.re_string_context_at
0x000145e2      89d9           mov ecx, ebx
0x000145e4      89c2           mov edx, eax
0x000145e6      6681e1ff03     and cx, 0x3ff
0x000145eb      f6c304         test bl, 4
0x000145ee      7468           je 0x14658
0x000145f0      31c0           xor eax, eax
0x000145f2      f6c201         test dl, 1
0x000145f5      7425           je 0x1461c
0x000145f7      83e308         and ebx, 8
0x000145fa      7520           jne 0x1461c
0x000145fc      f6c120         test cl, 0x20                           ; "@"
0x000145ff      7407           je 0x14608
0x00014601      31c0           xor eax, eax
0x00014603      f6c202         test dl, 2
0x00014606      7414           je 0x1461c
0x00014608      c1ea03         shr edx, 3
0x0001460b      b801000000     mov eax, 1
0x00014610      83e201         and edx, 1
0x00014613      81e180000000   and ecx, 0x80
0x00014619      0f45c2         cmovne eax, edx
0x0001461c      5b             pop rbx
0x0001461d      c3             ret
0x0001461e      6690           nop
0x00014620      3c01           cmp al, 1
0x00014622      750c           jne 0x14630
0x00014624      31c0           xor eax, eax
0x00014626      380e           cmp byte [rsi], cl
0x00014628      7496           je 0x145c0
0x0001462a      f3c3           ret
0x0001462c      0f1f4000       nop dword [rax]
0x00014630      31c0           xor eax, eax
0x00014632      c3             ret
0x00014633      0f1f440000     nop dword [rax + rax]
0x00014638      4c8b06         mov r8, qword [rsi]
0x0001463b      0fb6c1         movzx eax, cl
0x0001463e      48c1f806       sar rax, 6
0x00014642      4d8b04c0       mov r8, qword [r8 + rax*8]
0x00014646      31c0           xor eax, eax
0x00014648      490fa3c8       bt r8, rcx
0x0001464c      0f826effffff   jb 0x145c0
0x00014652      f3c3           ret
0x00014654      0f1f4000       nop dword [rax]
0x00014658      83e308         and ebx, 8
0x0001465b      749f           je 0x145fc
0x0001465d      a801           test al, 1
0x0001465f      749b           je 0x145fc
0x00014661      31c0           xor eax, eax
0x00014663      5b             pop rbx
0x00014664      c3             ret
0x00014665      0f1f00         nop dword [rax]
0x00014668      488b8f980000.  mov rcx, qword [rdi + 0x98]
0x0001466f      31c0           xor eax, eax
0x00014671      f681d8000000.  test byte [rcx + 0xd8], 0x40
0x00014678      0f8542ffffff   jne 0x145c0
0x0001467e      f3c3           ret
;-- check_halt_state_context.isra.20:
0x00014680      4154           push r12
0x00014682      4989d4         mov r12, rdx
0x00014685      55             push rbp
0x00014686      53             push rbx
0x00014687      8b97a0000000   mov edx, dword [rdi + 0xa0]
0x0001468d      4889f3         mov rbx, rsi
0x00014690      4889ce         mov rsi, rcx
0x00014693      4889fd         mov rbp, rdi
0x00014696      e8e5fdffff     call sym.re_string_context_at
0x0001469b      4885db         test rbx, rbx
0x0001469e      0f8ea4000000   jle 0x14748
0x000146a4      488b95980000.  mov rdx, qword [rbp + 0x98]
0x000146ab      4189c3         mov r11d, eax
0x000146ae      89c5           mov ebp, eax
0x000146b0      83e001         and eax, 1
0x000146b3      4d8b0c24       mov r9, qword [r12]
0x000146b7      31f6           xor esi, esi
0x000146b9      83e508         and ebp, 8
0x000146bc      4183e302       and r11d, 2
0x000146c0      4189c2         mov r10d, eax
0x000146c3      4c8b02         mov r8, qword [rdx]
0x000146c6      eb11           jmp 0x146d9
0x000146c8      0f1f84000000.  nop dword [rax + rax]
0x000146d0      4883c601       add rsi, 1
0x000146d4      4839de         cmp rsi, rbx
0x000146d7      746f           je 0x14748
0x000146d9      498b04f1       mov rax, qword [r9 + rsi*8]
0x000146dd      4889c2         mov rdx, rax
0x000146e0      48c1e204       shl rdx, 4
0x000146e4      4c01c2         add rdx, r8
0x000146e7      8b4a08         mov ecx, dword [rdx + 8]
0x000146ea      c1e908         shr ecx, 8
0x000146ed      89cf           mov edi, ecx
0x000146ef      6681e7ff03     and di, 0x3ff
0x000146f4      807a0802       cmp byte [rdx + 8], 2
0x000146f8      75d6           jne 0x146d0
0x000146fa      6685ff         test di, di
0x000146fd      7426           je 0x14725
0x000146ff      f6c104         test cl, 4
0x00014702      742c           je 0x14730
0x00014704      4585d2         test r10d, r10d
0x00014707      74c7           je 0x146d0
0x00014709      83e108         and ecx, 8
0x0001470c      75c2           jne 0x146d0
0x0001470e      40f6c720       test dil, 0x20                          ; "@"
0x00014712      7405           je 0x14719
0x00014714      4585db         test r11d, r11d
0x00014717      74b7           je 0x146d0
0x00014719      81e780000000   and edi, 0x80
0x0001471f      7404           je 0x14725
0x00014721      85ed           test ebp, ebp
0x00014723      74ab           je 0x146d0
0x00014725      5b             pop rbx
0x00014726      5d             pop rbp
0x00014727      415c           pop r12
0x00014729      c3             ret
0x0001472a      660f1f440000   nop word [rax + rax]
0x00014730      83e108         and ecx, 8
0x00014733      74d9           je 0x1470e
0x00014735      4585d2         test r10d, r10d
0x00014738      7596           jne 0x146d0
0x0001473a      40f6c720       test dil, 0x20                          ; "@"
0x0001473e      74d9           je 0x14719
0x00014740      ebd2           jmp 0x14714
0x00014742      660f1f440000   nop word [rax + rax]
0x00014748      5b             pop rbx
0x00014749      31c0           xor eax, eax
0x0001474b      5d             pop rbp
0x0001474c      415c           pop r12
0x0001474e      c3             ret
0x0001474f      90             nop
;-- re_string_reconstruct:
0x00014750      4157           push r15
0x00014752      4156           push r14
0x00014754      4989f7         mov r15, rsi
0x00014757      4155           push r13
0x00014759      4154           push r12
0x0001475b      4189d2         mov r10d, edx
0x0001475e      55             push rbp
0x0001475f      53             push rbx
0x00014760      4889f5         mov rbp, rsi
0x00014763      4889fb         mov rbx, rdi
0x00014766      4883ec48       sub rsp, 0x48
0x0001476a      64488b042528.  mov rax, qword fs:[0x28]
0x00014773      4889442438     mov qword [rsp + 0x38], rax
0x00014778      31c0           xor eax, eax
0x0001477a      488b4728       mov rax, qword [rdi + 0x28]
0x0001477e      4829c5         sub rbp, rax
0x00014781      4839f0         cmp rax, rsi
0x00014784      7e60           jle 0x147e6
0x00014786      83bf90000000.  cmp dword [rdi + 0x90], 1
0x0001478d      0f8f2d010000   jg 0x148c0
0x00014793      488b4350       mov rax, qword [rbx + 0x50]
0x00014797      48c743300000.  mov qword [rbx + 0x30], 0
0x0001479f      4c89fd         mov rbp, r15
0x000147a2      48c743280000.  mov qword [rbx + 0x28], 0
0x000147aa      48c743380000.  mov qword [rbx + 0x38], 0
0x000147b2      c6838c000000.  mov byte [rbx + 0x8c], 0
0x000147b9      48894358       mov qword [rbx + 0x58], rax
0x000147bd      488b4360       mov rax, qword [rbx + 0x60]
0x000147c1      48894368       mov qword [rbx + 0x68], rax
0x000147c5      4489d0         mov eax, r10d
0x000147c8      83e001         and eax, 1
0x000147cb      83f801         cmp eax, 1
0x000147ce      19c0           sbb eax, eax
0x000147d0      83e002         and eax, 2
0x000147d3      83c004         add eax, 4
0x000147d6      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x000147dd      894370         mov dword [rbx + 0x70], eax
0x000147e0      0f84ca000000   je 0x148b0
0x000147e6      4885ed         test rbp, rbp
0x000147e9      7463           je 0x1484e
0x000147eb      488b4338       mov rax, qword [rbx + 0x38]
0x000147ef      0fb6938c0000.  movzx edx, byte [rbx + 0x8c]
0x000147f6      4c8b4330       mov r8, qword [rbx + 0x30]
0x000147fa      4839e8         cmp rax, rbp
0x000147fd      0f8e1d010000   jle 0x14920
0x00014803      84d2           test dl, dl
0x00014805      0f850d020000   jne 0x14a18
0x0001480b      488d75ff       lea rsi, [rbp - 1]
0x0001480f      4489d2         mov edx, r10d
0x00014812      4889df         mov rdi, rbx
0x00014815      4c890424       mov qword [rsp], r8
0x00014819      e862fcffff     call sym.re_string_context_at
0x0001481e      4c8b0424       mov r8, qword [rsp]
0x00014822      894370         mov dword [rbx + 0x70], eax
0x00014825      4929e8         sub r8, rbp
0x00014828      83bb90000000.  cmp dword [rbx + 0x90], 1
0x0001482f      0f8f9b000000   jg 0x148d0
0x00014835      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0001483c      0f859e030000   jne 0x14be0
0x00014842      48296b38       sub qword [rbx + 0x38], rbp
0x00014846      4c894330       mov qword [rbx + 0x30], r8
0x0001484a      48016b08       add qword [rbx + 8], rbp
0x0001484e      488b4358       mov rax, qword [rbx + 0x58]
0x00014852      48296b68       sub qword [rbx + 0x68], rbp
0x00014856      4c897b28       mov qword [rbx + 0x28], r15
0x0001485a      4829e8         sub rax, rbp
0x0001485d      83bb90000000.  cmp dword [rbx + 0x90], 1
0x00014864      48894358       mov qword [rbx + 0x58], rax
0x00014868      0f8e9a000000   jle 0x14908
0x0001486e      80bb88000000.  cmp byte [rbx + 0x88], 0
0x00014875      4889df         mov rdi, rbx
0x00014878      747e           je 0x148f8
0x0001487a      e841cdffff     call sym.build_wcs_upper_buffer
0x0001487f      85c0           test eax, eax
0x00014881      750a           jne 0x1488d
0x00014883      48c743480000.  mov qword [rbx + 0x48], 0
0x0001488b      31c0           xor eax, eax
0x0001488d      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00014892      6448330c2528.  xor rcx, qword fs:[0x28]
0x0001489b      0f8549060000   jne 0x14eea
0x000148a1      4883c448       add rsp, 0x48
0x000148a5      5b             pop rbx
0x000148a6      5d             pop rbp
0x000148a7      415c           pop r12
0x000148a9      415d           pop r13
0x000148ab      415e           pop r14
0x000148ad      415f           pop r15
0x000148af      c3             ret
0x000148b0      488b03         mov rax, qword [rbx]
0x000148b3      48894308       mov qword [rbx + 8], rax
0x000148b7      e92affffff     jmp 0x147e6
0x000148bc      0f1f4000       nop dword [rax]
0x000148c0      48c747200000.  mov qword [rdi + 0x20], 0
0x000148c8      e9c6feffff     jmp 0x14793
0x000148cd      0f1f00         nop dword [rax]
0x000148d0      488b7b10       mov rdi, qword [rbx + 0x10]
0x000148d4      4a8d14850000.  lea rdx, [r8*4]
0x000148dc      488d34af       lea rsi, [rdi + rbp*4]
0x000148e0      e8abdffeff     call sym.imp.memmove
0x000148e5      4c8b4330       mov r8, qword [rbx + 0x30]
0x000148e9      4929e8         sub r8, rbp
0x000148ec      e944ffffff     jmp 0x14835
0x000148f1      0f1f80000000.  nop dword [rax]
0x000148f8      e8f3caffff     call sym.build_wcs_buffer
0x000148fd      e981ffffff     jmp 0x14883
0x00014902      660f1f440000   nop word [rax + rax]
0x00014908      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0001490f      0f85ab030000   jne 0x14cc0
0x00014915      48894330       mov qword [rbx + 0x30], rax
0x00014919      e965ffffff     jmp 0x14883
0x0001491e      6690           nop
0x00014920      84d2           test dl, dl
0x00014922      0f85a5040000   jne 0x14dcd
0x00014928      486393900000.  movsxd rdx, dword [rbx + 0x90]
0x0001492f      48c743300000.  mov qword [rbx + 0x30], 0
0x00014937      4c8b5b28       mov r11, qword [rbx + 0x28]
0x0001493b      83fa01         cmp edx, 1
0x0001493e      0f8ee4030000   jle 0x14d28
0x00014944      80bb89000000.  cmp byte [rbx + 0x89], 0
0x0001494b      0f85b7020000   jne 0x14c08
0x00014951      4d8d3403       lea r14, [r11 + rax]
0x00014955      4d39f7         cmp r15, r14
0x00014958      0f8e41040000   jle 0x14d9f
0x0001495e      488d4320       lea rax, [rbx + 0x20]
0x00014962      4c8d6c2424     lea r13, [rsp + 0x24]
0x00014967      4889442410     mov qword [rsp + 0x10], rax
0x0001496c      0f1f4000       nop dword [rax]
0x00014970      4c8b6350       mov r12, qword [rbx + 0x50]
0x00014974      488b33         mov rsi, qword [rbx]
0x00014977      4c89ef         mov rdi, r13
0x0001497a      488b4320       mov rax, qword [rbx + 0x20]
0x0001497e      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00014983      448954240c     mov dword [rsp + 0xc], r10d
0x00014988      4c890424       mov qword [rsp], r8
0x0001498c      4d29f4         sub r12, r14
0x0001498f      4c01f6         add rsi, r14
0x00014992      4c89e2         mov rdx, r12
0x00014995      4889442418     mov qword [rsp + 0x18], rax
0x0001499a      e841b8ffff     call sym.rpl_mbrtowc
0x0001499f      488d48ff       lea rcx, [rax - 1]
0x000149a3      8b542424       mov edx, dword [rsp + 0x24]
0x000149a7      4c8b0424       mov r8, qword [rsp]
0x000149ab      448b54240c     mov r10d, dword [rsp + 0xc]
0x000149b0      4883f9fc       cmp rcx, 0xfffffffffffffffc
0x000149b4      0f873b040000   ja 0x14df5
0x000149ba      4901c6         add r14, rax
0x000149bd      4d39f7         cmp r15, r14
0x000149c0      7fae           jg 0x14970
0x000149c2      4d29fe         sub r14, r15
0x000149c5      83faff         cmp edx, 0xffffffff
0x000149c8      4d89f4         mov r12, r14
0x000149cb      4c897330       mov qword [rbx + 0x30], r14
0x000149cf      0f84d4030000   je 0x14da9
0x000149d5      80bb8e000000.  cmp byte [rbx + 0x8e], 0
0x000149dc      0f8567040000   jne 0x14e49
0x000149e2      31c0           xor eax, eax
0x000149e4      83fa0a         cmp edx, 0xa
0x000149e7      750e           jne 0x149f7
0x000149e9      31c0           xor eax, eax
0x000149eb      80bb8d000000.  cmp byte [rbx + 0x8d], 0
0x000149f2      0f95c0         setne al
0x000149f5      01c0           add eax, eax
0x000149f7      894370         mov dword [rbx + 0x70], eax
0x000149fa      4983fc00       cmp r12, 0
0x000149fe      0f8516040000   jne 0x14e1a
0x00014a04      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x00014a0b      4c896338       mov qword [rbx + 0x38], r12
0x00014a0f      e9b8010000     jmp 0x14bcc
0x00014a14      0f1f4000       nop dword [rax]
0x00014a18      4c8b7318       mov r14, qword [rbx + 0x18]
0x00014a1c      4c89c1         mov rcx, r8
0x00014a1f      31f6           xor esi, esi
0x00014a21      eb10           jmp 0x14a33
0x00014a23      0f1f440000     nop dword [rax + rax]
0x00014a28      7d39           jge 0x14a63
0x00014a2a      488d7001       lea rsi, [rax + 1]
0x00014a2e      4839ce         cmp rsi, rcx
0x00014a31      7d25           jge 0x14a58
0x00014a33      488d140e       lea rdx, [rsi + rcx]
0x00014a37      4889d0         mov rax, rdx
0x00014a3a      48c1e83f       shr rax, 0x3f
0x00014a3e      4801d0         add rax, rdx
0x00014a41      48d1f8         sar rax, 1
0x00014a44      498b14c6       mov rdx, qword [r14 + rax*8]
0x00014a48      4989c4         mov r12, rax
0x00014a4b      4839ea         cmp rdx, rbp
0x00014a4e      7ed8           jle 0x14a28
0x00014a50      4889c1         mov rcx, rax
0x00014a53      ebd9           jmp 0x14a2e
0x00014a55      0f1f00         nop dword [rax]
0x00014a58      4c8d6001       lea r12, [rax + 1]
0x00014a5c      4839ea         cmp rdx, rbp
0x00014a5f      4c0f4de0       cmovge r12, rax
0x00014a63      4d8d6c24ff     lea r13, [r12 - 1]
0x00014a68      4489d2         mov edx, r10d
0x00014a6b      4889df         mov rdi, rbx
0x00014a6e      4c890424       mov qword [rsp], r8
0x00014a72      4c89ee         mov rsi, r13
0x00014a75      e806faffff     call sym.re_string_context_at
0x00014a7a      4c39e5         cmp rbp, r12
0x00014a7d      894370         mov dword [rbx + 0x70], eax
0x00014a80      4c8b0424       mov r8, qword [rsp]
0x00014a84      0f857e000000   jne 0x14b08
0x00014a8a      4c39c5         cmp rbp, r8
0x00014a8d      7d79           jge 0x14b08
0x00014a8f      4b392ce6       cmp qword [r14 + r12*8], rbp
0x00014a93      7573           jne 0x14b08
0x00014a95      488b7b10       mov rdi, qword [rbx + 0x10]
0x00014a99      4929e8         sub r8, rbp
0x00014a9c      4a8d14850000.  lea rdx, [r8*4]
0x00014aa4      488d34af       lea rsi, [rdi + rbp*4]
0x00014aa8      e8e3ddfeff     call sym.imp.memmove
0x00014aad      488b7b08       mov rdi, qword [rbx + 8]
0x00014ab1      488b5330       mov rdx, qword [rbx + 0x30]
0x00014ab5      488d342f       lea rsi, [rdi + rbp]
0x00014ab9      4829ea         sub rdx, rbp
0x00014abc      e8cfddfeff     call sym.imp.memmove
0x00014ac1      488b4330       mov rax, qword [rbx + 0x30]
0x00014ac5      48296b38       sub qword [rbx + 0x38], rbp
0x00014ac9      4829e8         sub rax, rbp
0x00014acc      4885c0         test rax, rax
0x00014acf      48894330       mov qword [rbx + 0x30], rax
0x00014ad3      7e23           jle 0x14af8
0x00014ad5      488b4b18       mov rcx, qword [rbx + 0x18]
0x00014ad9      31c0           xor eax, eax
0x00014adb      488d34e9       lea rsi, [rcx + rbp*8]
0x00014adf      90             nop
0x00014ae0      488b14c6       mov rdx, qword [rsi + rax*8]
0x00014ae4      4829ea         sub rdx, rbp
0x00014ae7      488914c1       mov qword [rcx + rax*8], rdx
0x00014aeb      4883c001       add rax, 1
0x00014aef      48394330       cmp qword [rbx + 0x30], rax
0x00014af3      7feb           jg 0x14ae0
0x00014af5      0f1f00         nop dword [rax]
0x00014af8      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x00014aff      e9c8000000     jmp 0x14bcc
0x00014b04      0f1f4000       nop dword [rax]
0x00014b08      488b4350       mov rax, qword [rbx + 0x50]
0x00014b0c      c6838c000000.  mov byte [rbx + 0x8c], 0
0x00014b13      4801e8         add rax, rbp
0x00014b16      4c29f8         sub rax, r15
0x00014b19      48894358       mov qword [rbx + 0x58], rax
0x00014b1d      488b4360       mov rax, qword [rbx + 0x60]
0x00014b21      4801e8         add rax, rbp
0x00014b24      4c29f8         sub rax, r15
0x00014b27      4d85e4         test r12, r12
0x00014b2a      48894368       mov qword [rbx + 0x68], rax
0x00014b2e      7e23           jle 0x14b53
0x00014b30      4b396ce6f8     cmp qword [r14 + r12*8 - 8], rbp
0x00014b35      7414           je 0x14b4b
0x00014b37      eb1a           jmp 0x14b53
0x00014b39      0f1f80000000.  nop dword [rax]
0x00014b40      4b396ceef8     cmp qword [r14 + r13*8 - 8], rbp
0x00014b45      750c           jne 0x14b53
0x00014b47      4983ed01       sub r13, 1
0x00014b4b      4d85ed         test r13, r13
0x00014b4e      4d89ec         mov r12, r13
0x00014b51      75ed           jne 0x14b40
0x00014b53      4d39c4         cmp r12, r8
0x00014b56      0f8d2c020000   jge 0x14d88
0x00014b5c      488b4310       mov rax, qword [rbx + 0x10]
0x00014b60      eb13           jmp 0x14b75
0x00014b62      660f1f440000   nop word [rax + rax]
0x00014b68      4983c401       add r12, 1
0x00014b6c      4d39c4         cmp r12, r8
0x00014b6f      0f841b020000   je 0x14d90
0x00014b75      42833ca0ff     cmp dword [rax + r12*4], 0xffffffff
0x00014b7a      74ec           je 0x14b68
0x00014b7c      4b8b14e6       mov rdx, qword [r14 + r12*8]
0x00014b80      4829ea         sub rdx, rbp
0x00014b83      4883fa00       cmp rdx, 0
0x00014b87      48895330       mov qword [rbx + 0x30], rdx
0x00014b8b      7434           je 0x14bc1
0x00014b8d      7e20           jle 0x14baf
0x00014b8f      488b4310       mov rax, qword [rbx + 0x10]
0x00014b93      488d0c90       lea rcx, [rax + rdx*4]
0x00014b97      660f1f840000.  nop word [rax + rax]
0x00014ba0      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x00014ba6      4883c004       add rax, 4
0x00014baa      4839c1         cmp rcx, rax
0x00014bad      75f1           jne 0x14ba0
0x00014baf      488b7b08       mov rdi, qword [rbx + 8]
0x00014bb3      beff000000     mov esi, 0xff
0x00014bb8      e863dafeff     call sym.imp.memset
0x00014bbd      488b5330       mov rdx, qword [rbx + 0x30]
0x00014bc1      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x00014bc8      48895338       mov qword [rbx + 0x38], rdx
0x00014bcc      84c0           test al, al
0x00014bce      0f8476fcffff   je 0x1484a
0x00014bd4      e975fcffff     jmp 0x1484e
0x00014bd9      0f1f80000000.  nop dword [rax]
0x00014be0      488b7b08       mov rdi, qword [rbx + 8]
0x00014be4      4c89c2         mov rdx, r8
0x00014be7      488d342f       lea rsi, [rdi + rbp]
0x00014beb      e8a0dcfeff     call sym.imp.memmove
0x00014bf0      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x00014bf7      48296b30       sub qword [rbx + 0x30], rbp
0x00014bfb      48296b38       sub qword [rbx + 0x38], rbp
0x00014bff      ebcb           jmp 0x14bcc
0x00014c01      0f1f80000000.  nop dword [rax]
0x00014c08      488b0b         mov rcx, qword [rbx]
0x00014c0b      4889ef         mov rdi, rbp
0x00014c0e      4829d7         sub rdi, rdx
0x00014c11      4889fa         mov rdx, rdi
0x00014c14      4e8d2419       lea r12, [rcx + r11]
0x00014c18      4c01e2         add rdx, r12
0x00014c1b      498d742cff     lea rsi, [r12 + rbp - 1]
0x00014c20      4839d1         cmp rcx, rdx
0x00014c23      480f42ca       cmovb rcx, rdx
0x00014c27      4839f1         cmp rcx, rsi
0x00014c2a      7619           jbe 0x14c45
0x00014c2c      e920fdffff     jmp 0x14951
0x00014c31      0f1f80000000.  nop dword [rax]
0x00014c38      4883ee01       sub rsi, 1
0x00014c3c      4839f1         cmp rcx, rsi
0x00014c3f      0f870cfdffff   ja 0x14951
0x00014c45      0fb616         movzx edx, byte [rsi]
0x00014c48      83e2c0         and edx, 0xffffffc0                     ; 4294967232
0x00014c4b      80fa80         cmp dl, 0x80
0x00014c4e      74e8           je 0x14c38
0x00014c50      488b5358       mov rdx, qword [rbx + 0x58]
0x00014c54      488b4b78       mov rcx, qword [rbx + 0x78]
0x00014c58      4989f6         mov r14, rsi
0x00014c5b      4c01e2         add rdx, r12
0x00014c5e      4829f2         sub rdx, rsi
0x00014c61      4885c9         test rcx, rcx
0x00014c64      0f8548020000   jne 0x14eb2
0x00014c6a      4c8d6c2424     lea r13, [rsp + 0x24]
0x00014c6f      4901ec         add r12, rbp
0x00014c72      488d4c2428     lea rcx, [rsp + 0x28]
0x00014c77      4d29f4         sub r12, r14
0x00014c7a      448954240c     mov dword [rsp + 0xc], r10d
0x00014c7f      4c890424       mov qword [rsp], r8
0x00014c83      4c89ef         mov rdi, r13
0x00014c86      48c744242800.  mov qword [rsp + 0x28], 0
0x00014c8f      e84cb5ffff     call sym.rpl_mbrtowc
0x00014c94      4939c4         cmp r12, rax
0x00014c97      4c8b0424       mov r8, qword [rsp]
0x00014c9b      448b54240c     mov r10d, dword [rsp + 0xc]
0x00014ca0      770a           ja 0x14cac
0x00014ca2      4883f8fd       cmp rax, 0xfffffffffffffffd
0x00014ca6      0f86c5010000   jbe 0x14e71
0x00014cac      4c8b5b28       mov r11, qword [rbx + 0x28]
0x00014cb0      488b4338       mov rax, qword [rbx + 0x38]
0x00014cb4      e998fcffff     jmp 0x14951
0x00014cb9      0f1f80000000.  nop dword [rax]
0x00014cc0      80bb88000000.  cmp byte [rbx + 0x88], 0
0x00014cc7      0f85f3000000   jne 0x14dc0
0x00014ccd      488b4b78       mov rcx, qword [rbx + 0x78]
0x00014cd1      4885c9         test rcx, rcx
0x00014cd4      0f84a9fbffff   je 0x14883
0x00014cda      48394340       cmp qword [rbx + 0x40], rax
0x00014cde      488b5330       mov rdx, qword [rbx + 0x30]
0x00014ce2      480f4e4340     cmovle rax, qword [rbx + 0x40]
0x00014ce7      4839d0         cmp rax, rdx
0x00014cea      7f0c           jg 0x14cf8
0x00014cec      eb2a           jmp 0x14d18
0x00014cee      6690           nop
0x00014cf0      4c8b7b28       mov r15, qword [rbx + 0x28]
0x00014cf4      488b4b78       mov rcx, qword [rbx + 0x78]
0x00014cf8      488b33         mov rsi, qword [rbx]
0x00014cfb      4801d6         add rsi, rdx
0x00014cfe      420fb6343e     movzx esi, byte [rsi + r15]
0x00014d03      0fb63431       movzx esi, byte [rcx + rsi]
0x00014d07      488b4b08       mov rcx, qword [rbx + 8]
0x00014d0b      40883411       mov byte [rcx + rdx], sil
0x00014d0f      4883c201       add rdx, 1
0x00014d13      4839d0         cmp rax, rdx
0x00014d16      75d8           jne 0x14cf0
0x00014d18      48895330       mov qword [rbx + 0x30], rdx
0x00014d1c      48895338       mov qword [rbx + 0x38], rdx
0x00014d20      e95efbffff     jmp 0x14883
0x00014d25      0f1f00         nop dword [rax]
0x00014d28      488b03         mov rax, qword [rbx]
0x00014d2b      488b5378       mov rdx, qword [rbx + 0x78]
0x00014d2f      4801e8         add rax, rbp
0x00014d32      4885d2         test rdx, rdx
0x00014d35      410fb64403ff   movzx eax, byte [r11 + rax - 1]
0x00014d3b      48c743380000.  mov qword [rbx + 0x38], 0
0x00014d43      7404           je 0x14d49
0x00014d45      0fb60402       movzx eax, byte [rdx + rax]
0x00014d49      488b8b800000.  mov rcx, qword [rbx + 0x80]
0x00014d50      0fb6d0         movzx edx, al
0x00014d53      48c1fa06       sar rdx, 6
0x00014d57      488b0cd1       mov rcx, qword [rcx + rdx*8]
0x00014d5b      ba01000000     mov edx, 1
0x00014d60      480fa3c1       bt rcx, rax
0x00014d64      721a           jb 0x14d80
0x00014d66      31d2           xor edx, edx
0x00014d68      3c0a           cmp al, 0xa
0x00014d6a      7514           jne 0x14d80
0x00014d6c      31d2           xor edx, edx
0x00014d6e      80bb8d000000.  cmp byte [rbx + 0x8d], 0
0x00014d75      0f95c2         setne dl
0x00014d78      01d2           add edx, edx
0x00014d7a      660f1f440000   nop word [rax + rax]
0x00014d80      895370         mov dword [rbx + 0x70], edx
0x00014d83      e970fdffff     jmp 0x14af8
0x00014d88      0f85eefdffff   jne 0x14b7c
0x00014d8e      6690           nop
0x00014d90      48c743300000.  mov qword [rbx + 0x30], 0
0x00014d98      31d2           xor edx, edx
0x00014d9a      e922feffff     jmp 0x14bc1
0x00014d9f      4d29fe         sub r14, r15
0x00014da2      4d89f4         mov r12, r14
0x00014da5      4c897330       mov qword [rbx + 0x30], r14
0x00014da9      498d70ff       lea rsi, [r8 - 1]
0x00014dad      4489d2         mov edx, r10d
0x00014db0      4889df         mov rdi, rbx
0x00014db3      e8c8f6ffff     call sym.re_string_context_at
0x00014db8      894370         mov dword [rbx + 0x70], eax
0x00014dbb      e93afcffff     jmp 0x149fa
0x00014dc0      4889df         mov rdi, rbx
0x00014dc3      e8b8c5ffff     call sym.build_upper_buffer
0x00014dc8      e9b6faffff     jmp 0x14883
0x00014dcd      488b5350       mov rdx, qword [rbx + 0x50]
0x00014dd1      c6838c000000.  mov byte [rbx + 0x8c], 0
0x00014dd8      4801ea         add rdx, rbp
0x00014ddb      4c29fa         sub rdx, r15
0x00014dde      48895358       mov qword [rbx + 0x58], rdx
0x00014de2      488b5360       mov rdx, qword [rbx + 0x60]
0x00014de6      4801ea         add rdx, rbp
0x00014de9      4c29fa         sub rdx, r15
0x00014dec      48895368       mov qword [rbx + 0x68], rdx
0x00014df0      e933fbffff     jmp 0x14928
0x00014df5      4885c0         test rax, rax
0x00014df8      7473           je 0x14e6d
0x00014dfa      4d85e4         test r12, r12
0x00014dfd      746e           je 0x14e6d
0x00014dff      488b03         mov rax, qword [rbx]
0x00014e02      420fb61430     movzx edx, byte [rax + r14]
0x00014e07      488b442418     mov rax, qword [rsp + 0x18]
0x00014e0c      48894320       mov qword [rbx + 0x20], rax
0x00014e10      b801000000     mov eax, 1
0x00014e15      e9a0fbffff     jmp 0x149ba
0x00014e1a      7e1b           jle 0x14e37
0x00014e1c      488b4310       mov rax, qword [rbx + 0x10]
0x00014e20      4a8d14a0       lea rdx, [rax + r12*4]
0x00014e24      0f1f4000       nop dword [rax]
0x00014e28      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x00014e2e      4883c004       add rax, 4
0x00014e32      4839c2         cmp rdx, rax
0x00014e35      75f1           jne 0x14e28
0x00014e37      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x00014e3e      7558           jne 0x14e98
0x00014e40      4c896338       mov qword [rbx + 0x38], r12
0x00014e44      e901faffff     jmp 0x1484a
0x00014e49      89d7           mov edi, edx
0x00014e4b      891424         mov dword [rsp], edx
0x00014e4e      e81dd9feff     call sym.imp.iswalnum
0x00014e53      85c0           test eax, eax
0x00014e55      750c           jne 0x14e63
0x00014e57      8b1424         mov edx, dword [rsp]
0x00014e5a      83fa5f         cmp edx, 0x5f
0x00014e5d      0f857ffbffff   jne 0x149e2
0x00014e63      b801000000     mov eax, 1
0x00014e68      e98afbffff     jmp 0x149f7
0x00014e6d      31d2           xor edx, edx
0x00014e6f      eb96           jmp 0x14e07
0x00014e71      8b542424       mov edx, dword [rsp + 0x24]
0x00014e75      4c29e0         sub rax, r12
0x00014e78      48c743200000.  mov qword [rbx + 0x20], 0
0x00014e80      4989c4         mov r12, rax
0x00014e83      48894330       mov qword [rbx + 0x30], rax
0x00014e87      83faff         cmp edx, 0xffffffff
0x00014e8a      0f8545fbffff   jne 0x149d5
0x00014e90      e917feffff     jmp 0x14cac
0x00014e95      0f1f00         nop dword [rax]
0x00014e98      488b7b08       mov rdi, qword [rbx + 8]
0x00014e9c      4c89e2         mov rdx, r12
0x00014e9f      beff000000     mov esi, 0xff
0x00014ea4      e877d7feff     call sym.imp.memset
0x00014ea9      4c8b6330       mov r12, qword [rbx + 0x30]
0x00014ead      e952fbffff     jmp 0x14a04
0x00014eb2      4883fa06       cmp rdx, 6
0x00014eb6      bf06000000     mov edi, 6
0x00014ebb      4c8d5c2432     lea r11, [rsp + 0x32]
0x00014ec0      480f4efa       cmovle rdi, rdx
0x00014ec4      83ef01         sub edi, 1
0x00014ec7      85ff           test edi, edi
0x00014ec9      4863c7         movsxd rax, edi
0x00014ecc      7814           js 0x14ee2
0x00014ece      0fb63c06       movzx edi, byte [rsi + rax]
0x00014ed2      0fb63c39       movzx edi, byte [rcx + rdi]
0x00014ed6      41883c03       mov byte [r11 + rax], dil
0x00014eda      4883e801       sub rax, 1
0x00014ede      85c0           test eax, eax
0x00014ee0      79ec           jns 0x14ece
0x00014ee2      4c89de         mov rsi, r11
0x00014ee5      e980fdffff     jmp 0x14c6a
0x00014eea      e871d6feff     call sym.imp.__stack_chk_fail
0x00014eef      90             nop
;-- sub_epsilon_src_nodes:
0x00014ef0      4157           push r15
0x00014ef2      4156           push r14
0x00014ef4      4989d6         mov r14, rdx
0x00014ef7      4155           push r13
0x00014ef9      4154           push r12
0x00014efb      488d1476       lea rdx, [rsi + rsi*2]
0x00014eff      55             push rbp
0x00014f00      53             push rbx
0x00014f01      660fefc0       pxor xmm0, xmm0
0x00014f05      4883ec48       sub rsp, 0x48
0x00014f09      64488b042528.  mov rax, qword fs:[0x28]
0x00014f12      4889442438     mov qword [rsp + 0x38], rax
0x00014f17      31c0           xor eax, eax
0x00014f19      488b4738       mov rax, qword [rdi + 0x38]
0x00014f1d      48c744243000.  mov qword [rsp + 0x30], 0
0x00014f26      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00014f2b      48894c2410     mov qword [rsp + 0x10], rcx
0x00014f30      488d2cd0       lea rbp, [rax + rdx*8]
0x00014f34      4c8b5508       mov r10, qword [rbp + 8]
0x00014f38      4d85d2         test r10, r10
0x00014f3b      0f8ee1010000   jle 0x15122
0x00014f41      488d442420     lea rax, [rsp + 0x20]
0x00014f46      4989fc         mov r12, rdi
0x00014f49      4989f5         mov r13, rsi
0x00014f4c      31db           xor ebx, ebx
0x00014f4e      4889442418     mov qword [rsp + 0x18], rax
0x00014f53      eb58           jmp 0x14fad
0x00014f55      0f1f00         nop dword [rax]
0x00014f58      4885c0         test rax, rax
0x00014f5b      0f85d7000000   jne 0x15038
0x00014f61      498b7e08       mov rdi, qword [r14 + 8]
0x00014f65      498d7610       lea rsi, [r14 + 0x10]
0x00014f69      4c89c2         mov rdx, r8
0x00014f6c      e82fd7ffff     call sym.re_node_set_contains.isra.3
0x00014f71      4885c0         test rax, rax
0x00014f74      0f84be000000   je 0x15038
0x00014f7a      498b542438     mov rdx, qword [r12 + 0x38]
0x00014f7f      488b742410     mov rsi, qword [rsp + 0x10]
0x00014f84      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00014f89      4c01ca         add rdx, r9
0x00014f8c      e81fe2ffff     call sym.re_node_set_add_intersect
0x00014f91      85c0           test eax, eax
0x00014f93      0f8577010000   jne 0x15110
0x00014f99      4c8b5508       mov r10, qword [rbp + 8]
0x00014f9d      0f1f00         nop dword [rax]
0x00014fa0      4883c301       add rbx, 1
0x00014fa4      4939da         cmp r10, rbx
0x00014fa7      0f8ed3000000   jle 0x15080
0x00014fad      488b4510       mov rax, qword [rbp + 0x10]
0x00014fb1      488b04d8       mov rax, qword [rax + rbx*8]
0x00014fb5      4939c5         cmp r13, rax
0x00014fb8      74e6           je 0x14fa0
0x00014fba      4889c2         mov rdx, rax
0x00014fbd      48c1e204       shl rdx, 4
0x00014fc1      49031424       add rdx, qword [r12]
0x00014fc5      f6420808       test byte [rdx + 8], 8
0x00014fc9      74d5           je 0x14fa0
0x00014fcb      4c8d0c40       lea r9, [rax + rax*2]
0x00014fcf      498b4c2428     mov rcx, qword [r12 + 0x28]
0x00014fd4      4c8d5d10       lea r11, [rbp + 0x10]
0x00014fd8      4c89d7         mov rdi, r10
0x00014fdb      49c1e103       shl r9, 3
0x00014fdf      4c89de         mov rsi, r11
0x00014fe2      4c01c9         add rcx, r9
0x00014fe5      4c8b7910       mov r15, qword [rcx + 0x10]
0x00014fe9      48894c2408     mov qword [rsp + 8], rcx
0x00014fee      4d8b07         mov r8, qword [r15]
0x00014ff1      4c89c2         mov rdx, r8
0x00014ff4      4c890424       mov qword [rsp], r8
0x00014ff8      e8a3d6ffff     call sym.re_node_set_contains.isra.3
0x00014ffd      488b4c2408     mov rcx, qword [rsp + 8]
0x00015002      4c8b0424       mov r8, qword [rsp]
0x00015006      4883790801     cmp qword [rcx + 8], 1
0x0001500b      0f8f47ffffff   jg 0x14f58
0x00015011      4885c0         test rax, rax
0x00015014      758a           jne 0x14fa0
0x00015016      498b7e08       mov rdi, qword [r14 + 8]
0x0001501a      498d7610       lea rsi, [r14 + 0x10]
0x0001501e      4c89c2         mov rdx, r8
0x00015021      e87ad6ffff     call sym.re_node_set_contains.isra.3
0x00015026      4885c0         test rax, rax
0x00015029      0f854bffffff   jne 0x14f7a
0x0001502f      e96cffffff     jmp 0x14fa0
0x00015034      0f1f4000       nop dword [rax]
0x00015038      4d8b7f08       mov r15, qword [r15 + 8]
0x0001503c      4d85ff         test r15, r15
0x0001503f      0f8e5bffffff   jle 0x14fa0
0x00015045      4c89fa         mov rdx, r15
0x00015048      4c89de         mov rsi, r11
0x0001504b      4c89d7         mov rdi, r10
0x0001504e      e84dd6ffff     call sym.re_node_set_contains.isra.3
0x00015053      4885c0         test rax, rax
0x00015056      0f8544ffffff   jne 0x14fa0
0x0001505c      498b7e08       mov rdi, qword [r14 + 8]
0x00015060      498d7610       lea rsi, [r14 + 0x10]
0x00015064      e837d6ffff     call sym.re_node_set_contains.isra.3
0x00015069      4885c0         test rax, rax
0x0001506c      0f842effffff   je 0x14fa0
0x00015072      e903ffffff     jmp 0x14f7a
0x00015077      660f1f840000.  nop word [rax + rax]
0x00015080      4531c9         xor r9d, r9d
0x00015083      4d85d2         test r10, r10
0x00015086      4c8d5c2430     lea r11, [rsp + 0x30]
0x0001508b      7e4f           jle 0x150dc
0x0001508d      0f1f00         nop dword [rax]
0x00015090      488b4510       mov rax, qword [rbp + 0x10]
0x00015094      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00015099      4c89de         mov rsi, r11
0x0001509c      4e8b14c8       mov r10, qword [rax + r9*8]
0x000150a0      4c89d2         mov rdx, r10
0x000150a3      e8f8d5ffff     call sym.re_node_set_contains.isra.3
0x000150a8      4885c0         test rax, rax
0x000150ab      7525           jne 0x150d2
0x000150ad      498d5e10       lea rbx, [r14 + 0x10]
0x000150b1      498b7e08       mov rdi, qword [r14 + 8]
0x000150b5      4889de         mov rsi, rbx
0x000150b8      e8e3d5ffff     call sym.re_node_set_contains.isra.3
0x000150bd      4883e801       sub rax, 1
0x000150c1      4889c2         mov rdx, rax
0x000150c4      780c           js 0x150d2
0x000150c6      498d7e08       lea rdi, [r14 + 8]
0x000150ca      4889de         mov rsi, rbx
0x000150cd      e84ed7ffff     call sym.re_node_set_remove_at.isra.4.part.5
0x000150d2      4983c101       add r9, 1
0x000150d6      4c394d08       cmp qword [rbp + 8], r9
0x000150da      7fb4           jg 0x15090
0x000150dc      488b7c2430     mov rdi, qword [rsp + 0x30]
0x000150e1      e82ad9feff     call sym..plt.got
0x000150e6      31c0           xor eax, eax
0x000150e8      488b742438     mov rsi, qword [rsp + 0x38]
0x000150ed      644833342528.  xor rsi, qword fs:[0x28]
0x000150f6      752e           jne 0x15126
0x000150f8      4883c448       add rsp, 0x48
0x000150fc      5b             pop rbx
0x000150fd      5d             pop rbp
0x000150fe      415c           pop r12
0x00015100      415d           pop r13
0x00015102      415e           pop r14
0x00015104      415f           pop r15
0x00015106      c3             ret
0x00015107      660f1f840000.  nop word [rax + rax]
0x00015110      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00015115      890424         mov dword [rsp], eax
0x00015118      e8f3d8feff     call sym..plt.got
0x0001511d      8b0424         mov eax, dword [rsp]
0x00015120      ebc6           jmp 0x150e8
0x00015122      31ff           xor edi, edi
0x00015124      ebbb           jmp 0x150e1
0x00015126      e835d4feff     call sym.imp.__stack_chk_fail
0x0001512b      0f1f440000     nop dword [rax + rax]
;-- build_trtable:
0x00015130      4157           push r15
0x00015132      4156           push r14
0x00015134      4989ff         mov r15, rdi
0x00015137      4155           push r13
0x00015139      4154           push r12
0x0001513b      bf00380000     mov edi, 0x3800
0x00015140      55             push rbp
0x00015141      53             push rbx
0x00015142      4881ec080100.  sub rsp, 0x108
0x00015149      64488b042528.  mov rax, qword fs:[0x28]
0x00015152      48898424f800.  mov qword [rsp + 0xf8], rax
0x0001515a      31c0           xor eax, eax
0x0001515c      4889742408     mov qword [rsp + 8], rsi
0x00015161      e81ad6feff     call sym.imp.malloc
0x00015166      4885c0         test rax, rax
0x00015169      4889442418     mov qword [rsp + 0x18], rax
0x0001516e      0f84cc030000   je 0x15540
0x00015174      488b442418     mov rax, qword [rsp + 0x18]
0x00015179      660fefc0       pxor xmm0, xmm0
0x0001517d      488d98001800.  lea rbx, [rax + 0x1800]
0x00015184      488b442408     mov rax, qword [rsp + 8]
0x00015189      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x00015191      48895c2440     mov qword [rsp + 0x40], rbx
0x00015196      0f298424a000.  movaps xmmword [rsp + 0xa0], xmm0
0x0001519e      4883781000     cmp qword [rax + 0x10], 0
0x000151a3      48c740580000.  mov qword [rax + 0x58], 0
0x000151ab      48c740600000.  mov qword [rax + 0x60], 0
0x000151b3      0f8e710a0000   jle 0x15c2a
0x000151b9      4c897c2430     mov qword [rsp + 0x30], r15
0x000151be      31ed           xor ebp, ebp
0x000151c0      48c744241000.  mov qword [rsp + 0x10], 0
0x000151c9      4989df         mov r15, rbx
0x000151cc      488b5c2410     mov rbx, qword [rsp + 0x10]
0x000151d1      488d04dd0000.  lea rax, [rbx*8]
0x000151d9      4889442420     mov qword [rsp + 0x20], rax
0x000151de      488b442408     mov rax, qword [rsp + 8]
0x000151e3      488b4018       mov rax, qword [rax + 0x18]
0x000151e7      4c8b2cd8       mov r13, qword [rax + rbx*8]
0x000151eb      488b442430     mov rax, qword [rsp + 0x30]
0x000151f0      49c1e504       shl r13, 4
0x000151f4      4c0328         add r13, qword [rax]
0x000151f7      450fb67508     movzx r14d, byte [r13 + 8]
0x000151fc      418b4508       mov eax, dword [r13 + 8]
0x00015200      c1e808         shr eax, 8
0x00015203      6625ff03       and ax, 0x3ff
0x00015207      4183fe01       cmp r14d, 1
0x0001520b      0f845f030000   je 0x15570
0x00015211      4183fe03       cmp r14d, 3
0x00015215      0f84c5070000   je 0x159e0
0x0001521b      4183fe05       cmp r14d, 5
0x0001521f      0f847b060000   je 0x158a0
0x00015225      4183fe07       cmp r14d, 7
0x00015229      0f84da070000   je 0x15a09
0x0001522f      488b5c2408     mov rbx, qword [rsp + 8]
0x00015234      488344241001   add qword [rsp + 0x10], 1
0x0001523a      488b442410     mov rax, qword [rsp + 0x10]
0x0001523f      483b4310       cmp rax, qword [rbx + 0x10]
0x00015243      7c87           jl 0x151cc
0x00015245      4885ed         test rbp, rbp
0x00015248      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x0001524d      0f8e560a0000   jle 0x15ca9
0x00015253      488d5d01       lea rbx, [rbp + 1]
0x00015257      48c744247800.  mov qword [rsp + 0x78], 0
0x00015260      48895c2470     mov qword [rsp + 0x70], rbx
0x00015265      48c1e303       shl rbx, 3
0x00015269      4889df         mov rdi, rbx
0x0001526c      e80fd5feff     call sym.imp.malloc
0x00015271      4885c0         test rax, rax
0x00015274      4989c4         mov r12, rax
0x00015277      488984248000.  mov qword [rsp + 0x80], rax
0x0001527f      0f84fa070000   je 0x15a7f
0x00015285      48b855a8aaaa.  movabs rax, 0xaaaaaaaaaaaa855
0x0001528f      c744246c0000.  mov dword [rsp + 0x6c], 0
0x00015297      4839c5         cmp rbp, rax
0x0001529a      0f8fdf070000   jg 0x15a7f
0x000152a0      488d446d00     lea rax, [rbp + rbp*2]
0x000152a5      48c1e003       shl rax, 3
0x000152a9      4889c7         mov rdi, rax
0x000152ac      4889442458     mov qword [rsp + 0x58], rax
0x000152b1      e8cad4feff     call sym.imp.malloc
0x000152b6      4885c0         test rax, rax
0x000152b9      4889442410     mov qword [rsp + 0x10], rax
0x000152be      0f84bb070000   je 0x15a7f
0x000152c4      488b442410     mov rax, qword [rsp + 0x10]
0x000152c9      4883eb08       sub rbx, 8
0x000152cd      4c8b642440     mov r12, qword [rsp + 0x40]
0x000152d2      660fefc0       pxor xmm0, xmm0
0x000152d6      4c8d742470     lea r14, [rsp + 0x70]
0x000152db      48896c2420     mov qword [rsp + 0x20], rbp
0x000152e0      c644244f00     mov byte [rsp + 0x4f], 0
0x000152e5      4c89fd         mov rbp, r15
0x000152e8      4801d8         add rax, rbx
0x000152eb      4c89642450     mov qword [rsp + 0x50], r12
0x000152f0      4801c3         add rbx, rax
0x000152f3      4889442430     mov qword [rsp + 0x30], rax
0x000152f8      488b442418     mov rax, qword [rsp + 0x18]
0x000152fd      0f298424d000.  movaps xmmword [rsp + 0xd0], xmm0
0x00015305      48895c2438     mov qword [rsp + 0x38], rbx
0x0001530a      31db           xor ebx, ebx
0x0001530c      4c8d6808       lea r13, [rax + 8]
0x00015310      488d44246c     lea rax, [rsp + 0x6c]
0x00015315      0f298424e000.  movaps xmmword [rsp + 0xe0], xmm0
0x0001531d      4889442428     mov qword [rsp + 0x28], rax
0x00015322      48c744247800.  mov qword [rsp + 0x78], 0
0x0001532b      49837d0000     cmp qword [r13], 0
0x00015330      7e46           jle 0x15378
0x00015332      4531ff         xor r15d, r15d
0x00015335      0f1f00         nop dword [rax]
0x00015338      498b4508       mov rax, qword [r13 + 8]
0x0001533c      4a8b14f8       mov rdx, qword [rax + r15*8]
0x00015340      488b4518       mov rax, qword [rbp + 0x18]
0x00015344      488b04d0       mov rax, qword [rax + rdx*8]
0x00015348      4883f8ff       cmp rax, 0xffffffffffffffff
0x0001534c      7420           je 0x1536e
0x0001534e      488d1440       lea rdx, [rax + rax*2]
0x00015352      488b4530       mov rax, qword [rbp + 0x30]
0x00015356      4c89f7         mov rdi, r14
0x00015359      488d34d0       lea rsi, [rax + rdx*8]
0x0001535d      e85ed8ffff     call sym.re_node_set_merge
0x00015362      85c0           test eax, eax
0x00015364      8944246c       mov dword [rsp + 0x6c], eax
0x00015368      0f85fa060000   jne 0x15a68
0x0001536e      4983c701       add r15, 1
0x00015372      4d397d00       cmp qword [r13], r15
0x00015376      7fc0           jg 0x15338
0x00015378      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0001537d      31c9           xor ecx, ecx
0x0001537f      4889ee         mov rsi, rbp
0x00015382      4c89f2         mov rdx, r14
0x00015385      e866e6ffff     call sym.re_acquire_state_context
0x0001538a      488b742410     mov rsi, qword [rsp + 0x10]
0x0001538f      4885c0         test rax, rax
0x00015392      488904de       mov qword [rsi + rbx*8], rax
0x00015396      0f84ac070000   je 0x15b48
0x0001539c      80786800       cmp byte [rax + 0x68], 0
0x000153a0      0f881a070000   js 0x15ac0
0x000153a6      488b7c2430     mov rdi, qword [rsp + 0x30]
0x000153ab      488b742438     mov rsi, qword [rsp + 0x38]
0x000153b0      488904df       mov qword [rdi + rbx*8], rax
0x000153b4      488b442410     mov rax, qword [rsp + 0x10]
0x000153b9      488b04d8       mov rax, qword [rax + rbx*8]
0x000153bd      488904de       mov qword [rsi + rbx*8], rax
0x000153c1      488d9424d000.  lea rdx, [rsp + 0xd0]
0x000153c9      31c0           xor eax, eax
0x000153cb      488b0c02       mov rcx, qword [rdx + rax]
0x000153cf      490b0c04       or rcx, qword [r12 + rax]
0x000153d3      48890c02       mov qword [rdx + rax], rcx
0x000153d7      4883c008       add rax, 8
0x000153db      4883f820       cmp rax, 0x20                           ; "@"
0x000153df      75ea           jne 0x153cb
0x000153e1      4883c301       add rbx, 1
0x000153e5      4983c518       add r13, 0x18
0x000153e9      4983c420       add r12, 0x20                           ; "@"
0x000153ed      483b5c2420     cmp rbx, qword [rsp + 0x20]
0x000153f2      0f852affffff   jne 0x15322
0x000153f8      807c244f00     cmp byte [rsp + 0x4f], 0
0x000153fd      4989ef         mov r15, rbp
0x00015400      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00015405      4889542420     mov qword [rsp + 0x20], rdx
0x0001540a      0f8549070000   jne 0x15b59
0x00015410      be00010000     mov esi, 0x100
0x00015415      bf08000000     mov edi, 8
0x0001541a      e891d2feff     call sym.imp.calloc
0x0001541f      4989c3         mov r11, rax
0x00015422      488b442408     mov rax, qword [rsp + 8]
0x00015427      4d85db         test r11, r11
0x0001542a      4c895858       mov qword [rax + 0x58], r11
0x0001542e      0f8439060000   je 0x15a6d
0x00015434      488b5c2440     mov rbx, qword [rsp + 0x40]
0x00015439      4c8b642410     mov r12, qword [rsp + 0x10]
0x0001543e      4531c9         xor r9d, r9d
0x00015441      4c8b6c2430     mov r13, qword [rsp + 0x30]
0x00015446      488b542420     mov rdx, qword [rsp + 0x20]
0x0001544b      4883c320       add rbx, 0x20                           ; "@"
0x0001544f      4a8b040a       mov rax, qword [rdx + r9]
0x00015453      4885c0         test rax, rax
0x00015456      742c           je 0x15484
0x00015458      4c89ce         mov rsi, r9
0x0001545b      b901000000     mov ecx, 1
0x00015460      48c1e606       shl rsi, 6
0x00015464      4c01de         add rsi, r11
0x00015467      660f1f840000.  nop word [rax + rax]
0x00015470      a801           test al, 1
0x00015472      0f8560070000   jne 0x15bd8
0x00015478      4801c9         add rcx, rcx
0x0001547b      4883c608       add rsi, 8
0x0001547f      48d1e8         shr rax, 1
0x00015482      75ec           jne 0x15470
0x00015484      4983c108       add r9, 8
0x00015488      4983f920       cmp r9, 0x20                            ; "@"
0x0001548c      75c1           jne 0x1544f
0x0001548e      f68424d10000.  test byte [rsp + 0xd1], 4
0x00015496      743a           je 0x154d2
0x00015498      31c0           xor eax, eax
0x0001549a      488b542450     mov rdx, qword [rsp + 0x50]
0x0001549f      eb0d           jmp 0x154ae
0x000154a1      4883c001       add rax, 1
0x000154a5      4883c220       add rdx, 0x20                           ; "@"
0x000154a9      4839e8         cmp rax, rbp
0x000154ac      7424           je 0x154d2
0x000154ae      48f702000400.  test qword [rdx], 0x400
0x000154b5      74ea           je 0x154a1
0x000154b7      488b5c2438     mov rbx, qword [rsp + 0x38]
0x000154bc      807c244f00     cmp byte [rsp + 0x4f], 0
0x000154c1      488b04c3       mov rax, qword [rbx + rax*8]
0x000154c5      49894350       mov qword [r11 + 0x50], rax
0x000154c9      7407           je 0x154d2
0x000154cb      498983500800.  mov qword [r11 + 0x850], rax
0x000154d2      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000154d7      e834d5feff     call sym..plt.got
0x000154dc      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x000154e4      e827d5feff     call sym..plt.got
0x000154e9      488b442418     mov rax, qword [rsp + 0x18]
0x000154ee      488b5c2458     mov rbx, qword [rsp + 0x58]
0x000154f3      488d6810       lea rbp, [rax + 0x10]
0x000154f7      4801eb         add rbx, rbp
0x000154fa      488b7d00       mov rdi, qword [rbp]
0x000154fe      4883c518       add rbp, 0x18
0x00015502      e809d5feff     call sym..plt.got
0x00015507      4839eb         cmp rbx, rbp
0x0001550a      75ee           jne 0x154fa
0x0001550c      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00015511      e8fad4feff     call sym..plt.got
0x00015516      b801000000     mov eax, 1
0x0001551b      eb25           jmp 0x15542
0x0001551d      4885ed         test rbp, rbp
0x00015520      48c743080000.  mov qword [rbx + 8], 0
0x00015528      48c703000000.  mov qword [rbx], 0
0x0001552f      0f852b030000   jne 0x15860
0x00015535      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0001553a      e8d1d4feff     call sym..plt.got
0x0001553f      90             nop
0x00015540      31c0           xor eax, eax
0x00015542      488b9c24f800.  mov rbx, qword [rsp + 0xf8]
0x0001554a      6448331c2528.  xor rbx, qword fs:[0x28]
0x00015553      0f854b070000   jne 0x15ca4
0x00015559      4881c4080100.  add rsp, 0x108
0x00015560      5b             pop rbx
0x00015561      5d             pop rbp
0x00015562      415c           pop r12
0x00015564      415d           pop r13
0x00015566      415e           pop r14
0x00015568      415f           pop r15
0x0001556a      c3             ret
0x0001556b      0f1f440000     nop dword [rax + rax]
0x00015570      410fb64d00     movzx ecx, byte [r13]
0x00015575      4c8da4249000.  lea r12, [rsp + 0x90]
0x0001557d      bf01000000     mov edi, 1
0x00015582      4889ca         mov rdx, rcx
0x00015585      83e13f         and ecx, 0x3f
0x00015588      48c1ea03       shr rdx, 3
0x0001558c      48d3e7         shl rdi, cl
0x0001558f      83e218         and edx, 0x18
0x00015592      49093c14       or qword [r12 + rdx], rdi
0x00015596      6685c0         test ax, ax
0x00015599      0f84c1000000   je 0x15660
0x0001559f      a820           test al, 0x20                           ; "@"
0x000155a1      0f8569030000   jne 0x15910
0x000155a7      a880           test al, 0x80
0x000155a9      0f8595020000   jne 0x15844
0x000155af      a804           test al, 4
0x000155b1      7452           je 0x15605
0x000155b3      4183fe01       cmp r14d, 1
0x000155b7      0f84d8030000   je 0x15995
0x000155bd      4c8b442430     mov r8, qword [rsp + 0x30]
0x000155c2      4183b8b40000.  cmp dword [r8 + 0xb4], 1
0x000155ca      0f8e52040000   jle 0x15a22
0x000155d0      498b7878       mov rdi, qword [r8 + 0x78]
0x000155d4      31f6           xor esi, esi
0x000155d6      31c9           xor ecx, ecx
0x000155d8      488b14cf       mov rdx, qword [rdi + rcx*8]
0x000155dc      48f7d2         not rdx
0x000155df      490b94c8b800.  or rdx, qword [r8 + rcx*8 + 0xb8]
0x000155e7      492314cc       and rdx, qword [r12 + rcx*8]
0x000155eb      498914cc       mov qword [r12 + rcx*8], rdx
0x000155ef      4883c101       add rcx, 1
0x000155f3      4809d6         or rsi, rdx
0x000155f6      4883f904       cmp rcx, 4
0x000155fa      75dc           jne 0x155d8
0x000155fc      4885f6         test rsi, rsi
0x000155ff      0f842afcffff   je 0x1522f
0x00015605      a808           test al, 8
0x00015607      7457           je 0x15660
0x00015609      4183fe01       cmp r14d, 1
0x0001560d      0f842e030000   je 0x15941
0x00015613      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00015618      83bfb4000000.  cmp dword [rdi + 0xb4], 1
0x0001561f      0f8e39030000   jle 0x1595e
0x00015625      488b7778       mov rsi, qword [rdi + 0x78]
0x00015629      31c9           xor ecx, ecx
0x0001562b      31d2           xor edx, edx
0x0001562d      488b84d7b800.  mov rax, qword [rdi + rdx*8 + 0xb8]
0x00015635      482304d6       and rax, qword [rsi + rdx*8]
0x00015639      48f7d0         not rax
0x0001563c      492304d4       and rax, qword [r12 + rdx*8]
0x00015640      498904d4       mov qword [r12 + rdx*8], rax
0x00015644      4883c201       add rdx, 1
0x00015648      4809c1         or rcx, rax
0x0001564b      4883fa04       cmp rdx, 4
0x0001564f      75dc           jne 0x1562d
0x00015651      4885c9         test rcx, rcx
0x00015654      0f84d5fbffff   je 0x1522f
0x0001565a      660f1f440000   nop word [rax + rax]
0x00015660      31db           xor ebx, ebx
0x00015662      4885ed         test rbp, rbp
0x00015665      0f8e60010000   jle 0x157cb
0x0001566b      4c896c2428     mov qword [rsp + 0x28], r13
0x00015670      4d89fd         mov r13, r15
0x00015673      0f1f440000     nop dword [rax + rax]
0x00015678      4989da         mov r10, rbx
0x0001567b      49c1e205       shl r10, 5
0x0001567f      4183fe01       cmp r14d, 1
0x00015683      7523           jne 0x156a8
0x00015685      488b442428     mov rax, qword [rsp + 0x28]
0x0001568a      0fb610         movzx edx, byte [rax]
0x0001568d      4889d0         mov rax, rdx
0x00015690      48c1e803       shr rax, 3
0x00015694      83e018         and eax, 0x18
0x00015697      4c01e8         add rax, r13
0x0001569a      4a8b0410       mov rax, qword [rax + r10]
0x0001569e      480fa3d0       bt rax, rdx
0x000156a2      0f8313010000   jae 0x157bb
0x000156a8      4b8d7c1500     lea rdi, [r13 + r10]
0x000156ad      488db424b000.  lea rsi, [rsp + 0xb0]
0x000156b5      31c9           xor ecx, ecx
0x000156b7      31c0           xor eax, eax
0x000156b9      498b14c4       mov rdx, qword [r12 + rax*8]
0x000156bd      482314c7       and rdx, qword [rdi + rax*8]
0x000156c1      488914c6       mov qword [rsi + rax*8], rdx
0x000156c5      4883c001       add rax, 1
0x000156c9      4809d1         or rcx, rdx
0x000156cc      4883f804       cmp rax, 4
0x000156d0      75e7           jne 0x156b9
0x000156d2      4885c9         test rcx, rcx
0x000156d5      0f84e0000000   je 0x157bb
0x000156db      4c8d9c24d000.  lea r11, [rsp + 0xd0]
0x000156e3      4531ff         xor r15d, r15d
0x000156e6      4531c9         xor r9d, r9d
0x000156e9      31c9           xor ecx, ecx
0x000156eb      498b34cc       mov rsi, qword [r12 + rcx*8]
0x000156ef      488b04cf       mov rax, qword [rdi + rcx*8]
0x000156f3      4889f2         mov rdx, rsi
0x000156f6      48f7d2         not rdx
0x000156f9      4821c2         and rdx, rax
0x000156fc      48f7d0         not rax
0x000156ff      4821f0         and rax, rsi
0x00015702      498914cb       mov qword [r11 + rcx*8], rdx
0x00015706      4909d1         or r9, rdx
0x00015709      498904cc       mov qword [r12 + rcx*8], rax
0x0001570d      4883c101       add rcx, 1
0x00015711      4909c7         or r15, rax
0x00015714      4883f904       cmp rcx, 4
0x00015718      75d1           jne 0x156eb
0x0001571a      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0001571f      488d045b       lea rax, [rbx + rbx*2]
0x00015723      4d85c9         test r9, r9
0x00015726      488d14c7       lea rdx, [rdi + rax*8]
0x0001572a      7468           je 0x15794
0x0001572c      4889e8         mov rax, rbp
0x0001572f      660f6f8424d0.  movdqa xmm0, xmmword [rsp + 0xd0]
0x00015738      48c1e005       shl rax, 5
0x0001573c      4889d6         mov rsi, rdx
0x0001573f      4889542438     mov qword [rsp + 0x38], rdx
0x00015744      4c01e8         add rax, r13
0x00015747      0f1100         movups xmmword [rax], xmm0
0x0001574a      660f6f8424e0.  movdqa xmm0, xmmword [rsp + 0xe0]
0x00015753      0f114010       movups xmmword [rax + 0x10], xmm0
0x00015757      488d446d00     lea rax, [rbp + rbp*2]
0x0001575c      488d3cc7       lea rdi, [rdi + rax*8]
0x00015760      660f6f8424b0.  movdqa xmm0, xmmword [rsp + 0xb0]
0x00015769      430f11441500   movups xmmword [r13 + r10], xmm0
0x0001576f      660f6f8424c0.  movdqa xmm0, xmmword [rsp + 0xc0]
0x00015778      430f11441510   movups xmmword [r13 + r10 + 0x10], xmm0
0x0001577e      e87de0ffff     call sym.re_node_set_init_copy
0x00015783      85c0           test eax, eax
0x00015785      0f85d5000000   jne 0x15860
0x0001578b      488b542438     mov rdx, qword [rsp + 0x38]
0x00015790      4883c501       add rbp, 1
0x00015794      488b442408     mov rax, qword [rsp + 8]
0x00015799      488b742420     mov rsi, qword [rsp + 0x20]
0x0001579e      4889d7         mov rdi, rdx
0x000157a1      488b4018       mov rax, qword [rax + 0x18]
0x000157a5      488b3430       mov rsi, qword [rax + rsi]
0x000157a9      e8b2b9ffff     call sym.re_node_set_insert
0x000157ae      84c0           test al, al
0x000157b0      0f84aa000000   je 0x15860
0x000157b6      4d85ff         test r15, r15
0x000157b9      740d           je 0x157c8
0x000157bb      4883c301       add rbx, 1
0x000157bf      4839eb         cmp rbx, rbp
0x000157c2      0f8cb0feffff   jl 0x15678
0x000157c8      4d89ef         mov r15, r13
0x000157cb      4839dd         cmp rbp, rbx
0x000157ce      0f855bfaffff   jne 0x1522f
0x000157d4      4889e8         mov rax, rbp
0x000157d7      660f6f842490.  movdqa xmm0, xmmword [rsp + 0x90]
0x000157e0      48c1e005       shl rax, 5
0x000157e4      488b5c2420     mov rbx, qword [rsp + 0x20]
0x000157e9      bf08000000     mov edi, 8
0x000157ee      4c01f8         add rax, r15
0x000157f1      0f1100         movups xmmword [rax], xmm0
0x000157f4      660f6f8424a0.  movdqa xmm0, xmmword [rsp + 0xa0]
0x000157fd      0f114010       movups xmmword [rax + 0x10], xmm0
0x00015801      488b442408     mov rax, qword [rsp + 8]
0x00015806      488b4018       mov rax, qword [rax + 0x18]
0x0001580a      4c8b2c18       mov r13, qword [rax + rbx]
0x0001580e      488b5c2418     mov rbx, qword [rsp + 0x18]
0x00015813      488d446d00     lea rax, [rbp + rbp*2]
0x00015818      488d1cc3       lea rbx, [rbx + rax*8]
0x0001581c      48c703010000.  mov qword [rbx], 1
0x00015823      48c743080100.  mov qword [rbx + 8], 1
0x0001582b      e850cffeff     call sym.imp.malloc
0x00015830      4885c0         test rax, rax
0x00015833      48894310       mov qword [rbx + 0x10], rax
0x00015837      0f84e0fcffff   je 0x1551d
0x0001583d      4c8928         mov qword [rax], r13
0x00015840      4883c501       add rbp, 1
0x00015844      660fefc0       pxor xmm0, xmm0
0x00015848      410f290424     movaps xmmword [r12], xmm0
0x0001584d      410f29442410   movaps xmmword [r12 + 0x10], xmm0
0x00015853      e9d7f9ffff     jmp 0x1522f
0x00015858      0f1f84000000.  nop dword [rax + rax]
0x00015860      488b442418     mov rax, qword [rsp + 0x18]
0x00015865      488d5810       lea rbx, [rax + 0x10]
0x00015869      488d446d00     lea rax, [rbp + rbp*2]
0x0001586e      488d2cc3       lea rbp, [rbx + rax*8]
0x00015872      660f1f440000   nop word [rax + rax]
0x00015878      488b3b         mov rdi, qword [rbx]
0x0001587b      4883c318       add rbx, 0x18
0x0001587f      e88cd1feff     call sym..plt.got
0x00015884      4839dd         cmp rbp, rbx
0x00015887      75ef           jne 0x15878
0x00015889      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0001588e      e87dd1feff     call sym..plt.got
0x00015893      e9a8fcffff     jmp 0x15540
0x00015898      0f1f84000000.  nop dword [rax + rax]
0x000158a0      488b742430     mov rsi, qword [rsp + 0x30]
0x000158a5      83beb4000000.  cmp dword [rsi + 0xb4], 1
0x000158ac      0f8e03010000   jle 0x159b5
0x000158b2      488b7678       mov rsi, qword [rsi + 0x78]
0x000158b6      4c8da4249000.  lea r12, [rsp + 0x90]
0x000158be      31d2           xor edx, edx
0x000158c0      498b0c14       mov rcx, qword [r12 + rdx]
0x000158c4      480b0c16       or rcx, qword [rsi + rdx]
0x000158c8      49890c14       mov qword [r12 + rdx], rcx
0x000158cc      4883c208       add rdx, 8
0x000158d0      4883fa20       cmp rdx, 0x20                           ; "@"
0x000158d4      75ea           jne 0x158c0
0x000158d6      488b5c2430     mov rbx, qword [rsp + 0x30]
0x000158db      488b93d80000.  mov rdx, qword [rbx + 0xd8]
0x000158e2      f6c240         test dl, 0x40                           ; segment.PHDR
0x000158e5      750c           jne 0x158f3
0x000158e7      4881a4249000.  and qword [rsp + 0x90], 0xfffffffffffffbff
0x000158f3      81e280000000   and edx, 0x80
0x000158f9      0f8497fcffff   je 0x15596
0x000158ff      4883a4249000.  and qword [rsp + 0x90], 0xfffffffffffffffe
0x00015908      e989fcffff     jmp 0x15596
0x0001590d      0f1f00         nop dword [rax]
0x00015910      488b94249000.  mov rdx, qword [rsp + 0x90]
0x00015918      660fefc0       pxor xmm0, xmm0
0x0001591c      80e604         and dh, 4
0x0001591f      410f290424     movaps xmmword [r12], xmm0
0x00015924      410f29442410   movaps xmmword [r12 + 0x10], xmm0
0x0001592a      0f84fff8ffff   je 0x1522f
0x00015930      48c784249000.  mov qword [rsp + 0x90], 0x400           ; [0x400:8]=0x1200000012
0x0001593c      e966fcffff     jmp 0x155a7
0x00015941      41f6450a40     test byte [r13 + 0xa], 0x40
0x00015946      0f85f8feffff   jne 0x15844
0x0001594c      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00015951      83bfb4000000.  cmp dword [rdi + 0xb4], 1
0x00015958      0f8fc7fcffff   jg 0x15625
0x0001595e      488b742430     mov rsi, qword [rsp + 0x30]
0x00015963      31c9           xor ecx, ecx
0x00015965      31d2           xor edx, edx
0x00015967      488b84d6b800.  mov rax, qword [rsi + rdx*8 + 0xb8]
0x0001596f      48f7d0         not rax
0x00015972      492304d4       and rax, qword [r12 + rdx*8]
0x00015976      498904d4       mov qword [r12 + rdx*8], rax
0x0001597a      4883c201       add rdx, 1
0x0001597e      4809c1         or rcx, rax
0x00015981      4883fa04       cmp rdx, 4
0x00015985      75e0           jne 0x15967
0x00015987      4885c9         test rcx, rcx
0x0001598a      0f85d0fcffff   jne 0x15660
0x00015990      e99af8ffff     jmp 0x1522f
0x00015995      41f6450a40     test byte [r13 + 0xa], 0x40
0x0001599a      0f84a4feffff   je 0x15844
0x000159a0      4c8b442430     mov r8, qword [rsp + 0x30]
0x000159a5      4183b8b40000.  cmp dword [r8 + 0xb4], 1
0x000159ad      0f8f1dfcffff   jg 0x155d0
0x000159b3      eb6d           jmp 0x15a22
0x000159b5      660f76c0       pcmpeqd xmm0, xmm0
0x000159b9      4c8da4249000.  lea r12, [rsp + 0x90]
0x000159c1      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x000159c9      0f298424a000.  movaps xmmword [rsp + 0xa0], xmm0
0x000159d1      e900ffffff     jmp 0x158d6
0x000159d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000159e0      498b7500       mov rsi, qword [r13]
0x000159e4      4c8da4249000.  lea r12, [rsp + 0x90]
0x000159ec      31d2           xor edx, edx
0x000159ee      498b0c14       mov rcx, qword [r12 + rdx]
0x000159f2      480b0c16       or rcx, qword [rsi + rdx]
0x000159f6      49890c14       mov qword [r12 + rdx], rcx
0x000159fa      4883c208       add rdx, 8
0x000159fe      4883fa20       cmp rdx, 0x20                           ; "@"
0x00015a02      75ea           jne 0x159ee
0x00015a04      e98dfbffff     jmp 0x15596
0x00015a09      660f76c0       pcmpeqd xmm0, xmm0
0x00015a0d      4c8da4249000.  lea r12, [rsp + 0x90]
0x00015a15      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x00015a1d      e9b4feffff     jmp 0x158d6
0x00015a22      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00015a27      31f6           xor esi, esi
0x00015a29      31d2           xor edx, edx
0x00015a2b      498b0cd4       mov rcx, qword [r12 + rdx*8]
0x00015a2f      48238cd7b800.  and rcx, qword [rdi + rdx*8 + 0xb8]
0x00015a37      49890cd4       mov qword [r12 + rdx*8], rcx
0x00015a3b      4883c201       add rdx, 1
0x00015a3f      4809ce         or rsi, rcx
0x00015a42      4883fa04       cmp rdx, 4
0x00015a46      75e3           jne 0x15a2b
0x00015a48      4885f6         test rsi, rsi
0x00015a4b      0f85b4fbffff   jne 0x15605
0x00015a51      e9d9f7ffff     jmp 0x1522f
0x00015a56      8b54246c       mov edx, dword [rsp + 0x6c]
0x00015a5a      85d2           test edx, edx
0x00015a5c      0f8485000000   je 0x15ae7
0x00015a62      660f1f440000   nop word [rax + rax]
0x00015a68      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00015a6d      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00015a72      e899cffeff     call sym..plt.got
0x00015a77      4c8ba4248000.  mov r12, qword [rsp + 0x80]
0x00015a7f      4c89e7         mov rdi, r12
0x00015a82      e889cffeff     call sym..plt.got
0x00015a87      488b442418     mov rax, qword [rsp + 0x18]
0x00015a8c      488d5810       lea rbx, [rax + 0x10]
0x00015a90      488d446d00     lea rax, [rbp + rbp*2]
0x00015a95      488d2cc3       lea rbp, [rbx + rax*8]
0x00015a99      0f1f80000000.  nop dword [rax]
0x00015aa0      488b3b         mov rdi, qword [rbx]
0x00015aa3      4883c318       add rbx, 0x18
0x00015aa7      e864cffeff     call sym..plt.got
0x00015aac      4839dd         cmp rbp, rbx
0x00015aaf      75ef           jne 0x15aa0
0x00015ab1      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00015ab6      e855cffeff     call sym..plt.got
0x00015abb      e980faffff     jmp 0x15540
0x00015ac0      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00015ac5      b901000000     mov ecx, 1
0x00015aca      4c89f2         mov rdx, r14
0x00015acd      4889ee         mov rsi, rbp
0x00015ad0      e81bdfffff     call sym.re_acquire_state_context
0x00015ad5      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00015ada      4885c0         test rax, rax
0x00015add      488904df       mov qword [rdi + rbx*8], rax
0x00015ae1      0f846fffffff   je 0x15a56
0x00015ae7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00015aec      483b04df       cmp rax, qword [rdi + rbx*8]
0x00015af0      7419           je 0x15b0b
0x00015af2      0fb67c244f     movzx edi, byte [rsp + 0x4f]
0x00015af7      83bdb4000000.  cmp dword [rbp + 0xb4], 2
0x00015afe      b801000000     mov eax, 1
0x00015b03      0f4df8         cmovge edi, eax
0x00015b06      40887c244f     mov byte [rsp + 0x4f], dil
0x00015b0b      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00015b10      4889ee         mov rsi, rbp
0x00015b13      b902000000     mov ecx, 2
0x00015b18      4c89f2         mov rdx, r14
0x00015b1b      e8d0deffff     call sym.re_acquire_state_context
0x00015b20      488b742438     mov rsi, qword [rsp + 0x38]
0x00015b25      4885c0         test rax, rax
0x00015b28      488904de       mov qword [rsi + rbx*8], rax
0x00015b2c      0f858ff8ffff   jne 0x153c1
0x00015b32      8b44246c       mov eax, dword [rsp + 0x6c]
0x00015b36      85c0           test eax, eax
0x00015b38      0f8483f8ffff   je 0x153c1
0x00015b3e      e925ffffff     jmp 0x15a68
0x00015b43      0f1f440000     nop dword [rax + rax]
0x00015b48      8b4c246c       mov ecx, dword [rsp + 0x6c]
0x00015b4c      85c9           test ecx, ecx
0x00015b4e      0f8448f8ffff   je 0x1539c
0x00015b54      e90fffffff     jmp 0x15a68
0x00015b59      be00020000     mov esi, 0x200
0x00015b5e      bf08000000     mov edi, 8
0x00015b63      e848cbfeff     call sym.imp.calloc
0x00015b68      4989c3         mov r11, rax
0x00015b6b      488b442408     mov rax, qword [rsp + 8]
0x00015b70      4d85db         test r11, r11
0x00015b73      4c895860       mov qword [rax + 0x60], r11
0x00015b77      0f84f0feffff   je 0x15a6d
0x00015b7d      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x00015b82      4c8b542410     mov r10, qword [rsp + 0x10]
0x00015b87      4d89dc         mov r12, r11
0x00015b8a      4c8b742430     mov r14, qword [rsp + 0x30]
0x00015b8f      488b542420     mov rdx, qword [rsp + 0x20]
0x00015b94      31db           xor ebx, ebx
0x00015b96      4983c520       add r13, 0x20                           ; "@"
0x00015b9a      488b041a       mov rax, qword [rdx + rbx]
0x00015b9e      4885c0         test rax, rax
0x00015ba1      741c           je 0x15bbf
0x00015ba3      4c89e6         mov rsi, r12
0x00015ba6      b901000000     mov ecx, 1
0x00015bab      a801           test al, 1
0x00015bad      0f85a9000000   jne 0x15c5c
0x00015bb3      4801c9         add rcx, rcx
0x00015bb6      4883c608       add rsi, 8
0x00015bba      48d1e8         shr rax, 1
0x00015bbd      75ec           jne 0x15bab
0x00015bbf      4883c308       add rbx, 8
0x00015bc3      4981c4000200.  add r12, 0x200
0x00015bca      4883fb20       cmp rbx, 0x20                           ; "@"
0x00015bce      75ca           jne 0x15b9a
0x00015bd0      e9b9f8ffff     jmp 0x1548e
0x00015bd5      0f1f00         nop dword [rax]
0x00015bd8      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00015bdd      4a858c0f0018.  test qword [rdi + r9 + 0x1800], rcx
0x00015be5      7570           jne 0x15c57
0x00015be7      4a8d3c0b       lea rdi, [rbx + r9]
0x00015beb      4531c0         xor r8d, r8d
0x00015bee      6690           nop
0x00015bf0      4c8b17         mov r10, qword [rdi]
0x00015bf3      4983c001       add r8, 1
0x00015bf7      4883c720       add rdi, 0x20                           ; "@"
0x00015bfb      4921ca         and r10, rcx
0x00015bfe      4d85d2         test r10, r10
0x00015c01      74ed           je 0x15bf0
0x00015c03      49c1e003       shl r8, 3
0x00015c07      4b858c0fb800.  test qword [r15 + r9 + 0xb8], rcx
0x00015c0f      740d           je 0x15c1e
0x00015c11      4b8b7c0500     mov rdi, qword [r13 + r8]
0x00015c16      48893e         mov qword [rsi], rdi
0x00015c19      e95af8ffff     jmp 0x15478
0x00015c1e      4b8b3c04       mov rdi, qword [r12 + r8]
0x00015c22      48893e         mov qword [rsi], rdi
0x00015c25      e94ef8ffff     jmp 0x15478
0x00015c2a      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00015c2f      e8dccdfeff     call sym..plt.got
0x00015c34      be00010000     mov esi, 0x100
0x00015c39      bf08000000     mov edi, 8
0x00015c3e      e86dcafeff     call sym.imp.calloc
0x00015c43      488b5c2408     mov rbx, qword [rsp + 8]
0x00015c48      4885c0         test rax, rax
0x00015c4b      48894358       mov qword [rbx + 0x58], rax
0x00015c4f      0f95c0         setne al
0x00015c52      e9ebf8ffff     jmp 0x15542
0x00015c57      4531c0         xor r8d, r8d
0x00015c5a      ebab           jmp 0x15c07
0x00015c5c      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00015c61      48858c1f0018.  test qword [rdi + rbx + 0x1800], rcx
0x00015c69      7535           jne 0x15ca0
0x00015c6b      4d8d4c1d00     lea r9, [r13 + rbx]
0x00015c70      4531c0         xor r8d, r8d
0x00015c73      4d8b39         mov r15, qword [r9]
0x00015c76      4983c001       add r8, 1
0x00015c7a      4983c120       add r9, 0x20                            ; "@"
0x00015c7e      4c89c7         mov rdi, r8
0x00015c81      4921cf         and r15, rcx
0x00015c84      4d85ff         test r15, r15
0x00015c87      74ea           je 0x15c73
0x00015c89      4d8b04fa       mov r8, qword [r10 + rdi*8]
0x00015c8d      4c8906         mov qword [rsi], r8
0x00015c90      498b3cfe       mov rdi, qword [r14 + rdi*8]
0x00015c94      4889be000800.  mov qword [rsi + 0x800], rdi
0x00015c9b      e913ffffff     jmp 0x15bb3
0x00015ca0      31ff           xor edi, edi
0x00015ca2      ebe5           jmp 0x15c89
0x00015ca4      e8b7c8feff     call sym.imp.__stack_chk_fail
0x00015ca9      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00015cae      e85dcdfeff     call sym..plt.got
0x00015cb3      4885ed         test rbp, rbp
0x00015cb6      0f8584f8ffff   jne 0x15540
0x00015cbc      e973ffffff     jmp 0x15c34
0x00015cc1      0f1f440000     nop dword [rax + rax]
0x00015cc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- calc_first:
0x00015cd0      807e3010       cmp byte [rsi + 0x30], 0x10
0x00015cd4      7462           je 0x15d38
0x00015cd6      55             push rbp
0x00015cd7      53             push rbx
0x00015cd8      4889f3         mov rbx, rsi
0x00015cdb      4889fd         mov rbp, rdi
0x00015cde      4883ec08       sub rsp, 8
0x00015ce2      48897318       mov qword [rbx + 0x18], rsi
0x00015ce6      488b5330       mov rdx, qword [rbx + 0x30]
0x00015cea      488b7628       mov rsi, qword [rsi + 0x28]
0x00015cee      e84dc1ffff     call sym.re_dfa_add_node
0x00015cf3      4883f8ff       cmp rax, 0xffffffffffffffff
0x00015cf7      4889c2         mov rdx, rax
0x00015cfa      48894338       mov qword [rbx + 0x38], rax
0x00015cfe      7450           je 0x15d50
0x00015d00      31c0           xor eax, eax
0x00015d02      807b300c       cmp byte [rbx + 0x30], 0xc
0x00015d06      7524           jne 0x15d2c
0x00015d08      8b4b28         mov ecx, dword [rbx + 0x28]
0x00015d0b      48c1e204       shl rdx, 4
0x00015d0f      48035500       add rdx, qword [rbp]
0x00015d13      81e1ff030000   and ecx, 0x3ff
0x00015d19      c1e108         shl ecx, 8
0x00015d1c      89ce           mov esi, ecx
0x00015d1e      8b4a08         mov ecx, dword [rdx + 8]
0x00015d21      81e1ff00fcff   and ecx, 0xfffc00ff
0x00015d27      09f1           or ecx, esi
0x00015d29      894a08         mov dword [rdx + 8], ecx
0x00015d2c      4883c408       add rsp, 8
0x00015d30      5b             pop rbx
0x00015d31      5d             pop rbp
0x00015d32      c3             ret
0x00015d33      0f1f440000     nop dword [rax + rax]
0x00015d38      488b4608       mov rax, qword [rsi + 8]
0x00015d3c      488b5018       mov rdx, qword [rax + 0x18]
0x00015d40      488b4038       mov rax, qword [rax + 0x38]
0x00015d44      48895618       mov qword [rsi + 0x18], rdx
0x00015d48      48894638       mov qword [rsi + 0x38], rax
0x00015d4c      31c0           xor eax, eax
0x00015d4e      c3             ret
0x00015d4f      90             nop
0x00015d50      b80c000000     mov eax, 0xc
0x00015d55      ebd5           jmp 0x15d2c
0x00015d57      660f1f840000.  nop word [rax + rax]
;-- free_fail_stack_return.part.24:
0x00015d60      4154           push r12
0x00015d62      55             push rbp
0x00015d63      4889fd         mov rbp, rdi
0x00015d66      53             push rbx
0x00015d67      48833f00       cmp qword [rdi], 0
0x00015d6b      7e35           jle 0x15da2
0x00015d6d      31db           xor ebx, ebx
0x00015d6f      4531e4         xor r12d, r12d
0x00015d72      660f1f440000   nop word [rax + rax]
0x00015d78      488b4510       mov rax, qword [rbp + 0x10]
0x00015d7c      4983c401       add r12, 1
0x00015d80      488b7c1828     mov rdi, qword [rax + rbx + 0x28]
0x00015d85      e886ccfeff     call sym..plt.got
0x00015d8a      488b4510       mov rax, qword [rbp + 0x10]
0x00015d8e      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x00015d93      4883c330       add rbx, 0x30
0x00015d97      e874ccfeff     call sym..plt.got
0x00015d9c      4c3b6500       cmp r12, qword [rbp]
0x00015da0      7cd6           jl 0x15d78
0x00015da2      5b             pop rbx
0x00015da3      488b7d10       mov rdi, qword [rbp + 0x10]
0x00015da7      5d             pop rbp
0x00015da8      415c           pop r12
0x00015daa      e961ccfeff     jmp sym..plt.got
0x00015daf      90             nop
;-- pop_fail_stack.isra.25:
0x00015db0      4154           push r12
0x00015db2      55             push rbp
0x00015db3      53             push rbx
0x00015db4      488b07         mov rax, qword [rdi]
0x00015db7      4883e801       sub rax, 1
0x00015dbb      4885c0         test rax, rax
0x00015dbe      488907         mov qword [rdi], rax
0x00015dc1      7862           js 0x15e25
0x00015dc3      488d1c40       lea rbx, [rax + rax*2]
0x00015dc7      488b06         mov rax, qword [rsi]
0x00015dca      4989f4         mov r12, rsi
0x00015dcd      48c1e104       shl rcx, 4
0x00015dd1      4c89cd         mov rbp, r9
0x00015dd4      4c89c7         mov rdi, r8
0x00015dd7      48c1e304       shl rbx, 4
0x00015ddb      4801d8         add rax, rbx
0x00015dde      488b30         mov rsi, qword [rax]
0x00015de1      488932         mov qword [rdx], rsi
0x00015de4      488b7010       mov rsi, qword [rax + 0x10]
0x00015de8      4889ca         mov rdx, rcx
0x00015deb      e820c9feff     call sym.imp.memcpy
0x00015df0      488b7d10       mov rdi, qword [rbp + 0x10]
0x00015df4      e817ccfeff     call sym..plt.got
0x00015df9      498b0424       mov rax, qword [r12]
0x00015dfd      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x00015e02      e809ccfeff     call sym..plt.got
0x00015e07      49031c24       add rbx, qword [r12]
0x00015e0b      f30f6f4318     movdqu xmm0, xmmword [rbx + 0x18]
0x00015e10      0f294500       movaps xmmword [rbp], xmm0
0x00015e14      488b4328       mov rax, qword [rbx + 0x28]
0x00015e18      48894510       mov qword [rbp + 0x10], rax
0x00015e1c      488b4308       mov rax, qword [rbx + 8]
0x00015e20      5b             pop rbx
0x00015e21      5d             pop rbp
0x00015e22      415c           pop r12
0x00015e24      c3             ret
0x00015e25      488d0d34cf00.  lea rcx, obj.__PRETTY_FUNCTION__.8040   ; 0x22d60 ; "pop_fail_stack"
0x00015e2c      488d356dc900.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x227a0 ; "../coreutils-8.31/lib/regexec.c"
0x00015e33      488d3dcac900.  lea rdi, str.num____0                   ; 0x22804 ; "num >= 0"
0x00015e3a      ba55050000     mov edx, 0x555
0x00015e3f      e8bcc7feff     call sym.imp.__assert_fail
0x00015e44      6690           nop
0x00015e46      662e0f1f8400.  nop word cs:[rax + rax]
;-- build_equiv_class.isra.27:
;-- build_collating_symbol.isra.28:
0x00015e50      55             push rbp
0x00015e51      53             push rbx
0x00015e52      4889fd         mov rbp, rdi
0x00015e55      4889f7         mov rdi, rsi
0x00015e58      4889f3         mov rbx, rsi
0x00015e5b      4883ec08       sub rsp, 8
0x00015e5f      e8ccc6feff     call sym.imp.strlen
0x00015e64      4883f801       cmp rax, 1
0x00015e68      7526           jne 0x15e90
0x00015e6a      0fb60b         movzx ecx, byte [rbx]
0x00015e6d      4889ca         mov rdx, rcx
0x00015e70      83e13f         and ecx, 0x3f
0x00015e73      48c1ea03       shr rdx, 3
0x00015e77      48d3e0         shl rax, cl
0x00015e7a      83e218         and edx, 0x18
0x00015e7d      4809441500     or qword [rbp + rdx], rax
0x00015e82      4883c408       add rsp, 8
0x00015e86      31c0           xor eax, eax
0x00015e88      5b             pop rbx
0x00015e89      5d             pop rbp
0x00015e8a      c3             ret
0x00015e8b      0f1f440000     nop dword [rax + rax]
0x00015e90      4883c408       add rsp, 8
0x00015e94      b803000000     mov eax, 3
0x00015e99      5b             pop rbx
0x00015e9a      5d             pop rbp
0x00015e9b      c3             ret
0x00015e9c      0f1f4000       nop dword [rax]
;-- build_charclass.isra.29:
0x00015ea0      4156           push r14
0x00015ea2      4155           push r13
0x00015ea4      4989cd         mov r13, rcx
0x00015ea7      4154           push r12
0x00015ea9      55             push rbp
0x00015eaa      4d89cc         mov r12, r9
0x00015ead      53             push rbx
0x00015eae      4889fd         mov rbp, rdi
0x00015eb1      4889f3         mov rbx, rsi
0x00015eb4      4883ec10       sub rsp, 0x10
0x00015eb8      48f744244000.  test qword [rsp + 0x40], 0x400000
0x00015ec1      7425           je 0x15ee8
0x00015ec3      488d3d49c900.  lea rdi, str.upper                      ; 0x22813 ; "upper"
0x00015eca      b906000000     mov ecx, 6
0x00015ecf      4c89ce         mov rsi, r9
0x00015ed2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00015ed4      0f97c0         seta al
0x00015ed7      1c00           sbb al, 0
0x00015ed9      84c0           test al, al
0x00015edb      0f85f5000000   jne 0x15fd6
0x00015ee1      4c8d2525c900.  lea r12, str.alpha                      ; 0x2280d ; "alpha"
0x00015ee8      498b4d00       mov rcx, qword [r13]
0x00015eec      493908         cmp qword [r8], rcx
0x00015eef      488b02         mov rax, qword [rdx]
0x00015ef2      0f8411010000   je 0x16009
0x00015ef8      488d5101       lea rdx, [rcx + 1]
0x00015efc      4c89e7         mov rdi, r12
0x00015eff      49895500       mov qword [r13], rdx
0x00015f03      4c8d2cc8       lea r13, [rax + rcx*8]
0x00015f07      e884c7feff     call sym.imp.wctype
0x00015f0c      488d3d0cc900.  lea rdi, str.alnum                      ; 0x2281f ; "alnum"
0x00015f13      49894500       mov qword [r13], rax
0x00015f17      b906000000     mov ecx, 6
0x00015f1c      4c89e6         mov rsi, r12
0x00015f1f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00015f21      0f97c0         seta al
0x00015f24      1c00           sbb al, 0
0x00015f26      84c0           test al, al
0x00015f28      746e           je 0x15f98
0x00015f2a      488d3df4c800.  lea rdi, str.cntrl                      ; 0x22825 ; "cntrl"
0x00015f31      b906000000     mov ecx, 6
0x00015f36      4c89e6         mov rsi, r12
0x00015f39      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00015f3b      0f97c0         seta al
0x00015f3e      1c00           sbb al, 0
0x00015f40      84c0           test al, al
0x00015f42      0f8500010000   jne 0x16048
0x00015f48      e8a3cafeff     call sym.imp.__ctype_b_loc
0x00015f4d      31c9           xor ecx, ecx
0x00015f4f      4885ed         test rbp, rbp
0x00015f52      488b10         mov rdx, qword [rax]
0x00015f55      bf01000000     mov edi, 1
0x00015f5a      0f85ba020000   jne 0x1621a
0x00015f60      f6044a02       test byte [rdx + rcx*2], 2
0x00015f64      7411           je 0x15f77
0x00015f66      4889c8         mov rax, rcx
0x00015f69      4889fe         mov rsi, rdi
0x00015f6c      48c1f806       sar rax, 6
0x00015f70      48d3e6         shl rsi, cl
0x00015f73      480934c3       or qword [rbx + rax*8], rsi
0x00015f77      4883c101       add rcx, 1
0x00015f7b      4881f9000100.  cmp rcx, 0x100
0x00015f82      75dc           jne 0x15f60
0x00015f84      31c0           xor eax, eax
0x00015f86      4883c410       add rsp, 0x10
0x00015f8a      5b             pop rbx
0x00015f8b      5d             pop rbp
0x00015f8c      415c           pop r12
0x00015f8e      415d           pop r13
0x00015f90      415e           pop r14
0x00015f92      c3             ret
0x00015f93      0f1f440000     nop dword [rax + rax]
0x00015f98      e853cafeff     call sym.imp.__ctype_b_loc
0x00015f9d      31c9           xor ecx, ecx
0x00015f9f      4885ed         test rbp, rbp
0x00015fa2      488b10         mov rdx, qword [rax]
0x00015fa5      bf01000000     mov edi, 1
0x00015faa      0f85ea010000   jne 0x1619a
0x00015fb0      f6044a08       test byte [rdx + rcx*2], 8
0x00015fb4      7411           je 0x15fc7
0x00015fb6      4889c8         mov rax, rcx
0x00015fb9      4889fe         mov rsi, rdi
0x00015fbc      48c1f806       sar rax, 6
0x00015fc0      48d3e6         shl rsi, cl
0x00015fc3      480934c3       or qword [rbx + rax*8], rsi
0x00015fc7      4883c101       add rcx, 1
0x00015fcb      4881f9000100.  cmp rcx, 0x100
0x00015fd2      75dc           jne 0x15fb0
0x00015fd4      ebae           jmp 0x15f84
0x00015fd6      488d3d3cc800.  lea rdi, str.lower                      ; 0x22819 ; "lower"
0x00015fdd      b906000000     mov ecx, 6
0x00015fe2      4c89ce         mov rsi, r9
0x00015fe5      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00015fe7      498b4d00       mov rcx, qword [r13]
0x00015feb      0f97c0         seta al
0x00015fee      1c00           sbb al, 0
0x00015ff0      84c0           test al, al
0x00015ff2      488d0514c800.  lea rax, str.alpha                      ; 0x2280d ; "alpha"
0x00015ff9      4c0f44e0       cmove r12, rax
0x00015ffd      493908         cmp qword [r8], rcx
0x00016000      488b02         mov rax, qword [rdx]
0x00016003      0f85effeffff   jne 0x15ef8
0x00016009      4c8d740901     lea r14, [rcx + rcx + 1]
0x0001600e      4889c7         mov rdi, rax
0x00016011      4c89442408     mov qword [rsp + 8], r8
0x00016016      48891424       mov qword [rsp], rdx
0x0001601a      4a8d34f50000.  lea rsi, [r14*8]
0x00016022      e809c8feff     call sym.imp.realloc
0x00016027      4885c0         test rax, rax
0x0001602a      0f8418030000   je 0x16348
0x00016030      488b1424       mov rdx, qword [rsp]
0x00016034      4c8b442408     mov r8, qword [rsp + 8]
0x00016039      488902         mov qword [rdx], rax
0x0001603c      4d8930         mov qword [r8], r14
0x0001603f      498b4d00       mov rcx, qword [r13]
0x00016043      e9b0feffff     jmp 0x15ef8
0x00016048      488d3dcac700.  lea rdi, str.lower                      ; 0x22819 ; "lower"
0x0001604f      b906000000     mov ecx, 6
0x00016054      4c89e6         mov rsi, r12
0x00016057      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00016059      0f97c0         seta al
0x0001605c      1c00           sbb al, 0
0x0001605e      84c0           test al, al
0x00016060      7468           je 0x160ca
0x00016062      488d3dc2c700.  lea rdi, str.space                      ; 0x2282b ; "space"
0x00016069      b906000000     mov ecx, 6
0x0001606e      4c89e6         mov rsi, r12
0x00016071      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00016073      0f97c0         seta al
0x00016076      1c00           sbb al, 0
0x00016078      84c0           test al, al
0x0001607a      0f8592000000   jne 0x16112
0x00016080      e86bc9feff     call sym.imp.__ctype_b_loc
0x00016085      31c9           xor ecx, ecx
0x00016087      4885ed         test rbp, rbp
0x0001608a      488b10         mov rdx, qword [rax]
0x0001608d      bf01000000     mov edi, 1
0x00016092      0f8556030000   jne 0x163ee
0x00016098      0f1f84000000.  nop dword [rax + rax]
0x000160a0      f6444a0120     test byte [rdx + rcx*2 + 1], 0x20
0x000160a5      7411           je 0x160b8
0x000160a7      4889c8         mov rax, rcx
0x000160aa      4889fe         mov rsi, rdi
0x000160ad      48c1f806       sar rax, 6
0x000160b1      48d3e6         shl rsi, cl
0x000160b4      480934c3       or qword [rbx + rax*8], rsi
0x000160b8      4883c101       add rcx, 1
0x000160bc      4881f9000100.  cmp rcx, 0x100
0x000160c3      75db           jne 0x160a0
0x000160c5      e9bafeffff     jmp 0x15f84
0x000160ca      e821c9feff     call sym.imp.__ctype_b_loc
0x000160cf      31c9           xor ecx, ecx
0x000160d1      4885ed         test rbp, rbp
0x000160d4      488b10         mov rdx, qword [rax]
0x000160d7      bf01000000     mov edi, 1
0x000160dc      0f85d0010000   jne 0x162b2
0x000160e2      660f1f440000   nop word [rax + rax]
0x000160e8      f6444a0102     test byte [rdx + rcx*2 + 1], 2
0x000160ed      7411           je 0x16100
0x000160ef      4889c8         mov rax, rcx
0x000160f2      4889fe         mov rsi, rdi
0x000160f5      48c1f806       sar rax, 6
0x000160f9      48d3e6         shl rsi, cl
0x000160fc      480934c3       or qword [rbx + rax*8], rsi
0x00016100      4883c101       add rcx, 1
0x00016104      4881f9000100.  cmp rcx, 0x100
0x0001610b      75db           jne 0x160e8
0x0001610d      e972feffff     jmp 0x15f84
0x00016112      488d3df4c600.  lea rdi, str.alpha                      ; 0x2280d ; "alpha"
0x00016119      b906000000     mov ecx, 6
0x0001611e      4c89e6         mov rsi, r12
0x00016121      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00016123      0f97c0         seta al
0x00016126      1c00           sbb al, 0
0x00016128      84c0           test al, al
0x0001612a      0f84a3000000   je 0x161d3
0x00016130      488d3d13c700.  lea rdi, [0x0002284a]                   ; "digit"
0x00016137      b906000000     mov ecx, 6
0x0001613c      4c89e6         mov rsi, r12
0x0001613f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00016141      0f97c0         seta al
0x00016144      1c00           sbb al, 0
0x00016146      84c0           test al, al
0x00016148      0f8505010000   jne 0x16253
0x0001614e      e89dc8feff     call sym.imp.__ctype_b_loc
0x00016153      31c9           xor ecx, ecx
0x00016155      4885ed         test rbp, rbp
0x00016158      488b10         mov rdx, qword [rax]
0x0001615b      bf01000000     mov edi, 1
0x00016160      0f85a4040000   jne 0x1660a
0x00016166      662e0f1f8400.  nop word cs:[rax + rax]
0x00016170      f6444a0108     test byte [rdx + rcx*2 + 1], 8
0x00016175      7411           je 0x16188
0x00016177      4889c8         mov rax, rcx
0x0001617a      4889fe         mov rsi, rdi
0x0001617d      48c1f806       sar rax, 6
0x00016181      48d3e6         shl rsi, cl
0x00016184      480934c3       or qword [rbx + rax*8], rsi
0x00016188      4883c101       add rcx, 1
0x0001618c      4881f9000100.  cmp rcx, 0x100
0x00016193      75db           jne 0x16170
0x00016195      e9eafdffff     jmp 0x15f84
0x0001619a      31c0           xor eax, eax
0x0001619c      0f1f4000       nop dword [rax]
0x000161a0      f6044208       test byte [rdx + rax*2], 8
0x000161a4      741c           je 0x161c2
0x000161a6      0fb64c0500     movzx ecx, byte [rbp + rax]
0x000161ab      4989fa         mov r10, rdi
0x000161ae      4889ce         mov rsi, rcx
0x000161b1      83e13f         and ecx, 0x3f
0x000161b4      48c1ee03       shr rsi, 3
0x000161b8      49d3e2         shl r10, cl
0x000161bb      83e618         and esi, 0x18
0x000161be      4c091433       or qword [rbx + rsi], r10
0x000161c2      4883c001       add rax, 1
0x000161c6      483d00010000   cmp rax, 0x100
0x000161cc      75d2           jne 0x161a0
0x000161ce      e9b1fdffff     jmp 0x15f84
0x000161d3      e818c8feff     call sym.imp.__ctype_b_loc
0x000161d8      31c9           xor ecx, ecx
0x000161da      4885ed         test rbp, rbp
0x000161dd      488b10         mov rdx, qword [rax]
0x000161e0      bf01000000     mov edi, 1
0x000161e5      0f85cd010000   jne 0x163b8
0x000161eb      0f1f440000     nop dword [rax + rax]
0x000161f0      f6444a0104     test byte [rdx + rcx*2 + 1], 4
0x000161f5      7411           je 0x16208
0x000161f7      4889c8         mov rax, rcx
0x000161fa      4889fe         mov rsi, rdi
0x000161fd      48c1f806       sar rax, 6
0x00016201      48d3e6         shl rsi, cl
0x00016204      480934c3       or qword [rbx + rax*8], rsi
0x00016208      4883c101       add rcx, 1
0x0001620c      4881f9000100.  cmp rcx, 0x100
0x00016213      75db           jne 0x161f0
0x00016215      e96afdffff     jmp 0x15f84
0x0001621a      31c0           xor eax, eax
0x0001621c      0f1f4000       nop dword [rax]
0x00016220      f6044202       test byte [rdx + rax*2], 2
0x00016224      741c           je 0x16242
0x00016226      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0001622b      4989fb         mov r11, rdi
0x0001622e      4889ce         mov rsi, rcx
0x00016231      83e13f         and ecx, 0x3f
0x00016234      48c1ee03       shr rsi, 3
0x00016238      49d3e3         shl r11, cl
0x0001623b      83e618         and esi, 0x18
0x0001623e      4c091c33       or qword [rbx + rsi], r11
0x00016242      4883c001       add rax, 1
0x00016246      483d00010000   cmp rax, 0x100
0x0001624c      75d2           jne 0x16220
0x0001624e      e931fdffff     jmp 0x15f84
0x00016253      488d3dd7c500.  lea rdi, str.print                      ; 0x22831 ; "print"
0x0001625a      b906000000     mov ecx, 6
0x0001625f      4c89e6         mov rsi, r12
0x00016262      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00016264      0f97c0         seta al
0x00016267      1c00           sbb al, 0
0x00016269      84c0           test al, al
0x0001626b      757f           jne 0x162ec
0x0001626d      e87ec7feff     call sym.imp.__ctype_b_loc
0x00016272      31c9           xor ecx, ecx
0x00016274      4885ed         test rbp, rbp
0x00016277      488b10         mov rdx, qword [rax]
0x0001627a      bf01000000     mov edi, 1
0x0001627f      0f85f2030000   jne 0x16677
0x00016285      0f1f00         nop dword [rax]
0x00016288      f6444a0140     test byte [rdx + rcx*2 + 1], 0x40
0x0001628d      7411           je 0x162a0
0x0001628f      4889c8         mov rax, rcx
0x00016292      4889fe         mov rsi, rdi
0x00016295      48c1f806       sar rax, 6
0x00016299      48d3e6         shl rsi, cl
0x0001629c      480934c3       or qword [rbx + rax*8], rsi
0x000162a0      4883c101       add rcx, 1
0x000162a4      4881f9000100.  cmp rcx, 0x100
0x000162ab      75db           jne 0x16288
0x000162ad      e9d2fcffff     jmp 0x15f84
0x000162b2      31c0           xor eax, eax
0x000162b4      0f1f4000       nop dword [rax]
0x000162b8      f644420102     test byte [rdx + rax*2 + 1], 2
0x000162bd      741c           je 0x162db
0x000162bf      0fb64c0500     movzx ecx, byte [rbp + rax]
0x000162c4      4989fe         mov r14, rdi
0x000162c7      4889ce         mov rsi, rcx
0x000162ca      83e13f         and ecx, 0x3f
0x000162cd      48c1ee03       shr rsi, 3
0x000162d1      49d3e6         shl r14, cl
0x000162d4      83e618         and esi, 0x18
0x000162d7      4c093433       or qword [rbx + rsi], r14
0x000162db      4883c001       add rax, 1
0x000162df      483d00010000   cmp rax, 0x100
0x000162e5      75d1           jne 0x162b8
0x000162e7      e998fcffff     jmp 0x15f84
0x000162ec      488d3d20c500.  lea rdi, str.upper                      ; 0x22813 ; "upper"
0x000162f3      b906000000     mov ecx, 6
0x000162f8      4c89e6         mov rsi, r12
0x000162fb      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000162fd      0f97c0         seta al
0x00016300      1c00           sbb al, 0
0x00016302      84c0           test al, al
0x00016304      754c           jne 0x16352
0x00016306      e8e5c6feff     call sym.imp.__ctype_b_loc
0x0001630b      31c9           xor ecx, ecx
0x0001630d      4885ed         test rbp, rbp
0x00016310      488b00         mov rax, qword [rax]
0x00016313      bf01000000     mov edi, 1
0x00016318      0f8522030000   jne 0x16640
0x0001631e      f644480101     test byte [rax + rcx*2 + 1], 1
0x00016323      7411           je 0x16336
0x00016325      4889ca         mov rdx, rcx
0x00016328      4889fe         mov rsi, rdi
0x0001632b      48c1fa06       sar rdx, 6
0x0001632f      48d3e6         shl rsi, cl
0x00016332      480934d3       or qword [rbx + rdx*8], rsi
0x00016336      4883c101       add rcx, 1
0x0001633a      4881f9000100.  cmp rcx, 0x100
0x00016341      75db           jne 0x1631e
0x00016343      e93cfcffff     jmp 0x15f84
0x00016348      b80c000000     mov eax, 0xc
0x0001634d      e934fcffff     jmp 0x15f86
0x00016352      488d3ddec400.  lea rdi, str.blank                      ; 0x22837 ; "blank"
0x00016359      b906000000     mov ecx, 6
0x0001635e      4c89e6         mov rsi, r12
0x00016361      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00016363      0f97c0         seta al
0x00016366      1c00           sbb al, 0
0x00016368      84c0           test al, al
0x0001636a      0f85ee000000   jne 0x1645e
0x00016370      e87bc6feff     call sym.imp.__ctype_b_loc
0x00016375      31c9           xor ecx, ecx
0x00016377      4885ed         test rbp, rbp
0x0001637a      488b10         mov rdx, qword [rax]
0x0001637d      be01000000     mov esi, 1
0x00016382      0f859c000000   jne 0x16424
0x00016388      f6044a01       test byte [rdx + rcx*2], 1
0x0001638c      7411           je 0x1639f
0x0001638e      4889c8         mov rax, rcx
0x00016391      4889f7         mov rdi, rsi
0x00016394      48c1f806       sar rax, 6
0x00016398      48d3e7         shl rdi, cl
0x0001639b      48093cc3       or qword [rbx + rax*8], rdi
0x0001639f      4883c101       add rcx, 1
0x000163a3      4881f9000100.  cmp rcx, 0x100
0x000163aa      75dc           jne 0x16388
0x000163ac      e9d3fbffff     jmp 0x15f84
0x000163b1      0f1f80000000.  nop dword [rax]
0x000163b8      31c0           xor eax, eax
0x000163ba      f644420104     test byte [rdx + rax*2 + 1], 4
0x000163bf      741c           je 0x163dd
0x000163c1      0fb64c0500     movzx ecx, byte [rbp + rax]
0x000163c6      4989f9         mov r9, rdi
0x000163c9      4889ce         mov rsi, rcx
0x000163cc      83e13f         and ecx, 0x3f
0x000163cf      48c1ee03       shr rsi, 3
0x000163d3      49d3e1         shl r9, cl
0x000163d6      83e618         and esi, 0x18
0x000163d9      4c090c33       or qword [rbx + rsi], r9
0x000163dd      4883c001       add rax, 1
0x000163e1      483d00010000   cmp rax, 0x100
0x000163e7      75d1           jne 0x163ba
0x000163e9      e996fbffff     jmp 0x15f84
0x000163ee      31c0           xor eax, eax
0x000163f0      f644420120     test byte [rdx + rax*2 + 1], 0x20
0x000163f5      741c           je 0x16413
0x000163f7      0fb64c0500     movzx ecx, byte [rbp + rax]
0x000163fc      4989f9         mov r9, rdi
0x000163ff      4889ce         mov rsi, rcx
0x00016402      83e13f         and ecx, 0x3f
0x00016405      48c1ee03       shr rsi, 3
0x00016409      49d3e1         shl r9, cl
0x0001640c      83e618         and esi, 0x18
0x0001640f      4c090c33       or qword [rbx + rsi], r9
0x00016413      4883c001       add rax, 1
0x00016417      483d00010000   cmp rax, 0x100
0x0001641d      75d1           jne 0x163f0
0x0001641f      e960fbffff     jmp 0x15f84
0x00016424      31c0           xor eax, eax
0x00016426      bf01000000     mov edi, 1
0x0001642b      f6044201       test byte [rdx + rax*2], 1
0x0001642f      741c           je 0x1644d
0x00016431      0fb64c0500     movzx ecx, byte [rbp + rax]
0x00016436      4989fe         mov r14, rdi
0x00016439      4889ce         mov rsi, rcx
0x0001643c      83e13f         and ecx, 0x3f
0x0001643f      48c1ee03       shr rsi, 3
0x00016443      49d3e6         shl r14, cl
0x00016446      83e618         and esi, 0x18
0x00016449      4c093433       or qword [rbx + rsi], r14
0x0001644d      4883c001       add rax, 1
0x00016451      483d00010000   cmp rax, 0x100
0x00016457      75d2           jne 0x1642b
0x00016459      e926fbffff     jmp 0x15f84
0x0001645e      488d35d8c300.  lea rsi, str.graph                      ; 0x2283d ; "graph"
0x00016465      4c89e7         mov rdi, r12
0x00016468      e863c2feff     call sym.imp.strcmp
0x0001646d      85c0           test eax, eax
0x0001646f      7579           jne 0x164ea
0x00016471      e87ac5feff     call sym.imp.__ctype_b_loc
0x00016476      31c9           xor ecx, ecx
0x00016478      4885ed         test rbp, rbp
0x0001647b      488b30         mov rsi, qword [rax]
0x0001647e      ba01000000     mov edx, 1
0x00016483      752a           jne 0x164af
0x00016485      66833c4e00     cmp word [rsi + rcx*2], 0
0x0001648a      7911           jns 0x1649d
0x0001648c      4889c8         mov rax, rcx
0x0001648f      4889d7         mov rdi, rdx
0x00016492      48c1f806       sar rax, 6
0x00016496      48d3e7         shl rdi, cl
0x00016499      48093cc3       or qword [rbx + rax*8], rdi
0x0001649d      4883c101       add rcx, 1
0x000164a1      4881f9000100.  cmp rcx, 0x100
0x000164a8      75db           jne 0x16485
0x000164aa      e9d5faffff     jmp 0x15f84
0x000164af      31c0           xor eax, eax
0x000164b1      bf01000000     mov edi, 1
0x000164b6      66833c4600     cmp word [rsi + rax*2], 0
0x000164bb      791c           jns 0x164d9
0x000164bd      0fb64c0500     movzx ecx, byte [rbp + rax]
0x000164c2      4989f9         mov r9, rdi
0x000164c5      4889ca         mov rdx, rcx
0x000164c8      83e13f         and ecx, 0x3f
0x000164cb      48c1ea03       shr rdx, 3
0x000164cf      49d3e1         shl r9, cl
0x000164d2      83e218         and edx, 0x18
0x000164d5      4c090c13       or qword [rbx + rdx], r9
0x000164d9      4883c001       add rax, 1
0x000164dd      483d00010000   cmp rax, 0x100
0x000164e3      75d1           jne 0x164b6
0x000164e5      e99afaffff     jmp 0x15f84
0x000164ea      488d3552c300.  lea rsi, str.punct                      ; 0x22843 ; "punct"
0x000164f1      4c89e7         mov rdi, r12
0x000164f4      e8d7c1feff     call sym.imp.strcmp
0x000164f9      85c0           test eax, eax
0x000164fb      7577           jne 0x16574
0x000164fd      e8eec4feff     call sym.imp.__ctype_b_loc
0x00016502      31c9           xor ecx, ecx
0x00016504      4885ed         test rbp, rbp
0x00016507      488b30         mov rsi, qword [rax]
0x0001650a      ba01000000     mov edx, 1
0x0001650f      7529           jne 0x1653a
0x00016511      f6044e04       test byte [rsi + rcx*2], 4
0x00016515      7411           je 0x16528
0x00016517      4889c8         mov rax, rcx
0x0001651a      4889d7         mov rdi, rdx
0x0001651d      48c1f806       sar rax, 6
0x00016521      48d3e7         shl rdi, cl
0x00016524      48093cc3       or qword [rbx + rax*8], rdi
0x00016528      4883c101       add rcx, 1
0x0001652c      4881f9000100.  cmp rcx, 0x100
0x00016533      75dc           jne 0x16511
0x00016535      e94afaffff     jmp 0x15f84
0x0001653a      31c0           xor eax, eax
0x0001653c      bf01000000     mov edi, 1
0x00016541      f6044604       test byte [rsi + rax*2], 4
0x00016545      741c           je 0x16563
0x00016547      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0001654c      4989fe         mov r14, rdi
0x0001654f      4889ca         mov rdx, rcx
0x00016552      83e13f         and ecx, 0x3f
0x00016555      48c1ea03       shr rdx, 3
0x00016559      49d3e6         shl r14, cl
0x0001655c      83e218         and edx, 0x18
0x0001655f      4c093413       or qword [rbx + rdx], r14
0x00016563      4883c001       add rax, 1
0x00016567      483d00010000   cmp rax, 0x100
0x0001656d      75d2           jne 0x16541
0x0001656f      e910faffff     jmp 0x15f84
0x00016574      488d35cec200.  lea rsi, str.xdigit                     ; 0x22849 ; "xdigit"
0x0001657b      4c89e7         mov rdi, r12
0x0001657e      e84dc1feff     call sym.imp.strcmp
0x00016583      85c0           test eax, eax
0x00016585      7579           jne 0x16600
0x00016587      e864c4feff     call sym.imp.__ctype_b_loc
0x0001658c      31c9           xor ecx, ecx
0x0001658e      4885ed         test rbp, rbp
0x00016591      488b30         mov rsi, qword [rax]
0x00016594      ba01000000     mov edx, 1
0x00016599      752a           jne 0x165c5
0x0001659b      f6444e0110     test byte [rsi + rcx*2 + 1], 0x10
0x000165a0      7411           je 0x165b3
0x000165a2      4889c8         mov rax, rcx
0x000165a5      4889d7         mov rdi, rdx
0x000165a8      48c1f806       sar rax, 6
0x000165ac      48d3e7         shl rdi, cl
0x000165af      48093cc3       or qword [rbx + rax*8], rdi
0x000165b3      4883c101       add rcx, 1
0x000165b7      4881f9000100.  cmp rcx, 0x100
0x000165be      75db           jne 0x1659b
0x000165c0      e9bff9ffff     jmp 0x15f84
0x000165c5      31c0           xor eax, eax
0x000165c7      bf01000000     mov edi, 1
0x000165cc      f644460110     test byte [rsi + rax*2 + 1], 0x10
0x000165d1      741c           je 0x165ef
0x000165d3      0fb64c0500     movzx ecx, byte [rbp + rax]
0x000165d8      4989f9         mov r9, rdi
0x000165db      4889ca         mov rdx, rcx
0x000165de      83e13f         and ecx, 0x3f
0x000165e1      48c1ea03       shr rdx, 3
0x000165e5      49d3e1         shl r9, cl
0x000165e8      83e218         and edx, 0x18
0x000165eb      4c090c13       or qword [rbx + rdx], r9
0x000165ef      4883c001       add rax, 1
0x000165f3      483d00010000   cmp rax, 0x100
0x000165f9      75d1           jne 0x165cc
0x000165fb      e984f9ffff     jmp 0x15f84
0x00016600      b804000000     mov eax, 4
0x00016605      e97cf9ffff     jmp 0x15f86
0x0001660a      31c0           xor eax, eax
0x0001660c      f644420108     test byte [rdx + rax*2 + 1], 8
0x00016611      741c           je 0x1662f
0x00016613      0fb64c0500     movzx ecx, byte [rbp + rax]
0x00016618      4989fe         mov r14, rdi
0x0001661b      4889ce         mov rsi, rcx
0x0001661e      83e13f         and ecx, 0x3f
0x00016621      48c1ee03       shr rsi, 3
0x00016625      49d3e6         shl r14, cl
0x00016628      83e618         and esi, 0x18
0x0001662b      4c093433       or qword [rbx + rsi], r14
0x0001662f      4883c001       add rax, 1
0x00016633      483d00010000   cmp rax, 0x100
0x00016639      75d1           jne 0x1660c
0x0001663b      e944f9ffff     jmp 0x15f84
0x00016640      31d2           xor edx, edx
0x00016642      f644500101     test byte [rax + rdx*2 + 1], 1
0x00016647      741c           je 0x16665
0x00016649      0fb64c1500     movzx ecx, byte [rbp + rdx]
0x0001664e      4989f9         mov r9, rdi
0x00016651      4889ce         mov rsi, rcx
0x00016654      83e13f         and ecx, 0x3f
0x00016657      48c1ee03       shr rsi, 3
0x0001665b      49d3e1         shl r9, cl
0x0001665e      83e618         and esi, 0x18
0x00016661      4c090c33       or qword [rbx + rsi], r9
0x00016665      4883c201       add rdx, 1
0x00016669      4881fa000100.  cmp rdx, 0x100
0x00016670      75d0           jne 0x16642
0x00016672      e90df9ffff     jmp 0x15f84
0x00016677      31c0           xor eax, eax
0x00016679      f644420140     test byte [rdx + rax*2 + 1], 0x40
0x0001667e      741c           je 0x1669c
0x00016680      0fb64c0500     movzx ecx, byte [rbp + rax]
0x00016685      4989fe         mov r14, rdi
0x00016688      4889ce         mov rsi, rcx
0x0001668b      83e13f         and ecx, 0x3f
0x0001668e      48c1ee03       shr rsi, 3
0x00016692      49d3e6         shl r14, cl
0x00016695      83e618         and esi, 0x18
0x00016698      4c093433       or qword [rbx + rsi], r14
0x0001669c      4883c001       add rax, 1
0x000166a0      483d00010000   cmp rax, 0x100
0x000166a6      75d1           jne 0x16679
0x000166a8      e9d7f8ffff     jmp 0x15f84
0x000166ad      0f1f00         nop dword [rax]
;-- build_charclass_op:
0x000166b0      4157           push r15
0x000166b2      4156           push r14
0x000166b4      4989d6         mov r14, rdx
0x000166b7      4155           push r13
0x000166b9      4154           push r12
0x000166bb      4989cd         mov r13, rcx
0x000166be      55             push rbp
0x000166bf      53             push rbx
0x000166c0      4889fd         mov rbp, rdi
0x000166c3      bf20000000     mov edi, 0x20                           ; "@"
0x000166c8      4589c4         mov r12d, r8d
0x000166cb      4883ec58       sub rsp, 0x58
0x000166cf      48893424       mov qword [rsp], rsi
0x000166d3      be01000000     mov esi, 1
0x000166d8      4c894c2408     mov qword [rsp + 8], r9
0x000166dd      64488b042528.  mov rax, qword fs:[0x28]
0x000166e6      4889442448     mov qword [rsp + 0x48], rax
0x000166eb      31c0           xor eax, eax
0x000166ed      48c744241800.  mov qword [rsp + 0x18], 0
0x000166f6      e8b5bffeff     call sym.imp.calloc
0x000166fb      4885c0         test rax, rax
0x000166fe      0f84bc010000   je 0x168c0
0x00016704      be01000000     mov esi, 1
0x00016709      bf50000000     mov edi, 0x50                           ; 'P'
0x0001670e      4889c3         mov rbx, rax
0x00016711      e89abffeff     call sym.imp.calloc
0x00016716      4885c0         test rax, rax
0x00016719      4989c7         mov r15, rax
0x0001671c      0f84ae010000   je 0x168d0
0x00016722      0fb64020       movzx eax, byte [rax + 0x20]
0x00016726      4883ec08       sub rsp, 8
0x0001672a      4489e2         mov edx, r12d
0x0001672d      6a00           push 0
0x0001672f      83e201         and edx, 1
0x00016732      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00016737      498d4f48       lea rcx, [r15 + 0x48]
0x0001673b      4d89f1         mov r9, r14
0x0001673e      4889de         mov rsi, rbx
0x00016741      4c8d442428     lea r8, [rsp + 0x28]
0x00016746      83e0fe         and eax, 0xfffffffe                     ; 4294967294
0x00016749      09d0           or eax, edx
0x0001674b      498d5718       lea rdx, [r15 + 0x18]
0x0001674f      41884720       mov byte [r15 + 0x20], al
0x00016753      e848f7ffff     call sym.build_charclass.isra.29
0x00016758      85c0           test eax, eax
0x0001675a      5a             pop rdx
0x0001675b      59             pop rcx
0x0001675c      0f858e010000   jne 0x168f0
0x00016762      490fbe4d00     movsx rcx, byte [r13]
0x00016767      be01000000     mov esi, 1
0x0001676c      84c9           test cl, cl
0x0001676e      743a           je 0x167aa
0x00016770      488d413f       lea rax, [rcx + 0x3f]
0x00016774      4885c9         test rcx, rcx
0x00016777      4889ca         mov rdx, rcx
0x0001677a      480f49c1       cmovns rax, rcx
0x0001677e      48c1fa3f       sar rdx, 0x3f
0x00016782      4983c501       add r13, 1
0x00016786      48c1ea3a       shr rdx, 0x3a
0x0001678a      48c1f806       sar rax, 6
0x0001678e      4801d1         add rcx, rdx
0x00016791      83e13f         and ecx, 0x3f
0x00016794      4829d1         sub rcx, rdx
0x00016797      4889f2         mov rdx, rsi
0x0001679a      48d3e2         shl rdx, cl
0x0001679d      490fbe4d00     movsx rcx, byte [r13]
0x000167a2      480914c3       or qword [rbx + rax*8], rdx
0x000167a6      84c9           test cl, cl
0x000167a8      75c6           jne 0x16770
0x000167aa      4584e4         test r12b, r12b
0x000167ad      7413           je 0x167c2
0x000167af      488d5320       lea rdx, [rbx + 0x20]
0x000167b3      4889d8         mov rax, rbx
0x000167b6      48f710         not qword [rax]
0x000167b9      4883c008       add rax, 8
0x000167bd      4839c2         cmp rdx, rax
0x000167c0      75f4           jne 0x167b6
0x000167c2      83bdb4000000.  cmp dword [rbp + 0xb4], 1
0x000167c9      7e18           jle 0x167e3
0x000167cb      488b4d78       mov rcx, qword [rbp + 0x78]
0x000167cf      31c0           xor eax, eax
0x000167d1      488b1401       mov rdx, qword [rcx + rax]
0x000167d5      48211403       and qword [rbx + rax], rdx
0x000167d9      4883c008       add rax, 8
0x000167dd      4883f820       cmp rax, 0x20                           ; "@"
0x000167e1      75ee           jne 0x167d1
0x000167e3      4c8d4c2420     lea r9, [rsp + 0x20]
0x000167e8      4c8d6570       lea r12, [rbp + 0x70]
0x000167ec      4c8dad800000.  lea r13, [rbp + 0x80]
0x000167f3      31c9           xor ecx, ecx
0x000167f5      31d2           xor edx, edx
0x000167f7      c644242803     mov byte [rsp + 0x28], 3
0x000167fc      4d89c8         mov r8, r9
0x000167ff      4c89ee         mov rsi, r13
0x00016802      4c89e7         mov rdi, r12
0x00016805      48895c2420     mov qword [rsp + 0x20], rbx
0x0001680a      4c890c24       mov qword [rsp], r9
0x0001680e      e84dcbffff     call sym.create_token_tree.isra.16
0x00016813      4885c0         test rax, rax
0x00016816      4989c6         mov r14, rax
0x00016819      0f8491000000   je 0x168b0
0x0001681f      83bdb4000000.  cmp dword [rbp + 0xb4], 1
0x00016826      7e78           jle 0x168a0
0x00016828      808db0000000.  or byte [rbp + 0xb0], 2
0x0001682f      4c8b0c24       mov r9, qword [rsp]
0x00016833      31c9           xor ecx, ecx
0x00016835      31d2           xor edx, edx
0x00016837      4c89ee         mov rsi, r13
0x0001683a      4c89e7         mov rdi, r12
0x0001683d      c644242806     mov byte [rsp + 0x28], 6
0x00016842      4c897c2420     mov qword [rsp + 0x20], r15
0x00016847      4d89c8         mov r8, r9
0x0001684a      e811cbffff     call sym.create_token_tree.isra.16
0x0001684f      4885c0         test rax, rax
0x00016852      745c           je 0x168b0
0x00016854      4c8d442430     lea r8, [rsp + 0x30]
0x00016859      4c89f2         mov rdx, r14
0x0001685c      4889c1         mov rcx, rax
0x0001685f      4c89ee         mov rsi, r13
0x00016862      4c89e7         mov rdi, r12
0x00016865      c64424380a     mov byte [rsp + 0x38], 0xa
0x0001686a      e8f1caffff     call sym.create_token_tree.isra.16
0x0001686f      4989c6         mov r14, rax
0x00016872      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00016877      6448333c2528.  xor rdi, qword fs:[0x28]
0x00016880      4c89f0         mov rax, r14
0x00016883      0f858c000000   jne 0x16915
0x00016889      4883c458       add rsp, 0x58
0x0001688d      5b             pop rbx
0x0001688e      5d             pop rbp
0x0001688f      415c           pop r12
0x00016891      415d           pop r13
0x00016893      415e           pop r14
0x00016895      415f           pop r15
0x00016897      c3             ret
0x00016898      0f1f84000000.  nop dword [rax + rax]
0x000168a0      4c89ff         mov rdi, r15
0x000168a3      e818b5ffff     call sym.free_charset
0x000168a8      ebc8           jmp 0x16872
0x000168aa      660f1f440000   nop word [rax + rax]
0x000168b0      4889df         mov rdi, rbx
0x000168b3      e858c1feff     call sym..plt.got
0x000168b8      4c89ff         mov rdi, r15
0x000168bb      e800b5ffff     call sym.free_charset
0x000168c0      488b442408     mov rax, qword [rsp + 8]
0x000168c5      4531f6         xor r14d, r14d
0x000168c8      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x000168ce      eba2           jmp 0x16872
0x000168d0      4889df         mov rdi, rbx
0x000168d3      4531f6         xor r14d, r14d
0x000168d6      e835c1feff     call sym..plt.got
0x000168db      488b442408     mov rax, qword [rsp + 8]
0x000168e0      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x000168e6      eb8a           jmp 0x16872
0x000168e8      0f1f84000000.  nop dword [rax + rax]
0x000168f0      4889df         mov rdi, rbx
0x000168f3      890424         mov dword [rsp], eax
0x000168f6      4531f6         xor r14d, r14d
0x000168f9      e812c1feff     call sym..plt.got
0x000168fe      4c89ff         mov rdi, r15
0x00016901      e8bab4ffff     call sym.free_charset
0x00016906      488b7c2408     mov rdi, qword [rsp + 8]
0x0001690b      8b0424         mov eax, dword [rsp]
0x0001690e      8907           mov dword [rdi], eax
0x00016910      e95dffffff     jmp 0x16872
0x00016915      e846bcfeff     call sym.imp.__stack_chk_fail
0x0001691a      660f1f440000   nop word [rax + rax]
;-- re_compile_fastmap_iter.isra.30:
0x00016920      4157           push r15
0x00016922      4156           push r14
0x00016924      4889f8         mov rax, rdi
0x00016927      4155           push r13
0x00016929      4154           push r12
0x0001692b      55             push rbp
0x0001692c      53             push rbx
0x0001692d      31db           xor ebx, ebx
0x0001692f      4889cd         mov rbp, rcx
0x00016932      4881ec780100.  sub rsp, 0x178
0x00016939      488b00         mov rax, qword [rax]
0x0001693c      48897c2430     mov qword [rsp + 0x30], rdi
0x00016941      4889742420     mov qword [rsp + 0x20], rsi
0x00016946      64488b3c2528.  mov rdi, qword fs:[0x28]
0x0001694f      4889bc246801.  mov qword [rsp + 0x168], rdi
0x00016957      31ff           xor edi, edi
0x00016959      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x00016960      4889542428     mov qword [rsp + 0x28], rdx
0x00016965      4889442408     mov qword [rsp + 8], rax
0x0001696a      7517           jne 0x16983
0x0001696c      488b442430     mov rax, qword [rsp + 0x30]
0x00016971      488b4018       mov rax, qword [rax + 0x18]
0x00016975      4889c3         mov rbx, rax
0x00016978      48890424       mov qword [rsp], rax
0x0001697c      48c1eb16       shr rbx, 0x16
0x00016980      83e301         and ebx, 1
0x00016983      488b442420     mov rax, qword [rsp + 0x20]
0x00016988      48833800       cmp qword [rax], 0
0x0001698c      0f8e0b040000   jle 0x16d9d
0x00016992      488d442458     lea rax, [rsp + 0x58]
0x00016997      48c704240000.  mov qword [rsp], 0
0x0001699f      4889442440     mov qword [rsp + 0x40], rax
0x000169a4      488d442454     lea rax, [rsp + 0x54]
0x000169a9      4889442448     mov qword [rsp + 0x48], rax
0x000169ae      488d442460     lea rax, [rsp + 0x60]
0x000169b3      4889442438     mov qword [rsp + 0x38], rax
0x000169b8      eb44           jmp 0x169fe
0x000169ba      660f1f440000   nop word [rax + rax]
0x000169c0      83f803         cmp eax, 3
0x000169c3      0f84ed020000   je 0x16cb6
0x000169c9      83f806         cmp eax, 6
0x000169cc      0f8486010000   je 0x16b58
0x000169d2      83e2fd         and edx, 0xfffffffd                     ; 4294967293
0x000169d5      80fa05         cmp dl, 5
0x000169d8      0f84f6030000   je 0x16dd4
0x000169de      83f802         cmp eax, 2
0x000169e1      0f844d030000   je 0x16d34
0x000169e7      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000169ec      4883042401     add qword [rsp], 1
0x000169f1      488b0424       mov rax, qword [rsp]
0x000169f5      483b07         cmp rax, qword [rdi]
0x000169f8      0f8d9f030000   jge 0x16d9d
0x000169fe      488b442428     mov rax, qword [rsp + 0x28]
0x00016a03      488b3c24       mov rdi, qword [rsp]
0x00016a07      488b00         mov rax, qword [rax]
0x00016a0a      4c8b24f8       mov r12, qword [rax + rdi*8]
0x00016a0e      488b442408     mov rax, qword [rsp + 8]
0x00016a13      488b08         mov rcx, qword [rax]
0x00016a16      4c89e0         mov rax, r12
0x00016a19      48c1e004       shl rax, 4
0x00016a1d      4889442410     mov qword [rsp + 0x10], rax
0x00016a22      488d3401       lea rsi, [rcx + rax]
0x00016a26      0fb64608       movzx eax, byte [rsi + 8]
0x00016a2a      83f801         cmp eax, 1
0x00016a2d      89c2           mov edx, eax
0x00016a2f      758f           jne 0x169c0
0x00016a31      440fb62e       movzx r13d, byte [rsi]
0x00016a35      85db           test ebx, ebx
0x00016a37      42c6442d0001   mov byte [rbp + r13], 1
0x00016a3d      7411           je 0x16a50
0x00016a3f      e89cbffeff     call sym.imp.__ctype_tolower_loc
0x00016a44      488b00         mov rax, qword [rax]
0x00016a47      4a6304a8       movsxd rax, dword [rax + r13*4]
0x00016a4b      c644050001     mov byte [rbp + rax], 1
0x00016a50      488b442430     mov rax, qword [rsp + 0x30]
0x00016a55      f6401a40       test byte [rax + 0x1a], 0x40
0x00016a59      748c           je 0x169e7
0x00016a5b      488b742408     mov rsi, qword [rsp + 8]
0x00016a60      83beb4000000.  cmp dword [rsi + 0xb4], 1
0x00016a67      0f8e7affffff   jle 0x169e7
0x00016a6d      488b06         mov rax, qword [rsi]
0x00016a70      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00016a75      0fb61438       movzx edx, byte [rax + rdi]
0x00016a79      88542460       mov byte [rsp + 0x60], dl
0x00016a7d      498d542401     lea rdx, [r12 + 1]
0x00016a82      48395610       cmp qword [rsi + 0x10], rdx
0x00016a86      0f863a030000   jbe 0x16dc6
0x00016a8c      488d4c3810     lea rcx, [rax + rdi + 0x10]
0x00016a91      8b4108         mov eax, dword [rcx + 8]
0x00016a94      25ff002000     and eax, 0x2000ff
0x00016a99      3d01002000     cmp eax, 0x200001
0x00016a9e      0f8522030000   jne 0x16dc6
0x00016aa4      4883c720       add rdi, 0x20                           ; "@"
0x00016aa8      4989fd         mov r13, rdi
0x00016aab      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00016ab0      488d4701       lea rax, [rdi + 1]
0x00016ab4      eb25           jmp 0x16adb
0x00016ab6      662e0f1f8400.  nop word cs:[rax + rax]
0x00016ac0      488b0e         mov rcx, qword [rsi]
0x00016ac3      4c01e9         add rcx, r13
0x00016ac6      4983c510       add r13, 0x10
0x00016aca      8b5108         mov edx, dword [rcx + 8]
0x00016acd      81e2ff002000   and edx, 0x2000ff
0x00016ad3      81fa01002000   cmp edx, 0x200001
0x00016ad9      7519           jne 0x16af4
0x00016adb      0fb611         movzx edx, byte [rcx]
0x00016ade      4883c001       add rax, 1
0x00016ae2      8850ff         mov byte [rax - 1], dl
0x00016ae5      4889c2         mov rdx, rax
0x00016ae8      4829fa         sub rdx, rdi
0x00016aeb      4c01e2         add rdx, r12
0x00016aee      48395610       cmp qword [rsi + 0x10], rdx
0x00016af2      77cc           ja 0x16ac0
0x00016af4      488b742438     mov rsi, qword [rsp + 0x38]
0x00016af9      488b4c2440     mov rcx, qword [rsp + 0x40]
0x00016afe      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00016b03      4829f0         sub rax, rsi
0x00016b06      48c701000000.  mov qword [rcx], 0
0x00016b0d      4989c4         mov r12, rax
0x00016b10      4889c2         mov rdx, rax
0x00016b13      e8c896ffff     call sym.rpl_mbrtowc
0x00016b18      4939c4         cmp r12, rax
0x00016b1b      0f85c6feffff   jne 0x169e7
0x00016b21      8b7c2454       mov edi, dword [rsp + 0x54]
0x00016b25      e8b6bdfeff     call sym.imp.towlower
0x00016b2a      488b542440     mov rdx, qword [rsp + 0x40]
0x00016b2f      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00016b34      89c6           mov esi, eax
0x00016b36      e855bcfeff     call sym.imp.wcrtomb
0x00016b3b      4883f8ff       cmp rax, 0xffffffffffffffff
0x00016b3f      0f84a2feffff   je 0x169e7
0x00016b45      0fb6442460     movzx eax, byte [rsp + 0x60]
0x00016b4a      c644050001     mov byte [rbp + rax], 1
0x00016b4f      e993feffff     jmp 0x169e7
0x00016b54      0f1f4000       nop dword [rax]
0x00016b58      488b442408     mov rax, qword [rsp + 8]
0x00016b5d      4c8b26         mov r12, qword [rsi]
0x00016b60      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x00016b67      7e24           jle 0x16b8d
0x00016b69      49837c244800   cmp qword [r12 + 0x48], 0
0x00016b6f      0f85fa000000   jne 0x16c6f
0x00016b75      41f644242001   test byte [r12 + 0x20], 1
0x00016b7b      0f85ee000000   jne 0x16c6f
0x00016b81      49837c244000   cmp qword [r12 + 0x40], 0
0x00016b87      0f85e2000000   jne 0x16c6f
0x00016b8d      4531ed         xor r13d, r13d
0x00016b90      49837c242800   cmp qword [r12 + 0x28], 0
0x00016b96      0f8e4bfeffff   jle 0x169e7
0x00016b9c      4d89e7         mov r15, r12
0x00016b9f      4c8b742440     mov r14, qword [rsp + 0x40]
0x00016ba4      4989ec         mov r12, rbp
0x00016ba7      4c89ed         mov rbp, r13
0x00016baa      4189dd         mov r13d, ebx
0x00016bad      eb0e           jmp 0x16bbd
0x00016baf      4883c501       add rbp, 1
0x00016bb3      493b6f28       cmp rbp, qword [r15 + 0x28]
0x00016bb7      0f8da7000000   jge 0x16c64
0x00016bbd      49c706000000.  mov qword [r14], 0
0x00016bc4      498b07         mov rax, qword [r15]
0x00016bc7      4c89f2         mov rdx, r14
0x00016bca      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00016bcf      488d1cad0000.  lea rbx, [rbp*4]
0x00016bd7      8b34a8         mov esi, dword [rax + rbp*4]
0x00016bda      e8b1bbfeff     call sym.imp.wcrtomb
0x00016bdf      4883f8ff       cmp rax, 0xffffffffffffffff
0x00016be3      742a           je 0x16c0f
0x00016be5      0fb6542460     movzx edx, byte [rsp + 0x60]
0x00016bea      4585ed         test r13d, r13d
0x00016bed      41c6041401     mov byte [r12 + rdx], 1
0x00016bf2      4889542410     mov qword [rsp + 0x10], rdx
0x00016bf7      7416           je 0x16c0f
0x00016bf9      e8e2bdfeff     call sym.imp.__ctype_tolower_loc
0x00016bfe      488b542410     mov rdx, qword [rsp + 0x10]
0x00016c03      488b00         mov rax, qword [rax]
0x00016c06      48630490       movsxd rax, dword [rax + rdx*4]
0x00016c0a      41c6040401     mov byte [r12 + rax], 1
0x00016c0f      488b442430     mov rax, qword [rsp + 0x30]
0x00016c14      f6401a40       test byte [rax + 0x1a], 0x40
0x00016c18      7495           je 0x16baf
0x00016c1a      488b442408     mov rax, qword [rsp + 8]
0x00016c1f      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x00016c26      7e87           jle 0x16baf
0x00016c28      498b07         mov rax, qword [r15]
0x00016c2b      8b3c18         mov edi, dword [rax + rbx]
0x00016c2e      e8adbcfeff     call sym.imp.towlower
0x00016c33      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00016c38      4c89f2         mov rdx, r14
0x00016c3b      89c6           mov esi, eax
0x00016c3d      e84ebbfeff     call sym.imp.wcrtomb
0x00016c42      4883f8ff       cmp rax, 0xffffffffffffffff
0x00016c46      0f8463ffffff   je 0x16baf
0x00016c4c      0fb6442460     movzx eax, byte [rsp + 0x60]
0x00016c51      4883c501       add rbp, 1
0x00016c55      41c6040401     mov byte [r12 + rax], 1
0x00016c5a      493b6f28       cmp rbp, qword [r15 + 0x28]
0x00016c5e      0f8c59ffffff   jl 0x16bbd
0x00016c64      4489eb         mov ebx, r13d
0x00016c67      4c89e5         mov rbp, r12
0x00016c6a      e978fdffff     jmp 0x169e7
0x00016c6f      4c8b642440     mov r12, qword [rsp + 0x40]
0x00016c74      4c8b6c2448     mov r13, qword [rsp + 0x48]
0x00016c79      c644245400     mov byte [rsp + 0x54], 0
0x00016c7e      6690           nop
0x00016c80      31ff           xor edi, edi
0x00016c82      49c704240000.  mov qword [r12], 0
0x00016c8a      4c89e1         mov rcx, r12
0x00016c8d      ba01000000     mov edx, 1
0x00016c92      4c89ee         mov rsi, r13
0x00016c95      e84695ffff     call sym.rpl_mbrtowc
0x00016c9a      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00016c9e      750a           jne 0x16caa
0x00016ca0      0fb6442454     movzx eax, byte [rsp + 0x54]
0x00016ca5      c644050001     mov byte [rbp + rax], 1
0x00016caa      8044245401     add byte [rsp + 0x54], 1
0x00016caf      75cf           jne 0x16c80
0x00016cb1      e931fdffff     jmp 0x169e7
0x00016cb6      4989ed         mov r13, rbp
0x00016cb9      4531e4         xor r12d, r12d
0x00016cbc      48c744241800.  mov qword [rsp + 0x18], 0
0x00016cc5      488b442410     mov rax, qword [rsp + 0x10]
0x00016cca      488b742418     mov rsi, qword [rsp + 0x18]
0x00016ccf      4531f6         xor r14d, r14d
0x00016cd2      488b0401       mov rax, qword [rcx + rax]
0x00016cd6      4c8b3c30       mov r15, qword [rax + rsi]
0x00016cda      660f1f440000   nop word [rax + rax]
0x00016ce0      4d0fa3f7       bt r15, r14
0x00016ce4      731f           jae 0x16d05
0x00016ce6      85db           test ebx, ebx
0x00016ce8      43c644350001   mov byte [r13 + r14], 1
0x00016cee      7415           je 0x16d05
0x00016cf0      e8ebbcfeff     call sym.imp.__ctype_tolower_loc
0x00016cf5      488b00         mov rax, qword [rax]
0x00016cf8      4b8d1434       lea rdx, [r12 + r14]
0x00016cfc      48630490       movsxd rax, dword [rax + rdx*4]
0x00016d00      c644050001     mov byte [rbp + rax], 1
0x00016d05      4983c601       add r14, 1
0x00016d09      4983fe40       cmp r14, 0x40                           ; segment.PHDR
0x00016d0d      75d1           jne 0x16ce0
0x00016d0f      4983c440       add r12, 0x40                           ; segment.PHDR
0x00016d13      488344241808   add qword [rsp + 0x18], 8
0x00016d19      4983c540       add r13, 0x40                           ; segment.PHDR
0x00016d1d      4981fc000100.  cmp r12, 0x100
0x00016d24      0f84bdfcffff   je 0x169e7
0x00016d2a      488b442408     mov rax, qword [rsp + 8]
0x00016d2f      488b08         mov rcx, qword [rax]
0x00016d32      eb91           jmp 0x16cc5
0x00016d34      660f6f05c4c2.  movdqa xmm0, xmmword [0x00023000]
0x00016d3c      0f114500       movups xmmword [rbp], xmm0
0x00016d40      0f114510       movups xmmword [rbp + 0x10], xmm0
0x00016d44      0f114520       movups xmmword [rbp + 0x20], xmm0
0x00016d48      0f114530       movups xmmword [rbp + 0x30], xmm0
0x00016d4c      0f114540       movups xmmword [rbp + 0x40], xmm0
0x00016d50      0f114550       movups xmmword [rbp + 0x50], xmm0
0x00016d54      0f114560       movups xmmword [rbp + 0x60], xmm0
0x00016d58      0f114570       movups xmmword [rbp + 0x70], xmm0
0x00016d5c      0f1185800000.  movups xmmword [rbp + 0x80], xmm0
0x00016d63      0f1185900000.  movups xmmword [rbp + 0x90], xmm0
0x00016d6a      0f1185a00000.  movups xmmword [rbp + 0xa0], xmm0
0x00016d71      0f1185b00000.  movups xmmword [rbp + 0xb0], xmm0
0x00016d78      0f1185c00000.  movups xmmword [rbp + 0xc0], xmm0
0x00016d7f      0f1185d00000.  movups xmmword [rbp + 0xd0], xmm0
0x00016d86      0f1185e00000.  movups xmmword [rbp + 0xe0], xmm0
0x00016d8d      0f1185f00000.  movups xmmword [rbp + 0xf0], xmm0
0x00016d94      488b442430     mov rax, qword [rsp + 0x30]
0x00016d99      80483801       or byte [rax + 0x38], 1
0x00016d9d      488b84246801.  mov rax, qword [rsp + 0x168]
0x00016da5      644833042528.  xor rax, qword fs:[0x28]
0x00016dae      0f858e000000   jne 0x16e42
0x00016db4      4881c4780100.  add rsp, 0x178
0x00016dbb      5b             pop rbx
0x00016dbc      5d             pop rbp
0x00016dbd      415c           pop r12
0x00016dbf      415d           pop r13
0x00016dc1      415e           pop r14
0x00016dc3      415f           pop r15
0x00016dc5      c3             ret
0x00016dc6      488b442438     mov rax, qword [rsp + 0x38]
0x00016dcb      4883c001       add rax, 1
0x00016dcf      e920fdffff     jmp 0x16af4
0x00016dd4      660f6f0524c2.  movdqa xmm0, xmmword [0x00023000]
0x00016ddc      83f802         cmp eax, 2
0x00016ddf      0f114500       movups xmmword [rbp], xmm0
0x00016de3      0f114510       movups xmmword [rbp + 0x10], xmm0
0x00016de7      0f114520       movups xmmword [rbp + 0x20], xmm0
0x00016deb      0f114530       movups xmmword [rbp + 0x30], xmm0
0x00016def      0f114540       movups xmmword [rbp + 0x40], xmm0
0x00016df3      0f114550       movups xmmword [rbp + 0x50], xmm0
0x00016df7      0f114560       movups xmmword [rbp + 0x60], xmm0
0x00016dfb      0f114570       movups xmmword [rbp + 0x70], xmm0
0x00016dff      0f1185800000.  movups xmmword [rbp + 0x80], xmm0
0x00016e06      0f1185900000.  movups xmmword [rbp + 0x90], xmm0
0x00016e0d      0f1185a00000.  movups xmmword [rbp + 0xa0], xmm0
0x00016e14      0f1185b00000.  movups xmmword [rbp + 0xb0], xmm0
0x00016e1b      0f1185c00000.  movups xmmword [rbp + 0xc0], xmm0
0x00016e22      0f1185d00000.  movups xmmword [rbp + 0xd0], xmm0
0x00016e29      0f1185e00000.  movups xmmword [rbp + 0xe0], xmm0
0x00016e30      0f1185f00000.  movups xmmword [rbp + 0xf0], xmm0
0x00016e37      0f8560ffffff   jne 0x16d9d
0x00016e3d      e952ffffff     jmp 0x16d94
0x00016e42      e819b7feff     call sym.imp.__stack_chk_fail
0x00016e47      660f1f840000.  nop word [rax + rax]
;-- check_node_accept_bytes.isra.31:
0x00016e50      48c1e204       shl rdx, 4
0x00016e54      4155           push r13
0x00016e56      4154           push r12
0x00016e58      4c8d0c17       lea r9, [rdi + rdx]
0x00016e5c      55             push rbp
0x00016e5d      53             push rbx
0x00016e5e      4883ec08       sub rsp, 8
0x00016e62      450fb65908     movzx r11d, byte [r9 + 8]
0x00016e67      4180fb07       cmp r11b, 7
0x00016e6b      0f840f010000   je 0x16f80
0x00016e71      83b990000000.  cmp dword [rcx + 0x90], 1
0x00016e78      0f84c2000000   je 0x16f40
0x00016e7e      4889f3         mov rbx, rsi
0x00016e81      4889cf         mov rdi, rcx
0x00016e84      4c89c6         mov rsi, r8
0x00016e87      4989ca         mov r10, rcx
0x00016e8a      e861b7ffff     call sym.re_string_char_size_at.part.0
0x00016e8f      4180fb05       cmp r11b, 5
0x00016e93      89c5           mov ebp, eax
0x00016e95      0f84b5000000   je 0x16f50
0x00016e9b      4180fb06       cmp r11b, 6
0x00016e9f      0f859b000000   jne 0x16f40
0x00016ea5      83f801         cmp eax, 1
0x00016ea8      0f8e92000000   jle 0x16f40
0x00016eae      4d8b29         mov r13, qword [r9]
0x00016eb1      498b7540       mov rsi, qword [r13 + 0x40]
0x00016eb5      498b5528       mov rdx, qword [r13 + 0x28]
0x00016eb9      4885f6         test rsi, rsi
0x00016ebc      750b           jne 0x16ec9
0x00016ebe      49837d4800     cmp qword [r13 + 0x48], 0
0x00016ec3      0f84ef000000   je 0x16fb8
0x00016ec9      498b4210       mov rax, qword [r10 + 0x10]
0x00016ecd      4885d2         test rdx, rdx
0x00016ed0      468b2480       mov r12d, dword [rax + r8*4]
0x00016ed4      7e21           jle 0x16ef7
0x00016ed6      498b4d00       mov rcx, qword [r13]
0x00016eda      443b21         cmp r12d, dword [rcx]
0x00016edd      7453           je 0x16f32
0x00016edf      31c0           xor eax, eax
0x00016ee1      eb0b           jmp 0x16eee
0x00016ee3      0f1f440000     nop dword [rax + rax]
0x00016ee8      443b2481       cmp r12d, dword [rcx + rax*4]
0x00016eec      7444           je 0x16f32
0x00016eee      4883c001       add rax, 1
0x00016ef2      4839d0         cmp rax, rdx
0x00016ef5      75f1           jne 0x16ee8
0x00016ef7      498b4548       mov rax, qword [r13 + 0x48]
0x00016efb      4885c0         test rax, rax
0x00016efe      0f8ed8000000   jle 0x16fdc
0x00016f04      31db           xor ebx, ebx
0x00016f06      eb16           jmp 0x16f1e
0x00016f08      0f1f84000000.  nop dword [rax + rax]
0x00016f10      4883c301       add rbx, 1
0x00016f14      493b5d48       cmp rbx, qword [r13 + 0x48]
0x00016f18      0f8dba000000   jge 0x16fd8
0x00016f1e      498b4518       mov rax, qword [r13 + 0x18]
0x00016f22      4489e7         mov edi, r12d
0x00016f25      488b34d8       mov rsi, qword [rax + rbx*8]
0x00016f29      e8b2b5feff     call sym.imp.iswctype
0x00016f2e      85c0           test eax, eax
0x00016f30      74de           je 0x16f10
0x00016f32      41f6452001     test byte [r13 + 0x20], 1
0x00016f37      7409           je 0x16f42
0x00016f39      0f1f80000000.  nop dword [rax]
0x00016f40      31ed           xor ebp, ebp
0x00016f42      4883c408       add rsp, 8
0x00016f46      89e8           mov eax, ebp
0x00016f48      5b             pop rbx
0x00016f49      5d             pop rbp
0x00016f4a      415c           pop r12
0x00016f4c      415d           pop r13
0x00016f4e      c3             ret
0x00016f4f      90             nop
0x00016f50      83f801         cmp eax, 1
0x00016f53      7eeb           jle 0x16f40
0x00016f55      488b03         mov rax, qword [rbx]
0x00016f58      a840           test al, 0x40                           ; segment.PHDR
0x00016f5a      7414           je 0x16f70
0x00016f5c      a880           test al, 0x80
0x00016f5e      74e2           je 0x16f42
0x00016f60      498b4208       mov rax, qword [r10 + 8]
0x00016f64      42803c0000     cmp byte [rax + r8], 0
0x00016f69      74d5           je 0x16f40
0x00016f6b      ebd5           jmp 0x16f42
0x00016f6d      0f1f00         nop dword [rax]
0x00016f70      498b5208       mov rdx, qword [r10 + 8]
0x00016f74      42803c020a     cmp byte [rdx + r8], 0xa
0x00016f79      75e1           jne 0x16f5c
0x00016f7b      ebc3           jmp 0x16f40
0x00016f7d      0f1f00         nop dword [rax]
0x00016f80      488b5108       mov rdx, qword [rcx + 8]
0x00016f84      4a8d3402       lea rsi, [rdx + r8]
0x00016f88      0fb606         movzx eax, byte [rsi]
0x00016f8b      3cc1           cmp al, 0xc1
0x00016f8d      76b1           jbe 0x16f40
0x00016f8f      488b4958       mov rcx, qword [rcx + 0x58]
0x00016f93      498d7801       lea rdi, [r8 + 1]
0x00016f97      4839cf         cmp rdi, rcx
0x00016f9a      7da4           jge 0x16f40
0x00016f9c      3cdf           cmp al, 0xdf
0x00016f9e      420fb6540201   movzx edx, byte [rdx + r8 + 1]
0x00016fa4      7768           ja 0x1700e
0x00016fa6      83c280         add edx, 0xffffff80
0x00016fa9      bd02000000     mov ebp, 2
0x00016fae      80fa3f         cmp dl, 0x3f
0x00016fb1      778d           ja 0x16f40
0x00016fb3      eb8d           jmp 0x16f42
0x00016fb5      0f1f00         nop dword [rax]
0x00016fb8      4885d2         test rdx, rdx
0x00016fbb      0f8508ffffff   jne 0x16ec9
0x00016fc1      41f6452001     test byte [r13 + 0x20], 1
0x00016fc6      0f8576ffffff   jne 0x16f42
0x00016fcc      e96fffffff     jmp 0x16f40
0x00016fd1      0f1f80000000.  nop dword [rax]
0x00016fd8      498b7540       mov rsi, qword [r13 + 0x40]
0x00016fdc      4885f6         test rsi, rsi
0x00016fdf      7ee0           jle 0x16fc1
0x00016fe1      498b5508       mov rdx, qword [r13 + 8]
0x00016fe5      31c0           xor eax, eax
0x00016fe7      eb10           jmp 0x16ff9
0x00016fe9      0f1f80000000.  nop dword [rax]
0x00016ff0      4883c001       add rax, 1
0x00016ff4      4839f0         cmp rax, rsi
0x00016ff7      74c8           je 0x16fc1
0x00016ff9      443b2482       cmp r12d, dword [rdx + rax*4]
0x00016ffd      7cf1           jl 0x16ff0
0x00016fff      498b4d10       mov rcx, qword [r13 + 0x10]
0x00017003      443b2481       cmp r12d, dword [rcx + rax*4]
0x00017007      7fe7           jg 0x16ff0
0x00017009      e924ffffff     jmp 0x16f32
0x0001700e      3cef           cmp al, 0xef
0x00017010      7746           ja 0x17058
0x00017012      3ce0           cmp al, 0xe0
0x00017014      7509           jne 0x1701f
0x00017016      80fa9f         cmp dl, 0x9f
0x00017019      0f8621ffffff   jbe 0x16f40
0x0001701f      bd03000000     mov ebp, 3
0x00017024      4863fd         movsxd rdi, ebp
0x00017027      4901f8         add r8, rdi
0x0001702a      4c39c1         cmp rcx, r8
0x0001702d      0f8c0dffffff   jl 0x16f40
0x00017033      b801000000     mov eax, 1
0x00017038      eb0d           jmp 0x17047
0x0001703a      4883c001       add rax, 1
0x0001703e      4839c7         cmp rdi, rax
0x00017041      0f8efbfeffff   jle 0x16f42
0x00017047      0fb61c06       movzx ebx, byte [rsi + rax]
0x0001704b      8d5380         lea edx, [rbx - 0x80]
0x0001704e      80fa3f         cmp dl, 0x3f
0x00017051      76e7           jbe 0x1703a
0x00017053      e9e8feffff     jmp 0x16f40
0x00017058      3cf7           cmp al, 0xf7
0x0001705a      7714           ja 0x17070
0x0001705c      3cf0           cmp al, 0xf0
0x0001705e      7509           jne 0x17069
0x00017060      80fa8f         cmp dl, 0x8f
0x00017063      0f86d7feffff   jbe 0x16f40
0x00017069      bd04000000     mov ebp, 4
0x0001706e      ebb4           jmp 0x17024
0x00017070      3cfb           cmp al, 0xfb
0x00017072      7714           ja 0x17088
0x00017074      3cf8           cmp al, 0xf8
0x00017076      7509           jne 0x17081
0x00017078      80fa87         cmp dl, 0x87
0x0001707b      0f86bffeffff   jbe 0x16f40
0x00017081      bd05000000     mov ebp, 5
0x00017086      eb9c           jmp 0x17024
0x00017088      3cfd           cmp al, 0xfd
0x0001708a      0f87b0feffff   ja 0x16f40
0x00017090      3cfc           cmp al, 0xfc
0x00017092      7509           jne 0x1709d
0x00017094      80fa83         cmp dl, 0x83
0x00017097      0f86a3feffff   jbe 0x16f40
0x0001709d      bd06000000     mov ebp, 6
0x000170a2      eb80           jmp 0x17024
0x000170a4      6690           nop
0x000170a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- check_arrival:
0x000170b0      4157           push r15
0x000170b2      4156           push r14
0x000170b4      4989ff         mov r15, rdi
0x000170b7      4155           push r13
0x000170b9      4154           push r12
0x000170bb      55             push rbp
0x000170bc      53             push rbx
0x000170bd      4889cd         mov rbp, rcx
0x000170c0      4889d3         mov rbx, rdx
0x000170c3      4881ecd80000.  sub rsp, 0xd8
0x000170ca      488b8f980000.  mov rcx, qword [rdi + 0x98]
0x000170d1      4c8b6e08       mov r13, qword [rsi + 8]
0x000170d5      64488b042528.  mov rax, qword fs:[0x28]
0x000170de      48898424c800.  mov qword [rsp + 0xc8], rax
0x000170e6      31c0           xor eax, eax
0x000170e8      4889d0         mov rax, rdx
0x000170eb      4889742460     mov qword [rsp + 0x60], rsi
0x000170f0      4c89442478     mov qword [rsp + 0x78], r8
0x000170f5      48c1e004       shl rax, 4
0x000170f9      480301         add rax, qword [rcx]
0x000170fc      4c894c2440     mov qword [rsp + 0x40], r9
0x00017101      48894c2430     mov qword [rsp + 0x30], rcx
0x00017106      c78424880000.  mov dword [rsp + 0x88], 0
0x00017111      488b00         mov rax, qword [rax]
0x00017114      4889442448     mov qword [rsp + 0x48], rax
0x00017119      486387e00000.  movsxd rax, dword [rdi + 0xe0]
0x00017120      4c01c8         add rax, r9
0x00017123      4c39e8         cmp rax, r13
0x00017126      0f8d1a060000   jge 0x17746
0x0001712c      488b442460     mov rax, qword [rsp + 0x60]
0x00017131      498b97b80000.  mov rdx, qword [r15 + 0xb8]
0x00017138      498b4f48       mov rcx, qword [r15 + 0x48]
0x0001713c      4c8b20         mov r12, qword [rax]
0x0001713f      4c8b7010       mov r14, qword [rax + 0x10]
0x00017143      4889542468     mov qword [rsp + 0x68], rdx
0x00017148      48894c2470     mov qword [rsp + 0x70], rcx
0x0001714d      418b97a00000.  mov edx, dword [r15 + 0xa0]
0x00017154      4d85e4         test r12, r12
0x00017157      4d89b7b80000.  mov qword [r15 + 0xb8], r14
0x0001715e      0f84dc030000   je 0x17540
0x00017164      498d7424ff     lea rsi, [r12 - 1]
0x00017169      4d896748       mov qword [r15 + 0x48], r12
0x0001716d      4c89ff         mov rdi, r15
0x00017170      e80bd3ffff     call sym.re_string_context_at
0x00017175      4939ec         cmp r12, rbp
0x00017178      4189c5         mov r13d, eax
0x0001717b      0f84d2030000   je 0x17553
0x00017181      4b8b2ce6       mov rbp, qword [r14 + r12*8]
0x00017185      4885ed         test rbp, rbp
0x00017188      740a           je 0x17194
0x0001718a      f6456840       test byte [rbp + 0x68], 0x40
0x0001718e      0f851c050000   jne 0x176b0
0x00017194      660fefc0       pxor xmm0, xmm0
0x00017198      48c78424a000.  mov qword [rsp + 0xa0], 0
0x000171a4      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x000171ac      4c3b642440     cmp r12, qword [rsp + 0x40]
0x000171b1      0f8d21030000   jge 0x174d8
0x000171b7      418b8fe00000.  mov ecx, dword [r15 + 0xe0]
0x000171be      85c9           test ecx, ecx
0x000171c0      0f8812030000   js 0x174d8
0x000171c6      488d9c249000.  lea rbx, [rsp + 0x90]
0x000171ce      4a8d04e50800.  lea rax, [r12*8 + 8]
0x000171d6      4c892424       mov qword [rsp], r12
0x000171da      48c744242000.  mov qword [rsp + 0x20], 0
0x000171e3      48895c2408     mov qword [rsp + 8], rbx
0x000171e8      488d9c24b000.  lea rbx, [rsp + 0xb0]
0x000171f0      4889442410     mov qword [rsp + 0x10], rax
0x000171f5      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x000171fc      48895c2418     mov qword [rsp + 0x18], rbx
0x00017201      488d9c248c00.  lea rbx, [rsp + 0x8c]
0x00017209      48895c2458     mov qword [rsp + 0x58], rbx
0x0001720e      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00017213      48c784249800.  mov qword [rsp + 0x98], 0
0x0001721f      488b3408       mov rsi, qword [rax + rcx]
0x00017223      4885f6         test rsi, rsi
0x00017226      0f84bc030000   je 0x175e8
0x0001722c      488b7c2408     mov rdi, qword [rsp + 8]
0x00017231      4883c608       add rsi, 8
0x00017235      e886b9ffff     call sym.re_node_set_merge
0x0001723a      85c0           test eax, eax
0x0001723c      898424880000.  mov dword [rsp + 0x88], eax
0x00017243      0f85d7030000   jne 0x17620
0x00017249      4885ed         test rbp, rbp
0x0001724c      0f84a6010000   je 0x173f8
0x00017252      48837d2800     cmp qword [rbp + 0x28], 0
0x00017257      488b442418     mov rax, qword [rsp + 0x18]
0x0001725c      660fefc0       pxor xmm0, xmm0
0x00017260      4d8ba7980000.  mov r12, qword [r15 + 0x98]
0x00017267      c784248c0000.  mov dword [rsp + 0x8c], 0
0x00017272      48c740100000.  mov qword [rax + 0x10], 0
0x0001727a      0f2900         movaps xmmword [rax], xmm0
0x0001727d      0f8e2d050000   jle 0x177b0
0x00017283      498d8424d800.  lea rax, [r12 + 0xd8]
0x0001728b      31db           xor ebx, ebx
0x0001728d      4889442428     mov qword [rsp + 0x28], rax
0x00017292      eb45           jmp 0x172d9
0x00017294      0f1f4000       nop dword [rax]
0x00017298      488b1424       mov rdx, qword [rsp]
0x0001729c      4c89ff         mov rdi, r15
0x0001729f      e8ccd2ffff     call sym.check_node_accept
0x000172a4      84c0           test al, al
0x000172a6      7423           je 0x172cb
0x000172a8      4e8d2cf50000.  lea r13, [r14*8]
0x000172b0      498b442418     mov rax, qword [r12 + 0x18]
0x000172b5      488b7c2408     mov rdi, qword [rsp + 8]
0x000172ba      4a8b3428       mov rsi, qword [rax + r13]
0x000172be      e89d9effff     call sym.re_node_set_insert
0x000172c3      84c0           test al, al
0x000172c5      0f843d030000   je 0x17608
0x000172cb      4883c301       add rbx, 1
0x000172cf      483b5d28       cmp rbx, qword [rbp + 0x28]
0x000172d3      0f8d87030000   jge 0x17660
0x000172d9      488b4530       mov rax, qword [rbp + 0x30]
0x000172dd      498b3c24       mov rdi, qword [r12]
0x000172e1      4c8b34d8       mov r14, qword [rax + rbx*8]
0x000172e5      4d89f5         mov r13, r14
0x000172e8      49c1e504       shl r13, 4
0x000172ec      4a8d342f       lea rsi, [rdi + r13]
0x000172f0      f6460a10       test byte [rsi + 0xa], 0x10
0x000172f4      74a2           je 0x17298
0x000172f6      4c8b0424       mov r8, qword [rsp]
0x000172fa      488b742428     mov rsi, qword [rsp + 0x28]
0x000172ff      4c89f9         mov rcx, r15
0x00017302      4c89f2         mov rdx, r14
0x00017305      e846fbffff     call sym.check_node_accept_bytes.isra.31
0x0001730a      83f801         cmp eax, 1
0x0001730d      0f8ebd020000   jle 0x175d0
0x00017313      4898           cdqe
0x00017315      48030424       add rax, qword [rsp]
0x00017319      498b542418     mov rdx, qword [r12 + 0x18]
0x0001731e      4e8d2cf50000.  lea r13, [r14*8]
0x00017326      4a8b14f2       mov rdx, qword [rdx + r14*8]
0x0001732a      4889c1         mov rcx, rax
0x0001732d      4889442438     mov qword [rsp + 0x38], rax
0x00017332      4c8d34c50000.  lea r14, [rax*8]
0x0001733a      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x00017341      488b34c8       mov rsi, qword [rax + rcx*8]
0x00017345      48c78424b800.  mov qword [rsp + 0xb8], 0
0x00017351      4885f6         test rsi, rsi
0x00017354      7423           je 0x17379
0x00017356      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0001735b      4883c608       add rsi, 8
0x0001735f      4889542450     mov qword [rsp + 0x50], rdx
0x00017364      e857b8ffff     call sym.re_node_set_merge
0x00017369      85c0           test eax, eax
0x0001736b      8984248c0000.  mov dword [rsp + 0x8c], eax
0x00017372      488b542450     mov rdx, qword [rsp + 0x50]
0x00017377      7557           jne 0x173d0
0x00017379      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0001737e      4889d6         mov rsi, rdx
0x00017381      e8da9dffff     call sym.re_node_set_insert
0x00017386      84c0           test al, al
0x00017388      0f847a020000   je 0x17608
0x0001738e      4d03b7b80000.  add r14, qword [r15 + 0xb8]
0x00017395      488b542418     mov rdx, qword [rsp + 0x18]
0x0001739a      4c89e6         mov rsi, r12
0x0001739d      488b7c2458     mov rdi, qword [rsp + 0x58]
0x000173a2      e809c9ffff     call sym.re_acquire_state
0x000173a7      488b542438     mov rdx, qword [rsp + 0x38]
0x000173ac      498906         mov qword [r14], rax
0x000173af      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x000173b6      48833cd000     cmp qword [rax + rdx*8], 0
0x000173bb      0f85effeffff   jne 0x172b0
0x000173c1      8b94248c0000.  mov edx, dword [rsp + 0x8c]
0x000173c8      85d2           test edx, edx
0x000173ca      0f84e0feffff   je 0x172b0
0x000173d0      488bbc24c000.  mov rdi, qword [rsp + 0xc0]
0x000173d8      e833b6feff     call sym..plt.got
0x000173dd      8b84248c0000.  mov eax, dword [rsp + 0x8c]
0x000173e4      85c0           test eax, eax
0x000173e6      898424880000.  mov dword [rsp + 0x88], eax
0x000173ed      0f852d020000   jne 0x17620
0x000173f3      0f1f440000     nop dword [rax + rax]
0x000173f8      488b0424       mov rax, qword [rsp]
0x000173fc      4883bc249800.  cmp qword [rsp + 0x98], 0
0x00017405      488d5801       lea rbx, [rax + 1]
0x00017409      4989dc         mov r12, rbx
0x0001740c      7456           je 0x17464
0x0001740e      8b8c24100100.  mov ecx, dword [rsp + 0x110]
0x00017415      488b542448     mov rdx, qword [rsp + 0x48]
0x0001741a      488b742408     mov rsi, qword [rsp + 8]
0x0001741f      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00017424      e827bcffff     call sym.check_arrival_expand_ecl
0x00017429      85c0           test eax, eax
0x0001742b      898424880000.  mov dword [rsp + 0x88], eax
0x00017432      0f85e8010000   jne 0x17620
0x00017438      448b84241001.  mov r8d, dword [rsp + 0x110]
0x00017440      488b4c2448     mov rcx, qword [rsp + 0x48]
0x00017445      4889da         mov rdx, rbx
0x00017448      488b742408     mov rsi, qword [rsp + 8]
0x0001744d      4c89ff         mov rdi, r15
0x00017450      e83bcbffff     call sym.expand_bkref_cache
0x00017455      85c0           test eax, eax
0x00017457      898424880000.  mov dword [rsp + 0x88], eax
0x0001745e      0f85bc010000   jne 0x17620
0x00017464      418b97a00000.  mov edx, dword [r15 + 0xa0]
0x0001746b      488b3424       mov rsi, qword [rsp]
0x0001746f      4c89ff         mov rdi, r15
0x00017472      e809d0ffff     call sym.re_string_context_at
0x00017477      488b542408     mov rdx, qword [rsp + 8]
0x0001747c      488b742430     mov rsi, qword [rsp + 0x30]
0x00017481      488dbc248800.  lea rdi, [rsp + 0x88]
0x00017489      89c1           mov ecx, eax
0x0001748b      e860c5ffff     call sym.re_acquire_state_context
0x00017490      4885c0         test rax, rax
0x00017493      4889c5         mov rbp, rax
0x00017496      0f84e4010000   je 0x17680
0x0001749c      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x000174a3      488b542410     mov rdx, qword [rsp + 0x10]
0x000174a8      48c744242000.  mov qword [rsp + 0x20], 0
0x000174b1      48892c10       mov qword [rax + rdx], rbp
0x000174b5      48395c2440     cmp qword [rsp + 0x40], rbx
0x000174ba      7e1c           jle 0x174d8
0x000174bc      496397e00000.  movsxd rdx, dword [r15 + 0xe0]
0x000174c3      488344241008   add qword [rsp + 0x10], 8
0x000174c9      483b542420     cmp rdx, qword [rsp + 0x20]
0x000174ce      48891c24       mov qword [rsp], rbx
0x000174d2      0f8d36fdffff   jge 0x1720e
0x000174d8      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x000174e0      e82bb5feff     call sym..plt.got
0x000174e5      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x000174ec      488b5c2440     mov rbx, qword [rsp + 0x40]
0x000174f1      488b04d8       mov rax, qword [rax + rbx*8]
0x000174f5      4885c0         test rax, rax
0x000174f8      0f84d7020000   je 0x177d5
0x000174fe      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00017503      488b542478     mov rdx, qword [rsp + 0x78]
0x00017508      488d7018       lea rsi, [rax + 0x18]
0x0001750c      4c8923         mov qword [rbx], r12
0x0001750f      488b5c2468     mov rbx, qword [rsp + 0x68]
0x00017514      49899fb80000.  mov qword [r15 + 0xb8], rbx
0x0001751b      488b5c2470     mov rbx, qword [rsp + 0x70]
0x00017520      49895f48       mov qword [r15 + 0x48], rbx
0x00017524      488b7810       mov rdi, qword [rax + 0x10]
0x00017528      e873b1ffff     call sym.re_node_set_contains.isra.3
0x0001752d      4885c0         test rax, rax
0x00017530      0f94c0         sete al
0x00017533      0fb6c0         movzx eax, al
0x00017536      e9f9000000     jmp 0x17634
0x0001753b      0f1f440000     nop dword [rax + rax]
0x00017540      488d75ff       lea rsi, [rbp - 1]
0x00017544      49896f48       mov qword [r15 + 0x48], rbp
0x00017548      4c89ff         mov rdi, r15
0x0001754b      e830cfffff     call sym.re_string_context_at
0x00017550      4189c5         mov r13d, eax
0x00017553      bf08000000     mov edi, 8
0x00017558      48c784249000.  mov qword [rsp + 0x90], 1
0x00017564      48c784249800.  mov qword [rsp + 0x98], 1
0x00017570      e80bb2feff     call sym.imp.malloc
0x00017575      4885c0         test rax, rax
0x00017578      48898424a000.  mov qword [rsp + 0xa0], rax
0x00017580      0f8445020000   je 0x177cb
0x00017586      488918         mov qword [rax], rbx
0x00017589      8b8c24100100.  mov ecx, dword [rsp + 0x110]
0x00017590      488d9c249000.  lea rbx, [rsp + 0x90]
0x00017598      488b542448     mov rdx, qword [rsp + 0x48]
0x0001759d      488b7c2430     mov rdi, qword [rsp + 0x30]
0x000175a2      4989ec         mov r12, rbp
0x000175a5      4889de         mov rsi, rbx
0x000175a8      c78424880000.  mov dword [rsp + 0x88], 0
0x000175b3      e898baffff     call sym.check_arrival_expand_ecl
0x000175b8      85c0           test eax, eax
0x000175ba      898424880000.  mov dword [rsp + 0x88], eax
0x000175c1      0f8416010000   je 0x176dd
0x000175c7      eb57           jmp 0x17620
0x000175c9      0f1f80000000.  nop dword [rax]
0x000175d0      85c0           test eax, eax
0x000175d2      0f85d0fcffff   jne 0x172a8
0x000175d8      498b3424       mov rsi, qword [r12]
0x000175dc      4c01ee         add rsi, r13
0x000175df      e9b4fcffff     jmp 0x17298
0x000175e4      0f1f4000       nop dword [rax]
0x000175e8      4885ed         test rbp, rbp
0x000175eb      0f8561fcffff   jne 0x17252
0x000175f1      488b0424       mov rax, qword [rsp]
0x000175f5      488d5801       lea rbx, [rax + 1]
0x000175f9      4989dc         mov r12, rbx
0x000175fc      e963feffff     jmp 0x17464
0x00017601      0f1f80000000.  nop dword [rax]
0x00017608      488bbc24c000.  mov rdi, qword [rsp + 0xc0]
0x00017610      e8fbb3feff     call sym..plt.got
0x00017615      c78424880000.  mov dword [rsp + 0x88], 0xc             ; [0xc:4]=0
0x00017620      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x00017628      e8e3b3feff     call sym..plt.got
0x0001762d      8b8424880000.  mov eax, dword [rsp + 0x88]
0x00017634      488b9c24c800.  mov rbx, qword [rsp + 0xc8]
0x0001763c      6448331c2528.  xor rbx, qword fs:[0x28]
0x00017645      0f85b1010000   jne 0x177fc
0x0001764b      4881c4d80000.  add rsp, 0xd8
0x00017652      5b             pop rbx
0x00017653      5d             pop rbp
0x00017654      415c           pop r12
0x00017656      415d           pop r13
0x00017658      415e           pop r14
0x0001765a      415f           pop r15
0x0001765c      c3             ret
0x0001765d      0f1f00         nop dword [rax]
0x00017660      488bbc24c000.  mov rdi, qword [rsp + 0xc0]
0x00017668      e8a3b3feff     call sym..plt.got
0x0001766d      c78424880000.  mov dword [rsp + 0x88], 0
0x00017678      e97bfdffff     jmp 0x173f8
0x0001767d      0f1f00         nop dword [rax]
0x00017680      8b8424880000.  mov eax, dword [rsp + 0x88]
0x00017687      85c0           test eax, eax
0x00017689      7595           jne 0x17620
0x0001768b      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x00017692      488b542410     mov rdx, qword [rsp + 0x10]
0x00017697      488344242001   add qword [rsp + 0x20], 1
0x0001769d      48c704100000.  mov qword [rax + rdx], 0
0x000176a5      e90bfeffff     jmp 0x174b5
0x000176aa      660f1f440000   nop word [rax + rax]
0x000176b0      488d9c249000.  lea rbx, [rsp + 0x90]
0x000176b8      488d7508       lea rsi, [rbp + 8]
0x000176bc      4889df         mov rdi, rbx
0x000176bf      e83cc1ffff     call sym.re_node_set_init_copy
0x000176c4      85c0           test eax, eax
0x000176c6      898424880000.  mov dword [rsp + 0x88], eax
0x000176cd      0f8561ffffff   jne 0x17634
0x000176d3      f6456840       test byte [rbp + 0x68], 0x40
0x000176d7      0f84cffaffff   je 0x171ac
0x000176dd      4883bc249800.  cmp qword [rsp + 0x98], 0
0x000176e6      742a           je 0x17712
0x000176e8      448b84241001.  mov r8d, dword [rsp + 0x110]
0x000176f0      488b4c2448     mov rcx, qword [rsp + 0x48]
0x000176f5      4c89e2         mov rdx, r12
0x000176f8      4889de         mov rsi, rbx
0x000176fb      4c89ff         mov rdi, r15
0x000176fe      e88dc8ffff     call sym.expand_bkref_cache
0x00017703      85c0           test eax, eax
0x00017705      898424880000.  mov dword [rsp + 0x88], eax
0x0001770c      0f850effffff   jne 0x17620
0x00017712      488b742430     mov rsi, qword [rsp + 0x30]
0x00017717      488dbc248800.  lea rdi, [rsp + 0x88]
0x0001771f      4489e9         mov ecx, r13d
0x00017722      4889da         mov rdx, rbx
0x00017725      e8c6c2ffff     call sym.re_acquire_state_context
0x0001772a      4885c0         test rax, rax
0x0001772d      4889c5         mov rbp, rax
0x00017730      0f8481000000   je 0x177b7
0x00017736      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0001773d      4a892ce0       mov qword [rax + r12*8], rbp
0x00017741      e966faffff     jmp 0x171ac
0x00017746      4c8d6001       lea r12, [rax + 1]
0x0001774a      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x00017754      4c29e8         sub rax, r13
0x00017757      4c39e0         cmp rax, r12
0x0001775a      7c6f           jl 0x177cb
0x0001775c      4f8d742500     lea r14, [r13 + r12]
0x00017761      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; 2305843009213693951
0x0001776b      4939c6         cmp r14, rax
0x0001776e      775b           ja 0x177cb
0x00017770      488b442460     mov rax, qword [rsp + 0x60]
0x00017775      4a8d34f50000.  lea rsi, [r14*8]
0x0001777d      488b7810       mov rdi, qword [rax + 0x10]
0x00017781      e8aab0feff     call sym.imp.realloc
0x00017786      4885c0         test rax, rax
0x00017789      7440           je 0x177cb
0x0001778b      488b4c2460     mov rcx, qword [rsp + 0x60]
0x00017790      4a8d14e50000.  lea rdx, [r12*8]
0x00017798      4a8d3ce8       lea rdi, [rax + r13*8]
0x0001779c      31f6           xor esi, esi
0x0001779e      48894110       mov qword [rcx + 0x10], rax
0x000177a2      4c897108       mov qword [rcx + 8], r14
0x000177a6      e875aefeff     call sym.imp.memset
0x000177ab      e97cf9ffff     jmp 0x1712c
0x000177b0      31ff           xor edi, edi
0x000177b2      e9b1feffff     jmp 0x17668
0x000177b7      8bb424880000.  mov esi, dword [rsp + 0x88]
0x000177be      85f6           test esi, esi
0x000177c0      0f8470ffffff   je 0x17736
0x000177c6      e955feffff     jmp 0x17620
0x000177cb      b80c000000     mov eax, 0xc
0x000177d0      e95ffeffff     jmp 0x17634
0x000177d5      488b442460     mov rax, qword [rsp + 0x60]
0x000177da      4c8920         mov qword [rax], r12
0x000177dd      488b442468     mov rax, qword [rsp + 0x68]
0x000177e2      498987b80000.  mov qword [r15 + 0xb8], rax
0x000177e9      488b442470     mov rax, qword [rsp + 0x70]
0x000177ee      49894748       mov qword [r15 + 0x48], rax
0x000177f2      b801000000     mov eax, 1
0x000177f7      e938feffff     jmp 0x17634
0x000177fc      e85fadfeff     call sym.imp.__stack_chk_fail
0x00017801      0f1f440000     nop dword [rax + rax]
0x00017806      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_regs:
0x00017810      55             push rbp
0x00017811      4889e5         mov rbp, rsp
0x00017814      4157           push r15
0x00017816      4156           push r14
0x00017818      4155           push r13
0x0001781a      4154           push r12
0x0001781c      4989cd         mov r13, rcx
0x0001781f      53             push rbx
0x00017820      4989f4         mov r12, rsi
0x00017823      4881ecb80000.  sub rsp, 0xb8
0x0001782a      48899568ffff.  mov qword [rbp - 0x98], rdx
0x00017831      48c745b00000.  mov qword [rbp - 0x50], 0
0x00017839      64488b042528.  mov rax, qword fs:[0x28]
0x00017842      488945c8       mov qword [rbp - 0x38], rax
0x00017846      31c0           xor eax, eax
0x00017848      488b07         mov rax, qword [rdi]
0x0001784b      4584c0         test r8b, r8b
0x0001784e      48c745b80200.  mov qword [rbp - 0x48], 2
0x00017856      48c745c00000.  mov qword [rbp - 0x40], 0
0x0001785e      48898570ffff.  mov qword [rbp - 0x90], rax
0x00017865      0f84a2070000   je 0x1800d
0x0001786b      bf60000000     mov edi, 0x60                           ; '`'
0x00017870      e80baffeff     call sym.imp.malloc
0x00017875      488d4db0       lea rcx, [rbp - 0x50]
0x00017879      4885c0         test rax, rax
0x0001787c      488945c0       mov qword [rbp - 0x40], rax
0x00017880      48898d78ffff.  mov qword [rbp - 0x88], rcx
0x00017887      0f841f070000   je 0x17fac
0x0001788d      488b8570ffff.  mov rax, qword [rbp - 0x90]
0x00017894      660fefc0       pxor xmm0, xmm0
0x00017898      48c745a00000.  mov qword [rbp - 0x60], 0
0x000178a0      488b98900000.  mov rbx, qword [rax + 0x90]
0x000178a7      488b8568ffff.  mov rax, qword [rbp - 0x98]
0x000178ae      0f294590       movaps xmmword [rbp - 0x70], xmm0
0x000178b2      48c1e004       shl rax, 4
0x000178b6      483dbf0f0000   cmp rax, 0xfbf
0x000178bc      48898548ffff.  mov qword [rbp - 0xb8], rax
0x000178c3      0f87ed060000   ja 0x17fb6
0x000178c9      4883c010       add rax, 0x10
0x000178cd      c68537ffffff.  mov byte [rbp - 0xc9], 0
0x000178d4      4829c4         sub rsp, rax
0x000178d7      488d44240f     lea rax, [rsp + 0xf]
0x000178dc      4883e0f0       and rax, 0xfffffffffffffff0
0x000178e0      48898540ffff.  mov qword [rbp - 0xc0], rax
0x000178e7      488b9548ffff.  mov rdx, qword [rbp - 0xb8]
0x000178ee      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x000178f5      4c89ee         mov rsi, r13
0x000178f8      e813aefeff     call sym.imp.memcpy
0x000178fd      488d4590       lea rax, [rbp - 0x70]
0x00017901      498b4d00       mov rcx, qword [r13]
0x00017905      48898558ffff.  mov qword [rbp - 0xa8], rax
0x0001790c      4883c010       add rax, 0x10
0x00017910      48894d88       mov qword [rbp - 0x78], rcx
0x00017914      48898538ffff.  mov qword [rbp - 0xc8], rax
0x0001791b      488d4588       lea rax, [rbp - 0x78]
0x0001791f      48898550ffff.  mov qword [rbp - 0xb0], rax
0x00017926      e9de000000     jmp 0x17a09
0x0001792b      0f1f440000     nop dword [rax + rax]
0x00017930      83fe09         cmp esi, 9
0x00017933      0f84e7010000   je 0x17b20
0x00017939      4839c8         cmp rax, rcx
0x0001793c      750e           jne 0x1794c
0x0001793e      49399c24b000.  cmp qword [r12 + 0xb0], rbx
0x00017946      0f84d4030000   je 0x17d20
0x0001794c      4d8bb4249800.  mov r14, qword [r12 + 0x98]
0x00017954      498b3e         mov rdi, qword [r14]
0x00017957      4a8d340f       lea rsi, [rdi + r9]
0x0001795b      0fb64608       movzx eax, byte [rsi + 8]
0x0001795f      a808           test al, 8
0x00017961      0f8509010000   jne 0x17a70
0x00017967      f6460a10       test byte [rsi + 0xa], 0x10
0x0001796b      0f85ff010000   jne 0x17b70
0x00017971      3c04           cmp al, 4
0x00017973      0f8437020000   je 0x17bb0
0x00017979      488b4d88       mov rcx, qword [rbp - 0x78]
0x0001797d      4889ca         mov rdx, rcx
0x00017980      4c89e7         mov rdi, r12
0x00017983      48898d60ffff.  mov qword [rbp - 0xa0], rcx
0x0001798a      e8e1cbffff     call sym.check_node_accept
0x0001798f      84c0           test al, al
0x00017991      488b8d60ffff.  mov rcx, qword [rbp - 0xa0]
0x00017998      0f844a040000   je 0x17de8
0x0001799e      498b4618       mov rax, qword [r14 + 0x18]
0x000179a2      488d5101       lea rdx, [rcx + 1]
0x000179a6      4a8b1cf8       mov rbx, qword [rax + r15*8]
0x000179aa      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x000179b2      48895588       mov qword [rbp - 0x78], rdx
0x000179b6      743c           je 0x179f4
0x000179b8      493b9424a800.  cmp rdx, qword [r12 + 0xa8]
0x000179c0      0f8f30040000   jg 0x17df6
0x000179c6      498b8424b800.  mov rax, qword [r12 + 0xb8]
0x000179ce      488b04d0       mov rax, qword [rax + rdx*8]
0x000179d2      4885c0         test rax, rax
0x000179d5      0f841b040000   je 0x17df6
0x000179db      488b7810       mov rdi, qword [rax + 0x10]
0x000179df      488d7018       lea rsi, [rax + 0x18]
0x000179e3      4889da         mov rdx, rbx
0x000179e6      e8b5acffff     call sym.re_node_set_contains.isra.3
0x000179eb      4885c0         test rax, rax
0x000179ee      0f8402040000   je 0x17df6
0x000179f4      48c745980000.  mov qword [rbp - 0x68], 0
0x000179fc      4885db         test rbx, rbx
0x000179ff      0f88d5030000   js 0x17dda
0x00017a05      488b4d88       mov rcx, qword [rbp - 0x78]
0x00017a09      498b4508       mov rax, qword [r13 + 8]
0x00017a0d      4839c8         cmp rax, rcx
0x00017a10      0f8cea040000   jl 0x17f00
0x00017a16      488bbd70ffff.  mov rdi, qword [rbp - 0x90]
0x00017a1d      4989d9         mov r9, rbx
0x00017a20      4989df         mov r15, rbx
0x00017a23      49c1e104       shl r9, 4
0x00017a27      488b17         mov rdx, qword [rdi]
0x00017a2a      4c01ca         add rdx, r9
0x00017a2d      0fb67208       movzx esi, byte [rdx + 8]
0x00017a31      83fe08         cmp esi, 8
0x00017a34      0f85f6feffff   jne 0x17930
0x00017a3a      488b12         mov rdx, qword [rdx]
0x00017a3d      4883c201       add rdx, 1
0x00017a41      48399568ffff.  cmp qword [rbp - 0x98], rdx
0x00017a48      0f8eebfeffff   jle 0x17939
0x00017a4e      48c1e204       shl rdx, 4
0x00017a52      4c01ea         add rdx, r13
0x00017a55      48c74208ffff.  mov qword [rdx + 8], 0xffffffffffffffff
0x00017a5d      48890a         mov qword [rdx], rcx
0x00017a60      498b4508       mov rax, qword [r13 + 8]
0x00017a64      e9d0feffff     jmp 0x17939
0x00017a69      0f1f80000000.  nop dword [rax]
0x00017a70      498b8424b800.  mov rax, qword [r12 + 0xb8]
0x00017a78      488b5588       mov rdx, qword [rbp - 0x78]
0x00017a7c      4889de         mov rsi, rbx
0x00017a7f      488bbd58ffff.  mov rdi, qword [rbp - 0xa8]
0x00017a86      4c8b0cd0       mov r9, qword [rax + rdx*8]
0x00017a8a      498b4628       mov rax, qword [r14 + 0x28]
0x00017a8e      488d145b       lea rdx, [rbx + rbx*2]
0x00017a92      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x00017a99      4c8d3cd0       lea r15, [rax + rdx*8]
0x00017a9d      e8be96ffff     call sym.re_node_set_insert
0x00017aa2      84c0           test al, al
0x00017aa4      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x00017aab      0f84d7040000   je 0x17f88
0x00017ab1      4d8b5708       mov r10, qword [r15 + 8]
0x00017ab5      4d85d2         test r10, r10
0x00017ab8      0f8e2a030000   jle 0x17de8
0x00017abe      4d8b7f10       mov r15, qword [r15 + 0x10]
0x00017ac2      4d8b5910       mov r11, qword [r9 + 0x10]
0x00017ac6      4d8d7118       lea r14, [r9 + 0x18]
0x00017aca      48c7c3ffffff.  mov rbx, 0xffffffffffffffff
0x00017ad1      4531c9         xor r9d, r9d
0x00017ad4      4c89a560ffff.  mov qword [rbp - 0xa0], r12
0x00017adb      0f1f440000     nop dword [rax + rax]
0x00017ae0      4f8b24cf       mov r12, qword [r15 + r9*8]
0x00017ae4      4c89f6         mov rsi, r14
0x00017ae7      4c89df         mov rdi, r11
0x00017aea      4c89e2         mov rdx, r12
0x00017aed      e8aeabffff     call sym.re_node_set_contains.isra.3
0x00017af2      4885c0         test rax, rax
0x00017af5      740d           je 0x17b04
0x00017af7      4883fbff       cmp rbx, 0xffffffffffffffff
0x00017afb      0f854f010000   jne 0x17c50
0x00017b01      4c89e3         mov rbx, r12
0x00017b04      4983c101       add r9, 1
0x00017b08      4d39ca         cmp r10, r9
0x00017b0b      75d3           jne 0x17ae0
0x00017b0d      4c8ba560ffff.  mov r12, qword [rbp - 0xa0]
0x00017b14      e9e3feffff     jmp 0x179fc
0x00017b19      0f1f80000000.  nop dword [rax]
0x00017b20      488b3a         mov rdi, qword [rdx]
0x00017b23      488d7701       lea rsi, [rdi + 1]
0x00017b27      4839b568ffff.  cmp qword [rbp - 0x98], rsi
0x00017b2e      0f8e05feffff   jle 0x17939
0x00017b34      48c1e604       shl rsi, 4
0x00017b38      498d443500     lea rax, [r13 + rsi]
0x00017b3d      483908         cmp qword [rax], rcx
0x00017b40      0f8c7a030000   jl 0x17ec0
0x00017b46      f6420a08       test byte [rdx + 0xa], 8
0x00017b4a      7412           je 0x17b5e
0x00017b4c      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x00017b53      48833c37ff     cmp qword [rdi + rsi], 0xffffffffffffffff
0x00017b58      0f85ed030000   jne 0x17f4b
0x00017b5e      48894808       mov qword [rax + 8], rcx
0x00017b62      498b4508       mov rax, qword [r13 + 8]
0x00017b66      e9cefdffff     jmp 0x17939
0x00017b6b      0f1f440000     nop dword [rax + rax]
0x00017b70      4c8b4588       mov r8, qword [rbp - 0x78]
0x00017b74      498db6d80000.  lea rsi, [r14 + 0xd8]
0x00017b7b      4c89e1         mov rcx, r12
0x00017b7e      4889da         mov rdx, rbx
0x00017b81      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x00017b88      e8c3f2ffff     call sym.check_node_accept_bytes.isra.31
0x00017b8d      4863c8         movsxd rcx, eax
0x00017b90      4885c9         test rcx, rcx
0x00017b93      0f85f8010000   jne 0x17d91
0x00017b99      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x00017ba0      498b36         mov rsi, qword [r14]
0x00017ba3      488b4d88       mov rcx, qword [rbp - 0x78]
0x00017ba7      4c01ce         add rsi, r9
0x00017baa      e9cefdffff     jmp 0x1797d
0x00017baf      90             nop
0x00017bb0      488b06         mov rax, qword [rsi]
0x00017bb3      4883c001       add rax, 1
0x00017bb7      48c1e004       shl rax, 4
0x00017bbb      4c01e8         add rax, r13
0x00017bbe      488b5008       mov rdx, qword [rax + 8]
0x00017bc2      488b38         mov rdi, qword [rax]
0x00017bc5      4889d1         mov rcx, rdx
0x00017bc8      4829f9         sub rcx, rdi
0x00017bcb      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x00017bd3      0f84af010000   je 0x17d88
0x00017bd9      4883ffff       cmp rdi, 0xffffffffffffffff
0x00017bdd      0f8413020000   je 0x17df6
0x00017be3      4883faff       cmp rdx, 0xffffffffffffffff
0x00017be7      0f8409020000   je 0x17df6
0x00017bed      4885c9         test rcx, rcx
0x00017bf0      0f844a020000   je 0x17e40
0x00017bf6      4c8b7d88       mov r15, qword [rbp - 0x78]
0x00017bfa      498b542430     mov rdx, qword [r12 + 0x30]
0x00017bff      498b442408     mov rax, qword [r12 + 8]
0x00017c04      4c29fa         sub rdx, r15
0x00017c07      4839d1         cmp rcx, rdx
0x00017c0a      0f8fe6010000   jg 0x17df6
0x00017c10      4a8d3438       lea rsi, [rax + r15]
0x00017c14      4801c7         add rdi, rax
0x00017c17      4889ca         mov rdx, rcx
0x00017c1a      48898d60ffff.  mov qword [rbp - 0xa0], rcx
0x00017c21      e85aaafeff     call sym.imp.memcmp
0x00017c26      85c0           test eax, eax
0x00017c28      488b8d60ffff.  mov rcx, qword [rbp - 0xa0]
0x00017c2f      0f85c1010000   jne 0x17df6
0x00017c35      498b4618       mov rax, qword [r14 + 0x18]
0x00017c39      498d140f       lea rdx, [r15 + rcx]
0x00017c3d      488b1cd8       mov rbx, qword [rax + rbx*8]
0x00017c41      e964fdffff     jmp 0x179aa
0x00017c46      662e0f1f8400.  nop word cs:[rax + rax]
0x00017c50      488bb538ffff.  mov rsi, qword [rbp - 0xc8]
0x00017c57      488b7d98       mov rdi, qword [rbp - 0x68]
0x00017c5b      4889da         mov rdx, rbx
0x00017c5e      4d89e6         mov r14, r12
0x00017c61      4c8ba560ffff.  mov r12, qword [rbp - 0xa0]
0x00017c68      e833aaffff     call sym.re_node_set_contains.isra.3
0x00017c6d      4885c0         test rax, rax
0x00017c70      0f85ba010000   jne 0x17e30
0x00017c76      488b8d78ffff.  mov rcx, qword [rbp - 0x88]
0x00017c7d      4885c9         test rcx, rcx
0x00017c80      0f8476fdffff   je 0x179fc
0x00017c86      4c8b39         mov r15, qword [rcx]
0x00017c89      488b5588       mov rdx, qword [rbp - 0x78]
0x00017c8d      498d4701       lea rax, [r15 + 1]
0x00017c91      483b4108       cmp rax, qword [rcx + 8]
0x00017c95      488901         mov qword [rcx], rax
0x00017c98      0f847f030000   je 0x1801d
0x00017c9e      488b4110       mov rax, qword [rcx + 0x10]
0x00017ca2      4f8d3c7f       lea r15, [r15 + r15*2]
0x00017ca6      49c1e704       shl r15, 4
0x00017caa      4901c7         add r15, rax
0x00017cad      4d897708       mov qword [r15 + 8], r14
0x00017cb1      4c8bb548ffff.  mov r14, qword [rbp - 0xb8]
0x00017cb8      498917         mov qword [r15], rdx
0x00017cbb      4c89f7         mov rdi, r14
0x00017cbe      e8bdaafeff     call sym.imp.malloc
0x00017cc3      4885c0         test rax, rax
0x00017cc6      49894710       mov qword [r15 + 0x10], rax
0x00017cca      7426           je 0x17cf2
0x00017ccc      4c89f2         mov rdx, r14
0x00017ccf      4c89ee         mov rsi, r13
0x00017cd2      4889c7         mov rdi, rax
0x00017cd5      e836aafeff     call sym.imp.memcpy
0x00017cda      488bb558ffff.  mov rsi, qword [rbp - 0xa8]
0x00017ce1      498d7f18       lea rdi, [r15 + 0x18]
0x00017ce5      e816bbffff     call sym.re_node_set_init_copy
0x00017cea      85c0           test eax, eax
0x00017cec      0f840afdffff   je 0x179fc
0x00017cf2      488b7da0       mov rdi, qword [rbp - 0x60]
0x00017cf6      e815adfeff     call sym..plt.got
0x00017cfb      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x00017d02      0f8593030000   jne 0x1809b
0x00017d08      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x00017d0f      e84ce0ffff     call sym.free_fail_stack_return.part.24
0x00017d14      b80c000000     mov eax, 0xc
0x00017d19      e90b020000     jmp 0x17f29
0x00017d1e      6690           nop
0x00017d20      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x00017d28      0f842e030000   je 0x1805c
0x00017d2e      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x00017d35      4885c9         test rcx, rcx
0x00017d38      7420           je 0x17d5a
0x00017d3a      4c89e8         mov rax, r13
0x00017d3d      31d2           xor edx, edx
0x00017d3f      90             nop
0x00017d40      48833800       cmp qword [rax], 0
0x00017d44      7807           js 0x17d4d
0x00017d46      48837808ff     cmp qword [rax + 8], 0xffffffffffffffff
0x00017d4b      7453           je 0x17da0
0x00017d4d      4883c201       add rdx, 1
0x00017d51      4883c010       add rax, 0x10
0x00017d55      4839d1         cmp rcx, rdx
0x00017d58      75e6           jne 0x17d40
0x00017d5a      488b7da0       mov rdi, qword [rbp - 0x60]
0x00017d5e      e8adacfeff     call sym..plt.got
0x00017d63      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x00017d6a      0f8574030000   jne 0x180e4
0x00017d70      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x00017d77      e8e4dfffff     call sym.free_fail_stack_return.part.24
0x00017d7c      31c0           xor eax, eax
0x00017d7e      e9a6010000     jmp 0x17f29
0x00017d83      0f1f440000     nop dword [rax + rax]
0x00017d88      4885c9         test rcx, rcx
0x00017d8b      0f84af000000   je 0x17e40
0x00017d91      4c8b7d88       mov r15, qword [rbp - 0x78]
0x00017d95      e99bfeffff     jmp 0x17c35
0x00017d9a      660f1f440000   nop word [rax + rax]
0x00017da0      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x00017da7      4c8b8d58ffff.  mov r9, qword [rbp - 0xa8]
0x00017dae      4d89e8         mov r8, r13
0x00017db1      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x00017db8      488b9550ffff.  mov rdx, qword [rbp - 0xb0]
0x00017dbf      488d7710       lea rsi, [rdi + 0x10]
0x00017dc3      e8e8dfffff     call sym.pop_fail_stack.isra.25
0x00017dc8      4989c1         mov r9, rax
0x00017dcb      4889c3         mov rbx, rax
0x00017dce      4989c7         mov r15, rax
0x00017dd1      49c1e104       shl r9, 4
0x00017dd5      e972fbffff     jmp 0x1794c
0x00017dda      4883fbfe       cmp rbx, 0xfffffffffffffffe
0x00017dde      0f84a4010000   je 0x17f88
0x00017de4      0f1f4000       nop dword [rax]
0x00017de8      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x00017df0      0f84b6020000   je 0x180ac
0x00017df6      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x00017dfd      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x00017e04      488d5588       lea rdx, [rbp - 0x78]
0x00017e08      4c8b8d58ffff.  mov r9, qword [rbp - 0xa8]
0x00017e0f      4d89e8         mov r8, r13
0x00017e12      488d7710       lea rsi, [rdi + 0x10]
0x00017e16      e895dfffff     call sym.pop_fail_stack.isra.25
0x00017e1b      488b4d88       mov rcx, qword [rbp - 0x78]
0x00017e1f      4889c3         mov rbx, rax
0x00017e22      e9f4faffff     jmp 0x1791b
0x00017e27      660f1f840000.  nop word [rax + rax]
0x00017e30      4c89f3         mov rbx, r14
0x00017e33      e9c4fbffff     jmp 0x179fc
0x00017e38      0f1f84000000.  nop dword [rax + rax]
0x00017e40      488bbd58ffff.  mov rdi, qword [rbp - 0xa8]
0x00017e47      4889de         mov rsi, rbx
0x00017e4a      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x00017e51      e80a93ffff     call sym.re_node_set_insert
0x00017e56      84c0           test al, al
0x00017e58      0f842a010000   je 0x17f88
0x00017e5e      498b5628       mov rdx, qword [r14 + 0x28]
0x00017e62      488d045b       lea rax, [rbx + rbx*2]
0x00017e66      488b4d88       mov rcx, qword [rbp - 0x78]
0x00017e6a      488d04c2       lea rax, [rdx + rax*8]
0x00017e6e      48898d28ffff.  mov qword [rbp - 0xd8], rcx
0x00017e75      488b4010       mov rax, qword [rax + 0x10]
0x00017e79      488b18         mov rbx, qword [rax]
0x00017e7c      498b8424b800.  mov rax, qword [r12 + 0xb8]
0x00017e84      488b04c8       mov rax, qword [rax + rcx*8]
0x00017e88      4889da         mov rdx, rbx
0x00017e8b      488b7810       mov rdi, qword [rax + 0x10]
0x00017e8f      488d7018       lea rsi, [rax + 0x18]
0x00017e93      e808a8ffff     call sym.re_node_set_contains.isra.3
0x00017e98      4885c0         test rax, rax
0x00017e9b      0f855bfbffff   jne 0x179fc
0x00017ea1      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x00017ea8      498b36         mov rsi, qword [r14]
0x00017eab      488b8d28ffff.  mov rcx, qword [rbp - 0xd8]
0x00017eb2      4c01ce         add rsi, r9
0x00017eb5      e9c3faffff     jmp 0x1797d
0x00017eba      660f1f440000   nop word [rax + rax]
0x00017ec0      488b9548ffff.  mov rdx, qword [rbp - 0xb8]
0x00017ec7      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x00017ece      4c89ee         mov rsi, r13
0x00017ed1      48894808       mov qword [rax + 8], rcx
0x00017ed5      4c898d28ffff.  mov qword [rbp - 0xd8], r9
0x00017edc      48898d60ffff.  mov qword [rbp - 0xa0], rcx
0x00017ee3      e828a8feff     call sym.imp.memcpy
0x00017ee8      498b4508       mov rax, qword [r13 + 8]
0x00017eec      488b8d60ffff.  mov rcx, qword [rbp - 0xa0]
0x00017ef3      4c8b8d28ffff.  mov r9, qword [rbp - 0xd8]
0x00017efa      e93afaffff     jmp 0x17939
0x00017eff      90             nop
0x00017f00      488b7da0       mov rdi, qword [rbp - 0x60]
0x00017f04      e807abfeff     call sym..plt.got
0x00017f09      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x00017f10      0f85d6000000   jne 0x17fec
0x00017f16      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x00017f1d      4885ff         test rdi, rdi
0x00017f20      7405           je 0x17f27
0x00017f22      e839deffff     call sym.free_fail_stack_return.part.24
0x00017f27      31c0           xor eax, eax
0x00017f29      488b5dc8       mov rbx, qword [rbp - 0x38]
0x00017f2d      6448331c2528.  xor rbx, qword fs:[0x28]
0x00017f36      0f85b9010000   jne 0x180f5
0x00017f3c      488d65d8       lea rsp, [rbp - 0x28]
0x00017f40      5b             pop rbx
0x00017f41      415c           pop r12
0x00017f43      415d           pop r13
0x00017f45      415e           pop r14
0x00017f47      415f           pop r15
0x00017f49      5d             pop rbp
0x00017f4a      c3             ret
0x00017f4b      488b9548ffff.  mov rdx, qword [rbp - 0xb8]
0x00017f52      4889fe         mov rsi, rdi
0x00017f55      4c89ef         mov rdi, r13
0x00017f58      48898d28ffff.  mov qword [rbp - 0xd8], rcx
0x00017f5f      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x00017f66      e8a5a7feff     call sym.imp.memcpy
0x00017f6b      498b4508       mov rax, qword [r13 + 8]
0x00017f6f      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x00017f76      488b8d28ffff.  mov rcx, qword [rbp - 0xd8]
0x00017f7d      e9b7f9ffff     jmp 0x17939
0x00017f82      660f1f440000   nop word [rax + rax]
0x00017f88      488b7da0       mov rdi, qword [rbp - 0x60]
0x00017f8c      e87faafeff     call sym..plt.got
0x00017f91      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x00017f98      0f85fd000000   jne 0x1809b
0x00017f9e      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x00017fa6      0f855cfdffff   jne 0x17d08
0x00017fac      b80c000000     mov eax, 0xc
0x00017fb1      e973ffffff     jmp 0x17f29
0x00017fb6      488bbd48ffff.  mov rdi, qword [rbp - 0xb8]
0x00017fbd      e8bea7feff     call sym.imp.malloc
0x00017fc2      4885c0         test rax, rax
0x00017fc5      48898540ffff.  mov qword [rbp - 0xc0], rax
0x00017fcc      c68537ffffff.  mov byte [rbp - 0xc9], 1
0x00017fd3      0f850ef9ffff   jne 0x178e7
0x00017fd9      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x00017fe0      4885ff         test rdi, rdi
0x00017fe3      74c7           je 0x17fac
0x00017fe5      e876ddffff     call sym.free_fail_stack_return.part.24
0x00017fea      ebc0           jmp 0x17fac
0x00017fec      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x00017ff3      e818aafeff     call sym..plt.got
0x00017ff8      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x00017fff      4885ff         test rdi, rdi
0x00018002      0f851affffff   jne 0x17f22
0x00018008      e91affffff     jmp 0x17f27
0x0001800d      48c78578ffff.  mov qword [rbp - 0x88], 0
0x00018018      e970f8ffff     jmp 0x1788d
0x0001801d      488d3440       lea rsi, [rax + rax*2]
0x00018021      488b8578ffff.  mov rax, qword [rbp - 0x88]
0x00018028      48899560ffff.  mov qword [rbp - 0xa0], rdx
0x0001802f      48c1e605       shl rsi, 5
0x00018033      488b7810       mov rdi, qword [rax + 0x10]
0x00018037      e8f4a7feff     call sym.imp.realloc
0x0001803c      4885c0         test rax, rax
0x0001803f      7444           je 0x18085
0x00018041      488b8d78ffff.  mov rcx, qword [rbp - 0x88]
0x00018048      488b9560ffff.  mov rdx, qword [rbp - 0xa0]
0x0001804f      48d16108       shl qword [rcx + 8], 1
0x00018053      48894110       mov qword [rcx + 0x10], rax
0x00018057      e946fcffff     jmp 0x17ca2
0x0001805c      488b7da0       mov rdi, qword [rbp - 0x60]
0x00018060      e8aba9feff     call sym..plt.got
0x00018065      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0001806c      0f84b5feffff   je 0x17f27
0x00018072      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x00018079      e892a9feff     call sym..plt.got
0x0001807e      31c0           xor eax, eax
0x00018080      e9a4feffff     jmp 0x17f29
0x00018085      488b7da0       mov rdi, qword [rbp - 0x60]
0x00018089      e882a9feff     call sym..plt.got
0x0001808e      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x00018095      0f846dfcffff   je 0x17d08
0x0001809b      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x000180a2      e869a9feff     call sym..plt.got
0x000180a7      e9f2feffff     jmp 0x17f9e
0x000180ac      488b7da0       mov rdi, qword [rbp - 0x60]
0x000180b0      e85ba9feff     call sym..plt.got
0x000180b5      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x000180bc      b801000000     mov eax, 1
0x000180c1      0f8462feffff   je 0x17f29
0x000180c7      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x000180ce      898578ffffff   mov dword [rbp - 0x88], eax
0x000180d4      e837a9feff     call sym..plt.got
0x000180d9      8b8578ffffff   mov eax, dword [rbp - 0x88]
0x000180df      e945feffff     jmp 0x17f29
0x000180e4      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x000180eb      e820a9feff     call sym..plt.got
0x000180f0      e97bfcffff     jmp 0x17d70
0x000180f5      e866a4feff     call sym.imp.__stack_chk_fail
0x000180fa      660f1f440000   nop word [rax + rax]
;-- get_subexp_sub.isra.32:
0x00018100      4157           push r15
0x00018102      4156           push r14
0x00018104      4989ce         mov r14, rcx
0x00018107      4155           push r13
0x00018109      4154           push r12
0x0001810b      4989f5         mov r13, rsi
0x0001810e      55             push rbp
0x0001810f      53             push rbx
0x00018110      488d7210       lea rsi, [rdx + 0x10]
0x00018114      4889d5         mov rbp, rdx
0x00018117      4d89c1         mov r9, r8
0x0001811a      4d89c4         mov r12, r8
0x0001811d      4883ec20       sub rsp, 0x20
0x00018121      488b4a08       mov rcx, qword [rdx + 8]
0x00018125      4d89f0         mov r8, r14
0x00018128      6a08           push 8
0x0001812a      488b12         mov rdx, qword [rdx]
0x0001812d      4889fb         mov rbx, rdi
0x00018130      e87befffff     call sym.check_arrival
0x00018135      85c0           test eax, eax
0x00018137      5a             pop rdx
0x00018138      59             pop rcx
0x00018139      7415           je 0x18150
0x0001813b      4883c418       add rsp, 0x18
0x0001813f      5b             pop rbx
0x00018140      5d             pop rbp
0x00018141      415c           pop r12
0x00018143      415d           pop r13
0x00018145      415e           pop r14
0x00018147      415f           pop r15
0x00018149      c3             ret
0x0001814a      660f1f440000   nop word [rax + rax]
0x00018150      488b83c80000.  mov rax, qword [rbx + 0xc8]
0x00018157      488b93d00000.  mov rdx, qword [rbx + 0xd0]
0x0001815e      4c8b7d08       mov r15, qword [rbp + 8]
0x00018162      498b4d00       mov rcx, qword [r13]
0x00018166      488bbbd80000.  mov rdi, qword [rbx + 0xd8]
0x0001816d      4839d0         cmp rax, rdx
0x00018170      4c89fe         mov rsi, r15
0x00018173      0f8d97000000   jge 0x18210
0x00018179      488d1480       lea rdx, [rax + rax*4]
0x0001817d      48c1e203       shl rdx, 3
0x00018181      4885c0         test rax, rax
0x00018184      7e0b           jle 0x18191
0x00018186      4c8d4417d8     lea r8, [rdi + rdx - 0x28]
0x0001818b      4d3b6008       cmp r12, qword [r8 + 8]
0x0001818f      746f           je 0x18200
0x00018191      4801d7         add rdi, rdx
0x00018194      31d2           xor edx, edx
0x00018196      4939cf         cmp r15, rcx
0x00018199      0f94c2         sete dl
0x0001819c      4883c001       add rax, 1
0x000181a0      4c8937         mov qword [rdi], r14
0x000181a3      f7da           neg edx
0x000181a5      4c896708       mov qword [rdi + 8], r12
0x000181a9      48894f10       mov qword [rdi + 0x10], rcx
0x000181ad      66895722       mov word [rdi + 0x22], dx
0x000181b1      4c897f18       mov qword [rdi + 0x18], r15
0x000181b5      488983c80000.  mov qword [rbx + 0xc8], rax
0x000181bc      c6472000       mov byte [rdi + 0x20], 0
0x000181c0      4c89f8         mov rax, r15
0x000181c3      486393e00000.  movsxd rdx, dword [rbx + 0xe0]
0x000181ca      4829c8         sub rax, rcx
0x000181cd      4839c2         cmp rdx, rax
0x000181d0      7d0a           jge 0x181dc
0x000181d2      4129cf         sub r15d, ecx
0x000181d5      4489bbe00000.  mov dword [rbx + 0xe0], r15d
0x000181dc      4c01e6         add rsi, r12
0x000181df      492b7500       sub rsi, qword [r13]
0x000181e3      4883c418       add rsp, 0x18
0x000181e7      4889df         mov rdi, rbx
0x000181ea      5b             pop rbx
0x000181eb      5d             pop rbp
0x000181ec      415c           pop r12
0x000181ee      415d           pop r13
0x000181f0      415e           pop r14
0x000181f2      415f           pop r15
0x000181f4      e9379bffff     jmp sym.clean_state_log_if_needed
0x000181f9      0f1f80000000.  nop dword [rax]
0x00018200      41c6402001     mov byte [r8 + 0x20], 1
0x00018205      eb8a           jmp 0x18191
0x00018207      660f1f840000.  nop word [rax + rax]
0x00018210      488d3492       lea rsi, [rdx + rdx*4]
0x00018214      48894c2408     mov qword [rsp + 8], rcx
0x00018219      48c1e604       shl rsi, 4
0x0001821d      e80ea6feff     call sym.imp.realloc
0x00018222      4885c0         test rax, rax
0x00018225      488b4c2408     mov rcx, qword [rsp + 8]
0x0001822a      7454           je 0x18280
0x0001822c      488bb3c80000.  mov rsi, qword [rbx + 0xc8]
0x00018233      488b93d00000.  mov rdx, qword [rbx + 0xd0]
0x0001823a      488983d80000.  mov qword [rbx + 0xd8], rax
0x00018241      48894c2408     mov qword [rsp + 8], rcx
0x00018246      488d34b6       lea rsi, [rsi + rsi*4]
0x0001824a      488d1492       lea rdx, [rdx + rdx*4]
0x0001824e      488d3cf0       lea rdi, [rax + rsi*8]
0x00018252      48c1e203       shl rdx, 3
0x00018256      31f6           xor esi, esi
0x00018258      e8c3a3feff     call sym.imp.memset
0x0001825d      48d1a3d00000.  shl qword [rbx + 0xd0], 1
0x00018264      488b83c80000.  mov rax, qword [rbx + 0xc8]
0x0001826b      488bbbd80000.  mov rdi, qword [rbx + 0xd8]
0x00018272      488b7508       mov rsi, qword [rbp + 8]
0x00018276      488b4c2408     mov rcx, qword [rsp + 8]
0x0001827b      e9f9feffff     jmp 0x18179
0x00018280      488bbbd80000.  mov rdi, qword [rbx + 0xd8]
0x00018287      e884a7feff     call sym..plt.got
0x0001828c      b80c000000     mov eax, 0xc
0x00018291      e9a5feffff     jmp 0x1813b
0x00018296      662e0f1f8400.  nop word cs:[rax + rax]
;-- transit_state_bkref.isra.34:
0x000182a0      4157           push r15
0x000182a2      4156           push r14
0x000182a4      4155           push r13
0x000182a6      4154           push r12
0x000182a8      55             push rbp
0x000182a9      53             push rbx
0x000182aa      4881ecb80000.  sub rsp, 0xb8
0x000182b1      4c8b7f48       mov r15, qword [rdi + 0x48]
0x000182b5      64488b042528.  mov rax, qword fs:[0x28]
0x000182be      48898424a800.  mov qword [rsp + 0xa8], rax
0x000182c6      31c0           xor eax, eax
0x000182c8      48833e00       cmp qword [rsi], 0
0x000182cc      488b87980000.  mov rax, qword [rdi + 0x98]
0x000182d3      4889742448     mov qword [rsp + 0x48], rsi
0x000182d8      4889542440     mov qword [rsp + 0x40], rdx
0x000182dd      4889442438     mov qword [rsp + 0x38], rax
0x000182e2      0f8e28030000   jle 0x18610
0x000182e8      4a8d04fd0000.  lea rax, [r15*8]
0x000182f0      4989fe         mov r14, rdi
0x000182f3      48c704240000.  mov qword [rsp], 0
0x000182fb      4c897c2408     mov qword [rsp + 8], r15
0x00018300      4889442460     mov qword [rsp + 0x60], rax
0x00018305      488d84249000.  lea rax, [rsp + 0x90]
0x0001830d      4889442468     mov qword [rsp + 0x68], rax
0x00018312      488d84248c00.  lea rax, [rsp + 0x8c]
0x0001831a      4889442478     mov qword [rsp + 0x78], rax
0x0001831f      eb46           jmp 0x18367
0x00018321      0f1f80000000.  nop dword [rax]
0x00018328      a801           test al, 1
0x0001832a      7424           je 0x18350
0x0001832c      83e208         and edx, 8
0x0001832f      751f           jne 0x18350
0x00018331      f6c120         test cl, 0x20                           ; "@"
0x00018334      7404           je 0x1833a
0x00018336      a802           test al, 2
0x00018338      7416           je 0x18350
0x0001833a      81e180000000   and ecx, 0x80
0x00018340      0f849a000000   je 0x183e0
0x00018346      a808           test al, 8
0x00018348      0f8592000000   jne 0x183e0
0x0001834e      6690           nop
0x00018350      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00018355      4883042401     add qword [rsp], 1
0x0001835a      488b0424       mov rax, qword [rsp]
0x0001835e      483b07         cmp rax, qword [rdi]
0x00018361      0f8da9020000   jge 0x18610
0x00018367      488b442440     mov rax, qword [rsp + 0x40]
0x0001836c      488b3c24       mov rdi, qword [rsp]
0x00018370      488b00         mov rax, qword [rax]
0x00018373      4c8b2cf8       mov r13, qword [rax + rdi*8]
0x00018377      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0001837c      488b07         mov rax, qword [rdi]
0x0001837f      4c89eb         mov rbx, r13
0x00018382      48c1e304       shl rbx, 4
0x00018386      4801d8         add rax, rbx
0x00018389      80780804       cmp byte [rax + 8], 4
0x0001838d      75c1           jne 0x18350
0x0001838f      8b6808         mov ebp, dword [rax + 8]
0x00018392      f7c500ff0300   test ebp, 0x3ff00
0x00018398      7446           je 0x183e0
0x0001839a      418b96a00000.  mov edx, dword [r14 + 0xa0]
0x000183a1      488b742408     mov rsi, qword [rsp + 8]
0x000183a6      4c89f7         mov rdi, r14
0x000183a9      e8d2c0ffff     call sym.re_string_context_at
0x000183ae      89ea           mov edx, ebp
0x000183b0      c1ea08         shr edx, 8
0x000183b3      89d1           mov ecx, edx
0x000183b5      6681e1ff03     and cx, 0x3ff
0x000183ba      f6c204         test dl, 4
0x000183bd      0f8565ffffff   jne 0x18328
0x000183c3      83e208         and edx, 8
0x000183c6      0f8465ffffff   je 0x18331
0x000183cc      a801           test al, 1
0x000183ce      0f845dffffff   je 0x18331
0x000183d4      e977ffffff     jmp 0x18350
0x000183d9      0f1f80000000.  nop dword [rax]
0x000183e0      498bbec80000.  mov rdi, qword [r14 + 0xc8]
0x000183e7      498b86980000.  mov rax, qword [r14 + 0x98]
0x000183ee      31c9           xor ecx, ecx
0x000183f0      4d8b5608       mov r10, qword [r14 + 8]
0x000183f4      4c8b4c2408     mov r9, qword [rsp + 8]
0x000183f9      48897c2470     mov qword [rsp + 0x70], rdi
0x000183fe      4889442450     mov qword [rsp + 0x50], rax
0x00018403      4839f9         cmp rcx, rdi
0x00018406      7d53           jge 0x1845b
0x00018408      488d0439       lea rax, [rcx + rdi]
0x0001840c      4d8b9ed80000.  mov r11, qword [r14 + 0xd8]
0x00018413      4889c6         mov rsi, rax
0x00018416      48c1ee3f       shr rsi, 0x3f
0x0001841a      4801c6         add rsi, rax
0x0001841d      48d1fe         sar rsi, 1
0x00018420      488d04b6       lea rax, [rsi + rsi*4]
0x00018424      4d3b4cc308     cmp r9, qword [r11 + rax*8 + 8]
0x00018429      7e2b           jle 0x18456
0x0001842b      e9c8010000     jmp 0x185f8
0x00018430      488d140e       lea rdx, [rsi + rcx]
0x00018434      4889d0         mov rax, rdx
0x00018437      48c1e83f       shr rax, 0x3f
0x0001843b      4801d0         add rax, rdx
0x0001843e      48d1f8         sar rax, 1
0x00018441      488d1480       lea rdx, [rax + rax*4]
0x00018445      4989c0         mov r8, rax
0x00018448      4d3b4cd308     cmp r9, qword [r11 + rdx*8 + 8]
0x0001844d      0f8fad010000   jg 0x18600
0x00018453      4889c6         mov rsi, rax
0x00018456      4839ce         cmp rsi, rcx
0x00018459      7fd5           jg 0x18430
0x0001845b      48394c2470     cmp qword [rsp + 0x70], rcx
0x00018460      7e24           jle 0x18486
0x00018462      498b96d80000.  mov rdx, qword [r14 + 0xd8]
0x00018469      488d0489       lea rax, [rcx + rcx*4]
0x0001846d      488b7c2408     mov rdi, qword [rsp + 8]
0x00018472      488d04c2       lea rax, [rdx + rax*8]
0x00018476      48397808       cmp qword [rax + 8], rdi
0x0001847a      750a           jne 0x18486
0x0001847c      4883f9ff       cmp rcx, 0xffffffffffffffff
0x00018480      0f85d0010000   jne 0x18656
0x00018486      488b442450     mov rax, qword [rsp + 0x50]
0x0001848b      4983bee80000.  cmp qword [r14 + 0xe8], 0
0x00018493      488b10         mov rdx, qword [rax]
0x00018496      488b041a       mov rax, qword [rdx + rbx]
0x0001849a      4889442458     mov qword [rsp + 0x58], rax
0x0001849f      0f8eb6010000   jle 0x1865b
0x000184a5      4c896c2430     mov qword [rsp + 0x30], r13
0x000184aa      48c744242800.  mov qword [rsp + 0x28], 0
0x000184b3      4d89d5         mov r13, r10
0x000184b6      498b86f80000.  mov rax, qword [r14 + 0xf8]
0x000184bd      488b5c2428     mov rbx, qword [rsp + 0x28]
0x000184c2      488b7c2458     mov rdi, qword [rsp + 0x58]
0x000184c7      488b1cd8       mov rbx, qword [rax + rbx*8]
0x000184cb      488b4308       mov rax, qword [rbx + 8]
0x000184cf      48c1e004       shl rax, 4
0x000184d3      483b3c02       cmp rdi, qword [rdx + rax]
0x000184d7      7427           je 0x18500
0x000184d9      488344242801   add qword [rsp + 0x28], 1
0x000184df      488b442428     mov rax, qword [rsp + 0x28]
0x000184e4      493b86e80000.  cmp rax, qword [r14 + 0xe8]
0x000184eb      0f8d70060000   jge 0x18b61
0x000184f1      488b442450     mov rax, qword [rsp + 0x50]
0x000184f6      488b10         mov rdx, qword [rax]
0x000184f9      ebbb           jmp 0x184b6
0x000184fb      0f1f440000     nop dword [rax + rax]
0x00018500      48837b2000     cmp qword [rbx + 0x20], 0
0x00018505      4c8b1b         mov r11, qword [rbx]
0x00018508      0f8e64060000   jle 0x18b72
0x0001850e      488b4c2408     mov rcx, qword [rsp + 8]
0x00018513      4d89e8         mov r8, r13
0x00018516      31ed           xor ebp, ebp
0x00018518      4989dd         mov r13, rbx
0x0001851b      4889cb         mov rbx, rcx
0x0001851e      eb6c           jmp 0x1858c
0x00018520      4b8d3418       lea rsi, [r8 + r11]
0x00018524      498d3c18       lea rdi, [r8 + rbx]
0x00018528      4c894c2420     mov qword [rsp + 0x20], r9
0x0001852d      4c895c2418     mov qword [rsp + 0x18], r11
0x00018532      4c89442410     mov qword [rsp + 0x10], r8
0x00018537      e844a1feff     call sym.imp.memcmp
0x0001853c      85c0           test eax, eax
0x0001853e      4c8b442410     mov r8, qword [rsp + 0x10]
0x00018543      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x00018548      4c8b4c2420     mov r9, qword [rsp + 0x20]
0x0001854d      0f85c5040000   jne 0x18a18
0x00018553      4c8b442408     mov r8, qword [rsp + 8]
0x00018558      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0001855d      4c89ca         mov rdx, r9
0x00018560      4c89ee         mov rsi, r13
0x00018563      4c89f7         mov rdi, r14
0x00018566      e895fbffff     call sym.get_subexp_sub.isra.32
0x0001856b      83f801         cmp eax, 1
0x0001856e      4d8b4608       mov r8, qword [r14 + 8]
0x00018572      0f87a0000000   ja 0x18618
0x00018578      4883c501       add rbp, 1
0x0001857c      493b6d20       cmp rbp, qword [r13 + 0x20]
0x00018580      4d89fb         mov r11, r15
0x00018583      4c89e3         mov rbx, r12
0x00018586      0f8dac020000   jge 0x18838
0x0001858c      498b4528       mov rax, qword [r13 + 0x28]
0x00018590      4c8b0ce8       mov r9, qword [rax + rbp*8]
0x00018594      4d8b7908       mov r15, qword [r9 + 8]
0x00018598      4c89fa         mov rdx, r15
0x0001859b      4c29da         sub rdx, r11
0x0001859e      4885d2         test rdx, rdx
0x000185a1      4c8d241a       lea r12, [rdx + rbx]
0x000185a5      7eac           jle 0x18553
0x000185a7      4d396630       cmp qword [r14 + 0x30], r12
0x000185ab      0f8d6fffffff   jge 0x18520
0x000185b1      4d396658       cmp qword [r14 + 0x58], r12
0x000185b5      4889542418     mov qword [rsp + 0x18], rdx
0x000185ba      4c894c2410     mov qword [rsp + 0x10], r9
0x000185bf      0f8c53040000   jl 0x18a18
0x000185c5      4c89e6         mov rsi, r12
0x000185c8      4c89f7         mov rdi, r14
0x000185cb      4c895c2420     mov qword [rsp + 0x20], r11
0x000185d0      e85b97ffff     call sym.clean_state_log_if_needed
0x000185d5      85c0           test eax, eax
0x000185d7      753f           jne 0x18618
0x000185d9      4d8b4608       mov r8, qword [r14 + 8]
0x000185dd      488b542418     mov rdx, qword [rsp + 0x18]
0x000185e2      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x000185e7      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x000185ec      e92fffffff     jmp 0x18520
0x000185f1      0f1f80000000.  nop dword [rax]
0x000185f8      4989f0         mov r8, rsi
0x000185fb      4889fe         mov rsi, rdi
0x000185fe      6690           nop
0x00018600      498d4801       lea rcx, [r8 + 1]
0x00018604      4889f7         mov rdi, rsi
0x00018607      e9f7fdffff     jmp 0x18403
0x0001860c      0f1f4000       nop dword [rax]
0x00018610      31c0           xor eax, eax
0x00018612      660f1f440000   nop word [rax + rax]
0x00018618      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00018620      6448331c2528.  xor rbx, qword fs:[0x28]
0x00018629      0f854d050000   jne 0x18b7c
0x0001862f      4881c4b80000.  add rsp, 0xb8
0x00018636      5b             pop rbx
0x00018637      5d             pop rbp
0x00018638      415c           pop r12
0x0001863a      415d           pop r13
0x0001863c      415e           pop r14
0x0001863e      415f           pop r15
0x00018640      c3             ret
0x00018641      0f1f80000000.  nop dword [rax]
0x00018648      4883c028       add rax, 0x28
0x0001864c      8078f800       cmp byte [rax - 8], 0
0x00018650      0f8430feffff   je 0x18486
0x00018656      4c3b28         cmp r13, qword [rax]
0x00018659      75ed           jne 0x18648
0x0001865b      488b442470     mov rax, qword [rsp + 0x70]
0x00018660      4839442470     cmp qword [rsp + 0x70], rax
0x00018665      c784248c0000.  mov dword [rsp + 0x8c], 0
0x00018670      0f8ddafcffff   jge 0x18350
0x00018676      4a8d04ed0000.  lea rax, [r13*8]
0x0001867e      4c8b642470     mov r12, qword [rsp + 0x70]
0x00018683      488b6c2438     mov rbp, qword [rsp + 0x38]
0x00018688      4889442450     mov qword [rsp + 0x50], rax
0x0001868d      4b8d446d00     lea rax, [r13 + r13*2]
0x00018692      4f8d04a4       lea r8, [r12 + r12*4]
0x00018696      48c1e003       shl rax, 3
0x0001869a      4889442458     mov qword [rsp + 0x58], rax
0x0001869f      4e8d3cc50000.  lea r15, [r8*8]
0x000186a7      e931010000     jmp 0x187dd
0x000186ac      0f1f4000       nop dword [rax]
0x000186b0      488b4d28       mov rcx, qword [rbp + 0x28]
0x000186b4      488b7c2458     mov rdi, qword [rsp + 0x58]
0x000186b9      488b4c3910     mov rcx, qword [rcx + rdi + 0x10]
0x000186be      488b09         mov rcx, qword [rcx]
0x000186c1      488d0c49       lea rcx, [rcx + rcx*2]
0x000186c5      488d0cca       lea rcx, [rdx + rcx*8]
0x000186c9      48894c2418     mov qword [rsp + 0x18], rcx
0x000186ce      48035c2408     add rbx, qword [rsp + 8]
0x000186d3      418b96a00000.  mov edx, dword [r14 + 0xa0]
0x000186da      4c89f7         mov rdi, r14
0x000186dd      4829c3         sub rbx, rax
0x000186e0      488d73ff       lea rsi, [rbx - 1]
0x000186e4      e897bdffff     call sym.re_string_context_at
0x000186e9      488b742460     mov rsi, qword [rsp + 0x60]
0x000186ee      89c1           mov ecx, eax
0x000186f0      498b86b80000.  mov rax, qword [r14 + 0xb8]
0x000186f7      4c8d14dd0000.  lea r10, [rbx*8]
0x000186ff      48c744241000.  mov qword [rsp + 0x10], 0
0x00018708      4e8d1c10       lea r11, [rax + r10]
0x0001870c      488b0430       mov rax, qword [rax + rsi]
0x00018710      498b13         mov rdx, qword [r11]
0x00018713      4885c0         test rax, rax
0x00018716      7409           je 0x18721
0x00018718      488b4010       mov rax, qword [rax + 0x10]
0x0001871c      4889442410     mov qword [rsp + 0x10], rax
0x00018721      4885d2         test rdx, rdx
0x00018724      0f8416030000   je 0x18a40
0x0001872a      488b7250       mov rsi, qword [rdx + 0x50]
0x0001872e      488b7c2468     mov rdi, qword [rsp + 0x68]
0x00018733      488b542418     mov rdx, qword [rsp + 0x18]
0x00018738      4c89542430     mov qword [rsp + 0x30], r10
0x0001873d      894c2428       mov dword [rsp + 0x28], ecx
0x00018741      e84ab1ffff     call sym.re_node_set_init_union
0x00018746      85c0           test eax, eax
0x00018748      8984248c0000.  mov dword [rsp + 0x8c], eax
0x0001874f      8b4c2428       mov ecx, dword [rsp + 0x28]
0x00018753      4c8b542430     mov r10, qword [rsp + 0x30]
0x00018758      0f858a030000   jne 0x18ae8
0x0001875e      4d0396b80000.  add r10, qword [r14 + 0xb8]
0x00018765      488b542468     mov rdx, qword [rsp + 0x68]
0x0001876a      4889ee         mov rsi, rbp
0x0001876d      488b7c2478     mov rdi, qword [rsp + 0x78]
0x00018772      4c89542428     mov qword [rsp + 0x28], r10
0x00018777      e874b2ffff     call sym.re_acquire_state_context
0x0001877c      4c8b542428     mov r10, qword [rsp + 0x28]
0x00018781      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x00018789      498902         mov qword [r10], rax
0x0001878c      e87fa2feff     call sym..plt.got
0x00018791      498b96b80000.  mov rdx, qword [r14 + 0xb8]
0x00018798      48833cda00     cmp qword [rdx + rbx*8], 0
0x0001879d      0f84ce020000   je 0x18a71
0x000187a3      48837c242000   cmp qword [rsp + 0x20], 0
0x000187a9      751d           jne 0x187c8
0x000187ab      488b442460     mov rax, qword [rsp + 0x60]
0x000187b0      488b5c2410     mov rbx, qword [rsp + 0x10]
0x000187b5      488b0402       mov rax, qword [rdx + rax]
0x000187b9      48395810       cmp qword [rax + 0x10], rbx
0x000187bd      0f8fc5020000   jg 0x18a88
0x000187c3      0f1f440000     nop dword [rax + rax]
0x000187c8      4983c401       add r12, 1
0x000187cc      4983c728       add r15, 0x28
0x000187d0      4d3ba6c80000.  cmp r12, qword [r14 + 0xc8]
0x000187d7      0f8d73fbffff   jge 0x18350
0x000187dd      498b86d80000.  mov rax, qword [r14 + 0xd8]
0x000187e4      4c01f8         add rax, r15
0x000187e7      4c3b28         cmp r13, qword [rax]
0x000187ea      75dc           jne 0x187c8
0x000187ec      488b7c2408     mov rdi, qword [rsp + 8]
0x000187f1      483b7808       cmp rdi, qword [rax + 8]
0x000187f5      75d1           jne 0x187c8
0x000187f7      488b5818       mov rbx, qword [rax + 0x18]
0x000187fb      488b4010       mov rax, qword [rax + 0x10]
0x000187ff      488b5530       mov rdx, qword [rbp + 0x30]
0x00018803      4889d9         mov rcx, rbx
0x00018806      4829c1         sub rcx, rax
0x00018809      48894c2420     mov qword [rsp + 0x20], rcx
0x0001880e      0f849cfeffff   je 0x186b0
0x00018814      488b4d18       mov rcx, qword [rbp + 0x18]
0x00018818      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0001881d      488b0c39       mov rcx, qword [rcx + rdi]
0x00018821      488d0c49       lea rcx, [rcx + rcx*2]
0x00018825      488d0cca       lea rcx, [rdx + rcx*8]
0x00018829      48894c2418     mov qword [rsp + 0x18], rcx
0x0001882e      e99bfeffff     jmp 0x186ce
0x00018833      0f1f440000     nop dword [rax + rax]
0x00018838      4c89eb         mov rbx, r13
0x0001883b      4d89c5         mov r13, r8
0x0001883e      4d8d5f01       lea r11, [r15 + 1]
0x00018842      4c395c2408     cmp qword [rsp + 8], r11
0x00018847      0f8c8cfcffff   jl 0x184d9
0x0001884d      4c89e0         mov rax, r12
0x00018850      4e8d3cdd0000.  lea r15, [r11*8]
0x00018858      4989dc         mov r12, rbx
0x0001885b      4c89db         mov rbx, r11
0x0001885e      4d89eb         mov r11, r13
0x00018861      4989c5         mov r13, rax
0x00018864      0f1f4000       nop dword [rax]
0x00018868      4889d8         mov rax, rbx
0x0001886b      492b0424       sub rax, qword [r12]
0x0001886f      4885c0         test rax, rax
0x00018872      7e21           jle 0x18895
0x00018874      4d396e30       cmp qword [r14 + 0x30], r13
0x00018878      0f8e83020000   jle 0x18b01
0x0001887e      410fb64c1bff   movzx ecx, byte [r11 + rbx - 1]
0x00018884      498d4501       lea rax, [r13 + 1]
0x00018888      43380c2b       cmp byte [r11 + r13], cl
0x0001888c      0f8530010000   jne 0x189c2
0x00018892      4989c5         mov r13, rax
0x00018895      498b86b80000.  mov rax, qword [r14 + 0xb8]
0x0001889c      4a8b0438       mov rax, qword [rax + r15]
0x000188a0      4885c0         test rax, rax
0x000188a3      0f8406010000   je 0x189af
0x000188a9      488b4810       mov rcx, qword [rax + 0x10]
0x000188ad      4885c9         test rcx, rcx
0x000188b0      0f8ef9000000   jle 0x189af
0x000188b6      488b7818       mov rdi, qword [rax + 0x18]
0x000188ba      488b442450     mov rax, qword [rsp + 0x50]
0x000188bf      31d2           xor edx, edx
0x000188c1      4c8b442458     mov r8, qword [rsp + 0x58]
0x000188c6      488b30         mov rsi, qword [rax]
0x000188c9      eb12           jmp 0x188dd
0x000188cb      0f1f440000     nop dword [rax + rax]
0x000188d0      4883c201       add rdx, 1
0x000188d4      4839d1         cmp rcx, rdx
0x000188d7      0f84d2000000   je 0x189af
0x000188dd      488b2cd7       mov rbp, qword [rdi + rdx*8]
0x000188e1      4889e8         mov rax, rbp
0x000188e4      48c1e004       shl rax, 4
0x000188e8      4801f0         add rax, rsi
0x000188eb      80780809       cmp byte [rax + 8], 9
0x000188ef      75df           jne 0x188d0
0x000188f1      4c3b00         cmp r8, qword [rax]
0x000188f4      75da           jne 0x188d0
0x000188f6      4883fdff       cmp rbp, 0xffffffffffffffff
0x000188fa      0f84af000000   je 0x189af
0x00018900      498b742410     mov rsi, qword [r12 + 0x10]
0x00018905      498b0c24       mov rcx, qword [r12]
0x00018909      4885f6         test rsi, rsi
0x0001890c      0f84be000000   je 0x189d0
0x00018912      4c895c2410     mov qword [rsp + 0x10], r11
0x00018917      498b542408     mov rdx, qword [r12 + 8]
0x0001891c      4883ec08       sub rsp, 8
0x00018920      6a09           push 9
0x00018922      4989d9         mov r9, rbx
0x00018925      4989e8         mov r8, rbp
0x00018928      4c89f7         mov rdi, r14
0x0001892b      e880e7ffff     call sym.check_arrival
0x00018930      5a             pop rdx
0x00018931      83f801         cmp eax, 1
0x00018934      59             pop rcx
0x00018935      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x0001893a      7473           je 0x189af
0x0001893c      85c0           test eax, eax
0x0001893e      0f85d4fcffff   jne 0x18618
0x00018944      498b442420     mov rax, qword [r12 + 0x20]
0x00018949      493b442418     cmp rax, qword [r12 + 0x18]
0x0001894e      0f84d4010000   je 0x18b28
0x00018954      be28000000     mov esi, 0x28                           ; '('
0x00018959      bf01000000     mov edi, 1
0x0001895e      e84d9dfeff     call sym.imp.calloc
0x00018963      4885c0         test rax, rax
0x00018966      0f849d000000   je 0x18a09
0x0001896c      498b542420     mov rdx, qword [r12 + 0x20]
0x00018971      498b4c2428     mov rcx, qword [r12 + 0x28]
0x00018976      4c89e6         mov rsi, r12
0x00018979      4c8b442408     mov r8, qword [rsp + 8]
0x0001897e      4c89f7         mov rdi, r14
0x00018981      488904d1       mov qword [rcx + rdx*8], rax
0x00018985      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0001898a      4883c201       add rdx, 1
0x0001898e      488928         mov qword [rax], rbp
0x00018991      48895808       mov qword [rax + 8], rbx
0x00018995      4989542420     mov qword [r12 + 0x20], rdx
0x0001899a      4889c2         mov rdx, rax
0x0001899d      e85ef7ffff     call sym.get_subexp_sub.isra.32
0x000189a2      83f801         cmp eax, 1
0x000189a5      4d8b5e08       mov r11, qword [r14 + 8]
0x000189a9      0f8769fcffff   ja 0x18618
0x000189af      4883c301       add rbx, 1
0x000189b3      4983c708       add r15, 8
0x000189b7      48395c2408     cmp qword [rsp + 8], rbx
0x000189bc      0f8da6feffff   jge 0x18868
0x000189c2      4d89dd         mov r13, r11
0x000189c5      e90ffbffff     jmp 0x184d9
0x000189ca      660f1f440000   nop word [rax + rax]
0x000189d0      4889de         mov rsi, rbx
0x000189d3      bf18000000     mov edi, 0x18
0x000189d8      4c895c2418     mov qword [rsp + 0x18], r11
0x000189dd      4829ce         sub rsi, rcx
0x000189e0      48894c2410     mov qword [rsp + 0x10], rcx
0x000189e5      4883c601       add rsi, 1
0x000189e9      e8c29cfeff     call sym.imp.calloc
0x000189ee      4885c0         test rax, rax
0x000189f1      4889c6         mov rsi, rax
0x000189f4      4989442410     mov qword [r12 + 0x10], rax
0x000189f9      488b4c2410     mov rcx, qword [rsp + 0x10]
0x000189fe      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x00018a03      0f8509ffffff   jne 0x18912
0x00018a09      b80c000000     mov eax, 0xc
0x00018a0e      e905fcffff     jmp 0x18618
0x00018a13      0f1f440000     nop dword [rax + rax]
0x00018a18      4889d9         mov rcx, rbx
0x00018a1b      4c89eb         mov rbx, r13
0x00018a1e      4d89c5         mov r13, r8
0x00018a21      48396b20       cmp qword [rbx + 0x20], rbp
0x00018a25      0f8faefaffff   jg 0x184d9
0x00018a2b      4885ed         test rbp, rbp
0x00018a2e      4989cc         mov r12, rcx
0x00018a31      0f840bfeffff   je 0x18842
0x00018a37      4d89df         mov r15, r11
0x00018a3a      e9fffdffff     jmp 0x1883e
0x00018a3f      90             nop
0x00018a40      488b542418     mov rdx, qword [rsp + 0x18]
0x00018a45      488b7c2478     mov rdi, qword [rsp + 0x78]
0x00018a4a      4889ee         mov rsi, rbp
0x00018a4d      4c895c2428     mov qword [rsp + 0x28], r11
0x00018a52      e899afffff     call sym.re_acquire_state_context
0x00018a57      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00018a5c      498b96b80000.  mov rdx, qword [r14 + 0xb8]
0x00018a63      498903         mov qword [r11], rax
0x00018a66      48833cda00     cmp qword [rdx + rbx*8], 0
0x00018a6b      0f8532fdffff   jne 0x187a3
0x00018a71      8b84248c0000.  mov eax, dword [rsp + 0x8c]
0x00018a78      85c0           test eax, eax
0x00018a7a      0f8423fdffff   je 0x187a3
0x00018a80      e993fbffff     jmp 0x18618
0x00018a85      0f1f00         nop dword [rax]
0x00018a88      488b442418     mov rax, qword [rsp + 0x18]
0x00018a8d      488b4c2408     mov rcx, qword [rsp + 8]
0x00018a92      4c89f7         mov rdi, r14
0x00018a95      4c8d4010       lea r8, [rax + 0x10]
0x00018a99      488d5808       lea rbx, [rax + 8]
0x00018a9d      4c89c2         mov rdx, r8
0x00018aa0      4889de         mov rsi, rbx
0x00018aa3      4c89442410     mov qword [rsp + 0x10], r8
0x00018aa8      e883b8ffff     call sym.check_subexp_matching_top.isra.18
0x00018aad      85c0           test eax, eax
0x00018aaf      8984248c0000.  mov dword [rsp + 0x8c], eax
0x00018ab6      0f855cfbffff   jne 0x18618
0x00018abc      4c8b442410     mov r8, qword [rsp + 0x10]
0x00018ac1      4889de         mov rsi, rbx
0x00018ac4      4c89f7         mov rdi, r14
0x00018ac7      4c89c2         mov rdx, r8
0x00018aca      e8d1f7ffff     call sym.transit_state_bkref.isra.34
0x00018acf      85c0           test eax, eax
0x00018ad1      8984248c0000.  mov dword [rsp + 0x8c], eax
0x00018ad8      0f84eafcffff   je 0x187c8
0x00018ade      e935fbffff     jmp 0x18618
0x00018ae3      0f1f440000     nop dword [rax + rax]
0x00018ae8      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x00018af0      e81b9ffeff     call sym..plt.got
0x00018af5      8b84248c0000.  mov eax, dword [rsp + 0x8c]
0x00018afc      e917fbffff     jmp 0x18618
0x00018b01      4d396e58       cmp qword [r14 + 0x58], r13
0x00018b05      0f8eb7feffff   jle 0x189c2
0x00018b0b      418d7501       lea esi, [r13 + 1]
0x00018b0f      4c89f7         mov rdi, r14
0x00018b12      e8c990ffff     call sym.extend_buffers
0x00018b17      85c0           test eax, eax
0x00018b19      0f85f9faffff   jne 0x18618
0x00018b1f      4d8b5e08       mov r11, qword [r14 + 8]
0x00018b23      e956fdffff     jmp 0x1887e
0x00018b28      488d540001     lea rdx, [rax + rax + 1]
0x00018b2d      498b7c2428     mov rdi, qword [r12 + 0x28]
0x00018b32      488d34d50000.  lea rsi, [rdx*8]
0x00018b3a      4889542410     mov qword [rsp + 0x10], rdx
0x00018b3f      e8ec9cfeff     call sym.imp.realloc
0x00018b44      4885c0         test rax, rax
0x00018b47      0f84bcfeffff   je 0x18a09
0x00018b4d      488b542410     mov rdx, qword [rsp + 0x10]
0x00018b52      4989442428     mov qword [r12 + 0x28], rax
0x00018b57      4989542418     mov qword [r12 + 0x18], rdx
0x00018b5c      e9f3fdffff     jmp 0x18954
0x00018b61      4c8b6c2430     mov r13, qword [rsp + 0x30]
0x00018b66      498b86c80000.  mov rax, qword [r14 + 0xc8]
0x00018b6d      e9eefaffff     jmp 0x18660
0x00018b72      4c8b642408     mov r12, qword [rsp + 8]
0x00018b77      e9c6fcffff     jmp 0x18842
0x00018b7c      e8df99feff     call sym.imp.__stack_chk_fail
0x00018b81      0f1f440000     nop dword [rax + rax]
0x00018b86      662e0f1f8400.  nop word cs:[rax + rax]
;-- merge_state_with_log:
0x00018b90      4157           push r15
0x00018b92      4156           push r14
0x00018b94      4155           push r13
0x00018b96      4154           push r12
0x00018b98      4989fd         mov r13, rdi
0x00018b9b      55             push rbp
0x00018b9c      53             push rbx
0x00018b9d      4889f3         mov rbx, rsi
0x00018ba0      4883ec38       sub rsp, 0x38
0x00018ba4      4c8b6648       mov r12, qword [rsi + 0x48]
0x00018ba8      4c8bb6b80000.  mov r14, qword [rsi + 0xb8]
0x00018baf      64488b042528.  mov rax, qword fs:[0x28]
0x00018bb8      4889442428     mov qword [rsp + 0x28], rax
0x00018bbd      31c0           xor eax, eax
0x00018bbf      4c8bbe980000.  mov r15, qword [rsi + 0x98]
0x00018bc6      4a8d2ce50000.  lea rbp, [r12*8]
0x00018bce      4901ee         add r14, rbp
0x00018bd1      4c39a6c00000.  cmp qword [rsi + 0xc0], r12
0x00018bd8      7d46           jge 0x18c20
0x00018bda      498916         mov qword [r14], rdx
0x00018bdd      4889d5         mov rbp, rdx
0x00018be0      4c89a6c00000.  mov qword [rsi + 0xc0], r12
0x00018be7      4983bf980000.  cmp qword [r15 + 0x98], 0
0x00018bef      0f8523010000   jne 0x18d18
0x00018bf5      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00018bfa      6448330c2528.  xor rcx, qword fs:[0x28]
0x00018c03      4889e8         mov rax, rbp
0x00018c06      0f856b010000   jne 0x18d77
0x00018c0c      4883c438       add rsp, 0x38
0x00018c10      5b             pop rbx
0x00018c11      5d             pop rbp
0x00018c12      415c           pop r12
0x00018c14      415d           pop r13
0x00018c16      415e           pop r14
0x00018c18      415f           pop r15
0x00018c1a      c3             ret
0x00018c1b      0f1f440000     nop dword [rax + rax]
0x00018c20      498b06         mov rax, qword [r14]
0x00018c23      4885c0         test rax, rax
0x00018c26      0f84dc000000   je 0x18d08
0x00018c2c      4885d2         test rdx, rdx
0x00018c2f      488b4050       mov rax, qword [rax + 0x50]
0x00018c33      0f8487000000   je 0x18cc0
0x00018c39      4c8b7250       mov r14, qword [rdx + 0x50]
0x00018c3d      488d7c2410     lea rdi, [rsp + 0x10]
0x00018c42      4889c2         mov rdx, rax
0x00018c45      48893c24       mov qword [rsp], rdi
0x00018c49      4c89f6         mov rsi, r14
0x00018c4c      e83facffff     call sym.re_node_set_init_union
0x00018c51      85c0           test eax, eax
0x00018c53      41894500       mov dword [r13], eax
0x00018c57      0f8513010000   jne 0x18d70
0x00018c5d      488b4348       mov rax, qword [rbx + 0x48]
0x00018c61      8b93a0000000   mov edx, dword [rbx + 0xa0]
0x00018c67      4889df         mov rdi, rbx
0x00018c6a      488d70ff       lea rsi, [rax - 1]
0x00018c6e      e80db8ffff     call sym.re_string_context_at
0x00018c73      4c8b83b80000.  mov r8, qword [rbx + 0xb8]
0x00018c7a      488b1424       mov rdx, qword [rsp]
0x00018c7e      89c1           mov ecx, eax
0x00018c80      4c89fe         mov rsi, r15
0x00018c83      4c89ef         mov rdi, r13
0x00018c86      4901e8         add r8, rbp
0x00018c89      4c89442408     mov qword [rsp + 8], r8
0x00018c8e      e85dadffff     call sym.re_acquire_state_context
0x00018c93      4c8b442408     mov r8, qword [rsp + 8]
0x00018c98      4d85f6         test r14, r14
0x00018c9b      4889c5         mov rbp, rax
0x00018c9e      498900         mov qword [r8], rax
0x00018ca1      0f8440ffffff   je 0x18be7
0x00018ca7      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00018cac      e85f9dfeff     call sym..plt.got
0x00018cb1      e931ffffff     jmp 0x18be7
0x00018cb6      662e0f1f8400.  nop word cs:[rax + rax]
0x00018cc0      f30f6f00       movdqu xmm0, xmmword [rax]
0x00018cc4      4889df         mov rdi, rbx
0x00018cc7      8b96a0000000   mov edx, dword [rsi + 0xa0]
0x00018ccd      498d7424ff     lea rsi, [r12 - 1]
0x00018cd2      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00018cd7      488b4010       mov rax, qword [rax + 0x10]
0x00018cdb      4889442420     mov qword [rsp + 0x20], rax
0x00018ce0      e89bb7ffff     call sym.re_string_context_at
0x00018ce5      488d542410     lea rdx, [rsp + 0x10]
0x00018cea      89c1           mov ecx, eax
0x00018cec      4c89fe         mov rsi, r15
0x00018cef      4c89ef         mov rdi, r13
0x00018cf2      e8f9acffff     call sym.re_acquire_state_context
0x00018cf7      4889c5         mov rbp, rax
0x00018cfa      498906         mov qword [r14], rax
0x00018cfd      e9e5feffff     jmp 0x18be7
0x00018d02      660f1f440000   nop word [rax + rax]
0x00018d08      498916         mov qword [r14], rdx
0x00018d0b      4889d5         mov rbp, rdx
0x00018d0e      e9d4feffff     jmp 0x18be7
0x00018d13      0f1f440000     nop dword [rax + rax]
0x00018d18      4885ed         test rbp, rbp
0x00018d1b      7453           je 0x18d70
0x00018d1d      4c8d7510       lea r14, [rbp + 0x10]
0x00018d21      4c8d7d18       lea r15, [rbp + 0x18]
0x00018d25      4c89e1         mov rcx, r12
0x00018d28      4889df         mov rdi, rbx
0x00018d2b      4c89fa         mov rdx, r15
0x00018d2e      4c89f6         mov rsi, r14
0x00018d31      e8fab5ffff     call sym.check_subexp_matching_top.isra.18
0x00018d36      85c0           test eax, eax
0x00018d38      41894500       mov dword [r13], eax
0x00018d3c      7532           jne 0x18d70
0x00018d3e      f6456840       test byte [rbp + 0x68], 0x40
0x00018d42      0f84adfeffff   je 0x18bf5
0x00018d48      4c89fa         mov rdx, r15
0x00018d4b      4c89f6         mov rsi, r14
0x00018d4e      4889df         mov rdi, rbx
0x00018d51      e84af5ffff     call sym.transit_state_bkref.isra.34
0x00018d56      85c0           test eax, eax
0x00018d58      41894500       mov dword [r13], eax
0x00018d5c      7512           jne 0x18d70
0x00018d5e      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x00018d65      4a8b2ce0       mov rbp, qword [rax + r12*8]
0x00018d69      e987feffff     jmp 0x18bf5
0x00018d6e      6690           nop
0x00018d70      31ed           xor ebp, ebp
0x00018d72      e97efeffff     jmp 0x18bf5
0x00018d77      e8e497feff     call sym.imp.__stack_chk_fail
0x00018d7c      0f1f4000       nop dword [rax]
;-- sift_states_backward:
0x00018d80      4157           push r15
0x00018d82      4156           push r14
0x00018d84      4989fe         mov r14, rdi
0x00018d87      4155           push r13
0x00018d89      4154           push r12
0x00018d8b      4989f5         mov r13, rsi
0x00018d8e      55             push rbp
0x00018d8f      53             push rbx
0x00018d90      4883ec68       sub rsp, 0x68
0x00018d94      4c8b7e18       mov r15, qword [rsi + 0x18]
0x00018d98      488b5e10       mov rbx, qword [rsi + 0x10]
0x00018d9c      48893c24       mov qword [rsp], rdi
0x00018da0      bf08000000     mov edi, 8
0x00018da5      48c744244001.  mov qword [rsp + 0x40], 1
0x00018dae      64488b042528.  mov rax, qword fs:[0x28]
0x00018db7      4889442458     mov qword [rsp + 0x58], rax
0x00018dbc      31c0           xor eax, eax
0x00018dbe      48c744244801.  mov qword [rsp + 0x48], 1
0x00018dc7      e8b499feff     call sym.imp.malloc
0x00018dcc      4885c0         test rax, rax
0x00018dcf      4889442450     mov qword [rsp + 0x50], rax
0x00018dd4      0f84da020000   je 0x190b4
0x00018dda      488d4c2440     lea rcx, [rsp + 0x40]
0x00018ddf      488918         mov qword [rax], rbx
0x00018de2      4c89fa         mov rdx, r15
0x00018de5      4c89ee         mov rsi, r13
0x00018de8      4c89f7         mov rdi, r14
0x00018deb      48894c2410     mov qword [rsp + 0x10], rcx
0x00018df0      e8fb190000     call sym.update_cur_sifted_state
0x00018df5      85c0           test eax, eax
0x00018df7      0f8588020000   jne 0x19085
0x00018dfd      4a8d04fd0000.  lea rax, [r15*8]
0x00018e05      4d85ff         test r15, r15
0x00018e08      c744242c0000.  mov dword [rsp + 0x2c], 0
0x00018e10      4889442408     mov qword [rsp + 8], rax
0x00018e15      498d4530       lea rax, [r13 + 0x30]
0x00018e19      4889442438     mov qword [rsp + 0x38], rax
0x00018e1e      0f8e03020000   jle 0x19027
0x00018e24      498b7d00       mov rdi, qword [r13]
0x00018e28      488b442408     mov rax, qword [rsp + 8]
0x00018e2d      48833c0700     cmp qword [rdi + rax], 0
0x00018e32      0f8410020000   je 0x19048
0x00018e38      488b0424       mov rax, qword [rsp]
0x00018e3c      c744242c0000.  mov dword [rsp + 0x2c], 0
0x00018e44      8b4c242c       mov ecx, dword [rsp + 0x2c]
0x00018e48      3988e0000000   cmp dword [rax + 0xe0], ecx
0x00018e4e      0f8c0d020000   jl 0x19061
0x00018e54      488b1c24       mov rbx, qword [rsp]
0x00018e58      488b7c2408     mov rdi, qword [rsp + 8]
0x00018e5d      4983ef01       sub r15, 1
0x00018e61      48c744244800.  mov qword [rsp + 0x48], 0
0x00018e6a      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x00018e71      4c8b6438f8     mov r12, qword [rax + rdi - 8]
0x00018e76      4d85e4         test r12, r12
0x00018e79      0f8481010000   je 0x19000
0x00018e7f      49837c242800   cmp qword [r12 + 0x28], 0
0x00018e85      4c8bb3980000.  mov r14, qword [rbx + 0x98]
0x00018e8c      0f8e6e010000   jle 0x19000
0x00018e92      31db           xor ebx, ebx
0x00018e94      e9a2000000     jmp 0x18f3b
0x00018e99      0f1f80000000.  nop dword [rax]
0x00018ea0      488b3c24       mov rdi, qword [rsp]
0x00018ea4      4c89fa         mov rdx, r15
0x00018ea7      e8c4b6ffff     call sym.check_node_accept
0x00018eac      84c0           test al, al
0x00018eae      747c           je 0x18f2c
0x00018eb0      498b4500       mov rax, qword [r13]
0x00018eb4      488b4c2408     mov rcx, qword [rsp + 8]
0x00018eb9      488b0408       mov rax, qword [rax + rcx]
0x00018ebd      4885c0         test rax, rax
0x00018ec0      746a           je 0x18f2c
0x00018ec2      498b5618       mov rdx, qword [r14 + 0x18]
0x00018ec6      488b7810       mov rdi, qword [rax + 0x10]
0x00018eca      488d7018       lea rsi, [rax + 0x18]
0x00018ece      488b14ea       mov rdx, qword [rdx + rbp*8]
0x00018ed2      e8c997ffff     call sym.re_node_set_contains.isra.3
0x00018ed7      4885c0         test rax, rax
0x00018eda      7450           je 0x18f2c
0x00018edc      41ba01000000   mov r10d, 1
0x00018ee2      49837d2800     cmp qword [r13 + 0x28], 0
0x00018ee7      742e           je 0x18f17
0x00018ee9      498b4618       mov rax, qword [r14 + 0x18]
0x00018eed      4883ec08       sub rsp, 8
0x00018ef1      498d7528       lea rsi, [r13 + 0x28]
0x00018ef5      4f8d043a       lea r8, [r10 + r15]
0x00018ef9      4989e9         mov r9, rbp
0x00018efc      488b0ce8       mov rcx, qword [rax + rbp*8]
0x00018f00      4157           push r15
0x00018f02      488b542448     mov rdx, qword [rsp + 0x48]
0x00018f07      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00018f0c      e83f9affff     call sym.check_dst_limits.isra.13
0x00018f11      84c0           test al, al
0x00018f13      5a             pop rdx
0x00018f14      59             pop rcx
0x00018f15      7515           jne 0x18f2c
0x00018f17      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00018f1c      4889ee         mov rsi, rbp
0x00018f1f      e83c82ffff     call sym.re_node_set_insert
0x00018f24      84c0           test al, al
0x00018f26      0f8454010000   je 0x19080
0x00018f2c      4883c301       add rbx, 1
0x00018f30      493b5c2428     cmp rbx, qword [r12 + 0x28]
0x00018f35      0f8dc5000000   jge 0x19000
0x00018f3b      498b442430     mov rax, qword [r12 + 0x30]
0x00018f40      498b36         mov rsi, qword [r14]
0x00018f43      488b2cd8       mov rbp, qword [rax + rbx*8]
0x00018f47      4989e9         mov r9, rbp
0x00018f4a      49c1e104       shl r9, 4
0x00018f4e      4c01ce         add rsi, r9
0x00018f51      f6460a10       test byte [rsi + 0xa], 0x10
0x00018f55      0f8445ffffff   je 0x18ea0
0x00018f5b      488b0c24       mov rcx, qword [rsp]
0x00018f5f      498b4518       mov rax, qword [r13 + 0x18]
0x00018f63      4d89f8         mov r8, r15
0x00018f66      4889ea         mov rdx, rbp
0x00018f69      4c894c2418     mov qword [rsp + 0x18], r9
0x00018f6e      4c8b99980000.  mov r11, qword [rcx + 0x98]
0x00018f75      4889442420     mov qword [rsp + 0x20], rax
0x00018f7a      498b3b         mov rdi, qword [r11]
0x00018f7d      498db3d80000.  lea rsi, [r11 + 0xd8]
0x00018f84      4c895c2430     mov qword [rsp + 0x30], r11
0x00018f89      e8c2deffff     call sym.check_node_accept_bytes.isra.31
0x00018f8e      4c63d0         movsxd r10, eax
0x00018f91      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00018f96      4183fa00       cmp r10d, 0
0x00018f9a      0f8e90000000   jle 0x19030
0x00018fa0      4963c2         movsxd rax, r10d
0x00018fa3      4c01f8         add rax, r15
0x00018fa6      4839442420     cmp qword [rsp + 0x20], rax
0x00018fab      0f8c31ffffff   jl 0x18ee2
0x00018fb1      498b5500       mov rdx, qword [r13]
0x00018fb5      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00018fba      488b04c2       mov rax, qword [rdx + rax*8]
0x00018fbe      4885c0         test rax, rax
0x00018fc1      7473           je 0x19036
0x00018fc3      498b5318       mov rdx, qword [r11 + 0x18]
0x00018fc7      488b7810       mov rdi, qword [rax + 0x10]
0x00018fcb      488d7018       lea rsi, [rax + 0x18]
0x00018fcf      4c894c2418     mov qword [rsp + 0x18], r9
0x00018fd4      488b14ea       mov rdx, qword [rdx + rbp*8]
0x00018fd8      e8c396ffff     call sym.re_node_set_contains.isra.3
0x00018fdd      4885c0         test rax, rax
0x00018fe0      0f85fcfeffff   jne 0x18ee2
0x00018fe6      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00018feb      498b36         mov rsi, qword [r14]
0x00018fee      4c01ce         add rsi, r9
0x00018ff1      e9aafeffff     jmp 0x18ea0
0x00018ff6      662e0f1f8400.  nop word cs:[rax + rax]
0x00019000      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00019005      488b3c24       mov rdi, qword [rsp]
0x00019009      4c89fa         mov rdx, r15
0x0001900c      4c89ee         mov rsi, r13
0x0001900f      e8dc170000     call sym.update_cur_sifted_state
0x00019014      85c0           test eax, eax
0x00019016      756d           jne 0x19085
0x00019018      48836c240808   sub qword [rsp + 8], 8
0x0001901e      4d85ff         test r15, r15
0x00019021      0f85fdfdffff   jne 0x18e24
0x00019027      31c0           xor eax, eax
0x00019029      eb5a           jmp 0x19085
0x0001902b      0f1f440000     nop dword [rax + rax]
0x00019030      0f85acfeffff   jne 0x18ee2
0x00019036      498b36         mov rsi, qword [r14]
0x00019039      4c01ce         add rsi, r9
0x0001903c      e95ffeffff     jmp 0x18ea0
0x00019041      0f1f80000000.  nop dword [rax]
0x00019048      488b0424       mov rax, qword [rsp]
0x0001904c      8344242c01     add dword [rsp + 0x2c], 1
0x00019051      8b4c242c       mov ecx, dword [rsp + 0x2c]
0x00019055      3988e0000000   cmp dword [rax + 0xe0], ecx
0x0001905b      0f8df3fdffff   jge 0x18e54
0x00019061      488b542408     mov rdx, qword [rsp + 8]
0x00019066      31f6           xor esi, esi
0x00019068      e8b395feff     call sym.imp.memset
0x0001906d      488b7c2450     mov rdi, qword [rsp + 0x50]
0x00019072      e89999feff     call sym..plt.got
0x00019077      31c0           xor eax, eax
0x00019079      eb1a           jmp 0x19095
0x0001907b      0f1f440000     nop dword [rax + rax]
0x00019080      b80c000000     mov eax, 0xc
0x00019085      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0001908a      890424         mov dword [rsp], eax
0x0001908d      e87e99feff     call sym..plt.got
0x00019092      8b0424         mov eax, dword [rsp]
0x00019095      488b542458     mov rdx, qword [rsp + 0x58]
0x0001909a      644833142528.  xor rdx, qword fs:[0x28]
0x000190a3      7516           jne 0x190bb
0x000190a5      4883c468       add rsp, 0x68
0x000190a9      5b             pop rbx
0x000190aa      5d             pop rbp
0x000190ab      415c           pop r12
0x000190ad      415d           pop r13
0x000190af      415e           pop r14
0x000190b1      415f           pop r15
0x000190b3      c3             ret
0x000190b4      b80c000000     mov eax, 0xc
0x000190b9      ebda           jmp 0x19095
0x000190bb      e8a094feff     call sym.imp.__stack_chk_fail
;-- re_search_internal:
0x000190c0      4157           push r15
0x000190c2      4156           push r14
0x000190c4      4155           push r13
0x000190c6      4154           push r12
0x000190c8      4d89cd         mov r13, r9
0x000190cb      55             push rbp
0x000190cc      53             push rbx
0x000190cd      4889cd         mov rbp, rcx
0x000190d0      b920000000     mov ecx, 0x20                           ; "@"
0x000190d5      4d89c4         mov r12, r8
0x000190d8      4881ec380200.  sub rsp, sym..interp
0x000190df      488b1f         mov rbx, qword [rdi]
0x000190e2      488b84247802.  mov rax, qword [rsp + 0x278]
0x000190ea      48897c2448     mov qword [rsp + 0x48], rdi
0x000190ef      4889742478     mov qword [rsp + 0x78], rsi
0x000190f4      4889fe         mov rsi, rdi
0x000190f7      488dbc242001.  lea rdi, [rsp + 0x120]
0x000190ff      488994248800.  mov qword [rsp + 0x88], rdx
0x00019107      48895c2438     mov qword [rsp + 0x38], rbx
0x0001910c      48898424b800.  mov qword [rsp + 0xb8], rax
0x00019114      48893c24       mov qword [rsp], rdi
0x00019118      64488b042528.  mov rax, qword fs:[0x28]
0x00019121      488984242802.  mov qword [rsp + 0x228], rax
0x00019129      31c0           xor eax, eax
0x0001912b      f348ab         rep stosq qword [rdi], rax
0x0001912e      488b7e20       mov rdi, qword [rsi + 0x20]
0x00019132      48899c24b801.  mov qword [rsp + 0x1b8], rbx
0x0001913a      4885ff         test rdi, rdi
0x0001913d      48897c2468     mov qword [rsp + 0x68], rdi
0x00019142      7422           je 0x19166
0x00019144      0fb65638       movzx edx, byte [rsi + 0x38]
0x00019148      f6c208         test dl, 8
0x0001914b      0f848f040000   je 0x195e0
0x00019151      4c39c5         cmp rbp, r8
0x00019154      0f8486040000   je 0x195e0
0x0001915a      83e201         and edx, 1
0x0001915d      480f44c7       cmove rax, rdi
0x00019161      4889442468     mov qword [rsp + 0x68], rax
0x00019166      488b442448     mov rax, qword [rsp + 0x48]
0x0001916b      48c784249800.  mov qword [rsp + 0x98], 0
0x00019177      488b4030       mov rax, qword [rax + 0x30]
0x0001917b      483b84247002.  cmp rax, qword [rsp + 0x270]
0x00019183      731f           jae 0x191a4
0x00019185      488b8c247002.  mov rcx, qword [rsp + 0x270]
0x0001918d      488d51ff       lea rdx, [rcx - 1]
0x00019191      4829c2         sub rdx, rax
0x00019194      482994247002.  sub qword [rsp + 0x270], rdx
0x0001919c      488994249800.  mov qword [rsp + 0x98], rdx
0x000191a4      488b742448     mov rsi, qword [rsp + 0x48]
0x000191a9      48837e1000     cmp qword [rsi + 0x10], 0
0x000191ae      0f848c0e0000   je 0x1a040
0x000191b4      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000191b9      488b4748       mov rax, qword [rdi + 0x48]
0x000191bd      4885c0         test rax, rax
0x000191c0      0f847a0e0000   je 0x1a040
0x000191c6      488b5750       mov rdx, qword [rdi + 0x50]
0x000191ca      4885d2         test rdx, rdx
0x000191cd      0f846d0e0000   je 0x1a040
0x000191d3      488b4f58       mov rcx, qword [rdi + 0x58]
0x000191d7      4885c9         test rcx, rcx
0x000191da      0f84600e0000   je 0x1a040
0x000191e0      48837f6000     cmp qword [rdi + 0x60], 0
0x000191e5      0f84550e0000   je 0x1a040
0x000191eb      4883781000     cmp qword [rax + 0x10], 0
0x000191f0      7536           jne 0x19228
0x000191f2      48837a1000     cmp qword [rdx + 0x10], 0
0x000191f7      752f           jne 0x19228
0x000191f9      4883791000     cmp qword [rcx + 0x10], 0
0x000191fe      7406           je 0x19206
0x00019200      807e3800       cmp byte [rsi + 0x38], 0
0x00019204      7822           js 0x19228
0x00019206      4885ed         test rbp, rbp
0x00019209      7411           je 0x1921c
0x0001920b      4d85e4         test r12, r12
0x0001920e      c744245c0100.  mov dword [rsp + 0x5c], 1
0x00019216      0f851d0a0000   jne 0x19c39
0x0001921c      4531e4         xor r12d, r12d
0x0001921f      31ed           xor ebp, ebp
0x00019221      0f1f80000000.  nop dword [rax]
0x00019228      4883bc247002.  cmp qword [rsp + 0x270], 0
0x00019231      c74424580100.  mov dword [rsp + 0x58], 1
0x00019239      0f8481030000   je 0x195c0
0x0001923f      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00019244      488b442448     mov rax, qword [rsp + 0x48]
0x00019249      488bbc248800.  mov rdi, qword [rsp + 0x88]
0x00019251      498b7310       mov rsi, qword [r11 + 0x10]
0x00019255      488b5828       mov rbx, qword [rax + 0x28]
0x00019259      418b93b40000.  mov edx, dword [r11 + 0xb4]
0x00019260      488b4018       mov rax, qword [rax + 0x18]
0x00019264      4889bc247801.  mov qword [rsp + 0x178], rdi
0x0001926c      4889bc247001.  mov qword [rsp + 0x170], rdi
0x00019274      4889742408     mov qword [rsp + 8], rsi
0x00019279      488d7601       lea rsi, [rsi + 1]
0x0001927d      48899c24b000.  mov qword [rsp + 0xb0], rbx
0x00019285      4863ca         movsxd rcx, edx
0x00019288      48c1e816       shr rax, 0x16
0x0001928c      48899c249801.  mov qword [rsp + 0x198], rbx
0x00019294      83e001         and eax, 1
0x00019297      4839ce         cmp rsi, rcx
0x0001929a      899424b00100.  mov dword [rsp + 0x1b0], edx
0x000192a1      480f4cf1       cmovl rsi, rcx
0x000192a5      488d4f01       lea rcx, [rdi + 1]
0x000192a9      888424a80100.  mov byte [rsp + 0x1a8], al
0x000192b0      4889bc248801.  mov qword [rsp + 0x188], rdi
0x000192b8      4889bc248001.  mov qword [rsp + 0x180], rdi
0x000192c0      4839ce         cmp rsi, rcx
0x000192c3      488b3c24       mov rdi, qword [rsp]
0x000192c7      480f4ff1       cmovg rsi, rcx
0x000192cb      4885db         test rbx, rbx
0x000192ce      488b4c2478     mov rcx, qword [rsp + 0x78]
0x000192d3      0f95c3         setne bl
0x000192d6      09d8           or eax, ebx
0x000192d8      888424ab0100.  mov byte [rsp + 0x1ab], al
0x000192df      410fb683b000.  movzx eax, byte [r11 + 0xb0]
0x000192e7      48898c242001.  mov qword [rsp + 0x120], rcx
0x000192ef      89c2           mov edx, eax
0x000192f1      c0e803         shr al, 3
0x000192f4      c0ea02         shr dl, 2
0x000192f7      83e001         and eax, 1
0x000192fa      83e201         and edx, 1
0x000192fd      888424aa0100.  mov byte [rsp + 0x1aa], al
0x00019304      889424a90100.  mov byte [rsp + 0x1a9], dl
0x0001930b      e8407dffff     call sym.re_string_realloc_buffers
0x00019310      85c0           test eax, eax
0x00019312      8944245c       mov dword [rsp + 0x5c], eax
0x00019316      0f85f4080000   jne 0x19c10
0x0001931c      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00019321      488d87b80000.  lea rax, [rdi + 0xb8]
0x00019328      48898424a001.  mov qword [rsp + 0x1a0], rax
0x00019330      0fb687b00000.  movzx eax, byte [rdi + 0xb0]
0x00019337      88442408       mov byte [rsp + 8], al
0x0001933b      c0e804         shr al, 4
0x0001933e      83e001         and eax, 1
0x00019341      80bc24ab0100.  cmp byte [rsp + 0x1ab], 0
0x00019349      888424ae0100.  mov byte [rsp + 0x1ae], al
0x00019350      7523           jne 0x19375
0x00019352      488b742438     mov rsi, qword [rsp + 0x38]
0x00019357      488b442478     mov rax, qword [rsp + 0x78]
0x0001935c      83beb4000000.  cmp dword [rsi + 0xb4], 1
0x00019363      488984242801.  mov qword [rsp + 0x128], rax
0x0001936b      488b84248800.  mov rax, qword [rsp + 0x88]
0x00019373      7e02           jle 0x19377
0x00019375      31c0           xor eax, eax
0x00019377      488984245001.  mov qword [rsp + 0x150], rax
0x0001937f      488984245801.  mov qword [rsp + 0x158], rax
0x00019387      488b442448     mov rax, qword [rsp + 0x48]
0x0001938c      4c89ac248801.  mov qword [rsp + 0x188], r13
0x00019394      4c89ac248001.  mov qword [rsp + 0x180], r13
0x0001939c      0fb64038       movzx eax, byte [rax + 0x38]
0x000193a0      88442408       mov byte [rsp + 8], al
0x000193a4      c0e807         shr al, 7
0x000193a7      888424ad0100.  mov byte [rsp + 0x1ad], al
0x000193ae      488b442438     mov rax, qword [rsp + 0x38]
0x000193b3      4c8bb0980000.  mov r14, qword [rax + 0x98]
0x000193ba      8b8424800200.  mov eax, dword [rsp + 0x280]
0x000193c1      48c78424c801.  mov qword [rsp + 0x1c8], 0xffffffffffffffff
0x000193cd      4f8d2c36       lea r13, [r14 + r14]
0x000193d1      898424c00100.  mov dword [rsp + 0x1c0], eax
0x000193d8      4d85ed         test r13, r13
0x000193db      7e52           jle 0x1942f
0x000193dd      48b866666666.  movabs rax, 0x666666666666666
0x000193e7      4939c5         cmp r13, rax
0x000193ea      0f8f400d0000   jg 0x1a130
0x000193f0      4b8d7cf500     lea rdi, [r13 + r14*8]
0x000193f5      48c1e703       shl rdi, 3
0x000193f9      e88293feff     call sym.imp.malloc
0x000193fe      4c89f7         mov rdi, r14
0x00019401      4989c7         mov r15, rax
0x00019404      48898424f801.  mov qword [rsp + 0x1f8], rax
0x0001940c      48c1e704       shl rdi, 4
0x00019410      e86b93feff     call sym.imp.malloc
0x00019415      4885c0         test rax, rax
0x00019418      488984241802.  mov qword [rsp + 0x218], rax
0x00019420      0f840a0d0000   je 0x1a130
0x00019426      4d85ff         test r15, r15
0x00019429      0f84010d0000   je 0x1a130
0x0001942f      4883bc247002.  cmp qword [rsp + 0x270], 1
0x00019438      4c89ac24f001.  mov qword [rsp + 0x1f0], r13
0x00019440      c78424000200.  mov dword [rsp + 0x200], 1
0x0001944b      4c89ac241002.  mov qword [rsp + 0x210], r13
0x00019453      0f861f110000   jbe 0x1a578
0x00019459      488b84246001.  mov rax, qword [rsp + 0x160]
0x00019461      48bafeffffff.  movabs rdx, 0x1ffffffffffffffe          ; 2305843009213693950
0x0001946b      4839d0         cmp rax, rdx
0x0001946e      0f87bc0c0000   ja 0x1a130
0x00019474      488d3cc50800.  lea rdi, [rax*8 + 8]
0x0001947c      e8ff92feff     call sym.imp.malloc
0x00019481      4885c0         test rax, rax
0x00019484      4889c7         mov rdi, rax
0x00019487      48898424d801.  mov qword [rsp + 0x1d8], rax
0x0001948f      0f84eb0c0000   je 0x1a180
0x00019495      8b8424800200.  mov eax, dword [rsp + 0x280]
0x0001949c      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x000194a4      83e001         and eax, 1
0x000194a7      83f801         cmp eax, 1
0x000194aa      19c0           sbb eax, eax
0x000194ac      83e002         and eax, 2
0x000194af      83c004         add eax, 4
0x000194b2      898424900100.  mov dword [rsp + 0x190], eax
0x000194b9      31c0           xor eax, eax
0x000194bb      4c39e5         cmp rbp, r12
0x000194be      0f9ec0         setle al
0x000194c1      8d4400ff       lea eax, [rax + rax - 1]
0x000194c5      898424ac0000.  mov dword [rsp + 0xac], eax
0x000194cc      4c89e0         mov rax, r12
0x000194cf      480f4ec5       cmovle rax, rbp
0x000194d3      488984249000.  mov qword [rsp + 0x90], rax
0x000194db      4c89e0         mov rax, r12
0x000194de      480f4dc5       cmovge rax, rbp
0x000194e2      48837c246800   cmp qword [rsp + 0x68], 0
0x000194e8      4889442470     mov qword [rsp + 0x70], rax
0x000194ed      488b442438     mov rax, qword [rsp + 0x38]
0x000194f2      8bb0b4000000   mov esi, dword [rax + 0xb4]
0x000194f8      b808000000     mov eax, 8
0x000194fd      89b424c80000.  mov dword [rsp + 0xc8], esi
0x00019504      7439           je 0x1953f
0x00019506      83fe01         cmp esi, 1
0x00019509      b904000000     mov ecx, 4
0x0001950e      741e           je 0x1952e
0x00019510      488b442448     mov rax, qword [rsp + 0x48]
0x00019515      f6401a40       test byte [rax + 0x1a], 0x40
0x00019519      0f857f0d0000   jne 0x1a29e
0x0001951f      4883bc24b000.  cmp qword [rsp + 0xb0], 0
0x00019528      0f85700d0000   jne 0x1a29e
0x0001952e      31d2           xor edx, edx
0x00019530      4c39e5         cmp rbp, r12
0x00019533      0fb6c3         movzx eax, bl
0x00019536      0f9ec2         setle dl
0x00019539      09c8           or eax, ecx
0x0001953b      01d2           add edx, edx
0x0001953d      09d0           or eax, edx
0x0001953f      483b6c2470     cmp rbp, qword [rsp + 0x70]
0x00019544      0f9fc1         setg cl
0x00019547      483bac249000.  cmp rbp, qword [rsp + 0x90]
0x0001954f      0f9cc2         setl dl
0x00019552      08d1           or cl, dl
0x00019554      0f85cf0a0000   jne 0x1a029
0x0001955a      488d8c24d800.  lea rcx, [rsp + 0xd8]
0x00019562      4c39e5         cmp rbp, r12
0x00019565      ba00000000     mov edx, 0
0x0001956a      480f4ed1       cmovle rdx, rcx
0x0001956e      4885d2         test rdx, rdx
0x00019571      48899424c000.  mov qword [rsp + 0xc0], rdx
0x00019579      0f958424cf00.  setne byte [rsp + 0xcf]
0x00019581      83e804         sub eax, 4
0x00019584      898424a80000.  mov dword [rsp + 0xa8], eax
0x0001958b      488d8424d000.  lea rax, [rsp + 0xd0]
0x00019593      4889442428     mov qword [rsp + 0x28], rax
0x00019598      8b8424a80000.  mov eax, dword [rsp + 0xa8]
0x0001959f      83f804         cmp eax, 4
0x000195a2      0f87e50b0000   ja 0x1a18d
0x000195a8      488d0d319300.  lea rcx, [0x000228e0]
0x000195af      48630481       movsxd rax, dword [rcx + rax*4]
0x000195b3      4801c8         add rax, rcx
0x000195b6      ffe0           jmp rax
0x000195b8      0f1f84000000.  nop dword [rax + rax]
0x000195c0      488b442438     mov rax, qword [rsp + 0x38]
0x000195c5      4883b8980000.  cmp qword [rax + 0x98], 0
0x000195cd      0f95c0         setne al
0x000195d0      0fb6c0         movzx eax, al
0x000195d3      89442458       mov dword [rsp + 0x58], eax
0x000195d7      e963fcffff     jmp 0x1923f
0x000195dc      0f1f4000       nop dword [rax]
0x000195e0      48c744246800.  mov qword [rsp + 0x68], 0
0x000195e9      e978fbffff     jmp 0x19166
0x000195ee      48396c2470     cmp qword [rsp + 0x70], rbp
0x000195f3      7e5a           jle 0x1964f
0x000195f5      488b442478     mov rax, qword [rsp + 0x78]
0x000195fa      488b7c2468     mov rdi, qword [rsp + 0x68]
0x000195ff      0fb61428       movzx edx, byte [rax + rbp]
0x00019603      488d4501       lea rax, [rbp + 1]
0x00019607      803c1700       cmp byte [rdi + rdx], 0
0x0001960b      0f8587000000   jne 0x19698
0x00019611      488b742468     mov rsi, qword [rsp + 0x68]
0x00019616      488b4c2470     mov rcx, qword [rsp + 0x70]
0x0001961b      488b7c2478     mov rdi, qword [rsp + 0x78]
0x00019620      eb18           jmp 0x1963a
0x00019622      660f1f440000   nop word [rax + rax]
0x00019628      0fb61407       movzx edx, byte [rdi + rax]
0x0001962c      488d4001       lea rax, [rax + 1]
0x00019630      803c1600       cmp byte [rsi + rdx], 0
0x00019634      0f8597110000   jne 0x1a7d1
0x0001963a      4839c1         cmp rcx, rax
0x0001963d      4889c5         mov rbp, rax
0x00019640      75e6           jne 0x19628
0x00019642      488b442470     mov rax, qword [rsp + 0x70]
0x00019647      48898424d800.  mov qword [rsp + 0xd8], rax
0x0001964f      48396c2470     cmp qword [rsp + 0x70], rbp
0x00019654      7542           jne 0x19698
0x00019656      31c0           xor eax, eax
0x00019658      488b742470     mov rsi, qword [rsp + 0x70]
0x0001965d      4839b4248800.  cmp qword [rsp + 0x88], rsi
0x00019665      7e09           jle 0x19670
0x00019667      488b442478     mov rax, qword [rsp + 0x78]
0x0001966c      0fb60430       movzx eax, byte [rax + rsi]
0x00019670      488bb424b000.  mov rsi, qword [rsp + 0xb0]
0x00019678      4885f6         test rsi, rsi
0x0001967b      7404           je 0x19681
0x0001967d      0fb60406       movzx eax, byte [rsi + rax]
0x00019681      488b7c2468     mov rdi, qword [rsp + 0x68]
0x00019686      803c0700       cmp byte [rdi + rax], 0
0x0001968a      0f8499090000   je 0x1a029
0x00019690      488b6c2470     mov rbp, qword [rsp + 0x70]
0x00019695      0f1f00         nop dword [rax]
0x00019698      8b9424800200.  mov edx, dword [rsp + 0x280]
0x0001969f      488b3c24       mov rdi, qword [rsp]
0x000196a3      4889ee         mov rsi, rbp
0x000196a6      e8a5b0ffff     call sym.re_string_reconstruct
0x000196ab      85c0           test eax, eax
0x000196ad      8944245c       mov dword [rsp + 0x5c], eax
0x000196b1      0f8559050000   jne 0x19c10
0x000196b7      83bc24c80000.  cmp dword [rsp + 0xc8], 1
0x000196bf      741c           je 0x196dd
0x000196c1      4883bc245001.  cmp qword [rsp + 0x150], 0
0x000196ca      7411           je 0x196dd
0x000196cc      488b84243001.  mov rax, qword [rsp + 0x130]
0x000196d4      8338ff         cmp dword [rax], 0xffffffff
0x000196d7      0f8424090000   je 0x1a001
0x000196dd      488b9c24b801.  mov rbx, qword [rsp + 0x1b8]
0x000196e5      0fb6442458     movzx eax, byte [rsp + 0x58]
0x000196ea      c78424000200.  mov dword [rsp + 0x200], 0
0x000196f5      48c78424e801.  mov qword [rsp + 0x1e8], 0
0x00019701      48c78424e001.  mov qword [rsp + 0x1e0], 0
0x0001970d      c78424d00000.  mov dword [rsp + 0xd0], 0
0x00019718      4c8b7348       mov r14, qword [rbx + 0x48]
0x0001971c      83e001         and eax, 1
0x0001971f      888424ce0000.  mov byte [rsp + 0xce], al
0x00019726      488b84246801.  mov rax, qword [rsp + 0x168]
0x0001972e      41807e6800     cmp byte [r14 + 0x68], 0
0x00019733      4889442408     mov qword [rsp + 8], rax
0x00019738      0f8872090000   js 0x1a0b0
0x0001973e      488b8424d801.  mov rax, qword [rsp + 0x1d8]
0x00019746      4885c0         test rax, rax
0x00019749      7417           je 0x19762
0x0001974b      4883bb980000.  cmp qword [rbx + 0x98], 0
0x00019753      488b7c2408     mov rdi, qword [rsp + 8]
0x00019758      4c8934f8       mov qword [rax + rdi*8], r14
0x0001975c      0f85e90e0000   jne 0x1a64b
0x00019762      0fb68424cf00.  movzx eax, byte [rsp + 0xcf]
0x0001976a      88442418       mov byte [rsp + 0x18], al
0x0001976e      410fb64668     movzx eax, byte [r14 + 0x68]
0x00019773      a810           test al, 0x10
0x00019775      48c7442420ff.  mov qword [rsp + 0x20], 0xffffffffffffffff
0x0001977e      48c744243000.  mov qword [rsp + 0x30], 0
0x00019787      0f85830e0000   jne 0x1a610
0x0001978d      488b8424c000.  mov rax, qword [rsp + 0xc0]
0x00019795      4c8b84246801.  mov r8, qword [rsp + 0x168]
0x0001979d      4889442450     mov qword [rsp + 0x50], rax
0x000197a2      488d8424e000.  lea rax, [rsp + 0xe0]
0x000197aa      4889442460     mov qword [rsp + 0x60], rax
0x000197af      488d8424d400.  lea rax, [rsp + 0xd4]
0x000197b7      488984248000.  mov qword [rsp + 0x80], rax
0x000197bf      eb5b           jmp 0x1981c
0x000197c1      0f1f80000000.  nop dword [rax]
0x000197c8      4d39ee         cmp r14, r13
0x000197cb      4c8b84246801.  mov r8, qword [rsp + 0x168]
0x000197d3      0f94c0         sete al
0x000197d6      20442418       and byte [rsp + 0x18], al
0x000197da      410fb64568     movzx eax, byte [r13 + 0x68]
0x000197df      480f445c2408   cmove rbx, qword [rsp + 8]
0x000197e5      a810           test al, 0x10
0x000197e7      48895c2408     mov qword [rsp + 8], rbx
0x000197ec      742b           je 0x19819
0x000197ee      84c0           test al, al
0x000197f0      0f88ba040000   js 0x19cb0
0x000197f6      8b442458       mov eax, dword [rsp + 0x58]
0x000197fa      4c89442420     mov qword [rsp + 0x20], r8
0x000197ff      85c0           test eax, eax
0x00019801      0f841f010000   je 0x19926
0x00019807      48c744243001.  mov qword [rsp + 0x30], 1
0x00019810      48c744245000.  mov qword [rsp + 0x50], 0
0x00019819      4d89ee         mov r14, r13
0x0001981c      4c3984248801.  cmp qword [rsp + 0x188], r8
0x00019824      0f8eea000000   jle 0x19914
0x0001982a      488b84246001.  mov rax, qword [rsp + 0x160]
0x00019832      498d5801       lea rbx, [r8 + 1]
0x00019836      4839c3         cmp rbx, rax
0x00019839      0f8da1040000   jge 0x19ce0
0x0001983f      488b84245001.  mov rax, qword [rsp + 0x150]
0x00019847      4839c3         cmp rbx, rax
0x0001984a      0f8d80070000   jge 0x19fd0
0x00019850      41f6466820     test byte [r14 + 0x68], 0x20
0x00019855      0f85c5040000   jne 0x19d20
0x0001985b      498d4001       lea rax, [r8 + 1]
0x0001985f      488984246801.  mov qword [rsp + 0x168], rax
0x00019867      488b84242801.  mov rax, qword [rsp + 0x128]
0x0001986f      460fb62c00     movzx r13d, byte [rax + r8]
0x00019874      498b4658       mov rax, qword [r14 + 0x58]
0x00019878      4885c0         test rax, rax
0x0001987b      0f840f070000   je 0x19f90
0x00019881      4e8b2ce8       mov r13, qword [rax + r13*8]
0x00019885      4883bc24d801.  cmp qword [rsp + 0x1d8], 0
0x0001988e      7414           je 0x198a4
0x00019890      488b3424       mov rsi, qword [rsp]
0x00019894      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00019899      4c89ea         mov rdx, r13
0x0001989c      e8eff2ffff     call sym.merge_state_with_log
0x000198a1      4989c5         mov r13, rax
0x000198a4      4d85ed         test r13, r13
0x000198a7      0f851bffffff   jne 0x197c8
0x000198ad      8b8c24d00000.  mov ecx, dword [rsp + 0xd0]
0x000198b4      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x000198bc      85c9           test ecx, ecx
0x000198be      0f85bc080000   jne 0x1a180
0x000198c4      4885ff         test rdi, rdi
0x000198c7      744b           je 0x19914
0x000198c9      0fb68424ce00.  movzx eax, byte [rsp + 0xce]
0x000198d1      83f001         xor eax, 1
0x000198d4      84442430       test byte [rsp + 0x30], al
0x000198d8      753a           jne 0x19914
0x000198da      488bb424e001.  mov rsi, qword [rsp + 0x1e0]
0x000198e2      488b84246801.  mov rax, qword [rsp + 0x168]
0x000198ea      31c9           xor ecx, ecx
0x000198ec      eb15           jmp 0x19903
0x000198ee      6690           nop
0x000198f0      48833cd700     cmp qword [rdi + rdx*8], 0
0x000198f5      4889d0         mov rax, rdx
0x000198f8      b901000000     mov ecx, 1
0x000198fd      0f856d030000   jne 0x19c70
0x00019903      488d5001       lea rdx, [rax + 1]
0x00019907      4839d6         cmp rsi, rdx
0x0001990a      7de4           jge 0x198f0
0x0001990c      84c9           test cl, cl
0x0001990e      0f85ca0e0000   jne 0x1a7de
0x00019914      488b442450     mov rax, qword [rsp + 0x50]
0x00019919      4885c0         test rax, rax
0x0001991c      7408           je 0x19926
0x0001991e      488b7c2408     mov rdi, qword [rsp + 8]
0x00019923      480138         add qword [rax], rdi
0x00019926      488b442420     mov rax, qword [rsp + 0x20]
0x0001992b      4883f8ff       cmp rax, 0xffffffffffffffff
0x0001992f      0f84bb060000   je 0x19ff0
0x00019935      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00019939      0f84f1070000   je 0x1a130
0x0001993f      488b442420     mov rax, qword [rsp + 0x20]
0x00019944      48898424c801.  mov qword [rsp + 0x1c8], rax
0x0001994c      488b442448     mov rax, qword [rsp + 0x48]
0x00019951      f6403810       test byte [rax + 0x38], 0x10
0x00019955      0f85b5070000   jne 0x1a110
0x0001995b      4883bc247002.  cmp qword [rsp + 0x270], 1
0x00019964      0f86f2080000   jbe 0x1a25c
0x0001996a      488b4c2420     mov rcx, qword [rsp + 0x20]
0x0001996f      488b9c24d801.  mov rbx, qword [rsp + 0x1d8]
0x00019977      488b3c24       mov rdi, qword [rsp]
0x0001997b      488b04cb       mov rax, qword [rbx + rcx*8]
0x0001997f      488b7010       mov rsi, qword [rax + 0x10]
0x00019983      488d5018       lea rdx, [rax + 0x18]
0x00019987      e8f4acffff     call sym.check_halt_state_context.isra.20
0x0001998c      4989c5         mov r13, rax
0x0001998f      48898424d001.  mov qword [rsp + 0x1d0], rax
0x00019997      488b442438     mov rax, qword [rsp + 0x38]
0x0001999c      f680b0000000.  test byte [rax + 0xb0], 1
0x000199a3      751b           jne 0x199c0
0x000199a5      488b442438     mov rax, qword [rsp + 0x38]
0x000199aa      4883b8980000.  cmp qword [rax + 0x98], 0
0x000199b2      0f8494090000   je 0x1a34c
0x000199b8      4c8bac24d001.  mov r13, qword [rsp + 0x1d0]
0x000199c0      48befeffffff.  movabs rsi, 0x1ffffffffffffffe          ; 2305843009213693950
0x000199ca      4839742420     cmp qword [rsp + 0x20], rsi
0x000199cf      4c8bbc24b801.  mov r15, qword [rsp + 0x1b8]
0x000199d7      0f875e0c0000   ja 0x1a63b
0x000199dd      488b442420     mov rax, qword [rsp + 0x20]
0x000199e2      4883c001       add rax, 1
0x000199e6      488d1cc50000.  lea rbx, [rax*8]
0x000199ee      4889442408     mov qword [rsp + 8], rax
0x000199f3      4889df         mov rdi, rbx
0x000199f6      e8858dfeff     call sym.imp.malloc
0x000199fb      4885c0         test rax, rax
0x000199fe      4989c4         mov r12, rax
0x00019a01      0f8429070000   je 0x1a130
0x00019a07      4983bf980000.  cmp qword [r15 + 0x98], 0
0x00019a0f      0f8490080000   je 0x1a2a5
0x00019a15      4889df         mov rdi, rbx
0x00019a18      e8638dfeff     call sym.imp.malloc
0x00019a1d      4885c0         test rax, rax
0x00019a20      4889c5         mov rbp, rax
0x00019a23      0f84ff060000   je 0x1a128
0x00019a29      4c8b742420     mov r14, qword [rsp + 0x20]
0x00019a2e      488d9c24e000.  lea rbx, [rsp + 0xe0]
0x00019a36      4c897c2410     mov qword [rsp + 0x10], r15
0x00019a3b      4889442418     mov qword [rsp + 0x18], rax
0x00019a40      488b442408     mov rax, qword [rsp + 8]
0x00019a45      31f6           xor esi, esi
0x00019a47      4889ef         mov rdi, rbp
0x00019a4a      488d14c50000.  lea rdx, [rax*8]
0x00019a52      e8c98bfeff     call sym.imp.memset
0x00019a57      660fefc0       pxor xmm0, xmm0
0x00019a5b      4c89a424e000.  mov qword [rsp + 0xe0], r12
0x00019a63      4889ac24e800.  mov qword [rsp + 0xe8], rbp
0x00019a6b      4c89ac24f000.  mov qword [rsp + 0xf0], r13
0x00019a73      4889de         mov rsi, rbx
0x00019a76      4c89b424f800.  mov qword [rsp + 0xf8], r14
0x00019a7e      488b3c24       mov rdi, qword [rsp]
0x00019a82      0f294320       movaps xmmword [rbx + 0x20], xmm0
0x00019a86      48c743300000.  mov qword [rbx + 0x30], 0
0x00019a8e      e8edf2ffff     call sym.sift_states_backward
0x00019a93      488bbc241001.  mov rdi, qword [rsp + 0x110]
0x00019a9b      4189c7         mov r15d, eax
0x00019a9e      e86d8ffeff     call sym..plt.got
0x00019aa3      4585ff         test r15d, r15d
0x00019aa6      0f85180c0000   jne 0x1a6c4
0x00019aac      49833c2400     cmp qword [r12], 0
0x00019ab1      0f856c0c0000   jne 0x1a723
0x00019ab7      48837d0000     cmp qword [rbp], 0
0x00019abc      0f85610c0000   jne 0x1a723
0x00019ac2      488b9424d801.  mov rdx, qword [rsp + 0x1d8]
0x00019aca      660f1f440000   nop word [rax + rax]
0x00019ad0      4983ee01       sub r14, 1
0x00019ad4      4983feff       cmp r14, 0xffffffffffffffff
0x00019ad8      0f84bd0a0000   je 0x1a59b
0x00019ade      4a8b04f2       mov rax, qword [rdx + r14*8]
0x00019ae2      4885c0         test rax, rax
0x00019ae5      74e9           je 0x19ad0
0x00019ae7      f6406810       test byte [rax + 0x68], 0x10
0x00019aeb      74e3           je 0x19ad0
0x00019aed      488b7010       mov rsi, qword [rax + 0x10]
0x00019af1      488b3c24       mov rdi, qword [rsp]
0x00019af5      488d5018       lea rdx, [rax + 0x18]
0x00019af9      4c89f1         mov rcx, r14
0x00019afc      e87fabffff     call sym.check_halt_state_context.isra.20
0x00019b01      4989c5         mov r13, rax
0x00019b04      498d4601       lea rax, [r14 + 1]
0x00019b08      4889442408     mov qword [rsp + 8], rax
0x00019b0d      e92effffff     jmp 0x19a40
0x00019b12      48396c2470     cmp qword [rsp + 0x70], rbp
0x00019b17      0f8e32fbffff   jle 0x1964f
0x00019b1d      488b442478     mov rax, qword [rsp + 0x78]
0x00019b22      488bbc24b000.  mov rdi, qword [rsp + 0xb0]
0x00019b2a      488b742468     mov rsi, qword [rsp + 0x68]
0x00019b2f      0fb60428       movzx eax, byte [rax + rbp]
0x00019b33      0fb61407       movzx edx, byte [rdi + rax]
0x00019b37      488d4501       lea rax, [rbp + 1]
0x00019b3b      803c1600       cmp byte [rsi + rdx], 0
0x00019b3f      0f8553fbffff   jne 0x19698
0x00019b45      488b742468     mov rsi, qword [rsp + 0x68]
0x00019b4a      488bbc24b000.  mov rdi, qword [rsp + 0xb0]
0x00019b52      488b4c2470     mov rcx, qword [rsp + 0x70]
0x00019b57      4c8b442478     mov r8, qword [rsp + 0x78]
0x00019b5c      eb19           jmp 0x19b77
0x00019b5e      6690           nop
0x00019b60      410fb60400     movzx eax, byte [r8 + rax]
0x00019b65      0fb61407       movzx edx, byte [rdi + rax]
0x00019b69      488d4501       lea rax, [rbp + 1]
0x00019b6d      803c1600       cmp byte [rsi + rdx], 0
0x00019b71      0f855a0c0000   jne 0x1a7d1
0x00019b77      4839c1         cmp rcx, rax
0x00019b7a      4889c5         mov rbp, rax
0x00019b7d      75e1           jne 0x19b60
0x00019b7f      e9befaffff     jmp 0x19642
0x00019b84      4839ac249000.  cmp qword [rsp + 0x90], rbp
0x00019b8c      0f8f97040000   jg 0x1a029
0x00019b92      31c9           xor ecx, ecx
0x00019b94      4889e8         mov rax, rbp
0x00019b97      488b7c2468     mov rdi, qword [rsp + 0x68]
0x00019b9c      488bb424b000.  mov rsi, qword [rsp + 0xb0]
0x00019ba4      4c8b8c249000.  mov r9, qword [rsp + 0x90]
0x00019bac      4c8b542478     mov r10, qword [rsp + 0x78]
0x00019bb1      4c8b84248800.  mov r8, qword [rsp + 0x88]
0x00019bb9      eb17           jmp 0x19bd2
0x00019bbb      0f1f440000     nop dword [rax + rax]
0x00019bc0      4883e801       sub rax, 1
0x00019bc4      b901000000     mov ecx, 1
0x00019bc9      4c39c8         cmp rax, r9
0x00019bcc      0f8cde090000   jl 0x1a5b0
0x00019bd2      31d2           xor edx, edx
0x00019bd4      4939c0         cmp r8, rax
0x00019bd7      7e05           jle 0x19bde
0x00019bd9      410fb61402     movzx edx, byte [r10 + rax]
0x00019bde      4885f6         test rsi, rsi
0x00019be1      7404           je 0x19be7
0x00019be3      0fb61416       movzx edx, byte [rsi + rdx]
0x00019be7      803c1700       cmp byte [rdi + rdx], 0
0x00019beb      74d3           je 0x19bc0
0x00019bed      84c9           test cl, cl
0x00019bef      0f84a3faffff   je 0x19698
0x00019bf5      48898424d800.  mov qword [rsp + 0xd8], rax
0x00019bfd      4889c5         mov rbp, rax
0x00019c00      e993faffff     jmp 0x19698
0x00019c05      0f1f00         nop dword [rax]
0x00019c08      8944245c       mov dword [rsp + 0x5c], eax
0x00019c0c      0f1f4000       nop dword [rax]
0x00019c10      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00019c18      e8f38dfeff     call sym..plt.got
0x00019c1d      488b442438     mov rax, qword [rsp + 0x38]
0x00019c22      4883b8980000.  cmp qword [rax + 0x98], 0
0x00019c2a      0f8520090000   jne 0x1a550
0x00019c30      488b3c24       mov rdi, qword [rsp]
0x00019c34      e85787ffff     call sym.re_string_destruct
0x00019c39      488bb4242802.  mov rsi, qword [rsp + 0x228]
0x00019c41      644833342528.  xor rsi, qword fs:[0x28]
0x00019c4a      8b44245c       mov eax, dword [rsp + 0x5c]
0x00019c4e      0f85970b0000   jne 0x1a7eb
0x00019c54      4881c4380200.  add rsp, sym..interp
0x00019c5b      5b             pop rbx
0x00019c5c      5d             pop rbp
0x00019c5d      415c           pop r12
0x00019c5f      415d           pop r13
0x00019c61      415e           pop r14
0x00019c63      415f           pop r15
0x00019c65      c3             ret
0x00019c66      662e0f1f8400.  nop word cs:[rax + rax]
0x00019c70      488b3424       mov rsi, qword [rsp]
0x00019c74      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00019c79      488994246801.  mov qword [rsp + 0x168], rdx
0x00019c81      31d2           xor edx, edx
0x00019c83      e808efffff     call sym.merge_state_with_log
0x00019c88      8b9424d00000.  mov edx, dword [rsp + 0xd0]
0x00019c8f      85d2           test edx, edx
0x00019c91      0f8536090000   jne 0x1a5cd
0x00019c97      4885c0         test rax, rax
0x00019c9a      0f8540090000   jne 0x1a5e0
0x00019ca0      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00019ca8      e92dfcffff     jmp 0x198da
0x00019cad      0f1f00         nop dword [rax]
0x00019cb0      498b7510       mov rsi, qword [r13 + 0x10]
0x00019cb4      488b3c24       mov rdi, qword [rsp]
0x00019cb8      498d5518       lea rdx, [r13 + 0x18]
0x00019cbc      4c89c1         mov rcx, r8
0x00019cbf      4c89442410     mov qword [rsp + 0x10], r8
0x00019cc4      e8b7a9ffff     call sym.check_halt_state_context.isra.20
0x00019cc9      4885c0         test rax, rax
0x00019ccc      4c8b442410     mov r8, qword [rsp + 0x10]
0x00019cd1      0f8442fbffff   je 0x19819
0x00019cd7      e91afbffff     jmp 0x197f6
0x00019cdc      0f1f4000       nop dword [rax]
0x00019ce0      483b84247801.  cmp rax, qword [rsp + 0x178]
0x00019ce8      0f8d51fbffff   jge 0x1983f
0x00019cee      488b3c24       mov rdi, qword [rsp]
0x00019cf2      8d7301         lea esi, [rbx + 1]
0x00019cf5      e8e67effff     call sym.extend_buffers
0x00019cfa      85c0           test eax, eax
0x00019cfc      898424d00000.  mov dword [rsp + 0xd0], eax
0x00019d03      0f85df080000   jne 0x1a5e8
0x00019d09      41f6466820     test byte [r14 + 0x68], 0x20
0x00019d0e      4c8b84246801.  mov r8, qword [rsp + 0x168]
0x00019d16      0f843ffbffff   je 0x1985b
0x00019d1c      0f1f4000       nop dword [rax]
0x00019d20      49837e1000     cmp qword [r14 + 0x10], 0
0x00019d25      4c8bac24b801.  mov r13, qword [rsp + 0x1b8]
0x00019d2d      0f8e28030000   jle 0x1a05b
0x00019d33      498d85d80000.  lea rax, [r13 + 0xd8]
0x00019d3a      4531e4         xor r12d, r12d
0x00019d3d      48899c24a000.  mov qword [rsp + 0xa0], rbx
0x00019d45      4c89e3         mov rbx, r12
0x00019d48      4d89c4         mov r12, r8
0x00019d4b      4889442440     mov qword [rsp + 0x40], rax
0x00019d50      e953010000     jmp 0x19ea8
0x00019d55      0f1f00         nop dword [rax]
0x00019d58      a801           test al, 1
0x00019d5a      0f843a010000   je 0x19e9a
0x00019d60      83e108         and ecx, 8
0x00019d63      0f8531010000   jne 0x19e9a
0x00019d69      f6c220         test dl, 0x20                           ; "@"
0x00019d6c      7408           je 0x19d76
0x00019d6e      a802           test al, 2
0x00019d70      0f8424010000   je 0x19e9a
0x00019d76      81e280000000   and edx, 0x80
0x00019d7c      7412           je 0x19d90
0x00019d7e      a808           test al, 8
0x00019d80      0f8414010000   je 0x19e9a
0x00019d86      662e0f1f8400.  nop word cs:[rax + rax]
0x00019d90      488b0c24       mov rcx, qword [rsp]
0x00019d94      488b742440     mov rsi, qword [rsp + 0x40]
0x00019d99      4d89e0         mov r8, r12
0x00019d9c      4c89fa         mov rdx, r15
0x00019d9f      4889ef         mov rdi, rbp
0x00019da2      e8a9d0ffff     call sym.check_node_accept_bytes.isra.31
0x00019da7      85c0           test eax, eax
0x00019da9      0f84e3000000   je 0x19e92
0x00019daf      4863e8         movsxd rbp, eax
0x00019db2      4803ac246801.  add rbp, qword [rsp + 0x168]
0x00019dba      398424000200.  cmp dword [rsp + 0x200], eax
0x00019dc1      0f4d84240002.  cmovge eax, dword [rsp + 0x200]
0x00019dc9      488b3c24       mov rdi, qword [rsp]
0x00019dcd      4889ee         mov rsi, rbp
0x00019dd0      898424000200.  mov dword [rsp + 0x200], eax
0x00019dd7      e8547fffff     call sym.clean_state_log_if_needed
0x00019ddc      85c0           test eax, eax
0x00019dde      898424d40000.  mov dword [rsp + 0xd4], eax
0x00019de5      0f8595020000   jne 0x1a080
0x00019deb      498b4518       mov rax, qword [r13 + 0x18]
0x00019def      4c8d24ed0000.  lea r12, [rbp*8]
0x00019df7      4a8b04f8       mov rax, qword [rax + r15*8]
0x00019dfb      4c8bbc24d801.  mov r15, qword [rsp + 0x1d8]
0x00019e03      488d1440       lea rdx, [rax + rax*2]
0x00019e07      498b4530       mov rax, qword [r13 + 0x30]
0x00019e0b      4d01e7         add r15, r12
0x00019e0e      488d14d0       lea rdx, [rax + rdx*8]
0x00019e12      498b07         mov rax, qword [r15]
0x00019e15      4885c0         test rax, rax
0x00019e18      0f84fa000000   je 0x19f18
0x00019e1e      488b7050       mov rsi, qword [rax + 0x50]
0x00019e22      488b7c2460     mov rdi, qword [rsp + 0x60]
0x00019e27      e8649affff     call sym.re_node_set_init_union
0x00019e2c      85c0           test eax, eax
0x00019e2e      898424d40000.  mov dword [rsp + 0xd4], eax
0x00019e35      0f8545020000   jne 0x1a080
0x00019e3b      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x00019e42      488b3c24       mov rdi, qword [rsp]
0x00019e46      488d75ff       lea rsi, [rbp - 1]
0x00019e4a      e831a6ffff     call sym.re_string_context_at
0x00019e4f      488b542460     mov rdx, qword [rsp + 0x60]
0x00019e54      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x00019e5c      89c1           mov ecx, eax
0x00019e5e      4c03a424d801.  add r12, qword [rsp + 0x1d8]
0x00019e66      4c89ee         mov rsi, r13
0x00019e69      e8829bffff     call sym.re_acquire_state_context
0x00019e6e      488bbc24f000.  mov rdi, qword [rsp + 0xf0]
0x00019e76      49890424       mov qword [r12], rax
0x00019e7a      e8918bfeff     call sym..plt.got
0x00019e7f      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00019e87      48833cef00     cmp qword [rdi + rbp*8], 0
0x00019e8c      0f84df000000   je 0x19f71
0x00019e92      4c8ba4246801.  mov r12, qword [rsp + 0x168]
0x00019e9a      4883c301       add rbx, 1
0x00019e9e      493b5e10       cmp rbx, qword [r14 + 0x10]
0x00019ea2      0f8da8010000   jge 0x1a050
0x00019ea8      498b4618       mov rax, qword [r14 + 0x18]
0x00019eac      498b6d00       mov rbp, qword [r13]
0x00019eb0      4c8b3cd8       mov r15, qword [rax + rbx*8]
0x00019eb4      4c89f8         mov rax, r15
0x00019eb7      48c1e004       shl rax, 4
0x00019ebb      4801e8         add rax, rbp
0x00019ebe      f6400a10       test byte [rax + 0xa], 0x10
0x00019ec2      74d6           je 0x19e9a
0x00019ec4      8b4808         mov ecx, dword [rax + 8]
0x00019ec7      f7c100ff0300   test ecx, 0x3ff00
0x00019ecd      894c2410       mov dword [rsp + 0x10], ecx
0x00019ed1      0f84b9feffff   je 0x19d90
0x00019ed7      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x00019ede      488b3c24       mov rdi, qword [rsp]
0x00019ee2      4c89e6         mov rsi, r12
0x00019ee5      e896a5ffff     call sym.re_string_context_at
0x00019eea      8b4c2410       mov ecx, dword [rsp + 0x10]
0x00019eee      c1e908         shr ecx, 8
0x00019ef1      89ca           mov edx, ecx
0x00019ef3      6681e2ff03     and dx, 0x3ff
0x00019ef8      f6c104         test cl, 4
0x00019efb      0f8557feffff   jne 0x19d58
0x00019f01      83e108         and ecx, 8
0x00019f04      0f845ffeffff   je 0x19d69
0x00019f0a      a801           test al, 1
0x00019f0c      0f8457feffff   je 0x19d69
0x00019f12      eb86           jmp 0x19e9a
0x00019f14      0f1f4000       nop dword [rax]
0x00019f18      f30f6f02       movdqu xmm0, xmmword [rdx]
0x00019f1c      488d75ff       lea rsi, [rbp - 1]
0x00019f20      488b3c24       mov rdi, qword [rsp]
0x00019f24      0f298424e000.  movaps xmmword [rsp + 0xe0], xmm0
0x00019f2c      488b4210       mov rax, qword [rdx + 0x10]
0x00019f30      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x00019f37      48898424f000.  mov qword [rsp + 0xf0], rax
0x00019f3f      e83ca5ffff     call sym.re_string_context_at
0x00019f44      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x00019f4c      488b542460     mov rdx, qword [rsp + 0x60]
0x00019f51      89c1           mov ecx, eax
0x00019f53      4c89ee         mov rsi, r13
0x00019f56      e8959affff     call sym.re_acquire_state_context
0x00019f5b      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00019f63      498907         mov qword [r15], rax
0x00019f66      48833cef00     cmp qword [rdi + rbp*8], 0
0x00019f6b      0f8521ffffff   jne 0x19e92
0x00019f71      8b8424d40000.  mov eax, dword [rsp + 0xd4]
0x00019f78      85c0           test eax, eax
0x00019f7a      0f8412ffffff   je 0x19e92
0x00019f80      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x00019f88      e903010000     jmp 0x1a090
0x00019f8d      0f1f00         nop dword [rax]
0x00019f90      498b6e60       mov rbp, qword [r14 + 0x60]
0x00019f94      4885ed         test rbp, rbp
0x00019f97      0f84a8010000   je 0x1a145
0x00019f9d      488b84246801.  mov rax, qword [rsp + 0x168]
0x00019fa5      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x00019fac      488b3c24       mov rdi, qword [rsp]
0x00019fb0      488d70ff       lea rsi, [rax - 1]
0x00019fb4      e8c7a4ffff     call sym.re_string_context_at
0x00019fb9      a801           test al, 1
0x00019fbb      0f84af000000   je 0x1a070
0x00019fc1      4e8baced0008.  mov r13, qword [rbp + r13*8 + 0x800]
0x00019fc9      e9b7f8ffff     jmp 0x19885
0x00019fce      6690           nop
0x00019fd0      483b84247801.  cmp rax, qword [rsp + 0x178]
0x00019fd8      0f8d72f8ffff   jge 0x19850
0x00019fde      e90bfdffff     jmp 0x19cee
0x00019fe3      4c89e7         mov rdi, r12
0x00019fe6      e8258afeff     call sym..plt.got
0x00019feb      0f1f440000     nop dword [rax + rax]
0x00019ff0      488b3c24       mov rdi, qword [rsp]
0x00019ff4      e83785ffff     call sym.match_ctx_clean
0x00019ff9      488bac24d800.  mov rbp, qword [rsp + 0xd8]
0x0001a001      48638424ac00.  movsxd rax, dword [rsp + 0xac]
0x0001a009      4801c5         add rbp, rax
0x0001a00c      483bac249000.  cmp rbp, qword [rsp + 0x90]
0x0001a014      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x0001a01c      7c0b           jl 0x1a029
0x0001a01e      483b6c2470     cmp rbp, qword [rsp + 0x70]
0x0001a023      0f8e6ff5ffff   jle 0x19598
0x0001a029      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0001a031      c744245c0100.  mov dword [rsp + 0x5c], 1
0x0001a039      e9dafbffff     jmp 0x19c18
0x0001a03e      6690           nop
0x0001a040      c744245c0100.  mov dword [rsp + 0x5c], 1
0x0001a048      e9ecfbffff     jmp 0x19c39
0x0001a04d      0f1f00         nop dword [rax]
0x0001a050      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x0001a058      4d89e0         mov r8, r12
0x0001a05b      c78424d00000.  mov dword [rsp + 0xd0], 0
0x0001a066      e9f0f7ffff     jmp 0x1985b
0x0001a06b      0f1f440000     nop dword [rax + rax]
0x0001a070      4e8b6ced00     mov r13, qword [rbp + r13*8]
0x0001a075      e90bf8ffff     jmp 0x19885
0x0001a07a      660f1f440000   nop word [rax + rax]
0x0001a080      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x0001a088      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0001a090      4885ff         test rdi, rdi
0x0001a093      898424d00000.  mov dword [rsp + 0xd0], eax
0x0001a09a      0f84e0000000   je 0x1a180
0x0001a0a0      4531ed         xor r13d, r13d
0x0001a0a3      e9e8f7ffff     jmp 0x19890
0x0001a0a8      0f1f84000000.  nop dword [rax + rax]
0x0001a0b0      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x0001a0b7      488b3c24       mov rdi, qword [rsp]
0x0001a0bb      488d70ff       lea rsi, [rax - 1]
0x0001a0bf      e8bca3ffff     call sym.re_string_context_at
0x0001a0c4      a801           test al, 1
0x0001a0c6      0f8469010000   je 0x1a235
0x0001a0cc      4c8b7350       mov r14, qword [rbx + 0x50]
0x0001a0d0      4d85f6         test r14, r14
0x0001a0d3      0f8565f6ffff   jne 0x1973e
0x0001a0d9      8b8424d00000.  mov eax, dword [rsp + 0xd0]
0x0001a0e0      83f80c         cmp eax, 0xc
0x0001a0e3      8944245c       mov dword [rsp + 0x5c], eax
0x0001a0e7      0f8423fbffff   je 0x19c10
0x0001a0ed      488d0d7c8c00.  lea rcx, obj.__PRETTY_FUNCTION__.7972   ; 0x22d70 ; "check_matching"
0x0001a0f4      488d35a58600.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x227a0 ; "../coreutils-8.31/lib/regexec.c"
0x0001a0fb      488d3d4e8700.  lea rdi, str.err____REG_ESPACE          ; 0x22850 ; "err == REG_ESPACE"
0x0001a102      ba35040000     mov edx, 0x435
0x0001a107      e8f484feff     call sym.imp.__assert_fail
0x0001a10c      0f1f4000       nop dword [rax]
0x0001a110      488b442438     mov rax, qword [rsp + 0x38]
0x0001a115      4883b8980000.  cmp qword [rax + 0x98], 0
0x0001a11d      0f8429020000   je 0x1a34c
0x0001a123      e947010000     jmp 0x1a26f
0x0001a128      4c89e7         mov rdi, r12
0x0001a12b      e8e088feff     call sym..plt.got
0x0001a130      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0001a138      c744245c0c00.  mov dword [rsp + 0x5c], 0xc             ; [0xc:4]=0
0x0001a140      e9d3faffff     jmp 0x19c18
0x0001a145      488bbc24b801.  mov rdi, qword [rsp + 0x1b8]
0x0001a14d      4c89f6         mov rsi, r14
0x0001a150      e8dbafffff     call sym.build_trtable
0x0001a155      84c0           test al, al
0x0001a157      0f8517f7ffff   jne 0x19874
0x0001a15d      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0001a165      c78424d00000.  mov dword [rsp + 0xd0], 0xc             ; [0xc:4]=0
0x0001a170      4885ff         test rdi, rdi
0x0001a173      0f8527ffffff   jne 0x1a0a0
0x0001a179      0f1f80000000.  nop dword [rax]
0x0001a180      c744245c0c00.  mov dword [rsp + 0x5c], 0xc             ; [0xc:4]=0
0x0001a188      e98bfaffff     jmp 0x19c18
0x0001a18d      488b5c2468     mov rbx, qword [rsp + 0x68]
0x0001a192      448bac24ac00.  mov r13d, dword [rsp + 0xac]
0x0001a19a      4c8bb4249000.  mov r14, qword [rsp + 0x90]
0x0001a1a2      4c8b7c2470     mov r15, qword [rsp + 0x70]
0x0001a1a7      4c8ba4248800.  mov r12, qword [rsp + 0x88]
0x0001a1af      eb47           jmp 0x1a1f8
0x0001a1b1      0f1f80000000.  nop dword [rax]
0x0001a1b8      4939ec         cmp r12, rbp
0x0001a1bb      4889d8         mov rax, rbx
0x0001a1be      7e0f           jle 0x1a1cf
0x0001a1c0      488b84242801.  mov rax, qword [rsp + 0x128]
0x0001a1c8      0fb60410       movzx eax, byte [rax + rdx]
0x0001a1cc      4801d8         add rax, rbx
0x0001a1cf      803800         cmp byte [rax], 0
0x0001a1d2      0f85c0f4ffff   jne 0x19698
0x0001a1d8      4963c5         movsxd rax, r13d
0x0001a1db      4801c5         add rbp, rax
0x0001a1de      4c39f5         cmp rbp, r14
0x0001a1e1      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x0001a1e9      0f8c3afeffff   jl 0x1a029
0x0001a1ef      4c39fd         cmp rbp, r15
0x0001a1f2      0f8f31feffff   jg 0x1a029
0x0001a1f8      4889ea         mov rdx, rbp
0x0001a1fb      482b94244801.  sub rdx, qword [rsp + 0x148]
0x0001a203      483994245801.  cmp qword [rsp + 0x158], rdx
0x0001a20b      77ab           ja 0x1a1b8
0x0001a20d      8b9424800200.  mov edx, dword [rsp + 0x280]
0x0001a214      488b3c24       mov rdi, qword [rsp]
0x0001a218      4889ee         mov rsi, rbp
0x0001a21b      e830a5ffff     call sym.re_string_reconstruct
0x0001a220      85c0           test eax, eax
0x0001a222      0f85e0f9ffff   jne 0x19c08
0x0001a228      4889ea         mov rdx, rbp
0x0001a22b      482b94244801.  sub rdx, qword [rsp + 0x148]
0x0001a233      eb83           jmp 0x1a1b8
0x0001a235      85c0           test eax, eax
0x0001a237      0f8401f5ffff   je 0x1973e
0x0001a23d      89c2           mov edx, eax
0x0001a23f      83e206         and edx, 6
0x0001a242      83fa06         cmp edx, 6
0x0001a245      0f8464040000   je 0x1a6af
0x0001a24b      a802           test al, 2
0x0001a24d      0f84ad040000   je 0x1a700
0x0001a253      4c8b7358       mov r14, qword [rbx + 0x58]
0x0001a257      e974feffff     jmp 0x1a0d0
0x0001a25c      488b442438     mov rax, qword [rsp + 0x38]
0x0001a261      4883b8980000.  cmp qword [rax + 0x98], 0
0x0001a269      0f84dd000000   je 0x1a34c
0x0001a26f      488b4c2420     mov rcx, qword [rsp + 0x20]
0x0001a274      488b9c24d801.  mov rbx, qword [rsp + 0x1d8]
0x0001a27c      488b3c24       mov rdi, qword [rsp]
0x0001a280      488b04cb       mov rax, qword [rbx + rcx*8]
0x0001a284      488b7010       mov rsi, qword [rax + 0x10]
0x0001a288      488d5018       lea rdx, [rax + 0x18]
0x0001a28c      e8efa3ffff     call sym.check_halt_state_context.isra.20
0x0001a291      48898424d001.  mov qword [rsp + 0x1d0], rax
0x0001a299      e91af7ffff     jmp 0x199b8
0x0001a29e      31c9           xor ecx, ecx
0x0001a2a0      e989f2ffff     jmp 0x1952e
0x0001a2a5      660fefc0       pxor xmm0, xmm0
0x0001a2a9      48898424e000.  mov qword [rsp + 0xe0], rax
0x0001a2b1      488b3c24       mov rdi, qword [rsp]
0x0001a2b5      488b442420     mov rax, qword [rsp + 0x20]
0x0001a2ba      488d9c24e000.  lea rbx, [rsp + 0xe0]
0x0001a2c2      48c78424e800.  mov qword [rsp + 0xe8], 0
0x0001a2ce      4c89ac24f000.  mov qword [rsp + 0xf0], r13
0x0001a2d6      4889de         mov rsi, rbx
0x0001a2d9      48c784241001.  mov qword [rsp + 0x110], 0
0x0001a2e5      0f2984240001.  movaps xmmword [rsp + 0x100], xmm0
0x0001a2ed      48898424f800.  mov qword [rsp + 0xf8], rax
0x0001a2f5      e886eaffff     call sym.sift_states_backward
0x0001a2fa      488bbc241001.  mov rdi, qword [rsp + 0x110]
0x0001a302      89442408       mov dword [rsp + 8], eax
0x0001a306      e80587feff     call sym..plt.got
0x0001a30b      8b442408       mov eax, dword [rsp + 8]
0x0001a30f      85c0           test eax, eax
0x0001a311      0f8541040000   jne 0x1a758
0x0001a317      49833c2400     cmp qword [r12], 0
0x0001a31c      0f84c1fcffff   je 0x19fe3
0x0001a322      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0001a32a      e8e186feff     call sym..plt.got
0x0001a32f      488b442420     mov rax, qword [rsp + 0x20]
0x0001a334      4c89a424d801.  mov qword [rsp + 0x1d8], r12
0x0001a33c      4c89ac24d001.  mov qword [rsp + 0x1d0], r13
0x0001a344      48898424c801.  mov qword [rsp + 0x1c8], rax
0x0001a34c      4883bc247002.  cmp qword [rsp + 0x270], 0
0x0001a355      0f84b5f8ffff   je 0x19c10
0x0001a35b      4883bc247002.  cmp qword [rsp + 0x270], 1
0x0001a364      0f841e040000   je 0x1a788
0x0001a36a      488bb424b800.  mov rsi, qword [rsp + 0xb8]
0x0001a372      488b8c247002.  mov rcx, qword [rsp + 0x270]
0x0001a37a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0001a381      48c1e104       shl rcx, 4
0x0001a385      488d4610       lea rax, [rsi + 0x10]
0x0001a389      4801f1         add rcx, rsi
0x0001a38c      48895008       mov qword [rax + 8], rdx
0x0001a390      488910         mov qword [rax], rdx
0x0001a393      4883c010       add rax, 0x10
0x0001a397      4839c1         cmp rcx, rax
0x0001a39a      75f0           jne 0x1a38c
0x0001a39c      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x0001a3a4      488b8424c801.  mov rax, qword [rsp + 0x1c8]
0x0001a3ac      48894708       mov qword [rdi + 8], rax
0x0001a3b0      488b442448     mov rax, qword [rsp + 0x48]
0x0001a3b5      48c707000000.  mov qword [rdi], 0
0x0001a3bc      f6403810       test byte [rax + 0x38], 0x10
0x0001a3c0      0f85dd030000   jne 0x1a7a3
0x0001a3c6      4883bc247002.  cmp qword [rsp + 0x270], 1
0x0001a3cf      0f84ce030000   je 0x1a7a3
0x0001a3d5      488b442438     mov rax, qword [rsp + 0x38]
0x0001a3da      4531c0         xor r8d, r8d
0x0001a3dd      f680b0000000.  test byte [rax + 0xb0], 1
0x0001a3e4      740f           je 0x1a3f5
0x0001a3e6      4531c0         xor r8d, r8d
0x0001a3e9      4883b8980000.  cmp qword [rax + 0x98], 0
0x0001a3f1      410f9fc0       setg r8b
0x0001a3f5      488b9c24b800.  mov rbx, qword [rsp + 0xb8]
0x0001a3fd      488b94247002.  mov rdx, qword [rsp + 0x270]
0x0001a405      488b3424       mov rsi, qword [rsp]
0x0001a409      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0001a40e      4889d9         mov rcx, rbx
0x0001a411      e8fad3ffff     call sym.set_regs
0x0001a416      85c0           test eax, eax
0x0001a418      0f85cf020000   jne 0x1a6ed
0x0001a41e      488b03         mov rax, qword [rbx]
0x0001a421      440fb69c24ac.  movzx r11d, byte [rsp + 0x1ac]
0x0001a42a      4c8b94245001.  mov r10, qword [rsp + 0x150]
0x0001a432      31c9           xor ecx, ecx
0x0001a434      4c8b8c243801.  mov r9, qword [rsp + 0x138]
0x0001a43c      4c8b84245801.  mov r8, qword [rsp + 0x158]
0x0001a444      488bbc24d800.  mov rdi, qword [rsp + 0xd8]
0x0001a44c      488b9424b800.  mov rdx, qword [rsp + 0xb8]
0x0001a454      eb03           jmp 0x1a459
0x0001a456      488b02         mov rax, qword [rdx]
0x0001a459      4883f8ff       cmp rax, 0xffffffffffffffff
0x0001a45d      741a           je 0x1a479
0x0001a45f      4584db         test r11b, r11b
0x0001a462      488b7208       mov rsi, qword [rdx + 8]
0x0001a466      0f853e030000   jne 0x1a7aa
0x0001a46c      4801f8         add rax, rdi
0x0001a46f      4801fe         add rsi, rdi
0x0001a472      488902         mov qword [rdx], rax
0x0001a475      48897208       mov qword [rdx + 8], rsi
0x0001a479      4883c101       add rcx, 1
0x0001a47d      4883c210       add rdx, 0x10
0x0001a481      483b8c247002.  cmp rcx, qword [rsp + 0x270]
0x0001a489      75cb           jne 0x1a456
0x0001a48b      4883bc249800.  cmp qword [rsp + 0x98], 0
0x0001a494      7e3f           jle 0x1a4d5
0x0001a496      488b94249800.  mov rdx, qword [rsp + 0x98]
0x0001a49e      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x0001a4a6      4889c8         mov rax, rcx
0x0001a4a9      48c1e004       shl rax, 4
0x0001a4ad      4801ca         add rdx, rcx
0x0001a4b0      488d440708     lea rax, [rdi + rax + 8]
0x0001a4b5      48c1e204       shl rdx, 4
0x0001a4b9      488d741708     lea rsi, [rdi + rdx + 8]
0x0001a4be      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0001a4c5      488950f8       mov qword [rax - 8], rdx
0x0001a4c9      488910         mov qword [rax], rdx
0x0001a4cc      4883c010       add rax, 0x10
0x0001a4d0      4839c6         cmp rsi, rax
0x0001a4d3      75f0           jne 0x1a4c5
0x0001a4d5      488b442438     mov rax, qword [rsp + 0x38]
0x0001a4da      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0001a4e2      4c8b88e00000.  mov r9, qword [rax + 0xe0]
0x0001a4e9      4d85c9         test r9, r9
0x0001a4ec      0f8426f7ffff   je 0x19c18
0x0001a4f2      4c8b9424b800.  mov r10, qword [rsp + 0xb8]
0x0001a4fa      4531c0         xor r8d, r8d
0x0001a4fd      498d5210       lea rdx, [r10 + 0x10]
0x0001a501      eb36           jmp 0x1a539
0x0001a503      498b44f1f8     mov rax, qword [r9 + rsi*8 - 8]
0x0001a508      4c39c0         cmp rax, r8
0x0001a50b      7425           je 0x1a532
0x0001a50d      4883c001       add rax, 1
0x0001a511      48c1e004       shl rax, 4
0x0001a515      498b0402       mov rax, qword [r10 + rax]
0x0001a519      488902         mov qword [rdx], rax
0x0001a51c      498b44f1f8     mov rax, qword [r9 + rsi*8 - 8]
0x0001a521      4883c001       add rax, 1
0x0001a525      48c1e004       shl rax, 4
0x0001a529      498b440208     mov rax, qword [r10 + rax + 8]
0x0001a52e      48894208       mov qword [rdx + 8], rax
0x0001a532      4883c210       add rdx, 0x10
0x0001a536      4989f0         mov r8, rsi
0x0001a539      498d7001       lea rsi, [r8 + 1]
0x0001a53d      4839ce         cmp rsi, rcx
0x0001a540      75c1           jne 0x1a503
0x0001a542      e9d1f6ffff     jmp 0x19c18
0x0001a547      660f1f840000.  nop word [rax + rax]
0x0001a550      488b3c24       mov rdi, qword [rsp]
0x0001a554      e8d77fffff     call sym.match_ctx_clean
0x0001a559      488bbc241802.  mov rdi, qword [rsp + 0x218]
0x0001a561      e8aa84feff     call sym..plt.got
0x0001a566      488bbc24f801.  mov rdi, qword [rsp + 0x1f8]
0x0001a56e      e89d84feff     call sym..plt.got
0x0001a573      e9b8f6ffff     jmp 0x19c30
0x0001a578      488b442438     mov rax, qword [rsp + 0x38]
0x0001a57d      f680b0000000.  test byte [rax + 0xb0], 2
0x0001a584      0f85cfeeffff   jne 0x19459
0x0001a58a      48c78424d801.  mov qword [rsp + 0x1d8], 0
0x0001a596      e9faeeffff     jmp 0x19495
0x0001a59b      4c89e7         mov rdi, r12
0x0001a59e      e86d84feff     call sym..plt.got
0x0001a5a3      4889ef         mov rdi, rbp
0x0001a5a6      e86584feff     call sym..plt.got
0x0001a5ab      e940faffff     jmp 0x19ff0
0x0001a5b0      48898424d800.  mov qword [rsp + 0xd8], rax
0x0001a5b8      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0001a5c0      c744245c0100.  mov dword [rsp + 0x5c], 1
0x0001a5c8      e94bf6ffff     jmp 0x19c18
0x0001a5cd      4885c0         test rax, rax
0x0001a5d0      4989c5         mov r13, rax
0x0001a5d3      0f85eff1ffff   jne 0x197c8
0x0001a5d9      e936f3ffff     jmp 0x19914
0x0001a5de      6690           nop
0x0001a5e0      4989c5         mov r13, rax
0x0001a5e3      e9e0f1ffff     jmp 0x197c8
0x0001a5e8      83f80c         cmp eax, 0xc
0x0001a5eb      0f843ffbffff   je 0x1a130
0x0001a5f1      488d0d788700.  lea rcx, obj.__PRETTY_FUNCTION__.7972   ; 0x22d70 ; "check_matching"
0x0001a5f8      488d35a18100.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x227a0 ; "../coreutils-8.31/lib/regexec.c"
0x0001a5ff      488d3d4a8200.  lea rdi, str.err____REG_ESPACE          ; 0x22850 ; "err == REG_ESPACE"
0x0001a606      ba6c040000     mov edx, 0x46c
0x0001a60b      e8f07ffeff     call sym.imp.__assert_fail
0x0001a610      41807e6800     cmp byte [r14 + 0x68], 0
0x0001a615      786f           js 0x1a686
0x0001a617      8b742458       mov esi, dword [rsp + 0x58]
0x0001a61b      488b442408     mov rax, qword [rsp + 8]
0x0001a620      85f6           test esi, esi
0x0001a622      4889442420     mov qword [rsp + 0x20], rax
0x0001a627      0f84f9f2ffff   je 0x19926
0x0001a62d      48c744243001.  mov qword [rsp + 0x30], 1
0x0001a636      e952f1ffff     jmp 0x1978d
0x0001a63b      4889df         mov rdi, rbx
0x0001a63e      c744245c0c00.  mov dword [rsp + 0x5c], 0xc             ; [0xc:4]=0
0x0001a646      e9cdf5ffff     jmp 0x19c18
0x0001a64b      498d5e10       lea rbx, [r14 + 0x10]
0x0001a64f      498d6e18       lea rbp, [r14 + 0x18]
0x0001a653      488b3c24       mov rdi, qword [rsp]
0x0001a657      31c9           xor ecx, ecx
0x0001a659      4889ea         mov rdx, rbp
0x0001a65c      4889de         mov rsi, rbx
0x0001a65f      e8cc9cffff     call sym.check_subexp_matching_top.isra.18
0x0001a664      85c0           test eax, eax
0x0001a666      898424d00000.  mov dword [rsp + 0xd0], eax
0x0001a66d      7549           jne 0x1a6b8
0x0001a66f      410fb64668     movzx eax, byte [r14 + 0x68]
0x0001a674      a840           test al, 0x40                           ; segment.PHDR
0x0001a676      0f85e4000000   jne 0x1a760
0x0001a67c      c644241800     mov byte [rsp + 0x18], 0
0x0001a681      e9edf0ffff     jmp 0x19773
0x0001a686      498b7610       mov rsi, qword [r14 + 0x10]
0x0001a68a      488b4c2408     mov rcx, qword [rsp + 8]
0x0001a68f      498d5618       lea rdx, [r14 + 0x18]
0x0001a693      488b3c24       mov rdi, qword [rsp]
0x0001a697      e8e49fffff     call sym.check_halt_state_context.isra.20
0x0001a69c      4885c0         test rax, rax
0x0001a69f      4889442430     mov qword [rsp + 0x30], rax
0x0001a6a4      0f84e3f0ffff   je 0x1978d
0x0001a6aa      e968ffffff     jmp 0x1a617
0x0001a6af      4c8b7360       mov r14, qword [rbx + 0x60]
0x0001a6b3      e918faffff     jmp 0x1a0d0
0x0001a6b8      4898           cdqe
0x0001a6ba      4889442420     mov qword [rsp + 0x20], rax
0x0001a6bf      e962f2ffff     jmp 0x19926
0x0001a6c4      4c8b742418     mov r14, qword [rsp + 0x18]
0x0001a6c9      4489f8         mov eax, r15d
0x0001a6cc      4c89e7         mov rdi, r12
0x0001a6cf      89442408       mov dword [rsp + 8], eax
0x0001a6d3      e83883feff     call sym..plt.got
0x0001a6d8      4c89f7         mov rdi, r14
0x0001a6db      e83083feff     call sym..plt.got
0x0001a6e0      8b442408       mov eax, dword [rsp + 8]
0x0001a6e4      83f801         cmp eax, 1
0x0001a6e7      0f8403f9ffff   je 0x19ff0
0x0001a6ed      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0001a6f5      8944245c       mov dword [rsp + 0x5c], eax
0x0001a6f9      e91af5ffff     jmp 0x19c18
0x0001a6fe      6690           nop
0x0001a700      a804           test al, 4
0x0001a702      0f8436f0ffff   je 0x1973e
0x0001a708      498b5650       mov rdx, qword [r14 + 0x50]
0x0001a70c      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0001a711      89c1           mov ecx, eax
0x0001a713      4889de         mov rsi, rbx
0x0001a716      e8d592ffff     call sym.re_acquire_state_context
0x0001a71b      4989c6         mov r14, rax
0x0001a71e      e9adf9ffff     jmp 0x1a0d0
0x0001a723      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x0001a728      488b4c2408     mov rcx, qword [rsp + 8]
0x0001a72d      4889ea         mov rdx, rbp
0x0001a730      4c89e6         mov rsi, r12
0x0001a733      4c89742420     mov qword [rsp + 0x20], r14
0x0001a738      4c89ff         mov rdi, r15
0x0001a73b      e87097ffff     call sym.merge_state_array
0x0001a740      4889ef         mov rdi, rbp
0x0001a743      89442408       mov dword [rsp + 8], eax
0x0001a747      e8c482feff     call sym..plt.got
0x0001a74c      8b442408       mov eax, dword [rsp + 8]
0x0001a750      85c0           test eax, eax
0x0001a752      0f84cafbffff   je 0x1a322
0x0001a758      4531f6         xor r14d, r14d
0x0001a75b      e96cffffff     jmp 0x1a6cc
0x0001a760      488b3c24       mov rdi, qword [rsp]
0x0001a764      4889ea         mov rdx, rbp
0x0001a767      4889de         mov rsi, rbx
0x0001a76a      e831dbffff     call sym.transit_state_bkref.isra.34
0x0001a76f      85c0           test eax, eax
0x0001a771      898424d00000.  mov dword [rsp + 0xd0], eax
0x0001a778      0f853affffff   jne 0x1a6b8
0x0001a77e      410fb64668     movzx eax, byte [r14 + 0x68]
0x0001a783      e9f4feffff     jmp 0x1a67c
0x0001a788      488bb424b800.  mov rsi, qword [rsp + 0xb8]
0x0001a790      488b8424c801.  mov rax, qword [rsp + 0x1c8]
0x0001a798      48c706000000.  mov qword [rsi], 0
0x0001a79f      48894608       mov qword [rsi + 8], rax
0x0001a7a3      31c0           xor eax, eax
0x0001a7a5      e977fcffff     jmp 0x1a421
0x0001a7aa      4939c2         cmp r10, rax
0x0001a7ad      741d           je 0x1a7cc
0x0001a7af      498b04c1       mov rax, qword [r9 + rax*8]
0x0001a7b3      4939f2         cmp r10, rsi
0x0001a7b6      488902         mov qword [rdx], rax
0x0001a7b9      7409           je 0x1a7c4
0x0001a7bb      498b34f1       mov rsi, qword [r9 + rsi*8]
0x0001a7bf      e9a8fcffff     jmp 0x1a46c
0x0001a7c4      4c89c6         mov rsi, r8
0x0001a7c7      e9a0fcffff     jmp 0x1a46c
0x0001a7cc      4c89c0         mov rax, r8
0x0001a7cf      ebe2           jmp 0x1a7b3
0x0001a7d1      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x0001a7d9      e9baeeffff     jmp 0x19698
0x0001a7de      488984246801.  mov qword [rsp + 0x168], rax
0x0001a7e6      e929f1ffff     jmp 0x19914
0x0001a7eb      e8707dfeff     call sym.imp.__stack_chk_fail
;-- update_cur_sifted_state:
0x0001a7f0      4157           push r15
0x0001a7f2      4156           push r14
0x0001a7f4      4889f8         mov rax, rdi
0x0001a7f7      4155           push r13
0x0001a7f9      4154           push r12
0x0001a7fb      4989f5         mov r13, rsi
0x0001a7fe      55             push rbp
0x0001a7ff      53             push rbx
0x0001a800      4889d5         mov rbp, rdx
0x0001a803      4889cb         mov rbx, rcx
0x0001a806      488d0cd50000.  lea rcx, [rdx*8]
0x0001a80e      4881eca80000.  sub rsp, 0xa8
0x0001a815      4c8ba0980000.  mov r12, qword [rax + 0x98]
0x0001a81c      488b80b80000.  mov rax, qword [rax + 0xb8]
0x0001a823      48897c2408     mov qword [rsp + 8], rdi
0x0001a828      48894c2418     mov qword [rsp + 0x18], rcx
0x0001a82d      64488b3c2528.  mov rdi, qword fs:[0x28]
0x0001a836      4889bc249800.  mov qword [rsp + 0x98], rdi
0x0001a83e      31ff           xor edi, edi
0x0001a840      488b14d0       mov rdx, qword [rax + rdx*8]
0x0001a844      c744245c0000.  mov dword [rsp + 0x5c], 0
0x0001a84c      488b4b08       mov rcx, qword [rbx + 8]
0x0001a850      4885d2         test rdx, rdx
0x0001a853      0f844f020000   je 0x1aaa8
0x0001a859      488d7a08       lea rdi, [rdx + 8]
0x0001a85d      4885c9         test rcx, rcx
0x0001a860      48897c2410     mov qword [rsp + 0x10], rdi
0x0001a865      7551           jne 0x1a8b8
0x0001a867      488b16         mov rdx, qword [rsi]
0x0001a86a      48c704ea0000.  mov qword [rdx + rbp*8], 0
0x0001a872      488b14e8       mov rdx, qword [rax + rbp*8]
0x0001a876      31c0           xor eax, eax
0x0001a878      f6426840       test byte [rdx + 0x68], 0x40
0x0001a87c      0f85dd000000   jne 0x1a95f
0x0001a882      660f1f440000   nop word [rax + rax]
0x0001a888      488bbc249800.  mov rdi, qword [rsp + 0x98]
0x0001a890      6448333c2528.  xor rdi, qword fs:[0x28]
0x0001a899      0f859c070000   jne 0x1b03b
0x0001a89f      4881c4a80000.  add rsp, 0xa8
0x0001a8a6      5b             pop rbx
0x0001a8a7      5d             pop rbp
0x0001a8a8      415c           pop r12
0x0001a8aa      415d           pop r13
0x0001a8ac      415e           pop r14
0x0001a8ae      415f           pop r15
0x0001a8b0      c3             ret
0x0001a8b1      0f1f80000000.  nop dword [rax]
0x0001a8b8      488d7c2460     lea rdi, [rsp + 0x60]
0x0001a8bd      4889da         mov rdx, rbx
0x0001a8c0      4c89e6         mov rsi, r12
0x0001a8c3      c74424600000.  mov dword [rsp + 0x60], 0
0x0001a8cb      e8e093ffff     call sym.re_acquire_state
0x0001a8d0      4889c2         mov rdx, rax
0x0001a8d3      8b442460       mov eax, dword [rsp + 0x60]
0x0001a8d7      85c0           test eax, eax
0x0001a8d9      75ad           jne 0x1a888
0x0001a8db      4c8b7a38       mov r15, qword [rdx + 0x38]
0x0001a8df      4c8d7238       lea r14, [rdx + 0x38]
0x0001a8e3      4d85ff         test r15, r15
0x0001a8e6      0f8404020000   je 0x1aaf0
0x0001a8ec      488b742410     mov rsi, qword [rsp + 0x10]
0x0001a8f1      4c89f2         mov rdx, r14
0x0001a8f4      4889df         mov rdi, rbx
0x0001a8f7      e8b488ffff     call sym.re_node_set_add_intersect
0x0001a8fc      85c0           test eax, eax
0x0001a8fe      8944245c       mov dword [rsp + 0x5c], eax
0x0001a902      7584           jne 0x1a888
0x0001a904      49837d2800     cmp qword [r13 + 0x28], 0
0x0001a909      0f8571020000   jne 0x1ab80
0x0001a90f      4c8b742418     mov r14, qword [rsp + 0x18]
0x0001a914      4d037500       add r14, qword [r13]
0x0001a918      488d7c245c     lea rdi, [rsp + 0x5c]
0x0001a91d      4889da         mov rdx, rbx
0x0001a920      4c89e6         mov rsi, r12
0x0001a923      e88893ffff     call sym.re_acquire_state
0x0001a928      498906         mov qword [r14], rax
0x0001a92b      8b44245c       mov eax, dword [rsp + 0x5c]
0x0001a92f      85c0           test eax, eax
0x0001a931      0f8551ffffff   jne 0x1a888
0x0001a937      48837c241000   cmp qword [rsp + 0x10], 0
0x0001a93d      0f8445ffffff   je 0x1a888
0x0001a943      488b442408     mov rax, qword [rsp + 8]
0x0001a948      488b80b80000.  mov rax, qword [rax + 0xb8]
0x0001a94f      488b14e8       mov rdx, qword [rax + rbp*8]
0x0001a953      31c0           xor eax, eax
0x0001a955      f6426840       test byte [rdx + 0x68], 0x40
0x0001a959      0f8429ffffff   je 0x1a888
0x0001a95f      488b442408     mov rax, qword [rsp + 8]
0x0001a964      31db           xor ebx, ebx
0x0001a966      488bb0c80000.  mov rsi, qword [rax + 0xc8]
0x0001a96d      4889f2         mov rdx, rsi
0x0001a970      4839d3         cmp rbx, rdx
0x0001a973      7d5e           jge 0x1a9d3
0x0001a975      488d0413       lea rax, [rbx + rdx]
0x0001a979      4889c1         mov rcx, rax
0x0001a97c      48c1e93f       shr rcx, 0x3f
0x0001a980      4801c1         add rcx, rax
0x0001a983      488b442408     mov rax, qword [rsp + 8]
0x0001a988      48d1f9         sar rcx, 1
0x0001a98b      488bb8d80000.  mov rdi, qword [rax + 0xd8]
0x0001a992      488d0489       lea rax, [rcx + rcx*4]
0x0001a996      483b6cc708     cmp rbp, qword [rdi + rax*8 + 8]
0x0001a99b      7e31           jle 0x1a9ce
0x0001a99d      e935010000     jmp 0x1aad7
0x0001a9a2      660f1f440000   nop word [rax + rax]
0x0001a9a8      488d140b       lea rdx, [rbx + rcx]
0x0001a9ac      4889d0         mov rax, rdx
0x0001a9af      48c1e83f       shr rax, 0x3f
0x0001a9b3      4801d0         add rax, rdx
0x0001a9b6      48d1f8         sar rax, 1
0x0001a9b9      488d1480       lea rdx, [rax + rax*4]
0x0001a9bd      4989c0         mov r8, rax
0x0001a9c0      483b6cd708     cmp rbp, qword [rdi + rdx*8 + 8]
0x0001a9c5      0f8f15010000   jg 0x1aae0
0x0001a9cb      4889c1         mov rcx, rax
0x0001a9ce      4839cb         cmp rbx, rcx
0x0001a9d1      7cd5           jl 0x1a9a8
0x0001a9d3      4839de         cmp rsi, rbx
0x0001a9d6      0f8ef4000000   jle 0x1aad0
0x0001a9dc      488d049b       lea rax, [rbx + rbx*4]
0x0001a9e0      488d34c50000.  lea rsi, [rax*8]
0x0001a9e8      488b442408     mov rax, qword [rsp + 8]
0x0001a9ed      4889742440     mov qword [rsp + 0x40], rsi
0x0001a9f2      488b80d80000.  mov rax, qword [rax + 0xd8]
0x0001a9f9      483b6c3008     cmp rbp, qword [rax + rsi + 8]
0x0001a9fe      0f85cc000000   jne 0x1aad0
0x0001aa04      4883fbff       cmp rbx, 0xffffffffffffffff
0x0001aa08      0f84c2000000   je 0x1aad0
0x0001aa0e      488b442408     mov rax, qword [rsp + 8]
0x0001aa13      48c744246000.  mov qword [rsp + 0x60], 0
0x0001aa1c      4c8ba0980000.  mov r12, qword [rax + 0x98]
0x0001aa23      488b442410     mov rax, qword [rsp + 0x10]
0x0001aa28      4883780800     cmp qword [rax + 8], 0
0x0001aa2d      0f8e9d000000   jle 0x1aad0
0x0001aa33      488d442460     lea rax, [rsp + 0x60]
0x0001aa38      48c744242000.  mov qword [rsp + 0x20], 0
0x0001aa41      48895c2448     mov qword [rsp + 0x48], rbx
0x0001aa46      4d89ef         mov r15, r13
0x0001aa49      4889442438     mov qword [rsp + 0x38], rax
0x0001aa4e      eb22           jmp 0x1aa72
0x0001aa50      3c04           cmp al, 4
0x0001aa52      0f8480030000   je 0x1add8
0x0001aa58      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0001aa5d      488344242001   add qword [rsp + 0x20], 1
0x0001aa63      488b442420     mov rax, qword [rsp + 0x20]
0x0001aa68      483b4108       cmp rax, qword [rcx + 8]
0x0001aa6c      0f8db9050000   jge 0x1b02b
0x0001aa72      488b442410     mov rax, qword [rsp + 0x10]
0x0001aa77      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0001aa7c      488b4010       mov rax, qword [rax + 0x10]
0x0001aa80      4c8b34f8       mov r14, qword [rax + rdi*8]
0x0001aa84      4c89f0         mov rax, r14
0x0001aa87      48c1e004       shl rax, 4
0x0001aa8b      49030424       add rax, qword [r12]
0x0001aa8f      4d3b7710       cmp r14, qword [r15 + 0x10]
0x0001aa93      0fb64008       movzx eax, byte [rax + 8]
0x0001aa97      75b7           jne 0x1aa50
0x0001aa99      493b6f18       cmp rbp, qword [r15 + 0x18]
0x0001aa9d      75b1           jne 0x1aa50
0x0001aa9f      ebb7           jmp 0x1aa58
0x0001aaa1      0f1f80000000.  nop dword [rax]
0x0001aaa8      4c8d34ed0000.  lea r14, [rbp*8]
0x0001aab0      4c0336         add r14, qword [rsi]
0x0001aab3      4885c9         test rcx, rcx
0x0001aab6      0f85b4000000   jne 0x1ab70
0x0001aabc      49c706000000.  mov qword [r14], 0
0x0001aac3      31c0           xor eax, eax
0x0001aac5      e9befdffff     jmp 0x1a888
0x0001aaca      660f1f440000   nop word [rax + rax]
0x0001aad0      31c0           xor eax, eax
0x0001aad2      e9b1fdffff     jmp 0x1a888
0x0001aad7      4989c8         mov r8, rcx
0x0001aada      4889d1         mov rcx, rdx
0x0001aadd      0f1f00         nop dword [rax]
0x0001aae0      498d5801       lea rbx, [r8 + 1]
0x0001aae4      4889ca         mov rdx, rcx
0x0001aae7      e984feffff     jmp 0x1a970
0x0001aaec      0f1f4000       nop dword [rax]
0x0001aaf0      488b7b08       mov rdi, qword [rbx + 8]
0x0001aaf4      48c742400000.  mov qword [rdx + 0x40], 0
0x0001aafc      4889542420     mov qword [rsp + 0x20], rdx
0x0001ab01      48897a38       mov qword [rdx + 0x38], rdi
0x0001ab05      48c1e703       shl rdi, 3
0x0001ab09      e8727cfeff     call sym.imp.malloc
0x0001ab0e      488b542420     mov rdx, qword [rsp + 0x20]
0x0001ab13      4885c0         test rax, rax
0x0001ab16      48894248       mov qword [rdx + 0x48], rax
0x0001ab1a      7447           je 0x1ab63
0x0001ab1c      48837b0800     cmp qword [rbx + 8], 0
0x0001ab21      c74424600000.  mov dword [rsp + 0x60], 0
0x0001ab29      7f13           jg 0x1ab3e
0x0001ab2b      e9bcfdffff     jmp 0x1a8ec
0x0001ab30      4983c701       add r15, 1
0x0001ab34      4c3b7b08       cmp r15, qword [rbx + 8]
0x0001ab38      0f8daefdffff   jge 0x1a8ec
0x0001ab3e      488b4310       mov rax, qword [rbx + 0x10]
0x0001ab42      4c89f7         mov rdi, r14
0x0001ab45      4a8b04f8       mov rax, qword [rax + r15*8]
0x0001ab49      488d1440       lea rdx, [rax + rax*2]
0x0001ab4d      498b442438     mov rax, qword [r12 + 0x38]
0x0001ab52      488d34d0       lea rsi, [rax + rdx*8]
0x0001ab56      e86580ffff     call sym.re_node_set_merge
0x0001ab5b      85c0           test eax, eax
0x0001ab5d      89442460       mov dword [rsp + 0x60], eax
0x0001ab61      74cd           je 0x1ab30
0x0001ab63      b80c000000     mov eax, 0xc
0x0001ab68      e91bfdffff     jmp 0x1a888
0x0001ab6d      0f1f00         nop dword [rax]
0x0001ab70      48c744241000.  mov qword [rsp + 0x10], 0
0x0001ab79      e99afdffff     jmp 0x1a918
0x0001ab7e      6690           nop
0x0001ab80      488b442408     mov rax, qword [rsp + 8]
0x0001ab85      488b80d80000.  mov rax, qword [rax + 0xd8]
0x0001ab8c      4889442420     mov qword [rsp + 0x20], rax
0x0001ab91      0f8ed4000000   jle 0x1ac6b
0x0001ab97      4531ff         xor r15d, r15d
0x0001ab9a      660f1f440000   nop word [rax + rax]
0x0001aba0      498b4530       mov rax, qword [r13 + 0x30]
0x0001aba4      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0001aba9      4a8b04f8       mov rax, qword [rax + r15*8]
0x0001abad      488d0480       lea rax, [rax + rax*4]
0x0001abb1      488d14c7       lea rdx, [rdi + rax*8]
0x0001abb5      483b6a10       cmp rbp, qword [rdx + 0x10]
0x0001abb9      0f8e9e000000   jle 0x1ac5d
0x0001abbf      483b6a08       cmp rbp, qword [rdx + 8]
0x0001abc3      0f8f94000000   jg 0x1ac5d
0x0001abc9      488b0a         mov rcx, qword [rdx]
0x0001abcc      498b0424       mov rax, qword [r12]
0x0001abd0      488b7308       mov rsi, qword [rbx + 8]
0x0001abd4      48c1e104       shl rcx, 4
0x0001abd8      483b6a18       cmp rbp, qword [rdx + 0x18]
0x0001abdc      4c8b0408       mov r8, qword [rax + rcx]
0x0001abe0      0f849a000000   je 0x1ac80
0x0001abe6      4531f6         xor r14d, r14d
0x0001abe9      4885f6         test rsi, rsi
0x0001abec      7e6f           jle 0x1ac5d
0x0001abee      48896c2428     mov qword [rsp + 0x28], rbp
0x0001abf3      4c89c5         mov rbp, r8
0x0001abf6      eb16           jmp 0x1ac0e
0x0001abf8      0f1f84000000.  nop dword [rax + rax]
0x0001ac00      4983c601       add r14, 1
0x0001ac04      4c3b7308       cmp r14, qword [rbx + 8]
0x0001ac08      7d4e           jge 0x1ac58
0x0001ac0a      498b0424       mov rax, qword [r12]
0x0001ac0e      488b5310       mov rdx, qword [rbx + 0x10]
0x0001ac12      4a8b34f2       mov rsi, qword [rdx + r14*8]
0x0001ac16      4889f2         mov rdx, rsi
0x0001ac19      48c1e204       shl rdx, 4
0x0001ac1d      4801d0         add rax, rdx
0x0001ac20      0fb65008       movzx edx, byte [rax + 8]
0x0001ac24      83ea08         sub edx, 8
0x0001ac27      83fa01         cmp edx, 1
0x0001ac2a      77d4           ja 0x1ac00
0x0001ac2c      483b28         cmp rbp, qword [rax]
0x0001ac2f      75cf           jne 0x1ac00
0x0001ac31      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0001ac36      4889da         mov rdx, rbx
0x0001ac39      4c89e7         mov rdi, r12
0x0001ac3c      e8afa2ffff     call sym.sub_epsilon_src_nodes
0x0001ac41      85c0           test eax, eax
0x0001ac43      0f853ffcffff   jne 0x1a888
0x0001ac49      4983c601       add r14, 1
0x0001ac4d      4c3b7308       cmp r14, qword [rbx + 8]
0x0001ac51      7cb7           jl 0x1ac0a
0x0001ac53      0f1f440000     nop dword [rax + rax]
0x0001ac58      488b6c2428     mov rbp, qword [rsp + 0x28]
0x0001ac5d      4983c701       add r15, 1
0x0001ac61      4d3b7d28       cmp r15, qword [r13 + 0x28]
0x0001ac65      0f8c35ffffff   jl 0x1aba0
0x0001ac6b      c744245c0000.  mov dword [rsp + 0x5c], 0
0x0001ac73      e997fcffff     jmp 0x1a90f
0x0001ac78      0f1f84000000.  nop dword [rax + rax]
0x0001ac80      4885f6         test rsi, rsi
0x0001ac83      7ed8           jle 0x1ac5d
0x0001ac85      4c8b5310       mov r10, qword [rbx + 0x10]
0x0001ac89      49c7c1ffffff.  mov r9, 0xffffffffffffffff
0x0001ac90      4d8d1cf2       lea r11, [r10 + rsi*8]
0x0001ac94      4c89d1         mov rcx, r10
0x0001ac97      4c89ce         mov rsi, r9
0x0001ac9a      eb1a           jmp 0x1acb6
0x0001ac9c      0f1f4000       nop dword [rax]
0x0001aca0      4183fe09       cmp r14d, 9
0x0001aca4      7507           jne 0x1acad
0x0001aca6      4c3b02         cmp r8, qword [rdx]
0x0001aca9      4c0f44cf       cmove r9, rdi
0x0001acad      4883c108       add rcx, 8
0x0001acb1      4939cb         cmp r11, rcx
0x0001acb4      7428           je 0x1acde
0x0001acb6      488b39         mov rdi, qword [rcx]
0x0001acb9      4889fa         mov rdx, rdi
0x0001acbc      48c1e204       shl rdx, 4
0x0001acc0      4801c2         add rdx, rax
0x0001acc3      440fb67208     movzx r14d, byte [rdx + 8]
0x0001acc8      4183fe08       cmp r14d, 8
0x0001accc      75d2           jne 0x1aca0
0x0001acce      4c3b02         cmp r8, qword [rdx]
0x0001acd1      480f44f7       cmove rsi, rdi
0x0001acd5      4883c108       add rcx, 8
0x0001acd9      4939cb         cmp r11, rcx
0x0001acdc      75d8           jne 0x1acb6
0x0001acde      4885f6         test rsi, rsi
0x0001ace1      4d89ce         mov r14, r9
0x0001ace4      4c894c2428     mov qword [rsp + 0x28], r9
0x0001ace9      0f88c1000000   js 0x1adb0
0x0001acef      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0001acf4      4889da         mov rdx, rbx
0x0001acf7      4c89e7         mov rdi, r12
0x0001acfa      e8f1a1ffff     call sym.sub_epsilon_src_nodes
0x0001acff      85c0           test eax, eax
0x0001ad01      0f8581fbffff   jne 0x1a888
0x0001ad07      4d85f6         test r14, r14
0x0001ad0a      0f884dffffff   js 0x1ac5d
0x0001ad10      48837b0800     cmp qword [rbx + 8], 0
0x0001ad15      0f8e42ffffff   jle 0x1ac5d
0x0001ad1b      4c8b5310       mov r10, qword [rbx + 0x10]
0x0001ad1f      4531f6         xor r14d, r14d
0x0001ad22      48896c2430     mov qword [rsp + 0x30], rbp
0x0001ad27      4c89f5         mov rbp, r14
0x0001ad2a      4c8b742428     mov r14, qword [rsp + 0x28]
0x0001ad2f      eb19           jmp 0x1ad4a
0x0001ad31      0f1f80000000.  nop dword [rax]
0x0001ad38      4883c501       add rbp, 1
0x0001ad3c      483b6b08       cmp rbp, qword [rbx + 8]
0x0001ad40      0f8d82000000   jge 0x1adc8
0x0001ad46      4c8b5310       mov r10, qword [rbx + 0x10]
0x0001ad4a      4d8b14ea       mov r10, qword [r10 + rbp*8]
0x0001ad4e      498b442438     mov rax, qword [r12 + 0x38]
0x0001ad53      4c89f2         mov rdx, r14
0x0001ad56      4f8d0c52       lea r9, [r10 + r10*2]
0x0001ad5a      49c1e103       shl r9, 3
0x0001ad5e      4c01c8         add rax, r9
0x0001ad61      488b7808       mov rdi, qword [rax + 8]
0x0001ad65      488d7010       lea rsi, [rax + 0x10]
0x0001ad69      e83279ffff     call sym.re_node_set_contains.isra.3
0x0001ad6e      4885c0         test rax, rax
0x0001ad71      75c5           jne 0x1ad38
0x0001ad73      4d034c2430     add r9, qword [r12 + 0x30]
0x0001ad78      498b7908       mov rdi, qword [r9 + 8]
0x0001ad7c      498d7110       lea rsi, [r9 + 0x10]
0x0001ad80      e81b79ffff     call sym.re_node_set_contains.isra.3
0x0001ad85      4885c0         test rax, rax
0x0001ad88      75ae           jne 0x1ad38
0x0001ad8a      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0001ad8f      4889da         mov rdx, rbx
0x0001ad92      4c89d6         mov rsi, r10
0x0001ad95      4c89e7         mov rdi, r12
0x0001ad98      e853a1ffff     call sym.sub_epsilon_src_nodes
0x0001ad9d      85c0           test eax, eax
0x0001ad9f      0f85e3faffff   jne 0x1a888
0x0001ada5      4883ed01       sub rbp, 1
0x0001ada9      eb8d           jmp 0x1ad38
0x0001adab      0f1f440000     nop dword [rax + rax]
0x0001adb0      48837c242800   cmp qword [rsp + 0x28], 0
0x0001adb6      0f8963ffffff   jns 0x1ad1f
0x0001adbc      e99cfeffff     jmp 0x1ac5d
0x0001adc1      0f1f80000000.  nop dword [rax]
0x0001adc8      488b6c2430     mov rbp, qword [rsp + 0x30]
0x0001adcd      e98bfeffff     jmp 0x1ac5d
0x0001add2      660f1f440000   nop word [rax + rax]
0x0001add8      488b442408     mov rax, qword [rsp + 8]
0x0001addd      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x0001ade2      488b5c2448     mov rbx, qword [rsp + 0x48]
0x0001ade7      4c03a8d80000.  add r13, qword [rax + 0xd8]
0x0001adee      4b8d0476       lea rax, [r14 + r14*2]
0x0001adf2      48c1e003       shl rax, 3
0x0001adf6      4889442430     mov qword [rsp + 0x30], rax
0x0001adfb      4a8d04f50000.  lea rax, [r14*8]
0x0001ae03      4889442428     mov qword [rsp + 0x28], rax
0x0001ae08      4c89f8         mov rax, r15
0x0001ae0b      4d89ef         mov r15, r13
0x0001ae0e      4989dd         mov r13, rbx
0x0001ae11      4889c3         mov rbx, rax
0x0001ae14      e965010000     jmp 0x1af7e
0x0001ae19      0f1f80000000.  nop dword [rax]
0x0001ae20      498b4718       mov rax, qword [r15 + 0x18]
0x0001ae24      492b4710       sub rax, qword [r15 + 0x10]
0x0001ae28      4885c0         test rax, rax
0x0001ae2b      4c8d4c0500     lea r9, [rbp + rax]
0x0001ae30      0f845a010000   je 0x1af90
0x0001ae36      498b442418     mov rax, qword [r12 + 0x18]
0x0001ae3b      488b742428     mov rsi, qword [rsp + 0x28]
0x0001ae40      4c8b1430       mov r10, qword [rax + rsi]
0x0001ae44      4c3b4b18       cmp r9, qword [rbx + 0x18]
0x0001ae48      0f8f39010000   jg 0x1af87
0x0001ae4e      488b03         mov rax, qword [rbx]
0x0001ae51      4a8b04c8       mov rax, qword [rax + r9*8]
0x0001ae55      4885c0         test rax, rax
0x0001ae58      0f8429010000   je 0x1af87
0x0001ae5e      488b7810       mov rdi, qword [rax + 0x10]
0x0001ae62      488d7018       lea rsi, [rax + 0x18]
0x0001ae66      4c89d2         mov rdx, r10
0x0001ae69      e83278ffff     call sym.re_node_set_contains.isra.3
0x0001ae6e      4885c0         test rax, rax
0x0001ae71      0f8410010000   je 0x1af87
0x0001ae77      4883ec08       sub rsp, 8
0x0001ae7b      488d5330       lea rdx, [rbx + 0x30]
0x0001ae7f      488d7328       lea rsi, [rbx + 0x28]
0x0001ae83      4151           push r9
0x0001ae85      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0001ae8a      4c89f1         mov rcx, r14
0x0001ae8d      4d89d1         mov r9, r10
0x0001ae90      4989e8         mov r8, rbp
0x0001ae93      e8b87affff     call sym.check_dst_limits.isra.13
0x0001ae98      84c0           test al, al
0x0001ae9a      5a             pop rdx
0x0001ae9b      59             pop rcx
0x0001ae9c      0f85e5000000   jne 0x1af87
0x0001aea2      48837c246000   cmp qword [rsp + 0x60], 0
0x0001aea8      0f840a010000   je 0x1afb8
0x0001aeae      488b442438     mov rax, qword [rsp + 0x38]
0x0001aeb3      4c89ee         mov rsi, r13
0x0001aeb6      4c89742470     mov qword [rsp + 0x70], r14
0x0001aebb      48896c2478     mov qword [rsp + 0x78], rbp
0x0001aec0      488d7820       lea rdi, [rax + 0x20]
0x0001aec4      e89762ffff     call sym.re_node_set_insert
0x0001aec9      84c0           test al, al
0x0001aecb      0f8453010000   je 0x1b024
0x0001aed1      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0001aed6      488b442460     mov rax, qword [rsp + 0x60]
0x0001aedb      488b742438     mov rsi, qword [rsp + 0x38]
0x0001aee0      4c8b3c38       mov r15, qword [rax + rdi]
0x0001aee4      488b7c2408     mov rdi, qword [rsp + 8]
0x0001aee9      e892deffff     call sym.sift_states_backward
0x0001aeee      85c0           test eax, eax
0x0001aef0      0f8508010000   jne 0x1affe
0x0001aef6      488b7308       mov rsi, qword [rbx + 8]
0x0001aefa      488b542460     mov rdx, qword [rsp + 0x60]
0x0001aeff      4885f6         test rsi, rsi
0x0001af02      7419           je 0x1af1d
0x0001af04      488d4d01       lea rcx, [rbp + 1]
0x0001af08      4c89e7         mov rdi, r12
0x0001af0b      e8a08fffff     call sym.merge_state_array
0x0001af10      85c0           test eax, eax
0x0001af12      0f85e6000000   jne 0x1affe
0x0001af18      488b542460     mov rdx, qword [rsp + 0x60]
0x0001af1d      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0001af22      488b442418     mov rax, qword [rsp + 0x18]
0x0001af27      488bbc248800.  mov rdi, qword [rsp + 0x88]
0x0001af2f      4d8d4b30       lea r9, [r11 + 0x30]
0x0001af33      4c893c02       mov qword [rdx + rax], r15
0x0001af37      4c89ea         mov rdx, r13
0x0001af3a      4c89ce         mov rsi, r9
0x0001af3d      e85e77ffff     call sym.re_node_set_contains.isra.3
0x0001af42      4883e801       sub rax, 1
0x0001af46      4889c2         mov rdx, rax
0x0001af49      780c           js 0x1af57
0x0001af4b      498d7b28       lea rdi, [r11 + 0x28]
0x0001af4f      4c89ce         mov rsi, r9
0x0001af52      e8c978ffff     call sym.re_node_set_remove_at.isra.4.part.5
0x0001af57      488b4c2408     mov rcx, qword [rsp + 8]
0x0001af5c      4b8d44ad00     lea rax, [r13 + r13*4]
0x0001af61      488b91d80000.  mov rdx, qword [rcx + 0xd8]
0x0001af68      488d04c2       lea rax, [rdx + rax*8]
0x0001af6c      0f1f4000       nop dword [rax]
0x0001af70      4983c501       add r13, 1
0x0001af74      80782000       cmp byte [rax + 0x20], 0
0x0001af78      4c8d7828       lea r15, [rax + 0x28]
0x0001af7c      7432           je 0x1afb0
0x0001af7e      4d3b37         cmp r14, qword [r15]
0x0001af81      0f8499feffff   je 0x1ae20
0x0001af87      4c89f8         mov rax, r15
0x0001af8a      ebe4           jmp 0x1af70
0x0001af8c      0f1f4000       nop dword [rax]
0x0001af90      498b442428     mov rax, qword [r12 + 0x28]
0x0001af95      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0001af9a      488b443810     mov rax, qword [rax + rdi + 0x10]
0x0001af9f      4c8b10         mov r10, qword [rax]
0x0001afa2      e99dfeffff     jmp 0x1ae44
0x0001afa7      660f1f840000.  nop word [rax + rax]
0x0001afb0      4989df         mov r15, rbx
0x0001afb3      e9a0faffff     jmp 0x1aa58
0x0001afb8      488b4330       mov rax, qword [rbx + 0x30]
0x0001afbc      488d7320       lea rsi, [rbx + 0x20]
0x0001afc0      660f6f03       movdqa xmm0, xmmword [rbx]
0x0001afc4      488984249000.  mov qword [rsp + 0x90], rax
0x0001afcc      488b442438     mov rax, qword [rsp + 0x38]
0x0001afd1      0f29442460     movaps xmmword [rsp + 0x60], xmm0
0x0001afd6      488d7820       lea rdi, [rax + 0x20]
0x0001afda      660f6f4310     movdqa xmm0, xmmword [rbx + 0x10]
0x0001afdf      0f29442470     movaps xmmword [rsp + 0x70], xmm0
0x0001afe4      660f6f4320     movdqa xmm0, xmmword [rbx + 0x20]
0x0001afe9      0f2984248000.  movaps xmmword [rsp + 0x80], xmm0
0x0001aff1      e80a88ffff     call sym.re_node_set_init_copy
0x0001aff6      85c0           test eax, eax
0x0001aff8      0f84b0feffff   je 0x1aeae
0x0001affe      48837c246000   cmp qword [rsp + 0x60], 0
0x0001b004      0f847ef8ffff   je 0x1a888
0x0001b00a      488bbc249000.  mov rdi, qword [rsp + 0x90]
0x0001b012      89442408       mov dword [rsp + 8], eax
0x0001b016      e8f579feff     call sym..plt.got
0x0001b01b      8b442408       mov eax, dword [rsp + 8]
0x0001b01f      e964f8ffff     jmp 0x1a888
0x0001b024      b80c000000     mov eax, 0xc
0x0001b029      ebd3           jmp 0x1affe
0x0001b02b      48837c246000   cmp qword [rsp + 0x60], 0
0x0001b031      0f8499faffff   je 0x1aad0
0x0001b037      31c0           xor eax, eax
0x0001b039      ebcf           jmp 0x1b00a
0x0001b03b      e82075feff     call sym.imp.__stack_chk_fail
;-- parse_bracket_element.constprop.37:
0x0001b040      4156           push r14
0x0001b042      4155           push r13
0x0001b044      4989f2         mov r10, rsi
0x0001b047      4154           push r12
0x0001b049      55             push rbp
0x0001b04a      4c63d9         movsxd r11, ecx
0x0001b04d      53             push rbx
0x0001b04e      4889d5         mov rbp, rdx
0x0001b051      4889fb         mov rbx, rdi
0x0001b054      4883ec20       sub rsp, 0x20
0x0001b058      4c8b6648       mov r12, qword [rsi + 0x48]
0x0001b05c      64488b042528.  mov rax, qword fs:[0x28]
0x0001b065      4889442418     mov qword [rsp + 0x18], rax
0x0001b06a      31c0           xor eax, eax
0x0001b06c      83be90000000.  cmp dword [rsi + 0x90], 1
0x0001b073      7453           je 0x1b0c8
0x0001b075      4c89e6         mov rsi, r12
0x0001b078      4c89d7         mov rdi, r10
0x0001b07b      e87075ffff     call sym.re_string_char_size_at.part.0
0x0001b080      83f801         cmp eax, 1
0x0001b083      7e43           jle 0x1b0c8
0x0001b085      498b5210       mov rdx, qword [r10 + 0x10]
0x0001b089      4898           cdqe
0x0001b08b      c70301000000   mov dword [rbx], 1
0x0001b091      4c01e0         add rax, r12
0x0001b094      428b14a2       mov edx, dword [rdx + r12*4]
0x0001b098      895308         mov dword [rbx + 8], edx
0x0001b09b      49894248       mov qword [r10 + 0x48], rax
0x0001b09f      31c0           xor eax, eax
0x0001b0a1      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0001b0a6      6448330c2528.  xor rcx, qword fs:[0x28]
0x0001b0af      0f85e3010000   jne 0x1b298
0x0001b0b5      4883c420       add rsp, 0x20
0x0001b0b9      5b             pop rbx
0x0001b0ba      5d             pop rbp
0x0001b0bb      415c           pop r12
0x0001b0bd      415d           pop r13
0x0001b0bf      415e           pop r14
0x0001b0c1      c3             ret
0x0001b0c2      660f1f440000   nop word [rax + rax]
0x0001b0c8      0fb64508       movzx eax, byte [rbp + 8]
0x0001b0cc      4d01e3         add r11, r12
0x0001b0cf      4d895a48       mov qword [r10 + 0x48], r11
0x0001b0d3      89c2           mov edx, eax
0x0001b0d5      83e2fb         and edx, 0xfffffffb                     ; 4294967291
0x0001b0d8      80fa1a         cmp dl, 0x1a
0x0001b0db      7423           je 0x1b100
0x0001b0dd      3c1c           cmp al, 0x1c
0x0001b0df      741f           je 0x1b100
0x0001b0e1      3c16           cmp al, 0x16
0x0001b0e3      7509           jne 0x1b0ee
0x0001b0e5      4584c9         test r9b, r9b
0x0001b0e8      0f8444010000   je 0x1b232
0x0001b0ee      0fb64500       movzx eax, byte [rbp]
0x0001b0f2      c70300000000   mov dword [rbx], 0
0x0001b0f8      884308         mov byte [rbx + 8], al
0x0001b0fb      31c0           xor eax, eax
0x0001b0fd      eba2           jmp 0x1b0a1
0x0001b0ff      90             nop
0x0001b100      4d8b6268       mov r12, qword [r10 + 0x68]
0x0001b104      4d39e3         cmp r11, r12
0x0001b107      0f8d1b010000   jge 0x1b228
0x0001b10d      440fb66d00     movzx r13d, byte [rbp]
0x0001b112      4531c0         xor r8d, r8d
0x0001b115      eb2b           jmp 0x1b142
0x0001b117      660f1f840000.  nop word [rax + rax]
0x0001b120      488b4308       mov rax, qword [rbx + 8]
0x0001b124      46880c00       mov byte [rax + r8], r9b
0x0001b128      4983c001       add r8, 1
0x0001b12c      4983f820       cmp r8, 0x20                            ; "@"
0x0001b130      0f84f2000000   je 0x1b228
0x0001b136      0fb64508       movzx eax, byte [rbp + 8]
0x0001b13a      4d8b5a48       mov r11, qword [r10 + 0x48]
0x0001b13e      4d8b6268       mov r12, qword [r10 + 0x68]
0x0001b142      3c1e           cmp al, 0x1e
0x0001b144      4d63f0         movsxd r14, r8d
0x0001b147      7467           je 0x1b1b0
0x0001b149      498b5208       mov rdx, qword [r10 + 8]
0x0001b14d      498d4301       lea rax, [r11 + 1]
0x0001b151      49894248       mov qword [r10 + 0x48], rax
0x0001b155      460fb60c1a     movzx r9d, byte [rdx + r11]
0x0001b15a      4c39e0         cmp rax, r12
0x0001b15d      0f8dc5000000   jge 0x1b228
0x0001b163      4538cd         cmp r13b, r9b
0x0001b166      75b8           jne 0x1b120
0x0001b168      498b5208       mov rdx, qword [r10 + 8]
0x0001b16c      803c025d       cmp byte [rdx + rax], 0x5d
0x0001b170      75ae           jne 0x1b120
0x0001b172      4883c001       add rax, 1
0x0001b176      49894248       mov qword [r10 + 0x48], rax
0x0001b17a      488b4308       mov rax, qword [rbx + 8]
0x0001b17e      42c6043000     mov byte [rax + r14], 0
0x0001b183      0fb64508       movzx eax, byte [rbp + 8]
0x0001b187      3c1c           cmp al, 0x1c
0x0001b189      0f84fc000000   je 0x1b28b
0x0001b18f      3c1e           cmp al, 0x1e
0x0001b191      0f84e7000000   je 0x1b27e
0x0001b197      3c1a           cmp al, 0x1a
0x0001b199      0f84d2000000   je 0x1b271
0x0001b19f      31c0           xor eax, eax
0x0001b1a1      e9fbfeffff     jmp 0x1b0a1
0x0001b1a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0001b1b0      4180ba8b0000.  cmp byte [r10 + 0x8b], 0
0x0001b1b8      748f           je 0x1b149
0x0001b1ba      4180ba8c0000.  cmp byte [r10 + 0x8c], 0
0x0001b1c2      0f8490000000   je 0x1b258
0x0001b1c8      4d3b5a30       cmp r11, qword [r10 + 0x30]
0x0001b1cc      740f           je 0x1b1dd
0x0001b1ce      498b4210       mov rax, qword [r10 + 0x10]
0x0001b1d2      42833c98ff     cmp dword [rax + r11*4], 0xffffffff
0x0001b1d7      0f846cffffff   je 0x1b149
0x0001b1dd      498b4218       mov rax, qword [r10 + 0x18]
0x0001b1e1      4a8b04d8       mov rax, qword [rax + r11*8]
0x0001b1e5      490302         add rax, qword [r10]
0x0001b1e8      49034228       add rax, qword [r10 + 0x28]
0x0001b1ec      440fb608       movzx r9d, byte [rax]
0x0001b1f0      41f6c180       test r9b, 0x80
0x0001b1f4      0f854fffffff   jne 0x1b149
0x0001b1fa      4183ba900000.  cmp dword [r10 + 0x90], 1
0x0001b202      b801000000     mov eax, 1
0x0001b207      740d           je 0x1b216
0x0001b209      4c89de         mov rsi, r11
0x0001b20c      4c89d7         mov rdi, r10
0x0001b20f      e8dc73ffff     call sym.re_string_char_size_at.part.0
0x0001b214      4898           cdqe
0x0001b216      4c01d8         add rax, r11
0x0001b219      49894248       mov qword [r10 + 0x48], rax
0x0001b21d      e938ffffff     jmp 0x1b15a
0x0001b222      660f1f440000   nop word [rax + rax]
0x0001b228      b807000000     mov eax, 7
0x0001b22d      e96ffeffff     jmp 0x1b0a1
0x0001b232      4889e7         mov rdi, rsp
0x0001b235      4c89c2         mov rdx, r8
0x0001b238      4c89d6         mov rsi, r10
0x0001b23b      e85059ffff     call sym.peek_token_bracket
0x0001b240      807c240815     cmp byte [rsp + 8], 0x15
0x0001b245      b80b000000     mov eax, 0xb
0x0001b24a      0f849efeffff   je 0x1b0ee
0x0001b250      e94cfeffff     jmp 0x1b0a1
0x0001b255      0f1f00         nop dword [rax]
0x0001b258      498d4301       lea rax, [r11 + 1]
0x0001b25c      4d031a         add r11, qword [r10]
0x0001b25f      498b5228       mov rdx, qword [r10 + 0x28]
0x0001b263      49894248       mov qword [r10 + 0x48], rax
0x0001b267      450fb60c13     movzx r9d, byte [r11 + rdx]
0x0001b26c      e9e9feffff     jmp 0x1b15a
0x0001b271      c70303000000   mov dword [rbx], 3
0x0001b277      31c0           xor eax, eax
0x0001b279      e923feffff     jmp 0x1b0a1
0x0001b27e      c70304000000   mov dword [rbx], 4
0x0001b284      31c0           xor eax, eax
0x0001b286      e916feffff     jmp 0x1b0a1
0x0001b28b      c70302000000   mov dword [rbx], 2
0x0001b291      31c0           xor eax, eax
0x0001b293      e909feffff     jmp 0x1b0a1
0x0001b298      e8c372feff     call sym.imp.__stack_chk_fail
0x0001b29d      0f1f00         nop dword [rax]
;-- peek_token:
0x0001b2a0      4157           push r15
0x0001b2a2      4156           push r14
0x0001b2a4      4155           push r13
0x0001b2a6      4154           push r12
0x0001b2a8      55             push rbp
0x0001b2a9      53             push rbx
0x0001b2aa      4889fd         mov rbp, rdi
0x0001b2ad      4883ec38       sub rsp, 0x38
0x0001b2b1      4c8b7648       mov r14, qword [rsi + 0x48]
0x0001b2b5      64488b042528.  mov rax, qword fs:[0x28]
0x0001b2be      4889442428     mov qword [rsp + 0x28], rax
0x0001b2c3      31c0           xor eax, eax
0x0001b2c5      4c397668       cmp qword [rsi + 0x68], r14
0x0001b2c9      0f8e91000000   jle 0x1b360
0x0001b2cf      440fb66f0a     movzx r13d, byte [rdi + 0xa]
0x0001b2d4      4989d7         mov r15, rdx
0x0001b2d7      488b5608       mov rdx, qword [rsi + 8]
0x0001b2db      4889f3         mov rbx, rsi
0x0001b2de      460fb62432     movzx r12d, byte [rdx + r14]
0x0001b2e3      4183e59f       and r13d, 0xffffff9f                    ; 4294967199
0x0001b2e7      44886f0a       mov byte [rdi + 0xa], r13b
0x0001b2eb      8b8690000000   mov eax, dword [rsi + 0x90]
0x0001b2f1      448827         mov byte [rdi], r12b
0x0001b2f4      83f801         cmp eax, 1
0x0001b2f7      0f8e93000000   jle 0x1b390
0x0001b2fd      4c3b7630       cmp r14, qword [rsi + 0x30]
0x0001b301      0f8499010000   je 0x1b4a0
0x0001b307      488b4e10       mov rcx, qword [rsi + 0x10]
0x0001b30b      428b0cb1       mov ecx, dword [rcx + r14*4]
0x0001b30f      83f9ff         cmp ecx, 0xffffffff
0x0001b312      0f84d8000000   je 0x1b3f0
0x0001b318      4180fc5c       cmp r12b, 0x5c
0x0001b31c      0f84ee000000   je 0x1b410
0x0001b322      c6470801       mov byte [rdi + 8], 1
0x0001b326      89cf           mov edi, ecx
0x0001b328      4889542408     mov qword [rsp + 8], rdx
0x0001b32d      890c24         mov dword [rsp], ecx
0x0001b330      e83b74feff     call sym.imp.iswalnum
0x0001b335      8b0c24         mov ecx, dword [rsp]
0x0001b338      85c0           test eax, eax
0x0001b33a      0f95c0         setne al
0x0001b33d      83f95f         cmp ecx, 0x5f
0x0001b340      0f94c1         sete cl
0x0001b343      09c8           or eax, ecx
0x0001b345      c1e006         shl eax, 6
0x0001b348      4109c5         or r13d, eax
0x0001b34b      44886d0a       mov byte [rbp + 0xa], r13b
0x0001b34f      488b542408     mov rdx, qword [rsp + 8]
0x0001b354      eb76           jmp 0x1b3cc
0x0001b356      662e0f1f8400.  nop word cs:[rax + rax]
0x0001b360      c6470802       mov byte [rdi + 8], 2
0x0001b364      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0001b369      6448333c2528.  xor rdi, qword fs:[0x28]
0x0001b372      0f8520060000   jne 0x1b998
0x0001b378      4883c438       add rsp, 0x38
0x0001b37c      5b             pop rbx
0x0001b37d      5d             pop rbp
0x0001b37e      415c           pop r12
0x0001b380      415d           pop r13
0x0001b382      415e           pop r14
0x0001b384      415f           pop r15
0x0001b386      c3             ret
0x0001b387      660f1f840000.  nop word [rax + rax]
0x0001b390      4180fc5c       cmp r12b, 0x5c
0x0001b394      747a           je 0x1b410
0x0001b396      c6450801       mov byte [rbp + 8], 1
0x0001b39a      48891424       mov qword [rsp], rdx
0x0001b39e      e84d76feff     call sym.imp.__ctype_b_loc
0x0001b3a3      488b30         mov rsi, qword [rax]
0x0001b3a6      410fb6cc       movzx ecx, r12b
0x0001b3aa      0fb7044e       movzx eax, word [rsi + rcx*2]
0x0001b3ae      66c1e803       shr ax, 3
0x0001b3b2      83e001         and eax, 1
0x0001b3b5      4180fc5f       cmp r12b, 0x5f
0x0001b3b9      0f94c1         sete cl
0x0001b3bc      09c8           or eax, ecx
0x0001b3be      c1e006         shl eax, 6
0x0001b3c1      4109c5         or r13d, eax
0x0001b3c4      44886d0a       mov byte [rbp + 0xa], r13b
0x0001b3c8      488b1424       mov rdx, qword [rsp]
0x0001b3cc      4183ec0a       sub r12d, 0xa
0x0001b3d0      4180fc73       cmp r12b, 0x73
0x0001b3d4      0f8732010000   ja 0x1b50c
0x0001b3da      488d0d137500.  lea rcx, [0x000228f4]
0x0001b3e1      450fb6e4       movzx r12d, r12b
0x0001b3e5      4a6304a1       movsxd rax, dword [rcx + r12*4]
0x0001b3e9      4801c8         add rax, rcx
0x0001b3ec      ffe0           jmp rax
0x0001b3ee      6690           nop
0x0001b3f0      4183cd20       or r13d, 0x20                           ; "@"
0x0001b3f4      c6470801       mov byte [rdi + 8], 1
0x0001b3f8      b801000000     mov eax, 1
0x0001b3fd      44886f0a       mov byte [rdi + 0xa], r13b
0x0001b401      e95effffff     jmp 0x1b364
0x0001b406      662e0f1f8400.  nop word cs:[rax + rax]
0x0001b410      498d7601       lea rsi, [r14 + 1]
0x0001b414      483b7358       cmp rsi, qword [rbx + 0x58]
0x0001b418      0f8da2000000   jge 0x1b4c0
0x0001b41e      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0001b425      0f8585040000   jne 0x1b8b0
0x0001b42b      420fb67c3201   movzx edi, byte [rdx + r14 + 1]
0x0001b431      4189fc         mov r12d, edi
0x0001b434      897c2408       mov dword [rsp + 8], edi
0x0001b438      83f801         cmp eax, 1
0x0001b43b      44886500       mov byte [rbp], r12b
0x0001b43f      c6450801       mov byte [rbp + 8], 1
0x0001b443      0f8e47040000   jle 0x1b890
0x0001b449      488b4310       mov rax, qword [rbx + 0x10]
0x0001b44d      448b04b0       mov r8d, dword [rax + rsi*4]
0x0001b451      4489c7         mov edi, r8d
0x0001b454      44890424       mov dword [rsp], r8d
0x0001b458      e81373feff     call sym.imp.iswalnum
0x0001b45d      448b0424       mov r8d, dword [rsp]
0x0001b461      85c0           test eax, eax
0x0001b463      0f95c0         setne al
0x0001b466      4183f85f       cmp r8d, 0x5f
0x0001b46a      0f94c2         sete dl
0x0001b46d      418d4c24d9     lea ecx, [r12 - 0x27]
0x0001b472      09d0           or eax, edx
0x0001b474      c1e006         shl eax, 6
0x0001b477      4109c5         or r13d, eax
0x0001b47a      80f956         cmp cl, 0x56
0x0001b47d      44886d0a       mov byte [rbp + 0xa], r13b
0x0001b481      0f87fe030000   ja 0x1b885
0x0001b487      488d15367600.  lea rdx, [0x00022ac4]
0x0001b48e      0fb6c9         movzx ecx, cl
0x0001b491      4863048a       movsxd rax, dword [rdx + rcx*4]
0x0001b495      4801d0         add rax, rdx
0x0001b498      ffe0           jmp rax
0x0001b49a      660f1f440000   nop word [rax + rax]
0x0001b4a0      4180fc5c       cmp r12b, 0x5c
0x0001b4a4      0f8466ffffff   je 0x1b410
0x0001b4aa      488b4310       mov rax, qword [rbx + 0x10]
0x0001b4ae      c6450801       mov byte [rbp + 8], 1
0x0001b4b2      428b0cb0       mov ecx, dword [rax + r14*4]
0x0001b4b6      e96bfeffff     jmp 0x1b326
0x0001b4bb      0f1f440000     nop dword [rax + rax]
0x0001b4c0      c6450824       mov byte [rbp + 8], 0x24                ; '$'
0x0001b4c4      b801000000     mov eax, 1
0x0001b4c9      e996feffff     jmp 0x1b364
0x0001b4ce      6690           nop
0x0001b4d0      4181e7001200.  and r15d, 0x1200
0x0001b4d7      b801000000     mov eax, 1
0x0001b4dc      4981ff001200.  cmp r15, 0x1200
0x0001b4e3      0f857bfeffff   jne 0x1b364
0x0001b4e9      c6450818       mov byte [rbp + 8], 0x18
0x0001b4ed      e972feffff     jmp 0x1b364
0x0001b4f2      660f1f440000   nop word [rax + rax]
0x0001b4f8      4181e7008400.  and r15d, 0x8400
0x0001b4ff      4981ff008000.  cmp r15, 0x8000
0x0001b506      0f84d6000000   je 0x1b5e2
0x0001b50c      b801000000     mov eax, 1
0x0001b511      e94efeffff     jmp 0x1b364
0x0001b516      662e0f1f8400.  nop word cs:[rax + rax]
0x0001b520      4181e7001200.  and r15d, 0x1200
0x0001b527      b801000000     mov eax, 1
0x0001b52c      4981ff001200.  cmp r15, 0x1200
0x0001b533      0f852bfeffff   jne 0x1b364
0x0001b539      c6450817       mov byte [rbp + 8], 0x17
0x0001b53d      e922feffff     jmp 0x1b364
0x0001b542      660f1f440000   nop word [rax + rax]
0x0001b548      41f7c7080080.  test r15d, 0x800008
0x0001b54f      7509           jne 0x1b55a
0x0001b551      4d85f6         test r14, r14
0x0001b554      0f85c0030000   jne 0x1b91a
0x0001b55a      c645080c       mov byte [rbp + 8], 0xc
0x0001b55e      c74500100000.  mov dword [rbp], 0x10
0x0001b565      b801000000     mov eax, 1
0x0001b56a      e9f5fdffff     jmp 0x1b364
0x0001b56f      90             nop
0x0001b570      c6450814       mov byte [rbp + 8], 0x14
0x0001b574      b801000000     mov eax, 1
0x0001b579      e9e6fdffff     jmp 0x1b364
0x0001b57e      6690           nop
0x0001b580      41f7c7020400.  test r15d, 0x402
0x0001b587      b801000000     mov eax, 1
0x0001b58c      0f85d2fdffff   jne 0x1b364
0x0001b592      c6450813       mov byte [rbp + 8], 0x13
0x0001b596      e9c9fdffff     jmp 0x1b364
0x0001b59b      0f1f440000     nop dword [rax + rax]
0x0001b5a0      c6450805       mov byte [rbp + 8], 5
0x0001b5a4      b801000000     mov eax, 1
0x0001b5a9      e9b6fdffff     jmp 0x1b364
0x0001b5ae      6690           nop
0x0001b5b0      41f7c7020400.  test r15d, 0x402
0x0001b5b7      b801000000     mov eax, 1
0x0001b5bc      0f85a2fdffff   jne 0x1b364
0x0001b5c2      c6450812       mov byte [rbp + 8], 0x12
0x0001b5c6      e999fdffff     jmp 0x1b364
0x0001b5cb      0f1f440000     nop dword [rax + rax]
0x0001b5d0      41f7c7000800.  test r15d, 0x800
0x0001b5d7      b801000000     mov eax, 1
0x0001b5dc      0f8482fdffff   je 0x1b364
0x0001b5e2      c645080a       mov byte [rbp + 8], 0xa
0x0001b5e6      b801000000     mov eax, 1
0x0001b5eb      e974fdffff     jmp 0x1b364
0x0001b5f0      c645080b       mov byte [rbp + 8], 0xb
0x0001b5f4      b801000000     mov eax, 1
0x0001b5f9      e966fdffff     jmp 0x1b364
0x0001b5fe      6690           nop
0x0001b600      41f7c7002000.  test r15d, 0x2000
0x0001b607      b801000000     mov eax, 1
0x0001b60c      0f8452fdffff   je 0x1b364
0x0001b612      c6450809       mov byte [rbp + 8], 9
0x0001b616      e949fdffff     jmp 0x1b364
0x0001b61b      0f1f440000     nop dword [rax + rax]
0x0001b620      41f7c7002000.  test r15d, 0x2000
0x0001b627      b801000000     mov eax, 1
0x0001b62c      0f8432fdffff   je 0x1b364
0x0001b632      c6450808       mov byte [rbp + 8], 8
0x0001b636      e929fdffff     jmp 0x1b364
0x0001b63b      0f1f440000     nop dword [rax + rax]
0x0001b640      41f6c708       test r15b, 8
0x0001b644      750e           jne 0x1b654
0x0001b646      4983c601       add r14, 1
0x0001b64a      4c3b7358       cmp r14, qword [rbx + 0x58]
0x0001b64e      0f85f7020000   jne 0x1b94b
0x0001b654      c645080c       mov byte [rbp + 8], 0xc
0x0001b658      c74500200000.  mov dword [rbp], 0x20                   ; "@"
0x0001b65f      b801000000     mov eax, 1
0x0001b664      e9fbfcffff     jmp 0x1b364
0x0001b669      41f7c7008400.  test r15d, 0x8400
0x0001b670      b802000000     mov eax, 2
0x0001b675      0f85e9fcffff   jne 0x1b364
0x0001b67b      c645080a       mov byte [rbp + 8], 0xa
0x0001b67f      e9e0fcffff     jmp 0x1b364
0x0001b684      4181e7001200.  and r15d, 0x1200
0x0001b68b      b802000000     mov eax, 2
0x0001b690      4981ff000200.  cmp r15, 0x200
0x0001b697      0f85c7fcffff   jne 0x1b364
0x0001b69d      e997feffff     jmp 0x1b539
0x0001b6a2      41f7c7000008.  test r15d, 0x80000
0x0001b6a9      b802000000     mov eax, 2
0x0001b6ae      0f85b0fcffff   jne 0x1b364
0x0001b6b4      c6450820       mov byte [rbp + 8], 0x20                ; "@"
0x0001b6b8      e9a7fcffff     jmp 0x1b364
0x0001b6bd      41f7c7000008.  test r15d, 0x80000
0x0001b6c4      b802000000     mov eax, 2
0x0001b6c9      0f8595fcffff   jne 0x1b364
0x0001b6cf      c6450822       mov byte [rbp + 8], 0x22                ; '"'
0x0001b6d3      e98cfcffff     jmp 0x1b364
0x0001b6d8      4181e7001200.  and r15d, 0x1200
0x0001b6df      b802000000     mov eax, 2
0x0001b6e4      4981ff000200.  cmp r15, 0x200
0x0001b6eb      0f8573fcffff   jne 0x1b364
0x0001b6f1      e9f3fdffff     jmp 0x1b4e9
0x0001b6f6      41f7c7000008.  test r15d, 0x80000
0x0001b6fd      b802000000     mov eax, 2
0x0001b702      0f855cfcffff   jne 0x1b364
0x0001b708      c645080c       mov byte [rbp + 8], 0xc
0x0001b70c      c74500000100.  mov dword [rbp], obj.__frame_dummy_init_array_entry ; 0x100
0x0001b713      e94cfcffff     jmp 0x1b364
0x0001b718      41f7c7000008.  test r15d, 0x80000
0x0001b71f      b802000000     mov eax, 2
0x0001b724      0f853afcffff   jne 0x1b364
0x0001b72a      c645080c       mov byte [rbp + 8], 0xc
0x0001b72e      c74500400000.  mov dword [rbp], 0x40                   ; segment.PHDR
0x0001b735      e92afcffff     jmp 0x1b364
0x0001b73a      41f7c7000008.  test r15d, 0x80000
0x0001b741      b802000000     mov eax, 2
0x0001b746      0f8518fcffff   jne 0x1b364
0x0001b74c      c6450821       mov byte [rbp + 8], 0x21                ; '!'
0x0001b750      e90ffcffff     jmp 0x1b364
0x0001b755      41f7c7000008.  test r15d, 0x80000
0x0001b75c      b802000000     mov eax, 2
0x0001b761      0f85fdfbffff   jne 0x1b364
0x0001b767      c6450823       mov byte [rbp + 8], 0x23                ; '#'
0x0001b76b      e9f4fbffff     jmp 0x1b364
0x0001b770      41f7c7000008.  test r15d, 0x80000
0x0001b777      b802000000     mov eax, 2
0x0001b77c      0f85e2fbffff   jne 0x1b364
0x0001b782      c645080c       mov byte [rbp + 8], 0xc
0x0001b786      c74500000200.  mov dword [rbp], 0x200
0x0001b78d      e9d2fbffff     jmp 0x1b364
0x0001b792      4181e7020400.  and r15d, 0x402
0x0001b799      b802000000     mov eax, 2
0x0001b79e      4983ff02       cmp r15, 2
0x0001b7a2      0f85bcfbffff   jne 0x1b364
0x0001b7a8      e9e5fdffff     jmp 0x1b592
0x0001b7ad      41f7c7000008.  test r15d, 0x80000
0x0001b7b4      b802000000     mov eax, 2
0x0001b7b9      0f85a5fbffff   jne 0x1b364
0x0001b7bf      c645080c       mov byte [rbp + 8], 0xc
0x0001b7c3      c74500090000.  mov dword [rbp], 9
0x0001b7ca      e995fbffff     jmp 0x1b364
0x0001b7cf      41f7c7000008.  test r15d, 0x80000
0x0001b7d6      b802000000     mov eax, 2
0x0001b7db      0f8583fbffff   jne 0x1b364
0x0001b7e1      c645080c       mov byte [rbp + 8], 0xc
0x0001b7e5      c74500060000.  mov dword [rbp], 6
0x0001b7ec      e973fbffff     jmp 0x1b364
0x0001b7f1      41f7c7004000.  test r15d, entry.fini0                  ; sym.__do_global_dtors_aux
                                                                       ; 0x4000
0x0001b7f8      b802000000     mov eax, 2
0x0001b7fd      0f8561fbffff   jne 0x1b364
0x0001b803      8b542408       mov edx, dword [rsp + 8]
0x0001b807      c6450804       mov byte [rbp + 8], 4
0x0001b80b      83ea31         sub edx, 0x31
0x0001b80e      4863d2         movsxd rdx, edx
0x0001b811      48895500       mov qword [rbp], rdx
0x0001b815      e94afbffff     jmp 0x1b364
0x0001b81a      4181e7020400.  and r15d, 0x402
0x0001b821      b802000000     mov eax, 2
0x0001b826      4983ff02       cmp r15, 2
0x0001b82a      0f8534fbffff   jne 0x1b364
0x0001b830      e98dfdffff     jmp 0x1b5c2
0x0001b835      41f7c7002000.  test r15d, 0x2000
0x0001b83c      b802000000     mov eax, 2
0x0001b841      0f851dfbffff   jne 0x1b364
0x0001b847      e9c6fdffff     jmp 0x1b612
0x0001b84c      41f7c7002000.  test r15d, 0x2000
0x0001b853      b802000000     mov eax, 2
0x0001b858      0f8506fbffff   jne 0x1b364
0x0001b85e      e9cffdffff     jmp 0x1b632
0x0001b863      41f7c7000008.  test r15d, 0x80000
0x0001b86a      b802000000     mov eax, 2
0x0001b86f      0f85effaffff   jne 0x1b364
0x0001b875      c645080c       mov byte [rbp + 8], 0xc
0x0001b879      c74500800000.  mov dword [rbp], 0x80
0x0001b880      e9dffaffff     jmp 0x1b364
0x0001b885      b802000000     mov eax, 2
0x0001b88a      e9d5faffff     jmp 0x1b364
0x0001b88f      90             nop
0x0001b890      e85b71feff     call sym.imp.__ctype_b_loc
0x0001b895      488b30         mov rsi, qword [rax]
0x0001b898      410fb6d4       movzx edx, r12b
0x0001b89c      0fb70456       movzx eax, word [rsi + rdx*2]
0x0001b8a0      66c1e803       shr ax, 3
0x0001b8a4      83e001         and eax, 1
0x0001b8a7      4180fc5f       cmp r12b, 0x5f
0x0001b8ab      e9bafbffff     jmp 0x1b46a
0x0001b8b0      83f801         cmp eax, 1
0x0001b8b3      7e2f           jle 0x1b8e4
0x0001b8b5      488b4b10       mov rcx, qword [rbx + 0x10]
0x0001b8b9      488d3cb50000.  lea rdi, [rsi*4]
0x0001b8c1      448b04b1       mov r8d, dword [rcx + rsi*4]
0x0001b8c5      4183f8ff       cmp r8d, 0xffffffff
0x0001b8c9      0f84b0000000   je 0x1b97f
0x0001b8cf      4d8d4e02       lea r9, [r14 + 2]
0x0001b8d3      4c394b30       cmp qword [rbx + 0x30], r9
0x0001b8d7      740b           je 0x1b8e4
0x0001b8d9      837c3904ff     cmp dword [rcx + rdi + 4], 0xffffffff
0x0001b8de      0f849b000000   je 0x1b97f
0x0001b8e4      80bb8c000000.  cmp byte [rbx + 0x8c], 0
0x0001b8eb      488b0b         mov rcx, qword [rbx]
0x0001b8ee      488b7b28       mov rdi, qword [rbx + 0x28]
0x0001b8f2      7444           je 0x1b938
0x0001b8f4      4c8b4318       mov r8, qword [rbx + 0x18]
0x0001b8f8      4801f9         add rcx, rdi
0x0001b8fb      49030cf0       add rcx, qword [r8 + rsi*8]
0x0001b8ff      0fb639         movzx edi, byte [rcx]
0x0001b902      4189fc         mov r12d, edi
0x0001b905      897c2408       mov dword [rsp + 8], edi
0x0001b909      81e780000000   and edi, 0x80
0x0001b90f      0f8516fbffff   jne 0x1b42b
0x0001b915      e91efbffff     jmp 0x1b438
0x0001b91a      42807c32ff0a   cmp byte [rdx + r14 - 1], 0xa
0x0001b920      0f85e6fbffff   jne 0x1b50c
0x0001b926      41f7c7000800.  test r15d, 0x800
0x0001b92d      0f84d9fbffff   je 0x1b50c
0x0001b933      e922fcffff     jmp 0x1b55a
0x0001b938      4801f1         add rcx, rsi
0x0001b93b      0fb63c39       movzx edi, byte [rcx + rdi]
0x0001b93f      4189fc         mov r12d, edi
0x0001b942      897c2408       mov dword [rsp + 8], edi
0x0001b946      e9edfaffff     jmp 0x1b438
0x0001b94b      488d7c2410     lea rdi, [rsp + 0x10]
0x0001b950      4c89fa         mov rdx, r15
0x0001b953      4c897348       mov qword [rbx + 0x48], r14
0x0001b957      4889de         mov rsi, rbx
0x0001b95a      e841f9ffff     call sym.peek_token
0x0001b95f      0fb6442418     movzx eax, byte [rsp + 0x18]
0x0001b964      48836b4801     sub qword [rbx + 0x48], 1
0x0001b969      8d50f7         lea edx, [rax - 9]
0x0001b96c      b801000000     mov eax, 1
0x0001b971      80fa01         cmp dl, 1
0x0001b974      0f87eaf9ffff   ja 0x1b364
0x0001b97a      e9d5fcffff     jmp 0x1b654
0x0001b97f      420fb6443201   movzx eax, byte [rdx + r14 + 1]
0x0001b985      c6450801       mov byte [rbp + 8], 1
0x0001b989      4189c4         mov r12d, eax
0x0001b98c      884500         mov byte [rbp], al
0x0001b98f      89442408       mov dword [rsp + 8], eax
0x0001b993      e9b9faffff     jmp 0x1b451
0x0001b998      e8c36bfeff     call sym.imp.__stack_chk_fail
0x0001b99d      0f1f00         nop dword [rax]
;-- fetch_number:
0x0001b9a0      4156           push r14
0x0001b9a2      4989fe         mov r14, rdi
0x0001b9a5      4155           push r13
0x0001b9a7      4989f5         mov r13, rsi
0x0001b9aa      4154           push r12
0x0001b9ac      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x0001b9b3      55             push rbp
0x0001b9b4      4889d5         mov rbp, rdx
0x0001b9b7      53             push rbx
0x0001b9b8      48c7c3ffffff.  mov rbx, 0xffffffffffffffff
0x0001b9bf      90             nop
0x0001b9c0      4889ea         mov rdx, rbp
0x0001b9c3      4c89f6         mov rsi, r14
0x0001b9c6      4c89ef         mov rdi, r13
0x0001b9c9      e8d2f8ffff     call sym.peek_token
0x0001b9ce      4898           cdqe
0x0001b9d0      49014648       add qword [r14 + 0x48], rax
0x0001b9d4      410fb64508     movzx eax, byte [r13 + 8]
0x0001b9d9      410fb65500     movzx edx, byte [r13]
0x0001b9de      3c02           cmp al, 2
0x0001b9e0      744e           je 0x1ba30
0x0001b9e2      3c18           cmp al, 0x18
0x0001b9e4      7451           je 0x1ba37
0x0001b9e6      80fa2c         cmp dl, 0x2c
0x0001b9e9      744c           je 0x1ba37
0x0001b9eb      3c01           cmp al, 1
0x0001b9ed      7409           je 0x1b9f8
0x0001b9ef      4c89e3         mov rbx, r12
0x0001b9f2      ebcc           jmp 0x1b9c0
0x0001b9f4      0f1f4000       nop dword [rax]
0x0001b9f8      8d42d0         lea eax, [rdx - 0x30]
0x0001b9fb      3c09           cmp al, 9
0x0001b9fd      77f0           ja 0x1b9ef
0x0001b9ff      4883fbfe       cmp rbx, 0xfffffffffffffffe
0x0001ba03      74ea           je 0x1b9ef
0x0001ba05      4883fbff       cmp rbx, 0xffffffffffffffff
0x0001ba09      743d           je 0x1ba48
0x0001ba0b      488d049b       lea rax, [rbx + rbx*4]
0x0001ba0f      488d1c42       lea rbx, [rdx + rax*2]
0x0001ba13      b830800000     mov eax, 0x8030
0x0001ba18      4881fb308000.  cmp rbx, 0x8030
0x0001ba1f      480f4fd8       cmovg rbx, rax
0x0001ba23      4883eb30       sub rbx, 0x30
0x0001ba27      eb97           jmp 0x1b9c0
0x0001ba29      0f1f80000000.  nop dword [rax]
0x0001ba30      48c7c3feffff.  mov rbx, 0xfffffffffffffffe
0x0001ba37      4889d8         mov rax, rbx
0x0001ba3a      5b             pop rbx
0x0001ba3b      5d             pop rbp
0x0001ba3c      415c           pop r12
0x0001ba3e      415d           pop r13
0x0001ba40      415e           pop r14
0x0001ba42      c3             ret
0x0001ba43      0f1f440000     nop dword [rax + rax]
0x0001ba48      0fb6da         movzx ebx, dl
0x0001ba4b      83eb30         sub ebx, 0x30
0x0001ba4e      4863db         movsxd rbx, ebx
0x0001ba51      e96affffff     jmp 0x1b9c0
0x0001ba56      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_expression:
0x0001ba60      4157           push r15
0x0001ba62      4156           push r14
0x0001ba64      4155           push r13
0x0001ba66      4154           push r12
0x0001ba68      55             push rbp
0x0001ba69      53             push rbx
0x0001ba6a      4881ec280100.  sub rsp, 0x128
0x0001ba71      48894c2420     mov qword [rsp + 0x20], rcx
0x0001ba76      0fb64a08       movzx ecx, byte [rdx + 8]
0x0001ba7a      64488b042528.  mov rax, qword fs:[0x28]
0x0001ba83      488984241801.  mov qword [rsp + 0x118], rax
0x0001ba8b      31c0           xor eax, eax
0x0001ba8d      488b06         mov rax, qword [rsi]
0x0001ba90      4889542418     mov qword [rsp + 0x18], rdx
0x0001ba95      4c894c2440     mov qword [rsp + 0x40], r9
0x0001ba9a      80f924         cmp cl, 0x24
0x0001ba9d      4889442410     mov qword [rsp + 0x10], rax
0x0001baa2      0f87b8000000   ja 0x1bb60
0x0001baa8      4889f5         mov rbp, rsi
0x0001baab      488d356e7100.  lea rsi, [0x00022c20]
0x0001bab2      0fb6d1         movzx edx, cl
0x0001bab5      4989fe         mov r14, rdi
0x0001bab8      48630496       movsxd rax, dword [rsi + rdx*4]
0x0001babc      4801f0         add rax, rsi
0x0001babf      ffe0           jmp rax
0x0001bac1      488b5d30       mov rbx, qword [rbp + 0x30]
0x0001bac5      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x0001baca      4889fe         mov rsi, rdi
0x0001bacd      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x0001bad2      4c890424       mov qword [rsp], r8
0x0001bad6      488d4301       lea rax, [rbx + 1]
0x0001bada      4c89fa         mov rdx, r15
0x0001badd      4881ca000080.  or rdx, 0x800000
0x0001bae4      4c89ef         mov rdi, r13
0x0001bae7      48894530       mov qword [rbp + 0x30], rax
0x0001baeb      e8b0f7ffff     call sym.peek_token
0x0001baf0      4898           cdqe
0x0001baf2      49014648       add qword [r14 + 0x48], rax
0x0001baf6      31c0           xor eax, eax
0x0001baf8      41807d0809     cmp byte [r13 + 8], 9
0x0001bafd      4c89ea         mov rdx, r13
0x0001bb00      0f84fa0a0000   je 0x1c600
0x0001bb06      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x0001bb0b      4c8b0424       mov r8, qword [rsp]
0x0001bb0f      4c89f9         mov rcx, r15
0x0001bb12      4889ee         mov rsi, rbp
0x0001bb15      4c89f7         mov rdi, r14
0x0001bb18      4983c001       add r8, 1
0x0001bb1c      4d89e9         mov r9, r13
0x0001bb1f      e8ac150000     call sym.parse_reg_exp
0x0001bb24      458b5d00       mov r11d, dword [r13]
0x0001bb28      4585db         test r11d, r11d
0x0001bb2b      7533           jne 0x1bb60
0x0001bb2d      488b542418     mov rdx, qword [rsp + 0x18]
0x0001bb32      807a0809       cmp byte [rdx + 8], 9
0x0001bb36      0f84c40a0000   je 0x1c600
0x0001bb3c      4885c0         test rax, rax
0x0001bb3f      7411           je 0x1bb52
0x0001bb41      488d35d862ff.  lea rsi, sym.free_tree                  ; 0x11e20 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x0001bb48      31d2           xor edx, edx
0x0001bb4a      4889c7         mov rdi, rax
0x0001bb4d      e82e54ffff     call sym.postorder
0x0001bb52      488b442440     mov rax, qword [rsp + 0x40]
0x0001bb57      c70008000000   mov dword [rax], 8
0x0001bb5d      0f1f00         nop dword [rax]
0x0001bb60      48c744242800.  mov qword [rsp + 0x28], 0
0x0001bb69      0f1f80000000.  nop dword [rax]
0x0001bb70      488bbc241801.  mov rdi, qword [rsp + 0x118]
0x0001bb78      6448333c2528.  xor rdi, qword fs:[0x28]
0x0001bb81      488b442428     mov rax, qword [rsp + 0x28]
0x0001bb86      0f8572130000   jne 0x1cefe
0x0001bb8c      4881c4280100.  add rsp, 0x128
0x0001bb93      5b             pop rbx
0x0001bb94      5d             pop rbp
0x0001bb95      415c           pop r12
0x0001bb97      415d           pop r13
0x0001bb99      415e           pop r14
0x0001bb9b      415f           pop r15
0x0001bb9d      c3             ret
0x0001bb9e      48f744242000.  test qword [rsp + 0x20], 0x1000000
0x0001bba7      0f8550020000   jne 0x1bdfd
0x0001bbad      488b442420     mov rax, qword [rsp + 0x20]
0x0001bbb2      a820           test al, 0x20                           ; "@"
0x0001bbb4      0f8543020000   jne 0x1bdfd
0x0001bbba      a810           test al, 0x10
0x0001bbbc      0f85630e0000   jne 0x1ca25
0x0001bbc2      80f909         cmp cl, 9
0x0001bbc5      0f840d0a0000   je 0x1c5d8
0x0001bbcb      488b442410     mov rax, qword [rsp + 0x10]
0x0001bbd0      4c8b442418     mov r8, qword [rsp + 0x18]
0x0001bbd5      31c9           xor ecx, ecx
0x0001bbd7      31d2           xor edx, edx
0x0001bbd9      488db0800000.  lea rsi, [rax + 0x80]
0x0001bbe0      488d7870       lea rdi, [rax + 0x70]
0x0001bbe4      41c6400801     mov byte [r8 + 8], 1
0x0001bbe9      e87277ffff     call sym.create_token_tree.isra.16
0x0001bbee      4885c0         test rax, rax
0x0001bbf1      4889442428     mov qword [rsp + 0x28], rax
0x0001bbf6      0f84cc090000   je 0x1c5c8
0x0001bbfc      488b5c2418     mov rbx, qword [rsp + 0x18]
0x0001bc01      488b542420     mov rdx, qword [rsp + 0x20]
0x0001bc06      4c89f6         mov rsi, r14
0x0001bc09      4c8dbc24c000.  lea r15, [rsp + 0xc0]
0x0001bc11      4889df         mov rdi, rbx
0x0001bc14      e887f6ffff     call sym.peek_token
0x0001bc19      4898           cdqe
0x0001bc1b      49014648       add qword [r14 + 0x48], rax
0x0001bc1f      0fb64308       movzx eax, byte [rbx + 8]
0x0001bc23      0f1f440000     nop dword [rax + rax]
0x0001bc28      3c17           cmp al, 0x17
0x0001bc2a      0f8740ffffff   ja 0x1bb70
0x0001bc30      3c12           cmp al, 0x12
0x0001bc32      b900088c00     mov ecx, 0x8c0800
0x0001bc37      0f94c3         sete bl
0x0001bc3a      480fa3c1       bt rcx, rax
0x0001bc3e      0f832cffffff   jae 0x1bb70
0x0001bc44      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0001bc49      3c17           cmp al, 0x17
0x0001bc4b      498b6e48       mov rbp, qword [r14 + 0x48]
0x0001bc4f      660f6f01       movdqa xmm0, xmmword [rcx]
0x0001bc53      0f841f030000   je 0x1bf78
0x0001bc59      3c13           cmp al, 0x13
0x0001bc5b      0fb6db         movzx ebx, bl
0x0001bc5e      0f84ac020000   je 0x1bf10
0x0001bc64      488b542420     mov rdx, qword [rsp + 0x20]
0x0001bc69      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0001bc6e      4c89f6         mov rsi, r14
0x0001bc71      e82af6ffff     call sym.peek_token
0x0001bc76      4898           cdqe
0x0001bc78      49014648       add qword [r14 + 0x48], rax
0x0001bc7c      48837c242800   cmp qword [rsp + 0x28], 0
0x0001bc82      0f8488030000   je 0x1c010
0x0001bc88      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff
0x0001bc90      4885db         test rbx, rbx
0x0001bc93      488b6c2428     mov rbp, qword [rsp + 0x28]
0x0001bc98      48c744243000.  mov qword [rsp + 0x30], 0
0x0001bca1      0f8f79010000   jg 0x1be20
0x0001bca7      807d3011       cmp byte [rbp + 0x30], 0x11
0x0001bcab      0f843f030000   je 0x1bff0
0x0001bcb1      48833c24ff     cmp qword [rsp], 0xffffffffffffffff
0x0001bcb6      4889ea         mov rdx, rbp
0x0001bcb9      4d89f8         mov r8, r15
0x0001bcbc      0f94c0         sete al
0x0001bcbf      31c9           xor ecx, ecx
0x0001bcc1      83c00a         add eax, 0xa
0x0001bcc4      888424c80000.  mov byte [rsp + 0xc8], al
0x0001bccb      488b442410     mov rax, qword [rsp + 0x10]
0x0001bcd0      4c8d6070       lea r12, [rax + 0x70]
0x0001bcd4      4c8da8800000.  lea r13, [rax + 0x80]
0x0001bcdb      4c89e7         mov rdi, r12
0x0001bcde      4c89ee         mov rsi, r13
0x0001bce1      e87a76ffff     call sym.create_token_tree.isra.16
0x0001bce6      4885c0         test rax, rax
0x0001bce9      4889c2         mov rdx, rax
0x0001bcec      0f84ee010000   je 0x1bee0
0x0001bcf2      4883c302       add rbx, 2
0x0001bcf6      483b1c24       cmp rbx, qword [rsp]
0x0001bcfa      7f7f           jg 0x1bd7b
0x0001bcfc      4c89742448     mov qword [rsp + 0x48], r14
0x0001bd01      4989c6         mov r14, rax
0x0001bd04      488b742410     mov rsi, qword [rsp + 0x10]
0x0001bd09      4889ef         mov rdi, rbp
0x0001bd0c      e82f77ffff     call sym.duplicate_tree
0x0001bd11      4d89f8         mov r8, r15
0x0001bd14      4889c5         mov rbp, rax
0x0001bd17      4889c1         mov rcx, rax
0x0001bd1a      4c89f2         mov rdx, r14
0x0001bd1d      4c89ee         mov rsi, r13
0x0001bd20      4c89e7         mov rdi, r12
0x0001bd23      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x0001bd2b      e83076ffff     call sym.create_token_tree.isra.16
0x0001bd30      4885ed         test rbp, rbp
0x0001bd33      0f84a7010000   je 0x1bee0
0x0001bd39      4885c0         test rax, rax
0x0001bd3c      0f849e010000   je 0x1bee0
0x0001bd42      31c9           xor ecx, ecx
0x0001bd44      4d89f8         mov r8, r15
0x0001bd47      4889c2         mov rdx, rax
0x0001bd4a      4c89ee         mov rsi, r13
0x0001bd4d      4c89e7         mov rdi, r12
0x0001bd50      c68424c80000.  mov byte [rsp + 0xc8], 0xa
0x0001bd58      e80376ffff     call sym.create_token_tree.isra.16
0x0001bd5d      4885c0         test rax, rax
0x0001bd60      4989c6         mov r14, rax
0x0001bd63      0f8477010000   je 0x1bee0
0x0001bd69      4883c301       add rbx, 1
0x0001bd6d      483b1c24       cmp rbx, qword [rsp]
0x0001bd71      7e91           jle 0x1bd04
0x0001bd73      4c8b742448     mov r14, qword [rsp + 0x48]
0x0001bd78      4889c2         mov rdx, rax
0x0001bd7b      488b442430     mov rax, qword [rsp + 0x30]
0x0001bd80      4885c0         test rax, rax
0x0001bd83      0f84a7020000   je 0x1c030
0x0001bd89      4889d1         mov rcx, rdx
0x0001bd8c      4d89f8         mov r8, r15
0x0001bd8f      4889c2         mov rdx, rax
0x0001bd92      4c89ee         mov rsi, r13
0x0001bd95      4c89e7         mov rdi, r12
0x0001bd98      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x0001bda0      e8bb75ffff     call sym.create_token_tree.isra.16
0x0001bda5      488b7c2440     mov rdi, qword [rsp + 0x40]
0x0001bdaa      8b17           mov edx, dword [rdi]
0x0001bdac      85d2           test edx, edx
0x0001bdae      7409           je 0x1bdb9
0x0001bdb0      4885c0         test rax, rax
0x0001bdb3      0f8452030000   je 0x1c10b
0x0001bdb9      4889442428     mov qword [rsp + 0x28], rax
0x0001bdbe      48f744242000.  test qword [rsp + 0x20], 0x1000000
0x0001bdc7      488b442418     mov rax, qword [rsp + 0x18]
0x0001bdcc      0fb64008       movzx eax, byte [rax + 8]
0x0001bdd0      0f8452feffff   je 0x1bc28
0x0001bdd6      3c0b           cmp al, 0xb
0x0001bdd8      7408           je 0x1bde2
0x0001bdda      3c17           cmp al, 0x17
0x0001bddc      0f8546feffff   jne 0x1bc28
0x0001bde2      488b442428     mov rax, qword [rsp + 0x28]
0x0001bde7      4885c0         test rax, rax
0x0001bdea      7411           je 0x1bdfd
0x0001bdec      488d352d60ff.  lea rsi, sym.free_tree                  ; 0x11e20 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x0001bdf3      31d2           xor edx, edx
0x0001bdf5      4889c7         mov rdi, rax
0x0001bdf8      e88351ffff     call sym.postorder
0x0001bdfd      488b442440     mov rax, qword [rsp + 0x40]
0x0001be02      48c744242800.  mov qword [rsp + 0x28], 0
0x0001be0b      c7000d000000   mov dword [rax], 0xd                    ; [0xd:4]=0x3000000
0x0001be11      e95afdffff     jmp 0x1bb70
0x0001be16      662e0f1f8400.  nop word cs:[rax + rax]
0x0001be20      4883fb01       cmp rbx, 1
0x0001be24      0f8432080000   je 0x1c65c
0x0001be2a      488b442410     mov rax, qword [rsp + 0x10]
0x0001be2f      4989ed         mov r13, rbp
0x0001be32      4c89742448     mov qword [rsp + 0x48], r14
0x0001be37      4c8da0800000.  lea r12, [rax + 0x80]
0x0001be3e      488d7870       lea rdi, [rax + 0x70]
0x0001be42      4889e8         mov rax, rbp
0x0001be45      4989c6         mov r14, rax
0x0001be48      bd02000000     mov ebp, 2
0x0001be4d      4c89e6         mov rsi, r12
0x0001be50      48897c2430     mov qword [rsp + 0x30], rdi
0x0001be55      4d89ec         mov r12, r13
0x0001be58      4989dd         mov r13, rbx
0x0001be5b      4889f3         mov rbx, rsi
0x0001be5e      6690           nop
0x0001be60      488b742410     mov rsi, qword [rsp + 0x10]
0x0001be65      4c89e7         mov rdi, r12
0x0001be68      e8d375ffff     call sym.duplicate_tree
0x0001be6d      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0001be72      4989c4         mov r12, rax
0x0001be75      4c89f2         mov rdx, r14
0x0001be78      4d89f8         mov r8, r15
0x0001be7b      4889c1         mov rcx, rax
0x0001be7e      4889de         mov rsi, rbx
0x0001be81      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x0001be89      e8d274ffff     call sym.create_token_tree.isra.16
0x0001be8e      4d85e4         test r12, r12
0x0001be91      4989c6         mov r14, rax
0x0001be94      744a           je 0x1bee0
0x0001be96      4885c0         test rax, rax
0x0001be99      7445           je 0x1bee0
0x0001be9b      4883c501       add rbp, 1
0x0001be9f      4c39ed         cmp rbp, r13
0x0001bea2      7ebc           jle 0x1be60
0x0001bea4      4c8b742448     mov r14, qword [rsp + 0x48]
0x0001bea9      4c89eb         mov rbx, r13
0x0001beac      4889442430     mov qword [rsp + 0x30], rax
0x0001beb1      4d89e5         mov r13, r12
0x0001beb4      48391c24       cmp qword [rsp], rbx
0x0001beb8      0f8466010000   je 0x1c024
0x0001bebe      488b742410     mov rsi, qword [rsp + 0x10]
0x0001bec3      4c89ef         mov rdi, r13
0x0001bec6      e87575ffff     call sym.duplicate_tree
0x0001becb      4885c0         test rax, rax
0x0001bece      4889c5         mov rbp, rax
0x0001bed1      0f85d0fdffff   jne 0x1bca7
0x0001bed7      660f1f840000.  nop word [rax + rax]
0x0001bee0      488b442440     mov rax, qword [rsp + 0x40]
0x0001bee5      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0001beeb      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0001bef0      488d35295fff.  lea rsi, sym.free_tree                  ; 0x11e20 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x0001bef7      31d2           xor edx, edx
0x0001bef9      e88250ffff     call sym.postorder
0x0001befe      48c744242800.  mov qword [rsp + 0x28], 0
0x0001bf07      e964fcffff     jmp 0x1bb70
0x0001bf0c      0f1f4000       nop dword [rax]
0x0001bf10      48c704240100.  mov qword [rsp], 1
0x0001bf18      488b542420     mov rdx, qword [rsp + 0x20]
0x0001bf1d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0001bf22      4c89f6         mov rsi, r14
0x0001bf25      e876f3ffff     call sym.peek_token
0x0001bf2a      4898           cdqe
0x0001bf2c      49014648       add qword [r14 + 0x48], rax
0x0001bf30      48837c242800   cmp qword [rsp + 0x28], 0
0x0001bf36      0f84d4000000   je 0x1c010
0x0001bf3c      488b0424       mov rax, qword [rsp]
0x0001bf40      4809d8         or rax, rbx
0x0001bf43      0f8547fdffff   jne 0x1bc90
0x0001bf49      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0001bf4e      488d35cb5eff.  lea rsi, sym.free_tree                  ; 0x11e20 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x0001bf55      31d2           xor edx, edx
0x0001bf57      e82450ffff     call sym.postorder
0x0001bf5c      488b442440     mov rax, qword [rsp + 0x40]
0x0001bf61      8b30           mov esi, dword [rax]
0x0001bf63      85f6           test esi, esi
0x0001bf65      7584           jne 0x1beeb
0x0001bf67      48c744242800.  mov qword [rsp + 0x28], 0
0x0001bf70      e949feffff     jmp 0x1bdbe
0x0001bf75      0f1f00         nop dword [rax]
0x0001bf78      488b542420     mov rdx, qword [rsp + 0x20]
0x0001bf7d      4889ce         mov rsi, rcx
0x0001bf80      4c89f7         mov rdi, r14
0x0001bf83      0f290424       movaps xmmword [rsp], xmm0
0x0001bf87      e814faffff     call sym.fetch_number
0x0001bf8c      4883f8ff       cmp rax, 0xffffffffffffffff
0x0001bf90      4889c3         mov rbx, rax
0x0001bf93      660f6f0424     movdqa xmm0, xmmword [rsp]
0x0001bf98      0f84a2000000   je 0x1c040
0x0001bf9e      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0001bfa2      7419           je 0x1bfbd
0x0001bfa4      488b442418     mov rax, qword [rsp + 0x18]
0x0001bfa9      0fb64008       movzx eax, byte [rax + 8]
0x0001bfad      3c18           cmp al, 0x18
0x0001bfaf      0f841b010000   je 0x1c0d0
0x0001bfb5      3c01           cmp al, 1
0x0001bfb7      0f8426010000   je 0x1c0e3
0x0001bfbd      48f744242000.  test qword [rsp + 0x20], 0x200000
0x0001bfc6      0f84370f0000   je 0x1cf03
0x0001bfcc      488b442418     mov rax, qword [rsp + 0x18]
0x0001bfd1      49896e48       mov qword [r14 + 0x48], rbp
0x0001bfd5      0f2900         movaps xmmword [rax], xmm0
0x0001bfd8      c6400801       mov byte [rax + 8], 1
0x0001bfdc      488b442428     mov rax, qword [rsp + 0x28]
0x0001bfe1      e9bffdffff     jmp 0x1bda5
0x0001bfe6      662e0f1f8400.  nop word cs:[rax + rax]
0x0001bff0      488b5528       mov rdx, qword [rbp + 0x28]
0x0001bff4      488d35c54cff.  lea rsi, sym.mark_opt_subexp            ; 0x10cc0
0x0001bffb      4889ef         mov rdi, rbp
0x0001bffe      e87d4fffff     call sym.postorder
0x0001c003      e9a9fcffff     jmp 0x1bcb1
0x0001c008      0f1f84000000.  nop dword [rax + rax]
0x0001c010      488b442440     mov rax, qword [rsp + 0x40]
0x0001c015      8b08           mov ecx, dword [rax]
0x0001c017      85c9           test ecx, ecx
0x0001c019      0f8448ffffff   je 0x1bf67
0x0001c01f      e93cfbffff     jmp 0x1bb60
0x0001c024      488b542430     mov rdx, qword [rsp + 0x30]
0x0001c029      0f1f80000000.  nop dword [rax]
0x0001c030      4889542428     mov qword [rsp + 0x28], rdx
0x0001c035      e984fdffff     jmp 0x1bdbe
0x0001c03a      660f1f440000   nop word [rax + rax]
0x0001c040      488b442418     mov rax, qword [rsp + 0x18]
0x0001c045      80780801       cmp byte [rax + 8], 1
0x0001c049      0f85b1000000   jne 0x1c100
0x0001c04f      488b442418     mov rax, qword [rsp + 0x18]
0x0001c054      80382c         cmp byte [rax], 0x2c
0x0001c057      0f85a3000000   jne 0x1c100
0x0001c05d      31db           xor ebx, ebx
0x0001c05f      488b542420     mov rdx, qword [rsp + 0x20]
0x0001c064      488b742418     mov rsi, qword [rsp + 0x18]
0x0001c069      4c89f7         mov rdi, r14
0x0001c06c      0f29442430     movaps xmmword [rsp + 0x30], xmm0
0x0001c071      e82af9ffff     call sym.fetch_number
0x0001c076      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0001c07a      48890424       mov qword [rsp], rax
0x0001c07e      660f6f442430   movdqa xmm0, xmmword [rsp + 0x30]
0x0001c084      0f8433ffffff   je 0x1bfbd
0x0001c08a      488b0424       mov rax, qword [rsp]
0x0001c08e      4883f8ff       cmp rax, 0xffffffffffffffff
0x0001c092      7405           je 0x1c099
0x0001c094      4839d8         cmp rax, rbx
0x0001c097      7c67           jl 0x1c100
0x0001c099      488b442418     mov rax, qword [rsp + 0x18]
0x0001c09e      80780818       cmp byte [rax + 8], 0x18
0x0001c0a2      755c           jne 0x1c100
0x0001c0a4      48833c24ff     cmp qword [rsp], 0xffffffffffffffff
0x0001c0a9      7529           jne 0x1c0d4
0x0001c0ab      31c0           xor eax, eax
0x0001c0ad      4881fbff7f00.  cmp rbx, 0x7fff
0x0001c0b4      0f9fc0         setg al
0x0001c0b7      4885c0         test rax, rax
0x0001c0ba      0f8458feffff   je 0x1bf18
0x0001c0c0      488b442440     mov rax, qword [rsp + 0x40]
0x0001c0c5      c7000f000000   mov dword [rax], 0xf                    ; [0xf:4]=0x3e000300
0x0001c0cb      eb3e           jmp 0x1c10b
0x0001c0cd      0f1f00         nop dword [rax]
0x0001c0d0      48891c24       mov qword [rsp], rbx
0x0001c0d4      31c0           xor eax, eax
0x0001c0d6      48813c24ff7f.  cmp qword [rsp], 0x7fff
0x0001c0de      0f9fc0         setg al
0x0001c0e1      ebd4           jmp 0x1c0b7
0x0001c0e3      488b442418     mov rax, qword [rsp + 0x18]
0x0001c0e8      80382c         cmp byte [rax], 0x2c
0x0001c0eb      0f846effffff   je 0x1c05f
0x0001c0f1      48f744242000.  test qword [rsp + 0x20], 0x200000
0x0001c0fa      0f85ccfeffff   jne 0x1bfcc
0x0001c100      488b442440     mov rax, qword [rsp + 0x40]
0x0001c105      c7000a000000   mov dword [rax], 0xa
0x0001c10b      48837c242800   cmp qword [rsp + 0x28], 0
0x0001c111      0f85d4fdffff   jne 0x1beeb
0x0001c117      e944faffff     jmp 0x1bb60
0x0001c11c      0f1f4000       nop dword [rax]
0x0001c120      488b442418     mov rax, qword [rsp + 0x18]
0x0001c125      8b28           mov ebp, dword [rax]
0x0001c127      f7c50f030000   test ebp, 0x30f
0x0001c12d      7462           je 0x1c191
0x0001c12f      488b442410     mov rax, qword [rsp + 0x10]
0x0001c134      0fb680b00000.  movzx eax, byte [rax + 0xb0]
0x0001c13b      a810           test al, 0x10
0x0001c13d      7552           jne 0x1c191
0x0001c13f      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0001c144      83c810         or eax, 0x10
0x0001c147      a808           test al, 8
0x0001c149      8887b0000000   mov byte [rdi + 0xb0], al
0x0001c14f      0f85fe0b0000   jne 0x1cd53
0x0001c155      48ba00000000.  movabs rdx, 0x3ff000000000000           ; 287948901175001088
0x0001c15f      a804           test al, 4
0x0001c161      488997b80000.  mov qword [rdi + 0xb8], rdx
0x0001c168      48bafeffff87.  movabs rdx, 0x7fffffe87fffffe
0x0001c172      488997c00000.  mov qword [rdi + 0xc0], rdx
0x0001c179      0f84590b0000   je 0x1ccd8
0x0001c17f      660fefc0       pxor xmm0, xmm0
0x0001c183      488b442418     mov rax, qword [rsp + 0x18]
0x0001c188      0f1187c80000.  movups xmmword [rdi + 0xc8], xmm0
0x0001c18f      8b28           mov ebp, dword [rax]
0x0001c191      488b442410     mov rax, qword [rsp + 0x10]
0x0001c196      488d5870       lea rbx, [rax + 0x70]
0x0001c19a      4c8da0800000.  lea r12, [rax + 0x80]
0x0001c1a1      8d8500ffffff   lea eax, [rbp - 0x100]
0x0001c1a7      a9fffeffff     test eax, 0xfffffeff                    ; 4294967039
0x0001c1ac      0f8568060000   jne 0x1c81a
0x0001c1b2      81fd00010000   cmp ebp, 0x100
0x0001c1b8      4c8b7c2418     mov r15, qword [rsp + 0x18]
0x0001c1bd      0f842f060000   je 0x1c7f2
0x0001c1c3      41c707050000.  mov dword [r15], 5
0x0001c1ca      4d89f8         mov r8, r15
0x0001c1cd      31c9           xor ecx, ecx
0x0001c1cf      31d2           xor edx, edx
0x0001c1d1      4c89e6         mov rsi, r12
0x0001c1d4      4889df         mov rdi, rbx
0x0001c1d7      e88471ffff     call sym.create_token_tree.isra.16
0x0001c1dc      41c7070a0000.  mov dword [r15], 0xa
0x0001c1e3      4889c5         mov rbp, rax
0x0001c1e6      4c8b442418     mov r8, qword [rsp + 0x18]
0x0001c1eb      31c9           xor ecx, ecx
0x0001c1ed      31d2           xor edx, edx
0x0001c1ef      4c89e6         mov rsi, r12
0x0001c1f2      4889df         mov rdi, rbx
0x0001c1f5      e86671ffff     call sym.create_token_tree.isra.16
0x0001c1fa      4c8d8424c000.  lea r8, [rsp + 0xc0]
0x0001c202      4889ea         mov rdx, rbp
0x0001c205      4889df         mov rdi, rbx
0x0001c208      4889c1         mov rcx, rax
0x0001c20b      4c89e6         mov rsi, r12
0x0001c20e      4989c5         mov r13, rax
0x0001c211      c68424c80000.  mov byte [rsp + 0xc8], 0xa
0x0001c219      e84271ffff     call sym.create_token_tree.isra.16
0x0001c21e      4885ed         test rbp, rbp
0x0001c221      4889c7         mov rdi, rax
0x0001c224      4889442428     mov qword [rsp + 0x28], rax
0x0001c229      0f94c2         sete dl
0x0001c22c      4d85ed         test r13, r13
0x0001c22f      0f94c0         sete al
0x0001c232      08c2           or dl, al
0x0001c234      0f858e030000   jne 0x1c5c8
0x0001c23a      4885ff         test rdi, rdi
0x0001c23d      0f8485030000   je 0x1c5c8
0x0001c243      488b542420     mov rdx, qword [rsp + 0x20]
0x0001c248      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0001c24d      4c89f6         mov rsi, r14
0x0001c250      e84bf0ffff     call sym.peek_token
0x0001c255      4898           cdqe
0x0001c257      49014648       add qword [r14 + 0x48], rax
0x0001c25b      e910f9ffff     jmp 0x1bb70
0x0001c260      be01000000     mov esi, 1
0x0001c265      bf20000000     mov edi, 0x20                           ; "@"
0x0001c26a      48c784249800.  mov qword [rsp + 0x98], 0
0x0001c276      e83564feff     call sym.imp.calloc
0x0001c27b      be01000000     mov esi, 1
0x0001c280      4989c4         mov r12, rax
0x0001c283      bf50000000     mov edi, 0x50                           ; 'P'
0x0001c288      e82364feff     call sym.imp.calloc
0x0001c28d      4d85e4         test r12, r12
0x0001c290      4989c5         mov r13, rax
0x0001c293      0f94c2         sete dl
0x0001c296      4885c0         test rax, rax
0x0001c299      0f94c0         sete al
0x0001c29c      08c2           or dl, al
0x0001c29e      0f85d5070000   jne 0x1ca79
0x0001c2a4      4c8b542418     mov r10, qword [rsp + 0x18]
0x0001c2a9      488b542420     mov rdx, qword [rsp + 0x20]
0x0001c2ae      4c89f6         mov rsi, r14
0x0001c2b1      4c89d7         mov rdi, r10
0x0001c2b4      e8d748ffff     call sym.peek_token_bracket
0x0001c2b9      4863d8         movsxd rbx, eax
0x0001c2bc      410fb64208     movzx eax, byte [r10 + 8]
0x0001c2c1      3c02           cmp al, 2
0x0001c2c3      0f84a0070000   je 0x1ca69
0x0001c2c9      3c19           cmp al, 0x19
0x0001c2cb      c644245700     mov byte [rsp + 0x57], 0
0x0001c2d0      0f84c4040000   je 0x1c79a
0x0001c2d6      3c15           cmp al, 0x15
0x0001c2d8      0f8406050000   je 0x1c7e4
0x0001c2de      488d8424d000.  lea rax, [rsp + 0xd0]
0x0001c2e6      4c8b7c2418     mov r15, qword [rsp + 0x18]
0x0001c2eb      488d2dc26900.  lea rbp, [0x00022cb4]
0x0001c2f2      48c744244800.  mov qword [rsp + 0x48], 0
0x0001c2fb      41b901000000   mov r9d, 1
0x0001c301      48c744243000.  mov qword [rsp + 0x30], 0
0x0001c30a      4889442428     mov qword [rsp + 0x28], rax
0x0001c30f      488d8424a000.  lea rax, [rsp + 0xa0]
0x0001c317      48890424       mov qword [rsp], rax
0x0001c31b      488d84249800.  lea rax, [rsp + 0x98]
0x0001c323      4889442458     mov qword [rsp + 0x58], rax
0x0001c328      488d8424c000.  lea rax, [rsp + 0xc0]
0x0001c330      4889442460     mov qword [rsp + 0x60], rax
0x0001c335      488d8424f000.  lea rax, [rsp + 0xf0]
0x0001c33d      4889442468     mov qword [rsp + 0x68], rax
0x0001c342      488b442428     mov rax, qword [rsp + 0x28]
0x0001c347      4c8b442420     mov r8, qword [rsp + 0x20]
0x0001c34c      4183e101       and r9d, 1
0x0001c350      488b3c24       mov rdi, qword [rsp]
0x0001c354      89d9           mov ecx, ebx
0x0001c356      4c89fa         mov rdx, r15
0x0001c359      4c89f6         mov rsi, r14
0x0001c35c      c78424a00000.  mov dword [rsp + 0xa0], 3
0x0001c367      48898424a800.  mov qword [rsp + 0xa8], rax
0x0001c36f      e8ccecffff     call sym.parse_bracket_element.constprop.37
0x0001c374      85c0           test eax, eax
0x0001c376      0f85df040000   jne 0x1c85b
0x0001c37c      488b542420     mov rdx, qword [rsp + 0x20]
0x0001c381      4c89f6         mov rsi, r14
0x0001c384      4c89ff         mov rdi, r15
0x0001c387      e80448ffff     call sym.peek_token_bracket
0x0001c38c      4863d8         movsxd rbx, eax
0x0001c38f      8b8424a00000.  mov eax, dword [rsp + 0xa0]
0x0001c396      8d50fe         lea edx, [rax - 2]
0x0001c399      83e2fd         and edx, 0xfffffffd                     ; 4294967293
0x0001c39c      7417           je 0x1c3b5
0x0001c39e      410fb65708     movzx edx, byte [r15 + 8]
0x0001c3a3      80fa02         cmp dl, 2
0x0001c3a6      0f8495040000   je 0x1c841
0x0001c3ac      80fa16         cmp dl, 0x16
0x0001c3af      0f84b2040000   je 0x1c867
0x0001c3b5      83f804         cmp eax, 4
0x0001c3b8      0f879c090000   ja 0x1cd5a
0x0001c3be      4863448500     movsxd rax, dword [rbp + rax*4]
0x0001c3c3      4801e8         add rax, rbp
0x0001c3c6      ffe0           jmp rax
0x0001c3c8      488b5c2440     mov rbx, qword [rsp + 0x40]
0x0001c3cd      80f923         cmp cl, 0x23
0x0001c3d0      488b7778       mov rsi, qword [rdi + 0x78]
0x0001c3d4      410f94c0       sete r8b
0x0001c3d8      488d0d025c00.  lea rcx, [0x00021fe1]
0x0001c3df      488d15456400.  lea rdx, str.space                      ; 0x2282b ; "space"
0x0001c3e6      450fb6c0       movzx r8d, r8b
0x0001c3ea      4989d9         mov r9, rbx
0x0001c3ed      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0001c3f2      e8b9a2ffff     call sym.build_charclass_op
0x0001c3f7      8b3b           mov edi, dword [rbx]
0x0001c3f9      4889442428     mov qword [rsp + 0x28], rax
0x0001c3fe      85ff           test edi, edi
0x0001c400      0f84f6f7ffff   je 0x1bbfc
0x0001c406      4885c0         test rax, rax
0x0001c409      0f85edf7ffff   jne 0x1bbfc
0x0001c40f      e94cf7ffff     jmp 0x1bb60
0x0001c414      0f1f4000       nop dword [rax]
0x0001c418      488b5c2440     mov rbx, qword [rsp + 0x40]
0x0001c41d      80f921         cmp cl, 0x21
0x0001c420      488b7778       mov rsi, qword [rdi + 0x78]
0x0001c424      410f94c0       sete r8b
0x0001c428      488d0de83600.  lea rcx, [0x0001fb17]                   ; "_"
0x0001c42f      488d15e96300.  lea rdx, str.alnum                      ; 0x2281f ; "alnum"
0x0001c436      450fb6c0       movzx r8d, r8b
0x0001c43a      4989d9         mov r9, rbx
0x0001c43d      ebae           jmp 0x1c3ed
0x0001c43f      488b442418     mov rax, qword [rsp + 0x18]
0x0001c444      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0001c449      488b08         mov rcx, qword [rax]
0x0001c44c      b801000000     mov eax, 1
0x0001c451      d3e0           shl eax, cl
0x0001c453      4898           cdqe
0x0001c455      488587a80000.  test qword [rdi + 0xa8], rax
0x0001c45c      0f842c060000   je 0x1ca8e
0x0001c462      488b5c2410     mov rbx, qword [rsp + 0x10]
0x0001c467      4c8b442418     mov r8, qword [rsp + 0x18]
0x0001c46c      31c9           xor ecx, ecx
0x0001c46e      31d2           xor edx, edx
0x0001c470      480983a00000.  or qword [rbx + 0xa0], rax
0x0001c477      488db3800000.  lea rsi, [rbx + 0x80]
0x0001c47e      488d7b70       lea rdi, [rbx + 0x70]
0x0001c482      e8d96effff     call sym.create_token_tree.isra.16
0x0001c487      4885c0         test rax, rax
0x0001c48a      4889442428     mov qword [rsp + 0x28], rax
0x0001c48f      0f8433010000   je 0x1c5c8
0x0001c495      488383980000.  add qword [rbx + 0x98], 1
0x0001c49d      808bb0000000.  or byte [rbx + 0xb0], 2
0x0001c4a4      e953f7ffff     jmp 0x1bbfc
0x0001c4a9      488b5c2410     mov rbx, qword [rsp + 0x10]
0x0001c4ae      4c8b442418     mov r8, qword [rsp + 0x18]
0x0001c4b3      31c9           xor ecx, ecx
0x0001c4b5      31d2           xor edx, edx
0x0001c4b7      488db3800000.  lea rsi, [rbx + 0x80]
0x0001c4be      488d7b70       lea rdi, [rbx + 0x70]
0x0001c4c2      e8996effff     call sym.create_token_tree.isra.16
0x0001c4c7      4885c0         test rax, rax
0x0001c4ca      4889442428     mov qword [rsp + 0x28], rax
0x0001c4cf      0f84f3000000   je 0x1c5c8
0x0001c4d5      83bbb4000000.  cmp dword [rbx + 0xb4], 1
0x0001c4dc      0f8e1af7ffff   jle 0x1bbfc
0x0001c4e2      808bb0000000.  or byte [rbx + 0xb0], 2
0x0001c4e9      e90ef7ffff     jmp 0x1bbfc
0x0001c4ee      488b442410     mov rax, qword [rsp + 0x10]
0x0001c4f3      4c8b442418     mov r8, qword [rsp + 0x18]
0x0001c4f8      31c9           xor ecx, ecx
0x0001c4fa      31d2           xor edx, edx
0x0001c4fc      488d5870       lea rbx, [rax + 0x70]
0x0001c500      488da8800000.  lea rbp, [rax + 0x80]
0x0001c507      4889df         mov rdi, rbx
0x0001c50a      4889ee         mov rsi, rbp
0x0001c50d      e84e6effff     call sym.create_token_tree.isra.16
0x0001c512      4885c0         test rax, rax
0x0001c515      4889442428     mov qword [rsp + 0x28], rax
0x0001c51a      0f84a8000000   je 0x1c5c8
0x0001c520      488b442410     mov rax, qword [rsp + 0x10]
0x0001c525      4c8da424c000.  lea r12, [rsp + 0xc0]
0x0001c52d      4c8b7c2428     mov r15, qword [rsp + 0x28]
0x0001c532      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x0001c539      0f8ebdf6ffff   jle 0x1bbfc
0x0001c53f      498b4648       mov rax, qword [r14 + 0x48]
0x0001c543      49394668       cmp qword [r14 + 0x68], rax
0x0001c547      0f8e04030000   jle 0x1c851
0x0001c54d      493b4630       cmp rax, qword [r14 + 0x30]
0x0001c551      0f84fa020000   je 0x1c851
0x0001c557      498b5610       mov rdx, qword [r14 + 0x10]
0x0001c55b      833c82ff       cmp dword [rdx + rax*4], 0xffffffff
0x0001c55f      0f85ec020000   jne 0x1c851
0x0001c565      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x0001c56a      488b542420     mov rdx, qword [rsp + 0x20]
0x0001c56f      4c89f6         mov rsi, r14
0x0001c572      4c89ef         mov rdi, r13
0x0001c575      e826edffff     call sym.peek_token
0x0001c57a      4898           cdqe
0x0001c57c      49014648       add qword [r14 + 0x48], rax
0x0001c580      4d89e8         mov r8, r13
0x0001c583      31c9           xor ecx, ecx
0x0001c585      31d2           xor edx, edx
0x0001c587      4889ee         mov rsi, rbp
0x0001c58a      4889df         mov rdi, rbx
0x0001c58d      e8ce6dffff     call sym.create_token_tree.isra.16
0x0001c592      4c89fa         mov rdx, r15
0x0001c595      4989c5         mov r13, rax
0x0001c598      4d89e0         mov r8, r12
0x0001c59b      4889c1         mov rcx, rax
0x0001c59e      4889ee         mov rsi, rbp
0x0001c5a1      4889df         mov rdi, rbx
0x0001c5a4      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x0001c5ac      e8af6dffff     call sym.create_token_tree.isra.16
0x0001c5b1      4d85ed         test r13, r13
0x0001c5b4      4989c7         mov r15, rax
0x0001c5b7      0f94c2         sete dl
0x0001c5ba      4885c0         test rax, rax
0x0001c5bd      0f94c0         sete al
0x0001c5c0      08c2           or dl, al
0x0001c5c2      0f8477ffffff   je 0x1c53f
0x0001c5c8      488b442440     mov rax, qword [rsp + 0x40]
0x0001c5cd      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0001c5d3      e988f5ffff     jmp 0x1bb60
0x0001c5d8      48f744242000.  test qword [rsp + 0x20], 0x20000
0x0001c5e1      0f85e4f5ffff   jne 0x1bbcb
0x0001c5e7      488b442440     mov rax, qword [rsp + 0x40]
0x0001c5ec      48c744242800.  mov qword [rsp + 0x28], 0
0x0001c5f5      c70010000000   mov dword [rax], 0x10                   ; [0x10:4]=0x3e0003
0x0001c5fb      e970f5ffff     jmp 0x1bb70
0x0001c600      4883fb08       cmp rbx, 8
0x0001c604      7665           jbe 0x1c66b
0x0001c606      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0001c60b      4c8d8424c000.  lea r8, [rsp + 0xc0]
0x0001c613      31c9           xor ecx, ecx
0x0001c615      4889c2         mov rdx, rax
0x0001c618      c68424c80000.  mov byte [rsp + 0xc8], 0x11             ; [0x11:1]=0
0x0001c620      488db7800000.  lea rsi, [rdi + 0x80]
0x0001c627      4883c770       add rdi, 0x70
0x0001c62b      e8306dffff     call sym.create_token_tree.isra.16
0x0001c630      4885c0         test rax, rax
0x0001c633      4889442428     mov qword [rsp + 0x28], rax
0x0001c638      748e           je 0x1c5c8
0x0001c63a      48895828       mov qword [rax + 0x28], rbx
0x0001c63e      e9b9f5ffff     jmp 0x1bbfc
0x0001c643      488b442440     mov rax, qword [rsp + 0x40]
0x0001c648      48c744242800.  mov qword [rsp + 0x28], 0
0x0001c651      c70005000000   mov dword [rax], 5
0x0001c657      e914f5ffff     jmp 0x1bb70
0x0001c65c      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x0001c661      4c896c2430     mov qword [rsp + 0x30], r13
0x0001c666      e949f8ffff     jmp 0x1beb4
0x0001c66b      488b742410     mov rsi, qword [rsp + 0x10]
0x0001c670      ba01000000     mov edx, 1
0x0001c675      89d9           mov ecx, ebx
0x0001c677      d3e2           shl edx, cl
0x0001c679      4863d2         movsxd rdx, edx
0x0001c67c      480996a80000.  or qword [rsi + 0xa8], rdx
0x0001c683      eb81           jmp 0x1c606
0x0001c685      488bb424a800.  mov rsi, qword [rsp + 0xa8]
0x0001c68d      4c89e7         mov rdi, r12
0x0001c690      e8bb97ffff     call sym.build_equiv_class.isra.27
0x0001c695      488b542440     mov rdx, qword [rsp + 0x40]
0x0001c69a      85c0           test eax, eax
0x0001c69c      8902           mov dword [rdx], eax
0x0001c69e      7538           jne 0x1c6d8
0x0001c6a0      410fb64708     movzx eax, byte [r15 + 8]
0x0001c6a5      3c02           cmp al, 2
0x0001c6a7      0f8494010000   je 0x1c841
0x0001c6ad      3c15           cmp al, 0x15
0x0001c6af      0f840d040000   je 0x1cac2
0x0001c6b5      4531c9         xor r9d, r9d
0x0001c6b8      e985fcffff     jmp 0x1c342
0x0001c6bd      488bb424a800.  mov rsi, qword [rsp + 0xa8]
0x0001c6c5      4c89e7         mov rdi, r12
0x0001c6c8      e88397ffff     call sym.build_equiv_class.isra.27
0x0001c6cd      488b542440     mov rdx, qword [rsp + 0x40]
0x0001c6d2      85c0           test eax, eax
0x0001c6d4      8902           mov dword [rdx], eax
0x0001c6d6      74c8           je 0x1c6a0
0x0001c6d8      4c89e7         mov rdi, r12
0x0001c6db      e83063feff     call sym..plt.got
0x0001c6e0      4c89ef         mov rdi, r13
0x0001c6e3      e8d856ffff     call sym.free_charset
0x0001c6e8      488b442440     mov rax, qword [rsp + 0x40]
0x0001c6ed      448b00         mov r8d, dword [rax]
0x0001c6f0      4585c0         test r8d, r8d
0x0001c6f3      0f8567f4ffff   jne 0x1bb60
0x0001c6f9      48c744242800.  mov qword [rsp + 0x28], 0
0x0001c702      e9f5f4ffff     jmp 0x1bbfc
0x0001c707      498b5528       mov rdx, qword [r13 + 0x28]
0x0001c70b      483b542430     cmp rdx, qword [rsp + 0x30]
0x0001c710      498b4500       mov rax, qword [r13]
0x0001c714      0f84f4040000   je 0x1cc0e
0x0001c71a      488d4a01       lea rcx, [rdx + 1]
0x0001c71e      49894d28       mov qword [r13 + 0x28], rcx
0x0001c722      8b8c24a80000.  mov ecx, dword [rsp + 0xa8]
0x0001c729      890c90         mov dword [rax + rdx*4], ecx
0x0001c72c      e96fffffff     jmp 0x1c6a0
0x0001c731      0fb69424a800.  movzx edx, byte [rsp + 0xa8]
0x0001c739      be01000000     mov esi, 1
0x0001c73e      4889d0         mov rax, rdx
0x0001c741      83e23f         and edx, 0x3f
0x0001c744      48c1e803       shr rax, 3
0x0001c748      89d1           mov ecx, edx
0x0001c74a      83e018         and eax, 0x18
0x0001c74d      48d3e6         shl rsi, cl
0x0001c750      49093404       or qword [r12 + rax], rsi
0x0001c754      e947ffffff     jmp 0x1c6a0
0x0001c759      4883ec08       sub rsp, 8
0x0001c75d      498b7e78       mov rdi, qword [r14 + 0x78]
0x0001c761      498d5518       lea rdx, [r13 + 0x18]
0x0001c765      ff742428       push qword [rsp + 0x28]
0x0001c769      4c8b8c24b800.  mov r9, qword [rsp + 0xb8]
0x0001c771      498d4d48       lea rcx, [r13 + 0x48]
0x0001c775      4c8b442468     mov r8, qword [rsp + 0x68]
0x0001c77a      4c89e6         mov rsi, r12
0x0001c77d      e81e97ffff     call sym.build_charclass.isra.29
0x0001c782      488b542450     mov rdx, qword [rsp + 0x50]
0x0001c787      85c0           test eax, eax
0x0001c789      8902           mov dword [rdx], eax
0x0001c78b      4159           pop r9
0x0001c78d      415a           pop r10
0x0001c78f      0f840bffffff   je 0x1c6a0
0x0001c795      e93effffff     jmp 0x1c6d8
0x0001c79a      41804d2001     or byte [r13 + 0x20], 1
0x0001c79f      48f744242000.  test qword [rsp + 0x20], 0x100
0x0001c7a8      7408           je 0x1c7b2
0x0001c7aa      49810c240004.  or qword [r12], 0x400                   ; [0x400:8]=0x1200000012
0x0001c7b2      49015e48       add qword [r14 + 0x48], rbx
0x0001c7b6      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x0001c7bb      4c89f6         mov rsi, r14
0x0001c7be      488b542420     mov rdx, qword [rsp + 0x20]
0x0001c7c3      4c89df         mov rdi, r11
0x0001c7c6      e8c543ffff     call sym.peek_token_bracket
0x0001c7cb      89c3           mov ebx, eax
0x0001c7cd      410fb64308     movzx eax, byte [r11 + 8]
0x0001c7d2      3c02           cmp al, 2
0x0001c7d4      0f848f020000   je 0x1ca69
0x0001c7da      c644245701     mov byte [rsp + 0x57], 1
0x0001c7df      e9f2faffff     jmp 0x1c2d6
0x0001c7e4      488b442418     mov rax, qword [rsp + 0x18]
0x0001c7e9      c6400801       mov byte [rax + 8], 1
0x0001c7ed      e9ecfaffff     jmp 0x1c2de
0x0001c7f2      41c707060000.  mov dword [r15], 6
0x0001c7f9      4d89f8         mov r8, r15
0x0001c7fc      31c9           xor ecx, ecx
0x0001c7fe      31d2           xor edx, edx
0x0001c800      4c89e6         mov rsi, r12
0x0001c803      4889df         mov rdi, rbx
0x0001c806      e8556bffff     call sym.create_token_tree.isra.16
0x0001c80b      41c707090000.  mov dword [r15], 9
0x0001c812      4889c5         mov rbp, rax
0x0001c815      e9ccf9ffff     jmp 0x1c1e6
0x0001c81a      4c8b442418     mov r8, qword [rsp + 0x18]
0x0001c81f      31c9           xor ecx, ecx
0x0001c821      31d2           xor edx, edx
0x0001c823      4c89e6         mov rsi, r12
0x0001c826      4889df         mov rdi, rbx
0x0001c829      e8326bffff     call sym.create_token_tree.isra.16
0x0001c82e      4885c0         test rax, rax
0x0001c831      4889442428     mov qword [rsp + 0x28], rax
0x0001c836      0f8507faffff   jne 0x1c243
0x0001c83c      e987fdffff     jmp 0x1c5c8
0x0001c841      488b442440     mov rax, qword [rsp + 0x40]
0x0001c846      c70007000000   mov dword [rax], 7
0x0001c84c      e987feffff     jmp 0x1c6d8
0x0001c851      4c897c2428     mov qword [rsp + 0x28], r15
0x0001c856      e9a1f3ffff     jmp 0x1bbfc
0x0001c85b      488b542440     mov rdx, qword [rsp + 0x40]
0x0001c860      8902           mov dword [rdx], eax
0x0001c862      e971feffff     jmp 0x1c6d8
0x0001c867      4863c3         movsxd rax, ebx
0x0001c86a      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x0001c86f      49014648       add qword [r14 + 0x48], rax
0x0001c873      4c8b542460     mov r10, qword [rsp + 0x60]
0x0001c878      4c89da         mov rdx, r11
0x0001c87b      4c89d7         mov rdi, r10
0x0001c87e      e80d43ffff     call sym.peek_token_bracket
0x0001c883      0fb69424c800.  movzx edx, byte [rsp + 0xc8]
0x0001c88b      80fa02         cmp dl, 2
0x0001c88e      74b1           je 0x1c841
0x0001c890      80fa15         cmp dl, 0x15
0x0001c893      0f840e020000   je 0x1caa7
0x0001c899      488b542468     mov rdx, qword [rsp + 0x68]
0x0001c89e      488dbc24b000.  lea rdi, [rsp + 0xb0]
0x0001c8a6      41b901000000   mov r9d, 1
0x0001c8ac      4d89d8         mov r8, r11
0x0001c8af      89c1           mov ecx, eax
0x0001c8b1      c78424b00000.  mov dword [rsp + 0xb0], 3
0x0001c8bc      48899424b800.  mov qword [rsp + 0xb8], rdx
0x0001c8c4      4c89d2         mov rdx, r10
0x0001c8c7      e874e7ffff     call sym.parse_bracket_element.constprop.37
0x0001c8cc      85c0           test eax, eax
0x0001c8ce      758b           jne 0x1c85b
0x0001c8d0      488b542420     mov rdx, qword [rsp + 0x20]
0x0001c8d5      4c89f6         mov rsi, r14
0x0001c8d8      4c89ff         mov rdi, r15
0x0001c8db      e8b042ffff     call sym.peek_token_bracket
0x0001c8e0      4863d8         movsxd rbx, eax
0x0001c8e3      488b442410     mov rax, qword [rsp + 0x10]
0x0001c8e8      8bb424a00000.  mov esi, dword [rsp + 0xa0]
0x0001c8ef      41b900000000   mov r9d, 0
0x0001c8f5      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x0001c8fc      8d46fe         lea eax, [rsi - 2]
0x0001c8ff      4d0f4fcd       cmovg r9, r13
0x0001c903      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x0001c906      0f846d040000   je 0x1cd79
0x0001c90c      448b9424b000.  mov r10d, dword [rsp + 0xb0]
0x0001c914      418d42fe       lea eax, [r10 - 2]
0x0001c918      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x0001c91b      0f8458040000   je 0x1cd79
0x0001c921      83fe03         cmp esi, 3
0x0001c924      410f94c3       sete r11b
0x0001c928      0f848f040000   je 0x1cdbd
0x0001c92e      4183fa03       cmp r10d, 3
0x0001c932      0f8451040000   je 0x1cd89
0x0001c938      85f6           test esi, esi
0x0001c93a      0f8569030000   jne 0x1cca9
0x0001c940      0fb69424a800.  movzx edx, byte [rsp + 0xa8]
0x0001c948      4585d2         test r10d, r10d
0x0001c94b      0f853c030000   jne 0x1cc8d
0x0001c951      440fb68424b8.  movzx r8d, byte [rsp + 0xb8]
0x0001c95a      85f6           test esi, esi
0x0001c95c      0f84e4020000   je 0x1cc46
0x0001c962      4584db         test r11b, r11b
0x0001c965      0f85db020000   jne 0x1cc46
0x0001c96b      4d85c9         test r9, r9
0x0001c96e      8b9424a80000.  mov edx, dword [rsp + 0xa8]
0x0001c975      741d           je 0x1c994
0x0001c977      4489c7         mov edi, r8d
0x0001c97a      89542478       mov dword [rsp + 0x78], edx
0x0001c97e      4c894c2470     mov qword [rsp + 0x70], r9
0x0001c983      e8f85efeff     call sym.imp.btowc
0x0001c988      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x0001c98d      8b542478       mov edx, dword [rsp + 0x78]
0x0001c991      4189c0         mov r8d, eax
0x0001c994      83faff         cmp edx, 0xffffffff
0x0001c997      0f8410040000   je 0x1cdad
0x0001c99d      4183f8ff       cmp r8d, 0xffffffff
0x0001c9a1      0f8406040000   je 0x1cdad
0x0001c9a7      48f744242000.  test qword [rsp + 0x20], 0x10000
0x0001c9b0      7409           je 0x1c9bb
0x0001c9b2      4139d0         cmp r8d, edx
0x0001c9b5      0f82be030000   jb 0x1cd79
0x0001c9bb      4d85c9         test r9, r9
0x0001c9be      7426           je 0x1c9e6
0x0001c9c0      498b4140       mov rax, qword [r9 + 0x40]
0x0001c9c4      483b442448     cmp rax, qword [rsp + 0x48]
0x0001c9c9      498b4908       mov rcx, qword [r9 + 8]
0x0001c9cd      0f8410040000   je 0x1cde3
0x0001c9d3      891481         mov dword [rcx + rax*4], edx
0x0001c9d6      498b4910       mov rcx, qword [r9 + 0x10]
0x0001c9da      488d7001       lea rsi, [rax + 1]
0x0001c9de      49897140       mov qword [r9 + 0x40], rsi
0x0001c9e2      44890481       mov dword [rcx + rax*4], r8d
0x0001c9e6      31c0           xor eax, eax
0x0001c9e8      bf01000000     mov edi, 1
0x0001c9ed      39c2           cmp edx, eax
0x0001c9ef      89c1           mov ecx, eax
0x0001c9f1      7716           ja 0x1ca09
0x0001c9f3      4139c0         cmp r8d, eax
0x0001c9f6      7211           jb 0x1ca09
0x0001c9f8      4889c6         mov rsi, rax
0x0001c9fb      4989fb         mov r11, rdi
0x0001c9fe      48c1fe06       sar rsi, 6
0x0001ca02      49d3e3         shl r11, cl
0x0001ca05      4d091cf4       or qword [r12 + rsi*8], r11
0x0001ca09      4883c001       add rax, 1
0x0001ca0d      483d00010000   cmp rax, 0x100
0x0001ca13      75d8           jne 0x1c9ed
0x0001ca15      488b442440     mov rax, qword [rsp + 0x40]
0x0001ca1a      c70000000000   mov dword [rax], 0
0x0001ca20      e97bfcffff     jmp 0x1c6a0
0x0001ca25      488b5c2418     mov rbx, qword [rsp + 0x18]
0x0001ca2a      4889c2         mov rdx, rax
0x0001ca2d      4c89f6         mov rsi, r14
0x0001ca30      4c890424       mov qword [rsp], r8
0x0001ca34      4989c7         mov r15, rax
0x0001ca37      4889df         mov rdi, rbx
0x0001ca3a      e861e8ffff     call sym.peek_token
0x0001ca3f      4898           cdqe
0x0001ca41      49014648       add qword [r14 + 0x48], rax
0x0001ca45      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0001ca4a      4c8b0424       mov r8, qword [rsp]
0x0001ca4e      4c89f9         mov rcx, r15
0x0001ca51      4889da         mov rdx, rbx
0x0001ca54      4889ee         mov rsi, rbp
0x0001ca57      4c89f7         mov rdi, r14
0x0001ca5a      e801f0ffff     call sym.parse_expression
0x0001ca5f      4889442428     mov qword [rsp + 0x28], rax
0x0001ca64      e907f1ffff     jmp 0x1bb70
0x0001ca69      488b442440     mov rax, qword [rsp + 0x40]
0x0001ca6e      c70002000000   mov dword [rax], 2
0x0001ca74      e95ffcffff     jmp 0x1c6d8
0x0001ca79      4c89e7         mov rdi, r12
0x0001ca7c      e88f5ffeff     call sym..plt.got
0x0001ca81      4c89ef         mov rdi, r13
0x0001ca84      e8875ffeff     call sym..plt.got
0x0001ca89      e93afbffff     jmp 0x1c5c8
0x0001ca8e      488b442440     mov rax, qword [rsp + 0x40]
0x0001ca93      48c744242800.  mov qword [rsp + 0x28], 0
0x0001ca9c      c70006000000   mov dword [rax], 6
0x0001caa2      e9c9f0ffff     jmp 0x1bb70
0x0001caa7      89d8           mov eax, ebx
0x0001caa9      f7d8           neg eax
0x0001caab      4898           cdqe
0x0001caad      49014648       add qword [r14 + 0x48], rax
0x0001cab1      41c6470801     mov byte [r15 + 8], 1
0x0001cab6      8b8424a00000.  mov eax, dword [rsp + 0xa0]
0x0001cabd      e9f3f8ffff     jmp 0x1c3b5
0x0001cac2      49015e48       add qword [r14 + 0x48], rbx
0x0001cac6      807c245700     cmp byte [rsp + 0x57], 0
0x0001cacb      7414           je 0x1cae1
0x0001cacd      498d542420     lea rdx, [r12 + 0x20]
0x0001cad2      4c89e0         mov rax, r12
0x0001cad5      48f710         not qword [rax]
0x0001cad8      4883c008       add rax, 8
0x0001cadc      4839c2         cmp rdx, rax
0x0001cadf      75f4           jne 0x1cad5
0x0001cae1      488b442410     mov rax, qword [rsp + 0x10]
0x0001cae6      8b90b4000000   mov edx, dword [rax + 0xb4]
0x0001caec      83fa01         cmp edx, 1
0x0001caef      7e18           jle 0x1cb09
0x0001caf1      488b4878       mov rcx, qword [rax + 0x78]
0x0001caf5      31c0           xor eax, eax
0x0001caf7      488b3401       mov rsi, qword [rcx + rax]
0x0001cafb      49213404       and qword [r12 + rax], rsi
0x0001caff      4883c008       add rax, 8
0x0001cb03      4883f820       cmp rax, 0x20                           ; "@"
0x0001cb07      75ee           jne 0x1caf7
0x0001cb09      49837d2800     cmp qword [r13 + 0x28], 0
0x0001cb0e      0f8584000000   jne 0x1cb98
0x0001cb14      49837d3000     cmp qword [r13 + 0x30], 0
0x0001cb19      757d           jne 0x1cb98
0x0001cb1b      49837d3800     cmp qword [r13 + 0x38], 0
0x0001cb20      7576           jne 0x1cb98
0x0001cb22      49837d4000     cmp qword [r13 + 0x40], 0
0x0001cb27      756f           jne 0x1cb98
0x0001cb29      83ea01         sub edx, 1
0x0001cb2c      7e0e           jle 0x1cb3c
0x0001cb2e      49837d4800     cmp qword [r13 + 0x48], 0
0x0001cb33      7563           jne 0x1cb98
0x0001cb35      41f6452001     test byte [r13 + 0x20], 1
0x0001cb3a      755c           jne 0x1cb98
0x0001cb3c      4c89ef         mov rdi, r13
0x0001cb3f      e87c52ffff     call sym.free_charset
0x0001cb44      488b442410     mov rax, qword [rsp + 0x10]
0x0001cb49      4c8d8424b000.  lea r8, [rsp + 0xb0]
0x0001cb51      31c9           xor ecx, ecx
0x0001cb53      31d2           xor edx, edx
0x0001cb55      c68424b80000.  mov byte [rsp + 0xb8], 3
0x0001cb5d      4c89a424b000.  mov qword [rsp + 0xb0], r12
0x0001cb65      488db0800000.  lea rsi, [rax + 0x80]
0x0001cb6c      488d7870       lea rdi, [rax + 0x70]
0x0001cb70      e8eb67ffff     call sym.create_token_tree.isra.16
0x0001cb75      4885c0         test rax, rax
0x0001cb78      4889442428     mov qword [rsp + 0x28], rax
0x0001cb7d      0f8579f0ffff   jne 0x1bbfc
0x0001cb83      488b442440     mov rax, qword [rsp + 0x40]
0x0001cb88      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0001cb8e      e945fbffff     jmp 0x1c6d8
0x0001cb93      0f1f440000     nop dword [rax + rax]
0x0001cb98      488b442410     mov rax, qword [rsp + 0x10]
0x0001cb9d      4c8dbc24b000.  lea r15, [rsp + 0xb0]
0x0001cba5      31d2           xor edx, edx
0x0001cba7      31c9           xor ecx, ecx
0x0001cba9      4d89f8         mov r8, r15
0x0001cbac      8088b0000000.  or byte [rax + 0xb0], 2
0x0001cbb3      488d5870       lea rbx, [rax + 0x70]
0x0001cbb7      488da8800000.  lea rbp, [rax + 0x80]
0x0001cbbe      c68424b80000.  mov byte [rsp + 0xb8], 6
0x0001cbc6      4c89ac24b000.  mov qword [rsp + 0xb0], r13
0x0001cbce      4889df         mov rdi, rbx
0x0001cbd1      4889ee         mov rsi, rbp
0x0001cbd4      e88767ffff     call sym.create_token_tree.isra.16
0x0001cbd9      4889c7         mov rdi, rax
0x0001cbdc      4889442428     mov qword [rsp + 0x28], rax
0x0001cbe1      498d542420     lea rdx, [r12 + 0x20]
0x0001cbe6      4885ff         test rdi, rdi
0x0001cbe9      4c89e0         mov rax, r12
0x0001cbec      7495           je 0x1cb83
0x0001cbee      48833800       cmp qword [rax], 0
0x0001cbf2      0f85a5020000   jne 0x1ce9d
0x0001cbf8      4883c008       add rax, 8
0x0001cbfc      4839c2         cmp rdx, rax
0x0001cbff      75ed           jne 0x1cbee
0x0001cc01      4c89e7         mov rdi, r12
0x0001cc04      e8075efeff     call sym..plt.got
0x0001cc09      e9eeefffff     jmp 0x1bbfc
0x0001cc0e      488b542430     mov rdx, qword [rsp + 0x30]
0x0001cc13      488d7c1201     lea rdi, [rdx + rdx + 1]
0x0001cc18      488d34bd0000.  lea rsi, [rdi*4]
0x0001cc20      48897c2430     mov qword [rsp + 0x30], rdi
0x0001cc25      4889c7         mov rdi, rax
0x0001cc28      e8035cfeff     call sym.imp.realloc
0x0001cc2d      4885c0         test rax, rax
0x0001cc30      0f844dffffff   je 0x1cb83
0x0001cc36      49894500       mov qword [r13], rax
0x0001cc3a      498b5528       mov rdx, qword [r13 + 0x28]
0x0001cc3e      e9d7faffff     jmp 0x1c71a
0x0001cc43      4531c0         xor r8d, r8d
0x0001cc46      4d85c9         test r9, r9
0x0001cc49      7479           je 0x1ccc4
0x0001cc4b      89d7           mov edi, edx
0x0001cc4d      4489442478     mov dword [rsp + 0x78], r8d
0x0001cc52      4c894c2470     mov qword [rsp + 0x70], r9
0x0001cc57      e8245cfeff     call sym.imp.btowc
0x0001cc5c      89c2           mov edx, eax
0x0001cc5e      8b8424b00000.  mov eax, dword [rsp + 0xb0]
0x0001cc65      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x0001cc6a      448b442478     mov r8d, dword [rsp + 0x78]
0x0001cc6f      83f803         cmp eax, 3
0x0001cc72      0f84fffcffff   je 0x1c977
0x0001cc78      85c0           test eax, eax
0x0001cc7a      0f84f7fcffff   je 0x1c977
0x0001cc80      448b8424b800.  mov r8d, dword [rsp + 0xb8]
0x0001cc88      e907fdffff     jmp 0x1c994
0x0001cc8d      4183fa03       cmp r10d, 3
0x0001cc91      0f848b020000   je 0x1cf22
0x0001cc97      85f6           test esi, esi
0x0001cc99      74a8           je 0x1cc43
0x0001cc9b      4584db         test r11b, r11b
0x0001cc9e      75a3           jne 0x1cc43
0x0001cca0      8b9424a80000.  mov edx, dword [rsp + 0xa8]
0x0001cca7      ebd7           jmp 0x1cc80
0x0001cca9      31d2           xor edx, edx
0x0001ccab      83fe03         cmp esi, 3
0x0001ccae      0f8594fcffff   jne 0x1c948
0x0001ccb4      488b8424a800.  mov rax, qword [rsp + 0xa8]
0x0001ccbc      0fb610         movzx edx, byte [rax]
0x0001ccbf      e984fcffff     jmp 0x1c948
0x0001ccc4      4585d2         test r10d, r10d
0x0001ccc7      0f84dafcffff   je 0x1c9a7
0x0001cccd      4183fa03       cmp r10d, 3
0x0001ccd1      75ad           jne 0x1cc80
0x0001ccd3      e9cffcffff     jmp 0x1c9a7
0x0001ccd8      bb80000000     mov ebx, 0x80
0x0001ccdd      41bc02000000   mov r12d, 2
0x0001cce3      e8085dfeff     call sym.imp.__ctype_b_loc
0x0001cce8      4863d3         movsxd rdx, ebx
0x0001cceb      4d63cc         movsxd r9, r12d
0x0001ccee      41b801000000   mov r8d, 1
0x0001ccf4      4801d2         add rdx, rdx
0x0001ccf7      480310         add rdx, qword [rax]
0x0001ccfa      488b442410     mov rax, qword [rsp + 0x10]
0x0001ccff      4a8d3cc8       lea rdi, [rax + r9*8]
0x0001cd03      31c0           xor eax, eax
0x0001cd05      eb1b           jmp 0x1cd22
0x0001cd07      660f1f840000.  nop word [rax + rax]
0x0001cd10      8d3403         lea esi, [rbx + rax]
0x0001cd13      83fe5f         cmp esi, 0x5f
0x0001cd16      7412           je 0x1cd2a
0x0001cd18      4883c001       add rax, 1
0x0001cd1c      4883f840       cmp rax, 0x40                           ; segment.PHDR
0x0001cd20      7417           je 0x1cd39
0x0001cd22      f6044208       test byte [rdx + rax*2], 8
0x0001cd26      89c1           mov ecx, eax
0x0001cd28      74e6           je 0x1cd10
0x0001cd2a      4c89c6         mov rsi, r8
0x0001cd2d      48d3e6         shl rsi, cl
0x0001cd30      4809b7b80000.  or qword [rdi + 0xb8], rsi
0x0001cd37      ebdf           jmp 0x1cd18
0x0001cd39      4983c101       add r9, 1
0x0001cd3d      83c340         add ebx, 0x40                           ; segment.PHDR
0x0001cd40      4883ea80       sub rdx, 0xffffffffffffff80
0x0001cd44      4883c708       add rdi, 8
0x0001cd48      4183f903       cmp r9d, 3
0x0001cd4c      7eb5           jle 0x1cd03
0x0001cd4e      e93ef4ffff     jmp 0x1c191
0x0001cd53      31db           xor ebx, ebx
0x0001cd55      4531e4         xor r12d, r12d
0x0001cd58      eb89           jmp 0x1cce3
0x0001cd5a      488d0d2f6000.  lea rcx, obj.__PRETTY_FUNCTION__.7327   ; 0x22d90 ; "parse_bracket_exp"
0x0001cd61      488d35585a00.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x227c0 ; "../coreutils-8.31/lib/regcomp.c"
0x0001cd68      488d3d974700.  lea rdi, [0x00021506]                   ; "0"
0x0001cd6f      baed0c0000     mov edx, 0xced
0x0001cd74      e88758feff     call sym.imp.__assert_fail
0x0001cd79      488b442440     mov rax, qword [rsp + 0x40]
0x0001cd7e      c7000b000000   mov dword [rax], 0xb                    ; [0xb:4]=0
0x0001cd84      e94ff9ffff     jmp 0x1c6d8
0x0001cd89      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x0001cd91      31c0           xor eax, eax
0x0001cd93      4883c9ff       or rcx, 0xffffffffffffffff
0x0001cd97      f2ae           repne scasb al, byte [rdi]
0x0001cd99      4889c8         mov rax, rcx
0x0001cd9c      48f7d0         not rax
0x0001cd9f      4883e801       sub rax, 1
0x0001cda3      4883f801       cmp rax, 1
0x0001cda7      0f868bfbffff   jbe 0x1c938
0x0001cdad      488b442440     mov rax, qword [rsp + 0x40]
0x0001cdb2      c70003000000   mov dword [rax], 3
0x0001cdb8      e91bf9ffff     jmp 0x1c6d8
0x0001cdbd      488bbc24a800.  mov rdi, qword [rsp + 0xa8]
0x0001cdc5      31c0           xor eax, eax
0x0001cdc7      4883c9ff       or rcx, 0xffffffffffffffff
0x0001cdcb      f2ae           repne scasb al, byte [rdi]
0x0001cdcd      4889c8         mov rax, rcx
0x0001cdd0      48f7d0         not rax
0x0001cdd3      4883e801       sub rax, 1
0x0001cdd7      4883f801       cmp rax, 1
0x0001cddb      0f864dfbffff   jbe 0x1c92e
0x0001cde1      ebca           jmp 0x1cdad
0x0001cde3      488b442448     mov rax, qword [rsp + 0x48]
0x0001cde8      4889cf         mov rdi, rcx
0x0001cdeb      448984248c00.  mov dword [rsp + 0x8c], r8d
0x0001cdf3      899424880000.  mov dword [rsp + 0x88], edx
0x0001cdfa      4c894c2470     mov qword [rsp + 0x70], r9
0x0001cdff      4801c0         add rax, rax
0x0001ce02      4883c001       add rax, 1
0x0001ce06      4c8d14850000.  lea r10, [rax*4]
0x0001ce0e      4889442448     mov qword [rsp + 0x48], rax
0x0001ce13      4c89d6         mov rsi, r10
0x0001ce16      4c8994248000.  mov qword [rsp + 0x80], r10
0x0001ce1e      e80d5afeff     call sym.imp.realloc
0x0001ce23      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x0001ce28      4c8b94248000.  mov r10, qword [rsp + 0x80]
0x0001ce30      4889442478     mov qword [rsp + 0x78], rax
0x0001ce35      498b7910       mov rdi, qword [r9 + 0x10]
0x0001ce39      4c89d6         mov rsi, r10
0x0001ce3c      e8ef59feff     call sym.imp.realloc
0x0001ce41      488b4c2478     mov rcx, qword [rsp + 0x78]
0x0001ce46      4885c9         test rcx, rcx
0x0001ce49      742a           je 0x1ce75
0x0001ce4b      4885c0         test rax, rax
0x0001ce4e      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x0001ce53      8b9424880000.  mov edx, dword [rsp + 0x88]
0x0001ce5a      448b84248c00.  mov r8d, dword [rsp + 0x8c]
0x0001ce62      7411           je 0x1ce75
0x0001ce64      49894110       mov qword [r9 + 0x10], rax
0x0001ce68      49894908       mov qword [r9 + 8], rcx
0x0001ce6c      498b4140       mov rax, qword [r9 + 0x40]
0x0001ce70      e95efbffff     jmp 0x1c9d3
0x0001ce75      4889cf         mov rdi, rcx
0x0001ce78      48890424       mov qword [rsp], rax
0x0001ce7c      e88f5bfeff     call sym..plt.got
0x0001ce81      488b0424       mov rax, qword [rsp]
0x0001ce85      4889c7         mov rdi, rax
0x0001ce88      e8835bfeff     call sym..plt.got
0x0001ce8d      488b442440     mov rax, qword [rsp + 0x40]
0x0001ce92      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0001ce98      e93bf8ffff     jmp 0x1c6d8
0x0001ce9d      31c9           xor ecx, ecx
0x0001ce9f      31d2           xor edx, edx
0x0001cea1      4d89f8         mov r8, r15
0x0001cea4      4889ee         mov rsi, rbp
0x0001cea7      4889df         mov rdi, rbx
0x0001ceaa      c68424b80000.  mov byte [rsp + 0xb8], 3
0x0001ceb2      4c89a424b000.  mov qword [rsp + 0xb0], r12
0x0001ceba      e8a164ffff     call sym.create_token_tree.isra.16
0x0001cebf      4885c0         test rax, rax
0x0001cec2      0f84bbfcffff   je 0x1cb83
0x0001cec8      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0001cecd      4c8d8424c000.  lea r8, [rsp + 0xc0]
0x0001ced5      4889c2         mov rdx, rax
0x0001ced8      4889ee         mov rsi, rbp
0x0001cedb      4889df         mov rdi, rbx
0x0001cede      c68424c80000.  mov byte [rsp + 0xc8], 0xa
0x0001cee6      e87564ffff     call sym.create_token_tree.isra.16
0x0001ceeb      4885c0         test rax, rax
0x0001ceee      4889442428     mov qword [rsp + 0x28], rax
0x0001cef3      0f8503edffff   jne 0x1bbfc
0x0001cef9      e985fcffff     jmp 0x1cb83
0x0001cefe      e85d56feff     call sym.imp.__stack_chk_fail
0x0001cf03      488b442418     mov rax, qword [rsp + 0x18]
0x0001cf08      80780802       cmp byte [rax + 8], 2
0x0001cf0c      0f85eef1ffff   jne 0x1c100
0x0001cf12      488b442440     mov rax, qword [rsp + 0x40]
0x0001cf17      c70009000000   mov dword [rax], 9
0x0001cf1d      e9e9f1ffff     jmp 0x1c10b
0x0001cf22      488b8424b800.  mov rax, qword [rsp + 0xb8]
0x0001cf2a      440fb600       movzx r8d, byte [rax]
0x0001cf2e      e927faffff     jmp 0x1c95a
0x0001cf33      0f1f00         nop dword [rax]
0x0001cf36      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_branch:
0x0001cf40      4157           push r15
0x0001cf42      4156           push r14
0x0001cf44      4989cf         mov r15, rcx
0x0001cf47      4155           push r13
0x0001cf49      4154           push r12
0x0001cf4b      4989f5         mov r13, rsi
0x0001cf4e      55             push rbp
0x0001cf4f      53             push rbx
0x0001cf50      4c89cb         mov rbx, r9
0x0001cf53      4889d5         mov rbp, rdx
0x0001cf56      4d89c4         mov r12, r8
0x0001cf59      4883ec48       sub rsp, 0x48
0x0001cf5d      64488b042528.  mov rax, qword fs:[0x28]
0x0001cf66      4889442438     mov qword [rsp + 0x38], rax
0x0001cf6b      31c0           xor eax, eax
0x0001cf6d      488b06         mov rax, qword [rsi]
0x0001cf70      48893c24       mov qword [rsp], rdi
0x0001cf74      4889442410     mov qword [rsp + 0x10], rax
0x0001cf79      e8e2eaffff     call sym.parse_expression
0x0001cf7e      8b13           mov edx, dword [rbx]
0x0001cf80      4989c6         mov r14, rax
0x0001cf83      85d2           test edx, edx
0x0001cf85      7409           je 0x1cf90
0x0001cf87      4885c0         test rax, rax
0x0001cf8a      0f84fa000000   je 0x1d08a
0x0001cf90      488d442420     lea rax, [rsp + 0x20]
0x0001cf95      4889442418     mov qword [rsp + 0x18], rax
0x0001cf9a      660f1f440000   nop word [rax + rax]
0x0001cfa0      0fb64508       movzx eax, byte [rbp + 8]
0x0001cfa4      89c2           mov edx, eax
0x0001cfa6      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x0001cfa9      80fa02         cmp dl, 2
0x0001cfac      0f848e000000   je 0x1d040
0x0001cfb2      3c09           cmp al, 9
0x0001cfb4      7509           jne 0x1cfbf
0x0001cfb6      4d85e4         test r12, r12
0x0001cfb9      0f8581000000   jne 0x1d040
0x0001cfbf      488b3c24       mov rdi, qword [rsp]
0x0001cfc3      4989d9         mov r9, rbx
0x0001cfc6      4d89e0         mov r8, r12
0x0001cfc9      4c89f9         mov rcx, r15
0x0001cfcc      4889ea         mov rdx, rbp
0x0001cfcf      4c89ee         mov rsi, r13
0x0001cfd2      e889eaffff     call sym.parse_expression
0x0001cfd7      4989c1         mov r9, rax
0x0001cfda      8b03           mov eax, dword [rbx]
0x0001cfdc      85c0           test eax, eax
0x0001cfde      7409           je 0x1cfe9
0x0001cfe0      4d85c9         test r9, r9
0x0001cfe3      0f848b000000   je 0x1d074
0x0001cfe9      4d85f6         test r14, r14
0x0001cfec      747a           je 0x1d068
0x0001cfee      4d85c9         test r9, r9
0x0001cff1      7475           je 0x1d068
0x0001cff3      488b442410     mov rax, qword [rsp + 0x10]
0x0001cff8      4c8b442418     mov r8, qword [rsp + 0x18]
0x0001cffd      4c89c9         mov rcx, r9
0x0001d000      4c89f2         mov rdx, r14
0x0001d003      4c894c2408     mov qword [rsp + 8], r9
0x0001d008      c644242810     mov byte [rsp + 0x28], 0x10             ; [0x10:1]=3
0x0001d00d      488db0800000.  lea rsi, [rax + 0x80]
0x0001d014      488d7870       lea rdi, [rax + 0x70]
0x0001d018      e84363ffff     call sym.create_token_tree.isra.16
0x0001d01d      4885c0         test rax, rax
0x0001d020      4c8b4c2408     mov r9, qword [rsp + 8]
0x0001d025      7469           je 0x1d090
0x0001d027      4989c6         mov r14, rax
0x0001d02a      0fb64508       movzx eax, byte [rbp + 8]
0x0001d02e      89c2           mov edx, eax
0x0001d030      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x0001d033      80fa02         cmp dl, 2
0x0001d036      0f8576ffffff   jne 0x1cfb2
0x0001d03c      0f1f4000       nop dword [rax]
0x0001d040      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0001d045      6448330c2528.  xor rcx, qword fs:[0x28]
0x0001d04e      4c89f0         mov rax, r14
0x0001d051      756a           jne 0x1d0bd
0x0001d053      4883c448       add rsp, 0x48
0x0001d057      5b             pop rbx
0x0001d058      5d             pop rbp
0x0001d059      415c           pop r12
0x0001d05b      415d           pop r13
0x0001d05d      415e           pop r14
0x0001d05f      415f           pop r15
0x0001d061      c3             ret
0x0001d062      660f1f440000   nop word [rax + rax]
0x0001d068      4d85f6         test r14, r14
0x0001d06b      4d0f44f1       cmove r14, r9
0x0001d06f      e92cffffff     jmp 0x1cfa0
0x0001d074      4d85f6         test r14, r14
0x0001d077      7411           je 0x1d08a
0x0001d079      488d35a04dff.  lea rsi, sym.free_tree                  ; 0x11e20 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x0001d080      31d2           xor edx, edx
0x0001d082      4c89f7         mov rdi, r14
0x0001d085      e8f63effff     call sym.postorder
0x0001d08a      4531f6         xor r14d, r14d
0x0001d08d      ebb1           jmp 0x1d040
0x0001d08f      90             nop
0x0001d090      488d35894dff.  lea rsi, sym.free_tree                  ; 0x11e20 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x0001d097      4c89cf         mov rdi, r9
0x0001d09a      31d2           xor edx, edx
0x0001d09c      e8df3effff     call sym.postorder
0x0001d0a1      488d35784dff.  lea rsi, sym.free_tree                  ; 0x11e20 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x0001d0a8      4c89f7         mov rdi, r14
0x0001d0ab      31d2           xor edx, edx
0x0001d0ad      4531f6         xor r14d, r14d
0x0001d0b0      e8cb3effff     call sym.postorder
0x0001d0b5      c7030c000000   mov dword [rbx], 0xc                    ; [0xc:4]=0
0x0001d0bb      eb83           jmp 0x1d040
0x0001d0bd      e89e54feff     call sym.imp.__stack_chk_fail
0x0001d0c2      0f1f4000       nop dword [rax]
0x0001d0c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_reg_exp:
0x0001d0d0      4157           push r15
0x0001d0d2      4156           push r14
0x0001d0d4      4989ce         mov r14, rcx
0x0001d0d7      4155           push r13
0x0001d0d9      4154           push r12
0x0001d0db      4d89cd         mov r13, r9
0x0001d0de      55             push rbp
0x0001d0df      53             push rbx
0x0001d0e0      4889d5         mov rbp, rdx
0x0001d0e3      4989fc         mov r12, rdi
0x0001d0e6      4883ec58       sub rsp, 0x58
0x0001d0ea      488b1e         mov rbx, qword [rsi]
0x0001d0ed      64488b042528.  mov rax, qword fs:[0x28]
0x0001d0f6      4889442448     mov qword [rsp + 0x48], rax
0x0001d0fb      31c0           xor eax, eax
0x0001d0fd      4889742428     mov qword [rsp + 0x28], rsi
0x0001d102      4c89442410     mov qword [rsp + 0x10], r8
0x0001d107      488b83a80000.  mov rax, qword [rbx + 0xa8]
0x0001d10e      4889442420     mov qword [rsp + 0x20], rax
0x0001d113      e828feffff     call sym.parse_branch
0x0001d118      418b5500       mov edx, dword [r13]
0x0001d11c      4989c7         mov r15, rax
0x0001d11f      85d2           test edx, edx
0x0001d121      7409           je 0x1d12c
0x0001d123      4885c0         test rax, rax
0x0001d126      0f84e6000000   je 0x1d212
0x0001d12c      488d442430     lea rax, [rsp + 0x30]
0x0001d131      4889442408     mov qword [rsp + 8], rax
0x0001d136      e989000000     jmp 0x1d1c4
0x0001d13b      0f1f440000     nop dword [rax + rax]
0x0001d140      3c09           cmp al, 9
0x0001d142      750c           jne 0x1d150
0x0001d144      48837c241000   cmp qword [rsp + 0x10], 0
0x0001d14a      0f85a8000000   jne 0x1d1f8
0x0001d150      488b83a80000.  mov rax, qword [rbx + 0xa8]
0x0001d157      4c8b442410     mov r8, qword [rsp + 0x10]
0x0001d15c      4c89f1         mov rcx, r14
0x0001d15f      488b742428     mov rsi, qword [rsp + 0x28]
0x0001d164      4d89e9         mov r9, r13
0x0001d167      4889ea         mov rdx, rbp
0x0001d16a      4c89e7         mov rdi, r12
0x0001d16d      4889442418     mov qword [rsp + 0x18], rax
0x0001d172      488b442420     mov rax, qword [rsp + 0x20]
0x0001d177      488983a80000.  mov qword [rbx + 0xa8], rax
0x0001d17e      e8bdfdffff     call sym.parse_branch
0x0001d183      4889c1         mov rcx, rax
0x0001d186      418b4500       mov eax, dword [r13]
0x0001d18a      85c0           test eax, eax
0x0001d18c      7405           je 0x1d193
0x0001d18e      4885c9         test rcx, rcx
0x0001d191      7469           je 0x1d1fc
0x0001d193      488b442418     mov rax, qword [rsp + 0x18]
0x0001d198      480983a80000.  or qword [rbx + 0xa8], rax
0x0001d19f      4c8b442408     mov r8, qword [rsp + 8]
0x0001d1a4      488db3800000.  lea rsi, [rbx + 0x80]
0x0001d1ab      488d7b70       lea rdi, [rbx + 0x70]
0x0001d1af      4c89fa         mov rdx, r15
0x0001d1b2      c64424380a     mov byte [rsp + 0x38], 0xa
0x0001d1b7      e8a461ffff     call sym.create_token_tree.isra.16
0x0001d1bc      4885c0         test rax, rax
0x0001d1bf      4989c7         mov r15, rax
0x0001d1c2      747c           je 0x1d240
0x0001d1c4      807d080a       cmp byte [rbp + 8], 0xa
0x0001d1c8      754e           jne 0x1d218
0x0001d1ca      4c89f2         mov rdx, r14
0x0001d1cd      4c89e6         mov rsi, r12
0x0001d1d0      4889ef         mov rdi, rbp
0x0001d1d3      4881ca000080.  or rdx, 0x800000
0x0001d1da      e8c1e0ffff     call sym.peek_token
0x0001d1df      4898           cdqe
0x0001d1e1      4901442448     add qword [r12 + 0x48], rax
0x0001d1e6      0fb64508       movzx eax, byte [rbp + 8]
0x0001d1ea      89c2           mov edx, eax
0x0001d1ec      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x0001d1ef      80fa02         cmp dl, 2
0x0001d1f2      0f8548ffffff   jne 0x1d140
0x0001d1f8      31c9           xor ecx, ecx
0x0001d1fa      eba3           jmp 0x1d19f
0x0001d1fc      4d85ff         test r15, r15
0x0001d1ff      7411           je 0x1d212
0x0001d201      488d35184cff.  lea rsi, sym.free_tree                  ; 0x11e20 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x0001d208      31d2           xor edx, edx
0x0001d20a      4c89ff         mov rdi, r15
0x0001d20d      e86e3dffff     call sym.postorder
0x0001d212      4531ff         xor r15d, r15d
0x0001d215      0f1f00         nop dword [rax]
0x0001d218      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0001d21d      6448330c2528.  xor rcx, qword fs:[0x28]
0x0001d226      4c89f8         mov rax, r15
0x0001d229      751f           jne 0x1d24a
0x0001d22b      4883c458       add rsp, 0x58
0x0001d22f      5b             pop rbx
0x0001d230      5d             pop rbp
0x0001d231      415c           pop r12
0x0001d233      415d           pop r13
0x0001d235      415e           pop r14
0x0001d237      415f           pop r15
0x0001d239      c3             ret
0x0001d23a      660f1f440000   nop word [rax + rax]
0x0001d240      41c745000c00.  mov dword [r13], 0xc                    ; [0xc:4]=0
0x0001d248      ebce           jmp 0x1d218
0x0001d24a      e81153feff     call sym.imp.__stack_chk_fail
0x0001d24f      90             nop
;-- re_compile_internal:
0x0001d250      4157           push r15
0x0001d252      4156           push r14
0x0001d254      4155           push r13
0x0001d256      4154           push r12
0x0001d258      55             push rbp
0x0001d259      53             push rbx
0x0001d25a      4881ec280100.  sub rsp, 0x128
0x0001d261      48894f18       mov qword [rdi + 0x18], rcx
0x0001d265      48c747100000.  mov qword [rdi + 0x10], 0
0x0001d26d      64488b042528.  mov rax, qword fs:[0x28]
0x0001d276      488984241801.  mov qword [rsp + 0x118], rax
0x0001d27e      31c0           xor eax, eax
0x0001d280      0fb64738       movzx eax, byte [rdi + 0x38]
0x0001d284      48897c2408     mov qword [rsp + 8], rdi
0x0001d289      4889742410     mov qword [rsp + 0x10], rsi
0x0001d28e      48891424       mov qword [rsp], rdx
0x0001d292      48894c2418     mov qword [rsp + 0x18], rcx
0x0001d297      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001d29f      48c747300000.  mov qword [rdi + 0x30], 0
0x0001d2a7      488b1f         mov rbx, qword [rdi]
0x0001d2aa      88442420       mov byte [rsp + 0x20], al
0x0001d2ae      83e090         and eax, 0xffffff90                     ; 4294967184
0x0001d2b1      48817f08e700.  cmp qword [rdi + 8], 0xe7
0x0001d2b9      884738         mov byte [rdi + 0x38], al
0x0001d2bc      0f86f40d0000   jbe 0x1e0b6
0x0001d2c2      488d7b08       lea rdi, [rbx + 8]
0x0001d2c6      488b442408     mov rax, qword [rsp + 8]
0x0001d2cb      4889d9         mov rcx, rbx
0x0001d2ce      4883e7f8       and rdi, 0xfffffffffffffff8
0x0001d2d2      4829f9         sub rcx, rdi
0x0001d2d5      48c74010e800.  mov qword [rax + 0x10], 0xe8            ; [0xe8:8]=0x600000001
0x0001d2dd      31c0           xor eax, eax
0x0001d2df      81c1e8000000   add ecx, 0xe8
0x0001d2e5      48c703000000.  mov qword [rbx], 0
0x0001d2ec      48c783e00000.  mov qword [rbx + 0xe0], 0
0x0001d2f7      c1e903         shr ecx, 3
0x0001d2fa      f348ab         rep stosq qword [rdi], rax
0x0001d2fd      48b854555555.  movabs rax, 0x555555555555554
0x0001d307      c78380000000.  mov dword [rbx + 0x80], 0xf             ; [0xf:4]=0x3e000300
0x0001d311      48390424       cmp qword [rsp], rax
0x0001d315      0f873b060000   ja 0x1d956
0x0001d31b      4c8b3424       mov r14, qword [rsp]
0x0001d31f      498d4601       lea rax, [r14 + 1]
0x0001d323      4889c7         mov rdi, rax
0x0001d326      48894308       mov qword [rbx + 8], rax
0x0001d32a      4889442428     mov qword [rsp + 0x28], rax
0x0001d32f      48c1e704       shl rdi, 4
0x0001d333      e84854feff     call sym.imp.malloc
0x0001d338      4d85f6         test r14, r14
0x0001d33b      488903         mov qword [rbx], rax
0x0001d33e      0f84e10c0000   je 0x1e025
0x0001d344      be01000000     mov esi, 1
0x0001d349      0f1f80000000.  nop dword [rax]
0x0001d350      4801f6         add rsi, rsi
0x0001d353      48393424       cmp qword [rsp], rsi
0x0001d357      73f7           jae 0x1d350
0x0001d359      488d6eff       lea rbp, [rsi - 1]
0x0001d35d      bf18000000     mov edi, 0x18
0x0001d362      e84953feff     call sym.imp.calloc
0x0001d367      4889ab880000.  mov qword [rbx + 0x88], rbp
0x0001d36e      48894340       mov qword [rbx + 0x40], rax
0x0001d372      e8a951feff     call sym.imp.__ctype_get_mb_cur_max
0x0001d377      bf0e000000     mov edi, 0xe
0x0001d37c      8983b4000000   mov dword [rbx + 0xb4], eax
0x0001d382      e84954feff     call sym.imp.nl_langinfo
0x0001d387      0fb610         movzx edx, byte [rax]
0x0001d38a      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0001d38d      80fa55         cmp dl, 0x55
0x0001d390      754e           jne 0x1d3e0
0x0001d392      0fb65001       movzx edx, byte [rax + 1]
0x0001d396      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0001d399      80fa54         cmp dl, 0x54
0x0001d39c      7542           jne 0x1d3e0
0x0001d39e      0fb65002       movzx edx, byte [rax + 2]
0x0001d3a2      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0001d3a5      80fa46         cmp dl, 0x46
0x0001d3a8      7536           jne 0x1d3e0
0x0001d3aa      31d2           xor edx, edx
0x0001d3ac      8078032d       cmp byte [rax + 3], 0x2d
0x0001d3b0      488d3dab5400.  lea rdi, [0x00022862]                   ; "8"
0x0001d3b7      b902000000     mov ecx, 2
0x0001d3bc      0f94c2         sete dl
0x0001d3bf      488d741003     lea rsi, [rax + rdx + 3]
0x0001d3c4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0001d3c6      0f97c0         seta al
0x0001d3c9      1c00           sbb al, 0
0x0001d3cb      84c0           test al, al
0x0001d3cd      7511           jne 0x1d3e0
0x0001d3cf      808bb0000000.  or byte [rbx + 0xb0], 4
0x0001d3d6      662e0f1f8400.  nop word cs:[rax + rax]
0x0001d3e0      0fb683b00000.  movzx eax, byte [rbx + 0xb0]
0x0001d3e7      89c2           mov edx, eax
0x0001d3e9      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x0001d3ec      83bbb4000000.  cmp dword [rbx + 0xb4], 1
0x0001d3f3      8893b0000000   mov byte [rbx + 0xb0], dl
0x0001d3f9      7e13           jle 0x1d40e
0x0001d3fb      a804           test al, 4
0x0001d3fd      0f8460050000   je 0x1d963
0x0001d403      488d05b65900.  lea rax, obj.utf8_sb_map                ; 0x22dc0
0x0001d40a      48894378       mov qword [rbx + 0x78], rax
0x0001d40e      48833b00       cmp qword [rbx], 0
0x0001d412      0f843e050000   je 0x1d956
0x0001d418      48837b4000     cmp qword [rbx + 0x40], 0
0x0001d41d      0f8433050000   je 0x1d956
0x0001d423      488b442418     mov rax, qword [rsp + 0x18]
0x0001d428      488dac248000.  lea rbp, [rsp + 0x80]
0x0001d430      b912000000     mov ecx, 0x12
0x0001d435      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001d43d      4c8d4508       lea r8, [rbp + 8]
0x0001d441      2500004000     and eax, 0x400000
0x0001d446      4889442420     mov qword [rsp + 0x20], rax
0x0001d44b      488b442408     mov rax, qword [rsp + 8]
0x0001d450      0f95c2         setne dl
0x0001d453      4c89c7         mov rdi, r8
0x0001d456      488b7028       mov rsi, qword [rax + 0x28]
0x0001d45a      31c0           xor eax, eax
0x0001d45c      f348ab         rep stosq qword [rdi], rax
0x0001d45f      488b442410     mov rax, qword [rsp + 0x10]
0x0001d464      488b3c24       mov rdi, qword [rsp]
0x0001d468      4885f6         test rsi, rsi
0x0001d46b      889424080100.  mov byte [rsp + 0x108], dl
0x0001d472      8b8bb4000000   mov ecx, dword [rbx + 0xb4]
0x0001d478      410f95c4       setne r12b
0x0001d47c      4889b424f800.  mov qword [rsp + 0xf8], rsi
0x0001d484      488984248000.  mov qword [rsp + 0x80], rax
0x0001d48c      0fb683b00000.  movzx eax, byte [rbx + 0xb0]
0x0001d493      4109d4         or r12d, edx
0x0001d496      4889bc24d800.  mov qword [rsp + 0xd8], rdi
0x0001d49e      4889bc24d000.  mov qword [rsp + 0xd0], rdi
0x0001d4a6      4489e6         mov esi, r12d
0x0001d4a9      4488a4240b01.  mov byte [rsp + 0x10b], r12b
0x0001d4b1      898c24100100.  mov dword [rsp + 0x110], ecx
0x0001d4b8      4889bc24e800.  mov qword [rsp + 0xe8], rdi
0x0001d4c0      4889bc24e000.  mov qword [rsp + 0xe0], rdi
0x0001d4c8      89c2           mov edx, eax
0x0001d4ca      c0e803         shr al, 3
0x0001d4cd      c0ea02         shr dl, 2
0x0001d4d0      83e001         and eax, 1
0x0001d4d3      83e201         and edx, 1
0x0001d4d6      4885ff         test rdi, rdi
0x0001d4d9      8884240a0100.  mov byte [rsp + 0x10a], al
0x0001d4e0      889424090100.  mov byte [rsp + 0x109], dl
0x0001d4e7      0f8538040000   jne 0x1d925
0x0001d4ed      4084f6         test sil, sil
0x0001d4f0      740d           je 0x1d4ff
0x0001d4f2      488b84248800.  mov rax, qword [rsp + 0x88]
0x0001d4fa      4889442410     mov qword [rsp + 0x10], rax
0x0001d4ff      48837c242000   cmp qword [rsp + 0x20], 0
0x0001d505      488b442410     mov rax, qword [rsp + 0x10]
0x0001d50a      488984248800.  mov qword [rsp + 0x88], rax
0x0001d512      0f84fd000000   je 0x1d615
0x0001d518      83f901         cmp ecx, 1
0x0001d51b      0f8eec0b0000   jle 0x1e10d
0x0001d521      4889ef         mov rdi, rbp
0x0001d524      e89740ffff     call sym.build_wcs_upper_buffer
0x0001d529      85c0           test eax, eax
0x0001d52b      7543           jne 0x1d570
0x0001d52d      488b0424       mov rax, qword [rsp]
0x0001d531      483b8424b800.  cmp rax, qword [rsp + 0xb8]
0x0001d539      0f8eb10b0000   jle 0x1e0f0
0x0001d53f      486383b40000.  movsxd rax, dword [rbx + 0xb4]
0x0001d546      488bb424c000.  mov rsi, qword [rsp + 0xc0]
0x0001d54e      48038424b000.  add rax, qword [rsp + 0xb0]
0x0001d556      4839c6         cmp rsi, rax
0x0001d559      0f8f910b0000   jg 0x1e0f0
0x0001d55f      4801f6         add rsi, rsi
0x0001d562      4889ef         mov rdi, rbp
0x0001d565      e8e63affff     call sym.re_string_realloc_buffers
0x0001d56a      85c0           test eax, eax
0x0001d56c      74b3           je 0x1d521
0x0001d56e      6690           nop
0x0001d570      8944244c       mov dword [rsp + 0x4c], eax
0x0001d574      488b442408     mov rax, qword [rsp + 8]
0x0001d579      4c8b28         mov r13, qword [rax]
0x0001d57c      498b7d70       mov rdi, qword [r13 + 0x70]
0x0001d580      4885ff         test rdi, rdi
0x0001d583      7413           je 0x1d598
0x0001d585      0f1f00         nop dword [rax]
0x0001d588      4c8b27         mov r12, qword [rdi]
0x0001d58b      e88054feff     call sym..plt.got
0x0001d590      4d85e4         test r12, r12
0x0001d593      4c89e7         mov rdi, r12
0x0001d596      75f0           jne 0x1d588
0x0001d598      498b7d20       mov rdi, qword [r13 + 0x20]
0x0001d59c      49c745700000.  mov qword [r13 + 0x70], 0
0x0001d5a4      41c785800000.  mov dword [r13 + 0x80], 0xf             ; [0xf:4]=0x3e000300
0x0001d5af      49c745680000.  mov qword [r13 + 0x68], 0
0x0001d5b7      e85454feff     call sym..plt.got
0x0001d5bc      49c745200000.  mov qword [r13 + 0x20], 0
0x0001d5c4      4889ef         mov rdi, rbp
0x0001d5c7      e8c44dffff     call sym.re_string_destruct
0x0001d5cc      4889df         mov rdi, rbx
0x0001d5cf      e8fc4dffff     call sym.free_dfa_content
0x0001d5d4      488b442408     mov rax, qword [rsp + 8]
0x0001d5d9      48c700000000.  mov qword [rax], 0
0x0001d5e0      48c740080000.  mov qword [rax + 8], 0
0x0001d5e8      8b44244c       mov eax, dword [rsp + 0x4c]
0x0001d5ec      488b9c241801.  mov rbx, qword [rsp + 0x118]
0x0001d5f4      6448331c2528.  xor rbx, qword fs:[0x28]
0x0001d5fd      0f853d0d0000   jne 0x1e340
0x0001d603      4881c4280100.  add rsp, 0x128
0x0001d60a      5b             pop rbx
0x0001d60b      5d             pop rbp
0x0001d60c      415c           pop r12
0x0001d60e      415d           pop r13
0x0001d610      415e           pop r14
0x0001d612      415f           pop r15
0x0001d614      c3             ret
0x0001d615      83f901         cmp ecx, 1
0x0001d618      0f8fac090000   jg 0x1dfca
0x0001d61e      4584e4         test r12b, r12b
0x0001d621      488bb424c000.  mov rsi, qword [rsp + 0xc0]
0x0001d629      0f8415060000   je 0x1dc44
0x0001d62f      4839b424d800.  cmp qword [rsp + 0xd8], rsi
0x0001d637      488b8424b000.  mov rax, qword [rsp + 0xb0]
0x0001d63f      480f4eb424d8.  cmovle rsi, qword [rsp + 0xd8]
0x0001d648      4839c6         cmp rsi, rax
0x0001d64b      7f10           jg 0x1d65d
0x0001d64d      eb41           jmp 0x1d690
0x0001d64f      90             nop
0x0001d650      488b94248800.  mov rdx, qword [rsp + 0x88]
0x0001d658      4889542410     mov qword [rsp + 0x10], rdx
0x0001d65d      488b94248000.  mov rdx, qword [rsp + 0x80]
0x0001d665      488b8c24f800.  mov rcx, qword [rsp + 0xf8]
0x0001d66d      4801c2         add rdx, rax
0x0001d670      48039424a800.  add rdx, qword [rsp + 0xa8]
0x0001d678      0fb612         movzx edx, byte [rdx]
0x0001d67b      0fb61411       movzx edx, byte [rcx + rdx]
0x0001d67f      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0001d684      881401         mov byte [rcx + rax], dl
0x0001d687      4883c001       add rax, 1
0x0001d68b      4839c6         cmp rsi, rax
0x0001d68e      75c0           jne 0x1d650
0x0001d690      48898424b000.  mov qword [rsp + 0xb0], rax
0x0001d698      48898424b800.  mov qword [rsp + 0xb8], rax
0x0001d6a0      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001d6a8      4c8b642408     mov r12, qword [rsp + 8]
0x0001d6ad      4c8b742418     mov r14, qword [rsp + 0x18]
0x0001d6b2      4c8d6c2450     lea r13, [rsp + 0x50]
0x0001d6b7      4889ee         mov rsi, rbp
0x0001d6ba      4c89ef         mov rdi, r13
0x0001d6bd      4c896c2428     mov qword [rsp + 0x28], r13
0x0001d6c2      4d8b3c24       mov r15, qword [r12]
0x0001d6c6      4c89f2         mov rdx, r14
0x0001d6c9      49c744243000.  mov qword [r12 + 0x30], 0
0x0001d6d2      4881ca000080.  or rdx, 0x800000
0x0001d6d9      4d89b7d80000.  mov qword [r15 + 0xd8], r14
0x0001d6e0      e8bbdbffff     call sym.peek_token
0x0001d6e5      4c8d4c244c     lea r9, [rsp + 0x4c]
0x0001d6ea      4531c0         xor r8d, r8d
0x0001d6ed      4c89f1         mov rcx, r14
0x0001d6f0      4c89ea         mov rdx, r13
0x0001d6f3      4c89e6         mov rsi, r12
0x0001d6f6      4889ef         mov rdi, rbp
0x0001d6f9      4898           cdqe
0x0001d6fb      48018424c800.  add qword [rsp + 0xc8], rax
0x0001d703      e8c8f9ffff     call sym.parse_reg_exp
0x0001d708      8b4c244c       mov ecx, dword [rsp + 0x4c]
0x0001d70c      85c9           test ecx, ecx
0x0001d70e      0f85230a0000   jne 0x1e137
0x0001d714      4d8d6f70       lea r13, [r15 + 0x70]
0x0001d718      4c8d642460     lea r12, [rsp + 0x60]
0x0001d71d      4983ef80       sub r15, 0xffffffffffffff80
0x0001d721      31d2           xor edx, edx
0x0001d723      31c9           xor ecx, ecx
0x0001d725      4c89fe         mov rsi, r15
0x0001d728      4d89e0         mov r8, r12
0x0001d72b      4c89ef         mov rdi, r13
0x0001d72e      48890424       mov qword [rsp], rax
0x0001d732      c644246802     mov byte [rsp + 0x68], 2
0x0001d737      e8245cffff     call sym.create_token_tree.isra.16
0x0001d73c      4c8b0c24       mov r9, qword [rsp]
0x0001d740      4989c3         mov r11, rax
0x0001d743      4889c2         mov rdx, rax
0x0001d746      4d85c9         test r9, r9
0x0001d749      7427           je 0x1d772
0x0001d74b      4c89d9         mov rcx, r11
0x0001d74e      4c89ca         mov rdx, r9
0x0001d751      4d89e0         mov r8, r12
0x0001d754      4c89fe         mov rsi, r15
0x0001d757      4c89ef         mov rdi, r13
0x0001d75a      4c891c24       mov qword [rsp], r11
0x0001d75e      c644246810     mov byte [rsp + 0x68], 0x10             ; [0x10:1]=3
0x0001d763      e8f85bffff     call sym.create_token_tree.isra.16
0x0001d768      4c8b1c24       mov r11, qword [rsp]
0x0001d76c      4c89da         mov rdx, r11
0x0001d76f      4989c3         mov r11, rax
0x0001d772      4885d2         test rdx, rdx
0x0001d775      488b4c2408     mov rcx, qword [rsp + 8]
0x0001d77a      0f94c2         sete dl
0x0001d77d      4d85db         test r11, r11
0x0001d780      0f94c0         sete al
0x0001d783      08c2           or dl, al
0x0001d785      4c8b29         mov r13, qword [rcx]
0x0001d788      0f8594090000   jne 0x1e122
0x0001d78e      4d8b7d08       mov r15, qword [r13 + 8]
0x0001d792      4c895b68       mov qword [rbx + 0x68], r11
0x0001d796      4a8d0cfd0000.  lea rcx, [r15*8]
0x0001d79e      4f8d3c7f       lea r15, [r15 + r15*2]
0x0001d7a2      4889cf         mov rdi, rcx
0x0001d7a5      48890c24       mov qword [rsp], rcx
0x0001d7a9      49c1e703       shl r15, 3
0x0001d7ad      e8ce4ffeff     call sym.imp.malloc
0x0001d7b2      488b0c24       mov rcx, qword [rsp]
0x0001d7b6      49894518       mov qword [r13 + 0x18], rax
0x0001d7ba      4889442418     mov qword [rsp + 0x18], rax
0x0001d7bf      4889cf         mov rdi, rcx
0x0001d7c2      e8b94ffeff     call sym.imp.malloc
0x0001d7c7      4c89ff         mov rdi, r15
0x0001d7ca      49894520       mov qword [r13 + 0x20], rax
0x0001d7ce      4889442410     mov qword [rsp + 0x10], rax
0x0001d7d3      e8a84ffeff     call sym.imp.malloc
0x0001d7d8      4c89ff         mov rdi, r15
0x0001d7db      49894528       mov qword [r13 + 0x28], rax
0x0001d7df      48890424       mov qword [rsp], rax
0x0001d7e3      e8984ffeff     call sym.imp.malloc
0x0001d7e8      488b542418     mov rdx, qword [rsp + 0x18]
0x0001d7ed      49894530       mov qword [r13 + 0x30], rax
0x0001d7f1      488b3424       mov rsi, qword [rsp]
0x0001d7f5      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0001d7fa      4885d2         test rdx, rdx
0x0001d7fd      0f84ba070000   je 0x1dfbd
0x0001d803      4885c9         test rcx, rcx
0x0001d806      0f84b1070000   je 0x1dfbd
0x0001d80c      4885f6         test rsi, rsi
0x0001d80f      0f84a8070000   je 0x1dfbd
0x0001d815      4885c0         test rax, rax
0x0001d818      0f849f070000   je 0x1dfbd
0x0001d81e      488b442408     mov rax, qword [rsp + 8]
0x0001d823      4c8b7830       mov r15, qword [rax + 0x30]
0x0001d827      4a8d3cfd0000.  lea rdi, [r15*8]
0x0001d82f      e84c4ffeff     call sym.imp.malloc
0x0001d834      4885c0         test rax, rax
0x0001d837      498985e00000.  mov qword [r13 + 0xe0], rax
0x0001d83e      746d           je 0x1d8ad
0x0001d840      4d85ff         test r15, r15
0x0001d843      7418           je 0x1d85d
0x0001d845      31d2           xor edx, edx
0x0001d847      660f1f840000.  nop word [rax + rax]
0x0001d850      488914d0       mov qword [rax + rdx*8], rdx
0x0001d854      4883c201       add rdx, 1
0x0001d858      4c39fa         cmp rdx, r15
0x0001d85b      75f3           jne 0x1d850
0x0001d85d      498b7d68       mov rdi, qword [r13 + 0x68]
0x0001d861      488d35f84fff.  lea rsi, sym.optimize_subexps           ; 0x12860
0x0001d868      4c89ea         mov rdx, r13
0x0001d86b      e88037ffff     call sym.preorder
0x0001d870      488b442408     mov rax, qword [rsp + 8]
0x0001d875      498bbde00000.  mov rdi, qword [r13 + 0xe0]
0x0001d87c      488b5030       mov rdx, qword [rax + 0x30]
0x0001d880      4885d2         test rdx, rdx
0x0001d883      0f84eb080000   je 0x1e174
0x0001d889      488b07         mov rax, qword [rdi]
0x0001d88c      4885c0         test rax, rax
0x0001d88f      740d           je 0x1d89e
0x0001d891      eb1a           jmp 0x1d8ad
0x0001d893      0f1f440000     nop dword [rax + rax]
0x0001d898      483904c7       cmp qword [rdi + rax*8], rax
0x0001d89c      750f           jne 0x1d8ad
0x0001d89e      4883c001       add rax, 1
0x0001d8a2      4839c2         cmp rdx, rax
0x0001d8a5      77f1           ja 0x1d898
0x0001d8a7      0f84c7080000   je 0x1e174
0x0001d8ad      498b7d68       mov rdi, qword [r13 + 0x68]
0x0001d8b1      488b542408     mov rdx, qword [rsp + 8]
0x0001d8b6      488d35a35eff.  lea rsi, sym.lower_subexps              ; 0x13760 ; "USH\x89\xfdH\x89\xf3H\x83\xec\x18H\x8bV\bdH\x8b\x04%("
0x0001d8bd      e8be36ffff     call sym.postorder
0x0001d8c2      85c0           test eax, eax
0x0001d8c4      0f85a6fcffff   jne 0x1d570
0x0001d8ca      498b7d68       mov rdi, qword [r13 + 0x68]
0x0001d8ce      488d35fb83ff.  lea rsi, sym.calc_first                 ; 0x15cd0
0x0001d8d5      4c89ea         mov rdx, r13
0x0001d8d8      e8a336ffff     call sym.postorder
0x0001d8dd      85c0           test eax, eax
0x0001d8df      0f858bfcffff   jne 0x1d570
0x0001d8e5      498b7d68       mov rdi, qword [r13 + 0x68]
0x0001d8e9      488d350050ff.  lea rsi, sym.calc_next                  ; 0x128f0
0x0001d8f0      4c89ea         mov rdx, r13
0x0001d8f3      e8f836ffff     call sym.preorder
0x0001d8f8      498b5568       mov rdx, qword [r13 + 0x68]
0x0001d8fc      488d35c55300.  lea rsi, [0x00022cc8]
0x0001d903      0f1f440000     nop dword [rax + rax]
0x0001d908      0fb64a30       movzx ecx, byte [rdx + 0x30]
0x0001d90c      488b7a38       mov rdi, qword [rdx + 0x38]
0x0001d910      80f910         cmp cl, 0x10
0x0001d913      0f87cf000000   ja 0x1d9e8
0x0001d919      0fb6c1         movzx eax, cl
0x0001d91c      48630486       movsxd rax, dword [rsi + rax*4]
0x0001d920      4801f0         add rax, rsi
0x0001d923      ffe0           jmp rax
0x0001d925      488b742428     mov rsi, qword [rsp + 0x28]
0x0001d92a      4889ef         mov rdi, rbp
0x0001d92d      e81e37ffff     call sym.re_string_realloc_buffers
0x0001d932      85c0           test eax, eax
0x0001d934      0f8536fcffff   jne 0x1d570
0x0001d93a      0fb6b4240b01.  movzx esi, byte [rsp + 0x10b]
0x0001d942      8b8bb4000000   mov ecx, dword [rbx + 0xb4]
0x0001d948      4084f6         test sil, sil
0x0001d94b      0f84aefbffff   je 0x1d4ff
0x0001d951      e99cfbffff     jmp 0x1d4f2
0x0001d956      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x0001d95e      e969fcffff     jmp 0x1d5cc
0x0001d963      be01000000     mov esi, 1
0x0001d968      bf20000000     mov edi, 0x20                           ; "@"
0x0001d96d      e83e4dfeff     call sym.imp.calloc
0x0001d972      4885c0         test rax, rax
0x0001d975      48894378       mov qword [rbx + 0x78], rax
0x0001d979      74db           je 0x1d956
0x0001d97b      4531e4         xor r12d, r12d
0x0001d97e      31ed           xor ebp, ebp
0x0001d980      41bd01000000   mov r13d, 1
0x0001d986      4531ff         xor r15d, r15d
0x0001d989      0f1f80000000.  nop dword [rax]
0x0001d990      468d743d00     lea r14d, [rbp + r15]
0x0001d995      4489f7         mov edi, r14d
0x0001d998      e8e34efeff     call sym.imp.btowc
0x0001d99d      83f8ff         cmp eax, 0xffffffff
0x0001d9a0      7413           je 0x1d9b5
0x0001d9a2      488b7378       mov rsi, qword [rbx + 0x78]
0x0001d9a6      4c89ef         mov rdi, r13
0x0001d9a9      4489f9         mov ecx, r15d
0x0001d9ac      48d3e7         shl rdi, cl
0x0001d9af      4c01e6         add rsi, r12
0x0001d9b2      48093e         or qword [rsi], rdi
0x0001d9b5      41f7c680ffff.  test r14d, 0xffffff80                   ; 4294967168
0x0001d9bc      750c           jne 0x1d9ca
0x0001d9be      4439f0         cmp eax, r14d
0x0001d9c1      7407           je 0x1d9ca
0x0001d9c3      808bb0000000.  or byte [rbx + 0xb0], 8
0x0001d9ca      4983c701       add r15, 1
0x0001d9ce      4983ff40       cmp r15, 0x40                           ; segment.PHDR
0x0001d9d2      75bc           jne 0x1d990
0x0001d9d4      83c540         add ebp, 0x40                           ; segment.PHDR
0x0001d9d7      4983c408       add r12, 8
0x0001d9db      81fd00010000   cmp ebp, 0x100
0x0001d9e1      75a3           jne 0x1d986
0x0001d9e3      e926faffff     jmp 0x1d40e
0x0001d9e8      83e108         and ecx, 8
0x0001d9eb      0f8511090000   jne 0x1e302
0x0001d9f1      488b4220       mov rax, qword [rdx + 0x20]
0x0001d9f5      488b4838       mov rcx, qword [rax + 0x38]
0x0001d9f9      498b4518       mov rax, qword [r13 + 0x18]
0x0001d9fd      48890cf8       mov qword [rax + rdi*8], rcx
0x0001da01      4c8b7a08       mov r15, qword [rdx + 8]
0x0001da05      31ff           xor edi, edi
0x0001da07      4d85ff         test r15, r15
0x0001da0a      740f           je 0x1da1b
0x0001da0c      4c89fa         mov rdx, r15
0x0001da0f      e9f4feffff     jmp 0x1d908
0x0001da14      0f1f4000       nop dword [rax]
0x0001da18      4889c2         mov rdx, rax
0x0001da1b      4c8b7a10       mov r15, qword [rdx + 0x10]
0x0001da1f      4d85ff         test r15, r15
0x0001da22      0f94c1         sete cl
0x0001da25      4939ff         cmp r15, rdi
0x0001da28      0f94c0         sete al
0x0001da2b      08c1           or cl, al
0x0001da2d      884c2410       mov byte [rsp + 0x10], cl
0x0001da31      74d9           je 0x1da0c
0x0001da33      488b02         mov rax, qword [rdx]
0x0001da36      4889d7         mov rdi, rdx
0x0001da39      4885c0         test rax, rax
0x0001da3c      75da           jne 0x1da18
0x0001da3e      4531f6         xor r14d, r14d
0x0001da41      4531ff         xor r15d, r15d
0x0001da44      0f1f4000       nop dword [rax]
0x0001da48      498b5510       mov rdx, qword [r13 + 0x10]
0x0001da4c      4c39fa         cmp rdx, r15
0x0001da4f      7425           je 0x1da76
0x0001da51      4f8d147f       lea r10, [r15 + r15*2]
0x0001da55      498b4530       mov rax, qword [r13 + 0x30]
0x0001da59      49c1e203       shl r10, 3
0x0001da5d      4a837c100800   cmp qword [rax + r10 + 8], 0
0x0001da63      0f84ff010000   je 0x1dc68
0x0001da69      498b5510       mov rdx, qword [r13 + 0x10]
0x0001da6d      4983c701       add r15, 1
0x0001da71      4c39fa         cmp rdx, r15
0x0001da74      75db           jne 0x1da51
0x0001da76      4584f6         test r14b, r14b
0x0001da79      0f843f020000   je 0x1dcbe
0x0001da7f      4531f6         xor r14d, r14d
0x0001da82      4531ff         xor r15d, r15d
0x0001da85      ebca           jmp 0x1da51
0x0001da87      41808db00000.  or byte [r13 + 0xb0], 1
0x0001da8f      4c8b7a08       mov r15, qword [rdx + 8]
0x0001da93      4d85ff         test r15, r15
0x0001da96      0f840d060000   je 0x1e0a9
0x0001da9c      498b4718       mov rax, qword [r15 + 0x18]
0x0001daa0      488b4838       mov rcx, qword [rax + 0x38]
0x0001daa4      488b4210       mov rax, qword [rdx + 0x10]
0x0001daa8      4885c0         test rax, rax
0x0001daab      0f84eb050000   je 0x1e09c
0x0001dab1      488b4018       mov rax, qword [rax + 0x18]
0x0001dab5      4c8b4838       mov r9, qword [rax + 0x38]
0x0001dab9      4885c9         test rcx, rcx
0x0001dabc      0f885f080000   js 0x1e321
0x0001dac2      4d85c9         test r9, r9
0x0001dac5      0f8818080000   js 0x1e2e3
0x0001dacb      498b4528       mov rax, qword [r13 + 0x28]
0x0001dacf      488d3c7f       lea rdi, [rdi + rdi*2]
0x0001dad3      4889742438     mov qword [rsp + 0x38], rsi
0x0001dad8      4c894c2430     mov qword [rsp + 0x30], r9
0x0001dadd      48894c2418     mov qword [rsp + 0x18], rcx
0x0001dae2      4889542410     mov qword [rsp + 0x10], rdx
0x0001dae7      4c8d14f8       lea r10, [rax + rdi*8]
0x0001daeb      bf10000000     mov edi, 0x10
0x0001daf0      49c702020000.  mov qword [r10], 2
0x0001daf7      4c891424       mov qword [rsp], r10
0x0001dafb      e8804cfeff     call sym.imp.malloc
0x0001db00      4c8b1424       mov r10, qword [rsp]
0x0001db04      4885c0         test rax, rax
0x0001db07      488b542410     mov rdx, qword [rsp + 0x10]
0x0001db0c      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0001db11      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x0001db16      488b742438     mov rsi, qword [rsp + 0x38]
0x0001db1b      49894210       mov qword [r10 + 0x10], rax
0x0001db1f      0f8495020000   je 0x1ddba
0x0001db25      4c39c9         cmp rcx, r9
0x0001db28      0f84cf050000   je 0x1e0fd
0x0001db2e      49c742080200.  mov qword [r10 + 8], 2
0x0001db36      0f8ca8050000   jl 0x1e0e4
0x0001db3c      4c8908         mov qword [rax], r9
0x0001db3f      48894808       mov qword [rax + 8], rcx
0x0001db43      e9bdfeffff     jmp 0x1da05
0x0001db48      488b4220       mov rax, qword [rdx + 0x20]
0x0001db4c      488d0c7f       lea rcx, [rdi + rdi*2]
0x0001db50      bf08000000     mov edi, 8
0x0001db55      4889742410     mov qword [rsp + 0x10], rsi
0x0001db5a      48891424       mov qword [rsp], rdx
0x0001db5e      4c8b7038       mov r14, qword [rax + 0x38]
0x0001db62      498b4528       mov rax, qword [r13 + 0x28]
0x0001db66      4c8d3cc8       lea r15, [rax + rcx*8]
0x0001db6a      49c707010000.  mov qword [r15], 1
0x0001db71      49c747080100.  mov qword [r15 + 8], 1
0x0001db79      e8024cfeff     call sym.imp.malloc
0x0001db7e      4885c0         test rax, rax
0x0001db81      49894710       mov qword [r15 + 0x10], rax
0x0001db85      488b1424       mov rdx, qword [rsp]
0x0001db89      488b742410     mov rsi, qword [rsp + 0x10]
0x0001db8e      0f84a4060000   je 0x1e238
0x0001db94      4c8930         mov qword [rax], r14
0x0001db97      4c8b7a08       mov r15, qword [rdx + 8]
0x0001db9b      e965feffff     jmp 0x1da05
0x0001dba0      48837a2000     cmp qword [rdx + 0x20], 0
0x0001dba5      0f8456feffff   je 0x1da01
0x0001dbab      488d0dce5100.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x22d80 ; "link_nfa_nodes"
0x0001dbb2      488d35074c00.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x227c0 ; "../coreutils-8.31/lib/regcomp.c"
0x0001dbb9      488d3da44c00.  lea rdi, str.node__next____NULL         ; 0x22864 ; "node->next == NULL"
0x0001dbc0      ba9f050000     mov edx, 0x59f
0x0001dbc5      e8364afeff     call sym.imp.__assert_fail
0x0001dbca      660f1f440000   nop word [rax + rax]
0x0001dbd0      488b4220       mov rax, qword [rdx + 0x20]
0x0001dbd4      4c8b7838       mov r15, qword [rax + 0x38]
0x0001dbd8      498b4518       mov rax, qword [r13 + 0x18]
0x0001dbdc      4c893cf8       mov qword [rax + rdi*8], r15
0x0001dbe0      807a3004       cmp byte [rdx + 0x30], 4
0x0001dbe4      0f8517feffff   jne 0x1da01
0x0001dbea      498b4528       mov rax, qword [r13 + 0x28]
0x0001dbee      488d0c7f       lea rcx, [rdi + rdi*2]
0x0001dbf2      bf08000000     mov edi, 8
0x0001dbf7      4889742418     mov qword [rsp + 0x18], rsi
0x0001dbfc      4889542410     mov qword [rsp + 0x10], rdx
0x0001dc01      488d0cc8       lea rcx, [rax + rcx*8]
0x0001dc05      48c701010000.  mov qword [rcx], 1
0x0001dc0c      48c741080100.  mov qword [rcx + 8], 1
0x0001dc14      48890c24       mov qword [rsp], rcx
0x0001dc18      e8634bfeff     call sym.imp.malloc
0x0001dc1d      488b0c24       mov rcx, qword [rsp]
0x0001dc21      4885c0         test rax, rax
0x0001dc24      488b542410     mov rdx, qword [rsp + 0x10]
0x0001dc29      488b742418     mov rsi, qword [rsp + 0x18]
0x0001dc2e      48894110       mov qword [rcx + 0x10], rax
0x0001dc32      0f8448060000   je 0x1e280
0x0001dc38      4c8938         mov qword [rax], r15
0x0001dc3b      4c8b7a08       mov r15, qword [rdx + 8]
0x0001dc3f      e9c1fdffff     jmp 0x1da05
0x0001dc44      4889b424b000.  mov qword [rsp + 0xb0], rsi
0x0001dc4c      4889b424b800.  mov qword [rsp + 0xb8], rsi
0x0001dc54      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001dc5c      e947faffff     jmp 0x1d6a8
0x0001dc61      0f1f80000000.  nop dword [rax]
0x0001dc68      b901000000     mov ecx, 1
0x0001dc6d      4c89fa         mov rdx, r15
0x0001dc70      4c89ee         mov rsi, r13
0x0001dc73      4c89e7         mov rdi, r12
0x0001dc76      4c891424       mov qword [rsp], r10
0x0001dc7a      e82151ffff     call sym.calc_eclosure_iter
0x0001dc7f      85c0           test eax, eax
0x0001dc81      0f85e9f8ffff   jne 0x1d570
0x0001dc87      498b4530       mov rax, qword [r13 + 0x30]
0x0001dc8b      4c8b1424       mov r10, qword [rsp]
0x0001dc8f      4983c701       add r15, 1
0x0001dc93      4a837c100800   cmp qword [rax + r10 + 8], 0
0x0001dc99      0f85a9fdffff   jne 0x1da48
0x0001dc9f      488b7c2470     mov rdi, qword [rsp + 0x70]
0x0001dca4      e8674dfeff     call sym..plt.got
0x0001dca9      4d397d10       cmp qword [r13 + 0x10], r15
0x0001dcad      0f84ccfdffff   je 0x1da7f
0x0001dcb3      440fb6742410   movzx r14d, byte [rsp + 0x10]
0x0001dcb9      e993fdffff     jmp 0x1da51
0x0001dcbe      488b442408     mov rax, qword [rsp + 8]
0x0001dcc3      f6403810       test byte [rax + 0x38], 0x10
0x0001dcc7      7511           jne 0x1dcda
0x0001dcc9      4883783000     cmp qword [rax + 0x30], 0
0x0001dcce      740a           je 0x1dcda
0x0001dcd0      41f685b00000.  test byte [r13 + 0xb0], 1
0x0001dcd8      750e           jne 0x1dce8
0x0001dcda      4983bd980000.  cmp qword [r13 + 0x98], 0
0x0001dce2      0f84f3000000   je 0x1dddb
0x0001dce8      488d3c52       lea rdi, [rdx + rdx*2]
0x0001dcec      48891424       mov qword [rsp], rdx
0x0001dcf0      48c1e703       shl rdi, 3
0x0001dcf4      e8874afeff     call sym.imp.malloc
0x0001dcf9      4885c0         test rax, rax
0x0001dcfc      49894538       mov qword [r13 + 0x38], rax
0x0001dd00      0f8446050000   je 0x1e24c
0x0001dd06      488b1424       mov rdx, qword [rsp]
0x0001dd0a      31f6           xor esi, esi
0x0001dd0c      31c9           xor ecx, ecx
0x0001dd0e      4885d2         test rdx, rdx
0x0001dd11      7511           jne 0x1dd24
0x0001dd13      e9c3000000     jmp 0x1dddb
0x0001dd18      0f1f84000000.  nop dword [rax + rax]
0x0001dd20      498b4538       mov rax, qword [r13 + 0x38]
0x0001dd24      660fefc0       pxor xmm0, xmm0
0x0001dd28      4801f0         add rax, rsi
0x0001dd2b      4883c101       add rcx, 1
0x0001dd2f      48c740100000.  mov qword [rax + 0x10], 0
0x0001dd37      4883c618       add rsi, 0x18
0x0001dd3b      0f1100         movups xmmword [rax], xmm0
0x0001dd3e      498b4510       mov rax, qword [r13 + 0x10]
0x0001dd42      4839c1         cmp rcx, rax
0x0001dd45      72d9           jb 0x1dd20
0x0001dd47      4885c0         test rax, rax
0x0001dd4a      0f848b000000   je 0x1dddb
0x0001dd50      498b4530       mov rax, qword [r13 + 0x30]
0x0001dd54      48c744241800.  mov qword [rsp + 0x18], 0
0x0001dd5d      48c744241000.  mov qword [rsp + 0x10], 0
0x0001dd66      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0001dd6b      488d1408       lea rdx, [rax + rcx]
0x0001dd6f      48837a0800     cmp qword [rdx + 8], 0
0x0001dd74      488b4a10       mov rcx, qword [rdx + 0x10]
0x0001dd78      7e4a           jle 0x1ddc4
0x0001dd7a      4531ff         xor r15d, r15d
0x0001dd7d      eb19           jmp 0x1dd98
0x0001dd7f      90             nop
0x0001dd80      498b4530       mov rax, qword [r13 + 0x30]
0x0001dd84      488b542418     mov rdx, qword [rsp + 0x18]
0x0001dd89      4983c701       add r15, 1
0x0001dd8d      488b0c24       mov rcx, qword [rsp]
0x0001dd91      4c3b7c1008     cmp r15, qword [rax + rdx + 8]
0x0001dd96      7d2c           jge 0x1ddc4
0x0001dd98      4a8b04f9       mov rax, qword [rcx + r15*8]
0x0001dd9c      48890c24       mov qword [rsp], rcx
0x0001dda0      488d3440       lea rsi, [rax + rax*2]
0x0001dda4      498b4538       mov rax, qword [r13 + 0x38]
0x0001dda8      488d3cf0       lea rdi, [rax + rsi*8]
0x0001ddac      488b742410     mov rsi, qword [rsp + 0x10]
0x0001ddb1      e83a33ffff     call sym.re_node_set_insert_last
0x0001ddb6      84c0           test al, al
0x0001ddb8      75c6           jne 0x1dd80
0x0001ddba      b80c000000     mov eax, 0xc
0x0001ddbf      e9acf7ffff     jmp 0x1d570
0x0001ddc4      488344241001   add qword [rsp + 0x10], 1
0x0001ddca      488344241818   add qword [rsp + 0x18], 0x18            ; [0x18:8]=0x3f40 rip
0x0001ddd0      488b542410     mov rdx, qword [rsp + 0x10]
0x0001ddd5      493b5510       cmp rdx, qword [r13 + 0x10]
0x0001ddd9      728b           jb 0x1dd66
0x0001dddb      0fb683b00000.  movzx eax, byte [rbx + 0xb0]
0x0001dde2      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001ddea      c0e802         shr al, 2
0x0001dded      48837c242000   cmp qword [rsp + 0x20], 0
0x0001ddf3      0f94c2         sete dl
0x0001ddf6      20d0           and al, dl
0x0001ddf8      0f85e1010000   jne 0x1dfdf
0x0001ddfe      488b4368       mov rax, qword [rbx + 0x68]
0x0001de02      4c89e7         mov rdi, r12
0x0001de05      488b4018       mov rax, qword [rax + 0x18]
0x0001de09      488b4038       mov rax, qword [rax + 0x38]
0x0001de0d      488d1440       lea rdx, [rax + rax*2]
0x0001de11      488983900000.  mov qword [rbx + 0x90], rax
0x0001de18      488b4330       mov rax, qword [rbx + 0x30]
0x0001de1c      488d34d0       lea rsi, [rax + rdx*8]
0x0001de20      e8db59ffff     call sym.re_node_set_init_copy
0x0001de25      85c0           test eax, eax
0x0001de27      4189c7         mov r15d, eax
0x0001de2a      89442450       mov dword [rsp + 0x50], eax
0x0001de2e      0f851b010000   jne 0x1df4f
0x0001de34      4883bb980000.  cmp qword [rbx + 0x98], 0
0x0001de3c      0f8ece000000   jle 0x1df10
0x0001de42      4c8b4c2468     mov r9, qword [rsp + 0x68]
0x0001de47      4d85c9         test r9, r9
0x0001de4a      0f8ec0000000   jle 0x1df10
0x0001de50      4531d2         xor r10d, r10d
0x0001de53      4d8d6c2410     lea r13, [r12 + 0x10]
0x0001de58      eb13           jmp 0x1de6d
0x0001de5a      660f1f440000   nop word [rax + rax]
0x0001de60      4983c201       add r10, 1
0x0001de64      4d39d1         cmp r9, r10
0x0001de67      0f8ea3000000   jle 0x1df10
0x0001de6d      488b4c2470     mov rcx, qword [rsp + 0x70]
0x0001de72      488b33         mov rsi, qword [rbx]
0x0001de75      4e8b04d1       mov r8, qword [rcx + r10*8]
0x0001de79      4c89c7         mov rdi, r8
0x0001de7c      48c1e704       shl rdi, 4
0x0001de80      4801f7         add rdi, rsi
0x0001de83      807f0804       cmp byte [rdi + 8], 4
0x0001de87      75d7           jne 0x1de60
0x0001de89      31d2           xor edx, edx
0x0001de8b      eb0c           jmp 0x1de99
0x0001de8d      0f1f00         nop dword [rax]
0x0001de90      4883c201       add rdx, 1
0x0001de94      4939d1         cmp r9, rdx
0x0001de97      74c7           je 0x1de60
0x0001de99      488b04d1       mov rax, qword [rcx + rdx*8]
0x0001de9d      48c1e004       shl rax, 4
0x0001dea1      4801f0         add rax, rsi
0x0001dea4      80780809       cmp byte [rax + 8], 9
0x0001dea8      75e6           jne 0x1de90
0x0001deaa      4c8b1f         mov r11, qword [rdi]
0x0001dead      4c3918         cmp qword [rax], r11
0x0001deb0      75de           jne 0x1de90
0x0001deb2      488b5328       mov rdx, qword [rbx + 0x28]
0x0001deb6      4b8d0440       lea rax, [r8 + r8*2]
0x0001deba      4c89ee         mov rsi, r13
0x0001debd      4c89cf         mov rdi, r9
0x0001dec0      488d04c2       lea rax, [rdx + rax*8]
0x0001dec4      488b4010       mov rax, qword [rax + 0x10]
0x0001dec8      4c8b18         mov r11, qword [rax]
0x0001decb      4c89da         mov rdx, r11
0x0001dece      e8cd47ffff     call sym.re_node_set_contains.isra.3
0x0001ded3      4885c0         test rax, rax
0x0001ded6      7588           jne 0x1de60
0x0001ded8      488b4330       mov rax, qword [rbx + 0x30]
0x0001dedc      4b8d145b       lea rdx, [r11 + r11*2]
0x0001dee0      4c89e7         mov rdi, r12
0x0001dee3      488d34d0       lea rsi, [rax + rdx*8]
0x0001dee7      e8d44cffff     call sym.re_node_set_merge
0x0001deec      85c0           test eax, eax
0x0001deee      0f853c030000   jne 0x1e230
0x0001def4      4c8b4c2468     mov r9, qword [rsp + 0x68]
0x0001def9      41ba01000000   mov r10d, 1
0x0001deff      4d39d1         cmp r9, r10
0x0001df02      0f8f65ffffff   jg 0x1de6d
0x0001df08      0f1f84000000.  nop dword [rax + rax]
0x0001df10      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0001df15      31c9           xor ecx, ecx
0x0001df17      4c89e2         mov rdx, r12
0x0001df1a      4889de         mov rsi, rbx
0x0001df1d      e8ce5affff     call sym.re_acquire_state_context
0x0001df22      4885c0         test rax, rax
0x0001df25      48894348       mov qword [rbx + 0x48], rax
0x0001df29      0f8463010000   je 0x1e092
0x0001df2f      80786800       cmp byte [rax + 0x68], 0
0x0001df33      0f88f8000000   js 0x1e031
0x0001df39      48894360       mov qword [rbx + 0x60], rax
0x0001df3d      48894358       mov qword [rbx + 0x58], rax
0x0001df41      48894350       mov qword [rbx + 0x50], rax
0x0001df45      488b7c2470     mov rdi, qword [rsp + 0x70]
0x0001df4a      e8c14afeff     call sym..plt.got
0x0001df4f      488b442408     mov rax, qword [rsp + 8]
0x0001df54      44897c244c     mov dword [rsp + 0x4c], r15d
0x0001df59      4c8b28         mov r13, qword [rax]
0x0001df5c      498b7d70       mov rdi, qword [r13 + 0x70]
0x0001df60      4885ff         test rdi, rdi
0x0001df63      7413           je 0x1df78
0x0001df65      0f1f00         nop dword [rax]
0x0001df68      4c8b27         mov r12, qword [rdi]
0x0001df6b      e8a04afeff     call sym..plt.got
0x0001df70      4d85e4         test r12, r12
0x0001df73      4c89e7         mov rdi, r12
0x0001df76      75f0           jne 0x1df68
0x0001df78      498b7d20       mov rdi, qword [r13 + 0x20]
0x0001df7c      49c745700000.  mov qword [r13 + 0x70], 0
0x0001df84      41c785800000.  mov dword [r13 + 0x80], 0xf             ; [0xf:4]=0x3e000300
0x0001df8f      49c745680000.  mov qword [r13 + 0x68], 0
0x0001df97      e8744afeff     call sym..plt.got
0x0001df9c      49c745200000.  mov qword [r13 + 0x20], 0
0x0001dfa4      4889ef         mov rdi, rbp
0x0001dfa7      e8e443ffff     call sym.re_string_destruct
0x0001dfac      8b44244c       mov eax, dword [rsp + 0x4c]
0x0001dfb0      85c0           test eax, eax
0x0001dfb2      0f8434f6ffff   je 0x1d5ec
0x0001dfb8      e90ff6ffff     jmp 0x1d5cc
0x0001dfbd      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x0001dfc5      e9b2f5ffff     jmp 0x1d57c
0x0001dfca      4889ef         mov rdi, rbp
0x0001dfcd      e81e34ffff     call sym.build_wcs_buffer
0x0001dfd2      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001dfda      e9c9f6ffff     jmp 0x1d6a8
0x0001dfdf      488b4c2408     mov rcx, qword [rsp + 8]
0x0001dfe4      4883792800     cmp qword [rcx + 0x28], 0
0x0001dfe9      0f850ffeffff   jne 0x1ddfe
0x0001dfef      4c8b5310       mov r10, qword [rbx + 0x10]
0x0001dff3      4d85d2         test r10, r10
0x0001dff6      0f84ae020000   je 0x1e2aa
0x0001dffc      488b33         mov rsi, qword [rbx]
0x0001dfff      4c8d0d064d00.  lea r9, [0x00022d0c]
0x0001e006      4531c0         xor r8d, r8d
0x0001e009      31d2           xor edx, edx
0x0001e00b      4889f1         mov rcx, rsi
0x0001e00e      8079080c       cmp byte [rcx + 8], 0xc
0x0001e012      0f87c6020000   ja 0x1e2de
0x0001e018      0fb67908       movzx edi, byte [rcx + 8]
0x0001e01c      49633cb9       movsxd rdi, dword [r9 + rdi*4]
0x0001e020      4c01cf         add rdi, r9
0x0001e023      ffe7           jmp rdi
0x0001e025      31ed           xor ebp, ebp
0x0001e027      be01000000     mov esi, 1
0x0001e02c      e92cf3ffff     jmp 0x1d35d
0x0001e031      4c8b742428     mov r14, qword [rsp + 0x28]
0x0001e036      b901000000     mov ecx, 1
0x0001e03b      4c89e2         mov rdx, r12
0x0001e03e      4889de         mov rsi, rbx
0x0001e041      4c89f7         mov rdi, r14
0x0001e044      e8a759ffff     call sym.re_acquire_state_context
0x0001e049      b902000000     mov ecx, 2
0x0001e04e      4c89e2         mov rdx, r12
0x0001e051      4889de         mov rsi, rbx
0x0001e054      4c89f7         mov rdi, r14
0x0001e057      48894350       mov qword [rbx + 0x50], rax
0x0001e05b      e89059ffff     call sym.re_acquire_state_context
0x0001e060      b906000000     mov ecx, 6
0x0001e065      48894358       mov qword [rbx + 0x58], rax
0x0001e069      4c89e2         mov rdx, r12
0x0001e06c      4889de         mov rsi, rbx
0x0001e06f      4c89f7         mov rdi, r14
0x0001e072      e87959ffff     call sym.re_acquire_state_context
0x0001e077      48837b5000     cmp qword [rbx + 0x50], 0
0x0001e07c      48894360       mov qword [rbx + 0x60], rax
0x0001e080      7410           je 0x1e092
0x0001e082      48837b5800     cmp qword [rbx + 0x58], 0
0x0001e087      7409           je 0x1e092
0x0001e089      4885c0         test rax, rax
0x0001e08c      0f85b3feffff   jne 0x1df45
0x0001e092      448b7c2450     mov r15d, dword [rsp + 0x50]
0x0001e097      e9b3feffff     jmp 0x1df4f
0x0001e09c      488b4220       mov rax, qword [rdx + 0x20]
0x0001e0a0      4c8b4838       mov r9, qword [rax + 0x38]
0x0001e0a4      e910faffff     jmp 0x1dab9
0x0001e0a9      488b4220       mov rax, qword [rdx + 0x20]
0x0001e0ad      488b4838       mov rcx, qword [rax + 0x38]
0x0001e0b1      e9eef9ffff     jmp 0x1daa4
0x0001e0b6      4889df         mov rdi, rbx
0x0001e0b9      bee8000000     mov esi, 0xe8
0x0001e0be      e86d47feff     call sym.imp.realloc
0x0001e0c3      4885c0         test rax, rax
0x0001e0c6      4889c3         mov rbx, rax
0x0001e0c9      0f8492010000   je 0x1e261
0x0001e0cf      488b442408     mov rax, qword [rsp + 8]
0x0001e0d4      48c74008e800.  mov qword [rax + 8], 0xe8               ; [0xe8:8]=0x600000001
0x0001e0dc      488918         mov qword [rax], rbx
0x0001e0df      e9def1ffff     jmp 0x1d2c2
0x0001e0e4      488908         mov qword [rax], rcx
0x0001e0e7      4c894808       mov qword [rax + 8], r9
0x0001e0eb      e915f9ffff     jmp 0x1da05
0x0001e0f0      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001e0f8      e9abf5ffff     jmp 0x1d6a8
0x0001e0fd      49c742080100.  mov qword [r10 + 8], 1
0x0001e105      488908         mov qword [rax], rcx
0x0001e108      e9f8f8ffff     jmp 0x1da05
0x0001e10d      4889ef         mov rdi, rbp
0x0001e110      e86b32ffff     call sym.build_upper_buffer
0x0001e115      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001e11d      e986f5ffff     jmp 0x1d6a8
0x0001e122      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x0001e12a      48c743680000.  mov qword [rbx + 0x68], 0
0x0001e132      e945f4ffff     jmp 0x1d57c
0x0001e137      4885c0         test rax, rax
0x0001e13a      0f842b010000   je 0x1e26b
0x0001e140      4d8d6f70       lea r13, [r15 + 0x70]
0x0001e144      4c8d642460     lea r12, [rsp + 0x60]
0x0001e149      4983ef80       sub r15, 0xffffffffffffff80
0x0001e14d      31c9           xor ecx, ecx
0x0001e14f      31d2           xor edx, edx
0x0001e151      4c89fe         mov rsi, r15
0x0001e154      4d89e0         mov r8, r12
0x0001e157      4c89ef         mov rdi, r13
0x0001e15a      48890424       mov qword [rsp], rax
0x0001e15e      c644246802     mov byte [rsp + 0x68], 2
0x0001e163      e8f851ffff     call sym.create_token_tree.isra.16
0x0001e168      4c8b0c24       mov r9, qword [rsp]
0x0001e16c      4989c3         mov r11, rax
0x0001e16f      e9d7f5ffff     jmp 0x1d74b
0x0001e174      e89748feff     call sym..plt.got
0x0001e179      49c785e00000.  mov qword [r13 + 0xe0], 0
0x0001e184      e924f7ffff     jmp 0x1d8ad
0x0001e189      4189c0         mov r8d, eax
0x0001e18c      4883c201       add rdx, 1
0x0001e190      4883c110       add rcx, 0x10
0x0001e194      4c39d2         cmp rdx, r10
0x0001e197      0f8571feffff   jne 0x1e00e
0x0001e19d      4508c6         or r14b, r8b
0x0001e1a0      0f8404010000   je 0x1e2aa
0x0001e1a6      4889d0         mov rax, rdx
0x0001e1a9      48c1e004       shl rax, 4
0x0001e1ad      4801f0         add rax, rsi
0x0001e1b0      eb16           jmp 0x1e1c8
0x0001e1b2      80fa05         cmp dl, 5
0x0001e1b5      7504           jne 0x1e1bb
0x0001e1b7      c6460807       mov byte [rsi + 8], 7
0x0001e1bb      4883c610       add rsi, 0x10
0x0001e1bf      4839f0         cmp rax, rsi
0x0001e1c2      0f84df000000   je 0x1e2a7
0x0001e1c8      0fb65608       movzx edx, byte [rsi + 8]
0x0001e1cc      80fa01         cmp dl, 1
0x0001e1cf      75e1           jne 0x1e1b2
0x0001e1d1      803e00         cmp byte [rsi], 0
0x0001e1d4      79e5           jns 0x1e1bb
0x0001e1d6      80660adf       and byte [rsi + 0xa], 0xdf              ; [0xdf:1]=0
0x0001e1da      ebdf           jmp 0x1e1bb
0x0001e1dc      0f1f4000       nop dword [rax]
0x0001e1e0      803900         cmp byte [rcx], 0
0x0001e1e3      440f48f0       cmovs r14d, eax
0x0001e1e7      eba3           jmp 0x1e18c
0x0001e1e9      8b39           mov edi, dword [rcx]
0x0001e1eb      83ff20         cmp edi, 0x20                           ; "@"
0x0001e1ee      749c           je 0x1e18c
0x0001e1f0      0f86a3000000   jbe 0x1e299
0x0001e1f6      83ff40         cmp edi, 0x40                           ; segment.PHDR
0x0001e1f9      7491           je 0x1e18c
0x0001e1fb      83c780         add edi, 0xffffff80
0x0001e1fe      748c           je 0x1e18c
0x0001e200      e9f9fbffff     jmp 0x1ddfe
0x0001e205      0f1f00         nop dword [rax]
0x0001e208      488b39         mov rdi, qword [rcx]
0x0001e20b      48837f1000     cmp qword [rdi + 0x10], 0
0x0001e210      0f85e8fbffff   jne 0x1ddfe
0x0001e216      48837f1800     cmp qword [rdi + 0x18], 0
0x0001e21b      0f846bffffff   je 0x1e18c
0x0001e221      e9d8fbffff     jmp 0x1ddfe
0x0001e226      662e0f1f8400.  nop word cs:[rax + rax]
0x0001e230      4189c7         mov r15d, eax
0x0001e233      e917fdffff     jmp 0x1df4f
0x0001e238      49c747080000.  mov qword [r15 + 8], 0
0x0001e240      49c707000000.  mov qword [r15], 0
0x0001e247      e96efbffff     jmp 0x1ddba
0x0001e24c      488b442408     mov rax, qword [rsp + 8]
0x0001e251      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x0001e259      4c8b28         mov r13, qword [rax]
0x0001e25c      e91bf3ffff     jmp 0x1d57c
0x0001e261      b80c000000     mov eax, 0xc
0x0001e266      e981f3ffff     jmp 0x1d5ec
0x0001e26b      488b442408     mov rax, qword [rsp + 8]
0x0001e270      48c743680000.  mov qword [rbx + 0x68], 0
0x0001e278      4c8b28         mov r13, qword [rax]
0x0001e27b      e9fcf2ffff     jmp 0x1d57c
0x0001e280      48c741080000.  mov qword [rcx + 8], 0
0x0001e288      48c701000000.  mov qword [rcx], 0
0x0001e28f      b80c000000     mov eax, 0xc
0x0001e294      e9d7f2ffff     jmp 0x1d570
0x0001e299      83ff10         cmp edi, 0x10
0x0001e29c      0f84eafeffff   je 0x1e18c
0x0001e2a2      e957fbffff     jmp 0x1ddfe
0x0001e2a7      4589c6         mov r14d, r8d
0x0001e2aa      4883bb980000.  cmp qword [rbx + 0x98], 0
0x0001e2b2      0fb693b00000.  movzx edx, byte [rbx + 0xb0]
0x0001e2b9      c783b4000000.  mov dword [rbx + 0xb4], 1
0x0001e2c3      0f9fc0         setg al
0x0001e2c6      83e2f9         and edx, 0xfffffff9                     ; 4294967289
0x0001e2c9      4409f0         or eax, r14d
0x0001e2cc      83e001         and eax, 1
0x0001e2cf      01c0           add eax, eax
0x0001e2d1      09d0           or eax, edx
0x0001e2d3      8883b0000000   mov byte [rbx + 0xb0], al
0x0001e2d9      e920fbffff     jmp 0x1ddfe
0x0001e2de      e81d41feff     call sym.imp.abort
0x0001e2e3      488d0d964a00.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x22d80 ; "link_nfa_nodes"
0x0001e2ea      488d35cf4400.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x227c0 ; "../coreutils-8.31/lib/regcomp.c"
0x0001e2f1      488d3d894500.  lea rdi, str.right____1                 ; 0x22881 ; "right > -1"
0x0001e2f8      bab0050000     mov edx, 0x5b0
0x0001e2fd      e8fe42feff     call sym.imp.__assert_fail
0x0001e302      488d0d774a00.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x22d80 ; "link_nfa_nodes"
0x0001e309      488d35b04400.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x227c0 ; "../coreutils-8.31/lib/regcomp.c"
0x0001e310      488d3dc94400.  lea rdi, str.IS_EPSILON_NODE__node__token.type ; 0x227e0 ; "!IS_EPSILON_NODE (node->token.type)"
0x0001e317      bac2050000     mov edx, 0x5c2
0x0001e31c      e8df42feff     call sym.imp.__assert_fail
0x0001e321      488d0d584a00.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x22d80 ; "link_nfa_nodes"
0x0001e328      488d35914400.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x227c0 ; "../coreutils-8.31/lib/regcomp.c"
0x0001e32f      488d3d414500.  lea rdi, str.left____1                  ; 0x22877 ; "left > -1"
0x0001e336      baaf050000     mov edx, 0x5af
0x0001e33b      e8c042feff     call sym.imp.__assert_fail
0x0001e340      e81b42feff     call sym.imp.__stack_chk_fail
0x0001e345      90             nop
0x0001e346      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_re_compile_pattern:
0x0001e350      4883ec08       sub rsp, 8
0x0001e354      488b0da59f20.  mov rcx, qword [obj.rpl_re_syntax_options] ; [0x228300:8]=0
0x0001e35b      4989f8         mov r8, rdi
0x0001e35e      4889d7         mov rdi, rdx
0x0001e361      4889c8         mov rax, rcx
0x0001e364      48c1e819       shr rax, 0x19
0x0001e368      83e001         and eax, 1
0x0001e36b      c1e004         shl eax, 4
0x0001e36e      89c2           mov edx, eax
0x0001e370      0fb64738       movzx eax, byte [rdi + 0x38]
0x0001e374      83e0ef         and eax, 0xffffffef                     ; 4294967279
0x0001e377      09d0           or eax, edx
0x0001e379      4889f2         mov rdx, rsi
0x0001e37c      4c89c6         mov rsi, r8
0x0001e37f      83c880         or eax, 0xffffff80                      ; 4294967168
0x0001e382      884738         mov byte [rdi + 0x38], al
0x0001e385      e8c6eeffff     call sym.re_compile_internal
0x0001e38a      85c0           test eax, eax
0x0001e38c      742a           je 0x1e3b8
0x0001e38e      488d154b4a00.  lea rdx, obj.__re_error_msgid_idx       ; 0x22de0
0x0001e395      4898           cdqe
0x0001e397      488d35e24a00.  lea rsi, obj.__re_error_msgid           ; 0x22e80 ; "Success"
0x0001e39e      31ff           xor edi, edi
0x0001e3a0      480334c2       add rsi, qword [rdx + rax*8]
0x0001e3a4      ba05000000     mov edx, 5
0x0001e3a9      4883c408       add rsp, 8
0x0001e3ad      e95e41feff     jmp sym.imp.dcgettext
0x0001e3b2      660f1f440000   nop word [rax + rax]
0x0001e3b8      31c0           xor eax, eax
0x0001e3ba      4883c408       add rsp, 8
0x0001e3be      c3             ret
0x0001e3bf      90             nop
;-- rpl_re_set_syntax:
0x0001e3c0      488b05399f20.  mov rax, qword [obj.rpl_re_syntax_options] ; [0x228300:8]=0
0x0001e3c7      48893d329f20.  mov qword [obj.rpl_re_syntax_options], rdi ; [0x228300:8]=0
0x0001e3ce      c3             ret
0x0001e3cf      90             nop
;-- rpl_re_compile_fastmap:
0x0001e3d0      4154           push r12
0x0001e3d2      55             push rbp
0x0001e3d3      31c0           xor eax, eax
0x0001e3d5      53             push rbx
0x0001e3d6      488b6f20       mov rbp, qword [rdi + 0x20]
0x0001e3da      4889fb         mov rbx, rdi
0x0001e3dd      4c8b27         mov r12, qword [rdi]
0x0001e3e0      488d7d08       lea rdi, [rbp + 8]
0x0001e3e4      4889e9         mov rcx, rbp
0x0001e3e7      48c745000000.  mov qword [rbp], 0
0x0001e3ef      48c785f80000.  mov qword [rbp + 0xf8], 0
0x0001e3fa      4883e7f8       and rdi, 0xfffffffffffffff8
0x0001e3fe      4829f9         sub rcx, rdi
0x0001e401      81c100010000   add ecx, 0x100
0x0001e407      c1e903         shr ecx, 3
0x0001e40a      f348ab         rep stosq qword [rdi], rax
0x0001e40d      4889e9         mov rcx, rbp
0x0001e410      4889df         mov rdi, rbx
0x0001e413      498b742448     mov rsi, qword [r12 + 0x48]
0x0001e418      488d5618       lea rdx, [rsi + 0x18]
0x0001e41c      4883c610       add rsi, 0x10
0x0001e420      e8fb84ffff     call sym.re_compile_fastmap_iter.isra.30
0x0001e425      498b442450     mov rax, qword [r12 + 0x50]
0x0001e42a      4939442448     cmp qword [r12 + 0x48], rax
0x0001e42f      7418           je 0x1e449
0x0001e431      488d5018       lea rdx, [rax + 0x18]
0x0001e435      488d7010       lea rsi, [rax + 0x10]
0x0001e439      4889e9         mov rcx, rbp
0x0001e43c      4889df         mov rdi, rbx
0x0001e43f      e8dc84ffff     call sym.re_compile_fastmap_iter.isra.30
0x0001e444      498b442448     mov rax, qword [r12 + 0x48]
0x0001e449      498b742458     mov rsi, qword [r12 + 0x58]
0x0001e44e      4839c6         cmp rsi, rax
0x0001e451      7418           je 0x1e46b
0x0001e453      488d5618       lea rdx, [rsi + 0x18]
0x0001e457      4889e9         mov rcx, rbp
0x0001e45a      4883c610       add rsi, 0x10
0x0001e45e      4889df         mov rdi, rbx
0x0001e461      e8ba84ffff     call sym.re_compile_fastmap_iter.isra.30
0x0001e466      498b442448     mov rax, qword [r12 + 0x48]
0x0001e46b      498b742460     mov rsi, qword [r12 + 0x60]
0x0001e470      4839c6         cmp rsi, rax
0x0001e473      7413           je 0x1e488
0x0001e475      488d5618       lea rdx, [rsi + 0x18]
0x0001e479      4889e9         mov rcx, rbp
0x0001e47c      4883c610       add rsi, 0x10
0x0001e480      4889df         mov rdi, rbx
0x0001e483      e89884ffff     call sym.re_compile_fastmap_iter.isra.30
0x0001e488      804b3808       or byte [rbx + 0x38], 8
0x0001e48c      31c0           xor eax, eax
0x0001e48e      5b             pop rbx
0x0001e48f      5d             pop rbp
0x0001e490      415c           pop r12
0x0001e492      c3             ret
0x0001e493      0f1f00         nop dword [rax]
0x0001e496      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_search_stub:
0x0001e4a0      4157           push r15
0x0001e4a2      4156           push r14
0x0001e4a4      4c89c0         mov rax, r8
0x0001e4a7      4155           push r13
0x0001e4a9      4154           push r12
0x0001e4ab      4901c8         add r8, rcx
0x0001e4ae      55             push rbp
0x0001e4af      53             push rbx
0x0001e4b0      4883ec38       sub rsp, 0x38
0x0001e4b4      4885c9         test rcx, rcx
0x0001e4b7      8b5c2478       mov ebx, dword [rsp + 0x78]
0x0001e4bb      4c8b642470     mov r12, qword [rsp + 0x70]
0x0001e4c0      895c2428       mov dword [rsp + 0x28], ebx
0x0001e4c4      0f8836030000   js 0x1e800
0x0001e4ca      4839d1         cmp rcx, rdx
0x0001e4cd      0f8f2d030000   jg 0x1e800
0x0001e4d3      4939d0         cmp r8, rdx
0x0001e4d6      4889cb         mov rbx, rcx
0x0001e4d9      4989ff         mov r15, rdi
0x0001e4dc      0f8f7e020000   jg 0x1e760
0x0001e4e2      4885c0         test rax, rax
0x0001e4e5      7809           js 0x1e4f0
0x0001e4e7      4c39c1         cmp rcx, r8
0x0001e4ea      0f8f70020000   jg 0x1e760
0x0001e4f0      4d85c0         test r8, r8
0x0001e4f3      0f88df020000   js 0x1e7d8
0x0001e4f9      4885c0         test rax, rax
0x0001e4fc      7909           jns 0x1e507
0x0001e4fe      4c39c3         cmp rbx, r8
0x0001e501      0f8ed1020000   jle 0x1e7d8
0x0001e507      410fb64738     movzx eax, byte [r15 + 0x38]
0x0001e50c      4189c5         mov r13d, eax
0x0001e50f      41c0ed05       shr r13b, 5
0x0001e513      4489ef         mov edi, r13d
0x0001e516      83e703         and edi, 3
0x0001e519      4939d8         cmp r8, rbx
0x0001e51c      897c242c       mov dword [rsp + 0x2c], edi
0x0001e520      7e0f           jle 0x1e531
0x0001e522      49837f2000     cmp qword [r15 + 0x20], 0
0x0001e527      7408           je 0x1e531
0x0001e529      a808           test al, 8
0x0001e52b      0f84ef010000   je 0x1e720
0x0001e531      a810           test al, 0x10
0x0001e533      0f85c7010000   jne 0x1e700
0x0001e539      4d85e4         test r12, r12
0x0001e53c      0f84be010000   je 0x1e700
0x0001e542      83e006         and eax, 6
0x0001e545      498b4f30       mov rcx, qword [r15 + 0x30]
0x0001e549      3c04           cmp al, 4
0x0001e54b      0f848f010000   je 0x1e6e0
0x0001e551      4c8d7101       lea r14, [rcx + 1]
0x0001e555      4d89f5         mov r13, r14
0x0001e558      4c89f7         mov rdi, r14
0x0001e55b      48c1e704       shl rdi, 4
0x0001e55f      4c894c2420     mov qword [rsp + 0x20], r9
0x0001e564      4889542418     mov qword [rsp + 0x18], rdx
0x0001e569      4889742410     mov qword [rsp + 0x10], rsi
0x0001e56e      4c89442408     mov qword [rsp + 8], r8
0x0001e573      e80842feff     call sym.imp.malloc
0x0001e578      4885c0         test rax, rax
0x0001e57b      4889c5         mov rbp, rax
0x0001e57e      0f848c020000   je 0x1e810
0x0001e584      4883ec08       sub rsp, 8
0x0001e588      4889d9         mov rcx, rbx
0x0001e58b      4c89ff         mov rdi, r15
0x0001e58e      8b442434       mov eax, dword [rsp + 0x34]
0x0001e592      50             push rax
0x0001e593      55             push rbp
0x0001e594      4156           push r14
0x0001e596      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0001e59b      4c8b442428     mov r8, qword [rsp + 0x28]
0x0001e5a0      488b542438     mov rdx, qword [rsp + 0x38]
0x0001e5a5      488b742430     mov rsi, qword [rsp + 0x30]
0x0001e5aa      e811abffff     call sym.re_search_internal
0x0001e5af      4883c420       add rsp, 0x20
0x0001e5b3      85c0           test eax, eax
0x0001e5b5      7431           je 0x1e5e8
0x0001e5b7      83f801         cmp eax, 1
0x0001e5ba      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x0001e5c1      7407           je 0x1e5ca
0x0001e5c3      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x0001e5ca      4889ef         mov rdi, rbp
0x0001e5cd      e83e44feff     call sym..plt.got
0x0001e5d2      4883c438       add rsp, 0x38
0x0001e5d6      4c89e0         mov rax, r12
0x0001e5d9      5b             pop rbx
0x0001e5da      5d             pop rbp
0x0001e5db      415c           pop r12
0x0001e5dd      415d           pop r13
0x0001e5df      415e           pop r14
0x0001e5e1      415f           pop r15
0x0001e5e3      c3             ret
0x0001e5e4      0f1f4000       nop dword [rax]
0x0001e5e8      4d85e4         test r12, r12
0x0001e5eb      0f84c7000000   je 0x1e6b8
0x0001e5f1      410fb64738     movzx eax, byte [r15 + 0x38]
0x0001e5f6      498d5501       lea rdx, [r13 + 1]
0x0001e5fa      d0e8           shr al, 1
0x0001e5fc      83e003         and eax, 3
0x0001e5ff      0f846b010000   je 0x1e770
0x0001e605      83f801         cmp eax, 1
0x0001e608      0f8412020000   je 0x1e820
0x0001e60e      83f802         cmp eax, 2
0x0001e611      0f85e9020000   jne 0x1e900
0x0001e617      4d3b3424       cmp r14, qword [r12]
0x0001e61b      0f87c0020000   ja 0x1e8e1
0x0001e621      41b902000000   mov r9d, 2
0x0001e627      4d85ed         test r13, r13
0x0001e62a      0f8e68020000   jle 0x1e898
0x0001e630      4d8b442408     mov r8, qword [r12 + 8]
0x0001e635      498b7c2410     mov rdi, qword [r12 + 0x10]
0x0001e63a      4a8d34ed0000.  lea rsi, [r13*8]
0x0001e642      4c89ea         mov rdx, r13
0x0001e645      31c0           xor eax, eax
0x0001e647      660f1f840000.  nop word [rax + rax]
0x0001e650      488b4c4500     mov rcx, qword [rbp + rax*2]
0x0001e655      49890c00       mov qword [r8 + rax], rcx
0x0001e659      488b4c4508     mov rcx, qword [rbp + rax*2 + 8]
0x0001e65e      48890c07       mov qword [rdi + rax], rcx
0x0001e662      4883c008       add rax, 8
0x0001e666      4839c6         cmp rsi, rax
0x0001e669      75e5           jne 0x1e650
0x0001e66b      49391424       cmp qword [r12], rdx
0x0001e66f      762c           jbe 0x1e69d
0x0001e671      498b742410     mov rsi, qword [r12 + 0x10]
0x0001e676      498b4c2408     mov rcx, qword [r12 + 8]
0x0001e67b      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0001e682      660f1f440000   nop word [rax + rax]
0x0001e688      488904d6       mov qword [rsi + rdx*8], rax
0x0001e68c      4983c501       add r13, 1
0x0001e690      488904d1       mov qword [rcx + rdx*8], rax
0x0001e694      4d3b2c24       cmp r13, qword [r12]
0x0001e698      4c89ea         mov rdx, r13
0x0001e69b      72eb           jb 0x1e688
0x0001e69d      410fb64738     movzx eax, byte [r15 + 0x38]
0x0001e6a2      478d2c09       lea r13d, [r9 + r9]
0x0001e6a6      83e0f9         and eax, 0xfffffff9                     ; 4294967289
0x0001e6a9      4409e8         or eax, r13d
0x0001e6ac      a806           test al, 6
0x0001e6ae      41884738       mov byte [r15 + 0x38], al
0x0001e6b2      0f840bffffff   je 0x1e5c3
0x0001e6b8      807c242800     cmp byte [rsp + 0x28], 0
0x0001e6bd      4c8b6500       mov r12, qword [rbp]
0x0001e6c1      0f8403ffffff   je 0x1e5ca
0x0001e6c7      4939dc         cmp r12, rbx
0x0001e6ca      0f85f2010000   jne 0x1e8c2
0x0001e6d0      4c8b6508       mov r12, qword [rbp + 8]
0x0001e6d4      4929dc         sub r12, rbx
0x0001e6d7      e9eefeffff     jmp 0x1e5ca
0x0001e6dc      0f1f4000       nop dword [rax]
0x0001e6e0      4d8b3424       mov r14, qword [r12]
0x0001e6e4      4939ce         cmp r14, rcx
0x0001e6e7      0f8764feffff   ja 0x1e551
0x0001e6ed      4d85f6         test r14, r14
0x0001e6f0      4d89f5         mov r13, r14
0x0001e6f3      0f8f5ffeffff   jg 0x1e558
0x0001e6f9      0f1f80000000.  nop dword [rax]
0x0001e700      bf10000000     mov edi, 0x10
0x0001e705      41be01000000   mov r14d, 1
0x0001e70b      41bd01000000   mov r13d, 1
0x0001e711      4531e4         xor r12d, r12d
0x0001e714      e946feffff     jmp 0x1e55f
0x0001e719      0f1f80000000.  nop dword [rax]
0x0001e720      4c89ff         mov rdi, r15
0x0001e723      4c894c2420     mov qword [rsp + 0x20], r9
0x0001e728      4889542418     mov qword [rsp + 0x18], rdx
0x0001e72d      4889742410     mov qword [rsp + 0x10], rsi
0x0001e732      4c89442408     mov qword [rsp + 8], r8
0x0001e737      e894fcffff     call sym.rpl_re_compile_fastmap
0x0001e73c      410fb64738     movzx eax, byte [r15 + 0x38]
0x0001e741      4c8b4c2420     mov r9, qword [rsp + 0x20]
0x0001e746      488b542418     mov rdx, qword [rsp + 0x18]
0x0001e74b      488b742410     mov rsi, qword [rsp + 0x10]
0x0001e750      4c8b442408     mov r8, qword [rsp + 8]
0x0001e755      e9d7fdffff     jmp 0x1e531
0x0001e75a      660f1f440000   nop word [rax + rax]
0x0001e760      4989d0         mov r8, rdx
0x0001e763      e99ffdffff     jmp 0x1e507
0x0001e768      0f1f84000000.  nop dword [rax + rax]
0x0001e770      4c8d34d50000.  lea r14, [rdx*8]
0x0001e778      4889542408     mov qword [rsp + 8], rdx
0x0001e77d      4c89f7         mov rdi, r14
0x0001e780      e8fb3ffeff     call sym.imp.malloc
0x0001e785      4885c0         test rax, rax
0x0001e788      4989442408     mov qword [r12 + 8], rax
0x0001e78d      488b542408     mov rdx, qword [rsp + 8]
0x0001e792      0f8412010000   je 0x1e8aa
0x0001e798      4c89f7         mov rdi, r14
0x0001e79b      4889542408     mov qword [rsp + 8], rdx
0x0001e7a0      4889442410     mov qword [rsp + 0x10], rax
0x0001e7a5      e8d63ffeff     call sym.imp.malloc
0x0001e7aa      4885c0         test rax, rax
0x0001e7ad      4989442410     mov qword [r12 + 0x10], rax
0x0001e7b2      488b542408     mov rdx, qword [rsp + 8]
0x0001e7b7      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0001e7bc      0f84e0000000   je 0x1e8a2
0x0001e7c2      49891424       mov qword [r12], rdx
0x0001e7c6      41b901000000   mov r9d, 1
0x0001e7cc      e956feffff     jmp 0x1e627
0x0001e7d1      0f1f80000000.  nop dword [rax]
0x0001e7d8      410fb64738     movzx eax, byte [r15 + 0x38]
0x0001e7dd      4531c0         xor r8d, r8d
0x0001e7e0      4189c5         mov r13d, eax
0x0001e7e3      41c0ed05       shr r13b, 5
0x0001e7e7      4489ef         mov edi, r13d
0x0001e7ea      83e703         and edi, 3
0x0001e7ed      897c242c       mov dword [rsp + 0x2c], edi
0x0001e7f1      e93bfdffff     jmp 0x1e531
0x0001e7f6      662e0f1f8400.  nop word cs:[rax + rax]
0x0001e800      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x0001e807      e9c6fdffff     jmp 0x1e5d2
0x0001e80c      0f1f4000       nop dword [rax]
0x0001e810      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x0001e817      e9b6fdffff     jmp 0x1e5d2
0x0001e81c      0f1f4000       nop dword [rax]
0x0001e820      49391424       cmp qword [r12], rdx
0x0001e824      41b901000000   mov r9d, 1
0x0001e82a      0f83f7fdffff   jae 0x1e627
0x0001e830      488d0cd50000.  lea rcx, [rdx*8]
0x0001e838      498b7c2408     mov rdi, qword [r12 + 8]
0x0001e83d      44884c2418     mov byte [rsp + 0x18], r9b
0x0001e842      4889542410     mov qword [rsp + 0x10], rdx
0x0001e847      4889ce         mov rsi, rcx
0x0001e84a      48894c2408     mov qword [rsp + 8], rcx
0x0001e84f      e8dc3ffeff     call sym.imp.realloc
0x0001e854      4885c0         test rax, rax
0x0001e857      4989c6         mov r14, rax
0x0001e85a      744e           je 0x1e8aa
0x0001e85c      488b4c2408     mov rcx, qword [rsp + 8]
0x0001e861      498b7c2410     mov rdi, qword [r12 + 0x10]
0x0001e866      4889ce         mov rsi, rcx
0x0001e869      e8c23ffeff     call sym.imp.realloc
0x0001e86e      4885c0         test rax, rax
0x0001e871      488b542410     mov rdx, qword [rsp + 0x10]
0x0001e876      440fb64c2418   movzx r9d, byte [rsp + 0x18]
0x0001e87c      7434           je 0x1e8b2
0x0001e87e      4d89742408     mov qword [r12 + 8], r14
0x0001e883      4989442410     mov qword [r12 + 0x10], rax
0x0001e888      49891424       mov qword [r12], rdx
0x0001e88c      e996fdffff     jmp 0x1e627
0x0001e891      0f1f80000000.  nop dword [rax]
0x0001e898      31d2           xor edx, edx
0x0001e89a      4531ed         xor r13d, r13d
0x0001e89d      e9c9fdffff     jmp 0x1e66b
0x0001e8a2      4889cf         mov rdi, rcx
0x0001e8a5      e86641feff     call sym..plt.got
0x0001e8aa      4531c9         xor r9d, r9d
0x0001e8ad      e9ebfdffff     jmp 0x1e69d
0x0001e8b2      4c89f7         mov rdi, r14
0x0001e8b5      e85641feff     call sym..plt.got
0x0001e8ba      4531c9         xor r9d, r9d
0x0001e8bd      e9dbfdffff     jmp 0x1e69d
0x0001e8c2      488d0d874400.  lea rcx, obj.__PRETTY_FUNCTION__.7847   ; 0x22d50 ; "re_search_stub"
0x0001e8c9      488d35d03e00.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x227a0 ; "../coreutils-8.31/lib/regexec.c"
0x0001e8d0      488d3dea3f00.  lea rdi, str.pmatch_0_.rm_so____start   ; 0x228c1 ; "pmatch[0].rm_so == start"
0x0001e8d7      babe010000     mov edx, 0x1be
0x0001e8dc      e81f3dfeff     call sym.imp.__assert_fail
0x0001e8e1      488d0d584400.  lea rcx, obj.__PRETTY_FUNCTION__.7859   ; 0x22d40 ; "re_copy_regs"
0x0001e8e8      488d35b13e00.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x227a0 ; "../coreutils-8.31/lib/regexec.c"
0x0001e8ef      488d3db33f00.  lea rdi, str.regs__num_regs____nregs    ; 0x228a9 ; "regs->num_regs >= nregs"
0x0001e8f6      bafb010000     mov edx, 0x1fb
0x0001e8fb      e8003dfeff     call sym.imp.__assert_fail
0x0001e900      488d0d394400.  lea rcx, obj.__PRETTY_FUNCTION__.7859   ; 0x22d40 ; "re_copy_regs"
0x0001e907      488d35923e00.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x227a0 ; "../coreutils-8.31/lib/regexec.c"
0x0001e90e      488d3d773f00.  lea rdi, str.regs_allocated____REGS_FIXED ; 0x2288c ; "regs_allocated == REGS_FIXED"
0x0001e915      baf9010000     mov edx, 0x1f9
0x0001e91a      e8e13cfeff     call sym.imp.__assert_fail
0x0001e91f      90             nop
;-- re_search_2_stub:
0x0001e920      4157           push r15
0x0001e922      4156           push r14
0x0001e924      4155           push r13
0x0001e926      4154           push r12
0x0001e928      4989fc         mov r12, rdi
0x0001e92b      55             push rbp
0x0001e92c      53             push rbx
0x0001e92d      4c89c5         mov rbp, r8
0x0001e930      4889d3         mov rbx, rdx
0x0001e933      4889ea         mov rdx, rbp
0x0001e936      4883ec28       sub rsp, 0x28
0x0001e93a      48c1ea3f       shr rdx, 0x3f
0x0001e93e      488b442470     mov rax, qword [rsp + 0x70]
0x0001e943      89d7           mov edi, edx
0x0001e945      448b442478     mov r8d, dword [rsp + 0x78]
0x0001e94a      48c1e83f       shr rax, 0x3f
0x0001e94e      4008c7         or dil, al
0x0001e951      0f85c9000000   jne 0x1ea20
0x0001e957      4885db         test rbx, rbx
0x0001e95a      0f88c0000000   js 0x1ea20
0x0001e960      4989df         mov r15, rbx
0x0001e963      4901ef         add r15, rbp
0x0001e966      0f80b4000000   jo 0x1ea20
0x0001e96c      4885ed         test rbp, rbp
0x0001e96f      4989ce         mov r14, rcx
0x0001e972      4c89c9         mov rcx, r9
0x0001e975      0f84b5000000   je 0x1ea30
0x0001e97b      4531ed         xor r13d, r13d
0x0001e97e      4885db         test rbx, rbx
0x0001e981      4889742408     mov qword [rsp + 8], rsi
0x0001e986      7548           jne 0x1e9d0
0x0001e988      450fb6c0       movzx r8d, r8b
0x0001e98c      4c89fa         mov rdx, r15
0x0001e98f      4c89f6         mov rsi, r14
0x0001e992      4150           push r8
0x0001e994      ff742470       push qword [rsp + 0x70]
0x0001e998      4c89e7         mov rdi, r12
0x0001e99b      4c8b8c248000.  mov r9, qword [rsp + 0x80]
0x0001e9a3      4c8b442470     mov r8, qword [rsp + 0x70]
0x0001e9a8      e8f3faffff     call sym.re_search_stub
0x0001e9ad      4c89ef         mov rdi, r13
0x0001e9b0      4889c3         mov rbx, rax
0x0001e9b3      e85840feff     call sym..plt.got
0x0001e9b8      58             pop rax
0x0001e9b9      5a             pop rdx
0x0001e9ba      4883c428       add rsp, 0x28
0x0001e9be      4889d8         mov rax, rbx
0x0001e9c1      5b             pop rbx
0x0001e9c2      5d             pop rbp
0x0001e9c3      415c           pop r12
0x0001e9c5      415d           pop r13
0x0001e9c7      415e           pop r14
0x0001e9c9      415f           pop r15
0x0001e9cb      c3             ret
0x0001e9cc      0f1f4000       nop dword [rax]
0x0001e9d0      4c89ff         mov rdi, r15
0x0001e9d3      448944241c     mov dword [rsp + 0x1c], r8d
0x0001e9d8      4c894c2410     mov qword [rsp + 0x10], r9
0x0001e9dd      e89e3dfeff     call sym.imp.malloc
0x0001e9e2      4885c0         test rax, rax
0x0001e9e5      4989c5         mov r13, rax
0x0001e9e8      7436           je 0x1ea20
0x0001e9ea      488b742408     mov rsi, qword [rsp + 8]
0x0001e9ef      4889da         mov rdx, rbx
0x0001e9f2      4889c7         mov rdi, rax
0x0001e9f5      e8163dfeff     call sym.imp.memcpy
0x0001e9fa      498d7c1d00     lea rdi, [r13 + rbx]
0x0001e9ff      4c89f6         mov rsi, r14
0x0001ea02      4889ea         mov rdx, rbp
0x0001ea05      4d89ee         mov r14, r13
0x0001ea08      e8033dfeff     call sym.imp.memcpy
0x0001ea0d      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0001ea12      448b44241c     mov r8d, dword [rsp + 0x1c]
0x0001ea17      e96cffffff     jmp 0x1e988
0x0001ea1c      0f1f4000       nop dword [rax]
0x0001ea20      48c7c3feffff.  mov rbx, 0xfffffffffffffffe
0x0001ea27      eb91           jmp 0x1e9ba
0x0001ea29      0f1f80000000.  nop dword [rax]
0x0001ea30      4989f6         mov r14, rsi
0x0001ea33      4531ed         xor r13d, r13d
0x0001ea36      e94dffffff     jmp 0x1e988
0x0001ea3b      0f1f440000     nop dword [rax + rax]
;-- rpl_regcomp:
0x0001ea40      89d0           mov eax, edx
0x0001ea42      4156           push r14
0x0001ea44      4155           push r13
0x0001ea46      83e001         and eax, 1
0x0001ea49      4154           push r12
0x0001ea4b      55             push rbp
0x0001ea4c      83f801         cmp eax, 1
0x0001ea4f      53             push rbx
0x0001ea50      4889fb         mov rbx, rdi
0x0001ea53      4d19f6         sbb r14, r14
0x0001ea56      48c707000000.  mov qword [rdi], 0
0x0001ea5d      48c747080000.  mov qword [rdi + 8], 0
0x0001ea65      4181e6ca4ffd.  and r14d, 0xfd4fca
0x0001ea6c      48c747100000.  mov qword [rdi + 0x10], 0
0x0001ea74      bf00010000     mov edi, 0x100
0x0001ea79      4989f4         mov r12, rsi
0x0001ea7c      89d5           mov ebp, edx
0x0001ea7e      4981c6fcb203.  add r14, 0x3b2fc
0x0001ea85      e8f63cfeff     call sym.imp.malloc
0x0001ea8a      4885c0         test rax, rax
0x0001ea8d      48894320       mov qword [rbx + 0x20], rax
0x0001ea91      0f84a9000000   je 0x1eb40
0x0001ea97      4989ed         mov r13, rbp
0x0001ea9a      49c1e515       shl r13, 0x15
0x0001ea9e      4181e5000040.  and r13d, 0x400000
0x0001eaa5      4d09f5         or r13, r14
0x0001eaa8      40f6c504       test bpl, 4
0x0001eaac      7562           jne 0x1eb10
0x0001eaae      8063387f       and byte [rbx + 0x38], 0x7f             ; [0x7f:1]=0
0x0001eab2      0fb65338       movzx edx, byte [rbx + 0x38]
0x0001eab6      c1ed03         shr ebp, 3
0x0001eab9      4c89e7         mov rdi, r12
0x0001eabc      83e501         and ebp, 1
0x0001eabf      48c743280000.  mov qword [rbx + 0x28], 0
0x0001eac7      c1e504         shl ebp, 4
0x0001eaca      83e2ef         and edx, 0xffffffef                     ; 4294967279
0x0001eacd      09d5           or ebp, edx
0x0001eacf      40886b38       mov byte [rbx + 0x38], bpl
0x0001ead3      e8583afeff     call sym.imp.strlen
0x0001ead8      4c89e9         mov rcx, r13
0x0001eadb      4889c2         mov rdx, rax
0x0001eade      4c89e6         mov rsi, r12
0x0001eae1      4889df         mov rdi, rbx
0x0001eae4      e867e7ffff     call sym.re_compile_internal
0x0001eae9      83f810         cmp eax, 0x10
0x0001eaec      89c5           mov ebp, eax
0x0001eaee      7438           je 0x1eb28
0x0001eaf0      85c0           test eax, eax
0x0001eaf2      7539           jne 0x1eb2d
0x0001eaf4      4889df         mov rdi, rbx
0x0001eaf7      e8d4f8ffff     call sym.rpl_re_compile_fastmap
0x0001eafc      5b             pop rbx
0x0001eafd      89e8           mov eax, ebp
0x0001eaff      5d             pop rbp
0x0001eb00      415c           pop r12
0x0001eb02      415d           pop r13
0x0001eb04      415e           pop r14
0x0001eb06      c3             ret
0x0001eb07      660f1f840000.  nop word [rax + rax]
0x0001eb10      4983e5bf       and r13, 0xffffffffffffffbf
0x0001eb14      804b3880       or byte [rbx + 0x38], 0x80              ; [0x80:1]=56
0x0001eb18      4981cd000100.  or r13, 0x100
0x0001eb1f      eb91           jmp 0x1eab2
0x0001eb21      0f1f80000000.  nop dword [rax]
0x0001eb28      bd08000000     mov ebp, 8
0x0001eb2d      488b7b20       mov rdi, qword [rbx + 0x20]
0x0001eb31      e8da3efeff     call sym..plt.got
0x0001eb36      48c743200000.  mov qword [rbx + 0x20], 0
0x0001eb3e      ebbc           jmp 0x1eafc
0x0001eb40      bd0c000000     mov ebp, 0xc
0x0001eb45      5b             pop rbx
0x0001eb46      89e8           mov eax, ebp
0x0001eb48      5d             pop rbp
0x0001eb49      415c           pop r12
0x0001eb4b      415d           pop r13
0x0001eb4d      415e           pop r14
0x0001eb4f      c3             ret
;-- rpl_regerror:
0x0001eb50      4155           push r13
0x0001eb52      4154           push r12
0x0001eb54      55             push rbp
0x0001eb55      53             push rbx
0x0001eb56      4883ec08       sub rsp, 8
0x0001eb5a      83ff10         cmp edi, 0x10
0x0001eb5d      7761           ja 0x1ebc0
0x0001eb5f      488d057a4200.  lea rax, obj.__re_error_msgid_idx       ; 0x22de0
0x0001eb66      4863ff         movsxd rdi, edi
0x0001eb69      488d35104300.  lea rsi, obj.__re_error_msgid           ; 0x22e80 ; "Success"
0x0001eb70      4889d5         mov rbp, rdx
0x0001eb73      ba05000000     mov edx, 5
0x0001eb78      4989cc         mov r12, rcx
0x0001eb7b      480334f8       add rsi, qword [rax + rdi*8]
0x0001eb7f      31ff           xor edi, edi
0x0001eb81      e88a39feff     call sym.imp.dcgettext
0x0001eb86      4889c7         mov rdi, rax
0x0001eb89      4989c5         mov r13, rax
0x0001eb8c      e89f39feff     call sym.imp.strlen
0x0001eb91      4d85e4         test r12, r12
0x0001eb94      488d5801       lea rbx, [rax + 1]
0x0001eb98      7413           je 0x1ebad
0x0001eb9a      4c39e3         cmp rbx, r12
0x0001eb9d      4889da         mov rdx, rbx
0x0001eba0      7726           ja 0x1ebc8
0x0001eba2      4c89ee         mov rsi, r13
0x0001eba5      4889ef         mov rdi, rbp
0x0001eba8      e8633bfeff     call sym.imp.memcpy
0x0001ebad      4883c408       add rsp, 8
0x0001ebb1      4889d8         mov rax, rbx
0x0001ebb4      5b             pop rbx
0x0001ebb5      5d             pop rbp
0x0001ebb6      415c           pop r12
0x0001ebb8      415d           pop r13
0x0001ebba      c3             ret
0x0001ebbb      0f1f440000     nop dword [rax + rax]
0x0001ebc0      e83b38feff     call sym.imp.abort
0x0001ebc5      0f1f00         nop dword [rax]
0x0001ebc8      498d5424ff     lea rdx, [r12 - 1]
0x0001ebcd      42c64425ff00   mov byte [rbp + r12 - 1], 0
0x0001ebd3      ebcd           jmp 0x1eba2
0x0001ebd5      90             nop
0x0001ebd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_regfree:
0x0001ebe0      53             push rbx
0x0001ebe1      4889fb         mov rbx, rdi
0x0001ebe4      488b3f         mov rdi, qword [rdi]
0x0001ebe7      4885ff         test rdi, rdi
0x0001ebea      7405           je 0x1ebf1
0x0001ebec      e8df37ffff     call sym.free_dfa_content
0x0001ebf1      488b7b20       mov rdi, qword [rbx + 0x20]
0x0001ebf5      48c703000000.  mov qword [rbx], 0
0x0001ebfc      48c743080000.  mov qword [rbx + 8], 0
0x0001ec04      e8073efeff     call sym..plt.got
0x0001ec09      488b7b28       mov rdi, qword [rbx + 0x28]
0x0001ec0d      48c743200000.  mov qword [rbx + 0x20], 0
0x0001ec15      e8f63dfeff     call sym..plt.got
0x0001ec1a      48c743280000.  mov qword [rbx + 0x28], 0
0x0001ec22      5b             pop rbx
0x0001ec23      c3             ret
0x0001ec24      6690           nop
0x0001ec26      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_regexec:
0x0001ec30      41f7c0f8ffff.  test r8d, 0xfffffff8                    ; 4294967288
0x0001ec37      0f858b000000   jne 0x1ecc8
0x0001ec3d      4155           push r13
0x0001ec3f      4154           push r12
0x0001ec41      4989d5         mov r13, rdx
0x0001ec44      55             push rbp
0x0001ec45      53             push rbx
0x0001ec46      4989cc         mov r12, rcx
0x0001ec49      4489c3         mov ebx, r8d
0x0001ec4c      4889fd         mov rbp, rdi
0x0001ec4f      4883ec18       sub rsp, 0x18
0x0001ec53      41f6c004       test r8b, 4
0x0001ec57      754f           jne 0x1eca8
0x0001ec59      4889f7         mov rdi, rsi
0x0001ec5c      4889742408     mov qword [rsp + 8], rsi
0x0001ec61      e8ca38feff     call sym.imp.strlen
0x0001ec66      31c9           xor ecx, ecx
0x0001ec68      f6453810       test byte [rbp + 0x38], 0x10
0x0001ec6c      4889c2         mov rdx, rax
0x0001ec6f      488b742408     mov rsi, qword [rsp + 8]
0x0001ec74      7440           je 0x1ecb6
0x0001ec76      4883ec08       sub rsp, 8
0x0001ec7a      53             push rbx
0x0001ec7b      6a00           push 0
0x0001ec7d      6a00           push 0
0x0001ec7f      4889ef         mov rdi, rbp
0x0001ec82      4989d1         mov r9, rdx
0x0001ec85      4989d0         mov r8, rdx
0x0001ec88      e833a4ffff     call sym.re_search_internal
0x0001ec8d      4883c420       add rsp, 0x20
0x0001ec91      85c0           test eax, eax
0x0001ec93      0f95c0         setne al
0x0001ec96      4883c418       add rsp, 0x18
0x0001ec9a      5b             pop rbx
0x0001ec9b      0fb6c0         movzx eax, al
0x0001ec9e      5d             pop rbp
0x0001ec9f      415c           pop r12
0x0001eca1      415d           pop r13
0x0001eca3      c3             ret
0x0001eca4      0f1f4000       nop dword [rax]
0x0001eca8      f6453810       test byte [rbp + 0x38], 0x10
0x0001ecac      488b09         mov rcx, qword [rcx]
0x0001ecaf      498b542408     mov rdx, qword [r12 + 8]
0x0001ecb4      75c0           jne 0x1ec76
0x0001ecb6      4883ec08       sub rsp, 8
0x0001ecba      53             push rbx
0x0001ecbb      4154           push r12
0x0001ecbd      4155           push r13
0x0001ecbf      ebbe           jmp 0x1ec7f
0x0001ecc1      0f1f80000000.  nop dword [rax]
0x0001ecc8      b802000000     mov eax, 2
0x0001eccd      c3             ret
0x0001ecce      6690           nop
;-- rpl_re_match:
0x0001ecd0      4883ec08       sub rsp, 8
0x0001ecd4      4989d1         mov r9, rdx
0x0001ecd7      6a01           push 1
0x0001ecd9      4150           push r8
0x0001ecdb      4531c0         xor r8d, r8d
0x0001ecde      e8bdf7ffff     call sym.re_search_stub
0x0001ece3      4883c418       add rsp, 0x18
0x0001ece7      c3             ret
0x0001ece8      0f1f84000000.  nop dword [rax + rax]
;-- rpl_re_search:
0x0001ecf0      4883ec08       sub rsp, 8
0x0001ecf4      6a00           push 0
0x0001ecf6      4151           push r9
0x0001ecf8      4989d1         mov r9, rdx
0x0001ecfb      e8a0f7ffff     call sym.re_search_stub
0x0001ed00      4883c418       add rsp, 0x18
0x0001ed04      c3             ret
0x0001ed05      90             nop
0x0001ed06      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_re_match_2:
0x0001ed10      4883ec08       sub rsp, 8
0x0001ed14      6a01           push 1
0x0001ed16      ff742420       push qword [rsp + 0x20]
0x0001ed1a      ff742420       push qword [rsp + 0x20]
0x0001ed1e      6a00           push 0
0x0001ed20      e8fbfbffff     call sym.re_search_2_stub
0x0001ed25      4883c428       add rsp, 0x28
0x0001ed29      c3             ret
0x0001ed2a      660f1f440000   nop word [rax + rax]
;-- rpl_re_search_2:
0x0001ed30      4883ec08       sub rsp, 8
0x0001ed34      6a00           push 0
0x0001ed36      ff742428       push qword [rsp + 0x28]
0x0001ed3a      ff742428       push qword [rsp + 0x28]
0x0001ed3e      ff742428       push qword [rsp + 0x28]
0x0001ed42      e8d9fbffff     call sym.re_search_2_stub
0x0001ed47      4883c428       add rsp, 0x28
0x0001ed4b      c3             ret
0x0001ed4c      0f1f4000       nop dword [rax]
;-- rpl_re_set_registers:
0x0001ed50      4885d2         test rdx, rdx
0x0001ed53      7523           jne 0x1ed78
0x0001ed55      806738f9       and byte [rdi + 0x38], 0xf9             ; [0xf9:1]=118
0x0001ed59      48c706000000.  mov qword [rsi], 0
0x0001ed60      48c746100000.  mov qword [rsi + 0x10], 0
0x0001ed68      48c746080000.  mov qword [rsi + 8], 0
0x0001ed70      c3             ret
0x0001ed71      0f1f80000000.  nop dword [rax]
0x0001ed78      0fb64738       movzx eax, byte [rdi + 0x38]
0x0001ed7c      83e0f9         and eax, 0xfffffff9                     ; 4294967289
0x0001ed7f      83c802         or eax, 2
0x0001ed82      884738         mov byte [rdi + 0x38], al
0x0001ed85      488916         mov qword [rsi], rdx
0x0001ed88      48894e08       mov qword [rsi + 8], rcx
0x0001ed8c      4c894610       mov qword [rsi + 0x10], r8
0x0001ed90      c3             ret
0x0001ed91      662e0f1f8400.  nop word cs:[rax + rax]
0x0001ed9b      0f1f440000     nop dword [rax + rax]
;-- setenv_TZ:
0x0001eda0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/time_rz.c:221
0x0001eda3      741b           je 0x1edc0
0x0001eda5      4889fe         mov rsi, rdi                            ; ../coreutils-8.31/lib/time_rz.c:222
0x0001eda8      488d3df80d00.  lea rdi, [0x0001fba7]                   ; "TZ"
0x0001edaf      ba01000000     mov edx, 1
0x0001edb4      e9f736feff     jmp sym.imp.setenv
0x0001edb9      0f1f80000000.  nop dword [rax]
0x0001edc0      488d3de00d00.  lea rdi, [0x0001fba7]                   ; "TZ"
0x0001edc7      e9343bfeff     jmp sym.imp.unsetenv
0x0001edcc      0f1f4000       nop dword [rax]
;-- tzfree.part.0:
0x0001edd0      4885ff         test rdi, rdi                           ; ./lib/time.h:767
0x0001edd3      7423           je 0x1edf8
0x0001edd5      53             push rbx
0x0001edd6      662e0f1f8400.  nop word cs:[rax + rax]
0x0001ede0      488b1f         mov rbx, qword [rdi]                    ; ../coreutils-8.31/lib/time_rz.c:201
0x0001ede3      e8283cfeff     call sym..plt.got                       ; ../coreutils-8.31/lib/time_rz.c:202
0x0001ede8      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/time_rz.c:199
0x0001edeb      4889df         mov rdi, rbx
0x0001edee      75f0           jne 0x1ede0
0x0001edf0      5b             pop rbx                                 ; ../coreutils-8.31/lib/time_rz.c:205
0x0001edf1      c3             ret
0x0001edf2      660f1f440000   nop word [rax + rax]
0x0001edf8      f3c3           ret
0x0001edfa      660f1f440000   nop word [rax + rax]
;-- revert_tz.part.1:
0x0001ee00      4155           push r13
0x0001ee02      4154           push r12
0x0001ee04      55             push rbp
0x0001ee05      53             push rbx
0x0001ee06      4889fd         mov rbp, rdi
0x0001ee09      4883ec08       sub rsp, 8
0x0001ee0d      e8fe35feff     call sym.imp.__errno_location
0x0001ee12      807d0800       cmp byte [rbp + 8], 0
0x0001ee16      4889c3         mov rbx, rax
0x0001ee19      448b20         mov r12d, dword [rax]
0x0001ee1c      488d7d09       lea rdi, [rbp + 9]
0x0001ee20      7502           jne 0x1ee24
0x0001ee22      31ff           xor edi, edi
0x0001ee24      e877ffffff     call sym.setenv_TZ
0x0001ee29      85c0           test eax, eax
0x0001ee2b      7423           je 0x1ee50
0x0001ee2d      448b23         mov r12d, dword [rbx]
0x0001ee30      4531ed         xor r13d, r13d
0x0001ee33      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/time_rz.c:143
0x0001ee36      e895ffffff     call sym.tzfree.part.0
0x0001ee3b      448923         mov dword [rbx], r12d
0x0001ee3e      4883c408       add rsp, 8
0x0001ee42      4489e8         mov eax, r13d
0x0001ee45      5b             pop rbx
0x0001ee46      5d             pop rbp                                 ; ../coreutils-8.31/lib/time_rz.c:6
0x0001ee47      415c           pop r12
0x0001ee49      415d           pop r13
0x0001ee4b      c3             ret
0x0001ee4c      0f1f4000       nop dword [rax]
0x0001ee50      e8cb38feff     call sym.imp.tzset
0x0001ee55      41bd01000000   mov r13d, 1
0x0001ee5b      ebd6           jmp 0x1ee33
0x0001ee5d      0f1f00         nop dword [rax]
;-- tzalloc:
0x0001ee60      4885ff         test rdi, rdi
0x0001ee63      4154           push r12
0x0001ee65      55             push rbp                                ; ../coreutils-8.31/lib/time_rz.c:9
0x0001ee66      53             push rbx
0x0001ee67      745f           je 0x1eec8
0x0001ee69      4989fc         mov r12, rdi
0x0001ee6c      e8bf36feff     call sym.imp.strlen
0x0001ee71      488d6801       lea rbp, [rax + 1]
0x0001ee75      bf76000000     mov edi, 0x76                           ; 'v'
0x0001ee7a      4883fd76       cmp rbp, 0x76                           ; ../coreutils-8.31/lib/time_rz.c:12
0x0001ee7e      480f43fd       cmovae rdi, rbp
0x0001ee82      4883c711       add rdi, 0x11
0x0001ee86      4883e7f8       and rdi, 0xfffffffffffffff8
0x0001ee8a      e8f138feff     call sym.imp.malloc
0x0001ee8f      4885c0         test rax, rax
0x0001ee92      4889c3         mov rbx, rax
0x0001ee95      7424           je 0x1eebb
0x0001ee97      48c700000000.  mov qword [rax], 0
0x0001ee9e      488d7b09       lea rdi, [rbx + 9]                      ; ../coreutils-8.31/lib/time_rz.c:22
0x0001eea2      b801000000     mov eax, 1
0x0001eea7      66894308       mov word [rbx + 8], ax
0x0001eeab      4889ea         mov rdx, rbp                            ; ../coreutils-8.31/lib/time_rz.c:9
0x0001eeae      4c89e6         mov rsi, r12
0x0001eeb1      e85a38feff     call sym.imp.memcpy
0x0001eeb6      c6442b0900     mov byte [rbx + rbp + 9], 0
0x0001eebb      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/time_rz.c:10
0x0001eebe      5b             pop rbx
0x0001eebf      5d             pop rbp
0x0001eec0      415c           pop r12
0x0001eec2      c3             ret
0x0001eec3      0f1f440000     nop dword [rax + rax]
0x0001eec8      bf80000000     mov edi, 0x80
0x0001eecd      e8ae38feff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/time_rz.c:22
0x0001eed2      4885c0         test rax, rax
0x0001eed5      4889c3         mov rbx, rax
0x0001eed8      74e1           je 0x1eebb
0x0001eeda      31d2           xor edx, edx
0x0001eedc      48c703000000.  mov qword [rbx], 0                      ; ../coreutils-8.31/lib/time_rz.c:30
0x0001eee3      4889d8         mov rax, rbx
0x0001eee6      66895308       mov word [rbx + 8], dx                  ; ../coreutils-8.31/lib/time_rz.c:40
0x0001eeea      5b             pop rbx                                 ; ../coreutils-8.31/lib/time_rz.c:52
0x0001eeeb      5d             pop rbp
0x0001eeec      415c           pop r12
0x0001eeee      c3             ret
0x0001eeef      90             nop
;-- save_abbr:
0x0001eef0      4157           push r15
0x0001eef2      4156           push r14
0x0001eef4      b801000000     mov eax, 1
0x0001eef9      4155           push r13
0x0001eefb      4154           push r12
0x0001eefd      55             push rbp
0x0001eefe      53             push rbx
0x0001eeff      4883ec08       sub rsp, 8
0x0001ef03      488b6e30       mov rbp, qword [rsi + 0x30]
0x0001ef07      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/time_rz.c:55
0x0001ef0a      0f8490000000   je 0x1efa0
0x0001ef10      4839ee         cmp rsi, rbp
0x0001ef13      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/time_rz.c:59
0x0001ef16      4989f5         mov r13, rsi
0x0001ef19      7709           ja 0x1ef24
0x0001ef1b      488d5638       lea rdx, [rsi + 0x38]
0x0001ef1f      4839d5         cmp rbp, rdx
0x0001ef22      727c           jb 0x1efa0                              ; ../coreutils-8.31/lib/time_rz.c:61
0x0001ef24      807d0000       cmp byte [rbp], 0
0x0001ef28      498d5c2409     lea rbx, [r12 + 9]
0x0001ef2d      7461           je 0x1ef90
0x0001ef2f      90             nop
0x0001ef30      4889ee         mov rsi, rbp
0x0001ef33      4889df         mov rdi, rbx
0x0001ef36      e89537feff     call sym.imp.strcmp
0x0001ef3b      85c0           test eax, eax
0x0001ef3d      7458           je 0x1ef97
0x0001ef3f      803b00         cmp byte [rbx], 0
0x0001ef42      7512           jne 0x1ef56
0x0001ef44      4d8d742409     lea r14, [r12 + 9]
0x0001ef49      4939de         cmp r14, rbx
0x0001ef4c      7562           jne 0x1efb0
0x0001ef4e      41807c240800   cmp byte [r12 + 8], 0
0x0001ef54      745a           je 0x1efb0                              ; ../coreutils-8.31/lib/time_rz.c:87
0x0001ef56      4889df         mov rdi, rbx
0x0001ef59      e8d235feff     call sym.imp.strlen
0x0001ef5e      488d5c0301     lea rbx, [rbx + rax + 1]                ; ../coreutils-8.31/lib/time_rz.c:59
0x0001ef63      803b00         cmp byte [rbx], 0
0x0001ef66      75c8           jne 0x1ef30
0x0001ef68      498b0424       mov rax, qword [r12]
0x0001ef6c      4885c0         test rax, rax
0x0001ef6f      74bf           je 0x1ef30
0x0001ef71      488d5809       lea rbx, [rax + 9]
0x0001ef75      4889ee         mov rsi, rbp
0x0001ef78      4989c4         mov r12, rax
0x0001ef7b      4889df         mov rdi, rbx
0x0001ef7e      e84d37feff     call sym.imp.strcmp                     ; ../coreutils-8.31/lib/time_rz.c:101
0x0001ef83      85c0           test eax, eax                           ; ../coreutils-8.31/lib/time_rz.c:102
0x0001ef85      75b8           jne 0x1ef3f
0x0001ef87      eb0e           jmp 0x1ef97
0x0001ef89      0f1f80000000.  nop dword [rax]
0x0001ef90      488d1d4a3000.  lea rbx, [0x00021fe1]
0x0001ef97      49895d30       mov qword [r13 + 0x30], rbx
0x0001ef9b      b801000000     mov eax, 1
0x0001efa0      4883c408       add rsp, 8
0x0001efa4      5b             pop rbx
0x0001efa5      5d             pop rbp
0x0001efa6      415c           pop r12
0x0001efa8      415d           pop r13                                 ; ../coreutils-8.31/lib/time_rz.c:65
0x0001efaa      415e           pop r14
0x0001efac      415f           pop r15
0x0001efae      c3             ret
0x0001efaf      90             nop
0x0001efb0      4889ef         mov rdi, rbp
0x0001efb3      e87835feff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/time_rz.c:70
0x0001efb8      488d5001       lea rdx, [rax + 1]
0x0001efbc      4989c7         mov r15, rax                            ; ../coreutils-8.31/lib/time_rz.c:74
0x0001efbf      4889d8         mov rax, rbx
0x0001efc2      4c29f0         sub rax, r14
0x0001efc5      4889c1         mov rcx, rax
0x0001efc8      48f7d1         not rcx
0x0001efcb      4839d1         cmp rcx, rdx                            ; ../coreutils-8.31/lib/time_rz.c:76
0x0001efce      7230           jb 0x1f000
0x0001efd0      4801d0         add rax, rdx
0x0001efd3      4883f876       cmp rax, 0x76
0x0001efd7      7637           jbe 0x1f010
0x0001efd9      4889ef         mov rdi, rbp
0x0001efdc      e87ffeffff     call sym.tzalloc
0x0001efe1      4889c3         mov rbx, rax
0x0001efe4      49890424       mov qword [r12], rax
0x0001efe8      31c0           xor eax, eax
0x0001efea      4885db         test rbx, rbx
0x0001efed      74b1           je 0x1efa0
0x0001efef      c6430800       mov byte [rbx + 8], 0
0x0001eff3      4883c309       add rbx, 9                              ; string_fortified.h:-56
0x0001eff7      eb9e           jmp 0x1ef97
0x0001eff9      0f1f80000000.  nop dword [rax]
0x0001f000      e80b34feff     call sym.imp.__errno_location
0x0001f005      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0001f00b      31c0           xor eax, eax
0x0001f00d      eb91           jmp 0x1efa0
0x0001f00f      90             nop
0x0001f010      4889ee         mov rsi, rbp
0x0001f013      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/time_rz.c:153
0x0001f016      e8f536feff     call sym.imp.memcpy
0x0001f01b      42c6443b0100   mov byte [rbx + r15 + 1], 0
0x0001f021      e971ffffff     jmp 0x1ef97
0x0001f026      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_tz:
0x0001f030      4154           push r12                                ; ../coreutils-8.31/lib/time_rz.c:155
0x0001f032      55             push rbp
0x0001f033      4889fd         mov rbp, rdi
0x0001f036      53             push rbx                                ; ../coreutils-8.31/lib/time_rz.c:156
0x0001f037      488d3d690b00.  lea rdi, [0x0001fba7]                   ; "TZ"
0x0001f03e      4883ec10       sub rsp, 0x10
0x0001f042      e89933feff     call sym.imp.getenv
0x0001f047      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/time_rz.c:161
0x0001f04a      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/time_rz.c:162
0x0001f04d      0f8495000000   je 0x1f0e8
0x0001f053      807d0800       cmp byte [rbp + 8], 0
0x0001f057      7567           jne 0x1f0c0
0x0001f059      4889df         mov rdi, rbx
0x0001f05c      e8fffdffff     call sym.tzalloc
0x0001f061      4885c0         test rax, rax
0x0001f064      4989c4         mov r12, rax
0x0001f067      7444           je 0x1f0ad
0x0001f069      31ff           xor edi, edi
0x0001f06b      807d0800       cmp byte [rbp + 8], 0
0x0001f06f      7404           je 0x1f075
0x0001f071      488d7d09       lea rdi, [rbp + 9]
0x0001f075      e826fdffff     call sym.setenv_TZ
0x0001f07a      85c0           test eax, eax
0x0001f07c      0f8486000000   je 0x1f108
0x0001f082      e88933feff     call sym.imp.__errno_location
0x0001f087      4983fc01       cmp r12, 1
0x0001f08b      8b18           mov ebx, dword [rax]                    ; ../coreutils-8.31/lib/time_rz.c:168
0x0001f08d      7419           je 0x1f0a8                              ; ../coreutils-8.31/lib/time_rz.c:169
0x0001f08f      4c89e7         mov rdi, r12
0x0001f092      4889442408     mov qword [rsp + 8], rax
0x0001f097      e834fdffff     call sym.tzfree.part.0
0x0001f09c      488b442408     mov rax, qword [rsp + 8]
0x0001f0a1      0f1f80000000.  nop dword [rax]
0x0001f0a8      8918           mov dword [rax], ebx
0x0001f0aa      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/time_rz.c:158
0x0001f0ad      4883c410       add rsp, 0x10
0x0001f0b1      4c89e0         mov rax, r12
0x0001f0b4      5b             pop rbx
0x0001f0b5      5d             pop rbp
0x0001f0b6      415c           pop r12
0x0001f0b8      c3             ret
0x0001f0b9      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/time_rz.c:173
0x0001f0c0      488d7d09       lea rdi, [rbp + 9]
0x0001f0c4      4889c6         mov rsi, rax
0x0001f0c7      41bc01000000   mov r12d, 1
0x0001f0cd      e8fe35feff     call sym.imp.strcmp
0x0001f0d2      85c0           test eax, eax
0x0001f0d4      7583           jne 0x1f059
0x0001f0d6      4883c410       add rsp, 0x10
0x0001f0da      4c89e0         mov rax, r12
0x0001f0dd      5b             pop rbx
0x0001f0de      5d             pop rbp
0x0001f0df      415c           pop r12
0x0001f0e1      c3             ret
0x0001f0e2      660f1f440000   nop word [rax + rax]
0x0001f0e8      807d0800       cmp byte [rbp + 8], 0
0x0001f0ec      41bc01000000   mov r12d, 1
0x0001f0f2      0f8561ffffff   jne 0x1f059
0x0001f0f8      4883c410       add rsp, 0x10
0x0001f0fc      4c89e0         mov rax, r12
0x0001f0ff      5b             pop rbx
0x0001f100      5d             pop rbp
0x0001f101      415c           pop r12
0x0001f103      c3             ret
0x0001f104      0f1f4000       nop dword [rax]
0x0001f108      e81336feff     call sym.imp.tzset
0x0001f10d      eb9e           jmp 0x1f0ad
0x0001f10f      90             nop
;-- tzfree:
0x0001f110      4883ff01       cmp rdi, 1
0x0001f114      7405           je 0x1f11b
0x0001f116      e9b5fcffff     jmp sym.tzfree.part.0
0x0001f11b      c3             ret
0x0001f11c      0f1f4000       nop dword [rax]
;-- localtime_rz:
0x0001f120      4155           push r13
0x0001f122      4154           push r12
0x0001f124      55             push rbp
0x0001f125      53             push rbx
0x0001f126      4889f5         mov rbp, rsi
0x0001f129      4883ec08       sub rsp, 8
0x0001f12d      4885ff         test rdi, rdi
0x0001f130      746e           je 0x1f1a0
0x0001f132      4989d5         mov r13, rdx
0x0001f135      4889fb         mov rbx, rdi
0x0001f138      e8f3feffff     call sym.set_tz
0x0001f13d      4885c0         test rax, rax
0x0001f140      4989c4         mov r12, rax
0x0001f143      7449           je 0x1f18e
0x0001f145      4c89ee         mov rsi, r13
0x0001f148      4889ef         mov rdi, rbp
0x0001f14b      e8e032feff     call sym.imp.localtime_r                ; ../coreutils-8.31/lib/time_rz.c:74
0x0001f150      4885c0         test rax, rax
0x0001f153      742b           je 0x1f180
0x0001f155      4c89ee         mov rsi, r13
0x0001f158      4889df         mov rdi, rbx
0x0001f15b      e890fdffff     call sym.save_abbr
0x0001f160      84c0           test al, al
0x0001f162      741c           je 0x1f180
0x0001f164      4983fc01       cmp r12, 1
0x0001f168      754b           jne 0x1f1b5
0x0001f16a      4883c408       add rsp, 8
0x0001f16e      4c89e8         mov rax, r13
0x0001f171      5b             pop rbx
0x0001f172      5d             pop rbp
0x0001f173      415c           pop r12
0x0001f175      415d           pop r13
0x0001f177      c3             ret
0x0001f178      0f1f84000000.  nop dword [rax + rax]
0x0001f180      4983fc01       cmp r12, 1
0x0001f184      7408           je 0x1f18e
0x0001f186      4c89e7         mov rdi, r12
0x0001f189      e872fcffff     call sym.revert_tz.part.1               ; ../coreutils-8.31/lib/time_rz.c:81
0x0001f18e      4883c408       add rsp, 8
0x0001f192      31c0           xor eax, eax
0x0001f194      5b             pop rbx
0x0001f195      5d             pop rbp
0x0001f196      415c           pop r12
0x0001f198      415d           pop r13
0x0001f19a      c3             ret
0x0001f19b      0f1f440000     nop dword [rax + rax]
0x0001f1a0      4883c408       add rsp, 8
0x0001f1a4      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/time_rz.c:82
0x0001f1a7      4889d6         mov rsi, rdx
0x0001f1aa      5b             pop rbx
0x0001f1ab      5d             pop rbp
0x0001f1ac      415c           pop r12
0x0001f1ae      415d           pop r13
0x0001f1b0      e92b34feff     jmp sym.imp.gmtime_r                    ; ../coreutils-8.31/lib/time_rz.c:86
0x0001f1b5      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/time_rz.c:87
0x0001f1b8      e843fcffff     call sym.revert_tz.part.1               ; ../coreutils-8.31/lib/time_rz.c:86
0x0001f1bd      84c0           test al, al
0x0001f1bf      75a9           jne 0x1f16a
0x0001f1c1      ebcb           jmp 0x1f18e                             ; ../coreutils-8.31/lib/time_rz.c:89
0x0001f1c3      0f1f00         nop dword [rax]
0x0001f1c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- mktime_z:
0x0001f1d0      4154           push r12
0x0001f1d2      55             push rbp                                ; ../coreutils-8.31/lib/time_rz.c:93
0x0001f1d3      53             push rbx
0x0001f1d4      4889f3         mov rbx, rsi                            ; ../coreutils-8.31/lib/time_rz.c:95
0x0001f1d7      4883ec50       sub rsp, 0x50
0x0001f1db      64488b042528.  mov rax, qword fs:[0x28]
0x0001f1e4      4889442448     mov qword [rsp + 0x48], rax
0x0001f1e9      31c0           xor eax, eax
0x0001f1eb      4885ff         test rdi, rdi
0x0001f1ee      0f84fc000000   je 0x1f2f0
0x0001f1f4      4889fd         mov rbp, rdi
0x0001f1f7      e834feffff     call sym.set_tz
0x0001f1fc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/time_rz.c:-24
0x0001f1ff      4989c4         mov r12, rax
0x0001f202      0f84f8000000   je 0x1f300
0x0001f208      4889df         mov rdi, rbx
0x0001f20b      e8f035feff     call sym.imp.mktime
0x0001f210      4883f8ff       cmp rax, 0xffffffffffffffff
0x0001f214      4889442408     mov qword [rsp + 8], rax
0x0001f219      7455           je 0x1f270
0x0001f21b      4889de         mov rsi, rbx
0x0001f21e      4889ef         mov rdi, rbp
0x0001f221      e8cafcffff     call sym.save_abbr
0x0001f226      84c0           test al, al
0x0001f228      7509           jne 0x1f233
0x0001f22a      48c7442408ff.  mov qword [rsp + 8], 0xffffffffffffffff
0x0001f233      4983fc01       cmp r12, 1
0x0001f237      7410           je 0x1f249
0x0001f239      4c89e7         mov rdi, r12
0x0001f23c      e8bffbffff     call sym.revert_tz.part.1
0x0001f241      84c0           test al, al
0x0001f243      0f84b7000000   je 0x1f300
0x0001f249      488b442408     mov rax, qword [rsp + 8]
0x0001f24e      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0001f253      6448330c2528.  xor rcx, qword fs:[0x28]
0x0001f25c      0f85aa000000   jne 0x1f30c
0x0001f262      4883c450       add rsp, 0x50
0x0001f266      5b             pop rbx
0x0001f267      5d             pop rbp
0x0001f268      415c           pop r12
0x0001f26a      c3             ret
0x0001f26b      0f1f440000     nop dword [rax + rax]
0x0001f270      488d742410     lea rsi, [rsp + 0x10]
0x0001f275      488d7c2408     lea rdi, [rsp + 8]
0x0001f27a      e8b131feff     call sym.imp.localtime_r
0x0001f27f      4885c0         test rax, rax
0x0001f282      74af           je 0x1f233
0x0001f284      8b03           mov eax, dword [rbx]
0x0001f286      8b5304         mov edx, dword [rbx + 4]
0x0001f289      33442410       xor eax, dword [rsp + 0x10]
0x0001f28d      33542414       xor edx, dword [rsp + 0x14]
0x0001f291      8b4c2430       mov ecx, dword [rsp + 0x30]
0x0001f295      09d0           or eax, edx
0x0001f297      8b5308         mov edx, dword [rbx + 8]
0x0001f29a      33542418       xor edx, dword [rsp + 0x18]
0x0001f29e      09d0           or eax, edx
0x0001f2a0      8b530c         mov edx, dword [rbx + 0xc]
0x0001f2a3      3354241c       xor edx, dword [rsp + 0x1c]
0x0001f2a7      09d0           or eax, edx
0x0001f2a9      8b5310         mov edx, dword [rbx + 0x10]
0x0001f2ac      33542420       xor edx, dword [rsp + 0x20]
0x0001f2b0      09d0           or eax, edx
0x0001f2b2      8b5314         mov edx, dword [rbx + 0x14]
0x0001f2b5      33542424       xor edx, dword [rsp + 0x24]
0x0001f2b9      09d0           or eax, edx
0x0001f2bb      8b5320         mov edx, dword [rbx + 0x20]
0x0001f2be      85d2           test edx, edx
0x0001f2c0      400f94c7       sete dil
0x0001f2c4      85c9           test ecx, ecx
0x0001f2c6      400f94c6       sete sil
0x0001f2ca      4038f7         cmp dil, sil
0x0001f2cd      740c           je 0x1f2db
0x0001f2cf      85d2           test edx, edx
0x0001f2d1      7808           js 0x1f2db
0x0001f2d3      85c9           test ecx, ecx
0x0001f2d5      0f8958ffffff   jns 0x1f233
0x0001f2db      85c0           test eax, eax
0x0001f2dd      0f8438ffffff   je 0x1f21b
0x0001f2e3      e94bffffff     jmp 0x1f233
0x0001f2e8      0f1f84000000.  nop dword [rax + rax]
0x0001f2f0      4889f7         mov rdi, rsi
0x0001f2f3      e86835feff     call sym.imp.timegm
0x0001f2f8      e951ffffff     jmp 0x1f24e
0x0001f2fd      0f1f00         nop dword [rax]
0x0001f300      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0001f307      e942ffffff     jmp 0x1f24e
0x0001f30c      e84f32feff     call sym.imp.__stack_chk_fail
0x0001f311      662e0f1f8400.  nop word cs:[rax + rax]
0x0001f31b      0f1f440000     nop dword [rax + rax]
;-- close_stream:
0x0001f320      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x0001f322      55             push rbp
0x0001f323      4889fd         mov rbp, rdi
0x0001f326      53             push rbx
0x0001f327      e83431feff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0001f32c      8b5d00         mov ebx, dword [rbp]
0x0001f32f      4889ef         mov rdi, rbp
0x0001f332      4989c4         mov r12, rax
0x0001f335      e866e9feff     call sym.rpl_fclose
0x0001f33a      83e320         and ebx, 0x20                           ; "@"
0x0001f33d      85db           test ebx, ebx
0x0001f33f      7517           jne 0x1f358
0x0001f341      85c0           test eax, eax
0x0001f343      740a           je 0x1f34f                              ; stdio.h:-186
0x0001f345      4d85e4         test r12, r12                           ; stdio.h:-178
0x0001f348      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0001f34d      7439           je 0x1f388
0x0001f34f      5b             pop rbx
0x0001f350      5d             pop rbp
0x0001f351      415c           pop r12
0x0001f353      c3             ret
0x0001f354      0f1f4000       nop dword [rax]
0x0001f358      85c0           test eax, eax
0x0001f35a      751c           jne 0x1f378
0x0001f35c      e8af30feff     call sym.imp.__errno_location
0x0001f361      c70000000000   mov dword [rax], 0
0x0001f367      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0001f36c      5b             pop rbx
0x0001f36d      5d             pop rbp
0x0001f36e      415c           pop r12
0x0001f370      c3             ret
0x0001f371      0f1f80000000.  nop dword [rax]
0x0001f378      5b             pop rbx
0x0001f379      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0001f37e      5d             pop rbp                                 ; stdio.h:-186
0x0001f37f      415c           pop r12
0x0001f381      c3             ret
0x0001f382      660f1f440000   nop word [rax + rax]
0x0001f388      e88330feff     call sym.imp.__errno_location
0x0001f38d      833809         cmp dword [rax], 9
0x0001f390      5b             pop rbx
0x0001f391      5d             pop rbp
0x0001f392      415c           pop r12                                 ; stdio.h:-178
0x0001f394      0f95c0         setne al
0x0001f397      0fb6c0         movzx eax, al
0x0001f39a      f7d8           neg eax
0x0001f39c      c3             ret
0x0001f39d      0f1f00         nop dword [rax]
;-- cycle_check_init:
0x0001f3a0      48c747100000.  mov qword [rdi + 0x10], 0               ; ../coreutils-8.31/lib/cycle-check.c:44
0x0001f3a8      c7471816f695.  mov dword [rdi + 0x18], 0x95f616        ; ../coreutils-8.31/lib/cycle-check.c:46 ; [0x95f616:4]=-1
0x0001f3af      c3             ret                                     ; ../coreutils-8.31/lib/cycle-check.c:47
;-- cycle_check:
0x0001f3b0      817f1816f695.  cmp dword [rdi + 0x18], 0x95f616        ; ../coreutils-8.31/lib/cycle-check.c:59
0x0001f3b7      755e           jne 0x1f417
0x0001f3b9      488b5710       mov rdx, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/cycle-check.c:65
0x0001f3bd      488b4e08       mov rcx, qword [rsi + 8]
0x0001f3c1      4885d2         test rdx, rdx
0x0001f3c4      741a           je 0x1f3e0
0x0001f3c6      48390f         cmp qword [rdi], rcx
0x0001f3c9      742d           je 0x1f3f8
0x0001f3cb      4c8d4201       lea r8, [rdx + 1]                       ; ../coreutils-8.31/lib/cycle-check.c:70
0x0001f3cf      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/cycle-check.c:84
0x0001f3d1      4c85c2         test rdx, r8                            ; ../coreutils-8.31/lib/cycle-check.c:70
0x0001f3d4      4c894710       mov qword [rdi + 0x10], r8
0x0001f3d8      7436           je 0x1f410
0x0001f3da      f3c3           ret                                     ; ../coreutils-8.31/lib/cycle-check.c:85
0x0001f3dc      0f1f4000       nop dword [rax]
0x0001f3e0      48c747100100.  mov qword [rdi + 0x10], 1               ; ../coreutils-8.31/lib/cycle-check.c:70
0x0001f3e8      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/cycle-check.c:80
0x0001f3eb      48890f         mov qword [rdi], rcx                    ; ../coreutils-8.31/lib/cycle-check.c:81
0x0001f3ee      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/cycle-check.c:80
0x0001f3f2      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/cycle-check.c:84
0x0001f3f4      c3             ret
0x0001f3f5      0f1f00         nop dword [rax]
0x0001f3f8      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/cycle-check.c:65
0x0001f3fc      483906         cmp qword [rsi], rax
0x0001f3ff      75ca           jne 0x1f3cb
0x0001f401      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/cycle-check.c:66
0x0001f406      c3             ret
0x0001f407      660f1f840000.  nop word [rax + rax]
0x0001f410      4d85c0         test r8, r8                             ; ../coreutils-8.31/lib/cycle-check.c:77
0x0001f413      74ec           je 0x1f401
0x0001f415      ebd1           jmp 0x1f3e8
0x0001f417      488d0d323c00.  lea rcx, obj.__PRETTY_FUNCTION__.3994   ; ../coreutils-8.31/lib/cycle-check.c:60 ; 0x23050 ; "cycle_check"
0x0001f41e      488d35eb3b00.  lea rsi, str..._coreutils_8.31_lib_cycle_check.c ; 0x23010 ; "../coreutils-8.31/lib/cycle-check.c"
0x0001f425      488d3d0c3c00.  lea rdi, str.state__magic____9827862    ; 0x23038 ; "state->magic == 9827862"
0x0001f42c      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/cycle-check.c:59
0x0001f430      ba3c000000     mov edx, 0x3c                           ; ../coreutils-8.31/lib/cycle-check.c:60 ; '<'
0x0001f435      e8c631feff     call sym.imp.__assert_fail
0x0001f43a      660f1f440000   nop word [rax + rax]
;-- open_safer:
0x0001f440      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/open-safer.c:30
0x0001f444      4889542430     mov qword [rsp + 0x30], rdx
0x0001f449      31d2           xor edx, edx
0x0001f44b      64488b042528.  mov rax, qword fs:[0x28]
0x0001f454      4889442418     mov qword [rsp + 0x18], rax
0x0001f459      31c0           xor eax, eax
0x0001f45b      40f6c640       test sil, 0x40                          ; ../coreutils-8.31/lib/open-safer.c:33 ; segment.PHDR
0x0001f45f      7527           jne 0x1f488
0x0001f461      31c0           xor eax, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x0001f463      e84834feff     call sym.imp.open
0x0001f468      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/open-safer.c:45
0x0001f46a      e881020000     call sym.fd_safer
0x0001f46f      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/open-safer.c:46
0x0001f474      6448330c2528.  xor rcx, qword fs:[0x28]
0x0001f47d      752a           jne 0x1f4a9
0x0001f47f      4883c458       add rsp, 0x58
0x0001f483      c3             ret
0x0001f484      0f1f4000       nop dword [rax]
0x0001f488      488d442460     lea rax, [rsp + 0x60]                   ; ../coreutils-8.31/lib/open-safer.c:36
0x0001f48d      c70424100000.  mov dword [rsp], 0x10                   ; [0x10:4]=0x3e0003
0x0001f494      8b542430       mov edx, dword [rsp + 0x30]             ; ../coreutils-8.31/lib/open-safer.c:40
0x0001f498      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/open-safer.c:36
0x0001f49d      488d442420     lea rax, [rsp + 0x20]
0x0001f4a2      4889442410     mov qword [rsp + 0x10], rax
0x0001f4a7      ebb8           jmp 0x1f461
0x0001f4a9      e8b230feff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/open-safer.c:46
0x0001f4ae      6690           nop
;-- hard_locale:
0x0001f4b0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x0001f4b4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x0001f4b6      e88533feff     call sym.imp.setlocale
0x0001f4bb      4889c2         mov rdx, rax
0x0001f4be      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x0001f4c3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x0001f4c6      741d           je 0x1f4e5
0x0001f4c8      488d3d8d3b00.  lea rdi, [0x0002305c]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0001f4cf      b902000000     mov ecx, 2
0x0001f4d4      4889d6         mov rsi, rdx
0x0001f4d7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0001f4d9      0f97c1         seta cl
0x0001f4dc      80d900         sbb cl, 0
0x0001f4df      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x0001f4e1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x0001f4e3      750b           jne 0x1f4f0
0x0001f4e5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0001f4e9      c3             ret
0x0001f4ea      660f1f440000   nop word [rax + rax]
0x0001f4f0      488d3d673b00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x2305e ; "POSIX"
0x0001f4f7      b906000000     mov ecx, 6
0x0001f4fc      4889d6         mov rsi, rdx
0x0001f4ff      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0001f501      0f97c0         seta al
0x0001f504      1c00           sbb al, 0
0x0001f506      84c0           test al, al
0x0001f508      0f95c0         setne al
0x0001f50b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0001f50f      c3             ret
;-- i_ring_init:
0x0001f510      c6471c01       mov byte [rdi + 0x1c], 1
0x0001f514      48c747140000.  mov qword [rdi + 0x14], 0               ; ../coreutils-8.31/lib/i-ring.c:29
0x0001f51c      8937           mov dword [rdi], esi                    ; ../coreutils-8.31/lib/i-ring.c:32
0x0001f51e      897704         mov dword [rdi + 4], esi
0x0001f521      897708         mov dword [rdi + 8], esi
0x0001f524      89770c         mov dword [rdi + 0xc], esi
0x0001f527      897710         mov dword [rdi + 0x10], esi             ; ../coreutils-8.31/lib/i-ring.c:33
0x0001f52a      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:34
0x0001f52b      0f1f440000     nop dword [rax + rax]
;-- i_ring_empty:
0x0001f530      0fb6471c       movzx eax, byte [rdi + 0x1c]            ; ../coreutils-8.31/lib/i-ring.c:38
0x0001f534      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:40
0x0001f535      90             nop
0x0001f536      662e0f1f8400.  nop word cs:[rax + rax]
;-- i_ring_push:
0x0001f540      0fb6571c       movzx edx, byte [rdi + 0x1c]            ; ../coreutils-8.31/lib/i-ring.c:44
0x0001f544      8b4f14         mov ecx, dword [rdi + 0x14]
0x0001f547      83f201         xor edx, 1
0x0001f54a      0fb6d2         movzx edx, dl
0x0001f54d      01d1           add ecx, edx
0x0001f54f      83e103         and ecx, 3
0x0001f552      89c8           mov eax, ecx
0x0001f554      4c8d0487       lea r8, [rdi + rax*4]
0x0001f558      418b00         mov eax, dword [r8]                     ; ../coreutils-8.31/lib/i-ring.c:46
0x0001f55b      418930         mov dword [r8], esi                     ; ../coreutils-8.31/lib/i-ring.c:47
0x0001f55e      8b7718         mov esi, dword [rdi + 0x18]             ; ../coreutils-8.31/lib/i-ring.c:49
0x0001f561      894f14         mov dword [rdi + 0x14], ecx             ; ../coreutils-8.31/lib/i-ring.c:48
0x0001f564      39ce           cmp esi, ecx                            ; ../coreutils-8.31/lib/i-ring.c:49
0x0001f566      7508           jne 0x1f570
0x0001f568      01f2           add edx, esi                            ; ../coreutils-8.31/lib/i-ring.c:50
0x0001f56a      83e203         and edx, 3
0x0001f56d      895718         mov dword [rdi + 0x18], edx
0x0001f570      c6471c00       mov byte [rdi + 0x1c], 0                ; ../coreutils-8.31/lib/i-ring.c:51
0x0001f574      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:53
0x0001f575      90             nop
0x0001f576      662e0f1f8400.  nop word cs:[rax + rax]
;-- i_ring_pop:
0x0001f580      807f1c00       cmp byte [rdi + 0x1c], 0                ; ../coreutils-8.31/lib/i-ring.c:57
0x0001f584      752f           jne 0x1f5b5
0x0001f586      8b4714         mov eax, dword [rdi + 0x14]             ; ../coreutils-8.31/lib/i-ring.c:61
0x0001f589      8b7710         mov esi, dword [rdi + 0x10]             ; ../coreutils-8.31/lib/i-ring.c:62
0x0001f58c      488d0c87       lea rcx, [rdi + rax*4]
0x0001f590      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/i-ring.c:61
0x0001f593      8b01           mov eax, dword [rcx]
0x0001f595      8931           mov dword [rcx], esi                    ; ../coreutils-8.31/lib/i-ring.c:62
0x0001f597      3b5718         cmp edx, dword [rdi + 0x18]             ; ../coreutils-8.31/lib/i-ring.c:63
0x0001f59a      7414           je 0x1f5b0
0x0001f59c      83c203         add edx, 3                              ; ../coreutils-8.31/lib/i-ring.c:66
0x0001f59f      83e203         and edx, 3
0x0001f5a2      895714         mov dword [rdi + 0x14], edx
0x0001f5a5      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:68
0x0001f5a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0001f5b0      c6471c01       mov byte [rdi + 0x1c], 1                ; ../coreutils-8.31/lib/i-ring.c:64
0x0001f5b4      c3             ret
0x0001f5b5      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/i-ring.c:57
0x0001f5b9      e8422efeff     call sym.imp.abort                      ; ../coreutils-8.31/lib/i-ring.c:60
0x0001f5be      6690           nop
;-- locale_charset:
0x0001f5c0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x0001f5c4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x0001f5c9      e80232feff     call sym.imp.nl_langinfo
0x0001f5ce      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x0001f5d1      741d           je 0x1f5f0
0x0001f5d3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x0001f5d6      488d15873a00.  lea rdx, str.ASCII                      ; 0x23064 ; "ASCII"
0x0001f5dd      480f44c2       cmove rax, rdx
0x0001f5e1      4883c408       add rsp, 8
0x0001f5e5      c3             ret
0x0001f5e6      662e0f1f8400.  nop word cs:[rax + rax]
0x0001f5f0      488d056d3a00.  lea rax, str.ASCII                      ; 0x23064 ; "ASCII"
0x0001f5f7      4883c408       add rsp, 8
0x0001f5fb      c3             ret
0x0001f5fc      0f1f4000       nop dword [rax]
;-- openat_safer:
0x0001f600      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/openat-safer.c:30
0x0001f604      48894c2438     mov qword [rsp + 0x38], rcx
0x0001f609      31c9           xor ecx, ecx
0x0001f60b      64488b042528.  mov rax, qword fs:[0x28]
0x0001f614      4889442418     mov qword [rsp + 0x18], rax
0x0001f619      31c0           xor eax, eax
0x0001f61b      f6c240         test dl, 0x40                           ; ../coreutils-8.31/lib/openat-safer.c:33 ; segment.PHDR
0x0001f61e      7528           jne 0x1f648
0x0001f620      31c0           xor eax, eax
0x0001f622      e8292ffeff     call sym.imp.openat                     ; fcntl2.h:-83
0x0001f627      89c7           mov edi, eax
0x0001f629      e8c2000000     call sym.fd_safer                       ; fcntl2.h:-82
0x0001f62e      488b742418     mov rsi, qword [rsp + 0x18]
0x0001f633      644833342528.  xor rsi, qword fs:[0x28]
0x0001f63c      752b           jne 0x1f669
0x0001f63e      4883c458       add rsp, 0x58
0x0001f642      c3             ret
0x0001f643      0f1f440000     nop dword [rax + rax]                   ; fcntl2.h:-92
0x0001f648      488d442460     lea rax, [rsp + 0x60]
0x0001f64d      c70424180000.  mov dword [rsp], 0x18                   ; [0x18:4]=0x3f40 rip
0x0001f654      8b4c2438       mov ecx, dword [rsp + 0x38]
0x0001f658      4889442408     mov qword [rsp + 8], rax
0x0001f65d      488d442420     lea rax, [rsp + 0x20]
0x0001f662      4889442410     mov qword [rsp + 0x10], rax
0x0001f667      ebb7           jmp 0x1f620
0x0001f669      e8f22efeff     call sym.imp.__stack_chk_fail           ; fcntl2.h:-82
0x0001f66e      6690           nop
;-- opendirat:
0x0001f670      4155           push r13                                ; ../coreutils-8.31/lib/opendirat.c:37
0x0001f672      4154           push r12
0x0001f674      81ca00090900   or edx, 0x90900                         ; ../coreutils-8.31/lib/opendirat.c:38
0x0001f67a      55             push rbp                                ; ../coreutils-8.31/lib/opendirat.c:37
0x0001f67b      53             push rbx
0x0001f67c      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/opendirat.c:40
0x0001f67e      4989cc         mov r12, rcx                            ; ../coreutils-8.31/lib/opendirat.c:37
0x0001f681      4883ec08       sub rsp, 8
0x0001f685      e876ffffff     call sym.openat_safer                   ; ../coreutils-8.31/lib/opendirat.c:40
0x0001f68a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/opendirat.c:42
0x0001f68c      7852           js 0x1f6e0
0x0001f68e      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x0001f690      89c3           mov ebx, eax
0x0001f692      e85932feff     call sym.imp.fdopendir
0x0001f697      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/opendirat.c:45
0x0001f69a      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x0001f69d      7419           je 0x1f6b8                              ; ../coreutils-8.31/lib/opendirat.c:45
0x0001f69f      41891c24       mov dword [r12], ebx                    ; ../coreutils-8.31/lib/opendirat.c:46
0x0001f6a3      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x0001f6a7      4889e8         mov rax, rbp
0x0001f6aa      5b             pop rbx
0x0001f6ab      5d             pop rbp
0x0001f6ac      415c           pop r12
0x0001f6ae      415d           pop r13
0x0001f6b0      c3             ret
0x0001f6b1      0f1f80000000.  nop dword [rax]
0x0001f6b8      e8532dfeff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/opendirat.c:49
0x0001f6bd      448b28         mov r13d, dword [rax]
0x0001f6c0      4989c4         mov r12, rax
0x0001f6c3      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/opendirat.c:50
0x0001f6c5      e8762ffeff     call sym.imp.close
0x0001f6ca      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/opendirat.c:54
0x0001f6cd      45892c24       mov dword [r12], r13d                   ; ../coreutils-8.31/lib/opendirat.c:51
0x0001f6d1      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x0001f6d5      5b             pop rbx
0x0001f6d6      5d             pop rbp
0x0001f6d7      415c           pop r12
0x0001f6d9      415d           pop r13
0x0001f6db      c3             ret
0x0001f6dc      0f1f4000       nop dword [rax]
0x0001f6e0      4883c408       add rsp, 8
0x0001f6e4      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/opendirat.c:43
0x0001f6e6      5b             pop rbx                                 ; ../coreutils-8.31/lib/opendirat.c:54
0x0001f6e7      4889e8         mov rax, rbp
0x0001f6ea      5d             pop rbp
0x0001f6eb      415c           pop r12
0x0001f6ed      415d           pop r13
0x0001f6ef      c3             ret
;-- fd_safer:
0x0001f6f0      4155           push r13
0x0001f6f2      4154           push r12
0x0001f6f4      55             push rbp
0x0001f6f5      53             push rbx
0x0001f6f6      89fb           mov ebx, edi
0x0001f6f8      4883ec08       sub rsp, 8
0x0001f6fc      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/fd-safer.c:39
0x0001f6ff      7721           ja 0x1f722
0x0001f701      e8aa020000     call sym.dup_safer                      ; ../coreutils-8.31/lib/fd-safer.c:41
0x0001f706      4189c4         mov r12d, eax
0x0001f709      e8022dfeff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-safer.c:42
0x0001f70e      448b28         mov r13d, dword [rax]
0x0001f711      4889c5         mov rbp, rax
0x0001f714      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-safer.c:43
0x0001f716      e8252ffeff     call sym.imp.close
0x0001f71b      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-safer.c:45
0x0001f71e      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-safer.c:44
0x0001f722      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-safer.c:49
0x0001f726      89d8           mov eax, ebx
0x0001f728      5b             pop rbx
0x0001f729      5d             pop rbp
0x0001f72a      415c           pop r12
0x0001f72c      415d           pop r13
0x0001f72e      c3             ret
0x0001f72f      90             nop
;-- rpl_fcntl:
0x0001f730      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x0001f732      55             push rbp
0x0001f733      89fd           mov ebp, edi
0x0001f735      53             push rbx
0x0001f736      4883ec50       sub rsp, 0x50
0x0001f73a      64488b042528.  mov rax, qword fs:[0x28]
0x0001f743      4889442418     mov qword [rsp + 0x18], rax
0x0001f748      31c0           xor eax, eax
0x0001f74a      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x0001f74f      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x0001f751      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x0001f756      48894c2438     mov qword [rsp + 0x38], rcx
0x0001f75b      4c89442440     mov qword [rsp + 0x40], r8
0x0001f760      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x0001f765      488d442420     lea rax, [rsp + 0x20]
0x0001f76a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x0001f76f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x0001f776      4889442410     mov qword [rsp + 0x10], rax
0x0001f77b      0f8401020000   je 0x1f982                              ; ../coreutils-8.31/lib/fcntl.c:210
0x0001f781      81fe06040000   cmp esi, 0x406
0x0001f787      7547           jne 0x1f7d0
0x0001f789      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x0001f78e      833d638b2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x2282f8:4]=0
0x0001f795      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x3f40 rip
0x0001f79c      448b6010       mov r12d, dword [rax + 0x10]
0x0001f7a0      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x0001f7a3      0f882a010000   js 0x1f8d3                              ; ../coreutils-8.31/lib/fcntl.c:507
0x0001f7a9      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0001f7ab      be06040000     mov esi, 0x406
0x0001f7b0      e8eb2cfeff     call sym.imp.fcntl
0x0001f7b5      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x0001f7b7      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0001f7b9      0f8889010000   js 0x1f948                              ; ../coreutils-8.31/lib/fcntl.c:510
0x0001f7bf      c7052f8b2000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x2282f8:4]=0
0x0001f7c9      eb45           jmp 0x1f810
0x0001f7cb      0f1f440000     nop dword [rax + rax]
0x0001f7d0      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x0001f7d3      742b           je 0x1f800
0x0001f7d5      7f59           jg 0x1f830
0x0001f7d7      83fe04         cmp esi, 4
0x0001f7da      0f84d0000000   je 0x1f8b0
0x0001f7e0      0f8fba000000   jg 0x1f8a0
0x0001f7e6      83fe02         cmp esi, 2
0x0001f7e9      0f84c1000000   je 0x1f8b0
0x0001f7ef      7f0f           jg 0x1f800
0x0001f7f1      83fe01         cmp esi, 1
0x0001f7f4      7562           jne 0x1f858
0x0001f7f6      662e0f1f8400.  nop word cs:[rax + rax]
0x0001f800      89ef           mov edi, ebp
0x0001f802      31c0           xor eax, eax
0x0001f804      e8972cfeff     call sym.imp.fcntl
0x0001f809      89c3           mov ebx, eax
0x0001f80b      0f1f440000     nop dword [rax + rax]
0x0001f810      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0001f815      6448330c2528.  xor rcx, qword fs:[0x28]
0x0001f81e      89d8           mov eax, ebx
0x0001f820      0f8557010000   jne 0x1f97d                             ; ../coreutils-8.31/lib/fcntl.c:355
0x0001f826      4883c450       add rsp, 0x50
0x0001f82a      5b             pop rbx
0x0001f82b      5d             pop rbp
0x0001f82c      415c           pop r12
0x0001f82e      c3             ret
0x0001f82f      90             nop
0x0001f830      81fe07040000   cmp esi, 0x407
0x0001f836      7f48           jg 0x1f880
0x0001f838      81fe06040000   cmp esi, 0x406
0x0001f83e      7d70           jge 0x1f8b0
0x0001f840      81fe01040000   cmp esi, 0x401
0x0001f846      74b8           je 0x1f800
0x0001f848      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x0001f84e      7460           je 0x1f8b0
0x0001f850      81fe00040000   cmp esi, 0x400
0x0001f856      7458           je 0x1f8b0
0x0001f858      8b0424         mov eax, dword [rsp]
0x0001f85b      83f82f         cmp eax, 0x2f
0x0001f85e      0f8736010000   ja 0x1f99a
0x0001f864      4803442410     add rax, qword [rsp + 0x10]
0x0001f869      488b10         mov rdx, qword [rax]
0x0001f86c      89ef           mov edi, ebp
0x0001f86e      31c0           xor eax, eax
0x0001f870      e82b2cfeff     call sym.imp.fcntl
0x0001f875      89c3           mov ebx, eax
0x0001f877      eb97           jmp 0x1f810
0x0001f879      0f1f80000000.  nop dword [rax]
0x0001f880      81fe09040000   cmp esi, 0x409
0x0001f886      7428           je 0x1f8b0
0x0001f888      0f8c72ffffff   jl 0x1f800
0x0001f88e      81fe0a040000   cmp esi, 0x40a
0x0001f894      75c2           jne 0x1f858
0x0001f896      e965ffffff     jmp 0x1f800                             ; ../coreutils-8.31/lib/fcntl.c:350
0x0001f89b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x0001f8a0      83fe09         cmp esi, 9
0x0001f8a3      0f8457ffffff   je 0x1f800
0x0001f8a9      7f05           jg 0x1f8b0
0x0001f8ab      83fe08         cmp esi, 8
0x0001f8ae      75a8           jne 0x1f858
0x0001f8b0      8b0424         mov eax, dword [rsp]
0x0001f8b3      83f82f         cmp eax, 0x2f
0x0001f8b6      0f87e8000000   ja 0x1f9a4
0x0001f8bc      4803442410     add rax, qword [rsp + 0x10]
0x0001f8c1      8b10           mov edx, dword [rax]
0x0001f8c3      89ef           mov edi, ebp
0x0001f8c5      31c0           xor eax, eax
0x0001f8c7      e8d42bfeff     call sym.imp.fcntl
0x0001f8cc      89c3           mov ebx, eax
0x0001f8ce      e93dffffff     jmp 0x1f810
0x0001f8d3      31f6           xor esi, esi
0x0001f8d5      31c0           xor eax, eax
0x0001f8d7      e8c42bfeff     call sym.imp.fcntl
0x0001f8dc      85c0           test eax, eax
0x0001f8de      89c3           mov ebx, eax
0x0001f8e0      0f882affffff   js 0x1f810
0x0001f8e6      833d0b8a2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x2282f8:4]=0
0x0001f8ed      0f851dffffff   jne 0x1f810
0x0001f8f3      31c0           xor eax, eax
0x0001f8f5      be01000000     mov esi, 1
0x0001f8fa      89df           mov edi, ebx
0x0001f8fc      e89f2bfeff     call sym.imp.fcntl
0x0001f901      85c0           test eax, eax
0x0001f903      781c           js 0x1f921
0x0001f905      83c801         or eax, 1
0x0001f908      be02000000     mov esi, 2
0x0001f90d      89df           mov edi, ebx
0x0001f90f      89c2           mov edx, eax
0x0001f911      31c0           xor eax, eax
0x0001f913      e8882bfeff     call sym.imp.fcntl
0x0001f918      83f8ff         cmp eax, 0xffffffff
0x0001f91b      0f85effeffff   jne 0x1f810
0x0001f921      e8ea2afeff     call sym.imp.__errno_location
0x0001f926      448b20         mov r12d, dword [rax]
0x0001f929      4889c5         mov rbp, rax
0x0001f92c      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x0001f92e      e80d2dfeff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x0001f933      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0001f938      44896500       mov dword [rbp], r12d
0x0001f93c      e9cffeffff     jmp 0x1f810
0x0001f941      0f1f80000000.  nop dword [rax]
0x0001f948      e8c32afeff     call sym.imp.__errno_location
0x0001f94d      833816         cmp dword [rax], 0x16
0x0001f950      0f8569feffff   jne 0x1f7bf
0x0001f956      31f6           xor esi, esi
0x0001f958      31c0           xor eax, eax
0x0001f95a      4489e2         mov edx, r12d
0x0001f95d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x0001f95f      e83c2bfeff     call sym.imp.fcntl
0x0001f964      85c0           test eax, eax
0x0001f966      89c3           mov ebx, eax
0x0001f968      0f88a2feffff   js 0x1f810
0x0001f96e      c70580892000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x2282f8:4]=0
0x0001f978      e976ffffff     jmp 0x1f8f3
0x0001f97d      e8de2bfeff     call sym.imp.__stack_chk_fail
0x0001f982      488b442410     mov rax, qword [rsp + 0x10]
0x0001f987      31f6           xor esi, esi
0x0001f989      8b5010         mov edx, dword [rax + 0x10]
0x0001f98c      31c0           xor eax, eax
0x0001f98e      e80d2bfeff     call sym.imp.fcntl
0x0001f993      89c3           mov ebx, eax
0x0001f995      e976feffff     jmp 0x1f810
0x0001f99a      488b442408     mov rax, qword [rsp + 8]
0x0001f99f      e9c5feffff     jmp 0x1f869
0x0001f9a4      488b442408     mov rax, qword [rsp + 8]
0x0001f9a9      e913ffffff     jmp 0x1f8c1
0x0001f9ae      6690           nop
;-- dup_safer:
0x0001f9b0      ba03000000     mov edx, 3
0x0001f9b5      31f6           xor esi, esi
0x0001f9b7      31c0           xor eax, eax
0x0001f9b9      e972fdffff     jmp sym.rpl_fcntl
0x0001f9be      6690           nop
;-- __libc_csu_init:
0x0001f9c0      4157           push r15
0x0001f9c2      4156           push r14
0x0001f9c4      4989d7         mov r15, rdx
0x0001f9c7      4155           push r13
0x0001f9c9      4154           push r12
0x0001f9cb      4c8d259e7c20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x227670 ; "@@"
0x0001f9d2      55             push rbp
0x0001f9d3      488d2d9e7c20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x227678
0x0001f9da      53             push rbx
0x0001f9db      4189fd         mov r13d, edi
0x0001f9de      4989f6         mov r14, rsi
0x0001f9e1      4c29e5         sub rbp, r12
0x0001f9e4      4883ec08       sub rsp, 8
0x0001f9e8      48c1fd03       sar rbp, 3
0x0001f9ec      e89f29feff     call sym._init
0x0001f9f1      4885ed         test rbp, rbp
0x0001f9f4      7420           je 0x1fa16
0x0001f9f6      31db           xor ebx, ebx
0x0001f9f8      0f1f84000000.  nop dword [rax + rax]
0x0001fa00      4c89fa         mov rdx, r15
0x0001fa03      4c89f6         mov rsi, r14
0x0001fa06      4489ef         mov edi, r13d
0x0001fa09      41ff14dc       call qword [r12 + rbx*8]
0x0001fa0d      4883c301       add rbx, 1
0x0001fa11      4839dd         cmp rbp, rbx
0x0001fa14      75ea           jne 0x1fa00
0x0001fa16      4883c408       add rsp, 8
0x0001fa1a      5b             pop rbx
0x0001fa1b      5d             pop rbp
0x0001fa1c      415c           pop r12
0x0001fa1e      415d           pop r13
0x0001fa20      415e           pop r14
0x0001fa22      415f           pop r15
0x0001fa24      c3             ret
0x0001fa25      90             nop
0x0001fa26      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x0001fa30      f3c3           ret
0x0001fa32      662e0f1f8400.  nop word cs:[rax + rax]
0x0001fa3c      0f1f4000       nop dword [rax]
;-- atexit:
0x0001fa40      488b15c18520.  mov rdx, qword [obj.__dso_handle]       ; [0x228008:8]=0x228008 obj.__dso_handle
0x0001fa47      31f6           xor esi, esi
0x0001fa49      e9f22efeff     jmp sym.imp.__cxa_atexit
0x0001fa4e      0000           add byte [rax], al
