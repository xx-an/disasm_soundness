;-- section..plt:
;-- .plt:
0x000014c0      ff356a792000   push qword [0x00208e30]                 ; [12] -r-x section size 816 named .plt
0x000014c6      ff256c792000   jmp qword [0x00208e38]                  ; [0x208e38:8]=0
0x000014cc      0f1f4000       nop dword [rax]
;-- imp.free:
0x000014d0      ff256a792000   jmp qword [reloc.free]                  ; [0x208e40:8]=0x14d6
0x000014d6      6800000000     push 0
0x000014db      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x000014e0      ff2562792000   jmp qword [reloc.abort]                 ; [0x208e48:8]=0x14e6
0x000014e6      6801000000     push 1
0x000014eb      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000014f0      ff255a792000   jmp qword [reloc.__errno_location]      ; [0x208e50:8]=0x14f6
0x000014f6      6802000000     push 2
0x000014fb      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001500      ff2552792000   jmp qword [reloc.strncmp]               ; [0x208e58:8]=0x1506
0x00001506      6803000000     push 3
0x0000150b      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x00001510      ff254a792000   jmp qword [reloc._exit]                 ; [0x208e60:8]=0x1516
0x00001516      6804000000     push 4
0x0000151b      e9a0ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001520      ff2542792000   jmp qword [reloc.__fpending]            ; [0x208e68:8]=0x1526 ; "&\x15"
0x00001526      6805000000     push 5
0x0000152b      e990ffffff     jmp sym..plt
;-- imp.fread_unlocked:
0x00001530      ff253a792000   jmp qword [reloc.fread_unlocked]        ; [0x208e70:8]=0x1536 ; "6\x15"
0x00001536      6806000000     push 6
0x0000153b      e980ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001540      ff2532792000   jmp qword [reloc.textdomain]            ; [0x208e78:8]=0x1546 ; "F\x15"
0x00001546      6807000000     push 7
0x0000154b      e970ffffff     jmp sym..plt
;-- imp.fclose:
0x00001550      ff252a792000   jmp qword [reloc.fclose]                ; [0x208e80:8]=0x1556 ; "V\x15"
0x00001556      6808000000     push 8
0x0000155b      e960ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001560      ff2522792000   jmp qword [reloc.bindtextdomain]        ; [0x208e88:8]=0x1566 ; "f\x15"
0x00001566      6809000000     push 9
0x0000156b      e950ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001570      ff251a792000   jmp qword [reloc.dcgettext]             ; [0x208e90:8]=0x1576 ; "v\x15"
0x00001576      680a000000     push 0xa
0x0000157b      e940ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001580      ff2512792000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x208e98:8]=0x1586
0x00001586      680b000000     push 0xb
0x0000158b      e930ffffff     jmp sym..plt
;-- imp.strlen:
0x00001590      ff250a792000   jmp qword [reloc.strlen]                ; [0x208ea0:8]=0x1596
0x00001596      680c000000     push 0xc
0x0000159b      e920ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000015a0      ff2502792000   jmp qword [reloc.__stack_chk_fail]      ; [0x208ea8:8]=0x15a6
0x000015a6      680d000000     push 0xd
0x000015ab      e910ffffff     jmp sym..plt
;-- imp.getopt_long:
0x000015b0      ff25fa782000   jmp qword [reloc.getopt_long]           ; [0x208eb0:8]=0x15b6
0x000015b6      680e000000     push 0xe
0x000015bb      e900ffffff     jmp sym..plt
;-- imp.mbrtowc:
0x000015c0      ff25f2782000   jmp qword [reloc.mbrtowc]               ; [0x208eb8:8]=0x15c6
0x000015c6      680f000000     push 0xf
0x000015cb      e9f0feffff     jmp sym..plt
;-- imp.strchr:
0x000015d0      ff25ea782000   jmp qword [reloc.strchr]                ; [0x208ec0:8]=0x15d6
0x000015d6      6810000000     push 0x10
0x000015db      e9e0feffff     jmp sym..plt
;-- imp.__overflow:
0x000015e0      ff25e2782000   jmp qword [reloc.__overflow]            ; [0x208ec8:8]=0x15e6
0x000015e6      6811000000     push 0x11
0x000015eb      e9d0feffff     jmp sym..plt
;-- imp.strrchr:
0x000015f0      ff25da782000   jmp qword [reloc.strrchr]               ; [0x208ed0:8]=0x15f6
0x000015f6      6812000000     push 0x12
0x000015fb      e9c0feffff     jmp sym..plt
;-- imp.lseek:
0x00001600      ff25d2782000   jmp qword [reloc.lseek]                 ; [0x208ed8:8]=0x1606
0x00001606      6813000000     push 0x13
0x0000160b      e9b0feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001610      ff25ca782000   jmp qword [reloc.__assert_fail]         ; [0x208ee0:8]=0x1616
0x00001616      6814000000     push 0x14
0x0000161b      e9a0feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00001620      ff25c2782000   jmp qword [reloc.__strtoul_internal]    ; [0x208ee8:8]=0x1626 ; "&\x16"
0x00001626      6815000000     push 0x15
0x0000162b      e990feffff     jmp sym..plt
;-- imp.memset:
0x00001630      ff25ba782000   jmp qword [reloc.memset]                ; [0x208ef0:8]=0x1636 ; "6\x16"
0x00001636      6816000000     push 0x16
0x0000163b      e980feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001640      ff25b2782000   jmp qword [reloc.posix_fadvise]         ; [0x208ef8:8]=0x1646 ; "F\x16"
0x00001646      6817000000     push 0x17
0x0000164b      e970feffff     jmp sym..plt
;-- imp.memchr:
0x00001650      ff25aa782000   jmp qword [reloc.memchr]                ; [0x208f00:8]=0x1656 ; "V\x16"
0x00001656      6818000000     push 0x18
0x0000165b      e960feffff     jmp sym..plt
;-- imp.memcmp:
0x00001660      ff25a2782000   jmp qword [reloc.memcmp]                ; [0x208f08:8]=0x1666 ; "f\x16"
0x00001666      6819000000     push 0x19
0x0000166b      e950feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001670      ff259a782000   jmp qword [reloc.fputs_unlocked]        ; [0x208f10:8]=0x1676 ; "v\x16"
0x00001676      681a000000     push 0x1a
0x0000167b      e940feffff     jmp sym..plt
;-- imp.calloc:
0x00001680      ff2592782000   jmp qword [reloc.calloc]                ; [0x208f18:8]=0x1686
0x00001686      681b000000     push 0x1b
0x0000168b      e930feffff     jmp sym..plt
;-- imp.strcmp:
0x00001690      ff258a782000   jmp qword [reloc.strcmp]                ; [0x208f20:8]=0x1696
0x00001696      681c000000     push 0x1c
0x0000169b      e920feffff     jmp sym..plt
;-- imp.memcpy:
0x000016a0      ff2582782000   jmp qword [reloc.memcpy]                ; [0x208f28:8]=0x16a6
0x000016a6      681d000000     push 0x1d
0x000016ab      e910feffff     jmp sym..plt
;-- imp.fileno:
0x000016b0      ff257a782000   jmp qword [reloc.fileno]                ; [0x208f30:8]=0x16b6
0x000016b6      681e000000     push 0x1e
0x000016bb      e900feffff     jmp sym..plt
;-- imp.malloc:
0x000016c0      ff2572782000   jmp qword [reloc.malloc]                ; [0x208f38:8]=0x16c6
0x000016c6      681f000000     push 0x1f
0x000016cb      e9f0fdffff     jmp sym..plt
;-- imp.fflush:
0x000016d0      ff256a782000   jmp qword [reloc.fflush]                ; [0x208f40:8]=0x16d6
0x000016d6      6820000000     push 0x20                               ; "@"
0x000016db      e9e0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000016e0      ff2562782000   jmp qword [reloc.nl_langinfo]           ; [0x208f48:8]=0x16e6
0x000016e6      6821000000     push 0x21                               ; '!'
0x000016eb      e9d0fdffff     jmp sym..plt
;-- imp.__freading:
0x000016f0      ff255a782000   jmp qword [reloc.__freading]            ; [0x208f50:8]=0x16f6
0x000016f6      6822000000     push 0x22                               ; '"'
0x000016fb      e9c0fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001700      ff2552782000   jmp qword [reloc.fwrite_unlocked]       ; [0x208f58:8]=0x1706
0x00001706      6823000000     push 0x23                               ; '#'
0x0000170b      e9b0fdffff     jmp sym..plt
;-- imp.realloc:
0x00001710      ff254a782000   jmp qword [reloc.realloc]               ; [0x208f60:8]=0x1716
0x00001716      6824000000     push 0x24                               ; '$'
0x0000171b      e9a0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001720      ff2542782000   jmp qword [reloc.setlocale]             ; [0x208f68:8]=0x1726 ; "&\x17"
0x00001726      6825000000     push 0x25                               ; '%'
0x0000172b      e990fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001730      ff253a782000   jmp qword [reloc.__printf_chk]          ; [0x208f70:8]=0x1736 ; "6\x17"
0x00001736      6826000000     push 0x26                               ; '&'
0x0000173b      e980fdffff     jmp sym..plt
;-- imp.memmove:
0x00001740      ff2532782000   jmp qword [reloc.memmove]               ; [0x208f78:8]=0x1746 ; "F\x17"
0x00001746      6827000000     push 0x27                               ; '''
0x0000174b      e970fdffff     jmp sym..plt
;-- imp.error:
0x00001750      ff252a782000   jmp qword [reloc.error]                 ; [0x208f80:8]=0x1756 ; "V\x17"
0x00001756      6828000000     push 0x28                               ; '('
0x0000175b      e960fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001760      ff2522782000   jmp qword [reloc.fseeko]                ; [0x208f88:8]=0x1766 ; "f\x17"
0x00001766      6829000000     push 0x29                               ; ')'
0x0000176b      e950fdffff     jmp sym..plt
;-- imp.fopen:
0x00001770      ff251a782000   jmp qword [reloc.fopen]                 ; [0x208f90:8]=0x1776 ; "v\x17"
0x00001776      682a000000     push 0x2a                               ; '*'
0x0000177b      e940fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001780      ff2512782000   jmp qword [reloc.__cxa_atexit]          ; [0x208f98:8]=0x1786
0x00001786      682b000000     push 0x2b                               ; '+'
0x0000178b      e930fdffff     jmp sym..plt
;-- imp.exit:
0x00001790      ff250a782000   jmp qword [reloc.exit]                  ; [0x208fa0:8]=0x1796
0x00001796      682c000000     push 0x2c                               ; ','
0x0000179b      e920fdffff     jmp sym..plt
;-- imp.fwrite:
0x000017a0      ff2502782000   jmp qword [reloc.fwrite]                ; [0x208fa8:8]=0x17a6
0x000017a6      682d000000     push 0x2d                               ; '-'
0x000017ab      e910fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x000017b0      ff25fa772000   jmp qword [reloc.__fprintf_chk]         ; [0x208fb0:8]=0x17b6
0x000017b6      682e000000     push 0x2e                               ; '.'
0x000017bb      e900fdffff     jmp sym..plt
;-- imp.mbsinit:
0x000017c0      ff25f2772000   jmp qword [reloc.mbsinit]               ; [0x208fb8:8]=0x17c6
0x000017c6      682f000000     push 0x2f                               ; '/'
0x000017cb      e9f0fcffff     jmp sym..plt
;-- imp.iswprint:
0x000017d0      ff25ea772000   jmp qword [reloc.iswprint]              ; [0x208fc0:8]=0x17d6
0x000017d6      6830000000     push 0x30                               ; '0'
0x000017db      e9e0fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000017e0      ff25e2772000   jmp qword [reloc.__ctype_b_loc]         ; [0x208fc8:8]=0x17e6
0x000017e6      6831000000     push 0x31                               ; '1'
0x000017eb      e9d0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000017f0      .qword 0x9066002077fa25ff                              ; [13] -r-x section size 8 named .plt.got
0x000017f8      0000           add byte [rax], al
0x000017fa      0000           add byte [rax], al
0x000017fc      0000           add byte [rax], al
0x000017fe      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001800      4157           push r15                                ; [14] -r-x section size 17550 named .text
0x00001802      4156           push r14
0x00001804      4155           push r13
0x00001806      4154           push r12
0x00001808      4189fd         mov r13d, edi
0x0000180b      55             push rbp
0x0000180c      53             push rbx
0x0000180d      4989f4         mov r12, rsi
0x00001810      bd4c000000     mov ebp, 0x4c                           ; 'L'
0x00001815      31db           xor ebx, ebx
0x00001817      4883ec78       sub rsp, 0x78
0x0000181b      488b3e         mov rdi, qword [rsi]
0x0000181e      64488b042528.  mov rax, qword fs:[0x28]
0x00001827      4889442468     mov qword [rsp + 0x68], rax
0x0000182c      31c0           xor eax, eax
0x0000182e      e8cd150000     call sym.set_program_name
0x00001833      488d35a75000.  lea rsi, [0x000068e1]
0x0000183a      bf06000000     mov edi, 6
0x0000183f      e8dcfeffff     call sym.imp.setlocale
0x00001844      488d35214500.  lea rsi, str.usr_local_share_locale     ; 0x5d6c ; "/usr/local/share/locale"
0x0000184b      488d3df14400.  lea rdi, [0x00005d43]                   ; "coreutils"
0x00001852      e809fdffff     call sym.imp.bindtextdomain
0x00001857      488d3de54400.  lea rdi, [0x00005d43]                   ; "coreutils"
0x0000185e      e8ddfcffff     call sym.imp.textdomain
0x00001863      488d3da61400.  lea rdi, sym.close_stdout               ; 0x2d10 ; "USH\x83\xec\bH\x8b=kc "
0x0000186a      e811440000     call sym.atexit
0x0000186f      c644243000     mov byte [rsp + 0x30], 0
0x00001874      488d0da57220.  lea rcx, obj.long_options               ; 0x208b20
0x0000187b      488d15244500.  lea rdx, str.diw:                       ; 0x5da6 ; "diw:"
0x00001882      4531c0         xor r8d, r8d
0x00001885      4c89e6         mov rsi, r12
0x00001888      4489ef         mov edi, r13d
0x0000188b      e820fdffff     call sym.imp.getopt_long
0x00001890      83f8ff         cmp eax, 0xffffffff
0x00001893      0f84b6000000   je 0x194f
0x00001899      83f864         cmp eax, 0x64
0x0000189c      7452           je 0x18f0
0x0000189e      7e70           jle 0x1910
0x000018a0      83f869         cmp eax, 0x69
0x000018a3      745b           je 0x1900
0x000018a5      83f877         cmp eax, 0x77
0x000018a8      0f85ff060000   jne 0x1fad
0x000018ae      488d35cf4400.  lea rsi, str.invalid_wrap_size          ; 0x5d84 ; "invalid wrap size"
0x000018b5      ba05000000     mov edx, 5
0x000018ba      31ff           xor edi, edi
0x000018bc      e8affcffff     call sym.imp.dcgettext
0x000018c1      488b3dd87720.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2090a0:8]=0
0x000018c8      488d0d125000.  lea rcx, [0x000068e1]
0x000018cf      4989c0         mov r8, rax
0x000018d2      4531c9         xor r9d, r9d
0x000018d5      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000018dc      31f6           xor esi, esi
0x000018de      e8fd3b0000     call sym.xdectoumax
0x000018e3      4889c5         mov rbp, rax
0x000018e6      eb8c           jmp 0x1874
0x000018e8      0f1f84000000.  nop dword [rax + rax]
0x000018f0      bb01000000     mov ebx, 1
0x000018f5      e97affffff     jmp 0x1874
0x000018fa      660f1f440000   nop word [rax + rax]
0x00001900      c644243001     mov byte [rsp + 0x30], 1
0x00001905      e96affffff     jmp 0x1874
0x0000190a      660f1f440000   nop word [rax + rax]
0x00001910      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001915      0f8553060000   jne 0x1f6e
0x0000191b      488b3d667720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00001922      488b0de77620.  mov rcx, qword [obj.Version]            ; [0x209010:8]=0x6233 str.8.31 ; "3b"
0x00001929      4c8d05664400.  lea r8, str.Simon_Josefsson             ; 0x5d96 ; "Simon Josefsson"
0x00001930      488d15084400.  lea rdx, str.GNU_coreutils              ; 0x5d3f ; "GNU coreutils"
0x00001937      488d35664300.  lea rsi, str.base32                     ; 0x5ca4 ; "base32"
0x0000193e      4531c9         xor r9d, r9d
0x00001941      31c0           xor eax, eax
0x00001943      e8a8360000     call sym.version_etc
0x00001948      31ff           xor edi, edi
0x0000194a      e841feffff     call sym.imp.exit
0x0000194f      486305427720.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x209098:4]=0
0x00001956      4489ea         mov edx, r13d
0x00001959      29c2           sub edx, eax
0x0000195b      83ea01         sub edx, 1
0x0000195e      0f8f18060000   jg 0x1f7c
0x00001964      4439e8         cmp eax, r13d
0x00001967      7d66           jge 0x19cf
0x00001969      498b04c4       mov rax, qword [r12 + rax*8]
0x0000196d      488d35364a00.  lea rsi, [0x000063aa]                   ; "-"
0x00001974      4889c7         mov rdi, rax
0x00001977      4889442448     mov qword [rsp + 0x48], rax
0x0000197c      e80ffdffff     call sym.imp.strcmp
0x00001981      85c0           test eax, eax
0x00001983      7456           je 0x19db
0x00001985      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0000198a      488d352b4400.  lea rsi, [0x00005dbc]                   ; "rb"
0x00001991      e8dafdffff     call sym.imp.fopen
0x00001996      4885c0         test rax, rax
0x00001999      4989c4         mov r12, rax
0x0000199c      7544           jne 0x19e2
0x0000199e      488b542448     mov rdx, qword [rsp + 0x48]
0x000019a3      be03000000     mov esi, 3
0x000019a8      31ff           xor edi, edi
0x000019aa      e8912f0000     call sym.quotearg_n_style_colon
0x000019af      4889c3         mov rbx, rax
0x000019b2      e839fbffff     call sym.imp.__errno_location
0x000019b7      8b30           mov esi, dword [rax]
0x000019b9      488d15a44900.  lea rdx, [0x00006364]                   ; "%s"
0x000019c0      4889d9         mov rcx, rbx
0x000019c3      bf01000000     mov edi, 1
0x000019c8      31c0           xor eax, eax
0x000019ca      e881fdffff     call sym.imp.error
0x000019cf      488d05d44900.  lea rax, [0x000063aa]                   ; "-"
0x000019d6      4889442448     mov qword [rsp + 0x48], rax
0x000019db      4c8b25ae7620.  mov r12, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x209090:8]=0
0x000019e2      be02000000     mov esi, 2
0x000019e7      4c89e7         mov rdi, r12
0x000019ea      e8e1130000     call sym.fadvise
0x000019ef      84db           test bl, bl
0x000019f1      488b05907620.  mov rax, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x000019f8      0f84fa010000   je 0x1bf8
0x000019fe      bf00200000     mov edi, entry0                         ; rip
                                                                       ; 0x2000 ; "1\xedI\x89\xd1^H\x89\xe2H\x83\xe4\xf0PTL\x8d\x05Z<"
0x00001a03      4889442438     mov qword [rsp + 0x38], rax
0x00001a08      e843370000     call sym.xmalloc
0x00001a0d      bf00140000     mov edi, 0x1400
0x00001a12      4889c5         mov rbp, rax
0x00001a15      e836370000     call sym.xmalloc
0x00001a1a      4889442440     mov qword [rsp + 0x40], rax
0x00001a1f      488d44245c     lea rax, [rsp + 0x5c]
0x00001a24      4889c7         mov rdi, rax
0x00001a27      4889442418     mov qword [rsp + 0x18], rax
0x00001a2c      e83f0f0000     call sym.base32_decode_ctx_init
0x00001a31      488d442450     lea rax, [rsp + 0x50]
0x00001a36      4c89642410     mov qword [rsp + 0x10], r12
0x00001a3b      48896c2408     mov qword [rsp + 8], rbp
0x00001a40      4889442420     mov qword [rsp + 0x20], rax
0x00001a45      0f1f00         nop dword [rax]
0x00001a48      31db           xor ebx, ebx
0x00001a4a      eb30           jmp 0x1a7c
0x00001a4c      0f1f4000       nop dword [rax]
0x00001a50      488b442410     mov rax, qword [rsp + 0x10]
0x00001a55      4c01e3         add rbx, r12
0x00001a58      8b00           mov eax, dword [rax]
0x00001a5a      a820           test al, 0x20                           ; "@"
0x00001a5c      0f85af040000   jne 0x1f11
0x00001a62      89c2           mov edx, eax
0x00001a64      83e210         and edx, 0x10
0x00001a67      4881fbff1f00.  cmp rbx, 0x1fff
0x00001a6e      0f87a4000000   ja 0x1b18
0x00001a74      85d2           test edx, edx
0x00001a76      0f859c000000   jne 0x1b18
0x00001a7c      488b442408     mov rax, qword [rsp + 8]
0x00001a81      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00001a86      ba00200000     mov edx, entry0                         ; rip
                                                                       ; 0x2000 ; "1\xedI\x89\xd1^H\x89\xe2H\x83\xe4\xf0PTL\x8d\x05Z<"
0x00001a8b      4829da         sub rdx, rbx
0x00001a8e      be01000000     mov esi, 1
0x00001a93      488d3c18       lea rdi, [rax + rbx]
0x00001a97      e894faffff     call sym.imp.fread_unlocked
0x00001a9c      807c243000     cmp byte [rsp + 0x30], 0
0x00001aa1      4989c4         mov r12, rax
0x00001aa4      4889442450     mov qword [rsp + 0x50], rax
0x00001aa9      74a5           je 0x1a50
0x00001aab      4531ed         xor r13d, r13d
0x00001aae      4d85e4         test r12, r12
0x00001ab1      749d           je 0x1a50
0x00001ab3      4d39e5         cmp r13, r12
0x00001ab6      7398           jae 0x1a50
0x00001ab8      488b442408     mov rax, qword [rsp + 8]
0x00001abd      4e8d3c2b       lea r15, [rbx + r13]
0x00001ac1      4e8d3438       lea r14, [rax + r15]
0x00001ac5      410fbe3e       movsx edi, byte [r14]
0x00001ac9      89fd           mov ebp, edi
0x00001acb      e8800e0000     call sym.isbase32
0x00001ad0      4080fd3d       cmp bpl, 0x3d
0x00001ad4      7404           je 0x1ada
0x00001ad6      84c0           test al, al
0x00001ad8      7416           je 0x1af0
0x00001ada      4983c501       add r13, 1
0x00001ade      4d85e4         test r12, r12
0x00001ae1      75d0           jne 0x1ab3
0x00001ae3      e968ffffff     jmp 0x1a50
0x00001ae8      0f1f84000000.  nop dword [rax + rax]
0x00001af0      488b442408     mov rax, qword [rsp + 8]
0x00001af5      4983ec01       sub r12, 1
0x00001af9      4c89f7         mov rdi, r14
0x00001afc      4c89e2         mov rdx, r12
0x00001aff      4c89642450     mov qword [rsp + 0x50], r12
0x00001b04      4c29ea         sub rdx, r13
0x00001b07      4a8d743801     lea rsi, [rax + r15 + 1]
0x00001b0c      e82ffcffff     call sym.imp.memmove
0x00001b11      eb9b           jmp 0x1aae
0x00001b13      0f1f440000     nop dword [rax + rax]
0x00001b18      4531ff         xor r15d, r15d
0x00001b1b      48895c2428     mov qword [rsp + 0x28], rbx
0x00001b20      488b6c2408     mov rbp, qword [rsp + 8]
0x00001b25      4589fe         mov r14d, r15d
0x00001b28      4c8b642440     mov r12, qword [rsp + 0x40]
0x00001b2d      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00001b32      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x00001b37      eb65           jmp 0x1b9e
0x00001b39      0f1f80000000.  nop dword [rax]
0x00001b40      4585f6         test r14d, r14d
0x00001b43      0f85fffeffff   jne 0x1a48
0x00001b49      488b542428     mov rdx, qword [rsp + 0x28]
0x00001b4e      48c744245000.  mov qword [rsp + 0x50], 0x1400          ; [0x1400:8]=0x208f98 reloc.__cxa_atexit
0x00001b57      4c8b442420     mov r8, qword [rsp + 0x20]
0x00001b5c      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00001b61      4c89e1         mov rcx, r12
0x00001b64      4889ee         mov rsi, rbp
0x00001b67      e8140e0000     call sym.base32_decode_ctx
0x00001b6c      488b542450     mov rdx, qword [rsp + 0x50]
0x00001b71      4c89f9         mov rcx, r15
0x00001b74      be01000000     mov esi, 1
0x00001b79      4c89e7         mov rdi, r12
0x00001b7c      4189c5         mov r13d, eax
0x00001b7f      e87cfbffff     call sym.imp.fwrite_unlocked
0x00001b84      483b442450     cmp rax, qword [rsp + 0x50]
0x00001b89      0f8256030000   jb 0x1ee5
0x00001b8f      4584ed         test r13b, r13b
0x00001b92      0f8429030000   je 0x1ec1
0x00001b98      8b03           mov eax, dword [rbx]
0x00001b9a      4183c601       add r14d, 1
0x00001b9e      a810           test al, 0x10
0x00001ba0      749e           je 0x1b40
0x00001ba2      4183fe01       cmp r14d, 1
0x00001ba6      7717           ja 0x1bbf
0x00001ba8      759f           jne 0x1b49
0x00001baa      8b44245c       mov eax, dword [rsp + 0x5c]
0x00001bae      85c0           test eax, eax
0x00001bb0      740d           je 0x1bbf
0x00001bb2      48c744245000.  mov qword [rsp + 0x50], 0x1400          ; [0x1400:8]=0x208f98 reloc.__cxa_atexit
0x00001bbb      31d2           xor edx, edx
0x00001bbd      eb98           jmp 0x1b57
0x00001bbf      4989dc         mov r12, rbx
0x00001bc2      4c89e7         mov rdi, r12
0x00001bc5      e8663d0000     call sym.rpl_fclose
0x00001bca      83c001         add eax, 1
0x00001bcd      0f8482020000   je 0x1e55
0x00001bd3      31c0           xor eax, eax
0x00001bd5      488b4c2468     mov rcx, qword [rsp + 0x68]
0x00001bda      6448330c2528.  xor rcx, qword fs:[0x28]
0x00001be3      0f8554030000   jne 0x1f3d
0x00001be9      4883c478       add rsp, 0x78
0x00001bed      5b             pop rbx
0x00001bee      5d             pop rbp
0x00001bef      415c           pop r12
0x00001bf1      415d           pop r13
0x00001bf3      415e           pop r14
0x00001bf5      415f           pop r15
0x00001bf7      c3             ret
0x00001bf8      bf00780000     mov edi, 0x7800
0x00001bfd      4889442418     mov qword [rsp + 0x18], rax
0x00001c02      31db           xor ebx, ebx
0x00001c04      e847350000     call sym.xmalloc
0x00001c09      bf00c00000     mov edi, 0xc000
0x00001c0e      4989c5         mov r13, rax
0x00001c11      41be00780000   mov r14d, 0x7800
0x00001c17      e834350000     call sym.xmalloc
0x00001c1c      48896c2408     mov qword [rsp + 8], rbp
0x00001c21      4889442410     mov qword [rsp + 0x10], rax
0x00001c26      31ed           xor ebp, ebp
0x00001c28      eb13           jmp 0x1c3d
0x00001c2a      660f1f440000   nop word [rax + rax]
0x00001c30      4881fdff7700.  cmp rbp, 0x77ff
0x00001c37      0f8792000000   ja 0x1ccf
0x00001c3d      498d7c2d00     lea rdi, [r13 + rbp]
0x00001c42      4c89f2         mov rdx, r14
0x00001c45      4c89e1         mov rcx, r12
0x00001c48      4829ea         sub rdx, rbp
0x00001c4b      be01000000     mov esi, 1
0x00001c50      e8dbf8ffff     call sym.imp.fread_unlocked
0x00001c55      4801c5         add rbp, rax
0x00001c58      418b0424       mov eax, dword [r12]
0x00001c5c      a830           test al, 0x30
0x00001c5e      74d0           je 0x1c30
0x00001c60      4885ed         test rbp, rbp
0x00001c63      756a           jne 0x1ccf
0x00001c65      4885db         test rbx, rbx
0x00001c68      488b6c2408     mov rbp, qword [rsp + 8]
0x00001c6d      742c           je 0x1c9b
0x00001c6f      4885ed         test rbp, rbp
0x00001c72      7427           je 0x1c9b
0x00001c74      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00001c79      488b4128       mov rax, qword [rcx + 0x28]
0x00001c7d      483b4130       cmp rax, qword [rcx + 0x30]
0x00001c81      0f8330030000   jae 0x1fb7
0x00001c87      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00001c8c      488d5001       lea rdx, [rax + 1]
0x00001c90      48895128       mov qword [rcx + 0x28], rdx
0x00001c94      c6000a         mov byte [rax], 0xa
0x00001c97      418b0424       mov eax, dword [r12]
0x00001c9b      a820           test al, 0x20                           ; "@"
0x00001c9d      0f841fffffff   je 0x1bc2
0x00001ca3      488d35154100.  lea rsi, str.read_error                 ; 0x5dbf ; "read error"
0x00001caa      ba05000000     mov edx, 5
0x00001caf      31ff           xor edi, edi
0x00001cb1      e8baf8ffff     call sym.imp.dcgettext
0x00001cb6      4889c3         mov rbx, rax
0x00001cb9      e832f8ffff     call sym.imp.__errno_location
0x00001cbe      8b30           mov esi, dword [rax]
0x00001cc0      4889da         mov rdx, rbx
0x00001cc3      bf01000000     mov edi, 1
0x00001cc8      31c0           xor eax, eax
0x00001cca      e881faffff     call sym.imp.error
0x00001ccf      488d4504       lea rax, [rbp + 4]
0x00001cd3      b905000000     mov ecx, 5
0x00001cd8      31d2           xor edx, edx
0x00001cda      4889ee         mov rsi, rbp
0x00001cdd      4c89ef         mov rdi, r13
0x00001ce0      48f7f1         div rcx
0x00001ce3      488b542410     mov rdx, qword [rsp + 0x10]
0x00001ce8      4c8d3cc50000.  lea r15, [rax*8]
0x00001cf0      4c89f9         mov rcx, r15
0x00001cf3      e8a8090000     call sym.base32_encode
0x00001cf8      48837c240800   cmp qword [rsp + 8], 0
0x00001cfe      0f84c5000000   je 0x1dc9
0x00001d04      4531d2         xor r10d, r10d
0x00001d07      4d85ff         test r15, r15
0x00001d0a      0f849b000000   je 0x1dab
0x00001d10      4c896c2428     mov qword [rsp + 0x28], r13
0x00001d15      48896c2430     mov qword [rsp + 0x30], rbp
0x00001d1a      4989dd         mov r13, rbx
0x00001d1d      4c89fd         mov rbp, r15
0x00001d20      4c89642420     mov qword [rsp + 0x20], r12
0x00001d25      4c8b7c2418     mov r15, qword [rsp + 0x18]
0x00001d2a      4c89d3         mov rbx, r10
0x00001d2d      eb22           jmp 0x1d51
0x00001d2f      90             nop
0x00001d30      498b4728       mov rax, qword [r15 + 0x28]
0x00001d34      493b4730       cmp rax, qword [r15 + 0x30]
0x00001d38      0f83d5000000   jae 0x1e13
0x00001d3e      488d5001       lea rdx, [rax + 1]
0x00001d42      49895728       mov qword [r15 + 0x28], rdx
0x00001d46      c6000a         mov byte [rax], 0xa
0x00001d49      4531ed         xor r13d, r13d
0x00001d4c      4839dd         cmp rbp, rbx
0x00001d4f      7648           jbe 0x1d99
0x00001d51      4c8b642408     mov r12, qword [rsp + 8]
0x00001d56      4889e8         mov rax, rbp
0x00001d59      4829d8         sub rax, rbx
0x00001d5c      4d29ec         sub r12, r13
0x00001d5f      4939c4         cmp r12, rax
0x00001d62      4c0f47e0       cmova r12, rax
0x00001d66      4d85e4         test r12, r12
0x00001d69      74c5           je 0x1d30
0x00001d6b      488b442410     mov rax, qword [rsp + 0x10]
0x00001d70      488b0d117320.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00001d77      4c89e2         mov rdx, r12
0x00001d7a      be01000000     mov esi, 1
0x00001d7f      488d3c18       lea rdi, [rax + rbx]
0x00001d83      e878f9ffff     call sym.imp.fwrite_unlocked
0x00001d88      4939c4         cmp r12, rax
0x00001d8b      0f87b1010000   ja 0x1f42
0x00001d91      4d01e5         add r13, r12
0x00001d94      4c01e3         add rbx, r12
0x00001d97      ebb3           jmp 0x1d4c
0x00001d99      4c89eb         mov rbx, r13
0x00001d9c      4c8b642420     mov r12, qword [rsp + 0x20]
0x00001da1      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x00001da6      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00001dab      418b0424       mov eax, dword [r12]
0x00001daf      a830           test al, 0x30
0x00001db1      0f85aefeffff   jne 0x1c65
0x00001db7      4881fd007800.  cmp rbp, 0x7800
0x00001dbe      0f8462feffff   je 0x1c26
0x00001dc4      e99cfeffff     jmp 0x1c65
0x00001dc9      488b0db87220.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00001dd0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00001dd5      4c89fa         mov rdx, r15
0x00001dd8      be01000000     mov esi, 1
0x00001ddd      e81ef9ffff     call sym.imp.fwrite_unlocked
0x00001de2      4939c7         cmp r15, rax
0x00001de5      76c4           jbe 0x1dab
0x00001de7      488d35dc3f00.  lea rsi, str.write_error                ; 0x5dca ; "write error"
0x00001dee      ba05000000     mov edx, 5
0x00001df3      31ff           xor edi, edi
0x00001df5      e876f7ffff     call sym.imp.dcgettext
0x00001dfa      4889c3         mov rbx, rax
0x00001dfd      e8eef6ffff     call sym.imp.__errno_location
0x00001e02      8b30           mov esi, dword [rax]
0x00001e04      4889da         mov rdx, rbx
0x00001e07      bf01000000     mov edi, 1
0x00001e0c      31c0           xor eax, eax
0x00001e0e      e83df9ffff     call sym.imp.error
0x00001e13      be0a000000     mov esi, 0xa
0x00001e18      4c89ff         mov rdi, r15
0x00001e1b      e8c0f7ffff     call sym.imp.__overflow
0x00001e20      83c001         add eax, 1
0x00001e23      0f8520ffffff   jne 0x1d49
0x00001e29      488d359a3f00.  lea rsi, str.write_error                ; 0x5dca ; "write error"
0x00001e30      ba05000000     mov edx, 5
0x00001e35      31ff           xor edi, edi
0x00001e37      e834f7ffff     call sym.imp.dcgettext
0x00001e3c      4889c3         mov rbx, rax
0x00001e3f      e8acf6ffff     call sym.imp.__errno_location
0x00001e44      8b30           mov esi, dword [rax]
0x00001e46      4889da         mov rdx, rbx
0x00001e49      bf01000000     mov edi, 1
0x00001e4e      31c0           xor eax, eax
0x00001e50      e8fbf8ffff     call sym.imp.error
0x00001e55      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00001e5a      488d35494500.  lea rsi, [0x000063aa]                   ; "-"
0x00001e61      e82af8ffff     call sym.imp.strcmp
0x00001e66      89c5           mov ebp, eax
0x00001e68      e883f6ffff     call sym.imp.__errno_location
0x00001e6d      85ed           test ebp, ebp
0x00001e6f      4889c3         mov rbx, rax
0x00001e72      7524           jne 0x1e98
0x00001e74      488d35693f00.  lea rsi, str.closing_standard_input     ; 0x5de4 ; "closing standard input"
0x00001e7b      ba05000000     mov edx, 5
0x00001e80      31ff           xor edi, edi
0x00001e82      e8e9f6ffff     call sym.imp.dcgettext
0x00001e87      8b33           mov esi, dword [rbx]
0x00001e89      4889c2         mov rdx, rax
0x00001e8c      bf01000000     mov edi, 1
0x00001e91      31c0           xor eax, eax
0x00001e93      e8b8f8ffff     call sym.imp.error
0x00001e98      488b542448     mov rdx, qword [rsp + 0x48]
0x00001e9d      be03000000     mov esi, 3
0x00001ea2      31ff           xor edi, edi
0x00001ea4      e8972a0000     call sym.quotearg_n_style_colon
0x00001ea9      8b33           mov esi, dword [rbx]
0x00001eab      488d15b24400.  lea rdx, [0x00006364]                   ; "%s"
0x00001eb2      4889c1         mov rcx, rax
0x00001eb5      bf01000000     mov edi, 1
0x00001eba      31c0           xor eax, eax
0x00001ebc      e88ff8ffff     call sym.imp.error
0x00001ec1      488d350e3f00.  lea rsi, str.invalid_input              ; 0x5dd6 ; "invalid input"
0x00001ec8      ba05000000     mov edx, 5
0x00001ecd      31ff           xor edi, edi
0x00001ecf      e89cf6ffff     call sym.imp.dcgettext
0x00001ed4      31f6           xor esi, esi
0x00001ed6      4889c2         mov rdx, rax
0x00001ed9      bf01000000     mov edi, 1
0x00001ede      31c0           xor eax, eax
0x00001ee0      e86bf8ffff     call sym.imp.error
0x00001ee5      488d35de3e00.  lea rsi, str.write_error                ; 0x5dca ; "write error"
0x00001eec      ba05000000     mov edx, 5
0x00001ef1      31ff           xor edi, edi
0x00001ef3      e878f6ffff     call sym.imp.dcgettext
0x00001ef8      4889c3         mov rbx, rax
0x00001efb      e8f0f5ffff     call sym.imp.__errno_location
0x00001f00      8b30           mov esi, dword [rax]
0x00001f02      4889da         mov rdx, rbx
0x00001f05      bf01000000     mov edi, 1
0x00001f0a      31c0           xor eax, eax
0x00001f0c      e83ff8ffff     call sym.imp.error
0x00001f11      488d35a73e00.  lea rsi, str.read_error                 ; 0x5dbf ; "read error"
0x00001f18      ba05000000     mov edx, 5
0x00001f1d      31ff           xor edi, edi
0x00001f1f      e84cf6ffff     call sym.imp.dcgettext
0x00001f24      4889c3         mov rbx, rax
0x00001f27      e8c4f5ffff     call sym.imp.__errno_location
0x00001f2c      8b30           mov esi, dword [rax]
0x00001f2e      4889da         mov rdx, rbx
0x00001f31      bf01000000     mov edi, 1
0x00001f36      31c0           xor eax, eax
0x00001f38      e813f8ffff     call sym.imp.error
0x00001f3d      e85ef6ffff     call sym.imp.__stack_chk_fail
0x00001f42      488d35813e00.  lea rsi, str.write_error                ; 0x5dca ; "write error"
0x00001f49      ba05000000     mov edx, 5
0x00001f4e      31ff           xor edi, edi
0x00001f50      e81bf6ffff     call sym.imp.dcgettext
0x00001f55      4889c3         mov rbx, rax
0x00001f58      e893f5ffff     call sym.imp.__errno_location
0x00001f5d      8b30           mov esi, dword [rax]
0x00001f5f      4889da         mov rdx, rbx
0x00001f62      bf01000000     mov edi, 1
0x00001f67      31c0           xor eax, eax
0x00001f69      e8e2f7ffff     call sym.imp.error
0x00001f6e      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001f73      7538           jne 0x1fad
0x00001f75      31ff           xor edi, edi
0x00001f77      e894010000     call sym.usage
0x00001f7c      498b7cc408     mov rdi, qword [r12 + rax*8 + 8]
0x00001f81      e88a2b0000     call sym.quote
0x00001f86      488d351e3e00.  lea rsi, str.extra_operand__s           ; 0x5dab ; "extra operand %s"
0x00001f8d      4889c3         mov rbx, rax
0x00001f90      ba05000000     mov edx, 5
0x00001f95      31ff           xor edi, edi
0x00001f97      e8d4f5ffff     call sym.imp.dcgettext
0x00001f9c      4889d9         mov rcx, rbx
0x00001f9f      4889c2         mov rdx, rax
0x00001fa2      31f6           xor esi, esi
0x00001fa4      31ff           xor edi, edi
0x00001fa6      31c0           xor eax, eax
0x00001fa8      e8a3f7ffff     call sym.imp.error
0x00001fad      bf01000000     mov edi, 1
0x00001fb2      e859010000     call sym.usage
0x00001fb7      be0a000000     mov esi, 0xa
0x00001fbc      4889cf         mov rdi, rcx
0x00001fbf      e81cf6ffff     call sym.imp.__overflow
0x00001fc4      83c001         add eax, 1
0x00001fc7      0f85cafcffff   jne 0x1c97
0x00001fcd      488d35f63d00.  lea rsi, str.write_error                ; 0x5dca ; "write error"
0x00001fd4      ba05000000     mov edx, 5
0x00001fd9      31ff           xor edi, edi
0x00001fdb      e890f5ffff     call sym.imp.dcgettext
0x00001fe0      4889c3         mov rbx, rax
0x00001fe3      e808f5ffff     call sym.imp.__errno_location
0x00001fe8      8b30           mov esi, dword [rax]
0x00001fea      4889da         mov rdx, rbx
0x00001fed      bf01000000     mov edi, 1
0x00001ff2      31c0           xor eax, eax
0x00001ff4      e857f7ffff     call sym.imp.error
0x00001ff9      0f1f80000000.  nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002000      31ed           xor ebp, ebp
0x00002002      4989d1         mov r9, rdx
0x00002005      5e             pop rsi
0x00002006      4889e2         mov rdx, rsp
0x00002009      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000200d      50             push rax
0x0000200e      54             push rsp
0x0000200f      4c8d055a3c00.  lea r8, sym.__libc_csu_fini             ; 0x5c70
0x00002016      488d0de33b00.  lea rcx, sym.__libc_csu_init            ; 0x5c00 ; "AWAVI\x89\xd7AUATL\x8d%\xfe. "
0x0000201d      488d3ddcf7ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1800 ; "AWAVAUATA\x89\xfdUSI\x89\xf4\xbdL"
0x00002024      ff15ae6f2000   call qword [reloc.__libc_start_main]    ; [0x208fd8:8]=0
0x0000202a      f4             hlt
0x0000202b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002030      488d3d497020.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x209080
0x00002037      55             push rbp
0x00002038      488d05417020.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x209080
0x0000203f      4839f8         cmp rax, rdi
0x00002042      4889e5         mov rbp, rsp
0x00002045      7419           je 0x2060
0x00002047      488b05826f20.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x208fd0:8]=0
0x0000204e      4885c0         test rax, rax
0x00002051      740d           je 0x2060
0x00002053      5d             pop rbp
0x00002054      ffe0           jmp rax
0x00002056      662e0f1f8400.  nop word cs:[rax + rax]
0x00002060      5d             pop rbp
0x00002061      c3             ret
0x00002062      0f1f4000       nop dword [rax]
0x00002066      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002070      488d3d097020.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x209080
0x00002077      488d35027020.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x209080
0x0000207e      55             push rbp
0x0000207f      4829fe         sub rsi, rdi
0x00002082      4889e5         mov rbp, rsp
0x00002085      48c1fe03       sar rsi, 3
0x00002089      4889f0         mov rax, rsi
0x0000208c      48c1e83f       shr rax, 0x3f
0x00002090      4801c6         add rsi, rax
0x00002093      48d1fe         sar rsi, 1
0x00002096      7418           je 0x20b0
0x00002098      488b05496f20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x208fe8:8]=0
0x0000209f      4885c0         test rax, rax
0x000020a2      740c           je 0x20b0
0x000020a4      5d             pop rbp
0x000020a5      ffe0           jmp rax
0x000020a7      660f1f840000.  nop word [rax + rax]
0x000020b0      5d             pop rbp
0x000020b1      c3             ret
0x000020b2      0f1f4000       nop dword [rax]
0x000020b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x000020c0      803d01702000.  cmp byte [obj.completed.7697], 0        ; [0x2090c8:1]=0
0x000020c7      752f           jne 0x20f8
0x000020c9      48833d1f6f20.  cmp qword [reloc.__cxa_finalize], 0     ; [0x208ff0:8]=0
0x000020d1      55             push rbp
0x000020d2      4889e5         mov rbp, rsp
0x000020d5      740c           je 0x20e3
0x000020d7      488b3d2a6f20.  mov rdi, qword [obj.__dso_handle]       ; [0x209008:8]=0x209008 obj.__dso_handle
0x000020de      e80df7ffff     call sym..plt.got
0x000020e3      e848ffffff     call sym.deregister_tm_clones
0x000020e8      c605d96f2000.  mov byte [obj.completed.7697], 1        ; [0x2090c8:1]=0
0x000020ef      5d             pop rbp
0x000020f0      c3             ret
0x000020f1      0f1f80000000.  nop dword [rax]
0x000020f8      f3c3           ret
0x000020fa      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002100      55             push rbp
0x00002101      4889e5         mov rbp, rsp
0x00002104      5d             pop rbp
0x00002105      e966ffffff     jmp sym.register_tm_clones
0x0000210a      660f1f440000   nop word [rax + rax]
;-- usage:
0x00002110      4155           push r13
0x00002112      4154           push r12
0x00002114      ba05000000     mov edx, 5
0x00002119      55             push rbp
0x0000211a      53             push rbx
0x0000211b      89fd           mov ebp, edi
0x0000211d      4881ec880000.  sub rsp, 0x88
0x00002124      488b1db56f20.  mov rbx, qword [obj.program_name]       ; [0x2090e0:8]=0
0x0000212b      64488b042528.  mov rax, qword fs:[0x28]
0x00002134      4889442478     mov qword [rsp + 0x78], rax
0x00002139      31c0           xor eax, eax
0x0000213b      85ff           test edi, edi
0x0000213d      742e           je 0x216d
0x0000213f      488d35e23c00.  lea rsi, str.Try___s___help__for_more_information. ; 0x5e28 ; "Try '%s --help' for more information.\n"
0x00002146      31ff           xor edi, edi
0x00002148      e823f4ffff     call sym.imp.dcgettext
0x0000214d      488b3d6c6f20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x00002154      4889c2         mov rdx, rax
0x00002157      4889d9         mov rcx, rbx
0x0000215a      be01000000     mov esi, 1
0x0000215f      31c0           xor eax, eax
0x00002161      e84af6ffff     call sym.imp.__fprintf_chk
0x00002166      89ef           mov edi, ebp
0x00002168      e823f6ffff     call sym.imp.exit
0x0000216d      488d35373b00.  lea rsi, str.Usage:__s__OPTION_...__FILE ; 0x5cab ; "Usage: %s [OPTION]... [FILE]\n"
0x00002174      31ff           xor edi, edi
0x00002176      e8f5f3ffff     call sym.imp.dcgettext
0x0000217b      4889da         mov rdx, rbx
0x0000217e      4889c6         mov rsi, rax
0x00002181      bf01000000     mov edi, 1
0x00002186      31c0           xor eax, eax
0x00002188      e8a3f5ffff     call sym.imp.__printf_chk
0x0000218d      488d35bc3c00.  lea rsi, str.Base_d_encode_or_decode_FILE__or_standard_input__to_standard_output. ; 0x5e50 ; "Base%d encode or decode FILE, or standard input, to standard output.\n"
0x00002194      ba05000000     mov edx, 5
0x00002199      31ff           xor edi, edi
0x0000219b      e8d0f3ffff     call sym.imp.dcgettext
0x000021a0      ba20000000     mov edx, 0x20                           ; "@"
0x000021a5      4889c6         mov rsi, rax
0x000021a8      bf01000000     mov edi, 1
0x000021ad      31c0           xor eax, eax
0x000021af      e87cf5ffff     call sym.imp.__printf_chk
0x000021b4      488b1dcd6e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x000021bb      488d35d63c00.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x5e98 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x000021c2      ba05000000     mov edx, 5
0x000021c7      31ff           xor edi, edi
0x000021c9      e8a2f3ffff     call sym.imp.dcgettext
0x000021ce      4889de         mov rsi, rbx
0x000021d1      4889c7         mov rdi, rax
0x000021d4      e897f4ffff     call sym.imp.fputs_unlocked
0x000021d9      488b1da86e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x000021e0      488d35e93c00.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x5ed0 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x000021e7      ba05000000     mov edx, 5
0x000021ec      31ff           xor edi, edi
0x000021ee      e87df3ffff     call sym.imp.dcgettext
0x000021f3      4889de         mov rsi, rbx
0x000021f6      4889c7         mov rdi, rax
0x000021f9      e872f4ffff     call sym.imp.fputs_unlocked
0x000021fe      488b1d836e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00002205      488d35143d00.  lea rsi, str.d____decode__________decode_data_____i____ignore_garbage__when_decoding__ignore_non_alphabet_characters_____w____wrap_COLS_______wrap_encoded_lines_after_COLS_character__default_76_.____________________________Use_0_to_disable_line_wrapping ; 0x5f20 ; "  -d, --decode          decode data\n  -i, --ignore-garbage  when decoding, ignore non-alphabet characters\n  -w, --wrap=COLS       wrap encoded lines after COLS character (default 76).\n                          Use 0 to disable line wrapping\n\n"
0x0000220c      ba05000000     mov edx, 5
0x00002211      31ff           xor edi, edi
0x00002213      e858f3ffff     call sym.imp.dcgettext
0x00002218      4889de         mov rsi, rbx
0x0000221b      4889c7         mov rdi, rax
0x0000221e      e84df4ffff     call sym.imp.fputs_unlocked
0x00002223      488b1d5e6e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x0000222a      488d35e73d00.  lea rsi, str.help_____display_this_help_and_exit ; 0x6018 ; "      --help     display this help and exit\n"
0x00002231      ba05000000     mov edx, 5
0x00002236      31ff           xor edi, edi
0x00002238      e833f3ffff     call sym.imp.dcgettext
0x0000223d      4889de         mov rsi, rbx
0x00002240      4889c7         mov rdi, rax
0x00002243      e828f4ffff     call sym.imp.fputs_unlocked
0x00002248      488b1d396e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x0000224f      488d35f23d00.  lea rsi, str.version__output_version_information_and_exit ; 0x6048 ; "      --version  output version information and exit\n"
0x00002256      ba05000000     mov edx, 5
0x0000225b      31ff           xor edi, edi
0x0000225d      e80ef3ffff     call sym.imp.dcgettext
0x00002262      4889de         mov rsi, rbx
0x00002265      4889c7         mov rdi, rax
0x00002268      488d1d353a00.  lea rbx, str.base32                     ; 0x5ca4 ; "base32"
0x0000226f      e8fcf3ffff     call sym.imp.fputs_unlocked
0x00002274      488d35053e00.  lea rsi, str.The_data_are_encoded_as_described_for_the__s_alphabet_in_RFC_4648.__When_decoding__the_input_may_contain_newlines_in_addition_to_the_bytes_of__the_formal__s_alphabet.__Use___ignore_garbage_to_attempt_to_recover__from_any_other_non_alphabet_bytes_in_the_encoded_stream. ; 0x6080 ; "\nThe data are encoded as described for the %s alphabet in RFC 4648.\nWhen decoding, the input may contain newlines in addition to the bytes of\nthe formal %s alphabet.  Use --ignore-garbage to attempt to recover\nfrom any other non-alphabet bytes in the encoded stream.\n"
0x0000227b      ba05000000     mov edx, 5
0x00002280      31ff           xor edi, edi
0x00002282      e8e9f2ffff     call sym.imp.dcgettext
0x00002287      488d0d163a00.  lea rcx, str.base32                     ; 0x5ca4 ; "base32"
0x0000228e      4889c6         mov rsi, rax
0x00002291      bf01000000     mov edi, 1
0x00002296      31c0           xor eax, eax
0x00002298      4889ca         mov rdx, rcx
0x0000229b      e890f4ffff     call sym.imp.__printf_chk
0x000022a0      488d05223a00.  lea rax, [0x00005cc9]                   ; "["
0x000022a7      488d0d5c3a00.  lea rcx, str.sha256sum                  ; 0x5d0a ; "sha256sum"
0x000022ae      48c744246000.  mov qword [rsp + 0x60], 0
0x000022b7      48c744246800.  mov qword [rsp + 0x68], 0
0x000022c0      4889e2         mov rdx, rsp
0x000022c3      48890424       mov qword [rsp], rax
0x000022c7      488d05fd3900.  lea rax, str.test_invocation            ; 0x5ccb ; "test invocation"
0x000022ce      48894c2430     mov qword [rsp + 0x30], rcx
0x000022d3      488d0d3a3a00.  lea rcx, str.sha384sum                  ; 0x5d14 ; "sha384sum"
0x000022da      4889442408     mov qword [rsp + 8], rax
0x000022df      488d055d3a00.  lea rax, [0x00005d43]                   ; "coreutils"
0x000022e6      48894c2440     mov qword [rsp + 0x40], rcx
0x000022eb      488d0d2c3a00.  lea rcx, str.sha512sum                  ; 0x5d1e ; "sha512sum"
0x000022f2      4889442410     mov qword [rsp + 0x10], rax
0x000022f7      488d05dd3900.  lea rax, str.Multi_call_invocation      ; 0x5cdb ; "Multi-call invocation"
0x000022fe      48894c2450     mov qword [rsp + 0x50], rcx
0x00002303      4889442418     mov qword [rsp + 0x18], rax
0x00002308      488d05e23900.  lea rax, str.sha224sum                  ; 0x5cf1 ; "sha224sum"
0x0000230f      4889442420     mov qword [rsp + 0x20], rax
0x00002314      488d05e03900.  lea rax, str.sha2_utilities             ; 0x5cfb ; "sha2 utilities"
0x0000231b      4889442428     mov qword [rsp + 0x28], rax
0x00002320      4889442438     mov qword [rsp + 0x38], rax
0x00002325      4889442448     mov qword [rsp + 0x48], rax
0x0000232a      4889442458     mov qword [rsp + 0x58], rax
0x0000232f      90             nop
0x00002330      4883c210       add rdx, 0x10
0x00002334      488b3a         mov rdi, qword [rdx]
0x00002337      4885ff         test rdi, rdi
0x0000233a      7413           je 0x234f
0x0000233c      b907000000     mov ecx, 7
0x00002341      4889de         mov rsi, rbx
0x00002344      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002346      0f97c0         seta al
0x00002349      1c00           sbb al, 0
0x0000234b      84c0           test al, al
0x0000234d      75e1           jne 0x2330
0x0000234f      4c8b6208       mov r12, qword [rdx + 8]
0x00002353      31ff           xor edi, edi
0x00002355      ba05000000     mov edx, 5
0x0000235a      488d35c73900.  lea rsi, str.s_online_help:___s         ; 0x5d28 ; "\n%s online help: <%s>\n"
0x00002361      4d85e4         test r12, r12
0x00002364      0f84c1000000   je 0x242b
0x0000236a      e801f2ffff     call sym.imp.dcgettext
0x0000236f      488d0d1a3e00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6190 ; "https://www.gnu.org/software/coreutils/"
0x00002376      488d15c23900.  lea rdx, str.GNU_coreutils              ; 0x5d3f ; "GNU coreutils"
0x0000237d      4889c6         mov rsi, rax
0x00002380      bf01000000     mov edi, 1
0x00002385      31c0           xor eax, eax
0x00002387      e8a4f3ffff     call sym.imp.__printf_chk
0x0000238c      31f6           xor esi, esi
0x0000238e      bf05000000     mov edi, 5
0x00002393      e888f3ffff     call sym.imp.setlocale
0x00002398      4885c0         test rax, rax
0x0000239b      741c           je 0x23b9
0x0000239d      488d35a93900.  lea rsi, [0x00005d4d]                   ; "en_"
0x000023a4      ba03000000     mov edx, 3
0x000023a9      4889c7         mov rdi, rax
0x000023ac      e84ff1ffff     call sym.imp.strncmp
0x000023b1      85c0           test eax, eax
0x000023b3      0f8507010000   jne 0x24c0
0x000023b9      488d35913900.  lea rsi, str.Full_documentation___s_s   ; 0x5d51 ; "Full documentation <%s%s>\n"
0x000023c0      31ff           xor edi, edi
0x000023c2      ba05000000     mov edx, 5
0x000023c7      e8a4f1ffff     call sym.imp.dcgettext
0x000023cc      488d0dd13800.  lea rcx, str.base32                     ; 0x5ca4 ; "base32"
0x000023d3      488d15b63d00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6190 ; "https://www.gnu.org/software/coreutils/"
0x000023da      4889c6         mov rsi, rax
0x000023dd      bf01000000     mov edi, 1
0x000023e2      31c0           xor eax, eax
0x000023e4      e847f3ffff     call sym.imp.__printf_chk
0x000023e9      4939dc         cmp r12, rbx
0x000023ec      488d0df23800.  lea rcx, [0x00005ce5]                   ; " invocation"
0x000023f3      488d1de74400.  lea rbx, [0x000068e1]
0x000023fa      480f44d9       cmove rbx, rcx
0x000023fe      488d35fb3d00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x6200 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00002405      31ff           xor edi, edi
0x00002407      ba05000000     mov edx, 5
0x0000240c      e85ff1ffff     call sym.imp.dcgettext
0x00002411      4889d9         mov rcx, rbx
0x00002414      4889c6         mov rsi, rax
0x00002417      4c89e2         mov rdx, r12
0x0000241a      bf01000000     mov edi, 1
0x0000241f      31c0           xor eax, eax
0x00002421      e80af3ffff     call sym.imp.__printf_chk
0x00002426      e93bfdffff     jmp 0x2166
0x0000242b      e840f1ffff     call sym.imp.dcgettext
0x00002430      488d0d593d00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6190 ; "https://www.gnu.org/software/coreutils/"
0x00002437      488d15013900.  lea rdx, str.GNU_coreutils              ; 0x5d3f ; "GNU coreutils"
0x0000243e      4889c6         mov rsi, rax
0x00002441      bf01000000     mov edi, 1
0x00002446      31c0           xor eax, eax
0x00002448      e8e3f2ffff     call sym.imp.__printf_chk
0x0000244d      31f6           xor esi, esi
0x0000244f      bf05000000     mov edi, 5
0x00002454      e8c7f2ffff     call sym.imp.setlocale
0x00002459      4885c0         test rax, rax
0x0000245c      7418           je 0x2476
0x0000245e      488d35e83800.  lea rsi, [0x00005d4d]                   ; "en_"
0x00002465      ba03000000     mov edx, 3
0x0000246a      4889c7         mov rdi, rax
0x0000246d      e88ef0ffff     call sym.imp.strncmp
0x00002472      85c0           test eax, eax
0x00002474      7543           jne 0x24b9
0x00002476      488d35d43800.  lea rsi, str.Full_documentation___s_s   ; 0x5d51 ; "Full documentation <%s%s>\n"
0x0000247d      ba05000000     mov edx, 5
0x00002482      31ff           xor edi, edi
0x00002484      4c8d25193800.  lea r12, str.base32                     ; 0x5ca4 ; "base32"
0x0000248b      488d1d533800.  lea rbx, [0x00005ce5]                   ; " invocation"
0x00002492      e8d9f0ffff     call sym.imp.dcgettext
0x00002497      488d0d063800.  lea rcx, str.base32                     ; 0x5ca4 ; "base32"
0x0000249e      488d15eb3c00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6190 ; "https://www.gnu.org/software/coreutils/"
0x000024a5      4889c6         mov rsi, rax
0x000024a8      bf01000000     mov edi, 1
0x000024ad      31c0           xor eax, eax
0x000024af      e87cf2ffff     call sym.imp.__printf_chk
0x000024b4      e945ffffff     jmp 0x23fe
0x000024b9      4c8d25e43700.  lea r12, str.base32                     ; 0x5ca4 ; "base32"
0x000024c0      4c8b2dc16b20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x000024c7      488d35ea3c00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x61b8 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000024ce      31ff           xor edi, edi
0x000024d0      ba05000000     mov edx, 5
0x000024d5      e896f0ffff     call sym.imp.dcgettext
0x000024da      4c89ee         mov rsi, r13
0x000024dd      4889c7         mov rdi, rax
0x000024e0      e88bf1ffff     call sym.imp.fputs_unlocked
0x000024e5      e9cffeffff     jmp 0x23b9
0x000024ea      660f1f440000   nop word [rax + rax]
;-- decode_8:
0x000024f0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/base32.c:362
0x000024f2      4883fe07       cmp rsi, 7                              ; ../coreutils-8.31/lib/base32.c:364
0x000024f6      0f866c010000   jbe 0x2668
0x000024fc      440fb607       movzx r8d, byte [rdi]                   ; ../coreutils-8.31/lib/base32.c:288
0x00002500      488d35593d00.  lea rsi, obj.b32                        ; ../coreutils-8.31/lib/base32.c:239 ; 0x6260
0x00002507      460fb60406     movzx r8d, byte [rsi + r8]
0x0000250c      4584c0         test r8b, r8b
0x0000250f      0f8853010000   js 0x2668
0x00002515      440fb64f01     movzx r9d, byte [rdi + 1]               ; ../coreutils-8.31/lib/base32.c:120
0x0000251a      460fb60c0e     movzx r9d, byte [rsi + r9]
0x0000251f      4584c9         test r9b, r9b
0x00002522      0f8840010000   js 0x2668
0x00002528      48833900       cmp qword [rcx], 0                      ; ../coreutils-8.31/lib/base32.c:122
0x0000252c      488b02         mov rax, qword [rdx]                    ; ../coreutils-8.31/lib/base32.c:125
0x0000252f      741a           je 0x254b
0x00002531      4589ca         mov r10d, r9d
0x00002534      41c1e003       shl r8d, 3
0x00002538      4883c001       add rax, 1
0x0000253c      41c0fa02       sar r10b, 2
0x00002540      4509d0         or r8d, r10d
0x00002543      448840ff       mov byte [rax - 1], r8b
0x00002547      48832901       sub qword [rcx], 1
0x0000254b      440fb64702     movzx r8d, byte [rdi + 2]
0x00002550      4180f83d       cmp r8b, 0x3d                           ; ../coreutils-8.31/lib/base32.c:-122
0x00002554      0f8416010000   je 0x2670
0x0000255a      460fb60406     movzx r8d, byte [rsi + r8]
0x0000255f      4584c0         test r8b, r8b
0x00002562      0f880e010000   js 0x2676
0x00002568      440fb65703     movzx r10d, byte [rdi + 3]
0x0000256d      460fb61416     movzx r10d, byte [rsi + r10]
0x00002572      4584d2         test r10b, r10b
0x00002575      0f88fb000000   js 0x2676
0x0000257b      48833900       cmp qword [rcx], 0
0x0000257f      7420           je 0x25a1
0x00002581      4501c0         add r8d, r8d
0x00002584      41c1e106       shl r9d, 6
0x00002588      4883c001       add rax, 1
0x0000258c      4509c1         or r9d, r8d
0x0000258f      4589d0         mov r8d, r10d                           ; ../coreutils-8.31/lib/base32.c:-234
0x00002592      41c0f804       sar r8b, 4
0x00002596      4509c1         or r9d, r8d
0x00002599      448848ff       mov byte [rax - 1], r9b
0x0000259d      48832901       sub qword [rcx], 1
0x000025a1      440fb64704     movzx r8d, byte [rdi + 4]
0x000025a6      4180f83d       cmp r8b, 0x3d
0x000025aa      0f84d6000000   je 0x2686
0x000025b0      460fb60406     movzx r8d, byte [rsi + r8]              ; ../coreutils-8.31/lib/base32.c:-356
0x000025b5      4584c0         test r8b, r8b
0x000025b8      0f88b8000000   js 0x2676
0x000025be      48833900       cmp qword [rcx], 0
0x000025c2      7419           je 0x25dd
0x000025c4      4589c1         mov r9d, r8d
0x000025c7      41c1e204       shl r10d, 4
0x000025cb      4883c001       add rax, 1
0x000025cf      41d0f9         sar r9b, 1
0x000025d2      4509ca         or r10d, r9d
0x000025d5      448850ff       mov byte [rax - 1], r10b
0x000025d9      48832901       sub qword [rcx], 1
0x000025dd      440fb64f05     movzx r9d, byte [rdi + 5]
0x000025e2      4180f93d       cmp r9b, 0x3d                           ; ../coreutils-8.31/lib/base32.c:-216
0x000025e6      0f84a0000000   je 0x268c                               ; ../coreutils-8.31/lib/base32.c:-213
0x000025ec      460fb60c0e     movzx r9d, byte [rsi + r9]
0x000025f1      4584c9         test r9b, r9b
0x000025f4      0f887c000000   js 0x2676                               ; ../coreutils-8.31/lib/base32.c:-211
0x000025fa      440fb65706     movzx r10d, byte [rdi + 6]
0x000025ff      460fb61416     movzx r10d, byte [rsi + r10]            ; ../coreutils-8.31/lib/base32.c:-206
0x00002604      4584d2         test r10b, r10b
0x00002607      786d           js 0x2676                               ; ../coreutils-8.31/lib/base32.c:-205
0x00002609      48833900       cmp qword [rcx], 0
0x0000260d      7421           je 0x2630
0x0000260f      41c1e102       shl r9d, 2
0x00002613      41c1e007       shl r8d, 7
0x00002617      4883c001       add rax, 1
0x0000261b      4509c8         or r8d, r9d
0x0000261e      4589d1         mov r9d, r10d                           ; ../coreutils-8.31/lib/base32.c:-195
0x00002621      41c0f903       sar r9b, 3
0x00002625      4509c8         or r8d, r9d
0x00002628      448840ff       mov byte [rax - 1], r8b
0x0000262c      48832901       sub qword [rcx], 1                      ; ../coreutils-8.31/lib/base32.c:-210
0x00002630      0fb67f07       movzx edi, byte [rdi + 7]
0x00002634      4080ff3d       cmp dil, 0x3d
0x00002638      7426           je 0x2660
0x0000263a      0fb6343e       movzx esi, byte [rsi + rdi]
0x0000263e      4084f6         test sil, sil
0x00002641      7833           js 0x2676
0x00002643      48833900       cmp qword [rcx], 0
0x00002647      7417           je 0x2660
0x00002649      41c1e205       shl r10d, 5
0x0000264d      4883c001       add rax, 1
0x00002651      4109f2         or r10d, esi
0x00002654      448850ff       mov byte [rax - 1], r10b
0x00002658      48832901       sub qword [rcx], 1
0x0000265c      0f1f4000       nop dword [rax]
0x00002660      488902         mov qword [rdx], rax
0x00002663      b801000000     mov eax, 1
0x00002668      f3c3           ret
0x0000266a      660f1f440000   nop word [rax + rax]
0x00002670      807f033d       cmp byte [rdi + 3], 0x3d
0x00002674      740a           je 0x2680
0x00002676      488902         mov qword [rdx], rax
0x00002679      31c0           xor eax, eax
0x0000267b      c3             ret
0x0000267c      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/base32.c:-568
0x00002680      807f043d       cmp byte [rdi + 4], 0x3d
0x00002684      75f0           jne 0x2676                              ; ../coreutils-8.31/lib/base32.c:-565
0x00002686      807f053d       cmp byte [rdi + 5], 0x3d
0x0000268a      75ea           jne 0x2676                              ; ../coreutils-8.31/lib/base32.c:-561
0x0000268c      807f063d       cmp byte [rdi + 6], 0x3d
0x00002690      75e4           jne 0x2676
0x00002692      807f073d       cmp byte [rdi + 7], 0x3d                ; ../coreutils-8.31/lib/base32.c:-559
0x00002696      75de           jne 0x2676                              ; ../coreutils-8.31/lib/base32.c:-563
0x00002698      ebc6           jmp 0x2660
0x0000269a      660f1f440000   nop word [rax + rax]
;-- base32_encode:
0x000026a0      4c8d05993b00.  lea r8, obj.b32str.3066                 ; 0x6240 ; "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x1a\x1b\x1c\x1d\x1e\x1f\xff\xff\xff\xff\xff\xff\xff\xff\xff"
0x000026a7      e91f010000     jmp 0x27cb
0x000026ac      0f1f4000       nop dword [rax]
0x000026b0      440fb64f01     movzx r9d, byte [rdi + 1]
0x000026b5      4589ca         mov r10d, r9d
0x000026b8      41c0ea06       shr r10b, 6
0x000026bc      4401d0         add eax, r10d
0x000026bf      83e01f         and eax, 0x1f
0x000026c2      4883f902       cmp rcx, 2
0x000026c6      410fb60400     movzx eax, byte [r8 + rax]
0x000026cb      884201         mov byte [rdx + 1], al
0x000026ce      0f84a1010000   je 0x2875
0x000026d4      4489c8         mov eax, r9d
0x000026d7      d0e8           shr al, 1                               ; ../coreutils-8.31/lib/base32.c:-546
0x000026d9      83e01f         and eax, 0x1f
0x000026dc      4883f903       cmp rcx, 3
0x000026e0      410fb60400     movzx eax, byte [r8 + rax]
0x000026e5      884202         mov byte [rdx + 2], al                  ; ../coreutils-8.31/lib/base32.c:-587
0x000026e8      0f8487010000   je 0x2875
0x000026ee      41c1e104       shl r9d, 4
0x000026f2      4883fe02       cmp rsi, 2
0x000026f6      0f8464010000   je 0x2860
0x000026fc      0fb64702       movzx eax, byte [rdi + 2]
0x00002700      4189c2         mov r10d, eax
0x00002703      41c0ea04       shr r10b, 4
0x00002707      4501d1         add r9d, r10d
0x0000270a      4183e11f       and r9d, 0x1f                           ; ../coreutils-8.31/lib/base32.c:-539
0x0000270e      4883f904       cmp rcx, 4
0x00002712      470fb60c08     movzx r9d, byte [r8 + r9]
0x00002717      44884a03       mov byte [rdx + 3], r9b
0x0000271b      0f8454010000   je 0x2875
0x00002721      4883fe03       cmp rsi, 3
0x00002725      448d0c00       lea r9d, [rax + rax]
0x00002729      0f8451010000   je 0x2880
0x0000272f      0fb64703       movzx eax, byte [rdi + 3]
0x00002733      4189c2         mov r10d, eax
0x00002736      41c0ea07       shr r10b, 7
0x0000273a      4501d1         add r9d, r10d                           ; ../coreutils-8.31/lib/base32.c:-532
0x0000273d      4183e11f       and r9d, 0x1f
0x00002741      4883f905       cmp rcx, 5
0x00002745      470fb60c08     movzx r9d, byte [r8 + r9]
0x0000274a      44884a04       mov byte [rdx + 4], r9b
0x0000274e      0f8421010000   je 0x2875
0x00002754      4189c1         mov r9d, eax
0x00002757      41c0e902       shr r9b, 2
0x0000275b      4183e11f       and r9d, 0x1f
0x0000275f      4883f906       cmp rcx, 6
0x00002763      470fb60c08     movzx r9d, byte [r8 + r9]
0x00002768      44884a05       mov byte [rdx + 5], r9b
0x0000276c      0f8403010000   je 0x2875
0x00002772      c1e003         shl eax, 3
0x00002775      4883fe04       cmp rsi, 4                              ; ../coreutils-8.31/lib/base32.c:-521
0x00002779      0f8419010000   je 0x2898
0x0000277f      440fb64f04     movzx r9d, byte [rdi + 4]
0x00002784      4589ca         mov r10d, r9d
0x00002787      41c0ea05       shr r10b, 5
0x0000278b      4401d0         add eax, r10d
0x0000278e      83e01f         and eax, 0x1f
0x00002791      4883f907       cmp rcx, 7
0x00002795      410fb60400     movzx eax, byte [r8 + rax]
0x0000279a      884206         mov byte [rdx + 6], al
0x0000279d      0f84d2000000   je 0x2875
0x000027a3      4183e11f       and r9d, 0x1f
0x000027a7      4883f908       cmp rcx, 8
0x000027ab      430fb60408     movzx eax, byte [r8 + r9]
0x000027b0      884207         mov byte [rdx + 7], al
0x000027b3      0f84bc000000   je 0x2875
0x000027b9      4883ee05       sub rsi, 5
0x000027bd      7404           je 0x27c3
0x000027bf      4883c705       add rdi, 5                              ; ../coreutils-8.31/lib/base32.c:-565
0x000027c3      4883c208       add rdx, 8                              ; ../coreutils-8.31/lib/base32.c:-568
0x000027c7      4883e908       sub rcx, 8
0x000027cb      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/base32.c:-565
0x000027ce      0f84dc000000   je 0x28b0
0x000027d4      4885c9         test rcx, rcx
0x000027d7      0f84d3000000   je 0x28b0                               ; ../coreutils-8.31/lib/base32.c:-551
0x000027dd      0fb607         movzx eax, byte [rdi]
0x000027e0      4189c1         mov r9d, eax
0x000027e3      41c0e903       shr r9b, 3
0x000027e7      4183e11f       and r9d, 0x1f
0x000027eb      4883f901       cmp rcx, 1                              ; ../coreutils-8.31/lib/base32.c:-537
0x000027ef      470fb60c08     movzx r9d, byte [r8 + r9]               ; ../coreutils-8.31/lib/base32.c:-541
0x000027f4      44880a         mov byte [rdx], r9b
0x000027f7      747c           je 0x2875
0x000027f9      c1e002         shl eax, 2                              ; ../coreutils-8.31/lib/base32.c:-535
0x000027fc      4883fe01       cmp rsi, 1
0x00002800      0f85aafeffff   jne 0x26b0
0x00002806      83e01c         and eax, 0x1c
0x00002809      4883f902       cmp rcx, 2
0x0000280d      410fb60400     movzx eax, byte [r8 + rax]
0x00002812      884201         mov byte [rdx + 1], al
0x00002815      745e           je 0x2875
0x00002817      4883f903       cmp rcx, 3
0x0000281b      c642023d       mov byte [rdx + 2], 0x3d                ; '='
                                                                       ; [0x3d:1]=0
0x0000281f      7454           je 0x2875
0x00002821      4883f904       cmp rcx, 4
0x00002825      c642033d       mov byte [rdx + 3], 0x3d                ; '='
                                                                       ; [0x3d:1]=0
0x00002829      744a           je 0x2875                               ; ../coreutils-8.31/lib/base32.c:-551
0x0000282b      4883f905       cmp rcx, 5                              ; ../coreutils-8.31/lib/base32.c:-516
0x0000282f      c642043d       mov byte [rdx + 4], 0x3d                ; '='
                                                                       ; [0x3d:1]=0
0x00002833      7440           je 0x2875
0x00002835      4883f906       cmp rcx, 6
0x00002839      c642053d       mov byte [rdx + 5], 0x3d                ; '='
                                                                       ; [0x3d:1]=0
0x0000283d      7436           je 0x2875
0x0000283f      4883f907       cmp rcx, 7
0x00002843      c642063d       mov byte [rdx + 6], 0x3d                ; '='
                                                                       ; [0x3d:1]=0
0x00002847      742c           je 0x2875
0x00002849      4883f908       cmp rcx, 8
0x0000284d      c642073d       mov byte [rdx + 7], 0x3d                ; '='
                                                                       ; [0x3d:1]=0
0x00002851      7422           je 0x2875                               ; ../coreutils-8.31/lib/base32.c:-529
0x00002853      31f6           xor esi, esi
0x00002855      e969ffffff     jmp 0x27c3                              ; ../coreutils-8.31/lib/base32.c:-535
0x0000285a      660f1f440000   nop word [rax + rax]
0x00002860      4183e11f       and r9d, 0x1f
0x00002864      4883f904       cmp rcx, 4
0x00002868      4d63c9         movsxd r9, r9d
0x0000286b      430fb60408     movzx eax, byte [r8 + r9]               ; ../coreutils-8.31/lib/base32.c:-517
0x00002870      884203         mov byte [rdx + 3], al
0x00002873      75b6           jne 0x282b
0x00002875      c3             ret
0x00002876      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/base32.c:-503
0x00002880      4183e11e       and r9d, 0x1e
0x00002884      4883f905       cmp rcx, 5
0x00002888      430fb60408     movzx eax, byte [r8 + r9]
0x0000288d      884204         mov byte [rdx + 4], al
0x00002890      75a3           jne 0x2835
0x00002892      f3c3           ret
0x00002894      0f1f4000       nop dword [rax]
0x00002898      83e018         and eax, 0x18
0x0000289b      4883f907       cmp rcx, 7
0x0000289f      410fb60400     movzx eax, byte [r8 + rax]
0x000028a4      884206         mov byte [rdx + 6], al
0x000028a7      74cc           je 0x2875
0x000028a9      eb9e           jmp 0x2849
0x000028ab      0f1f440000     nop dword [rax + rax]
0x000028b0      4885c9         test rcx, rcx
0x000028b3      74c0           je 0x2875
0x000028b5      c60200         mov byte [rdx], 0
0x000028b8      c3             ret
0x000028b9      0f1f80000000.  nop dword [rax]
;-- base32_encode_alloc:
0x000028c0      4156           push r14
0x000028c2      4155           push r13
0x000028c4      4989d5         mov r13, rdx
0x000028c7      488d5604       lea rdx, [rsi + 4]
0x000028cb      4154           push r12
0x000028cd      55             push rbp
0x000028ce      53             push rbx
0x000028cf      48bbcdcccccc.  movabs rbx, 0xcccccccccccccccd
0x000028d9      4889d0         mov rax, rdx
0x000028dc      48f7e3         mul rbx
0x000028df      48c1ea02       shr rdx, 2
0x000028e3      488d1cd50000.  lea rbx, [rdx*8]                        ; ../coreutils-8.31/lib/base32.c:-482
0x000028eb      488d6b01       lea rbp, [rbx + 1]
0x000028ef      4839ee         cmp rsi, rbp
0x000028f2      761c           jbe 0x2910
0x000028f4      49c745000000.  mov qword [r13], 0
0x000028fc      31ed           xor ebp, ebp
0x000028fe      5b             pop rbx
0x000028ff      4889e8         mov rax, rbp
0x00002902      5d             pop rbp
0x00002903      415c           pop r12
0x00002905      415d           pop r13                                 ; ../coreutils-8.31/lib/base32.c:-483
0x00002907      415e           pop r14
0x00002909      c3             ret
0x0000290a      660f1f440000   nop word [rax + rax]
0x00002910      4989fe         mov r14, rdi
0x00002913      4889ef         mov rdi, rbp
0x00002916      4989f4         mov r12, rsi
0x00002919      e8a2edffff     call sym.imp.malloc
0x0000291e      4885c0         test rax, rax
0x00002921      49894500       mov qword [r13], rax                    ; ../coreutils-8.31/lib/base32.c:-299
0x00002925      74d7           je 0x28fe
0x00002927      4889e9         mov rcx, rbp
0x0000292a      4889c2         mov rdx, rax
0x0000292d      4889dd         mov rbp, rbx
0x00002930      4c89e6         mov rsi, r12
0x00002933      4c89f7         mov rdi, r14
0x00002936      e865fdffff     call sym.base32_encode
0x0000293b      5b             pop rbx
0x0000293c      4889e8         mov rax, rbp
0x0000293f      5d             pop rbp
0x00002940      415c           pop r12
0x00002942      415d           pop r13
0x00002944      415e           pop r14
0x00002946      c3             ret
0x00002947      660f1f840000.  nop word [rax + rax]
;-- isbase32:
0x00002950      488d05093900.  lea rax, obj.b32                        ; 0x6260
0x00002957      400fb6ff       movzx edi, dil
0x0000295b      0fb60438       movzx eax, byte [rax + rdi]
0x0000295f      f7d0           not eax
0x00002961      c0e807         shr al, 7
0x00002964      c3             ret
0x00002965      90             nop
0x00002966      662e0f1f8400.  nop word cs:[rax + rax]
;-- base32_decode_ctx_init:
0x00002970      c70700000000   mov dword [rdi], 0
0x00002976      c3             ret
0x00002977      660f1f840000.  nop word [rax + rax]
;-- base32_decode_ctx:
0x00002980      4157           push r15                                ; ../coreutils-8.31/lib/base32.c:-431
0x00002982      4156           push r14
0x00002984      4989d3         mov r11, rdx
0x00002987      4155           push r13
0x00002989      4154           push r12
0x0000298b      4989fe         mov r14, rdi
0x0000298e      55             push rbp
0x0000298f      53             push rbx
0x00002990      4989f4         mov r12, rsi
0x00002993      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/base32.c:-283
0x00002997      4d8b38         mov r15, qword [r8]
0x0000299a      64488b1c2528.  mov rbx, qword fs:[0x28]
0x000029a3      48895c2428     mov qword [rsp + 0x28], rbx
0x000029a8      31db           xor ebx, ebx
0x000029aa      4885ff         test rdi, rdi
0x000029ad      48894c2418     mov qword [rsp + 0x18], rcx
0x000029b2      4c89442410     mov qword [rsp + 0x10], r8
0x000029b7      4c897c2420     mov qword [rsp + 0x20], r15
0x000029bc      0f95442407     setne byte [rsp + 7]
0x000029c1      0f8429020000   je 0x2bf0
0x000029c7      4885d2         test rdx, rdx
0x000029ca      8b17           mov edx, dword [rdi]
0x000029cc      0f95442406     setne byte [rsp + 6]
0x000029d1      0fb6442406     movzx eax, byte [rsp + 6]
0x000029d6      85d2           test edx, edx
0x000029d8      410f94c5       sete r13b
0x000029dc      4121c5         and r13d, eax
0x000029df      498d4604       lea rax, [r14 + 4]
0x000029e3      488d6c2420     lea rbp, [rsp + 0x20]
0x000029e8      488d5c2418     lea rbx, [rsp + 0x18]
0x000029ed      4889442408     mov qword [rsp + 8], rax
0x000029f2      4584ed         test r13b, r13b
0x000029f5      4c89fa         mov rdx, r15
0x000029f8      0f85cf000000   jne 0x2acd                              ; ../coreutils-8.31/lib/base32.c:-235
0x000029fe      4d85db         test r11, r11
0x00002a01      0f94c0         sete al
0x00002a04      22442406       and al, byte [rsp + 6]
0x00002a08      0f8582000000   jne 0x2a90
0x00002a0e      4d85db         test r11, r11                           ; ../coreutils-8.31/lib/base32.c:-232
0x00002a11      0f84d9000000   je 0x2af0
0x00002a17      41803c240a     cmp byte [r12], 0xa
0x00002a1c      0f849e010000   je 0x2bc0
0x00002a22      4c29fa         sub rdx, r15
0x00002a25      4801542418     add qword [rsp + 0x18], rdx
0x00002a2a      4d85f6         test r14, r14
0x00002a2d      4c897c2420     mov qword [rsp + 0x20], r15
0x00002a32      4f8d3c1c       lea r15, [r12 + r11]
0x00002a36      0f85cd000000   jne 0x2b09
0x00002a3c      4c89e7         mov rdi, r12
0x00002a3f      4983fb07       cmp r11, 7
0x00002a43      7712           ja 0x2a57
0x00002a45      807c240700     cmp byte [rsp + 7], 0
0x00002a4a      740b           je 0x2a57
0x00002a4c      807c240600     cmp byte [rsp + 6], 0
0x00002a51      0f8500010000   jne 0x2b57
0x00002a57      4889e9         mov rcx, rbp
0x00002a5a      4889da         mov rdx, rbx
0x00002a5d      4c89de         mov rsi, r11
0x00002a60      e88bfaffff     call sym.decode_8
0x00002a65      84c0           test al, al
0x00002a67      0f84b2010000   je 0x2c1f
0x00002a6d      4d89fb         mov r11, r15
0x00002a70      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x00002a75      4d29e3         sub r11, r12
0x00002a78      4584ed         test r13b, r13b
0x00002a7b      4c89fa         mov rdx, r15
0x00002a7e      754d           jne 0x2acd
0x00002a80      4d85db         test r11, r11
0x00002a83      0f94c0         sete al
0x00002a86      22442406       and al, byte [rsp + 6]
0x00002a8a      7482           je 0x2a0e
0x00002a8c      0f1f4000       nop dword [rax]
0x00002a90      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00002a95      482913         sub qword [rbx], rdx
0x00002a98      488b5c2428     mov rbx, qword [rsp + 0x28]
0x00002a9d      6448331c2528.  xor rbx, qword fs:[0x28]
0x00002aa6      0f857d010000   jne 0x2c29
0x00002aac      4883c438       add rsp, 0x38
0x00002ab0      5b             pop rbx
0x00002ab1      5d             pop rbp
0x00002ab2      415c           pop r12                                 ; ../coreutils-8.31/lib/base32.c:-459
0x00002ab4      415d           pop r13
0x00002ab6      415e           pop r14                                 ; ../coreutils-8.31/lib/base32.c:-444
0x00002ab8      415f           pop r15
0x00002aba      c3             ret
0x00002abb      0f1f440000     nop dword [rax + rax]
0x00002ac0      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x00002ac5      4983c408       add r12, 8
0x00002ac9      4983eb08       sub r11, 8
0x00002acd      4889e9         mov rcx, rbp
0x00002ad0      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/base32.c:-439
0x00002ad3      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/base32.c:-438
0x00002ad6      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/base32.c:-439
0x00002ad9      e812faffff     call sym.decode_8
0x00002ade      84c0           test al, al                             ; ../coreutils-8.31/lib/base32.c:-438
0x00002ae0      75de           jne 0x2ac0
0x00002ae2      488b542420     mov rdx, qword [rsp + 0x20]             ; ../coreutils-8.31/lib/base32.c:-444
0x00002ae7      e912ffffff     jmp 0x29fe                              ; ../coreutils-8.31/lib/base32.c:-432
0x00002aec      0f1f4000       nop dword [rax]
0x00002af0      4c29fa         sub rdx, r15
0x00002af3      4801542418     add qword [rsp + 0x18], rdx
0x00002af8      4d85f6         test r14, r14
0x00002afb      4c897c2420     mov qword [rsp + 0x20], r15
0x00002b00      0f84fa000000   je 0x2c00
0x00002b06      4d89e7         mov r15, r12
0x00002b09      418b06         mov eax, dword [r14]
0x00002b0c      83f808         cmp eax, 8
0x00002b0f      745f           je 0x2b70
0x00002b11      85c0           test eax, eax                           ; ../coreutils-8.31/lib/base32.c:-461
0x00002b13      7462           je 0x2b77
0x00002b15      4d39fc         cmp r12, r15
0x00002b18      732c           jae 0x2b46                              ; ../coreutils-8.31/lib/base32.c:-456
0x00002b1a      660f1f440000   nop word [rax + rax]
0x00002b20      4983c401       add r12, 1
0x00002b24      410fb65424ff   movzx edx, byte [r12 - 1]
0x00002b2a      80fa0a         cmp dl, 0xa
0x00002b2d      7412           je 0x2b41
0x00002b2f      8d4801         lea ecx, [rax + 1]
0x00002b32      83f908         cmp ecx, 8
0x00002b35      41890e         mov dword [r14], ecx
0x00002b38      4188540604     mov byte [r14 + rax + 4], dl
0x00002b3d      7461           je 0x2ba0
0x00002b3f      89c8           mov eax, ecx
0x00002b41      4d39fc         cmp r12, r15                            ; ../coreutils-8.31/lib/base32.c:-438
0x00002b44      75da           jne 0x2b20
0x00002b46      4189c3         mov r11d, eax                           ; ../coreutils-8.31/lib/base32.c:-431
0x00002b49      488b7c2408     mov rdi, qword [rsp + 8]
0x00002b4e      4d85db         test r11, r11                           ; ../coreutils-8.31/lib/base32.c:-240
0x00002b51      0f85e8feffff   jne 0x2a3f
0x00002b57      488b542420     mov rdx, qword [rsp + 0x20]
0x00002b5c      b801000000     mov eax, 1
0x00002b61      e92affffff     jmp 0x2a90                              ; ../coreutils-8.31/lib/base32.c:-263
0x00002b66      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/base32.c:-261
0x00002b70      41c706000000.  mov dword [r14], 0
0x00002b77      4983fb07       cmp r11, 7
0x00002b7b      7e17           jle 0x2b94
0x00002b7d      ba08000000     mov edx, 8
0x00002b82      be0a000000     mov esi, 0xa
0x00002b87      4c89e7         mov rdi, r12
0x00002b8a      e8c1eaffff     call sym.imp.memchr
0x00002b8f      4885c0         test rax, rax
0x00002b92      7479           je 0x2c0d
0x00002b94      418b06         mov eax, dword [r14]
0x00002b97      e979ffffff     jmp 0x2b15
0x00002b9c      0f1f4000       nop dword [rax]
0x00002ba0      b808000000     mov eax, 8
0x00002ba5      488b7c2408     mov rdi, qword [rsp + 8]
0x00002baa      4189c3         mov r11d, eax
0x00002bad      4d85db         test r11, r11
0x00002bb0      0f8589feffff   jne 0x2a3f
0x00002bb6      eb9f           jmp 0x2b57
0x00002bb8      0f1f84000000.  nop dword [rax + rax]
0x00002bc0      4d85f6         test r14, r14
0x00002bc3      7413           je 0x2bd8
0x00002bc5      4983c401       add r12, 1
0x00002bc9      4983eb01       sub r11, 1
0x00002bcd      4989d7         mov r15, rdx
0x00002bd0      e91dfeffff     jmp 0x29f2
0x00002bd5      0f1f00         nop dword [rax]
0x00002bd8      4c29fa         sub rdx, r15
0x00002bdb      4c897c2420     mov qword [rsp + 0x20], r15
0x00002be0      4801542418     add qword [rsp + 0x18], rdx
0x00002be5      4f8d3c1c       lea r15, [r12 + r11]
0x00002be9      e94efeffff     jmp 0x2a3c
0x00002bee      6690           nop
0x00002bf0      41bd01000000   mov r13d, 1
0x00002bf6      c644240601     mov byte [rsp + 6], 1
0x00002bfb      e9dffdffff     jmp 0x29df
0x00002c00      4c89fa         mov rdx, r15
0x00002c03      b801000000     mov eax, 1
0x00002c08      e983feffff     jmp 0x2a90
0x00002c0d      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/base32.c:-200
0x00002c10      41bb08000000   mov r11d, 8
0x00002c16      4983c408       add r12, 8
0x00002c1a      e938feffff     jmp 0x2a57                              ; ../coreutils-8.31/lib/base32.c:-196
0x00002c1f      488b542420     mov rdx, qword [rsp + 0x20]
0x00002c24      e967feffff     jmp 0x2a90
0x00002c29      e872e9ffff     call sym.imp.__stack_chk_fail
0x00002c2e      6690           nop
;-- base32_decode_alloc_ctx:
0x00002c30      4156           push r14
0x00002c32      4155           push r13
0x00002c34      4989d6         mov r14, rdx                            ; ../coreutils-8.31/lib/base32.c:-189
0x00002c37      4154           push r12
0x00002c39      55             push rbp                                ; ../coreutils-8.31/lib/base32.c:-188
0x00002c3a      4989fc         mov r12, rdi
0x00002c3d      53             push rbx
0x00002c3e      4989f5         mov r13, rsi
0x00002c41      4889cb         mov rbx, rcx
0x00002c44      4c89c5         mov rbp, r8
0x00002c47      4883ec20       sub rsp, 0x20
0x00002c4b      64488b042528.  mov rax, qword fs:[0x28]
0x00002c54      4889442418     mov qword [rsp + 0x18], rax
0x00002c59      31c0           xor eax, eax
0x00002c5b      4889d0         mov rax, rdx
0x00002c5e      48c1e803       shr rax, 3
0x00002c62      488d7c8005     lea rdi, [rax + rax*4 + 5]
0x00002c67      48897c2410     mov qword [rsp + 0x10], rdi
0x00002c6c      e84feaffff     call sym.imp.malloc
0x00002c71      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/base32.c:-194
0x00002c74      488903         mov qword [rbx], rax
0x00002c77      742f           je 0x2ca8
0x00002c79      4c8d442410     lea r8, [rsp + 0x10]
0x00002c7e      4889c1         mov rcx, rax
0x00002c81      4c89f2         mov rdx, r14
0x00002c84      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/base32.c:-192
0x00002c87      4c89e7         mov rdi, r12
0x00002c8a      e8f1fcffff     call sym.base32_decode_ctx
0x00002c8f      84c0           test al, al
0x00002c91      743d           je 0x2cd0
0x00002c93      4885ed         test rbp, rbp
0x00002c96      7410           je 0x2ca8
0x00002c98      488b542410     mov rdx, qword [rsp + 0x10]
0x00002c9d      48895500       mov qword [rbp], rdx
0x00002ca1      eb0a           jmp 0x2cad
0x00002ca3      0f1f440000     nop dword [rax + rax]
0x00002ca8      b801000000     mov eax, 1
0x00002cad      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00002cb2      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002cbb      752d           jne 0x2cea
0x00002cbd      4883c420       add rsp, 0x20
0x00002cc1      5b             pop rbx
0x00002cc2      5d             pop rbp
0x00002cc3      415c           pop r12
0x00002cc5      415d           pop r13
0x00002cc7      415e           pop r14
0x00002cc9      c3             ret
0x00002cca      660f1f440000   nop word [rax + rax]
0x00002cd0      488b3b         mov rdi, qword [rbx]
0x00002cd3      8844240f       mov byte [rsp + 0xf], al
0x00002cd7      e8f4e7ffff     call sym.imp.free
0x00002cdc      48c703000000.  mov qword [rbx], 0
0x00002ce3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00002ce8      ebc3           jmp 0x2cad
0x00002cea      e8b1e8ffff     call sym.imp.__stack_chk_fail
0x00002cef      90             nop
;-- close_stdout_set_file_name:
0x00002cf0      48893de16320.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x2090d8:8]=0
0x00002cf7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002cf8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00002d00      40883dc96320.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x2090d0:1]=0
0x00002d07      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00002d08      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00002d10      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00002d11      53             push rbx
0x00002d12      4883ec08       sub rsp, 8
0x00002d16      488b3d6b6320.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00002d1d      e8be2d0000     call sym.close_stream
0x00002d22      85c0           test eax, eax
0x00002d24      7416           je 0x2d3c
0x00002d26      e8c5e7ffff     call sym.imp.__errno_location
0x00002d2b      803d9e632000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x2090d0:1]=0
0x00002d32      4889c3         mov rbx, rax
0x00002d35      741c           je 0x2d53
0x00002d37      833820         cmp dword [rax], 0x20
0x00002d3a      7517           jne 0x2d53
0x00002d3c      488b3d7d6320.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x00002d43      e8982d0000     call sym.close_stream
0x00002d48      85c0           test eax, eax
0x00002d4a      7546           jne 0x2d92
0x00002d4c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00002d50      5b             pop rbx
0x00002d51      5d             pop rbp
0x00002d52      c3             ret
0x00002d53      488d35703000.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x5dca ; "write error"
0x00002d5a      31ff           xor edi, edi
0x00002d5c      ba05000000     mov edx, 5
0x00002d61      e80ae8ffff     call sym.imp.dcgettext
0x00002d66      488b3d6b6320.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x2090d8:8]=0
0x00002d6d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002d70      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002d73      7428           je 0x2d9d
0x00002d75      e8961b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00002d7a      8b33           mov esi, dword [rbx]
0x00002d7c      488d15dd3500.  lea rdx, str.s:__s                      ; 0x6360 ; "%s: %s"
0x00002d83      4889c1         mov rcx, rax
0x00002d86      4989e8         mov r8, rbp
0x00002d89      31ff           xor edi, edi
0x00002d8b      31c0           xor eax, eax
0x00002d8d      e8bee9ffff     call sym.imp.error
0x00002d92      8b3d80622000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x209018:4]=1
0x00002d98      e873e7ffff     call sym.imp._exit
0x00002d9d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00002d9f      488d15be3500.  lea rdx, [0x00006364]                   ; "%s"
0x00002da6      4889c1         mov rcx, rax
0x00002da9      31ff           xor edi, edi
0x00002dab      31c0           xor eax, eax
0x00002dad      e89ee9ffff     call sym.imp.error
0x00002db2      ebde           jmp 0x2d92
0x00002db4      662e0f1f8400.  nop word cs:[rax + rax]
0x00002dbe      6690           nop
;-- fdadvise:
0x00002dc0      e97be8ffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x00002dc5      90             nop
0x00002dc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x00002dd0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x00002dd3      741b           je 0x2df0
0x00002dd5      53             push rbx
0x00002dd6      89f3           mov ebx, esi
0x00002dd8      e8d3e8ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x00002ddd      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00002ddf      31d2           xor edx, edx
0x00002de1      31f6           xor esi, esi
0x00002de3      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x00002de4      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00002de6      e955e8ffff     jmp sym.imp.posix_fadvise
0x00002deb      0f1f440000     nop dword [rax + rax]
0x00002df0      f3c3           ret
0x00002df2      662e0f1f8400.  nop word cs:[rax + rax]
0x00002dfc      0f1f4000       nop dword [rax]
;-- set_program_name:
0x00002e00      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00002e03      53             push rbx
0x00002e04      7477           je 0x2e7d                               ; ../coreutils-8.31/lib/progname.c:51
0x00002e06      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00002e0b      4889fb         mov rbx, rdi
0x00002e0e      e8dde7ffff     call sym.imp.strrchr
0x00002e13      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00002e16      7455           je 0x2e6d
0x00002e18      4c8d4001       lea r8, [rax + 1]
0x00002e1c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00002e1f      4829da         sub rdx, rbx
0x00002e22      4883fa06       cmp rdx, 6
0x00002e26      7e45           jle 0x2e6d
0x00002e28      488d70fa       lea rsi, [rax - 6]
0x00002e2c      488d3d6d3500.  lea rdi, str..libs                      ; 0x63a0 ; "/.libs/"
0x00002e33      b907000000     mov ecx, 7
0x00002e38      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002e3a      0f97c2         seta dl
0x00002e3d      80da00         sbb dl, 0
0x00002e40      84d2           test dl, dl
0x00002e42      7529           jne 0x2e6d
0x00002e44      488d3d5d3500.  lea rdi, [0x000063a8]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00002e4b      b903000000     mov ecx, 3
0x00002e50      4c89c6         mov rsi, r8
0x00002e53      4c89c3         mov rbx, r8
0x00002e56      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002e58      0f97c2         seta dl
0x00002e5b      80da00         sbb dl, 0
0x00002e5e      84d2           test dl, dl
0x00002e60      750b           jne 0x2e6d
0x00002e62      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00002e66      48891d136220.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x209080:8]=0
0x00002e6d      48891d6c6220.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x2090e0:8]=0
0x00002e74      48891d2d6220.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002e7b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00002e7c      c3             ret
0x00002e7d      488b0d3c6220.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x00002e84      488d3ddd3400.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x6368 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00002e8b      ba37000000     mov edx, 0x37                           ; '7'
0x00002e90      be01000000     mov esi, 1
0x00002e95      e806e9ffff     call sym.imp.fwrite
0x00002e9a      e841e6ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00002e9f      90             nop
;-- gettext_quote.part.1:
0x00002ea0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002ea1      53             push rbx
0x00002ea2      4889fd         mov rbp, rdi
0x00002ea5      89f3           mov ebx, esi
0x00002ea7      4883ec08       sub rsp, 8
0x00002eab      e8102d0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002eb0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002eb3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002eb6      80fa55         cmp dl, 0x55
0x00002eb9      7475           je 0x2f30
0x00002ebb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00002ebe      7420           je 0x2ee0
0x00002ec0      488d05f43400.  lea rax, str.l______l                   ; 0x63bb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002ec7      488d15ef3400.  lea rdx, [0x000063bd]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002ece      83fb09         cmp ebx, 9
0x00002ed1      480f45c2       cmovne rax, rdx
0x00002ed5      4883c408       add rsp, 8
0x00002ed9      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00002eda      5d             pop rbp
0x00002edb      c3             ret
0x00002edc      0f1f4000       nop dword [rax]
0x00002ee0      0fb65001       movzx edx, byte [rax + 1]
0x00002ee4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002ee7      80fa42         cmp dl, 0x42
0x00002eea      75d4           jne 0x2ec0
0x00002eec      80780231       cmp byte [rax + 2], 0x31
0x00002ef0      75ce           jne 0x2ec0
0x00002ef2      80780338       cmp byte [rax + 3], 0x38
0x00002ef6      75c8           jne 0x2ec0
0x00002ef8      80780430       cmp byte [rax + 4], 0x30
0x00002efc      75c2           jne 0x2ec0
0x00002efe      80780533       cmp byte [rax + 5], 0x33
0x00002f02      75bc           jne 0x2ec0
0x00002f04      80780630       cmp byte [rax + 6], 0x30
0x00002f08      75b6           jne 0x2ec0
0x00002f0a      80780700       cmp byte [rax + 7], 0
0x00002f0e      75b0           jne 0x2ec0
0x00002f10      807d0060       cmp byte [rbp], 0x60
0x00002f14      488d05993400.  lea rax, [0x000063b4]
0x00002f1b      488d15963400.  lea rdx, [0x000063b8]
0x00002f22      480f45c2       cmovne rax, rdx
0x00002f26      4883c408       add rsp, 8
0x00002f2a      5b             pop rbx
0x00002f2b      5d             pop rbp
0x00002f2c      c3             ret
0x00002f2d      0f1f00         nop dword [rax]
0x00002f30      0fb65001       movzx edx, byte [rax + 1]
0x00002f34      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002f37      80fa54         cmp dl, 0x54
0x00002f3a      7584           jne 0x2ec0
0x00002f3c      0fb65002       movzx edx, byte [rax + 2]
0x00002f40      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002f43      80fa46         cmp dl, 0x46
0x00002f46      0f8574ffffff   jne 0x2ec0
0x00002f4c      8078032d       cmp byte [rax + 3], 0x2d
0x00002f50      0f856affffff   jne 0x2ec0
0x00002f56      80780438       cmp byte [rax + 4], 0x38
0x00002f5a      0f8560ffffff   jne 0x2ec0
0x00002f60      80780500       cmp byte [rax + 5], 0
0x00002f64      0f8556ffffff   jne 0x2ec0
0x00002f6a      807d0060       cmp byte [rbp], 0x60
0x00002f6e      488d05373400.  lea rax, [0x000063ac]                   ; "\u2018"
0x00002f75      488d15343400.  lea rdx, [0x000063b0]                   ; "\u2019"
0x00002f7c      480f45c2       cmovne rax, rdx
0x00002f80      4883c408       add rsp, 8
0x00002f84      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002f85      5d             pop rbp
0x00002f86      c3             ret
0x00002f87      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002f90      4157           push r15
0x00002f92      4156           push r14
0x00002f94      4589c7         mov r15d, r8d
0x00002f97      4155           push r13
0x00002f99      4154           push r12
0x00002f9b      4989fe         mov r14, rdi
0x00002f9e      55             push rbp
0x00002f9f      53             push rbx
0x00002fa0      4489cb         mov ebx, r9d
0x00002fa3      4989f5         mov r13, rsi
0x00002fa6      4889cd         mov rbp, rcx
0x00002fa9      83e302         and ebx, 2
0x00002fac      4881ecb80000.  sub rsp, 0xb8
0x00002fb3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00002fbb      4889542410     mov qword [rsp + 0x10], rdx
0x00002fc0      4489442408     mov dword [rsp + 8], r8d
0x00002fc5      44894c2478     mov dword [rsp + 0x78], r9d
0x00002fca      4889442420     mov qword [rsp + 0x20], rax
0x00002fcf      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002fd7      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00002fdc      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00002fe4      4889442460     mov qword [rsp + 0x60], rax
0x00002fe9      64488b042528.  mov rax, qword fs:[0x28]
0x00002ff2      48898424a800.  mov qword [rsp + 0xa8], rax
0x00002ffa      31c0           xor eax, eax
0x00002ffc      e87fe5ffff     call sym.imp.__ctype_get_mb_cur_max
0x00003001      4183ff0a       cmp r15d, 0xa
0x00003005      4889442458     mov qword [rsp + 0x58], rax
0x0000300a      0f87af110000   ja 0x41bf
0x00003010      488d0d093400.  lea rcx, [0x00006420]
0x00003017      4489fa         mov edx, r15d
0x0000301a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000301e      4801c8         add rax, rcx
0x00003021      ffe0           jmp rax
0x00003023      c644240e01     mov byte [rsp + 0xe], 1
0x00003028      c644247c00     mov byte [rsp + 0x7c], 0
0x0000302d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00003030      48c744245000.  mov qword [rsp + 0x50], 0
0x00003039      c644240f01     mov byte [rsp + 0xf], 1
0x0000303e      c644240d00     mov byte [rsp + 0xd], 0
0x00003043      488d05733300.  lea rax, [0x000063bd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000304a      48c744241801.  mov qword [rsp + 0x18], 1
0x00003053      4531ff         xor r15d, r15d
0x00003056      c74424080200.  mov dword [rsp + 8], 2
0x0000305e      4889442448     mov qword [rsp + 0x48], rax
0x00003063      4531db         xor r11d, r11d
0x00003066      4889e8         mov rax, rbp
0x00003069      4589e0         mov r8d, r12d
0x0000306c      4c89dd         mov rbp, r11
0x0000306f      4989c3         mov r11, rax
0x00003072      660f1f440000   nop word [rax + rax]
0x00003078      4939eb         cmp r11, rbp
0x0000307b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000307f      4983fbff       cmp r11, 0xffffffffffffffff
0x00003083      750d           jne 0x3092
0x00003085      488b442410     mov rax, qword [rsp + 0x10]
0x0000308a      803c2800       cmp byte [rax + rbp], 0
0x0000308e      410f95c4       setne r12b
0x00003092      4584e4         test r12b, r12b
0x00003095      0f8455060000   je 0x36f0
0x0000309b      837c240802     cmp dword [rsp + 8], 2
0x000030a0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000030a5      4c8d0c2f       lea r9, [rdi + rbp]
0x000030a9      0f95c0         setne al
0x000030ac      2244240d       and al, byte [rsp + 0xd]
0x000030b0      4189c2         mov r10d, eax
0x000030b3      0f84a7000000   je 0x3160
0x000030b9      488b442418     mov rax, qword [rsp + 0x18]
0x000030be      4885c0         test rax, rax
0x000030c1      0f8429040000   je 0x34f0
0x000030c7      4983fbff       cmp r11, 0xffffffffffffffff
0x000030cb      488d5c0500     lea rbx, [rbp + rax]
0x000030d0      752e           jne 0x3100
0x000030d2      4883f801       cmp rax, 1
0x000030d6      7628           jbe 0x3100
0x000030d8      4488442438     mov byte [rsp + 0x38], r8b
0x000030dd      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x000030e2      4c894c2428     mov qword [rsp + 0x28], r9
0x000030e7      e8a4e4ffff     call sym.imp.strlen
0x000030ec      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000030f2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x000030f8      4989c3         mov r11, rax
0x000030fb      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003100      4c39db         cmp rbx, r11
0x00003103      4488542428     mov byte [rsp + 0x28], r10b
0x00003108      0f87b2050000   ja 0x36c0
0x0000310e      488b542418     mov rdx, qword [rsp + 0x18]
0x00003113      488b742448     mov rsi, qword [rsp + 0x48]
0x00003118      4c89cf         mov rdi, r9
0x0000311b      4c895c2440     mov qword [rsp + 0x40], r11
0x00003120      4488442438     mov byte [rsp + 0x38], r8b
0x00003125      4c894c2430     mov qword [rsp + 0x30], r9
0x0000312a      e831e5ffff     call sym.imp.memcmp
0x0000312f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00003131      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003136      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000313c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00003141      0f8579050000   jne 0x36c0
0x00003147      807c240f00     cmp byte [rsp + 0xf], 0
0x0000314c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003152      0f857d0f0000   jne 0x40d5
0x00003158      0f1f84000000.  nop dword [rax + rax]
0x00003160      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00003164      80fb7e         cmp bl, 0x7e
0x00003167      0f871b030000   ja 0x3488
0x0000316d      488d0dd83200.  lea rcx, [0x0000644c]                   ; "T\xcf\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff\x94\xcf\xff\xff\x9c\xce\xff\xff\\xce\xff\xff$\xd0\xff\xff\x14\xd0\xff\xff\x04\xd0\xff\xff\xf4\xcf\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff<\xd0\xff\xff\xe4\xcf\xff\xff\xd4\xcf\xff\xff\xd4\xcf\xff\xff\xa4\xcf\xff\xff\xd4\xcf\xff\xff|\xcf\xff\xff\xd4\xcf\xff\xff7\xce\xff\xff\xd4\xcf\xff\xff\xd4\xcf\xff\xff\xd4\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff\xd4\xcf\xff\xff\xd4\xcf\xff\xff\xd4\xcf\xff\xff\xd4\xcf\xff\xff\a\xce\xff\xff<\xd0\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff\xd4\xcf\xff\xff\xac\xce\xff\xff|\xcf\xff\xff\xd4\xcf\xff\xff|\xcf\xff\xff\xd4\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff7\xcd\xff\xff\xd4\xcf\xff\xff7\xcd\xff\xff\xa4\xcf\xff\xff(\xcf\xff\xff8\xce\xff\xff8\xce\xff\xff8\xce\xff\xff8\xce\xff\xff8\xce\xff\xff8\xce\xff\xff\x18\xcf\xff\xffh\xd0\xff\xffP\xd0\xff\xff"
0x00003174      0fb6d3         movzx edx, bl
0x00003177      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000317b      4801c8         add rax, rcx
0x0000317e      ffe0           jmp rax
0x00003180      4531d2         xor r10d, r10d
0x00003183      4983fb01       cmp r11, 1
0x00003187      0f95c0         setne al
0x0000318a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000318e      750c           jne 0x319c
0x00003190      488b442410     mov rax, qword [rsp + 0x10]
0x00003195      80780100       cmp byte [rax + 1], 0
0x00003199      0f95c0         setne al
0x0000319c      837c240802     cmp dword [rsp + 8], 2
0x000031a1      0f94c2         sete dl
0x000031a4      84c0           test al, al
0x000031a6      0f844c020000   je 0x33f8
0x000031ac      4531e4         xor r12d, r12d
0x000031af      31c0           xor eax, eax
0x000031b1      0f1f80000000.  nop dword [rax]
0x000031b8      807c240d01     cmp byte [rsp + 0xd], 1
0x000031bd      0f850f010000   jne 0x32d2
0x000031c3      84d2           test dl, dl
0x000031c5      0f8507010000   jne 0x32d2
0x000031cb      488b742420     mov rsi, qword [rsp + 0x20]
0x000031d0      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x000031d3      7414           je 0x31e9
0x000031d5      89da           mov edx, ebx
0x000031d7      c0ea05         shr dl, 5
0x000031da      0fb6d2         movzx edx, dl
0x000031dd      8b1496         mov edx, dword [rsi + rdx*4]
0x000031e0      0fa3da         bt edx, ebx
0x000031e3      0f824a010000   jb 0x3333
0x000031e9      4584d2         test r10b, r10b
0x000031ec      0f8541010000   jne 0x3333
0x000031f2      83f001         xor eax, 1
0x000031f5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x000031f9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x000031fc      84c0           test al, al
0x000031fe      7420           je 0x3220                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003200      4d39fd         cmp r13, r15
0x00003203      7605           jbe 0x320a
0x00003205      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000320a      498d4701       lea rax, [r15 + 1]
0x0000320e      4939c5         cmp r13, rax
0x00003211      7606           jbe 0x3219
0x00003213      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003219      4983c702       add r15, 2
0x0000321d      4531c0         xor r8d, r8d
0x00003220      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003223      7304           jae 0x3229                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003225      43881c3e       mov byte [r14 + r15], bl
0x00003229      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000322e      4983c701       add r15, 1
0x00003232      b800000000     mov eax, 0
0x00003237      4584e4         test r12b, r12b
0x0000323a      0f44f8         cmove edi, eax
0x0000323d      40887c240e     mov byte [rsp + 0xe], dil
0x00003242      e931feffff     jmp 0x3078
0x00003247      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00003250      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00003253      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00003257      83f802         cmp eax, 2
0x0000325a      0f84b8050000   je 0x3818
0x00003260      83f805         cmp eax, 5
0x00003263      0f846f050000   je 0x37d8
0x00003269      83f802         cmp eax, 2
0x0000326c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003271      0f94c2         sete dl
0x00003274      4531e4         xor r12d, r12d
0x00003277      31c0           xor eax, eax
0x00003279      e93affffff     jmp 0x31b8
0x0000327e      6690           nop
0x00003280      4531d2         xor r10d, r10d
0x00003283      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00003288      0f8402050000   je 0x3790
0x0000328e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00003293      31d2           xor edx, edx
0x00003295      31c0           xor eax, eax
0x00003297      bb27000000     mov ebx, 0x27                           ; '''
0x0000329c      e917ffffff     jmp 0x31b8
0x000032a1      0f1f80000000.  nop dword [rax]
0x000032a8      ba09000000     mov edx, 9
0x000032ad      bb74000000     mov ebx, 0x74                           ; 't'
0x000032b2      837c240802     cmp dword [rsp + 8], 2
0x000032b7      0f94c0         sete al
0x000032ba      2244240f       and al, byte [rsp + 0xf]
0x000032be      0f854a010000   jne 0x340e
0x000032c4      807c240d00     cmp byte [rsp + 0xd], 0
0x000032c9      7565           jne 0x3330
0x000032cb      89d3           mov ebx, edx
0x000032cd      4531e4         xor r12d, r12d
0x000032d0      31c0           xor eax, eax
0x000032d2      807c240f00     cmp byte [rsp + 0xf], 0
0x000032d7      0f85eefeffff   jne 0x31cb
0x000032dd      e907ffffff     jmp 0x31e9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x000032e2      660f1f440000   nop word [rax + rax]
0x000032e8      ba08000000     mov edx, 8
0x000032ed      bb62000000     mov ebx, 0x62                           ; 'b'
0x000032f2      ebd0           jmp 0x32c4
0x000032f4      0f1f4000       nop dword [rax]
0x000032f8      837c240802     cmp dword [rsp + 8], 2
0x000032fd      0f84cd030000   je 0x36d0
0x00003303      807c240d00     cmp byte [rsp + 0xd], 0
0x00003308      0f8412020000   je 0x3520
0x0000330e      807c240f00     cmp byte [rsp + 0xf], 0
0x00003313      0f8407020000   je 0x3520
0x00003319      48837c241800   cmp qword [rsp + 0x18], 0
0x0000331f      0f85b6030000   jne 0x36db
0x00003325      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000332a      660f1f440000   nop word [rax + rax]
0x00003330      4531e4         xor r12d, r12d
0x00003333      837c240802     cmp dword [rsp + 8], 2
0x00003338      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000333b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003340      89d0           mov eax, edx
0x00003342      0f8550080000   jne 0x3b98
0x00003348      4489c0         mov eax, r8d
0x0000334b      83f001         xor eax, 1
0x0000334e      20d0           and al, dl
0x00003350      742f           je 0x3381
0x00003352      4d39fd         cmp r13, r15
0x00003355      7605           jbe 0x335c
0x00003357      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000335c      498d5701       lea rdx, [r15 + 1]
0x00003360      4939d5         cmp r13, rdx
0x00003363      7606           jbe 0x336b
0x00003365      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000336b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000336f      4939d5         cmp r13, rdx
0x00003372      7606           jbe 0x337a
0x00003374      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000337a      4983c703       add r15, 3
0x0000337e      4189c0         mov r8d, eax
0x00003381      4d39fd         cmp r13, r15
0x00003384      7605           jbe 0x338b
0x00003386      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000338b      4983c701       add r15, 1
0x0000338f      4883c501       add rbp, 1
0x00003393      e988feffff     jmp 0x3220
0x00003398      0f1f84000000.  nop dword [rax + rax]
0x000033a0      807c240d00     cmp byte [rsp + 0xd], 0
0x000033a5      0f85c8010000   jne 0x3573
0x000033ab      31d2           xor edx, edx
0x000033ad      f644247801     test byte [rsp + 0x78], 1
0x000033b2      0f8413ffffff   je 0x32cb
0x000033b8      4883c501       add rbp, 1
0x000033bc      e9b7fcffff     jmp 0x3078
0x000033c1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x000033c8      837c240802     cmp dword [rsp + 8], 2
0x000033cd      0f94c2         sete dl
0x000033d0      31c0           xor eax, eax
0x000033d2      e9e1fdffff     jmp 0x31b8
0x000033d7      660f1f840000.  nop word [rax + rax]
0x000033e0      ba07000000     mov edx, 7
0x000033e5      bb61000000     mov ebx, 0x61                           ; 'a'
0x000033ea      e9d5feffff     jmp 0x32c4
0x000033ef      90             nop
0x000033f0      837c240802     cmp dword [rsp + 8], 2
0x000033f5      0f94c2         sete dl
0x000033f8      4885ed         test rbp, rbp
0x000033fb      0f85abfdffff   jne 0x31ac
0x00003401      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003406      20d0           and al, dl
0x00003408      0f84aafdffff   je 0x31b8
0x0000340e      4c89dd         mov rbp, r11
0x00003411      c74424080200.  mov dword [rsp + 8], 2
0x00003419      e9fb060000     jmp 0x3b19
0x0000341e      6690           nop
0x00003420      837c240802     cmp dword [rsp + 8], 2
0x00003425      0f94c2         sete dl
0x00003428      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000342b      ebd4           jmp 0x3401
0x0000342d      0f1f00         nop dword [rax]
0x00003430      837c240802     cmp dword [rsp + 8], 2
0x00003435      bb20000000     mov ebx, 0x20                           ; "@"
0x0000343a      0f94c2         sete dl
0x0000343d      ebc2           jmp 0x3401
0x0000343f      90             nop
0x00003440      ba0d000000     mov edx, 0xd
0x00003445      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000344a      e963feffff     jmp 0x32b2
0x0000344f      90             nop
0x00003450      ba0c000000     mov edx, 0xc
0x00003455      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000345a      e965feffff     jmp 0x32c4
0x0000345f      90             nop
0x00003460      ba0b000000     mov edx, 0xb
0x00003465      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000346a      e955feffff     jmp 0x32c4
0x0000346f      90             nop
0x00003470      ba0a000000     mov edx, 0xa
0x00003475      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000347a      e933feffff     jmp 0x32b2
0x0000347f      90             nop
0x00003480      4531d2         xor r10d, r10d
0x00003483      0f1f440000     nop dword [rax + rax]
0x00003488      48837c245801   cmp qword [rsp + 0x58], 1
0x0000348e      0f85a4030000   jne 0x3838
0x00003494      4c895c2438     mov qword [rsp + 0x38], r11
0x00003499      4488442430     mov byte [rsp + 0x30], r8b
0x0000349e      4488542428     mov byte [rsp + 0x28], r10b
0x000034a3      e838e3ffff     call sym.imp.__ctype_b_loc
0x000034a8      488b08         mov rcx, qword [rax]
0x000034ab      0fb6d3         movzx edx, bl
0x000034ae      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000034b4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x000034ba      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x000034bf      bf01000000     mov edi, 1
0x000034c4      0fb70451       movzx eax, word [rcx + rdx*2]
0x000034c8      66250040       and ax, 0x4000                          ; "H\x8d\x05\xb6#"
0x000034cc      410f95c4       setne r12b
0x000034d0      0f94c0         sete al
0x000034d3      2244240d       and al, byte [rsp + 0xd]
0x000034d7      84c0           test al, al
0x000034d9      0f8592090000   jne 0x3e71
0x000034df      837c240802     cmp dword [rsp + 8], 2
0x000034e4      0f94c2         sete dl
0x000034e7      e9ccfcffff     jmp 0x31b8
0x000034ec      0f1f4000       nop dword [rax]
0x000034f0      410fb619       movzx ebx, byte [r9]
0x000034f4      80fb7e         cmp bl, 0x7e
0x000034f7      7787           ja 0x3480
0x000034f9      488d0d483100.  lea rcx, [0x00006648]                   ; "(\xcf\xff\xff8\xce\xff\xff8\xce\xff\xff8\xce\xff\xff8\xce\xff\xff8\xce\xff\xff8\xce\xff\xff\x18\xcf\xff\xffh\xd0\xff\xffP\xd0\xff\xff"
0x00003500      0fb6d3         movzx edx, bl
0x00003503      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003507      4801c8         add rax, rcx
0x0000350a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000350c      0f1f4000       nop dword [rax]
0x00003510      4531d2         xor r10d, r10d
0x00003513      807c240d00     cmp byte [rsp + 0xd], 0
0x00003518      0f85f0fdffff   jne 0x330e
0x0000351e      6690           nop
0x00003520      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003525      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000352a      e995fdffff     jmp 0x32c4
0x0000352f      90             nop
0x00003530      ba0c000000     mov edx, 0xc
0x00003535      4531d2         xor r10d, r10d
0x00003538      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000353d      e982fdffff     jmp 0x32c4
0x00003542      660f1f440000   nop word [rax + rax]
0x00003548      ba0a000000     mov edx, 0xa
0x0000354d      4531d2         xor r10d, r10d
0x00003550      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003555      e958fdffff     jmp 0x32b2
0x0000355a      660f1f440000   nop word [rax + rax]
0x00003560      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003565      e9c6fdffff     jmp 0x3330
0x0000356a      660f1f440000   nop word [rax + rax]
0x00003570      4531d2         xor r10d, r10d
0x00003573      837c240802     cmp dword [rsp + 8], 2
0x00003578      0f94c2         sete dl
0x0000357b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003580      0f85940b0000   jne 0x411a
0x00003586      4489c0         mov eax, r8d
0x00003589      4c89f9         mov rcx, r15
0x0000358c      83f001         xor eax, 1
0x0000358f      20d0           and al, dl
0x00003591      742d           je 0x35c0
0x00003593      4d39fd         cmp r13, r15
0x00003596      7605           jbe 0x359d
0x00003598      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000359d      498d4f01       lea rcx, [r15 + 1]
0x000035a1      4939cd         cmp r13, rcx
0x000035a4      7606           jbe 0x35ac
0x000035a6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000035ac      498d4f02       lea rcx, [r15 + 2]
0x000035b0      4939cd         cmp r13, rcx
0x000035b3      0f8730060000   ja 0x3be9
0x000035b9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x000035bd      4189c0         mov r8d, eax
0x000035c0      4939cd         cmp r13, rcx
0x000035c3      7605           jbe 0x35ca
0x000035c5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000035ca      837c240802     cmp dword [rsp + 8], 2
0x000035cf      4c8d7901       lea r15, [rcx + 1]
0x000035d3      0f8400060000   je 0x3bd9
0x000035d9      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000035dd      4c39d8         cmp rax, r11
0x000035e0      7319           jae 0x35fb                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x000035e2      488b442410     mov rax, qword [rsp + 0x10]
0x000035e7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x000035ec      88442428       mov byte [rsp + 0x28], al
0x000035f0      83e830         sub eax, 0x30
0x000035f3      3c09           cmp al, 9
0x000035f5      0f862e080000   jbe 0x3e29
0x000035fb      4489e0         mov eax, r12d
0x000035fe      bb30000000     mov ebx, 0x30                           ; '0'
0x00003603      4531e4         xor r12d, r12d
0x00003606      e9adfbffff     jmp 0x31b8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000360b      0f1f440000     nop dword [rax + rax]
0x00003610      837c240802     cmp dword [rsp + 8], 2
0x00003615      4589d4         mov r12d, r10d
0x00003618      0f94c2         sete dl
0x0000361b      4531d2         xor r10d, r10d
0x0000361e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003620      e993fbffff     jmp 0x31b8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003625      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003628      837c240802     cmp dword [rsp + 8], 2
0x0000362d      0f94c2         sete dl
0x00003630      4531d2         xor r10d, r10d
0x00003633      e9c0fdffff     jmp 0x33f8
0x00003638      0f1f84000000.  nop dword [rax + rax]
0x00003640      837c240802     cmp dword [rsp + 8], 2
0x00003645      0f94c2         sete dl
0x00003648      4531d2         xor r10d, r10d
0x0000364b      4531e4         xor r12d, r12d
0x0000364e      e9aefdffff     jmp 0x3401
0x00003653      0f1f440000     nop dword [rax + rax]
0x00003658      837c240802     cmp dword [rsp + 8], 2
0x0000365d      4589d4         mov r12d, r10d
0x00003660      bb20000000     mov ebx, 0x20                           ; "@"
0x00003665      0f94c2         sete dl
0x00003668      4531d2         xor r10d, r10d
0x0000366b      e991fdffff     jmp 0x3401
0x00003670      ba0d000000     mov edx, 0xd
0x00003675      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003678      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000367d      e930fcffff     jmp 0x32b2
0x00003682      660f1f440000   nop word [rax + rax]
0x00003688      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000368d      e99efcffff     jmp 0x3330
0x00003692      660f1f440000   nop word [rax + rax]
0x00003698      ba09000000     mov edx, 9
0x0000369d      4531d2         xor r10d, r10d
0x000036a0      bb74000000     mov ebx, 0x74                           ; 't'
0x000036a5      e908fcffff     jmp 0x32b2
0x000036aa      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x000036b0      bb62000000     mov ebx, 0x62                           ; 'b'
0x000036b5      e976fcffff     jmp 0x3330
0x000036ba      660f1f440000   nop word [rax + rax]
0x000036c0      4531d2         xor r10d, r10d
0x000036c3      e998faffff     jmp 0x3160
0x000036c8      0f1f84000000.  nop dword [rax + rax]
0x000036d0      807c240f00     cmp byte [rsp + 0xf], 0
0x000036d5      0f8565090000   jne 0x4040
0x000036db      4883c501       add rbp, 1
0x000036df      4489c0         mov eax, r8d
0x000036e2      4531e4         xor r12d, r12d
0x000036e5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000036ea      e90dfbffff     jmp 0x31fc
0x000036ef      90             nop
0x000036f0      837c240802     cmp dword [rsp + 8], 2
0x000036f5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000036fa      4589c4         mov r12d, r8d
0x000036fd      4c89dd         mov rbp, r11
0x00003700      0f94c2         sete dl
0x00003703      89d8           mov eax, ebx
0x00003705      4d85ff         test r15, r15
0x00003708      0f94c1         sete cl
0x0000370b      21d0           and eax, edx
0x0000370d      20c8           and al, cl
0x0000370f      0f85610a0000   jne 0x4176                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003715      89d8           mov eax, ebx
0x00003717      83f001         xor eax, 1
0x0000371a      20c2           and dl, al
0x0000371c      0f846a090000   je 0x408c
0x00003722      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003727      0f845d090000   je 0x408a
0x0000372d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003732      0f85f5090000   jne 0x412d
0x00003738      4d85ed         test r13, r13
0x0000373b      0f94c0         sete al
0x0000373e      48837c245000   cmp qword [rsp + 0x50], 0
0x00003744      0f95c2         setne dl
0x00003747      20d0           and al, dl
0x00003749      0f841d0a0000   je 0x416c
0x0000374f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003754      488d1d622c00.  lea rbx, [0x000063bd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000375b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000375f      c74424080200.  mov dword [rsp + 8], 2
0x00003767      41bf01000000   mov r15d, 1
0x0000376d      48c744241801.  mov qword [rsp + 0x18], 1
0x00003776      c644240f00     mov byte [rsp + 0xf], 0
0x0000377b      48895c2448     mov qword [rsp + 0x48], rbx
0x00003780      8844247c       mov byte [rsp + 0x7c], al
0x00003784      e9daf8ffff     jmp 0x3063
0x00003789      0f1f80000000.  nop dword [rax]
0x00003790      807c240f00     cmp byte [rsp + 0xf], 0
0x00003795      0f85a5080000   jne 0x4040
0x0000379b      4d85ed         test r13, r13
0x0000379e      0f84fc030000   je 0x3ba0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x000037a4      31d2           xor edx, edx
0x000037a6      48837c245000   cmp qword [rsp + 0x50], 0
0x000037ac      0f85ee030000   jne 0x3ba0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000037b2      4c896c2450     mov qword [rsp + 0x50], r13
0x000037b7      4983c703       add r15, 3
0x000037bb      31c0           xor eax, eax
0x000037bd      448864247c     mov byte [rsp + 0x7c], r12b
0x000037c2      4531c0         xor r8d, r8d
0x000037c5      4989d5         mov r13, rdx
0x000037c8      bb27000000     mov ebx, 0x27                           ; '''
0x000037cd      e917faffff     jmp 0x31e9
0x000037d2      660f1f440000   nop word [rax + rax]
0x000037d8      f644247804     test byte [rsp + 0x78], 4
0x000037dd      7421           je 0x3800
0x000037df      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x000037e3      4c39d9         cmp rcx, r11
0x000037e6      7318           jae 0x3800
0x000037e8      488b442410     mov rax, qword [rsp + 0x10]
0x000037ed      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x000037f2      0f848a070000   je 0x3f82
0x000037f8      0f1f84000000.  nop dword [rax + rax]
0x00003800      31d2           xor edx, edx
0x00003802      4531e4         xor r12d, r12d
0x00003805      31c0           xor eax, eax
0x00003807      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000380c      e9a7f9ffff     jmp 0x31b8
0x00003811      0f1f80000000.  nop dword [rax]
0x00003818      807c240f00     cmp byte [rsp + 0xf], 0
0x0000381d      0f851d080000   jne 0x4040
0x00003823      4531e4         xor r12d, r12d
0x00003826      31c0           xor eax, eax
0x00003828      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000382d      e9b7f9ffff     jmp 0x31e9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003832      660f1f440000   nop word [rax + rax]
0x00003838      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003840      4983fbff       cmp r11, 0xffffffffffffffff
0x00003844      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003850      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003855      752d           jne 0x3884
0x00003857      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000385c      4488442440     mov byte [rsp + 0x40], r8b
0x00003861      4488542438     mov byte [rsp + 0x38], r10b
0x00003866      4c894c2430     mov qword [rsp + 0x30], r9
0x0000386b      e820ddffff     call sym.imp.strlen
0x00003870      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003876      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000387c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000387f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003884      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000388c      31c9           xor ecx, ecx
0x0000388e      885c247e       mov byte [rsp + 0x7e], bl
0x00003892      448844247d     mov byte [rsp + 0x7d], r8b
0x00003897      4889cb         mov rbx, rcx
0x0000389a      4c898c248800.  mov qword [rsp + 0x88], r9
0x000038a2      4889442438     mov qword [rsp + 0x38], rax
0x000038a7      448854247f     mov byte [rsp + 0x7f], r10b
0x000038ac      4c89bc248000.  mov qword [rsp + 0x80], r15
0x000038b4      4c89742440     mov qword [rsp + 0x40], r14
0x000038b9      4c896c2470     mov qword [rsp + 0x70], r13
0x000038be      4c895c2430     mov qword [rsp + 0x30], r11
0x000038c3      488b442410     mov rax, qword [rsp + 0x10]
0x000038c8      4c8d741d00     lea r14, [rbp + rbx]
0x000038cd      488b542430     mov rdx, qword [rsp + 0x30]
0x000038d2      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000038d7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000038dc      4e8d2c30       lea r13, [rax + r14]
0x000038e0      4c29f2         sub rdx, r14
0x000038e3      4c89ee         mov rsi, r13
0x000038e6      e865210000     call sym.rpl_mbrtowc
0x000038eb      4885c0         test rax, rax
0x000038ee      4989c7         mov r15, rax
0x000038f1      744e           je 0x3941
0x000038f3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000038f7      0f8418060000   je 0x3f15
0x000038fd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003901      0f849a050000   je 0x3ea1
0x00003907      837c240802     cmp dword [rsp + 8], 2
0x0000390c      0f94c0         sete al
0x0000390f      2244240f       and al, byte [rsp + 0xf]
0x00003913      0f8597010000   jne 0x3ab0
0x00003919      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003920      e8abdeffff     call sym.imp.iswprint
0x00003925      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000392a      85c0           test eax, eax
0x0000392c      b800000000     mov eax, 0
0x00003931      440f44e0       cmove r12d, eax
0x00003935      4c01fb         add rbx, r15
0x00003938      e883deffff     call sym.imp.mbsinit
0x0000393d      85c0           test eax, eax
0x0000393f      7482           je 0x38c3
0x00003941      4489e2         mov edx, r12d
0x00003944      4889df         mov rdi, rbx
0x00003947      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000394d      83f201         xor edx, 1
0x00003950      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003955      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000395b      2254240d       and dl, byte [rsp + 0xd]
0x0000395f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003967      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000396c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003971      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003976      4883ff01       cmp rdi, 1
0x0000397a      0f86fb050000   jbe 0x3f7b
0x00003980      4889f9         mov rcx, rdi
0x00003983      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003985      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000398b      4801e9         add rcx, rbp
0x0000398e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003993      e9b6000000     jmp 0x3a4e
0x00003998      0f1f84000000.  nop dword [rax + rax]
0x000039a0      837c240802     cmp dword [rsp + 8], 2
0x000039a5      0f94c0         sete al
0x000039a8      4584c9         test r9b, r9b
0x000039ab      0f85af040000   jne 0x3e60
0x000039b1      4489c6         mov esi, r8d
0x000039b4      83f601         xor esi, 1
0x000039b7      4020f0         and al, sil
0x000039ba      742f           je 0x39eb                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x000039bc      4d39fd         cmp r13, r15
0x000039bf      7605           jbe 0x39c6
0x000039c1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000039c6      498d7701       lea rsi, [r15 + 1]
0x000039ca      4939f5         cmp r13, rsi
0x000039cd      7606           jbe 0x39d5                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x000039cf      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000039d5      498d7702       lea rsi, [r15 + 2]
0x000039d9      4939f5         cmp r13, rsi
0x000039dc      7606           jbe 0x39e4
0x000039de      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000039e4      4983c703       add r15, 3
0x000039e8      4189c0         mov r8d, eax
0x000039eb      4d39fd         cmp r13, r15
0x000039ee      7605           jbe 0x39f5
0x000039f0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000039f5      498d4701       lea rax, [r15 + 1]
0x000039f9      4939c5         cmp r13, rax
0x000039fc      760d           jbe 0x3a0b
0x000039fe      89d8           mov eax, ebx
0x00003a00      c0e806         shr al, 6
0x00003a03      83c030         add eax, 0x30
0x00003a06      4388443e01     mov byte [r14 + r15 + 1], al
0x00003a0b      498d4702       lea rax, [r15 + 2]
0x00003a0f      4939c5         cmp r13, rax
0x00003a12      7610           jbe 0x3a24
0x00003a14      89d8           mov eax, ebx
0x00003a16      c0e803         shr al, 3
0x00003a19      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00003a1c      83c030         add eax, 0x30
0x00003a1f      4388443e02     mov byte [r14 + r15 + 2], al
0x00003a24      83e307         and ebx, 7
0x00003a27      4883c501       add rbp, 1
0x00003a2b      4983c703       add r15, 3
0x00003a2f      83c330         add ebx, 0x30
0x00003a32      4839cd         cmp rbp, rcx
0x00003a35      0f83e5f7ffff   jae 0x3220
0x00003a3b      89d6           mov esi, edx
0x00003a3d      4d39fd         cmp r13, r15
0x00003a40      7604           jbe 0x3a46
0x00003a42      43881c3e       mov byte [r14 + r15], bl
0x00003a46      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003a4a      4983c701       add r15, 1
0x00003a4e      84d2           test dl, dl
0x00003a50      0f854affffff   jne 0x39a0
0x00003a56      89f0           mov eax, esi
0x00003a58      83f001         xor eax, 1
0x00003a5b      4421c0         and eax, r8d
0x00003a5e      4584d2         test r10b, r10b
0x00003a61      740e           je 0x3a71
0x00003a63      4d39fd         cmp r13, r15
0x00003a66      7605           jbe 0x3a6d
0x00003a68      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003a6d      4983c701       add r15, 1
0x00003a71      4883c501       add rbp, 1
0x00003a75      4839cd         cmp rbp, rcx
0x00003a78      0f837ef7ffff   jae 0x31fc
0x00003a7e      84c0           test al, al
0x00003a80      0f84f8030000   je 0x3e7e
0x00003a86      4d39fd         cmp r13, r15
0x00003a89      7605           jbe 0x3a90
0x00003a8b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003a90      498d4701       lea rax, [r15 + 1]
0x00003a94      4939c5         cmp r13, rax
0x00003a97      7606           jbe 0x3a9f
0x00003a99      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003a9f      4983c702       add r15, 2
0x00003aa3      4531d2         xor r10d, r10d
0x00003aa6      4531c0         xor r8d, r8d
0x00003aa9      eb92           jmp 0x3a3d
0x00003aab      0f1f440000     nop dword [rax + rax]
0x00003ab0      4983ff01       cmp r15, 1
0x00003ab4      0f845ffeffff   je 0x3919
0x00003aba      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003abf      4a8d0c3f       lea rcx, [rdi + r15]
0x00003ac3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003ac8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003acc      eb0f           jmp 0x3add
0x00003ace      6690           nop
0x00003ad0      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003ad4      4939d0         cmp r8, rdx
0x00003ad7      0f843cfeffff   je 0x3919
0x00003add      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00003ae0      83e95b         sub ecx, 0x5b
0x00003ae3      80f921         cmp cl, 0x21
0x00003ae6      77e8           ja 0x3ad0                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00003ae8      be01000000     mov esi, 1
0x00003aed      48d3e6         shl rsi, cl
0x00003af0      4889f1         mov rcx, rsi
0x00003af3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00003afd      4885f1         test rcx, rsi
0x00003b00      74ce           je 0x3ad0
0x00003b02      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003b07      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003b0c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00003b11      c74424080200.  mov dword [rsp + 8], 2
0x00003b19      807c240d00     cmp byte [rsp + 0xd], 0
0x00003b1e      7410           je 0x3b30
0x00003b20      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00003b22      b804000000     mov eax, 4
0x00003b27      0f44442408     cmove eax, dword [rsp + 8]
0x00003b2c      89442408       mov dword [rsp + 8], eax
0x00003b30      4883ec08       sub rsp, 8
0x00003b34      4889e9         mov rcx, rbp
0x00003b37      4c89ee         mov rsi, r13
0x00003b3a      ff742468       push qword [rsp + 0x68]
0x00003b3e      ff742478       push qword [rsp + 0x78]
0x00003b42      4c89f7         mov rdi, r14
0x00003b45      6a00           push 0
0x00003b47      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003b4f      448b442428     mov r8d, dword [rsp + 0x28]
0x00003b54      488b542430     mov rdx, qword [rsp + 0x30]
0x00003b59      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00003b5d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00003b62      4883c420       add rsp, 0x20
0x00003b66      4989c7         mov r15, rax
0x00003b69      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003b71      6448331c2528.  xor rbx, qword fs:[0x28]
0x00003b7a      4c89f8         mov rax, r15
0x00003b7d      0f8500060000   jne 0x4183
0x00003b83      4881c4b80000.  add rsp, 0xb8
0x00003b8a      5b             pop rbx
0x00003b8b      5d             pop rbp
0x00003b8c      415c           pop r12
0x00003b8e      415d           pop r13
0x00003b90      415e           pop r14
0x00003b92      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003b94      c3             ret
0x00003b95      0f1f00         nop dword [rax]
0x00003b98      4c89dd         mov rbp, r11
0x00003b9b      e979ffffff     jmp 0x3b19
0x00003ba0      4d39fd         cmp r13, r15
0x00003ba3      7605           jbe 0x3baa
0x00003ba5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003baa      498d4701       lea rax, [r15 + 1]
0x00003bae      4939c5         cmp r13, rax
0x00003bb1      7606           jbe 0x3bb9
0x00003bb3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003bb9      498d4702       lea rax, [r15 + 2]
0x00003bbd      4939c5         cmp r13, rax
0x00003bc0      0f86ec050000   jbe 0x41b2
0x00003bc6      4c89ea         mov rdx, r13
0x00003bc9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003bcf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003bd4      e9d9fbffff     jmp 0x37b2
0x00003bd9      4489e0         mov eax, r12d
0x00003bdc      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00003be1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00003be4      e900f6ffff     jmp 0x31e9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00003be9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003bef      e9c5f9ffff     jmp 0x35b9
0x00003bf4      85db           test ebx, ebx
0x00003bf6      0f8527f4ffff   jne 0x3023
0x00003bfc      c644240d01     mov byte [rsp + 0xd], 1
0x00003c01      4d85ed         test r13, r13
0x00003c04      0f8590050000   jne 0x419a
0x00003c0a      488d05ac2700.  lea rax, [0x000063bd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003c11      48c744245000.  mov qword [rsp + 0x50], 0
0x00003c1a      c644240e01     mov byte [rsp + 0xe], 1
0x00003c1f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003c24      4531e4         xor r12d, r12d
0x00003c27      c644240f00     mov byte [rsp + 0xf], 0
0x00003c2c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003c35      4889442448     mov qword [rsp + 0x48], rax
0x00003c3a      41bf01000000   mov r15d, 1
0x00003c40      c74424080200.  mov dword [rsp + 8], 2
0x00003c48      e916f4ffff     jmp 0x3063                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00003c4d      0f1f00         nop dword [rax]
0x00003c50      85db           test ebx, ebx
0x00003c52      0f85f5030000   jne 0x404d
0x00003c58      4d85ed         test r13, r13
0x00003c5b      0f8425020000   je 0x3e86
0x00003c61      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003c65      c644240e01     mov byte [rsp + 0xe], 1
0x00003c6a      4531e4         xor r12d, r12d
0x00003c6d      c644247c00     mov byte [rsp + 0x7c], 0
0x00003c72      48c744245000.  mov qword [rsp + 0x50], 0
0x00003c7b      488d05392700.  lea rax, str.l______l                   ; 0x63bb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003c82      c644240f00     mov byte [rsp + 0xf], 0
0x00003c87      c644240d01     mov byte [rsp + 0xd], 1
0x00003c8c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003c95      41bf01000000   mov r15d, 1
0x00003c9b      4889442448     mov qword [rsp + 0x48], rax
0x00003ca0      e9bef3ffff     jmp 0x3063
0x00003ca5      488d050f2700.  lea rax, str.l______l                   ; 0x63bb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003cac      c644240e01     mov byte [rsp + 0xe], 1
0x00003cb1      c644247c00     mov byte [rsp + 0x7c], 0
0x00003cb6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003cb9      48c744245000.  mov qword [rsp + 0x50], 0
0x00003cc2      c644240f01     mov byte [rsp + 0xf], 1
0x00003cc7      c644240d01     mov byte [rsp + 0xd], 1
0x00003ccc      48c744241801.  mov qword [rsp + 0x18], 1
0x00003cd5      4531ff         xor r15d, r15d
0x00003cd8      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00003cdd      c74424080500.  mov dword [rsp + 8], 5
0x00003ce5      e979f3ffff     jmp 0x3063
0x00003cea      c644240e01     mov byte [rsp + 0xe], 1
0x00003cef      c644247c00     mov byte [rsp + 0x7c], 0
0x00003cf4      4531e4         xor r12d, r12d
0x00003cf7      48c744245000.  mov qword [rsp + 0x50], 0
0x00003d00      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00003d05      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00003d08      c644240d01     mov byte [rsp + 0xd], 1
0x00003d0d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003d16      48c744244800.  mov qword [rsp + 0x48], 0
0x00003d1f      e93ff3ffff     jmp 0x3063
0x00003d24      837c24080a     cmp dword [rsp + 8], 0xa
0x00003d29      7456           je 0x3d81
0x00003d2b      488d358d2600.  lea rsi, [0x000063bf]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00003d32      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00003d34      ba05000000     mov edx, 5
0x00003d39      e832d8ffff     call sym.imp.dcgettext
0x00003d3e      4889c1         mov rcx, rax
0x00003d41      4889442468     mov qword [rsp + 0x68], rax
0x00003d46      488d05722600.  lea rax, [0x000063bf]                   ; "`"
0x00003d4d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00003d50      0f8498030000   je 0x40ee
0x00003d56      488d35602600.  lea rsi, [0x000063bd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003d5d      31ff           xor edi, edi
0x00003d5f      ba05000000     mov edx, 5
0x00003d64      e807d8ffff     call sym.imp.dcgettext
0x00003d69      4889c1         mov rcx, rax
0x00003d6c      4889442460     mov qword [rsp + 0x60], rax
0x00003d71      488d05452600.  lea rax, [0x000063bd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003d78      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00003d7b      0f8483030000   je 0x4104
0x00003d81      4531ff         xor r15d, r15d
0x00003d84      85db           test ebx, ebx
0x00003d86      0f84c1010000   je 0x3f4d
0x00003d8c      85db           test ebx, ebx
0x00003d8e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00003d93      0f9544240f     setne byte [rsp + 0xf]
0x00003d98      4531e4         xor r12d, r12d
0x00003d9b      4889df         mov rdi, rbx
0x00003d9e      e8edd7ffff     call sym.imp.strlen
0x00003da3      48895c2448     mov qword [rsp + 0x48], rbx
0x00003da8      4889442418     mov qword [rsp + 0x18], rax
0x00003dad      c644240e01     mov byte [rsp + 0xe], 1
0x00003db2      c644247c00     mov byte [rsp + 0x7c], 0
0x00003db7      48c744245000.  mov qword [rsp + 0x50], 0
0x00003dc0      c644240d01     mov byte [rsp + 0xd], 1
0x00003dc5      e999f2ffff     jmp 0x3063
0x00003dca      c644240e01     mov byte [rsp + 0xe], 1
0x00003dcf      c644247c00     mov byte [rsp + 0x7c], 0
0x00003dd4      4531e4         xor r12d, r12d
0x00003dd7      48c744245000.  mov qword [rsp + 0x50], 0
0x00003de0      c644240f00     mov byte [rsp + 0xf], 0
0x00003de5      4531ff         xor r15d, r15d
0x00003de8      c644240d00     mov byte [rsp + 0xd], 0
0x00003ded      48c744241800.  mov qword [rsp + 0x18], 0
0x00003df6      48c744244800.  mov qword [rsp + 0x48], 0
0x00003dff      e95ff2ffff     jmp 0x3063
0x00003e04      c644240e01     mov byte [rsp + 0xe], 1
0x00003e09      c644247c00     mov byte [rsp + 0x7c], 0
0x00003e0e      4531e4         xor r12d, r12d
0x00003e11      48c744245000.  mov qword [rsp + 0x50], 0
0x00003e1a      c644240f01     mov byte [rsp + 0xf], 1
0x00003e1f      c644240d01     mov byte [rsp + 0xd], 1
0x00003e24      e91af2ffff     jmp 0x3043
0x00003e29      4d39fd         cmp r13, r15
0x00003e2c      7605           jbe 0x3e33
0x00003e2e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00003e33      488d4102       lea rax, [rcx + 2]
0x00003e37      4939c5         cmp r13, rax
0x00003e3a      7606           jbe 0x3e42
0x00003e3c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00003e42      4489e0         mov eax, r12d
0x00003e45      4c8d7903       lea r15, [rcx + 3]
0x00003e49      4531e4         xor r12d, r12d
0x00003e4c      bb30000000     mov ebx, 0x30                           ; '0'
0x00003e51      e962f3ffff     jmp 0x31b8
0x00003e56      662e0f1f8400.  nop word cs:[rax + rax]
0x00003e60      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003e65      4c89dd         mov rbp, r11
0x00003e68      885c240d       mov byte [rsp + 0xd], bl
0x00003e6c      e9a8fcffff     jmp 0x3b19
0x00003e71      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003e76      4531e4         xor r12d, r12d
0x00003e79      e902fbffff     jmp 0x3980
0x00003e7e      4531d2         xor r10d, r10d
0x00003e81      e9b7fbffff     jmp 0x3a3d
0x00003e86      48c744245000.  mov qword [rsp + 0x50], 0
0x00003e8f      c644240e01     mov byte [rsp + 0xe], 1
0x00003e94      4531e4         xor r12d, r12d
0x00003e97      c644247c00     mov byte [rsp + 0x7c], 0
0x00003e9c      e9dafdffff     jmp 0x3c7b
0x00003ea1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003ea6      4c89f6         mov rsi, r14
0x00003ea9      4c89e9         mov rcx, r13
0x00003eac      4889d8         mov rax, rbx
0x00003eaf      4889df         mov rdi, rbx
0x00003eb2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003eb8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003ebd      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003ec5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003ec8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003ece      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003ed6      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003edb      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003ee0      7326           jae 0x3f08
0x00003ee2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003ee5      7510           jne 0x3ef7
0x00003ee7      eb1f           jmp 0x3f08
0x00003ee9      0f1f80000000.  nop dword [rax]
0x00003ef0      41803c0100     cmp byte [r9 + rax], 0
0x00003ef5      740e           je 0x3f05
0x00003ef7      4883c001       add rax, 1
0x00003efb      488d540500     lea rdx, [rbp + rax]
0x00003f00      4939d3         cmp r11, rdx
0x00003f03      77eb           ja 0x3ef0
0x00003f05      4889c7         mov rdi, rax
0x00003f08      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003f0d      4531e4         xor r12d, r12d
0x00003f10      e961faffff     jmp 0x3976
0x00003f15      4889df         mov rdi, rbx
0x00003f18      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003f1e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003f23      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003f29      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003f31      4531e4         xor r12d, r12d
0x00003f34      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003f39      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003f3e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003f43      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003f48      e929faffff     jmp 0x3976
0x00003f4d      488b542468     mov rdx, qword [rsp + 0x68]
0x00003f52      0fb602         movzx eax, byte [rdx]
0x00003f55      84c0           test al, al
0x00003f57      0f842ffeffff   je 0x3d8c
0x00003f5d      0f1f00         nop dword [rax]
0x00003f60      4d39fd         cmp r13, r15
0x00003f63      7604           jbe 0x3f69
0x00003f65      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00003f69      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00003f6d      420fb6043a     movzx eax, byte [rdx + r15]
0x00003f72      84c0           test al, al
0x00003f74      75ea           jne 0x3f60
0x00003f76      e911feffff     jmp 0x3d8c
0x00003f7b      89d0           mov eax, edx
0x00003f7d      e955f5ffff     jmp 0x34d7
0x00003f82      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003f86      80fb3e         cmp bl, 0x3e
0x00003f89      0f8771f8ffff   ja 0x3800
0x00003f8f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003f99      480fa3d8       bt rax, rbx
0x00003f9d      0f835df8ffff   jae 0x3800
0x00003fa3      807c240f00     cmp byte [rsp + 0xf], 0
0x00003fa8      0f85e4010000   jne 0x4192                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00003fae      4d39fd         cmp r13, r15
0x00003fb1      7605           jbe 0x3fb8
0x00003fb3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003fb8      498d4701       lea rax, [r15 + 1]
0x00003fbc      4939c5         cmp r13, rax
0x00003fbf      7606           jbe 0x3fc7
0x00003fc1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003fc7      498d4702       lea rax, [r15 + 2]
0x00003fcb      4939c5         cmp r13, rax
0x00003fce      7606           jbe 0x3fd6
0x00003fd0      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003fd6      498d4703       lea rax, [r15 + 3]
0x00003fda      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00003fdd      7606           jbe 0x3fe5
0x00003fdf      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00003fe5      4983c704       add r15, 4
0x00003fe9      31d2           xor edx, edx
0x00003feb      4531e4         xor r12d, r12d
0x00003fee      31c0           xor eax, eax
0x00003ff0      4889cd         mov rbp, rcx
0x00003ff3      e9c0f1ffff     jmp 0x31b8
0x00003ff8      85db           test ebx, ebx
0x00003ffa      0f8488010000   je 0x4188
0x00004000      488d05b62300.  lea rax, [0x000063bd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004007      c644240e01     mov byte [rsp + 0xe], 1
0x0000400c      c644247c00     mov byte [rsp + 0x7c], 0
0x00004011      4531e4         xor r12d, r12d
0x00004014      48c744245000.  mov qword [rsp + 0x50], 0
0x0000401d      c644240f01     mov byte [rsp + 0xf], 1
0x00004022      c644240d00     mov byte [rsp + 0xd], 0
0x00004027      48c744241801.  mov qword [rsp + 0x18], 1
0x00004030      4531ff         xor r15d, r15d
0x00004033      4889442448     mov qword [rsp + 0x48], rax
0x00004038      e926f0ffff     jmp 0x3063
0x0000403d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00004040      4c89dd         mov rbp, r11
0x00004043      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004048      e9ccfaffff     jmp 0x3b19
0x0000404d      488d05672300.  lea rax, str.l______l                   ; 0x63bb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004054      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00004059      c644247c00     mov byte [rsp + 0x7c], 0
0x0000405e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00004061      48c744245000.  mov qword [rsp + 0x50], 0
0x0000406a      c644240f01     mov byte [rsp + 0xf], 1
0x0000406f      c644240d01     mov byte [rsp + 0xd], 1
0x00004074      48c744241801.  mov qword [rsp + 0x18], 1
0x0000407d      4531ff         xor r15d, r15d
0x00004080      4889442448     mov qword [rsp + 0x48], rax
0x00004085      e9d9efffff     jmp 0x3063
0x0000408a      89d0           mov eax, edx
0x0000408c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00004091      4885db         test rbx, rbx
0x00004094      742c           je 0x40c2
0x00004096      84c0           test al, al
0x00004098      7428           je 0x40c2
0x0000409a      0fb60b         movzx ecx, byte [rbx]
0x0000409d      4889d8         mov rax, rbx
0x000040a0      84c9           test cl, cl
0x000040a2      741e           je 0x40c2
0x000040a4      4c89fa         mov rdx, r15
0x000040a7      4c29f8         sub rax, r15
0x000040aa      4939d5         cmp r13, rdx
0x000040ad      7604           jbe 0x40b3
0x000040af      41880c16       mov byte [r14 + rdx], cl
0x000040b3      4883c201       add rdx, 1
0x000040b7      0fb60c10       movzx ecx, byte [rax + rdx]
0x000040bb      84c9           test cl, cl
0x000040bd      75eb           jne 0x40aa
0x000040bf      4989d7         mov r15, rdx
0x000040c2      4d39fd         cmp r13, r15
0x000040c5      0f869efaffff   jbe 0x3b69
0x000040cb      43c6043e00     mov byte [r14 + r15], 0
0x000040d0      e994faffff     jmp 0x3b69
0x000040d5      837c240802     cmp dword [rsp + 8], 2
0x000040da      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000040df      4c89dd         mov rbp, r11
0x000040e2      0f94c0         sete al
0x000040e5      885c240d       mov byte [rsp + 0xd], bl
0x000040e9      e92bfaffff     jmp 0x3b19
0x000040ee      8b742408       mov esi, dword [rsp + 8]
0x000040f2      4889cf         mov rdi, rcx
0x000040f5      e8a6edffff     call sym.gettext_quote.part.1
0x000040fa      4889442468     mov qword [rsp + 0x68], rax
0x000040ff      e952fcffff     jmp 0x3d56
0x00004104      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004108      4889cf         mov rdi, rcx
0x0000410b      e890edffff     call sym.gettext_quote.part.1
0x00004110      4889442460     mov qword [rsp + 0x60], rax
0x00004115      e967fcffff     jmp 0x3d81
0x0000411a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000411f      4c89dd         mov rbp, r11
0x00004122      89d0           mov eax, edx
0x00004124      885c240d       mov byte [rsp + 0xd], bl
0x00004128      e9ecf9ffff     jmp 0x3b19
0x0000412d      4883ec08       sub rsp, 8
0x00004131      41b805000000   mov r8d, 5
0x00004137      4c89d9         mov rcx, r11
0x0000413a      ff742468       push qword [rsp + 0x68]
0x0000413e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00004142      4c89f7         mov rdi, r14
0x00004145      ff742438       push qword [rsp + 0x38]
0x00004149      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004151      488b542430     mov rdx, qword [rsp + 0x30]
0x00004156      488b742470     mov rsi, qword [rsp + 0x70]
0x0000415b      e830eeffff     call sym.quotearg_buffer_restyled
0x00004160      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00004164      4989c7         mov r15, rax
0x00004167      e9fdf9ffff     jmp 0x3b69
0x0000416c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00004171      e916ffffff     jmp 0x408c
0x00004176      c74424080200.  mov dword [rsp + 8], 2
0x0000417e      e996f9ffff     jmp 0x3b19
0x00004183      e818d4ffff     call sym.imp.__stack_chk_fail
0x00004188      c644240d00     mov byte [rsp + 0xd], 0
0x0000418d      e96ffaffff     jmp 0x3c01
0x00004192      4c89dd         mov rbp, r11
0x00004195      e996f9ffff     jmp 0x3b30
0x0000419a      c644240e01     mov byte [rsp + 0xe], 1
0x0000419f      31c0           xor eax, eax
0x000041a1      4531e4         xor r12d, r12d
0x000041a4      48c744245000.  mov qword [rsp + 0x50], 0
0x000041ad      e9a2f5ffff     jmp 0x3754
0x000041b2      4c89ea         mov rdx, r13
0x000041b5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000041ba      e9f3f5ffff     jmp 0x37b2
0x000041bf      e81cd3ffff     call sym.imp.abort
0x000041c4      6690           nop
0x000041c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x000041d0      4157           push r15
0x000041d2      4156           push r14
0x000041d4      4c63ff         movsxd r15, edi
0x000041d7      4155           push r13
0x000041d9      4154           push r12
0x000041db      4989d6         mov r14, rdx
0x000041de      55             push rbp
0x000041df      53             push rbx
0x000041e0      4889cd         mov rbp, rcx
0x000041e3      4883ec28       sub rsp, 0x28
0x000041e7      4889742408     mov qword [rsp + 8], rsi
0x000041ec      e8ffd2ffff     call sym.imp.__errno_location
0x000041f1      4989c5         mov r13, rax
0x000041f4      8b00           mov eax, dword [rax]
0x000041f6      4585ff         test r15d, r15d
0x000041f9      488b1d604e20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x00004200      89442418       mov dword [rsp + 0x18], eax
0x00004204      0f8867010000   js 0x4371
0x0000420a      44393d474e20.  cmp dword [obj.nslots], r15d            ; [0x209058:4]=1
0x00004211      7f62           jg 0x4275
0x00004213      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000421a      0f8456010000   je 0x4376
0x00004220      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004224      488d05454e20.  lea rax, obj.slotvec0                   ; 0x209070
0x0000422b      4963f4         movsxd rsi, r12d
0x0000422e      48c1e604       shl rsi, 4
0x00004232      4839c3         cmp rbx, rax
0x00004235      0f8415010000   je 0x4350
0x0000423b      4889df         mov rdi, rbx
0x0000423e      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00004243      4889c3         mov rbx, rax
0x00004246      488905134e20.  mov qword [obj.slotvec], rax            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x0000424d      48633d044e20.  movsxd rdi, dword [obj.nslots]          ; [0x209058:4]=1
0x00004254      4489e2         mov edx, r12d
0x00004257      31f6           xor esi, esi
0x00004259      29fa           sub edx, edi
0x0000425b      48c1e704       shl rdi, 4
0x0000425f      4863d2         movsxd rdx, edx
0x00004262      4801df         add rdi, rbx
0x00004265      48c1e204       shl rdx, 4
0x00004269      e8c2d3ffff     call sym.imp.memset
0x0000426e      448925e34d20.  mov dword [obj.nslots], r12d            ; [0x209058:4]=1
0x00004275      8b4504         mov eax, dword [rbp + 4]
0x00004278      49c1e704       shl r15, 4
0x0000427c      4883ec08       sub rsp, 8
0x00004280      4c01fb         add rbx, r15
0x00004283      4c8d7d08       lea r15, [rbp + 8]
0x00004287      448b4500       mov r8d, dword [rbp]
0x0000428b      4c8b1b         mov r11, qword [rbx]
0x0000428e      4c8b6308       mov r12, qword [rbx + 8]
0x00004292      4c89f1         mov rcx, r14
0x00004295      83c801         or eax, 1
0x00004298      89442424       mov dword [rsp + 0x24], eax
0x0000429c      ff7530         push qword [rbp + 0x30]
0x0000429f      4189c1         mov r9d, eax
0x000042a2      ff7528         push qword [rbp + 0x28]
0x000042a5      4157           push r15
0x000042a7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000042aa      488b542428     mov rdx, qword [rsp + 0x28]
0x000042af      4c89e7         mov rdi, r12
0x000042b2      4c895c2430     mov qword [rsp + 0x30], r11
0x000042b7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x000042bc      4883c420       add rsp, 0x20
0x000042c0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x000042c5      4939c3         cmp r11, rax
0x000042c8      7767           ja 0x4331
0x000042ca      488d7001       lea rsi, [rax + 1]
0x000042ce      488d052b4e20.  lea rax, obj.slot0                      ; 0x209100
0x000042d5      4939c4         cmp r12, rax
0x000042d8      488933         mov qword [rbx], rsi
0x000042db      7412           je 0x42ef
0x000042dd      4c89e7         mov rdi, r12
0x000042e0      4889742410     mov qword [rsp + 0x10], rsi
0x000042e5      e8e6d1ffff     call sym.imp.free
0x000042ea      488b742410     mov rsi, qword [rsp + 0x10]
0x000042ef      4889f7         mov rdi, rsi
0x000042f2      4889742410     mov qword [rsp + 0x10], rsi
0x000042f7      e8540e0000     call sym.xmalloc
0x000042fc      4883ec08       sub rsp, 8
0x00004300      48894308       mov qword [rbx + 8], rax
0x00004304      448b4500       mov r8d, dword [rbp]
0x00004308      ff7530         push qword [rbp + 0x30]
0x0000430b      ff7528         push qword [rbp + 0x28]
0x0000430e      4c89f1         mov rcx, r14
0x00004311      4157           push r15
0x00004313      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004318      4889c7         mov rdi, rax
0x0000431b      488b542428     mov rdx, qword [rsp + 0x28]
0x00004320      488b742430     mov rsi, qword [rsp + 0x30]
0x00004325      4989c4         mov r12, rax
0x00004328      e863ecffff     call sym.quotearg_buffer_restyled
0x0000432d      4883c420       add rsp, 0x20
0x00004331      8b442418       mov eax, dword [rsp + 0x18]
0x00004335      41894500       mov dword [r13], eax
0x00004339      4883c428       add rsp, 0x28
0x0000433d      4c89e0         mov rax, r12
0x00004340      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004341      5d             pop rbp
0x00004342      415c           pop r12
0x00004344      415d           pop r13
0x00004346      415e           pop r14
0x00004348      415f           pop r15
0x0000434a      c3             ret
0x0000434b      0f1f440000     nop dword [rax + rax]
0x00004350      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004352      e8590e0000     call sym.xrealloc
0x00004357      660f6f05114d.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000435f      4889c3         mov rbx, rax
0x00004362      488905f74c20.  mov qword [obj.slotvec], rax            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x00004369      0f1100         movups xmmword [rax], xmm0
0x0000436c      e9dcfeffff     jmp 0x424d
0x00004371      e86ad1ffff     call sym.imp.abort
0x00004376      e825100000     call sym.xalloc_die
0x0000437b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004380      4154           push r12
0x00004382      55             push rbp
0x00004383      53             push rbx
0x00004384      4889fb         mov rbx, rdi
0x00004387      e864d1ffff     call sym.imp.__errno_location
0x0000438c      448b20         mov r12d, dword [rax]
0x0000438f      4889c5         mov rbp, rax
0x00004392      488d05674e20.  lea rax, obj.default_quoting_options    ; 0x209200
0x00004399      4885db         test rbx, rbx
0x0000439c      be38000000     mov esi, 0x38                           ; '8'
0x000043a1      480f44d8       cmove rbx, rax
0x000043a5      4889df         mov rdi, rbx
0x000043a8      e8a30f0000     call sym.xmemdup
0x000043ad      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000043b1      5b             pop rbx
0x000043b2      5d             pop rbp
0x000043b3      415c           pop r12
0x000043b5      c3             ret
0x000043b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x000043c0      488d05394e20.  lea rax, obj.default_quoting_options    ; 0x209200
0x000043c7      4885ff         test rdi, rdi
0x000043ca      480f44f8       cmove rdi, rax
0x000043ce      8b07           mov eax, dword [rdi]
0x000043d0      c3             ret
0x000043d1      0f1f440000     nop dword [rax + rax]
0x000043d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x000043e0      488d05194e20.  lea rax, obj.default_quoting_options    ; 0x209200
0x000043e7      4885ff         test rdi, rdi
0x000043ea      480f44f8       cmove rdi, rax
0x000043ee      8937           mov dword [rdi], esi
0x000043f0      c3             ret
0x000043f1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000043f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004400      488d05f94d20.  lea rax, obj.default_quoting_options    ; 0x209200
0x00004407      4885ff         test rdi, rdi
0x0000440a      89f1           mov ecx, esi
0x0000440c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004410      89f0           mov eax, esi
0x00004412      83e11f         and ecx, 0x1f
0x00004415      c0e805         shr al, 5
0x00004418      0fb6c0         movzx eax, al
0x0000441b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004420      8b37           mov esi, dword [rdi]
0x00004422      89f0           mov eax, esi
0x00004424      d3e8           shr eax, cl
0x00004426      31c2           xor edx, eax
0x00004428      83e001         and eax, 1
0x0000442b      83e201         and edx, 1
0x0000442e      d3e2           shl edx, cl
0x00004430      31f2           xor edx, esi
0x00004432      8917           mov dword [rdi], edx
0x00004434      c3             ret
0x00004435      90             nop
0x00004436      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004440      488d05b94d20.  lea rax, obj.default_quoting_options    ; 0x209200
0x00004447      4885ff         test rdi, rdi
0x0000444a      480f44f8       cmove rdi, rax
0x0000444e      8b4704         mov eax, dword [rdi + 4]
0x00004451      897704         mov dword [rdi + 4], esi
0x00004454      c3             ret
0x00004455      90             nop
0x00004456      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004460      488d05994d20.  lea rax, obj.default_quoting_options    ; 0x209200
0x00004467      4885ff         test rdi, rdi
0x0000446a      480f44f8       cmove rdi, rax
0x0000446e      4885f6         test rsi, rsi
0x00004471      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004477      740e           je 0x4487
0x00004479      4885d2         test rdx, rdx
0x0000447c      7409           je 0x4487
0x0000447e      48897728       mov qword [rdi + 0x28], rsi
0x00004482      48895730       mov qword [rdi + 0x30], rdx
0x00004486      c3             ret
0x00004487      4883ec08       sub rsp, 8
0x0000448b      e850d0ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004490      4157           push r15
0x00004492      4156           push r14
0x00004494      488d05654d20.  lea rax, obj.default_quoting_options    ; 0x209200
0x0000449b      4155           push r13
0x0000449d      4154           push r12
0x0000449f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x000044a2      55             push rbp
0x000044a3      53             push rbx
0x000044a4      4c89c3         mov rbx, r8
0x000044a7      4989f6         mov r14, rsi
0x000044aa      4989d7         mov r15, rdx
0x000044ad      4883ec18       sub rsp, 0x18
0x000044b1      4d85c0         test r8, r8
0x000044b4      480f44d8       cmove rbx, rax
0x000044b8      48894c2408     mov qword [rsp + 8], rcx
0x000044bd      e82ed0ffff     call sym.imp.__errno_location
0x000044c2      448b20         mov r12d, dword [rax]
0x000044c5      4889c5         mov rbp, rax
0x000044c8      488d4308       lea rax, [rbx + 8]
0x000044cc      4883ec08       sub rsp, 8
0x000044d0      448b4b04       mov r9d, dword [rbx + 4]
0x000044d4      ff7330         push qword [rbx + 0x30]
0x000044d7      448b03         mov r8d, dword [rbx]
0x000044da      ff7328         push qword [rbx + 0x28]
0x000044dd      4c89fa         mov rdx, r15
0x000044e0      50             push rax
0x000044e1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000044e6      4c89f6         mov rsi, r14
0x000044e9      4c89ef         mov rdi, r13
0x000044ec      e89feaffff     call sym.quotearg_buffer_restyled
0x000044f1      44896500       mov dword [rbp], r12d
0x000044f5      4883c438       add rsp, 0x38
0x000044f9      5b             pop rbx
0x000044fa      5d             pop rbp
0x000044fb      415c           pop r12
0x000044fd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000044ff      415e           pop r14
0x00004501      415f           pop r15
0x00004503      c3             ret
0x00004504      6690           nop
0x00004506      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004510      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004512      4156           push r14
0x00004514      488d05e54c20.  lea rax, obj.default_quoting_options    ; 0x209200
0x0000451b      4155           push r13
0x0000451d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000451f      4989d4         mov r12, rdx
0x00004522      55             push rbp
0x00004523      53             push rbx
0x00004524      4889cb         mov rbx, rcx
0x00004527      4989fe         mov r14, rdi
0x0000452a      4989f7         mov r15, rsi
0x0000452d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004531      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004534      480f44d8       cmove rbx, rax
0x00004538      31ed           xor ebp, ebp
0x0000453a      e8b1cfffff     call sym.imp.__errno_location
0x0000453f      4d85e4         test r12, r12
0x00004542      4989c5         mov r13, rax
0x00004545      8b00           mov eax, dword [rax]
0x00004547      400f94c5       sete bpl
0x0000454b      0b6b04         or ebp, dword [rbx + 4]
0x0000454e      4c8d5308       lea r10, [rbx + 8]
0x00004552      4883ec08       sub rsp, 8
0x00004556      448b03         mov r8d, dword [rbx]
0x00004559      4c89f9         mov rcx, r15
0x0000455c      89442414       mov dword [rsp + 0x14], eax
0x00004560      ff7330         push qword [rbx + 0x30]
0x00004563      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004566      ff7328         push qword [rbx + 0x28]
0x00004569      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000456b      31f6           xor esi, esi
0x0000456d      4189e9         mov r9d, ebp
0x00004570      31ff           xor edi, edi
0x00004572      4c89542440     mov qword [rsp + 0x40], r10
0x00004577      e814eaffff     call sym.quotearg_buffer_restyled
0x0000457c      488d7001       lea rsi, [rax + 1]
0x00004580      4889442448     mov qword [rsp + 0x48], rax
0x00004585      4883c420       add rsp, 0x20
0x00004589      4889f7         mov rdi, rsi
0x0000458c      4889742418     mov qword [rsp + 0x18], rsi
0x00004591      e8ba0b0000     call sym.xmalloc
0x00004596      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000459b      4883ec08       sub rsp, 8
0x0000459f      ff7330         push qword [rbx + 0x30]
0x000045a2      ff7328         push qword [rbx + 0x28]
0x000045a5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000045aa      4189e9         mov r9d, ebp
0x000045ad      448b03         mov r8d, dword [rbx]
0x000045b0      4c89f9         mov rcx, r15
0x000045b3      4c89f2         mov rdx, r14
0x000045b6      4889c7         mov rdi, rax
0x000045b9      4152           push r10
0x000045bb      488b742438     mov rsi, qword [rsp + 0x38]
0x000045c0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x000045c5      8b44242c       mov eax, dword [rsp + 0x2c]
0x000045c9      4883c420       add rsp, 0x20
0x000045cd      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x000045d0      41894500       mov dword [r13], eax
0x000045d4      7409           je 0x45df
0x000045d6      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x000045db      4d891c24       mov qword [r12], r11
0x000045df      488b442410     mov rax, qword [rsp + 0x10]
0x000045e4      4883c438       add rsp, 0x38
0x000045e8      5b             pop rbx
0x000045e9      5d             pop rbp
0x000045ea      415c           pop r12
0x000045ec      415d           pop r13
0x000045ee      415e           pop r14
0x000045f0      415f           pop r15
0x000045f2      c3             ret
0x000045f3      0f1f00         nop dword [rax]
0x000045f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004600      4889d1         mov rcx, rdx
0x00004603      31d2           xor edx, edx
0x00004605      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000460a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004610      8b05424a2000   mov eax, dword [obj.nslots]             ; [0x209058:4]=1
0x00004616      4154           push r12
0x00004618      4c8b25414a20.  mov r12, qword [obj.slotvec]            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x0000461f      55             push rbp
0x00004620      53             push rbx
0x00004621      83f801         cmp eax, 1
0x00004624      7e2b           jle 0x4651                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004626      83e802         sub eax, 2
0x00004629      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000462e      48c1e004       shl rax, 4
0x00004632      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004637      660f1f840000.  nop word [rax + rax]
0x00004640      488b3b         mov rdi, qword [rbx]
0x00004643      4883c310       add rbx, 0x10
0x00004647      e884ceffff     call sym.imp.free
0x0000464c      4839eb         cmp rbx, rbp
0x0000464f      75ef           jne 0x4640
0x00004651      498b7c2408     mov rdi, qword [r12 + 8]
0x00004656      488d1da34a20.  lea rbx, obj.slot0                      ; 0x209100
0x0000465d      4839df         cmp rdi, rbx
0x00004660      7417           je 0x4679
0x00004662      e869ceffff     call sym.imp.free
0x00004667      48c705fe4920.  mov qword [obj.slotvec0], 0x100         ; [0x209070:8]=256
0x00004672      48891dff4920.  mov qword [0x00209078], rbx             ; [0x209078:8]=0x209100 obj.slot0
0x00004679      488d1df04920.  lea rbx, obj.slotvec0                   ; 0x209070
0x00004680      4939dc         cmp r12, rbx
0x00004683      740f           je 0x4694
0x00004685      4c89e7         mov rdi, r12
0x00004688      e843ceffff     call sym.imp.free
0x0000468d      48891dcc4920.  mov qword [obj.slotvec], rbx            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x00004694      5b             pop rbx
0x00004695      c705b9492000.  mov dword [obj.nslots], 1               ; [0x209058:4]=1
0x0000469f      5d             pop rbp
0x000046a0      415c           pop r12
0x000046a2      c3             ret
0x000046a3      0f1f00         nop dword [rax]
0x000046a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x000046b0      488d0d494b20.  lea rcx, obj.default_quoting_options    ; 0x209200
0x000046b7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000046be      e90dfbffff     jmp sym.quotearg_n_options
0x000046c3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x000046c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x000046d0      488d0d294b20.  lea rcx, obj.default_quoting_options    ; 0x209200
0x000046d7      e9f4faffff     jmp sym.quotearg_n_options
0x000046dc      0f1f4000       nop dword [rax]
;-- quotearg:
0x000046e0      488d0d194b20.  lea rcx, obj.default_quoting_options    ; 0x209200
0x000046e7      4889fe         mov rsi, rdi
0x000046ea      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000046f1      31ff           xor edi, edi
0x000046f3      e9d8faffff     jmp sym.quotearg_n_options
0x000046f8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004700      488d0df94a20.  lea rcx, obj.default_quoting_options    ; 0x209200
0x00004707      4889f2         mov rdx, rsi
0x0000470a      4889fe         mov rsi, rdi
0x0000470d      31ff           xor edi, edi
0x0000470f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004714      6690           nop
0x00004716      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004720      4883ec48       sub rsp, 0x48
0x00004724      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004727      64488b142528.  mov rdx, qword fs:[0x28]
0x00004730      4889542438     mov qword [rsp + 0x38], rdx
0x00004735      31d2           xor edx, edx
0x00004737      83fe0a         cmp esi, 0xa
0x0000473a      7468           je 0x47a4
0x0000473c      893424         mov dword [rsp], esi
0x0000473f      4889e1         mov rcx, rsp
0x00004742      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004749      4889c6         mov rsi, rax
0x0000474c      48c744240400.  mov qword [rsp + 4], 0
0x00004755      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000475e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004767      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004770      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004779      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004782      c74424340000.  mov dword [rsp + 0x34], 0
0x0000478a      e841faffff     call sym.quotearg_n_options
0x0000478f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004794      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000479d      750a           jne 0x47a9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000479f      4883c448       add rsp, 0x48
0x000047a3      c3             ret
0x000047a4      e837cdffff     call sym.imp.abort
0x000047a9      e8f2cdffff     call sym.imp.__stack_chk_fail
0x000047ae      6690           nop
;-- quotearg_n_style_mem:
0x000047b0      4883ec48       sub rsp, 0x48
0x000047b4      4889d0         mov rax, rdx
0x000047b7      4889ca         mov rdx, rcx
0x000047ba      64488b0c2528.  mov rcx, qword fs:[0x28]
0x000047c3      48894c2438     mov qword [rsp + 0x38], rcx
0x000047c8      31c9           xor ecx, ecx
0x000047ca      83fe0a         cmp esi, 0xa
0x000047cd      7461           je 0x4830
0x000047cf      893424         mov dword [rsp], esi
0x000047d2      4889e1         mov rcx, rsp
0x000047d5      4889c6         mov rsi, rax
0x000047d8      48c744240400.  mov qword [rsp + 4], 0
0x000047e1      48c744240c00.  mov qword [rsp + 0xc], 0
0x000047ea      48c744241400.  mov qword [rsp + 0x14], 0
0x000047f3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000047fc      48c744242400.  mov qword [rsp + 0x24], 0
0x00004805      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000480e      c74424340000.  mov dword [rsp + 0x34], 0
0x00004816      e8b5f9ffff     call sym.quotearg_n_options
0x0000481b      488b542438     mov rdx, qword [rsp + 0x38]
0x00004820      644833142528.  xor rdx, qword fs:[0x28]
0x00004829      750a           jne 0x4835
0x0000482b      4883c448       add rsp, 0x48
0x0000482f      c3             ret
0x00004830      e8abccffff     call sym.imp.abort
0x00004835      e866cdffff     call sym.imp.__stack_chk_fail
0x0000483a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004840      4889f2         mov rdx, rsi
0x00004843      89fe           mov esi, edi
0x00004845      31ff           xor edi, edi
0x00004847      e9d4feffff     jmp sym.quotearg_n_style
0x0000484c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004850      4889d1         mov rcx, rdx
0x00004853      4889f2         mov rdx, rsi
0x00004856      89fe           mov esi, edi
0x00004858      31ff           xor edi, edi
0x0000485a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000485f      90             nop
;-- quotearg_char_mem:
0x00004860      4883ec48       sub rsp, 0x48
0x00004864      89d1           mov ecx, edx
0x00004866      64488b042528.  mov rax, qword fs:[0x28]
0x0000486f      4889442438     mov qword [rsp + 0x38], rax
0x00004874      31c0           xor eax, eax
0x00004876      488b05b34920.  mov rax, qword [0x00209230]             ; [0x209230:8]=0
0x0000487d      4989e0         mov r8, rsp
0x00004880      83e11f         and ecx, 0x1f
0x00004883      660f6f057549.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000488b      4889442430     mov qword [rsp + 0x30], rax
0x00004890      89d0           mov eax, edx
0x00004892      0f290424       movaps xmmword [rsp], xmm0
0x00004896      c0e805         shr al, 5
0x00004899      0fb6c0         movzx eax, al
0x0000489c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x000048a1      660f6f056749.  movdqa xmm0, xmmword [0x00209210]
0x000048a9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000048ae      660f6f056a49.  movdqa xmm0, xmmword [0x00209220]
0x000048b6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000048bb      418b11         mov edx, dword [r9]
0x000048be      89d0           mov eax, edx
0x000048c0      d3e8           shr eax, cl
0x000048c2      f7d0           not eax
0x000048c4      83e001         and eax, 1
0x000048c7      d3e0           shl eax, cl
0x000048c9      4c89c1         mov rcx, r8
0x000048cc      31d0           xor eax, edx
0x000048ce      4889f2         mov rdx, rsi
0x000048d1      4889fe         mov rsi, rdi
0x000048d4      418901         mov dword [r9], eax
0x000048d7      31ff           xor edi, edi
0x000048d9      e8f2f8ffff     call sym.quotearg_n_options
0x000048de      488b742438     mov rsi, qword [rsp + 0x38]
0x000048e3      644833342528.  xor rsi, qword fs:[0x28]
0x000048ec      7505           jne 0x48f3
0x000048ee      4883c448       add rsp, 0x48
0x000048f2      c3             ret
0x000048f3      e8a8ccffff     call sym.imp.__stack_chk_fail
0x000048f8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004900      400fbed6       movsx edx, sil
0x00004904      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000490b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00004910      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004915      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000491c      e93fffffff     jmp sym.quotearg_char_mem
0x00004921      0f1f440000     nop dword [rax + rax]
0x00004926      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004930      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004935      e926ffffff     jmp sym.quotearg_char_mem
0x0000493a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004940      4883ec48       sub rsp, 0x48
0x00004944      4889d0         mov rax, rdx
0x00004947      64488b142528.  mov rdx, qword fs:[0x28]
0x00004950      4889542438     mov qword [rsp + 0x38], rdx
0x00004955      31d2           xor edx, edx
0x00004957      83fe0a         cmp esi, 0xa
0x0000495a      7468           je 0x49c4
0x0000495c      893424         mov dword [rsp], esi
0x0000495f      4889e1         mov rcx, rsp
0x00004962      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004969      4889c6         mov rsi, rax
0x0000496c      48c744240400.  mov qword [rsp + 4], 0
0x00004975      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000497e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004987      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004990      48c744242400.  mov qword [rsp + 0x24], 0
0x00004999      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000049a2      c74424340000.  mov dword [rsp + 0x34], 0
0x000049aa      e821f8ffff     call sym.quotearg_n_options
0x000049af      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000049b4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000049bd      750a           jne 0x49c9
0x000049bf      4883c448       add rsp, 0x48
0x000049c3      c3             ret
0x000049c4      e817cbffff     call sym.imp.abort
0x000049c9      e8d2cbffff     call sym.imp.__stack_chk_fail
0x000049ce      6690           nop
;-- quotearg_n_custom_mem:
0x000049d0      4883ec48       sub rsp, 0x48
0x000049d4      4989c9         mov r9, rcx
0x000049d7      488b0d524820.  mov rcx, qword [0x00209230]             ; [0x209230:8]=0
0x000049de      660f6f051a48.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000049e6      64488b042528.  mov rax, qword fs:[0x28]
0x000049ef      4889442438     mov qword [rsp + 0x38], rax
0x000049f4      31c0           xor eax, eax
0x000049f6      0f290424       movaps xmmword [rsp], xmm0
0x000049fa      4885f6         test rsi, rsi
0x000049fd      48894c2430     mov qword [rsp + 0x30], rcx
0x00004a02      c704240a0000.  mov dword [rsp], 0xa
0x00004a09      660f6f05ff47.  movdqa xmm0, xmmword [0x00209210]
0x00004a11      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004a16      660f6f050248.  movdqa xmm0, xmmword [0x00209220]
0x00004a1e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004a23      7432           je 0x4a57
0x00004a25      4885d2         test rdx, rdx
0x00004a28      742d           je 0x4a57
0x00004a2a      4889742428     mov qword [rsp + 0x28], rsi
0x00004a2f      4889542430     mov qword [rsp + 0x30], rdx
0x00004a34      4889e1         mov rcx, rsp
0x00004a37      4c89c2         mov rdx, r8
0x00004a3a      4c89ce         mov rsi, r9
0x00004a3d      e88ef7ffff     call sym.quotearg_n_options
0x00004a42      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004a47      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004a50      750a           jne 0x4a5c
0x00004a52      4883c448       add rsp, 0x48
0x00004a56      c3             ret
0x00004a57      e884caffff     call sym.imp.abort
0x00004a5c      e83fcbffff     call sym.imp.__stack_chk_fail
0x00004a61      0f1f440000     nop dword [rax + rax]
0x00004a66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004a70      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004a77      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00004a7c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004a80      4889d1         mov rcx, rdx
0x00004a83      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004a8a      4889f2         mov rdx, rsi
0x00004a8d      4889fe         mov rsi, rdi
0x00004a90      31ff           xor edi, edi
0x00004a92      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004a97      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004aa0      4989c8         mov r8, rcx
0x00004aa3      4889d1         mov rcx, rdx
0x00004aa6      4889f2         mov rdx, rsi
0x00004aa9      4889fe         mov rsi, rdi
0x00004aac      31ff           xor edi, edi
0x00004aae      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004ab3      0f1f00         nop dword [rax]
0x00004ab6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004ac0      488d0d594520.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x00004ac7      e904f7ffff     jmp sym.quotearg_n_options
0x00004acc      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004ad0      488d0d494520.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x00004ad7      4889f2         mov rdx, rsi
0x00004ada      4889fe         mov rsi, rdi
0x00004add      31ff           xor edi, edi
0x00004adf      e9ecf6ffff     jmp sym.quotearg_n_options
0x00004ae4      6690           nop
0x00004ae6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00004af0      488d0d294520.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x00004af7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004afe      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004b03      0f1f00         nop dword [rax]
0x00004b06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00004b10      488d0d094520.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x00004b17      4889fe         mov rsi, rdi
0x00004b1a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004b21      31ff           xor edi, edi
0x00004b23      e9a8f6ffff     jmp sym.quotearg_n_options
0x00004b28      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00004b30      4157           push r15
0x00004b32      4156           push r14
0x00004b34      4155           push r13
0x00004b36      4154           push r12
0x00004b38      4d89cc         mov r12, r9
0x00004b3b      55             push rbp
0x00004b3c      53             push rbx
0x00004b3d      4889fd         mov rbp, rdi
0x00004b40      4c89c3         mov rbx, r8
0x00004b43      4883ec28       sub rsp, 0x28
0x00004b47      4885f6         test rsi, rsi
0x00004b4a      0f8418010000   je 0x4c68
0x00004b50      4989d0         mov r8, rdx
0x00004b53      488d152e1d00.  lea rdx, [0x00006888]                   ; "%s (%s) %s\n"
0x00004b5a      4989c9         mov r9, rcx
0x00004b5d      31c0           xor eax, eax
0x00004b5f      4889f1         mov rcx, rsi
0x00004b62      be01000000     mov esi, 1
0x00004b67      e844ccffff     call sym.imp.__fprintf_chk
0x00004b6c      488d35281d00.  lea rsi, [0x0000689b]                   ; "(C)"
0x00004b73      31ff           xor edi, edi
0x00004b75      ba05000000     mov edx, 5
0x00004b7a      e8f1c9ffff     call sym.imp.dcgettext
0x00004b7f      488d153a2000.  lea rdx, obj.version_etc_copyright      ; 0x6bc0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004b86      4889c1         mov rcx, rax
0x00004b89      41b8e3070000   mov r8d, 0x7e3
0x00004b8f      be01000000     mov esi, 1
0x00004b94      4889ef         mov rdi, rbp
0x00004b97      31c0           xor eax, eax
0x00004b99      e812ccffff     call sym.imp.__fprintf_chk
0x00004b9e      488d35831d00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x6928 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004ba5      31ff           xor edi, edi
0x00004ba7      ba05000000     mov edx, 5
0x00004bac      e8bfc9ffff     call sym.imp.dcgettext
0x00004bb1      4889ee         mov rsi, rbp
0x00004bb4      4889c7         mov rdi, rax
0x00004bb7      e8b4caffff     call sym.imp.fputs_unlocked
0x00004bbc      4983fc09       cmp r12, 9
0x00004bc0      0f873a030000   ja 0x4f00
0x00004bc6      488d15b71f00.  lea rdx, [0x00006b84]
0x00004bcd      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004bd1      4801d0         add rax, rdx
0x00004bd4      ffe0           jmp rax
0x00004bd6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004be0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004be4      488b4310       mov rax, qword [rbx + 0x10]
0x00004be8      488d35a91e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x6a98 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00004bef      4c8b4308       mov r8, qword [rbx + 8]
0x00004bf3      ba05000000     mov edx, 5
0x00004bf8      31ff           xor edi, edi
0x00004bfa      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004bfe      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004c02      4c894c2410     mov qword [rsp + 0x10], r9
0x00004c07      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004c0b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004c0f      48890424       mov qword [rsp], rax
0x00004c13      4c89442408     mov qword [rsp + 8], r8
0x00004c18      488b1b         mov rbx, qword [rbx]
0x00004c1b      e850c9ffff     call sym.imp.dcgettext
0x00004c20      4883ec08       sub rsp, 8
0x00004c24      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00004c29      4889c2         mov rdx, rax
0x00004c2c      4889d9         mov rcx, rbx
0x00004c2f      be01000000     mov esi, 1
0x00004c34      4889ef         mov rdi, rbp
0x00004c37      31c0           xor eax, eax
0x00004c39      4151           push r9
0x00004c3b      4155           push r13
0x00004c3d      4154           push r12
0x00004c3f      4157           push r15
0x00004c41      4156           push r14
0x00004c43      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004c48      4c8b442438     mov r8, qword [rsp + 0x38]
0x00004c4d      e85ecbffff     call sym.imp.__fprintf_chk
0x00004c52      4883c430       add rsp, 0x30
0x00004c56      4883c428       add rsp, 0x28
0x00004c5a      5b             pop rbx
0x00004c5b      5d             pop rbp
0x00004c5c      415c           pop r12
0x00004c5e      415d           pop r13
0x00004c60      415e           pop r14
0x00004c62      415f           pop r15
0x00004c64      c3             ret
0x00004c65      0f1f00         nop dword [rax]
0x00004c68      4989c8         mov r8, rcx
0x00004c6b      4889d1         mov rcx, rdx
0x00004c6e      488d151f1c00.  lea rdx, str.s__s                       ; 0x6894 ; "%s %s\n"
0x00004c75      be01000000     mov esi, 1
0x00004c7a      31c0           xor eax, eax
0x00004c7c      e82fcbffff     call sym.imp.__fprintf_chk
0x00004c81      e9e6feffff     jmp 0x4b6c
0x00004c86      662e0f1f8400.  nop word cs:[rax + rax]
0x00004c90      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004c94      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004c98      488d35291e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x6ac8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00004c9f      488b4310       mov rax, qword [rbx + 0x10]
0x00004ca3      4c8b4308       mov r8, qword [rbx + 8]
0x00004ca7      ba05000000     mov edx, 5
0x00004cac      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004cb0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004cb4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004cb8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004cbc      488b1b         mov rbx, qword [rbx]
0x00004cbf      4c89542418     mov qword [rsp + 0x18], r10
0x00004cc4      4c894c2410     mov qword [rsp + 0x10], r9
0x00004cc9      48890424       mov qword [rsp], rax
0x00004ccd      4c89442408     mov qword [rsp + 8], r8
0x00004cd2      31ff           xor edi, edi
0x00004cd4      e897c8ffff     call sym.imp.dcgettext
0x00004cd9      4c8b542418     mov r10, qword [rsp + 0x18]
0x00004cde      4152           push r10
0x00004ce0      e93fffffff     jmp 0x4c24
0x00004ce5      0f1f00         nop dword [rax]
0x00004ce8      488b1b         mov rbx, qword [rbx]
0x00004ceb      488d35ad1b00.  lea rsi, str.Written_by__s.             ; 0x689f ; "Written by %s.\n"
0x00004cf2      ba05000000     mov edx, 5
0x00004cf7      31ff           xor edi, edi
0x00004cf9      e872c8ffff     call sym.imp.dcgettext
0x00004cfe      4883c428       add rsp, 0x28
0x00004d02      4889d9         mov rcx, rbx
0x00004d05      4889ef         mov rdi, rbp
0x00004d08      5b             pop rbx
0x00004d09      5d             pop rbp
0x00004d0a      415c           pop r12
0x00004d0c      415d           pop r13
0x00004d0e      415e           pop r14
0x00004d10      415f           pop r15
0x00004d12      4889c2         mov rdx, rax
0x00004d15      be01000000     mov esi, 1
0x00004d1a      31c0           xor eax, eax
0x00004d1c      e98fcaffff     jmp sym.imp.__fprintf_chk
0x00004d21      0f1f80000000.  nop dword [rax]
0x00004d28      4c8b6308       mov r12, qword [rbx + 8]
0x00004d2c      488d357c1b00.  lea rsi, str.Written_by__s_and__s.      ; 0x68af ; "Written by %s and %s.\n"
0x00004d33      488b1b         mov rbx, qword [rbx]
0x00004d36      ba05000000     mov edx, 5
0x00004d3b      31ff           xor edi, edi
0x00004d3d      e82ec8ffff     call sym.imp.dcgettext
0x00004d42      4883c428       add rsp, 0x28
0x00004d46      4d89e0         mov r8, r12
0x00004d49      4889d9         mov rcx, rbx
0x00004d4c      4889ef         mov rdi, rbp
0x00004d4f      4889c2         mov rdx, rax
0x00004d52      be01000000     mov esi, 1
0x00004d57      5b             pop rbx
0x00004d58      5d             pop rbp
0x00004d59      415c           pop r12
0x00004d5b      415d           pop r13
0x00004d5d      415e           pop r14
0x00004d5f      415f           pop r15
0x00004d61      31c0           xor eax, eax
0x00004d63      e948caffff     jmp sym.imp.__fprintf_chk
0x00004d68      0f1f84000000.  nop dword [rax + rax]
0x00004d70      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004d74      4c8b6308       mov r12, qword [rbx + 8]
0x00004d78      488d35471b00.  lea rsi, str.Written_by__s___s__and__s. ; 0x68c6 ; "Written by %s, %s, and %s.\n"
0x00004d7f      488b1b         mov rbx, qword [rbx]
0x00004d82      ba05000000     mov edx, 5
0x00004d87      31ff           xor edi, edi
0x00004d89      e8e2c7ffff     call sym.imp.dcgettext
0x00004d8e      4883c428       add rsp, 0x28
0x00004d92      4d89e9         mov r9, r13
0x00004d95      4d89e0         mov r8, r12
0x00004d98      4889d9         mov rcx, rbx
0x00004d9b      4889ef         mov rdi, rbp
0x00004d9e      4889c2         mov rdx, rax
0x00004da1      5b             pop rbx
0x00004da2      5d             pop rbp
0x00004da3      415c           pop r12
0x00004da5      415d           pop r13
0x00004da7      415e           pop r14
0x00004da9      415f           pop r15
0x00004dab      be01000000     mov esi, 1
0x00004db0      31c0           xor eax, eax
0x00004db2      e9f9c9ffff     jmp sym.imp.__fprintf_chk
0x00004db7      660f1f840000.  nop word [rax + rax]
0x00004dc0      488d35311c00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x69f8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004dc7      ba05000000     mov edx, 5
0x00004dcc      31ff           xor edi, edi
0x00004dce      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004dd2      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004dd6      4c8b6308       mov r12, qword [rbx + 8]
0x00004dda      488b1b         mov rbx, qword [rbx]
0x00004ddd      e88ec7ffff     call sym.imp.dcgettext
0x00004de2      4883ec08       sub rsp, 8
0x00004de6      4156           push r14
0x00004de8      4889c2         mov rdx, rax
0x00004deb      4d89e9         mov r9, r13
0x00004dee      4d89e0         mov r8, r12
0x00004df1      4889d9         mov rcx, rbx
0x00004df4      4889ef         mov rdi, rbp
0x00004df7      be01000000     mov esi, 1
0x00004dfc      31c0           xor eax, eax
0x00004dfe      e8adc9ffff     call sym.imp.__fprintf_chk
0x00004e03      58             pop rax
0x00004e04      5a             pop rdx
0x00004e05      4883c428       add rsp, 0x28
0x00004e09      5b             pop rbx
0x00004e0a      5d             pop rbp
0x00004e0b      415c           pop r12
0x00004e0d      415d           pop r13
0x00004e0f      415e           pop r14
0x00004e11      415f           pop r15
0x00004e13      c3             ret
0x00004e14      0f1f4000       nop dword [rax]
0x00004e18      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004e1c      488d35f51b00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x6a18 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00004e23      ba05000000     mov edx, 5
0x00004e28      31ff           xor edi, edi
0x00004e2a      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004e2e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004e32      4c8b6308       mov r12, qword [rbx + 8]
0x00004e36      488b1b         mov rbx, qword [rbx]
0x00004e39      e832c7ffff     call sym.imp.dcgettext
0x00004e3e      4157           push r15
0x00004e40      eba4           jmp 0x4de6
0x00004e42      660f1f440000   nop word [rax + rax]
0x00004e48      4c8b4308       mov r8, qword [rbx + 8]
0x00004e4c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004e50      488d35e91b00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x6a40 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00004e57      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004e5b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004e5f      ba05000000     mov edx, 5
0x00004e64      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004e68      31ff           xor edi, edi
0x00004e6a      488b1b         mov rbx, qword [rbx]
0x00004e6d      4c890424       mov qword [rsp], r8
0x00004e71      e8fac6ffff     call sym.imp.dcgettext
0x00004e76      4883ec08       sub rsp, 8
0x00004e7a      4d89e9         mov r9, r13
0x00004e7d      4154           push r12
0x00004e7f      4157           push r15
0x00004e81      4156           push r14
0x00004e83      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004e88      4889d9         mov rcx, rbx
0x00004e8b      4889c2         mov rdx, rax
0x00004e8e      4889ef         mov rdi, rbp
0x00004e91      be01000000     mov esi, 1
0x00004e96      31c0           xor eax, eax
0x00004e98      e813c9ffff     call sym.imp.__fprintf_chk
0x00004e9d      4883c420       add rsp, 0x20
0x00004ea1      4883c428       add rsp, 0x28
0x00004ea5      5b             pop rbx
0x00004ea6      5d             pop rbp
0x00004ea7      415c           pop r12
0x00004ea9      415d           pop r13
0x00004eab      415e           pop r14
0x00004ead      415f           pop r15
0x00004eaf      c3             ret
0x00004eb0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00004eb4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004eb8      488d35a91b00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x6a68 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00004ebf      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004ec3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004ec7      ba05000000     mov edx, 5
0x00004ecc      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004ed0      4c8b4308       mov r8, qword [rbx + 8]
0x00004ed4      31ff           xor edi, edi
0x00004ed6      4c894c2408     mov qword [rsp + 8], r9
0x00004edb      488b1b         mov rbx, qword [rbx]
0x00004ede      4c890424       mov qword [rsp], r8
0x00004ee2      e889c6ffff     call sym.imp.dcgettext
0x00004ee7      4155           push r13
0x00004ee9      4154           push r12
0x00004eeb      4157           push r15
0x00004eed      4156           push r14
0x00004eef      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004ef4      eb8d           jmp 0x4e83
0x00004ef6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004f00      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004f04      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004f08      ba05000000     mov edx, 5
0x00004f0d      488b4310       mov rax, qword [rbx + 0x10]
0x00004f11      4c8b4308       mov r8, qword [rbx + 8]
0x00004f15      488d35e41b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x6b00 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00004f1c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004f20      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004f24      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004f28      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004f2c      4c89542418     mov qword [rsp + 0x18], r10
0x00004f31      4c894c2410     mov qword [rsp + 0x10], r9
0x00004f36      48890424       mov qword [rsp], rax
0x00004f3a      4c89442408     mov qword [rsp + 8], r8
0x00004f3f      488b1b         mov rbx, qword [rbx]
0x00004f42      e98bfdffff     jmp 0x4cd2
0x00004f47      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00004f50      4531c9         xor r9d, r9d
0x00004f53      49833800       cmp qword [r8], 0
0x00004f57      7412           je 0x4f6b
0x00004f59      0f1f80000000.  nop dword [rax]
0x00004f60      4983c101       add r9, 1
0x00004f64      4b833cc800     cmp qword [r8 + r9*8], 0
0x00004f69      75f5           jne 0x4f60
0x00004f6b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00004f70      4883ec68       sub rsp, 0x68
0x00004f74      4d89c2         mov r10, r8
0x00004f77      4531c9         xor r9d, r9d
0x00004f7a      64488b042528.  mov rax, qword fs:[0x28]
0x00004f83      4889442458     mov qword [rsp + 0x58], rax
0x00004f88      31c0           xor eax, eax
0x00004f8a      4989e0         mov r8, rsp
0x00004f8d      0f1f00         nop dword [rax]
0x00004f90      418b02         mov eax, dword [r10]
0x00004f93      83f82f         cmp eax, 0x2f
0x00004f96      7742           ja 0x4fda
0x00004f98      4189c3         mov r11d, eax
0x00004f9b      4d035a10       add r11, qword [r10 + 0x10]
0x00004f9f      83c008         add eax, 8
0x00004fa2      418902         mov dword [r10], eax
0x00004fa5      498b03         mov rax, qword [r11]
0x00004fa8      4885c0         test rax, rax
0x00004fab      4b8904c8       mov qword [r8 + r9*8], rax
0x00004faf      740a           je 0x4fbb
0x00004fb1      4983c101       add r9, 1
0x00004fb5      4983f90a       cmp r9, 0xa
0x00004fb9      75d5           jne 0x4f90
0x00004fbb      e870fbffff     call sym.version_etc_arn
0x00004fc0      488b442458     mov rax, qword [rsp + 0x58]
0x00004fc5      644833042528.  xor rax, qword fs:[0x28]
0x00004fce      7505           jne 0x4fd5
0x00004fd0      4883c468       add rsp, 0x68
0x00004fd4      c3             ret
0x00004fd5      e8c6c5ffff     call sym.imp.__stack_chk_fail
0x00004fda      4d8b5a08       mov r11, qword [r10 + 8]
0x00004fde      498d4308       lea rax, [r11 + 8]
0x00004fe2      49894208       mov qword [r10 + 8], rax
0x00004fe6      ebbd           jmp 0x4fa5
0x00004fe8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00004ff0      55             push rbp
0x00004ff1      53             push rbx
0x00004ff2      41ba20000000   mov r10d, 0x20                          ; "@"
0x00004ff8      4531db         xor r11d, r11d
0x00004ffb      4881ecb80000.  sub rsp, 0xb8
0x00005002      64488b042528.  mov rax, qword fs:[0x28]
0x0000500b      4889442478     mov qword [rsp + 0x78], rax
0x00005010      31c0           xor eax, eax
0x00005012      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000501a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00005022      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000502a      4c8d442420     lea r8, [rsp + 0x20]
0x0000502f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00005037      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000503f      4889442410     mov qword [rsp + 0x10], rax
0x00005044      488d84248000.  lea rax, [rsp + 0x80]
0x0000504c      4531c9         xor r9d, r9d
0x0000504f      4889442418     mov qword [rsp + 0x18], rax
0x00005054      4889c5         mov rbp, rax
0x00005057      660f1f840000.  nop word [rax + rax]
0x00005060      4183fa2f       cmp r10d, 0x2f
0x00005064      7756           ja 0x50bc
0x00005066      4489d0         mov eax, r10d
0x00005069      41bb01000000   mov r11d, 1
0x0000506f      4183c208       add r10d, 8
0x00005073      4801e8         add rax, rbp
0x00005076      488b00         mov rax, qword [rax]
0x00005079      4885c0         test rax, rax
0x0000507c      4b8904c8       mov qword [r8 + r9*8], rax
0x00005080      740a           je 0x508c
0x00005082      4983c101       add r9, 1
0x00005086      4983f90a       cmp r9, 0xa
0x0000508a      75d4           jne 0x5060
0x0000508c      4584db         test r11b, r11b
0x0000508f      7524           jne 0x50b5
0x00005091      e89afaffff     call sym.version_etc_arn
0x00005096      488b442478     mov rax, qword [rsp + 0x78]
0x0000509b      644833042528.  xor rax, qword fs:[0x28]
0x000050a4      750a           jne 0x50b0
0x000050a6      4881c4b80000.  add rsp, 0xb8
0x000050ad      5b             pop rbx
0x000050ae      5d             pop rbp
0x000050af      c3             ret
0x000050b0      e8ebc4ffff     call sym.imp.__stack_chk_fail
0x000050b5      4489542408     mov dword [rsp + 8], r10d
0x000050ba      ebd5           jmp 0x5091
0x000050bc      4889d8         mov rax, rbx
0x000050bf      4883c308       add rbx, 8
0x000050c3      ebb1           jmp 0x5076
0x000050c5      90             nop
0x000050c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x000050d0      53             push rbx
0x000050d1      488d350a1800.  lea rsi, str.Report_bugs_to:__s         ; 0x68e2 ; "\nReport bugs to: %s\n"
0x000050d8      ba05000000     mov edx, 5
0x000050dd      31ff           xor edi, edi
0x000050df      e88cc4ffff     call sym.imp.dcgettext
0x000050e4      488d150c1800.  lea rdx, str.bug_coreutils_gnu.org      ; 0x68f7 ; "bug-coreutils@gnu.org"
0x000050eb      4889c6         mov rsi, rax
0x000050ee      bf01000000     mov edi, 1
0x000050f3      31c0           xor eax, eax
0x000050f5      e836c6ffff     call sym.imp.__printf_chk
0x000050fa      488d350c1800.  lea rsi, str.s_home_page:___s           ; 0x690d ; "%s home page: <%s>\n"
0x00005101      ba05000000     mov edx, 5
0x00005106      31ff           xor edi, edi
0x00005108      e863c4ffff     call sym.imp.dcgettext
0x0000510d      488d0d7c1000.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6190 ; "https://www.gnu.org/software/coreutils/"
0x00005114      488d15240c00.  lea rdx, str.GNU_coreutils              ; 0x5d3f ; "GNU coreutils"
0x0000511b      4889c6         mov rsi, rax
0x0000511e      bf01000000     mov edi, 1
0x00005123      31c0           xor eax, eax
0x00005125      e806c6ffff     call sym.imp.__printf_chk
0x0000512a      488b1d573f20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00005131      488d35081a00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x6b40 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00005138      31ff           xor edi, edi
0x0000513a      ba05000000     mov edx, 5
0x0000513f      e82cc4ffff     call sym.imp.dcgettext
0x00005144      4889de         mov rsi, rbx
0x00005147      4889c7         mov rdi, rax
0x0000514a      5b             pop rbx
0x0000514b      e920c5ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00005150      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00005151      4889fb         mov rbx, rdi
0x00005154      e867c5ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00005159      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000515c      7505           jne 0x5163
0x0000515e      4885db         test rbx, rbx
0x00005161      7502           jne 0x5165
0x00005163      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00005164      c3             ret
0x00005165      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000516a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00005170      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00005173      48f7e6         mul rsi
0x00005176      4889c7         mov rdi, rax
0x00005179      0f90c0         seto al
0x0000517c      4885ff         test rdi, rdi
0x0000517f      780a           js 0x518b
0x00005181      0fb6c0         movzx eax, al
0x00005184      4885c0         test rax, rax
0x00005187      7502           jne 0x518b
0x00005189      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000518b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000518f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00005194      6690           nop
0x00005196      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x000051a0      ebae           jmp sym.xmalloc
0x000051a2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x000051a6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x000051b0      4885f6         test rsi, rsi
0x000051b3      53             push rbx
0x000051b4      4889f3         mov rbx, rsi
0x000051b7      7505           jne 0x51be
0x000051b9      4885ff         test rdi, rdi
0x000051bc      751a           jne 0x51d8
0x000051be      4889de         mov rsi, rbx
0x000051c1      e84ac5ffff     call sym.imp.realloc
0x000051c6      4885c0         test rax, rax
0x000051c9      7505           jne 0x51d0
0x000051cb      4885db         test rbx, rbx
0x000051ce      7511           jne 0x51e1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x000051d0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x000051d1      c3             ret
0x000051d2      660f1f440000   nop word [rax + rax]
0x000051d8      e8f3c2ffff     call sym.imp.free
0x000051dd      31c0           xor eax, eax
0x000051df      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x000051e0      c3             ret
0x000051e1      e8ba010000     call sym.xalloc_die
0x000051e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x000051f0      4889f0         mov rax, rsi
0x000051f3      48f7e2         mul rdx
0x000051f6      4889c6         mov rsi, rax
0x000051f9      0f90c0         seto al
0x000051fc      4885f6         test rsi, rsi
0x000051ff      780a           js 0x520b
0x00005201      0fb6c0         movzx eax, al
0x00005204      4885c0         test rax, rax
0x00005207      7502           jne 0x520b
0x00005209      eba5           jmp sym.xrealloc
0x0000520b      4883ec08       sub rsp, 8
0x0000520f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005214      6690           nop
0x00005216      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005220      4885ff         test rdi, rdi
0x00005223      4989d1         mov r9, rdx
0x00005226      488b0e         mov rcx, qword [rsi]
0x00005229      7435           je 0x5260
0x0000522b      31d2           xor edx, edx
0x0000522d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005237      49f7f1         div r9
0x0000523a      4839c8         cmp rax, rcx
0x0000523d      763c           jbe 0x527b
0x0000523f      4889c8         mov rax, rcx
0x00005242      48d1e8         shr rax, 1
0x00005245      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000524a      48890e         mov qword [rsi], rcx
0x0000524d      490fafc9       imul rcx, r9
0x00005251      4889ce         mov rsi, rcx
0x00005254      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00005259      0f1f80000000.  nop dword [rax]
0x00005260      4885c9         test rcx, rcx
0x00005263      7423           je 0x5288
0x00005265      4889c8         mov rax, rcx
0x00005268      49f7e1         mul r9
0x0000526b      0f90c2         seto dl
0x0000526e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00005271      0fb6d2         movzx edx, dl
0x00005274      7805           js 0x527b
0x00005276      4885d2         test rdx, rdx
0x00005279      74cf           je 0x524a
0x0000527b      4883ec08       sub rsp, 8
0x0000527f      e81c010000     call sym.xalloc_die
0x00005284      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005288      31d2           xor edx, edx
0x0000528a      b880000000     mov eax, 0x80
0x0000528f      4531c0         xor r8d, r8d
0x00005292      49f7f1         div r9
0x00005295      4885c0         test rax, rax
0x00005298      410f94c0       sete r8b
0x0000529c      498d0c00       lea rcx, [r8 + rax]
0x000052a0      ebc3           jmp 0x5265
0x000052a2      0f1f4000       nop dword [rax]
0x000052a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x000052b0      4885ff         test rdi, rdi
0x000052b3      488b06         mov rax, qword [rsi]
0x000052b6      7428           je 0x52e0
0x000052b8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x000052c2      4839d0         cmp rax, rdx
0x000052c5      772a           ja 0x52f1
0x000052c7      4889c2         mov rdx, rax
0x000052ca      48d1ea         shr rdx, 1
0x000052cd      488d440201     lea rax, [rdx + rax + 1]
0x000052d2      488906         mov qword [rsi], rax
0x000052d5      4889c6         mov rsi, rax
0x000052d8      e9d3feffff     jmp sym.xrealloc
0x000052dd      0f1f00         nop dword [rax]
0x000052e0      4885c0         test rax, rax
0x000052e3      ba80000000     mov edx, 0x80
0x000052e8      480f44c2       cmove rax, rdx
0x000052ec      4885c0         test rax, rax
0x000052ef      79e1           jns 0x52d2
0x000052f1      4883ec08       sub rsp, 8
0x000052f5      e8a6000000     call sym.xalloc_die
0x000052fa      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005300      53             push rbx
0x00005301      4889fb         mov rbx, rdi
0x00005304      e847feffff     call sym.xmalloc
0x00005309      4889da         mov rdx, rbx
0x0000530c      31f6           xor esi, esi
0x0000530e      4889c7         mov rdi, rax
0x00005311      5b             pop rbx
0x00005312      e919c3ffff     jmp sym.imp.memset
0x00005317      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005320      4889f8         mov rax, rdi
0x00005323      4883ec08       sub rsp, 8
0x00005327      48f7e6         mul rsi
0x0000532a      0f90c2         seto dl
0x0000532d      4885c0         test rax, rax
0x00005330      7817           js 0x5349
0x00005332      0fb6d2         movzx edx, dl
0x00005335      4885d2         test rdx, rdx
0x00005338      750f           jne 0x5349
0x0000533a      e841c3ffff     call sym.imp.calloc
0x0000533f      4885c0         test rax, rax
0x00005342      7405           je 0x5349
0x00005344      4883c408       add rsp, 8
0x00005348      c3             ret
0x00005349      e852000000     call sym.xalloc_die
0x0000534e      6690           nop
;-- xmemdup:
0x00005350      55             push rbp
0x00005351      53             push rbx
0x00005352      4889fd         mov rbp, rdi
0x00005355      4889f7         mov rdi, rsi
0x00005358      4889f3         mov rbx, rsi
0x0000535b      4883ec08       sub rsp, 8
0x0000535f      e8ecfdffff     call sym.xmalloc
0x00005364      4883c408       add rsp, 8
0x00005368      4889da         mov rdx, rbx
0x0000536b      4889ee         mov rsi, rbp
0x0000536e      5b             pop rbx
0x0000536f      5d             pop rbp
0x00005370      4889c7         mov rdi, rax
0x00005373      e928c3ffff     jmp sym.imp.memcpy
0x00005378      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005380      53             push rbx
0x00005381      4889fb         mov rbx, rdi
0x00005384      e807c2ffff     call sym.imp.strlen
0x00005389      4889df         mov rdi, rbx
0x0000538c      488d7001       lea rsi, [rax + 1]
0x00005390      5b             pop rbx
0x00005391      ebbd           jmp sym.xmemdup
0x00005393      662e0f1f8400.  nop word cs:[rax + rax]
0x0000539d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x000053a0      488d35481800.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x6bef ; "memory exhausted"
0x000053a7      4883ec08       sub rsp, 8
0x000053ab      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x000053b0      31ff           xor edi, edi
0x000053b2      e8b9c1ffff     call sym.imp.dcgettext
0x000053b7      8b3d5b3c2000   mov edi, dword [obj.exit_failure]       ; [0x209018:4]=1
0x000053bd      488d15a00f00.  lea rdx, [0x00006364]                   ; "%s"
0x000053c4      4889c1         mov rcx, rax
0x000053c7      31f6           xor esi, esi
0x000053c9      31c0           xor eax, eax
0x000053cb      e880c3ffff     call sym.imp.error
0x000053d0      e80bc1ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x000053d5      662e0f1f8400.  nop word cs:[rax + rax]
0x000053df      90             nop
;-- xnumtoumax:
0x000053e0      4157           push r15                                ; ../coreutils-8.31/lib/xdectoint.c:38
0x000053e2      4156           push r14
0x000053e4      4989cf         mov r15, rcx
0x000053e7      4155           push r13
0x000053e9      4154           push r12
0x000053eb      4989d6         mov r14, rdx
0x000053ee      55             push rbp
0x000053ef      53             push rbx
0x000053f0      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x000053f2      31f6           xor esi, esi
0x000053f4      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/xdectoint.c:38
0x000053f7      4d89cd         mov r13, r9
0x000053fa      4883ec18       sub rsp, 0x18
0x000053fe      4889e1         mov rcx, rsp                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00005401      8b5c2450       mov ebx, dword [rsp + 0x50]             ; ../coreutils-8.31/lib/xdectoint.c:38
0x00005405      64488b042528.  mov rax, qword fs:[0x28]
0x0000540e      4889442408     mov qword [rsp + 8], rax
0x00005413      31c0           xor eax, eax
0x00005415      e8f6000000     call sym.xstrtoumax                     ; ../coreutils-8.31/lib/xdectoint.c:42
0x0000541a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xdectoint.c:44
0x0000541c      0f858e000000   jne 0x54b0
0x00005422      488b2c24       mov rbp, qword [rsp]                    ; ../coreutils-8.31/lib/xdectoint.c:46
0x00005426      4c39f5         cmp rbp, r14
0x00005429      7205           jb 0x5430
0x0000542b      4c39fd         cmp rbp, r15
0x0000542e      7654           jbe 0x5484
0x00005430      e8bbc0ffff     call sym.imp.__errno_location
0x00005435      4881fd000000.  cmp rbp, 0x40000000                     ; ../coreutils-8.31/lib/xdectoint.c:52
0x0000543c      4989c6         mov r14, rax
0x0000543f      19c0           sbb eax, eax
0x00005441      83e0d7         and eax, 0xffffffd7                     ; 4294967255
0x00005444      83c04b         add eax, 0x4b
0x00005447      418906         mov dword [r14], eax
0x0000544a      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/xdectoint.c:69
0x0000544d      e8bef6ffff     call sym.quote
0x00005452      418b36         mov esi, dword [r14]
0x00005455      4989c0         mov r8, rax
0x00005458      b800000000     mov eax, 0
0x0000545d      488d15fc0e00.  lea rdx, str.s:__s                      ; 0x6360 ; "%s: %s"
0x00005464      4c89e9         mov rcx, r13
0x00005467      83fe16         cmp esi, 0x16
0x0000546a      0f44f0         cmove esi, eax
0x0000546d      85db           test ebx, ebx
0x0000546f      b801000000     mov eax, 1
0x00005474      0f44d8         cmove ebx, eax
0x00005477      31c0           xor eax, eax
0x00005479      89df           mov edi, ebx
0x0000547b      e8d0c2ffff     call sym.imp.error
0x00005480      488b2c24       mov rbp, qword [rsp]
0x00005484      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xdectoint.c:74
0x00005489      644833142528.  xor rdx, qword fs:[0x28]
0x00005492      4889e8         mov rax, rbp
0x00005495      7544           jne 0x54db
0x00005497      4883c418       add rsp, 0x18
0x0000549b      5b             pop rbx
0x0000549c      5d             pop rbp
0x0000549d      415c           pop r12
0x0000549f      415d           pop r13
0x000054a1      415e           pop r14
0x000054a3      415f           pop r15
0x000054a5      c3             ret
0x000054a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000054b0      89c5           mov ebp, eax
0x000054b2      e839c0ffff     call sym.imp.__errno_location
0x000054b7      83fd01         cmp ebp, 1                              ; ../coreutils-8.31/lib/xdectoint.c:61
0x000054ba      4989c6         mov r14, rax
0x000054bd      7411           je 0x54d0
0x000054bf      83fd03         cmp ebp, 3                              ; ../coreutils-8.31/lib/xdectoint.c:63
0x000054c2      7586           jne 0x544a
0x000054c4      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/xdectoint.c:64
0x000054ca      e97bffffff     jmp 0x544a
0x000054cf      90             nop
0x000054d0      c7004b000000   mov dword [rax], 0x4b                   ; ../coreutils-8.31/lib/xdectoint.c:62 ; 'K'
                                                                       ; [0x4b:4]=0
0x000054d6      e96fffffff     jmp 0x544a
0x000054db      e8c0c0ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xdectoint.c:74
;-- xdectoumax:
0x000054e0      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/xdectoint.c:84
0x000054e4      4151           push r9                                 ; ../coreutils-8.31/lib/xdectoint.c:85
0x000054e6      4d89c1         mov r9, r8
0x000054e9      4989c8         mov r8, rcx
0x000054ec      4889d1         mov rcx, rdx
0x000054ef      4889f2         mov rdx, rsi
0x000054f2      be0a000000     mov esi, 0xa
0x000054f7      e8e4feffff     call sym.xnumtoumax
0x000054fc      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/xdectoint.c:86
0x00005500      c3             ret
0x00005501      662e0f1f8400.  nop word cs:[rax + rax]
0x0000550b      0f1f440000     nop dword [rax + rax]
;-- xstrtoumax:
0x00005510      4157           push r15
0x00005512      4156           push r14
0x00005514      4155           push r13
0x00005516      4154           push r12
0x00005518      55             push rbp
0x00005519      53             push rbx
0x0000551a      4883ec28       sub rsp, 0x28
0x0000551e      64488b042528.  mov rax, qword fs:[0x28]
0x00005527      4889442418     mov qword [rsp + 0x18], rax
0x0000552c      31c0           xor eax, eax
0x0000552e      83fa24         cmp edx, 0x24
0x00005531      0f875e030000   ja 0x5895
0x00005537      488d442410     lea rax, [rsp + 0x10]
0x0000553c      4989f7         mov r15, rsi
0x0000553f      4885f6         test rsi, rsi
0x00005542      4889fd         mov rbp, rdi
0x00005545      89542408       mov dword [rsp + 8], edx
0x00005549      4989ce         mov r14, rcx
0x0000554c      4d89c5         mov r13, r8
0x0000554f      4c0f44f8       cmove r15, rax
0x00005553      e898bfffff     call sym.imp.__errno_location
0x00005558      c70000000000   mov dword [rax], 0
0x0000555e      4989c4         mov r12, rax
0x00005561      0fb65d00       movzx ebx, byte [rbp]
0x00005565      e876c2ffff     call sym.imp.__ctype_b_loc
0x0000556a      8b542408       mov edx, dword [rsp + 8]
0x0000556e      488b30         mov rsi, qword [rax]
0x00005571      4889e8         mov rax, rbp
0x00005574      eb11           jmp 0x5587
0x00005576      662e0f1f8400.  nop word cs:[rax + rax]
0x00005580      4883c001       add rax, 1
0x00005584      0fb618         movzx ebx, byte [rax]
0x00005587      0fb6cb         movzx ecx, bl
0x0000558a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x0000558f      75ef           jne 0x5580
0x00005591      80fb2d         cmp bl, 0x2d
0x00005594      7452           je 0x55e8
0x00005596      31c9           xor ecx, ecx
0x00005598      4c89fe         mov rsi, r15
0x0000559b      4889ef         mov rdi, rbp
0x0000559e      e87dc0ffff     call sym.imp.__strtoul_internal
0x000055a3      498b0f         mov rcx, qword [r15]
0x000055a6      4889c3         mov rbx, rax
0x000055a9      4839e9         cmp rcx, rbp
0x000055ac      742a           je 0x55d8
0x000055ae      418b0424       mov eax, dword [r12]
0x000055b2      85c0           test eax, eax
0x000055b4      7462           je 0x5618
0x000055b6      83f822         cmp eax, 0x22
0x000055b9      bd01000000     mov ebp, 1
0x000055be      7528           jne 0x55e8
0x000055c0      4d85ed         test r13, r13
0x000055c3      7409           je 0x55ce
0x000055c5      440fb621       movzx r12d, byte [rcx]
0x000055c9      4584e4         test r12b, r12b
0x000055cc      7579           jne 0x5647
0x000055ce      49891e         mov qword [r14], rbx
0x000055d1      eb1a           jmp 0x55ed
0x000055d3      0f1f440000     nop dword [rax + rax]
0x000055d8      4d85ed         test r13, r13
0x000055db      48894c2408     mov qword [rsp + 8], rcx
0x000055e0      753e           jne 0x5620
0x000055e2      660f1f440000   nop word [rax + rax]
0x000055e8      bd04000000     mov ebp, 4
0x000055ed      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000055f2      6448333c2528.  xor rdi, qword fs:[0x28]
0x000055fb      89e8           mov eax, ebp
0x000055fd      0f858d020000   jne 0x5890
0x00005603      4883c428       add rsp, 0x28
0x00005607      5b             pop rbx
0x00005608      5d             pop rbp
0x00005609      415c           pop r12
0x0000560b      415d           pop r13
0x0000560d      415e           pop r14
0x0000560f      415f           pop r15
0x00005611      c3             ret
0x00005612      660f1f440000   nop word [rax + rax]
0x00005618      31ed           xor ebp, ebp
0x0000561a      eba4           jmp 0x55c0
0x0000561c      0f1f4000       nop dword [rax]
0x00005620      440fb66500     movzx r12d, byte [rbp]
0x00005625      4584e4         test r12b, r12b
0x00005628      74be           je 0x55e8
0x0000562a      410fbef4       movsx esi, r12b
0x0000562e      4c89ef         mov rdi, r13
0x00005631      31ed           xor ebp, ebp
0x00005633      e898bfffff     call sym.imp.strchr
0x00005638      4885c0         test rax, rax
0x0000563b      bb01000000     mov ebx, 1
0x00005640      488b4c2408     mov rcx, qword [rsp + 8]
0x00005645      74a1           je 0x55e8
0x00005647      410fbef4       movsx esi, r12b
0x0000564b      4c89ef         mov rdi, r13
0x0000564e      48894c2408     mov qword [rsp + 8], rcx
0x00005653      e878bfffff     call sym.imp.strchr
0x00005658      4885c0         test rax, rax
0x0000565b      488b4c2408     mov rcx, qword [rsp + 8]
0x00005660      0f84c6000000   je 0x572c
0x00005666      418d4424bb     lea eax, [r12 - 0x45]
0x0000566b      3c2f           cmp al, 0x2f
0x0000566d      7751           ja 0x56c0
0x0000566f      48ba45893000.  movabs rdx, 0x814400308945
0x00005679      480fa3c2       bt rdx, rax
0x0000567d      7341           jae 0x56c0
0x0000567f      be30000000     mov esi, 0x30                           ; '0'
0x00005684      4c89ef         mov rdi, r13
0x00005687      48894c2408     mov qword [rsp + 8], rcx
0x0000568c      e83fbfffff     call sym.imp.strchr
0x00005691      4885c0         test rax, rax
0x00005694      488b4c2408     mov rcx, qword [rsp + 8]
0x00005699      7425           je 0x56c0
0x0000569b      0fb64101       movzx eax, byte [rcx + 1]
0x0000569f      3c44           cmp al, 0x44
0x000056a1      740c           je 0x56af
0x000056a3      3c69           cmp al, 0x69
0x000056a5      0f84cd010000   je 0x5878
0x000056ab      3c42           cmp al, 0x42
0x000056ad      7511           jne 0x56c0
0x000056af      bf02000000     mov edi, 2
0x000056b4      bee8030000     mov esi, 0x3e8
0x000056b9      eb0f           jmp 0x56ca
0x000056bb      0f1f440000     nop dword [rax + rax]
0x000056c0      bf01000000     mov edi, 1
0x000056c5      be00040000     mov esi, 0x400
0x000056ca      4183ec42       sub r12d, 0x42
0x000056ce      4180fc35       cmp r12b, 0x35
0x000056d2      7758           ja 0x572c
0x000056d4      488d156d1500.  lea rdx, [0x00006c48]
0x000056db      450fb6e4       movzx r12d, r12b
0x000056df      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000056e3      4801d0         add rax, rdx
0x000056e6      ffe0           jmp rax
0x000056e8      4889d8         mov rax, rbx
0x000056eb      48f7e6         mul rsi
0x000056ee      0f80ed010000   jo 0x58e1
0x000056f4      4531c0         xor r8d, r8d
0x000056f7      48f7e6         mul rsi
0x000056fa      0f80d2010000   jo 0x58d2
0x00005700      4889c3         mov rbx, rax
0x00005703      4409c5         or ebp, r8d
0x00005706      662e0f1f8400.  nop word cs:[rax + rax]
0x00005710      4863ff         movsxd rdi, edi
0x00005713      89e8           mov eax, ebp
0x00005715      4801f9         add rcx, rdi
0x00005718      83c802         or eax, 2
0x0000571b      49890f         mov qword [r15], rcx
0x0000571e      803900         cmp byte [rcx], 0
0x00005721      49891e         mov qword [r14], rbx
0x00005724      0f45e8         cmovne ebp, eax
0x00005727      e9c1feffff     jmp 0x55ed
0x0000572c      49891e         mov qword [r14], rbx
0x0000572f      83cd02         or ebp, 2
0x00005732      e9b6feffff     jmp 0x55ed
0x00005737      ba02000000     mov edx, 2
0x0000573c      4889d0         mov rax, rdx
0x0000573f      48f7e3         mul rbx
0x00005742      0f8096000000   jo 0x57de
0x00005748      4801db         add rbx, rbx
0x0000574b      ebc3           jmp 0x5710
0x0000574d      ba00020000     mov edx, 0x200
0x00005752      4889d0         mov rax, rdx
0x00005755      48f7e3         mul rbx
0x00005758      0f8080000000   jo 0x57de
0x0000575e      48c1e309       shl rbx, 9
0x00005762      ebac           jmp 0x5710
0x00005764      41b807000000   mov r8d, 7
0x0000576a      4531c9         xor r9d, r9d
0x0000576d      0f1f00         nop dword [rax]
0x00005770      4889d8         mov rax, rbx
0x00005773      48f7e6         mul rsi
0x00005776      4889c3         mov rbx, rax
0x00005779      0f808f010000   jo 0x590e
0x0000577f      4183e801       sub r8d, 1
0x00005783      75eb           jne 0x5770
0x00005785      4409cd         or ebp, r9d
0x00005788      eb86           jmp 0x5710
0x0000578a      41b808000000   mov r8d, 8
0x00005790      4531c9         xor r9d, r9d
0x00005793      0f1f440000     nop dword [rax + rax]
0x00005798      4889d8         mov rax, rbx
0x0000579b      48f7e6         mul rsi
0x0000579e      4889c3         mov rbx, rax
0x000057a1      0f8049010000   jo 0x58f0
0x000057a7      4183e801       sub r8d, 1
0x000057ab      75eb           jne 0x5798
0x000057ad      ebd6           jmp 0x5785
0x000057af      41b804000000   mov r8d, 4
0x000057b5      4531c9         xor r9d, r9d
0x000057b8      4889d8         mov rax, rbx
0x000057bb      48f7e6         mul rsi
0x000057be      4889c3         mov rbx, rax
0x000057c1      0f80fc000000   jo 0x58c3
0x000057c7      4183e801       sub r8d, 1
0x000057cb      75eb           jne 0x57b8
0x000057cd      ebb6           jmp 0x5785
0x000057cf      4889d8         mov rax, rbx
0x000057d2      48f7e6         mul rsi
0x000057d5      4889c3         mov rbx, rax
0x000057d8      0f8132ffffff   jno 0x5710
0x000057de      bd01000000     mov ebp, 1
0x000057e3      4883cbff       or rbx, 0xffffffffffffffff
0x000057e7      e924ffffff     jmp 0x5710
0x000057ec      0f1f4000       nop dword [rax]
0x000057f0      41b805000000   mov r8d, 5
0x000057f6      4531c9         xor r9d, r9d
0x000057f9      4889d8         mov rax, rbx
0x000057fc      48f7e6         mul rsi
0x000057ff      4889c3         mov rbx, rax
0x00005802      0f80f7000000   jo 0x58ff
0x00005808      4183e801       sub r8d, 1
0x0000580c      75eb           jne 0x57f9
0x0000580e      e972ffffff     jmp 0x5785
0x00005813      41b806000000   mov r8d, 6
0x00005819      4531c9         xor r9d, r9d
0x0000581c      4889d8         mov rax, rbx
0x0000581f      48f7e6         mul rsi
0x00005822      4889c3         mov rbx, rax
0x00005825      0f8089000000   jo 0x58b4
0x0000582b      4183e801       sub r8d, 1
0x0000582f      75eb           jne 0x581c
0x00005831      e94fffffff     jmp 0x5785
0x00005836      ba00040000     mov edx, 0x400
0x0000583b      4889d0         mov rax, rdx
0x0000583e      48f7e3         mul rbx
0x00005841      709b           jo 0x57de
0x00005843      48c1e30a       shl rbx, 0xa
0x00005847      e9c4feffff     jmp 0x5710
0x0000584c      4889d8         mov rax, rbx
0x0000584f      48f7e6         mul rsi
0x00005852      0f80c5000000   jo 0x591d
0x00005858      4531c0         xor r8d, r8d
0x0000585b      48f7e6         mul rsi
0x0000585e      0f8193feffff   jno 0x56f7
0x00005864      41b801000000   mov r8d, 1
0x0000586a      4883c8ff       or rax, 0xffffffffffffffff
0x0000586e      e984feffff     jmp 0x56f7
0x00005873      0f1f440000     nop dword [rax + rax]
0x00005878      31ff           xor edi, edi
0x0000587a      80790242       cmp byte [rcx + 2], 0x42
0x0000587e      be00040000     mov esi, 0x400
0x00005883      400f94c7       sete dil
0x00005887      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000588b      e93afeffff     jmp 0x56ca
0x00005890      e80bbdffff     call sym.imp.__stack_chk_fail
0x00005895      488d0d841400.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x6d20 ; "xstrtoumax"
0x0000589c      488d355d1300.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x6c00 ; "../coreutils-8.31/lib/xstrtol.c"
0x000058a3      488d3d761300.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x6c20 ; "0 <= strtol_base && strtol_base <= 36"
0x000058aa      ba54000000     mov edx, 0x54                           ; 'T'
0x000058af      e85cbdffff     call sym.imp.__assert_fail
0x000058b4      41b901000000   mov r9d, 1
0x000058ba      4883cbff       or rbx, 0xffffffffffffffff
0x000058be      e968ffffff     jmp 0x582b
0x000058c3      41b901000000   mov r9d, 1
0x000058c9      4883cbff       or rbx, 0xffffffffffffffff
0x000058cd      e9f5feffff     jmp 0x57c7
0x000058d2      41b801000000   mov r8d, 1
0x000058d8      4883cbff       or rbx, 0xffffffffffffffff
0x000058dc      e922feffff     jmp 0x5703
0x000058e1      4883c8ff       or rax, 0xffffffffffffffff
0x000058e5      41b801000000   mov r8d, 1
0x000058eb      e907feffff     jmp 0x56f7
0x000058f0      41b901000000   mov r9d, 1
0x000058f6      4883cbff       or rbx, 0xffffffffffffffff
0x000058fa      e9a8feffff     jmp 0x57a7
0x000058ff      41b901000000   mov r9d, 1
0x00005905      4883cbff       or rbx, 0xffffffffffffffff
0x00005909      e9fafeffff     jmp 0x5808
0x0000590e      41b901000000   mov r9d, 1
0x00005914      4883cbff       or rbx, 0xffffffffffffffff
0x00005918      e962feffff     jmp 0x577f
0x0000591d      41b801000000   mov r8d, 1
0x00005923      4883c8ff       or rax, 0xffffffffffffffff
0x00005927      e92fffffff     jmp 0x585b
0x0000592c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00005930      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00005932      55             push rbp
0x00005933      53             push rbx
0x00005934      4889fb         mov rbx, rdi
0x00005937      e874bdffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000593c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000593e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00005941      7854           js 0x5997                               ; ../coreutils-8.31/lib/fclose.c:66
0x00005943      e8a8bdffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00005948      85c0           test eax, eax
0x0000594a      752c           jne 0x5978
0x0000594c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000594f      e85c000000     call sym.rpl_fflush
0x00005954      85c0           test eax, eax
0x00005956      743c           je 0x5994
0x00005958      e893bbffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000595d      448b20         mov r12d, dword [rax]
0x00005960      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005963      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00005966      e8e5bbffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000596b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000596e      7530           jne 0x59a0
0x00005970      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005971      5d             pop rbp
0x00005972      415c           pop r12
0x00005974      c3             ret
0x00005975      0f1f00         nop dword [rax]
0x00005978      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000597b      e830bdffff     call sym.imp.fileno
0x00005980      31f6           xor esi, esi
0x00005982      ba01000000     mov edx, 1
0x00005987      89c7           mov edi, eax
0x00005989      e872bcffff     call sym.imp.lseek
0x0000598e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005992      75b8           jne 0x594c
0x00005994      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005997      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005998      5d             pop rbp
0x00005999      415c           pop r12
0x0000599b      e9b0bbffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x000059a0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x000059a4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x000059a9      ebc5           jmp 0x5970
0x000059ab      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x000059b0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x000059b3      53             push rbx
0x000059b4      4889fb         mov rbx, rdi
0x000059b7      7411           je 0x59ca                               ; ../coreutils-8.31/lib/fflush.c:150
0x000059b9      e832bdffff     call sym.imp.__freading
0x000059be      85c0           test eax, eax
0x000059c0      7408           je 0x59ca
0x000059c2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x000059c8      750e           jne 0x59d8
0x000059ca      4889df         mov rdi, rbx
0x000059cd      5b             pop rbx
0x000059ce      e9fdbcffff     jmp sym.imp.fflush
0x000059d3      0f1f440000     nop dword [rax + rax]
0x000059d8      4889df         mov rdi, rbx
0x000059db      ba01000000     mov edx, 1
0x000059e0      31f6           xor esi, esi
0x000059e2      e809000000     call sym.rpl_fseeko
0x000059e7      4889df         mov rdi, rbx
0x000059ea      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x000059eb      e9e0bcffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x000059f0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x000059f4      48394710       cmp qword [rdi + 0x10], rax
0x000059f8      7406           je 0x5a00                               ; ../coreutils-8.31/lib/fseeko.c:32
0x000059fa      e961bdffff     jmp sym.imp.fseeko
0x000059ff      90             nop
0x00005a00      488b4720       mov rax, qword [rdi + 0x20]
0x00005a04      48394728       cmp qword [rdi + 0x28], rax
0x00005a08      75f0           jne 0x59fa                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00005a0a      48837f4800     cmp qword [rdi + 0x48], 0
0x00005a0f      75e9           jne 0x59fa                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005a11      4154           push r12
0x00005a13      55             push rbp
0x00005a14      4189d4         mov r12d, edx
0x00005a17      53             push rbx
0x00005a18      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00005a1b      4889fb         mov rbx, rdi
0x00005a1e      e88dbcffff     call sym.imp.fileno
0x00005a23      4489e2         mov edx, r12d
0x00005a26      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00005a29      89c7           mov edi, eax
0x00005a2b      e8d0bbffff     call sym.imp.lseek
0x00005a30      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005a34      740c           je 0x5a42
0x00005a36      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005a39      488983900000.  mov qword [rbx + 0x90], rax
0x00005a40      31c0           xor eax, eax
0x00005a42      5b             pop rbx
0x00005a43      5d             pop rbp
0x00005a44      415c           pop r12
0x00005a46      c3             ret
0x00005a47      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00005a50      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005a52      4154           push r12
0x00005a54      4989f5         mov r13, rsi
0x00005a57      55             push rbp
0x00005a58      53             push rbx
0x00005a59      4889fb         mov rbx, rdi
0x00005a5c      4989d4         mov r12, rdx
0x00005a5f      4883ec18       sub rsp, 0x18
0x00005a63      64488b042528.  mov rax, qword fs:[0x28]
0x00005a6c      4889442408     mov qword [rsp + 8], rax
0x00005a71      31c0           xor eax, eax
0x00005a73      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005a78      4885ff         test rdi, rdi
0x00005a7b      480f44d8       cmove rbx, rax
0x00005a7f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005a82      e839bbffff     call sym.imp.mbrtowc
0x00005a87      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005a8b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005a8e      7620           jbe 0x5ab0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005a90      4d85e4         test r12, r12
0x00005a93      741b           je 0x5ab0
0x00005a95      31ff           xor edi, edi
0x00005a97      e8c4000000     call sym.hard_locale
0x00005a9c      84c0           test al, al
0x00005a9e      7510           jne 0x5ab0
0x00005aa0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005aa5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00005aaa      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005aac      0f1f4000       nop dword [rax]
0x00005ab0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005ab5      644833142528.  xor rdx, qword fs:[0x28]
0x00005abe      4889e8         mov rax, rbp
0x00005ac1      750b           jne 0x5ace
0x00005ac3      4883c418       add rsp, 0x18
0x00005ac7      5b             pop rbx
0x00005ac8      5d             pop rbp
0x00005ac9      415c           pop r12
0x00005acb      415d           pop r13
0x00005acd      c3             ret
0x00005ace      e8cdbaffff     call sym.imp.__stack_chk_fail
0x00005ad3      662e0f1f8400.  nop word cs:[rax + rax]
0x00005add      0f1f00         nop dword [rax]
;-- close_stream:
0x00005ae0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00005ae2      55             push rbp
0x00005ae3      4889fd         mov rbp, rdi
0x00005ae6      53             push rbx
0x00005ae7      e834baffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00005aec      8b5d00         mov ebx, dword [rbp]
0x00005aef      4889ef         mov rdi, rbp
0x00005af2      4989c4         mov r12, rax
0x00005af5      e836feffff     call sym.rpl_fclose
0x00005afa      83e320         and ebx, 0x20                           ; "@"
0x00005afd      85db           test ebx, ebx
0x00005aff      7517           jne 0x5b18
0x00005b01      85c0           test eax, eax
0x00005b03      740a           je 0x5b0f                               ; stdio.h:-186
0x00005b05      4d85e4         test r12, r12                           ; stdio.h:-178
0x00005b08      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005b0d      7439           je 0x5b48
0x00005b0f      5b             pop rbx
0x00005b10      5d             pop rbp
0x00005b11      415c           pop r12
0x00005b13      c3             ret
0x00005b14      0f1f4000       nop dword [rax]
0x00005b18      85c0           test eax, eax
0x00005b1a      751c           jne 0x5b38
0x00005b1c      e8cfb9ffff     call sym.imp.__errno_location
0x00005b21      c70000000000   mov dword [rax], 0
0x00005b27      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005b2c      5b             pop rbx
0x00005b2d      5d             pop rbp
0x00005b2e      415c           pop r12
0x00005b30      c3             ret
0x00005b31      0f1f80000000.  nop dword [rax]
0x00005b38      5b             pop rbx
0x00005b39      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005b3e      5d             pop rbp                                 ; stdio.h:-186
0x00005b3f      415c           pop r12
0x00005b41      c3             ret
0x00005b42      660f1f440000   nop word [rax + rax]
0x00005b48      e8a3b9ffff     call sym.imp.__errno_location
0x00005b4d      833809         cmp dword [rax], 9
0x00005b50      5b             pop rbx
0x00005b51      5d             pop rbp
0x00005b52      415c           pop r12                                 ; stdio.h:-178
0x00005b54      0f95c0         setne al
0x00005b57      0fb6c0         movzx eax, al
0x00005b5a      f7d8           neg eax
0x00005b5c      c3             ret
0x00005b5d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00005b60      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00005b64      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00005b66      e8b5bbffff     call sym.imp.setlocale
0x00005b6b      4889c2         mov rdx, rax
0x00005b6e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00005b73      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00005b76      741d           je 0x5b95
0x00005b78      488d3dac1100.  lea rdi, [0x00006d2b]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00005b7f      b902000000     mov ecx, 2
0x00005b84      4889d6         mov rsi, rdx
0x00005b87      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005b89      0f97c1         seta cl
0x00005b8c      80d900         sbb cl, 0
0x00005b8f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00005b91      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00005b93      750b           jne 0x5ba0
0x00005b95      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005b99      c3             ret
0x00005b9a      660f1f440000   nop word [rax + rax]
0x00005ba0      488d3d861100.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x6d2d ; "POSIX"
0x00005ba7      b906000000     mov ecx, 6
0x00005bac      4889d6         mov rsi, rdx
0x00005baf      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005bb1      0f97c0         seta al
0x00005bb4      1c00           sbb al, 0
0x00005bb6      84c0           test al, al
0x00005bb8      0f95c0         setne al
0x00005bbb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005bbf      c3             ret
;-- locale_charset:
0x00005bc0      4883ec08       sub rsp, 8
0x00005bc4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00005bc9      e812bbffff     call sym.imp.nl_langinfo
0x00005bce      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00005bd1      741d           je 0x5bf0
0x00005bd3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00005bd6      488d15561100.  lea rdx, str.ASCII                      ; 0x6d33 ; "ASCII"
0x00005bdd      480f44c2       cmove rax, rdx
0x00005be1      4883c408       add rsp, 8
0x00005be5      c3             ret
0x00005be6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005bf0      488d053c1100.  lea rax, str.ASCII                      ; 0x6d33 ; "ASCII"
0x00005bf7      4883c408       add rsp, 8
0x00005bfb      c3             ret
0x00005bfc      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00005c00      4157           push r15
0x00005c02      4156           push r14
0x00005c04      4989d7         mov r15, rdx
0x00005c07      4155           push r13
0x00005c09      4154           push r12
0x00005c0b      4c8d25fe2e20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x208b10
0x00005c12      55             push rbp
0x00005c13      488d2dfe2e20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x208b18
0x00005c1a      53             push rbx
0x00005c1b      4189fd         mov r13d, edi
0x00005c1e      4989f6         mov r14, rsi
0x00005c21      4c29e5         sub rbp, r12
0x00005c24      4883ec08       sub rsp, 8
0x00005c28      48c1fd03       sar rbp, 3
0x00005c2c      e877b8ffff     call sym._init
0x00005c31      4885ed         test rbp, rbp
0x00005c34      7420           je 0x5c56
0x00005c36      31db           xor ebx, ebx
0x00005c38      0f1f84000000.  nop dword [rax + rax]
0x00005c40      4c89fa         mov rdx, r15
0x00005c43      4c89f6         mov rsi, r14
0x00005c46      4489ef         mov edi, r13d
0x00005c49      41ff14dc       call qword [r12 + rbx*8]
0x00005c4d      4883c301       add rbx, 1
0x00005c51      4839dd         cmp rbp, rbx
0x00005c54      75ea           jne 0x5c40
0x00005c56      4883c408       add rsp, 8
0x00005c5a      5b             pop rbx
0x00005c5b      5d             pop rbp
0x00005c5c      415c           pop r12
0x00005c5e      415d           pop r13
0x00005c60      415e           pop r14
0x00005c62      415f           pop r15
0x00005c64      c3             ret
0x00005c65      90             nop
0x00005c66      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00005c70      f3c3           ret
0x00005c72      662e0f1f8400.  nop word cs:[rax + rax]
0x00005c7c      0f1f4000       nop dword [rax]
;-- atexit:
0x00005c80      488b15813320.  mov rdx, qword [obj.__dso_handle]       ; [0x209008:8]=0x209008 obj.__dso_handle
0x00005c87      31f6           xor esi, esi
0x00005c89      e9f2baffff     jmp sym.imp.__cxa_atexit
0x00005c8e      0000           add byte [rax], al
