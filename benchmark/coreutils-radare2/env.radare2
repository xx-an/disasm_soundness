;-- section..plt:
;-- .plt:
0x00001870      ff355a852000   push qword [0x00209dd0]                 ; [12] -r-x section size 1008 named .plt
0x00001876      ff255c852000   jmp qword [0x00209dd8]                  ; [0x209dd8:8]=0
0x0000187c      0f1f4000       nop dword [rax]
;-- imp.getenv:
0x00001880      ff255a852000   jmp qword [reloc.getenv]                ; [0x209de0:8]=0x1886
0x00001886      6800000000     push 0
0x0000188b      e9e0ffffff     jmp sym..plt
;-- imp.sigprocmask:
0x00001890      ff2552852000   jmp qword [reloc.sigprocmask]           ; [0x209de8:8]=0x1896
0x00001896      6801000000     push 1
0x0000189b      e9d0ffffff     jmp sym..plt
;-- imp.free:
0x000018a0      ff254a852000   jmp qword [reloc.free]                  ; [0x209df0:8]=0x18a6
0x000018a6      6802000000     push 2
0x000018ab      e9c0ffffff     jmp sym..plt
;-- imp.abort:
0x000018b0      ff2542852000   jmp qword [reloc.abort]                 ; [0x209df8:8]=0x18b6
0x000018b6      6803000000     push 3
0x000018bb      e9b0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000018c0      ff253a852000   jmp qword [reloc.__errno_location]      ; [0x209e00:8]=0x18c6
0x000018c6      6804000000     push 4
0x000018cb      e9a0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000018d0      ff2532852000   jmp qword [reloc.strncmp]               ; [0x209e08:8]=0x18d6
0x000018d6      6805000000     push 5
0x000018db      e990ffffff     jmp sym..plt
;-- imp._exit:
0x000018e0      ff252a852000   jmp qword [reloc._exit]                 ; [0x209e10:8]=0x18e6
0x000018e6      6806000000     push 6
0x000018eb      e980ffffff     jmp sym..plt
;-- imp.strcpy:
0x000018f0      ff2522852000   jmp qword [reloc.strcpy]                ; [0x209e18:8]=0x18f6
0x000018f6      6807000000     push 7
0x000018fb      e970ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001900      ff251a852000   jmp qword [reloc.__fpending]            ; [0x209e20:8]=0x1906
0x00001906      6808000000     push 8
0x0000190b      e960ffffff     jmp sym..plt
;-- imp.sigaction:
0x00001910      ff2512852000   jmp qword [reloc.sigaction]             ; [0x209e28:8]=0x1916
0x00001916      6809000000     push 9
0x0000191b      e950ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001920      ff250a852000   jmp qword [reloc.textdomain]            ; [0x209e30:8]=0x1926 ; "&\x19"
0x00001926      680a000000     push 0xa
0x0000192b      e940ffffff     jmp sym..plt
;-- imp.fclose:
0x00001930      ff2502852000   jmp qword [reloc.fclose]                ; [0x209e38:8]=0x1936 ; "6\x19"
0x00001936      680b000000     push 0xb
0x0000193b      e930ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001940      ff25fa842000   jmp qword [reloc.bindtextdomain]        ; [0x209e40:8]=0x1946 ; "F\x19"
0x00001946      680c000000     push 0xc
0x0000194b      e920ffffff     jmp sym..plt
;-- imp.stpcpy:
0x00001950      ff25f2842000   jmp qword [reloc.stpcpy]                ; [0x209e48:8]=0x1956 ; "V\x19"
0x00001956      680d000000     push 0xd
0x0000195b      e910ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001960      ff25ea842000   jmp qword [reloc.dcgettext]             ; [0x209e50:8]=0x1966 ; "f\x19"
0x00001966      680e000000     push 0xe
0x0000196b      e900ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001970      ff25e2842000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x209e58:8]=0x1976 ; "v\x19"
0x00001976      680f000000     push 0xf
0x0000197b      e9f0feffff     jmp sym..plt
;-- imp.strlen:
0x00001980      ff25da842000   jmp qword [reloc.strlen]                ; [0x209e60:8]=0x1986
0x00001986      6810000000     push 0x10
0x0000198b      e9e0feffff     jmp sym..plt
;-- imp.chdir:
0x00001990      ff25d2842000   jmp qword [reloc.chdir]                 ; [0x209e68:8]=0x1996
0x00001996      6811000000     push 0x11
0x0000199b      e9d0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000019a0      ff25ca842000   jmp qword [reloc.__stack_chk_fail]      ; [0x209e70:8]=0x19a6
0x000019a6      6812000000     push 0x12
0x000019ab      e9c0feffff     jmp sym..plt
;-- imp.getopt_long:
0x000019b0      ff25c2842000   jmp qword [reloc.getopt_long]           ; [0x209e78:8]=0x19b6
0x000019b6      6813000000     push 0x13
0x000019bb      e9b0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x000019c0      ff25ba842000   jmp qword [reloc.mbrtowc]               ; [0x209e80:8]=0x19c6
0x000019c6      6814000000     push 0x14
0x000019cb      e9a0feffff     jmp sym..plt
;-- imp.strchr:
0x000019d0      ff25b2842000   jmp qword [reloc.strchr]                ; [0x209e88:8]=0x19d6
0x000019d6      6815000000     push 0x15
0x000019db      e990feffff     jmp sym..plt
;-- imp.strrchr:
0x000019e0      ff25aa842000   jmp qword [reloc.strrchr]               ; [0x209e90:8]=0x19e6
0x000019e6      6816000000     push 0x16
0x000019eb      e980feffff     jmp sym..plt
;-- imp.lseek:
0x000019f0      ff25a2842000   jmp qword [reloc.lseek]                 ; [0x209e98:8]=0x19f6
0x000019f6      6817000000     push 0x17
0x000019fb      e970feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001a00      ff259a842000   jmp qword [reloc.__assert_fail]         ; [0x209ea0:8]=0x1a06
0x00001a06      6818000000     push 0x18
0x00001a0b      e960feffff     jmp sym..plt
;-- imp.memset:
0x00001a10      ff2592842000   jmp qword [reloc.memset]                ; [0x209ea8:8]=0x1a16
0x00001a16      6819000000     push 0x19
0x00001a1b      e950feffff     jmp sym..plt
;-- imp.strspn:
0x00001a20      ff258a842000   jmp qword [reloc.strspn]                ; [0x209eb0:8]=0x1a26 ; "&\x1a"
0x00001a26      681a000000     push 0x1a
0x00001a2b      e940feffff     jmp sym..plt
;-- imp.memcmp:
0x00001a30      ff2582842000   jmp qword [reloc.memcmp]                ; [0x209eb8:8]=0x1a36 ; "6\x1a"
0x00001a36      681b000000     push 0x1b
0x00001a3b      e930feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001a40      ff257a842000   jmp qword [reloc.fputs_unlocked]        ; [0x209ec0:8]=0x1a46 ; "F\x1a"
0x00001a46      681c000000     push 0x1c
0x00001a4b      e920feffff     jmp sym..plt
;-- imp.calloc:
0x00001a50      ff2572842000   jmp qword [reloc.calloc]                ; [0x209ec8:8]=0x1a56 ; "V\x1a"
0x00001a56      681d000000     push 0x1d
0x00001a5b      e910feffff     jmp sym..plt
;-- imp.putenv:
0x00001a60      ff256a842000   jmp qword [reloc.putenv]                ; [0x209ed0:8]=0x1a66 ; "f\x1a"
0x00001a66      681e000000     push 0x1e
0x00001a6b      e900feffff     jmp sym..plt
;-- imp.strcmp:
0x00001a70      ff2562842000   jmp qword [reloc.strcmp]                ; [0x209ed8:8]=0x1a76 ; "v\x1a"
0x00001a76      681f000000     push 0x1f
0x00001a7b      e9f0fdffff     jmp sym..plt
;-- imp.sigemptyset:
0x00001a80      ff255a842000   jmp qword [reloc.sigemptyset]           ; [0x209ee0:8]=0x1a86
0x00001a86      6820000000     push 0x20                               ; "@"
0x00001a8b      e9e0fdffff     jmp sym..plt
;-- imp.strtol:
0x00001a90      ff2552842000   jmp qword [reloc.strtol]                ; [0x209ee8:8]=0x1a96
0x00001a96      6821000000     push 0x21                               ; '!'
0x00001a9b      e9d0fdffff     jmp sym..plt
;-- imp.sigfillset:
0x00001aa0      ff254a842000   jmp qword [reloc.sigfillset]            ; [0x209ef0:8]=0x1aa6
0x00001aa6      6822000000     push 0x22                               ; '"'
0x00001aab      e9c0fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001ab0      ff2542842000   jmp qword [reloc.memcpy]                ; [0x209ef8:8]=0x1ab6
0x00001ab6      6823000000     push 0x23                               ; '#'
0x00001abb      e9b0fdffff     jmp sym..plt
;-- imp.fileno:
0x00001ac0      ff253a842000   jmp qword [reloc.fileno]                ; [0x209f00:8]=0x1ac6
0x00001ac6      6824000000     push 0x24                               ; '$'
0x00001acb      e9a0fdffff     jmp sym..plt
;-- imp.malloc:
0x00001ad0      ff2532842000   jmp qword [reloc.malloc]                ; [0x209f08:8]=0x1ad6
0x00001ad6      6825000000     push 0x25                               ; '%'
0x00001adb      e990fdffff     jmp sym..plt
;-- imp.fflush:
0x00001ae0      ff252a842000   jmp qword [reloc.fflush]                ; [0x209f10:8]=0x1ae6
0x00001ae6      6826000000     push 0x26                               ; '&'
0x00001aeb      e980fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001af0      ff2522842000   jmp qword [reloc.nl_langinfo]           ; [0x209f18:8]=0x1af6
0x00001af6      6827000000     push 0x27                               ; '''
0x00001afb      e970fdffff     jmp sym..plt
;-- imp.__freading:
0x00001b00      ff251a842000   jmp qword [reloc.__freading]            ; [0x209f20:8]=0x1b06
0x00001b06      6828000000     push 0x28                               ; '('
0x00001b0b      e960fdffff     jmp sym..plt
;-- imp.realloc:
0x00001b10      ff2512842000   jmp qword [reloc.realloc]               ; [0x209f28:8]=0x1b16
0x00001b16      6829000000     push 0x29                               ; ')'
0x00001b1b      e950fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001b20      ff250a842000   jmp qword [reloc.setlocale]             ; [0x209f30:8]=0x1b26 ; "&\x1b"
0x00001b26      682a000000     push 0x2a                               ; '*'
0x00001b2b      e940fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001b30      ff2502842000   jmp qword [reloc.__printf_chk]          ; [0x209f38:8]=0x1b36 ; "6\x1b"
0x00001b36      682b000000     push 0x2b                               ; '+'
0x00001b3b      e930fdffff     jmp sym..plt
;-- imp.error:
0x00001b40      ff25fa832000   jmp qword [reloc.error]                 ; [0x209f40:8]=0x1b46 ; "F\x1b"
0x00001b46      682c000000     push 0x2c                               ; ','
0x00001b4b      e920fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001b50      ff25f2832000   jmp qword [reloc.fseeko]                ; [0x209f48:8]=0x1b56 ; "V\x1b"
0x00001b56      682d000000     push 0x2d                               ; '-'
0x00001b5b      e910fdffff     jmp sym..plt
;-- imp.sigdelset:
0x00001b60      ff25ea832000   jmp qword [reloc.sigdelset]             ; [0x209f50:8]=0x1b66 ; "f\x1b"
0x00001b66      682e000000     push 0x2e                               ; '.'
0x00001b6b      e900fdffff     jmp sym..plt
;-- imp.strtok:
0x00001b70      ff25e2832000   jmp qword [reloc.strtok]                ; [0x209f58:8]=0x1b76 ; "v\x1b"
0x00001b76      682f000000     push 0x2f                               ; '/'
0x00001b7b      e9f0fcffff     jmp sym..plt
;-- imp.unsetenv:
0x00001b80      ff25da832000   jmp qword [reloc.unsetenv]              ; [0x209f60:8]=0x1b86
0x00001b86      6830000000     push 0x30                               ; '0'
0x00001b8b      e9e0fcffff     jmp sym..plt
;-- imp.execvp:
0x00001b90      ff25d2832000   jmp qword [reloc.execvp]                ; [0x209f68:8]=0x1b96
0x00001b96      6831000000     push 0x31                               ; '1'
0x00001b9b      e9d0fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001ba0      ff25ca832000   jmp qword [reloc.__cxa_atexit]          ; [0x209f70:8]=0x1ba6
0x00001ba6      6832000000     push 0x32                               ; '2'
0x00001bab      e9c0fcffff     jmp sym..plt
;-- imp.__libc_current_sigrtmin:
0x00001bb0      ff25c2832000   jmp qword [reloc.__libc_current_sigrtmin] ; [0x209f78:8]=0x1bb6
0x00001bb6      6833000000     push 0x33                               ; '3'
0x00001bbb      e9b0fcffff     jmp sym..plt
;-- imp.sigismember:
0x00001bc0      ff25ba832000   jmp qword [reloc.sigismember]           ; [0x209f80:8]=0x1bc6
0x00001bc6      6834000000     push 0x34                               ; '4'
0x00001bcb      e9a0fcffff     jmp sym..plt
;-- imp.exit:
0x00001bd0      ff25b2832000   jmp qword [reloc.exit]                  ; [0x209f88:8]=0x1bd6
0x00001bd6      6835000000     push 0x35                               ; '5'
0x00001bdb      e990fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001be0      ff25aa832000   jmp qword [reloc.fwrite]                ; [0x209f90:8]=0x1be6
0x00001be6      6836000000     push 0x36                               ; '6'
0x00001beb      e980fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001bf0      ff25a2832000   jmp qword [reloc.__fprintf_chk]         ; [0x209f98:8]=0x1bf6
0x00001bf6      6837000000     push 0x37                               ; '7'
0x00001bfb      e970fcffff     jmp sym..plt
;-- imp.__libc_current_sigrtmax:
0x00001c00      ff259a832000   jmp qword [reloc.__libc_current_sigrtmax] ; [0x209fa0:8]=0x1c06
0x00001c06      6838000000     push 0x38                               ; '8'
0x00001c0b      e960fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001c10      ff2592832000   jmp qword [reloc.mbsinit]               ; [0x209fa8:8]=0x1c16
0x00001c16      6839000000     push 0x39                               ; '9'
0x00001c1b      e950fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001c20      ff258a832000   jmp qword [reloc.iswprint]              ; [0x209fb0:8]=0x1c26 ; "&\x1c"
0x00001c26      683a000000     push 0x3a                               ; ':'
0x00001c2b      e940fcffff     jmp sym..plt
;-- imp.sigaddset:
0x00001c30      ff2582832000   jmp qword [reloc.sigaddset]             ; [0x209fb8:8]=0x1c36 ; "6\x1c"
0x00001c36      683b000000     push 0x3b                               ; ';'
0x00001c3b      e930fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001c40      ff257a832000   jmp qword [reloc.__ctype_b_loc]         ; [0x209fc0:8]=0x1c46 ; "F\x1c"
0x00001c46      683c000000     push 0x3c                               ; '<'
0x00001c4b      e920fcffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x00001c50      ff2572832000   jmp qword [reloc.__sprintf_chk]         ; [0x209fc8:8]=0x1c56 ; "V\x1c"
0x00001c56      683d000000     push 0x3d                               ; '='
0x00001c5b      e910fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001c60      .qword 0x90660020838a25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001c68      0000           add byte [rax], al
0x00001c6a      0000           add byte [rax], al
0x00001c6c      0000           add byte [rax], al
0x00001c6e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001c70      4157           push r15                                ; [14] -r-x section size 20158 named .text
0x00001c72      4156           push r14
0x00001c74      4989f7         mov r15, rsi
0x00001c77      4155           push r13
0x00001c79      4154           push r12
0x00001c7b      55             push rbp
0x00001c7c      53             push rbx
0x00001c7d      4881ec180100.  sub rsp, 0x118
0x00001c84      897c2448       mov dword [rsp + 0x48], edi
0x00001c88      488b3e         mov rdi, qword [rsi]
0x00001c8b      64488b042528.  mov rax, qword fs:[0x28]
0x00001c94      488984240801.  mov qword [rsp + 0x108], rax
0x00001c9c      31c0           xor eax, eax
0x00001c9e      e8dd220000     call sym.set_program_name
0x00001ca3      488d35075000.  lea rsi, [0x00006cb1]
0x00001caa      bf06000000     mov edi, 6
0x00001caf      e86cfeffff     call sym.imp.setlocale
0x00001cb4      488d35b34f00.  lea rsi, str.usr_local_share_locale     ; 0x6c6e ; "/usr/local/share/locale"
0x00001cbb      488d3d4d4f00.  lea rdi, [0x00006c0f]                   ; "coreutils"
0x00001cc2      e879fcffff     call sym.imp.bindtextdomain
0x00001cc7      488d3d414f00.  lea rdi, [0x00006c0f]                   ; "coreutils"
0x00001cce      e84dfcffff     call sym.imp.textdomain
0x00001cd3      488d3df62100.  lea rdi, sym.close_stdout               ; 0x3ed0 ; "USH\x83\xec\bH\x8b=kc "
0x00001cda      c70534832000.  mov dword [obj.exit_failure], 0x7d      ; '}'
                                                                       ; [0x20a018:4]=1
0x00001ce4      e8374e0000     call sym.atexit
0x00001ce9      bf04010000     mov edi, 0x104
0x00001cee      e8dd450000     call sym.xmalloc
0x00001cf3      488d90040100.  lea rdx, [rax + 0x104]
0x00001cfa      488905bf8620.  mov qword [obj.signals], rax            ; [0x20a3c0:8]=0
0x00001d01      0f1f80000000.  nop dword [rax]
0x00001d08      c70000000000   mov dword [rax], 0
0x00001d0e      4883c004       add rax, 4
0x00001d12      4839c2         cmp rdx, rax
0x00001d15      75f1           jne 0x1d08
0x00001d17      48c744240800.  mov qword [rsp + 8], 0
0x00001d20      c644241000     mov byte [rsp + 0x10], 0
0x00001d25      c644241800     mov byte [rsp + 0x18], 0
0x00001d2a      660f1f440000   nop word [rax + rax]
0x00001d30      8b7c2448       mov edi, dword [rsp + 0x48]
0x00001d34      488d0da57c20.  lea rcx, obj.longopts                   ; 0x2099e0
0x00001d3b      488d15b65900.  lea rdx, obj.shortopts                  ; 0x76f8 ; "+C:iS:u:v0 \t"
0x00001d42      4531c0         xor r8d, r8d
0x00001d45      4c89fe         mov rsi, r15
0x00001d48      e863fcffff     call sym.imp.getopt_long
0x00001d4d      83f8ff         cmp eax, 0xffffffff
0x00001d50      0f8427080000   je 0x257d
0x00001d56      83f853         cmp eax, 0x53
0x00001d59      0f84a1000000   je 0x1e00
0x00001d5f      7e3f           jle 0x1da0
0x00001d61      3d80000000     cmp eax, 0x80
0x00001d66      0f84d4010000   je 0x1f40
0x00001d6c      7f6a           jg 0x1dd8
0x00001d6e      83f875         cmp eax, 0x75
0x00001d71      0f8439020000   je 0x1fb0
0x00001d77      83f876         cmp eax, 0x76
0x00001d7a      0f8420020000   je 0x1fa0
0x00001d80      83f869         cmp eax, 0x69
0x00001d83      740b           je 0x1d90
0x00001d85      bf7d000000     mov edi, 0x7d                           ; '}'
0x00001d8a      e801170000     call sym.usage
0x00001d8f      90             nop
0x00001d90      c644241801     mov byte [rsp + 0x18], 1
0x00001d95      eb99           jmp 0x1d30
0x00001d97      660f1f840000.  nop word [rax + rax]
0x00001da0      83f809         cmp eax, 9
0x00001da3      0f8491100000   je 0x2e3a
0x00001da9      0f8e51020000   jle 0x2000
0x00001daf      83f830         cmp eax, 0x30
0x00001db2      0f8438020000   je 0x1ff0
0x00001db8      83f843         cmp eax, 0x43
0x00001dbb      0f85d6100000   jne 0x2e97
0x00001dc1      488b05988420.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a260:8]=0
0x00001dc8      4889442408     mov qword [rsp + 8], rax
0x00001dcd      e95effffff     jmp 0x1d30
0x00001dd2      660f1f440000   nop word [rax + rax]
0x00001dd8      3d82000000     cmp eax, 0x82
0x00001ddd      0f849d010000   je 0x1f80
0x00001de3      0f8c7f010000   jl 0x1f68
0x00001de9      3d83000000     cmp eax, 0x83
0x00001dee      7595           jne 0x1d85
0x00001df0      c605b1842000.  mov byte [obj.report_signal_handling], 1 ; [0x20a2a8:1]=0
0x00001df7      e934ffffff     jmp 0x1d30
0x00001dfc      0f1f4000       nop dword [rax]
0x00001e00      e83bfeffff     call sym.imp.__ctype_b_loc
0x00001e05      4c8b25548420.  mov r12, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a260:8]=0
0x00001e0c      4989c3         mov r11, rax
0x00001e0f      4c8b00         mov r8, qword [rax]
0x00001e12      eb08           jmp 0x1e1c
0x00001e14      0f1f4000       nop dword [rax]
0x00001e18      4983c401       add r12, 1
0x00001e1c      490fbe3424     movsx rsi, byte [r12]
0x00001e21      41f644700120   test byte [r8 + rsi*2 + 1], 0x20
0x00001e27      4889f2         mov rdx, rsi
0x00001e2a      75ec           jne 0x1e18
0x00001e2c      4084f6         test sil, sil
0x00001e2f      0f84fbfeffff   je 0x1d30
0x00001e35      8b442448       mov eax, dword [rsp + 0x48]
0x00001e39      2b0511842000   sub eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a250:4]=0
0x00001e3f      4983c9ff       or r9, 0xffffffffffffffff
0x00001e43      4c89e7         mov rdi, r12
0x00001e46      4c89c9         mov rcx, r9
0x00001e49      bb01000000     mov ebx, 1
0x00001e4e      4531d2         xor r10d, r10d
0x00001e51      4d89e5         mov r13, r12
0x00001e54      4531f6         xor r14d, r14d
0x00001e57      31ed           xor ebp, ebp
0x00001e59      89442430       mov dword [rsp + 0x30], eax
0x00001e5d      31c0           xor eax, eax
0x00001e5f      f2ae           repne scasb al, byte [rdi]
0x00001e61      4c89642438     mov qword [rsp + 0x38], r12
0x00001e66      4c897c2440     mov qword [rsp + 0x40], r15
0x00001e6b      4589d4         mov r12d, r10d
0x00001e6e      48f7d1         not rcx
0x00001e71      4189df         mov r15d, ebx
0x00001e74      4c894c2428     mov qword [rsp + 0x28], r9
0x00001e79      48894c2420     mov qword [rsp + 0x20], rcx
0x00001e7e      4c89db         mov rbx, r11
0x00001e81      0f1f80000000.  nop dword [rax]
0x00001e88      41f644700120   test byte [r8 + rsi*2 + 1], 0x20
0x00001e8e      410fb64501     movzx eax, byte [r13 + 1]
0x00001e93      0f84b7010000   je 0x2050
0x00001e99      4489f1         mov ecx, r14d
0x00001e9c      4008e9         or cl, bpl
0x00001e9f      0f85ab010000   jne 0x2050
0x00001ea5      80fa24         cmp dl, 0x24
0x00001ea8      41bc01000000   mov r12d, 1
0x00001eae      0f84f7030000   je 0x22ab
0x00001eb4      0f8e46040000   jle 0x2300
0x00001eba      80fa27         cmp dl, 0x27
0x00001ebd      0f84c5030000   je 0x2288
0x00001ec3      80fa5c         cmp dl, 0x5c
0x00001ec6      0f853d040000   jne 0x2309
0x00001ecc      3c63           cmp al, 0x63
0x00001ece      400f94c6       sete sil
0x00001ed2      4084f6         test sil, sil
0x00001ed5      89f2           mov edx, esi
0x00001ed7      7409           je 0x1ee2
0x00001ed9      4084ed         test bpl, bpl
0x00001edc      0f858d110000   jne 0x306f
0x00001ee2      84c0           test al, al
0x00001ee4      0f842d100000   je 0x2f17
0x00001eea      8d489a         lea ecx, [rax - 0x66]
0x00001eed      80f910         cmp cl, 0x10
0x00001ef0      770d           ja 0x1eff
0x00001ef2      ba01510100     mov edx, 0x15101
0x00001ef7      48d3ea         shr rdx, cl
0x00001efa      83e201         and edx, 1
0x00001efd      09f2           or edx, esi
0x00001eff      84d2           test dl, dl
0x00001f01      0f85d9030000   jne 0x22e0
0x00001f07      8d50de         lea edx, [rax - 0x22]
0x00001f0a      80fa3d         cmp dl, 0x3d
0x00001f0d      0f86b0030000   jbe 0x22c3
0x00001f13      488d35784d00.  lea rsi, str.invalid_sequence_____c__in__S ; 0x6c92 ; "invalid sequence '\%c' in -S"
0x00001f1a      89c5           mov ebp, eax
0x00001f1c      ba05000000     mov edx, 5
0x00001f21      31ff           xor edi, edi
0x00001f23      e838faffff     call sym.imp.dcgettext
0x00001f28      400fbecd       movsx ecx, bpl
0x00001f2c      4889c2         mov rdx, rax
0x00001f2f      31f6           xor esi, esi
0x00001f31      bf7d000000     mov edi, 0x7d                           ; '}'
0x00001f36      31c0           xor eax, eax
0x00001f38      e803fcffff     call sym.imp.error
0x00001f3d      0f1f00         nop dword [rax]
0x00001f40      488b3d198320.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a260:8]=0
0x00001f47      be01000000     mov esi, 1
0x00001f4c      e81f1a0000     call sym.parse_signal_action_params
0x00001f51      488b3d088320.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a260:8]=0
0x00001f58      31f6           xor esi, esi
0x00001f5a      e8811b0000     call sym.parse_block_signal_params
0x00001f5f      e9ccfdffff     jmp 0x1d30
0x00001f64      0f1f4000       nop dword [rax]
0x00001f68      488b3df18220.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a260:8]=0
0x00001f6f      31f6           xor esi, esi
0x00001f71      e8fa190000     call sym.parse_signal_action_params
0x00001f76      e9b5fdffff     jmp 0x1d30
0x00001f7b      0f1f440000     nop dword [rax + rax]
0x00001f80      488b3dd98220.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a260:8]=0
0x00001f87      be01000000     mov esi, 1
0x00001f8c      e84f1b0000     call sym.parse_block_signal_params
0x00001f91      e99afdffff     jmp 0x1d30
0x00001f96      662e0f1f8400.  nop word cs:[rax + rax]
0x00001fa0      c60531842000.  mov byte [obj.dev_debug], 1             ; [0x20a3d8:1]=0
0x00001fa7      e984fdffff     jmp 0x1d30
0x00001fac      0f1f4000       nop dword [rax]
0x00001fb0      488b0d298420.  mov rcx, qword [obj.usvars_used]        ; [0x20a3e0:8]=0
0x00001fb7      483b0d2a8420.  cmp rcx, qword [obj.usvars_alloc]       ; [0x20a3e8:8]=0
0x00001fbe      488b1d9b8220.  mov rbx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a260:8]=0
0x00001fc5      4889c8         mov rax, rcx
0x00001fc8      0f840c070000   je 0x26da
0x00001fce      488d5001       lea rdx, [rax + 1]
0x00001fd2      488915078420.  mov qword [obj.usvars_used], rdx        ; [0x20a3e0:8]=0
0x00001fd9      488b15108420.  mov rdx, qword [obj.usvars]             ; [0x20a3f0:8]=0
0x00001fe0      48891cc2       mov qword [rdx + rax*8], rbx
0x00001fe4      e947fdffff     jmp 0x1d30
0x00001fe9      0f1f80000000.  nop dword [rax]
0x00001ff0      c644241001     mov byte [rsp + 0x10], 1
0x00001ff5      e936fdffff     jmp 0x1d30
0x00001ffa      660f1f440000   nop word [rax + rax]
0x00002000      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00002005      0f851d0e0000   jne 0x2e28
0x0000200b      488d051e4d00.  lea rax, str.Assaf_Gordon               ; 0x6d30 ; "Assaf Gordon"
0x00002012      488b3d2f8220.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a248:8]=0
0x00002019      488b0df07f20.  mov rcx, qword [obj.Version]            ; [0x20a010:8]=0x7720 str.8.31 ; " w"
0x00002020      6a00           push 0
0x00002022      4c8d0de64c00.  lea r9, str.David_MacKenzie             ; 0x6d0f ; "David MacKenzie"
0x00002029      4c8d05ef4c00.  lea r8, str.Richard_Mlynarik            ; 0x6d1f ; "Richard Mlynarik"
0x00002030      50             push rax
0x00002031      488d15d34b00.  lea rdx, str.GNU_coreutils              ; 0x6c0b ; "GNU coreutils"
0x00002038      488d35524b00.  lea rsi, [0x00006b91]                   ; "env"
0x0000203f      31c0           xor eax, eax
0x00002041      e82a410000     call sym.version_etc
0x00002046      31ff           xor edi, edi
0x00002048      e883fbffff     call sym.imp.exit
0x0000204d      0f1f00         nop dword [rax]
0x00002050      4180fc01       cmp r12b, 1
0x00002054      4183dfff       sbb r15d, 0xffffffff
0x00002058      80fa24         cmp dl, 0x24
0x0000205b      0f8447020000   je 0x22a8
0x00002061      7e35           jle 0x2098
0x00002063      4531e4         xor r12d, r12d
0x00002066      80fa27         cmp dl, 0x27
0x00002069      0f8419020000   je 0x2288
0x0000206f      80fa5c         cmp dl, 0x5c
0x00002072      0f8454feffff   je 0x1ecc
0x00002078      89c2           mov edx, eax
0x0000207a      4531e4         xor r12d, r12d
0x0000207d      4983c501       add r13, 1
0x00002081      84d2           test dl, dl
0x00002083      7434           je 0x20b9
0x00002085      4c8b03         mov r8, qword [rbx]
0x00002088      480fbef2       movsx rsi, dl
0x0000208c      e9f7fdffff     jmp 0x1e88
0x00002091      0f1f80000000.  nop dword [rax]
0x00002098      80fa22         cmp dl, 0x22
0x0000209b      75db           jne 0x2078
0x0000209d      4589f4         mov r12d, r14d
0x000020a0      4120ec         and r12b, bpl
0x000020a3      0f85920e0000   jne 0x2f3b
0x000020a9      4409f5         or ebp, r14d
0x000020ac      89c2           mov edx, eax
0x000020ae      4983c501       add r13, 1
0x000020b2      83f501         xor ebp, 1
0x000020b5      84d2           test dl, dl
0x000020b7      75cc           jne 0x2085
0x000020b9      4408f5         or bpl, r14b
0x000020bc      4489fb         mov ebx, r15d
0x000020bf      4c8b642438     mov r12, qword [rsp + 0x38]
0x000020c4      4c8b7c2440     mov r15, qword [rsp + 0x40]
0x000020c9      0f85aa0e0000   jne 0x2f79
0x000020cf      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000020d4      4883c707       add rdi, 7
0x000020d8      e8f3410000     call sym.xmalloc
0x000020dd      4889c5         mov rbp, rax
0x000020e0      8b442430       mov eax, dword [rsp + 0x30]
0x000020e4      8d7c1802       lea edi, [rax + rbx + 2]
0x000020e8      4c89e3         mov rbx, r12
0x000020eb      4863ff         movsxd rdi, edi
0x000020ee      48c1e703       shl rdi, 3
0x000020f2      e8d9410000     call sym.xmalloc
0x000020f7      4c8d7008       lea r14, [rax + 8]
0x000020fb      c7450044554d.  mov dword [rbp], 0x4d4d5544             ; 'DUMM'
0x00002102      66c745045900   mov word [rbp + 4], 0x59                ; 'Y'
0x00002108      488928         mov qword [rax], rbp
0x0000210b      4989c2         mov r10, rax
0x0000210e      4883c506       add rbp, 6
0x00002112      4d89f5         mov r13, r14
0x00002115      4531c9         xor r9d, r9d
0x00002118      4531db         xor r11d, r11d
0x0000211b      41b801000000   mov r8d, 1
0x00002121      0fb603         movzx eax, byte [rbx]
0x00002124      84c0           test al, al
0x00002126      7456           je 0x217e
0x00002128      3c23           cmp al, 0x23
0x0000212a      0f84f8030000   je 0x2528
0x00002130      0f8e3a020000   jle 0x2370
0x00002136      3c27           cmp al, 0x27
0x00002138      0f84b6030000   je 0x24f4
0x0000213e      3c5c           cmp al, 0x5c
0x00002140      0f8480030000   je 0x24c6
0x00002146      3c24           cmp al, 0x24
0x00002148      0f8480020000   je 0x23ce
0x0000214e      4889d9         mov rcx, rbx
0x00002151      4584c0         test r8b, r8b
0x00002154      488d5501       lea rdx, [rbp + 1]
0x00002158      0f8462020000   je 0x23c0
0x0000215e      c6450000       mov byte [rbp], 0
0x00002162      49895500       mov qword [r13], rdx
0x00002166      4883c502       add rbp, 2
0x0000216a      4983c508       add r13, 8
0x0000216e      488d5901       lea rbx, [rcx + 1]
0x00002172      8802           mov byte [rdx], al
0x00002174      4531c0         xor r8d, r8d
0x00002177      0fb603         movzx eax, byte [rbx]
0x0000217a      84c0           test al, al
0x0000217c      75aa           jne 0x2128
0x0000217e      803d53822000.  cmp byte [obj.dev_debug], 0             ; [0x20a3d8:1]=0
0x00002185      49c745000000.  mov qword [r13], 0
0x0000218d      498b07         mov rax, qword [r15]
0x00002190      c6450000       mov byte [rbp], 0
0x00002194      498902         mov qword [r10], rax
0x00002197      0f84f2040000   je 0x268f
0x0000219d      49837a0800     cmp qword [r10 + 8], 0
0x000021a2      745c           je 0x2200
0x000021a4      4c89e7         mov rdi, r12
0x000021a7      4c89542420     mov qword [rsp + 0x20], r10
0x000021ac      e8df3a0000     call sym.quote
0x000021b1      488b3dc88020.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a280:8]=0
0x000021b8      488d150e4b00.  lea rdx, str.split__S:___s              ; 0x6ccd ; "split -S:  %s\n"
0x000021bf      4889c1         mov rcx, rax
0x000021c2      be01000000     mov esi, 1
0x000021c7      31c0           xor eax, eax
0x000021c9      e822faffff     call sym.imp.__fprintf_chk
0x000021ce      803d03822000.  cmp byte [obj.dev_debug], 0             ; [0x20a3d8:1]=0
0x000021d5      4c8b542420     mov r10, qword [rsp + 0x20]
0x000021da      0f856e0a0000   jne 0x2c4e
0x000021e0      4c89d3         mov rbx, r10
0x000021e3      498b3e         mov rdi, qword [r14]
0x000021e6      0fb605eb8120.  movzx eax, byte [obj.dev_debug]         ; [0x20a3d8:1]=0
0x000021ed      eb09           jmp 0x21f8
0x000021ef      90             nop
0x000021f0      84c0           test al, al
0x000021f2      0f853d080000   jne 0x2a35
0x000021f8      4885ff         test rdi, rdi
0x000021fb      75f3           jne 0x21f0
0x000021fd      4989da         mov r10, rbx
0x00002200      486305498020.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a250:4]=0
0x00002207      8b4c2448       mov ecx, dword [rsp + 0x48]
0x0000220b      39c8           cmp eax, ecx
0x0000220d      7d35           jge 0x2244
0x0000220f      89c7           mov edi, eax
0x00002211      f7d7           not edi
0x00002213      8d140f         lea edx, [rdi + rcx]
0x00002216      498d0cc7       lea rcx, [r15 + rax*8]
0x0000221a      31c0           xor eax, eax
0x0000221c      488d34d50800.  lea rsi, [rdx*8 + 8]
0x00002224      0f1f4000       nop dword [rax]
0x00002228      488b1401       mov rdx, qword [rcx + rax]
0x0000222c      49891406       mov qword [r14 + rax], rdx
0x00002230      4883c008       add rax, 8
0x00002234      4839c6         cmp rsi, rax
0x00002237      75ef           jne 0x2228
0x00002239      8b442448       mov eax, dword [rsp + 0x48]
0x0000223d      01f8           add eax, edi
0x0000223f      4d8d74c608     lea r14, [r14 + rax*8 + 8]
0x00002244      49c706000000.  mov qword [r14], 0
0x0000224b      49833a00       cmp qword [r10], 0
0x0000224f      0f84cc080000   je 0x2b21
0x00002255      4c89d0         mov rax, r10
0x00002258      31d2           xor edx, edx
0x0000225a      660f1f440000   nop word [rax + rax]
0x00002260      4883c008       add rax, 8
0x00002264      83c201         add edx, 1
0x00002267      48833800       cmp qword [rax], 0
0x0000226b      75f3           jne 0x2260
0x0000226d      89542448       mov dword [rsp + 0x48], edx
0x00002271      c705d57f2000.  mov dword [obj.optind], 0               ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a250:4]=0
0x0000227b      4d89d7         mov r15, r10
0x0000227e      e9adfaffff     jmp 0x1d30
0x00002283      0f1f440000     nop dword [rax + rax]
0x00002288      4584f6         test r14b, r14b
0x0000228b      7409           je 0x2296
0x0000228d      4084ed         test bpl, bpl
0x00002290      0f85c40c0000   jne 0x2f5a
0x00002296      4109ee         or r14d, ebp
0x00002299      89c2           mov edx, eax
0x0000229b      4183f601       xor r14d, 1
0x0000229f      e9d9fdffff     jmp 0x207d
0x000022a4      0f1f4000       nop dword [rax]
0x000022a8      4531e4         xor r12d, r12d
0x000022ab      4584f6         test r14b, r14b
0x000022ae      7470           je 0x2320
0x000022b0      4983c501       add r13, 1
0x000022b4      84c0           test al, al
0x000022b6      0f84bd0c0000   je 0x2f79
0x000022bc      89c2           mov edx, eax
0x000022be      e9c5fdffff     jmp 0x2088
0x000022c3      48b927000000.  movabs rcx, 0x2400000000000027          ; ''' ; 2594073385365405735
0x000022cd      480fa3d1       bt rcx, rdx
0x000022d1      0f833cfcffff   jae 0x1f13
0x000022d7      660f1f840000.  nop word [rax + rax]
0x000022e0      3c5f           cmp al, 0x5f
0x000022e2      410fb65502     movzx edx, byte [r13 + 2]
0x000022e7      0f94c0         sete al
0x000022ea      4983c501       add r13, 1
0x000022ee      0fb6c0         movzx eax, al
0x000022f1      4101c7         add r15d, eax
0x000022f4      e984fdffff     jmp 0x207d
0x000022f9      0f1f80000000.  nop dword [rax]
0x00002300      80fa22         cmp dl, 0x22
0x00002303      0f84a0fdffff   je 0x20a9
0x00002309      89c2           mov edx, eax
0x0000230b      4531f6         xor r14d, r14d
0x0000230e      31ed           xor ebp, ebp
0x00002310      41bc01000000   mov r12d, 1
0x00002316      e962fdffff     jmp 0x207d
0x0000231b      0f1f440000     nop dword [rax + rax]
0x00002320      4c89ef         mov rdi, r13
0x00002323      e8c80e0000     call sym.extract_varname
0x00002328      4885c0         test rax, rax
0x0000232b      0f843f0b0000   je 0x2e70
0x00002331      4889c7         mov rdi, rax
0x00002334      e847f5ffff     call sym.imp.getenv
0x00002339      4885c0         test rax, rax
0x0000233c      4889c7         mov rdi, rax
0x0000233f      741c           je 0x235d
0x00002341      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00002346      4489f0         mov eax, r14d
0x00002349      f2ae           repne scasb al, byte [rdi]
0x0000234b      488b442420     mov rax, qword [rsp + 0x20]
0x00002350      48f7d1         not rcx
0x00002353      488d4408ff     lea rax, [rax + rcx - 1]
0x00002358      4889442420     mov qword [rsp + 0x20], rax
0x0000235d      410fb65501     movzx edx, byte [r13 + 1]
0x00002362      e916fdffff     jmp 0x207d
0x00002367      660f1f840000.  nop word [rax + rax]
0x00002370      3c20           cmp al, 0x20                            ; "@"
0x00002372      7410           je 0x2384
0x00002374      3c22           cmp al, 0x22
0x00002376      0f84c4010000   je 0x2540
0x0000237c      3c09           cmp al, 9
0x0000237e      0f85cafdffff   jne 0x214e
0x00002384      4489df         mov edi, r11d
0x00002387      4889d9         mov rcx, rbx
0x0000238a      4408cf         or dil, r9b
0x0000238d      0f85befdffff   jne 0x2151
0x00002393      488d35154900.  lea rsi, [0x00006caf]                   ; " \t"
0x0000239a      4889df         mov rdi, rbx
0x0000239d      4c89542420     mov qword [rsp + 0x20], r10
0x000023a2      e879f6ffff     call sym.imp.strspn
0x000023a7      4531c9         xor r9d, r9d
0x000023aa      4801c3         add rbx, rax
0x000023ad      4531db         xor r11d, r11d
0x000023b0      41b801000000   mov r8d, 1
0x000023b6      4c8b542420     mov r10, qword [rsp + 0x20]
0x000023bb      e961fdffff     jmp 0x2121
0x000023c0      4889d6         mov rsi, rdx
0x000023c3      4889ea         mov rdx, rbp
0x000023c6      4889f5         mov rbp, rsi
0x000023c9      e9a0fdffff     jmp 0x216e
0x000023ce      4584c9         test r9b, r9b
0x000023d1      4889d9         mov rcx, rbx
0x000023d4      0f8577fdffff   jne 0x2151
0x000023da      4889df         mov rdi, rbx
0x000023dd      44885c244f     mov byte [rsp + 0x4f], r11b
0x000023e2      4c89542440     mov qword [rsp + 0x40], r10
0x000023e7      44884c2438     mov byte [rsp + 0x38], r9b
0x000023ec      4488442430     mov byte [rsp + 0x30], r8b
0x000023f1      e8fa0d0000     call sym.extract_varname
0x000023f6      4889c7         mov rdi, rax
0x000023f9      4889442428     mov qword [rsp + 0x28], rax
0x000023fe      e87df4ffff     call sym.imp.getenv
0x00002403      4885c0         test rax, rax
0x00002406      4889442420     mov qword [rsp + 0x20], rax
0x0000240b      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00002410      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00002416      440fb64c2438   movzx r9d, byte [rsp + 0x38]
0x0000241c      4c8b542440     mov r10, qword [rsp + 0x40]
0x00002421      440fb65c244f   movzx r11d, byte [rsp + 0x4f]
0x00002427      0f8401070000   je 0x2b2e
0x0000242d      4584c0         test r8b, r8b
0x00002430      7413           je 0x2445
0x00002432      488d4501       lea rax, [rbp + 1]
0x00002436      c6450000       mov byte [rbp], 0
0x0000243a      4983c508       add r13, 8
0x0000243e      498945f8       mov qword [r13 - 8], rax
0x00002442      4889c5         mov rbp, rax
0x00002445      803d8c7f2000.  cmp byte [obj.dev_debug], 0             ; [0x20a3d8:1]=0
0x0000244c      0f85a6070000   jne 0x2bf8
0x00002452      488b742420     mov rsi, qword [rsp + 0x20]
0x00002457      4889ef         mov rdi, rbp
0x0000245a      44885c2438     mov byte [rsp + 0x38], r11b
0x0000245f      4c89542430     mov qword [rsp + 0x30], r10
0x00002464      44884c2428     mov byte [rsp + 0x28], r9b
0x00002469      e8e2f4ffff     call sym.imp.stpcpy
0x0000246e      440fb64c2428   movzx r9d, byte [rsp + 0x28]
0x00002474      440fb65c2438   movzx r11d, byte [rsp + 0x38]
0x0000247a      4889c5         mov rbp, rax
0x0000247d      4c8b542430     mov r10, qword [rsp + 0x30]
0x00002482      4531c0         xor r8d, r8d
0x00002485      4889df         mov rdi, rbx
0x00002488      be7d000000     mov esi, 0x7d                           ; '}'
0x0000248d      44885c2438     mov byte [rsp + 0x38], r11b
0x00002492      4c89542430     mov qword [rsp + 0x30], r10
0x00002497      44884c2428     mov byte [rsp + 0x28], r9b
0x0000249c      4488442420     mov byte [rsp + 0x20], r8b
0x000024a1      e82af5ffff     call sym.imp.strchr
0x000024a6      440fb6442420   movzx r8d, byte [rsp + 0x20]
0x000024ac      488d5801       lea rbx, [rax + 1]
0x000024b0      440fb64c2428   movzx r9d, byte [rsp + 0x28]
0x000024b6      4c8b542430     mov r10, qword [rsp + 0x30]
0x000024bb      440fb65c2438   movzx r11d, byte [rsp + 0x38]
0x000024c1      e95bfcffff     jmp 0x2121
0x000024c6      4584c9         test r9b, r9b
0x000024c9      488d4b01       lea rcx, [rbx + 1]
0x000024cd      0fb65301       movzx edx, byte [rbx + 1]
0x000024d1      0f8480000000   je 0x2557
0x000024d7      80fa5c         cmp dl, 0x5c
0x000024da      0f8471fcffff   je 0x2151
0x000024e0      80fa27         cmp dl, 0x27
0x000024e3      be27000000     mov esi, 0x27                           ; '''
0x000024e8      0f44c6         cmove eax, esi
0x000024eb      480f45cb       cmovne rcx, rbx
0x000024ef      e95dfcffff     jmp 0x2151
0x000024f4      4584db         test r11b, r11b
0x000024f7      4889d9         mov rcx, rbx
0x000024fa      0f8551fcffff   jne 0x2151
0x00002500      4183f101       xor r9d, 1
0x00002504      4584c0         test r8b, r8b
0x00002507      7413           je 0x251c
0x00002509      488d4501       lea rax, [rbp + 1]
0x0000250d      c6450000       mov byte [rbp], 0
0x00002511      4983c508       add r13, 8
0x00002515      498945f8       mov qword [r13 - 8], rax
0x00002519      4889c5         mov rbp, rax
0x0000251c      4883c301       add rbx, 1
0x00002520      4531c0         xor r8d, r8d
0x00002523      e9f9fbffff     jmp 0x2121
0x00002528      4584c0         test r8b, r8b
0x0000252b      0f854dfcffff   jne 0x217e
0x00002531      4889ea         mov rdx, rbp
0x00002534      4889d9         mov rcx, rbx
0x00002537      4883c501       add rbp, 1
0x0000253b      e92efcffff     jmp 0x216e
0x00002540      4584c9         test r9b, r9b
0x00002543      4889d9         mov rcx, rbx
0x00002546      0f8505fcffff   jne 0x2151
0x0000254c      4183f301       xor r11d, 1
0x00002550      4584c0         test r8b, r8b
0x00002553      74c7           je 0x251c
0x00002555      ebb2           jmp 0x2509
0x00002557      8d42de         lea eax, [rdx - 0x22]
0x0000255a      3c3a           cmp al, 0x3a
0x0000255c      0f8704010000   ja 0x2666
0x00002562      48bb27000000.  movabs rbx, 0x400000000000027           ; ''' ; 288230376151711783
0x0000256c      480fa3c3       bt rbx, rax
0x00002570      0f835e030000   jae 0x28d4
0x00002576      89d0           mov eax, edx
0x00002578      e9d4fbffff     jmp 0x2151
0x0000257d      448b2dcc7c20.  mov r13d, dword [obj.optind]            ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a250:4]=0
0x00002584      443b6c2448     cmp r13d, dword [rsp + 0x48]
0x00002589      0f8c20010000   jl 0x26af
0x0000258f      807c241800     cmp byte [rsp + 0x18], 0
0x00002594      0f8424040000   je 0x29be
0x0000259a      803d377e2000.  cmp byte [obj.dev_debug], 0             ; [0x20a3d8:1]=0
0x000025a1      741d           je 0x25c0
0x000025a3      488b0dd67c20.  mov rcx, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a280:8]=0
0x000025aa      488d3d8c4700.  lea rdi, str.cleaning_environ           ; 0x6d3d ; "cleaning environ\n"
0x000025b1      ba11000000     mov edx, 0x11
0x000025b6      be01000000     mov esi, 1
0x000025bb      e820f6ffff     call sym.imp.fwrite
0x000025c0      488d05d97c20.  lea rax, obj.dummy_environ.7817         ; 0x20a2a0
0x000025c7      448b2d827c20.  mov r13d, dword [obj.optind]            ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a250:4]=0
0x000025ce      488905837c20.  mov qword [obj._environ], rax           ; obj.__environ__GLIBC_2.2.5
                                                                       ; [0x20a258:8]=0
0x000025d5      448b742448     mov r14d, dword [rsp + 0x48]
0x000025da      4539f5         cmp r13d, r14d
0x000025dd      0f8d4c010000   jge 0x272f
0x000025e3      488d2d834700.  lea rbp, str.setenv:____s               ; 0x6d6d ; "setenv:   %s\n"
0x000025ea      eb36           jmp 0x2622
0x000025ec      0f1f4000       nop dword [rax]
0x000025f0      486305597c20.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a250:4]=0
0x000025f7      498b3cc7       mov rdi, qword [r15 + rax*8]
0x000025fb      e860f4ffff     call sym.imp.putenv
0x00002600      85c0           test eax, eax
0x00002602      0f85220a0000   jne 0x302a
0x00002608      8b05427c2000   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a250:4]=0
0x0000260e      448d6801       lea r13d, [rax + 1]
0x00002612      4539f5         cmp r13d, r14d
0x00002615      44892d347c20.  mov dword [obj.optind], r13d            ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a250:4]=0
0x0000261c      0f8d0d010000   jge 0x272f
0x00002622      4963c5         movsxd rax, r13d
0x00002625      be3d000000     mov esi, 0x3d                           ; '='
0x0000262a      4d8b24c7       mov r12, qword [r15 + rax*8]
0x0000262e      4c89e7         mov rdi, r12
0x00002631      e89af3ffff     call sym.imp.strchr
0x00002636      4885c0         test rax, rax
0x00002639      4889c3         mov rbx, rax
0x0000263c      0f846e010000   je 0x27b0
0x00002642      803d8f7d2000.  cmp byte [obj.dev_debug], 0             ; [0x20a3d8:1]=0
0x00002649      74a5           je 0x25f0
0x0000264b      488b3d2e7c20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a280:8]=0
0x00002652      4c89e1         mov rcx, r12
0x00002655      4889ea         mov rdx, rbp
0x00002658      be01000000     mov esi, 1
0x0000265d      31c0           xor eax, eax
0x0000265f      e88cf5ffff     call sym.imp.__fprintf_chk
0x00002664      eb8a           jmp 0x25f0
0x00002666      80fa5f         cmp dl, 0x5f
0x00002669      0f8565020000   jne 0x28d4
0x0000266f      4584db         test r11b, r11b
0x00002672      b820000000     mov eax, 0x20                           ; "@"
0x00002677      0f85d4faffff   jne 0x2151
0x0000267d      4883c302       add rbx, 2
0x00002681      4589d9         mov r9d, r11d
0x00002684      41b801000000   mov r8d, 1
0x0000268a      e992faffff     jmp 0x2121
0x0000268f      49837a0800     cmp qword [r10 + 8], 0
0x00002694      0f8466fbffff   je 0x2200
0x0000269a      660f1f440000   nop word [rax + rax]
0x000026a0      4983c608       add r14, 8
0x000026a4      49833e00       cmp qword [r14], 0
0x000026a8      75f6           jne 0x26a0
0x000026aa      e951fbffff     jmp 0x2200
0x000026af      4963c5         movsxd rax, r13d
0x000026b2      488d35c15000.  lea rsi, [0x0000777a]                   ; "-"
0x000026b9      498b3cc7       mov rdi, qword [r15 + rax*8]
0x000026bd      e8aef3ffff     call sym.imp.strcmp
0x000026c2      85c0           test eax, eax
0x000026c4      0f85c5feffff   jne 0x258f
0x000026ca      4183c501       add r13d, 1
0x000026ce      44892d7b7b20.  mov dword [obj.optind], r13d            ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a250:4]=0
0x000026d5      e9c0feffff     jmp 0x259a
0x000026da      488b3d0f7d20.  mov rdi, qword [obj.usvars]             ; [0x20a3f0:8]=0
0x000026e1      4885ff         test rdi, rdi
0x000026e4      0f8482030000   je 0x2a6c
0x000026ea      48b8a9aaaaaa.  movabs rax, 0xaaaaaaaaaaaaaa9
0x000026f4      4839c1         cmp rcx, rax
0x000026f7      0f879c030000   ja 0x2a99
0x000026fd      4889c8         mov rax, rcx
0x00002700      48d1e8         shr rax, 1
0x00002703      488d4c0101     lea rcx, [rcx + rax + 1]
0x00002708      488d34cd0000.  lea rsi, [rcx*8]
0x00002710      48890dd17c20.  mov qword [obj.usvars_alloc], rcx       ; [0x20a3e8:8]=0
0x00002717      e8143c0000     call sym.xrealloc
0x0000271c      488905cd7c20.  mov qword [obj.usvars], rax             ; [0x20a3f0:8]=0
0x00002723      488b05b67c20.  mov rax, qword [obj.usvars_used]        ; [0x20a3e0:8]=0
0x0000272a      e99ff8ffff     jmp 0x1fce
0x0000272f      48837c240800   cmp qword [rsp + 8], 0
0x00002735      740b           je 0x2742
0x00002737      443b6c2448     cmp r13d, dword [rsp + 0x48]
0x0000273c      0f8db8080000   jge 0x2ffa
0x00002742      488b1d0f7b20.  mov rbx, qword [obj._environ]           ; obj.__environ__GLIBC_2.2.5
                                                                       ; [0x20a258:8]=0
0x00002749      488b13         mov rdx, qword [rbx]
0x0000274c      4885d2         test rdx, rdx
0x0000274f      7434           je 0x2785
0x00002751      807c241001     cmp byte [rsp + 0x10], 1
0x00002756      4c8d252c4600.  lea r12, str.s_c                        ; 0x6d89 ; "%s%c"
0x0000275d      19ed           sbb ebp, ebp
0x0000275f      83e50a         and ebp, 0xa
0x00002762      660f1f440000   nop word [rax + rax]
0x00002768      4883c308       add rbx, 8
0x0000276c      31c0           xor eax, eax
0x0000276e      89e9           mov ecx, ebp
0x00002770      4c89e6         mov rsi, r12
0x00002773      bf01000000     mov edi, 1
0x00002778      e8b3f3ffff     call sym.imp.__printf_chk
0x0000277d      488b13         mov rdx, qword [rbx]
0x00002780      4885d2         test rdx, rdx
0x00002783      75e3           jne 0x2768
0x00002785      31c0           xor eax, eax
0x00002787      488b8c240801.  mov rcx, qword [rsp + 0x108]
0x0000278f      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002798      0f8557080000   jne 0x2ff5
0x0000279e      4881c4180100.  add rsp, 0x118
0x000027a5      5b             pop rbx
0x000027a6      5d             pop rbp
0x000027a7      415c           pop r12
0x000027a9      415d           pop r13
0x000027ab      415e           pop r14
0x000027ad      415f           pop r15
0x000027af      c3             ret
0x000027b0      443b6c2448     cmp r13d, dword [rsp + 0x48]
0x000027b5      7d0b           jge 0x27c2
0x000027b7      807c241000     cmp byte [rsp + 0x10], 0
0x000027bc      0f85f4020000   jne 0x2ab6
0x000027c2      41bd04000000   mov r13d, 4
0x000027c8      41bc01000000   mov r12d, 1
0x000027ce      4c897c2410     mov qword [rsp + 0x10], r15
0x000027d3      eb15           jmp 0x27ea
0x000027d5      0f1f00         nop dword [rax]
0x000027d8      4183c401       add r12d, 1
0x000027dc      4983c504       add r13, 4
0x000027e0      4183fc41       cmp r12d, 0x41
0x000027e4      0f841e010000   je 0x2908
0x000027ea      488b05cf7b20.  mov rax, qword [obj.signals]            ; [0x20a3c0:8]=0
0x000027f1      428b0428       mov eax, dword [rax + r13]
0x000027f5      85c0           test eax, eax
0x000027f7      74df           je 0x27d8
0x000027f9      4c8d7c2450     lea r15, [rsp + 0x50]
0x000027fe      8d68fe         lea ebp, [rax - 2]
0x00002801      31f6           xor esi, esi
0x00002803      4489e7         mov edi, r12d
0x00002806      8d58ff         lea ebx, [rax - 1]
0x00002809      4c89fa         mov rdx, r15
0x0000280c      83e5fd         and ebp, 0xfffffffd                     ; 4294967293
0x0000280f      e8fcf0ffff     call sym.imp.sigaction
0x00002814      85c0           test eax, eax
0x00002816      4189c6         mov r14d, eax
0x00002819      7408           je 0x2823
0x0000281b      85ed           test ebp, ebp
0x0000281d      0f85a3070000   jne 0x2fc6
0x00002823      4585f6         test r14d, r14d
0x00002826      7529           jne 0x2851
0x00002828      31c0           xor eax, eax
0x0000282a      83fb01         cmp ebx, 1
0x0000282d      4c89fe         mov rsi, r15
0x00002830      0f97c0         seta al
0x00002833      4489e7         mov edi, r12d
0x00002836      31d2           xor edx, edx
0x00002838      4889442450     mov qword [rsp + 0x50], rax
0x0000283d      e8cef0ffff     call sym.imp.sigaction
0x00002842      85c0           test eax, eax
0x00002844      4189c6         mov r14d, eax
0x00002847      7408           je 0x2851
0x00002849      85ed           test ebp, ebp
0x0000284b      0f8553060000   jne 0x2ea4
0x00002851      803d807b2000.  cmp byte [obj.dev_debug], 0             ; [0x20a3d8:1]=0
0x00002858      0f847affffff   je 0x27d8
0x0000285e      488dac24f000.  lea rbp, [rsp + 0xf0]
0x00002866      4489e7         mov edi, r12d
0x00002869      4889ee         mov rsi, rbp
0x0000286c      e80f3f0000     call sym.sig2str
0x00002871      803d607b2000.  cmp byte [obj.dev_debug], 0             ; [0x20a3d8:1]=0
0x00002878      0f845affffff   je 0x27d8
0x0000287e      488d0d2c4400.  lea rcx, [0x00006cb1]
0x00002885      488d05bf4300.  lea rax, str.failure_ignored            ; 0x6c4b ; " (failure ignored)"
0x0000288c      4585f6         test r14d, r14d
0x0000288f      4c8d0dc84300.  lea r9, str.DEFAULT                     ; 0x6c5e ; "DEFAULT"
0x00002896      488b3de37920.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a280:8]=0
0x0000289d      488d15ea4400.  lea rdx, str.Reset_signal__s___d__to__s_s ; 0x6d8e ; "Reset signal %s (%d) to %s%s\n"
0x000028a4      480f44c1       cmove rax, rcx
0x000028a8      83fb01         cmp ebx, 1
0x000028ab      488d1dc14200.  lea rbx, str.IGNORE                     ; 0x6b73 ; "IGNORE"
0x000028b2      4589e0         mov r8d, r12d
0x000028b5      4889e9         mov rcx, rbp
0x000028b8      be01000000     mov esi, 1
0x000028bd      4c0f47cb       cmova r9, rbx
0x000028c1      4883ec08       sub rsp, 8
0x000028c5      50             push rax
0x000028c6      31c0           xor eax, eax
0x000028c8      e823f3ffff     call sym.imp.__fprintf_chk
0x000028cd      58             pop rax
0x000028ce      5a             pop rdx
0x000028cf      e904ffffff     jmp 0x27d8
0x000028d4      80fa63         cmp dl, 0x63
0x000028d7      0f84a1f8ffff   je 0x217e
0x000028dd      80fa72         cmp dl, 0x72
0x000028e0      0f842e050000   je 0x2e14
0x000028e6      0f8fb2010000   jg 0x2a9e
0x000028ec      80fa66         cmp dl, 0x66
0x000028ef      0f84e7010000   je 0x2adc
0x000028f5      80fa6e         cmp dl, 0x6e
0x000028f8      0f850d070000   jne 0x300b
0x000028fe      b80a000000     mov eax, 0xa
0x00002903      e949f8ffff     jmp 0x2151
0x00002908      e8b3efffff     call sym.imp.__errno_location
0x0000290d      803d95792000.  cmp byte [obj.sig_mask_changed], 0      ; [0x20a2a9:1]=0
0x00002914      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00002919      4889442410     mov qword [rsp + 0x10], rax
0x0000291e      0f85da030000   jne 0x2cfe
0x00002924      803d7d792000.  cmp byte [obj.report_signal_handling], 0 ; [0x20a2a8:1]=0
0x0000292b      7405           je 0x2932
0x0000292d      e8ee090000     call sym.list_signal_handling
0x00002932      48837c240800   cmp qword [rsp + 8], 0
0x00002938      741f           je 0x2959
0x0000293a      803d977a2000.  cmp byte [obj.dev_debug], 0             ; [0x20a3d8:1]=0
0x00002941      0f859f010000   jne 0x2ae6
0x00002947      488b7c2408     mov rdi, qword [rsp + 8]
0x0000294c      e83ff0ffff     call sym.imp.chdir
0x00002951      85c0           test eax, eax
0x00002953      0f853a070000   jne 0x3093
0x00002959      803d787a2000.  cmp byte [obj.dev_debug], 0             ; [0x20a3d8:1]=0
0x00002960      0f851f030000   jne 0x2c85
0x00002966      486305e37820.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a250:4]=0
0x0000296d      498d04c7       lea rax, [r15 + rax*8]
0x00002971      488b38         mov rdi, qword [rax]
0x00002974      4889c6         mov rsi, rax
0x00002977      e814f2ffff     call sym.imp.execvp
0x0000297c      488b442410     mov rax, qword [rsp + 0x10]
0x00002981      833802         cmp dword [rax], 2
0x00002984      0f84fb010000   je 0x2b85
0x0000298a      486305bf7820.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a250:4]=0
0x00002991      498b3cc7       mov rdi, qword [r15 + rax*8]
0x00002995      e8f6320000     call sym.quote
0x0000299a      4889c1         mov rcx, rax
0x0000299d      488b442410     mov rax, qword [rsp + 0x10]
0x000029a2      488d158c4d00.  lea rdx, [0x00007735]                   ; "%s"
0x000029a9      31ff           xor edi, edi
0x000029ab      8b30           mov esi, dword [rax]
0x000029ad      31c0           xor eax, eax
0x000029af      e88cf1ffff     call sym.imp.error
0x000029b4      b87e000000     mov eax, 0x7e                           ; '~'
0x000029b9      e9c9fdffff     jmp 0x2787
0x000029be      48833d1a7a20.  cmp qword [obj.usvars_used], 0          ; [0x20a3e0:8]=0
0x000029c6      0f8409fcffff   je 0x25d5
0x000029cc      4c8b2d1d7a20.  mov r13, qword [obj.usvars]             ; [0x20a3f0:8]=0
0x000029d3      4531e4         xor r12d, r12d
0x000029d6      488d2d724300.  lea rbp, str.unset:_____s               ; 0x6d4f ; "unset:    %s\n"
0x000029dd      eb28           jmp 0x2a07
0x000029df      90             nop
0x000029e0      4c8b2d097a20.  mov r13, qword [obj.usvars]             ; [0x20a3f0:8]=0
0x000029e7      4c01eb         add rbx, r13
0x000029ea      488b3b         mov rdi, qword [rbx]
0x000029ed      e88ef1ffff     call sym.imp.unsetenv
0x000029f2      85c0           test eax, eax
0x000029f4      0f85e3040000   jne 0x2edd
0x000029fa      4983c401       add r12, 1
0x000029fe      4c3b25db7920.  cmp r12, qword [obj.usvars_used]        ; [0x20a3e0:8]=0
0x00002a05      7359           jae 0x2a60
0x00002a07      803dca792000.  cmp byte [obj.dev_debug], 0             ; [0x20a3d8:1]=0
0x00002a0e      4a8d1ce50000.  lea rbx, [r12*8]
0x00002a16      74c8           je 0x29e0
0x00002a18      4b8b4ce500     mov rcx, qword [r13 + r12*8]
0x00002a1d      488b3d5c7820.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a280:8]=0
0x00002a24      4889ea         mov rdx, rbp
0x00002a27      be01000000     mov esi, 1
0x00002a2c      31c0           xor eax, eax
0x00002a2e      e8bdf1ffff     call sym.imp.__fprintf_chk
0x00002a33      ebab           jmp 0x29e0
0x00002a35      e856320000     call sym.quote
0x00002a3a      488b3d3f7820.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a280:8]=0
0x00002a41      488d15a24200.  lea rdx, str.s                          ; 0x6cea ; "     &    %s\n"
0x00002a48      4889c1         mov rcx, rax
0x00002a4b      be01000000     mov esi, 1
0x00002a50      31c0           xor eax, eax
0x00002a52      4983c608       add r14, 8
0x00002a56      e895f1ffff     call sym.imp.__fprintf_chk
0x00002a5b      e983f7ffff     jmp 0x21e3
0x00002a60      448b2de97720.  mov r13d, dword [obj.optind]            ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a250:4]=0
0x00002a67      e969fbffff     jmp 0x25d5
0x00002a6c      4885c9         test rcx, rcx
0x00002a6f      b810000000     mov eax, 0x10
0x00002a74      ba08000000     mov edx, 8
0x00002a79      480f44c8       cmove rcx, rax
0x00002a7d      4889d0         mov rax, rdx
0x00002a80      31f6           xor esi, esi
0x00002a82      48f7e1         mul rcx
0x00002a85      0f8048040000   jo 0x2ed3
0x00002a8b      4885c0         test rax, rax
0x00002a8e      7809           js 0x2a99
0x00002a90      4885f6         test rsi, rsi
0x00002a93      0f846ffcffff   je 0x2708
0x00002a99      e8823a0000     call sym.xalloc_die
0x00002a9e      80fa74         cmp dl, 0x74
0x00002aa1      7474           je 0x2b17
0x00002aa3      80fa76         cmp dl, 0x76
0x00002aa6      0f855f050000   jne 0x300b
0x00002aac      b80b000000     mov eax, 0xb
0x00002ab1      e99bf6ffff     jmp 0x2151
0x00002ab6      488d350b4b00.  lea rsi, str.cannot_specify___null___0__with_command ; 0x75c8 ; "cannot specify --null (-0) with command"
0x00002abd      ba05000000     mov edx, 5
0x00002ac2      31ff           xor edi, edi
0x00002ac4      e897eeffff     call sym.imp.dcgettext
0x00002ac9      31f6           xor esi, esi
0x00002acb      4889c2         mov rdx, rax
0x00002ace      31ff           xor edi, edi
0x00002ad0      31c0           xor eax, eax
0x00002ad2      e869f0ffff     call sym.imp.error
0x00002ad7      e9a9f2ffff     jmp 0x1d85
0x00002adc      b80c000000     mov eax, 0xc
0x00002ae1      e96bf6ffff     jmp 0x2151
0x00002ae6      488b742408     mov rsi, qword [rsp + 8]
0x00002aeb      bf04000000     mov edi, 4
0x00002af0      e8cb2e0000     call sym.quotearg_style
0x00002af5      488b3d847720.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a280:8]=0
0x00002afc      488d15a94200.  lea rdx, str.chdir:_____s               ; 0x6dac ; "chdir:    %s\n"
0x00002b03      4889c1         mov rcx, rax
0x00002b06      be01000000     mov esi, 1
0x00002b0b      31c0           xor eax, eax
0x00002b0d      e8def0ffff     call sym.imp.__fprintf_chk
0x00002b12      e930feffff     jmp 0x2947
0x00002b17      b809000000     mov eax, 9
0x00002b1c      e930f6ffff     jmp 0x2151
0x00002b21      c74424480000.  mov dword [rsp + 0x48], 0
0x00002b29      e943f7ffff     jmp 0x2271
0x00002b2e      803da3782000.  cmp byte [obj.dev_debug], 0             ; [0x20a3d8:1]=0
0x00002b35      0f844af9ffff   je 0x2485
0x00002b3b      488b3d3e7720.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a280:8]=0
0x00002b42      488d15274a00.  lea rdx, str.replacing____s__with_null_string ; 0x7570 ; "replacing ${%s} with null string\n"
0x00002b49      be01000000     mov esi, 1
0x00002b4e      31c0           xor eax, eax
0x00002b50      44885c2438     mov byte [rsp + 0x38], r11b
0x00002b55      4c89542430     mov qword [rsp + 0x30], r10
0x00002b5a      44884c2428     mov byte [rsp + 0x28], r9b
0x00002b5f      4488442420     mov byte [rsp + 0x20], r8b
0x00002b64      e887f0ffff     call sym.imp.__fprintf_chk
0x00002b69      440fb65c2438   movzx r11d, byte [rsp + 0x38]
0x00002b6f      4c8b542430     mov r10, qword [rsp + 0x30]
0x00002b74      440fb64c2428   movzx r9d, byte [rsp + 0x28]
0x00002b7a      440fb6442420   movzx r8d, byte [rsp + 0x20]
0x00002b80      e900f9ffff     jmp 0x2485
0x00002b85      486305c47620.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a250:4]=0
0x00002b8c      498b3cc7       mov rdi, qword [r15 + rax*8]
0x00002b90      e8fb300000     call sym.quote
0x00002b95      4889c1         mov rcx, rax
0x00002b98      488b442410     mov rax, qword [rsp + 0x10]
0x00002b9d      488d15914b00.  lea rdx, [0x00007735]                   ; "%s"
0x00002ba4      31ff           xor edi, edi
0x00002ba6      8b30           mov esi, dword [rax]
0x00002ba8      31c0           xor eax, eax
0x00002baa      e891efffff     call sym.imp.error
0x00002baf      4863059a7620.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a250:4]=0
0x00002bb6      be20000000     mov esi, 0x20                           ; "@"
0x00002bbb      498b3cc7       mov rdi, qword [r15 + rax*8]
0x00002bbf      e80ceeffff     call sym.imp.strchr
0x00002bc4      4885c0         test rax, rax
0x00002bc7      0f8451020000   je 0x2e1e
0x00002bcd      488d35c44900.  lea rsi, str.use___v_S_to_pass_options_in_shebang_lines ; 0x7598 ; "use -[v]S to pass options in shebang lines"
0x00002bd4      ba05000000     mov edx, 5
0x00002bd9      31ff           xor edi, edi
0x00002bdb      e880edffff     call sym.imp.dcgettext
0x00002be0      31f6           xor esi, esi
0x00002be2      4889c2         mov rdx, rax
0x00002be5      31ff           xor edi, edi
0x00002be7      31c0           xor eax, eax
0x00002be9      e852efffff     call sym.imp.error
0x00002bee      b87f000000     mov eax, 0x7f
0x00002bf3      e98ffbffff     jmp 0x2787
0x00002bf8      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00002bfd      44885c2440     mov byte [rsp + 0x40], r11b
0x00002c02      4c89542438     mov qword [rsp + 0x38], r10
0x00002c07      44884c2430     mov byte [rsp + 0x30], r9b
0x00002c0c      48894c2428     mov qword [rsp + 0x28], rcx
0x00002c11      e87a300000     call sym.quote
0x00002c16      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00002c1b      488b3d5e7620.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a280:8]=0
0x00002c22      488d158b4000.  lea rdx, [0x00006cb4]                   ; "expanding ${%s} into %s\n"
0x00002c29      4989c0         mov r8, rax
0x00002c2c      be01000000     mov esi, 1
0x00002c31      31c0           xor eax, eax
0x00002c33      e8b8efffff     call sym.imp.__fprintf_chk
0x00002c38      440fb65c2440   movzx r11d, byte [rsp + 0x40]
0x00002c3e      4c8b542438     mov r10, qword [rsp + 0x38]
0x00002c43      440fb64c2430   movzx r9d, byte [rsp + 0x30]
0x00002c49      e904f8ffff     jmp 0x2452
0x00002c4e      498b7a08       mov rdi, qword [r10 + 8]
0x00002c52      4d8d7210       lea r14, [r10 + 0x10]
0x00002c56      e835300000     call sym.quote
0x00002c5b      488b3d1e7620.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a280:8]=0
0x00002c62      488d15734000.  lea rdx, str.into:_____s                ; 0x6cdc ; " into:    %s\n"
0x00002c69      4889c1         mov rcx, rax
0x00002c6c      be01000000     mov esi, 1
0x00002c71      31c0           xor eax, eax
0x00002c73      e878efffff     call sym.imp.__fprintf_chk
0x00002c78      4c8b542420     mov r10, qword [rsp + 0x20]
0x00002c7d      4c89d3         mov rbx, r10
0x00002c80      e95ef5ffff     jmp 0x21e3
0x00002c85      486305c47520.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a250:4]=0
0x00002c8c      488b3ded7520.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a280:8]=0
0x00002c93      488d153e4100.  lea rdx, str.executing:__s              ; 0x6dd8 ; "executing: %s\n"
0x00002c9a      be01000000     mov esi, 1
0x00002c9f      4c8d25414100.  lea r12, str.arg__d____s                ; 0x6de7 ; "   arg[%d]= %s\n"
0x00002ca6      498b0cc7       mov rcx, qword [r15 + rax*8]
0x00002caa      31c0           xor eax, eax
0x00002cac      e83fefffff     call sym.imp.__fprintf_chk
0x00002cb1      48631d987520.  movsxd rbx, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a250:4]=0
0x00002cb8      eb37           jmp 0x2cf1
0x00002cba      803d17772000.  cmp byte [obj.dev_debug], 0             ; [0x20a3d8:1]=0
0x00002cc1      742a           je 0x2ced
0x00002cc3      498b3cdf       mov rdi, qword [r15 + rbx*8]
0x00002cc7      e8c42f0000     call sym.quote
0x00002ccc      89e9           mov ecx, ebp
0x00002cce      2b0d7c752000   sub ecx, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a250:4]=0
0x00002cd4      488b3da57520.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a280:8]=0
0x00002cdb      4989c0         mov r8, rax
0x00002cde      4c89e2         mov rdx, r12
0x00002ce1      be01000000     mov esi, 1
0x00002ce6      31c0           xor eax, eax
0x00002ce8      e803efffff     call sym.imp.__fprintf_chk
0x00002ced      4883c301       add rbx, 1
0x00002cf1      3b5c2448       cmp ebx, dword [rsp + 0x48]
0x00002cf5      89dd           mov ebp, ebx
0x00002cf7      7cc1           jl 0x2cba
0x00002cf9      e968fcffff     jmp 0x2966
0x00002cfe      4c8d642450     lea r12, [rsp + 0x50]
0x00002d03      bb01000000     mov ebx, 1
0x00002d08      4c89e7         mov rdi, r12
0x00002d0b      e870edffff     call sym.imp.sigemptyset
0x00002d10      31f6           xor esi, esi
0x00002d12      31ff           xor edi, edi
0x00002d14      4c89e2         mov rdx, r12
0x00002d17      e874ebffff     call sym.imp.sigprocmask
0x00002d1c      85c0           test eax, eax
0x00002d1e      0f8579020000   jne 0x2f9d
0x00002d24      488d2d157620.  lea rbp, obj.block_signals              ; 0x20a340
0x00002d2b      4c8db424f000.  lea r14, [rsp + 0xf0]
0x00002d33      4c8d2d2e3f00.  lea r13, [0x00006c68]                   ; "BLOCK"
0x00002d3a      4c897c2418     mov qword [rsp + 0x18], r15
0x00002d3f      eb23           jmp 0x2d64
0x00002d41      0f1f80000000.  nop dword [rax]
0x00002d48      4c89e7         mov rdi, r12
0x00002d4b      4d89ef         mov r15, r13
0x00002d4e      e8ddeeffff     call sym.imp.sigaddset
0x00002d53      803d7e762000.  cmp byte [obj.dev_debug], 0             ; [0x20a3d8:1]=0
0x00002d5a      753b           jne 0x2d97
0x00002d5c      83c301         add ebx, 1
0x00002d5f      83fb41         cmp ebx, 0x41
0x00002d62      746b           je 0x2dcf
0x00002d64      89de           mov esi, ebx
0x00002d66      4889ef         mov rdi, rbp
0x00002d69      e852eeffff     call sym.imp.sigismember
0x00002d6e      85c0           test eax, eax
0x00002d70      89de           mov esi, ebx
0x00002d72      75d4           jne 0x2d48
0x00002d74      488d3d457520.  lea rdi, obj.unblock_signals            ; 0x20a2c0
0x00002d7b      e840eeffff     call sym.imp.sigismember
0x00002d80      85c0           test eax, eax
0x00002d82      74d8           je 0x2d5c
0x00002d84      89de           mov esi, ebx
0x00002d86      4c89e7         mov rdi, r12
0x00002d89      4c8d3dd63e00.  lea r15, str.UNBLOCK                    ; 0x6c66 ; "UNBLOCK"
0x00002d90      e8cbedffff     call sym.imp.sigdelset
0x00002d95      ebbc           jmp 0x2d53
0x00002d97      4c89f6         mov rsi, r14
0x00002d9a      89df           mov edi, ebx
0x00002d9c      e8df390000     call sym.sig2str
0x00002da1      803d30762000.  cmp byte [obj.dev_debug], 0             ; [0x20a3d8:1]=0
0x00002da8      74b2           je 0x2d5c
0x00002daa      488b3dcf7420.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a280:8]=0
0x00002db1      488d15c04800.  lea rdx, str.signal__s___d__mask_set_to__s ; 0x7678 ; "signal %s (%d) mask set to %s\n"
0x00002db8      4d89f9         mov r9, r15
0x00002dbb      4189d8         mov r8d, ebx
0x00002dbe      4c89f1         mov rcx, r14
0x00002dc1      be01000000     mov esi, 1
0x00002dc6      31c0           xor eax, eax
0x00002dc8      e823eeffff     call sym.imp.__fprintf_chk
0x00002dcd      eb8d           jmp 0x2d5c
0x00002dcf      31d2           xor edx, edx
0x00002dd1      4c89e6         mov rsi, r12
0x00002dd4      bf02000000     mov edi, 2
0x00002dd9      4c8b7c2418     mov r15, qword [rsp + 0x18]
0x00002dde      e8adeaffff     call sym.imp.sigprocmask
0x00002de3      85c0           test eax, eax
0x00002de5      0f8439fbffff   je 0x2924
0x00002deb      488d35a64800.  lea rsi, str.failed_to_set_signal_process_mask ; 0x7698 ; "failed to set signal process mask"
0x00002df2      ba05000000     mov edx, 5
0x00002df7      31ff           xor edi, edi
0x00002df9      e862ebffff     call sym.imp.dcgettext
0x00002dfe      4889c2         mov rdx, rax
0x00002e01      488b442410     mov rax, qword [rsp + 0x10]
0x00002e06      bf7d000000     mov edi, 0x7d                           ; '}'
0x00002e0b      8b30           mov esi, dword [rax]
0x00002e0d      31c0           xor eax, eax
0x00002e0f      e82cedffff     call sym.imp.error
0x00002e14      b80d000000     mov eax, 0xd
0x00002e19      e933f3ffff     jmp 0x2151
0x00002e1e      b87f000000     mov eax, 0x7f
0x00002e23      e95ff9ffff     jmp 0x2787
0x00002e28      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00002e2d      0f8552efffff   jne 0x1d85
0x00002e33      31ff           xor edi, edi
0x00002e35      e856060000     call sym.usage
0x00002e3a      89c3           mov ebx, eax
0x00002e3c      488d35b53e00.  lea rsi, str.invalid_option______c      ; 0x6cf8 ; "invalid option -- '%c'"
0x00002e43      ba05000000     mov edx, 5
0x00002e48      31ff           xor edi, edi
0x00002e4a      e811ebffff     call sym.imp.dcgettext
0x00002e4f      31f6           xor esi, esi
0x00002e51      4889c2         mov rdx, rax
0x00002e54      89d9           mov ecx, ebx
0x00002e56      31ff           xor edi, edi
0x00002e58      31c0           xor eax, eax
0x00002e5a      e8e1ecffff     call sym.imp.error
0x00002e5f      ba05000000     mov edx, 5
0x00002e64      488d352d4700.  lea rsi, str.use___v_S_to_pass_options_in_shebang_lines ; 0x7598 ; "use -[v]S to pass options in shebang lines"
0x00002e6b      e952fcffff     jmp 0x2ac2
0x00002e70      488d35994600.  lea rsi, str.only___VARNAME__expansion_is_supported__error_at:__s ; 0x7510 ; "only ${VARNAME} expansion is supported, error at: %s"
0x00002e77      ba05000000     mov edx, 5
0x00002e7c      31ff           xor edi, edi
0x00002e7e      e8ddeaffff     call sym.imp.dcgettext
0x00002e83      4c89e9         mov rcx, r13
0x00002e86      4889c2         mov rdx, rax
0x00002e89      31f6           xor esi, esi
0x00002e8b      bf7d000000     mov edi, 0x7d                           ; '}'
0x00002e90      31c0           xor eax, eax
0x00002e92      e8a9ecffff     call sym.imp.error
0x00002e97      83f820         cmp eax, 0x20                           ; "@"
0x00002e9a      89c3           mov ebx, eax
0x00002e9c      0f85e3eeffff   jne 0x1d85
0x00002ea2      eb98           jmp 0x2e3c
0x00002ea4      488d359d4700.  lea rsi, str.failed_to_set_signal_action_for_signal__d ; 0x7648 ; "failed to set signal action for signal %d"
0x00002eab      ba05000000     mov edx, 5
0x00002eb0      31ff           xor edi, edi
0x00002eb2      e8a9eaffff     call sym.imp.dcgettext
0x00002eb7      4889c3         mov rbx, rax
0x00002eba      e801eaffff     call sym.imp.__errno_location
0x00002ebf      8b30           mov esi, dword [rax]
0x00002ec1      4489e1         mov ecx, r12d
0x00002ec4      4889da         mov rdx, rbx
0x00002ec7      bf7d000000     mov edi, 0x7d                           ; '}'
0x00002ecc      31c0           xor eax, eax
0x00002ece      e86decffff     call sym.imp.error
0x00002ed3      be01000000     mov esi, 1
0x00002ed8      e9aefbffff     jmp 0x2a8b
0x00002edd      488b3b         mov rdi, qword [rbx]
0x00002ee0      e8ab2d0000     call sym.quote
0x00002ee5      488d35713e00.  lea rsi, str.cannot_unset__s            ; 0x6d5d ; "cannot unset %s"
0x00002eec      ba05000000     mov edx, 5
0x00002ef1      31ff           xor edi, edi
0x00002ef3      4889c5         mov rbp, rax
0x00002ef6      e865eaffff     call sym.imp.dcgettext
0x00002efb      4889c3         mov rbx, rax
0x00002efe      e8bde9ffff     call sym.imp.__errno_location
0x00002f03      8b30           mov esi, dword [rax]
0x00002f05      4889e9         mov rcx, rbp
0x00002f08      4889da         mov rdx, rbx
0x00002f0b      bf7d000000     mov edi, 0x7d                           ; '}'
0x00002f10      31c0           xor eax, eax
0x00002f12      e829ecffff     call sym.imp.error
0x00002f17      488d35c24500.  lea rsi, str.invalid_backslash_at_end_of_string_in__S ; 0x74e0 ; "invalid backslash at end of string in -S"
0x00002f1e      ba05000000     mov edx, 5
0x00002f23      31ff           xor edi, edi
0x00002f25      e836eaffff     call sym.imp.dcgettext
0x00002f2a      31f6           xor esi, esi
0x00002f2c      4889c2         mov rdx, rax
0x00002f2f      bf7d000000     mov edi, 0x7d                           ; '}'
0x00002f34      31c0           xor eax, eax
0x00002f36      e805ecffff     call sym.imp.error
0x00002f3b      488d0d9e4700.  lea rcx, obj.__PRETTY_FUNCTION__.7637   ; 0x76e0 ; "validate_split_str"
0x00002f42      488d35fb3b00.  lea rsi, str..._coreutils_8.31_src_env.c ; 0x6b44 ; "../coreutils-8.31/src/env.c"
0x00002f49      488d3d363d00.  lea rdi, str.sq____dq                   ; 0x6c86 ; "!(sq && dq)"
0x00002f50      ba34010000     mov edx, 0x134
0x00002f55      e8a6eaffff     call sym.imp.__assert_fail
0x00002f5a      488d0d7f4700.  lea rcx, obj.__PRETTY_FUNCTION__.7637   ; 0x76e0 ; "validate_split_str"
0x00002f61      488d35dc3b00.  lea rsi, str..._coreutils_8.31_src_env.c ; 0x6b44 ; "../coreutils-8.31/src/env.c"
0x00002f68      488d3d173d00.  lea rdi, str.sq____dq                   ; 0x6c86 ; "!(sq && dq)"
0x00002f6f      ba2f010000     mov edx, 0x12f
0x00002f74      e887eaffff     call sym.imp.__assert_fail
0x00002f79      488d35c84500.  lea rsi, str.no_terminating_quote_in__S_string ; 0x7548 ; "no terminating quote in -S string"
0x00002f80      ba05000000     mov edx, 5
0x00002f85      31ff           xor edi, edi
0x00002f87      e8d4e9ffff     call sym.imp.dcgettext
0x00002f8c      31f6           xor esi, esi
0x00002f8e      4889c2         mov rdx, rax
0x00002f91      bf7d000000     mov edi, 0x7d                           ; '}'
0x00002f96      31c0           xor eax, eax
0x00002f98      e8a3ebffff     call sym.imp.error
0x00002f9d      488d35dc3e00.  lea rsi, str.failed_to_get_signal_process_mask ; 0x6e80 ; "failed to get signal process mask"
0x00002fa4      ba05000000     mov edx, 5
0x00002fa9      31ff           xor edi, edi
0x00002fab      e8b0e9ffff     call sym.imp.dcgettext
0x00002fb0      4889c2         mov rdx, rax
0x00002fb3      488b442410     mov rax, qword [rsp + 0x10]
0x00002fb8      bf7d000000     mov edi, 0x7d                           ; '}'
0x00002fbd      8b30           mov esi, dword [rax]
0x00002fbf      31c0           xor eax, eax
0x00002fc1      e87aebffff     call sym.imp.error
0x00002fc6      488d354b4600.  lea rsi, str.failed_to_get_signal_action_for_signal__d ; 0x7618 ; "failed to get signal action for signal %d"
0x00002fcd      ba05000000     mov edx, 5
0x00002fd2      31ff           xor edi, edi
0x00002fd4      e887e9ffff     call sym.imp.dcgettext
0x00002fd9      4889c3         mov rbx, rax
0x00002fdc      e8dfe8ffff     call sym.imp.__errno_location
0x00002fe1      8b30           mov esi, dword [rax]
0x00002fe3      4489e1         mov ecx, r12d
0x00002fe6      4889da         mov rdx, rbx
0x00002fe9      bf7d000000     mov edi, 0x7d                           ; '}'
0x00002fee      31c0           xor eax, eax
0x00002ff0      e84bebffff     call sym.imp.error
0x00002ff5      e8a6e9ffff     call sym.imp.__stack_chk_fail
0x00002ffa      ba05000000     mov edx, 5
0x00002fff      488d35ea4500.  lea rsi, str.must_specify_command_with___chdir___C ; 0x75f0 ; "must specify command with --chdir (-C)"
0x00003006      e9b7faffff     jmp 0x2ac2
0x0000300b      488d0dbe4600.  lea rcx, obj.__PRETTY_FUNCTION__.7612   ; 0x76d0 ; "escape_char"
0x00003012      488d352b3b00.  lea rsi, str..._coreutils_8.31_src_env.c ; 0x6b44 ; "../coreutils-8.31/src/env.c"
0x00003019      488d3d923c00.  lea rdi, [0x00006cb2]                   ; "0"
0x00003020      bad2000000     mov edx, 0xd2
0x00003025      e8d6e9ffff     call sym.imp.__assert_fail
0x0000302a      c60300         mov byte [rbx], 0
0x0000302d      4863051c7220.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a250:4]=0
0x00003034      498b3cc7       mov rdi, qword [r15 + rax*8]
0x00003038      e8532c0000     call sym.quote
0x0000303d      488d35373d00.  lea rsi, str.cannot_set__s              ; 0x6d7b ; "cannot set %s"
0x00003044      ba05000000     mov edx, 5
0x00003049      31ff           xor edi, edi
0x0000304b      4889c5         mov rbp, rax
0x0000304e      e80de9ffff     call sym.imp.dcgettext
0x00003053      4889c3         mov rbx, rax
0x00003056      e865e8ffff     call sym.imp.__errno_location
0x0000305b      8b30           mov esi, dword [rax]
0x0000305d      4889e9         mov rcx, rbp
0x00003060      4889da         mov rdx, rbx
0x00003063      bf7d000000     mov edi, 0x7d                           ; '}'
0x00003068      31c0           xor eax, eax
0x0000306a      e8d1eaffff     call sym.imp.error
0x0000306f      488d353a4400.  lea rsi, str.c__must_not_appear_in_double_quoted__S_string ; 0x74b0 ; "'\c' must not appear in double-quoted -S string"
0x00003076      ba05000000     mov edx, 5
0x0000307b      31ff           xor edi, edi
0x0000307d      e8dee8ffff     call sym.imp.dcgettext
0x00003082      31f6           xor esi, esi
0x00003084      4889c2         mov rdx, rax
0x00003087      bf7d000000     mov edi, 0x7d                           ; '}'
0x0000308c      31c0           xor eax, eax
0x0000308e      e8adeaffff     call sym.imp.error
0x00003093      488b742408     mov rsi, qword [rsp + 8]
0x00003098      bf04000000     mov edi, 4
0x0000309d      e81e290000     call sym.quotearg_style
0x000030a2      488d35113d00.  lea rsi, str.cannot_change_directory_to__s ; 0x6dba ; "cannot change directory to %s"
0x000030a9      ba05000000     mov edx, 5
0x000030ae      31ff           xor edi, edi
0x000030b0      4889c3         mov rbx, rax
0x000030b3      e8a8e8ffff     call sym.imp.dcgettext
0x000030b8      4889c2         mov rdx, rax
0x000030bb      488b442410     mov rax, qword [rsp + 0x10]
0x000030c0      4889d9         mov rcx, rbx
0x000030c3      bf7d000000     mov edi, 0x7d                           ; '}'
0x000030c8      8b30           mov esi, dword [rax]
0x000030ca      31c0           xor eax, eax
0x000030cc      e86feaffff     call sym.imp.error
0x000030d1      662e0f1f8400.  nop word cs:[rax + rax]
0x000030db      0f1f440000     nop dword [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x000030e0      31ed           xor ebp, ebp
0x000030e2      4989d1         mov r9, rdx
0x000030e5      5e             pop rsi
0x000030e6      4889e2         mov rdx, rsp
0x000030e9      4883e4f0       and rsp, 0xfffffffffffffff0
0x000030ed      50             push rax
0x000030ee      54             push rsp
0x000030ef      4c8d051a3a00.  lea r8, sym.__libc_csu_fini             ; 0x6b10
0x000030f6      488d0da33900.  lea rcx, sym.__libc_csu_init            ; 0x6aa0 ; "AWAVI\x89\xd7AUATL\x8d%\x1e/ "
0x000030fd      488d3d6cebff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1c70 ; "AWAVI\x89\xf7AUATUSH\x81\xec\x18\x01"
0x00003104      ff15ce6e2000   call qword [reloc.__libc_start_main]    ; [0x209fd8:8]=0
0x0000310a      f4             hlt
0x0000310b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00003110      488d3d117120.  lea rdi, obj.__TMC_END                  ; 0x20a228
0x00003117      55             push rbp
0x00003118      488d05097120.  lea rax, obj.__TMC_END                  ; 0x20a228
0x0000311f      4839f8         cmp rax, rdi
0x00003122      4889e5         mov rbp, rsp
0x00003125      7419           je 0x3140
0x00003127      488b05a26e20.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x209fd0:8]=0
0x0000312e      4885c0         test rax, rax
0x00003131      740d           je 0x3140
0x00003133      5d             pop rbp
0x00003134      ffe0           jmp rax
0x00003136      662e0f1f8400.  nop word cs:[rax + rax]
0x00003140      5d             pop rbp
0x00003141      c3             ret
0x00003142      0f1f4000       nop dword [rax]
0x00003146      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00003150      488d3dd17020.  lea rdi, obj.__TMC_END                  ; 0x20a228
0x00003157      488d35ca7020.  lea rsi, obj.__TMC_END                  ; 0x20a228
0x0000315e      55             push rbp
0x0000315f      4829fe         sub rsi, rdi
0x00003162      4889e5         mov rbp, rsp
0x00003165      48c1fe03       sar rsi, 3
0x00003169      4889f0         mov rax, rsi
0x0000316c      48c1e83f       shr rax, 0x3f
0x00003170      4801c6         add rsi, rax
0x00003173      48d1fe         sar rsi, 1
0x00003176      7418           je 0x3190
0x00003178      488b05696e20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x209fe8:8]=0
0x0000317f      4885c0         test rax, rax
0x00003182      740c           je 0x3190
0x00003184      5d             pop rbp
0x00003185      ffe0           jmp rax
0x00003187      660f1f840000.  nop word [rax + rax]
0x00003190      5d             pop rbp
0x00003191      c3             ret
0x00003192      0f1f4000       nop dword [rax]
0x00003196      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x000031a0      803de1702000.  cmp byte [obj.completed.7697], 0        ; [0x20a288:1]=0
0x000031a7      752f           jne 0x31d8
0x000031a9      48833d3f6e20.  cmp qword [reloc.__cxa_finalize], 0     ; [0x209ff0:8]=0
0x000031b1      55             push rbp
0x000031b2      4889e5         mov rbp, rsp
0x000031b5      740c           je 0x31c3
0x000031b7      488b3d4a6e20.  mov rdi, qword [obj.__dso_handle]       ; [0x20a008:8]=0x20a008 obj.__dso_handle
0x000031be      e89deaffff     call sym..plt.got
0x000031c3      e848ffffff     call sym.deregister_tm_clones
0x000031c8      c605b9702000.  mov byte [obj.completed.7697], 1        ; [0x20a288:1]=0
0x000031cf      5d             pop rbp
0x000031d0      c3             ret
0x000031d1      0f1f80000000.  nop dword [rax]
0x000031d8      f3c3           ret
0x000031da      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x000031e0      55             push rbp
0x000031e1      4889e5         mov rbp, rsp
0x000031e4      5d             pop rbp
0x000031e5      e966ffffff     jmp sym.register_tm_clones
0x000031ea      660f1f440000   nop word [rax + rax]
;-- extract_varname:
0x000031f0      55             push rbp                                ; .//src:241
0x000031f1      53             push rbx
0x000031f2      4883ec18       sub rsp, 0x18
0x000031f6      4885ff         test rdi, rdi                           ; .//src:221
0x000031f9      0f84fa000000   je 0x32f9
0x000031ff      803f24         cmp byte [rdi], 0x24
0x00003202      4889fd         mov rbp, rdi
0x00003205      0f85ee000000   jne 0x32f9
0x0000320b      807f017b       cmp byte [rdi + 1], 0x7b                ; .//src:222
0x0000320f      0f85a8000000   jne 0x32bd
0x00003215      0fbe4702       movsx eax, byte [rdi + 2]
0x00003219      89c2           mov edx, eax
0x0000321b      83e841         sub eax, 0x41
0x0000321e      83f839         cmp eax, 0x39
0x00003221      767d           jbe 0x32a0
0x00003223      80fa5f         cmp dl, 0x5f
0x00003226      0f8591000000   jne 0x32bd
0x0000322c      488d5503       lea rdx, [rbp + 3]                      ; .//src:224
0x00003230      eb1a           jmp 0x324c
0x00003232      660f1f440000   nop word [rax + rax]
0x00003238      3c41           cmp al, 0x41                            ; ../coreutils-8.31/src/v.c:171
0x0000323a      7d0c           jge 0x3248
0x0000323c      8d48d0         lea ecx, [rax - 0x30]
0x0000323f      80f909         cmp cl, 9
0x00003242      7604           jbe 0x3248
0x00003244      3c5f           cmp al, 0x5f                            ; .//src:225
0x00003246      7517           jne 0x325f
0x00003248      4883c201       add rdx, 1                              ; .//src:226
0x0000324c      0fb602         movzx eax, byte [rdx]                   ; .//src:225
0x0000324f      3c5a           cmp al, 0x5a                            ; ../coreutils-8.31/src/v.c:171
0x00003251      7ee5           jle 0x3238
0x00003253      8d489f         lea ecx, [rax - 0x61]
0x00003256      80f919         cmp cl, 0x19
0x00003259      76ed           jbe 0x3248
0x0000325b      3c5f           cmp al, 0x5f                            ; .//src:225
0x0000325d      74e9           je 0x3248
0x0000325f      3c7d           cmp al, 0x7d                            ; .//src:227
0x00003261      755a           jne 0x32bd
0x00003263      4889d3         mov rbx, rdx                            ; .//src:250
0x00003266      488b0d637120.  mov rcx, qword [obj.varname]            ; [0x20a3d0:8]=0
0x0000326d      4829eb         sub rbx, rbp
0x00003270      488d53fe       lea rdx, [rbx - 2]
0x00003274      483b154d7120.  cmp rdx, qword [obj.vnlen]              ; .//src:252 ; [0x20a3c8:8]=0
0x0000327b      7353           jae 0x32d0
0x0000327d      488d7502       lea rsi, [rbp + 2]                      ; .//src:258
0x00003281      4889cf         mov rdi, rcx                            ; ../coreutils-8.31/lib/c-ctype.h:34
0x00003284      e827e8ffff     call sym.imp.memcpy
0x00003289      c64418fe00     mov byte [rax + rbx - 2], 0             ; .//src:259
0x0000328e      4889c1         mov rcx, rax                            ; ../coreutils-8.31/lib/c-ctype.h:34
0x00003291      4883c418       add rsp, 0x18                           ; .//src:262
0x00003295      4889c8         mov rax, rcx
0x00003298      5b             pop rbx
0x00003299      5d             pop rbp
0x0000329a      c3             ret
0x0000329b      0f1f440000     nop dword [rax + rax]
0x000032a0      48b9ffffff03.  movabs rcx, 0x3ffffff03ffffff
0x000032aa      480fa3c1       bt rcx, rax
0x000032ae      0f8278ffffff   jb 0x322c
0x000032b4      80fa5f         cmp dl, 0x5f                            ; .//src:222
0x000032b7      0f846fffffff   je 0x322c
0x000032bd      4883c418       add rsp, 0x18                           ; .//src:262
0x000032c1      31c9           xor ecx, ecx                            ; .//src:247
0x000032c3      4889c8         mov rax, rcx                            ; .//src:262
0x000032c6      5b             pop rbx
0x000032c7      5d             pop rbp
0x000032c8      c3             ret
0x000032c9      0f1f80000000.  nop dword [rax]
0x000032d0      488d73ff       lea rsi, [rbx - 1]                      ; .//src:254
0x000032d4      4889cf         mov rdi, rcx                            ; .//src:255
0x000032d7      4889542408     mov qword [rsp + 8], rdx
0x000032dc      488935e57020.  mov qword [obj.vnlen], rsi              ; .//src:254 ; [0x20a3c8:8]=0
0x000032e3      e848300000     call sym.xrealloc                       ; .//src:255
0x000032e8      488b542408     mov rdx, qword [rsp + 8]
0x000032ed      4889c1         mov rcx, rax
0x000032f0      488905d97020.  mov qword [obj.varname], rax            ; [0x20a3d0:8]=0
0x000032f7      eb84           jmp 0x327d
0x000032f9      488d0dc04300.  lea rcx, obj.__PRETTY_FUNCTION__.7616   ; .//src:221 ; 0x76c0 ; "scan_varname"
0x00003300      488d353d3800.  lea rsi, str..._coreutils_8.31_src_env.c ; 0x6b44 ; "../coreutils-8.31/src/env.c"
0x00003307      488d3d523800.  lea rdi, str.str_____str                ; 0x6b60 ; "str && *str == '$'"
0x0000330e      badd000000     mov edx, 0xdd
0x00003313      e8e8e6ffff     call sym.imp.__assert_fail
0x00003318      0f1f84000000.  nop dword [rax + rax]
;-- list_signal_handling:
0x00003320      4157           push r15                                ; .//src:759
0x00003322      4156           push r14
0x00003324      4155           push r13
0x00003326      4154           push r12
0x00003328      55             push rbp
0x00003329      53             push rbx
0x0000332a      4881ec580100.  sub rsp, 0x158
0x00003331      488d5c2410     lea rbx, [rsp + 0x10]                   ; .//src:763
0x00003336      64488b042528.  mov rax, qword fs:[0x28]                ; .//src:759
0x0000333f      488984244801.  mov qword [rsp + 0x148], rax
0x00003347      31c0           xor eax, eax
0x00003349      4889df         mov rdi, rbx                            ; .//src:763
0x0000334c      48895c2408     mov qword [rsp + 8], rbx
0x00003351      e82ae7ffff     call sym.imp.sigemptyset
0x00003356      31f6           xor esi, esi                            ; .//src:764
0x00003358      31ff           xor edi, edi
0x0000335a      4889da         mov rdx, rbx
0x0000335d      e82ee5ffff     call sym.imp.sigprocmask
0x00003362      85c0           test eax, eax
0x00003364      0f85eb000000   jne 0x3455
0x0000336a      bb01000000     mov ebx, 1                              ; .//src:767
0x0000336f      488dac249000.  lea rbp, [rsp + 0x90]
0x00003377      eb64           jmp 0x33dd
0x00003379      0f1f80000000.  nop dword [rax]
0x00003380      e83be8ffff     call sym.imp.sigismember                ; .//src:774
0x00003385      85c0           test eax, eax
0x00003387      744c           je 0x33d5
0x00003389      4c8d2d213900.  lea r13, [0x00006cb1]                   ; .//src:773
0x00003390      4c8d3dd13800.  lea r15, [0x00006c68]                   ; .//src:774 ; "BLOCK"
0x00003397      4d89ec         mov r12, r13
0x0000339a      4c8db4243001.  lea r14, [rsp + 0x130]                  ; .//src:780
0x000033a2      89df           mov edi, ebx
0x000033a4      4c89f6         mov rsi, r14
0x000033a7      e8d4330000     call sym.sig2str
0x000033ac      488b3dcd6e20.  mov rdi, qword [obj.stderr]             ; string_fortified.h:97   return __builtin___stpcpy_chk (__dest, __src, __bos (__dest)); ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a280:8]=0
0x000033b3      4155           push r13
0x000033b5      488d15c03700.  lea rdx, str.10s___2d_:__s_s_s          ; 0x6b7c ; "%-10s (%2d): %s%s%s\n"
0x000033bc      4154           push r12
0x000033be      4d89f9         mov r9, r15
0x000033c1      4189d8         mov r8d, ebx
0x000033c4      4c89f1         mov rcx, r14
0x000033c7      be01000000     mov esi, 1
0x000033cc      31c0           xor eax, eax
0x000033ce      e81de8ffff     call sym.imp.__fprintf_chk
0x000033d3      58             pop rax
0x000033d4      5a             pop rdx
0x000033d5      83c301         add ebx, 1                              ; .//src:767
0x000033d8      83fb41         cmp ebx, 0x41
0x000033db      7453           je 0x3430
0x000033dd      31f6           xor esi, esi                            ; .//src:770
0x000033df      4889ea         mov rdx, rbp
0x000033e2      89df           mov edi, ebx
0x000033e4      e827e5ffff     call sym.imp.sigaction
0x000033e9      85c0           test eax, eax
0x000033eb      75e8           jne 0x33d5
0x000033ed      4883bc249000.  cmp qword [rsp + 0x90], 1               ; .//src:773
0x000033f6      89de           mov esi, ebx                            ; .//src:774
0x000033f8      488b7c2408     mov rdi, qword [rsp + 8]
0x000033fd      7581           jne 0x3380                              ; .//src:773
0x000033ff      e8bce7ffff     call sym.imp.sigismember                ; .//src:774
0x00003404      85c0           test eax, eax
0x00003406      4c8d2d663700.  lea r13, str.IGNORE                     ; 0x6b73 ; "IGNORE"
0x0000340d      4c8d25663700.  lea r12, [0x00006b7a]                   ; .//src:775 ; ","
0x00003414      4c8d3d4d3800.  lea r15, [0x00006c68]                   ; .//src:774 ; "BLOCK"
0x0000341b      0f8579ffffff   jne 0x339a
0x00003421      4c8d25893800.  lea r12, [0x00006cb1]
0x00003428      4d89e7         mov r15, r12
0x0000342b      e96affffff     jmp 0x339a
0x00003430      488b84244801.  mov rax, qword [rsp + 0x148]            ; .//src:784
0x00003438      644833042528.  xor rax, qword fs:[0x28]
0x00003441      753e           jne 0x3481
0x00003443      4881c4580100.  add rsp, 0x158
0x0000344a      5b             pop rbx
0x0000344b      5d             pop rbp
0x0000344c      415c           pop r12
0x0000344e      415d           pop r13
0x00003450      415e           pop r14
0x00003452      415f           pop r15
0x00003454      c3             ret
0x00003455      488d35243a00.  lea rsi, str.failed_to_get_signal_process_mask ; .//src:765 ; 0x6e80 ; "failed to get signal process mask"
0x0000345c      ba05000000     mov edx, 5
0x00003461      31ff           xor edi, edi
0x00003463      e8f8e4ffff     call sym.imp.dcgettext
0x00003468      4889c3         mov rbx, rax
0x0000346b      e850e4ffff     call sym.imp.__errno_location
0x00003470      8b30           mov esi, dword [rax]
0x00003472      4889da         mov rdx, rbx
0x00003475      bf7d000000     mov edi, 0x7d                           ; '}'
0x0000347a      31c0           xor eax, eax
0x0000347c      e8bfe6ffff     call sym.imp.error
0x00003481      e81ae5ffff     call sym.imp.__stack_chk_fail           ; .//src:784
0x00003486      662e0f1f8400.  nop word cs:[rax + rax]
;-- usage:
0x00003490      4155           push r13                                ; .//src:107
0x00003492      4154           push r12
0x00003494      ba05000000     mov edx, 5                              ; .//src:109
0x00003499      55             push rbp                                ; .//src:107
0x0000349a      53             push rbx
0x0000349b      89fd           mov ebp, edi
0x0000349d      4881ec880000.  sub rsp, 0x88
0x000034a4      488b1d5d6f20.  mov rbx, qword [obj.program_name]       ; [0x20a408:8]=0
0x000034ab      64488b042528.  mov rax, qword fs:[0x28]
0x000034b4      4889442478     mov qword [rsp + 0x78], rax
0x000034b9      31c0           xor eax, eax
0x000034bb      85ff           test edi, edi                           ; .//src:108
0x000034bd      742e           je 0x34ed
0x000034bf      488d35e23900.  lea rsi, str.Try___s___help__for_more_information. ; .//src:109 ; 0x6ea8 ; "Try '%s --help' for more information.\n"
0x000034c6      31ff           xor edi, edi
0x000034c8      e893e4ffff     call sym.imp.dcgettext
0x000034cd      488b3dac6d20.  mov rdi, qword [obj.stderr]             ; string_fortified.h:97   return __builtin___stpcpy_chk (__dest, __src, __bos (__dest)); ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a280:8]=0
0x000034d4      4889c2         mov rdx, rax                            ; .//src:-16
0x000034d7      4889d9         mov rcx, rbx
0x000034da      be01000000     mov esi, 1
0x000034df      31c0           xor eax, eax
0x000034e1      e80ae7ffff     call sym.imp.__fprintf_chk
0x000034e6      89ef           mov edi, ebp
0x000034e8      e8e3e6ffff     call sym.imp.exit
0x000034ed      488d35dc3900.  lea rsi, str.Usage:__s__OPTION_...______NAME_VALUE_...__COMMAND__ARG_... ; 0x6ed0 ; "Usage: %s [OPTION]... [-] [NAME=VALUE]... [COMMAND [ARG]...]\n"
0x000034f4      31ff           xor edi, edi                            ; .//src:-13
0x000034f6      e865e4ffff     call sym.imp.dcgettext
0x000034fb      4889da         mov rdx, rbx
0x000034fe      4889c6         mov rsi, rax
0x00003501      bf01000000     mov edi, 1
0x00003506      31c0           xor eax, eax
0x00003508      e823e6ffff     call sym.imp.__printf_chk
0x0000350d      488b1d346d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a248:8]=0
0x00003514      488d35f53900.  lea rsi, str.Set_each_NAME_to_VALUE_in_the_environment_and_run_COMMAND. ; 0x6f10 ; "Set each NAME to VALUE in the environment and run COMMAND.\n"
0x0000351b      ba05000000     mov edx, 5
0x00003520      31ff           xor edi, edi
0x00003522      e839e4ffff     call sym.imp.dcgettext
0x00003527      4889de         mov rsi, rbx
0x0000352a      4889c7         mov rdi, rax
0x0000352d      e80ee5ffff     call sym.imp.fputs_unlocked
0x00003532      488b1d0f6d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a248:8]=0
0x00003539      488d35103a00.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x6f50 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00003540      ba05000000     mov edx, 5
0x00003545      31ff           xor edi, edi
0x00003547      e814e4ffff     call sym.imp.dcgettext
0x0000354c      4889de         mov rsi, rbx
0x0000354f      4889c7         mov rdi, rax
0x00003552      e8e9e4ffff     call sym.imp.fputs_unlocked
0x00003557      488b1dea6c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a248:8]=0
0x0000355e      488d353b3a00.  lea rsi, str.i____ignore_environment__start_with_an_empty_environment_____0____null___________end_each_output_line_with_NUL__not_newline_____u____unset_NAME_____remove_variable_from_the_environment ; 0x6fa0 ; "  -i, --ignore-environment  start with an empty environment\n  -0, --null           end each output line with NUL, not newline\n  -u, --unset=NAME     remove variable from the environment\n"
0x00003565      ba05000000     mov edx, 5
0x0000356a      31ff           xor edi, edi
0x0000356c      e8efe3ffff     call sym.imp.dcgettext
0x00003571      4889de         mov rsi, rbx
0x00003574      4889c7         mov rdi, rax
0x00003577      e8c4e4ffff     call sym.imp.fputs_unlocked
0x0000357c      488b1dc56c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a248:8]=0
0x00003583      488d35d63a00.  lea rsi, str.C____chdir_DIR______change_working_directory_to_DIR ; 0x7060 ; "  -C, --chdir=DIR      change working directory to DIR\n"
0x0000358a      ba05000000     mov edx, 5
0x0000358f      31ff           xor edi, edi
0x00003591      e8cae3ffff     call sym.imp.dcgettext
0x00003596      4889de         mov rsi, rbx
0x00003599      4889c7         mov rdi, rax
0x0000359c      e89fe4ffff     call sym.imp.fputs_unlocked
0x000035a1      488b1da06c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a248:8]=0
0x000035a8      488d35e93a00.  lea rsi, str.S____split_string_S__process_and_split_S_into_separate_arguments___________________________used_to_pass_multiple_arguments_on_shebang_lines ; 0x7098 ; "  -S, --split-string=S  process and split S into separate arguments;\n                        used to pass multiple arguments on shebang lines\n"
0x000035af      ba05000000     mov edx, 5
0x000035b4      31ff           xor edi, edi
0x000035b6      e8a5e3ffff     call sym.imp.dcgettext
0x000035bb      4889de         mov rsi, rbx
0x000035be      4889c7         mov rdi, rax
0x000035c1      e87ae4ffff     call sym.imp.fputs_unlocked
0x000035c6      488b1d7b6c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a248:8]=0
0x000035cd      488d35543b00.  lea rsi, str.block_signal__SIG_____block_delivery_of_SIG_signal_s__to_COMMAND ; 0x7128 ; "      --block-signal[=SIG]    block delivery of SIG signal(s) to COMMAND\n"
0x000035d4      ba05000000     mov edx, 5
0x000035d9      31ff           xor edi, edi
0x000035db      e880e3ffff     call sym.imp.dcgettext
0x000035e0      4889de         mov rsi, rbx
0x000035e3      4889c7         mov rdi, rax
0x000035e6      e855e4ffff     call sym.imp.fputs_unlocked
0x000035eb      488b1d566c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a248:8]=0
0x000035f2      488d357f3b00.  lea rsi, str.default_signal__SIG___reset_handling_of_SIG_signal_s__to_the_default ; 0x7178 ; "      --default-signal[=SIG]  reset handling of SIG signal(s) to the default\n"
0x000035f9      ba05000000     mov edx, 5
0x000035fe      31ff           xor edi, edi
0x00003600      e85be3ffff     call sym.imp.dcgettext
0x00003605      4889de         mov rsi, rbx
0x00003608      4889c7         mov rdi, rax
0x0000360b      e830e4ffff     call sym.imp.fputs_unlocked
0x00003610      488b1d316c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a248:8]=0
0x00003617      488d35aa3b00.  lea rsi, str.ignore_signal__SIG____set_handling_of_SIG_signals_s__to_do_nothing ; 0x71c8 ; "      --ignore-signal[=SIG]   set handling of SIG signals(s) to do nothing\n"
0x0000361e      ba05000000     mov edx, 5
0x00003623      31ff           xor edi, edi
0x00003625      e836e3ffff     call sym.imp.dcgettext
0x0000362a      4889de         mov rsi, rbx
0x0000362d      4889c7         mov rdi, rax
0x00003630      e80be4ffff     call sym.imp.fputs_unlocked
0x00003635      488b1d0c6c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a248:8]=0
0x0000363c      488d35d53b00.  lea rsi, str.list_signal_handling__list_non_default_signal_handling_to_stderr ; 0x7218 ; "      --list-signal-handling  list non default signal handling to stderr\n"
0x00003643      ba05000000     mov edx, 5
0x00003648      31ff           xor edi, edi
0x0000364a      e811e3ffff     call sym.imp.dcgettext
0x0000364f      4889de         mov rsi, rbx
0x00003652      4889c7         mov rdi, rax
0x00003655      e8e6e3ffff     call sym.imp.fputs_unlocked
0x0000365a      488b1de76b20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a248:8]=0
0x00003661      488d35003c00.  lea rsi, str.v____debug__________print_verbose_information_for_each_processing_step ; 0x7268 ; "  -v, --debug          print verbose information for each processing step\n"
0x00003668      ba05000000     mov edx, 5
0x0000366d      31ff           xor edi, edi
0x0000366f      e8ece2ffff     call sym.imp.dcgettext
0x00003674      4889de         mov rsi, rbx
0x00003677      4889c7         mov rdi, rax
0x0000367a      e8c1e3ffff     call sym.imp.fputs_unlocked
0x0000367f      488b1dc26b20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a248:8]=0
0x00003686      488d352b3c00.  lea rsi, str.help_____display_this_help_and_exit ; 0x72b8 ; "      --help     display this help and exit\n"
0x0000368d      ba05000000     mov edx, 5
0x00003692      31ff           xor edi, edi
0x00003694      e8c7e2ffff     call sym.imp.dcgettext
0x00003699      4889de         mov rsi, rbx
0x0000369c      4889c7         mov rdi, rax
0x0000369f      e89ce3ffff     call sym.imp.fputs_unlocked
0x000036a4      488b1d9d6b20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a248:8]=0
0x000036ab      488d35363c00.  lea rsi, str.version__output_version_information_and_exit ; 0x72e8 ; "      --version  output version information and exit\n"
0x000036b2      ba05000000     mov edx, 5
0x000036b7      31ff           xor edi, edi
0x000036b9      e8a2e2ffff     call sym.imp.dcgettext
0x000036be      4889de         mov rsi, rbx
0x000036c1      4889c7         mov rdi, rax
0x000036c4      e877e3ffff     call sym.imp.fputs_unlocked
0x000036c9      488b1d786b20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a248:8]=0
0x000036d0      488d35493c00.  lea rsi, str.A_mere___implies__i.__If_no_COMMAND__print_the_resulting_environment. ; 0x7320 ; "\nA mere - implies -i.  If no COMMAND, print the resulting environment.\n"
0x000036d7      ba05000000     mov edx, 5
0x000036dc      31ff           xor edi, edi
0x000036de      e87de2ffff     call sym.imp.dcgettext
0x000036e3      4889de         mov rsi, rbx
0x000036e6      4889c7         mov rdi, rax
0x000036e9      e852e3ffff     call sym.imp.fputs_unlocked
0x000036ee      488b1d536b20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a248:8]=0
0x000036f5      488d356c3c00.  lea rsi, str.SIG_may_be_a_signal_name_like__PIPE___or_a_signal_number_like__13_.__Without_SIG__all_known_signals_are_included.__Multiple_signals_can_be__comma_separated. ; 0x7368 ; "\nSIG may be a signal name like 'PIPE', or a signal number like '13'.\nWithout SIG, all known signals are included.  Multiple signals can be\ncomma-separated.\n"
0x000036fc      ba05000000     mov edx, 5
0x00003701      31ff           xor edi, edi                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:505
0x00003703      e858e2ffff     call sym.imp.dcgettext
0x00003708      4889de         mov rsi, rbx
0x0000370b      4889c7         mov rdi, rax
0x0000370e      488d1d7c3400.  lea rbx, [0x00006b91]                   ; "env"
0x00003715      e826e3ffff     call sym.imp.fputs_unlocked
0x0000371a      488d05743400.  lea rax, [0x00006b95]                   ; "["
0x00003721      488d0dae3400.  lea rcx, str.sha256sum                  ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:516 ; 0x6bd6 ; "sha256sum"
0x00003728      48c744246000.  mov qword [rsp + 0x60], 0
0x00003731      48c744246800.  mov qword [rsp + 0x68], 0
0x0000373a      4889e2         mov rdx, rsp
0x0000373d      48890424       mov qword [rsp], rax
0x00003741      488d054f3400.  lea rax, [0x00006b97]                   ; "test invocation"
0x00003748      48894c2430     mov qword [rsp + 0x30], rcx
0x0000374d      488d0d8c3400.  lea rcx, str.sha384sum                  ; 0x6be0 ; "sha384sum"
0x00003754      4889442408     mov qword [rsp + 8], rax
0x00003759      488d05af3400.  lea rax, [0x00006c0f]                   ; "coreutils"
0x00003760      48894c2440     mov qword [rsp + 0x40], rcx
0x00003765      488d0d7e3400.  lea rcx, str.sha512sum                  ; 0x6bea ; "sha512sum"
0x0000376c      4889442410     mov qword [rsp + 0x10], rax
0x00003771      488d052f3400.  lea rax, [0x00006ba7]                   ; "Multi-call invocation"
0x00003778      48894c2450     mov qword [rsp + 0x50], rcx
0x0000377d      4889442418     mov qword [rsp + 0x18], rax
0x00003782      488d05343400.  lea rax, str.sha224sum                  ; 0x6bbd ; "sha224sum"
0x00003789      4889442420     mov qword [rsp + 0x20], rax
0x0000378e      488d05323400.  lea rax, str.sha2_utilities             ; 0x6bc7 ; "sha2 utilities"
0x00003795      4889442428     mov qword [rsp + 0x28], rax
0x0000379a      4889442438     mov qword [rsp + 0x38], rax
0x0000379f      4889442448     mov qword [rsp + 0x48], rax
0x000037a4      4889442458     mov qword [rsp + 0x58], rax
0x000037a9      0f1f80000000.  nop dword [rax]
0x000037b0      4883c210       add rdx, 0x10
0x000037b4      488b3a         mov rdi, qword [rdx]
0x000037b7      4885ff         test rdi, rdi
0x000037ba      7413           je 0x37cf                               ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:524
0x000037bc      b904000000     mov ecx, 4
0x000037c1      4889de         mov rsi, rbx
0x000037c4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000037c6      0f97c0         seta al
0x000037c9      1c00           sbb al, 0
0x000037cb      84c0           test al, al
0x000037cd      75e1           jne 0x37b0
0x000037cf      4c8b6208       mov r12, qword [rdx + 8]
0x000037d3      31ff           xor edi, edi
0x000037d5      ba05000000     mov edx, 5
0x000037da      488d35133400.  lea rsi, str.s_online_help:___s         ; 0x6bf4 ; "\n%s online help: <%s>\n"
0x000037e1      4d85e4         test r12, r12
0x000037e4      0f84c1000000   je 0x38ab
0x000037ea      e871e1ffff     call sym.imp.dcgettext
0x000037ef      488d0d123c00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x7408 ; "https://www.gnu.org/software/coreutils/"
0x000037f6      488d150e3400.  lea rdx, str.GNU_coreutils              ; 0x6c0b ; "GNU coreutils"
0x000037fd      4889c6         mov rsi, rax
0x00003800      bf01000000     mov edi, 1
0x00003805      31c0           xor eax, eax
0x00003807      e824e3ffff     call sym.imp.__printf_chk
0x0000380c      31f6           xor esi, esi
0x0000380e      bf05000000     mov edi, 5
0x00003813      e808e3ffff     call sym.imp.setlocale
0x00003818      4885c0         test rax, rax
0x0000381b      741c           je 0x3839
0x0000381d      488d35f53300.  lea rsi, [0x00006c19]                   ; "en_"
0x00003824      ba03000000     mov edx, 3
0x00003829      4889c7         mov rdi, rax
0x0000382c      e89fe0ffff     call sym.imp.strncmp
0x00003831      85c0           test eax, eax
0x00003833      0f8507010000   jne 0x3940                              ; string_fortified.h:-24
0x00003839      488d35dd3300.  lea rsi, str.Full_documentation___s_s   ; 0x6c1d ; "Full documentation <%s%s>\n"
0x00003840      31ff           xor edi, edi
0x00003842      ba05000000     mov edx, 5
0x00003847      e814e1ffff     call sym.imp.dcgettext
0x0000384c      488d0d3e3300.  lea rcx, [0x00006b91]                   ; "env"
0x00003853      488d15ae3b00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x7408 ; "https://www.gnu.org/software/coreutils/"
0x0000385a      4889c6         mov rsi, rax
0x0000385d      bf01000000     mov edi, 1
0x00003862      31c0           xor eax, eax
0x00003864      e8c7e2ffff     call sym.imp.__printf_chk
0x00003869      4939dc         cmp r12, rbx
0x0000386c      488d0d3e3300.  lea rcx, [0x00006bb1]                   ; " invocation"
0x00003873      488d1d373400.  lea rbx, [0x00006cb1]
0x0000387a      480f44d9       cmove rbx, rcx
0x0000387e      488d35f33b00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x7478 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00003885      31ff           xor edi, edi
0x00003887      ba05000000     mov edx, 5
0x0000388c      e8cfe0ffff     call sym.imp.dcgettext
0x00003891      4889d9         mov rcx, rbx
0x00003894      4889c6         mov rsi, rax
0x00003897      4c89e2         mov rdx, r12
0x0000389a      bf01000000     mov edi, 1
0x0000389f      31c0           xor eax, eax
0x000038a1      e88ae2ffff     call sym.imp.__printf_chk
0x000038a6      e93bfcffff     jmp 0x34e6
0x000038ab      e8b0e0ffff     call sym.imp.dcgettext
0x000038b0      488d0d513b00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x7408 ; "https://www.gnu.org/software/coreutils/"
0x000038b7      488d154d3300.  lea rdx, str.GNU_coreutils              ; 0x6c0b ; "GNU coreutils"
0x000038be      4889c6         mov rsi, rax
0x000038c1      bf01000000     mov edi, 1
0x000038c6      31c0           xor eax, eax
0x000038c8      e863e2ffff     call sym.imp.__printf_chk
0x000038cd      31f6           xor esi, esi
0x000038cf      bf05000000     mov edi, 5
0x000038d4      e847e2ffff     call sym.imp.setlocale
0x000038d9      4885c0         test rax, rax
0x000038dc      7418           je 0x38f6
0x000038de      488d35343300.  lea rsi, [0x00006c19]                   ; "en_"
0x000038e5      ba03000000     mov edx, 3
0x000038ea      4889c7         mov rdi, rax
0x000038ed      e8dedfffff     call sym.imp.strncmp
0x000038f2      85c0           test eax, eax                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:540
0x000038f4      7543           jne 0x3939
0x000038f6      488d35203300.  lea rsi, str.Full_documentation___s_s   ; 0x6c1d ; "Full documentation <%s%s>\n"
0x000038fd      ba05000000     mov edx, 5
0x00003902      31ff           xor edi, edi
0x00003904      4c8d25863200.  lea r12, [0x00006b91]                   ; "env"
0x0000390b      488d1d9f3200.  lea rbx, [0x00006bb1]                   ; " invocation"
0x00003912      e849e0ffff     call sym.imp.dcgettext
0x00003917      488d0d733200.  lea rcx, [0x00006b91]                   ; "env"
0x0000391e      488d15e33a00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x7408 ; "https://www.gnu.org/software/coreutils/"
0x00003925      4889c6         mov rsi, rax
0x00003928      bf01000000     mov edi, 1
0x0000392d      31c0           xor eax, eax
0x0000392f      e8fce1ffff     call sym.imp.__printf_chk
0x00003934      e945ffffff     jmp 0x387e
0x00003939      4c8d25513200.  lea r12, [0x00006b91]                   ; "env"
0x00003940      4c8b2d016920.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a248:8]=0
0x00003947      488d35e23a00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x7430 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000394e      31ff           xor edi, edi
0x00003950      ba05000000     mov edx, 5
0x00003955      e806e0ffff     call sym.imp.dcgettext
0x0000395a      4c89ee         mov rsi, r13
0x0000395d      4889c7         mov rdi, rax
0x00003960      e8dbe0ffff     call sym.imp.fputs_unlocked
0x00003965      e9cffeffff     jmp 0x3839                              ; .//src:461
0x0000396a      660f1f440000   nop word [rax + rax]
;-- parse_signal_action_params:
0x00003970      4156           push r14
0x00003972      4155           push r13
0x00003974      4154           push r12
0x00003976      55             push rbp
0x00003977      53             push rbx
0x00003978      89f3           mov ebx, esi
0x0000397a      4883ec20       sub rsp, 0x20
0x0000397e      64488b042528.  mov rax, qword fs:[0x28]                ; .//src:477
0x00003987      4889442418     mov qword [rsp + 0x18], rax
0x0000398c      31c0           xor eax, eax
0x0000398e      4885ff         test rdi, rdi
0x00003991      0f84d9000000   je 0x3a70
0x00003997      e8642b0000     call sym.xstrdup
0x0000399c      488d35d73100.  lea rsi, [0x00006b7a]                   ; ","
0x000039a3      4889c7         mov rdi, rax
0x000039a6      4989c5         mov r13, rax
0x000039a9      e8c2e1ffff     call sym.imp.strtok
0x000039ae      4885c0         test rax, rax
0x000039b1      4989c6         mov r14, rax
0x000039b4      0f848e000000   je 0x3a48
0x000039ba      80fb01         cmp bl, 1
0x000039bd      4989e4         mov r12, rsp
0x000039c0      488d2db33100.  lea rbp, [0x00006b7a]                   ; ","
0x000039c7      19db           sbb ebx, ebx
0x000039c9      83e302         and ebx, 2
0x000039cc      83c301         add ebx, 1
0x000039cf      eb27           jmp 0x39f8                              ; .//src:489
0x000039d1      0f1f80000000.  nop dword [rax]
0x000039d8      7e5d           jle 0x3a37
0x000039da      488b15df6920.  mov rdx, qword [obj.signals]            ; .//src:491 ; [0x20a3c0:8]=0
0x000039e1      4898           cdqe
0x000039e3      31ff           xor edi, edi
0x000039e5      4889ee         mov rsi, rbp
0x000039e8      891c82         mov dword [rdx + rax*4], ebx
0x000039eb      e880e1ffff     call sym.imp.strtok
0x000039f0      4885c0         test rax, rax
0x000039f3      4989c6         mov r14, rax
0x000039f6      7450           je 0x3a48
0x000039f8      4c89e6         mov rsi, r12
0x000039fb      4c89f7         mov rdi, r14
0x000039fe      e8bd020000     call sym.operand2sig
0x00003a03      83f800         cmp eax, 0
0x00003a06      75d0           jne 0x39d8
0x00003a08      4c89f7         mov rdi, r14
0x00003a0b      e880220000     call sym.quote
0x00003a10      488d35213200.  lea rsi, str.s:_invalid_signal          ; 0x6c38 ; "%s: invalid signal"
0x00003a17      4889c3         mov rbx, rax
0x00003a1a      ba05000000     mov edx, 5
0x00003a1f      31ff           xor edi, edi
0x00003a21      e83adfffff     call sym.imp.dcgettext
0x00003a26      4889d9         mov rcx, rbx
0x00003a29      4889c2         mov rdx, rax
0x00003a2c      31f6           xor esi, esi
0x00003a2e      31ff           xor edi, edi
0x00003a30      31c0           xor eax, eax
0x00003a32      e809e1ffff     call sym.imp.error
0x00003a37      8b3ddb652000   mov edi, dword [obj.exit_failure]       ; [0x20a018:4]=1
0x00003a3d      e84efaffff     call sym.usage
0x00003a42      660f1f440000   nop word [rax + rax]
0x00003a48      488b442418     mov rax, qword [rsp + 0x18]
0x00003a4d      644833042528.  xor rax, qword fs:[0x28]
0x00003a56      757a           jne 0x3ad2
0x00003a58      4883c420       add rsp, 0x20
0x00003a5c      4c89ef         mov rdi, r13
0x00003a5f      5b             pop rbx
0x00003a60      5d             pop rbp                                 ; .//src:471
0x00003a61      415c           pop r12
0x00003a63      415d           pop r13
0x00003a65      415e           pop r14
0x00003a67      e934deffff     jmp sym.imp.free
0x00003a6c      0f1f4000       nop dword [rax]
0x00003a70      4080fe01       cmp sil, 1
0x00003a74      bd04000000     mov ebp, 4
0x00003a79      bb01000000     mov ebx, 1
0x00003a7e      4519ed         sbb r13d, r13d
0x00003a81      4989e4         mov r12, rsp
0x00003a84      4183e502       and r13d, 2
0x00003a88      4183c502       add r13d, 2
0x00003a8c      0f1f4000       nop dword [rax]
0x00003a90      4c89e6         mov rsi, r12
0x00003a93      89df           mov edi, ebx
0x00003a95      e8e62c0000     call sym.sig2str
0x00003a9a      85c0           test eax, eax
0x00003a9c      750b           jne 0x3aa9                              ; .//src:495
0x00003a9e      488b051b6920.  mov rax, qword [obj.signals]            ; [0x20a3c0:8]=0
0x00003aa5      44892c28       mov dword [rax + rbp], r13d
0x00003aa9      83c301         add ebx, 1
0x00003aac      4883c504       add rbp, 4
0x00003ab0      83fb41         cmp ebx, 0x41
0x00003ab3      75db           jne 0x3a90
0x00003ab5      488b442418     mov rax, qword [rsp + 0x18]
0x00003aba      644833042528.  xor rax, qword fs:[0x28]
0x00003ac3      750d           jne 0x3ad2
0x00003ac5      4883c420       add rsp, 0x20
0x00003ac9      5b             pop rbx
0x00003aca      5d             pop rbp
0x00003acb      415c           pop r12
0x00003acd      415d           pop r13
0x00003acf      415e           pop r14
0x00003ad1      c3             ret
0x00003ad2      e8c9deffff     call sym.imp.__stack_chk_fail
0x00003ad7      660f1f840000.  nop word [rax + rax]                    ; .//src:543
;-- parse_block_signal_params:
0x00003ae0      4157           push r15
0x00003ae2      4156           push r14
0x00003ae4      4155           push r13
0x00003ae6      4154           push r12
0x00003ae8      55             push rbp
0x00003ae9      53             push rbx
0x00003aea      89f3           mov ebx, esi
0x00003aec      4883ec38       sub rsp, 0x38
0x00003af0      64488b042528.  mov rax, qword fs:[0x28]                ; .//src:554
0x00003af9      4889442428     mov qword [rsp + 0x28], rax
0x00003afe      31c0           xor eax, eax
0x00003b00      4885ff         test rdi, rdi
0x00003b03      0f844f010000   je 0x3c58                               ; .//src:566
0x00003b09      803d99672000.  cmp byte [obj.sig_mask_changed], 0      ; [0x20a2a9:1]=0
0x00003b10      4889fd         mov rbp, rdi
0x00003b13      4189f4         mov r12d, esi
0x00003b16      0f841c010000   je 0x3c38
0x00003b1c      4889ef         mov rdi, rbp
0x00003b1f      c60583672000.  mov byte [obj.sig_mask_changed], 1      ; [0x20a2a9:1]=0
0x00003b26      e8d5290000     call sym.xstrdup                        ; .//src:569
0x00003b2b      488d35483000.  lea rsi, [0x00006b7a]                   ; ","
0x00003b32      4889c7         mov rdi, rax
0x00003b35      4889442408     mov qword [rsp + 8], rax
0x00003b3a      e831e0ffff     call sym.imp.strtok
0x00003b3f      4885c0         test rax, rax
0x00003b42      4989c7         mov r15, rax
0x00003b45      0f84bd000000   je 0x3c08
0x00003b4b      4c8d35ee6720.  lea r14, obj.block_signals              ; 0x20a340
0x00003b52      488d2d676720.  lea rbp, obj.unblock_signals            ; 0x20a2c0
0x00003b59      84db           test bl, bl
0x00003b5b      4c8d6c2410     lea r13, [rsp + 0x10]
0x00003b60      490f44ee       cmove rbp, r14
0x00003b64      eb34           jmp 0x3b9a
0x00003b66      662e0f1f8400.  nop word cs:[rax + rax]
0x00003b70      89c6           mov esi, eax
0x00003b72      4c89f7         mov rdi, r14
0x00003b75      e8b6e0ffff     call sym.imp.sigaddset
0x00003b7a      89de           mov esi, ebx
0x00003b7c      4889ef         mov rdi, rbp                            ; .//src:581
0x00003b7f      e8dcdfffff     call sym.imp.sigdelset                  ; .//src:569
0x00003b84      488d35ef2f00.  lea rsi, [0x00006b7a]                   ; ","
0x00003b8b      31ff           xor edi, edi
0x00003b8d      e8dedfffff     call sym.imp.strtok
0x00003b92      4885c0         test rax, rax
0x00003b95      4989c7         mov r15, rax                            ; .//src:578
0x00003b98      746e           je 0x3c08
0x00003b9a      4c89ee         mov rsi, r13
0x00003b9d      4c89ff         mov rdi, r15
0x00003ba0      e81b010000     call sym.operand2sig
0x00003ba5      83f800         cmp eax, 0
0x00003ba8      89c3           mov ebx, eax
0x00003baa      741c           je 0x3bc8
0x00003bac      7e49           jle 0x3bf7
0x00003bae      4584e4         test r12b, r12b
0x00003bb1      75bd           jne 0x3b70
0x00003bb3      488d3d066720.  lea rdi, obj.unblock_signals            ; 0x20a2c0
0x00003bba      89c6           mov esi, eax
0x00003bbc      e86fe0ffff     call sym.imp.sigaddset
0x00003bc1      ebb7           jmp 0x3b7a
0x00003bc3      0f1f440000     nop dword [rax + rax]
0x00003bc8      4c89ff         mov rdi, r15
0x00003bcb      e8c0200000     call sym.quote
0x00003bd0      488d35613000.  lea rsi, str.s:_invalid_signal          ; 0x6c38 ; "%s: invalid signal"
0x00003bd7      4889c3         mov rbx, rax
0x00003bda      ba05000000     mov edx, 5
0x00003bdf      31ff           xor edi, edi
0x00003be1      e87addffff     call sym.imp.dcgettext
0x00003be6      4889d9         mov rcx, rbx
0x00003be9      4889c2         mov rdx, rax
0x00003bec      31f6           xor esi, esi
0x00003bee      31ff           xor edi, edi
0x00003bf0      31c0           xor eax, eax
0x00003bf2      e849dfffff     call sym.imp.error
0x00003bf7      8b3d1b642000   mov edi, dword [obj.exit_failure]       ; [0x20a018:4]=1
0x00003bfd      e88ef8ffff     call sym.usage
0x00003c02      660f1f440000   nop word [rax + rax]
0x00003c08      488b442428     mov rax, qword [rsp + 0x28]             ; .//src:585
0x00003c0d      644833042528.  xor rax, qword fs:[0x28]
0x00003c16      0f8599000000   jne 0x3cb5                              ; .//src:584
0x00003c1c      488b7c2408     mov rdi, qword [rsp + 8]
0x00003c21      4883c438       add rsp, 0x38
0x00003c25      5b             pop rbx
0x00003c26      5d             pop rbp
0x00003c27      415c           pop r12
0x00003c29      415d           pop r13
0x00003c2b      415e           pop r14                                 ; .//src:558
0x00003c2d      415f           pop r15
0x00003c2f      e96cdcffff     jmp sym.imp.free
0x00003c34      0f1f4000       nop dword [rax]
0x00003c38      488d3d016720.  lea rdi, obj.block_signals              ; 0x20a340
0x00003c3f      e83cdeffff     call sym.imp.sigemptyset                ; .//src:551
0x00003c44      488d3d756620.  lea rdi, obj.unblock_signals            ; 0x20a2c0
0x00003c4b      e830deffff     call sym.imp.sigemptyset
0x00003c50      e9c7feffff     jmp 0x3b1c                              ; .//src:552
0x00003c55      0f1f00         nop dword [rax]
0x00003c58      4084f6         test sil, sil
0x00003c5b      7443           je 0x3ca0
0x00003c5d      488d3ddc6620.  lea rdi, obj.block_signals              ; 0x20a340
0x00003c64      e837deffff     call sym.imp.sigfillset
0x00003c69      488d3d506620.  lea rdi, obj.unblock_signals            ; 0x20a2c0
0x00003c70      e80bdeffff     call sym.imp.sigemptyset
0x00003c75      488b442428     mov rax, qword [rsp + 0x28]
0x00003c7a      644833042528.  xor rax, qword fs:[0x28]
0x00003c83      c6051f662000.  mov byte [obj.sig_mask_changed], 1      ; [0x20a2a9:1]=0
0x00003c8a      7529           jne 0x3cb5
0x00003c8c      4883c438       add rsp, 0x38
0x00003c90      5b             pop rbx
0x00003c91      5d             pop rbp
0x00003c92      415c           pop r12
0x00003c94      415d           pop r13
0x00003c96      415e           pop r14
0x00003c98      415f           pop r15
0x00003c9a      c3             ret
0x00003c9b      0f1f440000     nop dword [rax + rax]
0x00003ca0      488d3d196620.  lea rdi, obj.unblock_signals            ; 0x20a2c0
0x00003ca7      e8f4ddffff     call sym.imp.sigfillset
0x00003cac      488d3d8d6620.  lea rdi, obj.block_signals              ; 0x20a340
0x00003cb3      ebbb           jmp 0x3c70
0x00003cb5      e8e6dcffff     call sym.imp.__stack_chk_fail
0x00003cba      660f1f440000   nop word [rax + rax]
;-- operand2sig:
0x00003cc0      4157           push r15                                ; /src:37
0x00003cc2      4156           push r14
0x00003cc4      4989f6         mov r14, rsi
0x00003cc7      4155           push r13
0x00003cc9      4154           push r12
0x00003ccb      55             push rbp
0x00003ccc      53             push rbx
0x00003ccd      4889fd         mov rbp, rdi
0x00003cd0      4883ec28       sub rsp, 0x28
0x00003cd4      64488b042528.  mov rax, qword fs:[0x28]
0x00003cdd      4889442418     mov qword [rsp + 0x18], rax
0x00003ce2      31c0           xor eax, eax
0x00003ce4      0fbe07         movsx eax, byte [rdi]                   ; /src:40
0x00003ce7      83e830         sub eax, 0x30
0x00003cea      83f809         cmp eax, 9
0x00003ced      0f878d000000   ja 0x3d80
0x00003cf3      e8c8dbffff     call sym.imp.__errno_location           ; /src:54
0x00003cf8      488d742410     lea rsi, [rsp + 0x10]
0x00003cfd      ba0a000000     mov edx, 0xa
0x00003d02      c70000000000   mov dword [rax], 0
0x00003d08      4889ef         mov rdi, rbp
0x00003d0b      4889c3         mov rbx, rax
0x00003d0e      e87dddffff     call sym.imp.strtol
0x00003d13      488b542410     mov rdx, qword [rsp + 0x10]             ; /src:56
0x00003d18      4839ea         cmp rdx, rbp
0x00003d1b      741b           je 0x3d38
0x00003d1d      803a00         cmp byte [rdx], 0
0x00003d20      7516           jne 0x3d38
0x00003d22      8b13           mov edx, dword [rbx]
0x00003d24      85d2           test edx, edx
0x00003d26      7510           jne 0x3d38
0x00003d28      4863d0         movsxd rdx, eax
0x00003d2b      4839c2         cmp rdx, rax
0x00003d2e      0f843c010000   je 0x3e70
0x00003d34      0f1f4000       nop dword [rax]
0x00003d38      c744240cffff.  mov dword [rsp + 0xc], 0xffffffff       ; [0xffffffff:4]=-1 ; -1
0x00003d40      4889ef         mov rdi, rbp                            ; /src:88
0x00003d43      e8481f0000     call sym.quote
0x00003d48      488d35e92e00.  lea rsi, str.s:_invalid_signal          ; 0x6c38 ; "%s: invalid signal"
0x00003d4f      4889c3         mov rbx, rax
0x00003d52      ba05000000     mov edx, 5
0x00003d57      31ff           xor edi, edi
0x00003d59      e802dcffff     call sym.imp.dcgettext
0x00003d5e      4889d9         mov rcx, rbx
0x00003d61      4889c2         mov rdx, rax
0x00003d64      31f6           xor esi, esi
0x00003d66      31c0           xor eax, eax
0x00003d68      31ff           xor edi, edi
0x00003d6a      e8d1ddffff     call sym.imp.error
0x00003d6f      b8ffffffff     mov eax, 0xffffffff                     ; /src:89 ; -1
0x00003d74      e987000000     jmp 0x3e00
0x00003d79      0f1f80000000.  nop dword [rax]
0x00003d80      e87b270000     call sym.xstrdup                        ; /src:70
0x00003d85      0fb618         movzx ebx, byte [rax]                   ; /src:72
0x00003d88      4989c5         mov r13, rax                            ; /src:70
0x00003d8b      84db           test bl, bl                             ; /src:72
0x00003d8d      7433           je 0x3dc2
0x00003d8f      4c8d256f3900.  lea r12, str.abcdefghijklmnopqrstuvwxyz ; /src:73 ; 0x7705 ; "abcdefghijklmnopqrstuvwxyz"
0x00003d96      4989c7         mov r15, rax                            ; /src:72
0x00003d99      0f1f80000000.  nop dword [rax]
0x00003da0      0fbef3         movsx esi, bl                           ; /src:73
0x00003da3      4c89e7         mov rdi, r12
0x00003da6      e825dcffff     call sym.imp.strchr
0x00003dab      4885c0         test rax, rax
0x00003dae      7406           je 0x3db6
0x00003db0      83eb20         sub ebx, 0x20                           ; /src:74 ; "@"
0x00003db3      41881f         mov byte [r15], bl
0x00003db6      4983c701       add r15, 1                              ; /src:72
0x00003dba      410fb61f       movzx ebx, byte [r15]
0x00003dbe      84db           test bl, bl
0x00003dc0      75de           jne 0x3da0
0x00003dc2      488d5c240c     lea rbx, [rsp + 0xc]                    ; /src:78
0x00003dc7      4c89ef         mov rdi, r13
0x00003dca      4889de         mov rsi, rbx
0x00003dcd      e81e280000     call sym.str2sig
0x00003dd2      85c0           test eax, eax
0x00003dd4      7552           jne 0x3e28
0x00003dd6      8b5c240c       mov ebx, dword [rsp + 0xc]
0x00003dda      4c89ef         mov rdi, r13                            ; /src:83
0x00003ddd      e8bedaffff     call sym.imp.free
0x00003de2      85db           test ebx, ebx                           ; /src:86
0x00003de4      0f8856ffffff   js 0x3d40
0x00003dea      4c89f6         mov rsi, r14
0x00003ded      89df           mov edi, ebx
0x00003def      e88c290000     call sym.sig2str
0x00003df4      85c0           test eax, eax
0x00003df6      0f8544ffffff   jne 0x3d40
0x00003dfc      8b44240c       mov eax, dword [rsp + 0xc]              ; /src:92
0x00003e00      488b4c2418     mov rcx, qword [rsp + 0x18]             ; /src:93
0x00003e05      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003e0e      0f8588000000   jne 0x3e9c
0x00003e14      4883c428       add rsp, 0x28
0x00003e18      5b             pop rbx
0x00003e19      5d             pop rbp
0x00003e1a      415c           pop r12
0x00003e1c      415d           pop r13
0x00003e1e      415e           pop r14
0x00003e20      415f           pop r15
0x00003e22      c3             ret
0x00003e23      0f1f440000     nop dword [rax + rax]
0x00003e28      41807d0053     cmp byte [r13], 0x53                    ; /src:78
0x00003e2d      7419           je 0x3e48
0x00003e2f      4c89ef         mov rdi, r13                            ; /src:83
0x00003e32      c744240cffff.  mov dword [rsp + 0xc], 0xffffffff       ; /src:81 ; [0xffffffff:4]=-1 ; -1
0x00003e3a      e861daffff     call sym.imp.free                       ; /src:83
0x00003e3f      e9fcfeffff     jmp 0x3d40
0x00003e44      0f1f4000       nop dword [rax]
0x00003e48      41807d0149     cmp byte [r13 + 1], 0x49                ; /src:79
0x00003e4d      75e0           jne 0x3e2f
0x00003e4f      41807d0247     cmp byte [r13 + 2], 0x47
0x00003e54      75d9           jne 0x3e2f
0x00003e56      498d7d03       lea rdi, [r13 + 3]                      ; /src:80
0x00003e5a      4889de         mov rsi, rbx
0x00003e5d      e88e270000     call sym.str2sig
0x00003e62      85c0           test eax, eax
0x00003e64      75c9           jne 0x3e2f
0x00003e66      e96bffffff     jmp 0x3dd6
0x00003e6b      0f1f440000     nop dword [rax + rax]
0x00003e70      83faff         cmp edx, 0xffffffff                     ; /src:58
0x00003e73      741e           je 0x3e93
0x00003e75      81faff000000   cmp edx, 0xff                           ; /src:63
0x00003e7b      b87f000000     mov eax, 0x7f
0x00003e80      bbff000000     mov ebx, 0xff
0x00003e85      0f4cd8         cmovl ebx, eax
0x00003e88      21d3           and ebx, edx
0x00003e8a      895c240c       mov dword [rsp + 0xc], ebx
0x00003e8e      e957ffffff     jmp 0x3dea
0x00003e93      8954240c       mov dword [rsp + 0xc], edx              ; /src:56
0x00003e97      e9a4feffff     jmp 0x3d40
0x00003e9c      e8ffdaffff     call sym.imp.__stack_chk_fail           ; /src:93
0x00003ea1      662e0f1f8400.  nop word cs:[rax + rax]
0x00003eab      0f1f440000     nop dword [rax + rax]
;-- close_stdout_set_file_name:
0x00003eb0      48893d496520.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20a400:8]=0
0x00003eb7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00003eb8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00003ec0      40883d316520.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20a3f8:1]=0
0x00003ec7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00003ec8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00003ed0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00003ed1      53             push rbx
0x00003ed2      4883ec08       sub rsp, 8
0x00003ed6      488b3d6b6320.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a248:8]=0
0x00003edd      e87e290000     call sym.close_stream
0x00003ee2      85c0           test eax, eax
0x00003ee4      7416           je 0x3efc
0x00003ee6      e8d5d9ffff     call sym.imp.__errno_location
0x00003eeb      803d06652000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20a3f8:1]=0
0x00003ef2      4889c3         mov rbx, rax
0x00003ef5      741c           je 0x3f13
0x00003ef7      833820         cmp dword [rax], 0x20
0x00003efa      7517           jne 0x3f13
0x00003efc      488b3d7d6320.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a280:8]=0
0x00003f03      e858290000     call sym.close_stream
0x00003f08      85c0           test eax, eax
0x00003f0a      7546           jne 0x3f52
0x00003f0c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00003f10      5b             pop rbx
0x00003f11      5d             pop rbp
0x00003f12      c3             ret
0x00003f13      488d350b3800.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x7725 ; "write error"
0x00003f1a      31ff           xor edi, edi
0x00003f1c      ba05000000     mov edx, 5
0x00003f21      e83adaffff     call sym.imp.dcgettext
0x00003f26      488b3dd36420.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20a400:8]=0
0x00003f2d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003f30      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003f33      7428           je 0x3f5d
0x00003f35      e8561b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00003f3a      8b33           mov esi, dword [rbx]
0x00003f3c      488d15ee3700.  lea rdx, str.s:__s                      ; 0x7731 ; "%s: %s"
0x00003f43      4889c1         mov rcx, rax
0x00003f46      4989e8         mov r8, rbp
0x00003f49      31ff           xor edi, edi
0x00003f4b      31c0           xor eax, eax
0x00003f4d      e8eedbffff     call sym.imp.error
0x00003f52      8b3dc0602000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20a018:4]=1
0x00003f58      e883d9ffff     call sym.imp._exit
0x00003f5d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00003f5f      488d15cf3700.  lea rdx, [0x00007735]                   ; "%s"
0x00003f66      4889c1         mov rcx, rax
0x00003f69      31ff           xor edi, edi
0x00003f6b      31c0           xor eax, eax
0x00003f6d      e8cedbffff     call sym.imp.error
0x00003f72      ebde           jmp 0x3f52
0x00003f74      662e0f1f8400.  nop word cs:[rax + rax]
0x00003f7e      6690           nop
;-- set_program_name:
0x00003f80      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00003f83      53             push rbx
0x00003f84      7477           je 0x3ffd                               ; ../coreutils-8.31/lib/progname.c:51
0x00003f86      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00003f8b      4889fb         mov rbx, rdi
0x00003f8e      e84ddaffff     call sym.imp.strrchr
0x00003f93      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00003f96      7455           je 0x3fed
0x00003f98      4c8d4001       lea r8, [rax + 1]
0x00003f9c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00003f9f      4829da         sub rdx, rbx
0x00003fa2      4883fa06       cmp rdx, 6
0x00003fa6      7e45           jle 0x3fed
0x00003fa8      488d70fa       lea rsi, [rax - 6]
0x00003fac      488d3dbd3700.  lea rdi, str..libs                      ; 0x7770 ; "/.libs/"
0x00003fb3      b907000000     mov ecx, 7
0x00003fb8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003fba      0f97c2         seta dl
0x00003fbd      80da00         sbb dl, 0
0x00003fc0      84d2           test dl, dl
0x00003fc2      7529           jne 0x3fed
0x00003fc4      488d3dad3700.  lea rdi, [0x00007778]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00003fcb      b903000000     mov ecx, 3
0x00003fd0      4c89c6         mov rsi, r8
0x00003fd3      4c89c3         mov rbx, r8
0x00003fd6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003fd8      0f97c2         seta dl
0x00003fdb      80da00         sbb dl, 0
0x00003fde      84d2           test dl, dl
0x00003fe0      750b           jne 0x3fed
0x00003fe2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00003fe6      48891d536220.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20a240:8]=0
0x00003fed      48891d146420.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20a408:8]=0
0x00003ff4      48891d6d6220.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20a268:8]=0
0x00003ffb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00003ffc      c3             ret
0x00003ffd      488b0d7c6220.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a280:8]=0
0x00004004      488d3d2d3700.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x7738 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000400b      ba37000000     mov edx, 0x37                           ; '7'
0x00004010      be01000000     mov esi, 1
0x00004015      e8c6dbffff     call sym.imp.fwrite
0x0000401a      e891d8ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000401f      90             nop
;-- gettext_quote.part.1:
0x00004020      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00004021      53             push rbx
0x00004022      4889fd         mov rbp, rdi
0x00004025      89f3           mov ebx, esi
0x00004027      4883ec08       sub rsp, 8
0x0000402b      e810290000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00004030      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00004033      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004036      80fa55         cmp dl, 0x55
0x00004039      7475           je 0x40b0
0x0000403b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000403e      7420           je 0x4060
0x00004040      488d05443700.  lea rax, str.l______l                   ; 0x778b ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004047      488d15232b00.  lea rdx, [0x00006b71]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; "'"
0x0000404e      83fb09         cmp ebx, 9
0x00004051      480f45c2       cmovne rax, rdx
0x00004055      4883c408       add rsp, 8
0x00004059      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000405a      5d             pop rbp
0x0000405b      c3             ret
0x0000405c      0f1f4000       nop dword [rax]
0x00004060      0fb65001       movzx edx, byte [rax + 1]
0x00004064      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004067      80fa42         cmp dl, 0x42
0x0000406a      75d4           jne 0x4040
0x0000406c      80780231       cmp byte [rax + 2], 0x31
0x00004070      75ce           jne 0x4040
0x00004072      80780338       cmp byte [rax + 3], 0x38
0x00004076      75c8           jne 0x4040
0x00004078      80780430       cmp byte [rax + 4], 0x30
0x0000407c      75c2           jne 0x4040
0x0000407e      80780533       cmp byte [rax + 5], 0x33
0x00004082      75bc           jne 0x4040
0x00004084      80780630       cmp byte [rax + 6], 0x30
0x00004088      75b6           jne 0x4040
0x0000408a      80780700       cmp byte [rax + 7], 0
0x0000408e      75b0           jne 0x4040
0x00004090      807d0060       cmp byte [rbp], 0x60
0x00004094      488d05e93600.  lea rax, [0x00007784]
0x0000409b      488d15e63600.  lea rdx, [0x00007788]
0x000040a2      480f45c2       cmovne rax, rdx
0x000040a6      4883c408       add rsp, 8
0x000040aa      5b             pop rbx
0x000040ab      5d             pop rbp
0x000040ac      c3             ret
0x000040ad      0f1f00         nop dword [rax]
0x000040b0      0fb65001       movzx edx, byte [rax + 1]
0x000040b4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000040b7      80fa54         cmp dl, 0x54
0x000040ba      7584           jne 0x4040
0x000040bc      0fb65002       movzx edx, byte [rax + 2]
0x000040c0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000040c3      80fa46         cmp dl, 0x46
0x000040c6      0f8574ffffff   jne 0x4040
0x000040cc      8078032d       cmp byte [rax + 3], 0x2d
0x000040d0      0f856affffff   jne 0x4040
0x000040d6      80780438       cmp byte [rax + 4], 0x38
0x000040da      0f8560ffffff   jne 0x4040
0x000040e0      80780500       cmp byte [rax + 5], 0
0x000040e4      0f8556ffffff   jne 0x4040
0x000040ea      807d0060       cmp byte [rbp], 0x60
0x000040ee      488d05873600.  lea rax, [0x0000777c]                   ; "\u2018"
0x000040f5      488d15843600.  lea rdx, [0x00007780]                   ; "\u2019"
0x000040fc      480f45c2       cmovne rax, rdx
0x00004100      4883c408       add rsp, 8
0x00004104      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00004105      5d             pop rbp
0x00004106      c3             ret
0x00004107      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00004110      4157           push r15
0x00004112      4156           push r14
0x00004114      4589c7         mov r15d, r8d
0x00004117      4155           push r13
0x00004119      4154           push r12
0x0000411b      4989fe         mov r14, rdi
0x0000411e      55             push rbp
0x0000411f      53             push rbx
0x00004120      4489cb         mov ebx, r9d
0x00004123      4989f5         mov r13, rsi
0x00004126      4889cd         mov rbp, rcx
0x00004129      83e302         and ebx, 2
0x0000412c      4881ecb80000.  sub rsp, 0xb8
0x00004133      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000413b      4889542410     mov qword [rsp + 0x10], rdx
0x00004140      4489442408     mov dword [rsp + 8], r8d
0x00004145      44894c2478     mov dword [rsp + 0x78], r9d
0x0000414a      4889442420     mov qword [rsp + 0x20], rax
0x0000414f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00004157      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000415c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00004164      4889442460     mov qword [rsp + 0x60], rax
0x00004169      64488b042528.  mov rax, qword fs:[0x28]
0x00004172      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000417a      31c0           xor eax, eax
0x0000417c      e8efd7ffff     call sym.imp.__ctype_get_mb_cur_max
0x00004181      4183ff0a       cmp r15d, 0xa
0x00004185      4889442458     mov qword [rsp + 0x58], rax
0x0000418a      0f87af110000   ja 0x533f
0x00004190      488d0d493600.  lea rcx, [0x000077e0]
0x00004197      4489fa         mov edx, r15d
0x0000419a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000419e      4801c8         add rax, rcx
0x000041a1      ffe0           jmp rax
0x000041a3      c644240e01     mov byte [rsp + 0xe], 1
0x000041a8      c644247c00     mov byte [rsp + 0x7c], 0
0x000041ad      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x000041b0      48c744245000.  mov qword [rsp + 0x50], 0
0x000041b9      c644240f01     mov byte [rsp + 0xf], 1
0x000041be      c644240d00     mov byte [rsp + 0xd], 0
0x000041c3      488d05a72900.  lea rax, [0x00006b71]                   ; "'"
0x000041ca      48c744241801.  mov qword [rsp + 0x18], 1
0x000041d3      4531ff         xor r15d, r15d
0x000041d6      c74424080200.  mov dword [rsp + 8], 2
0x000041de      4889442448     mov qword [rsp + 0x48], rax
0x000041e3      4531db         xor r11d, r11d
0x000041e6      4889e8         mov rax, rbp
0x000041e9      4589e0         mov r8d, r12d
0x000041ec      4c89dd         mov rbp, r11
0x000041ef      4989c3         mov r11, rax
0x000041f2      660f1f440000   nop word [rax + rax]
0x000041f8      4939eb         cmp r11, rbp
0x000041fb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000041ff      4983fbff       cmp r11, 0xffffffffffffffff
0x00004203      750d           jne 0x4212
0x00004205      488b442410     mov rax, qword [rsp + 0x10]
0x0000420a      803c2800       cmp byte [rax + rbp], 0
0x0000420e      410f95c4       setne r12b
0x00004212      4584e4         test r12b, r12b
0x00004215      0f8455060000   je 0x4870
0x0000421b      837c240802     cmp dword [rsp + 8], 2
0x00004220      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004225      4c8d0c2f       lea r9, [rdi + rbp]
0x00004229      0f95c0         setne al
0x0000422c      2244240d       and al, byte [rsp + 0xd]
0x00004230      4189c2         mov r10d, eax
0x00004233      0f84a7000000   je 0x42e0
0x00004239      488b442418     mov rax, qword [rsp + 0x18]
0x0000423e      4885c0         test rax, rax
0x00004241      0f8429040000   je 0x4670
0x00004247      4983fbff       cmp r11, 0xffffffffffffffff
0x0000424b      488d5c0500     lea rbx, [rbp + rax]
0x00004250      752e           jne 0x4280
0x00004252      4883f801       cmp rax, 1
0x00004256      7628           jbe 0x4280
0x00004258      4488442438     mov byte [rsp + 0x38], r8b
0x0000425d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00004262      4c894c2428     mov qword [rsp + 0x28], r9
0x00004267      e814d7ffff     call sym.imp.strlen
0x0000426c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00004272      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00004278      4989c3         mov r11, rax
0x0000427b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004280      4c39db         cmp rbx, r11
0x00004283      4488542428     mov byte [rsp + 0x28], r10b
0x00004288      0f87b2050000   ja 0x4840
0x0000428e      488b542418     mov rdx, qword [rsp + 0x18]
0x00004293      488b742448     mov rsi, qword [rsp + 0x48]
0x00004298      4c89cf         mov rdi, r9
0x0000429b      4c895c2440     mov qword [rsp + 0x40], r11
0x000042a0      4488442438     mov byte [rsp + 0x38], r8b
0x000042a5      4c894c2430     mov qword [rsp + 0x30], r9
0x000042aa      e881d7ffff     call sym.imp.memcmp
0x000042af      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x000042b1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000042b6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000042bc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x000042c1      0f8579050000   jne 0x4840
0x000042c7      807c240f00     cmp byte [rsp + 0xf], 0
0x000042cc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000042d2      0f857d0f0000   jne 0x5255
0x000042d8      0f1f84000000.  nop dword [rax + rax]
0x000042e0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x000042e4      80fb7e         cmp bl, 0x7e
0x000042e7      0f871b030000   ja 0x4608
0x000042ed      488d0d183500.  lea rcx, [0x0000780c]
0x000042f4      0fb6d3         movzx edx, bl
0x000042f7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000042fb      4801c8         add rax, rcx
0x000042fe      ffe0           jmp rax
0x00004300      4531d2         xor r10d, r10d
0x00004303      4983fb01       cmp r11, 1
0x00004307      0f95c0         setne al
0x0000430a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000430e      750c           jne 0x431c
0x00004310      488b442410     mov rax, qword [rsp + 0x10]
0x00004315      80780100       cmp byte [rax + 1], 0
0x00004319      0f95c0         setne al
0x0000431c      837c240802     cmp dword [rsp + 8], 2
0x00004321      0f94c2         sete dl
0x00004324      84c0           test al, al
0x00004326      0f844c020000   je 0x4578
0x0000432c      4531e4         xor r12d, r12d
0x0000432f      31c0           xor eax, eax
0x00004331      0f1f80000000.  nop dword [rax]
0x00004338      807c240d01     cmp byte [rsp + 0xd], 1
0x0000433d      0f850f010000   jne 0x4452
0x00004343      84d2           test dl, dl
0x00004345      0f8507010000   jne 0x4452
0x0000434b      488b742420     mov rsi, qword [rsp + 0x20]
0x00004350      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00004353      7414           je 0x4369
0x00004355      89da           mov edx, ebx
0x00004357      c0ea05         shr dl, 5
0x0000435a      0fb6d2         movzx edx, dl
0x0000435d      8b1496         mov edx, dword [rsi + rdx*4]
0x00004360      0fa3da         bt edx, ebx
0x00004363      0f824a010000   jb 0x44b3
0x00004369      4584d2         test r10b, r10b
0x0000436c      0f8541010000   jne 0x44b3
0x00004372      83f001         xor eax, 1
0x00004375      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00004379      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000437c      84c0           test al, al
0x0000437e      7420           je 0x43a0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00004380      4d39fd         cmp r13, r15
0x00004383      7605           jbe 0x438a
0x00004385      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000438a      498d4701       lea rax, [r15 + 1]
0x0000438e      4939c5         cmp r13, rax
0x00004391      7606           jbe 0x4399
0x00004393      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004399      4983c702       add r15, 2
0x0000439d      4531c0         xor r8d, r8d
0x000043a0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x000043a3      7304           jae 0x43a9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x000043a5      43881c3e       mov byte [r14 + r15], bl
0x000043a9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x000043ae      4983c701       add r15, 1
0x000043b2      b800000000     mov eax, 0
0x000043b7      4584e4         test r12b, r12b
0x000043ba      0f44f8         cmove edi, eax
0x000043bd      40887c240e     mov byte [rsp + 0xe], dil
0x000043c2      e931feffff     jmp 0x41f8
0x000043c7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000043d0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000043d3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000043d7      83f802         cmp eax, 2
0x000043da      0f84b8050000   je 0x4998
0x000043e0      83f805         cmp eax, 5
0x000043e3      0f846f050000   je 0x4958
0x000043e9      83f802         cmp eax, 2
0x000043ec      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000043f1      0f94c2         sete dl
0x000043f4      4531e4         xor r12d, r12d
0x000043f7      31c0           xor eax, eax
0x000043f9      e93affffff     jmp 0x4338
0x000043fe      6690           nop
0x00004400      4531d2         xor r10d, r10d
0x00004403      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00004408      0f8402050000   je 0x4910
0x0000440e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00004413      31d2           xor edx, edx
0x00004415      31c0           xor eax, eax
0x00004417      bb27000000     mov ebx, 0x27                           ; '''
0x0000441c      e917ffffff     jmp 0x4338
0x00004421      0f1f80000000.  nop dword [rax]
0x00004428      ba09000000     mov edx, 9
0x0000442d      bb74000000     mov ebx, 0x74                           ; 't'
0x00004432      837c240802     cmp dword [rsp + 8], 2
0x00004437      0f94c0         sete al
0x0000443a      2244240f       and al, byte [rsp + 0xf]
0x0000443e      0f854a010000   jne 0x458e
0x00004444      807c240d00     cmp byte [rsp + 0xd], 0
0x00004449      7565           jne 0x44b0
0x0000444b      89d3           mov ebx, edx
0x0000444d      4531e4         xor r12d, r12d
0x00004450      31c0           xor eax, eax
0x00004452      807c240f00     cmp byte [rsp + 0xf], 0
0x00004457      0f85eefeffff   jne 0x434b
0x0000445d      e907ffffff     jmp 0x4369                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00004462      660f1f440000   nop word [rax + rax]
0x00004468      ba08000000     mov edx, 8
0x0000446d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00004472      ebd0           jmp 0x4444
0x00004474      0f1f4000       nop dword [rax]
0x00004478      837c240802     cmp dword [rsp + 8], 2
0x0000447d      0f84cd030000   je 0x4850
0x00004483      807c240d00     cmp byte [rsp + 0xd], 0
0x00004488      0f8412020000   je 0x46a0
0x0000448e      807c240f00     cmp byte [rsp + 0xf], 0
0x00004493      0f8407020000   je 0x46a0
0x00004499      48837c241800   cmp qword [rsp + 0x18], 0
0x0000449f      0f85b6030000   jne 0x485b
0x000044a5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000044aa      660f1f440000   nop word [rax + rax]
0x000044b0      4531e4         xor r12d, r12d
0x000044b3      837c240802     cmp dword [rsp + 8], 2
0x000044b8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x000044bb      807c240f00     cmp byte [rsp + 0xf], 0
0x000044c0      89d0           mov eax, edx
0x000044c2      0f8550080000   jne 0x4d18
0x000044c8      4489c0         mov eax, r8d
0x000044cb      83f001         xor eax, 1
0x000044ce      20d0           and al, dl
0x000044d0      742f           je 0x4501
0x000044d2      4d39fd         cmp r13, r15
0x000044d5      7605           jbe 0x44dc
0x000044d7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000044dc      498d5701       lea rdx, [r15 + 1]
0x000044e0      4939d5         cmp r13, rdx
0x000044e3      7606           jbe 0x44eb
0x000044e5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000044eb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x000044ef      4939d5         cmp r13, rdx
0x000044f2      7606           jbe 0x44fa
0x000044f4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000044fa      4983c703       add r15, 3
0x000044fe      4189c0         mov r8d, eax
0x00004501      4d39fd         cmp r13, r15
0x00004504      7605           jbe 0x450b
0x00004506      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000450b      4983c701       add r15, 1
0x0000450f      4883c501       add rbp, 1
0x00004513      e988feffff     jmp 0x43a0
0x00004518      0f1f84000000.  nop dword [rax + rax]
0x00004520      807c240d00     cmp byte [rsp + 0xd], 0
0x00004525      0f85c8010000   jne 0x46f3
0x0000452b      31d2           xor edx, edx
0x0000452d      f644247801     test byte [rsp + 0x78], 1
0x00004532      0f8413ffffff   je 0x444b
0x00004538      4883c501       add rbp, 1
0x0000453c      e9b7fcffff     jmp 0x41f8
0x00004541      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00004548      837c240802     cmp dword [rsp + 8], 2
0x0000454d      0f94c2         sete dl
0x00004550      31c0           xor eax, eax
0x00004552      e9e1fdffff     jmp 0x4338
0x00004557      660f1f840000.  nop word [rax + rax]
0x00004560      ba07000000     mov edx, 7
0x00004565      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000456a      e9d5feffff     jmp 0x4444
0x0000456f      90             nop
0x00004570      837c240802     cmp dword [rsp + 8], 2
0x00004575      0f94c2         sete dl
0x00004578      4885ed         test rbp, rbp
0x0000457b      0f85abfdffff   jne 0x432c
0x00004581      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004586      20d0           and al, dl
0x00004588      0f84aafdffff   je 0x4338
0x0000458e      4c89dd         mov rbp, r11
0x00004591      c74424080200.  mov dword [rsp + 8], 2
0x00004599      e9fb060000     jmp 0x4c99
0x0000459e      6690           nop
0x000045a0      837c240802     cmp dword [rsp + 8], 2
0x000045a5      0f94c2         sete dl
0x000045a8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x000045ab      ebd4           jmp 0x4581
0x000045ad      0f1f00         nop dword [rax]
0x000045b0      837c240802     cmp dword [rsp + 8], 2
0x000045b5      bb20000000     mov ebx, 0x20                           ; "@"
0x000045ba      0f94c2         sete dl
0x000045bd      ebc2           jmp 0x4581
0x000045bf      90             nop
0x000045c0      ba0d000000     mov edx, 0xd
0x000045c5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000045ca      e963feffff     jmp 0x4432
0x000045cf      90             nop
0x000045d0      ba0c000000     mov edx, 0xc
0x000045d5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000045da      e965feffff     jmp 0x4444
0x000045df      90             nop
0x000045e0      ba0b000000     mov edx, 0xb
0x000045e5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000045ea      e955feffff     jmp 0x4444
0x000045ef      90             nop
0x000045f0      ba0a000000     mov edx, 0xa
0x000045f5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000045fa      e933feffff     jmp 0x4432
0x000045ff      90             nop
0x00004600      4531d2         xor r10d, r10d
0x00004603      0f1f440000     nop dword [rax + rax]
0x00004608      48837c245801   cmp qword [rsp + 0x58], 1
0x0000460e      0f85a4030000   jne 0x49b8
0x00004614      4c895c2438     mov qword [rsp + 0x38], r11
0x00004619      4488442430     mov byte [rsp + 0x30], r8b
0x0000461e      4488542428     mov byte [rsp + 0x28], r10b
0x00004623      e818d6ffff     call sym.imp.__ctype_b_loc
0x00004628      488b08         mov rcx, qword [rax]
0x0000462b      0fb6d3         movzx edx, bl
0x0000462e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00004634      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000463a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000463f      bf01000000     mov edi, 1
0x00004644      0fb70451       movzx eax, word [rcx + rdx*2]
0x00004648      66250040       and ax, 0x4000                          ; "|b "
0x0000464c      410f95c4       setne r12b
0x00004650      0f94c0         sete al
0x00004653      2244240d       and al, byte [rsp + 0xd]
0x00004657      84c0           test al, al
0x00004659      0f8592090000   jne 0x4ff1
0x0000465f      837c240802     cmp dword [rsp + 8], 2
0x00004664      0f94c2         sete dl
0x00004667      e9ccfcffff     jmp 0x4338
0x0000466c      0f1f4000       nop dword [rax]
0x00004670      410fb619       movzx ebx, byte [r9]
0x00004674      80fb7e         cmp bl, 0x7e
0x00004677      7787           ja 0x4600
0x00004679      488d0d883300.  lea rcx, [0x00007a08]
0x00004680      0fb6d3         movzx edx, bl
0x00004683      48630491       movsxd rax, dword [rcx + rdx*4]
0x00004687      4801c8         add rax, rcx
0x0000468a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000468c      0f1f4000       nop dword [rax]
0x00004690      4531d2         xor r10d, r10d
0x00004693      807c240d00     cmp byte [rsp + 0xd], 0
0x00004698      0f85f0fdffff   jne 0x448e
0x0000469e      6690           nop
0x000046a0      ba5c000000     mov edx, 0x5c                           ; '\'
0x000046a5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000046aa      e995fdffff     jmp 0x4444
0x000046af      90             nop
0x000046b0      ba0c000000     mov edx, 0xc
0x000046b5      4531d2         xor r10d, r10d
0x000046b8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000046bd      e982fdffff     jmp 0x4444
0x000046c2      660f1f440000   nop word [rax + rax]
0x000046c8      ba0a000000     mov edx, 0xa
0x000046cd      4531d2         xor r10d, r10d
0x000046d0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x000046d5      e958fdffff     jmp 0x4432
0x000046da      660f1f440000   nop word [rax + rax]
0x000046e0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000046e5      e9c6fdffff     jmp 0x44b0
0x000046ea      660f1f440000   nop word [rax + rax]
0x000046f0      4531d2         xor r10d, r10d
0x000046f3      837c240802     cmp dword [rsp + 8], 2
0x000046f8      0f94c2         sete dl
0x000046fb      807c240f00     cmp byte [rsp + 0xf], 0
0x00004700      0f85940b0000   jne 0x529a
0x00004706      4489c0         mov eax, r8d
0x00004709      4c89f9         mov rcx, r15
0x0000470c      83f001         xor eax, 1
0x0000470f      20d0           and al, dl
0x00004711      742d           je 0x4740
0x00004713      4d39fd         cmp r13, r15
0x00004716      7605           jbe 0x471d
0x00004718      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000471d      498d4f01       lea rcx, [r15 + 1]
0x00004721      4939cd         cmp r13, rcx
0x00004724      7606           jbe 0x472c
0x00004726      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000472c      498d4f02       lea rcx, [r15 + 2]
0x00004730      4939cd         cmp r13, rcx
0x00004733      0f8730060000   ja 0x4d69
0x00004739      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000473d      4189c0         mov r8d, eax
0x00004740      4939cd         cmp r13, rcx
0x00004743      7605           jbe 0x474a
0x00004745      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000474a      837c240802     cmp dword [rsp + 8], 2
0x0000474f      4c8d7901       lea r15, [rcx + 1]
0x00004753      0f8400060000   je 0x4d59
0x00004759      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000475d      4c39d8         cmp rax, r11
0x00004760      7319           jae 0x477b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00004762      488b442410     mov rax, qword [rsp + 0x10]
0x00004767      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000476c      88442428       mov byte [rsp + 0x28], al
0x00004770      83e830         sub eax, 0x30
0x00004773      3c09           cmp al, 9
0x00004775      0f862e080000   jbe 0x4fa9
0x0000477b      4489e0         mov eax, r12d
0x0000477e      bb30000000     mov ebx, 0x30                           ; '0'
0x00004783      4531e4         xor r12d, r12d
0x00004786      e9adfbffff     jmp 0x4338                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000478b      0f1f440000     nop dword [rax + rax]
0x00004790      837c240802     cmp dword [rsp + 8], 2
0x00004795      4589d4         mov r12d, r10d
0x00004798      0f94c2         sete dl
0x0000479b      4531d2         xor r10d, r10d
0x0000479e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000047a0      e993fbffff     jmp 0x4338                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x000047a5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000047a8      837c240802     cmp dword [rsp + 8], 2
0x000047ad      0f94c2         sete dl
0x000047b0      4531d2         xor r10d, r10d
0x000047b3      e9c0fdffff     jmp 0x4578
0x000047b8      0f1f84000000.  nop dword [rax + rax]
0x000047c0      837c240802     cmp dword [rsp + 8], 2
0x000047c5      0f94c2         sete dl
0x000047c8      4531d2         xor r10d, r10d
0x000047cb      4531e4         xor r12d, r12d
0x000047ce      e9aefdffff     jmp 0x4581
0x000047d3      0f1f440000     nop dword [rax + rax]
0x000047d8      837c240802     cmp dword [rsp + 8], 2
0x000047dd      4589d4         mov r12d, r10d
0x000047e0      bb20000000     mov ebx, 0x20                           ; "@"
0x000047e5      0f94c2         sete dl
0x000047e8      4531d2         xor r10d, r10d
0x000047eb      e991fdffff     jmp 0x4581
0x000047f0      ba0d000000     mov edx, 0xd
0x000047f5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000047f8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000047fd      e930fcffff     jmp 0x4432
0x00004802      660f1f440000   nop word [rax + rax]
0x00004808      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000480d      e99efcffff     jmp 0x44b0
0x00004812      660f1f440000   nop word [rax + rax]
0x00004818      ba09000000     mov edx, 9
0x0000481d      4531d2         xor r10d, r10d
0x00004820      bb74000000     mov ebx, 0x74                           ; 't'
0x00004825      e908fcffff     jmp 0x4432
0x0000482a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00004830      bb62000000     mov ebx, 0x62                           ; 'b'
0x00004835      e976fcffff     jmp 0x44b0
0x0000483a      660f1f440000   nop word [rax + rax]
0x00004840      4531d2         xor r10d, r10d
0x00004843      e998faffff     jmp 0x42e0
0x00004848      0f1f84000000.  nop dword [rax + rax]
0x00004850      807c240f00     cmp byte [rsp + 0xf], 0
0x00004855      0f8565090000   jne 0x51c0
0x0000485b      4883c501       add rbp, 1
0x0000485f      4489c0         mov eax, r8d
0x00004862      4531e4         xor r12d, r12d
0x00004865      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000486a      e90dfbffff     jmp 0x437c
0x0000486f      90             nop
0x00004870      837c240802     cmp dword [rsp + 8], 2
0x00004875      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000487a      4589c4         mov r12d, r8d
0x0000487d      4c89dd         mov rbp, r11
0x00004880      0f94c2         sete dl
0x00004883      89d8           mov eax, ebx
0x00004885      4d85ff         test r15, r15
0x00004888      0f94c1         sete cl
0x0000488b      21d0           and eax, edx
0x0000488d      20c8           and al, cl
0x0000488f      0f85610a0000   jne 0x52f6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00004895      89d8           mov eax, ebx
0x00004897      83f001         xor eax, 1
0x0000489a      20c2           and dl, al
0x0000489c      0f846a090000   je 0x520c
0x000048a2      807c247c00     cmp byte [rsp + 0x7c], 0
0x000048a7      0f845d090000   je 0x520a
0x000048ad      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x000048b2      0f85f5090000   jne 0x52ad
0x000048b8      4d85ed         test r13, r13
0x000048bb      0f94c0         sete al
0x000048be      48837c245000   cmp qword [rsp + 0x50], 0
0x000048c4      0f95c2         setne dl
0x000048c7      20d0           and al, dl
0x000048c9      0f841d0a0000   je 0x52ec
0x000048cf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000048d4      488d1d962200.  lea rbx, [0x00006b71]                   ; "'"
0x000048db      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000048df      c74424080200.  mov dword [rsp + 8], 2
0x000048e7      41bf01000000   mov r15d, 1
0x000048ed      48c744241801.  mov qword [rsp + 0x18], 1
0x000048f6      c644240f00     mov byte [rsp + 0xf], 0
0x000048fb      48895c2448     mov qword [rsp + 0x48], rbx
0x00004900      8844247c       mov byte [rsp + 0x7c], al
0x00004904      e9daf8ffff     jmp 0x41e3
0x00004909      0f1f80000000.  nop dword [rax]
0x00004910      807c240f00     cmp byte [rsp + 0xf], 0
0x00004915      0f85a5080000   jne 0x51c0
0x0000491b      4d85ed         test r13, r13
0x0000491e      0f84fc030000   je 0x4d20                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00004924      31d2           xor edx, edx
0x00004926      48837c245000   cmp qword [rsp + 0x50], 0
0x0000492c      0f85ee030000   jne 0x4d20                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00004932      4c896c2450     mov qword [rsp + 0x50], r13
0x00004937      4983c703       add r15, 3
0x0000493b      31c0           xor eax, eax
0x0000493d      448864247c     mov byte [rsp + 0x7c], r12b
0x00004942      4531c0         xor r8d, r8d
0x00004945      4989d5         mov r13, rdx
0x00004948      bb27000000     mov ebx, 0x27                           ; '''
0x0000494d      e917faffff     jmp 0x4369
0x00004952      660f1f440000   nop word [rax + rax]
0x00004958      f644247804     test byte [rsp + 0x78], 4
0x0000495d      7421           je 0x4980
0x0000495f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00004963      4c39d9         cmp rcx, r11
0x00004966      7318           jae 0x4980
0x00004968      488b442410     mov rax, qword [rsp + 0x10]
0x0000496d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00004972      0f848a070000   je 0x5102
0x00004978      0f1f84000000.  nop dword [rax + rax]
0x00004980      31d2           xor edx, edx
0x00004982      4531e4         xor r12d, r12d
0x00004985      31c0           xor eax, eax
0x00004987      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000498c      e9a7f9ffff     jmp 0x4338
0x00004991      0f1f80000000.  nop dword [rax]
0x00004998      807c240f00     cmp byte [rsp + 0xf], 0
0x0000499d      0f851d080000   jne 0x51c0
0x000049a3      4531e4         xor r12d, r12d
0x000049a6      31c0           xor eax, eax
0x000049a8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000049ad      e9b7f9ffff     jmp 0x4369                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000049b2      660f1f440000   nop word [rax + rax]
0x000049b8      488d8424a000.  lea rax, [rsp + 0xa0]
0x000049c0      4983fbff       cmp r11, 0xffffffffffffffff
0x000049c4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x000049d0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x000049d5      752d           jne 0x4a04
0x000049d7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000049dc      4488442440     mov byte [rsp + 0x40], r8b
0x000049e1      4488542438     mov byte [rsp + 0x38], r10b
0x000049e6      4c894c2430     mov qword [rsp + 0x30], r9
0x000049eb      e890cfffff     call sym.imp.strlen
0x000049f0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000049f6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x000049fc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x000049ff      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004a04      488d84249c00.  lea rax, [rsp + 0x9c]
0x00004a0c      31c9           xor ecx, ecx
0x00004a0e      885c247e       mov byte [rsp + 0x7e], bl
0x00004a12      448844247d     mov byte [rsp + 0x7d], r8b
0x00004a17      4889cb         mov rbx, rcx
0x00004a1a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00004a22      4889442438     mov qword [rsp + 0x38], rax
0x00004a27      448854247f     mov byte [rsp + 0x7f], r10b
0x00004a2c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00004a34      4c89742440     mov qword [rsp + 0x40], r14
0x00004a39      4c896c2470     mov qword [rsp + 0x70], r13
0x00004a3e      4c895c2430     mov qword [rsp + 0x30], r11
0x00004a43      488b442410     mov rax, qword [rsp + 0x10]
0x00004a48      4c8d741d00     lea r14, [rbp + rbx]
0x00004a4d      488b542430     mov rdx, qword [rsp + 0x30]
0x00004a52      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004a57      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004a5c      4e8d2c30       lea r13, [rax + r14]
0x00004a60      4c29f2         sub rdx, r14
0x00004a63      4c89ee         mov rsi, r13
0x00004a66      e8f51a0000     call sym.rpl_mbrtowc
0x00004a6b      4885c0         test rax, rax
0x00004a6e      4989c7         mov r15, rax
0x00004a71      744e           je 0x4ac1
0x00004a73      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004a77      0f8418060000   je 0x5095
0x00004a7d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00004a81      0f849a050000   je 0x5021
0x00004a87      837c240802     cmp dword [rsp + 8], 2
0x00004a8c      0f94c0         sete al
0x00004a8f      2244240f       and al, byte [rsp + 0xf]
0x00004a93      0f8597010000   jne 0x4c30
0x00004a99      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00004aa0      e87bd1ffff     call sym.imp.iswprint
0x00004aa5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00004aaa      85c0           test eax, eax
0x00004aac      b800000000     mov eax, 0
0x00004ab1      440f44e0       cmove r12d, eax
0x00004ab5      4c01fb         add rbx, r15
0x00004ab8      e853d1ffff     call sym.imp.mbsinit
0x00004abd      85c0           test eax, eax
0x00004abf      7482           je 0x4a43
0x00004ac1      4489e2         mov edx, r12d
0x00004ac4      4889df         mov rdi, rbx
0x00004ac7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004acd      83f201         xor edx, 1
0x00004ad0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004ad5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004adb      2254240d       and dl, byte [rsp + 0xd]
0x00004adf      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004ae7      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004aec      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004af1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004af6      4883ff01       cmp rdi, 1
0x00004afa      0f86fb050000   jbe 0x50fb
0x00004b00      4889f9         mov rcx, rdi
0x00004b03      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00004b05      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00004b0b      4801e9         add rcx, rbp
0x00004b0e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004b13      e9b6000000     jmp 0x4bce
0x00004b18      0f1f84000000.  nop dword [rax + rax]
0x00004b20      837c240802     cmp dword [rsp + 8], 2
0x00004b25      0f94c0         sete al
0x00004b28      4584c9         test r9b, r9b
0x00004b2b      0f85af040000   jne 0x4fe0
0x00004b31      4489c6         mov esi, r8d
0x00004b34      83f601         xor esi, 1
0x00004b37      4020f0         and al, sil
0x00004b3a      742f           je 0x4b6b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00004b3c      4d39fd         cmp r13, r15
0x00004b3f      7605           jbe 0x4b46
0x00004b41      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004b46      498d7701       lea rsi, [r15 + 1]
0x00004b4a      4939f5         cmp r13, rsi
0x00004b4d      7606           jbe 0x4b55                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00004b4f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00004b55      498d7702       lea rsi, [r15 + 2]
0x00004b59      4939f5         cmp r13, rsi
0x00004b5c      7606           jbe 0x4b64
0x00004b5e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004b64      4983c703       add r15, 3
0x00004b68      4189c0         mov r8d, eax
0x00004b6b      4d39fd         cmp r13, r15
0x00004b6e      7605           jbe 0x4b75
0x00004b70      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004b75      498d4701       lea rax, [r15 + 1]
0x00004b79      4939c5         cmp r13, rax
0x00004b7c      760d           jbe 0x4b8b
0x00004b7e      89d8           mov eax, ebx
0x00004b80      c0e806         shr al, 6
0x00004b83      83c030         add eax, 0x30
0x00004b86      4388443e01     mov byte [r14 + r15 + 1], al
0x00004b8b      498d4702       lea rax, [r15 + 2]
0x00004b8f      4939c5         cmp r13, rax
0x00004b92      7610           jbe 0x4ba4
0x00004b94      89d8           mov eax, ebx
0x00004b96      c0e803         shr al, 3
0x00004b99      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00004b9c      83c030         add eax, 0x30
0x00004b9f      4388443e02     mov byte [r14 + r15 + 2], al
0x00004ba4      83e307         and ebx, 7
0x00004ba7      4883c501       add rbp, 1
0x00004bab      4983c703       add r15, 3
0x00004baf      83c330         add ebx, 0x30
0x00004bb2      4839cd         cmp rbp, rcx
0x00004bb5      0f83e5f7ffff   jae 0x43a0
0x00004bbb      89d6           mov esi, edx
0x00004bbd      4d39fd         cmp r13, r15
0x00004bc0      7604           jbe 0x4bc6
0x00004bc2      43881c3e       mov byte [r14 + r15], bl
0x00004bc6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00004bca      4983c701       add r15, 1
0x00004bce      84d2           test dl, dl
0x00004bd0      0f854affffff   jne 0x4b20
0x00004bd6      89f0           mov eax, esi
0x00004bd8      83f001         xor eax, 1
0x00004bdb      4421c0         and eax, r8d
0x00004bde      4584d2         test r10b, r10b
0x00004be1      740e           je 0x4bf1
0x00004be3      4d39fd         cmp r13, r15
0x00004be6      7605           jbe 0x4bed
0x00004be8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004bed      4983c701       add r15, 1
0x00004bf1      4883c501       add rbp, 1
0x00004bf5      4839cd         cmp rbp, rcx
0x00004bf8      0f837ef7ffff   jae 0x437c
0x00004bfe      84c0           test al, al
0x00004c00      0f84f8030000   je 0x4ffe
0x00004c06      4d39fd         cmp r13, r15
0x00004c09      7605           jbe 0x4c10
0x00004c0b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004c10      498d4701       lea rax, [r15 + 1]
0x00004c14      4939c5         cmp r13, rax
0x00004c17      7606           jbe 0x4c1f
0x00004c19      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004c1f      4983c702       add r15, 2
0x00004c23      4531d2         xor r10d, r10d
0x00004c26      4531c0         xor r8d, r8d
0x00004c29      eb92           jmp 0x4bbd
0x00004c2b      0f1f440000     nop dword [rax + rax]
0x00004c30      4983ff01       cmp r15, 1
0x00004c34      0f845ffeffff   je 0x4a99
0x00004c3a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004c3f      4a8d0c3f       lea rcx, [rdi + r15]
0x00004c43      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00004c48      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00004c4c      eb0f           jmp 0x4c5d
0x00004c4e      6690           nop
0x00004c50      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00004c54      4939d0         cmp r8, rdx
0x00004c57      0f843cfeffff   je 0x4a99
0x00004c5d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00004c60      83e95b         sub ecx, 0x5b
0x00004c63      80f921         cmp cl, 0x21
0x00004c66      77e8           ja 0x4c50                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00004c68      be01000000     mov esi, 1
0x00004c6d      48d3e6         shl rsi, cl
0x00004c70      4889f1         mov rcx, rsi
0x00004c73      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00004c7d      4885f1         test rcx, rsi
0x00004c80      74ce           je 0x4c50
0x00004c82      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004c87      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004c8c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00004c91      c74424080200.  mov dword [rsp + 8], 2
0x00004c99      807c240d00     cmp byte [rsp + 0xd], 0
0x00004c9e      7410           je 0x4cb0
0x00004ca0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00004ca2      b804000000     mov eax, 4
0x00004ca7      0f44442408     cmove eax, dword [rsp + 8]
0x00004cac      89442408       mov dword [rsp + 8], eax
0x00004cb0      4883ec08       sub rsp, 8
0x00004cb4      4889e9         mov rcx, rbp
0x00004cb7      4c89ee         mov rsi, r13
0x00004cba      ff742468       push qword [rsp + 0x68]
0x00004cbe      ff742478       push qword [rsp + 0x78]
0x00004cc2      4c89f7         mov rdi, r14
0x00004cc5      6a00           push 0
0x00004cc7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004ccf      448b442428     mov r8d, dword [rsp + 0x28]
0x00004cd4      488b542430     mov rdx, qword [rsp + 0x30]
0x00004cd9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00004cdd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00004ce2      4883c420       add rsp, 0x20
0x00004ce6      4989c7         mov r15, rax
0x00004ce9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00004cf1      6448331c2528.  xor rbx, qword fs:[0x28]
0x00004cfa      4c89f8         mov rax, r15
0x00004cfd      0f8500060000   jne 0x5303
0x00004d03      4881c4b80000.  add rsp, 0xb8
0x00004d0a      5b             pop rbx
0x00004d0b      5d             pop rbp
0x00004d0c      415c           pop r12
0x00004d0e      415d           pop r13
0x00004d10      415e           pop r14
0x00004d12      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00004d14      c3             ret
0x00004d15      0f1f00         nop dword [rax]
0x00004d18      4c89dd         mov rbp, r11
0x00004d1b      e979ffffff     jmp 0x4c99
0x00004d20      4d39fd         cmp r13, r15
0x00004d23      7605           jbe 0x4d2a
0x00004d25      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004d2a      498d4701       lea rax, [r15 + 1]
0x00004d2e      4939c5         cmp r13, rax
0x00004d31      7606           jbe 0x4d39
0x00004d33      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00004d39      498d4702       lea rax, [r15 + 2]
0x00004d3d      4939c5         cmp r13, rax
0x00004d40      0f86ec050000   jbe 0x5332
0x00004d46      4c89ea         mov rdx, r13
0x00004d49      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004d4f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004d54      e9d9fbffff     jmp 0x4932
0x00004d59      4489e0         mov eax, r12d
0x00004d5c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00004d61      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00004d64      e900f6ffff     jmp 0x4369                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00004d69      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004d6f      e9c5f9ffff     jmp 0x4739
0x00004d74      85db           test ebx, ebx
0x00004d76      0f8527f4ffff   jne 0x41a3
0x00004d7c      c644240d01     mov byte [rsp + 0xd], 1
0x00004d81      4d85ed         test r13, r13
0x00004d84      0f8590050000   jne 0x531a
0x00004d8a      488d05e01d00.  lea rax, [0x00006b71]                   ; "'"
0x00004d91      48c744245000.  mov qword [rsp + 0x50], 0
0x00004d9a      c644240e01     mov byte [rsp + 0xe], 1
0x00004d9f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004da4      4531e4         xor r12d, r12d
0x00004da7      c644240f00     mov byte [rsp + 0xf], 0
0x00004dac      48c744241801.  mov qword [rsp + 0x18], 1
0x00004db5      4889442448     mov qword [rsp + 0x48], rax
0x00004dba      41bf01000000   mov r15d, 1
0x00004dc0      c74424080200.  mov dword [rsp + 8], 2
0x00004dc8      e916f4ffff     jmp 0x41e3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00004dcd      0f1f00         nop dword [rax]
0x00004dd0      85db           test ebx, ebx
0x00004dd2      0f85f5030000   jne 0x51cd
0x00004dd8      4d85ed         test r13, r13
0x00004ddb      0f8425020000   je 0x5006
0x00004de1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00004de5      c644240e01     mov byte [rsp + 0xe], 1
0x00004dea      4531e4         xor r12d, r12d
0x00004ded      c644247c00     mov byte [rsp + 0x7c], 0
0x00004df2      48c744245000.  mov qword [rsp + 0x50], 0
0x00004dfb      488d05892900.  lea rax, str.l______l                   ; 0x778b ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004e02      c644240f00     mov byte [rsp + 0xf], 0
0x00004e07      c644240d01     mov byte [rsp + 0xd], 1
0x00004e0c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004e15      41bf01000000   mov r15d, 1
0x00004e1b      4889442448     mov qword [rsp + 0x48], rax
0x00004e20      e9bef3ffff     jmp 0x41e3
0x00004e25      488d055f2900.  lea rax, str.l______l                   ; 0x778b ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004e2c      c644240e01     mov byte [rsp + 0xe], 1
0x00004e31      c644247c00     mov byte [rsp + 0x7c], 0
0x00004e36      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00004e39      48c744245000.  mov qword [rsp + 0x50], 0
0x00004e42      c644240f01     mov byte [rsp + 0xf], 1
0x00004e47      c644240d01     mov byte [rsp + 0xd], 1
0x00004e4c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004e55      4531ff         xor r15d, r15d
0x00004e58      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00004e5d      c74424080500.  mov dword [rsp + 8], 5
0x00004e65      e979f3ffff     jmp 0x41e3
0x00004e6a      c644240e01     mov byte [rsp + 0xe], 1
0x00004e6f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004e74      4531e4         xor r12d, r12d
0x00004e77      48c744245000.  mov qword [rsp + 0x50], 0
0x00004e80      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00004e85      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00004e88      c644240d01     mov byte [rsp + 0xd], 1
0x00004e8d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004e96      48c744244800.  mov qword [rsp + 0x48], 0
0x00004e9f      e93ff3ffff     jmp 0x41e3
0x00004ea4      837c24080a     cmp dword [rsp + 8], 0xa
0x00004ea9      7456           je 0x4f01
0x00004eab      488d35db2800.  lea rsi, [0x0000778d]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00004eb2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00004eb4      ba05000000     mov edx, 5
0x00004eb9      e8a2caffff     call sym.imp.dcgettext
0x00004ebe      4889c1         mov rcx, rax
0x00004ec1      4889442468     mov qword [rsp + 0x68], rax
0x00004ec6      488d05c02800.  lea rax, [0x0000778d]                   ; "`"
0x00004ecd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00004ed0      0f8498030000   je 0x526e
0x00004ed6      488d35941c00.  lea rsi, [0x00006b71]                   ; "'"
0x00004edd      31ff           xor edi, edi
0x00004edf      ba05000000     mov edx, 5
0x00004ee4      e877caffff     call sym.imp.dcgettext
0x00004ee9      4889c1         mov rcx, rax
0x00004eec      4889442460     mov qword [rsp + 0x60], rax
0x00004ef1      488d05791c00.  lea rax, [0x00006b71]                   ; "'"
0x00004ef8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00004efb      0f8483030000   je 0x5284
0x00004f01      4531ff         xor r15d, r15d
0x00004f04      85db           test ebx, ebx
0x00004f06      0f84c1010000   je 0x50cd
0x00004f0c      85db           test ebx, ebx
0x00004f0e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00004f13      0f9544240f     setne byte [rsp + 0xf]
0x00004f18      4531e4         xor r12d, r12d
0x00004f1b      4889df         mov rdi, rbx
0x00004f1e      e85dcaffff     call sym.imp.strlen
0x00004f23      48895c2448     mov qword [rsp + 0x48], rbx
0x00004f28      4889442418     mov qword [rsp + 0x18], rax
0x00004f2d      c644240e01     mov byte [rsp + 0xe], 1
0x00004f32      c644247c00     mov byte [rsp + 0x7c], 0
0x00004f37      48c744245000.  mov qword [rsp + 0x50], 0
0x00004f40      c644240d01     mov byte [rsp + 0xd], 1
0x00004f45      e999f2ffff     jmp 0x41e3
0x00004f4a      c644240e01     mov byte [rsp + 0xe], 1
0x00004f4f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004f54      4531e4         xor r12d, r12d
0x00004f57      48c744245000.  mov qword [rsp + 0x50], 0
0x00004f60      c644240f00     mov byte [rsp + 0xf], 0
0x00004f65      4531ff         xor r15d, r15d
0x00004f68      c644240d00     mov byte [rsp + 0xd], 0
0x00004f6d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004f76      48c744244800.  mov qword [rsp + 0x48], 0
0x00004f7f      e95ff2ffff     jmp 0x41e3
0x00004f84      c644240e01     mov byte [rsp + 0xe], 1
0x00004f89      c644247c00     mov byte [rsp + 0x7c], 0
0x00004f8e      4531e4         xor r12d, r12d
0x00004f91      48c744245000.  mov qword [rsp + 0x50], 0
0x00004f9a      c644240f01     mov byte [rsp + 0xf], 1
0x00004f9f      c644240d01     mov byte [rsp + 0xd], 1
0x00004fa4      e91af2ffff     jmp 0x41c3
0x00004fa9      4d39fd         cmp r13, r15
0x00004fac      7605           jbe 0x4fb3
0x00004fae      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00004fb3      488d4102       lea rax, [rcx + 2]
0x00004fb7      4939c5         cmp r13, rax
0x00004fba      7606           jbe 0x4fc2
0x00004fbc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00004fc2      4489e0         mov eax, r12d
0x00004fc5      4c8d7903       lea r15, [rcx + 3]
0x00004fc9      4531e4         xor r12d, r12d
0x00004fcc      bb30000000     mov ebx, 0x30                           ; '0'
0x00004fd1      e962f3ffff     jmp 0x4338
0x00004fd6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004fe0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004fe5      4c89dd         mov rbp, r11
0x00004fe8      885c240d       mov byte [rsp + 0xd], bl
0x00004fec      e9a8fcffff     jmp 0x4c99
0x00004ff1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004ff6      4531e4         xor r12d, r12d
0x00004ff9      e902fbffff     jmp 0x4b00
0x00004ffe      4531d2         xor r10d, r10d
0x00005001      e9b7fbffff     jmp 0x4bbd
0x00005006      48c744245000.  mov qword [rsp + 0x50], 0
0x0000500f      c644240e01     mov byte [rsp + 0xe], 1
0x00005014      4531e4         xor r12d, r12d
0x00005017      c644247c00     mov byte [rsp + 0x7c], 0
0x0000501c      e9dafdffff     jmp 0x4dfb
0x00005021      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00005026      4c89f6         mov rsi, r14
0x00005029      4c89e9         mov rcx, r13
0x0000502c      4889d8         mov rax, rbx
0x0000502f      4889df         mov rdi, rbx
0x00005032      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00005038      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000503d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00005045      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00005048      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000504e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00005056      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000505b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00005060      7326           jae 0x5088
0x00005062      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00005065      7510           jne 0x5077
0x00005067      eb1f           jmp 0x5088
0x00005069      0f1f80000000.  nop dword [rax]
0x00005070      41803c0100     cmp byte [r9 + rax], 0
0x00005075      740e           je 0x5085
0x00005077      4883c001       add rax, 1
0x0000507b      488d540500     lea rdx, [rbp + rax]
0x00005080      4939d3         cmp r11, rdx
0x00005083      77eb           ja 0x5070
0x00005085      4889c7         mov rdi, rax
0x00005088      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000508d      4531e4         xor r12d, r12d
0x00005090      e961faffff     jmp 0x4af6
0x00005095      4889df         mov rdi, rbx
0x00005098      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000509e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000050a3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000050a9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000050b1      4531e4         xor r12d, r12d
0x000050b4      4c8b742440     mov r14, qword [rsp + 0x40]
0x000050b9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000050be      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000050c3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000050c8      e929faffff     jmp 0x4af6
0x000050cd      488b542468     mov rdx, qword [rsp + 0x68]
0x000050d2      0fb602         movzx eax, byte [rdx]
0x000050d5      84c0           test al, al
0x000050d7      0f842ffeffff   je 0x4f0c
0x000050dd      0f1f00         nop dword [rax]
0x000050e0      4d39fd         cmp r13, r15
0x000050e3      7604           jbe 0x50e9
0x000050e5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000050e9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000050ed      420fb6043a     movzx eax, byte [rdx + r15]
0x000050f2      84c0           test al, al
0x000050f4      75ea           jne 0x50e0
0x000050f6      e911feffff     jmp 0x4f0c
0x000050fb      89d0           mov eax, edx
0x000050fd      e955f5ffff     jmp 0x4657
0x00005102      0fb61c08       movzx ebx, byte [rax + rcx]
0x00005106      80fb3e         cmp bl, 0x3e
0x00005109      0f8771f8ffff   ja 0x4980
0x0000510f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00005119      480fa3d8       bt rax, rbx
0x0000511d      0f835df8ffff   jae 0x4980
0x00005123      807c240f00     cmp byte [rsp + 0xf], 0
0x00005128      0f85e4010000   jne 0x5312                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000512e      4d39fd         cmp r13, r15
0x00005131      7605           jbe 0x5138
0x00005133      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00005138      498d4701       lea rax, [r15 + 1]
0x0000513c      4939c5         cmp r13, rax
0x0000513f      7606           jbe 0x5147
0x00005141      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00005147      498d4702       lea rax, [r15 + 2]
0x0000514b      4939c5         cmp r13, rax
0x0000514e      7606           jbe 0x5156
0x00005150      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00005156      498d4703       lea rax, [r15 + 3]
0x0000515a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000515d      7606           jbe 0x5165
0x0000515f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00005165      4983c704       add r15, 4
0x00005169      31d2           xor edx, edx
0x0000516b      4531e4         xor r12d, r12d
0x0000516e      31c0           xor eax, eax
0x00005170      4889cd         mov rbp, rcx
0x00005173      e9c0f1ffff     jmp 0x4338
0x00005178      85db           test ebx, ebx
0x0000517a      0f8488010000   je 0x5308
0x00005180      488d05ea1900.  lea rax, [0x00006b71]                   ; "'"
0x00005187      c644240e01     mov byte [rsp + 0xe], 1
0x0000518c      c644247c00     mov byte [rsp + 0x7c], 0
0x00005191      4531e4         xor r12d, r12d
0x00005194      48c744245000.  mov qword [rsp + 0x50], 0
0x0000519d      c644240f01     mov byte [rsp + 0xf], 1
0x000051a2      c644240d00     mov byte [rsp + 0xd], 0
0x000051a7      48c744241801.  mov qword [rsp + 0x18], 1
0x000051b0      4531ff         xor r15d, r15d
0x000051b3      4889442448     mov qword [rsp + 0x48], rax
0x000051b8      e926f0ffff     jmp 0x41e3
0x000051bd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x000051c0      4c89dd         mov rbp, r11
0x000051c3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000051c8      e9ccfaffff     jmp 0x4c99
0x000051cd      488d05b72500.  lea rax, str.l______l                   ; 0x778b ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000051d4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x000051d9      c644247c00     mov byte [rsp + 0x7c], 0
0x000051de      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x000051e1      48c744245000.  mov qword [rsp + 0x50], 0
0x000051ea      c644240f01     mov byte [rsp + 0xf], 1
0x000051ef      c644240d01     mov byte [rsp + 0xd], 1
0x000051f4      48c744241801.  mov qword [rsp + 0x18], 1
0x000051fd      4531ff         xor r15d, r15d
0x00005200      4889442448     mov qword [rsp + 0x48], rax
0x00005205      e9d9efffff     jmp 0x41e3
0x0000520a      89d0           mov eax, edx
0x0000520c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00005211      4885db         test rbx, rbx
0x00005214      742c           je 0x5242
0x00005216      84c0           test al, al
0x00005218      7428           je 0x5242
0x0000521a      0fb60b         movzx ecx, byte [rbx]
0x0000521d      4889d8         mov rax, rbx
0x00005220      84c9           test cl, cl
0x00005222      741e           je 0x5242
0x00005224      4c89fa         mov rdx, r15
0x00005227      4c29f8         sub rax, r15
0x0000522a      4939d5         cmp r13, rdx
0x0000522d      7604           jbe 0x5233
0x0000522f      41880c16       mov byte [r14 + rdx], cl
0x00005233      4883c201       add rdx, 1
0x00005237      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000523b      84c9           test cl, cl
0x0000523d      75eb           jne 0x522a
0x0000523f      4989d7         mov r15, rdx
0x00005242      4d39fd         cmp r13, r15
0x00005245      0f869efaffff   jbe 0x4ce9
0x0000524b      43c6043e00     mov byte [r14 + r15], 0
0x00005250      e994faffff     jmp 0x4ce9
0x00005255      837c240802     cmp dword [rsp + 8], 2
0x0000525a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000525f      4c89dd         mov rbp, r11
0x00005262      0f94c0         sete al
0x00005265      885c240d       mov byte [rsp + 0xd], bl
0x00005269      e92bfaffff     jmp 0x4c99
0x0000526e      8b742408       mov esi, dword [rsp + 8]
0x00005272      4889cf         mov rdi, rcx
0x00005275      e8a6edffff     call sym.gettext_quote.part.1
0x0000527a      4889442468     mov qword [rsp + 0x68], rax
0x0000527f      e952fcffff     jmp 0x4ed6
0x00005284      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00005288      4889cf         mov rdi, rcx
0x0000528b      e890edffff     call sym.gettext_quote.part.1
0x00005290      4889442460     mov qword [rsp + 0x60], rax
0x00005295      e967fcffff     jmp 0x4f01
0x0000529a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000529f      4c89dd         mov rbp, r11
0x000052a2      89d0           mov eax, edx
0x000052a4      885c240d       mov byte [rsp + 0xd], bl
0x000052a8      e9ecf9ffff     jmp 0x4c99
0x000052ad      4883ec08       sub rsp, 8
0x000052b1      41b805000000   mov r8d, 5
0x000052b7      4c89d9         mov rcx, r11
0x000052ba      ff742468       push qword [rsp + 0x68]
0x000052be      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x000052c2      4c89f7         mov rdi, r14
0x000052c5      ff742438       push qword [rsp + 0x38]
0x000052c9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000052d1      488b542430     mov rdx, qword [rsp + 0x30]
0x000052d6      488b742470     mov rsi, qword [rsp + 0x70]
0x000052db      e830eeffff     call sym.quotearg_buffer_restyled
0x000052e0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x000052e4      4989c7         mov r15, rax
0x000052e7      e9fdf9ffff     jmp 0x4ce9
0x000052ec      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000052f1      e916ffffff     jmp 0x520c
0x000052f6      c74424080200.  mov dword [rsp + 8], 2
0x000052fe      e996f9ffff     jmp 0x4c99
0x00005303      e898c6ffff     call sym.imp.__stack_chk_fail
0x00005308      c644240d00     mov byte [rsp + 0xd], 0
0x0000530d      e96ffaffff     jmp 0x4d81
0x00005312      4c89dd         mov rbp, r11
0x00005315      e996f9ffff     jmp 0x4cb0
0x0000531a      c644240e01     mov byte [rsp + 0xe], 1
0x0000531f      31c0           xor eax, eax
0x00005321      4531e4         xor r12d, r12d
0x00005324      48c744245000.  mov qword [rsp + 0x50], 0
0x0000532d      e9a2f5ffff     jmp 0x48d4
0x00005332      4c89ea         mov rdx, r13
0x00005335      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000533a      e9f3f5ffff     jmp 0x4932
0x0000533f      e86cc5ffff     call sym.imp.abort
0x00005344      6690           nop
0x00005346      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00005350      4157           push r15
0x00005352      4156           push r14
0x00005354      4c63ff         movsxd r15, edi
0x00005357      4155           push r13
0x00005359      4154           push r12
0x0000535b      4989d6         mov r14, rdx
0x0000535e      55             push rbp
0x0000535f      53             push rbx
0x00005360      4889cd         mov rbp, rcx
0x00005363      4883ec28       sub rsp, 0x28
0x00005367      4889742408     mov qword [rsp + 8], rsi
0x0000536c      e84fc5ffff     call sym.imp.__errno_location
0x00005371      4989c5         mov r13, rax
0x00005374      8b00           mov eax, dword [rax]
0x00005376      4585ff         test r15d, r15d
0x00005379      488b1de04c20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x00005380      89442418       mov dword [rsp + 0x18], eax
0x00005384      0f8867010000   js 0x54f1
0x0000538a      44393dc74c20.  cmp dword [obj.nslots], r15d            ; [0x20a058:4]=1
0x00005391      7f62           jg 0x53f5
0x00005393      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000539a      0f8456010000   je 0x54f6
0x000053a0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000053a4      488d05c54c20.  lea rax, obj.slotvec0                   ; 0x20a070
0x000053ab      4963f4         movsxd rsi, r12d
0x000053ae      48c1e604       shl rsi, 4
0x000053b2      4839c3         cmp rbx, rax
0x000053b5      0f8415010000   je 0x54d0
0x000053bb      4889df         mov rdi, rbx
0x000053be      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x000053c3      4889c3         mov rbx, rax
0x000053c6      488905934c20.  mov qword [obj.slotvec], rax            ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x000053cd      48633d844c20.  movsxd rdi, dword [obj.nslots]          ; [0x20a058:4]=1
0x000053d4      4489e2         mov edx, r12d
0x000053d7      31f6           xor esi, esi
0x000053d9      29fa           sub edx, edi
0x000053db      48c1e704       shl rdi, 4
0x000053df      4863d2         movsxd rdx, edx
0x000053e2      4801df         add rdi, rbx
0x000053e5      48c1e204       shl rdx, 4
0x000053e9      e822c6ffff     call sym.imp.memset
0x000053ee      448925634c20.  mov dword [obj.nslots], r12d            ; [0x20a058:4]=1
0x000053f5      8b4504         mov eax, dword [rbp + 4]
0x000053f8      49c1e704       shl r15, 4
0x000053fc      4883ec08       sub rsp, 8
0x00005400      4c01fb         add rbx, r15
0x00005403      4c8d7d08       lea r15, [rbp + 8]
0x00005407      448b4500       mov r8d, dword [rbp]
0x0000540b      4c8b1b         mov r11, qword [rbx]
0x0000540e      4c8b6308       mov r12, qword [rbx + 8]
0x00005412      4c89f1         mov rcx, r14
0x00005415      83c801         or eax, 1
0x00005418      89442424       mov dword [rsp + 0x24], eax
0x0000541c      ff7530         push qword [rbp + 0x30]
0x0000541f      4189c1         mov r9d, eax
0x00005422      ff7528         push qword [rbp + 0x28]
0x00005425      4157           push r15
0x00005427      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000542a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000542f      4c89e7         mov rdi, r12
0x00005432      4c895c2430     mov qword [rsp + 0x30], r11
0x00005437      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000543c      4883c420       add rsp, 0x20
0x00005440      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00005445      4939c3         cmp r11, rax
0x00005448      7767           ja 0x54b1
0x0000544a      488d7001       lea rsi, [rax + 1]
0x0000544e      488d05cb4f20.  lea rax, obj.slot0                      ; 0x20a420
0x00005455      4939c4         cmp r12, rax
0x00005458      488933         mov qword [rbx], rsi
0x0000545b      7412           je 0x546f
0x0000545d      4c89e7         mov rdi, r12
0x00005460      4889742410     mov qword [rsp + 0x10], rsi
0x00005465      e836c4ffff     call sym.imp.free
0x0000546a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000546f      4889f7         mov rdi, rsi
0x00005472      4889742410     mov qword [rsp + 0x10], rsi
0x00005477      e8540e0000     call sym.xmalloc
0x0000547c      4883ec08       sub rsp, 8
0x00005480      48894308       mov qword [rbx + 8], rax
0x00005484      448b4500       mov r8d, dword [rbp]
0x00005488      ff7530         push qword [rbp + 0x30]
0x0000548b      ff7528         push qword [rbp + 0x28]
0x0000548e      4c89f1         mov rcx, r14
0x00005491      4157           push r15
0x00005493      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00005498      4889c7         mov rdi, rax
0x0000549b      488b542428     mov rdx, qword [rsp + 0x28]
0x000054a0      488b742430     mov rsi, qword [rsp + 0x30]
0x000054a5      4989c4         mov r12, rax
0x000054a8      e863ecffff     call sym.quotearg_buffer_restyled
0x000054ad      4883c420       add rsp, 0x20
0x000054b1      8b442418       mov eax, dword [rsp + 0x18]
0x000054b5      41894500       mov dword [r13], eax
0x000054b9      4883c428       add rsp, 0x28
0x000054bd      4c89e0         mov rax, r12
0x000054c0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x000054c1      5d             pop rbp
0x000054c2      415c           pop r12
0x000054c4      415d           pop r13
0x000054c6      415e           pop r14
0x000054c8      415f           pop r15
0x000054ca      c3             ret
0x000054cb      0f1f440000     nop dword [rax + rax]
0x000054d0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x000054d2      e8590e0000     call sym.xrealloc
0x000054d7      660f6f05914b.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x000054df      4889c3         mov rbx, rax
0x000054e2      488905774b20.  mov qword [obj.slotvec], rax            ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x000054e9      0f1100         movups xmmword [rax], xmm0
0x000054ec      e9dcfeffff     jmp 0x53cd
0x000054f1      e8bac3ffff     call sym.imp.abort
0x000054f6      e825100000     call sym.xalloc_die
0x000054fb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00005500      4154           push r12
0x00005502      55             push rbp
0x00005503      53             push rbx
0x00005504      4889fb         mov rbx, rdi
0x00005507      e8b4c3ffff     call sym.imp.__errno_location
0x0000550c      448b20         mov r12d, dword [rax]
0x0000550f      4889c5         mov rbp, rax
0x00005512      488d05075020.  lea rax, obj.default_quoting_options    ; 0x20a520
0x00005519      4885db         test rbx, rbx
0x0000551c      be38000000     mov esi, 0x38                           ; '8'
0x00005521      480f44d8       cmove rbx, rax
0x00005525      4889df         mov rdi, rbx
0x00005528      e8a30f0000     call sym.xmemdup
0x0000552d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00005531      5b             pop rbx
0x00005532      5d             pop rbp
0x00005533      415c           pop r12
0x00005535      c3             ret
0x00005536      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00005540      488d05d94f20.  lea rax, obj.default_quoting_options    ; 0x20a520
0x00005547      4885ff         test rdi, rdi
0x0000554a      480f44f8       cmove rdi, rax
0x0000554e      8b07           mov eax, dword [rdi]
0x00005550      c3             ret
0x00005551      0f1f440000     nop dword [rax + rax]
0x00005556      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00005560      488d05b94f20.  lea rax, obj.default_quoting_options    ; 0x20a520
0x00005567      4885ff         test rdi, rdi
0x0000556a      480f44f8       cmove rdi, rax
0x0000556e      8937           mov dword [rdi], esi
0x00005570      c3             ret
0x00005571      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00005576      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00005580      488d05994f20.  lea rax, obj.default_quoting_options    ; 0x20a520
0x00005587      4885ff         test rdi, rdi
0x0000558a      89f1           mov ecx, esi
0x0000558c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00005590      89f0           mov eax, esi
0x00005592      83e11f         and ecx, 0x1f
0x00005595      c0e805         shr al, 5
0x00005598      0fb6c0         movzx eax, al
0x0000559b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x000055a0      8b37           mov esi, dword [rdi]
0x000055a2      89f0           mov eax, esi
0x000055a4      d3e8           shr eax, cl
0x000055a6      31c2           xor edx, eax
0x000055a8      83e001         and eax, 1
0x000055ab      83e201         and edx, 1
0x000055ae      d3e2           shl edx, cl
0x000055b0      31f2           xor edx, esi
0x000055b2      8917           mov dword [rdi], edx
0x000055b4      c3             ret
0x000055b5      90             nop
0x000055b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000055c0      488d05594f20.  lea rax, obj.default_quoting_options    ; 0x20a520
0x000055c7      4885ff         test rdi, rdi
0x000055ca      480f44f8       cmove rdi, rax
0x000055ce      8b4704         mov eax, dword [rdi + 4]
0x000055d1      897704         mov dword [rdi + 4], esi
0x000055d4      c3             ret
0x000055d5      90             nop
0x000055d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000055e0      488d05394f20.  lea rax, obj.default_quoting_options    ; 0x20a520
0x000055e7      4885ff         test rdi, rdi
0x000055ea      480f44f8       cmove rdi, rax
0x000055ee      4885f6         test rsi, rsi
0x000055f1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000055f7      740e           je 0x5607
0x000055f9      4885d2         test rdx, rdx
0x000055fc      7409           je 0x5607
0x000055fe      48897728       mov qword [rdi + 0x28], rsi
0x00005602      48895730       mov qword [rdi + 0x30], rdx
0x00005606      c3             ret
0x00005607      4883ec08       sub rsp, 8
0x0000560b      e8a0c2ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00005610      4157           push r15
0x00005612      4156           push r14
0x00005614      488d05054f20.  lea rax, obj.default_quoting_options    ; 0x20a520
0x0000561b      4155           push r13
0x0000561d      4154           push r12
0x0000561f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00005622      55             push rbp
0x00005623      53             push rbx
0x00005624      4c89c3         mov rbx, r8
0x00005627      4989f6         mov r14, rsi
0x0000562a      4989d7         mov r15, rdx
0x0000562d      4883ec18       sub rsp, 0x18
0x00005631      4d85c0         test r8, r8
0x00005634      480f44d8       cmove rbx, rax
0x00005638      48894c2408     mov qword [rsp + 8], rcx
0x0000563d      e87ec2ffff     call sym.imp.__errno_location
0x00005642      448b20         mov r12d, dword [rax]
0x00005645      4889c5         mov rbp, rax
0x00005648      488d4308       lea rax, [rbx + 8]
0x0000564c      4883ec08       sub rsp, 8
0x00005650      448b4b04       mov r9d, dword [rbx + 4]
0x00005654      ff7330         push qword [rbx + 0x30]
0x00005657      448b03         mov r8d, dword [rbx]
0x0000565a      ff7328         push qword [rbx + 0x28]
0x0000565d      4c89fa         mov rdx, r15
0x00005660      50             push rax
0x00005661      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00005666      4c89f6         mov rsi, r14
0x00005669      4c89ef         mov rdi, r13
0x0000566c      e89feaffff     call sym.quotearg_buffer_restyled
0x00005671      44896500       mov dword [rbp], r12d
0x00005675      4883c438       add rsp, 0x38
0x00005679      5b             pop rbx
0x0000567a      5d             pop rbp
0x0000567b      415c           pop r12
0x0000567d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000567f      415e           pop r14
0x00005681      415f           pop r15
0x00005683      c3             ret
0x00005684      6690           nop
0x00005686      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00005690      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00005692      4156           push r14
0x00005694      488d05854e20.  lea rax, obj.default_quoting_options    ; 0x20a520
0x0000569b      4155           push r13
0x0000569d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000569f      4989d4         mov r12, rdx
0x000056a2      55             push rbp
0x000056a3      53             push rbx
0x000056a4      4889cb         mov rbx, rcx
0x000056a7      4989fe         mov r14, rdi
0x000056aa      4989f7         mov r15, rsi
0x000056ad      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000056b1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000056b4      480f44d8       cmove rbx, rax
0x000056b8      31ed           xor ebp, ebp
0x000056ba      e801c2ffff     call sym.imp.__errno_location
0x000056bf      4d85e4         test r12, r12
0x000056c2      4989c5         mov r13, rax
0x000056c5      8b00           mov eax, dword [rax]
0x000056c7      400f94c5       sete bpl
0x000056cb      0b6b04         or ebp, dword [rbx + 4]
0x000056ce      4c8d5308       lea r10, [rbx + 8]
0x000056d2      4883ec08       sub rsp, 8
0x000056d6      448b03         mov r8d, dword [rbx]
0x000056d9      4c89f9         mov rcx, r15
0x000056dc      89442414       mov dword [rsp + 0x14], eax
0x000056e0      ff7330         push qword [rbx + 0x30]
0x000056e3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000056e6      ff7328         push qword [rbx + 0x28]
0x000056e9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000056eb      31f6           xor esi, esi
0x000056ed      4189e9         mov r9d, ebp
0x000056f0      31ff           xor edi, edi
0x000056f2      4c89542440     mov qword [rsp + 0x40], r10
0x000056f7      e814eaffff     call sym.quotearg_buffer_restyled
0x000056fc      488d7001       lea rsi, [rax + 1]
0x00005700      4889442448     mov qword [rsp + 0x48], rax
0x00005705      4883c420       add rsp, 0x20
0x00005709      4889f7         mov rdi, rsi
0x0000570c      4889742418     mov qword [rsp + 0x18], rsi
0x00005711      e8ba0b0000     call sym.xmalloc
0x00005716      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000571b      4883ec08       sub rsp, 8
0x0000571f      ff7330         push qword [rbx + 0x30]
0x00005722      ff7328         push qword [rbx + 0x28]
0x00005725      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000572a      4189e9         mov r9d, ebp
0x0000572d      448b03         mov r8d, dword [rbx]
0x00005730      4c89f9         mov rcx, r15
0x00005733      4c89f2         mov rdx, r14
0x00005736      4889c7         mov rdi, rax
0x00005739      4152           push r10
0x0000573b      488b742438     mov rsi, qword [rsp + 0x38]
0x00005740      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00005745      8b44242c       mov eax, dword [rsp + 0x2c]
0x00005749      4883c420       add rsp, 0x20
0x0000574d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00005750      41894500       mov dword [r13], eax
0x00005754      7409           je 0x575f
0x00005756      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000575b      4d891c24       mov qword [r12], r11
0x0000575f      488b442410     mov rax, qword [rsp + 0x10]
0x00005764      4883c438       add rsp, 0x38
0x00005768      5b             pop rbx
0x00005769      5d             pop rbp
0x0000576a      415c           pop r12
0x0000576c      415d           pop r13
0x0000576e      415e           pop r14
0x00005770      415f           pop r15
0x00005772      c3             ret
0x00005773      0f1f00         nop dword [rax]
0x00005776      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00005780      4889d1         mov rcx, rdx
0x00005783      31d2           xor edx, edx
0x00005785      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000578a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00005790      8b05c2482000   mov eax, dword [obj.nslots]             ; [0x20a058:4]=1
0x00005796      4154           push r12
0x00005798      4c8b25c14820.  mov r12, qword [obj.slotvec]            ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x0000579f      55             push rbp
0x000057a0      53             push rbx
0x000057a1      83f801         cmp eax, 1
0x000057a4      7e2b           jle 0x57d1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x000057a6      83e802         sub eax, 2
0x000057a9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000057ae      48c1e004       shl rax, 4
0x000057b2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000057b7      660f1f840000.  nop word [rax + rax]
0x000057c0      488b3b         mov rdi, qword [rbx]
0x000057c3      4883c310       add rbx, 0x10
0x000057c7      e8d4c0ffff     call sym.imp.free
0x000057cc      4839eb         cmp rbx, rbp
0x000057cf      75ef           jne 0x57c0
0x000057d1      498b7c2408     mov rdi, qword [r12 + 8]
0x000057d6      488d1d434c20.  lea rbx, obj.slot0                      ; 0x20a420
0x000057dd      4839df         cmp rdi, rbx
0x000057e0      7417           je 0x57f9
0x000057e2      e8b9c0ffff     call sym.imp.free
0x000057e7      48c7057e4820.  mov qword [obj.slotvec0], 0x100         ; [0x20a070:8]=256
0x000057f2      48891d7f4820.  mov qword [0x0020a078], rbx             ; [0x20a078:8]=0x20a420 obj.slot0
0x000057f9      488d1d704820.  lea rbx, obj.slotvec0                   ; 0x20a070
0x00005800      4939dc         cmp r12, rbx
0x00005803      740f           je 0x5814
0x00005805      4c89e7         mov rdi, r12
0x00005808      e893c0ffff     call sym.imp.free
0x0000580d      48891d4c4820.  mov qword [obj.slotvec], rbx            ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x00005814      5b             pop rbx
0x00005815      c70539482000.  mov dword [obj.nslots], 1               ; [0x20a058:4]=1
0x0000581f      5d             pop rbp
0x00005820      415c           pop r12
0x00005822      c3             ret
0x00005823      0f1f00         nop dword [rax]
0x00005826      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00005830      488d0de94c20.  lea rcx, obj.default_quoting_options    ; 0x20a520
0x00005837      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000583e      e90dfbffff     jmp sym.quotearg_n_options
0x00005843      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00005846      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00005850      488d0dc94c20.  lea rcx, obj.default_quoting_options    ; 0x20a520
0x00005857      e9f4faffff     jmp sym.quotearg_n_options
0x0000585c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00005860      488d0db94c20.  lea rcx, obj.default_quoting_options    ; 0x20a520
0x00005867      4889fe         mov rsi, rdi
0x0000586a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005871      31ff           xor edi, edi
0x00005873      e9d8faffff     jmp sym.quotearg_n_options
0x00005878      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00005880      488d0d994c20.  lea rcx, obj.default_quoting_options    ; 0x20a520
0x00005887      4889f2         mov rdx, rsi
0x0000588a      4889fe         mov rsi, rdi
0x0000588d      31ff           xor edi, edi
0x0000588f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00005894      6690           nop
0x00005896      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x000058a0      4883ec48       sub rsp, 0x48
0x000058a4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x000058a7      64488b142528.  mov rdx, qword fs:[0x28]
0x000058b0      4889542438     mov qword [rsp + 0x38], rdx
0x000058b5      31d2           xor edx, edx
0x000058b7      83fe0a         cmp esi, 0xa
0x000058ba      7468           je 0x5924
0x000058bc      893424         mov dword [rsp], esi
0x000058bf      4889e1         mov rcx, rsp
0x000058c2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000058c9      4889c6         mov rsi, rax
0x000058cc      48c744240400.  mov qword [rsp + 4], 0
0x000058d5      48c744240c00.  mov qword [rsp + 0xc], 0
0x000058de      48c744241400.  mov qword [rsp + 0x14], 0
0x000058e7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000058f0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x000058f9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005902      c74424340000.  mov dword [rsp + 0x34], 0
0x0000590a      e841faffff     call sym.quotearg_n_options
0x0000590f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00005914      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000591d      750a           jne 0x5929                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000591f      4883c448       add rsp, 0x48
0x00005923      c3             ret
0x00005924      e887bfffff     call sym.imp.abort
0x00005929      e872c0ffff     call sym.imp.__stack_chk_fail
0x0000592e      6690           nop
;-- quotearg_n_style_mem:
0x00005930      4883ec48       sub rsp, 0x48
0x00005934      4889d0         mov rax, rdx
0x00005937      4889ca         mov rdx, rcx
0x0000593a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00005943      48894c2438     mov qword [rsp + 0x38], rcx
0x00005948      31c9           xor ecx, ecx
0x0000594a      83fe0a         cmp esi, 0xa
0x0000594d      7461           je 0x59b0
0x0000594f      893424         mov dword [rsp], esi
0x00005952      4889e1         mov rcx, rsp
0x00005955      4889c6         mov rsi, rax
0x00005958      48c744240400.  mov qword [rsp + 4], 0
0x00005961      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000596a      48c744241400.  mov qword [rsp + 0x14], 0
0x00005973      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000597c      48c744242400.  mov qword [rsp + 0x24], 0
0x00005985      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000598e      c74424340000.  mov dword [rsp + 0x34], 0
0x00005996      e8b5f9ffff     call sym.quotearg_n_options
0x0000599b      488b542438     mov rdx, qword [rsp + 0x38]
0x000059a0      644833142528.  xor rdx, qword fs:[0x28]
0x000059a9      750a           jne 0x59b5
0x000059ab      4883c448       add rsp, 0x48
0x000059af      c3             ret
0x000059b0      e8fbbeffff     call sym.imp.abort
0x000059b5      e8e6bfffff     call sym.imp.__stack_chk_fail
0x000059ba      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000059c0      4889f2         mov rdx, rsi
0x000059c3      89fe           mov esi, edi
0x000059c5      31ff           xor edi, edi
0x000059c7      e9d4feffff     jmp sym.quotearg_n_style
0x000059cc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x000059d0      4889d1         mov rcx, rdx
0x000059d3      4889f2         mov rdx, rsi
0x000059d6      89fe           mov esi, edi
0x000059d8      31ff           xor edi, edi
0x000059da      e951ffffff     jmp sym.quotearg_n_style_mem
0x000059df      90             nop
;-- quotearg_char_mem:
0x000059e0      4883ec48       sub rsp, 0x48
0x000059e4      89d1           mov ecx, edx
0x000059e6      64488b042528.  mov rax, qword fs:[0x28]
0x000059ef      4889442438     mov qword [rsp + 0x38], rax
0x000059f4      31c0           xor eax, eax
0x000059f6      488b05534b20.  mov rax, qword [0x0020a550]             ; [0x20a550:8]=0
0x000059fd      4989e0         mov r8, rsp
0x00005a00      83e11f         and ecx, 0x1f
0x00005a03      660f6f05154b.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005a0b      4889442430     mov qword [rsp + 0x30], rax
0x00005a10      89d0           mov eax, edx
0x00005a12      0f290424       movaps xmmword [rsp], xmm0
0x00005a16      c0e805         shr al, 5
0x00005a19      0fb6c0         movzx eax, al
0x00005a1c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00005a21      660f6f05074b.  movdqa xmm0, xmmword [0x0020a530]
0x00005a29      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005a2e      660f6f050a4b.  movdqa xmm0, xmmword [0x0020a540]
0x00005a36      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005a3b      418b11         mov edx, dword [r9]
0x00005a3e      89d0           mov eax, edx
0x00005a40      d3e8           shr eax, cl
0x00005a42      f7d0           not eax
0x00005a44      83e001         and eax, 1
0x00005a47      d3e0           shl eax, cl
0x00005a49      4c89c1         mov rcx, r8
0x00005a4c      31d0           xor eax, edx
0x00005a4e      4889f2         mov rdx, rsi
0x00005a51      4889fe         mov rsi, rdi
0x00005a54      418901         mov dword [r9], eax
0x00005a57      31ff           xor edi, edi
0x00005a59      e8f2f8ffff     call sym.quotearg_n_options
0x00005a5e      488b742438     mov rsi, qword [rsp + 0x38]
0x00005a63      644833342528.  xor rsi, qword fs:[0x28]
0x00005a6c      7505           jne 0x5a73
0x00005a6e      4883c448       add rsp, 0x48
0x00005a72      c3             ret
0x00005a73      e828bfffff     call sym.imp.__stack_chk_fail
0x00005a78      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00005a80      400fbed6       movsx edx, sil
0x00005a84      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00005a8b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00005a90      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005a95      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00005a9c      e93fffffff     jmp sym.quotearg_char_mem
0x00005aa1      0f1f440000     nop dword [rax + rax]
0x00005aa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00005ab0      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005ab5      e926ffffff     jmp sym.quotearg_char_mem
0x00005aba      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00005ac0      4883ec48       sub rsp, 0x48
0x00005ac4      4889d0         mov rax, rdx
0x00005ac7      64488b142528.  mov rdx, qword fs:[0x28]
0x00005ad0      4889542438     mov qword [rsp + 0x38], rdx
0x00005ad5      31d2           xor edx, edx
0x00005ad7      83fe0a         cmp esi, 0xa
0x00005ada      7468           je 0x5b44
0x00005adc      893424         mov dword [rsp], esi
0x00005adf      4889e1         mov rcx, rsp
0x00005ae2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005ae9      4889c6         mov rsi, rax
0x00005aec      48c744240400.  mov qword [rsp + 4], 0
0x00005af5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00005afe      48c744241400.  mov qword [rsp + 0x14], 0
0x00005b07      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005b10      48c744242400.  mov qword [rsp + 0x24], 0
0x00005b19      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005b22      c74424340000.  mov dword [rsp + 0x34], 0
0x00005b2a      e821f8ffff     call sym.quotearg_n_options
0x00005b2f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00005b34      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005b3d      750a           jne 0x5b49
0x00005b3f      4883c448       add rsp, 0x48
0x00005b43      c3             ret
0x00005b44      e867bdffff     call sym.imp.abort
0x00005b49      e852beffff     call sym.imp.__stack_chk_fail
0x00005b4e      6690           nop
;-- quotearg_n_custom_mem:
0x00005b50      4883ec48       sub rsp, 0x48
0x00005b54      4989c9         mov r9, rcx
0x00005b57      488b0df24920.  mov rcx, qword [0x0020a550]             ; [0x20a550:8]=0
0x00005b5e      660f6f05ba49.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005b66      64488b042528.  mov rax, qword fs:[0x28]
0x00005b6f      4889442438     mov qword [rsp + 0x38], rax
0x00005b74      31c0           xor eax, eax
0x00005b76      0f290424       movaps xmmword [rsp], xmm0
0x00005b7a      4885f6         test rsi, rsi
0x00005b7d      48894c2430     mov qword [rsp + 0x30], rcx
0x00005b82      c704240a0000.  mov dword [rsp], 0xa
0x00005b89      660f6f059f49.  movdqa xmm0, xmmword [0x0020a530]
0x00005b91      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005b96      660f6f05a249.  movdqa xmm0, xmmword [0x0020a540]
0x00005b9e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005ba3      7432           je 0x5bd7
0x00005ba5      4885d2         test rdx, rdx
0x00005ba8      742d           je 0x5bd7
0x00005baa      4889742428     mov qword [rsp + 0x28], rsi
0x00005baf      4889542430     mov qword [rsp + 0x30], rdx
0x00005bb4      4889e1         mov rcx, rsp
0x00005bb7      4c89c2         mov rdx, r8
0x00005bba      4c89ce         mov rsi, r9
0x00005bbd      e88ef7ffff     call sym.quotearg_n_options
0x00005bc2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005bc7      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005bd0      750a           jne 0x5bdc
0x00005bd2      4883c448       add rsp, 0x48
0x00005bd6      c3             ret
0x00005bd7      e8d4bcffff     call sym.imp.abort
0x00005bdc      e8bfbdffff     call sym.imp.__stack_chk_fail
0x00005be1      0f1f440000     nop dword [rax + rax]
0x00005be6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00005bf0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005bf7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00005bfc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00005c00      4889d1         mov rcx, rdx
0x00005c03      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005c0a      4889f2         mov rdx, rsi
0x00005c0d      4889fe         mov rsi, rdi
0x00005c10      31ff           xor edi, edi
0x00005c12      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00005c17      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00005c20      4989c8         mov r8, rcx
0x00005c23      4889d1         mov rcx, rdx
0x00005c26      4889f2         mov rdx, rsi
0x00005c29      4889fe         mov rsi, rdi
0x00005c2c      31ff           xor edi, edi
0x00005c2e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00005c33      0f1f00         nop dword [rax]
0x00005c36      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00005c40      488d0dd94320.  lea rcx, obj.quote_quoting_options      ; 0x20a020
0x00005c47      e904f7ffff     jmp sym.quotearg_n_options
0x00005c4c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00005c50      488d0dc94320.  lea rcx, obj.quote_quoting_options      ; 0x20a020
0x00005c57      4889f2         mov rdx, rsi
0x00005c5a      4889fe         mov rsi, rdi
0x00005c5d      31ff           xor edi, edi
0x00005c5f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00005c64      6690           nop
0x00005c66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00005c70      488d0da94320.  lea rcx, obj.quote_quoting_options      ; 0x20a020
0x00005c77      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005c7e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00005c83      0f1f00         nop dword [rax]
0x00005c86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00005c90      488d0d894320.  lea rcx, obj.quote_quoting_options      ; 0x20a020
0x00005c97      4889fe         mov rsi, rdi
0x00005c9a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005ca1      31ff           xor edi, edi
0x00005ca3      e9a8f6ffff     jmp sym.quotearg_n_options
0x00005ca8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00005cb0      4157           push r15
0x00005cb2      4156           push r14
0x00005cb4      4155           push r13
0x00005cb6      4154           push r12
0x00005cb8      4d89cc         mov r12, r9
0x00005cbb      55             push rbp
0x00005cbc      53             push rbx
0x00005cbd      4889fd         mov rbp, rdi
0x00005cc0      4c89c3         mov rbx, r8
0x00005cc3      4883ec28       sub rsp, 0x28
0x00005cc7      4885f6         test rsi, rsi
0x00005cca      0f8418010000   je 0x5de8
0x00005cd0      4989d0         mov r8, rdx
0x00005cd3      488d156e1f00.  lea rdx, [0x00007c48]                   ; "%s (%s) %s\n"
0x00005cda      4989c9         mov r9, rcx
0x00005cdd      31c0           xor eax, eax
0x00005cdf      4889f1         mov rcx, rsi
0x00005ce2      be01000000     mov esi, 1
0x00005ce7      e804bfffff     call sym.imp.__fprintf_chk
0x00005cec      488d35681f00.  lea rsi, [0x00007c5b]                   ; "(C)"
0x00005cf3      31ff           xor edi, edi
0x00005cf5      ba05000000     mov edx, 5
0x00005cfa      e861bcffff     call sym.imp.dcgettext
0x00005cff      488d157a2200.  lea rdx, obj.version_etc_copyright      ; 0x7f80 ; "Copyright %s %d Free Software Foundation, Inc."
0x00005d06      4889c1         mov rcx, rax
0x00005d09      41b8e3070000   mov r8d, 0x7e3
0x00005d0f      be01000000     mov esi, 1
0x00005d14      4889ef         mov rdi, rbp
0x00005d17      31c0           xor eax, eax
0x00005d19      e8d2beffff     call sym.imp.__fprintf_chk
0x00005d1e      488d35c31f00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x7ce8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00005d25      31ff           xor edi, edi
0x00005d27      ba05000000     mov edx, 5
0x00005d2c      e82fbcffff     call sym.imp.dcgettext
0x00005d31      4889ee         mov rsi, rbp
0x00005d34      4889c7         mov rdi, rax
0x00005d37      e804bdffff     call sym.imp.fputs_unlocked
0x00005d3c      4983fc09       cmp r12, 9
0x00005d40      0f873a030000   ja 0x6080
0x00005d46      488d15fb2100.  lea rdx, [0x00007f48]
0x00005d4d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00005d51      4801d0         add rax, rdx
0x00005d54      ffe0           jmp rax
0x00005d56      662e0f1f8400.  nop word cs:[rax + rax]
0x00005d60      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005d64      488b4310       mov rax, qword [rbx + 0x10]
0x00005d68      488d35e92000.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x7e58 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00005d6f      4c8b4308       mov r8, qword [rbx + 8]
0x00005d73      ba05000000     mov edx, 5
0x00005d78      31ff           xor edi, edi
0x00005d7a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005d7e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005d82      4c894c2410     mov qword [rsp + 0x10], r9
0x00005d87      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005d8b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005d8f      48890424       mov qword [rsp], rax
0x00005d93      4c89442408     mov qword [rsp + 8], r8
0x00005d98      488b1b         mov rbx, qword [rbx]
0x00005d9b      e8c0bbffff     call sym.imp.dcgettext
0x00005da0      4883ec08       sub rsp, 8
0x00005da4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00005da9      4889c2         mov rdx, rax
0x00005dac      4889d9         mov rcx, rbx
0x00005daf      be01000000     mov esi, 1
0x00005db4      4889ef         mov rdi, rbp
0x00005db7      31c0           xor eax, eax
0x00005db9      4151           push r9
0x00005dbb      4155           push r13
0x00005dbd      4154           push r12
0x00005dbf      4157           push r15
0x00005dc1      4156           push r14
0x00005dc3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005dc8      4c8b442438     mov r8, qword [rsp + 0x38]
0x00005dcd      e81ebeffff     call sym.imp.__fprintf_chk
0x00005dd2      4883c430       add rsp, 0x30
0x00005dd6      4883c428       add rsp, 0x28
0x00005dda      5b             pop rbx
0x00005ddb      5d             pop rbp
0x00005ddc      415c           pop r12
0x00005dde      415d           pop r13
0x00005de0      415e           pop r14
0x00005de2      415f           pop r15
0x00005de4      c3             ret
0x00005de5      0f1f00         nop dword [rax]
0x00005de8      4989c8         mov r8, rcx
0x00005deb      4889d1         mov rcx, rdx
0x00005dee      488d155f1e00.  lea rdx, str.s__s                       ; 0x7c54 ; "%s %s\n"
0x00005df5      be01000000     mov esi, 1
0x00005dfa      31c0           xor eax, eax
0x00005dfc      e8efbdffff     call sym.imp.__fprintf_chk
0x00005e01      e9e6feffff     jmp 0x5cec
0x00005e06      662e0f1f8400.  nop word cs:[rax + rax]
0x00005e10      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005e14      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005e18      488d35692000.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x7e88 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00005e1f      488b4310       mov rax, qword [rbx + 0x10]
0x00005e23      4c8b4308       mov r8, qword [rbx + 8]
0x00005e27      ba05000000     mov edx, 5
0x00005e2c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005e30      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005e34      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005e38      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005e3c      488b1b         mov rbx, qword [rbx]
0x00005e3f      4c89542418     mov qword [rsp + 0x18], r10
0x00005e44      4c894c2410     mov qword [rsp + 0x10], r9
0x00005e49      48890424       mov qword [rsp], rax
0x00005e4d      4c89442408     mov qword [rsp + 8], r8
0x00005e52      31ff           xor edi, edi
0x00005e54      e807bbffff     call sym.imp.dcgettext
0x00005e59      4c8b542418     mov r10, qword [rsp + 0x18]
0x00005e5e      4152           push r10
0x00005e60      e93fffffff     jmp 0x5da4
0x00005e65      0f1f00         nop dword [rax]
0x00005e68      488b1b         mov rbx, qword [rbx]
0x00005e6b      488d35ed1d00.  lea rsi, str.Written_by__s.             ; 0x7c5f ; "Written by %s.\n"
0x00005e72      ba05000000     mov edx, 5
0x00005e77      31ff           xor edi, edi
0x00005e79      e8e2baffff     call sym.imp.dcgettext
0x00005e7e      4883c428       add rsp, 0x28
0x00005e82      4889d9         mov rcx, rbx
0x00005e85      4889ef         mov rdi, rbp
0x00005e88      5b             pop rbx
0x00005e89      5d             pop rbp
0x00005e8a      415c           pop r12
0x00005e8c      415d           pop r13
0x00005e8e      415e           pop r14
0x00005e90      415f           pop r15
0x00005e92      4889c2         mov rdx, rax
0x00005e95      be01000000     mov esi, 1
0x00005e9a      31c0           xor eax, eax
0x00005e9c      e94fbdffff     jmp sym.imp.__fprintf_chk
0x00005ea1      0f1f80000000.  nop dword [rax]
0x00005ea8      4c8b6308       mov r12, qword [rbx + 8]
0x00005eac      488d35bc1d00.  lea rsi, str.Written_by__s_and__s.      ; 0x7c6f ; "Written by %s and %s.\n"
0x00005eb3      488b1b         mov rbx, qword [rbx]
0x00005eb6      ba05000000     mov edx, 5
0x00005ebb      31ff           xor edi, edi
0x00005ebd      e89ebaffff     call sym.imp.dcgettext
0x00005ec2      4883c428       add rsp, 0x28
0x00005ec6      4d89e0         mov r8, r12
0x00005ec9      4889d9         mov rcx, rbx
0x00005ecc      4889ef         mov rdi, rbp
0x00005ecf      4889c2         mov rdx, rax
0x00005ed2      be01000000     mov esi, 1
0x00005ed7      5b             pop rbx
0x00005ed8      5d             pop rbp
0x00005ed9      415c           pop r12
0x00005edb      415d           pop r13
0x00005edd      415e           pop r14
0x00005edf      415f           pop r15
0x00005ee1      31c0           xor eax, eax
0x00005ee3      e908bdffff     jmp sym.imp.__fprintf_chk
0x00005ee8      0f1f84000000.  nop dword [rax + rax]
0x00005ef0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005ef4      4c8b6308       mov r12, qword [rbx + 8]
0x00005ef8      488d35871d00.  lea rsi, str.Written_by__s___s__and__s. ; 0x7c86 ; "Written by %s, %s, and %s.\n"
0x00005eff      488b1b         mov rbx, qword [rbx]
0x00005f02      ba05000000     mov edx, 5
0x00005f07      31ff           xor edi, edi
0x00005f09      e852baffff     call sym.imp.dcgettext
0x00005f0e      4883c428       add rsp, 0x28
0x00005f12      4d89e9         mov r9, r13
0x00005f15      4d89e0         mov r8, r12
0x00005f18      4889d9         mov rcx, rbx
0x00005f1b      4889ef         mov rdi, rbp
0x00005f1e      4889c2         mov rdx, rax
0x00005f21      5b             pop rbx
0x00005f22      5d             pop rbp
0x00005f23      415c           pop r12
0x00005f25      415d           pop r13
0x00005f27      415e           pop r14
0x00005f29      415f           pop r15
0x00005f2b      be01000000     mov esi, 1
0x00005f30      31c0           xor eax, eax
0x00005f32      e9b9bcffff     jmp sym.imp.__fprintf_chk
0x00005f37      660f1f840000.  nop word [rax + rax]
0x00005f40      488d35711e00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x7db8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00005f47      ba05000000     mov edx, 5
0x00005f4c      31ff           xor edi, edi
0x00005f4e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005f52      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005f56      4c8b6308       mov r12, qword [rbx + 8]
0x00005f5a      488b1b         mov rbx, qword [rbx]
0x00005f5d      e8feb9ffff     call sym.imp.dcgettext
0x00005f62      4883ec08       sub rsp, 8
0x00005f66      4156           push r14
0x00005f68      4889c2         mov rdx, rax
0x00005f6b      4d89e9         mov r9, r13
0x00005f6e      4d89e0         mov r8, r12
0x00005f71      4889d9         mov rcx, rbx
0x00005f74      4889ef         mov rdi, rbp
0x00005f77      be01000000     mov esi, 1
0x00005f7c      31c0           xor eax, eax
0x00005f7e      e86dbcffff     call sym.imp.__fprintf_chk
0x00005f83      58             pop rax
0x00005f84      5a             pop rdx
0x00005f85      4883c428       add rsp, 0x28
0x00005f89      5b             pop rbx
0x00005f8a      5d             pop rbp
0x00005f8b      415c           pop r12
0x00005f8d      415d           pop r13
0x00005f8f      415e           pop r14
0x00005f91      415f           pop r15
0x00005f93      c3             ret
0x00005f94      0f1f4000       nop dword [rax]
0x00005f98      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005f9c      488d35351e00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x7dd8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00005fa3      ba05000000     mov edx, 5
0x00005fa8      31ff           xor edi, edi
0x00005faa      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005fae      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005fb2      4c8b6308       mov r12, qword [rbx + 8]
0x00005fb6      488b1b         mov rbx, qword [rbx]
0x00005fb9      e8a2b9ffff     call sym.imp.dcgettext
0x00005fbe      4157           push r15
0x00005fc0      eba4           jmp 0x5f66
0x00005fc2      660f1f440000   nop word [rax + rax]
0x00005fc8      4c8b4308       mov r8, qword [rbx + 8]
0x00005fcc      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005fd0      488d35291e00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x7e00 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00005fd7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005fdb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005fdf      ba05000000     mov edx, 5
0x00005fe4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005fe8      31ff           xor edi, edi
0x00005fea      488b1b         mov rbx, qword [rbx]
0x00005fed      4c890424       mov qword [rsp], r8
0x00005ff1      e86ab9ffff     call sym.imp.dcgettext
0x00005ff6      4883ec08       sub rsp, 8
0x00005ffa      4d89e9         mov r9, r13
0x00005ffd      4154           push r12
0x00005fff      4157           push r15
0x00006001      4156           push r14
0x00006003      4c8b442420     mov r8, qword [rsp + 0x20]
0x00006008      4889d9         mov rcx, rbx
0x0000600b      4889c2         mov rdx, rax
0x0000600e      4889ef         mov rdi, rbp
0x00006011      be01000000     mov esi, 1
0x00006016      31c0           xor eax, eax
0x00006018      e8d3bbffff     call sym.imp.__fprintf_chk
0x0000601d      4883c420       add rsp, 0x20
0x00006021      4883c428       add rsp, 0x28
0x00006025      5b             pop rbx
0x00006026      5d             pop rbp
0x00006027      415c           pop r12
0x00006029      415d           pop r13
0x0000602b      415e           pop r14
0x0000602d      415f           pop r15
0x0000602f      c3             ret
0x00006030      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00006034      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006038      488d35e91d00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x7e28 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000603f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006043      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006047      ba05000000     mov edx, 5
0x0000604c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006050      4c8b4308       mov r8, qword [rbx + 8]
0x00006054      31ff           xor edi, edi
0x00006056      4c894c2408     mov qword [rsp + 8], r9
0x0000605b      488b1b         mov rbx, qword [rbx]
0x0000605e      4c890424       mov qword [rsp], r8
0x00006062      e8f9b8ffff     call sym.imp.dcgettext
0x00006067      4155           push r13
0x00006069      4154           push r12
0x0000606b      4157           push r15
0x0000606d      4156           push r14
0x0000606f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00006074      eb8d           jmp 0x6003
0x00006076      662e0f1f8400.  nop word cs:[rax + rax]
0x00006080      4c8b5340       mov r10, qword [rbx + 0x40]
0x00006084      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006088      ba05000000     mov edx, 5
0x0000608d      488b4310       mov rax, qword [rbx + 0x10]
0x00006091      4c8b4308       mov r8, qword [rbx + 8]
0x00006095      488d35241e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x7ec0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000609c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000060a0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000060a4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000060a8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000060ac      4c89542418     mov qword [rsp + 0x18], r10
0x000060b1      4c894c2410     mov qword [rsp + 0x10], r9
0x000060b6      48890424       mov qword [rsp], rax
0x000060ba      4c89442408     mov qword [rsp + 8], r8
0x000060bf      488b1b         mov rbx, qword [rbx]
0x000060c2      e98bfdffff     jmp 0x5e52
0x000060c7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000060d0      4531c9         xor r9d, r9d
0x000060d3      49833800       cmp qword [r8], 0
0x000060d7      7412           je 0x60eb
0x000060d9      0f1f80000000.  nop dword [rax]
0x000060e0      4983c101       add r9, 1
0x000060e4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000060e9      75f5           jne 0x60e0
0x000060eb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000060f0      4883ec68       sub rsp, 0x68
0x000060f4      4d89c2         mov r10, r8
0x000060f7      4531c9         xor r9d, r9d
0x000060fa      64488b042528.  mov rax, qword fs:[0x28]
0x00006103      4889442458     mov qword [rsp + 0x58], rax
0x00006108      31c0           xor eax, eax
0x0000610a      4989e0         mov r8, rsp
0x0000610d      0f1f00         nop dword [rax]
0x00006110      418b02         mov eax, dword [r10]
0x00006113      83f82f         cmp eax, 0x2f
0x00006116      7742           ja 0x615a
0x00006118      4189c3         mov r11d, eax
0x0000611b      4d035a10       add r11, qword [r10 + 0x10]
0x0000611f      83c008         add eax, 8
0x00006122      418902         mov dword [r10], eax
0x00006125      498b03         mov rax, qword [r11]
0x00006128      4885c0         test rax, rax
0x0000612b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000612f      740a           je 0x613b
0x00006131      4983c101       add r9, 1
0x00006135      4983f90a       cmp r9, 0xa
0x00006139      75d5           jne 0x6110
0x0000613b      e870fbffff     call sym.version_etc_arn
0x00006140      488b442458     mov rax, qword [rsp + 0x58]
0x00006145      644833042528.  xor rax, qword fs:[0x28]
0x0000614e      7505           jne 0x6155
0x00006150      4883c468       add rsp, 0x68
0x00006154      c3             ret
0x00006155      e846b8ffff     call sym.imp.__stack_chk_fail
0x0000615a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000615e      498d4308       lea rax, [r11 + 8]
0x00006162      49894208       mov qword [r10 + 8], rax
0x00006166      ebbd           jmp 0x6125
0x00006168      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00006170      55             push rbp
0x00006171      53             push rbx
0x00006172      41ba20000000   mov r10d, 0x20                          ; "@"
0x00006178      4531db         xor r11d, r11d
0x0000617b      4881ecb80000.  sub rsp, 0xb8
0x00006182      64488b042528.  mov rax, qword fs:[0x28]
0x0000618b      4889442478     mov qword [rsp + 0x78], rax
0x00006190      31c0           xor eax, eax
0x00006192      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000619a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x000061a2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x000061aa      4c8d442420     lea r8, [rsp + 0x20]
0x000061af      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000061b7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000061bf      4889442410     mov qword [rsp + 0x10], rax
0x000061c4      488d84248000.  lea rax, [rsp + 0x80]
0x000061cc      4531c9         xor r9d, r9d
0x000061cf      4889442418     mov qword [rsp + 0x18], rax
0x000061d4      4889c5         mov rbp, rax
0x000061d7      660f1f840000.  nop word [rax + rax]
0x000061e0      4183fa2f       cmp r10d, 0x2f
0x000061e4      7756           ja 0x623c
0x000061e6      4489d0         mov eax, r10d
0x000061e9      41bb01000000   mov r11d, 1
0x000061ef      4183c208       add r10d, 8
0x000061f3      4801e8         add rax, rbp
0x000061f6      488b00         mov rax, qword [rax]
0x000061f9      4885c0         test rax, rax
0x000061fc      4b8904c8       mov qword [r8 + r9*8], rax
0x00006200      740a           je 0x620c
0x00006202      4983c101       add r9, 1
0x00006206      4983f90a       cmp r9, 0xa
0x0000620a      75d4           jne 0x61e0
0x0000620c      4584db         test r11b, r11b
0x0000620f      7524           jne 0x6235
0x00006211      e89afaffff     call sym.version_etc_arn
0x00006216      488b442478     mov rax, qword [rsp + 0x78]
0x0000621b      644833042528.  xor rax, qword fs:[0x28]
0x00006224      750a           jne 0x6230
0x00006226      4881c4b80000.  add rsp, 0xb8
0x0000622d      5b             pop rbx
0x0000622e      5d             pop rbp
0x0000622f      c3             ret
0x00006230      e86bb7ffff     call sym.imp.__stack_chk_fail
0x00006235      4489542408     mov dword [rsp + 8], r10d
0x0000623a      ebd5           jmp 0x6211
0x0000623c      4889d8         mov rax, rbx
0x0000623f      4883c308       add rbx, 8
0x00006243      ebb1           jmp 0x61f6
0x00006245      90             nop
0x00006246      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00006250      53             push rbx
0x00006251      488d354a1a00.  lea rsi, str.Report_bugs_to:__s         ; 0x7ca2 ; "\nReport bugs to: %s\n"
0x00006258      ba05000000     mov edx, 5
0x0000625d      31ff           xor edi, edi
0x0000625f      e8fcb6ffff     call sym.imp.dcgettext
0x00006264      488d154c1a00.  lea rdx, str.bug_coreutils_gnu.org      ; 0x7cb7 ; "bug-coreutils@gnu.org"
0x0000626b      4889c6         mov rsi, rax
0x0000626e      bf01000000     mov edi, 1
0x00006273      31c0           xor eax, eax
0x00006275      e8b6b8ffff     call sym.imp.__printf_chk
0x0000627a      488d354c1a00.  lea rsi, str.s_home_page:___s           ; 0x7ccd ; "%s home page: <%s>\n"
0x00006281      ba05000000     mov edx, 5
0x00006286      31ff           xor edi, edi
0x00006288      e8d3b6ffff     call sym.imp.dcgettext
0x0000628d      488d0d741100.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x7408 ; "https://www.gnu.org/software/coreutils/"
0x00006294      488d15700900.  lea rdx, str.GNU_coreutils              ; 0x6c0b ; "GNU coreutils"
0x0000629b      4889c6         mov rsi, rax
0x0000629e      bf01000000     mov edi, 1
0x000062a3      31c0           xor eax, eax
0x000062a5      e886b8ffff     call sym.imp.__printf_chk
0x000062aa      488b1d973f20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a248:8]=0
0x000062b1      488d35481c00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x7f00 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000062b8      31ff           xor edi, edi
0x000062ba      ba05000000     mov edx, 5
0x000062bf      e89cb6ffff     call sym.imp.dcgettext
0x000062c4      4889de         mov rsi, rbx
0x000062c7      4889c7         mov rdi, rax
0x000062ca      5b             pop rbx
0x000062cb      e970b7ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000062d0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000062d1      4889fb         mov rbx, rdi
0x000062d4      e8f7b7ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000062d9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000062dc      7505           jne 0x62e3
0x000062de      4885db         test rbx, rbx
0x000062e1      7502           jne 0x62e5
0x000062e3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000062e4      c3             ret
0x000062e5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000062ea      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000062f0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000062f3      48f7e6         mul rsi
0x000062f6      4889c7         mov rdi, rax
0x000062f9      0f90c0         seto al
0x000062fc      4885ff         test rdi, rdi
0x000062ff      780a           js 0x630b
0x00006301      0fb6c0         movzx eax, al
0x00006304      4885c0         test rax, rax
0x00006307      7502           jne 0x630b
0x00006309      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000630b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000630f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00006314      6690           nop
0x00006316      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00006320      ebae           jmp sym.xmalloc
0x00006322      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00006326      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00006330      4885f6         test rsi, rsi
0x00006333      53             push rbx
0x00006334      4889f3         mov rbx, rsi
0x00006337      7505           jne 0x633e
0x00006339      4885ff         test rdi, rdi
0x0000633c      751a           jne 0x6358
0x0000633e      4889de         mov rsi, rbx
0x00006341      e8cab7ffff     call sym.imp.realloc
0x00006346      4885c0         test rax, rax
0x00006349      7505           jne 0x6350
0x0000634b      4885db         test rbx, rbx
0x0000634e      7511           jne 0x6361                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00006350      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00006351      c3             ret
0x00006352      660f1f440000   nop word [rax + rax]
0x00006358      e843b5ffff     call sym.imp.free
0x0000635d      31c0           xor eax, eax
0x0000635f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00006360      c3             ret
0x00006361      e8ba010000     call sym.xalloc_die
0x00006366      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00006370      4889f0         mov rax, rsi
0x00006373      48f7e2         mul rdx
0x00006376      4889c6         mov rsi, rax
0x00006379      0f90c0         seto al
0x0000637c      4885f6         test rsi, rsi
0x0000637f      780a           js 0x638b
0x00006381      0fb6c0         movzx eax, al
0x00006384      4885c0         test rax, rax
0x00006387      7502           jne 0x638b
0x00006389      eba5           jmp sym.xrealloc
0x0000638b      4883ec08       sub rsp, 8
0x0000638f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00006394      6690           nop
0x00006396      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000063a0      4885ff         test rdi, rdi
0x000063a3      4989d1         mov r9, rdx
0x000063a6      488b0e         mov rcx, qword [rsi]
0x000063a9      7435           je 0x63e0
0x000063ab      31d2           xor edx, edx
0x000063ad      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000063b7      49f7f1         div r9
0x000063ba      4839c8         cmp rax, rcx
0x000063bd      763c           jbe 0x63fb
0x000063bf      4889c8         mov rax, rcx
0x000063c2      48d1e8         shr rax, 1
0x000063c5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000063ca      48890e         mov qword [rsi], rcx
0x000063cd      490fafc9       imul rcx, r9
0x000063d1      4889ce         mov rsi, rcx
0x000063d4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000063d9      0f1f80000000.  nop dword [rax]
0x000063e0      4885c9         test rcx, rcx
0x000063e3      7423           je 0x6408
0x000063e5      4889c8         mov rax, rcx
0x000063e8      49f7e1         mul r9
0x000063eb      0f90c2         seto dl
0x000063ee      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000063f1      0fb6d2         movzx edx, dl
0x000063f4      7805           js 0x63fb
0x000063f6      4885d2         test rdx, rdx
0x000063f9      74cf           je 0x63ca
0x000063fb      4883ec08       sub rsp, 8
0x000063ff      e81c010000     call sym.xalloc_die
0x00006404      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00006408      31d2           xor edx, edx
0x0000640a      b880000000     mov eax, 0x80
0x0000640f      4531c0         xor r8d, r8d
0x00006412      49f7f1         div r9
0x00006415      4885c0         test rax, rax
0x00006418      410f94c0       sete r8b
0x0000641c      498d0c00       lea rcx, [r8 + rax]
0x00006420      ebc3           jmp 0x63e5
0x00006422      0f1f4000       nop dword [rax]
0x00006426      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00006430      4885ff         test rdi, rdi
0x00006433      488b06         mov rax, qword [rsi]
0x00006436      7428           je 0x6460
0x00006438      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00006442      4839d0         cmp rax, rdx
0x00006445      772a           ja 0x6471
0x00006447      4889c2         mov rdx, rax
0x0000644a      48d1ea         shr rdx, 1
0x0000644d      488d440201     lea rax, [rdx + rax + 1]
0x00006452      488906         mov qword [rsi], rax
0x00006455      4889c6         mov rsi, rax
0x00006458      e9d3feffff     jmp sym.xrealloc
0x0000645d      0f1f00         nop dword [rax]
0x00006460      4885c0         test rax, rax
0x00006463      ba80000000     mov edx, 0x80
0x00006468      480f44c2       cmove rax, rdx
0x0000646c      4885c0         test rax, rax
0x0000646f      79e1           jns 0x6452
0x00006471      4883ec08       sub rsp, 8
0x00006475      e8a6000000     call sym.xalloc_die
0x0000647a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00006480      53             push rbx
0x00006481      4889fb         mov rbx, rdi
0x00006484      e847feffff     call sym.xmalloc
0x00006489      4889da         mov rdx, rbx
0x0000648c      31f6           xor esi, esi
0x0000648e      4889c7         mov rdi, rax
0x00006491      5b             pop rbx
0x00006492      e979b5ffff     jmp sym.imp.memset
0x00006497      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x000064a0      4889f8         mov rax, rdi
0x000064a3      4883ec08       sub rsp, 8
0x000064a7      48f7e6         mul rsi
0x000064aa      0f90c2         seto dl
0x000064ad      4885c0         test rax, rax
0x000064b0      7817           js 0x64c9
0x000064b2      0fb6d2         movzx edx, dl
0x000064b5      4885d2         test rdx, rdx
0x000064b8      750f           jne 0x64c9
0x000064ba      e891b5ffff     call sym.imp.calloc
0x000064bf      4885c0         test rax, rax
0x000064c2      7405           je 0x64c9
0x000064c4      4883c408       add rsp, 8
0x000064c8      c3             ret
0x000064c9      e852000000     call sym.xalloc_die
0x000064ce      6690           nop
;-- xmemdup:
0x000064d0      55             push rbp
0x000064d1      53             push rbx
0x000064d2      4889fd         mov rbp, rdi
0x000064d5      4889f7         mov rdi, rsi
0x000064d8      4889f3         mov rbx, rsi
0x000064db      4883ec08       sub rsp, 8
0x000064df      e8ecfdffff     call sym.xmalloc
0x000064e4      4883c408       add rsp, 8
0x000064e8      4889da         mov rdx, rbx
0x000064eb      4889ee         mov rsi, rbp
0x000064ee      5b             pop rbx
0x000064ef      5d             pop rbp
0x000064f0      4889c7         mov rdi, rax
0x000064f3      e9b8b5ffff     jmp sym.imp.memcpy
0x000064f8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00006500      53             push rbx
0x00006501      4889fb         mov rbx, rdi
0x00006504      e877b4ffff     call sym.imp.strlen
0x00006509      4889df         mov rdi, rbx
0x0000650c      488d7001       lea rsi, [rax + 1]
0x00006510      5b             pop rbx
0x00006511      ebbd           jmp sym.xmemdup
0x00006513      662e0f1f8400.  nop word cs:[rax + rax]
0x0000651d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00006520      488d35881a00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x7faf ; "memory exhausted"
0x00006527      4883ec08       sub rsp, 8
0x0000652b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00006530      31ff           xor edi, edi
0x00006532      e829b4ffff     call sym.imp.dcgettext
0x00006537      8b3ddb3a2000   mov edi, dword [obj.exit_failure]       ; [0x20a018:4]=1
0x0000653d      488d15f11100.  lea rdx, [0x00007735]                   ; "%s"
0x00006544      4889c1         mov rcx, rax
0x00006547      31f6           xor esi, esi
0x00006549      31c0           xor eax, eax
0x0000654b      e8f0b5ffff     call sym.imp.error
0x00006550      e85bb3ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00006555      662e0f1f8400.  nop word cs:[rax + rax]
0x0000655f      90             nop
;-- rpl_mbrtowc:
0x00006560      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00006562      4154           push r12
0x00006564      4989f5         mov r13, rsi
0x00006567      55             push rbp
0x00006568      53             push rbx
0x00006569      4889fb         mov rbx, rdi
0x0000656c      4989d4         mov r12, rdx
0x0000656f      4883ec18       sub rsp, 0x18
0x00006573      64488b042528.  mov rax, qword fs:[0x28]
0x0000657c      4889442408     mov qword [rsp + 8], rax
0x00006581      31c0           xor eax, eax
0x00006583      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00006588      4885ff         test rdi, rdi
0x0000658b      480f44d8       cmove rbx, rax
0x0000658f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00006592      e829b4ffff     call sym.imp.mbrtowc
0x00006597      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000659b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000659e      7620           jbe 0x65c0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000065a0      4d85e4         test r12, r12
0x000065a3      741b           je 0x65c0
0x000065a5      31ff           xor edi, edi
0x000065a7      e834030000     call sym.hard_locale
0x000065ac      84c0           test al, al
0x000065ae      7510           jne 0x65c0
0x000065b0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000065b5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x000065ba      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000065bc      0f1f4000       nop dword [rax]
0x000065c0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x000065c5      644833142528.  xor rdx, qword fs:[0x28]
0x000065ce      4889e8         mov rax, rbp
0x000065d1      750b           jne 0x65de
0x000065d3      4883c418       add rsp, 0x18
0x000065d7      5b             pop rbx
0x000065d8      5d             pop rbp
0x000065d9      415c           pop r12
0x000065db      415d           pop r13
0x000065dd      c3             ret
0x000065de      e8bdb3ffff     call sym.imp.__stack_chk_fail
0x000065e3      662e0f1f8400.  nop word cs:[rax + rax]
0x000065ed      0f1f00         nop dword [rax]
;-- str2sig:
0x000065f0      4155           push r13                                ; ../coreutils-8.31/lib/sig2str.c:305
0x000065f2      4154           push r12
0x000065f4      4989f5         mov r13, rsi
0x000065f7      55             push rbp
0x000065f8      53             push rbx
0x000065f9      31db           xor ebx, ebx
0x000065fb      4989fc         mov r12, rdi
0x000065fe      488d2d7f3a20.  lea rbp, [0x0020a084]                   ; "HUP"
0x00006605      4883ec18       sub rsp, 0x18
0x00006609      64488b042528.  mov rax, qword fs:[0x28]
0x00006612      4889442408     mov qword [rsp + 8], rax
0x00006617      31c0           xor eax, eax
0x00006619      0fbe07         movsx eax, byte [rdi]                   ; ../coreutils-8.31/lib/sig2str.c:263
0x0000661c      83e830         sub eax, 0x30
0x0000661f      83f809         cmp eax, 9
0x00006622      7718           ja 0x663c
0x00006624      eb5a           jmp 0x6680
0x00006626      662e0f1f8400.  nop word cs:[rax + rax]
0x00006630      83c301         add ebx, 1                              ; ../coreutils-8.31/lib/sig2str.c:273
0x00006633      4883c50c       add rbp, 0xc
0x00006637      83fb23         cmp ebx, 0x23
0x0000663a      7474           je 0x66b0
0x0000663c      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/sig2str.c:274
0x0000663f      4889ef         mov rdi, rbp
0x00006642      e829b4ffff     call sym.imp.strcmp
0x00006647      85c0           test eax, eax
0x00006649      75e5           jne 0x6630
0x0000664b      488d145b       lea rdx, [rbx + rbx*2]                  ; ../coreutils-8.31/lib/sig2str.c:275
0x0000664f      488d052a3a20.  lea rax, obj.numname_table              ; 0x20a080
0x00006656      8b0490         mov eax, dword [rax + rdx*4]
0x00006659      41894500       mov dword [r13], eax                    ; ../coreutils-8.31/lib/sig2str.c:306
0x0000665d      c1f81f         sar eax, 0x1f                           ; ../coreutils-8.31/lib/sig2str.c:307
0x00006660      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/sig2str.c:308
0x00006665      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000666e      0f85fc000000   jne 0x6770
0x00006674      4883c418       add rsp, 0x18
0x00006678      5b             pop rbx
0x00006679      5d             pop rbp
0x0000667a      415c           pop r12
0x0000667c      415d           pop r13
0x0000667e      c3             ret
0x0000667f      90             nop
0x00006680      ba0a000000     mov edx, 0xa                            ; ../coreutils-8.31/lib/sig2str.c:266
0x00006685      4889e6         mov rsi, rsp
0x00006688      e803b4ffff     call sym.imp.strtol
0x0000668d      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/sig2str.c:267
0x00006691      803a00         cmp byte [rdx], 0
0x00006694      7506           jne 0x669c
0x00006696      4883f840       cmp rax, 0x40                           ; segment.PHDR
0x0000669a      7ebd           jle 0x6659
0x0000669c      41c74500ffff.  mov dword [r13], 0xffffffff             ; ../coreutils-8.31/lib/sig2str.c:306 ; [0xffffffff:4]=-1 ; -1
0x000066a4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/sig2str.c:307 ; -1
0x000066a9      ebb5           jmp 0x6660
0x000066ab      0f1f440000     nop dword [rax + rax]
0x000066b0      e8fbb4ffff     call sym.imp.__libc_current_sigrtmin    ; ../coreutils-8.31/lib/sig2str.c:279
0x000066b5      89c5           mov ebp, eax
0x000066b7      e844b5ffff     call sym.imp.__libc_current_sigrtmax    ; ../coreutils-8.31/lib/sig2str.c:280
0x000066bc      85ed           test ebp, ebp                           ; ../coreutils-8.31/lib/sig2str.c:282
0x000066be      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/sig2str.c:280
0x000066c0      7e1a           jle 0x66dc                              ; ../coreutils-8.31/lib/sig2str.c:282
0x000066c2      488d3df71800.  lea rdi, str.RTMIN                      ; 0x7fc0 ; "RTMIN"
0x000066c9      b905000000     mov ecx, 5
0x000066ce      4c89e6         mov rsi, r12
0x000066d1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000066d3      0f97c0         seta al
0x000066d6      1c00           sbb al, 0
0x000066d8      84c0           test al, al
0x000066da      7457           je 0x6733
0x000066dc      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/sig2str.c:288
0x000066de      7ebc           jle 0x669c
0x000066e0      488d3ddf1800.  lea rdi, str.RTMAX                      ; 0x7fc6 ; "RTMAX"
0x000066e7      b905000000     mov ecx, 5
0x000066ec      4c89e6         mov rsi, r12
0x000066ef      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000066f1      0f97c0         seta al
0x000066f4      1c00           sbb al, 0
0x000066f6      84c0           test al, al
0x000066f8      75a2           jne 0x669c
0x000066fa      498d7c2405     lea rdi, [r12 + 5]                      ; ../coreutils-8.31/lib/sig2str.c:290
0x000066ff      ba0a000000     mov edx, 0xa
0x00006704      4889e6         mov rsi, rsp
0x00006707      e884b3ffff     call sym.imp.strtol
0x0000670c      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/sig2str.c:291
0x00006710      803a00         cmp byte [rdx], 0
0x00006713      7587           jne 0x669c
0x00006715      29dd           sub ebp, ebx
0x00006717      4863ed         movsxd rbp, ebp
0x0000671a      4839e8         cmp rax, rbp
0x0000671d      0f8c79ffffff   jl 0x669c
0x00006723      4885c0         test rax, rax
0x00006726      0f8f70ffffff   jg 0x669c
0x0000672c      01d8           add eax, ebx                            ; ../coreutils-8.31/lib/sig2str.c:292
0x0000672e      e926ffffff     jmp 0x6659
0x00006733      498d7c2405     lea rdi, [r12 + 5]                      ; ../coreutils-8.31/lib/sig2str.c:284
0x00006738      ba0a000000     mov edx, 0xa
0x0000673d      4889e6         mov rsi, rsp
0x00006740      e84bb3ffff     call sym.imp.strtol
0x00006745      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/sig2str.c:285
0x00006749      803a00         cmp byte [rdx], 0
0x0000674c      0f854affffff   jne 0x669c
0x00006752      4885c0         test rax, rax
0x00006755      0f8841ffffff   js 0x669c
0x0000675b      29eb           sub ebx, ebp
0x0000675d      4863d3         movsxd rdx, ebx
0x00006760      4839d0         cmp rax, rdx
0x00006763      0f8f33ffffff   jg 0x669c
0x00006769      01e8           add eax, ebp                            ; ../coreutils-8.31/lib/sig2str.c:286
0x0000676b      e9e9feffff     jmp 0x6659
0x00006770      e82bb2ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/sig2str.c:308
0x00006775      90             nop
0x00006776      662e0f1f8400.  nop word cs:[rax + rax]
;-- sig2str:
0x00006780      55             push rbp                                ; ../coreutils-8.31/lib/sig2str.c:316
0x00006781      488d05f83820.  lea rax, obj.numname_table              ; 0x20a080
0x00006788      53             push rbx
0x00006789      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/sig2str.c:318
0x0000678b      89fb           mov ebx, edi                            ; ../coreutils-8.31/lib/sig2str.c:316
0x0000678d      4889f7         mov rdi, rsi
0x00006790      4883ec18       sub rsp, 0x18
0x00006794      4889c1         mov rcx, rax
0x00006797      eb13           jmp 0x67ac
0x00006799      0f1f80000000.  nop dword [rax]
0x000067a0      83c201         add edx, 1                              ; ../coreutils-8.31/lib/sig2str.c:318
0x000067a3      4883c10c       add rcx, 0xc
0x000067a7      83fa23         cmp edx, 0x23
0x000067aa      7424           je 0x67d0
0x000067ac      3919           cmp dword [rcx], ebx                    ; ../coreutils-8.31/lib/sig2str.c:319
0x000067ae      75f0           jne 0x67a0
0x000067b0      488d1452       lea rdx, [rdx + rdx*2]                  ; ../coreutils-8.31/lib/sig2str.c:321
0x000067b4      488d749004     lea rsi, [rax + rdx*4 + 4]
0x000067b9      e832b1ffff     call sym.imp.strcpy                     ; string_fortified.h:90   return __builtin___strcpy_chk (__dest, __src, __bos (__dest));
0x000067be      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/sig2str.c:322
0x000067c0      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/sig2str.c:349
0x000067c4      5b             pop rbx
0x000067c5      5d             pop rbp
0x000067c6      c3             ret
0x000067c7      660f1f840000.  nop word [rax + rax]
0x000067d0      48897c2408     mov qword [rsp + 8], rdi
0x000067d5      e8d6b3ffff     call sym.imp.__libc_current_sigrtmin    ; ../coreutils-8.31/lib/sig2str.c:326
0x000067da      89c5           mov ebp, eax
0x000067dc      e81fb4ffff     call sym.imp.__libc_current_sigrtmax    ; ../coreutils-8.31/lib/sig2str.c:327
0x000067e1      39dd           cmp ebp, ebx                            ; ../coreutils-8.31/lib/sig2str.c:330
0x000067e3      7f6c           jg 0x6851
0x000067e5      39d8           cmp eax, ebx
0x000067e7      7c68           jl 0x6851
0x000067e9      89c2           mov edx, eax                            ; ../coreutils-8.31/lib/sig2str.c:333
0x000067eb      488b7c2408     mov rdi, qword [rsp + 8]
0x000067f0      29ea           sub edx, ebp
0x000067f2      d1fa           sar edx, 1
0x000067f4      01ea           add edx, ebp
0x000067f6      39da           cmp edx, ebx
0x000067f8      7d46           jge 0x6840
0x000067fa      ba58000000     mov edx, 0x58                           ; string_fortified.h:90   return __builtin___strcpy_chk (__dest, __src, __bos (__dest)); ; 'X'
0x000067ff      c70752544d41   mov dword [rdi], 0x414d5452             ; 'RTMA'
                                                                       ; [0x414d5452:4]=-1
0x00006805      89c5           mov ebp, eax
0x00006807      66895704       mov word [rdi + 4], dx
0x0000680b      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/sig2str.c:345
0x0000680d      29e8           sub eax, ebp
0x0000680f      74af           je 0x67c0
0x00006811      488d0db41700.  lea rcx, [0x00007fcc]                   ; stdio2.h:33   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1, ; "%+d"
0x00006818      4189c0         mov r8d, eax
0x0000681b      4883c705       add rdi, 5                              ; ../coreutils-8.31/lib/sig2str.c:346
0x0000681f      48c7c2ffffff.  mov rdx, 0xffffffffffffffff             ; stdio2.h:33   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
0x00006826      be01000000     mov esi, 1
0x0000682b      31c0           xor eax, eax
0x0000682d      e81eb4ffff     call sym.imp.__sprintf_chk
0x00006832      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/sig2str.c:349
0x00006836      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/sig2str.c:347
0x00006838      5b             pop rbx                                 ; ../coreutils-8.31/lib/sig2str.c:349
0x00006839      5d             pop rbp
0x0000683a      c3             ret
0x0000683b      0f1f440000     nop dword [rax + rax]
0x00006840      b94e000000     mov ecx, 0x4e                           ; string_fortified.h:90   return __builtin___strcpy_chk (__dest, __src, __bos (__dest)); ; 'N'
0x00006845      c70752544d49   mov dword [rdi], 0x494d5452             ; 'RTMI'
                                                                       ; [0x494d5452:4]=-1
0x0000684b      66894f04       mov word [rdi + 4], cx
0x0000684f      ebba           jmp 0x680b
0x00006851      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/sig2str.c:331 ; -1
0x00006856      e965ffffff     jmp 0x67c0
0x0000685b      0f1f440000     nop dword [rax + rax]
;-- close_stream:
0x00006860      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00006862      55             push rbp
0x00006863      4889fd         mov rbp, rdi
0x00006866      53             push rbx
0x00006867      e894b0ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000686c      8b5d00         mov ebx, dword [rbp]
0x0000686f      4889ef         mov rdi, rbp
0x00006872      4989c4         mov r12, rax
0x00006875      e806010000     call sym.rpl_fclose
0x0000687a      83e320         and ebx, 0x20                           ; "@"
0x0000687d      85db           test ebx, ebx
0x0000687f      7517           jne 0x6898
0x00006881      85c0           test eax, eax
0x00006883      740a           je 0x688f                               ; stdio.h:-186
0x00006885      4d85e4         test r12, r12                           ; stdio.h:-178
0x00006888      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000688d      7439           je 0x68c8
0x0000688f      5b             pop rbx
0x00006890      5d             pop rbp
0x00006891      415c           pop r12
0x00006893      c3             ret
0x00006894      0f1f4000       nop dword [rax]
0x00006898      85c0           test eax, eax
0x0000689a      751c           jne 0x68b8
0x0000689c      e81fb0ffff     call sym.imp.__errno_location
0x000068a1      c70000000000   mov dword [rax], 0
0x000068a7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000068ac      5b             pop rbx
0x000068ad      5d             pop rbp
0x000068ae      415c           pop r12
0x000068b0      c3             ret
0x000068b1      0f1f80000000.  nop dword [rax]
0x000068b8      5b             pop rbx
0x000068b9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000068be      5d             pop rbp                                 ; stdio.h:-186
0x000068bf      415c           pop r12
0x000068c1      c3             ret
0x000068c2      660f1f440000   nop word [rax + rax]
0x000068c8      e8f3afffff     call sym.imp.__errno_location
0x000068cd      833809         cmp dword [rax], 9
0x000068d0      5b             pop rbx
0x000068d1      5d             pop rbp
0x000068d2      415c           pop r12                                 ; stdio.h:-178
0x000068d4      0f95c0         setne al
0x000068d7      0fb6c0         movzx eax, al
0x000068da      f7d8           neg eax
0x000068dc      c3             ret
0x000068dd      0f1f00         nop dword [rax]
;-- hard_locale:
0x000068e0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x000068e4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x000068e6      e835b2ffff     call sym.imp.setlocale
0x000068eb      4889c2         mov rdx, rax
0x000068ee      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x000068f3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x000068f6      741d           je 0x6915
0x000068f8      488d3dd11600.  lea rdi, [0x00007fd0]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x000068ff      b902000000     mov ecx, 2
0x00006904      4889d6         mov rsi, rdx
0x00006907      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006909      0f97c1         seta cl
0x0000690c      80d900         sbb cl, 0
0x0000690f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00006911      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00006913      750b           jne 0x6920
0x00006915      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00006919      c3             ret
0x0000691a      660f1f440000   nop word [rax + rax]
0x00006920      488d3dab1600.  lea rdi, [0x00007fd2]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "POSIX"
0x00006927      b906000000     mov ecx, 6
0x0000692c      4889d6         mov rsi, rdx
0x0000692f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006931      0f97c0         seta al
0x00006934      1c00           sbb al, 0
0x00006936      84c0           test al, al
0x00006938      0f95c0         setne al
0x0000693b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000693f      c3             ret
;-- locale_charset:
0x00006940      4883ec08       sub rsp, 8
0x00006944      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00006949      e8a2b1ffff     call sym.imp.nl_langinfo
0x0000694e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00006951      741d           je 0x6970
0x00006953      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00006956      488d157b1600.  lea rdx, str.ASCII                      ; 0x7fd8 ; "ASCII"
0x0000695d      480f44c2       cmove rax, rdx
0x00006961      4883c408       add rsp, 8
0x00006965      c3             ret
0x00006966      662e0f1f8400.  nop word cs:[rax + rax]
0x00006970      488d05611600.  lea rax, str.ASCII                      ; 0x7fd8 ; "ASCII"
0x00006977      4883c408       add rsp, 8
0x0000697b      c3             ret
0x0000697c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00006980      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00006982      55             push rbp
0x00006983      53             push rbx
0x00006984      4889fb         mov rbx, rdi
0x00006987      e834b1ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000698c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000698e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00006991      7854           js 0x69e7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00006993      e868b1ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00006998      85c0           test eax, eax
0x0000699a      752c           jne 0x69c8
0x0000699c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000699f      e85c000000     call sym.rpl_fflush
0x000069a4      85c0           test eax, eax
0x000069a6      743c           je 0x69e4
0x000069a8      e813afffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x000069ad      448b20         mov r12d, dword [rax]
0x000069b0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000069b3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x000069b6      e875afffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x000069bb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x000069be      7530           jne 0x69f0
0x000069c0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000069c1      5d             pop rbp
0x000069c2      415c           pop r12
0x000069c4      c3             ret
0x000069c5      0f1f00         nop dword [rax]
0x000069c8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x000069cb      e8f0b0ffff     call sym.imp.fileno
0x000069d0      31f6           xor esi, esi
0x000069d2      ba01000000     mov edx, 1
0x000069d7      89c7           mov edi, eax
0x000069d9      e812b0ffff     call sym.imp.lseek
0x000069de      4883f8ff       cmp rax, 0xffffffffffffffff
0x000069e2      75b8           jne 0x699c
0x000069e4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000069e7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000069e8      5d             pop rbp
0x000069e9      415c           pop r12
0x000069eb      e940afffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x000069f0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x000069f4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x000069f9      ebc5           jmp 0x69c0
0x000069fb      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00006a00      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00006a03      53             push rbx
0x00006a04      4889fb         mov rbx, rdi
0x00006a07      7411           je 0x6a1a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00006a09      e8f2b0ffff     call sym.imp.__freading
0x00006a0e      85c0           test eax, eax
0x00006a10      7408           je 0x6a1a
0x00006a12      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00006a18      750e           jne 0x6a28
0x00006a1a      4889df         mov rdi, rbx
0x00006a1d      5b             pop rbx
0x00006a1e      e9bdb0ffff     jmp sym.imp.fflush
0x00006a23      0f1f440000     nop dword [rax + rax]
0x00006a28      4889df         mov rdi, rbx
0x00006a2b      ba01000000     mov edx, 1
0x00006a30      31f6           xor esi, esi
0x00006a32      e809000000     call sym.rpl_fseeko
0x00006a37      4889df         mov rdi, rbx
0x00006a3a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00006a3b      e9a0b0ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00006a40      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00006a44      48394710       cmp qword [rdi + 0x10], rax
0x00006a48      7406           je 0x6a50                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00006a4a      e901b1ffff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x00006a4f      90             nop
0x00006a50      488b4720       mov rax, qword [rdi + 0x20]
0x00006a54      48394728       cmp qword [rdi + 0x28], rax
0x00006a58      75f0           jne 0x6a4a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00006a5a      48837f4800     cmp qword [rdi + 0x48], 0
0x00006a5f      75e9           jne 0x6a4a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00006a61      4154           push r12
0x00006a63      55             push rbp
0x00006a64      4189d4         mov r12d, edx
0x00006a67      53             push rbx
0x00006a68      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00006a6b      4889fb         mov rbx, rdi
0x00006a6e      e84db0ffff     call sym.imp.fileno
0x00006a73      4489e2         mov edx, r12d
0x00006a76      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00006a79      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x00006a7b      e870afffff     call sym.imp.lseek
0x00006a80      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006a84      740c           je 0x6a92
0x00006a86      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00006a89      488983900000.  mov qword [rbx + 0x90], rax
0x00006a90      31c0           xor eax, eax
0x00006a92      5b             pop rbx                                 ; /sys_errlist.h:19
0x00006a93      5d             pop rbp
0x00006a94      415c           pop r12
0x00006a96      c3             ret
0x00006a97      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x00006aa0      4157           push r15
0x00006aa2      4156           push r14
0x00006aa4      4989d7         mov r15, rdx
0x00006aa7      4155           push r13
0x00006aa9      4154           push r12
0x00006aab      4c8d251e2f20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x2099d0
0x00006ab2      55             push rbp
0x00006ab3      488d2d1e2f20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x2099d8
0x00006aba      53             push rbx
0x00006abb      4189fd         mov r13d, edi
0x00006abe      4989f6         mov r14, rsi
0x00006ac1      4c29e5         sub rbp, r12
0x00006ac4      4883ec08       sub rsp, 8
0x00006ac8      48c1fd03       sar rbp, 3
0x00006acc      e887adffff     call sym._init
0x00006ad1      4885ed         test rbp, rbp
0x00006ad4      7420           je 0x6af6
0x00006ad6      31db           xor ebx, ebx
0x00006ad8      0f1f84000000.  nop dword [rax + rax]
0x00006ae0      4c89fa         mov rdx, r15
0x00006ae3      4c89f6         mov rsi, r14
0x00006ae6      4489ef         mov edi, r13d
0x00006ae9      41ff14dc       call qword [r12 + rbx*8]
0x00006aed      4883c301       add rbx, 1
0x00006af1      4839dd         cmp rbp, rbx
0x00006af4      75ea           jne 0x6ae0
0x00006af6      4883c408       add rsp, 8
0x00006afa      5b             pop rbx
0x00006afb      5d             pop rbp
0x00006afc      415c           pop r12
0x00006afe      415d           pop r13
0x00006b00      415e           pop r14
0x00006b02      415f           pop r15
0x00006b04      c3             ret
0x00006b05      90             nop
0x00006b06      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00006b10      f3c3           ret
0x00006b12      662e0f1f8400.  nop word cs:[rax + rax]
0x00006b1c      0f1f4000       nop dword [rax]
;-- atexit:
0x00006b20      488b15e13420.  mov rdx, qword [obj.__dso_handle]       ; [0x20a008:8]=0x20a008 obj.__dso_handle
0x00006b27      31f6           xor esi, esi
0x00006b29      e972b0ffff     jmp sym.imp.__cxa_atexit
0x00006b2e      0000           add byte [rax], al
