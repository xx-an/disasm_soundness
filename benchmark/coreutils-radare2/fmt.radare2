;-- section..plt:
;-- .plt:
0x000014b0      ff357a792000   push qword [0x00208e30]                 ; [12] -r-x section size 784 named .plt
0x000014b6      ff257c792000   jmp qword [0x00208e38]                  ; [0x208e38:8]=0
0x000014bc      0f1f4000       nop dword [rax]
;-- imp.__uflow:
0x000014c0      ff257a792000   jmp qword [reloc.__uflow]               ; [0x208e40:8]=0x14c6
0x000014c6      6800000000     push 0
0x000014cb      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x000014d0      ff2572792000   jmp qword [reloc.free]                  ; [0x208e48:8]=0x14d6
0x000014d6      6801000000     push 1
0x000014db      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x000014e0      ff256a792000   jmp qword [reloc.abort]                 ; [0x208e50:8]=0x14e6
0x000014e6      6802000000     push 2
0x000014eb      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000014f0      ff2562792000   jmp qword [reloc.__errno_location]      ; [0x208e58:8]=0x14f6
0x000014f6      6803000000     push 3
0x000014fb      e9b0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001500      ff255a792000   jmp qword [reloc.strncmp]               ; [0x208e60:8]=0x1506
0x00001506      6804000000     push 4
0x0000150b      e9a0ffffff     jmp sym..plt
;-- imp._exit:
0x00001510      ff2552792000   jmp qword [reloc._exit]                 ; [0x208e68:8]=0x1516
0x00001516      6805000000     push 5
0x0000151b      e990ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001520      ff254a792000   jmp qword [reloc.__fpending]            ; [0x208e70:8]=0x1526 ; "&\x15"
0x00001526      6806000000     push 6
0x0000152b      e980ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001530      ff2542792000   jmp qword [reloc.textdomain]            ; [0x208e78:8]=0x1536 ; "6\x15"
0x00001536      6807000000     push 7
0x0000153b      e970ffffff     jmp sym..plt
;-- imp.fclose:
0x00001540      ff253a792000   jmp qword [reloc.fclose]                ; [0x208e80:8]=0x1546 ; "F\x15"
0x00001546      6808000000     push 8
0x0000154b      e960ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001550      ff2532792000   jmp qword [reloc.bindtextdomain]        ; [0x208e88:8]=0x1556 ; "V\x15"
0x00001556      6809000000     push 9
0x0000155b      e950ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001560      ff252a792000   jmp qword [reloc.dcgettext]             ; [0x208e90:8]=0x1566 ; "f\x15"
0x00001566      680a000000     push 0xa
0x0000156b      e940ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001570      ff2522792000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x208e98:8]=0x1576 ; "v\x15"
0x00001576      680b000000     push 0xb
0x0000157b      e930ffffff     jmp sym..plt
;-- imp.strlen:
0x00001580      ff251a792000   jmp qword [reloc.strlen]                ; [0x208ea0:8]=0x1586
0x00001586      680c000000     push 0xc
0x0000158b      e920ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001590      ff2512792000   jmp qword [reloc.__stack_chk_fail]      ; [0x208ea8:8]=0x1596
0x00001596      680d000000     push 0xd
0x0000159b      e910ffffff     jmp sym..plt
;-- imp.getopt_long:
0x000015a0      ff250a792000   jmp qword [reloc.getopt_long]           ; [0x208eb0:8]=0x15a6
0x000015a6      680e000000     push 0xe
0x000015ab      e900ffffff     jmp sym..plt
;-- imp.mbrtowc:
0x000015b0      ff2502792000   jmp qword [reloc.mbrtowc]               ; [0x208eb8:8]=0x15b6
0x000015b6      680f000000     push 0xf
0x000015bb      e9f0feffff     jmp sym..plt
;-- imp.strchr:
0x000015c0      ff25fa782000   jmp qword [reloc.strchr]                ; [0x208ec0:8]=0x15c6
0x000015c6      6810000000     push 0x10
0x000015cb      e9e0feffff     jmp sym..plt
;-- imp.__overflow:
0x000015d0      ff25f2782000   jmp qword [reloc.__overflow]            ; [0x208ec8:8]=0x15d6
0x000015d6      6811000000     push 0x11
0x000015db      e9d0feffff     jmp sym..plt
;-- imp.strrchr:
0x000015e0      ff25ea782000   jmp qword [reloc.strrchr]               ; [0x208ed0:8]=0x15e6
0x000015e6      6812000000     push 0x12
0x000015eb      e9c0feffff     jmp sym..plt
;-- imp.lseek:
0x000015f0      ff25e2782000   jmp qword [reloc.lseek]                 ; [0x208ed8:8]=0x15f6
0x000015f6      6813000000     push 0x13
0x000015fb      e9b0feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001600      ff25da782000   jmp qword [reloc.__assert_fail]         ; [0x208ee0:8]=0x1606
0x00001606      6814000000     push 0x14
0x0000160b      e9a0feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00001610      ff25d2782000   jmp qword [reloc.__strtoul_internal]    ; [0x208ee8:8]=0x1616
0x00001616      6815000000     push 0x15
0x0000161b      e990feffff     jmp sym..plt
;-- imp.memset:
0x00001620      ff25ca782000   jmp qword [reloc.memset]                ; [0x208ef0:8]=0x1626 ; "&\x16"
0x00001626      6816000000     push 0x16
0x0000162b      e980feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001630      ff25c2782000   jmp qword [reloc.posix_fadvise]         ; [0x208ef8:8]=0x1636 ; "6\x16"
0x00001636      6817000000     push 0x17
0x0000163b      e970feffff     jmp sym..plt
;-- imp.memcmp:
0x00001640      ff25ba782000   jmp qword [reloc.memcmp]                ; [0x208f00:8]=0x1646 ; "F\x16"
0x00001646      6818000000     push 0x18
0x0000164b      e960feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001650      ff25b2782000   jmp qword [reloc.fputs_unlocked]        ; [0x208f08:8]=0x1656 ; "V\x16"
0x00001656      6819000000     push 0x19
0x0000165b      e950feffff     jmp sym..plt
;-- imp.calloc:
0x00001660      ff25aa782000   jmp qword [reloc.calloc]                ; [0x208f10:8]=0x1666 ; "f\x16"
0x00001666      681a000000     push 0x1a
0x0000166b      e940feffff     jmp sym..plt
;-- imp.__memmove_chk:
0x00001670      ff25a2782000   jmp qword [reloc.__memmove_chk]         ; [0x208f18:8]=0x1676 ; "v\x16"
0x00001676      681b000000     push 0x1b
0x0000167b      e930feffff     jmp sym..plt
;-- imp.memcpy:
0x00001680      ff259a782000   jmp qword [reloc.memcpy]                ; [0x208f20:8]=0x1686
0x00001686      681c000000     push 0x1c
0x0000168b      e920feffff     jmp sym..plt
;-- imp.fileno:
0x00001690      ff2592782000   jmp qword [reloc.fileno]                ; [0x208f28:8]=0x1696
0x00001696      681d000000     push 0x1d
0x0000169b      e910feffff     jmp sym..plt
;-- imp.malloc:
0x000016a0      ff258a782000   jmp qword [reloc.malloc]                ; [0x208f30:8]=0x16a6
0x000016a6      681e000000     push 0x1e
0x000016ab      e900feffff     jmp sym..plt
;-- imp.fflush:
0x000016b0      ff2582782000   jmp qword [reloc.fflush]                ; [0x208f38:8]=0x16b6
0x000016b6      681f000000     push 0x1f
0x000016bb      e9f0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000016c0      ff257a782000   jmp qword [reloc.nl_langinfo]           ; [0x208f40:8]=0x16c6
0x000016c6      6820000000     push 0x20                               ; "@"
0x000016cb      e9e0fdffff     jmp sym..plt
;-- imp.__freading:
0x000016d0      ff2572782000   jmp qword [reloc.__freading]            ; [0x208f48:8]=0x16d6
0x000016d6      6821000000     push 0x21                               ; '!'
0x000016db      e9d0fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x000016e0      ff256a782000   jmp qword [reloc.fwrite_unlocked]       ; [0x208f50:8]=0x16e6
0x000016e6      6822000000     push 0x22                               ; '"'
0x000016eb      e9c0fdffff     jmp sym..plt
;-- imp.realloc:
0x000016f0      ff2562782000   jmp qword [reloc.realloc]               ; [0x208f58:8]=0x16f6
0x000016f6      6823000000     push 0x23                               ; '#'
0x000016fb      e9b0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001700      ff255a782000   jmp qword [reloc.setlocale]             ; [0x208f60:8]=0x1706
0x00001706      6824000000     push 0x24                               ; '$'
0x0000170b      e9a0fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001710      ff2552782000   jmp qword [reloc.__printf_chk]          ; [0x208f68:8]=0x1716
0x00001716      6825000000     push 0x25                               ; '%'
0x0000171b      e990fdffff     jmp sym..plt
;-- imp.error:
0x00001720      ff254a782000   jmp qword [reloc.error]                 ; [0x208f70:8]=0x1726 ; "&\x17"
0x00001726      6826000000     push 0x26                               ; '&'
0x0000172b      e980fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001730      ff2542782000   jmp qword [reloc.fseeko]                ; [0x208f78:8]=0x1736 ; "6\x17"
0x00001736      6827000000     push 0x27                               ; '''
0x0000173b      e970fdffff     jmp sym..plt
;-- imp.fopen:
0x00001740      ff253a782000   jmp qword [reloc.fopen]                 ; [0x208f80:8]=0x1746 ; "F\x17"
0x00001746      6828000000     push 0x28                               ; '('
0x0000174b      e960fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001750      ff2532782000   jmp qword [reloc.__cxa_atexit]          ; [0x208f88:8]=0x1756 ; "V\x17"
0x00001756      6829000000     push 0x29                               ; ')'
0x0000175b      e950fdffff     jmp sym..plt
;-- imp.exit:
0x00001760      ff252a782000   jmp qword [reloc.exit]                  ; [0x208f90:8]=0x1766 ; "f\x17"
0x00001766      682a000000     push 0x2a                               ; '*'
0x0000176b      e940fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001770      ff2522782000   jmp qword [reloc.fwrite]                ; [0x208f98:8]=0x1776 ; "v\x17"
0x00001776      682b000000     push 0x2b                               ; '+'
0x0000177b      e930fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001780      ff251a782000   jmp qword [reloc.__fprintf_chk]         ; [0x208fa0:8]=0x1786
0x00001786      682c000000     push 0x2c                               ; ','
0x0000178b      e920fdffff     jmp sym..plt
;-- imp.mbsinit:
0x00001790      ff2512782000   jmp qword [reloc.mbsinit]               ; [0x208fa8:8]=0x1796
0x00001796      682d000000     push 0x2d                               ; '-'
0x0000179b      e910fdffff     jmp sym..plt
;-- imp.iswprint:
0x000017a0      ff250a782000   jmp qword [reloc.iswprint]              ; [0x208fb0:8]=0x17a6
0x000017a6      682e000000     push 0x2e                               ; '.'
0x000017ab      e900fdffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000017b0      ff2502782000   jmp qword [reloc.__ctype_b_loc]         ; [0x208fb8:8]=0x17b6
0x000017b6      682f000000     push 0x2f                               ; '/'
0x000017bb      e9f0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000017c0      .qword 0x90660020781a25ff                              ; [13] -r-x section size 8 named .plt.got
0x000017c8      0000           add byte [rax], al
0x000017ca      0000           add byte [rax], al
0x000017cc      0000           add byte [rax], al
0x000017ce      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x000017d0      4157           push r15                                ; [14] -r-x section size 18814 named .text
0x000017d2      4156           push r14
0x000017d4      4155           push r13
0x000017d6      4154           push r12
0x000017d8      4531ed         xor r13d, r13d
0x000017db      55             push rbp
0x000017dc      53             push rbx
0x000017dd      89fd           mov ebp, edi
0x000017df      4889f3         mov rbx, rsi
0x000017e2      4883ec18       sub rsp, 0x18
0x000017e6      488b3e         mov rdi, qword [rsi]
0x000017e9      e8d21a0000     call sym.set_program_name
0x000017ee      488d35ac5500.  lea rsi, [0x00006da1]
0x000017f5      bf06000000     mov edi, 6
0x000017fa      e801ffffff     call sym.imp.setlocale
0x000017ff      488d35424a00.  lea rsi, str.usr_local_share_locale     ; 0x6248 ; "/usr/local/share/locale"
0x00001806      488d3d124a00.  lea rdi, [0x0000621f]                   ; "coreutils"
0x0000180d      e83efdffff     call sym.imp.bindtextdomain
0x00001812      488d3d064a00.  lea rdi, [0x0000621f]                   ; "coreutils"
0x00001819      e812fdffff     call sym.imp.textdomain
0x0000181e      488d3dab1900.  lea rdi, sym.close_stdout               ; 0x31d0 ; "USH\x83\xec\bH\x8b=\xab^ "
0x00001825      e816490000     call sym.atexit
0x0000182a      488d05705500.  lea rax, [0x00006da1]
0x00001831      83fd01         cmp ebp, 1
0x00001834      c605f5282100.  mov byte [obj.uniform], 0               ; [0x214130:1]=0
0x0000183b      c605ef282100.  mov byte [obj.split], 0                 ; [0x214131:1]=0
0x00001842      c605e9282100.  mov byte [obj.tagged], 0                ; [0x214132:1]=0
0x00001849      c605e3282100.  mov byte [obj.crown], 0                 ; [0x214133:1]=0
0x00001850      c705c6282100.  mov dword [obj.max_width], 0x4b         ; 'K'
                                                                       ; [0x214120:4]=0
0x0000185a      488905c72821.  mov qword [obj.prefix], rax             ; [0x214128:8]=0
0x00001861      c705b1282100.  mov dword [obj.prefix_full_length], 0   ; [0x21411c:4]=0
0x0000186b      c705a3282100.  mov dword [obj.prefix_lead_space], 0    ; [0x214118:4]=0
0x00001875      c70595282100.  mov dword [obj.prefix_length], 0        ; [0x214114:4]=0
0x0000187f      7e0d           jle 0x188e
0x00001881      488b4308       mov rax, qword [rbx + 8]
0x00001885      80382d         cmp byte [rax], 0x2d
0x00001888      0f84b3010000   je 0x1a41
0x0000188e      4c8d250b7220.  lea r12, obj.long_options               ; 0x208aa0
0x00001895      4531f6         xor r14d, r14d
0x00001898      0f1f84000000.  nop dword [rax + rax]
0x000018a0      488d15c74900.  lea rdx, str.0123456789cstuw:p:g:       ; 0x626e ; "0123456789cstuw:p:g:"
0x000018a7      4531c0         xor r8d, r8d
0x000018aa      4c89e1         mov rcx, r12
0x000018ad      4889de         mov rsi, rbx
0x000018b0      89ef           mov edi, ebp
0x000018b2      e8e9fcffff     call sym.imp.getopt_long
0x000018b7      83f8ff         cmp eax, 0xffffffff
0x000018ba      4189c7         mov r15d, eax
0x000018bd      0f84a4010000   je 0x1a67
0x000018c3      4183ff70       cmp r15d, 0x70
0x000018c7      746f           je 0x1938
0x000018c9      7e35           jle 0x1900
0x000018cb      4183ff74       cmp r15d, 0x74
0x000018cf      0f840b010000   je 0x19e0
0x000018d5      0f8ee5000000   jle 0x19c0
0x000018db      4183ff75       cmp r15d, 0x75
0x000018df      0f84cb000000   je 0x19b0
0x000018e5      4183ff77       cmp r15d, 0x77
0x000018e9      0f858f030000   jne 0x1c7e
0x000018ef      4c8b2daa7720.  mov r13, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2090a0:8]=0
0x000018f6      eba8           jmp 0x18a0
0x000018f8      0f1f84000000.  nop dword [rax + rax]
0x00001900      4181ff7effff.  cmp r15d, 0xffffff7e                    ; 4294967166
0x00001907      0f846a030000   je 0x1c77
0x0000190d      0f8eed000000   jle 0x1a00
0x00001913      4183ff63       cmp r15d, 0x63
0x00001917      0f84d3000000   je 0x19f0
0x0000191d      4183ff67       cmp r15d, 0x67
0x00001921      0f8557030000   jne 0x1c7e
0x00001927      4c8b35727720.  mov r14, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2090a0:8]=0
0x0000192e      e96dffffff     jmp 0x18a0
0x00001933      0f1f440000     nop dword [rax + rax]
0x00001938      4c8b3d617720.  mov r15, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2090a0:8]=0
0x0000193f      c705cf272100.  mov dword [obj.prefix_lead_space], 0    ; [0x214118:4]=0
0x00001949      41803f20       cmp byte [r15], 0x20
0x0000194d      751e           jne 0x196d
0x0000194f      b801000000     mov eax, 1
0x00001954      0f1f4000       nop dword [rax]
0x00001958      4983c701       add r15, 1
0x0000195c      89c2           mov edx, eax
0x0000195e      83c001         add eax, 1
0x00001961      41803f20       cmp byte [r15], 0x20
0x00001965      74f1           je 0x1958
0x00001967      8915ab272100   mov dword [obj.prefix_lead_space], edx  ; [0x214118:4]=0
0x0000196d      4c89ff         mov rdi, r15
0x00001970      4c893db12721.  mov qword [obj.prefix], r15             ; [0x214128:8]=0
0x00001977      e804fcffff     call sym.imp.strlen
0x0000197c      89059a272100   mov dword [obj.prefix_full_length], eax ; [0x21411c:4]=0
0x00001982      4898           cdqe
0x00001984      4c01f8         add rax, r15
0x00001987      4939c7         cmp r15, rax
0x0000198a      720d           jb 0x1999
0x0000198c      eb11           jmp 0x199f
0x0000198e      6690           nop
0x00001990      4883e801       sub rax, 1
0x00001994      4939c7         cmp r15, rax
0x00001997      7406           je 0x199f
0x00001999      8078ff20       cmp byte [rax - 1], 0x20
0x0000199d      74f1           je 0x1990
0x0000199f      c60000         mov byte [rax], 0
0x000019a2      4c29f8         sub rax, r15
0x000019a5      890569272100   mov dword [obj.prefix_length], eax      ; [0x214114:4]=0
0x000019ab      e9f0feffff     jmp 0x18a0
0x000019b0      c60579272100.  mov byte [obj.uniform], 1               ; [0x214130:1]=0
0x000019b7      e9e4feffff     jmp 0x18a0
0x000019bc      0f1f4000       nop dword [rax]
0x000019c0      4183ff73       cmp r15d, 0x73
0x000019c4      0f85b4020000   jne 0x1c7e
0x000019ca      c60560272100.  mov byte [obj.split], 1                 ; [0x214131:1]=0
0x000019d1      e9cafeffff     jmp 0x18a0
0x000019d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000019e0      c6054b272100.  mov byte [obj.tagged], 1                ; [0x214132:1]=0
0x000019e7      e9b4feffff     jmp 0x18a0
0x000019ec      0f1f4000       nop dword [rax]
0x000019f0      c6053c272100.  mov byte [obj.crown], 1                 ; [0x214133:1]=0
0x000019f7      e9a4feffff     jmp 0x18a0
0x000019fc      0f1f4000       nop dword [rax]
0x00001a00      4181ff7dffff.  cmp r15d, 0xffffff7d                    ; 4294967165
0x00001a07      0f8571020000   jne 0x1c7e
0x00001a0d      488b3d747620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00001a14      488b0df57520.  mov rcx, qword [obj.Version]            ; [0x209010:8]=0x681e str.8.31
0x00001a1b      4c8d053e4800.  lea r8, str.Ross_Paterson               ; 0x6260 ; "Ross Paterson"
0x00001a22      488d15f24700.  lea rdx, str.GNU_coreutils              ; 0x621b ; "GNU coreutils"
0x00001a29      488d35714700.  lea rsi, [0x000061a1]                   ; "fmt"
0x00001a30      4531c9         xor r9d, r9d
0x00001a33      31c0           xor eax, eax
0x00001a35      e8763a0000     call sym.version_etc
0x00001a3a      31ff           xor edi, edi
0x00001a3c      e81ffdffff     call sym.imp.exit
0x00001a41      0fbe5001       movsx edx, byte [rax + 1]
0x00001a45      83ea30         sub edx, 0x30
0x00001a48      83fa09         cmp edx, 9
0x00001a4b      0f873dfeffff   ja 0x188e
0x00001a51      4c8d6801       lea r13, [rax + 1]
0x00001a55      488b03         mov rax, qword [rbx]
0x00001a58      83ed01         sub ebp, 1
0x00001a5b      4883c308       add rbx, 8
0x00001a5f      488903         mov qword [rbx], rax
0x00001a62      e927feffff     jmp 0x188e
0x00001a67      4d85ed         test r13, r13
0x00001a6a      0f8443010000   je 0x1bb3
0x00001a70      488d350c4800.  lea rsi, str.invalid_width              ; 0x6283 ; "invalid width"
0x00001a77      31ff           xor edi, edi
0x00001a79      ba05000000     mov edx, 5
0x00001a7e      e8ddfaffff     call sym.imp.dcgettext
0x00001a83      488d0d175300.  lea rcx, [0x00006da1]
0x00001a8a      4531c9         xor r9d, r9d
0x00001a8d      31f6           xor esi, esi
0x00001a8f      4989c0         mov r8, rax
0x00001a92      bac4090000     mov edx, 0x9c4
0x00001a97      4c89ef         mov rdi, r13
0x00001a9a      e8013f0000     call sym.xdectoumax
0x00001a9f      4d85f6         test r14, r14
0x00001aa2      4989c4         mov r12, rax
0x00001aa5      890575262100   mov dword [obj.max_width], eax          ; [0x214120:4]=0
0x00001aab      0f8407010000   je 0x1bb8
0x00001ab1      488d35cb4700.  lea rsi, str.invalid_width              ; 0x6283 ; "invalid width"
0x00001ab8      ba05000000     mov edx, 5
0x00001abd      31ff           xor edi, edi
0x00001abf      e89cfaffff     call sym.imp.dcgettext
0x00001ac4      488d0dd65200.  lea rcx, [0x00006da1]
0x00001acb      4989c0         mov r8, rax
0x00001ace      4963d4         movsxd rdx, r12d
0x00001ad1      4531c9         xor r9d, r9d
0x00001ad4      31f6           xor esi, esi
0x00001ad6      4c89f7         mov rdi, r14
0x00001ad9      e8c23e0000     call sym.xdectoumax
0x00001ade      89052c262100   mov dword [obj.goal_width], eax         ; [0x214110:4]=0
0x00001ae4      8b05ae752000   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x209098:4]=0
0x00001aea      39e8           cmp eax, ebp
0x00001aec      0f84e3000000   je 0x1bd5
0x00001af2      41bc01000000   mov r12d, 1
0x00001af8      4c8d2d7b4d00.  lea r13, [0x0000687a]                   ; "-"
0x00001aff      4c8d35274d00.  lea r14, [0x0000682d]                   ; "r"
0x00001b06      7c28           jl 0x1b30
0x00001b08      e9da000000     jmp 0x1be7
0x00001b0d      488b3d7c7520.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x209090:8]=0
0x00001b14      e8870d0000     call sym.fmt
0x00001b19      8b0579752000   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x209098:4]=0
0x00001b1f      83c001         add eax, 1
0x00001b22      39e8           cmp eax, ebp
0x00001b24      89056e752000   mov dword [obj.optind], eax             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x209098:4]=0
0x00001b2a      0f8db7000000   jge 0x1be7
0x00001b30      4898           cdqe
0x00001b32      b902000000     mov ecx, 2
0x00001b37      4c89ef         mov rdi, r13
0x00001b3a      4c8b3cc3       mov r15, qword [rbx + rax*8]
0x00001b3e      4c89fe         mov rsi, r15
0x00001b41      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001b43      0f97c0         seta al
0x00001b46      1c00           sbb al, 0
0x00001b48      84c0           test al, al
0x00001b4a      74c1           je 0x1b0d
0x00001b4c      4c89f6         mov rsi, r14
0x00001b4f      4c89ff         mov rdi, r15
0x00001b52      e8e9fbffff     call sym.imp.fopen
0x00001b57      4885c0         test rax, rax
0x00001b5a      0f849e000000   je 0x1bfe
0x00001b60      4889c7         mov rdi, rax
0x00001b63      4889442408     mov qword [rsp + 8], rax
0x00001b68      e8330d0000     call sym.fmt
0x00001b6d      488b442408     mov rax, qword [rsp + 8]
0x00001b72      4889c7         mov rdi, rax
0x00001b75      e876420000     call sym.rpl_fclose
0x00001b7a      83c001         add eax, 1
0x00001b7d      759a           jne 0x1b19
0x00001b7f      4c89fa         mov rdx, r15
0x00001b82      be03000000     mov esi, 3
0x00001b87      31ff           xor edi, edi
0x00001b89      e872320000     call sym.quotearg_n_style_colon
0x00001b8e      4989c4         mov r12, rax
0x00001b91      e85af9ffff     call sym.imp.__errno_location
0x00001b96      488d15964c00.  lea rdx, [0x00006833]                   ; "%s"
0x00001b9d      4c89e1         mov rcx, r12
0x00001ba0      8b30           mov esi, dword [rax]
0x00001ba2      31ff           xor edi, edi
0x00001ba4      31c0           xor eax, eax
0x00001ba6      4531e4         xor r12d, r12d
0x00001ba9      e872fbffff     call sym.imp.error
0x00001bae      e966ffffff     jmp 0x1b19
0x00001bb3      4d85f6         test r14, r14
0x00001bb6      757c           jne 0x1c34
0x00001bb8      69055e252100.  imul eax, dword [obj.max_width], 0xbb
0x00001bc2      b9c8000000     mov ecx, 0xc8
0x00001bc7      99             cdq
0x00001bc8      f7f9           idiv ecx
0x00001bca      890540252100   mov dword [obj.goal_width], eax         ; [0x214110:4]=0
0x00001bd0      e90fffffff     jmp 0x1ae4
0x00001bd5      488b3db47420.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x209090:8]=0
0x00001bdc      41bc01000000   mov r12d, 1
0x00001be2      e8b90c0000     call sym.fmt
0x00001be7      4883c418       add rsp, 0x18
0x00001beb      4183f401       xor r12d, 1
0x00001bef      5b             pop rbx
0x00001bf0      410fb6c4       movzx eax, r12b
0x00001bf4      5d             pop rbp
0x00001bf5      415c           pop r12
0x00001bf7      415d           pop r13
0x00001bf9      415e           pop r14
0x00001bfb      415f           pop r15
0x00001bfd      c3             ret
0x00001bfe      4c89fe         mov rsi, r15
0x00001c01      bf04000000     mov edi, 4
0x00001c06      e8f5300000     call sym.quotearg_style
0x00001c0b      488d357f4600.  lea rsi, str.cannot_open__s_for_reading ; 0x6291 ; "cannot open %s for reading"
0x00001c12      ba05000000     mov edx, 5
0x00001c17      31ff           xor edi, edi
0x00001c19      4989c7         mov r15, rax
0x00001c1c      e83ff9ffff     call sym.imp.dcgettext
0x00001c21      4989c4         mov r12, rax
0x00001c24      e8c7f8ffff     call sym.imp.__errno_location
0x00001c29      4c89f9         mov rcx, r15
0x00001c2c      4c89e2         mov rdx, r12
0x00001c2f      e96cffffff     jmp 0x1ba0
0x00001c34      488d35484600.  lea rsi, str.invalid_width              ; 0x6283 ; "invalid width"
0x00001c3b      ba05000000     mov edx, 5
0x00001c40      31ff           xor edi, edi
0x00001c42      e819f9ffff     call sym.imp.dcgettext
0x00001c47      488d0d535100.  lea rcx, [0x00006da1]
0x00001c4e      4989c0         mov r8, rax
0x00001c51      4531c9         xor r9d, r9d
0x00001c54      ba4b000000     mov edx, 0x4b                           ; 'K'
0x00001c59      31f6           xor esi, esi
0x00001c5b      4c89f7         mov rdi, r14
0x00001c5e      e83d3d0000     call sym.xdectoumax
0x00001c63      8905a7242100   mov dword [obj.goal_width], eax         ; [0x214110:4]=0
0x00001c69      83c00a         add eax, 0xa
0x00001c6c      8905ae242100   mov dword [obj.max_width], eax          ; [0x214120:4]=0
0x00001c72      e96dfeffff     jmp 0x1ae4
0x00001c77      31ff           xor edi, edi
0x00001c79      e852110000     call sym.usage
0x00001c7e      418d47d0       lea eax, [r15 - 0x30]
0x00001c82      83f809         cmp eax, 9
0x00001c85      760a           jbe 0x1c91
0x00001c87      bf01000000     mov edi, 1
0x00001c8c      e83f110000     call sym.usage
0x00001c91      488d35184b00.  lea rsi, str.invalid_option_____c___WIDTH_is_recognized_only_when_it_is_the_first__option__use__w_N_instead ; 0x67b0 ; "invalid option -- %c; -WIDTH is recognized only when it is the first\noption; use -w N instead"
0x00001c98      31ff           xor edi, edi
0x00001c9a      ba05000000     mov edx, 5
0x00001c9f      e8bcf8ffff     call sym.imp.dcgettext
0x00001ca4      4489f9         mov ecx, r15d
0x00001ca7      4889c2         mov rdx, rax
0x00001caa      31f6           xor esi, esi
0x00001cac      31ff           xor edi, edi
0x00001cae      31c0           xor eax, eax
0x00001cb0      e86bfaffff     call sym.imp.error
0x00001cb5      ebd0           jmp 0x1c87
0x00001cb7      660f1f840000.  nop word [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00001cc0      31ed           xor ebp, ebp
0x00001cc2      4989d1         mov r9, rdx
0x00001cc5      5e             pop rsi
0x00001cc6      4889e2         mov rdx, rsp
0x00001cc9      4883e4f0       and rsp, 0xfffffffffffffff0
0x00001ccd      50             push rax
0x00001cce      54             push rsp
0x00001ccf      4c8d055a4400.  lea r8, sym.__libc_csu_fini             ; 0x6130
0x00001cd6      488d0de34300.  lea rcx, sym.__libc_csu_init            ; 0x60c0 ; "AWAVI\x89\xd7AUATL\x8d%\xbe) "
0x00001cdd      488d3decfaff.  lea rdi, main                           ; sym.main
                                                                       ; 0x17d0 ; "AWAVAUATE1\xedUS\x89\xfdH\x89\xf3H\x83\xec\x18H\x8b>\xe8\xd2\x1a"
0x00001ce4      ff15de722000   call qword [reloc.__libc_start_main]    ; [0x208fc8:8]=0
0x00001cea      f4             hlt
0x00001ceb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001cf0      488d3d897320.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x209080
0x00001cf7      55             push rbp
0x00001cf8      488d05817320.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x209080
0x00001cff      4839f8         cmp rax, rdi
0x00001d02      4889e5         mov rbp, rsp
0x00001d05      7419           je 0x1d20
0x00001d07      488b05b27220.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x208fc0:8]=0
0x00001d0e      4885c0         test rax, rax
0x00001d11      740d           je 0x1d20
0x00001d13      5d             pop rbp
0x00001d14      ffe0           jmp rax
0x00001d16      662e0f1f8400.  nop word cs:[rax + rax]
0x00001d20      5d             pop rbp
0x00001d21      c3             ret
0x00001d22      0f1f4000       nop dword [rax]
0x00001d26      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001d30      488d3d497320.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x209080
0x00001d37      488d35427320.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x209080
0x00001d3e      55             push rbp
0x00001d3f      4829fe         sub rsi, rdi
0x00001d42      4889e5         mov rbp, rsp
0x00001d45      48c1fe03       sar rsi, 3
0x00001d49      4889f0         mov rax, rsi
0x00001d4c      48c1e83f       shr rax, 0x3f
0x00001d50      4801c6         add rsi, rax
0x00001d53      48d1fe         sar rsi, 1
0x00001d56      7418           je 0x1d70
0x00001d58      488b05797220.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x208fd8:8]=0
0x00001d5f      4885c0         test rax, rax
0x00001d62      740c           je 0x1d70
0x00001d64      5d             pop rbp
0x00001d65      ffe0           jmp rax
0x00001d67      660f1f840000.  nop word [rax + rax]
0x00001d70      5d             pop rbp
0x00001d71      c3             ret
0x00001d72      0f1f4000       nop dword [rax]
0x00001d76      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00001d80      803d41732000.  cmp byte [obj.completed.7697], 0        ; [0x2090c8:1]=0
0x00001d87      752f           jne 0x1db8
0x00001d89      48833d4f7220.  cmp qword [reloc.__cxa_finalize], 0     ; [0x208fe0:8]=0
0x00001d91      55             push rbp
0x00001d92      4889e5         mov rbp, rsp
0x00001d95      740c           je 0x1da3
0x00001d97      488b3d6a7220.  mov rdi, qword [obj.__dso_handle]       ; [0x209008:8]=0x209008 obj.__dso_handle
0x00001d9e      e81dfaffff     call sym..plt.got
0x00001da3      e848ffffff     call sym.deregister_tm_clones
0x00001da8      c60519732000.  mov byte [obj.completed.7697], 1        ; [0x2090c8:1]=0
0x00001daf      5d             pop rbp
0x00001db0      c3             ret
0x00001db1      0f1f80000000.  nop dword [rax]
0x00001db8      f3c3           ret
0x00001dba      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00001dc0      55             push rbp
0x00001dc1      4889e5         mov rbp, rsp
0x00001dc4      5d             pop rbp
0x00001dc5      e966ffffff     jmp sym.register_tm_clones
0x00001dca      660f1f440000   nop word [rax + rax]
;-- fmt_paragraph:
0x00001dd0      488b35297320.  mov rsi, qword [obj.word_limit]         ; /src:849 ; [0x209100:8]=0
0x00001dd7      4157           push r15
0x00001dd9      4c8d05407320.  lea r8, obj.unused_word_type            ; /src:859 ; 0x209120
0x00001de0      4156           push r14                                ; /src:849
0x00001de2      448b0d372321.  mov r9d, dword [obj.max_width]          ; /src:857 ; [0x214120:4]=0
0x00001de9      4155           push r13                                ; /src:849
0x00001deb      4154           push r12
0x00001ded      488d4ed8       lea rcx, [rsi - 0x28]                   ; /src:859
0x00001df1      55             push rbp                                ; /src:849
0x00001df2      53             push rbx
0x00001df3      8b4608         mov eax, dword [rsi + 8]                ; /src:856
0x00001df6      48c746180000.  mov qword [rsi + 0x18], 0               ; /src:855
0x00001dfe      4c39c1         cmp rcx, r8                             ; /src:859
0x00001e01      44894e08       mov dword [rsi + 8], r9d                ; /src:857
0x00001e05      894424fc       mov dword [rsp - 4], eax                ; /src:856
0x00001e09      0f8236010000   jb 0x1f45                               ; /src:859
0x00001e0f      448b2dd67220.  mov r13d, dword [obj.other_indent]      ; /src:862 ; [0x2090ec:4]=0
0x00001e16      448b25d37220.  mov r12d, dword [obj.first_indent]      ; [0x2090f0:4]=0
0x00001e1d      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; /src:861 ; 9223372036854775807
0x00001e27      448b15e22221.  mov r10d, dword [obj.goal_width]        ; [0x214110:4]=0
0x00001e2e      8b1dac722000   mov ebx, dword [obj.last_line_length]   ; [0x2090e0:4]=0
0x00001e34      0f1f4000       nop dword [rax]
0x00001e38      448b5908       mov r11d, dword [rcx + 8]
0x00001e3c      4c39c1         cmp rcx, r8
0x00001e3f      4589ef         mov r15d, r13d
0x00001e42      450f44fc       cmove r15d, r12d
0x00001e46      4889ca         mov rdx, rcx
0x00001e49      4889ef         mov rdi, rbp
0x00001e4c      4501df         add r15d, r11d
0x00001e4f      eb2a           jmp 0x1e7b
0x00001e51      0f1f80000000.  nop dword [rax]
0x00001e58      4839f8         cmp rax, rdi
0x00001e5b      7d0b           jge 0x1e68                              ; /src:818
0x00001e5d      48895120       mov qword [rcx + 0x20], rdx
0x00001e61      44897914       mov dword [rcx + 0x14], r15d
0x00001e65      4889c7         mov rdi, rax
0x00001e68      4839d6         cmp rsi, rdx
0x00001e6b      747b           je 0x1ee8                               ; /src:829
0x00001e6d      8b4208         mov eax, dword [rdx + 8]
0x00001e70      0342e4         add eax, dword [rdx - 0x1c]
0x00001e73      4101c7         add r15d, eax
0x00001e76      4539f9         cmp r9d, r15d
0x00001e79      7e6d           jle 0x1ee8                              ; /src:808
0x00001e7b      4883c228       add rdx, 0x28
0x00001e7f      31c0           xor eax, eax
0x00001e81      4839d6         cmp rsi, rdx
0x00001e84      7432           je 0x1eb8                               ; /src:756
0x00001e86      4489d0         mov eax, r10d
0x00001e89      4429f8         sub eax, r15d
0x00001e8c      8d0480         lea eax, [rax + rax*4]
0x00001e8f      01c0           add eax, eax                            ; /src:757
0x00001e91      4898           cdqe
0x00001e93      480fafc0       imul rax, rax
0x00001e97      483b7220       cmp rsi, qword [rdx + 0x20]
0x00001e9b      741b           je 0x1eb8
0x00001e9d      4589fe         mov r14d, r15d
0x00001ea0      442b7214       sub r14d, dword [rdx + 0x14]
0x00001ea4      478d34b6       lea r14d, [r14 + r14*4]
0x00001ea8      4501f6         add r14d, r14d
0x00001eab      4d63f6         movsxd r14, r14d
0x00001eae      4d0faff6       imul r14, r14
0x00001eb2      49d1fe         sar r14, 1
0x00001eb5      4c01f0         add rax, r14
0x00001eb8      48034218       add rax, qword [rdx + 0x18]
0x00001ebc      4c39c1         cmp rcx, r8
0x00001ebf      7597           jne 0x1e58
0x00001ec1      85db           test ebx, ebx
0x00001ec3      7e93           jle 0x1e58
0x00001ec5      4589fe         mov r14d, r15d
0x00001ec8      4129de         sub r14d, ebx
0x00001ecb      478d34b6       lea r14d, [r14 + r14*4]
0x00001ecf      4501f6         add r14d, r14d
0x00001ed2      4d63f6         movsxd r14, r14d
0x00001ed5      4d0faff6       imul r14, r14
0x00001ed9      49d1fe         sar r14, 1
0x00001edc      4c01f0         add rax, r14
0x00001edf      e974ffffff     jmp 0x1e58
0x00001ee4      0f1f4000       nop dword [rax]
0x00001ee8      4c39c1         cmp rcx, r8
0x00001eeb      41be24130000   mov r14d, 0x1324                        ; /src:723
0x00001ef1      761e           jbe 0x1f11
0x00001ef3      0fb641e8       movzx eax, byte [rcx - 0x18]            ; /src:725
0x00001ef7      a802           test al, 2
0x00001ef9      7475           je 0x1f70
0x00001efb      83e008         and eax, 8
0x00001efe      3c01           cmp al, 1
0x00001f00      4d19f6         sbb r14, r14
0x00001f03      4181e6048805.  and r14d, 0x58804
0x00001f0a      4981c6600900.  add r14, 0x960
0x00001f11      0fb64110       movzx eax, byte [rcx + 0x10]            ; /src:738
0x00001f15      a801           test al, 1                              ; /src:739
0x00001f17      7547           jne 0x1f60
0x00001f19      a808           test al, 8
0x00001f1b      7414           je 0x1f31
0x00001f1d      b8e4570000     mov eax, 0x57e4
0x00001f22      4183c302       add r11d, 2
0x00001f26      4d63db         movsxd r11, r11d
0x00001f29      4899           cqo                                     ; /src:705
0x00001f2b      49f7fb         idiv r11
0x00001f2e      4901c6         add r14, rax
0x00001f31      4c01f7         add rdi, r14
0x00001f34      4883e928       sub rcx, 0x28                           ; /src:670
0x00001f38      48897940       mov qword [rcx + 0x40], rdi
0x00001f3c      4c39c1         cmp rcx, r8
0x00001f3f      0f83f3feffff   jae 0x1e38
0x00001f45      8b4424fc       mov eax, dword [rsp - 4]
0x00001f49      894608         mov dword [rsi + 8], eax
0x00001f4c      5b             pop rbx
0x00001f4d      5d             pop rbp
0x00001f4e      415c           pop r12
0x00001f50      415d           pop r13
0x00001f52      415e           pop r14
0x00001f54      415f           pop r15
0x00001f56      c3             ret
0x00001f57      660f1f840000.  nop word [rax + rax]
0x00001f60      4981ee400600.  sub r14, 0x640
0x00001f67      ebc8           jmp 0x1f31
0x00001f69      0f1f80000000.  nop dword [rax]
0x00001f70      a804           test al, 4                              ; /src:730
0x00001f72      41bee40c0000   mov r14d, 0xce4                         ; /src:732
0x00001f78      7597           jne 0x1f11
0x00001f7a      488d05c77120.  lea rax, [0x00209148]
0x00001f81      41be24130000   mov r14d, 0x1324
0x00001f87      4839c1         cmp rcx, rax
0x00001f8a      7685           jbe 0x1f11
0x00001f8c      f641c008       test byte [rcx - 0x40], 8
0x00001f90      0f847bffffff   je 0x1f11
0x00001f96      8b41e0         mov eax, dword [rcx - 0x20]
0x00001f99      448d7002       lea r14d, [rax + 2]
0x00001f9d      b8409c0000     mov eax, 0x9c40
0x00001fa2      4899           cqo
0x00001fa4      4d63f6         movsxd r14, r14d
0x00001fa7      49f7fe         idiv r14
0x00001faa      4c8db0241300.  lea r14, [rax + 0x1324]
0x00001fb1      e95bffffff     jmp 0x1f11
0x00001fb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_space:
0x00001fc0      53             push rbx
0x00001fc1      89f0           mov eax, esi
0x00001fc3      4889fb         mov rbx, rdi
0x00001fc6      eb47           jmp 0x200f
0x00001fc8      0f1f84000000.  nop dword [rax + rax]                   ; /src:564
0x00001fd0      83f809         cmp eax, 9
0x00001fd3      755b           jne 0x2030                              ; /src:566
0x00001fd5      8b1531212100   mov edx, dword [obj.in_column]          ; [0x21410c:4]=0
0x00001fdb      c60516712000.  mov byte [obj.tabs], 1                  ; [0x2090f8:1]=0
0x00001fe2      8d4207         lea eax, [rdx + 7]
0x00001fe5      85d2           test edx, edx
0x00001fe7      0f49c2         cmovns eax, edx
0x00001fea      c1f803         sar eax, 3
0x00001fed      8d04c5080000.  lea eax, [rax*8 + 8]
0x00001ff4      890512212100   mov dword [obj.in_column], eax          ; [0x21410c:4]=0
0x00001ffa      488b4308       mov rax, qword [rbx + 8]
0x00001ffe      483b4310       cmp rax, qword [rbx + 0x10]
0x00002002      7321           jae 0x2025
0x00002004      488d5001       lea rdx, [rax + 1]
0x00002008      48895308       mov qword [rbx + 8], rdx
0x0000200c      0fb600         movzx eax, byte [rax]                   ; /src:563
0x0000200f      83f820         cmp eax, 0x20                           ; "@"
0x00002012      75bc           jne 0x1fd0
0x00002014      8305f1202100.  add dword [obj.in_column], 1            ; [0x21410c:4]=0
0x0000201b      488b4308       mov rax, qword [rbx + 8]
0x0000201f      483b4310       cmp rax, qword [rbx + 0x10]
0x00002023      72df           jb 0x2004
0x00002025      4889df         mov rdi, rbx
0x00002028      e893f4ffff     call sym.imp.__uflow                    ; /src:573
0x0000202d      ebe0           jmp 0x200f
0x0000202f      90             nop
0x00002030      5b             pop rbx
0x00002031      c3             ret
0x00002032      0f1f4000       nop dword [rax]
0x00002036      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_prefix:
0x00002040      55             push rbp
0x00002041      53             push rbx                                ; /coreutils-8.31/lib:-124
0x00002042      4889fb         mov rbx, rdi
0x00002045      4883ec08       sub rsp, 8
0x00002049      488b4708       mov rax, qword [rdi + 8]                ; /src:532
0x0000204d      483b4710       cmp rax, qword [rdi + 0x10]
0x00002051      c705b1202100.  mov dword [obj.in_column], 0            ; [0x21410c:4]=0
0x0000205b      0f83bf000000   jae 0x2120
0x00002061      488d5001       lea rdx, [rax + 1]
0x00002065      48895708       mov qword [rdi + 8], rdx
0x00002069      0fb630         movzx esi, byte [rax]
0x0000206c      4889df         mov rdi, rbx                            ; /src:534
0x0000206f      e84cffffff     call sym.get_space
0x00002074      8b159a202100   mov edx, dword [obj.prefix_length]      ; [0x214114:4]=0
0x0000207a      85d2           test edx, edx                           ; /src:541
0x0000207c      0f847e000000   je 0x2100
0x00002082      488b2d9f2021.  mov rbp, qword [obj.prefix]             ; [0x214128:8]=0
0x00002089      8b157d202100   mov edx, dword [obj.in_column]          ; [0x21410c:4]=0
0x0000208f      0fb64d00       movzx ecx, byte [rbp]
0x00002093      89154b702000   mov dword [obj.next_prefix_indent], edx ; [0x2090e4:4]=0
0x00002099      84c9           test cl, cl
0x0000209b      7453           je 0x20f0
0x0000209d      39c8           cmp eax, ecx
0x0000209f      7428           je 0x20c9
0x000020a1      eb76           jmp 0x2119
0x000020a3      0f1f440000     nop dword [rax + rax]
0x000020a8      488d5001       lea rdx, [rax + 1]                      ; /coreutils-8.31/lib:-124
0x000020ac      4883c501       add rbp, 1                              ; /src:541
0x000020b0      48895308       mov qword [rbx + 8], rdx                ; /coreutils-8.31/lib:-124
0x000020b4      0fb65500       movzx edx, byte [rbp]
0x000020b8      0fb600         movzx eax, byte [rax]
0x000020bb      84d2           test dl, dl
0x000020bd      7431           je 0x20f0
0x000020bf      39c2           cmp edx, eax
0x000020c1      7556           jne 0x2119                              ; /src:546
0x000020c3      8b1543202100   mov edx, dword [obj.in_column]          ; [0x21410c:4]=0
0x000020c9      83c201         add edx, 1
0x000020cc      488b4308       mov rax, qword [rbx + 8]
0x000020d0      483b4310       cmp rax, qword [rbx + 0x10]
0x000020d4      891532202100   mov dword [obj.in_column], edx          ; /src:541 ; [0x21410c:4]=0
0x000020da      72cc           jb 0x20a8
0x000020dc      4883c501       add rbp, 1
0x000020e0      4889df         mov rdi, rbx
0x000020e3      e8d8f3ffff     call sym.imp.__uflow
0x000020e8      0fb65500       movzx edx, byte [rbp]                   ; /src:552
0x000020ec      84d2           test dl, dl                             ; /src:549
0x000020ee      75cf           jne 0x20bf
0x000020f0      4883c408       add rsp, 8
0x000020f4      4889df         mov rdi, rbx
0x000020f7      89c6           mov esi, eax
0x000020f9      5b             pop rbx
0x000020fa      5d             pop rbp
0x000020fb      e9c0feffff     jmp sym.get_space
0x00002100      8b1512202100   mov edx, dword [obj.prefix_lead_space]  ; [0x214118:4]=0
0x00002106      391500202100   cmp dword [obj.in_column], edx          ; [0x21410c:4]=0
0x0000210c      0f4e15f91f21.  cmovle edx, dword [obj.in_column]
0x00002113      8915cb6f2000   mov dword [obj.next_prefix_indent], edx ; [0x2090e4:4]=0
0x00002119      4883c408       add rsp, 8
0x0000211d      5b             pop rbx
0x0000211e      5d             pop rbp
0x0000211f      c3             ret
0x00002120      e89bf3ffff     call sym.imp.__uflow
0x00002125      89c6           mov esi, eax
0x00002127      e940ffffff     jmp 0x206c
0x0000212c      0f1f4000       nop dword [rax]
;-- put_space:
0x00002130      55             push rbp
0x00002131      53             push rbx
0x00002132      4883ec08       sub rsp, 8
0x00002136      803dbb6f2000.  cmp byte [obj.tabs], 0                  ; [0x2090f8:1]=0
0x0000213d      8b15c51f2100   mov edx, dword [obj.out_column]         ; [0x214108:4]=0
0x00002143      8d1c3a         lea ebx, [rdx + rdi]
0x00002146      7465           je 0x21ad
0x00002148      8d6b07         lea ebp, [rbx + 7]                      ; /src:827
0x0000214b      85db           test ebx, ebx
0x0000214d      8d4a01         lea ecx, [rdx + 1]
0x00002150      0f49eb         cmovns ebp, ebx
0x00002153      c1fd03         sar ebp, 3
0x00002156      8d04ed000000.  lea eax, [rbp*8]
0x0000215d      39c1           cmp ecx, eax
0x0000215f      7d4c           jge 0x21ad
0x00002161      39c2           cmp edx, eax
0x00002163      7d48           jge 0x21ad
0x00002165      0f1f00         nop dword [rax]
0x00002168      488b3d196f20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x0000216f      488b4728       mov rax, qword [rdi + 0x28]
0x00002173      483b4730       cmp rax, qword [rdi + 0x30]
0x00002177      0f8383000000   jae 0x2200
0x0000217d      488d5001       lea rdx, [rax + 1]
0x00002181      48895728       mov qword [rdi + 0x28], rdx
0x00002185      c60009         mov byte [rax], 9
0x00002188      8b157a1f2100   mov edx, dword [obj.out_column]         ; [0x214108:4]=0
0x0000218e      8d4207         lea eax, [rdx + 7]
0x00002191      85d2           test edx, edx
0x00002193      0f49c2         cmovns eax, edx
0x00002196      c1f803         sar eax, 3
0x00002199      83c001         add eax, 1
0x0000219c      8d14c5000000.  lea edx, [rax*8]
0x000021a3      39c5           cmp ebp, eax                            ; /src:829
0x000021a5      89155d1f2100   mov dword [obj.out_column], edx         ; /src:835 ; [0x214108:4]=0
0x000021ab      7fbb           jg 0x2168
0x000021ad      39d3           cmp ebx, edx
0x000021af      7e36           jle 0x21e7
0x000021b1      0f1f80000000.  nop dword [rax]
0x000021b8      488b3dc96e20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x000021bf      488b4728       mov rax, qword [rdi + 0x28]
0x000021c3      483b4730       cmp rax, qword [rdi + 0x30]
0x000021c7      7327           jae 0x21f0
0x000021c9      488d5001       lea rdx, [rax + 1]
0x000021cd      48895728       mov qword [rdi + 0x28], rdx
0x000021d1      c60020         mov byte [rax], 0x20                    ; [0x20:1]=64 ; "@"
0x000021d4      8b052e1f2100   mov eax, dword [obj.out_column]         ; [0x214108:4]=0
0x000021da      83c001         add eax, 1
0x000021dd      39d8           cmp eax, ebx
0x000021df      8905231f2100   mov dword [obj.out_column], eax         ; /src:840 ; [0x214108:4]=0
0x000021e5      7cd1           jl 0x21b8
0x000021e7      4883c408       add rsp, 8
0x000021eb      5b             pop rbx
0x000021ec      5d             pop rbp
0x000021ed      c3             ret
0x000021ee      6690           nop
0x000021f0      be20000000     mov esi, 0x20                           ; "@"
0x000021f5      e8d6f3ffff     call sym.imp.__overflow
0x000021fa      ebd8           jmp 0x21d4
0x000021fc      0f1f4000       nop dword [rax]
0x00002200      be09000000     mov esi, 9
0x00002205      e8c6f3ffff     call sym.imp.__overflow
0x0000220a      e979ffffff     jmp 0x2188
0x0000220f      90             nop
;-- set_other_indent:
0x00002210      803d1a1f2100.  cmp byte [obj.split], 0                 ; [0x214131:1]=0
0x00002217      754f           jne 0x2268
0x00002219      803d131f2100.  cmp byte [obj.crown], 0                 ; [0x214133:1]=0
0x00002220      741e           je 0x2240
0x00002222      4084ff         test dil, dil
0x00002225      8b05e11e2100   mov eax, dword [obj.in_column]          ; [0x21410c:4]=0
0x0000222b      0f4405be6e20.  cmove eax, dword [obj.first_indent]
0x00002232      8905b46e2000   mov dword [obj.other_indent], eax       ; [0x2090ec:4]=0
0x00002238      c3             ret                                     ; /src:312
0x00002239      0f1f80000000.  nop dword [rax]
0x00002240      803deb1e2100.  cmp byte [obj.tagged], 0                ; [0x214132:1]=0
0x00002247      8b05a36e2000   mov eax, dword [obj.first_indent]       ; /src:314 ; [0x2090f0:4]=0
0x0000224d      7429           je 0x2278
0x0000224f      4084ff         test dil, dil
0x00002252      742c           je 0x2280
0x00002254      8b15b21e2100   mov edx, dword [obj.in_column]          ; [0x21410c:4]=0
0x0000225a      39c2           cmp edx, eax
0x0000225c      7422           je 0x2280
0x0000225e      8915886e2000   mov dword [obj.other_indent], edx       ; [0x2090ec:4]=0
0x00002264      c3             ret
0x00002265      0f1f00         nop dword [rax]
0x00002268      8b05826e2000   mov eax, dword [obj.first_indent]       ; [0x2090f0:4]=0
0x0000226e      8905786e2000   mov dword [obj.other_indent], eax       ; [0x2090ec:4]=0
0x00002274      c3             ret
0x00002275      0f1f00         nop dword [rax]
0x00002278      89056e6e2000   mov dword [obj.other_indent], eax       ; /src:324 ; [0x2090ec:4]=0
0x0000227e      f3c3           ret
0x00002280      3905666e2000   cmp dword [obj.other_indent], eax       ; /src:325 ; [0x2090ec:4]=0
0x00002286      75f6           jne 0x227e
0x00002288      83f801         cmp eax, 1
0x0000228b      19c0           sbb eax, eax
0x0000228d      83e003         and eax, 3
0x00002290      8905566e2000   mov dword [obj.other_indent], eax       ; [0x2090ec:4]=0
0x00002296      c3             ret
0x00002297      660f1f840000.  nop word [rax + rax]
;-- put_word.isra.1:
0x000022a0      8b06           mov eax, dword [rsi]
0x000022a2      85c0           test eax, eax
0x000022a4      746a           je 0x2310
0x000022a6      83e801         sub eax, 1
0x000022a9      4154           push r12
0x000022ab      55             push rbp
0x000022ac      488d6c0701     lea rbp, [rdi + rax + 1]
0x000022b1      53             push rbx
0x000022b2      4989f4         mov r12, rsi
0x000022b5      4889fb         mov rbx, rdi
0x000022b8      0f1f84000000.  nop dword [rax + rax]                   ; /coreutils-8.31/lib:-82
0x000022c0      488b3dc16d20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x000022c7      4883c301       add rbx, 1
0x000022cb      0fb673ff       movzx esi, byte [rbx - 1]
0x000022cf      488b4728       mov rax, qword [rdi + 0x28]
0x000022d3      483b4730       cmp rax, qword [rdi + 0x30]
0x000022d7      7327           jae 0x2300
0x000022d9      488d5001       lea rdx, [rax + 1]
0x000022dd      48895728       mov qword [rdi + 0x28], rdx
0x000022e1      408830         mov byte [rax], sil
0x000022e4      4839eb         cmp rbx, rbp
0x000022e7      75d7           jne 0x22c0
0x000022e9      418b0424       mov eax, dword [r12]
0x000022ed      0105151e2100   add dword [obj.out_column], eax         ; [0x214108:4]=0
0x000022f3      5b             pop rbx
0x000022f4      5d             pop rbp
0x000022f5      415c           pop r12
0x000022f7      c3             ret
0x000022f8      0f1f84000000.  nop dword [rax + rax]
0x00002300      e8cbf2ffff     call sym.imp.__overflow
0x00002305      ebdd           jmp 0x22e4
0x00002307      660f1f840000.  nop word [rax + rax]
0x00002310      0105f21d2100   add dword [obj.out_column], eax         ; [0x214108:4]=0
0x00002316      c3             ret
0x00002317      660f1f840000.  nop word [rax + rax]
;-- put_line:
0x00002320      4155           push r13
0x00002322      4154           push r12
0x00002324      4989fc         mov r12, rdi
0x00002327      55             push rbp                                ; /src:787
0x00002328      53             push rbx
0x00002329      89f3           mov ebx, esi
0x0000232b      4883ec08       sub rsp, 8
0x0000232f      8b3dbf6d2000   mov edi, dword [obj.prefix_indent]      ; [0x2090f4:4]=0
0x00002335      c705c91d2100.  mov dword [obj.out_column], 0           ; [0x214108:4]=0
0x0000233f      e8ecfdffff     call sym.put_space
0x00002344      488b353d6d20.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x0000234b      488b3dd61d21.  mov rdi, qword [obj.prefix]             ; [0x214128:8]=0
0x00002352      e8f9f2ffff     call sym.imp.fputs_unlocked
0x00002357      8b05b71d2100   mov eax, dword [obj.prefix_length]      ; [0x214114:4]=0
0x0000235d      0305a51d2100   add eax, dword [obj.out_column]         ; /src:789 ; [0x214108:4]=0
0x00002363      29c3           sub ebx, eax                            ; /src:790
0x00002365      89059d1d2100   mov dword [obj.out_column], eax         ; [0x214108:4]=0
0x0000236b      89df           mov edi, ebx
0x0000236d      e8befdffff     call sym.put_space
0x00002372      498b442420     mov rax, qword [r12 + 0x20]
0x00002377      4883e828       sub rax, 0x28
0x0000237b      4939c4         cmp r12, rax
0x0000237e      7466           je 0x23e6
0x00002380      498d542428     lea rdx, [r12 + 0x28]
0x00002385      498d5c2408     lea rbx, [r12 + 8]
0x0000238a      4829d0         sub rax, rdx
0x0000238d      4889c5         mov rbp, rax
0x00002390      48b8cdcccccc.  movabs rax, 0xccccccccccccccd
0x0000239a      48c1ed03       shr rbp, 3
0x0000239e      480fafe8       imul rbp, rax
0x000023a2      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; 2305843009213693951
0x000023ac      4821c5         and rbp, rax
0x000023af      488d44ad00     lea rax, [rbp + rbp*4]
0x000023b4      4d8d6cc430     lea r13, [r12 + rax*8 + 0x30]
0x000023b9      0f1f80000000.  nop dword [rax]
0x000023c0      488b7bf8       mov rdi, qword [rbx - 8]
0x000023c4      4889de         mov rsi, rbx
0x000023c7      4883c328       add rbx, 0x28
0x000023cb      e8d0feffff     call sym.put_word.isra.1
0x000023d0      8b7bdc         mov edi, dword [rbx - 0x24]             ; /src:793
0x000023d3      e858fdffff     call sym.put_space
0x000023d8      4c39eb         cmp rbx, r13
0x000023db      75e3           jne 0x23c0
0x000023dd      488d44ad05     lea rax, [rbp + rbp*4 + 5]
0x000023e2      498d04c4       lea rax, [r12 + rax*8]
0x000023e6      488b38         mov rdi, qword [rax]
0x000023e9      488d7008       lea rsi, [rax + 8]
0x000023ed      e8aefeffff     call sym.put_word.isra.1
0x000023f2      8b05101d2100   mov eax, dword [obj.out_column]         ; [0x214108:4]=0
0x000023f8      488b3d896c20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x000023ff      8905db6c2000   mov dword [obj.last_line_length], eax   ; [0x2090e0:4]=0
0x00002405      488b4728       mov rax, qword [rdi + 0x28]
0x00002409      483b4730       cmp rax, qword [rdi + 0x30]
0x0000240d      7319           jae 0x2428
0x0000240f      488d5001       lea rdx, [rax + 1]
0x00002413      48895728       mov qword [rdi + 0x28], rdx
0x00002417      c6000a         mov byte [rax], 0xa
0x0000241a      4883c408       add rsp, 8
0x0000241e      5b             pop rbx
0x0000241f      5d             pop rbp
0x00002420      415c           pop r12
0x00002422      415d           pop r13
0x00002424      c3             ret                                     ; /coreutils-8.31/lib:-82
0x00002425      0f1f00         nop dword [rax]
0x00002428      4883c408       add rsp, 8
0x0000242c      be0a000000     mov esi, 0xa
0x00002431      5b             pop rbx
0x00002432      5d             pop rbp
0x00002433      415c           pop r12
0x00002435      415d           pop r13
0x00002437      e994f1ffff     jmp sym.imp.__overflow
0x0000243c      0f1f4000       nop dword [rax]
;-- put_paragraph:
0x00002440      55             push rbp
0x00002441      53             push rbx
0x00002442      4889fd         mov rbp, rdi
0x00002445      488d3dd46c20.  lea rdi, obj.unused_word_type           ; 0x209120
0x0000244c      4883ec08       sub rsp, 8
0x00002450      8b359a6c2000   mov esi, dword [obj.first_indent]       ; [0x2090f0:4]=0
0x00002456      e8c5feffff     call sym.put_line
0x0000245b      488b1dde6c20.  mov rbx, qword [0x00209140]             ; [0x209140:8]=0
0x00002462      4839eb         cmp rbx, rbp
0x00002465      7420           je 0x2487
0x00002467      660f1f840000.  nop word [rax + rax]
0x00002470      8b35766c2000   mov esi, dword [obj.other_indent]       ; [0x2090ec:4]=0
0x00002476      4889df         mov rdi, rbx                            ; /src:774
0x00002479      e8a2feffff     call sym.put_line
0x0000247e      488b5b20       mov rbx, qword [rbx + 0x20]
0x00002482      4839dd         cmp rbp, rbx
0x00002485      75e9           jne 0x2470
0x00002487      4883c408       add rsp, 8
0x0000248b      5b             pop rbx
0x0000248c      5d             pop rbp
0x0000248d      c3             ret
0x0000248e      6690           nop                                     ; /src:604
;-- flush_paragraph:
0x00002490      4155           push r13
0x00002492      4154           push r12
0x00002494      55             push rbp
0x00002495      53             push rbx
0x00002496      488d1d836c20.  lea rbx, obj.unused_word_type           ; 0x209120
0x0000249d      488d2ddc0821.  lea rbp, obj.parabuf                    ; 0x212d80
0x000024a4      4883ec08       sub rsp, 8
0x000024a8      4c8b2d516c20.  mov r13, qword [obj.word_limit]         ; [0x209100:8]=0
0x000024af      4939dd         cmp r13, rbx
0x000024b2      0f8418010000   je 0x25d0
0x000024b8      e813f9ffff     call sym.fmt_paragraph
0x000024bd      488b0d7c6c20.  mov rcx, qword [0x00209140]             ; [0x209140:8]=0
0x000024c4      4939cd         cmp r13, rcx
0x000024c7      0f8433010000   je 0x2600
0x000024cd      488b5118       mov rdx, qword [rcx + 0x18]
0x000024d1      4d89ec         mov r12, r13
0x000024d4      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x000024de      49b8f6ffffff.  movabs r8, 0x7ffffffffffffff6           ; 9223372036854775798
0x000024e8      0f1f84000000.  nop dword [rax + rax]                   ; /src:625
0x000024f0      488b7920       mov rdi, qword [rcx + 0x20]
0x000024f4      488b7718       mov rsi, qword [rdi + 0x18]
0x000024f8      4829f2         sub rdx, rsi
0x000024fb      4839c2         cmp rdx, rax
0x000024fe      7d06           jge 0x2506                              ; /src:631
0x00002500      4889d0         mov rax, rdx
0x00002503      4989cc         mov r12, rcx
0x00002506      488d5009       lea rdx, [rax + 9]
0x0000250a      4c39c0         cmp rax, r8
0x0000250d      4889f9         mov rcx, rdi
0x00002510      480f4ec2       cmovle rax, rdx
0x00002514      4939fd         cmp r13, rdi                            ; /src:633
0x00002517      4889f2         mov rdx, rsi
0x0000251a      75d4           jne 0x24f0
0x0000251c      4c89e7         mov rdi, r12                            ; /src:638
0x0000251f      e81cffffff     call sym.put_paragraph
0x00002524      4c8b2d350821.  mov r13, qword [obj.wptr]               ; [0x212d60:8]=0
0x0000252b      498b3424       mov rsi, qword [r12]
0x0000252f      488d3d4a0821.  lea rdi, obj.parabuf                    ; 0x212d80
0x00002536      b988130000     mov ecx, 0x1388
0x0000253b      4c89ea         mov rdx, r13
0x0000253e      4829f2         sub rdx, rsi                            ; /src:639
0x00002541      e82af1ffff     call sym.imp.__memmove_chk
0x00002546      498b1424       mov rdx, qword [r12]
0x0000254a      4889d1         mov rcx, rdx
0x0000254d      4829e9         sub rcx, rbp
0x00002550      488b2da96b20.  mov rbp, qword [obj.word_limit]         ; [0x209100:8]=0
0x00002557      4863c9         movsxd rcx, ecx
0x0000255a      48f7d9         neg rcx
0x0000255d      4901cd         add r13, rcx
0x00002560      4939ec         cmp r12, rbp
0x00002563      4c892df60721.  mov qword [obj.wptr], r13               ; [0x212d60:8]=0
0x0000256a      771f           ja 0x258b
0x0000256c      4c89e0         mov rax, r12
0x0000256f      eb0a           jmp 0x257b
0x00002571      0f1f80000000.  nop dword [rax]
0x00002578      488b10         mov rdx, qword [rax]
0x0000257b      4801ca         add rdx, rcx
0x0000257e      4883c028       add rax, 0x28                           ; /src:644
0x00002582      488950d8       mov qword [rax - 0x28], rdx
0x00002586      4839e8         cmp rax, rbp                            ; .//ib:-149
0x00002589      76ed           jbe 0x2578
0x0000258b      4889e8         mov rax, rbp
0x0000258e      4c89e6         mov rsi, r12
0x00002591      488d3d886b20.  lea rdi, obj.unused_word_type           ; 0x209120
0x00002598      4c29e0         sub rax, r12
0x0000259b      4929dc         sub r12, rbx                            ; /src:650
0x0000259e      b9409c0000     mov ecx, 0x9c40
0x000025a3      48c1f803       sar rax, 3
0x000025a7      4c29e5         sub rbp, r12
0x000025aa      488d14c52800.  lea rdx, [rax*8 + 0x28]                 ; .//ib:-149
0x000025b2      e8b9f0ffff     call sym.imp.__memmove_chk
0x000025b7      48892d426b20.  mov qword [obj.word_limit], rbp         ; [0x209100:8]=0
0x000025be      4883c408       add rsp, 8
0x000025c2      5b             pop rbx
0x000025c3      5d             pop rbp
0x000025c4      415c           pop r12
0x000025c6      415d           pop r13
0x000025c8      c3             ret                                     ; /src:606
0x000025c9      0f1f80000000.  nop dword [rax]
0x000025d0      488b15890721.  mov rdx, qword [obj.wptr]               ; [0x212d60:8]=0
0x000025d7      488b0daa6a20.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x000025de      4889ef         mov rdi, rbp
0x000025e1      be01000000     mov esi, 1
0x000025e6      4829ea         sub rdx, rbp                            ; /src:607
0x000025e9      e8f2f0ffff     call sym.imp.fwrite_unlocked
0x000025ee      48892d6b0721.  mov qword [obj.wptr], rbp               ; [0x212d60:8]=0
0x000025f5      4883c408       add rsp, 8
0x000025f9      5b             pop rbx
0x000025fa      5d             pop rbp
0x000025fb      415c           pop r12
0x000025fd      415d           pop r13
0x000025ff      c3             ret
0x00002600      4d89ec         mov r12, r13
0x00002603      e914ffffff     jmp 0x251c
0x00002608      0f1f84000000.  nop dword [rax + rax]                   ; /src:475
;-- get_line:
0x00002610      4157           push r15
0x00002612      4156           push r14
0x00002614      4155           push r13
0x00002616      4154           push r12
0x00002618      4189f5         mov r13d, esi
0x0000261b      55             push rbp
0x0000261c      53             push rbx
0x0000261d      4889fb         mov rbx, rdi
0x00002620      4883ec28       sub rsp, 0x28
0x00002624      488b2dd56a20.  mov rbp, qword [obj.word_limit]         ; [0x209100:8]=0
0x0000262b      e880f1ffff     call sym.imp.__ctype_b_loc
0x00002630      4889442408     mov qword [rsp + 8], rax                ; /src:488
0x00002635      0f1f00         nop dword [rax]
0x00002638      488b05210721.  mov rax, qword [obj.wptr]               ; [0x212d60:8]=0
0x0000263f      48894500       mov qword [rbp], rax
0x00002643      eb3d           jmp 0x2682
0x00002645      0f1f00         nop dword [rax]
0x00002648      488d4801       lea rcx, [rax + 1]
0x0000264c      448828         mov byte [rax], r13b
0x0000264f      488b4308       mov rax, qword [rbx + 8]                ; /src:496
0x00002653      483b4310       cmp rax, qword [rbx + 0x10]
0x00002657      48890d020721.  mov qword [obj.wptr], rcx               ; [0x212d60:8]=0
0x0000265e      7350           jae 0x26b0
0x00002660      488d5001       lea rdx, [rax + 1]
0x00002664      48895308       mov qword [rbx + 8], rdx
0x00002668      440fb628       movzx r13d, byte [rax]
0x0000266c      4889c8         mov rax, rcx
0x0000266f      488b7c2408     mov rdi, qword [rsp + 8]
0x00002674      4963cd         movsxd rcx, r13d
0x00002677      4c8b07         mov r8, qword [rdi]
0x0000267a      41f644480120   test byte [r8 + rcx*2 + 1], 0x20        ; /src:491
0x00002680      754e           jne 0x26d0
0x00002682      488d157f1a21.  lea rdx, obj.out_column                 ; 0x214108
0x00002689      4839d0         cmp rax, rdx
0x0000268c      75ba           jne 0x2648
0x0000268e      bf01000000     mov edi, 1
0x00002693      e878fbffff     call sym.set_other_indent
0x00002698      e8f3fdffff     call sym.flush_paragraph
0x0000269d      488b05bc0621.  mov rax, qword [obj.wptr]               ; [0x212d60:8]=0
0x000026a4      eba2           jmp 0x2648
0x000026a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000026b0      4889df         mov rdi, rbx
0x000026b3      e808eeffff     call sym.imp.__uflow
0x000026b8      4189c5         mov r13d, eax
0x000026bb      488b059e0621.  mov rax, qword [obj.wptr]               ; [0x212d60:8]=0
0x000026c2      4183fdff       cmp r13d, 0xffffffff
0x000026c6      75a7           jne 0x266f
0x000026c8      488b742408     mov rsi, qword [rsp + 8]                ; /src:500
0x000026cd      4c8b06         mov r8, qword [rsi]
0x000026d0      4c8b3d296a20.  mov r15, qword [obj.word_limit]         ; /src:453 ; [0x209100:8]=0
0x000026d7      8b352f1a2100   mov esi, dword [obj.in_column]          ; [0x21410c:4]=0
0x000026dd      488d3d803a00.  lea rdi, [0x00006164]                   ; "(['`\""
0x000026e4      4c89442418     mov qword [rsp + 0x18], r8              ; /src:403
0x000026e9      4d8b27         mov r12, qword [r15]
0x000026ec      4c29e0         sub rax, r12
0x000026ef      01c6           add esi, eax                            ; /src:359
0x000026f1      41894708       mov dword [r15 + 8], eax
0x000026f5      4898           cdqe
0x000026f7      89742414       mov dword [rsp + 0x14], esi
0x000026fb      89350b1a2100   mov dword [obj.in_column], esi          ; [0x21410c:4]=0
0x00002701      4d8d7404ff     lea r14, [r12 + rax - 1]
0x00002706      410fbe3424     movsx esi, byte [r12]
0x0000270b      410fb62e       movzx ebp, byte [r14]
0x0000270f      e8aceeffff     call sym.imp.strchr
0x00002714      4c8b442418     mov r8, qword [rsp + 0x18]
0x00002719      4885c0         test rax, rax
0x0000271c      410fb64710     movzx eax, byte [r15 + 0x10]
0x00002721      400f95c7       setne dil
0x00002725      be04000000     mov esi, 4
0x0000272a      41223468       and sil, byte [r8 + rbp*2]
0x0000272e      83e0fa         and eax, 0xfffffffa                     ; 4294967290
0x00002731      09f8           or eax, edi
0x00002733      09f0           or eax, esi
0x00002735      4d39f4         cmp r12, r14
0x00002738      41884710       mov byte [r15 + 0x10], al
0x0000273c      721a           jb 0x2758
0x0000273e      e94d010000     jmp 0x2890
0x00002743      0f1f440000     nop dword [rax + rax]
0x00002748      498d46ff       lea rax, [r14 - 1]
0x0000274c      4939c4         cmp r12, rax
0x0000274f      0f840b010000   je 0x2860
0x00002755      4989c6         mov r14, rax
0x00002758      410fbe2e       movsx ebp, byte [r14]
0x0000275c      488d3d073a00.  lea rdi, str.                           ; 0x616a ; ")]'\""
0x00002763      89ee           mov esi, ebp
0x00002765      e856eeffff     call sym.imp.strchr                     ; /coreutils-8.31/lib:235
0x0000276a      4885c0         test rax, rax
0x0000276d      75d9           jne 0x2748
0x0000276f      488d3df93900.  lea rdi, [0x0000616f]                   ; ".?!"
0x00002776      89ee           mov esi, ebp
0x00002778      e843eeffff     call sym.imp.strchr
0x0000277d      4885c0         test rax, rax
0x00002780      4489ee         mov esi, r13d
0x00002783      4889df         mov rdi, rbx
0x00002786      0f95c0         setne al
0x00002789      8d0c00         lea ecx, [rax + rax]
0x0000278c      410fb64710     movzx eax, byte [r15 + 0x10]
0x00002791      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x00002794      09c8           or eax, ecx
0x00002796      41884710       mov byte [r15 + 0x10], al
0x0000279a      e821f8ffff     call sym.get_space
0x0000279f      8b0d67192100   mov ecx, dword [obj.in_column]          ; /coreutils-8.31/lib:243 ; [0x21410c:4]=0
0x000027a5      2b4c2414       sub ecx, dword [rsp + 0x14]
0x000027a9      4189c5         mov r13d, eax
0x000027ac      488b054d6920.  mov rax, qword [obj.word_limit]         ; [0x209100:8]=0
0x000027b3      4183fdff       cmp r13d, 0xffffffff
0x000027b7      89480c         mov dword [rax + 0xc], ecx
0x000027ba      7454           je 0x2810
0x000027bc      31f6           xor esi, esi
0x000027be      f6401002       test byte [rax + 0x10], 2
0x000027c2      7410           je 0x27d4                               ; /coreutils-8.31/lib:237
0x000027c4      83f901         cmp ecx, 1
0x000027c7      400f9fc6       setg sil
0x000027cb      4183fd0a       cmp r13d, 0xa
0x000027cf      0f94c1         sete cl
0x000027d2      09ce           or esi, ecx
0x000027d4      0fb64810       movzx ecx, byte [rax + 0x10]            ; /coreutils-8.31/lib:245
0x000027d8      c1e603         shl esi, 3                              ; /coreutils-8.31/lib:243
0x000027db      83e1f7         and ecx, 0xfffffff7                     ; 4294967287
0x000027de      09f1           or ecx, esi
0x000027e0      4183fd0a       cmp r13d, 0xa
0x000027e4      884810         mov byte [rax + 0x10], cl
0x000027e7      742b           je 0x2814
0x000027e9      803d40192100.  cmp byte [obj.uniform], 0               ; [0x214130:1]=0
0x000027f0      7522           jne 0x2814
0x000027f2      488d3d170521.  lea rdi, [0x00212d10]                   ; /coreutils-8.31/lib:247
0x000027f9      4839f8         cmp rax, rdi
0x000027fc      7472           je 0x2870                               ; /coreutils-8.31/lib:246
0x000027fe      488d6828       lea rbp, [rax + 0x28]
0x00002802      48892df76820.  mov qword [obj.word_limit], rbp         ; [0x209100:8]=0
0x00002809      e92afeffff     jmp 0x2638
0x0000280e      6690           nop
0x00002810      80481008       or byte [rax + 0x10], 8
0x00002814      31c9           xor ecx, ecx
0x00002816      f6401008       test byte [rax + 0x10], 8
0x0000281a      488d3def0421.  lea rdi, [0x00212d10]
0x00002821      0f95c1         setne cl
0x00002824      83c101         add ecx, 1
0x00002827      4839f8         cmp rax, rdi
0x0000282a      89480c         mov dword [rax + 0xc], ecx
0x0000282d      7441           je 0x2870
0x0000282f      488d6828       lea rbp, [rax + 0x28]
0x00002833      4183fd0a       cmp r13d, 0xa
0x00002837      48892dc26820.  mov qword [obj.word_limit], rbp         ; [0x209100:8]=0
0x0000283e      740a           je 0x284a
0x00002840      4183fdff       cmp r13d, 0xffffffff
0x00002844      0f85eefdffff   jne 0x2638
0x0000284a      4883c428       add rsp, 0x28                           ; /coreutils-8.31/lib:13
0x0000284e      4889df         mov rdi, rbx
0x00002851      5b             pop rbx
0x00002852      5d             pop rbp
0x00002853      415c           pop r12
0x00002855      415d           pop r13
0x00002857      415e           pop r14
0x00002859      415f           pop r15
0x0000285b      e9e0f7ffff     jmp sym.get_prefix
0x00002860      410fbe6eff     movsx ebp, byte [r14 - 1]
0x00002865      e905ffffff     jmp 0x276f
0x0000286a      660f1f440000   nop word [rax + rax]
0x00002870      bf01000000     mov edi, 1
0x00002875      e896f9ffff     call sym.set_other_indent
0x0000287a      e811fcffff     call sym.flush_paragraph
0x0000287f      488b057a6820.  mov rax, qword [obj.word_limit]         ; [0x209100:8]=0
0x00002886      eba7           jmp 0x282f
0x00002888      0f1f84000000.  nop dword [rax + rax]
0x00002890      410fbe2e       movsx ebp, byte [r14]
0x00002894      e9d6feffff     jmp 0x276f
0x00002899      0f1f80000000.  nop dword [rax]
;-- fmt:
0x000028a0      4157           push r15
0x000028a2      4156           push r14
0x000028a4      be02000000     mov esi, 2
0x000028a9      4155           push r13
0x000028ab      4154           push r12                                ; /coreutils-8.31/lib:-543
0x000028ad      4989fd         mov r13, rdi
0x000028b0      55             push rbp
0x000028b1      53             push rbx
0x000028b2      4c8d25c70421.  lea r12, obj.parabuf                    ; 0x212d80
0x000028b9      488d2d606820.  lea rbp, obj.unused_word_type           ; 0x209120
0x000028c0      4883ec08       sub rsp, 8
0x000028c4      e8c7090000     call sym.fadvise
0x000028c9      4c89ef         mov rdi, r13
0x000028cc      c60525682000.  mov byte [obj.tabs], 0                  ; [0x2090f8:1]=0
0x000028d3      c7050f682000.  mov dword [obj.other_indent], 0         ; [0x2090ec:4]=0
0x000028dd      e85ef7ffff     call sym.get_prefix
0x000028e2      89c3           mov ebx, eax
0x000028e4      8905fe672000   mov dword [obj.next_char], eax          ; [0x2090e8:4]=0
0x000028ea      660f1f440000   nop word [rax + rax]
0x000028f0      c705e6672000.  mov dword [obj.last_line_length], 0     ; [0x2090e0:4]=0
0x000028fa      660f1f440000   nop word [rax + rax]
0x00002900      83fb0a         cmp ebx, 0xa
0x00002903      8b3ddb672000   mov edi, dword [obj.next_prefix_indent] ; /src:-98 ; [0x2090e4:4]=0
0x00002909      8b05fd172100   mov eax, dword [obj.in_column]          ; [0x21410c:4]=0
0x0000290f      741d           je 0x292e
0x00002911      83fbff         cmp ebx, 0xffffffff
0x00002914      7418           je 0x292e
0x00002916      393dfc172100   cmp dword [obj.prefix_lead_space], edi  ; [0x214118:4]=0
0x0000291c      7f10           jg 0x292e
0x0000291e      8b15f8172100   mov edx, dword [obj.prefix_full_length] ; [0x21411c:4]=0
0x00002924      01fa           add edx, edi
0x00002926      39c2           cmp edx, eax
0x00002928      0f8e09020000   jle 0x2b37
0x0000292e      83fbff         cmp ebx, 0xffffffff
0x00002931      c705cd172100.  mov dword [obj.out_column], 0           ; [0x214108:4]=0
0x0000293b      410f95c6       setne r14b
0x0000293f      83fb0a         cmp ebx, 0xa                            ; /src:-148
0x00002942      0f95c2         setne dl
0x00002945      4121d6         and r14d, edx
0x00002948      39c7           cmp edi, eax
0x0000294a      0f8cd0000000   jl 0x2a20
0x00002950      4584f6         test r14b, r14b                         ; /coreutils-8.31/lib:-714
0x00002953      0f848f000000   je 0x29e8
0x00002959      e8d2f7ffff     call sym.put_space
0x0000295e      8b05a4172100   mov eax, dword [obj.out_column]         ; [0x214108:4]=0
0x00002964      8b0da2172100   mov ecx, dword [obj.in_column]          ; [0x21410c:4]=0
0x0000296a      4c8b3db71721.  mov r15, qword [obj.prefix]             ; [0x214128:8]=0
0x00002971      39c8           cmp eax, ecx
0x00002973      0f8461020000   je 0x2bda
0x00002979      410fb637       movzx esi, byte [r15]
0x0000297d      4084f6         test sil, sil
0x00002980      753d           jne 0x29bf
0x00002982      e961010000     jmp 0x2ae8
0x00002987      660f1f840000.  nop word [rax + rax]
0x00002990      488d5001       lea rdx, [rax + 1]
0x00002994      48895728       mov qword [rdi + 0x28], rdx
0x00002998      408830         mov byte [rax], sil
0x0000299b      8b0567172100   mov eax, dword [obj.out_column]         ; [0x214108:4]=0
0x000029a1      83c001         add eax, 1
0x000029a4      39c8           cmp eax, ecx
0x000029a6      89055c172100   mov dword [obj.out_column], eax         ; [0x214108:4]=0
0x000029ac      0f848e000000   je 0x2a40
0x000029b2      410fb637       movzx esi, byte [r15]
0x000029b6      4084f6         test sil, sil
0x000029b9      0f8481000000   je 0x2a40
0x000029bf      488b3dc26620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x000029c6      4983c701       add r15, 1
0x000029ca      488b4728       mov rax, qword [rdi + 0x28]
0x000029ce      483b4730       cmp rax, qword [rdi + 0x30]
0x000029d2      72bc           jb 0x2990
0x000029d4      e8f7ebffff     call sym.imp.__overflow
0x000029d9      8b0d2d172100   mov ecx, dword [obj.in_column]          ; [0x21410c:4]=0
0x000029df      ebba           jmp 0x299b
0x000029e1      0f1f80000000.  nop dword [rax]
0x000029e8      83fbff         cmp ebx, 0xffffffff
0x000029eb      0f84db000000   je 0x2acc
0x000029f1      488b3d906620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x000029f8      488b4728       mov rax, qword [rdi + 0x28]
0x000029fc      483b4730       cmp rax, qword [rdi + 0x30]
0x00002a00      0f8322010000   jae 0x2b28
0x00002a06      488d5001       lea rdx, [rax + 1]
0x00002a0a      48895728       mov qword [rdi + 0x28], rdx
0x00002a0e      c6000a         mov byte [rax], 0xa
0x00002a11      4c89ef         mov rdi, r13
0x00002a14      e827f6ffff     call sym.get_prefix
0x00002a19      89c3           mov ebx, eax
0x00002a1b      e9e0feffff     jmp 0x2900
0x00002a20      e80bf7ffff     call sym.put_space
0x00002a25      8b05dd162100   mov eax, dword [obj.out_column]         ; [0x214108:4]=0
0x00002a2b      8b0ddb162100   mov ecx, dword [obj.in_column]          ; [0x21410c:4]=0
0x00002a31      4c8b3df01621.  mov r15, qword [obj.prefix]             ; [0x214128:8]=0
0x00002a38      39c1           cmp ecx, eax                            ; /src:-215
0x00002a3a      0f8572ffffff   jne 0x29b2
0x00002a40      4584f6         test r14b, r14b
0x00002a43      0f859f000000   jne 0x2ae8
0x00002a49      83fbff         cmp ebx, 0xffffffff
0x00002a4c      7521           jne 0x2a6f                              ; /src:-212
0x00002a4e      eb68           jmp 0x2ab8                              ; /src:-342
0x00002a50      488d5001       lea rdx, [rax + 1]
0x00002a54      48895728       mov qword [rdi + 0x28], rdx
0x00002a58      8818           mov byte [rax], bl
0x00002a5a      498b4508       mov rax, qword [r13 + 8]
0x00002a5e      493b4510       cmp rax, qword [r13 + 0x10]
0x00002a62      7344           jae 0x2aa8                              ; /src:-391
0x00002a64      488d5001       lea rdx, [rax + 1]
0x00002a68      49895508       mov qword [r13 + 8], rdx
0x00002a6c      0fb618         movzx ebx, byte [rax]
0x00002a6f      83fb0a         cmp ebx, 0xa
0x00002a72      0f8470ffffff   je 0x29e8                               ; /src:-389
0x00002a78      83fbff         cmp ebx, 0xffffffff
0x00002a7b      0f8467ffffff   je 0x29e8
0x00002a81      488b3d006620.  mov rdi, qword [obj.stdout]             ; /src:-512 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00002a88      488b4728       mov rax, qword [rdi + 0x28]
0x00002a8c      483b4730       cmp rax, qword [rdi + 0x30]
0x00002a90      72be           jb 0x2a50
0x00002a92      0fb6f3         movzx esi, bl
0x00002a95      e836ebffff     call sym.imp.__overflow
0x00002a9a      498b4508       mov rax, qword [r13 + 8]
0x00002a9e      493b4510       cmp rax, qword [r13 + 0x10]
0x00002aa2      72c0           jb 0x2a64
0x00002aa4      0f1f4000       nop dword [rax]
0x00002aa8      4c89ef         mov rdi, r13
0x00002aab      e810eaffff     call sym.imp.__uflow
0x00002ab0      89c3           mov ebx, eax
0x00002ab2      ebbb           jmp 0x2a6f
0x00002ab4      0f1f4000       nop dword [rax]
0x00002ab8      8b0556162100   mov eax, dword [obj.prefix_length]      ; [0x214114:4]=0
0x00002abe      030520662000   add eax, dword [obj.next_prefix_indent] ; /src:-346 ; [0x2090e4:4]=0
0x00002ac4      3b0542162100   cmp eax, dword [obj.in_column]          ; [0x21410c:4]=0
0x00002aca      7e34           jle 0x2b00
0x00002acc      c70512662000.  mov dword [obj.next_char], 0xffffffff   ; [0x2090e8:4]=0
0x00002ad6      4883c408       add rsp, 8
0x00002ada      5b             pop rbx
0x00002adb      5d             pop rbp
0x00002adc      415c           pop r12
0x00002ade      415d           pop r13
0x00002ae0      415e           pop r14
0x00002ae2      415f           pop r15
0x00002ae4      c3             ret
0x00002ae5      0f1f00         nop dword [rax]
0x00002ae8      29c1           sub ecx, eax
0x00002aea      89cf           mov edi, ecx
0x00002aec      e83ff6ffff     call sym.put_space
0x00002af1      e953ffffff     jmp 0x2a49
0x00002af6      662e0f1f8400.  nop word cs:[rax + rax]
0x00002b00      488b3d816520.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00002b07      488b4728       mov rax, qword [rdi + 0x28]
0x00002b0b      483b4730       cmp rax, qword [rdi + 0x30]
0x00002b0f      0f83cc000000   jae 0x2be1
0x00002b15      488d5001       lea rdx, [rax + 1]
0x00002b19      48895728       mov qword [rdi + 0x28], rdx
0x00002b1d      c6000a         mov byte [rax], 0xa
0x00002b20      ebaa           jmp 0x2acc
0x00002b22      660f1f440000   nop word [rax + rax]
0x00002b28      be0a000000     mov esi, 0xa                            ; /src:-413
0x00002b2d      e89eeaffff     call sym.imp.__overflow
0x00002b32      e9dafeffff     jmp 0x2a11
0x00002b37      893db7652000   mov dword [obj.prefix_indent], edi      ; [0x2090f4:4]=0
0x00002b3d      89de           mov esi, ebx
0x00002b3f      4c89ef         mov rdi, r13
0x00002b42      8905a8652000   mov dword [obj.first_indent], eax       ; [0x2090f0:4]=0
0x00002b48      4c8925110221.  mov qword [obj.wptr], r12               ; [0x212d60:8]=0
0x00002b4f      48892daa6520.  mov qword [obj.word_limit], rbp         ; [0x209100:8]=0
0x00002b56      e8b5faffff     call sym.get_line
0x00002b5b      8b0d83652000   mov ecx, dword [obj.next_prefix_indent] ; [0x2090e4:4]=0
0x00002b61      448b058c6520.  mov r8d, dword [obj.prefix_indent]      ; [0x2090f4:4]=0
0x00002b68      31ff           xor edi, edi
0x00002b6a      89c6           mov esi, eax
0x00002b6c      4439c1         cmp ecx, r8d
0x00002b6f      747f           je 0x2bf0
0x00002b71      e89af6ffff     call sym.set_other_indent
0x00002b76      803db4152100.  cmp byte [obj.split], 0                 ; [0x214131:1]=0
0x00002b7d      7529           jne 0x2ba8
0x00002b7f      803dad152100.  cmp byte [obj.crown], 0                 ; [0x214133:1]=0
0x00002b86      0f858e000000   jne 0x2c1a
0x00002b8c      803d9f152100.  cmp byte [obj.tagged], 0                ; [0x214132:1]=0
0x00002b93      0f85ff000000   jne 0x2c98                              ; /src:-532
0x00002b99      4439c1         cmp ecx, r8d
0x00002b9c      0f8482010000   je 0x2d24
0x00002ba2      660f1f440000   nop word [rax + rax]
0x00002ba8      488b1d516520.  mov rbx, qword [obj.word_limit]         ; [0x209100:8]=0
0x00002baf      4839eb         cmp rbx, rbp                            ; /src:-476
0x00002bb2      0f86f8010000   jbe 0x2db0
0x00002bb8      804be80a       or byte [rbx - 0x18], 0xa
0x00002bbc      893526652000   mov dword [obj.next_char], esi          ; [0x2090e8:4]=0
0x00002bc2      e809f2ffff     call sym.fmt_paragraph
0x00002bc7      4889df         mov rdi, rbx
0x00002bca      e871f8ffff     call sym.put_paragraph
0x00002bcf      8b1d13652000   mov ebx, dword [obj.next_char]          ; [0x2090e8:4]=0
0x00002bd5      e916fdffff     jmp 0x28f0
0x00002bda      31ff           xor edi, edi
0x00002bdc      e90bffffff     jmp 0x2aec
0x00002be1      be0a000000     mov esi, 0xa
0x00002be6      e8e5e9ffff     call sym.imp.__overflow
0x00002beb      e9dcfeffff     jmp 0x2acc
0x00002bf0      8b0526152100   mov eax, dword [obj.prefix_full_length] ; [0x21411c:4]=0
0x00002bf6      01c8           add eax, ecx
0x00002bf8      3b050e152100   cmp eax, dword [obj.in_column]          ; [0x21410c:4]=0
0x00002bfe      0f8f6dffffff   jg 0x2b71
0x00002c04      83fe0a         cmp esi, 0xa
0x00002c07      0f95c0         setne al
0x00002c0a      31ff           xor edi, edi
0x00002c0c      83feff         cmp esi, 0xffffffff
0x00002c0f      400f95c7       setne dil
0x00002c13      21c7           and edi, eax
0x00002c15      e957ffffff     jmp 0x2b71
0x00002c1a      4439c1         cmp ecx, r8d
0x00002c1d      7589           jne 0x2ba8
0x00002c1f      030df7142100   add ecx, dword [obj.prefix_full_length] ; /src:-527 ; [0x21411c:4]=0
0x00002c25      3b0de1142100   cmp ecx, dword [obj.in_column]          ; [0x21410c:4]=0
0x00002c2b      0f8f77ffffff   jg 0x2ba8                               ; /src:-526
0x00002c31      83fe0a         cmp esi, 0xa
0x00002c34      0f846effffff   je 0x2ba8
0x00002c3a      83feff         cmp esi, 0xffffffff
0x00002c3d      753b           jne 0x2c7a
0x00002c3f      e964ffffff     jmp 0x2ba8
0x00002c44      0f1f4000       nop dword [rax]
0x00002c48      0305ce142100   add eax, dword [obj.prefix_full_length] ; [0x21411c:4]=0
0x00002c4e      8b15b8142100   mov edx, dword [obj.in_column]          ; [0x21410c:4]=0
0x00002c54      39d0           cmp eax, edx
0x00002c56      0f8f4cffffff   jg 0x2ba8
0x00002c5c      83fe0a         cmp esi, 0xa
0x00002c5f      0f8443ffffff   je 0x2ba8
0x00002c65      83feff         cmp esi, 0xffffffff
0x00002c68      0f843affffff   je 0x2ba8
0x00002c6e      3b1578642000   cmp edx, dword [obj.other_indent]       ; [0x2090ec:4]=0
0x00002c74      0f852effffff   jne 0x2ba8
0x00002c7a      4c89ef         mov rdi, r13
0x00002c7d      e88ef9ffff     call sym.get_line
0x00002c82      89c6           mov esi, eax
0x00002c84      8b055a642000   mov eax, dword [obj.next_prefix_indent] ; /src:-863 ; [0x2090e4:4]=0
0x00002c8a      3b0564642000   cmp eax, dword [obj.prefix_indent]      ; [0x2090f4:4]=0
0x00002c90      0f8512ffffff   jne 0x2ba8
0x00002c96      ebb0           jmp 0x2c48
0x00002c98      4439c1         cmp ecx, r8d                            ; /src:-861
0x00002c9b      0f8507ffffff   jne 0x2ba8
0x00002ca1      030d75142100   add ecx, dword [obj.prefix_full_length] ; [0x21411c:4]=0
0x00002ca7      8b055f142100   mov eax, dword [obj.in_column]          ; [0x21410c:4]=0
0x00002cad      39c1           cmp ecx, eax
0x00002caf      0f8ff3feffff   jg 0x2ba8
0x00002cb5      83fe0a         cmp esi, 0xa
0x00002cb8      0f84eafeffff   je 0x2ba8
0x00002cbe      83feff         cmp esi, 0xffffffff
0x00002cc1      0f84e1feffff   je 0x2ba8
0x00002cc7      3b0523642000   cmp eax, dword [obj.first_indent]       ; [0x2090f0:4]=0
0x00002ccd      7537           jne 0x2d06
0x00002ccf      e9d4feffff     jmp 0x2ba8
0x00002cd4      030542142100   add eax, dword [obj.prefix_full_length] ; ../coreutils-8.31/src/t.c:-1023 ; [0x21411c:4]=0
0x00002cda      8b152c142100   mov edx, dword [obj.in_column]          ; [0x21410c:4]=0
0x00002ce0      39d0           cmp eax, edx
0x00002ce2      0f8fc0feffff   jg 0x2ba8
0x00002ce8      83fe0a         cmp esi, 0xa
0x00002ceb      0f84b7feffff   je 0x2ba8
0x00002cf1      83feff         cmp esi, 0xffffffff
0x00002cf4      0f84aefeffff   je 0x2ba8
0x00002cfa      3b15ec632000   cmp edx, dword [obj.other_indent]       ; [0x2090ec:4]=0
0x00002d00      0f85a2feffff   jne 0x2ba8
0x00002d06      4c89ef         mov rdi, r13
0x00002d09      e802f9ffff     call sym.get_line
0x00002d0e      89c6           mov esi, eax
0x00002d10      8b05ce632000   mov eax, dword [obj.next_prefix_indent] ; [0x2090e4:4]=0
0x00002d16      3b05d8632000   cmp eax, dword [obj.prefix_indent]      ; [0x2090f4:4]=0
0x00002d1c      0f8586feffff   jne 0x2ba8
0x00002d22      ebb0           jmp 0x2cd4
0x00002d24      030df2132100   add ecx, dword [obj.prefix_full_length] ; [0x21411c:4]=0
0x00002d2a      8b05dc132100   mov eax, dword [obj.in_column]          ; [0x21410c:4]=0
0x00002d30      39c1           cmp ecx, eax                            ; stdio.h:-540
0x00002d32      0f8f70feffff   jg 0x2ba8
0x00002d38      83feff         cmp esi, 0xffffffff
0x00002d3b      0f8467feffff   je 0x2ba8
0x00002d41      83fe0a         cmp esi, 0xa
0x00002d44      0f845efeffff   je 0x2ba8
0x00002d4a      3b059c632000   cmp eax, dword [obj.other_indent]       ; [0x2090ec:4]=0
0x00002d50      7440           je 0x2d92
0x00002d52      e951feffff     jmp 0x2ba8
0x00002d57      660f1f840000.  nop word [rax + rax]
0x00002d60      0305b6132100   add eax, dword [obj.prefix_full_length] ; [0x21411c:4]=0
0x00002d66      8b15a0132100   mov edx, dword [obj.in_column]          ; [0x21410c:4]=0
0x00002d6c      39d0           cmp eax, edx
0x00002d6e      0f8f34feffff   jg 0x2ba8
0x00002d74      83fe0a         cmp esi, 0xa
0x00002d77      0f842bfeffff   je 0x2ba8
0x00002d7d      83feff         cmp esi, 0xffffffff
0x00002d80      0f8422feffff   je 0x2ba8
0x00002d86      3b1560632000   cmp edx, dword [obj.other_indent]       ; [0x2090ec:4]=0
0x00002d8c      0f8516feffff   jne 0x2ba8
0x00002d92      4c89ef         mov rdi, r13
0x00002d95      e876f8ffff     call sym.get_line
0x00002d9a      89c6           mov esi, eax
0x00002d9c      8b0542632000   mov eax, dword [obj.next_prefix_indent] ; [0x2090e4:4]=0
0x00002da2      3b054c632000   cmp eax, dword [obj.prefix_indent]      ; [0x2090f4:4]=0
0x00002da8      0f85fafdffff   jne 0x2ba8
0x00002dae      ebb0           jmp 0x2d60
0x00002db0      488d0d593a00.  lea rcx, obj.__PRETTY_FUNCTION__.7028   ; 0x6810 ; "get_paragraph"
0x00002db7      488d35b53300.  lea rsi, str..._coreutils_8.31_src_fmt.c ; 0x6173 ; "../coreutils-8.31/src/fmt.c"
0x00002dbe      488d3dca3300.  lea rdi, str.word___word_limit          ; 0x618f ; "word < word_limit"
0x00002dc5      ba5e020000     mov edx, 0x25e
0x00002dca      e831e8ffff     call sym.imp.__assert_fail
0x00002dcf      90             nop
;-- usage:
0x00002dd0      4155           push r13
0x00002dd2      4154           push r12
0x00002dd4      ba05000000     mov edx, 5
0x00002dd9      55             push rbp
0x00002dda      53             push rbx
0x00002ddb      89fd           mov ebp, edi
0x00002ddd      4881ec880000.  sub rsp, 0x88
0x00002de4      488b1d5d1321.  mov rbx, qword [obj.program_name]       ; [0x214148:8]=0
0x00002deb      64488b042528.  mov rax, qword fs:[0x28]
0x00002df4      4889442478     mov qword [rsp + 0x78], rax
0x00002df9      31c0           xor eax, eax
0x00002dfb      85ff           test edi, edi
0x00002dfd      742e           je 0x2e2d
0x00002dff      488d35fa3400.  lea rsi, str.Try___s___help__for_more_information. ; 0x6300 ; "Try '%s --help' for more information.\n"
0x00002e06      31ff           xor edi, edi
0x00002e08      e853e7ffff     call sym.imp.dcgettext
0x00002e0d      488b3dac6220.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x00002e14      4889c2         mov rdx, rax
0x00002e17      4889d9         mov rcx, rbx
0x00002e1a      be01000000     mov esi, 1
0x00002e1f      31c0           xor eax, eax
0x00002e21      e85ae9ffff     call sym.imp.__fprintf_chk
0x00002e26      89ef           mov edi, ebp
0x00002e28      e833e9ffff     call sym.imp.exit
0x00002e2d      488d35f43400.  lea rsi, str.Usage:__s___WIDTH___OPTION_...__FILE_... ; 0x6328 ; "Usage: %s [-WIDTH] [OPTION]... [FILE]...\n"
0x00002e34      31ff           xor edi, edi
0x00002e36      e825e7ffff     call sym.imp.dcgettext
0x00002e3b      4889da         mov rdx, rbx
0x00002e3e      4889c6         mov rsi, rax
0x00002e41      bf01000000     mov edi, 1
0x00002e46      31c0           xor eax, eax
0x00002e48      e8c3e8ffff     call sym.imp.__printf_chk
0x00002e4d      488b1d346220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00002e54      488d35fd3400.  lea rsi, str.Reformat_each_paragraph_in_the_FILE_s___writing_to_standard_output.__The_option__WIDTH_is_an_abbreviated_form_of___width_DIGITS. ; 0x6358 ; "Reformat each paragraph in the FILE(s), writing to standard output.\nThe option -WIDTH is an abbreviated form of --width=DIGITS.\n"
0x00002e5b      ba05000000     mov edx, 5
0x00002e60      31ff           xor edi, edi
0x00002e62      e8f9e6ffff     call sym.imp.dcgettext
0x00002e67      4889de         mov rsi, rbx
0x00002e6a      4889c7         mov rdi, rax
0x00002e6d      e8dee7ffff     call sym.imp.fputs_unlocked
0x00002e72      488b1d0f6220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00002e79      488d35603500.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x63e0 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00002e80      ba05000000     mov edx, 5
0x00002e85      31ff           xor edi, edi
0x00002e87      e8d4e6ffff     call sym.imp.dcgettext
0x00002e8c      4889de         mov rsi, rbx
0x00002e8f      4889c7         mov rdi, rax
0x00002e92      e8b9e7ffff     call sym.imp.fputs_unlocked
0x00002e97      488b1dea6120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00002e9e      488d35733500.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x6418 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00002ea5      ba05000000     mov edx, 5
0x00002eaa      31ff           xor edi, edi
0x00002eac      e8afe6ffff     call sym.imp.dcgettext                  ; stdio.h:-475
0x00002eb1      4889de         mov rsi, rbx
0x00002eb4      4889c7         mov rdi, rax
0x00002eb7      e894e7ffff     call sym.imp.fputs_unlocked
0x00002ebc      488b1dc56120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00002ec3      488d359e3500.  lea rsi, str.c____crown_margin________preserve_indentation_of_first_two_lines_____p____prefix_STRING_______reformat_only_lines_beginning_with_STRING_________________________________reattaching_the_prefix_to_reformatted_lines_____s____split_only__________split_long_lines__but_do_not_refill ; 0x6468 ; "  -c, --crown-margin        preserve indentation of first two lines\n  -p, --prefix=STRING       reformat only lines beginning with STRING,\n                              reattaching the prefix to reformatted lines\n  -s, --split-only          split long lines, but do not refill\n"
0x00002eca      ba05000000     mov edx, 5
0x00002ecf      31ff           xor edi, edi
0x00002ed1      e88ae6ffff     call sym.imp.dcgettext
0x00002ed6      4889de         mov rsi, rbx
0x00002ed9      4889c7         mov rdi, rax
0x00002edc      e86fe7ffff     call sym.imp.fputs_unlocked
0x00002ee1      488b1da06120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00002ee8      488d35913600.  lea rsi, str.t____tagged_paragraph____indentation_of_first_line_different_from_second_____u____uniform_spacing_____one_space_between_words__two_after_sentences_____w____width_WIDTH_________maximum_line_width__default_of_75_columns______g____goal_WIDTH__________goal_width__default_of_93__of_width ; 0x6580 ; "  -t, --tagged-paragraph    indentation of first line different from second\n  -u, --uniform-spacing     one space between words, two after sentences\n  -w, --width=WIDTH         maximum line width (default of 75 columns)\n  -g, --goal=WIDTH          goal width (default of 93% of width)\n"
0x00002eef      ba05000000     mov edx, 5
0x00002ef4      31ff           xor edi, edi
0x00002ef6      e865e6ffff     call sym.imp.dcgettext
0x00002efb      4889de         mov rsi, rbx
0x00002efe      4889c7         mov rdi, rax
0x00002f01      e84ae7ffff     call sym.imp.fputs_unlocked
0x00002f06      488b1d7b6120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00002f0d      488d358c3700.  lea rsi, str.help_____display_this_help_and_exit ; 0x66a0 ; "      --help     display this help and exit\n"
0x00002f14      ba05000000     mov edx, 5
0x00002f19      31ff           xor edi, edi
0x00002f1b      e840e6ffff     call sym.imp.dcgettext
0x00002f20      4889de         mov rsi, rbx
0x00002f23      4889c7         mov rdi, rax
0x00002f26      e825e7ffff     call sym.imp.fputs_unlocked
0x00002f2b      488b1d566120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00002f32      488d35973700.  lea rsi, str.version__output_version_information_and_exit ; 0x66d0 ; "      --version  output version information and exit\n"
0x00002f39      ba05000000     mov edx, 5
0x00002f3e      31ff           xor edi, edi
0x00002f40      e81be6ffff     call sym.imp.dcgettext
0x00002f45      4889de         mov rsi, rbx
0x00002f48      4889c7         mov rdi, rax
0x00002f4b      488d1d4f3200.  lea rbx, [0x000061a1]                   ; "fmt"
0x00002f52      e8f9e6ffff     call sym.imp.fputs_unlocked
0x00002f57      488d05473200.  lea rax, [0x000061a5]                   ; "["
0x00002f5e      488d0d813200.  lea rcx, str.sha256sum                  ; 0x61e6 ; "sha256sum"
0x00002f65      48c744246000.  mov qword [rsp + 0x60], 0
0x00002f6e      48c744246800.  mov qword [rsp + 0x68], 0
0x00002f77      4889e2         mov rdx, rsp
0x00002f7a      48890424       mov qword [rsp], rax
0x00002f7e      488d05223200.  lea rax, [0x000061a7]                   ; "test invocation"
0x00002f85      48894c2430     mov qword [rsp + 0x30], rcx
0x00002f8a      488d0d5f3200.  lea rcx, str.sha384sum                  ; 0x61f0 ; "sha384sum"
0x00002f91      4889442408     mov qword [rsp + 8], rax
0x00002f96      488d05823200.  lea rax, [0x0000621f]                   ; "coreutils"
0x00002f9d      48894c2440     mov qword [rsp + 0x40], rcx
0x00002fa2      488d0d513200.  lea rcx, str.sha512sum                  ; 0x61fa ; "sha512sum"
0x00002fa9      4889442410     mov qword [rsp + 0x10], rax
0x00002fae      488d05023200.  lea rax, [0x000061b7]                   ; "Multi-call invocation"
0x00002fb5      48894c2450     mov qword [rsp + 0x50], rcx
0x00002fba      4889442418     mov qword [rsp + 0x18], rax
0x00002fbf      488d05073200.  lea rax, str.sha224sum                  ; 0x61cd ; "sha224sum"
0x00002fc6      4889442420     mov qword [rsp + 0x20], rax
0x00002fcb      488d05053200.  lea rax, str.sha2_utilities             ; 0x61d7 ; "sha2 utilities"
0x00002fd2      4889442428     mov qword [rsp + 0x28], rax
0x00002fd7      4889442438     mov qword [rsp + 0x38], rax
0x00002fdc      4889442448     mov qword [rsp + 0x48], rax
0x00002fe1      4889442458     mov qword [rsp + 0x58], rax
0x00002fe6      662e0f1f8400.  nop word cs:[rax + rax]
0x00002ff0      4883c210       add rdx, 0x10                           ; ../coreutils-8.31/src/t.c:-1023
0x00002ff4      488b3a         mov rdi, qword [rdx]
0x00002ff7      4885ff         test rdi, rdi
0x00002ffa      7413           je 0x300f
0x00002ffc      b904000000     mov ecx, 4
0x00003001      4889de         mov rsi, rbx
0x00003004      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003006      0f97c0         seta al
0x00003009      1c00           sbb al, 0
0x0000300b      84c0           test al, al
0x0000300d      75e1           jne 0x2ff0
0x0000300f      4c8b6208       mov r12, qword [rdx + 8]
0x00003013      31ff           xor edi, edi
0x00003015      ba05000000     mov edx, 5
0x0000301a      488d35e33100.  lea rsi, str.s_online_help:___s         ; 0x6204 ; "\n%s online help: <%s>\n"
0x00003021      4d85e4         test r12, r12
0x00003024      0f84c1000000   je 0x30eb
0x0000302a      e831e5ffff     call sym.imp.dcgettext
0x0000302f      488d0dd23600.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6708 ; "https://www.gnu.org/software/coreutils/"
0x00003036      488d15de3100.  lea rdx, str.GNU_coreutils              ; 0x621b ; "GNU coreutils"
0x0000303d      4889c6         mov rsi, rax
0x00003040      bf01000000     mov edi, 1
0x00003045      31c0           xor eax, eax
0x00003047      e8c4e6ffff     call sym.imp.__printf_chk
0x0000304c      31f6           xor esi, esi
0x0000304e      bf05000000     mov edi, 5
0x00003053      e8a8e6ffff     call sym.imp.setlocale
0x00003058      4885c0         test rax, rax
0x0000305b      741c           je 0x3079
0x0000305d      488d35c53100.  lea rsi, [0x00006229]                   ; "en_"
0x00003064      ba03000000     mov edx, 3
0x00003069      4889c7         mov rdi, rax
0x0000306c      e88fe4ffff     call sym.imp.strncmp
0x00003071      85c0           test eax, eax
0x00003073      0f8507010000   jne 0x3180
0x00003079      488d35ad3100.  lea rsi, str.Full_documentation___s_s   ; 0x622d ; "Full documentation <%s%s>\n"
0x00003080      31ff           xor edi, edi
0x00003082      ba05000000     mov edx, 5
0x00003087      e8d4e4ffff     call sym.imp.dcgettext
0x0000308c      488d0d0e3100.  lea rcx, [0x000061a1]                   ; "fmt"
0x00003093      488d156e3600.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6708 ; "https://www.gnu.org/software/coreutils/"
0x0000309a      4889c6         mov rsi, rax
0x0000309d      bf01000000     mov edi, 1
0x000030a2      31c0           xor eax, eax
0x000030a4      e867e6ffff     call sym.imp.__printf_chk
0x000030a9      4939dc         cmp r12, rbx
0x000030ac      488d0d0e3100.  lea rcx, [0x000061c1]                   ; " invocation"
0x000030b3      488d1de73c00.  lea rbx, [0x00006da1]
0x000030ba      480f44d9       cmove rbx, rcx
0x000030be      488d35b33600.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x6778 ; "or available locally via: info '(coreutils) %s%s'\n"
0x000030c5      31ff           xor edi, edi
0x000030c7      ba05000000     mov edx, 5
0x000030cc      e88fe4ffff     call sym.imp.dcgettext
0x000030d1      4889d9         mov rcx, rbx
0x000030d4      4889c6         mov rsi, rax
0x000030d7      4c89e2         mov rdx, r12
0x000030da      bf01000000     mov edi, 1
0x000030df      31c0           xor eax, eax
0x000030e1      e82ae6ffff     call sym.imp.__printf_chk
0x000030e6      e93bfdffff     jmp 0x2e26
0x000030eb      e870e4ffff     call sym.imp.dcgettext
0x000030f0      488d0d113600.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6708 ; "https://www.gnu.org/software/coreutils/"
0x000030f7      488d151d3100.  lea rdx, str.GNU_coreutils              ; 0x621b ; "GNU coreutils"
0x000030fe      4889c6         mov rsi, rax
0x00003101      bf01000000     mov edi, 1
0x00003106      31c0           xor eax, eax
0x00003108      e803e6ffff     call sym.imp.__printf_chk
0x0000310d      31f6           xor esi, esi
0x0000310f      bf05000000     mov edi, 5
0x00003114      e8e7e5ffff     call sym.imp.setlocale
0x00003119      4885c0         test rax, rax
0x0000311c      7418           je 0x3136
0x0000311e      488d35043100.  lea rsi, [0x00006229]                   ; "en_"
0x00003125      ba03000000     mov edx, 3
0x0000312a      4889c7         mov rdi, rax
0x0000312d      e8cee3ffff     call sym.imp.strncmp
0x00003132      85c0           test eax, eax
0x00003134      7543           jne 0x3179
0x00003136      488d35f03000.  lea rsi, str.Full_documentation___s_s   ; 0x622d ; "Full documentation <%s%s>\n"
0x0000313d      ba05000000     mov edx, 5
0x00003142      31ff           xor edi, edi
0x00003144      4c8d25563000.  lea r12, [0x000061a1]                   ; "fmt"
0x0000314b      488d1d6f3000.  lea rbx, [0x000061c1]                   ; " invocation"
0x00003152      e809e4ffff     call sym.imp.dcgettext
0x00003157      488d0d433000.  lea rcx, [0x000061a1]                   ; "fmt"
0x0000315e      488d15a33500.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6708 ; "https://www.gnu.org/software/coreutils/"
0x00003165      4889c6         mov rsi, rax
0x00003168      bf01000000     mov edi, 1
0x0000316d      31c0           xor eax, eax
0x0000316f      e89ce5ffff     call sym.imp.__printf_chk
0x00003174      e945ffffff     jmp 0x30be
0x00003179      4c8d25213000.  lea r12, [0x000061a1]                   ; "fmt"
0x00003180      4c8b2d015f20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00003187      488d35a23500.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x6730 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000318e      31ff           xor edi, edi
0x00003190      ba05000000     mov edx, 5
0x00003195      e8c6e3ffff     call sym.imp.dcgettext
0x0000319a      4c89ee         mov rsi, r13
0x0000319d      4889c7         mov rdi, rax
0x000031a0      e8abe4ffff     call sym.imp.fputs_unlocked
0x000031a5      e9cffeffff     jmp 0x3079
0x000031aa      660f1f440000   nop word [rax + rax]
;-- close_stdout_set_file_name:
0x000031b0      48893d890f21.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x214140:8]=0
0x000031b7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x000031b8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x000031c0      40883d710f21.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x214138:1]=0
0x000031c7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x000031c8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x000031d0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x000031d1      53             push rbx
0x000031d2      4883ec08       sub rsp, 8
0x000031d6      488b3dab5e20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x000031dd      e8be2d0000     call sym.close_stream
0x000031e2      85c0           test eax, eax
0x000031e4      7416           je 0x31fc
0x000031e6      e805e3ffff     call sym.imp.__errno_location
0x000031eb      803d460f2100.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x214138:1]=0
0x000031f2      4889c3         mov rbx, rax
0x000031f5      741c           je 0x3213
0x000031f7      833820         cmp dword [rax], 0x20
0x000031fa      7517           jne 0x3213
0x000031fc      488b3dbd5e20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x00003203      e8982d0000     call sym.close_stream
0x00003208      85c0           test eax, eax
0x0000320a      7546           jne 0x3252
0x0000320c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00003210      5b             pop rbx
0x00003211      5d             pop rbp
0x00003212      c3             ret
0x00003213      488d35093600.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x6823 ; "write error"
0x0000321a      31ff           xor edi, edi
0x0000321c      ba05000000     mov edx, 5
0x00003221      e83ae3ffff     call sym.imp.dcgettext
0x00003226      488b3d130f21.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x214140:8]=0
0x0000322d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003230      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003233      7428           je 0x325d
0x00003235      e8961b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000323a      8b33           mov esi, dword [rbx]
0x0000323c      488d15ec3500.  lea rdx, str.s:__s                      ; 0x682f ; "%s: %s"
0x00003243      4889c1         mov rcx, rax
0x00003246      4989e8         mov r8, rbp
0x00003249      31ff           xor edi, edi
0x0000324b      31c0           xor eax, eax
0x0000324d      e8cee4ffff     call sym.imp.error
0x00003252      8b3dc05d2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x209018:4]=1
0x00003258      e8b3e2ffff     call sym.imp._exit
0x0000325d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000325f      488d15cd3500.  lea rdx, [0x00006833]                   ; "%s"
0x00003266      4889c1         mov rcx, rax
0x00003269      31ff           xor edi, edi
0x0000326b      31c0           xor eax, eax
0x0000326d      e8aee4ffff     call sym.imp.error
0x00003272      ebde           jmp 0x3252
0x00003274      662e0f1f8400.  nop word cs:[rax + rax]
0x0000327e      6690           nop
;-- fdadvise:
0x00003280      e9abe3ffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x00003285      90             nop
0x00003286      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x00003290      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x00003293      741b           je 0x32b0
0x00003295      53             push rbx
0x00003296      89f3           mov ebx, esi
0x00003298      e8f3e3ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x0000329d      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x0000329f      31d2           xor edx, edx
0x000032a1      31f6           xor esi, esi
0x000032a3      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x000032a4      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x000032a6      e985e3ffff     jmp sym.imp.posix_fadvise
0x000032ab      0f1f440000     nop dword [rax + rax]
0x000032b0      f3c3           ret
0x000032b2      662e0f1f8400.  nop word cs:[rax + rax]
0x000032bc      0f1f4000       nop dword [rax]
;-- set_program_name:
0x000032c0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x000032c3      53             push rbx
0x000032c4      7477           je 0x333d                               ; ../coreutils-8.31/lib/progname.c:51
0x000032c6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x000032cb      4889fb         mov rbx, rdi
0x000032ce      e80de3ffff     call sym.imp.strrchr
0x000032d3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x000032d6      7455           je 0x332d
0x000032d8      4c8d4001       lea r8, [rax + 1]
0x000032dc      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x000032df      4829da         sub rdx, rbx
0x000032e2      4883fa06       cmp rdx, 6
0x000032e6      7e45           jle 0x332d
0x000032e8      488d70fa       lea rsi, [rax - 6]
0x000032ec      488d3d7d3500.  lea rdi, str..libs                      ; 0x6870 ; "/.libs/"
0x000032f3      b907000000     mov ecx, 7
0x000032f8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000032fa      0f97c2         seta dl
0x000032fd      80da00         sbb dl, 0
0x00003300      84d2           test dl, dl
0x00003302      7529           jne 0x332d
0x00003304      488d3d6d3500.  lea rdi, [0x00006878]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000330b      b903000000     mov ecx, 3
0x00003310      4c89c6         mov rsi, r8
0x00003313      4c89c3         mov rbx, r8
0x00003316      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003318      0f97c2         seta dl
0x0000331b      80da00         sbb dl, 0
0x0000331e      84d2           test dl, dl
0x00003320      750b           jne 0x332d
0x00003322      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00003326      48891d535d20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x209080:8]=0
0x0000332d      48891d140e21.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x214148:8]=0
0x00003334      48891d6d5d20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x0000333b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000333c      c3             ret
0x0000333d      488b0d7c5d20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x00003344      488d3ded3400.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x6838 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000334b      ba37000000     mov edx, 0x37                           ; '7'
0x00003350      be01000000     mov esi, 1
0x00003355      e816e4ffff     call sym.imp.fwrite
0x0000335a      e881e1ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000335f      90             nop
;-- gettext_quote.part.1:
0x00003360      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00003361      53             push rbx
0x00003362      4889fd         mov rbp, rdi
0x00003365      89f3           mov ebx, esi
0x00003367      4883ec08       sub rsp, 8
0x0000336b      e8102d0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00003370      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00003373      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003376      80fa55         cmp dl, 0x55
0x00003379      7475           je 0x33f0
0x0000337b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000337e      7420           je 0x33a0
0x00003380      488d05e62d00.  lea rax, [0x0000616d]                   ; "\""
0x00003387      488d15fd3400.  lea rdx, str.l______l                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; 0x688b ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000338e      83fb09         cmp ebx, 9
0x00003391      480f45c2       cmovne rax, rdx
0x00003395      4883c408       add rsp, 8
0x00003399      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000339a      5d             pop rbp
0x0000339b      c3             ret
0x0000339c      0f1f4000       nop dword [rax]
0x000033a0      0fb65001       movzx edx, byte [rax + 1]
0x000033a4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000033a7      80fa42         cmp dl, 0x42
0x000033aa      75d4           jne 0x3380
0x000033ac      80780231       cmp byte [rax + 2], 0x31
0x000033b0      75ce           jne 0x3380
0x000033b2      80780338       cmp byte [rax + 3], 0x38
0x000033b6      75c8           jne 0x3380
0x000033b8      80780430       cmp byte [rax + 4], 0x30
0x000033bc      75c2           jne 0x3380
0x000033be      80780533       cmp byte [rax + 5], 0x33
0x000033c2      75bc           jne 0x3380
0x000033c4      80780630       cmp byte [rax + 6], 0x30
0x000033c8      75b6           jne 0x3380
0x000033ca      80780700       cmp byte [rax + 7], 0
0x000033ce      75b0           jne 0x3380
0x000033d0      807d0060       cmp byte [rbp], 0x60
0x000033d4      488d05a93400.  lea rax, [0x00006884]
0x000033db      488d15a63400.  lea rdx, [0x00006888]
0x000033e2      480f45c2       cmovne rax, rdx
0x000033e6      4883c408       add rsp, 8
0x000033ea      5b             pop rbx
0x000033eb      5d             pop rbp
0x000033ec      c3             ret
0x000033ed      0f1f00         nop dword [rax]
0x000033f0      0fb65001       movzx edx, byte [rax + 1]
0x000033f4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000033f7      80fa54         cmp dl, 0x54
0x000033fa      7584           jne 0x3380
0x000033fc      0fb65002       movzx edx, byte [rax + 2]
0x00003400      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003403      80fa46         cmp dl, 0x46
0x00003406      0f8574ffffff   jne 0x3380
0x0000340c      8078032d       cmp byte [rax + 3], 0x2d
0x00003410      0f856affffff   jne 0x3380
0x00003416      80780438       cmp byte [rax + 4], 0x38
0x0000341a      0f8560ffffff   jne 0x3380
0x00003420      80780500       cmp byte [rax + 5], 0
0x00003424      0f8556ffffff   jne 0x3380
0x0000342a      807d0060       cmp byte [rbp], 0x60
0x0000342e      488d05473400.  lea rax, [0x0000687c]                   ; "\u2018"
0x00003435      488d15443400.  lea rdx, [0x00006880]                   ; "\u2019"
0x0000343c      480f45c2       cmovne rax, rdx
0x00003440      4883c408       add rsp, 8
0x00003444      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00003445      5d             pop rbp
0x00003446      c3             ret
0x00003447      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00003450      4157           push r15
0x00003452      4156           push r14
0x00003454      4589c7         mov r15d, r8d
0x00003457      4155           push r13
0x00003459      4154           push r12
0x0000345b      4989fe         mov r14, rdi
0x0000345e      55             push rbp
0x0000345f      53             push rbx
0x00003460      4489cb         mov ebx, r9d
0x00003463      4989f5         mov r13, rsi
0x00003466      4889cd         mov rbp, rcx
0x00003469      83e302         and ebx, 2
0x0000346c      4881ecb80000.  sub rsp, 0xb8
0x00003473      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000347b      4889542410     mov qword [rsp + 0x10], rdx
0x00003480      4489442408     mov dword [rsp + 8], r8d
0x00003485      44894c2478     mov dword [rsp + 0x78], r9d
0x0000348a      4889442420     mov qword [rsp + 0x20], rax
0x0000348f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00003497      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000349c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x000034a4      4889442460     mov qword [rsp + 0x60], rax
0x000034a9      64488b042528.  mov rax, qword fs:[0x28]
0x000034b2      48898424a800.  mov qword [rsp + 0xa8], rax
0x000034ba      31c0           xor eax, eax
0x000034bc      e8afe0ffff     call sym.imp.__ctype_get_mb_cur_max
0x000034c1      4183ff0a       cmp r15d, 0xa
0x000034c5      4889442458     mov qword [rsp + 0x58], rax
0x000034ca      0f87af110000   ja 0x467f
0x000034d0      488d0d093400.  lea rcx, [0x000068e0]
0x000034d7      4489fa         mov edx, r15d
0x000034da      48630491       movsxd rax, dword [rcx + rdx*4]
0x000034de      4801c8         add rax, rcx
0x000034e1      ffe0           jmp rax
0x000034e3      c644240e01     mov byte [rsp + 0xe], 1
0x000034e8      c644247c00     mov byte [rsp + 0x7c], 0
0x000034ed      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x000034f0      48c744245000.  mov qword [rsp + 0x50], 0
0x000034f9      c644240f01     mov byte [rsp + 0xf], 1
0x000034fe      c644240d00     mov byte [rsp + 0xd], 0
0x00003503      488d05813300.  lea rax, str.l______l                   ; 0x688b ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000350a      48c744241801.  mov qword [rsp + 0x18], 1
0x00003513      4531ff         xor r15d, r15d
0x00003516      c74424080200.  mov dword [rsp + 8], 2
0x0000351e      4889442448     mov qword [rsp + 0x48], rax
0x00003523      4531db         xor r11d, r11d
0x00003526      4889e8         mov rax, rbp
0x00003529      4589e0         mov r8d, r12d
0x0000352c      4c89dd         mov rbp, r11
0x0000352f      4989c3         mov r11, rax
0x00003532      660f1f440000   nop word [rax + rax]
0x00003538      4939eb         cmp r11, rbp
0x0000353b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000353f      4983fbff       cmp r11, 0xffffffffffffffff
0x00003543      750d           jne 0x3552
0x00003545      488b442410     mov rax, qword [rsp + 0x10]
0x0000354a      803c2800       cmp byte [rax + rbp], 0
0x0000354e      410f95c4       setne r12b
0x00003552      4584e4         test r12b, r12b
0x00003555      0f8455060000   je 0x3bb0
0x0000355b      837c240802     cmp dword [rsp + 8], 2
0x00003560      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003565      4c8d0c2f       lea r9, [rdi + rbp]
0x00003569      0f95c0         setne al
0x0000356c      2244240d       and al, byte [rsp + 0xd]
0x00003570      4189c2         mov r10d, eax
0x00003573      0f84a7000000   je 0x3620
0x00003579      488b442418     mov rax, qword [rsp + 0x18]
0x0000357e      4885c0         test rax, rax
0x00003581      0f8429040000   je 0x39b0
0x00003587      4983fbff       cmp r11, 0xffffffffffffffff
0x0000358b      488d5c0500     lea rbx, [rbp + rax]
0x00003590      752e           jne 0x35c0
0x00003592      4883f801       cmp rax, 1
0x00003596      7628           jbe 0x35c0
0x00003598      4488442438     mov byte [rsp + 0x38], r8b
0x0000359d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x000035a2      4c894c2428     mov qword [rsp + 0x28], r9
0x000035a7      e8d4dfffff     call sym.imp.strlen
0x000035ac      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000035b2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x000035b8      4989c3         mov r11, rax
0x000035bb      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000035c0      4c39db         cmp rbx, r11
0x000035c3      4488542428     mov byte [rsp + 0x28], r10b
0x000035c8      0f87b2050000   ja 0x3b80
0x000035ce      488b542418     mov rdx, qword [rsp + 0x18]
0x000035d3      488b742448     mov rsi, qword [rsp + 0x48]
0x000035d8      4c89cf         mov rdi, r9
0x000035db      4c895c2440     mov qword [rsp + 0x40], r11
0x000035e0      4488442438     mov byte [rsp + 0x38], r8b
0x000035e5      4c894c2430     mov qword [rsp + 0x30], r9
0x000035ea      e851e0ffff     call sym.imp.memcmp
0x000035ef      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x000035f1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000035f6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000035fc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00003601      0f8579050000   jne 0x3b80
0x00003607      807c240f00     cmp byte [rsp + 0xf], 0
0x0000360c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003612      0f857d0f0000   jne 0x4595
0x00003618      0f1f84000000.  nop dword [rax + rax]
0x00003620      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00003624      80fb7e         cmp bl, 0x7e
0x00003627      0f871b030000   ja 0x3948
0x0000362d      488d0dd83200.  lea rcx, [0x0000690c]
0x00003634      0fb6d3         movzx edx, bl
0x00003637      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000363b      4801c8         add rax, rcx
0x0000363e      ffe0           jmp rax
0x00003640      4531d2         xor r10d, r10d
0x00003643      4983fb01       cmp r11, 1
0x00003647      0f95c0         setne al
0x0000364a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000364e      750c           jne 0x365c
0x00003650      488b442410     mov rax, qword [rsp + 0x10]
0x00003655      80780100       cmp byte [rax + 1], 0
0x00003659      0f95c0         setne al
0x0000365c      837c240802     cmp dword [rsp + 8], 2
0x00003661      0f94c2         sete dl
0x00003664      84c0           test al, al
0x00003666      0f844c020000   je 0x38b8
0x0000366c      4531e4         xor r12d, r12d
0x0000366f      31c0           xor eax, eax
0x00003671      0f1f80000000.  nop dword [rax]
0x00003678      807c240d01     cmp byte [rsp + 0xd], 1
0x0000367d      0f850f010000   jne 0x3792
0x00003683      84d2           test dl, dl
0x00003685      0f8507010000   jne 0x3792
0x0000368b      488b742420     mov rsi, qword [rsp + 0x20]
0x00003690      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00003693      7414           je 0x36a9
0x00003695      89da           mov edx, ebx
0x00003697      c0ea05         shr dl, 5
0x0000369a      0fb6d2         movzx edx, dl
0x0000369d      8b1496         mov edx, dword [rsi + rdx*4]
0x000036a0      0fa3da         bt edx, ebx
0x000036a3      0f824a010000   jb 0x37f3
0x000036a9      4584d2         test r10b, r10b
0x000036ac      0f8541010000   jne 0x37f3
0x000036b2      83f001         xor eax, 1
0x000036b5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x000036b9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x000036bc      84c0           test al, al
0x000036be      7420           je 0x36e0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x000036c0      4d39fd         cmp r13, r15
0x000036c3      7605           jbe 0x36ca
0x000036c5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000036ca      498d4701       lea rax, [r15 + 1]
0x000036ce      4939c5         cmp r13, rax
0x000036d1      7606           jbe 0x36d9
0x000036d3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000036d9      4983c702       add r15, 2
0x000036dd      4531c0         xor r8d, r8d
0x000036e0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x000036e3      7304           jae 0x36e9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x000036e5      43881c3e       mov byte [r14 + r15], bl
0x000036e9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x000036ee      4983c701       add r15, 1
0x000036f2      b800000000     mov eax, 0
0x000036f7      4584e4         test r12b, r12b
0x000036fa      0f44f8         cmove edi, eax
0x000036fd      40887c240e     mov byte [rsp + 0xe], dil
0x00003702      e931feffff     jmp 0x3538
0x00003707      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00003710      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00003713      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00003717      83f802         cmp eax, 2
0x0000371a      0f84b8050000   je 0x3cd8
0x00003720      83f805         cmp eax, 5
0x00003723      0f846f050000   je 0x3c98
0x00003729      83f802         cmp eax, 2
0x0000372c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003731      0f94c2         sete dl
0x00003734      4531e4         xor r12d, r12d
0x00003737      31c0           xor eax, eax
0x00003739      e93affffff     jmp 0x3678
0x0000373e      6690           nop
0x00003740      4531d2         xor r10d, r10d
0x00003743      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00003748      0f8402050000   je 0x3c50
0x0000374e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00003753      31d2           xor edx, edx
0x00003755      31c0           xor eax, eax
0x00003757      bb27000000     mov ebx, 0x27                           ; '''
0x0000375c      e917ffffff     jmp 0x3678
0x00003761      0f1f80000000.  nop dword [rax]
0x00003768      ba09000000     mov edx, 9
0x0000376d      bb74000000     mov ebx, 0x74                           ; 't'
0x00003772      837c240802     cmp dword [rsp + 8], 2
0x00003777      0f94c0         sete al
0x0000377a      2244240f       and al, byte [rsp + 0xf]
0x0000377e      0f854a010000   jne 0x38ce
0x00003784      807c240d00     cmp byte [rsp + 0xd], 0
0x00003789      7565           jne 0x37f0
0x0000378b      89d3           mov ebx, edx
0x0000378d      4531e4         xor r12d, r12d
0x00003790      31c0           xor eax, eax
0x00003792      807c240f00     cmp byte [rsp + 0xf], 0
0x00003797      0f85eefeffff   jne 0x368b
0x0000379d      e907ffffff     jmp 0x36a9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x000037a2      660f1f440000   nop word [rax + rax]
0x000037a8      ba08000000     mov edx, 8
0x000037ad      bb62000000     mov ebx, 0x62                           ; 'b'
0x000037b2      ebd0           jmp 0x3784
0x000037b4      0f1f4000       nop dword [rax]
0x000037b8      837c240802     cmp dword [rsp + 8], 2
0x000037bd      0f84cd030000   je 0x3b90
0x000037c3      807c240d00     cmp byte [rsp + 0xd], 0
0x000037c8      0f8412020000   je 0x39e0
0x000037ce      807c240f00     cmp byte [rsp + 0xf], 0
0x000037d3      0f8407020000   je 0x39e0
0x000037d9      48837c241800   cmp qword [rsp + 0x18], 0
0x000037df      0f85b6030000   jne 0x3b9b
0x000037e5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000037ea      660f1f440000   nop word [rax + rax]
0x000037f0      4531e4         xor r12d, r12d
0x000037f3      837c240802     cmp dword [rsp + 8], 2
0x000037f8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x000037fb      807c240f00     cmp byte [rsp + 0xf], 0
0x00003800      89d0           mov eax, edx
0x00003802      0f8550080000   jne 0x4058
0x00003808      4489c0         mov eax, r8d
0x0000380b      83f001         xor eax, 1
0x0000380e      20d0           and al, dl
0x00003810      742f           je 0x3841
0x00003812      4d39fd         cmp r13, r15
0x00003815      7605           jbe 0x381c
0x00003817      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000381c      498d5701       lea rdx, [r15 + 1]
0x00003820      4939d5         cmp r13, rdx
0x00003823      7606           jbe 0x382b
0x00003825      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000382b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000382f      4939d5         cmp r13, rdx
0x00003832      7606           jbe 0x383a
0x00003834      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000383a      4983c703       add r15, 3
0x0000383e      4189c0         mov r8d, eax
0x00003841      4d39fd         cmp r13, r15
0x00003844      7605           jbe 0x384b
0x00003846      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000384b      4983c701       add r15, 1
0x0000384f      4883c501       add rbp, 1
0x00003853      e988feffff     jmp 0x36e0
0x00003858      0f1f84000000.  nop dword [rax + rax]
0x00003860      807c240d00     cmp byte [rsp + 0xd], 0
0x00003865      0f85c8010000   jne 0x3a33
0x0000386b      31d2           xor edx, edx
0x0000386d      f644247801     test byte [rsp + 0x78], 1
0x00003872      0f8413ffffff   je 0x378b
0x00003878      4883c501       add rbp, 1
0x0000387c      e9b7fcffff     jmp 0x3538
0x00003881      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003888      837c240802     cmp dword [rsp + 8], 2
0x0000388d      0f94c2         sete dl
0x00003890      31c0           xor eax, eax
0x00003892      e9e1fdffff     jmp 0x3678
0x00003897      660f1f840000.  nop word [rax + rax]
0x000038a0      ba07000000     mov edx, 7
0x000038a5      bb61000000     mov ebx, 0x61                           ; 'a'
0x000038aa      e9d5feffff     jmp 0x3784
0x000038af      90             nop
0x000038b0      837c240802     cmp dword [rsp + 8], 2
0x000038b5      0f94c2         sete dl
0x000038b8      4885ed         test rbp, rbp
0x000038bb      0f85abfdffff   jne 0x366c
0x000038c1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000038c6      20d0           and al, dl
0x000038c8      0f84aafdffff   je 0x3678
0x000038ce      4c89dd         mov rbp, r11
0x000038d1      c74424080200.  mov dword [rsp + 8], 2
0x000038d9      e9fb060000     jmp 0x3fd9
0x000038de      6690           nop
0x000038e0      837c240802     cmp dword [rsp + 8], 2
0x000038e5      0f94c2         sete dl
0x000038e8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x000038eb      ebd4           jmp 0x38c1
0x000038ed      0f1f00         nop dword [rax]
0x000038f0      837c240802     cmp dword [rsp + 8], 2
0x000038f5      bb20000000     mov ebx, 0x20                           ; "@"
0x000038fa      0f94c2         sete dl
0x000038fd      ebc2           jmp 0x38c1
0x000038ff      90             nop
0x00003900      ba0d000000     mov edx, 0xd
0x00003905      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000390a      e963feffff     jmp 0x3772
0x0000390f      90             nop
0x00003910      ba0c000000     mov edx, 0xc
0x00003915      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000391a      e965feffff     jmp 0x3784
0x0000391f      90             nop
0x00003920      ba0b000000     mov edx, 0xb
0x00003925      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000392a      e955feffff     jmp 0x3784
0x0000392f      90             nop
0x00003930      ba0a000000     mov edx, 0xa
0x00003935      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000393a      e933feffff     jmp 0x3772
0x0000393f      90             nop
0x00003940      4531d2         xor r10d, r10d
0x00003943      0f1f440000     nop dword [rax + rax]
0x00003948      48837c245801   cmp qword [rsp + 0x58], 1
0x0000394e      0f85a4030000   jne 0x3cf8
0x00003954      4c895c2438     mov qword [rsp + 0x38], r11
0x00003959      4488442430     mov byte [rsp + 0x30], r8b
0x0000395e      4488542428     mov byte [rsp + 0x28], r10b
0x00003963      e848deffff     call sym.imp.__ctype_b_loc
0x00003968      488b08         mov rcx, qword [rax]
0x0000396b      0fb6d3         movzx edx, bl
0x0000396e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003974      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000397a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000397f      bf01000000     mov edi, 1
0x00003984      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003988      66250040       and ax, 0x4000                          ; "$xL\x89\xf7j"
0x0000398c      410f95c4       setne r12b
0x00003990      0f94c0         sete al
0x00003993      2244240d       and al, byte [rsp + 0xd]
0x00003997      84c0           test al, al
0x00003999      0f8592090000   jne 0x4331
0x0000399f      837c240802     cmp dword [rsp + 8], 2
0x000039a4      0f94c2         sete dl
0x000039a7      e9ccfcffff     jmp 0x3678
0x000039ac      0f1f4000       nop dword [rax]
0x000039b0      410fb619       movzx ebx, byte [r9]
0x000039b4      80fb7e         cmp bl, 0x7e
0x000039b7      7787           ja 0x3940
0x000039b9      488d0d483100.  lea rcx, [0x00006b08]
0x000039c0      0fb6d3         movzx edx, bl
0x000039c3      48630491       movsxd rax, dword [rcx + rdx*4]
0x000039c7      4801c8         add rax, rcx
0x000039ca      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x000039cc      0f1f4000       nop dword [rax]
0x000039d0      4531d2         xor r10d, r10d
0x000039d3      807c240d00     cmp byte [rsp + 0xd], 0
0x000039d8      0f85f0fdffff   jne 0x37ce
0x000039de      6690           nop
0x000039e0      ba5c000000     mov edx, 0x5c                           ; '\'
0x000039e5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000039ea      e995fdffff     jmp 0x3784
0x000039ef      90             nop
0x000039f0      ba0c000000     mov edx, 0xc
0x000039f5      4531d2         xor r10d, r10d
0x000039f8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000039fd      e982fdffff     jmp 0x3784
0x00003a02      660f1f440000   nop word [rax + rax]
0x00003a08      ba0a000000     mov edx, 0xa
0x00003a0d      4531d2         xor r10d, r10d
0x00003a10      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003a15      e958fdffff     jmp 0x3772
0x00003a1a      660f1f440000   nop word [rax + rax]
0x00003a20      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003a25      e9c6fdffff     jmp 0x37f0
0x00003a2a      660f1f440000   nop word [rax + rax]
0x00003a30      4531d2         xor r10d, r10d
0x00003a33      837c240802     cmp dword [rsp + 8], 2
0x00003a38      0f94c2         sete dl
0x00003a3b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003a40      0f85940b0000   jne 0x45da
0x00003a46      4489c0         mov eax, r8d
0x00003a49      4c89f9         mov rcx, r15
0x00003a4c      83f001         xor eax, 1
0x00003a4f      20d0           and al, dl
0x00003a51      742d           je 0x3a80
0x00003a53      4d39fd         cmp r13, r15
0x00003a56      7605           jbe 0x3a5d
0x00003a58      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003a5d      498d4f01       lea rcx, [r15 + 1]
0x00003a61      4939cd         cmp r13, rcx
0x00003a64      7606           jbe 0x3a6c
0x00003a66      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003a6c      498d4f02       lea rcx, [r15 + 2]
0x00003a70      4939cd         cmp r13, rcx
0x00003a73      0f8730060000   ja 0x40a9
0x00003a79      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00003a7d      4189c0         mov r8d, eax
0x00003a80      4939cd         cmp r13, rcx
0x00003a83      7605           jbe 0x3a8a
0x00003a85      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003a8a      837c240802     cmp dword [rsp + 8], 2
0x00003a8f      4c8d7901       lea r15, [rcx + 1]
0x00003a93      0f8400060000   je 0x4099
0x00003a99      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003a9d      4c39d8         cmp rax, r11
0x00003aa0      7319           jae 0x3abb                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003aa2      488b442410     mov rax, qword [rsp + 0x10]
0x00003aa7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00003aac      88442428       mov byte [rsp + 0x28], al
0x00003ab0      83e830         sub eax, 0x30
0x00003ab3      3c09           cmp al, 9
0x00003ab5      0f862e080000   jbe 0x42e9
0x00003abb      4489e0         mov eax, r12d
0x00003abe      bb30000000     mov ebx, 0x30                           ; '0'
0x00003ac3      4531e4         xor r12d, r12d
0x00003ac6      e9adfbffff     jmp 0x3678                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00003acb      0f1f440000     nop dword [rax + rax]
0x00003ad0      837c240802     cmp dword [rsp + 8], 2
0x00003ad5      4589d4         mov r12d, r10d
0x00003ad8      0f94c2         sete dl
0x00003adb      4531d2         xor r10d, r10d
0x00003ade      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003ae0      e993fbffff     jmp 0x3678                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003ae5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003ae8      837c240802     cmp dword [rsp + 8], 2
0x00003aed      0f94c2         sete dl
0x00003af0      4531d2         xor r10d, r10d
0x00003af3      e9c0fdffff     jmp 0x38b8
0x00003af8      0f1f84000000.  nop dword [rax + rax]
0x00003b00      837c240802     cmp dword [rsp + 8], 2
0x00003b05      0f94c2         sete dl
0x00003b08      4531d2         xor r10d, r10d
0x00003b0b      4531e4         xor r12d, r12d
0x00003b0e      e9aefdffff     jmp 0x38c1
0x00003b13      0f1f440000     nop dword [rax + rax]
0x00003b18      837c240802     cmp dword [rsp + 8], 2
0x00003b1d      4589d4         mov r12d, r10d
0x00003b20      bb20000000     mov ebx, 0x20                           ; "@"
0x00003b25      0f94c2         sete dl
0x00003b28      4531d2         xor r10d, r10d
0x00003b2b      e991fdffff     jmp 0x38c1
0x00003b30      ba0d000000     mov edx, 0xd
0x00003b35      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003b38      bb72000000     mov ebx, 0x72                           ; 'r'
0x00003b3d      e930fcffff     jmp 0x3772
0x00003b42      660f1f440000   nop word [rax + rax]
0x00003b48      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003b4d      e99efcffff     jmp 0x37f0
0x00003b52      660f1f440000   nop word [rax + rax]
0x00003b58      ba09000000     mov edx, 9
0x00003b5d      4531d2         xor r10d, r10d
0x00003b60      bb74000000     mov ebx, 0x74                           ; 't'
0x00003b65      e908fcffff     jmp 0x3772
0x00003b6a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003b70      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003b75      e976fcffff     jmp 0x37f0
0x00003b7a      660f1f440000   nop word [rax + rax]
0x00003b80      4531d2         xor r10d, r10d
0x00003b83      e998faffff     jmp 0x3620
0x00003b88      0f1f84000000.  nop dword [rax + rax]
0x00003b90      807c240f00     cmp byte [rsp + 0xf], 0
0x00003b95      0f8565090000   jne 0x4500
0x00003b9b      4883c501       add rbp, 1
0x00003b9f      4489c0         mov eax, r8d
0x00003ba2      4531e4         xor r12d, r12d
0x00003ba5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003baa      e90dfbffff     jmp 0x36bc
0x00003baf      90             nop
0x00003bb0      837c240802     cmp dword [rsp + 8], 2
0x00003bb5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003bba      4589c4         mov r12d, r8d
0x00003bbd      4c89dd         mov rbp, r11
0x00003bc0      0f94c2         sete dl
0x00003bc3      89d8           mov eax, ebx
0x00003bc5      4d85ff         test r15, r15
0x00003bc8      0f94c1         sete cl
0x00003bcb      21d0           and eax, edx
0x00003bcd      20c8           and al, cl
0x00003bcf      0f85610a0000   jne 0x4636                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003bd5      89d8           mov eax, ebx
0x00003bd7      83f001         xor eax, 1
0x00003bda      20c2           and dl, al
0x00003bdc      0f846a090000   je 0x454c
0x00003be2      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003be7      0f845d090000   je 0x454a
0x00003bed      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003bf2      0f85f5090000   jne 0x45ed
0x00003bf8      4d85ed         test r13, r13
0x00003bfb      0f94c0         sete al
0x00003bfe      48837c245000   cmp qword [rsp + 0x50], 0
0x00003c04      0f95c2         setne dl
0x00003c07      20d0           and al, dl
0x00003c09      0f841d0a0000   je 0x462c
0x00003c0f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003c14      488d1d702c00.  lea rbx, str.l______l                   ; 0x688b ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003c1b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00003c1f      c74424080200.  mov dword [rsp + 8], 2
0x00003c27      41bf01000000   mov r15d, 1
0x00003c2d      48c744241801.  mov qword [rsp + 0x18], 1
0x00003c36      c644240f00     mov byte [rsp + 0xf], 0
0x00003c3b      48895c2448     mov qword [rsp + 0x48], rbx
0x00003c40      8844247c       mov byte [rsp + 0x7c], al
0x00003c44      e9daf8ffff     jmp 0x3523
0x00003c49      0f1f80000000.  nop dword [rax]
0x00003c50      807c240f00     cmp byte [rsp + 0xf], 0
0x00003c55      0f85a5080000   jne 0x4500
0x00003c5b      4d85ed         test r13, r13
0x00003c5e      0f84fc030000   je 0x4060                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003c64      31d2           xor edx, edx
0x00003c66      48837c245000   cmp qword [rsp + 0x50], 0
0x00003c6c      0f85ee030000   jne 0x4060                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003c72      4c896c2450     mov qword [rsp + 0x50], r13
0x00003c77      4983c703       add r15, 3
0x00003c7b      31c0           xor eax, eax
0x00003c7d      448864247c     mov byte [rsp + 0x7c], r12b
0x00003c82      4531c0         xor r8d, r8d
0x00003c85      4989d5         mov r13, rdx
0x00003c88      bb27000000     mov ebx, 0x27                           ; '''
0x00003c8d      e917faffff     jmp 0x36a9
0x00003c92      660f1f440000   nop word [rax + rax]
0x00003c98      f644247804     test byte [rsp + 0x78], 4
0x00003c9d      7421           je 0x3cc0
0x00003c9f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003ca3      4c39d9         cmp rcx, r11
0x00003ca6      7318           jae 0x3cc0
0x00003ca8      488b442410     mov rax, qword [rsp + 0x10]
0x00003cad      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003cb2      0f848a070000   je 0x4442
0x00003cb8      0f1f84000000.  nop dword [rax + rax]
0x00003cc0      31d2           xor edx, edx
0x00003cc2      4531e4         xor r12d, r12d
0x00003cc5      31c0           xor eax, eax
0x00003cc7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003ccc      e9a7f9ffff     jmp 0x3678
0x00003cd1      0f1f80000000.  nop dword [rax]
0x00003cd8      807c240f00     cmp byte [rsp + 0xf], 0
0x00003cdd      0f851d080000   jne 0x4500
0x00003ce3      4531e4         xor r12d, r12d
0x00003ce6      31c0           xor eax, eax
0x00003ce8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003ced      e9b7f9ffff     jmp 0x36a9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003cf2      660f1f440000   nop word [rax + rax]
0x00003cf8      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003d00      4983fbff       cmp r11, 0xffffffffffffffff
0x00003d04      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003d10      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003d15      752d           jne 0x3d44
0x00003d17      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003d1c      4488442440     mov byte [rsp + 0x40], r8b
0x00003d21      4488542438     mov byte [rsp + 0x38], r10b
0x00003d26      4c894c2430     mov qword [rsp + 0x30], r9
0x00003d2b      e850d8ffff     call sym.imp.strlen
0x00003d30      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003d36      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00003d3c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00003d3f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003d44      488d84249c00.  lea rax, [rsp + 0x9c]
0x00003d4c      31c9           xor ecx, ecx
0x00003d4e      885c247e       mov byte [rsp + 0x7e], bl
0x00003d52      448844247d     mov byte [rsp + 0x7d], r8b
0x00003d57      4889cb         mov rbx, rcx
0x00003d5a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003d62      4889442438     mov qword [rsp + 0x38], rax
0x00003d67      448854247f     mov byte [rsp + 0x7f], r10b
0x00003d6c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003d74      4c89742440     mov qword [rsp + 0x40], r14
0x00003d79      4c896c2470     mov qword [rsp + 0x70], r13
0x00003d7e      4c895c2430     mov qword [rsp + 0x30], r11
0x00003d83      488b442410     mov rax, qword [rsp + 0x10]
0x00003d88      4c8d741d00     lea r14, [rbp + rbx]
0x00003d8d      488b542430     mov rdx, qword [rsp + 0x30]
0x00003d92      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003d97      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00003d9c      4e8d2c30       lea r13, [rax + r14]
0x00003da0      4c29f2         sub rdx, r14
0x00003da3      4c89ee         mov rsi, r13
0x00003da6      e865210000     call sym.rpl_mbrtowc
0x00003dab      4885c0         test rax, rax
0x00003dae      4989c7         mov r15, rax
0x00003db1      744e           je 0x3e01
0x00003db3      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003db7      0f8418060000   je 0x43d5
0x00003dbd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003dc1      0f849a050000   je 0x4361
0x00003dc7      837c240802     cmp dword [rsp + 8], 2
0x00003dcc      0f94c0         sete al
0x00003dcf      2244240f       and al, byte [rsp + 0xf]
0x00003dd3      0f8597010000   jne 0x3f70
0x00003dd9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003de0      e8bbd9ffff     call sym.imp.iswprint
0x00003de5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00003dea      85c0           test eax, eax
0x00003dec      b800000000     mov eax, 0
0x00003df1      440f44e0       cmove r12d, eax
0x00003df5      4c01fb         add rbx, r15
0x00003df8      e893d9ffff     call sym.imp.mbsinit
0x00003dfd      85c0           test eax, eax
0x00003dff      7482           je 0x3d83
0x00003e01      4489e2         mov edx, r12d
0x00003e04      4889df         mov rdi, rbx
0x00003e07      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003e0d      83f201         xor edx, 1
0x00003e10      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003e15      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003e1b      2254240d       and dl, byte [rsp + 0xd]
0x00003e1f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003e27      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003e2c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003e31      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003e36      4883ff01       cmp rdi, 1
0x00003e3a      0f86fb050000   jbe 0x443b
0x00003e40      4889f9         mov rcx, rdi
0x00003e43      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003e45      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00003e4b      4801e9         add rcx, rbp
0x00003e4e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003e53      e9b6000000     jmp 0x3f0e
0x00003e58      0f1f84000000.  nop dword [rax + rax]
0x00003e60      837c240802     cmp dword [rsp + 8], 2
0x00003e65      0f94c0         sete al
0x00003e68      4584c9         test r9b, r9b
0x00003e6b      0f85af040000   jne 0x4320
0x00003e71      4489c6         mov esi, r8d
0x00003e74      83f601         xor esi, 1
0x00003e77      4020f0         and al, sil
0x00003e7a      742f           je 0x3eab                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00003e7c      4d39fd         cmp r13, r15
0x00003e7f      7605           jbe 0x3e86
0x00003e81      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003e86      498d7701       lea rsi, [r15 + 1]
0x00003e8a      4939f5         cmp r13, rsi
0x00003e8d      7606           jbe 0x3e95                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00003e8f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003e95      498d7702       lea rsi, [r15 + 2]
0x00003e99      4939f5         cmp r13, rsi
0x00003e9c      7606           jbe 0x3ea4
0x00003e9e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003ea4      4983c703       add r15, 3
0x00003ea8      4189c0         mov r8d, eax
0x00003eab      4d39fd         cmp r13, r15
0x00003eae      7605           jbe 0x3eb5
0x00003eb0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003eb5      498d4701       lea rax, [r15 + 1]
0x00003eb9      4939c5         cmp r13, rax
0x00003ebc      760d           jbe 0x3ecb
0x00003ebe      89d8           mov eax, ebx
0x00003ec0      c0e806         shr al, 6
0x00003ec3      83c030         add eax, 0x30
0x00003ec6      4388443e01     mov byte [r14 + r15 + 1], al
0x00003ecb      498d4702       lea rax, [r15 + 2]
0x00003ecf      4939c5         cmp r13, rax
0x00003ed2      7610           jbe 0x3ee4
0x00003ed4      89d8           mov eax, ebx
0x00003ed6      c0e803         shr al, 3
0x00003ed9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00003edc      83c030         add eax, 0x30
0x00003edf      4388443e02     mov byte [r14 + r15 + 2], al
0x00003ee4      83e307         and ebx, 7
0x00003ee7      4883c501       add rbp, 1
0x00003eeb      4983c703       add r15, 3
0x00003eef      83c330         add ebx, 0x30
0x00003ef2      4839cd         cmp rbp, rcx
0x00003ef5      0f83e5f7ffff   jae 0x36e0
0x00003efb      89d6           mov esi, edx
0x00003efd      4d39fd         cmp r13, r15
0x00003f00      7604           jbe 0x3f06
0x00003f02      43881c3e       mov byte [r14 + r15], bl
0x00003f06      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003f0a      4983c701       add r15, 1
0x00003f0e      84d2           test dl, dl
0x00003f10      0f854affffff   jne 0x3e60
0x00003f16      89f0           mov eax, esi
0x00003f18      83f001         xor eax, 1
0x00003f1b      4421c0         and eax, r8d
0x00003f1e      4584d2         test r10b, r10b
0x00003f21      740e           je 0x3f31
0x00003f23      4d39fd         cmp r13, r15
0x00003f26      7605           jbe 0x3f2d
0x00003f28      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003f2d      4983c701       add r15, 1
0x00003f31      4883c501       add rbp, 1
0x00003f35      4839cd         cmp rbp, rcx
0x00003f38      0f837ef7ffff   jae 0x36bc
0x00003f3e      84c0           test al, al
0x00003f40      0f84f8030000   je 0x433e
0x00003f46      4d39fd         cmp r13, r15
0x00003f49      7605           jbe 0x3f50
0x00003f4b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003f50      498d4701       lea rax, [r15 + 1]
0x00003f54      4939c5         cmp r13, rax
0x00003f57      7606           jbe 0x3f5f
0x00003f59      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003f5f      4983c702       add r15, 2
0x00003f63      4531d2         xor r10d, r10d
0x00003f66      4531c0         xor r8d, r8d
0x00003f69      eb92           jmp 0x3efd
0x00003f6b      0f1f440000     nop dword [rax + rax]
0x00003f70      4983ff01       cmp r15, 1
0x00003f74      0f845ffeffff   je 0x3dd9
0x00003f7a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003f7f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003f83      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003f88      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003f8c      eb0f           jmp 0x3f9d
0x00003f8e      6690           nop
0x00003f90      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003f94      4939d0         cmp r8, rdx
0x00003f97      0f843cfeffff   je 0x3dd9
0x00003f9d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00003fa0      83e95b         sub ecx, 0x5b
0x00003fa3      80f921         cmp cl, 0x21
0x00003fa6      77e8           ja 0x3f90                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00003fa8      be01000000     mov esi, 1
0x00003fad      48d3e6         shl rsi, cl
0x00003fb0      4889f1         mov rcx, rsi
0x00003fb3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00003fbd      4885f1         test rcx, rsi
0x00003fc0      74ce           je 0x3f90
0x00003fc2      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003fc7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003fcc      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00003fd1      c74424080200.  mov dword [rsp + 8], 2
0x00003fd9      807c240d00     cmp byte [rsp + 0xd], 0
0x00003fde      7410           je 0x3ff0
0x00003fe0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00003fe2      b804000000     mov eax, 4
0x00003fe7      0f44442408     cmove eax, dword [rsp + 8]
0x00003fec      89442408       mov dword [rsp + 8], eax
0x00003ff0      4883ec08       sub rsp, 8
0x00003ff4      4889e9         mov rcx, rbp
0x00003ff7      4c89ee         mov rsi, r13
0x00003ffa      ff742468       push qword [rsp + 0x68]
0x00003ffe      ff742478       push qword [rsp + 0x78]
0x00004002      4c89f7         mov rdi, r14
0x00004005      6a00           push 0
0x00004007      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000400f      448b442428     mov r8d, dword [rsp + 0x28]
0x00004014      488b542430     mov rdx, qword [rsp + 0x30]
0x00004019      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000401d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00004022      4883c420       add rsp, 0x20
0x00004026      4989c7         mov r15, rax
0x00004029      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00004031      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000403a      4c89f8         mov rax, r15
0x0000403d      0f8500060000   jne 0x4643
0x00004043      4881c4b80000.  add rsp, 0xb8
0x0000404a      5b             pop rbx
0x0000404b      5d             pop rbp
0x0000404c      415c           pop r12
0x0000404e      415d           pop r13
0x00004050      415e           pop r14
0x00004052      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00004054      c3             ret
0x00004055      0f1f00         nop dword [rax]
0x00004058      4c89dd         mov rbp, r11
0x0000405b      e979ffffff     jmp 0x3fd9
0x00004060      4d39fd         cmp r13, r15
0x00004063      7605           jbe 0x406a
0x00004065      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000406a      498d4701       lea rax, [r15 + 1]
0x0000406e      4939c5         cmp r13, rax
0x00004071      7606           jbe 0x4079
0x00004073      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00004079      498d4702       lea rax, [r15 + 2]
0x0000407d      4939c5         cmp r13, rax
0x00004080      0f86ec050000   jbe 0x4672
0x00004086      4c89ea         mov rdx, r13
0x00004089      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000408f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004094      e9d9fbffff     jmp 0x3c72
0x00004099      4489e0         mov eax, r12d
0x0000409c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x000040a1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x000040a4      e900f6ffff     jmp 0x36a9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x000040a9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000040af      e9c5f9ffff     jmp 0x3a79
0x000040b4      85db           test ebx, ebx
0x000040b6      0f8527f4ffff   jne 0x34e3
0x000040bc      c644240d01     mov byte [rsp + 0xd], 1
0x000040c1      4d85ed         test r13, r13
0x000040c4      0f8590050000   jne 0x465a
0x000040ca      488d05ba2700.  lea rax, str.l______l                   ; 0x688b ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000040d1      48c744245000.  mov qword [rsp + 0x50], 0
0x000040da      c644240e01     mov byte [rsp + 0xe], 1
0x000040df      c644247c00     mov byte [rsp + 0x7c], 0
0x000040e4      4531e4         xor r12d, r12d
0x000040e7      c644240f00     mov byte [rsp + 0xf], 0
0x000040ec      48c744241801.  mov qword [rsp + 0x18], 1
0x000040f5      4889442448     mov qword [rsp + 0x48], rax
0x000040fa      41bf01000000   mov r15d, 1
0x00004100      c74424080200.  mov dword [rsp + 8], 2
0x00004108      e916f4ffff     jmp 0x3523                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000410d      0f1f00         nop dword [rax]
0x00004110      85db           test ebx, ebx
0x00004112      0f85f5030000   jne 0x450d
0x00004118      4d85ed         test r13, r13
0x0000411b      0f8425020000   je 0x4346
0x00004121      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00004125      c644240e01     mov byte [rsp + 0xe], 1
0x0000412a      4531e4         xor r12d, r12d
0x0000412d      c644247c00     mov byte [rsp + 0x7c], 0
0x00004132      48c744245000.  mov qword [rsp + 0x50], 0
0x0000413b      488d052b2000.  lea rax, [0x0000616d]                   ; "\""
0x00004142      c644240f00     mov byte [rsp + 0xf], 0
0x00004147      c644240d01     mov byte [rsp + 0xd], 1
0x0000414c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004155      41bf01000000   mov r15d, 1
0x0000415b      4889442448     mov qword [rsp + 0x48], rax
0x00004160      e9bef3ffff     jmp 0x3523
0x00004165      488d05012000.  lea rax, [0x0000616d]                   ; "\""
0x0000416c      c644240e01     mov byte [rsp + 0xe], 1
0x00004171      c644247c00     mov byte [rsp + 0x7c], 0
0x00004176      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00004179      48c744245000.  mov qword [rsp + 0x50], 0
0x00004182      c644240f01     mov byte [rsp + 0xf], 1
0x00004187      c644240d01     mov byte [rsp + 0xd], 1
0x0000418c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004195      4531ff         xor r15d, r15d
0x00004198      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000419d      c74424080500.  mov dword [rsp + 8], 5
0x000041a5      e979f3ffff     jmp 0x3523
0x000041aa      c644240e01     mov byte [rsp + 0xe], 1
0x000041af      c644247c00     mov byte [rsp + 0x7c], 0
0x000041b4      4531e4         xor r12d, r12d
0x000041b7      48c744245000.  mov qword [rsp + 0x50], 0
0x000041c0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x000041c5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x000041c8      c644240d01     mov byte [rsp + 0xd], 1
0x000041cd      48c744241800.  mov qword [rsp + 0x18], 0
0x000041d6      48c744244800.  mov qword [rsp + 0x48], 0
0x000041df      e93ff3ffff     jmp 0x3523
0x000041e4      837c24080a     cmp dword [rsp + 8], 0xa
0x000041e9      7456           je 0x4241
0x000041eb      488d359b2600.  lea rsi, [0x0000688d]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000041f2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000041f4      ba05000000     mov edx, 5
0x000041f9      e862d3ffff     call sym.imp.dcgettext
0x000041fe      4889c1         mov rcx, rax
0x00004201      4889442468     mov qword [rsp + 0x68], rax
0x00004206      488d05802600.  lea rax, [0x0000688d]                   ; "`"
0x0000420d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00004210      0f8498030000   je 0x45ae
0x00004216      488d356e2600.  lea rsi, str.l______l                   ; 0x688b ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000421d      31ff           xor edi, edi
0x0000421f      ba05000000     mov edx, 5
0x00004224      e837d3ffff     call sym.imp.dcgettext
0x00004229      4889c1         mov rcx, rax
0x0000422c      4889442460     mov qword [rsp + 0x60], rax
0x00004231      488d05532600.  lea rax, str.l______l                   ; 0x688b ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004238      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000423b      0f8483030000   je 0x45c4
0x00004241      4531ff         xor r15d, r15d
0x00004244      85db           test ebx, ebx
0x00004246      0f84c1010000   je 0x440d
0x0000424c      85db           test ebx, ebx
0x0000424e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00004253      0f9544240f     setne byte [rsp + 0xf]
0x00004258      4531e4         xor r12d, r12d
0x0000425b      4889df         mov rdi, rbx
0x0000425e      e81dd3ffff     call sym.imp.strlen
0x00004263      48895c2448     mov qword [rsp + 0x48], rbx
0x00004268      4889442418     mov qword [rsp + 0x18], rax
0x0000426d      c644240e01     mov byte [rsp + 0xe], 1
0x00004272      c644247c00     mov byte [rsp + 0x7c], 0
0x00004277      48c744245000.  mov qword [rsp + 0x50], 0
0x00004280      c644240d01     mov byte [rsp + 0xd], 1
0x00004285      e999f2ffff     jmp 0x3523
0x0000428a      c644240e01     mov byte [rsp + 0xe], 1
0x0000428f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004294      4531e4         xor r12d, r12d
0x00004297      48c744245000.  mov qword [rsp + 0x50], 0
0x000042a0      c644240f00     mov byte [rsp + 0xf], 0
0x000042a5      4531ff         xor r15d, r15d
0x000042a8      c644240d00     mov byte [rsp + 0xd], 0
0x000042ad      48c744241800.  mov qword [rsp + 0x18], 0
0x000042b6      48c744244800.  mov qword [rsp + 0x48], 0
0x000042bf      e95ff2ffff     jmp 0x3523
0x000042c4      c644240e01     mov byte [rsp + 0xe], 1
0x000042c9      c644247c00     mov byte [rsp + 0x7c], 0
0x000042ce      4531e4         xor r12d, r12d
0x000042d1      48c744245000.  mov qword [rsp + 0x50], 0
0x000042da      c644240f01     mov byte [rsp + 0xf], 1
0x000042df      c644240d01     mov byte [rsp + 0xd], 1
0x000042e4      e91af2ffff     jmp 0x3503
0x000042e9      4d39fd         cmp r13, r15
0x000042ec      7605           jbe 0x42f3
0x000042ee      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x000042f3      488d4102       lea rax, [rcx + 2]
0x000042f7      4939c5         cmp r13, rax
0x000042fa      7606           jbe 0x4302
0x000042fc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00004302      4489e0         mov eax, r12d
0x00004305      4c8d7903       lea r15, [rcx + 3]
0x00004309      4531e4         xor r12d, r12d
0x0000430c      bb30000000     mov ebx, 0x30                           ; '0'
0x00004311      e962f3ffff     jmp 0x3678
0x00004316      662e0f1f8400.  nop word cs:[rax + rax]
0x00004320      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004325      4c89dd         mov rbp, r11
0x00004328      885c240d       mov byte [rsp + 0xd], bl
0x0000432c      e9a8fcffff     jmp 0x3fd9
0x00004331      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004336      4531e4         xor r12d, r12d
0x00004339      e902fbffff     jmp 0x3e40
0x0000433e      4531d2         xor r10d, r10d
0x00004341      e9b7fbffff     jmp 0x3efd
0x00004346      48c744245000.  mov qword [rsp + 0x50], 0
0x0000434f      c644240e01     mov byte [rsp + 0xe], 1
0x00004354      4531e4         xor r12d, r12d
0x00004357      c644247c00     mov byte [rsp + 0x7c], 0
0x0000435c      e9dafdffff     jmp 0x413b
0x00004361      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004366      4c89f6         mov rsi, r14
0x00004369      4c89e9         mov rcx, r13
0x0000436c      4889d8         mov rax, rbx
0x0000436f      4889df         mov rdi, rbx
0x00004372      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004378      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000437d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00004385      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00004388      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000438e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004396      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000439b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000043a0      7326           jae 0x43c8
0x000043a2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000043a5      7510           jne 0x43b7
0x000043a7      eb1f           jmp 0x43c8
0x000043a9      0f1f80000000.  nop dword [rax]
0x000043b0      41803c0100     cmp byte [r9 + rax], 0
0x000043b5      740e           je 0x43c5
0x000043b7      4883c001       add rax, 1
0x000043bb      488d540500     lea rdx, [rbp + rax]
0x000043c0      4939d3         cmp r11, rdx
0x000043c3      77eb           ja 0x43b0
0x000043c5      4889c7         mov rdi, rax
0x000043c8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000043cd      4531e4         xor r12d, r12d
0x000043d0      e961faffff     jmp 0x3e36
0x000043d5      4889df         mov rdi, rbx
0x000043d8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000043de      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000043e3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000043e9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000043f1      4531e4         xor r12d, r12d
0x000043f4      4c8b742440     mov r14, qword [rsp + 0x40]
0x000043f9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000043fe      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004403      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004408      e929faffff     jmp 0x3e36
0x0000440d      488b542468     mov rdx, qword [rsp + 0x68]
0x00004412      0fb602         movzx eax, byte [rdx]
0x00004415      84c0           test al, al
0x00004417      0f842ffeffff   je 0x424c
0x0000441d      0f1f00         nop dword [rax]
0x00004420      4d39fd         cmp r13, r15
0x00004423      7604           jbe 0x4429
0x00004425      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00004429      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000442d      420fb6043a     movzx eax, byte [rdx + r15]
0x00004432      84c0           test al, al
0x00004434      75ea           jne 0x4420
0x00004436      e911feffff     jmp 0x424c
0x0000443b      89d0           mov eax, edx
0x0000443d      e955f5ffff     jmp 0x3997
0x00004442      0fb61c08       movzx ebx, byte [rax + rcx]
0x00004446      80fb3e         cmp bl, 0x3e
0x00004449      0f8771f8ffff   ja 0x3cc0
0x0000444f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00004459      480fa3d8       bt rax, rbx
0x0000445d      0f835df8ffff   jae 0x3cc0
0x00004463      807c240f00     cmp byte [rsp + 0xf], 0
0x00004468      0f85e4010000   jne 0x4652                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000446e      4d39fd         cmp r13, r15
0x00004471      7605           jbe 0x4478
0x00004473      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00004478      498d4701       lea rax, [r15 + 1]
0x0000447c      4939c5         cmp r13, rax
0x0000447f      7606           jbe 0x4487
0x00004481      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004487      498d4702       lea rax, [r15 + 2]
0x0000448b      4939c5         cmp r13, rax
0x0000448e      7606           jbe 0x4496
0x00004490      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004496      498d4703       lea rax, [r15 + 3]
0x0000449a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000449d      7606           jbe 0x44a5
0x0000449f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x000044a5      4983c704       add r15, 4
0x000044a9      31d2           xor edx, edx
0x000044ab      4531e4         xor r12d, r12d
0x000044ae      31c0           xor eax, eax
0x000044b0      4889cd         mov rbp, rcx
0x000044b3      e9c0f1ffff     jmp 0x3678
0x000044b8      85db           test ebx, ebx
0x000044ba      0f8488010000   je 0x4648
0x000044c0      488d05c42300.  lea rax, str.l______l                   ; 0x688b ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000044c7      c644240e01     mov byte [rsp + 0xe], 1
0x000044cc      c644247c00     mov byte [rsp + 0x7c], 0
0x000044d1      4531e4         xor r12d, r12d
0x000044d4      48c744245000.  mov qword [rsp + 0x50], 0
0x000044dd      c644240f01     mov byte [rsp + 0xf], 1
0x000044e2      c644240d00     mov byte [rsp + 0xd], 0
0x000044e7      48c744241801.  mov qword [rsp + 0x18], 1
0x000044f0      4531ff         xor r15d, r15d
0x000044f3      4889442448     mov qword [rsp + 0x48], rax
0x000044f8      e926f0ffff     jmp 0x3523
0x000044fd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00004500      4c89dd         mov rbp, r11
0x00004503      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004508      e9ccfaffff     jmp 0x3fd9
0x0000450d      488d05591c00.  lea rax, [0x0000616d]                   ; "\""
0x00004514      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00004519      c644247c00     mov byte [rsp + 0x7c], 0
0x0000451e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00004521      48c744245000.  mov qword [rsp + 0x50], 0
0x0000452a      c644240f01     mov byte [rsp + 0xf], 1
0x0000452f      c644240d01     mov byte [rsp + 0xd], 1
0x00004534      48c744241801.  mov qword [rsp + 0x18], 1
0x0000453d      4531ff         xor r15d, r15d
0x00004540      4889442448     mov qword [rsp + 0x48], rax
0x00004545      e9d9efffff     jmp 0x3523
0x0000454a      89d0           mov eax, edx
0x0000454c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00004551      4885db         test rbx, rbx
0x00004554      742c           je 0x4582
0x00004556      84c0           test al, al
0x00004558      7428           je 0x4582
0x0000455a      0fb60b         movzx ecx, byte [rbx]
0x0000455d      4889d8         mov rax, rbx
0x00004560      84c9           test cl, cl
0x00004562      741e           je 0x4582
0x00004564      4c89fa         mov rdx, r15
0x00004567      4c29f8         sub rax, r15
0x0000456a      4939d5         cmp r13, rdx
0x0000456d      7604           jbe 0x4573
0x0000456f      41880c16       mov byte [r14 + rdx], cl
0x00004573      4883c201       add rdx, 1
0x00004577      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000457b      84c9           test cl, cl
0x0000457d      75eb           jne 0x456a
0x0000457f      4989d7         mov r15, rdx
0x00004582      4d39fd         cmp r13, r15
0x00004585      0f869efaffff   jbe 0x4029
0x0000458b      43c6043e00     mov byte [r14 + r15], 0
0x00004590      e994faffff     jmp 0x4029
0x00004595      837c240802     cmp dword [rsp + 8], 2
0x0000459a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000459f      4c89dd         mov rbp, r11
0x000045a2      0f94c0         sete al
0x000045a5      885c240d       mov byte [rsp + 0xd], bl
0x000045a9      e92bfaffff     jmp 0x3fd9
0x000045ae      8b742408       mov esi, dword [rsp + 8]
0x000045b2      4889cf         mov rdi, rcx
0x000045b5      e8a6edffff     call sym.gettext_quote.part.1
0x000045ba      4889442468     mov qword [rsp + 0x68], rax
0x000045bf      e952fcffff     jmp 0x4216
0x000045c4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x000045c8      4889cf         mov rdi, rcx
0x000045cb      e890edffff     call sym.gettext_quote.part.1
0x000045d0      4889442460     mov qword [rsp + 0x60], rax
0x000045d5      e967fcffff     jmp 0x4241
0x000045da      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000045df      4c89dd         mov rbp, r11
0x000045e2      89d0           mov eax, edx
0x000045e4      885c240d       mov byte [rsp + 0xd], bl
0x000045e8      e9ecf9ffff     jmp 0x3fd9
0x000045ed      4883ec08       sub rsp, 8
0x000045f1      41b805000000   mov r8d, 5
0x000045f7      4c89d9         mov rcx, r11
0x000045fa      ff742468       push qword [rsp + 0x68]
0x000045fe      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00004602      4c89f7         mov rdi, r14
0x00004605      ff742438       push qword [rsp + 0x38]
0x00004609      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004611      488b542430     mov rdx, qword [rsp + 0x30]
0x00004616      488b742470     mov rsi, qword [rsp + 0x70]
0x0000461b      e830eeffff     call sym.quotearg_buffer_restyled
0x00004620      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00004624      4989c7         mov r15, rax
0x00004627      e9fdf9ffff     jmp 0x4029
0x0000462c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00004631      e916ffffff     jmp 0x454c
0x00004636      c74424080200.  mov dword [rsp + 8], 2
0x0000463e      e996f9ffff     jmp 0x3fd9
0x00004643      e848cfffff     call sym.imp.__stack_chk_fail
0x00004648      c644240d00     mov byte [rsp + 0xd], 0
0x0000464d      e96ffaffff     jmp 0x40c1
0x00004652      4c89dd         mov rbp, r11
0x00004655      e996f9ffff     jmp 0x3ff0
0x0000465a      c644240e01     mov byte [rsp + 0xe], 1
0x0000465f      31c0           xor eax, eax
0x00004661      4531e4         xor r12d, r12d
0x00004664      48c744245000.  mov qword [rsp + 0x50], 0
0x0000466d      e9a2f5ffff     jmp 0x3c14
0x00004672      4c89ea         mov rdx, r13
0x00004675      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000467a      e9f3f5ffff     jmp 0x3c72
0x0000467f      e85cceffff     call sym.imp.abort
0x00004684      6690           nop
0x00004686      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00004690      4157           push r15
0x00004692      4156           push r14
0x00004694      4c63ff         movsxd r15, edi
0x00004697      4155           push r13
0x00004699      4154           push r12
0x0000469b      4989d6         mov r14, rdx
0x0000469e      55             push rbp
0x0000469f      53             push rbx
0x000046a0      4889cd         mov rbp, rcx
0x000046a3      4883ec28       sub rsp, 0x28
0x000046a7      4889742408     mov qword [rsp + 8], rsi
0x000046ac      e83fceffff     call sym.imp.__errno_location
0x000046b1      4989c5         mov r13, rax
0x000046b4      8b00           mov eax, dword [rax]
0x000046b6      4585ff         test r15d, r15d
0x000046b9      488b1da04920.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x000046c0      89442418       mov dword [rsp + 0x18], eax
0x000046c4      0f8867010000   js 0x4831
0x000046ca      44393d874920.  cmp dword [obj.nslots], r15d            ; [0x209058:4]=1
0x000046d1      7f62           jg 0x4735
0x000046d3      4181ffffffff.  cmp r15d, 0x7fffffff
0x000046da      0f8456010000   je 0x4836
0x000046e0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000046e4      488d05854920.  lea rax, obj.slotvec0                   ; 0x209070
0x000046eb      4963f4         movsxd rsi, r12d
0x000046ee      48c1e604       shl rsi, 4
0x000046f2      4839c3         cmp rbx, rax
0x000046f5      0f8415010000   je 0x4810
0x000046fb      4889df         mov rdi, rbx
0x000046fe      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00004703      4889c3         mov rbx, rax
0x00004706      488905534920.  mov qword [obj.slotvec], rax            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x0000470d      48633d444920.  movsxd rdi, dword [obj.nslots]          ; [0x209058:4]=1
0x00004714      4489e2         mov edx, r12d
0x00004717      31f6           xor esi, esi
0x00004719      29fa           sub edx, edi
0x0000471b      48c1e704       shl rdi, 4
0x0000471f      4863d2         movsxd rdx, edx
0x00004722      4801df         add rdi, rbx
0x00004725      48c1e204       shl rdx, 4
0x00004729      e8f2ceffff     call sym.imp.memset
0x0000472e      448925234920.  mov dword [obj.nslots], r12d            ; [0x209058:4]=1
0x00004735      8b4504         mov eax, dword [rbp + 4]
0x00004738      49c1e704       shl r15, 4
0x0000473c      4883ec08       sub rsp, 8
0x00004740      4c01fb         add rbx, r15
0x00004743      4c8d7d08       lea r15, [rbp + 8]
0x00004747      448b4500       mov r8d, dword [rbp]
0x0000474b      4c8b1b         mov r11, qword [rbx]
0x0000474e      4c8b6308       mov r12, qword [rbx + 8]
0x00004752      4c89f1         mov rcx, r14
0x00004755      83c801         or eax, 1
0x00004758      89442424       mov dword [rsp + 0x24], eax
0x0000475c      ff7530         push qword [rbp + 0x30]
0x0000475f      4189c1         mov r9d, eax
0x00004762      ff7528         push qword [rbp + 0x28]
0x00004765      4157           push r15
0x00004767      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000476a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000476f      4c89e7         mov rdi, r12
0x00004772      4c895c2430     mov qword [rsp + 0x30], r11
0x00004777      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000477c      4883c420       add rsp, 0x20
0x00004780      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00004785      4939c3         cmp r11, rax
0x00004788      7767           ja 0x47f1
0x0000478a      488d7001       lea rsi, [rax + 1]
0x0000478e      488d05cbf920.  lea rax, obj.slot0                      ; 0x214160
0x00004795      4939c4         cmp r12, rax
0x00004798      488933         mov qword [rbx], rsi
0x0000479b      7412           je 0x47af
0x0000479d      4c89e7         mov rdi, r12
0x000047a0      4889742410     mov qword [rsp + 0x10], rsi
0x000047a5      e826cdffff     call sym.imp.free
0x000047aa      488b742410     mov rsi, qword [rsp + 0x10]
0x000047af      4889f7         mov rdi, rsi
0x000047b2      4889742410     mov qword [rsp + 0x10], rsi
0x000047b7      e8540e0000     call sym.xmalloc
0x000047bc      4883ec08       sub rsp, 8
0x000047c0      48894308       mov qword [rbx + 8], rax
0x000047c4      448b4500       mov r8d, dword [rbp]
0x000047c8      ff7530         push qword [rbp + 0x30]
0x000047cb      ff7528         push qword [rbp + 0x28]
0x000047ce      4c89f1         mov rcx, r14
0x000047d1      4157           push r15
0x000047d3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x000047d8      4889c7         mov rdi, rax
0x000047db      488b542428     mov rdx, qword [rsp + 0x28]
0x000047e0      488b742430     mov rsi, qword [rsp + 0x30]
0x000047e5      4989c4         mov r12, rax
0x000047e8      e863ecffff     call sym.quotearg_buffer_restyled
0x000047ed      4883c420       add rsp, 0x20
0x000047f1      8b442418       mov eax, dword [rsp + 0x18]
0x000047f5      41894500       mov dword [r13], eax
0x000047f9      4883c428       add rsp, 0x28
0x000047fd      4c89e0         mov rax, r12
0x00004800      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004801      5d             pop rbp
0x00004802      415c           pop r12
0x00004804      415d           pop r13
0x00004806      415e           pop r14
0x00004808      415f           pop r15
0x0000480a      c3             ret
0x0000480b      0f1f440000     nop dword [rax + rax]
0x00004810      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004812      e8590e0000     call sym.xrealloc
0x00004817      660f6f055148.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000481f      4889c3         mov rbx, rax
0x00004822      488905374820.  mov qword [obj.slotvec], rax            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x00004829      0f1100         movups xmmword [rax], xmm0
0x0000482c      e9dcfeffff     jmp 0x470d
0x00004831      e8aaccffff     call sym.imp.abort
0x00004836      e825100000     call sym.xalloc_die
0x0000483b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004840      4154           push r12
0x00004842      55             push rbp
0x00004843      53             push rbx
0x00004844      4889fb         mov rbx, rdi
0x00004847      e8a4ccffff     call sym.imp.__errno_location
0x0000484c      448b20         mov r12d, dword [rax]
0x0000484f      4889c5         mov rbp, rax
0x00004852      488d0507fa20.  lea rax, obj.default_quoting_options    ; 0x214260
0x00004859      4885db         test rbx, rbx
0x0000485c      be38000000     mov esi, 0x38                           ; '8'
0x00004861      480f44d8       cmove rbx, rax
0x00004865      4889df         mov rdi, rbx
0x00004868      e8a30f0000     call sym.xmemdup
0x0000486d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004871      5b             pop rbx
0x00004872      5d             pop rbp
0x00004873      415c           pop r12
0x00004875      c3             ret
0x00004876      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004880      488d05d9f920.  lea rax, obj.default_quoting_options    ; 0x214260
0x00004887      4885ff         test rdi, rdi
0x0000488a      480f44f8       cmove rdi, rax
0x0000488e      8b07           mov eax, dword [rdi]
0x00004890      c3             ret
0x00004891      0f1f440000     nop dword [rax + rax]
0x00004896      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x000048a0      488d05b9f920.  lea rax, obj.default_quoting_options    ; 0x214260
0x000048a7      4885ff         test rdi, rdi
0x000048aa      480f44f8       cmove rdi, rax
0x000048ae      8937           mov dword [rdi], esi
0x000048b0      c3             ret
0x000048b1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000048b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x000048c0      488d0599f920.  lea rax, obj.default_quoting_options    ; 0x214260
0x000048c7      4885ff         test rdi, rdi
0x000048ca      89f1           mov ecx, esi
0x000048cc      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x000048d0      89f0           mov eax, esi
0x000048d2      83e11f         and ecx, 0x1f
0x000048d5      c0e805         shr al, 5
0x000048d8      0fb6c0         movzx eax, al
0x000048db      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x000048e0      8b37           mov esi, dword [rdi]
0x000048e2      89f0           mov eax, esi
0x000048e4      d3e8           shr eax, cl
0x000048e6      31c2           xor edx, eax
0x000048e8      83e001         and eax, 1
0x000048eb      83e201         and edx, 1
0x000048ee      d3e2           shl edx, cl
0x000048f0      31f2           xor edx, esi
0x000048f2      8917           mov dword [rdi], edx
0x000048f4      c3             ret
0x000048f5      90             nop
0x000048f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004900      488d0559f920.  lea rax, obj.default_quoting_options    ; 0x214260
0x00004907      4885ff         test rdi, rdi
0x0000490a      480f44f8       cmove rdi, rax
0x0000490e      8b4704         mov eax, dword [rdi + 4]
0x00004911      897704         mov dword [rdi + 4], esi
0x00004914      c3             ret
0x00004915      90             nop
0x00004916      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004920      488d0539f920.  lea rax, obj.default_quoting_options    ; 0x214260
0x00004927      4885ff         test rdi, rdi
0x0000492a      480f44f8       cmove rdi, rax
0x0000492e      4885f6         test rsi, rsi
0x00004931      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004937      740e           je 0x4947
0x00004939      4885d2         test rdx, rdx
0x0000493c      7409           je 0x4947
0x0000493e      48897728       mov qword [rdi + 0x28], rsi
0x00004942      48895730       mov qword [rdi + 0x30], rdx
0x00004946      c3             ret
0x00004947      4883ec08       sub rsp, 8
0x0000494b      e890cbffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004950      4157           push r15
0x00004952      4156           push r14
0x00004954      488d0505f920.  lea rax, obj.default_quoting_options    ; 0x214260
0x0000495b      4155           push r13
0x0000495d      4154           push r12
0x0000495f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004962      55             push rbp
0x00004963      53             push rbx
0x00004964      4c89c3         mov rbx, r8
0x00004967      4989f6         mov r14, rsi
0x0000496a      4989d7         mov r15, rdx
0x0000496d      4883ec18       sub rsp, 0x18
0x00004971      4d85c0         test r8, r8
0x00004974      480f44d8       cmove rbx, rax
0x00004978      48894c2408     mov qword [rsp + 8], rcx
0x0000497d      e86ecbffff     call sym.imp.__errno_location
0x00004982      448b20         mov r12d, dword [rax]
0x00004985      4889c5         mov rbp, rax
0x00004988      488d4308       lea rax, [rbx + 8]
0x0000498c      4883ec08       sub rsp, 8
0x00004990      448b4b04       mov r9d, dword [rbx + 4]
0x00004994      ff7330         push qword [rbx + 0x30]
0x00004997      448b03         mov r8d, dword [rbx]
0x0000499a      ff7328         push qword [rbx + 0x28]
0x0000499d      4c89fa         mov rdx, r15
0x000049a0      50             push rax
0x000049a1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000049a6      4c89f6         mov rsi, r14
0x000049a9      4c89ef         mov rdi, r13
0x000049ac      e89feaffff     call sym.quotearg_buffer_restyled
0x000049b1      44896500       mov dword [rbp], r12d
0x000049b5      4883c438       add rsp, 0x38
0x000049b9      5b             pop rbx
0x000049ba      5d             pop rbp
0x000049bb      415c           pop r12
0x000049bd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000049bf      415e           pop r14
0x000049c1      415f           pop r15
0x000049c3      c3             ret
0x000049c4      6690           nop
0x000049c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x000049d0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x000049d2      4156           push r14
0x000049d4      488d0585f820.  lea rax, obj.default_quoting_options    ; 0x214260
0x000049db      4155           push r13
0x000049dd      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x000049df      4989d4         mov r12, rdx
0x000049e2      55             push rbp
0x000049e3      53             push rbx
0x000049e4      4889cb         mov rbx, rcx
0x000049e7      4989fe         mov r14, rdi
0x000049ea      4989f7         mov r15, rsi
0x000049ed      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000049f1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000049f4      480f44d8       cmove rbx, rax
0x000049f8      31ed           xor ebp, ebp
0x000049fa      e8f1caffff     call sym.imp.__errno_location
0x000049ff      4d85e4         test r12, r12
0x00004a02      4989c5         mov r13, rax
0x00004a05      8b00           mov eax, dword [rax]
0x00004a07      400f94c5       sete bpl
0x00004a0b      0b6b04         or ebp, dword [rbx + 4]
0x00004a0e      4c8d5308       lea r10, [rbx + 8]
0x00004a12      4883ec08       sub rsp, 8
0x00004a16      448b03         mov r8d, dword [rbx]
0x00004a19      4c89f9         mov rcx, r15
0x00004a1c      89442414       mov dword [rsp + 0x14], eax
0x00004a20      ff7330         push qword [rbx + 0x30]
0x00004a23      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004a26      ff7328         push qword [rbx + 0x28]
0x00004a29      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00004a2b      31f6           xor esi, esi
0x00004a2d      4189e9         mov r9d, ebp
0x00004a30      31ff           xor edi, edi
0x00004a32      4c89542440     mov qword [rsp + 0x40], r10
0x00004a37      e814eaffff     call sym.quotearg_buffer_restyled
0x00004a3c      488d7001       lea rsi, [rax + 1]
0x00004a40      4889442448     mov qword [rsp + 0x48], rax
0x00004a45      4883c420       add rsp, 0x20
0x00004a49      4889f7         mov rdi, rsi
0x00004a4c      4889742418     mov qword [rsp + 0x18], rsi
0x00004a51      e8ba0b0000     call sym.xmalloc
0x00004a56      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00004a5b      4883ec08       sub rsp, 8
0x00004a5f      ff7330         push qword [rbx + 0x30]
0x00004a62      ff7328         push qword [rbx + 0x28]
0x00004a65      4c8b542438     mov r10, qword [rsp + 0x38]
0x00004a6a      4189e9         mov r9d, ebp
0x00004a6d      448b03         mov r8d, dword [rbx]
0x00004a70      4c89f9         mov rcx, r15
0x00004a73      4c89f2         mov rdx, r14
0x00004a76      4889c7         mov rdi, rax
0x00004a79      4152           push r10
0x00004a7b      488b742438     mov rsi, qword [rsp + 0x38]
0x00004a80      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004a85      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004a89      4883c420       add rsp, 0x20
0x00004a8d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004a90      41894500       mov dword [r13], eax
0x00004a94      7409           je 0x4a9f
0x00004a96      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00004a9b      4d891c24       mov qword [r12], r11
0x00004a9f      488b442410     mov rax, qword [rsp + 0x10]
0x00004aa4      4883c438       add rsp, 0x38
0x00004aa8      5b             pop rbx
0x00004aa9      5d             pop rbp
0x00004aaa      415c           pop r12
0x00004aac      415d           pop r13
0x00004aae      415e           pop r14
0x00004ab0      415f           pop r15
0x00004ab2      c3             ret
0x00004ab3      0f1f00         nop dword [rax]
0x00004ab6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004ac0      4889d1         mov rcx, rdx
0x00004ac3      31d2           xor edx, edx
0x00004ac5      e906ffffff     jmp sym.quotearg_alloc_mem
0x00004aca      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004ad0      8b0582452000   mov eax, dword [obj.nslots]             ; [0x209058:4]=1
0x00004ad6      4154           push r12
0x00004ad8      4c8b25814520.  mov r12, qword [obj.slotvec]            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x00004adf      55             push rbp
0x00004ae0      53             push rbx
0x00004ae1      83f801         cmp eax, 1
0x00004ae4      7e2b           jle 0x4b11                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004ae6      83e802         sub eax, 2
0x00004ae9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004aee      48c1e004       shl rax, 4
0x00004af2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004af7      660f1f840000.  nop word [rax + rax]
0x00004b00      488b3b         mov rdi, qword [rbx]
0x00004b03      4883c310       add rbx, 0x10
0x00004b07      e8c4c9ffff     call sym.imp.free
0x00004b0c      4839eb         cmp rbx, rbp
0x00004b0f      75ef           jne 0x4b00
0x00004b11      498b7c2408     mov rdi, qword [r12 + 8]
0x00004b16      488d1d43f620.  lea rbx, obj.slot0                      ; 0x214160
0x00004b1d      4839df         cmp rdi, rbx
0x00004b20      7417           je 0x4b39
0x00004b22      e8a9c9ffff     call sym.imp.free
0x00004b27      48c7053e4520.  mov qword [obj.slotvec0], 0x100         ; [0x209070:8]=256
0x00004b32      48891d3f4520.  mov qword [0x00209078], rbx             ; [0x209078:8]=0x214160 obj.slot0
0x00004b39      488d1d304520.  lea rbx, obj.slotvec0                   ; 0x209070
0x00004b40      4939dc         cmp r12, rbx
0x00004b43      740f           je 0x4b54
0x00004b45      4c89e7         mov rdi, r12
0x00004b48      e883c9ffff     call sym.imp.free
0x00004b4d      48891d0c4520.  mov qword [obj.slotvec], rbx            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x00004b54      5b             pop rbx
0x00004b55      c705f9442000.  mov dword [obj.nslots], 1               ; [0x209058:4]=1
0x00004b5f      5d             pop rbp
0x00004b60      415c           pop r12
0x00004b62      c3             ret
0x00004b63      0f1f00         nop dword [rax]
0x00004b66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004b70      488d0de9f620.  lea rcx, obj.default_quoting_options    ; 0x214260
0x00004b77      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004b7e      e90dfbffff     jmp sym.quotearg_n_options
0x00004b83      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004b86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004b90      488d0dc9f620.  lea rcx, obj.default_quoting_options    ; 0x214260
0x00004b97      e9f4faffff     jmp sym.quotearg_n_options
0x00004b9c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004ba0      488d0db9f620.  lea rcx, obj.default_quoting_options    ; 0x214260
0x00004ba7      4889fe         mov rsi, rdi
0x00004baa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004bb1      31ff           xor edi, edi
0x00004bb3      e9d8faffff     jmp sym.quotearg_n_options
0x00004bb8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004bc0      488d0d99f620.  lea rcx, obj.default_quoting_options    ; 0x214260
0x00004bc7      4889f2         mov rdx, rsi
0x00004bca      4889fe         mov rsi, rdi
0x00004bcd      31ff           xor edi, edi
0x00004bcf      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004bd4      6690           nop
0x00004bd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004be0      4883ec48       sub rsp, 0x48
0x00004be4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004be7      64488b142528.  mov rdx, qword fs:[0x28]
0x00004bf0      4889542438     mov qword [rsp + 0x38], rdx
0x00004bf5      31d2           xor edx, edx
0x00004bf7      83fe0a         cmp esi, 0xa
0x00004bfa      7468           je 0x4c64
0x00004bfc      893424         mov dword [rsp], esi
0x00004bff      4889e1         mov rcx, rsp
0x00004c02      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004c09      4889c6         mov rsi, rax
0x00004c0c      48c744240400.  mov qword [rsp + 4], 0
0x00004c15      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004c1e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004c27      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004c30      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004c39      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004c42      c74424340000.  mov dword [rsp + 0x34], 0
0x00004c4a      e841faffff     call sym.quotearg_n_options
0x00004c4f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004c54      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004c5d      750a           jne 0x4c69                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00004c5f      4883c448       add rsp, 0x48
0x00004c63      c3             ret
0x00004c64      e877c8ffff     call sym.imp.abort
0x00004c69      e822c9ffff     call sym.imp.__stack_chk_fail
0x00004c6e      6690           nop
;-- quotearg_n_style_mem:
0x00004c70      4883ec48       sub rsp, 0x48
0x00004c74      4889d0         mov rax, rdx
0x00004c77      4889ca         mov rdx, rcx
0x00004c7a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004c83      48894c2438     mov qword [rsp + 0x38], rcx
0x00004c88      31c9           xor ecx, ecx
0x00004c8a      83fe0a         cmp esi, 0xa
0x00004c8d      7461           je 0x4cf0
0x00004c8f      893424         mov dword [rsp], esi
0x00004c92      4889e1         mov rcx, rsp
0x00004c95      4889c6         mov rsi, rax
0x00004c98      48c744240400.  mov qword [rsp + 4], 0
0x00004ca1      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004caa      48c744241400.  mov qword [rsp + 0x14], 0
0x00004cb3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004cbc      48c744242400.  mov qword [rsp + 0x24], 0
0x00004cc5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004cce      c74424340000.  mov dword [rsp + 0x34], 0
0x00004cd6      e8b5f9ffff     call sym.quotearg_n_options
0x00004cdb      488b542438     mov rdx, qword [rsp + 0x38]
0x00004ce0      644833142528.  xor rdx, qword fs:[0x28]
0x00004ce9      750a           jne 0x4cf5
0x00004ceb      4883c448       add rsp, 0x48
0x00004cef      c3             ret
0x00004cf0      e8ebc7ffff     call sym.imp.abort
0x00004cf5      e896c8ffff     call sym.imp.__stack_chk_fail
0x00004cfa      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004d00      4889f2         mov rdx, rsi
0x00004d03      89fe           mov esi, edi
0x00004d05      31ff           xor edi, edi
0x00004d07      e9d4feffff     jmp sym.quotearg_n_style
0x00004d0c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004d10      4889d1         mov rcx, rdx
0x00004d13      4889f2         mov rdx, rsi
0x00004d16      89fe           mov esi, edi
0x00004d18      31ff           xor edi, edi
0x00004d1a      e951ffffff     jmp sym.quotearg_n_style_mem
0x00004d1f      90             nop
;-- quotearg_char_mem:
0x00004d20      4883ec48       sub rsp, 0x48
0x00004d24      89d1           mov ecx, edx
0x00004d26      64488b042528.  mov rax, qword fs:[0x28]
0x00004d2f      4889442438     mov qword [rsp + 0x38], rax
0x00004d34      31c0           xor eax, eax
0x00004d36      488b0553f520.  mov rax, qword [0x00214290]             ; [0x214290:8]=0
0x00004d3d      4989e0         mov r8, rsp
0x00004d40      83e11f         and ecx, 0x1f
0x00004d43      660f6f0515f5.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004d4b      4889442430     mov qword [rsp + 0x30], rax
0x00004d50      89d0           mov eax, edx
0x00004d52      0f290424       movaps xmmword [rsp], xmm0
0x00004d56      c0e805         shr al, 5
0x00004d59      0fb6c0         movzx eax, al
0x00004d5c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004d61      660f6f0507f5.  movdqa xmm0, xmmword [0x00214270]
0x00004d69      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004d6e      660f6f050af5.  movdqa xmm0, xmmword [0x00214280]
0x00004d76      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004d7b      418b11         mov edx, dword [r9]
0x00004d7e      89d0           mov eax, edx
0x00004d80      d3e8           shr eax, cl
0x00004d82      f7d0           not eax
0x00004d84      83e001         and eax, 1
0x00004d87      d3e0           shl eax, cl
0x00004d89      4c89c1         mov rcx, r8
0x00004d8c      31d0           xor eax, edx
0x00004d8e      4889f2         mov rdx, rsi
0x00004d91      4889fe         mov rsi, rdi
0x00004d94      418901         mov dword [r9], eax
0x00004d97      31ff           xor edi, edi
0x00004d99      e8f2f8ffff     call sym.quotearg_n_options
0x00004d9e      488b742438     mov rsi, qword [rsp + 0x38]
0x00004da3      644833342528.  xor rsi, qword fs:[0x28]
0x00004dac      7505           jne 0x4db3
0x00004dae      4883c448       add rsp, 0x48
0x00004db2      c3             ret
0x00004db3      e8d8c7ffff     call sym.imp.__stack_chk_fail
0x00004db8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004dc0      400fbed6       movsx edx, sil
0x00004dc4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004dcb      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00004dd0      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004dd5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004ddc      e93fffffff     jmp sym.quotearg_char_mem
0x00004de1      0f1f440000     nop dword [rax + rax]
0x00004de6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004df0      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004df5      e926ffffff     jmp sym.quotearg_char_mem
0x00004dfa      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004e00      4883ec48       sub rsp, 0x48
0x00004e04      4889d0         mov rax, rdx
0x00004e07      64488b142528.  mov rdx, qword fs:[0x28]
0x00004e10      4889542438     mov qword [rsp + 0x38], rdx
0x00004e15      31d2           xor edx, edx
0x00004e17      83fe0a         cmp esi, 0xa
0x00004e1a      7468           je 0x4e84
0x00004e1c      893424         mov dword [rsp], esi
0x00004e1f      4889e1         mov rcx, rsp
0x00004e22      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004e29      4889c6         mov rsi, rax
0x00004e2c      48c744240400.  mov qword [rsp + 4], 0
0x00004e35      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00004e3e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004e47      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004e50      48c744242400.  mov qword [rsp + 0x24], 0
0x00004e59      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004e62      c74424340000.  mov dword [rsp + 0x34], 0
0x00004e6a      e821f8ffff     call sym.quotearg_n_options
0x00004e6f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004e74      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004e7d      750a           jne 0x4e89
0x00004e7f      4883c448       add rsp, 0x48
0x00004e83      c3             ret
0x00004e84      e857c6ffff     call sym.imp.abort
0x00004e89      e802c7ffff     call sym.imp.__stack_chk_fail
0x00004e8e      6690           nop
;-- quotearg_n_custom_mem:
0x00004e90      4883ec48       sub rsp, 0x48
0x00004e94      4989c9         mov r9, rcx
0x00004e97      488b0df2f320.  mov rcx, qword [0x00214290]             ; [0x214290:8]=0
0x00004e9e      660f6f05baf3.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004ea6      64488b042528.  mov rax, qword fs:[0x28]
0x00004eaf      4889442438     mov qword [rsp + 0x38], rax
0x00004eb4      31c0           xor eax, eax
0x00004eb6      0f290424       movaps xmmword [rsp], xmm0
0x00004eba      4885f6         test rsi, rsi
0x00004ebd      48894c2430     mov qword [rsp + 0x30], rcx
0x00004ec2      c704240a0000.  mov dword [rsp], 0xa
0x00004ec9      660f6f059ff3.  movdqa xmm0, xmmword [0x00214270]
0x00004ed1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004ed6      660f6f05a2f3.  movdqa xmm0, xmmword [0x00214280]
0x00004ede      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004ee3      7432           je 0x4f17
0x00004ee5      4885d2         test rdx, rdx
0x00004ee8      742d           je 0x4f17
0x00004eea      4889742428     mov qword [rsp + 0x28], rsi
0x00004eef      4889542430     mov qword [rsp + 0x30], rdx
0x00004ef4      4889e1         mov rcx, rsp
0x00004ef7      4c89c2         mov rdx, r8
0x00004efa      4c89ce         mov rsi, r9
0x00004efd      e88ef7ffff     call sym.quotearg_n_options
0x00004f02      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004f07      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004f10      750a           jne 0x4f1c
0x00004f12      4883c448       add rsp, 0x48
0x00004f16      c3             ret
0x00004f17      e8c4c5ffff     call sym.imp.abort
0x00004f1c      e86fc6ffff     call sym.imp.__stack_chk_fail
0x00004f21      0f1f440000     nop dword [rax + rax]
0x00004f26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004f30      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004f37      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00004f3c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004f40      4889d1         mov rcx, rdx
0x00004f43      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004f4a      4889f2         mov rdx, rsi
0x00004f4d      4889fe         mov rsi, rdi
0x00004f50      31ff           xor edi, edi
0x00004f52      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004f57      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004f60      4989c8         mov r8, rcx
0x00004f63      4889d1         mov rcx, rdx
0x00004f66      4889f2         mov rdx, rsi
0x00004f69      4889fe         mov rsi, rdi
0x00004f6c      31ff           xor edi, edi
0x00004f6e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004f73      0f1f00         nop dword [rax]
0x00004f76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004f80      488d0d994020.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x00004f87      e904f7ffff     jmp sym.quotearg_n_options
0x00004f8c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004f90      488d0d894020.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x00004f97      4889f2         mov rdx, rsi
0x00004f9a      4889fe         mov rsi, rdi
0x00004f9d      31ff           xor edi, edi
0x00004f9f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00004fa4      6690           nop
0x00004fa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00004fb0      488d0d694020.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x00004fb7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004fbe      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004fc3      0f1f00         nop dword [rax]
0x00004fc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00004fd0      488d0d494020.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x00004fd7      4889fe         mov rsi, rdi
0x00004fda      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004fe1      31ff           xor edi, edi
0x00004fe3      e9a8f6ffff     jmp sym.quotearg_n_options
0x00004fe8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00004ff0      4157           push r15
0x00004ff2      4156           push r14
0x00004ff4      4155           push r13
0x00004ff6      4154           push r12
0x00004ff8      4d89cc         mov r12, r9
0x00004ffb      55             push rbp
0x00004ffc      53             push rbx
0x00004ffd      4889fd         mov rbp, rdi
0x00005000      4c89c3         mov rbx, r8
0x00005003      4883ec28       sub rsp, 0x28
0x00005007      4885f6         test rsi, rsi
0x0000500a      0f8418010000   je 0x5128
0x00005010      4989d0         mov r8, rdx
0x00005013      488d152e1d00.  lea rdx, [0x00006d48]                   ; "%s (%s) %s\n"
0x0000501a      4989c9         mov r9, rcx
0x0000501d      31c0           xor eax, eax
0x0000501f      4889f1         mov rcx, rsi
0x00005022      be01000000     mov esi, 1
0x00005027      e854c7ffff     call sym.imp.__fprintf_chk
0x0000502c      488d35281d00.  lea rsi, [0x00006d5b]                   ; "(C)"
0x00005033      31ff           xor edi, edi
0x00005035      ba05000000     mov edx, 5
0x0000503a      e821c5ffff     call sym.imp.dcgettext
0x0000503f      488d153a2000.  lea rdx, obj.version_etc_copyright      ; 0x7080 ; "Copyright %s %d Free Software Foundation, Inc."
0x00005046      4889c1         mov rcx, rax
0x00005049      41b8e3070000   mov r8d, 0x7e3
0x0000504f      be01000000     mov esi, 1
0x00005054      4889ef         mov rdi, rbp
0x00005057      31c0           xor eax, eax
0x00005059      e822c7ffff     call sym.imp.__fprintf_chk
0x0000505e      488d35831d00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x6de8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00005065      31ff           xor edi, edi
0x00005067      ba05000000     mov edx, 5
0x0000506c      e8efc4ffff     call sym.imp.dcgettext
0x00005071      4889ee         mov rsi, rbp
0x00005074      4889c7         mov rdi, rax
0x00005077      e8d4c5ffff     call sym.imp.fputs_unlocked
0x0000507c      4983fc09       cmp r12, 9
0x00005080      0f873a030000   ja 0x53c0
0x00005086      488d15b71f00.  lea rdx, [0x00007044]
0x0000508d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00005091      4801d0         add rax, rdx
0x00005094      ffe0           jmp rax
0x00005096      662e0f1f8400.  nop word cs:[rax + rax]
0x000050a0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000050a4      488b4310       mov rax, qword [rbx + 0x10]
0x000050a8      488d35a91e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x6f58 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x000050af      4c8b4308       mov r8, qword [rbx + 8]
0x000050b3      ba05000000     mov edx, 5
0x000050b8      31ff           xor edi, edi
0x000050ba      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000050be      4c8b6328       mov r12, qword [rbx + 0x28]
0x000050c2      4c894c2410     mov qword [rsp + 0x10], r9
0x000050c7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000050cb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000050cf      48890424       mov qword [rsp], rax
0x000050d3      4c89442408     mov qword [rsp + 8], r8
0x000050d8      488b1b         mov rbx, qword [rbx]
0x000050db      e880c4ffff     call sym.imp.dcgettext
0x000050e0      4883ec08       sub rsp, 8
0x000050e4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000050e9      4889c2         mov rdx, rax
0x000050ec      4889d9         mov rcx, rbx
0x000050ef      be01000000     mov esi, 1
0x000050f4      4889ef         mov rdi, rbp
0x000050f7      31c0           xor eax, eax
0x000050f9      4151           push r9
0x000050fb      4155           push r13
0x000050fd      4154           push r12
0x000050ff      4157           push r15
0x00005101      4156           push r14
0x00005103      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005108      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000510d      e86ec6ffff     call sym.imp.__fprintf_chk
0x00005112      4883c430       add rsp, 0x30
0x00005116      4883c428       add rsp, 0x28
0x0000511a      5b             pop rbx
0x0000511b      5d             pop rbp
0x0000511c      415c           pop r12
0x0000511e      415d           pop r13
0x00005120      415e           pop r14
0x00005122      415f           pop r15
0x00005124      c3             ret
0x00005125      0f1f00         nop dword [rax]
0x00005128      4989c8         mov r8, rcx
0x0000512b      4889d1         mov rcx, rdx
0x0000512e      488d151f1c00.  lea rdx, str.s__s                       ; 0x6d54 ; "%s %s\n"
0x00005135      be01000000     mov esi, 1
0x0000513a      31c0           xor eax, eax
0x0000513c      e83fc6ffff     call sym.imp.__fprintf_chk
0x00005141      e9e6feffff     jmp 0x502c
0x00005146      662e0f1f8400.  nop word cs:[rax + rax]
0x00005150      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005154      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005158      488d35291e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x6f88 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000515f      488b4310       mov rax, qword [rbx + 0x10]
0x00005163      4c8b4308       mov r8, qword [rbx + 8]
0x00005167      ba05000000     mov edx, 5
0x0000516c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005170      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005174      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005178      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000517c      488b1b         mov rbx, qword [rbx]
0x0000517f      4c89542418     mov qword [rsp + 0x18], r10
0x00005184      4c894c2410     mov qword [rsp + 0x10], r9
0x00005189      48890424       mov qword [rsp], rax
0x0000518d      4c89442408     mov qword [rsp + 8], r8
0x00005192      31ff           xor edi, edi
0x00005194      e8c7c3ffff     call sym.imp.dcgettext
0x00005199      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000519e      4152           push r10
0x000051a0      e93fffffff     jmp 0x50e4
0x000051a5      0f1f00         nop dword [rax]
0x000051a8      488b1b         mov rbx, qword [rbx]
0x000051ab      488d35ad1b00.  lea rsi, str.Written_by__s.             ; 0x6d5f ; "Written by %s.\n"
0x000051b2      ba05000000     mov edx, 5
0x000051b7      31ff           xor edi, edi
0x000051b9      e8a2c3ffff     call sym.imp.dcgettext
0x000051be      4883c428       add rsp, 0x28
0x000051c2      4889d9         mov rcx, rbx
0x000051c5      4889ef         mov rdi, rbp
0x000051c8      5b             pop rbx
0x000051c9      5d             pop rbp
0x000051ca      415c           pop r12
0x000051cc      415d           pop r13
0x000051ce      415e           pop r14
0x000051d0      415f           pop r15
0x000051d2      4889c2         mov rdx, rax
0x000051d5      be01000000     mov esi, 1
0x000051da      31c0           xor eax, eax
0x000051dc      e99fc5ffff     jmp sym.imp.__fprintf_chk
0x000051e1      0f1f80000000.  nop dword [rax]
0x000051e8      4c8b6308       mov r12, qword [rbx + 8]
0x000051ec      488d357c1b00.  lea rsi, str.Written_by__s_and__s.      ; 0x6d6f ; "Written by %s and %s.\n"
0x000051f3      488b1b         mov rbx, qword [rbx]
0x000051f6      ba05000000     mov edx, 5
0x000051fb      31ff           xor edi, edi
0x000051fd      e85ec3ffff     call sym.imp.dcgettext
0x00005202      4883c428       add rsp, 0x28
0x00005206      4d89e0         mov r8, r12
0x00005209      4889d9         mov rcx, rbx
0x0000520c      4889ef         mov rdi, rbp
0x0000520f      4889c2         mov rdx, rax
0x00005212      be01000000     mov esi, 1
0x00005217      5b             pop rbx
0x00005218      5d             pop rbp
0x00005219      415c           pop r12
0x0000521b      415d           pop r13
0x0000521d      415e           pop r14
0x0000521f      415f           pop r15
0x00005221      31c0           xor eax, eax
0x00005223      e958c5ffff     jmp sym.imp.__fprintf_chk
0x00005228      0f1f84000000.  nop dword [rax + rax]
0x00005230      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005234      4c8b6308       mov r12, qword [rbx + 8]
0x00005238      488d35471b00.  lea rsi, str.Written_by__s___s__and__s. ; 0x6d86 ; "Written by %s, %s, and %s.\n"
0x0000523f      488b1b         mov rbx, qword [rbx]
0x00005242      ba05000000     mov edx, 5
0x00005247      31ff           xor edi, edi
0x00005249      e812c3ffff     call sym.imp.dcgettext
0x0000524e      4883c428       add rsp, 0x28
0x00005252      4d89e9         mov r9, r13
0x00005255      4d89e0         mov r8, r12
0x00005258      4889d9         mov rcx, rbx
0x0000525b      4889ef         mov rdi, rbp
0x0000525e      4889c2         mov rdx, rax
0x00005261      5b             pop rbx
0x00005262      5d             pop rbp
0x00005263      415c           pop r12
0x00005265      415d           pop r13
0x00005267      415e           pop r14
0x00005269      415f           pop r15
0x0000526b      be01000000     mov esi, 1
0x00005270      31c0           xor eax, eax
0x00005272      e909c5ffff     jmp sym.imp.__fprintf_chk
0x00005277      660f1f840000.  nop word [rax + rax]
0x00005280      488d35311c00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x6eb8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00005287      ba05000000     mov edx, 5
0x0000528c      31ff           xor edi, edi
0x0000528e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005292      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005296      4c8b6308       mov r12, qword [rbx + 8]
0x0000529a      488b1b         mov rbx, qword [rbx]
0x0000529d      e8bec2ffff     call sym.imp.dcgettext
0x000052a2      4883ec08       sub rsp, 8
0x000052a6      4156           push r14
0x000052a8      4889c2         mov rdx, rax
0x000052ab      4d89e9         mov r9, r13
0x000052ae      4d89e0         mov r8, r12
0x000052b1      4889d9         mov rcx, rbx
0x000052b4      4889ef         mov rdi, rbp
0x000052b7      be01000000     mov esi, 1
0x000052bc      31c0           xor eax, eax
0x000052be      e8bdc4ffff     call sym.imp.__fprintf_chk
0x000052c3      58             pop rax
0x000052c4      5a             pop rdx
0x000052c5      4883c428       add rsp, 0x28
0x000052c9      5b             pop rbx
0x000052ca      5d             pop rbp
0x000052cb      415c           pop r12
0x000052cd      415d           pop r13
0x000052cf      415e           pop r14
0x000052d1      415f           pop r15
0x000052d3      c3             ret
0x000052d4      0f1f4000       nop dword [rax]
0x000052d8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000052dc      488d35f51b00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x6ed8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x000052e3      ba05000000     mov edx, 5
0x000052e8      31ff           xor edi, edi
0x000052ea      4c8b7318       mov r14, qword [rbx + 0x18]
0x000052ee      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000052f2      4c8b6308       mov r12, qword [rbx + 8]
0x000052f6      488b1b         mov rbx, qword [rbx]
0x000052f9      e862c2ffff     call sym.imp.dcgettext
0x000052fe      4157           push r15
0x00005300      eba4           jmp 0x52a6
0x00005302      660f1f440000   nop word [rax + rax]
0x00005308      4c8b4308       mov r8, qword [rbx + 8]
0x0000530c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005310      488d35e91b00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x6f00 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00005317      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000531b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000531f      ba05000000     mov edx, 5
0x00005324      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005328      31ff           xor edi, edi
0x0000532a      488b1b         mov rbx, qword [rbx]
0x0000532d      4c890424       mov qword [rsp], r8
0x00005331      e82ac2ffff     call sym.imp.dcgettext
0x00005336      4883ec08       sub rsp, 8
0x0000533a      4d89e9         mov r9, r13
0x0000533d      4154           push r12
0x0000533f      4157           push r15
0x00005341      4156           push r14
0x00005343      4c8b442420     mov r8, qword [rsp + 0x20]
0x00005348      4889d9         mov rcx, rbx
0x0000534b      4889c2         mov rdx, rax
0x0000534e      4889ef         mov rdi, rbp
0x00005351      be01000000     mov esi, 1
0x00005356      31c0           xor eax, eax
0x00005358      e823c4ffff     call sym.imp.__fprintf_chk
0x0000535d      4883c420       add rsp, 0x20
0x00005361      4883c428       add rsp, 0x28
0x00005365      5b             pop rbx
0x00005366      5d             pop rbp
0x00005367      415c           pop r12
0x00005369      415d           pop r13
0x0000536b      415e           pop r14
0x0000536d      415f           pop r15
0x0000536f      c3             ret
0x00005370      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00005374      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005378      488d35a91b00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x6f28 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000537f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005383      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005387      ba05000000     mov edx, 5
0x0000538c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005390      4c8b4308       mov r8, qword [rbx + 8]
0x00005394      31ff           xor edi, edi
0x00005396      4c894c2408     mov qword [rsp + 8], r9
0x0000539b      488b1b         mov rbx, qword [rbx]
0x0000539e      4c890424       mov qword [rsp], r8
0x000053a2      e8b9c1ffff     call sym.imp.dcgettext
0x000053a7      4155           push r13
0x000053a9      4154           push r12
0x000053ab      4157           push r15
0x000053ad      4156           push r14
0x000053af      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000053b4      eb8d           jmp 0x5343
0x000053b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000053c0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000053c4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000053c8      ba05000000     mov edx, 5
0x000053cd      488b4310       mov rax, qword [rbx + 0x10]
0x000053d1      4c8b4308       mov r8, qword [rbx + 8]
0x000053d5      488d35e41b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x6fc0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x000053dc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000053e0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000053e4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000053e8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000053ec      4c89542418     mov qword [rsp + 0x18], r10
0x000053f1      4c894c2410     mov qword [rsp + 0x10], r9
0x000053f6      48890424       mov qword [rsp], rax
0x000053fa      4c89442408     mov qword [rsp + 8], r8
0x000053ff      488b1b         mov rbx, qword [rbx]
0x00005402      e98bfdffff     jmp 0x5192
0x00005407      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00005410      4531c9         xor r9d, r9d
0x00005413      49833800       cmp qword [r8], 0
0x00005417      7412           je 0x542b
0x00005419      0f1f80000000.  nop dword [rax]
0x00005420      4983c101       add r9, 1
0x00005424      4b833cc800     cmp qword [r8 + r9*8], 0
0x00005429      75f5           jne 0x5420
0x0000542b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00005430      4883ec68       sub rsp, 0x68
0x00005434      4d89c2         mov r10, r8
0x00005437      4531c9         xor r9d, r9d
0x0000543a      64488b042528.  mov rax, qword fs:[0x28]
0x00005443      4889442458     mov qword [rsp + 0x58], rax
0x00005448      31c0           xor eax, eax
0x0000544a      4989e0         mov r8, rsp
0x0000544d      0f1f00         nop dword [rax]
0x00005450      418b02         mov eax, dword [r10]
0x00005453      83f82f         cmp eax, 0x2f
0x00005456      7742           ja 0x549a
0x00005458      4189c3         mov r11d, eax
0x0000545b      4d035a10       add r11, qword [r10 + 0x10]
0x0000545f      83c008         add eax, 8
0x00005462      418902         mov dword [r10], eax
0x00005465      498b03         mov rax, qword [r11]
0x00005468      4885c0         test rax, rax
0x0000546b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000546f      740a           je 0x547b
0x00005471      4983c101       add r9, 1
0x00005475      4983f90a       cmp r9, 0xa
0x00005479      75d5           jne 0x5450
0x0000547b      e870fbffff     call sym.version_etc_arn
0x00005480      488b442458     mov rax, qword [rsp + 0x58]
0x00005485      644833042528.  xor rax, qword fs:[0x28]
0x0000548e      7505           jne 0x5495
0x00005490      4883c468       add rsp, 0x68
0x00005494      c3             ret
0x00005495      e8f6c0ffff     call sym.imp.__stack_chk_fail
0x0000549a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000549e      498d4308       lea rax, [r11 + 8]
0x000054a2      49894208       mov qword [r10 + 8], rax
0x000054a6      ebbd           jmp 0x5465
0x000054a8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x000054b0      55             push rbp
0x000054b1      53             push rbx
0x000054b2      41ba20000000   mov r10d, 0x20                          ; "@"
0x000054b8      4531db         xor r11d, r11d
0x000054bb      4881ecb80000.  sub rsp, 0xb8
0x000054c2      64488b042528.  mov rax, qword fs:[0x28]
0x000054cb      4889442478     mov qword [rsp + 0x78], rax
0x000054d0      31c0           xor eax, eax
0x000054d2      488d8424d000.  lea rax, [rsp + 0xd0]
0x000054da      4c898424a000.  mov qword [rsp + 0xa0], r8
0x000054e2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x000054ea      4c8d442420     lea r8, [rsp + 0x20]
0x000054ef      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000054f7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000054ff      4889442410     mov qword [rsp + 0x10], rax
0x00005504      488d84248000.  lea rax, [rsp + 0x80]
0x0000550c      4531c9         xor r9d, r9d
0x0000550f      4889442418     mov qword [rsp + 0x18], rax
0x00005514      4889c5         mov rbp, rax
0x00005517      660f1f840000.  nop word [rax + rax]
0x00005520      4183fa2f       cmp r10d, 0x2f
0x00005524      7756           ja 0x557c
0x00005526      4489d0         mov eax, r10d
0x00005529      41bb01000000   mov r11d, 1
0x0000552f      4183c208       add r10d, 8
0x00005533      4801e8         add rax, rbp
0x00005536      488b00         mov rax, qword [rax]
0x00005539      4885c0         test rax, rax
0x0000553c      4b8904c8       mov qword [r8 + r9*8], rax
0x00005540      740a           je 0x554c
0x00005542      4983c101       add r9, 1
0x00005546      4983f90a       cmp r9, 0xa
0x0000554a      75d4           jne 0x5520
0x0000554c      4584db         test r11b, r11b
0x0000554f      7524           jne 0x5575
0x00005551      e89afaffff     call sym.version_etc_arn
0x00005556      488b442478     mov rax, qword [rsp + 0x78]
0x0000555b      644833042528.  xor rax, qword fs:[0x28]
0x00005564      750a           jne 0x5570
0x00005566      4881c4b80000.  add rsp, 0xb8
0x0000556d      5b             pop rbx
0x0000556e      5d             pop rbp
0x0000556f      c3             ret
0x00005570      e81bc0ffff     call sym.imp.__stack_chk_fail
0x00005575      4489542408     mov dword [rsp + 8], r10d
0x0000557a      ebd5           jmp 0x5551
0x0000557c      4889d8         mov rax, rbx
0x0000557f      4883c308       add rbx, 8
0x00005583      ebb1           jmp 0x5536
0x00005585      90             nop
0x00005586      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00005590      53             push rbx
0x00005591      488d350a1800.  lea rsi, str.Report_bugs_to:__s         ; 0x6da2 ; "\nReport bugs to: %s\n"
0x00005598      ba05000000     mov edx, 5
0x0000559d      31ff           xor edi, edi
0x0000559f      e8bcbfffff     call sym.imp.dcgettext
0x000055a4      488d150c1800.  lea rdx, str.bug_coreutils_gnu.org      ; 0x6db7 ; "bug-coreutils@gnu.org"
0x000055ab      4889c6         mov rsi, rax
0x000055ae      bf01000000     mov edi, 1
0x000055b3      31c0           xor eax, eax
0x000055b5      e856c1ffff     call sym.imp.__printf_chk
0x000055ba      488d350c1800.  lea rsi, str.s_home_page:___s           ; 0x6dcd ; "%s home page: <%s>\n"
0x000055c1      ba05000000     mov edx, 5
0x000055c6      31ff           xor edi, edi
0x000055c8      e893bfffff     call sym.imp.dcgettext
0x000055cd      488d0d341100.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6708 ; "https://www.gnu.org/software/coreutils/"
0x000055d4      488d15400c00.  lea rdx, str.GNU_coreutils              ; 0x621b ; "GNU coreutils"
0x000055db      4889c6         mov rsi, rax
0x000055de      bf01000000     mov edi, 1
0x000055e3      31c0           xor eax, eax
0x000055e5      e826c1ffff     call sym.imp.__printf_chk
0x000055ea      488b1d973a20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x000055f1      488d35081a00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x7000 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000055f8      31ff           xor edi, edi
0x000055fa      ba05000000     mov edx, 5
0x000055ff      e85cbfffff     call sym.imp.dcgettext
0x00005604      4889de         mov rsi, rbx
0x00005607      4889c7         mov rdi, rax
0x0000560a      5b             pop rbx
0x0000560b      e940c0ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00005610      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00005611      4889fb         mov rbx, rdi
0x00005614      e887c0ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00005619      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000561c      7505           jne 0x5623
0x0000561e      4885db         test rbx, rbx
0x00005621      7502           jne 0x5625
0x00005623      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00005624      c3             ret
0x00005625      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000562a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00005630      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00005633      48f7e6         mul rsi
0x00005636      4889c7         mov rdi, rax
0x00005639      0f90c0         seto al
0x0000563c      4885ff         test rdi, rdi
0x0000563f      780a           js 0x564b
0x00005641      0fb6c0         movzx eax, al
0x00005644      4885c0         test rax, rax
0x00005647      7502           jne 0x564b
0x00005649      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000564b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000564f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00005654      6690           nop
0x00005656      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00005660      ebae           jmp sym.xmalloc
0x00005662      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00005666      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00005670      4885f6         test rsi, rsi
0x00005673      53             push rbx
0x00005674      4889f3         mov rbx, rsi
0x00005677      7505           jne 0x567e
0x00005679      4885ff         test rdi, rdi
0x0000567c      751a           jne 0x5698
0x0000567e      4889de         mov rsi, rbx
0x00005681      e86ac0ffff     call sym.imp.realloc
0x00005686      4885c0         test rax, rax
0x00005689      7505           jne 0x5690
0x0000568b      4885db         test rbx, rbx
0x0000568e      7511           jne 0x56a1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00005690      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00005691      c3             ret
0x00005692      660f1f440000   nop word [rax + rax]
0x00005698      e833beffff     call sym.imp.free
0x0000569d      31c0           xor eax, eax
0x0000569f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x000056a0      c3             ret
0x000056a1      e8ba010000     call sym.xalloc_die
0x000056a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x000056b0      4889f0         mov rax, rsi
0x000056b3      48f7e2         mul rdx
0x000056b6      4889c6         mov rsi, rax
0x000056b9      0f90c0         seto al
0x000056bc      4885f6         test rsi, rsi
0x000056bf      780a           js 0x56cb
0x000056c1      0fb6c0         movzx eax, al
0x000056c4      4885c0         test rax, rax
0x000056c7      7502           jne 0x56cb
0x000056c9      eba5           jmp sym.xrealloc
0x000056cb      4883ec08       sub rsp, 8
0x000056cf      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x000056d4      6690           nop
0x000056d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000056e0      4885ff         test rdi, rdi
0x000056e3      4989d1         mov r9, rdx
0x000056e6      488b0e         mov rcx, qword [rsi]
0x000056e9      7435           je 0x5720
0x000056eb      31d2           xor edx, edx
0x000056ed      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000056f7      49f7f1         div r9
0x000056fa      4839c8         cmp rax, rcx
0x000056fd      763c           jbe 0x573b
0x000056ff      4889c8         mov rax, rcx
0x00005702      48d1e8         shr rax, 1
0x00005705      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000570a      48890e         mov qword [rsi], rcx
0x0000570d      490fafc9       imul rcx, r9
0x00005711      4889ce         mov rsi, rcx
0x00005714      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00005719      0f1f80000000.  nop dword [rax]
0x00005720      4885c9         test rcx, rcx
0x00005723      7423           je 0x5748
0x00005725      4889c8         mov rax, rcx
0x00005728      49f7e1         mul r9
0x0000572b      0f90c2         seto dl
0x0000572e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00005731      0fb6d2         movzx edx, dl
0x00005734      7805           js 0x573b
0x00005736      4885d2         test rdx, rdx
0x00005739      74cf           je 0x570a
0x0000573b      4883ec08       sub rsp, 8
0x0000573f      e81c010000     call sym.xalloc_die
0x00005744      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005748      31d2           xor edx, edx
0x0000574a      b880000000     mov eax, 0x80
0x0000574f      4531c0         xor r8d, r8d
0x00005752      49f7f1         div r9
0x00005755      4885c0         test rax, rax
0x00005758      410f94c0       sete r8b
0x0000575c      498d0c00       lea rcx, [r8 + rax]
0x00005760      ebc3           jmp 0x5725
0x00005762      0f1f4000       nop dword [rax]
0x00005766      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00005770      4885ff         test rdi, rdi
0x00005773      488b06         mov rax, qword [rsi]
0x00005776      7428           je 0x57a0
0x00005778      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00005782      4839d0         cmp rax, rdx
0x00005785      772a           ja 0x57b1
0x00005787      4889c2         mov rdx, rax
0x0000578a      48d1ea         shr rdx, 1
0x0000578d      488d440201     lea rax, [rdx + rax + 1]
0x00005792      488906         mov qword [rsi], rax
0x00005795      4889c6         mov rsi, rax
0x00005798      e9d3feffff     jmp sym.xrealloc
0x0000579d      0f1f00         nop dword [rax]
0x000057a0      4885c0         test rax, rax
0x000057a3      ba80000000     mov edx, 0x80
0x000057a8      480f44c2       cmove rax, rdx
0x000057ac      4885c0         test rax, rax
0x000057af      79e1           jns 0x5792
0x000057b1      4883ec08       sub rsp, 8
0x000057b5      e8a6000000     call sym.xalloc_die
0x000057ba      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x000057c0      53             push rbx
0x000057c1      4889fb         mov rbx, rdi
0x000057c4      e847feffff     call sym.xmalloc
0x000057c9      4889da         mov rdx, rbx
0x000057cc      31f6           xor esi, esi
0x000057ce      4889c7         mov rdi, rax
0x000057d1      5b             pop rbx
0x000057d2      e949beffff     jmp sym.imp.memset
0x000057d7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x000057e0      4889f8         mov rax, rdi
0x000057e3      4883ec08       sub rsp, 8
0x000057e7      48f7e6         mul rsi
0x000057ea      0f90c2         seto dl
0x000057ed      4885c0         test rax, rax
0x000057f0      7817           js 0x5809
0x000057f2      0fb6d2         movzx edx, dl
0x000057f5      4885d2         test rdx, rdx
0x000057f8      750f           jne 0x5809
0x000057fa      e861beffff     call sym.imp.calloc
0x000057ff      4885c0         test rax, rax
0x00005802      7405           je 0x5809
0x00005804      4883c408       add rsp, 8
0x00005808      c3             ret
0x00005809      e852000000     call sym.xalloc_die
0x0000580e      6690           nop
;-- xmemdup:
0x00005810      55             push rbp
0x00005811      53             push rbx
0x00005812      4889fd         mov rbp, rdi
0x00005815      4889f7         mov rdi, rsi
0x00005818      4889f3         mov rbx, rsi
0x0000581b      4883ec08       sub rsp, 8
0x0000581f      e8ecfdffff     call sym.xmalloc
0x00005824      4883c408       add rsp, 8
0x00005828      4889da         mov rdx, rbx
0x0000582b      4889ee         mov rsi, rbp
0x0000582e      5b             pop rbx
0x0000582f      5d             pop rbp
0x00005830      4889c7         mov rdi, rax
0x00005833      e948beffff     jmp sym.imp.memcpy
0x00005838      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005840      53             push rbx
0x00005841      4889fb         mov rbx, rdi
0x00005844      e837bdffff     call sym.imp.strlen
0x00005849      4889df         mov rdi, rbx
0x0000584c      488d7001       lea rsi, [rax + 1]
0x00005850      5b             pop rbx
0x00005851      ebbd           jmp sym.xmemdup
0x00005853      662e0f1f8400.  nop word cs:[rax + rax]
0x0000585d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005860      488d35481800.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x70af ; "memory exhausted"
0x00005867      4883ec08       sub rsp, 8
0x0000586b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005870      31ff           xor edi, edi
0x00005872      e8e9bcffff     call sym.imp.dcgettext
0x00005877      8b3d9b372000   mov edi, dword [obj.exit_failure]       ; [0x209018:4]=1
0x0000587d      488d15af0f00.  lea rdx, [0x00006833]                   ; "%s"
0x00005884      4889c1         mov rcx, rax
0x00005887      31f6           xor esi, esi
0x00005889      31c0           xor eax, eax
0x0000588b      e890beffff     call sym.imp.error
0x00005890      e84bbcffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005895      662e0f1f8400.  nop word cs:[rax + rax]
0x0000589f      90             nop
;-- xnumtoumax:
0x000058a0      4157           push r15                                ; ../coreutils-8.31/lib/xdectoint.c:38
0x000058a2      4156           push r14
0x000058a4      4989cf         mov r15, rcx
0x000058a7      4155           push r13
0x000058a9      4154           push r12
0x000058ab      4989d6         mov r14, rdx
0x000058ae      55             push rbp
0x000058af      53             push rbx
0x000058b0      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x000058b2      31f6           xor esi, esi
0x000058b4      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/xdectoint.c:38
0x000058b7      4d89cd         mov r13, r9
0x000058ba      4883ec18       sub rsp, 0x18
0x000058be      4889e1         mov rcx, rsp                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x000058c1      8b5c2450       mov ebx, dword [rsp + 0x50]             ; ../coreutils-8.31/lib/xdectoint.c:38
0x000058c5      64488b042528.  mov rax, qword fs:[0x28]
0x000058ce      4889442408     mov qword [rsp + 8], rax
0x000058d3      31c0           xor eax, eax
0x000058d5      e8f6000000     call sym.xstrtoumax                     ; ../coreutils-8.31/lib/xdectoint.c:42
0x000058da      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xdectoint.c:44
0x000058dc      0f858e000000   jne 0x5970
0x000058e2      488b2c24       mov rbp, qword [rsp]                    ; ../coreutils-8.31/lib/xdectoint.c:46
0x000058e6      4c39f5         cmp rbp, r14
0x000058e9      7205           jb 0x58f0
0x000058eb      4c39fd         cmp rbp, r15
0x000058ee      7654           jbe 0x5944
0x000058f0      e8fbbbffff     call sym.imp.__errno_location
0x000058f5      4881fd000000.  cmp rbp, 0x40000000                     ; ../coreutils-8.31/lib/xdectoint.c:52
0x000058fc      4989c6         mov r14, rax
0x000058ff      19c0           sbb eax, eax
0x00005901      83e0d7         and eax, 0xffffffd7                     ; 4294967255
0x00005904      83c04b         add eax, 0x4b
0x00005907      418906         mov dword [r14], eax
0x0000590a      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/xdectoint.c:69
0x0000590d      e8bef6ffff     call sym.quote
0x00005912      418b36         mov esi, dword [r14]
0x00005915      4989c0         mov r8, rax
0x00005918      b800000000     mov eax, 0
0x0000591d      488d150b0f00.  lea rdx, str.s:__s                      ; 0x682f ; "%s: %s"
0x00005924      4c89e9         mov rcx, r13
0x00005927      83fe16         cmp esi, 0x16
0x0000592a      0f44f0         cmove esi, eax
0x0000592d      85db           test ebx, ebx
0x0000592f      b801000000     mov eax, 1
0x00005934      0f44d8         cmove ebx, eax
0x00005937      31c0           xor eax, eax
0x00005939      89df           mov edi, ebx
0x0000593b      e8e0bdffff     call sym.imp.error
0x00005940      488b2c24       mov rbp, qword [rsp]
0x00005944      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xdectoint.c:74
0x00005949      644833142528.  xor rdx, qword fs:[0x28]
0x00005952      4889e8         mov rax, rbp
0x00005955      7544           jne 0x599b
0x00005957      4883c418       add rsp, 0x18
0x0000595b      5b             pop rbx
0x0000595c      5d             pop rbp
0x0000595d      415c           pop r12
0x0000595f      415d           pop r13
0x00005961      415e           pop r14
0x00005963      415f           pop r15
0x00005965      c3             ret
0x00005966      662e0f1f8400.  nop word cs:[rax + rax]
0x00005970      89c5           mov ebp, eax
0x00005972      e879bbffff     call sym.imp.__errno_location
0x00005977      83fd01         cmp ebp, 1                              ; ../coreutils-8.31/lib/xdectoint.c:61
0x0000597a      4989c6         mov r14, rax
0x0000597d      7411           je 0x5990
0x0000597f      83fd03         cmp ebp, 3                              ; ../coreutils-8.31/lib/xdectoint.c:63
0x00005982      7586           jne 0x590a
0x00005984      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/xdectoint.c:64
0x0000598a      e97bffffff     jmp 0x590a
0x0000598f      90             nop
0x00005990      c7004b000000   mov dword [rax], 0x4b                   ; ../coreutils-8.31/lib/xdectoint.c:62 ; 'K'
                                                                       ; [0x4b:4]=0
0x00005996      e96fffffff     jmp 0x590a
0x0000599b      e8f0bbffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xdectoint.c:74
;-- xdectoumax:
0x000059a0      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/xdectoint.c:84
0x000059a4      4151           push r9                                 ; ../coreutils-8.31/lib/xdectoint.c:85
0x000059a6      4d89c1         mov r9, r8
0x000059a9      4989c8         mov r8, rcx
0x000059ac      4889d1         mov rcx, rdx
0x000059af      4889f2         mov rdx, rsi
0x000059b2      be0a000000     mov esi, 0xa
0x000059b7      e8e4feffff     call sym.xnumtoumax
0x000059bc      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/xdectoint.c:86
0x000059c0      c3             ret
0x000059c1      662e0f1f8400.  nop word cs:[rax + rax]
0x000059cb      0f1f440000     nop dword [rax + rax]
;-- xstrtoumax:
0x000059d0      4157           push r15
0x000059d2      4156           push r14
0x000059d4      4155           push r13
0x000059d6      4154           push r12
0x000059d8      55             push rbp
0x000059d9      53             push rbx
0x000059da      4883ec28       sub rsp, 0x28
0x000059de      64488b042528.  mov rax, qword fs:[0x28]
0x000059e7      4889442418     mov qword [rsp + 0x18], rax
0x000059ec      31c0           xor eax, eax
0x000059ee      83fa24         cmp edx, 0x24
0x000059f1      0f875e030000   ja 0x5d55
0x000059f7      488d442410     lea rax, [rsp + 0x10]
0x000059fc      4989f7         mov r15, rsi
0x000059ff      4885f6         test rsi, rsi
0x00005a02      4889fd         mov rbp, rdi
0x00005a05      89542408       mov dword [rsp + 8], edx
0x00005a09      4989ce         mov r14, rcx
0x00005a0c      4d89c5         mov r13, r8
0x00005a0f      4c0f44f8       cmove r15, rax
0x00005a13      e8d8baffff     call sym.imp.__errno_location
0x00005a18      c70000000000   mov dword [rax], 0
0x00005a1e      4989c4         mov r12, rax
0x00005a21      0fb65d00       movzx ebx, byte [rbp]
0x00005a25      e886bdffff     call sym.imp.__ctype_b_loc
0x00005a2a      8b542408       mov edx, dword [rsp + 8]
0x00005a2e      488b30         mov rsi, qword [rax]
0x00005a31      4889e8         mov rax, rbp
0x00005a34      eb11           jmp 0x5a47
0x00005a36      662e0f1f8400.  nop word cs:[rax + rax]
0x00005a40      4883c001       add rax, 1
0x00005a44      0fb618         movzx ebx, byte [rax]
0x00005a47      0fb6cb         movzx ecx, bl
0x00005a4a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x00005a4f      75ef           jne 0x5a40
0x00005a51      80fb2d         cmp bl, 0x2d
0x00005a54      7452           je 0x5aa8
0x00005a56      31c9           xor ecx, ecx
0x00005a58      4c89fe         mov rsi, r15
0x00005a5b      4889ef         mov rdi, rbp
0x00005a5e      e8adbbffff     call sym.imp.__strtoul_internal
0x00005a63      498b0f         mov rcx, qword [r15]
0x00005a66      4889c3         mov rbx, rax
0x00005a69      4839e9         cmp rcx, rbp
0x00005a6c      742a           je 0x5a98
0x00005a6e      418b0424       mov eax, dword [r12]
0x00005a72      85c0           test eax, eax
0x00005a74      7462           je 0x5ad8
0x00005a76      83f822         cmp eax, 0x22
0x00005a79      bd01000000     mov ebp, 1
0x00005a7e      7528           jne 0x5aa8
0x00005a80      4d85ed         test r13, r13
0x00005a83      7409           je 0x5a8e
0x00005a85      440fb621       movzx r12d, byte [rcx]
0x00005a89      4584e4         test r12b, r12b
0x00005a8c      7579           jne 0x5b07
0x00005a8e      49891e         mov qword [r14], rbx
0x00005a91      eb1a           jmp 0x5aad
0x00005a93      0f1f440000     nop dword [rax + rax]
0x00005a98      4d85ed         test r13, r13
0x00005a9b      48894c2408     mov qword [rsp + 8], rcx
0x00005aa0      753e           jne 0x5ae0
0x00005aa2      660f1f440000   nop word [rax + rax]
0x00005aa8      bd04000000     mov ebp, 4
0x00005aad      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00005ab2      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005abb      89e8           mov eax, ebp
0x00005abd      0f858d020000   jne 0x5d50
0x00005ac3      4883c428       add rsp, 0x28
0x00005ac7      5b             pop rbx
0x00005ac8      5d             pop rbp
0x00005ac9      415c           pop r12
0x00005acb      415d           pop r13
0x00005acd      415e           pop r14
0x00005acf      415f           pop r15
0x00005ad1      c3             ret
0x00005ad2      660f1f440000   nop word [rax + rax]
0x00005ad8      31ed           xor ebp, ebp
0x00005ada      eba4           jmp 0x5a80
0x00005adc      0f1f4000       nop dword [rax]
0x00005ae0      440fb66500     movzx r12d, byte [rbp]
0x00005ae5      4584e4         test r12b, r12b
0x00005ae8      74be           je 0x5aa8
0x00005aea      410fbef4       movsx esi, r12b
0x00005aee      4c89ef         mov rdi, r13
0x00005af1      31ed           xor ebp, ebp
0x00005af3      e8c8baffff     call sym.imp.strchr
0x00005af8      4885c0         test rax, rax
0x00005afb      bb01000000     mov ebx, 1
0x00005b00      488b4c2408     mov rcx, qword [rsp + 8]
0x00005b05      74a1           je 0x5aa8
0x00005b07      410fbef4       movsx esi, r12b
0x00005b0b      4c89ef         mov rdi, r13
0x00005b0e      48894c2408     mov qword [rsp + 8], rcx
0x00005b13      e8a8baffff     call sym.imp.strchr
0x00005b18      4885c0         test rax, rax
0x00005b1b      488b4c2408     mov rcx, qword [rsp + 8]
0x00005b20      0f84c6000000   je 0x5bec
0x00005b26      418d4424bb     lea eax, [r12 - 0x45]
0x00005b2b      3c2f           cmp al, 0x2f
0x00005b2d      7751           ja 0x5b80
0x00005b2f      48ba45893000.  movabs rdx, 0x814400308945
0x00005b39      480fa3c2       bt rdx, rax
0x00005b3d      7341           jae 0x5b80
0x00005b3f      be30000000     mov esi, 0x30                           ; '0'
0x00005b44      4c89ef         mov rdi, r13
0x00005b47      48894c2408     mov qword [rsp + 8], rcx
0x00005b4c      e86fbaffff     call sym.imp.strchr
0x00005b51      4885c0         test rax, rax
0x00005b54      488b4c2408     mov rcx, qword [rsp + 8]
0x00005b59      7425           je 0x5b80
0x00005b5b      0fb64101       movzx eax, byte [rcx + 1]
0x00005b5f      3c44           cmp al, 0x44
0x00005b61      740c           je 0x5b6f
0x00005b63      3c69           cmp al, 0x69
0x00005b65      0f84cd010000   je 0x5d38
0x00005b6b      3c42           cmp al, 0x42
0x00005b6d      7511           jne 0x5b80
0x00005b6f      bf02000000     mov edi, 2
0x00005b74      bee8030000     mov esi, 0x3e8
0x00005b79      eb0f           jmp 0x5b8a
0x00005b7b      0f1f440000     nop dword [rax + rax]
0x00005b80      bf01000000     mov edi, 1
0x00005b85      be00040000     mov esi, 0x400
0x00005b8a      4183ec42       sub r12d, 0x42
0x00005b8e      4180fc35       cmp r12b, 0x35
0x00005b92      7758           ja 0x5bec
0x00005b94      488d156d1500.  lea rdx, [0x00007108]
0x00005b9b      450fb6e4       movzx r12d, r12b
0x00005b9f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00005ba3      4801d0         add rax, rdx
0x00005ba6      ffe0           jmp rax
0x00005ba8      4889d8         mov rax, rbx
0x00005bab      48f7e6         mul rsi
0x00005bae      0f80ed010000   jo 0x5da1
0x00005bb4      4531c0         xor r8d, r8d
0x00005bb7      48f7e6         mul rsi
0x00005bba      0f80d2010000   jo 0x5d92
0x00005bc0      4889c3         mov rbx, rax
0x00005bc3      4409c5         or ebp, r8d
0x00005bc6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005bd0      4863ff         movsxd rdi, edi
0x00005bd3      89e8           mov eax, ebp
0x00005bd5      4801f9         add rcx, rdi
0x00005bd8      83c802         or eax, 2
0x00005bdb      49890f         mov qword [r15], rcx
0x00005bde      803900         cmp byte [rcx], 0
0x00005be1      49891e         mov qword [r14], rbx
0x00005be4      0f45e8         cmovne ebp, eax
0x00005be7      e9c1feffff     jmp 0x5aad
0x00005bec      49891e         mov qword [r14], rbx
0x00005bef      83cd02         or ebp, 2
0x00005bf2      e9b6feffff     jmp 0x5aad
0x00005bf7      ba02000000     mov edx, 2
0x00005bfc      4889d0         mov rax, rdx
0x00005bff      48f7e3         mul rbx
0x00005c02      0f8096000000   jo 0x5c9e
0x00005c08      4801db         add rbx, rbx
0x00005c0b      ebc3           jmp 0x5bd0
0x00005c0d      ba00020000     mov edx, 0x200
0x00005c12      4889d0         mov rax, rdx
0x00005c15      48f7e3         mul rbx
0x00005c18      0f8080000000   jo 0x5c9e
0x00005c1e      48c1e309       shl rbx, 9
0x00005c22      ebac           jmp 0x5bd0
0x00005c24      41b807000000   mov r8d, 7
0x00005c2a      4531c9         xor r9d, r9d
0x00005c2d      0f1f00         nop dword [rax]
0x00005c30      4889d8         mov rax, rbx
0x00005c33      48f7e6         mul rsi
0x00005c36      4889c3         mov rbx, rax
0x00005c39      0f808f010000   jo 0x5dce
0x00005c3f      4183e801       sub r8d, 1
0x00005c43      75eb           jne 0x5c30
0x00005c45      4409cd         or ebp, r9d
0x00005c48      eb86           jmp 0x5bd0
0x00005c4a      41b808000000   mov r8d, 8
0x00005c50      4531c9         xor r9d, r9d
0x00005c53      0f1f440000     nop dword [rax + rax]
0x00005c58      4889d8         mov rax, rbx
0x00005c5b      48f7e6         mul rsi
0x00005c5e      4889c3         mov rbx, rax
0x00005c61      0f8049010000   jo 0x5db0
0x00005c67      4183e801       sub r8d, 1
0x00005c6b      75eb           jne 0x5c58
0x00005c6d      ebd6           jmp 0x5c45
0x00005c6f      41b804000000   mov r8d, 4
0x00005c75      4531c9         xor r9d, r9d
0x00005c78      4889d8         mov rax, rbx
0x00005c7b      48f7e6         mul rsi
0x00005c7e      4889c3         mov rbx, rax
0x00005c81      0f80fc000000   jo 0x5d83
0x00005c87      4183e801       sub r8d, 1
0x00005c8b      75eb           jne 0x5c78
0x00005c8d      ebb6           jmp 0x5c45
0x00005c8f      4889d8         mov rax, rbx
0x00005c92      48f7e6         mul rsi
0x00005c95      4889c3         mov rbx, rax
0x00005c98      0f8132ffffff   jno 0x5bd0
0x00005c9e      bd01000000     mov ebp, 1
0x00005ca3      4883cbff       or rbx, 0xffffffffffffffff
0x00005ca7      e924ffffff     jmp 0x5bd0
0x00005cac      0f1f4000       nop dword [rax]
0x00005cb0      41b805000000   mov r8d, 5
0x00005cb6      4531c9         xor r9d, r9d
0x00005cb9      4889d8         mov rax, rbx
0x00005cbc      48f7e6         mul rsi
0x00005cbf      4889c3         mov rbx, rax
0x00005cc2      0f80f7000000   jo 0x5dbf
0x00005cc8      4183e801       sub r8d, 1
0x00005ccc      75eb           jne 0x5cb9
0x00005cce      e972ffffff     jmp 0x5c45
0x00005cd3      41b806000000   mov r8d, 6
0x00005cd9      4531c9         xor r9d, r9d
0x00005cdc      4889d8         mov rax, rbx
0x00005cdf      48f7e6         mul rsi
0x00005ce2      4889c3         mov rbx, rax
0x00005ce5      0f8089000000   jo 0x5d74
0x00005ceb      4183e801       sub r8d, 1
0x00005cef      75eb           jne 0x5cdc
0x00005cf1      e94fffffff     jmp 0x5c45
0x00005cf6      ba00040000     mov edx, 0x400
0x00005cfb      4889d0         mov rax, rdx
0x00005cfe      48f7e3         mul rbx
0x00005d01      709b           jo 0x5c9e
0x00005d03      48c1e30a       shl rbx, 0xa
0x00005d07      e9c4feffff     jmp 0x5bd0
0x00005d0c      4889d8         mov rax, rbx
0x00005d0f      48f7e6         mul rsi
0x00005d12      0f80c5000000   jo 0x5ddd
0x00005d18      4531c0         xor r8d, r8d
0x00005d1b      48f7e6         mul rsi
0x00005d1e      0f8193feffff   jno 0x5bb7
0x00005d24      41b801000000   mov r8d, 1
0x00005d2a      4883c8ff       or rax, 0xffffffffffffffff
0x00005d2e      e984feffff     jmp 0x5bb7
0x00005d33      0f1f440000     nop dword [rax + rax]
0x00005d38      31ff           xor edi, edi
0x00005d3a      80790242       cmp byte [rcx + 2], 0x42
0x00005d3e      be00040000     mov esi, 0x400
0x00005d43      400f94c7       sete dil
0x00005d47      8d7c3f01       lea edi, [rdi + rdi + 1]
0x00005d4b      e93afeffff     jmp 0x5b8a
0x00005d50      e83bb8ffff     call sym.imp.__stack_chk_fail
0x00005d55      488d0d841400.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x71e0 ; "xstrtoumax"
0x00005d5c      488d355d1300.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x70c0 ; "../coreutils-8.31/lib/xstrtol.c"
0x00005d63      488d3d761300.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x70e0 ; "0 <= strtol_base && strtol_base <= 36"
0x00005d6a      ba54000000     mov edx, 0x54                           ; 'T'
0x00005d6f      e88cb8ffff     call sym.imp.__assert_fail
0x00005d74      41b901000000   mov r9d, 1
0x00005d7a      4883cbff       or rbx, 0xffffffffffffffff
0x00005d7e      e968ffffff     jmp 0x5ceb
0x00005d83      41b901000000   mov r9d, 1
0x00005d89      4883cbff       or rbx, 0xffffffffffffffff
0x00005d8d      e9f5feffff     jmp 0x5c87
0x00005d92      41b801000000   mov r8d, 1
0x00005d98      4883cbff       or rbx, 0xffffffffffffffff
0x00005d9c      e922feffff     jmp 0x5bc3
0x00005da1      4883c8ff       or rax, 0xffffffffffffffff
0x00005da5      41b801000000   mov r8d, 1
0x00005dab      e907feffff     jmp 0x5bb7
0x00005db0      41b901000000   mov r9d, 1
0x00005db6      4883cbff       or rbx, 0xffffffffffffffff
0x00005dba      e9a8feffff     jmp 0x5c67
0x00005dbf      41b901000000   mov r9d, 1
0x00005dc5      4883cbff       or rbx, 0xffffffffffffffff
0x00005dc9      e9fafeffff     jmp 0x5cc8
0x00005dce      41b901000000   mov r9d, 1
0x00005dd4      4883cbff       or rbx, 0xffffffffffffffff
0x00005dd8      e962feffff     jmp 0x5c3f
0x00005ddd      41b801000000   mov r8d, 1
0x00005de3      4883c8ff       or rax, 0xffffffffffffffff
0x00005de7      e92fffffff     jmp 0x5d1b
0x00005dec      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00005df0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00005df2      55             push rbp
0x00005df3      53             push rbx
0x00005df4      4889fb         mov rbx, rdi
0x00005df7      e894b8ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00005dfc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00005dfe      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00005e01      7854           js 0x5e57                               ; ../coreutils-8.31/lib/fclose.c:66
0x00005e03      e8c8b8ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00005e08      85c0           test eax, eax
0x00005e0a      752c           jne 0x5e38
0x00005e0c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00005e0f      e85c000000     call sym.rpl_fflush
0x00005e14      85c0           test eax, eax
0x00005e16      743c           je 0x5e54
0x00005e18      e8d3b6ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00005e1d      448b20         mov r12d, dword [rax]
0x00005e20      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005e23      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00005e26      e815b7ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00005e2b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00005e2e      7530           jne 0x5e60
0x00005e30      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005e31      5d             pop rbp
0x00005e32      415c           pop r12
0x00005e34      c3             ret
0x00005e35      0f1f00         nop dword [rax]
0x00005e38      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00005e3b      e850b8ffff     call sym.imp.fileno
0x00005e40      31f6           xor esi, esi
0x00005e42      ba01000000     mov edx, 1
0x00005e47      89c7           mov edi, eax
0x00005e49      e8a2b7ffff     call sym.imp.lseek
0x00005e4e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005e52      75b8           jne 0x5e0c
0x00005e54      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005e57      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005e58      5d             pop rbp
0x00005e59      415c           pop r12
0x00005e5b      e9e0b6ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00005e60      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00005e64      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00005e69      ebc5           jmp 0x5e30
0x00005e6b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00005e70      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00005e73      53             push rbx
0x00005e74      4889fb         mov rbx, rdi
0x00005e77      7411           je 0x5e8a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00005e79      e852b8ffff     call sym.imp.__freading
0x00005e7e      85c0           test eax, eax
0x00005e80      7408           je 0x5e8a
0x00005e82      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00005e88      750e           jne 0x5e98
0x00005e8a      4889df         mov rdi, rbx
0x00005e8d      5b             pop rbx
0x00005e8e      e91db8ffff     jmp sym.imp.fflush
0x00005e93      0f1f440000     nop dword [rax + rax]
0x00005e98      4889df         mov rdi, rbx
0x00005e9b      ba01000000     mov edx, 1
0x00005ea0      31f6           xor esi, esi
0x00005ea2      e809000000     call sym.rpl_fseeko
0x00005ea7      4889df         mov rdi, rbx
0x00005eaa      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00005eab      e900b8ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00005eb0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005eb4      48394710       cmp qword [rdi + 0x10], rax
0x00005eb8      7406           je 0x5ec0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00005eba      e971b8ffff     jmp sym.imp.fseeko
0x00005ebf      90             nop
0x00005ec0      488b4720       mov rax, qword [rdi + 0x20]
0x00005ec4      48394728       cmp qword [rdi + 0x28], rax
0x00005ec8      75f0           jne 0x5eba                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00005eca      48837f4800     cmp qword [rdi + 0x48], 0
0x00005ecf      75e9           jne 0x5eba                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005ed1      4154           push r12
0x00005ed3      55             push rbp
0x00005ed4      4189d4         mov r12d, edx
0x00005ed7      53             push rbx
0x00005ed8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00005edb      4889fb         mov rbx, rdi
0x00005ede      e8adb7ffff     call sym.imp.fileno
0x00005ee3      4489e2         mov edx, r12d
0x00005ee6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00005ee9      89c7           mov edi, eax
0x00005eeb      e800b7ffff     call sym.imp.lseek
0x00005ef0      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005ef4      740c           je 0x5f02
0x00005ef6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005ef9      488983900000.  mov qword [rbx + 0x90], rax
0x00005f00      31c0           xor eax, eax
0x00005f02      5b             pop rbx
0x00005f03      5d             pop rbp
0x00005f04      415c           pop r12
0x00005f06      c3             ret
0x00005f07      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00005f10      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005f12      4154           push r12
0x00005f14      4989f5         mov r13, rsi
0x00005f17      55             push rbp
0x00005f18      53             push rbx
0x00005f19      4889fb         mov rbx, rdi
0x00005f1c      4989d4         mov r12, rdx
0x00005f1f      4883ec18       sub rsp, 0x18
0x00005f23      64488b042528.  mov rax, qword fs:[0x28]
0x00005f2c      4889442408     mov qword [rsp + 8], rax
0x00005f31      31c0           xor eax, eax
0x00005f33      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005f38      4885ff         test rdi, rdi
0x00005f3b      480f44d8       cmove rbx, rax
0x00005f3f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005f42      e869b6ffff     call sym.imp.mbrtowc
0x00005f47      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005f4b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005f4e      7620           jbe 0x5f70                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005f50      4d85e4         test r12, r12
0x00005f53      741b           je 0x5f70
0x00005f55      31ff           xor edi, edi
0x00005f57      e8c4000000     call sym.hard_locale
0x00005f5c      84c0           test al, al
0x00005f5e      7510           jne 0x5f70
0x00005f60      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005f65      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00005f6a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005f6c      0f1f4000       nop dword [rax]
0x00005f70      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005f75      644833142528.  xor rdx, qword fs:[0x28]
0x00005f7e      4889e8         mov rax, rbp
0x00005f81      750b           jne 0x5f8e
0x00005f83      4883c418       add rsp, 0x18
0x00005f87      5b             pop rbx
0x00005f88      5d             pop rbp
0x00005f89      415c           pop r12
0x00005f8b      415d           pop r13
0x00005f8d      c3             ret
0x00005f8e      e8fdb5ffff     call sym.imp.__stack_chk_fail
0x00005f93      662e0f1f8400.  nop word cs:[rax + rax]
0x00005f9d      0f1f00         nop dword [rax]
;-- close_stream:
0x00005fa0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00005fa2      55             push rbp
0x00005fa3      4889fd         mov rbp, rdi
0x00005fa6      53             push rbx
0x00005fa7      e874b5ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00005fac      8b5d00         mov ebx, dword [rbp]
0x00005faf      4889ef         mov rdi, rbp
0x00005fb2      4989c4         mov r12, rax
0x00005fb5      e836feffff     call sym.rpl_fclose
0x00005fba      83e320         and ebx, 0x20                           ; "@"
0x00005fbd      85db           test ebx, ebx
0x00005fbf      7517           jne 0x5fd8
0x00005fc1      85c0           test eax, eax
0x00005fc3      740a           je 0x5fcf                               ; stdio.h:-186
0x00005fc5      4d85e4         test r12, r12                           ; stdio.h:-178
0x00005fc8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005fcd      7439           je 0x6008
0x00005fcf      5b             pop rbx
0x00005fd0      5d             pop rbp
0x00005fd1      415c           pop r12
0x00005fd3      c3             ret
0x00005fd4      0f1f4000       nop dword [rax]
0x00005fd8      85c0           test eax, eax
0x00005fda      751c           jne 0x5ff8
0x00005fdc      e80fb5ffff     call sym.imp.__errno_location
0x00005fe1      c70000000000   mov dword [rax], 0
0x00005fe7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005fec      5b             pop rbx
0x00005fed      5d             pop rbp
0x00005fee      415c           pop r12
0x00005ff0      c3             ret
0x00005ff1      0f1f80000000.  nop dword [rax]
0x00005ff8      5b             pop rbx
0x00005ff9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005ffe      5d             pop rbp                                 ; stdio.h:-186
0x00005fff      415c           pop r12
0x00006001      c3             ret
0x00006002      660f1f440000   nop word [rax + rax]
0x00006008      e8e3b4ffff     call sym.imp.__errno_location
0x0000600d      833809         cmp dword [rax], 9
0x00006010      5b             pop rbx
0x00006011      5d             pop rbp
0x00006012      415c           pop r12                                 ; stdio.h:-178
0x00006014      0f95c0         setne al
0x00006017      0fb6c0         movzx eax, al
0x0000601a      f7d8           neg eax
0x0000601c      c3             ret
0x0000601d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00006020      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00006024      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00006026      e8d5b6ffff     call sym.imp.setlocale
0x0000602b      4889c2         mov rdx, rax
0x0000602e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00006033      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00006036      741d           je 0x6055
0x00006038      488d3dac1100.  lea rdi, [0x000071eb]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000603f      b902000000     mov ecx, 2
0x00006044      4889d6         mov rsi, rdx
0x00006047      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006049      0f97c1         seta cl
0x0000604c      80d900         sbb cl, 0
0x0000604f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00006051      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00006053      750b           jne 0x6060
0x00006055      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00006059      c3             ret
0x0000605a      660f1f440000   nop word [rax + rax]
0x00006060      488d3d861100.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x71ed ; "POSIX"
0x00006067      b906000000     mov ecx, 6
0x0000606c      4889d6         mov rsi, rdx
0x0000606f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006071      0f97c0         seta al
0x00006074      1c00           sbb al, 0
0x00006076      84c0           test al, al
0x00006078      0f95c0         setne al
0x0000607b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000607f      c3             ret
;-- locale_charset:
0x00006080      4883ec08       sub rsp, 8
0x00006084      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00006089      e832b6ffff     call sym.imp.nl_langinfo
0x0000608e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00006091      741d           je 0x60b0
0x00006093      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00006096      488d15561100.  lea rdx, str.ASCII                      ; 0x71f3 ; "ASCII"
0x0000609d      480f44c2       cmove rax, rdx
0x000060a1      4883c408       add rsp, 8
0x000060a5      c3             ret
0x000060a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000060b0      488d053c1100.  lea rax, str.ASCII                      ; 0x71f3 ; "ASCII"
0x000060b7      4883c408       add rsp, 8
0x000060bb      c3             ret
0x000060bc      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x000060c0      4157           push r15
0x000060c2      4156           push r14
0x000060c4      4989d7         mov r15, rdx
0x000060c7      4155           push r13
0x000060c9      4154           push r12
0x000060cb      4c8d25be2920.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x208a90
0x000060d2      55             push rbp
0x000060d3      488d2dbe2920.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x208a98
0x000060da      53             push rbx
0x000060db      4189fd         mov r13d, edi
0x000060de      4989f6         mov r14, rsi
0x000060e1      4c29e5         sub rbp, r12
0x000060e4      4883ec08       sub rsp, 8
0x000060e8      48c1fd03       sar rbp, 3
0x000060ec      e89fb3ffff     call sym._init
0x000060f1      4885ed         test rbp, rbp
0x000060f4      7420           je 0x6116
0x000060f6      31db           xor ebx, ebx
0x000060f8      0f1f84000000.  nop dword [rax + rax]
0x00006100      4c89fa         mov rdx, r15
0x00006103      4c89f6         mov rsi, r14
0x00006106      4489ef         mov edi, r13d
0x00006109      41ff14dc       call qword [r12 + rbx*8]
0x0000610d      4883c301       add rbx, 1
0x00006111      4839dd         cmp rbp, rbx
0x00006114      75ea           jne 0x6100
0x00006116      4883c408       add rsp, 8
0x0000611a      5b             pop rbx
0x0000611b      5d             pop rbp
0x0000611c      415c           pop r12
0x0000611e      415d           pop r13
0x00006120      415e           pop r14
0x00006122      415f           pop r15
0x00006124      c3             ret
0x00006125      90             nop
0x00006126      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00006130      f3c3           ret
0x00006132      662e0f1f8400.  nop word cs:[rax + rax]
0x0000613c      0f1f4000       nop dword [rax]
;-- atexit:
0x00006140      488b15c12e20.  mov rdx, qword [obj.__dso_handle]       ; [0x209008:8]=0x209008 obj.__dso_handle
0x00006147      31f6           xor esi, esi
0x00006149      e902b6ffff     jmp sym.imp.__cxa_atexit
0x0000614e      0000           add byte [rax], al
