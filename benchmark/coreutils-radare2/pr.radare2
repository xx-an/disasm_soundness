;-- section..plt:
;-- .plt:
0x00001b50      ff353af22000   push qword [0x00210d90]                 ; [12] -r-x section size 1120 named .plt
0x00001b56      ff253cf22000   jmp qword [0x00210d98]                  ; [0x210d98:8]=0
0x00001b5c      0f1f4000       nop dword [rax]
;-- imp.__ctype_toupper_loc:
0x00001b60      ff253af22000   jmp qword [reloc.__ctype_toupper_loc]   ; [0x210da0:8]=0x1b66 ; "f\x1b"
0x00001b66      6800000000     push 0
0x00001b6b      e9e0ffffff     jmp sym..plt
;-- imp.__uflow:
0x00001b70      ff2532f22000   jmp qword [reloc.__uflow]               ; [0x210da8:8]=0x1b76 ; "v\x1b"
0x00001b76      6801000000     push 1
0x00001b7b      e9d0ffffff     jmp sym..plt
;-- imp.getenv:
0x00001b80      ff252af22000   jmp qword [reloc.getenv]                ; [0x210db0:8]=0x1b86
0x00001b86      6802000000     push 2
0x00001b8b      e9c0ffffff     jmp sym..plt
;-- imp.free:
0x00001b90      ff2522f22000   jmp qword [reloc.free]                  ; [0x210db8:8]=0x1b96
0x00001b96      6803000000     push 3
0x00001b9b      e9b0ffffff     jmp sym..plt
;-- imp.abort:
0x00001ba0      ff251af22000   jmp qword [reloc.abort]                 ; [0x210dc0:8]=0x1ba6
0x00001ba6      6804000000     push 4
0x00001bab      e9a0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001bb0      ff2512f22000   jmp qword [reloc.__errno_location]      ; [0x210dc8:8]=0x1bb6
0x00001bb6      6805000000     push 5
0x00001bbb      e990ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001bc0      ff250af22000   jmp qword [reloc.strncmp]               ; [0x210dd0:8]=0x1bc6
0x00001bc6      6806000000     push 6
0x00001bcb      e980ffffff     jmp sym..plt
;-- imp.localtime_r:
0x00001bd0      ff2502f22000   jmp qword [reloc.localtime_r]           ; [0x210dd8:8]=0x1bd6
0x00001bd6      6807000000     push 7
0x00001bdb      e970ffffff     jmp sym..plt
;-- imp._exit:
0x00001be0      ff25faf12000   jmp qword [reloc._exit]                 ; [0x210de0:8]=0x1be6
0x00001be6      6808000000     push 8
0x00001beb      e960ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001bf0      ff25f2f12000   jmp qword [reloc.__fpending]            ; [0x210de8:8]=0x1bf6
0x00001bf6      6809000000     push 9
0x00001bfb      e950ffffff     jmp sym..plt
;-- imp.iswcntrl:
0x00001c00      ff25eaf12000   jmp qword [reloc.iswcntrl]              ; [0x210df0:8]=0x1c06
0x00001c06      680a000000     push 0xa
0x00001c0b      e940ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001c10      ff25e2f12000   jmp qword [reloc.fcntl]                 ; [0x210df8:8]=0x1c16
0x00001c16      680b000000     push 0xb
0x00001c1b      e930ffffff     jmp sym..plt
;-- imp.clock_gettime:
0x00001c20      ff25daf12000   jmp qword [reloc.clock_gettime]         ; [0x210e00:8]=0x1c26 ; "&\x1c"
0x00001c26      680c000000     push 0xc
0x00001c2b      e920ffffff     jmp sym..plt
;-- imp.setenv:
0x00001c30      ff25d2f12000   jmp qword [reloc.setenv]                ; [0x210e08:8]=0x1c36 ; "6\x1c"
0x00001c36      680d000000     push 0xd
0x00001c3b      e910ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001c40      ff25caf12000   jmp qword [reloc.textdomain]            ; [0x210e10:8]=0x1c46 ; "F\x1c"
0x00001c46      680e000000     push 0xe
0x00001c4b      e900ffffff     jmp sym..plt
;-- imp.__strtol_internal:
0x00001c50      ff25c2f12000   jmp qword [reloc.__strtol_internal]     ; [0x210e18:8]=0x1c56 ; "V\x1c"
0x00001c56      680f000000     push 0xf
0x00001c5b      e9f0feffff     jmp sym..plt
;-- imp.fclose:
0x00001c60      ff25baf12000   jmp qword [reloc.fclose]                ; [0x210e20:8]=0x1c66 ; "f\x1c"
0x00001c66      6810000000     push 0x10
0x00001c6b      e9e0feffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001c70      ff25b2f12000   jmp qword [reloc.bindtextdomain]        ; [0x210e28:8]=0x1c76 ; "v\x1c"
0x00001c76      6811000000     push 0x11
0x00001c7b      e9d0feffff     jmp sym..plt
;-- imp.dcgettext:
0x00001c80      ff25aaf12000   jmp qword [reloc.dcgettext]             ; [0x210e30:8]=0x1c86
0x00001c86      6812000000     push 0x12
0x00001c8b      e9c0feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001c90      ff25a2f12000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x210e38:8]=0x1c96
0x00001c96      6813000000     push 0x13
0x00001c9b      e9b0feffff     jmp sym..plt
;-- imp.strlen:
0x00001ca0      ff259af12000   jmp qword [reloc.strlen]                ; [0x210e40:8]=0x1ca6
0x00001ca6      6814000000     push 0x14
0x00001cab      e9a0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001cb0      ff2592f12000   jmp qword [reloc.__stack_chk_fail]      ; [0x210e48:8]=0x1cb6
0x00001cb6      6815000000     push 0x15
0x00001cbb      e990feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001cc0      ff258af12000   jmp qword [reloc.getopt_long]           ; [0x210e50:8]=0x1cc6
0x00001cc6      6816000000     push 0x16
0x00001ccb      e980feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001cd0      ff2582f12000   jmp qword [reloc.mbrtowc]               ; [0x210e58:8]=0x1cd6
0x00001cd6      6817000000     push 0x17
0x00001cdb      e970feffff     jmp sym..plt
;-- imp.strchr:
0x00001ce0      ff257af12000   jmp qword [reloc.strchr]                ; [0x210e60:8]=0x1ce6
0x00001ce6      6818000000     push 0x18
0x00001ceb      e960feffff     jmp sym..plt
;-- imp.__overflow:
0x00001cf0      ff2572f12000   jmp qword [reloc.__overflow]            ; [0x210e68:8]=0x1cf6
0x00001cf6      6819000000     push 0x19
0x00001cfb      e950feffff     jmp sym..plt
;-- imp.strrchr:
0x00001d00      ff256af12000   jmp qword [reloc.strrchr]               ; [0x210e70:8]=0x1d06
0x00001d06      681a000000     push 0x1a
0x00001d0b      e940feffff     jmp sym..plt
;-- imp.gmtime_r:
0x00001d10      ff2562f12000   jmp qword [reloc.gmtime_r]              ; [0x210e78:8]=0x1d16
0x00001d16      681b000000     push 0x1b
0x00001d1b      e930feffff     jmp sym..plt
;-- imp.lseek:
0x00001d20      ff255af12000   jmp qword [reloc.lseek]                 ; [0x210e80:8]=0x1d26 ; "&\x1d"
0x00001d26      681c000000     push 0x1c
0x00001d2b      e920feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001d30      ff2552f12000   jmp qword [reloc.__assert_fail]         ; [0x210e88:8]=0x1d36 ; "6\x1d"
0x00001d36      681d000000     push 0x1d
0x00001d3b      e910feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00001d40      ff254af12000   jmp qword [reloc.__strtoul_internal]    ; [0x210e90:8]=0x1d46 ; "F\x1d"
0x00001d46      681e000000     push 0x1e
0x00001d4b      e900feffff     jmp sym..plt
;-- imp.memset:
0x00001d50      ff2542f12000   jmp qword [reloc.memset]                ; [0x210e98:8]=0x1d56 ; "V\x1d"
0x00001d56      681f000000     push 0x1f
0x00001d5b      e9f0fdffff     jmp sym..plt
;-- imp.close:
0x00001d60      ff253af12000   jmp qword [reloc.close]                 ; [0x210ea0:8]=0x1d66 ; "f\x1d"
0x00001d66      6820000000     push 0x20                               ; "@"
0x00001d6b      e9e0fdffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001d70      ff2532f12000   jmp qword [reloc.posix_fadvise]         ; [0x210ea8:8]=0x1d76 ; "v\x1d"
0x00001d76      6821000000     push 0x21                               ; '!'
0x00001d7b      e9d0fdffff     jmp sym..plt
;-- imp.memcmp:
0x00001d80      ff252af12000   jmp qword [reloc.memcmp]                ; [0x210eb0:8]=0x1d86
0x00001d86      6822000000     push 0x22                               ; '"'
0x00001d8b      e9c0fdffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001d90      ff2522f12000   jmp qword [reloc.fputs_unlocked]        ; [0x210eb8:8]=0x1d96
0x00001d96      6823000000     push 0x23                               ; '#'
0x00001d9b      e9b0fdffff     jmp sym..plt
;-- imp.calloc:
0x00001da0      ff251af12000   jmp qword [reloc.calloc]                ; [0x210ec0:8]=0x1da6
0x00001da6      6824000000     push 0x24                               ; '$'
0x00001dab      e9a0fdffff     jmp sym..plt
;-- imp.strcmp:
0x00001db0      ff2512f12000   jmp qword [reloc.strcmp]                ; [0x210ec8:8]=0x1db6
0x00001db6      6825000000     push 0x25                               ; '%'
0x00001dbb      e990fdffff     jmp sym..plt
;-- imp.strtol:
0x00001dc0      ff250af12000   jmp qword [reloc.strtol]                ; [0x210ed0:8]=0x1dc6
0x00001dc6      6826000000     push 0x26                               ; '&'
0x00001dcb      e980fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001dd0      ff2502f12000   jmp qword [reloc.memcpy]                ; [0x210ed8:8]=0x1dd6
0x00001dd6      6827000000     push 0x27                               ; '''
0x00001ddb      e970fdffff     jmp sym..plt
;-- imp.tzset:
0x00001de0      ff25faf02000   jmp qword [reloc.tzset]                 ; [0x210ee0:8]=0x1de6
0x00001de6      6828000000     push 0x28                               ; '('
0x00001deb      e960fdffff     jmp sym..plt
;-- imp.fileno:
0x00001df0      ff25f2f02000   jmp qword [reloc.fileno]                ; [0x210ee8:8]=0x1df6
0x00001df6      6829000000     push 0x29                               ; ')'
0x00001dfb      e950fdffff     jmp sym..plt
;-- imp.wcwidth:
0x00001e00      ff25eaf02000   jmp qword [reloc.wcwidth]               ; [0x210ef0:8]=0x1e06
0x00001e06      682a000000     push 0x2a                               ; '*'
0x00001e0b      e940fdffff     jmp sym..plt
;-- imp.malloc:
0x00001e10      ff25e2f02000   jmp qword [reloc.malloc]                ; [0x210ef8:8]=0x1e16
0x00001e16      682b000000     push 0x2b                               ; '+'
0x00001e1b      e930fdffff     jmp sym..plt
;-- imp.fflush:
0x00001e20      ff25daf02000   jmp qword [reloc.fflush]                ; [0x210f00:8]=0x1e26 ; "&\x1e"
0x00001e26      682c000000     push 0x2c                               ; ','
0x00001e2b      e920fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001e30      ff25d2f02000   jmp qword [reloc.nl_langinfo]           ; [0x210f08:8]=0x1e36 ; "6\x1e"
0x00001e36      682d000000     push 0x2d                               ; '-'
0x00001e3b      e910fdffff     jmp sym..plt
;-- imp.ungetc:
0x00001e40      ff25caf02000   jmp qword [reloc.ungetc]                ; [0x210f10:8]=0x1e46 ; "F\x1e"
0x00001e46      682e000000     push 0x2e                               ; '.'
0x00001e4b      e900fdffff     jmp sym..plt
;-- imp.__fxstat:
0x00001e50      ff25c2f02000   jmp qword [reloc.__fxstat]              ; [0x210f18:8]=0x1e56 ; "V\x1e"
0x00001e56      682f000000     push 0x2f                               ; '/'
0x00001e5b      e9f0fcffff     jmp sym..plt
;-- imp.mktime:
0x00001e60      ff25baf02000   jmp qword [reloc.mktime]                ; [0x210f20:8]=0x1e66 ; "f\x1e"
0x00001e66      6830000000     push 0x30                               ; '0'
0x00001e6b      e9e0fcffff     jmp sym..plt
;-- imp.__freading:
0x00001e70      ff25b2f02000   jmp qword [reloc.__freading]            ; [0x210f28:8]=0x1e76 ; "v\x1e"
0x00001e76      6831000000     push 0x31                               ; '1'
0x00001e7b      e9d0fcffff     jmp sym..plt
;-- imp.realloc:
0x00001e80      ff25aaf02000   jmp qword [reloc.realloc]               ; [0x210f30:8]=0x1e86
0x00001e86      6832000000     push 0x32                               ; '2'
0x00001e8b      e9c0fcffff     jmp sym..plt
;-- imp.fdopen:
0x00001e90      ff25a2f02000   jmp qword [reloc.fdopen]                ; [0x210f38:8]=0x1e96
0x00001e96      6833000000     push 0x33                               ; '3'
0x00001e9b      e9b0fcffff     jmp sym..plt
;-- imp.setlocale:
0x00001ea0      ff259af02000   jmp qword [reloc.setlocale]             ; [0x210f40:8]=0x1ea6
0x00001ea6      6834000000     push 0x34                               ; '4'
0x00001eab      e9a0fcffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001eb0      ff2592f02000   jmp qword [reloc.__printf_chk]          ; [0x210f48:8]=0x1eb6
0x00001eb6      6835000000     push 0x35                               ; '5'
0x00001ebb      e990fcffff     jmp sym..plt
;-- imp.timegm:
0x00001ec0      ff258af02000   jmp qword [reloc.timegm]                ; [0x210f50:8]=0x1ec6
0x00001ec6      6836000000     push 0x36                               ; '6'
0x00001ecb      e980fcffff     jmp sym..plt
;-- imp.strftime:
0x00001ed0      ff2582f02000   jmp qword [reloc.strftime]              ; [0x210f58:8]=0x1ed6
0x00001ed6      6837000000     push 0x37                               ; '7'
0x00001edb      e970fcffff     jmp sym..plt
;-- imp.error:
0x00001ee0      ff257af02000   jmp qword [reloc.error]                 ; [0x210f60:8]=0x1ee6
0x00001ee6      6838000000     push 0x38                               ; '8'
0x00001eeb      e960fcffff     jmp sym..plt
;-- imp.fseeko:
0x00001ef0      ff2572f02000   jmp qword [reloc.fseeko]                ; [0x210f68:8]=0x1ef6
0x00001ef6      6839000000     push 0x39                               ; '9'
0x00001efb      e950fcffff     jmp sym..plt
;-- imp.fopen:
0x00001f00      ff256af02000   jmp qword [reloc.fopen]                 ; [0x210f70:8]=0x1f06
0x00001f06      683a000000     push 0x3a                               ; ':'
0x00001f0b      e940fcffff     jmp sym..plt
;-- imp.unsetenv:
0x00001f10      ff2562f02000   jmp qword [reloc.unsetenv]              ; [0x210f78:8]=0x1f16
0x00001f16      683b000000     push 0x3b                               ; ';'
0x00001f1b      e930fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001f20      ff255af02000   jmp qword [reloc.__cxa_atexit]          ; [0x210f80:8]=0x1f26 ; "&\x1f"
0x00001f26      683c000000     push 0x3c                               ; '<'
0x00001f2b      e920fcffff     jmp sym..plt
;-- imp.exit:
0x00001f30      ff2552f02000   jmp qword [reloc.exit]                  ; [0x210f88:8]=0x1f36 ; "6\x1f"
0x00001f36      683d000000     push 0x3d                               ; '='
0x00001f3b      e910fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001f40      ff254af02000   jmp qword [reloc.fwrite]                ; [0x210f90:8]=0x1f46 ; "F\x1f"
0x00001f46      683e000000     push 0x3e                               ; '>'
0x00001f4b      e900fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001f50      ff2542f02000   jmp qword [reloc.__fprintf_chk]         ; [0x210f98:8]=0x1f56 ; "V\x1f"
0x00001f56      683f000000     push 0x3f                               ; '?'
0x00001f5b      e9f0fbffff     jmp sym..plt
;-- imp.mbsinit:
0x00001f60      ff253af02000   jmp qword [reloc.mbsinit]               ; [0x210fa0:8]=0x1f66 ; "f\x1f"
0x00001f66      6840000000     push 0x40                               ; segment.PHDR
0x00001f6b      e9e0fbffff     jmp sym..plt
;-- imp.iswprint:
0x00001f70      ff2532f02000   jmp qword [reloc.iswprint]              ; [0x210fa8:8]=0x1f76 ; "v\x1f"
0x00001f76      6841000000     push 0x41                               ; 'A'
0x00001f7b      e9d0fbffff     jmp sym..plt
;-- imp.__ctype_tolower_loc:
0x00001f80      ff252af02000   jmp qword [reloc.__ctype_tolower_loc]   ; [0x210fb0:8]=0x1f86
0x00001f86      6842000000     push 0x42                               ; 'B'
0x00001f8b      e9c0fbffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001f90      ff2522f02000   jmp qword [reloc.__ctype_b_loc]         ; [0x210fb8:8]=0x1f96
0x00001f96      6843000000     push 0x43                               ; 'C'
0x00001f9b      e9b0fbffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x00001fa0      ff251af02000   jmp qword [reloc.__sprintf_chk]         ; [0x210fc0:8]=0x1fa6
0x00001fa6      6844000000     push 0x44                               ; 'D'
0x00001fab      e9a0fbffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001fb0      .qword 0x90660020f03225ff                              ; [13] -r-x section size 8 named .plt.got
0x00001fb8      0000           add byte [rax], al
0x00001fba      0000           add byte [rax], al
0x00001fbc      0000           add byte [rax], al
0x00001fbe      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001fc0      4157           push r15                                ; [14] -r-x section size 40574 named .text
0x00001fc2      4156           push r14
0x00001fc4      4155           push r13
0x00001fc6      4154           push r12
0x00001fc8      4189fc         mov r12d, edi
0x00001fcb      55             push rbp
0x00001fcc      53             push rbx
0x00001fcd      4989f5         mov r13, rsi
0x00001fd0      4883ec58       sub rsp, 0x58
0x00001fd4      488b3e         mov rdi, qword [rsi]
0x00001fd7      64488b042528.  mov rax, qword fs:[0x28]
0x00001fe0      4889442448     mov qword [rsp + 0x48], rax
0x00001fe5      31c0           xor eax, eax
0x00001fe7      48c744244000.  mov qword [rsp + 0x40], 0
0x00001ff0      e8bb590000     call sym.set_program_name
0x00001ff5      488d35e99e00.  lea rsi, [0x0000bee5]
0x00001ffc      bf06000000     mov edi, 6
0x00002001      e89afeffff     call sym.imp.setlocale
0x00002006      488d35b39f00.  lea rsi, str.usr_local_share_locale     ; 0xbfc0 ; "/usr/local/share/locale"
0x0000200d      488d3d659f00.  lea rdi, [0x0000bf79]                   ; "coreutils"
0x00002014      e857fcffff     call sym.imp.bindtextdomain
0x00002019      488d3d599f00.  lea rdi, [0x0000bf79]                   ; "coreutils"
0x00002020      e81bfcffff     call sym.imp.textdomain
0x00002025      488d3df43800.  lea rdi, sym.close_stdout               ; 0x5920 ; "USH\x83\xec\bH\x8b=\xbb\xb7 "
0x0000202c      e8ff9d0000     call sym.atexit
0x00002031      4183fc01       cmp r12d, 1
0x00002035      48c744242000.  mov qword [rsp + 0x20], 0
0x0000203e      7e16           jle 0x2056
0x00002040      418d7c24ff     lea edi, [r12 - 1]
0x00002045      4863ff         movsxd rdi, edi
0x00002048      48c1e703       shl rdi, 3
0x0000204c      e8bf7c0000     call sym.xmalloc
0x00002051      4889442420     mov qword [rsp + 0x20], rax
0x00002056      488d442440     lea rax, [rsp + 0x40]
0x0000205b      4c8d74243c     lea r14, [rsp + 0x3c]
0x00002060      488d2d79b300.  lea rbp, [0x0000d3e0]
0x00002067      31db           xor ebx, ebx
0x00002069      4531ff         xor r15d, r15d
0x0000206c      c644242f00     mov byte [rsp + 0x2f], 0
0x00002071      c644242e00     mov byte [rsp + 0x2e], 0
0x00002076      c644242d00     mov byte [rsp + 0x2d], 0
0x0000207b      c74424280000.  mov dword [rsp + 0x28], 0
0x00002083      4889442418     mov qword [rsp + 0x18], rax
0x00002088      0f1f84000000.  nop dword [rax + rax]
0x00002090      488d1569b700.  lea rdx, obj.short_options              ; 0xd800 ; "-0123456789D:FJN:S::TW:abcde::fh:i::l:mn::o:rs::tvw:"
0x00002097      488d0d42e720.  lea rcx, obj.long_options               ; 0x2107e0
0x0000209e      4d89f0         mov r8, r14
0x000020a1      4c89ee         mov rsi, r13
0x000020a4      4489e7         mov edi, r12d
0x000020a7      c744243cffff.  mov dword [rsp + 0x3c], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x000020af      e80cfcffff     call sym.imp.getopt_long
0x000020b4      83f8ff         cmp eax, 0xffffffff
0x000020b7      89c2           mov edx, eax
0x000020b9      7469           je 0x2124
0x000020bb      8d40d0         lea eax, [rax - 0x30]
0x000020be      83f809         cmp eax, 9
0x000020c1      761d           jbe 0x20e0
0x000020c3      81c283000000   add edx, 0x83
0x000020c9      81fa04010000   cmp edx, 0x104
0x000020cf      0f877c070000   ja 0x2851
0x000020d5      4863449500     movsxd rax, dword [rbp + rdx*4]
0x000020da      4801e8         add rax, rbp
0x000020dd      ffe0           jmp rax
0x000020df      90             nop
0x000020e0      488d4b01       lea rcx, [rbx + 1]
0x000020e4      483b4c2440     cmp rcx, qword [rsp + 0x40]
0x000020e9      7315           jae 0x2100
0x000020eb      4188141f       mov byte [r15 + rbx], dl
0x000020ef      41c6040f00     mov byte [r15 + rcx], 0
0x000020f4      4889cb         mov rbx, rcx
0x000020f7      eb97           jmp 0x2090
0x000020f9      0f1f80000000.  nop dword [rax]
0x00002100      488b742418     mov rsi, qword [rsp + 0x18]
0x00002105      4c89ff         mov rdi, r15
0x00002108      89542414       mov dword [rsp + 0x14], edx
0x0000210c      48894c2408     mov qword [rsp + 8], rcx
0x00002111      e85a7d0000     call sym.x2realloc
0x00002116      8b542414       mov edx, dword [rsp + 0x14]
0x0000211a      4989c7         mov r15, rax
0x0000211d      488b4c2408     mov rcx, qword [rsp + 8]
0x00002122      ebc7           jmp 0x20eb
0x00002124      4d85ff         test r15, r15
0x00002127      7410           je 0x2139
0x00002129      4c89ff         mov rdi, r15
0x0000212c      e8af0b0000     call sym.parse_column_count
0x00002131      4c89ff         mov rdi, r15
0x00002134      e857faffff     call sym.imp.free
0x00002139      48833d2ff020.  cmp qword [obj.date_format], 0          ; [0x211170:8]=0
0x00002141      0f8441060000   je 0x2788
0x00002147      488d3dcc9e00.  lea rdi, [0x0000c01a]                   ; "TZ"
0x0000214e      e82dfaffff     call sym.imp.getenv
0x00002153      4889c7         mov rdi, rax
0x00002156      e8d5960000     call sym.tzalloc
0x0000215b      48833d65f020.  cmp qword [obj.first_page_number], 0    ; [0x2111c8:8]=0
0x00002163      488905feef20.  mov qword [obj.localtz], rax            ; [0x211168:8]=0
0x0000216a      750b           jne 0x2177
0x0000216c      48c70551f020.  mov qword [obj.first_page_number], 1    ; [0x2111c8:8]=0
0x00002177      0fb63d81f020.  movzx edi, byte [obj.parallel_files]    ; [0x2111ff:1]=0
0x0000217e      4084ff         test dil, dil
0x00002181      741a           je 0x219d
0x00002183      803d71f02000.  cmp byte [obj.explicit_columns], 0      ; [0x2111fb:1]=0
0x0000218a      0f854e070000   jne 0x28de
0x00002190      803d5ef02000.  cmp byte [obj.print_across_flag], 0     ; [0x2111f5:1]=0
0x00002197      0f85be060000   jne 0x285b
0x0000219d      807c242d00     cmp byte [rsp + 0x2d], 0
0x000021a2      7432           je 0x21d6
0x000021a4      807c242e00     cmp byte [rsp + 0x2e], 0
0x000021a9      0f8478050000   je 0x2727
0x000021af      4084ff         test dil, dil
0x000021b2      750d           jne 0x21c1
0x000021b4      803d40f02000.  cmp byte [obj.explicit_columns], 0      ; [0x2111fb:1]=0
0x000021bb      0f847d060000   je 0x283e
0x000021c1      807c242f00     cmp byte [rsp + 0x2f], 0
0x000021c6      c60520f02000.  mov byte [obj.truncate_lines], 1        ; [0x2111ed:1]=0
0x000021cd      7407           je 0x21d6
0x000021cf      c605baef2000.  mov byte [obj.use_col_separator], 1     ; [0x211190:1]=0
0x000021d6      8b051cef2000   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2110f8:4]=0
0x000021dc      4139c4         cmp r12d, eax
0x000021df      7e3e           jle 0x221f
0x000021e1      8b4c2428       mov ecx, dword [rsp + 0x28]
0x000021e5      4863d0         movsxd rdx, eax
0x000021e8      4489e6         mov esi, r12d
0x000021eb      4c8b4c2420     mov r9, qword [rsp + 0x20]
0x000021f0      29c6           sub esi, eax
0x000021f2      498d54d500     lea rdx, [r13 + rdx*8]
0x000021f7      89c8           mov eax, ecx
0x000021f9      01c6           add esi, eax
0x000021fb      0f1f440000     nop dword [rax + rax]
0x00002200      4c8b02         mov r8, qword [rdx]
0x00002203      83c101         add ecx, 1
0x00002206      4883c208       add rdx, 8
0x0000220a      39f1           cmp ecx, esi
0x0000220c      4d8904c1       mov qword [r9 + rax*8], r8
0x00002210      89c8           mov eax, ecx
0x00002212      75ec           jne 0x2200
0x00002214      894c2428       mov dword [rsp + 0x28], ecx
0x00002218      448925d9ee20.  mov dword [obj.optind], r12d            ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2110f8:4]=0
0x0000221f      837c242800     cmp dword [rsp + 0x28], 0
0x00002224      0f84ef040000   je 0x2719
0x0000222a      4084ff         test dil, dil
0x0000222d      0f85f8050000   jne 0x282b
0x00002233      8b442428       mov eax, dword [rsp + 0x28]
0x00002237      488b5c2420     mov rbx, qword [rsp + 0x20]
0x0000223c      83e801         sub eax, 1
0x0000223f      488d6cc308     lea rbp, [rbx + rax*8 + 8]
0x00002244      0f1f4000       nop dword [rax]
0x00002248      4889de         mov rsi, rbx
0x0000224b      bf01000000     mov edi, 1
0x00002250      4883c308       add rbx, 8
0x00002254      e887200000     call sym.print_files
0x00002259      4839dd         cmp rbp, rbx
0x0000225c      75ea           jne 0x2248
0x0000225e      488b3d3bef20.  mov rdi, qword [obj.number_buff]        ; [0x2111a0:8]=0
0x00002265      e826f9ffff     call sym.imp.free
0x0000226a      488b3dd7ee20.  mov rdi, qword [obj.clump_buff]         ; [0x211148:8]=0
0x00002271      e81af9ffff     call sym.imp.free
0x00002276      488b3dabef20.  mov rdi, qword [obj.column_vector]      ; [0x211228:8]=0
0x0000227d      e80ef9ffff     call sym.imp.free
0x00002282      488b3d7fef20.  mov rdi, qword [obj.line_vector]        ; [0x211208:8]=0
0x00002289      e802f9ffff     call sym.imp.free
0x0000228e      488b3d6bef20.  mov rdi, qword [obj.end_vector]         ; [0x211200:8]=0
0x00002295      e8f6f8ffff     call sym.imp.free
0x0000229a      488b3d7fef20.  mov rdi, qword [obj.buff]               ; [0x211220:8]=0
0x000022a1      e8eaf8ffff     call sym.imp.free
0x000022a6      803d49ef2000.  cmp byte [obj.have_read_stdin], 0       ; [0x2111f6:1]=0
0x000022ad      0f8537050000   jne 0x27ea
0x000022b3      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000022b8      6448331c2528.  xor rbx, qword fs:[0x28]
0x000022c1      0fb60508ef20.  movzx eax, byte [obj.failed_opens]      ; [0x2111d0:1]=0
0x000022c8      0f850b060000   jne 0x28d9
0x000022ce      4883c458       add rsp, 0x58
0x000022d2      5b             pop rbx
0x000022d3      5d             pop rbp
0x000022d4      415c           pop r12
0x000022d6      415d           pop r13
0x000022d8      415e           pop r14
0x000022da      415f           pop r15
0x000022dc      c3             ret
0x000022dd      488b151cee20.  mov rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x000022e4      4885d2         test rdx, rdx
0x000022e7      0f8492050000   je 0x287f
0x000022ed      8b7c243c       mov edi, dword [rsp + 0x3c]
0x000022f1      31f6           xor esi, esi
0x000022f3      e888080000     call sym.first_last_page
0x000022f8      84c0           test al, al
0x000022fa      0f84a3050000   je 0x28a3
0x00002300      31db           xor ebx, ebx
0x00002302      e989fdffff     jmp 0x2090
0x00002307      488b3df2ed20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x0000230e      31db           xor ebx, ebx
0x00002310      e8cb090000     call sym.parse_column_count
0x00002315      4c89ff         mov rdi, r15
0x00002318      4531ff         xor r15d, r15d
0x0000231b      e870f8ffff     call sym.imp.free
0x00002320      48c744244000.  mov qword [rsp + 0x40], 0
0x00002329      e962fdffff     jmp 0x2090
0x0000232e      488d35b3af00.  lea rsi, str.w_PAGE_WIDTH__invalid_number_of_characters ; 0xd2e8 ; "'-w PAGE_WIDTH' invalid number of characters"
0x00002335      31ff           xor edi, edi
0x00002337      ba05000000     mov edx, 5
0x0000233c      e83ff9ffff     call sym.imp.dcgettext
0x00002341      488b3db8ed20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x00002348      488d0d969b00.  lea rcx, [0x0000bee5]
0x0000234f      4531c9         xor r9d, r9d
0x00002352      be01000000     mov esi, 1
0x00002357      4989c0         mov r8, rax
0x0000235a      baffffff7f     mov edx, 0x7fffffff
0x0000235f      e85c7d0000     call sym.xdectoimax
0x00002364      0fb63582ee20.  movzx esi, byte [obj.truncate_lines]    ; [0x2111ed:1]=0
0x0000236b      4084f6         test sil, sil
0x0000236e      408874242d     mov byte [rsp + 0x2d], sil
0x00002373      408874242e     mov byte [rsp + 0x2e], sil
0x00002378      7586           jne 0x2300
0x0000237a      8905c4ec2000   mov dword [obj.chars_per_line], eax     ; [0x211044:4]=72 ; U"HB\u0101\ubee5"
0x00002380      c644242e01     mov byte [rsp + 0x2e], 1
0x00002385      31db           xor ebx, ebx
0x00002387      c644242d01     mov byte [rsp + 0x2d], 1
0x0000238c      e9fffcffff     jmp 0x2090
0x00002391      c60502ee2000.  mov byte [obj.use_esc_sequence], 1      ; [0x21119a:1]=0
0x00002398      31db           xor ebx, ebx
0x0000239a      e9f1fcffff     jmp 0x2090
0x0000239f      c605a7ec2000.  mov byte [obj.extremities], 0           ; [0x21104d:1]=1
0x000023a6      c6054dee2000.  mov byte [obj.keep_FF], 1               ; [0x2111fa:1]=0
0x000023ad      31db           xor ebx, ebx
0x000023af      e9dcfcffff     jmp 0x2090
0x000023b4      0fb605d5ed20.  movzx eax, byte [obj.use_col_separator] ; [0x211190:1]=0
0x000023bb      84c0           test al, al
0x000023bd      8844242d       mov byte [rsp + 0x2d], al
0x000023c1      8844242f       mov byte [rsp + 0x2f], al
0x000023c5      0f8535ffffff   jne 0x2300
0x000023cb      488b3d2eed20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x000023d2      4885ff         test rdi, rdi
0x000023d5      0f849c030000   je 0x2777
0x000023db      e8d0080000     call sym.separator_string
0x000023e0      31db           xor ebx, ebx
0x000023e2      c644242f01     mov byte [rsp + 0x2f], 1
0x000023e7      c644242d01     mov byte [rsp + 0x2d], 1
0x000023ec      e99ffcffff     jmp 0x2090
0x000023f1      c60599ed2000.  mov byte [obj.ignore_failed_opens], 1   ; [0x211191:1]=0
0x000023f8      31db           xor ebx, ebx
0x000023fa      e991fcffff     jmp 0x2090
0x000023ff      488d35c2ae00.  lea rsi, str.o_MARGIN__invalid_line_offset ; 0xd2c8 ; "'-o MARGIN' invalid line offset"
0x00002406      ba05000000     mov edx, 5
0x0000240b      31ff           xor edi, edi
0x0000240d      31db           xor ebx, ebx
0x0000240f      e86cf8ffff     call sym.imp.dcgettext
0x00002414      488b3de5ec20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x0000241b      488d0dc39a00.  lea rcx, [0x0000bee5]
0x00002422      4989c0         mov r8, rax
0x00002425      4531c9         xor r9d, r9d
0x00002428      baffffff7f     mov edx, 0x7fffffff
0x0000242d      31f6           xor esi, esi
0x0000242f      e88c7c0000     call sym.xdectoimax
0x00002434      8905a2ed2000   mov dword [obj.chars_per_margin], eax   ; [0x2111dc:4]=0
0x0000243a      e951fcffff     jmp 0x2090
0x0000243f      488b3dbaec20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x00002446      c6055fed2000.  mov byte [obj.numbered_lines], 1        ; [0x2111ac:1]=0
0x0000244d      4885ff         test rdi, rdi
0x00002450      0f84aafeffff   je 0x2300
0x00002456      488d0db3eb20.  lea rcx, obj.chars_per_number           ; 0x211010
0x0000245d      488d15bceb20.  lea rdx, obj.number_separator           ; 0x211020 ; "\t"
0x00002464      be6e000000     mov esi, 0x6e                           ; 'n'
0x00002469      31db           xor ebx, ebx
0x0000246b      e8a0330000     call sym.getoptarg
0x00002470      e91bfcffff     jmp 0x2090
0x00002475      c60583ed2000.  mov byte [obj.parallel_files], 1        ; [0x2111ff:1]=0
0x0000247c      c605c9eb2000.  mov byte [obj.storing_columns], 0       ; [0x21104c:1]=1
0x00002483      31db           xor ebx, ebx
0x00002485      e906fcffff     jmp 0x2090
0x0000248a      488d35d7ad00.  lea rsi, str.l_PAGE_LENGTH__invalid_number_of_lines ; 0xd268 ; "'-l PAGE_LENGTH' invalid number of lines"
0x00002491      ba05000000     mov edx, 5
0x00002496      31ff           xor edi, edi
0x00002498      31db           xor ebx, ebx
0x0000249a      e8e1f7ffff     call sym.imp.dcgettext
0x0000249f      488b3d5aec20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x000024a6      488d0d389a00.  lea rcx, [0x0000bee5]
0x000024ad      4989c0         mov r8, rax
0x000024b0      4531c9         xor r9d, r9d
0x000024b3      baffffff7f     mov edx, 0x7fffffff
0x000024b8      be01000000     mov esi, 1
0x000024bd      e8fe7b0000     call sym.xdectoimax
0x000024c2      890580eb2000   mov dword [obj.lines_per_page], eax     ; [0x211048:4]=66 ; "B"
0x000024c8      e9c3fbffff     jmp 0x2090
0x000024cd      488b3d2cec20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x000024d4      4885ff         test rdi, rdi
0x000024d7      7418           je 0x24f1
0x000024d9      488d0d54eb20.  lea rcx, obj.chars_per_output_tab       ; 0x211034
0x000024e0      488d1551eb20.  lea rdx, obj.output_tab_char            ; 0x211038 ; U"\t\b\tHB\u0101\ubee5"
0x000024e7      be69000000     mov esi, 0x69                           ; 'i'
0x000024ec      e81f330000     call sym.getoptarg
0x000024f1      c605ecec2000.  mov byte [obj.tabify_output], 1         ; [0x2111e4:1]=0
0x000024f8      31db           xor ebx, ebx
0x000024fa      e991fbffff     jmp 0x2090
0x000024ff      488b05faeb20.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x00002506      31db           xor ebx, ebx
0x00002508      48890569ec20.  mov qword [obj.custom_header], rax      ; [0x211178:8]=0
0x0000250f      e97cfbffff     jmp 0x2090
0x00002514      488b3de5eb20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x0000251b      4885ff         test rdi, rdi
0x0000251e      7418           je 0x2538
0x00002520      488d0d15eb20.  lea rcx, obj.chars_per_input_tab        ; 0x21103c
0x00002527      488d1512eb20.  lea rdx, obj.input_tab_char             ; 0x211040 ; U"\tHB\u0101\ubee5"
0x0000252e      be65000000     mov esi, 0x65                           ; 'e'
0x00002533      e8d8320000     call sym.getoptarg
0x00002538      c605a6ec2000.  mov byte [obj.untabify_input], 1        ; [0x2111e5:1]=0
0x0000253f      31db           xor ebx, ebx
0x00002541      e94afbffff     jmp 0x2090
0x00002546      c6054bec2000.  mov byte [obj.double_space], 1          ; [0x211198:1]=0
0x0000254d      31db           xor ebx, ebx
0x0000254f      e93cfbffff     jmp 0x2090
0x00002554      c6053eec2000.  mov byte [obj.use_cntrl_prefix], 1      ; [0x211199:1]=0
0x0000255b      31db           xor ebx, ebx
0x0000255d      e92efbffff     jmp 0x2090
0x00002562      c6058bec2000.  mov byte [obj.balance_columns], 1       ; [0x2111f4:1]=0
0x00002569      31db           xor ebx, ebx
0x0000256b      e920fbffff     jmp 0x2090
0x00002570      c6057eec2000.  mov byte [obj.print_across_flag], 1     ; [0x2111f5:1]=0
0x00002577      c605ceea2000.  mov byte [obj.storing_columns], 0       ; [0x21104c:1]=1
0x0000257e      31db           xor ebx, ebx
0x00002580      e90bfbffff     jmp 0x2090
0x00002585      488d358cad00.  lea rsi, str.W_PAGE_WIDTH__invalid_number_of_characters ; 0xd318 ; "'-W PAGE_WIDTH' invalid number of characters"
0x0000258c      ba05000000     mov edx, 5
0x00002591      31ff           xor edi, edi
0x00002593      c60553ec2000.  mov byte [obj.truncate_lines], 1        ; [0x2111ed:1]=0
0x0000259a      31db           xor ebx, ebx
0x0000259c      e8dff6ffff     call sym.imp.dcgettext
0x000025a1      488b3d58eb20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x000025a8      488d0d369900.  lea rcx, [0x0000bee5]
0x000025af      4989c0         mov r8, rax
0x000025b2      4531c9         xor r9d, r9d
0x000025b5      baffffff7f     mov edx, 0x7fffffff
0x000025ba      be01000000     mov esi, 1
0x000025bf      e8fc7a0000     call sym.xdectoimax
0x000025c4      c644242e00     mov byte [rsp + 0x2e], 0
0x000025c9      890575ea2000   mov dword [obj.chars_per_line], eax     ; [0x211044:4]=72 ; U"HB\u0101\ubee5"
0x000025cf      e9bcfaffff     jmp 0x2090
0x000025d4      c60572ea2000.  mov byte [obj.extremities], 0           ; [0x21104d:1]=1
0x000025db      c60518ec2000.  mov byte [obj.keep_FF], 0               ; [0x2111fa:1]=0
0x000025e2      31db           xor ebx, ebx
0x000025e4      e9a7faffff     jmp 0x2090
0x000025e9      488b3d10eb20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x000025f0      488d05ee9800.  lea rax, [0x0000bee5]
0x000025f7      c7058beb2000.  mov dword [obj.col_sep_length], 0       ; [0x21118c:4]=0
0x00002601      c60588eb2000.  mov byte [obj.use_col_separator], 1     ; [0x211190:1]=0
0x00002608      c644242f00     mov byte [rsp + 0x2f], 0
0x0000260d      4889053cea20.  mov qword [obj.col_sep_string], rax     ; [0x211050:8]=0xbee5
0x00002614      4885ff         test rdi, rdi
0x00002617      0f84e3fcffff   je 0x2300
0x0000261d      e88e060000     call sym.separator_string
0x00002622      31db           xor ebx, ebx
0x00002624      e967faffff     jmp 0x2090
0x00002629      488d3568ac00.  lea rsi, str.N_NUMBER__invalid_starting_line_number ; 0xd298 ; "'-N NUMBER' invalid starting line number"
0x00002630      ba05000000     mov edx, 5
0x00002635      31ff           xor edi, edi
0x00002637      c605dae92000.  mov byte [obj.skip_count], 0            ; [0x211018:1]=1
0x0000263e      31db           xor ebx, ebx
0x00002640      e83bf6ffff     call sym.imp.dcgettext
0x00002645      488b3db4ea20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x0000264c      488d0d929800.  lea rcx, [0x0000bee5]
0x00002653      4989c0         mov r8, rax
0x00002656      4531c9         xor r9d, r9d
0x00002659      baffffff7f     mov edx, 0x7fffffff
0x0000265e      48c7c6000000.  mov rsi, 0xffffffff80000000
0x00002665      e8567a0000     call sym.xdectoimax
0x0000266a      8905a4e92000   mov dword [obj.start_line_num], eax     ; [0x211014:4]=1
0x00002670      e91bfaffff     jmp 0x2090
0x00002675      c60570eb2000.  mov byte [obj.join_lines], 1            ; [0x2111ec:1]=0
0x0000267c      31db           xor ebx, ebx
0x0000267e      e90dfaffff     jmp 0x2090
0x00002683      c6056deb2000.  mov byte [obj.use_form_feed], 1         ; [0x2111f7:1]=0
0x0000268a      31db           xor ebx, ebx
0x0000268c      e9fff9ffff     jmp 0x2090
0x00002691      488b0568ea20.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x00002698      31db           xor ebx, ebx
0x0000269a      488905cfea20.  mov qword [obj.date_format], rax        ; [0x211170:8]=0
0x000026a1      e9eaf9ffff     jmp 0x2090
0x000026a6      48833d1aeb20.  cmp qword [obj.first_page_number], 0    ; [0x2111c8:8]=0
0x000026ae      488b054bea20.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x000026b5      7509           jne 0x26c0
0x000026b7      80382b         cmp byte [rax], 0x2b
0x000026ba      0f84fa000000   je 0x27ba
0x000026c0      8b542428       mov edx, dword [rsp + 0x28]
0x000026c4      488b742420     mov rsi, qword [rsp + 0x20]
0x000026c9      31db           xor ebx, ebx
0x000026cb      488904d6       mov qword [rsi + rdx*8], rax
0x000026cf      8d4201         lea eax, [rdx + 1]
0x000026d2      89442428       mov dword [rsp + 0x28], eax
0x000026d6      e9b5f9ffff     jmp 0x2090
0x000026db      4883ec08       sub rsp, 8
0x000026df      488b3d02ea20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x000026e6      488b0d6be920.  mov rcx, qword [obj.Version]            ; [0x211058:8]=0xd835 str.8.31 ; "5\xd8"
0x000026ed      6a00           push 0
0x000026ef      4c8d0df89800.  lea r9, str.Roland_Huebner              ; 0xbfee ; "Roland Huebner"
0x000026f6      4c8d05009900.  lea r8, str.Pete_TerMaat                ; 0xbffd ; "Pete TerMaat"
0x000026fd      488d15719800.  lea rdx, str.GNU_coreutils              ; 0xbf75 ; "GNU coreutils"
0x00002704      488d35f19700.  lea rsi, [0x0000befc]                   ; "pr"
0x0000270b      31c0           xor eax, eax
0x0000270d      e89e740000     call sym.version_etc
0x00002712      31ff           xor edi, edi
0x00002714      e817f8ffff     call sym.imp.exit
0x00002719      31f6           xor esi, esi
0x0000271b      31ff           xor edi, edi
0x0000271d      e8be1b0000     call sym.print_files
0x00002722      e937fbffff     jmp 0x225e
0x00002727      803d62ea2000.  cmp byte [obj.use_col_separator], 1     ; [0x211190:1]=0
0x0000272e      0f84a2faffff   je 0x21d6
0x00002734      807c242f00     cmp byte [rsp + 0x2f], 0
0x00002739      0f8497faffff   je 0x21d6
0x0000273f      4084ff         test dil, dil
0x00002742      750d           jne 0x2751
0x00002744      803db0ea2000.  cmp byte [obj.explicit_columns], 0      ; [0x2111fb:1]=0
0x0000274b      0f8485faffff   je 0x21d6
0x00002751      803d95ea2000.  cmp byte [obj.truncate_lines], 0        ; [0x2111ed:1]=0
0x00002758      0f8571faffff   jne 0x21cf
0x0000275e      833d27ea2000.  cmp dword [obj.col_sep_length], 0       ; [0x21118c:4]=0
0x00002765      c60580ea2000.  mov byte [obj.join_lines], 1            ; [0x2111ec:1]=0
0x0000276c      0f8f5dfaffff   jg 0x21cf
0x00002772      e95ffaffff     jmp 0x21d6
0x00002777      c644242f01     mov byte [rsp + 0x2f], 1
0x0000277c      c644242d01     mov byte [rsp + 0x2d], 1
0x00002781      31db           xor ebx, ebx
0x00002783      e908f9ffff     jmp 0x2090
0x00002788      488d3d7b9800.  lea rdi, str.POSIXLY_CORRECT            ; 0xc00a ; "POSIXLY_CORRECT"
0x0000278f      e8ecf3ffff     call sym.imp.getenv
0x00002794      4885c0         test rax, rax
0x00002797      7448           je 0x27e1
0x00002799      bf02000000     mov edi, 2
0x0000279e      e86d330000     call sym.hard_locale
0x000027a3      84c0           test al, al
0x000027a5      488d15f69700.  lea rdx, str.b__e__H:_M__Y              ; 0xbfa2 ; "%b %e %H:%M %Y"
0x000027ac      7533           jne 0x27e1
0x000027ae      488915bbe920.  mov qword [obj.date_format], rdx        ; [0x211170:8]=0
0x000027b5      e98df9ffff     jmp 0x2147
0x000027ba      488d5001       lea rdx, [rax + 1]
0x000027be      be2b000000     mov esi, 0x2b                           ; '+'
0x000027c3      bffeffffff     mov edi, 0xfffffffe                     ; 4294967294
0x000027c8      e8b3030000     call sym.first_last_page
0x000027cd      84c0           test al, al
0x000027cf      0f852bfbffff   jne 0x2300
0x000027d5      488b0524e920.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x000027dc      e9dffeffff     jmp 0x26c0
0x000027e1      488d15c99700.  lea rdx, str.Y__m__d__H:_M              ; 0xbfb1 ; "%Y-%m-%d %H:%M"
0x000027e8      ebc4           jmp 0x27ae
0x000027ea      488b3dffe820.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2110f0:8]=0
0x000027f1      e84a8b0000     call sym.rpl_fclose
0x000027f6      83c001         add eax, 1
0x000027f9      0f85b4faffff   jne 0x22b3
0x000027ff      488d35cf9600.  lea rsi, str.standard_input             ; 0xbed5 ; "standard input"
0x00002806      ba05000000     mov edx, 5
0x0000280b      31ff           xor edi, edi
0x0000280d      e86ef4ffff     call sym.imp.dcgettext
0x00002812      4889c3         mov rbx, rax
0x00002815      e896f3ffff     call sym.imp.__errno_location
0x0000281a      8b30           mov esi, dword [rax]
0x0000281c      4889da         mov rdx, rbx
0x0000281f      bf01000000     mov edi, 1
0x00002824      31c0           xor eax, eax
0x00002826      e8b5f6ffff     call sym.imp.error
0x0000282b      488b742420     mov rsi, qword [rsp + 0x20]
0x00002830      8b7c2428       mov edi, dword [rsp + 0x28]
0x00002834      e8a71a0000     call sym.print_files
0x00002839      e920faffff     jmp 0x225e
0x0000283e      c605a7e92000.  mov byte [obj.join_lines], 1            ; [0x2111ec:1]=0
0x00002845      e98cf9ffff     jmp 0x21d6
0x0000284a      31ff           xor edi, edi
0x0000284c      e84f2a0000     call sym.usage
0x00002851      bf01000000     mov edi, 1
0x00002856      e8452a0000     call sym.usage
0x0000285b      488d3526ab00.  lea rsi, str.cannot_specify_both_printing_across_and_printing_in_parallel ; 0xd388 ; "cannot specify both printing across and printing in parallel"
0x00002862      ba05000000     mov edx, 5
0x00002867      31ff           xor edi, edi
0x00002869      e812f4ffff     call sym.imp.dcgettext
0x0000286e      31f6           xor esi, esi
0x00002870      4889c2         mov rdx, rax
0x00002873      bf01000000     mov edi, 1
0x00002878      31c0           xor eax, eax
0x0000287a      e861f6ffff     call sym.imp.error
0x0000287f      488d35aaa900.  lea rsi, str.pages_FIRST_PAGE_:LAST_PAGE___missing_argument ; 0xd230 ; "'--pages=FIRST_PAGE[:LAST_PAGE]' missing argument"
0x00002886      ba05000000     mov edx, 5
0x0000288b      31ff           xor edi, edi
0x0000288d      e8eef3ffff     call sym.imp.dcgettext
0x00002892      31f6           xor esi, esi
0x00002894      4889c2         mov rdx, rax
0x00002897      bf01000000     mov edi, 1
0x0000289c      31c0           xor eax, eax
0x0000289e      e83df6ffff     call sym.imp.error
0x000028a3      488b3d56e820.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x000028aa      e8116e0000     call sym.quote
0x000028af      488d35229700.  lea rsi, str.invalid_page_range__s      ; 0xbfd8 ; "invalid page range %s"
0x000028b6      4889c3         mov rbx, rax
0x000028b9      ba05000000     mov edx, 5
0x000028be      31ff           xor edi, edi
0x000028c0      e8bbf3ffff     call sym.imp.dcgettext
0x000028c5      4889d9         mov rcx, rbx
0x000028c8      4889c2         mov rdx, rax
0x000028cb      31f6           xor esi, esi
0x000028cd      bf01000000     mov edi, 1
0x000028d2      31c0           xor eax, eax
0x000028d4      e807f6ffff     call sym.imp.error
0x000028d9      e8d2f3ffff     call sym.imp.__stack_chk_fail
0x000028de      488d3563aa00.  lea rsi, str.cannot_specify_number_of_columns_when_printing_in_parallel ; 0xd348 ; "cannot specify number of columns when printing in parallel"
0x000028e5      ba05000000     mov edx, 5
0x000028ea      31ff           xor edi, edi
0x000028ec      e88ff3ffff     call sym.imp.dcgettext
0x000028f1      31f6           xor esi, esi
0x000028f3      4889c2         mov rdx, rax
0x000028f6      bf01000000     mov edi, 1
0x000028fb      31c0           xor eax, eax
0x000028fd      e8def5ffff     call sym.imp.error
0x00002902      662e0f1f8400.  nop word cs:[rax + rax]
0x0000290c      0f1f4000       nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002910      31ed           xor ebp, ebp
0x00002912      4989d1         mov r9, rdx
0x00002915      5e             pop rsi
0x00002916      4889e2         mov rdx, rsp
0x00002919      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000291d      50             push rax
0x0000291e      54             push rsp
0x0000291f      4c8d05fa9400.  lea r8, sym.__libc_csu_fini             ; 0xbe20
0x00002926      488d0d839400.  lea rcx, sym.__libc_csu_init            ; 0xbdb0 ; "AWAVI\x89\xd7AUATL\x8d%\x0eJ "
0x0000292d      488d3d8cf6ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1fc0 ; "AWAVAUATA\x89\xfcUSI\x89\xf5H\x83\xecXH\x8b>dH\x8b\x04%("
0x00002934      ff1596e62000   call qword [reloc.__libc_start_main]    ; [0x210fd0:8]=0
0x0000293a      f4             hlt
0x0000293b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002940      488d3d99e720.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2110e0
0x00002947      55             push rbp
0x00002948      488d0591e720.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2110e0
0x0000294f      4839f8         cmp rax, rdi
0x00002952      4889e5         mov rbp, rsp
0x00002955      7419           je 0x2970
0x00002957      488b056ae620.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x210fc8:8]=0
0x0000295e      4885c0         test rax, rax
0x00002961      740d           je 0x2970
0x00002963      5d             pop rbp
0x00002964      ffe0           jmp rax
0x00002966      662e0f1f8400.  nop word cs:[rax + rax]
0x00002970      5d             pop rbp
0x00002971      c3             ret
0x00002972      0f1f4000       nop dword [rax]
0x00002976      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002980      488d3d59e720.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2110e0
0x00002987      488d3552e720.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2110e0
0x0000298e      55             push rbp
0x0000298f      4829fe         sub rsi, rdi
0x00002992      4889e5         mov rbp, rsp
0x00002995      48c1fe03       sar rsi, 3
0x00002999      4889f0         mov rax, rsi
0x0000299c      48c1e83f       shr rax, 0x3f
0x000029a0      4801c6         add rsi, rax
0x000029a3      48d1fe         sar rsi, 1
0x000029a6      7418           je 0x29c0
0x000029a8      488b0531e620.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x210fe0:8]=0
0x000029af      4885c0         test rax, rax
0x000029b2      740c           je 0x29c0
0x000029b4      5d             pop rbp
0x000029b5      ffe0           jmp rax
0x000029b7      660f1f840000.  nop word [rax + rax]
0x000029c0      5d             pop rbp
0x000029c1      c3             ret
0x000029c2      0f1f4000       nop dword [rax]
0x000029c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x000029d0      803d51e72000.  cmp byte [obj.completed.7697], 0        ; [0x211128:1]=0
0x000029d7      752f           jne 0x2a08
0x000029d9      48833d07e620.  cmp qword [reloc.__cxa_finalize], 0     ; [0x210fe8:8]=0
0x000029e1      55             push rbp
0x000029e2      4889e5         mov rbp, rsp
0x000029e5      740c           je 0x29f3
0x000029e7      488b3d1ae620.  mov rdi, qword [obj.__dso_handle]       ; [0x211008:8]=0x211008 obj.__dso_handle
0x000029ee      e8bdf5ffff     call sym..plt.got
0x000029f3      e848ffffff     call sym.deregister_tm_clones
0x000029f8      c60529e72000.  mov byte [obj.completed.7697], 1        ; [0x211128:1]=0
0x000029ff      5d             pop rbp
0x00002a00      c3             ret
0x00002a01      0f1f80000000.  nop dword [rax]
0x00002a08      f3c3           ret
0x00002a0a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002a10      55             push rbp
0x00002a11      4889e5         mov rbp, rsp
0x00002a14      5d             pop rbp
0x00002a15      e966ffffff     jmp sym.register_tm_clones
0x00002a1a      660f1f440000   nop word [rax + rax]
;-- cols_ready_to_print:
0x00002a20      8b050ae62000   mov eax, dword [obj.columns]            ; .//src:785 ; [0x211030:4]=1
0x00002a26      488b0dfbe720.  mov rcx, qword [obj.column_vector]      ; [0x211228:8]=0
0x00002a2d      85c0           test eax, eax
0x00002a2f      7445           je 0x2a76
0x00002a31      0fb63514e620.  movzx esi, byte [obj.storing_columns]   ; .//src:794 ; [0x21104c:1]=1
0x00002a38      83e801         sub eax, 1
0x00002a3b      488d5110       lea rdx, [rcx + 0x10]
0x00002a3f      48c1e006       shl rax, 6
0x00002a43      488d4c0150     lea rcx, [rcx + rax + 0x50]
0x00002a48      31c0           xor eax, eax                            ; .//src:790
0x00002a4a      660f1f440000   nop word [rax + rax]
0x00002a50      833a01         cmp dword [rdx], 1                      ; .//src:792
0x00002a53      7615           jbe 0x2a6a
0x00002a55      4084f6         test sil, sil                           ; .//src:794
0x00002a58      7413           je 0x2a6d
0x00002a5a      448b421c       mov r8d, dword [rdx + 0x1c]
0x00002a5e      4585c0         test r8d, r8d
0x00002a61      7e0a           jle 0x2a6d
0x00002a63      8b7a20         mov edi, dword [rdx + 0x20]
0x00002a66      85ff           test edi, edi
0x00002a68      7e03           jle 0x2a6d
0x00002a6a      83c001         add eax, 1                              ; .//src:795
0x00002a6d      4883c240       add rdx, 0x40                           ; segment.PHDR
0x00002a71      4839ca         cmp rdx, rcx                            ; .//src:791
0x00002a74      75da           jne 0x2a50
0x00002a76      f3c3           ret                                     ; .//src:797
0x00002a78      0f1f84000000.  nop dword [rax + rax]
;-- reset_status:
0x00002a80      8b15aae52000   mov edx, dword [obj.columns]            ; .//src:1563 ; [0x211030:4]=1
0x00002a86      488b3d9be720.  mov rdi, qword [obj.column_vector]      ; .//src:1567 ; [0x211228:8]=0
0x00002a8d      85d2           test edx, edx
0x00002a8f      7440           je 0x2ad1
0x00002a91      83ea01         sub edx, 1
0x00002a94      8b0d26e72000   mov ecx, dword [obj.files_ready_to_read] ; [0x2111c0:4]=0
0x00002a9a      488d4710       lea rax, [rdi + 0x10]
0x00002a9e      48c1e206       shl rdx, 6
0x00002aa2      31f6           xor esi, esi
0x00002aa4      488d541750     lea rdx, [rdi + rdx + 0x50]
0x00002aa9      0f1f80000000.  nop dword [rax]
0x00002ab0      833802         cmp dword [rax], 2                      ; .//src:1568
0x00002ab3      750e           jne 0x2ac3
0x00002ab5      c70000000000   mov dword [rax], 0                      ; .//src:1570
0x00002abb      83c101         add ecx, 1                              ; .//src:1571
0x00002abe      be01000000     mov esi, 1
0x00002ac3      4883c040       add rax, 0x40                           ; segment.PHDR
0x00002ac7      4839d0         cmp rax, rdx                            ; .//src:1567
0x00002aca      75e4           jne 0x2ab0
0x00002acc      4084f6         test sil, sil
0x00002acf      751a           jne 0x2aeb
0x00002ad1      803d74e52000.  cmp byte [obj.storing_columns], 0       ; .//src:1574 ; [0x21104c:1]=1
0x00002ad8      740f           je 0x2ae9
0x00002ada      31c0           xor eax, eax                            ; .//src:1578
0x00002adc      837f1003       cmp dword [rdi + 0x10], 3
0x00002ae0      0f95c0         setne al
0x00002ae3      8905d7e62000   mov dword [obj.files_ready_to_read], eax ; [0x2111c0:4]=0
0x00002ae9      f3c3           ret                                     ; .//src:1582
0x00002aeb      890dcfe62000   mov dword [obj.files_ready_to_read], ecx ; [0x2111c0:4]=0
0x00002af1      ebde           jmp 0x2ad1
0x00002af3      0f1f00         nop dword [rax]
0x00002af6      662e0f1f8400.  nop word cs:[rax + rax]
;-- store_char:
0x00002b00      8b0d12e72000   mov ecx, dword [obj.buff_current]       ; .//src:1998 ; [0x211218:4]=0
0x00002b06      53             push rbx
0x00002b07      89fb           mov ebx, edi
0x00002b09      483b0d00e720.  cmp rcx, qword [obj.buff_allocated]     ; .//src:1999 ; [0x211210:8]=0
0x00002b10      488b0509e720.  mov rax, qword [obj.buff]               ; [0x211220:8]=0
0x00002b17      4889ca         mov rdx, rcx
0x00002b1a      721f           jb 0x2b3b
0x00002b1c      488d35ede620.  lea rsi, obj.buff_allocated             ; .//src:2002 ; 0x211210
0x00002b23      4889c7         mov rdi, rax
0x00002b26      e845730000     call sym.x2realloc
0x00002b2b      8b0de7e62000   mov ecx, dword [obj.buff_current]       ; [0x211218:4]=0
0x00002b31      488905e8e620.  mov qword [obj.buff], rax               ; [0x211220:8]=0
0x00002b38      4889ca         mov rdx, rcx
0x00002b3b      83c201         add edx, 1                              ; .//src:2004
0x00002b3e      881c08         mov byte [rax + rcx], bl
0x00002b41      8915d1e62000   mov dword [obj.buff_current], edx       ; [0x211218:4]=0
0x00002b47      5b             pop rbx                                 ; .//src:2005
0x00002b48      c3             ret
0x00002b49      0f1f80000000.  nop dword [rax]
;-- integer_overflow:
0x00002b50      488d350d9300.  lea rsi, str.integer_overflow           ; .//src:776 ; 0xbe64 ; "integer overflow"
0x00002b57      ba05000000     mov edx, 5
0x00002b5c      31ff           xor edi, edi
0x00002b5e      4883ec08       sub rsp, 8
0x00002b62      e819f1ffff     call sym.imp.dcgettext                  ; .//src:777
0x00002b67      31f6           xor esi, esi
0x00002b69      4889c2         mov rdx, rax
0x00002b6c      bf01000000     mov edi, 1
0x00002b71      31c0           xor eax, eax
0x00002b73      e868f3ffff     call sym.imp.error
0x00002b78      0f1f84000000.  nop dword [rax + rax]
;-- first_last_page:
0x00002b80      4156           push r14                                ; .//src:804
0x00002b82      4155           push r13
0x00002b84      4c8d055a9300.  lea r8, [0x0000bee5]                    ; .//src:808
0x00002b8b      4154           push r12                                ; .//src:804
0x00002b8d      55             push rbp
0x00002b8e      4189fe         mov r14d, edi
0x00002b91      53             push rbx
0x00002b92      4889d3         mov rbx, rdx
0x00002b95      4189f5         mov r13d, esi
0x00002b98      ba0a000000     mov edx, 0xa                            ; .//src:808
0x00002b9d      4889df         mov rdi, rbx
0x00002ba0      4883ec20       sub rsp, 0x20                           ; .//src:804
0x00002ba4      488d4c2408     lea rcx, [rsp + 8]                      ; .//src:808
0x00002ba9      4989e4         mov r12, rsp
0x00002bac      48c7442410ff.  mov qword [rsp + 0x10], 0xffffffffffffffff ; .//src:807
0x00002bb5      4c89e6         mov rsi, r12                            ; .//src:808
0x00002bb8      64488b042528.  mov rax, qword fs:[0x28]                ; .//src:804
0x00002bc1      4889442418     mov qword [rsp + 0x18], rax
0x00002bc6      31c0           xor eax, eax
0x00002bc8      e853830000     call sym.xstrtoumax                     ; .//src:808
0x00002bcd      a9fdffffff     test eax, 0xfffffffd                    ; .//src:809 ; 4294967293
0x00002bd2      0f85b0000000   jne 0x2c88
0x00002bd8      488b3c24       mov rdi, qword [rsp]                    ; .//src:812
0x00002bdc      4839df         cmp rdi, rbx
0x00002bdf      7477           je 0x2c58
0x00002be1      48837c240800   cmp qword [rsp + 8], 0
0x00002be7      746f           je 0x2c58
0x00002be9      0fb607         movzx eax, byte [rdi]                   ; .//src:815
0x00002bec      3c3a           cmp al, 0x3a
0x00002bee      7428           je 0x2c18
0x00002bf0      84c0           test al, al                             ; .//src:825
0x00002bf2      7564           jne 0x2c58
0x00002bf4      488b442408     mov rax, qword [rsp + 8]                ; .//src:828
0x00002bf9      488905c8e520.  mov qword [obj.first_page_number], rax  ; [0x2111c8:8]=0
0x00002c00      488b442410     mov rax, qword [rsp + 0x10]             ; .//src:829
0x00002c05      4889051ce420.  mov qword [obj.last_page_number], rax   ; [0x211028:8]=-1
0x00002c0c      b801000000     mov eax, 1                              ; .//src:830
0x00002c11      eb47           jmp 0x2c5a
0x00002c13      0f1f440000     nop dword [rax + rax]
0x00002c18      488d6f01       lea rbp, [rdi + 1]                      ; .//src:817
0x00002c1c      488d4c2410     lea rcx, [rsp + 0x10]                   ; .//src:818
0x00002c21      4c8d05bd9200.  lea r8, [0x0000bee5]
0x00002c28      ba0a000000     mov edx, 0xa
0x00002c2d      4c89e6         mov rsi, r12
0x00002c30      4889ef         mov rdi, rbp
0x00002c33      e8e8820000     call sym.xstrtoumax
0x00002c38      85c0           test eax, eax                           ; .//src:819
0x00002c3a      754c           jne 0x2c88
0x00002c3c      488b0424       mov rax, qword [rsp]                    ; .//src:821
0x00002c40      4839e8         cmp rax, rbp
0x00002c43      7413           je 0x2c58
0x00002c45      488b542408     mov rdx, qword [rsp + 8]
0x00002c4a      4839542410     cmp qword [rsp + 0x10], rdx
0x00002c4f      732f           jae 0x2c80
0x00002c51      0f1f80000000.  nop dword [rax]
0x00002c58      31c0           xor eax, eax                            ; .//src:813
0x00002c5a      488b742418     mov rsi, qword [rsp + 0x18]             ; .//src:831
0x00002c5f      644833342528.  xor rsi, qword fs:[0x28]
0x00002c68      7536           jne 0x2ca0
0x00002c6a      4883c420       add rsp, 0x20
0x00002c6e      5b             pop rbx
0x00002c6f      5d             pop rbp
0x00002c70      415c           pop r12
0x00002c72      415d           pop r13
0x00002c74      415e           pop r14
0x00002c76      c3             ret
0x00002c77      660f1f840000.  nop word [rax + rax]
0x00002c80      0fb600         movzx eax, byte [rax]
0x00002c83      e968ffffff     jmp 0x2bf0
0x00002c88      488d0d51db20.  lea rcx, obj.long_options               ; .//src:820 ; 0x2107e0
0x00002c8f      410fbed5       movsx edx, r13b
0x00002c93      4989d8         mov r8, rbx
0x00002c96      4489f6         mov esi, r14d
0x00002c99      89c7           mov edi, eax
0x00002c9b      e8d0810000     call sym.xstrtol_fatal
0x00002ca0      e80bf0ffff     call sym.imp.__stack_chk_fail           ; .//src:831
0x00002ca5      90             nop
0x00002ca6      662e0f1f8400.  nop word cs:[rax + rax]
;-- separator_string:
0x00002cb0      53             push rbx                                ; .//src:848
0x00002cb1      4889fb         mov rbx, rdi
0x00002cb4      e8e7efffff     call sym.imp.strlen                     ; .//src:849
0x00002cb9      483dffffff7f   cmp rax, 0x7fffffff                     ; .//src:850
0x00002cbf      770f           ja 0x2cd0
0x00002cc1      48891d88e320.  mov qword [obj.col_sep_string], rbx     ; .//src:853 ; [0x211050:8]=0xbee5
0x00002cc8      8905bee42000   mov dword [obj.col_sep_length], eax     ; .//src:852 ; [0x21118c:4]=0
0x00002cce      5b             pop rbx                                 ; .//src:854
0x00002ccf      c3             ret
0x00002cd0      e87bfeffff     call sym.integer_overflow               ; .//src:851
0x00002cd5      90             nop
0x00002cd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_column_count:
0x00002ce0      53             push rbx                                ; .//src:839
0x00002ce1      488d358d9100.  lea rsi, str.invalid_number_of_columns  ; .//src:840 ; 0xbe75 ; "invalid number of columns"
0x00002ce8      4889fb         mov rbx, rdi                            ; .//src:839
0x00002ceb      ba05000000     mov edx, 5                              ; .//src:840
0x00002cf0      31ff           xor edi, edi
0x00002cf2      e889efffff     call sym.imp.dcgettext
0x00002cf7      488d0de79100.  lea rcx, [0x0000bee5]                   ; .//src:1157
0x00002cfe      4889df         mov rdi, rbx
0x00002d01      4989c0         mov r8, rax                             ; .//src:840
0x00002d04      4531c9         xor r9d, r9d                            ; .//src:1157
0x00002d07      baffffff7f     mov edx, 0x7fffffff
0x00002d0c      be01000000     mov esi, 1
0x00002d11      e8aa730000     call sym.xdectoimax
0x00002d16      c605dee42000.  mov byte [obj.explicit_columns], 1      ; .//src:841 ; [0x2111fb:1]=0
0x00002d1d      89050de32000   mov dword [obj.columns], eax            ; .//src:1158 ; [0x211030:4]=1
0x00002d23      5b             pop rbx                                 ; .//src:842
0x00002d24      c3             ret
0x00002d25      90             nop
0x00002d26      662e0f1f8400.  nop word cs:[rax + rax]
;-- init_header:
0x00002d30      4157           push r15                                ; .//src:1625
0x00002d32      4156           push r14
0x00002d34      b902000000     mov ecx, 2                              ; .//src:1633
0x00002d39      4155           push r13                                ; .//src:1625
0x00002d3b      4154           push r12
0x00002d3d      4189f4         mov r12d, esi
0x00002d40      55             push rbp
0x00002d41      53             push rbx
0x00002d42      4889fb         mov rbx, rdi
0x00002d45      488d3dfdb700.  lea rdi, [0x0000e549]                   ; .//src:1633 ; "-"
0x00002d4c      4889de         mov rsi, rbx
0x00002d4f      4881ec080100.  sub rsp, 0x108                          ; .//src:1625
0x00002d56      64488b042528.  mov rax, qword fs:[0x28]
0x00002d5f      48898424f800.  mov qword [rsp + 0xf8], rax
0x00002d67      31c0           xor eax, eax
0x00002d69      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]   ; .//src:1633
0x00002d6b      0f97c0         seta al
0x00002d6e      1c00           sbb al, 0
0x00002d70      84c0           test al, al
0x00002d72      0f8420010000   je 0x2e98
0x00002d78      4585e4         test r12d, r12d                         ; .//src:1635
0x00002d7b      0f893f010000   jns 0x2ec0
0x00002d81      48833da7e320.  cmp qword [obj.timespec.7349], 0        ; .//src:1640 ; [0x211130:8]=0
0x00002d89      0f841d010000   je 0x2eac
0x00002d8f      660f6f0599e3.  movdqa xmm0, xmmword [obj.timespec.7349] ; .//src:1642
0x00002d97      0f290424       movaps xmmword [rsp], xmm0
0x00002d9b      4c8b7c2408     mov r15, qword [rsp + 8]
0x00002da0      4c8d742410     lea r14, [rsp + 0x10]                   ; .//src:1646
0x00002da5      4889e6         mov rsi, rsp
0x00002da8      488b3db9e320.  mov rdi, qword [obj.localtz]            ; [0x211168:8]=0
0x00002daf      4c89f2         mov rdx, r14
0x00002db2      e8398d0000     call sym.localtime_rz
0x00002db7      4885c0         test rax, rax
0x00002dba      0f8440010000   je 0x2f00
0x00002dc0      4c8b05a1e320.  mov r8, qword [obj.localtz]             ; .//src:1649 ; [0x211168:8]=0
0x00002dc7      488b15a2e320.  mov rdx, qword [obj.date_format]        ; [0x211170:8]=0
0x00002dce      4589f9         mov r9d, r15d
0x00002dd1      4c89f1         mov rcx, r14
0x00002dd4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00002ddb      31ff           xor edi, edi
0x00002ddd      e87e4b0000     call sym.nstrftime
0x00002de2      4c8d6801       lea r13, [rax + 1]                      ; .//src:1648
0x00002de6      4c89ef         mov rdi, r13                            ; .//src:1650
0x00002de9      e8226f0000     call sym.xmalloc
0x00002dee      4c8b0573e320.  mov r8, qword [obj.localtz]             ; .//src:1651 ; [0x211168:8]=0
0x00002df5      488b1574e320.  mov rdx, qword [obj.date_format]        ; [0x211170:8]=0
0x00002dfc      4589f9         mov r9d, r15d
0x00002dff      4c89f1         mov rcx, r14
0x00002e02      4c89ee         mov rsi, r13
0x00002e05      4889c7         mov rdi, rax
0x00002e08      4889c5         mov rbp, rax                            ; .//src:1650
0x00002e0b      e8504b0000     call sym.nstrftime                      ; .//src:1651
0x00002e10      488b3d49e320.  mov rdi, qword [obj.date_text]          ; .//src:1660 ; [0x211160:8]=0
0x00002e17      e874edffff     call sym.imp.free
0x00002e1c      488b0555e320.  mov rax, qword [obj.custom_header]      ; .//src:1662 ; [0x211178:8]=0
0x00002e23      48892d36e320.  mov qword [obj.date_text], rbp          ; .//src:1661 ; [0x211160:8]=0
0x00002e2a      4885c0         test rax, rax                           ; .//src:1662
0x00002e2d      750e           jne 0x2e3d
0x00002e2f      488d05af9000.  lea rax, [0x0000bee5]
0x00002e36      4585e4         test r12d, r12d
0x00002e39      480f49c3       cmovns rax, rbx
0x00002e3d      31f6           xor esi, esi                            ; .//src:1664
0x00002e3f      8b1dffe12000   mov ebx, dword [obj.chars_per_line]     ; [0x211044:4]=72 ; U"HB\u0101\ubee5"
0x00002e45      4889ef         mov rdi, rbp
0x00002e48      48890509e320.  mov qword [obj.file_text], rax          ; .//src:1662 ; [0x211158:8]=0
0x00002e4f      e87c2f0000     call sym.gnu_mbswidth                   ; .//src:1664
0x00002e54      488b3dfde220.  mov rdi, qword [obj.file_text]          ; .//src:1665 ; [0x211158:8]=0
0x00002e5b      29c3           sub ebx, eax                            ; .//src:1664
0x00002e5d      31f6           xor esi, esi                            ; .//src:1665
0x00002e5f      e86c2f0000     call sym.gnu_mbswidth
0x00002e64      29c3           sub ebx, eax
0x00002e66      488b8424f800.  mov rax, qword [rsp + 0xf8]             ; .//src:1666
0x00002e6e      644833042528.  xor rax, qword fs:[0x28]
0x00002e77      891dd3e22000   mov dword [obj.header_width_available], ebx ; .//src:1665 ; [0x211150:4]=0
0x00002e7d      0f85c1000000   jne 0x2f44                              ; .//src:1666
0x00002e83      4881c4080100.  add rsp, 0x108
0x00002e8a      5b             pop rbx
0x00002e8b      5d             pop rbp
0x00002e8c      415c           pop r12
0x00002e8e      415d           pop r13
0x00002e90      415e           pop r14
0x00002e92      415f           pop r15
0x00002e94      c3             ret
0x00002e95      0f1f00         nop dword [rax]
0x00002e98      48833d90e220.  cmp qword [obj.timespec.7349], 0        ; .//src:1640 ; [0x211130:8]=0
0x00002ea0      41bcffffffff   mov r12d, 0xffffffff                    ; .//src:1634 ; -1
0x00002ea6      0f85e3feffff   jne 0x2d8f                              ; .//src:1640
0x00002eac      488d3d7de220.  lea rdi, obj.timespec.7349              ; .//src:1641 ; 0x211130
0x00002eb3      e8f82b0000     call sym.gettime
0x00002eb8      e9d2feffff     jmp 0x2d8f
0x00002ebd      0f1f00         nop dword [rax]
0x00002ec0      488d542450     lea rdx, [rsp + 0x50]                   ; ../coreutils-8.31/src/.c:465
0x00002ec5      4489e6         mov esi, r12d
0x00002ec8      bf01000000     mov edi, 1
0x00002ecd      e87eefffff     call sym.imp.__fxstat
0x00002ed2      85c0           test eax, eax                           ; .//src:1635
0x00002ed4      0f85a7feffff   jne 0x2d81
0x00002eda      4c8bbc24b000.  mov r15, qword [rsp + 0xb0]
0x00002ee2      488b8424a800.  mov rax, qword [rsp + 0xa8]             ; .//src:1636
0x00002eea      4c897c2408     mov qword [rsp + 8], r15
0x00002eef      48890424       mov qword [rsp], rax
0x00002ef3      e9a8feffff     jmp 0x2da0
0x00002ef8      0f1f84000000.  nop dword [rax + rax]
0x00002f00      bf21000000     mov edi, 0x21                           ; .//src:1656 ; '!'
0x00002f05      e8066e0000     call sym.xmalloc
0x00002f0a      488b3c24       mov rdi, qword [rsp]                    ; /usr/include/x86_64-linux-gnu/sys/stat.h:691
0x00002f0e      488db424e000.  lea rsi, [rsp + 0xe0]
0x00002f16      4889c5         mov rbp, rax                            ; .//src:1656
0x00002f19      e8522c0000     call sym.imaxtostr                      ; /usr/include/x86_64-linux-gnu/sys/stat.h:691
0x00002f1e      488d0d6a8f00.  lea rcx, str.s._09d                     ; ../coreutils-8.31/src/system.h:33 ; 0xbe8f ; "%s.%09d"
0x00002f25      4989c0         mov r8, rax                             ; /usr/include/x86_64-linux-gnu/sys/stat.h:691
0x00002f28      4589f9         mov r9d, r15d                           ; ../coreutils-8.31/src/system.h:33
0x00002f2b      ba21000000     mov edx, 0x21                           ; '!'
0x00002f30      be01000000     mov esi, 1
0x00002f35      4889ef         mov rdi, rbp
0x00002f38      31c0           xor eax, eax
0x00002f3a      e861f0ffff     call sym.imp.__sprintf_chk
0x00002f3f      e9ccfeffff     jmp 0x2e10
0x00002f44      e867edffff     call sym.imp.__stack_chk_fail           ; .//src:1666
0x00002f49      0f1f80000000.  nop dword [rax]
;-- pad_across_to:
0x00002f50      55             push rbp                                ; .//src:2056
0x00002f51      53             push rbx
0x00002f52      89fd           mov ebp, edi
0x00002f54      4883ec08       sub rsp, 8
0x00002f58      803d85e22000.  cmp byte [obj.tabify_output], 0         ; .//src:2059 ; [0x2111e4:1]=0
0x00002f5f      8b1d73e22000   mov ebx, dword [obj.output_position]    ; .//src:2057 ; [0x2111d8:4]=0
0x00002f65      7539           jne 0x2fa0                              ; .//src:2059
0x00002f67      83c301         add ebx, 1                              ; .//src:2063
0x00002f6a      39eb           cmp ebx, ebp
0x00002f6c      7f23           jg 0x2f91
0x00002f6e      488b3d73e120.  mov rdi, qword [obj.stdout]             ; stdio2.h:107 #  define printf(...) \ ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x00002f75      488b4728       mov rax, qword [rdi + 0x28]
0x00002f79      483b4730       cmp rax, qword [rdi + 0x30]
0x00002f7d      7331           jae 0x2fb0
0x00002f7f      488d5001       lea rdx, [rax + 1]
0x00002f83      83c301         add ebx, 1                              ; .//src:2063
0x00002f86      39eb           cmp ebx, ebp
0x00002f88      48895728       mov qword [rdi + 0x28], rdx             ; stdio2.h:107 #  define printf(...) \
0x00002f8c      c60020         mov byte [rax], 0x20                    ; [0x20:1]=64 ; "@"
0x00002f8f      7edd           jle 0x2f6e                              ; .//src:2063
0x00002f91      892d41e22000   mov dword [obj.output_position], ebp    ; .//src:2065 ; [0x2111d8:4]=0
0x00002f97      4883c408       add rsp, 8                              ; .//src:2067
0x00002f9b      5b             pop rbx
0x00002f9c      5d             pop rbp
0x00002f9d      c3             ret
0x00002f9e      6690           nop
0x00002fa0      29dd           sub ebp, ebx                            ; .//src:2060
0x00002fa2      892d38e22000   mov dword [obj.spaces_not_printed], ebp ; [0x2111e0:4]=0
0x00002fa8      4883c408       add rsp, 8                              ; .//src:2067
0x00002fac      5b             pop rbx
0x00002fad      5d             pop rbp
0x00002fae      c3             ret
0x00002faf      90             nop
0x00002fb0      be20000000     mov esi, 0x20                           ; stdio2.h:107 #  define printf(...) \ ; "@"
0x00002fb5      e836edffff     call sym.imp.__overflow
0x00002fba      ebab           jmp 0x2f67
0x00002fbc      0f1f4000       nop dword [rax]
;-- print_white_space:
0x00002fc0      4154           push r12                                ; .//src:2193
0x00002fc2      448b2517e220.  mov r12d, dword [obj.spaces_not_printed] ; .//src:2196 ; [0x2111e0:4]=0
0x00002fc9      55             push rbp                                ; .//src:2193
0x00002fca      8b2d08e22000   mov ebp, dword [obj.output_position]    ; .//src:2195 ; [0x2111d8:4]=0
0x00002fd0      53             push rbx                                ; .//src:2193
0x00002fd1      4101ec         add r12d, ebp                           ; .//src:2196
0x00002fd4      4489e0         mov eax, r12d                           ; .//src:2198
0x00002fd7      29e8           sub eax, ebp
0x00002fd9      83f801         cmp eax, 1
0x00002fdc      7e46           jle 0x3024
0x00002fde      6690           nop
0x00002fe0      8b0d4ee02000   mov ecx, dword [obj.chars_per_output_tab] ; .//src:2199 ; [0x211034:4]=8
0x00002fe6      89e8           mov eax, ebp
0x00002fe8      99             cdq
0x00002fe9      f7f9           idiv ecx
0x00002feb      29d1           sub ecx, edx
0x00002fed      8d1c29         lea ebx, [rcx + rbp]
0x00002ff0      4139dc         cmp r12d, ebx
0x00002ff3      7c2f           jl 0x3024
0x00002ff5      488b3dece020.  mov rdi, qword [obj.stdout]             ; stdio2.h:107 #  define printf(...) \ ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x00002ffc      0fb63535e020.  movzx esi, byte [obj.output_tab_char]   ; .//src:2201 ; [0x211038:1]=9 ; U"\t\b\tHB\u0101\ubee5"
0x00003003      488b4728       mov rax, qword [rdi + 0x28]             ; stdio2.h:107 #  define printf(...) \
0x00003007      483b4730       cmp rax, qword [rdi + 0x30]
0x0000300b      7363           jae 0x3070
0x0000300d      488d5001       lea rdx, [rax + 1]
0x00003011      89dd           mov ebp, ebx                            ; .//src:2193
0x00003013      48895728       mov qword [rdi + 0x28], rdx             ; stdio2.h:107 #  define printf(...) \
0x00003017      408830         mov byte [rax], sil
0x0000301a      4489e0         mov eax, r12d                           ; .//src:2198
0x0000301d      29e8           sub eax, ebp
0x0000301f      83f801         cmp eax, 1
0x00003022      7fbc           jg 0x2fe0
0x00003024      83c501         add ebp, 1                              ; .//src:2204
0x00003027      4139ec         cmp r12d, ebp
0x0000302a      7c24           jl 0x3050
0x0000302c      488b3db5e020.  mov rdi, qword [obj.stdout]             ; stdio2.h:107 #  define printf(...) \ ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x00003033      488b4728       mov rax, qword [rdi + 0x28]
0x00003037      483b4730       cmp rax, qword [rdi + 0x30]
0x0000303b      7343           jae 0x3080
0x0000303d      488d5001       lea rdx, [rax + 1]
0x00003041      83c501         add ebp, 1                              ; .//src:2204
0x00003044      4139ec         cmp r12d, ebp
0x00003047      48895728       mov qword [rdi + 0x28], rdx             ; stdio2.h:107 #  define printf(...) \
0x0000304b      c60020         mov byte [rax], 0x20                    ; [0x20:1]=64 ; "@"
0x0000304e      7ddc           jge 0x302c                              ; .//src:2204
0x00003050      5b             pop rbx                                 ; .//src:2209
0x00003051      44892580e120.  mov dword [obj.output_position], r12d   ; .//src:2207 ; [0x2111d8:4]=0
0x00003058      c7057ee12000.  mov dword [obj.spaces_not_printed], 0   ; .//src:2208 ; [0x2111e0:4]=0
0x00003062      5d             pop rbp                                 ; .//src:2209
0x00003063      415c           pop r12
0x00003065      c3             ret
0x00003066      662e0f1f8400.  nop word cs:[rax + rax]
0x00003070      e87becffff     call sym.imp.__overflow                 ; stdio2.h:107 #  define printf(...) \
0x00003075      89dd           mov ebp, ebx                            ; .//src:2193
0x00003077      eba1           jmp 0x301a
0x00003079      0f1f80000000.  nop dword [rax]
0x00003080      be20000000     mov esi, 0x20                           ; stdio2.h:107 #  define printf(...) \ ; "@"
0x00003085      e866ecffff     call sym.imp.__overflow
0x0000308a      eb98           jmp 0x3024
0x0000308c      0f1f4000       nop dword [rax]
;-- print_sep_string:
0x00003090      8b15f2e02000   mov edx, dword [obj.separators_not_printed] ; .//src:2218 ; [0x211188:4]=0
0x00003096      8b0544e12000   mov eax, dword [obj.spaces_not_printed] ; [0x2111e0:4]=0
0x0000309c      85d2           test edx, edx
0x0000309e      0f8eec000000   jle 0x3190
0x000030a4      4156           push r14
0x000030a6      4155           push r13
0x000030a8      4531ed         xor r13d, r13d
0x000030ab      4154           push r12
0x000030ad      4c8b259cdf20.  mov r12, qword [obj.col_sep_string]     ; .//src:2219 ; [0x211050:8]=0xbee5
0x000030b4      55             push rbp                                ; .//src:2218
0x000030b5      8b2dd1e02000   mov ebp, dword [obj.col_sep_length]     ; .//src:2220 ; [0x21118c:4]=0
0x000030bb      53             push rbx                                ; .//src:2218
0x000030bc      0f1f4000       nop dword [rax]
0x000030c0      468d742500     lea r14d, [rbp + r12]
0x000030c5      4c89e3         mov rbx, r12
0x000030c8      4489f2         mov edx, r14d
0x000030cb      29da           sub edx, ebx
0x000030cd      85d2           test edx, edx                           ; .//src:2232
0x000030cf      7e50           jle 0x3121
0x000030d1      0fb633         movzx esi, byte [rbx]                   ; .//src:2236
0x000030d4      4883c301       add rbx, 1
0x000030d8      4080fe20       cmp sil, 0x20                           ; "@"
0x000030dc      0f847e000000   je 0x3160
0x000030e2      85c0           test eax, eax                           ; .//src:2245
0x000030e4      7e09           jle 0x30ef
0x000030e6      e8d5feffff     call sym.print_white_space              ; .//src:2246
0x000030eb      0fb673ff       movzx esi, byte [rbx - 1]
0x000030ef      488b3df2df20.  mov rdi, qword [obj.stdout]             ; stdio2.h:107 #  define printf(...) \ ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x000030f6      488b4728       mov rax, qword [rdi + 0x28]
0x000030fa      483b4730       cmp rax, qword [rdi + 0x30]
0x000030fe      7370           jae 0x3170
0x00003100      488d5001       lea rdx, [rax + 1]
0x00003104      48895728       mov qword [rdi + 0x28], rdx
0x00003108      408830         mov byte [rax], sil
0x0000310b      4489f2         mov edx, r14d
0x0000310e      8305c3e02000.  add dword [obj.output_position], 1      ; .//src:2248 ; [0x2111d8:4]=0
0x00003115      8b05c5e02000   mov eax, dword [obj.spaces_not_printed] ; [0x2111e0:4]=0
0x0000311b      29da           sub edx, ebx
0x0000311d      85d2           test edx, edx                           ; .//src:2232
0x0000311f      7fb0           jg 0x30d1
0x00003121      85ed           test ebp, ebp
0x00003123      4489ea         mov edx, r13d
0x00003126      0f49d5         cmovns edx, ebp
0x00003129      83ed01         sub ebp, 1
0x0000312c      4863ca         movsxd rcx, edx
0x0000312f      29d5           sub ebp, edx
0x00003131      4901cc         add r12, rcx
0x00003134      85c0           test eax, eax                           ; .//src:2252
0x00003136      7e05           jle 0x313d
0x00003138      e883feffff     call sym.print_white_space              ; .//src:2253
0x0000313d      8b0545e02000   mov eax, dword [obj.separators_not_printed] ; .//src:2230 ; [0x211188:4]=0
0x00003143      83e801         sub eax, 1
0x00003146      85c0           test eax, eax
0x00003148      89053ae02000   mov dword [obj.separators_not_printed], eax ; [0x211188:4]=0
0x0000314e      7e30           jle 0x3180
0x00003150      8b058ae02000   mov eax, dword [obj.spaces_not_printed] ; [0x2111e0:4]=0
0x00003156      e965ffffff     jmp 0x30c0
0x0000315b      0f1f440000     nop dword [rax + rax]
0x00003160      83c001         add eax, 1                              ; .//src:2241
0x00003163      890577e02000   mov dword [obj.spaces_not_printed], eax ; [0x2111e0:4]=0
0x00003169      e95affffff     jmp 0x30c8
0x0000316e      6690           nop
0x00003170      e87bebffff     call sym.imp.__overflow                 ; stdio2.h:107 #  define printf(...) \
0x00003175      eb94           jmp 0x310b
0x00003177      660f1f840000.  nop word [rax + rax]
0x00003180      5b             pop rbx                                 ; .//src:2256
0x00003181      5d             pop rbp
0x00003182      415c           pop r12
0x00003184      415d           pop r13
0x00003186      415e           pop r14
0x00003188      c3             ret
0x00003189      0f1f80000000.  nop dword [rax]
0x00003190      85c0           test eax, eax                           ; .//src:2225
0x00003192      7f02           jg 0x3196
0x00003194      f3c3           ret
0x00003196      e925feffff     jmp sym.print_white_space               ; .//src:2226
0x0000319b      0f1f440000     nop dword [rax + rax]                   ; .//src:2170
;-- print_header:
0x000031a0      55             push rbp                                ; .//src:2225
0x000031a1      53             push rbx
0x000031a2      4881ec280100.  sub rsp, 0x128
0x000031a9      8b3d2de02000   mov edi, dword [obj.chars_per_margin]   ; .//src:2233 ; [0x2111dc:4]=0
0x000031af      c7051fe02000.  mov dword [obj.output_position], 0      ; [0x2111d8:4]=0
0x000031b9      64488b042528.  mov rax, qword fs:[0x28]
0x000031c2      488984241801.  mov qword [rsp + 0x118], rax
0x000031ca      31c0           xor eax, eax
0x000031cc      e87ffdffff     call sym.pad_across_to
0x000031d1      e8eafdffff     call sym.print_white_space              ; .//src:2163
0x000031d6      488b1ddbdf20.  mov rbx, qword [obj.page_number]        ; [0x2111b8:8]=0
0x000031dd      ba05000000     mov edx, 5
0x000031e2      4885db         test rbx, rbx
0x000031e5      0f84bc000000   je 0x32a7
0x000031eb      488d35ba8c00.  lea rsi, str.Page__lu                   ; 0xbeac ; "Page %lu"
0x000031f2      4889e5         mov rbp, rsp
0x000031f5      31ff           xor edi, edi
0x000031f7      e884eaffff     call sym.imp.dcgettext
0x000031fc      4989d8         mov r8, rbx                             ; .//src:2225
0x000031ff      4889c1         mov rcx, rax
0x00003202      ba14010000     mov edx, 0x114
0x00003207      be01000000     mov esi, 1
0x0000320c      4889ef         mov rdi, rbp
0x0000320f      31c0           xor eax, eax
0x00003211      e88aedffff     call sym.imp.__sprintf_chk
0x00003216      8b1d34df2000   mov ebx, dword [obj.header_width_available] ; [0x211150:4]=0
0x0000321c      31f6           xor esi, esi
0x0000321e      4889ef         mov rdi, rbp
0x00003221      e8aa2b0000     call sym.gnu_mbswidth
0x00003226      4c8b0533df20.  mov r8, qword [obj.date_text]           ; [0x211160:8]=0
0x0000322d      8b15a9df2000   mov edx, dword [obj.chars_per_margin]   ; [0x2111dc:4]=0
0x00003233      488d0dab8c00.  lea rcx, [0x0000bee5]
0x0000323a      29c3           sub ebx, eax
0x0000323c      b800000000     mov eax, 0
0x00003241      488d356d8c00.  lea rsi, str.s_s__s_s__s_s              ; 0xbeb5 ; "\n\n%*s%s%*s%s%*s%s\n\n\n"
0x00003248      0f48d8         cmovs ebx, eax
0x0000324b      488d05788c00.  lea rax, [0x0000beca]                   ; " "
0x00003252      4883ec08       sub rsp, 8
0x00003256      4189d9         mov r9d, ebx
0x00003259      55             push rbp
0x0000325a      bf01000000     mov edi, 1
0x0000325f      41d1f9         sar r9d, 1
0x00003262      50             push rax
0x00003263      4429cb         sub ebx, r9d
0x00003266      53             push rbx
0x00003267      ff35ebde2000   push qword [obj.file_text]              ; .//src:2198
0x0000326d      50             push rax
0x0000326e      31c0           xor eax, eax
0x00003270      e83becffff     call sym.imp.__printf_chk
0x00003275      4883c430       add rsp, 0x30                           ; .//src:2201
0x00003279      c60578df2000.  mov byte [obj.print_a_header], 0        ; [0x2111f8:1]=0
0x00003280      c7054edf2000.  mov dword [obj.output_position], 0      ; .//src:2196 ; [0x2111d8:4]=0
0x0000328a      488b84241801.  mov rax, qword [rsp + 0x118]
0x00003292      644833042528.  xor rax, qword fs:[0x28]
0x0000329b      7529           jne 0x32c6
0x0000329d      4881c4280100.  add rsp, 0x128
0x000032a4      5b             pop rbx
0x000032a5      5d             pop rbp
0x000032a6      c3             ret
0x000032a7      488d35e98b00.  lea rsi, str.page_number_overflow       ; 0xbe97 ; "page number overflow"
0x000032ae      31ff           xor edi, edi
0x000032b0      e8cbe9ffff     call sym.imp.dcgettext
0x000032b5      31f6           xor esi, esi                            ; .//src:2214
0x000032b7      4889c2         mov rdx, rax
0x000032ba      bf01000000     mov edi, 1
0x000032bf      31c0           xor eax, eax
0x000032c1      e81aecffff     call sym.imp.error
0x000032c6      e8e5e9ffff     call sym.imp.__stack_chk_fail
0x000032cb      0f1f440000     nop dword [rax + rax]                   ; .//src:2208
;-- char_to_clump:
0x000032d0      4154           push r12
0x000032d2      55             push rbp
0x000032d3      89fd           mov ebp, edi
0x000032d5      53             push rbx
0x000032d6      4883ec10       sub rsp, 0x10
0x000032da      488b1d67de20.  mov rbx, qword [obj.clump_buff]         ; [0x211148:8]=0
0x000032e1      8b0d55dd2000   mov ecx, dword [obj.chars_per_input_tab] ; [0x21103c:4]=8
0x000032e7      64488b042528.  mov rax, qword fs:[0x28]
0x000032f0      4889442408     mov qword [rsp + 8], rax
0x000032f5      31c0           xor eax, eax
0x000032f7      40383d42dd20.  cmp byte [obj.input_tab_char], dil      ; [0x211040:1]=9 ; U"\tHB\u0101\ubee5"
0x000032fe      7465           je 0x3365
0x00003300      4080ff09       cmp dil, 9
0x00003304      745a           je 0x3360
0x00003306      440fb6e7       movzx r12d, dil
0x0000330a      e881ecffff     call sym.imp.__ctype_b_loc
0x0000330f      488b00         mov rax, qword [rax]
0x00003312      42f644600140   test byte [rax + r12*2 + 1], 0x40
0x00003318      0f85e2000000   jne 0x3400
0x0000331e      803d75de2000.  cmp byte [obj.use_esc_sequence], 0      ; [0x21119a:1]=0
0x00003325      0f850d010000   jne 0x3438
0x0000332b      803d67de2000.  cmp byte [obj.use_cntrl_prefix], 0      ; /usr/include/x86_64-linux-gnu/sys/stat.h:2112 ; [0x211199:1]=0
0x00003332      0f8458010000   je 0x3490
0x00003338      4084ed         test bpl, bpl
0x0000333b      0f88f7000000   js 0x3438
0x00003341      83f540         xor ebp, 0x40                           ; /usr/include/x86_64-linux-gnu/sys/stat.h:2103 ; segment.PHDR
0x00003344      c6035e         mov byte [rbx], 0x5e                    ; '^'
                                                                       ; [0x5e:1]=0
0x00003347      8b3587de2000   mov esi, dword [obj.input_position]     ; [0x2111d4:4]=0
0x0000334d      40886b01       mov byte [rbx + 1], bpl
0x00003351      b802000000     mov eax, 2                              ; /usr/include/x86_64-linux-gnu/sys/stat.h:2125
0x00003356      ba02000000     mov edx, 2
0x0000335b      eb33           jmp 0x3390
0x0000335d      0f1f00         nop dword [rax]
0x00003360      b908000000     mov ecx, 8
0x00003365      8b3569de2000   mov esi, dword [obj.input_position]     ; [0x2111d4:4]=0
0x0000336b      89f0           mov eax, esi
0x0000336d      99             cdq
0x0000336e      f7f9           idiv ecx
0x00003370      29d1           sub ecx, edx
0x00003372      803d6cde2000.  cmp byte [obj.untabify_input], 0        ; [0x2111e5:1]=0
0x00003379      89ca           mov edx, ecx                            ; /usr/include/x86_64-linux-gnu/sys/stat.h:2134
0x0000337b      753b           jne 0x33b8                              ; /usr/include/x86_64-linux-gnu/sys/stat.h:2138
0x0000337d      85d2           test edx, edx
0x0000337f      40882b         mov byte [rbx], bpl
0x00003382      b801000000     mov eax, 1
0x00003387      785a           js 0x33e3
0x00003389      0f1f80000000.  nop dword [rax]
0x00003390      01f2           add edx, esi
0x00003392      89153cde2000   mov dword [obj.input_position], edx     ; [0x2111d4:4]=0
0x00003398      488b7c2408     mov rdi, qword [rsp + 8]
0x0000339d      6448333c2528.  xor rdi, qword fs:[0x28]
0x000033a6      0f852b010000   jne 0x34d7
0x000033ac      4883c410       add rsp, 0x10
0x000033b0      5b             pop rbx
0x000033b1      5d             pop rbp
0x000033b2      415c           pop r12
0x000033b4      c3             ret
0x000033b5      0f1f00         nop dword [rax]
0x000033b8      85c9           test ecx, ecx
0x000033ba      0f8410010000   je 0x34d0
0x000033c0      8d41ff         lea eax, [rcx - 1]
0x000033c3      488d440301     lea rax, [rbx + rax + 1]
0x000033c8      0f1f84000000.  nop dword [rax + rax]
0x000033d0      4883c301       add rbx, 1
0x000033d4      c643ff20       mov byte [rbx - 1], 0x20                ; [0x20:1]=64 ; "@"
0x000033d8      4839d8         cmp rax, rbx
0x000033db      75f3           jne 0x33d0                              ; /usr/include/x86_64-linux-gnu/sys/stat.h:1080
0x000033dd      85d2           test edx, edx
0x000033df      89d0           mov eax, edx
0x000033e1      79ad           jns 0x3390
0x000033e3      85f6           test esi, esi
0x000033e5      7439           je 0x3420
0x000033e7      89d1           mov ecx, edx
0x000033e9      f7d9           neg ecx
0x000033eb      39f1           cmp ecx, esi
0x000033ed      7ca1           jl 0x3390
0x000033ef      c705dbdd2000.  mov dword [obj.input_position], 0       ; [0x2111d4:4]=0
0x000033f9      eb9d           jmp 0x3398                              ; /usr/include/x86_64-linux-gnu/sys/stat.h:1091
0x000033fb      0f1f440000     nop dword [rax + rax]
0x00003400      40882b         mov byte [rbx], bpl                     ; /usr/include/x86_64-linux-gnu/sys/stat.h:1092
0x00003403      8b35cbdd2000   mov esi, dword [obj.input_position]     ; [0x2111d4:4]=0
0x00003409      b801000000     mov eax, 1                              ; /usr/include/x86_64-linux-gnu/sys/stat.h:1088
0x0000340e      ba01000000     mov edx, 1
0x00003413      e978ffffff     jmp 0x3390
0x00003418      0f1f84000000.  nop dword [rax + rax]
0x00003420      c705aadd2000.  mov dword [obj.input_position], 0       ; [0x2111d4:4]=0
0x0000342a      31c0           xor eax, eax
0x0000342c      e967ffffff     jmp 0x3398
0x00003431      0f1f80000000.  nop dword [rax]
0x00003438      488d7c2404     lea rdi, [rsp + 4]
0x0000343d      488d0d888a00.  lea rcx, str.03o                        ; 0xbecc ; "%03o"
0x00003444      ba04000000     mov edx, 4                              ; ../coreutils-8.31/src/system.h:-431
0x00003449      be01000000     mov esi, 1
0x0000344e      c6035c         mov byte [rbx], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x00003451      440fb6c5       movzx r8d, bpl
0x00003455      31c0           xor eax, eax
0x00003457      e844ebffff     call sym.imp.__sprintf_chk
0x0000345c      0fb6442404     movzx eax, byte [rsp + 4]
0x00003461      8b356ddd2000   mov esi, dword [obj.input_position]     ; [0x2111d4:4]=0
0x00003467      ba04000000     mov edx, 4
0x0000346c      884301         mov byte [rbx + 1], al                  ; .//src:1554
0x0000346f      0fb6442405     movzx eax, byte [rsp + 5]
0x00003474      884302         mov byte [rbx + 2], al
0x00003477      0fb6442406     movzx eax, byte [rsp + 6]
0x0000347c      884303         mov byte [rbx + 3], al
0x0000347f      b804000000     mov eax, 4
0x00003484      e907ffffff     jmp 0x3390
0x00003489      0f1f80000000.  nop dword [rax]                         ; .//src:1556
0x00003490      4080fd08       cmp bpl, 8
0x00003494      8b353add2000   mov esi, dword [obj.input_position]     ; .//src:1555 ; [0x2111d4:4]=0
0x0000349a      7414           je 0x34b0
0x0000349c      40882b         mov byte [rbx], bpl
0x0000349f      b801000000     mov eax, 1
0x000034a4      31d2           xor edx, edx
0x000034a6      e9e5feffff     jmp 0x3390
0x000034ab      0f1f440000     nop dword [rax + rax]
0x000034b0      85f6           test esi, esi
0x000034b2      c60308         mov byte [rbx], 8
0x000034b5      0f8465ffffff   je 0x3420                               ; .//src:1579
0x000034bb      b901000000     mov ecx, 1
0x000034c0      b801000000     mov eax, 1
0x000034c5      baffffffff     mov edx, 0xffffffff                     ; -1
0x000034ca      e91cffffff     jmp 0x33eb
0x000034cf      90             nop
0x000034d0      31c0           xor eax, eax                            ; .//src:1583
0x000034d2      e9b9feffff     jmp 0x3390
0x000034d7      e8d4e7ffff     call sym.imp.__stack_chk_fail
0x000034dc      0f1f4000       nop dword [rax]
;-- print_char:
0x000034e0      55             push rbp
0x000034e1      53             push rbx
0x000034e2      89fb           mov ebx, edi                            ; .//src:1584
0x000034e4      4883ec08       sub rsp, 8
0x000034e8      803df5dc2000.  cmp byte [obj.tabify_output], 0         ; [0x2111e4:1]=0
0x000034ef      742f           je 0x3520
0x000034f1      4080ff20       cmp dil, 0x20                           ; "@"
0x000034f5      8b05e5dc2000   mov eax, dword [obj.spaces_not_printed] ; [0x2111e0:4]=0
0x000034fb      7473           je 0x3570
0x000034fd      85c0           test eax, eax
0x000034ff      400fb6ef       movzx ebp, dil                          ; .//src:1570
0x00003503      7f53           jg 0x3558
0x00003505      e886eaffff     call sym.imp.__ctype_b_loc
0x0000350a      488b00         mov rax, qword [rax]
0x0000350d      f644680140     test byte [rax + rbp*2 + 1], 0x40
0x00003512      7534           jne 0x3548
0x00003514      80fb08         cmp bl, 8
0x00003517      7507           jne 0x3520
0x00003519      832db8dc2000.  sub dword [obj.output_position], 1      ; [0x2111d8:4]=0
0x00003520      488b3dc1db20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x00003527      488b4728       mov rax, qword [rdi + 0x28]
0x0000352b      483b4730       cmp rax, qword [rdi + 0x30]
0x0000352f      734f           jae 0x3580
0x00003531      488d5001       lea rdx, [rax + 1]
0x00003535      48895728       mov qword [rdi + 0x28], rdx
0x00003539      8818           mov byte [rax], bl                      ; .//src:1261
0x0000353b      4883c408       add rsp, 8
0x0000353f      5b             pop rbx
0x00003540      5d             pop rbp
0x00003541      c3             ret
0x00003542      660f1f440000   nop word [rax + rax]
0x00003548      830589dc2000.  add dword [obj.output_position], 1      ; .//src:1262 ; [0x2111d8:4]=0
0x0000354f      ebcf           jmp 0x3520
0x00003551      0f1f80000000.  nop dword [rax]
0x00003558      e863faffff     call sym.print_white_space
0x0000355d      e82eeaffff     call sym.imp.__ctype_b_loc
0x00003562      488b00         mov rax, qword [rax]
0x00003565      f644680140     test byte [rax + rbp*2 + 1], 0x40
0x0000356a      75dc           jne 0x3548
0x0000356c      eba6           jmp 0x3514
0x0000356e      6690           nop                                     ; .//src:1273
0x00003570      83c001         add eax, 1
0x00003573      890567dc2000   mov dword [obj.spaces_not_printed], eax ; [0x2111e0:4]=0
0x00003579      4883c408       add rsp, 8                              ; .//src:1270
0x0000357d      5b             pop rbx
0x0000357e      5d             pop rbp
0x0000357f      c3             ret
0x00003580      4883c408       add rsp, 8
0x00003584      0fb6f3         movzx esi, bl
0x00003587      5b             pop rbx
0x00003588      5d             pop rbp
0x00003589      e962e7ffff     jmp sym.imp.__overflow                  ; .//src:1265
0x0000358e      6690           nop
;-- print_stored:
0x00003590      4155           push r13                                ; .//src:1266
0x00003592      4154           push r12
0x00003594      4989fd         mov r13, rdi
0x00003597      55             push rbp
0x00003598      53             push rbx
0x00003599      4883ec08       sub rsp, 8
0x0000359d      4c636728       movsxd r12, dword [rdi + 0x28]
0x000035a1      488b2d78dc20.  mov rbp, qword [obj.buff]               ; [0x211220:8]=0
0x000035a8      c605d1db2000.  mov byte [obj.pad_vertically], 1        ; [0x211180:1]=0
0x000035af      418d442401     lea eax, [r12 + 1]
0x000035b4      894728         mov dword [rdi + 0x28], eax
0x000035b7      488b054adc20.  mov rax, qword [obj.line_vector]        ; [0x211208:8]=0
0x000035be      4a631ca0       movsxd rbx, dword [rax + r12*4]
0x000035c2      4a6344a004     movsxd rax, dword [rax + r12*4 + 4]     ; .//src:1047
0x000035c7      4801eb         add rbx, rbp
0x000035ca      4801c5         add rbp, rax
0x000035cd      803d24dc2000.  cmp byte [obj.print_a_header], 0        ; [0x2111f8:1]=0
0x000035d4      0f85ee000000   jne 0x36c8
0x000035da      41837d1001     cmp dword [r13 + 0x10], 1
0x000035df      0f848b000000   je 0x3670
0x000035e5      8b05a1db2000   mov eax, dword [obj.col_sep_length]     ; [0x21118c:4]=0
0x000035eb      8b3d93db2000   mov edi, dword [obj.padding_not_printed] ; [0x211184:4]=0
0x000035f1      39f8           cmp eax, edi                            ; .//src:1052
0x000035f3      0f8cef000000   jl 0x36e8
0x000035f9      803d90db2000.  cmp byte [obj.use_col_separator], 0     ; [0x211190:1]=0
0x00003600      0f85d2000000   jne 0x36d8
0x00003606      4839eb         cmp rbx, rbp
0x00003609      7417           je 0x3622                               ; .//src:1049
0x0000360b      0f1f440000     nop dword [rax + rax]
0x00003610      4883c301       add rbx, 1
0x00003614      0fbe7bff       movsx edi, byte [rbx - 1]
0x00003618      e8c3feffff     call sym.print_char
0x0000361d      4839dd         cmp rbp, rbx
0x00003620      75ee           jne 0x3610                              ; .//src:1061
0x00003622      8b05b8db2000   mov eax, dword [obj.spaces_not_printed] ; [0x2111e0:4]=0
0x00003628      85c0           test eax, eax
0x0000362a      752d           jne 0x3659
0x0000362c      488b15cddb20.  mov rdx, qword [obj.end_vector]         ; [0x211200:8]=0
0x00003633      418b4534       mov eax, dword [r13 + 0x34]
0x00003637      8b0d4fdb2000   mov ecx, dword [obj.col_sep_length]     ; [0x21118c:4]=0
0x0000363d      428b34a2       mov esi, dword [rdx + r12*4]
0x00003641      01c6           add esi, eax
0x00003643      29c8           sub eax, ecx
0x00003645      3b0591db2000   cmp eax, dword [obj.chars_per_margin]   ; [0x2111dc:4]=0
0x0000364b      89f2           mov edx, esi
0x0000364d      893585db2000   mov dword [obj.output_position], esi    ; [0x2111d8:4]=0
0x00003653      0f84a7000000   je 0x3700
0x00003659      4883c408       add rsp, 8
0x0000365d      b801000000     mov eax, 1
0x00003662      5b             pop rbx
0x00003663      5d             pop rbp
0x00003664      415c           pop r12
0x00003666      415d           pop r13
0x00003668      c3             ret
0x00003669      0f1f80000000.  nop dword [rax]
0x00003670      8b15bad92000   mov edx, dword [obj.columns]            ; [0x211030:4]=1
0x00003676      488b0dabdb20.  mov rcx, qword [obj.column_vector]      ; [0x211228:8]=0
0x0000367d      85d2           test edx, edx
0x0000367f      7e26           jle 0x36a7
0x00003681      83ea01         sub edx, 1
0x00003684      488d4110       lea rax, [rcx + 0x10]
0x00003688      48c1e206       shl rdx, 6
0x0000368c      488d541150     lea rdx, [rcx + rdx + 0x50]
0x00003691      0f1f80000000.  nop dword [rax]
0x00003698      c70002000000   mov dword [rax], 2
0x0000369e      4883c040       add rax, 0x40                           ; segment.PHDR
0x000036a2      4839d0         cmp rax, rdx
0x000036a5      75f1           jne 0x3698
0x000036a7      8b5130         mov edx, dword [rcx + 0x30]
0x000036aa      85d2           test edx, edx
0x000036ac      0f8f33ffffff   jg 0x35e5
0x000036b2      803d94d92000.  cmp byte [obj.extremities], 0           ; [0x21104d:1]=1
0x000036b9      759e           jne 0x3659                              ; .//src:1664
0x000036bb      c605beda2000.  mov byte [obj.pad_vertically], 0        ; [0x211180:1]=0
0x000036c2      eb95           jmp 0x3659
0x000036c4      0f1f4000       nop dword [rax]
0x000036c8      e8d3faffff     call sym.print_header
0x000036cd      e908ffffff     jmp 0x35da
0x000036d2      660f1f440000   nop word [rax + rax]
0x000036d8      e8b3f9ffff     call sym.print_sep_string
0x000036dd      e924ffffff     jmp 0x3606
0x000036e2      660f1f440000   nop word [rax + rax]
0x000036e8      29c7           sub edi, eax
0x000036ea      e861f8ffff     call sym.pad_across_to
0x000036ef      c7058bda2000.  mov dword [obj.padding_not_printed], 0  ; [0x211184:4]=0
0x000036f9      e9fbfeffff     jmp 0x35f9
0x000036fe      6690           nop
0x00003700      29ca           sub edx, ecx
0x00003702      b801000000     mov eax, 1
0x00003707      8915cbda2000   mov dword [obj.output_position], edx    ; [0x2111d8:4]=0
0x0000370d      4883c408       add rsp, 8
0x00003711      5b             pop rbx
0x00003712      5d             pop rbp
0x00003713      415c           pop r12
0x00003715      415d           pop r13
0x00003717      c3             ret
0x00003718      0f1f84000000.  nop dword [rax + rax]
;-- hold_file.isra.1:
0x00003720      803dd8da2000.  cmp byte [obj.parallel_files], 0        ; [0x2111ff:1]=0
0x00003727      7567           jne 0x3790
0x00003729      8b1501d92000   mov edx, dword [obj.columns]            ; [0x211030:4]=1
0x0000372f      488b3df2da20.  mov rdi, qword [obj.column_vector]      ; [0x211228:8]=0
0x00003736      85d2           test edx, edx
0x00003738      7440           je 0x377a
0x0000373a      83ea01         sub edx, 1
0x0000373d      0fb60d08d920.  movzx ecx, byte [obj.storing_columns]   ; [0x21104c:1]=1
0x00003744      488d4710       lea rax, [rdi + 0x10]
0x00003748      48c1e206       shl rdx, 6
0x0000374c      488d541750     lea rdx, [rdi + rdx + 0x50]
0x00003751      eb14           jmp 0x3767                              ; stdio2.h:-399
0x00003753      0f1f440000     nop dword [rax + rax]
0x00003758      c70001000000   mov dword [rax], 1
0x0000375e      4883c040       add rax, 0x40                           ; segment.PHDR
0x00003762      4839d0         cmp rax, rdx
0x00003765      7413           je 0x377a
0x00003767      84c9           test cl, cl
0x00003769      75ed           jne 0x3758                              ; .//src:1670
0x0000376b      c70002000000   mov dword [rax], 2
0x00003771      4883c040       add rax, 0x40                           ; segment.PHDR
0x00003775      4839d0         cmp rax, rdx
0x00003778      75ed           jne 0x3767
0x0000377a      c70600000000   mov dword [rsi], 0
0x00003780      832d39da2000.  sub dword [obj.files_ready_to_read], 1  ; [0x2111c0:4]=0
0x00003787      c3             ret
0x00003788      0f1f84000000.  nop dword [rax + rax]
0x00003790      c70702000000   mov dword [rdi], 2
0x00003796      832d23da2000.  sub dword [obj.files_ready_to_read], 1  ; .//src:1680 ; [0x2111c0:4]=0
0x0000379d      c70600000000   mov dword [rsi], 0
0x000037a3      c3             ret
0x000037a4      6690           nop
0x000037a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- add_line_number.isra.2:
0x000037b0      4154           push r12
0x000037b2      448b0df7d920.  mov r9d, dword [obj.line_number]        ; [0x2111b0:4]=0
0x000037b9      488d0d118700.  lea rcx, [0x0000bed1]                   ; "%*d"
0x000037c0      55             push rbp
0x000037c1      448b0548d820.  mov r8d, dword [obj.chars_per_number]   ; [0x211010:4]=5
0x000037c8      4889fd         mov rbp, rdi
0x000037cb      488b3dced920.  mov rdi, qword [obj.number_buff]        ; [0x2111a0:8]=0
0x000037d2      53             push rbx
0x000037d3      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000037da      31c0           xor eax, eax
0x000037dc      be01000000     mov esi, 1
0x000037e1      e8bae7ffff     call sym.imp.__sprintf_chk              ; .//src:1697
0x000037e6      8b1524d82000   mov edx, dword [obj.chars_per_number]   ; [0x211010:4]=5
0x000037ec      8305bdd92000.  add dword [obj.line_number], 1          ; [0x2111b0:4]=0
0x000037f3      29d0           sub eax, edx
0x000037f5      4863d8         movsxd rbx, eax
0x000037f8      48031da1d920.  add rbx, qword [obj.number_buff]        ; [0x2111a0:8]=0
0x000037ff      85d2           test edx, edx
0x00003801      7e1d           jle 0x3820
0x00003803      8d42ff         lea eax, [rdx - 1]
0x00003806      4c8d640301     lea r12, [rbx + rax + 1]
0x0000380b      0f1f440000     nop dword [rax + rax]
0x00003810      4883c301       add rbx, 1
0x00003814      0fbe7bff       movsx edi, byte [rbx - 1]
0x00003818      ff5500         call qword [rbp]
0x0000381b      4c39e3         cmp rbx, r12
0x0000381e      75f0           jne 0x3810
0x00003820      833d09d82000.  cmp dword [obj.columns], 1              ; [0x211030:4]=1
0x00003827      0fbe3df2d720.  movsx edi, byte [obj.number_separator]  ; [0x211020:1]=9 ; "\t"
0x0000382e      7f50           jg 0x3880                               ; .//src:1703
0x00003830      ff5500         call qword [rbp]
0x00003833      803de6d72000.  cmp byte [obj.number_separator], 9      ; .//src:1705 ; [0x211020:1]=9 ; "\t"
0x0000383a      751b           jne 0x3857
0x0000383c      8b3596d92000   mov esi, dword [obj.output_position]    ; [0x2111d8:4]=0
0x00003842      8b0decd72000   mov ecx, dword [obj.chars_per_output_tab] ; [0x211034:4]=8
0x00003848      89f0           mov eax, esi
0x0000384a      99             cdq
0x0000384b      f7f9           idiv ecx
0x0000384d      29d1           sub ecx, edx
0x0000384f      01f1           add ecx, esi
0x00003851      890d81d92000   mov dword [obj.output_position], ecx    ; [0x2111d8:4]=0
0x00003857      803d8fd92000.  cmp byte [obj.truncate_lines], 0        ; .//src:1686 ; [0x2111ed:1]=0
0x0000385e      7415           je 0x3875
0x00003860      803d98d92000.  cmp byte [obj.parallel_files], 0        ; [0x2111ff:1]=0
0x00003867      750c           jne 0x3875
0x00003869      8b0539d92000   mov eax, dword [obj.number_width]       ; .//src:1704 ; [0x2111a8:4]=0
0x0000386f      01055fd92000   add dword [obj.input_position], eax     ; [0x2111d4:4]=0
0x00003875      5b             pop rbx
0x00003876      5d             pop rbp
0x00003877      415c           pop r12
0x00003879      c3             ret
0x0000387a      660f1f440000   nop word [rax + rax]
0x00003880      4080ff09       cmp dil, 9
0x00003884      7405           je 0x388b
0x00003886      ff5500         call qword [rbp]
0x00003889      ebcc           jmp 0x3857                              ; stdio2.h:-399
0x0000388b      8b0517d92000   mov eax, dword [obj.number_width]       ; [0x2111a8:4]=0
0x00003891      2b0579d72000   sub eax, dword [obj.chars_per_number]   ; [0x211010:4]=5
0x00003897      85c0           test eax, eax
0x00003899      8d58ff         lea ebx, [rax - 1]                      ; .//src:1681
0x0000389c      7eb9           jle 0x3857
0x0000389e      6690           nop
0x000038a0      83eb01         sub ebx, 1
0x000038a3      bf20000000     mov edi, 0x20                           ; "@"
0x000038a8      ff5500         call qword [rbp]
0x000038ab      83fbff         cmp ebx, 0xffffffff
0x000038ae      75f0           jne 0x38a0
0x000038b0      eba5           jmp 0x3857
0x000038b2      0f1f4000       nop dword [rax]
0x000038b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- align_column:
0x000038c0      53             push rbx
0x000038c1      8b05c5d82000   mov eax, dword [obj.col_sep_length]     ; [0x21118c:4]=0
0x000038c7      4889fb         mov rbx, rdi
0x000038ca      8b7f34         mov edi, dword [rdi + 0x34]
0x000038cd      39c7           cmp edi, eax
0x000038cf      893dafd82000   mov dword [obj.padding_not_printed], edi ; [0x211184:4]=0
0x000038d5      7f39           jg 0x3910
0x000038d7      803db2d82000.  cmp byte [obj.use_col_separator], 0     ; [0x211190:1]=0
0x000038de      7520           jne 0x3900
0x000038e0      807b3800       cmp byte [rbx + 0x38], 0
0x000038e4      750a           jne 0x38f0
0x000038e6      5b             pop rbx
0x000038e7      c3             ret
0x000038e8      0f1f84000000.  nop dword [rax + rax]
0x000038f0      488d7b20       lea rdi, [rbx + 0x20]
0x000038f4      5b             pop rbx
0x000038f5      e9b6feffff     jmp sym.add_line_number.isra.2
0x000038fa      660f1f440000   nop word [rax + rax]
0x00003900      e88bf7ffff     call sym.print_sep_string
0x00003905      ebd9           jmp 0x38e0                              ; .//src:1632
0x00003907      660f1f840000.  nop word [rax + rax]
0x00003910      29c7           sub edi, eax
0x00003912      e839f6ffff     call sym.pad_across_to
0x00003917      c70563d82000.  mov dword [obj.padding_not_printed], 0  ; [0x211184:4]=0
0x00003921      ebb4           jmp 0x38d7
0x00003923      0f1f00         nop dword [rax]                         ; stdio2.h:-399
0x00003926      662e0f1f8400.  nop word cs:[rax + rax]
;-- close_file.part.4:
0x00003930      53             push rbx
0x00003931      4889fb         mov rbx, rdi
0x00003934      488b3f         mov rdi, qword [rdi]
0x00003937      f60720         test byte [rdi], 0x20
0x0000393a      0f85c0000000   jne 0x3a00                              ; .//src:1649
0x00003940      e8abe4ffff     call sym.imp.fileno
0x00003945      85c0           test eax, eax
0x00003947      7577           jne 0x39c0
0x00003949      803dafd82000.  cmp byte [obj.parallel_files], 0        ; stdio2.h:-399 ; [0x2111ff:1]=0
0x00003950      754e           jne 0x39a0
0x00003952      8b15d8d62000   mov edx, dword [obj.columns]            ; [0x211030:4]=1
0x00003958      488b0dc9d820.  mov rcx, qword [obj.column_vector]      ; [0x211228:8]=0
0x0000395f      85d2           test edx, edx
0x00003961      744b           je 0x39ae
0x00003963      83ea01         sub edx, 1                              ; .//src:1638
0x00003966      488d4110       lea rax, [rcx + 0x10]
0x0000396a      48c1e206       shl rdx, 6
0x0000396e      488d541150     lea rdx, [rcx + rdx + 0x50]
0x00003973      0f1f440000     nop dword [rax + rax]                   ; .//src:1649
0x00003978      8b481c         mov ecx, dword [rax + 0x1c]
0x0000397b      c70003000000   mov dword [rax], 3
0x00003981      85c9           test ecx, ecx                           ; .//src:1640
0x00003983      7507           jne 0x398c
0x00003985      c74020000000.  mov dword [rax + 0x20], 0
0x0000398c      4883c040       add rax, 0x40                           ; segment.PHDR
0x00003990      4839d0         cmp rax, rdx
0x00003993      75e3           jne 0x3978
0x00003995      832d24d82000.  sub dword [obj.files_ready_to_read], 1  ; [0x2111c0:4]=0
0x0000399c      5b             pop rbx
0x0000399d      c3             ret
0x0000399e      6690           nop
0x000039a0      c74310030000.  mov dword [rbx + 0x10], 3
0x000039a7      c74330000000.  mov dword [rbx + 0x30], 0
0x000039ae      832d0bd82000.  sub dword [obj.files_ready_to_read], 1  ; [0x2111c0:4]=0
0x000039b5      5b             pop rbx
0x000039b6      c3             ret
0x000039b7      660f1f840000.  nop word [rax + rax]
0x000039c0      488b3b         mov rdi, qword [rbx]
0x000039c3      e878790000     call sym.rpl_fclose
0x000039c8      85c0           test eax, eax
0x000039ca      0f8479ffffff   je 0x3949
0x000039d0      488b5308       mov rdx, qword [rbx + 8]
0x000039d4      be03000000     mov esi, 3                              ; .//src:1951
0x000039d9      31ff           xor edi, edi
0x000039db      e8105b0000     call sym.quotearg_n_style_colon
0x000039e0      4889c3         mov rbx, rax
0x000039e3      e8c8e1ffff     call sym.imp.__errno_location
0x000039e8      8b30           mov esi, dword [rax]
0x000039ea      488d15599e00.  lea rdx, [0x0000d84a]                   ; "%s"
0x000039f1      4889d9         mov rcx, rbx
0x000039f4      bf01000000     mov edi, 1
0x000039f9      31c0           xor eax, eax
0x000039fb      e8e0e4ffff     call sym.imp.error
0x00003a00      488b5308       mov rdx, qword [rbx + 8]                ; .//src:1960
0x00003a04      be03000000     mov esi, 3
0x00003a09      31ff           xor edi, edi
0x00003a0b      e8e05a0000     call sym.quotearg_n_style_colon
0x00003a10      4889c3         mov rbx, rax
0x00003a13      e898e1ffff     call sym.imp.__errno_location
0x00003a18      8b30           mov esi, dword [rax]
0x00003a1a      488d15299e00.  lea rdx, [0x0000d84a]                   ; "%s"
0x00003a21      4889d9         mov rcx, rbx
0x00003a24      bf01000000     mov edi, 1
0x00003a29      31c0           xor eax, eax
0x00003a2b      e8b0e4ffff     call sym.imp.error
;-- skip_read:
0x00003a30      4155           push r13
0x00003a32      4154           push r12
0x00003a34      4989fd         mov r13, rdi                            ; .//src:1990
0x00003a37      55             push rbp
0x00003a38      53             push rbx
0x00003a39      4189f4         mov r12d, esi
0x00003a3c      4883ec08       sub rsp, 8
0x00003a40      488b1f         mov rbx, qword [rdi]
0x00003a43      488b4308       mov rax, qword [rbx + 8]
0x00003a47      483b4310       cmp rax, qword [rbx + 0x10]
0x00003a4b      0f83bf010000   jae 0x3c10
0x00003a51      488d5001       lea rdx, [rax + 1]
0x00003a55      48895308       mov qword [rbx + 8], rdx                ; .//src:1994
0x00003a59      0fb600         movzx eax, byte [rax]
0x00003a5c      83f80c         cmp eax, 0xc
0x00003a5f      0f848b000000   je 0x3af0
0x00003a65      41c6453900     mov byte [r13 + 0x39], 0
0x00003a6a      31ed           xor ebp, ebp
0x00003a6c      803dcdd62000.  cmp byte [obj.last_line], 0             ; [0x211140:1]=0
0x00003a73      7573           jne 0x3ae8
0x00003a75      83f80a         cmp eax, 0xa
0x00003a78      742c           je 0x3aa6
0x00003a7a      83f80c         cmp eax, 0xc
0x00003a7d      0f84cd000000   je 0x3b50
0x00003a83      83f8ff         cmp eax, 0xffffffff
0x00003a86      0f84a4000000   je 0x3b30
0x00003a8c      488b4308       mov rax, qword [rbx + 8]
0x00003a90      483b4310       cmp rax, qword [rbx + 0x10]
0x00003a94      7342           jae 0x3ad8
0x00003a96      488d5001       lea rdx, [rax + 1]
0x00003a9a      48895308       mov qword [rbx + 8], rdx
0x00003a9e      0fb600         movzx eax, byte [rax]
0x00003aa1      83f80a         cmp eax, 0xa
0x00003aa4      75d4           jne 0x3a7a
0x00003aa6      803d6bd52000.  cmp byte [obj.skip_count], 0            ; [0x211018:1]=1
0x00003aad      741b           je 0x3aca
0x00003aaf      803d49d72000.  cmp byte [obj.parallel_files], 1        ; [0x2111ff:1]=0
0x00003ab6      7506           jne 0x3abe
0x00003ab8      4183fc01       cmp r12d, 1
0x00003abc      750c           jne 0x3aca                              ; .//src:2002
0x00003abe      4084ed         test bpl, bpl
0x00003ac1      7507           jne 0x3aca                              ; .//src:2008
0x00003ac3      830552d52000.  add dword [obj.line_count], 1           ; [0x21101c:4]=1
0x00003aca      4883c408       add rsp, 8
0x00003ace      5b             pop rbx
0x00003acf      5d             pop rbp
0x00003ad0      415c           pop r12
0x00003ad2      415d           pop r13
0x00003ad4      c3             ret
0x00003ad5      0f1f00         nop dword [rax]
0x00003ad8      4889df         mov rdi, rbx
0x00003adb      e890e0ffff     call sym.imp.__uflow
0x00003ae0      eb93           jmp 0x3a75
0x00003ae2      660f1f440000   nop word [rax + rax]
0x00003ae8      41c6453901     mov byte [r13 + 0x39], 1
0x00003aed      eb86           jmp 0x3a75
0x00003aef      90             nop
0x00003af0      41807d3900     cmp byte [r13 + 0x39], 0
0x00003af5      0f84d5000000   je 0x3bd0
0x00003afb      488b4308       mov rax, qword [rbx + 8]
0x00003aff      483b4310       cmp rax, qword [rbx + 0x10]
0x00003b03      0f835a010000   jae 0x3c63
0x00003b09      488d5001       lea rdx, [rax + 1]
0x00003b0d      48895308       mov qword [rbx + 8], rdx
0x00003b11      0fb600         movzx eax, byte [rax]
0x00003b14      83f80a         cmp eax, 0xa
0x00003b17      0f841d010000   je 0x3c3a                               ; stdio2.h:-391
0x00003b1d      83f80c         cmp eax, 0xc
0x00003b20      41c6453900     mov byte [r13 + 0x39], 0
0x00003b25      400f94c5       sete bpl
0x00003b29      e93effffff     jmp 0x3a6c
0x00003b2e      6690           nop
0x00003b30      41837d1003     cmp dword [r13 + 0x10], 3
0x00003b35      0f846bffffff   je 0x3aa6
0x00003b3b      4c89ef         mov rdi, r13
0x00003b3e      e8edfdffff     call sym.close_file.part.4
0x00003b43      e95effffff     jmp 0x3aa6
0x00003b48      0f1f84000000.  nop dword [rax + rax]
0x00003b50      0fb605e9d520.  movzx eax, byte [obj.last_line]         ; [0x211140:1]=0
0x00003b57      84c0           test al, al
0x00003b59      7441           je 0x3b9c
0x00003b5b      803d9dd62000.  cmp byte [obj.parallel_files], 0        ; [0x2111ff:1]=0
0x00003b62      0f85c8000000   jne 0x3c30
0x00003b68      8b15c2d42000   mov edx, dword [obj.columns]            ; [0x211030:4]=1
0x00003b6e      488b0db3d620.  mov rcx, qword [obj.column_vector]      ; [0x211228:8]=0
0x00003b75      85d2           test edx, edx                           ; .//src:1971
0x00003b77      7423           je 0x3b9c
0x00003b79      83ea01         sub edx, 1
0x00003b7c      488d4139       lea rax, [rcx + 0x39]
0x00003b80      48c1e206       shl rdx, 6
0x00003b84      488d541179     lea rdx, [rcx + rdx + 0x79]
0x00003b89      0f1f80000000.  nop dword [rax]
0x00003b90      c60000         mov byte [rax], 0
0x00003b93      4883c040       add rax, 0x40                           ; segment.PHDR
0x00003b97      4839d0         cmp rax, rdx                            ; .//src:1979
0x00003b9a      75f4           jne 0x3b90
0x00003b9c      488b4308       mov rax, qword [rbx + 8]
0x00003ba0      483b4310       cmp rax, qword [rbx + 0x10]             ; .//src:1980
0x00003ba4      0f83aa000000   jae 0x3c54
0x00003baa      488d5001       lea rdx, [rax + 1]
0x00003bae      48895308       mov qword [rbx + 8], rdx
0x00003bb2      0fb638         movzx edi, byte [rax]
0x00003bb5      83ff0a         cmp edi, 0xa
0x00003bb8      7536           jne 0x3bf0
0x00003bba      498d7530       lea rsi, [r13 + 0x30]
0x00003bbe      498d7d10       lea rdi, [r13 + 0x10]
0x00003bc2      e859fbffff     call sym.hold_file.isra.1               ; .//src:1803
0x00003bc7      e9dafeffff     jmp 0x3aa6
0x00003bcc      0f1f4000       nop dword [rax]
0x00003bd0      0fb62d69d520.  movzx ebp, byte [obj.last_line]         ; [0x211140:1]=0
0x00003bd7      4084ed         test bpl, bpl
0x00003bda      89e8           mov eax, ebp
0x00003bdc      7442           je 0x3c20
0x00003bde      41c6453901     mov byte [r13 + 0x39], 1
0x00003be3      e96fffffff     jmp 0x3b57
0x00003be8      0f1f84000000.  nop dword [rax + rax]
0x00003bf0      4889de         mov rsi, rbx
0x00003bf3      e848e2ffff     call sym.imp.ungetc
0x00003bf8      498d7530       lea rsi, [r13 + 0x30]
0x00003bfc      498d7d10       lea rdi, [r13 + 0x10]
0x00003c00      e81bfbffff     call sym.hold_file.isra.1
0x00003c05      e99cfeffff     jmp 0x3aa6
0x00003c0a      660f1f440000   nop word [rax + rax]
0x00003c10      4889df         mov rdi, rbx
0x00003c13      e858dfffff     call sym.imp.__uflow
0x00003c18      e93ffeffff     jmp 0x3a5c
0x00003c1d      0f1f00         nop dword [rax]
0x00003c20      bd01000000     mov ebp, 1
0x00003c25      e972ffffff     jmp 0x3b9c
0x00003c2a      660f1f440000   nop word [rax + rax]
0x00003c30      41c6453900     mov byte [r13 + 0x39], 0
0x00003c35      e962ffffff     jmp 0x3b9c
0x00003c3a      488b4308       mov rax, qword [rbx + 8]
0x00003c3e      483b4310       cmp rax, qword [rbx + 0x10]
0x00003c42      732c           jae 0x3c70
0x00003c44      488d5001       lea rdx, [rax + 1]
0x00003c48      48895308       mov qword [rbx + 8], rdx
0x00003c4c      0fb600         movzx eax, byte [rax]
0x00003c4f      e9c9feffff     jmp 0x3b1d
0x00003c54      4889df         mov rdi, rbx
0x00003c57      e814dfffff     call sym.imp.__uflow
0x00003c5c      89c7           mov edi, eax
0x00003c5e      e952ffffff     jmp 0x3bb5
0x00003c63      4889df         mov rdi, rbx
0x00003c66      e805dfffff     call sym.imp.__uflow
0x00003c6b      e9a4feffff     jmp 0x3b14
0x00003c70      4889df         mov rdi, rbx
0x00003c73      e8f8deffff     call sym.imp.__uflow
0x00003c78      e9a0feffff     jmp 0x3b1d
0x00003c7d      0f1f00         nop dword [rax]
;-- read_rest_of_line:
0x00003c80      55             push rbp
0x00003c81      53             push rbx
0x00003c82      4889fd         mov rbp, rdi                            ; .//src:1895
0x00003c85      4883ec08       sub rsp, 8
0x00003c89      488b1f         mov rbx, qword [rdi]
0x00003c8c      eb1c           jmp 0x3caa
0x00003c8e      6690           nop
0x00003c90      488d5001       lea rdx, [rax + 1]
0x00003c94      48895308       mov qword [rbx + 8], rdx                ; .//src:1897
0x00003c98      0fb600         movzx eax, byte [rax]
0x00003c9b      83f80a         cmp eax, 0xa
0x00003c9e      7421           je 0x3cc1
0x00003ca0      83f80c         cmp eax, 0xc
0x00003ca3      742b           je 0x3cd0
0x00003ca5      83f8ff         cmp eax, 0xffffffff
0x00003ca8      7466           je 0x3d10
0x00003caa      488b4308       mov rax, qword [rbx + 8]
0x00003cae      483b4310       cmp rax, qword [rbx + 0x10]
0x00003cb2      72dc           jb 0x3c90
0x00003cb4      4889df         mov rdi, rbx
0x00003cb7      e8b4deffff     call sym.imp.__uflow
0x00003cbc      83f80a         cmp eax, 0xa
0x00003cbf      75df           jne 0x3ca0
0x00003cc1      4883c408       add rsp, 8
0x00003cc5      5b             pop rbx
0x00003cc6      5d             pop rbp
0x00003cc7      c3             ret
0x00003cc8      0f1f84000000.  nop dword [rax + rax]
0x00003cd0      488b4308       mov rax, qword [rbx + 8]
0x00003cd4      483b4310       cmp rax, qword [rbx + 0x10]
0x00003cd8      7361           jae 0x3d3b
0x00003cda      488d5001       lea rdx, [rax + 1]
0x00003cde      48895308       mov qword [rbx + 8], rdx
0x00003ce2      0fb638         movzx edi, byte [rax]
0x00003ce5      83ff0a         cmp edi, 0xa
0x00003ce8      753e           jne 0x3d28
0x00003cea      803d09d52000.  cmp byte [obj.keep_FF], 0               ; [0x2111fa:1]=0
0x00003cf1      7407           je 0x3cfa
0x00003cf3      c605ffd42000.  mov byte [obj.print_a_FF], 1            ; [0x2111f9:1]=0
0x00003cfa      4883c408       add rsp, 8
0x00003cfe      488d7530       lea rsi, [rbp + 0x30]
0x00003d02      488d7d10       lea rdi, [rbp + 0x10]
0x00003d06      5b             pop rbx
0x00003d07      5d             pop rbp
0x00003d08      e913faffff     jmp sym.hold_file.isra.1
0x00003d0d      0f1f00         nop dword [rax]
0x00003d10      837d1003       cmp dword [rbp + 0x10], 3
0x00003d14      74ab           je 0x3cc1
0x00003d16      4883c408       add rsp, 8
0x00003d1a      4889ef         mov rdi, rbp
0x00003d1d      5b             pop rbx
0x00003d1e      5d             pop rbp
0x00003d1f      e90cfcffff     jmp sym.close_file.part.4
0x00003d24      0f1f4000       nop dword [rax]
0x00003d28      4889de         mov rsi, rbx
0x00003d2b      e810e1ffff     call sym.imp.ungetc
0x00003d30      803dc3d42000.  cmp byte [obj.keep_FF], 0               ; [0x2111fa:1]=0
0x00003d37      75ba           jne 0x3cf3
0x00003d39      ebbf           jmp 0x3cfa
0x00003d3b      4889df         mov rdi, rbx
0x00003d3e      e82ddeffff     call sym.imp.__uflow
0x00003d43      89c7           mov edi, eax
0x00003d45      eb9e           jmp 0x3ce5
0x00003d47      660f1f840000.  nop word [rax + rax]
;-- read_line:
0x00003d50      4156           push r14
0x00003d52      4155           push r13
0x00003d54      4154           push r12
0x00003d56      55             push rbp
0x00003d57      53             push rbx
0x00003d58      4889fb         mov rbx, rdi
0x00003d5b      488b3f         mov rdi, qword [rdi]                    ; .//src:846
0x00003d5e      488b4708       mov rax, qword [rdi + 8]
0x00003d62      483b4710       cmp rax, qword [rdi + 0x10]             ; .//src:845
0x00003d66      0f83b4030000   jae 0x4120                              ; .//src:847
0x00003d6c      488d5001       lea rdx, [rax + 1]
0x00003d70      48895708       mov qword [rdi + 8], rdx                ; .//src:846
0x00003d74      0fb628         movzx ebp, byte [rax]
0x00003d77      83fd0c         cmp ebp, 0xc
0x00003d7a      448b2d53d420.  mov r13d, dword [obj.input_position]    ; [0x2111d4:4]=0
0x00003d81      0f8419020000   je 0x3fa0
0x00003d87      83fd0a         cmp ebp, 0xa
0x00003d8a      c6433900       mov byte [rbx + 0x39], 0                ; .//src:865
0x00003d8e      741e           je 0x3dae
0x00003d90      83fd0c         cmp ebp, 0xc
0x00003d93      0f8457020000   je 0x3ff0
0x00003d99      83fdff         cmp ebp, 0xffffffff
0x00003d9c      0f84fe000000   je 0x3ea0
0x00003da2      400fbefd       movsx edi, bpl                          ; .//src:852
0x00003da6      e825f5ffff     call sym.char_to_clump
0x00003dab      4189c4         mov r12d, eax
0x00003dae      803d38d42000.  cmp byte [obj.truncate_lines], 0        ; [0x2111ed:1]=0
0x00003db5      0f85bd000000   jne 0x3e78
0x00003dbb      488d053eedff.  lea rax, sym.store_char                 ; .//src:854 ; 0x2b00
0x00003dc2      48394320       cmp qword [rbx + 0x20], rax
0x00003dc6      0f8415010000   je 0x3ee1
0x00003dcc      803d25d42000.  cmp byte [obj.print_a_header], 0        ; [0x2111f8:1]=0
0x00003dd3      c605a6d32000.  mov byte [obj.pad_vertically], 1        ; [0x211180:1]=0
0x00003dda      740d           je 0x3de9
0x00003ddc      803d69d22000.  cmp byte [obj.storing_columns], 0       ; [0x21104c:1]=1
0x00003de3      0f8447030000   je 0x4130
0x00003de9      803d0fd42000.  cmp byte [obj.parallel_files], 0        ; [0x2111ff:1]=0
0x00003df0      0f84ca000000   je 0x3ec0
0x00003df6      803d01d42000.  cmp byte [obj.align_empty_cols], 0      ; [0x2111fe:1]=0
0x00003dfd      0f84bd000000   je 0x3ec0
0x00003e03      8b057fd32000   mov eax, dword [obj.separators_not_printed] ; [0x211188:4]=0
0x00003e09      4c8b2d18d420.  mov r13, qword [obj.column_vector]      ; [0x211228:8]=0
0x00003e10      c7056ed32000.  mov dword [obj.separators_not_printed], 0 ; [0x211188:4]=0
0x00003e1a      85c0           test eax, eax
0x00003e1c      7e2a           jle 0x3e48
0x00003e1e      448d70ff       lea r14d, [rax - 1]
0x00003e22      4983c601       add r14, 1
0x00003e26      49c1e606       shl r14, 6
0x00003e2a      4d01ee         add r14, r13
0x00003e2d      0f1f00         nop dword [rax]
0x00003e30      4c89ef         mov rdi, r13
0x00003e33      4983c540       add r13, 0x40                           ; segment.PHDR
0x00003e37      e884faffff     call sym.align_column                   ; .//src:447
0x00003e3c      830545d32000.  add dword [obj.separators_not_printed], 1 ; [0x211188:4]=0
0x00003e43      4d39ee         cmp r14, r13
0x00003e46      75e8           jne 0x3e30
0x00003e48      803d9ed32000.  cmp byte [obj.truncate_lines], 0        ; [0x2111ed:1]=0
0x00003e4f      8b7b34         mov edi, dword [rbx + 0x34]
0x00003e52      893d2cd32000   mov dword [obj.padding_not_printed], edi ; [0x211184:4]=0
0x00003e58      0f841a030000   je 0x4178
0x00003e5e      8b0584d32000   mov eax, dword [obj.chars_per_column]   ; [0x2111e8:4]=0
0x00003e64      890576d32000   mov dword [obj.spaces_not_printed], eax ; [0x2111e0:4]=0
0x00003e6a      c6058dd32000.  mov byte [obj.align_empty_cols], 0      ; [0x2111fe:1]=0
0x00003e71      eb53           jmp 0x3ec6                              ; .//src:456
0x00003e73      0f1f440000     nop dword [rax + rax]
0x00003e78      8b056ad32000   mov eax, dword [obj.chars_per_column]   ; .//src:463 ; [0x2111e8:4]=0
0x00003e7e      390550d32000   cmp dword [obj.input_position], eax     ; [0x2111d4:4]=0
0x00003e84      0f8e31ffffff   jle 0x3dbb
0x00003e8a      5b             pop rbx
0x00003e8b      44892d42d320.  mov dword [obj.input_position], r13d    ; [0x2111d4:4]=0
0x00003e92      31c0           xor eax, eax
0x00003e94      5d             pop rbp
0x00003e95      415c           pop r12
0x00003e97      415d           pop r13
0x00003e99      415e           pop r14
0x00003e9b      c3             ret
0x00003e9c      0f1f4000       nop dword [rax]
0x00003ea0      837b1003       cmp dword [rbx + 0x10], 3
0x00003ea4      0f85b6010000   jne 0x4060
0x00003eaa      b801000000     mov eax, 1
0x00003eaf      5b             pop rbx
0x00003eb0      5d             pop rbp
0x00003eb1      415c           pop r12
0x00003eb3      415d           pop r13
0x00003eb5      415e           pop r14
0x00003eb7      c3             ret
0x00003eb8      0f1f84000000.  nop dword [rax + rax]
0x00003ec0      8b3dbed22000   mov edi, dword [obj.padding_not_printed] ; [0x211184:4]=0
0x00003ec6      8b05c0d22000   mov eax, dword [obj.col_sep_length]     ; [0x21118c:4]=0
0x00003ecc      39f8           cmp eax, edi
0x00003ece      0f8ccc010000   jl 0x40a0
0x00003ed4      803db5d22000.  cmp byte [obj.use_col_separator], 0     ; [0x211190:1]=0
0x00003edb      0f85df010000   jne 0x40c0
0x00003ee1      807b3800       cmp byte [rbx + 0x38], 0
0x00003ee5      0f851d020000   jne 0x4108
0x00003eeb      83fd0a         cmp ebp, 0xa
0x00003eee      c60508d32000.  mov byte [obj.empty_line], 0            ; [0x2111fd:1]=0
0x00003ef5      74b3           je 0x3eaa
0x00003ef7      4585e4         test r12d, r12d
0x00003efa      488b2d47d220.  mov rbp, qword [obj.clump_buff]         ; .//src:507 ; [0x211148:8]=0
0x00003f01      741d           je 0x3f20                               ; .//src:499
0x00003f03      418d4424ff     lea eax, [r12 - 1]
0x00003f08      4c8d640501     lea r12, [rbp + rax + 1]
0x00003f0d      0f1f00         nop dword [rax]
0x00003f10      4883c501       add rbp, 1
0x00003f14      0fbe7dff       movsx edi, byte [rbp - 1]
0x00003f18      ff5320         call qword [rbx + 0x20]                 ; "@"
0x00003f1b      4939ec         cmp r12, rbp
0x00003f1e      75f0           jne 0x3f10
0x00003f20      488b3b         mov rdi, qword [rbx]
0x00003f23      488b4708       mov rax, qword [rdi + 8]
0x00003f27      483b4710       cmp rax, qword [rdi + 0x10]
0x00003f2b      0f835f020000   jae 0x4190
0x00003f31      488d5001       lea rdx, [rax + 1]
0x00003f35      48895708       mov qword [rdi + 8], rdx                ; .//src:520
0x00003f39      0fb600         movzx eax, byte [rax]
0x00003f3c      83f80a         cmp eax, 0xa
0x00003f3f      0f8465ffffff   je 0x3eaa
0x00003f45      83f80c         cmp eax, 0xc
0x00003f48      0f8482010000   je 0x40d0
0x00003f4e      83f8ff         cmp eax, 0xffffffff
0x00003f51      0f8449ffffff   je 0x3ea0                               ; .//src:525
0x00003f57      0fbef8         movsx edi, al
0x00003f5a      8b2d74d22000   mov ebp, dword [obj.input_position]     ; [0x2111d4:4]=0
0x00003f60      e86bf3ffff     call sym.char_to_clump
0x00003f65      803d81d22000.  cmp byte [obj.truncate_lines], 0        ; [0x2111ed:1]=0
0x00003f6c      0f85ce010000   jne 0x4140
0x00003f72      85c0           test eax, eax
0x00003f74      488b2dcdd120.  mov rbp, qword [obj.clump_buff]         ; [0x211148:8]=0
0x00003f7b      74a3           je 0x3f20
0x00003f7d      83e801         sub eax, 1
0x00003f80      4c8d640501     lea r12, [rbp + rax + 1]
0x00003f85      0f1f00         nop dword [rax]
0x00003f88      4883c501       add rbp, 1
0x00003f8c      0fbe7dff       movsx edi, byte [rbp - 1]
0x00003f90      ff5320         call qword [rbx + 0x20]                 ; "@"
0x00003f93      4c39e5         cmp rbp, r12
0x00003f96      75f0           jne 0x3f88
0x00003f98      eb86           jmp 0x3f20                              ; .//src:542
0x00003f9a      660f1f440000   nop word [rax + rax]
0x00003fa0      807b3900       cmp byte [rbx + 0x39], 0
0x00003fa4      488b3b         mov rdi, qword [rbx]                    ; .//src:543
0x00003fa7      488b4708       mov rax, qword [rdi + 8]
0x00003fab      488b5710       mov rdx, qword [rdi + 0x10]
0x00003faf      744a           je 0x3ffb
0x00003fb1      4839c2         cmp rdx, rax
0x00003fb4      0f86f6010000   jbe 0x41b0
0x00003fba      488d5001       lea rdx, [rax + 1]
0x00003fbe      48895708       mov qword [rdi + 8], rdx
0x00003fc2      0fb628         movzx ebp, byte [rax]
0x00003fc5      83fd0a         cmp ebp, 0xa
0x00003fc8      0f85b9fdffff   jne 0x3d87
0x00003fce      488b3b         mov rdi, qword [rbx]
0x00003fd1      488b4708       mov rax, qword [rdi + 8]
0x00003fd5      483b4710       cmp rax, qword [rdi + 0x10]
0x00003fd9      0f83e9010000   jae 0x41c8
0x00003fdf      488d5001       lea rdx, [rax + 1]
0x00003fe3      48895708       mov qword [rdi + 8], rdx                ; stdio.h:-652
0x00003fe7      0fb628         movzx ebp, byte [rax]
0x00003fea      e998fdffff     jmp 0x3d87
0x00003fef      90             nop
0x00003ff0      488b3b         mov rdi, qword [rbx]
0x00003ff3      488b4708       mov rax, qword [rdi + 8]
0x00003ff7      488b5710       mov rdx, qword [rdi + 0x10]
0x00003ffb      4839d0         cmp rax, rdx
0x00003ffe      0f839c010000   jae 0x41a0
0x00004004      488d5001       lea rdx, [rax + 1]
0x00004008      48895708       mov qword [rdi + 8], rdx                ; stdio.h:-650
0x0000400c      0fb638         movzx edi, byte [rax]
0x0000400f      83ff0a         cmp edi, 0xa
0x00004012      756c           jne 0x4080
0x00004014      803dddd12000.  cmp byte [obj.print_a_header], 0        ; [0x2111f8:1]=0
0x0000401b      c605dad12000.  mov byte [obj.FF_only], 1               ; .//src:565 ; [0x2111fc:1]=0
0x00004022      740d           je 0x4031                               ; .//src:567
0x00004024      803d21d02000.  cmp byte [obj.storing_columns], 0       ; [0x21104c:1]=1
0x0000402b      0f842f010000   je 0x4160
0x00004031      803dc2d12000.  cmp byte [obj.keep_FF], 0               ; [0x2111fa:1]=0
0x00004038      7407           je 0x4041
0x0000403a      c605b8d12000.  mov byte [obj.print_a_FF], 1            ; [0x2111f9:1]=0
0x00004041      488d7330       lea rsi, [rbx + 0x30]
0x00004045      488d7b10       lea rdi, [rbx + 0x10]
0x00004049      e8d2f6ffff     call sym.hold_file.isra.1
0x0000404e      5b             pop rbx
0x0000404f      b801000000     mov eax, 1
0x00004054      5d             pop rbp
0x00004055      415c           pop r12
0x00004057      415d           pop r13                                 ; .//src:570
0x00004059      415e           pop r14
0x0000405b      c3             ret
0x0000405c      0f1f4000       nop dword [rax]
0x00004060      4889df         mov rdi, rbx
0x00004063      e8c8f8ffff     call sym.close_file.part.4
0x00004068      5b             pop rbx
0x00004069      b801000000     mov eax, 1
0x0000406e      5d             pop rbp
0x0000406f      415c           pop r12
0x00004071      415d           pop r13
0x00004073      415e           pop r14
0x00004075      c3             ret
0x00004076      662e0f1f8400.  nop word cs:[rax + rax]
0x00004080      488b33         mov rsi, qword [rbx]
0x00004083      e8b8ddffff     call sym.imp.ungetc                     ; .//src:458
0x00004088      803d69d12000.  cmp byte [obj.print_a_header], 0        ; [0x2111f8:1]=0
0x0000408f      c60566d12000.  mov byte [obj.FF_only], 1               ; [0x2111fc:1]=0
0x00004096      7499           je 0x4031
0x00004098      eb8a           jmp 0x4024
0x0000409a      660f1f440000   nop word [rax + rax]
0x000040a0      29c7           sub edi, eax
0x000040a2      e8a9eeffff     call sym.pad_across_to
0x000040a7      c705d3d02000.  mov dword [obj.padding_not_printed], 0  ; [0x211184:4]=0
0x000040b1      e91efeffff     jmp 0x3ed4
0x000040b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000040c0      e8cbefffff     call sym.print_sep_string
0x000040c5      e917feffff     jmp 0x3ee1
0x000040ca      660f1f440000   nop word [rax + rax]
0x000040d0      488b3b         mov rdi, qword [rbx]
0x000040d3      488b4708       mov rax, qword [rdi + 8]
0x000040d7      483b4710       cmp rax, qword [rdi + 0x10]
0x000040db      0f83db000000   jae 0x41bc
0x000040e1      488d5001       lea rdx, [rax + 1]
0x000040e5      48895708       mov qword [rdi + 8], rdx
0x000040e9      0fb638         movzx edi, byte [rax]
0x000040ec      83ff0a         cmp edi, 0xa
0x000040ef      0f843cffffff   je 0x4031
0x000040f5      488b33         mov rsi, qword [rbx]
0x000040f8      e843ddffff     call sym.imp.ungetc
0x000040fd      e92fffffff     jmp 0x4031
0x00004102      660f1f440000   nop word [rax + rax]
0x00004108      488d7b20       lea rdi, [rbx + 0x20]
0x0000410c      e89ff6ffff     call sym.add_line_number.isra.2         ; .//src:587
0x00004111      e9d5fdffff     jmp 0x3eeb
0x00004116      662e0f1f8400.  nop word cs:[rax + rax]
0x00004120      e84bdaffff     call sym.imp.__uflow                    ; .//src:589
0x00004125      89c5           mov ebp, eax
0x00004127      e94bfcffff     jmp 0x3d77
0x0000412c      0f1f4000       nop dword [rax]
0x00004130      e86bf0ffff     call sym.print_header
0x00004135      e9affcffff     jmp 0x3de9
0x0000413a      660f1f440000   nop word [rax + rax]                    ; .//src:607
0x00004140      8b0da2d02000   mov ecx, dword [obj.chars_per_column]   ; .//src:604 ; [0x2111e8:4]=0
0x00004146      390d88d02000   cmp dword [obj.input_position], ecx     ; [0x2111d4:4]=0
0x0000414c      0f8e20feffff   jle 0x3f72
0x00004152      892d7cd02000   mov dword [obj.input_position], ebp     ; [0x2111d4:4]=0
0x00004158      31c0           xor eax, eax
0x0000415a      e950fdffff     jmp 0x3eaf
0x0000415f      90             nop
0x00004160      c60519d02000.  mov byte [obj.pad_vertically], 1        ; [0x211180:1]=0
0x00004167      e834f0ffff     call sym.print_header
0x0000416c      e9d0feffff     jmp 0x4041
0x00004171      0f1f80000000.  nop dword [rax]
0x00004178      c7055ed02000.  mov dword [obj.spaces_not_printed], 0   ; [0x2111e0:4]=0
0x00004182      e9e3fcffff     jmp 0x3e6a
0x00004187      660f1f840000.  nop word [rax + rax]
0x00004190      e8dbd9ffff     call sym.imp.__uflow
0x00004195      e9a2fdffff     jmp 0x3f3c
0x0000419a      660f1f440000   nop word [rax + rax]
0x000041a0      e8cbd9ffff     call sym.imp.__uflow
0x000041a5      89c7           mov edi, eax
0x000041a7      e963feffff     jmp 0x400f
0x000041ac      0f1f4000       nop dword [rax]
0x000041b0      e8bbd9ffff     call sym.imp.__uflow                    ; .//src:857
0x000041b5      89c5           mov ebp, eax
0x000041b7      e909feffff     jmp 0x3fc5
0x000041bc      e8afd9ffff     call sym.imp.__uflow
0x000041c1      89c7           mov edi, eax
0x000041c3      e924ffffff     jmp 0x40ec
0x000041c8      e8a3d9ffff     call sym.imp.__uflow
0x000041cd      89c5           mov ebp, eax
0x000041cf      e9b3fbffff     jmp 0x3d87
0x000041d4      6690           nop
0x000041d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- open_file:
0x000041e0      55             push rbp
0x000041e1      53             push rbx
0x000041e2      4889fd         mov rbp, rdi
0x000041e5      488d3d5da300.  lea rdi, [0x0000e549]                   ; "-"
0x000041ec      4889f3         mov rbx, rsi
0x000041ef      b902000000     mov ecx, 2
0x000041f4      4883ec08       sub rsp, 8
0x000041f8      4889ee         mov rsi, rbp                            ; .//src:653
0x000041fb      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000041fd      0f97c0         seta al
0x00004200      1c00           sbb al, 0
0x00004202      84c0           test al, al
0x00004204      755a           jne 0x4260
0x00004206      488d35c87c00.  lea rsi, str.standard_input             ; 0xbed5 ; "standard input"
0x0000420d      31ff           xor edi, edi
0x0000420f      ba05000000     mov edx, 5
0x00004214      e867daffff     call sym.imp.dcgettext                  ; .//src:649
0x00004219      488b3dd0ce20.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2110f0:8]=0
0x00004220      48894308       mov qword [rbx + 8], rax
0x00004224      c605cbcf2000.  mov byte [obj.have_read_stdin], 1       ; [0x2111f6:1]=0
0x0000422b      4885ff         test rdi, rdi                           ; .//src:669
0x0000422e      48893b         mov qword [rbx], rdi
0x00004231      744b           je 0x427e
0x00004233      be02000000     mov esi, 2
0x00004238      e8a3170000     call sym.fadvise
0x0000423d      c74310000000.  mov dword [rbx + 0x10], 0
0x00004244      c6433900       mov byte [rbx + 0x39], 0
0x00004248      bb01000000     mov ebx, 1
0x0000424d      830540cf2000.  add dword [obj.total_files], 1          ; [0x211194:4]=0
0x00004254      4883c408       add rsp, 8
0x00004258      89d8           mov eax, ebx
0x0000425a      5b             pop rbx
0x0000425b      5d             pop rbp
0x0000425c      c3             ret
0x0000425d      0f1f00         nop dword [rax]
0x00004260      488d35467e00.  lea rsi, [0x0000c0ad]                   ; "r"
0x00004267      4889ef         mov rdi, rbp
0x0000426a      48896b08       mov qword [rbx + 8], rbp
0x0000426e      e89d170000     call sym.fopen_safer
0x00004273      4889c7         mov rdi, rax
0x00004276      488903         mov qword [rbx], rax
0x00004279      4885ff         test rdi, rdi
0x0000427c      75b5           jne 0x4233
0x0000427e      0fb61d0ccf20.  movzx ebx, byte [obj.ignore_failed_opens] ; [0x211191:1]=0
0x00004285      c60544cf2000.  mov byte [obj.failed_opens], 1          ; .//src:676 ; [0x2111d0:1]=0
0x0000428c      84db           test bl, bl
0x0000428e      7410           je 0x42a0
0x00004290      31db           xor ebx, ebx
0x00004292      4883c408       add rsp, 8
0x00004296      89d8           mov eax, ebx
0x00004298      5b             pop rbx
0x00004299      5d             pop rbp
0x0000429a      c3             ret
0x0000429b      0f1f440000     nop dword [rax + rax]
0x000042a0      4889ea         mov rdx, rbp
0x000042a3      be03000000     mov esi, 3
0x000042a8      e843520000     call sym.quotearg_n_style_colon
0x000042ad      4889c5         mov rbp, rax
0x000042b0      e8fbd8ffff     call sym.imp.__errno_location           ; .//src:664
0x000042b5      8b30           mov esi, dword [rax]
0x000042b7      488d158c9500.  lea rdx, [0x0000d84a]                   ; "%s"
0x000042be      4889e9         mov rcx, rbp
0x000042c1      31c0           xor eax, eax
0x000042c3      31ff           xor edi, edi
0x000042c5      e816dcffff     call sym.imp.error
0x000042ca      4883c408       add rsp, 8
0x000042ce      89d8           mov eax, ebx
0x000042d0      5b             pop rbx
0x000042d1      5d             pop rbp
0x000042d2      c3             ret
0x000042d3      0f1f00         nop dword [rax]
0x000042d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- print_files:
0x000042e0      4157           push r15
0x000042e2      4156           push r14                                ; .//src:678
0x000042e4      4155           push r13                                ; .//src:653
0x000042e6      4154           push r12
0x000042e8      4189fc         mov r12d, edi
0x000042eb      55             push rbp
0x000042ec      53             push rbx
0x000042ed      4889f5         mov rbp, rsi
0x000042f0      4883ec18       sub rsp, 0x18
0x000042f4      8b154ecd2000   mov edx, dword [obj.lines_per_page]     ; [0x211048:4]=66 ; "B"
0x000042fa      8d42f6         lea eax, [rdx - 0xa]
0x000042fd      85c0           test eax, eax
0x000042ff      8905ebce2000   mov dword [obj.lines_per_body], eax     ; [0x2111f0:4]=0
0x00004305      0f8e68020000   jle 0x4573
0x0000430b      803d3bcd2000.  cmp byte [obj.extremities], 0           ; [0x21104d:1]=1
0x00004312      0f8469020000   je 0x4581
0x00004318      803d79ce2000.  cmp byte [obj.double_space], 0          ; [0x211198:1]=0
0x0000431f      7415           je 0x4336                               ; .//src:695
0x00004321      8b15c9ce2000   mov edx, dword [obj.lines_per_body]     ; [0x2111f0:4]=0
0x00004327      89d0           mov eax, edx
0x00004329      c1e81f         shr eax, 0x1f
0x0000432c      01d0           add eax, edx
0x0000432e      d1f8           sar eax, 1
0x00004330      8905bace2000   mov dword [obj.lines_per_body], eax     ; [0x2111f0:4]=0
0x00004336      4585e4         test r12d, r12d
0x00004339      0f8518020000   jne 0x4557
0x0000433f      8b0debcc2000   mov ecx, dword [obj.columns]            ; [0x211030:4]=1
0x00004345      c605b3ce2000.  mov byte [obj.parallel_files], 0        ; .//src:704 ; [0x2111ff:1]=0
0x0000434c      803df9cc2000.  cmp byte [obj.storing_columns], 0       ; [0x21104c:1]=1
0x00004353      7407           je 0x435c
0x00004355      c60598ce2000.  mov byte [obj.balance_columns], 1       ; [0x2111f4:1]=0
0x0000435c      83f901         cmp ecx, 1
0x0000435f      0fb61586ce20.  movzx edx, byte [obj.join_lines]        ; [0x2111ec:1]=0
0x00004366      0f8e1e040000   jle 0x478a
0x0000436c      803d1dce2000.  cmp byte [obj.use_col_separator], 0     ; [0x211190:1]=0
0x00004373      0f8513020000   jne 0x458c
0x00004379      84d2           test dl, dl
0x0000437b      0f851b040000   jne 0x479c                              ; .//src:803
0x00004381      488d05427b00.  lea rax, [0x0000beca]                   ; " "
0x00004388      488905c1cc20.  mov qword [obj.col_sep_string], rax     ; [0x211050:8]=0xbee5
0x0000438f      c705f3cd2000.  mov dword [obj.col_sep_length], 1       ; [0x21118c:4]=0
0x00004399      c605f0cd2000.  mov byte [obj.use_col_separator], 1     ; [0x211190:1]=0
0x000043a0      b801000000     mov eax, 1
0x000043a5      c60541ce2000.  mov byte [obj.truncate_lines], 1        ; .//src:865 ; [0x2111ed:1]=0
0x000043ac      c60531ce2000.  mov byte [obj.tabify_output], 1         ; [0x2111e4:1]=0
0x000043b3      84d2           test dl, dl
0x000043b5      7407           je 0x43be                               ; .//src:873
0x000043b7      c6052fce2000.  mov byte [obj.truncate_lines], 0        ; [0x2111ed:1]=0
0x000043be      0fb635e7cd20.  movzx esi, byte [obj.numbered_lines]    ; [0x2111ac:1]=0
0x000043c5      4084f6         test sil, sil
0x000043c8      0f8402020000   je 0x45d0
0x000043ce      803d4bcc2000.  cmp byte [obj.number_separator], 9      ; [0x211020:1]=9 ; "\t"
0x000043d5      8b1539cc2000   mov edx, dword [obj.start_line_num]     ; [0x211014:4]=1
0x000043db      89153bcc2000   mov dword [obj.line_count], edx         ; [0x21101c:4]=1
0x000043e1      8b1529cc2000   mov edx, dword [obj.chars_per_number]   ; [0x211010:4]=5
0x000043e7      0f846e0d0000   je 0x515b
0x000043ed      83c201         add edx, 1
0x000043f0      8915b2cd2000   mov dword [obj.number_width], edx       ; .//src:878 ; [0x2111a8:4]=0
0x000043f6      803d02ce2000.  cmp byte [obj.parallel_files], 0        ; [0x2111ff:1]=0
0x000043fd      0f84cd010000   je 0x45d0
0x00004403      8b3d9fcd2000   mov edi, dword [obj.number_width]       ; [0x2111a8:4]=0
0x00004409      8d51ff         lea edx, [rcx - 1]
0x0000440c      0fafd0         imul edx, eax
0x0000440f      0f80780e0000   jo 0x528d
0x00004415      8b0529cc2000   mov eax, dword [obj.chars_per_line]     ; .//src:882 ; [0x211044:4]=72 ; U"HB\u0101\ubee5"
0x0000441b      29f8           sub eax, edi
0x0000441d      29d0           sub eax, edx
0x0000441f      0f802a0e0000   jo 0x524f
0x00004425      99             cdq                                     ; .//src:885
0x00004426      f7f9           idiv ecx
0x00004428      85c0           test eax, eax
0x0000442a      8905b8cd2000   mov dword [obj.chars_per_column], eax   ; [0x2111e8:4]=0
0x00004430      0f8e230e0000   jle 0x5259
0x00004436      4084f6         test sil, sil
0x00004439      7431           je 0x446c
0x0000443b      488b3d5ecd20.  mov rdi, qword [obj.number_buff]        ; [0x2111a0:8]=0
0x00004442      e849d7ffff     call sym.imp.free
0x00004447      833dc2cb2000.  cmp dword [obj.chars_per_number], 0xb   ; [0x211010:4]=5
0x0000444e      bf0b000000     mov edi, 0xb
0x00004453      0f433db6cb20.  cmovae edi, dword [obj.chars_per_number]
0x0000445a      89ff           mov edi, edi                            ; .//src:908
0x0000445c      4883c701       add rdi, 1
0x00004460      e8ab580000     call sym.xmalloc
0x00004465      48890534cd20.  mov qword [obj.number_buff], rax        ; [0x2111a0:8]=0
0x0000446c      488b3dd5cc20.  mov rdi, qword [obj.clump_buff]         ; [0x211148:8]=0
0x00004473      e818d7ffff     call sym.imp.free
0x00004478      833dbdcb2000.  cmp dword [obj.chars_per_input_tab], 8  ; [0x21103c:4]=8
0x0000447f      bf08000000     mov edi, 8
0x00004484      0f4d3db1cb20.  cmovge edi, dword [obj.chars_per_input_tab]
0x0000448b      4863ff         movsxd rdi, edi
0x0000448e      e87d580000     call sym.xmalloc
0x00004493      488b3d8ecd20.  mov rdi, qword [obj.column_vector]      ; .//src:887 ; [0x211228:8]=0
0x0000449a      488905a7cc20.  mov qword [obj.clump_buff], rax         ; [0x211148:8]=0
0x000044a1      c705e9cc2000.  mov dword [obj.total_files], 0          ; [0x211194:4]=0
0x000044ab      e8e0d6ffff     call sym.imp.free
0x000044b0      48633d79cb20.  movsxd rdi, dword [obj.columns]         ; [0x211030:4]=1
0x000044b7      ba40000000     mov edx, 0x40                           ; segment.PHDR
0x000044bc      31c9           xor ecx, ecx
0x000044be      4889d0         mov rax, rdx
0x000044c1      48f7e7         mul rdi
0x000044c4      0f807b0d0000   jo 0x5245
0x000044ca      4885c0         test rax, rax
0x000044cd      0f88aa0d0000   js 0x527d
0x000044d3      4885c9         test rcx, rcx
0x000044d6      0f85a10d0000   jne 0x527d                              ; .//src:896
0x000044dc      48c1e706       shl rdi, 6
0x000044e0      e82b580000     call sym.xmalloc
0x000044e5      803d13cd2000.  cmp byte [obj.parallel_files], 0        ; [0x2111ff:1]=0
0x000044ec      4889c3         mov rbx, rax                            ; .//src:927
0x000044ef      48890532cd20.  mov qword [obj.column_vector], rax      ; [0x211228:8]=0
0x000044f6      0f84db000000   je 0x45d7
0x000044fc      4585e4         test r12d, r12d
0x000044ff      7437           je 0x4538
0x00004501      418d4424ff     lea eax, [r12 - 1]
0x00004506      4c8d64c508     lea r12, [rbp + rax*8 + 8]
0x0000450b      0f1f440000     nop dword [rax + rax]
0x00004510      488b7d00       mov rdi, qword [rbp]
0x00004514      4889de         mov rsi, rbx
0x00004517      e8c4fcffff     call sym.open_file
0x0000451c      84c0           test al, al
0x0000451e      750b           jne 0x452b
0x00004520      832d09cb2000.  sub dword [obj.columns], 1              ; [0x211030:4]=1
0x00004527      4883eb40       sub rbx, 0x40                           ; segment.PHDR
0x0000452b      4883c508       add rbp, 8
0x0000452f      4883c340       add rbx, 0x40                           ; segment.PHDR
0x00004533      4c39e5         cmp rbp, r12
0x00004536      75d8           jne 0x4510
0x00004538      448b1df1ca20.  mov r11d, dword [obj.columns]           ; [0x211030:4]=1
0x0000453f      4585db         test r11d, r11d
0x00004542      0f857c0a0000   jne 0x4fc4
0x00004548      4883c418       add rsp, 0x18
0x0000454c      5b             pop rbx
0x0000454d      5d             pop rbp
0x0000454e      415c           pop r12
0x00004550      415d           pop r13
0x00004552      415e           pop r14
0x00004554      415f           pop r15                                 ; .//src:939
0x00004556      c3             ret
0x00004557      803da1cc2000.  cmp byte [obj.parallel_files], 0        ; [0x2111ff:1]=0
0x0000455e      0f841e0d0000   je 0x5282
0x00004564      448925c5ca20.  mov dword [obj.columns], r12d           ; [0x211030:4]=1
0x0000456b      4489e1         mov ecx, r12d
0x0000456e      e9d9fdffff     jmp 0x434c
0x00004573      c605d3ca2000.  mov byte [obj.extremities], 0           ; [0x21104d:1]=1
0x0000457a      c60579cc2000.  mov byte [obj.keep_FF], 1               ; [0x2111fa:1]=0
0x00004581      891569cc2000   mov dword [obj.lines_per_body], edx     ; [0x2111f0:4]=0
0x00004587      e98cfdffff     jmp 0x4318
0x0000458c      84d2           test dl, dl
0x0000458e      8b05f8cb2000   mov eax, dword [obj.col_sep_length]     ; [0x21118c:4]=0
0x00004594      0f850bfeffff   jne 0x43a5
0x0000459a      83f801         cmp eax, 1
0x0000459d      0f8502feffff   jne 0x43a5
0x000045a3      488b35a6ca20.  mov rsi, qword [obj.col_sep_string]     ; [0x211050:8]=0xbee5
0x000045aa      803e09         cmp byte [rsi], 9
0x000045ad      0f85f2fdffff   jne 0x43a5
0x000045b3      488d35107900.  lea rsi, [0x0000beca]                   ; " "
0x000045ba      4889358fca20.  mov qword [obj.col_sep_string], rsi     ; [0x211050:8]=0xbee5
0x000045c1      e9dffdffff     jmp 0x43a5
0x000045c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000045d0      31ff           xor edi, edi
0x000045d2      e932feffff     jmp 0x4409
0x000045d7      4585e4         test r12d, r12d
0x000045da      0f8e240b0000   jle 0x5104
0x000045e0      488b7d00       mov rdi, qword [rbp]
0x000045e4      4889c6         mov rsi, rax
0x000045e7      e8f4fbffff     call sym.open_file
0x000045ec      84c0           test al, al
0x000045ee      0f8454ffffff   je 0x4548
0x000045f4      488b3b         mov rdi, qword [rbx]
0x000045f7      e8f4d7ffff     call sym.imp.fileno
0x000045fc      488b7d00       mov rdi, qword [rbp]
0x00004600      89c6           mov esi, eax
0x00004602      e829e7ffff     call sym.init_header
0x00004607      c7432c000000.  mov dword [rbx + 0x2c], 0
0x0000460e      8b351cca2000   mov esi, dword [obj.columns]            ; [0x211030:4]=1
0x00004614      488b5308       mov rdx, qword [rbx + 8]
0x00004618      488d4340       lea rax, [rbx + 0x40]
0x0000461c      488b0b         mov rcx, qword [rbx]
0x0000461f      83fe01         cmp esi, 1
0x00004622      7436           je 0x465a
0x00004624      83ee02         sub esi, 2
0x00004627      4883c602       add rsi, 2
0x0000462b      48c1e606       shl rsi, 6
0x0000462f      4801f3         add rbx, rsi
0x00004632      660f1f440000   nop word [rax + rax]
0x00004638      48895008       mov qword [rax + 8], rdx
0x0000463c      488908         mov qword [rax], rcx
0x0000463f      4883c040       add rax, 0x40                           ; segment.PHDR
0x00004643      c740d0000000.  mov dword [rax - 0x30], 0
0x0000464a      c640f900       mov byte [rax - 7], 0
0x0000464e      c740ec000000.  mov dword [rax - 0x14], 0
0x00004655      4839d8         cmp rax, rbx
0x00004658      75de           jne 0x4638
0x0000465a      803debc92000.  cmp byte [obj.storing_columns], 0       ; [0x21104c:1]=1
0x00004661      8b052dcb2000   mov eax, dword [obj.total_files]        ; [0x211194:4]=0
0x00004667      890553cb2000   mov dword [obj.files_ready_to_read], eax ; [0x2111c0:4]=0
0x0000466d      0f8567090000   jne 0x4fda
0x00004673      4c8b2d4ecb20.  mov r13, qword [obj.first_page_number]  ; [0x2111c8:8]=0
0x0000467a      4983fd01       cmp r13, 1
0x0000467e      0f87fa070000   ja 0x4e7e
0x00004684      48c70529cb20.  mov qword [obj.page_number], 1          ; [0x2111b8:8]=0
0x0000468f      0fb61d57cb20.  movzx ebx, byte [obj.truncate_lines]    ; [0x2111ed:1]=0
0x00004696      4531c0         xor r8d, r8d
0x00004699      8b353dcb2000   mov esi, dword [obj.chars_per_margin]   ; [0x2111dc:4]=0
0x0000469f      84db           test bl, bl
0x000046a1      7423           je 0x46c6
0x000046a3      448b053ecb20.  mov r8d, dword [obj.chars_per_column]   ; [0x2111e8:4]=0
0x000046aa      4101f0         add r8d, esi
0x000046ad      803d4bcb2000.  cmp byte [obj.parallel_files], 0        ; [0x2111ff:1]=0
0x000046b4      7410           je 0x46c6
0x000046b6      803defca2000.  cmp byte [obj.numbered_lines], 0        ; [0x2111ac:1]=0
0x000046bd      7407           je 0x46c6
0x000046bf      440305e2ca20.  add r8d, dword [obj.number_width]       ; [0x2111a8:4]=0
0x000046c6      8b05c0ca2000   mov eax, dword [obj.col_sep_length]     ; [0x21118c:4]=0
0x000046cc      448b155dc920.  mov r10d, dword [obj.columns]           ; [0x211030:4]=1
0x000046d3      440fb61d71c9.  movzx r11d, byte [obj.storing_columns]  ; [0x21104c:1]=1
0x000046db      4c8b0d46cb20.  mov r9, qword [obj.column_vector]       ; [0x211228:8]=0
0x000046e2      01c6           add esi, eax
0x000046e4      4183fa01       cmp r10d, 1
0x000046e8      89442408       mov dword [rsp + 8], eax
0x000046ec      4c89c8         mov rax, r9
0x000046ef      4489d9         mov ecx, r11d
0x000046f2      0f8e050b0000   jle 0x51fd
0x000046f8      0fb60500cb20.  movzx eax, byte [obj.parallel_files]    ; [0x2111ff:1]=0
0x000046ff      0fb63da6ca20.  movzx edi, byte [obj.numbered_lines]    ; [0x2111ac:1]=0
0x00004706      ba01000000     mov edx, 1
0x0000470b      448b3dd6ca20.  mov r15d, dword [obj.chars_per_column]  ; [0x2111e8:4]=0
0x00004712      4c8d35c7edff.  lea r14, sym.print_char                 ; 0x34e0 ; "US\x89\xfbH\x83\xec\b\x80=\xf5\xdc "
0x00004719      4c8d2d30f6ff.  lea r13, sym.read_line                  ; 0x3d50 ; "AVAUATUSH\x89\xfbH\x8b?H\x8bG\bH;G\x10\x0f\x83\xb4\x03"
0x00004720      4c8d25d9e3ff.  lea r12, sym.store_char                 ; 0x2b00
0x00004727      488d2d62eeff.  lea rbp, sym.print_stored               ; 0x3590 ; "AUATI\x89\xfdUSH\x83\xec\bLcg(H\x8b-x\xdc "
0x0000472e      83f001         xor eax, 1
0x00004731      8844240f       mov byte [rsp + 0xf], al
0x00004735      4c89c8         mov rax, r9
0x00004738      eb41           jmp 0x477b
0x0000473a      660f1f440000   nop word [rax + rax]
0x00004740      4c896020       mov qword [rax + 0x20], r12
0x00004744      48896818       mov qword [rax + 0x18], rbp
0x00004748      31c9           xor ecx, ecx
0x0000474a      4084ff         test dil, dil
0x0000474d      740a           je 0x4759
0x0000474f      83fa01         cmp edx, 1
0x00004752      0f94c1         sete cl
0x00004755      0a4c240f       or cl, byte [rsp + 0xf]
0x00004759      84db           test bl, bl
0x0000475b      884838         mov byte [rax + 0x38], cl
0x0000475e      897034         mov dword [rax + 0x34], esi
0x00004761      744d           je 0x47b0
0x00004763      8b4c2408       mov ecx, dword [rsp + 8]
0x00004767      83c201         add edx, 1
0x0000476a      4883c040       add rax, 0x40                           ; segment.PHDR
0x0000476e      4439d2         cmp edx, r10d
0x00004771      428d3401       lea esi, [rcx + r8]
0x00004775      468d043e       lea r8d, [rsi + r15]
0x00004779      7446           je 0x47c1
0x0000477b      4584db         test r11b, r11b
0x0000477e      75c0           jne 0x4740
0x00004780      4c897020       mov qword [rax + 0x20], r14
0x00004784      4c896818       mov qword [rax + 0x18], r13
0x00004788      ebbe           jmp 0x4748
0x0000478a      c605bbc82000.  mov byte [obj.storing_columns], 0       ; [0x21104c:1]=1
0x00004791      8b05f5c92000   mov eax, dword [obj.col_sep_length]     ; [0x21118c:4]=0
0x00004797      e917fcffff     jmp 0x43b3
0x0000479c      488d05417700.  lea rax, [0x0000bee4]                   ; "\t"
0x000047a3      488905a6c820.  mov qword [obj.col_sep_string], rax     ; [0x211050:8]=0xbee5
0x000047aa      e9e0fbffff     jmp 0x438f
0x000047af      90             nop
0x000047b0      83c201         add edx, 1
0x000047b3      4531c0         xor r8d, r8d
0x000047b6      31f6           xor esi, esi
0x000047b8      4883c040       add rax, 0x40                           ; segment.PHDR
0x000047bc      4439d2         cmp edx, r10d
0x000047bf      75ba           jne 0x477b
0x000047c1      8d42fe         lea eax, [rdx - 2]
0x000047c4      4489d9         mov ecx, r11d
0x000047c7      4883c001       add rax, 1
0x000047cb      48c1e006       shl rax, 6
0x000047cf      4c01c8         add rax, r9
0x000047d2      4584db         test r11b, r11b
0x000047d5      0f841f060000   je 0x4dfa
0x000047db      803d12ca2000.  cmp byte [obj.balance_columns], 0       ; [0x2111f4:1]=0
0x000047e2      0f8412060000   je 0x4dfa
0x000047e8      488d1d11e3ff.  lea rbx, sym.store_char                 ; 0x2b00
0x000047ef      48895820       mov qword [rax + 0x20], rbx
0x000047f3      488d1d96edff.  lea rbx, sym.print_stored               ; 0x3590 ; "AUATI\x89\xfdUSH\x83\xec\bLcg(H\x8b-x\xdc "
0x000047fa      48895818       mov qword [rax + 0x18], rbx
0x000047fe      4084ff         test dil, dil
0x00004801      7412           je 0x4815
0x00004803      0fb63df5c920.  movzx edi, byte [obj.parallel_files]    ; [0x2111ff:1]=0
0x0000480a      83f701         xor edi, 1
0x0000480d      83fa01         cmp edx, 1
0x00004810      0f94c2         sete dl
0x00004813      09d7           or edi, edx
0x00004815      40887838       mov byte [rax + 0x38], dil
0x00004819      897034         mov dword [rax + 0x34], esi
0x0000481c      84c9           test cl, cl
0x0000481e      8b05f8c72000   mov eax, dword [obj.line_count]         ; [0x21101c:4]=1
0x00004824      4c89cd         mov rbp, r9
0x00004827      890583c92000   mov dword [obj.line_number], eax        ; [0x2111b0:4]=0
0x0000482d      0f85e9020000   jne 0x4b1c
0x00004833      4585d2         test r10d, r10d
0x00004836      7443           je 0x487b
0x00004838      418d52ff       lea edx, [r10 - 1]
0x0000483c      8b0daec92000   mov ecx, dword [obj.lines_per_body]     ; [0x2111f0:4]=0
0x00004842      498d4130       lea rax, [r9 + 0x30]
0x00004846      48c1e206       shl rdx, 6
0x0000484a      498d541170     lea rdx, [r9 + rdx + 0x70]
0x0000484f      eb12           jmp 0x4863
0x00004851      0f1f80000000.  nop dword [rax]
0x00004858      8908           mov dword [rax], ecx
0x0000485a      4883c040       add rax, 0x40                           ; segment.PHDR
0x0000485e      4839c2         cmp rdx, rax
0x00004861      7418           je 0x487b
0x00004863      448b40e0       mov r8d, dword [rax - 0x20]
0x00004867      4585c0         test r8d, r8d
0x0000486a      74ec           je 0x4858
0x0000486c      c70000000000   mov dword [rax], 0
0x00004872      4883c040       add rax, 0x40                           ; segment.PHDR
0x00004876      4839c2         cmp rdx, rax
0x00004879      75e8           jne 0x4863
0x0000487b      e8a0e1ffff     call sym.cols_ready_to_print
0x00004880      85c0           test eax, eax
0x00004882      0f84c0fcffff   je 0x4548
0x00004888      803dbec72000.  cmp byte [obj.extremities], 0           ; [0x21104d:1]=1
0x0000488f      7407           je 0x4898
0x00004891      c60560c92000.  mov byte [obj.print_a_header], 1        ; [0x2111f8:1]=0
0x00004898      803df9c82000.  cmp byte [obj.double_space], 0          ; [0x211198:1]=0
0x0000489f      c605dac82000.  mov byte [obj.pad_vertically], 0        ; [0x211180:1]=0
0x000048a6      448b2d43c920.  mov r13d, dword [obj.lines_per_body]    ; [0x2111f0:4]=0
0x000048ad      7403           je 0x48b2
0x000048af      4501ed         add r13d, r13d
0x000048b2      4531e4         xor r12d, r12d
0x000048b5      4183fd00       cmp r13d, 0
0x000048b9      0f8e23090000   jle 0x51e2
0x000048bf      90             nop
0x000048c0      e85be1ffff     call sym.cols_ready_to_print
0x000048c5      85c0           test eax, eax
0x000048c7      0f84b9010000   je 0x4a86
0x000048cd      8b3d5dc72000   mov edi, dword [obj.columns]            ; [0x211030:4]=1
0x000048d3      c705fbc82000.  mov dword [obj.output_position], 0      ; [0x2111d8:4]=0
0x000048dd      c705f9c82000.  mov dword [obj.spaces_not_printed], 0   ; [0x2111e0:4]=0
0x000048e7      c70597c82000.  mov dword [obj.separators_not_printed], 0 ; [0x211188:4]=0
0x000048f1      c60588c82000.  mov byte [obj.pad_vertically], 0        ; [0x211180:1]=0
0x000048f8      c605ffc82000.  mov byte [obj.align_empty_cols], 0      ; [0x2111fe:1]=0
0x000048ff      85ff           test edi, edi
0x00004901      c605f5c82000.  mov byte [obj.empty_line], 1            ; [0x2111fd:1]=0
0x00004908      488b1d19c920.  mov rbx, qword [obj.column_vector]      ; [0x211228:8]=0
0x0000490f      0f8ee7000000   jle 0x49fc
0x00004915      bd01000000     mov ebp, 1
0x0000491a      eb57           jmp 0x4973
0x0000491c      0f1f4000       nop dword [rax]
0x00004920      803dd8c82000.  cmp byte [obj.parallel_files], 0        ; [0x2111ff:1]=0
0x00004927      7427           je 0x4950
0x00004929      8b4310         mov eax, dword [rbx + 0x10]
0x0000492c      85c0           test eax, eax
0x0000492e      7420           je 0x4950
0x00004930      803dc6c82000.  cmp byte [obj.empty_line], 0            ; [0x2111fd:1]=0
0x00004937      0f8533030000   jne 0x4c70
0x0000493d      83f803         cmp eax, 3
0x00004940      0f845a030000   je 0x4ca0
0x00004946      83f802         cmp eax, 2
0x00004949      0f8491030000   je 0x4ce0
0x0000494f      90             nop
0x00004950      803d39c82000.  cmp byte [obj.use_col_separator], 0     ; [0x211190:1]=0
0x00004957      7407           je 0x4960
0x00004959      830528c82000.  add dword [obj.separators_not_printed], 1 ; [0x211188:4]=0
0x00004960      83c501         add ebp, 1
0x00004963      4883c340       add rbx, 0x40                           ; segment.PHDR
0x00004967      3b2dc3c62000   cmp ebp, dword [obj.columns]            ; [0x211030:4]=1
0x0000496d      0f8f3d030000   jg 0x4cb0
0x00004973      8b7330         mov esi, dword [rbx + 0x30]
0x00004976      c70554c82000.  mov dword [obj.input_position], 0       ; [0x2111d4:4]=0
0x00004980      85f6           test esi, esi
0x00004982      0f8ef8020000   jle 0x4c80
0x00004988      8b4334         mov eax, dword [rbx + 0x34]
0x0000498b      c6056ac82000.  mov byte [obj.FF_only], 0               ; [0x2111fc:1]=0
0x00004992      4889df         mov rdi, rbx
0x00004995      8905e9c72000   mov dword [obj.padding_not_printed], eax ; [0x211184:4]=0
0x0000499b      ff5318         call qword [rbx + 0x18]
0x0000499e      84c0           test al, al
0x000049a0      0f84ba020000   je 0x4c60
0x000049a6      8b4330         mov eax, dword [rbx + 0x30]
0x000049a9      440fb60dcfc7.  movzx r9d, byte [obj.pad_vertically]    ; [0x211180:1]=0
0x000049b1      83e801         sub eax, 1
0x000049b4      4509cc         or r12d, r9d
0x000049b7      85c0           test eax, eax
0x000049b9      894330         mov dword [rbx + 0x30], eax
0x000049bc      0f8f5effffff   jg 0x4920
0x000049c2      e859e0ffff     call sym.cols_ready_to_print
0x000049c7      85c0           test eax, eax
0x000049c9      0f8551ffffff   jne 0x4920
0x000049cf      4584c9         test r9b, r9b
0x000049d2      0f84f0020000   je 0x4cc8
0x000049d8      488b3d09c720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x000049df      488b4728       mov rax, qword [rdi + 0x28]
0x000049e3      483b4730       cmp rax, qword [rdi + 0x30]
0x000049e7      0f83de030000   jae 0x4dcb
0x000049ed      488d5001       lea rdx, [rax + 1]
0x000049f1      48895728       mov qword [rdi + 0x28], rdx
0x000049f5      c6000a         mov byte [rax], 0xa
0x000049f8      4183ed01       sub r13d, 1
0x000049fc      e81fe0ffff     call sym.cols_ready_to_print
0x00004a01      85c0           test eax, eax
0x00004a03      0f84bf020000   je 0x4cc8
0x00004a09      803d88c72000.  cmp byte [obj.double_space], 0          ; [0x211198:1]=0
0x00004a10      7429           je 0x4a3b
0x00004a12      4584e4         test r12b, r12b
0x00004a15      7424           je 0x4a3b
0x00004a17      488b3dcac620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x00004a1e      488b4728       mov rax, qword [rdi + 0x28]
0x00004a22      483b4730       cmp rax, qword [rdi + 0x30]
0x00004a26      0f83e9030000   jae 0x4e15
0x00004a2c      488d5001       lea rdx, [rax + 1]
0x00004a30      48895728       mov qword [rdi + 0x28], rdx
0x00004a34      c6000a         mov byte [rax], 0xa
0x00004a37      4183ed01       sub r13d, 1
0x00004a3b      4585ed         test r13d, r13d
0x00004a3e      0f8f7cfeffff   jg 0x48c0
0x00004a44      4585ed         test r13d, r13d
0x00004a47      753d           jne 0x4a86
0x00004a49      448b15e0c520.  mov r10d, dword [obj.columns]           ; [0x211030:4]=1
0x00004a50      4c8b0dd1c720.  mov r9, qword [obj.column_vector]       ; [0x211228:8]=0
0x00004a57      4585d2         test r10d, r10d
0x00004a5a      7e2a           jle 0x4a86
0x00004a5c      418d52ff       lea edx, [r10 - 1]
0x00004a60      498d4110       lea rax, [r9 + 0x10]
0x00004a64      48c1e206       shl rdx, 6
0x00004a68      498d541150     lea rdx, [r9 + rdx + 0x50]
0x00004a6d      0f1f00         nop dword [rax]
0x00004a70      8b08           mov ecx, dword [rax]
0x00004a72      85c9           test ecx, ecx
0x00004a74      7504           jne 0x4a7a
0x00004a76      c6402901       mov byte [rax + 0x29], 1
0x00004a7a      4883c040       add rax, 0x40                           ; segment.PHDR
0x00004a7e      4839c2         cmp rdx, rax
0x00004a81      75ed           jne 0x4a70
0x00004a83      4531ed         xor r13d, r13d
0x00004a86      4584e4         test r12b, r12b
0x00004a89      448825f0c620.  mov byte [obj.pad_vertically], r12b     ; [0x211180:1]=0
0x00004a90      740d           je 0x4a9f
0x00004a92      803db4c52000.  cmp byte [obj.extremities], 0           ; [0x21104d:1]=1
0x00004a99      0f8585030000   jne 0x4e24
0x00004a9f      803d54c72000.  cmp byte [obj.keep_FF], 0               ; [0x2111fa:1]=0
0x00004aa6      7430           je 0x4ad8
0x00004aa8      803d4ac72000.  cmp byte [obj.print_a_FF], 0            ; [0x2111f9:1]=0
0x00004aaf      7427           je 0x4ad8
0x00004ab1      488b3d30c620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x00004ab8      488b4728       mov rax, qword [rdi + 0x28]
0x00004abc      483b4730       cmp rax, qword [rdi + 0x30]
0x00004ac0      0f8348070000   jae 0x520e
0x00004ac6      488d5001       lea rdx, [rax + 1]
0x00004aca      48895728       mov qword [rdi + 0x28], rdx
0x00004ace      c6000c         mov byte [rax], 0xc                     ; [0xc:1]=0
0x00004ad1      c60521c72000.  mov byte [obj.print_a_FF], 0            ; [0x2111f9:1]=0
0x00004ad8      488b05d9c620.  mov rax, qword [obj.page_number]        ; [0x2111b8:8]=0
0x00004adf      4883c001       add rax, 1
0x00004ae3      483b053ec520.  cmp rax, qword [obj.last_page_number]   ; [0x211028:8]=-1
0x00004aea      488905c7c620.  mov qword [obj.page_number], rax        ; [0x2111b8:8]=0
0x00004af1      0f8751faffff   ja 0x4548
0x00004af7      e884dfffff     call sym.reset_status
0x00004afc      0fb60d49c520.  movzx ecx, byte [obj.storing_columns]   ; [0x21104c:1]=1
0x00004b03      4c8b0d1ec720.  mov r9, qword [obj.column_vector]       ; [0x211228:8]=0
0x00004b0a      448b151fc520.  mov r10d, dword [obj.columns]           ; [0x211030:4]=1
0x00004b11      4c89cd         mov rbp, r9
0x00004b14      84c9           test cl, cl
0x00004b16      0f8417fdffff   je 0x4833
0x00004b1c      440fb61dd0c6.  movzx r11d, byte [obj.balance_columns]  ; [0x2111f4:1]=0
0x00004b24      4489d6         mov esi, r10d
0x00004b27      c705e7c62000.  mov dword [obj.buff_current], 0         ; [0x211218:4]=0
0x00004b31      4180fb01       cmp r11b, 1
0x00004b35      83de00         sbb esi, 0
0x00004b38      85f6           test esi, esi
0x00004b3a      89742408       mov dword [rsp + 8], esi
0x00004b3e      0f8e74040000   jle 0x4fb8
0x00004b44      8d56ff         lea edx, [rsi - 1]
0x00004b47      498d412c       lea rax, [r9 + 0x2c]
0x00004b4b      48c1e206       shl rdx, 6
0x00004b4f      498d54116c     lea rdx, [r9 + rdx + 0x6c]
0x00004b54      0f1f4000       nop dword [rax]
0x00004b58      c70000000000   mov dword [rax], 0
0x00004b5e      4883c040       add rax, 0x40                           ; segment.PHDR
0x00004b62      4839c2         cmp rdx, rax
0x00004b65      75f1           jne 0x4b58
0x00004b67      8b0553c62000   mov eax, dword [obj.files_ready_to_read] ; [0x2111c0:4]=0
0x00004b6d      85c0           test eax, eax
0x00004b6f      0f8445040000   je 0x4fba
0x00004b75      4531ed         xor r13d, r13d
0x00004b78      41be01000000   mov r14d, 1
0x00004b7e      4531e4         xor r12d, r12d
0x00004b81      4531ff         xor r15d, r15d
0x00004b84      0f1f4000       nop dword [rax]
0x00004b88      8b1d62c62000   mov ebx, dword [obj.lines_per_body]     ; [0x2111f0:4]=0
0x00004b8e      44896528       mov dword [rbp + 0x28], r12d
0x00004b92      85db           test ebx, ebx
0x00004b94      750f           jne 0x4ba5
0x00004b96      eb7d           jmp 0x4c15
0x00004b98      0f1f84000000.  nop dword [rax + rax]
0x00004ba0      83eb01         sub ebx, 1
0x00004ba3      7470           je 0x4c15
0x00004ba5      8b3515c62000   mov esi, dword [obj.files_ready_to_read] ; [0x2111c0:4]=0
0x00004bab      85f6           test esi, esi
0x00004bad      0f844d010000   je 0x4d00
0x00004bb3      8b4d10         mov ecx, dword [rbp + 0x10]
0x00004bb6      85c9           test ecx, ecx
0x00004bb8      75e6           jne 0x4ba0
0x00004bba      4889ef         mov rdi, rbp
0x00004bbd      c7050dc62000.  mov dword [obj.input_position], 0       ; [0x2111d4:4]=0
0x00004bc7      e884f1ffff     call sym.read_line
0x00004bcc      84c0           test al, al
0x00004bce      0f841c010000   je 0x4cf0
0x00004bd4      8b5510         mov edx, dword [rbp + 0x10]
0x00004bd7      8b053bc62000   mov eax, dword [obj.buff_current]       ; [0x211218:4]=0
0x00004bdd      85d2           test edx, edx
0x00004bdf      7405           je 0x4be6
0x00004be1      4139c5         cmp r13d, eax
0x00004be4      74ba           je 0x4ba0
0x00004be6      488b0d1bc620.  mov rcx, qword [obj.line_vector]        ; [0x211208:8]=0
0x00004bed      83452c01       add dword [rbp + 0x2c], 1
0x00004bf1      4183c401       add r12d, 1
0x00004bf5      8b35d9c52000   mov esi, dword [obj.input_position]     ; [0x2111d4:4]=0
0x00004bfb      83eb01         sub ebx, 1
0x00004bfe      46892cb9       mov dword [rcx + r15*4], r13d
0x00004c02      4189c5         mov r13d, eax
0x00004c05      488b0df4c520.  mov rcx, qword [obj.end_vector]         ; [0x211200:8]=0
0x00004c0c      428934b9       mov dword [rcx + r15*4], esi
0x00004c10      4589e7         mov r15d, r12d
0x00004c13      7590           jne 0x4ba5
0x00004c15      4183c601       add r14d, 1
0x00004c19      4883c540       add rbp, 0x40                           ; segment.PHDR
0x00004c1d      4439742408     cmp dword [rsp + 8], r14d
0x00004c22      4a8d0cbd0000.  lea rcx, [r15*4]
0x00004c2a      4489e8         mov eax, r13d
0x00004c2d      7c0e           jl 0x4c3d
0x00004c2f      8b1d8bc52000   mov ebx, dword [obj.files_ready_to_read] ; [0x2111c0:4]=0
0x00004c35      85db           test ebx, ebx
0x00004c37      0f854bffffff   jne 0x4b88
0x00004c3d      488b2de4c520.  mov rbp, qword [obj.column_vector]      ; [0x211228:8]=0
0x00004c44      448b15e5c320.  mov r10d, dword [obj.columns]           ; [0x211030:4]=1
0x00004c4b      440fb61da1c5.  movzx r11d, byte [obj.balance_columns]  ; [0x2111f4:1]=0
0x00004c53      4989e9         mov r9, rbp
0x00004c56      e9c9000000     jmp 0x4d24
0x00004c5b      0f1f440000     nop dword [rax + rax]
0x00004c60      4889df         mov rdi, rbx
0x00004c63      e818f0ffff     call sym.read_rest_of_line
0x00004c68      e939fdffff     jmp 0x49a6
0x00004c6d      0f1f00         nop dword [rax]
0x00004c70      c60587c52000.  mov byte [obj.align_empty_cols], 1      ; [0x2111fe:1]=0
0x00004c77      e9d4fcffff     jmp 0x4950
0x00004c7c      0f1f4000       nop dword [rax]
0x00004c80      837b1001       cmp dword [rbx + 0x10], 1
0x00004c84      0f84fefcffff   je 0x4988
0x00004c8a      803d6ec52000.  cmp byte [obj.parallel_files], 0        ; [0x2111ff:1]=0
0x00004c91      0f84b9fcffff   je 0x4950
0x00004c97      803d5fc52000.  cmp byte [obj.empty_line], 0            ; [0x2111fd:1]=0
0x00004c9e      75d0           jne 0x4c70
0x00004ca0      4889df         mov rdi, rbx
0x00004ca3      e818ecffff     call sym.align_column
0x00004ca8      e9a3fcffff     jmp 0x4950
0x00004cad      0f1f00         nop dword [rax]
0x00004cb0      803dc9c42000.  cmp byte [obj.pad_vertically], 0        ; [0x211180:1]=0
0x00004cb7      0f851bfdffff   jne 0x49d8
0x00004cbd      e93afdffff     jmp 0x49fc
0x00004cc2      660f1f440000   nop word [rax + rax]
0x00004cc8      803d7ec32000.  cmp byte [obj.extremities], 0           ; [0x21104d:1]=1
0x00004ccf      0f8534fdffff   jne 0x4a09
0x00004cd5      e96afdffff     jmp 0x4a44
0x00004cda      660f1f440000   nop word [rax + rax]
0x00004ce0      803d15c52000.  cmp byte [obj.FF_only], 0               ; [0x2111fc:1]=0
0x00004ce7      0f8463fcffff   je 0x4950
0x00004ced      ebb1           jmp 0x4ca0
0x00004cef      90             nop
0x00004cf0      4889ef         mov rdi, rbp
0x00004cf3      e888efffff     call sym.read_rest_of_line
0x00004cf8      e9d7feffff     jmp 0x4bd4
0x00004cfd      0f1f00         nop dword [rax]
0x00004d00      4c8b0d21c520.  mov r9, qword [obj.column_vector]       ; [0x211228:8]=0
0x00004d07      440fb61de5c4.  movzx r11d, byte [obj.balance_columns]  ; [0x2111f4:1]=0
0x00004d0f      4a8d0cbd0000.  lea rcx, [r15*4]
0x00004d17      448b1512c320.  mov r10d, dword [obj.columns]           ; [0x211030:4]=1
0x00004d1e      4489e8         mov eax, r13d
0x00004d21      4c89cd         mov rbp, r9
0x00004d24      488b15ddc420.  mov rdx, qword [obj.line_vector]        ; [0x211208:8]=0
0x00004d2b      4584db         test r11b, r11b
0x00004d2e      458d6aff       lea r13d, [r10 - 1]
0x00004d32      89040a         mov dword [rdx + rcx], eax
0x00004d35      0f849f000000   je 0x4dda
0x00004d3b      4585d2         test r10d, r10d
0x00004d3e      7e3e           jle 0x4d7e
0x00004d40      4489e0         mov eax, r12d
0x00004d43      418d5a01       lea ebx, [r10 + 1]
0x00004d47      31ff           xor edi, edi
0x00004d49      99             cdq
0x00004d4a      4c89ce         mov rsi, r9
0x00004d4d      b901000000     mov ecx, 1
0x00004d52      41f7fa         idiv r10d
0x00004d55      448d6001       lea r12d, [rax + 1]
0x00004d59      0f1f80000000.  nop dword [rax]
0x00004d60      39d1           cmp ecx, edx
0x00004d62      4589e0         mov r8d, r12d
0x00004d65      897e28         mov dword [rsi + 0x28], edi
0x00004d68      440f4fc0       cmovg r8d, eax
0x00004d6c      83c101         add ecx, 1
0x00004d6f      4883c640       add rsi, 0x40                           ; segment.PHDR
0x00004d73      448946ec       mov dword [rsi - 0x14], r8d
0x00004d77      4401c7         add edi, r8d
0x00004d7a      39cb           cmp ebx, ecx
0x00004d7c      75e2           jne 0x4d60
0x00004d7e      4585ed         test r13d, r13d
0x00004d81      743d           je 0x4dc0
0x00004d83      418d52fe       lea edx, [r10 - 2]
0x00004d87      498d412c       lea rax, [r9 + 0x2c]
0x00004d8b      4889d1         mov rcx, rdx
0x00004d8e      48c1e206       shl rdx, 6
0x00004d92      498d74116c     lea rsi, [r9 + rdx + 0x6c]
0x00004d97      660f1f840000.  nop word [rax + rax]
0x00004da0      8b10           mov edx, dword [rax]
0x00004da2      4883c040       add rax, 0x40                           ; segment.PHDR
0x00004da6      8950c4         mov dword [rax - 0x3c], edx
0x00004da9      4839c6         cmp rsi, rax
0x00004dac      75f2           jne 0x4da0
0x00004dae      89cd           mov ebp, ecx
0x00004db0      4883c501       add rbp, 1
0x00004db4      48c1e506       shl rbp, 6
0x00004db8      4c01cd         add rbp, r9
0x00004dbb      4584db         test r11b, r11b
0x00004dbe      741f           je 0x4ddf
0x00004dc0      8b452c         mov eax, dword [rbp + 0x2c]
0x00004dc3      894530         mov dword [rbp + 0x30], eax
0x00004dc6      e9b0faffff     jmp 0x487b
0x00004dcb      be0a000000     mov esi, 0xa
0x00004dd0      e81bcfffff     call sym.imp.__overflow
0x00004dd5      e91efcffff     jmp 0x49f8
0x00004dda      4585ed         test r13d, r13d
0x00004ddd      75a4           jne 0x4d83
0x00004ddf      448b5d10       mov r11d, dword [rbp + 0x10]
0x00004de3      4585db         test r11d, r11d
0x00004de6      0f8586000000   jne 0x4e72
0x00004dec      8b05fec32000   mov eax, dword [obj.lines_per_body]     ; [0x2111f0:4]=0
0x00004df2      894530         mov dword [rbp + 0x30], eax
0x00004df5      e981faffff     jmp 0x487b
0x00004dfa      488d1ddfe6ff.  lea rbx, sym.print_char                 ; 0x34e0 ; "US\x89\xfbH\x83\xec\b\x80=\xf5\xdc "
0x00004e01      48895820       mov qword [rax + 0x20], rbx
0x00004e05      488d1d44efff.  lea rbx, sym.read_line                  ; 0x3d50 ; "AVAUATUSH\x89\xfbH\x8b?H\x8bG\bH;G\x10\x0f\x83\xb4\x03"
0x00004e0c      48895818       mov qword [rax + 0x18], rbx
0x00004e10      e9e9f9ffff     jmp 0x47fe
0x00004e15      be0a000000     mov esi, 0xa
0x00004e1a      e8d1ceffff     call sym.imp.__overflow
0x00004e1f      e913fcffff     jmp 0x4a37
0x00004e24      803dccc32000.  cmp byte [obj.use_form_feed], 0         ; [0x2111f7:1]=0
0x00004e2b      0f8590030000   jne 0x51c1
0x00004e31      4183c505       add r13d, 5
0x00004e35      751e           jne 0x4e55
0x00004e37      e99cfcffff     jmp 0x4ad8
0x00004e3c      0f1f4000       nop dword [rax]
0x00004e40      488d5001       lea rdx, [rax + 1]
0x00004e44      48895728       mov qword [rdi + 0x28], rdx
0x00004e48      c6000a         mov byte [rax], 0xa
0x00004e4b      4183ed01       sub r13d, 1
0x00004e4f      0f8483fcffff   je 0x4ad8
0x00004e55      488b3d8cc220.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x00004e5c      488b4728       mov rax, qword [rdi + 0x28]
0x00004e60      483b4730       cmp rax, qword [rdi + 0x30]
0x00004e64      72da           jb 0x4e40
0x00004e66      be0a000000     mov esi, 0xa
0x00004e6b      e880ceffff     call sym.imp.__overflow
0x00004e70      ebd9           jmp 0x4e4b
0x00004e72      c74530000000.  mov dword [rbp + 0x30], 0
0x00004e79      e9fdf9ffff     jmp 0x487b
0x00004e7e      41bc01000000   mov r12d, 1
0x00004e84      0f1f4000       nop dword [rax]
0x00004e88      833d61c32000.  cmp dword [obj.lines_per_body], 1       ; [0x2111f0:4]=0
0x00004e8f      488b1d92c320.  mov rbx, qword [obj.column_vector]      ; [0x211228:8]=0
0x00004e96      41be01000000   mov r14d, 1
0x00004e9c      8b058ec12000   mov eax, dword [obj.columns]            ; [0x211030:4]=1
0x00004ea2      7e57           jle 0x4efb
0x00004ea4      0f1f4000       nop dword [rax]
0x00004ea8      85c0           test eax, eax
0x00004eaa      7e42           jle 0x4eee
0x00004eac      bd01000000     mov ebp, 1
0x00004eb1      eb10           jmp 0x4ec3
0x00004eb3      0f1f440000     nop dword [rax + rax]
0x00004eb8      83c501         add ebp, 1
0x00004ebb      4883c340       add rbx, 0x40                           ; segment.PHDR
0x00004ebf      39c5           cmp ebp, eax
0x00004ec1      7f24           jg 0x4ee7
0x00004ec3      448b5310       mov r10d, dword [rbx + 0x10]
0x00004ec7      4585d2         test r10d, r10d
0x00004eca      75ec           jne 0x4eb8
0x00004ecc      89ee           mov esi, ebp
0x00004ece      4889df         mov rdi, rbx
0x00004ed1      83c501         add ebp, 1
0x00004ed4      e857ebffff     call sym.skip_read
0x00004ed9      8b0551c12000   mov eax, dword [obj.columns]            ; [0x211030:4]=1
0x00004edf      4883c340       add rbx, 0x40                           ; segment.PHDR
0x00004ee3      39c5           cmp ebp, eax
0x00004ee5      7edc           jle 0x4ec3
0x00004ee7      488b1d3ac320.  mov rbx, qword [obj.column_vector]      ; [0x211228:8]=0
0x00004eee      4183c601       add r14d, 1
0x00004ef2      443b35f7c220.  cmp r14d, dword [obj.lines_per_body]    ; [0x2111f0:4]=0
0x00004ef9      7cad           jl 0x4ea8
0x00004efb      85c0           test eax, eax
0x00004efd      c6053cc22000.  mov byte [obj.last_line], 1             ; [0x211140:1]=0
0x00004f04      7e76           jle 0x4f7c
0x00004f06      bd01000000     mov ebp, 1
0x00004f0b      eb0e           jmp 0x4f1b
0x00004f0d      0f1f00         nop dword [rax]
0x00004f10      83c501         add ebp, 1
0x00004f13      4883c340       add rbx, 0x40                           ; segment.PHDR
0x00004f17      39c5           cmp ebp, eax
0x00004f19      7f24           jg 0x4f3f
0x00004f1b      448b4b10       mov r9d, dword [rbx + 0x10]
0x00004f1f      4585c9         test r9d, r9d
0x00004f22      75ec           jne 0x4f10
0x00004f24      89ee           mov esi, ebp
0x00004f26      4889df         mov rdi, rbx
0x00004f29      83c501         add ebp, 1
0x00004f2c      e8ffeaffff     call sym.skip_read
0x00004f31      8b05f9c02000   mov eax, dword [obj.columns]            ; [0x211030:4]=1
0x00004f37      4883c340       add rbx, 0x40                           ; segment.PHDR
0x00004f3b      39c5           cmp ebp, eax
0x00004f3d      7edc           jle 0x4f1b
0x00004f3f      803d06c12000.  cmp byte [obj.storing_columns], 0       ; [0x21104c:1]=1
0x00004f46      7434           je 0x4f7c
0x00004f48      85c0           test eax, eax
0x00004f4a      488b0dd7c220.  mov rcx, qword [obj.column_vector]      ; [0x211228:8]=0
0x00004f51      7e29           jle 0x4f7c
0x00004f53      83e801         sub eax, 1
0x00004f56      488d5110       lea rdx, [rcx + 0x10]
0x00004f5a      48c1e006       shl rax, 6
0x00004f5e      488d440150     lea rax, [rcx + rax + 0x50]
0x00004f63      0f1f440000     nop dword [rax + rax]
0x00004f68      833a03         cmp dword [rdx], 3
0x00004f6b      7406           je 0x4f73
0x00004f6d      c70202000000   mov dword [rdx], 2
0x00004f73      4883c240       add rdx, 0x40                           ; segment.PHDR
0x00004f77      4839c2         cmp rdx, rax
0x00004f7a      75ec           jne 0x4f68
0x00004f7c      e8ffdaffff     call sym.reset_status
0x00004f81      448b0538c220.  mov r8d, dword [obj.files_ready_to_read] ; [0x2111c0:4]=0
0x00004f88      c605b1c12000.  mov byte [obj.last_line], 0             ; [0x211140:1]=0
0x00004f8f      4585c0         test r8d, r8d
0x00004f92      0f8ee5010000   jle 0x517d
0x00004f98      4983c401       add r12, 1
0x00004f9c      4d39e5         cmp r13, r12
0x00004f9f      0f85e3feffff   jne 0x4e88
0x00004fa5      488b051cc220.  mov rax, qword [obj.first_page_number]  ; [0x2111c8:8]=0
0x00004fac      48890505c220.  mov qword [obj.page_number], rax        ; [0x2111b8:8]=0
0x00004fb3      e9d7f6ffff     jmp 0x468f
0x00004fb8      31c0           xor eax, eax
0x00004fba      31c9           xor ecx, ecx
0x00004fbc      4531e4         xor r12d, r12d
0x00004fbf      e960fdffff     jmp 0x4d24
0x00004fc4      488d3d1a6f00.  lea rdi, [0x0000bee5]
0x00004fcb      beffffffff     mov esi, 0xffffffff                     ; -1
0x00004fd0      e85bddffff     call sym.init_header
0x00004fd5      e980f6ffff     jmp 0x465a
0x00004fda      8b1d10c22000   mov ebx, dword [obj.lines_per_body]     ; [0x2111f0:4]=0
0x00004fe0      0faf1d49c020.  imul ebx, dword [obj.columns]
0x00004fe7      0f8049020000   jo 0x5236
0x00004fed      4189dc         mov r12d, ebx
0x00004ff0      4183c401       add r12d, 1
0x00004ff4      0f803c020000   jo 0x5236
0x00004ffa      8b2de8c12000   mov ebp, dword [obj.chars_per_column]   ; [0x2111e8:4]=0
0x00005000      83c501         add ebp, 1
0x00005003      0f802d020000   jo 0x5236
0x00005009      0fafeb         imul ebp, ebx
0x0000500c      0f8024020000   jo 0x5236
0x00005012      488b3defc120.  mov rdi, qword [obj.line_vector]        ; [0x211208:8]=0
0x00005019      e872cbffff     call sym.imp.free
0x0000501e      ba04000000     mov edx, 4
0x00005023      4963cc         movsxd rcx, r12d
0x00005026      31f6           xor esi, esi
0x00005028      4889d0         mov rax, rdx
0x0000502b      48f7e1         mul rcx
0x0000502e      0f80f8010000   jo 0x522c
0x00005034      4885c0         test rax, rax
0x00005037      0f8840020000   js 0x527d
0x0000503d      4885f6         test rsi, rsi
0x00005040      0f8537020000   jne 0x527d
0x00005046      488d3c8d0000.  lea rdi, [rcx*4]
0x0000504e      4863db         movsxd rbx, ebx
0x00005051      e8ba4c0000     call sym.xmalloc
0x00005056      488b3da3c120.  mov rdi, qword [obj.end_vector]         ; [0x211200:8]=0
0x0000505d      488905a4c120.  mov qword [obj.line_vector], rax        ; [0x211208:8]=0
0x00005064      e827cbffff     call sym.imp.free
0x00005069      ba04000000     mov edx, 4
0x0000506e      31c9           xor ecx, ecx
0x00005070      4889d0         mov rax, rdx
0x00005073      48f7e3         mul rbx
0x00005076      0f80bf010000   jo 0x523b
0x0000507c      4885c0         test rax, rax
0x0000507f      0f88f8010000   js 0x527d
0x00005085      4885c9         test rcx, rcx
0x00005088      0f85ef010000   jne 0x527d
0x0000508e      488d3c9d0000.  lea rdi, [rbx*4]
0x00005096      4863ed         movsxd rbp, ebp
0x00005099      e8724c0000     call sym.xmalloc
0x0000509e      488b3d7bc120.  mov rdi, qword [obj.buff]               ; [0x211220:8]=0
0x000050a5      48890554c120.  mov qword [obj.end_vector], rax         ; [0x211200:8]=0
0x000050ac      e8dfcaffff     call sym.imp.free
0x000050b1      0fb605d8c020.  movzx eax, byte [obj.use_col_separator] ; [0x211190:1]=0
0x000050b8      488d7801       lea rdi, [rax + 1]
0x000050bc      4889f8         mov rax, rdi
0x000050bf      48f7e5         mul rbp
0x000050c2      4889c7         mov rdi, rax
0x000050c5      0f90c0         seto al
0x000050c8      4885ff         test rdi, rdi
0x000050cb      0fb6c0         movzx eax, al
0x000050ce      0f88a9010000   js 0x527d
0x000050d4      4885c0         test rax, rax
0x000050d7      0f85a0010000   jne 0x527d
0x000050dd      e82e4c0000     call sym.xmalloc
0x000050e2      48890537c120.  mov qword [obj.buff], rax               ; [0x211220:8]=0
0x000050e9      0fb605a0c020.  movzx eax, byte [obj.use_col_separator] ; [0x211190:1]=0
0x000050f0      4883c001       add rax, 1
0x000050f4      480fafe8       imul rbp, rax
0x000050f8      48892d11c120.  mov qword [obj.buff_allocated], rbp     ; [0x211210:8]=0
0x000050ff      e96ff5ffff     jmp 0x4673
0x00005104      488d35ca6d00.  lea rsi, str.standard_input             ; 0xbed5 ; "standard input"
0x0000510b      ba05000000     mov edx, 5
0x00005110      31ff           xor edi, edi
0x00005112      e869cbffff     call sym.imp.dcgettext
0x00005117      48894308       mov qword [rbx + 8], rax
0x0000511b      488b05cebf20.  mov rax, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2110f0:8]=0
0x00005122      488d3dbc6d00.  lea rdi, [0x0000bee5]
0x00005129      c74310000000.  mov dword [rbx + 0x10], 0
0x00005130      c6433900       mov byte [rbx + 0x39], 0
0x00005134      beffffffff     mov esi, 0xffffffff                     ; -1
0x00005139      c605b6c02000.  mov byte [obj.have_read_stdin], 1       ; [0x2111f6:1]=0
0x00005140      83054dc02000.  add dword [obj.total_files], 1          ; [0x211194:4]=0
0x00005147      488903         mov qword [rbx], rax
0x0000514a      e8e1dbffff     call sym.init_header
0x0000514f      c7432c000000.  mov dword [rbx + 0x2c], 0
0x00005156      e9b3f4ffff     jmp 0x460e
0x0000515b      89d7           mov edi, edx
0x0000515d      c1ff1f         sar edi, 0x1f
0x00005160      c1ef1d         shr edi, 0x1d
0x00005163      448d043a       lea r8d, [rdx + rdi]
0x00005167      4183e007       and r8d, 7
0x0000516b      4429c7         sub edi, r8d
0x0000516e      8d543a08       lea edx, [rdx + rdi + 8]
0x00005172      891530c02000   mov dword [obj.number_width], edx       ; [0x2111a8:4]=0
0x00005178      e979f2ffff     jmp 0x43f6
0x0000517d      488d35a46f00.  lea rsi, str.starting_page_number__lu_exceeds_page_count__lu ; 0xc128 ; "starting page number %lu exceeds page count %lu"
0x00005184      31ff           xor edi, edi
0x00005186      ba05000000     mov edx, 5
0x0000518b      e8f0caffff     call sym.imp.dcgettext
0x00005190      31ff           xor edi, edi
0x00005192      4889c2         mov rdx, rax
0x00005195      31f6           xor esi, esi
0x00005197      31c0           xor eax, eax
0x00005199      4d89e0         mov r8, r12
0x0000519c      4c89e9         mov rcx, r13
0x0000519f      e83ccdffff     call sym.imp.error
0x000051a4      8b3d16c02000   mov edi, dword [obj.files_ready_to_read] ; [0x2111c0:4]=0
0x000051aa      85ff           test edi, edi
0x000051ac      0f8ff3fdffff   jg 0x4fa5
0x000051b2      4883c418       add rsp, 0x18
0x000051b6      5b             pop rbx
0x000051b7      5d             pop rbp
0x000051b8      415c           pop r12
0x000051ba      415d           pop r13
0x000051bc      415e           pop r14
0x000051be      415f           pop r15
0x000051c0      c3             ret
0x000051c1      488b3d20bf20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x000051c8      488b4728       mov rax, qword [rdi + 0x28]
0x000051cc      483b4730       cmp rax, qword [rdi + 0x30]
0x000051d0      734b           jae 0x521d
0x000051d2      488d5001       lea rdx, [rax + 1]
0x000051d6      48895728       mov qword [rdi + 0x28], rdx
0x000051da      c6000c         mov byte [rax], 0xc                     ; [0xc:1]=0
0x000051dd      e9f6f8ffff     jmp 0x4ad8
0x000051e2      0f85b7f8ffff   jne 0x4a9f
0x000051e8      4585d2         test r10d, r10d
0x000051eb      0f8f6bf8ffff   jg 0x4a5c
0x000051f1      c60588bf2000.  mov byte [obj.pad_vertically], 0        ; [0x211180:1]=0
0x000051f8      e9a2f8ffff     jmp 0x4a9f
0x000051fd      ba01000000     mov edx, 1
0x00005202      0fb63da3bf20.  movzx edi, byte [obj.numbered_lines]    ; [0x2111ac:1]=0
0x00005209      e9c4f5ffff     jmp 0x47d2
0x0000520e      be0c000000     mov esi, 0xc
0x00005213      e8d8caffff     call sym.imp.__overflow
0x00005218      e9b4f8ffff     jmp 0x4ad1
0x0000521d      be0c000000     mov esi, 0xc
0x00005222      e8c9caffff     call sym.imp.__overflow
0x00005227      e9acf8ffff     jmp 0x4ad8
0x0000522c      be01000000     mov esi, 1
0x00005231      e9fefdffff     jmp 0x5034
0x00005236      e815d9ffff     call sym.integer_overflow
0x0000523b      b901000000     mov ecx, 1
0x00005240      e937feffff     jmp 0x507c
0x00005245      b901000000     mov ecx, 1
0x0000524a      e97bf2ffff     jmp 0x44ca
0x0000524f      c7058fbf2000.  mov dword [obj.chars_per_column], 0     ; [0x2111e8:4]=0
0x00005259      488d35866c00.  lea rsi, str.page_width_too_narrow      ; 0xbee6 ; "page width too narrow"
0x00005260      ba05000000     mov edx, 5
0x00005265      31ff           xor edi, edi
0x00005267      e814caffff     call sym.imp.dcgettext
0x0000526c      31f6           xor esi, esi
0x0000526e      4889c2         mov rdx, rax
0x00005271      bf01000000     mov edi, 1
0x00005276      31c0           xor eax, eax
0x00005278      e863ccffff     call sym.imp.error
0x0000527d      e8de4c0000     call sym.xalloc_die
0x00005282      8b0da8bd2000   mov ecx, dword [obj.columns]            ; [0x211030:4]=1
0x00005288      e9bff0ffff     jmp 0x434c
0x0000528d      baffffff7f     mov edx, 0x7fffffff
0x00005292      e97ef1ffff     jmp 0x4415
0x00005297      660f1f840000.  nop word [rax + rax]
;-- usage:
0x000052a0      4155           push r13
0x000052a2      4154           push r12
0x000052a4      ba05000000     mov edx, 5
0x000052a9      55             push rbp
0x000052aa      53             push rbx
0x000052ab      89fd           mov ebp, edi
0x000052ad      4881ec880000.  sub rsp, 0x88
0x000052b4      488b1d85bf20.  mov rbx, qword [obj.program_name]       ; [0x211240:8]=0
0x000052bb      64488b042528.  mov rax, qword fs:[0x28]
0x000052c4      4889442478     mov qword [rsp + 0x78], rax
0x000052c9      31c0           xor eax, eax
0x000052cb      85ff           test edi, edi
0x000052cd      742e           je 0x52fd
0x000052cf      488d35826e00.  lea rsi, str.Try___s___help__for_more_information. ; 0xc158 ; "Try '%s --help' for more information.\n"
0x000052d6      31ff           xor edi, edi
0x000052d8      e8a3c9ffff     call sym.imp.dcgettext
0x000052dd      488b3d3cbe20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211120:8]=0
0x000052e4      4889c2         mov rdx, rax
0x000052e7      4889d9         mov rcx, rbx
0x000052ea      be01000000     mov esi, 1
0x000052ef      31c0           xor eax, eax
0x000052f1      e85accffff     call sym.imp.__fprintf_chk
0x000052f6      89ef           mov edi, ebp
0x000052f8      e833ccffff     call sym.imp.exit
0x000052fd      488d357c6e00.  lea rsi, str.Usage:__s__OPTION_...__FILE_... ; 0xc180 ; "Usage: %s [OPTION]... [FILE]...\n"
0x00005304      31ff           xor edi, edi
0x00005306      e875c9ffff     call sym.imp.dcgettext
0x0000530b      4889da         mov rdx, rbx
0x0000530e      4889c6         mov rsi, rax
0x00005311      bf01000000     mov edi, 1
0x00005316      31c0           xor eax, eax
0x00005318      e893cbffff     call sym.imp.__printf_chk
0x0000531d      488b1dc4bd20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x00005324      488d357d6e00.  lea rsi, str.Paginate_or_columnate_FILE_s__for_printing. ; 0xc1a8 ; "Paginate or columnate FILE(s) for printing.\n"
0x0000532b      ba05000000     mov edx, 5
0x00005330      31ff           xor edi, edi
0x00005332      e849c9ffff     call sym.imp.dcgettext
0x00005337      4889de         mov rsi, rbx
0x0000533a      4889c7         mov rdi, rax
0x0000533d      e84ecaffff     call sym.imp.fputs_unlocked
0x00005342      488b1d9fbd20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x00005349      488d35886e00.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0xc1d8 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00005350      ba05000000     mov edx, 5
0x00005355      31ff           xor edi, edi
0x00005357      e824c9ffff     call sym.imp.dcgettext
0x0000535c      4889de         mov rsi, rbx
0x0000535f      4889c7         mov rdi, rax
0x00005362      e829caffff     call sym.imp.fputs_unlocked
0x00005367      488b1d7abd20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x0000536e      488d359b6e00.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0xc210 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00005375      ba05000000     mov edx, 5
0x0000537a      31ff           xor edi, edi
0x0000537c      e8ffc8ffff     call sym.imp.dcgettext
0x00005381      4889de         mov rsi, rbx
0x00005384      4889c7         mov rdi, rax
0x00005387      e804caffff     call sym.imp.fputs_unlocked
0x0000538c      488b1d55bd20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x00005393      488d35c66e00.  lea rsi, str.FIRST_PAGE_:LAST_PAGE_____pages_FIRST_PAGE_:LAST_PAGE_______________________begin__stop__printing_with_page_FIRST__LAST__PAGE_____COLUMN____columns_COLUMN______________________output_COLUMN_columns_and_print_columns_down_______________________unless__a_is_used._Balance_number_of_lines_in_the______________________columns_on_each_page ; 0xc260 ; "  +FIRST_PAGE[:LAST_PAGE], --pages=FIRST_PAGE[:LAST_PAGE]\n                    begin [stop] printing with page FIRST_[LAST_]PAGE\n  -COLUMN, --columns=COLUMN\n                    output COLUMN columns and print columns down,\n                    unless -a is used. Balance number of lines in the\n                    columns on each page\n"
0x0000539a      ba05000000     mov edx, 5
0x0000539f      31ff           xor edi, edi
0x000053a1      e8dac8ffff     call sym.imp.dcgettext
0x000053a6      4889de         mov rsi, rbx
0x000053a9      4889c7         mov rdi, rax
0x000053ac      e8dfc9ffff     call sym.imp.fputs_unlocked
0x000053b1      488b1d30bd20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x000053b8      488d35f16f00.  lea rsi, str.a____across______print_columns_across_rather_than_down__used_together______________________with__COLUMN_____c____show_control_chars______________________use_hat_notation___G__and_octal_backslash_notation_____d____double_space______________________double_space_the_output ; 0xc3b0 ; "  -a, --across      print columns across rather than down, used together\n                    with -COLUMN\n  -c, --show-control-chars\n                    use hat notation (^G) and octal backslash notation\n  -d, --double-space\n                    double space the output\n"
0x000053bf      ba05000000     mov edx, 5
0x000053c4      31ff           xor edi, edi
0x000053c6      e8b5c8ffff     call sym.imp.dcgettext
0x000053cb      4889de         mov rsi, rbx
0x000053ce      4889c7         mov rdi, rax
0x000053d1      e8bac9ffff     call sym.imp.fputs_unlocked
0x000053d6      488b1d0bbd20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x000053dd      488d35dc7000.  lea rsi, str.D____date_format_FORMAT______________________use_FORMAT_for_the_header_date_____e_CHAR_WIDTH______expand_tabs__CHAR_WIDTH________________________expand_input_CHARs__TABs__to_tab_WIDTH__8______F___f____form_feed______________________use_form_feeds_instead_of_newlines_to_separate_pages_______________________by_a_3_line_page_header_with__F_or_a_5_line_header______________________and_trailer_without__F ; 0xc4c0 ; "  -D, --date-format=FORMAT\n                    use FORMAT for the header date\n  -e[CHAR[WIDTH]], --expand-tabs[=CHAR[WIDTH]]\n                    expand input CHARs (TABs) to tab WIDTH (8)\n  -F, -f, --form-feed\n                    use form feeds instead of newlines to separate pages\n                    (by a 3-line page header with -F or a 5-line header\n                    and trailer without -F)\n"
0x000053e4      ba05000000     mov edx, 5
0x000053e9      31ff           xor edi, edi
0x000053eb      e890c8ffff     call sym.imp.dcgettext
0x000053f0      4889de         mov rsi, rbx
0x000053f3      4889c7         mov rdi, rax
0x000053f6      e895c9ffff     call sym.imp.fputs_unlocked
0x000053fb      488b1de6bc20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x00005402      488d35477200.  lea rsi, str.h____header_HEADER______________________use_a_centered_HEADER_instead_of_filename_in_page_header________________________h____prints_a_blank_line__don_t_use__h_______i_CHAR_WIDTH______output_tabs__CHAR_WIDTH________________________replace_spaces_with_CHARs__TABs__to_tab_WIDTH__8______J____join_lines__merge_full_lines__turns_off__W_line_truncation__no_column______________________alignment____sep_string__STRING__sets_separators ; 0xc650 ; "  -h, --header=HEADER\n                    use a centered HEADER instead of filename in page header,\n                    -h \"\" prints a blank line, don't use -h\"\"\n  -i[CHAR[WIDTH]], --output-tabs[=CHAR[WIDTH]]\n                    replace spaces with CHARs (TABs) to tab WIDTH (8)\n  -J, --join-lines  merge full lines, turns off -W line truncation, no column\n                    alignment, --sep-string[=STRING] sets separators\n"
0x00005409      ba05000000     mov edx, 5
0x0000540e      31ff           xor edi, edi
0x00005410      e86bc8ffff     call sym.imp.dcgettext
0x00005415      4889de         mov rsi, rbx
0x00005418      4889c7         mov rdi, rax
0x0000541b      e870c9ffff     call sym.imp.fputs_unlocked
0x00005420      488b1dc1bc20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x00005427      488d35d27300.  lea rsi, str.l____length_PAGE_LENGTH______________________set_the_page_length_to_PAGE_LENGTH__66__lines_______________________default_number_of_lines_of_text_56__and_with__F_63_.______________________implies__t_if_PAGE_LENGTH____10 ; 0xc800 ; "  -l, --length=PAGE_LENGTH\n                    set the page length to PAGE_LENGTH (66) lines\n                    (default number of lines of text 56, and with -F 63).\n                    implies -t if PAGE_LENGTH <= 10\n"
0x0000542e      ba05000000     mov edx, 5
0x00005433      31ff           xor edi, edi
0x00005435      e846c8ffff     call sym.imp.dcgettext
0x0000543a      4889de         mov rsi, rbx
0x0000543d      4889c7         mov rdi, rax
0x00005440      e84bc9ffff     call sym.imp.fputs_unlocked
0x00005445      488b1d9cbc20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x0000544c      488d358d7400.  lea rsi, str.m____merge_______print_all_files_in_parallel__one_in_each_column_______________________truncate_lines__but_join_lines_of_full_length_with__J ; 0xc8e0 ; "  -m, --merge       print all files in parallel, one in each column,\n                    truncate lines, but join lines of full length with -J\n"
0x00005453      ba05000000     mov edx, 5
0x00005458      31ff           xor edi, edi
0x0000545a      e821c8ffff     call sym.imp.dcgettext
0x0000545f      4889de         mov rsi, rbx
0x00005462      4889c7         mov rdi, rax
0x00005465      e826c9ffff     call sym.imp.fputs_unlocked
0x0000546a      488b1d77bc20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x00005471      488d35f87400.  lea rsi, str.n_SEP_DIGITS______number_lines__SEP_DIGITS________________________number_lines__use_DIGITS__5__digits__then_SEP__TAB________________________default_counting_starts_with_1st_line_of_input_file_____N____first_line_number_NUMBER______________________start_counting_with_NUMBER_at_1st_line_of_first______________________page_printed__see__FIRST_PAGE ; 0xc970 ; "  -n[SEP[DIGITS]], --number-lines[=SEP[DIGITS]]\n                    number lines, use DIGITS (5) digits, then SEP (TAB),\n                    default counting starts with 1st line of input file\n  -N, --first-line-number=NUMBER\n                    start counting with NUMBER at 1st line of first\n                    page printed (see +FIRST_PAGE)\n"
0x00005478      ba05000000     mov edx, 5
0x0000547d      31ff           xor edi, edi
0x0000547f      e8fcc7ffff     call sym.imp.dcgettext
0x00005484      4889de         mov rsi, rbx
0x00005487      4889c7         mov rdi, rax
0x0000548a      e801c9ffff     call sym.imp.fputs_unlocked
0x0000548f      488b1d52bc20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x00005496      488d35337600.  lea rsi, str.o____indent_MARGIN______________________offset_each_line_with_MARGIN__zero__spaces__do_not______________________affect__w_or__W__MARGIN_will_be_added_to_PAGE_WIDTH_____r____no_file_warnings______________________omit_warning_when_a_file_cannot_be_opened ; 0xcad0 ; "  -o, --indent=MARGIN\n                    offset each line with MARGIN (zero) spaces, do not\n                    affect -w or -W, MARGIN will be added to PAGE_WIDTH\n  -r, --no-file-warnings\n                    omit warning when a file cannot be opened\n"
0x0000549d      ba05000000     mov edx, 5
0x000054a2      31ff           xor edi, edi
0x000054a4      e8d7c7ffff     call sym.imp.dcgettext
0x000054a9      4889de         mov rsi, rbx
0x000054ac      4889c7         mov rdi, rax
0x000054af      e8dcc8ffff     call sym.imp.fputs_unlocked
0x000054b4      488b1d2dbc20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x000054bb      488d350e7700.  lea rsi, str.s_CHAR_____separator__CHAR_______________________separate_columns_by_a_single_character__default_for_CHAR______________________is_the__TAB__character_without__w_and__no_char__with__w._______________________s_CHAR__turns_off_line_truncation_of_all_3_column______________________options___COLUMN__a__COLUMN__m__except__w_is_set ; 0xcbd0 ; "  -s[CHAR], --separator[=CHAR]\n                    separate columns by a single character, default for CHAR\n                    is the <TAB> character without -w and 'no char' with -w.\n                    -s[CHAR] turns off line truncation of all 3 column\n                    options (-COLUMN|-a -COLUMN|-m) except -w is set\n"
0x000054c2      ba05000000     mov edx, 5
0x000054c7      31ff           xor edi, edi
0x000054c9      e8b2c7ffff     call sym.imp.dcgettext
0x000054ce      4889de         mov rsi, rbx
0x000054d1      4889c7         mov rdi, rax
0x000054d4      e8b7c8ffff     call sym.imp.fputs_unlocked
0x000054d9      488b1d08bc20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x000054e0      488d35317800.  lea rsi, str.S_STRING_____sep_string__STRING_______________________separate_columns_by_STRING_______________________without__S:_Default_separator__TAB__with__J_and__space_______________________otherwise__same_as__S______no_effect_on_column_options ; 0xcd18 ; "  -S[STRING], --sep-string[=STRING]\n                    separate columns by STRING,\n                    without -S: Default separator <TAB> with -J and <space>\n                    otherwise (same as -S\" \"), no effect on column options\n"
0x000054e7      ba05000000     mov edx, 5
0x000054ec      31ff           xor edi, edi
0x000054ee      e88dc7ffff     call sym.imp.dcgettext
0x000054f3      4889de         mov rsi, rbx
0x000054f6      4889c7         mov rdi, rax
0x000054f9      e892c8ffff     call sym.imp.fputs_unlocked
0x000054fe      488b1de3bb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x00005505      488d35fc7800.  lea rsi, str.t____omit_header__omit_page_headers_and_trailers________________________implied_if_PAGE_LENGTH____10 ; 0xce08 ; "  -t, --omit-header  omit page headers and trailers;\n                     implied if PAGE_LENGTH <= 10\n"
0x0000550c      ba05000000     mov edx, 5
0x00005511      31ff           xor edi, edi
0x00005513      e868c7ffff     call sym.imp.dcgettext
0x00005518      4889de         mov rsi, rbx
0x0000551b      4889c7         mov rdi, rax
0x0000551e      e86dc8ffff     call sym.imp.fputs_unlocked
0x00005523      488b1dbebb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x0000552a      488d353f7900.  lea rsi, str.T____omit_pagination______________________omit_page_headers_and_trailers__eliminate_any_pagination______________________by_form_feeds_set_in_input_files_____v____show_nonprinting______________________use_octal_backslash_notation_____w____width_PAGE_WIDTH______________________set_page_width_to_PAGE_WIDTH__72__characters_for______________________multiple_text_column_output_only___s_char__turns_off__72 ; 0xce70 ; "  -T, --omit-pagination\n                    omit page headers and trailers, eliminate any pagination\n                    by form feeds set in input files\n  -v, --show-nonprinting\n                    use octal backslash notation\n  -w, --width=PAGE_WIDTH\n                    set page width to PAGE_WIDTH (72) characters for\n                    multiple text-column output only, -s[char] turns off (72)\n"
0x00005531      ba05000000     mov edx, 5
0x00005536      31ff           xor edi, edi
0x00005538      e843c7ffff     call sym.imp.dcgettext
0x0000553d      4889de         mov rsi, rbx
0x00005540      4889c7         mov rdi, rax
0x00005543      e848c8ffff     call sym.imp.fputs_unlocked
0x00005548      488b1d99bb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x0000554f      488d35b27a00.  lea rsi, str.W____page_width_PAGE_WIDTH______________________set_page_width_to_PAGE_WIDTH__72__characters_always_______________________truncate_lines__except__J_option_is_set__no_interference______________________with__S_or__s ; 0xd008 ; "  -W, --page-width=PAGE_WIDTH\n                    set page width to PAGE_WIDTH (72) characters always,\n                    truncate lines, except -J option is set, no interference\n                    with -S or -s\n"
0x00005556      ba05000000     mov edx, 5
0x0000555b      31ff           xor edi, edi
0x0000555d      e81ec7ffff     call sym.imp.dcgettext
0x00005562      4889de         mov rsi, rbx
0x00005565      4889c7         mov rdi, rax
0x00005568      e823c8ffff     call sym.imp.fputs_unlocked
0x0000556d      488b1d74bb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x00005574      488d35657b00.  lea rsi, str.help_____display_this_help_and_exit ; 0xd0e0 ; "      --help     display this help and exit\n"
0x0000557b      ba05000000     mov edx, 5
0x00005580      31ff           xor edi, edi
0x00005582      e8f9c6ffff     call sym.imp.dcgettext
0x00005587      4889de         mov rsi, rbx
0x0000558a      4889c7         mov rdi, rax
0x0000558d      e8fec7ffff     call sym.imp.fputs_unlocked
0x00005592      488b1d4fbb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x00005599      488d35707b00.  lea rsi, str.version__output_version_information_and_exit ; 0xd110 ; "      --version  output version information and exit\n"
0x000055a0      ba05000000     mov edx, 5
0x000055a5      31ff           xor edi, edi
0x000055a7      e8d4c6ffff     call sym.imp.dcgettext
0x000055ac      4889de         mov rsi, rbx
0x000055af      4889c7         mov rdi, rax
0x000055b2      488d1d436900.  lea rbx, [0x0000befc]                   ; "pr"
0x000055b9      e8d2c7ffff     call sym.imp.fputs_unlocked
0x000055be      488d053a6900.  lea rax, [0x0000beff]                   ; "["
0x000055c5      488d0d746900.  lea rcx, str.sha256sum                  ; 0xbf40 ; "sha256sum"
0x000055cc      48c744246000.  mov qword [rsp + 0x60], 0
0x000055d5      48c744246800.  mov qword [rsp + 0x68], 0
0x000055de      4889e2         mov rdx, rsp
0x000055e1      48890424       mov qword [rsp], rax
0x000055e5      488d05156900.  lea rax, [0x0000bf01]                   ; "test invocation"
0x000055ec      48894c2430     mov qword [rsp + 0x30], rcx
0x000055f1      488d0d526900.  lea rcx, str.sha384sum                  ; 0xbf4a ; "sha384sum"
0x000055f8      4889442408     mov qword [rsp + 8], rax
0x000055fd      488d05756900.  lea rax, [0x0000bf79]                   ; "coreutils"
0x00005604      48894c2440     mov qword [rsp + 0x40], rcx
0x00005609      488d0d446900.  lea rcx, str.sha512sum                  ; 0xbf54 ; "sha512sum"
0x00005610      4889442410     mov qword [rsp + 0x10], rax
0x00005615      488d05f56800.  lea rax, [0x0000bf11]                   ; "Multi-call invocation"
0x0000561c      48894c2450     mov qword [rsp + 0x50], rcx
0x00005621      4889442418     mov qword [rsp + 0x18], rax
0x00005626      488d05fa6800.  lea rax, str.sha224sum                  ; 0xbf27 ; "sha224sum"
0x0000562d      4889442420     mov qword [rsp + 0x20], rax
0x00005632      488d05f86800.  lea rax, str.sha2_utilities             ; 0xbf31 ; "sha2 utilities"
0x00005639      4889442428     mov qword [rsp + 0x28], rax
0x0000563e      4889442438     mov qword [rsp + 0x38], rax
0x00005643      4889442448     mov qword [rsp + 0x48], rax
0x00005648      4889442458     mov qword [rsp + 0x58], rax
0x0000564d      0f1f00         nop dword [rax]
0x00005650      4883c210       add rdx, 0x10
0x00005654      488b3a         mov rdi, qword [rdx]
0x00005657      4885ff         test rdi, rdi
0x0000565a      7413           je 0x566f
0x0000565c      b903000000     mov ecx, 3
0x00005661      4889de         mov rsi, rbx
0x00005664      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005666      0f97c0         seta al
0x00005669      1c00           sbb al, 0
0x0000566b      84c0           test al, al
0x0000566d      75e1           jne 0x5650
0x0000566f      4c8b6208       mov r12, qword [rdx + 8]
0x00005673      31ff           xor edi, edi
0x00005675      ba05000000     mov edx, 5
0x0000567a      488d35dd6800.  lea rsi, str.s_online_help:___s         ; 0xbf5e ; "\n%s online help: <%s>\n"
0x00005681      4d85e4         test r12, r12
0x00005684      0f84c1000000   je 0x574b
0x0000568a      e8f1c5ffff     call sym.imp.dcgettext
0x0000568f      488d0db27a00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xd148 ; "https://www.gnu.org/software/coreutils/"
0x00005696      488d15d86800.  lea rdx, str.GNU_coreutils              ; 0xbf75 ; "GNU coreutils"
0x0000569d      4889c6         mov rsi, rax
0x000056a0      bf01000000     mov edi, 1
0x000056a5      31c0           xor eax, eax
0x000056a7      e804c8ffff     call sym.imp.__printf_chk
0x000056ac      31f6           xor esi, esi
0x000056ae      bf05000000     mov edi, 5
0x000056b3      e8e8c7ffff     call sym.imp.setlocale
0x000056b8      4885c0         test rax, rax
0x000056bb      741c           je 0x56d9
0x000056bd      488d35bf6800.  lea rsi, [0x0000bf83]                   ; "en_"
0x000056c4      ba03000000     mov edx, 3
0x000056c9      4889c7         mov rdi, rax
0x000056cc      e8efc4ffff     call sym.imp.strncmp
0x000056d1      85c0           test eax, eax
0x000056d3      0f8507010000   jne 0x57e0
0x000056d9      488d35a76800.  lea rsi, str.Full_documentation___s_s   ; 0xbf87 ; "Full documentation <%s%s>\n"
0x000056e0      31ff           xor edi, edi
0x000056e2      ba05000000     mov edx, 5
0x000056e7      e894c5ffff     call sym.imp.dcgettext
0x000056ec      488d0d096800.  lea rcx, [0x0000befc]                   ; "pr"
0x000056f3      488d154e7a00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xd148 ; "https://www.gnu.org/software/coreutils/"
0x000056fa      4889c6         mov rsi, rax
0x000056fd      bf01000000     mov edi, 1
0x00005702      31c0           xor eax, eax
0x00005704      e8a7c7ffff     call sym.imp.__printf_chk
0x00005709      4939dc         cmp r12, rbx
0x0000570c      488d0d086800.  lea rcx, [0x0000bf1b]                   ; " invocation"
0x00005713      488d1dcb6700.  lea rbx, [0x0000bee5]
0x0000571a      480f44d9       cmove rbx, rcx
0x0000571e      488d35937a00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0xd1b8 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00005725      31ff           xor edi, edi
0x00005727      ba05000000     mov edx, 5
0x0000572c      e84fc5ffff     call sym.imp.dcgettext
0x00005731      4889d9         mov rcx, rbx
0x00005734      4889c6         mov rsi, rax
0x00005737      4c89e2         mov rdx, r12
0x0000573a      bf01000000     mov edi, 1
0x0000573f      31c0           xor eax, eax
0x00005741      e86ac7ffff     call sym.imp.__printf_chk
0x00005746      e9abfbffff     jmp 0x52f6
0x0000574b      e830c5ffff     call sym.imp.dcgettext
0x00005750      488d0df17900.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xd148 ; "https://www.gnu.org/software/coreutils/"
0x00005757      488d15176800.  lea rdx, str.GNU_coreutils              ; 0xbf75 ; "GNU coreutils"
0x0000575e      4889c6         mov rsi, rax
0x00005761      bf01000000     mov edi, 1
0x00005766      31c0           xor eax, eax
0x00005768      e843c7ffff     call sym.imp.__printf_chk
0x0000576d      31f6           xor esi, esi
0x0000576f      bf05000000     mov edi, 5
0x00005774      e827c7ffff     call sym.imp.setlocale
0x00005779      4885c0         test rax, rax
0x0000577c      7418           je 0x5796
0x0000577e      488d35fe6700.  lea rsi, [0x0000bf83]                   ; "en_"
0x00005785      ba03000000     mov edx, 3
0x0000578a      4889c7         mov rdi, rax
0x0000578d      e82ec4ffff     call sym.imp.strncmp
0x00005792      85c0           test eax, eax
0x00005794      7543           jne 0x57d9
0x00005796      488d35ea6700.  lea rsi, str.Full_documentation___s_s   ; 0xbf87 ; "Full documentation <%s%s>\n"
0x0000579d      ba05000000     mov edx, 5
0x000057a2      31ff           xor edi, edi
0x000057a4      4c8d25516700.  lea r12, [0x0000befc]                   ; "pr"
0x000057ab      488d1d696700.  lea rbx, [0x0000bf1b]                   ; " invocation"
0x000057b2      e8c9c4ffff     call sym.imp.dcgettext
0x000057b7      488d0d3e6700.  lea rcx, [0x0000befc]                   ; "pr"
0x000057be      488d15837900.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xd148 ; "https://www.gnu.org/software/coreutils/"
0x000057c5      4889c6         mov rsi, rax
0x000057c8      bf01000000     mov edi, 1
0x000057cd      31c0           xor eax, eax
0x000057cf      e8dcc6ffff     call sym.imp.__printf_chk
0x000057d4      e945ffffff     jmp 0x571e
0x000057d9      4c8d251c6700.  lea r12, [0x0000befc]                   ; "pr"
0x000057e0      4c8b2d01b920.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x000057e7      488d35827900.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0xd170 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000057ee      31ff           xor edi, edi
0x000057f0      ba05000000     mov edx, 5
0x000057f5      e886c4ffff     call sym.imp.dcgettext
0x000057fa      4c89ee         mov rsi, r13
0x000057fd      4889c7         mov rdi, rax
0x00005800      e88bc5ffff     call sym.imp.fputs_unlocked
0x00005805      e9cffeffff     jmp 0x56d9
0x0000580a      660f1f440000   nop word [rax + rax]
;-- getoptarg:
0x00005810      4154           push r12
0x00005812      55             push rbp
0x00005813      4189f4         mov r12d, esi
0x00005816      53             push rbx
0x00005817      4889cd         mov rbp, rcx
0x0000581a      4889fb         mov rbx, rdi
0x0000581d      4883ec10       sub rsp, 0x10
0x00005821      0fbe37         movsx esi, byte [rdi]
0x00005824      64488b042528.  mov rax, qword fs:[0x28]
0x0000582d      4889442408     mov qword [rsp + 8], rax
0x00005832      31c0           xor eax, eax
0x00005834      89f0           mov eax, esi
0x00005836      83ee30         sub esi, 0x30
0x00005839      83fe09         cmp esi, 9
0x0000583c      760a           jbe 0x5848
0x0000583e      8802           mov byte [rdx], al
0x00005840      0fb64701       movzx eax, byte [rdi + 1]
0x00005844      4883c301       add rbx, 1
0x00005848      84c0           test al, al
0x0000584a      7524           jne 0x5870
0x0000584c      488b442408     mov rax, qword [rsp + 8]
0x00005851      644833042528.  xor rax, qword fs:[0x28]
0x0000585a      0f859a000000   jne 0x58fa
0x00005860      4883c410       add rsp, 0x10
0x00005864      5b             pop rbx
0x00005865      5d             pop rbp
0x00005866      415c           pop r12
0x00005868      c3             ret
0x00005869      0f1f80000000.  nop dword [rax]
0x00005870      4c8d056e6600.  lea r8, [0x0000bee5]
0x00005877      31f6           xor esi, esi
0x00005879      4889e1         mov rcx, rsp
0x0000587c      ba0a000000     mov edx, 0xa
0x00005881      4889df         mov rdi, rbx
0x00005884      e8274f0000     call sym.xstrtol
0x00005889      85c0           test eax, eax
0x0000588b      7516           jne 0x58a3
0x0000588d      488b0424       mov rax, qword [rsp]
0x00005891      488d50ff       lea rdx, [rax - 1]
0x00005895      4881fafeffff.  cmp rdx, 0x7ffffffe
0x0000589c      7705           ja 0x58a3
0x0000589e      894500         mov dword [rbp], eax
0x000058a1      eba9           jmp 0x584c
0x000058a3      4889df         mov rdi, rbx
0x000058a6      450fbee4       movsx r12d, r12b
0x000058aa      e8113e0000     call sym.quote
0x000058af      488d353a7900.  lea rsi, str.c__extra_characters_or_invalid_number_in_the_argument:__s ; 0xd1f0 ; "'-%c' extra characters or invalid number in the argument: %s"
0x000058b6      31ff           xor edi, edi
0x000058b8      ba05000000     mov edx, 5
0x000058bd      4889c5         mov rbp, rax
0x000058c0      e8bbc3ffff     call sym.imp.dcgettext
0x000058c5      48813c24ffff.  cmp qword [rsp], 0x7fffffff
0x000058cd      4889c3         mov rbx, rax
0x000058d0      be4b000000     mov esi, 0x4b                           ; 'K'
0x000058d5      7f07           jg 0x58de
0x000058d7      e8d4c2ffff     call sym.imp.__errno_location
0x000058dc      8b30           mov esi, dword [rax]
0x000058de      31ff           xor edi, edi
0x000058e0      4989e8         mov r8, rbp
0x000058e3      4489e1         mov ecx, r12d
0x000058e6      4889da         mov rdx, rbx
0x000058e9      31c0           xor eax, eax
0x000058eb      e8f0c5ffff     call sym.imp.error
0x000058f0      bf01000000     mov edi, 1
0x000058f5      e8a6f9ffff     call sym.usage
0x000058fa      e8b1c3ffff     call sym.imp.__stack_chk_fail
0x000058ff      90             nop
;-- close_stdout_set_file_name:
0x00005900      48893d31b920.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x211238:8]=0
0x00005907      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00005908      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00005910      40883d19b920.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x211230:1]=0
0x00005917      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00005918      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00005920      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00005921      53             push rbx
0x00005922      4883ec08       sub rsp, 8
0x00005926      488b3dbbb720.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x0000592d      e8be630000     call sym.close_stream
0x00005932      85c0           test eax, eax
0x00005934      7416           je 0x594c
0x00005936      e875c2ffff     call sym.imp.__errno_location
0x0000593b      803deeb82000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x211230:1]=0
0x00005942      4889c3         mov rbx, rax
0x00005945      741c           je 0x5963
0x00005947      833820         cmp dword [rax], 0x20
0x0000594a      7517           jne 0x5963
0x0000594c      488b3dcdb720.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211120:8]=0
0x00005953      e898630000     call sym.close_stream
0x00005958      85c0           test eax, eax
0x0000595a      7546           jne 0x59a2
0x0000595c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00005960      5b             pop rbx
0x00005961      5d             pop rbp
0x00005962      c3             ret
0x00005963      488d35d07e00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0xd83a ; "write error"
0x0000596a      31ff           xor edi, edi
0x0000596c      ba05000000     mov edx, 5
0x00005971      e80ac3ffff     call sym.imp.dcgettext
0x00005976      488b3dbbb820.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x211238:8]=0
0x0000597d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00005980      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00005983      7428           je 0x59ad
0x00005985      e8363b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000598a      8b33           mov esi, dword [rbx]
0x0000598c      488d15b37e00.  lea rdx, str.s:__s                      ; 0xd846 ; "%s: %s"
0x00005993      4889c1         mov rcx, rax
0x00005996      4989e8         mov r8, rbp
0x00005999      31ff           xor edi, edi
0x0000599b      31c0           xor eax, eax
0x0000599d      e83ec5ffff     call sym.imp.error
0x000059a2      8b3db8b62000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x211060:4]=1
0x000059a8      e833c2ffff     call sym.imp._exit
0x000059ad      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x000059af      488d15947e00.  lea rdx, [0x0000d84a]                   ; "%s"
0x000059b6      4889c1         mov rcx, rax
0x000059b9      31ff           xor edi, edi
0x000059bb      31c0           xor eax, eax
0x000059bd      e81ec5ffff     call sym.imp.error
0x000059c2      ebde           jmp 0x59a2
0x000059c4      662e0f1f8400.  nop word cs:[rax + rax]
0x000059ce      6690           nop
;-- fdadvise:
0x000059d0      e99bc3ffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x000059d5      90             nop
0x000059d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x000059e0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x000059e3      741b           je 0x5a00
0x000059e5      53             push rbx
0x000059e6      89f3           mov ebx, esi
0x000059e8      e803c4ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x000059ed      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x000059ef      31d2           xor edx, edx
0x000059f1      31f6           xor esi, esi
0x000059f3      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x000059f4      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x000059f6      e975c3ffff     jmp sym.imp.posix_fadvise
0x000059fb      0f1f440000     nop dword [rax + rax]
0x00005a00      f3c3           ret
0x00005a02      662e0f1f8400.  nop word cs:[rax + rax]
0x00005a0c      0f1f4000       nop dword [rax]
;-- fopen_safer:
0x00005a10      4154           push r12                                ; ../coreutils-8.31/lib/fopen-safer.c:32
0x00005a12      55             push rbp
0x00005a13      4889f5         mov rbp, rsi
0x00005a16      53             push rbx
0x00005a17      e8e4c4ffff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/fopen-safer.c:33
0x00005a1c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fopen-safer.c:35
0x00005a1f      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:33
0x00005a22      740d           je 0x5a31                               ; ../coreutils-8.31/lib/fopen-safer.c:35
0x00005a24      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:37
0x00005a27      e8c4c3ffff     call sym.imp.fileno
0x00005a2c      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/fopen-safer.c:39
0x00005a2f      760f           jbe 0x5a40
0x00005a31      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:63
0x00005a34      5b             pop rbx
0x00005a35      5d             pop rbp
0x00005a36      415c           pop r12
0x00005a38      c3             ret
0x00005a39      0f1f80000000.  nop dword [rax]
0x00005a40      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fopen-safer.c:41
0x00005a42      e8993c0000     call sym.dup_safer
0x00005a47      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:43
0x00005a49      4189c4         mov r12d, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:41
0x00005a4c      783a           js 0x5a88                               ; ../coreutils-8.31/lib/fopen-safer.c:43
0x00005a4e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:51
0x00005a51      e8ea580000     call sym.rpl_fclose
0x00005a56      85c0           test eax, eax
0x00005a58      7513           jne 0x5a6d
0x00005a5a      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fopen-safer.c:52
0x00005a5d      4489e7         mov edi, r12d
0x00005a60      e82bc4ffff     call sym.imp.fdopen
0x00005a65      4885c0         test rax, rax
0x00005a68      4889c3         mov rbx, rax
0x00005a6b      75c4           jne 0x5a31
0x00005a6d      e83ec1ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:54
0x00005a72      8b28           mov ebp, dword [rax]
0x00005a74      4889c3         mov rbx, rax
0x00005a77      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/fopen-safer.c:55
0x00005a7a      e8e1c2ffff     call sym.imp.close
0x00005a7f      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/fopen-safer.c:56
0x00005a81      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:57
0x00005a83      ebac           jmp 0x5a31
0x00005a85      0f1f00         nop dword [rax]
0x00005a88      e823c1ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:45
0x00005a8d      448b20         mov r12d, dword [rax]
0x00005a90      4889c5         mov rbp, rax
0x00005a93      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:46
0x00005a96      e8a5580000     call sym.rpl_fclose
0x00005a9b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00005a9d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fopen-safer.c:47
0x00005aa1      eb8e           jmp 0x5a31                              ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00005aa3      662e0f1f8400.  nop word cs:[rax + rax]
0x00005aad      0f1f00         nop dword [rax]
;-- gettime:
0x00005ab0      4889fe         mov rsi, rdi                            ; ../coreutils-8.31/lib/gettime.c:30
0x00005ab3      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/gettime.c:32
0x00005ab5      e966c1ffff     jmp sym.imp.clock_gettime
0x00005aba      660f1f440000   nop word [rax + rax]
;-- current_timespec:
0x00005ac0      4883ec28       sub rsp, 0x28                           ; ../coreutils-8.31/lib/gettime.c:45
0x00005ac4      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/gettime.c:32
0x00005ac6      4889e6         mov rsi, rsp
0x00005ac9      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/gettime.c:45
0x00005ad2      4889442418     mov qword [rsp + 0x18], rax
0x00005ad7      31c0           xor eax, eax
0x00005ad9      e842c1ffff     call sym.imp.clock_gettime              ; ../coreutils-8.31/lib/gettime.c:32
0x00005ade      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/gettime.c:49
0x00005ae3      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005aec      488b0424       mov rax, qword [rsp]
0x00005af0      488b542408     mov rdx, qword [rsp + 8]
0x00005af5      7505           jne 0x5afc
0x00005af7      4883c428       add rsp, 0x28
0x00005afb      c3             ret
0x00005afc      e8afc1ffff     call sym.imp.__stack_chk_fail
0x00005b01      662e0f1f8400.  nop word cs:[rax + rax]
0x00005b0b      0f1f440000     nop dword [rax + rax]
;-- hard_locale:
0x00005b10      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00005b14      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00005b16      e885c3ffff     call sym.imp.setlocale
0x00005b1b      4889c2         mov rdx, rax
0x00005b1e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00005b23      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00005b26      741d           je 0x5b45
0x00005b28      488d3d1e7d00.  lea rdi, [0x0000d84d]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00005b2f      b902000000     mov ecx, 2
0x00005b34      4889d6         mov rsi, rdx
0x00005b37      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005b39      0f97c1         seta cl
0x00005b3c      80d900         sbb cl, 0
0x00005b3f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00005b41      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00005b43      750b           jne 0x5b50
0x00005b45      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005b49      c3             ret
0x00005b4a      660f1f440000   nop word [rax + rax]
0x00005b50      488d3df87c00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0xd84f ; "POSIX"
0x00005b57      b906000000     mov ecx, 6
0x00005b5c      4889d6         mov rsi, rdx
0x00005b5f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005b61      0f97c0         seta al
0x00005b64      1c00           sbb al, 0
0x00005b66      84c0           test al, al
0x00005b68      0f95c0         setne al
0x00005b6b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005b6f      c3             ret
;-- imaxtostr:
0x00005b70      4885ff         test rdi, rdi
0x00005b73      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:38
0x00005b77      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x00005b7b      49b967666666.  movabs r9, 0x6666666666666667           ; ../coreutils-8.31/lib/anytostr.c:44 ; 'gfffffff'
0x00005b85      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x00005b8f      41b830000000   mov r8d, 0x30                           ; ../coreutils-8.31/lib/anytostr.c:44 ; '0'
0x00005b95      783c           js 0x5bd3                               ; ../coreutils-8.31/lib/anytostr.c:41
0x00005b97      660f1f840000.  nop word [rax + rax]
0x00005ba0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/anytostr.c:52
0x00005ba3      4883e901       sub rcx, 1
0x00005ba7      48f7e6         mul rsi
0x00005baa      48c1ea03       shr rdx, 3
0x00005bae      488d0492       lea rax, [rdx + rdx*4]
0x00005bb2      4801c0         add rax, rax
0x00005bb5      4829c7         sub rdi, rax
0x00005bb8      83c730         add edi, 0x30
0x00005bbb      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x00005bbe      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x00005bc1      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x00005bc4      75da           jne 0x5ba0
0x00005bc6      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x00005bc9      c3             ret
0x00005bca      660f1f440000   nop word [rax + rax]
0x00005bd0      4889f1         mov rcx, rsi
0x00005bd3      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/anytostr.c:44
0x00005bd6      488d71ff       lea rsi, [rcx - 1]
0x00005bda      49f7e9         imul r9
0x00005bdd      4889f8         mov rax, rdi
0x00005be0      48c1f83f       sar rax, 0x3f
0x00005be4      48c1fa02       sar rdx, 2
0x00005be8      4829c2         sub rdx, rax
0x00005beb      488d0492       lea rax, [rdx + rdx*4]
0x00005bef      418d0440       lea eax, [r8 + rax*2]
0x00005bf3      29f8           sub eax, edi
0x00005bf5      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:45
0x00005bf8      4889d7         mov rdi, rdx
0x00005bfb      8841ff         mov byte [rcx - 1], al                  ; ../coreutils-8.31/lib/anytostr.c:44
0x00005bfe      75d0           jne 0x5bd0                              ; ../coreutils-8.31/lib/anytostr.c:45
0x00005c00      4883e902       sub rcx, 2                              ; ../coreutils-8.31/lib/anytostr.c:47
0x00005c04      c646ff2d       mov byte [rsi - 1], 0x2d                ; '-'
                                                                       ; [0x2d:1]=0
0x00005c08      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x00005c0b      c3             ret
0x00005c0c      0f1f4000       nop dword [rax]
;-- mbsnwidth:
0x00005c10      4157           push r15                                ; ../coreutils-8.31/lib/mbswidth.c:58
0x00005c12      4156           push r14
0x00005c14      4155           push r13
0x00005c16      4154           push r12
0x00005c18      4c8d2c37       lea r13, [rdi + rsi]                    ; ../coreutils-8.31/lib/mbswidth.c:60
0x00005c1c      55             push rbp                                ; ../coreutils-8.31/lib/mbswidth.c:58
0x00005c1d      53             push rbx
0x00005c1e      4889fb         mov rbx, rdi
0x00005c21      4883ec38       sub rsp, 0x38
0x00005c25      64488b042528.  mov rax, qword fs:[0x28]
0x00005c2e      4889442428     mov qword [rsp + 0x28], rax
0x00005c33      31c0           xor eax, eax
0x00005c35      8954240c       mov dword [rsp + 0xc], edx
0x00005c39      e852c0ffff     call sym.imp.__ctype_get_mb_cur_max     ; ../coreutils-8.31/lib/mbswidth.c:64
0x00005c3e      4883f801       cmp rax, 1
0x00005c42      0f8630010000   jbe 0x5d78
0x00005c48      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/mbswidth.c:63
0x00005c4a      4c39eb         cmp rbx, r13                            ; ../coreutils-8.31/lib/mbswidth.c:66
0x00005c4d      0f83ea000000   jae 0x5d3d
0x00005c53      4c8d642420     lea r12, [rsp + 0x20]                   ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x00005c58      4c8d74241c     lea r14, [rsp + 0x1c]
0x00005c5d      eb1c           jmp 0x5c7b
0x00005c5f      90             nop
0x00005c60      3c25           cmp al, 0x25                            ; ../coreutils-8.31/lib/mbswidth.c:67
0x00005c62      7d07           jge 0x5c6b
0x00005c64      83e820         sub eax, 0x20                           ; "@"
0x00005c67      3c03           cmp al, 3
0x00005c69      7726           ja 0x5c91
0x00005c6b      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/mbswidth.c:111
0x00005c6f      83c501         add ebp, 1                              ; ../coreutils-8.31/lib/mbswidth.c:112
0x00005c72      4c39eb         cmp rbx, r13                            ; ../coreutils-8.31/lib/mbswidth.c:66
0x00005c75      0f83c2000000   jae 0x5d3d
0x00005c7b      0fb603         movzx eax, byte [rbx]                   ; ../coreutils-8.31/lib/mbswidth.c:67
0x00005c7e      3c3f           cmp al, 0x3f
0x00005c80      7ede           jle 0x5c60
0x00005c82      3c41           cmp al, 0x41
0x00005c84      7c0b           jl 0x5c91
0x00005c86      3c5f           cmp al, 0x5f
0x00005c88      7ee1           jle 0x5c6b
0x00005c8a      83e861         sub eax, 0x61
0x00005c8d      3c1d           cmp al, 0x1d
0x00005c8f      76da           jbe 0x5c6b
0x00005c91      49c704240000.  mov qword [r12], 0                      ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x00005c99      eb25           jmp 0x5cc0
0x00005c9b      0f1f440000     nop dword [rax + rax]
0x00005ca0      b9ffffff7f     mov ecx, 0x7fffffff
0x00005ca5      29e9           sub ecx, ebp
0x00005ca7      39c1           cmp ecx, eax
0x00005ca9      0f8c11010000   jl 0x5dc0
0x00005caf      01c5           add ebp, eax
0x00005cb1      4c89e7         mov rdi, r12
0x00005cb4      4c01fb         add rbx, r15
0x00005cb7      e8a4c2ffff     call sym.imp.mbsinit
0x00005cbc      85c0           test eax, eax
0x00005cbe      75b2           jne 0x5c72                              ; ../coreutils-8.31/lib/mbswidth.c:-26
0x00005cc0      4c89ea         mov rdx, r13
0x00005cc3      4c89e1         mov rcx, r12                            ; ../coreutils-8.31/lib/mbswidth.c:-11
0x00005cc6      4889de         mov rsi, rbx
0x00005cc9      4829da         sub rdx, rbx                            ; ../coreutils-8.31/lib/mbswidth.c:6
0x00005ccc      4c89f7         mov rdi, r14
0x00005ccf      e80c5a0000     call sym.rpl_mbrtowc
0x00005cd4      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005cd8      4989c7         mov r15, rax
0x00005cdb      744b           je 0x5d28
0x00005cdd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00005ce1      747d           je 0x5d60
0x00005ce3      8b7c241c       mov edi, dword [rsp + 0x1c]
0x00005ce7      4885c0         test rax, rax
0x00005cea      b801000000     mov eax, 1
0x00005cef      4c0f44f8       cmove r15, rax
0x00005cf3      e808c1ffff     call sym.imp.wcwidth
0x00005cf8      85c0           test eax, eax
0x00005cfa      79a4           jns 0x5ca0
0x00005cfc      f644240c02     test byte [rsp + 0xc], 2
0x00005d01      7535           jne 0x5d38
0x00005d03      8b7c241c       mov edi, dword [rsp + 0x1c]
0x00005d07      e8f4beffff     call sym.imp.iswcntrl
0x00005d0c      85c0           test eax, eax
0x00005d0e      75a1           jne 0x5cb1                              ; ../coreutils-8.31/lib/mbswidth.c:-21
0x00005d10      81fdffffff7f   cmp ebp, 0x7fffffff
0x00005d16      0f84a4000000   je 0x5dc0
0x00005d1c      83c501         add ebp, 1                              ; ../coreutils-8.31/lib/mbswidth.c:-67
0x00005d1f      eb90           jmp 0x5cb1                              ; ../coreutils-8.31/lib/mbswidth.c:-175
0x00005d21      0f1f80000000.  nop dword [rax]
0x00005d28      f644240c01     test byte [rsp + 0xc], 1
0x00005d2d      0f8438ffffff   je 0x5c6b
0x00005d33      0f1f440000     nop dword [rax + rax]
0x00005d38      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x00005d3d      488b742428     mov rsi, qword [rsp + 0x28]
0x00005d42      644833342528.  xor rsi, qword fs:[0x28]
0x00005d4b      89e8           mov eax, ebp
0x00005d4d      757b           jne 0x5dca
0x00005d4f      4883c438       add rsp, 0x38
0x00005d53      5b             pop rbx
0x00005d54      5d             pop rbp
0x00005d55      415c           pop r12
0x00005d57      415d           pop r13
0x00005d59      415e           pop r14
0x00005d5b      415f           pop r15
0x00005d5d      c3             ret
0x00005d5e      6690           nop
0x00005d60      f644240c01     test byte [rsp + 0xc], 1
0x00005d65      75d1           jne 0x5d38
0x00005d67      83c501         add ebp, 1
0x00005d6a      4c89eb         mov rbx, r13
0x00005d6d      e900ffffff     jmp 0x5c72
0x00005d72      660f1f440000   nop word [rax + rax]
0x00005d78      31ed           xor ebp, ebp
0x00005d7a      4c39eb         cmp rbx, r13
0x00005d7d      73be           jae 0x5d3d
0x00005d7f      e80cc2ffff     call sym.imp.__ctype_b_loc
0x00005d84      8b54240c       mov edx, dword [rsp + 0xc]
0x00005d88      488b08         mov rcx, qword [rax]
0x00005d8b      31ed           xor ebp, ebp
0x00005d8d      83e202         and edx, 2
0x00005d90      4883c301       add rbx, 1
0x00005d94      0fb643ff       movzx eax, byte [rbx - 1]
0x00005d98      0fb70441       movzx eax, word [rcx + rax*2]
0x00005d9c      f6c440         test ah, 0x40                           ; segment.PHDR
0x00005d9f      7508           jne 0x5da9
0x00005da1      85d2           test edx, edx
0x00005da3      7593           jne 0x5d38
0x00005da5      a802           test al, 2
0x00005da7      750b           jne 0x5db4
0x00005da9      81fdffffff7f   cmp ebp, 0x7fffffff
0x00005daf      748c           je 0x5d3d
0x00005db1      83c501         add ebp, 1
0x00005db4      4939dd         cmp r13, rbx
0x00005db7      75d7           jne 0x5d90
0x00005db9      eb82           jmp 0x5d3d
0x00005dbb      0f1f440000     nop dword [rax + rax]
0x00005dc0      bdffffff7f     mov ebp, 0x7fffffff
0x00005dc5      e973ffffff     jmp 0x5d3d
0x00005dca      e8e1beffff     call sym.imp.__stack_chk_fail
0x00005dcf      90             nop
;-- gnu_mbswidth:
0x00005dd0      55             push rbp
0x00005dd1      53             push rbx
0x00005dd2      89f5           mov ebp, esi
0x00005dd4      4889fb         mov rbx, rdi
0x00005dd7      4883ec08       sub rsp, 8
0x00005ddb      e8c0beffff     call sym.imp.strlen
0x00005de0      4883c408       add rsp, 8
0x00005de4      89ea           mov edx, ebp
0x00005de6      4889df         mov rdi, rbx
0x00005de9      5b             pop rbx
0x00005dea      5d             pop rbp
0x00005deb      4889c6         mov rsi, rax
0x00005dee      e91dfeffff     jmp sym.mbsnwidth
0x00005df3      662e0f1f8400.  nop word cs:[rax + rax]
0x00005dfd      0f1f00         nop dword [rax]
;-- memcpy_lowcase:
0x00005e00      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/nstrftime.c:321
0x00005e03      4154           push r12
0x00005e05      55             push rbp
0x00005e06      4889fd         mov rbp, rdi
0x00005e09      53             push rbx
0x00005e0a      742d           je 0x5e39                               ; ../coreutils-8.31/lib/nstrftime.c:322
0x00005e0c      4989f4         mov r12, rsi
0x00005e0f      488d5aff       lea rbx, [rdx - 1]
0x00005e13      e868c1ffff     call sym.imp.__ctype_tolower_loc        ; ../coreutils-8.31/lib/nstrftime.c:323
0x00005e18      0f1f84000000.  nop dword [rax + rax]
0x00005e20      410fb60c1c     movzx ecx, byte [r12 + rbx]
0x00005e25      488b10         mov rdx, qword [rax]
0x00005e28      8b148a         mov edx, dword [rdx + rcx*4]
0x00005e2b      88541d00       mov byte [rbp + rbx], dl
0x00005e2f      4883eb01       sub rbx, 1                              ; ../coreutils-8.31/lib/nstrftime.c:322
0x00005e33      4883fbff       cmp rbx, 0xffffffffffffffff
0x00005e37      75e7           jne 0x5e20
0x00005e39      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/nstrftime.c:325
0x00005e3c      5b             pop rbx
0x00005e3d      5d             pop rbp
0x00005e3e      415c           pop r12
0x00005e40      c3             ret
0x00005e41      0f1f440000     nop dword [rax + rax]
0x00005e46      662e0f1f8400.  nop word cs:[rax + rax]
;-- memcpy_uppcase:
0x00005e50      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/nstrftime.c:332
0x00005e53      4154           push r12
0x00005e55      55             push rbp
0x00005e56      4889fd         mov rbp, rdi
0x00005e59      53             push rbx
0x00005e5a      742d           je 0x5e89                               ; ../coreutils-8.31/lib/nstrftime.c:333
0x00005e5c      4989f4         mov r12, rsi
0x00005e5f      488d5aff       lea rbx, [rdx - 1]
0x00005e63      e8f8bcffff     call sym.imp.__ctype_toupper_loc        ; ../coreutils-8.31/lib/nstrftime.c:334
0x00005e68      0f1f84000000.  nop dword [rax + rax]
0x00005e70      410fb60c1c     movzx ecx, byte [r12 + rbx]
0x00005e75      488b10         mov rdx, qword [rax]
0x00005e78      8b148a         mov edx, dword [rdx + rcx*4]
0x00005e7b      88541d00       mov byte [rbp + rbx], dl
0x00005e7f      4883eb01       sub rbx, 1                              ; ../coreutils-8.31/lib/nstrftime.c:333
0x00005e83      4883fbff       cmp rbx, 0xffffffffffffffff
0x00005e87      75e7           jne 0x5e70
0x00005e89      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/nstrftime.c:336
0x00005e8c      5b             pop rbx
0x00005e8d      5d             pop rbp                                 ; ../coreutils-8.31/lib/nstrftime.c:204
0x00005e8e      415c           pop r12
0x00005e90      c3             ret
0x00005e91      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/nstrftime.c:196
0x00005e96      662e0f1f8400.  nop word cs:[rax + rax]
;-- __strftime_internal:
0x00005ea0      4157           push r15
0x00005ea2      4156           push r14
0x00005ea4      4989d3         mov r11, rdx
0x00005ea7      4155           push r13
0x00005ea9      4154           push r12
0x00005eab      4989cd         mov r13, rcx
0x00005eae      55             push rbp                                ; ../coreutils-8.31/lib/nstrftime.c:173
0x00005eaf      53             push rbx
0x00005eb0      4889fd         mov rbp, rdi
0x00005eb3      4881ecc80400.  sub rsp, 0x4c8
0x00005eba      488b7930       mov rdi, qword [rcx + 0x30]
0x00005ebe      448b7908       mov r15d, dword [rcx + 8]
0x00005ec2      488b84240805.  mov rax, qword [rsp + 0x508]
0x00005eca      4889742408     mov qword [rsp + 8], rsi
0x00005ecf      44894c242c     mov dword [rsp + 0x2c], r9d
0x00005ed4      4c6394240005.  movsxd r10, dword [rsp + 0x500]
0x00005edc      448844242b     mov byte [rsp + 0x2b], r8b
0x00005ee1      4889442418     mov qword [rsp + 0x18], rax
0x00005ee6      488b84241005.  mov rax, qword [rsp + 0x510]
0x00005eee      4889442410     mov qword [rsp + 0x10], rax
0x00005ef3      64488b042528.  mov rax, qword fs:[0x28]
0x00005efc      48898424b804.  mov qword [rsp + 0x4b8], rax
0x00005f04      31c0           xor eax, eax
0x00005f06      488d05d85f00.  lea rax, [0x0000bee5]
0x00005f0d      4885ff         test rdi, rdi
0x00005f10      480f45c7       cmovne rax, rdi
0x00005f14      4183ff0c       cmp r15d, 0xc
0x00005f18      4889442420     mov qword [rsp + 0x20], rax
0x00005f1d      0f8eed000000   jle 0x6010
0x00005f23      4183ef0c       sub r15d, 0xc
0x00005f27      410fb603       movzx eax, byte [r11]
0x00005f2b      4531f6         xor r14d, r14d                          ; ../coreutils-8.31/lib/nstrftime.c:285
0x00005f2e      84c0           test al, al
0x00005f30      0f84b6000000   je 0x5fec
0x00005f36      44897c2468     mov dword [rsp + 0x68], r15d
0x00005f3b      4c89db         mov rbx, r11
0x00005f3e      3c25           cmp al, 0x25
0x00005f40      0f84e2000000   je 0x6028
0x00005f46      4585d2         test r10d, r10d
0x00005f49      41bc00000000   mov r12d, 0
0x00005f4f      b801000000     mov eax, 1
0x00005f54      4d0f49e2       cmovns r12, r10
0x00005f58      4d85e4         test r12, r12
0x00005f5b      4c0f44e0       cmove r12, rax
0x00005f5f      488b442408     mov rax, qword [rsp + 8]
0x00005f64      4c29f0         sub rax, r14
0x00005f67      4c39e0         cmp rax, r12
0x00005f6a      7734           ja 0x5fa0
0x00005f6c      4531f6         xor r14d, r14d
0x00005f6f      488b9c24b804.  mov rbx, qword [rsp + 0x4b8]
0x00005f77      6448331c2528.  xor rbx, qword fs:[0x28]                ; ../coreutils-8.31/lib/nstrftime.c:1146
0x00005f80      4c89f0         mov rax, r14
0x00005f83      0f85ac190000   jne 0x7935
0x00005f89      4881c4c80400.  add rsp, 0x4c8
0x00005f90      5b             pop rbx
0x00005f91      5d             pop rbp
0x00005f92      415c           pop r12
0x00005f94      415d           pop r13
0x00005f96      415e           pop r14
0x00005f98      415f           pop r15
0x00005f9a      c3             ret
0x00005f9b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/nstrftime.c:176
0x00005fa0      4885ed         test rbp, rbp
0x00005fa3      7427           je 0x5fcc
0x00005fa5      4183fa01       cmp r10d, 1
0x00005fa9      7e17           jle 0x5fc2
0x00005fab      4d8d7aff       lea r15, [r10 - 1]
0x00005faf      4889ef         mov rdi, rbp
0x00005fb2      be20000000     mov esi, 0x20                           ; "@"
0x00005fb7      4c89fa         mov rdx, r15
0x00005fba      4c01fd         add rbp, r15
0x00005fbd      e88ebdffff     call sym.imp.memset
0x00005fc2      0fb603         movzx eax, byte [rbx]
0x00005fc5      4883c501       add rbp, 1
0x00005fc9      8845ff         mov byte [rbp - 1], al
0x00005fcc      4d01e6         add r14, r12                            ; /usr/include/x86_64-linux-gnu/bits/string_fortified.h:166
0x00005fcf      4989dc         mov r12, rbx
0x00005fd2      410fb6442401   movzx eax, byte [r12 + 1]
0x00005fd8      498d5c2401     lea rbx, [r12 + 1]
0x00005fdd      49c7c2ffffff.  mov r10, 0xffffffffffffffff
0x00005fe4      84c0           test al, al
0x00005fe6      0f8552ffffff   jne 0x5f3e
0x00005fec      4885ed         test rbp, rbp
0x00005fef      0f847affffff   je 0x5f6f
0x00005ff5      48837c240800   cmp qword [rsp + 8], 0
0x00005ffb      0f846effffff   je 0x5f6f
0x00006001      c6450000       mov byte [rbp], 0
0x00006005      e965ffffff     jmp 0x5f6f
0x0000600a      660f1f440000   nop word [rax + rax]
0x00006010      4585ff         test r15d, r15d                         ; ../coreutils-8.31/lib/nstrftime.c:166
0x00006013      b80c000000     mov eax, 0xc                            ; string_fortified.h:-1286
0x00006018      440f44f8       cmove r15d, eax                         ; ../coreutils-8.31/lib/nstrftime.c:166
0x0000601c      e906ffffff     jmp 0x5f27
0x00006021      0f1f80000000.  nop dword [rax]
0x00006028      0fb644242b     movzx eax, byte [rsp + 0x2b]
0x0000602d      4531c0         xor r8d, r8d
0x00006030      4531ff         xor r15d, r15d
0x00006033      ba01000000     mov edx, 1
0x00006038      88442430       mov byte [rsp + 0x30], al
0x0000603c      4883c301       add rbx, 1
0x00006040      0fbe03         movsx eax, byte [rbx]
0x00006043      8d48dd         lea ecx, [rax - 0x23]
0x00006046      89c6           mov esi, eax
0x00006048      4189c1         mov r9d, eax
0x0000604b      80f93c         cmp cl, 0x3c
0x0000604e      772c           ja 0x607c
0x00006050      4889d7         mov rdi, rdx
0x00006053      49bb00250000.  movabs r11, 0x1000000000002500
0x0000605d      48d3e7         shl rdi, cl
0x00006060      4c85df         test rdi, r11
0x00006063      756b           jne 0x60d0
0x00006065      84c9           test cl, cl
0x00006067      7477           je 0x60e0
0x00006069      48b900000000.  movabs rcx, 0x800000000000000           ; 576460752303423488
0x00006073      4885cf         test rdi, rcx
0x00006076      0f8554010000   jne 0x61d0
0x0000607c      8d50d0         lea edx, [rax - 0x30]
0x0000607f      83fa09         cmp edx, 9
0x00006082      0f8658010000   jbe 0x61e0
0x00006088      4080fe45       cmp sil, 0x45
0x0000608c      742a           je 0x60b8
0x0000608e      4531db         xor r11d, r11d                          ; ../coreutils-8.31/lib/nstrftime.c:-649
0x00006091      4080fe4f       cmp sil, 0x4f
0x00006095      7421           je 0x60b8
0x00006097      4080fe7a       cmp sil, 0x7a
0x0000609b      7753           ja 0x60f0
0x0000609d      488d15cc7700.  lea rdx, [0x0000d870]
0x000060a4      400fb6c6       movzx eax, sil
0x000060a8      48630482       movsxd rax, dword [rdx + rax*4]
0x000060ac      4801d0         add rax, rdx
0x000060af      ffe0           jmp rax
0x000060b1      0f1f80000000.  nop dword [rax]
0x000060b8      440fbe4b01     movsx r9d, byte [rbx + 1]               ; ../coreutils-8.31/lib/nstrftime.c:-639
0x000060bd      4189c3         mov r11d, eax
0x000060c0      4883c301       add rbx, 1
0x000060c4      4489ce         mov esi, r9d
0x000060c7      ebce           jmp 0x6097
0x000060c9      0f1f80000000.  nop dword [rax]
0x000060d0      4189c7         mov r15d, eax
0x000060d3      e964ffffff     jmp 0x603c
0x000060d8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/nstrftime.c:-647
0x000060e0      41b801000000   mov r8d, 1
0x000060e6      e951ffffff     jmp 0x603c
0x000060eb      4c89cb         mov rbx, r9
0x000060ee      6690           nop
0x000060f0      488d43ff       lea rax, [rbx - 1]
0x000060f4      41b801000000   mov r8d, 1                              ; ../coreutils-8.31/lib/nstrftime.c:-515
0x000060fa      4989c1         mov r9, rax
0x000060fd      488d40ff       lea rax, [rax - 1]
0x00006101      4183c001       add r8d, 1
0x00006105      80780125       cmp byte [rax + 1], 0x25
0x00006109      75ef           jne 0x60fa
0x0000610b      488b542408     mov rdx, qword [rsp + 8]
0x00006110      b800000000     mov eax, 0
0x00006115      4d63c0         movsxd r8, r8d
0x00006118      4c89c1         mov rcx, r8
0x0000611b      4989dc         mov r12, rbx
0x0000611e      4c29f2         sub rdx, r14
0x00006121      4585d2         test r10d, r10d
0x00006124      410f49c2       cmovns eax, r10d                        ; ../coreutils-8.31/lib/nstrftime.c:-450
0x00006128      4898           cdqe
0x0000612a      4c39c0         cmp rax, r8
0x0000612d      480f43c8       cmovae rcx, rax
0x00006131      4839d1         cmp rcx, rdx
0x00006134      0f8332feffff   jae 0x5f6c
0x0000613a      4885ed         test rbp, rbp
0x0000613d      0f8482000000   je 0x61c5
0x00006143      4c39c0         cmp rax, r8
0x00006146      764d           jbe 0x6195
0x00006148      4963d2         movsxd rdx, r10d
0x0000614b      4c89442448     mov qword [rsp + 0x48], r8
0x00006150      48894c2440     mov qword [rsp + 0x40], rcx
0x00006155      4c29c2         sub rdx, r8
0x00006158      4183ff30       cmp r15d, 0x30                          ; ../coreutils-8.31/lib/nstrftime.c:-446
0x0000615c      4c894c2438     mov qword [rsp + 0x38], r9
0x00006161      488d5c1500     lea rbx, [rbp + rdx]
0x00006166      0f846a120000   je 0x73d6
0x0000616c      4183ff2b       cmp r15d, 0x2b
0x00006170      0f8460120000   je 0x73d6
0x00006176      4889ef         mov rdi, rbp
0x00006179      be20000000     mov esi, 0x20                           ; "@"
0x0000617e      4889dd         mov rbp, rbx
0x00006181      e8cabbffff     call sym.imp.memset
0x00006186      4c8b442448     mov r8, qword [rsp + 0x48]
0x0000618b      488b4c2440     mov rcx, qword [rsp + 0x40]
0x00006190      4c8b4c2438     mov r9, qword [rsp + 0x38]
0x00006195      807c243000     cmp byte [rsp + 0x30], 0
0x0000619a      48894c2438     mov qword [rsp + 0x38], rcx
0x0000619f      4c89c2         mov rdx, r8
0x000061a2      4c89442430     mov qword [rsp + 0x30], r8
0x000061a7      4c89ce         mov rsi, r9
0x000061aa      4889ef         mov rdi, rbp
0x000061ad      0f84cd110000   je 0x7380
0x000061b3      e898fcffff     call sym.memcpy_uppcase
0x000061b8      4c8b442430     mov r8, qword [rsp + 0x30]
0x000061bd      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000061c2      4c01c5         add rbp, r8
0x000061c5      4901ce         add r14, rcx
0x000061c8      e905feffff     jmp 0x5fd2
0x000061cd      0f1f00         nop dword [rax]
0x000061d0      c644243001     mov byte [rsp + 0x30], 1
0x000061d5      e962feffff     jmp 0x603c
0x000061da      660f1f440000   nop word [rax + rax]
0x000061e0      4531d2         xor r10d, r10d
0x000061e3      0fbe4301       movsx eax, byte [rbx + 1]
0x000061e7      4181facccccc.  cmp r10d, 0xccccccc
0x000061ee      488d4b01       lea rcx, [rbx + 1]
0x000061f2      89c6           mov esi, eax
0x000061f4      8d50d0         lea edx, [rax - 0x30]
0x000061f7      7f2d           jg 0x6226
0x000061f9      0fbe3b         movsx edi, byte [rbx]
0x000061fc      7422           je 0x6220
0x000061fe      478d0c92       lea r9d, [r10 + r10*4]
0x00006202      4889cb         mov rbx, rcx
0x00006205      468d544fd0     lea r10d, [rdi + r9*2 - 0x30]
0x0000620a      83fa09         cmp edx, 9
0x0000620d      76d4           jbe 0x61e3
0x0000620f      4189c1         mov r9d, eax
0x00006212      e971feffff     jmp 0x6088
0x00006217      660f1f840000.  nop word [rax + rax]
0x00006220      4080ff37       cmp dil, 0x37
0x00006224      7ed8           jle 0x61fe
0x00006226      83fa09         cmp edx, 9
0x00006229      7715           ja 0x6240
0x0000622b      0fbe4302       movsx eax, byte [rbx + 2]
0x0000622f      41baffffff7f   mov r10d, 0x7fffffff
0x00006235      4883c302       add rbx, 2
0x00006239      89c6           mov esi, eax
0x0000623b      8d50d0         lea edx, [rax - 0x30]
0x0000623e      ebca           jmp 0x620a
0x00006240      4189c1         mov r9d, eax
0x00006243      4889cb         mov rbx, rcx
0x00006246      41baffffff7f   mov r10d, 0x7fffffff
0x0000624c      e937feffff     jmp 0x6088                              ; ../coreutils-8.31/lib/nstrftime.c:-584
0x00006251      0f1f80000000.  nop dword [rax]
0x00006258      4183fb4f       cmp r11d, 0x4f
0x0000625c      0f848efeffff   je 0x60f0
0x00006262      4531c0         xor r8d, r8d                            ; ../coreutils-8.31/lib/nstrftime.c:-294
0x00006265      b820250000     mov eax, 0x2520                         ; ' %' ; "H\x8d\r\x15\xeb "
0x0000626a      4585db         test r11d, r11d
0x0000626d      66898424ab00.  mov word [rsp + 0xab], ax
0x00006275      0f85d0160000   jne 0x794b
0x0000627b      488d9424ab00.  lea rdx, [rsp + 0xab]
0x00006283      4989dc         mov r12, rbx
0x00006286      488d4202       lea rax, [rdx + 2]
0x0000628a      4c8d8c24b000.  lea r9, [rsp + 0xb0]
0x00006292      408830         mov byte [rax], sil
0x00006295      c6400100       mov byte [rax + 1], 0
0x00006299      4c89e9         mov rcx, r13
0x0000629c      be00040000     mov esi, 0x400
0x000062a1      4489542438     mov dword [rsp + 0x38], r10d
0x000062a6      4c89cf         mov rdi, r9
0x000062a9      4488442450     mov byte [rsp + 0x50], r8b
0x000062ae      44895c2448     mov dword [rsp + 0x48], r11d
0x000062b3      4c894c2440     mov qword [rsp + 0x40], r9
0x000062b8      e813bcffff     call sym.imp.strftime                   ; ../coreutils-8.31/lib/nstrftime.c:-613
0x000062bd      4885c0         test rax, rax
0x000062c0      0f840cfdffff   je 0x5fd2
0x000062c6      4c63542438     movsxd r10, dword [rsp + 0x38]
0x000062cb      488d48ff       lea rcx, [rax - 1]
0x000062cf      488b542408     mov rdx, qword [rsp + 8]
0x000062d4      b800000000     mov eax, 0
0x000062d9      4585d2         test r10d, r10d
0x000062dc      490f49c2       cmovns rax, r10
0x000062e0      4839c1         cmp rcx, rax
0x000062e3      4889c3         mov rbx, rax
0x000062e6      480f43d9       cmovae rbx, rcx
0x000062ea      4c29f2         sub rdx, r14
0x000062ed      4839da         cmp rdx, rbx
0x000062f0      0f8676fcffff   jbe 0x5f6c
0x000062f6      4885ed         test rbp, rbp
0x000062f9      0f849f000000   je 0x639e
0x000062ff      448b5c2448     mov r11d, dword [rsp + 0x48]
0x00006304      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00006309      440fb6442450   movzx r8d, byte [rsp + 0x50]
0x0000630f      4585db         test r11d, r11d
0x00006312      755a           jne 0x636e
0x00006314      4839c1         cmp rcx, rax
0x00006317      7355           jae 0x636e
0x00006319      4963d2         movsxd rdx, r10d
0x0000631c      4c894c2450     mov qword [rsp + 0x50], r9
0x00006321      48894c2448     mov qword [rsp + 0x48], rcx
0x00006326      4829ca         sub rdx, rcx
0x00006329      4183ff30       cmp r15d, 0x30
0x0000632d      4488442440     mov byte [rsp + 0x40], r8b
0x00006332      488d441500     lea rax, [rbp + rdx]
0x00006337      4889442438     mov qword [rsp + 0x38], rax
0x0000633c      0f846d100000   je 0x73af
0x00006342      4183ff2b       cmp r15d, 0x2b
0x00006346      0f8463100000   je 0x73af
0x0000634c      4889ef         mov rdi, rbp
0x0000634f      be20000000     mov esi, 0x20                           ; "@"
0x00006354      e8f7b9ffff     call sym.imp.memset                     ; ../coreutils-8.31/lib/nstrftime.c:-93
0x00006359      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x0000635f      488b6c2438     mov rbp, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/nstrftime.c:-332
0x00006364      4c8b4c2450     mov r9, qword [rsp + 0x50]              ; ../coreutils-8.31/lib/nstrftime.c:-326
0x00006369      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0000636e      4584c0         test r8b, r8b
0x00006371      498d7101       lea rsi, [r9 + 1]
0x00006375      4889ca         mov rdx, rcx
0x00006378      0f851a100000   jne 0x7398
0x0000637e      807c243000     cmp byte [rsp + 0x30], 0
0x00006383      4889ef         mov rdi, rbp
0x00006386      48894c2430     mov qword [rsp + 0x30], rcx
0x0000638b      0f8470080000   je 0x6c01
0x00006391      e8bafaffff     call sym.memcpy_uppcase
0x00006396      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0000639b      4801cd         add rbp, rcx
0x0000639e      4901de         add r14, rbx
0x000063a1      e92cfcffff     jmp 0x5fd2
0x000063a6      4585db         test r11d, r11d
0x000063a9      0f8541fdffff   jne 0x60f0
0x000063af      0fb6442430     movzx eax, byte [rsp + 0x30]
0x000063b4      4584c0         test r8b, r8b
0x000063b7      488d9424ab00.  lea rdx, [rsp + 0xab]
0x000063bf      4989dc         mov r12, rbx
0x000063c2      410f45c0       cmovne eax, r8d
0x000063c6      4531c0         xor r8d, r8d
0x000063c9      4531db         xor r11d, r11d
0x000063cc      88442430       mov byte [rsp + 0x30], al               ; ../coreutils-8.31/lib/nstrftime.c:-643
0x000063d0      b820250000     mov eax, 0x2520                         ; ' %' ; "H\x8d\r\x15\xeb "
0x000063d5      66898424ab00.  mov word [rsp + 0xab], ax               ; ../coreutils-8.31/lib/nstrftime.c:-647
0x000063dd      488d4202       lea rax, [rdx + 2]
0x000063e1      e9a4feffff     jmp 0x628a
0x000063e6      4183fb45       cmp r11d, 0x45
0x000063ea      0f8400fdffff   je 0x60f0
0x000063f0      418b4d00       mov ecx, dword [r13]
0x000063f4      bf02000000     mov edi, 2
0x000063f9      0f1f80000000.  nop dword [rax]
0x00006400      89c8           mov eax, ecx
0x00006402      31f6           xor esi, esi
0x00006404      c644244000     mov byte [rsp + 0x40], 0                ; ../coreutils-8.31/lib/nstrftime.c:-643
0x00006409      c1e81f         shr eax, 0x1f
0x0000640c      89442438       mov dword [rsp + 0x38], eax
0x00006410      89c8           mov eax, ecx
0x00006412      f7d0           not eax
0x00006414      c1e81f         shr eax, 0x1f
0x00006417      4183fb4f       cmp r11d, 0x4f
0x0000641b      0f857f0e0000   jne 0x72a0
0x00006421      84c0           test al, al
0x00006423      0f84770e0000   je 0x72a0
0x00006429      4489ce         mov esi, r9d
0x0000642c      ba20250000     mov edx, 0x2520                         ; ' %' ; "H\x8d\r\x15\xeb "
0x00006431      4531c0         xor r8d, r8d
0x00006434      66899424ab00.  mov word [rsp + 0xab], dx
0x0000643c      488d9424ab00.  lea rdx, [rsp + 0xab]
0x00006444      44889c24ad00.  mov byte [rsp + 0xad], r11b
0x0000644c      4989dc         mov r12, rbx
0x0000644f      4189fb         mov r11d, edi
0x00006452      488d4203       lea rax, [rdx + 3]
0x00006456      e92ffeffff     jmp 0x628a
0x0000645b      4585d2         test r10d, r10d
0x0000645e      b900000000     mov ecx, 0
0x00006463      b801000000     mov eax, 1
0x00006468      410f49ca       cmovns ecx, r10d
0x0000646c      4863c9         movsxd rcx, ecx
0x0000646f      4885c9         test rcx, rcx
0x00006472      480f44c8       cmove rcx, rax
0x00006476      488b442408     mov rax, qword [rsp + 8]
0x0000647b      4c29f0         sub rax, r14
0x0000647e      4839c8         cmp rax, rcx
0x00006481      0f86e5faffff   jbe 0x5f6c
0x00006487      4885ed         test rbp, rbp
0x0000648a      744c           je 0x64d8
0x0000648c      4183fa01       cmp r10d, 1
0x00006490      7e3a           jle 0x64cc
0x00006492      4963d2         movsxd rdx, r10d
0x00006495      48894c2430     mov qword [rsp + 0x30], rcx
0x0000649a      4883ea01       sub rdx, 1
0x0000649e      4183ff30       cmp r15d, 0x30
0x000064a2      4c8d641500     lea r12, [rbp + rdx]
0x000064a7      0f8417130000   je 0x77c4
0x000064ad      4183ff2b       cmp r15d, 0x2b
0x000064b1      0f840d130000   je 0x77c4
0x000064b7      4889ef         mov rdi, rbp
0x000064ba      be20000000     mov esi, 0x20                           ; "@"
0x000064bf      4c89e5         mov rbp, r12
0x000064c2      e889b8ffff     call sym.imp.memset
0x000064c7      488b4c2430     mov rcx, qword [rsp + 0x30]
0x000064cc      c6450009       mov byte [rbp], 9
0x000064d0      4883c501       add rbp, 1
0x000064d4      0f1f4000       nop dword [rax]
0x000064d8      4901ce         add r14, rcx
0x000064db      4989dc         mov r12, rbx
0x000064de      e9effaffff     jmp 0x5fd2
0x000064e3      b801000000     mov eax, 1
0x000064e8      4584c0         test r8b, r8b
0x000064eb      0f852a0f0000   jne 0x741b
0x000064f1      4189c0         mov r8d, eax
0x000064f4      be70000000     mov esi, 0x70                           ; 'p'
0x000064f9      e967fdffff     jmp 0x6265
0x000064fe      488d05b55a00.  lea rax, [0x0000bfba]                   ; "%H:%M"
0x00006505      c7442438ffff.  mov dword [rsp + 0x38], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x0000650d      4889442440     mov qword [rsp + 0x40], rax             ; string_fortified.h:-1448
0x00006512      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00006518      8b8424180500.  mov eax, dword [rsp + 0x518]
0x0000651f      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00006526      4489542448     mov dword [rsp + 0x48], r10d
0x0000652b      31ff           xor edi, edi
0x0000652d      4589f9         mov r9d, r15d
0x00006530      4c89e9         mov rcx, r13
0x00006533      4489442430     mov dword [rsp + 0x30], r8d
0x00006538      50             push rax
0x00006539      ff742418       push qword [rsp + 0x18]
0x0000653d      ff742428       push qword [rsp + 0x28]
0x00006541      8b442450       mov eax, dword [rsp + 0x50]
0x00006545      50             push rax
0x00006546      488b542460     mov rdx, qword [rsp + 0x60]
0x0000654b      e850f9ffff     call sym.__strftime_internal
0x00006550      4883c420       add rsp, 0x20
0x00006554      4c63542448     movsxd r10, dword [rsp + 0x48]
0x00006559      4989c3         mov r11, rax
0x0000655c      488b742408     mov rsi, qword [rsp + 8]
0x00006561      b800000000     mov eax, 0
0x00006566      4585d2         test r10d, r10d
0x00006569      490f49c2       cmovns rax, r10                         ; ../coreutils-8.31/lib/nstrftime.c:-269
0x0000656d      4939c3         cmp r11, rax
0x00006570      4989c4         mov r12, rax
0x00006573      4d0f43e3       cmovae r12, r11                         ; ../coreutils-8.31/lib/nstrftime.c:-266
0x00006577      4c29f6         sub rsi, r14
0x0000657a      4c39e6         cmp rsi, r12
0x0000657d      4889742448     mov qword [rsp + 0x48], rsi
0x00006582      0f86e4f9ffff   jbe 0x5f6c
0x00006588      4885ed         test rbp, rbp
0x0000658b      0f843bfaffff   je 0x5fcc
0x00006591      4939c3         cmp r11, rax
0x00006594      7340           jae 0x65d6
0x00006596      4963d2         movsxd rdx, r10d
0x00006599      4c895c2458     mov qword [rsp + 0x58], r11
0x0000659e      4c29da         sub rdx, r11
0x000065a1      4183ff30       cmp r15d, 0x30
0x000065a5      488d441500     lea rax, [rbp + rdx]
0x000065aa      4889442450     mov qword [rsp + 0x50], rax
0x000065af      0f84f7100000   je 0x76ac
0x000065b5      4183ff2b       cmp r15d, 0x2b
0x000065b9      0f84ed100000   je 0x76ac
0x000065bf      4889ef         mov rdi, rbp
0x000065c2      be20000000     mov esi, 0x20                           ; ../coreutils-8.31/lib/nstrftime.c:-235 ; "@"
0x000065c7      e884b7ffff     call sym.imp.memset
0x000065cc      488b6c2450     mov rbp, qword [rsp + 0x50]
0x000065d1      4c8b5c2458     mov r11, qword [rsp + 0x58]
0x000065d6      8b8424180500.  mov eax, dword [rsp + 0x518]
0x000065dd      4c895c2450     mov qword [rsp + 0x50], r11
0x000065e2      4889ef         mov rdi, rbp
0x000065e5      4589f9         mov r9d, r15d
0x000065e8      4c89e9         mov rcx, r13
0x000065eb      50             push rax
0x000065ec      ff742418       push qword [rsp + 0x18]
0x000065f0      ff742428       push qword [rsp + 0x28]
0x000065f4      8b442450       mov eax, dword [rsp + 0x50]
0x000065f8      50             push rax
0x000065f9      448b442450     mov r8d, dword [rsp + 0x50]
0x000065fe      488b542460     mov rdx, qword [rsp + 0x60]
0x00006603      488b742468     mov rsi, qword [rsp + 0x68]
0x00006608      e893f8ffff     call sym.__strftime_internal
0x0000660d      4c8b5c2470     mov r11, qword [rsp + 0x70]
0x00006612      4883c420       add rsp, 0x20
0x00006616      4c01dd         add rbp, r11
0x00006619      e9aef9ffff     jmp 0x5fcc                              ; ../coreutils-8.31/lib/nstrftime.c:-221
0x0000661e      488b542408     mov rdx, qword [rsp + 8]
0x00006623      b800000000     mov eax, 0
0x00006628      b901000000     mov ecx, 1
0x0000662d      4c29f2         sub rdx, r14
0x00006630      4585d2         test r10d, r10d
0x00006633      410f49c2       cmovns eax, r10d
0x00006637      4898           cdqe
0x00006639      4885c0         test rax, rax
0x0000663c      480f45c8       cmovne rcx, rax
0x00006640      4585db         test r11d, r11d
0x00006643      0f852f100000   jne 0x7678
0x00006649      4839d1         cmp rcx, rdx
0x0000664c      0f831af9ffff   jae 0x5f6c
0x00006652      4885ed         test rbp, rbp                           ; string_fortified.h:-1576
0x00006655      0f847dfeffff   je 0x64d8
0x0000665b      4183fa01       cmp r10d, 1
0x0000665f      7e3d           jle 0x669e                              ; ../coreutils-8.31/lib/nstrftime.c:-221
0x00006661      4963d2         movsxd rdx, r10d
0x00006664      48894c2430     mov qword [rsp + 0x30], rcx
0x00006669      4883ea01       sub rdx, 1
0x0000666d      4183ff30       cmp r15d, 0x30
0x00006671      4c8d641500     lea r12, [rbp + rdx]
0x00006676      0f8469120000   je 0x78e5
0x0000667c      4183ff2b       cmp r15d, 0x2b
0x00006680      be20000000     mov esi, 0x20                           ; "@"
0x00006685      0f845a120000   je 0x78e5
0x0000668b      4889ef         mov rdi, rbp
0x0000668e      4c89e5         mov rbp, r12
0x00006691      e8bab6ffff     call sym.imp.memset
0x00006696      0fb633         movzx esi, byte [rbx]
0x00006699      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0000669e      40887500       mov byte [rbp], sil
0x000066a2      4883c501       add rbp, 1
0x000066a6      e92dfeffff     jmp 0x64d8
0x000066ab      488d05a37100.  lea rax, str.H:_M:_S                    ; 0xd855 ; "%H:%M:%S"
0x000066b2      c7442438ffff.  mov dword [rsp + 0x38], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x000066ba      4889442440     mov qword [rsp + 0x40], rax
0x000066bf      e94efeffff     jmp 0x6512
0x000066c4      4183fb45       cmp r11d, 0x45
0x000066c8      0f8422faffff   je 0x60f0                               ; ../coreutils-8.31/lib/nstrftime.c:-243
0x000066ce      418b751c       mov esi, dword [r13 + 0x1c]
0x000066d2      412b7518       sub esi, dword [r13 + 0x18]
0x000066d6      ba93244992     mov edx, 0x92492493
0x000066db      83c607         add esi, 7
0x000066de      89f0           mov eax, esi
0x000066e0      f7ea           imul edx
0x000066e2      8d0c32         lea ecx, [rdx + rsi]
0x000066e5      c1fe1f         sar esi, 0x1f
0x000066e8      bf02000000     mov edi, 2
0x000066ed      c1f902         sar ecx, 2
0x000066f0      29f1           sub ecx, esi
0x000066f2      e909fdffff     jmp 0x6400
0x000066f7      4183fb45       cmp r11d, 0x45
0x000066fb      0f84290d0000   je 0x742a
0x00006701      4183fb4f       cmp r11d, 0x4f
0x00006705      0f84e5f9ffff   je 0x60f0
0x0000670b      418b4514       mov eax, dword [r13 + 0x14]
0x0000670f      3d94f8ffff     cmp eax, 0xfffff894                     ; ../coreutils-8.31/lib/nstrftime.c:-828 ; 4294965396
0x00006714      8d886c070000   lea ecx, [rax + 0x76c]
0x0000671a      0f9c442438     setl byte [rsp + 0x38]
0x0000671f      3d94f8ffff     cmp eax, 0xfffff894                     ; 4294965396
0x00006724      0f9dc0         setge al
0x00006727      4585ff         test r15d, r15d
0x0000672a      0f85790e0000   jne 0x75a9
0x00006730      448b7c242c     mov r15d, dword [rsp + 0x2c]
0x00006735      4183ff2b       cmp r15d, 0x2b
0x00006739      0f84740e0000   je 0x75b3
0x0000673f      c644244000     mov byte [rsp + 0x40], 0
0x00006744      bf04000000     mov edi, 4
0x00006749      31f6           xor esi, esi
0x0000674b      e9c7fcffff     jmp 0x6417
0x00006750      0fb6742430     movzx esi, byte [rsp + 0x30]
0x00006755      488b7c2420     mov rdi, qword [rsp + 0x20]             ; ../coreutils-8.31/lib/nstrftime.c:-165
0x0000675a      4584c0         test r8b, r8b
0x0000675d      b800000000     mov eax, 0
0x00006762      4489542438     mov dword [rsp + 0x38], r10d
0x00006767      4488442440     mov byte [rsp + 0x40], r8b
0x0000676c      0f45f0         cmovne esi, eax
0x0000676f      4088742430     mov byte [rsp + 0x30], sil
0x00006774      e827b5ffff     call sym.imp.strlen
0x00006779      4c63542438     movsxd r10, dword [rsp + 0x38]
0x0000677e      4989c4         mov r12, rax
0x00006781      488b542408     mov rdx, qword [rsp + 8]
0x00006786      b800000000     mov eax, 0                              ; ../coreutils-8.31/lib/nstrftime.c:-163
0x0000678b      4585d2         test r10d, r10d
0x0000678e      490f49c2       cmovns rax, r10
0x00006792      4939c4         cmp r12, rax
0x00006795      4889c1         mov rcx, rax
0x00006798      490f43cc       cmovae rcx, r12
0x0000679c      4c29f2         sub rdx, r14
0x0000679f      4839ca         cmp rdx, rcx
0x000067a2      0f86c4f7ffff   jbe 0x5f6c
0x000067a8      4885ed         test rbp, rbp
0x000067ab      0f8427fdffff   je 0x64d8
0x000067b1      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/nstrftime.c:-160
0x000067b4      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000067ba      734b           jae 0x6807
0x000067bc      4963d2         movsxd rdx, r10d
0x000067bf      48894c2448     mov qword [rsp + 0x48], rcx
0x000067c4      4488442440     mov byte [rsp + 0x40], r8b
0x000067c9      4c29e2         sub rdx, r12
0x000067cc      4183ff30       cmp r15d, 0x30
0x000067d0      488d441500     lea rax, [rbp + rdx]
0x000067d5      4889442438     mov qword [rsp + 0x38], rax
0x000067da      0f84bf100000   je 0x789f
0x000067e0      4183ff2b       cmp r15d, 0x2b
0x000067e4      0f84b5100000   je 0x789f
0x000067ea      4889ef         mov rdi, rbp
0x000067ed      be20000000     mov esi, 0x20                           ; "@"
0x000067f2      e859b5ffff     call sym.imp.memset
0x000067f7      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000067fd      488b6c2438     mov rbp, qword [rsp + 0x38]
0x00006802      488b4c2448     mov rcx, qword [rsp + 0x48]
0x00006807      4584c0         test r8b, r8b
0x0000680a      0f85f70f0000   jne 0x7807
0x00006810      807c243000     cmp byte [rsp + 0x30], 0
0x00006815      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/nstrftime.c:-636
0x00006818      48894c2430     mov qword [rsp + 0x30], rcx
0x0000681d      488b742420     mov rsi, qword [rsp + 0x20]
0x00006822      4889ef         mov rdi, rbp
0x00006825      0f84cd0f0000   je 0x77f8
0x0000682b      e820f6ffff     call sym.memcpy_uppcase
0x00006830      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00006835      4c01e5         add rbp, r12
0x00006838      e99bfcffff     jmp 0x64d8                              ; ../coreutils-8.31/lib/nstrftime.c:-644
0x0000683d      4183fb45       cmp r11d, 0x45
0x00006841      0f84e30b0000   je 0x742a
0x00006847      418b7514       mov esi, dword [r13 + 0x14]
0x0000684b      ba1f85eb51     mov edx, 0x51eb851f
0x00006850      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/nstrftime.c:-607
0x00006852      f7ea           imul edx
0x00006854      89f0           mov eax, esi
0x00006856      c1f81f         sar eax, 0x1f
0x00006859      89d1           mov ecx, edx
0x0000685b      c1f905         sar ecx, 5
0x0000685e      29c1           sub ecx, eax                            ; ../coreutils-8.31/lib/nstrftime.c:-606
0x00006860      89f0           mov eax, esi
0x00006862      6bc964         imul ecx, ecx, 0x64
0x00006865      29c8           sub eax, ecx
0x00006867      89c1           mov ecx, eax
0x00006869      790e           jns 0x6879                              ; ../coreutils-8.31/lib/nstrftime.c:-604
0x0000686b      f7d8           neg eax                                 ; ../coreutils-8.31/lib/nstrftime.c:-605
0x0000686d      83c164         add ecx, 0x64                           ; ../coreutils-8.31/lib/nstrftime.c:-604
0x00006870      81fe93f8ffff   cmp esi, 0xfffff893                     ; 4294965395
0x00006876      0f4ec8         cmovle ecx, eax
0x00006879      4585ff         test r15d, r15d
0x0000687c      0f8428060000   je 0x6eaa
0x00006882      b801000000     mov eax, 1
0x00006887      c644243800     mov byte [rsp + 0x38], 0
0x0000688c      4183ff2b       cmp r15d, 0x2b
0x00006890      0f846d070000   je 0x7003
0x00006896      c644244000     mov byte [rsp + 0x40], 0
0x0000689b      bf02000000     mov edi, 2
0x000068a0      31f6           xor esi, esi
0x000068a2      e970fbffff     jmp 0x6417                              ; ../coreutils-8.31/lib/nstrftime.c:-595
0x000068a7      0fb6442430     movzx eax, byte [rsp + 0x30]
0x000068ac      4584c0         test r8b, r8b
0x000068af      410f45c0       cmovne eax, r8d
0x000068b3      4183fb45       cmp r11d, 0x45
0x000068b7      0f84690f0000   je 0x7826
0x000068bd      4489ce         mov esi, r9d
0x000068c0      88442430       mov byte [rsp + 0x30], al
0x000068c4      4531c0         xor r8d, r8d
0x000068c7      e999f9ffff     jmp 0x6265
0x000068cc      4531c0         xor r8d, r8d
0x000068cf      418b4d20       mov ecx, dword [r13 + 0x20]
0x000068d3      85c9           test ecx, ecx
0x000068d5      0f88a30c0000   js 0x757e
0x000068db      498b4d28       mov rcx, qword [r13 + 0x28]
0x000068df      c644243801     mov byte [rsp + 0x38], 1                ; ../coreutils-8.31/lib/nstrftime.c:-579
0x000068e4      85c9           test ecx, ecx
0x000068e6      7814           js 0x68fc
0x000068e8      c644243800     mov byte [rsp + 0x38], 0
0x000068ed      750d           jne 0x68fc
0x000068ef      488b442420     mov rax, qword [rsp + 0x20]
0x000068f4      80382d         cmp byte [rax], 0x2d
0x000068f7      0f94442438     sete byte [rsp + 0x38]
0x000068fc      89c8           mov eax, ecx
0x000068fe      bac5b3a291     mov edx, 0x91a2b3c5
0x00006903      be89888888     mov esi, 0x88888889
0x00006908      f7ea           imul edx
0x0000690a      89c8           mov eax, ecx
0x0000690c      c1f81f         sar eax, 0x1f
0x0000690f      89442440       mov dword [rsp + 0x40], eax
0x00006913      448d240a       lea r12d, [rdx + rcx]
0x00006917      41c1fc0b       sar r12d, 0xb
0x0000691b      4129c4         sub r12d, eax
0x0000691e      89c8           mov eax, ecx
0x00006920      f7ee           imul esi                                ; ../coreutils-8.31/lib/nstrftime.c:-561
0x00006922      8d3c0a         lea edi, [rdx + rcx]
0x00006925      c1ff05         sar edi, 5
0x00006928      2b7c2440       sub edi, dword [rsp + 0x40]
0x0000692c      89f8           mov eax, edi
0x0000692e      f7ee           imul esi
0x00006930      89f8           mov eax, edi
0x00006932      c1f81f         sar eax, 0x1f
0x00006935      8d343a         lea esi, [rdx + rdi]
0x00006938      c1fe05         sar esi, 5
0x0000693b      29c6           sub esi, eax
0x0000693d      89f8           mov eax, edi
0x0000693f      6bf63c         imul esi, esi, 0x3c
0x00006942      6bff3c         imul edi, edi, 0x3c
0x00006945      29f0           sub eax, esi
0x00006947      29f9           sub ecx, edi
0x00006949      4983f801       cmp r8, 1
0x0000694d      89c6           mov esi, eax
0x0000694f      0f844d0e0000   je 0x77a2
0x00006955      0f82250f0000   jb 0x7880
0x0000695b      4983f802       cmp r8, 2
0x0000695f      0f84f00d0000   je 0x7755
0x00006965      4983f803       cmp r8, 3
0x00006969      0f85c00e0000   jne 0x782f
0x0000696f      85c9           test ecx, ecx
0x00006971      0f85de0d0000   jne 0x7755
0x00006977      85c0           test eax, eax
0x00006979      0f85230e0000   jne 0x77a2
0x0000697f      0fb6442438     movzx eax, byte [rsp + 0x38]
0x00006984      4489e1         mov ecx, r12d
0x00006987      c644244001     mov byte [rsp + 0x40], 1
0x0000698c      bf03000000     mov edi, 3
0x00006991      83f001         xor eax, 1
0x00006994      e97efaffff     jmp 0x6417
0x00006999      0f1f80000000.  nop dword [rax]
0x000069a0      4183fb4f       cmp r11d, 0x4f
0x000069a4      418b4510       mov eax, dword [r13 + 0x10]
0x000069a8      bf01000000     mov edi, 1
0x000069ad      0f8479faffff   je 0x642c
0x000069b3      8d1480         lea edx, [rax + rax*4]
0x000069b6      c644244000     mov byte [rsp + 0x40], 0
0x000069bb      c644243800     mov byte [rsp + 0x38], 0
0x000069c0      31f6           xor esi, esi
0x000069c2      8d0c50         lea ecx, [rax + rdx*2]
0x000069c5      c1f905         sar ecx, 5
0x000069c8      83c101         add ecx, 1
0x000069cb      0f1f440000     nop dword [rax + rax]
0x000069d0      4c8d8c24b000.  lea r9, [rsp + 0xb0]
0x000069d8      41bccdcccccc   mov r12d, 0xcccccccd
0x000069de      4d8d5917       lea r11, [r9 + 0x17]
0x000069e2      660f1f440000   nop word [rax + rax]
0x000069e8      40f6c601       test sil, 1
0x000069ec      4d8d43ff       lea r8, [r11 - 1]
0x000069f0      740f           je 0x6a01                               ; ../coreutils-8.31/lib/nstrftime.c:-546
0x000069f2      498d43fe       lea rax, [r11 - 2]
0x000069f6      41c643ff3a     mov byte [r11 - 1], 0x3a                ; ':'
                                                                       ; [0x3a:1]=64
0x000069fb      4d89c3         mov r11, r8
0x000069fe      4989c0         mov r8, rax
0x00006a01      89c8           mov eax, ecx
0x00006a03      d1fe           sar esi, 1
0x00006a05      41f7e4         mul r12d
0x00006a08      c1ea03         shr edx, 3
0x00006a0b      8d0492         lea eax, [rdx + rdx*4]
0x00006a0e      01c0           add eax, eax
0x00006a10      29c1           sub ecx, eax
0x00006a12      89f0           mov eax, esi
0x00006a14      83c130         add ecx, 0x30
0x00006a17      09d0           or eax, edx
0x00006a19      41884bff       mov byte [r11 - 1], cl
0x00006a1d      89d1           mov ecx, edx
0x00006a1f      4d89c3         mov r11, r8
0x00006a22      75c4           jne 0x69e8
0x00006a24      4139fa         cmp r10d, edi
0x00006a27      410f4dfa       cmovge edi, r10d
0x00006a2b      807c243800     cmp byte [rsp + 0x38], 0
0x00006a30      897c2448       mov dword [rsp + 0x48], edi
0x00006a34      0f857e080000   jne 0x72b8                              ; string_fortified.h:-1576
0x00006a3a      807c244000     cmp byte [rsp + 0x40], 0
0x00006a3f      0f8494020000   je 0x6cd9
0x00006a45      4183ff2d       cmp r15d, 0x2d
0x00006a49      0f84240b0000   je 0x7573
0x00006a4f      c64424382b     mov byte [rsp + 0x38], 0x2b             ; '+'
                                                                       ; [0x2b:1]=0
0x00006a54      8b442448       mov eax, dword [rsp + 0x48]
0x00006a58      498d4917       lea rcx, [r9 + 0x17]
0x00006a5c      488b542408     mov rdx, qword [rsp + 8]
0x00006a61      4c29c1         sub rcx, r8
0x00006a64      448d60ff       lea r12d, [rax - 1]
0x00006a68      4c29f2         sub rdx, r14
0x00006a6b      4129cc         sub r12d, ecx
0x00006a6e      4585e4         test r12d, r12d
0x00006a71      0f8e450a0000   jle 0x74bc
0x00006a77      4183ff5f       cmp r15d, 0x5f
0x00006a7b      0f84b5090000   je 0x7436
0x00006a81      4863442448     movsxd rax, dword [rsp + 0x48]
0x00006a86      4839d0         cmp rax, rdx
0x00006a89      4889c7         mov rdi, rax
0x00006a8c      0f83daf4ffff   jae 0x5f6c                              ; ../coreutils-8.31/lib/nstrftime.c:-412
0x00006a92      4585d2         test r10d, r10d
0x00006a95      b800000000     mov eax, 0
0x00006a9a      be01000000     mov esi, 1
0x00006a9f      410f49c2       cmovns eax, r10d
0x00006aa3      4898           cdqe
0x00006aa5      4885c0         test rax, rax
0x00006aa8      480f45f0       cmovne rsi, rax
0x00006aac      4839d6         cmp rsi, rdx
0x00006aaf      0f83b7f4ffff   jae 0x5f6c
0x00006ab5      4901f6         add r14, rsi
0x00006ab8      4885ed         test rbp, rbp
0x00006abb      4d63cc         movsxd r9, r12d
0x00006abe      4989dc         mov r12, rbx
0x00006ac1      0f849d000000   je 0x6b64
0x00006ac7      85ff           test edi, edi                           ; ../coreutils-8.31/lib/nstrftime.c:-411
0x00006ac9      7554           jne 0x6b1f
0x00006acb      4883f801       cmp rax, 1
0x00006acf      764e           jbe 0x6b1f
0x00006ad1      4963d2         movsxd rdx, r10d
0x00006ad4      4c89442458     mov qword [rsp + 0x58], r8
0x00006ad9      4c894c2450     mov qword [rsp + 0x50], r9
0x00006ade      4883ea01       sub rdx, 1
0x00006ae2      4183ff30       cmp r15d, 0x30
0x00006ae6      48894c2440     mov qword [rsp + 0x40], rcx
0x00006aeb      4c8d641500     lea r12, [rbp + rdx]
0x00006af0      0f84cb0d0000   je 0x78c1
0x00006af6      4183ff2b       cmp r15d, 0x2b
0x00006afa      0f84c10d0000   je 0x78c1
0x00006b00      4889ef         mov rdi, rbp
0x00006b03      be20000000     mov esi, 0x20                           ; "@"
0x00006b08      4c89e5         mov rbp, r12
0x00006b0b      e840b2ffff     call sym.imp.memset
0x00006b10      4c8b442458     mov r8, qword [rsp + 0x58]
0x00006b15      4c8b4c2450     mov r9, qword [rsp + 0x50]
0x00006b1a      488b4c2440     mov rcx, qword [rsp + 0x40]
0x00006b1f      0fb6442438     movzx eax, byte [rsp + 0x38]
0x00006b24      4883c501       add rbp, 1
0x00006b28      4989dc         mov r12, rbx
0x00006b2b      8845ff         mov byte [rbp - 1], al
0x00006b2e      4885ed         test rbp, rbp
0x00006b31      7431           je 0x6b64
0x00006b33      4c89ca         mov rdx, r9
0x00006b36      4889ef         mov rdi, rbp
0x00006b39      be30000000     mov esi, 0x30                           ; '0'
0x00006b3e      4c89442450     mov qword [rsp + 0x50], r8
0x00006b43      48894c2440     mov qword [rsp + 0x40], rcx
0x00006b48      4c894c2438     mov qword [rsp + 0x38], r9
0x00006b4d      e8feb1ffff     call sym.imp.memset
0x00006b52      4c8b4c2438     mov r9, qword [rsp + 0x38]
0x00006b57      4c8b442450     mov r8, qword [rsp + 0x50]
0x00006b5c      488b4c2440     mov rcx, qword [rsp + 0x40]
0x00006b61      4c01cd         add rbp, r9
0x00006b64      488b542408     mov rdx, qword [rsp + 8]
0x00006b69      4d01ce         add r14, r9
0x00006b6c      4531db         xor r11d, r11d
0x00006b6f      4531d2         xor r10d, r10d
0x00006b72      4c29f2         sub rdx, r14
0x00006b75      4c39d9         cmp rcx, r11
0x00006b78      4c89db         mov rbx, r11
0x00006b7b      480f43d9       cmovae rbx, rcx
0x00006b7f      4839d3         cmp rbx, rdx                            ; ../coreutils-8.31/lib/nstrftime.c:-214
0x00006b82      0f83e4f3ffff   jae 0x5f6c
0x00006b88      4885ed         test rbp, rbp
0x00006b8b      0f840df8ffff   je 0x639e
0x00006b91      8b742448       mov esi, dword [rsp + 0x48]
0x00006b95      85f6           test esi, esi                           ; ../coreutils-8.31/lib/nstrftime.c:-212
0x00006b97      754f           jne 0x6be8
0x00006b99      4c39d9         cmp rcx, r11
0x00006b9c      734a           jae 0x6be8
0x00006b9e      4963d2         movsxd rdx, r10d
0x00006ba1      4c89442448     mov qword [rsp + 0x48], r8
0x00006ba6      48894c2440     mov qword [rsp + 0x40], rcx
0x00006bab      4829ca         sub rdx, rcx
0x00006bae      4183ff30       cmp r15d, 0x30
0x00006bb2      488d441500     lea rax, [rbp + rdx]
0x00006bb7      4889442438     mov qword [rsp + 0x38], rax             ; ../coreutils-8.31/lib/nstrftime.c:-1261
0x00006bbc      0f8438080000   je 0x73fa                               ; ../coreutils-8.31/lib/nstrftime.c:-347
0x00006bc2      4183ff2b       cmp r15d, 0x2b
0x00006bc6      0f842e080000   je 0x73fa
0x00006bcc      4889ef         mov rdi, rbp
0x00006bcf      be20000000     mov esi, 0x20                           ; "@"
0x00006bd4      e877b1ffff     call sym.imp.memset                     ; ../coreutils-8.31/lib/nstrftime.c:-345
0x00006bd9      488b6c2438     mov rbp, qword [rsp + 0x38]
0x00006bde      4c8b442448     mov r8, qword [rsp + 0x48]
0x00006be3      488b4c2440     mov rcx, qword [rsp + 0x40]
0x00006be8      807c243000     cmp byte [rsp + 0x30], 0
0x00006bed      4889ca         mov rdx, rcx
0x00006bf0      48894c2430     mov qword [rsp + 0x30], rcx
0x00006bf5      4c89c6         mov rsi, r8
0x00006bf8      4889ef         mov rdi, rbp
0x00006bfb      0f8590f7ffff   jne 0x6391
0x00006c01      e8cab1ffff     call sym.imp.memcpy
0x00006c06      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00006c0b      e98bf7ffff     jmp 0x639b
0x00006c10      f3410f6f4500   movdqu xmm0, xmmword [r13]
0x00006c16      488d742470     lea rsi, [rsp + 0x70]
0x00006c1b      498b4530       mov rax, qword [r13 + 0x30]
0x00006c1f      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00006c24      0f29442470     movaps xmmword [rsp + 0x70], xmm0
0x00006c29      4489542438     mov dword [rsp + 0x38], r10d
0x00006c2e      f3410f6f4510   movdqu xmm0, xmmword [r13 + 0x10]
0x00006c34      48898424a000.  mov qword [rsp + 0xa0], rax
0x00006c3c      0f2984248000.  movaps xmmword [rsp + 0x80], xmm0
0x00006c44      f3410f6f4520   movdqu xmm0, xmmword [r13 + 0x20]
0x00006c4a      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x00006c52      e8494f0000     call sym.mktime_z
0x00006c57      4c8d8c24b000.  lea r9, [rsp + 0xb0]
0x00006c5f      4889c6         mov rsi, rax                            ; ../coreutils-8.31/lib/nstrftime.c:-334
0x00006c62      4889c1         mov rcx, rax                            ; ../coreutils-8.31/lib/nstrftime.c:-1261
0x00006c65      49bb67666666.  movabs r11, 0x6666666666666667          ; 'gfffffff'
0x00006c6f      bf30000000     mov edi, 0x30                           ; '0'
0x00006c74      448b542438     mov r10d, dword [rsp + 0x38]
0x00006c79      4d8d4117       lea r8, [r9 + 0x17]
0x00006c7d      0f1f00         nop dword [rax]
0x00006c80      4889c8         mov rax, rcx
0x00006c83      49f7eb         imul r11
0x00006c86      4889c8         mov rax, rcx
0x00006c89      48c1f83f       sar rax, 0x3f
0x00006c8d      48c1fa02       sar rdx, 2
0x00006c91      4829c2         sub rdx, rax                            ; ../coreutils-8.31/lib/nstrftime.c:-1260
0x00006c94      4889d0         mov rax, rdx
0x00006c97      488d1492       lea rdx, [rdx + rdx*4]
0x00006c9b      4801d2         add rdx, rdx
0x00006c9e      4829d1         sub rcx, rdx
0x00006ca1      4889ca         mov rdx, rcx
0x00006ca4      4889c1         mov rcx, rax                            ; ../coreutils-8.31/lib/nstrftime.c:-346
0x00006ca7      89f8           mov eax, edi                            ; ../coreutils-8.31/lib/nstrftime.c:-324
0x00006ca9      29d0           sub eax, edx
0x00006cab      83c230         add edx, 0x30
0x00006cae      4885f6         test rsi, rsi
0x00006cb1      0f48d0         cmovs edx, eax
0x00006cb4      4983e801       sub r8, 1
0x00006cb8      4885c9         test rcx, rcx
0x00006cbb      418810         mov byte [r8], dl                       ; ../coreutils-8.31/lib/nstrftime.c:-320
0x00006cbe      75c0           jne 0x6c80
0x00006cc0      4585d2         test r10d, r10d
0x00006cc3      bf01000000     mov edi, 1
0x00006cc8      410f4ffa       cmovg edi, r10d
0x00006ccc      4885f6         test rsi, rsi
0x00006ccf      897c2448       mov dword [rsp + 0x48], edi
0x00006cd3      0f88df050000   js 0x72b8
0x00006cd9      488b542408     mov rdx, qword [rsp + 8]
0x00006cde      498d4917       lea rcx, [r9 + 0x17]
0x00006ce2      4c29c1         sub rcx, r8
0x00006ce5      4c29f2         sub rdx, r14
0x00006ce8      4183ff2d       cmp r15d, 0x2d
0x00006cec      7411           je 0x6cff
0x00006cee      448b642448     mov r12d, dword [rsp + 0x48]
0x00006cf3      4129cc         sub r12d, ecx
0x00006cf6      4585e4         test r12d, r12d
0x00006cf9      0f8f8a090000   jg 0x7689
0x00006cff      4585d2         test r10d, r10d
0x00006d02      41bb00000000   mov r11d, 0
0x00006d08      4989dc         mov r12, rbx
0x00006d0b      450f49da       cmovns r11d, r10d
0x00006d0f      4d63db         movsxd r11, r11d
0x00006d12      e95efeffff     jmp 0x6b75                              ; ../coreutils-8.31/lib/nstrftime.c:-661
0x00006d17      0fb64301       movzx eax, byte [rbx + 1]
0x00006d1b      488d5301       lea rdx, [rbx + 1]
0x00006d1f      3c3a           cmp al, 0x3a
0x00006d21      0f84130b0000   je 0x783a
0x00006d27      41b801000000   mov r8d, 1
0x00006d2d      3c7a           cmp al, 0x7a
0x00006d2f      0f85bbf3ffff   jne 0x60f0
0x00006d35      4889d3         mov rbx, rdx                            ; ../coreutils-8.31/lib/nstrftime.c:-644
0x00006d38      e992fbffff     jmp 0x68cf
0x00006d3d      4183fb45       cmp r11d, 0x45
0x00006d41      0f84a9f3ffff   je 0x60f0
0x00006d47      418b7d14       mov edi, dword [r13 + 0x14]
0x00006d4b      458b451c       mov r8d, dword [r13 + 0x1c]
0x00006d4f      ba93244992     mov edx, 0x92492493
0x00006d54      89f8           mov eax, edi                            ; ../coreutils-8.31/lib/nstrftime.c:-368
0x00006d56      4489c1         mov ecx, r8d
0x00006d59      c1f81f         sar eax, 0x1f
0x00006d5c      2590010000     and eax, 0x190
0x00006d61      448d64079c     lea r12d, [rdi + rax - 0x64]
0x00006d66      418b4518       mov eax, dword [r13 + 0x18]
0x00006d6a      29c1           sub ecx, eax
0x00006d6c      89442438       mov dword [rsp + 0x38], eax             ; ../coreutils-8.31/lib/nstrftime.c:-428
0x00006d70      81c17e010000   add ecx, 0x17e
0x00006d76      89c8           mov eax, ecx                            ; ../coreutils-8.31/lib/nstrftime.c:-425
0x00006d78      f7ea           imul edx
0x00006d7a      8d040a         lea eax, [rdx + rcx]
0x00006d7d      89ca           mov edx, ecx
0x00006d7f      c1fa1f         sar edx, 0x1f
0x00006d82      c1f802         sar eax, 2
0x00006d85      29d0           sub eax, edx
0x00006d87      8d14c5000000.  lea edx, [rax*8]
0x00006d8e      29c2           sub edx, eax
0x00006d90      89d0           mov eax, edx
0x00006d92      4489c2         mov edx, r8d
0x00006d95      29ca           sub edx, ecx
0x00006d97      8d440203       lea eax, [rdx + rax + 3]
0x00006d9b      85c0           test eax, eax
0x00006d9d      89442440       mov dword [rsp + 0x40], eax
0x00006da1      0f8821090000   js 0x76c8
0x00006da7      41f6c403       test r12b, 3
0x00006dab      b86d010000     mov eax, 0x16d
0x00006db0      7545           jne 0x6df7
0x00006db2      b91f85eb51     mov ecx, 0x51eb851f
0x00006db7      4489e0         mov eax, r12d
0x00006dba      f7e9           imul ecx
0x00006dbc      4489e0         mov eax, r12d
0x00006dbf      c1f81f         sar eax, 0x1f
0x00006dc2      89442448       mov dword [rsp + 0x48], eax
0x00006dc6      89d1           mov ecx, edx
0x00006dc8      c1fa05         sar edx, 5
0x00006dcb      29c2           sub edx, eax
0x00006dcd      b86e010000     mov eax, 0x16e
0x00006dd2      6bd264         imul edx, edx, 0x64
0x00006dd5      4139d4         cmp r12d, edx
0x00006dd8      751d           jne 0x6df7
0x00006dda      c1f907         sar ecx, 7
0x00006ddd      89c8           mov eax, ecx
0x00006ddf      2b442448       sub eax, dword [rsp + 0x48]
0x00006de3      69c090010000   imul eax, eax, 0x190
0x00006de9      4139c4         cmp r12d, eax                           ; ../coreutils-8.31/lib/nstrftime.c:-986
0x00006dec      0f94c0         sete al                                 ; ../coreutils-8.31/lib/nstrftime.c:-985
0x00006def      0fb6c0         movzx eax, al
0x00006df2      056d010000     add eax, 0x16d
0x00006df7      4129c0         sub r8d, eax
0x00006dfa      ba93244992     mov edx, 0x92492493
0x00006dff      4489c1         mov ecx, r8d
0x00006e02      2b4c2438       sub ecx, dword [rsp + 0x38]
0x00006e06      81c17e010000   add ecx, 0x17e
0x00006e0c      89c8           mov eax, ecx
0x00006e0e      4129c8         sub r8d, ecx
0x00006e11      f7ea           imul edx
0x00006e13      8d040a         lea eax, [rdx + rcx]                    ; ../coreutils-8.31/lib/nstrftime.c:-942
0x00006e16      89ca           mov edx, ecx
0x00006e18      c1fa1f         sar edx, 0x1f
0x00006e1b      c1f802         sar eax, 2
0x00006e1e      29d0           sub eax, edx
0x00006e20      8d14c5000000.  lea edx, [rax*8]
0x00006e27      29c2           sub edx, eax
0x00006e29      418d4c1003     lea ecx, [r8 + rdx + 3]
0x00006e2e      41b801000000   mov r8d, 1
0x00006e34      85c9           test ecx, ecx
0x00006e36      7907           jns 0x6e3f                              ; ../coreutils-8.31/lib/nstrftime.c:-938
0x00006e38      8b4c2440       mov ecx, dword [rsp + 0x40]
0x00006e3c      4531c0         xor r8d, r8d
0x00006e3f      4080fe47       cmp sil, 0x47
0x00006e43      0f843d070000   je 0x7586
0x00006e49      4080fe67       cmp sil, 0x67                           ; ../coreutils-8.31/lib/nstrftime.c:-937
0x00006e4d      0f852c090000   jne 0x777f
0x00006e53      b91f85eb51     mov ecx, 0x51eb851f
0x00006e58      89f8           mov eax, edi
0x00006e5a      89fe           mov esi, edi
0x00006e5c      f7e9           imul ecx
0x00006e5e      89d0           mov eax, edx                            ; ../coreutils-8.31/lib/nstrftime.c:-967
0x00006e60      89fa           mov edx, edi
0x00006e62      c1fa1f         sar edx, 0x1f
0x00006e65      c1f805         sar eax, 5
0x00006e68      29d0           sub eax, edx
0x00006e6a      6bc064         imul eax, eax, 0x64
0x00006e6d      29c6           sub esi, eax
0x00006e6f      4401c6         add esi, r8d
0x00006e72      89f0           mov eax, esi
0x00006e74      f7e9           imul ecx
0x00006e76      89f0           mov eax, esi
0x00006e78      c1f81f         sar eax, 0x1f                           ; ../coreutils-8.31/lib/nstrftime.c:-1093
0x00006e7b      89d1           mov ecx, edx
0x00006e7d      c1f905         sar ecx, 5
0x00006e80      29c1           sub ecx, eax
0x00006e82      6bc964         imul ecx, ecx, 0x64
0x00006e85      29ce           sub esi, ecx
0x00006e87      89f1           mov ecx, esi
0x00006e89      0f89eaf9ffff   jns 0x6879
0x00006e8f      b894f8ffff     mov eax, 0xfffff894                     ; 4294965396
0x00006e94      4429c0         sub eax, r8d
0x00006e97      39c7           cmp edi, eax
0x00006e99      0f8d9b0a0000   jge 0x793a
0x00006e9f      f7d9           neg ecx
0x00006ea1      4585ff         test r15d, r15d
0x00006ea4      0f85d8f9ffff   jne 0x6882
0x00006eaa      448b7c242c     mov r15d, dword [rsp + 0x2c]
0x00006eaf      b801000000     mov eax, 1
0x00006eb4      4183ff2b       cmp r15d, 0x2b
0x00006eb8      0f845c0a0000   je 0x791a
0x00006ebe      c644244000     mov byte [rsp + 0x40], 0
0x00006ec3      c644243800     mov byte [rsp + 0x38], 0
0x00006ec8      bf02000000     mov edi, 2
0x00006ecd      31f6           xor esi, esi
0x00006ecf      e943f5ffff     jmp 0x6417
0x00006ed4      4183fb45       cmp r11d, 0x45
0x00006ed8      0f8412f2ffff   je 0x60f0
0x00006ede      418b4d0c       mov ecx, dword [r13 + 0xc]
0x00006ee2      bf02000000     mov edi, 2
0x00006ee7      e914f5ffff     jmp 0x6400
0x00006eec      418b4518       mov eax, dword [r13 + 0x18]
0x00006ef0      ba93244992     mov edx, 0x92492493
0x00006ef5      bf01000000     mov edi, 1
0x00006efa      8d4806         lea ecx, [rax + 6]
0x00006efd      89c8           mov eax, ecx                            ; ../coreutils-8.31/lib/nstrftime.c:-1073
0x00006eff      f7ea           imul edx
0x00006f01      8d040a         lea eax, [rdx + rcx]
0x00006f04      89ca           mov edx, ecx
0x00006f06      c1fa1f         sar edx, 0x1f
0x00006f09      c1f802         sar eax, 2
0x00006f0c      29d0           sub eax, edx
0x00006f0e      8d14c5000000.  lea edx, [rax*8]
0x00006f15      29c2           sub edx, eax                            ; ../coreutils-8.31/lib/nstrftime.c:-1043
0x00006f17      29d1           sub ecx, edx
0x00006f19      83c101         add ecx, 1
0x00006f1c      e9dff4ffff     jmp 0x6400
0x00006f21      4183fb45       cmp r11d, 0x45
0x00006f25      0f84c5f1ffff   je 0x60f0
0x00006f2b      418b4d18       mov ecx, dword [r13 + 0x18]
0x00006f2f      bf01000000     mov edi, 1
0x00006f34      e9c7f4ffff     jmp 0x6400
0x00006f39      4183fb45       cmp r11d, 0x45
0x00006f3d      0f84adf1ffff   je 0x60f0
0x00006f43      418b4518       mov eax, dword [r13 + 0x18]
0x00006f47      b993244992     mov ecx, 0x92492493
0x00006f4c      8d7006         lea esi, [rax + 6]
0x00006f4f      89f0           mov eax, esi
0x00006f51      f7e9           imul ecx                                ; ../coreutils-8.31/lib/nstrftime.c:-1022
0x00006f53      8d0432         lea eax, [rdx + rsi]                    ; ../coreutils-8.31/lib/nstrftime.c:-1023
0x00006f56      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/nstrftime.c:-1022
0x00006f58      c1fa1f         sar edx, 0x1f
0x00006f5b      c1f802         sar eax, 2
0x00006f5e      29d0           sub eax, edx
0x00006f60      8d14c5000000.  lea edx, [rax*8]                        ; ../coreutils-8.31/lib/nstrftime.c:-1023
0x00006f67      29c2           sub edx, eax
0x00006f69      89d0           mov eax, edx
0x00006f6b      418b551c       mov edx, dword [r13 + 0x1c]
0x00006f6f      29f0           sub eax, esi                            ; ../coreutils-8.31/lib/nstrftime.c:-1070
0x00006f71      8d741007       lea esi, [rax + rdx + 7]
0x00006f75      89f0           mov eax, esi
0x00006f77      f7e9           imul ecx
0x00006f79      e964f7ffff     jmp 0x66e2                              ; ../coreutils-8.31/lib/nstrftime.c:-1067
0x00006f7e      4183fb45       cmp r11d, 0x45
0x00006f82      0f8468f1ffff   je 0x60f0
0x00006f88      4584c0         test r8b, r8b
0x00006f8b      0f84d4f2ffff   je 0x6265
0x00006f91      4488442430     mov byte [rsp + 0x30], r8b              ; ../coreutils-8.31/lib/nstrftime.c:-1055
0x00006f96      e9c7f2ffff     jmp 0x6262
0x00006f9b      4183fb45       cmp r11d, 0x45
0x00006f9f      0f8485040000   je 0x742a
0x00006fa5      418b7514       mov esi, dword [r13 + 0x14]
0x00006fa9      ba1f85eb51     mov edx, 0x51eb851f
0x00006fae      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/nstrftime.c:-1040
0x00006fb0      f7ea           imul edx
0x00006fb2      89d0           mov eax, edx
0x00006fb4      89f2           mov edx, esi
0x00006fb6      c1fa1f         sar edx, 0x1f
0x00006fb9      c1f805         sar eax, 5
0x00006fbc      29d0           sub eax, edx                            ; ../coreutils-8.31/lib/nstrftime.c:-1198
0x00006fbe      89f2           mov edx, esi
0x00006fc0      8d4813         lea ecx, [rax + 0x13]
0x00006fc3      6bc064         imul eax, eax, 0x64
0x00006fc6      29c2           sub edx, eax
0x00006fc8      89d0           mov eax, edx
0x00006fca      c1e81f         shr eax, 0x1f
0x00006fcd      85c9           test ecx, ecx
0x00006fcf      0f9fc2         setg dl
0x00006fd2      21d0           and eax, edx
0x00006fd4      81fe94f8ffff   cmp esi, 0xfffff894                     ; 4294965396
0x00006fda      0f9c442438     setl byte [rsp + 0x38]
0x00006fdf      29c1           sub ecx, eax
0x00006fe1      81fe94f8ffff   cmp esi, 0xfffff894                     ; 4294965396
0x00006fe7      0f9dc0         setge al
0x00006fea      4585ff         test r15d, r15d
0x00006fed      0f8599f8ffff   jne 0x688c
0x00006ff3      837c242c2b     cmp dword [rsp + 0x2c], 0x2b
0x00006ff8      448b7c242c     mov r15d, dword [rsp + 0x2c]
0x00006ffd      0f8593f8ffff   jne 0x6896
0x00007003      bf02000000     mov edi, 2
0x00007008      ba63000000     mov edx, 0x63                           ; 'c'
0x0000700d      39ca           cmp edx, ecx
0x0000700f      c644244001     mov byte [rsp + 0x40], 1
0x00007014      41bf2b000000   mov r15d, 0x2b                          ; '+'
0x0000701a      0f8229f7ffff   jb 0x6749
0x00007020      4139fa         cmp r10d, edi
0x00007023      41bf2b000000   mov r15d, 0x2b                          ; '+'
0x00007029      0f9f442440     setg byte [rsp + 0x40]
0x0000702e      31f6           xor esi, esi
0x00007030      e9e2f3ffff     jmp 0x6417
0x00007035      4585db         test r11d, r11d
0x00007038      0f85b2f0ffff   jne 0x60f0
0x0000703e      488d05226800.  lea rax, str.m__d__y                    ; string_fortified.h:-2127 ; 0xd867 ; "%m/%d/%y"
0x00007045      c7442438ffff.  mov dword [rsp + 0x38], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x0000704d      4889442440     mov qword [rsp + 0x40], rax
0x00007052      e9bbf4ffff     jmp 0x6512
0x00007057      4585db         test r11d, r11d
0x0000705a      0f8590f0ffff   jne 0x60f0
0x00007060      4585ff         test r15d, r15d                         ; ../coreutils-8.31/lib/nstrftime.c:-1618
0x00007063      0f85f4070000   jne 0x785d
0x00007069      4585d2         test r10d, r10d
0x0000706c      0f89eb070000   jns 0x785d
0x00007072      488d05e56700.  lea rax, str.Y__m__d                    ; 0xd85e ; "%Y-%m-%d"
0x00007079      c74424380400.  mov dword [rsp + 0x38], 4
0x00007081      41bf2b000000   mov r15d, 0x2b                          ; '+'
0x00007087      4889442440     mov qword [rsp + 0x40], rax
0x0000708c      e981f4ffff     jmp 0x6512
0x00007091      0fb64bff       movzx ecx, byte [rbx - 1]
0x00007095      4c8d4bff       lea r9, [rbx - 1]
0x00007099      488b542408     mov rdx, qword [rsp + 8]
0x0000709e      b800000000     mov eax, 0
0x000070a3      4c29f2         sub rdx, r14
0x000070a6      4585d2         test r10d, r10d
0x000070a9      410f49c2       cmovns eax, r10d
0x000070ad      80f925         cmp cl, 0x25
0x000070b0      4898           cdqe
0x000070b2      0f8533f0ffff   jne 0x60eb
0x000070b8      4885c0         test rax, rax
0x000070bb      b901000000     mov ecx, 1
0x000070c0      4d89cc         mov r12, r9
0x000070c3      480f45c8       cmovne rcx, rax
0x000070c7      41b801000000   mov r8d, 1
0x000070cd      e95ff0ffff     jmp 0x6131
0x000070d2      4183fb45       cmp r11d, 0x45
0x000070d6      0f8414f0ffff   je 0x60f0
0x000070dc      418b4d08       mov ecx, dword [r13 + 8]
0x000070e0      bf02000000     mov edi, 2
0x000070e5      e916f3ffff     jmp 0x6400
0x000070ea      4183fb45       cmp r11d, 0x45
0x000070ee      0f84fcefffff   je 0x60f0
0x000070f4      418b4d04       mov ecx, dword [r13 + 4]
0x000070f8      bf02000000     mov edi, 2
0x000070fd      e9fef2ffff     jmp 0x6400
0x00007102      4183fb45       cmp r11d, 0x45
0x00007106      0f84e4efffff   je 0x60f0
0x0000710c      4183faff       cmp r10d, 0xffffffff
0x00007110      0f844b050000   je 0x7661
0x00007116      4183fa08       cmp r10d, 8
0x0000711a      0f8f09080000   jg 0x7929
0x00007120      8b8c24180500.  mov ecx, dword [rsp + 0x518]
0x00007127      4489d6         mov esi, r10d                           ; ../coreutils-8.31/lib/nstrftime.c:-1287
0x0000712a      bf67666666     mov edi, 0x66666667                     ; 'gfff'
0x0000712f      90             nop
0x00007130      89c8           mov eax, ecx
0x00007132      83c601         add esi, 1
0x00007135      c1f91f         sar ecx, 0x1f
0x00007138      f7ef           imul edi
0x0000713a      c1fa02         sar edx, 2
0x0000713d      29ca           sub edx, ecx
0x0000713f      83fe09         cmp esi, 9                              ; string_fortified.h:-2275
0x00007142      89d1           mov ecx, edx
0x00007144      75ea           jne 0x7130
0x00007146      4489d7         mov edi, r10d
0x00007149      e9b2f2ffff     jmp 0x6400
0x0000714e      4183fb45       cmp r11d, 0x45
0x00007152      0f8498efffff   je 0x60f0
0x00007158      8b4c2468       mov ecx, dword [rsp + 0x68]
0x0000715c      bf02000000     mov edi, 2
0x00007161      e99af2ffff     jmp 0x6400
0x00007166      4183fb45       cmp r11d, 0x45
0x0000716a      0f8480efffff   je 0x60f0
0x00007170      8b4c2468       mov ecx, dword [rsp + 0x68]
0x00007174      4585ff         test r15d, r15d
0x00007177      bf02000000     mov edi, 2
0x0000717c      0f857ef2ffff   jne 0x6400
0x00007182      41bf5f000000   mov r15d, 0x5f                          ; '_'
0x00007188      e973f2ffff     jmp 0x6400
0x0000718d      4183fb45       cmp r11d, 0x45
0x00007191      0f8459efffff   je 0x60f0
0x00007197      418b4510       mov eax, dword [r13 + 0x10]
0x0000719b      c644244000     mov byte [rsp + 0x40], 0
0x000071a0      bf02000000     mov edi, 2
0x000071a5      83f8ff         cmp eax, 0xffffffff
0x000071a8      8d4801         lea ecx, [rax + 1]
0x000071ab      0f9c442438     setl byte [rsp + 0x38]
0x000071b0      83f8ff         cmp eax, 0xffffffff
0x000071b3      0f9dc0         setge al
0x000071b6      31f6           xor esi, esi
0x000071b8      e95af2ffff     jmp 0x6417
0x000071bd      4585d2         test r10d, r10d
0x000071c0      b900000000     mov ecx, 0
0x000071c5      b801000000     mov eax, 1
0x000071ca      410f49ca       cmovns ecx, r10d
0x000071ce      4863c9         movsxd rcx, ecx
0x000071d1      4885c9         test rcx, rcx
0x000071d4      480f44c8       cmove rcx, rax
0x000071d8      488b442408     mov rax, qword [rsp + 8]
0x000071dd      4c29f0         sub rax, r14
0x000071e0      4839c8         cmp rax, rcx
0x000071e3      0f8683edffff   jbe 0x5f6c
0x000071e9      4885ed         test rbp, rbp
0x000071ec      0f84e6f2ffff   je 0x64d8
0x000071f2      4183fa01       cmp r10d, 1                             ; ../coreutils-8.31/lib/nstrftime.c:-823
0x000071f6      7e3a           jle 0x7232
0x000071f8      4963d2         movsxd rdx, r10d
0x000071fb      48894c2430     mov qword [rsp + 0x30], rcx
0x00007200      4883ea01       sub rdx, 1
0x00007204      4183ff30       cmp r15d, 0x30
0x00007208      4c8d641500     lea r12, [rbp + rdx]
0x0000720d      0f84cb050000   je 0x77de
0x00007213      4183ff2b       cmp r15d, 0x2b
0x00007217      0f84c1050000   je 0x77de
0x0000721d      4889ef         mov rdi, rbp
0x00007220      be20000000     mov esi, 0x20                           ; "@"
0x00007225      4c89e5         mov rbp, r12                            ; ../coreutils-8.31/lib/nstrftime.c:-1908
0x00007228      e823abffff     call sym.imp.memset
0x0000722d      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00007232      c645000a       mov byte [rbp], 0xa
0x00007236      4883c501       add rbp, 1
0x0000723a      e999f2ffff     jmp 0x64d8
0x0000723f      31c0           xor eax, eax
0x00007241      e9a2f2ffff     jmp 0x64e8
0x00007246      4183fb45       cmp r11d, 0x45
0x0000724a      0f84a0eeffff   je 0x60f0
0x00007250      418b451c       mov eax, dword [r13 + 0x1c]
0x00007254      c644244000     mov byte [rsp + 0x40], 0
0x00007259      bf03000000     mov edi, 3
0x0000725e      83f8ff         cmp eax, 0xffffffff
0x00007261      8d4801         lea ecx, [rax + 1]
0x00007264      0f9c442438     setl byte [rsp + 0x38]                  ; ../coreutils-8.31/lib/nstrftime.c:-1400
0x00007269      83f8ff         cmp eax, 0xffffffff
0x0000726c      0f9dc0         setge al
0x0000726f      31f6           xor esi, esi
0x00007271      e9a1f1ffff     jmp 0x6417
0x00007276      4183fb45       cmp r11d, 0x45
0x0000727a      0f8470eeffff   je 0x60f0
0x00007280      418b4d08       mov ecx, dword [r13 + 8]
0x00007284      e9ebfeffff     jmp 0x7174
0x00007289      4183fb45       cmp r11d, 0x45
0x0000728d      0f845deeffff   je 0x60f0
0x00007293      418b4d0c       mov ecx, dword [r13 + 0xc]
0x00007297      e9d8feffff     jmp 0x7174
0x0000729c      0f1f4000       nop dword [rax]
0x000072a0      89c8           mov eax, ecx
0x000072a2      f7d8           neg eax
0x000072a4      807c243800     cmp byte [rsp + 0x38], 0
0x000072a9      0f45c8         cmovne ecx, eax
0x000072ac      e91ff7ffff     jmp 0x69d0
0x000072b1      0f1f80000000.  nop dword [rax]
0x000072b8      4183ff2d       cmp r15d, 0x2d
0x000072bc      c64424382d     mov byte [rsp + 0x38], 0x2d             ; '-'
                                                                       ; [0x2d:1]=0
0x000072c1      0f858df7ffff   jne 0x6a54
0x000072c7      4585d2         test r10d, r10d
0x000072ca      41bb00000000   mov r11d, 0
0x000072d0      488b442408     mov rax, qword [rsp + 8]
0x000072d5      450f49da       cmovns r11d, r10d
0x000072d9      41bc01000000   mov r12d, 1
0x000072df      4d63db         movsxd r11, r11d
0x000072e2      4d85db         test r11, r11                           ; ../coreutils-8.31/lib/nstrftime.c:-1377
0x000072e5      4d0f45e3       cmovne r12, r11
0x000072e9      4c29f0         sub rax, r14
0x000072ec      4c39e0         cmp rax, r12
0x000072ef      0f8677ecffff   jbe 0x5f6c
0x000072f5      4885ed         test rbp, rbp
0x000072f8      7462           je 0x735c
0x000072fa      8b442448       mov eax, dword [rsp + 0x48]
0x000072fe      85c0           test eax, eax
0x00007300      7552           jne 0x7354
0x00007302      4983fb01       cmp r11, 1
0x00007306      764c           jbe 0x7354
0x00007308      4963c2         movsxd rax, r10d
0x0000730b      4889ef         mov rdi, rbp
0x0000730e      be20000000     mov esi, 0x20                           ; "@"
0x00007313      488d48ff       lea rcx, [rax - 1]
0x00007317      4c894c2460     mov qword [rsp + 0x60], r9
0x0000731c      4c89442458     mov qword [rsp + 0x58], r8
0x00007321      4c895c2450     mov qword [rsp + 0x50], r11
0x00007326      4489542440     mov dword [rsp + 0x40], r10d
0x0000732b      4889ca         mov rdx, rcx
0x0000732e      48894c2438     mov qword [rsp + 0x38], rcx
0x00007333      e818aaffff     call sym.imp.memset
0x00007338      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000733d      4c8b4c2460     mov r9, qword [rsp + 0x60]
0x00007342      4c8b442458     mov r8, qword [rsp + 0x58]
0x00007347      4c8b5c2450     mov r11, qword [rsp + 0x50]
0x0000734c      448b542440     mov r10d, dword [rsp + 0x40]
0x00007351      4801cd         add rbp, rcx
0x00007354      44887d00       mov byte [rbp], r15b
0x00007358      4883c501       add rbp, 1
0x0000735c      488b542408     mov rdx, qword [rsp + 8]
0x00007361      498d4917       lea rcx, [r9 + 0x17]
0x00007365      4d01e6         add r14, r12
0x00007368      41bf2d000000   mov r15d, 0x2d                          ; '-'
0x0000736e      4989dc         mov r12, rbx                            ; ../coreutils-8.31/lib/nstrftime.c:-1422
0x00007371      4c29c1         sub rcx, r8
0x00007374      4c29f2         sub rdx, r14
0x00007377      e9f9f7ffff     jmp 0x6b75
0x0000737c      0f1f4000       nop dword [rax]
0x00007380      e84baaffff     call sym.imp.memcpy
0x00007385      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000738a      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000738f      e92eeeffff     jmp 0x61c2
0x00007394      0f1f4000       nop dword [rax]
0x00007398      4889ef         mov rdi, rbp
0x0000739b      48894c2430     mov qword [rsp + 0x30], rcx             ; ../coreutils-8.31/lib/nstrftime.c:-1492
0x000073a0      e85beaffff     call sym.memcpy_lowcase
0x000073a5      488b4c2430     mov rcx, qword [rsp + 0x30]
0x000073aa      e9ecefffff     jmp 0x639b
0x000073af      4889ef         mov rdi, rbp
0x000073b2      be30000000     mov esi, 0x30                           ; '0'
0x000073b7      e894a9ffff     call sym.imp.memset
0x000073bc      488b6c2438     mov rbp, qword [rsp + 0x38]
0x000073c1      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000073c7      488b4c2448     mov rcx, qword [rsp + 0x48]
0x000073cc      4c8b4c2450     mov r9, qword [rsp + 0x50]
0x000073d1      e998efffff     jmp 0x636e
0x000073d6      4889ef         mov rdi, rbp                            ; string_fortified.h:-2531
0x000073d9      be30000000     mov esi, 0x30                           ; '0'
0x000073de      4889dd         mov rbp, rbx
0x000073e1      e86aa9ffff     call sym.imp.memset
0x000073e6      4c8b4c2438     mov r9, qword [rsp + 0x38]
0x000073eb      488b4c2440     mov rcx, qword [rsp + 0x40]
0x000073f0      4c8b442448     mov r8, qword [rsp + 0x48]
0x000073f5      e99bedffff     jmp 0x6195
0x000073fa      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/nstrftime.c:-1524
0x000073fd      be30000000     mov esi, 0x30                           ; '0'
0x00007402      e849a9ffff     call sym.imp.memset
0x00007407      488b6c2438     mov rbp, qword [rsp + 0x38]
0x0000740c      488b4c2440     mov rcx, qword [rsp + 0x40]
0x00007411      4c8b442448     mov r8, qword [rsp + 0x48]
0x00007416      e9cdf7ffff     jmp 0x6be8
0x0000741b      be70000000     mov esi, 0x70                           ; 'p'
0x00007420      c644243000     mov byte [rsp + 0x30], 0
0x00007425      e93beeffff     jmp 0x6265
0x0000742a      31ff           xor edi, edi
0x0000742c      e9fbefffff     jmp 0x642c
0x00007431      c644243800     mov byte [rsp + 0x38], 0
0x00007436      4d63fc         movsxd r15, r12d
0x00007439      4939d7         cmp r15, rdx
0x0000743c      0f832aebffff   jae 0x5f6c
0x00007442      4885ed         test rbp, rbp
0x00007445      7431           je 0x7478
0x00007447      4889ef         mov rdi, rbp
0x0000744a      4c89fa         mov rdx, r15
0x0000744d      be20000000     mov esi, 0x20                           ; "@"
0x00007452      4489542458     mov dword [rsp + 0x58], r10d
0x00007457      4c894c2450     mov qword [rsp + 0x50], r9
0x0000745c      4c01fd         add rbp, r15
0x0000745f      4c89442440     mov qword [rsp + 0x40], r8
0x00007464      e8e7a8ffff     call sym.imp.memset
0x00007469      448b542458     mov r10d, dword [rsp + 0x58]
0x0000746e      4c8b4c2450     mov r9, qword [rsp + 0x50]
0x00007473      4c8b442440     mov r8, qword [rsp + 0x40]
0x00007478      488b542408     mov rdx, qword [rsp + 8]
0x0000747d      4489d0         mov eax, r10d
0x00007480      4d01fe         add r14, r15
0x00007483      4429e0         sub eax, r12d
0x00007486      4539e2         cmp r10d, r12d
0x00007489      41ba00000000   mov r10d, 0
0x0000748f      440f4fd0       cmovg r10d, eax
0x00007493      4c29f2         sub rdx, r14
0x00007496      807c243800     cmp byte [rsp + 0x38], 0
0x0000749b      0f8521010000   jne 0x75c2
0x000074a1      4983c117       add r9, 0x17
0x000074a5      4d63da         movsxd r11, r10d
0x000074a8      4989dc         mov r12, rbx
0x000074ab      4c89c9         mov rcx, r9
0x000074ae      41bf5f000000   mov r15d, 0x5f                          ; '_'
0x000074b4      4c29c1         sub rcx, r8
0x000074b7      e9b9f6ffff     jmp 0x6b75
0x000074bc      4585d2         test r10d, r10d
0x000074bf      41bb00000000   mov r11d, 0
0x000074c5      41bc01000000   mov r12d, 1
0x000074cb      450f49da       cmovns r11d, r10d
0x000074cf      4d63db         movsxd r11, r11d
0x000074d2      4d85db         test r11, r11
0x000074d5      4d0f45e3       cmovne r12, r11
0x000074d9      4939d4         cmp r12, rdx
0x000074dc      0f838aeaffff   jae 0x5f6c
0x000074e2      4885ed         test rbp, rbp
0x000074e5      7479           je 0x7560
0x000074e7      8b7c2448       mov edi, dword [rsp + 0x48]
0x000074eb      85ff           test edi, edi
0x000074ed      7565           jne 0x7554
0x000074ef      4983fb01       cmp r11, 1
0x000074f3      765f           jbe 0x7554
0x000074f5      4963d2         movsxd rdx, r10d
0x000074f8      448954246c     mov dword [rsp + 0x6c], r10d
0x000074fd      4c89442460     mov qword [rsp + 0x60], r8
0x00007502      4883ea01       sub rdx, 1
0x00007506      4183ff30       cmp r15d, 0x30
0x0000750a      48894c2458     mov qword [rsp + 0x58], rcx             ; ../coreutils-8.31/lib/nstrftime.c:-2343
0x0000750f      488d441500     lea rax, [rbp + rdx]                    ; ../coreutils-8.31/lib/nstrftime.c:-1423
0x00007514      4c895c2450     mov qword [rsp + 0x50], r11
0x00007519      4889442440     mov qword [rsp + 0x40], rax
0x0000751e      0f84cb030000   je 0x78ef
0x00007524      4183ff2b       cmp r15d, 0x2b
0x00007528      0f84c1030000   je 0x78ef
0x0000752e      4889ef         mov rdi, rbp
0x00007531      be20000000     mov esi, 0x20                           ; "@"
0x00007536      e815a8ffff     call sym.imp.memset
0x0000753b      488b6c2440     mov rbp, qword [rsp + 0x40]
0x00007540      448b54246c     mov r10d, dword [rsp + 0x6c]
0x00007545      4c8b442460     mov r8, qword [rsp + 0x60]
0x0000754a      488b4c2458     mov rcx, qword [rsp + 0x58]
0x0000754f      4c8b5c2450     mov r11, qword [rsp + 0x50]
0x00007554      0fb6442438     movzx eax, byte [rsp + 0x38]
0x00007559      4883c501       add rbp, 1
0x0000755d      8845ff         mov byte [rbp - 1], al
0x00007560      488b542408     mov rdx, qword [rsp + 8]
0x00007565      4d01e6         add r14, r12
0x00007568      4989dc         mov r12, rbx
0x0000756b      4c29f2         sub rdx, r14
0x0000756e      e902f6ffff     jmp 0x6b75
0x00007573      41bf2b000000   mov r15d, 0x2b                          ; '+'
0x00007579      e949fdffff     jmp 0x72c7
0x0000757e      4989dc         mov r12, rbx
0x00007581      e94ceaffff     jmp 0x5fd2
0x00007586      b894f8ffff     mov eax, 0xfffff894                     ; 4294965396
0x0000758b      428d8c076c07.  lea ecx, [rdi + r8 + 0x76c]
0x00007593      4429c0         sub eax, r8d
0x00007596      39c7           cmp edi, eax
0x00007598      0f9c442438     setl byte [rsp + 0x38]
0x0000759d      0f9dc0         setge al
0x000075a0      4585ff         test r15d, r15d
0x000075a3      0f8487f1ffff   je 0x6730
0x000075a9      4183ff2b       cmp r15d, 0x2b
0x000075ad      0f858cf1ffff   jne 0x673f
0x000075b3      bf04000000     mov edi, 4
0x000075b8      ba0f270000     mov edx, 0x270f
0x000075bd      e94bfaffff     jmp 0x700d                              ; string_fortified.h:-2696
0x000075c2      4d63fa         movsxd r15, r10d
0x000075c5      41bc01000000   mov r12d, 1
0x000075cb      4d85ff         test r15, r15
0x000075ce      4d0f45e7       cmovne r12, r15
0x000075d2      4939d4         cmp r12, rdx
0x000075d5      0f8391e9ffff   jae 0x5f6c
0x000075db      4885ed         test rbp, rbp
0x000075de      745b           je 0x763b
0x000075e0      448b5c2448     mov r11d, dword [rsp + 0x48]
0x000075e5      4585db         test r11d, r11d
0x000075e8      7545           jne 0x762f
0x000075ea      4983ff01       cmp r15, 1
0x000075ee      763f           jbe 0x762f
0x000075f0      498d4fff       lea rcx, [r15 - 1]
0x000075f4      4889ef         mov rdi, rbp
0x000075f7      be20000000     mov esi, 0x20                           ; "@"
0x000075fc      4489542460     mov dword [rsp + 0x60], r10d
0x00007601      4c894c2458     mov qword [rsp + 0x58], r9
0x00007606      4889ca         mov rdx, rcx
0x00007609      4c89442450     mov qword [rsp + 0x50], r8
0x0000760e      48894c2440     mov qword [rsp + 0x40], rcx
0x00007613      e838a7ffff     call sym.imp.memset
0x00007618      488b4c2440     mov rcx, qword [rsp + 0x40]
0x0000761d      448b542460     mov r10d, dword [rsp + 0x60]
0x00007622      4c8b4c2458     mov r9, qword [rsp + 0x58]
0x00007627      4c8b442450     mov r8, qword [rsp + 0x50]
0x0000762c      4801cd         add rbp, rcx                            ; ../coreutils-8.31/lib/nstrftime.c:-1880
0x0000762f      0fb6442438     movzx eax, byte [rsp + 0x38]
0x00007634      4883c501       add rbp, 1
0x00007638      8845ff         mov byte [rbp - 1], al
0x0000763b      488b542408     mov rdx, qword [rsp + 8]
0x00007640      4983c117       add r9, 0x17
0x00007644      4d01e6         add r14, r12
0x00007647      4c89c9         mov rcx, r9
0x0000764a      4d89fb         mov r11, r15
0x0000764d      4989dc         mov r12, rbx
0x00007650      4c29c1         sub rcx, r8
0x00007653      41bf5f000000   mov r15d, 0x5f                          ; '_'
0x00007659      4c29f2         sub rdx, r14
0x0000765c      e914f5ffff     jmp 0x6b75
0x00007661      8b8c24180500.  mov ecx, dword [rsp + 0x518]
0x00007668      bf09000000     mov edi, 9
0x0000766d      41ba09000000   mov r10d, 9
0x00007673      e988edffff     jmp 0x6400
0x00007678      4989dc         mov r12, rbx
0x0000767b      4989d9         mov r9, rbx
0x0000767e      41b801000000   mov r8d, 1
0x00007684      e9a8eaffff     jmp 0x6131
0x00007689      4183ff5f       cmp r15d, 0x5f
0x0000768d      0f849efdffff   je 0x7431
0x00007693      4863442448     movsxd rax, dword [rsp + 0x48]
0x00007698      4839d0         cmp rax, rdx
0x0000769b      0f83cbe8ffff   jae 0x5f6c
0x000076a1      4d63cc         movsxd r9, r12d
0x000076a4      4989dc         mov r12, rbx
0x000076a7      e982f4ffff     jmp 0x6b2e
0x000076ac      4889ef         mov rdi, rbp
0x000076af      be30000000     mov esi, 0x30                           ; '0'
0x000076b4      e897a6ffff     call sym.imp.memset
0x000076b9      488b6c2450     mov rbp, qword [rsp + 0x50]
0x000076be      4c8b5c2458     mov r11, qword [rsp + 0x58]
0x000076c3      e90eefffff     jmp 0x65d6
0x000076c8      4183ec01       sub r12d, 1
0x000076cc      ba6d010000     mov edx, 0x16d
0x000076d1      41f6c403       test r12b, 3
0x000076d5      753c           jne 0x7713
0x000076d7      4489e0         mov eax, r12d
0x000076da      ba1f85eb51     mov edx, 0x51eb851f
0x000076df      f7ea           imul edx
0x000076e1      89d0           mov eax, edx
0x000076e3      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/nstrftime.c:-1876
0x000076e6      c1fa1f         sar edx, 0x1f
0x000076e9      c1f805         sar eax, 5
0x000076ec      29d0           sub eax, edx
0x000076ee      ba6e010000     mov edx, 0x16e
0x000076f3      6bc064         imul eax, eax, 0x64
0x000076f6      4139c4         cmp r12d, eax
0x000076f9      7518           jne 0x7713
0x000076fb      4489e0         mov eax, r12d
0x000076fe      b990010000     mov ecx, 0x190
0x00007703      99             cdq
0x00007704      f7f9           idiv ecx
0x00007706      83fa01         cmp edx, 1                              ; ../coreutils-8.31/lib/nstrftime.c:-2424
0x00007709      19d2           sbb edx, edx
0x0000770b      f7d2           not edx
0x0000770d      81c26e010000   add edx, 0x16e
0x00007713      4101d0         add r8d, edx
0x00007716      ba93244992     mov edx, 0x92492493
0x0000771b      4489c1         mov ecx, r8d
0x0000771e      2b4c2438       sub ecx, dword [rsp + 0x38]
0x00007722      81c17e010000   add ecx, 0x17e
0x00007728      89c8           mov eax, ecx
0x0000772a      4129c8         sub r8d, ecx
0x0000772d      f7ea           imul edx
0x0000772f      8d040a         lea eax, [rdx + rcx]
0x00007732      89ca           mov edx, ecx
0x00007734      c1fa1f         sar edx, 0x1f
0x00007737      c1f802         sar eax, 2
0x0000773a      29d0           sub eax, edx                            ; ../coreutils-8.31/lib/nstrftime.c:-2420
0x0000773c      8d14c5000000.  lea edx, [rax*8]
0x00007743      29c2           sub edx, eax
0x00007745      418d4c1003     lea ecx, [r8 + rdx + 3]
0x0000774a      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x00007750      e9eaf6ffff     jmp 0x6e3f
0x00007755      6bf664         imul esi, esi, 0x64
0x00007758      c644244001     mov byte [rsp + 0x40], 1
0x0000775d      bf09000000     mov edi, 9
0x00007762      4169c4102700.  imul eax, r12d, 0x2710
0x00007769      01f0           add eax, esi
0x0000776b      be14000000     mov esi, 0x14
0x00007770      01c1           add ecx, eax
0x00007772      0fb6442438     movzx eax, byte [rsp + 0x38]
0x00007777      83f001         xor eax, 1
0x0000777a      e998ecffff     jmp 0x6417
0x0000777f      89c8           mov eax, ecx
0x00007781      ba93244992     mov edx, 0x92492493
0x00007786      bf02000000     mov edi, 2
0x0000778b      f7ea           imul edx
0x0000778d      8d040a         lea eax, [rdx + rcx]
0x00007790      c1f91f         sar ecx, 0x1f
0x00007793      c1f802         sar eax, 2
0x00007796      29c8           sub eax, ecx
0x00007798      89c1           mov ecx, eax
0x0000779a      83c101         add ecx, 1
0x0000779d      e95eecffff     jmp 0x6400
0x000077a2      0fb6442438     movzx eax, byte [rsp + 0x38]
0x000077a7      c644244001     mov byte [rsp + 0x40], 1
0x000077ac      bf06000000     mov edi, 6
0x000077b1      416bcc64       imul ecx, r12d, 0x64
0x000077b5      83f001         xor eax, 1
0x000077b8      01f1           add ecx, esi
0x000077ba      be04000000     mov esi, 4
0x000077bf      e953ecffff     jmp 0x6417
0x000077c4      4889ef         mov rdi, rbp
0x000077c7      be30000000     mov esi, 0x30                           ; '0'
0x000077cc      4c89e5         mov rbp, r12
0x000077cf      e87ca5ffff     call sym.imp.memset
0x000077d4      488b4c2430     mov rcx, qword [rsp + 0x30]
0x000077d9      e9eeecffff     jmp 0x64cc
0x000077de      4889ef         mov rdi, rbp
0x000077e1      be30000000     mov esi, 0x30                           ; '0'
0x000077e6      4c89e5         mov rbp, r12
0x000077e9      e862a5ffff     call sym.imp.memset
0x000077ee      488b4c2430     mov rcx, qword [rsp + 0x30]
0x000077f3      e93afaffff     jmp 0x7232
0x000077f8      e8d3a5ffff     call sym.imp.memcpy
0x000077fd      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00007802      e92ef0ffff     jmp 0x6835
0x00007807      488b742420     mov rsi, qword [rsp + 0x20]
0x0000780c      4c89e2         mov rdx, r12
0x0000780f      4889ef         mov rdi, rbp
0x00007812      48894c2430     mov qword [rsp + 0x30], rcx
0x00007817      e8e4e5ffff     call sym.memcpy_lowcase
0x0000781c      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00007821      e90ff0ffff     jmp 0x6835
0x00007826      88442430       mov byte [rsp + 0x30], al
0x0000782a      e9c1e8ffff     jmp 0x60f0
0x0000782f      0fb60b         movzx ecx, byte [rbx]
0x00007832      4989d9         mov r9, rbx
0x00007835      e95ff8ffff     jmp 0x7099
0x0000783a      488d4b02       lea rcx, [rbx + 2]
0x0000783e      41b801000000   mov r8d, 1
0x00007844      4889ca         mov rdx, rcx
0x00007847      4883c101       add rcx, 1
0x0000784b      0fb641ff       movzx eax, byte [rcx - 1]
0x0000784f      4983c001       add r8, 1
0x00007853      3c3a           cmp al, 0x3a
0x00007855      0f85d2f4ffff   jne 0x6d2d
0x0000785b      ebe7           jmp 0x7844
0x0000785d      4489d6         mov esi, r10d
0x00007860      b800000000     mov eax, 0
0x00007865      83ee06         sub esi, 6
0x00007868      0f49c6         cmovns eax, esi
0x0000786b      89442438       mov dword [rsp + 0x38], eax
0x0000786f      488d05e85f00.  lea rax, str.Y__m__d                    ; 0xd85e ; "%Y-%m-%d"
0x00007876      4889442440     mov qword [rsp + 0x40], rax
0x0000787b      e992ecffff     jmp 0x6512
0x00007880      416bcc64       imul ecx, r12d, 0x64
0x00007884      31f6           xor esi, esi
0x00007886      c644244001     mov byte [rsp + 0x40], 1
0x0000788b      bf05000000     mov edi, 5
0x00007890      01c1           add ecx, eax
0x00007892      0fb6442438     movzx eax, byte [rsp + 0x38]
0x00007897      83f001         xor eax, 1
0x0000789a      e978ebffff     jmp 0x6417
0x0000789f      4889ef         mov rdi, rbp
0x000078a2      be30000000     mov esi, 0x30                           ; '0'
0x000078a7      e8a4a4ffff     call sym.imp.memset
0x000078ac      488b6c2438     mov rbp, qword [rsp + 0x38]
0x000078b1      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000078b7      488b4c2448     mov rcx, qword [rsp + 0x48]
0x000078bc      e946efffff     jmp 0x6807
0x000078c1      4889ef         mov rdi, rbp
0x000078c4      be30000000     mov esi, 0x30                           ; '0'
0x000078c9      4c89e5         mov rbp, r12
0x000078cc      e87fa4ffff     call sym.imp.memset
0x000078d1      488b4c2440     mov rcx, qword [rsp + 0x40]
0x000078d6      4c8b4c2450     mov r9, qword [rsp + 0x50]
0x000078db      4c8b442458     mov r8, qword [rsp + 0x58]
0x000078e0      e93af2ffff     jmp 0x6b1f
0x000078e5      be30000000     mov esi, 0x30                           ; '0'
0x000078ea      e99cedffff     jmp 0x668b
0x000078ef      4889ef         mov rdi, rbp
0x000078f2      be30000000     mov esi, 0x30                           ; '0'
0x000078f7      e854a4ffff     call sym.imp.memset
0x000078fc      488b6c2440     mov rbp, qword [rsp + 0x40]
0x00007901      4c8b5c2450     mov r11, qword [rsp + 0x50]
0x00007906      488b4c2458     mov rcx, qword [rsp + 0x58]
0x0000790b      4c8b442460     mov r8, qword [rsp + 0x60]
0x00007910      448b54246c     mov r10d, dword [rsp + 0x6c]
0x00007915      e93afcffff     jmp 0x7554
0x0000791a      c644243800     mov byte [rsp + 0x38], 0
0x0000791f      bf02000000     mov edi, 2
0x00007924      e9f7f6ffff     jmp 0x7020
0x00007929      8b8c24180500.  mov ecx, dword [rsp + 0x518]
0x00007930      e911f8ffff     jmp 0x7146
0x00007935      e876a3ffff     call sym.imp.__stack_chk_fail
0x0000793a      83c164         add ecx, 0x64
0x0000793d      4585ff         test r15d, r15d
0x00007940      0f8464f5ffff   je 0x6eaa
0x00007946      e937efffff     jmp 0x6882
0x0000794b      31ff           xor edi, edi
0x0000794d      e9eaeaffff     jmp 0x643c
0x00007952      0f1f4000       nop dword [rax]
0x00007956      662e0f1f8400.  nop word cs:[rax + rax]
;-- nstrftime:
0x00007960      4883ec18       sub rsp, 0x18
0x00007964      64488b042528.  mov rax, qword fs:[0x28]
0x0000796d      4889442408     mov qword [rsp + 8], rax
0x00007972      31c0           xor eax, eax
0x00007974      c644240700     mov byte [rsp + 7], 0
0x00007979      4151           push r9
0x0000797b      4531c9         xor r9d, r9d
0x0000797e      4150           push r8
0x00007980      4531c0         xor r8d, r8d
0x00007983      488d442417     lea rax, [rsp + 0x17]
0x00007988      50             push rax
0x00007989      6aff           push 0xffffffffffffffff
0x0000798b      e810e5ffff     call sym.__strftime_internal
0x00007990      4883c420       add rsp, 0x20
0x00007994      488b542408     mov rdx, qword [rsp + 8]
0x00007999      644833142528.  xor rdx, qword fs:[0x28]
0x000079a2      7505           jne 0x79a9
0x000079a4      4883c418       add rsp, 0x18
0x000079a8      c3             ret
0x000079a9      e802a3ffff     call sym.imp.__stack_chk_fail
0x000079ae      6690           nop
;-- set_program_name:
0x000079b0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x000079b3      53             push rbx
0x000079b4      7477           je 0x7a2d                               ; ../coreutils-8.31/lib/progname.c:51
0x000079b6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x000079bb      4889fb         mov rbx, rdi
0x000079be      e83da3ffff     call sym.imp.strrchr
0x000079c3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x000079c6      7455           je 0x7a1d
0x000079c8      4c8d4001       lea r8, [rax + 1]
0x000079cc      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x000079cf      4829da         sub rdx, rbx
0x000079d2      4883fa06       cmp rdx, 6
0x000079d6      7e45           jle 0x7a1d
0x000079d8      488d70fa       lea rsi, [rax - 6]
0x000079dc      488d3db56000.  lea rdi, str..libs                      ; 0xda98 ; "/.libs/"
0x000079e3      b907000000     mov ecx, 7
0x000079e8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000079ea      0f97c2         seta dl
0x000079ed      80da00         sbb dl, 0
0x000079f0      84d2           test dl, dl
0x000079f2      7529           jne 0x7a1d
0x000079f4      488d3da56000.  lea rdi, [0x0000daa0]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x000079fb      b903000000     mov ecx, 3
0x00007a00      4c89c6         mov rsi, r8
0x00007a03      4c89c3         mov rbx, r8
0x00007a06      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00007a08      0f97c2         seta dl
0x00007a0b      80da00         sbb dl, 0
0x00007a0e      84d2           test dl, dl
0x00007a10      750b           jne 0x7a1d
0x00007a12      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00007a16      48891dc39620.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x2110e0:8]=0
0x00007a1d      48891d1c9820.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x211240:8]=0
0x00007a24      48891ddd9620.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x211108:8]=0
0x00007a2b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00007a2c      c3             ret
0x00007a2d      488b0dec9620.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211120:8]=0
0x00007a34      488d3d256000.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0xda60 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00007a3b      ba37000000     mov edx, 0x37                           ; '7'
0x00007a40      be01000000     mov esi, 1
0x00007a45      e8f6a4ffff     call sym.imp.fwrite
0x00007a4a      e851a1ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00007a4f      90             nop
;-- gettext_quote.part.1:
0x00007a50      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00007a51      53             push rbx
0x00007a52      4889fd         mov rbp, rdi
0x00007a55      89f3           mov ebx, esi
0x00007a57      4883ec08       sub rsp, 8
0x00007a5b      e810430000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00007a60      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00007a63      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00007a66      80fa55         cmp dl, 0x55
0x00007a69      7475           je 0x7ae0
0x00007a6b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00007a6e      7420           je 0x7a90
0x00007a70      488d053c6000.  lea rax, str.l______l                   ; 0xdab3 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007a77      488d15ab6a00.  lea rdx, [0x0000e529]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; "'"
0x00007a7e      83fb09         cmp ebx, 9
0x00007a81      480f45c2       cmovne rax, rdx
0x00007a85      4883c408       add rsp, 8
0x00007a89      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00007a8a      5d             pop rbp
0x00007a8b      c3             ret
0x00007a8c      0f1f4000       nop dword [rax]
0x00007a90      0fb65001       movzx edx, byte [rax + 1]
0x00007a94      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00007a97      80fa42         cmp dl, 0x42
0x00007a9a      75d4           jne 0x7a70
0x00007a9c      80780231       cmp byte [rax + 2], 0x31
0x00007aa0      75ce           jne 0x7a70
0x00007aa2      80780338       cmp byte [rax + 3], 0x38
0x00007aa6      75c8           jne 0x7a70
0x00007aa8      80780430       cmp byte [rax + 4], 0x30
0x00007aac      75c2           jne 0x7a70
0x00007aae      80780533       cmp byte [rax + 5], 0x33
0x00007ab2      75bc           jne 0x7a70
0x00007ab4      80780630       cmp byte [rax + 6], 0x30
0x00007ab8      75b6           jne 0x7a70
0x00007aba      80780700       cmp byte [rax + 7], 0
0x00007abe      75b0           jne 0x7a70
0x00007ac0      807d0060       cmp byte [rbp], 0x60
0x00007ac4      488d05e15f00.  lea rax, [0x0000daac]
0x00007acb      488d15de5f00.  lea rdx, [0x0000dab0]
0x00007ad2      480f45c2       cmovne rax, rdx
0x00007ad6      4883c408       add rsp, 8
0x00007ada      5b             pop rbx
0x00007adb      5d             pop rbp
0x00007adc      c3             ret
0x00007add      0f1f00         nop dword [rax]
0x00007ae0      0fb65001       movzx edx, byte [rax + 1]
0x00007ae4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00007ae7      80fa54         cmp dl, 0x54
0x00007aea      7584           jne 0x7a70
0x00007aec      0fb65002       movzx edx, byte [rax + 2]
0x00007af0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00007af3      80fa46         cmp dl, 0x46
0x00007af6      0f8574ffffff   jne 0x7a70
0x00007afc      8078032d       cmp byte [rax + 3], 0x2d
0x00007b00      0f856affffff   jne 0x7a70
0x00007b06      80780438       cmp byte [rax + 4], 0x38
0x00007b0a      0f8560ffffff   jne 0x7a70
0x00007b10      80780500       cmp byte [rax + 5], 0
0x00007b14      0f8556ffffff   jne 0x7a70
0x00007b1a      807d0060       cmp byte [rbp], 0x60
0x00007b1e      488d057f5f00.  lea rax, [0x0000daa4]                   ; "\u2018"
0x00007b25      488d157c5f00.  lea rdx, [0x0000daa8]                   ; "\u2019"
0x00007b2c      480f45c2       cmovne rax, rdx
0x00007b30      4883c408       add rsp, 8
0x00007b34      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00007b35      5d             pop rbp
0x00007b36      c3             ret
0x00007b37      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00007b40      4157           push r15
0x00007b42      4156           push r14
0x00007b44      4589c7         mov r15d, r8d
0x00007b47      4155           push r13
0x00007b49      4154           push r12
0x00007b4b      4989fe         mov r14, rdi
0x00007b4e      55             push rbp
0x00007b4f      53             push rbx
0x00007b50      4489cb         mov ebx, r9d
0x00007b53      4989f5         mov r13, rsi
0x00007b56      4889cd         mov rbp, rcx
0x00007b59      83e302         and ebx, 2
0x00007b5c      4881ecb80000.  sub rsp, 0xb8
0x00007b63      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00007b6b      4889542410     mov qword [rsp + 0x10], rdx
0x00007b70      4489442408     mov dword [rsp + 8], r8d
0x00007b75      44894c2478     mov dword [rsp + 0x78], r9d
0x00007b7a      4889442420     mov qword [rsp + 0x20], rax
0x00007b7f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00007b87      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00007b8c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00007b94      4889442460     mov qword [rsp + 0x60], rax
0x00007b99      64488b042528.  mov rax, qword fs:[0x28]
0x00007ba2      48898424a800.  mov qword [rsp + 0xa8], rax
0x00007baa      31c0           xor eax, eax
0x00007bac      e8dfa0ffff     call sym.imp.__ctype_get_mb_cur_max
0x00007bb1      4183ff0a       cmp r15d, 0xa
0x00007bb5      4889442458     mov qword [rsp + 0x58], rax
0x00007bba      0f87af110000   ja 0x8d6f
0x00007bc0      488d0d595f00.  lea rcx, [0x0000db20]
0x00007bc7      4489fa         mov edx, r15d
0x00007bca      48630491       movsxd rax, dword [rcx + rdx*4]
0x00007bce      4801c8         add rax, rcx
0x00007bd1      ffe0           jmp rax
0x00007bd3      c644240e01     mov byte [rsp + 0xe], 1
0x00007bd8      c644247c00     mov byte [rsp + 0x7c], 0
0x00007bdd      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00007be0      48c744245000.  mov qword [rsp + 0x50], 0
0x00007be9      c644240f01     mov byte [rsp + 0xf], 1
0x00007bee      c644240d00     mov byte [rsp + 0xd], 0
0x00007bf3      488d052f6900.  lea rax, [0x0000e529]                   ; "'"
0x00007bfa      48c744241801.  mov qword [rsp + 0x18], 1
0x00007c03      4531ff         xor r15d, r15d
0x00007c06      c74424080200.  mov dword [rsp + 8], 2
0x00007c0e      4889442448     mov qword [rsp + 0x48], rax
0x00007c13      4531db         xor r11d, r11d
0x00007c16      4889e8         mov rax, rbp
0x00007c19      4589e0         mov r8d, r12d
0x00007c1c      4c89dd         mov rbp, r11
0x00007c1f      4989c3         mov r11, rax
0x00007c22      660f1f440000   nop word [rax + rax]
0x00007c28      4939eb         cmp r11, rbp
0x00007c2b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00007c2f      4983fbff       cmp r11, 0xffffffffffffffff
0x00007c33      750d           jne 0x7c42
0x00007c35      488b442410     mov rax, qword [rsp + 0x10]
0x00007c3a      803c2800       cmp byte [rax + rbp], 0
0x00007c3e      410f95c4       setne r12b
0x00007c42      4584e4         test r12b, r12b
0x00007c45      0f8455060000   je 0x82a0
0x00007c4b      837c240802     cmp dword [rsp + 8], 2
0x00007c50      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007c55      4c8d0c2f       lea r9, [rdi + rbp]
0x00007c59      0f95c0         setne al
0x00007c5c      2244240d       and al, byte [rsp + 0xd]
0x00007c60      4189c2         mov r10d, eax
0x00007c63      0f84a7000000   je 0x7d10
0x00007c69      488b442418     mov rax, qword [rsp + 0x18]
0x00007c6e      4885c0         test rax, rax
0x00007c71      0f8429040000   je 0x80a0
0x00007c77      4983fbff       cmp r11, 0xffffffffffffffff
0x00007c7b      488d5c0500     lea rbx, [rbp + rax]
0x00007c80      752e           jne 0x7cb0
0x00007c82      4883f801       cmp rax, 1
0x00007c86      7628           jbe 0x7cb0
0x00007c88      4488442438     mov byte [rsp + 0x38], r8b
0x00007c8d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00007c92      4c894c2428     mov qword [rsp + 0x28], r9
0x00007c97      e804a0ffff     call sym.imp.strlen
0x00007c9c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00007ca2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00007ca8      4989c3         mov r11, rax
0x00007cab      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00007cb0      4c39db         cmp rbx, r11
0x00007cb3      4488542428     mov byte [rsp + 0x28], r10b
0x00007cb8      0f87b2050000   ja 0x8270
0x00007cbe      488b542418     mov rdx, qword [rsp + 0x18]
0x00007cc3      488b742448     mov rsi, qword [rsp + 0x48]
0x00007cc8      4c89cf         mov rdi, r9
0x00007ccb      4c895c2440     mov qword [rsp + 0x40], r11
0x00007cd0      4488442438     mov byte [rsp + 0x38], r8b
0x00007cd5      4c894c2430     mov qword [rsp + 0x30], r9
0x00007cda      e8a1a0ffff     call sym.imp.memcmp
0x00007cdf      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00007ce1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00007ce6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00007cec      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00007cf1      0f8579050000   jne 0x8270
0x00007cf7      807c240f00     cmp byte [rsp + 0xf], 0
0x00007cfc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00007d02      0f857d0f0000   jne 0x8c85
0x00007d08      0f1f84000000.  nop dword [rax + rax]
0x00007d10      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00007d14      80fb7e         cmp bl, 0x7e
0x00007d17      0f871b030000   ja 0x8038
0x00007d1d      488d0d285e00.  lea rcx, [0x0000db4c]
0x00007d24      0fb6d3         movzx edx, bl
0x00007d27      48630491       movsxd rax, dword [rcx + rdx*4]
0x00007d2b      4801c8         add rax, rcx
0x00007d2e      ffe0           jmp rax
0x00007d30      4531d2         xor r10d, r10d
0x00007d33      4983fb01       cmp r11, 1
0x00007d37      0f95c0         setne al
0x00007d3a      4983fbff       cmp r11, 0xffffffffffffffff
0x00007d3e      750c           jne 0x7d4c
0x00007d40      488b442410     mov rax, qword [rsp + 0x10]
0x00007d45      80780100       cmp byte [rax + 1], 0
0x00007d49      0f95c0         setne al
0x00007d4c      837c240802     cmp dword [rsp + 8], 2
0x00007d51      0f94c2         sete dl
0x00007d54      84c0           test al, al
0x00007d56      0f844c020000   je 0x7fa8
0x00007d5c      4531e4         xor r12d, r12d
0x00007d5f      31c0           xor eax, eax
0x00007d61      0f1f80000000.  nop dword [rax]
0x00007d68      807c240d01     cmp byte [rsp + 0xd], 1
0x00007d6d      0f850f010000   jne 0x7e82
0x00007d73      84d2           test dl, dl
0x00007d75      0f8507010000   jne 0x7e82
0x00007d7b      488b742420     mov rsi, qword [rsp + 0x20]
0x00007d80      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00007d83      7414           je 0x7d99
0x00007d85      89da           mov edx, ebx
0x00007d87      c0ea05         shr dl, 5
0x00007d8a      0fb6d2         movzx edx, dl
0x00007d8d      8b1496         mov edx, dword [rsi + rdx*4]
0x00007d90      0fa3da         bt edx, ebx
0x00007d93      0f824a010000   jb 0x7ee3
0x00007d99      4584d2         test r10b, r10b
0x00007d9c      0f8541010000   jne 0x7ee3
0x00007da2      83f001         xor eax, 1
0x00007da5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00007da9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00007dac      84c0           test al, al
0x00007dae      7420           je 0x7dd0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00007db0      4d39fd         cmp r13, r15
0x00007db3      7605           jbe 0x7dba
0x00007db5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00007dba      498d4701       lea rax, [r15 + 1]
0x00007dbe      4939c5         cmp r13, rax
0x00007dc1      7606           jbe 0x7dc9
0x00007dc3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00007dc9      4983c702       add r15, 2
0x00007dcd      4531c0         xor r8d, r8d
0x00007dd0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00007dd3      7304           jae 0x7dd9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00007dd5      43881c3e       mov byte [r14 + r15], bl
0x00007dd9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00007dde      4983c701       add r15, 1
0x00007de2      b800000000     mov eax, 0
0x00007de7      4584e4         test r12b, r12b
0x00007dea      0f44f8         cmove edi, eax
0x00007ded      40887c240e     mov byte [rsp + 0xe], dil
0x00007df2      e931feffff     jmp 0x7c28
0x00007df7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00007e00      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00007e03      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00007e07      83f802         cmp eax, 2
0x00007e0a      0f84b8050000   je 0x83c8
0x00007e10      83f805         cmp eax, 5
0x00007e13      0f846f050000   je 0x8388
0x00007e19      83f802         cmp eax, 2
0x00007e1c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00007e21      0f94c2         sete dl
0x00007e24      4531e4         xor r12d, r12d
0x00007e27      31c0           xor eax, eax
0x00007e29      e93affffff     jmp 0x7d68
0x00007e2e      6690           nop
0x00007e30      4531d2         xor r10d, r10d
0x00007e33      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00007e38      0f8402050000   je 0x8340
0x00007e3e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00007e43      31d2           xor edx, edx
0x00007e45      31c0           xor eax, eax
0x00007e47      bb27000000     mov ebx, 0x27                           ; '''
0x00007e4c      e917ffffff     jmp 0x7d68
0x00007e51      0f1f80000000.  nop dword [rax]
0x00007e58      ba09000000     mov edx, 9
0x00007e5d      bb74000000     mov ebx, 0x74                           ; 't'
0x00007e62      837c240802     cmp dword [rsp + 8], 2
0x00007e67      0f94c0         sete al
0x00007e6a      2244240f       and al, byte [rsp + 0xf]
0x00007e6e      0f854a010000   jne 0x7fbe
0x00007e74      807c240d00     cmp byte [rsp + 0xd], 0
0x00007e79      7565           jne 0x7ee0
0x00007e7b      89d3           mov ebx, edx
0x00007e7d      4531e4         xor r12d, r12d
0x00007e80      31c0           xor eax, eax
0x00007e82      807c240f00     cmp byte [rsp + 0xf], 0
0x00007e87      0f85eefeffff   jne 0x7d7b
0x00007e8d      e907ffffff     jmp 0x7d99                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00007e92      660f1f440000   nop word [rax + rax]
0x00007e98      ba08000000     mov edx, 8
0x00007e9d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00007ea2      ebd0           jmp 0x7e74
0x00007ea4      0f1f4000       nop dword [rax]
0x00007ea8      837c240802     cmp dword [rsp + 8], 2
0x00007ead      0f84cd030000   je 0x8280
0x00007eb3      807c240d00     cmp byte [rsp + 0xd], 0
0x00007eb8      0f8412020000   je 0x80d0
0x00007ebe      807c240f00     cmp byte [rsp + 0xf], 0
0x00007ec3      0f8407020000   je 0x80d0
0x00007ec9      48837c241800   cmp qword [rsp + 0x18], 0
0x00007ecf      0f85b6030000   jne 0x828b
0x00007ed5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00007eda      660f1f440000   nop word [rax + rax]
0x00007ee0      4531e4         xor r12d, r12d
0x00007ee3      837c240802     cmp dword [rsp + 8], 2
0x00007ee8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00007eeb      807c240f00     cmp byte [rsp + 0xf], 0
0x00007ef0      89d0           mov eax, edx
0x00007ef2      0f8550080000   jne 0x8748
0x00007ef8      4489c0         mov eax, r8d
0x00007efb      83f001         xor eax, 1
0x00007efe      20d0           and al, dl
0x00007f00      742f           je 0x7f31
0x00007f02      4d39fd         cmp r13, r15
0x00007f05      7605           jbe 0x7f0c
0x00007f07      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00007f0c      498d5701       lea rdx, [r15 + 1]
0x00007f10      4939d5         cmp r13, rdx
0x00007f13      7606           jbe 0x7f1b
0x00007f15      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00007f1b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00007f1f      4939d5         cmp r13, rdx
0x00007f22      7606           jbe 0x7f2a
0x00007f24      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00007f2a      4983c703       add r15, 3
0x00007f2e      4189c0         mov r8d, eax
0x00007f31      4d39fd         cmp r13, r15
0x00007f34      7605           jbe 0x7f3b
0x00007f36      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00007f3b      4983c701       add r15, 1
0x00007f3f      4883c501       add rbp, 1
0x00007f43      e988feffff     jmp 0x7dd0
0x00007f48      0f1f84000000.  nop dword [rax + rax]
0x00007f50      807c240d00     cmp byte [rsp + 0xd], 0
0x00007f55      0f85c8010000   jne 0x8123
0x00007f5b      31d2           xor edx, edx
0x00007f5d      f644247801     test byte [rsp + 0x78], 1
0x00007f62      0f8413ffffff   je 0x7e7b
0x00007f68      4883c501       add rbp, 1
0x00007f6c      e9b7fcffff     jmp 0x7c28
0x00007f71      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00007f78      837c240802     cmp dword [rsp + 8], 2
0x00007f7d      0f94c2         sete dl
0x00007f80      31c0           xor eax, eax
0x00007f82      e9e1fdffff     jmp 0x7d68
0x00007f87      660f1f840000.  nop word [rax + rax]
0x00007f90      ba07000000     mov edx, 7
0x00007f95      bb61000000     mov ebx, 0x61                           ; 'a'
0x00007f9a      e9d5feffff     jmp 0x7e74
0x00007f9f      90             nop
0x00007fa0      837c240802     cmp dword [rsp + 8], 2
0x00007fa5      0f94c2         sete dl
0x00007fa8      4885ed         test rbp, rbp
0x00007fab      0f85abfdffff   jne 0x7d5c
0x00007fb1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00007fb6      20d0           and al, dl
0x00007fb8      0f84aafdffff   je 0x7d68
0x00007fbe      4c89dd         mov rbp, r11
0x00007fc1      c74424080200.  mov dword [rsp + 8], 2
0x00007fc9      e9fb060000     jmp 0x86c9
0x00007fce      6690           nop
0x00007fd0      837c240802     cmp dword [rsp + 8], 2
0x00007fd5      0f94c2         sete dl
0x00007fd8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00007fdb      ebd4           jmp 0x7fb1
0x00007fdd      0f1f00         nop dword [rax]
0x00007fe0      837c240802     cmp dword [rsp + 8], 2
0x00007fe5      bb20000000     mov ebx, 0x20                           ; "@"
0x00007fea      0f94c2         sete dl
0x00007fed      ebc2           jmp 0x7fb1
0x00007fef      90             nop
0x00007ff0      ba0d000000     mov edx, 0xd
0x00007ff5      bb72000000     mov ebx, 0x72                           ; 'r'
0x00007ffa      e963feffff     jmp 0x7e62
0x00007fff      90             nop
0x00008000      ba0c000000     mov edx, 0xc
0x00008005      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000800a      e965feffff     jmp 0x7e74
0x0000800f      90             nop
0x00008010      ba0b000000     mov edx, 0xb
0x00008015      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000801a      e955feffff     jmp 0x7e74
0x0000801f      90             nop
0x00008020      ba0a000000     mov edx, 0xa
0x00008025      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000802a      e933feffff     jmp 0x7e62
0x0000802f      90             nop
0x00008030      4531d2         xor r10d, r10d
0x00008033      0f1f440000     nop dword [rax + rax]
0x00008038      48837c245801   cmp qword [rsp + 0x58], 1
0x0000803e      0f85a4030000   jne 0x83e8
0x00008044      4c895c2438     mov qword [rsp + 0x38], r11
0x00008049      4488442430     mov byte [rsp + 0x30], r8b
0x0000804e      4488542428     mov byte [rsp + 0x28], r10b
0x00008053      e8389fffff     call sym.imp.__ctype_b_loc
0x00008058      488b08         mov rcx, qword [rax]
0x0000805b      0fb6d3         movzx edx, bl
0x0000805e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00008064      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000806a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000806f      bf01000000     mov edi, 1
0x00008074      0fb70451       movzx eax, word [rcx + rdx*2]
0x00008078      66250040       and ax, 0x4000
0x0000807c      410f95c4       setne r12b
0x00008080      0f94c0         sete al
0x00008083      2244240d       and al, byte [rsp + 0xd]
0x00008087      84c0           test al, al
0x00008089      0f8592090000   jne 0x8a21
0x0000808f      837c240802     cmp dword [rsp + 8], 2
0x00008094      0f94c2         sete dl
0x00008097      e9ccfcffff     jmp 0x7d68
0x0000809c      0f1f4000       nop dword [rax]
0x000080a0      410fb619       movzx ebx, byte [r9]
0x000080a4      80fb7e         cmp bl, 0x7e
0x000080a7      7787           ja 0x8030
0x000080a9      488d0d985c00.  lea rcx, [0x0000dd48]
0x000080b0      0fb6d3         movzx edx, bl
0x000080b3      48630491       movsxd rax, dword [rcx + rdx*4]
0x000080b7      4801c8         add rax, rcx
0x000080ba      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x000080bc      0f1f4000       nop dword [rax]
0x000080c0      4531d2         xor r10d, r10d
0x000080c3      807c240d00     cmp byte [rsp + 0xd], 0
0x000080c8      0f85f0fdffff   jne 0x7ebe
0x000080ce      6690           nop
0x000080d0      ba5c000000     mov edx, 0x5c                           ; '\'
0x000080d5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000080da      e995fdffff     jmp 0x7e74
0x000080df      90             nop
0x000080e0      ba0c000000     mov edx, 0xc
0x000080e5      4531d2         xor r10d, r10d
0x000080e8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000080ed      e982fdffff     jmp 0x7e74
0x000080f2      660f1f440000   nop word [rax + rax]
0x000080f8      ba0a000000     mov edx, 0xa
0x000080fd      4531d2         xor r10d, r10d
0x00008100      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00008105      e958fdffff     jmp 0x7e62
0x0000810a      660f1f440000   nop word [rax + rax]
0x00008110      bb61000000     mov ebx, 0x61                           ; 'a'
0x00008115      e9c6fdffff     jmp 0x7ee0
0x0000811a      660f1f440000   nop word [rax + rax]
0x00008120      4531d2         xor r10d, r10d
0x00008123      837c240802     cmp dword [rsp + 8], 2
0x00008128      0f94c2         sete dl
0x0000812b      807c240f00     cmp byte [rsp + 0xf], 0
0x00008130      0f85940b0000   jne 0x8cca
0x00008136      4489c0         mov eax, r8d
0x00008139      4c89f9         mov rcx, r15
0x0000813c      83f001         xor eax, 1
0x0000813f      20d0           and al, dl
0x00008141      742d           je 0x8170
0x00008143      4d39fd         cmp r13, r15
0x00008146      7605           jbe 0x814d
0x00008148      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000814d      498d4f01       lea rcx, [r15 + 1]
0x00008151      4939cd         cmp r13, rcx
0x00008154      7606           jbe 0x815c
0x00008156      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000815c      498d4f02       lea rcx, [r15 + 2]
0x00008160      4939cd         cmp r13, rcx
0x00008163      0f8730060000   ja 0x8799
0x00008169      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000816d      4189c0         mov r8d, eax
0x00008170      4939cd         cmp r13, rcx
0x00008173      7605           jbe 0x817a
0x00008175      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000817a      837c240802     cmp dword [rsp + 8], 2
0x0000817f      4c8d7901       lea r15, [rcx + 1]
0x00008183      0f8400060000   je 0x8789
0x00008189      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000818d      4c39d8         cmp rax, r11
0x00008190      7319           jae 0x81ab                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00008192      488b442410     mov rax, qword [rsp + 0x10]
0x00008197      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000819c      88442428       mov byte [rsp + 0x28], al
0x000081a0      83e830         sub eax, 0x30
0x000081a3      3c09           cmp al, 9
0x000081a5      0f862e080000   jbe 0x89d9
0x000081ab      4489e0         mov eax, r12d
0x000081ae      bb30000000     mov ebx, 0x30                           ; '0'
0x000081b3      4531e4         xor r12d, r12d
0x000081b6      e9adfbffff     jmp 0x7d68                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x000081bb      0f1f440000     nop dword [rax + rax]
0x000081c0      837c240802     cmp dword [rsp + 8], 2
0x000081c5      4589d4         mov r12d, r10d
0x000081c8      0f94c2         sete dl
0x000081cb      4531d2         xor r10d, r10d
0x000081ce      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000081d0      e993fbffff     jmp 0x7d68                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x000081d5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000081d8      837c240802     cmp dword [rsp + 8], 2
0x000081dd      0f94c2         sete dl
0x000081e0      4531d2         xor r10d, r10d
0x000081e3      e9c0fdffff     jmp 0x7fa8
0x000081e8      0f1f84000000.  nop dword [rax + rax]
0x000081f0      837c240802     cmp dword [rsp + 8], 2
0x000081f5      0f94c2         sete dl
0x000081f8      4531d2         xor r10d, r10d
0x000081fb      4531e4         xor r12d, r12d
0x000081fe      e9aefdffff     jmp 0x7fb1
0x00008203      0f1f440000     nop dword [rax + rax]
0x00008208      837c240802     cmp dword [rsp + 8], 2
0x0000820d      4589d4         mov r12d, r10d
0x00008210      bb20000000     mov ebx, 0x20                           ; "@"
0x00008215      0f94c2         sete dl
0x00008218      4531d2         xor r10d, r10d
0x0000821b      e991fdffff     jmp 0x7fb1
0x00008220      ba0d000000     mov edx, 0xd
0x00008225      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00008228      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000822d      e930fcffff     jmp 0x7e62
0x00008232      660f1f440000   nop word [rax + rax]
0x00008238      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000823d      e99efcffff     jmp 0x7ee0
0x00008242      660f1f440000   nop word [rax + rax]
0x00008248      ba09000000     mov edx, 9
0x0000824d      4531d2         xor r10d, r10d
0x00008250      bb74000000     mov ebx, 0x74                           ; 't'
0x00008255      e908fcffff     jmp 0x7e62
0x0000825a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00008260      bb62000000     mov ebx, 0x62                           ; 'b'
0x00008265      e976fcffff     jmp 0x7ee0
0x0000826a      660f1f440000   nop word [rax + rax]
0x00008270      4531d2         xor r10d, r10d
0x00008273      e998faffff     jmp 0x7d10
0x00008278      0f1f84000000.  nop dword [rax + rax]
0x00008280      807c240f00     cmp byte [rsp + 0xf], 0
0x00008285      0f8565090000   jne 0x8bf0
0x0000828b      4883c501       add rbp, 1
0x0000828f      4489c0         mov eax, r8d
0x00008292      4531e4         xor r12d, r12d
0x00008295      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000829a      e90dfbffff     jmp 0x7dac
0x0000829f      90             nop
0x000082a0      837c240802     cmp dword [rsp + 8], 2
0x000082a5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000082aa      4589c4         mov r12d, r8d
0x000082ad      4c89dd         mov rbp, r11
0x000082b0      0f94c2         sete dl
0x000082b3      89d8           mov eax, ebx
0x000082b5      4d85ff         test r15, r15
0x000082b8      0f94c1         sete cl
0x000082bb      21d0           and eax, edx
0x000082bd      20c8           and al, cl
0x000082bf      0f85610a0000   jne 0x8d26                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x000082c5      89d8           mov eax, ebx
0x000082c7      83f001         xor eax, 1
0x000082ca      20c2           and dl, al
0x000082cc      0f846a090000   je 0x8c3c
0x000082d2      807c247c00     cmp byte [rsp + 0x7c], 0
0x000082d7      0f845d090000   je 0x8c3a
0x000082dd      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x000082e2      0f85f5090000   jne 0x8cdd
0x000082e8      4d85ed         test r13, r13
0x000082eb      0f94c0         sete al
0x000082ee      48837c245000   cmp qword [rsp + 0x50], 0
0x000082f4      0f95c2         setne dl
0x000082f7      20d0           and al, dl
0x000082f9      0f841d0a0000   je 0x8d1c
0x000082ff      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00008304      488d1d1e6200.  lea rbx, [0x0000e529]                   ; "'"
0x0000830b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000830f      c74424080200.  mov dword [rsp + 8], 2
0x00008317      41bf01000000   mov r15d, 1
0x0000831d      48c744241801.  mov qword [rsp + 0x18], 1
0x00008326      c644240f00     mov byte [rsp + 0xf], 0
0x0000832b      48895c2448     mov qword [rsp + 0x48], rbx
0x00008330      8844247c       mov byte [rsp + 0x7c], al
0x00008334      e9daf8ffff     jmp 0x7c13
0x00008339      0f1f80000000.  nop dword [rax]
0x00008340      807c240f00     cmp byte [rsp + 0xf], 0
0x00008345      0f85a5080000   jne 0x8bf0
0x0000834b      4d85ed         test r13, r13
0x0000834e      0f84fc030000   je 0x8750                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00008354      31d2           xor edx, edx
0x00008356      48837c245000   cmp qword [rsp + 0x50], 0
0x0000835c      0f85ee030000   jne 0x8750                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00008362      4c896c2450     mov qword [rsp + 0x50], r13
0x00008367      4983c703       add r15, 3
0x0000836b      31c0           xor eax, eax
0x0000836d      448864247c     mov byte [rsp + 0x7c], r12b
0x00008372      4531c0         xor r8d, r8d
0x00008375      4989d5         mov r13, rdx
0x00008378      bb27000000     mov ebx, 0x27                           ; '''
0x0000837d      e917faffff     jmp 0x7d99
0x00008382      660f1f440000   nop word [rax + rax]
0x00008388      f644247804     test byte [rsp + 0x78], 4
0x0000838d      7421           je 0x83b0
0x0000838f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00008393      4c39d9         cmp rcx, r11
0x00008396      7318           jae 0x83b0
0x00008398      488b442410     mov rax, qword [rsp + 0x10]
0x0000839d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x000083a2      0f848a070000   je 0x8b32
0x000083a8      0f1f84000000.  nop dword [rax + rax]
0x000083b0      31d2           xor edx, edx
0x000083b2      4531e4         xor r12d, r12d
0x000083b5      31c0           xor eax, eax
0x000083b7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000083bc      e9a7f9ffff     jmp 0x7d68
0x000083c1      0f1f80000000.  nop dword [rax]
0x000083c8      807c240f00     cmp byte [rsp + 0xf], 0
0x000083cd      0f851d080000   jne 0x8bf0
0x000083d3      4531e4         xor r12d, r12d
0x000083d6      31c0           xor eax, eax
0x000083d8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000083dd      e9b7f9ffff     jmp 0x7d99                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000083e2      660f1f440000   nop word [rax + rax]
0x000083e8      488d8424a000.  lea rax, [rsp + 0xa0]
0x000083f0      4983fbff       cmp r11, 0xffffffffffffffff
0x000083f4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00008400      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00008405      752d           jne 0x8434
0x00008407      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000840c      4488442440     mov byte [rsp + 0x40], r8b
0x00008411      4488542438     mov byte [rsp + 0x38], r10b
0x00008416      4c894c2430     mov qword [rsp + 0x30], r9
0x0000841b      e88098ffff     call sym.imp.strlen
0x00008420      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00008426      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000842c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000842f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00008434      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000843c      31c9           xor ecx, ecx
0x0000843e      885c247e       mov byte [rsp + 0x7e], bl
0x00008442      448844247d     mov byte [rsp + 0x7d], r8b
0x00008447      4889cb         mov rbx, rcx
0x0000844a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00008452      4889442438     mov qword [rsp + 0x38], rax
0x00008457      448854247f     mov byte [rsp + 0x7f], r10b
0x0000845c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00008464      4c89742440     mov qword [rsp + 0x40], r14
0x00008469      4c896c2470     mov qword [rsp + 0x70], r13
0x0000846e      4c895c2430     mov qword [rsp + 0x30], r11
0x00008473      488b442410     mov rax, qword [rsp + 0x10]
0x00008478      4c8d741d00     lea r14, [rbp + rbx]
0x0000847d      488b542430     mov rdx, qword [rsp + 0x30]
0x00008482      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00008487      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000848c      4e8d2c30       lea r13, [rax + r14]
0x00008490      4c29f2         sub rdx, r14
0x00008493      4c89ee         mov rsi, r13
0x00008496      e845320000     call sym.rpl_mbrtowc
0x0000849b      4885c0         test rax, rax
0x0000849e      4989c7         mov r15, rax
0x000084a1      744e           je 0x84f1
0x000084a3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000084a7      0f8418060000   je 0x8ac5
0x000084ad      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000084b1      0f849a050000   je 0x8a51
0x000084b7      837c240802     cmp dword [rsp + 8], 2
0x000084bc      0f94c0         sete al
0x000084bf      2244240f       and al, byte [rsp + 0xf]
0x000084c3      0f8597010000   jne 0x8660
0x000084c9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x000084d0      e89b9affff     call sym.imp.iswprint
0x000084d5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000084da      85c0           test eax, eax
0x000084dc      b800000000     mov eax, 0
0x000084e1      440f44e0       cmove r12d, eax
0x000084e5      4c01fb         add rbx, r15
0x000084e8      e8739affff     call sym.imp.mbsinit
0x000084ed      85c0           test eax, eax
0x000084ef      7482           je 0x8473
0x000084f1      4489e2         mov edx, r12d
0x000084f4      4889df         mov rdi, rbx
0x000084f7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000084fd      83f201         xor edx, 1
0x00008500      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00008505      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000850b      2254240d       and dl, byte [rsp + 0xd]
0x0000850f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00008517      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000851c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00008521      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00008526      4883ff01       cmp rdi, 1
0x0000852a      0f86fb050000   jbe 0x8b2b
0x00008530      4889f9         mov rcx, rdi
0x00008533      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00008535      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000853b      4801e9         add rcx, rbp
0x0000853e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00008543      e9b6000000     jmp 0x85fe
0x00008548      0f1f84000000.  nop dword [rax + rax]
0x00008550      837c240802     cmp dword [rsp + 8], 2
0x00008555      0f94c0         sete al
0x00008558      4584c9         test r9b, r9b
0x0000855b      0f85af040000   jne 0x8a10
0x00008561      4489c6         mov esi, r8d
0x00008564      83f601         xor esi, 1
0x00008567      4020f0         and al, sil
0x0000856a      742f           je 0x859b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000856c      4d39fd         cmp r13, r15
0x0000856f      7605           jbe 0x8576
0x00008571      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00008576      498d7701       lea rsi, [r15 + 1]
0x0000857a      4939f5         cmp r13, rsi
0x0000857d      7606           jbe 0x8585                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000857f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00008585      498d7702       lea rsi, [r15 + 2]
0x00008589      4939f5         cmp r13, rsi
0x0000858c      7606           jbe 0x8594
0x0000858e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00008594      4983c703       add r15, 3
0x00008598      4189c0         mov r8d, eax
0x0000859b      4d39fd         cmp r13, r15
0x0000859e      7605           jbe 0x85a5
0x000085a0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000085a5      498d4701       lea rax, [r15 + 1]
0x000085a9      4939c5         cmp r13, rax
0x000085ac      760d           jbe 0x85bb
0x000085ae      89d8           mov eax, ebx
0x000085b0      c0e806         shr al, 6
0x000085b3      83c030         add eax, 0x30
0x000085b6      4388443e01     mov byte [r14 + r15 + 1], al
0x000085bb      498d4702       lea rax, [r15 + 2]
0x000085bf      4939c5         cmp r13, rax
0x000085c2      7610           jbe 0x85d4
0x000085c4      89d8           mov eax, ebx
0x000085c6      c0e803         shr al, 3
0x000085c9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x000085cc      83c030         add eax, 0x30
0x000085cf      4388443e02     mov byte [r14 + r15 + 2], al
0x000085d4      83e307         and ebx, 7
0x000085d7      4883c501       add rbp, 1
0x000085db      4983c703       add r15, 3
0x000085df      83c330         add ebx, 0x30
0x000085e2      4839cd         cmp rbp, rcx
0x000085e5      0f83e5f7ffff   jae 0x7dd0
0x000085eb      89d6           mov esi, edx
0x000085ed      4d39fd         cmp r13, r15
0x000085f0      7604           jbe 0x85f6
0x000085f2      43881c3e       mov byte [r14 + r15], bl
0x000085f6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000085fa      4983c701       add r15, 1
0x000085fe      84d2           test dl, dl
0x00008600      0f854affffff   jne 0x8550
0x00008606      89f0           mov eax, esi
0x00008608      83f001         xor eax, 1
0x0000860b      4421c0         and eax, r8d
0x0000860e      4584d2         test r10b, r10b
0x00008611      740e           je 0x8621
0x00008613      4d39fd         cmp r13, r15
0x00008616      7605           jbe 0x861d
0x00008618      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000861d      4983c701       add r15, 1
0x00008621      4883c501       add rbp, 1
0x00008625      4839cd         cmp rbp, rcx
0x00008628      0f837ef7ffff   jae 0x7dac
0x0000862e      84c0           test al, al
0x00008630      0f84f8030000   je 0x8a2e
0x00008636      4d39fd         cmp r13, r15
0x00008639      7605           jbe 0x8640
0x0000863b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00008640      498d4701       lea rax, [r15 + 1]
0x00008644      4939c5         cmp r13, rax
0x00008647      7606           jbe 0x864f
0x00008649      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000864f      4983c702       add r15, 2
0x00008653      4531d2         xor r10d, r10d
0x00008656      4531c0         xor r8d, r8d
0x00008659      eb92           jmp 0x85ed
0x0000865b      0f1f440000     nop dword [rax + rax]
0x00008660      4983ff01       cmp r15, 1
0x00008664      0f845ffeffff   je 0x84c9
0x0000866a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000866f      4a8d0c3f       lea rcx, [rdi + r15]
0x00008673      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00008678      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000867c      eb0f           jmp 0x868d
0x0000867e      6690           nop
0x00008680      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00008684      4939d0         cmp r8, rdx
0x00008687      0f843cfeffff   je 0x84c9
0x0000868d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00008690      83e95b         sub ecx, 0x5b
0x00008693      80f921         cmp cl, 0x21
0x00008696      77e8           ja 0x8680                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00008698      be01000000     mov esi, 1
0x0000869d      48d3e6         shl rsi, cl
0x000086a0      4889f1         mov rcx, rsi
0x000086a3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x000086ad      4885f1         test rcx, rsi
0x000086b0      74ce           je 0x8680
0x000086b2      4c8b742440     mov r14, qword [rsp + 0x40]
0x000086b7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000086bc      488b6c2430     mov rbp, qword [rsp + 0x30]
0x000086c1      c74424080200.  mov dword [rsp + 8], 2
0x000086c9      807c240d00     cmp byte [rsp + 0xd], 0
0x000086ce      7410           je 0x86e0
0x000086d0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x000086d2      b804000000     mov eax, 4
0x000086d7      0f44442408     cmove eax, dword [rsp + 8]
0x000086dc      89442408       mov dword [rsp + 8], eax
0x000086e0      4883ec08       sub rsp, 8
0x000086e4      4889e9         mov rcx, rbp
0x000086e7      4c89ee         mov rsi, r13
0x000086ea      ff742468       push qword [rsp + 0x68]
0x000086ee      ff742478       push qword [rsp + 0x78]
0x000086f2      4c89f7         mov rdi, r14
0x000086f5      6a00           push 0
0x000086f7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000086ff      448b442428     mov r8d, dword [rsp + 0x28]
0x00008704      488b542430     mov rdx, qword [rsp + 0x30]
0x00008709      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000870d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00008712      4883c420       add rsp, 0x20
0x00008716      4989c7         mov r15, rax
0x00008719      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00008721      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000872a      4c89f8         mov rax, r15
0x0000872d      0f8500060000   jne 0x8d33
0x00008733      4881c4b80000.  add rsp, 0xb8
0x0000873a      5b             pop rbx
0x0000873b      5d             pop rbp
0x0000873c      415c           pop r12
0x0000873e      415d           pop r13
0x00008740      415e           pop r14
0x00008742      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00008744      c3             ret
0x00008745      0f1f00         nop dword [rax]
0x00008748      4c89dd         mov rbp, r11
0x0000874b      e979ffffff     jmp 0x86c9
0x00008750      4d39fd         cmp r13, r15
0x00008753      7605           jbe 0x875a
0x00008755      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000875a      498d4701       lea rax, [r15 + 1]
0x0000875e      4939c5         cmp r13, rax
0x00008761      7606           jbe 0x8769
0x00008763      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00008769      498d4702       lea rax, [r15 + 2]
0x0000876d      4939c5         cmp r13, rax
0x00008770      0f86ec050000   jbe 0x8d62
0x00008776      4c89ea         mov rdx, r13
0x00008779      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000877f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00008784      e9d9fbffff     jmp 0x8362
0x00008789      4489e0         mov eax, r12d
0x0000878c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00008791      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00008794      e900f6ffff     jmp 0x7d99                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00008799      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000879f      e9c5f9ffff     jmp 0x8169
0x000087a4      85db           test ebx, ebx
0x000087a6      0f8527f4ffff   jne 0x7bd3
0x000087ac      c644240d01     mov byte [rsp + 0xd], 1
0x000087b1      4d85ed         test r13, r13
0x000087b4      0f8590050000   jne 0x8d4a
0x000087ba      488d05685d00.  lea rax, [0x0000e529]                   ; "'"
0x000087c1      48c744245000.  mov qword [rsp + 0x50], 0
0x000087ca      c644240e01     mov byte [rsp + 0xe], 1
0x000087cf      c644247c00     mov byte [rsp + 0x7c], 0
0x000087d4      4531e4         xor r12d, r12d
0x000087d7      c644240f00     mov byte [rsp + 0xf], 0
0x000087dc      48c744241801.  mov qword [rsp + 0x18], 1
0x000087e5      4889442448     mov qword [rsp + 0x48], rax
0x000087ea      41bf01000000   mov r15d, 1
0x000087f0      c74424080200.  mov dword [rsp + 8], 2
0x000087f8      e916f4ffff     jmp 0x7c13                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x000087fd      0f1f00         nop dword [rax]
0x00008800      85db           test ebx, ebx
0x00008802      0f85f5030000   jne 0x8bfd
0x00008808      4d85ed         test r13, r13
0x0000880b      0f8425020000   je 0x8a36
0x00008811      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00008815      c644240e01     mov byte [rsp + 0xe], 1
0x0000881a      4531e4         xor r12d, r12d
0x0000881d      c644247c00     mov byte [rsp + 0x7c], 0
0x00008822      48c744245000.  mov qword [rsp + 0x50], 0
0x0000882b      488d05815200.  lea rax, str.l______l                   ; 0xdab3 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00008832      c644240f00     mov byte [rsp + 0xf], 0
0x00008837      c644240d01     mov byte [rsp + 0xd], 1
0x0000883c      48c744241801.  mov qword [rsp + 0x18], 1
0x00008845      41bf01000000   mov r15d, 1
0x0000884b      4889442448     mov qword [rsp + 0x48], rax
0x00008850      e9bef3ffff     jmp 0x7c13
0x00008855      488d05575200.  lea rax, str.l______l                   ; 0xdab3 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000885c      c644240e01     mov byte [rsp + 0xe], 1
0x00008861      c644247c00     mov byte [rsp + 0x7c], 0
0x00008866      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00008869      48c744245000.  mov qword [rsp + 0x50], 0
0x00008872      c644240f01     mov byte [rsp + 0xf], 1
0x00008877      c644240d01     mov byte [rsp + 0xd], 1
0x0000887c      48c744241801.  mov qword [rsp + 0x18], 1
0x00008885      4531ff         xor r15d, r15d
0x00008888      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000888d      c74424080500.  mov dword [rsp + 8], 5
0x00008895      e979f3ffff     jmp 0x7c13
0x0000889a      c644240e01     mov byte [rsp + 0xe], 1
0x0000889f      c644247c00     mov byte [rsp + 0x7c], 0
0x000088a4      4531e4         xor r12d, r12d
0x000088a7      48c744245000.  mov qword [rsp + 0x50], 0
0x000088b0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x000088b5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x000088b8      c644240d01     mov byte [rsp + 0xd], 1
0x000088bd      48c744241800.  mov qword [rsp + 0x18], 0
0x000088c6      48c744244800.  mov qword [rsp + 0x48], 0
0x000088cf      e93ff3ffff     jmp 0x7c13
0x000088d4      837c24080a     cmp dword [rsp + 8], 0xa
0x000088d9      7456           je 0x8931
0x000088db      488d35d35100.  lea rsi, [0x0000dab5]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000088e2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000088e4      ba05000000     mov edx, 5
0x000088e9      e89293ffff     call sym.imp.dcgettext
0x000088ee      4889c1         mov rcx, rax
0x000088f1      4889442468     mov qword [rsp + 0x68], rax
0x000088f6      488d05b85100.  lea rax, [0x0000dab5]                   ; "`"
0x000088fd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00008900      0f8498030000   je 0x8c9e
0x00008906      488d351c5c00.  lea rsi, [0x0000e529]                   ; "'"
0x0000890d      31ff           xor edi, edi
0x0000890f      ba05000000     mov edx, 5
0x00008914      e86793ffff     call sym.imp.dcgettext
0x00008919      4889c1         mov rcx, rax
0x0000891c      4889442460     mov qword [rsp + 0x60], rax
0x00008921      488d05015c00.  lea rax, [0x0000e529]                   ; "'"
0x00008928      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000892b      0f8483030000   je 0x8cb4
0x00008931      4531ff         xor r15d, r15d
0x00008934      85db           test ebx, ebx
0x00008936      0f84c1010000   je 0x8afd
0x0000893c      85db           test ebx, ebx
0x0000893e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00008943      0f9544240f     setne byte [rsp + 0xf]
0x00008948      4531e4         xor r12d, r12d
0x0000894b      4889df         mov rdi, rbx
0x0000894e      e84d93ffff     call sym.imp.strlen
0x00008953      48895c2448     mov qword [rsp + 0x48], rbx
0x00008958      4889442418     mov qword [rsp + 0x18], rax
0x0000895d      c644240e01     mov byte [rsp + 0xe], 1
0x00008962      c644247c00     mov byte [rsp + 0x7c], 0
0x00008967      48c744245000.  mov qword [rsp + 0x50], 0
0x00008970      c644240d01     mov byte [rsp + 0xd], 1
0x00008975      e999f2ffff     jmp 0x7c13
0x0000897a      c644240e01     mov byte [rsp + 0xe], 1
0x0000897f      c644247c00     mov byte [rsp + 0x7c], 0
0x00008984      4531e4         xor r12d, r12d
0x00008987      48c744245000.  mov qword [rsp + 0x50], 0
0x00008990      c644240f00     mov byte [rsp + 0xf], 0
0x00008995      4531ff         xor r15d, r15d
0x00008998      c644240d00     mov byte [rsp + 0xd], 0
0x0000899d      48c744241800.  mov qword [rsp + 0x18], 0
0x000089a6      48c744244800.  mov qword [rsp + 0x48], 0
0x000089af      e95ff2ffff     jmp 0x7c13
0x000089b4      c644240e01     mov byte [rsp + 0xe], 1
0x000089b9      c644247c00     mov byte [rsp + 0x7c], 0
0x000089be      4531e4         xor r12d, r12d
0x000089c1      48c744245000.  mov qword [rsp + 0x50], 0
0x000089ca      c644240f01     mov byte [rsp + 0xf], 1
0x000089cf      c644240d01     mov byte [rsp + 0xd], 1
0x000089d4      e91af2ffff     jmp 0x7bf3
0x000089d9      4d39fd         cmp r13, r15
0x000089dc      7605           jbe 0x89e3
0x000089de      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x000089e3      488d4102       lea rax, [rcx + 2]
0x000089e7      4939c5         cmp r13, rax
0x000089ea      7606           jbe 0x89f2
0x000089ec      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x000089f2      4489e0         mov eax, r12d
0x000089f5      4c8d7903       lea r15, [rcx + 3]
0x000089f9      4531e4         xor r12d, r12d
0x000089fc      bb30000000     mov ebx, 0x30                           ; '0'
0x00008a01      e962f3ffff     jmp 0x7d68
0x00008a06      662e0f1f8400.  nop word cs:[rax + rax]
0x00008a10      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00008a15      4c89dd         mov rbp, r11
0x00008a18      885c240d       mov byte [rsp + 0xd], bl
0x00008a1c      e9a8fcffff     jmp 0x86c9
0x00008a21      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00008a26      4531e4         xor r12d, r12d
0x00008a29      e902fbffff     jmp 0x8530
0x00008a2e      4531d2         xor r10d, r10d
0x00008a31      e9b7fbffff     jmp 0x85ed
0x00008a36      48c744245000.  mov qword [rsp + 0x50], 0
0x00008a3f      c644240e01     mov byte [rsp + 0xe], 1
0x00008a44      4531e4         xor r12d, r12d
0x00008a47      c644247c00     mov byte [rsp + 0x7c], 0
0x00008a4c      e9dafdffff     jmp 0x882b
0x00008a51      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00008a56      4c89f6         mov rsi, r14
0x00008a59      4c89e9         mov rcx, r13
0x00008a5c      4889d8         mov rax, rbx
0x00008a5f      4889df         mov rdi, rbx
0x00008a62      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00008a68      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00008a6d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00008a75      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00008a78      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00008a7e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00008a86      4c8b742440     mov r14, qword [rsp + 0x40]
0x00008a8b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00008a90      7326           jae 0x8ab8
0x00008a92      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00008a95      7510           jne 0x8aa7
0x00008a97      eb1f           jmp 0x8ab8
0x00008a99      0f1f80000000.  nop dword [rax]
0x00008aa0      41803c0100     cmp byte [r9 + rax], 0
0x00008aa5      740e           je 0x8ab5
0x00008aa7      4883c001       add rax, 1
0x00008aab      488d540500     lea rdx, [rbp + rax]
0x00008ab0      4939d3         cmp r11, rdx
0x00008ab3      77eb           ja 0x8aa0
0x00008ab5      4889c7         mov rdi, rax
0x00008ab8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00008abd      4531e4         xor r12d, r12d
0x00008ac0      e961faffff     jmp 0x8526
0x00008ac5      4889df         mov rdi, rbx
0x00008ac8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00008ace      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00008ad3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00008ad9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00008ae1      4531e4         xor r12d, r12d
0x00008ae4      4c8b742440     mov r14, qword [rsp + 0x40]
0x00008ae9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00008aee      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00008af3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00008af8      e929faffff     jmp 0x8526
0x00008afd      488b542468     mov rdx, qword [rsp + 0x68]
0x00008b02      0fb602         movzx eax, byte [rdx]
0x00008b05      84c0           test al, al
0x00008b07      0f842ffeffff   je 0x893c
0x00008b0d      0f1f00         nop dword [rax]
0x00008b10      4d39fd         cmp r13, r15
0x00008b13      7604           jbe 0x8b19
0x00008b15      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00008b19      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00008b1d      420fb6043a     movzx eax, byte [rdx + r15]
0x00008b22      84c0           test al, al
0x00008b24      75ea           jne 0x8b10
0x00008b26      e911feffff     jmp 0x893c
0x00008b2b      89d0           mov eax, edx
0x00008b2d      e955f5ffff     jmp 0x8087
0x00008b32      0fb61c08       movzx ebx, byte [rax + rcx]
0x00008b36      80fb3e         cmp bl, 0x3e
0x00008b39      0f8771f8ffff   ja 0x83b0
0x00008b3f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00008b49      480fa3d8       bt rax, rbx
0x00008b4d      0f835df8ffff   jae 0x83b0
0x00008b53      807c240f00     cmp byte [rsp + 0xf], 0
0x00008b58      0f85e4010000   jne 0x8d42                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00008b5e      4d39fd         cmp r13, r15
0x00008b61      7605           jbe 0x8b68
0x00008b63      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00008b68      498d4701       lea rax, [r15 + 1]
0x00008b6c      4939c5         cmp r13, rax
0x00008b6f      7606           jbe 0x8b77
0x00008b71      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00008b77      498d4702       lea rax, [r15 + 2]
0x00008b7b      4939c5         cmp r13, rax
0x00008b7e      7606           jbe 0x8b86
0x00008b80      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00008b86      498d4703       lea rax, [r15 + 3]
0x00008b8a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00008b8d      7606           jbe 0x8b95
0x00008b8f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00008b95      4983c704       add r15, 4
0x00008b99      31d2           xor edx, edx
0x00008b9b      4531e4         xor r12d, r12d
0x00008b9e      31c0           xor eax, eax
0x00008ba0      4889cd         mov rbp, rcx
0x00008ba3      e9c0f1ffff     jmp 0x7d68
0x00008ba8      85db           test ebx, ebx
0x00008baa      0f8488010000   je 0x8d38
0x00008bb0      488d05725900.  lea rax, [0x0000e529]                   ; "'"
0x00008bb7      c644240e01     mov byte [rsp + 0xe], 1
0x00008bbc      c644247c00     mov byte [rsp + 0x7c], 0
0x00008bc1      4531e4         xor r12d, r12d
0x00008bc4      48c744245000.  mov qword [rsp + 0x50], 0
0x00008bcd      c644240f01     mov byte [rsp + 0xf], 1
0x00008bd2      c644240d00     mov byte [rsp + 0xd], 0
0x00008bd7      48c744241801.  mov qword [rsp + 0x18], 1
0x00008be0      4531ff         xor r15d, r15d
0x00008be3      4889442448     mov qword [rsp + 0x48], rax
0x00008be8      e926f0ffff     jmp 0x7c13
0x00008bed      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00008bf0      4c89dd         mov rbp, r11
0x00008bf3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00008bf8      e9ccfaffff     jmp 0x86c9
0x00008bfd      488d05af4e00.  lea rax, str.l______l                   ; 0xdab3 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00008c04      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00008c09      c644247c00     mov byte [rsp + 0x7c], 0
0x00008c0e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00008c11      48c744245000.  mov qword [rsp + 0x50], 0
0x00008c1a      c644240f01     mov byte [rsp + 0xf], 1
0x00008c1f      c644240d01     mov byte [rsp + 0xd], 1
0x00008c24      48c744241801.  mov qword [rsp + 0x18], 1
0x00008c2d      4531ff         xor r15d, r15d
0x00008c30      4889442448     mov qword [rsp + 0x48], rax
0x00008c35      e9d9efffff     jmp 0x7c13
0x00008c3a      89d0           mov eax, edx
0x00008c3c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00008c41      4885db         test rbx, rbx
0x00008c44      742c           je 0x8c72
0x00008c46      84c0           test al, al
0x00008c48      7428           je 0x8c72
0x00008c4a      0fb60b         movzx ecx, byte [rbx]
0x00008c4d      4889d8         mov rax, rbx
0x00008c50      84c9           test cl, cl
0x00008c52      741e           je 0x8c72
0x00008c54      4c89fa         mov rdx, r15
0x00008c57      4c29f8         sub rax, r15
0x00008c5a      4939d5         cmp r13, rdx
0x00008c5d      7604           jbe 0x8c63
0x00008c5f      41880c16       mov byte [r14 + rdx], cl
0x00008c63      4883c201       add rdx, 1
0x00008c67      0fb60c10       movzx ecx, byte [rax + rdx]
0x00008c6b      84c9           test cl, cl
0x00008c6d      75eb           jne 0x8c5a
0x00008c6f      4989d7         mov r15, rdx
0x00008c72      4d39fd         cmp r13, r15
0x00008c75      0f869efaffff   jbe 0x8719
0x00008c7b      43c6043e00     mov byte [r14 + r15], 0
0x00008c80      e994faffff     jmp 0x8719
0x00008c85      837c240802     cmp dword [rsp + 8], 2
0x00008c8a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00008c8f      4c89dd         mov rbp, r11
0x00008c92      0f94c0         sete al
0x00008c95      885c240d       mov byte [rsp + 0xd], bl
0x00008c99      e92bfaffff     jmp 0x86c9
0x00008c9e      8b742408       mov esi, dword [rsp + 8]
0x00008ca2      4889cf         mov rdi, rcx
0x00008ca5      e8a6edffff     call sym.gettext_quote.part.1
0x00008caa      4889442468     mov qword [rsp + 0x68], rax
0x00008caf      e952fcffff     jmp 0x8906
0x00008cb4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00008cb8      4889cf         mov rdi, rcx
0x00008cbb      e890edffff     call sym.gettext_quote.part.1
0x00008cc0      4889442460     mov qword [rsp + 0x60], rax
0x00008cc5      e967fcffff     jmp 0x8931
0x00008cca      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00008ccf      4c89dd         mov rbp, r11
0x00008cd2      89d0           mov eax, edx
0x00008cd4      885c240d       mov byte [rsp + 0xd], bl
0x00008cd8      e9ecf9ffff     jmp 0x86c9
0x00008cdd      4883ec08       sub rsp, 8
0x00008ce1      41b805000000   mov r8d, 5
0x00008ce7      4c89d9         mov rcx, r11
0x00008cea      ff742468       push qword [rsp + 0x68]
0x00008cee      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00008cf2      4c89f7         mov rdi, r14
0x00008cf5      ff742438       push qword [rsp + 0x38]
0x00008cf9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00008d01      488b542430     mov rdx, qword [rsp + 0x30]
0x00008d06      488b742470     mov rsi, qword [rsp + 0x70]
0x00008d0b      e830eeffff     call sym.quotearg_buffer_restyled
0x00008d10      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00008d14      4989c7         mov r15, rax
0x00008d17      e9fdf9ffff     jmp 0x8719
0x00008d1c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00008d21      e916ffffff     jmp 0x8c3c
0x00008d26      c74424080200.  mov dword [rsp + 8], 2
0x00008d2e      e996f9ffff     jmp 0x86c9
0x00008d33      e8788fffff     call sym.imp.__stack_chk_fail
0x00008d38      c644240d00     mov byte [rsp + 0xd], 0
0x00008d3d      e96ffaffff     jmp 0x87b1
0x00008d42      4c89dd         mov rbp, r11
0x00008d45      e996f9ffff     jmp 0x86e0
0x00008d4a      c644240e01     mov byte [rsp + 0xe], 1
0x00008d4f      31c0           xor eax, eax
0x00008d51      4531e4         xor r12d, r12d
0x00008d54      48c744245000.  mov qword [rsp + 0x50], 0
0x00008d5d      e9a2f5ffff     jmp 0x8304
0x00008d62      4c89ea         mov rdx, r13
0x00008d65      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00008d6a      e9f3f5ffff     jmp 0x8362
0x00008d6f      e82c8effff     call sym.imp.abort
0x00008d74      6690           nop
0x00008d76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00008d80      4157           push r15
0x00008d82      4156           push r14
0x00008d84      4c63ff         movsxd r15, edi
0x00008d87      4155           push r13
0x00008d89      4154           push r12
0x00008d8b      4989d6         mov r14, rdx
0x00008d8e      55             push rbp
0x00008d8f      53             push rbx
0x00008d90      4889cd         mov rbp, rcx
0x00008d93      4883ec28       sub rsp, 0x28
0x00008d97      4889742408     mov qword [rsp + 8], rsi
0x00008d9c      e80f8effff     call sym.imp.__errno_location
0x00008da1      4989c5         mov r13, rax
0x00008da4      8b00           mov eax, dword [rax]
0x00008da6      4585ff         test r15d, r15d
0x00008da9      488b1d108320.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x2110c0:8]=0x2110d0 obj.slotvec0
0x00008db0      89442418       mov dword [rsp + 0x18], eax
0x00008db4      0f8867010000   js 0x8f21
0x00008dba      44393df78220.  cmp dword [obj.nslots], r15d            ; [0x2110b8:4]=1
0x00008dc1      7f62           jg 0x8e25
0x00008dc3      4181ffffffff.  cmp r15d, 0x7fffffff
0x00008dca      0f8456010000   je 0x8f26
0x00008dd0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00008dd4      488d05f58220.  lea rax, obj.slotvec0                   ; 0x2110d0
0x00008ddb      4963f4         movsxd rsi, r12d
0x00008dde      48c1e604       shl rsi, 4
0x00008de2      4839c3         cmp rbx, rax
0x00008de5      0f8415010000   je 0x8f00
0x00008deb      4889df         mov rdi, rbx
0x00008dee      e87d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00008df3      4889c3         mov rbx, rax
0x00008df6      488905c38220.  mov qword [obj.slotvec], rax            ; [0x2110c0:8]=0x2110d0 obj.slotvec0
0x00008dfd      48633db48220.  movsxd rdi, dword [obj.nslots]          ; [0x2110b8:4]=1
0x00008e04      4489e2         mov edx, r12d
0x00008e07      31f6           xor esi, esi
0x00008e09      29fa           sub edx, edi
0x00008e0b      48c1e704       shl rdi, 4
0x00008e0f      4863d2         movsxd rdx, edx
0x00008e12      4801df         add rdi, rbx
0x00008e15      48c1e204       shl rdx, 4
0x00008e19      e8328fffff     call sym.imp.memset
0x00008e1e      448925938220.  mov dword [obj.nslots], r12d            ; [0x2110b8:4]=1
0x00008e25      8b4504         mov eax, dword [rbp + 4]
0x00008e28      49c1e704       shl r15, 4
0x00008e2c      4883ec08       sub rsp, 8
0x00008e30      4c01fb         add rbx, r15
0x00008e33      4c8d7d08       lea r15, [rbp + 8]
0x00008e37      448b4500       mov r8d, dword [rbp]
0x00008e3b      4c8b1b         mov r11, qword [rbx]
0x00008e3e      4c8b6308       mov r12, qword [rbx + 8]
0x00008e42      4c89f1         mov rcx, r14
0x00008e45      83c801         or eax, 1
0x00008e48      89442424       mov dword [rsp + 0x24], eax
0x00008e4c      ff7530         push qword [rbp + 0x30]
0x00008e4f      4189c1         mov r9d, eax
0x00008e52      ff7528         push qword [rbp + 0x28]
0x00008e55      4157           push r15
0x00008e57      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00008e5a      488b542428     mov rdx, qword [rsp + 0x28]
0x00008e5f      4c89e7         mov rdi, r12
0x00008e62      4c895c2430     mov qword [rsp + 0x30], r11
0x00008e67      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00008e6c      4883c420       add rsp, 0x20
0x00008e70      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00008e75      4939c3         cmp r11, rax
0x00008e78      7767           ja 0x8ee1
0x00008e7a      488d7001       lea rsi, [rax + 1]
0x00008e7e      488d05db8320.  lea rax, obj.slot0                      ; 0x211260
0x00008e85      4939c4         cmp r12, rax
0x00008e88      488933         mov qword [rbx], rsi
0x00008e8b      7412           je 0x8e9f
0x00008e8d      4c89e7         mov rdi, r12
0x00008e90      4889742410     mov qword [rsp + 0x10], rsi
0x00008e95      e8f68cffff     call sym.imp.free
0x00008e9a      488b742410     mov rsi, qword [rsp + 0x10]
0x00008e9f      4889f7         mov rdi, rsi
0x00008ea2      4889742410     mov qword [rsp + 0x10], rsi
0x00008ea7      e8640e0000     call sym.xmalloc
0x00008eac      4883ec08       sub rsp, 8
0x00008eb0      48894308       mov qword [rbx + 8], rax
0x00008eb4      448b4500       mov r8d, dword [rbp]
0x00008eb8      ff7530         push qword [rbp + 0x30]
0x00008ebb      ff7528         push qword [rbp + 0x28]
0x00008ebe      4c89f1         mov rcx, r14
0x00008ec1      4157           push r15
0x00008ec3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00008ec8      4889c7         mov rdi, rax
0x00008ecb      488b542428     mov rdx, qword [rsp + 0x28]
0x00008ed0      488b742430     mov rsi, qword [rsp + 0x30]
0x00008ed5      4989c4         mov r12, rax
0x00008ed8      e863ecffff     call sym.quotearg_buffer_restyled
0x00008edd      4883c420       add rsp, 0x20
0x00008ee1      8b442418       mov eax, dword [rsp + 0x18]
0x00008ee5      41894500       mov dword [r13], eax
0x00008ee9      4883c428       add rsp, 0x28
0x00008eed      4c89e0         mov rax, r12
0x00008ef0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00008ef1      5d             pop rbp
0x00008ef2      415c           pop r12
0x00008ef4      415d           pop r13
0x00008ef6      415e           pop r14
0x00008ef8      415f           pop r15
0x00008efa      c3             ret
0x00008efb      0f1f440000     nop dword [rax + rax]
0x00008f00      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00008f02      e8690e0000     call sym.xrealloc
0x00008f07      660f6f05c181.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00008f0f      4889c3         mov rbx, rax
0x00008f12      488905a78120.  mov qword [obj.slotvec], rax            ; [0x2110c0:8]=0x2110d0 obj.slotvec0
0x00008f19      0f1100         movups xmmword [rax], xmm0
0x00008f1c      e9dcfeffff     jmp 0x8dfd
0x00008f21      e87a8cffff     call sym.imp.abort
0x00008f26      e835100000     call sym.xalloc_die
0x00008f2b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00008f30      4154           push r12
0x00008f32      55             push rbp
0x00008f33      53             push rbx
0x00008f34      4889fb         mov rbx, rdi
0x00008f37      e8748cffff     call sym.imp.__errno_location
0x00008f3c      448b20         mov r12d, dword [rax]
0x00008f3f      4889c5         mov rbp, rax
0x00008f42      488d05178420.  lea rax, obj.default_quoting_options    ; 0x211360
0x00008f49      4885db         test rbx, rbx
0x00008f4c      be38000000     mov esi, 0x38                           ; '8'
0x00008f51      480f44d8       cmove rbx, rax
0x00008f55      4889df         mov rdi, rbx
0x00008f58      e8b30f0000     call sym.xmemdup
0x00008f5d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00008f61      5b             pop rbx
0x00008f62      5d             pop rbp
0x00008f63      415c           pop r12
0x00008f65      c3             ret
0x00008f66      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00008f70      488d05e98320.  lea rax, obj.default_quoting_options    ; 0x211360
0x00008f77      4885ff         test rdi, rdi
0x00008f7a      480f44f8       cmove rdi, rax
0x00008f7e      8b07           mov eax, dword [rdi]
0x00008f80      c3             ret
0x00008f81      0f1f440000     nop dword [rax + rax]
0x00008f86      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00008f90      488d05c98320.  lea rax, obj.default_quoting_options    ; 0x211360
0x00008f97      4885ff         test rdi, rdi
0x00008f9a      480f44f8       cmove rdi, rax
0x00008f9e      8937           mov dword [rdi], esi
0x00008fa0      c3             ret
0x00008fa1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00008fa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00008fb0      488d05a98320.  lea rax, obj.default_quoting_options    ; 0x211360
0x00008fb7      4885ff         test rdi, rdi
0x00008fba      89f1           mov ecx, esi
0x00008fbc      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00008fc0      89f0           mov eax, esi
0x00008fc2      83e11f         and ecx, 0x1f
0x00008fc5      c0e805         shr al, 5
0x00008fc8      0fb6c0         movzx eax, al
0x00008fcb      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00008fd0      8b37           mov esi, dword [rdi]
0x00008fd2      89f0           mov eax, esi
0x00008fd4      d3e8           shr eax, cl
0x00008fd6      31c2           xor edx, eax
0x00008fd8      83e001         and eax, 1
0x00008fdb      83e201         and edx, 1
0x00008fde      d3e2           shl edx, cl
0x00008fe0      31f2           xor edx, esi
0x00008fe2      8917           mov dword [rdi], edx
0x00008fe4      c3             ret
0x00008fe5      90             nop
0x00008fe6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00008ff0      488d05698320.  lea rax, obj.default_quoting_options    ; 0x211360
0x00008ff7      4885ff         test rdi, rdi
0x00008ffa      480f44f8       cmove rdi, rax
0x00008ffe      8b4704         mov eax, dword [rdi + 4]
0x00009001      897704         mov dword [rdi + 4], esi
0x00009004      c3             ret
0x00009005      90             nop
0x00009006      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00009010      488d05498320.  lea rax, obj.default_quoting_options    ; 0x211360
0x00009017      4885ff         test rdi, rdi
0x0000901a      480f44f8       cmove rdi, rax
0x0000901e      4885f6         test rsi, rsi
0x00009021      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00009027      740e           je 0x9037
0x00009029      4885d2         test rdx, rdx
0x0000902c      7409           je 0x9037
0x0000902e      48897728       mov qword [rdi + 0x28], rsi
0x00009032      48895730       mov qword [rdi + 0x30], rdx
0x00009036      c3             ret
0x00009037      4883ec08       sub rsp, 8
0x0000903b      e8608bffff     call sym.imp.abort
;-- quotearg_buffer:
0x00009040      4157           push r15
0x00009042      4156           push r14
0x00009044      488d05158320.  lea rax, obj.default_quoting_options    ; 0x211360
0x0000904b      4155           push r13
0x0000904d      4154           push r12
0x0000904f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00009052      55             push rbp
0x00009053      53             push rbx
0x00009054      4c89c3         mov rbx, r8
0x00009057      4989f6         mov r14, rsi
0x0000905a      4989d7         mov r15, rdx
0x0000905d      4883ec18       sub rsp, 0x18
0x00009061      4d85c0         test r8, r8
0x00009064      480f44d8       cmove rbx, rax
0x00009068      48894c2408     mov qword [rsp + 8], rcx
0x0000906d      e83e8bffff     call sym.imp.__errno_location
0x00009072      448b20         mov r12d, dword [rax]
0x00009075      4889c5         mov rbp, rax
0x00009078      488d4308       lea rax, [rbx + 8]
0x0000907c      4883ec08       sub rsp, 8
0x00009080      448b4b04       mov r9d, dword [rbx + 4]
0x00009084      ff7330         push qword [rbx + 0x30]
0x00009087      448b03         mov r8d, dword [rbx]
0x0000908a      ff7328         push qword [rbx + 0x28]
0x0000908d      4c89fa         mov rdx, r15
0x00009090      50             push rax
0x00009091      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00009096      4c89f6         mov rsi, r14
0x00009099      4c89ef         mov rdi, r13
0x0000909c      e89feaffff     call sym.quotearg_buffer_restyled
0x000090a1      44896500       mov dword [rbp], r12d
0x000090a5      4883c438       add rsp, 0x38
0x000090a9      5b             pop rbx
0x000090aa      5d             pop rbp
0x000090ab      415c           pop r12
0x000090ad      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000090af      415e           pop r14
0x000090b1      415f           pop r15
0x000090b3      c3             ret
0x000090b4      6690           nop
0x000090b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x000090c0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x000090c2      4156           push r14
0x000090c4      488d05958220.  lea rax, obj.default_quoting_options    ; 0x211360
0x000090cb      4155           push r13
0x000090cd      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x000090cf      4989d4         mov r12, rdx
0x000090d2      55             push rbp
0x000090d3      53             push rbx
0x000090d4      4889cb         mov rbx, rcx
0x000090d7      4989fe         mov r14, rdi
0x000090da      4989f7         mov r15, rsi
0x000090dd      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000090e1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000090e4      480f44d8       cmove rbx, rax
0x000090e8      31ed           xor ebp, ebp
0x000090ea      e8c18affff     call sym.imp.__errno_location
0x000090ef      4d85e4         test r12, r12
0x000090f2      4989c5         mov r13, rax
0x000090f5      8b00           mov eax, dword [rax]
0x000090f7      400f94c5       sete bpl
0x000090fb      0b6b04         or ebp, dword [rbx + 4]
0x000090fe      4c8d5308       lea r10, [rbx + 8]
0x00009102      4883ec08       sub rsp, 8
0x00009106      448b03         mov r8d, dword [rbx]
0x00009109      4c89f9         mov rcx, r15
0x0000910c      89442414       mov dword [rsp + 0x14], eax
0x00009110      ff7330         push qword [rbx + 0x30]
0x00009113      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00009116      ff7328         push qword [rbx + 0x28]
0x00009119      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000911b      31f6           xor esi, esi
0x0000911d      4189e9         mov r9d, ebp
0x00009120      31ff           xor edi, edi
0x00009122      4c89542440     mov qword [rsp + 0x40], r10
0x00009127      e814eaffff     call sym.quotearg_buffer_restyled
0x0000912c      488d7001       lea rsi, [rax + 1]
0x00009130      4889442448     mov qword [rsp + 0x48], rax
0x00009135      4883c420       add rsp, 0x20
0x00009139      4889f7         mov rdi, rsi
0x0000913c      4889742418     mov qword [rsp + 0x18], rsi
0x00009141      e8ca0b0000     call sym.xmalloc
0x00009146      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000914b      4883ec08       sub rsp, 8
0x0000914f      ff7330         push qword [rbx + 0x30]
0x00009152      ff7328         push qword [rbx + 0x28]
0x00009155      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000915a      4189e9         mov r9d, ebp
0x0000915d      448b03         mov r8d, dword [rbx]
0x00009160      4c89f9         mov rcx, r15
0x00009163      4c89f2         mov rdx, r14
0x00009166      4889c7         mov rdi, rax
0x00009169      4152           push r10
0x0000916b      488b742438     mov rsi, qword [rsp + 0x38]
0x00009170      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00009175      8b44242c       mov eax, dword [rsp + 0x2c]
0x00009179      4883c420       add rsp, 0x20
0x0000917d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00009180      41894500       mov dword [r13], eax
0x00009184      7409           je 0x918f
0x00009186      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000918b      4d891c24       mov qword [r12], r11
0x0000918f      488b442410     mov rax, qword [rsp + 0x10]
0x00009194      4883c438       add rsp, 0x38
0x00009198      5b             pop rbx
0x00009199      5d             pop rbp
0x0000919a      415c           pop r12
0x0000919c      415d           pop r13
0x0000919e      415e           pop r14
0x000091a0      415f           pop r15
0x000091a2      c3             ret
0x000091a3      0f1f00         nop dword [rax]
0x000091a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x000091b0      4889d1         mov rcx, rdx
0x000091b3      31d2           xor edx, edx
0x000091b5      e906ffffff     jmp sym.quotearg_alloc_mem
0x000091ba      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x000091c0      8b05f27e2000   mov eax, dword [obj.nslots]             ; [0x2110b8:4]=1
0x000091c6      4154           push r12
0x000091c8      4c8b25f17e20.  mov r12, qword [obj.slotvec]            ; [0x2110c0:8]=0x2110d0 obj.slotvec0
0x000091cf      55             push rbp
0x000091d0      53             push rbx
0x000091d1      83f801         cmp eax, 1
0x000091d4      7e2b           jle 0x9201                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x000091d6      83e802         sub eax, 2
0x000091d9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000091de      48c1e004       shl rax, 4
0x000091e2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000091e7      660f1f840000.  nop word [rax + rax]
0x000091f0      488b3b         mov rdi, qword [rbx]
0x000091f3      4883c310       add rbx, 0x10
0x000091f7      e89489ffff     call sym.imp.free
0x000091fc      4839eb         cmp rbx, rbp
0x000091ff      75ef           jne 0x91f0
0x00009201      498b7c2408     mov rdi, qword [r12 + 8]
0x00009206      488d1d538020.  lea rbx, obj.slot0                      ; 0x211260
0x0000920d      4839df         cmp rdi, rbx
0x00009210      7417           je 0x9229
0x00009212      e87989ffff     call sym.imp.free
0x00009217      48c705ae7e20.  mov qword [obj.slotvec0], 0x100         ; [0x2110d0:8]=256
0x00009222      48891daf7e20.  mov qword [0x002110d8], rbx             ; [0x2110d8:8]=0x211260 obj.slot0
0x00009229      488d1da07e20.  lea rbx, obj.slotvec0                   ; 0x2110d0
0x00009230      4939dc         cmp r12, rbx
0x00009233      740f           je 0x9244
0x00009235      4c89e7         mov rdi, r12
0x00009238      e85389ffff     call sym.imp.free
0x0000923d      48891d7c7e20.  mov qword [obj.slotvec], rbx            ; [0x2110c0:8]=0x2110d0 obj.slotvec0
0x00009244      5b             pop rbx
0x00009245      c705697e2000.  mov dword [obj.nslots], 1               ; [0x2110b8:4]=1
0x0000924f      5d             pop rbp
0x00009250      415c           pop r12
0x00009252      c3             ret
0x00009253      0f1f00         nop dword [rax]
0x00009256      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00009260      488d0df98020.  lea rcx, obj.default_quoting_options    ; 0x211360
0x00009267      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000926e      e90dfbffff     jmp sym.quotearg_n_options
0x00009273      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00009276      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00009280      488d0dd98020.  lea rcx, obj.default_quoting_options    ; 0x211360
0x00009287      e9f4faffff     jmp sym.quotearg_n_options
0x0000928c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00009290      488d0dc98020.  lea rcx, obj.default_quoting_options    ; 0x211360
0x00009297      4889fe         mov rsi, rdi
0x0000929a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000092a1      31ff           xor edi, edi
0x000092a3      e9d8faffff     jmp sym.quotearg_n_options
0x000092a8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x000092b0      488d0da98020.  lea rcx, obj.default_quoting_options    ; 0x211360
0x000092b7      4889f2         mov rdx, rsi
0x000092ba      4889fe         mov rsi, rdi
0x000092bd      31ff           xor edi, edi
0x000092bf      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x000092c4      6690           nop
0x000092c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x000092d0      4883ec48       sub rsp, 0x48
0x000092d4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x000092d7      64488b142528.  mov rdx, qword fs:[0x28]
0x000092e0      4889542438     mov qword [rsp + 0x38], rdx
0x000092e5      31d2           xor edx, edx
0x000092e7      83fe0a         cmp esi, 0xa
0x000092ea      7468           je 0x9354
0x000092ec      893424         mov dword [rsp], esi
0x000092ef      4889e1         mov rcx, rsp
0x000092f2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000092f9      4889c6         mov rsi, rax
0x000092fc      48c744240400.  mov qword [rsp + 4], 0
0x00009305      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000930e      48c744241400.  mov qword [rsp + 0x14], 0
0x00009317      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00009320      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00009329      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00009332      c74424340000.  mov dword [rsp + 0x34], 0
0x0000933a      e841faffff     call sym.quotearg_n_options
0x0000933f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00009344      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000934d      750a           jne 0x9359                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000934f      4883c448       add rsp, 0x48
0x00009353      c3             ret
0x00009354      e84788ffff     call sym.imp.abort
0x00009359      e85289ffff     call sym.imp.__stack_chk_fail
0x0000935e      6690           nop
;-- quotearg_n_style_mem:
0x00009360      4883ec48       sub rsp, 0x48
0x00009364      4889d0         mov rax, rdx
0x00009367      4889ca         mov rdx, rcx
0x0000936a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00009373      48894c2438     mov qword [rsp + 0x38], rcx
0x00009378      31c9           xor ecx, ecx
0x0000937a      83fe0a         cmp esi, 0xa
0x0000937d      7461           je 0x93e0
0x0000937f      893424         mov dword [rsp], esi
0x00009382      4889e1         mov rcx, rsp
0x00009385      4889c6         mov rsi, rax
0x00009388      48c744240400.  mov qword [rsp + 4], 0
0x00009391      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000939a      48c744241400.  mov qword [rsp + 0x14], 0
0x000093a3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000093ac      48c744242400.  mov qword [rsp + 0x24], 0
0x000093b5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000093be      c74424340000.  mov dword [rsp + 0x34], 0
0x000093c6      e8b5f9ffff     call sym.quotearg_n_options
0x000093cb      488b542438     mov rdx, qword [rsp + 0x38]
0x000093d0      644833142528.  xor rdx, qword fs:[0x28]
0x000093d9      750a           jne 0x93e5
0x000093db      4883c448       add rsp, 0x48
0x000093df      c3             ret
0x000093e0      e8bb87ffff     call sym.imp.abort
0x000093e5      e8c688ffff     call sym.imp.__stack_chk_fail
0x000093ea      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000093f0      4889f2         mov rdx, rsi
0x000093f3      89fe           mov esi, edi
0x000093f5      31ff           xor edi, edi
0x000093f7      e9d4feffff     jmp sym.quotearg_n_style
0x000093fc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00009400      4889d1         mov rcx, rdx
0x00009403      4889f2         mov rdx, rsi
0x00009406      89fe           mov esi, edi
0x00009408      31ff           xor edi, edi
0x0000940a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000940f      90             nop
;-- quotearg_char_mem:
0x00009410      4883ec48       sub rsp, 0x48
0x00009414      89d1           mov ecx, edx
0x00009416      64488b042528.  mov rax, qword fs:[0x28]
0x0000941f      4889442438     mov qword [rsp + 0x38], rax
0x00009424      31c0           xor eax, eax
0x00009426      488b05637f20.  mov rax, qword [0x00211390]             ; [0x211390:8]=0
0x0000942d      4989e0         mov r8, rsp
0x00009430      83e11f         and ecx, 0x1f
0x00009433      660f6f05257f.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000943b      4889442430     mov qword [rsp + 0x30], rax
0x00009440      89d0           mov eax, edx
0x00009442      0f290424       movaps xmmword [rsp], xmm0
0x00009446      c0e805         shr al, 5
0x00009449      0fb6c0         movzx eax, al
0x0000944c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00009451      660f6f05177f.  movdqa xmm0, xmmword [0x00211370]
0x00009459      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000945e      660f6f051a7f.  movdqa xmm0, xmmword [0x00211380]
0x00009466      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000946b      418b11         mov edx, dword [r9]
0x0000946e      89d0           mov eax, edx
0x00009470      d3e8           shr eax, cl
0x00009472      f7d0           not eax
0x00009474      83e001         and eax, 1
0x00009477      d3e0           shl eax, cl
0x00009479      4c89c1         mov rcx, r8
0x0000947c      31d0           xor eax, edx
0x0000947e      4889f2         mov rdx, rsi
0x00009481      4889fe         mov rsi, rdi
0x00009484      418901         mov dword [r9], eax
0x00009487      31ff           xor edi, edi
0x00009489      e8f2f8ffff     call sym.quotearg_n_options
0x0000948e      488b742438     mov rsi, qword [rsp + 0x38]
0x00009493      644833342528.  xor rsi, qword fs:[0x28]
0x0000949c      7505           jne 0x94a3
0x0000949e      4883c448       add rsp, 0x48
0x000094a2      c3             ret
0x000094a3      e80888ffff     call sym.imp.__stack_chk_fail
0x000094a8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x000094b0      400fbed6       movsx edx, sil
0x000094b4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000094bb      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x000094c0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000094c5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000094cc      e93fffffff     jmp sym.quotearg_char_mem
0x000094d1      0f1f440000     nop dword [rax + rax]
0x000094d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000094e0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000094e5      e926ffffff     jmp sym.quotearg_char_mem
0x000094ea      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x000094f0      4883ec48       sub rsp, 0x48
0x000094f4      4889d0         mov rax, rdx
0x000094f7      64488b142528.  mov rdx, qword fs:[0x28]
0x00009500      4889542438     mov qword [rsp + 0x38], rdx
0x00009505      31d2           xor edx, edx
0x00009507      83fe0a         cmp esi, 0xa
0x0000950a      7468           je 0x9574
0x0000950c      893424         mov dword [rsp], esi
0x0000950f      4889e1         mov rcx, rsp
0x00009512      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00009519      4889c6         mov rsi, rax
0x0000951c      48c744240400.  mov qword [rsp + 4], 0
0x00009525      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000952e      48c744241400.  mov qword [rsp + 0x14], 0
0x00009537      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00009540      48c744242400.  mov qword [rsp + 0x24], 0
0x00009549      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00009552      c74424340000.  mov dword [rsp + 0x34], 0
0x0000955a      e821f8ffff     call sym.quotearg_n_options
0x0000955f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00009564      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000956d      750a           jne 0x9579
0x0000956f      4883c448       add rsp, 0x48
0x00009573      c3             ret
0x00009574      e82786ffff     call sym.imp.abort
0x00009579      e83287ffff     call sym.imp.__stack_chk_fail
0x0000957e      6690           nop
;-- quotearg_n_custom_mem:
0x00009580      4883ec48       sub rsp, 0x48
0x00009584      4989c9         mov r9, rcx
0x00009587      488b0d027e20.  mov rcx, qword [0x00211390]             ; [0x211390:8]=0
0x0000958e      660f6f05ca7d.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00009596      64488b042528.  mov rax, qword fs:[0x28]
0x0000959f      4889442438     mov qword [rsp + 0x38], rax
0x000095a4      31c0           xor eax, eax
0x000095a6      0f290424       movaps xmmword [rsp], xmm0
0x000095aa      4885f6         test rsi, rsi
0x000095ad      48894c2430     mov qword [rsp + 0x30], rcx
0x000095b2      c704240a0000.  mov dword [rsp], 0xa
0x000095b9      660f6f05af7d.  movdqa xmm0, xmmword [0x00211370]
0x000095c1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000095c6      660f6f05b27d.  movdqa xmm0, xmmword [0x00211380]
0x000095ce      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000095d3      7432           je 0x9607
0x000095d5      4885d2         test rdx, rdx
0x000095d8      742d           je 0x9607
0x000095da      4889742428     mov qword [rsp + 0x28], rsi
0x000095df      4889542430     mov qword [rsp + 0x30], rdx
0x000095e4      4889e1         mov rcx, rsp
0x000095e7      4c89c2         mov rdx, r8
0x000095ea      4c89ce         mov rsi, r9
0x000095ed      e88ef7ffff     call sym.quotearg_n_options
0x000095f2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000095f7      6448333c2528.  xor rdi, qword fs:[0x28]
0x00009600      750a           jne 0x960c
0x00009602      4883c448       add rsp, 0x48
0x00009606      c3             ret
0x00009607      e89485ffff     call sym.imp.abort
0x0000960c      e89f86ffff     call sym.imp.__stack_chk_fail
0x00009611      0f1f440000     nop dword [rax + rax]
0x00009616      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00009620      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00009627      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000962c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00009630      4889d1         mov rcx, rdx
0x00009633      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000963a      4889f2         mov rdx, rsi
0x0000963d      4889fe         mov rsi, rdi
0x00009640      31ff           xor edi, edi
0x00009642      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00009647      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00009650      4989c8         mov r8, rcx
0x00009653      4889d1         mov rcx, rdx
0x00009656      4889f2         mov rdx, rsi
0x00009659      4889fe         mov rsi, rdi
0x0000965c      31ff           xor edi, edi
0x0000965e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00009663      0f1f00         nop dword [rax]
0x00009666      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00009670      488d0d097a20.  lea rcx, obj.quote_quoting_options      ; 0x211080
0x00009677      e904f7ffff     jmp sym.quotearg_n_options
0x0000967c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00009680      488d0df97920.  lea rcx, obj.quote_quoting_options      ; 0x211080
0x00009687      4889f2         mov rdx, rsi
0x0000968a      4889fe         mov rsi, rdi
0x0000968d      31ff           xor edi, edi
0x0000968f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00009694      6690           nop
0x00009696      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x000096a0      488d0dd97920.  lea rcx, obj.quote_quoting_options      ; 0x211080
0x000096a7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000096ae      e9cdf6ffff     jmp sym.quotearg_n_options
0x000096b3      0f1f00         nop dword [rax]
0x000096b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x000096c0      488d0db97920.  lea rcx, obj.quote_quoting_options      ; 0x211080
0x000096c7      4889fe         mov rsi, rdi
0x000096ca      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000096d1      31ff           xor edi, edi
0x000096d3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000096d8      0f1f84000000.  nop dword [rax + rax]
;-- dup_safer:
0x000096e0      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x000096e5      31f6           xor esi, esi
0x000096e7      31c0           xor eax, eax
0x000096e9      e9d21c0000     jmp sym.rpl_fcntl
0x000096ee      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- version_etc_arn:
0x000096f0      4157           push r15
0x000096f2      4156           push r14
0x000096f4      4155           push r13
0x000096f6      4154           push r12
0x000096f8      4d89cc         mov r12, r9
0x000096fb      55             push rbp
0x000096fc      53             push rbx
0x000096fd      4889fd         mov rbp, rdi
0x00009700      4c89c3         mov rbx, r8
0x00009703      4883ec28       sub rsp, 0x28
0x00009707      4885f6         test rsi, rsi
0x0000970a      0f8418010000   je 0x9828
0x00009710      4989d0         mov r8, rdx
0x00009713      488d156e4800.  lea rdx, [0x0000df88]                   ; "%s (%s) %s\n"
0x0000971a      4989c9         mov r9, rcx
0x0000971d      31c0           xor eax, eax
0x0000971f      4889f1         mov rcx, rsi
0x00009722      be01000000     mov esi, 1
0x00009727      e82488ffff     call sym.imp.__fprintf_chk
0x0000972c      488d35684800.  lea rsi, [0x0000df9b]                   ; "(C)"
0x00009733      31ff           xor edi, edi
0x00009735      ba05000000     mov edx, 5
0x0000973a      e84185ffff     call sym.imp.dcgettext
0x0000973f      488d157a4b00.  lea rdx, obj.version_etc_copyright      ; 0xe2c0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00009746      4889c1         mov rcx, rax
0x00009749      41b8e3070000   mov r8d, 0x7e3
0x0000974f      be01000000     mov esi, 1
0x00009754      4889ef         mov rdi, rbp
0x00009757      31c0           xor eax, eax
0x00009759      e8f287ffff     call sym.imp.__fprintf_chk
0x0000975e      488d35c34800.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0xe028 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00009765      31ff           xor edi, edi
0x00009767      ba05000000     mov edx, 5
0x0000976c      e80f85ffff     call sym.imp.dcgettext
0x00009771      4889ee         mov rsi, rbp
0x00009774      4889c7         mov rdi, rax
0x00009777      e81486ffff     call sym.imp.fputs_unlocked
0x0000977c      4983fc09       cmp r12, 9
0x00009780      0f873a030000   ja 0x9ac0
0x00009786      488d15f74a00.  lea rdx, [0x0000e284]
0x0000978d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00009791      4801d0         add rax, rdx
0x00009794      ffe0           jmp rax
0x00009796      662e0f1f8400.  nop word cs:[rax + rax]
0x000097a0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000097a4      488b4310       mov rax, qword [rbx + 0x10]
0x000097a8      488d35e94900.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0xe198 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x000097af      4c8b4308       mov r8, qword [rbx + 8]
0x000097b3      ba05000000     mov edx, 5
0x000097b8      31ff           xor edi, edi
0x000097ba      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000097be      4c8b6328       mov r12, qword [rbx + 0x28]
0x000097c2      4c894c2410     mov qword [rsp + 0x10], r9
0x000097c7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000097cb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000097cf      48890424       mov qword [rsp], rax
0x000097d3      4c89442408     mov qword [rsp + 8], r8
0x000097d8      488b1b         mov rbx, qword [rbx]
0x000097db      e8a084ffff     call sym.imp.dcgettext
0x000097e0      4883ec08       sub rsp, 8
0x000097e4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000097e9      4889c2         mov rdx, rax
0x000097ec      4889d9         mov rcx, rbx
0x000097ef      be01000000     mov esi, 1
0x000097f4      4889ef         mov rdi, rbp
0x000097f7      31c0           xor eax, eax
0x000097f9      4151           push r9
0x000097fb      4155           push r13
0x000097fd      4154           push r12
0x000097ff      4157           push r15
0x00009801      4156           push r14
0x00009803      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00009808      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000980d      e83e87ffff     call sym.imp.__fprintf_chk
0x00009812      4883c430       add rsp, 0x30
0x00009816      4883c428       add rsp, 0x28
0x0000981a      5b             pop rbx
0x0000981b      5d             pop rbp
0x0000981c      415c           pop r12
0x0000981e      415d           pop r13
0x00009820      415e           pop r14
0x00009822      415f           pop r15
0x00009824      c3             ret
0x00009825      0f1f00         nop dword [rax]
0x00009828      4989c8         mov r8, rcx
0x0000982b      4889d1         mov rcx, rdx
0x0000982e      488d155f4700.  lea rdx, str.s__s                       ; 0xdf94 ; "%s %s\n"
0x00009835      be01000000     mov esi, 1
0x0000983a      31c0           xor eax, eax
0x0000983c      e80f87ffff     call sym.imp.__fprintf_chk
0x00009841      e9e6feffff     jmp 0x972c
0x00009846      662e0f1f8400.  nop word cs:[rax + rax]
0x00009850      4c8b5340       mov r10, qword [rbx + 0x40]
0x00009854      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00009858      488d35694900.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0xe1c8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000985f      488b4310       mov rax, qword [rbx + 0x10]
0x00009863      4c8b4308       mov r8, qword [rbx + 8]
0x00009867      ba05000000     mov edx, 5
0x0000986c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00009870      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009874      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00009878      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000987c      488b1b         mov rbx, qword [rbx]
0x0000987f      4c89542418     mov qword [rsp + 0x18], r10
0x00009884      4c894c2410     mov qword [rsp + 0x10], r9
0x00009889      48890424       mov qword [rsp], rax
0x0000988d      4c89442408     mov qword [rsp + 8], r8
0x00009892      31ff           xor edi, edi
0x00009894      e8e783ffff     call sym.imp.dcgettext
0x00009899      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000989e      4152           push r10
0x000098a0      e93fffffff     jmp 0x97e4
0x000098a5      0f1f00         nop dword [rax]
0x000098a8      488b1b         mov rbx, qword [rbx]
0x000098ab      488d35ed4600.  lea rsi, str.Written_by__s.             ; 0xdf9f ; "Written by %s.\n"
0x000098b2      ba05000000     mov edx, 5
0x000098b7      31ff           xor edi, edi
0x000098b9      e8c283ffff     call sym.imp.dcgettext
0x000098be      4883c428       add rsp, 0x28
0x000098c2      4889d9         mov rcx, rbx
0x000098c5      4889ef         mov rdi, rbp
0x000098c8      5b             pop rbx
0x000098c9      5d             pop rbp
0x000098ca      415c           pop r12
0x000098cc      415d           pop r13
0x000098ce      415e           pop r14
0x000098d0      415f           pop r15
0x000098d2      4889c2         mov rdx, rax
0x000098d5      be01000000     mov esi, 1
0x000098da      31c0           xor eax, eax
0x000098dc      e96f86ffff     jmp sym.imp.__fprintf_chk
0x000098e1      0f1f80000000.  nop dword [rax]
0x000098e8      4c8b6308       mov r12, qword [rbx + 8]
0x000098ec      488d35bc4600.  lea rsi, str.Written_by__s_and__s.      ; 0xdfaf ; "Written by %s and %s.\n"
0x000098f3      488b1b         mov rbx, qword [rbx]
0x000098f6      ba05000000     mov edx, 5
0x000098fb      31ff           xor edi, edi
0x000098fd      e87e83ffff     call sym.imp.dcgettext
0x00009902      4883c428       add rsp, 0x28
0x00009906      4d89e0         mov r8, r12
0x00009909      4889d9         mov rcx, rbx
0x0000990c      4889ef         mov rdi, rbp
0x0000990f      4889c2         mov rdx, rax
0x00009912      be01000000     mov esi, 1
0x00009917      5b             pop rbx
0x00009918      5d             pop rbp
0x00009919      415c           pop r12
0x0000991b      415d           pop r13
0x0000991d      415e           pop r14
0x0000991f      415f           pop r15
0x00009921      31c0           xor eax, eax
0x00009923      e92886ffff     jmp sym.imp.__fprintf_chk
0x00009928      0f1f84000000.  nop dword [rax + rax]
0x00009930      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00009934      4c8b6308       mov r12, qword [rbx + 8]
0x00009938      488d35874600.  lea rsi, str.Written_by__s___s__and__s. ; 0xdfc6 ; "Written by %s, %s, and %s.\n"
0x0000993f      488b1b         mov rbx, qword [rbx]
0x00009942      ba05000000     mov edx, 5
0x00009947      31ff           xor edi, edi
0x00009949      e83283ffff     call sym.imp.dcgettext
0x0000994e      4883c428       add rsp, 0x28
0x00009952      4d89e9         mov r9, r13
0x00009955      4d89e0         mov r8, r12
0x00009958      4889d9         mov rcx, rbx
0x0000995b      4889ef         mov rdi, rbp
0x0000995e      4889c2         mov rdx, rax
0x00009961      5b             pop rbx
0x00009962      5d             pop rbp
0x00009963      415c           pop r12
0x00009965      415d           pop r13
0x00009967      415e           pop r14
0x00009969      415f           pop r15
0x0000996b      be01000000     mov esi, 1
0x00009970      31c0           xor eax, eax
0x00009972      e9d985ffff     jmp sym.imp.__fprintf_chk
0x00009977      660f1f840000.  nop word [rax + rax]
0x00009980      488d35714700.  lea rsi, str.Written_by__s___s___s___and__s. ; 0xe0f8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00009987      ba05000000     mov edx, 5
0x0000998c      31ff           xor edi, edi
0x0000998e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009992      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00009996      4c8b6308       mov r12, qword [rbx + 8]
0x0000999a      488b1b         mov rbx, qword [rbx]
0x0000999d      e8de82ffff     call sym.imp.dcgettext
0x000099a2      4883ec08       sub rsp, 8
0x000099a6      4156           push r14
0x000099a8      4889c2         mov rdx, rax
0x000099ab      4d89e9         mov r9, r13
0x000099ae      4d89e0         mov r8, r12
0x000099b1      4889d9         mov rcx, rbx
0x000099b4      4889ef         mov rdi, rbp
0x000099b7      be01000000     mov esi, 1
0x000099bc      31c0           xor eax, eax
0x000099be      e88d85ffff     call sym.imp.__fprintf_chk
0x000099c3      58             pop rax
0x000099c4      5a             pop rdx
0x000099c5      4883c428       add rsp, 0x28
0x000099c9      5b             pop rbx
0x000099ca      5d             pop rbp
0x000099cb      415c           pop r12
0x000099cd      415d           pop r13
0x000099cf      415e           pop r14
0x000099d1      415f           pop r15
0x000099d3      c3             ret
0x000099d4      0f1f4000       nop dword [rax]
0x000099d8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000099dc      488d35354700.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0xe118 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x000099e3      ba05000000     mov edx, 5
0x000099e8      31ff           xor edi, edi
0x000099ea      4c8b7318       mov r14, qword [rbx + 0x18]
0x000099ee      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000099f2      4c8b6308       mov r12, qword [rbx + 8]
0x000099f6      488b1b         mov rbx, qword [rbx]
0x000099f9      e88282ffff     call sym.imp.dcgettext
0x000099fe      4157           push r15
0x00009a00      eba4           jmp 0x99a6
0x00009a02      660f1f440000   nop word [rax + rax]
0x00009a08      4c8b4308       mov r8, qword [rbx + 8]
0x00009a0c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009a10      488d35294700.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0xe140 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00009a17      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00009a1b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009a1f      ba05000000     mov edx, 5
0x00009a24      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00009a28      31ff           xor edi, edi
0x00009a2a      488b1b         mov rbx, qword [rbx]
0x00009a2d      4c890424       mov qword [rsp], r8
0x00009a31      e84a82ffff     call sym.imp.dcgettext
0x00009a36      4883ec08       sub rsp, 8
0x00009a3a      4d89e9         mov r9, r13
0x00009a3d      4154           push r12
0x00009a3f      4157           push r15
0x00009a41      4156           push r14
0x00009a43      4c8b442420     mov r8, qword [rsp + 0x20]
0x00009a48      4889d9         mov rcx, rbx
0x00009a4b      4889c2         mov rdx, rax
0x00009a4e      4889ef         mov rdi, rbp
0x00009a51      be01000000     mov esi, 1
0x00009a56      31c0           xor eax, eax
0x00009a58      e8f384ffff     call sym.imp.__fprintf_chk
0x00009a5d      4883c420       add rsp, 0x20
0x00009a61      4883c428       add rsp, 0x28
0x00009a65      5b             pop rbx
0x00009a66      5d             pop rbp
0x00009a67      415c           pop r12
0x00009a69      415d           pop r13
0x00009a6b      415e           pop r14
0x00009a6d      415f           pop r15
0x00009a6f      c3             ret
0x00009a70      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00009a74      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00009a78      488d35e94600.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0xe168 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00009a7f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009a83      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00009a87      ba05000000     mov edx, 5
0x00009a8c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009a90      4c8b4308       mov r8, qword [rbx + 8]
0x00009a94      31ff           xor edi, edi
0x00009a96      4c894c2408     mov qword [rsp + 8], r9
0x00009a9b      488b1b         mov rbx, qword [rbx]
0x00009a9e      4c890424       mov qword [rsp], r8
0x00009aa2      e8d981ffff     call sym.imp.dcgettext
0x00009aa7      4155           push r13
0x00009aa9      4154           push r12
0x00009aab      4157           push r15
0x00009aad      4156           push r14
0x00009aaf      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00009ab4      eb8d           jmp 0x9a43
0x00009ab6      662e0f1f8400.  nop word cs:[rax + rax]
0x00009ac0      4c8b5340       mov r10, qword [rbx + 0x40]
0x00009ac4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00009ac8      ba05000000     mov edx, 5
0x00009acd      488b4310       mov rax, qword [rbx + 0x10]
0x00009ad1      4c8b4308       mov r8, qword [rbx + 8]
0x00009ad5      488d35244700.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0xe200 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00009adc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00009ae0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009ae4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00009ae8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009aec      4c89542418     mov qword [rsp + 0x18], r10
0x00009af1      4c894c2410     mov qword [rsp + 0x10], r9
0x00009af6      48890424       mov qword [rsp], rax
0x00009afa      4c89442408     mov qword [rsp + 8], r8
0x00009aff      488b1b         mov rbx, qword [rbx]
0x00009b02      e98bfdffff     jmp 0x9892
0x00009b07      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00009b10      4531c9         xor r9d, r9d
0x00009b13      49833800       cmp qword [r8], 0
0x00009b17      7412           je 0x9b2b
0x00009b19      0f1f80000000.  nop dword [rax]
0x00009b20      4983c101       add r9, 1
0x00009b24      4b833cc800     cmp qword [r8 + r9*8], 0
0x00009b29      75f5           jne 0x9b20
0x00009b2b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00009b30      4883ec68       sub rsp, 0x68
0x00009b34      4d89c2         mov r10, r8
0x00009b37      4531c9         xor r9d, r9d
0x00009b3a      64488b042528.  mov rax, qword fs:[0x28]
0x00009b43      4889442458     mov qword [rsp + 0x58], rax
0x00009b48      31c0           xor eax, eax
0x00009b4a      4989e0         mov r8, rsp
0x00009b4d      0f1f00         nop dword [rax]
0x00009b50      418b02         mov eax, dword [r10]
0x00009b53      83f82f         cmp eax, 0x2f
0x00009b56      7742           ja 0x9b9a
0x00009b58      4189c3         mov r11d, eax
0x00009b5b      4d035a10       add r11, qword [r10 + 0x10]
0x00009b5f      83c008         add eax, 8
0x00009b62      418902         mov dword [r10], eax
0x00009b65      498b03         mov rax, qword [r11]
0x00009b68      4885c0         test rax, rax
0x00009b6b      4b8904c8       mov qword [r8 + r9*8], rax
0x00009b6f      740a           je 0x9b7b
0x00009b71      4983c101       add r9, 1
0x00009b75      4983f90a       cmp r9, 0xa
0x00009b79      75d5           jne 0x9b50
0x00009b7b      e870fbffff     call sym.version_etc_arn
0x00009b80      488b442458     mov rax, qword [rsp + 0x58]
0x00009b85      644833042528.  xor rax, qword fs:[0x28]
0x00009b8e      7505           jne 0x9b95
0x00009b90      4883c468       add rsp, 0x68
0x00009b94      c3             ret
0x00009b95      e81681ffff     call sym.imp.__stack_chk_fail
0x00009b9a      4d8b5a08       mov r11, qword [r10 + 8]
0x00009b9e      498d4308       lea rax, [r11 + 8]
0x00009ba2      49894208       mov qword [r10 + 8], rax
0x00009ba6      ebbd           jmp 0x9b65
0x00009ba8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00009bb0      55             push rbp
0x00009bb1      53             push rbx
0x00009bb2      41ba20000000   mov r10d, 0x20                          ; "@"
0x00009bb8      4531db         xor r11d, r11d
0x00009bbb      4881ecb80000.  sub rsp, 0xb8
0x00009bc2      64488b042528.  mov rax, qword fs:[0x28]
0x00009bcb      4889442478     mov qword [rsp + 0x78], rax
0x00009bd0      31c0           xor eax, eax
0x00009bd2      488d8424d000.  lea rax, [rsp + 0xd0]
0x00009bda      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00009be2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00009bea      4c8d442420     lea r8, [rsp + 0x20]
0x00009bef      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00009bf7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00009bff      4889442410     mov qword [rsp + 0x10], rax
0x00009c04      488d84248000.  lea rax, [rsp + 0x80]
0x00009c0c      4531c9         xor r9d, r9d
0x00009c0f      4889442418     mov qword [rsp + 0x18], rax
0x00009c14      4889c5         mov rbp, rax
0x00009c17      660f1f840000.  nop word [rax + rax]
0x00009c20      4183fa2f       cmp r10d, 0x2f
0x00009c24      7756           ja 0x9c7c
0x00009c26      4489d0         mov eax, r10d
0x00009c29      41bb01000000   mov r11d, 1
0x00009c2f      4183c208       add r10d, 8
0x00009c33      4801e8         add rax, rbp
0x00009c36      488b00         mov rax, qword [rax]
0x00009c39      4885c0         test rax, rax
0x00009c3c      4b8904c8       mov qword [r8 + r9*8], rax
0x00009c40      740a           je 0x9c4c
0x00009c42      4983c101       add r9, 1
0x00009c46      4983f90a       cmp r9, 0xa
0x00009c4a      75d4           jne 0x9c20
0x00009c4c      4584db         test r11b, r11b
0x00009c4f      7524           jne 0x9c75
0x00009c51      e89afaffff     call sym.version_etc_arn
0x00009c56      488b442478     mov rax, qword [rsp + 0x78]
0x00009c5b      644833042528.  xor rax, qword fs:[0x28]
0x00009c64      750a           jne 0x9c70
0x00009c66      4881c4b80000.  add rsp, 0xb8
0x00009c6d      5b             pop rbx
0x00009c6e      5d             pop rbp
0x00009c6f      c3             ret
0x00009c70      e83b80ffff     call sym.imp.__stack_chk_fail
0x00009c75      4489542408     mov dword [rsp + 8], r10d
0x00009c7a      ebd5           jmp 0x9c51
0x00009c7c      4889d8         mov rax, rbx
0x00009c7f      4883c308       add rbx, 8
0x00009c83      ebb1           jmp 0x9c36
0x00009c85      90             nop
0x00009c86      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00009c90      53             push rbx
0x00009c91      488d354a4300.  lea rsi, str.Report_bugs_to:__s         ; 0xdfe2 ; "\nReport bugs to: %s\n"
0x00009c98      ba05000000     mov edx, 5
0x00009c9d      31ff           xor edi, edi
0x00009c9f      e8dc7fffff     call sym.imp.dcgettext
0x00009ca4      488d154c4300.  lea rdx, str.bug_coreutils_gnu.org      ; 0xdff7 ; "bug-coreutils@gnu.org"
0x00009cab      4889c6         mov rsi, rax
0x00009cae      bf01000000     mov edi, 1
0x00009cb3      31c0           xor eax, eax
0x00009cb5      e8f681ffff     call sym.imp.__printf_chk
0x00009cba      488d354c4300.  lea rsi, str.s_home_page:___s           ; 0xe00d ; "%s home page: <%s>\n"
0x00009cc1      ba05000000     mov edx, 5
0x00009cc6      31ff           xor edi, edi
0x00009cc8      e8b37fffff     call sym.imp.dcgettext
0x00009ccd      488d0d743400.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xd148 ; "https://www.gnu.org/software/coreutils/"
0x00009cd4      488d159a2200.  lea rdx, str.GNU_coreutils              ; 0xbf75 ; "GNU coreutils"
0x00009cdb      4889c6         mov rsi, rax
0x00009cde      bf01000000     mov edi, 1
0x00009ce3      31c0           xor eax, eax
0x00009ce5      e8c681ffff     call sym.imp.__printf_chk
0x00009cea      488b1df77320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110e8:8]=0
0x00009cf1      488d35484500.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0xe240 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00009cf8      31ff           xor edi, edi
0x00009cfa      ba05000000     mov edx, 5
0x00009cff      e87c7fffff     call sym.imp.dcgettext
0x00009d04      4889de         mov rsi, rbx
0x00009d07      4889c7         mov rdi, rax
0x00009d0a      5b             pop rbx
0x00009d0b      e98080ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00009d10      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00009d11      4889fb         mov rbx, rdi
0x00009d14      e8f780ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00009d19      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00009d1c      7505           jne 0x9d23
0x00009d1e      4885db         test rbx, rbx
0x00009d21      7502           jne 0x9d25
0x00009d23      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00009d24      c3             ret
0x00009d25      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00009d2a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00009d30      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00009d33      48f7e6         mul rsi
0x00009d36      4889c7         mov rdi, rax
0x00009d39      0f90c0         seto al
0x00009d3c      4885ff         test rdi, rdi
0x00009d3f      780a           js 0x9d4b
0x00009d41      0fb6c0         movzx eax, al
0x00009d44      4885c0         test rax, rax
0x00009d47      7502           jne 0x9d4b
0x00009d49      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00009d4b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00009d4f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00009d54      6690           nop
0x00009d56      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00009d60      ebae           jmp sym.xmalloc
0x00009d62      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00009d66      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00009d70      4885f6         test rsi, rsi
0x00009d73      53             push rbx
0x00009d74      4889f3         mov rbx, rsi
0x00009d77      7505           jne 0x9d7e
0x00009d79      4885ff         test rdi, rdi
0x00009d7c      751a           jne 0x9d98
0x00009d7e      4889de         mov rsi, rbx
0x00009d81      e8fa80ffff     call sym.imp.realloc
0x00009d86      4885c0         test rax, rax
0x00009d89      7505           jne 0x9d90
0x00009d8b      4885db         test rbx, rbx
0x00009d8e      7511           jne 0x9da1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00009d90      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00009d91      c3             ret
0x00009d92      660f1f440000   nop word [rax + rax]
0x00009d98      e8f37dffff     call sym.imp.free
0x00009d9d      31c0           xor eax, eax
0x00009d9f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00009da0      c3             ret
0x00009da1      e8ba010000     call sym.xalloc_die
0x00009da6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00009db0      4889f0         mov rax, rsi
0x00009db3      48f7e2         mul rdx
0x00009db6      4889c6         mov rsi, rax
0x00009db9      0f90c0         seto al
0x00009dbc      4885f6         test rsi, rsi
0x00009dbf      780a           js 0x9dcb
0x00009dc1      0fb6c0         movzx eax, al
0x00009dc4      4885c0         test rax, rax
0x00009dc7      7502           jne 0x9dcb
0x00009dc9      eba5           jmp sym.xrealloc
0x00009dcb      4883ec08       sub rsp, 8
0x00009dcf      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00009dd4      6690           nop
0x00009dd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00009de0      4885ff         test rdi, rdi
0x00009de3      4989d1         mov r9, rdx
0x00009de6      488b0e         mov rcx, qword [rsi]
0x00009de9      7435           je 0x9e20
0x00009deb      31d2           xor edx, edx
0x00009ded      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00009df7      49f7f1         div r9
0x00009dfa      4839c8         cmp rax, rcx
0x00009dfd      763c           jbe 0x9e3b
0x00009dff      4889c8         mov rax, rcx
0x00009e02      48d1e8         shr rax, 1
0x00009e05      488d4c0801     lea rcx, [rax + rcx + 1]
0x00009e0a      48890e         mov qword [rsi], rcx
0x00009e0d      490fafc9       imul rcx, r9
0x00009e11      4889ce         mov rsi, rcx
0x00009e14      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00009e19      0f1f80000000.  nop dword [rax]
0x00009e20      4885c9         test rcx, rcx
0x00009e23      7423           je 0x9e48
0x00009e25      4889c8         mov rax, rcx
0x00009e28      49f7e1         mul r9
0x00009e2b      0f90c2         seto dl
0x00009e2e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00009e31      0fb6d2         movzx edx, dl
0x00009e34      7805           js 0x9e3b
0x00009e36      4885d2         test rdx, rdx
0x00009e39      74cf           je 0x9e0a
0x00009e3b      4883ec08       sub rsp, 8
0x00009e3f      e81c010000     call sym.xalloc_die
0x00009e44      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00009e48      31d2           xor edx, edx
0x00009e4a      b880000000     mov eax, 0x80
0x00009e4f      4531c0         xor r8d, r8d
0x00009e52      49f7f1         div r9
0x00009e55      4885c0         test rax, rax
0x00009e58      410f94c0       sete r8b
0x00009e5c      498d0c00       lea rcx, [r8 + rax]
0x00009e60      ebc3           jmp 0x9e25
0x00009e62      0f1f4000       nop dword [rax]
0x00009e66      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00009e70      4885ff         test rdi, rdi
0x00009e73      488b06         mov rax, qword [rsi]
0x00009e76      7428           je 0x9ea0
0x00009e78      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00009e82      4839d0         cmp rax, rdx
0x00009e85      772a           ja 0x9eb1
0x00009e87      4889c2         mov rdx, rax
0x00009e8a      48d1ea         shr rdx, 1
0x00009e8d      488d440201     lea rax, [rdx + rax + 1]
0x00009e92      488906         mov qword [rsi], rax
0x00009e95      4889c6         mov rsi, rax
0x00009e98      e9d3feffff     jmp sym.xrealloc
0x00009e9d      0f1f00         nop dword [rax]
0x00009ea0      4885c0         test rax, rax
0x00009ea3      ba80000000     mov edx, 0x80
0x00009ea8      480f44c2       cmove rax, rdx
0x00009eac      4885c0         test rax, rax
0x00009eaf      79e1           jns 0x9e92
0x00009eb1      4883ec08       sub rsp, 8
0x00009eb5      e8a6000000     call sym.xalloc_die
0x00009eba      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00009ec0      53             push rbx
0x00009ec1      4889fb         mov rbx, rdi
0x00009ec4      e847feffff     call sym.xmalloc
0x00009ec9      4889da         mov rdx, rbx
0x00009ecc      31f6           xor esi, esi
0x00009ece      4889c7         mov rdi, rax
0x00009ed1      5b             pop rbx
0x00009ed2      e9797effff     jmp sym.imp.memset
0x00009ed7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00009ee0      4889f8         mov rax, rdi
0x00009ee3      4883ec08       sub rsp, 8
0x00009ee7      48f7e6         mul rsi
0x00009eea      0f90c2         seto dl
0x00009eed      4885c0         test rax, rax
0x00009ef0      7817           js 0x9f09
0x00009ef2      0fb6d2         movzx edx, dl
0x00009ef5      4885d2         test rdx, rdx
0x00009ef8      750f           jne 0x9f09
0x00009efa      e8a17effff     call sym.imp.calloc
0x00009eff      4885c0         test rax, rax
0x00009f02      7405           je 0x9f09
0x00009f04      4883c408       add rsp, 8
0x00009f08      c3             ret
0x00009f09      e852000000     call sym.xalloc_die
0x00009f0e      6690           nop
;-- xmemdup:
0x00009f10      55             push rbp
0x00009f11      53             push rbx
0x00009f12      4889fd         mov rbp, rdi
0x00009f15      4889f7         mov rdi, rsi
0x00009f18      4889f3         mov rbx, rsi
0x00009f1b      4883ec08       sub rsp, 8
0x00009f1f      e8ecfdffff     call sym.xmalloc
0x00009f24      4883c408       add rsp, 8
0x00009f28      4889da         mov rdx, rbx
0x00009f2b      4889ee         mov rsi, rbp
0x00009f2e      5b             pop rbx
0x00009f2f      5d             pop rbp
0x00009f30      4889c7         mov rdi, rax
0x00009f33      e9987effff     jmp sym.imp.memcpy
0x00009f38      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00009f40      53             push rbx
0x00009f41      4889fb         mov rbx, rdi
0x00009f44      e8577dffff     call sym.imp.strlen
0x00009f49      4889df         mov rdi, rbx
0x00009f4c      488d7001       lea rsi, [rax + 1]
0x00009f50      5b             pop rbx
0x00009f51      ebbd           jmp sym.xmemdup
0x00009f53      662e0f1f8400.  nop word cs:[rax + rax]
0x00009f5d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00009f60      488d35884300.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0xe2ef ; "memory exhausted"
0x00009f67      4883ec08       sub rsp, 8
0x00009f6b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00009f70      31ff           xor edi, edi
0x00009f72      e8097dffff     call sym.imp.dcgettext
0x00009f77      8b3de3702000   mov edi, dword [obj.exit_failure]       ; [0x211060:4]=1
0x00009f7d      488d15c63800.  lea rdx, [0x0000d84a]                   ; "%s"
0x00009f84      4889c1         mov rcx, rax
0x00009f87      31f6           xor esi, esi
0x00009f89      31c0           xor eax, eax
0x00009f8b      e8507fffff     call sym.imp.error
0x00009f90      e80b7cffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00009f95      662e0f1f8400.  nop word cs:[rax + rax]
0x00009f9f      90             nop
;-- xnumtoimax:
0x00009fa0      4157           push r15                                ; ../coreutils-8.31/lib/xdectoint.c:38
0x00009fa2      4156           push r14
0x00009fa4      4989cf         mov r15, rcx
0x00009fa7      4155           push r13
0x00009fa9      4154           push r12
0x00009fab      4989d6         mov r14, rdx
0x00009fae      55             push rbp
0x00009faf      53             push rbx
0x00009fb0      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00009fb2      31f6           xor esi, esi
0x00009fb4      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/xdectoint.c:38
0x00009fb7      4d89cd         mov r13, r9
0x00009fba      4883ec18       sub rsp, 0x18
0x00009fbe      4889e1         mov rcx, rsp                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00009fc1      8b5c2450       mov ebx, dword [rsp + 0x50]             ; ../coreutils-8.31/lib/xdectoint.c:38
0x00009fc5      64488b042528.  mov rax, qword fs:[0x28]
0x00009fce      4889442408     mov qword [rsp + 8], rax
0x00009fd3      31c0           xor eax, eax
0x00009fd5      e816010000     call sym.xstrtoimax                     ; ../coreutils-8.31/lib/xdectoint.c:42
0x00009fda      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xdectoint.c:44
0x00009fdc      0f858e000000   jne 0xa070
0x00009fe2      488b2c24       mov rbp, qword [rsp]                    ; ../coreutils-8.31/lib/xdectoint.c:46
0x00009fe6      4c39f5         cmp rbp, r14
0x00009fe9      7c05           jl 0x9ff0
0x00009feb      4c39fd         cmp rbp, r15
0x00009fee      7e56           jle 0xa046
0x00009ff0      e8bb7bffff     call sym.imp.__errno_location
0x00009ff5      4881fdffffff.  cmp rbp, 0x3fffffff                     ; ../coreutils-8.31/lib/xdectoint.c:51
0x00009ffc      4989c6         mov r14, rax
0x00009fff      0f8e8b000000   jle 0xa090
0x0000a005      41c7064b0000.  mov dword [r14], 0x4b                   ; ../coreutils-8.31/lib/xdectoint.c:62 ; 'K'
                                                                       ; [0x4b:4]=0
0x0000a00c      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/xdectoint.c:69
0x0000a00f      e8acf6ffff     call sym.quote
0x0000a014      418b36         mov esi, dword [r14]
0x0000a017      4989c0         mov r8, rax
0x0000a01a      b800000000     mov eax, 0
0x0000a01f      488d15203800.  lea rdx, str.s:__s                      ; 0xd846 ; "%s: %s"
0x0000a026      4c89e9         mov rcx, r13
0x0000a029      83fe16         cmp esi, 0x16
0x0000a02c      0f44f0         cmove esi, eax
0x0000a02f      85db           test ebx, ebx
0x0000a031      b801000000     mov eax, 1
0x0000a036      0f44d8         cmove ebx, eax
0x0000a039      31c0           xor eax, eax
0x0000a03b      89df           mov edi, ebx
0x0000a03d      e89e7effff     call sym.imp.error
0x0000a042      488b2c24       mov rbp, qword [rsp]
0x0000a046      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xdectoint.c:74
0x0000a04b      644833142528.  xor rdx, qword fs:[0x28]
0x0000a054      4889e8         mov rax, rbp
0x0000a057      7553           jne 0xa0ac
0x0000a059      4883c418       add rsp, 0x18
0x0000a05d      5b             pop rbx
0x0000a05e      5d             pop rbp
0x0000a05f      415c           pop r12
0x0000a061      415d           pop r13
0x0000a063      415e           pop r14
0x0000a065      415f           pop r15
0x0000a067      c3             ret
0x0000a068      0f1f84000000.  nop dword [rax + rax]
0x0000a070      89c5           mov ebp, eax
0x0000a072      e8397bffff     call sym.imp.__errno_location
0x0000a077      83fd01         cmp ebp, 1                              ; ../coreutils-8.31/lib/xdectoint.c:61
0x0000a07a      4989c6         mov r14, rax
0x0000a07d      7486           je 0xa005
0x0000a07f      83fd03         cmp ebp, 3                              ; ../coreutils-8.31/lib/xdectoint.c:63
0x0000a082      7588           jne 0xa00c
0x0000a084      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/xdectoint.c:64
0x0000a08a      eb80           jmp 0xa00c
0x0000a08c      0f1f4000       nop dword [rax]
0x0000a090      4881fdffffff.  cmp rbp, 0xffffffffbfffffff             ; ../coreutils-8.31/lib/xdectoint.c:55
0x0000a097      b822000000     mov eax, 0x22                           ; '"'
0x0000a09c      ba4b000000     mov edx, 0x4b                           ; 'K'
0x0000a0a1      0f4ec2         cmovle eax, edx
0x0000a0a4      418906         mov dword [r14], eax
0x0000a0a7      e960ffffff     jmp 0xa00c
0x0000a0ac      e8ff7bffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xdectoint.c:74
0x0000a0b1      0f1f440000     nop dword [rax + rax]
0x0000a0b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xdectoimax:
0x0000a0c0      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/xdectoint.c:84
0x0000a0c4      4151           push r9                                 ; ../coreutils-8.31/lib/xdectoint.c:85
0x0000a0c6      4d89c1         mov r9, r8
0x0000a0c9      4989c8         mov r8, rcx
0x0000a0cc      4889d1         mov rcx, rdx
0x0000a0cf      4889f2         mov rdx, rsi
0x0000a0d2      be0a000000     mov esi, 0xa
0x0000a0d7      e8c4feffff     call sym.xnumtoimax
0x0000a0dc      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/xdectoint.c:86
0x0000a0e0      c3             ret
0x0000a0e1      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a0eb      0f1f440000     nop dword [rax + rax]
;-- xstrtoimax:
0x0000a0f0      4157           push r15
0x0000a0f2      4156           push r14
0x0000a0f4      4155           push r13
0x0000a0f6      4154           push r12
0x0000a0f8      55             push rbp
0x0000a0f9      53             push rbx
0x0000a0fa      4883ec28       sub rsp, 0x28
0x0000a0fe      64488b042528.  mov rax, qword fs:[0x28]
0x0000a107      4889442418     mov qword [rsp + 0x18], rax
0x0000a10c      31c0           xor eax, eax
0x0000a10e      83fa24         cmp edx, 0x24
0x0000a111      0f8768060000   ja 0xa77f
0x0000a117      488d442410     lea rax, [rsp + 0x10]
0x0000a11c      4885f6         test rsi, rsi
0x0000a11f      4889f3         mov rbx, rsi
0x0000a122      4989fc         mov r12, rdi
0x0000a125      89d5           mov ebp, edx
0x0000a127      4989ce         mov r14, rcx
0x0000a12a      480f44d8       cmove rbx, rax
0x0000a12e      4d89c7         mov r15, r8
0x0000a131      e87a7affff     call sym.imp.__errno_location
0x0000a136      31c9           xor ecx, ecx
0x0000a138      89ea           mov edx, ebp
0x0000a13a      c70000000000   mov dword [rax], 0
0x0000a140      4889de         mov rsi, rbx
0x0000a143      4c89e7         mov rdi, r12
0x0000a146      4989c5         mov r13, rax
0x0000a149      e8027bffff     call sym.imp.__strtol_internal
0x0000a14e      488b0b         mov rcx, qword [rbx]
0x0000a151      4889c5         mov rbp, rax
0x0000a154      4c39e1         cmp rcx, r12
0x0000a157      745f           je 0xa1b8
0x0000a159      418b4500       mov eax, dword [r13]
0x0000a15d      85c0           test eax, eax
0x0000a15f      753f           jne 0xa1a0
0x0000a161      4531e4         xor r12d, r12d
0x0000a164      4d85ff         test r15, r15
0x0000a167      740d           je 0xa176
0x0000a169      440fb629       movzx r13d, byte [rcx]
0x0000a16d      4584ed         test r13b, r13b
0x0000a170      0f857d000000   jne 0xa1f3
0x0000a176      49892e         mov qword [r14], rbp
0x0000a179      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000a17e      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000a187      4489e0         mov eax, r12d
0x0000a18a      0f850e060000   jne 0xa79e
0x0000a190      4883c428       add rsp, 0x28
0x0000a194      5b             pop rbx
0x0000a195      5d             pop rbp
0x0000a196      415c           pop r12
0x0000a198      415d           pop r13
0x0000a19a      415e           pop r14
0x0000a19c      415f           pop r15
0x0000a19e      c3             ret
0x0000a19f      90             nop
0x0000a1a0      83f822         cmp eax, 0x22
0x0000a1a3      41bc04000000   mov r12d, 4
0x0000a1a9      75ce           jne 0xa179
0x0000a1ab      41bc01000000   mov r12d, 1
0x0000a1b1      ebb1           jmp 0xa164
0x0000a1b3      0f1f440000     nop dword [rax + rax]
0x0000a1b8      4d85ff         test r15, r15
0x0000a1bb      0f848f040000   je 0xa650
0x0000a1c1      440fb629       movzx r13d, byte [rcx]
0x0000a1c5      48894c2408     mov qword [rsp + 8], rcx
0x0000a1ca      41bc04000000   mov r12d, 4
0x0000a1d0      4584ed         test r13b, r13b
0x0000a1d3      74a4           je 0xa179
0x0000a1d5      410fbef5       movsx esi, r13b
0x0000a1d9      4c89ff         mov rdi, r15
0x0000a1dc      e8ff7affff     call sym.imp.strchr
0x0000a1e1      4885c0         test rax, rax
0x0000a1e4      488b4c2408     mov rcx, qword [rsp + 8]
0x0000a1e9      748e           je 0xa179
0x0000a1eb      bd01000000     mov ebp, 1
0x0000a1f0      4531e4         xor r12d, r12d
0x0000a1f3      410fbef5       movsx esi, r13b
0x0000a1f7      4c89ff         mov rdi, r15
0x0000a1fa      48894c2408     mov qword [rsp + 8], rcx
0x0000a1ff      e8dc7affff     call sym.imp.strchr
0x0000a204      4885c0         test rax, rax
0x0000a207      488b4c2408     mov rcx, qword [rsp + 8]
0x0000a20c      745a           je 0xa268
0x0000a20e      418d45bb       lea eax, [r13 - 0x45]
0x0000a212      3c2f           cmp al, 0x2f
0x0000a214      7762           ja 0xa278
0x0000a216      48ba45893000.  movabs rdx, 0x814400308945
0x0000a220      480fa3c2       bt rdx, rax
0x0000a224      7352           jae 0xa278
0x0000a226      be30000000     mov esi, 0x30                           ; '0'
0x0000a22b      4c89ff         mov rdi, r15
0x0000a22e      48894c2408     mov qword [rsp + 8], rcx
0x0000a233      e8a87affff     call sym.imp.strchr
0x0000a238      4885c0         test rax, rax
0x0000a23b      488b4c2408     mov rcx, qword [rsp + 8]
0x0000a240      7436           je 0xa278
0x0000a242      0fb64101       movzx eax, byte [rcx + 1]
0x0000a246      3c44           cmp al, 0x44
0x0000a248      740c           je 0xa256
0x0000a24a      3c69           cmp al, 0x69
0x0000a24c      0f84e6040000   je 0xa738
0x0000a252      3c42           cmp al, 0x42
0x0000a254      7522           jne 0xa278
0x0000a256      bf02000000     mov edi, 2
0x0000a25b      b8e8030000     mov eax, 0x3e8
0x0000a260      eb20           jmp 0xa282
0x0000a262      660f1f440000   nop word [rax + rax]
0x0000a268      49892e         mov qword [r14], rbp
0x0000a26b      4183cc02       or r12d, 2
0x0000a26f      e905ffffff     jmp 0xa179
0x0000a274      0f1f4000       nop dword [rax]
0x0000a278      bf01000000     mov edi, 1
0x0000a27d      b800040000     mov eax, 0x400
0x0000a282      4183ed42       sub r13d, 0x42
0x0000a286      4180fd35       cmp r13b, 0x35
0x0000a28a      77dc           ja 0xa268
0x0000a28c      488d35b54000.  lea rsi, [0x0000e348]
0x0000a293      450fb6ed       movzx r13d, r13b
0x0000a297      4a6314ae       movsxd rdx, dword [rsi + r13*4]
0x0000a29b      4801f2         add rdx, rsi
0x0000a29e      ffe2           jmp rdx
0x0000a2a0      49b800000000.  movabs r8, 0x8000000000000000
0x0000a2aa      4863f0         movsxd rsi, eax
0x0000a2ad      4c89c0         mov rax, r8
0x0000a2b0      4899           cqo
0x0000a2b2      48f7fe         idiv rsi
0x0000a2b5      4839c5         cmp rbp, rax
0x0000a2b8      4989c1         mov r9, rax
0x0000a2bb      0f8ca4040000   jl 0xa765
0x0000a2c1      49baffffffff.  movabs r10, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a2cb      4c89d0         mov rax, r10
0x0000a2ce      4899           cqo
0x0000a2d0      48f7fe         idiv rsi
0x0000a2d3      4839c5         cmp rbp, rax
0x0000a2d6      0f8f96040000   jg 0xa772
0x0000a2dc      480fafee       imul rbp, rsi
0x0000a2e0      4939e9         cmp r9, rbp
0x0000a2e3      0f8f7c040000   jg 0xa765
0x0000a2e9      4839e8         cmp rax, rbp
0x0000a2ec      0f8c80040000   jl 0xa772
0x0000a2f2      480fafee       imul rbp, rsi
0x0000a2f6      31c0           xor eax, eax
0x0000a2f8      4109c4         or r12d, eax
0x0000a2fb      0f1f440000     nop dword [rax + rax]
0x0000a300      4863c7         movsxd rax, edi
0x0000a303      4801c1         add rcx, rax
0x0000a306      4489e0         mov eax, r12d
0x0000a309      83c802         or eax, 2
0x0000a30c      48890b         mov qword [rbx], rcx
0x0000a30f      803900         cmp byte [rcx], 0
0x0000a312      440f45e0       cmovne r12d, eax
0x0000a316      e95bfeffff     jmp 0xa176
0x0000a31b      0f1f440000     nop dword [rax + rax]
0x0000a320      48b800000000.  movabs rax, 0xc000000000000000
0x0000a32a      4839c5         cmp rbp, rax
0x0000a32d      0f8c2d030000   jl 0xa660
0x0000a333      48b8ffffffff.  movabs rax, 0x3fffffffffffffff          ; 4611686018427387903
0x0000a33d      4839c5         cmp rbp, rax
0x0000a340      0f8fda030000   jg 0xa720
0x0000a346      4801ed         add rbp, rbp
0x0000a349      ebb5           jmp 0xa300
0x0000a34b      0f1f440000     nop dword [rax + rax]
0x0000a350      48b800000000.  movabs rax, 0xffc0000000000000
0x0000a35a      4839c5         cmp rbp, rax
0x0000a35d      0f8cfd020000   jl 0xa660
0x0000a363      48b8ffffffff.  movabs rax, 0x3fffffffffffff            ; 18014398509481983
0x0000a36d      4839c5         cmp rbp, rax
0x0000a370      0f8faa030000   jg 0xa720
0x0000a376      48c1e509       shl rbp, 9
0x0000a37a      eb84           jmp 0xa300
0x0000a37c      0f1f4000       nop dword [rax]
0x0000a380      4863f0         movsxd rsi, eax
0x0000a383      48b800000000.  movabs rax, 0x8000000000000000
0x0000a38d      41b807000000   mov r8d, 7
0x0000a393      4899           cqo
0x0000a395      4531db         xor r11d, r11d
0x0000a398      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000a3a2      48f7fe         idiv rsi
0x0000a3a5      4989c2         mov r10, rax
0x0000a3a8      eb25           jmp 0xa3cf
0x0000a3aa      660f1f440000   nop word [rax + rax]
0x0000a3b0      4c89c8         mov rax, r9
0x0000a3b3      4899           cqo
0x0000a3b5      48f7fe         idiv rsi
0x0000a3b8      4839e8         cmp rax, rbp
0x0000a3bb      0f8ce7020000   jl 0xa6a8
0x0000a3c1      480fafee       imul rbp, rsi
0x0000a3c5      4183e801       sub r8d, 1
0x0000a3c9      0f8421010000   je 0xa4f0
0x0000a3cf      4939ea         cmp r10, rbp
0x0000a3d2      7edc           jle 0xa3b0
0x0000a3d4      41bb01000000   mov r11d, 1
0x0000a3da      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000a3e4      ebdf           jmp 0xa3c5
0x0000a3e6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a3f0      4863f0         movsxd rsi, eax
0x0000a3f3      48b800000000.  movabs rax, 0x8000000000000000
0x0000a3fd      41b808000000   mov r8d, 8
0x0000a403      4899           cqo
0x0000a405      4531db         xor r11d, r11d
0x0000a408      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000a412      48f7fe         idiv rsi
0x0000a415      4989c2         mov r10, rax
0x0000a418      eb25           jmp 0xa43f
0x0000a41a      660f1f440000   nop word [rax + rax]
0x0000a420      4c89c8         mov rax, r9
0x0000a423      4899           cqo
0x0000a425      48f7fe         idiv rsi
0x0000a428      4839e8         cmp rax, rbp
0x0000a42b      0f8c47020000   jl 0xa678
0x0000a431      480fafee       imul rbp, rsi
0x0000a435      4183e801       sub r8d, 1
0x0000a439      0f84b1000000   je 0xa4f0
0x0000a43f      4939ea         cmp r10, rbp
0x0000a442      7edc           jle 0xa420
0x0000a444      41bb01000000   mov r11d, 1
0x0000a44a      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000a454      ebdf           jmp 0xa435
0x0000a456      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a460      49b800000000.  movabs r8, 0x8000000000000000
0x0000a46a      4863f0         movsxd rsi, eax
0x0000a46d      4c89c0         mov rax, r8
0x0000a470      4899           cqo
0x0000a472      48f7fe         idiv rsi
0x0000a475      4839c5         cmp rbp, rax
0x0000a478      0f8ce2010000   jl 0xa660
0x0000a47e      4983e801       sub r8, 1
0x0000a482      4c89c0         mov rax, r8
0x0000a485      4899           cqo
0x0000a487      48f7fe         idiv rsi
0x0000a48a      4839c5         cmp rbp, rax
0x0000a48d      0f8f8d020000   jg 0xa720
0x0000a493      480fafee       imul rbp, rsi
0x0000a497      e964feffff     jmp 0xa300
0x0000a49c      0f1f4000       nop dword [rax]
0x0000a4a0      4863f0         movsxd rsi, eax
0x0000a4a3      48b800000000.  movabs rax, 0x8000000000000000
0x0000a4ad      41b803000000   mov r8d, 3
0x0000a4b3      4899           cqo
0x0000a4b5      4531db         xor r11d, r11d
0x0000a4b8      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000a4c2      48f7fe         idiv rsi
0x0000a4c5      4989c2         mov r10, rax
0x0000a4c8      4939ea         cmp r10, rbp
0x0000a4cb      0f8fef010000   jg 0xa6c0
0x0000a4d1      4c89c8         mov rax, r9
0x0000a4d4      4899           cqo
0x0000a4d6      48f7fe         idiv rsi
0x0000a4d9      4839e8         cmp rax, rbp
0x0000a4dc      0f8c6e020000   jl 0xa750
0x0000a4e2      480fafee       imul rbp, rsi
0x0000a4e6      4183e801       sub r8d, 1
0x0000a4ea      75dc           jne 0xa4c8
0x0000a4ec      0f1f4000       nop dword [rax]
0x0000a4f0      4509dc         or r12d, r11d
0x0000a4f3      e908feffff     jmp 0xa300
0x0000a4f8      0f1f84000000.  nop dword [rax + rax]
0x0000a500      4863f0         movsxd rsi, eax
0x0000a503      48b800000000.  movabs rax, 0x8000000000000000
0x0000a50d      41b806000000   mov r8d, 6
0x0000a513      4899           cqo
0x0000a515      4531db         xor r11d, r11d
0x0000a518      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000a522      48f7fe         idiv rsi
0x0000a525      4989c2         mov r10, rax
0x0000a528      eb21           jmp 0xa54b
0x0000a52a      660f1f440000   nop word [rax + rax]
0x0000a530      4c89c8         mov rax, r9
0x0000a533      4899           cqo
0x0000a535      48f7fe         idiv rsi
0x0000a538      4839e8         cmp rax, rbp
0x0000a53b      0f8c97010000   jl 0xa6d8
0x0000a541      480fafee       imul rbp, rsi
0x0000a545      4183e801       sub r8d, 1
0x0000a549      74a5           je 0xa4f0
0x0000a54b      4939ea         cmp r10, rbp
0x0000a54e      7ee0           jle 0xa530
0x0000a550      41bb01000000   mov r11d, 1
0x0000a556      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000a560      ebe3           jmp 0xa545
0x0000a562      660f1f440000   nop word [rax + rax]
0x0000a568      4863f0         movsxd rsi, eax
0x0000a56b      48b800000000.  movabs rax, 0x8000000000000000
0x0000a575      41b805000000   mov r8d, 5
0x0000a57b      4899           cqo
0x0000a57d      4531db         xor r11d, r11d
0x0000a580      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000a58a      48f7fe         idiv rsi
0x0000a58d      4989c2         mov r10, rax
0x0000a590      eb25           jmp 0xa5b7
0x0000a592      660f1f440000   nop word [rax + rax]
0x0000a598      4c89c8         mov rax, r9
0x0000a59b      4899           cqo
0x0000a59d      48f7fe         idiv rsi
0x0000a5a0      4839e8         cmp rax, rbp
0x0000a5a3      0f8c47010000   jl 0xa6f0
0x0000a5a9      480fafee       imul rbp, rsi
0x0000a5ad      4183e801       sub r8d, 1
0x0000a5b1      0f8439ffffff   je 0xa4f0
0x0000a5b7      4939ea         cmp r10, rbp
0x0000a5ba      7edc           jle 0xa598
0x0000a5bc      41bb01000000   mov r11d, 1
0x0000a5c2      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000a5cc      ebdf           jmp 0xa5ad
0x0000a5ce      6690           nop
0x0000a5d0      48b800000000.  movabs rax, 0xffe0000000000000
0x0000a5da      4839c5         cmp rbp, rax
0x0000a5dd      0f8c7d000000   jl 0xa660
0x0000a5e3      48b8ffffffff.  movabs rax, 0x1fffffffffffff            ; 9007199254740991
0x0000a5ed      4839c5         cmp rbp, rax
0x0000a5f0      0f8f2a010000   jg 0xa720
0x0000a5f6      48c1e50a       shl rbp, 0xa
0x0000a5fa      e901fdffff     jmp 0xa300
0x0000a5ff      90             nop
0x0000a600      4863f0         movsxd rsi, eax
0x0000a603      48b800000000.  movabs rax, 0x8000000000000000
0x0000a60d      41b804000000   mov r8d, 4
0x0000a613      4899           cqo
0x0000a615      4531db         xor r11d, r11d
0x0000a618      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000a622      48f7fe         idiv rsi
0x0000a625      4989c2         mov r10, rax
0x0000a628      4939ea         cmp r10, rbp
0x0000a62b      7f63           jg 0xa690
0x0000a62d      4c89c8         mov rax, r9
0x0000a630      4899           cqo
0x0000a632      48f7fe         idiv rsi
0x0000a635      4839e8         cmp rax, rbp
0x0000a638      0f8cca000000   jl 0xa708
0x0000a63e      480fafee       imul rbp, rsi
0x0000a642      4183e801       sub r8d, 1
0x0000a646      75e0           jne 0xa628
0x0000a648      e9a3feffff     jmp 0xa4f0
0x0000a64d      0f1f00         nop dword [rax]
0x0000a650      41bc04000000   mov r12d, 4
0x0000a656      e91efbffff     jmp 0xa179
0x0000a65b      0f1f440000     nop dword [rax + rax]
0x0000a660      41bc01000000   mov r12d, 1
0x0000a666      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000a670      e98bfcffff     jmp 0xa300
0x0000a675      0f1f00         nop dword [rax]
0x0000a678      41bb01000000   mov r11d, 1
0x0000a67e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a688      e9a8fdffff     jmp 0xa435
0x0000a68d      0f1f00         nop dword [rax]
0x0000a690      41bb01000000   mov r11d, 1
0x0000a696      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000a6a0      eba0           jmp 0xa642
0x0000a6a2      660f1f440000   nop word [rax + rax]
0x0000a6a8      41bb01000000   mov r11d, 1
0x0000a6ae      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a6b8      e908fdffff     jmp 0xa3c5
0x0000a6bd      0f1f00         nop dword [rax]
0x0000a6c0      41bb01000000   mov r11d, 1
0x0000a6c6      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000a6d0      e911feffff     jmp 0xa4e6
0x0000a6d5      0f1f00         nop dword [rax]
0x0000a6d8      41bb01000000   mov r11d, 1
0x0000a6de      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a6e8      e958feffff     jmp 0xa545
0x0000a6ed      0f1f00         nop dword [rax]
0x0000a6f0      41bb01000000   mov r11d, 1
0x0000a6f6      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a700      e9a8feffff     jmp 0xa5ad
0x0000a705      0f1f00         nop dword [rax]
0x0000a708      41bb01000000   mov r11d, 1
0x0000a70e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a718      e925ffffff     jmp 0xa642
0x0000a71d      0f1f00         nop dword [rax]
0x0000a720      41bc01000000   mov r12d, 1
0x0000a726      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a730      e9cbfbffff     jmp 0xa300
0x0000a735      0f1f00         nop dword [rax]
0x0000a738      31ff           xor edi, edi
0x0000a73a      80790242       cmp byte [rcx + 2], 0x42
0x0000a73e      b800040000     mov eax, 0x400
0x0000a743      400f94c7       sete dil
0x0000a747      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000a74b      e932fbffff     jmp 0xa282
0x0000a750      41bb01000000   mov r11d, 1
0x0000a756      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a760      e981fdffff     jmp 0xa4e6
0x0000a765      b801000000     mov eax, 1
0x0000a76a      4c89c5         mov rbp, r8
0x0000a76d      e986fbffff     jmp 0xa2f8
0x0000a772      b801000000     mov eax, 1
0x0000a777      4c89d5         mov rbp, r10
0x0000a77a      e979fbffff     jmp 0xa2f8
0x0000a77f      488d0d9a3c00.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0xe420 ; "xstrtoimax"
0x0000a786      488d35733b00.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0xe300 ; "../coreutils-8.31/lib/xstrtol.c"
0x0000a78d      488d3d8c3b00.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0xe320 ; "0 <= strtol_base && strtol_base <= 36"
0x0000a794      ba54000000     mov edx, 0x54                           ; 'T'
0x0000a799      e89275ffff     call sym.imp.__assert_fail
0x0000a79e      e80d75ffff     call sym.imp.__stack_chk_fail
0x0000a7a3      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a7ad      0f1f00         nop dword [rax]
;-- xstrtol:
0x0000a7b0      4157           push r15
0x0000a7b2      4156           push r14
0x0000a7b4      4155           push r13
0x0000a7b6      4154           push r12
0x0000a7b8      55             push rbp
0x0000a7b9      53             push rbx
0x0000a7ba      4883ec28       sub rsp, 0x28
0x0000a7be      64488b042528.  mov rax, qword fs:[0x28]
0x0000a7c7      4889442418     mov qword [rsp + 0x18], rax
0x0000a7cc      31c0           xor eax, eax
0x0000a7ce      83fa24         cmp edx, 0x24
0x0000a7d1      0f8768060000   ja 0xae3f
0x0000a7d7      488d442410     lea rax, [rsp + 0x10]
0x0000a7dc      4885f6         test rsi, rsi
0x0000a7df      4889f3         mov rbx, rsi
0x0000a7e2      4989fc         mov r12, rdi
0x0000a7e5      89d5           mov ebp, edx
0x0000a7e7      4989ce         mov r14, rcx
0x0000a7ea      480f44d8       cmove rbx, rax
0x0000a7ee      4d89c7         mov r15, r8
0x0000a7f1      e8ba73ffff     call sym.imp.__errno_location
0x0000a7f6      89ea           mov edx, ebp
0x0000a7f8      c70000000000   mov dword [rax], 0
0x0000a7fe      4889de         mov rsi, rbx
0x0000a801      4c89e7         mov rdi, r12
0x0000a804      4989c5         mov r13, rax
0x0000a807      e8b475ffff     call sym.imp.strtol
0x0000a80c      488b0b         mov rcx, qword [rbx]
0x0000a80f      4889c5         mov rbp, rax
0x0000a812      4c39e1         cmp rcx, r12
0x0000a815      7461           je 0xa878
0x0000a817      418b4500       mov eax, dword [r13]
0x0000a81b      85c0           test eax, eax
0x0000a81d      7541           jne 0xa860
0x0000a81f      4531e4         xor r12d, r12d
0x0000a822      4d85ff         test r15, r15
0x0000a825      740d           je 0xa834
0x0000a827      440fb629       movzx r13d, byte [rcx]
0x0000a82b      4584ed         test r13b, r13b
0x0000a82e      0f857f000000   jne 0xa8b3
0x0000a834      49892e         mov qword [r14], rbp
0x0000a837      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000a83c      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000a845      4489e0         mov eax, r12d
0x0000a848      0f8510060000   jne 0xae5e
0x0000a84e      4883c428       add rsp, 0x28
0x0000a852      5b             pop rbx
0x0000a853      5d             pop rbp
0x0000a854      415c           pop r12
0x0000a856      415d           pop r13
0x0000a858      415e           pop r14
0x0000a85a      415f           pop r15
0x0000a85c      c3             ret
0x0000a85d      0f1f00         nop dword [rax]
0x0000a860      83f822         cmp eax, 0x22
0x0000a863      41bc04000000   mov r12d, 4
0x0000a869      75cc           jne 0xa837
0x0000a86b      41bc01000000   mov r12d, 1
0x0000a871      ebaf           jmp 0xa822
0x0000a873      0f1f440000     nop dword [rax + rax]
0x0000a878      4d85ff         test r15, r15
0x0000a87b      0f848f040000   je 0xad10
0x0000a881      440fb629       movzx r13d, byte [rcx]
0x0000a885      48894c2408     mov qword [rsp + 8], rcx
0x0000a88a      41bc04000000   mov r12d, 4
0x0000a890      4584ed         test r13b, r13b
0x0000a893      74a2           je 0xa837
0x0000a895      410fbef5       movsx esi, r13b
0x0000a899      4c89ff         mov rdi, r15
0x0000a89c      e83f74ffff     call sym.imp.strchr
0x0000a8a1      4885c0         test rax, rax
0x0000a8a4      488b4c2408     mov rcx, qword [rsp + 8]
0x0000a8a9      748c           je 0xa837
0x0000a8ab      bd01000000     mov ebp, 1
0x0000a8b0      4531e4         xor r12d, r12d
0x0000a8b3      410fbef5       movsx esi, r13b
0x0000a8b7      4c89ff         mov rdi, r15
0x0000a8ba      48894c2408     mov qword [rsp + 8], rcx
0x0000a8bf      e81c74ffff     call sym.imp.strchr
0x0000a8c4      4885c0         test rax, rax
0x0000a8c7      488b4c2408     mov rcx, qword [rsp + 8]
0x0000a8cc      745a           je 0xa928
0x0000a8ce      418d45bb       lea eax, [r13 - 0x45]
0x0000a8d2      3c2f           cmp al, 0x2f
0x0000a8d4      7762           ja 0xa938
0x0000a8d6      48ba45893000.  movabs rdx, 0x814400308945
0x0000a8e0      480fa3c2       bt rdx, rax
0x0000a8e4      7352           jae 0xa938
0x0000a8e6      be30000000     mov esi, 0x30                           ; '0'
0x0000a8eb      4c89ff         mov rdi, r15
0x0000a8ee      48894c2408     mov qword [rsp + 8], rcx
0x0000a8f3      e8e873ffff     call sym.imp.strchr
0x0000a8f8      4885c0         test rax, rax
0x0000a8fb      488b4c2408     mov rcx, qword [rsp + 8]
0x0000a900      7436           je 0xa938
0x0000a902      0fb64101       movzx eax, byte [rcx + 1]
0x0000a906      3c44           cmp al, 0x44
0x0000a908      740c           je 0xa916
0x0000a90a      3c69           cmp al, 0x69
0x0000a90c      0f84e6040000   je 0xadf8
0x0000a912      3c42           cmp al, 0x42
0x0000a914      7522           jne 0xa938
0x0000a916      bf02000000     mov edi, 2
0x0000a91b      b8e8030000     mov eax, 0x3e8
0x0000a920      eb20           jmp 0xa942
0x0000a922      660f1f440000   nop word [rax + rax]
0x0000a928      49892e         mov qword [r14], rbp
0x0000a92b      4183cc02       or r12d, 2
0x0000a92f      e903ffffff     jmp 0xa837
0x0000a934      0f1f4000       nop dword [rax]
0x0000a938      bf01000000     mov edi, 1
0x0000a93d      b800040000     mov eax, 0x400
0x0000a942      4183ed42       sub r13d, 0x42
0x0000a946      4180fd35       cmp r13b, 0x35
0x0000a94a      77dc           ja 0xa928
0x0000a94c      488d35dd3a00.  lea rsi, [0x0000e430]
0x0000a953      450fb6ed       movzx r13d, r13b
0x0000a957      4a6314ae       movsxd rdx, dword [rsi + r13*4]
0x0000a95b      4801f2         add rdx, rsi
0x0000a95e      ffe2           jmp rdx
0x0000a960      49b800000000.  movabs r8, 0x8000000000000000
0x0000a96a      4863f0         movsxd rsi, eax
0x0000a96d      4c89c0         mov rax, r8
0x0000a970      4899           cqo
0x0000a972      48f7fe         idiv rsi
0x0000a975      4839c5         cmp rbp, rax
0x0000a978      4989c1         mov r9, rax
0x0000a97b      0f8ca4040000   jl 0xae25
0x0000a981      49baffffffff.  movabs r10, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a98b      4c89d0         mov rax, r10
0x0000a98e      4899           cqo
0x0000a990      48f7fe         idiv rsi
0x0000a993      4839c5         cmp rbp, rax
0x0000a996      0f8f96040000   jg 0xae32
0x0000a99c      480fafee       imul rbp, rsi
0x0000a9a0      4939e9         cmp r9, rbp
0x0000a9a3      0f8f7c040000   jg 0xae25
0x0000a9a9      4839e8         cmp rax, rbp
0x0000a9ac      0f8c80040000   jl 0xae32
0x0000a9b2      480fafee       imul rbp, rsi
0x0000a9b6      31c0           xor eax, eax
0x0000a9b8      4109c4         or r12d, eax
0x0000a9bb      0f1f440000     nop dword [rax + rax]
0x0000a9c0      4863c7         movsxd rax, edi
0x0000a9c3      4801c1         add rcx, rax
0x0000a9c6      4489e0         mov eax, r12d
0x0000a9c9      83c802         or eax, 2
0x0000a9cc      48890b         mov qword [rbx], rcx
0x0000a9cf      803900         cmp byte [rcx], 0
0x0000a9d2      440f45e0       cmovne r12d, eax
0x0000a9d6      e959feffff     jmp 0xa834
0x0000a9db      0f1f440000     nop dword [rax + rax]
0x0000a9e0      48b800000000.  movabs rax, 0xc000000000000000
0x0000a9ea      4839c5         cmp rbp, rax
0x0000a9ed      0f8c2d030000   jl 0xad20
0x0000a9f3      48b8ffffffff.  movabs rax, 0x3fffffffffffffff          ; 4611686018427387903
0x0000a9fd      4839c5         cmp rbp, rax
0x0000aa00      0f8fda030000   jg 0xade0
0x0000aa06      4801ed         add rbp, rbp
0x0000aa09      ebb5           jmp 0xa9c0
0x0000aa0b      0f1f440000     nop dword [rax + rax]
0x0000aa10      48b800000000.  movabs rax, 0xffc0000000000000
0x0000aa1a      4839c5         cmp rbp, rax
0x0000aa1d      0f8cfd020000   jl 0xad20
0x0000aa23      48b8ffffffff.  movabs rax, 0x3fffffffffffff            ; 18014398509481983
0x0000aa2d      4839c5         cmp rbp, rax
0x0000aa30      0f8faa030000   jg 0xade0
0x0000aa36      48c1e509       shl rbp, 9
0x0000aa3a      eb84           jmp 0xa9c0
0x0000aa3c      0f1f4000       nop dword [rax]
0x0000aa40      4863f0         movsxd rsi, eax
0x0000aa43      48b800000000.  movabs rax, 0x8000000000000000
0x0000aa4d      41b807000000   mov r8d, 7
0x0000aa53      4899           cqo
0x0000aa55      4531db         xor r11d, r11d
0x0000aa58      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000aa62      48f7fe         idiv rsi
0x0000aa65      4989c2         mov r10, rax
0x0000aa68      eb25           jmp 0xaa8f
0x0000aa6a      660f1f440000   nop word [rax + rax]
0x0000aa70      4c89c8         mov rax, r9
0x0000aa73      4899           cqo
0x0000aa75      48f7fe         idiv rsi
0x0000aa78      4839e8         cmp rax, rbp
0x0000aa7b      0f8ce7020000   jl 0xad68
0x0000aa81      480fafee       imul rbp, rsi
0x0000aa85      4183e801       sub r8d, 1
0x0000aa89      0f8421010000   je 0xabb0
0x0000aa8f      4939ea         cmp r10, rbp
0x0000aa92      7edc           jle 0xaa70
0x0000aa94      41bb01000000   mov r11d, 1
0x0000aa9a      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000aaa4      ebdf           jmp 0xaa85
0x0000aaa6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000aab0      4863f0         movsxd rsi, eax
0x0000aab3      48b800000000.  movabs rax, 0x8000000000000000
0x0000aabd      41b808000000   mov r8d, 8
0x0000aac3      4899           cqo
0x0000aac5      4531db         xor r11d, r11d
0x0000aac8      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000aad2      48f7fe         idiv rsi
0x0000aad5      4989c2         mov r10, rax
0x0000aad8      eb25           jmp 0xaaff
0x0000aada      660f1f440000   nop word [rax + rax]
0x0000aae0      4c89c8         mov rax, r9
0x0000aae3      4899           cqo
0x0000aae5      48f7fe         idiv rsi
0x0000aae8      4839e8         cmp rax, rbp
0x0000aaeb      0f8c47020000   jl 0xad38
0x0000aaf1      480fafee       imul rbp, rsi
0x0000aaf5      4183e801       sub r8d, 1
0x0000aaf9      0f84b1000000   je 0xabb0
0x0000aaff      4939ea         cmp r10, rbp
0x0000ab02      7edc           jle 0xaae0
0x0000ab04      41bb01000000   mov r11d, 1
0x0000ab0a      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000ab14      ebdf           jmp 0xaaf5
0x0000ab16      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ab20      49b800000000.  movabs r8, 0x8000000000000000
0x0000ab2a      4863f0         movsxd rsi, eax
0x0000ab2d      4c89c0         mov rax, r8
0x0000ab30      4899           cqo
0x0000ab32      48f7fe         idiv rsi
0x0000ab35      4839c5         cmp rbp, rax
0x0000ab38      0f8ce2010000   jl 0xad20
0x0000ab3e      4983e801       sub r8, 1
0x0000ab42      4c89c0         mov rax, r8
0x0000ab45      4899           cqo
0x0000ab47      48f7fe         idiv rsi
0x0000ab4a      4839c5         cmp rbp, rax
0x0000ab4d      0f8f8d020000   jg 0xade0
0x0000ab53      480fafee       imul rbp, rsi
0x0000ab57      e964feffff     jmp 0xa9c0
0x0000ab5c      0f1f4000       nop dword [rax]
0x0000ab60      4863f0         movsxd rsi, eax
0x0000ab63      48b800000000.  movabs rax, 0x8000000000000000
0x0000ab6d      41b803000000   mov r8d, 3
0x0000ab73      4899           cqo
0x0000ab75      4531db         xor r11d, r11d
0x0000ab78      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000ab82      48f7fe         idiv rsi
0x0000ab85      4989c2         mov r10, rax
0x0000ab88      4939ea         cmp r10, rbp
0x0000ab8b      0f8fef010000   jg 0xad80
0x0000ab91      4c89c8         mov rax, r9
0x0000ab94      4899           cqo
0x0000ab96      48f7fe         idiv rsi
0x0000ab99      4839e8         cmp rax, rbp
0x0000ab9c      0f8c6e020000   jl 0xae10
0x0000aba2      480fafee       imul rbp, rsi
0x0000aba6      4183e801       sub r8d, 1
0x0000abaa      75dc           jne 0xab88
0x0000abac      0f1f4000       nop dword [rax]
0x0000abb0      4509dc         or r12d, r11d
0x0000abb3      e908feffff     jmp 0xa9c0
0x0000abb8      0f1f84000000.  nop dword [rax + rax]
0x0000abc0      4863f0         movsxd rsi, eax
0x0000abc3      48b800000000.  movabs rax, 0x8000000000000000
0x0000abcd      41b806000000   mov r8d, 6
0x0000abd3      4899           cqo
0x0000abd5      4531db         xor r11d, r11d
0x0000abd8      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000abe2      48f7fe         idiv rsi
0x0000abe5      4989c2         mov r10, rax
0x0000abe8      eb21           jmp 0xac0b
0x0000abea      660f1f440000   nop word [rax + rax]
0x0000abf0      4c89c8         mov rax, r9
0x0000abf3      4899           cqo
0x0000abf5      48f7fe         idiv rsi
0x0000abf8      4839e8         cmp rax, rbp
0x0000abfb      0f8c97010000   jl 0xad98
0x0000ac01      480fafee       imul rbp, rsi
0x0000ac05      4183e801       sub r8d, 1
0x0000ac09      74a5           je 0xabb0
0x0000ac0b      4939ea         cmp r10, rbp
0x0000ac0e      7ee0           jle 0xabf0
0x0000ac10      41bb01000000   mov r11d, 1
0x0000ac16      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000ac20      ebe3           jmp 0xac05
0x0000ac22      660f1f440000   nop word [rax + rax]
0x0000ac28      4863f0         movsxd rsi, eax
0x0000ac2b      48b800000000.  movabs rax, 0x8000000000000000
0x0000ac35      41b805000000   mov r8d, 5
0x0000ac3b      4899           cqo
0x0000ac3d      4531db         xor r11d, r11d
0x0000ac40      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000ac4a      48f7fe         idiv rsi
0x0000ac4d      4989c2         mov r10, rax
0x0000ac50      eb25           jmp 0xac77
0x0000ac52      660f1f440000   nop word [rax + rax]
0x0000ac58      4c89c8         mov rax, r9
0x0000ac5b      4899           cqo
0x0000ac5d      48f7fe         idiv rsi
0x0000ac60      4839e8         cmp rax, rbp
0x0000ac63      0f8c47010000   jl 0xadb0
0x0000ac69      480fafee       imul rbp, rsi
0x0000ac6d      4183e801       sub r8d, 1
0x0000ac71      0f8439ffffff   je 0xabb0
0x0000ac77      4939ea         cmp r10, rbp
0x0000ac7a      7edc           jle 0xac58
0x0000ac7c      41bb01000000   mov r11d, 1
0x0000ac82      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000ac8c      ebdf           jmp 0xac6d
0x0000ac8e      6690           nop
0x0000ac90      48b800000000.  movabs rax, 0xffe0000000000000
0x0000ac9a      4839c5         cmp rbp, rax
0x0000ac9d      0f8c7d000000   jl 0xad20
0x0000aca3      48b8ffffffff.  movabs rax, 0x1fffffffffffff            ; 9007199254740991
0x0000acad      4839c5         cmp rbp, rax
0x0000acb0      0f8f2a010000   jg 0xade0
0x0000acb6      48c1e50a       shl rbp, 0xa
0x0000acba      e901fdffff     jmp 0xa9c0
0x0000acbf      90             nop
0x0000acc0      4863f0         movsxd rsi, eax
0x0000acc3      48b800000000.  movabs rax, 0x8000000000000000
0x0000accd      41b804000000   mov r8d, 4
0x0000acd3      4899           cqo
0x0000acd5      4531db         xor r11d, r11d
0x0000acd8      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000ace2      48f7fe         idiv rsi
0x0000ace5      4989c2         mov r10, rax
0x0000ace8      4939ea         cmp r10, rbp
0x0000aceb      7f63           jg 0xad50
0x0000aced      4c89c8         mov rax, r9
0x0000acf0      4899           cqo
0x0000acf2      48f7fe         idiv rsi
0x0000acf5      4839e8         cmp rax, rbp
0x0000acf8      0f8cca000000   jl 0xadc8
0x0000acfe      480fafee       imul rbp, rsi
0x0000ad02      4183e801       sub r8d, 1
0x0000ad06      75e0           jne 0xace8
0x0000ad08      e9a3feffff     jmp 0xabb0
0x0000ad0d      0f1f00         nop dword [rax]
0x0000ad10      41bc04000000   mov r12d, 4
0x0000ad16      e91cfbffff     jmp 0xa837
0x0000ad1b      0f1f440000     nop dword [rax + rax]
0x0000ad20      41bc01000000   mov r12d, 1
0x0000ad26      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000ad30      e98bfcffff     jmp 0xa9c0
0x0000ad35      0f1f00         nop dword [rax]
0x0000ad38      41bb01000000   mov r11d, 1
0x0000ad3e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000ad48      e9a8fdffff     jmp 0xaaf5
0x0000ad4d      0f1f00         nop dword [rax]
0x0000ad50      41bb01000000   mov r11d, 1
0x0000ad56      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000ad60      eba0           jmp 0xad02
0x0000ad62      660f1f440000   nop word [rax + rax]
0x0000ad68      41bb01000000   mov r11d, 1
0x0000ad6e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000ad78      e908fdffff     jmp 0xaa85
0x0000ad7d      0f1f00         nop dword [rax]
0x0000ad80      41bb01000000   mov r11d, 1
0x0000ad86      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000ad90      e911feffff     jmp 0xaba6
0x0000ad95      0f1f00         nop dword [rax]
0x0000ad98      41bb01000000   mov r11d, 1
0x0000ad9e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000ada8      e958feffff     jmp 0xac05
0x0000adad      0f1f00         nop dword [rax]
0x0000adb0      41bb01000000   mov r11d, 1
0x0000adb6      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000adc0      e9a8feffff     jmp 0xac6d
0x0000adc5      0f1f00         nop dword [rax]
0x0000adc8      41bb01000000   mov r11d, 1
0x0000adce      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000add8      e925ffffff     jmp 0xad02
0x0000addd      0f1f00         nop dword [rax]
0x0000ade0      41bc01000000   mov r12d, 1
0x0000ade6      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000adf0      e9cbfbffff     jmp 0xa9c0
0x0000adf5      0f1f00         nop dword [rax]
0x0000adf8      31ff           xor edi, edi
0x0000adfa      80790242       cmp byte [rcx + 2], 0x42
0x0000adfe      b800040000     mov eax, 0x400
0x0000ae03      400f94c7       sete dil
0x0000ae07      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000ae0b      e932fbffff     jmp 0xa942
0x0000ae10      41bb01000000   mov r11d, 1
0x0000ae16      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000ae20      e981fdffff     jmp 0xaba6
0x0000ae25      b801000000     mov eax, 1
0x0000ae2a      4c89c5         mov rbp, r8
0x0000ae2d      e986fbffff     jmp 0xa9b8
0x0000ae32      b801000000     mov eax, 1
0x0000ae37      4c89d5         mov rbp, r10
0x0000ae3a      e979fbffff     jmp 0xa9b8
0x0000ae3f      488d0dc23600.  lea rcx, obj.__PRETTY_FUNCTION__.4162_1 ; 0xe508 ; "xstrtol"
0x0000ae46      488d35b33400.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0xe300 ; "../coreutils-8.31/lib/xstrtol.c"
0x0000ae4d      488d3dcc3400.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0xe320 ; "0 <= strtol_base && strtol_base <= 36"
0x0000ae54      ba54000000     mov edx, 0x54                           ; 'T'
0x0000ae59      e8d26effff     call sym.imp.__assert_fail
0x0000ae5e      e84d6effff     call sym.imp.__stack_chk_fail
0x0000ae63      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ae6d      0f1f00         nop dword [rax]
;-- xstrtol_fatal:
0x0000ae70      4155           push r13
0x0000ae72      4154           push r12
0x0000ae74      4189f2         mov r10d, esi
0x0000ae77      55             push rbp
0x0000ae78      53             push rbx
0x0000ae79      4d89c4         mov r12, r8
0x0000ae7c      4883ec18       sub rsp, 0x18
0x0000ae80      64488b042528.  mov rax, qword fs:[0x28]
0x0000ae89      4889442408     mov qword [rsp + 8], rax
0x0000ae8e      31c0           xor eax, eax
0x0000ae90      83ff03         cmp edi, 3
0x0000ae93      8b2dc7612000   mov ebp, dword [obj.exit_failure]       ; [0x211060:4]=1
0x0000ae99      7759           ja 0xaef4
0x0000ae9b      83ff02         cmp edi, 2
0x0000ae9e      734b           jae 0xaeeb
0x0000aea0      83ef01         sub edi, 1
0x0000aea3      488d35813600.  lea rsi, str.s_s_argument___s__too_large ; 0xe52b ; "%s%s argument '%s' too large"
0x0000aeaa      753a           jne 0xaee6
0x0000aeac      4585d2         test r10d, r10d
0x0000aeaf      4963c2         movsxd rax, r10d
0x0000aeb2      784e           js 0xaf02
0x0000aeb4      48c1e005       shl rax, 5
0x0000aeb8      488d1d893600.  lea rbx, [0x0000e548]                   ; "--"
0x0000aebf      4c8b2c01       mov r13, qword [rcx + rax]
0x0000aec3      ba05000000     mov edx, 5
0x0000aec8      31ff           xor edi, edi
0x0000aeca      e8b16dffff     call sym.imp.dcgettext
0x0000aecf      4d89e1         mov r9, r12
0x0000aed2      4889c2         mov rdx, rax
0x0000aed5      4d89e8         mov r8, r13
0x0000aed8      4889d9         mov rcx, rbx
0x0000aedb      31f6           xor esi, esi
0x0000aedd      89ef           mov edi, ebp
0x0000aedf      31c0           xor eax, eax
0x0000aee1      e8fa6fffff     call sym.imp.error
0x0000aee6      e8b56cffff     call sym.imp.abort
0x0000aeeb      488d355e3600.  lea rsi, str.invalid_suffix_in__s_s_argument___s ; 0xe550 ; "invalid suffix in %s%s argument '%s'"
0x0000aef2      ebb8           jmp 0xaeac
0x0000aef4      83ff04         cmp edi, 4
0x0000aef7      488d35123600.  lea rsi, str.invalid__s_s_argument___s  ; 0xe510 ; "invalid %s%s argument '%s'"
0x0000aefe      74ac           je 0xaeac
0x0000af00      ebe4           jmp 0xaee6
0x0000af02      488d1d3f3600.  lea rbx, [0x0000e548]                   ; "--"
0x0000af09      88542406       mov byte [rsp + 6], dl
0x0000af0d      c644240700     mov byte [rsp + 7], 0
0x0000af12      4c8d6c2406     lea r13, [rsp + 6]
0x0000af17      4829c3         sub rbx, rax
0x0000af1a      eba7           jmp 0xaec3
0x0000af1c      0f1f4000       nop dword [rax]
;-- xstrtoumax:
0x0000af20      4157           push r15
0x0000af22      4156           push r14
0x0000af24      4155           push r13
0x0000af26      4154           push r12
0x0000af28      55             push rbp
0x0000af29      53             push rbx
0x0000af2a      4883ec28       sub rsp, 0x28
0x0000af2e      64488b042528.  mov rax, qword fs:[0x28]
0x0000af37      4889442418     mov qword [rsp + 0x18], rax
0x0000af3c      31c0           xor eax, eax
0x0000af3e      83fa24         cmp edx, 0x24
0x0000af41      0f875e030000   ja 0xb2a5
0x0000af47      488d442410     lea rax, [rsp + 0x10]
0x0000af4c      4989f7         mov r15, rsi
0x0000af4f      4885f6         test rsi, rsi
0x0000af52      4889fd         mov rbp, rdi
0x0000af55      89542408       mov dword [rsp + 8], edx
0x0000af59      4989ce         mov r14, rcx
0x0000af5c      4d89c5         mov r13, r8
0x0000af5f      4c0f44f8       cmove r15, rax
0x0000af63      e8486cffff     call sym.imp.__errno_location
0x0000af68      c70000000000   mov dword [rax], 0
0x0000af6e      4989c4         mov r12, rax
0x0000af71      0fb65d00       movzx ebx, byte [rbp]
0x0000af75      e81670ffff     call sym.imp.__ctype_b_loc
0x0000af7a      8b542408       mov edx, dword [rsp + 8]
0x0000af7e      488b30         mov rsi, qword [rax]
0x0000af81      4889e8         mov rax, rbp
0x0000af84      eb11           jmp 0xaf97
0x0000af86      662e0f1f8400.  nop word cs:[rax + rax]
0x0000af90      4883c001       add rax, 1
0x0000af94      0fb618         movzx ebx, byte [rax]
0x0000af97      0fb6cb         movzx ecx, bl
0x0000af9a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x0000af9f      75ef           jne 0xaf90
0x0000afa1      80fb2d         cmp bl, 0x2d
0x0000afa4      7452           je 0xaff8
0x0000afa6      31c9           xor ecx, ecx
0x0000afa8      4c89fe         mov rsi, r15
0x0000afab      4889ef         mov rdi, rbp
0x0000afae      e88d6dffff     call sym.imp.__strtoul_internal
0x0000afb3      498b0f         mov rcx, qword [r15]
0x0000afb6      4889c3         mov rbx, rax
0x0000afb9      4839e9         cmp rcx, rbp
0x0000afbc      742a           je 0xafe8
0x0000afbe      418b0424       mov eax, dword [r12]
0x0000afc2      85c0           test eax, eax
0x0000afc4      7462           je 0xb028
0x0000afc6      83f822         cmp eax, 0x22
0x0000afc9      bd01000000     mov ebp, 1
0x0000afce      7528           jne 0xaff8
0x0000afd0      4d85ed         test r13, r13
0x0000afd3      7409           je 0xafde
0x0000afd5      440fb621       movzx r12d, byte [rcx]
0x0000afd9      4584e4         test r12b, r12b
0x0000afdc      7579           jne 0xb057
0x0000afde      49891e         mov qword [r14], rbx
0x0000afe1      eb1a           jmp 0xaffd
0x0000afe3      0f1f440000     nop dword [rax + rax]
0x0000afe8      4d85ed         test r13, r13
0x0000afeb      48894c2408     mov qword [rsp + 8], rcx
0x0000aff0      753e           jne 0xb030
0x0000aff2      660f1f440000   nop word [rax + rax]
0x0000aff8      bd04000000     mov ebp, 4
0x0000affd      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000b002      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000b00b      89e8           mov eax, ebp
0x0000b00d      0f858d020000   jne 0xb2a0
0x0000b013      4883c428       add rsp, 0x28
0x0000b017      5b             pop rbx
0x0000b018      5d             pop rbp
0x0000b019      415c           pop r12
0x0000b01b      415d           pop r13
0x0000b01d      415e           pop r14
0x0000b01f      415f           pop r15
0x0000b021      c3             ret
0x0000b022      660f1f440000   nop word [rax + rax]
0x0000b028      31ed           xor ebp, ebp
0x0000b02a      eba4           jmp 0xafd0
0x0000b02c      0f1f4000       nop dword [rax]
0x0000b030      440fb66500     movzx r12d, byte [rbp]
0x0000b035      4584e4         test r12b, r12b
0x0000b038      74be           je 0xaff8
0x0000b03a      410fbef4       movsx esi, r12b
0x0000b03e      4c89ef         mov rdi, r13
0x0000b041      31ed           xor ebp, ebp
0x0000b043      e8986cffff     call sym.imp.strchr
0x0000b048      4885c0         test rax, rax
0x0000b04b      bb01000000     mov ebx, 1
0x0000b050      488b4c2408     mov rcx, qword [rsp + 8]
0x0000b055      74a1           je 0xaff8
0x0000b057      410fbef4       movsx esi, r12b
0x0000b05b      4c89ef         mov rdi, r13
0x0000b05e      48894c2408     mov qword [rsp + 8], rcx
0x0000b063      e8786cffff     call sym.imp.strchr
0x0000b068      4885c0         test rax, rax
0x0000b06b      488b4c2408     mov rcx, qword [rsp + 8]
0x0000b070      0f84c6000000   je 0xb13c
0x0000b076      418d4424bb     lea eax, [r12 - 0x45]
0x0000b07b      3c2f           cmp al, 0x2f
0x0000b07d      7751           ja 0xb0d0
0x0000b07f      48ba45893000.  movabs rdx, 0x814400308945
0x0000b089      480fa3c2       bt rdx, rax
0x0000b08d      7341           jae 0xb0d0
0x0000b08f      be30000000     mov esi, 0x30                           ; '0'
0x0000b094      4c89ef         mov rdi, r13
0x0000b097      48894c2408     mov qword [rsp + 8], rcx
0x0000b09c      e83f6cffff     call sym.imp.strchr
0x0000b0a1      4885c0         test rax, rax
0x0000b0a4      488b4c2408     mov rcx, qword [rsp + 8]
0x0000b0a9      7425           je 0xb0d0
0x0000b0ab      0fb64101       movzx eax, byte [rcx + 1]
0x0000b0af      3c44           cmp al, 0x44
0x0000b0b1      740c           je 0xb0bf
0x0000b0b3      3c69           cmp al, 0x69
0x0000b0b5      0f84cd010000   je 0xb288
0x0000b0bb      3c42           cmp al, 0x42
0x0000b0bd      7511           jne 0xb0d0
0x0000b0bf      bf02000000     mov edi, 2
0x0000b0c4      bee8030000     mov esi, 0x3e8
0x0000b0c9      eb0f           jmp 0xb0da
0x0000b0cb      0f1f440000     nop dword [rax + rax]
0x0000b0d0      bf01000000     mov edi, 1
0x0000b0d5      be00040000     mov esi, 0x400
0x0000b0da      4183ec42       sub r12d, 0x42
0x0000b0de      4180fc35       cmp r12b, 0x35
0x0000b0e2      7758           ja 0xb13c
0x0000b0e4      488d158d3400.  lea rdx, [0x0000e578]
0x0000b0eb      450fb6e4       movzx r12d, r12b
0x0000b0ef      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x0000b0f3      4801d0         add rax, rdx
0x0000b0f6      ffe0           jmp rax
0x0000b0f8      4889d8         mov rax, rbx
0x0000b0fb      48f7e6         mul rsi
0x0000b0fe      0f80ed010000   jo 0xb2f1
0x0000b104      4531c0         xor r8d, r8d
0x0000b107      48f7e6         mul rsi
0x0000b10a      0f80d2010000   jo 0xb2e2
0x0000b110      4889c3         mov rbx, rax
0x0000b113      4409c5         or ebp, r8d
0x0000b116      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b120      4863ff         movsxd rdi, edi
0x0000b123      89e8           mov eax, ebp
0x0000b125      4801f9         add rcx, rdi
0x0000b128      83c802         or eax, 2
0x0000b12b      49890f         mov qword [r15], rcx
0x0000b12e      803900         cmp byte [rcx], 0
0x0000b131      49891e         mov qword [r14], rbx
0x0000b134      0f45e8         cmovne ebp, eax
0x0000b137      e9c1feffff     jmp 0xaffd
0x0000b13c      49891e         mov qword [r14], rbx
0x0000b13f      83cd02         or ebp, 2
0x0000b142      e9b6feffff     jmp 0xaffd
0x0000b147      ba02000000     mov edx, 2
0x0000b14c      4889d0         mov rax, rdx
0x0000b14f      48f7e3         mul rbx
0x0000b152      0f8096000000   jo 0xb1ee
0x0000b158      4801db         add rbx, rbx
0x0000b15b      ebc3           jmp 0xb120
0x0000b15d      ba00020000     mov edx, 0x200
0x0000b162      4889d0         mov rax, rdx
0x0000b165      48f7e3         mul rbx
0x0000b168      0f8080000000   jo 0xb1ee
0x0000b16e      48c1e309       shl rbx, 9
0x0000b172      ebac           jmp 0xb120
0x0000b174      41b807000000   mov r8d, 7
0x0000b17a      4531c9         xor r9d, r9d
0x0000b17d      0f1f00         nop dword [rax]
0x0000b180      4889d8         mov rax, rbx
0x0000b183      48f7e6         mul rsi
0x0000b186      4889c3         mov rbx, rax
0x0000b189      0f808f010000   jo 0xb31e
0x0000b18f      4183e801       sub r8d, 1
0x0000b193      75eb           jne 0xb180
0x0000b195      4409cd         or ebp, r9d
0x0000b198      eb86           jmp 0xb120
0x0000b19a      41b808000000   mov r8d, 8
0x0000b1a0      4531c9         xor r9d, r9d
0x0000b1a3      0f1f440000     nop dword [rax + rax]
0x0000b1a8      4889d8         mov rax, rbx
0x0000b1ab      48f7e6         mul rsi
0x0000b1ae      4889c3         mov rbx, rax
0x0000b1b1      0f8049010000   jo 0xb300
0x0000b1b7      4183e801       sub r8d, 1
0x0000b1bb      75eb           jne 0xb1a8
0x0000b1bd      ebd6           jmp 0xb195
0x0000b1bf      41b804000000   mov r8d, 4
0x0000b1c5      4531c9         xor r9d, r9d
0x0000b1c8      4889d8         mov rax, rbx
0x0000b1cb      48f7e6         mul rsi
0x0000b1ce      4889c3         mov rbx, rax
0x0000b1d1      0f80fc000000   jo 0xb2d3
0x0000b1d7      4183e801       sub r8d, 1
0x0000b1db      75eb           jne 0xb1c8
0x0000b1dd      ebb6           jmp 0xb195
0x0000b1df      4889d8         mov rax, rbx
0x0000b1e2      48f7e6         mul rsi
0x0000b1e5      4889c3         mov rbx, rax
0x0000b1e8      0f8132ffffff   jno 0xb120
0x0000b1ee      bd01000000     mov ebp, 1
0x0000b1f3      4883cbff       or rbx, 0xffffffffffffffff
0x0000b1f7      e924ffffff     jmp 0xb120
0x0000b1fc      0f1f4000       nop dword [rax]
0x0000b200      41b805000000   mov r8d, 5
0x0000b206      4531c9         xor r9d, r9d
0x0000b209      4889d8         mov rax, rbx
0x0000b20c      48f7e6         mul rsi
0x0000b20f      4889c3         mov rbx, rax
0x0000b212      0f80f7000000   jo 0xb30f
0x0000b218      4183e801       sub r8d, 1
0x0000b21c      75eb           jne 0xb209
0x0000b21e      e972ffffff     jmp 0xb195
0x0000b223      41b806000000   mov r8d, 6
0x0000b229      4531c9         xor r9d, r9d
0x0000b22c      4889d8         mov rax, rbx
0x0000b22f      48f7e6         mul rsi
0x0000b232      4889c3         mov rbx, rax
0x0000b235      0f8089000000   jo 0xb2c4
0x0000b23b      4183e801       sub r8d, 1
0x0000b23f      75eb           jne 0xb22c
0x0000b241      e94fffffff     jmp 0xb195
0x0000b246      ba00040000     mov edx, 0x400
0x0000b24b      4889d0         mov rax, rdx
0x0000b24e      48f7e3         mul rbx
0x0000b251      709b           jo 0xb1ee
0x0000b253      48c1e30a       shl rbx, 0xa
0x0000b257      e9c4feffff     jmp 0xb120
0x0000b25c      4889d8         mov rax, rbx
0x0000b25f      48f7e6         mul rsi
0x0000b262      0f80c5000000   jo 0xb32d
0x0000b268      4531c0         xor r8d, r8d
0x0000b26b      48f7e6         mul rsi
0x0000b26e      0f8193feffff   jno 0xb107
0x0000b274      41b801000000   mov r8d, 1
0x0000b27a      4883c8ff       or rax, 0xffffffffffffffff
0x0000b27e      e984feffff     jmp 0xb107
0x0000b283      0f1f440000     nop dword [rax + rax]
0x0000b288      31ff           xor edi, edi
0x0000b28a      80790242       cmp byte [rcx + 2], 0x42
0x0000b28e      be00040000     mov esi, 0x400
0x0000b293      400f94c7       sete dil
0x0000b297      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000b29b      e93afeffff     jmp 0xb0da
0x0000b2a0      e80b6affff     call sym.imp.__stack_chk_fail
0x0000b2a5      488d0da43300.  lea rcx, obj.__PRETTY_FUNCTION__.4162_2 ; 0xe650 ; "xstrtoumax"
0x0000b2ac      488d354d3000.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0xe300 ; "../coreutils-8.31/lib/xstrtol.c"
0x0000b2b3      488d3d663000.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0xe320 ; "0 <= strtol_base && strtol_base <= 36"
0x0000b2ba      ba54000000     mov edx, 0x54                           ; 'T'
0x0000b2bf      e86c6affff     call sym.imp.__assert_fail
0x0000b2c4      41b901000000   mov r9d, 1
0x0000b2ca      4883cbff       or rbx, 0xffffffffffffffff
0x0000b2ce      e968ffffff     jmp 0xb23b
0x0000b2d3      41b901000000   mov r9d, 1
0x0000b2d9      4883cbff       or rbx, 0xffffffffffffffff
0x0000b2dd      e9f5feffff     jmp 0xb1d7
0x0000b2e2      41b801000000   mov r8d, 1
0x0000b2e8      4883cbff       or rbx, 0xffffffffffffffff
0x0000b2ec      e922feffff     jmp 0xb113
0x0000b2f1      4883c8ff       or rax, 0xffffffffffffffff
0x0000b2f5      41b801000000   mov r8d, 1
0x0000b2fb      e907feffff     jmp 0xb107
0x0000b300      41b901000000   mov r9d, 1
0x0000b306      4883cbff       or rbx, 0xffffffffffffffff
0x0000b30a      e9a8feffff     jmp 0xb1b7
0x0000b30f      41b901000000   mov r9d, 1
0x0000b315      4883cbff       or rbx, 0xffffffffffffffff
0x0000b319      e9fafeffff     jmp 0xb218
0x0000b31e      41b901000000   mov r9d, 1
0x0000b324      4883cbff       or rbx, 0xffffffffffffffff
0x0000b328      e962feffff     jmp 0xb18f
0x0000b32d      41b801000000   mov r8d, 1
0x0000b333      4883c8ff       or rax, 0xffffffffffffffff
0x0000b337      e92fffffff     jmp 0xb26b
0x0000b33c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x0000b340      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x0000b342      55             push rbp
0x0000b343      53             push rbx
0x0000b344      4889fb         mov rbx, rdi
0x0000b347      e8a46affff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000b34c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000b34e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x0000b351      7854           js 0xb3a7                               ; ../coreutils-8.31/lib/fclose.c:66
0x0000b353      e8186bffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x0000b358      85c0           test eax, eax
0x0000b35a      752c           jne 0xb388
0x0000b35c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000b35f      e8dc020000     call sym.rpl_fflush
0x0000b364      85c0           test eax, eax
0x0000b366      743c           je 0xb3a4
0x0000b368      e84368ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000b36d      448b20         mov r12d, dword [rax]
0x0000b370      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000b373      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x0000b376      e8e568ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000b37b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000b37e      7530           jne 0xb3b0
0x0000b380      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000b381      5d             pop rbp
0x0000b382      415c           pop r12
0x0000b384      c3             ret
0x0000b385      0f1f00         nop dword [rax]
0x0000b388      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000b38b      e8606affff     call sym.imp.fileno
0x0000b390      31f6           xor esi, esi
0x0000b392      ba01000000     mov edx, 1
0x0000b397      89c7           mov edi, eax
0x0000b399      e88269ffff     call sym.imp.lseek
0x0000b39e      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000b3a2      75b8           jne 0xb35c
0x0000b3a4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000b3a7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000b3a8      5d             pop rbp
0x0000b3a9      415c           pop r12
0x0000b3ab      e9b068ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x0000b3b0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x0000b3b4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x0000b3b9      ebc5           jmp 0xb380
0x0000b3bb      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x0000b3c0      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x0000b3c2      55             push rbp
0x0000b3c3      89fd           mov ebp, edi
0x0000b3c5      53             push rbx
0x0000b3c6      4883ec50       sub rsp, 0x50
0x0000b3ca      64488b042528.  mov rax, qword fs:[0x28]
0x0000b3d3      4889442418     mov qword [rsp + 0x18], rax
0x0000b3d8      31c0           xor eax, eax
0x0000b3da      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x0000b3df      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x0000b3e1      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x0000b3e6      48894c2438     mov qword [rsp + 0x38], rcx
0x0000b3eb      4c89442440     mov qword [rsp + 0x40], r8
0x0000b3f0      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x0000b3f5      488d442420     lea rax, [rsp + 0x20]
0x0000b3fa      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x0000b3ff      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x0000b406      4889442410     mov qword [rsp + 0x10], rax
0x0000b40b      0f8401020000   je 0xb612                               ; ../coreutils-8.31/lib/fcntl.c:210
0x0000b411      81fe06040000   cmp esi, 0x406
0x0000b417      7547           jne 0xb460
0x0000b419      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x0000b41e      833d735f2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x211398:4]=0
0x0000b425      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x2910 rip
0x0000b42c      448b6010       mov r12d, dword [rax + 0x10]
0x0000b430      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x0000b433      0f882a010000   js 0xb563                               ; ../coreutils-8.31/lib/fcntl.c:507
0x0000b439      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000b43b      be06040000     mov esi, 0x406
0x0000b440      e8cb67ffff     call sym.imp.fcntl
0x0000b445      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x0000b447      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000b449      0f8889010000   js 0xb5d8                               ; ../coreutils-8.31/lib/fcntl.c:510
0x0000b44f      c7053f5f2000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x211398:4]=0
0x0000b459      eb45           jmp 0xb4a0
0x0000b45b      0f1f440000     nop dword [rax + rax]
0x0000b460      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x0000b463      742b           je 0xb490
0x0000b465      7f59           jg 0xb4c0
0x0000b467      83fe04         cmp esi, 4
0x0000b46a      0f84d0000000   je 0xb540
0x0000b470      0f8fba000000   jg 0xb530
0x0000b476      83fe02         cmp esi, 2
0x0000b479      0f84c1000000   je 0xb540
0x0000b47f      7f0f           jg 0xb490
0x0000b481      83fe01         cmp esi, 1
0x0000b484      7562           jne 0xb4e8
0x0000b486      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b490      89ef           mov edi, ebp
0x0000b492      31c0           xor eax, eax
0x0000b494      e87767ffff     call sym.imp.fcntl
0x0000b499      89c3           mov ebx, eax
0x0000b49b      0f1f440000     nop dword [rax + rax]
0x0000b4a0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000b4a5      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000b4ae      89d8           mov eax, ebx
0x0000b4b0      0f8557010000   jne 0xb60d                              ; ../coreutils-8.31/lib/fcntl.c:355
0x0000b4b6      4883c450       add rsp, 0x50
0x0000b4ba      5b             pop rbx
0x0000b4bb      5d             pop rbp
0x0000b4bc      415c           pop r12
0x0000b4be      c3             ret
0x0000b4bf      90             nop
0x0000b4c0      81fe07040000   cmp esi, 0x407
0x0000b4c6      7f48           jg 0xb510
0x0000b4c8      81fe06040000   cmp esi, 0x406
0x0000b4ce      7d70           jge 0xb540
0x0000b4d0      81fe01040000   cmp esi, 0x401
0x0000b4d6      74b8           je 0xb490
0x0000b4d8      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x0000b4de      7460           je 0xb540
0x0000b4e0      81fe00040000   cmp esi, 0x400
0x0000b4e6      7458           je 0xb540
0x0000b4e8      8b0424         mov eax, dword [rsp]
0x0000b4eb      83f82f         cmp eax, 0x2f
0x0000b4ee      0f8736010000   ja 0xb62a
0x0000b4f4      4803442410     add rax, qword [rsp + 0x10]
0x0000b4f9      488b10         mov rdx, qword [rax]
0x0000b4fc      89ef           mov edi, ebp
0x0000b4fe      31c0           xor eax, eax
0x0000b500      e80b67ffff     call sym.imp.fcntl
0x0000b505      89c3           mov ebx, eax
0x0000b507      eb97           jmp 0xb4a0
0x0000b509      0f1f80000000.  nop dword [rax]
0x0000b510      81fe09040000   cmp esi, 0x409
0x0000b516      7428           je 0xb540
0x0000b518      0f8c72ffffff   jl 0xb490
0x0000b51e      81fe0a040000   cmp esi, 0x40a
0x0000b524      75c2           jne 0xb4e8
0x0000b526      e965ffffff     jmp 0xb490                              ; ../coreutils-8.31/lib/fcntl.c:350
0x0000b52b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x0000b530      83fe09         cmp esi, 9
0x0000b533      0f8457ffffff   je 0xb490
0x0000b539      7f05           jg 0xb540
0x0000b53b      83fe08         cmp esi, 8
0x0000b53e      75a8           jne 0xb4e8
0x0000b540      8b0424         mov eax, dword [rsp]
0x0000b543      83f82f         cmp eax, 0x2f
0x0000b546      0f87e8000000   ja 0xb634
0x0000b54c      4803442410     add rax, qword [rsp + 0x10]
0x0000b551      8b10           mov edx, dword [rax]
0x0000b553      89ef           mov edi, ebp
0x0000b555      31c0           xor eax, eax
0x0000b557      e8b466ffff     call sym.imp.fcntl
0x0000b55c      89c3           mov ebx, eax
0x0000b55e      e93dffffff     jmp 0xb4a0
0x0000b563      31f6           xor esi, esi
0x0000b565      31c0           xor eax, eax
0x0000b567      e8a466ffff     call sym.imp.fcntl
0x0000b56c      85c0           test eax, eax
0x0000b56e      89c3           mov ebx, eax
0x0000b570      0f882affffff   js 0xb4a0
0x0000b576      833d1b5e2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x211398:4]=0
0x0000b57d      0f851dffffff   jne 0xb4a0
0x0000b583      31c0           xor eax, eax
0x0000b585      be01000000     mov esi, 1
0x0000b58a      89df           mov edi, ebx
0x0000b58c      e87f66ffff     call sym.imp.fcntl
0x0000b591      85c0           test eax, eax
0x0000b593      781c           js 0xb5b1
0x0000b595      83c801         or eax, 1
0x0000b598      be02000000     mov esi, 2
0x0000b59d      89df           mov edi, ebx
0x0000b59f      89c2           mov edx, eax
0x0000b5a1      31c0           xor eax, eax
0x0000b5a3      e86866ffff     call sym.imp.fcntl
0x0000b5a8      83f8ff         cmp eax, 0xffffffff
0x0000b5ab      0f85effeffff   jne 0xb4a0
0x0000b5b1      e8fa65ffff     call sym.imp.__errno_location
0x0000b5b6      448b20         mov r12d, dword [rax]
0x0000b5b9      4889c5         mov rbp, rax
0x0000b5bc      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x0000b5be      e89d67ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x0000b5c3      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000b5c8      44896500       mov dword [rbp], r12d
0x0000b5cc      e9cffeffff     jmp 0xb4a0
0x0000b5d1      0f1f80000000.  nop dword [rax]
0x0000b5d8      e8d365ffff     call sym.imp.__errno_location
0x0000b5dd      833816         cmp dword [rax], 0x16
0x0000b5e0      0f8569feffff   jne 0xb44f
0x0000b5e6      31f6           xor esi, esi
0x0000b5e8      31c0           xor eax, eax
0x0000b5ea      4489e2         mov edx, r12d
0x0000b5ed      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x0000b5ef      e81c66ffff     call sym.imp.fcntl
0x0000b5f4      85c0           test eax, eax
0x0000b5f6      89c3           mov ebx, eax
0x0000b5f8      0f88a2feffff   js 0xb4a0
0x0000b5fe      c705905d2000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x211398:4]=0
0x0000b608      e976ffffff     jmp 0xb583
0x0000b60d      e89e66ffff     call sym.imp.__stack_chk_fail
0x0000b612      488b442410     mov rax, qword [rsp + 0x10]
0x0000b617      31f6           xor esi, esi
0x0000b619      8b5010         mov edx, dword [rax + 0x10]
0x0000b61c      31c0           xor eax, eax
0x0000b61e      e8ed65ffff     call sym.imp.fcntl
0x0000b623      89c3           mov ebx, eax
0x0000b625      e976feffff     jmp 0xb4a0
0x0000b62a      488b442408     mov rax, qword [rsp + 8]
0x0000b62f      e9c5feffff     jmp 0xb4f9
0x0000b634      488b442408     mov rax, qword [rsp + 8]
0x0000b639      e913ffffff     jmp 0xb551
0x0000b63e      6690           nop
;-- rpl_fflush:
0x0000b640      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x0000b643      53             push rbx
0x0000b644      4889fb         mov rbx, rdi
0x0000b647      7411           je 0xb65a                               ; ../coreutils-8.31/lib/fflush.c:150
0x0000b649      e82268ffff     call sym.imp.__freading
0x0000b64e      85c0           test eax, eax
0x0000b650      7408           je 0xb65a
0x0000b652      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x0000b658      750e           jne 0xb668
0x0000b65a      4889df         mov rdi, rbx
0x0000b65d      5b             pop rbx
0x0000b65e      e9bd67ffff     jmp sym.imp.fflush
0x0000b663      0f1f440000     nop dword [rax + rax]
0x0000b668      4889df         mov rdi, rbx
0x0000b66b      ba01000000     mov edx, 1
0x0000b670      31f6           xor esi, esi
0x0000b672      e809000000     call sym.rpl_fseeko
0x0000b677      4889df         mov rdi, rbx
0x0000b67a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000b67b      e9a067ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x0000b680      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x0000b684      48394710       cmp qword [rdi + 0x10], rax
0x0000b688      7406           je 0xb690                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000b68a      e96168ffff     jmp sym.imp.fseeko
0x0000b68f      90             nop
0x0000b690      488b4720       mov rax, qword [rdi + 0x20]
0x0000b694      48394728       cmp qword [rdi + 0x28], rax
0x0000b698      75f0           jne 0xb68a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000b69a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000b69f      75e9           jne 0xb68a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x0000b6a1      4154           push r12
0x0000b6a3      55             push rbp
0x0000b6a4      4189d4         mov r12d, edx
0x0000b6a7      53             push rbx
0x0000b6a8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000b6ab      4889fb         mov rbx, rdi
0x0000b6ae      e83d67ffff     call sym.imp.fileno
0x0000b6b3      4489e2         mov edx, r12d
0x0000b6b6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x0000b6b9      89c7           mov edi, eax
0x0000b6bb      e86066ffff     call sym.imp.lseek
0x0000b6c0      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000b6c4      740c           je 0xb6d2
0x0000b6c6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x0000b6c9      488983900000.  mov qword [rbx + 0x90], rax
0x0000b6d0      31c0           xor eax, eax
0x0000b6d2      5b             pop rbx
0x0000b6d3      5d             pop rbp
0x0000b6d4      415c           pop r12
0x0000b6d6      c3             ret
0x0000b6d7      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x0000b6e0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x0000b6e2      4154           push r12
0x0000b6e4      4989f5         mov r13, rsi
0x0000b6e7      55             push rbp
0x0000b6e8      53             push rbx
0x0000b6e9      4889fb         mov rbx, rdi
0x0000b6ec      4989d4         mov r12, rdx
0x0000b6ef      4883ec18       sub rsp, 0x18
0x0000b6f3      64488b042528.  mov rax, qword fs:[0x28]
0x0000b6fc      4889442408     mov qword [rsp + 8], rax
0x0000b701      31c0           xor eax, eax
0x0000b703      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x0000b708      4885ff         test rdi, rdi
0x0000b70b      480f44d8       cmove rbx, rax
0x0000b70f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000b712      e8b965ffff     call sym.imp.mbrtowc
0x0000b717      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000b71b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000b71e      7620           jbe 0xb740                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000b720      4d85e4         test r12, r12
0x0000b723      741b           je 0xb740
0x0000b725      31ff           xor edi, edi
0x0000b727      e8e4a3ffff     call sym.hard_locale
0x0000b72c      84c0           test al, al
0x0000b72e      7510           jne 0xb740
0x0000b730      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000b735      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000b73a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000b73c      0f1f4000       nop dword [rax]
0x0000b740      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x0000b745      644833142528.  xor rdx, qword fs:[0x28]
0x0000b74e      4889e8         mov rax, rbp
0x0000b751      750b           jne 0xb75e
0x0000b753      4883c418       add rsp, 0x18
0x0000b757      5b             pop rbx
0x0000b758      5d             pop rbp
0x0000b759      415c           pop r12
0x0000b75b      415d           pop r13
0x0000b75d      c3             ret
0x0000b75e      e84d65ffff     call sym.imp.__stack_chk_fail
0x0000b763      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b76d      0f1f00         nop dword [rax]
;-- setenv_TZ:
0x0000b770      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/time_rz.c:221
0x0000b773      741b           je 0xb790
0x0000b775      4889fe         mov rsi, rdi                            ; ../coreutils-8.31/lib/time_rz.c:222
0x0000b778      488d3d9b0800.  lea rdi, [0x0000c01a]                   ; "TZ"
0x0000b77f      ba01000000     mov edx, 1
0x0000b784      e9a764ffff     jmp sym.imp.setenv
0x0000b789      0f1f80000000.  nop dword [rax]
0x0000b790      488d3d830800.  lea rdi, [0x0000c01a]                   ; "TZ"
0x0000b797      e97467ffff     jmp sym.imp.unsetenv
0x0000b79c      0f1f4000       nop dword [rax]
;-- tzfree.part.0:
0x0000b7a0      4885ff         test rdi, rdi                           ; ./lib/time.h:767
0x0000b7a3      7423           je 0xb7c8
0x0000b7a5      53             push rbx
0x0000b7a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b7b0      488b1f         mov rbx, qword [rdi]                    ; ../coreutils-8.31/lib/time_rz.c:201
0x0000b7b3      e8d863ffff     call sym.imp.free                       ; ../coreutils-8.31/lib/time_rz.c:202
0x0000b7b8      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/time_rz.c:199
0x0000b7bb      4889df         mov rdi, rbx
0x0000b7be      75f0           jne 0xb7b0
0x0000b7c0      5b             pop rbx                                 ; ../coreutils-8.31/lib/time_rz.c:205
0x0000b7c1      c3             ret
0x0000b7c2      660f1f440000   nop word [rax + rax]
0x0000b7c8      f3c3           ret
0x0000b7ca      660f1f440000   nop word [rax + rax]
;-- revert_tz.part.1:
0x0000b7d0      4155           push r13
0x0000b7d2      4154           push r12
0x0000b7d4      55             push rbp
0x0000b7d5      53             push rbx
0x0000b7d6      4889fd         mov rbp, rdi
0x0000b7d9      4883ec08       sub rsp, 8
0x0000b7dd      e8ce63ffff     call sym.imp.__errno_location
0x0000b7e2      807d0800       cmp byte [rbp + 8], 0
0x0000b7e6      4889c3         mov rbx, rax
0x0000b7e9      448b20         mov r12d, dword [rax]
0x0000b7ec      488d7d09       lea rdi, [rbp + 9]
0x0000b7f0      7502           jne 0xb7f4
0x0000b7f2      31ff           xor edi, edi
0x0000b7f4      e877ffffff     call sym.setenv_TZ
0x0000b7f9      85c0           test eax, eax
0x0000b7fb      7423           je 0xb820
0x0000b7fd      448b23         mov r12d, dword [rbx]
0x0000b800      4531ed         xor r13d, r13d
0x0000b803      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/time_rz.c:143
0x0000b806      e895ffffff     call sym.tzfree.part.0
0x0000b80b      448923         mov dword [rbx], r12d
0x0000b80e      4883c408       add rsp, 8
0x0000b812      4489e8         mov eax, r13d
0x0000b815      5b             pop rbx
0x0000b816      5d             pop rbp                                 ; ../coreutils-8.31/lib/time_rz.c:6
0x0000b817      415c           pop r12
0x0000b819      415d           pop r13
0x0000b81b      c3             ret
0x0000b81c      0f1f4000       nop dword [rax]
0x0000b820      e8bb65ffff     call sym.imp.tzset
0x0000b825      41bd01000000   mov r13d, 1
0x0000b82b      ebd6           jmp 0xb803
0x0000b82d      0f1f00         nop dword [rax]
;-- tzalloc:
0x0000b830      4885ff         test rdi, rdi
0x0000b833      4154           push r12
0x0000b835      55             push rbp                                ; ../coreutils-8.31/lib/time_rz.c:9
0x0000b836      53             push rbx
0x0000b837      745f           je 0xb898
0x0000b839      4989fc         mov r12, rdi
0x0000b83c      e85f64ffff     call sym.imp.strlen
0x0000b841      488d6801       lea rbp, [rax + 1]
0x0000b845      bf76000000     mov edi, 0x76                           ; 'v'
0x0000b84a      4883fd76       cmp rbp, 0x76                           ; ../coreutils-8.31/lib/time_rz.c:12
0x0000b84e      480f43fd       cmovae rdi, rbp
0x0000b852      4883c711       add rdi, 0x11
0x0000b856      4883e7f8       and rdi, 0xfffffffffffffff8
0x0000b85a      e8b165ffff     call sym.imp.malloc
0x0000b85f      4885c0         test rax, rax
0x0000b862      4889c3         mov rbx, rax
0x0000b865      7424           je 0xb88b
0x0000b867      48c700000000.  mov qword [rax], 0
0x0000b86e      488d7b09       lea rdi, [rbx + 9]                      ; ../coreutils-8.31/lib/time_rz.c:22
0x0000b872      b801000000     mov eax, 1
0x0000b877      66894308       mov word [rbx + 8], ax
0x0000b87b      4889ea         mov rdx, rbp                            ; ../coreutils-8.31/lib/time_rz.c:9
0x0000b87e      4c89e6         mov rsi, r12
0x0000b881      e84a65ffff     call sym.imp.memcpy
0x0000b886      c6442b0900     mov byte [rbx + rbp + 9], 0
0x0000b88b      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/time_rz.c:10
0x0000b88e      5b             pop rbx
0x0000b88f      5d             pop rbp
0x0000b890      415c           pop r12
0x0000b892      c3             ret
0x0000b893      0f1f440000     nop dword [rax + rax]
0x0000b898      bf80000000     mov edi, 0x80
0x0000b89d      e86e65ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/time_rz.c:22
0x0000b8a2      4885c0         test rax, rax
0x0000b8a5      4889c3         mov rbx, rax
0x0000b8a8      74e1           je 0xb88b
0x0000b8aa      31d2           xor edx, edx
0x0000b8ac      48c703000000.  mov qword [rbx], 0                      ; ../coreutils-8.31/lib/time_rz.c:30
0x0000b8b3      4889d8         mov rax, rbx
0x0000b8b6      66895308       mov word [rbx + 8], dx                  ; ../coreutils-8.31/lib/time_rz.c:40
0x0000b8ba      5b             pop rbx                                 ; ../coreutils-8.31/lib/time_rz.c:52
0x0000b8bb      5d             pop rbp
0x0000b8bc      415c           pop r12
0x0000b8be      c3             ret
0x0000b8bf      90             nop
;-- save_abbr:
0x0000b8c0      4157           push r15
0x0000b8c2      4156           push r14
0x0000b8c4      b801000000     mov eax, 1
0x0000b8c9      4155           push r13
0x0000b8cb      4154           push r12
0x0000b8cd      55             push rbp
0x0000b8ce      53             push rbx
0x0000b8cf      4883ec08       sub rsp, 8
0x0000b8d3      488b6e30       mov rbp, qword [rsi + 0x30]
0x0000b8d7      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/time_rz.c:55
0x0000b8da      0f8490000000   je 0xb970
0x0000b8e0      4839ee         cmp rsi, rbp
0x0000b8e3      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/time_rz.c:59
0x0000b8e6      4989f5         mov r13, rsi
0x0000b8e9      7709           ja 0xb8f4
0x0000b8eb      488d5638       lea rdx, [rsi + 0x38]
0x0000b8ef      4839d5         cmp rbp, rdx
0x0000b8f2      727c           jb 0xb970                               ; ../coreutils-8.31/lib/time_rz.c:61
0x0000b8f4      807d0000       cmp byte [rbp], 0
0x0000b8f8      498d5c2409     lea rbx, [r12 + 9]
0x0000b8fd      7461           je 0xb960
0x0000b8ff      90             nop
0x0000b900      4889ee         mov rsi, rbp
0x0000b903      4889df         mov rdi, rbx
0x0000b906      e8a564ffff     call sym.imp.strcmp
0x0000b90b      85c0           test eax, eax
0x0000b90d      7458           je 0xb967
0x0000b90f      803b00         cmp byte [rbx], 0
0x0000b912      7512           jne 0xb926
0x0000b914      4d8d742409     lea r14, [r12 + 9]
0x0000b919      4939de         cmp r14, rbx
0x0000b91c      7562           jne 0xb980
0x0000b91e      41807c240800   cmp byte [r12 + 8], 0
0x0000b924      745a           je 0xb980                               ; ../coreutils-8.31/lib/time_rz.c:87
0x0000b926      4889df         mov rdi, rbx
0x0000b929      e87263ffff     call sym.imp.strlen
0x0000b92e      488d5c0301     lea rbx, [rbx + rax + 1]                ; ../coreutils-8.31/lib/time_rz.c:59
0x0000b933      803b00         cmp byte [rbx], 0
0x0000b936      75c8           jne 0xb900
0x0000b938      498b0424       mov rax, qword [r12]
0x0000b93c      4885c0         test rax, rax
0x0000b93f      74bf           je 0xb900
0x0000b941      488d5809       lea rbx, [rax + 9]
0x0000b945      4889ee         mov rsi, rbp
0x0000b948      4989c4         mov r12, rax
0x0000b94b      4889df         mov rdi, rbx
0x0000b94e      e85d64ffff     call sym.imp.strcmp                     ; ../coreutils-8.31/lib/time_rz.c:101
0x0000b953      85c0           test eax, eax                           ; ../coreutils-8.31/lib/time_rz.c:102
0x0000b955      75b8           jne 0xb90f
0x0000b957      eb0e           jmp 0xb967
0x0000b959      0f1f80000000.  nop dword [rax]
0x0000b960      488d1d7e0500.  lea rbx, [0x0000bee5]
0x0000b967      49895d30       mov qword [r13 + 0x30], rbx
0x0000b96b      b801000000     mov eax, 1
0x0000b970      4883c408       add rsp, 8
0x0000b974      5b             pop rbx
0x0000b975      5d             pop rbp
0x0000b976      415c           pop r12
0x0000b978      415d           pop r13                                 ; ../coreutils-8.31/lib/time_rz.c:65
0x0000b97a      415e           pop r14
0x0000b97c      415f           pop r15
0x0000b97e      c3             ret
0x0000b97f      90             nop
0x0000b980      4889ef         mov rdi, rbp
0x0000b983      e81863ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/time_rz.c:70
0x0000b988      488d5001       lea rdx, [rax + 1]
0x0000b98c      4989c7         mov r15, rax                            ; ../coreutils-8.31/lib/time_rz.c:74
0x0000b98f      4889d8         mov rax, rbx
0x0000b992      4c29f0         sub rax, r14
0x0000b995      4889c1         mov rcx, rax
0x0000b998      48f7d1         not rcx
0x0000b99b      4839d1         cmp rcx, rdx                            ; ../coreutils-8.31/lib/time_rz.c:76
0x0000b99e      7230           jb 0xb9d0
0x0000b9a0      4801d0         add rax, rdx
0x0000b9a3      4883f876       cmp rax, 0x76
0x0000b9a7      7637           jbe 0xb9e0
0x0000b9a9      4889ef         mov rdi, rbp
0x0000b9ac      e87ffeffff     call sym.tzalloc
0x0000b9b1      4889c3         mov rbx, rax
0x0000b9b4      49890424       mov qword [r12], rax
0x0000b9b8      31c0           xor eax, eax
0x0000b9ba      4885db         test rbx, rbx
0x0000b9bd      74b1           je 0xb970
0x0000b9bf      c6430800       mov byte [rbx + 8], 0
0x0000b9c3      4883c309       add rbx, 9                              ; string_fortified.h:-56
0x0000b9c7      eb9e           jmp 0xb967
0x0000b9c9      0f1f80000000.  nop dword [rax]
0x0000b9d0      e8db61ffff     call sym.imp.__errno_location
0x0000b9d5      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000b9db      31c0           xor eax, eax
0x0000b9dd      eb91           jmp 0xb970
0x0000b9df      90             nop
0x0000b9e0      4889ee         mov rsi, rbp
0x0000b9e3      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/time_rz.c:153
0x0000b9e6      e8e563ffff     call sym.imp.memcpy
0x0000b9eb      42c6443b0100   mov byte [rbx + r15 + 1], 0
0x0000b9f1      e971ffffff     jmp 0xb967
0x0000b9f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_tz:
0x0000ba00      4154           push r12                                ; ../coreutils-8.31/lib/time_rz.c:155
0x0000ba02      55             push rbp
0x0000ba03      4889fd         mov rbp, rdi
0x0000ba06      53             push rbx                                ; ../coreutils-8.31/lib/time_rz.c:156
0x0000ba07      488d3d0c0600.  lea rdi, [0x0000c01a]                   ; "TZ"
0x0000ba0e      4883ec10       sub rsp, 0x10
0x0000ba12      e86961ffff     call sym.imp.getenv
0x0000ba17      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/time_rz.c:161
0x0000ba1a      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/time_rz.c:162
0x0000ba1d      0f8495000000   je 0xbab8
0x0000ba23      807d0800       cmp byte [rbp + 8], 0
0x0000ba27      7567           jne 0xba90
0x0000ba29      4889df         mov rdi, rbx
0x0000ba2c      e8fffdffff     call sym.tzalloc
0x0000ba31      4885c0         test rax, rax
0x0000ba34      4989c4         mov r12, rax
0x0000ba37      7444           je 0xba7d
0x0000ba39      31ff           xor edi, edi
0x0000ba3b      807d0800       cmp byte [rbp + 8], 0
0x0000ba3f      7404           je 0xba45
0x0000ba41      488d7d09       lea rdi, [rbp + 9]
0x0000ba45      e826fdffff     call sym.setenv_TZ
0x0000ba4a      85c0           test eax, eax
0x0000ba4c      0f8486000000   je 0xbad8
0x0000ba52      e85961ffff     call sym.imp.__errno_location
0x0000ba57      4983fc01       cmp r12, 1
0x0000ba5b      8b18           mov ebx, dword [rax]                    ; ../coreutils-8.31/lib/time_rz.c:168
0x0000ba5d      7419           je 0xba78                               ; ../coreutils-8.31/lib/time_rz.c:169
0x0000ba5f      4c89e7         mov rdi, r12
0x0000ba62      4889442408     mov qword [rsp + 8], rax
0x0000ba67      e834fdffff     call sym.tzfree.part.0
0x0000ba6c      488b442408     mov rax, qword [rsp + 8]
0x0000ba71      0f1f80000000.  nop dword [rax]
0x0000ba78      8918           mov dword [rax], ebx
0x0000ba7a      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/time_rz.c:158
0x0000ba7d      4883c410       add rsp, 0x10
0x0000ba81      4c89e0         mov rax, r12
0x0000ba84      5b             pop rbx
0x0000ba85      5d             pop rbp
0x0000ba86      415c           pop r12
0x0000ba88      c3             ret
0x0000ba89      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/time_rz.c:173
0x0000ba90      488d7d09       lea rdi, [rbp + 9]
0x0000ba94      4889c6         mov rsi, rax
0x0000ba97      41bc01000000   mov r12d, 1
0x0000ba9d      e80e63ffff     call sym.imp.strcmp
0x0000baa2      85c0           test eax, eax
0x0000baa4      7583           jne 0xba29
0x0000baa6      4883c410       add rsp, 0x10
0x0000baaa      4c89e0         mov rax, r12
0x0000baad      5b             pop rbx
0x0000baae      5d             pop rbp
0x0000baaf      415c           pop r12
0x0000bab1      c3             ret
0x0000bab2      660f1f440000   nop word [rax + rax]
0x0000bab8      807d0800       cmp byte [rbp + 8], 0
0x0000babc      41bc01000000   mov r12d, 1
0x0000bac2      0f8561ffffff   jne 0xba29
0x0000bac8      4883c410       add rsp, 0x10
0x0000bacc      4c89e0         mov rax, r12
0x0000bacf      5b             pop rbx
0x0000bad0      5d             pop rbp
0x0000bad1      415c           pop r12
0x0000bad3      c3             ret
0x0000bad4      0f1f4000       nop dword [rax]
0x0000bad8      e80363ffff     call sym.imp.tzset
0x0000badd      eb9e           jmp 0xba7d
0x0000badf      90             nop
;-- tzfree:
0x0000bae0      4883ff01       cmp rdi, 1
0x0000bae4      7405           je 0xbaeb
0x0000bae6      e9b5fcffff     jmp sym.tzfree.part.0
0x0000baeb      c3             ret
0x0000baec      0f1f4000       nop dword [rax]
;-- localtime_rz:
0x0000baf0      4155           push r13
0x0000baf2      4154           push r12
0x0000baf4      55             push rbp
0x0000baf5      53             push rbx
0x0000baf6      4889f5         mov rbp, rsi
0x0000baf9      4883ec08       sub rsp, 8
0x0000bafd      4885ff         test rdi, rdi
0x0000bb00      746e           je 0xbb70
0x0000bb02      4989d5         mov r13, rdx
0x0000bb05      4889fb         mov rbx, rdi
0x0000bb08      e8f3feffff     call sym.set_tz
0x0000bb0d      4885c0         test rax, rax
0x0000bb10      4989c4         mov r12, rax
0x0000bb13      7449           je 0xbb5e
0x0000bb15      4c89ee         mov rsi, r13
0x0000bb18      4889ef         mov rdi, rbp
0x0000bb1b      e8b060ffff     call sym.imp.localtime_r                ; ../coreutils-8.31/lib/time_rz.c:74
0x0000bb20      4885c0         test rax, rax
0x0000bb23      742b           je 0xbb50
0x0000bb25      4c89ee         mov rsi, r13
0x0000bb28      4889df         mov rdi, rbx
0x0000bb2b      e890fdffff     call sym.save_abbr
0x0000bb30      84c0           test al, al
0x0000bb32      741c           je 0xbb50
0x0000bb34      4983fc01       cmp r12, 1
0x0000bb38      754b           jne 0xbb85
0x0000bb3a      4883c408       add rsp, 8
0x0000bb3e      4c89e8         mov rax, r13
0x0000bb41      5b             pop rbx
0x0000bb42      5d             pop rbp
0x0000bb43      415c           pop r12
0x0000bb45      415d           pop r13
0x0000bb47      c3             ret
0x0000bb48      0f1f84000000.  nop dword [rax + rax]
0x0000bb50      4983fc01       cmp r12, 1
0x0000bb54      7408           je 0xbb5e
0x0000bb56      4c89e7         mov rdi, r12
0x0000bb59      e872fcffff     call sym.revert_tz.part.1               ; ../coreutils-8.31/lib/time_rz.c:81
0x0000bb5e      4883c408       add rsp, 8
0x0000bb62      31c0           xor eax, eax
0x0000bb64      5b             pop rbx
0x0000bb65      5d             pop rbp
0x0000bb66      415c           pop r12
0x0000bb68      415d           pop r13
0x0000bb6a      c3             ret
0x0000bb6b      0f1f440000     nop dword [rax + rax]
0x0000bb70      4883c408       add rsp, 8
0x0000bb74      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/time_rz.c:82
0x0000bb77      4889d6         mov rsi, rdx
0x0000bb7a      5b             pop rbx
0x0000bb7b      5d             pop rbp
0x0000bb7c      415c           pop r12
0x0000bb7e      415d           pop r13
0x0000bb80      e98b61ffff     jmp sym.imp.gmtime_r                    ; ../coreutils-8.31/lib/time_rz.c:86
0x0000bb85      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/time_rz.c:87
0x0000bb88      e843fcffff     call sym.revert_tz.part.1               ; ../coreutils-8.31/lib/time_rz.c:86
0x0000bb8d      84c0           test al, al
0x0000bb8f      75a9           jne 0xbb3a
0x0000bb91      ebcb           jmp 0xbb5e                              ; ../coreutils-8.31/lib/time_rz.c:89
0x0000bb93      0f1f00         nop dword [rax]
0x0000bb96      662e0f1f8400.  nop word cs:[rax + rax]
;-- mktime_z:
0x0000bba0      4154           push r12
0x0000bba2      55             push rbp                                ; ../coreutils-8.31/lib/time_rz.c:93
0x0000bba3      53             push rbx
0x0000bba4      4889f3         mov rbx, rsi                            ; ../coreutils-8.31/lib/time_rz.c:95
0x0000bba7      4883ec50       sub rsp, 0x50
0x0000bbab      64488b042528.  mov rax, qword fs:[0x28]
0x0000bbb4      4889442448     mov qword [rsp + 0x48], rax
0x0000bbb9      31c0           xor eax, eax
0x0000bbbb      4885ff         test rdi, rdi
0x0000bbbe      0f84fc000000   je 0xbcc0
0x0000bbc4      4889fd         mov rbp, rdi
0x0000bbc7      e834feffff     call sym.set_tz
0x0000bbcc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/time_rz.c:-24
0x0000bbcf      4989c4         mov r12, rax
0x0000bbd2      0f84f8000000   je 0xbcd0
0x0000bbd8      4889df         mov rdi, rbx
0x0000bbdb      e88062ffff     call sym.imp.mktime
0x0000bbe0      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000bbe4      4889442408     mov qword [rsp + 8], rax
0x0000bbe9      7455           je 0xbc40
0x0000bbeb      4889de         mov rsi, rbx
0x0000bbee      4889ef         mov rdi, rbp
0x0000bbf1      e8cafcffff     call sym.save_abbr
0x0000bbf6      84c0           test al, al
0x0000bbf8      7509           jne 0xbc03
0x0000bbfa      48c7442408ff.  mov qword [rsp + 8], 0xffffffffffffffff
0x0000bc03      4983fc01       cmp r12, 1
0x0000bc07      7410           je 0xbc19
0x0000bc09      4c89e7         mov rdi, r12
0x0000bc0c      e8bffbffff     call sym.revert_tz.part.1
0x0000bc11      84c0           test al, al
0x0000bc13      0f84b7000000   je 0xbcd0
0x0000bc19      488b442408     mov rax, qword [rsp + 8]
0x0000bc1e      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0000bc23      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000bc2c      0f85aa000000   jne 0xbcdc
0x0000bc32      4883c450       add rsp, 0x50
0x0000bc36      5b             pop rbx
0x0000bc37      5d             pop rbp
0x0000bc38      415c           pop r12
0x0000bc3a      c3             ret
0x0000bc3b      0f1f440000     nop dword [rax + rax]
0x0000bc40      488d742410     lea rsi, [rsp + 0x10]
0x0000bc45      488d7c2408     lea rdi, [rsp + 8]
0x0000bc4a      e8815fffff     call sym.imp.localtime_r
0x0000bc4f      4885c0         test rax, rax
0x0000bc52      74af           je 0xbc03
0x0000bc54      8b03           mov eax, dword [rbx]
0x0000bc56      8b5304         mov edx, dword [rbx + 4]
0x0000bc59      33442410       xor eax, dword [rsp + 0x10]
0x0000bc5d      33542414       xor edx, dword [rsp + 0x14]
0x0000bc61      8b4c2430       mov ecx, dword [rsp + 0x30]
0x0000bc65      09d0           or eax, edx
0x0000bc67      8b5308         mov edx, dword [rbx + 8]
0x0000bc6a      33542418       xor edx, dword [rsp + 0x18]
0x0000bc6e      09d0           or eax, edx
0x0000bc70      8b530c         mov edx, dword [rbx + 0xc]
0x0000bc73      3354241c       xor edx, dword [rsp + 0x1c]
0x0000bc77      09d0           or eax, edx
0x0000bc79      8b5310         mov edx, dword [rbx + 0x10]
0x0000bc7c      33542420       xor edx, dword [rsp + 0x20]
0x0000bc80      09d0           or eax, edx
0x0000bc82      8b5314         mov edx, dword [rbx + 0x14]
0x0000bc85      33542424       xor edx, dword [rsp + 0x24]
0x0000bc89      09d0           or eax, edx
0x0000bc8b      8b5320         mov edx, dword [rbx + 0x20]
0x0000bc8e      85d2           test edx, edx
0x0000bc90      400f94c7       sete dil
0x0000bc94      85c9           test ecx, ecx
0x0000bc96      400f94c6       sete sil
0x0000bc9a      4038f7         cmp dil, sil
0x0000bc9d      740c           je 0xbcab
0x0000bc9f      85d2           test edx, edx
0x0000bca1      7808           js 0xbcab
0x0000bca3      85c9           test ecx, ecx
0x0000bca5      0f8958ffffff   jns 0xbc03
0x0000bcab      85c0           test eax, eax
0x0000bcad      0f8438ffffff   je 0xbbeb
0x0000bcb3      e94bffffff     jmp 0xbc03
0x0000bcb8      0f1f84000000.  nop dword [rax + rax]
0x0000bcc0      4889f7         mov rdi, rsi
0x0000bcc3      e8f861ffff     call sym.imp.timegm
0x0000bcc8      e951ffffff     jmp 0xbc1e
0x0000bccd      0f1f00         nop dword [rax]
0x0000bcd0      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000bcd7      e942ffffff     jmp 0xbc1e
0x0000bcdc      e8cf5fffff     call sym.imp.__stack_chk_fail
0x0000bce1      662e0f1f8400.  nop word cs:[rax + rax]
0x0000bceb      0f1f440000     nop dword [rax + rax]
;-- close_stream:
0x0000bcf0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x0000bcf2      55             push rbp
0x0000bcf3      4889fd         mov rbp, rdi
0x0000bcf6      53             push rbx
0x0000bcf7      e8f45effff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000bcfc      8b5d00         mov ebx, dword [rbp]
0x0000bcff      4889ef         mov rdi, rbp
0x0000bd02      4989c4         mov r12, rax
0x0000bd05      e836f6ffff     call sym.rpl_fclose
0x0000bd0a      83e320         and ebx, 0x20                           ; "@"
0x0000bd0d      85db           test ebx, ebx
0x0000bd0f      7517           jne 0xbd28
0x0000bd11      85c0           test eax, eax
0x0000bd13      740a           je 0xbd1f                               ; stdio.h:-186
0x0000bd15      4d85e4         test r12, r12                           ; stdio.h:-178
0x0000bd18      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000bd1d      7439           je 0xbd58
0x0000bd1f      5b             pop rbx
0x0000bd20      5d             pop rbp
0x0000bd21      415c           pop r12
0x0000bd23      c3             ret
0x0000bd24      0f1f4000       nop dword [rax]
0x0000bd28      85c0           test eax, eax
0x0000bd2a      751c           jne 0xbd48
0x0000bd2c      e87f5effff     call sym.imp.__errno_location
0x0000bd31      c70000000000   mov dword [rax], 0
0x0000bd37      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000bd3c      5b             pop rbx
0x0000bd3d      5d             pop rbp
0x0000bd3e      415c           pop r12
0x0000bd40      c3             ret
0x0000bd41      0f1f80000000.  nop dword [rax]
0x0000bd48      5b             pop rbx
0x0000bd49      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000bd4e      5d             pop rbp                                 ; stdio.h:-186
0x0000bd4f      415c           pop r12
0x0000bd51      c3             ret
0x0000bd52      660f1f440000   nop word [rax + rax]
0x0000bd58      e8535effff     call sym.imp.__errno_location
0x0000bd5d      833809         cmp dword [rax], 9
0x0000bd60      5b             pop rbx
0x0000bd61      5d             pop rbp
0x0000bd62      415c           pop r12                                 ; stdio.h:-178
0x0000bd64      0f95c0         setne al
0x0000bd67      0fb6c0         movzx eax, al
0x0000bd6a      f7d8           neg eax
0x0000bd6c      c3             ret
0x0000bd6d      0f1f00         nop dword [rax]
;-- locale_charset:
0x0000bd70      4883ec08       sub rsp, 8
0x0000bd74      bf0e000000     mov edi, 0xe
0x0000bd79      e8b260ffff     call sym.imp.nl_langinfo
0x0000bd7e      4885c0         test rax, rax
0x0000bd81      741d           je 0xbda0
0x0000bd83      803800         cmp byte [rax], 0
0x0000bd86      488d15ce2800.  lea rdx, str.ASCII                      ; 0xe65b ; "ASCII"
0x0000bd8d      480f44c2       cmove rax, rdx
0x0000bd91      4883c408       add rsp, 8
0x0000bd95      c3             ret
0x0000bd96      662e0f1f8400.  nop word cs:[rax + rax]
0x0000bda0      488d05b42800.  lea rax, str.ASCII                      ; 0xe65b ; "ASCII"
0x0000bda7      4883c408       add rsp, 8
0x0000bdab      c3             ret
0x0000bdac      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x0000bdb0      4157           push r15
0x0000bdb2      4156           push r14
0x0000bdb4      4989d7         mov r15, rdx
0x0000bdb7      4155           push r13
0x0000bdb9      4154           push r12
0x0000bdbb      4c8d250e4a20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x2107d0
0x0000bdc2      55             push rbp
0x0000bdc3      488d2d0e4a20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x2107d8
0x0000bdca      53             push rbx
0x0000bdcb      4189fd         mov r13d, edi
0x0000bdce      4989f6         mov r14, rsi
0x0000bdd1      4c29e5         sub rbp, r12
0x0000bdd4      4883ec08       sub rsp, 8
0x0000bdd8      48c1fd03       sar rbp, 3
0x0000bddc      e84f5dffff     call sym._init
0x0000bde1      4885ed         test rbp, rbp
0x0000bde4      7420           je 0xbe06
0x0000bde6      31db           xor ebx, ebx
0x0000bde8      0f1f84000000.  nop dword [rax + rax]
0x0000bdf0      4c89fa         mov rdx, r15
0x0000bdf3      4c89f6         mov rsi, r14
0x0000bdf6      4489ef         mov edi, r13d
0x0000bdf9      41ff14dc       call qword [r12 + rbx*8]
0x0000bdfd      4883c301       add rbx, 1
0x0000be01      4839dd         cmp rbp, rbx
0x0000be04      75ea           jne 0xbdf0
0x0000be06      4883c408       add rsp, 8
0x0000be0a      5b             pop rbx
0x0000be0b      5d             pop rbp
0x0000be0c      415c           pop r12
0x0000be0e      415d           pop r13
0x0000be10      415e           pop r14
0x0000be12      415f           pop r15
0x0000be14      c3             ret
0x0000be15      90             nop
0x0000be16      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x0000be20      f3c3           ret
0x0000be22      662e0f1f8400.  nop word cs:[rax + rax]
0x0000be2c      0f1f4000       nop dword [rax]
;-- atexit:
0x0000be30      488b15d15120.  mov rdx, qword [obj.__dso_handle]       ; [0x211008:8]=0x211008 obj.__dso_handle
0x0000be37      31f6           xor esi, esi
0x0000be39      e9e260ffff     jmp sym.imp.__cxa_atexit
0x0000be3e      0000           add byte [rax], al
