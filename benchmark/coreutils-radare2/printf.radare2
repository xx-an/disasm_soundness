;-- section..plt:
;-- .plt:
0x00001400      ff350aaa2000   push qword [0x0020be10]                 ; [12] -r-x section size 848 named .plt
0x00001406      ff250caa2000   jmp qword [0x0020be18]                  ; [0x20be18:8]=0
0x0000140c      0f1f4000       nop dword [rax]
;-- imp.getenv:
0x00001410      ff250aaa2000   jmp qword [reloc.getenv]                ; [0x20be20:8]=0x1416
0x00001416      6800000000     push 0
0x0000141b      e9e0ffffff     jmp sym..plt
;-- imp.__snprintf_chk:
0x00001420      ff2502aa2000   jmp qword [reloc.__snprintf_chk]        ; [0x20be28:8]=0x1426 ; "&\x14"
0x00001426      6801000000     push 1
0x0000142b      e9d0ffffff     jmp sym..plt
;-- imp.free:
0x00001430      ff25faa92000   jmp qword [reloc.free]                  ; [0x20be30:8]=0x1436 ; "6\x14"
0x00001436      6802000000     push 2
0x0000143b      e9c0ffffff     jmp sym..plt
;-- imp.abort:
0x00001440      ff25f2a92000   jmp qword [reloc.abort]                 ; [0x20be38:8]=0x1446 ; "F\x14"
0x00001446      6803000000     push 3
0x0000144b      e9b0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001450      ff25eaa92000   jmp qword [reloc.__errno_location]      ; [0x20be40:8]=0x1456 ; "V\x14"
0x00001456      6804000000     push 4
0x0000145b      e9a0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001460      ff25e2a92000   jmp qword [reloc.strncmp]               ; [0x20be48:8]=0x1466 ; "f\x14"
0x00001466      6805000000     push 5
0x0000146b      e990ffffff     jmp sym..plt
;-- imp._exit:
0x00001470      ff25daa92000   jmp qword [reloc._exit]                 ; [0x20be50:8]=0x1476 ; "v\x14"
0x00001476      6806000000     push 6
0x0000147b      e980ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001480      ff25d2a92000   jmp qword [reloc.__fpending]            ; [0x20be58:8]=0x1486
0x00001486      6807000000     push 7
0x0000148b      e970ffffff     jmp sym..plt
;-- imp.iconv:
0x00001490      ff25caa92000   jmp qword [reloc.iconv]                 ; [0x20be60:8]=0x1496
0x00001496      6808000000     push 8
0x0000149b      e960ffffff     jmp sym..plt
;-- imp.ferror:
0x000014a0      ff25c2a92000   jmp qword [reloc.ferror]                ; [0x20be68:8]=0x14a6
0x000014a6      6809000000     push 9
0x000014ab      e950ffffff     jmp sym..plt
;-- imp.textdomain:
0x000014b0      ff25baa92000   jmp qword [reloc.textdomain]            ; [0x20be70:8]=0x14b6
0x000014b6      680a000000     push 0xa
0x000014bb      e940ffffff     jmp sym..plt
;-- imp.__strtol_internal:
0x000014c0      ff25b2a92000   jmp qword [reloc.__strtol_internal]     ; [0x20be78:8]=0x14c6
0x000014c6      680b000000     push 0xb
0x000014cb      e930ffffff     jmp sym..plt
;-- imp.fclose:
0x000014d0      ff25aaa92000   jmp qword [reloc.fclose]                ; [0x20be80:8]=0x14d6
0x000014d6      680c000000     push 0xc
0x000014db      e920ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000014e0      ff25a2a92000   jmp qword [reloc.bindtextdomain]        ; [0x20be88:8]=0x14e6
0x000014e6      680d000000     push 0xd
0x000014eb      e910ffffff     jmp sym..plt
;-- imp.dcgettext:
0x000014f0      ff259aa92000   jmp qword [reloc.dcgettext]             ; [0x20be90:8]=0x14f6
0x000014f6      680e000000     push 0xe
0x000014fb      e900ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001500      ff2592a92000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20be98:8]=0x1506
0x00001506      680f000000     push 0xf
0x0000150b      e9f0feffff     jmp sym..plt
;-- imp.strlen:
0x00001510      ff258aa92000   jmp qword [reloc.strlen]                ; [0x20bea0:8]=0x1516
0x00001516      6810000000     push 0x10
0x0000151b      e9e0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001520      ff2582a92000   jmp qword [reloc.__stack_chk_fail]      ; [0x20bea8:8]=0x1526 ; "&\x15"
0x00001526      6811000000     push 0x11
0x0000152b      e9d0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001530      ff257aa92000   jmp qword [reloc.mbrtowc]               ; [0x20beb0:8]=0x1536 ; "6\x15"
0x00001536      6812000000     push 0x12
0x0000153b      e9c0feffff     jmp sym..plt
;-- imp.strchr:
0x00001540      ff2572a92000   jmp qword [reloc.strchr]                ; [0x20beb8:8]=0x1546 ; "F\x15"
0x00001546      6813000000     push 0x13
0x0000154b      e9b0feffff     jmp sym..plt
;-- imp.newlocale:
0x00001550      ff256aa92000   jmp qword [reloc.newlocale]             ; [0x20bec0:8]=0x1556 ; "V\x15"
0x00001556      6814000000     push 0x14
0x0000155b      e9a0feffff     jmp sym..plt
;-- imp.__overflow:
0x00001560      ff2562a92000   jmp qword [reloc.__overflow]            ; [0x20bec8:8]=0x1566 ; "f\x15"
0x00001566      6815000000     push 0x15
0x0000156b      e990feffff     jmp sym..plt
;-- imp.strrchr:
0x00001570      ff255aa92000   jmp qword [reloc.strrchr]               ; [0x20bed0:8]=0x1576 ; "v\x15"
0x00001576      6816000000     push 0x16
0x0000157b      e980feffff     jmp sym..plt
;-- imp.lseek:
0x00001580      ff2552a92000   jmp qword [reloc.lseek]                 ; [0x20bed8:8]=0x1586
0x00001586      6817000000     push 0x17
0x0000158b      e970feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00001590      ff254aa92000   jmp qword [reloc.__strtoul_internal]    ; [0x20bee0:8]=0x1596
0x00001596      6818000000     push 0x18
0x0000159b      e960feffff     jmp sym..plt
;-- imp.memset:
0x000015a0      ff2542a92000   jmp qword [reloc.memset]                ; [0x20bee8:8]=0x15a6
0x000015a6      6819000000     push 0x19
0x000015ab      e950feffff     jmp sym..plt
;-- imp.memcmp:
0x000015b0      ff253aa92000   jmp qword [reloc.memcmp]                ; [0x20bef0:8]=0x15b6
0x000015b6      681a000000     push 0x1a
0x000015bb      e940feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x000015c0      ff2532a92000   jmp qword [reloc.fputs_unlocked]        ; [0x20bef8:8]=0x15c6
0x000015c6      681b000000     push 0x1b
0x000015cb      e930feffff     jmp sym..plt
;-- imp.calloc:
0x000015d0      ff252aa92000   jmp qword [reloc.calloc]                ; [0x20bf00:8]=0x15d6
0x000015d6      681c000000     push 0x1c
0x000015db      e920feffff     jmp sym..plt
;-- imp.strcmp:
0x000015e0      ff2522a92000   jmp qword [reloc.strcmp]                ; [0x20bf08:8]=0x15e6
0x000015e6      681d000000     push 0x1d
0x000015eb      e910feffff     jmp sym..plt
;-- imp.memcpy:
0x000015f0      ff251aa92000   jmp qword [reloc.memcpy]                ; [0x20bf10:8]=0x15f6
0x000015f6      681e000000     push 0x1e
0x000015fb      e900feffff     jmp sym..plt
;-- imp.fileno:
0x00001600      ff2512a92000   jmp qword [reloc.fileno]                ; [0x20bf18:8]=0x1606
0x00001606      681f000000     push 0x1f
0x0000160b      e9f0fdffff     jmp sym..plt
;-- imp.uselocale:
0x00001610      ff250aa92000   jmp qword [reloc.uselocale]             ; [0x20bf20:8]=0x1616
0x00001616      6820000000     push 0x20                               ; "@"
0x0000161b      e9e0fdffff     jmp sym..plt
;-- imp.malloc:
0x00001620      ff2502a92000   jmp qword [reloc.malloc]                ; [0x20bf28:8]=0x1626 ; "&\x16"
0x00001626      6821000000     push 0x21                               ; '!'
0x0000162b      e9d0fdffff     jmp sym..plt
;-- imp.fflush:
0x00001630      ff25faa82000   jmp qword [reloc.fflush]                ; [0x20bf30:8]=0x1636 ; "6\x16"
0x00001636      6822000000     push 0x22                               ; '"'
0x0000163b      e9c0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001640      ff25f2a82000   jmp qword [reloc.nl_langinfo]           ; [0x20bf38:8]=0x1646 ; "F\x16"
0x00001646      6823000000     push 0x23                               ; '#'
0x0000164b      e9b0fdffff     jmp sym..plt
;-- imp.__freading:
0x00001650      ff25eaa82000   jmp qword [reloc.__freading]            ; [0x20bf40:8]=0x1656 ; "V\x16"
0x00001656      6824000000     push 0x24                               ; '$'
0x0000165b      e9a0fdffff     jmp sym..plt
;-- imp.realloc:
0x00001660      ff25e2a82000   jmp qword [reloc.realloc]               ; [0x20bf48:8]=0x1666 ; "f\x16"
0x00001666      6825000000     push 0x25                               ; '%'
0x0000166b      e990fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001670      ff25daa82000   jmp qword [reloc.setlocale]             ; [0x20bf50:8]=0x1676 ; "v\x16"
0x00001676      6826000000     push 0x26                               ; '&'
0x0000167b      e980fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001680      ff25d2a82000   jmp qword [reloc.__printf_chk]          ; [0x20bf58:8]=0x1686
0x00001686      6827000000     push 0x27                               ; '''
0x0000168b      e970fdffff     jmp sym..plt
;-- imp.mempcpy:
0x00001690      ff25caa82000   jmp qword [reloc.mempcpy]               ; [0x20bf60:8]=0x1696
0x00001696      6828000000     push 0x28                               ; '('
0x0000169b      e960fdffff     jmp sym..plt
;-- imp.strtold:
0x000016a0      ff25c2a82000   jmp qword [reloc.strtold]               ; [0x20bf68:8]=0x16a6
0x000016a6      6829000000     push 0x29                               ; ')'
0x000016ab      e950fdffff     jmp sym..plt
;-- imp.error:
0x000016b0      ff25baa82000   jmp qword [reloc.error]                 ; [0x20bf70:8]=0x16b6
0x000016b6      682a000000     push 0x2a                               ; '*'
0x000016bb      e940fdffff     jmp sym..plt
;-- imp.fseeko:
0x000016c0      ff25b2a82000   jmp qword [reloc.fseeko]                ; [0x20bf78:8]=0x16c6
0x000016c6      682b000000     push 0x2b                               ; '+'
0x000016cb      e930fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x000016d0      ff25aaa82000   jmp qword [reloc.__cxa_atexit]          ; [0x20bf80:8]=0x16d6
0x000016d6      682c000000     push 0x2c                               ; ','
0x000016db      e920fdffff     jmp sym..plt
;-- imp.exit:
0x000016e0      ff25a2a82000   jmp qword [reloc.exit]                  ; [0x20bf88:8]=0x16e6
0x000016e6      682d000000     push 0x2d                               ; '-'
0x000016eb      e910fdffff     jmp sym..plt
;-- imp.fwrite:
0x000016f0      ff259aa82000   jmp qword [reloc.fwrite]                ; [0x20bf90:8]=0x16f6
0x000016f6      682e000000     push 0x2e                               ; '.'
0x000016fb      e900fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001700      ff2592a82000   jmp qword [reloc.__fprintf_chk]         ; [0x20bf98:8]=0x1706
0x00001706      682f000000     push 0x2f                               ; '/'
0x0000170b      e9f0fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001710      ff258aa82000   jmp qword [reloc.mbsinit]               ; [0x20bfa0:8]=0x1716
0x00001716      6830000000     push 0x30                               ; '0'
0x0000171b      e9e0fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001720      ff2582a82000   jmp qword [reloc.iswprint]              ; [0x20bfa8:8]=0x1726 ; "&\x17"
0x00001726      6831000000     push 0x31                               ; '1'
0x0000172b      e9d0fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001730      ff257aa82000   jmp qword [reloc.__ctype_b_loc]         ; [0x20bfb0:8]=0x1736 ; "6\x17"
0x00001736      6832000000     push 0x32                               ; '2'
0x0000173b      e9c0fcffff     jmp sym..plt
;-- imp.iconv_open:
0x00001740      ff2572a82000   jmp qword [reloc.iconv_open]            ; [0x20bfb8:8]=0x1746 ; "F\x17"
0x00001746      6833000000     push 0x33                               ; '3'
0x0000174b      e9b0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001750      .qword 0x90660020a88a25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001758      0000           add byte [rax], al
0x0000175a      0000           add byte [rax], al
0x0000175c      0000           add byte [rax], al
0x0000175e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001760      4157           push r15                                ; [14] -r-x section size 27710 named .text
0x00001762      4156           push r14
0x00001764      4155           push r13
0x00001766      4154           push r12
0x00001768      55             push rbp
0x00001769      53             push rbx
0x0000176a      89fd           mov ebp, edi
0x0000176c      4889f3         mov rbx, rsi
0x0000176f      4881ec880100.  sub rsp, 0x188
0x00001776      488b3e         mov rdi, qword [rsi]
0x00001779      64488b042528.  mov rax, qword fs:[0x28]
0x00001782      488984247801.  mov qword [rsp + 0x178], rax
0x0000178a      31c0           xor eax, eax
0x0000178c      e89f1a0000     call sym.set_program_name
0x00001791      488d357a7d00.  lea rsi, [0x00009512]
0x00001798      bf06000000     mov edi, 6
0x0000179d      e8cefeffff     call sym.imp.setlocale
0x000017a2      488d35b47400.  lea rsi, [0x00008c5d]                   ; "/usr/local/share/locale"
0x000017a9      488d3d7f7400.  lea rdi, [0x00008c2f]                   ; "coreutils"
0x000017b0      e82bfdffff     call sym.imp.bindtextdomain
0x000017b5      488d3d737400.  lea rdi, [0x00008c2f]                   ; "coreutils"
0x000017bc      e8effcffff     call sym.imp.textdomain
0x000017c1      488d3db81900.  lea rdi, sym.close_stdout               ; 0x3180 ; "USH\x83\xec\bH\x8b=\xfb\x8e "
0x000017c8      e8c36b0000     call sym.atexit
0x000017cd      488d3da17400.  lea rdi, [0x00008c75]                   ; "POSIXLY_CORRECT"
0x000017d4      c705d2a82000.  mov dword [obj.exit_status], 0          ; [0x20c0b0:4]=0
0x000017de      e82dfcffff     call sym.imp.getenv
0x000017e3      4885c0         test rax, rax
0x000017e6      0f9505bfa820.  setne byte [obj.posixly_correct]
0x000017ed      83fd02         cmp ebp, 2
0x000017f0      0f845f060000   je 0x1e55
0x000017f6      83fd01         cmp ebp, 1
0x000017f9      0f8e9e060000   jle 0x1e9d
0x000017ff      488b7b08       mov rdi, qword [rbx + 8]
0x00001803      488d359c7400.  lea rsi, [0x00008ca6]                   ; "--"
0x0000180a      e8d1fdffff     call sym.imp.strcmp
0x0000180f      85c0           test eax, eax
0x00001811      7507           jne 0x181a
0x00001813      83ed01         sub ebp, 1
0x00001816      4883c308       add rbx, 8
0x0000181a      488b4308       mov rax, qword [rbx + 8]
0x0000181e      49bd01000050.  movabs r13, 0x410150000001
0x00001828      4889442458     mov qword [rsp + 0x58], rax
0x0000182d      8d45fe         lea eax, [rbp - 2]
0x00001830      89442448       mov dword [rsp + 0x48], eax
0x00001834      488d4310       lea rax, [rbx + 0x10]
0x00001838      4889442430     mov qword [rsp + 0x30], rax
0x0000183d      0f1f00         nop dword [rax]
0x00001840      4c8b742458     mov r14, qword [rsp + 0x58]
0x00001845      410fb606       movzx eax, byte [r14]
0x00001849      84c0           test al, al
0x0000184b      0f8477060000   je 0x1ec8
0x00001851      488b742430     mov rsi, qword [rsp + 0x30]
0x00001856      448b7c2448     mov r15d, dword [rsp + 0x48]
0x0000185b      c74424500000.  mov dword [rsp + 0x50], 0
0x00001863      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0000186b      48893424       mov qword [rsp], rsi
0x0000186f      eb23           jmp 0x1894
0x00001871      0f1f80000000.  nop dword [rax]
0x00001878      4c89f7         mov rdi, r14
0x0000187b      31f6           xor esi, esi
0x0000187d      e89e0d0000     call sym.print_esc
0x00001882      4863d8         movsxd rbx, eax
0x00001885      4c01f3         add rbx, r14
0x00001888      4c8d7301       lea r14, [rbx + 1]
0x0000188c      0fb64301       movzx eax, byte [rbx + 1]
0x00001890      84c0           test al, al
0x00001892      743d           je 0x18d1
0x00001894      3c25           cmp al, 0x25
0x00001896      0f84d4000000   je 0x1970
0x0000189c      3c5c           cmp al, 0x5c
0x0000189e      74d8           je 0x1878
0x000018a0      488b3de1a720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x000018a7      498d6e01       lea rbp, [r14 + 1]
0x000018ab      488b5728       mov rdx, qword [rdi + 0x28]
0x000018af      483b5730       cmp rdx, qword [rdi + 0x30]
0x000018b3      0f8367050000   jae 0x1e20
0x000018b9      488d4a01       lea rcx, [rdx + 1]
0x000018bd      4c89f3         mov rbx, r14
0x000018c0      4989ee         mov r14, rbp
0x000018c3      48894f28       mov qword [rdi + 0x28], rcx
0x000018c7      8802           mov byte [rdx], al
0x000018c9      0fb64301       movzx eax, byte [rbx + 1]
0x000018cd      84c0           test al, al
0x000018cf      75c3           jne 0x1894
0x000018d1      8b442448       mov eax, dword [rsp + 0x48]
0x000018d5      488b742430     mov rsi, qword [rsp + 0x30]
0x000018da      44897c2448     mov dword [rsp + 0x48], r15d
0x000018df      4429f8         sub eax, r15d
0x000018e2      4863d0         movsxd rdx, eax
0x000018e5      85c0           test eax, eax
0x000018e7      488d34d6       lea rsi, [rsi + rdx*8]
0x000018eb      4889742430     mov qword [rsp + 0x30], rsi
0x000018f0      7e09           jle 0x18fb
0x000018f2      4585ff         test r15d, r15d
0x000018f5      0f8f45ffffff   jg 0x1840
0x000018fb      4589fe         mov r14d, r15d
0x000018fe      4585f6         test r14d, r14d
0x00001901      7434           je 0x1937
0x00001903      488b442430     mov rax, qword [rsp + 0x30]
0x00001908      488b38         mov rdi, qword [rax]
0x0000190b      e830360000     call sym.quote
0x00001910      488d35397200.  lea rsi, str.warning:_ignoring_excess_arguments__starting_with__s ; 0x8b50 ; "warning: ignoring excess arguments, starting with %s"
0x00001917      4889c3         mov rbx, rax
0x0000191a      ba05000000     mov edx, 5
0x0000191f      31ff           xor edi, edi
0x00001921      e8cafbffff     call sym.imp.dcgettext
0x00001926      4889d9         mov rcx, rbx
0x00001929      4889c2         mov rdx, rax
0x0000192c      31f6           xor esi, esi
0x0000192e      31ff           xor edi, edi
0x00001930      31c0           xor eax, eax
0x00001932      e879fdffff     call sym.imp.error
0x00001937      448b2572a720.  mov r12d, dword [obj.exit_status]       ; [0x20c0b0:4]=0
0x0000193e      488bb4247801.  mov rsi, qword [rsp + 0x178]
0x00001946      644833342528.  xor rsi, qword fs:[0x28]
0x0000194f      4489e0         mov eax, r12d
0x00001952      0f859d0b0000   jne 0x24f5
0x00001958      4881c4880100.  add rsp, 0x188
0x0000195f      5b             pop rbx
0x00001960      5d             pop rbp
0x00001961      415c           pop r12
0x00001963      415d           pop r13
0x00001965      415e           pop r14
0x00001967      415f           pop r15
0x00001969      c3             ret
0x0000196a      660f1f440000   nop word [rax + rax]
0x00001970      450fb66601     movzx r12d, byte [r14 + 1]
0x00001975      498d5e01       lea rbx, [r14 + 1]
0x00001979      498d6e02       lea rbp, [r14 + 2]
0x0000197d      4180fc25       cmp r12b, 0x25
0x00001981      7455           je 0x19d8
0x00001983      4180fc62       cmp r12b, 0x62
0x00001987      7477           je 0x1a00
0x00001989      4180fc71       cmp r12b, 0x71
0x0000198d      0f85f5000000   jne 0x1a88
0x00001993      4585ff         test r15d, r15d
0x00001996      4989ee         mov r14, rbp
0x00001999      0f84edfeffff   je 0x188c
0x0000199f      4c8b2424       mov r12, qword [rsp]
0x000019a3      488b2ddea620.  mov rbp, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x000019aa      bf03000000     mov edi, 3
0x000019af      4183ef01       sub r15d, 1
0x000019b3      498b3424       mov rsi, qword [r12]
0x000019b7      4983c408       add r12, 8
0x000019bb      e8b0320000     call sym.quotearg_style
0x000019c0      4889ee         mov rsi, rbp
0x000019c3      4889c7         mov rdi, rax
0x000019c6      e8f5fbffff     call sym.imp.fputs_unlocked
0x000019cb      4c892424       mov qword [rsp], r12
0x000019cf      e9b8feffff     jmp 0x188c
0x000019d4      0f1f4000       nop dword [rax]
0x000019d8      488b3da9a620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x000019df      488b4728       mov rax, qword [rdi + 0x28]
0x000019e3      483b4730       cmp rax, qword [rdi + 0x30]
0x000019e7      0f8356040000   jae 0x1e43
0x000019ed      488d5001       lea rdx, [rax + 1]
0x000019f1      4989ee         mov r14, rbp
0x000019f4      48895728       mov qword [rdi + 0x28], rdx
0x000019f8      c60025         mov byte [rax], 0x25                    ; '%'
                                                                       ; [0x25:1]=0
0x000019fb      e98cfeffff     jmp 0x188c
0x00001a00      4585ff         test r15d, r15d
0x00001a03      4989ee         mov r14, rbp
0x00001a06      0f8480feffff   je 0x188c
0x00001a0c      488b0424       mov rax, qword [rsp]
0x00001a10      4c8b20         mov r12, qword [rax]
0x00001a13      410fb60424     movzx eax, byte [r12]
0x00001a18      84c0           test al, al
0x00001a1a      7532           jne 0x1a4e
0x00001a1c      eb52           jmp 0x1a70
0x00001a1e      6690           nop
0x00001a20      488b3d61a620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00001a27      488b5728       mov rdx, qword [rdi + 0x28]
0x00001a2b      483b5730       cmp rdx, qword [rdi + 0x30]
0x00001a2f      0f83fe030000   jae 0x1e33
0x00001a35      488d4a01       lea rcx, [rdx + 1]
0x00001a39      48894f28       mov qword [rdi + 0x28], rcx
0x00001a3d      8802           mov byte [rdx], al
0x00001a3f      4c89e0         mov rax, r12
0x00001a42      4c8d6001       lea r12, [rax + 1]
0x00001a46      0fb64001       movzx eax, byte [rax + 1]
0x00001a4a      84c0           test al, al
0x00001a4c      7422           je 0x1a70
0x00001a4e      3c5c           cmp al, 0x5c
0x00001a50      75ce           jne 0x1a20
0x00001a52      4c89e7         mov rdi, r12
0x00001a55      be01000000     mov esi, 1
0x00001a5a      e8c10b0000     call sym.print_esc
0x00001a5f      4898           cdqe
0x00001a61      4c01e0         add rax, r12
0x00001a64      4c8d6001       lea r12, [rax + 1]
0x00001a68      0fb64001       movzx eax, byte [rax + 1]
0x00001a6c      84c0           test al, al
0x00001a6e      75de           jne 0x1a4e
0x00001a70      4883042408     add qword [rsp], 8
0x00001a75      4183ef01       sub r15d, 1
0x00001a79      4989ee         mov r14, rbp
0x00001a7c      e90bfeffff     jmp 0x188c
0x00001a81      0f1f80000000.  nop dword [rax]
0x00001a88      488d542470     lea rdx, [rsp + 0x70]
0x00001a8d      41bb01010000   mov r11d, 0x101
0x00001a93      b920000000     mov ecx, 0x20                           ; "@"
0x00001a98      31c0           xor eax, eax
0x00001a9a      4531c0         xor r8d, r8d
0x00001a9d      c644240800     mov byte [rsp + 8], 0
0x00001aa2      4889d7         mov rdi, rdx
0x00001aa5      c644241000     mov byte [rsp + 0x10], 0
0x00001aaa      bd01000000     mov ebp, 1
0x00001aaf      f348ab         rep stosq qword [rdi], rax
0x00001ab2      4531c9         xor r9d, r9d
0x00001ab5      6644899c24b5.  mov word [rsp + 0xb5], r11w
0x00001abe      c68424c80000.  mov byte [rsp + 0xc8], 1
0x00001ac6      c68424e80000.  mov byte [rsp + 0xe8], 1
0x00001ace      c68424e50000.  mov byte [rsp + 0xe5], 1
0x00001ad6      31d2           xor edx, edx
0x00001ad8      c68424e30000.  mov byte [rsp + 0xe3], 1
0x00001ae0      c68424df0000.  mov byte [rsp + 0xdf], 1
0x00001ae8      bf01000000     mov edi, 1
0x00001aed      c68424d90000.  mov byte [rsp + 0xd9], 1
0x00001af5      c68424b70000.  mov byte [rsp + 0xb7], 1
0x00001afd      4531d2         xor r10d, r10d
0x00001b00      c78424d30000.  mov dword [rsp + 0xd3], 0x1010101       ; [0x1010101:4]=-1
0x00001b0b      c68424d70000.  mov byte [rsp + 0xd7], 1
0x00001b13      41bb01000000   mov r11d, 1
0x00001b19      c68424b10000.  mov byte [rsp + 0xb1], 1
0x00001b21      c68424d10000.  mov byte [rsp + 0xd1], 1
0x00001b29      44897c2420     mov dword [rsp + 0x20], r15d
0x00001b2e      418d4424e0     lea eax, [r12 - 0x20]
0x00001b33      4889d9         mov rcx, rbx
0x00001b36      4889de         mov rsi, rbx
0x00001b39      4c29f1         sub rcx, r14
0x00001b3c      3c29           cmp al, 0x29
0x00001b3e      0f878c000000   ja 0x1bd0
0x00001b44      4c8d3df57100.  lea r15, [0x00008d40]
0x00001b4b      0fb6c0         movzx eax, al
0x00001b4e      49630487       movsxd rax, dword [r15 + rax*4]
0x00001b52      4c01f8         add rax, r15
0x00001b55      ffe0           jmp rax
0x00001b57      660f1f840000.  nop word [rax + rax]
0x00001b60      41b901000000   mov r9d, 1
0x00001b66      ba01000000     mov edx, 1
0x00001b6b      31ff           xor edi, edi
0x00001b6d      41ba01000000   mov r10d, 1
0x00001b73      4531db         xor r11d, r11d
0x00001b76      4883c301       add rbx, 1
0x00001b7a      440fb623       movzx r12d, byte [rbx]
0x00001b7e      ebae           jmp 0x1b2e
0x00001b80      4883c301       add rbx, 1
0x00001b84      41b801000000   mov r8d, 1
0x00001b8a      c644240801     mov byte [rsp + 8], 1
0x00001b8f      c644241001     mov byte [rsp + 0x10], 1
0x00001b94      31ed           xor ebp, ebp
0x00001b96      41b901000000   mov r9d, 1
0x00001b9c      ba01000000     mov edx, 1
0x00001ba1      31ff           xor edi, edi
0x00001ba3      440fb623       movzx r12d, byte [rbx]
0x00001ba7      eb85           jmp 0x1b2e
0x00001ba9      0f1f80000000.  nop dword [rax]
0x00001bb0      4883c301       add rbx, 1
0x00001bb4      41b901000000   mov r9d, 1
0x00001bba      ba01000000     mov edx, 1
0x00001bbf      31ff           xor edi, edi
0x00001bc1      440fb623       movzx r12d, byte [rbx]
0x00001bc5      e964ffffff     jmp 0x1b2e
0x00001bca      660f1f440000   nop word [rax + rax]
0x00001bd0      4584d2         test r10b, r10b
0x00001bd3      448b7c2420     mov r15d, dword [rsp + 0x20]
0x00001bd8      0f8526030000   jne 0x1f04
0x00001bde      84d2           test dl, dl
0x00001be0      0f854f030000   jne 0x1f35
0x00001be6      4584c9         test r9b, r9b
0x00001be9      0f858d080000   jne 0x247c
0x00001bef      4584d2         test r10b, r10b
0x00001bf2      7410           je 0x1c04
0x00001bf4      44889c24b100.  mov byte [rsp + 0xb1], r11b
0x00001bfc      44889c24d100.  mov byte [rsp + 0xd1], r11b
0x00001c04      807c241000     cmp byte [rsp + 0x10], 0
0x00001c09      7408           je 0x1c13
0x00001c0b      4088ac24e500.  mov byte [rsp + 0xe5], bpl
0x00001c13      807c240800     cmp byte [rsp + 8], 0
0x00001c18      7408           je 0x1c22
0x00001c1a      4088ac24d900.  mov byte [rsp + 0xd9], bpl
0x00001c22      4584c0         test r8b, r8b
0x00001c25      7408           je 0x1c2f
0x00001c27      4088ac24d400.  mov byte [rsp + 0xd4], bpl
0x00001c2f      4180fc2a       cmp r12b, 0x2a
0x00001c33      488d6b01       lea rbp, [rbx + 1]
0x00001c37      0f84f3040000   je 0x2130
0x00001c3d      410fbec4       movsx eax, r12b
0x00001c41      83e830         sub eax, 0x30
0x00001c44      83f809         cmp eax, 9
0x00001c47      760e           jbe 0x1c57
0x00001c49      e919070000     jmp 0x2367
0x00001c4e      6690           nop
0x00001c50      4889eb         mov rbx, rbp
0x00001c53      4883c501       add rbp, 1
0x00001c57      0fbe4500       movsx eax, byte [rbp]
0x00001c5b      488d540d00     lea rdx, [rbp + rcx]
0x00001c60      4829f2         sub rdx, rsi
0x00001c63      4189c4         mov r12d, eax
0x00001c66      83e830         sub eax, 0x30
0x00001c69      83f809         cmp eax, 9
0x00001c6c      76e2           jbe 0x1c50
0x00001c6e      488d4302       lea rax, [rbx + 2]
0x00001c72      c644245600     mov byte [rsp + 0x56], 0
0x00001c77      4889eb         mov rbx, rbp
0x00001c7a      4889442408     mov qword [rsp + 8], rax
0x00001c7f      4180fc2e       cmp r12b, 0x2e
0x00001c83      0f8597040000   jne 0x2120
0x00001c89      440fb66301     movzx r12d, byte [rbx + 1]
0x00001c8e      c68424d30000.  mov byte [rsp + 0xd3], 0
0x00001c96      4180fc2a       cmp r12b, 0x2a
0x00001c9a      0f84cc040000   je 0x216c
0x00001ca0      410fbec4       movsx eax, r12b
0x00001ca4      4883c201       add rdx, 1
0x00001ca8      4c8b4c2408     mov r9, qword [rsp + 8]
0x00001cad      83e830         sub eax, 0x30
0x00001cb0      83f809         cmp eax, 9
0x00001cb3      760e           jbe 0x1cc3
0x00001cb5      e975070000     jmp 0x242f
0x00001cba      660f1f440000   nop word [rax + rax]
0x00001cc0      4989d9         mov r9, rbx
0x00001cc3      410fbe4101     movsx eax, byte [r9 + 1]
0x00001cc8      4883c201       add rdx, 1
0x00001ccc      498d5901       lea rbx, [r9 + 1]
0x00001cd0      4189c4         mov r12d, eax
0x00001cd3      83e830         sub eax, 0x30
0x00001cd6      83f809         cmp eax, 9
0x00001cd9      76e5           jbe 0x1cc0
0x00001cdb      4c89c8         mov rax, r9
0x00001cde      c644245700     mov byte [rsp + 0x57], 0
0x00001ce3      4883c002       add rax, 2
0x00001ce7      4889442408     mov qword [rsp + 8], rax
0x00001cec      418d4424b4     lea eax, [r12 - 0x4c]
0x00001cf1      3c2e           cmp al, 0x2e
0x00001cf3      772d           ja 0x1d22
0x00001cf5      490fa3c5       bt r13, rax
0x00001cf9      7327           jae 0x1d22
0x00001cfb      0f1f440000     nop dword [rax + rax]
0x00001d00      440fb66301     movzx r12d, byte [rbx + 1]
0x00001d05      488d4b01       lea rcx, [rbx + 1]
0x00001d09      418d4424b4     lea eax, [r12 - 0x4c]
0x00001d0e      3c2e           cmp al, 0x2e
0x00001d10      0f86f2030000   jbe 0x2108
0x00001d16      488d4302       lea rax, [rbx + 2]
0x00001d1a      4889cb         mov rbx, rcx
0x00001d1d      4889442408     mov qword [rsp + 8], rax
0x00001d22      410fb6c4       movzx eax, r12b
0x00001d26      807c047000     cmp byte [rsp + rax + 0x70], 0
0x00001d2b      0f8419070000   je 0x244a
0x00001d31      488d05da7700.  lea rax, [0x00009512]
0x00001d38      4585ff         test r15d, r15d
0x00001d3b      4889442410     mov qword [rsp + 0x10], rax
0x00001d40      7418           je 0x1d5a
0x00001d42      488b0424       mov rax, qword [rsp]
0x00001d46      4183ef01       sub r15d, 1
0x00001d4a      488b30         mov rsi, qword [rax]
0x00001d4d      4883c008       add rax, 8
0x00001d51      48890424       mov qword [rsp], rax
0x00001d55      4889742410     mov qword [rsp + 0x10], rsi
0x00001d5a      418d4c24bf     lea ecx, [r12 - 0x41]
0x00001d5f      80f937         cmp cl, 0x37
0x00001d62      0f87f8030000   ja 0x2160
0x00001d68      488d35e96e00.  lea rsi, [0x00008c58]                   ; "ld"
0x00001d6f      b801000000     mov eax, 1
0x00001d74      48d3e0         shl rax, cl
0x00001d77      b901000000     mov ecx, 1
0x00001d7c      4889742420     mov qword [rsp + 0x20], rsi
0x00001d81      48be00008000.  movabs rsi, 0x90410800800000
0x00001d8b      4885f0         test rax, rsi
0x00001d8e      752b           jne 0x1dbb
0x00001d90      48b971000000.  movabs rcx, 0x7100000071                ; 'q' ; 485331304561
0x00001d9a      4821c8         and rax, rcx
0x00001d9d      4883f801       cmp rax, 1
0x00001da1      4819c9         sbb rcx, rcx
0x00001da4      4883c101       add rcx, 1
0x00001da8      4885c0         test rax, rax
0x00001dab      488d05a96e00.  lea rax, [0x00008c5b]                   ; "L"
0x00001db2      490f44c6       cmove rax, r14
0x00001db6      4889442420     mov qword [rsp + 0x20], rax
0x00001dbb      488d7c0a02     lea rdi, [rdx + rcx + 2]
0x00001dc0      48894c2440     mov qword [rsp + 0x40], rcx
0x00001dc5      4889542438     mov qword [rsp + 0x38], rdx
0x00001dca      e8a13b0000     call sym.xmalloc
0x00001dcf      488b542438     mov rdx, qword [rsp + 0x38]
0x00001dd4      4c89f6         mov rsi, r14
0x00001dd7      4889c7         mov rdi, rax
0x00001dda      4889c5         mov rbp, rax
0x00001ddd      e8aef8ffff     call sym.imp.mempcpy
0x00001de2      488b4c2440     mov rcx, qword [rsp + 0x40]
0x00001de7      488b742420     mov rsi, qword [rsp + 0x20]
0x00001dec      4889c7         mov rdi, rax
0x00001def      4889ca         mov rdx, rcx
0x00001df2      e899f8ffff     call sym.imp.mempcpy
0x00001df7      448820         mov byte [rax], r12b
0x00001dfa      4183ec41       sub r12d, 0x41
0x00001dfe      c6400100       mov byte [rax + 1], 0
0x00001e02      4180fc37       cmp r12b, 0x37
0x00001e06      0f876c010000   ja 0x1f78
0x00001e0c      488d15d56f00.  lea rdx, [0x00008de8]
0x00001e13      450fb6e4       movzx r12d, r12b
0x00001e17      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00001e1b      4801d0         add rax, rdx
0x00001e1e      ffe0           jmp rax
0x00001e20      0fb6f0         movzx esi, al
0x00001e23      4c89f3         mov rbx, r14
0x00001e26      4989ee         mov r14, rbp
0x00001e29      e832f7ffff     call sym.imp.__overflow
0x00001e2e      e959faffff     jmp 0x188c
0x00001e33      0fb6f0         movzx esi, al
0x00001e36      e825f7ffff     call sym.imp.__overflow
0x00001e3b      4c89e0         mov rax, r12
0x00001e3e      e9fffbffff     jmp 0x1a42
0x00001e43      be25000000     mov esi, 0x25                           ; '%'
0x00001e48      4989ee         mov r14, rbp
0x00001e4b      e810f7ffff     call sym.imp.__overflow
0x00001e50      e937faffff     jmp 0x188c
0x00001e55      4c8b6b08       mov r13, qword [rbx + 8]
0x00001e59      488d35256e00.  lea rsi, [0x00008c85]                   ; "--help"
0x00001e60      4c89ef         mov rdi, r13
0x00001e63      e878f7ffff     call sym.imp.strcmp
0x00001e68      85c0           test eax, eax
0x00001e6a      0f848a060000   je 0x24fa
0x00001e70      488d35156e00.  lea rsi, [0x00008c8c]                   ; "--version"
0x00001e77      4c89ef         mov rdi, r13
0x00001e7a      e861f7ffff     call sym.imp.strcmp
0x00001e7f      85c0           test eax, eax
0x00001e81      4189c4         mov r12d, eax
0x00001e84      744c           je 0x1ed2
0x00001e86      488d35196e00.  lea rsi, [0x00008ca6]                   ; "--"
0x00001e8d      4c89ef         mov rdi, r13
0x00001e90      e84bf7ffff     call sym.imp.strcmp
0x00001e95      85c0           test eax, eax
0x00001e97      0f857df9ffff   jne 0x181a
0x00001e9d      488d35056e00.  lea rsi, [0x00008ca9]                   ; "missing operand"
0x00001ea4      ba05000000     mov edx, 5
0x00001ea9      31ff           xor edi, edi
0x00001eab      e840f6ffff     call sym.imp.dcgettext
0x00001eb0      31ff           xor edi, edi
0x00001eb2      4889c2         mov rdx, rax
0x00001eb5      31f6           xor esi, esi
0x00001eb7      31c0           xor eax, eax
0x00001eb9      e8f2f7ffff     call sym.imp.error
0x00001ebe      bf01000000     mov edi, 1
0x00001ec3      e8d80d0000     call sym.usage
0x00001ec8      448b742448     mov r14d, dword [rsp + 0x48]
0x00001ecd      e92cfaffff     jmp 0x18fe
0x00001ed2      488b0d37a120.  mov rcx, qword [obj.Version]            ; [0x20c010:8]=0x8ec8 str.8.31
0x00001ed9      488b3da8a120.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00001ee0      4c8d05af6d00.  lea r8, [0x00008c96]                    ; "David MacKenzie"
0x00001ee7      488d153d6d00.  lea rdx, str.GNU_coreutils              ; 0x8c2b ; "GNU coreutils"
0x00001eee      488d35b96c00.  lea rsi, str.printf                     ; 0x8bae ; "printf"
0x00001ef5      4531c9         xor r9d, r9d
0x00001ef8      31c0           xor eax, eax
0x00001efa      e811390000     call sym.version_etc
0x00001eff      e93afaffff     jmp 0x193e
0x00001f04      84d2           test dl, dl
0x00001f06      44889c24c800.  mov byte [rsp + 0xc8], r11b
0x00001f0e      44889c24e800.  mov byte [rsp + 0xe8], r11b
0x00001f16      751d           jne 0x1f35
0x00001f18      44889c24df00.  mov byte [rsp + 0xdf], r11b
0x00001f20      44889c24b500.  mov byte [rsp + 0xb5], r11b
0x00001f28      44889c24d500.  mov byte [rsp + 0xd5], r11b
0x00001f30      e9b1fcffff     jmp 0x1be6
0x00001f35      4584d2         test r10b, r10b
0x00001f38      4088bc24e300.  mov byte [rsp + 0xe3], dil
0x00001f40      0f84a0fcffff   je 0x1be6
0x00001f46      ebd0           jmp 0x1f18
0x00001f48      0f1f84000000.  nop dword [rax + rax]
0x00001f50      807c245600     cmp byte [rsp + 0x56], 0
0x00001f55      0f85c4030000   jne 0x231f
0x00001f5b      807c245700     cmp byte [rsp + 0x57], 0
0x00001f60      0f8520040000   jne 0x2386
0x00001f66      488b742410     mov rsi, qword [rsp + 0x10]
0x00001f6b      4889ef         mov rdi, rbp
0x00001f6e      31c0           xor eax, eax
0x00001f70      e8eb3c0000     call sym.xprintf
0x00001f75      0f1f00         nop dword [rax]
0x00001f78      4889ef         mov rdi, rbp
0x00001f7b      e8b0f4ffff     call sym.imp.free
0x00001f80      4c8b742408     mov r14, qword [rsp + 8]
0x00001f85      e902f9ffff     jmp 0x188c
0x00001f8a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00001f8f      e85c0c0000     call sym.vstrtoimax
0x00001f94      807c245600     cmp byte [rsp + 0x56], 0
0x00001f99      0f85a7030000   jne 0x2346
0x00001f9f      807c245700     cmp byte [rsp + 0x57], 0
0x00001fa4      0f85f4030000   jne 0x239e
0x00001faa      4889c6         mov rsi, rax
0x00001fad      4889ef         mov rdi, rbp
0x00001fb0      31c0           xor eax, eax
0x00001fb2      e8a93c0000     call sym.xprintf
0x00001fb7      ebbf           jmp 0x1f78
0x00001fb9      807c245600     cmp byte [rsp + 0x56], 0
0x00001fbe      488b442410     mov rax, qword [rsp + 0x10]
0x00001fc3      0fbe10         movsx edx, byte [rax]
0x00001fc6      0f8540030000   jne 0x230c
0x00001fcc      89d6           mov esi, edx
0x00001fce      4889ef         mov rdi, rbp
0x00001fd1      31c0           xor eax, eax
0x00001fd3      e8883c0000     call sym.xprintf
0x00001fd8      eb9e           jmp 0x1f78
0x00001fda      488b442410     mov rax, qword [rsp + 0x10]
0x00001fdf      0fb600         movzx eax, byte [rax]
0x00001fe2      3c22           cmp al, 0x22
0x00001fe4      7408           je 0x1fee
0x00001fe6      3c27           cmp al, 0x27
0x00001fe8      0f853a020000   jne 0x2228
0x00001fee      488b442410     mov rax, qword [rsp + 0x10]
0x00001ff3      440fb66001     movzx r12d, byte [rax + 1]
0x00001ff8      4584e4         test r12b, r12b
0x00001ffb      0f8427020000   je 0x2228
0x00002001      80780200       cmp byte [rax + 2], 0
0x00002005      7433           je 0x203a
0x00002007      803d9ea02000.  cmp byte [obj.posixly_correct], 0       ; [0x20c0ac:1]=0
0x0000200e      752a           jne 0x203a
0x00002010      488d35316400.  lea rsi, str.warning:__s:_character_s__following_character_constant_have_been_ignored ; 0x8448 ; "warning: %s: character(s) following character constant have been ignored"
0x00002017      ba05000000     mov edx, 5
0x0000201c      31ff           xor edi, edi
0x0000201e      e8cdf4ffff     call sym.imp.dcgettext
0x00002023      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00002028      4889c2         mov rdx, rax
0x0000202b      31f6           xor esi, esi
0x0000202d      31ff           xor edi, edi
0x0000202f      31c0           xor eax, eax
0x00002031      4883c102       add rcx, 2
0x00002035      e876f6ffff     call sym.imp.error
0x0000203a      807c245600     cmp byte [rsp + 0x56], 0
0x0000203f      0f851f020000   jne 0x2264
0x00002045      807c245700     cmp byte [rsp + 0x57], 0
0x0000204a      0f8564030000   jne 0x23b4
0x00002050      4c89e6         mov rsi, r12
0x00002053      4889ef         mov rdi, rbp
0x00002056      31c0           xor eax, eax
0x00002058      e8033c0000     call sym.xprintf
0x0000205d      e916ffffff     jmp 0x1f78
0x00002062      488b442410     mov rax, qword [rsp + 0x10]
0x00002067      0fb600         movzx eax, byte [rax]
0x0000206a      3c22           cmp al, 0x22
0x0000206c      7408           je 0x2076
0x0000206e      3c27           cmp al, 0x27
0x00002070      0f850f020000   jne 0x2285
0x00002076      488b742410     mov rsi, qword [rsp + 0x10]
0x0000207b      0fb64601       movzx eax, byte [rsi + 1]
0x0000207f      84c0           test al, al
0x00002081      0f84fe010000   je 0x2285
0x00002087      807e0200       cmp byte [rsi + 2], 0
0x0000208b      6689442420     mov word [rsp + 0x20], ax
0x00002090      df442420       fild word [rsp + 0x20]
0x00002094      743b           je 0x20d1
0x00002096      803d0fa02000.  cmp byte [obj.posixly_correct], 0       ; [0x20c0ac:1]=0
0x0000209d      7532           jne 0x20d1
0x0000209f      db7c2420       fstp xword [rsp + 0x20]
0x000020a3      488d359e6300.  lea rsi, str.warning:__s:_character_s__following_character_constant_have_been_ignored ; 0x8448 ; "warning: %s: character(s) following character constant have been ignored"
0x000020aa      ba05000000     mov edx, 5
0x000020af      31ff           xor edi, edi
0x000020b1      e83af4ffff     call sym.imp.dcgettext
0x000020b6      488b4c2410     mov rcx, qword [rsp + 0x10]
0x000020bb      4889c2         mov rdx, rax
0x000020be      31f6           xor esi, esi
0x000020c0      31ff           xor edi, edi
0x000020c2      31c0           xor eax, eax
0x000020c4      4883c102       add rcx, 2
0x000020c8      e8e3f5ffff     call sym.imp.error
0x000020cd      db6c2420       fld xword [rsp + 0x20]
0x000020d1      807c245600     cmp byte [rsp + 0x56], 0
0x000020d6      0f85e6010000   jne 0x22c2
0x000020dc      807c245700     cmp byte [rsp + 0x57], 0
0x000020e1      0f8503030000   jne 0x23ea
0x000020e7      4883ec10       sub rsp, 0x10
0x000020eb      4889ef         mov rdi, rbp
0x000020ee      31c0           xor eax, eax
0x000020f0      db3c24         fstp xword [rsp]
0x000020f3      e8683b0000     call sym.xprintf
0x000020f8      4159           pop r9
0x000020fa      415a           pop r10
0x000020fc      e977feffff     jmp 0x1f78
0x00002101      0f1f80000000.  nop dword [rax]
0x00002108      490fa3c5       bt r13, rax
0x0000210c      0f8304fcffff   jae 0x1d16
0x00002112      4889cb         mov rbx, rcx
0x00002115      e9e6fbffff     jmp 0x1d00
0x0000211a      660f1f440000   nop word [rax + rax]
0x00002120      c644245700     mov byte [rsp + 0x57], 0
0x00002125      e9c2fbffff     jmp 0x1cec
0x0000212a      660f1f440000   nop word [rax + rax]
0x00002130      4585ff         test r15d, r15d
0x00002133      488d5101       lea rdx, [rcx + 1]
0x00002137      0f8593000000   jne 0x21d0
0x0000213d      488d4302       lea rax, [rbx + 2]
0x00002141      440fb66301     movzx r12d, byte [rbx + 1]
0x00002146      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0000214e      4889eb         mov rbx, rbp
0x00002151      c644245601     mov byte [rsp + 0x56], 1
0x00002156      4889442408     mov qword [rsp + 8], rax
0x0000215b      e91ffbffff     jmp 0x1c7f
0x00002160      4c89742420     mov qword [rsp + 0x20], r14
0x00002165      31c9           xor ecx, ecx
0x00002167      e94ffcffff     jmp 0x1dbb
0x0000216c      4883c202       add rdx, 2
0x00002170      4585ff         test r15d, r15d
0x00002173      488d6b02       lea rbp, [rbx + 2]
0x00002177      0f846c010000   je 0x22e9
0x0000217d      488b0424       mov rax, qword [rsp]
0x00002181      4889542408     mov qword [rsp + 8], rdx
0x00002186      488b38         mov rdi, qword [rax]
0x00002189      e8620a0000     call sym.vstrtoimax
0x0000218e      4885c0         test rax, rax
0x00002191      488b542408     mov rdx, qword [rsp + 8]
0x00002196      0f88dd010000   js 0x2379
0x0000219c      483dffffff7f   cmp rax, 0x7fffffff
0x000021a2      0f8fe1020000   jg 0x2489
0x000021a8      89442450       mov dword [rsp + 0x50], eax
0x000021ac      488d4303       lea rax, [rbx + 3]
0x000021b0      440fb66302     movzx r12d, byte [rbx + 2]
0x000021b5      4883042408     add qword [rsp], 8
0x000021ba      4183ef01       sub r15d, 1
0x000021be      4889eb         mov rbx, rbp
0x000021c1      c644245701     mov byte [rsp + 0x57], 1
0x000021c6      4889442408     mov qword [rsp + 8], rax
0x000021cb      e91cfbffff     jmp 0x1cec
0x000021d0      4c8b2424       mov r12, qword [rsp]
0x000021d4      4889542410     mov qword [rsp + 0x10], rdx
0x000021d9      498b3c24       mov rdi, qword [r12]
0x000021dd      e80e0a0000     call sym.vstrtoimax
0x000021e2      b900000080     mov ecx, 0x80000000
0x000021e7      beffffffff     mov esi, 0xffffffff                     ; -1
0x000021ec      4801c1         add rcx, rax
0x000021ef      4839f1         cmp rcx, rsi
0x000021f2      0f87c7020000   ja 0x24bf
0x000021f8      8944244c       mov dword [rsp + 0x4c], eax
0x000021fc      488d4302       lea rax, [rbx + 2]
0x00002200      4983c408       add r12, 8
0x00002204      4c892424       mov qword [rsp], r12
0x00002208      4183ef01       sub r15d, 1
0x0000220c      440fb66301     movzx r12d, byte [rbx + 1]
0x00002211      4889442408     mov qword [rsp + 8], rax
0x00002216      4889eb         mov rbx, rbp
0x00002219      c644245601     mov byte [rsp + 0x56], 1
0x0000221e      488b542410     mov rdx, qword [rsp + 0x10]
0x00002223      e957faffff     jmp 0x1c7f
0x00002228      e823f2ffff     call sym.imp.__errno_location
0x0000222d      4c8b742410     mov r14, qword [rsp + 0x10]
0x00002232      488d742468     lea rsi, [rsp + 0x68]
0x00002237      31c9           xor ecx, ecx
0x00002239      31d2           xor edx, edx
0x0000223b      c70000000000   mov dword [rax], 0
0x00002241      4c89f7         mov rdi, r14
0x00002244      e847f3ffff     call sym.imp.__strtoul_internal
0x00002249      488b742468     mov rsi, qword [rsp + 0x68]
0x0000224e      4c89f7         mov rdi, r14
0x00002251      4989c4         mov r12, rax
0x00002254      e8e7080000     call sym.verify_numeric
0x00002259      807c245600     cmp byte [rsp + 0x56], 0
0x0000225e      0f84e1fdffff   je 0x2045
0x00002264      807c245700     cmp byte [rsp + 0x57], 0
0x00002269      0f85a0010000   jne 0x240f
0x0000226f      8b74244c       mov esi, dword [rsp + 0x4c]
0x00002273      4c89e2         mov rdx, r12
0x00002276      4889ef         mov rdi, rbp
0x00002279      31c0           xor eax, eax
0x0000227b      e8e0390000     call sym.xprintf
0x00002280      e9f3fcffff     jmp 0x1f78
0x00002285      e8c6f1ffff     call sym.imp.__errno_location
0x0000228a      4c8b742410     mov r14, qword [rsp + 0x10]
0x0000228f      488d742468     lea rsi, [rsp + 0x68]
0x00002294      c70000000000   mov dword [rax], 0
0x0000229a      4c89f7         mov rdi, r14
0x0000229d      e80e0e0000     call sym.cl_strtold
0x000022a2      db7c2410       fstp xword [rsp + 0x10]
0x000022a6      488b742468     mov rsi, qword [rsp + 0x68]
0x000022ab      4c89f7         mov rdi, r14
0x000022ae      e88d080000     call sym.verify_numeric
0x000022b3      807c245600     cmp byte [rsp + 0x56], 0
0x000022b8      db6c2410       fld xword [rsp + 0x10]
0x000022bc      0f841afeffff   je 0x20dc
0x000022c2      807c245700     cmp byte [rsp + 0x57], 0
0x000022c7      0f85fd000000   jne 0x23ca
0x000022cd      4883ec10       sub rsp, 0x10
0x000022d1      4889ef         mov rdi, rbp
0x000022d4      31c0           xor eax, eax
0x000022d6      8b74245c       mov esi, dword [rsp + 0x5c]
0x000022da      db3c24         fstp xword [rsp]
0x000022dd      e87e390000     call sym.xprintf
0x000022e2      59             pop rcx
0x000022e3      5e             pop rsi
0x000022e4      e98ffcffff     jmp 0x1f78
0x000022e9      488d4303       lea rax, [rbx + 3]
0x000022ed      440fb66302     movzx r12d, byte [rbx + 2]
0x000022f2      c74424500000.  mov dword [rsp + 0x50], 0
0x000022fa      4889eb         mov rbx, rbp
0x000022fd      c644245701     mov byte [rsp + 0x57], 1
0x00002302      4889442408     mov qword [rsp + 8], rax
0x00002307      e9e0f9ffff     jmp 0x1cec
0x0000230c      8b74244c       mov esi, dword [rsp + 0x4c]
0x00002310      4889ef         mov rdi, rbp
0x00002313      31c0           xor eax, eax
0x00002315      e846390000     call sym.xprintf
0x0000231a      e959fcffff     jmp 0x1f78
0x0000231f      807c245700     cmp byte [rsp + 0x57], 0
0x00002324      0f84ed000000   je 0x2417
0x0000232a      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000232f      8b542450       mov edx, dword [rsp + 0x50]
0x00002333      8b74244c       mov esi, dword [rsp + 0x4c]
0x00002337      4889ef         mov rdi, rbp
0x0000233a      31c0           xor eax, eax
0x0000233c      e81f390000     call sym.xprintf
0x00002341      e932fcffff     jmp 0x1f78
0x00002346      807c245700     cmp byte [rsp + 0x57], 0
0x0000234b      0f85b6000000   jne 0x2407
0x00002351      8b74244c       mov esi, dword [rsp + 0x4c]
0x00002355      4889c2         mov rdx, rax
0x00002358      4889ef         mov rdi, rbp
0x0000235b      31c0           xor eax, eax
0x0000235d      e8fe380000     call sym.xprintf
0x00002362      e911fcffff     jmp 0x1f78
0x00002367      48896c2408     mov qword [rsp + 8], rbp
0x0000236c      4889ca         mov rdx, rcx
0x0000236f      c644245600     mov byte [rsp + 0x56], 0
0x00002374      e906f9ffff     jmp 0x1c7f
0x00002379      c7442450ffff.  mov dword [rsp + 0x50], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00002381      e926feffff     jmp 0x21ac
0x00002386      488b542410     mov rdx, qword [rsp + 0x10]
0x0000238b      8b742450       mov esi, dword [rsp + 0x50]
0x0000238f      4889ef         mov rdi, rbp
0x00002392      31c0           xor eax, eax
0x00002394      e8c7380000     call sym.xprintf
0x00002399      e9dafbffff     jmp 0x1f78
0x0000239e      8b742450       mov esi, dword [rsp + 0x50]
0x000023a2      4889c2         mov rdx, rax
0x000023a5      4889ef         mov rdi, rbp
0x000023a8      31c0           xor eax, eax
0x000023aa      e8b1380000     call sym.xprintf
0x000023af      e9c4fbffff     jmp 0x1f78
0x000023b4      8b742450       mov esi, dword [rsp + 0x50]
0x000023b8      4c89e2         mov rdx, r12
0x000023bb      4889ef         mov rdi, rbp
0x000023be      31c0           xor eax, eax
0x000023c0      e89b380000     call sym.xprintf
0x000023c5      e9aefbffff     jmp 0x1f78
0x000023ca      4883ec10       sub rsp, 0x10
0x000023ce      4889ef         mov rdi, rbp
0x000023d1      31c0           xor eax, eax
0x000023d3      8b542460       mov edx, dword [rsp + 0x60]
0x000023d7      8b74245c       mov esi, dword [rsp + 0x5c]
0x000023db      db3c24         fstp xword [rsp]
0x000023de      e87d380000     call sym.xprintf
0x000023e3      58             pop rax
0x000023e4      5a             pop rdx
0x000023e5      e98efbffff     jmp 0x1f78
0x000023ea      4883ec10       sub rsp, 0x10
0x000023ee      4889ef         mov rdi, rbp
0x000023f1      31c0           xor eax, eax
0x000023f3      8b742460       mov esi, dword [rsp + 0x60]
0x000023f7      db3c24         fstp xword [rsp]
0x000023fa      e861380000     call sym.xprintf
0x000023ff      5f             pop rdi
0x00002400      4158           pop r8
0x00002402      e971fbffff     jmp 0x1f78
0x00002407      4889c1         mov rcx, rax
0x0000240a      e920ffffff     jmp 0x232f
0x0000240f      4c89e1         mov rcx, r12
0x00002412      e918ffffff     jmp 0x232f
0x00002417      488b542410     mov rdx, qword [rsp + 0x10]
0x0000241c      8b74244c       mov esi, dword [rsp + 0x4c]
0x00002420      4889ef         mov rdi, rbp
0x00002423      31c0           xor eax, eax
0x00002425      e836380000     call sym.xprintf
0x0000242a      e949fbffff     jmp 0x1f78
0x0000242f      488b442408     mov rax, qword [rsp + 8]
0x00002434      c644245700     mov byte [rsp + 0x57], 0
0x00002439      4889c3         mov rbx, rax
0x0000243c      4883c001       add rax, 1
0x00002440      4889442408     mov qword [rsp + 8], rax
0x00002445      e9a2f8ffff     jmp 0x1cec
0x0000244a      4c8b642408     mov r12, qword [rsp + 8]
0x0000244f      488d35d26600.  lea rsi, str.._s:_invalid_conversion_specification ; 0x8b28 ; "%.*s: invalid conversion specification"
0x00002456      ba05000000     mov edx, 5
0x0000245b      31ff           xor edi, edi
0x0000245d      e88ef0ffff     call sym.imp.dcgettext
0x00002462      4c89e1         mov rcx, r12
0x00002465      4889c2         mov rdx, rax
0x00002468      4d89f0         mov r8, r14
0x0000246b      4c29f1         sub rcx, r14
0x0000246e      31f6           xor esi, esi
0x00002470      bf01000000     mov edi, 1
0x00002475      31c0           xor eax, eax
0x00002477      e834f2ffff     call sym.imp.error
0x0000247c      4088bc24d300.  mov byte [rsp + 0xd3], dil
0x00002484      e966f7ffff     jmp 0x1bef
0x00002489      488b0424       mov rax, qword [rsp]
0x0000248d      488b38         mov rdi, qword [rax]
0x00002490      e8ab2a0000     call sym.quote
0x00002495      488d35356800.  lea rsi, str.invalid_precision:__s      ; 0x8cd1 ; "invalid precision: %s"
0x0000249c      4889c3         mov rbx, rax
0x0000249f      ba05000000     mov edx, 5
0x000024a4      31ff           xor edi, edi
0x000024a6      e845f0ffff     call sym.imp.dcgettext
0x000024ab      4889d9         mov rcx, rbx
0x000024ae      4889c2         mov rdx, rax
0x000024b1      31f6           xor esi, esi
0x000024b3      bf01000000     mov edi, 1
0x000024b8      31c0           xor eax, eax
0x000024ba      e8f1f1ffff     call sym.imp.error
0x000024bf      488b0424       mov rax, qword [rsp]
0x000024c3      488b38         mov rdi, qword [rax]
0x000024c6      e8752a0000     call sym.quote
0x000024cb      488d35e76700.  lea rsi, str.invalid_field_width:__s    ; 0x8cb9 ; "invalid field width: %s"
0x000024d2      4889c3         mov rbx, rax
0x000024d5      ba05000000     mov edx, 5
0x000024da      31ff           xor edi, edi
0x000024dc      e80ff0ffff     call sym.imp.dcgettext
0x000024e1      4889d9         mov rcx, rbx
0x000024e4      4889c2         mov rdx, rax
0x000024e7      31f6           xor esi, esi
0x000024e9      bf01000000     mov edi, 1
0x000024ee      31c0           xor eax, eax
0x000024f0      e8bbf1ffff     call sym.imp.error
0x000024f5      e826f0ffff     call sym.imp.__stack_chk_fail
0x000024fa      31ff           xor edi, edi
0x000024fc      e89f070000     call sym.usage
0x00002501      662e0f1f8400.  nop word cs:[rax + rax]
0x0000250b      0f1f440000     nop dword [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002510      31ed           xor ebp, ebp
0x00002512      4989d1         mov r9, rdx
0x00002515      5e             pop rsi
0x00002516      4889e2         mov rdx, rsp
0x00002519      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000251d      50             push rax
0x0000251e      54             push rsp
0x0000251f      4c8d055a5e00.  lea r8, sym.__libc_csu_fini             ; 0x8380
0x00002526      488d0de35d00.  lea rcx, sym.__libc_csu_init            ; 0x8310 ; "AWAVI\x89\xd7AUATL\x8d%\x8e8 "
0x0000252d      488d3d2cf2ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1760 ; "AWAVAUATUS\x89\xfdH\x89\xf3H\x81\xec\x88\x01"
0x00002534      ff158e9a2000   call qword [reloc.__libc_start_main]    ; [0x20bfc8:8]=0
0x0000253a      f4             hlt
0x0000253b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002540      488d3d399b20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20c080
0x00002547      55             push rbp
0x00002548      488d05319b20.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20c080
0x0000254f      4839f8         cmp rax, rdi
0x00002552      4889e5         mov rbp, rsp
0x00002555      7419           je 0x2570
0x00002557      488b05629a20.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20bfc0:8]=0
0x0000255e      4885c0         test rax, rax
0x00002561      740d           je 0x2570
0x00002563      5d             pop rbp
0x00002564      ffe0           jmp rax
0x00002566      662e0f1f8400.  nop word cs:[rax + rax]
0x00002570      5d             pop rbp
0x00002571      c3             ret
0x00002572      0f1f4000       nop dword [rax]
0x00002576      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002580      488d3df99a20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20c080
0x00002587      488d35f29a20.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20c080
0x0000258e      55             push rbp
0x0000258f      4829fe         sub rsi, rdi
0x00002592      4889e5         mov rbp, rsp
0x00002595      48c1fe03       sar rsi, 3
0x00002599      4889f0         mov rax, rsi
0x0000259c      48c1e83f       shr rax, 0x3f
0x000025a0      4801c6         add rsi, rax
0x000025a3      48d1fe         sar rsi, 1
0x000025a6      7418           je 0x25c0
0x000025a8      488b05299a20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20bfd8:8]=0
0x000025af      4885c0         test rax, rax
0x000025b2      740c           je 0x25c0
0x000025b4      5d             pop rbp
0x000025b5      ffe0           jmp rax
0x000025b7      660f1f840000.  nop word [rax + rax]
0x000025c0      5d             pop rbp
0x000025c1      c3             ret
0x000025c2      0f1f4000       nop dword [rax]
0x000025c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x000025d0      803dd19a2000.  cmp byte [obj.completed.7697], 0        ; [0x20c0a8:1]=0
0x000025d7      752f           jne 0x2608
0x000025d9      48833dff9920.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20bfe0:8]=0
0x000025e1      55             push rbp
0x000025e2      4889e5         mov rbp, rsp
0x000025e5      740c           je 0x25f3
0x000025e7      488b3d1a9a20.  mov rdi, qword [obj.__dso_handle]       ; [0x20c008:8]=0x20c008 obj.__dso_handle
0x000025ee      e85df1ffff     call sym..plt.got
0x000025f3      e848ffffff     call sym.deregister_tm_clones
0x000025f8      c605a99a2000.  mov byte [obj.completed.7697], 1        ; [0x20c0a8:1]=0
0x000025ff      5d             pop rbp
0x00002600      c3             ret
0x00002601      0f1f80000000.  nop dword [rax]
0x00002608      f3c3           ret
0x0000260a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002610      55             push rbp
0x00002611      4889e5         mov rbp, rsp
0x00002614      5d             pop rbp
0x00002615      e966ffffff     jmp sym.register_tm_clones
0x0000261a      660f1f440000   nop word [rax + rax]
;-- print_esc:
0x00002620      4155           push r13                                ; /src:241
0x00002622      4154           push r12
0x00002624      4989fc         mov r12, rdi
0x00002627      55             push rbp
0x00002628      53             push rbx
0x00002629      4883ec18       sub rsp, 0x18
0x0000262d      440fb66f01     movzx r13d, byte [rdi + 1]              ; /src:246
0x00002632      4180fd78       cmp r13b, 0x78
0x00002636      0f84d4000000   je 0x2710
0x0000263c      418d45d0       lea eax, [r13 - 0x30]                   ; /src:257
0x00002640      488d5f01       lea rbx, [rdi + 1]                      ; /src:242
0x00002644      3c07           cmp al, 7                               ; /src:257
0x00002646      7768           ja 0x26b0
0x00002648      31c0           xor eax, eax                            ; /src:262
0x0000264a      4180fd30       cmp r13b, 0x30
0x0000264e      0f94c0         sete al
0x00002651      31d2           xor edx, edx                            ; /src:243
0x00002653      4821c6         and rsi, rax                            ; /src:262
0x00002656      4801de         add rsi, rbx
0x00002659      488d5e03       lea rbx, [rsi + 3]
0x0000265d      0fbe06         movsx eax, byte [rsi]                   ; /src:263
0x00002660      8d48d0         lea ecx, [rax - 0x30]
0x00002663      80f907         cmp cl, 7
0x00002666      0f8744020000   ja 0x28b0
0x0000266c      4883c601       add rsi, 1                              ; /src:264
0x00002670      8d54d0d0       lea edx, [rax + rdx*8 - 0x30]           ; /src:265
0x00002674      4839de         cmp rsi, rbx                            ; /src:262
0x00002677      75e4           jne 0x265d
0x00002679      488b3d089a20.  mov rdi, qword [obj.stdout]             ; .//coreutils-8.31/lib:107 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00002680      488b4728       mov rax, qword [rdi + 0x28]
0x00002684      483b4730       cmp rax, qword [rdi + 0x30]
0x00002688      0f83a2030000   jae 0x2a30
0x0000268e      488d4801       lea rcx, [rax + 1]
0x00002692      48894f28       mov qword [rdi + 0x28], rcx
0x00002696      8810           mov byte [rax], dl
0x00002698      4883c418       add rsp, 0x18                           ; /src:308
0x0000269c      4c29e3         sub rbx, r12                            ; /src:307
0x0000269f      8d43ff         lea eax, [rbx - 1]
0x000026a2      5b             pop rbx                                 ; /src:308
0x000026a3      5d             pop rbp
0x000026a4      415c           pop r12
0x000026a6      415d           pop r13
0x000026a8      c3             ret
0x000026a9      0f1f80000000.  nop dword [rax]
0x000026b0      4584ed         test r13b, r13b                         ; /src:268
0x000026b3      0f85df000000   jne 0x2798
0x000026b9      488b3dc89920.  mov rdi, qword [obj.stdout]             ; .//coreutils-8.31/lib:107 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x000026c0      488b4728       mov rax, qword [rdi + 0x28]
0x000026c4      483b4730       cmp rax, qword [rdi + 0x30]
0x000026c8      0f836f030000   jae 0x2a3d
0x000026ce      488d5001       lea rdx, [rax + 1]
0x000026d2      48895728       mov qword [rdi + 0x28], rdx
0x000026d6      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x000026d9      410fb6442401   movzx eax, byte [r12 + 1]               ; /src:301
0x000026df      84c0           test al, al
0x000026e1      74b5           je 0x2698
0x000026e3      488b3d9e9920.  mov rdi, qword [obj.stdout]             ; .//coreutils-8.31/lib:107 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x000026ea      488b5728       mov rdx, qword [rdi + 0x28]
0x000026ee      483b5730       cmp rdx, qword [rdi + 0x30]
0x000026f2      0f8354030000   jae 0x2a4c
0x000026f8      488d4a01       lea rcx, [rdx + 1]
0x000026fc      48894f28       mov qword [rdi + 0x28], rcx
0x00002700      8802           mov byte [rdx], al
0x00002702      498d5c2402     lea rbx, [r12 + 2]                      ; /src:304
0x00002707      eb8f           jmp 0x2698
0x00002709      0f1f80000000.  nop dword [rax]
0x00002710      488d6f02       lea rbp, [rdi + 2]                      ; /src:249
0x00002714      498d5c2404     lea rbx, [r12 + 4]
0x00002719      e812f0ffff     call sym.imp.__ctype_b_loc              ; /src:250
0x0000271e      4c8b00         mov r8, qword [rax]
0x00002721      4889ef         mov rdi, rbp                            ; /src:249
0x00002724      31f6           xor esi, esi                            ; /src:243
0x00002726      4189ea         mov r10d, ebp
0x00002729      0fbe17         movsx edx, byte [rdi]                   ; /src:250
0x0000272c      0fb6ca         movzx ecx, dl
0x0000272f      89d0           mov eax, edx
0x00002731      41f644480110   test byte [r8 + rcx*2 + 1], 0x10
0x00002737      0f84d3020000   je 0x2a10
0x0000273d      8d489f         lea ecx, [rax - 0x61]                   ; /src:252
0x00002740      c1e604         shl esi, 4
0x00002743      80f905         cmp cl, 5
0x00002746      7738           ja 0x2780
0x00002748      83ea57         sub edx, 0x57
0x0000274b      4883c701       add rdi, 1                              ; /src:251
0x0000274f      01d6           add esi, edx                            ; /src:252
0x00002751      4839df         cmp rdi, rbx                            ; /src:249
0x00002754      75d3           jne 0x2729
0x00002756      488b3d2b9920.  mov rdi, qword [obj.stdout]             ; .//coreutils-8.31/lib:107 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x0000275d      488b4728       mov rax, qword [rdi + 0x28]
0x00002761      483b4730       cmp rax, qword [rdi + 0x30]
0x00002765      0f83b5020000   jae 0x2a20
0x0000276b      488d5001       lea rdx, [rax + 1]
0x0000276f      48895728       mov qword [rdi + 0x28], rdx
0x00002773      408830         mov byte [rax], sil
0x00002776      e91dffffff     jmp 0x2698
0x0000277b      0f1f440000     nop dword [rax + rax]
0x00002780      448d4ac9       lea r9d, [rdx - 0x37]                   ; /src:252
0x00002784      8d4ad0         lea ecx, [rdx - 0x30]
0x00002787      83e841         sub eax, 0x41
0x0000278a      3c05           cmp al, 5
0x0000278c      4489ca         mov edx, r9d
0x0000278f      0f47d1         cmova edx, ecx
0x00002792      ebb7           jmp 0x274b
0x00002794      0f1f4000       nop dword [rax]
0x00002798      410fbeed       movsx ebp, r13b                         ; /src:268
0x0000279c      488d3de26300.  lea rdi, str.bcefnrtv                   ; 0x8b85 ; "\"\abcefnrtv"
0x000027a3      89ee           mov esi, ebp
0x000027a5      e896edffff     call sym.imp.strchr
0x000027aa      4885c0         test rax, rax
0x000027ad      7429           je 0x27d8
0x000027af      418d459f       lea eax, [r13 - 0x61]                   ; /src:198
0x000027b3      498d5c2402     lea rbx, [r12 + 2]
0x000027b8      3c15           cmp al, 0x15
0x000027ba      0f8727020000   ja 0x29e7
0x000027c0      488d15216500.  lea rdx, [0x00008ce8]
0x000027c7      0fb6c0         movzx eax, al
0x000027ca      48630482       movsxd rax, dword [rdx + rax*4]
0x000027ce      4801d0         add rax, rdx
0x000027d1      ffe0           jmp rax
0x000027d3      0f1f440000     nop dword [rax + rax]
0x000027d8      4489e8         mov eax, r13d
0x000027db      83e0df         and eax, 0xffffffdf                     ; 4294967263
0x000027de      3c55           cmp al, 0x55
0x000027e0      0f85d3feffff   jne 0x26b9
0x000027e6      4180fd75       cmp r13b, 0x75
0x000027ea      498d5c2402     lea rbx, [r12 + 2]
0x000027ef      410f95c5       setne r13b
0x000027f3      450fb6ed       movzx r13d, r13b
0x000027f7      468d2cad0400.  lea r13d, [r13*4 + 4]
0x000027ff      e82cefffff     call sym.imp.__ctype_b_loc
0x00002804      488b30         mov rsi, qword [rax]
0x00002807      418d45ff       lea eax, [r13 - 1]
0x0000280b      4531c9         xor r9d, r9d
0x0000280e      488d7c0301     lea rdi, [rbx + rax + 1]
0x00002813      eb12           jmp 0x2827
0x00002815      0f1f00         nop dword [rax]
0x00002818      83ea57         sub edx, 0x57
0x0000281b      4883c301       add rbx, 1
0x0000281f      4101d1         add r9d, edx
0x00002822      4839fb         cmp rbx, rdi
0x00002825      743d           je 0x2864
0x00002827      0fbe13         movsx edx, byte [rbx]
0x0000282a      0fb6ca         movzx ecx, dl
0x0000282d      89d0           mov eax, edx
0x0000282f      f6444e0110     test byte [rsi + rcx*2 + 1], 0x10
0x00002834      0f842e020000   je 0x2a68
0x0000283a      8d4a9f         lea ecx, [rdx - 0x61]
0x0000283d      41c1e104       shl r9d, 4
0x00002841      80f905         cmp cl, 5
0x00002844      76d2           jbe 0x2818
0x00002846      448d42c9       lea r8d, [rdx - 0x37]
0x0000284a      8d4ad0         lea ecx, [rdx - 0x30]                   ; /src:161
0x0000284d      83e841         sub eax, 0x41
0x00002850      3c05           cmp al, 5
0x00002852      4489c2         mov edx, r8d
0x00002855      0f47d1         cmova edx, ecx
0x00002858      4883c301       add rbx, 1
0x0000285c      4101d1         add r9d, edx
0x0000285f      4839fb         cmp rbx, rdi
0x00002862      75c3           jne 0x2827
0x00002864      4181f99f0000.  cmp r9d, 0x9f
0x0000286b      7715           ja 0x2882
0x0000286d      4183f924       cmp r9d, 0x24
0x00002871      740f           je 0x2882
0x00002873      4489c8         mov eax, r9d
0x00002876      83e0df         and eax, 0xffffffdf                     ; 4294967263
0x00002879      83f840         cmp eax, 0x40                           ; segment.PHDR
0x0000287c      0f8581020000   jne 0x2b03
0x00002882      418d810028ff.  lea eax, [r9 - 0xd800]
0x00002889      3dff070000     cmp eax, 0x7ff
0x0000288e      0f866f020000   jbe 0x2b03
0x00002894      488b3ded9720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x0000289b      31d2           xor edx, edx
0x0000289d      4489ce         mov esi, r9d
0x000028a0      e8cb290000     call sym.print_unicode_char
0x000028a5      e9eefdffff     jmp 0x2698                              ; .//coreutils-8.31/lib:-150
0x000028aa      660f1f440000   nop word [rax + rax]
0x000028b0      4889f3         mov rbx, rsi
0x000028b3      e9c1fdffff     jmp 0x2679
0x000028b8      488b3dc99720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x000028bf      488b4728       mov rax, qword [rdi + 0x28]
0x000028c3      483b4730       cmp rax, qword [rdi + 0x30]
0x000028c7      0f83fb010000   jae 0x2ac8
0x000028cd      488d5001       lea rdx, [rax + 1]
0x000028d1      48895728       mov qword [rdi + 0x28], rdx
0x000028d5      c6000b         mov byte [rax], 0xb                     ; [0xb:1]=0
0x000028d8      e9bbfdffff     jmp 0x2698
0x000028dd      488b3da49720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x000028e4      488b4728       mov rax, qword [rdi + 0x28]
0x000028e8      483b4730       cmp rax, qword [rdi + 0x30]
0x000028ec      0f839a010000   jae 0x2a8c
0x000028f2      488d5001       lea rdx, [rax + 1]
0x000028f6      48895728       mov qword [rdi + 0x28], rdx
0x000028fa      c60009         mov byte [rax], 9
0x000028fd      e996fdffff     jmp 0x2698
0x00002902      488b3d7f9720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00002909      488b4728       mov rax, qword [rdi + 0x28]
0x0000290d      483b4730       cmp rax, qword [rdi + 0x30]
0x00002911      0f83cf010000   jae 0x2ae6
0x00002917      488d5001       lea rdx, [rax + 1]
0x0000291b      48895728       mov qword [rdi + 0x28], rdx
0x0000291f      c6001b         mov byte [rax], 0x1b                    ; [0x1b:1]=0
0x00002922      e971fdffff     jmp 0x2698
0x00002927      488b3d5a9720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x0000292e      488b4728       mov rax, qword [rdi + 0x28]
0x00002932      483b4730       cmp rax, qword [rdi + 0x30]
0x00002936      0f836e010000   jae 0x2aaa
0x0000293c      488d5001       lea rdx, [rax + 1]
0x00002940      48895728       mov qword [rdi + 0x28], rdx
0x00002944      c6000a         mov byte [rax], 0xa
0x00002947      e94cfdffff     jmp 0x2698
0x0000294c      488b3d359720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00002953      488b4728       mov rax, qword [rdi + 0x28]
0x00002957      483b4730       cmp rax, qword [rdi + 0x30]
0x0000295b      0f8376010000   jae 0x2ad7
0x00002961      488d5001       lea rdx, [rax + 1]
0x00002965      48895728       mov qword [rdi + 0x28], rdx
0x00002969      c60008         mov byte [rax], 8
0x0000296c      e927fdffff     jmp 0x2698
0x00002971      488b3d109720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00002978      488b4728       mov rax, qword [rdi + 0x28]
0x0000297c      483b4730       cmp rax, qword [rdi + 0x30]
0x00002980      0f8315010000   jae 0x2a9b
0x00002986      488d5001       lea rdx, [rax + 1]
0x0000298a      48895728       mov qword [rdi + 0x28], rdx
0x0000298e      c6000d         mov byte [rax], 0xd                     ; [0xd:1]=0
0x00002991      e902fdffff     jmp 0x2698
0x00002996      31ff           xor edi, edi
0x00002998      e843edffff     call sym.imp.exit
0x0000299d      488b3de49620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x000029a4      488b4728       mov rax, qword [rdi + 0x28]
0x000029a8      483b4730       cmp rax, qword [rdi + 0x30]
0x000029ac      0f8307010000   jae 0x2ab9
0x000029b2      488d5001       lea rdx, [rax + 1]
0x000029b6      48895728       mov qword [rdi + 0x28], rdx
0x000029ba      c6000c         mov byte [rax], 0xc                     ; [0xc:1]=0
0x000029bd      e9d6fcffff     jmp 0x2698
0x000029c2      488b3dbf9620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x000029c9      488b4728       mov rax, qword [rdi + 0x28]
0x000029cd      483b4730       cmp rax, qword [rdi + 0x30]
0x000029d1      0f8382000000   jae 0x2a59
0x000029d7      488d5001       lea rdx, [rax + 1]
0x000029db      48895728       mov qword [rdi + 0x28], rdx
0x000029df      c60007         mov byte [rax], 7
0x000029e2      e9b1fcffff     jmp 0x2698
0x000029e7      488b3d9a9620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x000029ee      488b4728       mov rax, qword [rdi + 0x28]
0x000029f2      483b4730       cmp rax, qword [rdi + 0x30]
0x000029f6      0f83f9000000   jae 0x2af5
0x000029fc      488d5001       lea rdx, [rax + 1]
0x00002a00      48895728       mov qword [rdi + 0x28], rdx
0x00002a04      448828         mov byte [rax], r13b
0x00002a07      e98cfcffff     jmp 0x2698
0x00002a0c      0f1f4000       nop dword [rax]
0x00002a10      4139fa         cmp r10d, edi
0x00002a13      7453           je 0x2a68
0x00002a15      4889fb         mov rbx, rdi
0x00002a18      e939fdffff     jmp 0x2756
0x00002a1d      0f1f00         nop dword [rax]
0x00002a20      400fb6f6       movzx esi, sil
0x00002a24      e837ebffff     call sym.imp.__overflow
0x00002a29      e96afcffff     jmp 0x2698
0x00002a2e      6690           nop
0x00002a30      0fb6f2         movzx esi, dl
0x00002a33      e828ebffff     call sym.imp.__overflow
0x00002a38      e95bfcffff     jmp 0x2698
0x00002a3d      be5c000000     mov esi, 0x5c                           ; '\'
0x00002a42      e819ebffff     call sym.imp.__overflow
0x00002a47      e98dfcffff     jmp 0x26d9
0x00002a4c      0fb6f0         movzx esi, al
0x00002a4f      e80cebffff     call sym.imp.__overflow                 ; /src:-111
0x00002a54      e9a9fcffff     jmp 0x2702
0x00002a59      be07000000     mov esi, 7
0x00002a5e      e8fdeaffff     call sym.imp.__overflow
0x00002a63      e930fcffff     jmp 0x2698                              ; /src:-103
0x00002a68      488d35595900.  lea rsi, str.missing_hexadecimal_number_in_escape ; /src:-100 ; 0x83c8 ; "missing hexadecimal number in escape"
0x00002a6f      ba05000000     mov edx, 5
0x00002a74      31ff           xor edi, edi
0x00002a76      e875eaffff     call sym.imp.dcgettext
0x00002a7b      31f6           xor esi, esi
0x00002a7d      4889c2         mov rdx, rax
0x00002a80      bf01000000     mov edi, 1
0x00002a85      31c0           xor eax, eax
0x00002a87      e824ecffff     call sym.imp.error
0x00002a8c      be09000000     mov esi, 9
0x00002a91      e8caeaffff     call sym.imp.__overflow
0x00002a96      e9fdfbffff     jmp 0x2698
0x00002a9b      be0d000000     mov esi, 0xd
0x00002aa0      e8bbeaffff     call sym.imp.__overflow
0x00002aa5      e9eefbffff     jmp 0x2698
0x00002aaa      be0a000000     mov esi, 0xa
0x00002aaf      e8aceaffff     call sym.imp.__overflow
0x00002ab4      e9dffbffff     jmp 0x2698
0x00002ab9      be0c000000     mov esi, 0xc
0x00002abe      e89deaffff     call sym.imp.__overflow
0x00002ac3      e9d0fbffff     jmp 0x2698
0x00002ac8      be0b000000     mov esi, 0xb                            ; /src:-97
0x00002acd      e88eeaffff     call sym.imp.__overflow
0x00002ad2      e9c1fbffff     jmp 0x2698
0x00002ad7      be08000000     mov esi, 8
0x00002adc      e87feaffff     call sym.imp.__overflow
0x00002ae1      e9b2fbffff     jmp 0x2698
0x00002ae6      be1b000000     mov esi, 0x1b
0x00002aeb      e870eaffff     call sym.imp.__overflow
0x00002af0      e9a3fbffff     jmp 0x2698
0x00002af5      410fb6f5       movzx esi, r13b
0x00002af9      e862eaffff     call sym.imp.__overflow
0x00002afe      e995fbffff     jmp 0x2698
0x00002b03      488d35e65800.  lea rsi, str.invalid_universal_character_name____c_0_x ; 0x83f0 ; "invalid universal character name \%c%0*x"
0x00002b0a      ba05000000     mov edx, 5
0x00002b0f      31ff           xor edi, edi
0x00002b11      44894c240c     mov dword [rsp + 0xc], r9d
0x00002b16      e8d5e9ffff     call sym.imp.dcgettext
0x00002b1b      448b4c240c     mov r9d, dword [rsp + 0xc]
0x00002b20      4889c2         mov rdx, rax
0x00002b23      4589e8         mov r8d, r13d
0x00002b26      89e9           mov ecx, ebp
0x00002b28      31f6           xor esi, esi
0x00002b2a      bf01000000     mov edi, 1                              ; ../coreutils-8.31/src/intf.c:70
0x00002b2f      31c0           xor eax, eax
0x00002b31      e87aebffff     call sym.imp.error
0x00002b36      662e0f1f8400.  nop word cs:[rax + rax]
;-- verify_numeric:
0x00002b40      4154           push r12
0x00002b42      55             push rbp
0x00002b43      4989fc         mov r12, rdi
0x00002b46      53             push rbx
0x00002b47      4889f5         mov rbp, rsi
0x00002b4a      e801e9ffff     call sym.imp.__errno_location
0x00002b4f      8b10           mov edx, dword [rax]
0x00002b51      85d2           test edx, edx
0x00002b53      754b           jne 0x2ba0
0x00002b55      807d0000       cmp byte [rbp], 0
0x00002b59      743e           je 0x2b99
0x00002b5b      4c39e5         cmp rbp, r12
0x00002b5e      7470           je 0x2bd0
0x00002b60      4c89e7         mov rdi, r12
0x00002b63      e8d8230000     call sym.quote
0x00002b68      488d35b15800.  lea rsi, str.s:_value_not_completely_converted ; /src:-68 ; 0x8420 ; "%s: value not completely converted"
0x00002b6f      4889c3         mov rbx, rax
0x00002b72      ba05000000     mov edx, 5
0x00002b77      31ff           xor edi, edi
0x00002b79      e872e9ffff     call sym.imp.dcgettext
0x00002b7e      4889d9         mov rcx, rbx
0x00002b81      4889c2         mov rdx, rax
0x00002b84      31f6           xor esi, esi
0x00002b86      31ff           xor edi, edi
0x00002b88      31c0           xor eax, eax
0x00002b8a      e821ebffff     call sym.imp.error
0x00002b8f      c70517952000.  mov dword [obj.exit_status], 1          ; [0x20c0b0:4]=0
0x00002b99      5b             pop rbx
0x00002b9a      5d             pop rbp
0x00002b9b      415c           pop r12
0x00002b9d      c3             ret
0x00002b9e      6690           nop
0x00002ba0      4889c3         mov rbx, rax
0x00002ba3      4c89e7         mov rdi, r12
0x00002ba6      e895230000     call sym.quote
0x00002bab      8b33           mov esi, dword [rbx]
0x00002bad      488d151a6100.  lea rdx, [0x00008cce]                   ; "%s"
0x00002bb4      4889c1         mov rcx, rax
0x00002bb7      31ff           xor edi, edi
0x00002bb9      31c0           xor eax, eax
0x00002bbb      e8f0eaffff     call sym.imp.error
0x00002bc0      5b             pop rbx
0x00002bc1      c705e5942000.  mov dword [obj.exit_status], 1          ; [0x20c0b0:4]=0
0x00002bcb      5d             pop rbp
0x00002bcc      415c           pop r12
0x00002bce      c3             ret
0x00002bcf      90             nop
0x00002bd0      4889ef         mov rdi, rbp
0x00002bd3      e868230000     call sym.quote                          ; /src:-168
0x00002bd8      ba05000000     mov edx, 5
0x00002bdd      4889c3         mov rbx, rax
0x00002be0      488d35aa5f00.  lea rsi, str.s:_expected_a_numeric_value ; 0x8b91 ; "%s: expected a numeric value"
0x00002be7      eb8e           jmp 0x2b77
0x00002be9      0f1f80000000.  nop dword [rax]
;-- vstrtoimax:
0x00002bf0      55             push rbp
0x00002bf1      53             push rbx
0x00002bf2      4889fb         mov rbx, rdi
0x00002bf5      4883ec18       sub rsp, 0x18
0x00002bf9      64488b042528.  mov rax, qword fs:[0x28]
0x00002c02      4889442408     mov qword [rsp + 8], rax
0x00002c07      31c0           xor eax, eax
0x00002c09      0fb607         movzx eax, byte [rdi]
0x00002c0c      3c22           cmp al, 0x22
0x00002c0e      7404           je 0x2c14
0x00002c10      3c27           cmp al, 0x27
0x00002c12      7509           jne 0x2c1d
0x00002c14      0fb66b01       movzx ebp, byte [rbx + 1]
0x00002c18      4084ed         test bpl, bpl
0x00002c1b      7543           jne 0x2c60
0x00002c1d      e82ee8ffff     call sym.imp.__errno_location
0x00002c22      4889e6         mov rsi, rsp
0x00002c25      4889df         mov rdi, rbx
0x00002c28      c70000000000   mov dword [rax], 0                      ; /src:-159
0x00002c2e      31c9           xor ecx, ecx
0x00002c30      31d2           xor edx, edx
0x00002c32      e889e8ffff     call sym.imp.__strtol_internal
0x00002c37      488b3424       mov rsi, qword [rsp]
0x00002c3b      4889df         mov rdi, rbx
0x00002c3e      4889c5         mov rbp, rax
0x00002c41      e8fafeffff     call sym.verify_numeric
0x00002c46      488b542408     mov rdx, qword [rsp + 8]
0x00002c4b      644833142528.  xor rdx, qword fs:[0x28]
0x00002c54      4889e8         mov rax, rbp
0x00002c57      753d           jne 0x2c96
0x00002c59      4883c418       add rsp, 0x18
0x00002c5d      5b             pop rbx
0x00002c5e      5d             pop rbp
0x00002c5f      c3             ret
0x00002c60      807b0200       cmp byte [rbx + 2], 0
0x00002c64      74e0           je 0x2c46
0x00002c66      803d3f942000.  cmp byte [obj.posixly_correct], 0       ; [0x20c0ac:1]=0
0x00002c6d      75d7           jne 0x2c46
0x00002c6f      488d35d25700.  lea rsi, str.warning:__s:_character_s__following_character_constant_have_been_ignored ; 0x8448 ; "warning: %s: character(s) following character constant have been ignored"
0x00002c76      31ff           xor edi, edi
0x00002c78      ba05000000     mov edx, 5
0x00002c7d      e86ee8ffff     call sym.imp.dcgettext
0x00002c82      488d4b02       lea rcx, [rbx + 2]
0x00002c86      4889c2         mov rdx, rax
0x00002c89      31f6           xor esi, esi
0x00002c8b      31ff           xor edi, edi
0x00002c8d      31c0           xor eax, eax
0x00002c8f      e81ceaffff     call sym.imp.error
0x00002c94      ebb0           jmp 0x2c46
0x00002c96      e885e8ffff     call sym.imp.__stack_chk_fail
0x00002c9b      0f1f440000     nop dword [rax + rax]
;-- usage:
0x00002ca0      4155           push r13
0x00002ca2      4154           push r12
0x00002ca4      ba05000000     mov edx, 5
0x00002ca9      55             push rbp
0x00002caa      53             push rbx
0x00002cab      89fd           mov ebp, edi
0x00002cad      4881ec880000.  sub rsp, 0x88
0x00002cb4      488b1d0d9420.  mov rbx, qword [obj.program_name]       ; [0x20c0c8:8]=0
0x00002cbb      64488b042528.  mov rax, qword fs:[0x28]
0x00002cc4      4889442478     mov qword [rsp + 0x78], rax
0x00002cc9      31c0           xor eax, eax
0x00002ccb      85ff           test edi, edi
0x00002ccd      742e           je 0x2cfd
0x00002ccf      488d35c25700.  lea rsi, str.Try___s___help__for_more_information. ; 0x8498 ; "Try '%s --help' for more information.\n"
0x00002cd6      31ff           xor edi, edi
0x00002cd8      e813e8ffff     call sym.imp.dcgettext
0x00002cdd      488b3dbc9320.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20c0a0:8]=0
0x00002ce4      4889c2         mov rdx, rax
0x00002ce7      4889d9         mov rcx, rbx
0x00002cea      be01000000     mov esi, 1
0x00002cef      31c0           xor eax, eax
0x00002cf1      e80aeaffff     call sym.imp.__fprintf_chk
0x00002cf6      89ef           mov edi, ebp
0x00002cf8      e8e3e9ffff     call sym.imp.exit
0x00002cfd      488d35bc5700.  lea rsi, str.Usage:__s_FORMAT__ARGUMENT_...____or:___s_OPTION ; 0x84c0 ; "Usage: %s FORMAT [ARGUMENT]...\n  or:  %s OPTION\n"
0x00002d04      31ff           xor edi, edi
0x00002d06      e8e5e7ffff     call sym.imp.dcgettext                  ; /src:-129
0x00002d0b      4889d9         mov rcx, rbx
0x00002d0e      4889da         mov rdx, rbx
0x00002d11      4889c6         mov rsi, rax
0x00002d14      bf01000000     mov edi, 1
0x00002d19      31c0           xor eax, eax
0x00002d1b      e860e9ffff     call sym.imp.__printf_chk
0x00002d20      488b1d619320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00002d27      488d35ca5700.  lea rsi, str.Print_ARGUMENT_s__according_to_FORMAT__or_execute_according_to_OPTION: ; 0x84f8 ; "Print ARGUMENT(s) according to FORMAT, or execute according to OPTION:\n\n"
0x00002d2e      ba05000000     mov edx, 5
0x00002d33      31ff           xor edi, edi
0x00002d35      e8b6e7ffff     call sym.imp.dcgettext
0x00002d3a      4889de         mov rsi, rbx
0x00002d3d      4889c7         mov rdi, rax
0x00002d40      e87be8ffff     call sym.imp.fputs_unlocked
0x00002d45      488b1d3c9320.  mov rbx, qword [obj.stdout]             ; stdio.h:-153 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00002d4c      488d35f55700.  lea rsi, str.help_____display_this_help_and_exit ; 0x8548 ; "      --help     display this help and exit\n"
0x00002d53      ba05000000     mov edx, 5
0x00002d58      31ff           xor edi, edi
0x00002d5a      e891e7ffff     call sym.imp.dcgettext
0x00002d5f      4889de         mov rsi, rbx
0x00002d62      4889c7         mov rdi, rax
0x00002d65      e856e8ffff     call sym.imp.fputs_unlocked
0x00002d6a      488b1d179320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00002d71      488d35005800.  lea rsi, str.version__output_version_information_and_exit ; 0x8578 ; "      --version  output version information and exit\n"
0x00002d78      ba05000000     mov edx, 5
0x00002d7d      31ff           xor edi, edi
0x00002d7f      e86ce7ffff     call sym.imp.dcgettext
0x00002d84      4889de         mov rsi, rbx
0x00002d87      4889c7         mov rdi, rax
0x00002d8a      e831e8ffff     call sym.imp.fputs_unlocked
0x00002d8f      488b1df29220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00002d96      488d35135800.  lea rsi, str.FORMAT_controls_the_output_as_in_C_printf.__Interpreted_sequences_are:_______________double_quote ; 0x85b0 ; "\nFORMAT controls the output as in C printf.  Interpreted sequences are:\n\n  \\"      double quote\n"
0x00002d9d      ba05000000     mov edx, 5
0x00002da2      31ff           xor edi, edi
0x00002da4      e847e7ffff     call sym.imp.dcgettext
0x00002da9      4889de         mov rsi, rbx
0x00002dac      4889c7         mov rdi, rax
0x00002daf      e80ce8ffff     call sym.imp.fputs_unlocked
0x00002db4      488b1dcd9220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00002dbb      488d35565800.  lea rsi, str.backslash_____________alert__BEL______________backspace______c______produce_no_further_output______e______escape_____________form_feed_____________new_line_____________carriage_return_____________horizontal_tab_____________vertical_tab ; 0x8618 ; "  \\      backslash\n  \a      alert (BEL)\n  \b      backspace\n  \c      produce no further output\n  \e      escape\n  \f      form feed\n  \n      new line\n  \r      carriage return\n  \t      horizontal tab\n  \v      vertical tab\n"
0x00002dc2      ba05000000     mov edx, 5
0x00002dc7      31ff           xor edi, edi
0x00002dc9      e822e7ffff     call sym.imp.dcgettext
0x00002dce      4889de         mov rsi, rbx
0x00002dd1      4889c7         mov rdi, rax
0x00002dd4      e8e7e7ffff     call sym.imp.fputs_unlocked
0x00002dd9      488b1da89220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00002de0      488d35195900.  lea rsi, str.NNN____byte_with_octal_value_NNN__1_to_3_digits_______xHH____byte_with_hexadecimal_value_HH__1_to_2_digits_______uHHHH__Unicode__ISO_IEC_10646__character_with_hex_value_HHHH__4_digits_______UHHHHHHHH__Unicode_character_with_hex_value_HHHHHHHH__8_digits ; 0x8700 ; "  \NNN    byte with octal value NNN (1 to 3 digits)\n  \xHH    byte with hexadecimal value HH (1 to 2 digits)\n  \uHHHH  Unicode (ISO/IEC 10646) character with hex value HHHH (4 digits)\n  \UHHHHHHHH  Unicode character with hex value HHHHHHHH (8 digits)\n"
0x00002de7      ba05000000     mov edx, 5
0x00002dec      31ff           xor edi, edi
0x00002dee      e8fde6ffff     call sym.imp.dcgettext
0x00002df3      4889de         mov rsi, rbx
0x00002df6      4889c7         mov rdi, rax
0x00002df9      e8c2e7ffff     call sym.imp.fputs_unlocked
0x00002dfe      488b1d839220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00002e05      488d35f45900.  lea rsi, str.a_single_______b______ARGUMENT_as_a_string_with______escapes_interpreted_____________except_that_octal_escapes_are_of_the_form___0_or___0NNN_____q______ARGUMENT_is_printed_in_a_format_that_can_be_reused_as_shell_input_____________escaping_non_printable_characters_with_the_proposed_POSIX_____syntax.____and_all_C_format_specifications_ending_with_one_of_diouxXfeEgGcs__with__ARGUMENTs_converted_to_proper_type_first.__Variable_widths_are_handled. ; 0x8800 ; "  %%      a single %\n  %b      ARGUMENT as a string with '\' escapes interpreted,\n          except that octal escapes are of the form \0 or \0NNN\n  %q      ARGUMENT is printed in a format that can be reused as shell input,\n          escaping non-printable characters with the proposed POSIX $'' syntax.\n\nand all C format specifications ending with one of diouxXfeEgGcs, with\nARGUMENTs converted to proper type first.  Variable widths are handled.\n"
0x00002e0c      ba05000000     mov edx, 5
0x00002e11      31ff           xor edi, edi
0x00002e13      e8d8e6ffff     call sym.imp.dcgettext                  ; inttypes.h:395 {
0x00002e18      4889de         mov rsi, rbx
0x00002e1b      4889c7         mov rdi, rax
0x00002e1e      488d1d895d00.  lea rbx, str.printf                     ; 0x8bae ; "printf"
0x00002e25      e896e7ffff     call sym.imp.fputs_unlocked
0x00002e2a      488d358f5b00.  lea rsi, str.NOTE:_your_shell_may_have_its_own_version_of__s__which_usually_supersedes__the_version_described_here.__Please_refer_to_your_shell_s_documentation__for_details_about_the_options_it_supports. ; 0x89c0 ; "\nNOTE: your shell may have its own version of %s, which usually supersedes\nthe version described here.  Please refer to your shell's documentation\nfor details about the options it supports.\n"
0x00002e31      ba05000000     mov edx, 5
0x00002e36      31ff           xor edi, edi
0x00002e38      e8b3e6ffff     call sym.imp.dcgettext
0x00002e3d      488d156a5d00.  lea rdx, str.printf                     ; 0x8bae ; "printf"
0x00002e44      4889c6         mov rsi, rax
0x00002e47      bf01000000     mov edi, 1
0x00002e4c      31c0           xor eax, eax                            ; inttypes.h:399 __extension__
0x00002e4e      e82de8ffff     call sym.imp.__printf_chk
0x00002e53      488d055b5d00.  lea rax, [0x00008bb5]                   ; "["
0x00002e5a      488d0d955d00.  lea rcx, str.sha256sum                  ; 0x8bf6 ; "sha256sum"
0x00002e61      48c744246000.  mov qword [rsp + 0x60], 0
0x00002e6a      48c744246800.  mov qword [rsp + 0x68], 0
0x00002e73      4889e2         mov rdx, rsp
0x00002e76      48890424       mov qword [rsp], rax
0x00002e7a      488d05365d00.  lea rax, str.test_invocation            ; 0x8bb7 ; "test invocation"
0x00002e81      48894c2430     mov qword [rsp + 0x30], rcx
0x00002e86      488d0d735d00.  lea rcx, str.sha384sum                  ; 0x8c00 ; "sha384sum"
0x00002e8d      4889442408     mov qword [rsp + 8], rax
0x00002e92      488d05965d00.  lea rax, [0x00008c2f]                   ; "coreutils"
0x00002e99      48894c2440     mov qword [rsp + 0x40], rcx
0x00002e9e      488d0d655d00.  lea rcx, str.sha512sum                  ; 0x8c0a ; "sha512sum"
0x00002ea5      4889442410     mov qword [rsp + 0x10], rax
0x00002eaa      488d05165d00.  lea rax, str.Multi_call_invocation      ; 0x8bc7 ; "Multi-call invocation"
0x00002eb1      48894c2450     mov qword [rsp + 0x50], rcx
0x00002eb6      4889442418     mov qword [rsp + 0x18], rax
0x00002ebb      488d051b5d00.  lea rax, str.sha224sum                  ; 0x8bdd ; "sha224sum"
0x00002ec2      4889442420     mov qword [rsp + 0x20], rax
0x00002ec7      488d05195d00.  lea rax, str.sha2_utilities             ; 0x8be7 ; "sha2 utilities"
0x00002ece      4889442428     mov qword [rsp + 0x28], rax
0x00002ed3      4889442438     mov qword [rsp + 0x38], rax
0x00002ed8      4889442448     mov qword [rsp + 0x48], rax
0x00002edd      4889442458     mov qword [rsp + 0x58], rax
0x00002ee2      660f1f440000   nop word [rax + rax]
0x00002ee8      4883c210       add rdx, 0x10
0x00002eec      488b3a         mov rdi, qword [rdx]
0x00002eef      4885ff         test rdi, rdi
0x00002ef2      7413           je 0x2f07
0x00002ef4      b907000000     mov ecx, 7
0x00002ef9      4889de         mov rsi, rbx
0x00002efc      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002efe      0f97c0         seta al
0x00002f01      1c00           sbb al, 0
0x00002f03      84c0           test al, al
0x00002f05      75e1           jne 0x2ee8
0x00002f07      4c8b6208       mov r12, qword [rdx + 8]
0x00002f0b      31ff           xor edi, edi
0x00002f0d      ba05000000     mov edx, 5
0x00002f12      488d35fb5c00.  lea rsi, str.s_online_help:___s         ; 0x8c14 ; "\n%s online help: <%s>\n"
0x00002f19      4d85e4         test r12, r12                           ; inttypes.h:400 extern long long int __wcstoll_internal (const __gwchar_t *__restrict __nptr,
0x00002f1c      0f84c1000000   je 0x2fe3
0x00002f22      e8c9e5ffff     call sym.imp.dcgettext
0x00002f27      488d0d525b00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x8a80 ; "https://www.gnu.org/software/coreutils/"
0x00002f2e      488d15f65c00.  lea rdx, str.GNU_coreutils              ; 0x8c2b ; "GNU coreutils"
0x00002f35      4889c6         mov rsi, rax
0x00002f38      bf01000000     mov edi, 1
0x00002f3d      31c0           xor eax, eax
0x00002f3f      e83ce7ffff     call sym.imp.__printf_chk
0x00002f44      31f6           xor esi, esi                            ; inttypes.h:386          char **
0x00002f46      bf05000000     mov edi, 5
0x00002f4b      e820e7ffff     call sym.imp.setlocale                  ; inttypes.h:411
0x00002f50      4885c0         test rax, rax
0x00002f53      741c           je 0x2f71
0x00002f55      488d35dd5c00.  lea rsi, [0x00008c39]                   ; "en_"
0x00002f5c      ba03000000     mov edx, 3
0x00002f61      4889c7         mov rdi, rax
0x00002f64      e8f7e4ffff     call sym.imp.strncmp
0x00002f69      85c0           test eax, eax
0x00002f6b      0f8507010000   jne 0x3078
0x00002f71      488d35c55c00.  lea rsi, str.Full_documentation___s_s   ; 0x8c3d ; "Full documentation <%s%s>\n"
0x00002f78      31ff           xor edi, edi
0x00002f7a      ba05000000     mov edx, 5
0x00002f7f      e86ce5ffff     call sym.imp.dcgettext
0x00002f84      488d0d235c00.  lea rcx, str.printf                     ; 0x8bae ; "printf"
0x00002f8b      488d15ee5a00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x8a80 ; "https://www.gnu.org/software/coreutils/"
0x00002f92      4889c6         mov rsi, rax
0x00002f95      bf01000000     mov edi, 1
0x00002f9a      31c0           xor eax, eax
0x00002f9c      e8dfe6ffff     call sym.imp.__printf_chk
0x00002fa1      4939dc         cmp r12, rbx
0x00002fa4      488d0d265c00.  lea rcx, [0x00008bd1]                   ; " invocation"
0x00002fab      488d1d606500.  lea rbx, [0x00009512]
0x00002fb2      480f44d9       cmove rbx, rcx
0x00002fb6      488d35335b00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x8af0 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00002fbd      31ff           xor edi, edi
0x00002fbf      ba05000000     mov edx, 5
0x00002fc4      e827e5ffff     call sym.imp.dcgettext
0x00002fc9      4889d9         mov rcx, rbx
0x00002fcc      4889c6         mov rsi, rax
0x00002fcf      4c89e2         mov rdx, r12
0x00002fd2      bf01000000     mov edi, 1
0x00002fd7      31c0           xor eax, eax
0x00002fd9      e8a2e6ffff     call sym.imp.__printf_chk
0x00002fde      e913fdffff     jmp 0x2cf6
0x00002fe3      e808e5ffff     call sym.imp.dcgettext
0x00002fe8      488d0d915a00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x8a80 ; "https://www.gnu.org/software/coreutils/"
0x00002fef      488d15355c00.  lea rdx, str.GNU_coreutils              ; 0x8c2b ; "GNU coreutils"
0x00002ff6      4889c6         mov rsi, rax
0x00002ff9      bf01000000     mov edi, 1
0x00002ffe      31c0           xor eax, eax
0x00003000      e87be6ffff     call sym.imp.__printf_chk
0x00003005      31f6           xor esi, esi
0x00003007      bf05000000     mov edi, 5
0x0000300c      e85fe6ffff     call sym.imp.setlocale
0x00003011      4885c0         test rax, rax
0x00003014      7418           je 0x302e
0x00003016      488d351c5c00.  lea rsi, [0x00008c39]                   ; "en_"
0x0000301d      ba03000000     mov edx, 3
0x00003022      4889c7         mov rdi, rax
0x00003025      e836e4ffff     call sym.imp.strncmp
0x0000302a      85c0           test eax, eax
0x0000302c      7543           jne 0x3071
0x0000302e      488d35085c00.  lea rsi, str.Full_documentation___s_s   ; 0x8c3d ; "Full documentation <%s%s>\n"
0x00003035      ba05000000     mov edx, 5
0x0000303a      31ff           xor edi, edi
0x0000303c      4c8d256b5b00.  lea r12, str.printf                     ; 0x8bae ; "printf"
0x00003043      488d1d875b00.  lea rbx, [0x00008bd1]                   ; " invocation"
0x0000304a      e8a1e4ffff     call sym.imp.dcgettext
0x0000304f      488d0d585b00.  lea rcx, str.printf                     ; 0x8bae ; "printf"
0x00003056      488d15235a00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x8a80 ; "https://www.gnu.org/software/coreutils/"
0x0000305d      4889c6         mov rsi, rax
0x00003060      bf01000000     mov edi, 1
0x00003065      31c0           xor eax, eax
0x00003067      e814e6ffff     call sym.imp.__printf_chk
0x0000306c      e945ffffff     jmp 0x2fb6
0x00003071      4c8d25365b00.  lea r12, str.printf                     ; 0x8bae ; "printf"
0x00003078      4c8b2d099020.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x0000307f      488d35225a00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x8aa8 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00003086      31ff           xor edi, edi
0x00003088      ba05000000     mov edx, 5
0x0000308d      e85ee4ffff     call sym.imp.dcgettext
0x00003092      4c89ee         mov rsi, r13
0x00003095      4889c7         mov rdi, rax
0x00003098      e823e5ffff     call sym.imp.fputs_unlocked
0x0000309d      e9cffeffff     jmp 0x2f71
0x000030a2      662e0f1f8400.  nop word cs:[rax + rax]
0x000030ac      0f1f4000       nop dword [rax]
;-- cl_strtold:
0x000030b0      4155           push r13                                ; ../coreutils-8.31/lib/cl-strtod.c:60
0x000030b2      4154           push r12
0x000030b4      55             push rbp
0x000030b5      53             push rbx
0x000030b6      4889f3         mov rbx, rsi
0x000030b9      4889fd         mov rbp, rdi
0x000030bc      4883ec38       sub rsp, 0x38
0x000030c0      488d742418     lea rsi, [rsp + 0x18]                   ; ../coreutils-8.31/lib/cl-strtod.c:62
0x000030c5      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/cl-strtod.c:60
0x000030ce      4889442428     mov qword [rsp + 0x28], rax
0x000030d3      31c0           xor eax, eax
0x000030d5      e8c6e5ffff     call sym.imp.strtold                    ; ../coreutils-8.31/lib/cl-strtod.c:62
0x000030da      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/cl-strtod.c:63
0x000030df      d9c0           fld st(0)                               ; ../coreutils-8.31/lib/cl-strtod.c:62
0x000030e1      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/cl-strtod.c:63
0x000030e4      752a           jne 0x3110
0x000030e6      ddd9           fstp st(1)
0x000030e8      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/cl-strtod.c:73
0x000030eb      7408           je 0x30f5
0x000030ed      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/cl-strtod.c:74
0x000030f2      488903         mov qword [rbx], rax
0x000030f5      488b442428     mov rax, qword [rsp + 0x28]             ; ../coreutils-8.31/lib/cl-strtod.c:76
0x000030fa      644833042528.  xor rax, qword fs:[0x28]
0x00003103      754b           jne 0x3150
0x00003105      4883c438       add rsp, 0x38
0x00003109      5b             pop rbx
0x0000310a      5d             pop rbp
0x0000310b      415c           pop r12
0x0000310d      415d           pop r13
0x0000310f      c3             ret
0x00003110      ddd8           fstp st(0)
0x00003112      db3c24         fstp xword [rsp]
0x00003115      e836e3ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/cl-strtod.c:65
0x0000311a      488d742420     lea rsi, [rsp + 0x20]                   ; ../coreutils-8.31/lib/cl-strtod.c:67
0x0000311f      4889ef         mov rdi, rbp
0x00003122      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/cl-strtod.c:65
0x00003125      448b28         mov r13d, dword [rax]
0x00003128      e8c32e0000     call sym.c_strtold                      ; ../coreutils-8.31/lib/cl-strtod.c:67
0x0000312d      488b442420     mov rax, qword [rsp + 0x20]             ; ../coreutils-8.31/lib/cl-strtod.c:68
0x00003132      4839442418     cmp qword [rsp + 0x18], rax
0x00003137      db2c24         fld xword [rsp]
0x0000313a      730c           jae 0x3148
0x0000313c      ddd8           fstp st(0)
0x0000313e      4889442418     mov qword [rsp + 0x18], rax             ; ../coreutils-8.31/lib/cl-strtod.c:69
0x00003143      eba3           jmp 0x30e8
0x00003145      0f1f00         nop dword [rax]
0x00003148      ddd9           fstp st(1)
0x0000314a      45892c24       mov dword [r12], r13d                   ; ../coreutils-8.31/lib/cl-strtod.c:71
0x0000314e      eb98           jmp 0x30e8
0x00003150      ddd8           fstp st(0)
0x00003152      e8c9e3ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/cl-strtod.c:76
0x00003157      660f1f840000.  nop word [rax + rax]
;-- close_stdout_set_file_name:
0x00003160      48893d598f20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20c0c0:8]=0
0x00003167      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00003168      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00003170      40883d418f20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20c0b8:1]=0
0x00003177      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00003178      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00003180      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00003181      53             push rbx
0x00003182      4883ec08       sub rsp, 8
0x00003186      488b3dfb8e20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x0000318d      e81e2f0000     call sym.close_stream
0x00003192      85c0           test eax, eax
0x00003194      7416           je 0x31ac
0x00003196      e8b5e2ffff     call sym.imp.__errno_location
0x0000319b      803d168f2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20c0b8:1]=0
0x000031a2      4889c3         mov rbx, rax
0x000031a5      741c           je 0x31c3
0x000031a7      833820         cmp dword [rax], 0x20
0x000031aa      7517           jne 0x31c3
0x000031ac      488b3ded8e20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20c0a0:8]=0
0x000031b3      e8f82e0000     call sym.close_stream
0x000031b8      85c0           test eax, eax
0x000031ba      7546           jne 0x3202
0x000031bc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x000031c0      5b             pop rbx
0x000031c1      5d             pop rbp
0x000031c2      c3             ret
0x000031c3      488d35035d00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x8ecd ; "write error"
0x000031ca      31ff           xor edi, edi
0x000031cc      ba05000000     mov edx, 5
0x000031d1      e81ae3ffff     call sym.imp.dcgettext
0x000031d6      488b3de38e20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20c0c0:8]=0
0x000031dd      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x000031e0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x000031e3      7428           je 0x320d
0x000031e5      e8561b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x000031ea      8b33           mov esi, dword [rbx]
0x000031ec      488d15e65c00.  lea rdx, str.s:__s                      ; 0x8ed9 ; "%s: %s"
0x000031f3      4889c1         mov rcx, rax
0x000031f6      4989e8         mov r8, rbp
0x000031f9      31ff           xor edi, edi
0x000031fb      31c0           xor eax, eax
0x000031fd      e8aee4ffff     call sym.imp.error
0x00003202      8b3d108e2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20c018:4]=1
0x00003208      e863e2ffff     call sym.imp._exit
0x0000320d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000320f      488d15b85a00.  lea rdx, [0x00008cce]                   ; "%s"
0x00003216      4889c1         mov rcx, rax
0x00003219      31ff           xor edi, edi
0x0000321b      31c0           xor eax, eax
0x0000321d      e88ee4ffff     call sym.imp.error
0x00003222      ebde           jmp 0x3202
0x00003224      662e0f1f8400.  nop word cs:[rax + rax]
0x0000322e      6690           nop
;-- set_program_name:
0x00003230      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00003233      53             push rbx
0x00003234      7477           je 0x32ad                               ; ../coreutils-8.31/lib/progname.c:51
0x00003236      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000323b      4889fb         mov rbx, rdi
0x0000323e      e82de3ffff     call sym.imp.strrchr
0x00003243      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00003246      7455           je 0x329d
0x00003248      4c8d4001       lea r8, [rax + 1]
0x0000324c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000324f      4829da         sub rdx, rbx
0x00003252      4883fa06       cmp rdx, 6
0x00003256      7e45           jle 0x329d
0x00003258      488d70fa       lea rsi, [rax - 6]
0x0000325c      488d3db55c00.  lea rdi, str..libs                      ; 0x8f18 ; "/.libs/"
0x00003263      b907000000     mov ecx, 7
0x00003268      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000326a      0f97c2         seta dl
0x0000326d      80da00         sbb dl, 0
0x00003270      84d2           test dl, dl
0x00003272      7529           jne 0x329d
0x00003274      488d3da55c00.  lea rdi, [0x00008f20]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000327b      b903000000     mov ecx, 3
0x00003280      4c89c6         mov rsi, r8
0x00003283      4c89c3         mov rbx, r8
0x00003286      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003288      0f97c2         seta dl
0x0000328b      80da00         sbb dl, 0
0x0000328e      84d2           test dl, dl
0x00003290      750b           jne 0x329d
0x00003292      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00003296      48891de38d20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20c080:8]=0
0x0000329d      48891d248e20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20c0c8:8]=0
0x000032a4      48891de58d20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20c090:8]=0
0x000032ab      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000032ac      c3             ret
0x000032ad      488b0dec8d20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20c0a0:8]=0
0x000032b4      488d3d255c00.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x8ee0 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000032bb      ba37000000     mov edx, 0x37                           ; '7'
0x000032c0      be01000000     mov esi, 1
0x000032c5      e826e4ffff     call sym.imp.fwrite
0x000032ca      e871e1ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000032cf      90             nop
;-- gettext_quote.part.1:
0x000032d0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000032d1      53             push rbx
0x000032d2      4889fd         mov rbp, rdi
0x000032d5      89f3           mov ebx, esi
0x000032d7      4883ec08       sub rsp, 8
0x000032db      e8b02e0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000032e0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000032e3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000032e6      80fa55         cmp dl, 0x55
0x000032e9      7475           je 0x3360
0x000032eb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000032ee      7420           je 0x3310
0x000032f0      488d053c5c00.  lea rax, str.l______l                   ; 0x8f33 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000032f7      488d15375c00.  lea rdx, [0x00008f35]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000032fe      83fb09         cmp ebx, 9
0x00003301      480f45c2       cmovne rax, rdx
0x00003305      4883c408       add rsp, 8
0x00003309      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000330a      5d             pop rbp
0x0000330b      c3             ret
0x0000330c      0f1f4000       nop dword [rax]
0x00003310      0fb65001       movzx edx, byte [rax + 1]
0x00003314      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003317      80fa42         cmp dl, 0x42
0x0000331a      75d4           jne 0x32f0
0x0000331c      80780231       cmp byte [rax + 2], 0x31
0x00003320      75ce           jne 0x32f0
0x00003322      80780338       cmp byte [rax + 3], 0x38
0x00003326      75c8           jne 0x32f0
0x00003328      80780430       cmp byte [rax + 4], 0x30
0x0000332c      75c2           jne 0x32f0
0x0000332e      80780533       cmp byte [rax + 5], 0x33
0x00003332      75bc           jne 0x32f0
0x00003334      80780630       cmp byte [rax + 6], 0x30
0x00003338      75b6           jne 0x32f0
0x0000333a      80780700       cmp byte [rax + 7], 0
0x0000333e      75b0           jne 0x32f0
0x00003340      807d0060       cmp byte [rbp], 0x60
0x00003344      488d05e15b00.  lea rax, [0x00008f2c]
0x0000334b      488d15de5b00.  lea rdx, [0x00008f30]
0x00003352      480f45c2       cmovne rax, rdx
0x00003356      4883c408       add rsp, 8
0x0000335a      5b             pop rbx
0x0000335b      5d             pop rbp
0x0000335c      c3             ret
0x0000335d      0f1f00         nop dword [rax]
0x00003360      0fb65001       movzx edx, byte [rax + 1]
0x00003364      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003367      80fa54         cmp dl, 0x54
0x0000336a      7584           jne 0x32f0
0x0000336c      0fb65002       movzx edx, byte [rax + 2]
0x00003370      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003373      80fa46         cmp dl, 0x46
0x00003376      0f8574ffffff   jne 0x32f0
0x0000337c      8078032d       cmp byte [rax + 3], 0x2d
0x00003380      0f856affffff   jne 0x32f0
0x00003386      80780438       cmp byte [rax + 4], 0x38
0x0000338a      0f8560ffffff   jne 0x32f0
0x00003390      80780500       cmp byte [rax + 5], 0
0x00003394      0f8556ffffff   jne 0x32f0
0x0000339a      807d0060       cmp byte [rbp], 0x60
0x0000339e      488d057f5b00.  lea rax, [0x00008f24]                   ; "\u2018"
0x000033a5      488d157c5b00.  lea rdx, [0x00008f28]                   ; "\u2019"
0x000033ac      480f45c2       cmovne rax, rdx
0x000033b0      4883c408       add rsp, 8
0x000033b4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000033b5      5d             pop rbp
0x000033b6      c3             ret
0x000033b7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000033c0      4157           push r15
0x000033c2      4156           push r14
0x000033c4      4589c7         mov r15d, r8d
0x000033c7      4155           push r13
0x000033c9      4154           push r12
0x000033cb      4989fe         mov r14, rdi
0x000033ce      55             push rbp
0x000033cf      53             push rbx
0x000033d0      4489cb         mov ebx, r9d
0x000033d3      4989f5         mov r13, rsi
0x000033d6      4889cd         mov rbp, rcx
0x000033d9      83e302         and ebx, 2
0x000033dc      4881ecb80000.  sub rsp, 0xb8
0x000033e3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x000033eb      4889542410     mov qword [rsp + 0x10], rdx
0x000033f0      4489442408     mov dword [rsp + 8], r8d
0x000033f5      44894c2478     mov dword [rsp + 0x78], r9d
0x000033fa      4889442420     mov qword [rsp + 0x20], rax
0x000033ff      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00003407      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000340c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00003414      4889442460     mov qword [rsp + 0x60], rax
0x00003419      64488b042528.  mov rax, qword fs:[0x28]
0x00003422      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000342a      31c0           xor eax, eax
0x0000342c      e8cfe0ffff     call sym.imp.__ctype_get_mb_cur_max
0x00003431      4183ff0a       cmp r15d, 0xa
0x00003435      4889442458     mov qword [rsp + 0x58], rax
0x0000343a      0f87af110000   ja 0x45ef
0x00003440      488d0d595b00.  lea rcx, [0x00008fa0]
0x00003447      4489fa         mov edx, r15d
0x0000344a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000344e      4801c8         add rax, rcx
0x00003451      ffe0           jmp rax
0x00003453      c644240e01     mov byte [rsp + 0xe], 1
0x00003458      c644247c00     mov byte [rsp + 0x7c], 0
0x0000345d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00003460      48c744245000.  mov qword [rsp + 0x50], 0
0x00003469      c644240f01     mov byte [rsp + 0xf], 1
0x0000346e      c644240d00     mov byte [rsp + 0xd], 0
0x00003473      488d05bb5a00.  lea rax, [0x00008f35]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000347a      48c744241801.  mov qword [rsp + 0x18], 1
0x00003483      4531ff         xor r15d, r15d
0x00003486      c74424080200.  mov dword [rsp + 8], 2
0x0000348e      4889442448     mov qword [rsp + 0x48], rax
0x00003493      4531db         xor r11d, r11d
0x00003496      4889e8         mov rax, rbp
0x00003499      4589e0         mov r8d, r12d
0x0000349c      4c89dd         mov rbp, r11
0x0000349f      4989c3         mov r11, rax
0x000034a2      660f1f440000   nop word [rax + rax]
0x000034a8      4939eb         cmp r11, rbp
0x000034ab      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000034af      4983fbff       cmp r11, 0xffffffffffffffff
0x000034b3      750d           jne 0x34c2
0x000034b5      488b442410     mov rax, qword [rsp + 0x10]
0x000034ba      803c2800       cmp byte [rax + rbp], 0
0x000034be      410f95c4       setne r12b
0x000034c2      4584e4         test r12b, r12b
0x000034c5      0f8455060000   je 0x3b20
0x000034cb      837c240802     cmp dword [rsp + 8], 2
0x000034d0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000034d5      4c8d0c2f       lea r9, [rdi + rbp]
0x000034d9      0f95c0         setne al
0x000034dc      2244240d       and al, byte [rsp + 0xd]
0x000034e0      4189c2         mov r10d, eax
0x000034e3      0f84a7000000   je 0x3590
0x000034e9      488b442418     mov rax, qword [rsp + 0x18]
0x000034ee      4885c0         test rax, rax
0x000034f1      0f8429040000   je 0x3920
0x000034f7      4983fbff       cmp r11, 0xffffffffffffffff
0x000034fb      488d5c0500     lea rbx, [rbp + rax]
0x00003500      752e           jne 0x3530
0x00003502      4883f801       cmp rax, 1
0x00003506      7628           jbe 0x3530
0x00003508      4488442438     mov byte [rsp + 0x38], r8b
0x0000350d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00003512      4c894c2428     mov qword [rsp + 0x28], r9
0x00003517      e8f4dfffff     call sym.imp.strlen
0x0000351c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003522      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00003528      4989c3         mov r11, rax
0x0000352b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003530      4c39db         cmp rbx, r11
0x00003533      4488542428     mov byte [rsp + 0x28], r10b
0x00003538      0f87b2050000   ja 0x3af0
0x0000353e      488b542418     mov rdx, qword [rsp + 0x18]
0x00003543      488b742448     mov rsi, qword [rsp + 0x48]
0x00003548      4c89cf         mov rdi, r9
0x0000354b      4c895c2440     mov qword [rsp + 0x40], r11
0x00003550      4488442438     mov byte [rsp + 0x38], r8b
0x00003555      4c894c2430     mov qword [rsp + 0x30], r9
0x0000355a      e851e0ffff     call sym.imp.memcmp
0x0000355f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00003561      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003566      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000356c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00003571      0f8579050000   jne 0x3af0
0x00003577      807c240f00     cmp byte [rsp + 0xf], 0
0x0000357c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003582      0f857d0f0000   jne 0x4505
0x00003588      0f1f84000000.  nop dword [rax + rax]
0x00003590      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00003594      80fb7e         cmp bl, 0x7e
0x00003597      0f871b030000   ja 0x38b8
0x0000359d      488d0d285a00.  lea rcx, [0x00008fcc]
0x000035a4      0fb6d3         movzx edx, bl
0x000035a7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000035ab      4801c8         add rax, rcx
0x000035ae      ffe0           jmp rax
0x000035b0      4531d2         xor r10d, r10d
0x000035b3      4983fb01       cmp r11, 1
0x000035b7      0f95c0         setne al
0x000035ba      4983fbff       cmp r11, 0xffffffffffffffff
0x000035be      750c           jne 0x35cc
0x000035c0      488b442410     mov rax, qword [rsp + 0x10]
0x000035c5      80780100       cmp byte [rax + 1], 0
0x000035c9      0f95c0         setne al
0x000035cc      837c240802     cmp dword [rsp + 8], 2
0x000035d1      0f94c2         sete dl
0x000035d4      84c0           test al, al
0x000035d6      0f844c020000   je 0x3828
0x000035dc      4531e4         xor r12d, r12d
0x000035df      31c0           xor eax, eax
0x000035e1      0f1f80000000.  nop dword [rax]
0x000035e8      807c240d01     cmp byte [rsp + 0xd], 1
0x000035ed      0f850f010000   jne 0x3702
0x000035f3      84d2           test dl, dl
0x000035f5      0f8507010000   jne 0x3702
0x000035fb      488b742420     mov rsi, qword [rsp + 0x20]
0x00003600      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00003603      7414           je 0x3619
0x00003605      89da           mov edx, ebx
0x00003607      c0ea05         shr dl, 5
0x0000360a      0fb6d2         movzx edx, dl
0x0000360d      8b1496         mov edx, dword [rsi + rdx*4]
0x00003610      0fa3da         bt edx, ebx
0x00003613      0f824a010000   jb 0x3763
0x00003619      4584d2         test r10b, r10b
0x0000361c      0f8541010000   jne 0x3763
0x00003622      83f001         xor eax, 1
0x00003625      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00003629      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000362c      84c0           test al, al
0x0000362e      7420           je 0x3650                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003630      4d39fd         cmp r13, r15
0x00003633      7605           jbe 0x363a
0x00003635      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000363a      498d4701       lea rax, [r15 + 1]
0x0000363e      4939c5         cmp r13, rax
0x00003641      7606           jbe 0x3649
0x00003643      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003649      4983c702       add r15, 2
0x0000364d      4531c0         xor r8d, r8d
0x00003650      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003653      7304           jae 0x3659                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003655      43881c3e       mov byte [r14 + r15], bl
0x00003659      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000365e      4983c701       add r15, 1
0x00003662      b800000000     mov eax, 0
0x00003667      4584e4         test r12b, r12b
0x0000366a      0f44f8         cmove edi, eax
0x0000366d      40887c240e     mov byte [rsp + 0xe], dil
0x00003672      e931feffff     jmp 0x34a8
0x00003677      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00003680      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00003683      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00003687      83f802         cmp eax, 2
0x0000368a      0f84b8050000   je 0x3c48
0x00003690      83f805         cmp eax, 5
0x00003693      0f846f050000   je 0x3c08
0x00003699      83f802         cmp eax, 2
0x0000369c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000036a1      0f94c2         sete dl
0x000036a4      4531e4         xor r12d, r12d
0x000036a7      31c0           xor eax, eax
0x000036a9      e93affffff     jmp 0x35e8
0x000036ae      6690           nop
0x000036b0      4531d2         xor r10d, r10d
0x000036b3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000036b8      0f8402050000   je 0x3bc0
0x000036be      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x000036c3      31d2           xor edx, edx
0x000036c5      31c0           xor eax, eax
0x000036c7      bb27000000     mov ebx, 0x27                           ; '''
0x000036cc      e917ffffff     jmp 0x35e8
0x000036d1      0f1f80000000.  nop dword [rax]
0x000036d8      ba09000000     mov edx, 9
0x000036dd      bb74000000     mov ebx, 0x74                           ; 't'
0x000036e2      837c240802     cmp dword [rsp + 8], 2
0x000036e7      0f94c0         sete al
0x000036ea      2244240f       and al, byte [rsp + 0xf]
0x000036ee      0f854a010000   jne 0x383e
0x000036f4      807c240d00     cmp byte [rsp + 0xd], 0
0x000036f9      7565           jne 0x3760
0x000036fb      89d3           mov ebx, edx
0x000036fd      4531e4         xor r12d, r12d
0x00003700      31c0           xor eax, eax
0x00003702      807c240f00     cmp byte [rsp + 0xf], 0
0x00003707      0f85eefeffff   jne 0x35fb
0x0000370d      e907ffffff     jmp 0x3619                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00003712      660f1f440000   nop word [rax + rax]
0x00003718      ba08000000     mov edx, 8
0x0000371d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003722      ebd0           jmp 0x36f4
0x00003724      0f1f4000       nop dword [rax]
0x00003728      837c240802     cmp dword [rsp + 8], 2
0x0000372d      0f84cd030000   je 0x3b00
0x00003733      807c240d00     cmp byte [rsp + 0xd], 0
0x00003738      0f8412020000   je 0x3950
0x0000373e      807c240f00     cmp byte [rsp + 0xf], 0
0x00003743      0f8407020000   je 0x3950
0x00003749      48837c241800   cmp qword [rsp + 0x18], 0
0x0000374f      0f85b6030000   jne 0x3b0b
0x00003755      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000375a      660f1f440000   nop word [rax + rax]
0x00003760      4531e4         xor r12d, r12d
0x00003763      837c240802     cmp dword [rsp + 8], 2
0x00003768      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000376b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003770      89d0           mov eax, edx
0x00003772      0f8550080000   jne 0x3fc8
0x00003778      4489c0         mov eax, r8d
0x0000377b      83f001         xor eax, 1
0x0000377e      20d0           and al, dl
0x00003780      742f           je 0x37b1
0x00003782      4d39fd         cmp r13, r15
0x00003785      7605           jbe 0x378c
0x00003787      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000378c      498d5701       lea rdx, [r15 + 1]
0x00003790      4939d5         cmp r13, rdx
0x00003793      7606           jbe 0x379b
0x00003795      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000379b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000379f      4939d5         cmp r13, rdx
0x000037a2      7606           jbe 0x37aa
0x000037a4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000037aa      4983c703       add r15, 3
0x000037ae      4189c0         mov r8d, eax
0x000037b1      4d39fd         cmp r13, r15
0x000037b4      7605           jbe 0x37bb
0x000037b6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000037bb      4983c701       add r15, 1
0x000037bf      4883c501       add rbp, 1
0x000037c3      e988feffff     jmp 0x3650
0x000037c8      0f1f84000000.  nop dword [rax + rax]
0x000037d0      807c240d00     cmp byte [rsp + 0xd], 0
0x000037d5      0f85c8010000   jne 0x39a3
0x000037db      31d2           xor edx, edx
0x000037dd      f644247801     test byte [rsp + 0x78], 1
0x000037e2      0f8413ffffff   je 0x36fb
0x000037e8      4883c501       add rbp, 1
0x000037ec      e9b7fcffff     jmp 0x34a8
0x000037f1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x000037f8      837c240802     cmp dword [rsp + 8], 2
0x000037fd      0f94c2         sete dl
0x00003800      31c0           xor eax, eax
0x00003802      e9e1fdffff     jmp 0x35e8
0x00003807      660f1f840000.  nop word [rax + rax]
0x00003810      ba07000000     mov edx, 7
0x00003815      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000381a      e9d5feffff     jmp 0x36f4
0x0000381f      90             nop
0x00003820      837c240802     cmp dword [rsp + 8], 2
0x00003825      0f94c2         sete dl
0x00003828      4885ed         test rbp, rbp
0x0000382b      0f85abfdffff   jne 0x35dc
0x00003831      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003836      20d0           and al, dl
0x00003838      0f84aafdffff   je 0x35e8
0x0000383e      4c89dd         mov rbp, r11
0x00003841      c74424080200.  mov dword [rsp + 8], 2
0x00003849      e9fb060000     jmp 0x3f49
0x0000384e      6690           nop
0x00003850      837c240802     cmp dword [rsp + 8], 2
0x00003855      0f94c2         sete dl
0x00003858      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000385b      ebd4           jmp 0x3831
0x0000385d      0f1f00         nop dword [rax]
0x00003860      837c240802     cmp dword [rsp + 8], 2
0x00003865      bb20000000     mov ebx, 0x20                           ; "@"
0x0000386a      0f94c2         sete dl
0x0000386d      ebc2           jmp 0x3831
0x0000386f      90             nop
0x00003870      ba0d000000     mov edx, 0xd
0x00003875      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000387a      e963feffff     jmp 0x36e2
0x0000387f      90             nop
0x00003880      ba0c000000     mov edx, 0xc
0x00003885      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000388a      e965feffff     jmp 0x36f4
0x0000388f      90             nop
0x00003890      ba0b000000     mov edx, 0xb
0x00003895      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000389a      e955feffff     jmp 0x36f4
0x0000389f      90             nop
0x000038a0      ba0a000000     mov edx, 0xa
0x000038a5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000038aa      e933feffff     jmp 0x36e2
0x000038af      90             nop
0x000038b0      4531d2         xor r10d, r10d
0x000038b3      0f1f440000     nop dword [rax + rax]
0x000038b8      48837c245801   cmp qword [rsp + 0x58], 1
0x000038be      0f85a4030000   jne 0x3c68
0x000038c4      4c895c2438     mov qword [rsp + 0x38], r11
0x000038c9      4488442430     mov byte [rsp + 0x30], r8b
0x000038ce      4488542428     mov byte [rsp + 0x28], r10b
0x000038d3      e858deffff     call sym.imp.__ctype_b_loc
0x000038d8      488b08         mov rcx, qword [rax]
0x000038db      0fb6d3         movzx edx, bl
0x000038de      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000038e4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x000038ea      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x000038ef      bf01000000     mov edi, 1
0x000038f4      0fb70451       movzx eax, word [rcx + rdx*2]
0x000038f8      66250040       and ax, 0x4000
0x000038fc      410f95c4       setne r12b
0x00003900      0f94c0         sete al
0x00003903      2244240d       and al, byte [rsp + 0xd]
0x00003907      84c0           test al, al
0x00003909      0f8592090000   jne 0x42a1
0x0000390f      837c240802     cmp dword [rsp + 8], 2
0x00003914      0f94c2         sete dl
0x00003917      e9ccfcffff     jmp 0x35e8
0x0000391c      0f1f4000       nop dword [rax]
0x00003920      410fb619       movzx ebx, byte [r9]
0x00003924      80fb7e         cmp bl, 0x7e
0x00003927      7787           ja 0x38b0
0x00003929      488d0d985800.  lea rcx, [0x000091c8]
0x00003930      0fb6d3         movzx edx, bl
0x00003933      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003937      4801c8         add rax, rcx
0x0000393a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000393c      0f1f4000       nop dword [rax]
0x00003940      4531d2         xor r10d, r10d
0x00003943      807c240d00     cmp byte [rsp + 0xd], 0
0x00003948      0f85f0fdffff   jne 0x373e
0x0000394e      6690           nop
0x00003950      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003955      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000395a      e995fdffff     jmp 0x36f4
0x0000395f      90             nop
0x00003960      ba0c000000     mov edx, 0xc
0x00003965      4531d2         xor r10d, r10d
0x00003968      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000396d      e982fdffff     jmp 0x36f4
0x00003972      660f1f440000   nop word [rax + rax]
0x00003978      ba0a000000     mov edx, 0xa
0x0000397d      4531d2         xor r10d, r10d
0x00003980      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003985      e958fdffff     jmp 0x36e2
0x0000398a      660f1f440000   nop word [rax + rax]
0x00003990      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003995      e9c6fdffff     jmp 0x3760
0x0000399a      660f1f440000   nop word [rax + rax]
0x000039a0      4531d2         xor r10d, r10d
0x000039a3      837c240802     cmp dword [rsp + 8], 2
0x000039a8      0f94c2         sete dl
0x000039ab      807c240f00     cmp byte [rsp + 0xf], 0
0x000039b0      0f85940b0000   jne 0x454a
0x000039b6      4489c0         mov eax, r8d
0x000039b9      4c89f9         mov rcx, r15
0x000039bc      83f001         xor eax, 1
0x000039bf      20d0           and al, dl
0x000039c1      742d           je 0x39f0
0x000039c3      4d39fd         cmp r13, r15
0x000039c6      7605           jbe 0x39cd
0x000039c8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000039cd      498d4f01       lea rcx, [r15 + 1]
0x000039d1      4939cd         cmp r13, rcx
0x000039d4      7606           jbe 0x39dc
0x000039d6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000039dc      498d4f02       lea rcx, [r15 + 2]
0x000039e0      4939cd         cmp r13, rcx
0x000039e3      0f8730060000   ja 0x4019
0x000039e9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x000039ed      4189c0         mov r8d, eax
0x000039f0      4939cd         cmp r13, rcx
0x000039f3      7605           jbe 0x39fa
0x000039f5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000039fa      837c240802     cmp dword [rsp + 8], 2
0x000039ff      4c8d7901       lea r15, [rcx + 1]
0x00003a03      0f8400060000   je 0x4009
0x00003a09      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003a0d      4c39d8         cmp rax, r11
0x00003a10      7319           jae 0x3a2b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003a12      488b442410     mov rax, qword [rsp + 0x10]
0x00003a17      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00003a1c      88442428       mov byte [rsp + 0x28], al
0x00003a20      83e830         sub eax, 0x30
0x00003a23      3c09           cmp al, 9
0x00003a25      0f862e080000   jbe 0x4259
0x00003a2b      4489e0         mov eax, r12d
0x00003a2e      bb30000000     mov ebx, 0x30                           ; '0'
0x00003a33      4531e4         xor r12d, r12d
0x00003a36      e9adfbffff     jmp 0x35e8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00003a3b      0f1f440000     nop dword [rax + rax]
0x00003a40      837c240802     cmp dword [rsp + 8], 2
0x00003a45      4589d4         mov r12d, r10d
0x00003a48      0f94c2         sete dl
0x00003a4b      4531d2         xor r10d, r10d
0x00003a4e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003a50      e993fbffff     jmp 0x35e8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003a55      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003a58      837c240802     cmp dword [rsp + 8], 2
0x00003a5d      0f94c2         sete dl
0x00003a60      4531d2         xor r10d, r10d
0x00003a63      e9c0fdffff     jmp 0x3828
0x00003a68      0f1f84000000.  nop dword [rax + rax]
0x00003a70      837c240802     cmp dword [rsp + 8], 2
0x00003a75      0f94c2         sete dl
0x00003a78      4531d2         xor r10d, r10d
0x00003a7b      4531e4         xor r12d, r12d
0x00003a7e      e9aefdffff     jmp 0x3831
0x00003a83      0f1f440000     nop dword [rax + rax]
0x00003a88      837c240802     cmp dword [rsp + 8], 2
0x00003a8d      4589d4         mov r12d, r10d
0x00003a90      bb20000000     mov ebx, 0x20                           ; "@"
0x00003a95      0f94c2         sete dl
0x00003a98      4531d2         xor r10d, r10d
0x00003a9b      e991fdffff     jmp 0x3831
0x00003aa0      ba0d000000     mov edx, 0xd
0x00003aa5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003aa8      bb72000000     mov ebx, 0x72                           ; 'r'
0x00003aad      e930fcffff     jmp 0x36e2
0x00003ab2      660f1f440000   nop word [rax + rax]
0x00003ab8      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003abd      e99efcffff     jmp 0x3760
0x00003ac2      660f1f440000   nop word [rax + rax]
0x00003ac8      ba09000000     mov edx, 9
0x00003acd      4531d2         xor r10d, r10d
0x00003ad0      bb74000000     mov ebx, 0x74                           ; 't'
0x00003ad5      e908fcffff     jmp 0x36e2
0x00003ada      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003ae0      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003ae5      e976fcffff     jmp 0x3760
0x00003aea      660f1f440000   nop word [rax + rax]
0x00003af0      4531d2         xor r10d, r10d
0x00003af3      e998faffff     jmp 0x3590
0x00003af8      0f1f84000000.  nop dword [rax + rax]
0x00003b00      807c240f00     cmp byte [rsp + 0xf], 0
0x00003b05      0f8565090000   jne 0x4470
0x00003b0b      4883c501       add rbp, 1
0x00003b0f      4489c0         mov eax, r8d
0x00003b12      4531e4         xor r12d, r12d
0x00003b15      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003b1a      e90dfbffff     jmp 0x362c
0x00003b1f      90             nop
0x00003b20      837c240802     cmp dword [rsp + 8], 2
0x00003b25      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003b2a      4589c4         mov r12d, r8d
0x00003b2d      4c89dd         mov rbp, r11
0x00003b30      0f94c2         sete dl
0x00003b33      89d8           mov eax, ebx
0x00003b35      4d85ff         test r15, r15
0x00003b38      0f94c1         sete cl
0x00003b3b      21d0           and eax, edx
0x00003b3d      20c8           and al, cl
0x00003b3f      0f85610a0000   jne 0x45a6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003b45      89d8           mov eax, ebx
0x00003b47      83f001         xor eax, 1
0x00003b4a      20c2           and dl, al
0x00003b4c      0f846a090000   je 0x44bc
0x00003b52      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003b57      0f845d090000   je 0x44ba
0x00003b5d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003b62      0f85f5090000   jne 0x455d
0x00003b68      4d85ed         test r13, r13
0x00003b6b      0f94c0         sete al
0x00003b6e      48837c245000   cmp qword [rsp + 0x50], 0
0x00003b74      0f95c2         setne dl
0x00003b77      20d0           and al, dl
0x00003b79      0f841d0a0000   je 0x459c
0x00003b7f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003b84      488d1daa5300.  lea rbx, [0x00008f35]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003b8b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00003b8f      c74424080200.  mov dword [rsp + 8], 2
0x00003b97      41bf01000000   mov r15d, 1
0x00003b9d      48c744241801.  mov qword [rsp + 0x18], 1
0x00003ba6      c644240f00     mov byte [rsp + 0xf], 0
0x00003bab      48895c2448     mov qword [rsp + 0x48], rbx
0x00003bb0      8844247c       mov byte [rsp + 0x7c], al
0x00003bb4      e9daf8ffff     jmp 0x3493
0x00003bb9      0f1f80000000.  nop dword [rax]
0x00003bc0      807c240f00     cmp byte [rsp + 0xf], 0
0x00003bc5      0f85a5080000   jne 0x4470
0x00003bcb      4d85ed         test r13, r13
0x00003bce      0f84fc030000   je 0x3fd0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003bd4      31d2           xor edx, edx
0x00003bd6      48837c245000   cmp qword [rsp + 0x50], 0
0x00003bdc      0f85ee030000   jne 0x3fd0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003be2      4c896c2450     mov qword [rsp + 0x50], r13
0x00003be7      4983c703       add r15, 3
0x00003beb      31c0           xor eax, eax
0x00003bed      448864247c     mov byte [rsp + 0x7c], r12b
0x00003bf2      4531c0         xor r8d, r8d
0x00003bf5      4989d5         mov r13, rdx
0x00003bf8      bb27000000     mov ebx, 0x27                           ; '''
0x00003bfd      e917faffff     jmp 0x3619
0x00003c02      660f1f440000   nop word [rax + rax]
0x00003c08      f644247804     test byte [rsp + 0x78], 4
0x00003c0d      7421           je 0x3c30
0x00003c0f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003c13      4c39d9         cmp rcx, r11
0x00003c16      7318           jae 0x3c30
0x00003c18      488b442410     mov rax, qword [rsp + 0x10]
0x00003c1d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003c22      0f848a070000   je 0x43b2
0x00003c28      0f1f84000000.  nop dword [rax + rax]
0x00003c30      31d2           xor edx, edx
0x00003c32      4531e4         xor r12d, r12d
0x00003c35      31c0           xor eax, eax
0x00003c37      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003c3c      e9a7f9ffff     jmp 0x35e8
0x00003c41      0f1f80000000.  nop dword [rax]
0x00003c48      807c240f00     cmp byte [rsp + 0xf], 0
0x00003c4d      0f851d080000   jne 0x4470
0x00003c53      4531e4         xor r12d, r12d
0x00003c56      31c0           xor eax, eax
0x00003c58      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003c5d      e9b7f9ffff     jmp 0x3619                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003c62      660f1f440000   nop word [rax + rax]
0x00003c68      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003c70      4983fbff       cmp r11, 0xffffffffffffffff
0x00003c74      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003c80      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003c85      752d           jne 0x3cb4
0x00003c87      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003c8c      4488442440     mov byte [rsp + 0x40], r8b
0x00003c91      4488542438     mov byte [rsp + 0x38], r10b
0x00003c96      4c894c2430     mov qword [rsp + 0x30], r9
0x00003c9b      e870d8ffff     call sym.imp.strlen
0x00003ca0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003ca6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00003cac      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00003caf      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003cb4      488d84249c00.  lea rax, [rsp + 0x9c]
0x00003cbc      31c9           xor ecx, ecx
0x00003cbe      885c247e       mov byte [rsp + 0x7e], bl
0x00003cc2      448844247d     mov byte [rsp + 0x7d], r8b
0x00003cc7      4889cb         mov rbx, rcx
0x00003cca      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003cd2      4889442438     mov qword [rsp + 0x38], rax
0x00003cd7      448854247f     mov byte [rsp + 0x7f], r10b
0x00003cdc      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003ce4      4c89742440     mov qword [rsp + 0x40], r14
0x00003ce9      4c896c2470     mov qword [rsp + 0x70], r13
0x00003cee      4c895c2430     mov qword [rsp + 0x30], r11
0x00003cf3      488b442410     mov rax, qword [rsp + 0x10]
0x00003cf8      4c8d741d00     lea r14, [rbp + rbx]
0x00003cfd      488b542430     mov rdx, qword [rsp + 0x30]
0x00003d02      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003d07      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00003d0c      4e8d2c30       lea r13, [rax + r14]
0x00003d10      4c29f2         sub rdx, r14
0x00003d13      4c89ee         mov rsi, r13
0x00003d16      e825210000     call sym.rpl_mbrtowc
0x00003d1b      4885c0         test rax, rax
0x00003d1e      4989c7         mov r15, rax
0x00003d21      744e           je 0x3d71
0x00003d23      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003d27      0f8418060000   je 0x4345
0x00003d2d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003d31      0f849a050000   je 0x42d1
0x00003d37      837c240802     cmp dword [rsp + 8], 2
0x00003d3c      0f94c0         sete al
0x00003d3f      2244240f       and al, byte [rsp + 0xf]
0x00003d43      0f8597010000   jne 0x3ee0
0x00003d49      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003d50      e8cbd9ffff     call sym.imp.iswprint
0x00003d55      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00003d5a      85c0           test eax, eax
0x00003d5c      b800000000     mov eax, 0
0x00003d61      440f44e0       cmove r12d, eax
0x00003d65      4c01fb         add rbx, r15
0x00003d68      e8a3d9ffff     call sym.imp.mbsinit
0x00003d6d      85c0           test eax, eax
0x00003d6f      7482           je 0x3cf3
0x00003d71      4489e2         mov edx, r12d
0x00003d74      4889df         mov rdi, rbx
0x00003d77      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003d7d      83f201         xor edx, 1
0x00003d80      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003d85      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003d8b      2254240d       and dl, byte [rsp + 0xd]
0x00003d8f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003d97      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003d9c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003da1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003da6      4883ff01       cmp rdi, 1
0x00003daa      0f86fb050000   jbe 0x43ab
0x00003db0      4889f9         mov rcx, rdi
0x00003db3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003db5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00003dbb      4801e9         add rcx, rbp
0x00003dbe      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003dc3      e9b6000000     jmp 0x3e7e
0x00003dc8      0f1f84000000.  nop dword [rax + rax]
0x00003dd0      837c240802     cmp dword [rsp + 8], 2
0x00003dd5      0f94c0         sete al
0x00003dd8      4584c9         test r9b, r9b
0x00003ddb      0f85af040000   jne 0x4290
0x00003de1      4489c6         mov esi, r8d
0x00003de4      83f601         xor esi, 1
0x00003de7      4020f0         and al, sil
0x00003dea      742f           je 0x3e1b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00003dec      4d39fd         cmp r13, r15
0x00003def      7605           jbe 0x3df6
0x00003df1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003df6      498d7701       lea rsi, [r15 + 1]
0x00003dfa      4939f5         cmp r13, rsi
0x00003dfd      7606           jbe 0x3e05                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00003dff      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003e05      498d7702       lea rsi, [r15 + 2]
0x00003e09      4939f5         cmp r13, rsi
0x00003e0c      7606           jbe 0x3e14
0x00003e0e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003e14      4983c703       add r15, 3
0x00003e18      4189c0         mov r8d, eax
0x00003e1b      4d39fd         cmp r13, r15
0x00003e1e      7605           jbe 0x3e25
0x00003e20      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003e25      498d4701       lea rax, [r15 + 1]
0x00003e29      4939c5         cmp r13, rax
0x00003e2c      760d           jbe 0x3e3b
0x00003e2e      89d8           mov eax, ebx
0x00003e30      c0e806         shr al, 6
0x00003e33      83c030         add eax, 0x30
0x00003e36      4388443e01     mov byte [r14 + r15 + 1], al
0x00003e3b      498d4702       lea rax, [r15 + 2]
0x00003e3f      4939c5         cmp r13, rax
0x00003e42      7610           jbe 0x3e54
0x00003e44      89d8           mov eax, ebx
0x00003e46      c0e803         shr al, 3
0x00003e49      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00003e4c      83c030         add eax, 0x30
0x00003e4f      4388443e02     mov byte [r14 + r15 + 2], al
0x00003e54      83e307         and ebx, 7
0x00003e57      4883c501       add rbp, 1
0x00003e5b      4983c703       add r15, 3
0x00003e5f      83c330         add ebx, 0x30
0x00003e62      4839cd         cmp rbp, rcx
0x00003e65      0f83e5f7ffff   jae 0x3650
0x00003e6b      89d6           mov esi, edx
0x00003e6d      4d39fd         cmp r13, r15
0x00003e70      7604           jbe 0x3e76
0x00003e72      43881c3e       mov byte [r14 + r15], bl
0x00003e76      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003e7a      4983c701       add r15, 1
0x00003e7e      84d2           test dl, dl
0x00003e80      0f854affffff   jne 0x3dd0
0x00003e86      89f0           mov eax, esi
0x00003e88      83f001         xor eax, 1
0x00003e8b      4421c0         and eax, r8d
0x00003e8e      4584d2         test r10b, r10b
0x00003e91      740e           je 0x3ea1
0x00003e93      4d39fd         cmp r13, r15
0x00003e96      7605           jbe 0x3e9d
0x00003e98      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003e9d      4983c701       add r15, 1
0x00003ea1      4883c501       add rbp, 1
0x00003ea5      4839cd         cmp rbp, rcx
0x00003ea8      0f837ef7ffff   jae 0x362c
0x00003eae      84c0           test al, al
0x00003eb0      0f84f8030000   je 0x42ae
0x00003eb6      4d39fd         cmp r13, r15
0x00003eb9      7605           jbe 0x3ec0
0x00003ebb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003ec0      498d4701       lea rax, [r15 + 1]
0x00003ec4      4939c5         cmp r13, rax
0x00003ec7      7606           jbe 0x3ecf
0x00003ec9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003ecf      4983c702       add r15, 2
0x00003ed3      4531d2         xor r10d, r10d
0x00003ed6      4531c0         xor r8d, r8d
0x00003ed9      eb92           jmp 0x3e6d
0x00003edb      0f1f440000     nop dword [rax + rax]
0x00003ee0      4983ff01       cmp r15, 1
0x00003ee4      0f845ffeffff   je 0x3d49
0x00003eea      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003eef      4a8d0c3f       lea rcx, [rdi + r15]
0x00003ef3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003ef8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003efc      eb0f           jmp 0x3f0d
0x00003efe      6690           nop
0x00003f00      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003f04      4939d0         cmp r8, rdx
0x00003f07      0f843cfeffff   je 0x3d49
0x00003f0d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00003f10      83e95b         sub ecx, 0x5b
0x00003f13      80f921         cmp cl, 0x21
0x00003f16      77e8           ja 0x3f00                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00003f18      be01000000     mov esi, 1
0x00003f1d      48d3e6         shl rsi, cl
0x00003f20      4889f1         mov rcx, rsi
0x00003f23      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00003f2d      4885f1         test rcx, rsi
0x00003f30      74ce           je 0x3f00
0x00003f32      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003f37      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003f3c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00003f41      c74424080200.  mov dword [rsp + 8], 2
0x00003f49      807c240d00     cmp byte [rsp + 0xd], 0
0x00003f4e      7410           je 0x3f60
0x00003f50      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00003f52      b804000000     mov eax, 4
0x00003f57      0f44442408     cmove eax, dword [rsp + 8]
0x00003f5c      89442408       mov dword [rsp + 8], eax
0x00003f60      4883ec08       sub rsp, 8
0x00003f64      4889e9         mov rcx, rbp
0x00003f67      4c89ee         mov rsi, r13
0x00003f6a      ff742468       push qword [rsp + 0x68]
0x00003f6e      ff742478       push qword [rsp + 0x78]
0x00003f72      4c89f7         mov rdi, r14
0x00003f75      6a00           push 0
0x00003f77      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003f7f      448b442428     mov r8d, dword [rsp + 0x28]
0x00003f84      488b542430     mov rdx, qword [rsp + 0x30]
0x00003f89      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00003f8d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00003f92      4883c420       add rsp, 0x20
0x00003f96      4989c7         mov r15, rax
0x00003f99      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003fa1      6448331c2528.  xor rbx, qword fs:[0x28]
0x00003faa      4c89f8         mov rax, r15
0x00003fad      0f8500060000   jne 0x45b3
0x00003fb3      4881c4b80000.  add rsp, 0xb8
0x00003fba      5b             pop rbx
0x00003fbb      5d             pop rbp
0x00003fbc      415c           pop r12
0x00003fbe      415d           pop r13
0x00003fc0      415e           pop r14
0x00003fc2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003fc4      c3             ret
0x00003fc5      0f1f00         nop dword [rax]
0x00003fc8      4c89dd         mov rbp, r11
0x00003fcb      e979ffffff     jmp 0x3f49
0x00003fd0      4d39fd         cmp r13, r15
0x00003fd3      7605           jbe 0x3fda
0x00003fd5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003fda      498d4701       lea rax, [r15 + 1]
0x00003fde      4939c5         cmp r13, rax
0x00003fe1      7606           jbe 0x3fe9
0x00003fe3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003fe9      498d4702       lea rax, [r15 + 2]
0x00003fed      4939c5         cmp r13, rax
0x00003ff0      0f86ec050000   jbe 0x45e2
0x00003ff6      4c89ea         mov rdx, r13
0x00003ff9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003fff      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004004      e9d9fbffff     jmp 0x3be2
0x00004009      4489e0         mov eax, r12d
0x0000400c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00004011      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00004014      e900f6ffff     jmp 0x3619                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00004019      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000401f      e9c5f9ffff     jmp 0x39e9
0x00004024      85db           test ebx, ebx
0x00004026      0f8527f4ffff   jne 0x3453
0x0000402c      c644240d01     mov byte [rsp + 0xd], 1
0x00004031      4d85ed         test r13, r13
0x00004034      0f8590050000   jne 0x45ca
0x0000403a      488d05f44e00.  lea rax, [0x00008f35]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004041      48c744245000.  mov qword [rsp + 0x50], 0
0x0000404a      c644240e01     mov byte [rsp + 0xe], 1
0x0000404f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004054      4531e4         xor r12d, r12d
0x00004057      c644240f00     mov byte [rsp + 0xf], 0
0x0000405c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004065      4889442448     mov qword [rsp + 0x48], rax
0x0000406a      41bf01000000   mov r15d, 1
0x00004070      c74424080200.  mov dword [rsp + 8], 2
0x00004078      e916f4ffff     jmp 0x3493                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000407d      0f1f00         nop dword [rax]
0x00004080      85db           test ebx, ebx
0x00004082      0f85f5030000   jne 0x447d
0x00004088      4d85ed         test r13, r13
0x0000408b      0f8425020000   je 0x42b6
0x00004091      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00004095      c644240e01     mov byte [rsp + 0xe], 1
0x0000409a      4531e4         xor r12d, r12d
0x0000409d      c644247c00     mov byte [rsp + 0x7c], 0
0x000040a2      48c744245000.  mov qword [rsp + 0x50], 0
0x000040ab      488d05814e00.  lea rax, str.l______l                   ; 0x8f33 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000040b2      c644240f00     mov byte [rsp + 0xf], 0
0x000040b7      c644240d01     mov byte [rsp + 0xd], 1
0x000040bc      48c744241801.  mov qword [rsp + 0x18], 1
0x000040c5      41bf01000000   mov r15d, 1
0x000040cb      4889442448     mov qword [rsp + 0x48], rax
0x000040d0      e9bef3ffff     jmp 0x3493
0x000040d5      488d05574e00.  lea rax, str.l______l                   ; 0x8f33 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000040dc      c644240e01     mov byte [rsp + 0xe], 1
0x000040e1      c644247c00     mov byte [rsp + 0x7c], 0
0x000040e6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x000040e9      48c744245000.  mov qword [rsp + 0x50], 0
0x000040f2      c644240f01     mov byte [rsp + 0xf], 1
0x000040f7      c644240d01     mov byte [rsp + 0xd], 1
0x000040fc      48c744241801.  mov qword [rsp + 0x18], 1
0x00004105      4531ff         xor r15d, r15d
0x00004108      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000410d      c74424080500.  mov dword [rsp + 8], 5
0x00004115      e979f3ffff     jmp 0x3493
0x0000411a      c644240e01     mov byte [rsp + 0xe], 1
0x0000411f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004124      4531e4         xor r12d, r12d
0x00004127      48c744245000.  mov qword [rsp + 0x50], 0
0x00004130      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00004135      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00004138      c644240d01     mov byte [rsp + 0xd], 1
0x0000413d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004146      48c744244800.  mov qword [rsp + 0x48], 0
0x0000414f      e93ff3ffff     jmp 0x3493
0x00004154      837c24080a     cmp dword [rsp + 8], 0xa
0x00004159      7456           je 0x41b1
0x0000415b      488d35d54d00.  lea rsi, [0x00008f37]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00004162      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00004164      ba05000000     mov edx, 5
0x00004169      e882d3ffff     call sym.imp.dcgettext
0x0000416e      4889c1         mov rcx, rax
0x00004171      4889442468     mov qword [rsp + 0x68], rax
0x00004176      488d05ba4d00.  lea rax, [0x00008f37]                   ; "`"
0x0000417d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00004180      0f8498030000   je 0x451e
0x00004186      488d35a84d00.  lea rsi, [0x00008f35]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000418d      31ff           xor edi, edi
0x0000418f      ba05000000     mov edx, 5
0x00004194      e857d3ffff     call sym.imp.dcgettext
0x00004199      4889c1         mov rcx, rax
0x0000419c      4889442460     mov qword [rsp + 0x60], rax
0x000041a1      488d058d4d00.  lea rax, [0x00008f35]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000041a8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000041ab      0f8483030000   je 0x4534
0x000041b1      4531ff         xor r15d, r15d
0x000041b4      85db           test ebx, ebx
0x000041b6      0f84c1010000   je 0x437d
0x000041bc      85db           test ebx, ebx
0x000041be      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000041c3      0f9544240f     setne byte [rsp + 0xf]
0x000041c8      4531e4         xor r12d, r12d
0x000041cb      4889df         mov rdi, rbx
0x000041ce      e83dd3ffff     call sym.imp.strlen
0x000041d3      48895c2448     mov qword [rsp + 0x48], rbx
0x000041d8      4889442418     mov qword [rsp + 0x18], rax
0x000041dd      c644240e01     mov byte [rsp + 0xe], 1
0x000041e2      c644247c00     mov byte [rsp + 0x7c], 0
0x000041e7      48c744245000.  mov qword [rsp + 0x50], 0
0x000041f0      c644240d01     mov byte [rsp + 0xd], 1
0x000041f5      e999f2ffff     jmp 0x3493
0x000041fa      c644240e01     mov byte [rsp + 0xe], 1
0x000041ff      c644247c00     mov byte [rsp + 0x7c], 0
0x00004204      4531e4         xor r12d, r12d
0x00004207      48c744245000.  mov qword [rsp + 0x50], 0
0x00004210      c644240f00     mov byte [rsp + 0xf], 0
0x00004215      4531ff         xor r15d, r15d
0x00004218      c644240d00     mov byte [rsp + 0xd], 0
0x0000421d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004226      48c744244800.  mov qword [rsp + 0x48], 0
0x0000422f      e95ff2ffff     jmp 0x3493
0x00004234      c644240e01     mov byte [rsp + 0xe], 1
0x00004239      c644247c00     mov byte [rsp + 0x7c], 0
0x0000423e      4531e4         xor r12d, r12d
0x00004241      48c744245000.  mov qword [rsp + 0x50], 0
0x0000424a      c644240f01     mov byte [rsp + 0xf], 1
0x0000424f      c644240d01     mov byte [rsp + 0xd], 1
0x00004254      e91af2ffff     jmp 0x3473
0x00004259      4d39fd         cmp r13, r15
0x0000425c      7605           jbe 0x4263
0x0000425e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00004263      488d4102       lea rax, [rcx + 2]
0x00004267      4939c5         cmp r13, rax
0x0000426a      7606           jbe 0x4272
0x0000426c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00004272      4489e0         mov eax, r12d
0x00004275      4c8d7903       lea r15, [rcx + 3]
0x00004279      4531e4         xor r12d, r12d
0x0000427c      bb30000000     mov ebx, 0x30                           ; '0'
0x00004281      e962f3ffff     jmp 0x35e8
0x00004286      662e0f1f8400.  nop word cs:[rax + rax]
0x00004290      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004295      4c89dd         mov rbp, r11
0x00004298      885c240d       mov byte [rsp + 0xd], bl
0x0000429c      e9a8fcffff     jmp 0x3f49
0x000042a1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000042a6      4531e4         xor r12d, r12d
0x000042a9      e902fbffff     jmp 0x3db0
0x000042ae      4531d2         xor r10d, r10d
0x000042b1      e9b7fbffff     jmp 0x3e6d
0x000042b6      48c744245000.  mov qword [rsp + 0x50], 0
0x000042bf      c644240e01     mov byte [rsp + 0xe], 1
0x000042c4      4531e4         xor r12d, r12d
0x000042c7      c644247c00     mov byte [rsp + 0x7c], 0
0x000042cc      e9dafdffff     jmp 0x40ab
0x000042d1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000042d6      4c89f6         mov rsi, r14
0x000042d9      4c89e9         mov rcx, r13
0x000042dc      4889d8         mov rax, rbx
0x000042df      4889df         mov rdi, rbx
0x000042e2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000042e8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000042ed      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x000042f5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x000042f8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000042fe      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004306      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000430b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004310      7326           jae 0x4338
0x00004312      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004315      7510           jne 0x4327
0x00004317      eb1f           jmp 0x4338
0x00004319      0f1f80000000.  nop dword [rax]
0x00004320      41803c0100     cmp byte [r9 + rax], 0
0x00004325      740e           je 0x4335
0x00004327      4883c001       add rax, 1
0x0000432b      488d540500     lea rdx, [rbp + rax]
0x00004330      4939d3         cmp r11, rdx
0x00004333      77eb           ja 0x4320
0x00004335      4889c7         mov rdi, rax
0x00004338      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000433d      4531e4         xor r12d, r12d
0x00004340      e961faffff     jmp 0x3da6
0x00004345      4889df         mov rdi, rbx
0x00004348      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000434e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004353      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004359      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004361      4531e4         xor r12d, r12d
0x00004364      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004369      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000436e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004373      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004378      e929faffff     jmp 0x3da6
0x0000437d      488b542468     mov rdx, qword [rsp + 0x68]
0x00004382      0fb602         movzx eax, byte [rdx]
0x00004385      84c0           test al, al
0x00004387      0f842ffeffff   je 0x41bc
0x0000438d      0f1f00         nop dword [rax]
0x00004390      4d39fd         cmp r13, r15
0x00004393      7604           jbe 0x4399
0x00004395      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00004399      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000439d      420fb6043a     movzx eax, byte [rdx + r15]
0x000043a2      84c0           test al, al
0x000043a4      75ea           jne 0x4390
0x000043a6      e911feffff     jmp 0x41bc
0x000043ab      89d0           mov eax, edx
0x000043ad      e955f5ffff     jmp 0x3907
0x000043b2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000043b6      80fb3e         cmp bl, 0x3e
0x000043b9      0f8771f8ffff   ja 0x3c30
0x000043bf      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000043c9      480fa3d8       bt rax, rbx
0x000043cd      0f835df8ffff   jae 0x3c30
0x000043d3      807c240f00     cmp byte [rsp + 0xf], 0
0x000043d8      0f85e4010000   jne 0x45c2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x000043de      4d39fd         cmp r13, r15
0x000043e1      7605           jbe 0x43e8
0x000043e3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x000043e8      498d4701       lea rax, [r15 + 1]
0x000043ec      4939c5         cmp r13, rax
0x000043ef      7606           jbe 0x43f7
0x000043f1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000043f7      498d4702       lea rax, [r15 + 2]
0x000043fb      4939c5         cmp r13, rax
0x000043fe      7606           jbe 0x4406
0x00004400      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004406      498d4703       lea rax, [r15 + 3]
0x0000440a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000440d      7606           jbe 0x4415
0x0000440f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00004415      4983c704       add r15, 4
0x00004419      31d2           xor edx, edx
0x0000441b      4531e4         xor r12d, r12d
0x0000441e      31c0           xor eax, eax
0x00004420      4889cd         mov rbp, rcx
0x00004423      e9c0f1ffff     jmp 0x35e8
0x00004428      85db           test ebx, ebx
0x0000442a      0f8488010000   je 0x45b8
0x00004430      488d05fe4a00.  lea rax, [0x00008f35]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004437      c644240e01     mov byte [rsp + 0xe], 1
0x0000443c      c644247c00     mov byte [rsp + 0x7c], 0
0x00004441      4531e4         xor r12d, r12d
0x00004444      48c744245000.  mov qword [rsp + 0x50], 0
0x0000444d      c644240f01     mov byte [rsp + 0xf], 1
0x00004452      c644240d00     mov byte [rsp + 0xd], 0
0x00004457      48c744241801.  mov qword [rsp + 0x18], 1
0x00004460      4531ff         xor r15d, r15d
0x00004463      4889442448     mov qword [rsp + 0x48], rax
0x00004468      e926f0ffff     jmp 0x3493
0x0000446d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00004470      4c89dd         mov rbp, r11
0x00004473      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004478      e9ccfaffff     jmp 0x3f49
0x0000447d      488d05af4a00.  lea rax, str.l______l                   ; 0x8f33 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004484      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00004489      c644247c00     mov byte [rsp + 0x7c], 0
0x0000448e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00004491      48c744245000.  mov qword [rsp + 0x50], 0
0x0000449a      c644240f01     mov byte [rsp + 0xf], 1
0x0000449f      c644240d01     mov byte [rsp + 0xd], 1
0x000044a4      48c744241801.  mov qword [rsp + 0x18], 1
0x000044ad      4531ff         xor r15d, r15d
0x000044b0      4889442448     mov qword [rsp + 0x48], rax
0x000044b5      e9d9efffff     jmp 0x3493
0x000044ba      89d0           mov eax, edx
0x000044bc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000044c1      4885db         test rbx, rbx
0x000044c4      742c           je 0x44f2
0x000044c6      84c0           test al, al
0x000044c8      7428           je 0x44f2
0x000044ca      0fb60b         movzx ecx, byte [rbx]
0x000044cd      4889d8         mov rax, rbx
0x000044d0      84c9           test cl, cl
0x000044d2      741e           je 0x44f2
0x000044d4      4c89fa         mov rdx, r15
0x000044d7      4c29f8         sub rax, r15
0x000044da      4939d5         cmp r13, rdx
0x000044dd      7604           jbe 0x44e3
0x000044df      41880c16       mov byte [r14 + rdx], cl
0x000044e3      4883c201       add rdx, 1
0x000044e7      0fb60c10       movzx ecx, byte [rax + rdx]
0x000044eb      84c9           test cl, cl
0x000044ed      75eb           jne 0x44da
0x000044ef      4989d7         mov r15, rdx
0x000044f2      4d39fd         cmp r13, r15
0x000044f5      0f869efaffff   jbe 0x3f99
0x000044fb      43c6043e00     mov byte [r14 + r15], 0
0x00004500      e994faffff     jmp 0x3f99
0x00004505      837c240802     cmp dword [rsp + 8], 2
0x0000450a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000450f      4c89dd         mov rbp, r11
0x00004512      0f94c0         sete al
0x00004515      885c240d       mov byte [rsp + 0xd], bl
0x00004519      e92bfaffff     jmp 0x3f49
0x0000451e      8b742408       mov esi, dword [rsp + 8]
0x00004522      4889cf         mov rdi, rcx
0x00004525      e8a6edffff     call sym.gettext_quote.part.1
0x0000452a      4889442468     mov qword [rsp + 0x68], rax
0x0000452f      e952fcffff     jmp 0x4186
0x00004534      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004538      4889cf         mov rdi, rcx
0x0000453b      e890edffff     call sym.gettext_quote.part.1
0x00004540      4889442460     mov qword [rsp + 0x60], rax
0x00004545      e967fcffff     jmp 0x41b1
0x0000454a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000454f      4c89dd         mov rbp, r11
0x00004552      89d0           mov eax, edx
0x00004554      885c240d       mov byte [rsp + 0xd], bl
0x00004558      e9ecf9ffff     jmp 0x3f49
0x0000455d      4883ec08       sub rsp, 8
0x00004561      41b805000000   mov r8d, 5
0x00004567      4c89d9         mov rcx, r11
0x0000456a      ff742468       push qword [rsp + 0x68]
0x0000456e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00004572      4c89f7         mov rdi, r14
0x00004575      ff742438       push qword [rsp + 0x38]
0x00004579      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004581      488b542430     mov rdx, qword [rsp + 0x30]
0x00004586      488b742470     mov rsi, qword [rsp + 0x70]
0x0000458b      e830eeffff     call sym.quotearg_buffer_restyled
0x00004590      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00004594      4989c7         mov r15, rax
0x00004597      e9fdf9ffff     jmp 0x3f99
0x0000459c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000045a1      e916ffffff     jmp 0x44bc
0x000045a6      c74424080200.  mov dword [rsp + 8], 2
0x000045ae      e996f9ffff     jmp 0x3f49
0x000045b3      e868cfffff     call sym.imp.__stack_chk_fail
0x000045b8      c644240d00     mov byte [rsp + 0xd], 0
0x000045bd      e96ffaffff     jmp 0x4031
0x000045c2      4c89dd         mov rbp, r11
0x000045c5      e996f9ffff     jmp 0x3f60
0x000045ca      c644240e01     mov byte [rsp + 0xe], 1
0x000045cf      31c0           xor eax, eax
0x000045d1      4531e4         xor r12d, r12d
0x000045d4      48c744245000.  mov qword [rsp + 0x50], 0
0x000045dd      e9a2f5ffff     jmp 0x3b84
0x000045e2      4c89ea         mov rdx, r13
0x000045e5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000045ea      e9f3f5ffff     jmp 0x3be2
0x000045ef      e84cceffff     call sym.imp.abort
0x000045f4      6690           nop
0x000045f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00004600      4157           push r15
0x00004602      4156           push r14
0x00004604      4c63ff         movsxd r15, edi
0x00004607      4155           push r13
0x00004609      4154           push r12
0x0000460b      4989d6         mov r14, rdx
0x0000460e      55             push rbp
0x0000460f      53             push rbx
0x00004610      4889cd         mov rbp, rcx
0x00004613      4883ec28       sub rsp, 0x28
0x00004617      4889742408     mov qword [rsp + 8], rsi
0x0000461c      e82fceffff     call sym.imp.__errno_location
0x00004621      4989c5         mov r13, rax
0x00004624      8b00           mov eax, dword [rax]
0x00004626      4585ff         test r15d, r15d
0x00004629      488b1d307a20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20c060:8]=0x20c070 obj.slotvec0 ; "p\xc0 "
0x00004630      89442418       mov dword [rsp + 0x18], eax
0x00004634      0f8867010000   js 0x47a1
0x0000463a      44393d177a20.  cmp dword [obj.nslots], r15d            ; [0x20c058:4]=1
0x00004641      7f62           jg 0x46a5
0x00004643      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000464a      0f8456010000   je 0x47a6
0x00004650      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004654      488d05157a20.  lea rax, obj.slotvec0                   ; 0x20c070
0x0000465b      4963f4         movsxd rsi, r12d
0x0000465e      48c1e604       shl rsi, 4
0x00004662      4839c3         cmp rbx, rax
0x00004665      0f8415010000   je 0x4780
0x0000466b      4889df         mov rdi, rbx
0x0000466e      e85d130000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00004673      4889c3         mov rbx, rax
0x00004676      488905e37920.  mov qword [obj.slotvec], rax            ; [0x20c060:8]=0x20c070 obj.slotvec0 ; "p\xc0 "
0x0000467d      48633dd47920.  movsxd rdi, dword [obj.nslots]          ; [0x20c058:4]=1
0x00004684      4489e2         mov edx, r12d
0x00004687      31f6           xor esi, esi
0x00004689      29fa           sub edx, edi
0x0000468b      48c1e704       shl rdi, 4
0x0000468f      4863d2         movsxd rdx, edx
0x00004692      4801df         add rdi, rbx
0x00004695      48c1e204       shl rdx, 4
0x00004699      e802cfffff     call sym.imp.memset
0x0000469e      448925b37920.  mov dword [obj.nslots], r12d            ; [0x20c058:4]=1
0x000046a5      8b4504         mov eax, dword [rbp + 4]
0x000046a8      49c1e704       shl r15, 4
0x000046ac      4883ec08       sub rsp, 8
0x000046b0      4c01fb         add rbx, r15
0x000046b3      4c8d7d08       lea r15, [rbp + 8]
0x000046b7      448b4500       mov r8d, dword [rbp]
0x000046bb      4c8b1b         mov r11, qword [rbx]
0x000046be      4c8b6308       mov r12, qword [rbx + 8]
0x000046c2      4c89f1         mov rcx, r14
0x000046c5      83c801         or eax, 1
0x000046c8      89442424       mov dword [rsp + 0x24], eax
0x000046cc      ff7530         push qword [rbp + 0x30]
0x000046cf      4189c1         mov r9d, eax
0x000046d2      ff7528         push qword [rbp + 0x28]
0x000046d5      4157           push r15
0x000046d7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000046da      488b542428     mov rdx, qword [rsp + 0x28]
0x000046df      4c89e7         mov rdi, r12
0x000046e2      4c895c2430     mov qword [rsp + 0x30], r11
0x000046e7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x000046ec      4883c420       add rsp, 0x20
0x000046f0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x000046f5      4939c3         cmp r11, rax
0x000046f8      7767           ja 0x4761
0x000046fa      488d7001       lea rsi, [rax + 1]
0x000046fe      488d05db7920.  lea rax, obj.slot0                      ; 0x20c0e0
0x00004705      4939c4         cmp r12, rax
0x00004708      488933         mov qword [rbx], rsi
0x0000470b      7412           je 0x471f
0x0000470d      4c89e7         mov rdi, r12
0x00004710      4889742410     mov qword [rsp + 0x10], rsi
0x00004715      e816cdffff     call sym.imp.free
0x0000471a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000471f      4889f7         mov rdi, rsi
0x00004722      4889742410     mov qword [rsp + 0x10], rsi
0x00004727      e844120000     call sym.xmalloc
0x0000472c      4883ec08       sub rsp, 8
0x00004730      48894308       mov qword [rbx + 8], rax
0x00004734      448b4500       mov r8d, dword [rbp]
0x00004738      ff7530         push qword [rbp + 0x30]
0x0000473b      ff7528         push qword [rbp + 0x28]
0x0000473e      4c89f1         mov rcx, r14
0x00004741      4157           push r15
0x00004743      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004748      4889c7         mov rdi, rax
0x0000474b      488b542428     mov rdx, qword [rsp + 0x28]
0x00004750      488b742430     mov rsi, qword [rsp + 0x30]
0x00004755      4989c4         mov r12, rax
0x00004758      e863ecffff     call sym.quotearg_buffer_restyled
0x0000475d      4883c420       add rsp, 0x20
0x00004761      8b442418       mov eax, dword [rsp + 0x18]
0x00004765      41894500       mov dword [r13], eax
0x00004769      4883c428       add rsp, 0x28
0x0000476d      4c89e0         mov rax, r12
0x00004770      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004771      5d             pop rbp
0x00004772      415c           pop r12
0x00004774      415d           pop r13
0x00004776      415e           pop r14
0x00004778      415f           pop r15
0x0000477a      c3             ret
0x0000477b      0f1f440000     nop dword [rax + rax]
0x00004780      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004782      e849120000     call sym.xrealloc
0x00004787      660f6f05e178.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000478f      4889c3         mov rbx, rax
0x00004792      488905c77820.  mov qword [obj.slotvec], rax            ; [0x20c060:8]=0x20c070 obj.slotvec0 ; "p\xc0 "
0x00004799      0f1100         movups xmmword [rax], xmm0
0x0000479c      e9dcfeffff     jmp 0x467d
0x000047a1      e89accffff     call sym.imp.abort
0x000047a6      e815140000     call sym.xalloc_die
0x000047ab      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x000047b0      4154           push r12
0x000047b2      55             push rbp
0x000047b3      53             push rbx
0x000047b4      4889fb         mov rbx, rdi
0x000047b7      e894ccffff     call sym.imp.__errno_location
0x000047bc      448b20         mov r12d, dword [rax]
0x000047bf      4889c5         mov rbp, rax
0x000047c2      488d05177a20.  lea rax, obj.default_quoting_options    ; 0x20c1e0
0x000047c9      4885db         test rbx, rbx
0x000047cc      be38000000     mov esi, 0x38                           ; '8'
0x000047d1      480f44d8       cmove rbx, rax
0x000047d5      4889df         mov rdi, rbx
0x000047d8      e893130000     call sym.xmemdup
0x000047dd      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000047e1      5b             pop rbx
0x000047e2      5d             pop rbp
0x000047e3      415c           pop r12
0x000047e5      c3             ret
0x000047e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x000047f0      488d05e97920.  lea rax, obj.default_quoting_options    ; 0x20c1e0
0x000047f7      4885ff         test rdi, rdi
0x000047fa      480f44f8       cmove rdi, rax
0x000047fe      8b07           mov eax, dword [rdi]
0x00004800      c3             ret
0x00004801      0f1f440000     nop dword [rax + rax]
0x00004806      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004810      488d05c97920.  lea rax, obj.default_quoting_options    ; 0x20c1e0
0x00004817      4885ff         test rdi, rdi
0x0000481a      480f44f8       cmove rdi, rax
0x0000481e      8937           mov dword [rdi], esi
0x00004820      c3             ret
0x00004821      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004826      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004830      488d05a97920.  lea rax, obj.default_quoting_options    ; 0x20c1e0
0x00004837      4885ff         test rdi, rdi
0x0000483a      89f1           mov ecx, esi
0x0000483c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004840      89f0           mov eax, esi
0x00004842      83e11f         and ecx, 0x1f
0x00004845      c0e805         shr al, 5
0x00004848      0fb6c0         movzx eax, al
0x0000484b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004850      8b37           mov esi, dword [rdi]
0x00004852      89f0           mov eax, esi
0x00004854      d3e8           shr eax, cl
0x00004856      31c2           xor edx, eax
0x00004858      83e001         and eax, 1
0x0000485b      83e201         and edx, 1
0x0000485e      d3e2           shl edx, cl
0x00004860      31f2           xor edx, esi
0x00004862      8917           mov dword [rdi], edx
0x00004864      c3             ret
0x00004865      90             nop
0x00004866      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004870      488d05697920.  lea rax, obj.default_quoting_options    ; 0x20c1e0
0x00004877      4885ff         test rdi, rdi
0x0000487a      480f44f8       cmove rdi, rax
0x0000487e      8b4704         mov eax, dword [rdi + 4]
0x00004881      897704         mov dword [rdi + 4], esi
0x00004884      c3             ret
0x00004885      90             nop
0x00004886      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004890      488d05497920.  lea rax, obj.default_quoting_options    ; 0x20c1e0
0x00004897      4885ff         test rdi, rdi
0x0000489a      480f44f8       cmove rdi, rax
0x0000489e      4885f6         test rsi, rsi
0x000048a1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000048a7      740e           je 0x48b7
0x000048a9      4885d2         test rdx, rdx
0x000048ac      7409           je 0x48b7
0x000048ae      48897728       mov qword [rdi + 0x28], rsi
0x000048b2      48895730       mov qword [rdi + 0x30], rdx
0x000048b6      c3             ret
0x000048b7      4883ec08       sub rsp, 8
0x000048bb      e880cbffff     call sym.imp.abort
;-- quotearg_buffer:
0x000048c0      4157           push r15
0x000048c2      4156           push r14
0x000048c4      488d05157920.  lea rax, obj.default_quoting_options    ; 0x20c1e0
0x000048cb      4155           push r13
0x000048cd      4154           push r12
0x000048cf      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x000048d2      55             push rbp
0x000048d3      53             push rbx
0x000048d4      4c89c3         mov rbx, r8
0x000048d7      4989f6         mov r14, rsi
0x000048da      4989d7         mov r15, rdx
0x000048dd      4883ec18       sub rsp, 0x18
0x000048e1      4d85c0         test r8, r8
0x000048e4      480f44d8       cmove rbx, rax
0x000048e8      48894c2408     mov qword [rsp + 8], rcx
0x000048ed      e85ecbffff     call sym.imp.__errno_location
0x000048f2      448b20         mov r12d, dword [rax]
0x000048f5      4889c5         mov rbp, rax
0x000048f8      488d4308       lea rax, [rbx + 8]
0x000048fc      4883ec08       sub rsp, 8
0x00004900      448b4b04       mov r9d, dword [rbx + 4]
0x00004904      ff7330         push qword [rbx + 0x30]
0x00004907      448b03         mov r8d, dword [rbx]
0x0000490a      ff7328         push qword [rbx + 0x28]
0x0000490d      4c89fa         mov rdx, r15
0x00004910      50             push rax
0x00004911      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004916      4c89f6         mov rsi, r14
0x00004919      4c89ef         mov rdi, r13
0x0000491c      e89feaffff     call sym.quotearg_buffer_restyled
0x00004921      44896500       mov dword [rbp], r12d
0x00004925      4883c438       add rsp, 0x38
0x00004929      5b             pop rbx
0x0000492a      5d             pop rbp
0x0000492b      415c           pop r12
0x0000492d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000492f      415e           pop r14
0x00004931      415f           pop r15
0x00004933      c3             ret
0x00004934      6690           nop
0x00004936      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004940      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004942      4156           push r14
0x00004944      488d05957820.  lea rax, obj.default_quoting_options    ; 0x20c1e0
0x0000494b      4155           push r13
0x0000494d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000494f      4989d4         mov r12, rdx
0x00004952      55             push rbp
0x00004953      53             push rbx
0x00004954      4889cb         mov rbx, rcx
0x00004957      4989fe         mov r14, rdi
0x0000495a      4989f7         mov r15, rsi
0x0000495d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004961      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004964      480f44d8       cmove rbx, rax
0x00004968      31ed           xor ebp, ebp
0x0000496a      e8e1caffff     call sym.imp.__errno_location
0x0000496f      4d85e4         test r12, r12
0x00004972      4989c5         mov r13, rax
0x00004975      8b00           mov eax, dword [rax]
0x00004977      400f94c5       sete bpl
0x0000497b      0b6b04         or ebp, dword [rbx + 4]
0x0000497e      4c8d5308       lea r10, [rbx + 8]
0x00004982      4883ec08       sub rsp, 8
0x00004986      448b03         mov r8d, dword [rbx]
0x00004989      4c89f9         mov rcx, r15
0x0000498c      89442414       mov dword [rsp + 0x14], eax
0x00004990      ff7330         push qword [rbx + 0x30]
0x00004993      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004996      ff7328         push qword [rbx + 0x28]
0x00004999      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000499b      31f6           xor esi, esi
0x0000499d      4189e9         mov r9d, ebp
0x000049a0      31ff           xor edi, edi
0x000049a2      4c89542440     mov qword [rsp + 0x40], r10
0x000049a7      e814eaffff     call sym.quotearg_buffer_restyled
0x000049ac      488d7001       lea rsi, [rax + 1]
0x000049b0      4889442448     mov qword [rsp + 0x48], rax
0x000049b5      4883c420       add rsp, 0x20
0x000049b9      4889f7         mov rdi, rsi
0x000049bc      4889742418     mov qword [rsp + 0x18], rsi
0x000049c1      e8aa0f0000     call sym.xmalloc
0x000049c6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x000049cb      4883ec08       sub rsp, 8
0x000049cf      ff7330         push qword [rbx + 0x30]
0x000049d2      ff7328         push qword [rbx + 0x28]
0x000049d5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000049da      4189e9         mov r9d, ebp
0x000049dd      448b03         mov r8d, dword [rbx]
0x000049e0      4c89f9         mov rcx, r15
0x000049e3      4c89f2         mov rdx, r14
0x000049e6      4889c7         mov rdi, rax
0x000049e9      4152           push r10
0x000049eb      488b742438     mov rsi, qword [rsp + 0x38]
0x000049f0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x000049f5      8b44242c       mov eax, dword [rsp + 0x2c]
0x000049f9      4883c420       add rsp, 0x20
0x000049fd      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004a00      41894500       mov dword [r13], eax
0x00004a04      7409           je 0x4a0f
0x00004a06      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00004a0b      4d891c24       mov qword [r12], r11
0x00004a0f      488b442410     mov rax, qword [rsp + 0x10]
0x00004a14      4883c438       add rsp, 0x38
0x00004a18      5b             pop rbx
0x00004a19      5d             pop rbp
0x00004a1a      415c           pop r12
0x00004a1c      415d           pop r13
0x00004a1e      415e           pop r14
0x00004a20      415f           pop r15
0x00004a22      c3             ret
0x00004a23      0f1f00         nop dword [rax]
0x00004a26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004a30      4889d1         mov rcx, rdx
0x00004a33      31d2           xor edx, edx
0x00004a35      e906ffffff     jmp sym.quotearg_alloc_mem
0x00004a3a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004a40      8b0512762000   mov eax, dword [obj.nslots]             ; [0x20c058:4]=1
0x00004a46      4154           push r12
0x00004a48      4c8b25117620.  mov r12, qword [obj.slotvec]            ; [0x20c060:8]=0x20c070 obj.slotvec0 ; "p\xc0 "
0x00004a4f      55             push rbp
0x00004a50      53             push rbx
0x00004a51      83f801         cmp eax, 1
0x00004a54      7e2b           jle 0x4a81                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004a56      83e802         sub eax, 2
0x00004a59      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004a5e      48c1e004       shl rax, 4
0x00004a62      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004a67      660f1f840000.  nop word [rax + rax]
0x00004a70      488b3b         mov rdi, qword [rbx]
0x00004a73      4883c310       add rbx, 0x10
0x00004a77      e8b4c9ffff     call sym.imp.free
0x00004a7c      4839eb         cmp rbx, rbp
0x00004a7f      75ef           jne 0x4a70
0x00004a81      498b7c2408     mov rdi, qword [r12 + 8]
0x00004a86      488d1d537620.  lea rbx, obj.slot0                      ; 0x20c0e0
0x00004a8d      4839df         cmp rdi, rbx
0x00004a90      7417           je 0x4aa9
0x00004a92      e899c9ffff     call sym.imp.free
0x00004a97      48c705ce7520.  mov qword [obj.slotvec0], 0x100         ; [0x20c070:8]=256
0x00004aa2      48891dcf7520.  mov qword [0x0020c078], rbx             ; [0x20c078:8]=0x20c0e0 obj.slot0
0x00004aa9      488d1dc07520.  lea rbx, obj.slotvec0                   ; 0x20c070
0x00004ab0      4939dc         cmp r12, rbx
0x00004ab3      740f           je 0x4ac4
0x00004ab5      4c89e7         mov rdi, r12
0x00004ab8      e873c9ffff     call sym.imp.free
0x00004abd      48891d9c7520.  mov qword [obj.slotvec], rbx            ; [0x20c060:8]=0x20c070 obj.slotvec0 ; "p\xc0 "
0x00004ac4      5b             pop rbx
0x00004ac5      c70589752000.  mov dword [obj.nslots], 1               ; [0x20c058:4]=1
0x00004acf      5d             pop rbp
0x00004ad0      415c           pop r12
0x00004ad2      c3             ret
0x00004ad3      0f1f00         nop dword [rax]
0x00004ad6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004ae0      488d0df97620.  lea rcx, obj.default_quoting_options    ; 0x20c1e0
0x00004ae7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004aee      e90dfbffff     jmp sym.quotearg_n_options
0x00004af3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004af6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004b00      488d0dd97620.  lea rcx, obj.default_quoting_options    ; 0x20c1e0
0x00004b07      e9f4faffff     jmp sym.quotearg_n_options
0x00004b0c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004b10      488d0dc97620.  lea rcx, obj.default_quoting_options    ; 0x20c1e0
0x00004b17      4889fe         mov rsi, rdi
0x00004b1a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004b21      31ff           xor edi, edi
0x00004b23      e9d8faffff     jmp sym.quotearg_n_options
0x00004b28      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004b30      488d0da97620.  lea rcx, obj.default_quoting_options    ; 0x20c1e0
0x00004b37      4889f2         mov rdx, rsi
0x00004b3a      4889fe         mov rsi, rdi
0x00004b3d      31ff           xor edi, edi
0x00004b3f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004b44      6690           nop
0x00004b46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004b50      4883ec48       sub rsp, 0x48
0x00004b54      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004b57      64488b142528.  mov rdx, qword fs:[0x28]
0x00004b60      4889542438     mov qword [rsp + 0x38], rdx
0x00004b65      31d2           xor edx, edx
0x00004b67      83fe0a         cmp esi, 0xa
0x00004b6a      7468           je 0x4bd4
0x00004b6c      893424         mov dword [rsp], esi
0x00004b6f      4889e1         mov rcx, rsp
0x00004b72      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004b79      4889c6         mov rsi, rax
0x00004b7c      48c744240400.  mov qword [rsp + 4], 0
0x00004b85      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004b8e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004b97      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004ba0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004ba9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004bb2      c74424340000.  mov dword [rsp + 0x34], 0
0x00004bba      e841faffff     call sym.quotearg_n_options
0x00004bbf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004bc4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004bcd      750a           jne 0x4bd9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00004bcf      4883c448       add rsp, 0x48
0x00004bd3      c3             ret
0x00004bd4      e867c8ffff     call sym.imp.abort
0x00004bd9      e842c9ffff     call sym.imp.__stack_chk_fail
0x00004bde      6690           nop
;-- quotearg_n_style_mem:
0x00004be0      4883ec48       sub rsp, 0x48
0x00004be4      4889d0         mov rax, rdx
0x00004be7      4889ca         mov rdx, rcx
0x00004bea      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004bf3      48894c2438     mov qword [rsp + 0x38], rcx
0x00004bf8      31c9           xor ecx, ecx
0x00004bfa      83fe0a         cmp esi, 0xa
0x00004bfd      7461           je 0x4c60
0x00004bff      893424         mov dword [rsp], esi
0x00004c02      4889e1         mov rcx, rsp
0x00004c05      4889c6         mov rsi, rax
0x00004c08      48c744240400.  mov qword [rsp + 4], 0
0x00004c11      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004c1a      48c744241400.  mov qword [rsp + 0x14], 0
0x00004c23      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004c2c      48c744242400.  mov qword [rsp + 0x24], 0
0x00004c35      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004c3e      c74424340000.  mov dword [rsp + 0x34], 0
0x00004c46      e8b5f9ffff     call sym.quotearg_n_options
0x00004c4b      488b542438     mov rdx, qword [rsp + 0x38]
0x00004c50      644833142528.  xor rdx, qword fs:[0x28]
0x00004c59      750a           jne 0x4c65
0x00004c5b      4883c448       add rsp, 0x48
0x00004c5f      c3             ret
0x00004c60      e8dbc7ffff     call sym.imp.abort
0x00004c65      e8b6c8ffff     call sym.imp.__stack_chk_fail
0x00004c6a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004c70      4889f2         mov rdx, rsi
0x00004c73      89fe           mov esi, edi
0x00004c75      31ff           xor edi, edi
0x00004c77      e9d4feffff     jmp sym.quotearg_n_style
0x00004c7c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004c80      4889d1         mov rcx, rdx
0x00004c83      4889f2         mov rdx, rsi
0x00004c86      89fe           mov esi, edi
0x00004c88      31ff           xor edi, edi
0x00004c8a      e951ffffff     jmp sym.quotearg_n_style_mem
0x00004c8f      90             nop
;-- quotearg_char_mem:
0x00004c90      4883ec48       sub rsp, 0x48
0x00004c94      89d1           mov ecx, edx
0x00004c96      64488b042528.  mov rax, qword fs:[0x28]
0x00004c9f      4889442438     mov qword [rsp + 0x38], rax
0x00004ca4      31c0           xor eax, eax
0x00004ca6      488b05637520.  mov rax, qword [0x0020c210]             ; [0x20c210:8]=0
0x00004cad      4989e0         mov r8, rsp
0x00004cb0      83e11f         and ecx, 0x1f
0x00004cb3      660f6f052575.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004cbb      4889442430     mov qword [rsp + 0x30], rax
0x00004cc0      89d0           mov eax, edx
0x00004cc2      0f290424       movaps xmmword [rsp], xmm0
0x00004cc6      c0e805         shr al, 5
0x00004cc9      0fb6c0         movzx eax, al
0x00004ccc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004cd1      660f6f051775.  movdqa xmm0, xmmword [0x0020c1f0]
0x00004cd9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004cde      660f6f051a75.  movdqa xmm0, xmmword [0x0020c200]
0x00004ce6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004ceb      418b11         mov edx, dword [r9]
0x00004cee      89d0           mov eax, edx
0x00004cf0      d3e8           shr eax, cl
0x00004cf2      f7d0           not eax
0x00004cf4      83e001         and eax, 1
0x00004cf7      d3e0           shl eax, cl
0x00004cf9      4c89c1         mov rcx, r8
0x00004cfc      31d0           xor eax, edx
0x00004cfe      4889f2         mov rdx, rsi
0x00004d01      4889fe         mov rsi, rdi
0x00004d04      418901         mov dword [r9], eax
0x00004d07      31ff           xor edi, edi
0x00004d09      e8f2f8ffff     call sym.quotearg_n_options
0x00004d0e      488b742438     mov rsi, qword [rsp + 0x38]
0x00004d13      644833342528.  xor rsi, qword fs:[0x28]
0x00004d1c      7505           jne 0x4d23
0x00004d1e      4883c448       add rsp, 0x48
0x00004d22      c3             ret
0x00004d23      e8f8c7ffff     call sym.imp.__stack_chk_fail
0x00004d28      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004d30      400fbed6       movsx edx, sil
0x00004d34      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004d3b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00004d40      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004d45      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004d4c      e93fffffff     jmp sym.quotearg_char_mem
0x00004d51      0f1f440000     nop dword [rax + rax]
0x00004d56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004d60      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004d65      e926ffffff     jmp sym.quotearg_char_mem
0x00004d6a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004d70      4883ec48       sub rsp, 0x48
0x00004d74      4889d0         mov rax, rdx
0x00004d77      64488b142528.  mov rdx, qword fs:[0x28]
0x00004d80      4889542438     mov qword [rsp + 0x38], rdx
0x00004d85      31d2           xor edx, edx
0x00004d87      83fe0a         cmp esi, 0xa
0x00004d8a      7468           je 0x4df4
0x00004d8c      893424         mov dword [rsp], esi
0x00004d8f      4889e1         mov rcx, rsp
0x00004d92      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004d99      4889c6         mov rsi, rax
0x00004d9c      48c744240400.  mov qword [rsp + 4], 0
0x00004da5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00004dae      48c744241400.  mov qword [rsp + 0x14], 0
0x00004db7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004dc0      48c744242400.  mov qword [rsp + 0x24], 0
0x00004dc9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004dd2      c74424340000.  mov dword [rsp + 0x34], 0
0x00004dda      e821f8ffff     call sym.quotearg_n_options
0x00004ddf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004de4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004ded      750a           jne 0x4df9
0x00004def      4883c448       add rsp, 0x48
0x00004df3      c3             ret
0x00004df4      e847c6ffff     call sym.imp.abort
0x00004df9      e822c7ffff     call sym.imp.__stack_chk_fail
0x00004dfe      6690           nop
;-- quotearg_n_custom_mem:
0x00004e00      4883ec48       sub rsp, 0x48
0x00004e04      4989c9         mov r9, rcx
0x00004e07      488b0d027420.  mov rcx, qword [0x0020c210]             ; [0x20c210:8]=0
0x00004e0e      660f6f05ca73.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004e16      64488b042528.  mov rax, qword fs:[0x28]
0x00004e1f      4889442438     mov qword [rsp + 0x38], rax
0x00004e24      31c0           xor eax, eax
0x00004e26      0f290424       movaps xmmword [rsp], xmm0
0x00004e2a      4885f6         test rsi, rsi
0x00004e2d      48894c2430     mov qword [rsp + 0x30], rcx
0x00004e32      c704240a0000.  mov dword [rsp], 0xa
0x00004e39      660f6f05af73.  movdqa xmm0, xmmword [0x0020c1f0]
0x00004e41      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004e46      660f6f05b273.  movdqa xmm0, xmmword [0x0020c200]
0x00004e4e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004e53      7432           je 0x4e87
0x00004e55      4885d2         test rdx, rdx
0x00004e58      742d           je 0x4e87
0x00004e5a      4889742428     mov qword [rsp + 0x28], rsi
0x00004e5f      4889542430     mov qword [rsp + 0x30], rdx
0x00004e64      4889e1         mov rcx, rsp
0x00004e67      4c89c2         mov rdx, r8
0x00004e6a      4c89ce         mov rsi, r9
0x00004e6d      e88ef7ffff     call sym.quotearg_n_options
0x00004e72      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004e77      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004e80      750a           jne 0x4e8c
0x00004e82      4883c448       add rsp, 0x48
0x00004e86      c3             ret
0x00004e87      e8b4c5ffff     call sym.imp.abort
0x00004e8c      e88fc6ffff     call sym.imp.__stack_chk_fail
0x00004e91      0f1f440000     nop dword [rax + rax]
0x00004e96      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004ea0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004ea7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00004eac      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004eb0      4889d1         mov rcx, rdx
0x00004eb3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004eba      4889f2         mov rdx, rsi
0x00004ebd      4889fe         mov rsi, rdi
0x00004ec0      31ff           xor edi, edi
0x00004ec2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004ec7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004ed0      4989c8         mov r8, rcx
0x00004ed3      4889d1         mov rcx, rdx
0x00004ed6      4889f2         mov rdx, rsi
0x00004ed9      4889fe         mov rsi, rdi
0x00004edc      31ff           xor edi, edi
0x00004ede      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004ee3      0f1f00         nop dword [rax]
0x00004ee6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004ef0      488d0d297120.  lea rcx, obj.quote_quoting_options      ; 0x20c020
0x00004ef7      e904f7ffff     jmp sym.quotearg_n_options
0x00004efc      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004f00      488d0d197120.  lea rcx, obj.quote_quoting_options      ; 0x20c020
0x00004f07      4889f2         mov rdx, rsi
0x00004f0a      4889fe         mov rsi, rdi
0x00004f0d      31ff           xor edi, edi
0x00004f0f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00004f14      6690           nop
0x00004f16      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00004f20      488d0df97020.  lea rcx, obj.quote_quoting_options      ; 0x20c020
0x00004f27      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004f2e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004f33      0f1f00         nop dword [rax]
0x00004f36      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00004f40      488d0dd97020.  lea rcx, obj.quote_quoting_options      ; 0x20c020
0x00004f47      4889fe         mov rsi, rdi
0x00004f4a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004f51      31ff           xor edi, edi
0x00004f53      e9a8f6ffff     jmp sym.quotearg_n_options
0x00004f58      0f1f84000000.  nop dword [rax + rax]
;-- fwrite_success_callback:
0x00004f60      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/unicodeio.c:164
0x00004f64      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/unicodeio.c:171
0x00004f67      4889f2         mov rdx, rsi
0x00004f6a      be01000000     mov esi, 1
0x00004f6f      e87cc7ffff     call sym.imp.fwrite
0x00004f74      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/unicodeio.c:173
0x00004f76      4883c408       add rsp, 8
0x00004f7a      c3             ret
0x00004f7b      0f1f440000     nop dword [rax + rax]
;-- fallback_failure_callback:
0x00004f80      89f9           mov ecx, edi                            ; ../coreutils-8.31/lib/unicodeio.c:194
0x00004f82      4883ec08       sub rsp, 8
0x00004f86      4889d7         mov rdi, rdx
0x00004f89      81f9ffff0000   cmp ecx, 0xffff                         ; ../coreutils-8.31/lib/unicodeio.c:197
0x00004f8f      761f           jbe 0x4fb0
0x00004f91      488d15774400.  lea rdx, str.U_08X                      ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; 0x940f ; "\U%08X"
0x00004f98      be01000000     mov esi, 1
0x00004f9d      31c0           xor eax, eax                            ; stdio2.h:-31
0x00004f9f      e85cc7ffff     call sym.imp.__fprintf_chk
0x00004fa4      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00004fab      4883c408       add rsp, 8
0x00004faf      c3             ret
0x00004fb0      488d15514400.  lea rdx, [0x00009408]                   ; "\u%04X"
0x00004fb7      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/unicodeio.c:-76
0x00004fbc      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/unicodeio.c:-73
0x00004fbe      e83dc7ffff     call sym.imp.__fprintf_chk
0x00004fc3      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00004fca      4883c408       add rsp, 8
0x00004fce      c3             ret
0x00004fcf      90             nop
;-- exit_failure_callback:
0x00004fd0      55             push rbp
0x00004fd1      53             push rbx
0x00004fd2      ba05000000     mov edx, 5
0x00004fd7      89fb           mov ebx, edi
0x00004fd9      4883ec08       sub rsp, 8
0x00004fdd      4885f6         test rsi, rsi
0x00004fe0      7446           je 0x5028
0x00004fe2      31ff           xor edi, edi
0x00004fe4      e807c5ffff     call sym.imp.dcgettext
0x00004fe9      488d35984400.  lea rsi, str.cannot_convert_U__04X_to_local_character_set:__s ; 0x9488 ; "cannot convert U+%04X to local character set: %s"
0x00004ff0      4889c5         mov rbp, rax
0x00004ff3      ba05000000     mov edx, 5
0x00004ff8      31ff           xor edi, edi
0x00004ffa      e8f1c4ffff     call sym.imp.dcgettext
0x00004fff      4989e8         mov r8, rbp
0x00005002      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/unicodeio.c:-75
0x00005004      4889c2         mov rdx, rax
0x00005007      31f6           xor esi, esi
0x00005009      31c0           xor eax, eax
0x0000500b      bf01000000     mov edi, 1
0x00005010      e89bc6ffff     call sym.imp.error
0x00005015      4883c408       add rsp, 8
0x00005019      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00005020      5b             pop rbx
0x00005021      5d             pop rbp
0x00005022      c3             ret
0x00005023      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/unicodeio.c:-70
0x00005028      488d35294400.  lea rsi, str.cannot_convert_U__04X_to_local_character_set ; 0x9458 ; "cannot convert U+%04X to local character set"
0x0000502f      31ff           xor edi, edi
0x00005031      e8bac4ffff     call sym.imp.dcgettext
0x00005036      89d9           mov ecx, ebx
0x00005038      4889c2         mov rdx, rax
0x0000503b      31f6           xor esi, esi
0x0000503d      31c0           xor eax, eax
0x0000503f      bf01000000     mov edi, 1
0x00005044      e867c6ffff     call sym.imp.error
0x00005049      4883c408       add rsp, 8
0x0000504d      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00005054      5b             pop rbx
0x00005055      5d             pop rbp
0x00005056      c3             ret
0x00005057      660f1f840000.  nop word [rax + rax]
;-- unicode_to_mb:
0x00005060      4157           push r15
0x00005062      4156           push r14
0x00005064      4989f6         mov r14, rsi
0x00005067      4155           push r13
0x00005069      4154           push r12
0x0000506b      4989d4         mov r12, rdx
0x0000506e      55             push rbp
0x0000506f      53             push rbx
0x00005070      4889cd         mov rbp, rcx
0x00005073      89fb           mov ebx, edi
0x00005075      4883ec78       sub rsp, 0x78
0x00005079      64488b042528.  mov rax, qword fs:[0x28]
0x00005082      4889442468     mov qword [rsp + 0x68], rax
0x00005087      31c0           xor eax, eax
0x00005089      8b0595712000   mov eax, dword [obj.initialized.4445]   ; [0x20c224:4]=0
0x0000508f      85c0           test eax, eax
0x00005091      0f84a9000000   je 0x5140
0x00005097      8b1583712000   mov edx, dword [obj.is_utf8.4446]       ; [0x20c220:4]=0
0x0000509d      85d2           test edx, edx
0x0000509f      751f           jne 0x50c0
0x000050a1      48833d6f7120.  cmp qword [obj.utf8_to_local.4447], 0xffffffffffffffff ; [0x20c218:8]=0
0x000050a9      7515           jne 0x50c0
0x000050ab      4889ea         mov rdx, rbp
0x000050ae      488d356d4300.  lea rsi, str.iconv_function_not_usable  ; 0x9422 ; "iconv function not usable"
0x000050b5      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/unicodeio.c:-99
0x000050b7      41ffd4         call r12
0x000050ba      eb28           jmp 0x50e4
0x000050bc      0f1f4000       nop dword [rax]
0x000050c0      83fb7f         cmp ebx, 0x7f
0x000050c3      774b           ja 0x5110
0x000050c5      4c8d6c243a     lea r13, [rsp + 0x3a]
0x000050ca      885c243a       mov byte [rsp + 0x3a], bl
0x000050ce      be01000000     mov esi, 1
0x000050d3      85d2           test edx, edx
0x000050d5      0f84d5000000   je 0x51b0
0x000050db      4889ea         mov rdx, rbp
0x000050de      4c89ef         mov rdi, r13
0x000050e1      41ffd6         call r14
0x000050e4      488b5c2468     mov rbx, qword [rsp + 0x68]
0x000050e9      6448331c2528.  xor rbx, qword fs:[0x28]
0x000050f2      0f856f010000   jne 0x5267
0x000050f8      4883c478       add rsp, 0x78
0x000050fc      5b             pop rbx
0x000050fd      5d             pop rbp
0x000050fe      415c           pop r12                                 ; ../coreutils-8.31/lib/unicodeio.c:-146
0x00005100      415d           pop r13
0x00005102      415e           pop r14                                 ; ../coreutils-8.31/lib/unicodeio.c:-145
0x00005104      415f           pop r15
0x00005106      c3             ret
0x00005107      660f1f840000.  nop word [rax + rax]
0x00005110      4c8d6c243a     lea r13, [rsp + 0x3a]
0x00005115      ba06000000     mov edx, 6
0x0000511a      89de           mov esi, ebx                            ; ../coreutils-8.31/lib/unicodeio.c:-172
0x0000511c      4c89ef         mov rdi, r13
0x0000511f      e87c010000     call sym.u8_uctomb_aux
0x00005124      85c0           test eax, eax
0x00005126      7958           jns 0x5180
0x00005128      4889ea         mov rdx, rbp
0x0000512b      488d350a4300.  lea rsi, str.character_out_of_range     ; 0x943c ; "character out of range"
0x00005132      89df           mov edi, ebx
0x00005134      41ffd4         call r12
0x00005137      ebab           jmp 0x50e4
0x00005139      0f1f80000000.  nop dword [rax]
0x00005140      4c8d2dcf4200.  lea r13, str.UTF_8                      ; 0x9416 ; "UTF-8"
0x00005147      e844100000     call sym.locale_charset
0x0000514c      b906000000     mov ecx, 6
0x00005151      4889c6         mov rsi, rax
0x00005154      4c89ef         mov rdi, r13
0x00005157      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005159      0f97c1         seta cl
0x0000515c      80d900         sbb cl, 0
0x0000515f      31d2           xor edx, edx
0x00005161      0fbec9         movsx ecx, cl
0x00005164      85c9           test ecx, ecx
0x00005166      0f94c2         sete dl
0x00005169      8915b1702000   mov dword [obj.is_utf8.4446], edx       ; [0x20c220:4]=0
0x0000516f      751f           jne 0x5190
0x00005171      c705a9702000.  mov dword [obj.initialized.4445], 1     ; [0x20c224:4]=0
0x0000517b      e91dffffff     jmp 0x509d
0x00005180      8b159a702000   mov edx, dword [obj.is_utf8.4446]       ; ../coreutils-8.31/lib/unicodeio.c:-167 ; [0x20c220:4]=0
0x00005186      4863f0         movsxd rsi, eax
0x00005189      e945ffffff     jmp 0x50d3
0x0000518e      6690           nop
0x00005190      4c89ee         mov rsi, r13
0x00005193      4889c7         mov rdi, rax
0x00005196      e8a5c5ffff     call sym.imp.iconv_open
0x0000519b      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/unicodeio.c:-133
0x0000519f      488905727020.  mov qword [obj.utf8_to_local.4447], rax ; [0x20c218:8]=0
0x000051a6      7470           je 0x5218
0x000051a8      8b1572702000   mov edx, dword [obj.is_utf8.4446]       ; [0x20c220:4]=0
0x000051ae      ebc1           jmp 0x5171
0x000051b0      488d442428     lea rax, [rsp + 0x28]
0x000051b5      4c8d7c2430     lea r15, [rsp + 0x30]
0x000051ba      488b3d577020.  mov rdi, qword [obj.utf8_to_local.4447] ; ../coreutils-8.31/lib/unicodeio.c:-131 ; [0x20c218:8]=0
0x000051c1      4c896c2418     mov qword [rsp + 0x18], r13
0x000051c6      4889742420     mov qword [rsp + 0x20], rsi
0x000051cb      4c8d6c2440     lea r13, [rsp + 0x40]
0x000051d0      488d542420     lea rdx, [rsp + 0x20]
0x000051d5      488d742418     lea rsi, [rsp + 0x18]
0x000051da      4d89f8         mov r8, r15
0x000051dd      4889c1         mov rcx, rax
0x000051e0      4c896c2428     mov qword [rsp + 0x28], r13             ; ../coreutils-8.31/lib/unicodeio.c:-107
0x000051e5      48c744243019.  mov qword [rsp + 0x30], 0x19            ; [0x19:8]=0x4000000000000025
0x000051ee      4889442408     mov qword [rsp + 8], rax
0x000051f3      e898c2ffff     call sym.imp.iconv
0x000051f8      48837c242000   cmp qword [rsp + 0x20], 0
0x000051fe      7506           jne 0x5206
0x00005200      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005204      752d           jne 0x5233
0x00005206      4889ea         mov rdx, rbp
0x00005209      31f6           xor esi, esi
0x0000520b      89df           mov edi, ebx
0x0000520d      41ffd4         call r12                                ; ../coreutils-8.31/lib/unicodeio.c:-109
0x00005210      e9cffeffff     jmp 0x50e4
0x00005215      0f1f00         nop dword [rax]
0x00005218      488d3dfd4100.  lea rdi, str.ASCII                      ; 0x941c ; "ASCII"
0x0000521f      4c89ee         mov rsi, r13
0x00005222      e819c5ffff     call sym.imp.iconv_open
0x00005227      488905ea6f20.  mov qword [obj.utf8_to_local.4447], rax ; [0x20c218:8]=0
0x0000522e      e975ffffff     jmp 0x51a8
0x00005233      488b4c2408     mov rcx, qword [rsp + 8]
0x00005238      488b3dd96f20.  mov rdi, qword [obj.utf8_to_local.4447] ; [0x20c218:8]=0
0x0000523f      31d2           xor edx, edx
0x00005241      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/unicodeio.c:-98
0x00005243      4d89f8         mov r8, r15
0x00005246      e845c2ffff     call sym.imp.iconv
0x0000524b      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000524f      74b5           je 0x5206
0x00005251      488b742428     mov rsi, qword [rsp + 0x28]
0x00005256      4889ea         mov rdx, rbp
0x00005259      4c89ef         mov rdi, r13
0x0000525c      4c29ee         sub rsi, r13
0x0000525f      41ffd6         call r14                                ; ../coreutils-8.31/lib/unicodeio.c:-46
0x00005262      e97dfeffff     jmp 0x50e4
0x00005267      e8b4c2ffff     call sym.imp.__stack_chk_fail
0x0000526c      0f1f4000       nop dword [rax]
;-- print_unicode_char:
0x00005270      85d2           test edx, edx
0x00005272      488d0507fdff.  lea rax, sym.fallback_failure_callback  ; 0x4f80
0x00005279      488d1550fdff.  lea rdx, sym.exit_failure_callback      ; 0x4fd0 ; "US\xba\x05"
0x00005280      4889f9         mov rcx, rdi
0x00005283      89f7           mov edi, esi
0x00005285      488d35d4fcff.  lea rsi, sym.fwrite_success_callback    ; 0x4f60 ; "H\x83\xec\bH\x89\xd1H\x89\xf2\xbe\x01"
0x0000528c      480f44d0       cmove rdx, rax
0x00005290      e9cbfdffff     jmp sym.unicode_to_mb
0x00005295      662e0f1f8400.  nop word cs:[rax + rax]
0x0000529f      90             nop
;-- u8_uctomb_aux:
0x000052a0      83fe7f         cmp esi, 0x7f                           ; ../coreutils-8.31/lib/unistr/u8-uctomb-aux.c:33
0x000052a3      0f8697000000   jbe 0x5340
0x000052a9      81feff070000   cmp esi, 0x7ff                          ; ../coreutils-8.31/lib/unistr/u8-uctomb-aux.c:39
0x000052af      764f           jbe 0x5300
0x000052b1      81feffff0000   cmp esi, 0xffff                         ; ../coreutils-8.31/lib/unistr/u8-uctomb-aux.c:41
0x000052b7      7757           ja 0x5310
0x000052b9      8d860028ffff   lea eax, [rsi - 0xd800]                 ; ../coreutils-8.31/lib/unistr/u8-uctomb-aux.c:43
0x000052bf      3dff070000     cmp eax, 0x7ff
0x000052c4      0f867c000000   jbe 0x5346
0x000052ca      83fa02         cmp edx, 2                              ; ../coreutils-8.31/lib/unistr/u8-uctomb-aux.c:53
0x000052cd      7e71           jle 0x5340
0x000052cf      b803000000     mov eax, 3
0x000052d4      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/unistr/u8-uctomb-aux.c:60
0x000052d6      c1ee06         shr esi, 6
0x000052d9      83e23f         and edx, 0x3f
0x000052dc      81ce00080000   or esi, 0x800
0x000052e2      83ca80         or edx, 0xffffff80                      ; 4294967168
0x000052e5      885702         mov byte [rdi + 2], dl
0x000052e8      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/unistr/u8-uctomb-aux.c:62
0x000052ea      c1ee06         shr esi, 6
0x000052ed      83e23f         and edx, 0x3f
0x000052f0      4080cec0       or sil, 0xc0
0x000052f4      83ca80         or edx, 0xffffff80                      ; 4294967168
0x000052f7      408837         mov byte [rdi], sil                     ; ../coreutils-8.31/lib/unistr/u8-uctomb-aux.c:63
0x000052fa      885701         mov byte [rdi + 1], dl                  ; ../coreutils-8.31/lib/unistr/u8-uctomb-aux.c:62
0x000052fd      c3             ret
0x000052fe      6690           nop
0x00005300      83fa01         cmp edx, 1                              ; ../coreutils-8.31/lib/unistr/u8-uctomb-aux.c:53
0x00005303      7e3b           jle 0x5340
0x00005305      b802000000     mov eax, 2
0x0000530a      ebdc           jmp 0x52e8
0x0000530c      0f1f4000       nop dword [rax]
0x00005310      81feffff1000   cmp esi, 0x10ffff                       ; ../coreutils-8.31/lib/unistr/u8-uctomb-aux.c:48
0x00005316      772e           ja 0x5346
0x00005318      83fa03         cmp edx, 3                              ; ../coreutils-8.31/lib/unistr/u8-uctomb-aux.c:53
0x0000531b      7e23           jle 0x5340
0x0000531d      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/unistr/u8-uctomb-aux.c:58
0x0000531f      c1ee06         shr esi, 6
0x00005322      83e03f         and eax, 0x3f
0x00005325      81ce00000100   or esi, 0x10000
0x0000532b      83c880         or eax, 0xffffff80                      ; 4294967168
0x0000532e      884703         mov byte [rdi + 3], al
0x00005331      b804000000     mov eax, 4
0x00005336      eb9c           jmp 0x52d4
0x00005338      0f1f84000000.  nop dword [rax + rax]
0x00005340      b8feffffff     mov eax, 0xfffffffe                     ; ../coreutils-8.31/lib/unistr/u8-uctomb-aux.c:38 ; 4294967294
0x00005345      c3             ret                                     ; ../coreutils-8.31/lib/unistr/u8-uctomb-aux.c:66
0x00005346      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/unistr/u8-uctomb-aux.c:46 ; -1
0x0000534b      c3             ret
0x0000534c      0f1f4000       nop dword [rax]
;-- version_etc_arn:
0x00005350      4157           push r15
0x00005352      4156           push r14
0x00005354      4155           push r13
0x00005356      4154           push r12
0x00005358      4d89cc         mov r12, r9
0x0000535b      55             push rbp
0x0000535c      53             push rbx
0x0000535d      4889fd         mov rbp, rdi
0x00005360      4c89c3         mov rbx, r8
0x00005363      4883ec28       sub rsp, 0x28
0x00005367      4885f6         test rsi, rsi
0x0000536a      0f8418010000   je 0x5488
0x00005370      4989d0         mov r8, rdx
0x00005373      488d153f4100.  lea rdx, str.s___s___s                  ; 0x94b9 ; "%s (%s) %s\n"
0x0000537a      4989c9         mov r9, rcx
0x0000537d      31c0           xor eax, eax
0x0000537f      4889f1         mov rcx, rsi
0x00005382      be01000000     mov esi, 1
0x00005387      e874c3ffff     call sym.imp.__fprintf_chk
0x0000538c      488d35394100.  lea rsi, [0x000094cc]                   ; "(C)"
0x00005393      31ff           xor edi, edi
0x00005395      ba05000000     mov edx, 5
0x0000539a      e851c1ffff     call sym.imp.dcgettext
0x0000539f      488d153a4400.  lea rdx, obj.version_etc_copyright      ; 0x97e0 ; "Copyright %s %d Free Software Foundation, Inc."
0x000053a6      4889c1         mov rcx, rax
0x000053a9      41b8e3070000   mov r8d, 0x7e3
0x000053af      be01000000     mov esi, 1
0x000053b4      4889ef         mov rdi, rbp
0x000053b7      31c0           xor eax, eax
0x000053b9      e842c3ffff     call sym.imp.__fprintf_chk
0x000053be      488d35934100.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x9558 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x000053c5      31ff           xor edi, edi
0x000053c7      ba05000000     mov edx, 5
0x000053cc      e81fc1ffff     call sym.imp.dcgettext
0x000053d1      4889ee         mov rsi, rbp
0x000053d4      4889c7         mov rdi, rax
0x000053d7      e8e4c1ffff     call sym.imp.fputs_unlocked
0x000053dc      4983fc09       cmp r12, 9
0x000053e0      0f873a030000   ja 0x5720
0x000053e6      488d15c74300.  lea rdx, [0x000097b4]
0x000053ed      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000053f1      4801d0         add rax, rdx
0x000053f4      ffe0           jmp rax
0x000053f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005400      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005404      488b4310       mov rax, qword [rbx + 0x10]
0x00005408      488d35b94200.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x96c8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000540f      4c8b4308       mov r8, qword [rbx + 8]
0x00005413      ba05000000     mov edx, 5
0x00005418      31ff           xor edi, edi
0x0000541a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000541e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005422      4c894c2410     mov qword [rsp + 0x10], r9
0x00005427      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000542b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000542f      48890424       mov qword [rsp], rax
0x00005433      4c89442408     mov qword [rsp + 8], r8
0x00005438      488b1b         mov rbx, qword [rbx]
0x0000543b      e8b0c0ffff     call sym.imp.dcgettext
0x00005440      4883ec08       sub rsp, 8
0x00005444      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00005449      4889c2         mov rdx, rax
0x0000544c      4889d9         mov rcx, rbx
0x0000544f      be01000000     mov esi, 1
0x00005454      4889ef         mov rdi, rbp
0x00005457      31c0           xor eax, eax
0x00005459      4151           push r9
0x0000545b      4155           push r13
0x0000545d      4154           push r12
0x0000545f      4157           push r15
0x00005461      4156           push r14
0x00005463      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005468      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000546d      e88ec2ffff     call sym.imp.__fprintf_chk
0x00005472      4883c430       add rsp, 0x30
0x00005476      4883c428       add rsp, 0x28
0x0000547a      5b             pop rbx
0x0000547b      5d             pop rbp
0x0000547c      415c           pop r12
0x0000547e      415d           pop r13
0x00005480      415e           pop r14
0x00005482      415f           pop r15
0x00005484      c3             ret
0x00005485      0f1f00         nop dword [rax]
0x00005488      4989c8         mov r8, rcx
0x0000548b      4889d1         mov rcx, rdx
0x0000548e      488d15304000.  lea rdx, str.s__s                       ; 0x94c5 ; "%s %s\n"
0x00005495      be01000000     mov esi, 1
0x0000549a      31c0           xor eax, eax
0x0000549c      e85fc2ffff     call sym.imp.__fprintf_chk
0x000054a1      e9e6feffff     jmp 0x538c
0x000054a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000054b0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000054b4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000054b8      488d35394200.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x96f8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x000054bf      488b4310       mov rax, qword [rbx + 0x10]
0x000054c3      4c8b4308       mov r8, qword [rbx + 8]
0x000054c7      ba05000000     mov edx, 5
0x000054cc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000054d0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000054d4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000054d8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000054dc      488b1b         mov rbx, qword [rbx]
0x000054df      4c89542418     mov qword [rsp + 0x18], r10
0x000054e4      4c894c2410     mov qword [rsp + 0x10], r9
0x000054e9      48890424       mov qword [rsp], rax
0x000054ed      4c89442408     mov qword [rsp + 8], r8
0x000054f2      31ff           xor edi, edi
0x000054f4      e8f7bfffff     call sym.imp.dcgettext
0x000054f9      4c8b542418     mov r10, qword [rsp + 0x18]
0x000054fe      4152           push r10
0x00005500      e93fffffff     jmp 0x5444
0x00005505      0f1f00         nop dword [rax]
0x00005508      488b1b         mov rbx, qword [rbx]
0x0000550b      488d35be3f00.  lea rsi, str.Written_by__s.             ; 0x94d0 ; "Written by %s.\n"
0x00005512      ba05000000     mov edx, 5
0x00005517      31ff           xor edi, edi
0x00005519      e8d2bfffff     call sym.imp.dcgettext
0x0000551e      4883c428       add rsp, 0x28
0x00005522      4889d9         mov rcx, rbx
0x00005525      4889ef         mov rdi, rbp
0x00005528      5b             pop rbx
0x00005529      5d             pop rbp
0x0000552a      415c           pop r12
0x0000552c      415d           pop r13
0x0000552e      415e           pop r14
0x00005530      415f           pop r15
0x00005532      4889c2         mov rdx, rax
0x00005535      be01000000     mov esi, 1
0x0000553a      31c0           xor eax, eax
0x0000553c      e9bfc1ffff     jmp sym.imp.__fprintf_chk
0x00005541      0f1f80000000.  nop dword [rax]
0x00005548      4c8b6308       mov r12, qword [rbx + 8]
0x0000554c      488d358d3f00.  lea rsi, str.Written_by__s_and__s.      ; 0x94e0 ; "Written by %s and %s.\n"
0x00005553      488b1b         mov rbx, qword [rbx]
0x00005556      ba05000000     mov edx, 5
0x0000555b      31ff           xor edi, edi
0x0000555d      e88ebfffff     call sym.imp.dcgettext
0x00005562      4883c428       add rsp, 0x28
0x00005566      4d89e0         mov r8, r12
0x00005569      4889d9         mov rcx, rbx
0x0000556c      4889ef         mov rdi, rbp
0x0000556f      4889c2         mov rdx, rax
0x00005572      be01000000     mov esi, 1
0x00005577      5b             pop rbx
0x00005578      5d             pop rbp
0x00005579      415c           pop r12
0x0000557b      415d           pop r13
0x0000557d      415e           pop r14
0x0000557f      415f           pop r15
0x00005581      31c0           xor eax, eax
0x00005583      e978c1ffff     jmp sym.imp.__fprintf_chk
0x00005588      0f1f84000000.  nop dword [rax + rax]
0x00005590      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005594      4c8b6308       mov r12, qword [rbx + 8]
0x00005598      488d35583f00.  lea rsi, str.Written_by__s___s__and__s. ; 0x94f7 ; "Written by %s, %s, and %s.\n"
0x0000559f      488b1b         mov rbx, qword [rbx]
0x000055a2      ba05000000     mov edx, 5
0x000055a7      31ff           xor edi, edi
0x000055a9      e842bfffff     call sym.imp.dcgettext
0x000055ae      4883c428       add rsp, 0x28
0x000055b2      4d89e9         mov r9, r13
0x000055b5      4d89e0         mov r8, r12
0x000055b8      4889d9         mov rcx, rbx
0x000055bb      4889ef         mov rdi, rbp
0x000055be      4889c2         mov rdx, rax
0x000055c1      5b             pop rbx
0x000055c2      5d             pop rbp
0x000055c3      415c           pop r12
0x000055c5      415d           pop r13
0x000055c7      415e           pop r14
0x000055c9      415f           pop r15
0x000055cb      be01000000     mov esi, 1
0x000055d0      31c0           xor eax, eax
0x000055d2      e929c1ffff     jmp sym.imp.__fprintf_chk
0x000055d7      660f1f840000.  nop word [rax + rax]
0x000055e0      488d35414000.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x9628 ; "Written by %s, %s, %s,\nand %s.\n"
0x000055e7      ba05000000     mov edx, 5
0x000055ec      31ff           xor edi, edi
0x000055ee      4c8b7318       mov r14, qword [rbx + 0x18]
0x000055f2      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000055f6      4c8b6308       mov r12, qword [rbx + 8]
0x000055fa      488b1b         mov rbx, qword [rbx]
0x000055fd      e8eebeffff     call sym.imp.dcgettext
0x00005602      4883ec08       sub rsp, 8
0x00005606      4156           push r14
0x00005608      4889c2         mov rdx, rax
0x0000560b      4d89e9         mov r9, r13
0x0000560e      4d89e0         mov r8, r12
0x00005611      4889d9         mov rcx, rbx
0x00005614      4889ef         mov rdi, rbp
0x00005617      be01000000     mov esi, 1
0x0000561c      31c0           xor eax, eax
0x0000561e      e8ddc0ffff     call sym.imp.__fprintf_chk
0x00005623      58             pop rax
0x00005624      5a             pop rdx
0x00005625      4883c428       add rsp, 0x28
0x00005629      5b             pop rbx
0x0000562a      5d             pop rbp
0x0000562b      415c           pop r12
0x0000562d      415d           pop r13
0x0000562f      415e           pop r14
0x00005631      415f           pop r15
0x00005633      c3             ret
0x00005634      0f1f4000       nop dword [rax]
0x00005638      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000563c      488d35054000.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x9648 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00005643      ba05000000     mov edx, 5
0x00005648      31ff           xor edi, edi
0x0000564a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000564e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005652      4c8b6308       mov r12, qword [rbx + 8]
0x00005656      488b1b         mov rbx, qword [rbx]
0x00005659      e892beffff     call sym.imp.dcgettext
0x0000565e      4157           push r15
0x00005660      eba4           jmp 0x5606
0x00005662      660f1f440000   nop word [rax + rax]
0x00005668      4c8b4308       mov r8, qword [rbx + 8]
0x0000566c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005670      488d35f93f00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x9670 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00005677      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000567b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000567f      ba05000000     mov edx, 5
0x00005684      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005688      31ff           xor edi, edi
0x0000568a      488b1b         mov rbx, qword [rbx]
0x0000568d      4c890424       mov qword [rsp], r8
0x00005691      e85abeffff     call sym.imp.dcgettext
0x00005696      4883ec08       sub rsp, 8
0x0000569a      4d89e9         mov r9, r13
0x0000569d      4154           push r12
0x0000569f      4157           push r15
0x000056a1      4156           push r14
0x000056a3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000056a8      4889d9         mov rcx, rbx
0x000056ab      4889c2         mov rdx, rax
0x000056ae      4889ef         mov rdi, rbp
0x000056b1      be01000000     mov esi, 1
0x000056b6      31c0           xor eax, eax
0x000056b8      e843c0ffff     call sym.imp.__fprintf_chk
0x000056bd      4883c420       add rsp, 0x20
0x000056c1      4883c428       add rsp, 0x28
0x000056c5      5b             pop rbx
0x000056c6      5d             pop rbp
0x000056c7      415c           pop r12
0x000056c9      415d           pop r13
0x000056cb      415e           pop r14
0x000056cd      415f           pop r15
0x000056cf      c3             ret
0x000056d0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x000056d4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000056d8      488d35b93f00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x9698 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x000056df      4c8b6328       mov r12, qword [rbx + 0x28]
0x000056e3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000056e7      ba05000000     mov edx, 5
0x000056ec      4c8b7318       mov r14, qword [rbx + 0x18]
0x000056f0      4c8b4308       mov r8, qword [rbx + 8]
0x000056f4      31ff           xor edi, edi
0x000056f6      4c894c2408     mov qword [rsp + 8], r9
0x000056fb      488b1b         mov rbx, qword [rbx]
0x000056fe      4c890424       mov qword [rsp], r8
0x00005702      e8e9bdffff     call sym.imp.dcgettext
0x00005707      4155           push r13
0x00005709      4154           push r12
0x0000570b      4157           push r15
0x0000570d      4156           push r14
0x0000570f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005714      eb8d           jmp 0x56a3
0x00005716      662e0f1f8400.  nop word cs:[rax + rax]
0x00005720      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005724      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005728      ba05000000     mov edx, 5
0x0000572d      488b4310       mov rax, qword [rbx + 0x10]
0x00005731      4c8b4308       mov r8, qword [rbx + 8]
0x00005735      488d35f43f00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x9730 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000573c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005740      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005744      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005748      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000574c      4c89542418     mov qword [rsp + 0x18], r10
0x00005751      4c894c2410     mov qword [rsp + 0x10], r9
0x00005756      48890424       mov qword [rsp], rax
0x0000575a      4c89442408     mov qword [rsp + 8], r8
0x0000575f      488b1b         mov rbx, qword [rbx]
0x00005762      e98bfdffff     jmp 0x54f2
0x00005767      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00005770      4531c9         xor r9d, r9d
0x00005773      49833800       cmp qword [r8], 0
0x00005777      7412           je 0x578b
0x00005779      0f1f80000000.  nop dword [rax]
0x00005780      4983c101       add r9, 1
0x00005784      4b833cc800     cmp qword [r8 + r9*8], 0
0x00005789      75f5           jne 0x5780
0x0000578b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00005790      4883ec68       sub rsp, 0x68
0x00005794      4d89c2         mov r10, r8
0x00005797      4531c9         xor r9d, r9d
0x0000579a      64488b042528.  mov rax, qword fs:[0x28]
0x000057a3      4889442458     mov qword [rsp + 0x58], rax
0x000057a8      31c0           xor eax, eax
0x000057aa      4989e0         mov r8, rsp
0x000057ad      0f1f00         nop dword [rax]
0x000057b0      418b02         mov eax, dword [r10]
0x000057b3      83f82f         cmp eax, 0x2f
0x000057b6      7742           ja 0x57fa
0x000057b8      4189c3         mov r11d, eax
0x000057bb      4d035a10       add r11, qword [r10 + 0x10]
0x000057bf      83c008         add eax, 8
0x000057c2      418902         mov dword [r10], eax
0x000057c5      498b03         mov rax, qword [r11]
0x000057c8      4885c0         test rax, rax
0x000057cb      4b8904c8       mov qword [r8 + r9*8], rax
0x000057cf      740a           je 0x57db
0x000057d1      4983c101       add r9, 1
0x000057d5      4983f90a       cmp r9, 0xa
0x000057d9      75d5           jne 0x57b0
0x000057db      e870fbffff     call sym.version_etc_arn
0x000057e0      488b442458     mov rax, qword [rsp + 0x58]
0x000057e5      644833042528.  xor rax, qword fs:[0x28]
0x000057ee      7505           jne 0x57f5
0x000057f0      4883c468       add rsp, 0x68
0x000057f4      c3             ret
0x000057f5      e826bdffff     call sym.imp.__stack_chk_fail
0x000057fa      4d8b5a08       mov r11, qword [r10 + 8]
0x000057fe      498d4308       lea rax, [r11 + 8]
0x00005802      49894208       mov qword [r10 + 8], rax
0x00005806      ebbd           jmp 0x57c5
0x00005808      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00005810      55             push rbp
0x00005811      53             push rbx
0x00005812      41ba20000000   mov r10d, 0x20                          ; "@"
0x00005818      4531db         xor r11d, r11d
0x0000581b      4881ecb80000.  sub rsp, 0xb8
0x00005822      64488b042528.  mov rax, qword fs:[0x28]
0x0000582b      4889442478     mov qword [rsp + 0x78], rax
0x00005830      31c0           xor eax, eax
0x00005832      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000583a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00005842      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000584a      4c8d442420     lea r8, [rsp + 0x20]
0x0000584f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00005857      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000585f      4889442410     mov qword [rsp + 0x10], rax
0x00005864      488d84248000.  lea rax, [rsp + 0x80]
0x0000586c      4531c9         xor r9d, r9d
0x0000586f      4889442418     mov qword [rsp + 0x18], rax
0x00005874      4889c5         mov rbp, rax
0x00005877      660f1f840000.  nop word [rax + rax]
0x00005880      4183fa2f       cmp r10d, 0x2f
0x00005884      7756           ja 0x58dc
0x00005886      4489d0         mov eax, r10d
0x00005889      41bb01000000   mov r11d, 1
0x0000588f      4183c208       add r10d, 8
0x00005893      4801e8         add rax, rbp
0x00005896      488b00         mov rax, qword [rax]
0x00005899      4885c0         test rax, rax
0x0000589c      4b8904c8       mov qword [r8 + r9*8], rax
0x000058a0      740a           je 0x58ac
0x000058a2      4983c101       add r9, 1
0x000058a6      4983f90a       cmp r9, 0xa
0x000058aa      75d4           jne 0x5880
0x000058ac      4584db         test r11b, r11b
0x000058af      7524           jne 0x58d5
0x000058b1      e89afaffff     call sym.version_etc_arn
0x000058b6      488b442478     mov rax, qword [rsp + 0x78]
0x000058bb      644833042528.  xor rax, qword fs:[0x28]
0x000058c4      750a           jne 0x58d0
0x000058c6      4881c4b80000.  add rsp, 0xb8
0x000058cd      5b             pop rbx
0x000058ce      5d             pop rbp
0x000058cf      c3             ret
0x000058d0      e84bbcffff     call sym.imp.__stack_chk_fail
0x000058d5      4489542408     mov dword [rsp + 8], r10d
0x000058da      ebd5           jmp 0x58b1
0x000058dc      4889d8         mov rax, rbx
0x000058df      4883c308       add rbx, 8
0x000058e3      ebb1           jmp 0x5896
0x000058e5      90             nop
0x000058e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x000058f0      53             push rbx
0x000058f1      488d351b3c00.  lea rsi, str.Report_bugs_to:__s         ; 0x9513 ; "\nReport bugs to: %s\n"
0x000058f8      ba05000000     mov edx, 5
0x000058fd      31ff           xor edi, edi
0x000058ff      e8ecbbffff     call sym.imp.dcgettext
0x00005904      488d151d3c00.  lea rdx, str.bug_coreutils_gnu.org      ; 0x9528 ; "bug-coreutils@gnu.org"
0x0000590b      4889c6         mov rsi, rax
0x0000590e      bf01000000     mov edi, 1
0x00005913      31c0           xor eax, eax
0x00005915      e866bdffff     call sym.imp.__printf_chk
0x0000591a      488d351d3c00.  lea rsi, str.s_home_page:___s           ; 0x953e ; "%s home page: <%s>\n"
0x00005921      ba05000000     mov edx, 5
0x00005926      31ff           xor edi, edi
0x00005928      e8c3bbffff     call sym.imp.dcgettext
0x0000592d      488d0d4c3100.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x8a80 ; "https://www.gnu.org/software/coreutils/"
0x00005934      488d15f03200.  lea rdx, str.GNU_coreutils              ; 0x8c2b ; "GNU coreutils"
0x0000593b      4889c6         mov rsi, rax
0x0000593e      bf01000000     mov edi, 1
0x00005943      31c0           xor eax, eax
0x00005945      e836bdffff     call sym.imp.__printf_chk
0x0000594a      488b1d376720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00005951      488d35183e00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x9770 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00005958      31ff           xor edi, edi
0x0000595a      ba05000000     mov edx, 5
0x0000595f      e88cbbffff     call sym.imp.dcgettext
0x00005964      4889de         mov rsi, rbx
0x00005967      4889c7         mov rdi, rax
0x0000596a      5b             pop rbx
0x0000596b      e950bcffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00005970      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00005971      4889fb         mov rbx, rdi
0x00005974      e8a7bcffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00005979      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000597c      7505           jne 0x5983
0x0000597e      4885db         test rbx, rbx
0x00005981      7502           jne 0x5985
0x00005983      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00005984      c3             ret
0x00005985      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000598a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00005990      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00005993      48f7e6         mul rsi
0x00005996      4889c7         mov rdi, rax
0x00005999      0f90c0         seto al
0x0000599c      4885ff         test rdi, rdi
0x0000599f      780a           js 0x59ab
0x000059a1      0fb6c0         movzx eax, al
0x000059a4      4885c0         test rax, rax
0x000059a7      7502           jne 0x59ab
0x000059a9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x000059ab      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x000059af      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x000059b4      6690           nop
0x000059b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x000059c0      ebae           jmp sym.xmalloc
0x000059c2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x000059c6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x000059d0      4885f6         test rsi, rsi
0x000059d3      53             push rbx
0x000059d4      4889f3         mov rbx, rsi
0x000059d7      7505           jne 0x59de
0x000059d9      4885ff         test rdi, rdi
0x000059dc      751a           jne 0x59f8
0x000059de      4889de         mov rsi, rbx
0x000059e1      e87abcffff     call sym.imp.realloc
0x000059e6      4885c0         test rax, rax
0x000059e9      7505           jne 0x59f0
0x000059eb      4885db         test rbx, rbx
0x000059ee      7511           jne 0x5a01                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x000059f0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x000059f1      c3             ret
0x000059f2      660f1f440000   nop word [rax + rax]
0x000059f8      e833baffff     call sym.imp.free
0x000059fd      31c0           xor eax, eax
0x000059ff      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00005a00      c3             ret
0x00005a01      e8ba010000     call sym.xalloc_die
0x00005a06      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00005a10      4889f0         mov rax, rsi
0x00005a13      48f7e2         mul rdx
0x00005a16      4889c6         mov rsi, rax
0x00005a19      0f90c0         seto al
0x00005a1c      4885f6         test rsi, rsi
0x00005a1f      780a           js 0x5a2b
0x00005a21      0fb6c0         movzx eax, al
0x00005a24      4885c0         test rax, rax
0x00005a27      7502           jne 0x5a2b
0x00005a29      eba5           jmp sym.xrealloc
0x00005a2b      4883ec08       sub rsp, 8
0x00005a2f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005a34      6690           nop
0x00005a36      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005a40      4885ff         test rdi, rdi
0x00005a43      4989d1         mov r9, rdx
0x00005a46      488b0e         mov rcx, qword [rsi]
0x00005a49      7435           je 0x5a80
0x00005a4b      31d2           xor edx, edx
0x00005a4d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005a57      49f7f1         div r9
0x00005a5a      4839c8         cmp rax, rcx
0x00005a5d      763c           jbe 0x5a9b
0x00005a5f      4889c8         mov rax, rcx
0x00005a62      48d1e8         shr rax, 1
0x00005a65      488d4c0801     lea rcx, [rax + rcx + 1]
0x00005a6a      48890e         mov qword [rsi], rcx
0x00005a6d      490fafc9       imul rcx, r9
0x00005a71      4889ce         mov rsi, rcx
0x00005a74      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00005a79      0f1f80000000.  nop dword [rax]
0x00005a80      4885c9         test rcx, rcx
0x00005a83      7423           je 0x5aa8
0x00005a85      4889c8         mov rax, rcx
0x00005a88      49f7e1         mul r9
0x00005a8b      0f90c2         seto dl
0x00005a8e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00005a91      0fb6d2         movzx edx, dl
0x00005a94      7805           js 0x5a9b
0x00005a96      4885d2         test rdx, rdx
0x00005a99      74cf           je 0x5a6a
0x00005a9b      4883ec08       sub rsp, 8
0x00005a9f      e81c010000     call sym.xalloc_die
0x00005aa4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005aa8      31d2           xor edx, edx
0x00005aaa      b880000000     mov eax, 0x80
0x00005aaf      4531c0         xor r8d, r8d
0x00005ab2      49f7f1         div r9
0x00005ab5      4885c0         test rax, rax
0x00005ab8      410f94c0       sete r8b
0x00005abc      498d0c00       lea rcx, [r8 + rax]
0x00005ac0      ebc3           jmp 0x5a85
0x00005ac2      0f1f4000       nop dword [rax]
0x00005ac6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00005ad0      4885ff         test rdi, rdi
0x00005ad3      488b06         mov rax, qword [rsi]
0x00005ad6      7428           je 0x5b00
0x00005ad8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00005ae2      4839d0         cmp rax, rdx
0x00005ae5      772a           ja 0x5b11
0x00005ae7      4889c2         mov rdx, rax
0x00005aea      48d1ea         shr rdx, 1
0x00005aed      488d440201     lea rax, [rdx + rax + 1]
0x00005af2      488906         mov qword [rsi], rax
0x00005af5      4889c6         mov rsi, rax
0x00005af8      e9d3feffff     jmp sym.xrealloc
0x00005afd      0f1f00         nop dword [rax]
0x00005b00      4885c0         test rax, rax
0x00005b03      ba80000000     mov edx, 0x80
0x00005b08      480f44c2       cmove rax, rdx
0x00005b0c      4885c0         test rax, rax
0x00005b0f      79e1           jns 0x5af2
0x00005b11      4883ec08       sub rsp, 8
0x00005b15      e8a6000000     call sym.xalloc_die
0x00005b1a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005b20      53             push rbx
0x00005b21      4889fb         mov rbx, rdi
0x00005b24      e847feffff     call sym.xmalloc
0x00005b29      4889da         mov rdx, rbx
0x00005b2c      31f6           xor esi, esi
0x00005b2e      4889c7         mov rdi, rax
0x00005b31      5b             pop rbx
0x00005b32      e969baffff     jmp sym.imp.memset
0x00005b37      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005b40      4889f8         mov rax, rdi
0x00005b43      4883ec08       sub rsp, 8
0x00005b47      48f7e6         mul rsi
0x00005b4a      0f90c2         seto dl
0x00005b4d      4885c0         test rax, rax
0x00005b50      7817           js 0x5b69
0x00005b52      0fb6d2         movzx edx, dl
0x00005b55      4885d2         test rdx, rdx
0x00005b58      750f           jne 0x5b69
0x00005b5a      e871baffff     call sym.imp.calloc
0x00005b5f      4885c0         test rax, rax
0x00005b62      7405           je 0x5b69
0x00005b64      4883c408       add rsp, 8
0x00005b68      c3             ret
0x00005b69      e852000000     call sym.xalloc_die
0x00005b6e      6690           nop
;-- xmemdup:
0x00005b70      55             push rbp
0x00005b71      53             push rbx
0x00005b72      4889fd         mov rbp, rdi
0x00005b75      4889f7         mov rdi, rsi
0x00005b78      4889f3         mov rbx, rsi
0x00005b7b      4883ec08       sub rsp, 8
0x00005b7f      e8ecfdffff     call sym.xmalloc
0x00005b84      4883c408       add rsp, 8
0x00005b88      4889da         mov rdx, rbx
0x00005b8b      4889ee         mov rsi, rbp
0x00005b8e      5b             pop rbx
0x00005b8f      5d             pop rbp
0x00005b90      4889c7         mov rdi, rax
0x00005b93      e958baffff     jmp sym.imp.memcpy
0x00005b98      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005ba0      53             push rbx
0x00005ba1      4889fb         mov rbx, rdi
0x00005ba4      e867b9ffff     call sym.imp.strlen
0x00005ba9      4889df         mov rdi, rbx
0x00005bac      488d7001       lea rsi, [rax + 1]
0x00005bb0      5b             pop rbx
0x00005bb1      ebbd           jmp sym.xmemdup
0x00005bb3      662e0f1f8400.  nop word cs:[rax + rax]
0x00005bbd      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005bc0      488d35483c00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x980f ; "memory exhausted"
0x00005bc7      4883ec08       sub rsp, 8
0x00005bcb      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005bd0      31ff           xor edi, edi
0x00005bd2      e819b9ffff     call sym.imp.dcgettext
0x00005bd7      8b3d3b642000   mov edi, dword [obj.exit_failure]       ; [0x20c018:4]=1
0x00005bdd      488d15ea3000.  lea rdx, [0x00008cce]                   ; "%s"
0x00005be4      4889c1         mov rcx, rax
0x00005be7      31f6           xor esi, esi
0x00005be9      31c0           xor eax, eax
0x00005beb      e8c0baffff     call sym.imp.error
0x00005bf0      e84bb8ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005bf5      662e0f1f8400.  nop word cs:[rax + rax]
0x00005bff      90             nop
;-- xvprintf:
0x00005c00      55             push rbp                                ; ../coreutils-8.31/lib/xprintf.c:47
0x00005c01      53             push rbx
0x00005c02      4883ec08       sub rsp, 8
0x00005c06      e8c5030000     call sym.rpl_vprintf                    ; ../coreutils-8.31/lib/xprintf.c:48
0x00005c0b      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xprintf.c:49
0x00005c0d      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/xprintf.c:48
0x00005c0f      780f           js 0x5c20                               ; ../coreutils-8.31/lib/xprintf.c:49
0x00005c11      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/xprintf.c:53
0x00005c15      89d8           mov eax, ebx
0x00005c17      5b             pop rbx
0x00005c18      5d             pop rbp
0x00005c19      c3             ret
0x00005c1a      660f1f440000   nop word [rax + rax]
0x00005c20      488b3d616420.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/xprintf.c:49 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00005c27      e874b8ffff     call sym.imp.ferror
0x00005c2c      85c0           test eax, eax
0x00005c2e      75e1           jne 0x5c11
0x00005c30      488d35e93b00.  lea rsi, str.cannot_perform_formatted_output ; ../coreutils-8.31/lib/xprintf.c:50 ; 0x9820 ; "cannot perform formatted output"
0x00005c37      31ff           xor edi, edi
0x00005c39      ba05000000     mov edx, 5
0x00005c3e      e8adb8ffff     call sym.imp.dcgettext
0x00005c43      4889c5         mov rbp, rax
0x00005c46      e805b8ffff     call sym.imp.__errno_location
0x00005c4b      8b3dc7632000   mov edi, dword [obj.exit_failure]       ; [0x20c018:4]=1
0x00005c51      8b30           mov esi, dword [rax]
0x00005c53      4889ea         mov rdx, rbp
0x00005c56      31c0           xor eax, eax
0x00005c58      e853baffff     call sym.imp.error
0x00005c5d      ebb2           jmp 0x5c11                              ; ../coreutils-8.31/lib/xprintf.c:52
0x00005c5f      90             nop
;-- xprintf:
0x00005c60      4881ecd80000.  sub rsp, 0xd8                           ; ../coreutils-8.31/lib/xprintf.c:33
0x00005c67      84c0           test al, al
0x00005c69      4889742428     mov qword [rsp + 0x28], rsi
0x00005c6e      4889542430     mov qword [rsp + 0x30], rdx
0x00005c73      48894c2438     mov qword [rsp + 0x38], rcx
0x00005c78      4c89442440     mov qword [rsp + 0x40], r8
0x00005c7d      4c894c2448     mov qword [rsp + 0x48], r9
0x00005c82      7437           je 0x5cbb
0x00005c84      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x00005c89      0f294c2460     movaps xmmword [rsp + 0x60], xmm1
0x00005c8e      0f29542470     movaps xmmword [rsp + 0x70], xmm2
0x00005c93      0f299c248000.  movaps xmmword [rsp + 0x80], xmm3
0x00005c9b      0f29a4249000.  movaps xmmword [rsp + 0x90], xmm4
0x00005ca3      0f29ac24a000.  movaps xmmword [rsp + 0xa0], xmm5
0x00005cab      0f29b424b000.  movaps xmmword [rsp + 0xb0], xmm6
0x00005cb3      0f29bc24c000.  movaps xmmword [rsp + 0xc0], xmm7
0x00005cbb      64488b042528.  mov rax, qword fs:[0x28]
0x00005cc4      4889442418     mov qword [rsp + 0x18], rax
0x00005cc9      31c0           xor eax, eax
0x00005ccb      488d8424e000.  lea rax, [rsp + 0xe0]                   ; ../coreutils-8.31/lib/xprintf.c:36
0x00005cd3      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/xprintf.c:37
0x00005cd6      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/xprintf.c:36
0x00005cdb      488d442420     lea rax, [rsp + 0x20]
0x00005ce0      c70424080000.  mov dword [rsp], 8
0x00005ce7      c74424043000.  mov dword [rsp + 4], 0x30               ; '0'
                                                                       ; [0x30:4]=0
0x00005cef      4889442410     mov qword [rsp + 0x10], rax
0x00005cf4      e807ffffff     call sym.xvprintf                       ; ../coreutils-8.31/lib/xprintf.c:37
0x00005cf9      488b542418     mov rdx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/xprintf.c:41
0x00005cfe      644833142528.  xor rdx, qword fs:[0x28]
0x00005d07      7508           jne 0x5d11
0x00005d09      4881c4d80000.  add rsp, 0xd8
0x00005d10      c3             ret
0x00005d11      e80ab8ffff     call sym.imp.__stack_chk_fail
0x00005d16      662e0f1f8400.  nop word cs:[rax + rax]
;-- xvfprintf:
0x00005d20      55             push rbp                                ; ../coreutils-8.31/lib/xprintf.c:73
0x00005d21      53             push rbx
0x00005d22      4889fd         mov rbp, rdi
0x00005d25      4883ec08       sub rsp, 8
0x00005d29      e8a2010000     call sym.rpl_vfprintf                   ; ../coreutils-8.31/lib/xprintf.c:74
0x00005d2e      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xprintf.c:75
0x00005d30      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/xprintf.c:74
0x00005d32      780c           js 0x5d40                               ; ../coreutils-8.31/lib/xprintf.c:75
0x00005d34      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/xprintf.c:79
0x00005d38      89d8           mov eax, ebx
0x00005d3a      5b             pop rbx
0x00005d3b      5d             pop rbp
0x00005d3c      c3             ret
0x00005d3d      0f1f00         nop dword [rax]
0x00005d40      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/xprintf.c:75
0x00005d43      e858b7ffff     call sym.imp.ferror
0x00005d48      85c0           test eax, eax
0x00005d4a      75e8           jne 0x5d34
0x00005d4c      488d35cd3a00.  lea rsi, str.cannot_perform_formatted_output ; ../coreutils-8.31/lib/xprintf.c:76 ; 0x9820 ; "cannot perform formatted output"
0x00005d53      31ff           xor edi, edi
0x00005d55      ba05000000     mov edx, 5
0x00005d5a      e891b7ffff     call sym.imp.dcgettext
0x00005d5f      4889c5         mov rbp, rax
0x00005d62      e8e9b6ffff     call sym.imp.__errno_location
0x00005d67      8b3dab622000   mov edi, dword [obj.exit_failure]       ; [0x20c018:4]=1
0x00005d6d      8b30           mov esi, dword [rax]
0x00005d6f      4889ea         mov rdx, rbp
0x00005d72      31c0           xor eax, eax
0x00005d74      e837b9ffff     call sym.imp.error
0x00005d79      ebb9           jmp 0x5d34                              ; ../coreutils-8.31/lib/xprintf.c:78
0x00005d7b      0f1f440000     nop dword [rax + rax]
;-- xfprintf:
0x00005d80      4881ecd80000.  sub rsp, 0xd8                           ; ../coreutils-8.31/lib/xprintf.c:59
0x00005d87      84c0           test al, al
0x00005d89      4889542430     mov qword [rsp + 0x30], rdx
0x00005d8e      48894c2438     mov qword [rsp + 0x38], rcx
0x00005d93      4c89442440     mov qword [rsp + 0x40], r8
0x00005d98      4c894c2448     mov qword [rsp + 0x48], r9
0x00005d9d      7437           je 0x5dd6
0x00005d9f      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x00005da4      0f294c2460     movaps xmmword [rsp + 0x60], xmm1
0x00005da9      0f29542470     movaps xmmword [rsp + 0x70], xmm2
0x00005dae      0f299c248000.  movaps xmmword [rsp + 0x80], xmm3
0x00005db6      0f29a4249000.  movaps xmmword [rsp + 0x90], xmm4
0x00005dbe      0f29ac24a000.  movaps xmmword [rsp + 0xa0], xmm5
0x00005dc6      0f29b424b000.  movaps xmmword [rsp + 0xb0], xmm6
0x00005dce      0f29bc24c000.  movaps xmmword [rsp + 0xc0], xmm7
0x00005dd6      64488b042528.  mov rax, qword fs:[0x28]
0x00005ddf      4889442418     mov qword [rsp + 0x18], rax
0x00005de4      31c0           xor eax, eax
0x00005de6      488d8424e000.  lea rax, [rsp + 0xe0]                   ; ../coreutils-8.31/lib/xprintf.c:62
0x00005dee      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/lib/xprintf.c:63
0x00005df1      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/xprintf.c:62
0x00005df6      488d442420     lea rax, [rsp + 0x20]
0x00005dfb      c70424100000.  mov dword [rsp], 0x10                   ; [0x10:4]=0x3e0003
0x00005e02      c74424043000.  mov dword [rsp + 4], 0x30               ; '0'
                                                                       ; [0x30:4]=0
0x00005e0a      4889442410     mov qword [rsp + 0x10], rax
0x00005e0f      e80cffffff     call sym.xvfprintf                      ; ../coreutils-8.31/lib/xprintf.c:63
0x00005e14      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/xprintf.c:67
0x00005e19      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005e22      7508           jne 0x5e2c
0x00005e24      4881c4d80000.  add rsp, 0xd8
0x00005e2b      c3             ret
0x00005e2c      e8efb6ffff     call sym.imp.__stack_chk_fail
0x00005e31      662e0f1f8400.  nop word cs:[rax + rax]
0x00005e3b      0f1f440000     nop dword [rax + rax]
;-- rpl_mbrtowc:
0x00005e40      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005e42      4154           push r12
0x00005e44      4989f5         mov r13, rsi
0x00005e47      55             push rbp
0x00005e48      53             push rbx
0x00005e49      4889fb         mov rbx, rdi
0x00005e4c      4989d4         mov r12, rdx
0x00005e4f      4883ec18       sub rsp, 0x18
0x00005e53      64488b042528.  mov rax, qword fs:[0x28]
0x00005e5c      4889442408     mov qword [rsp + 8], rax
0x00005e61      31c0           xor eax, eax
0x00005e63      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005e68      4885ff         test rdi, rdi
0x00005e6b      480f44d8       cmove rbx, rax
0x00005e6f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005e72      e8b9b6ffff     call sym.imp.mbrtowc
0x00005e77      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005e7b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005e7e      7620           jbe 0x5ea0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005e80      4d85e4         test r12, r12
0x00005e83      741b           je 0x5ea0
0x00005e85      31ff           xor edi, edi
0x00005e87      e8a4020000     call sym.hard_locale
0x00005e8c      84c0           test al, al
0x00005e8e      7510           jne 0x5ea0
0x00005e90      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005e95      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00005e9a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005e9c      0f1f4000       nop dword [rax]
0x00005ea0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005ea5      644833142528.  xor rdx, qword fs:[0x28]
0x00005eae      4889e8         mov rax, rbp
0x00005eb1      750b           jne 0x5ebe
0x00005eb3      4883c418       add rsp, 0x18
0x00005eb7      5b             pop rbx
0x00005eb8      5d             pop rbp
0x00005eb9      415c           pop r12
0x00005ebb      415d           pop r13
0x00005ebd      c3             ret
0x00005ebe      e85db6ffff     call sym.imp.__stack_chk_fail
0x00005ec3      662e0f1f8400.  nop word cs:[rax + rax]
0x00005ecd      0f1f00         nop dword [rax]
;-- rpl_vfprintf:
0x00005ed0      4155           push r13                                ; ../coreutils-8.31/lib/vfprintf.c:37
0x00005ed2      4154           push r12
0x00005ed4      4889f0         mov rax, rsi
0x00005ed7      55             push rbp
0x00005ed8      53             push rbx
0x00005ed9      4989fd         mov r13, rdi
0x00005edc      4881ecf80700.  sub rsp, 0x7f8
0x00005ee3      4c8d642410     lea r12, [rsp + 0x10]                   ; ../coreutils-8.31/lib/vfprintf.c:43
0x00005ee8      488d742408     lea rsi, [rsp + 8]
0x00005eed      48c7442408d0.  mov qword [rsp + 8], 0x7d0              ; ../coreutils-8.31/lib/vfprintf.c:41 ; [0x7d0:8]=0x120000013b
0x00005ef6      64488b0c2528.  mov rcx, qword fs:[0x28]                ; ../coreutils-8.31/lib/vfprintf.c:37
0x00005eff      48898c24e807.  mov qword [rsp + 0x7e8], rcx
0x00005f07      31c9           xor ecx, ecx
0x00005f09      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/vfprintf.c:43
0x00005f0c      4889d1         mov rcx, rdx
0x00005f0f      4889c2         mov rdx, rax
0x00005f12      e8e9030000     call sym.vasnprintf
0x00005f17      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vfprintf.c:46
0x00005f1a      488b5c2408     mov rbx, qword [rsp + 8]                ; ../coreutils-8.31/lib/vfprintf.c:44
0x00005f1f      0f8489000000   je 0x5fae                               ; ../coreutils-8.31/lib/vfprintf.c:46
0x00005f25      4c89e9         mov rcx, r13                            ; ../coreutils-8.31/lib/vfprintf.c:52
0x00005f28      4889da         mov rdx, rbx
0x00005f2b      be01000000     mov esi, 1
0x00005f30      4889c7         mov rdi, rax
0x00005f33      4889c5         mov rbp, rax
0x00005f36      e8b5b7ffff     call sym.imp.fwrite
0x00005f3b      4839d8         cmp rax, rbx
0x00005f3e      7240           jb 0x5f80
0x00005f40      4c39e5         cmp rbp, r12                            ; ../coreutils-8.31/lib/vfprintf.c:63
0x00005f43      7408           je 0x5f4d
0x00005f45      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/vfprintf.c:64
0x00005f48      e8e3b4ffff     call sym.imp.free
0x00005f4d      4881fbffffff.  cmp rbx, 0x7fffffff                     ; ../coreutils-8.31/lib/vfprintf.c:66
0x00005f54      774d           ja 0x5fa3
0x00005f56      488b8c24e807.  mov rcx, qword [rsp + 0x7e8]            ; ../coreutils-8.31/lib/vfprintf.c:74
0x00005f5e      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005f67      89d8           mov eax, ebx
0x00005f69      7552           jne 0x5fbd
0x00005f6b      4881c4f80700.  add rsp, 0x7f8
0x00005f72      5b             pop rbx
0x00005f73      5d             pop rbp
0x00005f74      415c           pop r12
0x00005f76      415d           pop r13
0x00005f78      c3             ret
0x00005f79      0f1f80000000.  nop dword [rax]
0x00005f80      4c39e5         cmp rbp, r12                            ; ../coreutils-8.31/lib/vfprintf.c:54
0x00005f83      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/vfprintf.c:60 ; -1
0x00005f88      74cc           je 0x5f56                               ; ../coreutils-8.31/lib/vfprintf.c:54
0x00005f8a      e8c1b4ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vfprintf.c:56
0x00005f8f      448b28         mov r13d, dword [rax]
0x00005f92      4989c4         mov r12, rax
0x00005f95      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/vfprintf.c:57
0x00005f98      e893b4ffff     call sym.imp.free
0x00005f9d      45892c24       mov dword [r12], r13d                   ; ../coreutils-8.31/lib/vfprintf.c:58
0x00005fa1      ebb3           jmp 0x5f56
0x00005fa3      e8a8b4ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vfprintf.c:68
0x00005fa8      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x00005fae      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/lib/vfprintf.c:69
0x00005fb1      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/vfprintf.c:70 ; -1
0x00005fb6      e835030000     call sym.fseterr                        ; ../coreutils-8.31/lib/vfprintf.c:69
0x00005fbb      eb99           jmp 0x5f56                              ; ../coreutils-8.31/lib/vfprintf.c:70
0x00005fbd      e85eb5ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/vfprintf.c:74
0x00005fc2      662e0f1f8400.  nop word cs:[rax + rax]
0x00005fcc      0f1f4000       nop dword [rax]
;-- rpl_vprintf:
0x00005fd0      4889f2         mov rdx, rsi                            ; ../coreutils-8.31/lib/vprintf.c:31
0x00005fd3      4889fe         mov rsi, rdi                            ; ../coreutils-8.31/lib/vprintf.c:32
0x00005fd6      488b3dab6020.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00005fdd      e9eefeffff     jmp sym.rpl_vfprintf
0x00005fe2      662e0f1f8400.  nop word cs:[rax + rax]
0x00005fec      0f1f4000       nop dword [rax]
;-- c_strtold:
0x00005ff0      4154           push r12
0x00005ff2      55             push rbp
0x00005ff3      4889fd         mov rbp, rdi
0x00005ff6      53             push rbx
0x00005ff7      4889f3         mov rbx, rsi
0x00005ffa      4883ec10       sub rsp, 0x10
0x00005ffe      488b05236220.  mov rax, qword [obj.c_locale_cache]     ; [0x20c228:8]=0
0x00006005      4885c0         test rax, rax
0x00006008      7476           je 0x6080
0x0000600a      488b3d176220.  mov rdi, qword [obj.c_locale_cache]     ; [0x20c228:8]=0
0x00006011      4885ff         test rdi, rdi
0x00006014      744a           je 0x6060
0x00006016      e8f5b5ffff     call sym.imp.uselocale
0x0000601b      4885c0         test rax, rax
0x0000601e      4989c4         mov r12, rax
0x00006021      743d           je 0x6060
0x00006023      4889de         mov rsi, rbx
0x00006026      4889ef         mov rdi, rbp
0x00006029      e872b6ffff     call sym.imp.strtold
0x0000602e      db3c24         fstp xword [rsp]
0x00006031      e81ab4ffff     call sym.imp.__errno_location
0x00006036      4c89e7         mov rdi, r12
0x00006039      4889c3         mov rbx, rax
0x0000603c      8b28           mov ebp, dword [rax]
0x0000603e      e8cdb5ffff     call sym.imp.uselocale
0x00006043      4885c0         test rax, rax
0x00006046      db2c24         fld xword [rsp]
0x00006049      7454           je 0x609f
0x0000604b      892b           mov dword [rbx], ebp
0x0000604d      4883c410       add rsp, 0x10
0x00006051      5b             pop rbx
0x00006052      5d             pop rbp
0x00006053      415c           pop r12
0x00006055      c3             ret
0x00006056      662e0f1f8400.  nop word cs:[rax + rax]
0x00006060      4885db         test rbx, rbx
0x00006063      750b           jne 0x6070
0x00006065      4883c410       add rsp, 0x10
0x00006069      d9ee           fldz
0x0000606b      5b             pop rbx
0x0000606c      5d             pop rbp
0x0000606d      415c           pop r12
0x0000606f      c3             ret
0x00006070      48892b         mov qword [rbx], rbp
0x00006073      4883c410       add rsp, 0x10
0x00006077      d9ee           fldz
0x00006079      5b             pop rbx
0x0000607a      5d             pop rbp
0x0000607b      415c           pop r12
0x0000607d      c3             ret
0x0000607e      6690           nop
0x00006080      488d35b93700.  lea rsi, [0x00009840]                   ; "C"
0x00006087      31d2           xor edx, edx
0x00006089      bfbf1f0000     mov edi, 0x1fbf
0x0000608e      e8bdb4ffff     call sym.imp.newlocale
0x00006093      4889058e6120.  mov qword [obj.c_locale_cache], rax     ; [0x20c228:8]=0
0x0000609a      e96bffffff     jmp 0x600a
0x0000609f      ddd8           fstp st(0)
0x000060a1      e89ab3ffff     call sym.imp.abort
0x000060a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- close_stream:
0x000060b0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x000060b2      55             push rbp
0x000060b3      4889fd         mov rbp, rdi
0x000060b6      53             push rbx
0x000060b7      e8c4b3ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x000060bc      8b5d00         mov ebx, dword [rbp]
0x000060bf      4889ef         mov rdi, rbp
0x000060c2      4989c4         mov r12, rax
0x000060c5      e806010000     call sym.rpl_fclose
0x000060ca      83e320         and ebx, 0x20                           ; "@"
0x000060cd      85db           test ebx, ebx
0x000060cf      7517           jne 0x60e8
0x000060d1      85c0           test eax, eax
0x000060d3      740a           je 0x60df                               ; stdio.h:-186
0x000060d5      4d85e4         test r12, r12                           ; stdio.h:-178
0x000060d8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000060dd      7439           je 0x6118
0x000060df      5b             pop rbx
0x000060e0      5d             pop rbp
0x000060e1      415c           pop r12
0x000060e3      c3             ret
0x000060e4      0f1f4000       nop dword [rax]
0x000060e8      85c0           test eax, eax
0x000060ea      751c           jne 0x6108
0x000060ec      e85fb3ffff     call sym.imp.__errno_location
0x000060f1      c70000000000   mov dword [rax], 0
0x000060f7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000060fc      5b             pop rbx
0x000060fd      5d             pop rbp
0x000060fe      415c           pop r12
0x00006100      c3             ret
0x00006101      0f1f80000000.  nop dword [rax]
0x00006108      5b             pop rbx
0x00006109      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000610e      5d             pop rbp                                 ; stdio.h:-186
0x0000610f      415c           pop r12
0x00006111      c3             ret
0x00006112      660f1f440000   nop word [rax + rax]
0x00006118      e833b3ffff     call sym.imp.__errno_location
0x0000611d      833809         cmp dword [rax], 9
0x00006120      5b             pop rbx
0x00006121      5d             pop rbp
0x00006122      415c           pop r12                                 ; stdio.h:-178
0x00006124      0f95c0         setne al
0x00006127      0fb6c0         movzx eax, al
0x0000612a      f7d8           neg eax
0x0000612c      c3             ret
0x0000612d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00006130      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00006134      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00006136      e835b5ffff     call sym.imp.setlocale
0x0000613b      4889c2         mov rdx, rax
0x0000613e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00006143      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00006146      741d           je 0x6165
0x00006148      488d3df13600.  lea rdi, [0x00009840]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000614f      b902000000     mov ecx, 2
0x00006154      4889d6         mov rsi, rdx
0x00006157      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006159      0f97c1         seta cl
0x0000615c      80d900         sbb cl, 0
0x0000615f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00006161      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00006163      750b           jne 0x6170
0x00006165      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00006169      c3             ret
0x0000616a      660f1f440000   nop word [rax + rax]
0x00006170      488d3dcb3600.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x9842 ; "POSIX"
0x00006177      b906000000     mov ecx, 6
0x0000617c      4889d6         mov rsi, rdx
0x0000617f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006181      0f97c0         seta al
0x00006184      1c00           sbb al, 0
0x00006186      84c0           test al, al
0x00006188      0f95c0         setne al
0x0000618b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000618f      c3             ret
;-- locale_charset:
0x00006190      4883ec08       sub rsp, 8
0x00006194      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00006199      e8a2b4ffff     call sym.imp.nl_langinfo
0x0000619e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x000061a1      741d           je 0x61c0
0x000061a3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x000061a6      488d156f3200.  lea rdx, str.ASCII                      ; 0x941c ; "ASCII"
0x000061ad      480f44c2       cmove rax, rdx
0x000061b1      4883c408       add rsp, 8
0x000061b5      c3             ret
0x000061b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000061c0      488d05553200.  lea rax, str.ASCII                      ; 0x941c ; "ASCII"
0x000061c7      4883c408       add rsp, 8
0x000061cb      c3             ret
0x000061cc      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x000061d0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x000061d2      55             push rbp
0x000061d3      53             push rbx
0x000061d4      4889fb         mov rbx, rdi
0x000061d7      e824b4ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x000061dc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x000061de      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x000061e1      7854           js 0x6237                               ; ../coreutils-8.31/lib/fclose.c:66
0x000061e3      e868b4ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x000061e8      85c0           test eax, eax
0x000061ea      752c           jne 0x6218
0x000061ec      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x000061ef      e85c000000     call sym.rpl_fflush
0x000061f4      85c0           test eax, eax
0x000061f6      743c           je 0x6234
0x000061f8      e853b2ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x000061fd      448b20         mov r12d, dword [rax]
0x00006200      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00006203      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00006206      e8c5b2ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000620b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000620e      7530           jne 0x6240
0x00006210      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00006211      5d             pop rbp
0x00006212      415c           pop r12
0x00006214      c3             ret
0x00006215      0f1f00         nop dword [rax]
0x00006218      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000621b      e8e0b3ffff     call sym.imp.fileno
0x00006220      31f6           xor esi, esi
0x00006222      ba01000000     mov edx, 1
0x00006227      89c7           mov edi, eax
0x00006229      e852b3ffff     call sym.imp.lseek
0x0000622e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006232      75b8           jne 0x61ec
0x00006234      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00006237      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00006238      5d             pop rbp
0x00006239      415c           pop r12
0x0000623b      e990b2ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00006240      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00006244      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00006249      ebc5           jmp 0x6210
0x0000624b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00006250      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00006253      53             push rbx
0x00006254      4889fb         mov rbx, rdi
0x00006257      7411           je 0x626a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00006259      e8f2b3ffff     call sym.imp.__freading
0x0000625e      85c0           test eax, eax
0x00006260      7408           je 0x626a
0x00006262      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00006268      750e           jne 0x6278
0x0000626a      4889df         mov rdi, rbx
0x0000626d      5b             pop rbx
0x0000626e      e9bdb3ffff     jmp sym.imp.fflush
0x00006273      0f1f440000     nop dword [rax + rax]
0x00006278      4889df         mov rdi, rbx
0x0000627b      ba01000000     mov edx, 1
0x00006280      31f6           xor esi, esi
0x00006282      e809000000     call sym.rpl_fseeko
0x00006287      4889df         mov rdi, rbx
0x0000628a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000628b      e9a0b3ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00006290      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00006294      48394710       cmp qword [rdi + 0x10], rax
0x00006298      7406           je 0x62a0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000629a      e921b4ffff     jmp sym.imp.fseeko
0x0000629f      90             nop
0x000062a0      488b4720       mov rax, qword [rdi + 0x20]
0x000062a4      48394728       cmp qword [rdi + 0x28], rax
0x000062a8      75f0           jne 0x629a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x000062aa      48837f4800     cmp qword [rdi + 0x48], 0
0x000062af      75e9           jne 0x629a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x000062b1      4154           push r12
0x000062b3      55             push rbp
0x000062b4      4189d4         mov r12d, edx
0x000062b7      53             push rbx
0x000062b8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x000062bb      4889fb         mov rbx, rdi
0x000062be      e83db3ffff     call sym.imp.fileno
0x000062c3      4489e2         mov edx, r12d
0x000062c6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x000062c9      89c7           mov edi, eax
0x000062cb      e8b0b2ffff     call sym.imp.lseek
0x000062d0      4883f8ff       cmp rax, 0xffffffffffffffff
0x000062d4      740c           je 0x62e2
0x000062d6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x000062d9      488983900000.  mov qword [rbx + 0x90], rax
0x000062e0      31c0           xor eax, eax
0x000062e2      5b             pop rbx
0x000062e3      5d             pop rbp
0x000062e4      415c           pop r12
0x000062e6      c3             ret
0x000062e7      660f1f840000.  nop word [rax + rax]
;-- fseterr:
0x000062f0      830f20         or dword [rdi], 0x20                    ; ../coreutils-8.31/lib/fseterr.c:31 ; [0x20:4]=64 ; "@"
0x000062f3      c3             ret                                     ; ../coreutils-8.31/lib/fseterr.c:84
0x000062f4      662e0f1f8400.  nop word cs:[rax + rax]
0x000062fe      6690           nop
;-- vasnprintf:
0x00006300      55             push rbp                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00006301      4889e5         mov rbp, rsp
0x00006304      4157           push r15
0x00006306      4156           push r14
0x00006308      4155           push r13
0x0000630a      4154           push r12
0x0000630c      4c8db550fcff.  lea r14, [rbp - 0x3b0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00006313      53             push rbx                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00006314      4889d3         mov rbx, rdx
0x00006317      4989cc         mov r12, rcx
0x0000631a      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0000631d      4881ec080400.  sub rsp, 0x408                          ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00006324      4889b5e8fbff.  mov qword [rbp - 0x418], rsi
0x0000632b      488db540fdff.  lea rsi, [rbp - 0x2c0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00006332      4889bd18fcff.  mov qword [rbp - 0x3e8], rdi            ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00006339      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0000633c      4c89b5f0fbff.  mov qword [rbp - 0x410], r14
0x00006343      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x0000634c      488945c8       mov qword [rbp - 0x38], rax
0x00006350      31c0           xor eax, eax
0x00006352      4889b5f8fbff.  mov qword [rbp - 0x408], rsi            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00006359      e8c2120000     call sym.printf_parse
0x0000635e      85c0           test eax, eax
0x00006360      0f88620e0000   js 0x71c8
0x00006366      4c89f6         mov rsi, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1802
0x00006369      4c89e7         mov rdi, r12
0x0000636c      e8af100000     call sym.printf_fetchargs
0x00006371      85c0           test eax, eax
0x00006373      0f88b70e0000   js 0x7230
0x00006379      488b8550fdff.  mov rax, qword [rbp - 0x2b0]            ; ../coreutils-8.31/lib/xsize.h:65
0x00006380      48c7c2ffffff.  mov rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/xsize.h:66
0x00006387      4883c007       add rax, 7                              ; ../coreutils-8.31/lib/xsize.h:65
0x0000638b      4883f806       cmp rax, 6                              ; ../coreutils-8.31/lib/xsize.h:66
0x0000638f      480f46c2       cmovbe rax, rdx
0x00006393      48038558fdff.  add rax, qword [rbp - 0x2a8]
0x0000639a      0f82280a0000   jb 0x6dc8
0x000063a0      4889c7         mov rdi, rax
0x000063a3      4531c0         xor r8d, r8d
0x000063a6      4883c706       add rdi, 6
0x000063aa      410f92c0       setb r8b
0x000063ae      0f82140a0000   jb 0x6dc8
0x000063b4      4881ff9f0f00.  cmp rdi, 0xf9f                          ; ../coreutils-8.31/lib/vasnprintf.c:1826
0x000063bb      0f8647010000   jbe 0x6508
0x000063c1      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1835
0x000063c5      4c898538fcff.  mov qword [rbp - 0x3c8], r8
0x000063cc      0f84f6090000   je 0x6dc8
0x000063d2      e849b2ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x000063d7      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x000063da      48898528fcff.  mov qword [rbp - 0x3d8], rax            ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x000063e1      0f84e1090000   je 0x6dc8                               ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x000063e7      4c8b8538fcff.  mov r8, qword [rbp - 0x3c8]
0x000063ee      488985e0fbff.  mov qword [rbp - 0x420], rax
0x000063f5      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/vasnprintf.c:1851
0x000063f8      4883bd18fcff.  cmp qword [rbp - 0x3e8], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1843
0x00006400      740a           je 0x640c
0x00006402      488b85e8fbff.  mov rax, qword [rbp - 0x418]            ; ../coreutils-8.31/lib/vasnprintf.c:1846
0x00006409      4c8b20         mov r12, qword [rax]
0x0000640c      4c8bad48fdff.  mov r13, qword [rbp - 0x2b8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x00006413      488d8544fcff.  lea rax, [rbp - 0x3bc]                  ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x0000641a      4c8bbd18fcff.  mov r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x00006421      48c78500fcff.  mov qword [rbp - 0x400], 0
0x0000642c      48898510fcff.  mov qword [rbp - 0x3f0], rax            ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x00006433      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x00006436      4c89c3         mov rbx, r8
0x00006439      498b4d00       mov rcx, qword [r13]                    ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x0000643d      4989c0         mov r8, rax                             ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x00006440      4c39c1         cmp rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x00006443      0f8468090000   je 0x6db1
0x00006449      4c29c1         sub rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1887
0x0000644c      4889d8         mov rax, rbx
0x0000644f      4801c8         add rax, rcx
0x00006452      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/xsize.h:65
0x00006455      0f83dd000000   jae 0x6538                              ; ../coreutils-8.31/lib/xsize.h:66
0x0000645b      4983fcff       cmp r12, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x0000645f      0f84cb0a0000   je 0x6f30
0x00006465      e8e6afffff     call sym.imp.__errno_location
0x0000646a      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00006471      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:5606
0x00006478      7409           je 0x6483
0x0000647a      4d85ff         test r15, r15
0x0000647d      0f85dd0a0000   jne 0x6f60
0x00006483      488b85e0fbff.  mov rax, qword [rbp - 0x420]            ; ../coreutils-8.31/lib/vasnprintf.c:5608
0x0000648a      4885c0         test rax, rax
0x0000648d      7408           je 0x6497
0x0000648f      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:5609
0x00006492      e899afffff     call sym.imp.free
0x00006497      488b85f8fbff.  mov rax, qword [rbp - 0x408]            ; ../coreutils-8.31/lib/vasnprintf.c:5611
0x0000649e      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x000064a5      4883c020       add rax, 0x20                           ; "@"
0x000064a9      4839c7         cmp rdi, rax
0x000064ac      7405           je 0x64b3
0x000064ae      e87dafffff     call sym.imp.free
0x000064b3      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x000064ba      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x000064c1      4883c010       add rax, 0x10
0x000064c5      4839c7         cmp rdi, rax
0x000064c8      7405           je 0x64cf
0x000064ca      e861afffff     call sym.imp.free
0x000064cf      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5612
0x000064d6      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/vasnprintf.c:5613
0x000064d9      c7000c000000   mov dword [rax], 0xc                    ; ../coreutils-8.31/lib/vasnprintf.c:5612 ; [0xc:4]=0
0x000064df      488b7dc8       mov rdi, qword [rbp - 0x38]             ; ../coreutils-8.31/lib/vasnprintf.c:5615
0x000064e3      6448333c2528.  xor rdi, qword fs:[0x28]
0x000064ec      4c89f8         mov rax, r15
0x000064ef      0f85020f0000   jne 0x73f7
0x000064f5      488d65d8       lea rsp, [rbp - 0x28]
0x000064f9      5b             pop rbx
0x000064fa      415c           pop r12
0x000064fc      415d           pop r13
0x000064fe      415e           pop r14
0x00006500      415f           pop r15
0x00006502      5d             pop rbp
0x00006503      c3             ret
0x00006504      0f1f4000       nop dword [rax]
0x00006508      4883c024       add rax, 0x24                           ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x0000650c      48c785e0fbff.  mov qword [rbp - 0x420], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1829
0x00006517      4883e0f0       and rax, 0xfffffffffffffff0             ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x0000651b      4829c4         sub rsp, rax
0x0000651e      488d44240f     lea rax, [rsp + 0xf]
0x00006523      4883e0f0       and rax, 0xfffffffffffffff0
0x00006527      48898528fcff.  mov qword [rbp - 0x3d8], rax
0x0000652e      e9c2feffff     jmp 0x63f5
0x00006533      0f1f440000     nop dword [rax + rax]
0x00006538      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x0000653b      7367           jae 0x65a4
0x0000653d      4d85e4         test r12, r12
0x00006540      0f852a090000   jne 0x6e70
0x00006546      4883f80c       cmp rax, 0xc
0x0000654a      0f8732090000   ja 0x6e82
0x00006550      41bc0c000000   mov r12d, 0xc
0x00006556      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000655d      0f94c2         sete dl
0x00006560      4d85ff         test r15, r15
0x00006563      0f843f090000   je 0x6ea8
0x00006569      84d2           test dl, dl
0x0000656b      0f8537090000   jne 0x6ea8
0x00006571      4c89e6         mov rsi, r12
0x00006574      4c89ff         mov rdi, r15
0x00006577      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x0000657e      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00006585      e8d6b0ffff     call sym.imp.realloc
0x0000658a      4885c0         test rax, rax
0x0000658d      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00006594      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x0000659b      0f84aa090000   je 0x6f4b
0x000065a1      4989c7         mov r15, rax
0x000065a4      498d3c1f       lea rdi, [r15 + rbx]                    ; ../coreutils-8.31/lib/vasnprintf.c:1896
0x000065a8      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000065ab      4c89c6         mov rsi, r8
0x000065ae      e83db0ffff     call sym.imp.memcpy
0x000065b3      488b8500fcff.  mov rax, qword [rbp - 0x400]            ; ../coreutils-8.31/lib/vasnprintf.c:1906
0x000065ba      48398540fdff.  cmp qword [rbp - 0x2c0], rax
0x000065c1      0f84b40c0000   je 0x727b
0x000065c7      410fb65548     movzx edx, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:1910
0x000065cc      498b4550       mov rax, qword [r13 + 0x50]
0x000065d0      80fa25         cmp dl, 0x25
0x000065d3      0f848f070000   je 0x6d68
0x000065d9      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1923
0x000065dd      0f84430c0000   je 0x7226
0x000065e3      4c8b8558fcff.  mov r8, qword [rbp - 0x3a8]
0x000065ea      48c1e005       shl rax, 5
0x000065ee      4c01c0         add rax, r8
0x000065f1      80fa6e         cmp dl, 0x6e                            ; ../coreutils-8.31/lib/vasnprintf.c:1926
0x000065f4      8b38           mov edi, dword [rax]
0x000065f6      89bd30fcffff   mov dword [rbp - 0x3d0], edi
0x000065fc      0f84de070000   je 0x6de0
0x00006602      418b4510       mov eax, dword [r13 + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4603
0x00006606      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4770
0x0000660d      a801           test al, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x0000660f      c60725         mov byte [rdi], 0x25                    ; ../coreutils-8.31/lib/vasnprintf.c:4770 ; '%'
                                                                       ; [0x25:1]=0
0x00006612      488d5f01       lea rbx, [rdi + 1]
0x00006616      740f           je 0x6627                               ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x00006618      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4777
0x0000661f      488d5f02       lea rbx, [rdi + 2]
0x00006623      c6470127       mov byte [rdi + 1], 0x27                ; '''
                                                                       ; [0x27:1]=0
0x00006627      a802           test al, 2                              ; ../coreutils-8.31/lib/vasnprintf.c:4779
0x00006629      7407           je 0x6632
0x0000662b      c6032d         mov byte [rbx], 0x2d                    ; ../coreutils-8.31/lib/vasnprintf.c:4780 ; '-'
                                                                       ; [0x2d:1]=0
0x0000662e      4883c301       add rbx, 1
0x00006632      a804           test al, 4                              ; ../coreutils-8.31/lib/vasnprintf.c:4781
0x00006634      7407           je 0x663d
0x00006636      c6032b         mov byte [rbx], 0x2b                    ; ../coreutils-8.31/lib/vasnprintf.c:4782 ; '+'
                                                                       ; [0x2b:1]=0
0x00006639      4883c301       add rbx, 1
0x0000663d      a808           test al, 8                              ; ../coreutils-8.31/lib/vasnprintf.c:4783
0x0000663f      7407           je 0x6648
0x00006641      c60320         mov byte [rbx], 0x20                    ; ../coreutils-8.31/lib/vasnprintf.c:4784 ; [0x20:1]=64 ; "@"
0x00006644      4883c301       add rbx, 1
0x00006648      a810           test al, 0x10                           ; ../coreutils-8.31/lib/vasnprintf.c:4785
0x0000664a      7407           je 0x6653
0x0000664c      c60323         mov byte [rbx], 0x23                    ; ../coreutils-8.31/lib/vasnprintf.c:4786 ; '#'
                                                                       ; [0x23:1]=0
0x0000664f      4883c301       add rbx, 1
0x00006653      a840           test al, 0x40                           ; ../coreutils-8.31/lib/vasnprintf.c:4788 ; segment.PHDR
0x00006655      7407           je 0x665e
0x00006657      c60349         mov byte [rbx], 0x49                    ; ../coreutils-8.31/lib/vasnprintf.c:4789 ; 'I'
                                                                       ; [0x49:1]=0
0x0000665a      4883c301       add rbx, 1
0x0000665e      a820           test al, 0x20                           ; ../coreutils-8.31/lib/vasnprintf.c:4793 ; "@"
0x00006660      7407           je 0x6669
0x00006662      c60330         mov byte [rbx], 0x30                    ; ../coreutils-8.31/lib/vasnprintf.c:4794 ; '0'
                                                                       ; [0x30:1]=0
0x00006665      4883c301       add rbx, 1
0x00006669      498b7518       mov rsi, qword [r13 + 0x18]             ; ../coreutils-8.31/lib/vasnprintf.c:4795
0x0000666d      498b5520       mov rdx, qword [r13 + 0x20]
0x00006671      4839d6         cmp rsi, rdx
0x00006674      7430           je 0x66a6
0x00006676      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x00006679      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000667c      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00006683      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x00006686      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006689      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00006690      e85bafffff     call sym.imp.memcpy
0x00006695      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4803
0x0000669c      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x000066a3      4801cb         add rbx, rcx
0x000066a6      498b7530       mov rsi, qword [r13 + 0x30]             ; ../coreutils-8.31/lib/vasnprintf.c:4816
0x000066aa      498b5538       mov rdx, qword [r13 + 0x38]
0x000066ae      4839d6         cmp rsi, rdx
0x000066b1      7430           je 0x66e3
0x000066b3      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x000066b6      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000066b9      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x000066c0      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x000066c3      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000066c6      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x000066cd      e81eafffff     call sym.imp.memcpy
0x000066d2      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4824
0x000066d9      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x000066e0      4801cb         add rbx, rcx
0x000066e3      8bbd30fcffff   mov edi, dword [rbp - 0x3d0]
0x000066e9      83ff10         cmp edi, 0x10
0x000066ec      772d           ja 0x671b
0x000066ee      b801000000     mov eax, 1
0x000066f3      89f9           mov ecx, edi
0x000066f5      48d3e0         shl rax, cl
0x000066f8      a980410100     test eax, 0x14180
0x000066fd      7515           jne 0x6714
0x000066ff      f6c410         test ah, 0x10
0x00006702      0f8558090000   jne 0x7060
0x00006708      f6c406         test ah, 6
0x0000670b      740e           je 0x671b
0x0000670d      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4847 ; 'l'
                                                                       ; [0x6c:1]=0
0x00006710      4883c301       add rbx, 1
0x00006714      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4859 ; 'l'
                                                                       ; [0x6c:1]=0
0x00006717      4883c301       add rbx, 1
0x0000671b      410fb64548     movzx eax, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x00006720      c6430100       mov byte [rbx + 1], 0                   ; ../coreutils-8.31/lib/vasnprintf.c:4922
0x00006724      8803           mov byte [rbx], al                      ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x00006726      498b4528       mov rax, qword [r13 + 0x28]             ; ../coreutils-8.31/lib/vasnprintf.c:4930
0x0000672a      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000672e      0f842c070000   je 0x6e60
0x00006734      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4932
0x00006738      4c01c0         add rax, r8
0x0000673b      833805         cmp dword [rax], 5
0x0000673e      0f85e20a0000   jne 0x7226
0x00006744      8b4010         mov eax, dword [rax + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4934
0x00006747      c78520fcffff.  mov dword [rbp - 0x3e0], 1
0x00006751      898548fcffff   mov dword [rbp - 0x3b8], eax
0x00006757      498b4540       mov rax, qword [r13 + 0x40]             ; ../coreutils-8.31/lib/vasnprintf.c:4936
0x0000675b      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000675f      742b           je 0x678c
0x00006761      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4938
0x00006765      4901c0         add r8, rax
0x00006768      41833805       cmp dword [r8], 5
0x0000676c      0f85b40a0000   jne 0x7226
0x00006772      8b8520fcffff   mov eax, dword [rbp - 0x3e0]            ; ../coreutils-8.31/lib/vasnprintf.c:4940
0x00006778      418b5010       mov edx, dword [r8 + 0x10]
0x0000677c      89948548fcff.  mov dword [rbp + rax*4 - 0x3b8], edx
0x00006783      8d4001         lea eax, [rax + 1]
0x00006786      898520fcffff   mov dword [rbp - 0x3e0], eax
0x0000678c      4c89f0         mov rax, r14
0x0000678f      31d2           xor edx, edx
0x00006791      4883c002       add rax, 2
0x00006795      0f82610c0000   jb 0x73fc
0x0000679b      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:4952
0x0000679e      734b           jae 0x67eb
0x000067a0      4d85e4         test r12, r12
0x000067a3      0f851f080000   jne 0x6fc8
0x000067a9      4883f80c       cmp rax, 0xc
0x000067ad      0f872d080000   ja 0x6fe0
0x000067b3      41bc0c000000   mov r12d, 0xc
0x000067b9      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000067c0      0f94c2         sete dl
0x000067c3      4d85ff         test r15, r15
0x000067c6      0f8444080000   je 0x7010
0x000067cc      84d2           test dl, dl
0x000067ce      0f853c080000   jne 0x7010
0x000067d4      4c89e6         mov rsi, r12
0x000067d7      4c89ff         mov rdi, r15
0x000067da      e881aeffff     call sym.imp.realloc
0x000067df      4885c0         test rax, rax
0x000067e2      0f847dfcffff   je 0x6465
0x000067e8      4989c7         mov r15, rax
0x000067eb      43c6043700     mov byte [r15 + r14], 0                 ; ../coreutils-8.31/lib/vasnprintf.c:4957
0x000067f0      e85bacffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:4960
0x000067f5      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x000067fc      8b00           mov eax, dword [rax]
0x000067fe      48899d08fcff.  mov qword [rbp - 0x3f8], rbx
0x00006805      8985dcfbffff   mov dword [rbp - 0x424], eax
0x0000680b      0f1f440000     nop dword [rax + rax]
0x00006810      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x00006817      4c89e3         mov rbx, r12                            ; ../coreutils-8.31/lib/vasnprintf.c:4968
0x0000681a      41baffffff7f   mov r10d, 0x7fffffff
0x00006820      4c29f3         sub rbx, r14
0x00006823      c78544fcffff.  mov dword [rbp - 0x3bc], 0xffffffff     ; ../coreutils-8.31/lib/vasnprintf.c:4964 ; -1
0x0000682d      4881fbffffff.  cmp rbx, 0x7fffffff
0x00006834      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x0000683a      8b8530fcffff   mov eax, dword [rbp - 0x3d0]            ; ../coreutils-8.31/lib/vasnprintf.c:5016
0x00006840      4c0f46d3       cmovbe r10, rbx
0x00006844      83f811         cmp eax, 0x11
0x00006847      0f87d9090000   ja 0x7226
0x0000684d      488d35f42f00.  lea rsi, [0x00009848]
0x00006854      48630486       movsxd rax, dword [rsi + rax*4]
0x00006858      4801f0         add rax, rsi
0x0000685b      ffe0           jmp rax
0x0000685d      0f1f00         nop dword [rax]
0x00006860      498b4550       mov rax, qword [r13 + 0x50]
0x00006864      4b8d3c37       lea rdi, [r15 + r14]
0x00006868      48c1e005       shl rax, 5
0x0000686c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006873      4c8b4810       mov r9, qword [rax + 0x10]
0x00006877      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000687d      83f801         cmp eax, 1
0x00006880      0f84c2040000   je 0x6d48
0x00006886      83f802         cmp eax, 2
0x00006889      0f84a1040000   je 0x6d30
0x0000688f      4883ec08       sub rsp, 8
0x00006893      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006899      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x000068a0      4c89d6         mov rsi, r10                            ; ../coreutils-8.31/lib/vasnprintf.c:5007
0x000068a3      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x000068aa      ba01000000     mov edx, 1
0x000068af      31c0           xor eax, eax
0x000068b1      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x000068b8      e863abffff     call sym.imp.__snprintf_chk
0x000068bd      5e             pop rsi
0x000068be      5f             pop rdi
0x000068bf      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x000068c6      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x000068cc      85c9           test ecx, ecx
0x000068ce      0f8838010000   js 0x6a0c
0x000068d4      4863d1         movsxd rdx, ecx
0x000068d7      4c39d2         cmp rdx, r10
0x000068da      730e           jae 0x68ea
0x000068dc      4c01fa         add rdx, r15
0x000068df      42803c3200     cmp byte [rdx + r14], 0
0x000068e4      0f853c090000   jne 0x7226
0x000068ea      39c1           cmp ecx, eax
0x000068ec      7d08           jge 0x68f6
0x000068ee      898544fcffff   mov dword [rbp - 0x3bc], eax
0x000068f4      89c1           mov ecx, eax
0x000068f6      8d4101         lea eax, [rcx + 1]
0x000068f9      4c39d0         cmp rax, r10
0x000068fc      0f822e080000   jb 0x7130
0x00006902      4881fbfeffff.  cmp rbx, 0x7ffffffe
0x00006909      0f8741080000   ja 0x7150
0x0000690f      4b8d3424       lea rsi, [r12 + r12]
0x00006913      8d5102         lea edx, [rcx + 2]
0x00006916      4d85e4         test r12, r12
0x00006919      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00006920      480f49c6       cmovns rax, rsi
0x00006924      4c01f2         add rdx, r14
0x00006927      0f82bb0a0000   jb 0x73e8
0x0000692d      4839d0         cmp rax, rdx
0x00006930      480f42c2       cmovb rax, rdx
0x00006934      4939c4         cmp r12, rax
0x00006937      0f83d3feffff   jae 0x6810
0x0000693d      4d85e4         test r12, r12
0x00006940      0f882bfbffff   js 0x6471
0x00006946      4839c6         cmp rsi, rax
0x00006949      4989f4         mov r12, rsi
0x0000694c      730d           jae 0x695b
0x0000694e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006952      0f8419fbffff   je 0x6471
0x00006958      4989c4         mov r12, rax
0x0000695b      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006962      0f94c3         sete bl
0x00006965      4d85ff         test r15, r15
0x00006968      0f8482030000   je 0x6cf0
0x0000696e      84db           test bl, bl
0x00006970      0f857a030000   jne 0x6cf0
0x00006976      4c89e6         mov rsi, r12
0x00006979      4c89ff         mov rdi, r15
0x0000697c      e8dfacffff     call sym.imp.realloc
0x00006981      4885c0         test rax, rax
0x00006984      0f84e7faffff   je 0x6471
0x0000698a      4989c7         mov r15, rax
0x0000698d      e97efeffff     jmp 0x6810                              ; stdio2.h:-211
0x00006992      660f1f440000   nop word [rax + rax]
0x00006998      498b4550       mov rax, qword [r13 + 0x50]
0x0000699c      4b8d3c37       lea rdi, [r15 + r14]
0x000069a0      48c1e005       shl rax, 5
0x000069a4      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000069ab      448b4810       mov r9d, dword [rax + 0x10]
0x000069af      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x000069b5      83f801         cmp eax, 1
0x000069b8      0f8432020000   je 0x6bf0
0x000069be      83f802         cmp eax, 2
0x000069c1      0f8471020000   je 0x6c38
0x000069c7      4883ec08       sub rsp, 8
0x000069cb      ffb510fcffff   push qword [rbp - 0x3f0]
0x000069d1      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x000069d8      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x000069df      ba01000000     mov edx, 1
0x000069e4      4c89d6         mov rsi, r10
0x000069e7      31c0           xor eax, eax
0x000069e9      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x000069f0      e82baaffff     call sym.imp.__snprintf_chk
0x000069f5      5a             pop rdx
0x000069f6      59             pop rcx
0x000069f7      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x000069fd      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]            ; ../coreutils-8.31/lib/vasnprintf.c:4942
0x00006a04      85c9           test ecx, ecx
0x00006a06      0f89c8feffff   jns 0x68d4
0x00006a0c      488bbd08fcff.  mov rdi, qword [rbp - 0x3f8]
0x00006a13      807f0100       cmp byte [rdi + 1], 0
0x00006a17      0f853b030000   jne 0x6d58
0x00006a1d      85c0           test eax, eax
0x00006a1f      0f89c9feffff   jns 0x68ee
0x00006a25      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00006a2c      8b18           mov ebx, dword [rax]
0x00006a2e      85db           test ebx, ebx
0x00006a30      751e           jne 0x6a50
0x00006a32      410fb64548     movzx eax, byte [r13 + 0x48]
0x00006a37      bb16000000     mov ebx, 0x16
0x00006a3c      83e0ef         and eax, 0xffffffef                     ; ../coreutils-8.31/lib/vasnprintf.c:4951 ; 4294967279
0x00006a3f      3c63           cmp al, 0x63
0x00006a41      b854000000     mov eax, 0x54                           ; 'T'
0x00006a46      0f44d8         cmove ebx, eax
0x00006a49      0f1f80000000.  nop dword [rax]
0x00006a50      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006a57      7409           je 0x6a62
0x00006a59      4d85ff         test r15, r15
0x00006a5c      0f85aa070000   jne 0x720c
0x00006a62      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x00006a69      4885c0         test rax, rax
0x00006a6c      7408           je 0x6a76
0x00006a6e      4889c7         mov rdi, rax
0x00006a71      e8baa9ffff     call sym.imp.free
0x00006a76      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x00006a7d      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00006a84      4883c020       add rax, 0x20                           ; "@"
0x00006a88      4839c7         cmp rdi, rax
0x00006a8b      7405           je 0x6a92
0x00006a8d      e89ea9ffff     call sym.imp.free
0x00006a92      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00006a99      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00006aa0      4883c010       add rax, 0x10
0x00006aa4      4839c7         cmp rdi, rax
0x00006aa7      7405           je 0x6aae
0x00006aa9      e882a9ffff     call sym.imp.free
0x00006aae      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00006ab5      4531ff         xor r15d, r15d
0x00006ab8      8918           mov dword [rax], ebx
0x00006aba      e920faffff     jmp 0x64df
0x00006abf      90             nop
0x00006ac0      498b4550       mov rax, qword [r13 + 0x50]
0x00006ac4      4b8d3c37       lea rdi, [r15 + r14]
0x00006ac8      48c1e005       shl rax, 5
0x00006acc      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006ad3      db6810         fld xword [rax + 0x10]
0x00006ad6      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006adc      83f801         cmp eax, 1
0x00006adf      0f842b060000   je 0x7110
0x00006ae5      83f802         cmp eax, 2
0x00006ae8      0f85c2040000   jne 0x6fb0
0x00006aee      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x00006af4      4883ec08       sub rsp, 8
0x00006af8      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/vasnprintf.c:4814
0x00006afe      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x00006b05      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006b0c      4c89d6         mov rsi, r10
0x00006b0f      4883ec18       sub rsp, 0x18
0x00006b13      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00006b1a      ba01000000     mov edx, 1
0x00006b1f      db7c2408       fstp xword [rsp + 8]
0x00006b23      50             push rax
0x00006b24      31c0           xor eax, eax
0x00006b26      4c8995d0fbff.  mov qword [rbp - 0x430], r10            ; ../coreutils-8.31/lib/vasnprintf.c:4808
0x00006b2d      e8eea8ffff     call sym.imp.__snprintf_chk
0x00006b32      4883c430       add rsp, 0x30
0x00006b36      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006b3d      e984fdffff     jmp 0x68c6
0x00006b42      660f1f440000   nop word [rax + rax]
0x00006b48      498b4550       mov rax, qword [r13 + 0x50]
0x00006b4c      4b8d3c37       lea rdi, [r15 + r14]
0x00006b50      48c1e005       shl rax, 5
0x00006b54      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006b5b      f20f104010     movsd xmm0, qword [rax + 0x10]
0x00006b60      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006b66      83f801         cmp eax, 1
0x00006b69      0f8491050000   je 0x7100
0x00006b6f      83f802         cmp eax, 2
0x00006b72      0f85f8030000   jne 0x6f70
0x00006b78      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x00006b7e      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006b84      50             push rax
0x00006b85      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x00006b8c      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006b93      4c89d6         mov rsi, r10
0x00006b96      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00006b9d      ba01000000     mov edx, 1
0x00006ba2      b801000000     mov eax, 1
0x00006ba7      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006bae      e86da8ffff     call sym.imp.__snprintf_chk
0x00006bb3      4158           pop r8
0x00006bb5      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006bbc      4159           pop r9
0x00006bbe      e903fdffff     jmp 0x68c6
0x00006bc3      0f1f440000     nop dword [rax + rax]
0x00006bc8      498b4550       mov rax, qword [r13 + 0x50]
0x00006bcc      4b8d3c37       lea rdi, [r15 + r14]
0x00006bd0      48c1e005       shl rax, 5
0x00006bd4      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006bdb      440fb74810     movzx r9d, word [rax + 0x10]
0x00006be0      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006be6      83f801         cmp eax, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4758
0x00006be9      0f85cffdffff   jne 0x69be
0x00006bef      90             nop
0x00006bf0      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006bf6      4151           push r9
0x00006bf8      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x00006bff      e9cdfdffff     jmp 0x69d1
0x00006c04      0f1f4000       nop dword [rax]
0x00006c08      498b4550       mov rax, qword [r13 + 0x50]
0x00006c0c      4b8d3c37       lea rdi, [r15 + r14]
0x00006c10      48c1e005       shl rax, 5
0x00006c14      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006c1b      440fbf4810     movsx r9d, word [rax + 0x10]
0x00006c20      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006c26      83f801         cmp eax, 1
0x00006c29      74c5           je 0x6bf0
0x00006c2b      83f802         cmp eax, 2
0x00006c2e      0f8593fdffff   jne 0x69c7
0x00006c34      0f1f4000       nop dword [rax]
0x00006c38      4883ec08       sub rsp, 8
0x00006c3c      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006c42      4151           push r9
0x00006c44      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x00006c4a      50             push rax
0x00006c4b      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]            ; ../coreutils-8.31/lib/vasnprintf.c:4623
0x00006c52      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006c59      4c89d6         mov rsi, r10
0x00006c5c      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00006c63      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4624
0x00006c68      31c0           xor eax, eax
0x00006c6a      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006c71      e8aaa7ffff     call sym.imp.__snprintf_chk
0x00006c76      4883c420       add rsp, 0x20
0x00006c7a      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006c81      e940fcffff     jmp 0x68c6
0x00006c86      662e0f1f8400.  nop word cs:[rax + rax]
0x00006c90      498b4550       mov rax, qword [r13 + 0x50]
0x00006c94      4b8d3c37       lea rdi, [r15 + r14]
0x00006c98      48c1e005       shl rax, 5
0x00006c9c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006ca3      440fb64810     movzx r9d, byte [rax + 0x10]
0x00006ca8      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006cae      83f801         cmp eax, 1
0x00006cb1      0f8507fdffff   jne 0x69be
0x00006cb7      e934ffffff     jmp 0x6bf0
0x00006cbc      0f1f4000       nop dword [rax]
0x00006cc0      498b4550       mov rax, qword [r13 + 0x50]
0x00006cc4      4b8d3c37       lea rdi, [r15 + r14]
0x00006cc8      48c1e005       shl rax, 5
0x00006ccc      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006cd3      440fbe4810     movsx r9d, byte [rax + 0x10]
0x00006cd8      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006cde      83f801         cmp eax, 1
0x00006ce1      0f85d7fcffff   jne 0x69be
0x00006ce7      e904ffffff     jmp 0x6bf0
0x00006cec      0f1f4000       nop dword [rax]
0x00006cf0      4c89e7         mov rdi, r12
0x00006cf3      e828a9ffff     call sym.imp.malloc
0x00006cf8      4885c0         test rax, rax
0x00006cfb      4889c1         mov rcx, rax
0x00006cfe      0f846df7ffff   je 0x6471
0x00006d04      4d85f6         test r14, r14
0x00006d07      0f84b3000000   je 0x6dc0
0x00006d0d      84db           test bl, bl
0x00006d0f      0f84ab000000   je 0x6dc0
0x00006d15      4c89fe         mov rsi, r15
0x00006d18      4c89f2         mov rdx, r14
0x00006d1b      4889c7         mov rdi, rax
0x00006d1e      e8cda8ffff     call sym.imp.memcpy
0x00006d23      4989c7         mov r15, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1511
0x00006d26      e9e5faffff     jmp 0x6810
0x00006d2b      0f1f440000     nop dword [rax + rax]
0x00006d30      4883ec08       sub rsp, 8
0x00006d34      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/xsize.h:-338
0x00006d3a      4151           push r9
0x00006d3c      e903ffffff     jmp 0x6c44
0x00006d41      0f1f80000000.  nop dword [rax]
0x00006d48      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006d4e      4151           push r9
0x00006d50      e9a3feffff     jmp 0x6bf8
0x00006d55      0f1f00         nop dword [rax]
0x00006d58      c6470100       mov byte [rdi + 1], 0
0x00006d5c      e9affaffff     jmp 0x6810
0x00006d61      0f1f80000000.  nop dword [rax]
0x00006d68      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006d6c      0f85b4040000   jne 0x7226
0x00006d72      4c89f0         mov rax, r14
0x00006d75      4883c001       add rax, 1
0x00006d79      4889c3         mov rbx, rax
0x00006d7c      0f8386000000   jae 0x6e08
0x00006d82      4983fcff       cmp r12, 0xffffffffffffffff
0x00006d86      0f85d9f6ffff   jne 0x6465
0x00006d8c      4c89e3         mov rbx, r12
0x00006d8f      43c6043725     mov byte [r15 + r14], 0x25              ; '%'
                                                                       ; [0x25:1]=0
0x00006d94      4d8b4508       mov r8, qword [r13 + 8]
0x00006d98      4983c558       add r13, 0x58
0x00006d9c      498b4d00       mov rcx, qword [r13]
0x00006da0      48838500fcff.  add qword [rbp - 0x400], 1
0x00006da8      4c39c1         cmp rcx, r8
0x00006dab      0f8598f6ffff   jne 0x6449
0x00006db1      4989de         mov r14, rbx
0x00006db4      e9faf7ffff     jmp 0x65b3                              ; ../coreutils-8.31/lib/vasnprintf.c:1525
0x00006db9      0f1f80000000.  nop dword [rax]
0x00006dc0      4989cf         mov r15, rcx
0x00006dc3      e948faffff     jmp 0x6810                              ; ../coreutils-8.31/lib/vasnprintf.c:1514
0x00006dc8      e883a6ffff     call sym.imp.__errno_location
0x00006dcd      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00006dd4      e9bef6ffff     jmp 0x6497
0x00006dd9      0f1f80000000.  nop dword [rax]
0x00006de0      89fa           mov edx, edi
0x00006de2      83ea12         sub edx, 0x12
0x00006de5      83fa04         cmp edx, 4
0x00006de8      0f8738040000   ja 0x7226
0x00006dee      488d3d9b2a00.  lea rdi, [0x00009890]
0x00006df5      488b4010       mov rax, qword [rax + 0x10]
0x00006df9      48631497       movsxd rdx, dword [rdi + rdx*4]
0x00006dfd      4801fa         add rdx, rdi
0x00006e00      ffe2           jmp rdx
0x00006e02      660f1f440000   nop word [rax + rax]
0x00006e08      4939c4         cmp r12, rax
0x00006e0b      7382           jae 0x6d8f
0x00006e0d      4d85e4         test r12, r12
0x00006e10      0f85ca030000   jne 0x71e0
0x00006e16      4883f80c       cmp rax, 0xc
0x00006e1a      0f87d2030000   ja 0x71f2
0x00006e20      41bc0c000000   mov r12d, 0xc
0x00006e26      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006e2d      0f94c2         sete dl
0x00006e30      4d85ff         test r15, r15
0x00006e33      0f8467020000   je 0x70a0
0x00006e39      84d2           test dl, dl
0x00006e3b      0f855f020000   jne 0x70a0
0x00006e41      4c89e6         mov rsi, r12
0x00006e44      4c89ff         mov rdi, r15
0x00006e47      e814a8ffff     call sym.imp.realloc                    ; ../coreutils-8.31/lib/vasnprintf.c:1487
0x00006e4c      4885c0         test rax, rax
0x00006e4f      0f84f6000000   je 0x6f4b
0x00006e55      4989c7         mov r15, rax
0x00006e58      e932ffffff     jmp 0x6d8f
0x00006e5d      0f1f00         nop dword [rax]
0x00006e60      c78520fcffff.  mov dword [rbp - 0x3e0], 0
0x00006e6a      e9e8f8ffff     jmp 0x6757
0x00006e6f      90             nop
0x00006e70      0f88eff5ffff   js 0x6465
0x00006e76      4d01e4         add r12, r12
0x00006e79      4939c4         cmp r12, rax
0x00006e7c      0f83d4f6ffff   jae 0x6556
0x00006e82      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006e86      0f84d9f5ffff   je 0x6465
0x00006e8c      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006e93      4989c4         mov r12, rax
0x00006e96      0f94c2         sete dl
0x00006e99      4d85ff         test r15, r15
0x00006e9c      0f85c7f6ffff   jne 0x6569
0x00006ea2      660f1f440000   nop word [rax + rax]
0x00006ea8      4c89e7         mov rdi, r12
0x00006eab      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00006eb2      889530fcffff   mov byte [rbp - 0x3d0], dl
0x00006eb8      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00006ebf      e85ca7ffff     call sym.imp.malloc
0x00006ec4      4885c0         test rax, rax
0x00006ec7      4989c1         mov r9, rax
0x00006eca      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00006ed1      0fb69530fcff.  movzx edx, byte [rbp - 0x3d0]
0x00006ed8      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x00006edf      0f8480f5ffff   je 0x6465
0x00006ee5      4885db         test rbx, rbx
0x00006ee8      0f8402020000   je 0x70f0
0x00006eee      84d2           test dl, dl
0x00006ef0      0f84fa010000   je 0x70f0
0x00006ef6      4c89fe         mov rsi, r15
0x00006ef9      4889da         mov rdx, rbx
0x00006efc      4889c7         mov rdi, rax
0x00006eff      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x00006f06      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00006f0d      e8dea6ffff     call sym.imp.memcpy
0x00006f12      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00006f19      4989c7         mov r15, rax
0x00006f1c      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x00006f23      e97cf6ffff     jmp 0x65a4
0x00006f28      0f1f84000000.  nop dword [rax + rax]
0x00006f30      4d89e6         mov r14, r12
0x00006f33      e96cf6ffff     jmp 0x65a4
0x00006f38      0f1f84000000.  nop dword [rax + rax]
0x00006f40      4c8930         mov qword [rax], r14
0x00006f43      4c89f3         mov rbx, r14
0x00006f46      e949feffff     jmp 0x6d94
0x00006f4b      e800a5ffff     call sym.imp.__errno_location
0x00006f50      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00006f57      660f1f840000.  nop word [rax + rax]
0x00006f60      4c89ff         mov rdi, r15
0x00006f63      e8c8a4ffff     call sym.imp.free
0x00006f68      e916f5ffff     jmp 0x6483
0x00006f6d      0f1f00         nop dword [rax]
0x00006f70      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x00006f77      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006f7e      4c89d6         mov rsi, r10
0x00006f81      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00006f88      ba01000000     mov edx, 1
0x00006f8d      b801000000     mov eax, 1
0x00006f92      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006f99      e882a4ffff     call sym.imp.__snprintf_chk
0x00006f9e      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006fa5      e91cf9ffff     jmp 0x68c6
0x00006faa      660f1f440000   nop word [rax + rax]
0x00006fb0      4883ec10       sub rsp, 0x10
0x00006fb4      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x00006fbb      db3c24         fstp xword [rsp]
0x00006fbe      e9d6f8ffff     jmp 0x6899
0x00006fc3      0f1f440000     nop dword [rax + rax]
0x00006fc8      0f8897f4ffff   js 0x6465
0x00006fce      4d01e4         add r12, r12
0x00006fd1      4939c4         cmp r12, rax
0x00006fd4      0f83dff7ffff   jae 0x67b9
0x00006fda      660f1f440000   nop word [rax + rax]
0x00006fe0      4885d2         test rdx, rdx
0x00006fe3      0f857cf4ffff   jne 0x6465
0x00006fe9      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006fed      0f8472f4ffff   je 0x6465
0x00006ff3      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006ffa      4989c4         mov r12, rax
0x00006ffd      0f94c2         sete dl                                 ; string_fortified.h:-369
0x00007000      4d85ff         test r15, r15
0x00007003      0f85c3f7ffff   jne 0x67cc
0x00007009      0f1f80000000.  nop dword [rax]
0x00007010      4c89e7         mov rdi, r12
0x00007013      889538fcffff   mov byte [rbp - 0x3c8], dl
0x00007019      e802a6ffff     call sym.imp.malloc
0x0000701e      4885c0         test rax, rax
0x00007021      4889c1         mov rcx, rax
0x00007024      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x0000702b      0f8434f4ffff   je 0x6465                               ; ../coreutils-8.31/lib/vasnprintf.c:1528
0x00007031      4d85f6         test r14, r14
0x00007034      0f8496010000   je 0x71d0
0x0000703a      84d2           test dl, dl
0x0000703c      0f848e010000   je 0x71d0
0x00007042      4c89fe         mov rsi, r15
0x00007045      4c89f2         mov rdx, r14
0x00007048      4889c7         mov rdi, rax
0x0000704b      e8a0a5ffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/vasnprintf.c:1531
0x00007050      4989c7         mov r15, rax
0x00007053      e993f7ffff     jmp 0x67eb
0x00007058      0f1f84000000.  nop dword [rax + rax]
0x00007060      c6034c         mov byte [rbx], 0x4c                    ; 'L'
                                                                       ; [0x4c:1]=0
0x00007063      4883c301       add rbx, 1
0x00007067      e9aff6ffff     jmp 0x671b
0x0000706c      0f1f4000       nop dword [rax]
0x00007070      448830         mov byte [rax], r14b
0x00007073      4c89f3         mov rbx, r14
0x00007076      e919fdffff     jmp 0x6d94
0x0000707b      0f1f440000     nop dword [rax + rax]
0x00007080      448930         mov dword [rax], r14d
0x00007083      4c89f3         mov rbx, r14
0x00007086      e909fdffff     jmp 0x6d94
0x0000708b      0f1f440000     nop dword [rax + rax]
0x00007090      66448930       mov word [rax], r14w
0x00007094      4c89f3         mov rbx, r14
0x00007097      e9f8fcffff     jmp 0x6d94
0x0000709c      0f1f4000       nop dword [rax]
0x000070a0      4c89e7         mov rdi, r12
0x000070a3      889538fcffff   mov byte [rbp - 0x3c8], dl
0x000070a9      e872a5ffff     call sym.imp.malloc
0x000070ae      4885c0         test rax, rax
0x000070b1      4889c1         mov rcx, rax
0x000070b4      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x000070bb      0f84a4f3ffff   je 0x6465                               ; stdio2.h:-339
0x000070c1      4d85f6         test r14, r14
0x000070c4      0f843a010000   je 0x7204
0x000070ca      84d2           test dl, dl
0x000070cc      0f8432010000   je 0x7204
0x000070d2      4c89fe         mov rsi, r15
0x000070d5      4c89f2         mov rdx, r14
0x000070d8      4889c7         mov rdi, rax
0x000070db      e810a5ffff     call sym.imp.memcpy
0x000070e0      4989c7         mov r15, rax
0x000070e3      e9a7fcffff     jmp 0x6d8f
0x000070e8      0f1f84000000.  nop dword [rax + rax]
0x000070f0      4d89cf         mov r15, r9
0x000070f3      e9acf4ffff     jmp 0x65a4
0x000070f8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/vasnprintf.c:5157
0x00007100      4883ec08       sub rsp, 8
0x00007104      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000710a      e976faffff     jmp 0x6b85
0x0000710f      90             nop
0x00007110      4883ec08       sub rsp, 8
0x00007114      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000711a      4883ec10       sub rsp, 0x10
0x0000711e      db3c24         fstp xword [rsp]
0x00007121      e925fbffff     jmp 0x6c4b
0x00007126      662e0f1f8400.  nop word cs:[rax + rax]
0x00007130      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00007137      8bbddcfbffff   mov edi, dword [rbp - 0x424]
0x0000713d      4863d9         movsxd rbx, ecx
0x00007140      4c01f3         add rbx, r14
0x00007143      8938           mov dword [rax], edi
0x00007145      e94afcffff     jmp 0x6d94
0x0000714a      660f1f440000   nop word [rax + rax]
0x00007150      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00007157      7409           je 0x7162
0x00007159      4d85ff         test r15, r15
0x0000715c      0f85b7000000   jne 0x7219
0x00007162      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x00007169      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5198
0x0000716c      7408           je 0x7176
0x0000716e      4889c7         mov rdi, rax
0x00007171      e8baa2ffff     call sym.imp.free
0x00007176      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000717d      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00007184      4883c020       add rax, 0x20                           ; "@"
0x00007188      4839c7         cmp rdi, rax
0x0000718b      7405           je 0x7192
0x0000718d      e89ea2ffff     call sym.imp.free
0x00007192      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00007199      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x000071a0      4883c010       add rax, 0x10
0x000071a4      4839c7         cmp rdi, rax
0x000071a7      7405           je 0x71ae
0x000071a9      e882a2ffff     call sym.imp.free
0x000071ae      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x000071b5      4531ff         xor r15d, r15d
0x000071b8      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x000071be      e91cf3ffff     jmp 0x64df
0x000071c3      0f1f440000     nop dword [rax + rax]
0x000071c8      4531ff         xor r15d, r15d
0x000071cb      e90ff3ffff     jmp 0x64df
0x000071d0      4989cf         mov r15, rcx
0x000071d3      e913f6ffff     jmp 0x67eb                              ; ../coreutils-8.31/lib/vasnprintf.c:1273
0x000071d8      0f1f84000000.  nop dword [rax + rax]
0x000071e0      0f887ff2ffff   js 0x6465
0x000071e6      4d01e4         add r12, r12
0x000071e9      4939c4         cmp r12, rax
0x000071ec      0f8334fcffff   jae 0x6e26
0x000071f2      4883f8ff       cmp rax, 0xffffffffffffffff
0x000071f6      0f8469f2ffff   je 0x6465
0x000071fc      4989c4         mov r12, rax
0x000071ff      e922fcffff     jmp 0x6e26
0x00007204      4989cf         mov r15, rcx
0x00007207      e983fbffff     jmp 0x6d8f
0x0000720c      4c89ff         mov rdi, r15
0x0000720f      e81ca2ffff     call sym.imp.free
0x00007214      e949f8ffff     jmp 0x6a62
0x00007219      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/vasnprintf.c:1275
0x0000721c      e80fa2ffff     call sym.imp.free
0x00007221      e93cffffff     jmp 0x7162
0x00007226      e815a2ffff     call sym.imp.abort
0x0000722b      0f1f440000     nop dword [rax + rax]
0x00007230      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x00007237      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x0000723e      4883c020       add rax, 0x20                           ; "@"
0x00007242      4839c7         cmp rdi, rax
0x00007245      7405           je 0x724c
0x00007247      e8e4a1ffff     call sym.imp.free
0x0000724c      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00007253      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x0000725a      4883c010       add rax, 0x10
0x0000725e      4839c7         cmp rdi, rax
0x00007261      7405           je 0x7268
0x00007263      e8c8a1ffff     call sym.imp.free
0x00007268      e8e3a1ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:5040
0x0000726d      4531ff         xor r15d, r15d
0x00007270      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x25100000
0x00007276      e964f2ffff     jmp 0x64df
0x0000727b      4c89f3         mov rbx, r14
0x0000727e      31c0           xor eax, eax
0x00007280      4883c301       add rbx, 1
0x00007284      0f8206010000   jb 0x7390
0x0000728a      4939dc         cmp r12, rbx
0x0000728d      734d           jae 0x72dc
0x0000728f      4d85e4         test r12, r12
0x00007292      0f8531010000   jne 0x73c9                              ; ../coreutils-8.31/lib/vasnprintf.c:5048
0x00007298      4883fb0c       cmp rbx, 0xc
0x0000729c      0f870c010000   ja 0x73ae
0x000072a2      41bc0c000000   mov r12d, 0xc
0x000072a8      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000072af      410f94c5       sete r13b
0x000072b3      4d85ff         test r15, r15
0x000072b6      0f84a0000000   je 0x735c
0x000072bc      4584ed         test r13b, r13b
0x000072bf      0f8597000000   jne 0x735c
0x000072c5      4c89e6         mov rsi, r12
0x000072c8      4c89ff         mov rdi, r15
0x000072cb      e890a3ffff     call sym.imp.realloc
0x000072d0      4885c0         test rax, rax
0x000072d3      0f8472fcffff   je 0x6f4b
0x000072d9      4989c7         mov r15, rax
0x000072dc      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000072e3      43c6043700     mov byte [r15 + r14], 0
0x000072e8      7417           je 0x7301
0x000072ea      4939dc         cmp r12, rbx
0x000072ed      7612           jbe 0x7301
0x000072ef      4c89ff         mov rdi, r15
0x000072f2      4889de         mov rsi, rbx
0x000072f5      e866a3ffff     call sym.imp.realloc
0x000072fa      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5061
0x000072fd      4c0f45f8       cmovne r15, rax
0x00007301      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x00007308      4885c0         test rax, rax
0x0000730b      7408           je 0x7315
0x0000730d      4889c7         mov rdi, rax
0x00007310      e81ba1ffff     call sym.imp.free
0x00007315      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000731c      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00007323      4883c020       add rax, 0x20                           ; "@"
0x00007327      4839c7         cmp rdi, rax
0x0000732a      7405           je 0x7331
0x0000732c      e8ffa0ffff     call sym.imp.free
0x00007331      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00007338      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x0000733f      4883c010       add rax, 0x10
0x00007343      4839c7         cmp rdi, rax
0x00007346      7405           je 0x734d
0x00007348      e8e3a0ffff     call sym.imp.free
0x0000734d      488b85e8fbff.  mov rax, qword [rbp - 0x418]
0x00007354      4c8930         mov qword [rax], r14
0x00007357      e983f1ffff     jmp 0x64df
0x0000735c      4c89e7         mov rdi, r12
0x0000735f      e8bca2ffff     call sym.imp.malloc
0x00007364      4885c0         test rax, rax
0x00007367      4889c1         mov rcx, rax
0x0000736a      0f84f5f0ffff   je 0x6465
0x00007370      4d85f6         test r14, r14
0x00007373      746b           je 0x73e0
0x00007375      4584ed         test r13b, r13b
0x00007378      7466           je 0x73e0
0x0000737a      4c89fe         mov rsi, r15
0x0000737d      4c89f2         mov rdx, r14
0x00007380      4889c7         mov rdi, rax
0x00007383      e868a2ffff     call sym.imp.memcpy
0x00007388      4989c7         mov r15, rax
0x0000738b      e94cffffff     jmp 0x72dc                              ; ../coreutils-8.31/lib/vasnprintf.c:4732
0x00007390      4983fcff       cmp r12, 0xffffffffffffffff
0x00007394      b801000000     mov eax, 1
0x00007399      0f843dffffff   je 0x72dc
0x0000739f      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/vasnprintf.c:4421
0x000073a2      0f84bdf0ffff   je 0x6465
0x000073a8      0f88b7f0ffff   js 0x6465
0x000073ae      4885c0         test rax, rax
0x000073b1      0f85aef0ffff   jne 0x6465
0x000073b7      4883fbff       cmp rbx, 0xffffffffffffffff
0x000073bb      0f84a4f0ffff   je 0x6465
0x000073c1      4989dc         mov r12, rbx
0x000073c4      e9dffeffff     jmp 0x72a8
0x000073c9      0f8896f0ffff   js 0x6465
0x000073cf      4d01e4         add r12, r12
0x000073d2      4939dc         cmp r12, rbx
0x000073d5      0f83cdfeffff   jae 0x72a8
0x000073db      ebd1           jmp 0x73ae
0x000073dd      0f1f00         nop dword [rax]
0x000073e0      4989cf         mov r15, rcx
0x000073e3      e9f4feffff     jmp 0x72dc
0x000073e8      4983fcff       cmp r12, 0xffffffffffffffff
0x000073ec      0f841ef4ffff   je 0x6810
0x000073f2      e97af0ffff     jmp 0x6471
0x000073f7      e824a1ffff     call sym.imp.__stack_chk_fail
0x000073fc      4983fcff       cmp r12, 0xffffffffffffffff
0x00007400      ba01000000     mov edx, 1
0x00007405      0f84e0f3ffff   je 0x67eb
0x0000740b      4d85e4         test r12, r12
0x0000740e      0f8451f0ffff   je 0x6465
0x00007414      0f89c6fbffff   jns 0x6fe0
0x0000741a      e946f0ffff     jmp 0x6465
0x0000741f      90             nop
;-- printf_fetchargs:
0x00007420      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/printf-args.c:37
0x00007424      488b4608       mov rax, qword [rsi + 8]
0x00007428      7463           je 0x748d
0x0000742a      4c8d057f2400.  lea r8, [0x000098b0]                    ; ../coreutils-8.31/lib/printf-args.c:42
0x00007431      4c8d15d82400.  lea r10, obj.wide_null_string.2696      ; 0x9910 ; U"(NULL)"
0x00007438      4c8d0d652400.  lea r9, [0x000098a4]                    ; "(NULL)"
0x0000743f      31c9           xor ecx, ecx
0x00007441      0f1f80000000.  nop dword [rax]
0x00007448      833816         cmp dword [rax], 0x16
0x0000744b      7743           ja 0x7490
0x0000744d      8b10           mov edx, dword [rax]
0x0000744f      49631490       movsxd rdx, dword [r8 + rdx*4]
0x00007453      4c01c2         add rdx, r8
0x00007456      ffe2           jmp rdx
0x00007458      0f1f84000000.  nop dword [rax + rax]
0x00007460      488b5708       mov rdx, qword [rdi + 8]                ; stddef.h:38      && !defined(__need_wint_t))
0x00007464      4883c20f       add rdx, 0xf
0x00007468      4883e2f0       and rdx, 0xfffffffffffffff0
0x0000746c      4c8d5a10       lea r11, [rdx + 0x10]
0x00007470      4c895f08       mov qword [rdi + 8], r11
0x00007474      db2a           fld xword [rdx]
0x00007476      db7810         fstp xword [rax + 0x10]
0x00007479      0f1f80000000.  nop dword [rax]
0x00007480      4883c101       add rcx, 1
0x00007484      4883c020       add rax, 0x20                           ; stddef.h:-9 ; "@"
0x00007488      48390e         cmp qword [rsi], rcx
0x0000748b      77bb           ja 0x7448
0x0000748d      31c0           xor eax, eax
0x0000748f      c3             ret
0x00007490      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00007495      c3             ret
0x00007496      448b1f         mov r11d, dword [rdi]
0x00007499      4183fb2f       cmp r11d, 0x2f
0x0000749d      0f8737010000   ja 0x75da
0x000074a3      4489da         mov edx, r11d
0x000074a6      48035710       add rdx, qword [rdi + 0x10]             ; stddef.h:-54
0x000074aa      4183c308       add r11d, 8
0x000074ae      44891f         mov dword [rdi], r11d
0x000074b1      488b12         mov rdx, qword [rdx]
0x000074b4      48895010       mov qword [rax + 0x10], rdx
0x000074b8      ebc6           jmp 0x7480
0x000074ba      448b1f         mov r11d, dword [rdi]
0x000074bd      4183fb2f       cmp r11d, 0x2f
0x000074c1      0f8735010000   ja 0x75fc
0x000074c7      4489da         mov edx, r11d
0x000074ca      48035710       add rdx, qword [rdi + 0x10]
0x000074ce      4183c308       add r11d, 8
0x000074d2      44891f         mov dword [rdi], r11d
0x000074d5      8b12           mov edx, dword [rdx]
0x000074d7      895010         mov dword [rax + 0x10], edx
0x000074da      eba4           jmp 0x7480
0x000074dc      448b1f         mov r11d, dword [rdi]
0x000074df      4183fb2f       cmp r11d, 0x2f
0x000074e3      0f8702010000   ja 0x75eb
0x000074e9      4489da         mov edx, r11d                           ; stddef.h:-47
0x000074ec      48035710       add rdx, qword [rdi + 0x10]
0x000074f0      4183c308       add r11d, 8
0x000074f4      44891f         mov dword [rdi], r11d
0x000074f7      8b12           mov edx, dword [rdx]
0x000074f9      885010         mov byte [rax + 0x10], dl
0x000074fc      eb82           jmp 0x7480
0x000074fe      448b1f         mov r11d, dword [rdi]
0x00007501      4183fb2f       cmp r11d, 0x2f
0x00007505      0f879f000000   ja 0x75aa
0x0000750b      4489da         mov edx, r11d
0x0000750e      48035710       add rdx, qword [rdi + 0x10]
0x00007512      4183c308       add r11d, 8
0x00007516      44891f         mov dword [rdi], r11d
0x00007519      8b12           mov edx, dword [rdx]
0x0000751b      66895010       mov word [rax + 0x10], dx
0x0000751f      e95cffffff     jmp 0x7480
0x00007524      448b1f         mov r11d, dword [rdi]
0x00007527      4183fb2f       cmp r11d, 0x2f
0x0000752b      0f878a000000   ja 0x75bb
0x00007531      4489da         mov edx, r11d
0x00007534      48035710       add rdx, qword [rdi + 0x10]
0x00007538      4183c308       add r11d, 8
0x0000753c      44891f         mov dword [rdi], r11d
0x0000753f      488b12         mov rdx, qword [rdx]
0x00007542      4885d2         test rdx, rdx
0x00007545      490f44d1       cmove rdx, r9                           ; stddef.h:-24
0x00007549      48895010       mov qword [rax + 0x10], rdx
0x0000754d      e92effffff     jmp 0x7480
0x00007552      448b5f04       mov r11d, dword [rdi + 4]
0x00007556      4181fbaf0000.  cmp r11d, 0xaf
0x0000755d      0f87aa000000   ja 0x760d
0x00007563      4489da         mov edx, r11d
0x00007566      48035710       add rdx, qword [rdi + 0x10]
0x0000756a      4183c310       add r11d, 0x10
0x0000756e      44895f04       mov dword [rdi + 4], r11d
0x00007572      f20f1002       movsd xmm0, qword [rdx]
0x00007576      f20f114010     movsd qword [rax + 0x10], xmm0
0x0000757b      e900ffffff     jmp 0x7480
0x00007580      448b1f         mov r11d, dword [rdi]
0x00007583      4183fb2f       cmp r11d, 0x2f
0x00007587      7743           ja 0x75cc
0x00007589      4489da         mov edx, r11d
0x0000758c      48035710       add rdx, qword [rdi + 0x10]
0x00007590      4183c308       add r11d, 8
0x00007594      44891f         mov dword [rdi], r11d
0x00007597      488b12         mov rdx, qword [rdx]
0x0000759a      4885d2         test rdx, rdx
0x0000759d      490f44d2       cmove rdx, r10
0x000075a1      48895010       mov qword [rax + 0x10], rdx
0x000075a5      e9d6feffff     jmp 0x7480
0x000075aa      488b5708       mov rdx, qword [rdi + 8]
0x000075ae      4c8d5a08       lea r11, [rdx + 8]
0x000075b2      4c895f08       mov qword [rdi + 8], r11
0x000075b6      e95effffff     jmp 0x7519
0x000075bb      488b5708       mov rdx, qword [rdi + 8]
0x000075bf      4c8d5a08       lea r11, [rdx + 8]
0x000075c3      4c895f08       mov qword [rdi + 8], r11
0x000075c7      e973ffffff     jmp 0x753f
0x000075cc      488b5708       mov rdx, qword [rdi + 8]
0x000075d0      4c8d5a08       lea r11, [rdx + 8]
0x000075d4      4c895f08       mov qword [rdi + 8], r11
0x000075d8      ebbd           jmp 0x7597
0x000075da      488b5708       mov rdx, qword [rdi + 8]
0x000075de      4c8d5a08       lea r11, [rdx + 8]
0x000075e2      4c895f08       mov qword [rdi + 8], r11
0x000075e6      e9c6feffff     jmp 0x74b1
0x000075eb      488b5708       mov rdx, qword [rdi + 8]
0x000075ef      4c8d5a08       lea r11, [rdx + 8]
0x000075f3      4c895f08       mov qword [rdi + 8], r11
0x000075f7      e9fbfeffff     jmp 0x74f7
0x000075fc      488b5708       mov rdx, qword [rdi + 8]
0x00007600      4c8d5a08       lea r11, [rdx + 8]
0x00007604      4c895f08       mov qword [rdi + 8], r11
0x00007608      e9c8feffff     jmp 0x74d5
0x0000760d      488b5708       mov rdx, qword [rdi + 8]
0x00007611      4c8d5a08       lea r11, [rdx + 8]
0x00007615      4c895f08       mov qword [rdi + 8], r11
0x00007619      e954ffffff     jmp 0x7572
0x0000761e      6690           nop
;-- printf_parse:
0x00007620      4157           push r15
0x00007622      4156           push r14
0x00007624      488d4e20       lea rcx, [rsi + 0x20]
0x00007628      4155           push r13
0x0000762a      4154           push r12
0x0000762c      488d4210       lea rax, [rdx + 0x10]
0x00007630      55             push rbp
0x00007631      53             push rbx
0x00007632      4989f6         mov r14, rsi
0x00007635      4989d7         mov r15, rdx
0x00007638      31db           xor ebx, ebx
0x0000763a      41b907000000   mov r9d, 7
0x00007640      4883ec58       sub rsp, 0x58
0x00007644      41ba07000000   mov r10d, 7
0x0000764a      48c706000000.  mov qword [rsi], 0
0x00007651      48894e08       mov qword [rsi + 8], rcx
0x00007655      48894c2428     mov qword [rsp + 0x28], rcx
0x0000765a      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00007661      48c702000000.  mov qword [rdx], 0
0x00007668      4889442408     mov qword [rsp + 8], rax
0x0000766d      48894208       mov qword [rdx + 8], rax
0x00007671      48c744241800.  mov qword [rsp + 0x18], 0
0x0000767a      48c744241000.  mov qword [rsp + 0x10], 0
0x00007683      48c744242000.  mov qword [rsp + 0x20], 0
0x0000768c      eb0d           jmp 0x769b
0x0000768e      6690           nop
0x00007690      3c25           cmp al, 0x25
0x00007692      488d6f01       lea rbp, [rdi + 1]
0x00007696      7440           je 0x76d8
0x00007698      4889ef         mov rdi, rbp
0x0000769b      0fb607         movzx eax, byte [rdi]
0x0000769e      84c0           test al, al
0x000076a0      75ee           jne 0x7690
0x000076a2      488d049b       lea rax, [rbx + rbx*4]
0x000076a6      488d0443       lea rax, [rbx + rax*2]
0x000076aa      48893cc1       mov qword [rcx + rax*8], rdi
0x000076ae      488b442410     mov rax, qword [rsp + 0x10]
0x000076b3      49894610       mov qword [r14 + 0x10], rax
0x000076b7      488b442418     mov rax, qword [rsp + 0x18]
0x000076bc      49894618       mov qword [r14 + 0x18], rax
0x000076c0      31c0           xor eax, eax
0x000076c2      4883c458       add rsp, 0x58
0x000076c6      5b             pop rbx
0x000076c7      5d             pop rbp
0x000076c8      415c           pop r12
0x000076ca      415d           pop r13
0x000076cc      415e           pop r14
0x000076ce      415f           pop r15
0x000076d0      c3             ret
0x000076d1      0f1f80000000.  nop dword [rax]
0x000076d8      488d049b       lea rax, [rbx + rbx*4]
0x000076dc      4d89c5         mov r13, r8
0x000076df      488d0443       lea rax, [rbx + rax*2]
0x000076e3      4c8d24c1       lea r12, [rcx + rax*8]
0x000076e7      49893c24       mov qword [r12], rdi
0x000076eb      41c744241000.  mov dword [r12 + 0x10], 0
0x000076f4      49c744241800.  mov qword [r12 + 0x18], 0
0x000076fd      49c744242000.  mov qword [r12 + 0x20], 0
0x00007706      4d89442428     mov qword [r12 + 0x28], r8
0x0000770b      49c744243000.  mov qword [r12 + 0x30], 0
0x00007714      49c744243800.  mov qword [r12 + 0x38], 0
0x0000771d      4d89442440     mov qword [r12 + 0x40], r8
0x00007722      4d89442450     mov qword [r12 + 0x50], r8
0x00007727      0fb65f01       movzx ebx, byte [rdi + 1]
0x0000772b      8d43d0         lea eax, [rbx - 0x30]
0x0000772e      3c09           cmp al, 9
0x00007730      773c           ja 0x776e
0x00007732      e933040000     jmp 0x7b6a
0x00007737      660f1f840000.  nop word [rax + rax]
0x00007740      80fb2d         cmp bl, 0x2d
0x00007743      7443           je 0x7788
0x00007745      80fb2b         cmp bl, 0x2b
0x00007748      7446           je 0x7790
0x0000774a      80fb20         cmp bl, 0x20                            ; "@"
0x0000774d      7451           je 0x77a0
0x0000774f      80fb23         cmp bl, 0x23
0x00007752      745c           je 0x77b0
0x00007754      80fb30         cmp bl, 0x30
0x00007757      7467           je 0x77c0
0x00007759      80fb49         cmp bl, 0x49
0x0000775c      7572           jne 0x77d0
0x0000775e      41834c241040   or dword [r12 + 0x10], 0x40             ; segment.PHDR
                                                                       ; [0x40:4]=6
0x00007764      0f1f4000       nop dword [rax]
0x00007768      0fb618         movzx ebx, byte [rax]
0x0000776b      4889c5         mov rbp, rax
0x0000776e      488d4501       lea rax, [rbp + 1]
0x00007772      80fb27         cmp bl, 0x27
0x00007775      4889c2         mov rdx, rax
0x00007778      75c6           jne 0x7740
0x0000777a      41834c241001   or dword [r12 + 0x10], 1
0x00007780      ebe6           jmp 0x7768
0x00007782      660f1f440000   nop word [rax + rax]
0x00007788      41834c241002   or dword [r12 + 0x10], 2
0x0000778e      ebd8           jmp 0x7768
0x00007790      41834c241004   or dword [r12 + 0x10], 4
0x00007796      ebd0           jmp 0x7768
0x00007798      0f1f84000000.  nop dword [rax + rax]
0x000077a0      41834c241008   or dword [r12 + 0x10], 8
0x000077a6      ebc0           jmp 0x7768
0x000077a8      0f1f84000000.  nop dword [rax + rax]
0x000077b0      41834c241010   or dword [r12 + 0x10], 0x10             ; [0x10:4]=0x3e0003
0x000077b6      ebb0           jmp 0x7768
0x000077b8      0f1f84000000.  nop dword [rax + rax]
0x000077c0      41834c241020   or dword [r12 + 0x10], 0x20             ; [0x20:4]=64 ; "@"
0x000077c6      eba0           jmp 0x7768
0x000077c8      0f1f84000000.  nop dword [rax + rax]
0x000077d0      80fb2a         cmp bl, 0x2a
0x000077d3      0f84b0010000   je 0x7989
0x000077d9      8d4bd0         lea ecx, [rbx - 0x30]
0x000077dc      80f909         cmp cl, 9
0x000077df      0f8612040000   jbe 0x7bf7
0x000077e5      80fb2e         cmp bl, 0x2e
0x000077e8      0f84d1020000   je 0x7abf
0x000077ee      31c0           xor eax, eax
0x000077f0      be01000000     mov esi, 1
0x000077f5      eb30           jmp 0x7827
0x000077f7      660f1f840000.  nop word [rax + rax]
0x00007800      80fb4c         cmp bl, 0x4c
0x00007803      743b           je 0x7840
0x00007805      80fb6c         cmp bl, 0x6c
0x00007808      7416           je 0x7820
0x0000780a      80fb6a         cmp bl, 0x6a
0x0000780d      7411           je 0x7820
0x0000780f      89da           mov edx, ebx
0x00007811      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00007814      80fa5a         cmp dl, 0x5a
0x00007817      7407           je 0x7820
0x00007819      80fb74         cmp bl, 0x74
0x0000781c      752a           jne 0x7848
0x0000781e      6690           nop
0x00007820      83c008         add eax, 8
0x00007823      0fb65d00       movzx ebx, byte [rbp]
0x00007827      4883c501       add rbp, 1
0x0000782b      80fb68         cmp bl, 0x68
0x0000782e      75d0           jne 0x7800
0x00007830      89c1           mov ecx, eax
0x00007832      89f2           mov edx, esi
0x00007834      83e101         and ecx, 1
0x00007837      d3e2           shl edx, cl
0x00007839      09d0           or eax, edx
0x0000783b      ebe6           jmp 0x7823
0x0000783d      0f1f00         nop dword [rax]
0x00007840      83c804         or eax, 4
0x00007843      ebde           jmp 0x7823
0x00007845      0f1f00         nop dword [rax]
0x00007848      8d53db         lea edx, [rbx - 0x25]
0x0000784b      80fa53         cmp dl, 0x53
0x0000784e      0f8717060000   ja 0x7e6b
0x00007854      488d0dd12000.  lea rcx, [0x0000992c]
0x0000785b      0fb6d2         movzx edx, dl
0x0000785e      48631491       movsxd rdx, dword [rcx + rdx*4]
0x00007862      4801ca         add rdx, rcx
0x00007865      ffe2           jmp rdx
0x00007867      41bb10000000   mov r11d, 0x10
0x0000786d      bb73000000     mov ebx, 0x73                           ; 's'
0x00007872      660f1f440000   nop word [rax + rax]
0x00007878      4983fdff       cmp r13, 0xffffffffffffffff
0x0000787c      0f84b5060000   je 0x7f37
0x00007882      4d896c2450     mov qword [r12 + 0x50], r13
0x00007887      4d39e9         cmp r9, r13
0x0000788a      498b4f08       mov rcx, qword [r15 + 8]
0x0000788e      0f861c060000   jbe 0x7eb0
0x00007894      498b07         mov rax, qword [r15]
0x00007897      4889c2         mov rdx, rax
0x0000789a      48c1e205       shl rdx, 5
0x0000789e      4801ca         add rdx, rcx
0x000078a1      4c39e8         cmp rax, r13
0x000078a4      7720           ja 0x78c6
0x000078a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000078b0      4883c001       add rax, 1
0x000078b4      c70200000000   mov dword [rdx], 0
0x000078ba      4883c220       add rdx, 0x20                           ; "@"
0x000078be      4c39e8         cmp rax, r13
0x000078c1      76ed           jbe 0x78b0
0x000078c3      498907         mov qword [r15], rax
0x000078c6      49c1e505       shl r13, 5
0x000078ca      4a8d0429       lea rax, [rcx + r13]
0x000078ce      8b10           mov edx, dword [rax]
0x000078d0      85d2           test edx, edx
0x000078d2      0f85cb050000   jne 0x7ea3
0x000078d8      448918         mov dword [rax], r11d
0x000078db      41885c2448     mov byte [r12 + 0x48], bl
0x000078e0      498b06         mov rax, qword [r14]
0x000078e3      49896c2408     mov qword [r12 + 8], rbp
0x000078e8      488d5801       lea rbx, [rax + 1]
0x000078ec      4939da         cmp r10, rbx
0x000078ef      49891e         mov qword [r14], rbx
0x000078f2      0f8788000000   ja 0x7980
0x000078f8      4d85d2         test r10, r10
0x000078fb      0f88a6090000   js 0x82a7
0x00007901      4d01d2         add r10, r10
0x00007904      48b8bae8a28b.  movabs rax, 0x2e8ba2e8ba2e8ba
0x0000790e      4939c2         cmp r10, rax
0x00007911      0f8790090000   ja 0x82a7
0x00007917      4b8d0492       lea rax, [r10 + r10*4]
0x0000791b      498b7e08       mov rdi, qword [r14 + 8]
0x0000791f      48397c2428     cmp qword [rsp + 0x28], rdi
0x00007924      4c894c2440     mov qword [rsp + 0x40], r9
0x00007929      4c89542438     mov qword [rsp + 0x38], r10
0x0000792e      498d0442       lea rax, [r10 + rax*2]
0x00007932      4c89442430     mov qword [rsp + 0x30], r8
0x00007937      488d34c50000.  lea rsi, [rax*8]
0x0000793f      0f84b8060000   je 0x7ffd
0x00007945      e8169dffff     call sym.imp.realloc
0x0000794a      4885c0         test rax, rax
0x0000794d      4889c1         mov rcx, rax
0x00007950      4c8b442430     mov r8, qword [rsp + 0x30]
0x00007955      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000795a      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000795f      0f8442090000   je 0x82a7
0x00007965      488b442428     mov rax, qword [rsp + 0x28]
0x0000796a      493b4608       cmp rax, qword [r14 + 8]
0x0000796e      498b1e         mov rbx, qword [r14]
0x00007971      0f84a9060000   je 0x8020
0x00007977      49894e08       mov qword [r14 + 8], rcx
0x0000797b      e918fdffff     jmp 0x7698
0x00007980      498b4e08       mov rcx, qword [r14 + 8]
0x00007984      e90ffdffff     jmp 0x7698
0x00007989      488b742410     mov rsi, qword [rsp + 0x10]
0x0000798e      b901000000     mov ecx, 1
0x00007993      49896c2418     mov qword [r12 + 0x18], rbp
0x00007998      4989442420     mov qword [r12 + 0x20], rax
0x0000799d      4885f6         test rsi, rsi
0x000079a0      480f45ce       cmovne rcx, rsi
0x000079a4      48894c2410     mov qword [rsp + 0x10], rcx
0x000079a9      0fb64d01       movzx ecx, byte [rbp + 1]
0x000079ad      8d71d0         lea esi, [rcx - 0x30]
0x000079b0      4080fe09       cmp sil, 9
0x000079b4      0f86db020000   jbe 0x7c95
0x000079ba      488b742420     mov rsi, qword [rsp + 0x20]
0x000079bf      4883feff       cmp rsi, 0xffffffffffffffff
0x000079c3      488d5601       lea rdx, [rsi + 1]
0x000079c7      4989742428     mov qword [r12 + 0x28], rsi
0x000079cc      0f8499040000   je 0x7e6b
0x000079d2      488b5c2420     mov rbx, qword [rsp + 0x20]
0x000079d7      4889c5         mov rbp, rax
0x000079da      4889542420     mov qword [rsp + 0x20], rdx
0x000079df      4939d9         cmp r9, rbx
0x000079e2      498b4f08       mov rcx, qword [r15 + 8]
0x000079e6      0f8776060000   ja 0x8062
0x000079ec      4d01c9         add r9, r9
0x000079ef      488d4301       lea rax, [rbx + 1]
0x000079f3      4939d9         cmp r9, rbx
0x000079f6      4c0f46c8       cmovbe r9, rax
0x000079fa      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x00007a04      4939c1         cmp r9, rax
0x00007a07      0f879e080000   ja 0x82ab
0x00007a0d      4c89ce         mov rsi, r9
0x00007a10      4c894c2440     mov qword [rsp + 0x40], r9
0x00007a15      4c89542438     mov qword [rsp + 0x38], r10
0x00007a1a      48c1e605       shl rsi, 5
0x00007a1e      48394c2408     cmp qword [rsp + 8], rcx
0x00007a23      4c89442430     mov qword [rsp + 0x30], r8
0x00007a28      0f8413070000   je 0x8141
0x00007a2e      4889cf         mov rdi, rcx
0x00007a31      e82a9cffff     call sym.imp.realloc
0x00007a36      498b5708       mov rdx, qword [r15 + 8]
0x00007a3a      4c8b442430     mov r8, qword [rsp + 0x30]
0x00007a3f      4889c1         mov rcx, rax
0x00007a42      4c8b542438     mov r10, qword [rsp + 0x38]
0x00007a47      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00007a4c      4885c9         test rcx, rcx
0x00007a4f      0f84b2080000   je 0x8307
0x00007a55      4839542408     cmp qword [rsp + 8], rdx
0x00007a5a      498b07         mov rax, qword [r15]
0x00007a5d      0f84b8070000   je 0x821b
0x00007a63      49894f08       mov qword [r15 + 8], rcx
0x00007a67      4889c2         mov rdx, rax
0x00007a6a      48c1e205       shl rdx, 5
0x00007a6e      4801ca         add rdx, rcx
0x00007a71      4839d8         cmp rax, rbx
0x00007a74      7720           ja 0x7a96
0x00007a76      662e0f1f8400.  nop word cs:[rax + rax]
0x00007a80      4883c001       add rax, 1
0x00007a84      c70200000000   mov dword [rdx], 0
0x00007a8a      4883c220       add rdx, 0x20                           ; "@"
0x00007a8e      4839d8         cmp rax, rbx
0x00007a91      76ed           jbe 0x7a80
0x00007a93      498907         mov qword [r15], rax
0x00007a96      48c1e305       shl rbx, 5
0x00007a9a      488d0419       lea rax, [rcx + rbx]
0x00007a9e      8b10           mov edx, dword [rax]
0x00007aa0      85d2           test edx, edx
0x00007aa2      0f85d3040000   jne 0x7f7b
0x00007aa8      c70005000000   mov dword [rax], 5
0x00007aae      0fb65d00       movzx ebx, byte [rbp]
0x00007ab2      488d5501       lea rdx, [rbp + 1]
0x00007ab6      80fb2e         cmp bl, 0x2e
0x00007ab9      0f852ffdffff   jne 0x77ee
0x00007abf      807d012a       cmp byte [rbp + 1], 0x2a
0x00007ac3      49896c2430     mov qword [r12 + 0x30], rbp
0x00007ac8      0f8580010000   jne 0x7c4e
0x00007ace      488b742418     mov rsi, qword [rsp + 0x18]
0x00007ad3      4c8d5d02       lea r11, [rbp + 2]
0x00007ad7      b802000000     mov eax, 2
0x00007adc      4d895c2438     mov qword [r12 + 0x38], r11
0x00007ae1      4883fe02       cmp rsi, 2
0x00007ae5      480f43c6       cmovae rax, rsi
0x00007ae9      4889442418     mov qword [rsp + 0x18], rax
0x00007aee      0fbe4502       movsx eax, byte [rbp + 2]
0x00007af2      8d50d0         lea edx, [rax - 0x30]
0x00007af5      80fa09         cmp dl, 9
0x00007af8      0f868e060000   jbe 0x818c
0x00007afe      498b5c2440     mov rbx, qword [r12 + 0x40]
0x00007b03      4883fbff       cmp rbx, 0xffffffffffffffff
0x00007b07      0f8458060000   je 0x8165
0x00007b0d      4939d9         cmp r9, rbx
0x00007b10      498b4f08       mov rcx, qword [r15 + 8]
0x00007b14      0f8665050000   jbe 0x807f
0x00007b1a      498b07         mov rax, qword [r15]
0x00007b1d      4889c2         mov rdx, rax
0x00007b20      48c1e205       shl rdx, 5
0x00007b24      4801ca         add rdx, rcx
0x00007b27      4839d8         cmp rax, rbx
0x00007b2a      771a           ja 0x7b46
0x00007b2c      0f1f4000       nop dword [rax]
0x00007b30      4883c001       add rax, 1
0x00007b34      c70200000000   mov dword [rdx], 0
0x00007b3a      4883c220       add rdx, 0x20                           ; "@"
0x00007b3e      4839d8         cmp rax, rbx
0x00007b41      76ed           jbe 0x7b30
0x00007b43      498907         mov qword [r15], rax
0x00007b46      48c1e305       shl rbx, 5
0x00007b4a      488d0419       lea rax, [rcx + rbx]
0x00007b4e      8b10           mov edx, dword [rax]
0x00007b50      85d2           test edx, edx
0x00007b52      0f8512050000   jne 0x806a
0x00007b58      c70005000000   mov dword [rax], 5
0x00007b5e      4c89dd         mov rbp, r11
0x00007b61      410fb61b       movzx ebx, byte [r11]
0x00007b65      e984fcffff     jmp 0x77ee
0x00007b6a      4889e8         mov rax, rbp
0x00007b6d      0f1f00         nop dword [rax]
0x00007b70      4883c001       add rax, 1
0x00007b74      0fb610         movzx edx, byte [rax]
0x00007b77      8d4ad0         lea ecx, [rdx - 0x30]
0x00007b7a      80f909         cmp cl, 9
0x00007b7d      76f1           jbe 0x7b70
0x00007b7f      80fa24         cmp dl, 0x24
0x00007b82      4d89c5         mov r13, r8
0x00007b85      0f85e3fbffff   jne 0x776e
0x00007b8b      31d2           xor edx, edx
0x00007b8d      0fbec3         movsx eax, bl
0x00007b90      48bf99999999.  movabs rdi, 0x1999999999999999
0x00007b9a      4c89c6         mov rsi, r8
0x00007b9d      83e830         sub eax, 0x30
0x00007ba0      4839fa         cmp rdx, rdi
0x00007ba3      4898           cdqe
0x00007ba5      7707           ja 0x7bae
0x00007ba7      488d3492       lea rsi, [rdx + rdx*4]
0x00007bab      4801f6         add rsi, rsi
0x00007bae      4889e9         mov rcx, rbp
0x00007bb1      4801f0         add rax, rsi
0x00007bb4      0fb65d01       movzx ebx, byte [rbp + 1]
0x00007bb8      400f92c6       setb sil
0x00007bbc      4883c501       add rbp, 1
0x00007bc0      4889c2         mov rdx, rax
0x00007bc3      400fb6f6       movzx esi, sil
0x00007bc7      4885f6         test rsi, rsi
0x00007bca      8d7bd0         lea edi, [rbx - 0x30]
0x00007bcd      0f858b030000   jne 0x7f5e
0x00007bd3      4080ff09       cmp dil, 9
0x00007bd7      76b4           jbe 0x7b8d
0x00007bd9      4989c5         mov r13, rax
0x00007bdc      4983ed01       sub r13, 1
0x00007be0      4983fdfd       cmp r13, 0xfffffffffffffffd
0x00007be4      0f8781020000   ja 0x7e6b
0x00007bea      488d6902       lea rbp, [rcx + 2]
0x00007bee      0fb65902       movzx ebx, byte [rcx + 2]
0x00007bf2      e977fbffff     jmp 0x776e
0x00007bf7      49896c2418     mov qword [r12 + 0x18], rbp
0x00007bfc      0fb67d00       movzx edi, byte [rbp]
0x00007c00      4889ee         mov rsi, rbp
0x00007c03      8d4fd0         lea ecx, [rdi - 0x30]
0x00007c06      80f909         cmp cl, 9
0x00007c09      760c           jbe 0x7c17
0x00007c0b      eb33           jmp 0x7c40
0x00007c0d      0f1f00         nop dword [rax]
0x00007c10      4889c5         mov rbp, rax
0x00007c13      4883c001       add rax, 1
0x00007c17      0fb638         movzx edi, byte [rax]
0x00007c1a      8d57d0         lea edx, [rdi - 0x30]
0x00007c1d      80fa09         cmp dl, 9
0x00007c20      76ee           jbe 0x7c10
0x00007c22      4889c1         mov rcx, rax
0x00007c25      488d5502       lea rdx, [rbp + 2]
0x00007c29      4889c5         mov rbp, rax
0x00007c2c      4829f1         sub rcx, rsi
0x00007c2f      488b742410     mov rsi, qword [rsp + 0x10]
0x00007c34      4839ce         cmp rsi, rcx
0x00007c37      480f43ce       cmovae rcx, rsi
0x00007c3b      48894c2410     mov qword [rsp + 0x10], rcx
0x00007c40      49896c2420     mov qword [r12 + 0x20], rbp
0x00007c45      0fb65d00       movzx ebx, byte [rbp]
0x00007c49      e997fbffff     jmp 0x77e5
0x00007c4e      0fb64501       movzx eax, byte [rbp + 1]
0x00007c52      83e830         sub eax, 0x30
0x00007c55      3c09           cmp al, 9
0x00007c57      7715           ja 0x7c6e
0x00007c59      0f1f80000000.  nop dword [rax]
0x00007c60      4883c201       add rdx, 1
0x00007c64      0fb602         movzx eax, byte [rdx]
0x00007c67      83e830         sub eax, 0x30
0x00007c6a      3c09           cmp al, 9
0x00007c6c      76f2           jbe 0x7c60
0x00007c6e      488b742418     mov rsi, qword [rsp + 0x18]
0x00007c73      4889d0         mov rax, rdx
0x00007c76      4989542438     mov qword [r12 + 0x38], rdx
0x00007c7b      4829e8         sub rax, rbp
0x00007c7e      0fb61a         movzx ebx, byte [rdx]
0x00007c81      4889d5         mov rbp, rdx
0x00007c84      4839c6         cmp rsi, rax
0x00007c87      480f43c6       cmovae rax, rsi
0x00007c8b      4889442418     mov qword [rsp + 0x18], rax
0x00007c90      e959fbffff     jmp 0x77ee
0x00007c95      4889c6         mov rsi, rax
0x00007c98      4883c601       add rsi, 1
0x00007c9c      0fb63e         movzx edi, byte [rsi]
0x00007c9f      448d5fd0       lea r11d, [rdi - 0x30]
0x00007ca3      4180fb09       cmp r11b, 9
0x00007ca7      76ef           jbe 0x7c98
0x00007ca9      4080ff24       cmp dil, 0x24
0x00007cad      0f8507fdffff   jne 0x79ba
0x00007cb3      31f6           xor esi, esi
0x00007cb5      0fbec1         movsx eax, cl
0x00007cb8      48bf99999999.  movabs rdi, 0x1999999999999999
0x00007cc2      4c89c1         mov rcx, r8
0x00007cc5      83e830         sub eax, 0x30
0x00007cc8      4839fe         cmp rsi, rdi
0x00007ccb      4898           cdqe
0x00007ccd      7707           ja 0x7cd6
0x00007ccf      488d0cb6       lea rcx, [rsi + rsi*4]
0x00007cd3      4801c9         add rcx, rcx
0x00007cd6      4889d5         mov rbp, rdx
0x00007cd9      4531db         xor r11d, r11d
0x00007cdc      4801c8         add rax, rcx
0x00007cdf      0fb64a01       movzx ecx, byte [rdx + 1]
0x00007ce3      410f92c3       setb r11b
0x00007ce7      4883c201       add rdx, 1
0x00007ceb      4889c6         mov rsi, rax
0x00007cee      4d85db         test r11, r11
0x00007cf1      8d79d0         lea edi, [rcx - 0x30]
0x00007cf4      0f8504050000   jne 0x81fe
0x00007cfa      4080ff09       cmp dil, 9
0x00007cfe      76b5           jbe 0x7cb5
0x00007d00      488d58ff       lea rbx, [rax - 1]
0x00007d04      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x00007d08      0f875d010000   ja 0x7e6b
0x00007d0e      49895c2428     mov qword [r12 + 0x28], rbx
0x00007d13      4883c502       add rbp, 2
0x00007d17      e9c3fcffff     jmp 0x79df
0x00007d1c      83f80f         cmp eax, 0xf
0x00007d1f      41bb16000000   mov r11d, 0x16
0x00007d25      0f8f4dfbffff   jg 0x7878
0x00007d2b      a804           test al, 4
0x00007d2d      0f8545fbffff   jne 0x7878
0x00007d33      83f807         cmp eax, 7
0x00007d36      41bb15000000   mov r11d, 0x15
0x00007d3c      0f8f36fbffff   jg 0x7878
0x00007d42      a802           test al, 2
0x00007d44      41bb12000000   mov r11d, 0x12
0x00007d4a      0f8528fbffff   jne 0x7878
0x00007d50      4531db         xor r11d, r11d
0x00007d53      a801           test al, 1
0x00007d55      410f94c3       sete r11b
0x00007d59      4183c313       add r11d, 0x13
0x00007d5d      e916fbffff     jmp 0x7878
0x00007d62      660f1f440000   nop word [rax + rax]
0x00007d68      4531db         xor r11d, r11d
0x00007d6b      83f807         cmp eax, 7
0x00007d6e      410f9fc3       setg r11b
0x00007d72      4183c30d       add r11d, 0xd
0x00007d76      e9fdfaffff     jmp 0x7878
0x00007d7b      83f80f         cmp eax, 0xf
0x00007d7e      41bb09000000   mov r11d, 9
0x00007d84      0f8feefaffff   jg 0x7878
0x00007d8a      a804           test al, 4
0x00007d8c      0f85e6faffff   jne 0x7878
0x00007d92      83f807         cmp eax, 7
0x00007d95      41bb07000000   mov r11d, 7
0x00007d9b      0f8fd7faffff   jg 0x7878
0x00007da1      a802           test al, 2
0x00007da3      41bb01000000   mov r11d, 1
0x00007da9      0f85c9faffff   jne 0x7878
0x00007daf      83e001         and eax, 1
0x00007db2      83f801         cmp eax, 1
0x00007db5      4519db         sbb r11d, r11d
0x00007db8      4183e302       and r11d, 2
0x00007dbc      4183c303       add r11d, 3
0x00007dc0      e9b3faffff     jmp 0x7878
0x00007dc5      0f1f00         nop dword [rax]
0x00007dc8      4531db         xor r11d, r11d
0x00007dcb      83f807         cmp eax, 7
0x00007dce      410f9fc3       setg r11b
0x00007dd2      4183c30f       add r11d, 0xf
0x00007dd6      e99dfaffff     jmp 0x7878
0x00007ddb      83f80f         cmp eax, 0xf
0x00007dde      41bb0c000000   mov r11d, 0xc
0x00007de4      0f8f8efaffff   jg 0x7878
0x00007dea      4531db         xor r11d, r11d
0x00007ded      a804           test al, 4
0x00007def      410f95c3       setne r11b
0x00007df3      4183c30b       add r11d, 0xb
0x00007df7      e97cfaffff     jmp 0x7878
0x00007dfc      41bb0e000000   mov r11d, 0xe
0x00007e02      bb63000000     mov ebx, 0x63                           ; 'c'
0x00007e07      e96cfaffff     jmp 0x7878
0x00007e0c      83f80f         cmp eax, 0xf
0x00007e0f      41bb0a000000   mov r11d, 0xa
0x00007e15      0f8f5dfaffff   jg 0x7878
0x00007e1b      a804           test al, 4
0x00007e1d      0f8555faffff   jne 0x7878
0x00007e23      83f807         cmp eax, 7
0x00007e26      41bb08000000   mov r11d, 8
0x00007e2c      0f8f46faffff   jg 0x7878
0x00007e32      a802           test al, 2
0x00007e34      41bb02000000   mov r11d, 2
0x00007e3a      0f8538faffff   jne 0x7878
0x00007e40      83e001         and eax, 1
0x00007e43      83f801         cmp eax, 1
0x00007e46      4519db         sbb r11d, r11d
0x00007e49      4183e302       and r11d, 2
0x00007e4d      4183c304       add r11d, 4
0x00007e51      e922faffff     jmp 0x7878
0x00007e56      662e0f1f8400.  nop word cs:[rax + rax]
0x00007e60      41bb11000000   mov r11d, 0x11
0x00007e66      e90dfaffff     jmp 0x7878
0x00007e6b      498b4f08       mov rcx, qword [r15 + 8]
0x00007e6f      48394c2408     cmp qword [rsp + 8], rcx
0x00007e74      7408           je 0x7e7e
0x00007e76      4889cf         mov rdi, rcx
0x00007e79      e8b295ffff     call sym.imp.free
0x00007e7e      498b7e08       mov rdi, qword [r14 + 8]
0x00007e82      48397c2428     cmp qword [rsp + 0x28], rdi
0x00007e87      7405           je 0x7e8e
0x00007e89      e8a295ffff     call sym.imp.free
0x00007e8e      e8bd95ffff     call sym.imp.__errno_location
0x00007e93      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x25100000
0x00007e99      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00007e9e      e91ff8ffff     jmp 0x76c2
0x00007ea3      4439da         cmp edx, r11d
0x00007ea6      0f842ffaffff   je 0x78db
0x00007eac      ebc1           jmp 0x7e6f
0x00007eae      6690           nop
0x00007eb0      4d01c9         add r9, r9
0x00007eb3      498d4501       lea rax, [r13 + 1]
0x00007eb7      4d39e9         cmp r9, r13
0x00007eba      4c0f46c8       cmovbe r9, rax
0x00007ebe      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x00007ec8      4939c1         cmp r9, rax
0x00007ecb      0f87da030000   ja 0x82ab
0x00007ed1      4c89ce         mov rsi, r9
0x00007ed4      4c894c2448     mov qword [rsp + 0x48], r9
0x00007ed9      4c89542440     mov qword [rsp + 0x40], r10
0x00007ede      48c1e605       shl rsi, 5
0x00007ee2      48394c2408     cmp qword [rsp + 8], rcx
0x00007ee7      4c89442438     mov qword [rsp + 0x38], r8
0x00007eec      44895c2430     mov dword [rsp + 0x30], r11d
0x00007ef1      0f849a000000   je 0x7f91
0x00007ef7      4889cf         mov rdi, rcx
0x00007efa      e86197ffff     call sym.imp.realloc
0x00007eff      4885c0         test rax, rax
0x00007f02      4889c1         mov rcx, rax
0x00007f05      448b5c2430     mov r11d, dword [rsp + 0x30]
0x00007f0a      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007f0f      4c8b542440     mov r10, qword [rsp + 0x40]
0x00007f14      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007f19      0f8488030000   je 0x82a7
0x00007f1f      488b442408     mov rax, qword [rsp + 8]
0x00007f24      493b4708       cmp rax, qword [r15 + 8]
0x00007f28      0f848b000000   je 0x7fb9
0x00007f2e      49894f08       mov qword [r15 + 8], rcx
0x00007f32      e95df9ffff     jmp 0x7894
0x00007f37      488b742420     mov rsi, qword [rsp + 0x20]
0x00007f3c      4883feff       cmp rsi, 0xffffffffffffffff
0x00007f40      488d4601       lea rax, [rsi + 1]
0x00007f44      4989742450     mov qword [r12 + 0x50], rsi
0x00007f49      0f841cffffff   je 0x7e6b
0x00007f4f      4c8b6c2420     mov r13, qword [rsp + 0x20]
0x00007f54      4889442420     mov qword [rsp + 0x20], rax
0x00007f59      e929f9ffff     jmp 0x7887
0x00007f5e      4080ff09       cmp dil, 9
0x00007f62      0f8703ffffff   ja 0x7e6b
0x00007f68      0fbec3         movsx eax, bl
0x00007f6b      4c89c6         mov rsi, r8
0x00007f6e      4889e9         mov rcx, rbp
0x00007f71      83e830         sub eax, 0x30
0x00007f74      4898           cdqe
0x00007f76      e936fcffff     jmp 0x7bb1
0x00007f7b      83fa05         cmp edx, 5
0x00007f7e      0f85ebfeffff   jne 0x7e6f
0x00007f84      0fb65d00       movzx ebx, byte [rbp]
0x00007f88      488d5501       lea rdx, [rbp + 1]
0x00007f8c      e954f8ffff     jmp 0x77e5
0x00007f91      4889f7         mov rdi, rsi
0x00007f94      e88796ffff     call sym.imp.malloc
0x00007f99      4885c0         test rax, rax
0x00007f9c      4889c1         mov rcx, rax
0x00007f9f      448b5c2430     mov r11d, dword [rsp + 0x30]
0x00007fa4      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007fa9      4c8b542440     mov r10, qword [rsp + 0x40]
0x00007fae      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007fb3      0f8463010000   je 0x811c
0x00007fb9      498b17         mov rdx, qword [r15]
0x00007fbc      488b742408     mov rsi, qword [rsp + 8]
0x00007fc1      4889cf         mov rdi, rcx
0x00007fc4      4c894c2448     mov qword [rsp + 0x48], r9
0x00007fc9      4c89542440     mov qword [rsp + 0x40], r10
0x00007fce      4c89442438     mov qword [rsp + 0x38], r8
0x00007fd3      44895c2430     mov dword [rsp + 0x30], r11d
0x00007fd8      48c1e205       shl rdx, 5
0x00007fdc      e80f96ffff     call sym.imp.memcpy
0x00007fe1      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007fe6      4c8b542440     mov r10, qword [rsp + 0x40]
0x00007feb      4889c1         mov rcx, rax
0x00007fee      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007ff3      448b5c2430     mov r11d, dword [rsp + 0x30]
0x00007ff8      e931ffffff     jmp 0x7f2e
0x00007ffd      4889f7         mov rdi, rsi
0x00008000      e81b96ffff     call sym.imp.malloc
0x00008005      4885c0         test rax, rax
0x00008008      4889c1         mov rcx, rax
0x0000800b      4c8b442430     mov r8, qword [rsp + 0x30]
0x00008010      4c8b542438     mov r10, qword [rsp + 0x38]
0x00008015      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000801a      0f84e9000000   je 0x8109
0x00008020      488d049b       lea rax, [rbx + rbx*4]
0x00008024      488b742428     mov rsi, qword [rsp + 0x28]
0x00008029      4889cf         mov rdi, rcx
0x0000802c      4c894c2440     mov qword [rsp + 0x40], r9
0x00008031      4c89542438     mov qword [rsp + 0x38], r10
0x00008036      488d1443       lea rdx, [rbx + rax*2]
0x0000803a      4c89442430     mov qword [rsp + 0x30], r8
0x0000803f      48c1e203       shl rdx, 3
0x00008043      e8a895ffff     call sym.imp.memcpy
0x00008048      498b1e         mov rbx, qword [r14]
0x0000804b      4889c1         mov rcx, rax
0x0000804e      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00008053      4c8b542438     mov r10, qword [rsp + 0x38]
0x00008058      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000805d      e915f9ffff     jmp 0x7977
0x00008062      498b07         mov rax, qword [r15]
0x00008065      e9fdf9ffff     jmp 0x7a67
0x0000806a      83fa05         cmp edx, 5
0x0000806d      0f85fcfdffff   jne 0x7e6f
0x00008073      410fb61b       movzx ebx, byte [r11]
0x00008077      4c89dd         mov rbp, r11
0x0000807a      e96ff7ffff     jmp 0x77ee
0x0000807f      4d01c9         add r9, r9
0x00008082      488d4301       lea rax, [rbx + 1]
0x00008086      4939d9         cmp r9, rbx
0x00008089      4c0f46c8       cmovbe r9, rax
0x0000808d      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x00008097      4939c1         cmp r9, rax
0x0000809a      0f870b020000   ja 0x82ab
0x000080a0      4c89ce         mov rsi, r9
0x000080a3      4c894c2448     mov qword [rsp + 0x48], r9
0x000080a8      4c89542440     mov qword [rsp + 0x40], r10
0x000080ad      48c1e605       shl rsi, 5
0x000080b1      48394c2408     cmp qword [rsp + 8], rcx
0x000080b6      4c89442438     mov qword [rsp + 0x38], r8
0x000080bb      4c895c2430     mov qword [rsp + 0x30], r11
0x000080c0      0f84b8010000   je 0x827e
0x000080c6      4889cf         mov rdi, rcx
0x000080c9      e89295ffff     call sym.imp.realloc
0x000080ce      498b5708       mov rdx, qword [r15 + 8]
0x000080d2      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000080d7      4889c1         mov rcx, rax
0x000080da      4c8b442438     mov r8, qword [rsp + 0x38]
0x000080df      4c8b542440     mov r10, qword [rsp + 0x40]
0x000080e4      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x000080e9      4885c9         test rcx, rcx
0x000080ec      0f8415020000   je 0x8307
0x000080f2      4839542408     cmp qword [rsp + 8], rdx
0x000080f7      498b07         mov rax, qword [r15]
0x000080fa      0f84c0010000   je 0x82c0
0x00008100      49894f08       mov qword [r15 + 8], rcx
0x00008104      e914faffff     jmp 0x7b1d
0x00008109      498b4f08       mov rcx, qword [r15 + 8]
0x0000810d      48394c2408     cmp qword [rsp + 8], rcx
0x00008112      7418           je 0x812c
0x00008114      4889cf         mov rdi, rcx
0x00008117      e81493ffff     call sym.imp.free
0x0000811c      498b7e08       mov rdi, qword [r14 + 8]
0x00008120      48397c2428     cmp qword [rsp + 0x28], rdi
0x00008125      7405           je 0x812c
0x00008127      e80493ffff     call sym.imp.free
0x0000812c      e81f93ffff     call sym.imp.__errno_location
0x00008131      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00008137      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000813c      e981f5ffff     jmp 0x76c2
0x00008141      4889f7         mov rdi, rsi
0x00008144      e8d794ffff     call sym.imp.malloc
0x00008149      488b542408     mov rdx, qword [rsp + 8]
0x0000814e      4889c1         mov rcx, rax
0x00008151      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00008156      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000815b      4c8b442430     mov r8, qword [rsp + 0x30]
0x00008160      e9e7f8ffff     jmp 0x7a4c
0x00008165      488b742420     mov rsi, qword [rsp + 0x20]
0x0000816a      4883feff       cmp rsi, 0xffffffffffffffff
0x0000816e      488d4601       lea rax, [rsi + 1]
0x00008172      4989742440     mov qword [r12 + 0x40], rsi
0x00008177      0f84eefcffff   je 0x7e6b
0x0000817d      488b5c2420     mov rbx, qword [rsp + 0x20]
0x00008182      4889442420     mov qword [rsp + 0x20], rax
0x00008187      e981f9ffff     jmp 0x7b0d
0x0000818c      4c89da         mov rdx, r11
0x0000818f      4883c201       add rdx, 1
0x00008193      0fb60a         movzx ecx, byte [rdx]
0x00008196      8d71d0         lea esi, [rcx - 0x30]
0x00008199      4080fe09       cmp sil, 9
0x0000819d      76f0           jbe 0x818f
0x0000819f      80f924         cmp cl, 0x24
0x000081a2      0f8556f9ffff   jne 0x7afe
0x000081a8      31c9           xor ecx, ecx
0x000081aa      48be99999999.  movabs rsi, 0x1999999999999999
0x000081b4      83e830         sub eax, 0x30
0x000081b7      4c89c2         mov rdx, r8
0x000081ba      4839f1         cmp rcx, rsi
0x000081bd      4898           cdqe
0x000081bf      7707           ja 0x81c8
0x000081c1      488d1489       lea rdx, [rcx + rcx*4]
0x000081c5      4801d2         add rdx, rdx
0x000081c8      4c89de         mov rsi, r11
0x000081cb      31db           xor ebx, ebx
0x000081cd      4801c2         add rdx, rax
0x000081d0      410fbe4301     movsx eax, byte [r11 + 1]
0x000081d5      0f92c3         setb bl
0x000081d8      4983c301       add r11, 1
0x000081dc      4889d1         mov rcx, rdx
0x000081df      4885db         test rbx, rbx
0x000081e2      8d78d0         lea edi, [rax - 0x30]
0x000081e5      7471           je 0x8258
0x000081e7      4080ff09       cmp dil, 9
0x000081eb      0f877afcffff   ja 0x7e6b
0x000081f1      83e830         sub eax, 0x30
0x000081f4      4c89c2         mov rdx, r8
0x000081f7      4c89de         mov rsi, r11
0x000081fa      4898           cdqe
0x000081fc      ebcd           jmp 0x81cb
0x000081fe      4080ff09       cmp dil, 9
0x00008202      0f8763fcffff   ja 0x7e6b
0x00008208      0fbec1         movsx eax, cl
0x0000820b      4889d5         mov rbp, rdx
0x0000820e      4c89c1         mov rcx, r8
0x00008211      83e830         sub eax, 0x30
0x00008214      4898           cdqe
0x00008216      e9befaffff     jmp 0x7cd9
0x0000821b      488b742408     mov rsi, qword [rsp + 8]
0x00008220      48c1e005       shl rax, 5
0x00008224      4889cf         mov rdi, rcx
0x00008227      4889c2         mov rdx, rax
0x0000822a      4c894c2440     mov qword [rsp + 0x40], r9
0x0000822f      4c89542438     mov qword [rsp + 0x38], r10
0x00008234      4c89442430     mov qword [rsp + 0x30], r8
0x00008239      e8b293ffff     call sym.imp.memcpy
0x0000823e      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00008243      4889c1         mov rcx, rax
0x00008246      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000824b      498b07         mov rax, qword [r15]
0x0000824e      4c8b442430     mov r8, qword [rsp + 0x30]
0x00008253      e90bf8ffff     jmp 0x7a63
0x00008258      4080ff09       cmp dil, 9
0x0000825c      0f8648ffffff   jbe 0x81aa
0x00008262      488d5aff       lea rbx, [rdx - 1]
0x00008266      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x0000826a      0f87fbfbffff   ja 0x7e6b
0x00008270      49895c2440     mov qword [r12 + 0x40], rbx
0x00008275      4c8d5e02       lea r11, [rsi + 2]
0x00008279      e98ff8ffff     jmp 0x7b0d
0x0000827e      4889f7         mov rdi, rsi
0x00008281      e89a93ffff     call sym.imp.malloc
0x00008286      488b542408     mov rdx, qword [rsp + 8]
0x0000828b      4889c1         mov rcx, rax
0x0000828e      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00008293      4c8b542440     mov r10, qword [rsp + 0x40]
0x00008298      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000829d      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000082a2      e942feffff     jmp 0x80e9
0x000082a7      498b4f08       mov rcx, qword [r15 + 8]
0x000082ab      48394c2408     cmp qword [rsp + 8], rcx
0x000082b0      0f855efeffff   jne 0x8114
0x000082b6      e961feffff     jmp 0x811c
0x000082bb      0f1f440000     nop dword [rax + rax]
0x000082c0      488b742408     mov rsi, qword [rsp + 8]
0x000082c5      48c1e005       shl rax, 5
0x000082c9      4889cf         mov rdi, rcx
0x000082cc      4889c2         mov rdx, rax
0x000082cf      4c894c2448     mov qword [rsp + 0x48], r9
0x000082d4      4c89542440     mov qword [rsp + 0x40], r10
0x000082d9      4c89442438     mov qword [rsp + 0x38], r8
0x000082de      4c895c2430     mov qword [rsp + 0x30], r11
0x000082e3      e80893ffff     call sym.imp.memcpy
0x000082e8      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x000082ed      4889c1         mov rcx, rax
0x000082f0      4c8b542440     mov r10, qword [rsp + 0x40]
0x000082f5      498b07         mov rax, qword [r15]
0x000082f8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000082fd      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00008302      e9f9fdffff     jmp 0x8100
0x00008307      4889d1         mov rcx, rdx
0x0000830a      eb9f           jmp 0x82ab
0x0000830c      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00008310      4157           push r15
0x00008312      4156           push r14
0x00008314      4989d7         mov r15, rdx
0x00008317      4155           push r13
0x00008319      4154           push r12
0x0000831b      4c8d258e3820.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20bbb0
0x00008322      55             push rbp
0x00008323      488d2d8e3820.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20bbb8
0x0000832a      53             push rbx
0x0000832b      4189fd         mov r13d, edi
0x0000832e      4989f6         mov r14, rsi
0x00008331      4c29e5         sub rbp, r12
0x00008334      4883ec08       sub rsp, 8
0x00008338      48c1fd03       sar rbp, 3
0x0000833c      e89f90ffff     call sym._init
0x00008341      4885ed         test rbp, rbp
0x00008344      7420           je 0x8366
0x00008346      31db           xor ebx, ebx
0x00008348      0f1f84000000.  nop dword [rax + rax]
0x00008350      4c89fa         mov rdx, r15
0x00008353      4c89f6         mov rsi, r14
0x00008356      4489ef         mov edi, r13d
0x00008359      41ff14dc       call qword [r12 + rbx*8]
0x0000835d      4883c301       add rbx, 1
0x00008361      4839dd         cmp rbp, rbx
0x00008364      75ea           jne 0x8350
0x00008366      4883c408       add rsp, 8
0x0000836a      5b             pop rbx
0x0000836b      5d             pop rbp
0x0000836c      415c           pop r12
0x0000836e      415d           pop r13
0x00008370      415e           pop r14
0x00008372      415f           pop r15
0x00008374      c3             ret
0x00008375      90             nop
0x00008376      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00008380      f3c3           ret
0x00008382      662e0f1f8400.  nop word cs:[rax + rax]
0x0000838c      0f1f4000       nop dword [rax]
;-- atexit:
0x00008390      488b15713c20.  mov rdx, qword [obj.__dso_handle]       ; [0x20c008:8]=0x20c008 obj.__dso_handle
0x00008397      31f6           xor esi, esi
0x00008399      e93293ffff     jmp sym.imp.__cxa_atexit
0x0000839e      0000           add byte [rax], al
