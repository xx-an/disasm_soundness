;-- section..plt:
;-- .plt:
0x00001460      ff35ca692000   push qword [0x00207e30]                 ; [12] -r-x section size 784 named .plt
0x00001466      ff25cc692000   jmp qword [0x00207e38]                  ; [0x207e38:8]=0
0x0000146c      0f1f4000       nop dword [rax]
;-- imp.__uflow:
0x00001470      ff25ca692000   jmp qword [reloc.__uflow]               ; [0x207e40:8]=0x1476 ; "v\x14"
0x00001476      6800000000     push 0
0x0000147b      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x00001480      ff25c2692000   jmp qword [reloc.free]                  ; [0x207e48:8]=0x1486
0x00001486      6801000000     push 1
0x0000148b      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x00001490      ff25ba692000   jmp qword [reloc.abort]                 ; [0x207e50:8]=0x1496
0x00001496      6802000000     push 2
0x0000149b      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000014a0      ff25b2692000   jmp qword [reloc.__errno_location]      ; [0x207e58:8]=0x14a6
0x000014a6      6803000000     push 3
0x000014ab      e9b0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000014b0      ff25aa692000   jmp qword [reloc.strncmp]               ; [0x207e60:8]=0x14b6
0x000014b6      6804000000     push 4
0x000014bb      e9a0ffffff     jmp sym..plt
;-- imp._exit:
0x000014c0      ff25a2692000   jmp qword [reloc._exit]                 ; [0x207e68:8]=0x14c6
0x000014c6      6805000000     push 5
0x000014cb      e990ffffff     jmp sym..plt
;-- imp.__fpending:
0x000014d0      ff259a692000   jmp qword [reloc.__fpending]            ; [0x207e70:8]=0x14d6
0x000014d6      6806000000     push 6
0x000014db      e980ffffff     jmp sym..plt
;-- imp.clearerr_unlocked:
0x000014e0      ff2592692000   jmp qword [reloc.clearerr_unlocked]     ; [0x207e78:8]=0x14e6
0x000014e6      6807000000     push 7
0x000014eb      e970ffffff     jmp sym..plt
;-- imp.textdomain:
0x000014f0      ff258a692000   jmp qword [reloc.textdomain]            ; [0x207e80:8]=0x14f6
0x000014f6      6808000000     push 8
0x000014fb      e960ffffff     jmp sym..plt
;-- imp.fclose:
0x00001500      ff2582692000   jmp qword [reloc.fclose]                ; [0x207e88:8]=0x1506
0x00001506      6809000000     push 9
0x0000150b      e950ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001510      ff257a692000   jmp qword [reloc.bindtextdomain]        ; [0x207e90:8]=0x1516
0x00001516      680a000000     push 0xa
0x0000151b      e940ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001520      ff2572692000   jmp qword [reloc.dcgettext]             ; [0x207e98:8]=0x1526 ; "&\x15"
0x00001526      680b000000     push 0xb
0x0000152b      e930ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001530      ff256a692000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x207ea0:8]=0x1536 ; "6\x15"
0x00001536      680c000000     push 0xc
0x0000153b      e920ffffff     jmp sym..plt
;-- imp.strlen:
0x00001540      ff2562692000   jmp qword [reloc.strlen]                ; [0x207ea8:8]=0x1546 ; "F\x15"
0x00001546      680d000000     push 0xd
0x0000154b      e910ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001550      ff255a692000   jmp qword [reloc.__stack_chk_fail]      ; [0x207eb0:8]=0x1556 ; "V\x15"
0x00001556      680e000000     push 0xe
0x0000155b      e900ffffff     jmp sym..plt
;-- imp.getopt_long:
0x00001560      ff2552692000   jmp qword [reloc.getopt_long]           ; [0x207eb8:8]=0x1566 ; "f\x15"
0x00001566      680f000000     push 0xf
0x0000156b      e9f0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001570      ff254a692000   jmp qword [reloc.mbrtowc]               ; [0x207ec0:8]=0x1576 ; "v\x15"
0x00001576      6810000000     push 0x10
0x0000157b      e9e0feffff     jmp sym..plt
;-- imp.__overflow:
0x00001580      ff2542692000   jmp qword [reloc.__overflow]            ; [0x207ec8:8]=0x1586
0x00001586      6811000000     push 0x11
0x0000158b      e9d0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001590      ff253a692000   jmp qword [reloc.strrchr]               ; [0x207ed0:8]=0x1596
0x00001596      6812000000     push 0x12
0x0000159b      e9c0feffff     jmp sym..plt
;-- imp.lseek:
0x000015a0      ff2532692000   jmp qword [reloc.lseek]                 ; [0x207ed8:8]=0x15a6
0x000015a6      6813000000     push 0x13
0x000015ab      e9b0feffff     jmp sym..plt
;-- imp.__assert_fail:
0x000015b0      ff252a692000   jmp qword [reloc.__assert_fail]         ; [0x207ee0:8]=0x15b6
0x000015b6      6814000000     push 0x14
0x000015bb      e9a0feffff     jmp sym..plt
;-- imp.memset:
0x000015c0      ff2522692000   jmp qword [reloc.memset]                ; [0x207ee8:8]=0x15c6
0x000015c6      6815000000     push 0x15
0x000015cb      e990feffff     jmp sym..plt
;-- imp.strspn:
0x000015d0      ff251a692000   jmp qword [reloc.strspn]                ; [0x207ef0:8]=0x15d6
0x000015d6      6816000000     push 0x16
0x000015db      e980feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x000015e0      ff2512692000   jmp qword [reloc.posix_fadvise]         ; [0x207ef8:8]=0x15e6
0x000015e6      6817000000     push 0x17
0x000015eb      e970feffff     jmp sym..plt
;-- imp.strndup:
0x000015f0      ff250a692000   jmp qword [reloc.strndup]               ; [0x207f00:8]=0x15f6
0x000015f6      6818000000     push 0x18
0x000015fb      e960feffff     jmp sym..plt
;-- imp.memcmp:
0x00001600      ff2502692000   jmp qword [reloc.memcmp]                ; [0x207f08:8]=0x1606
0x00001606      6819000000     push 0x19
0x0000160b      e950feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001610      ff25fa682000   jmp qword [reloc.fputs_unlocked]        ; [0x207f10:8]=0x1616
0x00001616      681a000000     push 0x1a
0x0000161b      e940feffff     jmp sym..plt
;-- imp.calloc:
0x00001620      ff25f2682000   jmp qword [reloc.calloc]                ; [0x207f18:8]=0x1626 ; "&\x16"
0x00001626      681b000000     push 0x1b
0x0000162b      e930feffff     jmp sym..plt
;-- imp.memcpy:
0x00001630      ff25ea682000   jmp qword [reloc.memcpy]                ; [0x207f20:8]=0x1636 ; "6\x16"
0x00001636      681c000000     push 0x1c
0x0000163b      e920feffff     jmp sym..plt
;-- imp.fileno:
0x00001640      ff25e2682000   jmp qword [reloc.fileno]                ; [0x207f28:8]=0x1646 ; "F\x16"
0x00001646      681d000000     push 0x1d
0x0000164b      e910feffff     jmp sym..plt
;-- imp.malloc:
0x00001650      ff25da682000   jmp qword [reloc.malloc]                ; [0x207f30:8]=0x1656 ; "V\x16"
0x00001656      681e000000     push 0x1e
0x0000165b      e900feffff     jmp sym..plt
;-- imp.fflush:
0x00001660      ff25d2682000   jmp qword [reloc.fflush]                ; [0x207f38:8]=0x1666 ; "f\x16"
0x00001666      681f000000     push 0x1f
0x0000166b      e9f0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001670      ff25ca682000   jmp qword [reloc.nl_langinfo]           ; [0x207f40:8]=0x1676 ; "v\x16"
0x00001676      6820000000     push 0x20                               ; "@"
0x0000167b      e9e0fdffff     jmp sym..plt
;-- imp.__freading:
0x00001680      ff25c2682000   jmp qword [reloc.__freading]            ; [0x207f48:8]=0x1686
0x00001686      6821000000     push 0x21                               ; '!'
0x0000168b      e9d0fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001690      ff25ba682000   jmp qword [reloc.fwrite_unlocked]       ; [0x207f50:8]=0x1696
0x00001696      6822000000     push 0x22                               ; '"'
0x0000169b      e9c0fdffff     jmp sym..plt
;-- imp.realloc:
0x000016a0      ff25b2682000   jmp qword [reloc.realloc]               ; [0x207f58:8]=0x16a6
0x000016a6      6823000000     push 0x23                               ; '#'
0x000016ab      e9b0fdffff     jmp sym..plt
;-- imp.setlocale:
0x000016b0      ff25aa682000   jmp qword [reloc.setlocale]             ; [0x207f60:8]=0x16b6
0x000016b6      6824000000     push 0x24                               ; '$'
0x000016bb      e9a0fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x000016c0      ff25a2682000   jmp qword [reloc.__printf_chk]          ; [0x207f68:8]=0x16c6
0x000016c6      6825000000     push 0x25                               ; '%'
0x000016cb      e990fdffff     jmp sym..plt
;-- imp.error:
0x000016d0      ff259a682000   jmp qword [reloc.error]                 ; [0x207f70:8]=0x16d6
0x000016d6      6826000000     push 0x26                               ; '&'
0x000016db      e980fdffff     jmp sym..plt
;-- imp.fseeko:
0x000016e0      ff2592682000   jmp qword [reloc.fseeko]                ; [0x207f78:8]=0x16e6
0x000016e6      6827000000     push 0x27                               ; '''
0x000016eb      e970fdffff     jmp sym..plt
;-- imp.fopen:
0x000016f0      ff258a682000   jmp qword [reloc.fopen]                 ; [0x207f80:8]=0x16f6
0x000016f6      6828000000     push 0x28                               ; '('
0x000016fb      e960fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001700      ff2582682000   jmp qword [reloc.__cxa_atexit]          ; [0x207f88:8]=0x1706
0x00001706      6829000000     push 0x29                               ; ')'
0x0000170b      e950fdffff     jmp sym..plt
;-- imp.exit:
0x00001710      ff257a682000   jmp qword [reloc.exit]                  ; [0x207f90:8]=0x1716
0x00001716      682a000000     push 0x2a                               ; '*'
0x0000171b      e940fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001720      ff2572682000   jmp qword [reloc.fwrite]                ; [0x207f98:8]=0x1726 ; "&\x17"
0x00001726      682b000000     push 0x2b                               ; '+'
0x0000172b      e930fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001730      ff256a682000   jmp qword [reloc.__fprintf_chk]         ; [0x207fa0:8]=0x1736 ; "6\x17"
0x00001736      682c000000     push 0x2c                               ; ','
0x0000173b      e920fdffff     jmp sym..plt
;-- imp.mbsinit:
0x00001740      ff2562682000   jmp qword [reloc.mbsinit]               ; [0x207fa8:8]=0x1746 ; "F\x17"
0x00001746      682d000000     push 0x2d                               ; '-'
0x0000174b      e910fdffff     jmp sym..plt
;-- imp.iswprint:
0x00001750      ff255a682000   jmp qword [reloc.iswprint]              ; [0x207fb0:8]=0x1756 ; "V\x17"
0x00001756      682e000000     push 0x2e                               ; '.'
0x0000175b      e900fdffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001760      ff2552682000   jmp qword [reloc.__ctype_b_loc]         ; [0x207fb8:8]=0x1766 ; "f\x17"
0x00001766      682f000000     push 0x2f                               ; '/'
0x0000176b      e9f0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001770      .qword 0x90660020686a25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001778      0000           add byte [rax], al
0x0000177a      0000           add byte [rax], al
0x0000177c      0000           add byte [rax], al
0x0000177e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001780      4157           push r15                                ; [14] -r-x section size 15966 named .text
0x00001782      4156           push r14
0x00001784      41be01000000   mov r14d, 1
0x0000178a      4155           push r13
0x0000178c      4154           push r12
0x0000178e      4c8d258b6320.  lea r12, obj.longopts                   ; 0x207b20 ; "&W"
0x00001795      55             push rbp
0x00001796      53             push rbx
0x00001797      89fd           mov ebp, edi
0x00001799      4889f3         mov rbx, rsi
0x0000179c      4531ed         xor r13d, r13d
0x0000179f      4883ec48       sub rsp, 0x48
0x000017a3      488b3e         mov rdi, qword [rsi]
0x000017a6      64488b042528.  mov rax, qword fs:[0x28]
0x000017af      4889442438     mov qword [rsp + 0x38], rax
0x000017b4      31c0           xor eax, eax
0x000017b6      e8c5140000     call sym.set_program_name
0x000017bb      488d357f4b00.  lea rsi, [0x00006341]
0x000017c2      bf06000000     mov edi, 6
0x000017c7      e8e4feffff     call sym.imp.setlocale
0x000017cc      488d35dd3e00.  lea rsi, str.usr_local_share_locale     ; 0x56b0 ; "/usr/local/share/locale"
0x000017d3      488d3dad3e00.  lea rdi, [0x00005687]                   ; "coreutils"
0x000017da      e831fdffff     call sym.imp.bindtextdomain
0x000017df      488d3da13e00.  lea rdi, [0x00005687]                   ; "coreutils"
0x000017e6      e805fdffff     call sym.imp.textdomain
0x000017eb      488d3d9e1300.  lea rdi, sym.close_stdout               ; 0x2b90 ; "USH\x83\xec\bH\x8b=\vU "
0x000017f2      e8d93d0000     call sym.atexit
0x000017f7      c644240e00     mov byte [rsp + 0xe], 0
0x000017fc      0f1f4000       nop dword [rax]
0x00001800      488d15ed3e00.  lea rdx, str.0123456789at:              ; 0x56f4 ; ",0123456789at:"
0x00001807      4531c0         xor r8d, r8d
0x0000180a      4c89e1         mov rcx, r12
0x0000180d      4889de         mov rsi, rbx
0x00001810      89ef           mov edi, ebp
0x00001812      e849fdffff     call sym.imp.getopt_long
0x00001817      83f8ff         cmp eax, 0xffffffff
0x0000181a      0f8419010000   je 0x1939
0x00001820      83f83f         cmp eax, 0x3f
0x00001823      0f8405040000   je 0x1c2e
0x00001829      7e55           jle 0x1880
0x0000182b      83f874         cmp eax, 0x74
0x0000182e      0f84dc000000   je 0x1910
0x00001834      3d80000000     cmp eax, 0x80
0x00001839      0f84c1000000   je 0x1900
0x0000183f      83f861         cmp eax, 0x61
0x00001842      0f8488000000   je 0x18d0
0x00001848      4584ed         test r13b, r13b
0x0000184b      0f84d7000000   je 0x1928
0x00001851      48b999999999.  movabs rcx, 0x1999999999999999
0x0000185b      4939cf         cmp r15, rcx
0x0000185e      0f87d4030000   ja 0x1c38
0x00001864      496bd70a       imul rdx, r15, 0xa
0x00001868      83e830         sub eax, 0x30
0x0000186b      4898           cdqe
0x0000186d      4801d0         add rax, rdx
0x00001870      4c39f8         cmp rax, r15
0x00001873      0f82bf030000   jb 0x1c38
0x00001879      4989c7         mov r15, rax
0x0000187c      eb82           jmp 0x1800
0x0000187e      6690           nop
0x00001880      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001885      0f849c030000   je 0x1c27
0x0000188b      83f82c         cmp eax, 0x2c
0x0000188e      7450           je 0x18e0
0x00001890      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001895      75b1           jne 0x1848
0x00001897      488b3d0a6820.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x0000189e      488b0d7b6720.  mov rcx, qword [obj.Version]            ; [0x208020:8]=0x5dba str.8.31
0x000018a5      4c8d051c3e00.  lea r8, str.David_MacKenzie             ; 0x56c8 ; "David MacKenzie"
0x000018ac      488d15d03d00.  lea rdx, str.GNU_coreutils              ; 0x5683 ; "GNU coreutils"
0x000018b3      488d354a3d00.  lea rsi, str.unexpand                   ; 0x5604 ; "unexpand"
0x000018ba      4531c9         xor r9d, r9d
0x000018bd      31c0           xor eax, eax
0x000018bf      e8ac350000     call sym.version_etc
0x000018c4      31ff           xor edi, edi
0x000018c6      e845feffff     call sym.imp.exit
0x000018cb      0f1f440000     nop dword [rax + rax]
0x000018d0      4488351d6820.  mov byte [obj.convert_entire_line], r14b ; [0x2080f4:1]=0
0x000018d7      e924ffffff     jmp 0x1800
0x000018dc      0f1f4000       nop dword [rax]
0x000018e0      4584ed         test r13b, r13b
0x000018e3      0f8417ffffff   je 0x1800
0x000018e9      4c89ff         mov rdi, r15
0x000018ec      4531ed         xor r13d, r13d
0x000018ef      e83c090000     call sym.add_tab_stop
0x000018f4      e907ffffff     jmp 0x1800
0x000018f9      0f1f80000000.  nop dword [rax]
0x00001900      c644240e01     mov byte [rsp + 0xe], 1
0x00001905      e9f6feffff     jmp 0x1800
0x0000190a      660f1f440000   nop word [rax + rax]
0x00001910      488b3da96720.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x00001917      448835d66720.  mov byte [obj.convert_entire_line], r14b ; [0x2080f4:1]=0
0x0000191e      e82d0a0000     call sym.parse_tab_stops
0x00001923      e9d8feffff     jmp 0x1800
0x00001928      83e830         sub eax, 0x30
0x0000192b      41bd01000000   mov r13d, 1
0x00001931      4c63f8         movsxd r15, eax
0x00001934      e9c7feffff     jmp 0x1800
0x00001939      807c240e00     cmp byte [rsp + 0xe], 0
0x0000193e      7407           je 0x1947
0x00001940      c605ad672000.  mov byte [obj.convert_entire_line], 0   ; [0x2080f4:1]=0
0x00001947      4584ed         test r13b, r13b
0x0000194a      0f85ca020000   jne 0x1c1a
0x00001950      e85b0d0000     call sym.finalize_tab_stops
0x00001955      4863055c6720.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2080b8:4]=0
0x0000195c      31ff           xor edi, edi
0x0000195e      39e8           cmp eax, ebp
0x00001960      7d04           jge 0x1966
0x00001962      488d3cc3       lea rdi, [rbx + rax*8]
0x00001966      e8350f0000     call sym.set_file_list
0x0000196b      31ff           xor edi, edi
0x0000196d      e84e0f0000     call sym.next_file
0x00001972      4885c0         test rax, rax
0x00001975      4989c7         mov r15, rax
0x00001978      0f8435020000   je 0x1bb3
0x0000197e      488b3d136920.  mov rdi, qword [obj.max_column_width]   ; [0x208298:8]=0
0x00001985      e846360000     call sym.xmalloc
0x0000198a      48890424       mov qword [rsp], rax
0x0000198e      488d44242f     lea rax, [rsp + 0x2f]
0x00001993      4889442410     mov qword [rsp + 0x10], rax
0x00001998      488d442430     lea rax, [rsp + 0x30]
0x0000199d      4889442418     mov qword [rsp + 0x18], rax
0x000019a2      48c744243000.  mov qword [rsp + 0x30], 0
0x000019ab      31ed           xor ebp, ebp
0x000019ad      41bd01000000   mov r13d, 1
0x000019b3      c644240e00     mov byte [rsp + 0xe], 0
0x000019b8      4531e4         xor r12d, r12d
0x000019bb      bb01000000     mov ebx, 1
0x000019c0      e9a5000000     jmp 0x1a6a
0x000019c5      0f1f00         nop dword [rax]
0x000019c8      4183fe08       cmp r14d, 8
0x000019cc      0f8443010000   je 0x1b15
0x000019d2      4983c401       add r12, 1
0x000019d6      0f84d5020000   je 0x1cb1
0x000019dc      4885ed         test rbp, rbp
0x000019df      7445           je 0x1a26
0x000019e1      4883fd01       cmp rbp, 1
0x000019e5      760e           jbe 0x19f5
0x000019e7      807c240e00     cmp byte [rsp + 0xe], 0
0x000019ec      7407           je 0x19f5
0x000019ee      488b0424       mov rax, qword [rsp]
0x000019f2      c60009         mov byte [rax], 9
0x000019f5      488b0dac6620.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x000019fc      488b3c24       mov rdi, qword [rsp]
0x00001a00      4889ea         mov rdx, rbp
0x00001a03      be01000000     mov esi, 1
0x00001a08      448854240e     mov byte [rsp + 0xe], r10b
0x00001a0d      e87efcffff     call sym.imp.fwrite_unlocked
0x00001a12      4839c5         cmp rbp, rax
0x00001a15      440fb654240e   movzx r10d, byte [rsp + 0xe]
0x00001a1b      0f8564020000   jne 0x1c85
0x00001a21      c644240e00     mov byte [rsp + 0xe], 0
0x00001a26      0fb605c76620.  movzx eax, byte [obj.convert_entire_line] ; [0x2080f4:1]=0
0x00001a2d      4589d5         mov r13d, r10d
0x00001a30      31ed           xor ebp, ebp
0x00001a32      4409d0         or eax, r10d
0x00001a35      21c3           and ebx, eax
0x00001a37      4585f6         test r14d, r14d
0x00001a3a      0f886a010000   js 0x1baa
0x00001a40      488b3d616620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001a47      488b4728       mov rax, qword [rdi + 0x28]
0x00001a4b      483b4730       cmp rax, qword [rdi + 0x30]
0x00001a4f      0f8311010000   jae 0x1b66
0x00001a55      488d5001       lea rdx, [rax + 1]
0x00001a59      48895728       mov qword [rdi + 0x28], rdx
0x00001a5d      448830         mov byte [rax], r14b
0x00001a60      4183fe0a       cmp r14d, 0xa
0x00001a64      0f8438ffffff   je 0x19a2
0x00001a6a      498b4708       mov rax, qword [r15 + 8]
0x00001a6e      493b4710       cmp rax, qword [r15 + 0x10]
0x00001a72      0f83c2000000   jae 0x1b3a
0x00001a78      488d5001       lea rdx, [rax + 1]
0x00001a7c      49895708       mov qword [r15 + 8], rdx
0x00001a80      440fb630       movzx r14d, byte [rax]
0x00001a84      84db           test bl, bl
0x00001a86      74af           je 0x1a37
0x00001a88      e8d3fcffff     call sym.imp.__ctype_b_loc
0x00001a8d      488b08         mov rcx, qword [rax]
0x00001a90      4963d6         movsxd rdx, r14d
0x00001a93      0fb70451       movzx eax, word [rcx + rdx*2]
0x00001a97      4189c2         mov r10d, eax
0x00001a9a      4183e201       and r10d, 1
0x00001a9e      a801           test al, 1
0x00001aa0      0f8422ffffff   je 0x19c8
0x00001aa6      488b542410     mov rdx, qword [rsp + 0x10]
0x00001aab      488b742418     mov rsi, qword [rsp + 0x18]
0x00001ab0      4c89e7         mov rdi, r12
0x00001ab3      448854240f     mov byte [rsp + 0xf], r10b
0x00001ab8      e8330d0000     call sym.get_next_tab_column
0x00001abd      807c242f00     cmp byte [rsp + 0x2f], 0
0x00001ac2      440fb654240f   movzx r10d, byte [rsp + 0xf]
0x00001ac8      0f85d5000000   jne 0x1ba3
0x00001ace      4939c4         cmp r12, rax
0x00001ad1      0f878a010000   ja 0x1c61
0x00001ad7      4183fe09       cmp r14d, 9
0x00001adb      0f8400010000   je 0x1be1
0x00001ae1      4983c401       add r12, 1
0x00001ae5      4183f501       xor r13d, 1
0x00001ae9      4c39e0         cmp rax, r12
0x00001aec      0f95c2         setne dl
0x00001aef      4108d5         or r13b, dl
0x00001af2      0f85fe000000   jne 0x1bf6
0x00001af8      488b0424       mov rax, qword [rsp]
0x00001afc      c60009         mov byte [rax], 9
0x00001aff      4c89e0         mov rax, r12
0x00001b02      0fb66c240e     movzx ebp, byte [rsp + 0xe]
0x00001b07      4989c4         mov r12, rax
0x00001b0a      41be09000000   mov r14d, 9
0x00001b10      e9c7feffff     jmp 0x19dc
0x00001b15      31c0           xor eax, eax
0x00001b17      4d85e4         test r12, r12
0x00001b1a      0f95c0         setne al
0x00001b1d      31d2           xor edx, edx
0x00001b1f      4929c4         sub r12, rax
0x00001b22      488b442430     mov rax, qword [rsp + 0x30]
0x00001b27      4885c0         test rax, rax
0x00001b2a      0f95c2         setne dl
0x00001b2d      4829d0         sub rax, rdx
0x00001b30      4889442430     mov qword [rsp + 0x30], rax
0x00001b35      e9a2feffff     jmp 0x19dc
0x00001b3a      4c89ff         mov rdi, r15
0x00001b3d      e82ef9ffff     call sym.imp.__uflow
0x00001b42      85c0           test eax, eax
0x00001b44      4189c6         mov r14d, eax
0x00001b47      0f8937ffffff   jns 0x1a84
0x00001b4d      4c89ff         mov rdi, r15
0x00001b50      e86b0d0000     call sym.next_file
0x00001b55      4885c0         test rax, rax
0x00001b58      4989c7         mov r15, rax
0x00001b5b      0f8509ffffff   jne 0x1a6a
0x00001b61      e91effffff     jmp 0x1a84
0x00001b66      410fb6f6       movzx esi, r14b
0x00001b6a      e811faffff     call sym.imp.__overflow
0x00001b6f      85c0           test eax, eax
0x00001b71      0f89e9feffff   jns 0x1a60
0x00001b77      488d359c3b00.  lea rsi, str.write_error                ; 0x571a ; "write error"
0x00001b7e      ba05000000     mov edx, 5
0x00001b83      31ff           xor edi, edi
0x00001b85      e896f9ffff     call sym.imp.dcgettext
0x00001b8a      4889c3         mov rbx, rax
0x00001b8d      e80ef9ffff     call sym.imp.__errno_location
0x00001b92      8b30           mov esi, dword [rax]
0x00001b94      4889da         mov rdx, rbx
0x00001b97      bf01000000     mov edi, 1
0x00001b9c      31c0           xor eax, eax
0x00001b9e      e82dfbffff     call sym.imp.error
0x00001ba3      31db           xor ebx, ebx
0x00001ba5      e932feffff     jmp 0x19dc
0x00001baa      488b3c24       mov rdi, qword [rsp]
0x00001bae      e8cdf8ffff     call sym.imp.free
0x00001bb3      e8180f0000     call sym.cleanup_file_list_stdin
0x00001bb8      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00001bbd      6448330c2528.  xor rcx, qword fs:[0x28]
0x00001bc6      8b0524652000   mov eax, dword [obj.exit_status]        ; [0x2080f0:4]=0
0x00001bcc      0f858a000000   jne 0x1c5c
0x00001bd2      4883c448       add rsp, 0x48
0x00001bd6      5b             pop rbx
0x00001bd7      5d             pop rbp
0x00001bd8      415c           pop r12
0x00001bda      415d           pop r13
0x00001bdc      415e           pop r14
0x00001bde      415f           pop r15
0x00001be0      c3             ret
0x00001be1      4885ed         test rbp, rbp
0x00001be4      0f8418ffffff   je 0x1b02
0x00001bea      488b0c24       mov rcx, qword [rsp]
0x00001bee      c60109         mov byte [rcx], 9
0x00001bf1      e90cffffff     jmp 0x1b02
0x00001bf6      4c39e0         cmp rax, r12
0x00001bf9      0fb644240e     movzx eax, byte [rsp + 0xe]
0x00001bfe      4489eb         mov ebx, r13d
0x00001c01      410f44c5       cmove eax, r13d
0x00001c05      8844240e       mov byte [rsp + 0xe], al
0x00001c09      488b0424       mov rax, qword [rsp]
0x00001c0d      44883428       mov byte [rax + rbp], r14b
0x00001c11      4883c501       add rbp, 1
0x00001c15      e946feffff     jmp 0x1a60
0x00001c1a      4c89ff         mov rdi, r15
0x00001c1d      e80e060000     call sym.add_tab_stop
0x00001c22      e929fdffff     jmp 0x1950
0x00001c27      31ff           xor edi, edi
0x00001c29      e8c2010000     call sym.usage
0x00001c2e      bf01000000     mov edi, 1
0x00001c33      e8b8010000     call sym.usage
0x00001c38      488d35993a00.  lea rsi, str.tab_stop_value_is_too_large ; 0x56d8 ; "tab stop value is too large"
0x00001c3f      ba05000000     mov edx, 5
0x00001c44      31ff           xor edi, edi
0x00001c46      e8d5f8ffff     call sym.imp.dcgettext
0x00001c4b      31f6           xor esi, esi
0x00001c4d      4889c2         mov rdx, rax
0x00001c50      bf01000000     mov edi, 1
0x00001c55      31c0           xor eax, eax
0x00001c57      e874faffff     call sym.imp.error
0x00001c5c      e8eff8ffff     call sym.imp.__stack_chk_fail
0x00001c61      488d359b3a00.  lea rsi, str.input_line_is_too_long     ; 0x5703 ; "input line is too long"
0x00001c68      ba05000000     mov edx, 5
0x00001c6d      31ff           xor edi, edi
0x00001c6f      e8acf8ffff     call sym.imp.dcgettext
0x00001c74      31f6           xor esi, esi
0x00001c76      4889c2         mov rdx, rax
0x00001c79      bf01000000     mov edi, 1
0x00001c7e      31c0           xor eax, eax
0x00001c80      e84bfaffff     call sym.imp.error
0x00001c85      488d358e3a00.  lea rsi, str.write_error                ; 0x571a ; "write error"
0x00001c8c      ba05000000     mov edx, 5
0x00001c91      31ff           xor edi, edi
0x00001c93      e888f8ffff     call sym.imp.dcgettext
0x00001c98      4889c3         mov rbx, rax
0x00001c9b      e800f8ffff     call sym.imp.__errno_location
0x00001ca0      8b30           mov esi, dword [rax]
0x00001ca2      4889da         mov rdx, rbx
0x00001ca5      bf01000000     mov edi, 1
0x00001caa      31c0           xor eax, eax
0x00001cac      e81ffaffff     call sym.imp.error
0x00001cb1      488d354b3a00.  lea rsi, str.input_line_is_too_long     ; 0x5703 ; "input line is too long"
0x00001cb8      ba05000000     mov edx, 5
0x00001cbd      31ff           xor edi, edi
0x00001cbf      e85cf8ffff     call sym.imp.dcgettext
0x00001cc4      31f6           xor esi, esi
0x00001cc6      4889c2         mov rdx, rax
0x00001cc9      bf01000000     mov edi, 1
0x00001cce      31c0           xor eax, eax
0x00001cd0      e8fbf9ffff     call sym.imp.error
0x00001cd5      662e0f1f8400.  nop word cs:[rax + rax]
0x00001cdf      90             nop
;-- entry0:
;-- _start:
;-- rip:
0x00001ce0      31ed           xor ebp, ebp
0x00001ce2      4989d1         mov r9, rdx
0x00001ce5      5e             pop rsi
0x00001ce6      4889e2         mov rdx, rsp
0x00001ce9      4883e4f0       and rsp, 0xfffffffffffffff0
0x00001ced      50             push rax
0x00001cee      54             push rsp
0x00001cef      4c8d05ca3800.  lea r8, sym.__libc_csu_fini             ; 0x55c0
0x00001cf6      488d0d533800.  lea rcx, sym.__libc_csu_init            ; 0x5550 ; "AWAVI\x89\xd7AUATL\x8d%\xae% "
0x00001cfd      488d3d7cfaff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1780 ; "AWAVA\xbe\x01"
0x00001d04      ff15be622000   call qword [reloc.__libc_start_main]    ; [0x207fc8:8]=0
0x00001d0a      f4             hlt
0x00001d0b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001d10      488d3d896320.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x00001d17      55             push rbp
0x00001d18      488d05816320.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x00001d1f      4839f8         cmp rax, rdi
0x00001d22      4889e5         mov rbp, rsp
0x00001d25      7419           je 0x1d40
0x00001d27      488b05926220.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x207fc0:8]=0
0x00001d2e      4885c0         test rax, rax
0x00001d31      740d           je 0x1d40
0x00001d33      5d             pop rbp
0x00001d34      ffe0           jmp rax
0x00001d36      662e0f1f8400.  nop word cs:[rax + rax]
0x00001d40      5d             pop rbp
0x00001d41      c3             ret
0x00001d42      0f1f4000       nop dword [rax]
0x00001d46      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001d50      488d3d496320.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x00001d57      488d35426320.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x00001d5e      55             push rbp
0x00001d5f      4829fe         sub rsi, rdi
0x00001d62      4889e5         mov rbp, rsp
0x00001d65      48c1fe03       sar rsi, 3
0x00001d69      4889f0         mov rax, rsi
0x00001d6c      48c1e83f       shr rax, 0x3f
0x00001d70      4801c6         add rsi, rax
0x00001d73      48d1fe         sar rsi, 1
0x00001d76      7418           je 0x1d90
0x00001d78      488b05596220.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x207fd8:8]=0
0x00001d7f      4885c0         test rax, rax
0x00001d82      740c           je 0x1d90
0x00001d84      5d             pop rbp
0x00001d85      ffe0           jmp rax
0x00001d87      660f1f840000.  nop word [rax + rax]
0x00001d90      5d             pop rbp
0x00001d91      c3             ret
0x00001d92      0f1f4000       nop dword [rax]
0x00001d96      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00001da0      803d41632000.  cmp byte [obj.completed.7697], 0        ; [0x2080e8:1]=0
0x00001da7      752f           jne 0x1dd8
0x00001da9      48833d2f6220.  cmp qword [reloc.__cxa_finalize], 0     ; [0x207fe0:8]=0
0x00001db1      55             push rbp
0x00001db2      4889e5         mov rbp, rsp
0x00001db5      740c           je 0x1dc3
0x00001db7      488b3d4a6220.  mov rdi, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x00001dbe      e8adf9ffff     call sym..plt.got
0x00001dc3      e848ffffff     call sym.deregister_tm_clones
0x00001dc8      c60519632000.  mov byte [obj.completed.7697], 1        ; [0x2080e8:1]=0
0x00001dcf      5d             pop rbp
0x00001dd0      c3             ret
0x00001dd1      0f1f80000000.  nop dword [rax]
0x00001dd8      f3c3           ret
0x00001dda      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00001de0      55             push rbp
0x00001de1      4889e5         mov rbp, rsp
0x00001de4      5d             pop rbp
0x00001de5      e966ffffff     jmp sym.register_tm_clones
0x00001dea      660f1f440000   nop word [rax + rax]
;-- usage:
0x00001df0      4155           push r13
0x00001df2      4154           push r12
0x00001df4      ba05000000     mov edx, 5
0x00001df9      55             push rbp
0x00001dfa      53             push rbx
0x00001dfb      89fd           mov ebp, edi
0x00001dfd      4881ec880000.  sub rsp, 0x88
0x00001e04      488b1d456320.  mov rbx, qword [obj.program_name]       ; [0x208150:8]=0
0x00001e0b      64488b042528.  mov rax, qword fs:[0x28]
0x00001e14      4889442478     mov qword [rsp + 0x78], rax
0x00001e19      31c0           xor eax, eax
0x00001e1b      85ff           test edi, edi
0x00001e1d      742e           je 0x1e4d
0x00001e1f      488d35223900.  lea rsi, str.Try___s___help__for_more_information. ; 0x5748 ; "Try '%s --help' for more information.\n"
0x00001e26      31ff           xor edi, edi
0x00001e28      e8f3f6ffff     call sym.imp.dcgettext
0x00001e2d      488b3dac6220.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080e0:8]=0
0x00001e34      4889c2         mov rdx, rax
0x00001e37      4889d9         mov rcx, rbx
0x00001e3a      be01000000     mov esi, 1
0x00001e3f      31c0           xor eax, eax
0x00001e41      e8eaf8ffff     call sym.imp.__fprintf_chk
0x00001e46      89ef           mov edi, ebp
0x00001e48      e8c3f8ffff     call sym.imp.exit
0x00001e4d      488d351c3900.  lea rsi, str.Usage:__s__OPTION_...__FILE_... ; 0x5770 ; "Usage: %s [OPTION]... [FILE]...\n"
0x00001e54      31ff           xor edi, edi
0x00001e56      e8c5f6ffff     call sym.imp.dcgettext
0x00001e5b      4889da         mov rdx, rbx
0x00001e5e      4889c6         mov rsi, rax
0x00001e61      bf01000000     mov edi, 1
0x00001e66      31c0           xor eax, eax
0x00001e68      e853f8ffff     call sym.imp.__printf_chk
0x00001e6d      488b1d346220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001e74      488d351d3900.  lea rsi, str.Convert_blanks_in_each_FILE_to_tabs__writing_to_standard_output. ; 0x5798 ; "Convert blanks in each FILE to tabs, writing to standard output.\n"
0x00001e7b      ba05000000     mov edx, 5
0x00001e80      31ff           xor edi, edi
0x00001e82      e899f6ffff     call sym.imp.dcgettext
0x00001e87      4889de         mov rsi, rbx
0x00001e8a      4889c7         mov rdi, rax
0x00001e8d      e87ef7ffff     call sym.imp.fputs_unlocked
0x00001e92      488b1d0f6220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001e99      488d35403900.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x57e0 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00001ea0      ba05000000     mov edx, 5
0x00001ea5      31ff           xor edi, edi
0x00001ea7      e874f6ffff     call sym.imp.dcgettext
0x00001eac      4889de         mov rsi, rbx
0x00001eaf      4889c7         mov rdi, rax
0x00001eb2      e859f7ffff     call sym.imp.fputs_unlocked
0x00001eb7      488b1dea6120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001ebe      488d35533900.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x5818 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00001ec5      ba05000000     mov edx, 5
0x00001eca      31ff           xor edi, edi
0x00001ecc      e84ff6ffff     call sym.imp.dcgettext
0x00001ed1      4889de         mov rsi, rbx
0x00001ed4      4889c7         mov rdi, rax
0x00001ed7      e834f7ffff     call sym.imp.fputs_unlocked
0x00001edc      488b1dc56120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001ee3      488d357e3900.  lea rsi, str.a____all________convert_all_blanks__instead_of_just_initial_blanks__________first_only__convert_only_leading_sequences_of_blanks__overrides__a______t____tabs_N_____have_tabs_N_characters_apart_instead_of_8__enables__a ; 0x5868 ; "  -a, --all        convert all blanks, instead of just initial blanks\n      --first-only  convert only leading sequences of blanks (overrides -a)\n  -t, --tabs=N     have tabs N characters apart instead of 8 (enables -a)\n"
0x00001eea      ba05000000     mov edx, 5
0x00001eef      31ff           xor edi, edi
0x00001ef1      e82af6ffff     call sym.imp.dcgettext
0x00001ef6      4889de         mov rsi, rbx
0x00001ef9      4889c7         mov rdi, rax
0x00001efc      e80ff7ffff     call sym.imp.fputs_unlocked
0x00001f01      e81a0c0000     call sym.emit_tab_list_info
0x00001f06      488b1d9b6120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001f0d      488d35343a00.  lea rsi, str.help_____display_this_help_and_exit ; 0x5948 ; "      --help     display this help and exit\n"
0x00001f14      ba05000000     mov edx, 5
0x00001f19      31ff           xor edi, edi
0x00001f1b      e800f6ffff     call sym.imp.dcgettext
0x00001f20      4889de         mov rsi, rbx
0x00001f23      4889c7         mov rdi, rax
0x00001f26      e8e5f6ffff     call sym.imp.fputs_unlocked
0x00001f2b      488b1d766120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001f32      488d353f3a00.  lea rsi, str.version__output_version_information_and_exit ; 0x5978 ; "      --version  output version information and exit\n"
0x00001f39      ba05000000     mov edx, 5
0x00001f3e      31ff           xor edi, edi
0x00001f40      e8dbf5ffff     call sym.imp.dcgettext
0x00001f45      4889de         mov rsi, rbx
0x00001f48      4889c7         mov rdi, rax
0x00001f4b      488d1db23600.  lea rbx, str.unexpand                   ; 0x5604 ; "unexpand"
0x00001f52      e8b9f6ffff     call sym.imp.fputs_unlocked
0x00001f57      488d05af3600.  lea rax, [0x0000560d]                   ; "["
0x00001f5e      488d0de93600.  lea rcx, str.sha256sum                  ; 0x564e ; "sha256sum"
0x00001f65      48c744246000.  mov qword [rsp + 0x60], 0
0x00001f6e      48c744246800.  mov qword [rsp + 0x68], 0
0x00001f77      4889e2         mov rdx, rsp
0x00001f7a      48890424       mov qword [rsp], rax
0x00001f7e      488d058a3600.  lea rax, str.test_invocation            ; 0x560f ; "test invocation"
0x00001f85      48894c2430     mov qword [rsp + 0x30], rcx
0x00001f8a      488d0dc73600.  lea rcx, str.sha384sum                  ; 0x5658 ; "sha384sum"
0x00001f91      4889442408     mov qword [rsp + 8], rax
0x00001f96      488d05ea3600.  lea rax, [0x00005687]                   ; "coreutils"
0x00001f9d      48894c2440     mov qword [rsp + 0x40], rcx
0x00001fa2      488d0db93600.  lea rcx, str.sha512sum                  ; 0x5662 ; "sha512sum"
0x00001fa9      4889442410     mov qword [rsp + 0x10], rax
0x00001fae      488d056a3600.  lea rax, str.Multi_call_invocation      ; 0x561f ; "Multi-call invocation"
0x00001fb5      48894c2450     mov qword [rsp + 0x50], rcx
0x00001fba      4889442418     mov qword [rsp + 0x18], rax
0x00001fbf      488d056f3600.  lea rax, str.sha224sum                  ; 0x5635 ; "sha224sum"
0x00001fc6      4889442420     mov qword [rsp + 0x20], rax
0x00001fcb      488d056d3600.  lea rax, str.sha2_utilities             ; 0x563f ; "sha2 utilities"
0x00001fd2      4889442428     mov qword [rsp + 0x28], rax
0x00001fd7      4889442438     mov qword [rsp + 0x38], rax
0x00001fdc      4889442448     mov qword [rsp + 0x48], rax
0x00001fe1      4889442458     mov qword [rsp + 0x58], rax
0x00001fe6      662e0f1f8400.  nop word cs:[rax + rax]
0x00001ff0      4883c210       add rdx, 0x10
0x00001ff4      488b3a         mov rdi, qword [rdx]
0x00001ff7      4885ff         test rdi, rdi
0x00001ffa      7413           je 0x200f
0x00001ffc      b909000000     mov ecx, 9
0x00002001      4889de         mov rsi, rbx
0x00002004      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002006      0f97c0         seta al
0x00002009      1c00           sbb al, 0
0x0000200b      84c0           test al, al
0x0000200d      75e1           jne 0x1ff0
0x0000200f      4c8b6208       mov r12, qword [rdx + 8]
0x00002013      31ff           xor edi, edi
0x00002015      ba05000000     mov edx, 5
0x0000201a      488d354b3600.  lea rsi, str.s_online_help:___s         ; 0x566c ; "\n%s online help: <%s>\n"
0x00002021      4d85e4         test r12, r12
0x00002024      0f84c1000000   je 0x20eb
0x0000202a      e8f1f4ffff     call sym.imp.dcgettext
0x0000202f      488d0d7a3900.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x59b0 ; "https://www.gnu.org/software/coreutils/"
0x00002036      488d15463600.  lea rdx, str.GNU_coreutils              ; 0x5683 ; "GNU coreutils"
0x0000203d      4889c6         mov rsi, rax
0x00002040      bf01000000     mov edi, 1
0x00002045      31c0           xor eax, eax
0x00002047      e874f6ffff     call sym.imp.__printf_chk
0x0000204c      31f6           xor esi, esi
0x0000204e      bf05000000     mov edi, 5
0x00002053      e858f6ffff     call sym.imp.setlocale
0x00002058      4885c0         test rax, rax
0x0000205b      741c           je 0x2079
0x0000205d      488d352d3600.  lea rsi, [0x00005691]                   ; "en_"
0x00002064      ba03000000     mov edx, 3
0x00002069      4889c7         mov rdi, rax
0x0000206c      e83ff4ffff     call sym.imp.strncmp
0x00002071      85c0           test eax, eax
0x00002073      0f8507010000   jne 0x2180
0x00002079      488d35153600.  lea rsi, str.Full_documentation___s_s   ; 0x5695 ; "Full documentation <%s%s>\n"
0x00002080      31ff           xor edi, edi
0x00002082      ba05000000     mov edx, 5
0x00002087      e894f4ffff     call sym.imp.dcgettext
0x0000208c      488d0d713500.  lea rcx, str.unexpand                   ; 0x5604 ; "unexpand"
0x00002093      488d15163900.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x59b0 ; "https://www.gnu.org/software/coreutils/"
0x0000209a      4889c6         mov rsi, rax
0x0000209d      bf01000000     mov edi, 1
0x000020a2      31c0           xor eax, eax
0x000020a4      e817f6ffff     call sym.imp.__printf_chk
0x000020a9      4939dc         cmp r12, rbx
0x000020ac      488d0d763500.  lea rcx, [0x00005629]                   ; " invocation"
0x000020b3      488d1d874200.  lea rbx, [0x00006341]
0x000020ba      480f44d9       cmove rbx, rcx
0x000020be      488d355b3900.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x5a20 ; "or available locally via: info '(coreutils) %s%s'\n"
0x000020c5      31ff           xor edi, edi
0x000020c7      ba05000000     mov edx, 5
0x000020cc      e84ff4ffff     call sym.imp.dcgettext
0x000020d1      4889d9         mov rcx, rbx
0x000020d4      4889c6         mov rsi, rax
0x000020d7      4c89e2         mov rdx, r12
0x000020da      bf01000000     mov edi, 1
0x000020df      31c0           xor eax, eax
0x000020e1      e8daf5ffff     call sym.imp.__printf_chk
0x000020e6      e95bfdffff     jmp 0x1e46
0x000020eb      e830f4ffff     call sym.imp.dcgettext
0x000020f0      488d0db93800.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x59b0 ; "https://www.gnu.org/software/coreutils/"
0x000020f7      488d15853500.  lea rdx, str.GNU_coreutils              ; 0x5683 ; "GNU coreutils"
0x000020fe      4889c6         mov rsi, rax
0x00002101      bf01000000     mov edi, 1
0x00002106      31c0           xor eax, eax
0x00002108      e8b3f5ffff     call sym.imp.__printf_chk
0x0000210d      31f6           xor esi, esi
0x0000210f      bf05000000     mov edi, 5
0x00002114      e897f5ffff     call sym.imp.setlocale
0x00002119      4885c0         test rax, rax
0x0000211c      7418           je 0x2136
0x0000211e      488d356c3500.  lea rsi, [0x00005691]                   ; "en_"
0x00002125      ba03000000     mov edx, 3
0x0000212a      4889c7         mov rdi, rax
0x0000212d      e87ef3ffff     call sym.imp.strncmp
0x00002132      85c0           test eax, eax
0x00002134      7543           jne 0x2179
0x00002136      488d35583500.  lea rsi, str.Full_documentation___s_s   ; 0x5695 ; "Full documentation <%s%s>\n"
0x0000213d      ba05000000     mov edx, 5
0x00002142      31ff           xor edi, edi
0x00002144      4c8d25b93400.  lea r12, str.unexpand                   ; 0x5604 ; "unexpand"
0x0000214b      488d1dd73400.  lea rbx, [0x00005629]                   ; " invocation"
0x00002152      e8c9f3ffff     call sym.imp.dcgettext
0x00002157      488d0da63400.  lea rcx, str.unexpand                   ; 0x5604 ; "unexpand"
0x0000215e      488d154b3800.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x59b0 ; "https://www.gnu.org/software/coreutils/"
0x00002165      4889c6         mov rsi, rax
0x00002168      bf01000000     mov edi, 1
0x0000216d      31c0           xor eax, eax
0x0000216f      e84cf5ffff     call sym.imp.__printf_chk
0x00002174      e945ffffff     jmp 0x20be
0x00002179      4c8d25843400.  lea r12, str.unexpand                   ; 0x5604 ; "unexpand"
0x00002180      4c8b2d215f20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002187      488d354a3800.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x59d8 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000218e      31ff           xor edi, edi
0x00002190      ba05000000     mov edx, 5
0x00002195      e886f3ffff     call sym.imp.dcgettext
0x0000219a      4c89ee         mov rsi, r13
0x0000219d      4889c7         mov rdi, rax
0x000021a0      e86bf4ffff     call sym.imp.fputs_unlocked
0x000021a5      e9cffeffff     jmp 0x2079
0x000021aa      660f1f440000   nop word [rax + rax]
;-- set_extend_size:
0x000021b0      48833d785f20.  cmp qword [obj.extend_size], 0          ; [0x208130:8]=0
0x000021b8      53             push rbx
0x000021b9      b801000000     mov eax, 1
0x000021be      4889fb         mov rbx, rdi
0x000021c1      7423           je 0x21e6
0x000021c3      488d358e3800.  lea rsi, [0x00005a58]                   ; "'/' specifier only allowed with the last value"
0x000021ca      ba05000000     mov edx, 5
0x000021cf      31ff           xor edi, edi
0x000021d1      e84af3ffff     call sym.imp.dcgettext
0x000021d6      31f6           xor esi, esi
0x000021d8      4889c2         mov rdx, rax
0x000021db      31ff           xor edi, edi
0x000021dd      31c0           xor eax, eax
0x000021df      e8ecf4ffff     call sym.imp.error
0x000021e4      31c0           xor eax, eax
0x000021e6      48891d435f20.  mov qword [obj.extend_size], rbx        ; [0x208130:8]=0
0x000021ed      5b             pop rbx
0x000021ee      c3             ret
0x000021ef      90             nop
;-- set_increment_size:
0x000021f0      48833d305f20.  cmp qword [obj.increment_size], 0       ; [0x208128:8]=0
0x000021f8      53             push rbx
0x000021f9      b801000000     mov eax, 1
0x000021fe      4889fb         mov rbx, rdi
0x00002201      7423           je 0x2226
0x00002203      488d357e3800.  lea rsi, str.specifier_only_allowed_with_the_last_value ; 0x5a88 ; "'+' specifier only allowed with the last value"
0x0000220a      ba05000000     mov edx, 5
0x0000220f      31ff           xor edi, edi
0x00002211      e80af3ffff     call sym.imp.dcgettext
0x00002216      31f6           xor esi, esi
0x00002218      4889c2         mov rdx, rax
0x0000221b      31ff           xor edi, edi
0x0000221d      31c0           xor eax, eax
0x0000221f      e8acf4ffff     call sym.imp.error
0x00002224      31c0           xor eax, eax
0x00002226      48891dfb5e20.  mov qword [obj.increment_size], rbx     ; [0x208128:8]=0
0x0000222d      5b             pop rbx
0x0000222e      c3             ret
0x0000222f      90             nop
;-- add_tab_stop:
0x00002230      55             push rbp
0x00002231      53             push rbx
0x00002232      4889fb         mov rbx, rdi
0x00002235      4883ec08       sub rsp, 8
0x00002239      488b05d05e20.  mov rax, qword [obj.first_free_tab]     ; [0x208110:8]=0
0x00002240      488b3dd95e20.  mov rdi, qword [obj.tab_list]           ; [0x208120:8]=0
0x00002247      488b35ca5e20.  mov rsi, qword [obj.n_tabs_allocated]   ; [0x208118:8]=0
0x0000224e      4885c0         test rax, rax
0x00002251      7435           je 0x2288
0x00002253      488d14c50000.  lea rdx, [rax*8]
0x0000225b      488b4c17f8     mov rcx, qword [rdi + rdx - 8]
0x00002260      4839d9         cmp rcx, rbx
0x00002263      0f86c9000000   jbe 0x2332
0x00002269      4839f0         cmp rax, rsi
0x0000226c      7452           je 0x22c0
0x0000226e      4883c001       add rax, 1
0x00002272      48891c17       mov qword [rdi + rdx], rbx
0x00002276      488905935e20.  mov qword [obj.first_free_tab], rax     ; [0x208110:8]=0
0x0000227d      4883c408       add rsp, 8
0x00002281      5b             pop rbx
0x00002282      5d             pop rbp
0x00002283      c3             ret
0x00002284      0f1f4000       nop dword [rax]
0x00002288      4889dd         mov rbp, rbx
0x0000228b      4839f0         cmp rax, rsi
0x0000228e      7432           je 0x22c2
0x00002290      48891cc7       mov qword [rdi + rax*8], rbx
0x00002294      48392dfd5f20.  cmp qword [obj.max_column_width], rbp   ; [0x208298:8]=0
0x0000229b      488d5001       lea rdx, [rax + 1]
0x0000229f      4889156a5e20.  mov qword [obj.first_free_tab], rdx     ; [0x208110:8]=0
0x000022a6      7307           jae 0x22af
0x000022a8      48892de95f20.  mov qword [obj.max_column_width], rbp   ; [0x208298:8]=0
0x000022af      4883c408       add rsp, 8
0x000022b3      5b             pop rbx
0x000022b4      5d             pop rbp
0x000022b5      c3             ret
0x000022b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000022c0      31ed           xor ebp, ebp
0x000022c2      4885ff         test rdi, rdi
0x000022c5      7441           je 0x2308
0x000022c7      48b8a9aaaaaa.  movabs rax, 0xaaaaaaaaaaaaaa9
0x000022d1      4839c6         cmp rsi, rax
0x000022d4      7757           ja 0x232d
0x000022d6      4889f0         mov rax, rsi
0x000022d9      48d1e8         shr rax, 1
0x000022dc      488d740601     lea rsi, [rsi + rax + 1]
0x000022e1      488935305e20.  mov qword [obj.n_tabs_allocated], rsi   ; [0x208118:8]=0
0x000022e8      48c1e603       shl rsi, 3
0x000022ec      e83f2d0000     call sym.xrealloc
0x000022f1      4889c7         mov rdi, rax
0x000022f4      488905255e20.  mov qword [obj.tab_list], rax           ; [0x208120:8]=0
0x000022fb      488b050e5e20.  mov rax, qword [obj.first_free_tab]     ; [0x208110:8]=0
0x00002302      eb8c           jmp 0x2290
0x00002304      0f1f4000       nop dword [rax]
0x00002308      4885f6         test rsi, rsi
0x0000230b      b810000000     mov eax, 0x10
0x00002310      ba08000000     mov edx, 8
0x00002315      480f44f0       cmove rsi, rax
0x00002319      4889d0         mov rax, rdx
0x0000231c      31c9           xor ecx, ecx
0x0000231e      48f7e6         mul rsi
0x00002321      701a           jo 0x233d
0x00002323      4885c0         test rax, rax
0x00002326      7805           js 0x232d
0x00002328      4885c9         test rcx, rcx
0x0000232b      74b4           je 0x22e1
0x0000232d      e8ee2e0000     call sym.xalloc_die
0x00002332      4889dd         mov rbp, rbx
0x00002335      4829cd         sub rbp, rcx
0x00002338      e94effffff     jmp 0x228b
0x0000233d      b901000000     mov ecx, 1
0x00002342      ebdf           jmp 0x2323
0x00002344      6690           nop
0x00002346      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_tab_stops:
0x00002350      4157           push r15
0x00002352      4156           push r14
0x00002354      4155           push r13
0x00002356      4154           push r12
0x00002358      55             push rbp
0x00002359      53             push rbx
0x0000235a      4883ec18       sub rsp, 0x18
0x0000235e      440fb63f       movzx r15d, byte [rdi]
0x00002362      4584ff         test r15b, r15b
0x00002365      0f8406010000   je 0x2471
0x0000236b      4889fb         mov rbx, rdi
0x0000236e      4531f6         xor r14d, r14d
0x00002371      c644240801     mov byte [rsp + 8], 1
0x00002376      48c704240000.  mov qword [rsp], 0
0x0000237e      4531ed         xor r13d, r13d
0x00002381      4531e4         xor r12d, r12d
0x00002384      31ed           xor ebp, ebp
0x00002386      eb66           jmp 0x23ee
0x00002388      0f1f84000000.  nop dword [rax + rax]
0x00002390      e8cbf3ffff     call sym.imp.__ctype_b_loc
0x00002395      488b30         mov rsi, qword [rax]
0x00002398      410fb6cf       movzx ecx, r15b
0x0000239c      f6044e01       test byte [rsi + rcx*2], 1
0x000023a0      7552           jne 0x23f4
0x000023a2      4180ff2f       cmp r15b, 0x2f
0x000023a6      0f841c010000   je 0x24c8
0x000023ac      4180ff2b       cmp r15b, 0x2b
0x000023b0      0f8452010000   je 0x2508
0x000023b6      410fbed7       movsx edx, r15b
0x000023ba      83ea30         sub edx, 0x30
0x000023bd      83fa09         cmp edx, 9
0x000023c0      0f87aa020000   ja 0x2670
0x000023c6      4084ed         test bpl, bpl
0x000023c9      0f8559010000   jne 0x2528
0x000023cf      4c63f2         movsxd r14, edx
0x000023d2      4889d8         mov rax, rbx
0x000023d5      48891c24       mov qword [rsp], rbx
0x000023d9      bd01000000     mov ebp, 1
0x000023de      6690           nop
0x000023e0      440fb67801     movzx r15d, byte [rax + 1]
0x000023e5      488d5801       lea rbx, [rax + 1]
0x000023e9      4584ff         test r15b, r15b
0x000023ec      744a           je 0x2438
0x000023ee      4180ff2c       cmp r15b, 0x2c
0x000023f2      759c           jne 0x2390
0x000023f4      4084ed         test bpl, bpl
0x000023f7      0f84a3000000   je 0x24a0
0x000023fd      4584e4         test r12b, r12b
0x00002400      4c89f7         mov rdi, r14
0x00002403      0f85df000000   jne 0x24e8
0x00002409      4584ed         test r13b, r13b
0x0000240c      0f849e000000   je 0x24b0
0x00002412      e8d9fdffff     call sym.set_increment_size
0x00002417      84c0           test al, al
0x00002419      4189c5         mov r13d, eax
0x0000241c      0f847d020000   je 0x269f
0x00002422      4889d8         mov rax, rbx
0x00002425      31ed           xor ebp, ebp
0x00002427      440fb67801     movzx r15d, byte [rax + 1]
0x0000242c      488d5801       lea rbx, [rax + 1]
0x00002430      4584ff         test r15b, r15b
0x00002433      75b9           jne 0x23ee
0x00002435      0f1f00         nop dword [rax]
0x00002438      4084ed         test bpl, bpl
0x0000243b      7429           je 0x2466
0x0000243d      807c240800     cmp byte [rsp + 8], 0
0x00002442      0f8457020000   je 0x269f
0x00002448      4584e4         test r12b, r12b
0x0000244b      4c89f7         mov rdi, r14
0x0000244e      0f8501020000   jne 0x2655
0x00002454      4584ed         test r13b, r13b
0x00002457      0f84e5010000   je 0x2642
0x0000245d      e88efdffff     call sym.set_increment_size
0x00002462      88442408       mov byte [rsp + 8], al
0x00002466      807c240800     cmp byte [rsp + 8], 0
0x0000246b      0f842e020000   je 0x269f
0x00002471      4883c418       add rsp, 0x18
0x00002475      5b             pop rbx
0x00002476      5d             pop rbp
0x00002477      415c           pop r12
0x00002479      415d           pop r13
0x0000247b      415e           pop r14
0x0000247d      415f           pop r15
0x0000247f      c3             ret
0x00002480      4b8d04b6       lea rax, [r14 + r14*4]
0x00002484      4863d2         movsxd rdx, edx
0x00002487      488d0442       lea rax, [rdx + rax*2]
0x0000248b      4c39f0         cmp rax, r14
0x0000248e      0f82a7000000   jb 0x253b
0x00002494      4989c6         mov r14, rax
0x00002497      660f1f840000.  nop word [rax + rax]
0x000024a0      4889d8         mov rax, rbx
0x000024a3      e938ffffff     jmp 0x23e0
0x000024a8      0f1f84000000.  nop dword [rax + rax]
0x000024b0      e87bfdffff     call sym.add_tab_stop
0x000024b5      4589ec         mov r12d, r13d
0x000024b8      31ed           xor ebp, ebp
0x000024ba      4889d8         mov rax, rbx
0x000024bd      e91effffff     jmp 0x23e0
0x000024c2      660f1f440000   nop word [rax + rax]
0x000024c8      4084ed         test bpl, bpl
0x000024cb      0f85e7000000   jne 0x25b8
0x000024d1      4531ed         xor r13d, r13d
0x000024d4      4889d8         mov rax, rbx
0x000024d7      41bc01000000   mov r12d, 1
0x000024dd      e9fefeffff     jmp 0x23e0
0x000024e2      660f1f440000   nop word [rax + rax]
0x000024e8      e8c3fcffff     call sym.set_extend_size
0x000024ed      84c0           test al, al
0x000024ef      4189c4         mov r12d, eax
0x000024f2      0f84a7010000   je 0x269f
0x000024f8      4889d8         mov rax, rbx
0x000024fb      31ed           xor ebp, ebp
0x000024fd      e9defeffff     jmp 0x23e0
0x00002502      660f1f440000   nop word [rax + rax]
0x00002508      4084ed         test bpl, bpl
0x0000250b      0f85ef000000   jne 0x2600
0x00002511      4531e4         xor r12d, r12d
0x00002514      4889d8         mov rax, rbx
0x00002517      41bd01000000   mov r13d, 1
0x0000251d      e9befeffff     jmp 0x23e0
0x00002522      660f1f440000   nop word [rax + rax]
0x00002528      48b899999999.  movabs rax, 0x1999999999999999
0x00002532      4939c6         cmp r14, rax
0x00002535      0f8645ffffff   jbe 0x2480
0x0000253b      4c8b3c24       mov r15, qword [rsp]
0x0000253f      488d35073800.  lea rsi, str.0123456789                 ; 0x5d4d ; "0123456789"
0x00002546      4c89ff         mov rdi, r15
0x00002549      e882f0ffff     call sym.imp.strspn
0x0000254e      4c89ff         mov rdi, r15
0x00002551      4889c6         mov rsi, rax
0x00002554      4889c3         mov rbx, rax
0x00002557      4c893c24       mov qword [rsp], r15
0x0000255b      e8002d0000     call sym.xstrndup
0x00002560      4889c7         mov rdi, rax
0x00002563      4989c7         mov r15, rax
0x00002566      e825240000     call sym.quote
0x0000256b      488d35e63700.  lea rsi, str.tab_stop_is_too_large__s   ; 0x5d58 ; "tab stop is too large %s"
0x00002572      ba05000000     mov edx, 5
0x00002577      31ff           xor edi, edi
0x00002579      4889442408     mov qword [rsp + 8], rax
0x0000257e      e89defffff     call sym.imp.dcgettext
0x00002583      488b4c2408     mov rcx, qword [rsp + 8]
0x00002588      4889c2         mov rdx, rax
0x0000258b      31f6           xor esi, esi
0x0000258d      31c0           xor eax, eax
0x0000258f      31ff           xor edi, edi
0x00002591      e83af1ffff     call sym.imp.error
0x00002596      4c89ff         mov rdi, r15
0x00002599      e8e2eeffff     call sym.imp.free
0x0000259e      488b0424       mov rax, qword [rsp]
0x000025a2      c644240800     mov byte [rsp + 8], 0
0x000025a7      488d4418ff     lea rax, [rax + rbx - 1]
0x000025ac      e92ffeffff     jmp 0x23e0
0x000025b1      0f1f80000000.  nop dword [rax]
0x000025b8      4889df         mov rdi, rbx
0x000025bb      4531ed         xor r13d, r13d
0x000025be      e8cd230000     call sym.quote
0x000025c3      488d35ee3400.  lea rsi, [0x00005ab8]                   ; "'/' specifier not at start of number: %s"
0x000025ca      4989c4         mov r12, rax
0x000025cd      ba05000000     mov edx, 5
0x000025d2      31ff           xor edi, edi
0x000025d4      e847efffff     call sym.imp.dcgettext
0x000025d9      4c89e1         mov rcx, r12
0x000025dc      4889c2         mov rdx, rax
0x000025df      31f6           xor esi, esi
0x000025e1      31c0           xor eax, eax
0x000025e3      31ff           xor edi, edi
0x000025e5      4189ec         mov r12d, ebp
0x000025e8      e8e3f0ffff     call sym.imp.error
0x000025ed      4889d8         mov rax, rbx
0x000025f0      c644240800     mov byte [rsp + 8], 0
0x000025f5      e9e6fdffff     jmp 0x23e0
0x000025fa      660f1f440000   nop word [rax + rax]
0x00002600      4889df         mov rdi, rbx
0x00002603      4189ed         mov r13d, ebp
0x00002606      e885230000     call sym.quote
0x0000260b      488d35d63400.  lea rsi, str.specifier_not_at_start_of_number:__s ; 0x5ae8 ; "'+' specifier not at start of number: %s"
0x00002612      4989c4         mov r12, rax
0x00002615      ba05000000     mov edx, 5
0x0000261a      31ff           xor edi, edi
0x0000261c      e8ffeeffff     call sym.imp.dcgettext
0x00002621      4c89e1         mov rcx, r12
0x00002624      4889c2         mov rdx, rax
0x00002627      31f6           xor esi, esi
0x00002629      31c0           xor eax, eax
0x0000262b      31ff           xor edi, edi
0x0000262d      4531e4         xor r12d, r12d
0x00002630      e89bf0ffff     call sym.imp.error
0x00002635      4889d8         mov rax, rbx
0x00002638      c644240800     mov byte [rsp + 8], 0
0x0000263d      e99efdffff     jmp 0x23e0
0x00002642      4883c418       add rsp, 0x18
0x00002646      5b             pop rbx
0x00002647      5d             pop rbp
0x00002648      415c           pop r12
0x0000264a      415d           pop r13
0x0000264c      415e           pop r14
0x0000264e      415f           pop r15
0x00002650      e9dbfbffff     jmp sym.add_tab_stop
0x00002655      e856fbffff     call sym.set_extend_size
0x0000265a      88442408       mov byte [rsp + 8], al
0x0000265e      807c240800     cmp byte [rsp + 8], 0
0x00002663      0f8508feffff   jne 0x2471
0x00002669      eb34           jmp 0x269f
0x0000266b      0f1f440000     nop dword [rax + rax]
0x00002670      4889df         mov rdi, rbx
0x00002673      e818230000     call sym.quote
0x00002678      488d35993400.  lea rsi, str.tab_size_contains_invalid_character_s_:__s ; 0x5b18 ; "tab size contains invalid character(s): %s"
0x0000267f      4889c3         mov rbx, rax
0x00002682      ba05000000     mov edx, 5
0x00002687      31ff           xor edi, edi
0x00002689      e892eeffff     call sym.imp.dcgettext
0x0000268e      4889d9         mov rcx, rbx
0x00002691      4889c2         mov rdx, rax
0x00002694      31f6           xor esi, esi
0x00002696      31ff           xor edi, edi
0x00002698      31c0           xor eax, eax
0x0000269a      e831f0ffff     call sym.imp.error
0x0000269f      bf01000000     mov edi, 1
0x000026a4      e867f0ffff     call sym.imp.exit
0x000026a9      0f1f80000000.  nop dword [rax]
;-- finalize_tab_stops:
0x000026b0      4883ec08       sub rsp, 8
0x000026b4      488b35555a20.  mov rsi, qword [obj.first_free_tab]     ; [0x208110:8]=0
0x000026bb      488b3d5e5a20.  mov rdi, qword [obj.tab_list]           ; [0x208120:8]=0
0x000026c2      4885f6         test rsi, rsi
0x000026c5      747d           je 0x2744
0x000026c7      4c8b07         mov r8, qword [rdi]
0x000026ca      4d85c0         test r8, r8
0x000026cd      4c89c1         mov rcx, r8
0x000026d0      0f84aa000000   je 0x2780
0x000026d6      31c0           xor eax, eax
0x000026d8      eb1f           jmp 0x26f9
0x000026da      660f1f440000   nop word [rax + rax]
0x000026e0      488b14c7       mov rdx, qword [rdi + rax*8]
0x000026e4      4885d2         test rdx, rdx
0x000026e7      0f8493000000   je 0x2780
0x000026ed      4839d1         cmp rcx, rdx
0x000026f0      0f83ae000000   jae 0x27a4
0x000026f6      4889d1         mov rcx, rdx
0x000026f9      4883c001       add rax, 1
0x000026fd      4839c6         cmp rsi, rax
0x00002700      75de           jne 0x26e0
0x00002702      488b051f5a20.  mov rax, qword [obj.increment_size]     ; [0x208128:8]=0
0x00002709      4885c0         test rax, rax
0x0000270c      740e           je 0x271c
0x0000270e      48833d1a5a20.  cmp qword [obj.extend_size], 0          ; [0x208130:8]=0
0x00002716      0f85ac000000   jne 0x27c8
0x0000271c      4883fe01       cmp rsi, 1
0x00002720      7410           je 0x2732
0x00002722      48c7050b5a20.  mov qword [obj.tab_size], 0             ; [0x208138:8]=0
0x0000272d      4883c408       add rsp, 8
0x00002731      c3             ret
0x00002732      480b05f75920.  or rax, qword [obj.extend_size]         ; [0x208130:8]=0
0x00002739      75e7           jne 0x2722
0x0000273b      4c8905f65920.  mov qword [obj.tab_size], r8            ; [0x208138:8]=0
0x00002742      ebe9           jmp 0x272d
0x00002744      488b15dd5920.  mov rdx, qword [obj.increment_size]     ; [0x208128:8]=0
0x0000274b      488b05de5920.  mov rax, qword [obj.extend_size]        ; [0x208130:8]=0
0x00002752      4885d2         test rdx, rdx
0x00002755      741b           je 0x2772
0x00002757      4885c0         test rax, rax
0x0000275a      756c           jne 0x27c8
0x0000275c      4889d0         mov rax, rdx
0x0000275f      488905325b20.  mov qword [obj.max_column_width], rax   ; [0x208298:8]=0
0x00002766      488905cb5920.  mov qword [obj.tab_size], rax           ; [0x208138:8]=0
0x0000276d      4883c408       add rsp, 8
0x00002771      c3             ret
0x00002772      4885c0         test rax, rax
0x00002775      ba08000000     mov edx, 8
0x0000277a      480f44c2       cmove rax, rdx
0x0000277e      ebdf           jmp 0x275f
0x00002780      488d35ea3500.  lea rsi, str.tab_size_cannot_be_0       ; 0x5d71 ; "tab size cannot be 0"
0x00002787      ba05000000     mov edx, 5
0x0000278c      31ff           xor edi, edi
0x0000278e      e88dedffff     call sym.imp.dcgettext
0x00002793      31f6           xor esi, esi
0x00002795      4889c2         mov rdx, rax
0x00002798      bf01000000     mov edi, 1
0x0000279d      31c0           xor eax, eax
0x0000279f      e82cefffff     call sym.imp.error
0x000027a4      488d35db3500.  lea rsi, str.tab_sizes_must_be_ascending ; 0x5d86 ; "tab sizes must be ascending"
0x000027ab      ba05000000     mov edx, 5
0x000027b0      31ff           xor edi, edi
0x000027b2      e869edffff     call sym.imp.dcgettext
0x000027b7      31f6           xor esi, esi
0x000027b9      4889c2         mov rdx, rax
0x000027bc      bf01000000     mov edi, 1
0x000027c1      31c0           xor eax, eax
0x000027c3      e808efffff     call sym.imp.error
0x000027c8      488d35793300.  lea rsi, str.specifier_is_mutually_exclusive_with ; 0x5b48 ; "'/' specifier is mutually exclusive with '+'"
0x000027cf      ba05000000     mov edx, 5
0x000027d4      31ff           xor edi, edi
0x000027d6      e845edffff     call sym.imp.dcgettext
0x000027db      31f6           xor esi, esi
0x000027dd      4889c2         mov rdx, rax
0x000027e0      bf01000000     mov edi, 1
0x000027e5      31c0           xor eax, eax
0x000027e7      e8e4eeffff     call sym.imp.error
0x000027ec      0f1f4000       nop dword [rax]
;-- get_next_tab_column:
0x000027f0      488b0d415920.  mov rcx, qword [obj.tab_size]           ; [0x208138:8]=0
0x000027f7      c60200         mov byte [rdx], 0
0x000027fa      4885c9         test rcx, rcx
0x000027fd      7561           jne 0x2860
0x000027ff      488b0e         mov rcx, qword [rsi]
0x00002802      488b05075920.  mov rax, qword [obj.first_free_tab]     ; [0x208110:8]=0
0x00002809      4839c8         cmp rax, rcx
0x0000280c      7630           jbe 0x283e
0x0000280e      4c8b0d0b5920.  mov r9, qword [obj.tab_list]            ; [0x208120:8]=0
0x00002815      4d8b04c9       mov r8, qword [r9 + rcx*8]
0x00002819      4c39c7         cmp rdi, r8
0x0000281c      7251           jb 0x286f
0x0000281e      4883c101       add rcx, 1
0x00002822      eb12           jmp 0x2836
0x00002824      0f1f4000       nop dword [rax]
0x00002828      4883c101       add rcx, 1
0x0000282c      4d8b44c9f8     mov r8, qword [r9 + rcx*8 - 8]
0x00002831      4c39c7         cmp rdi, r8
0x00002834      7239           jb 0x286f
0x00002836      4839c8         cmp rax, rcx
0x00002839      48890e         mov qword [rsi], rcx
0x0000283c      75ea           jne 0x2828
0x0000283e      488b0deb5820.  mov rcx, qword [obj.extend_size]        ; [0x208130:8]=0
0x00002845      4885c9         test rcx, rcx
0x00002848      7516           jne 0x2860
0x0000284a      4c8b05d75820.  mov r8, qword [obj.increment_size]      ; [0x208128:8]=0
0x00002851      4d85c0         test r8, r8
0x00002854      7522           jne 0x2878
0x00002856      c60201         mov byte [rdx], 1
0x00002859      eb14           jmp 0x286f
0x0000285b      0f1f440000     nop dword [rax + rax]
0x00002860      4889f8         mov rax, rdi
0x00002863      31d2           xor edx, edx
0x00002865      4c8d0439       lea r8, [rcx + rdi]
0x00002869      48f7f1         div rcx
0x0000286c      4929d0         sub r8, rdx
0x0000286f      4c89c0         mov rax, r8
0x00002872      c3             ret
0x00002873      0f1f440000     nop dword [rax + rax]
0x00002878      488b15a15820.  mov rdx, qword [obj.tab_list]           ; [0x208120:8]=0
0x0000287f      498d0c38       lea rcx, [r8 + rdi]
0x00002883      482b7cc2f8     sub rdi, qword [rdx + rax*8 - 8]
0x00002888      31d2           xor edx, edx
0x0000288a      4889f8         mov rax, rdi
0x0000288d      49f7f0         div r8
0x00002890      4829d1         sub rcx, rdx
0x00002893      4989c8         mov r8, rcx
0x00002896      ebd7           jmp 0x286f
0x00002898      0f1f84000000.  nop dword [rax + rax]
;-- set_file_list:
0x000028a0      488d05695720.  lea rax, obj.stdin_argv                 ; 0x208010 ; "\n^"
0x000028a7      4885ff         test rdi, rdi
0x000028aa      c6054f582000.  mov byte [obj.have_read_stdin], 0       ; [0x208100:1]=0
0x000028b1      480f44f8       cmove rdi, rax
0x000028b5      48893d4c5820.  mov qword [obj.file_list], rdi          ; [0x208108:8]=0
0x000028bc      c3             ret
0x000028bd      0f1f00         nop dword [rax]
;-- next_file:
0x000028c0      4154           push r12
0x000028c2      55             push rbp
0x000028c3      53             push rbx
0x000028c4      4883ec10       sub rsp, 0x10
0x000028c8      4885ff         test rdi, rdi
0x000028cb      7442           je 0x290f
0x000028cd      488b35245820.  mov rsi, qword [obj.prev_file.6959]     ; [0x2080f8:8]=0
0x000028d4      4885f6         test rsi, rsi
0x000028d7      0f84c5010000   je 0x2aa2
0x000028dd      f60720         test byte [rdi], 0x20
0x000028e0      4889fd         mov rbp, rdi
0x000028e3      0f8577010000   jne 0x2a60
0x000028e9      488d1d1a3500.  lea rbx, [0x00005e0a]                   ; "-"
0x000028f0      b902000000     mov ecx, 2
0x000028f5      4889df         mov rdi, rbx
0x000028f8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000028fa      4889ef         mov rdi, rbp
0x000028fd      0f97c0         seta al
0x00002900      1c00           sbb al, 0
0x00002902      84c0           test al, al
0x00002904      0f8506010000   jne 0x2a10
0x0000290a      e8d1ebffff     call sym.imp.clearerr_unlocked
0x0000290f      488b05f25720.  mov rax, qword [obj.file_list]          ; [0x208108:8]=0
0x00002916      488d5008       lea rdx, [rax + 8]
0x0000291a      488915e75720.  mov qword [obj.file_list], rdx          ; [0x208108:8]=0
0x00002921      488b10         mov rdx, qword [rax]
0x00002924      4885d2         test rdx, rdx
0x00002927      0f84d3000000   je 0x2a00
0x0000292d      488d1dd63400.  lea rbx, [0x00005e0a]                   ; "-"
0x00002934      488d2de92d00.  lea rbp, [0x00005724]                   ; "r"
0x0000293b      eb63           jmp 0x29a0
0x0000293d      0f1f00         nop dword [rax]
0x00002940      488b05695720.  mov rax, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2080b0:8]=0
0x00002947      c605b2572000.  mov byte [obj.have_read_stdin], 1       ; [0x208100:1]=0
0x0000294e      4885c0         test rax, rax
0x00002951      757d           jne 0x29d0
0x00002953      31ff           xor edi, edi
0x00002955      be03000000     mov esi, 3
0x0000295a      e8611e0000     call sym.quotearg_n_style_colon
0x0000295f      4989c4         mov r12, rax
0x00002962      e839ebffff     call sym.imp.__errno_location
0x00002967      8b30           mov esi, dword [rax]
0x00002969      488d15533400.  lea rdx, [0x00005dc3]                   ; "%s"
0x00002970      31c0           xor eax, eax
0x00002972      31ff           xor edi, edi
0x00002974      4c89e1         mov rcx, r12
0x00002977      e854edffff     call sym.imp.error
0x0000297c      488b05855720.  mov rax, qword [obj.file_list]          ; [0x208108:8]=0
0x00002983      c70563572000.  mov dword [obj.exit_status], 1          ; [0x2080f0:4]=0
0x0000298d      488d5008       lea rdx, [rax + 8]
0x00002991      488915705720.  mov qword [obj.file_list], rdx          ; [0x208108:8]=0
0x00002998      488b10         mov rdx, qword [rax]
0x0000299b      4885d2         test rdx, rdx
0x0000299e      7460           je 0x2a00
0x000029a0      b902000000     mov ecx, 2
0x000029a5      4889d6         mov rsi, rdx
0x000029a8      4889df         mov rdi, rbx
0x000029ab      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000029ad      0f97c0         seta al
0x000029b0      1c00           sbb al, 0
0x000029b2      84c0           test al, al
0x000029b4      748a           je 0x2940
0x000029b6      4889d7         mov rdi, rdx
0x000029b9      4889ee         mov rsi, rbp
0x000029bc      4889542408     mov qword [rsp + 8], rdx
0x000029c1      e82aedffff     call sym.imp.fopen
0x000029c6      4885c0         test rax, rax
0x000029c9      488b542408     mov rdx, qword [rsp + 8]
0x000029ce      7483           je 0x2953
0x000029d0      4889c7         mov rdi, rax
0x000029d3      be02000000     mov esi, 2
0x000029d8      4889442408     mov qword [rsp + 8], rax
0x000029dd      488915145720.  mov qword [obj.prev_file.6959], rdx     ; [0x2080f8:8]=0
0x000029e4      e867020000     call sym.fadvise
0x000029e9      488b442408     mov rax, qword [rsp + 8]
0x000029ee      4883c410       add rsp, 0x10
0x000029f2      5b             pop rbx
0x000029f3      5d             pop rbp
0x000029f4      415c           pop r12
0x000029f6      c3             ret
0x000029f7      660f1f840000.  nop word [rax + rax]
0x00002a00      4883c410       add rsp, 0x10
0x00002a04      31c0           xor eax, eax
0x00002a06      5b             pop rbx
0x00002a07      5d             pop rbp
0x00002a08      415c           pop r12
0x00002a0a      c3             ret
0x00002a0b      0f1f440000     nop dword [rax + rax]
0x00002a10      e86b280000     call sym.rpl_fclose
0x00002a15      85c0           test eax, eax
0x00002a17      0f84f2feffff   je 0x290f
0x00002a1d      488b15d45620.  mov rdx, qword [obj.prev_file.6959]     ; [0x2080f8:8]=0
0x00002a24      be03000000     mov esi, 3
0x00002a29      31ff           xor edi, edi
0x00002a2b      e8901d0000     call sym.quotearg_n_style_colon
0x00002a30      4889c3         mov rbx, rax
0x00002a33      e868eaffff     call sym.imp.__errno_location
0x00002a38      8b30           mov esi, dword [rax]
0x00002a3a      488d15823300.  lea rdx, [0x00005dc3]                   ; "%s"
0x00002a41      4889d9         mov rcx, rbx
0x00002a44      31ff           xor edi, edi
0x00002a46      31c0           xor eax, eax
0x00002a48      e883ecffff     call sym.imp.error
0x00002a4d      c70599562000.  mov dword [obj.exit_status], 1          ; [0x2080f0:4]=0
0x00002a57      e9b3feffff     jmp 0x290f
0x00002a5c      0f1f4000       nop dword [rax]
0x00002a60      4889f2         mov rdx, rsi
0x00002a63      31ff           xor edi, edi
0x00002a65      be03000000     mov esi, 3
0x00002a6a      e8511d0000     call sym.quotearg_n_style_colon
0x00002a6f      4889c3         mov rbx, rax
0x00002a72      e829eaffff     call sym.imp.__errno_location
0x00002a77      8b30           mov esi, dword [rax]
0x00002a79      488d15433300.  lea rdx, [0x00005dc3]                   ; "%s"
0x00002a80      4889d9         mov rcx, rbx
0x00002a83      31ff           xor edi, edi
0x00002a85      31c0           xor eax, eax
0x00002a87      e844ecffff     call sym.imp.error
0x00002a8c      c7055a562000.  mov dword [obj.exit_status], 1          ; [0x2080f0:4]=0
0x00002a96      488b355b5620.  mov rsi, qword [obj.prev_file.6959]     ; [0x2080f8:8]=0
0x00002a9d      e947feffff     jmp 0x28e9
0x00002aa2      488d0d073300.  lea rcx, obj.__PRETTY_FUNCTION__.6961   ; 0x5db0 ; "next_file"
0x00002aa9      488d35c83000.  lea rsi, str..._coreutils_8.31_src_expand_common.c ; 0x5b78 ; "../coreutils-8.31/src/expand-common.c"
0x00002ab0      488d3deb3200.  lea rdi, str.prev_file                  ; 0x5da2 ; "prev_file"
0x00002ab7      ba55010000     mov edx, 0x155
0x00002abc      e8efeaffff     call sym.imp.__assert_fail
0x00002ac1      0f1f440000     nop dword [rax + rax]
0x00002ac6      662e0f1f8400.  nop word cs:[rax + rax]
;-- cleanup_file_list_stdin:
0x00002ad0      803d29562000.  cmp byte [obj.have_read_stdin], 0       ; [0x208100:1]=0
0x00002ad7      7507           jne 0x2ae0
0x00002ad9      f3c3           ret
0x00002adb      0f1f440000     nop dword [rax + rax]
0x00002ae0      4883ec08       sub rsp, 8
0x00002ae4      488b3dc55520.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2080b0:8]=0
0x00002aeb      e890270000     call sym.rpl_fclose
0x00002af0      85c0           test eax, eax
0x00002af2      7505           jne 0x2af9
0x00002af4      4883c408       add rsp, 8
0x00002af8      c3             ret
0x00002af9      e8a2e9ffff     call sym.imp.__errno_location
0x00002afe      8b30           mov esi, dword [rax]
0x00002b00      488d15033300.  lea rdx, [0x00005e0a]                   ; "-"
0x00002b07      bf01000000     mov edi, 1
0x00002b0c      31c0           xor eax, eax
0x00002b0e      e8bdebffff     call sym.imp.error
0x00002b13      0f1f00         nop dword [rax]
0x00002b16      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_tab_list_info:
0x00002b20      53             push rbx
0x00002b21      488b1d805520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002b28      488d35713000.  lea rsi, str.t____tabs_LIST__use_comma_separated_list_of_tab_positions ; 0x5ba0 ; "  -t, --tabs=LIST  use comma separated list of tab positions\n"
0x00002b2f      ba05000000     mov edx, 5
0x00002b34      31ff           xor edi, edi
0x00002b36      e8e5e9ffff     call sym.imp.dcgettext
0x00002b3b      4889de         mov rsi, rbx
0x00002b3e      4889c7         mov rdi, rax
0x00002b41      e8caeaffff     call sym.imp.fputs_unlocked
0x00002b46      488b1d5b5520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002b4d      488d358c3000.  lea rsi, str.The_last_specified_position_can_be_prefixed_with___________________________to_specify_a_tab_size_to_use_after_the_last_______________________explicitly_specified_tab_stop.__Also_a_prefix_of___________________________can_be_used_to_align_remaining_tab_stops_relative_to_______________________the_last_specified_tab_stop_instead_of_the_first_column ; 0x5be0 ; "                     The last specified position can be prefixed with '/'\n                     to specify a tab size to use after the last\n                     explicitly specified tab stop.  Also a prefix of '+'\n                     can be used to align remaining tab stops relative to\n                     the last specified tab stop instead of the first column\n"
0x00002b54      31ff           xor edi, edi
0x00002b56      ba05000000     mov edx, 5
0x00002b5b      e8c0e9ffff     call sym.imp.dcgettext
0x00002b60      4889de         mov rsi, rbx
0x00002b63      4889c7         mov rdi, rax
0x00002b66      5b             pop rbx
0x00002b67      e9a4eaffff     jmp sym.imp.fputs_unlocked
0x00002b6c      0f1f4000       nop dword [rax]
;-- close_stdout_set_file_name:
0x00002b70      48893dd15520.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x208148:8]=0
0x00002b77      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002b78      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00002b80      40883db95520.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x208140:1]=0
0x00002b87      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00002b88      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00002b90      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00002b91      53             push rbx
0x00002b92      4883ec08       sub rsp, 8
0x00002b96      488b3d0b5520.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002b9d      e88e280000     call sym.close_stream
0x00002ba2      85c0           test eax, eax
0x00002ba4      7416           je 0x2bbc
0x00002ba6      e8f5e8ffff     call sym.imp.__errno_location
0x00002bab      803d8e552000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x208140:1]=0
0x00002bb2      4889c3         mov rbx, rax
0x00002bb5      741c           je 0x2bd3
0x00002bb7      833820         cmp dword [rax], 0x20
0x00002bba      7517           jne 0x2bd3
0x00002bbc      488b3d1d5520.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080e0:8]=0
0x00002bc3      e868280000     call sym.close_stream
0x00002bc8      85c0           test eax, eax
0x00002bca      7546           jne 0x2c12
0x00002bcc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00002bd0      5b             pop rbx
0x00002bd1      5d             pop rbp
0x00002bd2      c3             ret
0x00002bd3      488d35402b00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x571a ; "write error"
0x00002bda      31ff           xor edi, edi
0x00002bdc      ba05000000     mov edx, 5
0x00002be1      e83ae9ffff     call sym.imp.dcgettext
0x00002be6      488b3d5b5520.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x208148:8]=0
0x00002bed      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002bf0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002bf3      7428           je 0x2c1d
0x00002bf5      e8961b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00002bfa      8b33           mov esi, dword [rbx]
0x00002bfc      488d15bc3100.  lea rdx, str.s:__s                      ; 0x5dbf ; "%s: %s"
0x00002c03      4889c1         mov rcx, rax
0x00002c06      4989e8         mov r8, rbp
0x00002c09      31ff           xor edi, edi
0x00002c0b      31c0           xor eax, eax
0x00002c0d      e8beeaffff     call sym.imp.error
0x00002c12      8b3d10542000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x208028:4]=1
0x00002c18      e8a3e8ffff     call sym.imp._exit
0x00002c1d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00002c1f      488d159d3100.  lea rdx, [0x00005dc3]                   ; "%s"
0x00002c26      4889c1         mov rcx, rax
0x00002c29      31ff           xor edi, edi
0x00002c2b      31c0           xor eax, eax
0x00002c2d      e89eeaffff     call sym.imp.error
0x00002c32      ebde           jmp 0x2c12
0x00002c34      662e0f1f8400.  nop word cs:[rax + rax]
0x00002c3e      6690           nop
;-- fdadvise:
0x00002c40      e99be9ffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x00002c45      90             nop
0x00002c46      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x00002c50      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x00002c53      741b           je 0x2c70
0x00002c55      53             push rbx
0x00002c56      89f3           mov ebx, esi
0x00002c58      e8e3e9ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x00002c5d      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00002c5f      31d2           xor edx, edx
0x00002c61      31f6           xor esi, esi
0x00002c63      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x00002c64      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00002c66      e975e9ffff     jmp sym.imp.posix_fadvise
0x00002c6b      0f1f440000     nop dword [rax + rax]
0x00002c70      f3c3           ret
0x00002c72      662e0f1f8400.  nop word cs:[rax + rax]
0x00002c7c      0f1f4000       nop dword [rax]
;-- set_program_name:
0x00002c80      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00002c83      53             push rbx
0x00002c84      7477           je 0x2cfd                               ; ../coreutils-8.31/lib/progname.c:51
0x00002c86      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00002c8b      4889fb         mov rbx, rdi
0x00002c8e      e8fde8ffff     call sym.imp.strrchr
0x00002c93      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00002c96      7455           je 0x2ced
0x00002c98      4c8d4001       lea r8, [rax + 1]
0x00002c9c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00002c9f      4829da         sub rdx, rbx
0x00002ca2      4883fa06       cmp rdx, 6
0x00002ca6      7e45           jle 0x2ced
0x00002ca8      488d70fa       lea rsi, [rax - 6]
0x00002cac      488d3d4d3100.  lea rdi, str..libs                      ; 0x5e00 ; "/.libs/"
0x00002cb3      b907000000     mov ecx, 7
0x00002cb8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002cba      0f97c2         seta dl
0x00002cbd      80da00         sbb dl, 0
0x00002cc0      84d2           test dl, dl
0x00002cc2      7529           jne 0x2ced
0x00002cc4      488d3d3d3100.  lea rdi, [0x00005e08]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00002ccb      b903000000     mov ecx, 3
0x00002cd0      4c89c6         mov rsi, r8
0x00002cd3      4c89c3         mov rbx, r8
0x00002cd6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002cd8      0f97c2         seta dl
0x00002cdb      80da00         sbb dl, 0
0x00002cde      84d2           test dl, dl
0x00002ce0      750b           jne 0x2ced
0x00002ce2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00002ce6      48891db35320.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x2080a0:8]=0
0x00002ced      48891d5c5420.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x208150:8]=0
0x00002cf4      48891dcd5320.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2080c8:8]=0
0x00002cfb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00002cfc      c3             ret
0x00002cfd      488b0ddc5320.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080e0:8]=0
0x00002d04      488d3dbd3000.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x5dc8 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00002d0b      ba37000000     mov edx, 0x37                           ; '7'
0x00002d10      be01000000     mov esi, 1
0x00002d15      e806eaffff     call sym.imp.fwrite
0x00002d1a      e871e7ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00002d1f      90             nop
;-- gettext_quote.part.1:
0x00002d20      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002d21      53             push rbx
0x00002d22      4889fd         mov rbp, rdi
0x00002d25      89f3           mov ebx, esi
0x00002d27      4883ec08       sub rsp, 8
0x00002d2b      e8e0270000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002d30      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002d33      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002d36      80fa55         cmp dl, 0x55
0x00002d39      7475           je 0x2db0
0x00002d3b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00002d3e      7420           je 0x2d60
0x00002d40      488d05d43000.  lea rax, str.l______l                   ; 0x5e1b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002d47      488d15cf3000.  lea rdx, [0x00005e1d]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002d4e      83fb09         cmp ebx, 9
0x00002d51      480f45c2       cmovne rax, rdx
0x00002d55      4883c408       add rsp, 8
0x00002d59      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00002d5a      5d             pop rbp
0x00002d5b      c3             ret
0x00002d5c      0f1f4000       nop dword [rax]
0x00002d60      0fb65001       movzx edx, byte [rax + 1]
0x00002d64      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002d67      80fa42         cmp dl, 0x42
0x00002d6a      75d4           jne 0x2d40
0x00002d6c      80780231       cmp byte [rax + 2], 0x31
0x00002d70      75ce           jne 0x2d40
0x00002d72      80780338       cmp byte [rax + 3], 0x38
0x00002d76      75c8           jne 0x2d40
0x00002d78      80780430       cmp byte [rax + 4], 0x30
0x00002d7c      75c2           jne 0x2d40
0x00002d7e      80780533       cmp byte [rax + 5], 0x33
0x00002d82      75bc           jne 0x2d40
0x00002d84      80780630       cmp byte [rax + 6], 0x30
0x00002d88      75b6           jne 0x2d40
0x00002d8a      80780700       cmp byte [rax + 7], 0
0x00002d8e      75b0           jne 0x2d40
0x00002d90      807d0060       cmp byte [rbp], 0x60
0x00002d94      488d05793000.  lea rax, [0x00005e14]
0x00002d9b      488d15763000.  lea rdx, [0x00005e18]
0x00002da2      480f45c2       cmovne rax, rdx
0x00002da6      4883c408       add rsp, 8
0x00002daa      5b             pop rbx
0x00002dab      5d             pop rbp
0x00002dac      c3             ret
0x00002dad      0f1f00         nop dword [rax]
0x00002db0      0fb65001       movzx edx, byte [rax + 1]
0x00002db4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002db7      80fa54         cmp dl, 0x54
0x00002dba      7584           jne 0x2d40
0x00002dbc      0fb65002       movzx edx, byte [rax + 2]
0x00002dc0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002dc3      80fa46         cmp dl, 0x46
0x00002dc6      0f8574ffffff   jne 0x2d40
0x00002dcc      8078032d       cmp byte [rax + 3], 0x2d
0x00002dd0      0f856affffff   jne 0x2d40
0x00002dd6      80780438       cmp byte [rax + 4], 0x38
0x00002dda      0f8560ffffff   jne 0x2d40
0x00002de0      80780500       cmp byte [rax + 5], 0
0x00002de4      0f8556ffffff   jne 0x2d40
0x00002dea      807d0060       cmp byte [rbp], 0x60
0x00002dee      488d05173000.  lea rax, [0x00005e0c]                   ; "\u2018"
0x00002df5      488d15143000.  lea rdx, [0x00005e10]                   ; "\u2019"
0x00002dfc      480f45c2       cmovne rax, rdx
0x00002e00      4883c408       add rsp, 8
0x00002e04      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002e05      5d             pop rbp
0x00002e06      c3             ret
0x00002e07      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002e10      4157           push r15
0x00002e12      4156           push r14
0x00002e14      4589c7         mov r15d, r8d
0x00002e17      4155           push r13
0x00002e19      4154           push r12
0x00002e1b      4989fe         mov r14, rdi
0x00002e1e      55             push rbp
0x00002e1f      53             push rbx
0x00002e20      4489cb         mov ebx, r9d
0x00002e23      4989f5         mov r13, rsi
0x00002e26      4889cd         mov rbp, rcx
0x00002e29      83e302         and ebx, 2
0x00002e2c      4881ecb80000.  sub rsp, 0xb8
0x00002e33      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00002e3b      4889542410     mov qword [rsp + 0x10], rdx
0x00002e40      4489442408     mov dword [rsp + 8], r8d
0x00002e45      44894c2478     mov dword [rsp + 0x78], r9d
0x00002e4a      4889442420     mov qword [rsp + 0x20], rax
0x00002e4f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002e57      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00002e5c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00002e64      4889442460     mov qword [rsp + 0x60], rax
0x00002e69      64488b042528.  mov rax, qword fs:[0x28]
0x00002e72      48898424a800.  mov qword [rsp + 0xa8], rax
0x00002e7a      31c0           xor eax, eax
0x00002e7c      e8afe6ffff     call sym.imp.__ctype_get_mb_cur_max
0x00002e81      4183ff0a       cmp r15d, 0xa
0x00002e85      4889442458     mov qword [rsp + 0x58], rax
0x00002e8a      0f87af110000   ja 0x403f
0x00002e90      488d0de92f00.  lea rcx, [0x00005e80]
0x00002e97      4489fa         mov edx, r15d
0x00002e9a      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002e9e      4801c8         add rax, rcx
0x00002ea1      ffe0           jmp rax
0x00002ea3      c644240e01     mov byte [rsp + 0xe], 1
0x00002ea8      c644247c00     mov byte [rsp + 0x7c], 0
0x00002ead      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00002eb0      48c744245000.  mov qword [rsp + 0x50], 0
0x00002eb9      c644240f01     mov byte [rsp + 0xf], 1
0x00002ebe      c644240d00     mov byte [rsp + 0xd], 0
0x00002ec3      488d05532f00.  lea rax, [0x00005e1d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002eca      48c744241801.  mov qword [rsp + 0x18], 1
0x00002ed3      4531ff         xor r15d, r15d
0x00002ed6      c74424080200.  mov dword [rsp + 8], 2
0x00002ede      4889442448     mov qword [rsp + 0x48], rax
0x00002ee3      4531db         xor r11d, r11d
0x00002ee6      4889e8         mov rax, rbp
0x00002ee9      4589e0         mov r8d, r12d
0x00002eec      4c89dd         mov rbp, r11
0x00002eef      4989c3         mov r11, rax
0x00002ef2      660f1f440000   nop word [rax + rax]
0x00002ef8      4939eb         cmp r11, rbp
0x00002efb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00002eff      4983fbff       cmp r11, 0xffffffffffffffff
0x00002f03      750d           jne 0x2f12
0x00002f05      488b442410     mov rax, qword [rsp + 0x10]
0x00002f0a      803c2800       cmp byte [rax + rbp], 0
0x00002f0e      410f95c4       setne r12b
0x00002f12      4584e4         test r12b, r12b
0x00002f15      0f8455060000   je 0x3570
0x00002f1b      837c240802     cmp dword [rsp + 8], 2
0x00002f20      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002f25      4c8d0c2f       lea r9, [rdi + rbp]
0x00002f29      0f95c0         setne al
0x00002f2c      2244240d       and al, byte [rsp + 0xd]
0x00002f30      4189c2         mov r10d, eax
0x00002f33      0f84a7000000   je 0x2fe0
0x00002f39      488b442418     mov rax, qword [rsp + 0x18]
0x00002f3e      4885c0         test rax, rax
0x00002f41      0f8429040000   je 0x3370
0x00002f47      4983fbff       cmp r11, 0xffffffffffffffff
0x00002f4b      488d5c0500     lea rbx, [rbp + rax]
0x00002f50      752e           jne 0x2f80
0x00002f52      4883f801       cmp rax, 1
0x00002f56      7628           jbe 0x2f80
0x00002f58      4488442438     mov byte [rsp + 0x38], r8b
0x00002f5d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00002f62      4c894c2428     mov qword [rsp + 0x28], r9
0x00002f67      e8d4e5ffff     call sym.imp.strlen
0x00002f6c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002f72      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00002f78      4989c3         mov r11, rax
0x00002f7b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00002f80      4c39db         cmp rbx, r11
0x00002f83      4488542428     mov byte [rsp + 0x28], r10b
0x00002f88      0f87b2050000   ja 0x3540
0x00002f8e      488b542418     mov rdx, qword [rsp + 0x18]
0x00002f93      488b742448     mov rsi, qword [rsp + 0x48]
0x00002f98      4c89cf         mov rdi, r9
0x00002f9b      4c895c2440     mov qword [rsp + 0x40], r11
0x00002fa0      4488442438     mov byte [rsp + 0x38], r8b
0x00002fa5      4c894c2430     mov qword [rsp + 0x30], r9
0x00002faa      e851e6ffff     call sym.imp.memcmp
0x00002faf      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00002fb1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00002fb6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002fbc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00002fc1      0f8579050000   jne 0x3540
0x00002fc7      807c240f00     cmp byte [rsp + 0xf], 0
0x00002fcc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002fd2      0f857d0f0000   jne 0x3f55
0x00002fd8      0f1f84000000.  nop dword [rax + rax]
0x00002fe0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00002fe4      80fb7e         cmp bl, 0x7e
0x00002fe7      0f871b030000   ja 0x3308
0x00002fed      488d0db82e00.  lea rcx, [0x00005eac]
0x00002ff4      0fb6d3         movzx edx, bl
0x00002ff7      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002ffb      4801c8         add rax, rcx
0x00002ffe      ffe0           jmp rax
0x00003000      4531d2         xor r10d, r10d
0x00003003      4983fb01       cmp r11, 1
0x00003007      0f95c0         setne al
0x0000300a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000300e      750c           jne 0x301c
0x00003010      488b442410     mov rax, qword [rsp + 0x10]
0x00003015      80780100       cmp byte [rax + 1], 0
0x00003019      0f95c0         setne al
0x0000301c      837c240802     cmp dword [rsp + 8], 2
0x00003021      0f94c2         sete dl
0x00003024      84c0           test al, al
0x00003026      0f844c020000   je 0x3278
0x0000302c      4531e4         xor r12d, r12d
0x0000302f      31c0           xor eax, eax
0x00003031      0f1f80000000.  nop dword [rax]
0x00003038      807c240d01     cmp byte [rsp + 0xd], 1
0x0000303d      0f850f010000   jne 0x3152
0x00003043      84d2           test dl, dl
0x00003045      0f8507010000   jne 0x3152
0x0000304b      488b742420     mov rsi, qword [rsp + 0x20]
0x00003050      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00003053      7414           je 0x3069
0x00003055      89da           mov edx, ebx
0x00003057      c0ea05         shr dl, 5
0x0000305a      0fb6d2         movzx edx, dl
0x0000305d      8b1496         mov edx, dword [rsi + rdx*4]
0x00003060      0fa3da         bt edx, ebx
0x00003063      0f824a010000   jb 0x31b3
0x00003069      4584d2         test r10b, r10b
0x0000306c      0f8541010000   jne 0x31b3
0x00003072      83f001         xor eax, 1
0x00003075      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00003079      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000307c      84c0           test al, al
0x0000307e      7420           je 0x30a0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003080      4d39fd         cmp r13, r15
0x00003083      7605           jbe 0x308a
0x00003085      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000308a      498d4701       lea rax, [r15 + 1]
0x0000308e      4939c5         cmp r13, rax
0x00003091      7606           jbe 0x3099
0x00003093      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003099      4983c702       add r15, 2
0x0000309d      4531c0         xor r8d, r8d
0x000030a0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x000030a3      7304           jae 0x30a9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x000030a5      43881c3e       mov byte [r14 + r15], bl
0x000030a9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x000030ae      4983c701       add r15, 1
0x000030b2      b800000000     mov eax, 0
0x000030b7      4584e4         test r12b, r12b
0x000030ba      0f44f8         cmove edi, eax
0x000030bd      40887c240e     mov byte [rsp + 0xe], dil
0x000030c2      e931feffff     jmp 0x2ef8
0x000030c7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000030d0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000030d3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000030d7      83f802         cmp eax, 2
0x000030da      0f84b8050000   je 0x3698
0x000030e0      83f805         cmp eax, 5
0x000030e3      0f846f050000   je 0x3658
0x000030e9      83f802         cmp eax, 2
0x000030ec      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000030f1      0f94c2         sete dl
0x000030f4      4531e4         xor r12d, r12d
0x000030f7      31c0           xor eax, eax
0x000030f9      e93affffff     jmp 0x3038
0x000030fe      6690           nop
0x00003100      4531d2         xor r10d, r10d
0x00003103      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00003108      0f8402050000   je 0x3610
0x0000310e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00003113      31d2           xor edx, edx
0x00003115      31c0           xor eax, eax
0x00003117      bb27000000     mov ebx, 0x27                           ; '''
0x0000311c      e917ffffff     jmp 0x3038
0x00003121      0f1f80000000.  nop dword [rax]
0x00003128      ba09000000     mov edx, 9
0x0000312d      bb74000000     mov ebx, 0x74                           ; 't'
0x00003132      837c240802     cmp dword [rsp + 8], 2
0x00003137      0f94c0         sete al
0x0000313a      2244240f       and al, byte [rsp + 0xf]
0x0000313e      0f854a010000   jne 0x328e
0x00003144      807c240d00     cmp byte [rsp + 0xd], 0
0x00003149      7565           jne 0x31b0
0x0000314b      89d3           mov ebx, edx
0x0000314d      4531e4         xor r12d, r12d
0x00003150      31c0           xor eax, eax
0x00003152      807c240f00     cmp byte [rsp + 0xf], 0
0x00003157      0f85eefeffff   jne 0x304b
0x0000315d      e907ffffff     jmp 0x3069                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00003162      660f1f440000   nop word [rax + rax]
0x00003168      ba08000000     mov edx, 8
0x0000316d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003172      ebd0           jmp 0x3144
0x00003174      0f1f4000       nop dword [rax]
0x00003178      837c240802     cmp dword [rsp + 8], 2
0x0000317d      0f84cd030000   je 0x3550
0x00003183      807c240d00     cmp byte [rsp + 0xd], 0
0x00003188      0f8412020000   je 0x33a0
0x0000318e      807c240f00     cmp byte [rsp + 0xf], 0
0x00003193      0f8407020000   je 0x33a0
0x00003199      48837c241800   cmp qword [rsp + 0x18], 0
0x0000319f      0f85b6030000   jne 0x355b
0x000031a5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000031aa      660f1f440000   nop word [rax + rax]
0x000031b0      4531e4         xor r12d, r12d
0x000031b3      837c240802     cmp dword [rsp + 8], 2
0x000031b8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x000031bb      807c240f00     cmp byte [rsp + 0xf], 0
0x000031c0      89d0           mov eax, edx
0x000031c2      0f8550080000   jne 0x3a18
0x000031c8      4489c0         mov eax, r8d
0x000031cb      83f001         xor eax, 1
0x000031ce      20d0           and al, dl
0x000031d0      742f           je 0x3201
0x000031d2      4d39fd         cmp r13, r15
0x000031d5      7605           jbe 0x31dc
0x000031d7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000031dc      498d5701       lea rdx, [r15 + 1]
0x000031e0      4939d5         cmp r13, rdx
0x000031e3      7606           jbe 0x31eb
0x000031e5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000031eb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x000031ef      4939d5         cmp r13, rdx
0x000031f2      7606           jbe 0x31fa
0x000031f4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000031fa      4983c703       add r15, 3
0x000031fe      4189c0         mov r8d, eax
0x00003201      4d39fd         cmp r13, r15
0x00003204      7605           jbe 0x320b
0x00003206      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000320b      4983c701       add r15, 1
0x0000320f      4883c501       add rbp, 1
0x00003213      e988feffff     jmp 0x30a0
0x00003218      0f1f84000000.  nop dword [rax + rax]
0x00003220      807c240d00     cmp byte [rsp + 0xd], 0
0x00003225      0f85c8010000   jne 0x33f3
0x0000322b      31d2           xor edx, edx
0x0000322d      f644247801     test byte [rsp + 0x78], 1
0x00003232      0f8413ffffff   je 0x314b
0x00003238      4883c501       add rbp, 1
0x0000323c      e9b7fcffff     jmp 0x2ef8
0x00003241      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003248      837c240802     cmp dword [rsp + 8], 2
0x0000324d      0f94c2         sete dl
0x00003250      31c0           xor eax, eax
0x00003252      e9e1fdffff     jmp 0x3038
0x00003257      660f1f840000.  nop word [rax + rax]
0x00003260      ba07000000     mov edx, 7
0x00003265      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000326a      e9d5feffff     jmp 0x3144
0x0000326f      90             nop
0x00003270      837c240802     cmp dword [rsp + 8], 2
0x00003275      0f94c2         sete dl
0x00003278      4885ed         test rbp, rbp
0x0000327b      0f85abfdffff   jne 0x302c
0x00003281      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003286      20d0           and al, dl
0x00003288      0f84aafdffff   je 0x3038
0x0000328e      4c89dd         mov rbp, r11
0x00003291      c74424080200.  mov dword [rsp + 8], 2
0x00003299      e9fb060000     jmp 0x3999
0x0000329e      6690           nop
0x000032a0      837c240802     cmp dword [rsp + 8], 2
0x000032a5      0f94c2         sete dl
0x000032a8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x000032ab      ebd4           jmp 0x3281
0x000032ad      0f1f00         nop dword [rax]
0x000032b0      837c240802     cmp dword [rsp + 8], 2
0x000032b5      bb20000000     mov ebx, 0x20                           ; "@"
0x000032ba      0f94c2         sete dl
0x000032bd      ebc2           jmp 0x3281
0x000032bf      90             nop
0x000032c0      ba0d000000     mov edx, 0xd
0x000032c5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000032ca      e963feffff     jmp 0x3132
0x000032cf      90             nop
0x000032d0      ba0c000000     mov edx, 0xc
0x000032d5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000032da      e965feffff     jmp 0x3144
0x000032df      90             nop
0x000032e0      ba0b000000     mov edx, 0xb
0x000032e5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000032ea      e955feffff     jmp 0x3144
0x000032ef      90             nop
0x000032f0      ba0a000000     mov edx, 0xa
0x000032f5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000032fa      e933feffff     jmp 0x3132
0x000032ff      90             nop
0x00003300      4531d2         xor r10d, r10d
0x00003303      0f1f440000     nop dword [rax + rax]
0x00003308      48837c245801   cmp qword [rsp + 0x58], 1
0x0000330e      0f85a4030000   jne 0x36b8
0x00003314      4c895c2438     mov qword [rsp + 0x38], r11
0x00003319      4488442430     mov byte [rsp + 0x30], r8b
0x0000331e      4488542428     mov byte [rsp + 0x28], r10b
0x00003323      e838e4ffff     call sym.imp.__ctype_b_loc
0x00003328      488b08         mov rcx, qword [rax]
0x0000332b      0fb6d3         movzx edx, bl
0x0000332e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003334      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000333a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000333f      bf01000000     mov edi, 1
0x00003344      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003348      66250040       and ax, 0x4000
0x0000334c      410f95c4       setne r12b
0x00003350      0f94c0         sete al
0x00003353      2244240d       and al, byte [rsp + 0xd]
0x00003357      84c0           test al, al
0x00003359      0f8592090000   jne 0x3cf1
0x0000335f      837c240802     cmp dword [rsp + 8], 2
0x00003364      0f94c2         sete dl
0x00003367      e9ccfcffff     jmp 0x3038
0x0000336c      0f1f4000       nop dword [rax]
0x00003370      410fb619       movzx ebx, byte [r9]
0x00003374      80fb7e         cmp bl, 0x7e
0x00003377      7787           ja 0x3300
0x00003379      488d0d282d00.  lea rcx, [0x000060a8]
0x00003380      0fb6d3         movzx edx, bl
0x00003383      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003387      4801c8         add rax, rcx
0x0000338a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000338c      0f1f4000       nop dword [rax]
0x00003390      4531d2         xor r10d, r10d
0x00003393      807c240d00     cmp byte [rsp + 0xd], 0
0x00003398      0f85f0fdffff   jne 0x318e
0x0000339e      6690           nop
0x000033a0      ba5c000000     mov edx, 0x5c                           ; '\'
0x000033a5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000033aa      e995fdffff     jmp 0x3144
0x000033af      90             nop
0x000033b0      ba0c000000     mov edx, 0xc
0x000033b5      4531d2         xor r10d, r10d
0x000033b8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000033bd      e982fdffff     jmp 0x3144
0x000033c2      660f1f440000   nop word [rax + rax]
0x000033c8      ba0a000000     mov edx, 0xa
0x000033cd      4531d2         xor r10d, r10d
0x000033d0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x000033d5      e958fdffff     jmp 0x3132
0x000033da      660f1f440000   nop word [rax + rax]
0x000033e0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000033e5      e9c6fdffff     jmp 0x31b0
0x000033ea      660f1f440000   nop word [rax + rax]
0x000033f0      4531d2         xor r10d, r10d
0x000033f3      837c240802     cmp dword [rsp + 8], 2
0x000033f8      0f94c2         sete dl
0x000033fb      807c240f00     cmp byte [rsp + 0xf], 0
0x00003400      0f85940b0000   jne 0x3f9a
0x00003406      4489c0         mov eax, r8d
0x00003409      4c89f9         mov rcx, r15
0x0000340c      83f001         xor eax, 1
0x0000340f      20d0           and al, dl
0x00003411      742d           je 0x3440
0x00003413      4d39fd         cmp r13, r15
0x00003416      7605           jbe 0x341d
0x00003418      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000341d      498d4f01       lea rcx, [r15 + 1]
0x00003421      4939cd         cmp r13, rcx
0x00003424      7606           jbe 0x342c
0x00003426      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000342c      498d4f02       lea rcx, [r15 + 2]
0x00003430      4939cd         cmp r13, rcx
0x00003433      0f8730060000   ja 0x3a69
0x00003439      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000343d      4189c0         mov r8d, eax
0x00003440      4939cd         cmp r13, rcx
0x00003443      7605           jbe 0x344a
0x00003445      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000344a      837c240802     cmp dword [rsp + 8], 2
0x0000344f      4c8d7901       lea r15, [rcx + 1]
0x00003453      0f8400060000   je 0x3a59
0x00003459      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000345d      4c39d8         cmp rax, r11
0x00003460      7319           jae 0x347b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003462      488b442410     mov rax, qword [rsp + 0x10]
0x00003467      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000346c      88442428       mov byte [rsp + 0x28], al
0x00003470      83e830         sub eax, 0x30
0x00003473      3c09           cmp al, 9
0x00003475      0f862e080000   jbe 0x3ca9
0x0000347b      4489e0         mov eax, r12d
0x0000347e      bb30000000     mov ebx, 0x30                           ; '0'
0x00003483      4531e4         xor r12d, r12d
0x00003486      e9adfbffff     jmp 0x3038                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000348b      0f1f440000     nop dword [rax + rax]
0x00003490      837c240802     cmp dword [rsp + 8], 2
0x00003495      4589d4         mov r12d, r10d
0x00003498      0f94c2         sete dl
0x0000349b      4531d2         xor r10d, r10d
0x0000349e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000034a0      e993fbffff     jmp 0x3038                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x000034a5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000034a8      837c240802     cmp dword [rsp + 8], 2
0x000034ad      0f94c2         sete dl
0x000034b0      4531d2         xor r10d, r10d
0x000034b3      e9c0fdffff     jmp 0x3278
0x000034b8      0f1f84000000.  nop dword [rax + rax]
0x000034c0      837c240802     cmp dword [rsp + 8], 2
0x000034c5      0f94c2         sete dl
0x000034c8      4531d2         xor r10d, r10d
0x000034cb      4531e4         xor r12d, r12d
0x000034ce      e9aefdffff     jmp 0x3281
0x000034d3      0f1f440000     nop dword [rax + rax]
0x000034d8      837c240802     cmp dword [rsp + 8], 2
0x000034dd      4589d4         mov r12d, r10d
0x000034e0      bb20000000     mov ebx, 0x20                           ; "@"
0x000034e5      0f94c2         sete dl
0x000034e8      4531d2         xor r10d, r10d
0x000034eb      e991fdffff     jmp 0x3281
0x000034f0      ba0d000000     mov edx, 0xd
0x000034f5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000034f8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000034fd      e930fcffff     jmp 0x3132
0x00003502      660f1f440000   nop word [rax + rax]
0x00003508      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000350d      e99efcffff     jmp 0x31b0
0x00003512      660f1f440000   nop word [rax + rax]
0x00003518      ba09000000     mov edx, 9
0x0000351d      4531d2         xor r10d, r10d
0x00003520      bb74000000     mov ebx, 0x74                           ; 't'
0x00003525      e908fcffff     jmp 0x3132
0x0000352a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003530      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003535      e976fcffff     jmp 0x31b0
0x0000353a      660f1f440000   nop word [rax + rax]
0x00003540      4531d2         xor r10d, r10d
0x00003543      e998faffff     jmp 0x2fe0
0x00003548      0f1f84000000.  nop dword [rax + rax]
0x00003550      807c240f00     cmp byte [rsp + 0xf], 0
0x00003555      0f8565090000   jne 0x3ec0
0x0000355b      4883c501       add rbp, 1
0x0000355f      4489c0         mov eax, r8d
0x00003562      4531e4         xor r12d, r12d
0x00003565      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000356a      e90dfbffff     jmp 0x307c
0x0000356f      90             nop
0x00003570      837c240802     cmp dword [rsp + 8], 2
0x00003575      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000357a      4589c4         mov r12d, r8d
0x0000357d      4c89dd         mov rbp, r11
0x00003580      0f94c2         sete dl
0x00003583      89d8           mov eax, ebx
0x00003585      4d85ff         test r15, r15
0x00003588      0f94c1         sete cl
0x0000358b      21d0           and eax, edx
0x0000358d      20c8           and al, cl
0x0000358f      0f85610a0000   jne 0x3ff6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003595      89d8           mov eax, ebx
0x00003597      83f001         xor eax, 1
0x0000359a      20c2           and dl, al
0x0000359c      0f846a090000   je 0x3f0c
0x000035a2      807c247c00     cmp byte [rsp + 0x7c], 0
0x000035a7      0f845d090000   je 0x3f0a
0x000035ad      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x000035b2      0f85f5090000   jne 0x3fad
0x000035b8      4d85ed         test r13, r13
0x000035bb      0f94c0         sete al
0x000035be      48837c245000   cmp qword [rsp + 0x50], 0
0x000035c4      0f95c2         setne dl
0x000035c7      20d0           and al, dl
0x000035c9      0f841d0a0000   je 0x3fec
0x000035cf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000035d4      488d1d422800.  lea rbx, [0x00005e1d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000035db      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000035df      c74424080200.  mov dword [rsp + 8], 2
0x000035e7      41bf01000000   mov r15d, 1
0x000035ed      48c744241801.  mov qword [rsp + 0x18], 1
0x000035f6      c644240f00     mov byte [rsp + 0xf], 0
0x000035fb      48895c2448     mov qword [rsp + 0x48], rbx
0x00003600      8844247c       mov byte [rsp + 0x7c], al
0x00003604      e9daf8ffff     jmp 0x2ee3
0x00003609      0f1f80000000.  nop dword [rax]
0x00003610      807c240f00     cmp byte [rsp + 0xf], 0
0x00003615      0f85a5080000   jne 0x3ec0
0x0000361b      4d85ed         test r13, r13
0x0000361e      0f84fc030000   je 0x3a20                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003624      31d2           xor edx, edx
0x00003626      48837c245000   cmp qword [rsp + 0x50], 0
0x0000362c      0f85ee030000   jne 0x3a20                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003632      4c896c2450     mov qword [rsp + 0x50], r13
0x00003637      4983c703       add r15, 3
0x0000363b      31c0           xor eax, eax
0x0000363d      448864247c     mov byte [rsp + 0x7c], r12b
0x00003642      4531c0         xor r8d, r8d
0x00003645      4989d5         mov r13, rdx
0x00003648      bb27000000     mov ebx, 0x27                           ; '''
0x0000364d      e917faffff     jmp 0x3069
0x00003652      660f1f440000   nop word [rax + rax]
0x00003658      f644247804     test byte [rsp + 0x78], 4
0x0000365d      7421           je 0x3680
0x0000365f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003663      4c39d9         cmp rcx, r11
0x00003666      7318           jae 0x3680
0x00003668      488b442410     mov rax, qword [rsp + 0x10]
0x0000366d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003672      0f848a070000   je 0x3e02
0x00003678      0f1f84000000.  nop dword [rax + rax]
0x00003680      31d2           xor edx, edx
0x00003682      4531e4         xor r12d, r12d
0x00003685      31c0           xor eax, eax
0x00003687      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000368c      e9a7f9ffff     jmp 0x3038
0x00003691      0f1f80000000.  nop dword [rax]
0x00003698      807c240f00     cmp byte [rsp + 0xf], 0
0x0000369d      0f851d080000   jne 0x3ec0
0x000036a3      4531e4         xor r12d, r12d
0x000036a6      31c0           xor eax, eax
0x000036a8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000036ad      e9b7f9ffff     jmp 0x3069                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000036b2      660f1f440000   nop word [rax + rax]
0x000036b8      488d8424a000.  lea rax, [rsp + 0xa0]
0x000036c0      4983fbff       cmp r11, 0xffffffffffffffff
0x000036c4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x000036d0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x000036d5      752d           jne 0x3704
0x000036d7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000036dc      4488442440     mov byte [rsp + 0x40], r8b
0x000036e1      4488542438     mov byte [rsp + 0x38], r10b
0x000036e6      4c894c2430     mov qword [rsp + 0x30], r9
0x000036eb      e850deffff     call sym.imp.strlen
0x000036f0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000036f6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x000036fc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x000036ff      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003704      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000370c      31c9           xor ecx, ecx
0x0000370e      885c247e       mov byte [rsp + 0x7e], bl
0x00003712      448844247d     mov byte [rsp + 0x7d], r8b
0x00003717      4889cb         mov rbx, rcx
0x0000371a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003722      4889442438     mov qword [rsp + 0x38], rax
0x00003727      448854247f     mov byte [rsp + 0x7f], r10b
0x0000372c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003734      4c89742440     mov qword [rsp + 0x40], r14
0x00003739      4c896c2470     mov qword [rsp + 0x70], r13
0x0000373e      4c895c2430     mov qword [rsp + 0x30], r11
0x00003743      488b442410     mov rax, qword [rsp + 0x10]
0x00003748      4c8d741d00     lea r14, [rbp + rbx]
0x0000374d      488b542430     mov rdx, qword [rsp + 0x30]
0x00003752      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003757      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000375c      4e8d2c30       lea r13, [rax + r14]
0x00003760      4c29f2         sub rdx, r14
0x00003763      4c89ee         mov rsi, r13
0x00003766      e8351c0000     call sym.rpl_mbrtowc
0x0000376b      4885c0         test rax, rax
0x0000376e      4989c7         mov r15, rax
0x00003771      744e           je 0x37c1
0x00003773      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003777      0f8418060000   je 0x3d95
0x0000377d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003781      0f849a050000   je 0x3d21
0x00003787      837c240802     cmp dword [rsp + 8], 2
0x0000378c      0f94c0         sete al
0x0000378f      2244240f       and al, byte [rsp + 0xf]
0x00003793      0f8597010000   jne 0x3930
0x00003799      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x000037a0      e8abdfffff     call sym.imp.iswprint
0x000037a5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000037aa      85c0           test eax, eax
0x000037ac      b800000000     mov eax, 0
0x000037b1      440f44e0       cmove r12d, eax
0x000037b5      4c01fb         add rbx, r15
0x000037b8      e883dfffff     call sym.imp.mbsinit
0x000037bd      85c0           test eax, eax
0x000037bf      7482           je 0x3743
0x000037c1      4489e2         mov edx, r12d
0x000037c4      4889df         mov rdi, rbx
0x000037c7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000037cd      83f201         xor edx, 1
0x000037d0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000037d5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000037db      2254240d       and dl, byte [rsp + 0xd]
0x000037df      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000037e7      4c8b742440     mov r14, qword [rsp + 0x40]
0x000037ec      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000037f1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000037f6      4883ff01       cmp rdi, 1
0x000037fa      0f86fb050000   jbe 0x3dfb
0x00003800      4889f9         mov rcx, rdi
0x00003803      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003805      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000380b      4801e9         add rcx, rbp
0x0000380e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003813      e9b6000000     jmp 0x38ce
0x00003818      0f1f84000000.  nop dword [rax + rax]
0x00003820      837c240802     cmp dword [rsp + 8], 2
0x00003825      0f94c0         sete al
0x00003828      4584c9         test r9b, r9b
0x0000382b      0f85af040000   jne 0x3ce0
0x00003831      4489c6         mov esi, r8d
0x00003834      83f601         xor esi, 1
0x00003837      4020f0         and al, sil
0x0000383a      742f           je 0x386b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000383c      4d39fd         cmp r13, r15
0x0000383f      7605           jbe 0x3846
0x00003841      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003846      498d7701       lea rsi, [r15 + 1]
0x0000384a      4939f5         cmp r13, rsi
0x0000384d      7606           jbe 0x3855                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000384f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003855      498d7702       lea rsi, [r15 + 2]
0x00003859      4939f5         cmp r13, rsi
0x0000385c      7606           jbe 0x3864
0x0000385e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003864      4983c703       add r15, 3
0x00003868      4189c0         mov r8d, eax
0x0000386b      4d39fd         cmp r13, r15
0x0000386e      7605           jbe 0x3875
0x00003870      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003875      498d4701       lea rax, [r15 + 1]
0x00003879      4939c5         cmp r13, rax
0x0000387c      760d           jbe 0x388b
0x0000387e      89d8           mov eax, ebx
0x00003880      c0e806         shr al, 6
0x00003883      83c030         add eax, 0x30
0x00003886      4388443e01     mov byte [r14 + r15 + 1], al
0x0000388b      498d4702       lea rax, [r15 + 2]
0x0000388f      4939c5         cmp r13, rax
0x00003892      7610           jbe 0x38a4
0x00003894      89d8           mov eax, ebx
0x00003896      c0e803         shr al, 3
0x00003899      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000389c      83c030         add eax, 0x30
0x0000389f      4388443e02     mov byte [r14 + r15 + 2], al
0x000038a4      83e307         and ebx, 7
0x000038a7      4883c501       add rbp, 1
0x000038ab      4983c703       add r15, 3
0x000038af      83c330         add ebx, 0x30
0x000038b2      4839cd         cmp rbp, rcx
0x000038b5      0f83e5f7ffff   jae 0x30a0
0x000038bb      89d6           mov esi, edx
0x000038bd      4d39fd         cmp r13, r15
0x000038c0      7604           jbe 0x38c6
0x000038c2      43881c3e       mov byte [r14 + r15], bl
0x000038c6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000038ca      4983c701       add r15, 1
0x000038ce      84d2           test dl, dl
0x000038d0      0f854affffff   jne 0x3820
0x000038d6      89f0           mov eax, esi
0x000038d8      83f001         xor eax, 1
0x000038db      4421c0         and eax, r8d
0x000038de      4584d2         test r10b, r10b
0x000038e1      740e           je 0x38f1
0x000038e3      4d39fd         cmp r13, r15
0x000038e6      7605           jbe 0x38ed
0x000038e8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000038ed      4983c701       add r15, 1
0x000038f1      4883c501       add rbp, 1
0x000038f5      4839cd         cmp rbp, rcx
0x000038f8      0f837ef7ffff   jae 0x307c
0x000038fe      84c0           test al, al
0x00003900      0f84f8030000   je 0x3cfe
0x00003906      4d39fd         cmp r13, r15
0x00003909      7605           jbe 0x3910
0x0000390b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003910      498d4701       lea rax, [r15 + 1]
0x00003914      4939c5         cmp r13, rax
0x00003917      7606           jbe 0x391f
0x00003919      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000391f      4983c702       add r15, 2
0x00003923      4531d2         xor r10d, r10d
0x00003926      4531c0         xor r8d, r8d
0x00003929      eb92           jmp 0x38bd
0x0000392b      0f1f440000     nop dword [rax + rax]
0x00003930      4983ff01       cmp r15, 1
0x00003934      0f845ffeffff   je 0x3799
0x0000393a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000393f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003943      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003948      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000394c      eb0f           jmp 0x395d
0x0000394e      6690           nop
0x00003950      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003954      4939d0         cmp r8, rdx
0x00003957      0f843cfeffff   je 0x3799
0x0000395d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00003960      83e95b         sub ecx, 0x5b
0x00003963      80f921         cmp cl, 0x21
0x00003966      77e8           ja 0x3950                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00003968      be01000000     mov esi, 1
0x0000396d      48d3e6         shl rsi, cl
0x00003970      4889f1         mov rcx, rsi
0x00003973      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000397d      4885f1         test rcx, rsi
0x00003980      74ce           je 0x3950
0x00003982      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003987      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000398c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00003991      c74424080200.  mov dword [rsp + 8], 2
0x00003999      807c240d00     cmp byte [rsp + 0xd], 0
0x0000399e      7410           je 0x39b0
0x000039a0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x000039a2      b804000000     mov eax, 4
0x000039a7      0f44442408     cmove eax, dword [rsp + 8]
0x000039ac      89442408       mov dword [rsp + 8], eax
0x000039b0      4883ec08       sub rsp, 8
0x000039b4      4889e9         mov rcx, rbp
0x000039b7      4c89ee         mov rsi, r13
0x000039ba      ff742468       push qword [rsp + 0x68]
0x000039be      ff742478       push qword [rsp + 0x78]
0x000039c2      4c89f7         mov rdi, r14
0x000039c5      6a00           push 0
0x000039c7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000039cf      448b442428     mov r8d, dword [rsp + 0x28]
0x000039d4      488b542430     mov rdx, qword [rsp + 0x30]
0x000039d9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x000039dd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x000039e2      4883c420       add rsp, 0x20
0x000039e6      4989c7         mov r15, rax
0x000039e9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x000039f1      6448331c2528.  xor rbx, qword fs:[0x28]
0x000039fa      4c89f8         mov rax, r15
0x000039fd      0f8500060000   jne 0x4003
0x00003a03      4881c4b80000.  add rsp, 0xb8
0x00003a0a      5b             pop rbx
0x00003a0b      5d             pop rbp
0x00003a0c      415c           pop r12
0x00003a0e      415d           pop r13
0x00003a10      415e           pop r14
0x00003a12      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003a14      c3             ret
0x00003a15      0f1f00         nop dword [rax]
0x00003a18      4c89dd         mov rbp, r11
0x00003a1b      e979ffffff     jmp 0x3999
0x00003a20      4d39fd         cmp r13, r15
0x00003a23      7605           jbe 0x3a2a
0x00003a25      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003a2a      498d4701       lea rax, [r15 + 1]
0x00003a2e      4939c5         cmp r13, rax
0x00003a31      7606           jbe 0x3a39
0x00003a33      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003a39      498d4702       lea rax, [r15 + 2]
0x00003a3d      4939c5         cmp r13, rax
0x00003a40      0f86ec050000   jbe 0x4032
0x00003a46      4c89ea         mov rdx, r13
0x00003a49      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003a4f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003a54      e9d9fbffff     jmp 0x3632
0x00003a59      4489e0         mov eax, r12d
0x00003a5c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00003a61      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00003a64      e900f6ffff     jmp 0x3069                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00003a69      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003a6f      e9c5f9ffff     jmp 0x3439
0x00003a74      85db           test ebx, ebx
0x00003a76      0f8527f4ffff   jne 0x2ea3
0x00003a7c      c644240d01     mov byte [rsp + 0xd], 1
0x00003a81      4d85ed         test r13, r13
0x00003a84      0f8590050000   jne 0x401a
0x00003a8a      488d058c2300.  lea rax, [0x00005e1d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003a91      48c744245000.  mov qword [rsp + 0x50], 0
0x00003a9a      c644240e01     mov byte [rsp + 0xe], 1
0x00003a9f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003aa4      4531e4         xor r12d, r12d
0x00003aa7      c644240f00     mov byte [rsp + 0xf], 0
0x00003aac      48c744241801.  mov qword [rsp + 0x18], 1
0x00003ab5      4889442448     mov qword [rsp + 0x48], rax
0x00003aba      41bf01000000   mov r15d, 1
0x00003ac0      c74424080200.  mov dword [rsp + 8], 2
0x00003ac8      e916f4ffff     jmp 0x2ee3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00003acd      0f1f00         nop dword [rax]
0x00003ad0      85db           test ebx, ebx
0x00003ad2      0f85f5030000   jne 0x3ecd
0x00003ad8      4d85ed         test r13, r13
0x00003adb      0f8425020000   je 0x3d06
0x00003ae1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003ae5      c644240e01     mov byte [rsp + 0xe], 1
0x00003aea      4531e4         xor r12d, r12d
0x00003aed      c644247c00     mov byte [rsp + 0x7c], 0
0x00003af2      48c744245000.  mov qword [rsp + 0x50], 0
0x00003afb      488d05192300.  lea rax, str.l______l                   ; 0x5e1b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003b02      c644240f00     mov byte [rsp + 0xf], 0
0x00003b07      c644240d01     mov byte [rsp + 0xd], 1
0x00003b0c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003b15      41bf01000000   mov r15d, 1
0x00003b1b      4889442448     mov qword [rsp + 0x48], rax
0x00003b20      e9bef3ffff     jmp 0x2ee3
0x00003b25      488d05ef2200.  lea rax, str.l______l                   ; 0x5e1b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003b2c      c644240e01     mov byte [rsp + 0xe], 1
0x00003b31      c644247c00     mov byte [rsp + 0x7c], 0
0x00003b36      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003b39      48c744245000.  mov qword [rsp + 0x50], 0
0x00003b42      c644240f01     mov byte [rsp + 0xf], 1
0x00003b47      c644240d01     mov byte [rsp + 0xd], 1
0x00003b4c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003b55      4531ff         xor r15d, r15d
0x00003b58      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00003b5d      c74424080500.  mov dword [rsp + 8], 5
0x00003b65      e979f3ffff     jmp 0x2ee3
0x00003b6a      c644240e01     mov byte [rsp + 0xe], 1
0x00003b6f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003b74      4531e4         xor r12d, r12d
0x00003b77      48c744245000.  mov qword [rsp + 0x50], 0
0x00003b80      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00003b85      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00003b88      c644240d01     mov byte [rsp + 0xd], 1
0x00003b8d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003b96      48c744244800.  mov qword [rsp + 0x48], 0
0x00003b9f      e93ff3ffff     jmp 0x2ee3
0x00003ba4      837c24080a     cmp dword [rsp + 8], 0xa
0x00003ba9      7456           je 0x3c01
0x00003bab      488d356d2200.  lea rsi, [0x00005e1f]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00003bb2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00003bb4      ba05000000     mov edx, 5
0x00003bb9      e862d9ffff     call sym.imp.dcgettext
0x00003bbe      4889c1         mov rcx, rax
0x00003bc1      4889442468     mov qword [rsp + 0x68], rax
0x00003bc6      488d05522200.  lea rax, [0x00005e1f]                   ; "`"
0x00003bcd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00003bd0      0f8498030000   je 0x3f6e
0x00003bd6      488d35402200.  lea rsi, [0x00005e1d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003bdd      31ff           xor edi, edi
0x00003bdf      ba05000000     mov edx, 5
0x00003be4      e837d9ffff     call sym.imp.dcgettext
0x00003be9      4889c1         mov rcx, rax
0x00003bec      4889442460     mov qword [rsp + 0x60], rax
0x00003bf1      488d05252200.  lea rax, [0x00005e1d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003bf8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00003bfb      0f8483030000   je 0x3f84
0x00003c01      4531ff         xor r15d, r15d
0x00003c04      85db           test ebx, ebx
0x00003c06      0f84c1010000   je 0x3dcd
0x00003c0c      85db           test ebx, ebx
0x00003c0e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00003c13      0f9544240f     setne byte [rsp + 0xf]
0x00003c18      4531e4         xor r12d, r12d
0x00003c1b      4889df         mov rdi, rbx
0x00003c1e      e81dd9ffff     call sym.imp.strlen
0x00003c23      48895c2448     mov qword [rsp + 0x48], rbx
0x00003c28      4889442418     mov qword [rsp + 0x18], rax
0x00003c2d      c644240e01     mov byte [rsp + 0xe], 1
0x00003c32      c644247c00     mov byte [rsp + 0x7c], 0
0x00003c37      48c744245000.  mov qword [rsp + 0x50], 0
0x00003c40      c644240d01     mov byte [rsp + 0xd], 1
0x00003c45      e999f2ffff     jmp 0x2ee3
0x00003c4a      c644240e01     mov byte [rsp + 0xe], 1
0x00003c4f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003c54      4531e4         xor r12d, r12d
0x00003c57      48c744245000.  mov qword [rsp + 0x50], 0
0x00003c60      c644240f00     mov byte [rsp + 0xf], 0
0x00003c65      4531ff         xor r15d, r15d
0x00003c68      c644240d00     mov byte [rsp + 0xd], 0
0x00003c6d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003c76      48c744244800.  mov qword [rsp + 0x48], 0
0x00003c7f      e95ff2ffff     jmp 0x2ee3
0x00003c84      c644240e01     mov byte [rsp + 0xe], 1
0x00003c89      c644247c00     mov byte [rsp + 0x7c], 0
0x00003c8e      4531e4         xor r12d, r12d
0x00003c91      48c744245000.  mov qword [rsp + 0x50], 0
0x00003c9a      c644240f01     mov byte [rsp + 0xf], 1
0x00003c9f      c644240d01     mov byte [rsp + 0xd], 1
0x00003ca4      e91af2ffff     jmp 0x2ec3
0x00003ca9      4d39fd         cmp r13, r15
0x00003cac      7605           jbe 0x3cb3
0x00003cae      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00003cb3      488d4102       lea rax, [rcx + 2]
0x00003cb7      4939c5         cmp r13, rax
0x00003cba      7606           jbe 0x3cc2
0x00003cbc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00003cc2      4489e0         mov eax, r12d
0x00003cc5      4c8d7903       lea r15, [rcx + 3]
0x00003cc9      4531e4         xor r12d, r12d
0x00003ccc      bb30000000     mov ebx, 0x30                           ; '0'
0x00003cd1      e962f3ffff     jmp 0x3038
0x00003cd6      662e0f1f8400.  nop word cs:[rax + rax]
0x00003ce0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003ce5      4c89dd         mov rbp, r11
0x00003ce8      885c240d       mov byte [rsp + 0xd], bl
0x00003cec      e9a8fcffff     jmp 0x3999
0x00003cf1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003cf6      4531e4         xor r12d, r12d
0x00003cf9      e902fbffff     jmp 0x3800
0x00003cfe      4531d2         xor r10d, r10d
0x00003d01      e9b7fbffff     jmp 0x38bd
0x00003d06      48c744245000.  mov qword [rsp + 0x50], 0
0x00003d0f      c644240e01     mov byte [rsp + 0xe], 1
0x00003d14      4531e4         xor r12d, r12d
0x00003d17      c644247c00     mov byte [rsp + 0x7c], 0
0x00003d1c      e9dafdffff     jmp 0x3afb
0x00003d21      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003d26      4c89f6         mov rsi, r14
0x00003d29      4c89e9         mov rcx, r13
0x00003d2c      4889d8         mov rax, rbx
0x00003d2f      4889df         mov rdi, rbx
0x00003d32      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003d38      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003d3d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003d45      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003d48      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003d4e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003d56      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003d5b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003d60      7326           jae 0x3d88
0x00003d62      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003d65      7510           jne 0x3d77
0x00003d67      eb1f           jmp 0x3d88
0x00003d69      0f1f80000000.  nop dword [rax]
0x00003d70      41803c0100     cmp byte [r9 + rax], 0
0x00003d75      740e           je 0x3d85
0x00003d77      4883c001       add rax, 1
0x00003d7b      488d540500     lea rdx, [rbp + rax]
0x00003d80      4939d3         cmp r11, rdx
0x00003d83      77eb           ja 0x3d70
0x00003d85      4889c7         mov rdi, rax
0x00003d88      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003d8d      4531e4         xor r12d, r12d
0x00003d90      e961faffff     jmp 0x37f6
0x00003d95      4889df         mov rdi, rbx
0x00003d98      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003d9e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003da3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003da9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003db1      4531e4         xor r12d, r12d
0x00003db4      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003db9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003dbe      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003dc3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003dc8      e929faffff     jmp 0x37f6
0x00003dcd      488b542468     mov rdx, qword [rsp + 0x68]
0x00003dd2      0fb602         movzx eax, byte [rdx]
0x00003dd5      84c0           test al, al
0x00003dd7      0f842ffeffff   je 0x3c0c
0x00003ddd      0f1f00         nop dword [rax]
0x00003de0      4d39fd         cmp r13, r15
0x00003de3      7604           jbe 0x3de9
0x00003de5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00003de9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00003ded      420fb6043a     movzx eax, byte [rdx + r15]
0x00003df2      84c0           test al, al
0x00003df4      75ea           jne 0x3de0
0x00003df6      e911feffff     jmp 0x3c0c
0x00003dfb      89d0           mov eax, edx
0x00003dfd      e955f5ffff     jmp 0x3357
0x00003e02      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003e06      80fb3e         cmp bl, 0x3e
0x00003e09      0f8771f8ffff   ja 0x3680
0x00003e0f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003e19      480fa3d8       bt rax, rbx
0x00003e1d      0f835df8ffff   jae 0x3680
0x00003e23      807c240f00     cmp byte [rsp + 0xf], 0
0x00003e28      0f85e4010000   jne 0x4012                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00003e2e      4d39fd         cmp r13, r15
0x00003e31      7605           jbe 0x3e38
0x00003e33      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003e38      498d4701       lea rax, [r15 + 1]
0x00003e3c      4939c5         cmp r13, rax
0x00003e3f      7606           jbe 0x3e47
0x00003e41      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003e47      498d4702       lea rax, [r15 + 2]
0x00003e4b      4939c5         cmp r13, rax
0x00003e4e      7606           jbe 0x3e56
0x00003e50      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003e56      498d4703       lea rax, [r15 + 3]
0x00003e5a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00003e5d      7606           jbe 0x3e65
0x00003e5f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00003e65      4983c704       add r15, 4
0x00003e69      31d2           xor edx, edx
0x00003e6b      4531e4         xor r12d, r12d
0x00003e6e      31c0           xor eax, eax
0x00003e70      4889cd         mov rbp, rcx
0x00003e73      e9c0f1ffff     jmp 0x3038
0x00003e78      85db           test ebx, ebx
0x00003e7a      0f8488010000   je 0x4008
0x00003e80      488d05961f00.  lea rax, [0x00005e1d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003e87      c644240e01     mov byte [rsp + 0xe], 1
0x00003e8c      c644247c00     mov byte [rsp + 0x7c], 0
0x00003e91      4531e4         xor r12d, r12d
0x00003e94      48c744245000.  mov qword [rsp + 0x50], 0
0x00003e9d      c644240f01     mov byte [rsp + 0xf], 1
0x00003ea2      c644240d00     mov byte [rsp + 0xd], 0
0x00003ea7      48c744241801.  mov qword [rsp + 0x18], 1
0x00003eb0      4531ff         xor r15d, r15d
0x00003eb3      4889442448     mov qword [rsp + 0x48], rax
0x00003eb8      e926f0ffff     jmp 0x2ee3
0x00003ebd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00003ec0      4c89dd         mov rbp, r11
0x00003ec3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003ec8      e9ccfaffff     jmp 0x3999
0x00003ecd      488d05471f00.  lea rax, str.l______l                   ; 0x5e1b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003ed4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00003ed9      c644247c00     mov byte [rsp + 0x7c], 0
0x00003ede      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00003ee1      48c744245000.  mov qword [rsp + 0x50], 0
0x00003eea      c644240f01     mov byte [rsp + 0xf], 1
0x00003eef      c644240d01     mov byte [rsp + 0xd], 1
0x00003ef4      48c744241801.  mov qword [rsp + 0x18], 1
0x00003efd      4531ff         xor r15d, r15d
0x00003f00      4889442448     mov qword [rsp + 0x48], rax
0x00003f05      e9d9efffff     jmp 0x2ee3
0x00003f0a      89d0           mov eax, edx
0x00003f0c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003f11      4885db         test rbx, rbx
0x00003f14      742c           je 0x3f42
0x00003f16      84c0           test al, al
0x00003f18      7428           je 0x3f42
0x00003f1a      0fb60b         movzx ecx, byte [rbx]
0x00003f1d      4889d8         mov rax, rbx
0x00003f20      84c9           test cl, cl
0x00003f22      741e           je 0x3f42
0x00003f24      4c89fa         mov rdx, r15
0x00003f27      4c29f8         sub rax, r15
0x00003f2a      4939d5         cmp r13, rdx
0x00003f2d      7604           jbe 0x3f33
0x00003f2f      41880c16       mov byte [r14 + rdx], cl
0x00003f33      4883c201       add rdx, 1
0x00003f37      0fb60c10       movzx ecx, byte [rax + rdx]
0x00003f3b      84c9           test cl, cl
0x00003f3d      75eb           jne 0x3f2a
0x00003f3f      4989d7         mov r15, rdx
0x00003f42      4d39fd         cmp r13, r15
0x00003f45      0f869efaffff   jbe 0x39e9
0x00003f4b      43c6043e00     mov byte [r14 + r15], 0
0x00003f50      e994faffff     jmp 0x39e9
0x00003f55      837c240802     cmp dword [rsp + 8], 2
0x00003f5a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003f5f      4c89dd         mov rbp, r11
0x00003f62      0f94c0         sete al
0x00003f65      885c240d       mov byte [rsp + 0xd], bl
0x00003f69      e92bfaffff     jmp 0x3999
0x00003f6e      8b742408       mov esi, dword [rsp + 8]
0x00003f72      4889cf         mov rdi, rcx
0x00003f75      e8a6edffff     call sym.gettext_quote.part.1
0x00003f7a      4889442468     mov qword [rsp + 0x68], rax
0x00003f7f      e952fcffff     jmp 0x3bd6
0x00003f84      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00003f88      4889cf         mov rdi, rcx
0x00003f8b      e890edffff     call sym.gettext_quote.part.1
0x00003f90      4889442460     mov qword [rsp + 0x60], rax
0x00003f95      e967fcffff     jmp 0x3c01
0x00003f9a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003f9f      4c89dd         mov rbp, r11
0x00003fa2      89d0           mov eax, edx
0x00003fa4      885c240d       mov byte [rsp + 0xd], bl
0x00003fa8      e9ecf9ffff     jmp 0x3999
0x00003fad      4883ec08       sub rsp, 8
0x00003fb1      41b805000000   mov r8d, 5
0x00003fb7      4c89d9         mov rcx, r11
0x00003fba      ff742468       push qword [rsp + 0x68]
0x00003fbe      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00003fc2      4c89f7         mov rdi, r14
0x00003fc5      ff742438       push qword [rsp + 0x38]
0x00003fc9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003fd1      488b542430     mov rdx, qword [rsp + 0x30]
0x00003fd6      488b742470     mov rsi, qword [rsp + 0x70]
0x00003fdb      e830eeffff     call sym.quotearg_buffer_restyled
0x00003fe0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00003fe4      4989c7         mov r15, rax
0x00003fe7      e9fdf9ffff     jmp 0x39e9
0x00003fec      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00003ff1      e916ffffff     jmp 0x3f0c
0x00003ff6      c74424080200.  mov dword [rsp + 8], 2
0x00003ffe      e996f9ffff     jmp 0x3999
0x00004003      e848d5ffff     call sym.imp.__stack_chk_fail
0x00004008      c644240d00     mov byte [rsp + 0xd], 0
0x0000400d      e96ffaffff     jmp 0x3a81
0x00004012      4c89dd         mov rbp, r11
0x00004015      e996f9ffff     jmp 0x39b0
0x0000401a      c644240e01     mov byte [rsp + 0xe], 1
0x0000401f      31c0           xor eax, eax
0x00004021      4531e4         xor r12d, r12d
0x00004024      48c744245000.  mov qword [rsp + 0x50], 0
0x0000402d      e9a2f5ffff     jmp 0x35d4
0x00004032      4c89ea         mov rdx, r13
0x00004035      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000403a      e9f3f5ffff     jmp 0x3632
0x0000403f      e84cd4ffff     call sym.imp.abort
0x00004044      6690           nop
0x00004046      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00004050      4157           push r15
0x00004052      4156           push r14
0x00004054      4c63ff         movsxd r15, edi
0x00004057      4155           push r13
0x00004059      4154           push r12
0x0000405b      4989d6         mov r14, rdx
0x0000405e      55             push rbp
0x0000405f      53             push rbx
0x00004060      4889cd         mov rbp, rcx
0x00004063      4883ec28       sub rsp, 0x28
0x00004067      4889742408     mov qword [rsp + 8], rsi
0x0000406c      e82fd4ffff     call sym.imp.__errno_location
0x00004071      4989c5         mov r13, rax
0x00004074      8b00           mov eax, dword [rax]
0x00004076      4585ff         test r15d, r15d
0x00004079      488b1d004020.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x208080:8]=0x208090 obj.slotvec0
0x00004080      89442418       mov dword [rsp + 0x18], eax
0x00004084      0f8867010000   js 0x41f1
0x0000408a      44393de73f20.  cmp dword [obj.nslots], r15d            ; [0x208078:4]=1
0x00004091      7f62           jg 0x40f5
0x00004093      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000409a      0f8456010000   je 0x41f6
0x000040a0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000040a4      488d05e53f20.  lea rax, obj.slotvec0                   ; 0x208090
0x000040ab      4963f4         movsxd rsi, r12d
0x000040ae      48c1e604       shl rsi, 4
0x000040b2      4839c3         cmp rbx, rax
0x000040b5      0f8415010000   je 0x41d0
0x000040bb      4889df         mov rdi, rbx
0x000040be      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x000040c3      4889c3         mov rbx, rax
0x000040c6      488905b33f20.  mov qword [obj.slotvec], rax            ; [0x208080:8]=0x208090 obj.slotvec0
0x000040cd      48633da43f20.  movsxd rdi, dword [obj.nslots]          ; [0x208078:4]=1
0x000040d4      4489e2         mov edx, r12d
0x000040d7      31f6           xor esi, esi
0x000040d9      29fa           sub edx, edi
0x000040db      48c1e704       shl rdi, 4
0x000040df      4863d2         movsxd rdx, edx
0x000040e2      4801df         add rdi, rbx
0x000040e5      48c1e204       shl rdx, 4
0x000040e9      e8d2d4ffff     call sym.imp.memset
0x000040ee      448925833f20.  mov dword [obj.nslots], r12d            ; [0x208078:4]=1
0x000040f5      8b4504         mov eax, dword [rbp + 4]
0x000040f8      49c1e704       shl r15, 4
0x000040fc      4883ec08       sub rsp, 8
0x00004100      4c01fb         add rbx, r15
0x00004103      4c8d7d08       lea r15, [rbp + 8]
0x00004107      448b4500       mov r8d, dword [rbp]
0x0000410b      4c8b1b         mov r11, qword [rbx]
0x0000410e      4c8b6308       mov r12, qword [rbx + 8]
0x00004112      4c89f1         mov rcx, r14
0x00004115      83c801         or eax, 1
0x00004118      89442424       mov dword [rsp + 0x24], eax
0x0000411c      ff7530         push qword [rbp + 0x30]
0x0000411f      4189c1         mov r9d, eax
0x00004122      ff7528         push qword [rbp + 0x28]
0x00004125      4157           push r15
0x00004127      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000412a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000412f      4c89e7         mov rdi, r12
0x00004132      4c895c2430     mov qword [rsp + 0x30], r11
0x00004137      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000413c      4883c420       add rsp, 0x20
0x00004140      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00004145      4939c3         cmp r11, rax
0x00004148      7767           ja 0x41b1
0x0000414a      488d7001       lea rsi, [rax + 1]
0x0000414e      488d050b4020.  lea rax, obj.slot0                      ; 0x208160
0x00004155      4939c4         cmp r12, rax
0x00004158      488933         mov qword [rbx], rsi
0x0000415b      7412           je 0x416f
0x0000415d      4c89e7         mov rdi, r12
0x00004160      4889742410     mov qword [rsp + 0x10], rsi
0x00004165      e816d3ffff     call sym.imp.free
0x0000416a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000416f      4889f7         mov rdi, rsi
0x00004172      4889742410     mov qword [rsp + 0x10], rsi
0x00004177      e8540e0000     call sym.xmalloc
0x0000417c      4883ec08       sub rsp, 8
0x00004180      48894308       mov qword [rbx + 8], rax
0x00004184      448b4500       mov r8d, dword [rbp]
0x00004188      ff7530         push qword [rbp + 0x30]
0x0000418b      ff7528         push qword [rbp + 0x28]
0x0000418e      4c89f1         mov rcx, r14
0x00004191      4157           push r15
0x00004193      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004198      4889c7         mov rdi, rax
0x0000419b      488b542428     mov rdx, qword [rsp + 0x28]
0x000041a0      488b742430     mov rsi, qword [rsp + 0x30]
0x000041a5      4989c4         mov r12, rax
0x000041a8      e863ecffff     call sym.quotearg_buffer_restyled
0x000041ad      4883c420       add rsp, 0x20
0x000041b1      8b442418       mov eax, dword [rsp + 0x18]
0x000041b5      41894500       mov dword [r13], eax
0x000041b9      4883c428       add rsp, 0x28
0x000041bd      4c89e0         mov rax, r12
0x000041c0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x000041c1      5d             pop rbp
0x000041c2      415c           pop r12
0x000041c4      415d           pop r13
0x000041c6      415e           pop r14
0x000041c8      415f           pop r15
0x000041ca      c3             ret
0x000041cb      0f1f440000     nop dword [rax + rax]
0x000041d0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x000041d2      e8590e0000     call sym.xrealloc
0x000041d7      660f6f05b13e.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x000041df      4889c3         mov rbx, rax
0x000041e2      488905973e20.  mov qword [obj.slotvec], rax            ; [0x208080:8]=0x208090 obj.slotvec0
0x000041e9      0f1100         movups xmmword [rax], xmm0
0x000041ec      e9dcfeffff     jmp 0x40cd
0x000041f1      e89ad2ffff     call sym.imp.abort
0x000041f6      e825100000     call sym.xalloc_die
0x000041fb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004200      4154           push r12
0x00004202      55             push rbp
0x00004203      53             push rbx
0x00004204      4889fb         mov rbx, rdi
0x00004207      e894d2ffff     call sym.imp.__errno_location
0x0000420c      448b20         mov r12d, dword [rax]
0x0000420f      4889c5         mov rbp, rax
0x00004212      488d05474020.  lea rax, obj.default_quoting_options    ; 0x208260
0x00004219      4885db         test rbx, rbx
0x0000421c      be38000000     mov esi, 0x38                           ; '8'
0x00004221      480f44d8       cmove rbx, rax
0x00004225      4889df         mov rdi, rbx
0x00004228      e8a30f0000     call sym.xmemdup
0x0000422d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004231      5b             pop rbx
0x00004232      5d             pop rbp
0x00004233      415c           pop r12
0x00004235      c3             ret
0x00004236      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004240      488d05194020.  lea rax, obj.default_quoting_options    ; 0x208260
0x00004247      4885ff         test rdi, rdi
0x0000424a      480f44f8       cmove rdi, rax
0x0000424e      8b07           mov eax, dword [rdi]
0x00004250      c3             ret
0x00004251      0f1f440000     nop dword [rax + rax]
0x00004256      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004260      488d05f93f20.  lea rax, obj.default_quoting_options    ; 0x208260
0x00004267      4885ff         test rdi, rdi
0x0000426a      480f44f8       cmove rdi, rax
0x0000426e      8937           mov dword [rdi], esi
0x00004270      c3             ret
0x00004271      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004276      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004280      488d05d93f20.  lea rax, obj.default_quoting_options    ; 0x208260
0x00004287      4885ff         test rdi, rdi
0x0000428a      89f1           mov ecx, esi
0x0000428c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004290      89f0           mov eax, esi
0x00004292      83e11f         and ecx, 0x1f
0x00004295      c0e805         shr al, 5
0x00004298      0fb6c0         movzx eax, al
0x0000429b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x000042a0      8b37           mov esi, dword [rdi]
0x000042a2      89f0           mov eax, esi
0x000042a4      d3e8           shr eax, cl
0x000042a6      31c2           xor edx, eax
0x000042a8      83e001         and eax, 1
0x000042ab      83e201         and edx, 1
0x000042ae      d3e2           shl edx, cl
0x000042b0      31f2           xor edx, esi
0x000042b2      8917           mov dword [rdi], edx
0x000042b4      c3             ret
0x000042b5      90             nop
0x000042b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000042c0      488d05993f20.  lea rax, obj.default_quoting_options    ; 0x208260
0x000042c7      4885ff         test rdi, rdi
0x000042ca      480f44f8       cmove rdi, rax
0x000042ce      8b4704         mov eax, dword [rdi + 4]
0x000042d1      897704         mov dword [rdi + 4], esi
0x000042d4      c3             ret
0x000042d5      90             nop
0x000042d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000042e0      488d05793f20.  lea rax, obj.default_quoting_options    ; 0x208260
0x000042e7      4885ff         test rdi, rdi
0x000042ea      480f44f8       cmove rdi, rax
0x000042ee      4885f6         test rsi, rsi
0x000042f1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000042f7      740e           je 0x4307
0x000042f9      4885d2         test rdx, rdx
0x000042fc      7409           je 0x4307
0x000042fe      48897728       mov qword [rdi + 0x28], rsi
0x00004302      48895730       mov qword [rdi + 0x30], rdx
0x00004306      c3             ret
0x00004307      4883ec08       sub rsp, 8
0x0000430b      e880d1ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004310      4157           push r15
0x00004312      4156           push r14
0x00004314      488d05453f20.  lea rax, obj.default_quoting_options    ; 0x208260
0x0000431b      4155           push r13
0x0000431d      4154           push r12
0x0000431f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004322      55             push rbp
0x00004323      53             push rbx
0x00004324      4c89c3         mov rbx, r8
0x00004327      4989f6         mov r14, rsi
0x0000432a      4989d7         mov r15, rdx
0x0000432d      4883ec18       sub rsp, 0x18
0x00004331      4d85c0         test r8, r8
0x00004334      480f44d8       cmove rbx, rax
0x00004338      48894c2408     mov qword [rsp + 8], rcx
0x0000433d      e85ed1ffff     call sym.imp.__errno_location
0x00004342      448b20         mov r12d, dword [rax]
0x00004345      4889c5         mov rbp, rax
0x00004348      488d4308       lea rax, [rbx + 8]
0x0000434c      4883ec08       sub rsp, 8
0x00004350      448b4b04       mov r9d, dword [rbx + 4]
0x00004354      ff7330         push qword [rbx + 0x30]
0x00004357      448b03         mov r8d, dword [rbx]
0x0000435a      ff7328         push qword [rbx + 0x28]
0x0000435d      4c89fa         mov rdx, r15
0x00004360      50             push rax
0x00004361      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004366      4c89f6         mov rsi, r14
0x00004369      4c89ef         mov rdi, r13
0x0000436c      e89feaffff     call sym.quotearg_buffer_restyled
0x00004371      44896500       mov dword [rbp], r12d
0x00004375      4883c438       add rsp, 0x38
0x00004379      5b             pop rbx
0x0000437a      5d             pop rbp
0x0000437b      415c           pop r12
0x0000437d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000437f      415e           pop r14
0x00004381      415f           pop r15
0x00004383      c3             ret
0x00004384      6690           nop
0x00004386      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004390      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004392      4156           push r14
0x00004394      488d05c53e20.  lea rax, obj.default_quoting_options    ; 0x208260
0x0000439b      4155           push r13
0x0000439d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000439f      4989d4         mov r12, rdx
0x000043a2      55             push rbp
0x000043a3      53             push rbx
0x000043a4      4889cb         mov rbx, rcx
0x000043a7      4989fe         mov r14, rdi
0x000043aa      4989f7         mov r15, rsi
0x000043ad      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000043b1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000043b4      480f44d8       cmove rbx, rax
0x000043b8      31ed           xor ebp, ebp
0x000043ba      e8e1d0ffff     call sym.imp.__errno_location
0x000043bf      4d85e4         test r12, r12
0x000043c2      4989c5         mov r13, rax
0x000043c5      8b00           mov eax, dword [rax]
0x000043c7      400f94c5       sete bpl
0x000043cb      0b6b04         or ebp, dword [rbx + 4]
0x000043ce      4c8d5308       lea r10, [rbx + 8]
0x000043d2      4883ec08       sub rsp, 8
0x000043d6      448b03         mov r8d, dword [rbx]
0x000043d9      4c89f9         mov rcx, r15
0x000043dc      89442414       mov dword [rsp + 0x14], eax
0x000043e0      ff7330         push qword [rbx + 0x30]
0x000043e3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000043e6      ff7328         push qword [rbx + 0x28]
0x000043e9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000043eb      31f6           xor esi, esi
0x000043ed      4189e9         mov r9d, ebp
0x000043f0      31ff           xor edi, edi
0x000043f2      4c89542440     mov qword [rsp + 0x40], r10
0x000043f7      e814eaffff     call sym.quotearg_buffer_restyled
0x000043fc      488d7001       lea rsi, [rax + 1]
0x00004400      4889442448     mov qword [rsp + 0x48], rax
0x00004405      4883c420       add rsp, 0x20
0x00004409      4889f7         mov rdi, rsi
0x0000440c      4889742418     mov qword [rsp + 0x18], rsi
0x00004411      e8ba0b0000     call sym.xmalloc
0x00004416      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000441b      4883ec08       sub rsp, 8
0x0000441f      ff7330         push qword [rbx + 0x30]
0x00004422      ff7328         push qword [rbx + 0x28]
0x00004425      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000442a      4189e9         mov r9d, ebp
0x0000442d      448b03         mov r8d, dword [rbx]
0x00004430      4c89f9         mov rcx, r15
0x00004433      4c89f2         mov rdx, r14
0x00004436      4889c7         mov rdi, rax
0x00004439      4152           push r10
0x0000443b      488b742438     mov rsi, qword [rsp + 0x38]
0x00004440      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004445      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004449      4883c420       add rsp, 0x20
0x0000444d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004450      41894500       mov dword [r13], eax
0x00004454      7409           je 0x445f
0x00004456      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000445b      4d891c24       mov qword [r12], r11
0x0000445f      488b442410     mov rax, qword [rsp + 0x10]
0x00004464      4883c438       add rsp, 0x38
0x00004468      5b             pop rbx
0x00004469      5d             pop rbp
0x0000446a      415c           pop r12
0x0000446c      415d           pop r13
0x0000446e      415e           pop r14
0x00004470      415f           pop r15
0x00004472      c3             ret
0x00004473      0f1f00         nop dword [rax]
0x00004476      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004480      4889d1         mov rcx, rdx
0x00004483      31d2           xor edx, edx
0x00004485      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000448a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004490      8b05e23b2000   mov eax, dword [obj.nslots]             ; [0x208078:4]=1
0x00004496      4154           push r12
0x00004498      4c8b25e13b20.  mov r12, qword [obj.slotvec]            ; [0x208080:8]=0x208090 obj.slotvec0
0x0000449f      55             push rbp
0x000044a0      53             push rbx
0x000044a1      83f801         cmp eax, 1
0x000044a4      7e2b           jle 0x44d1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x000044a6      83e802         sub eax, 2
0x000044a9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000044ae      48c1e004       shl rax, 4
0x000044b2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000044b7      660f1f840000.  nop word [rax + rax]
0x000044c0      488b3b         mov rdi, qword [rbx]
0x000044c3      4883c310       add rbx, 0x10
0x000044c7      e8b4cfffff     call sym.imp.free
0x000044cc      4839eb         cmp rbx, rbp
0x000044cf      75ef           jne 0x44c0
0x000044d1      498b7c2408     mov rdi, qword [r12 + 8]
0x000044d6      488d1d833c20.  lea rbx, obj.slot0                      ; 0x208160
0x000044dd      4839df         cmp rdi, rbx
0x000044e0      7417           je 0x44f9
0x000044e2      e899cfffff     call sym.imp.free
0x000044e7      48c7059e3b20.  mov qword [obj.slotvec0], 0x100         ; [0x208090:8]=256
0x000044f2      48891d9f3b20.  mov qword [0x00208098], rbx             ; [0x208098:8]=0x208160 obj.slot0
0x000044f9      488d1d903b20.  lea rbx, obj.slotvec0                   ; 0x208090
0x00004500      4939dc         cmp r12, rbx
0x00004503      740f           je 0x4514
0x00004505      4c89e7         mov rdi, r12
0x00004508      e873cfffff     call sym.imp.free
0x0000450d      48891d6c3b20.  mov qword [obj.slotvec], rbx            ; [0x208080:8]=0x208090 obj.slotvec0
0x00004514      5b             pop rbx
0x00004515      c705593b2000.  mov dword [obj.nslots], 1               ; [0x208078:4]=1
0x0000451f      5d             pop rbp
0x00004520      415c           pop r12
0x00004522      c3             ret
0x00004523      0f1f00         nop dword [rax]
0x00004526      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004530      488d0d293d20.  lea rcx, obj.default_quoting_options    ; 0x208260
0x00004537      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000453e      e90dfbffff     jmp sym.quotearg_n_options
0x00004543      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004546      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004550      488d0d093d20.  lea rcx, obj.default_quoting_options    ; 0x208260
0x00004557      e9f4faffff     jmp sym.quotearg_n_options
0x0000455c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004560      488d0df93c20.  lea rcx, obj.default_quoting_options    ; 0x208260
0x00004567      4889fe         mov rsi, rdi
0x0000456a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004571      31ff           xor edi, edi
0x00004573      e9d8faffff     jmp sym.quotearg_n_options
0x00004578      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004580      488d0dd93c20.  lea rcx, obj.default_quoting_options    ; 0x208260
0x00004587      4889f2         mov rdx, rsi
0x0000458a      4889fe         mov rsi, rdi
0x0000458d      31ff           xor edi, edi
0x0000458f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004594      6690           nop
0x00004596      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x000045a0      4883ec48       sub rsp, 0x48
0x000045a4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x000045a7      64488b142528.  mov rdx, qword fs:[0x28]
0x000045b0      4889542438     mov qword [rsp + 0x38], rdx
0x000045b5      31d2           xor edx, edx
0x000045b7      83fe0a         cmp esi, 0xa
0x000045ba      7468           je 0x4624
0x000045bc      893424         mov dword [rsp], esi
0x000045bf      4889e1         mov rcx, rsp
0x000045c2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000045c9      4889c6         mov rsi, rax
0x000045cc      48c744240400.  mov qword [rsp + 4], 0
0x000045d5      48c744240c00.  mov qword [rsp + 0xc], 0
0x000045de      48c744241400.  mov qword [rsp + 0x14], 0
0x000045e7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000045f0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x000045f9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004602      c74424340000.  mov dword [rsp + 0x34], 0
0x0000460a      e841faffff     call sym.quotearg_n_options
0x0000460f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004614      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000461d      750a           jne 0x4629                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000461f      4883c448       add rsp, 0x48
0x00004623      c3             ret
0x00004624      e867ceffff     call sym.imp.abort
0x00004629      e822cfffff     call sym.imp.__stack_chk_fail
0x0000462e      6690           nop
;-- quotearg_n_style_mem:
0x00004630      4883ec48       sub rsp, 0x48
0x00004634      4889d0         mov rax, rdx
0x00004637      4889ca         mov rdx, rcx
0x0000463a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004643      48894c2438     mov qword [rsp + 0x38], rcx
0x00004648      31c9           xor ecx, ecx
0x0000464a      83fe0a         cmp esi, 0xa
0x0000464d      7461           je 0x46b0
0x0000464f      893424         mov dword [rsp], esi
0x00004652      4889e1         mov rcx, rsp
0x00004655      4889c6         mov rsi, rax
0x00004658      48c744240400.  mov qword [rsp + 4], 0
0x00004661      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000466a      48c744241400.  mov qword [rsp + 0x14], 0
0x00004673      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000467c      48c744242400.  mov qword [rsp + 0x24], 0
0x00004685      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000468e      c74424340000.  mov dword [rsp + 0x34], 0
0x00004696      e8b5f9ffff     call sym.quotearg_n_options
0x0000469b      488b542438     mov rdx, qword [rsp + 0x38]
0x000046a0      644833142528.  xor rdx, qword fs:[0x28]
0x000046a9      750a           jne 0x46b5
0x000046ab      4883c448       add rsp, 0x48
0x000046af      c3             ret
0x000046b0      e8dbcdffff     call sym.imp.abort
0x000046b5      e896ceffff     call sym.imp.__stack_chk_fail
0x000046ba      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000046c0      4889f2         mov rdx, rsi
0x000046c3      89fe           mov esi, edi
0x000046c5      31ff           xor edi, edi
0x000046c7      e9d4feffff     jmp sym.quotearg_n_style
0x000046cc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x000046d0      4889d1         mov rcx, rdx
0x000046d3      4889f2         mov rdx, rsi
0x000046d6      89fe           mov esi, edi
0x000046d8      31ff           xor edi, edi
0x000046da      e951ffffff     jmp sym.quotearg_n_style_mem
0x000046df      90             nop
;-- quotearg_char_mem:
0x000046e0      4883ec48       sub rsp, 0x48
0x000046e4      89d1           mov ecx, edx
0x000046e6      64488b042528.  mov rax, qword fs:[0x28]
0x000046ef      4889442438     mov qword [rsp + 0x38], rax
0x000046f4      31c0           xor eax, eax
0x000046f6      488b05933b20.  mov rax, qword [0x00208290]             ; [0x208290:8]=0
0x000046fd      4989e0         mov r8, rsp
0x00004700      83e11f         and ecx, 0x1f
0x00004703      660f6f05553b.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000470b      4889442430     mov qword [rsp + 0x30], rax
0x00004710      89d0           mov eax, edx
0x00004712      0f290424       movaps xmmword [rsp], xmm0
0x00004716      c0e805         shr al, 5
0x00004719      0fb6c0         movzx eax, al
0x0000471c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004721      660f6f05473b.  movdqa xmm0, xmmword [0x00208270]
0x00004729      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000472e      660f6f054a3b.  movdqa xmm0, xmmword [0x00208280]
0x00004736      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000473b      418b11         mov edx, dword [r9]
0x0000473e      89d0           mov eax, edx
0x00004740      d3e8           shr eax, cl
0x00004742      f7d0           not eax
0x00004744      83e001         and eax, 1
0x00004747      d3e0           shl eax, cl
0x00004749      4c89c1         mov rcx, r8
0x0000474c      31d0           xor eax, edx
0x0000474e      4889f2         mov rdx, rsi
0x00004751      4889fe         mov rsi, rdi
0x00004754      418901         mov dword [r9], eax
0x00004757      31ff           xor edi, edi
0x00004759      e8f2f8ffff     call sym.quotearg_n_options
0x0000475e      488b742438     mov rsi, qword [rsp + 0x38]
0x00004763      644833342528.  xor rsi, qword fs:[0x28]
0x0000476c      7505           jne 0x4773
0x0000476e      4883c448       add rsp, 0x48
0x00004772      c3             ret
0x00004773      e8d8cdffff     call sym.imp.__stack_chk_fail
0x00004778      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004780      400fbed6       movsx edx, sil
0x00004784      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000478b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00004790      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004795      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000479c      e93fffffff     jmp sym.quotearg_char_mem
0x000047a1      0f1f440000     nop dword [rax + rax]
0x000047a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000047b0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000047b5      e926ffffff     jmp sym.quotearg_char_mem
0x000047ba      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x000047c0      4883ec48       sub rsp, 0x48
0x000047c4      4889d0         mov rax, rdx
0x000047c7      64488b142528.  mov rdx, qword fs:[0x28]
0x000047d0      4889542438     mov qword [rsp + 0x38], rdx
0x000047d5      31d2           xor edx, edx
0x000047d7      83fe0a         cmp esi, 0xa
0x000047da      7468           je 0x4844
0x000047dc      893424         mov dword [rsp], esi
0x000047df      4889e1         mov rcx, rsp
0x000047e2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000047e9      4889c6         mov rsi, rax
0x000047ec      48c744240400.  mov qword [rsp + 4], 0
0x000047f5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x000047fe      48c744241400.  mov qword [rsp + 0x14], 0
0x00004807      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004810      48c744242400.  mov qword [rsp + 0x24], 0
0x00004819      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004822      c74424340000.  mov dword [rsp + 0x34], 0
0x0000482a      e821f8ffff     call sym.quotearg_n_options
0x0000482f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004834      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000483d      750a           jne 0x4849
0x0000483f      4883c448       add rsp, 0x48
0x00004843      c3             ret
0x00004844      e847ccffff     call sym.imp.abort
0x00004849      e802cdffff     call sym.imp.__stack_chk_fail
0x0000484e      6690           nop
;-- quotearg_n_custom_mem:
0x00004850      4883ec48       sub rsp, 0x48
0x00004854      4989c9         mov r9, rcx
0x00004857      488b0d323a20.  mov rcx, qword [0x00208290]             ; [0x208290:8]=0
0x0000485e      660f6f05fa39.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004866      64488b042528.  mov rax, qword fs:[0x28]
0x0000486f      4889442438     mov qword [rsp + 0x38], rax
0x00004874      31c0           xor eax, eax
0x00004876      0f290424       movaps xmmword [rsp], xmm0
0x0000487a      4885f6         test rsi, rsi
0x0000487d      48894c2430     mov qword [rsp + 0x30], rcx
0x00004882      c704240a0000.  mov dword [rsp], 0xa
0x00004889      660f6f05df39.  movdqa xmm0, xmmword [0x00208270]
0x00004891      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004896      660f6f05e239.  movdqa xmm0, xmmword [0x00208280]
0x0000489e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000048a3      7432           je 0x48d7
0x000048a5      4885d2         test rdx, rdx
0x000048a8      742d           je 0x48d7
0x000048aa      4889742428     mov qword [rsp + 0x28], rsi
0x000048af      4889542430     mov qword [rsp + 0x30], rdx
0x000048b4      4889e1         mov rcx, rsp
0x000048b7      4c89c2         mov rdx, r8
0x000048ba      4c89ce         mov rsi, r9
0x000048bd      e88ef7ffff     call sym.quotearg_n_options
0x000048c2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000048c7      6448333c2528.  xor rdi, qword fs:[0x28]
0x000048d0      750a           jne 0x48dc
0x000048d2      4883c448       add rsp, 0x48
0x000048d6      c3             ret
0x000048d7      e8b4cbffff     call sym.imp.abort
0x000048dc      e86fccffff     call sym.imp.__stack_chk_fail
0x000048e1      0f1f440000     nop dword [rax + rax]
0x000048e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x000048f0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000048f7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x000048fc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004900      4889d1         mov rcx, rdx
0x00004903      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000490a      4889f2         mov rdx, rsi
0x0000490d      4889fe         mov rsi, rdi
0x00004910      31ff           xor edi, edi
0x00004912      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004917      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004920      4989c8         mov r8, rcx
0x00004923      4889d1         mov rcx, rdx
0x00004926      4889f2         mov rdx, rsi
0x00004929      4889fe         mov rsi, rdi
0x0000492c      31ff           xor edi, edi
0x0000492e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004933      0f1f00         nop dword [rax]
0x00004936      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004940      488d0df93620.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x00004947      e904f7ffff     jmp sym.quotearg_n_options
0x0000494c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004950      488d0de93620.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x00004957      4889f2         mov rdx, rsi
0x0000495a      4889fe         mov rsi, rdi
0x0000495d      31ff           xor edi, edi
0x0000495f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00004964      6690           nop
0x00004966      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00004970      488d0dc93620.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x00004977      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000497e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004983      0f1f00         nop dword [rax]
0x00004986      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00004990      488d0da93620.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x00004997      4889fe         mov rsi, rdi
0x0000499a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000049a1      31ff           xor edi, edi
0x000049a3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000049a8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x000049b0      4157           push r15
0x000049b2      4156           push r14
0x000049b4      4155           push r13
0x000049b6      4154           push r12
0x000049b8      4d89cc         mov r12, r9
0x000049bb      55             push rbp
0x000049bc      53             push rbx
0x000049bd      4889fd         mov rbp, rdi
0x000049c0      4c89c3         mov rbx, r8
0x000049c3      4883ec28       sub rsp, 0x28
0x000049c7      4885f6         test rsi, rsi
0x000049ca      0f8418010000   je 0x4ae8
0x000049d0      4989d0         mov r8, rdx
0x000049d3      488d150e1900.  lea rdx, [0x000062e8]                   ; "%s (%s) %s\n"
0x000049da      4989c9         mov r9, rcx
0x000049dd      31c0           xor eax, eax
0x000049df      4889f1         mov rcx, rsi
0x000049e2      be01000000     mov esi, 1
0x000049e7      e844cdffff     call sym.imp.__fprintf_chk
0x000049ec      488d35081900.  lea rsi, [0x000062fb]                   ; "(C)"
0x000049f3      31ff           xor edi, edi
0x000049f5      ba05000000     mov edx, 5
0x000049fa      e821cbffff     call sym.imp.dcgettext
0x000049ff      488d151a1c00.  lea rdx, obj.version_etc_copyright      ; 0x6620 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004a06      4889c1         mov rcx, rax
0x00004a09      41b8e3070000   mov r8d, 0x7e3
0x00004a0f      be01000000     mov esi, 1
0x00004a14      4889ef         mov rdi, rbp
0x00004a17      31c0           xor eax, eax
0x00004a19      e812cdffff     call sym.imp.__fprintf_chk
0x00004a1e      488d35631900.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x6388 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004a25      31ff           xor edi, edi
0x00004a27      ba05000000     mov edx, 5
0x00004a2c      e8efcaffff     call sym.imp.dcgettext
0x00004a31      4889ee         mov rsi, rbp
0x00004a34      4889c7         mov rdi, rax
0x00004a37      e8d4cbffff     call sym.imp.fputs_unlocked
0x00004a3c      4983fc09       cmp r12, 9
0x00004a40      0f873a030000   ja 0x4d80
0x00004a46      488d159b1b00.  lea rdx, [0x000065e8]
0x00004a4d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004a51      4801d0         add rax, rdx
0x00004a54      ffe0           jmp rax
0x00004a56      662e0f1f8400.  nop word cs:[rax + rax]
0x00004a60      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004a64      488b4310       mov rax, qword [rbx + 0x10]
0x00004a68      488d35891a00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x64f8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00004a6f      4c8b4308       mov r8, qword [rbx + 8]
0x00004a73      ba05000000     mov edx, 5
0x00004a78      31ff           xor edi, edi
0x00004a7a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004a7e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004a82      4c894c2410     mov qword [rsp + 0x10], r9
0x00004a87      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004a8b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004a8f      48890424       mov qword [rsp], rax
0x00004a93      4c89442408     mov qword [rsp + 8], r8
0x00004a98      488b1b         mov rbx, qword [rbx]
0x00004a9b      e880caffff     call sym.imp.dcgettext
0x00004aa0      4883ec08       sub rsp, 8
0x00004aa4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00004aa9      4889c2         mov rdx, rax
0x00004aac      4889d9         mov rcx, rbx
0x00004aaf      be01000000     mov esi, 1
0x00004ab4      4889ef         mov rdi, rbp
0x00004ab7      31c0           xor eax, eax
0x00004ab9      4151           push r9
0x00004abb      4155           push r13
0x00004abd      4154           push r12
0x00004abf      4157           push r15
0x00004ac1      4156           push r14
0x00004ac3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004ac8      4c8b442438     mov r8, qword [rsp + 0x38]
0x00004acd      e85eccffff     call sym.imp.__fprintf_chk
0x00004ad2      4883c430       add rsp, 0x30
0x00004ad6      4883c428       add rsp, 0x28
0x00004ada      5b             pop rbx
0x00004adb      5d             pop rbp
0x00004adc      415c           pop r12
0x00004ade      415d           pop r13
0x00004ae0      415e           pop r14
0x00004ae2      415f           pop r15
0x00004ae4      c3             ret
0x00004ae5      0f1f00         nop dword [rax]
0x00004ae8      4989c8         mov r8, rcx
0x00004aeb      4889d1         mov rcx, rdx
0x00004aee      488d15ff1700.  lea rdx, str.s__s                       ; 0x62f4 ; "%s %s\n"
0x00004af5      be01000000     mov esi, 1
0x00004afa      31c0           xor eax, eax
0x00004afc      e82fccffff     call sym.imp.__fprintf_chk
0x00004b01      e9e6feffff     jmp 0x49ec
0x00004b06      662e0f1f8400.  nop word cs:[rax + rax]
0x00004b10      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004b14      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004b18      488d35091a00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x6528 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00004b1f      488b4310       mov rax, qword [rbx + 0x10]
0x00004b23      4c8b4308       mov r8, qword [rbx + 8]
0x00004b27      ba05000000     mov edx, 5
0x00004b2c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004b30      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004b34      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004b38      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004b3c      488b1b         mov rbx, qword [rbx]
0x00004b3f      4c89542418     mov qword [rsp + 0x18], r10
0x00004b44      4c894c2410     mov qword [rsp + 0x10], r9
0x00004b49      48890424       mov qword [rsp], rax
0x00004b4d      4c89442408     mov qword [rsp + 8], r8
0x00004b52      31ff           xor edi, edi
0x00004b54      e8c7c9ffff     call sym.imp.dcgettext
0x00004b59      4c8b542418     mov r10, qword [rsp + 0x18]
0x00004b5e      4152           push r10
0x00004b60      e93fffffff     jmp 0x4aa4
0x00004b65      0f1f00         nop dword [rax]
0x00004b68      488b1b         mov rbx, qword [rbx]
0x00004b6b      488d358d1700.  lea rsi, str.Written_by__s.             ; 0x62ff ; "Written by %s.\n"
0x00004b72      ba05000000     mov edx, 5
0x00004b77      31ff           xor edi, edi
0x00004b79      e8a2c9ffff     call sym.imp.dcgettext
0x00004b7e      4883c428       add rsp, 0x28
0x00004b82      4889d9         mov rcx, rbx
0x00004b85      4889ef         mov rdi, rbp
0x00004b88      5b             pop rbx
0x00004b89      5d             pop rbp
0x00004b8a      415c           pop r12
0x00004b8c      415d           pop r13
0x00004b8e      415e           pop r14
0x00004b90      415f           pop r15
0x00004b92      4889c2         mov rdx, rax
0x00004b95      be01000000     mov esi, 1
0x00004b9a      31c0           xor eax, eax
0x00004b9c      e98fcbffff     jmp sym.imp.__fprintf_chk
0x00004ba1      0f1f80000000.  nop dword [rax]
0x00004ba8      4c8b6308       mov r12, qword [rbx + 8]
0x00004bac      488d355c1700.  lea rsi, str.Written_by__s_and__s.      ; 0x630f ; "Written by %s and %s.\n"
0x00004bb3      488b1b         mov rbx, qword [rbx]
0x00004bb6      ba05000000     mov edx, 5
0x00004bbb      31ff           xor edi, edi
0x00004bbd      e85ec9ffff     call sym.imp.dcgettext
0x00004bc2      4883c428       add rsp, 0x28
0x00004bc6      4d89e0         mov r8, r12
0x00004bc9      4889d9         mov rcx, rbx
0x00004bcc      4889ef         mov rdi, rbp
0x00004bcf      4889c2         mov rdx, rax
0x00004bd2      be01000000     mov esi, 1
0x00004bd7      5b             pop rbx
0x00004bd8      5d             pop rbp
0x00004bd9      415c           pop r12
0x00004bdb      415d           pop r13
0x00004bdd      415e           pop r14
0x00004bdf      415f           pop r15
0x00004be1      31c0           xor eax, eax
0x00004be3      e948cbffff     jmp sym.imp.__fprintf_chk
0x00004be8      0f1f84000000.  nop dword [rax + rax]
0x00004bf0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004bf4      4c8b6308       mov r12, qword [rbx + 8]
0x00004bf8      488d35271700.  lea rsi, str.Written_by__s___s__and__s. ; 0x6326 ; "Written by %s, %s, and %s.\n"
0x00004bff      488b1b         mov rbx, qword [rbx]
0x00004c02      ba05000000     mov edx, 5
0x00004c07      31ff           xor edi, edi
0x00004c09      e812c9ffff     call sym.imp.dcgettext
0x00004c0e      4883c428       add rsp, 0x28
0x00004c12      4d89e9         mov r9, r13
0x00004c15      4d89e0         mov r8, r12
0x00004c18      4889d9         mov rcx, rbx
0x00004c1b      4889ef         mov rdi, rbp
0x00004c1e      4889c2         mov rdx, rax
0x00004c21      5b             pop rbx
0x00004c22      5d             pop rbp
0x00004c23      415c           pop r12
0x00004c25      415d           pop r13
0x00004c27      415e           pop r14
0x00004c29      415f           pop r15
0x00004c2b      be01000000     mov esi, 1
0x00004c30      31c0           xor eax, eax
0x00004c32      e9f9caffff     jmp sym.imp.__fprintf_chk
0x00004c37      660f1f840000.  nop word [rax + rax]
0x00004c40      488d35111800.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x6458 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004c47      ba05000000     mov edx, 5
0x00004c4c      31ff           xor edi, edi
0x00004c4e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004c52      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004c56      4c8b6308       mov r12, qword [rbx + 8]
0x00004c5a      488b1b         mov rbx, qword [rbx]
0x00004c5d      e8bec8ffff     call sym.imp.dcgettext
0x00004c62      4883ec08       sub rsp, 8
0x00004c66      4156           push r14
0x00004c68      4889c2         mov rdx, rax
0x00004c6b      4d89e9         mov r9, r13
0x00004c6e      4d89e0         mov r8, r12
0x00004c71      4889d9         mov rcx, rbx
0x00004c74      4889ef         mov rdi, rbp
0x00004c77      be01000000     mov esi, 1
0x00004c7c      31c0           xor eax, eax
0x00004c7e      e8adcaffff     call sym.imp.__fprintf_chk
0x00004c83      58             pop rax
0x00004c84      5a             pop rdx
0x00004c85      4883c428       add rsp, 0x28
0x00004c89      5b             pop rbx
0x00004c8a      5d             pop rbp
0x00004c8b      415c           pop r12
0x00004c8d      415d           pop r13
0x00004c8f      415e           pop r14
0x00004c91      415f           pop r15
0x00004c93      c3             ret
0x00004c94      0f1f4000       nop dword [rax]
0x00004c98      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004c9c      488d35d51700.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x6478 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00004ca3      ba05000000     mov edx, 5
0x00004ca8      31ff           xor edi, edi
0x00004caa      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004cae      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004cb2      4c8b6308       mov r12, qword [rbx + 8]
0x00004cb6      488b1b         mov rbx, qword [rbx]
0x00004cb9      e862c8ffff     call sym.imp.dcgettext
0x00004cbe      4157           push r15
0x00004cc0      eba4           jmp 0x4c66
0x00004cc2      660f1f440000   nop word [rax + rax]
0x00004cc8      4c8b4308       mov r8, qword [rbx + 8]
0x00004ccc      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004cd0      488d35c91700.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x64a0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00004cd7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004cdb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004cdf      ba05000000     mov edx, 5
0x00004ce4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004ce8      31ff           xor edi, edi
0x00004cea      488b1b         mov rbx, qword [rbx]
0x00004ced      4c890424       mov qword [rsp], r8
0x00004cf1      e82ac8ffff     call sym.imp.dcgettext
0x00004cf6      4883ec08       sub rsp, 8
0x00004cfa      4d89e9         mov r9, r13
0x00004cfd      4154           push r12
0x00004cff      4157           push r15
0x00004d01      4156           push r14
0x00004d03      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004d08      4889d9         mov rcx, rbx
0x00004d0b      4889c2         mov rdx, rax
0x00004d0e      4889ef         mov rdi, rbp
0x00004d11      be01000000     mov esi, 1
0x00004d16      31c0           xor eax, eax
0x00004d18      e813caffff     call sym.imp.__fprintf_chk
0x00004d1d      4883c420       add rsp, 0x20
0x00004d21      4883c428       add rsp, 0x28
0x00004d25      5b             pop rbx
0x00004d26      5d             pop rbp
0x00004d27      415c           pop r12
0x00004d29      415d           pop r13
0x00004d2b      415e           pop r14
0x00004d2d      415f           pop r15
0x00004d2f      c3             ret
0x00004d30      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00004d34      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004d38      488d35891700.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x64c8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00004d3f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004d43      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004d47      ba05000000     mov edx, 5
0x00004d4c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004d50      4c8b4308       mov r8, qword [rbx + 8]
0x00004d54      31ff           xor edi, edi
0x00004d56      4c894c2408     mov qword [rsp + 8], r9
0x00004d5b      488b1b         mov rbx, qword [rbx]
0x00004d5e      4c890424       mov qword [rsp], r8
0x00004d62      e8b9c7ffff     call sym.imp.dcgettext
0x00004d67      4155           push r13
0x00004d69      4154           push r12
0x00004d6b      4157           push r15
0x00004d6d      4156           push r14
0x00004d6f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004d74      eb8d           jmp 0x4d03
0x00004d76      662e0f1f8400.  nop word cs:[rax + rax]
0x00004d80      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004d84      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004d88      ba05000000     mov edx, 5
0x00004d8d      488b4310       mov rax, qword [rbx + 0x10]
0x00004d91      4c8b4308       mov r8, qword [rbx + 8]
0x00004d95      488d35c41700.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x6560 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00004d9c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004da0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004da4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004da8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004dac      4c89542418     mov qword [rsp + 0x18], r10
0x00004db1      4c894c2410     mov qword [rsp + 0x10], r9
0x00004db6      48890424       mov qword [rsp], rax
0x00004dba      4c89442408     mov qword [rsp + 8], r8
0x00004dbf      488b1b         mov rbx, qword [rbx]
0x00004dc2      e98bfdffff     jmp 0x4b52
0x00004dc7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00004dd0      4531c9         xor r9d, r9d
0x00004dd3      49833800       cmp qword [r8], 0
0x00004dd7      7412           je 0x4deb
0x00004dd9      0f1f80000000.  nop dword [rax]
0x00004de0      4983c101       add r9, 1
0x00004de4      4b833cc800     cmp qword [r8 + r9*8], 0
0x00004de9      75f5           jne 0x4de0
0x00004deb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00004df0      4883ec68       sub rsp, 0x68
0x00004df4      4d89c2         mov r10, r8
0x00004df7      4531c9         xor r9d, r9d
0x00004dfa      64488b042528.  mov rax, qword fs:[0x28]
0x00004e03      4889442458     mov qword [rsp + 0x58], rax
0x00004e08      31c0           xor eax, eax
0x00004e0a      4989e0         mov r8, rsp
0x00004e0d      0f1f00         nop dword [rax]
0x00004e10      418b02         mov eax, dword [r10]
0x00004e13      83f82f         cmp eax, 0x2f
0x00004e16      7742           ja 0x4e5a
0x00004e18      4189c3         mov r11d, eax
0x00004e1b      4d035a10       add r11, qword [r10 + 0x10]
0x00004e1f      83c008         add eax, 8
0x00004e22      418902         mov dword [r10], eax
0x00004e25      498b03         mov rax, qword [r11]
0x00004e28      4885c0         test rax, rax
0x00004e2b      4b8904c8       mov qword [r8 + r9*8], rax
0x00004e2f      740a           je 0x4e3b
0x00004e31      4983c101       add r9, 1
0x00004e35      4983f90a       cmp r9, 0xa
0x00004e39      75d5           jne 0x4e10
0x00004e3b      e870fbffff     call sym.version_etc_arn
0x00004e40      488b442458     mov rax, qword [rsp + 0x58]
0x00004e45      644833042528.  xor rax, qword fs:[0x28]
0x00004e4e      7505           jne 0x4e55
0x00004e50      4883c468       add rsp, 0x68
0x00004e54      c3             ret
0x00004e55      e8f6c6ffff     call sym.imp.__stack_chk_fail
0x00004e5a      4d8b5a08       mov r11, qword [r10 + 8]
0x00004e5e      498d4308       lea rax, [r11 + 8]
0x00004e62      49894208       mov qword [r10 + 8], rax
0x00004e66      ebbd           jmp 0x4e25
0x00004e68      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00004e70      55             push rbp
0x00004e71      53             push rbx
0x00004e72      41ba20000000   mov r10d, 0x20                          ; "@"
0x00004e78      4531db         xor r11d, r11d
0x00004e7b      4881ecb80000.  sub rsp, 0xb8
0x00004e82      64488b042528.  mov rax, qword fs:[0x28]
0x00004e8b      4889442478     mov qword [rsp + 0x78], rax
0x00004e90      31c0           xor eax, eax
0x00004e92      488d8424d000.  lea rax, [rsp + 0xd0]
0x00004e9a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00004ea2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00004eaa      4c8d442420     lea r8, [rsp + 0x20]
0x00004eaf      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00004eb7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00004ebf      4889442410     mov qword [rsp + 0x10], rax
0x00004ec4      488d84248000.  lea rax, [rsp + 0x80]
0x00004ecc      4531c9         xor r9d, r9d
0x00004ecf      4889442418     mov qword [rsp + 0x18], rax
0x00004ed4      4889c5         mov rbp, rax
0x00004ed7      660f1f840000.  nop word [rax + rax]
0x00004ee0      4183fa2f       cmp r10d, 0x2f
0x00004ee4      7756           ja 0x4f3c
0x00004ee6      4489d0         mov eax, r10d
0x00004ee9      41bb01000000   mov r11d, 1
0x00004eef      4183c208       add r10d, 8
0x00004ef3      4801e8         add rax, rbp
0x00004ef6      488b00         mov rax, qword [rax]
0x00004ef9      4885c0         test rax, rax
0x00004efc      4b8904c8       mov qword [r8 + r9*8], rax
0x00004f00      740a           je 0x4f0c
0x00004f02      4983c101       add r9, 1
0x00004f06      4983f90a       cmp r9, 0xa
0x00004f0a      75d4           jne 0x4ee0
0x00004f0c      4584db         test r11b, r11b
0x00004f0f      7524           jne 0x4f35
0x00004f11      e89afaffff     call sym.version_etc_arn
0x00004f16      488b442478     mov rax, qword [rsp + 0x78]
0x00004f1b      644833042528.  xor rax, qword fs:[0x28]
0x00004f24      750a           jne 0x4f30
0x00004f26      4881c4b80000.  add rsp, 0xb8
0x00004f2d      5b             pop rbx
0x00004f2e      5d             pop rbp
0x00004f2f      c3             ret
0x00004f30      e81bc6ffff     call sym.imp.__stack_chk_fail
0x00004f35      4489542408     mov dword [rsp + 8], r10d
0x00004f3a      ebd5           jmp 0x4f11
0x00004f3c      4889d8         mov rax, rbx
0x00004f3f      4883c308       add rbx, 8
0x00004f43      ebb1           jmp 0x4ef6
0x00004f45      90             nop
0x00004f46      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00004f50      53             push rbx
0x00004f51      488d35ea1300.  lea rsi, str.Report_bugs_to:__s         ; 0x6342 ; "\nReport bugs to: %s\n"
0x00004f58      ba05000000     mov edx, 5
0x00004f5d      31ff           xor edi, edi
0x00004f5f      e8bcc5ffff     call sym.imp.dcgettext
0x00004f64      488d15ec1300.  lea rdx, str.bug_coreutils_gnu.org      ; 0x6357 ; "bug-coreutils@gnu.org"
0x00004f6b      4889c6         mov rsi, rax
0x00004f6e      bf01000000     mov edi, 1
0x00004f73      31c0           xor eax, eax
0x00004f75      e846c7ffff     call sym.imp.__printf_chk
0x00004f7a      488d35ec1300.  lea rsi, str.s_home_page:___s           ; 0x636d ; "%s home page: <%s>\n"
0x00004f81      ba05000000     mov edx, 5
0x00004f86      31ff           xor edi, edi
0x00004f88      e893c5ffff     call sym.imp.dcgettext
0x00004f8d      488d0d1c0a00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x59b0 ; "https://www.gnu.org/software/coreutils/"
0x00004f94      488d15e80600.  lea rdx, str.GNU_coreutils              ; 0x5683 ; "GNU coreutils"
0x00004f9b      4889c6         mov rsi, rax
0x00004f9e      bf01000000     mov edi, 1
0x00004fa3      31c0           xor eax, eax
0x00004fa5      e816c7ffff     call sym.imp.__printf_chk
0x00004faa      488b1df73020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00004fb1      488d35e81500.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x65a0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00004fb8      31ff           xor edi, edi
0x00004fba      ba05000000     mov edx, 5
0x00004fbf      e85cc5ffff     call sym.imp.dcgettext
0x00004fc4      4889de         mov rsi, rbx
0x00004fc7      4889c7         mov rdi, rax
0x00004fca      5b             pop rbx
0x00004fcb      e940c6ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00004fd0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00004fd1      4889fb         mov rbx, rdi
0x00004fd4      e877c6ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00004fd9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00004fdc      7505           jne 0x4fe3
0x00004fde      4885db         test rbx, rbx
0x00004fe1      7502           jne 0x4fe5
0x00004fe3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00004fe4      c3             ret
0x00004fe5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00004fea      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00004ff0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00004ff3      48f7e6         mul rsi
0x00004ff6      4889c7         mov rdi, rax
0x00004ff9      0f90c0         seto al
0x00004ffc      4885ff         test rdi, rdi
0x00004fff      780a           js 0x500b
0x00005001      0fb6c0         movzx eax, al
0x00005004      4885c0         test rax, rax
0x00005007      7502           jne 0x500b
0x00005009      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000500b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000500f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00005014      6690           nop
0x00005016      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00005020      ebae           jmp sym.xmalloc
0x00005022      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00005026      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00005030      4885f6         test rsi, rsi
0x00005033      53             push rbx
0x00005034      4889f3         mov rbx, rsi
0x00005037      7505           jne 0x503e
0x00005039      4885ff         test rdi, rdi
0x0000503c      751a           jne 0x5058
0x0000503e      4889de         mov rsi, rbx
0x00005041      e85ac6ffff     call sym.imp.realloc
0x00005046      4885c0         test rax, rax
0x00005049      7505           jne 0x5050
0x0000504b      4885db         test rbx, rbx
0x0000504e      7511           jne 0x5061                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00005050      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00005051      c3             ret
0x00005052      660f1f440000   nop word [rax + rax]
0x00005058      e823c4ffff     call sym.imp.free
0x0000505d      31c0           xor eax, eax
0x0000505f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00005060      c3             ret
0x00005061      e8ba010000     call sym.xalloc_die
0x00005066      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00005070      4889f0         mov rax, rsi
0x00005073      48f7e2         mul rdx
0x00005076      4889c6         mov rsi, rax
0x00005079      0f90c0         seto al
0x0000507c      4885f6         test rsi, rsi
0x0000507f      780a           js 0x508b
0x00005081      0fb6c0         movzx eax, al
0x00005084      4885c0         test rax, rax
0x00005087      7502           jne 0x508b
0x00005089      eba5           jmp sym.xrealloc
0x0000508b      4883ec08       sub rsp, 8
0x0000508f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005094      6690           nop
0x00005096      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000050a0      4885ff         test rdi, rdi
0x000050a3      4989d1         mov r9, rdx
0x000050a6      488b0e         mov rcx, qword [rsi]
0x000050a9      7435           je 0x50e0
0x000050ab      31d2           xor edx, edx
0x000050ad      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000050b7      49f7f1         div r9
0x000050ba      4839c8         cmp rax, rcx
0x000050bd      763c           jbe 0x50fb
0x000050bf      4889c8         mov rax, rcx
0x000050c2      48d1e8         shr rax, 1
0x000050c5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000050ca      48890e         mov qword [rsi], rcx
0x000050cd      490fafc9       imul rcx, r9
0x000050d1      4889ce         mov rsi, rcx
0x000050d4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000050d9      0f1f80000000.  nop dword [rax]
0x000050e0      4885c9         test rcx, rcx
0x000050e3      7423           je 0x5108
0x000050e5      4889c8         mov rax, rcx
0x000050e8      49f7e1         mul r9
0x000050eb      0f90c2         seto dl
0x000050ee      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000050f1      0fb6d2         movzx edx, dl
0x000050f4      7805           js 0x50fb
0x000050f6      4885d2         test rdx, rdx
0x000050f9      74cf           je 0x50ca
0x000050fb      4883ec08       sub rsp, 8
0x000050ff      e81c010000     call sym.xalloc_die
0x00005104      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005108      31d2           xor edx, edx
0x0000510a      b880000000     mov eax, 0x80
0x0000510f      4531c0         xor r8d, r8d
0x00005112      49f7f1         div r9
0x00005115      4885c0         test rax, rax
0x00005118      410f94c0       sete r8b
0x0000511c      498d0c00       lea rcx, [r8 + rax]
0x00005120      ebc3           jmp 0x50e5
0x00005122      0f1f4000       nop dword [rax]
0x00005126      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00005130      4885ff         test rdi, rdi
0x00005133      488b06         mov rax, qword [rsi]
0x00005136      7428           je 0x5160
0x00005138      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00005142      4839d0         cmp rax, rdx
0x00005145      772a           ja 0x5171
0x00005147      4889c2         mov rdx, rax
0x0000514a      48d1ea         shr rdx, 1
0x0000514d      488d440201     lea rax, [rdx + rax + 1]
0x00005152      488906         mov qword [rsi], rax
0x00005155      4889c6         mov rsi, rax
0x00005158      e9d3feffff     jmp sym.xrealloc
0x0000515d      0f1f00         nop dword [rax]
0x00005160      4885c0         test rax, rax
0x00005163      ba80000000     mov edx, 0x80
0x00005168      480f44c2       cmove rax, rdx
0x0000516c      4885c0         test rax, rax
0x0000516f      79e1           jns 0x5152
0x00005171      4883ec08       sub rsp, 8
0x00005175      e8a6000000     call sym.xalloc_die
0x0000517a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005180      53             push rbx
0x00005181      4889fb         mov rbx, rdi
0x00005184      e847feffff     call sym.xmalloc
0x00005189      4889da         mov rdx, rbx
0x0000518c      31f6           xor esi, esi
0x0000518e      4889c7         mov rdi, rax
0x00005191      5b             pop rbx
0x00005192      e929c4ffff     jmp sym.imp.memset
0x00005197      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x000051a0      4889f8         mov rax, rdi
0x000051a3      4883ec08       sub rsp, 8
0x000051a7      48f7e6         mul rsi
0x000051aa      0f90c2         seto dl
0x000051ad      4885c0         test rax, rax
0x000051b0      7817           js 0x51c9
0x000051b2      0fb6d2         movzx edx, dl
0x000051b5      4885d2         test rdx, rdx
0x000051b8      750f           jne 0x51c9
0x000051ba      e861c4ffff     call sym.imp.calloc
0x000051bf      4885c0         test rax, rax
0x000051c2      7405           je 0x51c9
0x000051c4      4883c408       add rsp, 8
0x000051c8      c3             ret
0x000051c9      e852000000     call sym.xalloc_die
0x000051ce      6690           nop
;-- xmemdup:
0x000051d0      55             push rbp
0x000051d1      53             push rbx
0x000051d2      4889fd         mov rbp, rdi
0x000051d5      4889f7         mov rdi, rsi
0x000051d8      4889f3         mov rbx, rsi
0x000051db      4883ec08       sub rsp, 8
0x000051df      e8ecfdffff     call sym.xmalloc
0x000051e4      4883c408       add rsp, 8
0x000051e8      4889da         mov rdx, rbx
0x000051eb      4889ee         mov rsi, rbp
0x000051ee      5b             pop rbx
0x000051ef      5d             pop rbp
0x000051f0      4889c7         mov rdi, rax
0x000051f3      e938c4ffff     jmp sym.imp.memcpy
0x000051f8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005200      53             push rbx
0x00005201      4889fb         mov rbx, rdi
0x00005204      e837c3ffff     call sym.imp.strlen
0x00005209      4889df         mov rdi, rbx
0x0000520c      488d7001       lea rsi, [rax + 1]
0x00005210      5b             pop rbx
0x00005211      ebbd           jmp sym.xmemdup
0x00005213      662e0f1f8400.  nop word cs:[rax + rax]
0x0000521d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005220      488d35281400.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x664f ; "memory exhausted"
0x00005227      4883ec08       sub rsp, 8
0x0000522b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005230      31ff           xor edi, edi
0x00005232      e8e9c2ffff     call sym.imp.dcgettext
0x00005237      8b3deb2d2000   mov edi, dword [obj.exit_failure]       ; [0x208028:4]=1
0x0000523d      488d157f0b00.  lea rdx, [0x00005dc3]                   ; "%s"
0x00005244      4889c1         mov rcx, rax
0x00005247      31f6           xor esi, esi
0x00005249      31c0           xor eax, eax
0x0000524b      e880c4ffff     call sym.imp.error
0x00005250      e83bc2ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005255      662e0f1f8400.  nop word cs:[rax + rax]
0x0000525f      90             nop
;-- xstrndup:
0x00005260      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xstrndup.c:31
0x00005264      e887c3ffff     call sym.imp.strndup                    ; ../coreutils-8.31/lib/xstrndup.c:32
0x00005269      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xstrndup.c:33
0x0000526c      7405           je 0x5273
0x0000526e      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/xstrndup.c:36
0x00005272      c3             ret
0x00005273      e8a8ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xstrndup.c:34
0x00005278      0f1f84000000.  nop dword [rax + rax]
;-- rpl_fclose:
0x00005280      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00005282      55             push rbp
0x00005283      53             push rbx
0x00005284      4889fb         mov rbx, rdi
0x00005287      e8b4c3ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000528c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000528e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00005291      7854           js 0x52e7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00005293      e8e8c3ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00005298      85c0           test eax, eax
0x0000529a      752c           jne 0x52c8
0x0000529c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000529f      e85c000000     call sym.rpl_fflush
0x000052a4      85c0           test eax, eax
0x000052a6      743c           je 0x52e4
0x000052a8      e8f3c1ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x000052ad      448b20         mov r12d, dword [rax]
0x000052b0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000052b3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x000052b6      e845c2ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x000052bb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x000052be      7530           jne 0x52f0
0x000052c0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000052c1      5d             pop rbp
0x000052c2      415c           pop r12
0x000052c4      c3             ret
0x000052c5      0f1f00         nop dword [rax]
0x000052c8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x000052cb      e870c3ffff     call sym.imp.fileno
0x000052d0      31f6           xor esi, esi
0x000052d2      ba01000000     mov edx, 1
0x000052d7      89c7           mov edi, eax
0x000052d9      e8c2c2ffff     call sym.imp.lseek
0x000052de      4883f8ff       cmp rax, 0xffffffffffffffff
0x000052e2      75b8           jne 0x529c
0x000052e4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000052e7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000052e8      5d             pop rbp
0x000052e9      415c           pop r12
0x000052eb      e910c2ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x000052f0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x000052f4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x000052f9      ebc5           jmp 0x52c0
0x000052fb      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00005300      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00005303      53             push rbx
0x00005304      4889fb         mov rbx, rdi
0x00005307      7411           je 0x531a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00005309      e872c3ffff     call sym.imp.__freading
0x0000530e      85c0           test eax, eax
0x00005310      7408           je 0x531a
0x00005312      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00005318      750e           jne 0x5328
0x0000531a      4889df         mov rdi, rbx
0x0000531d      5b             pop rbx
0x0000531e      e93dc3ffff     jmp sym.imp.fflush
0x00005323      0f1f440000     nop dword [rax + rax]
0x00005328      4889df         mov rdi, rbx
0x0000532b      ba01000000     mov edx, 1
0x00005330      31f6           xor esi, esi
0x00005332      e809000000     call sym.rpl_fseeko
0x00005337      4889df         mov rdi, rbx
0x0000533a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000533b      e920c3ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00005340      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005344      48394710       cmp qword [rdi + 0x10], rax
0x00005348      7406           je 0x5350                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000534a      e991c3ffff     jmp sym.imp.fseeko
0x0000534f      90             nop
0x00005350      488b4720       mov rax, qword [rdi + 0x20]
0x00005354      48394728       cmp qword [rdi + 0x28], rax
0x00005358      75f0           jne 0x534a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000535a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000535f      75e9           jne 0x534a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005361      4154           push r12
0x00005363      55             push rbp
0x00005364      4189d4         mov r12d, edx
0x00005367      53             push rbx
0x00005368      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000536b      4889fb         mov rbx, rdi
0x0000536e      e8cdc2ffff     call sym.imp.fileno
0x00005373      4489e2         mov edx, r12d
0x00005376      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00005379      89c7           mov edi, eax
0x0000537b      e820c2ffff     call sym.imp.lseek
0x00005380      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005384      740c           je 0x5392
0x00005386      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005389      488983900000.  mov qword [rbx + 0x90], rax
0x00005390      31c0           xor eax, eax
0x00005392      5b             pop rbx
0x00005393      5d             pop rbp
0x00005394      415c           pop r12
0x00005396      c3             ret
0x00005397      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x000053a0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x000053a2      4154           push r12
0x000053a4      4989f5         mov r13, rsi
0x000053a7      55             push rbp
0x000053a8      53             push rbx
0x000053a9      4889fb         mov rbx, rdi
0x000053ac      4989d4         mov r12, rdx
0x000053af      4883ec18       sub rsp, 0x18
0x000053b3      64488b042528.  mov rax, qword fs:[0x28]
0x000053bc      4889442408     mov qword [rsp + 8], rax
0x000053c1      31c0           xor eax, eax
0x000053c3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x000053c8      4885ff         test rdi, rdi
0x000053cb      480f44d8       cmove rbx, rax
0x000053cf      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000053d2      e899c1ffff     call sym.imp.mbrtowc
0x000053d7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000053db      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000053de      7620           jbe 0x5400                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000053e0      4d85e4         test r12, r12
0x000053e3      741b           je 0x5400
0x000053e5      31ff           xor edi, edi
0x000053e7      e8c4000000     call sym.hard_locale
0x000053ec      84c0           test al, al
0x000053ee      7510           jne 0x5400
0x000053f0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000053f5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x000053fa      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000053fc      0f1f4000       nop dword [rax]
0x00005400      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005405      644833142528.  xor rdx, qword fs:[0x28]
0x0000540e      4889e8         mov rax, rbp
0x00005411      750b           jne 0x541e
0x00005413      4883c418       add rsp, 0x18
0x00005417      5b             pop rbx
0x00005418      5d             pop rbp
0x00005419      415c           pop r12
0x0000541b      415d           pop r13
0x0000541d      c3             ret
0x0000541e      e82dc1ffff     call sym.imp.__stack_chk_fail
0x00005423      662e0f1f8400.  nop word cs:[rax + rax]
0x0000542d      0f1f00         nop dword [rax]
;-- close_stream:
0x00005430      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00005432      55             push rbp
0x00005433      4889fd         mov rbp, rdi
0x00005436      53             push rbx
0x00005437      e894c0ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000543c      8b5d00         mov ebx, dword [rbp]
0x0000543f      4889ef         mov rdi, rbp
0x00005442      4989c4         mov r12, rax
0x00005445      e836feffff     call sym.rpl_fclose
0x0000544a      83e320         and ebx, 0x20                           ; "@"
0x0000544d      85db           test ebx, ebx
0x0000544f      7517           jne 0x5468
0x00005451      85c0           test eax, eax
0x00005453      740a           je 0x545f                               ; stdio.h:-186
0x00005455      4d85e4         test r12, r12                           ; stdio.h:-178
0x00005458      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000545d      7439           je 0x5498
0x0000545f      5b             pop rbx
0x00005460      5d             pop rbp
0x00005461      415c           pop r12
0x00005463      c3             ret
0x00005464      0f1f4000       nop dword [rax]
0x00005468      85c0           test eax, eax
0x0000546a      751c           jne 0x5488
0x0000546c      e82fc0ffff     call sym.imp.__errno_location
0x00005471      c70000000000   mov dword [rax], 0
0x00005477      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000547c      5b             pop rbx
0x0000547d      5d             pop rbp
0x0000547e      415c           pop r12
0x00005480      c3             ret
0x00005481      0f1f80000000.  nop dword [rax]
0x00005488      5b             pop rbx
0x00005489      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000548e      5d             pop rbp                                 ; stdio.h:-186
0x0000548f      415c           pop r12
0x00005491      c3             ret
0x00005492      660f1f440000   nop word [rax + rax]
0x00005498      e803c0ffff     call sym.imp.__errno_location
0x0000549d      833809         cmp dword [rax], 9
0x000054a0      5b             pop rbx
0x000054a1      5d             pop rbp
0x000054a2      415c           pop r12                                 ; stdio.h:-178
0x000054a4      0f95c0         setne al
0x000054a7      0fb6c0         movzx eax, al
0x000054aa      f7d8           neg eax
0x000054ac      c3             ret
0x000054ad      0f1f00         nop dword [rax]
;-- hard_locale:
0x000054b0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x000054b4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x000054b6      e8f5c1ffff     call sym.imp.setlocale
0x000054bb      4889c2         mov rdx, rax
0x000054be      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x000054c3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x000054c6      741d           je 0x54e5
0x000054c8      488d3d911100.  lea rdi, [0x00006660]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x000054cf      b902000000     mov ecx, 2
0x000054d4      4889d6         mov rsi, rdx
0x000054d7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000054d9      0f97c1         seta cl
0x000054dc      80d900         sbb cl, 0
0x000054df      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x000054e1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x000054e3      750b           jne 0x54f0
0x000054e5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000054e9      c3             ret
0x000054ea      660f1f440000   nop word [rax + rax]
0x000054f0      488d3d6b1100.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x6662 ; "POSIX"
0x000054f7      b906000000     mov ecx, 6
0x000054fc      4889d6         mov rsi, rdx
0x000054ff      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005501      0f97c0         seta al
0x00005504      1c00           sbb al, 0
0x00005506      84c0           test al, al
0x00005508      0f95c0         setne al
0x0000550b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000550f      c3             ret
;-- locale_charset:
0x00005510      4883ec08       sub rsp, 8
0x00005514      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00005519      e852c1ffff     call sym.imp.nl_langinfo
0x0000551e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00005521      741d           je 0x5540
0x00005523      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00005526      488d153b1100.  lea rdx, str.ASCII                      ; 0x6668 ; "ASCII"
0x0000552d      480f44c2       cmove rax, rdx
0x00005531      4883c408       add rsp, 8
0x00005535      c3             ret
0x00005536      662e0f1f8400.  nop word cs:[rax + rax]
0x00005540      488d05211100.  lea rax, str.ASCII                      ; 0x6668 ; "ASCII"
0x00005547      4883c408       add rsp, 8
0x0000554b      c3             ret
0x0000554c      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00005550      4157           push r15
0x00005552      4156           push r14
0x00005554      4989d7         mov r15, rdx
0x00005557      4155           push r13
0x00005559      4154           push r12
0x0000555b      4c8d25ae2520.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x207b10
0x00005562      55             push rbp
0x00005563      488d2dae2520.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x207b18
0x0000556a      53             push rbx
0x0000556b      4189fd         mov r13d, edi
0x0000556e      4989f6         mov r14, rsi
0x00005571      4c29e5         sub rbp, r12
0x00005574      4883ec08       sub rsp, 8
0x00005578      48c1fd03       sar rbp, 3
0x0000557c      e8c7beffff     call sym._init
0x00005581      4885ed         test rbp, rbp
0x00005584      7420           je 0x55a6
0x00005586      31db           xor ebx, ebx
0x00005588      0f1f84000000.  nop dword [rax + rax]
0x00005590      4c89fa         mov rdx, r15
0x00005593      4c89f6         mov rsi, r14
0x00005596      4489ef         mov edi, r13d
0x00005599      41ff14dc       call qword [r12 + rbx*8]
0x0000559d      4883c301       add rbx, 1
0x000055a1      4839dd         cmp rbp, rbx
0x000055a4      75ea           jne 0x5590
0x000055a6      4883c408       add rsp, 8
0x000055aa      5b             pop rbx
0x000055ab      5d             pop rbp
0x000055ac      415c           pop r12
0x000055ae      415d           pop r13
0x000055b0      415e           pop r14
0x000055b2      415f           pop r15
0x000055b4      c3             ret
0x000055b5      90             nop
0x000055b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x000055c0      f3c3           ret
0x000055c2      662e0f1f8400.  nop word cs:[rax + rax]
0x000055cc      0f1f4000       nop dword [rax]
;-- atexit:
0x000055d0      488b15312a20.  mov rdx, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x000055d7      31f6           xor esi, esi
0x000055d9      e922c1ffff     jmp sym.imp.__cxa_atexit
0x000055de      0000           add byte [rax], al
