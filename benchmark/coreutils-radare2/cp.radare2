;-- section..plt:
;-- .plt:
0x00002730      ff351a752100   push qword [0x00219c50]                 ; [12] -r-x section size 1760 named .plt
0x00002736      ff251c752100   jmp qword [0x00219c58]                  ; [0x219c58:8]=0
0x0000273c      0f1f4000       nop dword [rax]
;-- imp.getenv:
0x00002740      ff251a752100   jmp qword [reloc.getenv]                ; [0x219c60:8]=0x2746 ; "F'"
0x00002746      6800000000     push 0
0x0000274b      e9e0ffffff     jmp sym..plt
;-- imp.utimensat:
0x00002750      ff2512752100   jmp qword [reloc.utimensat]             ; [0x219c68:8]=0x2756 ; "V'"
0x00002756      6801000000     push 1                                  ; "ELF\x02\x01\x01"
0x0000275b      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x00002760      ff250a752100   jmp qword [reloc.abort]                 ; [0x219c70:8]=0x2766 ; "f'"
0x00002766      6802000000     push 2                                  ; "LF\x02\x01\x01"
0x0000276b      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00002770      ff2502752100   jmp qword [reloc.__errno_location]      ; [0x219c78:8]=0x2776 ; "v'"
0x00002776      6803000000     push 3                                  ; "F\x02\x01\x01"
0x0000277b      e9b0ffffff     jmp sym..plt
;-- imp.unlink:
0x00002780      ff25fa742100   jmp qword [reloc.unlink]                ; [0x219c80:8]=0x2786
0x00002786      6804000000     push 4
0x0000278b      e9a0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00002790      ff25f2742100   jmp qword [reloc.strncmp]               ; [0x219c88:8]=0x2796
0x00002796      6805000000     push 5
0x0000279b      e990ffffff     jmp sym..plt
;-- imp._exit:
0x000027a0      ff25ea742100   jmp qword [reloc._exit]                 ; [0x219c90:8]=0x27a6
0x000027a6      6806000000     push 6
0x000027ab      e980ffffff     jmp sym..plt
;-- imp.strcpy:
0x000027b0      ff25e2742100   jmp qword [reloc.strcpy]                ; [0x219c98:8]=0x27b6
0x000027b6      6807000000     push 7
0x000027bb      e970ffffff     jmp sym..plt
;-- imp.__fpending:
0x000027c0      ff25da742100   jmp qword [reloc.__fpending]            ; [0x219ca0:8]=0x27c6
0x000027c6      6808000000     push 8
0x000027cb      e960ffffff     jmp sym..plt
;-- imp.__read_chk:
0x000027d0      ff25d2742100   jmp qword [reloc.__read_chk]            ; [0x219ca8:8]=0x27d6
0x000027d6      6809000000     push 9
0x000027db      e950ffffff     jmp sym..plt
;-- imp.mkdir:
0x000027e0      ff25ca742100   jmp qword [reloc.mkdir]                 ; [0x219cb0:8]=0x27e6
0x000027e6      680a000000     push 0xa
0x000027eb      e940ffffff     jmp sym..plt
;-- imp.unlinkat:
0x000027f0      ff25c2742100   jmp qword [reloc.unlinkat]              ; [0x219cb8:8]=0x27f6
0x000027f6      680b000000     push 0xb
0x000027fb      e930ffffff     jmp sym..plt
;-- imp.qsort:
0x00002800      ff25ba742100   jmp qword [reloc.qsort]                 ; [0x219cc0:8]=0x2806
0x00002806      680c000000     push 0xc
0x0000280b      e920ffffff     jmp sym..plt
;-- imp.readlink:
0x00002810      ff25b2742100   jmp qword [reloc.readlink]              ; [0x219cc8:8]=0x2816
0x00002816      680d000000     push 0xd
0x0000281b      e910ffffff     jmp sym..plt
;-- imp.fcntl:
0x00002820      ff25aa742100   jmp qword [reloc.fcntl]                 ; [0x219cd0:8]=0x2826 ; "&("
0x00002826      680e000000     push 0xe
0x0000282b      e900ffffff     jmp sym..plt
;-- imp.clock_gettime:
0x00002830      ff25a2742100   jmp qword [reloc.clock_gettime]         ; [0x219cd8:8]=0x2836 ; "6("
0x00002836      680f000000     push 0xf
0x0000283b      e9f0feffff     jmp sym..plt
;-- imp.write:
0x00002840      ff259a742100   jmp qword [reloc.write]                 ; [0x219ce0:8]=0x2846 ; "F("
0x00002846      6810000000     push 0x10
0x0000284b      e9e0feffff     jmp sym..plt
;-- imp.getpid:
0x00002850      ff2592742100   jmp qword [reloc.getpid]                ; [0x219ce8:8]=0x2856 ; "V("
0x00002856      6811000000     push 0x11
0x0000285b      e9d0feffff     jmp sym..plt
;-- imp.fread_unlocked:
0x00002860      ff258a742100   jmp qword [reloc.fread_unlocked]        ; [0x219cf0:8]=0x2866 ; "f("
0x00002866      6812000000     push 0x12                               ; u">\x01"
0x0000286b      e9c0feffff     jmp sym..plt
;-- imp.textdomain:
0x00002870      ff2582742100   jmp qword [reloc.textdomain]            ; [0x219cf8:8]=0x2876 ; "v("
0x00002876      6813000000     push 0x13
0x0000287b      e9b0feffff     jmp sym..plt
;-- imp.pathconf:
0x00002880      ff257a742100   jmp qword [reloc.pathconf]              ; [0x219d00:8]=0x2886
0x00002886      6814000000     push 0x14
0x0000288b      e9a0feffff     jmp sym..plt
;-- imp.fclose:
0x00002890      ff2572742100   jmp qword [reloc.fclose]                ; [0x219d08:8]=0x2896
0x00002896      6815000000     push 0x15
0x0000289b      e990feffff     jmp sym..plt
;-- imp.opendir:
0x000028a0      ff256a742100   jmp qword [reloc.opendir]               ; [0x219d10:8]=0x28a6
0x000028a6      6816000000     push 0x16
0x000028ab      e980feffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000028b0      ff2562742100   jmp qword [reloc.bindtextdomain]        ; [0x219d18:8]=0x28b6
0x000028b6      6817000000     push 0x17
0x000028bb      e970feffff     jmp sym..plt
;-- imp.stpcpy:
0x000028c0      ff255a742100   jmp qword [reloc.stpcpy]                ; [0x219d20:8]=0x28c6
0x000028c6      6818000000     push 0x18
0x000028cb      e960feffff     jmp sym..plt
;-- imp.rmdir:
0x000028d0      ff2552742100   jmp qword [reloc.rmdir]                 ; [0x219d28:8]=0x28d6
0x000028d6      6819000000     push 0x19                               ; "6"
0x000028db      e950feffff     jmp sym..plt
;-- imp.dcgettext:
0x000028e0      ff254a742100   jmp qword [reloc.dcgettext]             ; [0x219d30:8]=0x28e6
0x000028e6      681a000000     push 0x1a
0x000028eb      e940feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000028f0      ff2542742100   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x219d38:8]=0x28f6
0x000028f6      681b000000     push 0x1b
0x000028fb      e930feffff     jmp sym..plt
;-- imp.strlen:
0x00002900      ff253a742100   jmp qword [reloc.strlen]                ; [0x219d40:8]=0x2906
0x00002906      681c000000     push 0x1c
0x0000290b      e920feffff     jmp sym..plt
;-- imp.__lxstat:
0x00002910      ff2532742100   jmp qword [reloc.__lxstat]              ; [0x219d48:8]=0x2916
0x00002916      681d000000     push 0x1d
0x0000291b      e910feffff     jmp sym..plt
;-- imp.openat:
0x00002920      ff252a742100   jmp qword [reloc.openat]                ; [0x219d50:8]=0x2926 ; "&)"
0x00002926      681e000000     push 0x1e
0x0000292b      e900feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00002930      ff2522742100   jmp qword [reloc.__stack_chk_fail]      ; [0x219d58:8]=0x2936 ; "6)"
0x00002936      681f000000     push 0x1f
0x0000293b      e9f0fdffff     jmp sym..plt
;-- imp.getuid:
0x00002940      ff251a742100   jmp qword [reloc.getuid]                ; [0x219d60:8]=0x2946 ; "F)"
0x00002946      6820000000     push 0x20                               ; "@"
0x0000294b      e9e0fdffff     jmp sym..plt
;-- imp.getopt_long:
0x00002950      ff2512742100   jmp qword [reloc.getopt_long]           ; [0x219d68:8]=0x2956 ; "V)"
0x00002956      6821000000     push 0x21                               ; '!'
0x0000295b      e9d0fdffff     jmp sym..plt
;-- imp.mbrtowc:
0x00002960      ff250a742100   jmp qword [reloc.mbrtowc]               ; [0x219d70:8]=0x2966 ; "f)"
0x00002966      6822000000     push 0x22                               ; '"'
0x0000296b      e9c0fdffff     jmp sym..plt
;-- imp.strchr:
0x00002970      ff2502742100   jmp qword [reloc.strchr]                ; [0x219d78:8]=0x2976 ; "v)"
0x00002976      6823000000     push 0x23                               ; '#'
0x0000297b      e9b0fdffff     jmp sym..plt
;-- imp.__fxstatat:
0x00002980      ff25fa732100   jmp qword [reloc.__fxstatat]            ; [0x219d80:8]=0x2986
0x00002986      6824000000     push 0x24                               ; '$'
0x0000298b      e9a0fdffff     jmp sym..plt
;-- imp.__overflow:
0x00002990      ff25f2732100   jmp qword [reloc.__overflow]            ; [0x219d88:8]=0x2996
0x00002996      6825000000     push 0x25                               ; '%'
0x0000299b      e990fdffff     jmp sym..plt
;-- imp.strrchr:
0x000029a0      ff25ea732100   jmp qword [reloc.strrchr]               ; [0x219d90:8]=0x29a6
0x000029a6      6826000000     push 0x26                               ; '&'
0x000029ab      e980fdffff     jmp sym..plt
;-- imp.ftruncate:
0x000029b0      ff25e2732100   jmp qword [reloc.ftruncate]             ; [0x219d98:8]=0x29b6
0x000029b6      6827000000     push 0x27                               ; '''
0x000029bb      e970fdffff     jmp sym..plt
;-- imp.lseek:
0x000029c0      ff25da732100   jmp qword [reloc.lseek]                 ; [0x219da0:8]=0x29c6
0x000029c6      6828000000     push 0x28                               ; '('
0x000029cb      e960fdffff     jmp sym..plt
;-- imp.gettimeofday:
0x000029d0      ff25d2732100   jmp qword [reloc.gettimeofday]          ; [0x219da8:8]=0x29d6
0x000029d6      6829000000     push 0x29                               ; ')' ; "T\b"
0x000029db      e950fdffff     jmp sym..plt
;-- imp.__assert_fail:
0x000029e0      ff25ca732100   jmp qword [reloc.__assert_fail]         ; [0x219db0:8]=0x29e6
0x000029e6      682a000000     push 0x2a                               ; '*'
0x000029eb      e940fdffff     jmp sym..plt
;-- imp.memset:
0x000029f0      ff25c2732100   jmp qword [reloc.memset]                ; [0x219db8:8]=0x29f6
0x000029f6      682b000000     push 0x2b                               ; '+'
0x000029fb      e930fdffff     jmp sym..plt
;-- imp.geteuid:
0x00002a00      ff25ba732100   jmp qword [reloc.geteuid]               ; [0x219dc0:8]=0x2a06
0x00002a06      682c000000     push 0x2c                               ; ','
0x00002a0b      e920fdffff     jmp sym..plt
;-- imp.ioctl:
0x00002a10      ff25b2732100   jmp qword [reloc.ioctl]                 ; [0x219dc8:8]=0x2a16
0x00002a16      682d000000     push 0x2d                               ; '-'
0x00002a1b      e910fdffff     jmp sym..plt
;-- imp.canonicalize_file_name:
0x00002a20      ff25aa732100   jmp qword [reloc.canonicalize_file_name] ; [0x219dd0:8]=0x2a26 ; "&*"
0x00002a26      682e000000     push 0x2e                               ; '.'
0x00002a2b      e900fdffff     jmp sym..plt
;-- imp.close:
0x00002a30      ff25a2732100   jmp qword [reloc.close]                 ; [0x219dd8:8]=0x2a36 ; "6*"
0x00002a36      682f000000     push 0x2f                               ; '/'
0x00002a3b      e9f0fcffff     jmp sym..plt
;-- imp.rewinddir:
0x00002a40      ff259a732100   jmp qword [reloc.rewinddir]             ; [0x219de0:8]=0x2a46 ; "F*"
0x00002a46      6830000000     push 0x30                               ; '0'
0x00002a4b      e9e0fcffff     jmp sym..plt
;-- imp.strspn:
0x00002a50      ff2592732100   jmp qword [reloc.strspn]                ; [0x219de8:8]=0x2a56 ; "V*"
0x00002a56      6831000000     push 0x31                               ; '1'
0x00002a5b      e9d0fcffff     jmp sym..plt
;-- imp.closedir:
0x00002a60      ff258a732100   jmp qword [reloc.closedir]              ; [0x219df0:8]=0x2a66 ; "f*"
0x00002a66      6832000000     push 0x32                               ; '2'
0x00002a6b      e9c0fcffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00002a70      ff2582732100   jmp qword [reloc.posix_fadvise]         ; [0x219df8:8]=0x2a76 ; "v*"
0x00002a76      6833000000     push 0x33                               ; '3'
0x00002a7b      e9b0fcffff     jmp sym..plt
;-- imp.read:
0x00002a80      ff257a732100   jmp qword [reloc.read]                  ; [0x219e00:8]=0x2a86
0x00002a86      6834000000     push 0x34                               ; '4' ; u"@8\t@%$\x06"
0x00002a8b      e9a0fcffff     jmp sym..plt
;-- imp.memcmp:
0x00002a90      ff2572732100   jmp qword [reloc.memcmp]                ; [0x219e08:8]=0x2a96
0x00002a96      6835000000     push 0x35                               ; '5'
0x00002a9b      e990fcffff     jmp sym..plt
;-- imp.fallocate:
0x00002aa0      ff256a732100   jmp qword [reloc.fallocate]             ; [0x219e10:8]=0x2aa6
0x00002aa6      6836000000     push 0x36                               ; '6' ; u"8\t@%$\x06"
0x00002aab      e980fcffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00002ab0      ff2562732100   jmp qword [reloc.fputs_unlocked]        ; [0x219e18:8]=0x2ab6
0x00002ab6      6837000000     push 0x37                               ; '7'
0x00002abb      e970fcffff     jmp sym..plt
;-- imp.utimes:
0x00002ac0      ff255a732100   jmp qword [reloc.utimes]                ; [0x219e20:8]=0x2ac6
0x00002ac6      6838000000     push 0x38                               ; '8' ; u"\t@%$\x06"
0x00002acb      e960fcffff     jmp sym..plt
;-- imp.calloc:
0x00002ad0      ff2552732100   jmp qword [reloc.calloc]                ; [0x219e28:8]=0x2ad6
0x00002ad6      6839000000     push 0x39                               ; '9'
0x00002adb      e950fcffff     jmp sym..plt
;-- imp.__getdelim:
0x00002ae0      ff254a732100   jmp qword [reloc.__getdelim]            ; [0x219e30:8]=0x2ae6
0x00002ae6      683a000000     push 0x3a                               ; ':' ; u"@%$\x06"
0x00002aeb      e940fcffff     jmp sym..plt
;-- imp.strcmp:
0x00002af0      ff2542732100   jmp qword [reloc.strcmp]                ; [0x219e38:8]=0x2af6
0x00002af6      683b000000     push 0x3b                               ; ';'
0x00002afb      e930fcffff     jmp sym..plt
;-- imp.dirfd:
0x00002b00      ff253a732100   jmp qword [reloc.dirfd]                 ; [0x219e40:8]=0x2b06
0x00002b06      683c000000     push 0x3c                               ; '<' ; u"%$\x06"
0x00002b0b      e920fcffff     jmp sym..plt
;-- imp.fpathconf:
0x00002b10      ff2532732100   jmp qword [reloc.fpathconf]             ; [0x219e48:8]=0x2b16
0x00002b16      683d000000     push 0x3d                               ; '='
0x00002b1b      e910fcffff     jmp sym..plt
;-- imp.rpmatch:
0x00002b20      ff252a732100   jmp qword [reloc.rpmatch]               ; [0x219e50:8]=0x2b26 ; "&+"
0x00002b26      683e000000     push 0x3e                               ; '>' ; u"$\x06"
0x00002b2b      e900fcffff     jmp sym..plt
;-- imp.syscall:
0x00002b30      ff2522732100   jmp qword [reloc.syscall]               ; [0x219e58:8]=0x2b36 ; "6+"
0x00002b36      683f000000     push 0x3f                               ; '?'
0x00002b3b      e9f0fbffff     jmp sym..plt
;-- imp.mkfifo:
0x00002b40      ff251a732100   jmp qword [reloc.mkfifo]                ; [0x219e60:8]=0x2b46 ; "F+"
0x00002b46      6840000000     push 0x40                               ; segment.PHDR
0x00002b4b      e9e0fbffff     jmp sym..plt
;-- imp.umask:
0x00002b50      ff2512732100   jmp qword [reloc.umask]                 ; [0x219e68:8]=0x2b56 ; "V+"
0x00002b56      6841000000     push 0x41                               ; 'A'
0x00002b5b      e9d0fbffff     jmp sym..plt
;-- imp.memcpy:
0x00002b60      ff250a732100   jmp qword [reloc.memcpy]                ; [0x219e70:8]=0x2b66 ; "f+"
0x00002b66      6842000000     push 0x42                               ; 'B'
0x00002b6b      e9c0fbffff     jmp sym..plt
;-- imp.__xmknod:
0x00002b70      ff2502732100   jmp qword [reloc.__xmknod]              ; [0x219e78:8]=0x2b76 ; "v+"
0x00002b76      6843000000     push 0x43                               ; 'C'
0x00002b7b      e9b0fbffff     jmp sym..plt
;-- imp.fileno:
0x00002b80      ff25fa722100   jmp qword [reloc.fileno]                ; [0x219e80:8]=0x2b86
0x00002b86      6844000000     push 0x44                               ; 'D'
0x00002b8b      e9a0fbffff     jmp sym..plt
;-- imp.getgid:
0x00002b90      ff25f2722100   jmp qword [reloc.getgid]                ; [0x219e88:8]=0x2b96
0x00002b96      6845000000     push 0x45                               ; 'E'
0x00002b9b      e990fbffff     jmp sym..plt
;-- imp.__xstat:
0x00002ba0      ff25ea722100   jmp qword [reloc.__xstat]               ; [0x219e90:8]=0x2ba6
0x00002ba6      6846000000     push 0x46                               ; 'F'
0x00002bab      e980fbffff     jmp sym..plt
;-- imp.readdir:
0x00002bb0      ff25e2722100   jmp qword [reloc.readdir]               ; [0x219e98:8]=0x2bb6
0x00002bb6      6847000000     push 0x47                               ; 'G'
0x00002bbb      e970fbffff     jmp sym..plt
;-- imp.malloc:
0x00002bc0      ff25da722100   jmp qword [reloc.malloc]                ; [0x219ea0:8]=0x2bc6
0x00002bc6      6848000000     push 0x48                               ; 'H' ; "@"
0x00002bcb      e960fbffff     jmp sym..plt
;-- imp.fflush:
0x00002bd0      ff25d2722100   jmp qword [reloc.fflush]                ; [0x219ea8:8]=0x2bd6
0x00002bd6      6849000000     push 0x49                               ; 'I'
0x00002bdb      e950fbffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00002be0      ff25ca722100   jmp qword [reloc.nl_langinfo]           ; [0x219eb0:8]=0x2be6
0x00002be6      684a000000     push 0x4a                               ; 'J'
0x00002beb      e940fbffff     jmp sym..plt
;-- imp.__fxstat:
0x00002bf0      ff25c2722100   jmp qword [reloc.__fxstat]              ; [0x219eb8:8]=0x2bf6
0x00002bf6      684b000000     push 0x4b                               ; 'K'
0x00002bfb      e930fbffff     jmp sym..plt
;-- imp.lchown:
0x00002c00      ff25ba722100   jmp qword [reloc.lchown]                ; [0x219ec0:8]=0x2c06
0x00002c06      684c000000     push 0x4c                               ; 'L'
0x00002c0b      e920fbffff     jmp sym..plt
;-- imp.__freading:
0x00002c10      ff25b2722100   jmp qword [reloc.__freading]            ; [0x219ec8:8]=0x2c16
0x00002c16      684d000000     push 0x4d                               ; 'M'
0x00002c1b      e910fbffff     jmp sym..plt
;-- imp.realloc:
0x00002c20      ff25aa722100   jmp qword [reloc.realloc]               ; [0x219ed0:8]=0x2c26 ; "&,"
0x00002c26      684e000000     push 0x4e                               ; 'N'
0x00002c2b      e900fbffff     jmp sym..plt
;-- imp.fdopen:
0x00002c30      ff25a2722100   jmp qword [reloc.fdopen]                ; [0x219ed8:8]=0x2c36 ; "6,"
0x00002c36      684f000000     push 0x4f                               ; 'O'
0x00002c3b      e9f0faffff     jmp sym..plt
;-- imp.linkat:
0x00002c40      ff259a722100   jmp qword [reloc.linkat]                ; [0x219ee0:8]=0x2c46 ; "F,"
0x00002c46      6850000000     push 0x50                               ; 'P' ; "@"
0x00002c4b      e9e0faffff     jmp sym..plt
;-- imp.setlocale:
0x00002c50      ff2592722100   jmp qword [reloc.setlocale]             ; [0x219ee8:8]=0x2c56 ; "V,"
0x00002c56      6851000000     push 0x51                               ; 'Q'
0x00002c5b      e9d0faffff     jmp sym..plt
;-- imp.__printf_chk:
0x00002c60      ff258a722100   jmp qword [reloc.__printf_chk]          ; [0x219ef0:8]=0x2c66 ; "f,"
0x00002c66      6852000000     push 0x52                               ; 'R'
0x00002c6b      e9c0faffff     jmp sym..plt
;-- imp.fchmod:
0x00002c70      ff2582722100   jmp qword [reloc.fchmod]                ; [0x219ef8:8]=0x2c76 ; "v,"
0x00002c76      6853000000     push 0x53                               ; 'S'
0x00002c7b      e9b0faffff     jmp sym..plt
;-- imp.setvbuf:
0x00002c80      ff257a722100   jmp qword [reloc.setvbuf]               ; [0x219f00:8]=0x2c86
0x00002c86      6854000000     push 0x54                               ; 'T'
0x00002c8b      e9a0faffff     jmp sym..plt
;-- imp.chmod:
0x00002c90      ff2572722100   jmp qword [reloc.chmod]                 ; [0x219f08:8]=0x2c96
0x00002c96      6855000000     push 0x55                               ; 'U'
0x00002c9b      e990faffff     jmp sym..plt
;-- imp.mempcpy:
0x00002ca0      ff256a722100   jmp qword [reloc.mempcpy]               ; [0x219f10:8]=0x2ca6
0x00002ca6      6856000000     push 0x56                               ; 'V'
0x00002cab      e980faffff     jmp sym..plt
;-- imp.error:
0x00002cb0      ff2562722100   jmp qword [reloc.error]                 ; [0x219f18:8]=0x2cb6
0x00002cb6      6857000000     push 0x57                               ; 'W'
0x00002cbb      e970faffff     jmp sym..plt
;-- imp.__explicit_bzero_chk:
0x00002cc0      ff255a722100   jmp qword [reloc.__explicit_bzero_chk]  ; [0x219f20:8]=0x2cc6
0x00002cc6      6858000000     push 0x58                               ; 'X' ; "@"
0x00002ccb      e960faffff     jmp sym..plt
;-- imp.open:
0x00002cd0      ff2552722100   jmp qword [reloc.open]                  ; [0x219f28:8]=0x2cd6
0x00002cd6      6859000000     push 0x59                               ; 'Y'
0x00002cdb      e950faffff     jmp sym..plt
;-- imp.fseeko:
0x00002ce0      ff254a722100   jmp qword [reloc.fseeko]                ; [0x219f30:8]=0x2ce6
0x00002ce6      685a000000     push 0x5a                               ; 'Z'
0x00002ceb      e940faffff     jmp sym..plt
;-- imp.fchown:
0x00002cf0      ff2542722100   jmp qword [reloc.fchown]                ; [0x219f38:8]=0x2cf6
0x00002cf6      685b000000     push 0x5b                               ; '['
0x00002cfb      e930faffff     jmp sym..plt
;-- imp.fopen:
0x00002d00      ff253a722100   jmp qword [reloc.fopen]                 ; [0x219f40:8]=0x2d06
0x00002d06      685c000000     push 0x5c                               ; '\'
0x00002d0b      e920faffff     jmp sym..plt
;-- imp.rename:
0x00002d10      ff2532722100   jmp qword [reloc.rename]                ; [0x219f48:8]=0x2d16
0x00002d16      685d000000     push 0x5d                               ; ']'
0x00002d1b      e910faffff     jmp sym..plt
;-- imp.fdopendir:
0x00002d20      ff252a722100   jmp qword [reloc.fdopendir]             ; [0x219f50:8]=0x2d26 ; "&-"
0x00002d26      685e000000     push 0x5e                               ; '^'
0x00002d2b      e900faffff     jmp sym..plt
;-- imp.futimens:
0x00002d30      ff2522722100   jmp qword [reloc.futimens]              ; [0x219f58:8]=0x2d36 ; "6-"
0x00002d36      685f000000     push 0x5f                               ; '_'
0x00002d3b      e9f0f9ffff     jmp sym..plt
;-- imp.euidaccess:
0x00002d40      ff251a722100   jmp qword [reloc.euidaccess]            ; [0x219f60:8]=0x2d46 ; "F-"
0x00002d46      6860000000     push 0x60                               ; '`'
0x00002d4b      e9e0f9ffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00002d50      ff2512722100   jmp qword [reloc.__cxa_atexit]          ; [0x219f68:8]=0x2d56 ; "V-"
0x00002d56      6861000000     push 0x61                               ; 'a'
0x00002d5b      e9d0f9ffff     jmp sym..plt
;-- imp.renameat:
0x00002d60      ff250a722100   jmp qword [reloc.renameat]              ; [0x219f70:8]=0x2d66 ; "f-"
0x00002d66      6862000000     push 0x62                               ; 'b'
0x00002d6b      e9c0f9ffff     jmp sym..plt
;-- imp.getpagesize:
0x00002d70      ff2502722100   jmp qword [reloc.getpagesize]           ; [0x219f78:8]=0x2d76 ; "v-"
0x00002d76      6863000000     push 0x63                               ; 'c'
0x00002d7b      e9b0f9ffff     jmp sym..plt
;-- imp.getppid:
0x00002d80      ff25fa712100   jmp qword [reloc.getppid]               ; [0x219f80:8]=0x2d86
0x00002d86      6864000000     push 0x64                               ; 'd'
0x00002d8b      e9a0f9ffff     jmp sym..plt
;-- imp.exit:
0x00002d90      ff25f2712100   jmp qword [reloc.exit]                  ; [0x219f88:8]=0x2d96
0x00002d96      6865000000     push 0x65                               ; 'e'
0x00002d9b      e990f9ffff     jmp sym..plt
;-- imp.fwrite:
0x00002da0      ff25ea712100   jmp qword [reloc.fwrite]                ; [0x219f90:8]=0x2da6
0x00002da6      6866000000     push 0x66                               ; 'f'
0x00002dab      e980f9ffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00002db0      ff25e2712100   jmp qword [reloc.__fprintf_chk]         ; [0x219f98:8]=0x2db6
0x00002db6      6867000000     push 0x67                               ; 'g'
0x00002dbb      e970f9ffff     jmp sym..plt
;-- imp.mbsinit:
0x00002dc0      ff25da712100   jmp qword [reloc.mbsinit]               ; [0x219fa0:8]=0x2dc6
0x00002dc6      6868000000     push 0x68                               ; 'h'
0x00002dcb      e960f9ffff     jmp sym..plt
;-- imp.symlinkat:
0x00002dd0      ff25d2712100   jmp qword [reloc.symlinkat]             ; [0x219fa8:8]=0x2dd6
0x00002dd6      6869000000     push 0x69                               ; 'i'
0x00002ddb      e950f9ffff     jmp sym..plt
;-- imp.iswprint:
0x00002de0      ff25ca712100   jmp qword [reloc.iswprint]              ; [0x219fb0:8]=0x2de6
0x00002de6      686a000000     push 0x6a                               ; 'j'
0x00002deb      e940f9ffff     jmp sym..plt
;-- imp.futimesat:
0x00002df0      ff25c2712100   jmp qword [reloc.futimesat]             ; [0x219fb8:8]=0x2df6
0x00002df6      686b000000     push 0x6b                               ; 'k'
0x00002dfb      e930f9ffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00002e00      ff25ba712100   jmp qword [reloc.__ctype_b_loc]         ; [0x219fc0:8]=0x2e06
0x00002e06      686c000000     push 0x6c                               ; 'l'
0x00002e0b      e920f9ffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00002e10      .qword 0x9066002171b225ff                              ; [13] -r-x section size 16 named .plt.got
0x00002e18      .qword 0x9066002171d225ff
;-- section..text:
;-- .text:
;-- fchmod_or_lchmod:
0x00002e20      85ff           test edi, edi                           ; [14] -r-x section size 64158 named .text
0x00002e22      4889f0         mov rax, rsi
0x00002e25      89d6           mov esi, edx
0x00002e27      7805           js 0x2e2e
0x00002e29      e942feffff     jmp sym.imp.fchmod
0x00002e2e      4889c7         mov rdi, rax
0x00002e31      e95afeffff     jmp sym.imp.chmod
;-- restore_default_fscreatecon_or_die:
0x00002e36      53             push rbx
0x00002e37      e834f9ffff     call sym.imp.__errno_location
0x00002e3c      488d35051901.  lea rsi, str.failed_to_restore_the_default_file_creation_context ; 0x14748 ; "failed to restore the default file creation context"
0x00002e43      4889c3         mov rbx, rax
0x00002e46      ba05000000     mov edx, 5
0x00002e4b      31ff           xor edi, edi
0x00002e4d      c7005f000000   mov dword [rax], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x00002e53      e888faffff     call sym.imp.dcgettext
0x00002e58      8b33           mov esi, dword [rbx]
0x00002e5a      4889c2         mov rdx, rax
0x00002e5d      bf01000000     mov edi, 1
0x00002e62      31c0           xor eax, eax
0x00002e64      e847feffff     call sym.imp.error
0x00002e69      0f1f80000000.  nop dword [rax]
;-- main:
0x00002e70      4157           push r15
0x00002e72      4156           push r14
0x00002e74      41be01000000   mov r14d, 1
0x00002e7a      4155           push r13
0x00002e7c      4154           push r12
0x00002e7e      4189fc         mov r12d, edi
0x00002e81      55             push rbp
0x00002e82      53             push rbx
0x00002e83      4889f5         mov rbp, rsi
0x00002e86      4c8d2df36621.  lea r13, obj.long_opts                  ; 0x219580
0x00002e8d      488d1d88fd00.  lea rbx, [0x00012c1c]
0x00002e94      4881ec280100.  sub rsp, 0x128
0x00002e9b      488b3e         mov rdi, qword [rsi]
0x00002e9e      64488b042528.  mov rax, qword fs:[0x28]
0x00002ea7      488984241801.  mov qword [rsp + 0x118], rax
0x00002eaf      31c0           xor eax, eax
0x00002eb1      4c8d7c2430     lea r15, [rsp + 0x30]
0x00002eb6      e8d5a00000     call sym.set_program_name
0x00002ebb      488d35842101.  lea rsi, [0x00015046]
0x00002ec2      bf06000000     mov edi, 6
0x00002ec7      e884fdffff     call sym.imp.setlocale
0x00002ecc      488d3568fb00.  lea rsi, str.usr_local_share_locale     ; 0x12a3b ; "/usr/local/share/locale"
0x00002ed3      488d3de8fa00.  lea rdi, [0x000129c2]                   ; "coreutils"
0x00002eda      e8d1f9ffff     call sym.imp.bindtextdomain
0x00002edf      488d3ddcfa00.  lea rdi, [0x000129c2]                   ; "coreutils"
0x00002ee6      e885f9ffff     call sym.imp.textdomain
0x00002eeb      488d3dde8300.  lea rdi, sym.close_stdin                ; 0xb2d0 ; "ATUSH\x8b\x1d\xd5\xed "
0x00002ef2      e8b9f90000     call sym.atexit
0x00002ef7      4c89ff         mov rdi, r15
0x00002efa      c60551722100.  mov byte [obj.selinux_enabled], 0       ; [0x21a152:1]=0
0x00002f01      e8ca280000     call sym.cp_options_default
0x00002f06      488d3d46fb00.  lea rdi, str.POSIXLY_CORRECT            ; 0x12a53 ; "POSIXLY_CORRECT"
0x00002f0d      c644244401     mov byte [rsp + 0x44], 1
0x00002f12      c74424340100.  mov dword [rsp + 0x34], 1
0x00002f1a      c644244500     mov byte [rsp + 0x45], 0
0x00002f1f      c644244600     mov byte [rsp + 0x46], 0
0x00002f24      c644244700     mov byte [rsp + 0x47], 0
0x00002f29      c74424380400.  mov dword [rsp + 0x38], 4
0x00002f31      c644244800     mov byte [rsp + 0x48], 0
0x00002f36      c644244900     mov byte [rsp + 0x49], 0
0x00002f3b      c644244c00     mov byte [rsp + 0x4c], 0
0x00002f40      c74424680000.  mov dword [rsp + 0x68], 0
0x00002f48      c644244d00     mov byte [rsp + 0x4d], 0
0x00002f4d      c644245200     mov byte [rsp + 0x52], 0
0x00002f52      c644244e00     mov byte [rsp + 0x4e], 0
0x00002f57      c644244f00     mov byte [rsp + 0x4f], 0
0x00002f5c      c644245000     mov byte [rsp + 0x50], 0
0x00002f61      c644245500     mov byte [rsp + 0x55], 0
0x00002f66      c644245600     mov byte [rsp + 0x56], 0
0x00002f6b      c644245100     mov byte [rsp + 0x51], 0
0x00002f70      c644245700     mov byte [rsp + 0x57], 0
0x00002f75      c644245900     mov byte [rsp + 0x59], 0
0x00002f7a      c644245800     mov byte [rsp + 0x58], 0
0x00002f7f      c644245301     mov byte [rsp + 0x53], 1
0x00002f84      c644245400     mov byte [rsp + 0x54], 0
0x00002f89      c644245a00     mov byte [rsp + 0x5a], 0
0x00002f8e      c744243c0200.  mov dword [rsp + 0x3c], 2
0x00002f96      c644245c00     mov byte [rsp + 0x5c], 0
0x00002f9b      c644245b00     mov byte [rsp + 0x5b], 0
0x00002fa0      c74424400000.  mov dword [rsp + 0x40], 0
0x00002fa8      c644245f00     mov byte [rsp + 0x5f], 0
0x00002fad      c644245d00     mov byte [rsp + 0x5d], 0
0x00002fb2      c644245e00     mov byte [rsp + 0x5e], 0
0x00002fb7      e884f7ffff     call sym.imp.getenv
0x00002fbc      4885c0         test rax, rax
0x00002fbf      488d84248000.  lea rax, [rsp + 0x80]
0x00002fc7      48c744247000.  mov qword [rsp + 0x70], 0
0x00002fd0      0f95442460     setne byte [rsp + 0x60]
0x00002fd5      48c744247800.  mov qword [rsp + 0x78], 0
0x00002fde      48c744242000.  mov qword [rsp + 0x20], 0
0x00002fe7      c644241e00     mov byte [rsp + 0x1e], 0
0x00002fec      48c704240000.  mov qword [rsp], 0
0x00002ff4      c644241f00     mov byte [rsp + 0x1f], 0
0x00002ff9      48c744240800.  mov qword [rsp + 8], 0
0x00003002      48c744241000.  mov qword [rsp + 0x10], 0
0x0000300b      c644241d00     mov byte [rsp + 0x1d], 0
0x00003010      4889442428     mov qword [rsp + 0x28], rax
0x00003015      0f1f00         nop dword [rax]
0x00003018      488d1586fa00.  lea rdx, str.abdfHilLnprst:uvxPRS:TZ    ; 0x12aa5 ; "abdfHilLnprst:uvxPRS:TZ"
0x0000301f      4531c0         xor r8d, r8d
0x00003022      4c89e9         mov rcx, r13
0x00003025      4889ee         mov rsi, rbp
0x00003028      4489e7         mov edi, r12d
0x0000302b      e820f9ffff     call sym.imp.getopt_long
0x00003030      83f8ff         cmp eax, 0xffffffff
0x00003033      0f8467030000   je 0x33a0
0x00003039      0583000000     add eax, 0x83
0x0000303e      3d0b010000     cmp eax, 0x10b
0x00003043      0f87a3050000   ja 0x35ec
0x00003049      48630483       movsxd rax, dword [rbx + rax*4]
0x0000304d      4801d8         add rax, rbx
0x00003050      ffe0           jmp rax
0x00003052      488b3d677021.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a0c0:8]=0
0x00003059      4885ff         test rdi, rdi
0x0000305c      0f85eb020000   jne 0x334d
0x00003062      448874244d     mov byte [rsp + 0x4d], r14b
0x00003067      448874244e     mov byte [rsp + 0x4e], r14b
0x0000306c      448874244f     mov byte [rsp + 0x4f], r14b
0x00003071      4488742454     mov byte [rsp + 0x54], r14b
0x00003076      eba0           jmp 0x3018
0x00003078      c74424380200.  mov dword [rsp + 0x38], 2
0x00003080      eb96           jmp 0x3018
0x00003082      4488742447     mov byte [rsp + 0x47], r14b
0x00003087      eb8f           jmp 0x3018
0x00003089      c74424380300.  mov dword [rsp + 0x38], 3
0x00003091      eb85           jmp 0x3018
0x00003093      4488742446     mov byte [rsp + 0x46], r14b
0x00003098      e97bffffff     jmp 0x3018
0x0000309d      4488742452     mov byte [rsp + 0x52], r14b
0x000030a2      c74424340200.  mov dword [rsp + 0x34], 2
0x000030aa      e969ffffff     jmp 0x3018
0x000030af      488b050a7021.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a0c0:8]=0
0x000030b6      c644241d01     mov byte [rsp + 0x1d], 1
0x000030bb      4885c0         test rax, rax
0x000030be      480f44442408   cmove rax, qword [rsp + 8]
0x000030c4      4889442408     mov qword [rsp + 8], rax
0x000030c9      e94affffff     jmp 0x3018
0x000030ce      803d7d702100.  cmp byte [obj.selinux_enabled], 0       ; [0x21a152:1]=0
0x000030d5      c74424340200.  mov dword [rsp + 0x34], 2
0x000030dd      4488742452     mov byte [rsp + 0x52], r14b
0x000030e2      448874244d     mov byte [rsp + 0x4d], r14b
0x000030e7      448874244e     mov byte [rsp + 0x4e], r14b
0x000030ec      448874244f     mov byte [rsp + 0x4f], r14b
0x000030f1      4488742454     mov byte [rsp + 0x54], r14b
0x000030f6      7405           je 0x30fd
0x000030f8      4488742455     mov byte [rsp + 0x55], r14b
0x000030fd      4488742457     mov byte [rsp + 0x57], r14b
0x00003102      4488742459     mov byte [rsp + 0x59], r14b
0x00003107      448874245a     mov byte [rsp + 0x5a], r14b
0x0000310c      e907ffffff     jmp 0x3018
0x00003111      803d3a702100.  cmp byte [obj.selinux_enabled], 0       ; [0x21a152:1]=0
0x00003118      488b05a16f21.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a0c0:8]=0
0x0000311f      0f843f020000   je 0x3364
0x00003125      4885c0         test rax, rax
0x00003128      0f8443040000   je 0x3571
0x0000312e      4889442420     mov qword [rsp + 0x20], rax
0x00003133      e9e0feffff     jmp 0x3018
0x00003138      c644241e01     mov byte [rsp + 0x1e], 1
0x0000313d      e9d6feffff     jmp 0x3018
0x00003142      488b05776f21.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a0c0:8]=0
0x00003149      c644241d01     mov byte [rsp + 0x1d], 1
0x0000314e      4889442410     mov qword [rsp + 0x10], rax
0x00003153      e9c0feffff     jmp 0x3018
0x00003158      448874245a     mov byte [rsp + 0x5a], r14b
0x0000315d      e9b6feffff     jmp 0x3018
0x00003162      c74424340200.  mov dword [rsp + 0x34], 2
0x0000316a      e9a9feffff     jmp 0x3018
0x0000316f      c74424340400.  mov dword [rsp + 0x34], 4
0x00003177      e99cfeffff     jmp 0x3018
0x0000317c      c74424340300.  mov dword [rsp + 0x34], 3
0x00003184      e98ffeffff     jmp 0x3018
0x00003189      488d0508f900.  lea rax, str.Jim_Meyering               ; 0x12a98 ; "Jim Meyering"
0x00003190      488b3d116f21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x00003197      488b0d826e21.  mov rcx, qword [obj.Version]            ; [0x21a020:8]=0x15131 str.8.31 ; "1Q\x01"
0x0000319e      6a00           push 0
0x000031a0      4c8d0dcff800.  lea r9, str.David_MacKenzie             ; 0x12a76 ; "David MacKenzie"
0x000031a7      4c8d05d8f800.  lea r8, str.Torbjorn_Granlund           ; 0x12a86 ; "Torbjorn Granlund"
0x000031ae      50             push rax
0x000031af      488d1508f800.  lea rdx, str.GNU_coreutils              ; 0x129be ; "GNU coreutils"
0x000031b6      488d3588f700.  lea rsi, [0x00012945]                   ; "cp"
0x000031bd      31c0           xor eax, eax
0x000031bf      e8bcdc0000     call sym.version_etc
0x000031c4      31ff           xor edi, edi
0x000031c6      e8c5fbffff     call sym.imp.exit
0x000031cb      4488742445     mov byte [rsp + 0x45], r14b
0x000031d0      e943feffff     jmp 0x3018
0x000031d5      448835746f21.  mov byte [obj.remove_trailing_slashes], r14b ; [0x21a150:1]=0
0x000031dc      e937feffff     jmp 0x3018
0x000031e1      4c8b0d406e21.  mov r9, qword [obj.argmatch_die]        ; [0x21a028:8]=0xa770 sym.__argmatch_die ; "p\xa7"
0x000031e8      488b35d16e21.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a0c0:8]=0
0x000031ef      488d156a6721.  lea rdx, obj.sparse_type_string         ; 0x219960
0x000031f6      488d0d83fe00.  lea rcx, obj.sparse_type                ; 0x13080
0x000031fd      488d3d5ff800.  lea rdi, str.sparse                     ; 0x12a63 ; "--sparse"
0x00003204      41b804000000   mov r8d, 4
0x0000320a      e831780000     call sym.__xargmatch_internal
0x0000320f      488d156afe00.  lea rdx, obj.sparse_type                ; 0x13080
0x00003216      8b0482         mov eax, dword [rdx + rax*4]
0x00003219      8944243c       mov dword [rsp + 0x3c], eax
0x0000321d      e9f6fdffff     jmp 0x3018
0x00003222      488b35976e21.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a0c0:8]=0
0x00003229      4885f6         test rsi, rsi
0x0000322c      0f8461010000   je 0x3393
0x00003232      4c8b0def6d21.  mov r9, qword [obj.argmatch_die]        ; [0x21a028:8]=0xa770 sym.__argmatch_die ; "p\xa7"
0x00003239      488d15006721.  lea rdx, obj.reflink_type_string        ; 0x219940
0x00003240      488d0d29fe00.  lea rcx, obj.reflink_type               ; 0x13070
0x00003247      488d3d1ef800.  lea rdi, str.reflink                    ; 0x12a6c ; "--reflink"
0x0000324e      41b804000000   mov r8d, 4
0x00003254      e8e7770000     call sym.__xargmatch_internal
0x00003259      488d1510fe00.  lea rdx, obj.reflink_type               ; 0x13070
0x00003260      8b0482         mov eax, dword [rdx + rax*4]
0x00003263      89442468       mov dword [rsp + 0x68], eax
0x00003267      e9acfdffff     jmp 0x3018
0x0000326c      448835de6e21.  mov byte [obj.parents_option], r14b     ; [0x21a151:1]=0
0x00003273      e9a0fdffff     jmp 0x3018
0x00003278      488b3d416e21.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a0c0:8]=0
0x0000327f      31d2           xor edx, edx
0x00003281      4c89fe         mov rsi, r15
0x00003284      e857050000     call sym.decode_preserve_arg
0x00003289      e98afdffff     jmp 0x3018
0x0000328e      c644241f01     mov byte [rsp + 0x1f], 1
0x00003293      e980fdffff     jmp 0x3018
0x00003298      c644245300     mov byte [rsp + 0x53], 0
0x0000329d      e976fdffff     jmp 0x3018
0x000032a2      448874244c     mov byte [rsp + 0x4c], r14b
0x000032a7      e96cfdffff     jmp 0x3018
0x000032ac      448874245e     mov byte [rsp + 0x5e], r14b
0x000032b1      e962fdffff     jmp 0x3018
0x000032b6      448874245d     mov byte [rsp + 0x5d], r14b
0x000032bb      e958fdffff     jmp 0x3018
0x000032c0      48833c2400     cmp qword [rsp], 0
0x000032c5      0f852b030000   jne 0x35f6
0x000032cb      488b542428     mov rdx, qword [rsp + 0x28]
0x000032d0      488b35e96d21.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a0c0:8]=0
0x000032d7      bf01000000     mov edi, 1
0x000032dc      e8bff8ffff     call sym.imp.__xstat
0x000032e1      85c0           test eax, eax
0x000032e3      0f859c030000   jne 0x3685
0x000032e9      488b05d06d21.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a0c0:8]=0
0x000032f0      48890424       mov qword [rsp], rax
0x000032f4      8b8424980000.  mov eax, dword [rsp + 0x98]
0x000032fb      2500f00000     and eax, 0xf000
0x00003300      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00003305      0f840dfdffff   je 0x3018
0x0000330b      488b3424       mov rsi, qword [rsp]
0x0000330f      bf04000000     mov edi, 4
0x00003314      e897b70000     call sym.quotearg_style
0x00003319      488d35fbf600.  lea rsi, str.target__s_is_not_a_directory ; 0x12a1b ; "target %s is not a directory"
0x00003320      4889c3         mov rbx, rax
0x00003323      ba05000000     mov edx, 5
0x00003328      31ff           xor edi, edi
0x0000332a      e8b1f5ffff     call sym.imp.dcgettext
0x0000332f      4889d9         mov rcx, rbx
0x00003332      4889c2         mov rdx, rax
0x00003335      31f6           xor esi, esi
0x00003337      bf01000000     mov edi, 1
0x0000333c      31c0           xor eax, eax
0x0000333e      e86df9ffff     call sym.imp.error
0x00003343      448874245c     mov byte [rsp + 0x5c], r14b
0x00003348      e9cbfcffff     jmp 0x3018
0x0000334d      ba01000000     mov edx, 1
0x00003352      4c89fe         mov rsi, r15
0x00003355      e886040000     call sym.decode_preserve_arg
0x0000335a      4488742454     mov byte [rsp + 0x54], r14b
0x0000335f      e9b4fcffff     jmp 0x3018
0x00003364      4885c0         test rax, rax
0x00003367      0f84abfcffff   je 0x3018
0x0000336d      488d35f41101.  lea rsi, str.warning:_ignoring___context__it_requires_an_SELinux_enabled_kernel ; 0x14568 ; "warning: ignoring --context; it requires an SELinux-enabled kernel"
0x00003374      31ff           xor edi, edi
0x00003376      ba05000000     mov edx, 5
0x0000337b      e860f5ffff     call sym.imp.dcgettext
0x00003380      31f6           xor esi, esi
0x00003382      4889c2         mov rdx, rax
0x00003385      31ff           xor edi, edi
0x00003387      31c0           xor eax, eax
0x00003389      e822f9ffff     call sym.imp.error
0x0000338e      e985fcffff     jmp 0x3018
0x00003393      c74424680200.  mov dword [rsp + 0x68], 2
0x0000339b      e978fcffff     jmp 0x3018
0x000033a0      807c244700     cmp byte [rsp + 0x47], 0
0x000033a5      0f85f7000000   jne 0x34a2
0x000033ab      837c243802     cmp dword [rsp + 0x38], 2
0x000033b0      0f8408010000   je 0x34be
0x000033b6      807c241d00     cmp byte [rsp + 0x1d], 0
0x000033bb      0f840d010000   je 0x34ce
0x000033c1      837c246802     cmp dword [rsp + 0x68], 2
0x000033c6      0f84af010000   je 0x357b
0x000033cc      488d35eaf600.  lea rsi, str.backup_type                ; 0x12abd ; "backup type"
0x000033d3      31ff           xor edi, edi
0x000033d5      ba05000000     mov edx, 5
0x000033da      e801f5ffff     call sym.imp.dcgettext
0x000033df      488b742408     mov rsi, qword [rsp + 8]
0x000033e4      4889c7         mov rdi, rax
0x000033e7      e8147e0000     call sym.xget_version
0x000033ec      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000033f1      89442430       mov dword [rsp + 0x30], eax
0x000033f5      e806770000     call sym.set_simple_backup_suffix
0x000033fa      837c243401     cmp dword [rsp + 0x34], 1
0x000033ff      0f84f2000000   je 0x34f7
0x00003405      807c245a00     cmp byte [rsp + 0x5a], 0
0x0000340a      0f85fd000000   jne 0x350d
0x00003410      807c245100     cmp byte [rsp + 0x51], 0
0x00003415      0fb6442456     movzx eax, byte [rsp + 0x56]
0x0000341a      750c           jne 0x3428
0x0000341c      48837c242000   cmp qword [rsp + 0x20], 0
0x00003422      0f841e010000   je 0x3546
0x00003428      84c0           test al, al
0x0000342a      0f85eb000000   jne 0x351b
0x00003430      c644245500     mov byte [rsp + 0x55], 0
0x00003435      48837c242000   cmp qword [rsp + 0x20], 0
0x0000343b      0f8502020000   jne 0x3643
0x00003441      807c245800     cmp byte [rsp + 0x58], 0
0x00003446      0f85d3010000   jne 0x361f
0x0000344c      e84f6a0000     call sym.hash_init
0x00003451      486315606c21.  movsxd rdx, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x21a0b8:4]=0
0x00003458      0fb64c241e     movzx ecx, byte [rsp + 0x1e]
0x0000345d      4489e7         mov edi, r12d
0x00003460      4d89f8         mov r8, r15
0x00003463      29d7           sub edi, edx
0x00003465      488d74d500     lea rsi, [rbp + rdx*8]
0x0000346a      488b1424       mov rdx, qword [rsp]
0x0000346e      e86d130000     call sym.do_copy
0x00003473      83f001         xor eax, 1
0x00003476      488b8c241801.  mov rcx, qword [rsp + 0x118]
0x0000347e      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003487      0fb6c0         movzx eax, al
0x0000348a      0f858a010000   jne 0x361a
0x00003490      4881c4280100.  add rsp, 0x128
0x00003497      5b             pop rbx
0x00003498      5d             pop rbp
0x00003499      415c           pop r12
0x0000349b      415d           pop r13
0x0000349d      415e           pop r14
0x0000349f      415f           pop r15
0x000034a1      c3             ret
0x000034a2      807c245c00     cmp byte [rsp + 0x5c], 0
0x000034a7      0f84fefeffff   je 0x33ab
0x000034ad      ba05000000     mov edx, 5
0x000034b2      488d35f71001.  lea rsi, str.cannot_make_both_hard_and_symbolic_links ; 0x145b0 ; "cannot make both hard and symbolic links"
0x000034b9      e919010000     jmp 0x35d7
0x000034be      807c241d00     cmp byte [rsp + 0x1d], 0
0x000034c3      c644245d00     mov byte [rsp + 0x5d], 0
0x000034c8      0f85fd000000   jne 0x35cb
0x000034ce      31c0           xor eax, eax
0x000034d0      837c246802     cmp dword [rsp + 0x68], 2
0x000034d5      0f8511ffffff   jne 0x33ec
0x000034db      837c243c02     cmp dword [rsp + 0x3c], 2
0x000034e0      0f8406ffffff   je 0x33ec
0x000034e6      ba05000000     mov edx, 5
0x000034eb      488d352e1101.  lea rsi, str.reflink_can_be_used_only_with___sparse_auto ; 0x14620 ; "--reflink can be used only with --sparse=auto"
0x000034f2      e9e0000000     jmp 0x35d7
0x000034f7      807c245a00     cmp byte [rsp + 0x5a], 0
0x000034fc      7466           je 0x3564
0x000034fe      807c244700     cmp byte [rsp + 0x47], 0
0x00003503      755f           jne 0x3564
0x00003505      c74424340200.  mov dword [rsp + 0x34], 2
0x0000350d      0fb644241f     movzx eax, byte [rsp + 0x1f]
0x00003512      88442444       mov byte [rsp + 0x44], al
0x00003516      e9f5feffff     jmp 0x3410
0x0000351b      807c245500     cmp byte [rsp + 0x55], 0
0x00003520      7433           je 0x3555
0x00003522      488d35271101.  lea rsi, str.cannot_set_target_context_and_preserve_it ; 0x14650 ; "cannot set target context and preserve it"
0x00003529      ba05000000     mov edx, 5
0x0000352e      31ff           xor edi, edi
0x00003530      e8abf3ffff     call sym.imp.dcgettext
0x00003535      31f6           xor esi, esi
0x00003537      4889c2         mov rdx, rax
0x0000353a      bf01000000     mov edi, 1
0x0000353f      31c0           xor eax, eax
0x00003541      e86af7ffff     call sym.imp.error
0x00003546      807c245500     cmp byte [rsp + 0x55], 0
0x0000354b      743e           je 0x358b
0x0000354d      84c0           test al, al
0x0000354f      0f84ecfeffff   je 0x3441
0x00003555      803df66b2100.  cmp byte [obj.selinux_enabled], 0       ; [0x21a152:1]=0
0x0000355c      0f85d3feffff   jne 0x3435
0x00003562      eb3c           jmp 0x35a0
0x00003564      c74424340400.  mov dword [rsp + 0x34], 4
0x0000356c      e994feffff     jmp 0x3405
0x00003571      4488742451     mov byte [rsp + 0x51], r14b
0x00003576      e99dfaffff     jmp 0x3018
0x0000357b      837c243c02     cmp dword [rsp + 0x3c], 2
0x00003580      0f8446feffff   je 0x33cc
0x00003586      e95bffffff     jmp 0x34e6
0x0000358b      84c0           test al, al
0x0000358d      0f84aefeffff   je 0x3441
0x00003593      803db86b2100.  cmp byte [obj.selinux_enabled], 0       ; [0x21a152:1]=0
0x0000359a      0f85a1feffff   jne 0x3441
0x000035a0      488d35d91001.  lea rsi, str.cannot_preserve_security_context_without_an_SELinux_enabled_kernel ; 0x14680 ; "cannot preserve security context without an SELinux-enabled kernel"
0x000035a7      ba05000000     mov edx, 5
0x000035ac      31ff           xor edi, edi
0x000035ae      e82df3ffff     call sym.imp.dcgettext
0x000035b3      31f6           xor esi, esi
0x000035b5      4889c2         mov rdx, rax
0x000035b8      bf01000000     mov edi, 1
0x000035bd      31c0           xor eax, eax
0x000035bf      e8ecf6ffff     call sym.imp.error
0x000035c4      31ff           xor edi, edi
0x000035c6      e8550c0000     call sym.usage
0x000035cb      488d350e1001.  lea rsi, str.options___backup_and___no_clobber_are_mutually_exclusive ; 0x145e0 ; "options --backup and --no-clobber are mutually exclusive"
0x000035d2      ba05000000     mov edx, 5
0x000035d7      31ff           xor edi, edi
0x000035d9      e802f3ffff     call sym.imp.dcgettext
0x000035de      31f6           xor esi, esi
0x000035e0      4889c2         mov rdx, rax
0x000035e3      31ff           xor edi, edi
0x000035e5      31c0           xor eax, eax
0x000035e7      e8c4f6ffff     call sym.imp.error
0x000035ec      bf01000000     mov edi, 1
0x000035f1      e82a0c0000     call sym.usage
0x000035f6      488d35430f01.  lea rsi, str.multiple_target_directories_specified ; 0x14540 ; "multiple target directories specified"
0x000035fd      ba05000000     mov edx, 5
0x00003602      31ff           xor edi, edi
0x00003604      e8d7f2ffff     call sym.imp.dcgettext
0x00003609      31f6           xor esi, esi
0x0000360b      4889c2         mov rdx, rax
0x0000360e      bf01000000     mov edi, 1
0x00003613      31c0           xor eax, eax
0x00003615      e896f6ffff     call sym.imp.error
0x0000361a      e811f3ffff     call sym.imp.__stack_chk_fail
0x0000361f      488d35da1001.  lea rsi, str.cannot_preserve_extended_attributes__cp_is_built_without_xattr_support ; 0x14700 ; "cannot preserve extended attributes, cp is built without xattr support"
0x00003626      ba05000000     mov edx, 5
0x0000362b      31ff           xor edi, edi
0x0000362d      e8aef2ffff     call sym.imp.dcgettext
0x00003632      31f6           xor esi, esi
0x00003634      4889c2         mov rdx, rax
0x00003637      bf01000000     mov edi, 1
0x0000363c      31c0           xor eax, eax
0x0000363e      e86df6ffff     call sym.imp.error
0x00003643      e828f1ffff     call sym.imp.__errno_location
0x00003648      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000364d      c7005f000000   mov dword [rax], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x00003653      4889c3         mov rbx, rax
0x00003656      e825b70000     call sym.quote
0x0000365b      488d35661001.  lea rsi, str.failed_to_set_default_file_creation_context_to__s ; 0x146c8 ; "failed to set default file creation context to %s"
0x00003662      ba05000000     mov edx, 5
0x00003667      31ff           xor edi, edi
0x00003669      4889c5         mov rbp, rax
0x0000366c      e86ff2ffff     call sym.imp.dcgettext
0x00003671      8b33           mov esi, dword [rbx]
0x00003673      4889c2         mov rdx, rax
0x00003676      4889e9         mov rcx, rbp
0x00003679      bf01000000     mov edi, 1
0x0000367e      31c0           xor eax, eax
0x00003680      e82bf6ffff     call sym.imp.error
0x00003685      488b35346a21.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a0c0:8]=0
0x0000368c      bf04000000     mov edi, 4
0x00003691      e81ab40000     call sym.quotearg_style
0x00003696      488d3560f200.  lea rsi, str.failed_to_access__s        ; 0x128fd ; "failed to access %s"
0x0000369d      ba05000000     mov edx, 5
0x000036a2      31ff           xor edi, edi
0x000036a4      4889c5         mov rbp, rax
0x000036a7      e834f2ffff     call sym.imp.dcgettext
0x000036ac      4889c3         mov rbx, rax
0x000036af      e8bcf0ffff     call sym.imp.__errno_location
0x000036b4      8b30           mov esi, dword [rax]
0x000036b6      4889e9         mov rcx, rbp
0x000036b9      4889da         mov rdx, rbx
0x000036bc      bf01000000     mov edi, 1
0x000036c1      31c0           xor eax, eax
0x000036c3      e8e8f5ffff     call sym.imp.error
0x000036c8      0f1f84000000.  nop dword [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x000036d0      31ed           xor ebp, ebp
0x000036d2      4989d1         mov r9, rdx
0x000036d5      5e             pop rsi
0x000036d6      4889e2         mov rdx, rsp
0x000036d9      4883e4f0       and rsp, 0xfffffffffffffff0
0x000036dd      50             push rax
0x000036de      54             push rsp
0x000036df      4c8d05baf100.  lea r8, sym.__libc_csu_fini             ; 0x128a0
0x000036e6      488d0d43f100.  lea rcx, sym.__libc_csu_init            ; 0x12830 ; "AWAVI\x89\xd7AUATL\x8d%\xeel "
0x000036ed      488d3d7cf7ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x2e70 ; "AWAVA\xbe\x01"
0x000036f4      ff15de682100   call qword [reloc.__libc_start_main]    ; [0x219fd8:8]=0
0x000036fa      f4             hlt
0x000036fb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00003700      488d3d996921.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x21a0a0
0x00003707      55             push rbp
0x00003708      488d05916921.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x21a0a0
0x0000370f      4839f8         cmp rax, rdi
0x00003712      4889e5         mov rbp, rsp
0x00003715      7419           je 0x3730
0x00003717      488b05b26821.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x219fd0:8]=0
0x0000371e      4885c0         test rax, rax
0x00003721      740d           je 0x3730
0x00003723      5d             pop rbp
0x00003724      ffe0           jmp rax
0x00003726      662e0f1f8400.  nop word cs:[rax + rax]
0x00003730      5d             pop rbp
0x00003731      c3             ret
0x00003732      0f1f4000       nop dword [rax]
0x00003736      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00003740      488d3d596921.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x21a0a0
0x00003747      488d35526921.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x21a0a0
0x0000374e      55             push rbp
0x0000374f      4829fe         sub rsi, rdi
0x00003752      4889e5         mov rbp, rsp
0x00003755      48c1fe03       sar rsi, 3
0x00003759      4889f0         mov rax, rsi
0x0000375c      48c1e83f       shr rax, 0x3f
0x00003760      4801c6         add rsi, rax
0x00003763      48d1fe         sar rsi, 1
0x00003766      7418           je 0x3780
0x00003768      488b05796821.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x219fe8:8]=0
0x0000376f      4885c0         test rax, rax
0x00003772      740c           je 0x3780
0x00003774      5d             pop rbp
0x00003775      ffe0           jmp rax
0x00003777      660f1f840000.  nop word [rax + rax]
0x00003780      5d             pop rbp
0x00003781      c3             ret
0x00003782      0f1f4000       nop dword [rax]
0x00003786      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00003790      803d51692100.  cmp byte [obj.completed.7697], 0        ; [0x21a0e8:1]=0
0x00003797      752f           jne 0x37c8
0x00003799      48833d4f6821.  cmp qword [reloc.__cxa_finalize], 0     ; [0x219ff0:8]=0
0x000037a1      55             push rbp
0x000037a2      4889e5         mov rbp, rsp
0x000037a5      740c           je 0x37b3
0x000037a7      488b3d5a6821.  mov rdi, qword [obj.__dso_handle]       ; [0x21a008:8]=0x21a008 obj.__dso_handle
0x000037ae      e865f6ffff     call 0x2e18
0x000037b3      e848ffffff     call sym.deregister_tm_clones
0x000037b8      c60529692100.  mov byte [obj.completed.7697], 1        ; [0x21a0e8:1]=0
0x000037bf      5d             pop rbp
0x000037c0      c3             ret
0x000037c1      0f1f80000000.  nop dword [rax]
0x000037c8      f3c3           ret
0x000037ca      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x000037d0      55             push rbp
0x000037d1      4889e5         mov rbp, rsp
0x000037d4      5d             pop rbp
0x000037d5      e966ffffff     jmp sym.register_tm_clones
0x000037da      660f1f440000   nop word [rax + rax]
;-- decode_preserve_arg:
0x000037e0      4157           push r15                                ; /src:838
0x000037e2      4156           push r14
0x000037e4      4c8d35f9f000.  lea r14, str.preserve                   ; 0x128e4 ; "--preserve"
0x000037eb      4155           push r13
0x000037ed      4154           push r12
0x000037ef      4189d4         mov r12d, edx
0x000037f2      55             push rbp
0x000037f3      53             push rbx
0x000037f4      4889f5         mov rbp, rsi
0x000037f7      89d3           mov ebx, edx
0x000037f9      4c8d2d50f800.  lea r13, obj.preserve_vals.7370         ; 0x13050
0x00003800      4883ec18       sub rsp, 0x18
0x00003804      e847da0000     call sym.xstrdup                        ; /src:863
0x00003809      4989c7         mov r15, rax
0x0000380c      4889442408     mov qword [rsp + 8], rax
0x00003811      488d05d7f000.  lea rax, str.no_preserve                ; 0x128ef ; "--no-preserve"
0x00003818      4584e4         test r12b, r12b
0x0000381b      4c8d25def300.  lea r12, [0x00012c00]                   ; /src:878
0x00003822      490f45c6       cmovne rax, r14
0x00003826      48890424       mov qword [rsp], rax
0x0000382a      660f1f440000   nop word [rax + rax]
0x00003830      be2c000000     mov esi, 0x2c                           ; /src:868 ; ','
0x00003835      4c89ff         mov rdi, r15
0x00003838      4531f6         xor r14d, r14d
0x0000383b      e830f1ffff     call sym.imp.strchr
0x00003840      4885c0         test rax, rax                           ; /src:872
0x00003843      7407           je 0x384c
0x00003845      4c8d7001       lea r14, [rax + 1]                      ; /src:873
0x00003849      c60000         mov byte [rax], 0
0x0000384c      4c8b0dd56721.  mov r9, qword [obj.argmatch_die]        ; /src:876 ; [0x21a028:8]=0xa770 sym.__argmatch_die ; "p\xa7"
0x00003853      488b3c24       mov rdi, qword [rsp]
0x00003857      488d0df2f700.  lea rcx, obj.preserve_vals.7370         ; 0x13050
0x0000385e      488d15db5c21.  lea rdx, obj.preserve_args.7371         ; 0x219540
0x00003865      41b804000000   mov r8d, 4
0x0000386b      4c89fe         mov rsi, r15
0x0000386e      e8cd710000     call sym.__xargmatch_internal
0x00003873      41837c850006   cmp dword [r13 + rax*4], 6              ; /src:878
0x00003879      0f879e000000   ja 0x391d
0x0000387f      418b448500     mov eax, dword [r13 + rax*4]
0x00003884      49630484       movsxd rax, dword [r12 + rax*4]
0x00003888      4c01e0         add rax, r12
0x0000388b      ffe0           jmp rax
0x0000388d      0f1f00         nop dword [rax]
0x00003890      885d27         mov byte [rbp + 0x27], bl               ; /src:903
0x00003893      885d28         mov byte [rbp + 0x28], bl               ; /src:904
0x00003896      662e0f1f8400.  nop word cs:[rax + rax]
0x000038a0      4d85f6         test r14, r14                           ; /src:923
0x000038a3      4d89f7         mov r15, r14
0x000038a6      7588           jne 0x3830
0x000038a8      488b7c2408     mov rdi, qword [rsp + 8]                ; /src:925
0x000038ad      4883c418       add rsp, 0x18                           ; /src:926
0x000038b1      5b             pop rbx
0x000038b2      5d             pop rbp
0x000038b3      415c           pop r12
0x000038b5      415d           pop r13
0x000038b7      415e           pop r14
0x000038b9      415f           pop r15
0x000038bb      e950f5ffff     jmp sym..plt.got                        ; /src:925
0x000038c0      885d26         mov byte [rbp + 0x26], bl               ; /src:898
0x000038c3      885d25         mov byte [rbp + 0x25], bl               ; /src:899
0x000038c6      ebd8           jmp 0x38a0                              ; /src:900
0x000038c8      0f1f84000000.  nop dword [rax + rax]
0x000038d0      885d22         mov byte [rbp + 0x22], bl               ; /src:894
0x000038d3      ebcb           jmp 0x38a0                              ; /src:895
0x000038d5      0f1f00         nop dword [rax]
0x000038d8      885d1d         mov byte [rbp + 0x1d], bl               ; /src:890
0x000038db      ebc3           jmp 0x38a0                              ; /src:891
0x000038dd      0f1f00         nop dword [rax]
0x000038e0      885d1f         mov byte [rbp + 0x1f], bl               ; /src:886
0x000038e3      ebbb           jmp 0x38a0                              ; /src:887
0x000038e5      0f1f00         nop dword [rax]
0x000038e8      89d8           mov eax, ebx                            ; /src:882
0x000038ea      885d1e         mov byte [rbp + 0x1e], bl               ; /src:881
0x000038ed      83f001         xor eax, 1                              ; /src:882
0x000038f0      884520         mov byte [rbp + 0x20], al
0x000038f3      ebab           jmp 0x38a0                              ; /src:883
0x000038f5      0f1f00         nop dword [rax]
0x000038f8      89d8           mov eax, ebx                            ; /src:912
0x000038fa      885d1e         mov byte [rbp + 0x1e], bl               ; /src:908
0x000038fd      885d1f         mov byte [rbp + 0x1f], bl               ; /src:909
0x00003900      83f001         xor eax, 1                              ; /src:912
0x00003903      803d48682100.  cmp byte [obj.selinux_enabled], 0       ; /src:913 ; [0x21a152:1]=0
0x0000390a      885d1d         mov byte [rbp + 0x1d], bl               ; /src:910
0x0000390d      885d22         mov byte [rbp + 0x22], bl               ; /src:911
0x00003910      884520         mov byte [rbp + 0x20], al               ; /src:912
0x00003913      7403           je 0x3918                               ; /src:913
0x00003915      885d25         mov byte [rbp + 0x25], bl               ; /src:914
0x00003918      885d27         mov byte [rbp + 0x27], bl               ; /src:915
0x0000391b      eb83           jmp 0x38a0                              ; /src:916
0x0000391d      e83eeeffff     call sym.imp.abort                      ; /src:919
0x00003922      0f1f4000       nop dword [rax]
0x00003926      662e0f1f8400.  nop word cs:[rax + rax]
;-- target_directory_operand:
0x00003930      4156           push r14                                ; /src:575
0x00003932      4155           push r13
0x00003934      4989d6         mov r14, rdx
0x00003937      4154           push r12
0x00003939      55             push rbp
0x0000393a      4889f2         mov rdx, rsi                            ; .//coreutils-8.31/lib:451
0x0000393d      53             push rbx
0x0000393e      4889fd         mov rbp, rdi
0x00003941      4889f3         mov rbx, rsi
0x00003944      4889fe         mov rsi, rdi
0x00003947      bf01000000     mov edi, 1
0x0000394c      4189cd         mov r13d, ecx
0x0000394f      e84cf2ffff     call sym.imp.__xstat
0x00003954      85c0           test eax, eax
0x00003956      751d           jne 0x3975
0x00003958      8b5318         mov edx, dword [rbx + 0x18]
0x0000395b      81e200f00000   and edx, 0xf000
0x00003961      81fa00400000   cmp edx, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00003967      7444           je 0x39ad
0x00003969      83e001         and eax, 1
0x0000396c      5b             pop rbx
0x0000396d      5d             pop rbp
0x0000396e      415c           pop r12
0x00003970      415d           pop r13
0x00003972      415e           pop r14
0x00003974      c3             ret
0x00003975      e8f6edffff     call sym.imp.__errno_location
0x0000397a      448b20         mov r12d, dword [rax]
0x0000397d      4585e4         test r12d, r12d
0x00003980      7515           jne 0x3997
0x00003982      8b4318         mov eax, dword [rbx + 0x18]
0x00003985      2500f00000     and eax, 0xf000
0x0000398a      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x0000398f      0f94c0         sete al
0x00003992      0fb6c0         movzx eax, al
0x00003995      ebd2           jmp 0x3969
0x00003997      4183fc02       cmp r12d, 2
0x0000399b      7417           je 0x39b4
0x0000399d      4584ed         test r13b, r13b
0x000039a0      741a           je 0x39bc
0x000039a2      c74318000000.  mov dword [rbx + 0x18], 0
0x000039a9      31c0           xor eax, eax
0x000039ab      ebbf           jmp 0x396c
0x000039ad      b801000000     mov eax, 1
0x000039b2      ebb8           jmp 0x396c
0x000039b4      41c60601       mov byte [r14], 1
0x000039b8      31c0           xor eax, eax
0x000039ba      ebb0           jmp 0x396c
0x000039bc      4889ee         mov rsi, rbp
0x000039bf      bf04000000     mov edi, 4
0x000039c4      e8e7b00000     call sym.quotearg_style
0x000039c9      488d352def00.  lea rsi, str.failed_to_access__s        ; 0x128fd ; "failed to access %s"
0x000039d0      4889c3         mov rbx, rax
0x000039d3      ba05000000     mov edx, 5
0x000039d8      31ff           xor edi, edi
0x000039da      e801efffff     call sym.imp.dcgettext
0x000039df      4889d9         mov rcx, rbx
0x000039e2      4889c2         mov rdx, rax
0x000039e5      4489e6         mov esi, r12d
0x000039e8      bf01000000     mov edi, 1
0x000039ed      31c0           xor eax, eax
0x000039ef      e8bcf2ffff     call sym.imp.error
0x000039f4      6690           nop
0x000039f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- make_dir_parents_private:
0x00003a00      55             push rbp
0x00003a01      4889e5         mov rbp, rsp
0x00003a04      4157           push r15
0x00003a06      4156           push r14
0x00003a08      4155           push r13
0x00003a0a      4154           push r12
0x00003a0c      4d89cd         mov r13, r9
0x00003a0f      53             push rbx
0x00003a10      4989f7         mov r15, rsi
0x00003a13      4889fb         mov rbx, rdi
0x00003a16      4881ec680100.  sub rsp, 0x168
0x00003a1d      48898d80feff.  mov qword [rbp - 0x180], rcx
0x00003a24      4c898588feff.  mov qword [rbp - 0x178], r8
0x00003a2b      48899570feff.  mov qword [rbp - 0x190], rdx
0x00003a32      64488b142528.  mov rdx, qword fs:[0x28]
0x00003a3b      488955c8       mov qword [rbp - 0x38], rdx
0x00003a3f      31d2           xor edx, edx
0x00003a41      e8baeeffff     call sym.imp.strlen
0x00003a46      488d5001       lea rdx, [rax + 1]
0x00003a4a      4883c01f       add rax, 0x1f
0x00003a4e      4889de         mov rsi, rbx
0x00003a51      4883e0f0       and rax, 0xfffffffffffffff0
0x00003a55      4829c4         sub rsp, rax
0x00003a58      488d7c240f     lea rdi, [rsp + 0xf]
0x00003a5d      4883e7f0       and rdi, 0xfffffffffffffff0
0x00003a61      e8faf0ffff     call sym.imp.memcpy
0x00003a66      4889c7         mov rdi, rax
0x00003a69      4989c4         mov r12, rax
0x00003a6c      e85f7a0000     call sym.dir_len
0x00003a71      4989c6         mov r14, rax
0x00003a74      4883c01f       add rax, 0x1f
0x00003a78      4c89e6         mov rsi, r12
0x00003a7b      4883e0f0       and rax, 0xfffffffffffffff0
0x00003a7f      4c89f2         mov rdx, r14
0x00003a82      4829c4         sub rsp, rax
0x00003a85      488d5c240f     lea rbx, [rsp + 0xf]
0x00003a8a      4883e3f0       and rbx, 0xfffffffffffffff0
0x00003a8e      4889df         mov rdi, rbx
0x00003a91      e8caf0ffff     call sym.imp.memcpy
0x00003a96      488b8580feff.  mov rax, qword [rbp - 0x180]
0x00003a9d      42c6043300     mov byte [rbx + r14], 0
0x00003aa2      4889de         mov rsi, rbx
0x00003aa5      bf01000000     mov edi, 1
0x00003aaa      48c700000000.  mov qword [rax], 0
0x00003ab1      488d85a0feff.  lea rax, [rbp - 0x160]
0x00003ab8      4889c2         mov rdx, rax
0x00003abb      48898590feff.  mov qword [rbp - 0x170], rax
0x00003ac2      e8d9f0ffff     call sym.imp.__xstat
0x00003ac7      85c0           test eax, eax
0x00003ac9      0f84b1030000   je 0x3e80
0x00003acf      4b8d3c3c       lea rdi, [r12 + r15]
0x00003ad3      803f2f         cmp byte [rdi], 0x2f
0x00003ad6      4889bd98feff.  mov qword [rbp - 0x168], rdi
0x00003add      0f8545040000   jne 0x3f28
0x00003ae3      0f1f440000     nop dword [rax + rax]
0x00003ae8      4883c701       add rdi, 1
0x00003aec      803f2f         cmp byte [rdi], 0x2f
0x00003aef      74f7           je 0x3ae8
0x00003af1      488d8530ffff.  lea rax, [rbp - 0xd0]
0x00003af8      48898578feff.  mov qword [rbp - 0x188], rax
0x00003aff      90             nop
0x00003b00      be2f000000     mov esi, 0x2f                           ; '/'
0x00003b05      e866eeffff     call sym.imp.strchr
0x00003b0a      4885c0         test rax, rax
0x00003b0d      4889c3         mov rbx, rax
0x00003b10      0f8486030000   je 0x3e9c
0x00003b16      488b9590feff.  mov rdx, qword [rbp - 0x170]
0x00003b1d      c60300         mov byte [rbx], 0
0x00003b20      4c89e6         mov rsi, r12
0x00003b23      bf01000000     mov edi, 1
0x00003b28      e873f0ffff     call sym.imp.__xstat
0x00003b2d      85c0           test eax, eax
0x00003b2f      4189c6         mov r14d, eax
0x00003b32      0f8588000000   jne 0x3bc0
0x00003b38      41f7451c00ff.  test dword [r13 + 0x1c], 0xffffff00
0x00003b40      757e           jne 0x3bc0
0x00003b42      488bbd98feff.  mov rdi, qword [rbp - 0x168]
0x00003b49      31c9           xor ecx, ecx
0x00003b4b      31d2           xor edx, edx
0x00003b4d      4d89e8         mov r8, r13
0x00003b50      4c89e6         mov rsi, r12
0x00003b53      e8c81a0000     call sym.set_process_security_ctx
0x00003b58      84c0           test al, al
0x00003b5a      0f8405030000   je 0x3e65
0x00003b60      8b85b8feffff   mov eax, dword [rbp - 0x148]
0x00003b66      2500f00000     and eax, 0xf000
0x00003b6b      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00003b70      0f8501040000   jne 0x3f77
0x00003b76      488b8588feff.  mov rax, qword [rbp - 0x178]
0x00003b7d      c60000         mov byte [rax], 0
0x00003b80      48b800ff0000.  movabs rax, 0xff000000ff00
0x00003b8a      49854520       test qword [r13 + 0x20], rax
0x00003b8e      0f85ac020000   jne 0x3e40
0x00003b94      807b012f       cmp byte [rbx + 1], 0x2f
0x00003b98      488d7b01       lea rdi, [rbx + 1]
0x00003b9c      c6032f         mov byte [rbx], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x00003b9f      0f855bffffff   jne 0x3b00
0x00003ba5      0f1f00         nop dword [rax]
0x00003ba8      4883c701       add rdi, 1
0x00003bac      803f2f         cmp byte [rdi], 0x2f
0x00003baf      74f7           je 0x3ba8
0x00003bb1      e94affffff     jmp 0x3b00
0x00003bb6      662e0f1f8400.  nop word cs:[rax + rax]
0x00003bc0      488b9578feff.  mov rdx, qword [rbp - 0x188]
0x00003bc7      488bb598feff.  mov rsi, qword [rbp - 0x168]
0x00003bce      bf01000000     mov edi, 1
0x00003bd3      e8c8efffff     call sym.imp.__xstat
0x00003bd8      85c0           test eax, eax
0x00003bda      0f84d0010000   je 0x3db0
0x00003be0      e88bebffff     call sym.imp.__errno_location
0x00003be5      448b00         mov r8d, dword [rax]
0x00003be8      4585c0         test r8d, r8d
0x00003beb      0f85db010000   jne 0x3dcc
0x00003bf1      bfa8000000     mov edi, 0xa8
0x00003bf6      e825d40000     call sym.xmalloc
0x00003bfb      660f6f8530ff.  movdqa xmm0, xmmword [rbp - 0xd0]
0x00003c03      4989c7         mov r15, rax
0x00003c06      488b8d80feff.  mov rcx, qword [rbp - 0x180]
0x00003c0d      0f1100         movups xmmword [rax], xmm0
0x00003c10      660f6f8540ff.  movdqa xmm0, xmmword [rbp - 0xc0]
0x00003c18      0f114010       movups xmmword [rax + 0x10], xmm0
0x00003c1c      660f6f8550ff.  movdqa xmm0, xmmword [rbp - 0xb0]
0x00003c24      0f114020       movups xmmword [rax + 0x20], xmm0
0x00003c28      660f6f8560ff.  movdqa xmm0, xmmword [rbp - 0xa0]
0x00003c30      0f114030       movups xmmword [rax + 0x30], xmm0
0x00003c34      660f6f8570ff.  movdqa xmm0, xmmword [rbp - 0x90]
0x00003c3c      0f114040       movups xmmword [rax + 0x40], xmm0
0x00003c40      660f6f4580     movdqa xmm0, xmmword [rbp - 0x80]
0x00003c45      0f114050       movups xmmword [rax + 0x50], xmm0
0x00003c49      660f6f4590     movdqa xmm0, xmmword [rbp - 0x70]
0x00003c4e      0f114060       movups xmmword [rax + 0x60], xmm0
0x00003c52      660f6f45a0     movdqa xmm0, xmmword [rbp - 0x60]
0x00003c57      0f114070       movups xmmword [rax + 0x70], xmm0
0x00003c5b      660f6f45b0     movdqa xmm0, xmmword [rbp - 0x50]
0x00003c60      0f1180800000.  movups xmmword [rax + 0x80], xmm0
0x00003c67      4889d8         mov rax, rbx
0x00003c6a      41c687900000.  mov byte [r15 + 0x90], 0
0x00003c72      4c29e0         sub rax, r12
0x00003c75      4585f6         test r14d, r14d
0x00003c78      498987980000.  mov qword [r15 + 0x98], rax
0x00003c7f      488b01         mov rax, qword [rcx]
0x00003c82      4c8939         mov qword [rcx], r15
0x00003c85      498987a00000.  mov qword [r15 + 0xa0], rax
0x00003c8c      0f84b0feffff   je 0x3b42
0x00003c92      418b5718       mov edx, dword [r15 + 0x18]
0x00003c96      488bbd98feff.  mov rdi, qword [rbp - 0x168]
0x00003c9d      4d89e8         mov r8, r13
0x00003ca0      b901000000     mov ecx, 1
0x00003ca5      4c89e6         mov rsi, r12
0x00003ca8      e873190000     call sym.set_process_security_ctx
0x00003cad      84c0           test al, al
0x00003caf      0f84b0010000   je 0x3e65
0x00003cb5      488b8588feff.  mov rax, qword [rbp - 0x178]
0x00003cbc      418b7718       mov esi, dword [r15 + 0x18]
0x00003cc0      c60001         mov byte [rax], 1
0x00003cc3      41807d1d00     cmp byte [r13 + 0x1d], 0
0x00003cc8      0f8452010000   je 0x3e20
0x00003cce      4189f6         mov r14d, esi
0x00003cd1      4183e63f       and r14d, 0x3f
0x00003cd5      4489f0         mov eax, r14d
0x00003cd8      35ff0f0000     xor eax, 0xfff
0x00003cdd      41807d2000     cmp byte [r13 + 0x20], 0
0x00003ce2      baff010000     mov edx, 0x1ff
0x00003ce7      4c89e7         mov rdi, r12
0x00003cea      0f45f2         cmovne esi, edx
0x00003ced      21c6           and esi, eax
0x00003cef      e8eceaffff     call sym.imp.mkdir
0x00003cf4      85c0           test eax, eax
0x00003cf6      0f8538020000   jne 0x3f34
0x00003cfc      488b8570feff.  mov rax, qword [rbp - 0x190]
0x00003d03      4885c0         test rax, rax
0x00003d06      7419           je 0x3d21
0x00003d08      488b9598feff.  mov rdx, qword [rbp - 0x168]
0x00003d0f      4889c6         mov rsi, rax
0x00003d12      4c89e1         mov rcx, r12
0x00003d15      bf01000000     mov edi, 1
0x00003d1a      31c0           xor eax, eax
0x00003d1c      e83fefffff     call sym.imp.__printf_chk
0x00003d21      488b9590feff.  mov rdx, qword [rbp - 0x170]
0x00003d28      4c89e6         mov rsi, r12
0x00003d2b      bf01000000     mov edi, 1
0x00003d30      e8dbebffff     call sym.imp.__lxstat
0x00003d35      85c0           test eax, eax
0x00003d37      0f8542020000   jne 0x3f7f
0x00003d3d      41807d1e00     cmp byte [r13 + 0x1e], 0
0x00003d42      8bb5b8feffff   mov esi, dword [rbp - 0x148]
0x00003d48      752c           jne 0x3d76
0x00003d4a      89f0           mov eax, esi
0x00003d4c      f7d0           not eax
0x00003d4e      4485f0         test eax, r14d
0x00003d51      0f85a9010000   jne 0x3f00
0x00003d57      89f0           mov eax, esi
0x00003d59      25c0010000     and eax, 0x1c0
0x00003d5e      3dc0010000     cmp eax, 0x1c0
0x00003d63      7435           je 0x3d9a
0x00003d65      89f0           mov eax, esi
0x00003d67      4109c6         or r14d, eax
0x00003d6a      41c687900000.  mov byte [r15 + 0x90], 1
0x00003d72      45897718       mov dword [r15 + 0x18], r14d
0x00003d76      89f0           mov eax, esi
0x00003d78      25c0010000     and eax, 0x1c0
0x00003d7d      3dc0010000     cmp eax, 0x1c0
0x00003d82      7416           je 0x3d9a
0x00003d84      81cec0010000   or esi, 0x1c0
0x00003d8a      4c89e7         mov rdi, r12
0x00003d8d      e8feeeffff     call sym.imp.chmod
0x00003d92      85c0           test eax, eax
0x00003d94      0f8503020000   jne 0x3f9d
0x00003d9a      488b8588feff.  mov rax, qword [rbp - 0x178]
0x00003da1      803800         cmp byte [rax], 0
0x00003da4      0f85eafdffff   jne 0x3b94
0x00003daa      e9d1fdffff     jmp 0x3b80
0x00003daf      90             nop
0x00003db0      8b8548ffffff   mov eax, dword [rbp - 0xb8]
0x00003db6      2500f00000     and eax, 0xf000
0x00003dbb      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00003dc0      0f842bfeffff   je 0x3bf1
0x00003dc6      41b814000000   mov r8d, 0x14
0x00003dcc      488bb598feff.  mov rsi, qword [rbp - 0x168]
0x00003dd3      bf04000000     mov edi, 4
0x00003dd8      44898590feff.  mov dword [rbp - 0x170], r8d
0x00003ddf      e8ccac0000     call sym.quotearg_style
0x00003de4      488d35a5f200.  lea rsi, str.failed_to_get_attributes_of__s ; 0x13090 ; "failed to get attributes of %s"
0x00003deb      ba05000000     mov edx, 5
0x00003df0      31ff           xor edi, edi
0x00003df2      4889c3         mov rbx, rax
0x00003df5      e8e6eaffff     call sym.imp.dcgettext
0x00003dfa      448b8590feff.  mov r8d, dword [rbp - 0x170]
0x00003e01      4889c2         mov rdx, rax
0x00003e04      4889d9         mov rcx, rbx
0x00003e07      31c0           xor eax, eax
0x00003e09      31ff           xor edi, edi
0x00003e0b      4489c6         mov esi, r8d
0x00003e0e      e89deeffff     call sym.imp.error
0x00003e13      31c0           xor eax, eax
0x00003e15      e987000000     jmp 0x3ea1
0x00003e1a      660f1f440000   nop word [rax + rax]
0x00003e20      41807d1e00     cmp byte [r13 + 0x1e], 0
0x00003e25      7449           je 0x3e70
0x00003e27      4189f6         mov r14d, esi
0x00003e2a      4183e612       and r14d, 0x12
0x00003e2e      4489f0         mov eax, r14d
0x00003e31      35ff0f0000     xor eax, 0xfff
0x00003e36      e9a2feffff     jmp 0x3cdd
0x00003e3b      0f1f440000     nop dword [rax + rax]
0x00003e40      410fb67525     movzx esi, byte [r13 + 0x25]
0x00003e45      31d2           xor edx, edx
0x00003e47      4c89e9         mov rcx, r13
0x00003e4a      4c89e7         mov rdi, r12
0x00003e4d      e89e180000     call sym.set_file_security_ctx
0x00003e52      84c0           test al, al
0x00003e54      0f853afdffff   jne 0x3b94
0x00003e5a      41807d2600     cmp byte [r13 + 0x26], 0
0x00003e5f      0f842ffdffff   je 0x3b94
0x00003e65      31c0           xor eax, eax
0x00003e67      eb38           jmp 0x3ea1
0x00003e69      0f1f80000000.  nop dword [rax]
0x00003e70      4531f6         xor r14d, r14d
0x00003e73      b8ff0f0000     mov eax, 0xfff
0x00003e78      e960feffff     jmp 0x3cdd
0x00003e7d      0f1f00         nop dword [rax]
0x00003e80      8b85b8feffff   mov eax, dword [rbp - 0x148]
0x00003e86      2500f00000     and eax, 0xf000
0x00003e8b      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00003e90      7531           jne 0x3ec3
0x00003e92      488b8588feff.  mov rax, qword [rbp - 0x178]
0x00003e99      c60000         mov byte [rax], 0
0x00003e9c      b801000000     mov eax, 1
0x00003ea1      488b4dc8       mov rcx, qword [rbp - 0x38]
0x00003ea5      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003eae      0f8507010000   jne 0x3fbb
0x00003eb4      488d65d8       lea rsp, [rbp - 0x28]
0x00003eb8      5b             pop rbx
0x00003eb9      415c           pop r12
0x00003ebb      415d           pop r13
0x00003ebd      415e           pop r14
0x00003ebf      415f           pop r15
0x00003ec1      5d             pop rbp
0x00003ec2      c3             ret
0x00003ec3      4889de         mov rsi, rbx
0x00003ec6      bf04000000     mov edi, 4
0x00003ecb      e8e0ab0000     call sym.quotearg_style
0x00003ed0      488d35d9f100.  lea rsi, str.s_exists_but_is_not_a_directory ; 0x130b0 ; "%s exists but is not a directory"
0x00003ed7      4889c3         mov rbx, rax
0x00003eda      ba05000000     mov edx, 5
0x00003edf      31ff           xor edi, edi
0x00003ee1      e8fae9ffff     call sym.imp.dcgettext
0x00003ee6      4889d9         mov rcx, rbx
0x00003ee9      4889c2         mov rdx, rax
0x00003eec      31f6           xor esi, esi
0x00003eee      31c0           xor eax, eax
0x00003ef0      31ff           xor edi, edi
0x00003ef2      e8b9edffff     call sym.imp.error
0x00003ef7      31c0           xor eax, eax
0x00003ef9      eba6           jmp 0x3ea1
0x00003efb      0f1f440000     nop dword [rax + rax]
0x00003f00      e84b1b0000     call sym.cached_umask
0x00003f05      8bb5b8feffff   mov esi, dword [rbp - 0x148]
0x00003f0b      f7d0           not eax
0x00003f0d      4121c6         and r14d, eax
0x00003f10      89f2           mov edx, esi
0x00003f12      89f0           mov eax, esi
0x00003f14      f7d2           not edx
0x00003f16      4485f2         test edx, r14d
0x00003f19      0f8548feffff   jne 0x3d67
0x00003f1f      e933feffff     jmp 0x3d57
0x00003f24      0f1f4000       nop dword [rax]
0x00003f28      488bbd98feff.  mov rdi, qword [rbp - 0x168]
0x00003f2f      e9bdfbffff     jmp 0x3af1
0x00003f34      4c89e6         mov rsi, r12
0x00003f37      bf04000000     mov edi, 4
0x00003f3c      e86fab0000     call sym.quotearg_style
0x00003f41      488d35c9e900.  lea rsi, str.cannot_make_directory__s   ; 0x12911 ; "cannot make directory %s"
0x00003f48      4989c4         mov r12, rax
0x00003f4b      ba05000000     mov edx, 5
0x00003f50      31ff           xor edi, edi
0x00003f52      e889e9ffff     call sym.imp.dcgettext
0x00003f57      4889c3         mov rbx, rax
0x00003f5a      e811e8ffff     call sym.imp.__errno_location
0x00003f5f      8b30           mov esi, dword [rax]
0x00003f61      4c89e1         mov rcx, r12
0x00003f64      31c0           xor eax, eax
0x00003f66      4889da         mov rdx, rbx
0x00003f69      31ff           xor edi, edi
0x00003f6b      e840edffff     call sym.imp.error
0x00003f70      31c0           xor eax, eax
0x00003f72      e92affffff     jmp 0x3ea1
0x00003f77      4c89e6         mov rsi, r12
0x00003f7a      e947ffffff     jmp 0x3ec6
0x00003f7f      4c89e6         mov rsi, r12
0x00003f82      bf04000000     mov edi, 4
0x00003f87      e824ab0000     call sym.quotearg_style
0x00003f8c      ba05000000     mov edx, 5
0x00003f91      4989c4         mov r12, rax
0x00003f94      488d35f5f000.  lea rsi, str.failed_to_get_attributes_of__s ; 0x13090 ; "failed to get attributes of %s"
0x00003f9b      ebb3           jmp 0x3f50
0x00003f9d      4c89e6         mov rsi, r12
0x00003fa0      bf04000000     mov edi, 4
0x00003fa5      e806ab0000     call sym.quotearg_style
0x00003faa      ba05000000     mov edx, 5
0x00003faf      4989c4         mov r12, rax
0x00003fb2      488d3571e900.  lea rsi, str.setting_permissions_for__s ; 0x1292a ; "setting permissions for %s"
0x00003fb9      eb95           jmp 0x3f50
0x00003fbb      e870e9ffff     call sym.imp.__stack_chk_fail
;-- re_protect:
0x00003fc0      55             push rbp
0x00003fc1      4889e5         mov rbp, rsp
0x00003fc4      4157           push r15
0x00003fc6      4156           push r14
0x00003fc8      4155           push r13
0x00003fca      4154           push r12
0x00003fcc      4989f6         mov r14, rsi
0x00003fcf      53             push rbx
0x00003fd0      4989fc         mov r12, rdi
0x00003fd3      4889d3         mov rbx, rdx
0x00003fd6      4989cd         mov r13, rcx
0x00003fd9      4883ec48       sub rsp, 0x48
0x00003fdd      64488b042528.  mov rax, qword fs:[0x28]
0x00003fe6      488945c8       mov qword [rbp - 0x38], rax
0x00003fea      31c0           xor eax, eax
0x00003fec      e80fe9ffff     call sym.imp.strlen
0x00003ff1      488d5001       lea rdx, [rax + 1]
0x00003ff5      4883c01f       add rax, 0x1f
0x00003ff9      4c89e6         mov rsi, r12
0x00003ffc      4883e0f0       and rax, 0xfffffffffffffff0
0x00004000      4829c4         sub rsp, rax
0x00004003      488d7c240f     lea rdi, [rsp + 0xf]
0x00004008      4883e7f0       and rdi, 0xfffffffffffffff0
0x0000400c      e84febffff     call sym.imp.memcpy
0x00004011      4989c4         mov r12, rax
0x00004014      4c01f0         add rax, r14
0x00004017      4885db         test rbx, rbx
0x0000401a      48894598       mov qword [rbp - 0x68], rax
0x0000401e      0f84ac010000   je 0x41d0
0x00004024      4c8d7da0       lea r15, [rbp - 0x60]
0x00004028      eb48           jmp 0x4072
0x0000402a      660f1f440000   nop word [rax + rax]
0x00004030      41807d1d00     cmp byte [r13 + 0x1d], 0
0x00004035      0f85c5000000   jne 0x4100
0x0000403b      450fb6751e     movzx r14d, byte [r13 + 0x1e]
0x00004040      4584f6         test r14b, r14b
0x00004043      0f8507010000   jne 0x4150
0x00004049      80bb90000000.  cmp byte [rbx + 0x90], 0
0x00004050      0f8522010000   jne 0x4178
0x00004056      488b83980000.  mov rax, qword [rbx + 0x98]
0x0000405d      41c604042f     mov byte [r12 + rax], 0x2f              ; '/'
                                                                       ; [0x2f:1]=0
0x00004062      488b9ba00000.  mov rbx, qword [rbx + 0xa0]
0x00004069      4885db         test rbx, rbx
0x0000406c      0f845e010000   je 0x41d0
0x00004072      41807d1f00     cmp byte [r13 + 0x1f], 0
0x00004077      488b83980000.  mov rax, qword [rbx + 0x98]
0x0000407e      41c6040400     mov byte [r12 + rax], 0
0x00004083      74ab           je 0x4030
0x00004085      488b4350       mov rax, qword [rbx + 0x50]
0x00004089      488b5348       mov rdx, qword [rbx + 0x48]
0x0000408d      4c89fe         mov rsi, r15
0x00004090      4c89e7         mov rdi, r12
0x00004093      488955a0       mov qword [rbp - 0x60], rdx
0x00004097      488945a8       mov qword [rbp - 0x58], rax
0x0000409b      488b5358       mov rdx, qword [rbx + 0x58]
0x0000409f      488b4360       mov rax, qword [rbx + 0x60]
0x000040a3      488955b0       mov qword [rbp - 0x50], rdx
0x000040a7      488945b8       mov qword [rbp - 0x48], rax
0x000040ab      e8a0c60000     call sym.utimens
0x000040b0      85c0           test eax, eax
0x000040b2      0f8478ffffff   je 0x4030
0x000040b8      4c89e6         mov rsi, r12
0x000040bb      bf04000000     mov edi, 4
0x000040c0      4531f6         xor r14d, r14d
0x000040c3      e8e8a90000     call sym.quotearg_style
0x000040c8      488d3509f000.  lea rsi, str.failed_to_preserve_times_for__s ; 0x130d8 ; "failed to preserve times for %s"
0x000040cf      ba05000000     mov edx, 5
0x000040d4      31ff           xor edi, edi
0x000040d6      4989c4         mov r12, rax
0x000040d9      e802e8ffff     call sym.imp.dcgettext
0x000040de      4889c3         mov rbx, rax
0x000040e1      e88ae6ffff     call sym.imp.__errno_location
0x000040e6      8b30           mov esi, dword [rax]
0x000040e8      4c89e1         mov rcx, r12
0x000040eb      4889da         mov rdx, rbx
0x000040ee      31ff           xor edi, edi
0x000040f0      31c0           xor eax, eax
0x000040f2      e8b9ebffff     call sym.imp.error
0x000040f7      e9da000000     jmp 0x41d6
0x000040fc      0f1f4000       nop dword [rax]
0x00004100      8b5320         mov edx, dword [rbx + 0x20]
0x00004103      8b731c         mov esi, dword [rbx + 0x1c]
0x00004106      4c89e7         mov rdi, r12
0x00004109      e8f2eaffff     call sym.imp.lchown
0x0000410e      85c0           test eax, eax
0x00004110      0f8425ffffff   je 0x403b
0x00004116      4c89ef         mov rdi, r13
0x00004119      e8f2160000     call sym.chown_failure_ok
0x0000411e      84c0           test al, al
0x00004120      4189c6         mov r14d, eax
0x00004123      0f84ce000000   je 0x41f7
0x00004129      8b5320         mov edx, dword [rbx + 0x20]
0x0000412c      beffffffff     mov esi, 0xffffffff                     ; -1
0x00004131      4c89e7         mov rdi, r12
0x00004134      e8c7eaffff     call sym.imp.lchown
0x00004139      450fb6751e     movzx r14d, byte [r13 + 0x1e]
0x0000413e      4584f6         test r14b, r14b
0x00004141      0f8402ffffff   je 0x4049
0x00004147      660f1f840000.  nop word [rax + rax]
0x00004150      448b4318       mov r8d, dword [rbx + 0x18]
0x00004154      488b7d98       mov rdi, qword [rbp - 0x68]
0x00004158      b9ffffffff     mov ecx, 0xffffffff                     ; -1
0x0000415d      4c89e2         mov rdx, r12
0x00004160      89ce           mov esi, ecx
0x00004162      e839640000     call sym.copy_acl
0x00004167      85c0           test eax, eax
0x00004169      0f84e7feffff   je 0x4056
0x0000416f      4531f6         xor r14d, r14d
0x00004172      eb62           jmp 0x41d6
0x00004174      0f1f4000       nop dword [rax]
0x00004178      8b7318         mov esi, dword [rbx + 0x18]
0x0000417b      4c89e7         mov rdi, r12
0x0000417e      e80debffff     call sym.imp.chmod
0x00004183      85c0           test eax, eax
0x00004185      0f84cbfeffff   je 0x4056
0x0000418b      4c89e6         mov rsi, r12
0x0000418e      bf04000000     mov edi, 4
0x00004193      e818a90000     call sym.quotearg_style
0x00004198      488d3581ef00.  lea rsi, str.failed_to_preserve_permissions_for__s ; 0x13120 ; "failed to preserve permissions for %s"
0x0000419f      4989c4         mov r12, rax
0x000041a2      ba05000000     mov edx, 5
0x000041a7      31ff           xor edi, edi
0x000041a9      e832e7ffff     call sym.imp.dcgettext
0x000041ae      4889c3         mov rbx, rax
0x000041b1      e8bae5ffff     call sym.imp.__errno_location
0x000041b6      8b30           mov esi, dword [rax]
0x000041b8      4c89e1         mov rcx, r12
0x000041bb      4889da         mov rdx, rbx
0x000041be      31ff           xor edi, edi
0x000041c0      31c0           xor eax, eax
0x000041c2      e8e9eaffff     call sym.imp.error
0x000041c7      eb0d           jmp 0x41d6
0x000041c9      0f1f80000000.  nop dword [rax]
0x000041d0      41be01000000   mov r14d, 1
0x000041d6      488b4dc8       mov rcx, qword [rbp - 0x38]
0x000041da      6448330c2528.  xor rcx, qword fs:[0x28]
0x000041e3      4489f0         mov eax, r14d
0x000041e6      752d           jne 0x4215
0x000041e8      488d65d8       lea rsp, [rbp - 0x28]
0x000041ec      5b             pop rbx
0x000041ed      415c           pop r12
0x000041ef      415d           pop r13
0x000041f1      415e           pop r14
0x000041f3      415f           pop r15
0x000041f5      5d             pop rbp
0x000041f6      c3             ret
0x000041f7      4c89e6         mov rsi, r12
0x000041fa      bf04000000     mov edi, 4
0x000041ff      e8aca80000     call sym.quotearg_style
0x00004204      ba05000000     mov edx, 5
0x00004209      4989c4         mov r12, rax
0x0000420c      488d35e5ee00.  lea rsi, str.failed_to_preserve_ownership_for__s ; 0x130f8 ; "failed to preserve ownership for %s"
0x00004213      eb92           jmp 0x41a7
0x00004215      e816e7ffff     call sym.imp.__stack_chk_fail
0x0000421a      660f1f440000   nop word [rax + rax]
;-- usage:
0x00004220      4155           push r13
0x00004222      4154           push r12
0x00004224      ba05000000     mov edx, 5
0x00004229      55             push rbp
0x0000422a      53             push rbx
0x0000422b      89fd           mov ebp, edi
0x0000422d      4881ec880000.  sub rsp, 0x88
0x00004234      488b1d656321.  mov rbx, qword [obj.program_name]       ; [0x21a5a0:8]=0
0x0000423b      64488b042528.  mov rax, qword fs:[0x28]
0x00004244      4889442478     mov qword [rsp + 0x78], rax
0x00004249      31c0           xor eax, eax
0x0000424b      85ff           test edi, edi
0x0000424d      742e           je 0x427d
0x0000424f      488d35f2ee00.  lea rsi, str.Try___s___help__for_more_information. ; 0x13148 ; "Try '%s --help' for more information.\n"
0x00004256      31ff           xor edi, edi
0x00004258      e883e6ffff     call sym.imp.dcgettext
0x0000425d      488b3d7c5e21.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a0e0:8]=0
0x00004264      4889c2         mov rdx, rax
0x00004267      4889d9         mov rcx, rbx
0x0000426a      be01000000     mov esi, 1
0x0000426f      31c0           xor eax, eax
0x00004271      e83aebffff     call sym.imp.__fprintf_chk
0x00004276      89ef           mov edi, ebp
0x00004278      e813ebffff     call sym.imp.exit
0x0000427d      488d35ecee00.  lea rsi, str.Usage:__s__OPTION_...___T__SOURCE_DEST____or:___s__OPTION_..._SOURCE..._DIRECTORY____or:___s__OPTION_...__t_DIRECTORY_SOURCE... ; 0x13170 ; "Usage: %s [OPTION]... [-T] SOURCE DEST\n  or:  %s [OPTION]... SOURCE... DIRECTORY\n  or:  %s [OPTION]... -t DIRECTORY SOURCE...\n"
0x00004284      31ff           xor edi, edi
0x00004286      e855e6ffff     call sym.imp.dcgettext
0x0000428b      4989d8         mov r8, rbx
0x0000428e      4889d9         mov rcx, rbx
0x00004291      4889da         mov rdx, rbx
0x00004294      4889c6         mov rsi, rax
0x00004297      bf01000000     mov edi, 1
0x0000429c      31c0           xor eax, eax
0x0000429e      e8bde9ffff     call sym.imp.__printf_chk
0x000042a3      488b1dfe5d21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x000042aa      488d353fef00.  lea rsi, str.Copy_SOURCE_to_DEST__or_multiple_SOURCE_s__to_DIRECTORY. ; 0x131f0 ; "Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.\n"
0x000042b1      ba05000000     mov edx, 5
0x000042b6      31ff           xor edi, edi
0x000042b8      e823e6ffff     call sym.imp.dcgettext
0x000042bd      4889de         mov rsi, rbx
0x000042c0      4889c7         mov rdi, rax
0x000042c3      e8e8e7ffff     call sym.imp.fputs_unlocked
0x000042c8      488b1dd95d21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x000042cf      488d355aef00.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x13230 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x000042d6      ba05000000     mov edx, 5
0x000042db      31ff           xor edi, edi
0x000042dd      e8fee5ffff     call sym.imp.dcgettext
0x000042e2      4889de         mov rsi, rbx
0x000042e5      4889c7         mov rdi, rax
0x000042e8      e8c3e7ffff     call sym.imp.fputs_unlocked
0x000042ed      488b1db45d21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x000042f4      488d3585ef00.  lea rsi, str.a____archive________________same_as__dR___preserve_all__________attributes_only________don_t_copy_the_file_data__just_the_attributes__________backup__CONTROL________make_a_backup_of_each_existing_destination_file_____b___________________________like___backup_but_does_not_accept_an_argument__________copy_contents__________copy_contents_of_special_files_when_recursive_____d___________________________same_as___no_dereference___preserve_links ; 0x13280 ; "  -a, --archive                same as -dR --preserve=all\n      --attributes-only        don't copy the file data, just the attributes\n      --backup[=CONTROL]       make a backup of each existing destination file\n  -b                           like --backup but does not accept an argument\n      --copy-contents          copy contents of special files when recursive\n  -d                           same as --no-dereference --preserve=links\n"
0x000042fb      ba05000000     mov edx, 5
0x00004300      31ff           xor edi, edi
0x00004302      e8d9e5ffff     call sym.imp.dcgettext
0x00004307      4889de         mov rsi, rbx
0x0000430a      4889c7         mov rdi, rax
0x0000430d      e89ee7ffff     call sym.imp.fputs_unlocked
0x00004312      488b1d8f5d21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x00004319      488d3520f100.  lea rsi, str.f____force__________________if_an_existing_destination_file_cannot_be___________________________________opened__remove_it_and_try_again__this_option___________________________________is_ignored_when_the__n_option_is_also_used______i____interactive____________prompt_before_overwrite__overrides_a_previous__n____________________________________option______H___________________________follow_command_line_symbolic_links_in_SOURCE ; 0x13440 ; "  -f, --force                  if an existing destination file cannot be\n                                 opened, remove it and try again (this option\n                                 is ignored when the -n option is also used)\n  -i, --interactive            prompt before overwrite (overrides a previous -n\n                                  option)\n  -H                           follow command-line symbolic links in SOURCE\n"
0x00004320      ba05000000     mov edx, 5
0x00004325      31ff           xor edi, edi
0x00004327      e8b4e5ffff     call sym.imp.dcgettext
0x0000432c      4889de         mov rsi, rbx
0x0000432f      4889c7         mov rdi, rax
0x00004332      e879e7ffff     call sym.imp.fputs_unlocked
0x00004337      488b1d6a5d21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x0000433e      488d35abf200.  lea rsi, str.l____link___________________hard_link_files_instead_of_copying_____L____dereference____________always_follow_symbolic_links_in_SOURCE ; 0x135f0 ; "  -l, --link                   hard link files instead of copying\n  -L, --dereference            always follow symbolic links in SOURCE\n"
0x00004345      ba05000000     mov edx, 5
0x0000434a      31ff           xor edi, edi
0x0000434c      e88fe5ffff     call sym.imp.dcgettext
0x00004351      4889de         mov rsi, rbx
0x00004354      4889c7         mov rdi, rax
0x00004357      e854e7ffff     call sym.imp.fputs_unlocked
0x0000435c      488b1d455d21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x00004363      488d3516f300.  lea rsi, str.n____no_clobber_____________do_not_overwrite_an_existing_file__overrides___________________________________a_previous__i_option______P____no_dereference_________never_follow_symbolic_links_in_SOURCE ; 0x13680 ; "  -n, --no-clobber             do not overwrite an existing file (overrides\n                                 a previous -i option)\n  -P, --no-dereference         never follow symbolic links in SOURCE\n"
0x0000436a      ba05000000     mov edx, 5
0x0000436f      31ff           xor edi, edi
0x00004371      e86ae5ffff     call sym.imp.dcgettext
0x00004376      4889de         mov rsi, rbx
0x00004379      4889c7         mov rdi, rax
0x0000437c      e82fe7ffff     call sym.imp.fputs_unlocked
0x00004381      488b1d205d21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x00004388      488d35c1f300.  lea rsi, str.p___________________________same_as___preserve_mode_ownership_timestamps__________preserve__ATTR_LIST____preserve_the_specified_attributes__default:___________________________________mode_ownership_timestamps___if_possible___________________________________additional_attributes:_context__links__xattr____________________________________all ; 0x13750 ; "  -p                           same as --preserve=mode,ownership,timestamps\n      --preserve[=ATTR_LIST]   preserve the specified attributes (default:\n                                 mode,ownership,timestamps), if possible\n                                 additional attributes: context, links, xattr,\n                                 all\n"
0x0000438f      ba05000000     mov edx, 5
0x00004394      31ff           xor edi, edi
0x00004396      e845e5ffff     call sym.imp.dcgettext
0x0000439b      4889de         mov rsi, rbx
0x0000439e      4889c7         mov rdi, rax
0x000043a1      e80ae7ffff     call sym.imp.fputs_unlocked
0x000043a6      488b1dfb5c21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x000043ad      488d35f4f400.  lea rsi, str.no_preserve_ATTR_LIST__don_t_preserve_the_specified_attributes__________parents________________use_full_source_file_name_under_DIRECTORY ; 0x138a8 ; "      --no-preserve=ATTR_LIST  don't preserve the specified attributes\n      --parents                use full source file name under DIRECTORY\n"
0x000043b4      ba05000000     mov edx, 5
0x000043b9      31ff           xor edi, edi
0x000043bb      e820e5ffff     call sym.imp.dcgettext
0x000043c0      4889de         mov rsi, rbx
0x000043c3      4889c7         mov rdi, rax
0x000043c6      e8e5e6ffff     call sym.imp.fputs_unlocked
0x000043cb      488b1dd65c21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x000043d2      488d3567f500.  lea rsi, str.R___r____recursive__________copy_directories_recursively__________reflink__WHEN__________control_clone_CoW_copies._See_below__________remove_destination_____remove_each_existing_destination_file_before___________________________________attempting_to_open_it__contrast_with___force ; 0x13940 ; "  -R, -r, --recursive          copy directories recursively\n      --reflink[=WHEN]         control clone/CoW copies. See below\n      --remove-destination     remove each existing destination file before\n                                 attempting to open it (contrast with --force)\n"
0x000043d9      ba05000000     mov edx, 5
0x000043de      31ff           xor edi, edi
0x000043e0      e8fbe4ffff     call sym.imp.dcgettext
0x000043e5      4889de         mov rsi, rbx
0x000043e8      4889c7         mov rdi, rax
0x000043eb      e8c0e6ffff     call sym.imp.fputs_unlocked
0x000043f0      488b1db15c21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x000043f7      488d3562f600.  lea rsi, str.sparse_WHEN____________control_creation_of_sparse_files._See_below__________strip_trailing_slashes__remove_any_trailing_slashes_from_each_SOURCE___________________________________argument ; 0x13a60 ; "      --sparse=WHEN            control creation of sparse files. See below\n      --strip-trailing-slashes  remove any trailing slashes from each SOURCE\n                                 argument\n"
0x000043fe      ba05000000     mov edx, 5
0x00004403      31ff           xor edi, edi
0x00004405      e8d6e4ffff     call sym.imp.dcgettext
0x0000440a      4889de         mov rsi, rbx
0x0000440d      4889c7         mov rdi, rax
0x00004410      e89be6ffff     call sym.imp.fputs_unlocked
0x00004415      488b1d8c5c21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x0000441c      488d3505f700.  lea rsi, str.s____symbolic_link__________make_symbolic_links_instead_of_copying_____S____suffix_SUFFIX__________override_the_usual_backup_suffix_____t____target_directory_DIRECTORY__copy_all_SOURCE_arguments_into_DIRECTORY_____T____no_target_directory____treat_DEST_as_a_normal_file ; 0x13b28 ; "  -s, --symbolic-link          make symbolic links instead of copying\n  -S, --suffix=SUFFIX          override the usual backup suffix\n  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY\n  -T, --no-target-directory    treat DEST as a normal file\n"
0x00004423      ba05000000     mov edx, 5
0x00004428      31ff           xor edi, edi
0x0000442a      e8b1e4ffff     call sym.imp.dcgettext
0x0000442f      4889de         mov rsi, rbx
0x00004432      4889c7         mov rdi, rax
0x00004435      e876e6ffff     call sym.imp.fputs_unlocked
0x0000443a      488b1d675c21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x00004441      488d35f0f700.  lea rsi, str.u____update_________________copy_only_when_the_SOURCE_file_is_newer___________________________________than_the_destination_file_or_when_the___________________________________destination_file_is_missing_____v____verbose________________explain_what_is_being_done_____x____one_file_system________stay_on_this_file_system ; 0x13c38 ; "  -u, --update                 copy only when the SOURCE file is newer\n                                 than the destination file or when the\n                                 destination file is missing\n  -v, --verbose                explain what is being done\n  -x, --one-file-system        stay on this file system\n"
0x00004448      ba05000000     mov edx, 5
0x0000444d      31ff           xor edi, edi
0x0000444f      e88ce4ffff     call sym.imp.dcgettext
0x00004454      4889de         mov rsi, rbx
0x00004457      4889c7         mov rdi, rax
0x0000445a      e851e6ffff     call sym.imp.fputs_unlocked
0x0000445f      488b1d425c21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x00004466      488d350bf900.  lea rsi, str.Z___________________________set_SELinux_security_context_of_destination___________________________________file_to_default_type__________context__CTX___________like__Z__or_if_CTX_is_specified_then_set_the___________________________________SELinux_or_SMACK_security_context_to_CTX ; 0x13d78 ; "  -Z                           set SELinux security context of destination\n                                 file to default type\n      --context[=CTX]          like -Z, or if CTX is specified then set the\n                                 SELinux or SMACK security context to CTX\n"
0x0000446d      ba05000000     mov edx, 5
0x00004472      31ff           xor edi, edi
0x00004474      e867e4ffff     call sym.imp.dcgettext
0x00004479      4889de         mov rsi, rbx
0x0000447c      4889c7         mov rdi, rax
0x0000447f      e82ce6ffff     call sym.imp.fputs_unlocked
0x00004484      488b1d1d5c21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x0000448b      488d35fef900.  lea rsi, str.help_____display_this_help_and_exit ; 0x13e90 ; "      --help     display this help and exit\n"
0x00004492      ba05000000     mov edx, 5
0x00004497      31ff           xor edi, edi
0x00004499      e842e4ffff     call sym.imp.dcgettext
0x0000449e      4889de         mov rsi, rbx
0x000044a1      4889c7         mov rdi, rax
0x000044a4      e807e6ffff     call sym.imp.fputs_unlocked
0x000044a9      488b1df85b21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x000044b0      488d3509fa00.  lea rsi, str.version__output_version_information_and_exit ; 0x13ec0 ; "      --version  output version information and exit\n"
0x000044b7      ba05000000     mov edx, 5
0x000044bc      31ff           xor edi, edi
0x000044be      e81de4ffff     call sym.imp.dcgettext
0x000044c3      4889de         mov rsi, rbx
0x000044c6      4889c7         mov rdi, rax
0x000044c9      e8e2e5ffff     call sym.imp.fputs_unlocked
0x000044ce      488b1dd35b21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x000044d5      488d351cfa00.  lea rsi, str.By_default__sparse_SOURCE_files_are_detected_by_a_crude_heuristic_and_the__corresponding_DEST_file_is_made_sparse_as_well.__That_is_the_behavior__selected_by___sparse_auto.__Specify___sparse_always_to_create_a_sparse_DEST__file_whenever_the_SOURCE_file_contains_a_long_enough_sequence_of_zero_bytes.__Use___sparse_never_to_inhibit_creation_of_sparse_files. ; 0x13ef8 ; "\nBy default, sparse SOURCE files are detected by a crude heuristic and the\ncorresponding DEST file is made sparse as well.  That is the behavior\nselected by --sparse=auto.  Specify --sparse=always to create a sparse DEST\nfile whenever the SOURCE file contains a long enough sequence of zero bytes.\nUse --sparse=never to inhibit creation of sparse files.\n"
0x000044dc      ba05000000     mov edx, 5
0x000044e1      31ff           xor edi, edi
0x000044e3      e8f8e3ffff     call sym.imp.dcgettext
0x000044e8      4889de         mov rsi, rbx
0x000044eb      4889c7         mov rdi, rax
0x000044ee      e8bde5ffff     call sym.imp.fputs_unlocked
0x000044f3      488b1dae5b21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x000044fa      488d355ffb00.  lea rsi, str.When___reflink__always__is_specified__perform_a_lightweight_copy__where_the__data_blocks_are_copied_only_when_modified.__If_this_is_not_possible_the_copy__fails__or_if___reflink_auto_is_specified__fall_back_to_a_standard_copy.__Use___reflink_never_to_ensure_a_standard_copy_is_performed. ; 0x14060 ; "\nWhen --reflink[=always] is specified, perform a lightweight copy, where the\ndata blocks are copied only when modified.  If this is not possible the copy\nfails, or if --reflink=auto is specified, fall back to a standard copy.\nUse --reflink=never to ensure a standard copy is performed.\n"
0x00004501      ba05000000     mov edx, 5
0x00004506      31ff           xor edi, edi
0x00004508      e8d3e3ffff     call sym.imp.dcgettext
0x0000450d      4889de         mov rsi, rbx
0x00004510      4889c7         mov rdi, rax
0x00004513      e898e5ffff     call sym.imp.fputs_unlocked
0x00004518      488b1d895b21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x0000451f      488d355afc00.  lea rsi, str.The_backup_suffix_is______unless_set_with___suffix_or_SIMPLE_BACKUP_SUFFIX.__The_version_control_method_may_be_selected_via_the___backup_option_or_through__the_VERSION_CONTROL_environment_variable.__Here_are_the_values: ; 0x14180 ; "\nThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\nThe version control method may be selected via the --backup option or through\nthe VERSION_CONTROL environment variable.  Here are the values:\n\n"
0x00004526      ba05000000     mov edx, 5
0x0000452b      31ff           xor edi, edi
0x0000452d      e8aee3ffff     call sym.imp.dcgettext
0x00004532      4889de         mov rsi, rbx
0x00004535      4889c7         mov rdi, rax
0x00004538      e873e5ffff     call sym.imp.fputs_unlocked
0x0000453d      488b1d645b21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x00004544      488d3515fd00.  lea rsi, str.none__off_______never_make_backups__even_if___backup_is_given_____numbered__t_____make_numbered_backups____existing__nil___numbered_if_numbered_backups_exist__simple_otherwise____simple__never___always_make_simple_backups ; 0x14260 ; "  none, off       never make backups (even if --backup is given)\n  numbered, t     make numbered backups\n  existing, nil   numbered if numbered backups exist, simple otherwise\n  simple, never   always make simple backups\n"
0x0000454b      ba05000000     mov edx, 5
0x00004550      31ff           xor edi, edi
0x00004552      e889e3ffff     call sym.imp.dcgettext
0x00004557      4889de         mov rsi, rbx
0x0000455a      4889c7         mov rdi, rax
0x0000455d      e84ee5ffff     call sym.imp.fputs_unlocked
0x00004562      488b1d3f5b21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x00004569      488d35d0fd00.  lea rsi, str.As_a_special_case__cp_makes_a_backup_of_SOURCE_when_the_force_and_backup__options_are_given_and_SOURCE_and_DEST_are_the_same_name_for_an_existing___regular_file. ; 0x14340 ; "\nAs a special case, cp makes a backup of SOURCE when the force and backup\noptions are given and SOURCE and DEST are the same name for an existing,\nregular file.\n"
0x00004570      ba05000000     mov edx, 5
0x00004575      31ff           xor edi, edi
0x00004577      e864e3ffff     call sym.imp.dcgettext
0x0000457c      4889de         mov rsi, rbx
0x0000457f      4889c7         mov rdi, rax
0x00004582      488d1dbce300.  lea rbx, [0x00012945]                   ; "cp"
0x00004589      e822e5ffff     call sym.imp.fputs_unlocked
0x0000458e      488d05b3e300.  lea rax, [0x00012948]                   ; "["
0x00004595      488d0dede300.  lea rcx, str.sha256sum                  ; 0x12989 ; "sha256sum"
0x0000459c      48c744246000.  mov qword [rsp + 0x60], 0
0x000045a5      48c744246800.  mov qword [rsp + 0x68], 0
0x000045ae      4889e2         mov rdx, rsp
0x000045b1      48890424       mov qword [rsp], rax
0x000045b5      488d058ee300.  lea rax, [0x0001294a]                   ; "test invocation"
0x000045bc      48894c2430     mov qword [rsp + 0x30], rcx
0x000045c1      488d0dcbe300.  lea rcx, str.sha384sum                  ; 0x12993 ; "sha384sum"
0x000045c8      4889442408     mov qword [rsp + 8], rax
0x000045cd      488d05eee300.  lea rax, [0x000129c2]                   ; "coreutils"
0x000045d4      48894c2440     mov qword [rsp + 0x40], rcx
0x000045d9      488d0dbde300.  lea rcx, str.sha512sum                  ; 0x1299d ; "sha512sum"
0x000045e0      4889442410     mov qword [rsp + 0x10], rax
0x000045e5      488d056ee300.  lea rax, [0x0001295a]                   ; "Multi-call invocation"
0x000045ec      48894c2450     mov qword [rsp + 0x50], rcx
0x000045f1      4889442418     mov qword [rsp + 0x18], rax
0x000045f6      488d0573e300.  lea rax, str.sha224sum                  ; 0x12970 ; "sha224sum"
0x000045fd      4889442420     mov qword [rsp + 0x20], rax
0x00004602      488d0571e300.  lea rax, str.sha2_utilities             ; 0x1297a ; "sha2 utilities"
0x00004609      4889442428     mov qword [rsp + 0x28], rax
0x0000460e      4889442438     mov qword [rsp + 0x38], rax
0x00004613      4889442448     mov qword [rsp + 0x48], rax
0x00004618      4889442458     mov qword [rsp + 0x58], rax
0x0000461d      0f1f00         nop dword [rax]
0x00004620      4883c210       add rdx, 0x10
0x00004624      488b3a         mov rdi, qword [rdx]
0x00004627      4885ff         test rdi, rdi
0x0000462a      7413           je 0x463f
0x0000462c      b903000000     mov ecx, 3
0x00004631      4889de         mov rsi, rbx
0x00004634      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004636      0f97c0         seta al
0x00004639      1c00           sbb al, 0
0x0000463b      84c0           test al, al
0x0000463d      75e1           jne 0x4620
0x0000463f      4c8b6208       mov r12, qword [rdx + 8]
0x00004643      31ff           xor edi, edi
0x00004645      ba05000000     mov edx, 5
0x0000464a      488d3556e300.  lea rsi, str.s_online_help:___s         ; 0x129a7 ; "\n%s online help: <%s>\n"
0x00004651      4d85e4         test r12, r12
0x00004654      0f84c1000000   je 0x471b
0x0000465a      e881e2ffff     call sym.imp.dcgettext
0x0000465f      488d0d82fd00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x143e8 ; "https://www.gnu.org/software/coreutils/"
0x00004666      488d1551e300.  lea rdx, str.GNU_coreutils              ; 0x129be ; "GNU coreutils"
0x0000466d      4889c6         mov rsi, rax
0x00004670      bf01000000     mov edi, 1
0x00004675      31c0           xor eax, eax
0x00004677      e8e4e5ffff     call sym.imp.__printf_chk
0x0000467c      31f6           xor esi, esi
0x0000467e      bf05000000     mov edi, 5
0x00004683      e8c8e5ffff     call sym.imp.setlocale
0x00004688      4885c0         test rax, rax
0x0000468b      741c           je 0x46a9
0x0000468d      488d3538e300.  lea rsi, [0x000129cc]                   ; "en_"
0x00004694      ba03000000     mov edx, 3
0x00004699      4889c7         mov rdi, rax
0x0000469c      e8efe0ffff     call sym.imp.strncmp
0x000046a1      85c0           test eax, eax
0x000046a3      0f8507010000   jne 0x47b0
0x000046a9      488d3520e300.  lea rsi, str.Full_documentation___s_s   ; 0x129d0 ; "Full documentation <%s%s>\n"
0x000046b0      31ff           xor edi, edi
0x000046b2      ba05000000     mov edx, 5
0x000046b7      e824e2ffff     call sym.imp.dcgettext
0x000046bc      488d0d82e200.  lea rcx, [0x00012945]                   ; "cp"
0x000046c3      488d151efd00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x143e8 ; "https://www.gnu.org/software/coreutils/"
0x000046ca      4889c6         mov rsi, rax
0x000046cd      bf01000000     mov edi, 1
0x000046d2      31c0           xor eax, eax
0x000046d4      e887e5ffff     call sym.imp.__printf_chk
0x000046d9      4939dc         cmp r12, rbx
0x000046dc      488d0d81e200.  lea rcx, [0x00012964]                   ; " invocation"
0x000046e3      488d1d5c0901.  lea rbx, [0x00015046]
0x000046ea      480f44d9       cmove rbx, rcx
0x000046ee      488d3563fd00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x14458 ; "or available locally via: info '(coreutils) %s%s'\n"
0x000046f5      31ff           xor edi, edi
0x000046f7      ba05000000     mov edx, 5
0x000046fc      e8dfe1ffff     call sym.imp.dcgettext
0x00004701      4889d9         mov rcx, rbx
0x00004704      4889c6         mov rsi, rax
0x00004707      4c89e2         mov rdx, r12
0x0000470a      bf01000000     mov edi, 1
0x0000470f      31c0           xor eax, eax
0x00004711      e84ae5ffff     call sym.imp.__printf_chk
0x00004716      e95bfbffff     jmp 0x4276
0x0000471b      e8c0e1ffff     call sym.imp.dcgettext
0x00004720      488d0dc1fc00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x143e8 ; "https://www.gnu.org/software/coreutils/"
0x00004727      488d1590e200.  lea rdx, str.GNU_coreutils              ; 0x129be ; "GNU coreutils"
0x0000472e      4889c6         mov rsi, rax
0x00004731      bf01000000     mov edi, 1
0x00004736      31c0           xor eax, eax
0x00004738      e823e5ffff     call sym.imp.__printf_chk
0x0000473d      31f6           xor esi, esi
0x0000473f      bf05000000     mov edi, 5
0x00004744      e807e5ffff     call sym.imp.setlocale
0x00004749      4885c0         test rax, rax
0x0000474c      7418           je 0x4766
0x0000474e      488d3577e200.  lea rsi, [0x000129cc]                   ; "en_"
0x00004755      ba03000000     mov edx, 3
0x0000475a      4889c7         mov rdi, rax
0x0000475d      e82ee0ffff     call sym.imp.strncmp
0x00004762      85c0           test eax, eax
0x00004764      7543           jne 0x47a9
0x00004766      488d3563e200.  lea rsi, str.Full_documentation___s_s   ; 0x129d0 ; "Full documentation <%s%s>\n"
0x0000476d      ba05000000     mov edx, 5
0x00004772      31ff           xor edi, edi
0x00004774      4c8d25cae100.  lea r12, [0x00012945]                   ; "cp"
0x0000477b      488d1de2e100.  lea rbx, [0x00012964]                   ; " invocation"
0x00004782      e859e1ffff     call sym.imp.dcgettext
0x00004787      488d0db7e100.  lea rcx, [0x00012945]                   ; "cp"
0x0000478e      488d1553fc00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x143e8 ; "https://www.gnu.org/software/coreutils/"
0x00004795      4889c6         mov rsi, rax
0x00004798      bf01000000     mov edi, 1
0x0000479d      31c0           xor eax, eax
0x0000479f      e8bce4ffff     call sym.imp.__printf_chk
0x000047a4      e945ffffff     jmp 0x46ee
0x000047a9      4c8d2595e100.  lea r12, [0x00012945]                   ; "cp"
0x000047b0      4c8b2df15821.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x000047b7      488d3552fc00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x14410 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000047be      31ff           xor edi, edi
0x000047c0      ba05000000     mov edx, 5
0x000047c5      e816e1ffff     call sym.imp.dcgettext
0x000047ca      4c89ee         mov rsi, r13
0x000047cd      4889c7         mov rdi, rax
0x000047d0      e8dbe2ffff     call sym.imp.fputs_unlocked
0x000047d5      e9cffeffff     jmp 0x46a9
0x000047da      660f1f440000   nop word [rax + rax]
;-- do_copy:
0x000047e0      55             push rbp
0x000047e1      4889e5         mov rbp, rsp
0x000047e4      4157           push r15
0x000047e6      4156           push r14
0x000047e8      4155           push r13
0x000047ea      4154           push r12
0x000047ec      4c63e7         movsxd r12, edi
0x000047ef      53             push rbx
0x000047f0      4889f3         mov rbx, rsi
0x000047f3      4881ece80000.  sub rsp, 0xe8
0x000047fa      48899508ffff.  mov qword [rbp - 0xf8], rdx
0x00004801      c6851effffff.  mov byte [rbp - 0xe2], 0
0x00004808      64488b042528.  mov rax, qword fs:[0x28]
0x00004811      488945c8       mov qword [rbp - 0x38], rax
0x00004815      31c0           xor eax, eax
0x00004817      41f7401400ff.  test dword [r8 + 0x14], 0xffff00
0x0000481f      0f95c0         setne al
0x00004822      4885d2         test rdx, rdx
0x00004825      0f94c2         sete dl
0x00004828      0fb6d2         movzx edx, dl
0x0000482b      4439e2         cmp edx, r12d
0x0000482e      0f8d5f040000   jge 0x4c93
0x00004834      84c9           test cl, cl
0x00004836      4d89c6         mov r14, r8
0x00004839      0f84f7000000   je 0x4936
0x0000483f      4883bd08ffff.  cmp qword [rbp - 0xf8], 0
0x00004847      0f8522040000   jne 0x4c6f
0x0000484d      4183fc02       cmp r12d, 2
0x00004851      0f8fd9030000   jg 0x4c30
0x00004857      4a8b7ce3f8     mov rdi, qword [rbx + r12*8 - 8]
0x0000485c      488d951effff.  lea rdx, [rbp - 0xe2]
0x00004863      488db530ffff.  lea rsi, [rbp - 0xd0]
0x0000486a      0fb6c8         movzx ecx, al
0x0000486d      e8bef0ffff     call sym.target_directory_operand
0x00004872      803dd8582100.  cmp byte [obj.parents_option], 0        ; [0x21a151:1]=0
0x00004879      4c8b23         mov r12, qword [rbx]
0x0000487c      488b5b08       mov rbx, qword [rbx + 8]
0x00004880      0f8536040000   jne 0x4cbc
0x00004886      41807e1600     cmp byte [r14 + 0x16], 0
0x0000488b      7467           je 0x48f4
0x0000488d      458b2e         mov r13d, dword [r14]
0x00004890      4585ed         test r13d, r13d
0x00004893      745f           je 0x48f4
0x00004895      4889de         mov rsi, rbx
0x00004898      4c89e7         mov rdi, r12
0x0000489b      e850e2ffff     call sym.imp.strcmp
0x000048a0      85c0           test eax, eax
0x000048a2      7550           jne 0x48f4
0x000048a4      80bd1effffff.  cmp byte [rbp - 0xe2], 0
0x000048ab      7547           jne 0x48f4
0x000048ad      8b8548ffffff   mov eax, dword [rbp - 0xb8]
0x000048b3      2500f00000     and eax, 0xf000
0x000048b8      3d00800000     cmp eax, 0x8000
0x000048bd      7535           jne 0x48f4
0x000048bf      4889de         mov rsi, rbx
0x000048c2      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x000048c7      4489ea         mov edx, r13d
0x000048ca      e8f1680000     call sym.find_backup_file_name
0x000048cf      4c89f6         mov rsi, r14
0x000048d2      4c8d35275821.  lea r14, obj.x_tmp.7353                 ; 0x21a100
0x000048d9      488d3d205821.  lea rdi, obj.x_tmp.7353                 ; 0x21a100
0x000048e0      b914000000     mov ecx, 0x14
0x000048e5      4889c3         mov rbx, rax
0x000048e8      f3a5           rep movsd dword [rdi], dword ptr [rsi]
0x000048ea      c7050c582100.  mov dword [obj.x_tmp.7353], 0           ; [0x21a100:4]=0
0x000048f4      4c8d8528ffff.  lea r8, [rbp - 0xd8]
0x000048fb      4531c9         xor r9d, r9d
0x000048fe      4c89f1         mov rcx, r14
0x00004901      31d2           xor edx, edx
0x00004903      4889de         mov rsi, rbx
0x00004906      4c89e7         mov rdi, r12
0x00004909      e882520000     call sym.copy
0x0000490e      4189c7         mov r15d, eax
0x00004911      488b4dc8       mov rcx, qword [rbp - 0x38]
0x00004915      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000491e      4489f8         mov eax, r15d
0x00004921      0f8590030000   jne 0x4cb7
0x00004927      488d65d8       lea rsp, [rbp - 0x28]
0x0000492b      5b             pop rbx
0x0000492c      415c           pop r12
0x0000492e      415d           pop r13
0x00004930      415e           pop r14
0x00004932      415f           pop r15
0x00004934      5d             pop rbp
0x00004935      c3             ret
0x00004936      4883bd08ffff.  cmp qword [rbp - 0xf8], 0
0x0000493e      0f845a020000   je 0x4b9e
0x00004944      4183fc01       cmp r12d, 1
0x00004948      0f853b020000   jne 0x4b89
0x0000494e      418d4424ff     lea eax, [r12 - 1]
0x00004953      41bf01000000   mov r15d, 1
0x00004959      488d44c308     lea rax, [rbx + rax*8 + 8]
0x0000495e      48898500ffff.  mov qword [rbp - 0x100], rax
0x00004965      488d851fffff.  lea rax, [rbp - 0xe1]
0x0000496c      488985f0feff.  mov qword [rbp - 0x110], rax
0x00004973      488d8528ffff.  lea rax, [rbp - 0xd8]
0x0000497a      488985f8feff.  mov qword [rbp - 0x108], rax
0x00004981      e9be000000     jmp 0x4a44
0x00004986      662e0f1f8400.  nop word cs:[rax + rax]
0x00004990      e86bdfffff     call sym.imp.strlen
0x00004995      488d5001       lea rdx, [rax + 1]
0x00004999      4883c01f       add rax, 0x1f
0x0000499d      4c89ee         mov rsi, r13
0x000049a0      4883e0f0       and rax, 0xfffffffffffffff0
0x000049a4      4829c4         sub rsp, rax
0x000049a7      488d7c240f     lea rdi, [rsp + 0xf]
0x000049ac      4883e7f0       and rdi, 0xfffffffffffffff0
0x000049b0      e8abe1ffff     call sym.imp.memcpy
0x000049b5      4889c7         mov rdi, rax
0x000049b8      4989c4         mov r12, rax
0x000049bb      e8806c0000     call sym.strip_trailing_slashes
0x000049c0      488b95f8feff.  mov rdx, qword [rbp - 0x108]
0x000049c7      488bbd08ffff.  mov rdi, qword [rbp - 0xf8]
0x000049ce      4c89e6         mov rsi, r12
0x000049d1      e8ea6f0000     call sym.file_name_concat
0x000049d6      41807e2e00     cmp byte [r14 + 0x2e], 0
0x000049db      488bb528ffff.  mov rsi, qword [rbp - 0xd8]
0x000049e2      4989c4         mov r12, rax
0x000049e5      488d05ffdf00.  lea rax, [0x000129eb]                   ; "%s -> %s\n"
0x000049ec      ba00000000     mov edx, 0
0x000049f1      488d8d20ffff.  lea rcx, [rbp - 0xe0]
0x000049f8      4c8d851effff.  lea r8, [rbp - 0xe2]
0x000049ff      4d89f1         mov r9, r14
0x00004a02      4c89e7         mov rdi, r12
0x00004a05      480f45d0       cmovne rdx, rax
0x00004a09      4c29e6         sub rsi, r12
0x00004a0c      e8efefffff     call sym.make_dir_parents_private
0x00004a11      84c0           test al, al
0x00004a13      0f85be000000   jne 0x4ad7
0x00004a19      0fb605315721.  movzx eax, byte [obj.parents_option]    ; [0x21a151:1]=0
0x00004a20      4531ff         xor r15d, r15d
0x00004a23      84c0           test al, al
0x00004a25      0f8520010000   jne 0x4b4b
0x00004a2b      4c89e7         mov rdi, r12
0x00004a2e      4883c308       add rbx, 8
0x00004a32      e8d9e3ffff     call sym..plt.got
0x00004a37      48399d00ffff.  cmp qword [rbp - 0x100], rbx
0x00004a3e      0f84cdfeffff   je 0x4911
0x00004a44      803d05572100.  cmp byte [obj.remove_trailing_slashes], 0 ; [0x21a150:1]=0
0x00004a4b      48c78528ffff.  mov qword [rbp - 0xd8], 0
0x00004a56      4c8b2b         mov r13, qword [rbx]
0x00004a59      0f8501010000   jne 0x4b60
0x00004a5f      803deb562100.  cmp byte [obj.parents_option], 0        ; [0x21a151:1]=0
0x00004a66      4c89ef         mov rdi, r13
0x00004a69      0f8521ffffff   jne 0x4990
0x00004a6f      e81c6b0000     call sym.last_component
0x00004a74      4889c7         mov rdi, rax
0x00004a77      4989c4         mov r12, rax
0x00004a7a      e881deffff     call sym.imp.strlen
0x00004a7f      488d5001       lea rdx, [rax + 1]
0x00004a83      4883c01f       add rax, 0x1f
0x00004a87      4c89e6         mov rsi, r12
0x00004a8a      4883e0f0       and rax, 0xfffffffffffffff0
0x00004a8e      4829c4         sub rsp, rax
0x00004a91      488d7c240f     lea rdi, [rsp + 0xf]
0x00004a96      4883e7f0       and rdi, 0xfffffffffffffff0
0x00004a9a      e8c1e0ffff     call sym.imp.memcpy
0x00004a9f      4889c7         mov rdi, rax
0x00004aa2      4989c4         mov r12, rax
0x00004aa5      e8966b0000     call sym.strip_trailing_slashes
0x00004aaa      488d3d87df00.  lea rdi, [0x00012a38]                   ; ".."
0x00004ab1      b903000000     mov ecx, 3
0x00004ab6      4c89e6         mov rsi, r12
0x00004ab9      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004abb      0f97c0         seta al
0x00004abe      1c00           sbb al, 0
0x00004ac0      84c0           test al, al
0x00004ac2      0f85a8000000   jne 0x4b70
0x00004ac8      488bbd08ffff.  mov rdi, qword [rbp - 0xf8]
0x00004acf      e87cc70000     call sym.xstrdup
0x00004ad4      4989c4         mov r12, rax
0x00004ad7      0fb6951effff.  movzx edx, byte [rbp - 0xe2]
0x00004ade      4c8b85f0feff.  mov r8, qword [rbp - 0x110]
0x00004ae5      4531c9         xor r9d, r9d
0x00004ae8      4c89f1         mov rcx, r14
0x00004aeb      4c89e6         mov rsi, r12
0x00004aee      4c89ef         mov rdi, r13
0x00004af1      e89a500000     call sym.copy
0x00004af6      4121c7         and r15d, eax
0x00004af9      803d51562100.  cmp byte [obj.parents_option], 0        ; [0x21a151:1]=0
0x00004b00      0f8425ffffff   je 0x4a2b
0x00004b06      488bb528ffff.  mov rsi, qword [rbp - 0xd8]
0x00004b0d      488b9520ffff.  mov rdx, qword [rbp - 0xe0]
0x00004b14      4c89f1         mov rcx, r14
0x00004b17      4c89e7         mov rdi, r12
0x00004b1a      4c29e6         sub rsi, r12
0x00004b1d      e89ef4ffff     call sym.re_protect
0x00004b22      4121c7         and r15d, eax
0x00004b25      0fb605255621.  movzx eax, byte [obj.parents_option]    ; [0x21a151:1]=0
0x00004b2c      e9f2feffff     jmp 0x4a23
0x00004b31      0f1f80000000.  nop dword [rax]
0x00004b38      488b87a00000.  mov rax, qword [rdi + 0xa0]
0x00004b3f      48898520ffff.  mov qword [rbp - 0xe0], rax
0x00004b46      e8c5e2ffff     call sym..plt.got
0x00004b4b      488bbd20ffff.  mov rdi, qword [rbp - 0xe0]
0x00004b52      4885ff         test rdi, rdi
0x00004b55      75e1           jne 0x4b38
0x00004b57      e9cffeffff     jmp 0x4a2b
0x00004b5c      0f1f4000       nop dword [rax]
0x00004b60      4c89ef         mov rdi, r13
0x00004b63      e8d86a0000     call sym.strip_trailing_slashes
0x00004b68      e9f2feffff     jmp 0x4a5f
0x00004b6d      0f1f00         nop dword [rax]
0x00004b70      488bbd08ffff.  mov rdi, qword [rbp - 0xf8]
0x00004b77      4c89e6         mov rsi, r12
0x00004b7a      31d2           xor edx, edx
0x00004b7c      e83f6e0000     call sym.file_name_concat
0x00004b81      4989c4         mov r12, rax
0x00004b84      e94effffff     jmp 0x4ad7
0x00004b89      4c89f7         mov rdi, r14
0x00004b8c      e8df0b0000     call sym.dest_info_init
0x00004b91      4c89f7         mov rdi, r14
0x00004b94      e8070c0000     call sym.src_info_init
0x00004b99      e9b0fdffff     jmp 0x494e
0x00004b9e      4183fc01       cmp r12d, 1
0x00004ba2      0f84cafcffff   je 0x4872
0x00004ba8      4963d4         movsxd rdx, r12d
0x00004bab      0fb6c8         movzx ecx, al
0x00004bae      4c8d6cd6f8     lea r13, [rsi + rdx*8 - 8]
0x00004bb3      488d951effff.  lea rdx, [rbp - 0xe2]
0x00004bba      488db530ffff.  lea rsi, [rbp - 0xd0]
0x00004bc1      498b7d00       mov rdi, qword [r13]
0x00004bc5      e866edffff     call sym.target_directory_operand
0x00004bca      84c0           test al, al
0x00004bcc      7542           jne 0x4c10
0x00004bce      4183fc02       cmp r12d, 2
0x00004bd2      0f849afcffff   je 0x4872
0x00004bd8      498b7500       mov rsi, qword [r13]
0x00004bdc      bf04000000     mov edi, 4
0x00004be1      e8ca9e0000     call sym.quotearg_style
0x00004be6      488d352ede00.  lea rsi, str.target__s_is_not_a_directory ; 0x12a1b ; "target %s is not a directory"
0x00004bed      4889c3         mov rbx, rax
0x00004bf0      ba05000000     mov edx, 5
0x00004bf5      31ff           xor edi, edi
0x00004bf7      e8e4dcffff     call sym.imp.dcgettext
0x00004bfc      4889d9         mov rcx, rbx
0x00004bff      4889c2         mov rdx, rax
0x00004c02      31f6           xor esi, esi
0x00004c04      bf01000000     mov edi, 1
0x00004c09      31c0           xor eax, eax
0x00004c0b      e8a0e0ffff     call sym.imp.error
0x00004c10      4183ec01       sub r12d, 1
0x00004c14      4963c4         movsxd rax, r12d
0x00004c17      488b04c3       mov rax, qword [rbx + rax*8]
0x00004c1b      4885c0         test rax, rax
0x00004c1e      48898508ffff.  mov qword [rbp - 0xf8], rax
0x00004c25      0f8519fdffff   jne 0x4944
0x00004c2b      e942fcffff     jmp 0x4872
0x00004c30      488b7610       mov rsi, qword [rsi + 0x10]
0x00004c34      bf04000000     mov edi, 4
0x00004c39      e8729e0000     call sym.quotearg_style
0x00004c3e      488d35c5dd00.  lea rsi, str.extra_operand__s           ; 0x12a0a ; "extra operand %s"
0x00004c45      4889c3         mov rbx, rax
0x00004c48      ba05000000     mov edx, 5
0x00004c4d      31ff           xor edi, edi
0x00004c4f      e88cdcffff     call sym.imp.dcgettext
0x00004c54      4889d9         mov rcx, rbx
0x00004c57      4889c2         mov rdx, rax
0x00004c5a      31f6           xor esi, esi
0x00004c5c      31ff           xor edi, edi
0x00004c5e      31c0           xor eax, eax
0x00004c60      e84be0ffff     call sym.imp.error
0x00004c65      bf01000000     mov edi, 1
0x00004c6a      e8b1f5ffff     call sym.usage
0x00004c6f      488d354af800.  lea rsi, str.cannot_combine___target_directory___t__and___no_target_directory___T ; 0x144c0 ; "cannot combine --target-directory (-t) and --no-target-directory (-T)"
0x00004c76      ba05000000     mov edx, 5
0x00004c7b      31ff           xor edi, edi
0x00004c7d      e85edcffff     call sym.imp.dcgettext
0x00004c82      31f6           xor esi, esi
0x00004c84      4889c2         mov rdx, rax
0x00004c87      bf01000000     mov edi, 1
0x00004c8c      31c0           xor eax, eax
0x00004c8e      e81de0ffff     call sym.imp.error
0x00004c93      4183ec01       sub r12d, 1
0x00004c97      7546           jne 0x4cdf
0x00004c99      488b36         mov rsi, qword [rsi]
0x00004c9c      bf04000000     mov edi, 4
0x00004ca1      e80a9e0000     call sym.quotearg_style
0x00004ca6      ba05000000     mov edx, 5
0x00004cab      4889c3         mov rbx, rax
0x00004cae      488d35dbf700.  lea rsi, str.missing_destination_file_operand_after__s ; 0x14490 ; "missing destination file operand after %s"
0x00004cb5      eb96           jmp 0x4c4d
0x00004cb7      e874dcffff     call sym.imp.__stack_chk_fail
0x00004cbc      488d3545f800.  lea rsi, str.with___parents__the_destination_must_be_a_directory ; 0x14508 ; "with --parents, the destination must be a directory"
0x00004cc3      ba05000000     mov edx, 5
0x00004cc8      31ff           xor edi, edi
0x00004cca      e811dcffff     call sym.imp.dcgettext
0x00004ccf      31f6           xor esi, esi
0x00004cd1      4889c2         mov rdx, rax
0x00004cd4      31ff           xor edi, edi
0x00004cd6      31c0           xor eax, eax
0x00004cd8      e8d3dfffff     call sym.imp.error
0x00004cdd      eb86           jmp 0x4c65
0x00004cdf      ba05000000     mov edx, 5
0x00004ce4      488d350add00.  lea rsi, str.missing_file_operand       ; 0x129f5 ; "missing file operand"
0x00004ceb      ebdb           jmp 0x4cc8
0x00004ced      0f1f00         nop dword [rax]
;-- writable_destination:
0x00004cf0      81e600f00000   and esi, 0xf000                         ; /src:1667
0x00004cf6      81fe00a00000   cmp esi, 0xa000                         ; /src:1670
0x00004cfc      741a           je 0x4d18
0x00004cfe      53             push rbx                                ; /src:1667
0x00004cff      4889fb         mov rbx, rdi
0x00004d02      e8d9c20000     call sym.can_write_any_file             ; /src:1669
0x00004d07      84c0           test al, al
0x00004d09      7415           je 0x4d20
0x00004d0b      b801000000     mov eax, 1                              ; /src:1667
0x00004d10      5b             pop rbx                                 ; /src:1671
0x00004d11      c3             ret
0x00004d12      660f1f440000   nop word [rax + rax]
0x00004d18      b801000000     mov eax, 1                              ; /src:1667
0x00004d1d      c3             ret                                     ; /src:1671
0x00004d1e      6690           nop
0x00004d20      4889df         mov rdi, rbx                            ; /src:1670
0x00004d23      be02000000     mov esi, 2
0x00004d28      e813e0ffff     call sym.imp.euidaccess
0x00004d2d      85c0           test eax, eax
0x00004d2f      0f94c0         sete al
0x00004d32      5b             pop rbx                                 ; /src:1671
0x00004d33      c3             ret
0x00004d34      6690           nop
0x00004d36      662e0f1f8400.  nop word cs:[rax + rax]
;-- write_zeros:
0x00004d40      48833d185821.  cmp qword [obj.zeros.7570], 0           ; /src:350 ; [0x21a560:8]=0
0x00004d48      4154           push r12
0x00004d4a      4189fc         mov r12d, edi
0x00004d4d      55             push rbp
0x00004d4e      53             push rbx
0x00004d4f      4889f3         mov rbx, rsi
0x00004d52      7454           je 0x4da8                               ; /src:357
0x00004d54      4885db         test rbx, rbx                           ; /src:368
0x00004d57      750c           jne 0x4d65
0x00004d59      eb3d           jmp 0x4d98
0x00004d5b      0f1f440000     nop dword [rax + rax]
0x00004d60      4829c3         sub rbx, rax
0x00004d63      7433           je 0x4d98
0x00004d65      48391dac5221.  cmp qword [obj.nz.7571], rbx            ; /src:370 ; [0x21a018:8]=0x20000
0x00004d6c      4889dd         mov rbp, rbx
0x00004d6f      488b35ea5721.  mov rsi, qword [obj.zeros.7570]         ; /src:371 ; [0x21a560:8]=0
0x00004d76      480f462d9a52.  cmovbe rbp, qword [obj.nz.7571]         ; /src:370
0x00004d7e      4489e7         mov edi, r12d                           ; /src:371
0x00004d81      4889ea         mov rdx, rbp
0x00004d84      e8576d0000     call sym.full_write
0x00004d89      4839e8         cmp rax, rbp
0x00004d8c      74d2           je 0x4d60
0x00004d8e      5b             pop rbx                                 ; /src:377
0x00004d8f      31c0           xor eax, eax                            ; /src:372
0x00004d91      5d             pop rbp                                 ; /src:377
0x00004d92      415c           pop r12
0x00004d94      c3             ret
0x00004d95      0f1f00         nop dword [rax]
0x00004d98      5b             pop rbx
0x00004d99      b801000000     mov eax, 1                              ; /src:376
0x00004d9e      5d             pop rbp                                 ; /src:377
0x00004d9f      415c           pop r12
0x00004da1      c3             ret
0x00004da2      660f1f440000   nop word [rax + rax]
0x00004da8      488b3d695221.  mov rdi, qword [obj.nz.7571]            ; /src:360 ; [0x21a018:8]=0x20000
0x00004daf      be01000000     mov esi, 1
0x00004db4      e817ddffff     call sym.imp.calloc
0x00004db9      4885c0         test rax, rax                           ; /src:361
0x00004dbc      7409           je 0x4dc7
0x00004dbe      4889059b5721.  mov qword [obj.zeros.7570], rax         ; /src:360 ; [0x21a560:8]=0
0x00004dc5      eb8d           jmp 0x4d54
0x00004dc7      488d05925321.  lea rax, obj.fallback.7572              ; /src:363 ; 0x21a160
0x00004dce      48c7053f5221.  mov qword [obj.nz.7571], 0x400          ; /src:364 ; [0x21a018:8]=0x20000
0x00004dd9      488905805721.  mov qword [obj.zeros.7570], rax         ; /src:363 ; [0x21a560:8]=0
0x00004de0      e96fffffff     jmp 0x4d54
0x00004de5      90             nop
0x00004de6      662e0f1f8400.  nop word cs:[rax + rax]
;-- punch_hole:
0x00004df0      53             push rbx                                ; /src:170
0x00004df1      4889d1         mov rcx, rdx                            ; /src:175
0x00004df4      4889f2         mov rdx, rsi
0x00004df7      be03000000     mov esi, 3
0x00004dfc      e89fdcffff     call sym.imp.fallocate
0x00004e01      85c0           test eax, eax                           ; /src:177
0x00004e03      89c3           mov ebx, eax                            ; /src:175
0x00004e05      7809           js 0x4e10                               ; /src:177
0x00004e07      89d8           mov eax, ebx                            ; /src:182
0x00004e09      5b             pop rbx
0x00004e0a      c3             ret
0x00004e0b      0f1f440000     nop dword [rax + rax]
0x00004e10      e85bd9ffff     call sym.imp.__errno_location           ; /src:177
0x00004e15      8b00           mov eax, dword [rax]
0x00004e17      83f826         cmp eax, 0x26
0x00004e1a      7405           je 0x4e21
0x00004e1c      83f85f         cmp eax, 0x5f
0x00004e1f      75e6           jne 0x4e07
0x00004e21      31db           xor ebx, ebx                            ; /src:178
0x00004e23      89d8           mov eax, ebx                            ; /src:182
0x00004e25      5b             pop rbx
0x00004e26      c3             ret
0x00004e27      660f1f840000.  nop word [rax + rax]
;-- emit_verbose:
0x00004e30      4154           push r12                                ; /src:1760
0x00004e32      55             push rbp
0x00004e33      4989fc         mov r12, rdi
0x00004e36      53             push rbx
0x00004e37      bf01000000     mov edi, 1                              ; /src:1761
0x00004e3c      4889d3         mov rbx, rdx                            ; /src:1760
0x00004e3f      4889f2         mov rdx, rsi                            ; /src:1761
0x00004e42      be04000000     mov esi, 4
0x00004e47      e8449b0000     call sym.quotearg_n_style
0x00004e4c      31ff           xor edi, edi
0x00004e4e      4c89e2         mov rdx, r12
0x00004e51      be04000000     mov esi, 4
0x00004e56      4889c5         mov rbp, rax
0x00004e59      e8329b0000     call sym.quotearg_n_style
0x00004e5e      488d3504ff00.  lea rsi, str.s_____s                    ; ../coreutils-8.31/src/py.c:104 ; 0x14d69 ; "%s -> %s"
0x00004e65      4889c2         mov rdx, rax
0x00004e68      4889e9         mov rcx, rbp
0x00004e6b      31c0           xor eax, eax
0x00004e6d      bf01000000     mov edi, 1
0x00004e72      e8e9ddffff     call sym.imp.__printf_chk
0x00004e77      4885db         test rbx, rbx                           ; /src:1762
0x00004e7a      7435           je 0x4eb1
0x00004e7c      4889de         mov rsi, rbx                            ; /src:1763
0x00004e7f      bf04000000     mov edi, 4
0x00004e84      e8279c0000     call sym.quotearg_style
0x00004e89      488d35e2fe00.  lea rsi, str.backup:__s                 ; 0x14d72 ; " (backup: %s)"
0x00004e90      4889c3         mov rbx, rax
0x00004e93      ba05000000     mov edx, 5
0x00004e98      31ff           xor edi, edi
0x00004e9a      e841daffff     call sym.imp.dcgettext
0x00004e9f      4889da         mov rdx, rbx                            ; ../coreutils-8.31/src/py.c:104
0x00004ea2      4889c6         mov rsi, rax
0x00004ea5      bf01000000     mov edi, 1
0x00004eaa      31c0           xor eax, eax
0x00004eac      e8afddffff     call sym.imp.__printf_chk
0x00004eb1      488b3df05121.  mov rdi, qword [obj.stdout]             ; ./lib/selinux/selinux.h:107 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x00004eb8      488b4728       mov rax, qword [rdi + 0x28]
0x00004ebc      483b4730       cmp rax, qword [rdi + 0x30]
0x00004ec0      7316           jae 0x4ed8
0x00004ec2      488d5001       lea rdx, [rax + 1]
0x00004ec6      48895728       mov qword [rdi + 0x28], rdx
0x00004eca      c6000a         mov byte [rax], 0xa
0x00004ecd      5b             pop rbx                                 ; /src:1765
0x00004ece      5d             pop rbp
0x00004ecf      415c           pop r12
0x00004ed1      c3             ret
0x00004ed2      660f1f440000   nop word [rax + rax]
0x00004ed8      5b             pop rbx
0x00004ed9      5d             pop rbp
0x00004eda      415c           pop r12
0x00004edc      be0a000000     mov esi, 0xa                            ; ./lib/selinux/selinux.h:107
0x00004ee1      e9aadaffff     jmp sym.imp.__overflow
0x00004ee6      662e0f1f8400.  nop word cs:[rax + rax]
;-- create_hard_link:
0x00004ef0      4155           push r13                                ; /src:1785
0x00004ef2      4154           push r12
0x00004ef4      440fb6ca       movzx r9d, dl                           ; /src:1786
0x00004ef8      55             push rbp                                ; /src:1785
0x00004ef9      53             push rbx
0x00004efa      ba9cffffff     mov edx, 0xffffff9c                     ; /src:1786 ; 4294967196
0x00004eff      4989fd         mov r13, rdi                            ; /src:1785
0x00004f02      4989f4         mov r12, rsi
0x00004f05      89cd           mov ebp, ecx
0x00004f07      4883ec10       sub rsp, 0x10
0x00004f0b      4584c0         test r8b, r8b                           ; /src:1786
0x00004f0e      4889f1         mov rcx, rsi
0x00004f11      410f95c0       setne r8b
0x00004f15      6aff           push 0xffffffffffffffff
0x00004f17      4889fe         mov rsi, rdi
0x00004f1a      450fb6c0       movzx r8d, r8b
0x00004f1e      89d7           mov edi, edx
0x00004f20      41c1e00a       shl r8d, 0xa
0x00004f24      e8a7530000     call sym.force_linkat
0x00004f29      85c0           test eax, eax                           ; /src:1789
0x00004f2b      89c3           mov ebx, eax                            ; /src:1786
0x00004f2d      5a             pop rdx                                 ; /src:1789
0x00004f2e      59             pop rcx
0x00004f2f      7f67           jg 0x4f98
0x00004f31      c1eb1f         shr ebx, 0x1f                           ; /src:1795
0x00004f34      4020eb         and bl, bpl
0x00004f37      7517           jne 0x4f50
0x00004f39      4883c408       add rsp, 8                              ; /src:1798
0x00004f3d      bb01000000     mov ebx, 1                              ; /src:1797
0x00004f42      89d8           mov eax, ebx                            ; /src:1798
0x00004f44      5b             pop rbx
0x00004f45      5d             pop rbp
0x00004f46      415c           pop r12
0x00004f48      415d           pop r13
0x00004f4a      c3             ret
0x00004f4b      0f1f440000     nop dword [rax + rax]
0x00004f50      4c89e6         mov rsi, r12                            ; /src:1796
0x00004f53      bf04000000     mov edi, 4
0x00004f58      e8539b0000     call sym.quotearg_style
0x00004f5d      488d351cfe00.  lea rsi, str.removed__s                 ; 0x14d80 ; "removed %s\n"
0x00004f64      4889c5         mov rbp, rax
0x00004f67      ba05000000     mov edx, 5
0x00004f6c      31ff           xor edi, edi
0x00004f6e      e86dd9ffff     call sym.imp.dcgettext
0x00004f73      4889ea         mov rdx, rbp                            ; ../coreutils-8.31/src/py.c:104
0x00004f76      4889c6         mov rsi, rax
0x00004f79      bf01000000     mov edi, 1
0x00004f7e      31c0           xor eax, eax
0x00004f80      e8dbdcffff     call sym.imp.__printf_chk
0x00004f85      4883c408       add rsp, 8                              ; /src:1798
0x00004f89      89d8           mov eax, ebx
0x00004f8b      5b             pop rbx
0x00004f8c      5d             pop rbp
0x00004f8d      415c           pop r12
0x00004f8f      415d           pop r13
0x00004f91      c3             ret
0x00004f92      660f1f440000   nop word [rax + rax]
0x00004f98      4c89ea         mov rdx, r13                            ; /src:1791
0x00004f9b      be04000000     mov esi, 4
0x00004fa0      bf01000000     mov edi, 1
0x00004fa5      e8e6990000     call sym.quotearg_n_style
0x00004faa      4c89e2         mov rdx, r12
0x00004fad      be04000000     mov esi, 4
0x00004fb2      31ff           xor edi, edi
0x00004fb4      4989c5         mov r13, rax
0x00004fb7      e8d4990000     call sym.quotearg_n_style
0x00004fbc      488d35bdf700.  lea rsi, str.cannot_create_hard_link__s_to__s ; 0x14780 ; "cannot create hard link %s to %s"
0x00004fc3      4889c5         mov rbp, rax
0x00004fc6      ba05000000     mov edx, 5
0x00004fcb      31ff           xor edi, edi
0x00004fcd      e80ed9ffff     call sym.imp.dcgettext
0x00004fd2      4d89e8         mov r8, r13
0x00004fd5      4889e9         mov rcx, rbp
0x00004fd8      4889c2         mov rdx, rax
0x00004fdb      89de           mov esi, ebx
0x00004fdd      31c0           xor eax, eax
0x00004fdf      31ff           xor edi, edi
0x00004fe1      e8cadcffff     call sym.imp.error
0x00004fe6      31db           xor ebx, ebx                            ; /src:1793
0x00004fe8      4883c408       add rsp, 8                              ; /src:1798
0x00004fec      89d8           mov eax, ebx
0x00004fee      5b             pop rbx
0x00004fef      5d             pop rbp
0x00004ff0      415c           pop r12
0x00004ff2      415d           pop r13
0x00004ff4      c3             ret
0x00004ff5      90             nop
0x00004ff6      662e0f1f8400.  nop word cs:[rax + rax]
;-- overwrite_ok.isra.12:
0x00005000      4156           push r14                                ; /src:1674
0x00005002      4155           push r13
0x00005004      4989fd         mov r13, rdi
0x00005007      4154           push r12
0x00005009      55             push rbp
0x0000500a      4889d5         mov rbp, rdx
0x0000500d      53             push rbx
0x0000500e      4889f3         mov rbx, rsi
0x00005011      4889df         mov rdi, rbx                            ; /src:1677
0x00005014      4883ec20       sub rsp, 0x20                           ; /src:1674
0x00005018      8b32           mov esi, dword [rdx]                    ; /src:1677
0x0000501a      64488b042528.  mov rax, qword fs:[0x28]                ; /src:1674
0x00005023      4889442418     mov qword [rsp + 0x18], rax
0x00005028      31c0           xor eax, eax
0x0000502a      e8c1fcffff     call sym.writable_destination           ; /src:1677
0x0000502f      84c0           test al, al
0x00005031      0f8591000000   jne 0x50c8
0x00005037      8b7d00         mov edi, dword [rbp]                    ; /src:1680
0x0000503a      4c8d64240c     lea r12, [rsp + 0xc]
0x0000503f      4c89e6         mov rsi, r12
0x00005042      e8d9670000     call sym.strmode
0x00005047      8b6d00         mov ebp, dword [rbp]                    ; /src:1682
0x0000504a      4889de         mov rsi, rbx
0x0000504d      bf04000000     mov edi, 4
0x00005052      c644241600     mov byte [rsp + 0x16], 0                ; /src:1681
0x00005057      e8549a0000     call sym.quotearg_style                 ; /src:1682
0x0000505c      81e5ff0f0000   and ebp, 0xfff
0x00005062      41807d1800     cmp byte [r13 + 0x18], 0
0x00005067      4989c6         mov r14, rax
0x0000506a      488b1d2f5521.  mov rbx, qword [obj.program_name]       ; [0x21a5a0:8]=0
0x00005071      ba05000000     mov edx, 5
0x00005076      750e           jne 0x5086
0x00005078      41f7451400ff.  test dword [r13 + 0x14], 0xffff00       ; /src:1684
0x00005080      0f84aa000000   je 0x5130
0x00005086      488d351bf700.  lea rsi, str.s:_replace__s__overriding_mode__04lo___s ; /src:1682 ; 0x147a8 ; "%s: replace %s, overriding mode %04lo (%s)? "
0x0000508d      31ff           xor edi, edi
0x0000508f      e84cd8ffff     call sym.imp.dcgettext
0x00005094      4889c2         mov rdx, rax
0x00005097      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/src/py.c:97
0x0000509b      4983c401       add r12, 1
0x0000509f      488b3d3a5021.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a0e0:8]=0
0x000050a6      4154           push r12
0x000050a8      4989e9         mov r9, rbp
0x000050ab      4d89f0         mov r8, r14
0x000050ae      4889d9         mov rcx, rbx
0x000050b1      be01000000     mov esi, 1
0x000050b6      31c0           xor eax, eax
0x000050b8      e8f3dcffff     call sym.imp.__fprintf_chk
0x000050bd      58             pop rax
0x000050be      5a             pop rdx
0x000050bf      eb4d           jmp 0x510e
0x000050c1      0f1f80000000.  nop dword [rax]
0x000050c8      4889de         mov rsi, rbx                            ; /src:1693
0x000050cb      bf04000000     mov edi, 4
0x000050d0      e8db990000     call sym.quotearg_style
0x000050d5      488d35b0fc00.  lea rsi, str.s:_overwrite__s            ; 0x14d8c ; "%s: overwrite %s? "
0x000050dc      488b1dbd5421.  mov rbx, qword [obj.program_name]       ; [0x21a5a0:8]=0
0x000050e3      ba05000000     mov edx, 5
0x000050e8      31ff           xor edi, edi
0x000050ea      4889c5         mov rbp, rax
0x000050ed      e8eed7ffff     call sym.imp.dcgettext
0x000050f2      488b3de74f21.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/src/py.c:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a0e0:8]=0
0x000050f9      4889c2         mov rdx, rax
0x000050fc      4989e8         mov r8, rbp
0x000050ff      4889d9         mov rcx, rbx
0x00005102      be01000000     mov esi, 1
0x00005107      31c0           xor eax, eax
0x00005109      e8a2dcffff     call sym.imp.__fprintf_chk
0x0000510e      e89dc10000     call sym.yesno                          ; /src:1697
0x00005113      488b4c2418     mov rcx, qword [rsp + 0x18]             ; /src:1698
0x00005118      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005121      7523           jne 0x5146
0x00005123      4883c420       add rsp, 0x20
0x00005127      5b             pop rbx
0x00005128      5d             pop rbp
0x00005129      415c           pop r12
0x0000512b      415d           pop r13
0x0000512d      415e           pop r14
0x0000512f      c3             ret
0x00005130      488d35a1f600.  lea rsi, str.s:_unwritable__s__mode__04lo___s___try_anyway ; /src:1682 ; 0x147d8 ; "%s: unwritable %s (mode %04lo, %s); try anyway? "
0x00005137      31ff           xor edi, edi
0x00005139      e8a2d7ffff     call sym.imp.dcgettext
0x0000513e      4889c2         mov rdx, rax
0x00005141      e951ffffff     jmp 0x5097
0x00005146      e8e5d7ffff     call sym.imp.__stack_chk_fail           ; /src:1698
0x0000514b      0f1f440000     nop dword [rax + rax]
;-- create_hole:
0x00005150      4155           push r13                                ; /src:189
0x00005152      4154           push r12
0x00005154      4989f5         mov r13, rsi
0x00005157      55             push rbp
0x00005158      53             push rbx
0x00005159      4189d4         mov r12d, edx
0x0000515c      4889ce         mov rsi, rcx                            ; /src:190
0x0000515f      ba01000000     mov edx, 1
0x00005164      89fd           mov ebp, edi                            ; /src:189
0x00005166      4883ec08       sub rsp, 8
0x0000516a      4889cb         mov rbx, rcx
0x0000516d      e84ed8ffff     call sym.imp.lseek                      ; /src:190
0x00005172      4885c0         test rax, rax                           ; /src:192
0x00005175      7879           js 0x51f0
0x00005177      4584e4         test r12b, r12b                         ; /src:202
0x0000517a      7514           jne 0x5190
0x0000517c      4883c408       add rsp, 8                              ; /src:209
0x00005180      b801000000     mov eax, 1                              ; /src:208
0x00005185      5b             pop rbx                                 ; /src:209
0x00005186      5d             pop rbp
0x00005187      415c           pop r12
0x00005189      415d           pop r13
0x0000518b      c3             ret
0x0000518c      0f1f4000       nop dword [rax]
0x00005190      4829d8         sub rax, rbx                            ; /src:202
0x00005193      4889da         mov rdx, rbx
0x00005196      89ef           mov edi, ebp
0x00005198      4889c6         mov rsi, rax
0x0000519b      e850fcffff     call sym.punch_hole
0x000051a0      85c0           test eax, eax
0x000051a2      79d8           jns 0x517c
0x000051a4      4c89ee         mov rsi, r13                            ; /src:204
0x000051a7      bf04000000     mov edi, 4
0x000051ac      e8ff980000     call sym.quotearg_style
0x000051b1      488d35f7fb00.  lea rsi, str.error_deallocating__s      ; 0x14daf ; "error deallocating %s"
0x000051b8      4889c5         mov rbp, rax
0x000051bb      ba05000000     mov edx, 5
0x000051c0      31ff           xor edi, edi
0x000051c2      e819d7ffff     call sym.imp.dcgettext
0x000051c7      4889c3         mov rbx, rax
0x000051ca      e8a1d5ffff     call sym.imp.__errno_location
0x000051cf      8b30           mov esi, dword [rax]
0x000051d1      4889e9         mov rcx, rbp
0x000051d4      4889da         mov rdx, rbx
0x000051d7      31c0           xor eax, eax
0x000051d9      31ff           xor edi, edi
0x000051db      e8d0daffff     call sym.imp.error
0x000051e0      4883c408       add rsp, 8                              ; /src:209
0x000051e4      31c0           xor eax, eax                            ; /src:204
0x000051e6      5b             pop rbx                                 ; /src:209
0x000051e7      5d             pop rbp
0x000051e8      415c           pop r12
0x000051ea      415d           pop r13
0x000051ec      c3             ret
0x000051ed      0f1f00         nop dword [rax]
0x000051f0      4c89ee         mov rsi, r13                            ; /src:194
0x000051f3      bf04000000     mov edi, 4
0x000051f8      e8b3980000     call sym.quotearg_style
0x000051fd      ba05000000     mov edx, 5
0x00005202      4889c5         mov rbp, rax
0x00005205      488d3593fb00.  lea rsi, str.cannot_lseek__s            ; 0x14d9f ; "cannot lseek %s"
0x0000520c      ebb2           jmp 0x51c0
0x0000520e      6690           nop
;-- sparse_copy:
0x00005210      4157           push r15                                ; /src:229
0x00005212      4156           push r14
0x00005214      4155           push r13
0x00005216      4154           push r12
0x00005218      55             push rbp
0x00005219      53             push rbx
0x0000521a      4883ec78       sub rsp, 0x78
0x0000521e      488b8424b000.  mov rax, qword [rsp + 0xb0]
0x00005226      488b9c24c800.  mov rbx, qword [rsp + 0xc8]
0x0000522e      4c8b9424d000.  mov r10, qword [rsp + 0xd0]
0x00005236      44884c241f     mov byte [rsp + 0x1f], r9b
0x0000523b      4889442458     mov qword [rsp + 0x58], rax
0x00005240      488b8424b800.  mov rax, qword [rsp + 0xb8]
0x00005248      41c60200       mov byte [r10], 0                       ; /src:230
0x0000524c      48895c2440     mov qword [rsp + 0x40], rbx             ; /src:229
0x00005251      4c89542460     mov qword [rsp + 0x60], r10
0x00005256      48c703000000.  mov qword [rbx], 0                      ; /src:231
0x0000525d      4889442410     mov qword [rsp + 0x10], rax             ; /src:229
0x00005262      488b8424c000.  mov rax, qword [rsp + 0xc0]
0x0000526a      4885c0         test rax, rax                           ; /src:235
0x0000526d      4889442428     mov qword [rsp + 0x28], rax             ; /src:229
0x00005272      0f849b030000   je 0x5613                               ; /src:235
0x00005278      4d85c0         test r8, r8
0x0000527b      4c89442450     mov qword [rsp + 0x50], r8
0x00005280      44894c246c     mov dword [rsp + 0x6c], r9d
0x00005285      4c0f44c1       cmove r8, rcx
0x00005289      48894c2438     mov qword [rsp + 0x38], rcx
0x0000528e      4889542420     mov qword [rsp + 0x20], rdx
0x00005293      89742418       mov dword [rsp + 0x18], esi
0x00005297      897c2468       mov dword [rsp + 0x68], edi
0x0000529b      4531ed         xor r13d, r13d                          ; /src:233
0x0000529e      4c89442448     mov qword [rsp + 0x48], r8
0x000052a3      4531ff         xor r15d, r15d                          ; /src:232
0x000052a6      488b442438     mov rax, qword [rsp + 0x38]             ; /src:237
0x000052ab      488b542428     mov rdx, qword [rsp + 0x28]
0x000052b0      488b742420     mov rsi, qword [rsp + 0x20]             ; stdio2.h:44    _G_va_list __ap))
0x000052b5      8b7c2468       mov edi, dword [rsp + 0x68]
0x000052b9      4839d0         cmp rax, rdx                            ; /src:237
0x000052bc      480f46d0       cmovbe rdx, rax
0x000052c0      e8bbd7ffff     call sym.imp.read                       ; stdio2.h:44    _G_va_list __ap))
0x000052c5      4885c0         test rax, rax                           ; /src:238
0x000052c8      4889442430     mov qword [rsp + 0x30], rax             ; stdio2.h:44    _G_va_list __ap))
0x000052cd      7961           jns 0x5330                              ; /src:238
0x000052cf      e89cd4ffff     call sym.imp.__errno_location           ; /src:240
0x000052d4      833804         cmp dword [rax], 4
0x000052d7      74cd           je 0x52a6
0x000052d9      488b742458     mov rsi, qword [rsp + 0x58]             ; /src:242
0x000052de      bf04000000     mov edi, 4
0x000052e3      4889c3         mov rbx, rax
0x000052e6      4531ff         xor r15d, r15d                          ; /src:243
0x000052e9      e8c2970000     call sym.quotearg_style                 ; /src:242
0x000052ee      488d35d0fa00.  lea rsi, str.error_reading__s           ; 0x14dc5 ; "error reading %s"
0x000052f5      ba05000000     mov edx, 5
0x000052fa      31ff           xor edi, edi
0x000052fc      4889c5         mov rbp, rax
0x000052ff      e8dcd5ffff     call sym.imp.dcgettext
0x00005304      8b33           mov esi, dword [rbx]                    ; /src:117
0x00005306      4889c2         mov rdx, rax
0x00005309      4889e9         mov rcx, rbp
0x0000530c      31ff           xor edi, edi
0x0000530e      31c0           xor eax, eax
0x00005310      e89bd9ffff     call sym.imp.error
0x00005315      4883c478       add rsp, 0x78
0x00005319      4489f8         mov eax, r15d
0x0000531c      5b             pop rbx
0x0000531d      5d             pop rbp
0x0000531e      415c           pop r12
0x00005320      415d           pop r13
0x00005322      415e           pop r14
0x00005324      415f           pop r15
0x00005326      c3             ret
0x00005327      660f1f840000.  nop word [rax + rax]
0x00005330      0f8429010000   je 0x545f
0x00005336      488b442440     mov rax, qword [rsp + 0x40]
0x0000533b      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00005340      4489f9         mov ecx, r15d
0x00005343      4c8b742420     mov r14, qword [rsp + 0x20]
0x00005348      4c8b542448     mov r10, qword [rsp + 0x48]
0x0000534d      480128         add qword [rax], rbp
0x00005350      48837c245000   cmp qword [rsp + 0x50], 0
0x00005356      4d89f3         mov r11, r14
0x00005359      4d89d7         mov r15, r10
0x0000535c      0f9544241d     setne byte [rsp + 0x1d]
0x00005361      0f1f80000000.  nop dword [rax]
0x00005368      4c39fd         cmp rbp, r15
0x0000536b      4c89fb         mov rbx, r15                            ; /usr/include/x86_64-linux-gnu/bits/stdio.h:418
0x0000536e      480f46dd       cmovbe rbx, rbp
0x00005372      4885db         test rbx, rbx
0x00005375      410f95c4       setne r12b                              ; /usr/include/x86_64-linux-gnu/bits/stdio.h:420
0x00005379      442264241d     and r12b, byte [rsp + 0x1d]
0x0000537e      0f840c010000   je 0x5490
0x00005384      4c89f6         mov rsi, r14
0x00005387      4889da         mov rdx, rbx
0x0000538a      803e00         cmp byte [rsi], 0
0x0000538d      0f852d020000   jne 0x55c0
0x00005393      4883c601       add rsi, 1
0x00005397      4883ea01       sub rdx, 1
0x0000539b      0f8487010000   je 0x5528
0x000053a1      f6c20f         test dl, 0xf
0x000053a4      75e4           jne 0x538a
0x000053a6      4c89f7         mov rdi, r14
0x000053a9      4c895c2408     mov qword [rsp + 8], r11
0x000053ae      884c241e       mov byte [rsp + 0x1e], cl
0x000053b2      e8d9d6ffff     call sym.imp.memcmp
0x000053b7      0fb64c241e     movzx ecx, byte [rsp + 0x1e]
0x000053bc      85c0           test eax, eax
0x000053be      4c8b5c2408     mov r11, qword [rsp + 8]
0x000053c3      410f94c4       sete r12b
0x000053c7      4489e2         mov edx, r12d
0x000053ca      31ca           xor edx, ecx
0x000053cc      85c0           test eax, eax
0x000053ce      0f95c0         setne al
0x000053d1      4d85ed         test r13, r13
0x000053d4      410f95c1       setne r9b
0x000053d8      4121d1         and r9d, edx
0x000053db      4c39fd         cmp rbp, r15                            ; /src:145
0x000053de      0f8754010000   ja 0x5538
0x000053e4      84c0           test al, al
0x000053e6      0f844c010000   je 0x5538
0x000053ec      4584c9         test r9b, r9b
0x000053ef      0f84a5000000   je 0x549a
0x000053f5      41bf01000000   mov r15d, 1
0x000053fb      84c9           test cl, cl
0x000053fd      884c241e       mov byte [rsp + 0x1e], cl
0x00005401      0f85ab000000   jne 0x54b2
0x00005407      8b7c2418       mov edi, dword [rsp + 0x18]
0x0000540b      4c89ea         mov rdx, r13
0x0000540e      4c89de         mov rsi, r11
0x00005411      44884c2408     mov byte [rsp + 8], r9b
0x00005416      e8c5660000     call sym.full_write
0x0000541b      4939c5         cmp r13, rax
0x0000541e      440fb64c2408   movzx r9d, byte [rsp + 8]
0x00005424      0fb64c241e     movzx ecx, byte [rsp + 0x1e]
0x00005429      0f859e010000   jne 0x55cd
0x0000542f      4585ff         test r15d, r15d
0x00005432      4989dd         mov r13, rbx
0x00005435      0f840d010000   je 0x5548                               ; /src:18
0x0000543b      4885db         test rbx, rbx
0x0000543e      0f851c010000   jne 0x5560
0x00005444      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00005449      48297c2428     sub qword [rsp + 0x28], rdi
0x0000544e      4589e7         mov r15d, r12d
0x00005451      488b442460     mov rax, qword [rsp + 0x60]
0x00005456      448820         mov byte [rax], r12b
0x00005459      0f8547feffff   jne 0x52a6
0x0000545f      4584ff         test r15b, r15b
0x00005462      0f84ab010000   je 0x5613
0x00005468      0fb654246c     movzx edx, byte [rsp + 0x6c]
0x0000546d      488b742410     mov rsi, qword [rsp + 0x10]             ; /src:-36
0x00005472      4c89e9         mov rcx, r13
0x00005475      8b7c2418       mov edi, dword [rsp + 0x18]
0x00005479      4883c478       add rsp, 0x78
0x0000547d      5b             pop rbx
0x0000547e      5d             pop rbp
0x0000547f      415c           pop r12                                 ; /src:-25
0x00005481      415d           pop r13
0x00005483      415e           pop r14
0x00005485      415f           pop r15
0x00005487      e9c4fcffff     jmp sym.create_hole
0x0000548c      0f1f4000       nop dword [rax]
0x00005490      80f901         cmp cl, 1
0x00005493      7453           je 0x54e8
0x00005495      4c39fd         cmp rbp, r15
0x00005498      774e           ja 0x54e8
0x0000549a      4901dd         add r13, rbx
0x0000549d      4531c9         xor r9d, r9d
0x000054a0      84c9           test cl, cl
0x000054a2      41bf01000000   mov r15d, 1
0x000054a8      884c241e       mov byte [rsp + 0x1e], cl
0x000054ac      0f8455ffffff   je 0x5407
0x000054b2      0fb654241f     movzx edx, byte [rsp + 0x1f]
0x000054b7      488b742410     mov rsi, qword [rsp + 0x10]
0x000054bc      4c89e9         mov rcx, r13
0x000054bf      8b7c2418       mov edi, dword [rsp + 0x18]
0x000054c3      44884c241e     mov byte [rsp + 0x1e], r9b
0x000054c8      e883fcffff     call sym.create_hole
0x000054cd      84c0           test al, al
0x000054cf      440fb64c241e   movzx r9d, byte [rsp + 0x1e]
0x000054d5      0f8554ffffff   jne 0x542f
0x000054db      4189c7         mov r15d, eax
0x000054de      e932feffff     jmp 0x5315
0x000054e3      0f1f440000     nop dword [rax + rax]
0x000054e8      4885db         test rbx, rbx
0x000054eb      750b           jne 0x54f8
0x000054ed      4189cc         mov r12d, ecx
0x000054f0      eba8           jmp 0x549a
0x000054f2      4489e1         mov ecx, r12d
0x000054f5      0f1f00         nop dword [rax]                         ; /src:-44
0x000054f8      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x00005502      4829d8         sub rax, rbx
0x00005505      4c39e8         cmp rax, r13                            ; /src:-41
0x00005508      7276           jb 0x5580
0x0000550a      4901dd         add r13, rbx                            ; /src:-43
0x0000550d      4901de         add r14, rbx
0x00005510      4989df         mov r15, rbx
0x00005513      4c29fd         sub rbp, r15
0x00005516      0f854cfeffff   jne 0x5368
0x0000551c      4189cc         mov r12d, ecx
0x0000551f      e920ffffff     jmp 0x5444
0x00005524      0f1f4000       nop dword [rax]
0x00005528      4189c9         mov r9d, ecx
0x0000552b      4183f101       xor r9d, 1
0x0000552f      4d85ed         test r13, r13
0x00005532      0f95c0         setne al
0x00005535      4121c1         and r9d, eax
0x00005538      4584c9         test r9b, r9b
0x0000553b      74b5           je 0x54f2
0x0000553d      4531ff         xor r15d, r15d
0x00005540      e9b6feffff     jmp 0x53fb
0x00005545      0f1f00         nop dword [rax]
0x00005548      4d89f3         mov r11, r14
0x0000554b      4489e1         mov ecx, r12d
0x0000554e      4901de         add r14, rbx
0x00005551      4989df         mov r15, rbx
0x00005554      ebbd           jmp 0x5513
0x00005556      662e0f1f8400.  nop word cs:[rax + rax]
0x00005560      4531ff         xor r15d, r15d
0x00005563      4584c9         test r9b, r9b
0x00005566      4489e1         mov ecx, r12d
0x00005569      4d89f3         mov r11, r14
0x0000556c      75a5           jne 0x5513
0x0000556e      4901de         add r14, rbx
0x00005571      4989df         mov r15, rbx
0x00005574      4531ed         xor r13d, r13d
0x00005577      eb9a           jmp 0x5513
0x00005579      0f1f80000000.  nop dword [rax]
0x00005580      488b742458     mov rsi, qword [rsp + 0x58]
0x00005585      bf04000000     mov edi, 4
0x0000558a      4531ff         xor r15d, r15d
0x0000558d      e81e950000     call sym.quotearg_style                 ; /usr/include/x86_64-linux-gnu/bits/stdio.h:235
0x00005592      488d354ef800.  lea rsi, str.overflow_reading__s        ; /usr/include/x86_64-linux-gnu/bits/stdio.h:236 ; 0x14de7 ; "overflow reading %s"
0x00005599      4889c3         mov rbx, rax
0x0000559c      ba05000000     mov edx, 5
0x000055a1      31ff           xor edi, edi
0x000055a3      e838d3ffff     call sym.imp.dcgettext
0x000055a8      4889d9         mov rcx, rbx
0x000055ab      4889c2         mov rdx, rax
0x000055ae      31f6           xor esi, esi
0x000055b0      31ff           xor edi, edi
0x000055b2      31c0           xor eax, eax
0x000055b4      e8f7d6ffff     call sym.imp.error
0x000055b9      e957fdffff     jmp 0x5315
0x000055be      6690           nop
0x000055c0      4489e0         mov eax, r12d
0x000055c3      89ca           mov edx, ecx
0x000055c5      4531e4         xor r12d, r12d
0x000055c8      e904feffff     jmp 0x53d1
0x000055cd      488b742410     mov rsi, qword [rsp + 0x10]
0x000055d2      bf04000000     mov edi, 4
0x000055d7      4189cf         mov r15d, ecx
0x000055da      e8d1940000     call sym.quotearg_style
0x000055df      488d35f0f700.  lea rsi, str.error_writing__s           ; 0x14dd6 ; "error writing %s"
0x000055e6      31ff           xor edi, edi
0x000055e8      ba05000000     mov edx, 5
0x000055ed      4889c5         mov rbp, rax                            ; /src:588
0x000055f0      e8ebd2ffff     call sym.imp.dcgettext
0x000055f5      4889c3         mov rbx, rax
0x000055f8      e873d1ffff     call sym.imp.__errno_location
0x000055fd      8b30           mov esi, dword [rax]
0x000055ff      4889e9         mov rcx, rbp
0x00005602      4889da         mov rdx, rbx
0x00005605      31ff           xor edi, edi
0x00005607      31c0           xor eax, eax
0x00005609      e8a2d6ffff     call sym.imp.error                      ; /src:592
0x0000560e      e902fdffff     jmp 0x5315
0x00005613      41bf01000000   mov r15d, 1
0x00005619      e9f7fcffff     jmp 0x5315
0x0000561e      6690           nop
;-- set_process_security_ctx:
0x00005620      4155           push r13
0x00005622      4154           push r12                                ; /src:616
0x00005624      55             push rbp
0x00005625      53             push rbx
0x00005626      4c89c5         mov rbp, r8
0x00005629      4883ec08       sub rsp, 8
0x0000562d      4180782500     cmp byte [r8 + 0x25], 0
0x00005632      746c           je 0x56a0
0x00005634      4989fd         mov r13, rdi
0x00005637      e834d1ffff     call sym.imp.__errno_location
0x0000563c      807d2300       cmp byte [rbp + 0x23], 0
0x00005640      4989c4         mov r12, rax
0x00005643      757b           jne 0x56c0
0x00005645      4c89ee         mov rsi, r13
0x00005648      bf04000000     mov edi, 4
0x0000564d      41c704245f00.  mov dword [r12], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x00005655      e856940000     call sym.quotearg_style
0x0000565a      488d35aff100.  lea rsi, str.failed_to_get_security_context_of__s ; 0x14810 ; "failed to get security context of %s"
0x00005661      ba05000000     mov edx, 5
0x00005666      31ff           xor edi, edi
0x00005668      4889c3         mov rbx, rax
0x0000566b      e870d2ffff     call sym.imp.dcgettext
0x00005670      418b3424       mov esi, dword [r12]
0x00005674      4889d9         mov rcx, rbx
0x00005677      4889c2         mov rdx, rax
0x0000567a      31ff           xor edi, edi
0x0000567c      31c0           xor eax, eax
0x0000567e      e82dd6ffff     call sym.imp.error                      ; /src:638
0x00005683      0fb65d26       movzx ebx, byte [rbp + 0x26]
0x00005687      4883c408       add rsp, 8
0x0000568b      83f301         xor ebx, 1
0x0000568e      89d8           mov eax, ebx
0x00005690      5b             pop rbx
0x00005691      5d             pop rbp
0x00005692      415c           pop r12
0x00005694      415d           pop r13
0x00005696      c3             ret
0x00005697      660f1f840000.  nop word [rax + rax]
0x000056a0      89cb           mov ebx, ecx
0x000056a2      41225821       and bl, byte [r8 + 0x21]
0x000056a6      7530           jne 0x56d8
0x000056a8      4883c408       add rsp, 8
0x000056ac      bb01000000     mov ebx, 1
0x000056b1      89d8           mov eax, ebx
0x000056b3      5b             pop rbx
0x000056b4      5d             pop rbp
0x000056b5      415c           pop r12
0x000056b7      415d           pop r13
0x000056b9      c3             ret
0x000056ba      660f1f440000   nop word [rax + rax]
0x000056c0      0fb65d26       movzx ebx, byte [rbp + 0x26]
0x000056c4      84db           test bl, bl                             ; /src:650
0x000056c6      0f8579ffffff   jne 0x5645
0x000056cc      c7005f000000   mov dword [rax], 0x5f                   ; /src:652 ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x000056d2      ebb3           jmp 0x5687
0x000056d4      0f1f4000       nop dword [rax]
0x000056d8      e893d0ffff     call sym.imp.__errno_location
0x000056dd      c7005f000000   mov dword [rax], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x000056e3      4883c408       add rsp, 8
0x000056e7      89d8           mov eax, ebx
0x000056e9      5b             pop rbx
0x000056ea      5d             pop rbp
0x000056eb      415c           pop r12
0x000056ed      415d           pop r13
0x000056ef      c3             ret
;-- set_file_security_ctx:
0x000056f0      4154           push r12
0x000056f2      55             push rbp
0x000056f3      4889cd         mov rbp, rcx
0x000056f6      53             push rbx
0x000056f7      4989fc         mov r12, rdi
0x000056fa      e871d0ffff     call sym.imp.__errno_location
0x000056ff      807d2300       cmp byte [rbp + 0x23], 0
0x00005703      4889c3         mov rbx, rax
0x00005706      7406           je 0x570e
0x00005708      807d2600       cmp byte [rbp + 0x26], 0
0x0000570c      744a           je 0x5758
0x0000570e      4c89e2         mov rdx, r12
0x00005711      c7035f000000   mov dword [rbx], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x00005717      be04000000     mov esi, 4                              ; /src:664
0x0000571c      31ff           xor edi, edi
0x0000571e      e86d920000     call sym.quotearg_n_style
0x00005723      488d350ef100.  lea rsi, str.failed_to_set_the_security_context_of__s ; 0x14838 ; "failed to set the security context of %s"
0x0000572a      ba05000000     mov edx, 5
0x0000572f      31ff           xor edi, edi
0x00005731      4889c5         mov rbp, rax
0x00005734      e8a7d1ffff     call sym.imp.dcgettext
0x00005739      8b33           mov esi, dword [rbx]
0x0000573b      4889e9         mov rcx, rbp
0x0000573e      4889c2         mov rdx, rax
0x00005741      31ff           xor edi, edi
0x00005743      31c0           xor eax, eax
0x00005745      e866d5ffff     call sym.imp.error
0x0000574a      5b             pop rbx
0x0000574b      31c0           xor eax, eax
0x0000574d      5d             pop rbp
0x0000574e      415c           pop r12
0x00005750      c3             ret
0x00005751      0f1f80000000.  nop dword [rax]
0x00005758      c7005f000000   mov dword [rax], 0x5f                   ; /src:1399 ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x0000575e      31c0           xor eax, eax
0x00005760      5b             pop rbx
0x00005761      5d             pop rbp
0x00005762      415c           pop r12
0x00005764      c3             ret
0x00005765      90             nop
0x00005766      662e0f1f8400.  nop word cs:[rax + rax]                 ; /src:1404
;-- dest_info_init:
0x00005770      4c8d05797700.  lea r8, sym.triple_free                 ; 0xcef0 ; "SH\x89\xfbH\x8b?\xe8\x14_\xff\xffH\x89\xdf[\xe9\v_\xff\xfff.\x0f\x1f\x84"
0x00005777      488d0d027700.  lea rcx, sym.triple_compare             ; 0xce80 ; "1\xc0H\x8bV\bH9W\bt\x04\xf3\xc3f\x90H\x8bN\x10H9O\x10u\xf2H\x83\xec\bH\x8b6H\x8b?\xe8\x97#"
0x0000577e      31f6           xor esi, esi
0x00005780      488d15b97600.  lea rdx, sym.triple_hash                ; 0xce40 ; "USH\x89\xfdH\x89\xf3H\x83\xec\bH\x8b?\xe8\xacH"
0x00005787      53             push rbx
0x00005788      4889fb         mov rbx, rdi                            ; /src:1421
0x0000578b      bf3d000000     mov edi, 0x3d                           ; '='
0x00005790      e83b6c0000     call sym.hash_initialize
0x00005795      48894340       mov qword [rbx + 0x40], rax
0x00005799      5b             pop rbx
0x0000579a      c3             ret
0x0000579b      0f1f440000     nop dword [rax + rax]
;-- src_info_init:
0x000057a0      4c8d05497700.  lea r8, sym.triple_free                 ; 0xcef0 ; "SH\x89\xfbH\x8b?\xe8\x14_\xff\xffH\x89\xdf[\xe9\v_\xff\xfff.\x0f\x1f\x84"
0x000057a7      488d0dd27600.  lea rcx, sym.triple_compare             ; 0xce80 ; "1\xc0H\x8bV\bH9W\bt\x04\xf3\xc3f\x90H\x8bN\x10H9O\x10u\xf2H\x83\xec\bH\x8b6H\x8b?\xe8\x97#"
0x000057ae      31f6           xor esi, esi
0x000057b0      488d15b97600.  lea rdx, sym.triple_hash_no_name        ; 0xce70 ; "H\x8bG\b1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f"
0x000057b7      53             push rbx
0x000057b8      4889fb         mov rbx, rdi                            ; /src:2706
0x000057bb      bf3d000000     mov edi, 0x3d                           ; '='
0x000057c0      e80b6c0000     call sym.hash_initialize
0x000057c5      48894348       mov qword [rbx + 0x48], rax
0x000057c9      5b             pop rbx
0x000057ca      c3             ret
0x000057cb      0f1f440000     nop dword [rax + rax]
;-- cp_options_default:
0x000057d0      660fefc0       pxor xmm0, xmm0
0x000057d4      53             push rbx
0x000057d5      4889fb         mov rbx, rdi
0x000057d8      0f1107         movups xmmword [rdi], xmm0
0x000057db      0f114710       movups xmmword [rdi + 0x10], xmm0
0x000057df      0f114720       movups xmmword [rdi + 0x20], xmm0
0x000057e3      0f114730       movups xmmword [rdi + 0x30], xmm0
0x000057e7      0f114740       movups xmmword [rdi + 0x40], xmm0
0x000057eb      e810d2ffff     call sym.imp.geteuid
0x000057f0      85c0           test eax, eax
0x000057f2      c74334ffffff.  mov dword [rbx + 0x34], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x000057f9      0f94c0         sete al
0x000057fc      88431b         mov byte [rbx + 0x1b], al
0x000057ff      88431a         mov byte [rbx + 0x1a], al               ; /src:2723
0x00005802      5b             pop rbx
0x00005803      c3             ret
0x00005804      6690           nop
0x00005806      662e0f1f8400.  nop word cs:[rax + rax]
;-- chown_failure_ok:
0x00005810      53             push rbx
0x00005811      4889fb         mov rbx, rdi
0x00005814      e857cfffff     call sym.imp.__errno_location
0x00005819      8b10           mov edx, dword [rax]
0x0000581b      83fa01         cmp edx, 1
0x0000581e      0f94c0         sete al
0x00005821      83fa16         cmp edx, 0x16
0x00005824      0f94c2         sete dl
0x00005827      08d0           or al, dl
0x00005829      7407           je 0x5832
0x0000582b      0fb6431a       movzx eax, byte [rbx + 0x1a]
0x0000582f      83f001         xor eax, 1
0x00005832      5b             pop rbx
0x00005833      c3             ret
0x00005834      6690           nop
0x00005836      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_owner:
0x00005840      4157           push r15
0x00005842      4156           push r14
0x00005844      4155           push r13                                ; /src:488
0x00005846      4154           push r12
0x00005848      4989f5         mov r13, rsi                            ; /src:490
0x0000584b      55             push rbp                                ; /src:495
0x0000584c      53             push rbx
0x0000584d      4889fd         mov rbp, rdi
0x00005850      89d3           mov ebx, edx
0x00005852      4883ec08       sub rsp, 8
0x00005856      4584c0         test r8b, r8b
0x00005859      448b711c       mov r14d, dword [rcx + 0x1c]
0x0000585d      448b6120       mov r12d, dword [rcx + 0x20]
0x00005861      7532           jne 0x5895
0x00005863      48b8ff000000.  movabs rax, 0xff0000000000ff            ; 71776119061217535
0x0000586d      48854718       test qword [rdi + 0x18], rax            ; /src:507
0x00005871      0f8499000000   je 0x5910
0x00005877      418b7118       mov esi, dword [r9 + 0x18]
0x0000587b      8b5118         mov edx, dword [rcx + 0x18]
0x0000587e      89d0           mov eax, edx
0x00005880      89f1           mov ecx, esi
0x00005882      f7d0           not eax
0x00005884      81e1ff0f0000   and ecx, 0xfff
0x0000588a      80cc0e         or ah, 0xe
0x0000588d      85c8           test eax, ecx
0x0000588f      0f85cb000000   jne 0x5960
0x00005895      83fbff         cmp ebx, 0xffffffff
0x00005898      4489e2         mov edx, r12d
0x0000589b      4489f6         mov esi, r14d
0x0000589e      7450           je 0x58f0
0x000058a0      89df           mov edi, ebx
0x000058a2      e849d4ffff     call sym.imp.fchown
0x000058a7      85c0           test eax, eax
0x000058a9      7451           je 0x58fc
0x000058ab      e8c0ceffff     call sym.imp.__errno_location           ; /src:541
0x000058b0      448b30         mov r14d, dword [rax]
0x000058b3      4989c7         mov r15, rax
0x000058b6      4183fe01       cmp r14d, 1
0x000058ba      0f8468010000   je 0x5a28
0x000058c0      4183fe16       cmp r14d, 0x16
0x000058c4      0f845e010000   je 0x5a28
0x000058ca      4889ef         mov rdi, rbp
0x000058cd      e83effffff     call sym.chown_failure_ok               ; /src:508
0x000058d2      89c2           mov edx, eax                            ; /src:541
0x000058d4      31c0           xor eax, eax
0x000058d6      84d2           test dl, dl
0x000058d8      0f84f2000000   je 0x59d0
0x000058de      4883c408       add rsp, 8
0x000058e2      5b             pop rbx
0x000058e3      5d             pop rbp
0x000058e4      415c           pop r12
0x000058e6      415d           pop r13
0x000058e8      415e           pop r14
0x000058ea      415f           pop r15
0x000058ec      c3             ret
0x000058ed      0f1f00         nop dword [rax]
0x000058f0      4c89ef         mov rdi, r13
0x000058f3      e808d3ffff     call sym.imp.lchown
0x000058f8      85c0           test eax, eax
0x000058fa      7534           jne 0x5930
0x000058fc      4883c408       add rsp, 8
0x00005900      b801000000     mov eax, 1
0x00005905      5b             pop rbx
0x00005906      5d             pop rbp
0x00005907      415c           pop r12
0x00005909      415d           pop r13
0x0000590b      415e           pop r14
0x0000590d      415f           pop r15
0x0000590f      c3             ret
0x00005910      807f2b00       cmp byte [rdi + 0x2b], 0
0x00005914      0f847bffffff   je 0x5895
0x0000591a      418b7118       mov esi, dword [r9 + 0x18]
0x0000591e      8b5710         mov edx, dword [rdi + 0x10]
0x00005921      e958ffffff     jmp 0x587e
0x00005926      662e0f1f8400.  nop word cs:[rax + rax]
0x00005930      e83bceffff     call sym.imp.__errno_location
0x00005935      8b18           mov ebx, dword [rax]
0x00005937      4989c6         mov r14, rax
0x0000593a      83fb01         cmp ebx, 1                              ; /src:496
0x0000593d      7409           je 0x5948
0x0000593f      83fb16         cmp ebx, 0x16
0x00005942      0f8582ffffff   jne 0x58ca
0x00005948      4489e2         mov edx, r12d
0x0000594b      beffffffff     mov esi, 0xffffffff                     ; -1
0x00005950      4c89ef         mov rdi, r13
0x00005953      e8a8d2ffff     call sym.imp.lchown
0x00005958      41891e         mov dword [r14], ebx
0x0000595b      e96affffff     jmp 0x58ca
0x00005960      21f2           and edx, esi
0x00005962      4c89ef         mov rdi, r13
0x00005965      89de           mov esi, ebx
0x00005967      81e2c0010000   and edx, 0x1c0
0x0000596d      e83e770000     call sym.qset_acl
0x00005972      85c0           test eax, eax
0x00005974      0f841bffffff   je 0x5895
0x0000597a      e8f1cdffff     call sym.imp.__errno_location
0x0000597f      4889c3         mov rbx, rax
0x00005982      8b00           mov eax, dword [rax]
0x00005984      83f801         cmp eax, 1
0x00005987      0f84b3000000   je 0x5a40
0x0000598d      83f816         cmp eax, 0x16
0x00005990      0f84aa000000   je 0x5a40
0x00005996      4c89ee         mov rsi, r13
0x00005999      bf04000000     mov edi, 4
0x0000599e      e80d910000     call sym.quotearg_style
0x000059a3      488d3551f400.  lea rsi, str.clearing_permissions_for__s ; 0x14dfb ; "clearing permissions for %s"
0x000059aa      31ff           xor edi, edi
0x000059ac      ba05000000     mov edx, 5
0x000059b1      4989c4         mov r12, rax
0x000059b4      e827cfffff     call sym.imp.dcgettext
0x000059b9      8b33           mov esi, dword [rbx]
0x000059bb      4889c2         mov rdx, rax
0x000059be      4c89e1         mov rcx, r12
0x000059c1      31ff           xor edi, edi
0x000059c3      31c0           xor eax, eax
0x000059c5      e8e6d2ffff     call sym.imp.error
0x000059ca      eb40           jmp 0x5a0c
0x000059cc      0f1f4000       nop dword [rax]
0x000059d0      4c89ee         mov rsi, r13
0x000059d3      bf04000000     mov edi, 4
0x000059d8      e8d3900000     call sym.quotearg_style
0x000059dd      488d3514d700.  lea rsi, str.failed_to_preserve_ownership_for__s ; /src:541 ; 0x130f8 ; "failed to preserve ownership for %s"
0x000059e4      ba05000000     mov edx, 5
0x000059e9      31ff           xor edi, edi
0x000059eb      4989c4         mov r12, rax
0x000059ee      e8edceffff     call sym.imp.dcgettext
0x000059f3      4889c3         mov rbx, rax
0x000059f6      e875cdffff     call sym.imp.__errno_location
0x000059fb      8b30           mov esi, dword [rax]
0x000059fd      4c89e1         mov rcx, r12
0x00005a00      4889da         mov rdx, rbx
0x00005a03      31ff           xor edi, edi
0x00005a05      31c0           xor eax, eax
0x00005a07      e8a4d2ffff     call sym.imp.error
0x00005a0c      0fb64524       movzx eax, byte [rbp + 0x24]
0x00005a10      4883c408       add rsp, 8
0x00005a14      5b             pop rbx
0x00005a15      5d             pop rbp
0x00005a16      415c           pop r12
0x00005a18      f7d8           neg eax
0x00005a1a      415d           pop r13
0x00005a1c      415e           pop r14
0x00005a1e      415f           pop r15                                 ; /src:2745
0x00005a20      c3             ret
0x00005a21      0f1f80000000.  nop dword [rax]
0x00005a28      4489e2         mov edx, r12d
0x00005a2b      beffffffff     mov esi, 0xffffffff                     ; -1
0x00005a30      89df           mov edi, ebx
0x00005a32      e8b9d2ffff     call sym.imp.fchown
0x00005a37      458937         mov dword [r15], r14d
0x00005a3a      e98bfeffff     jmp 0x58ca
0x00005a3f      90             nop
0x00005a40      807d1b00       cmp byte [rbp + 0x1b], 0
0x00005a44      0f854cffffff   jne 0x5996
0x00005a4a      ebc0           jmp 0x5a0c
0x00005a4c      0f1f4000       nop dword [rax]
;-- cached_umask:
0x00005a50      53             push rbx
0x00005a51      8b1db9452100   mov ebx, dword [obj.mask.7898]          ; [0x21a010:4]=-1
0x00005a57      83fbff         cmp ebx, 0xffffffff
0x00005a5a      7404           je 0x5a60
0x00005a5c      89d8           mov eax, ebx
0x00005a5e      5b             pop rbx
0x00005a5f      c3             ret
0x00005a60      31ff           xor edi, edi
0x00005a62      e8e9d0ffff     call sym.imp.umask
0x00005a67      89c3           mov ebx, eax                            ; /src:1548
0x00005a69      89c7           mov edi, eax
0x00005a6b      89059f452100   mov dword [obj.mask.7898], eax          ; [0x21a010:4]=-1
0x00005a71      e8dad0ffff     call sym.imp.umask
0x00005a76      89d8           mov eax, ebx
0x00005a78      5b             pop rbx
0x00005a79      c3             ret
0x00005a7a      660f1f440000   nop word [rax + rax]
;-- copy_internal:
0x00005a80      55             push rbp
0x00005a81      4889e5         mov rbp, rsp
0x00005a84      4157           push r15
0x00005a86      4156           push r14
0x00005a88      4155           push r13
0x00005a8a      4154           push r12
0x00005a8c      4189d6         mov r14d, edx
0x00005a8f      53             push rbx
0x00005a90      4c89cb         mov rbx, r9
0x00005a93      4881ec980300.  sub rsp, 0x398
0x00005a9a      488b4518       mov rax, qword [rbp + 0x18]
0x00005a9e      448b6d10       mov r13d, dword [rbp + 0x10]
0x00005aa2      48898db8fcff.  mov qword [rbp - 0x348], rcx
0x00005aa9      488b4d28       mov rcx, qword [rbp + 0x28]
0x00005aad      4889bdf0fcff.  mov qword [rbp - 0x310], rdi
0x00005ab4      4889b5f8fcff.  mov qword [rbp - 0x308], rsi
0x00005abb      488985c8fcff.  mov qword [rbp - 0x338], rax
0x00005ac2      488b4520       mov rax, qword [rbp + 0x20]
0x00005ac6      48898de0fcff.  mov qword [rbp - 0x320], rcx            ; /src:1565
0x00005acd      4c8985d0fcff.  mov qword [rbp - 0x330], r8
0x00005ad4      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00005add      48894dc8       mov qword [rbp - 0x38], rcx
0x00005ae1      31c9           xor ecx, ecx
0x00005ae3      c60000         mov byte [rax], 0
0x00005ae6      450fb66118     movzx r12d, byte [r9 + 0x18]            ; /src:1573
0x00005aeb      488985c0fcff.  mov qword [rbp - 0x340], rax            ; /src:1574
0x00005af2      4488adebfcff.  mov byte [rbp - 0x315], r13b
0x00005af9      458b7934       mov r15d, dword [r9 + 0x34]
0x00005afd      4584e4         test r12b, r12b
0x00005b00      741f           je 0x5b21
0x00005b02      4585ff         test r15d, r15d
0x00005b05      0f8895020000   js 0x5da0
0x00005b0b      488b85e0fcff.  mov rax, qword [rbp - 0x320]
0x00005b12      4585ff         test r15d, r15d
0x00005b15      410f94c6       sete r14b
0x00005b19      4885c0         test rax, rax
0x00005b1c      7403           je 0x5b21
0x00005b1e      448830         mov byte [rax], r14b                    ; /src:1582
0x00005b21      4585ff         test r15d, r15d
0x00005b24      0f84ae020000   je 0x5dd8                               ; ../coreutils-8.31/src/selinux.h:144
0x00005b2a      4183ff11       cmp r15d, 0x11
0x00005b2e      4c8ba5f0fcff.  mov r12, qword [rbp - 0x310]            ; /src:1582
0x00005b35      0f84fd070000   je 0x6338
0x00005b3b      837b0402       cmp dword [rbx + 4], 2
0x00005b3f      4c8d9580fdff.  lea r10, [rbp - 0x280]
0x00005b46      4c89e6         mov rsi, r12
0x00005b49      bf01000000     mov edi, 1
0x00005b4e      4c89d2         mov rdx, r10
0x00005b51      0f84f9070000   je 0x6350
0x00005b57      e844d0ffff     call sym.imp.__xstat
0x00005b5c      85c0           test eax, eax
0x00005b5e      4c89e6         mov rsi, r12
0x00005b61      0f95c0         setne al
0x00005b64      84c0           test al, al
0x00005b66      0f85f9070000   jne 0x6365
0x00005b6c      8b8598fdffff   mov eax, dword [rbp - 0x268]
0x00005b72      8985ecfcffff   mov dword [rbp - 0x314], eax
0x00005b78      2500f00000     and eax, 0xf000
0x00005b7d      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00005b82      0f84c00a0000   je 0x6648
0x00005b88      4584ed         test r13b, r13b                         ; /src:1622
0x00005b8b      743d           je 0x5bca
0x00005b8d      488b7b48       mov rdi, qword [rbx + 0x48]
0x00005b91      4885ff         test rdi, rdi
0x00005b94      7434           je 0x5bca
0x00005b96      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00005b9c      4c8d9580fdff.  lea r10, [rbp - 0x280]
0x00005ba3      2500f00000     and eax, 0xf000
0x00005ba8      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00005bad      740c           je 0x5bbb
0x00005baf      448b1b         mov r11d, dword [rbx]
0x00005bb2      4585db         test r11d, r11d                         ; /src:1500
0x00005bb5      0f840d090000   je 0x64c8
0x00005bbb      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00005bc2      4c89d2         mov rdx, r10
0x00005bc5      e8665b0000     call sym.record_file
0x00005bca      8b4304         mov eax, dword [rbx + 4]
0x00005bcd      c785d8fcffff.  mov dword [rbp - 0x328], 1
0x00005bd7      83f804         cmp eax, 4                              ; /src:1505
0x00005bda      7412           je 0x5bee
0x00005bdc      83f803         cmp eax, 3
0x00005bdf      0f94c0         sete al
0x00005be2      0fb6c0         movzx eax, al
0x00005be5      4421e8         and eax, r13d
0x00005be8      8985d8fcffff   mov dword [rbp - 0x328], eax
0x00005bee      4584f6         test r14b, r14b
0x00005bf1      0f8509020000   jne 0x5e00
0x00005bf7      4183ff11       cmp r15d, 0x11
0x00005bfb      0f845f090000   je 0x6560
0x00005c01      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00005c07      2500f00000     and eax, 0xf000
0x00005c0c      3d00800000     cmp eax, 0x8000
0x00005c11      0f84e9080000   je 0x6500
0x00005c17      3d00a00000     cmp eax, 0xa000
0x00005c1c      41b800010000   mov r8d, 0x100
0x00005c22      410f94c1       sete r9b
0x00005c26      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00005c2b      0f94c0         sete al
0x00005c2e      4109c1         or r9d, eax
0x00005c31      0fb64314       movzx eax, byte [rbx + 0x14]
0x00005c35      83f001         xor eax, 1
0x00005c38      4108c1         or r9b, al
0x00005c3b      0f84bf080000   je 0x6500
0x00005c41      4c8da510feff.  lea r12, [rbp - 0x1f0]
0x00005c48      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00005c4f      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x00005c54      bf01000000     mov edi, 1
0x00005c59      44888db0fcff.  mov byte [rbp - 0x350], r9b
0x00005c60      4c89e1         mov rcx, r12
0x00005c63      e818cdffff     call sym.imp.__fxstatat
0x00005c68      85c0           test eax, eax
0x00005c6a      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x00005c72      0f8578060000   jne 0x62f0
0x00005c78      4531c0         xor r8d, r8d
0x00005c7b      837b0802       cmp dword [rbx + 8], 2
0x00005c7f      741e           je 0x5c9f
0x00005c81      488b8518feff.  mov rax, qword [rbp - 0x1e8]
0x00005c88      48398588fdff.  cmp qword [rbp - 0x278], rax
0x00005c8f      0f84c3110000   je 0x6e58
0x00005c95      837b0402       cmp dword [rbx + 4], 2
0x00005c99      0f8471130000   je 0x7010
0x00005c9f      807b2d00       cmp byte [rbx + 0x2d], 0
0x00005ca3      0f84f7090000   je 0x66a0
0x00005ca9      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00005caf      2500f00000     and eax, 0xf000
0x00005cb4      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00005cb9      0f8421140000   je 0x70e0
0x00005cbf      31c9           xor ecx, ecx
0x00005cc1      807b1f00       cmp byte [rbx + 0x1f], 0
0x00005cc5      741e           je 0x5ce5
0x00005cc7      807b1800       cmp byte [rbx + 0x18], 0
0x00005ccb      b901000000     mov ecx, 1
0x00005cd0      7413           je 0x5ce5
0x00005cd2      31c9           xor ecx, ecx
0x00005cd4      488b8580fdff.  mov rax, qword [rbp - 0x280]
0x00005cdb      48398510feff.  cmp qword [rbp - 0x1f0], rax
0x00005ce2      0f95c1         setne cl
0x00005ce5      4c8d9580fdff.  lea r10, [rbp - 0x280]
0x00005cec      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00005cf3      488db510feff.  lea rsi, [rbp - 0x1f0]
0x00005cfa      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00005d01      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00005d08      4c89d2         mov rdx, r10
0x00005d0b      e820a40000     call sym.utimecmp
0x00005d10      85c0           test eax, eax
0x00005d12      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00005d1a      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00005d22      0f88480f0000   js 0x6c70
0x00005d28      488b85e0fcff.  mov rax, qword [rbp - 0x320]
0x00005d2f      4885c0         test rax, rax
0x00005d32      7403           je 0x5d37
0x00005d34      c60001         mov byte [rax], 1
0x00005d37      488b9580fdff.  mov rdx, qword [rbp - 0x280]
0x00005d3e      488bb588fdff.  mov rsi, qword [rbp - 0x278]
0x00005d45      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00005d4c      e8cf400000     call sym.remember_copied
0x00005d51      4885c0         test rax, rax
0x00005d54      0f8466050000   je 0x62c0
0x00005d5a      0fb64b2e       movzx ecx, byte [rbx + 0x2e]
0x00005d5e      448b85d8fcff.  mov r8d, dword [rbp - 0x328]
0x00005d65      ba01000000     mov edx, 1
0x00005d6a      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00005d71      4889c7         mov rdi, rax
0x00005d74      e877f1ffff     call sym.create_hard_link
0x00005d79      84c0           test al, al
0x00005d7b      0f853f050000   jne 0x62c0                              ; /src:1434
0x00005d81      807b2500       cmp byte [rbx + 0x25], 0
0x00005d85      0f85050e0000   jne 0x6b90
0x00005d8b      0f1f440000     nop dword [rax + rax]
0x00005d90      4531e4         xor r12d, r12d
0x00005d93      e92e050000     jmp 0x62c6                              ; /src:1438
0x00005d98      0f1f84000000.  nop dword [rax + rax]
0x00005da0      ba9cffffff     mov edx, 0xffffff9c                     ; 4294967196
0x00005da5      4889f1         mov rcx, rsi
0x00005da8      41b801000000   mov r8d, 1
0x00005dae      4889fe         mov rsi, rdi
0x00005db1      89d7           mov edi, edx
0x00005db3      e8e88f0000     call sym.renameatu
0x00005db8      85c0           test eax, eax
0x00005dba      0f85700b0000   jne 0x6930
0x00005dc0      488b85e0fcff.  mov rax, qword [rbp - 0x320]
0x00005dc7      4589e6         mov r14d, r12d
0x00005dca      4885c0         test rax, rax
0x00005dcd      7409           je 0x5dd8
0x00005dcf      c60001         mov byte [rax], 1
0x00005dd2      660f1f440000   nop word [rax + rax]                    ; /src:1752
0x00005dd8      807b3100       cmp byte [rbx + 0x31], 0
0x00005ddc      7512           jne 0x5df0
0x00005dde      4c8ba5f8fcff.  mov r12, qword [rbp - 0x308]
0x00005de5      4531ff         xor r15d, r15d
0x00005de8      e94efdffff     jmp 0x5b3b
0x00005ded      0f1f00         nop dword [rax]
0x00005df0      4531ff         xor r15d, r15d
0x00005df3      e990fdffff     jmp 0x5b88
0x00005df8      0f1f84000000.  nop dword [rax + rax]                   ; /src:1763
0x00005e00      4531c9         xor r9d, r9d
0x00005e03      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x00005e0e      4584ed         test r13b, r13b
0x00005e11      0f84b9000000   je 0x5ed0
0x00005e17      48837b4000     cmp qword [rbx + 0x40], 0
0x00005e1c      0f84ae000000   je 0x5ed0
0x00005e22      440fb66318     movzx r12d, byte [rbx + 0x18]
0x00005e27      4584e4         test r12b, r12b
0x00005e2a      0f85a0000000   jne 0x5ed0
0x00005e30      8b13           mov edx, dword [rbx]
0x00005e32      85d2           test edx, edx
0x00005e34      0f857e0c0000   jne 0x6ab8
0x00005e3a      4584c9         test r9b, r9b
0x00005e3d      488d9510feff.  lea rdx, [rbp - 0x1f0]
0x00005e44      0f8476180000   je 0x76c0
0x00005e4a      8b4218         mov eax, dword [rdx + 0x18]
0x00005e4d      2500f00000     and eax, 0xf000
0x00005e52      3d00a00000     cmp eax, 0xa000
0x00005e57      7577           jne 0x5ed0
0x00005e59      488b7b40       mov rdi, qword [rbx + 0x40]
0x00005e5d      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00005e64      e857590000     call sym.seen_file
0x00005e69      84c0           test al, al
0x00005e6b      7463           je 0x5ed0
0x00005e6d      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00005e74      be04000000     mov esi, 4
0x00005e79      bf01000000     mov edi, 1
0x00005e7e      e80d8b0000     call sym.quotearg_n_style
0x00005e83      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x00005e8a      31ff           xor edi, edi
0x00005e8c      be04000000     mov esi, 4
0x00005e91      4989c5         mov r13, rax                            ; /src:1788
0x00005e94      e8f78a0000     call sym.quotearg_n_style
0x00005e99      488d3570eb00.  lea rsi, str.will_not_copy__s_through_just_created_symlink__s ; 0x14a10 ; "will not copy %s through just-created symlink %s"
0x00005ea0      4889c3         mov rbx, rax
0x00005ea3      31ff           xor edi, edi
0x00005ea5      ba05000000     mov edx, 5
0x00005eaa      e831caffff     call sym.imp.dcgettext                  ; /src:1823
0x00005eaf      4d89e8         mov r8, r13
0x00005eb2      4889c2         mov rdx, rax
0x00005eb5      4889d9         mov rcx, rbx
0x00005eb8      31f6           xor esi, esi
0x00005eba      31ff           xor edi, edi
0x00005ebc      31c0           xor eax, eax
0x00005ebe      e8edcdffff     call sym.imp.error
0x00005ec3      e9fe030000     jmp 0x62c6
0x00005ec8      0f1f84000000.  nop dword [rax + rax]
0x00005ed0      807b2e00       cmp byte [rbx + 0x2e], 0
0x00005ed4      740a           je 0x5ee0
0x00005ed6      807b1800       cmp byte [rbx + 0x18], 0
0x00005eda      0f84b0050000   je 0x6490                               ; /src:1822
0x00005ee0      4585ff         test r15d, r15d
0x00005ee3      0f8497030000   je 0x6280
0x00005ee9      807b2a00       cmp byte [rbx + 0x2a], 0
0x00005eed      7416           je 0x5f05
0x00005eef      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00005ef5      2500f00000     and eax, 0xf000
0x00005efa      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00005eff      0f84cb0b0000   je 0x6ad0                               ; /src:2031
0x00005f05      0fb64318       movzx eax, byte [rbx + 0x18]
0x00005f09      84c0           test al, al
0x00005f0b      0f859f040000   jne 0x63b0
0x00005f11      807b2200       cmp byte [rbx + 0x22], 0
0x00005f15      0f85d51b0000   jne 0x7af0
0x00005f1b      410fb6c6       movzx eax, r14b
0x00005f1f      48c785a8fcff.  mov qword [rbp - 0x358], 0
0x00005f2a      8985e0fcffff   mov dword [rbp - 0x320], eax
0x00005f30      448ba5ecfcff.  mov r12d, dword [rbp - 0x314]
0x00005f37      4181e4ff0f00.  and r12d, 0xfff
0x00005f3e      807b2b00       cmp byte [rbx + 0x2b], 0
0x00005f42      740b           je 0x5f4f
0x00005f44      448b6310       mov r12d, dword [rbx + 0x10]
0x00005f48      4181e4ff0f00.  and r12d, 0xfff
0x00005f4f      807b1d00       cmp byte [rbx + 0x1d], 0
0x00005f53      0f851f060000   jne 0x6578                              ; /src:2032
0x00005f59      448bbdecfcff.  mov r15d, dword [rbp - 0x314]
0x00005f60      4181e700f000.  and r15d, 0xf000
0x00005f67      4181ff004000.  cmp r15d, 0x4000                        ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00005f6e      0f843c0e0000   je 0x6db0
0x00005f74      8b8de0fcffff   mov ecx, dword [rbp - 0x320]
0x00005f7a      8b95ecfcffff   mov edx, dword [rbp - 0x314]
0x00005f80      4989d8         mov r8, rbx
0x00005f83      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00005f8a      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00005f91      e88af6ffff     call sym.set_process_security_ctx
0x00005f96      84c0           test al, al
0x00005f98      c785a4fcffff.  mov dword [rbp - 0x35c], 0
0x00005fa2      0f84e8fdffff   je 0x5d90
0x00005fa8      0fb6432c       movzx eax, byte [rbx + 0x2c]            ; .//coreutils-8.31/lib:2144
0x00005fac      84c0           test al, al
0x00005fae      8885e0fcffff   mov byte [rbp - 0x320], al
0x00005fb4      0f8586090000   jne 0x6940
0x00005fba      807b1700       cmp byte [rbx + 0x17], 0
0x00005fbe      0f8444130000   je 0x7308
0x00005fc4      807b1600       cmp byte [rbx + 0x16], 0
0x00005fc8      ba01000000     mov edx, 1
0x00005fcd      7509           jne 0x5fd8                              ; .//coreutils-8.31/lib:2155
0x00005fcf      31d2           xor edx, edx
0x00005fd1      837b0803       cmp dword [rbx + 8], 3
0x00005fd5      0f94c2         sete dl
0x00005fd8      448b85d8fcff.  mov r8d, dword [rbp - 0x328]
0x00005fdf      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00005fe6      31c9           xor ecx, ecx
0x00005fe8      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00005fef      e8fceeffff     call sym.create_hard_link
0x00005ff4      84c0           test al, al
0x00005ff6      0f84140a0000   je 0x6a10                               ; /src:2160
0x00005ffc      4531c0         xor r8d, r8d
0x00005fff      4181ff004000.  cmp r15d, 0x4000                        ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00006006      410f95c7       setne r15b
0x0000600a      4584f6         test r14b, r14b
0x0000600d      7513           jne 0x6022
0x0000600f      0fb64314       movzx eax, byte [rbx + 0x14]
0x00006013      83f001         xor eax, 1
0x00006016      4420f8         and al, r15b
0x00006019      4189c4         mov r12d, eax
0x0000601c      0f852e1d0000   jne 0x7d50
0x00006022      4584ed         test r13b, r13b
0x00006025      41bc01000000   mov r12d, 1
0x0000602b      7455           je 0x6082
0x0000602d      c685d0fcffff.  mov byte [rbp - 0x330], 0
0x00006034      48837b4000     cmp qword [rbx + 0x40], 0
0x00006039      7432           je 0x606d
0x0000603b      4c8da530ffff.  lea r12, [rbp - 0xd0]
0x00006042      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006049      bf01000000     mov edi, 1
0x0000604e      448885d8fcff.  mov byte [rbp - 0x328], r8b
0x00006055      4c89e2         mov rdx, r12
0x00006058      e8b3c8ffff     call sym.imp.__lxstat
0x0000605d      85c0           test eax, eax
0x0000605f      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00006067      0f8445200000   je 0x80b2
0x0000606d      0fb685d0fcff.  movzx eax, byte [rbp - 0x330]
0x00006074      440fb6a5ebfc.  movzx r12d, byte [rbp - 0x315]
0x0000607c      8885ebfcffff   mov byte [rbp - 0x315], al
0x00006082      807b1700       cmp byte [rbx + 0x17], 0
0x00006086      7409           je 0x6091
0x00006088      4584ff         test r15b, r15b
0x0000608b      0f8535020000   jne 0x62c6
0x00006091      4584c0         test r8b, r8b
0x00006094      0f852c020000   jne 0x62c6
0x0000609a      807b1f00       cmp byte [rbx + 0x1f], 0
0x0000609e      0f84b4000000   je 0x6158
0x000060a4      488b85c8fdff.  mov rax, qword [rbp - sym..interp]
0x000060ab      80bde0fcffff.  cmp byte [rbp - 0x320], 0
0x000060b2      488db530ffff.  lea rsi, [rbp - 0xd0]
0x000060b9      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000060c0      48898530ffff.  mov qword [rbp - 0xd0], rax
0x000060c7      488b85d0fdff.  mov rax, qword [rbp - 0x230]
0x000060ce      48898538ffff.  mov qword [rbp - 0xc8], rax
0x000060d5      488b85d8fdff.  mov rax, qword [rbp - 0x228]
0x000060dc      48898540ffff.  mov qword [rbp - 0xc0], rax
0x000060e3      488b85e0fdff.  mov rax, qword [rbp - 0x220]            ; /src:2198
0x000060ea      48898548ffff.  mov qword [rbp - 0xb8], rax
0x000060f1      0f84a91f0000   je 0x80a0                               ; /src:2204
0x000060f7      e864a60000     call sym.lutimens
0x000060fc      85c0           test eax, eax
0x000060fe      7458           je 0x6158
0x00006100      e86bc6ffff     call sym.imp.__errno_location
0x00006105      833826         cmp dword [rax], 0x26
0x00006108      744e           je 0x6158
0x0000610a      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006111      bf04000000     mov edi, 4
0x00006116      e895890000     call sym.quotearg_style
0x0000611b      488d3549ee00.  lea rsi, str.preserving_times_for__s    ; /src:2207 ; 0x14f6b ; "preserving times for %s"
0x00006122      31ff           xor edi, edi
0x00006124      ba05000000     mov edx, 5
0x00006129      4989c5         mov r13, rax
0x0000612c      e8afc7ffff     call sym.imp.dcgettext
0x00006131      4989c7         mov r15, rax
0x00006134      e837c6ffff     call sym.imp.__errno_location
0x00006139      8b30           mov esi, dword [rax]
0x0000613b      31ff           xor edi, edi
0x0000613d      31c0           xor eax, eax
0x0000613f      4c89e9         mov rcx, r13
0x00006142      4c89fa         mov rdx, r15
0x00006145      e866cbffff     call sym.imp.error
0x0000614a      807b2400       cmp byte [rbx + 0x24], 0                ; /src:2213
0x0000614e      0f853cfcffff   jne 0x5d90
0x00006154      0f1f4000       nop dword [rax]
0x00006158      80bde0fcffff.  cmp byte [rbp - 0x320], 0
0x0000615f      0f8561010000   jne 0x62c6
0x00006165      807b1d00       cmp byte [rbx + 0x1d], 0
0x00006169      745c           je 0x61c7
0x0000616b      4584f6         test r14b, r14b
0x0000616e      7512           jne 0x6182
0x00006170      8b852cfeffff   mov eax, dword [rbp - 0x1d4]
0x00006176      39859cfdffff   cmp dword [rbp - 0x264], eax
0x0000617c      0f84a8260000   je 0x882a
0x00006182      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006189      488d8d80fdff.  lea rcx, [rbp - 0x280]
0x00006190      4c8d8d10feff.  lea r9, [rbp - 0x1f0]
0x00006197      450fb6c6       movzx r8d, r14b
0x0000619b      baffffffff     mov edx, 0xffffffff                     ; -1
0x000061a0      4889df         mov rdi, rbx
0x000061a3      e898f6ffff     call sym.set_owner                      ; /src:2274
0x000061a8      83f8ff         cmp eax, 0xffffffff
0x000061ab      0f84dffbffff   je 0x5d90
0x000061b1      8b8decfcffff   mov ecx, dword [rbp - 0x314]
0x000061b7      89ca           mov edx, ecx
0x000061b9      80e6f1         and dh, 0xf1
0x000061bc      85c0           test eax, eax
0x000061be      0f45d1         cmovne edx, ecx
0x000061c1      8995ecfcffff   mov dword [rbp - 0x314], edx
0x000061c7      48b8ff000000.  movabs rax, 0xff0000000000ff            ; 71776119061217535
0x000061d1      48854318       test qword [rbx + 0x18], rax
0x000061d5      0f8595200000   jne 0x8270
0x000061db      807b2b00       cmp byte [rbx + 0x2b], 0
0x000061df      0f85f0230000   jne 0x85d5
0x000061e5      44847320       test byte [rbx + 0x20], r14b
0x000061e9      0f859a260000   jne 0x8889
0x000061ef      8b85a4fcffff   mov eax, dword [rbp - 0x35c]
0x000061f5      85c0           test eax, eax
0x000061f7      0f8544260000   jne 0x8841
0x000061fd      80bdebfcffff.  cmp byte [rbp - 0x315], 0
0x00006204      0f84bc000000   je 0x62c6
0x0000620a      8bb574fcffff   mov esi, dword [rbp - 0x38c]
0x00006210      0bb5a4fcffff   or esi, dword [rbp - 0x35c]
0x00006216      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x0000621d      e86ecaffff     call sym.imp.chmod
0x00006222      85c0           test eax, eax
0x00006224      0f849c000000   je 0x62c6
0x0000622a      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006231      bf04000000     mov edi, 4
0x00006236      e875880000     call sym.quotearg_style
0x0000623b      488d3541ed00.  lea rsi, str.preserving_permissions_for__s ; 0x14f83 ; "preserving permissions for %s"
0x00006242      ba05000000     mov edx, 5
0x00006247      31ff           xor edi, edi
0x00006249      4989c6         mov r14, rax
0x0000624c      e88fc6ffff     call sym.imp.dcgettext
0x00006251      4989c5         mov r13, rax
0x00006254      e817c5ffff     call sym.imp.__errno_location
0x00006259      8b30           mov esi, dword [rax]                    ; /src:1409
0x0000625b      4c89f1         mov rcx, r14
0x0000625e      4c89ea         mov rdx, r13
0x00006261      31ff           xor edi, edi
0x00006263      31c0           xor eax, eax
0x00006265      e846caffff     call sym.imp.error
0x0000626a      807b2400       cmp byte [rbx + 0x24], 0
0x0000626e      0f851cfbffff   jne 0x5d90
0x00006274      eb50           jmp 0x62c6
0x00006276      662e0f1f8400.  nop word cs:[rax + rax]
0x00006280      807b1800       cmp byte [rbx + 0x18], 0
0x00006284      0f8491fcffff   je 0x5f1b
0x0000628a      807b2e00       cmp byte [rbx + 0x2e], 0
0x0000628e      0f857c0b0000   jne 0x6e10
0x00006294      807b2100       cmp byte [rbx + 0x21], 0
0x00006298      0f85520b0000   jne 0x6df0
0x0000629e      488b85e0fcff.  mov rax, qword [rbp - 0x320]
0x000062a5      4885c0         test rax, rax                           ; /src:1328
0x000062a8      7403           je 0x62ad
0x000062aa      c60001         mov byte [rax], 1
0x000062ad      4584ed         test r13b, r13b
0x000062b0      740e           je 0x62c0
0x000062b2      807b3100       cmp byte [rbx + 0x31], 0
0x000062b6      0f846c0a0000   je 0x6d28
0x000062bc      0f1f4000       nop dword [rax]
0x000062c0      41bc01000000   mov r12d, 1
0x000062c6      488b75c8       mov rsi, qword [rbp - 0x38]
0x000062ca      644833342528.  xor rsi, qword fs:[0x28]
0x000062d3      4489e0         mov eax, r12d
0x000062d6      0f85c82c0000   jne 0x8fa4
0x000062dc      488d65d8       lea rsp, [rbp - 0x28]
0x000062e0      5b             pop rbx
0x000062e1      415c           pop r12
0x000062e3      415d           pop r13
0x000062e5      415e           pop r14
0x000062e7      415f           pop r15
0x000062e9      5d             pop rbp                                 ; ../coreutils-8.31/src/selinux.h:-175
0x000062ea      c3             ret
0x000062eb      0f1f440000     nop dword [rax + rax]
0x000062f0      e87bc4ffff     call sym.imp.__errno_location           ; /src:1258
0x000062f5      4989c1         mov r9, rax
0x000062f8      8b00           mov eax, dword [rax]
0x000062fa      83f828         cmp eax, 0x28
0x000062fd      0f84cd050000   je 0x68d0
0x00006303      83f802         cmp eax, 2
0x00006306      41b801000000   mov r8d, 1
0x0000630c      0f85c8050000   jne 0x68da
0x00006312      4531c9         xor r9d, r9d
0x00006315      4183ff11       cmp r15d, 0x11
0x00006319      0f845cf9ffff   je 0x5c7b
0x0000631f      4589c6         mov r14d, r8d
0x00006322      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x0000632d      e9dcfaffff     jmp 0x5e0e
0x00006332      660f1f440000   nop word [rax + rax]                    ; /src:1829
0x00006338      837b0802       cmp dword [rbx + 8], 2
0x0000633c      0f8446f8ffff   je 0x5b88
0x00006342      e9f4f7ffff     jmp 0x5b3b
0x00006347      660f1f840000.  nop word [rax + rax]
0x00006350      e8bbc5ffff     call sym.imp.__lxstat
0x00006355      85c0           test eax, eax
0x00006357      4c89e6         mov rsi, r12                            ; /src:1647
0x0000635a      0f95c0         setne al
0x0000635d      84c0           test al, al
0x0000635f      0f8407f8ffff   je 0x5b6c
0x00006365      bf04000000     mov edi, 4
0x0000636a      e841870000     call sym.quotearg_style
0x0000636f      488d35a1ea00.  lea rsi, str.cannot_stat__s             ; 0x14e17 ; "cannot stat %s"
0x00006376      4989c4         mov r12, rax
0x00006379      ba05000000     mov edx, 5
0x0000637e      31ff           xor edi, edi
0x00006380      e85bc5ffff     call sym.imp.dcgettext
0x00006385      4889c3         mov rbx, rax
0x00006388      e8e3c3ffff     call sym.imp.__errno_location
0x0000638d      8b30           mov esi, dword [rax]
0x0000638f      4c89e1         mov rcx, r12                            ; /src:1596
0x00006392      4889da         mov rdx, rbx
0x00006395      31ff           xor edi, edi
0x00006397      31c0           xor eax, eax
0x00006399      4531e4         xor r12d, r12d
0x0000639c      e80fc9ffff     call sym.imp.error
0x000063a1      e920ffffff     jmp 0x62c6
0x000063a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000063b0      4883bd90fdff.  cmp qword [rbp - 0x270], 1
0x000063b8      0f842a100000   je 0x73e8
0x000063be      807b2200       cmp byte [rbx + 0x22], 0
0x000063c2      48c785a8fcff.  mov qword [rbp - 0x358], 0
0x000063cd      740a           je 0x63d9
0x000063cf      807b1700       cmp byte [rbx + 0x17], 0
0x000063d3      0f84bf070000   je 0x6b98
0x000063d9      4183ff11       cmp r15d, 0x11
0x000063dd      752c           jne 0x640b
0x000063df      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000063e6      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x000063ed      e81ec9ffff     call sym.imp.rename
0x000063f2      85c0           test eax, eax
0x000063f4      0f8490feffff   je 0x628a
0x000063fa      e871c3ffff     call sym.imp.__errno_location
0x000063ff      448b38         mov r15d, dword [rax]
0x00006402      4585ff         test r15d, r15d
0x00006405      0f847ffeffff   je 0x628a
0x0000640b      4183ff16       cmp r15d, 0x16
0x0000640f      0f841b100000   je 0x7430
0x00006415      4183ff12       cmp r15d, 0x12
0x00006419      0f85c9070000   jne 0x6be8
0x0000641f      448ba5ecfcff.  mov r12d, dword [rbp - 0x314]
0x00006426      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x0000642d      4181e400f000.  and r12d, 0xf000
0x00006434      4181fc004000.  cmp r12d, 0x4000                        ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x0000643b      0f845f100000   je 0x74a0
0x00006441      e83ac3ffff     call sym.imp.unlink
0x00006446      85c0           test eax, eax
0x00006448      7411           je 0x645b
0x0000644a      e821c3ffff     call sym.imp.__errno_location
0x0000644f      833802         cmp dword [rax], 2
0x00006452      4989c6         mov r14, rax
0x00006455      0f8563100000   jne 0x74be                              ; /src:1160
0x0000645b      4181fc004000.  cmp r12d, 0x4000                        ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00006462      0f95c2         setne dl
0x00006465      22532e         and dl, byte [rbx + 0x2e]
0x00006468      4189d6         mov r14d, edx
0x0000646b      0f853f190000   jne 0x7db0
0x00006471      c785e0fcffff.  mov dword [rbp - 0x320], 1
0x0000647b      41be01000000   mov r14d, 1
0x00006481      e9aafaffff     jmp 0x5f30
0x00006486      662e0f1f8400.  nop word cs:[rax + rax]
0x00006490      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00006496      2500f00000     and eax, 0xf000
0x0000649b      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x000064a0      0f843afaffff   je 0x5ee0
0x000064a6      488b95b0fcff.  mov rdx, qword [rbp - 0x350]
0x000064ad      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000064b4      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x000064bb      e870e9ffff     call sym.emit_verbose
0x000064c0      e91bfaffff     jmp 0x5ee0                              ; /src:1182
0x000064c5      0f1f00         nop dword [rax]
0x000064c8      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x000064cf      4c89d2         mov rdx, r10                            ; /src:1188
0x000064d2      4c8995d8fcff.  mov qword [rbp - 0x328], r10
0x000064d9      e8e2520000     call sym.seen_file
0x000064de      84c0           test al, al
0x000064e0      4189c4         mov r12d, eax
0x000064e3      0f85bf0e0000   jne 0x73a8
0x000064e9      488b7b48       mov rdi, qword [rbx + 0x48]
0x000064ed      4c8b95d8fcff.  mov r10, qword [rbp - 0x328]            ; /src:1174
0x000064f4      e9c2f6ffff     jmp 0x5bbb
0x000064f9      0f1f80000000.  nop dword [rax]
0x00006500      440fb64b18     movzx r9d, byte [rbx + 0x18]
0x00006505      41b800010000   mov r8d, 0x100                          ; /src:1728
0x0000650b      4584c9         test r9b, r9b
0x0000650e      0f852df7ffff   jne 0x5c41
0x00006514      440fb64b2c     movzx r9d, byte [rbx + 0x2c]
0x00006519      4584c9         test r9b, r9b
0x0000651c      0f851ff7ffff   jne 0x5c41
0x00006522      440fb64b17     movzx r9d, byte [rbx + 0x17]
0x00006527      4584c9         test r9b, r9b
0x0000652a      0f8511f7ffff   jne 0x5c41
0x00006530      448b13         mov r10d, dword [rbx]
0x00006533      41b901000000   mov r9d, 1
0x00006539      4585d2         test r10d, r10d
0x0000653c      0f85fff6ffff   jne 0x5c41
0x00006542      440fb64b15     movzx r9d, byte [rbx + 0x15]            ; /src:1731
0x00006547      4531c0         xor r8d, r8d
0x0000654a      4584c9         test r9b, r9b
0x0000654d      410f95c0       setne r8b
0x00006551      41c1e008       shl r8d, 8
0x00006555      e9e7f6ffff     jmp 0x5c41
0x0000655a      660f1f440000   nop word [rax + rax]
0x00006560      837b0802       cmp dword [rbx + 8], 2
0x00006564      0f8597f6ffff   jne 0x5c01
0x0000656a      4531c0         xor r8d, r8d
0x0000656d      4531c9         xor r9d, r9d
0x00006570      e92af7ffff     jmp 0x5c9f
0x00006575      0f1f00         nop dword [rax]
0x00006578      8b8de0fcffff   mov ecx, dword [rbp - 0x320]
0x0000657e      8b95ecfcffff   mov edx, dword [rbp - 0x314]
0x00006584      4989d8         mov r8, rbx
0x00006587      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000658e      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00006595      e886f0ffff     call sym.set_process_security_ctx       ; /src:1742
0x0000659a      84c0           test al, al
0x0000659c      0f84eef7ffff   je 0x5d90
0x000065a2      448bbdecfcff.  mov r15d, dword [rbp - 0x314]
0x000065a9      4489e0         mov eax, r12d
0x000065ac      83e03f         and eax, 0x3f
0x000065af      8985a4fcffff   mov dword [rbp - 0x35c], eax
0x000065b5      4181e700f000.  and r15d, 0xf000
0x000065bc      4181ff004000.  cmp r15d, 0x4000                        ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x000065c3      0f85dff9ffff   jne 0x5fa8
0x000065c9      488b85d0fcff.  mov rax, qword [rbp - 0x330]
0x000065d0      488b9588fdff.  mov rdx, qword [rbp - 0x278]
0x000065d7      488b8d80fdff.  mov rcx, qword [rbp - 0x280]
0x000065de      4885c0         test rax, rax
0x000065e1      7519           jne 0x65fc
0x000065e3      e9f8080000     jmp 0x6ee0                              ; /src:1137
0x000065e8      0f1f84000000.  nop dword [rax + rax]
0x000065f0      488b00         mov rax, qword [rax]
0x000065f3      4885c0         test rax, rax
0x000065f6      0f84e4080000   je 0x6ee0
0x000065fc      48395008       cmp qword [rax + 8], rdx
0x00006600      75ee           jne 0x65f0
0x00006602      48394810       cmp qword [rax + 0x10], rcx
0x00006606      75e8           jne 0x65f0
0x00006608      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x0000660f      bf04000000     mov edi, 4
0x00006614      e897840000     call sym.quotearg_style
0x00006619      488d35d8e500.  lea rsi, str.cannot_copy_cyclic_symbolic_link__s ; 0x14bf8 ; "cannot copy cyclic symbolic link %s"
0x00006620      4989c4         mov r12, rax
0x00006623      ba05000000     mov edx, 5
0x00006628      31ff           xor edi, edi
0x0000662a      e8b1c2ffff     call sym.imp.dcgettext
0x0000662f      4c89e1         mov rcx, r12
0x00006632      4889c2         mov rdx, rax
0x00006635      31f6           xor esi, esi
0x00006637      31ff           xor edi, edi                            ; /src:1285
0x00006639      31c0           xor eax, eax
0x0000663b      e870c6ffff     call sym.imp.error
0x00006640      e9cb030000     jmp 0x6a10
0x00006645      0f1f00         nop dword [rax]
0x00006648      440fb6632a     movzx r12d, byte [rbx + 0x2a]
0x0000664d      4584e4         test r12b, r12b
0x00006650      0f8532f5ffff   jne 0x5b88
0x00006656      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x0000665d      bf04000000     mov edi, 4
0x00006662      e849840000     call sym.quotearg_style
0x00006667      807b1900       cmp byte [rbx + 0x19], 0
0x0000666b      4989c5         mov r13, rax
0x0000666e      ba05000000     mov edx, 5
0x00006673      0f85970d0000   jne 0x7410
0x00006679      488d35e8e100.  lea rsi, str.r_not_specified__omitting_directory__s ; 0x14868 ; "-r not specified; omitting directory %s"
0x00006680      31ff           xor edi, edi
0x00006682      e859c2ffff     call sym.imp.dcgettext
0x00006687      4889c2         mov rdx, rax
0x0000668a      4c89e9         mov rcx, r13
0x0000668d      31f6           xor esi, esi
0x0000668f      31ff           xor edi, edi
0x00006691      31c0           xor eax, eax
0x00006693      e818c6ffff     call sym.imp.error
0x00006698      e929fcffff     jmp 0x62c6
0x0000669d      0f1f00         nop dword [rax]                         ; /src:1292
0x000066a0      807b1800       cmp byte [rbx + 0x18], 0
0x000066a4      0f85d6050000   jne 0x6c80
0x000066aa      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x000066b0      2500f00000     and eax, 0xf000
0x000066b5      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x000066ba      7454           je 0x6710
0x000066bc      8b4308         mov eax, dword [rbx + 8]
0x000066bf      83f802         cmp eax, 2
0x000066c2      0f84f8fbffff   je 0x62c0
0x000066c8      83f803         cmp eax, 3
0x000066cb      7543           jne 0x6710
0x000066cd      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000066d4      488d9528feff.  lea rdx, [rbp - 0x1d8]
0x000066db      4889df         mov rdi, rbx                            ; /src:1320
0x000066de      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x000066e5      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x000066ec      e80fe9ffff     call sym.overwrite_ok.isra.12
0x000066f1      84c0           test al, al                             ; /src:1350
0x000066f3      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x000066fb      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]           ; /src:1367
0x00006703      0f84b7fbffff   je 0x62c0
0x00006709      0f1f80000000.  nop dword [rax]
0x00006710      4584f6         test r14b, r14b
0x00006713      0f85a7fbffff   jne 0x62c0
0x00006719      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x0000671f      448ba5ecfcff.  mov r12d, dword [rbp - 0x314]
0x00006726      89c2           mov edx, eax
0x00006728      4181e400f000.  and r12d, 0xf000
0x0000672f      81e200f00000   and edx, 0xf000                         ; stdio.h:-493
0x00006735      81fa00400000   cmp edx, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x0000673b      0f840f060000   je 0x6d50
0x00006741      4181fc004000.  cmp r12d, 0x4000                        ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00006748      0f849a120000   je 0x79e8
0x0000674e      4584ed         test r13b, r13b
0x00006751      448b3b         mov r15d, dword [rbx]
0x00006754      0f84190b0000   je 0x7273                               ; /src:1373
0x0000675a      4183ff03       cmp r15d, 3
0x0000675e      0f85ac0a0000   jne 0x7210
0x00006764      807b1800       cmp byte [rbx + 0x18], 0
0x00006768      0f8599120000   jne 0x7a07
0x0000676e      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00006775      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x0000677c      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00006783      e8084e0000     call sym.last_component
0x00006788      80382e         cmp byte [rax], 0x2e
0x0000678b      4989c6         mov r14, rax
0x0000678e      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00006796      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x0000679e      7527           jne 0x67c7
0x000067a0      31c0           xor eax, eax
0x000067a2      31d2           xor edx, edx
0x000067a4      41807e012e     cmp byte [r14 + 1], 0x2e
0x000067a9      0f94c2         sete dl
0x000067ac      410fb6541601   movzx edx, byte [r14 + rdx + 1]
0x000067b2      84d2           test dl, dl
0x000067b4      0f84ce0a0000   je 0x7288
0x000067ba      80fa2f         cmp dl, 0x2f
0x000067bd      0f84c50a0000   je 0x7288
0x000067c3      84c0           test al, al
0x000067c5      7516           jne 0x67dd
0x000067c7      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x000067cd      2500f00000     and eax, 0xf000
0x000067d2      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x000067d7      0f84ca0a0000   je 0x72a7
0x000067dd      4183ff03       cmp r15d, 3
0x000067e1      7466           je 0x6849
0x000067e3      4c89f7         mov rdi, r14
0x000067e6      44888da4fcff.  mov byte [rbp - 0x35c], r9b
0x000067ed      e80ec1ffff     call sym.imp.strlen
0x000067f2      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000067f9      488985b0fcff.  mov qword [rbp - 0x350], rax
0x00006800      e88b4d0000     call sym.last_component
0x00006805      4889c7         mov rdi, rax
0x00006808      488985a8fcff.  mov qword [rbp - 0x358], rax
0x0000680f      e8ecc0ffff     call sym.imp.strlen
0x00006814      4c8b3d653d21.  mov r15, qword [obj.simple_backup_suffix] ; /src:1402 ; [0x21a580:8]=0
0x0000681b      4989c4         mov r12, rax
0x0000681e      4c89ff         mov rdi, r15
0x00006821      e8dac0ffff     call sym.imp.strlen                     ; ../coreutils-8.31/src/system.h:-728
0x00006826      4989c0         mov r8, rax
0x00006829      498d0404       lea rax, [r12 + rax]
0x0000682d      483985b0fcff.  cmp qword [rbp - 0x350], rax
0x00006834      488bb5a8fcff.  mov rsi, qword [rbp - 0x358]
0x0000683b      440fb68da4fc.  movzx r9d, byte [rbp - 0x35c]
0x00006843      0f84551a0000   je 0x829e
0x00006849      8b13           mov edx, dword [rbx]                    ; /src:1403
0x0000684b      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006852      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x00006857      44888db0fcff.  mov byte [rbp - 0x350], r9b
0x0000685e      e80d490000     call sym.backup_file_rename
0x00006863      4885c0         test rax, rax
0x00006866      4989c4         mov r12, rax
0x00006869      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x00006871      0f841a190000   je 0x8191
0x00006877      4889c7         mov rdi, rax
0x0000687a      44888da8fcff.  mov byte [rbp - 0x358], r9b             ; /src:1202
0x00006881      41be01000000   mov r14d, 1
0x00006887      e874c0ffff     call sym.imp.strlen
0x0000688c      488d5001       lea rdx, [rax + 1]
0x00006890      4883c01f       add rax, 0x1f
0x00006894      4c89e6         mov rsi, r12
0x00006897      4883e0f0       and rax, 0xfffffffffffffff0
0x0000689b      41bf11000000   mov r15d, 0x11
0x000068a1      4829c4         sub rsp, rax
0x000068a4      488d7c240f     lea rdi, [rsp + 0xf]
0x000068a9      4883e7f0       and rdi, 0xfffffffffffffff0
0x000068ad      e8aec2ffff     call sym.imp.memcpy
0x000068b2      4c89e7         mov rdi, r12
0x000068b5      488985b0fcff.  mov qword [rbp - 0x350], rax
0x000068bc      e84fc5ffff     call sym..plt.got
0x000068c1      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x000068c9      e940f5ffff     jmp 0x5e0e
0x000068ce      6690           nop
0x000068d0      807b1600       cmp byte [rbx + 0x16], 0
0x000068d4      0f8586030000   jne 0x6c60
0x000068da      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000068e1      bf04000000     mov edi, 4
0x000068e6      4c898df0fcff.  mov qword [rbp - 0x310], r9
0x000068ed      4531e4         xor r12d, r12d
0x000068f0      e8bb810000     call sym.quotearg_style
0x000068f5      488d351be500.  lea rsi, str.cannot_stat__s             ; 0x14e17 ; "cannot stat %s"
0x000068fc      ba05000000     mov edx, 5
0x00006901      31ff           xor edi, edi                            ; /src:1861
0x00006903      4889c3         mov rbx, rax
0x00006906      e8d5bfffff     call sym.imp.dcgettext
0x0000690b      4c8b8df0fcff.  mov r9, qword [rbp - 0x310]
0x00006912      4889c2         mov rdx, rax
0x00006915      4889d9         mov rcx, rbx
0x00006918      31ff           xor edi, edi
0x0000691a      31c0           xor eax, eax
0x0000691c      418b31         mov esi, dword [r9]
0x0000691f      e88cc3ffff     call sym.imp.error
0x00006924      e99df9ffff     jmp 0x62c6
0x00006929      0f1f80000000.  nop dword [rax]
0x00006930      e83bbeffff     call sym.imp.__errno_location
0x00006935      448b38         mov r15d, dword [rax]
0x00006938      e9cef1ffff     jmp 0x5b0b                              ; /src:1873
0x0000693d      0f1f00         nop dword [rax]
0x00006940      488b85f0fcff.  mov rax, qword [rbp - 0x310]
0x00006947      80382f         cmp byte [rax], 0x2f
0x0000694a      7438           je 0x6984
0x0000694c      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00006953      e8584b0000     call sym.dir_name
0x00006958      4c8d05dac000.  lea r8, [0x00012a39]                    ; "."
0x0000695f      4889c7         mov rdi, rax
0x00006962      b902000000     mov ecx, 2
0x00006967      4989c4         mov r12, rax
0x0000696a      4c89c6         mov rsi, r8
0x0000696d      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000696f      0f97c0         seta al
0x00006972      1c00           sbb al, 0
0x00006974      84c0           test al, al
0x00006976      0f85dc120000   jne 0x7c58
0x0000697c      4c89e7         mov rdi, r12
0x0000697f      e88cc4ffff     call sym..plt.got
0x00006984      0fb64b16       movzx ecx, byte [rbx + 0x16]
0x00006988      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x0000698f      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x00006995      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x0000699c      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x000069a1      e89a3a0000     call sym.force_symlinkat
0x000069a6      4531c0         xor r8d, r8d
0x000069a9      85c0           test eax, eax
0x000069ab      4189c4         mov r12d, eax
0x000069ae      0f8e4bf6ffff   jle 0x5fff
0x000069b4      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x000069bb      be04000000     mov esi, 4
0x000069c0      bf01000000     mov edi, 1
0x000069c5      e8c67f0000     call sym.quotearg_n_style               ; /src:2173
0x000069ca      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x000069d1      be04000000     mov esi, 4
0x000069d6      31ff           xor edi, edi
0x000069d8      4989c5         mov r13, rax
0x000069db      e8b07f0000     call sym.quotearg_n_style
0x000069e0      488d3569e100.  lea rsi, str.cannot_create_symbolic_link__s_to__s ; 0x14b50 ; "cannot create symbolic link %s to %s"
0x000069e7      4989c6         mov r14, rax
0x000069ea      ba05000000     mov edx, 5
0x000069ef      31ff           xor edi, edi
0x000069f1      e8eabeffff     call sym.imp.dcgettext
0x000069f6      4d89e8         mov r8, r13
0x000069f9      4889c2         mov rdx, rax
0x000069fc      4c89f1         mov rcx, r14
0x000069ff      4489e6         mov esi, r12d
0x00006a02      31ff           xor edi, edi
0x00006a04      31c0           xor eax, eax
0x00006a06      e8a5c2ffff     call sym.imp.error
0x00006a0b      0f1f440000     nop dword [rax + rax]
0x00006a10      807b2500       cmp byte [rbx + 0x25], 0
0x00006a14      0f8576010000   jne 0x6b90
0x00006a1a      4883bda8fcff.  cmp qword [rbp - 0x358], 0
0x00006a22      0f8498080000   je 0x72c0
0x00006a28      488b85b0fcff.  mov rax, qword [rbp - 0x350]            ; ../coreutils-8.31/src/py.c:-658
0x00006a2f      4885c0         test rax, rax
0x00006a32      0f8458f3ffff   je 0x5d90
0x00006a38      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006a3f      4889c7         mov rdi, rax
0x00006a42      e8c9c2ffff     call sym.imp.rename
0x00006a47      85c0           test eax, eax
0x00006a49      0f8591080000   jne 0x72e0
0x00006a4f      807b2e00       cmp byte [rbx + 0x2e], 0                ; /src:1505
0x00006a53      0f8437f3ffff   je 0x5d90
0x00006a59      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00006a60      be04000000     mov esi, 4
0x00006a65      bf01000000     mov edi, 1
0x00006a6a      e8217f0000     call sym.quotearg_n_style
0x00006a6f      488b95b0fcff.  mov rdx, qword [rbp - 0x350]
0x00006a76      31ff           xor edi, edi
0x00006a78      be04000000     mov esi, 4
0x00006a7d      4989c4         mov r12, rax
0x00006a80      e80b7f0000     call sym.quotearg_n_style
0x00006a85      488d35a6e500.  lea rsi, str.s_____s__unbackup          ; 0x15032 ; "%s -> %s (unbackup)\n"
0x00006a8c      4889c3         mov rbx, rax
0x00006a8f      31ff           xor edi, edi
0x00006a91      ba05000000     mov edx, 5
0x00006a96      e845beffff     call sym.imp.dcgettext
0x00006a9b      4c89e1         mov rcx, r12
0x00006a9e      4889c6         mov rsi, rax
0x00006aa1      4889da         mov rdx, rbx
0x00006aa4      bf01000000     mov edi, 1
0x00006aa9      31c0           xor eax, eax
0x00006aab      e8b0c1ffff     call sym.imp.__printf_chk
0x00006ab0      e9dbf2ffff     jmp 0x5d90
0x00006ab5      0f1f00         nop dword [rax]
0x00006ab8      807b2e00       cmp byte [rbx + 0x2e], 0
0x00006abc      0f85cef9ffff   jne 0x6490
0x00006ac2      4585ff         test r15d, r15d
0x00006ac5      0f8450f4ffff   je 0x5f1b
0x00006acb      e919f4ffff     jmp 0x5ee9
0x00006ad0      4584ed         test r13b, r13b
0x00006ad3      488b9580fdff.  mov rdx, qword [rbp - 0x280]
0x00006ada      488bbd88fdff.  mov rdi, qword [rbp - 0x278]
0x00006ae1      0f84a9080000   je 0x7390
0x00006ae7      4889fe         mov rsi, rdi
0x00006aea      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00006af1      e82a330000     call sym.remember_copied
0x00006af6      488985a8fcff.  mov qword [rbp - 0x358], rax
0x00006afd      4883bda8fcff.  cmp qword [rbp - 0x358], 0
0x00006b05      0f84f5040000   je 0x7000
0x00006b0b      488bb5a8fcff.  mov rsi, qword [rbp - 0x358]
0x00006b12      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00006b19      e822870000     call sym.same_name
0x00006b1e      84c0           test al, al
0x00006b20      0f843a0f0000   je 0x7a60
0x00006b26      488b153b3a21.  mov rdx, qword [obj.top_level_dst_name] ; [0x21a568:8]=0
0x00006b2d      be04000000     mov esi, 4
0x00006b32      bf01000000     mov edi, 1
0x00006b37      e8547e0000     call sym.quotearg_n_style
0x00006b3c      488b152d3a21.  mov rdx, qword [obj.top_level_src_name] ; [0x21a570:8]=0
0x00006b43      be04000000     mov esi, 4
0x00006b48      31ff           xor edi, edi
0x00006b4a      4989c5         mov r13, rax
0x00006b4d      e83e7e0000     call sym.quotearg_n_style
0x00006b52      488d35efde00.  lea rsi, str.cannot_copy_a_directory___s__into_itself___s ; /src:1523 ; 0x14a48 ; "cannot copy a directory, %s, into itself, %s"
0x00006b59      4989c4         mov r12, rax
0x00006b5c      ba05000000     mov edx, 5
0x00006b61      31ff           xor edi, edi
0x00006b63      e878bdffff     call sym.imp.dcgettext
0x00006b68      4d89e8         mov r8, r13
0x00006b6b      4889c2         mov rdx, rax
0x00006b6e      4c89e1         mov rcx, r12
0x00006b71      31c0           xor eax, eax
0x00006b73      31f6           xor esi, esi
0x00006b75      31ff           xor edi, edi
0x00006b77      e834c1ffff     call sym.imp.error
0x00006b7c      488b85c0fcff.  mov rax, qword [rbp - 0x340]
0x00006b83      c60001         mov byte [rax], 1
0x00006b86      807b2500       cmp byte [rbx + 0x25], 0
0x00006b8a      0f8498feffff   je 0x6a28                               ; /src:1464
0x00006b90      e8a1c2ffff     call sym.restore_default_fscreatecon_or_die
0x00006b95      0f1f00         nop dword [rax]
0x00006b98      4883bd90fdff.  cmp qword [rbp - 0x270], 1
0x00006ba0      0f87e2030000   ja 0x6f88                               ; /src:1463
0x00006ba6      4584ed         test r13b, r13b
0x00006ba9      8b5304         mov edx, dword [rbx + 4]
0x00006bac      7409           je 0x6bb7                               ; /src:1479
0x00006bae      83fa03         cmp edx, 3
0x00006bb1      0f84d1030000   je 0x6f88
0x00006bb7      83fa04         cmp edx, 4
0x00006bba      48c785a8fcff.  mov qword [rbp - 0x358], 0
0x00006bc5      0f84bd030000   je 0x6f88
0x00006bcb      84c0           test al, al
0x00006bcd      0f8506f8ffff   jne 0x63d9
0x00006bd3      410fb6c6       movzx eax, r14b
0x00006bd7      8985e0fcffff   mov dword [rbp - 0x320], eax
0x00006bdd      e94ef3ffff     jmp 0x5f30
0x00006be2      660f1f440000   nop word [rax + rax]
0x00006be8      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00006bef      be04000000     mov esi, 4
0x00006bf4      bf01000000     mov edi, 1
0x00006bf9      e8927d0000     call sym.quotearg_n_style               ; /src:769
0x00006bfe      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x00006c05      be04000000     mov esi, 4
0x00006c0a      31ff           xor edi, edi
0x00006c0c      4989c4         mov r12, rax                            ; /src:771
0x00006c0f      e87c7d0000     call sym.quotearg_n_style
0x00006c14      488d3568e200.  lea rsi, str.cannot_move__s_to__s       ; 0x14e83 ; "cannot move %s to %s"
0x00006c1b      4889c3         mov rbx, rax
0x00006c1e      ba05000000     mov edx, 5
0x00006c23      31ff           xor edi, edi
0x00006c25      e8b6bcffff     call sym.imp.dcgettext
0x00006c2a      4d89e0         mov r8, r12
0x00006c2d      4889d9         mov rcx, rbx
0x00006c30      4889c2         mov rdx, rax
0x00006c33      4489fe         mov esi, r15d
0x00006c36      31ff           xor edi, edi
0x00006c38      31c0           xor eax, eax
0x00006c3a      e871c0ffff     call sym.imp.error
0x00006c3f      488bb580fdff.  mov rsi, qword [rbp - 0x280]
0x00006c46      488bbd88fdff.  mov rdi, qword [rbp - 0x278]
0x00006c4d      e8fe300000     call sym.forget_created
0x00006c52      e939f1ffff     jmp 0x5d90
0x00006c57      660f1f840000.  nop word [rax + rax]
0x00006c60      4531c0         xor r8d, r8d
0x00006c63      e9aaf6ffff     jmp 0x6312
0x00006c68      0f1f84000000.  nop dword [rax + rax]
0x00006c70      807b1800       cmp byte [rbx + 0x18], 0
0x00006c74      0f8442faffff   je 0x66bc
0x00006c7a      660f1f440000   nop word [rax + rax]                    ; /src:1061
0x00006c80      8b4308         mov eax, dword [rbx + 8]
0x00006c83      83f802         cmp eax, 2
0x00006c86      747c           je 0x6d04
0x00006c88      83f803         cmp eax, 3                              ; /src:1062
0x00006c8b      744b           je 0x6cd8
0x00006c8d      83f804         cmp eax, 4
0x00006c90      0f857afaffff   jne 0x6710
0x00006c96      807b2f00       cmp byte [rbx + 0x2f], 0
0x00006c9a      0f8470faffff   je 0x6710
0x00006ca0      8bb528feffff   mov esi, dword [rbp - 0x1d8]
0x00006ca6      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00006cad      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00006cb4      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00006cbb      e830e0ffff     call sym.writable_destination
0x00006cc0      84c0           test al, al
0x00006cc2      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00006cca      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00006cd2      0f8538faffff   jne 0x6710
0x00006cd8      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006cdf      488d9528feff.  lea rdx, [rbp - 0x1d8]
0x00006ce6      4889df         mov rdi, rbx
0x00006ce9      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00006cf0      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00006cf7      e804e3ffff     call sym.overwrite_ok.isra.12
0x00006cfc      84c0           test al, al
0x00006cfe      0f850c140000   jne 0x8110
0x00006d04      4883bde0fcff.  cmp qword [rbp - 0x320], 0
0x00006d0c      0f84aef5ffff   je 0x62c0
0x00006d12      488b85e0fcff.  mov rax, qword [rbp - 0x320]
0x00006d19      c60001         mov byte [rax], 1
0x00006d1c      e99ff5ffff     jmp 0x62c0
0x00006d21      0f1f80000000.  nop dword [rax]
0x00006d28      488b7b40       mov rdi, qword [rbx + 0x40]
0x00006d2c      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006d33      488d9580fdff.  lea rdx, [rbp - 0x280]
0x00006d3a      4589ec         mov r12d, r13d
0x00006d3d      e8ee490000     call sym.record_file
0x00006d42      e97ff5ffff     jmp 0x62c6
0x00006d47      660f1f840000.  nop word [rax + rax]
0x00006d50      4181fc004000.  cmp r12d, 0x4000                        ; /src:1499 ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00006d57      0f8413050000   je 0x7270
0x00006d5d      807b1800       cmp byte [rbx + 0x18], 0
0x00006d61      740c           je 0x6d6f
0x00006d63      448b3b         mov r15d, dword [rbx]
0x00006d66      4585ff         test r15d, r15d                         ; /src:1390
0x00006d69      0f85980c0000   jne 0x7a07
0x00006d6f      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006d76      bf04000000     mov edi, 4
0x00006d7b      4531e4         xor r12d, r12d
0x00006d7e      e82d7d0000     call sym.quotearg_style
0x00006d83      488d35a6db00.  lea rsi, str.cannot_overwrite_directory__s_with_non_directory ; 0x14930 ; "cannot overwrite directory %s with non-directory"
0x00006d8a      4889c3         mov rbx, rax
0x00006d8d      ba05000000     mov edx, 5
0x00006d92      31ff           xor edi, edi
0x00006d94      e847bbffff     call sym.imp.dcgettext
0x00006d99      4889d9         mov rcx, rbx                            ; ../coreutils-8.31/src/py.c:-875
0x00006d9c      4889c2         mov rdx, rax
0x00006d9f      31f6           xor esi, esi
0x00006da1      31ff           xor edi, edi
0x00006da3      31c0           xor eax, eax
0x00006da5      e806bfffff     call sym.imp.error
0x00006daa      e917f5ffff     jmp 0x62c6
0x00006daf      90             nop
0x00006db0      8b8de0fcffff   mov ecx, dword [rbp - 0x320]
0x00006db6      8b95ecfcffff   mov edx, dword [rbp - 0x314]
0x00006dbc      4989d8         mov r8, rbx
0x00006dbf      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006dc6      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00006dcd      e84ee8ffff     call sym.set_process_security_ctx
0x00006dd2      84c0           test al, al
0x00006dd4      0f84b6efffff   je 0x5d90
0x00006dda      4489e0         mov eax, r12d
0x00006ddd      83e012         and eax, 0x12
0x00006de0      8985a4fcffff   mov dword [rbp - 0x35c], eax
0x00006de6      e9def7ffff     jmp 0x65c9
0x00006deb      0f1f440000     nop dword [rax + rax]
0x00006df0      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00006df7      4889d9         mov rcx, rbx
0x00006dfa      ba01000000     mov edx, 1
0x00006dff      31f6           xor esi, esi
0x00006e01      e8eae8ffff     call sym.set_file_security_ctx
0x00006e06      e993f4ffff     jmp 0x629e
0x00006e0b      0f1f440000     nop dword [rax + rax]
0x00006e10      488d3563e000.  lea rsi, str.renamed                    ; 0x14e7a ; "renamed "
0x00006e17      ba05000000     mov edx, 5
0x00006e1c      31ff           xor edi, edi
0x00006e1e      e8bdbaffff     call sym.imp.dcgettext
0x00006e23      bf01000000     mov edi, 1
0x00006e28      4889c6         mov rsi, rax
0x00006e2b      31c0           xor eax, eax
0x00006e2d      e82ebeffff     call sym.imp.__printf_chk
0x00006e32      488b95b0fcff.  mov rdx, qword [rbp - 0x350]
0x00006e39      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006e40      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00006e47      e8e4dfffff     call sym.emit_verbose
0x00006e4c      e943f4ffff     jmp 0x6294
0x00006e51      0f1f80000000.  nop dword [rax]
0x00006e58      488b8510feff.  mov rax, qword [rbp - 0x1f0]
0x00006e5f      48398580fdff.  cmp qword [rbp - 0x280], rax
0x00006e66      0f8529eeffff   jne 0x5c95
0x00006e6c      0fb64317       movzx eax, byte [rbx + 0x17]
0x00006e70      84c0           test al, al
0x00006e72      0f8590030000   jne 0x7208
0x00006e78      837b0402       cmp dword [rbx + 4], 2
0x00006e7c      b901000000     mov ecx, 1
0x00006e81      41bf01000000   mov r15d, 1                             ; /src:1537
0x00006e87      0f8488010000   je 0x7015
0x00006e8d      4c8da5a0feff.  lea r12, [rbp - 0x160]
0x00006e94      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006e9b      bf01000000     mov edi, 1
0x00006ea0      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00006ea7      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00006eae      4c89e2         mov rdx, r12
0x00006eb1      e85abaffff     call sym.imp.__lxstat
0x00006eb6      85c0           test eax, eax
0x00006eb8      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00006ec0      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00006ec8      0f8404100000   je 0x7ed2
0x00006ece      4531f6         xor r14d, r14d
0x00006ed1      e9c9edffff     jmp 0x5c9f
0x00006ed6      662e0f1f8400.  nop word cs:[rax + rax]
0x00006ee0      4883ec30       sub rsp, 0x30
0x00006ee4      488bb5d0fcff.  mov rsi, qword [rbp - 0x330]
0x00006eeb      488d44240f     lea rax, [rsp + 0xf]
0x00006ef0      4883e0f0       and rax, 0xfffffffffffffff0
0x00006ef4      4584f6         test r14b, r14b
0x00006ef7      488985d8fcff.  mov qword [rbp - 0x328], rax
0x00006efe      488930         mov qword [rax], rsi                    ; /src:1308
0x00006f01      48895008       mov qword [rax + 8], rdx
0x00006f05      48894810       mov qword [rax + 0x10], rcx
0x00006f09      7516           jne 0x6f21
0x00006f0b      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x00006f11      2500f00000     and eax, 0xf000
0x00006f16      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00006f1b      0f8457100000   je 0x7f78
0x00006f21      8bb5a4fcffff   mov esi, dword [rbp - 0x35c]
0x00006f27      4c8bbdf8fcff.  mov r15, qword [rbp - 0x308]
0x00006f2e      f7d6           not esi
0x00006f30      4c89ff         mov rdi, r15
0x00006f33      4421e6         and esi, r12d
0x00006f36      e8a5b8ffff     call sym.imp.mkdir
0x00006f3b      85c0           test eax, eax
0x00006f3d      0f84bd070000   je 0x7700
0x00006f43      4c89fe         mov rsi, r15
0x00006f46      bf04000000     mov edi, 4
0x00006f4b      e8607b0000     call sym.quotearg_style
0x00006f50      488d3549df00.  lea rsi, str.cannot_create_directory__s ; 0x14ea0 ; "cannot create directory %s"
0x00006f57      4989c5         mov r13, rax
0x00006f5a      ba05000000     mov edx, 5
0x00006f5f      31ff           xor edi, edi
0x00006f61      e87ab9ffff     call sym.imp.dcgettext
0x00006f66      4989c4         mov r12, rax
0x00006f69      e802b8ffff     call sym.imp.__errno_location
0x00006f6e      8b30           mov esi, dword [rax]
0x00006f70      4c89e9         mov rcx, r13
0x00006f73      4c89e2         mov rdx, r12
0x00006f76      31ff           xor edi, edi
0x00006f78      31c0           xor eax, eax
0x00006f7a      e831bdffff     call sym.imp.error
0x00006f7f      e98cfaffff     jmp 0x6a10
0x00006f84      0f1f4000       nop dword [rax]
0x00006f88      488b9580fdff.  mov rdx, qword [rbp - 0x280]            ; /src:474
0x00006f8f      488bb588fdff.  mov rsi, qword [rbp - 0x278]
0x00006f96      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00006f9d      e87e2e0000     call sym.remember_copied
0x00006fa2      488985a8fcff.  mov qword [rbp - 0x358], rax
0x00006fa9      4883bda8fcff.  cmp qword [rbp - 0x358], 0
0x00006fb1      744d           je 0x7000
0x00006fb3      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00006fb9      2500f00000     and eax, 0xf000
0x00006fbe      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00006fc3      0f8442fbffff   je 0x6b0b
0x00006fc9      0fb64b2e       movzx ecx, byte [rbx + 0x2e]
0x00006fcd      448b85d8fcff.  mov r8d, dword [rbp - 0x328]
0x00006fd4      ba01000000     mov edx, 1
0x00006fd9      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006fe0      488bbda8fcff.  mov rdi, qword [rbp - 0x358]
0x00006fe7      e804dfffff     call sym.create_hard_link
0x00006fec      84c0           test al, al
0x00006fee      0f8492fbffff   je 0x6b86
0x00006ff4      e9c7f2ffff     jmp 0x62c0
0x00006ff9      0f1f80000000.  nop dword [rax]
0x00007000      0fb64318       movzx eax, byte [rbx + 0x18]
0x00007004      e9c2fbffff     jmp 0x6bcb
0x00007009      0f1f80000000.  nop dword [rax]
0x00007010      31c9           xor ecx, ecx
0x00007012      4531ff         xor r15d, r15d
0x00007015      8b8598fdffff   mov eax, dword [rbp - 0x268]
0x0000701b      488d9580fdff.  lea rdx, [rbp - 0x280]                  ; /src:927
0x00007022      2500f00000     and eax, 0xf000
0x00007027      3d00a00000     cmp eax, 0xa000
0x0000702c      0f84a10c0000   je 0x7cd3
0x00007032      8b33           mov esi, dword [rbx]
0x00007034      85f6           test esi, esi
0x00007036      0f84dc040000   je 0x7518
0x0000703c      84c9           test cl, cl
0x0000703e      0f858e100000   jne 0x80d2
0x00007044      807b1800       cmp byte [rbx + 0x18], 0                ; /src:470
0x00007048      0f8580feffff   jne 0x6ece
0x0000704e      837b0402       cmp dword [rbx + 4], 2
0x00007052      0f8476feffff   je 0x6ece
0x00007058      8b4218         mov eax, dword [rdx + 0x18]
0x0000705b      2500f00000     and eax, 0xf000
0x00007060      3d00a00000     cmp eax, 0xa000
0x00007065      0f8563feffff   jne 0x6ece
0x0000706b      418b442418     mov eax, dword [r12 + 0x18]
0x00007070      2500f00000     and eax, 0xf000
0x00007075      3d00a00000     cmp eax, 0xa000
0x0000707a      0f844efeffff   je 0x6ece
0x00007080      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00007087      be04000000     mov esi, 4
0x0000708c      bf01000000     mov edi, 1
0x00007091      e8fa780000     call sym.quotearg_n_style
0x00007096      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x0000709d      be04000000     mov esi, 4
0x000070a2      31ff           xor edi, edi
0x000070a4      4989c4         mov r12, rax
0x000070a7      e8e4780000     call sym.quotearg_n_style
0x000070ac      488d3589dd00.  lea rsi, str.s_and__s_are_the_same_file ; 0x14e3c ; "%s and %s are the same file"
0x000070b3      4889c3         mov rbx, rax
0x000070b6      ba05000000     mov edx, 5                              ; /src:514
0x000070bb      31ff           xor edi, edi
0x000070bd      e81eb8ffff     call sym.imp.dcgettext
0x000070c2      4d89e0         mov r8, r12
0x000070c5      4889c2         mov rdx, rax
0x000070c8      4889d9         mov rcx, rbx
0x000070cb      31f6           xor esi, esi
0x000070cd      31ff           xor edi, edi
0x000070cf      31c0           xor eax, eax
0x000070d1      e8dabbffff     call sym.imp.error
0x000070d6      e9b5ecffff     jmp 0x5d90
0x000070db      0f1f440000     nop dword [rax + rax]
0x000070e0      807b1800       cmp byte [rbx + 0x18], 0
0x000070e4      0f8426f6ffff   je 0x6710
0x000070ea      e991fbffff     jmp 0x6c80
0x000070ef      90             nop
0x000070f0      418b442418     mov eax, dword [r12 + 0x18]
0x000070f5      2500f00000     and eax, 0xf000
0x000070fa      3d00a00000     cmp eax, 0xa000                         ; /src:517
0x000070ff      0f849aebffff   je 0x5c9f
0x00007105      84c9           test cl, cl
0x00007107      740c           je 0x7115
0x00007109      49837c241001   cmp qword [r12 + 0x10], 1
0x0000710f      0f87b6130000   ja 0x84cb
0x00007115      8b4218         mov eax, dword [rdx + 0x18]
0x00007118      2500f00000     and eax, 0xf000
0x0000711d      3d00a00000     cmp eax, 0xa000
0x00007122      742c           je 0x7150
0x00007124      498b442408     mov rax, qword [r12 + 8]
0x00007129      48394208       cmp qword [rdx + 8], rax
0x0000712d      0f856cebffff   jne 0x5c9f
0x00007133      498b0424       mov rax, qword [r12]
0x00007137      483902         cmp qword [rdx], rax                    ; /src:869
0x0000713a      0f855febffff   jne 0x5c9f
0x00007140      0fb64317       movzx eax, byte [rbx + 0x17]
0x00007144      84c0           test al, al
0x00007146      0f85bc000000   jne 0x7208
0x0000714c      0fb67318       movzx esi, byte [rbx + 0x18]
0x00007150      4084f6         test sil, sil
0x00007153      0f84e9030000   je 0x7542
0x00007159      8b8598fdffff   mov eax, dword [rbp - 0x268]
0x0000715f      2500f00000     and eax, 0xf000
0x00007164      3d00a00000     cmp eax, 0xa000
0x00007169      0f85d3030000   jne 0x7542
0x0000716f      49837c241001   cmp qword [r12 + 0x10], 1
0x00007175      0f86c7030000   jbe 0x7542
0x0000717b      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00007182      44888da4fcff.  mov byte [rbp - 0x35c], r9b
0x00007189      448885a8fcff.  mov byte [rbp - 0x358], r8b
0x00007190      488995b0fcff.  mov qword [rbp - 0x350], rdx
0x00007197      e884b8ffff     call sym.imp.canonicalize_file_name
0x0000719c      4885c0         test rax, rax
0x0000719f      4989c7         mov r15, rax
0x000071a2      488b95b0fcff.  mov rdx, qword [rbp - 0x350]
0x000071a9      440fb685a8fc.  movzx r8d, byte [rbp - 0x358]
0x000071b1      440fb68da4fc.  movzx r9d, byte [rbp - 0x35c]
0x000071b9      0f8483030000   je 0x7542
0x000071bf      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000071c6      4889c7         mov rdi, rax
0x000071c9      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x000071d0      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x000071d7      e864800000     call sym.same_name                      ; /src:629
0x000071dc      4c89ff         mov rdi, r15
0x000071df      83f001         xor eax, 1
0x000071e2      4189c4         mov r12d, eax
0x000071e5      e826bcffff     call sym..plt.got
0x000071ea      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x000071f2      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x000071fa      31c0           xor eax, eax
0x000071fc      4584e4         test r12b, r12b
0x000071ff      0f847bfeffff   je 0x7080
0x00007205      0f1f00         nop dword [rax]
0x00007208      4189c6         mov r14d, eax
0x0000720b      e98feaffff     jmp 0x5c9f
0x00007210      488b7b40       mov rdi, qword [rbx + 0x40]
0x00007214      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000721b      488d9510feff.  lea rdx, [rbp - 0x1f0]
0x00007222      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00007229      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00007230      e88b450000     call sym.seen_file
0x00007235      84c0           test al, al
0x00007237      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x0000723f      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00007247      0f8548130000   jne 0x8595
0x0000724d      4181fc004000.  cmp r12d, 0x4000                        ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00007254      741a           je 0x7270
0x00007256      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x0000725c      89c2           mov edx, eax
0x0000725e      81e200f00000   and edx, 0xf000                         ; /src:1462
0x00007264      81fa00400000   cmp edx, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x0000726a      0f84edfaffff   je 0x6d5d
0x00007270      448b3b         mov r15d, dword [rbx]
0x00007273      0fb64318       movzx eax, byte [rbx + 0x18]
0x00007277      84c0           test al, al
0x00007279      0f85b1090000   jne 0x7c30
0x0000727f      4585ff         test r15d, r15d
0x00007282      0f85e6f4ffff   jne 0x676e
0x00007288      8b9528feffff   mov edx, dword [rbp - 0x1d8]
0x0000728e      81e200f00000   and edx, 0xf000
0x00007294      81fa00400000   cmp edx, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x0000729a      410f94c4       sete r12b
0x0000729e      4108c4         or r12b, al
0x000072a1      0f84940b0000   je 0x7e3b
0x000072a7      4589c6         mov r14d, r8d
0x000072aa      41bf11000000   mov r15d, 0x11
0x000072b0      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x000072bb      e94eebffff     jmp 0x5e0e
0x000072c0      488bb580fdff.  mov rsi, qword [rbp - 0x280]
0x000072c7      488bbd88fdff.  mov rdi, qword [rbp - 0x278]
0x000072ce      e87d2a0000     call sym.forget_created
0x000072d3      e950f7ffff     jmp 0x6a28
0x000072d8      0f1f84000000.  nop dword [rax + rax]
0x000072e0      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000072e7      bf04000000     mov edi, 4
0x000072ec      e8bf770000     call sym.quotearg_style
0x000072f1      ba05000000     mov edx, 5
0x000072f6      4989c4         mov r12, rax
0x000072f9      488d351edd00.  lea rsi, str.cannot_un_backup__s        ; 0x1501e ; "cannot un-backup %s"
0x00007300      e979f0ffff     jmp 0x637e
0x00007305      0f1f00         nop dword [rax]
0x00007308      4181ff008000.  cmp r15d, 0x8000
0x0000730f      0f84fb070000   je 0x7b10
0x00007315      4181ff00a000.  cmp r15d, 0xa000
0x0000731c      410f95c0       setne r8b
0x00007320      44224314       and r8b, byte [rbx + 0x14]
0x00007324      0f85e6070000   jne 0x7b10
0x0000732a      4181ff001000.  cmp r15d, 0x1000
0x00007331      0f84bb100000   je 0x83f2                               ; /src:1041
0x00007337      4489f8         mov eax, r15d
0x0000733a      80e4bf         and ah, 0xbf
0x0000733d      3d00200000     cmp eax, 0x2000
0x00007342      0f84e40c0000   je 0x802c
0x00007348      4181ff00c000.  cmp r15d, 0xc000
0x0000734f      0f84d70c0000   je 0x802c
0x00007355      4181ff00a000.  cmp r15d, 0xa000
0x0000735c      0f847e130000   je 0x86e0
0x00007362      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00007369      bf04000000     mov edi, 4
0x0000736e      e83d770000     call sym.quotearg_style
0x00007373      ba05000000     mov edx, 5
0x00007378      4989c4         mov r12, rax
0x0000737b      488d3583dc00.  lea rsi, str.s_has_unknown_file_type    ; 0x15005 ; "%s has unknown file type"
0x00007382      e9a1f2ffff     jmp 0x6628
0x00007387      660f1f840000.  nop word [rax + rax]
0x00007390      4889d6         mov rsi, rdx
0x00007393      e8282a0000     call sym.src_to_dest_lookup
0x00007398      488985a8fcff.  mov qword [rbp - 0x358], rax
0x0000739f      e959f7ffff     jmp 0x6afd
0x000073a4      0f1f4000       nop dword [rax]
0x000073a8      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x000073af      bf04000000     mov edi, 4
0x000073b4      e8f7760000     call sym.quotearg_style                 ; /src:1550
0x000073b9      488d35d0d400.  lea rsi, str.warning:_source_file__s_specified_more_than_once ; 0x14890 ; "warning: source file %s specified more than once"
0x000073c0      4889c3         mov rbx, rax
0x000073c3      31ff           xor edi, edi
0x000073c5      ba05000000     mov edx, 5
0x000073ca      e811b5ffff     call sym.imp.dcgettext
0x000073cf      4889d9         mov rcx, rbx
0x000073d2      4889c2         mov rdx, rax
0x000073d5      31f6           xor esi, esi
0x000073d7      31ff           xor edi, edi
0x000073d9      31c0           xor eax, eax
0x000073db      e8d0b8ffff     call sym.imp.error
0x000073e0      e9e1eeffff     jmp 0x62c6
0x000073e5      0f1f00         nop dword [rax]
0x000073e8      488bb580fdff.  mov rsi, qword [rbp - 0x280]
0x000073ef      488bbd88fdff.  mov rdi, qword [rbp - 0x278]
0x000073f6      e8c5290000     call sym.src_to_dest_lookup
0x000073fb      488985a8fcff.  mov qword [rbp - 0x358], rax
0x00007402      e9a2fbffff     jmp 0x6fa9
0x00007407      660f1f840000.  nop word [rax + rax]
0x00007410      488d350fda00.  lea rsi, str.omitting_directory__s      ; 0x14e26 ; "omitting directory %s"
0x00007417      31ff           xor edi, edi
0x00007419      e8c2b4ffff     call sym.imp.dcgettext
0x0000741e      4889c2         mov rdx, rax
0x00007421      e964f2ffff     jmp 0x668a                              ; /src:1600
0x00007426      662e0f1f8400.  nop word cs:[rax + rax]
0x00007430      488b15313121.  mov rdx, qword [obj.top_level_dst_name] ; [0x21a568:8]=0
0x00007437      be04000000     mov esi, 4
0x0000743c      bf01000000     mov edi, 1
0x00007441      e84a750000     call sym.quotearg_n_style
0x00007446      488b15233121.  mov rdx, qword [obj.top_level_src_name] ; [0x21a570:8]=0
0x0000744d      be04000000     mov esi, 4
0x00007452      31ff           xor edi, edi
0x00007454      4989c4         mov r12, rax
0x00007457      e834750000     call sym.quotearg_n_style
0x0000745c      488d357dd600.  lea rsi, str.cannot_move__s_to_a_subdirectory_of_itself___s ; 0x14ae0 ; "cannot move %s to a subdirectory of itself, %s"
0x00007463      4889c3         mov rbx, rax                            ; /src:773
0x00007466      ba05000000     mov edx, 5
0x0000746b      31ff           xor edi, edi
0x0000746d      e86eb4ffff     call sym.imp.dcgettext
0x00007472      4d89e0         mov r8, r12
0x00007475      4889c2         mov rdx, rax
0x00007478      4889d9         mov rcx, rbx
0x0000747b      31c0           xor eax, eax
0x0000747d      31f6           xor esi, esi
0x0000747f      31ff           xor edi, edi
0x00007481      e82ab8ffff     call sym.imp.error
0x00007486      488b85c0fcff.  mov rax, qword [rbp - 0x340]
0x0000748d      41bc01000000   mov r12d, 1
0x00007493      c60001         mov byte [rax], 1
0x00007496      e92beeffff     jmp 0x62c6
0x0000749b      0f1f440000     nop dword [rax + rax]                   ; /src:779
0x000074a0      e82bb4ffff     call sym.imp.rmdir
0x000074a5      85c0           test eax, eax
0x000074a7      0f84c4efffff   je 0x6471
0x000074ad      e8beb2ffff     call sym.imp.__errno_location
0x000074b2      833802         cmp dword [rax], 2
0x000074b5      4989c6         mov r14, rax
0x000074b8      0f84b3efffff   je 0x6471
0x000074be      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x000074c5      be04000000     mov esi, 4
0x000074ca      bf01000000     mov edi, 1
0x000074cf      e8bc740000     call sym.quotearg_n_style
0x000074d4      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x000074db      be04000000     mov esi, 4
0x000074e0      31ff           xor edi, edi
0x000074e2      4989c4         mov r12, rax
0x000074e5      e8a6740000     call sym.quotearg_n_style
0x000074ea      488d351fd600.  lea rsi, str.inter_device_move_failed:__s_to__s__unable_to_remove_target ; 0x14b10 ; "inter-device move failed: %s to %s; unable to remove target"
0x000074f1      4889c3         mov rbx, rax
0x000074f4      ba05000000     mov edx, 5
0x000074f9      31ff           xor edi, edi
0x000074fb      e8e0b3ffff     call sym.imp.dcgettext
0x00007500      4d89e0         mov r8, r12
0x00007503      4889d9         mov rcx, rbx
0x00007506      4889c2         mov rdx, rax
0x00007509      418b36         mov esi, dword [r14]
0x0000750c      e925f7ffff     jmp 0x6c36
0x00007511      0f1f80000000.  nop dword [rax]
0x00007518      0fb67318       movzx esi, byte [rbx + 0x18]
0x0000751c      4084f6         test sil, sil
0x0000751f      0f85cbfbffff   jne 0x70f0
0x00007525      807b1500       cmp byte [rbx + 0x15], 0
0x00007529      0f85c1fbffff   jne 0x70f0
0x0000752f      8b4218         mov eax, dword [rdx + 0x18]
0x00007532      2500f00000     and eax, 0xf000
0x00007537      3d00a00000     cmp eax, 0xa000
0x0000753c      0f85e30f0000   jne 0x8525
0x00007542      807b2c00       cmp byte [rbx + 0x2c], 0
0x00007546      7415           je 0x755d
0x00007548      418b442418     mov eax, dword [r12 + 0x18]
0x0000754d      2500f00000     and eax, 0xf000
0x00007552      3d00a00000     cmp eax, 0xa000
0x00007557      0f8442e7ffff   je 0x5c9f
0x0000755d      837b0402       cmp dword [rbx + 4], 2
0x00007561      0f8519fbffff   jne 0x7080
0x00007567      8b4218         mov eax, dword [rdx + 0x18]
0x0000756a      2500f00000     and eax, 0xf000
0x0000756f      3d00a00000     cmp eax, 0xa000
0x00007574      0f84721a0000   je 0x8fec
0x0000757a      660f6f02       movdqa xmm0, xmmword [rdx]
0x0000757e      0f298530ffff.  movaps xmmword [rbp - 0xd0], xmm0
0x00007585      660f6f4210     movdqa xmm0, xmmword [rdx + 0x10]
0x0000758a      0f298540ffff.  movaps xmmword [rbp - 0xc0], xmm0
0x00007591      660f6f4220     movdqa xmm0, xmmword [rdx + 0x20]
0x00007596      0f298550ffff.  movaps xmmword [rbp - 0xb0], xmm0
0x0000759d      660f6f4230     movdqa xmm0, xmmword [rdx + 0x30]
0x000075a2      0f298560ffff.  movaps xmmword [rbp - 0xa0], xmm0
0x000075a9      660f6f4240     movdqa xmm0, xmmword [rdx + 0x40]
0x000075ae      0f298570ffff.  movaps xmmword [rbp - 0x90], xmm0
0x000075b5      660f6f4250     movdqa xmm0, xmmword [rdx + 0x50]
0x000075ba      0f294580       movaps xmmword [rbp - 0x80], xmm0       ; /src:791
0x000075be      660f6f4260     movdqa xmm0, xmmword [rdx + 0x60]
0x000075c3      0f294590       movaps xmmword [rbp - 0x70], xmm0
0x000075c7      660f6f4270     movdqa xmm0, xmmword [rdx + 0x70]
0x000075cc      0f2945a0       movaps xmmword [rbp - 0x60], xmm0
0x000075d0      660f6f828000.  movdqa xmm0, xmmword [rdx + 0x80]
0x000075d8      0f2945b0       movaps xmmword [rbp - 0x50], xmm0
0x000075dc      418b442418     mov eax, dword [r12 + 0x18]
0x000075e1      2500f00000     and eax, 0xf000                         ; ../coreutils-8.31/src/selinux.h:-400
0x000075e6      3d00a00000     cmp eax, 0xa000
0x000075eb      0f84b8190000   je 0x8fa9
0x000075f1      66410f6f0424   movdqa xmm0, xmmword [r12]
0x000075f7      0f2985a0feff.  movaps xmmword [rbp - 0x160], xmm0
0x000075fe      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x10]
0x00007605      0f2985b0feff.  movaps xmmword [rbp - 0x150], xmm0
0x0000760c      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x20]
0x00007613      0f2985c0feff.  movaps xmmword [rbp - 0x140], xmm0
0x0000761a      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x30]
0x00007621      0f2985d0feff.  movaps xmmword [rbp - 0x130], xmm0
0x00007628      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x40]
0x0000762f      0f2985e0feff.  movaps xmmword [rbp - 0x120], xmm0
0x00007636      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x50]
0x0000763d      0f2985f0feff.  movaps xmmword [rbp - 0x110], xmm0
0x00007644      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x60]
0x0000764b      0f298500ffff.  movaps xmmword [rbp - 0x100], xmm0
0x00007652      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x70]
0x00007659      0f298510ffff.  movaps xmmword [rbp - 0xf0], xmm0
0x00007660      66410f6f8424.  movdqa xmm0, xmmword [r12 + 0x80]
0x0000766a      0f298520ffff.  movaps xmmword [rbp - 0xe0], xmm0
0x00007671      488b85a8feff.  mov rax, qword [rbp - 0x158]
0x00007678      48398538ffff.  cmp qword [rbp - 0xc8], rax
0x0000767f      0f851ae6ffff   jne 0x5c9f
0x00007685      488b85a0feff.  mov rax, qword [rbp - 0x160]
0x0000768c      48398530ffff.  cmp qword [rbp - 0xd0], rax
0x00007693      0f8506e6ffff   jne 0x5c9f
0x00007699      807b1700       cmp byte [rbx + 0x17], 0                ; /src:1705
0x0000769d      0f84ddf9ffff   je 0x7080
0x000076a3      418b442418     mov eax, dword [r12 + 0x18]
0x000076a8      2500f00000     and eax, 0xf000
0x000076ad      3d00a00000     cmp eax, 0xa000
0x000076b2      410f95c6       setne r14b
0x000076b6      e9e4e5ffff     jmp 0x5c9f
0x000076bb      0f1f440000     nop dword [rax + rax]
0x000076c0      488d8d30ffff.  lea rcx, [rbp - 0xd0]
0x000076c7      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000076ce      bf01000000     mov edi, 1
0x000076d3      4889ca         mov rdx, rcx
0x000076d6      48898da8fcff.  mov qword [rbp - 0x358], rcx
0x000076dd      e82eb2ffff     call sym.imp.__lxstat
0x000076e2      85c0           test eax, eax
0x000076e4      0f85e6e7ffff   jne 0x5ed0
0x000076ea      488b8da8fcff.  mov rcx, qword [rbp - 0x358]
0x000076f1      4889ca         mov rdx, rcx
0x000076f4      e951e7ffff     jmp 0x5e4a
0x000076f9      0f1f80000000.  nop dword [rax]
0x00007700      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00007707      488d9510feff.  lea rdx, [rbp - 0x1f0]
0x0000770e      bf01000000     mov edi, 1
0x00007713      e8f8b1ffff     call sym.imp.__lxstat
0x00007718      85c0           test eax, eax
0x0000771a      0f85050a0000   jne 0x8125
0x00007720      448ba528feff.  mov r12d, dword [rbp - 0x1d8]
0x00007727      c685d0fcffff.  mov byte [rbp - 0x330], 0
0x0000772e      4489e0         mov eax, r12d
0x00007731      25c0010000     and eax, 0x1c0
0x00007736      3dc0010000     cmp eax, 0x1c0
0x0000773b      742b           je 0x7768
0x0000773d      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00007744      4489e6         mov esi, r12d
0x00007747      81cec0010000   or esi, 0x1c0
0x0000774d      e83eb5ffff     call sym.imp.chmod                      ; /src:-137
0x00007752      85c0           test eax, eax
0x00007754      4489a574fcff.  mov dword [rbp - 0x38c], r12d
0x0000775b      c685d0fcffff.  mov byte [rbp - 0x330], 1
0x00007762      0f851b100000   jne 0x8783
0x00007768      488b85c8fcff.  mov rax, qword [rbp - 0x338]
0x0000776f      803800         cmp byte [rax], 0
0x00007772      0f84f40d0000   je 0x856c
0x00007778      807b2e00       cmp byte [rbx + 0x2e], 0
0x0000777c      744a           je 0x77c8
0x0000777e      807b1800       cmp byte [rbx + 0x18], 0
0x00007782      0f84a50e0000   je 0x862d
0x00007788      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000778f      bf04000000     mov edi, 4
0x00007794      e817730000     call sym.quotearg_style
0x00007799      488d351bd700.  lea rsi, str.created_directory__s       ; 0x14ebb ; "created directory %s\n"
0x000077a0      4989c4         mov r12, rax
0x000077a3      ba05000000     mov edx, 5
0x000077a8      31ff           xor edi, edi
0x000077aa      e831b1ffff     call sym.imp.dcgettext
0x000077af      4c89e2         mov rdx, r12
0x000077b2      4889c6         mov rsi, rax
0x000077b5      bf01000000     mov edi, 1
0x000077ba      31c0           xor eax, eax
0x000077bc      e89fb4ffff     call sym.imp.__printf_chk
0x000077c1      0f1f80000000.  nop dword [rax]
0x000077c8      488b85b8fcff.  mov rax, qword [rbp - 0x348]
0x000077cf      4885c0         test rax, rax
0x000077d2      410f95c4       setne r12b
0x000077d6      4422631c       and r12b, byte [rbx + 0x1c]
0x000077da      0f85db070000   jne 0x7fbb
0x000077e0      f30f6f03       movdqu xmm0, xmmword [rbx]
0x000077e4      be02000000     mov esi, 2
0x000077e9      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x000077f0      0f298510fdff.  movaps xmmword [rbp - 0x2f0], xmm0
0x000077f7      f30f6f4310     movdqu xmm0, xmmword [rbx + 0x10]
0x000077fc      0f298520fdff.  movaps xmmword [rbp - sym..dynsym], xmm0
0x00007803      f30f6f4320     movdqu xmm0, xmmword [rbx + 0x20]
0x00007808      0f298530fdff.  movaps xmmword [rbp - 0x2d0], xmm0
0x0000780f      f30f6f4330     movdqu xmm0, xmmword [rbx + 0x30]
0x00007814      0f298540fdff.  movaps xmmword [rbp - 0x2c0], xmm0
0x0000781b      f30f6f4340     movdqu xmm0, xmmword [rbx + 0x40]
0x00007820      0f298550fdff.  movaps xmmword [rbp - 0x2b0], xmm0
0x00007827      e8e47d0000     call sym.savedir
0x0000782c      4885c0         test rax, rax
0x0000782f      48898598fcff.  mov qword [rbp - 0x368], rax
0x00007836      0f845c0e0000   je 0x8698
0x0000783c      837b0403       cmp dword [rbx + 4], 3
0x00007840      750a           jne 0x784c
0x00007842      c78514fdffff.  mov dword [rbp - 0x2ec], 2
0x0000784c      488b8598fcff.  mov rax, qword [rbp - 0x368]
0x00007853      803800         cmp byte [rax], 0
0x00007856      0f8439150000   je 0x8d95
0x0000785c      488d8510fdff.  lea rax, [rbp - 0x2f0]
0x00007863      4c8d9580fdff.  lea r10, [rbp - 0x280]
0x0000786a      4489ad80fcff.  mov dword [rbp - 0x380], r13d
0x00007871      4c8bbd98fcff.  mov r15, qword [rbp - 0x368]
0x00007878      4c8badc0fcff.  mov r13, qword [rbp - 0x340]            ; /src:-117
0x0000787f      41bc01000000   mov r12d, 1
0x00007885      488985b8fcff.  mov qword [rbp - 0x348], rax
0x0000788c      488d8507fdff.  lea rax, [rbp - 0x2f9]
0x00007893      c685ebfcffff.  mov byte [rbp - 0x315], 0
0x0000789a      4488b590fcff.  mov byte [rbp - 0x370], r14b
0x000078a1      48899d88fcff.  mov qword [rbp - 0x378], rbx
0x000078a8      488985b0fcff.  mov qword [rbp - 0x350], rax
0x000078af      488d8508fdff.  lea rax, [rbp - 0x2f8]
0x000078b6      4c8995c0fcff.  mov qword [rbp - 0x340], r10
0x000078bd      488985a8fcff.  mov qword [rbp - 0x358], rax
0x000078c4      eb2e           jmp 0x78f4
0x000078c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000078d0      0fb68508fdff.  movzx eax, byte [rbp - 0x2f8]
0x000078d7      4c89ff         mov rdi, r15
0x000078da      0885ebfcffff   or byte [rbp - 0x315], al
0x000078e0      e81bb0ffff     call sym.imp.strlen
0x000078e5      4d8d7c0701     lea r15, [r15 + rax + 1]
0x000078ea      41803f00       cmp byte [r15], 0
0x000078ee      0f849d000000   je 0x7991
0x000078f4      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x000078fb      31d2           xor edx, edx
0x000078fd      4c89fe         mov rsi, r15
0x00007900      e8bb400000     call sym.file_name_concat
0x00007905      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x0000790c      31d2           xor edx, edx
0x0000790e      4c89fe         mov rsi, r15
0x00007911      4889c3         mov rbx, rax
0x00007914      e8a7400000     call sym.file_name_concat
0x00007919      4989c6         mov r14, rax
0x0000791c      488b85c8fcff.  mov rax, qword [rbp - 0x338]
0x00007923      4c8b8db8fcff.  mov r9, qword [rbp - 0x348]
0x0000792a      4c8b85d8fcff.  mov r8, qword [rbp - 0x328]
0x00007931      488b8dc0fcff.  mov rcx, qword [rbp - 0x340]
0x00007938      4c89f6         mov rsi, r14
0x0000793b      8b95e0fcffff   mov edx, dword [rbp - 0x320]
0x00007941      4889df         mov rdi, rbx
0x00007944      0fb600         movzx eax, byte [rax]
0x00007947      6a00           push 0
0x00007949      ffb5b0fcffff   push qword [rbp - 0x350]
0x0000794f      ffb5a8fcffff   push qword [rbp - 0x358]
0x00007955      6a00           push 0
0x00007957      888508fdffff   mov byte [rbp - 0x2f8], al
0x0000795d      e81ee1ffff     call sym.copy_internal                  ; /src:1271
0x00007962      4121c4         and r12d, eax
0x00007965      0fb68507fdff.  movzx eax, byte [rbp - 0x2f9]
0x0000796c      4883c420       add rsp, 0x20
0x00007970      41084500       or byte [r13], al
0x00007974      4c89f7         mov rdi, r14
0x00007977      e894b4ffff     call sym..plt.got
0x0000797c      4889df         mov rdi, rbx
0x0000797f      e88cb4ffff     call sym..plt.got
0x00007984      80bd07fdffff.  cmp byte [rbp - 0x2f9], 0
0x0000798b      0f843fffffff   je 0x78d0
0x00007991      440fb6b590fc.  movzx r14d, byte [rbp - 0x370]
0x00007999      488b9d88fcff.  mov rbx, qword [rbp - 0x378]
0x000079a0      448bad80fcff.  mov r13d, dword [rbp - 0x380]
0x000079a7      488bbd98fcff.  mov rdi, qword [rbp - 0x368]
0x000079ae      e85db4ffff     call sym..plt.got
0x000079b3      0fb68debfcff.  movzx ecx, byte [rbp - 0x315]
0x000079ba      488b85c8fcff.  mov rax, qword [rbp - 0x338]
0x000079c1      8808           mov byte [rax], cl
0x000079c3      4584ed         test r13b, r13b
0x000079c6      0f85d6050000   jne 0x7fa2
0x000079cc      0fb685d0fcff.  movzx eax, byte [rbp - 0x330]
0x000079d3      c685e0fcffff.  mov byte [rbp - 0x320], 0
0x000079da      8885ebfcffff   mov byte [rbp - 0x315], al
0x000079e0      e9b5e6ffff     jmp 0x609a
0x000079e5      0f1f00         nop dword [rax]
0x000079e8      807b1800       cmp byte [rbx + 0x18], 0
0x000079ec      0f8409040000   je 0x7dfb
0x000079f2      448b3b         mov r15d, dword [rbx]
0x000079f5      4585ff         test r15d, r15d
0x000079f8      0f84fd030000   je 0x7dfb
0x000079fe      4584ed         test r13b, r13b
0x00007a01      0f8553edffff   jne 0x675a
0x00007a07      8b9598fdffff   mov edx, dword [rbp - 0x268]
0x00007a0d      81e200f00000   and edx, 0xf000
0x00007a13      81fa00400000   cmp edx, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00007a19      0f84b7050000   je 0x7fd6
0x00007a1f      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00007a26      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00007a2d      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00007a34      e8573b0000     call sym.last_component
0x00007a39      80382e         cmp byte [rax], 0x2e
0x00007a3c      4989c6         mov r14, rax
0x00007a3f      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00007a47      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00007a4f      0f8588edffff   jne 0x67dd
0x00007a55      b801000000     mov eax, 1                              ; /src:173
0x00007a5a      e943edffff     jmp 0x67a2
0x00007a5f      90             nop
0x00007a60      488bb5a8fcff.  mov rsi, qword [rbp - 0x358]
0x00007a67      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00007a6e      e8cd770000     call sym.same_name
0x00007a73      84c0           test al, al
0x00007a75      0f85cf060000   jne 0x814a
0x00007a7b      8b4304         mov eax, dword [rbx + 4]
0x00007a7e      83f804         cmp eax, 4
0x00007a81      0f8479f5ffff   je 0x7000
0x00007a87      83f803         cmp eax, 3                              ; /src:184
0x00007a8a      7509           jne 0x7a95
0x00007a8c      4584ed         test r13b, r13b
0x00007a8f      0f856bf5ffff   jne 0x7000                              ; /src:193
0x00007a95      488b95a8fcff.  mov rdx, qword [rbp - 0x358]
0x00007a9c      be04000000     mov esi, 4
0x00007aa1      bf01000000     mov edi, 1
0x00007aa6      e8e56e0000     call sym.quotearg_n_style
0x00007aab      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00007ab2      31ff           xor edi, edi
0x00007ab4      be04000000     mov esi, 4
0x00007ab9      4989c5         mov r13, rax
0x00007abc      e8cf6e0000     call sym.quotearg_n_style
0x00007ac1      488d35e8cf00.  lea rsi, str.will_not_create_hard_link__s_to_directory__s ; 0x14ab0 ; "will not create hard link %s to directory %s"
0x00007ac8      4989c4         mov r12, rax
0x00007acb      31ff           xor edi, edi                            ; /src:195
0x00007acd      ba05000000     mov edx, 5
0x00007ad2      e809aeffff     call sym.imp.dcgettext
0x00007ad7      4d89e8         mov r8, r13
0x00007ada      4889c2         mov rdx, rax
0x00007add      4c89e1         mov rcx, r12
0x00007ae0      31f6           xor esi, esi
0x00007ae2      31ff           xor edi, edi
0x00007ae4      31c0           xor eax, eax
0x00007ae6      e8c5b1ffff     call sym.imp.error
0x00007aeb      e996f0ffff     jmp 0x6b86                              ; /src:198
0x00007af0      807b1700       cmp byte [rbx + 0x17], 0
0x00007af4      0f849ef0ffff   je 0x6b98
0x00007afa      48c785a8fcff.  mov qword [rbp - 0x358], 0
0x00007b05      e9c9f0ffff     jmp 0x6bd3
0x00007b0a      660f1f440000   nop word [rax + rax]
0x00007b10      8b8598fdffff   mov eax, dword [rbp - 0x268]
0x00007b16      31f6           xor esi, esi
0x00007b18      837b0402       cmp dword [rbx + 4], 2
0x00007b1c      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00007b23      8985c0fcffff   mov dword [rbp - 0x340], eax
0x00007b29      0fb64323       movzx eax, byte [rbx + 0x23]
0x00007b2d      400f94c6       sete sil
0x00007b31      c1e611         shl esi, 0x11
0x00007b34      8885c8fcffff   mov byte [rbp - 0x338], al
0x00007b3a      31c0           xor eax, eax
0x00007b3c      e87f3b0000     call sym.open_safer
0x00007b41      85c0           test eax, eax
0x00007b43      8985e0fcffff   mov dword [rbp - 0x320], eax
0x00007b49      0f88fc060000   js 0x824b
0x00007b4f      8bb5e0fcffff   mov esi, dword [rbp - 0x320]
0x00007b55      488d95a0feff.  lea rdx, [rbp - 0x160]
0x00007b5c      bf01000000     mov edi, 1
0x00007b61      e88ab0ffff     call sym.imp.__fxstat
0x00007b66      85c0           test eax, eax
0x00007b68      0f8519090000   jne 0x8487
0x00007b6e      488b85a8feff.  mov rax, qword [rbp - 0x158]
0x00007b75      48398588fdff.  cmp qword [rbp - 0x278], rax
0x00007b7c      7514           jne 0x7b92
0x00007b7e      488b85a0feff.  mov rax, qword [rbp - 0x160]
0x00007b85      48398580fdff.  cmp qword [rbp - 0x280], rax
0x00007b8c      0f84240d0000   je 0x88b6
0x00007b92      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00007b99      bf04000000     mov edi, 4
0x00007b9e      e80d6f0000     call sym.quotearg_style
0x00007ba3      488d35cecf00.  lea rsi, str.skipping_file__s__as_it_was_replaced_while_being_copied ; 0x14b78 ; "skipping file %s, as it was replaced while being copied"
0x00007baa      4989c4         mov r12, rax
0x00007bad      ba05000000     mov edx, 5
0x00007bb2      31ff           xor edi, edi
0x00007bb4      e827adffff     call sym.imp.dcgettext
0x00007bb9      4c89e1         mov rcx, r12
0x00007bbc      4889c2         mov rdx, rax
0x00007bbf      31f6           xor esi, esi
0x00007bc1      31ff           xor edi, edi
0x00007bc3      31c0           xor eax, eax
0x00007bc5      e8e6b0ffff     call sym.imp.error                      ; /src:1766
0x00007bca      4531c0         xor r8d, r8d
0x00007bcd      48c785d0fcff.  mov qword [rbp - 0x330], 0              ; /src:1770
0x00007bd8      8bbde0fcffff   mov edi, dword [rbp - 0x320]
0x00007bde      448885d8fcff.  mov byte [rbp - 0x328], r8b
0x00007be5      e846aeffff     call sym.imp.close
0x00007bea      85c0           test eax, eax
0x00007bec      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00007bf4      0f884d0a0000   js 0x8647                               ; /src:602
0x00007bfa      488bbdd0fcff.  mov rdi, qword [rbp - 0x330]            ; /src:625
0x00007c01      448885d8fcff.  mov byte [rbp - 0x328], r8b             ; /src:602
0x00007c08      e803b2ffff     call sym..plt.got
0x00007c0d      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00007c15      c685e0fcffff.  mov byte [rbp - 0x320], 0
0x00007c1c      4584c0         test r8b, r8b
0x00007c1f      0f85dae3ffff   jne 0x5fff
0x00007c25      e9e6edffff     jmp 0x6a10
0x00007c2a      660f1f440000   nop word [rax + rax]
0x00007c30      8b8598fdffff   mov eax, dword [rbp - 0x268]
0x00007c36      2500f00000     and eax, 0xf000
0x00007c3b      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00007c40      0f848a030000   je 0x7fd0
0x00007c46      4585ff         test r15d, r15d
0x00007c49      0f8458f6ffff   je 0x72a7
0x00007c4f      e9cbfdffff     jmp 0x7a1f
0x00007c54      0f1f4000       nop dword [rax]                         ; /src:615
0x00007c58      488d95a0feff.  lea rdx, [rbp - 0x160]
0x00007c5f      4c89c6         mov rsi, r8
0x00007c62      bf01000000     mov edi, 1                              ; /src:617
0x00007c67      e834afffff     call sym.imp.__xstat                    ; /src:618
0x00007c6c      85c0           test eax, eax
0x00007c6e      0f8508edffff   jne 0x697c
0x00007c74      488d9530ffff.  lea rdx, [rbp - 0xd0]                   ; /src:1920
0x00007c7b      4c89e6         mov rsi, r12
0x00007c7e      bf01000000     mov edi, 1
0x00007c83      e818afffff     call sym.imp.__xstat
0x00007c88      85c0           test eax, eax                           ; /src:1922
0x00007c8a      0f85ececffff   jne 0x697c
0x00007c90      488b8538ffff.  mov rax, qword [rbp - 0xc8]
0x00007c97      483985a8feff.  cmp qword [rbp - 0x158], rax
0x00007c9e      0f8403110000   je 0x8da7
0x00007ca4      4c89e7         mov rdi, r12
0x00007ca7      e864b1ffff     call sym..plt.got
0x00007cac      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00007cb3      be03000000     mov esi, 3
0x00007cb8      31ff           xor edi, edi
0x00007cba      e8f16e0000     call sym.quotearg_n_style_colon
0x00007cbf      ba05000000     mov edx, 5
0x00007cc4      4989c4         mov r12, rax
0x00007cc7      488d3552cf00.  lea rsi, str.s:_can_make_relative_symbolic_links_only_in_current_directory ; 0x14c20 ; "%s: can make relative symbolic links only in current directory"
0x00007cce      e955e9ffff     jmp 0x6628
0x00007cd3      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x00007cd9      488d9580fdff.  lea rdx, [rbp - 0x280]
0x00007ce0      2500f00000     and eax, 0xf000
0x00007ce5      3d00a00000     cmp eax, 0xa000
0x00007cea      0f8542f3ffff   jne 0x7032
0x00007cf0      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00007cf7      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00007cfe      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00007d05      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00007d0c      e82f750000     call sym.same_name
0x00007d11      84c0           test al, al
0x00007d13      0f8567f3ffff   jne 0x7080
0x00007d19      8b3b           mov edi, dword [rbx]
0x00007d1b      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00007d23      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00007d2b      85ff           test edi, edi
0x00007d2d      0f859bf1ffff   jne 0x6ece
0x00007d33      4585ff         test r15d, r15d
0x00007d36      0f8492f1ffff   je 0x6ece
0x00007d3c      440fb66318     movzx r12d, byte [rbx + 0x18]
0x00007d41      b801000000     mov eax, 1
0x00007d46      4183f401       xor r12d, 1
0x00007d4a      e9adf4ffff     jmp 0x71fc
0x00007d4f      90             nop
0x00007d50      4189c7         mov r15d, eax                           ; /src:1211
0x00007d53      48b800ff0000.  movabs rax, 0xff000000ff00
0x00007d5d      48854320       test qword [rbx + 0x20], rax
0x00007d61      0f84bbe2ffff   je 0x6022
0x00007d67      0fb67325       movzx esi, byte [rbx + 0x25]
0x00007d6b      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00007d72      31d2           xor edx, edx
0x00007d74      4889d9         mov rcx, rbx
0x00007d77      448885d8fcff.  mov byte [rbp - 0x328], r8b
0x00007d7e      e86dd9ffff     call sym.set_file_security_ctx
0x00007d83      84c0           test al, al
0x00007d85      4189c7         mov r15d, eax
0x00007d88      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00007d90      0f858ce2ffff   jne 0x6022
0x00007d96      440fb67326     movzx r14d, byte [rbx + 0x26]
0x00007d9b      4584f6         test r14b, r14b
0x00007d9e      0f856cecffff   jne 0x6a10
0x00007da4      4589e7         mov r15d, r12d
0x00007da7      e976e2ffff     jmp 0x6022
0x00007dac      0f1f4000       nop dword [rax]
0x00007db0      488d35e1d000.  lea rsi, str.copied                     ; 0x14e98 ; "copied "
0x00007db7      ba05000000     mov edx, 5
0x00007dbc      31ff           xor edi, edi
0x00007dbe      e81dabffff     call sym.imp.dcgettext
0x00007dc3      bf01000000     mov edi, 1
0x00007dc8      4889c6         mov rsi, rax
0x00007dcb      31c0           xor eax, eax
0x00007dcd      e88eaeffff     call sym.imp.__printf_chk
0x00007dd2      488b95b0fcff.  mov rdx, qword [rbp - 0x350]
0x00007dd9      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00007de0      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]            ; /src:1199
0x00007de7      e844d0ffff     call sym.emit_verbose
0x00007dec      c785e0fcffff.  mov dword [rbp - 0x320], 1
0x00007df6      e935e1ffff     jmp 0x5f30
0x00007dfb      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x00007e02      be04000000     mov esi, 4
0x00007e07      bf01000000     mov edi, 1                              ; /src:505
0x00007e0c      e87f6b0000     call sym.quotearg_n_style
0x00007e11      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00007e18      be04000000     mov esi, 4
0x00007e1d      31ff           xor edi, edi
0x00007e1f      4989c4         mov r12, rax                            ; /src:511
0x00007e22      e8696b0000     call sym.quotearg_n_style
0x00007e27      ba05000000     mov edx, 5
0x00007e2c      4889c3         mov rbx, rax
0x00007e2f      488d3592ca00.  lea rsi, str.cannot_overwrite_non_directory__s_with_directory__s ; 0x148c8 ; "cannot overwrite non-directory %s with directory %s"
0x00007e36      e980f2ffff     jmp 0x70bb
0x00007e3b      807b1500       cmp byte [rbx + 0x15], 0
0x00007e3f      7518           jne 0x7e59
0x00007e41      807b2200       cmp byte [rbx + 0x22], 0
0x00007e45      0f84db030000   je 0x8226
0x00007e4b      4883bd20feff.  cmp qword [rbp - 0x1e0], 1
0x00007e53      0f86cd030000   jbe 0x8226
0x00007e59      4c8bb5f8fcff.  mov r14, qword [rbp - 0x308]
0x00007e60      44888db0fcff.  mov byte [rbp - 0x350], r9b
0x00007e67      4c89f7         mov rdi, r14
0x00007e6a      e811a9ffff     call sym.imp.unlink
0x00007e6f      85c0           test eax, eax
0x00007e71      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x00007e79      0f8474030000   je 0x81f3
0x00007e7f      e8eca8ffff     call sym.imp.__errno_location
0x00007e84      833802         cmp dword [rax], 2
0x00007e87      4989c7         mov r15, rax
0x00007e8a      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x00007e92      0f845b030000   je 0x81f3
0x00007e98      4c89f6         mov rsi, r14
0x00007e9b      bf04000000     mov edi, 4
0x00007ea0      e80b6c0000     call sym.quotearg_style
0x00007ea5      488d35bdcf00.  lea rsi, str.cannot_remove__s           ; 0x14e69 ; "cannot remove %s"
0x00007eac      31ff           xor edi, edi
0x00007eae      ba05000000     mov edx, 5
0x00007eb3      4889c3         mov rbx, rax
0x00007eb6      e825aaffff     call sym.imp.dcgettext
0x00007ebb      418b37         mov esi, dword [r15]
0x00007ebe      4889c2         mov rdx, rax
0x00007ec1      4889d9         mov rcx, rbx
0x00007ec4      31ff           xor edi, edi
0x00007ec6      31c0           xor eax, eax
0x00007ec8      e8e3adffff     call sym.imp.error
0x00007ecd      e9f4e3ffff     jmp 0x62c6
0x00007ed2      488d8530ffff.  lea rax, [rbp - 0xd0]
0x00007ed9      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00007ee0      bf01000000     mov edi, 1
0x00007ee5      4889c2         mov rdx, rax
0x00007ee8      48898598fcff.  mov qword [rbp - 0x368], rax
0x00007eef      e81caaffff     call sym.imp.__lxstat
0x00007ef4      85c0           test eax, eax
0x00007ef6      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00007efe      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00007f06      0f85c2efffff   jne 0x6ece
0x00007f0c      31c9           xor ecx, ecx
0x00007f0e      488b85a8feff.  mov rax, qword [rbp - 0x158]
0x00007f15      48398538ffff.  cmp qword [rbp - 0xc8], rax
0x00007f1c      7511           jne 0x7f2f
0x00007f1e      488b85a0feff.  mov rax, qword [rbp - 0x160]
0x00007f25      48398530ffff.  cmp qword [rbp - 0xd0], rax
0x00007f2c      0f94c1         sete cl
0x00007f2f      8b8548ffffff   mov eax, dword [rbp - 0xb8]
0x00007f35      488b9598fcff.  mov rdx, qword [rbp - 0x368]
0x00007f3c      2500f00000     and eax, 0xf000
0x00007f41      3d00a00000     cmp eax, 0xa000
0x00007f46      0f85e6f0ffff   jne 0x7032
0x00007f4c      8b85b8feffff   mov eax, dword [rbp - 0x148]            ; ../coreutils-8.31/src/selinux.h:-506
0x00007f52      2500f00000     and eax, 0xf000
0x00007f57      3d00a00000     cmp eax, 0xa000
0x00007f5c      0f85d0f0ffff   jne 0x7032
0x00007f62      807b1500       cmp byte [rbx + 0x15], 0
0x00007f66      0f84c6f0ffff   je 0x7032
0x00007f6c      e95defffff     jmp 0x6ece
0x00007f71      0f1f80000000.  nop dword [rax]
0x00007f78      48b800ff0000.  movabs rax, 0xff000000ff00
0x00007f82      48854320       test qword [rbx + 0x20], rax
0x00007f86      0f85b4050000   jne 0x8540
0x00007f8c      c685d0fcffff.  mov byte [rbp - 0x330], 0
0x00007f93      c785a4fcffff.  mov dword [rbp - 0x35c], 0              ; /src:1710
0x00007f9d      e926f8ffff     jmp 0x77c8
0x00007fa2      4488a5ebfcff.  mov byte [rbp - 0x315], r12b
0x00007fa9      4531ff         xor r15d, r15d
0x00007fac      4531c0         xor r8d, r8d
0x00007faf      c685e0fcffff.  mov byte [rbp - 0x320], 0
0x00007fb6      e979e0ffff     jmp 0x6034
0x00007fbb      488b8d80fdff.  mov rcx, qword [rbp - 0x280]
0x00007fc2      483908         cmp qword [rax], rcx
0x00007fc5      0f85f8f9ffff   jne 0x79c3
0x00007fcb      e910f8ffff     jmp 0x77e0
0x00007fd0      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x00007fd6      2500f00000     and eax, 0xf000
0x00007fdb      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x00007fe0      0f8460fcffff   je 0x7c46
0x00007fe6      4585ff         test r15d, r15d
0x00007fe9      0f8530faffff   jne 0x7a1f
0x00007fef      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00007ff6      be03000000     mov esi, 3
0x00007ffb      31ff           xor edi, edi
0x00007ffd      e8ae6b0000     call sym.quotearg_n_style_colon
0x00008002      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x00008009      be03000000     mov esi, 3
0x0000800e      31ff           xor edi, edi
0x00008010      4989c4         mov r12, rax
0x00008013      e8986b0000     call sym.quotearg_n_style_colon         ; /src:1420
0x00008018      ba05000000     mov edx, 5
0x0000801d      4889c3         mov rbx, rax
0x00008020      488d3541c900.  lea rsi, str.cannot_move_directory_onto_non_directory:__s_____s ; 0x14968 ; "cannot move directory onto non-directory: %s -> %s"
0x00008027      e98ff0ffff     jmp 0x70bb
0x0000802c      8b95a4fcffff   mov edx, dword [rbp - 0x35c]
0x00008032      488b85a8fdff.  mov rax, qword [rbp - 0x258]
0x00008039      488d8d10fdff.  lea rcx, [rbp - 0x2f0]
0x00008040      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008047      31ff           xor edi, edi
0x00008049      448885d8fcff.  mov byte [rbp - 0x328], r8b
0x00008050      f7d2           not edx
0x00008052      2395ecfcffff   and edx, dword [rbp - 0x314]
0x00008058      48898510fdff.  mov qword [rbp - 0x2f0], rax
0x0000805f      e80cabffff     call sym.imp.__xmknod
0x00008064      85c0           test eax, eax
0x00008066      c685e0fcffff.  mov byte [rbp - 0x320], 0
0x0000806d      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00008075      0f8484dfffff   je 0x5fff
0x0000807b      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008082      bf04000000     mov edi, 4
0x00008087      e8246a0000     call sym.quotearg_style
0x0000808c      ba05000000     mov edx, 5
0x00008091      4989c5         mov r13, rax
0x00008094      488d352fcf00.  lea rsi, str.cannot_create_special_file__s ; 0x14fca ; "cannot create special file %s"
0x0000809b      e9bfeeffff     jmp 0x6f5f
0x000080a0      e8ab860000     call sym.utimens
0x000080a5      85c0           test eax, eax
0x000080a7      0f84b8e0ffff   je 0x6165
0x000080ad      e958e0ffff     jmp 0x610a
0x000080b2      488b7b40       mov rdi, qword [rbx + 0x40]
0x000080b6      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000080bd      4c89e2         mov rdx, r12
0x000080c0      e86b360000     call sym.record_file
0x000080c5      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x000080cd      e99bdfffff     jmp 0x606d
0x000080d2      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000080d9      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x000080e0      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x000080e7      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x000080ee      e84d710000     call sym.same_name
0x000080f3      83f001         xor eax, 1
0x000080f6      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x000080fe      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00008106      4189c4         mov r12d, eax
0x00008109      31c0           xor eax, eax                            ; /src:1082
0x0000810b      e9ecf0ffff     jmp 0x71fc
0x00008110      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00008118      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00008120      e9ebe5ffff     jmp 0x6710
0x00008125      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000812c      bf04000000     mov edi, 4
0x00008131      e87a690000     call sym.quotearg_style
0x00008136      ba05000000     mov edx, 5
0x0000813b      4989c5         mov r13, rax
0x0000813e      488d35d2cc00.  lea rsi, str.cannot_stat__s             ; 0x14e17 ; "cannot stat %s"
0x00008145      e915eeffff     jmp 0x6f5f
0x0000814a      488b351f2421.  mov rsi, qword [obj.top_level_src_name] ; [0x21a570:8]=0
0x00008151      bf04000000     mov edi, 4
0x00008156      e855690000     call sym.quotearg_style
0x0000815b      488d3516c900.  lea rsi, str.warning:_source_directory__s_specified_more_than_once ; 0x14a78 ; "warning: source directory %s specified more than once"
0x00008162      31ff           xor edi, edi
0x00008164      4989c4         mov r12, rax
0x00008167      ba05000000     mov edx, 5
0x0000816c      e86fa7ffff     call sym.imp.dcgettext
0x00008171      31f6           xor esi, esi
0x00008173      4889c2         mov rdx, rax
0x00008176      31ff           xor edi, edi
0x00008178      31c0           xor eax, eax
0x0000817a      4c89e1         mov rcx, r12
0x0000817d      e82eabffff     call sym.imp.error
0x00008182      807b1800       cmp byte [rbx + 0x18], 0
0x00008186      0f8578ebffff   jne 0x6d04
0x0000818c      e92fe1ffff     jmp 0x62c0                              ; /src:707
0x00008191      44888db0fcff.  mov byte [rbp - 0x350], r9b
0x00008198      e8d3a5ffff     call sym.imp.__errno_location
0x0000819d      833802         cmp dword [rax], 2
0x000081a0      4989c4         mov r12, rax
0x000081a3      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x000081ab      0f8460040000   je 0x8611
0x000081b1      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000081b8      bf04000000     mov edi, 4
0x000081bd      e8ee680000     call sym.quotearg_style
0x000081c2      488d358fcc00.  lea rsi, str.cannot_backup__s           ; 0x14e58 ; "cannot backup %s"
0x000081c9      ba05000000     mov edx, 5
0x000081ce      31ff           xor edi, edi
0x000081d0      4889c3         mov rbx, rax
0x000081d3      e808a7ffff     call sym.imp.dcgettext
0x000081d8      418b3424       mov esi, dword [r12]                    ; /src:710
0x000081dc      4889c2         mov rdx, rax
0x000081df      4889d9         mov rcx, rbx
0x000081e2      31ff           xor edi, edi
0x000081e4      31c0           xor eax, eax
0x000081e6      4531e4         xor r12d, r12d
0x000081e9      e8c2aaffff     call sym.imp.error
0x000081ee      e9d3e0ffff     jmp 0x62c6
0x000081f3      440fb6732e     movzx r14d, byte [rbx + 0x2e]
0x000081f8      4584f6         test r14b, r14b
0x000081fb      0f85cb050000   jne 0x87cc
0x00008201      4584ed         test r13b, r13b
0x00008204      0f859e050000   jne 0x87a8
0x0000820a      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x00008215      41be01000000   mov r14d, 1                             ; ../coreutils-8.31/src/system.h:-1025
0x0000821b      41bf11000000   mov r15d, 0x11
0x00008221      e9c3dcffff     jmp 0x5ee9
0x00008226      837b0402       cmp dword [rbx + 4], 2
0x0000822a      0f8577f0ffff   jne 0x72a7
0x00008230      8b8598fdffff   mov eax, dword [rbp - 0x268]
0x00008236      2500f00000     and eax, 0xf000
0x0000823b      3d00800000     cmp eax, 0x8000
0x00008240      0f8513fcffff   jne 0x7e59
0x00008246      e95cf0ffff     jmp 0x72a7
0x0000824b      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00008252      bf04000000     mov edi, 4
0x00008257      e854680000     call sym.quotearg_style
0x0000825c      ba05000000     mov edx, 5
0x00008261      4989c5         mov r13, rax
0x00008264      488d3577cc00.  lea rsi, str.cannot_open__s_for_reading ; 0x14ee2 ; "cannot open %s for reading"
0x0000826b      e9efecffff     jmp 0x6f5f
0x00008270      448b85ecfcff.  mov r8d, dword [rbp - 0x314]
0x00008277      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x0000827e      b9ffffffff     mov ecx, 0xffffffff                     ; -1
0x00008283      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x0000828a      89ce           mov esi, ecx
0x0000828c      e80f230000     call sym.copy_acl
0x00008291      85c0           test eax, eax
0x00008293      0f85d1dfffff   jne 0x626a
0x00008299      e928e0ffff     jmp 0x62c6
0x0000829e      4c89e2         mov rdx, r12
0x000082a1      4c89f7         mov rdi, r14
0x000082a4      44888db0fcff.  mov byte [rbp - 0x350], r9b
0x000082ab      4c8985a8fcff.  mov qword [rbp - 0x358], r8
0x000082b2      e8d9a7ffff     call sym.imp.memcmp
0x000082b7      85c0           test eax, eax
0x000082b9      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x000082c1      0f8582e5ffff   jne 0x6849
0x000082c7      4b8d3c26       lea rdi, [r14 + r12]
0x000082cb      4c89fe         mov rsi, r15
0x000082ce      e81da8ffff     call sym.imp.strcmp
0x000082d3      85c0           test eax, eax
0x000082d5      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x000082dd      4c8b85a8fcff.  mov r8, qword [rbp - 0x358]
0x000082e4      0f855fe5ffff   jne 0x6849
0x000082ea      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000082f1      4883c9ff       or rcx, 0xffffffffffffffff
0x000082f5      f2ae           repne scasb al, byte [rdi]
0x000082f7      4889c8         mov rax, rcx
0x000082fa      48f7d0         not rax
0x000082fd      4c8d70ff       lea r14, [rax - 1]
0x00008301      4b8d7c0601     lea rdi, [r14 + r8 + 1]
0x00008306      e8158d0000     call sym.xmalloc
0x0000830b      4c8b3d6e2221.  mov r15, qword [obj.simple_backup_suffix] ; [0x21a580:8]=0
0x00008312      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008319      4c89f2         mov rdx, r14
0x0000831c      4889c7         mov rdi, rax
0x0000831f      4989c4         mov r12, rax
0x00008322      e879a9ffff     call sym.imp.mempcpy
0x00008327      4c89fe         mov rsi, r15
0x0000832a      4889c7         mov rdi, rax
0x0000832d      e87ea4ffff     call sym.imp.strcpy
0x00008332      488d9530ffff.  lea rdx, [rbp - 0xd0]
0x00008339      4c89e6         mov rsi, r12
0x0000833c      bf01000000     mov edi, 1
0x00008341      e85aa8ffff     call sym.imp.__xstat
0x00008346      4c89e7         mov rdi, r12
0x00008349      4189c7         mov r15d, eax
0x0000834c      e8bfaaffff     call sym..plt.got
0x00008351      4585ff         test r15d, r15d
0x00008354      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x0000835c      0f85e7e4ffff   jne 0x6849
0x00008362      488b8538ffff.  mov rax, qword [rbp - 0xc8]
0x00008369      48398588fdff.  cmp qword [rbp - 0x278], rax
0x00008370      0f85d3e4ffff   jne 0x6849
0x00008376      488b8530ffff.  mov rax, qword [rbp - 0xd0]
0x0000837d      48398580fdff.  cmp qword [rbp - 0x280], rax
0x00008384      0f85bfe4ffff   jne 0x6849
0x0000838a      807b1800       cmp byte [rbx + 0x18], 0
0x0000838e      0f8462020000   je 0x85f6
0x00008394      488d3505c600.  lea rsi, str.backing_up__s_might_destroy_source____s_not_moved ; 0x149a0 ; "backing up %s might destroy source;  %s not moved"
0x0000839b      ba05000000     mov edx, 5
0x000083a0      31ff           xor edi, edi
0x000083a2      e839a5ffff     call sym.imp.dcgettext
0x000083a7      4889c3         mov rbx, rax
0x000083aa      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x000083b1      be04000000     mov esi, 4
0x000083b6      bf01000000     mov edi, 1
0x000083bb      e8d0650000     call sym.quotearg_n_style
0x000083c0      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x000083c7      4989c4         mov r12, rax
0x000083ca      be04000000     mov esi, 4
0x000083cf      31ff           xor edi, edi
0x000083d1      e8ba650000     call sym.quotearg_n_style
0x000083d6      4d89e0         mov r8, r12
0x000083d9      4889c1         mov rcx, rax
0x000083dc      4889da         mov rdx, rbx
0x000083df      31f6           xor esi, esi
0x000083e1      31ff           xor edi, edi
0x000083e3      31c0           xor eax, eax
0x000083e5      e8c6a8ffff     call sym.imp.error
0x000083ea      4531e4         xor r12d, r12d
0x000083ed      e9d4deffff     jmp 0x62c6
0x000083f2      448ba5a4fcff.  mov r12d, dword [rbp - 0x35c]
0x000083f9      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008400      488d8d08fdff.  lea rcx, [rbp - 0x2f8]                  ; /src:469
0x00008407      31ff           xor edi, edi
0x00008409      448885e0fcff.  mov byte [rbp - 0x320], r8b
0x00008410      48c78508fdff.  mov qword [rbp - 0x2f8], 0
0x0000841b      41f7d4         not r12d
0x0000841e      4423a5ecfcff.  and r12d, dword [rbp - 0x314]
0x00008425      4489e2         mov edx, r12d
0x00008428      e843a7ffff     call sym.imp.__xmknod
0x0000842d      85c0           test eax, eax
0x0000842f      440fb685e0fc.  movzx r8d, byte [rbp - 0x320]
0x00008437      0f84c2dbffff   je 0x5fff
0x0000843d      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00008444      4489e6         mov esi, r12d
0x00008447      81e6ffefffff   and esi, 0xffffefff
0x0000844d      e8eea6ffff     call sym.imp.mkfifo
0x00008452      85c0           test eax, eax
0x00008454      440fb685e0fc.  movzx r8d, byte [rbp - 0x320]
0x0000845c      0f849ddbffff   je 0x5fff
0x00008462      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008469      bf04000000     mov edi, 4
0x0000846e      e83d660000     call sym.quotearg_style
0x00008473      ba05000000     mov edx, 5
0x00008478      4989c5         mov r13, rax
0x0000847b      488d3532cb00.  lea rsi, str.cannot_create_fifo__s      ; 0x14fb4 ; "cannot create fifo %s"
0x00008482      e9d8eaffff     jmp 0x6f5f
0x00008487      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x0000848e      bf04000000     mov edi, 4
0x00008493      e818660000     call sym.quotearg_style
0x00008498      488d355eca00.  lea rsi, str.cannot_fstat__s            ; 0x14efd ; "cannot fstat %s"
0x0000849f      ba05000000     mov edx, 5
0x000084a4      4989c4         mov r12, rax
0x000084a7      31ff           xor edi, edi
0x000084a9      e832a4ffff     call sym.imp.dcgettext
0x000084ae      488985d8fcff.  mov qword [rbp - 0x328], rax
0x000084b5      e8b6a2ffff     call sym.imp.__errno_location
0x000084ba      4c89e1         mov rcx, r12
0x000084bd      488b95d8fcff.  mov rdx, qword [rbp - 0x328]
0x000084c4      8b30           mov esi, dword [rax]
0x000084c6      e9f6f6ffff     jmp 0x7bc1                              ; /src:1762
0x000084cb      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000084d2      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x000084d9      44888da4fcff.  mov byte [rbp - 0x35c], r9b
0x000084e0      448885a8fcff.  mov byte [rbp - 0x358], r8b
0x000084e7      488995b0fcff.  mov qword [rbp - 0x350], rdx
0x000084ee      e84d6d0000     call sym.same_name
0x000084f3      84c0           test al, al
0x000084f5      488b95b0fcff.  mov rdx, qword [rbp - 0x350]
0x000084fc      440fb685a8fc.  movzx r8d, byte [rbp - 0x358]
0x00008504      440fb68da4fc.  movzx r9d, byte [rbp - 0x35c]
0x0000850c      0f8475080000   je 0x8d87
0x00008512      8b4218         mov eax, dword [rdx + 0x18]
0x00008515      2500f00000     and eax, 0xf000
0x0000851a      3d00a00000     cmp eax, 0xa000
0x0000851f      0f8427ecffff   je 0x714c
0x00008525      418b442418     mov eax, dword [r12 + 0x18]
0x0000852a      2500f00000     and eax, 0xf000
0x0000852f      3d00a00000     cmp eax, 0xa000
0x00008534      0f8412ecffff   je 0x714c
0x0000853a      e9e5ebffff     jmp 0x7124
0x0000853f      90             nop
0x00008540      0fb67325       movzx esi, byte [rbx + 0x25]
0x00008544      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x0000854b      31d2           xor edx, edx
0x0000854d      4889d9         mov rcx, rbx
0x00008550      e89bd1ffff     call sym.set_file_security_ctx
0x00008555      84c0           test al, al
0x00008557      0f852ffaffff   jne 0x7f8c
0x0000855d      807b2600       cmp byte [rbx + 0x26], 0
0x00008561      0f85a9e4ffff   jne 0x6a10
0x00008567      e920faffff     jmp 0x7f8c
0x0000856c      488b9510feff.  mov rdx, qword [rbp - 0x1f0]
0x00008573      488bb518feff.  mov rsi, qword [rbp - 0x1e8]
0x0000857a      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00008581      e89a180000     call sym.remember_copied
0x00008586      488b85c8fcff.  mov rax, qword [rbp - 0x338]            ; /src:-390
0x0000858d      c60001         mov byte [rax], 1
0x00008590      e9e3f1ffff     jmp 0x7778
0x00008595      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x0000859c      be04000000     mov esi, 4
0x000085a1      bf01000000     mov edi, 1
0x000085a6      e8e5630000     call sym.quotearg_n_style
0x000085ab      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x000085b2      be04000000     mov esi, 4
0x000085b7      31ff           xor edi, edi
0x000085b9      4989c4         mov r12, rax
0x000085bc      e8cf630000     call sym.quotearg_n_style
0x000085c1      ba05000000     mov edx, 5                              ; /src:-389
0x000085c6      4889c3         mov rbx, rax
0x000085c9      488d3530c300.  lea rsi, str.will_not_overwrite_just_created__s_with__s ; 0x14900 ; "will not overwrite just-created %s with %s"
0x000085d0      e9e6eaffff     jmp 0x70bb
0x000085d5      8b5310         mov edx, dword [rbx + 0x10]
0x000085d8      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000085df      beffffffff     mov esi, 0xffffffff                     ; -1
0x000085e4      e847200000     call sym.set_acl                        ; /src:1594
0x000085e9      85c0           test eax, eax
0x000085eb      0f859fd7ffff   jne 0x5d90
0x000085f1      e9d0dcffff     jmp 0x62c6
0x000085f6      488d35dbc300.  lea rsi, str.backing_up__s_might_destroy_source____s_not_copied ; 0x149d8 ; "backing up %s might destroy source;  %s not copied"
0x000085fd      ba05000000     mov edx, 5
0x00008602      31ff           xor edi, edi
0x00008604      e8d7a2ffff     call sym.imp.dcgettext
0x00008609      4889c3         mov rbx, rax
0x0000860c      e999fdffff     jmp 0x83aa
0x00008611      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x0000861c      41be01000000   mov r14d, 1
0x00008622      41bf11000000   mov r15d, 0x11
0x00008628      e9e1d7ffff     jmp 0x5e0e                              ; /src:1621
0x0000862d      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008634      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x0000863b      31d2           xor edx, edx
0x0000863d      e8eec7ffff     call sym.emit_verbose
0x00008642      e981f1ffff     jmp 0x77c8
0x00008647      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x0000864e      bf04000000     mov edi, 4
0x00008653      e858640000     call sym.quotearg_style
0x00008658      488d3542c900.  lea rsi, str.failed_to_close__s         ; 0x14fa1 ; "failed to close %s"
0x0000865f      31ff           xor edi, edi
0x00008661      ba05000000     mov edx, 5
0x00008666      4989c4         mov r12, rax
0x00008669      e872a2ffff     call sym.imp.dcgettext
0x0000866e      4989c5         mov r13, rax
0x00008671      e8faa0ffff     call sym.imp.__errno_location           ; /src:1432
0x00008676      8b30           mov esi, dword [rax]
0x00008678      31ff           xor edi, edi
0x0000867a      4c89e1         mov rcx, r12
0x0000867d      4c89ea         mov rdx, r13
0x00008680      31c0           xor eax, eax
0x00008682      e829a6ffff     call sym.imp.error
0x00008687      488bbdd0fcff.  mov rdi, qword [rbp - 0x330]
0x0000868e      e87da7ffff     call sym..plt.got
0x00008693      e978e3ffff     jmp 0x6a10
0x00008698      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x0000869f      bf04000000     mov edi, 4
0x000086a4      e807640000     call sym.quotearg_style
0x000086a9      488d3521c800.  lea rsi, str.cannot_access__s           ; /src:1083 ; 0x14ed1 ; "cannot access %s"
0x000086b0      ba05000000     mov edx, 5
0x000086b5      31ff           xor edi, edi
0x000086b7      4989c4         mov r12, rax
0x000086ba      e821a2ffff     call sym.imp.dcgettext                  ; /src:1075
0x000086bf      4989c7         mov r15, rax
0x000086c2      e8a9a0ffff     call sym.imp.__errno_location
0x000086c7      8b30           mov esi, dword [rax]
0x000086c9      4c89e1         mov rcx, r12
0x000086cc      4c89fa         mov rdx, r15
0x000086cf      31ff           xor edi, edi
0x000086d1      31c0           xor eax, eax
0x000086d3      4531e4         xor r12d, r12d
0x000086d6      e8d5a5ffff     call sym.imp.error
0x000086db      e9e3f2ffff     jmp 0x79c3
0x000086e0      488bb5b0fdff.  mov rsi, qword [rbp - 0x250]
0x000086e7      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x000086ee      e88d1f0000     call sym.areadlink_with_size            ; ../coreutils-8.31/src/py.c:-1011
0x000086f3      4885c0         test rax, rax
0x000086f6      4989c4         mov r12, rax
0x000086f9      0f8444080000   je 0x8f43
0x000086ff      0fb64b16       movzx ecx, byte [rbx + 0x16]
0x00008703      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x0000870a      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x00008710      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x00008715      4889c7         mov rdi, rax
0x00008718      e8231d0000     call sym.force_symlinkat                ; /src:1723
0x0000871d      85c0           test eax, eax
0x0000871f      8985e0fcffff   mov dword [rbp - 0x320], eax
0x00008725      0f8e3d080000   jle 0x8f68
0x0000872b      807b2d01       cmp byte [rbx + 0x2d], 1
0x0000872f      7509           jne 0x873a                              ; /src:1769
0x00008731      4584f6         test r14b, r14b
0x00008734      0f84df0b0000   je 0x9319
0x0000873a      4c89e7         mov rdi, r12
0x0000873d      e8cea6ffff     call sym..plt.got
0x00008742      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008749      bf04000000     mov edi, 4
0x0000874e      e85d630000     call sym.quotearg_style
0x00008753      488d3506c500.  lea rsi, str.cannot_create_symbolic_link__s ; 0x14c60 ; "cannot create symbolic link %s"
0x0000875a      31ff           xor edi, edi
0x0000875c      ba05000000     mov edx, 5
0x00008761      4989c4         mov r12, rax
0x00008764      e877a1ffff     call sym.imp.dcgettext                  ; /src:1785
0x00008769      8bb5e0fcffff   mov esi, dword [rbp - 0x320]
0x0000876f      4889c2         mov rdx, rax
0x00008772      4c89e1         mov rcx, r12
0x00008775      31ff           xor edi, edi
0x00008777      31c0           xor eax, eax                            ; /src:1760
0x00008779      e832a5ffff     call sym.imp.error
0x0000877e      e98de2ffff     jmp 0x6a10
0x00008783      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000878a      bf04000000     mov edi, 4
0x0000878f      e81c630000     call sym.quotearg_style
0x00008794      ba05000000     mov edx, 5                              ; /src:1762
0x00008799      4989c5         mov r13, rax
0x0000879c      488d3587a100.  lea rsi, str.setting_permissions_for__s ; 0x1292a ; "setting permissions for %s"
0x000087a3      e9b7e7ffff     jmp 0x6f5f
0x000087a8      48837b4000     cmp qword [rbx + 0x40], 0
0x000087ad      4589ee         mov r14d, r13d
0x000087b0      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x000087bb      41bf11000000   mov r15d, 0x11                          ; /src:-50
0x000087c1      0f855bd6ffff   jne 0x5e22
0x000087c7      e91dd7ffff     jmp 0x5ee9
0x000087cc      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000087d3      bf04000000     mov edi, 4
0x000087d8      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x000087df      41bf11000000   mov r15d, 0x11
0x000087e5      e8c6620000     call sym.quotearg_style
0x000087ea      488d358fc500.  lea rsi, str.removed__s                 ; 0x14d80 ; "removed %s\n"
0x000087f1      4989c4         mov r12, rax
0x000087f4      ba05000000     mov edx, 5
0x000087f9      31ff           xor edi, edi
0x000087fb      e8e0a0ffff     call sym.imp.dcgettext
0x00008800      4c89e2         mov rdx, r12
0x00008803      4889c6         mov rsi, rax
0x00008806      bf01000000     mov edi, 1
0x0000880b      31c0           xor eax, eax
0x0000880d      e84ea4ffff     call sym.imp.__printf_chk
0x00008812      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x0000881d      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00008825      e9e4d5ffff     jmp 0x5e0e
0x0000882a      8b8530feffff   mov eax, dword [rbp - 0x1d0]            ; ../coreutils-8.31/src/selinux.h:-778
0x00008830      3985a0fdffff   cmp dword [rbp - 0x260], eax            ; /src:-48
0x00008836      0f8546d9ffff   jne 0x6182                              ; /src:-40
0x0000883c      e986d9ffff     jmp 0x61c7
0x00008841      e80ad2ffff     call sym.cached_umask
0x00008846      f7d0           not eax
0x00008848      2185a4fcffff   and dword [rbp - 0x35c], eax
0x0000884e      0f84a9d9ffff   je 0x61fd
0x00008854      80bdebfcffff.  cmp byte [rbp - 0x315], 1
0x0000885b      0f84a9d9ffff   je 0x620a
0x00008861      4584f6         test r14b, r14b
0x00008864      0f856d090000   jne 0x91d7
0x0000886a      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x00008870      898574fcffff   mov dword [rbp - 0x38c], eax
0x00008876      f7d0           not eax
0x00008878      8585a4fcffff   test dword [rbp - 0x35c], eax
0x0000887e      0f8586d9ffff   jne 0x620a
0x00008884      e93ddaffff     jmp 0x62c6
0x00008889      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x0000888f      bab6010000     mov edx, 0x1b6
0x00008894      bbff010000     mov ebx, 0x1ff
0x00008899      2500700000     and eax, 0x7000
0x0000889e      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x000088a3      0f45da         cmovne ebx, edx
0x000088a6      e8a5d1ffff     call sym.cached_umask
0x000088ab      f7d0           not eax
0x000088ad      89c2           mov edx, eax
0x000088af      21da           and edx, ebx
0x000088b1      e922fdffff     jmp 0x85d8
0x000088b6      4181e4ff0100.  and r12d, 0x1ff
0x000088bd      4584f6         test r14b, r14b                         ; /src:-245
0x000088c0      4489a55cfcff.  mov dword [rbp - 0x3a4], r12d
0x000088c7      0f8593050000   jne 0x8e60
0x000088cd      807b2301       cmp byte [rbx + 0x23], 1
0x000088d1      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000088d8      19f6           sbb esi, esi
0x000088da      31c0           xor eax, eax
0x000088dc      81e600feffff   and esi, 0xfffffe00                     ; 4294966784
0x000088e2      81c601020000   add esi, 0x201
0x000088e8      e8d32d0000     call sym.open_safer
0x000088ed      8985d8fcffff   mov dword [rbp - 0x328], eax
0x000088f3      e8789effff     call sym.imp.__errno_location
0x000088f8      4989c4         mov r12, rax
0x000088fb      48b800ff0000.  movabs rax, 0xff000000ff00
0x00008905      48854320       test qword [rbx + 0x20], rax
0x00008909      0f8586080000   jne 0x9195
0x0000890f      83bdd8fcffff.  cmp dword [rbp - 0x328], 0
0x00008916      0f8886080000   js 0x91a2
0x0000891c      c78588fcffff.  mov dword [rbp - 0x378], 0
0x00008926      488d8530ffff.  lea rax, [rbp - 0xd0]
0x0000892d      8bb5d8fcffff   mov esi, dword [rbp - 0x328]
0x00008933      bf01000000     mov edi, 1
0x00008938      4889c2         mov rdx, rax
0x0000893b      48898598fcff.  mov qword [rbp - 0x368], rax
0x00008942      e8a9a2ffff     call sym.imp.__fxstat
0x00008947      85c0           test eax, eax
0x00008949      8985b8fcffff   mov dword [rbp - 0x348], eax
0x0000894f      0f85a10b0000   jne 0x94f6
0x00008955      80bdc8fcffff.  cmp byte [rbp - 0x338], 0
0x0000895c      0f84cd060000   je 0x902f
0x00008962      837b3800       cmp dword [rbx + 0x38], 0
0x00008966      0f85580e0000   jne 0x97c4
0x0000896c      e8ffa3ffff     call sym.imp.getpagesize
0x00008971      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x00008978      4c63e0         movsxd r12, eax                         ; /src:24
0x0000897b      48b80000feff.  movabs rax, 0x1ffffffffffe0000
0x00008985      41b800020000   mov r8d, 0x200
0x0000898b      8bbde0fcffff   mov edi, dword [rbp - 0x320]
0x00008991      4c8985d0fcff.  mov qword [rbp - 0x330], r8             ; /src:28
0x00008998      488d910000fe.  lea rdx, [rcx - 0x20000]
0x0000899f      4839c2         cmp rdx, rax
0x000089a2      b800000200     mov eax, 0x20000
0x000089a7      488d51ff       lea rdx, [rcx - 1]
0x000089ab      480f46c1       cmovbe rax, rcx
0x000089af      48898590fcff.  mov qword [rbp - 0x370], rax            ; stdio.h:-741
0x000089b6      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; 2305843009213693951
0x000089c0      4839c2         cmp rdx, rax
0x000089c3      490f47c8       cmova rcx, r8
0x000089c7      31d2           xor edx, edx
0x000089c9      31f6           xor esi, esi
0x000089cb      48898d68fcff.  mov qword [rbp - 0x398], rcx
0x000089d2      b902000000     mov ecx, 2
0x000089d7      e8a42c0000     call sym.fdadvise
0x000089dc      448b8db8feff.  mov r9d, dword [rbp - 0x148]
0x000089e3      4c8b85d0fcff.  mov r8, qword [rbp - 0x330]
0x000089ea      4181e100f000.  and r9d, 0xf000                         ; /src:-849
0x000089f1      4181f9008000.  cmp r9d, 0x8000
0x000089f8      0f84dc0e0000   je 0x98da
0x000089fe      8b8548ffffff   mov eax, dword [rbp - 0xb8]
0x00008a04      2500f00000     and eax, 0xf000                         ; /src:-980
0x00008a09      3d00800000     cmp eax, 0x8000
0x00008a0e      0f845b0e0000   je 0x986f
0x00008a14      488bbdd8feff.  mov rdi, qword [rbp - 0x128]
0x00008a1b      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x00008a25      488bb590fcff.  mov rsi, qword [rbp - 0x370]
0x00008a2c      4c29e0         sub rax, r12
0x00008a2f      44898d80fcff.  mov dword [rbp - 0x380], r9d
0x00008a36      4989c0         mov r8, rax
0x00008a39      48b80000feff.  movabs rax, 0x1ffffffffffe0000
0x00008a43      488d970000fe.  lea rdx, [rdi - 0x20000]
0x00008a4a      4c8985d0fcff.  mov qword [rbp - 0x330], r8
0x00008a51      4839c2         cmp rdx, rax
0x00008a54      b800000200     mov eax, 0x20000
0x00008a59      4c89c2         mov rdx, r8
0x00008a5c      480f47f8       cmova rdi, rax
0x00008a60      e8eb270000     call sym.buffer_lcm
0x00008a65      448b8d80fcff.  mov r9d, dword [rbp - 0x380]
0x00008a6c      4889c1         mov rcx, rax
0x00008a6f      4c8b85d0fcff.  mov r8, qword [rbp - 0x330]
0x00008a76      4181f9008000.  cmp r9d, 0x8000
0x00008a7d      0f84ca0c0000   je 0x974d
0x00008a83      488b8590fcff.  mov rax, qword [rbp - 0x370]
0x00008a8a      31d2           xor edx, edx
0x00008a8c      488d7401ff     lea rsi, [rcx + rax - 1]
0x00008a91      4889f0         mov rax, rsi
0x00008a94      48f7f1         div rcx
0x00008a97      4829d6         sub rsi, rdx
0x00008a9a      4889b590fcff.  mov qword [rbp - 0x370], rsi
0x00008aa1      0f84aa0a0000   je 0x9551
0x00008aa7      4c39c6         cmp rsi, r8
0x00008aaa      0f87a10a0000   ja 0x9551
0x00008ab0      488b8590fcff.  mov rax, qword [rbp - 0x370]            ; /src:-990
0x00008ab7      498d3c04       lea rdi, [r12 + rax]                    ; /src:-989
0x00008abb      e860850000     call sym.xmalloc
0x00008ac0      4a8d4c20ff     lea rcx, [rax + r12 - 1]
0x00008ac5      31d2           xor edx, edx
0x00008ac7      488985d0fcff.  mov qword [rbp - 0x330], rax
0x00008ace      4889c8         mov rax, rcx
0x00008ad1      49f7f4         div r12
0x00008ad4      4829d1         sub rcx, rdx
0x00008ad7      83bdb8fcffff.  cmp dword [rbp - 0x348], 0
0x00008ade      48898d50fcff.  mov qword [rbp - 0x3b0], rcx
0x00008ae5      0f84720a0000   je 0x955d
0x00008aeb      c6855bfcffff.  mov byte [rbp - 0x3a5], 0
0x00008af2      c78570fcffff.  mov dword [rbp - 0x390], 1
0x00008afc      488b85d0feff.  mov rax, qword [rbp - 0x130]
0x00008b03      8bbde0fcffff   mov edi, dword [rbp - 0x320]            ; /src:-1068
0x00008b09      4531e4         xor r12d, r12d
0x00008b0c      48898580fcff.  mov qword [rbp - 0x380], rax
0x00008b13      488d8510fdff.  lea rax, [rbp - 0x2f0]
0x00008b1a      4889c6         mov rsi, rax
0x00008b1d      488985b8fcff.  mov qword [rbp - 0x348], rax
0x00008b24      e8c7130000     call sym.extent_scan_init
0x00008b29      488d8507fdff.  lea rax, [rbp - 0x2f9]
0x00008b30      31c9           xor ecx, ecx
0x00008b32      48899d78fcff.  mov qword [rbp - 0x388], rbx
0x00008b39      48c78560fcff.  mov qword [rbp - 0x3a0], 0
0x00008b44      4889cb         mov rbx, rcx
0x00008b47      4489ada0fcff.  mov dword [rbp - 0x360], r13d
0x00008b4e      48898548fcff.  mov qword [rbp - 0x3b8], rax
0x00008b55      488d8508fdff.  lea rax, [rbp - 0x2f8]
0x00008b5c      48898540fcff.  mov qword [rbp - 0x3c0], rax
0x00008b63      488bbdb8fcff.  mov rdi, qword [rbp - 0x348]
0x00008b6a      e8b1130000     call sym.extent_scan_read
0x00008b6f      84c0           test al, al
0x00008b71      0f84fa0b0000   je 0x9771
0x00008b77      4883bd28fdff.  cmp qword [rbp - 0x2d8], 0
0x00008b7f      0f84c90a0000   je 0x964e
0x00008b85      4889da         mov rdx, rbx
0x00008b88      4c89e1         mov rcx, r12
0x00008b8b      4531ed         xor r13d, r13d
0x00008b8e      31c0           xor eax, eax
0x00008b90      e9b8000000     jmp 0x8c4d
0x00008b95      0f1f00         nop dword [rax]
0x00008b98      83bd70fcffff.  cmp dword [rbp - 0x390], 3
0x00008b9f      41b800000000   mov r8d, 0
0x00008ba5      4c0f448568fc.  cmove r8, qword [rbp - 0x398]
0x00008bad      4883ec08       sub rsp, 8                              ; stat.h:-1450
0x00008bb1      488b8d90fcff.  mov rcx, qword [rbp - 0x370]
0x00008bb8      488b9550fcff.  mov rdx, qword [rbp - 0x3b0]
0x00008bbf      8bb5d8fcffff   mov esi, dword [rbp - 0x328]
0x00008bc5      8bbde0fcffff   mov edi, dword [rbp - 0x320]
0x00008bcb      41b901000000   mov r9d, 1
0x00008bd1      ffb548fcffff   push qword [rbp - 0x3b8]
0x00008bd7      ffb540fcffff   push qword [rbp - 0x3c0]
0x00008bdd      53             push rbx
0x00008bde      ffb5f8fcffff   push qword [rbp - 0x308]                ; /src:-115
0x00008be4      ffb5f0fcffff   push qword [rbp - 0x310]
0x00008bea      e821c6ffff     call sym.sparse_copy
0x00008bef      4883c430       add rsp, 0x30
0x00008bf3      84c0           test al, al
0x00008bf5      0f84fd000000   je 0x8cf8
0x00008bfb      488b8508fdff.  mov rax, qword [rbp - 0x2f8]
0x00008c02      498d0c04       lea rcx, [r12 + rax]
0x00008c06      4885c0         test rax, rax
0x00008c09      48898d60fcff.  mov qword [rbp - 0x3a0], rcx
0x00008c10      740d           je 0x8c1f
0x00008c12      0fb68507fdff.  movzx eax, byte [rbp - 0x2f9]
0x00008c19      8885c8fcffff   mov byte [rbp - 0x338], al
0x00008c1f      488b8d60fcff.  mov rcx, qword [rbp - 0x3a0]
0x00008c26      48398d80fcff.  cmp qword [rbp - 0x380], rcx            ; /src:-114
0x00008c2d      0f84140a0000   je 0x9647
0x00008c33      418d4501       lea eax, [r13 + 1]
0x00008c37      483b8528fdff.  cmp rax, qword [rbp - 0x2d8]
0x00008c3e      4c89e1         mov rcx, r12
0x00008c41      4889da         mov rdx, rbx
0x00008c44      4989c5         mov r13, rax
0x00008c47      0f83010a0000   jae 0x964e
0x00008c4d      488d3440       lea rsi, [rax + rax*2]
0x00008c51      488b8538fdff.  mov rax, qword [rbp - 0x2c8]
0x00008c58      488d04f0       lea rax, [rax + rsi*8]
0x00008c5c      488bb580fcff.  mov rsi, qword [rbp - 0x380]
0x00008c63      4c8b20         mov r12, qword [rax]
0x00008c66      488b5808       mov rbx, qword [rax + 8]
0x00008c6a      498d041c       lea rax, [r12 + rbx]
0x00008c6e      4839c6         cmp rsi, rax
0x00008c71      7d0d           jge 0x8c80
0x00008c73      4939f4         cmp r12, rsi
0x00008c76      4c0f4fe6       cmovg r12, rsi
0x00008c7a      4c29e6         sub rsi, r12
0x00008c7d      4889f3         mov rbx, rsi
0x00008c80      4c89e0         mov rax, r12
0x00008c83      c685c8fcffff.  mov byte [rbp - 0x338], 0
0x00008c8a      4829c8         sub rax, rcx
0x00008c8d      4889c1         mov rcx, rax
0x00008c90      4829d1         sub rcx, rdx
0x00008c93      0f84fffeffff   je 0x8b98
0x00008c99      8bbde0fcffff   mov edi, dword [rbp - 0x320]
0x00008c9f      31d2           xor edx, edx
0x00008ca1      4c89e6         mov rsi, r12
0x00008ca4      48898d60fcff.  mov qword [rbp - 0x3a0], rcx
0x00008cab      e8109dffff     call sym.imp.lseek
0x00008cb0      4885c0         test rax, rax
0x00008cb3      488b8d60fcff.  mov rcx, qword [rbp - 0x3a0]
0x00008cba      0f886f0e0000   js 0x9b2f                               ; /src:-412
0x00008cc0      8b8570fcffff   mov eax, dword [rbp - 0x390]
0x00008cc6      83f803         cmp eax, 3
0x00008cc9      0f94c2         sete dl
0x00008ccc      83e801         sub eax, 1
0x00008ccf      0f8453070000   je 0x9428
0x00008cd5      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008cdc      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x00008ce2      0fb6d2         movzx edx, dl
0x00008ce5      e866c4ffff     call sym.create_hole
0x00008cea      84c0           test al, al
0x00008cec      8885c8fcffff   mov byte [rbp - 0x338], al
0x00008cf2      0f85a0feffff   jne 0x8b98
0x00008cf8      488b9d78fcff.  mov rbx, qword [rbp - 0x388]
0x00008cff      448bada0fcff.  mov r13d, dword [rbp - 0x360]
0x00008d06      488bbd38fdff.  mov rdi, qword [rbp - 0x2c8]
0x00008d0d      e8fea0ffff     call sym..plt.got
0x00008d12      4531c0         xor r8d, r8d
0x00008d15      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x00008d1b      448885c8fcff.  mov byte [rbp - 0x338], r8b
0x00008d22      e8099dffff     call sym.imp.close
0x00008d27      85c0           test eax, eax
0x00008d29      440fb685c8fc.  movzx r8d, byte [rbp - 0x338]
0x00008d31      0f89a1eeffff   jns 0x7bd8
0x00008d37      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008d3e      bf04000000     mov edi, 4
0x00008d43      e8685d0000     call sym.quotearg_style
0x00008d48      488d3552c200.  lea rsi, str.failed_to_close__s         ; 0x14fa1 ; "failed to close %s"
0x00008d4f      ba05000000     mov edx, 5
0x00008d54      31ff           xor edi, edi
0x00008d56      4989c4         mov r12, rax
0x00008d59      e8829bffff     call sym.imp.dcgettext
0x00008d5e      488985d8fcff.  mov qword [rbp - 0x328], rax
0x00008d65      e8069affff     call sym.imp.__errno_location
0x00008d6a      488b95d8fcff.  mov rdx, qword [rbp - 0x328]
0x00008d71      8b30           mov esi, dword [rax]
0x00008d73      4c89e1         mov rcx, r12                            ; /src:-411
0x00008d76      31ff           xor edi, edi
0x00008d78      31c0           xor eax, eax
0x00008d7a      e8319fffff     call sym.imp.error
0x00008d7f      4531c0         xor r8d, r8d
0x00008d82      e951eeffff     jmp 0x7bd8
0x00008d87      440fb66318     movzx r12d, byte [rbx + 0x18]
0x00008d8c      4183f401       xor r12d, 1
0x00008d90      e967e4ffff     jmp 0x71fc
0x00008d95      c685ebfcffff.  mov byte [rbp - 0x315], 0
0x00008d9c      41bc01000000   mov r12d, 1
0x00008da2      e900ecffff     jmp 0x79a7
0x00008da7      488b8530ffff.  mov rax, qword [rbp - 0xd0]
0x00008dae      483985a0feff.  cmp qword [rbp - 0x160], rax
0x00008db5      0f85e9eeffff   jne 0x7ca4
0x00008dbb      e9bcdbffff     jmp 0x697c
0x00008dc0      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00008dc7      e8b499ffff     call sym.imp.unlink
0x00008dcc      85c0           test eax, eax                           ; /src:-578
0x00008dce      0f85320c0000   jne 0x9a06
0x00008dd4      807b2e00       cmp byte [rbx + 0x2e], 0
0x00008dd8      7439           je 0x8e13
0x00008dda      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008de1      bf04000000     mov edi, 4
0x00008de6      e8c55c0000     call sym.quotearg_style
0x00008deb      488d358ebf00.  lea rsi, str.removed__s                 ; 0x14d80 ; "removed %s\n"
0x00008df2      4989c4         mov r12, rax
0x00008df5      ba05000000     mov edx, 5
0x00008dfa      31ff           xor edi, edi
0x00008dfc      e8df9affff     call sym.imp.dcgettext
0x00008e01      4c89e2         mov rdx, r12
0x00008e04      4889c6         mov rsi, rax                            ; /src:1136
0x00008e07      bf01000000     mov edi, 1
0x00008e0c      31c0           xor eax, eax                            ; /src:1144
0x00008e0e      e84d9effff     call sym.imp.__printf_chk
0x00008e13      440fb67321     movzx r14d, byte [rbx + 0x21]
0x00008e18      8b85a4fcffff   mov eax, dword [rbp - 0x35c]
0x00008e1e      898588fcffff   mov dword [rbp - 0x378], eax
0x00008e24      4584f6         test r14b, r14b
0x00008e27      7443           je 0x8e6c
0x00008e29      8b955cfcffff   mov edx, dword [rbp - 0x3a4]
0x00008e2f      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008e36      4989d8         mov r8, rbx
0x00008e39      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00008e40      b901000000     mov ecx, 1                              ; /src:1345
0x00008e45      e8d6c7ffff     call sym.set_process_security_ctx       ; ../coreutils-8.31/src/selinux.h:-1149
0x00008e4a      84c0           test al, al
0x00008e4c      4189c0         mov r8d, eax
0x00008e4f      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x00008e5a      0f8478edffff   je 0x7bd8
0x00008e60      8b85a4fcffff   mov eax, dword [rbp - 0x35c]
0x00008e66      898588fcffff   mov dword [rbp - 0x378], eax
0x00008e6c      8b8588fcffff   mov eax, dword [rbp - 0x378]
0x00008e72      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00008e79      bec1000000     mov esi, 0xc1
0x00008e7e      f7d0           not eax
0x00008e80      23855cfcffff   and eax, dword [rbp - 0x3a4]
0x00008e86      89c2           mov edx, eax
0x00008e88      8985d0fcffff   mov dword [rbp - 0x330], eax
0x00008e8e      31c0           xor eax, eax
0x00008e90      e82b280000     call sym.open_safer
0x00008e95      4189c6         mov r14d, eax
0x00008e98      8985d8fcffff   mov dword [rbp - 0x328], eax
0x00008e9e      e8cd98ffff     call sym.imp.__errno_location
0x00008ea3      448b00         mov r8d, dword [rax]
0x00008ea6      4989c4         mov r12, rax
0x00008ea9      4489f0         mov eax, r14d
0x00008eac      c1e81f         shr eax, 0x1f
0x00008eaf      4183f811       cmp r8d, 0x11
0x00008eb3      0f94c2         sete dl
0x00008eb6      20c2           and dl, al
0x00008eb8      4189d6         mov r14d, edx
0x00008ebb      0f8401040000   je 0x92c2
0x00008ec1      807b1800       cmp byte [rbx + 0x18], 0
0x00008ec5      41b811000000   mov r8d, 0x11
0x00008ecb      0f8484030000   je 0x9255                               ; /src:-578
0x00008ed1      41b901000000   mov r9d, 1
0x00008ed7      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008ede      bf04000000     mov edi, 4
0x00008ee3      44888dd0fcff.  mov byte [rbp - 0x330], r9b
0x00008eea      448985d8fcff.  mov dword [rbp - 0x328], r8d
0x00008ef1      e8ba5b0000     call sym.quotearg_style
0x00008ef6      488d3510c000.  lea rsi, str.cannot_create_regular_file__s ; 0x14f0d ; "cannot create regular file %s"
0x00008efd      ba05000000     mov edx, 5
0x00008f02      31ff           xor edi, edi                            ; /src:-264
0x00008f04      4989c4         mov r12, rax
0x00008f07      e8d499ffff     call sym.imp.dcgettext
0x00008f0c      448b85d8fcff.  mov r8d, dword [rbp - 0x328]
0x00008f13      4889c2         mov rdx, rax
0x00008f16      4c89e1         mov rcx, r12
0x00008f19      31ff           xor edi, edi
0x00008f1b      31c0           xor eax, eax
0x00008f1d      4489c6         mov esi, r8d
0x00008f20      e88b9dffff     call sym.imp.error
0x00008f25      440fb68dd0fc.  movzx r9d, byte [rbp - 0x330]
0x00008f2d      4531c0         xor r8d, r8d
0x00008f30      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x00008f3b      4589ce         mov r14d, r9d
0x00008f3e      e995ecffff     jmp 0x7bd8
0x00008f43      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00008f4a      bf04000000     mov edi, 4
0x00008f4f      e85c5b0000     call sym.quotearg_style
0x00008f54      ba05000000     mov edx, 5
0x00008f59      4989c5         mov r13, rax
0x00008f5c      488d3585c000.  lea rsi, str.cannot_read_symbolic_link__s ; 0x14fe8 ; "cannot read symbolic link %s"
0x00008f63      e9f7dfffff     jmp 0x6f5f
0x00008f68      4c89e7         mov rdi, r12
0x00008f6b      e8a09effff     call sym..plt.got
0x00008f70      440fb64325     movzx r8d, byte [rbx + 0x25]
0x00008f75      4584c0         test r8b, r8b
0x00008f78      0f8512dcffff   jne 0x6b90
0x00008f7e      0fb6431d       movzx eax, byte [rbx + 0x1d]            ; /src:-213
0x00008f82      84c0           test al, al
0x00008f84      8885e0fcffff   mov byte [rbp - 0x320], al
0x00008f8a      0f8573020000   jne 0x9203
0x00008f90      440fb685e0fc.  movzx r8d, byte [rbp - 0x320]
0x00008f98      c685e0fcffff.  mov byte [rbp - 0x320], 1               ; /src:-211
0x00008f9f      e95bd0ffff     jmp 0x5fff                              ; /src:-210
0x00008fa4      e88799ffff     call sym.imp.__stack_chk_fail
0x00008fa9      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008fb0      488d95a0feff.  lea rdx, [rbp - 0x160]
0x00008fb7      bf01000000     mov edi, 1
0x00008fbc      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00008fc3      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00008fca      e8d19bffff     call sym.imp.__xstat
0x00008fcf      85c0           test eax, eax
0x00008fd1      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00008fd9      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00008fe1      0f848ae6ffff   je 0x7671
0x00008fe7      e9b3ccffff     jmp 0x5c9f
0x00008fec      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00008ff3      488d9530ffff.  lea rdx, [rbp - 0xd0]
0x00008ffa      bf01000000     mov edi, 1
0x00008fff      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00009006      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x0000900d      e88e9bffff     call sym.imp.__xstat
0x00009012      85c0           test eax, eax
0x00009014      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x0000901c      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00009024      0f84b2e5ffff   je 0x75dc
0x0000902a      e970ccffff     jmp 0x5c9f
0x0000902f      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x0000903a      807b1f00       cmp byte [rbx + 0x1f], 0
0x0000903e      0f8502040000   jne 0x9446                              ; /src:-510
0x00009044      807b1d00       cmp byte [rbx + 0x1d], 0
0x00009048      745a           je 0x90a4
0x0000904a      8b854cffffff   mov eax, dword [rbp - 0xb4]
0x00009050      39859cfdffff   cmp dword [rbp - 0x264], eax
0x00009056      750e           jne 0x9066
0x00009058      8b8550ffffff   mov eax, dword [rbp - 0xb0]
0x0000905e      3985a0fdffff   cmp dword [rbp - 0x260], eax            ; ../coreutils-8.31/src/py.c:1011
0x00009064      743e           je 0x90a4
0x00009066      4c8b8d98fcff.  mov r9, qword [rbp - 0x368]
0x0000906d      8b95d8fcffff   mov edx, dword [rbp - 0x328]
0x00009073      488d8d80fdff.  lea rcx, [rbp - 0x280]
0x0000907a      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009081      450fb6c6       movzx r8d, r14b
0x00009085      4889df         mov rdi, rbx
0x00009088      e8b3c7ffff     call sym.set_owner
0x0000908d      83f8ff         cmp eax, 0xffffffff
0x00009090      0f847cfcffff   je 0x8d12
0x00009096      85c0           test eax, eax
0x00009098      750a           jne 0x90a4
0x0000909a      81a5c0fcffff.  and dword [rbp - 0x340], 0xfffff1ff     ; [0xfffff1ff:4]=-1 ; 4294963711
0x000090a4      807b2700       cmp byte [rbx + 0x27], 0
0x000090a8      740d           je 0x90b7
0x000090aa      f68548ffffff.  test byte [rbp - 0xb8], 0x80
0x000090b1      0f84270a0000   je 0x9ade
0x000090b7      48b8ff000000.  movabs rax, 0xff0000000000ff            ; 71776119061217535
0x000090c1      48854318       test qword [rbx + 0x18], rax
0x000090c5      0f85d2020000   jne 0x939d
0x000090cb      807b2b00       cmp byte [rbx + 0x2b], 0
0x000090cf      0f858d0a0000   jne 0x9b62
0x000090d5      4589f4         mov r12d, r14d                          ; ../coreutils-8.31/src/py.c:1027
0x000090d8      44226320       and r12b, byte [rbx + 0x20]
0x000090dc      0f85f5080000   jne 0x99d7
0x000090e2      83bd88fcffff.  cmp dword [rbp - 0x378], 0              ; ../coreutils-8.31/src/py.c:-336
0x000090e9      41b801000000   mov r8d, 1
0x000090ef      0f8420fcffff   je 0x8d15
0x000090f5      448885c8fcff.  mov byte [rbp - 0x338], r8b
0x000090fc      e84fc9ffff     call sym.cached_umask
0x00009101      f7d0           not eax
0x00009103      858588fcffff   test dword [rbp - 0x378], eax
0x00009109      440fb685c8fc.  movzx r8d, byte [rbp - 0x338]
0x00009111      0f84fefbffff   je 0x8d15
0x00009117      8b955cfcffff   mov edx, dword [rbp - 0x3a4]
0x0000911d      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009124      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x0000912a      e8f19cffff     call sym.fchmod_or_lchmod
0x0000912f      85c0           test eax, eax
0x00009131      440fb685c8fc.  movzx r8d, byte [rbp - 0x338]
0x00009139      0f84d6fbffff   je 0x8d15
0x0000913f      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009146      bf04000000     mov edi, 4
0x0000914b      e860590000     call sym.quotearg_style
0x00009150      488d352cbe00.  lea rsi, str.preserving_permissions_for__s ; 0x14f83 ; "preserving permissions for %s"
0x00009157      ba05000000     mov edx, 5                              ; ../coreutils-8.31/src/py.c:-687
0x0000915c      31ff           xor edi, edi
0x0000915e      4989c4         mov r12, rax
0x00009161      e87a97ffff     call sym.imp.dcgettext
0x00009166      488985c8fcff.  mov qword [rbp - 0x338], rax
0x0000916d      e8fe95ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/src/py.c:-1220
0x00009172      488b95c8fcff.  mov rdx, qword [rbp - 0x338]
0x00009179      8b30           mov esi, dword [rax]
0x0000917b      4c89e1         mov rcx, r12
0x0000917e      31ff           xor edi, edi
0x00009180      31c0           xor eax, eax
0x00009182      e8299bffff     call sym.imp.error
0x00009187      440fb64324     movzx r8d, byte [rbx + 0x24]
0x0000918c      4183f001       xor r8d, 1
0x00009190      e980fbffff     jmp 0x8d15
0x00009195      83bdd8fcffff.  cmp dword [rbp - 0x328], 0
0x0000919c      0f894c020000   jns 0x93ee
0x000091a2      440fb64b16     movzx r9d, byte [rbx + 0x16]
0x000091a7      4584c9         test r9b, r9b
0x000091aa      0f8510fcffff   jne 0x8dc0
0x000091b0      458b0424       mov r8d, dword [r12]
0x000091b4      4183f802       cmp r8d, 2
0x000091b8      0f8519fdffff   jne 0x8ed7
0x000091be      807b1800       cmp byte [rbx + 0x18], 0
0x000091c2      0f850ffdffff   jne 0x8ed7
0x000091c8      c78588fcffff.  mov dword [rbp - 0x378], 0
0x000091d2      e995fcffff     jmp 0x8e6c
0x000091d7      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]            ; ../coreutils-8.31/src/py.c:-388
0x000091de      488d9510feff.  lea rdx, [rbp - 0x1f0]
0x000091e5      bf01000000     mov edi, 1
0x000091ea      e82197ffff     call sym.imp.__lxstat
0x000091ef      85c0           test eax, eax
0x000091f1      0f8473f6ffff   je 0x886a
0x000091f7      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000091fe      e962d1ffff     jmp 0x6365
0x00009203      8b95a0fdffff   mov edx, dword [rbp - 0x260]
0x00009209      8bb59cfdffff   mov esi, dword [rbp - 0x264]
0x0000920f      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00009216      448885d8fcff.  mov byte [rbp - 0x328], r8b
0x0000921d      e8de99ffff     call sym.imp.lchown
0x00009222      85c0           test eax, eax
0x00009224      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x0000922c      0f84cdcdffff   je 0x5fff                               ; ../coreutils-8.31/src/py.c:-385
0x00009232      4889df         mov rdi, rbx
0x00009235      e8d6c5ffff     call sym.chown_failure_ok
0x0000923a      84c0           test al, al
0x0000923c      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00009244      0f84fa070000   je 0x9a44
0x0000924a      8885e0fcffff   mov byte [rbp - 0x320], al
0x00009250      e9aacdffff     jmp 0x5fff
0x00009255      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000925c      488d9530ffff.  lea rdx, [rbp - 0xd0]
0x00009263      bf01000000     mov edi, 1
0x00009268      448985b8fcff.  mov dword [rbp - 0x348], r8d
0x0000926f      e89c96ffff     call sym.imp.__lxstat
0x00009274      85c0           test eax, eax
0x00009276      448b85b8fcff.  mov r8d, dword [rbp - 0x348]
0x0000927d      7543           jne 0x92c2
0x0000927f      8b8548ffffff   mov eax, dword [rbp - 0xb8]
0x00009285      2500f00000     and eax, 0xf000
0x0000928a      3d00a00000     cmp eax, 0xa000
0x0000928f      7531           jne 0x92c2
0x00009291      440fb64330     movzx r8d, byte [rbx + 0x30]
0x00009296      4584c0         test r8b, r8b                           ; ../coreutils-8.31/src/py.c:-441
0x00009299      0f84e8070000   je 0x9a87
0x0000929f      8b95d0fcffff   mov edx, dword [rbp - 0x330]
0x000092a5      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000092ac      be41000000     mov esi, 0x41                           ; 'A'
0x000092b1      31c0           xor eax, eax
0x000092b3      e808240000     call sym.open_safer
0x000092b8      458b0424       mov r8d, dword [r12]
0x000092bc      8985d8fcffff   mov dword [rbp - 0x328], eax
0x000092c2      8b85d8fcffff   mov eax, dword [rbp - 0x328]
0x000092c8      c1e81f         shr eax, 0x1f
0x000092cb      4183f815       cmp r8d, 0x15
0x000092cf      0f94c2         sete dl
0x000092d2      20c2           and dl, al
0x000092d4      4189d1         mov r9d, edx
0x000092d7      0f84f9000000   je 0x93d6
0x000092dd      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000092e4      41b815000000   mov r8d, 0x15
0x000092ea      803e00         cmp byte [rsi], 0
0x000092ed      4889f7         mov rdi, rsi
0x000092f0      0f84e1fbffff   je 0x8ed7
0x000092f6      31c0           xor eax, eax
0x000092f8      4883c9ff       or rcx, 0xffffffffffffffff
0x000092fc      4531c0         xor r8d, r8d
0x000092ff      f2ae           repne scasb al, byte [rdi]
0x00009301      4889c8         mov rax, rcx
0x00009304      48f7d0         not rax
0x00009307      807c06fe2f     cmp byte [rsi + rax - 2], 0x2f
0x0000930c      410f95c0       setne r8b
0x00009310      4183c014       add r8d, 0x14
0x00009314      e9befbffff     jmp 0x8ed7
0x00009319      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x0000931f      2500f00000     and eax, 0xf000
0x00009324      3d00a00000     cmp eax, 0xa000
0x00009329      0f850bf4ffff   jne 0x873a
0x0000932f      4883c9ff       or rcx, 0xffffffffffffffff
0x00009333      4489f0         mov eax, r14d
0x00009336      4c89e7         mov rdi, r12
0x00009339      f2ae           repne scasb al, byte [rdi]
0x0000933b      488bb540feff.  mov rsi, qword [rbp - 0x1c0]
0x00009342      48f7d1         not rcx
0x00009345      488d41ff       lea rax, [rcx - 1]
0x00009349      4839c6         cmp rsi, rax
0x0000934c      0f85e8f3ffff   jne 0x873a
0x00009352      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00009359      e822130000     call sym.areadlink_with_size
0x0000935e      4885c0         test rax, rax
0x00009361      0f84d3f3ffff   je 0x873a
0x00009367      4889c7         mov rdi, rax
0x0000936a      4c89e6         mov rsi, r12
0x0000936d      488985d8fcff.  mov qword [rbp - 0x328], rax
0x00009374      e87797ffff     call sym.imp.strcmp
0x00009379      488b95d8fcff.  mov rdx, qword [rbp - 0x328]
0x00009380      85c0           test eax, eax
0x00009382      4889d7         mov rdi, rdx
0x00009385      0f85f7070000   jne 0x9b82
0x0000938b      e8809affff     call sym..plt.got
0x00009390      4c89e7         mov rdi, r12
0x00009393      e8789affff     call sym..plt.got                       ; stat.h:-1641
0x00009398      e9d3fbffff     jmp 0x8f70
0x0000939d      448b85c0fcff.  mov r8d, dword [rbp - 0x340]
0x000093a4      8b8dd8fcffff   mov ecx, dword [rbp - 0x328]
0x000093aa      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x000093b1      8bb5e0fcffff   mov esi, dword [rbp - 0x320]            ; stat.h:-1639
0x000093b7      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x000093be      e8dd110000     call sym.copy_acl
0x000093c3      85c0           test eax, eax
0x000093c5      41b801000000   mov r8d, 1
0x000093cb      0f8444f9ffff   je 0x8d15
0x000093d1      e9b1fdffff     jmp 0x9187
0x000093d6      83bdd8fcffff.  cmp dword [rbp - 0x328], 0
0x000093dd      41be01000000   mov r14d, 1
0x000093e3      0f893df5ffff   jns 0x8926
0x000093e9      e9e3faffff     jmp 0x8ed1
0x000093ee      0fb67325       movzx esi, byte [rbx + 0x25]
0x000093f2      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000093f9      31d2           xor edx, edx
0x000093fb      4889d9         mov rcx, rbx
0x000093fe      e8edc2ffff     call sym.set_file_security_ctx
0x00009403      84c0           test al, al
0x00009405      4189c0         mov r8d, eax
0x00009408      0f850ef5ffff   jne 0x891c
0x0000940e      807b2600       cmp byte [rbx + 0x26], 0
0x00009412      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x0000941d      0f85f2f8ffff   jne 0x8d15
0x00009423      e9f4f4ffff     jmp 0x891c
0x00009428      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x0000942e      4889ce         mov rsi, rcx
0x00009431      e80ab9ffff     call sym.write_zeros
0x00009436      84c0           test al, al
0x00009438      0f8415050000   je 0x9953
0x0000943e      4531c0         xor r8d, r8d
0x00009441      e967f7ffff     jmp 0x8bad
0x00009446      488b85c8fdff.  mov rax, qword [rbp - sym..interp]
0x0000944d      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009454      488d9560fdff.  lea rdx, [rbp - 0x2a0]
0x0000945b      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x00009461      48898560fdff.  mov qword [rbp - 0x2a0], rax
0x00009468      488b85d0fdff.  mov rax, qword [rbp - 0x230]
0x0000946f      48898568fdff.  mov qword [rbp - sym..gnu.hash], rax
0x00009476      488b85d8fdff.  mov rax, qword [rbp - 0x228]
0x0000947d      48898570fdff.  mov qword [rbp - 0x290], rax
0x00009484      488b85e0fdff.  mov rax, qword [rbp - 0x220]
0x0000948b      48898578fdff.  mov qword [rbp - 0x288], rax
0x00009492      e8596e0000     call sym.fdutimens                      ; /src:-450
0x00009497      85c0           test eax, eax
0x00009499      0f84a5fbffff   je 0x9044
0x0000949f      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000094a6      bf04000000     mov edi, 4                              ; /src:-449
0x000094ab      e800560000     call sym.quotearg_style
0x000094b0      488d35b4ba00.  lea rsi, str.preserving_times_for__s    ; 0x14f6b ; "preserving times for %s"
0x000094b7      31ff           xor edi, edi
0x000094b9      ba05000000     mov edx, 5
0x000094be      4989c4         mov r12, rax
0x000094c1      e81a94ffff     call sym.imp.dcgettext
0x000094c6      488985c8fcff.  mov qword [rbp - 0x338], rax
0x000094cd      e89e92ffff     call sym.imp.__errno_location
0x000094d2      488b95c8fcff.  mov rdx, qword [rbp - 0x338]
0x000094d9      8b30           mov esi, dword [rax]
0x000094db      31ff           xor edi, edi
0x000094dd      31c0           xor eax, eax
0x000094df      4c89e1         mov rcx, r12
0x000094e2      e8c997ffff     call sym.imp.error
0x000094e7      807b2400       cmp byte [rbx + 0x24], 0
0x000094eb      0f8453fbffff   je 0x9044
0x000094f1      e91cf8ffff     jmp 0x8d12
0x000094f6      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000094fd      bf04000000     mov edi, 4
0x00009502      e8a9550000     call sym.quotearg_style
0x00009507      488d35efb900.  lea rsi, str.cannot_fstat__s            ; 0x14efd ; "cannot fstat %s"
0x0000950e      ba05000000     mov edx, 5
0x00009513      31ff           xor edi, edi
0x00009515      4989c4         mov r12, rax
0x00009518      e8c393ffff     call sym.imp.dcgettext
0x0000951d      488985d0fcff.  mov qword [rbp - 0x330], rax
0x00009524      e84792ffff     call sym.imp.__errno_location
0x00009529      488b95d0fcff.  mov rdx, qword [rbp - 0x330]
0x00009530      8b30           mov esi, dword [rax]
0x00009532      4c89e1         mov rcx, r12
0x00009535      31ff           xor edi, edi
0x00009537      31c0           xor eax, eax
0x00009539      e87297ffff     call sym.imp.error
0x0000953e      4531c0         xor r8d, r8d
0x00009541      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x0000954c      e9c4f7ffff     jmp 0x8d15
0x00009551      48898d90fcff.  mov qword [rbp - 0x370], rcx
0x00009558      e953f5ffff     jmp 0x8ab0
0x0000955d      4531c9         xor r9d, r9d
0x00009560      837b0c03       cmp dword [rbx + 0xc], 3
0x00009564      488d8510fdff.  lea rax, [rbp - 0x2f0]
0x0000956b      48c78568fcff.  mov qword [rbp - 0x398], 0
0x00009576      488985b8fcff.  mov qword [rbp - 0x348], rax
0x0000957d      410f94c1       sete r9b
0x00009581      488d8508fdff.  lea rax, [rbp - 0x2f8]
0x00009588      4883ec08       sub rsp, 8
0x0000958c      4c8b8568fcff.  mov r8, qword [rbp - 0x398]
0x00009593      488b8d90fcff.  mov rcx, qword [rbp - 0x370]
0x0000959a      488b9550fcff.  mov rdx, qword [rbp - 0x3b0]
0x000095a1      8bb5d8fcffff   mov esi, dword [rbp - 0x328]            ; /src:-497
0x000095a7      8bbde0fcffff   mov edi, dword [rbp - 0x320]
0x000095ad      50             push rax
0x000095ae      ffb5b8fcffff   push qword [rbp - 0x348]
0x000095b4      6aff           push 0xffffffffffffffff                 ; /src:-473
0x000095b6      ffb5f8fcffff   push qword [rbp - 0x308]
0x000095bc      ffb5f0fcffff   push qword [rbp - 0x310]
0x000095c2      e849bcffff     call sym.sparse_copy
0x000095c7      4883c430       add rsp, 0x30
0x000095cb      84c0           test al, al
0x000095cd      0f843ff7ffff   je 0x8d12
0x000095d3      80bd08fdffff.  cmp byte [rbp - 0x2f8], 0
0x000095da      0f845afaffff   je 0x903a
0x000095e0      488bb510fdff.  mov rsi, qword [rbp - 0x2f0]
0x000095e7      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x000095ed      e8be93ffff     call sym.imp.ftruncate
0x000095f2      85c0           test eax, eax                           ; stdio.h:-1207
0x000095f4      0f8940faffff   jns 0x903a
0x000095fa      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009601      bf04000000     mov edi, 4
0x00009606      e8a5540000     call sym.quotearg_style
0x0000960b      488d3545b900.  lea rsi, str.failed_to_extend__s        ; 0x14f57 ; "failed to extend %s"
0x00009612      4989c4         mov r12, rax
0x00009615      ba05000000     mov edx, 5
0x0000961a      31ff           xor edi, edi
0x0000961c      e8bf92ffff     call sym.imp.dcgettext
0x00009621      488985c8fcff.  mov qword [rbp - 0x338], rax
0x00009628      e84391ffff     call sym.imp.__errno_location
0x0000962d      488b95c8fcff.  mov rdx, qword [rbp - 0x338]
0x00009634      8b30           mov esi, dword [rax]
0x00009636      4c89e1         mov rcx, r12
0x00009639      31ff           xor edi, edi
0x0000963b      31c0           xor eax, eax
0x0000963d      e86e96ffff     call sym.imp.error
0x00009642      e9cbf6ffff     jmp 0x8d12
0x00009647      c68531fdffff.  mov byte [rbp - 0x2cf], 1
0x0000964e      488bbd38fdff.  mov rdi, qword [rbp - 0x2c8]
0x00009655      e8b697ffff     call sym..plt.got
0x0000965a      80bd31fdffff.  cmp byte [rbp - 0x2cf], 0               ; /src:-438
0x00009661      48c78538fdff.  mov qword [rbp - 0x2c8], 0              ; stdio.h:-1207
0x0000966c      48c78528fdff.  mov qword [rbp - 0x2d8], 0
0x00009677      0f84e6f4ffff   je 0x8b63
0x0000967d      488b9d78fcff.  mov rbx, qword [rbp - 0x388]
0x00009684      448bada0fcff.  mov r13d, dword [rbp - 0x360]
0x0000968b      488b8d60fcff.  mov rcx, qword [rbp - 0x3a0]
0x00009692      48398d80fcff.  cmp qword [rbp - 0x380], rcx
0x00009699      410f9fc4       setg r12b
0x0000969d      7f0d           jg 0x96ac
0x0000969f      80bdc8fcffff.  cmp byte [rbp - 0x338], 0
0x000096a6      0f848ef9ffff   je 0x903a
0x000096ac      83bd70fcffff.  cmp dword [rbp - 0x390], 1
0x000096b3      488bb580fcff.  mov rsi, qword [rbp - 0x380]
0x000096ba      7472           je 0x972e
0x000096bc      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x000096c2      e8e992ffff     call sym.imp.ftruncate
0x000096c7      85c0           test eax, eax
0x000096c9      0f852bffffff   jne 0x95fa
0x000096cf      83bd70fcffff.  cmp dword [rbp - 0x390], 3
0x000096d6      0f855ef9ffff   jne 0x903a
0x000096dc      4584e4         test r12b, r12b
0x000096df      0f8455f9ffff   je 0x903a
0x000096e5      488b9580fcff.  mov rdx, qword [rbp - 0x380]
0x000096ec      488bb560fcff.  mov rsi, qword [rbp - 0x3a0]
0x000096f3      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x000096f9      4829f2         sub rdx, rsi
0x000096fc      e8efb6ffff     call sym.punch_hole
0x00009701      85c0           test eax, eax
0x00009703      0f8931f9ffff   jns 0x903a
0x00009709      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009710      bf04000000     mov edi, 4
0x00009715      e896530000     call sym.quotearg_style
0x0000971a      ba05000000     mov edx, 5
0x0000971f      4989c4         mov r12, rax
0x00009722      488d3586b600.  lea rsi, str.error_deallocating__s      ; 0x14daf ; "error deallocating %s"
0x00009729      e9ecfeffff     jmp 0x961a
0x0000972e      482bb560fcff.  sub rsi, qword [rbp - 0x3a0]
0x00009735      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x0000973b      e800b6ffff     call sym.write_zeros
0x00009740      84c0           test al, al
0x00009742      0f85f2f8ffff   jne 0x903a
0x00009748      e9adfeffff     jmp 0x95fa
0x0000974d      488b85d0feff.  mov rax, qword [rbp - 0x130]
0x00009754      48398590fcff.  cmp qword [rbp - 0x370], rax
0x0000975b      0f8622f3ffff   jbe 0x8a83
0x00009761      4883c001       add rax, 1
0x00009765      48898590fcff.  mov qword [rbp - 0x370], rax
0x0000976c      e912f3ffff     jmp 0x8a83
0x00009771      80bd31fdffff.  cmp byte [rbp - 0x2cf], 0
0x00009778      488b9d78fcff.  mov rbx, qword [rbp - 0x388]
0x0000977f      448bada0fcff.  mov r13d, dword [rbp - 0x360]
0x00009786      0f85fffeffff   jne 0x968b
0x0000978c      80bd30fdffff.  cmp byte [rbp - 0x2d0], 0
0x00009793      0f8417020000   je 0x99b0
0x00009799      4531c9         xor r9d, r9d
0x0000979c      837b0c03       cmp dword [rbx + 0xc], 3
0x000097a0      b800000000     mov eax, 0
0x000097a5      410f94c1       sete r9b
0x000097a9      80bd5bfcffff.  cmp byte [rbp - 0x3a5], 0
0x000097b0      480f458568fc.  cmovne rax, qword [rbp - 0x398]
0x000097b8      48898568fcff.  mov qword [rbp - 0x398], rax
0x000097bf      e9bdfdffff     jmp 0x9581
0x000097c4      8b95e0fcffff   mov edx, dword [rbp - 0x320]
0x000097ca      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x000097d0      31c0           xor eax, eax
0x000097d2      be09940440     mov esi, 0x40049409
0x000097d7      e83492ffff     call sym.imp.ioctl
0x000097dc      85c0           test eax, eax
0x000097de      0f844bf8ffff   je 0x902f
0x000097e4      837b3802       cmp dword [rbx + 0x38], 2
0x000097e8      0f857ef1ffff   jne 0x896c
0x000097ee      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x000097f5      be04000000     mov esi, 4
0x000097fa      bf01000000     mov edi, 1
0x000097ff      e88c510000     call sym.quotearg_n_style
0x00009804      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x0000980b      be04000000     mov esi, 4                              ; /src:-687
0x00009810      31ff           xor edi, edi
0x00009812      4989c4         mov r12, rax
0x00009815      e876510000     call sym.quotearg_n_style
0x0000981a      488d350ab700.  lea rsi, str.failed_to_clone__s_from__s ; 0x14f2b ; "failed to clone %s from %s"
0x00009821      ba05000000     mov edx, 5
0x00009826      31ff           xor edi, edi
0x00009828      488985c8fcff.  mov qword [rbp - 0x338], rax
0x0000982f      e8ac90ffff     call sym.imp.dcgettext
0x00009834      488985d0fcff.  mov qword [rbp - 0x330], rax
0x0000983b      e8308fffff     call sym.imp.__errno_location
0x00009840      488b8dc8fcff.  mov rcx, qword [rbp - 0x338]
0x00009847      8b30           mov esi, dword [rax]                    ; /src:-344
0x00009849      4d89e0         mov r8, r12
0x0000984c      488b95d0fcff.  mov rdx, qword [rbp - 0x330]
0x00009853      31ff           xor edi, edi
0x00009855      31c0           xor eax, eax
0x00009857      e85494ffff     call sym.imp.error
0x0000985c      4531c0         xor r8d, r8d
0x0000985f      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x0000986a      e9a6f4ffff     jmp 0x8d15
0x0000986f      8b430c         mov eax, dword [rbx + 0xc]
0x00009872      83f803         cmp eax, 3
0x00009875      0f8483000000   je 0x98fe
0x0000987b      83f802         cmp eax, 2
0x0000987e      0f8590f1ffff   jne 0x8a14
0x00009884      f685b8fcffff.  test byte [rbp - 0x348], 1
0x0000988b      0f8483f1ffff   je 0x8a14
0x00009891      488b8590fcff.  mov rax, qword [rbp - 0x370]
0x00009898      498d3c04       lea rdi, [r12 + rax]
0x0000989c      e87f770000     call sym.xmalloc
0x000098a1      4a8d4c20ff     lea rcx, [rax + r12 - 1]
0x000098a6      488985d0fcff.  mov qword [rbp - 0x330], rax
0x000098ad      31d2           xor edx, edx
0x000098af      4889c8         mov rax, rcx
0x000098b2      49f7f4         div r12
0x000098b5      4829d1         sub rcx, rdx
0x000098b8      48898d50fcff.  mov qword [rbp - 0x3b0], rcx
0x000098bf      8b430c         mov eax, dword [rbx + 0xc]
0x000098c2      898570fcffff   mov dword [rbp - 0x390], eax
0x000098c8      0fb685c8fcff.  movzx eax, byte [rbp - 0x338]
0x000098cf      88855bfcffff   mov byte [rbp - 0x3a5], al
0x000098d5      e922f2ffff     jmp 0x8afc                              ; /src:1265
0x000098da      488b85d0feff.  mov rax, qword [rbp - 0x130]
0x000098e1      4899           cqo
0x000098e3      49f7f8         idiv r8
0x000098e6      483985e0feff.  cmp qword [rbp - 0x120], rax
0x000098ed      0f9cc0         setl al
0x000098f0      0fb6c0         movzx eax, al
0x000098f3      8985b8fcffff   mov dword [rbp - 0x348], eax
0x000098f9      e900f1ffff     jmp 0x89fe
0x000098fe      488b8590fcff.  mov rax, qword [rbp - 0x370]
0x00009905      498d3c04       lea rdi, [r12 + rax]
0x00009909      e812770000     call sym.xmalloc
0x0000990e      4a8d4c20ff     lea rcx, [rax + r12 - 1]
0x00009913      31d2           xor edx, edx
0x00009915      488985d0fcff.  mov qword [rbp - 0x330], rax
0x0000991c      4889c8         mov rax, rcx
0x0000991f      49f7f4         div r12
0x00009922      4829d1         sub rcx, rdx
0x00009925      83bdb8fcffff.  cmp dword [rbp - 0x348], 0
0x0000992c      48898d50fcff.  mov qword [rbp - 0x3b0], rcx
0x00009933      758a           jne 0x98bf
0x00009935      4531c9         xor r9d, r9d
0x00009938      837b0c03       cmp dword [rbx + 0xc], 3
0x0000993c      488d8510fdff.  lea rax, [rbp - 0x2f0]
0x00009943      488985b8fcff.  mov qword [rbp - 0x348], rax
0x0000994a      410f94c1       sete r9b
0x0000994e      e92efcffff     jmp 0x9581
0x00009953      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x0000995a      be03000000     mov esi, 3
0x0000995f      31ff           xor edi, edi
0x00009961      488b9d78fcff.  mov rbx, qword [rbp - 0x388]
0x00009968      448bada0fcff.  mov r13d, dword [rbp - 0x360]
0x0000996f      e83c520000     call sym.quotearg_n_style_colon
0x00009974      488d35cbb500.  lea rsi, str.s:_write_failed            ; 0x14f46 ; "%s: write failed"
0x0000997b      4989c4         mov r12, rax
0x0000997e      ba05000000     mov edx, 5
0x00009983      31ff           xor edi, edi
0x00009985      e8568fffff     call sym.imp.dcgettext
0x0000998a      488985c8fcff.  mov qword [rbp - 0x338], rax
0x00009991      e8da8dffff     call sym.imp.__errno_location
0x00009996      488b95c8fcff.  mov rdx, qword [rbp - 0x338]
0x0000999d      8b30           mov esi, dword [rax]
0x0000999f      4c89e1         mov rcx, r12
0x000099a2      31ff           xor edi, edi
0x000099a4      31c0           xor eax, eax
0x000099a6      e80593ffff     call sym.imp.error
0x000099ab      e956f3ffff     jmp 0x8d06
0x000099b0      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x000099b7      be03000000     mov esi, 3
0x000099bc      31ff           xor edi, edi
0x000099be      e8ed510000     call sym.quotearg_n_style_colon         ; /src:1244
0x000099c3      ba05000000     mov edx, 5
0x000099c8      4989c4         mov r12, rax
0x000099cb      488d3506b200.  lea rsi, str.s:_failed_to_get_extents_info ; 0x14bd8 ; "%s: failed to get extents info"
0x000099d2      e943fcffff     jmp 0x961a
0x000099d7      e874c0ffff     call sym.cached_umask
0x000099dc      8bb5d8fcffff   mov esi, dword [rbp - 0x328]
0x000099e2      f7d0           not eax
0x000099e4      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000099eb      89c2           mov edx, eax
0x000099ed      4589e6         mov r14d, r12d
0x000099f0      81e2b6010000   and edx, 0x1b6
0x000099f6      e8350c0000     call sym.set_acl
0x000099fb      85c0           test eax, eax
0x000099fd      410f94c0       sete r8b
0x00009a01      e90ff3ffff     jmp 0x8d15
0x00009a06      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009a0d      bf04000000     mov edi, 4
0x00009a12      e899500000     call sym.quotearg_style
0x00009a17      488d354bb400.  lea rsi, str.cannot_remove__s           ; 0x14e69 ; "cannot remove %s"
0x00009a1e      ba05000000     mov edx, 5
0x00009a23      31ff           xor edi, edi
0x00009a25      488985d8fcff.  mov qword [rbp - 0x328], rax
0x00009a2c      e8af8effff     call sym.imp.dcgettext
0x00009a31      488b8dd8fcff.  mov rcx, qword [rbp - 0x328]
0x00009a38      4889c2         mov rdx, rax
0x00009a3b      418b3424       mov esi, dword [r12]
0x00009a3f      e97de1ffff     jmp 0x7bc1
0x00009a44      488d35ad9600.  lea rsi, str.failed_to_preserve_ownership_for__s ; 0x130f8 ; "failed to preserve ownership for %s"
0x00009a4b      31ff           xor edi, edi
0x00009a4d      ba05000000     mov edx, 5
0x00009a52      e8898effff     call sym.imp.dcgettext
0x00009a57      4989c4         mov r12, rax
0x00009a5a      e8118dffff     call sym.imp.__errno_location
0x00009a5f      488b8df8fcff.  mov rcx, qword [rbp - 0x308]
0x00009a66      8b30           mov esi, dword [rax]
0x00009a68      31ff           xor edi, edi
0x00009a6a      31c0           xor eax, eax
0x00009a6c      4c89e2         mov rdx, r12
0x00009a6f      e83c92ffff     call sym.imp.error
0x00009a74      440fb64324     movzx r8d, byte [rbx + 0x24]
0x00009a79      4584c0         test r8b, r8b
0x00009a7c      0f858ecfffff   jne 0x6a10
0x00009a82      e978c5ffff     jmp 0x5fff
0x00009a87      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009a8e      bf04000000     mov edi, 4
0x00009a93      448885d8fcff.  mov byte [rbp - 0x328], r8b
0x00009a9a      e811500000     call sym.quotearg_style
0x00009a9f      488d350ab100.  lea rsi, str.not_writing_through_dangling_symlink__s ; 0x14bb0 ; "not writing through dangling symlink %s"
0x00009aa6      4989c4         mov r12, rax
0x00009aa9      ba05000000     mov edx, 5
0x00009aae      31ff           xor edi, edi
0x00009ab0      e82b8effff     call sym.imp.dcgettext
0x00009ab5      4c89e1         mov rcx, r12
0x00009ab8      4889c2         mov rdx, rax
0x00009abb      31f6           xor esi, esi
0x00009abd      31ff           xor edi, edi
0x00009abf      31c0           xor eax, eax
0x00009ac1      e8ea91ffff     call sym.imp.error
0x00009ac6      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x00009ad1      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00009ad9      e9fae0ffff     jmp 0x7bd8
0x00009ade      e81d8fffff     call sym.imp.geteuid
0x00009ae3      85c0           test eax, eax
0x00009ae5      0f84ccf5ffff   je 0x90b7
0x00009aeb      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009af2      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x00009af8      ba80010000     mov edx, 0x180
0x00009afd      e81e93ffff     call sym.fchmod_or_lchmod
0x00009b02      85c0           test eax, eax
0x00009b04      0f85adf5ffff   jne 0x90b7
0x00009b0a      8b9588fcffff   mov edx, dword [rbp - 0x378]
0x00009b10      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009b17      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x00009b1d      f7d2           not edx
0x00009b1f      23955cfcffff   and edx, dword [rbp - 0x3a4]
0x00009b25      e8f692ffff     call sym.fchmod_or_lchmod
0x00009b2a      e988f5ffff     jmp 0x90b7
0x00009b2f      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00009b36      bf04000000     mov edi, 4
0x00009b3b      488b9d78fcff.  mov rbx, qword [rbp - 0x388]
0x00009b42      448bada0fcff.  mov r13d, dword [rbp - 0x360]
0x00009b49      e8624f0000     call sym.quotearg_style
0x00009b4e      ba05000000     mov edx, 5
0x00009b53      4989c4         mov r12, rax
0x00009b56      488d3542b200.  lea rsi, str.cannot_lseek__s            ; 0x14d9f ; "cannot lseek %s"
0x00009b5d      e921feffff     jmp 0x9983
0x00009b62      8b5310         mov edx, dword [rbx + 0x10]
0x00009b65      8bb5d8fcffff   mov esi, dword [rbp - 0x328]
0x00009b6b      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00009b72      e8b90a0000     call sym.set_acl
0x00009b77      85c0           test eax, eax
0x00009b79      410f94c0       sete r8b
0x00009b7d      e993f1ffff     jmp 0x8d15
0x00009b82      e88992ffff     call sym..plt.got
0x00009b87      e9aeebffff     jmp 0x873a
0x00009b8c      0f1f4000       nop dword [rax]
;-- copy:
0x00009b90      4883ec18       sub rsp, 0x18
0x00009b94      64488b042528.  mov rax, qword fs:[0x28]
0x00009b9d      4889442408     mov qword [rsp + 8], rax
0x00009ba2      31c0           xor eax, eax
0x00009ba4      4885c9         test rcx, rcx
0x00009ba7      0f8429010000   je 0x9cd6
0x00009bad      833903         cmp dword [rcx], 3
0x00009bb0      0f8701010000   ja 0x9cb7
0x00009bb6      8b410c         mov eax, dword [rcx + 0xc]
0x00009bb9      448d50ff       lea r10d, [rax - 1]
0x00009bbd      4183fa02       cmp r10d, 2
0x00009bc1      0f87d1000000   ja 0x9c98
0x00009bc7      448b5138       mov r10d, dword [rcx + 0x38]
0x00009bcb      4183fa02       cmp r10d, 2
0x00009bcf      0f87a4000000   ja 0x9c79
0x00009bd5      80791700       cmp byte [rcx + 0x17], 0
0x00009bd9      7555           jne 0x9c30
0x00009bdb      83f802         cmp eax, 2
0x00009bde      7406           je 0x9be6
0x00009be0      4183fa02       cmp r10d, 2
0x00009be4      746f           je 0x9c55
0x00009be6      c644240700     mov byte [rsp + 7], 0
0x00009beb      4151           push r9
0x00009bed      0fb6d2         movzx edx, dl
0x00009bf0      4150           push r8
0x00009bf2      4989c9         mov r9, rcx
0x00009bf5      4531c0         xor r8d, r8d
0x00009bf8      31c9           xor ecx, ecx
0x00009bfa      488935670921.  mov qword [obj.top_level_dst_name], rsi ; [0x21a568:8]=0
0x00009c01      48893d680921.  mov qword [obj.top_level_src_name], rdi ; [0x21a570:8]=0
0x00009c08      488d442417     lea rax, [rsp + 0x17]
0x00009c0d      50             push rax
0x00009c0e      6a01           push 1
0x00009c10      e86bbeffff     call sym.copy_internal
0x00009c15      4883c420       add rsp, 0x20
0x00009c19      488b742408     mov rsi, qword [rsp + 8]
0x00009c1e      644833342528.  xor rsi, qword fs:[0x28]
0x00009c27      754b           jne 0x9c74
0x00009c29      4883c418       add rsp, 0x18
0x00009c2d      c3             ret
0x00009c2e      6690           nop
0x00009c30      80792c00       cmp byte [rcx + 0x2c], 0
0x00009c34      74a5           je 0x9bdb
0x00009c36      488d0d33b400.  lea rcx, obj.__PRETTY_FUNCTION__.7875   ; 0x15070 ; "valid_options"
0x00009c3d      488d3503b400.  lea rsi, str..._coreutils_8.31_src_copy.c ; 0x15047 ; "../coreutils-8.31/src/copy.c"
0x00009c44      488d3dadb000.  lea rdi, str.co__hard_link____co__symbolic_link ; 0x14cf8 ; "!(co->hard_link && co->symbolic_link)"
0x00009c4b      ba8a0b0000     mov edx, 0xb8a
0x00009c50      e88b8dffff     call sym.imp.__assert_fail
0x00009c55      488d0d14b400.  lea rcx, obj.__PRETTY_FUNCTION__.7875   ; 0x15070 ; "valid_options"
0x00009c5c      488d35e4b300.  lea rsi, str..._coreutils_8.31_src_copy.c ; 0x15047 ; "../coreutils-8.31/src/copy.c"
0x00009c63      488d3db6b000.  lea rdi, str.co__reflink_mode____REFLINK_ALWAYS____co__sparse_mode____SPARSE_AUTO ; 0x14d20 ; "! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)"
0x00009c6a      ba8d0b0000     mov edx, 0xb8d
0x00009c6f      e86c8dffff     call sym.imp.__assert_fail
0x00009c74      e8b78cffff     call sym.imp.__stack_chk_fail
0x00009c79      488d0df0b300.  lea rcx, obj.__PRETTY_FUNCTION__.7875   ; 0x15070 ; "valid_options"
0x00009c80      488d35c0b300.  lea rsi, str..._coreutils_8.31_src_copy.c ; 0x15047 ; "../coreutils-8.31/src/copy.c"
0x00009c87      488d3d42b000.  lea rdi, str.VALID_REFLINK_MODE__co__reflink_mode ; 0x14cd0 ; "VALID_REFLINK_MODE (co->reflink_mode)"
0x00009c8e      ba890b0000     mov edx, 0xb89
0x00009c93      e8488dffff     call sym.imp.__assert_fail
0x00009c98      488d0dd1b300.  lea rcx, obj.__PRETTY_FUNCTION__.7875   ; 0x15070 ; "valid_options"
0x00009c9f      488d35a1b300.  lea rsi, str..._coreutils_8.31_src_copy.c ; 0x15047 ; "../coreutils-8.31/src/copy.c"
0x00009ca6      488d3dfbaf00.  lea rdi, str.VALID_SPARSE_MODE__co__sparse_mode ; 0x14ca8 ; "VALID_SPARSE_MODE (co->sparse_mode)"
0x00009cad      ba880b0000     mov edx, 0xb88
0x00009cb2      e8298dffff     call sym.imp.__assert_fail
0x00009cb7      488d0db2b300.  lea rcx, obj.__PRETTY_FUNCTION__.7875   ; 0x15070 ; "valid_options"
0x00009cbe      488d3582b300.  lea rsi, str..._coreutils_8.31_src_copy.c ; 0x15047 ; "../coreutils-8.31/src/copy.c"
0x00009cc5      488d3db4af00.  lea rdi, str.VALID_BACKUP_TYPE__co__backup_type ; 0x14c80 ; "VALID_BACKUP_TYPE (co->backup_type)"
0x00009ccc      ba870b0000     mov edx, 0xb87
0x00009cd1      e80a8dffff     call sym.imp.__assert_fail
0x00009cd6      488d0d93b300.  lea rcx, obj.__PRETTY_FUNCTION__.7875   ; 0x15070 ; "valid_options"
0x00009cdd      488d3563b300.  lea rsi, str..._coreutils_8.31_src_copy.c ; 0x15047 ; "../coreutils-8.31/src/copy.c"
0x00009ce4      488d3d79b300.  lea rdi, str.co____NULL                 ; 0x15064 ; "co != NULL"
0x00009ceb      ba860b0000     mov edx, 0xb86
0x00009cf0      e8eb8cffff     call sym.imp.__assert_fail
0x00009cf5      662e0f1f8400.  nop word cs:[rax + rax]
0x00009cff      90             nop
;-- src_to_dest_hash:
0x00009d00      488b07         mov rax, qword [rdi]                    ; /src:52
0x00009d03      31d2           xor edx, edx
0x00009d05      48f7f6         div rsi
0x00009d08      4889d0         mov rax, rdx                            ; /src:59
0x00009d0b      c3             ret
0x00009d0c      0f1f4000       nop dword [rax]
;-- src_to_dest_compare:
0x00009d10      31c0           xor eax, eax                            ; /src:65
0x00009d12      488b16         mov rdx, qword [rsi]                    ; /src:68
0x00009d15      483917         cmp qword [rdi], rdx
0x00009d18      7406           je 0x9d20
0x00009d1a      f3c3           ret                                     ; /src:69
0x00009d1c      0f1f4000       nop dword [rax]
0x00009d20      488b4608       mov rax, qword [rsi + 8]                ; /src:68
0x00009d24      48394708       cmp qword [rdi + 8], rax
0x00009d28      0f94c0         sete al
0x00009d2b      c3             ret                                     ; /src:69
0x00009d2c      0f1f4000       nop dword [rax]
;-- src_to_dest_free:
0x00009d30      53             push rbx                                ; /src:73
0x00009d31      4889fb         mov rbx, rdi
0x00009d34      488b7f10       mov rdi, qword [rdi + 0x10]             ; /src:75
0x00009d38      e8d390ffff     call sym..plt.got
0x00009d3d      4889df         mov rdi, rbx                            ; /src:76
0x00009d40      5b             pop rbx                                 ; /src:77
0x00009d41      e9ca90ffff     jmp sym..plt.got                        ; /src:76
0x00009d46      662e0f1f8400.  nop word cs:[rax + rax]
;-- forget_created:
0x00009d50      53             push rbx                                ; /src:83
0x00009d51      4883ec20       sub rsp, 0x20
0x00009d55      48893c24       mov qword [rsp], rdi                    ; /src:87
0x00009d59      488b3d180821.  mov rdi, qword [obj.src_to_dest]        ; /src:91 ; [0x21a578:8]=0
0x00009d60      4889742408     mov qword [rsp + 8], rsi                ; /src:88
0x00009d65      4889e6         mov rsi, rsp                            ; /src:91
0x00009d68      48c744241000.  mov qword [rsp + 0x10], 0               ; /src:89
0x00009d71      64488b042528.  mov rax, qword fs:[0x28]                ; /src:83
0x00009d7a      4889442418     mov qword [rsp + 0x18], rax
0x00009d7f      31c0           xor eax, eax
0x00009d81      e8aa2e0000     call sym.hash_delete                    ; /src:91
0x00009d86      4885c0         test rax, rax                           ; /src:92
0x00009d89      7414           je 0x9d9f
0x00009d8b      488b7810       mov rdi, qword [rax + 0x10]             ; /src:75
0x00009d8f      4889c3         mov rbx, rax
0x00009d92      e87990ffff     call sym..plt.got
0x00009d97      4889df         mov rdi, rbx                            ; /src:76
0x00009d9a      e87190ffff     call sym..plt.got
0x00009d9f      488b442418     mov rax, qword [rsp + 0x18]             ; /src:94
0x00009da4      644833042528.  xor rax, qword fs:[0x28]
0x00009dad      7506           jne 0x9db5
0x00009daf      4883c420       add rsp, 0x20
0x00009db3      5b             pop rbx
0x00009db4      c3             ret
0x00009db5      e8768bffff     call sym.imp.__stack_chk_fail
0x00009dba      660f1f440000   nop word [rax + rax]
;-- src_to_dest_lookup:
0x00009dc0      4883ec28       sub rsp, 0x28                           ; /src:101
0x00009dc4      48893c24       mov qword [rsp], rdi                    ; /src:104
0x00009dc8      488b3da90721.  mov rdi, qword [obj.src_to_dest]        ; /src:106 ; [0x21a578:8]=0
0x00009dcf      4889742408     mov qword [rsp + 8], rsi                ; /src:105
0x00009dd4      4889e6         mov rsi, rsp                            ; /src:106
0x00009dd7      64488b042528.  mov rax, qword fs:[0x28]                ; /src:101
0x00009de0      4889442418     mov qword [rsp + 0x18], rax
0x00009de5      31c0           xor eax, eax
0x00009de7      e874230000     call sym.hash_lookup                    ; /src:106
0x00009dec      4885c0         test rax, rax                           ; /src:107
0x00009def      741f           je 0x9e10
0x00009df1      488b4010       mov rax, qword [rax + 0x10]
0x00009df5      488b542418     mov rdx, qword [rsp + 0x18]             ; /src:108
0x00009dfa      644833142528.  xor rdx, qword fs:[0x28]
0x00009e03      750f           jne 0x9e14
0x00009e05      4883c428       add rsp, 0x28
0x00009e09      c3             ret
0x00009e0a      660f1f440000   nop word [rax + rax]
0x00009e10      31c0           xor eax, eax                            ; /src:107
0x00009e12      ebe1           jmp 0x9df5
0x00009e14      e8178bffff     call sym.imp.__stack_chk_fail           ; /src:108
0x00009e19      0f1f80000000.  nop dword [rax]
;-- remember_copied:
0x00009e20      4155           push r13                                ; /src:116
0x00009e22      4154           push r12
0x00009e24      4989fd         mov r13, rdi
0x00009e27      55             push rbp
0x00009e28      53             push rbx
0x00009e29      bf18000000     mov edi, 0x18                           ; /src:120
0x00009e2e      4989f4         mov r12, rsi                            ; /src:116
0x00009e31      4889d5         mov rbp, rdx
0x00009e34      4883ec08       sub rsp, 8
0x00009e38      e8e3710000     call sym.xmalloc                        ; /src:120
0x00009e3d      4c89ef         mov rdi, r13                            ; /src:121
0x00009e40      4889c3         mov rbx, rax                            ; /src:120
0x00009e43      e808740000     call sym.xstrdup                        ; /src:121
0x00009e48      488b3d290721.  mov rdi, qword [obj.src_to_dest]        ; /src:125 ; [0x21a578:8]=0
0x00009e4f      4889de         mov rsi, rbx
0x00009e52      48894310       mov qword [rbx + 0x10], rax             ; /src:121
0x00009e56      4c8923         mov qword [rbx], r12                    ; /src:122
0x00009e59      48896b08       mov qword [rbx + 8], rbp                ; /src:123
0x00009e5d      e86e2d0000     call sym.hash_insert                    ; /src:125
0x00009e62      4885c0         test rax, rax                           ; /src:126
0x00009e65      742d           je 0x9e94
0x00009e67      4839c3         cmp rbx, rax                            ; /src:135
0x00009e6a      4889c5         mov rbp, rax
0x00009e6d      7421           je 0x9e90
0x00009e6f      488b7b10       mov rdi, qword [rbx + 0x10]             ; /src:75
0x00009e73      e8988fffff     call sym..plt.got
0x00009e78      4889df         mov rdi, rbx                            ; /src:76
0x00009e7b      e8908fffff     call sym..plt.got
0x00009e80      488b4510       mov rax, qword [rbp + 0x10]             ; /src:138
0x00009e84      4883c408       add rsp, 8                              ; /src:143
0x00009e88      5b             pop rbx
0x00009e89      5d             pop rbp
0x00009e8a      415c           pop r12
0x00009e8c      415d           pop r13
0x00009e8e      c3             ret
0x00009e8f      90             nop
0x00009e90      31c0           xor eax, eax                            ; /src:142
0x00009e92      ebf0           jmp 0x9e84
0x00009e94      e8d7730000     call sym.xalloc_die                     ; /src:129
0x00009e99      0f1f80000000.  nop dword [rax]
;-- hash_init:
0x00009ea0      4c8d0589feff.  lea r8, sym.src_to_dest_free            ; /src:148 ; 0x9d30 ; "SH\x89\xfbH\x8b\x7f\x10\xe8\u04d0\xff\xffH\x89\xdf[\xe9\u0290\xff\xfff.\x0f\x1f\x84"
0x00009ea7      488d0d62feff.  lea rcx, sym.src_to_dest_compare        ; 0x9d10 ; "1\xc0H\x8b\x16H9\x17t\x06\xf3\xc3\x0f\x1f@"
0x00009eae      488d154bfeff.  lea rdx, sym.src_to_dest_hash           ; 0x9d00 ; "H\x8b\a1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f@"
0x00009eb5      4883ec08       sub rsp, 8
0x00009eb9      31f6           xor esi, esi                            ; /src:149
0x00009ebb      bf67000000     mov edi, 0x67                           ; 'g'
0x00009ec0      e80b250000     call sym.hash_initialize
0x00009ec5      4885c0         test rax, rax                           ; /src:153
0x00009ec8      488905a90621.  mov qword [obj.src_to_dest], rax        ; /src:149 ; [0x21a578:8]=0
0x00009ecf      7405           je 0x9ed6                               ; /src:153
0x00009ed1      4883c408       add rsp, 8                              ; /src:155
0x00009ed5      c3             ret
0x00009ed6      e895730000     call sym.xalloc_die                     ; /src:154
0x00009edb      0f1f440000     nop dword [rax + rax]
;-- forget_all:
0x00009ee0      488b3d910621.  mov rdi, qword [obj.src_to_dest]        ; /src:162 ; [0x21a578:8]=0
0x00009ee7      e934270000     jmp sym.hash_free
0x00009eec      0f1f4000       nop dword [rax]                         ; /src:163
;-- extent_scan_init:
0x00009ef0      893e           mov dword [rsi], edi
0x00009ef2      48c746180000.  mov qword [rsi + 0x18], 0
0x00009efa      48c746280000.  mov qword [rsi + 0x28], 0
0x00009f02      48c746080000.  mov qword [rsi + 8], 0
0x00009f0a      c6462000       mov byte [rsi + 0x20], 0
0x00009f0e      c6462100       mov byte [rsi + 0x21], 0
0x00009f12      c74610010000.  mov dword [rsi + 0x10], 1
0x00009f19      c3             ret
0x00009f1a      660f1f440000   nop word [rax + rax]
;-- extent_scan_read:
0x00009f20      4157           push r15
0x00009f22      4156           push r14
0x00009f24      4531ff         xor r15d, r15d
0x00009f27      4155           push r13
0x00009f29      4154           push r12
0x00009f2b      4989fe         mov r14, rdi
0x00009f2e      55             push rbp
0x00009f2f      53             push rbx
0x00009f30      49bdffffffff.  movabs r13, 0x7fffffffffffffff          ; 9223372036854775807
0x00009f3a      4881ec181000.  sub rsp, 0x1018
0x00009f41      488b5f28       mov rbx, qword [rdi + 0x28]
0x00009f45      488b5708       mov rdx, qword [rdi + 8]
0x00009f49      4889e5         mov rbp, rsp
0x00009f4c      64488b042528.  mov rax, qword fs:[0x28]
0x00009f55      488984240810.  mov qword [rsp + 0x1008], rax
0x00009f5d      31c0           xor eax, eax
0x00009f5f      4c8d6520       lea r12, [rbp + 0x20]
0x00009f63      31c0           xor eax, eax
0x00009f65      b900020000     mov ecx, 0x200
0x00009f6a      4889ef         mov rdi, rbp
0x00009f6d      f348ab         rep stosq qword [rdi], rax
0x00009f70      418b4610       mov eax, dword [r14 + 0x10]
0x00009f74      418b3e         mov edi, dword [r14]
0x00009f77      be0b6620c0     mov esi, 0xc020660b
0x00009f7c      48891424       mov qword [rsp], rdx
0x00009f80      48f7d2         not rdx
0x00009f83      c74424184800.  mov dword [rsp + 0x18], 0x48            ; 'H'
                                                                       ; [0x48:4]=64
0x00009f8b      4889542408     mov qword [rsp + 8], rdx
0x00009f90      4889ea         mov rdx, rbp
0x00009f93      89442410       mov dword [rsp + 0x10], eax
0x00009f97      31c0           xor eax, eax
0x00009f99      e8728affff     call sym.imp.ioctl
0x00009f9e      85c0           test eax, eax
0x00009fa0      0f88ca000000   js 0xa070
0x00009fa6      8b442414       mov eax, dword [rsp + 0x14]
0x00009faa      85c0           test eax, eax
0x00009fac      0f8436020000   je 0xa1e8
0x00009fb2      498b4e18       mov rcx, qword [r14 + 0x18]
0x00009fb6      4889c2         mov rdx, rax
0x00009fb9      48f7d2         not rdx
0x00009fbc      4839d1         cmp rcx, rdx
0x00009fbf      0f8735020000   ja 0xa1fa
0x00009fc5      498b7e28       mov rdi, qword [r14 + 0x28]
0x00009fc9      ba18000000     mov edx, 0x18
0x00009fce      4801c1         add rcx, rax
0x00009fd1      4889d0         mov rax, rdx
0x00009fd4      31f6           xor esi, esi
0x00009fd6      49894e18       mov qword [r14 + 0x18], rcx
0x00009fda      4829fb         sub rbx, rdi
0x00009fdd      48f7e1         mul rcx
0x00009fe0      0f8033020000   jo 0xa219
0x00009fe6      4885c0         test rax, rax
0x00009fe9      0f8834020000   js 0xa223
0x00009fef      4885f6         test rsi, rsi
0x00009ff2      0f852b020000   jne 0xa223
0x00009ff8      488d3449       lea rsi, [rcx + rcx*2]
0x00009ffc      48c1e603       shl rsi, 3
0x0000a000      e87b700000     call sym.xrealloc
0x0000a005      448b442414     mov r8d, dword [rsp + 0x14]
0x0000a00a      4801c3         add rbx, rax
0x0000a00d      49894628       mov qword [r14 + 0x28], rax
0x0000a011      4585c0         test r8d, r8d
0x0000a014      0f8436010000   je 0xa150
0x0000a01a      488b442430     mov rax, qword [rsp + 0x30]
0x0000a01f      488b542420     mov rdx, qword [rsp + 0x20]
0x0000a024      4c89e9         mov rcx, r13
0x0000a027      4829c1         sub rcx, rax
0x0000a02a      4839ca         cmp rdx, rcx
0x0000a02d      0f87d7000000   ja 0xa10a
0x0000a033      31c9           xor ecx, ecx
0x0000a035      4c89e6         mov rsi, r12
0x0000a038      4585ff         test r15d, r15d
0x0000a03b      7473           je 0xa0b0
0x0000a03d      448b4e28       mov r9d, dword [rsi + 0x28]
0x0000a041      4c8b5308       mov r10, qword [rbx + 8]
0x0000a045      488b3b         mov rdi, qword [rbx]
0x0000a048      4589cb         mov r11d, r9d
0x0000a04b      4c01d7         add rdi, r10
0x0000a04e      4183e3fe       and r11d, 0xfffffffe                    ; 4294967294
0x0000a052      44395b10       cmp dword [rbx + 0x10], r11d
0x0000a056      0f84d4000000   je 0xa130
0x0000a05c      4839d7         cmp rdi, rdx
0x0000a05f      765c           jbe 0xa0bd
0x0000a061      4989fa         mov r10, rdi
0x0000a064      4929d2         sub r10, rdx
0x0000a067      4939c2         cmp r10, rax
0x0000a06a      0f8318010000   jae 0xa188
0x0000a070      31c0           xor eax, eax
0x0000a072      49837e0800     cmp qword [r14 + 8], 0
0x0000a077      7507           jne 0xa080
0x0000a079      41c6462001     mov byte [r14 + 0x20], 1
0x0000a07e      31c0           xor eax, eax
0x0000a080      488b9c240810.  mov rbx, qword [rsp + 0x1008]
0x0000a088      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000a091      0f8591010000   jne 0xa228
0x0000a097      4881c4181000.  add rsp, 0x1018
0x0000a09e      5b             pop rbx
0x0000a09f      5d             pop rbp
0x0000a0a0      415c           pop r12
0x0000a0a2      415d           pop r13
0x0000a0a4      415e           pop r14
0x0000a0a6      415f           pop r15
0x0000a0a8      c3             ret
0x0000a0a9      0f1f80000000.  nop dword [rax]
0x0000a0b0      498b7e08       mov rdi, qword [r14 + 8]
0x0000a0b4      4839d7         cmp rdi, rdx
0x0000a0b7      77a8           ja 0xa061
0x0000a0b9      448b4e28       mov r9d, dword [rsi + 0x28]
0x0000a0bd      4489fe         mov esi, r15d
0x0000a0c0      4183c701       add r15d, 1
0x0000a0c4      488d3c76       lea rdi, [rsi + rsi*2]
0x0000a0c8      498b7628       mov rsi, qword [r14 + 0x28]
0x0000a0cc      488d1cfe       lea rbx, [rsi + rdi*8]
0x0000a0d0      488913         mov qword [rbx], rdx
0x0000a0d3      48894308       mov qword [rbx + 8], rax
0x0000a0d7      44894b10       mov dword [rbx + 0x10], r9d
0x0000a0db      83c101         add ecx, 1
0x0000a0de      4439c1         cmp ecx, r8d
0x0000a0e1      736d           jae 0xa150
0x0000a0e3      89ca           mov edx, ecx
0x0000a0e5      4c89ef         mov rdi, r13
0x0000a0e8      488d04d50000.  lea rax, [rdx*8]
0x0000a0f0      4829d0         sub rax, rdx
0x0000a0f3      498d34c4       lea rsi, [r12 + rax*8]
0x0000a0f7      488b4610       mov rax, qword [rsi + 0x10]
0x0000a0fb      488b16         mov rdx, qword [rsi]
0x0000a0fe      4829c7         sub rdi, rax
0x0000a101      4839fa         cmp rdx, rdi
0x0000a104      0f862effffff   jbe 0xa038
0x0000a10a      488d0d0fb000.  lea rcx, obj.__PRETTY_FUNCTION__.6956   ; 0x15120 ; "extent_scan_read"
0x0000a111      488d3568af00.  lea rsi, str..._coreutils_8.31_src_extent_scan.c ; 0x15080 ; "../coreutils-8.31/src/extent-scan.c"
0x0000a118      488d3dc1af00.  lea rdi, str.fm_extents_i_.fe_logical____OFF_T_MAX___fm_extents_i_.fe_length ; 0x150e0 ; "fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length"
0x0000a11f      ba8d000000     mov edx, 0x8d
0x0000a124      e8b788ffff     call sym.imp.__assert_fail
0x0000a129      0f1f80000000.  nop dword [rax]
0x0000a130      4839d7         cmp rdi, rdx
0x0000a133      0f8523ffffff   jne 0xa05c
0x0000a139      83c101         add ecx, 1
0x0000a13c      4c01d0         add rax, r10
0x0000a13f      44894b10       mov dword [rbx + 0x10], r9d
0x0000a143      4439c1         cmp ecx, r8d
0x0000a146      48894308       mov qword [rbx + 8], rax
0x0000a14a      7297           jb 0xa0e3
0x0000a14c      0f1f4000       nop dword [rax]
0x0000a150      f6431001       test byte [rbx + 0x10], 1
0x0000a154      754a           jne 0xa1a0
0x0000a156      4183ff48       cmp r15d, 0x48
0x0000a15a      410fb64621     movzx eax, byte [r14 + 0x21]
0x0000a15f      765f           jbe 0xa1c0
0x0000a161      84c0           test al, al
0x0000a163      7540           jne 0xa1a5
0x0000a165      418d47ff       lea eax, [r15 - 1]
0x0000a169      498b5628       mov rdx, qword [r14 + 0x28]
0x0000a16d      488d0c40       lea rcx, [rax + rax*2]
0x0000a171      49894618       mov qword [r14 + 0x18], rax
0x0000a175      488b44cae8     mov rax, qword [rdx + rcx*8 - 0x18]
0x0000a17a      480344caf0     add rax, qword [rdx + rcx*8 - 0x10]
0x0000a17f      49894608       mov qword [r14 + 8], rax
0x0000a183      eb27           jmp 0xa1ac
0x0000a185      0f1f00         nop dword [rax]
0x0000a188      4c29d0         sub rax, r10
0x0000a18b      48893e         mov qword [rsi], rdi
0x0000a18e      83e901         sub ecx, 1
0x0000a191      48894610       mov qword [rsi + 0x10], rax
0x0000a195      e941ffffff     jmp 0xa0db
0x0000a19a      660f1f440000   nop word [rax + rax]
0x0000a1a0      41c6462101     mov byte [r14 + 0x21], 1
0x0000a1a5      4489f8         mov eax, r15d
0x0000a1a8      49894618       mov qword [r14 + 0x18], rax
0x0000a1ac      b801000000     mov eax, 1
0x0000a1b1      e9cafeffff     jmp 0xa080
0x0000a1b6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a1c0      4489f9         mov ecx, r15d
0x0000a1c3      84c0           test al, al
0x0000a1c5      49894e18       mov qword [r14 + 0x18], rcx
0x0000a1c9      75e1           jne 0xa1ac
0x0000a1cb      488b5308       mov rdx, qword [rbx + 8]
0x0000a1cf      480313         add rdx, qword [rbx]
0x0000a1d2      4183ff47       cmp r15d, 0x47
0x0000a1d6      49895608       mov qword [r14 + 8], rdx
0x0000a1da      0f8683fdffff   jbe 0x9f63
0x0000a1e0      ebca           jmp 0xa1ac
0x0000a1e2      660f1f440000   nop word [rax + rax]
0x0000a1e8      49837e0800     cmp qword [r14 + 8], 0
0x0000a1ed      41c6462101     mov byte [r14 + 0x21], 1
0x0000a1f2      0f95c0         setne al
0x0000a1f5      e986feffff     jmp 0xa080
0x0000a1fa      488d0d1faf00.  lea rcx, obj.__PRETTY_FUNCTION__.6956   ; 0x15120 ; "extent_scan_read"
0x0000a201      488d3578ae00.  lea rsi, str..._coreutils_8.31_src_extent_scan.c ; 0x15080 ; "../coreutils-8.31/src/extent-scan.c"
0x0000a208      488d3d99ae00.  lea rdi, str.scan__ei_count____SIZE_MAX___fiemap__fm_mapped_extents ; 0x150a8 ; "scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents"
0x0000a20f      ba7e000000     mov edx, 0x7e                           ; '~'
0x0000a214      e8c787ffff     call sym.imp.__assert_fail
0x0000a219      be01000000     mov esi, 1
0x0000a21e      e9c3fdffff     jmp 0x9fe6
0x0000a223      e848700000     call sym.xalloc_die
0x0000a228      e80387ffff     call sym.imp.__stack_chk_fail
0x0000a22d      0f1f00         nop dword [rax]
;-- try_link:
0x0000a230      4889f0         mov rax, rsi                            ; /src:-47
0x0000a233      4889f9         mov rcx, rdi
0x0000a236      8b5610         mov edx, dword [rsi + 0x10]
0x0000a239      448b4014       mov r8d, dword [rax + 0x14]
0x0000a23d      488b7608       mov rsi, qword [rsi + 8]
0x0000a241      8b38           mov edi, dword [rax]
0x0000a243      e9f889ffff     jmp sym.imp.linkat
0x0000a248      0f1f84000000.  nop dword [rax + rax]
;-- samedir_template:
0x0000a250      4154           push r12
0x0000a252      55             push rbp
0x0000a253      4889fd         mov rbp, rdi
0x0000a256      53             push rbx
0x0000a257      4989f4         mov r12, rsi
0x0000a25a      e831130000     call sym.last_component
0x0000a25f      4829e8         sub rax, rbp
0x0000a262      488d7809       lea rdi, [rax + 9]
0x0000a266      4889c3         mov rbx, rax
0x0000a269      4881ff000100.  cmp rdi, 0x100
0x0000a270      760f           jbe 0xa281
0x0000a272      e84989ffff     call sym.imp.malloc
0x0000a277      4989c4         mov r12, rax
0x0000a27a      31c0           xor eax, eax
0x0000a27c      4d85e4         test r12, r12
0x0000a27f      7422           je 0xa2a3
0x0000a281      4889da         mov rdx, rbx
0x0000a284      4889ee         mov rsi, rbp
0x0000a287      4c89e7         mov rdi, r12
0x0000a28a      e8118affff     call sym.imp.mempcpy
0x0000a28f      48b943755858.  movabs rcx, 0x5858585858587543          ; 'CuXXXXXX'
0x0000a299      c6400800       mov byte [rax + 8], 0
0x0000a29d      488908         mov qword [rax], rcx
0x0000a2a0      4c89e0         mov rax, r12
0x0000a2a3      5b             pop rbx
0x0000a2a4      5d             pop rbp
0x0000a2a5      415c           pop r12
0x0000a2a7      c3             ret
0x0000a2a8      0f1f84000000.  nop dword [rax + rax]
;-- try_symlink:
0x0000a2b0      4889f0         mov rax, rsi
0x0000a2b3      4889fa         mov rdx, rdi
0x0000a2b6      8b7608         mov esi, dword [rsi + 8]
0x0000a2b9      488b38         mov rdi, qword [rax]
0x0000a2bc      e90f8bffff     jmp sym.imp.symlinkat
0x0000a2c1      0f1f440000     nop dword [rax + rax]
0x0000a2c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- force_linkat:
0x0000a2d0      4157           push r15
0x0000a2d2      4156           push r14
0x0000a2d4      4189fe         mov r14d, edi
0x0000a2d7      4155           push r13
0x0000a2d9      4154           push r12
0x0000a2db      4989f5         mov r13, rsi
0x0000a2de      55             push rbp
0x0000a2df      53             push rbx
0x0000a2e0      4889cb         mov rbx, rcx
0x0000a2e3      89d5           mov ebp, edx
0x0000a2e5      4589c4         mov r12d, r8d
0x0000a2e8      4881ec480100.  sub rsp, 0x148
0x0000a2ef      8b8c24800100.  mov ecx, dword [rsp + 0x180]
0x0000a2f6      64488b042528.  mov rax, qword fs:[0x28]
0x0000a2ff      488984243801.  mov qword [rsp + 0x138], rax
0x0000a307      31c0           xor eax, eax
0x0000a309      85c9           test ecx, ecx
0x0000a30b      0f88af000000   js 0xa3c0
0x0000a311      4180f901       cmp r9b, 1
0x0000a315      7579           jne 0xa390
0x0000a317      83f911         cmp ecx, 0x11
0x0000a31a      7574           jne 0xa390
0x0000a31c      488d442430     lea rax, [rsp + 0x30]
0x0000a321      4889df         mov rdi, rbx
0x0000a324      4889c6         mov rsi, rax
0x0000a327      48890424       mov qword [rsp], rax
0x0000a32b      e820ffffff     call sym.samedir_template
0x0000a330      4885c0         test rax, rax
0x0000a333      4989c7         mov r15, rax
0x0000a336      0f84e4000000   je 0xa420
0x0000a33c      488d542410     lea rdx, [rsp + 0x10]
0x0000a341      488d0de8feff.  lea rcx, sym.try_link                   ; 0xa230 ; "H\x89\xf0H\x89\xf9\x8bV\x10D\x8b@\x14H\x8bv\b\x8b8\xe9\xf8\x89\xff\xff\x0f\x1f\x84"
0x0000a348      31f6           xor esi, esi
0x0000a34a      41b806000000   mov r8d, 6
0x0000a350      4889c7         mov rdi, rax
0x0000a353      4489742410     mov dword [rsp + 0x10], r14d
0x0000a358      4c896c2418     mov qword [rsp + 0x18], r13
0x0000a35d      896c2420       mov dword [rsp + 0x20], ebp
0x0000a361      4489642424     mov dword [rsp + 0x24], r12d
0x0000a366      e8b5530000     call sym.try_tempname_len
0x0000a36b      85c0           test eax, eax
0x0000a36d      7479           je 0xa3e8
0x0000a36f      e8fc83ffff     call sym.imp.__errno_location
0x0000a374      8b08           mov ecx, dword [rax]
0x0000a376      4c3b3c24       cmp r15, qword [rsp]
0x0000a37a      7414           je 0xa390
0x0000a37c      4c89ff         mov rdi, r15
0x0000a37f      890c24         mov dword [rsp], ecx
0x0000a382      e8898affff     call sym..plt.got
0x0000a387      8b0c24         mov ecx, dword [rsp]
0x0000a38a      660f1f440000   nop word [rax + rax]
0x0000a390      488b9c243801.  mov rbx, qword [rsp + 0x138]
0x0000a398      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000a3a1      89c8           mov eax, ecx
0x0000a3a3      0f8583000000   jne 0xa42c
0x0000a3a9      4881c4480100.  add rsp, 0x148
0x0000a3b0      5b             pop rbx
0x0000a3b1      5d             pop rbp
0x0000a3b2      415c           pop r12
0x0000a3b4      415d           pop r13
0x0000a3b6      415e           pop r14
0x0000a3b8      415f           pop r15
0x0000a3ba      c3             ret
0x0000a3bb      0f1f440000     nop dword [rax + rax]
0x0000a3c0      4889d9         mov rcx, rbx
0x0000a3c3      44890c24       mov dword [rsp], r9d
0x0000a3c7      e87488ffff     call sym.imp.linkat
0x0000a3cc      85c0           test eax, eax
0x0000a3ce      89c1           mov ecx, eax
0x0000a3d0      74be           je 0xa390
0x0000a3d2      e89983ffff     call sym.imp.__errno_location
0x0000a3d7      448b0c24       mov r9d, dword [rsp]
0x0000a3db      8b08           mov ecx, dword [rax]
0x0000a3dd      e92fffffff     jmp 0xa311
0x0000a3e2      660f1f440000   nop word [rax + rax]
0x0000a3e8      4889d9         mov rcx, rbx
0x0000a3eb      89ea           mov edx, ebp
0x0000a3ed      4c89fe         mov rsi, r15
0x0000a3f0      89ef           mov edi, ebp
0x0000a3f2      e86989ffff     call sym.imp.renameat
0x0000a3f7      85c0           test eax, eax
0x0000a3f9      b9ffffffff     mov ecx, 0xffffffff                     ; -1
0x0000a3fe      7407           je 0xa407
0x0000a400      e86b83ffff     call sym.imp.__errno_location
0x0000a405      8b08           mov ecx, dword [rax]
0x0000a407      31d2           xor edx, edx
0x0000a409      4c89fe         mov rsi, r15
0x0000a40c      89ef           mov edi, ebp
0x0000a40e      894c240c       mov dword [rsp + 0xc], ecx
0x0000a412      e8d983ffff     call sym.imp.unlinkat
0x0000a417      8b4c240c       mov ecx, dword [rsp + 0xc]
0x0000a41b      e956ffffff     jmp 0xa376
0x0000a420      e84b83ffff     call sym.imp.__errno_location
0x0000a425      8b08           mov ecx, dword [rax]
0x0000a427      e964ffffff     jmp 0xa390
0x0000a42c      e8ff84ffff     call sym.imp.__stack_chk_fail
0x0000a431      0f1f440000     nop dword [rax + rax]
0x0000a436      662e0f1f8400.  nop word cs:[rax + rax]
;-- force_symlinkat:
0x0000a440      4156           push r14
0x0000a442      4155           push r13
0x0000a444      4154           push r12
0x0000a446      55             push rbp
0x0000a447      4989fc         mov r12, rdi
0x0000a44a      53             push rbx
0x0000a44b      89f5           mov ebp, esi
0x0000a44d      4889d3         mov rbx, rdx
0x0000a450      4881ec300100.  sub rsp, 0x130
0x0000a457      64488b042528.  mov rax, qword fs:[0x28]
0x0000a460      488984242801.  mov qword [rsp + 0x128], rax
0x0000a468      31c0           xor eax, eax
0x0000a46a      4585c0         test r8d, r8d
0x0000a46d      0f88a5000000   js 0xa518
0x0000a473      80f901         cmp cl, 1
0x0000a476      7570           jne 0xa4e8
0x0000a478      4183f811       cmp r8d, 0x11
0x0000a47c      756a           jne 0xa4e8
0x0000a47e      4c8d742420     lea r14, [rsp + 0x20]
0x0000a483      4889df         mov rdi, rbx
0x0000a486      4c89f6         mov rsi, r14
0x0000a489      e8c2fdffff     call sym.samedir_template
0x0000a48e      4885c0         test rax, rax
0x0000a491      4989c5         mov r13, rax
0x0000a494      0f84e6000000   je 0xa580
0x0000a49a      488d542410     lea rdx, [rsp + 0x10]
0x0000a49f      488d0d0afeff.  lea rcx, sym.try_symlink                ; 0xa2b0 ; "H\x89\xf0H\x89\xfa\x8bv\bH\x8b8\xe9\x0f\x8b\xff\xff\x0f\x1fD"
0x0000a4a6      31f6           xor esi, esi
0x0000a4a8      41b806000000   mov r8d, 6
0x0000a4ae      4889c7         mov rdi, rax
0x0000a4b1      4c89642410     mov qword [rsp + 0x10], r12
0x0000a4b6      896c2418       mov dword [rsp + 0x18], ebp
0x0000a4ba      e861520000     call sym.try_tempname_len
0x0000a4bf      85c0           test eax, eax
0x0000a4c1      747d           je 0xa540
0x0000a4c3      e8a882ffff     call sym.imp.__errno_location
0x0000a4c8      448b00         mov r8d, dword [rax]
0x0000a4cb      4d39f5         cmp r13, r14
0x0000a4ce      7418           je 0xa4e8
0x0000a4d0      4c89ef         mov rdi, r13
0x0000a4d3      448944240c     mov dword [rsp + 0xc], r8d
0x0000a4d8      e83389ffff     call sym..plt.got
0x0000a4dd      448b44240c     mov r8d, dword [rsp + 0xc]
0x0000a4e2      660f1f440000   nop word [rax + rax]
0x0000a4e8      488b9c242801.  mov rbx, qword [rsp + 0x128]
0x0000a4f0      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000a4f9      4489c0         mov eax, r8d
0x0000a4fc      0f858b000000   jne 0xa58d
0x0000a502      4881c4300100.  add rsp, 0x130
0x0000a509      5b             pop rbx
0x0000a50a      5d             pop rbp
0x0000a50b      415c           pop r12
0x0000a50d      415d           pop r13
0x0000a50f      415e           pop r14
0x0000a511      c3             ret
0x0000a512      660f1f440000   nop word [rax + rax]
0x0000a518      894c240c       mov dword [rsp + 0xc], ecx
0x0000a51c      e8af88ffff     call sym.imp.symlinkat
0x0000a521      85c0           test eax, eax
0x0000a523      4189c0         mov r8d, eax
0x0000a526      74c0           je 0xa4e8
0x0000a528      e84382ffff     call sym.imp.__errno_location
0x0000a52d      8b4c240c       mov ecx, dword [rsp + 0xc]
0x0000a531      448b00         mov r8d, dword [rax]
0x0000a534      e93affffff     jmp 0xa473
0x0000a539      0f1f80000000.  nop dword [rax]
0x0000a540      4889d9         mov rcx, rbx
0x0000a543      89ea           mov edx, ebp
0x0000a545      4c89ee         mov rsi, r13
0x0000a548      89ef           mov edi, ebp
0x0000a54a      e81188ffff     call sym.imp.renameat
0x0000a54f      85c0           test eax, eax
0x0000a551      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x0000a557      0f846effffff   je 0xa4cb
0x0000a55d      e80e82ffff     call sym.imp.__errno_location
0x0000a562      448b00         mov r8d, dword [rax]
0x0000a565      31d2           xor edx, edx
0x0000a567      4c89ee         mov rsi, r13
0x0000a56a      89ef           mov edi, ebp
0x0000a56c      448944240c     mov dword [rsp + 0xc], r8d
0x0000a571      e87a82ffff     call sym.imp.unlinkat
0x0000a576      448b44240c     mov r8d, dword [rsp + 0xc]
0x0000a57b      e94bffffff     jmp 0xa4cb
0x0000a580      e8eb81ffff     call sym.imp.__errno_location
0x0000a585      448b00         mov r8d, dword [rax]
0x0000a588      e95bffffff     jmp 0xa4e8
0x0000a58d      e89e83ffff     call sym.imp.__stack_chk_fail
0x0000a592      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a59c      0f1f4000       nop dword [rax]
;-- copy_acl:
0x0000a5a0      4154           push r12                                ; ../coreutils-8.31/lib/copy-acl.c:45
0x0000a5a2      55             push rbp
0x0000a5a3      4989fc         mov r12, rdi
0x0000a5a6      53             push rbx
0x0000a5a7      4889d5         mov rbp, rdx
0x0000a5aa      e8812a0000     call sym.qcopy_acl                      ; ../coreutils-8.31/lib/copy-acl.c:46
0x0000a5af      83f8fe         cmp eax, 0xfffffffe                     ; ../coreutils-8.31/lib/copy-acl.c:47
0x0000a5b2      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/copy-acl.c:46
0x0000a5b4      744a           je 0xa600                               ; ../coreutils-8.31/lib/copy-acl.c:47
0x0000a5b6      83f8ff         cmp eax, 0xffffffff
0x0000a5b9      7537           jne 0xa5f2
0x0000a5bb      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/copy-acl.c:54
0x0000a5be      e8bd470000     call sym.quote
0x0000a5c3      488d35b9a900.  lea rsi, str.preserving_permissions_for__s ; 0x14f83 ; "preserving permissions for %s"
0x0000a5ca      ba05000000     mov edx, 5
0x0000a5cf      31ff           xor edi, edi
0x0000a5d1      4989c4         mov r12, rax
0x0000a5d4      e80783ffff     call sym.imp.dcgettext
0x0000a5d9      4889c5         mov rbp, rax
0x0000a5dc      e88f81ffff     call sym.imp.__errno_location
0x0000a5e1      8b30           mov esi, dword [rax]
0x0000a5e3      4c89e1         mov rcx, r12
0x0000a5e6      4889ea         mov rdx, rbp
0x0000a5e9      31ff           xor edi, edi
0x0000a5eb      31c0           xor eax, eax
0x0000a5ed      e8be86ffff     call sym.imp.error
0x0000a5f2      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/copy-acl.c:61
0x0000a5f4      5b             pop rbx
0x0000a5f5      5d             pop rbp
0x0000a5f6      415c           pop r12
0x0000a5f8      c3             ret
0x0000a5f9      0f1f80000000.  nop dword [rax]
0x0000a600      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/copy-acl.c:50
0x0000a603      e878470000     call sym.quote
0x0000a608      4889c5         mov rbp, rax
0x0000a60b      e86081ffff     call sym.imp.__errno_location
0x0000a610      8b30           mov esi, dword [rax]
0x0000a612      488d1574ab00.  lea rdx, [0x0001518d]                   ; "%s"
0x0000a619      4889e9         mov rcx, rbp
0x0000a61c      31c0           xor eax, eax
0x0000a61e      31ff           xor edi, edi
0x0000a620      e88b86ffff     call sym.imp.error
0x0000a625      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/copy-acl.c:61
0x0000a627      5b             pop rbx
0x0000a628      5d             pop rbp
0x0000a629      415c           pop r12
0x0000a62b      c3             ret
0x0000a62c      0f1f4000       nop dword [rax]
;-- set_acl:
0x0000a630      4154           push r12                                ; ../coreutils-8.31/lib/set-acl.c:43
0x0000a632      55             push rbp
0x0000a633      4889fd         mov rbp, rdi
0x0000a636      53             push rbx
0x0000a637      e8742a0000     call sym.qset_acl                       ; ../coreutils-8.31/lib/set-acl.c:44
0x0000a63c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/set-acl.c:45
0x0000a63e      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/set-acl.c:44
0x0000a640      7437           je 0xa679                               ; ../coreutils-8.31/lib/set-acl.c:45
0x0000a642      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/set-acl.c:46
0x0000a645      e836470000     call sym.quote
0x0000a64a      488d35d98200.  lea rsi, str.setting_permissions_for__s ; 0x1292a ; "setting permissions for %s"
0x0000a651      ba05000000     mov edx, 5
0x0000a656      31ff           xor edi, edi
0x0000a658      4989c4         mov r12, rax
0x0000a65b      e88082ffff     call sym.imp.dcgettext
0x0000a660      4889c5         mov rbp, rax
0x0000a663      e80881ffff     call sym.imp.__errno_location
0x0000a668      8b30           mov esi, dword [rax]
0x0000a66a      4c89e1         mov rcx, r12
0x0000a66d      4889ea         mov rdx, rbp
0x0000a670      31ff           xor edi, edi
0x0000a672      31c0           xor eax, eax
0x0000a674      e83786ffff     call sym.imp.error
0x0000a679      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/set-acl.c:48
0x0000a67b      5b             pop rbx
0x0000a67c      5d             pop rbp
0x0000a67d      415c           pop r12
0x0000a67f      c3             ret
;-- areadlink_with_size:
0x0000a680      4157           push r15
0x0000a682      4156           push r14
0x0000a684      b801040000     mov eax, 0x401                          ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x0000a689      4155           push r13                                ; ../coreutils-8.31/lib/areadlink-with-size.c:53
0x0000a68b      4154           push r12
0x0000a68d      4989fd         mov r13, rdi
0x0000a690      55             push rbp
0x0000a691      53             push rbx
0x0000a692      488d5e01       lea rbx, [rsi + 1]                      ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x0000a696      49beffffffff.  movabs r14, 0x3fffffffffffffff          ; ../coreutils-8.31/lib/areadlink-with-size.c:94 ; 4611686018427387903
0x0000a6a0      49bffeffffff.  movabs r15, 0x7ffffffffffffffe          ; ../coreutils-8.31/lib/areadlink-with-size.c:96 ; 9223372036854775806
0x0000a6aa      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/areadlink-with-size.c:53
0x0000a6ae      4881fe010400.  cmp rsi, 0x401                          ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x0000a6b5      480f43d8       cmovae rbx, rax
0x0000a6b9      0f1f80000000.  nop dword [rax]
0x0000a6c0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/areadlink-with-size.c:70
0x0000a6c3      e8f884ffff     call sym.imp.malloc
0x0000a6c8      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/areadlink-with-size.c:72
0x0000a6cb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/areadlink-with-size.c:70
0x0000a6ce      743b           je 0xa70b                               ; ../coreutils-8.31/lib/areadlink-with-size.c:72
0x0000a6d0      4889da         mov rdx, rbx
0x0000a6d3      4889c6         mov rsi, rax
0x0000a6d6      4c89ef         mov rdi, r13
0x0000a6d9      e83281ffff     call sym.imp.readlink
0x0000a6de      4885c0         test rax, rax
0x0000a6e1      4989c4         mov r12, rax                            ; unistd.h:-169
0x0000a6e4      7852           js 0xa738
0x0000a6e6      4c39e3         cmp rbx, r12                            ; unistd.h:-163
0x0000a6e9      7765           ja 0xa750
0x0000a6eb      4889ef         mov rdi, rbp
0x0000a6ee      e81d87ffff     call sym..plt.got                       ; unistd.h:-162
0x0000a6f3      4c39f3         cmp rbx, r14                            ; unistd.h:-161
0x0000a6f6      7728           ja 0xa720                               ; unistd.h:-186
0x0000a6f8      4801db         add rbx, rbx
0x0000a6fb      4889df         mov rdi, rbx
0x0000a6fe      e8bd84ffff     call sym.imp.malloc                     ; unistd.h:-184
0x0000a703      4885c0         test rax, rax
0x0000a706      4889c5         mov rbp, rax                            ; unistd.h:-152
0x0000a709      75c5           jne 0xa6d0
0x0000a70b      4883c408       add rsp, 8
0x0000a70f      4889e8         mov rax, rbp
0x0000a712      5b             pop rbx
0x0000a713      5d             pop rbp
0x0000a714      415c           pop r12
0x0000a716      415d           pop r13
0x0000a718      415e           pop r14
0x0000a71a      415f           pop r15
0x0000a71c      c3             ret
0x0000a71d      0f1f00         nop dword [rax]
0x0000a720      4c39fb         cmp rbx, r15                            ; unistd.h:-159
0x0000a723      773b           ja 0xa760
0x0000a725      48bbffffffff.  movabs rbx, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a72f      eb8f           jmp 0xa6c0
0x0000a731      0f1f80000000.  nop dword [rax]
0x0000a738      e83380ffff     call sym.imp.__errno_location
0x0000a73d      833822         cmp dword [rax], 0x22                   ; unistd.h:-174
0x0000a740      74a4           je 0xa6e6                               ; unistd.h:-172
0x0000a742      4889ef         mov rdi, rbp                            ; unistd.h:-174
0x0000a745      31ed           xor ebp, ebp
0x0000a747      e8c486ffff     call sym..plt.got                       ; unistd.h:-172
0x0000a74c      ebbd           jmp 0xa70b
0x0000a74e      6690           nop
0x0000a750      42c644250000   mov byte [rbp + r12], 0
0x0000a756      ebb3           jmp 0xa70b
0x0000a758      0f1f84000000.  nop dword [rax + rax]
0x0000a760      e80b80ffff     call sym.imp.__errno_location           ; unistd.h:-155
0x0000a765      31ed           xor ebp, ebp
0x0000a767      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000a76d      eb9c           jmp 0xa70b
0x0000a76f      90             nop
;-- __argmatch_die:
0x0000a770      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/argmatch.c:63
0x0000a775      e9a69affff     jmp sym.usage
0x0000a77a      660f1f440000   nop word [rax + rax]
;-- argmatch:
0x0000a780      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:86
0x0000a782      4156           push r14
0x0000a784      4989f7         mov r15, rsi
0x0000a787      4155           push r13
0x0000a789      4154           push r12
0x0000a78b      4989cd         mov r13, rcx
0x0000a78e      55             push rbp
0x0000a78f      53             push rbx
0x0000a790      4889d5         mov rbp, rdx
0x0000a793      4883ec28       sub rsp, 0x28
0x0000a797      48897c2408     mov qword [rsp + 8], rdi
0x0000a79c      4889542418     mov qword [rsp + 0x18], rdx
0x0000a7a1      e85a81ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/argmatch.c:92
0x0000a7a6      4d8b37         mov r14, qword [r15]                    ; ../coreutils-8.31/lib/argmatch.c:95
0x0000a7a9      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:89
0x0000a7b1      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/argmatch.c:95
0x0000a7b4      0f84b3000000   je 0xa86d
0x0000a7ba      4989c4         mov r12, rax
0x0000a7bd      c644241700     mov byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:90
0x0000a7c2      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:95
0x0000a7c4      eb51           jmp 0xa817
0x0000a7c6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a7d0      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/argmatch.c:108
0x0000a7d5      4885c0         test rax, rax
0x0000a7d8      0f84a2000000   je 0xa880
0x0000a7de      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:109
0x0000a7e2      4c89ea         mov rdx, r13
0x0000a7e5      4889ee         mov rsi, rbp
0x0000a7e8      490faffd       imul rdi, r13
0x0000a7ec      4801c7         add rdi, rax
0x0000a7ef      e89c82ffff     call sym.imp.memcmp
0x0000a7f4      85c0           test eax, eax                           ; ../coreutils-8.31/lib/argmatch.c:114
0x0000a7f6      0fb6442417     movzx eax, byte [rsp + 0x17]
0x0000a7fb      b901000000     mov ecx, 1
0x0000a800      0f45c1         cmovne eax, ecx
0x0000a803      88442417       mov byte [rsp + 0x17], al
0x0000a807      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x0000a80b      4c01ed         add rbp, r13
0x0000a80e      4d8b34df       mov r14, qword [r15 + rbx*8]
0x0000a812      4d85f6         test r14, r14
0x0000a815      7441           je 0xa858
0x0000a817      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/argmatch.c:97
0x0000a81c      4c89e2         mov rdx, r12
0x0000a81f      4c89f7         mov rdi, r14
0x0000a822      e8697fffff     call sym.imp.strncmp
0x0000a827      85c0           test eax, eax
0x0000a829      75dc           jne 0xa807
0x0000a82b      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/argmatch.c:99
0x0000a82e      e8cd80ffff     call sym.imp.strlen
0x0000a833      4c39e0         cmp rax, r12
0x0000a836      7458           je 0xa890
0x0000a838      48833c24ff     cmp qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:102
0x0000a83d      7591           jne 0xa7d0
0x0000a83f      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:104
0x0000a843      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x0000a847      4c01ed         add rbp, r13
0x0000a84a      4d8b34df       mov r14, qword [r15 + rbx*8]
0x0000a84e      4d85f6         test r14, r14
0x0000a851      75c4           jne 0xa817
0x0000a853      0f1f440000     nop dword [rax + rax]
0x0000a858      807c241700     cmp byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:120
0x0000a85d      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x0000a864      480f440424     cmove rax, qword [rsp]
0x0000a869      48890424       mov qword [rsp], rax
0x0000a86d      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:123
0x0000a871      4883c428       add rsp, 0x28
0x0000a875      5b             pop rbx
0x0000a876      5d             pop rbp
0x0000a877      415c           pop r12
0x0000a879      415d           pop r13
0x0000a87b      415e           pop r14
0x0000a87d      415f           pop r15
0x0000a87f      c3             ret
0x0000a880      c644241701     mov byte [rsp + 0x17], 1                ; ../coreutils-8.31/lib/argmatch.c:114
0x0000a885      eb80           jmp 0xa807
0x0000a887      660f1f840000.  nop word [rax + rax]
0x0000a890      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:101
0x0000a894      ebd7           jmp 0xa86d
0x0000a896      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_invalid:
0x0000a8a0      4883faff       cmp rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/argmatch.c:132
0x0000a8a4      4154           push r12
0x0000a8a6      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:133
0x0000a8ab      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:132
0x0000a8ac      4989f4         mov r12, rsi
0x0000a8af      53             push rbx
0x0000a8b0      4889fd         mov rbp, rdi
0x0000a8b3      744b           je 0xa900                               ; ../coreutils-8.31/lib/argmatch.c:133
0x0000a8b5      488d3595a800.  lea rsi, str.ambiguous_argument__s_for__s ; 0x15151 ; "ambiguous argument %s for %s"
0x0000a8bc      31ff           xor edi, edi
0x0000a8be      e81d80ffff     call sym.imp.dcgettext
0x0000a8c3      4889c3         mov rbx, rax
0x0000a8c6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/argmatch.c:137
0x0000a8c9      bf01000000     mov edi, 1
0x0000a8ce      e88d440000     call sym.quote_n
0x0000a8d3      4c89e2         mov rdx, r12
0x0000a8d6      4889c5         mov rbp, rax
0x0000a8d9      be08000000     mov esi, 8
0x0000a8de      31ff           xor edi, edi
0x0000a8e0      e8ab400000     call sym.quotearg_n_style
0x0000a8e5      4989e8         mov r8, rbp
0x0000a8e8      4889da         mov rdx, rbx
0x0000a8eb      4889c1         mov rcx, rax
0x0000a8ee      5b             pop rbx                                 ; ../coreutils-8.31/lib/argmatch.c:139
0x0000a8ef      5d             pop rbp
0x0000a8f0      415c           pop r12
0x0000a8f2      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/argmatch.c:137
0x0000a8f4      31ff           xor edi, edi
0x0000a8f6      31c0           xor eax, eax
0x0000a8f8      e9b383ffff     jmp sym.imp.error
0x0000a8fd      0f1f00         nop dword [rax]
0x0000a900      488d352fa800.  lea rsi, str.invalid_argument__s_for__s ; ../coreutils-8.31/lib/argmatch.c:133 ; 0x15136 ; "invalid argument %s for %s"
0x0000a907      31ff           xor edi, edi
0x0000a909      e8d27fffff     call sym.imp.dcgettext
0x0000a90e      4889c3         mov rbx, rax
0x0000a911      ebb3           jmp 0xa8c6
0x0000a913      0f1f00         nop dword [rax]
0x0000a916      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_valid:
0x0000a920      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:148
0x0000a922      4156           push r14
0x0000a924      4989fe         mov r14, rdi
0x0000a927      4155           push r13
0x0000a929      4154           push r12
0x0000a92b      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/argmatch.c:154
0x0000a92d      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:148
0x0000a92e      53             push rbx
0x0000a92f      4889f5         mov rbp, rsi
0x0000a932      488d3535a800.  lea rsi, str.Valid_arguments_are:       ; ../coreutils-8.31/lib/argmatch.c:154 ; 0x1516e ; "Valid arguments are:"
0x0000a939      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/argmatch.c:148
0x0000a93c      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:154
0x0000a941      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argmatch.c:148
0x0000a945      488b1d94f720.  mov rbx, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:154 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a0e0:8]=0
0x0000a94c      e88f7fffff     call sym.imp.dcgettext
0x0000a951      4889c7         mov rdi, rax
0x0000a954      4889de         mov rsi, rbx
0x0000a957      e85481ffff     call sym.imp.fputs_unlocked
0x0000a95c      4d8b3e         mov r15, qword [r14]                    ; ../coreutils-8.31/lib/argmatch.c:155
0x0000a95f      4d85ff         test r15, r15
0x0000a962      0f8490000000   je 0xa9f8
0x0000a968      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/argmatch.c:150
0x0000a96b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000a96d      eb39           jmp 0xa9a8
0x0000a96f      90             nop
0x0000a970      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:159
0x0000a973      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x0000a977      4989ed         mov r13, rbp                            ; ../coreutils-8.31/lib/argmatch.c:160
0x0000a97a      e801440000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:159
0x0000a97f      488b3d5af720.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a0e0:8]=0
0x0000a986      488d15f6a700.  lea rdx, [0x00015183]                   ; "\n  - %s"
0x0000a98d      4889c1         mov rcx, rax
0x0000a990      be01000000     mov esi, 1
0x0000a995      31c0           xor eax, eax
0x0000a997      4c01e5         add rbp, r12
0x0000a99a      e81184ffff     call sym.imp.__fprintf_chk
0x0000a99f      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000a9a3      4d85ff         test r15, r15
0x0000a9a6      7450           je 0xa9f8
0x0000a9a8      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/argmatch.c:156
0x0000a9ab      74c3           je 0xa970
0x0000a9ad      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/argmatch.c:157
0x0000a9b0      4889ee         mov rsi, rbp
0x0000a9b3      4c89ef         mov rdi, r13
0x0000a9b6      e8d580ffff     call sym.imp.memcmp
0x0000a9bb      85c0           test eax, eax
0x0000a9bd      75b1           jne 0xa970
0x0000a9bf      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:164
0x0000a9c2      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x0000a9c6      4c01e5         add rbp, r12
0x0000a9c9      e8b2430000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:164
0x0000a9ce      488b3d0bf720.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a0e0:8]=0
0x0000a9d5      488d15afa700.  lea rdx, str.s                          ; 0x1518b ; ", %s"
0x0000a9dc      4889c1         mov rcx, rax
0x0000a9df      be01000000     mov esi, 1
0x0000a9e4      31c0           xor eax, eax
0x0000a9e6      e8c583ffff     call sym.imp.__fprintf_chk
0x0000a9eb      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000a9ef      4d85ff         test r15, r15
0x0000a9f2      75b4           jne 0xa9a8
0x0000a9f4      0f1f4000       nop dword [rax]
0x0000a9f8      488b3de1f620.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:166 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a0e0:8]=0
0x0000a9ff      488b4728       mov rax, qword [rdi + 0x28]             ; stdio.h:100   return _IO_putc_unlocked (__c, __stream);
0x0000aa03      483b4730       cmp rax, qword [rdi + 0x30]
0x0000aa07      731f           jae 0xaa28
0x0000aa09      488d5001       lea rdx, [rax + 1]
0x0000aa0d      48895728       mov qword [rdi + 0x28], rdx
0x0000aa11      c6000a         mov byte [rax], 0xa
0x0000aa14      4883c408       add rsp, 8
0x0000aa18      5b             pop rbx
0x0000aa19      5d             pop rbp
0x0000aa1a      415c           pop r12
0x0000aa1c      415d           pop r13
0x0000aa1e      415e           pop r14
0x0000aa20      415f           pop r15
0x0000aa22      c3             ret
0x0000aa23      0f1f440000     nop dword [rax + rax]
0x0000aa28      4883c408       add rsp, 8
0x0000aa2c      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/argmatch.c:-204
0x0000aa31      5b             pop rbx
0x0000aa32      5d             pop rbp
0x0000aa33      415c           pop r12
0x0000aa35      415d           pop r13
0x0000aa37      415e           pop r14
0x0000aa39      415f           pop r15
0x0000aa3b      e9507fffff     jmp sym.imp.__overflow
;-- __xargmatch_internal:
0x0000aa40      4157           push r15
0x0000aa42      4156           push r14
0x0000aa44      4989fe         mov r14, rdi
0x0000aa47      4155           push r13
0x0000aa49      4154           push r12
0x0000aa4b      4989f4         mov r12, rsi
0x0000aa4e      55             push rbp
0x0000aa4f      53             push rbx
0x0000aa50      4889cd         mov rbp, rcx
0x0000aa53      4889d3         mov rbx, rdx
0x0000aa56      4c89c1         mov rcx, r8
0x0000aa59      4889ea         mov rdx, rbp
0x0000aa5c      4883ec08       sub rsp, 8
0x0000aa60      4889de         mov rsi, rbx
0x0000aa63      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-196
0x0000aa66      4d89c7         mov r15, r8
0x0000aa69      4d89cd         mov r13, r9
0x0000aa6c      e80ffdffff     call sym.argmatch
0x0000aa71      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argmatch.c:-195
0x0000aa74      780f           js 0xaa85                               ; ../coreutils-8.31/lib/argmatch.c:-193
0x0000aa76      4883c408       add rsp, 8
0x0000aa7a      5b             pop rbx
0x0000aa7b      5d             pop rbp
0x0000aa7c      415c           pop r12
0x0000aa7e      415d           pop r13
0x0000aa80      415e           pop r14                                 ; ../coreutils-8.31/lib/argmatch.c:-184
0x0000aa82      415f           pop r15
0x0000aa84      c3             ret
0x0000aa85      4889c2         mov rdx, rax
0x0000aa88      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-181
0x0000aa8b      4c89f7         mov rdi, r14
0x0000aa8e      e80dfeffff     call sym.argmatch_invalid
0x0000aa93      4c89fa         mov rdx, r15
0x0000aa96      4889ee         mov rsi, rbp
0x0000aa99      4889df         mov rdi, rbx
0x0000aa9c      e87ffeffff     call sym.argmatch_valid
0x0000aaa1      41ffd5         call r13
0x0000aaa4      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000aaab      ebc9           jmp 0xaa76
0x0000aaad      0f1f00         nop dword [rax]
;-- argmatch_to_argument:
0x0000aab0      4156           push r14
0x0000aab2      4155           push r13
0x0000aab4      4154           push r12
0x0000aab6      55             push rbp
0x0000aab7      53             push rbx
0x0000aab8      4c8b36         mov r14, qword [rsi]
0x0000aabb      4d85f6         test r14, r14
0x0000aabe      7431           je 0xaaf1
0x0000aac0      4989cc         mov r12, rcx
0x0000aac3      4989fd         mov r13, rdi
0x0000aac6      4889d5         mov rbp, rdx
0x0000aac9      488d5e08       lea rbx, [rsi + 8]
0x0000aacd      eb10           jmp 0xaadf                              ; ../coreutils-8.31/lib/argmatch.c:-177
0x0000aacf      90             nop
0x0000aad0      4c8b33         mov r14, qword [rbx]
0x0000aad3      4c01e5         add rbp, r12
0x0000aad6      4883c308       add rbx, 8
0x0000aada      4d85f6         test r14, r14
0x0000aadd      7412           je 0xaaf1
0x0000aadf      4c89e2         mov rdx, r12
0x0000aae2      4889ee         mov rsi, rbp
0x0000aae5      4c89ef         mov rdi, r13
0x0000aae8      e8a37fffff     call sym.imp.memcmp
0x0000aaed      85c0           test eax, eax
0x0000aaef      75df           jne 0xaad0
0x0000aaf1      5b             pop rbx
0x0000aaf2      4c89f0         mov rax, r14
0x0000aaf5      5d             pop rbp
0x0000aaf6      415c           pop r12
0x0000aaf8      415d           pop r13
0x0000aafa      415e           pop r14
0x0000aafc      c3             ret
0x0000aafd      0f1f00         nop dword [rax]
;-- set_simple_backup_suffix:
0x0000ab00      4885ff         test rdi, rdi
0x0000ab03      53             push rbx
0x0000ab04      4889fb         mov rbx, rdi
0x0000ab07      7427           je 0xab30
0x0000ab09      803b00         cmp byte [rbx], 0
0x0000ab0c      7512           jne 0xab20
0x0000ab0e      488d1d7ba600.  lea rbx, [0x00015190]                   ; "~"
0x0000ab15      48891d64fa20.  mov qword [obj.simple_backup_suffix], rbx ; [0x21a580:8]=0
0x0000ab1c      5b             pop rbx
0x0000ab1d      c3             ret
0x0000ab1e      6690           nop
0x0000ab20      4889df         mov rdi, rbx
0x0000ab23      e8680a0000     call sym.last_component
0x0000ab28      4839d8         cmp rax, rbx
0x0000ab2b      75e1           jne 0xab0e
0x0000ab2d      ebe6           jmp 0xab15
0x0000ab2f      90             nop
0x0000ab30      488d3d5ba600.  lea rdi, str.SIMPLE_BACKUP_SUFFIX       ; 0x15192 ; "SIMPLE_BACKUP_SUFFIX"
0x0000ab37      e8047cffff     call sym.imp.getenv
0x0000ab3c      4885c0         test rax, rax
0x0000ab3f      4889c3         mov rbx, rax
0x0000ab42      74ca           je 0xab0e
0x0000ab44      ebc3           jmp 0xab09
0x0000ab46      662e0f1f8400.  nop word cs:[rax + rax]
;-- backupfile_internal:
0x0000ab50      4157           push r15
0x0000ab52      4156           push r14
0x0000ab54      4155           push r13
0x0000ab56      4154           push r12
0x0000ab58      55             push rbp
0x0000ab59      53             push rbx
0x0000ab5a      4889f3         mov rbx, rsi
0x0000ab5d      4881ec880000.  sub rsp, 0x88
0x0000ab64      897c2464       mov dword [rsp + 0x64], edi
0x0000ab68      4889f7         mov rdi, rsi
0x0000ab6b      4889742410     mov qword [rsp + 0x10], rsi
0x0000ab70      89542420       mov dword [rsp + 0x20], edx
0x0000ab74      884c2463       mov byte [rsp + 0x63], cl
0x0000ab78      64488b042528.  mov rax, qword fs:[0x28]
0x0000ab81      4889442478     mov qword [rsp + 0x78], rax
0x0000ab86      31c0           xor eax, eax
0x0000ab88      e8030a0000     call sym.last_component
0x0000ab8d      4889c7         mov rdi, rax
0x0000ab90      4989c6         mov r14, rax
0x0000ab93      e8687dffff     call sym.imp.strlen
0x0000ab98      488b3de1f920.  mov rdi, qword [obj.simple_backup_suffix] ; [0x21a580:8]=0
0x0000ab9f      4929de         sub r14, rbx
0x0000aba2      4c01f0         add rax, r14
0x0000aba5      4889442418     mov qword [rsp + 0x18], rax
0x0000abaa      4885ff         test rdi, rdi
0x0000abad      0f8481050000   je 0xb134
0x0000abb3      e8487dffff     call sym.imp.strlen
0x0000abb8      488b742418     mov rsi, qword [rsp + 0x18]
0x0000abbd      4883c001       add rax, 1
0x0000abc1      4883f809       cmp rax, 9
0x0000abc5      4889442450     mov qword [rsp + 0x50], rax
0x0000abca      488d5601       lea rdx, [rsi + 1]
0x0000abce      4889c6         mov rsi, rax
0x0000abd1      b809000000     mov eax, 9
0x0000abd6      480f43c6       cmovae rax, rsi
0x0000abda      4801d0         add rax, rdx
0x0000abdd      4889542438     mov qword [rsp + 0x38], rdx
0x0000abe2      4889c7         mov rdi, rax
0x0000abe5      4889442440     mov qword [rsp + 0x40], rax
0x0000abea      e8d17fffff     call sym.imp.malloc
0x0000abef      4885c0         test rax, rax
0x0000abf2      4989c7         mov r15, rax
0x0000abf5      0f84e5020000   je 0xaee0
0x0000abfb      488d442474     lea rax, [rsp + 0x74]
0x0000ac00      c7442474ffff.  mov dword [rsp + 0x74], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x0000ac08      48c744244800.  mov qword [rsp + 0x48], 0
0x0000ac11      4531ed         xor r13d, r13d
0x0000ac14      4889442468     mov qword [rsp + 0x68], rax
0x0000ac19      488b542438     mov rdx, qword [rsp + 0x38]
0x0000ac1e      488b742410     mov rsi, qword [rsp + 0x10]
0x0000ac23      4c89ff         mov rdi, r15
0x0000ac26      e8357fffff     call sym.imp.memcpy
0x0000ac2b      837c242001     cmp dword [rsp + 0x20], 1
0x0000ac30      0f84da020000   je 0xaf10
0x0000ac36      4b8d2c37       lea rbp, [r15 + r14]
0x0000ac3a      4889ef         mov rdi, rbp
0x0000ac3d      e8ae090000     call sym.base_len
0x0000ac42      4d85ed         test r13, r13
0x0000ac45      4989c4         mov r12, rax
0x0000ac48      0f84a2030000   je 0xaff0
0x0000ac4e      4c89ef         mov rdi, r13
0x0000ac51      e8ea7dffff     call sym.imp.rewinddir
0x0000ac56      488b442440     mov rax, qword [rsp + 0x40]
0x0000ac5b      48c744242801.  mov qword [rsp + 0x28], 1
0x0000ac64      c74424240200.  mov dword [rsp + 0x24], 2
0x0000ac6c      4889442430     mov qword [rsp + 0x30], rax
0x0000ac71      498d442404     lea rax, [r12 + 4]
0x0000ac76      4889442408     mov qword [rsp + 8], rax
0x0000ac7b      0f1f440000     nop dword [rax + rax]
0x0000ac80      4c89ef         mov rdi, r13
0x0000ac83      e8287fffff     call sym.imp.readdir
0x0000ac88      4885c0         test rax, rax
0x0000ac8b      0f84af010000   je 0xae40
0x0000ac91      488d5813       lea rbx, [rax + 0x13]
0x0000ac95      4889df         mov rdi, rbx
0x0000ac98      e8637cffff     call sym.imp.strlen
0x0000ac9d      483b442408     cmp rax, qword [rsp + 8]
0x0000aca2      72dc           jb 0xac80
0x0000aca4      498d6c2402     lea rbp, [r12 + 2]
0x0000aca9      4b8d3c37       lea rdi, [r15 + r14]
0x0000acad      4889de         mov rsi, rbx
0x0000acb0      4889ea         mov rdx, rbp
0x0000acb3      e8d87dffff     call sym.imp.memcmp
0x0000acb8      85c0           test eax, eax
0x0000acba      75c4           jne 0xac80
0x0000acbc      4801eb         add rbx, rbp
0x0000acbf      0fb603         movzx eax, byte [rbx]
0x0000acc2      8d50cf         lea edx, [rax - 0x31]
0x0000acc5      80fa08         cmp dl, 8
0x0000acc8      77b6           ja 0xac80
0x0000acca      3c39           cmp al, 0x39
0x0000accc      0fbe4301       movsx eax, byte [rbx + 1]
0x0000acd0      bd01000000     mov ebp, 1
0x0000acd5      410f94c0       sete r8b
0x0000acd9      89c1           mov ecx, eax
0x0000acdb      83e830         sub eax, 0x30
0x0000acde      83f809         cmp eax, 9
0x0000ace1      7720           ja 0xad03
0x0000ace3      0f1f440000     nop dword [rax + rax]
0x0000ace8      80f939         cmp cl, 0x39
0x0000aceb      0f94c0         sete al
0x0000acee      4883c501       add rbp, 1
0x0000acf2      4121c0         and r8d, eax
0x0000acf5      0fbe042b       movsx eax, byte [rbx + rbp]
0x0000acf9      89c1           mov ecx, eax
0x0000acfb      83e830         sub eax, 0x30
0x0000acfe      83f809         cmp eax, 9
0x0000ad01      76e5           jbe 0xace8
0x0000ad03      80f97e         cmp cl, 0x7e
0x0000ad06      0f8574ffffff   jne 0xac80
0x0000ad0c      807c2b0100     cmp byte [rbx + rbp + 1], 0
0x0000ad11      0f8569ffffff   jne 0xac80
0x0000ad17      488b542428     mov rdx, qword [rsp + 0x28]
0x0000ad1c      4839ea         cmp rdx, rbp
0x0000ad1f      722b           jb 0xad4c
0x0000ad21      4488442458     mov byte [rsp + 0x58], r8b
0x0000ad26      0f8554ffffff   jne 0xac80
0x0000ad2c      488b442418     mov rax, qword [rsp + 0x18]
0x0000ad31      4889de         mov rsi, rbx
0x0000ad34      498d7c0702     lea rdi, [r15 + rax + 2]
0x0000ad39      e8527dffff     call sym.imp.memcmp
0x0000ad3e      85c0           test eax, eax
0x0000ad40      440fb6442458   movzx r8d, byte [rsp + 0x58]
0x0000ad46      0f8f34ffffff   jg 0xac80
0x0000ad4c      410fb6f0       movzx esi, r8b
0x0000ad50      450fb6c8       movzx r9d, r8b
0x0000ad54      89742424       mov dword [rsp + 0x24], esi
0x0000ad58      488b742418     mov rsi, qword [rsp + 0x18]
0x0000ad5d      498d0429       lea rax, [r9 + rbp]
0x0000ad61      4889442428     mov qword [rsp + 0x28], rax
0x0000ad66      488d4c0604     lea rcx, [rsi + rax + 4]
0x0000ad6b      483b4c2430     cmp rcx, qword [rsp + 0x30]
0x0000ad70      0f8632030000   jbe 0xb0a8
0x0000ad76      ba02000000     mov edx, 2
0x0000ad7b      31f6           xor esi, esi
0x0000ad7d      4889d0         mov rax, rdx
0x0000ad80      48f7e1         mul rcx
0x0000ad83      0f80ca030000   jo 0xb153
0x0000ad89      4885c0         test rax, rax
0x0000ad8c      0f88ae020000   js 0xb040
0x0000ad92      4885f6         test rsi, rsi
0x0000ad95      0f85a5020000   jne 0xb040
0x0000ad9b      488d0409       lea rax, [rcx + rcx]
0x0000ad9f      4889442430     mov qword [rsp + 0x30], rax
0x0000ada4      488b742430     mov rsi, qword [rsp + 0x30]
0x0000ada9      4c89ff         mov rdi, r15
0x0000adac      4c894c2458     mov qword [rsp + 0x58], r9
0x0000adb1      e86a7effff     call sym.imp.realloc
0x0000adb6      4885c0         test rax, rax
0x0000adb9      4989c0         mov r8, rax
0x0000adbc      4c8b4c2458     mov r9, qword [rsp + 0x58]
0x0000adc1      0f8489020000   je 0xb050
0x0000adc7      488b442418     mov rax, qword [rsp + 0x18]
0x0000adcc      488d5502       lea rdx, [rbp + 2]
0x0000add0      4c89442458     mov qword [rsp + 0x58], r8
0x0000add5      4889de         mov rsi, rbx
0x0000add8      4c01c0         add rax, r8
0x0000addb      41b82e7e0000   mov r8d, 0x7e2e                         ; '.~'
0x0000ade1      4a8d4c0802     lea rcx, [rax + r9 + 2]
0x0000ade6      66448900       mov word [rax], r8w
0x0000adea      c6400230       mov byte [rax + 2], 0x30                ; '0'
                                                                       ; [0x30:1]=0
0x0000adee      4889cf         mov rdi, rcx
0x0000adf1      e86a7dffff     call sym.imp.memcpy
0x0000adf6      4801c5         add rbp, rax
0x0000adf9      4c8b442458     mov r8, qword [rsp + 0x58]
0x0000adfe      0fb655ff       movzx edx, byte [rbp - 1]
0x0000ae02      488d45ff       lea rax, [rbp - 1]
0x0000ae06      80fa39         cmp dl, 0x39
0x0000ae09      7514           jne 0xae1f
0x0000ae0b      0f1f440000     nop dword [rax + rax]
0x0000ae10      c60030         mov byte [rax], 0x30                    ; '0'
                                                                       ; [0x30:1]=0
0x0000ae13      4883e801       sub rax, 1
0x0000ae17      0fb610         movzx edx, byte [rax]
0x0000ae1a      80fa39         cmp dl, 0x39
0x0000ae1d      74f1           je 0xae10
0x0000ae1f      83c201         add edx, 1
0x0000ae22      4c89ef         mov rdi, r13
0x0000ae25      4d89c7         mov r15, r8
0x0000ae28      8810           mov byte [rax], dl
0x0000ae2a      e8817dffff     call sym.imp.readdir
0x0000ae2f      4885c0         test rax, rax
0x0000ae32      0f8559feffff   jne 0xac91
0x0000ae38      0f1f84000000.  nop dword [rax + rax]
0x0000ae40      8b442424       mov eax, dword [rsp + 0x24]
0x0000ae44      83f802         cmp eax, 2
0x0000ae47      0f84e3000000   je 0xaf30
0x0000ae4d      83f803         cmp eax, 3
0x0000ae50      0f84fa010000   je 0xb050
0x0000ae56      83f801         cmp eax, 1
0x0000ae59      0f8401010000   je 0xaf60
0x0000ae5f      807c246300     cmp byte [rsp + 0x63], 0
0x0000ae64      0f84b4020000   je 0xb11e
0x0000ae6a      8b542474       mov edx, dword [rsp + 0x74]
0x0000ae6e      4b8d0c37       lea rcx, [r15 + r14]
0x0000ae72      85d2           test edx, edx
0x0000ae74      7913           jns 0xae89
0x0000ae76      c74424749cff.  mov dword [rsp + 0x74], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x0000ae7e      4c89f9         mov rcx, r15
0x0000ae81      ba9cffffff     mov edx, 0xffffff9c                     ; 4294967196
0x0000ae86      4531f6         xor r14d, r14d
0x0000ae89      4531c0         xor r8d, r8d
0x0000ae8c      837c242001     cmp dword [rsp + 0x20], 1
0x0000ae91      488b742410     mov rsi, qword [rsp + 0x10]
0x0000ae96      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x0000ae9b      410f95c0       setne r8b
0x0000ae9f      e8fc3e0000     call sym.renameatu
0x0000aea4      85c0           test eax, eax
0x0000aea6      0f8472020000   je 0xb11e
0x0000aeac      e8bf78ffff     call sym.imp.__errno_location
0x0000aeb1      8b28           mov ebp, dword [rax]
0x0000aeb3      83fd11         cmp ebp, 0x11
0x0000aeb6      0f845dfdffff   je 0xac19
0x0000aebc      4d85ed         test r13, r13
0x0000aebf      4889c3         mov rbx, rax
0x0000aec2      7408           je 0xaecc
0x0000aec4      4c89ef         mov rdi, r13
0x0000aec7      e8947bffff     call sym.imp.closedir
0x0000aecc      4c89ff         mov rdi, r15
0x0000aecf      4531ff         xor r15d, r15d
0x0000aed2      e8397fffff     call sym..plt.got
0x0000aed7      892b           mov dword [rbx], ebp
0x0000aed9      0f1f80000000.  nop dword [rax]
0x0000aee0      488b742478     mov rsi, qword [rsp + 0x78]
0x0000aee5      644833342528.  xor rsi, qword fs:[0x28]
0x0000aeee      4c89f8         mov rax, r15
0x0000aef1      0f8566020000   jne 0xb15d
0x0000aef7      4881c4880000.  add rsp, 0x88
0x0000aefe      5b             pop rbx
0x0000aeff      5d             pop rbp
0x0000af00      415c           pop r12
0x0000af02      415d           pop r13
0x0000af04      415e           pop r14
0x0000af06      415f           pop r15
0x0000af08      c3             ret
0x0000af09      0f1f80000000.  nop dword [rax]
0x0000af10      488b442418     mov rax, qword [rsp + 0x18]
0x0000af15      488b542450     mov rdx, qword [rsp + 0x50]
0x0000af1a      488b355ff620.  mov rsi, qword [obj.simple_backup_suffix] ; [0x21a580:8]=0
0x0000af21      498d3c07       lea rdi, [r15 + rax]
0x0000af25      e8367cffff     call sym.imp.memcpy
0x0000af2a      e930ffffff     jmp 0xae5f
0x0000af2f      90             nop
0x0000af30      837c242002     cmp dword [rsp + 0x20], 2
0x0000af35      7529           jne 0xaf60
0x0000af37      488b442418     mov rax, qword [rsp + 0x18]
0x0000af3c      488b542450     mov rdx, qword [rsp + 0x50]
0x0000af41      488b3538f620.  mov rsi, qword [obj.simple_backup_suffix] ; [0x21a580:8]=0
0x0000af48      498d3c07       lea rdi, [r15 + rax]
0x0000af4c      e80f7cffff     call sym.imp.memcpy
0x0000af51      c74424200100.  mov dword [rsp + 0x20], 1
0x0000af59      0f1f80000000.  nop dword [rax]
0x0000af60      4c89ff         mov rdi, r15
0x0000af63      e828060000     call sym.last_component
0x0000af68      4889c7         mov rdi, rax
0x0000af6b      4889c3         mov rbx, rax
0x0000af6e      e87d060000     call sym.base_len
0x0000af73      4883f80e       cmp rax, 0xe
0x0000af77      4889c5         mov rbp, rax
0x0000af7a      0f86dffeffff   jbe 0xae5f
0x0000af80      48837c244800   cmp qword [rsp + 0x48], 0
0x0000af86      0f85e4000000   jne 0xb070
0x0000af8c      8b7c2474       mov edi, dword [rsp + 0x74]
0x0000af90      897c2408       mov dword [rsp + 8], edi
0x0000af94      e8d777ffff     call sym.imp.__errno_location
0x0000af99      8b7c2408       mov edi, dword [rsp + 8]
0x0000af9d      4989c4         mov r12, rax
0x0000afa0      85ff           test edi, edi
0x0000afa2      0f883a010000   js 0xb0e2
0x0000afa8      c70000000000   mov dword [rax], 0
0x0000afae      be03000000     mov esi, 3
0x0000afb3      e8587bffff     call sym.imp.fpathconf
0x0000afb8      418b0c24       mov ecx, dword [r12]
0x0000afbc      31d2           xor edx, edx
0x0000afbe      85c9           test ecx, ecx
0x0000afc0      0f94c2         sete dl
0x0000afc3      4829d0         sub rax, rdx
0x0000afc6      4885c0         test rax, rax
0x0000afc9      4889442448     mov qword [rsp + 0x48], rax
0x0000afce      0f899c000000   jns 0xb070
0x0000afd4      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000afd8      0f8567010000   jne 0xb145
0x0000afde      48c7442448ff.  mov qword [rsp + 0x48], 0xffffffffffffffff
0x0000afe7      e973feffff     jmp 0xae5f
0x0000afec      0f1f4000       nop dword [rax]
0x0000aff0      488b4c2468     mov rcx, qword [rsp + 0x68]
0x0000aff5      8b7c2464       mov edi, dword [rsp + 0x64]
0x0000aff9      41b92e000000   mov r9d, 0x2e                           ; '.'
0x0000afff      31d2           xor edx, edx
0x0000b001      0fb75d00       movzx ebx, word [rbp]
0x0000b005      4c89fe         mov rsi, r15
0x0000b008      6644894d00     mov word [rbp], r9w
0x0000b00d      e8fe1e0000     call sym.opendirat
0x0000b012      4885c0         test rax, rax
0x0000b015      4989c5         mov r13, rax
0x0000b018      4a8d542500     lea rdx, [rbp + r12]
0x0000b01d      0f848d000000   je 0xb0b0
0x0000b023      66895d00       mov word [rbp], bx
0x0000b027      c7022e7e317e   mov dword [rdx], 0x7e317e2e             ; '.~1~'
                                                                       ; [0x7e317e2e:4]=-1
0x0000b02d      c6420400       mov byte [rdx + 4], 0
0x0000b031      e920fcffff     jmp 0xac56
0x0000b036      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b040      48894c2430     mov qword [rsp + 0x30], rcx
0x0000b045      e95afdffff     jmp 0xada4
0x0000b04a      660f1f440000   nop word [rax + rax]
0x0000b050      4c89ff         mov rdi, r15
0x0000b053      4531ff         xor r15d, r15d
0x0000b056      e8b57dffff     call sym..plt.got
0x0000b05b      e81077ffff     call sym.imp.__errno_location
0x0000b060      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000b066      e975feffff     jmp 0xaee0
0x0000b06b      0f1f440000     nop dword [rax + rax]
0x0000b070      483b6c2448     cmp rbp, qword [rsp + 0x48]
0x0000b075      0f86e4fdffff   jbe 0xae5f
0x0000b07b      488b442418     mov rax, qword [rsp + 0x18]
0x0000b080      488b742448     mov rsi, qword [rsp + 0x48]
0x0000b085      4c01f8         add rax, r15
0x0000b088      488d56ff       lea rdx, [rsi - 1]
0x0000b08c      4829d8         sub rax, rbx
0x0000b08f      4839f0         cmp rax, rsi
0x0000b092      480f43c2       cmovae rax, rdx
0x0000b096      c604037e       mov byte [rbx + rax], 0x7e              ; '~'
                                                                       ; [0x7e:1]=0
0x0000b09a      c644030100     mov byte [rbx + rax + 1], 0
0x0000b09f      e9bbfdffff     jmp 0xae5f
0x0000b0a4      0f1f4000       nop dword [rax]
0x0000b0a8      4d89f8         mov r8, r15
0x0000b0ab      e917fdffff     jmp 0xadc7
0x0000b0b0      4889542408     mov qword [rsp + 8], rdx
0x0000b0b5      e8b676ffff     call sym.imp.__errno_location
0x0000b0ba      83380c         cmp dword [rax], 0xc
0x0000b0bd      488b542408     mov rdx, qword [rsp + 8]
0x0000b0c2      66895d00       mov word [rbp], bx
0x0000b0c6      c7022e7e317e   mov dword [rdx], 0x7e317e2e             ; '.~1~'
                                                                       ; [0x7e317e2e:4]=-1
0x0000b0cc      c6420400       mov byte [rdx + 4], 0
0x0000b0d0      0f94c0         sete al
0x0000b0d3      0fb6c0         movzx eax, al
0x0000b0d6      83c002         add eax, 2
0x0000b0d9      89442424       mov dword [rsp + 0x24], eax
0x0000b0dd      e95efdffff     jmp 0xae40
0x0000b0e2      0fb713         movzx edx, word [rbx]
0x0000b0e5      be2e000000     mov esi, 0x2e                           ; '.'
0x0000b0ea      4c89ff         mov rdi, r15
0x0000b0ed      668933         mov word [rbx], si
0x0000b0f0      c70000000000   mov dword [rax], 0
0x0000b0f6      be03000000     mov esi, 3
0x0000b0fb      89542408       mov dword [rsp + 8], edx
0x0000b0ff      e87c77ffff     call sym.imp.pathconf
0x0000b104      418b3c24       mov edi, dword [r12]
0x0000b108      8b542408       mov edx, dword [rsp + 8]
0x0000b10c      31c9           xor ecx, ecx
0x0000b10e      85ff           test edi, edi
0x0000b110      668913         mov word [rbx], dx
0x0000b113      0f94c1         sete cl
0x0000b116      4829c8         sub rax, rcx
0x0000b119      e9a8feffff     jmp 0xafc6
0x0000b11e      4d85ed         test r13, r13
0x0000b121      0f84b9fdffff   je 0xaee0
0x0000b127      4c89ef         mov rdi, r13
0x0000b12a      e83179ffff     call sym.imp.closedir
0x0000b12f      e9acfdffff     jmp 0xaee0
0x0000b134      e8c7f9ffff     call sym.set_simple_backup_suffix
0x0000b139      488b3d40f420.  mov rdi, qword [obj.simple_backup_suffix] ; [0x21a580:8]=0
0x0000b140      e96efaffff     jmp 0xabb3
0x0000b145      48c74424480e.  mov qword [rsp + 0x48], 0xe             ; [0xe:8]=0x1003e00030000
0x0000b14e      e928ffffff     jmp 0xb07b
0x0000b153      be01000000     mov esi, 1
0x0000b158      e92cfcffff     jmp 0xad89
0x0000b15d      e8ce77ffff     call sym.imp.__stack_chk_fail
0x0000b162      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b16c      0f1f4000       nop dword [rax]
;-- backup_file_rename:
0x0000b170      b901000000     mov ecx, 1                              ; ../coreutils-8.31/lib/backup-rename.c:29
0x0000b175      e9d6f9ffff     jmp sym.backupfile_internal
0x0000b17a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/backup-rename.c:30
;-- get_version.part.0:
0x0000b180      4883ec08       sub rsp, 8
0x0000b184      4c8b0d9dee20.  mov r9, qword [obj.argmatch_die]        ; [0x21a028:8]=0xa770 sym.__argmatch_die ; "p\xa7"
0x0000b18b      488d15eee720.  lea rdx, obj.backup_args                ; 0x219980
0x0000b192      488d0d47a000.  lea rcx, obj.backup_types               ; 0x151e0
0x0000b199      41b804000000   mov r8d, 4
0x0000b19f      e89cf8ffff     call sym.__xargmatch_internal
0x0000b1a4      488d1535a000.  lea rdx, obj.backup_types               ; 0x151e0
0x0000b1ab      8b0482         mov eax, dword [rdx + rax*4]
0x0000b1ae      4883c408       add rsp, 8
0x0000b1b2      c3             ret
0x0000b1b3      0f1f00         nop dword [rax]
0x0000b1b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- find_backup_file_name:
0x0000b1c0      4883ec08       sub rsp, 8
0x0000b1c4      31c9           xor ecx, ecx
0x0000b1c6      e885f9ffff     call sym.backupfile_internal
0x0000b1cb      4885c0         test rax, rax
0x0000b1ce      7405           je 0xb1d5
0x0000b1d0      4883c408       add rsp, 8
0x0000b1d4      c3             ret
0x0000b1d5      e896600000     call sym.xalloc_die
0x0000b1da      660f1f440000   nop word [rax + rax]
;-- get_version:
0x0000b1e0      4885f6         test rsi, rsi
0x0000b1e3      740b           je 0xb1f0
0x0000b1e5      803e00         cmp byte [rsi], 0
0x0000b1e8      7406           je 0xb1f0
0x0000b1ea      eb94           jmp sym.get_version.part.0
0x0000b1ec      0f1f4000       nop dword [rax]
0x0000b1f0      b802000000     mov eax, 2
0x0000b1f5      c3             ret
0x0000b1f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xget_version:
0x0000b200      4885f6         test rsi, rsi
0x0000b203      7405           je 0xb20a
0x0000b205      803e00         cmp byte [rsi], 0
0x0000b208      7528           jne 0xb232
0x0000b20a      488d3d979f00.  lea rdi, [0x000151a8]                   ; "VERSION_CONTROL"
0x0000b211      4883ec08       sub rsp, 8
0x0000b215      e82675ffff     call sym.imp.getenv
0x0000b21a      4885c0         test rax, rax
0x0000b21d      7421           je 0xb240
0x0000b21f      803800         cmp byte [rax], 0
0x0000b222      741c           je 0xb240
0x0000b224      488d3d7c9f00.  lea rdi, str.VERSION_CONTROL            ; 0x151a7 ; "$VERSION_CONTROL"
0x0000b22b      4889c6         mov rsi, rax
0x0000b22e      4883c408       add rsp, 8
0x0000b232      e949ffffff     jmp sym.get_version.part.0
0x0000b237      660f1f840000.  nop word [rax + rax]
0x0000b240      b802000000     mov eax, 2
0x0000b245      4883c408       add rsp, 8
0x0000b249      c3             ret
0x0000b24a      660f1f440000   nop word [rax + rax]
;-- buffer_lcm:
0x0000b250      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/buffer-lcm.c:29
0x0000b253      4889d1         mov rcx, rdx
0x0000b256      7520           jne 0xb278                              ; ../coreutils-8.31/lib/buffer-lcm.c:33
0x0000b258      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/buffer-lcm.c:34
0x0000b25b      bf00200000     mov edi, 0x2000
0x0000b260      480f45fe       cmovne rdi, rsi
0x0000b264      4839cf         cmp rdi, rcx                            ; ../coreutils-8.31/lib/buffer-lcm.c:58
0x0000b267      480f46cf       cmovbe rcx, rdi
0x0000b26b      4989c8         mov r8, rcx
0x0000b26e      4c89c0         mov rax, r8                             ; ../coreutils-8.31/lib/buffer-lcm.c:59
0x0000b271      c3             ret
0x0000b272      660f1f440000   nop word [rax + rax]
0x0000b278      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/buffer-lcm.c:37
0x0000b27b      74e7           je 0xb264
0x0000b27d      4989f0         mov r8, rsi
0x0000b280      4889f8         mov rax, rdi
0x0000b283      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/buffer-lcm.c:45
0x0000b285      49f7f0         div r8
0x0000b288      4885d2         test rdx, rdx
0x0000b28b      752b           jne 0xb2b8
0x0000b28d      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/buffer-lcm.c:49
0x0000b28f      4889f8         mov rax, rdi
0x0000b292      49f7f0         div r8
0x0000b295      4989f0         mov r8, rsi                             ; ../coreutils-8.31/lib/buffer-lcm.c:50
0x0000b298      4c0fafc0       imul r8, rax
0x0000b29c      4989c1         mov r9, rax                             ; ../coreutils-8.31/lib/buffer-lcm.c:49
0x0000b29f      4939c8         cmp r8, rcx                             ; ../coreutils-8.31/lib/buffer-lcm.c:51
0x0000b2a2      77c0           ja 0xb264
0x0000b2a4      31d2           xor edx, edx
0x0000b2a6      4c89c0         mov rax, r8
0x0000b2a9      48f7f6         div rsi
0x0000b2ac      4c39c8         cmp rax, r9
0x0000b2af      75b3           jne 0xb264
0x0000b2b1      ebbb           jmp 0xb26e
0x0000b2b3      0f1f440000     nop dword [rax + rax]
0x0000b2b8      4c89c0         mov rax, r8
0x0000b2bb      4989d0         mov r8, rdx
0x0000b2be      ebc3           jmp 0xb283
;-- close_stdin_set_file_name:
0x0000b2c0      48893dc1f220.  mov qword [obj.file_name], rdi          ; [0x21a588:8]=0
0x0000b2c7      c3             ret                                     ; ../coreutils-8.31/lib/closein.c:46
0x0000b2c8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdin:
0x0000b2d0      4154           push r12                                ; ../coreutils-8.31/lib/closein.c:80
0x0000b2d2      55             push rbp
0x0000b2d3      53             push rbx
0x0000b2d4      488b1dd5ed20.  mov rbx, qword [obj.stdin]              ; ../coreutils-8.31/lib/closein.c:87 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x21a0b0:8]=0
0x0000b2db      4889df         mov rdi, rbx
0x0000b2de      e8ad600000     call sym.freadahead
0x0000b2e3      4885c0         test rax, rax
0x0000b2e6      0f859c000000   jne 0xb388
0x0000b2ec      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/closein.c:94
0x0000b2ef      e82c620000     call sym.close_stream
0x0000b2f4      85c0           test eax, eax
0x0000b2f6      7530           jne 0xb328
0x0000b2f8      5b             pop rbx                                 ; ../coreutils-8.31/lib/closein.c:112
0x0000b2f9      5d             pop rbp
0x0000b2fa      415c           pop r12
0x0000b2fc      e9ff000000     jmp sym.close_stdout                    ; ../coreutils-8.31/lib/closein.c:108
0x0000b301      0f1f80000000.  nop dword [rax]
0x0000b308      e843600000     call sym.rpl_fflush                     ; ../coreutils-8.31/lib/closein.c:91
0x0000b30d      85c0           test eax, eax
0x0000b30f      488b3d9aed20.  mov rdi, qword [obj.stdin]              ; ../coreutils-8.31/lib/closein.c:94 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x21a0b0:8]=0
0x0000b316      0f848a000000   je 0xb3a6                               ; ../coreutils-8.31/lib/closein.c:91
0x0000b31c      e8ff610000     call sym.close_stream                   ; ../coreutils-8.31/lib/closein.c:94
0x0000b321      0f1f80000000.  nop dword [rax]
0x0000b328      488d35d19e00.  lea rsi, str.error_closing_file         ; ../coreutils-8.31/lib/closein.c:100 ; 0x15200 ; "error closing file"
0x0000b32f      31ff           xor edi, edi
0x0000b331      ba05000000     mov edx, 5
0x0000b336      e8a575ffff     call sym.imp.dcgettext
0x0000b33b      488b1d46f220.  mov rbx, qword [obj.file_name]          ; ../coreutils-8.31/lib/closein.c:101 ; [0x21a588:8]=0
0x0000b342      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/closein.c:100
0x0000b345      e82674ffff     call sym.imp.__errno_location
0x0000b34a      4889c5         mov rbp, rax
0x0000b34d      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/closein.c:101
0x0000b350      746e           je 0xb3c0
0x0000b352      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/closein.c:102
0x0000b355      e826380000     call sym.quotearg_colon
0x0000b35a      8b7500         mov esi, dword [rbp]
0x0000b35d      488d15af9e00.  lea rdx, str.s:__s                      ; 0x15213 ; "%s: %s"
0x0000b364      4889c1         mov rcx, rax
0x0000b367      4d89e0         mov r8, r12
0x0000b36a      31ff           xor edi, edi
0x0000b36c      31c0           xor eax, eax
0x0000b36e      e83d79ffff     call sym.imp.error
0x0000b373      e888000000     call sym.close_stdout                   ; ../coreutils-8.31/lib/closein.c:108
0x0000b378      8b3db2ec2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closein.c:111 ; [0x21a030:4]=1
0x0000b37e      e81d74ffff     call sym.imp._exit
0x0000b383      0f1f440000     nop dword [rax + rax]
0x0000b388      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/closein.c:91
0x0000b38a      4889df         mov rdi, rbx
0x0000b38d      ba01000000     mov edx, 1
0x0000b392      e829600000     call sym.rpl_fseeko
0x0000b397      85c0           test eax, eax
0x0000b399      488b3d10ed20.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x21a0b0:8]=0
0x0000b3a0      0f8462ffffff   je 0xb308
0x0000b3a6      e875610000     call sym.close_stream                   ; ../coreutils-8.31/lib/closein.c:94
0x0000b3ab      85c0           test eax, eax
0x0000b3ad      0f8575ffffff   jne 0xb328
0x0000b3b3      5b             pop rbx                                 ; ../coreutils-8.31/lib/closein.c:112
0x0000b3b4      5d             pop rbp
0x0000b3b5      415c           pop r12
0x0000b3b7      e944000000     jmp sym.close_stdout                    ; ../coreutils-8.31/lib/closein.c:108
0x0000b3bc      0f1f4000       nop dword [rax]
0x0000b3c0      8b30           mov esi, dword [rax]                    ; ../coreutils-8.31/lib/closein.c:105
0x0000b3c2      488d15c49d00.  lea rdx, [0x0001518d]                   ; "%s"
0x0000b3c9      4c89e1         mov rcx, r12
0x0000b3cc      31ff           xor edi, edi
0x0000b3ce      31c0           xor eax, eax
0x0000b3d0      e8db78ffff     call sym.imp.error
0x0000b3d5      eb9c           jmp 0xb373
0x0000b3d7      660f1f840000.  nop word [rax + rax]
;-- close_stdout_set_file_name:
0x0000b3e0      48893db1f120.  mov qword [obj.file_name_1], rdi        ; ../coreutils-8.31/lib/closeout.c:52 ; [0x21a598:8]=0
0x0000b3e7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x0000b3e8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x0000b3f0      40883d99f120.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x21a590:1]=0
0x0000b3f7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x0000b3f8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x0000b400      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x0000b401      53             push rbx
0x0000b402      4883ec08       sub rsp, 8
0x0000b406      488b3d9bec20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x0000b40d      e80e610000     call sym.close_stream
0x0000b412      85c0           test eax, eax
0x0000b414      7416           je 0xb42c
0x0000b416      e85573ffff     call sym.imp.__errno_location
0x0000b41b      803d6ef12000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x21a590:1]=0
0x0000b422      4889c3         mov rbx, rax
0x0000b425      741c           je 0xb443
0x0000b427      833820         cmp dword [rax], 0x20
0x0000b42a      7517           jne 0xb443
0x0000b42c      488b3dadec20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a0e0:8]=0
0x0000b433      e8e8600000     call sym.close_stream
0x0000b438      85c0           test eax, eax
0x0000b43a      7546           jne 0xb482
0x0000b43c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x0000b440      5b             pop rbx
0x0000b441      5d             pop rbp
0x0000b442      c3             ret
0x0000b443      488d35d09d00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x1521a ; "write error"
0x0000b44a      31ff           xor edi, edi
0x0000b44c      ba05000000     mov edx, 5
0x0000b451      e88a74ffff     call sym.imp.dcgettext
0x0000b456      488b3d3bf120.  mov rdi, qword [obj.file_name_1]        ; ../coreutils-8.31/lib/closeout.c:123 ; [0x21a598:8]=0
0x0000b45d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x0000b460      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x0000b463      7428           je 0xb48d
0x0000b465      e816370000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000b46a      8b33           mov esi, dword [rbx]
0x0000b46c      488d15a09d00.  lea rdx, str.s:__s                      ; 0x15213 ; "%s: %s"
0x0000b473      4889c1         mov rcx, rax
0x0000b476      4989e8         mov r8, rbp
0x0000b479      31ff           xor edi, edi
0x0000b47b      31c0           xor eax, eax
0x0000b47d      e82e78ffff     call sym.imp.error
0x0000b482      8b3da8eb2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x21a030:4]=1
0x0000b488      e81373ffff     call sym.imp._exit
0x0000b48d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000b48f      488d15f79c00.  lea rdx, [0x0001518d]                   ; "%s"
0x0000b496      4889c1         mov rcx, rax
0x0000b499      31ff           xor edi, edi
0x0000b49b      31c0           xor eax, eax
0x0000b49d      e80e78ffff     call sym.imp.error
0x0000b4a2      ebde           jmp 0xb482
0x0000b4a4      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b4ae      6690           nop
;-- dir_name:
0x0000b4b0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/dirname.c:33
0x0000b4b4      e877000000     call sym.mdir_name                      ; ../coreutils-8.31/lib/dirname.c:34
0x0000b4b9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname.c:35
0x0000b4bc      7405           je 0xb4c3
0x0000b4be      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname.c:38
0x0000b4c2      c3             ret
0x0000b4c3      e8a85d0000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/dirname.c:36
0x0000b4c8      0f1f84000000.  nop dword [rax + rax]
;-- dir_len:
0x0000b4d0      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x0000b4d1      53             push rbx
0x0000b4d2      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x0000b4d4      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x0000b4d7      4883ec08       sub rsp, 8
0x0000b4db      803f2f         cmp byte [rdi], 0x2f                    ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x0000b4de      400f94c5       sete bpl
0x0000b4e2      e8a9000000     call sym.last_component                 ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x0000b4e7      4889c1         mov rcx, rax
0x0000b4ea      4829d9         sub rcx, rbx
0x0000b4ed      4839e9         cmp rcx, rbp
0x0000b4f0      762e           jbe 0xb520
0x0000b4f2      8078ff2f       cmp byte [rax - 1], 0x2f                ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x0000b4f6      488d51ff       lea rdx, [rcx - 1]
0x0000b4fa      7412           je 0xb50e
0x0000b4fc      eb22           jmp 0xb520
0x0000b4fe      6690           nop
0x0000b500      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x0000b505      488d42ff       lea rax, [rdx - 1]
0x0000b509      7508           jne 0xb513
0x0000b50b      4889c2         mov rdx, rax
0x0000b50e      4839d5         cmp rbp, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x0000b511      75ed           jne 0xb500
0x0000b513      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x0000b517      4889d0         mov rax, rdx
0x0000b51a      5b             pop rbx
0x0000b51b      5d             pop rbp
0x0000b51c      c3             ret
0x0000b51d      0f1f00         nop dword [rax]
0x0000b520      4883c408       add rsp, 8
0x0000b524      4889ca         mov rdx, rcx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x0000b527      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x0000b52a      5b             pop rbx
0x0000b52b      5d             pop rbp
0x0000b52c      c3             ret
0x0000b52d      0f1f00         nop dword [rax]
;-- mdir_name:
0x0000b530      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:72
0x0000b531      53             push rbx
0x0000b532      4889fd         mov rbp, rdi
0x0000b535      4883ec08       sub rsp, 8
0x0000b539      e892ffffff     call sym.dir_len                        ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x0000b53e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x0000b541      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x0000b544      0f94c0         sete al                                 ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x0000b547      0fb6c0         movzx eax, al
0x0000b54a      488d7c0301     lea rdi, [rbx + rax + 1]                ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x0000b54f      e86c76ffff     call sym.imp.malloc
0x0000b554      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x0000b557      4889c1         mov rcx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x0000b55a      741a           je 0xb576                               ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x0000b55c      4889da         mov rdx, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000b55f      4889ee         mov rsi, rbp
0x0000b562      4889c7         mov rdi, rax
0x0000b565      e8f675ffff     call sym.imp.memcpy
0x0000b56a      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x0000b56d      4889c1         mov rcx, rax                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000b570      740e           je 0xb580                               ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x0000b572      c6041900       mov byte [rcx + rbx], 0                 ; ../coreutils-8.31/lib/dirname-lgpl.c:84
0x0000b576      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:86
0x0000b57a      4889c8         mov rax, rcx
0x0000b57d      5b             pop rbx
0x0000b57e      5d             pop rbp
0x0000b57f      c3             ret
0x0000b580      c6002e         mov byte [rax], 0x2e                    ; ../coreutils-8.31/lib/dirname-lgpl.c:83 ; '.'
                                                                       ; [0x2e:1]=0
0x0000b583      bb01000000     mov ebx, 1
0x0000b588      ebe8           jmp 0xb572
0x0000b58a      660f1f440000   nop word [rax + rax]
;-- last_component:
0x0000b590      0fb617         movzx edx, byte [rdi]                   ; ../coreutils-8.31/lib/basename-lgpl.c:31
0x0000b593      4889f8         mov rax, rdi
0x0000b596      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x0000b599      7511           jne 0xb5ac
0x0000b59b      0f1f440000     nop dword [rax + rax]
0x0000b5a0      4883c001       add rax, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:37
0x0000b5a4      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x0000b5a7      80fa2f         cmp dl, 0x2f
0x0000b5aa      74f4           je 0xb5a0
0x0000b5ac      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000b5ae      743a           je 0xb5ea
0x0000b5b0      4889c1         mov rcx, rax
0x0000b5b3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:34
0x0000b5b5      eb1e           jmp 0xb5d5
0x0000b5b7      660f1f840000.  nop word [rax + rax]
0x0000b5c0      4084f6         test sil, sil                           ; ../coreutils-8.31/lib/basename-lgpl.c:43
0x0000b5c3      7405           je 0xb5ca
0x0000b5c5      4889c8         mov rax, rcx
0x0000b5c8      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:46
0x0000b5ca      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000b5ce      0fb611         movzx edx, byte [rcx]
0x0000b5d1      84d2           test dl, dl
0x0000b5d3      7415           je 0xb5ea
0x0000b5d5      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:41
0x0000b5d8      75e6           jne 0xb5c0
0x0000b5da      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000b5de      0fb611         movzx edx, byte [rcx]
0x0000b5e1      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:42
0x0000b5e6      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000b5e8      75eb           jne 0xb5d5
0x0000b5ea      f3c3           ret                                     ; ../coreutils-8.31/lib/basename-lgpl.c:51
0x0000b5ec      0f1f4000       nop dword [rax]
;-- base_len:
0x0000b5f0      53             push rbx                                ; ../coreutils-8.31/lib/basename-lgpl.c:59
0x0000b5f1      4889fb         mov rbx, rdi
0x0000b5f4      e80773ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x0000b5f9      4883f801       cmp rax, 1
0x0000b5fd      760b           jbe 0xb60a
0x0000b5ff      807c03ff2f     cmp byte [rbx + rax - 1], 0x2f
0x0000b604      488d50ff       lea rdx, [rax - 1]
0x0000b608      740e           je 0xb618
0x0000b60a      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x0000b60b      c3             ret
0x0000b60c      0f1f4000       nop dword [rax]
0x0000b610      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x0000b613      0f1f440000     nop dword [rax + rax]
0x0000b618      4883fa01       cmp rdx, 1
0x0000b61c      7412           je 0xb630
0x0000b61e      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x0000b623      488d42ff       lea rax, [rdx - 1]
0x0000b627      74e7           je 0xb610
0x0000b629      4889d0         mov rax, rdx
0x0000b62c      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x0000b62d      c3             ret
0x0000b62e      6690           nop
0x0000b630      b801000000     mov eax, 1
0x0000b635      5b             pop rbx
0x0000b636      c3             ret
0x0000b637      660f1f840000.  nop word [rax + rax]
;-- strip_trailing_slashes:
0x0000b640      55             push rbp                                ; ../coreutils-8.31/lib/stripslash.c:32
0x0000b641      53             push rbx
0x0000b642      4889fd         mov rbp, rdi
0x0000b645      4883ec08       sub rsp, 8
0x0000b649      e842ffffff     call sym.last_component                 ; ../coreutils-8.31/lib/stripslash.c:33
0x0000b64e      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/stripslash.c:40
0x0000b651      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/stripslash.c:33
0x0000b654      480f44dd       cmove rbx, rbp                          ; ../coreutils-8.31/lib/stripslash.c:40
0x0000b658      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/stripslash.c:41
0x0000b65b      e890ffffff     call sym.base_len
0x0000b660      4801c3         add rbx, rax
0x0000b663      803b00         cmp byte [rbx], 0                       ; ../coreutils-8.31/lib/stripslash.c:42
0x0000b666      c60300         mov byte [rbx], 0                       ; ../coreutils-8.31/lib/stripslash.c:43
0x0000b669      0f95c0         setne al                                ; ../coreutils-8.31/lib/stripslash.c:42
0x0000b66c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/stripslash.c:45
0x0000b670      5b             pop rbx
0x0000b671      5d             pop rbp
0x0000b672      c3             ret
0x0000b673      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b67d      0f1f00         nop dword [rax]
;-- fdadvise:
0x0000b680      e9eb73ffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x0000b685      90             nop
0x0000b686      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x0000b690      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x0000b693      741b           je 0xb6b0
0x0000b695      53             push rbx
0x0000b696      89f3           mov ebx, esi
0x0000b698      e8e374ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x0000b69d      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x0000b69f      31d2           xor edx, edx
0x0000b6a1      31f6           xor esi, esi
0x0000b6a3      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x0000b6a4      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x0000b6a6      e9c573ffff     jmp sym.imp.posix_fadvise
0x0000b6ab      0f1f440000     nop dword [rax + rax]
0x0000b6b0      f3c3           ret
0x0000b6b2      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b6bc      0f1f4000       nop dword [rax]
;-- open_safer:
0x0000b6c0      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/open-safer.c:30
0x0000b6c4      4889542430     mov qword [rsp + 0x30], rdx
0x0000b6c9      31d2           xor edx, edx
0x0000b6cb      64488b042528.  mov rax, qword fs:[0x28]
0x0000b6d4      4889442418     mov qword [rsp + 0x18], rax
0x0000b6d9      31c0           xor eax, eax
0x0000b6db      40f6c640       test sil, 0x40                          ; ../coreutils-8.31/lib/open-safer.c:33 ; segment.PHDR
0x0000b6df      7527           jne 0xb708
0x0000b6e1      31c0           xor eax, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x0000b6e3      e8e875ffff     call sym.imp.open
0x0000b6e8      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/open-safer.c:45
0x0000b6ea      e861420000     call sym.fd_safer
0x0000b6ef      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/open-safer.c:46
0x0000b6f4      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000b6fd      752a           jne 0xb729
0x0000b6ff      4883c458       add rsp, 0x58
0x0000b703      c3             ret
0x0000b704      0f1f4000       nop dword [rax]
0x0000b708      488d442460     lea rax, [rsp + 0x60]                   ; ../coreutils-8.31/lib/open-safer.c:36
0x0000b70d      c70424100000.  mov dword [rsp], 0x10                   ; [0x10:4]=0x3e0003
0x0000b714      8b542430       mov edx, dword [rsp + 0x30]             ; ../coreutils-8.31/lib/open-safer.c:40
0x0000b718      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/open-safer.c:36
0x0000b71d      488d442420     lea rax, [rsp + 0x20]
0x0000b722      4889442410     mov qword [rsp + 0x10], rax
0x0000b727      ebb8           jmp 0xb6e1
0x0000b729      e80272ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/open-safer.c:46
0x0000b72e      6690           nop
;-- record_file:
0x0000b730      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/file-set.c:30
0x0000b733      747b           je 0xb7b0
0x0000b735      4155           push r13
0x0000b737      4154           push r12
0x0000b739      4989fd         mov r13, rdi
0x0000b73c      55             push rbp
0x0000b73d      53             push rbx
0x0000b73e      4989f4         mov r12, rsi
0x0000b741      bf18000000     mov edi, 0x18                           ; ../coreutils-8.31/lib/file-set.c:36
0x0000b746      4889d5         mov rbp, rdx
0x0000b749      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:30
0x0000b74d      e8ce580000     call sym.xmalloc                        ; ../coreutils-8.31/lib/file-set.c:36
0x0000b752      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/file-set.c:37
0x0000b755      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/file-set.c:36
0x0000b758      e8f35a0000     call sym.xstrdup                        ; ../coreutils-8.31/lib/file-set.c:37
0x0000b75d      488903         mov qword [rbx], rax
0x0000b760      488b4508       mov rax, qword [rbp + 8]                ; ../coreutils-8.31/lib/file-set.c:38
0x0000b764      4889de         mov rsi, rbx                            ; ../coreutils-8.31/lib/file-set.c:42
0x0000b767      4c89ef         mov rdi, r13
0x0000b76a      48894308       mov qword [rbx + 8], rax                ; ../coreutils-8.31/lib/file-set.c:38
0x0000b76e      488b4500       mov rax, qword [rbp]                    ; ../coreutils-8.31/lib/file-set.c:39
0x0000b772      48894310       mov qword [rbx + 0x10], rax
0x0000b776      e855140000     call sym.hash_insert                    ; ../coreutils-8.31/lib/file-set.c:42
0x0000b77b      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/file-set.c:43
0x0000b77e      7432           je 0xb7b2
0x0000b780      4839c3         cmp rbx, rax                            ; ../coreutils-8.31/lib/file-set.c:49
0x0000b783      741b           je 0xb7a0
0x0000b785      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:56
0x0000b789      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/file-set.c:53
0x0000b78c      5b             pop rbx                                 ; ../coreutils-8.31/lib/file-set.c:56
0x0000b78d      5d             pop rbp
0x0000b78e      415c           pop r12
0x0000b790      415d           pop r13
0x0000b792      e959170000     jmp sym.triple_free                     ; ../coreutils-8.31/lib/file-set.c:53
0x0000b797      660f1f840000.  nop word [rax + rax]
0x0000b7a0      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:56
0x0000b7a4      5b             pop rbx
0x0000b7a5      5d             pop rbp
0x0000b7a6      415c           pop r12
0x0000b7a8      415d           pop r13
0x0000b7aa      c3             ret
0x0000b7ab      0f1f440000     nop dword [rax + rax]
0x0000b7b0      f3c3           ret
0x0000b7b2      e8b95a0000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/file-set.c:46
0x0000b7b7      660f1f840000.  nop word [rax + rax]
;-- seen_file:
0x0000b7c0      4883ec28       sub rsp, 0x28                           ; ../coreutils-8.31/lib/file-set.c:63
0x0000b7c4      64488b042528.  mov rax, qword fs:[0x28]
0x0000b7cd      4889442418     mov qword [rsp + 0x18], rax
0x0000b7d2      31c0           xor eax, eax
0x0000b7d4      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/file-set.c:66
0x0000b7d7      7423           je 0xb7fc
0x0000b7d9      488b4208       mov rax, qword [rdx + 8]                ; ../coreutils-8.31/lib/file-set.c:70
0x0000b7dd      48893424       mov qword [rsp], rsi                    ; ../coreutils-8.31/lib/file-set.c:69
0x0000b7e1      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/file-set.c:73
0x0000b7e4      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/file-set.c:70
0x0000b7e9      488b02         mov rax, qword [rdx]                    ; ../coreutils-8.31/lib/file-set.c:71
0x0000b7ec      4889442410     mov qword [rsp + 0x10], rax
0x0000b7f1      e86a090000     call sym.hash_lookup                    ; ../coreutils-8.31/lib/file-set.c:73
0x0000b7f6      4885c0         test rax, rax
0x0000b7f9      0f95c0         setne al
0x0000b7fc      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/file-set.c:74
0x0000b801      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000b80a      7505           jne 0xb811
0x0000b80c      4883c428       add rsp, 0x28
0x0000b810      c3             ret
0x0000b811      e81a71ffff     call sym.imp.__stack_chk_fail
0x0000b816      662e0f1f8400.  nop word cs:[rax + rax]
;-- strmode:
0x0000b820      89fa           mov edx, edi
0x0000b822      b82d000000     mov eax, 0x2d                           ; '-'
0x0000b827      81e200f00000   and edx, 0xf000
0x0000b82d      81fa00800000   cmp edx, 0x8000
0x0000b833      745b           je 0xb890
0x0000b835      81fa00400000   cmp edx, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x0000b83b      b864000000     mov eax, 0x64                           ; 'd'
0x0000b840      744e           je 0xb890
0x0000b842      81fa00600000   cmp edx, 0x6000
0x0000b848      b862000000     mov eax, 0x62                           ; 'b'
0x0000b84d      7441           je 0xb890
0x0000b84f      81fa00200000   cmp edx, 0x2000
0x0000b855      b863000000     mov eax, 0x63                           ; 'c'
0x0000b85a      7434           je 0xb890
0x0000b85c      81fa00a00000   cmp edx, 0xa000
0x0000b862      b86c000000     mov eax, 0x6c                           ; 'l'
0x0000b867      7427           je 0xb890
0x0000b869      81fa00100000   cmp edx, 0x1000
0x0000b86f      b870000000     mov eax, 0x70                           ; 'p'
0x0000b874      741a           je 0xb890
0x0000b876      81fa00c00000   cmp edx, 0xc000
0x0000b87c      b873000000     mov eax, 0x73                           ; 's'
0x0000b881      ba3f000000     mov edx, 0x3f                           ; '?'
0x0000b886      0f45c2         cmovne eax, edx
0x0000b889      0f1f80000000.  nop dword [rax]
0x0000b890      8806           mov byte [rsi], al
0x0000b892      89f8           mov eax, edi
0x0000b894      2500010000     and eax, 0x100
0x0000b899      83f801         cmp eax, 1
0x0000b89c      19c0           sbb eax, eax
0x0000b89e      83e0bb         and eax, 0xffffffbb                     ; 4294967227
0x0000b8a1      83c072         add eax, 0x72
0x0000b8a4      884601         mov byte [rsi + 1], al
0x0000b8a7      89f8           mov eax, edi
0x0000b8a9      2580000000     and eax, 0x80
0x0000b8ae      83f801         cmp eax, 1
0x0000b8b1      19c0           sbb eax, eax
0x0000b8b3      83e0b6         and eax, 0xffffffb6                     ; 4294967222
0x0000b8b6      83c077         add eax, 0x77
0x0000b8b9      884602         mov byte [rsi + 2], al
0x0000b8bc      89f8           mov eax, edi
0x0000b8be      83e040         and eax, 0x40                           ; segment.PHDR
0x0000b8c1      83f801         cmp eax, 1
0x0000b8c4      19c0           sbb eax, eax
0x0000b8c6      f7c700080000   test edi, 0x800
0x0000b8cc      0f849e000000   je 0xb970
0x0000b8d2      83e0e0         and eax, 0xffffffe0                     ; 4294967264
0x0000b8d5      83c073         add eax, 0x73
0x0000b8d8      884603         mov byte [rsi + 3], al
0x0000b8db      89f8           mov eax, edi
0x0000b8dd      83e020         and eax, 0x20                           ; "@"
0x0000b8e0      83f801         cmp eax, 1
0x0000b8e3      19c0           sbb eax, eax
0x0000b8e5      83e0bb         and eax, 0xffffffbb                     ; 4294967227
0x0000b8e8      83c072         add eax, 0x72
0x0000b8eb      884604         mov byte [rsi + 4], al
0x0000b8ee      89f8           mov eax, edi
0x0000b8f0      83e010         and eax, 0x10
0x0000b8f3      83f801         cmp eax, 1
0x0000b8f6      19c0           sbb eax, eax
0x0000b8f8      83e0b6         and eax, 0xffffffb6                     ; 4294967222
0x0000b8fb      83c077         add eax, 0x77
0x0000b8fe      884605         mov byte [rsi + 5], al
0x0000b901      89f8           mov eax, edi
0x0000b903      83e008         and eax, 8
0x0000b906      83f801         cmp eax, 1
0x0000b909      19c0           sbb eax, eax
0x0000b90b      f7c700040000   test edi, 0x400
0x0000b911      0f8481000000   je 0xb998
0x0000b917      83e0e0         and eax, 0xffffffe0                     ; 4294967264
0x0000b91a      83c073         add eax, 0x73
0x0000b91d      884606         mov byte [rsi + 6], al
0x0000b920      89f8           mov eax, edi
0x0000b922      83e004         and eax, 4
0x0000b925      83f801         cmp eax, 1
0x0000b928      19c0           sbb eax, eax
0x0000b92a      83e0bb         and eax, 0xffffffbb                     ; 4294967227
0x0000b92d      83c072         add eax, 0x72
0x0000b930      884607         mov byte [rsi + 7], al
0x0000b933      89f8           mov eax, edi
0x0000b935      83e002         and eax, 2
0x0000b938      83f801         cmp eax, 1
0x0000b93b      19c0           sbb eax, eax
0x0000b93d      83e0b6         and eax, 0xffffffb6                     ; 4294967222
0x0000b940      83c077         add eax, 0x77
0x0000b943      884608         mov byte [rsi + 8], al
0x0000b946      89f8           mov eax, edi
0x0000b948      83e001         and eax, 1
0x0000b94b      83f801         cmp eax, 1
0x0000b94e      19c0           sbb eax, eax
0x0000b950      81e700020000   and edi, 0x200
0x0000b956      7428           je 0xb980
0x0000b958      83e0e0         and eax, 0xffffffe0                     ; 4294967264
0x0000b95b      83c074         add eax, 0x74
0x0000b95e      884609         mov byte [rsi + 9], al
0x0000b961      b820000000     mov eax, 0x20                           ; "@"
0x0000b966      6689460a       mov word [rsi + 0xa], ax
0x0000b96a      c3             ret
0x0000b96b      0f1f440000     nop dword [rax + rax]
0x0000b970      83e0b5         and eax, 0xffffffb5                     ; 4294967221
0x0000b973      83c078         add eax, 0x78
0x0000b976      e95dffffff     jmp 0xb8d8
0x0000b97b      0f1f440000     nop dword [rax + rax]
0x0000b980      83e0b5         and eax, 0xffffffb5                     ; 4294967221
0x0000b983      83c078         add eax, 0x78
0x0000b986      884609         mov byte [rsi + 9], al
0x0000b989      b820000000     mov eax, 0x20                           ; "@"
0x0000b98e      6689460a       mov word [rsi + 0xa], ax
0x0000b992      c3             ret
0x0000b993      0f1f440000     nop dword [rax + rax]
0x0000b998      83e0b5         and eax, 0xffffffb5                     ; 4294967221
0x0000b99b      83c078         add eax, 0x78
0x0000b99e      e97affffff     jmp 0xb91d
0x0000b9a3      0f1f00         nop dword [rax]
0x0000b9a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- filemodestring:
0x0000b9b0      8b7f18         mov edi, dword [rdi + 0x18]
0x0000b9b3      e968feffff     jmp sym.strmode
0x0000b9b8      0f1f84000000.  nop dword [rax + rax]
;-- file_name_concat:
0x0000b9c0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/filenamecat.c:36
0x0000b9c4      e817000000     call sym.mfile_name_concat              ; ../coreutils-8.31/lib/filenamecat.c:37
0x0000b9c9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/filenamecat.c:38
0x0000b9cc      7405           je 0xb9d3
0x0000b9ce      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/filenamecat.c:41
0x0000b9d2      c3             ret
0x0000b9d3      e898580000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/filenamecat.c:39
0x0000b9d8      0f1f84000000.  nop dword [rax + rax]
;-- mfile_name_concat:
0x0000b9e0      4157           push r15                                ; ../coreutils-8.31/lib/filenamecat-lgpl.c:48
0x0000b9e2      4156           push r14
0x0000b9e4      4989d7         mov r15, rdx
0x0000b9e7      4155           push r13
0x0000b9e9      4154           push r12
0x0000b9eb      4989fc         mov r12, rdi
0x0000b9ee      55             push rbp
0x0000b9ef      53             push rbx
0x0000b9f0      4889f5         mov rbp, rsi
0x0000b9f3      4883ec18       sub rsp, 0x18
0x0000b9f7      e894fbffff     call sym.last_component                 ; ../coreutils-8.31/lib/filenamecat-lgpl.c:49
0x0000b9fc      4889c3         mov rbx, rax
0x0000b9ff      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:50
0x0000ba02      e8e9fbffff     call sym.base_len
0x0000ba07      4c29e3         sub rbx, r12                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:51
0x0000ba0a      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:50
0x0000ba0d      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x0000ba10      4801c3         add rbx, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:51
0x0000ba13      e8e86effff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x0000ba18      4d85ed         test r13, r13                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:54
0x0000ba1b      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x0000ba1e      7430           je 0xba50                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:54
0x0000ba20      41807c1cff2f   cmp byte [r12 + rbx - 1], 0x2f          ; ../coreutils-8.31/lib/filenamecat-lgpl.c:57
0x0000ba26      0f84a4000000   je 0xbad0
0x0000ba2c      31c0           xor eax, eax
0x0000ba2e      807d002f       cmp byte [rbp], 0x2f
0x0000ba32      ba00000000     mov edx, 0
0x0000ba37      0f95c0         setne al
0x0000ba3a      48890424       mov qword [rsp], rax
0x0000ba3e      b82f000000     mov eax, 0x2f                           ; '/'
0x0000ba43      0f44c2         cmove eax, edx
0x0000ba46      8844240f       mov byte [rsp + 0xf], al
0x0000ba4a      eb22           jmp 0xba6e
0x0000ba4c      0f1f4000       nop dword [rax]
0x0000ba50      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:60
0x0000ba52      807d002f       cmp byte [rbp], 0x2f
0x0000ba56      ba00000000     mov edx, 0
0x0000ba5b      0f94c0         sete al
0x0000ba5e      48890424       mov qword [rsp], rax
0x0000ba62      b82e000000     mov eax, 0x2e                           ; '.'
0x0000ba67      0f45c2         cmovne eax, edx
0x0000ba6a      8844240f       mov byte [rsp + 0xf], al
0x0000ba6e      4a8d7c3301     lea rdi, [rbx + r14 + 1]                ; ../coreutils-8.31/lib/filenamecat-lgpl.c:70
0x0000ba73      48033c24       add rdi, qword [rsp]
0x0000ba77      e84471ffff     call sym.imp.malloc
0x0000ba7c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:73
0x0000ba7f      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:70
0x0000ba82      7432           je 0xbab6                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:73
0x0000ba84      4889c7         mov rdi, rax                            ; string_fortified.h:48   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000ba87      4889da         mov rdx, rbx
0x0000ba8a      4c89e6         mov rsi, r12
0x0000ba8d      e80e72ffff     call sym.imp.mempcpy
0x0000ba92      0fb64c240f     movzx ecx, byte [rsp + 0xf]             ; ../coreutils-8.31/lib/filenamecat-lgpl.c:77
0x0000ba97      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/filenamecat-lgpl.c:78
0x0000ba9b      4801c7         add rdi, rax
0x0000ba9e      4d85ff         test r15, r15                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:80
0x0000baa1      8808           mov byte [rax], cl                      ; ../coreutils-8.31/lib/filenamecat-lgpl.c:77
0x0000baa3      7403           je 0xbaa8                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:80
0x0000baa5      49893f         mov qword [r15], rdi                    ; ../coreutils-8.31/lib/filenamecat-lgpl.c:81
0x0000baa8      4c89f2         mov rdx, r14                            ; string_fortified.h:48   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000baab      4889ee         mov rsi, rbp
0x0000baae      e8ed71ffff     call sym.imp.mempcpy
0x0000bab3      c60000         mov byte [rax], 0                       ; ../coreutils-8.31/lib/filenamecat-lgpl.c:84
0x0000bab6      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:87
0x0000baba      4c89e8         mov rax, r13
0x0000babd      5b             pop rbx
0x0000babe      5d             pop rbp
0x0000babf      415c           pop r12
0x0000bac1      415d           pop r13
0x0000bac3      415e           pop r14
0x0000bac5      415f           pop r15
0x0000bac7      c3             ret
0x0000bac8      0f1f84000000.  nop dword [rax + rax]
0x0000bad0      48c704240000.  mov qword [rsp], 0
0x0000bad8      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/filenamecat-lgpl.c:53
0x0000badd      eb8f           jmp 0xba6e
0x0000badf      90             nop
;-- full_write:
0x0000bae0      4155           push r13                                ; ../coreutils-8.31/lib/full-write.c:59
0x0000bae2      4154           push r12
0x0000bae4      55             push rbp
0x0000bae5      53             push rbx
0x0000bae6      4883ec08       sub rsp, 8
0x0000baea      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/full-write.c:63
0x0000baed      7462           je 0xbb51
0x0000baef      4189fd         mov r13d, edi
0x0000baf2      4889f5         mov rbp, rsi
0x0000baf5      4889d3         mov rbx, rdx
0x0000baf8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/full-write.c:60
0x0000bafb      eb13           jmp 0xbb10
0x0000bafd      0f1f00         nop dword [rax]
0x0000bb00      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/full-write.c:68
0x0000bb03      7433           je 0xbb38
0x0000bb05      4901c4         add r12, rax                            ; ../coreutils-8.31/lib/full-write.c:73
0x0000bb08      4801c5         add rbp, rax                            ; ../coreutils-8.31/lib/full-write.c:74
0x0000bb0b      4829c3         sub rbx, rax                            ; ../coreutils-8.31/lib/full-write.c:63
0x0000bb0e      7414           je 0xbb24
0x0000bb10      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/full-write.c:65
0x0000bb13      4889ee         mov rsi, rbp
0x0000bb16      4489ef         mov edi, r13d
0x0000bb19      e8f2340000     call sym.safe_write
0x0000bb1e      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/full-write.c:66
0x0000bb22      75dc           jne 0xbb00
0x0000bb24      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/full-write.c:79
0x0000bb28      4c89e0         mov rax, r12
0x0000bb2b      5b             pop rbx
0x0000bb2c      5d             pop rbp
0x0000bb2d      415c           pop r12
0x0000bb2f      415d           pop r13
0x0000bb31      c3             ret
0x0000bb32      660f1f440000   nop word [rax + rax]
0x0000bb38      e8336cffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/full-write.c:70
0x0000bb3d      c7001c000000   mov dword [rax], 0x1c                   ; [0x1c:4]=0
0x0000bb43      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/full-write.c:79
0x0000bb47      4c89e0         mov rax, r12
0x0000bb4a      5b             pop rbx
0x0000bb4b      5d             pop rbp
0x0000bb4c      415c           pop r12
0x0000bb4e      415d           pop r13
0x0000bb50      c3             ret
0x0000bb51      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/full-write.c:60
0x0000bb54      ebce           jmp 0xbb24                              ; ../coreutils-8.31/lib/full-write.c:78
0x0000bb56      662e0f1f8400.  nop word cs:[rax + rax]
;-- next_prime:
0x0000bb60      4883ff0a       cmp rdi, 0xa                            ; ../coreutils-8.31/lib/hash.c:464
0x0000bb64      b80a000000     mov eax, 0xa
0x0000bb69      49b9abaaaaaa.  movabs r9, 0xaaaaaaaaaaaaaaab
0x0000bb73      480f42f8       cmovb rdi, rax
0x0000bb77      4883cf01       or rdi, 1                               ; ../coreutils-8.31/lib/hash.c:470
0x0000bb7b      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x0000bb7f      746e           je 0xbbef
0x0000bb81      0f1f80000000.  nop dword [rax]
0x0000bb88      4889f8         mov rax, rdi
0x0000bb8b      4889f9         mov rcx, rdi
0x0000bb8e      49f7e1         mul r9
0x0000bb91      4889d0         mov rax, rdx
0x0000bb94      48d1e8         shr rax, 1
0x0000bb97      488d0440       lea rax, [rax + rax*2]
0x0000bb9b      4829c1         sub rcx, rax
0x0000bb9e      4883ff09       cmp rdi, 9                              ; ../coreutils-8.31/lib/hash.c:449
0x0000bba2      4889c8         mov rax, rcx
0x0000bba5      7639           jbe 0xbbe0
0x0000bba7      4885c9         test rcx, rcx
0x0000bbaa      7439           je 0xbbe5
0x0000bbac      41b810000000   mov r8d, 0x10
0x0000bbb2      be09000000     mov esi, 9                              ; ../coreutils-8.31/lib/hash.c:447
0x0000bbb7      b903000000     mov ecx, 3                              ; ../coreutils-8.31/lib/hash.c:446
0x0000bbbc      eb0b           jmp 0xbbc9
0x0000bbbe      6690           nop
0x0000bbc0      4983c008       add r8, 8
0x0000bbc4      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:449
0x0000bbc7      741c           je 0xbbe5
0x0000bbc9      4883c102       add rcx, 2                              ; ../coreutils-8.31/lib/hash.c:453
0x0000bbcd      31d2           xor edx, edx
0x0000bbcf      4889f8         mov rax, rdi
0x0000bbd2      48f7f1         div rcx
0x0000bbd5      4c01c6         add rsi, r8                             ; ../coreutils-8.31/lib/hash.c:452
0x0000bbd8      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/hash.c:449
0x0000bbdb      4889d0         mov rax, rdx
0x0000bbde      72e0           jb 0xbbc0
0x0000bbe0      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:472
0x0000bbe3      750a           jne 0xbbef
0x0000bbe5      4883c702       add rdi, 2                              ; ../coreutils-8.31/lib/hash.c:473
0x0000bbe9      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x0000bbed      7599           jne 0xbb88
0x0000bbef      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:476
0x0000bbf2      c3             ret
0x0000bbf3      0f1f00         nop dword [rax]
0x0000bbf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- raw_hasher:
0x0000bc00      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:487
0x0000bc03      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash.c:494
0x0000bc05      48c1c803       ror rax, 3                              ; ../coreutils-8.31/lib/bitrotate.h:87
0x0000bc09      48f7f6         div rsi                                 ; ../coreutils-8.31/lib/hash.c:494
0x0000bc0c      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash.c:495
0x0000bc0f      c3             ret
;-- raw_comparator:
0x0000bc10      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/hash.c:500
0x0000bc13      0f94c0         sete al
0x0000bc16      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:502
0x0000bc17      660f1f840000.  nop word [rax + rax]
;-- safe_hasher:
0x0000bc20      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:250
0x0000bc21      4889fb         mov rbx, rdi
0x0000bc24      4889f7         mov rdi, rsi
0x0000bc27      488b7310       mov rsi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/hash.c:251
0x0000bc2b      ff5330         call qword [rbx + 0x30]
0x0000bc2e      48394310       cmp qword [rbx + 0x10], rax             ; ../coreutils-8.31/lib/hash.c:252
0x0000bc32      7609           jbe 0xbc3d
0x0000bc34      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/hash.c:254
0x0000bc38      480303         add rax, qword [rbx]
0x0000bc3b      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:255
0x0000bc3c      c3             ret
0x0000bc3d      e81e6bffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/hash.c:253
0x0000bc42      0f1f4000       nop dword [rax]
0x0000bc46      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_find_entry:
0x0000bc50      4156           push r14                                ; ../coreutils-8.31/lib/hash.c:792
0x0000bc52      4155           push r13
0x0000bc54      4989d6         mov r14, rdx
0x0000bc57      4154           push r12
0x0000bc59      55             push rbp
0x0000bc5a      4989fc         mov r12, rdi
0x0000bc5d      53             push rbx
0x0000bc5e      4889f5         mov rbp, rsi
0x0000bc61      4189cd         mov r13d, ecx
0x0000bc64      e8b7ffffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:793
0x0000bc69      498906         mov qword [r14], rax                    ; ../coreutils-8.31/lib/hash.c:796
0x0000bc6c      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:799
0x0000bc6f      4885f6         test rsi, rsi
0x0000bc72      0f84e8000000   je 0xbd60
0x0000bc78      4839ee         cmp rsi, rbp                            ; ../coreutils-8.31/lib/hash.c:803
0x0000bc7b      4889c3         mov rbx, rax
0x0000bc7e      0f848f000000   je 0xbd13
0x0000bc84      4889ef         mov rdi, rbp
0x0000bc87      41ff542438     call qword [r12 + 0x38]
0x0000bc8c      84c0           test al, al
0x0000bc8e      0f857c000000   jne 0xbd10
0x0000bc94      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x0000bc98      4885c0         test rax, rax
0x0000bc9b      0f84bf000000   je 0xbd60
0x0000bca1      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x0000bca4      4839f5         cmp rbp, rsi
0x0000bca7      7520           jne 0xbcc9
0x0000bca9      eb31           jmp 0xbcdc
0x0000bcab      0f1f440000     nop dword [rax + rax]
0x0000bcb0      488b5b08       mov rbx, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x0000bcb4      488b4308       mov rax, qword [rbx + 8]
0x0000bcb8      4885c0         test rax, rax
0x0000bcbb      0f849f000000   je 0xbd60
0x0000bcc1      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x0000bcc4      4839ee         cmp rsi, rbp
0x0000bcc7      7413           je 0xbcdc
0x0000bcc9      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:831
0x0000bccc      41ff542438     call qword [r12 + 0x38]
0x0000bcd1      84c0           test al, al
0x0000bcd3      74db           je 0xbcb0
0x0000bcd5      488b4308       mov rax, qword [rbx + 8]
0x0000bcd9      488b30         mov rsi, qword [rax]
0x0000bcdc      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/hash.c:835
0x0000bcdf      741d           je 0xbcfe
0x0000bce1      488b5008       mov rdx, qword [rax + 8]                ; ../coreutils-8.31/lib/hash.c:841
0x0000bce5      48895308       mov qword [rbx + 8], rdx
0x0000bce9      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/hash.c:778
0x0000bcf0      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:779
0x0000bcf5      48895008       mov qword [rax + 8], rdx
0x0000bcf9      4989442448     mov qword [r12 + 0x48], rax             ; ../coreutils-8.31/lib/hash.c:780
0x0000bcfe      5b             pop rbx
0x0000bcff      4889f0         mov rax, rsi
0x0000bd02      5d             pop rbp
0x0000bd03      415c           pop r12
0x0000bd05      415d           pop r13
0x0000bd07      415e           pop r14
0x0000bd09      c3             ret
0x0000bd0a      660f1f440000   nop word [rax + rax]
0x0000bd10      488b33         mov rsi, qword [rbx]
0x0000bd13      4584ed         test r13b, r13b
0x0000bd16      74e6           je 0xbcfe
0x0000bd18      488b4308       mov rax, qword [rbx + 8]
0x0000bd1c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:672
0x0000bd1f      742f           je 0xbd50
0x0000bd21      f30f6f00       movdqu xmm0, xmmword [rax]
0x0000bd25      0f1103         movups xmmword [rbx], xmm0
0x0000bd28      48c700000000.  mov qword [rax], 0
0x0000bd2f      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:388
0x0000bd34      48895008       mov qword [rax + 8], rdx
0x0000bd38      4989442448     mov qword [r12 + 0x48], rax
0x0000bd3d      4889f0         mov rax, rsi
0x0000bd40      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:398
0x0000bd41      5d             pop rbp
0x0000bd42      415c           pop r12
0x0000bd44      415d           pop r13
0x0000bd46      415e           pop r14
0x0000bd48      c3             ret
0x0000bd49      0f1f80000000.  nop dword [rax]
0x0000bd50      48c703000000.  mov qword [rbx], 0
0x0000bd57      eba5           jmp 0xbcfe
0x0000bd59      0f1f80000000.  nop dword [rax]
0x0000bd60      31f6           xor esi, esi
0x0000bd62      5b             pop rbx
0x0000bd63      4889f0         mov rax, rsi
0x0000bd66      5d             pop rbp
0x0000bd67      415c           pop r12
0x0000bd69      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:401
0x0000bd6b      415e           pop r14
0x0000bd6d      c3             ret
0x0000bd6e      6690           nop
;-- check_tuning.isra.0:
0x0000bd70      488b17         mov rdx, qword [rdi]
0x0000bd73      488d0d269500.  lea rcx, obj.default_tuning             ; 0x152a0
0x0000bd7a      b801000000     mov eax, 1
0x0000bd7f      4839ca         cmp rdx, rcx
0x0000bd82      7461           je 0xbde5
0x0000bd84      f30f104208     movss xmm0, dword [rdx + 8]
0x0000bd89      0f2e05249500.  ucomiss xmm0, dword [0x000152b4]
0x0000bd90      764e           jbe 0xbde0
0x0000bd92      f30f100d1e95.  movss xmm1, dword [0x000152b8]          ; [0x152b8:4]=0x3f666666
0x0000bd9a      0f2ec8         ucomiss xmm1, xmm0
0x0000bd9d      7641           jbe 0xbde0
0x0000bd9f      f30f104a0c     movss xmm1, dword [rdx + 0xc]           ; ../coreutils-8.31/lib/hash.c:408
0x0000bda4      0f2e0d119500.  ucomiss xmm1, dword [0x000152bc]
0x0000bdab      7633           jbe 0xbde0
0x0000bdad      f30f100a       movss xmm1, dword [rdx]
0x0000bdb1      0f2e0d089500.  ucomiss xmm1, dword [0x000152c0]
0x0000bdb8      7226           jb 0xbde0
0x0000bdba      f30f580df294.  addss xmm1, dword [0x000152b4]          ; ../coreutils-8.31/lib/hash.c:737
0x0000bdc2      f30f105204     movss xmm2, dword [rdx + 4]
0x0000bdc7      0f2ed1         ucomiss xmm2, xmm1
0x0000bdca      7614           jbe 0xbde0
0x0000bdcc      f30f101df094.  movss xmm3, dword [0x000152c4]          ; [0x152c4:4]=0x3f800000
0x0000bdd4      0f2eda         ucomiss xmm3, xmm2                      ; ../coreutils-8.31/lib/hash.c:738
0x0000bdd7      7207           jb 0xbde0
0x0000bdd9      0f2ec1         ucomiss xmm0, xmm1
0x0000bddc      7707           ja 0xbde5
0x0000bdde      6690           nop
0x0000bde0      48890f         mov qword [rdi], rcx
0x0000bde3      31c0           xor eax, eax
0x0000bde5      f3c3           ret
0x0000bde7      660f1f840000.  nop word [rax + rax]
;-- transfer_entries:
0x0000bdf0      4157           push r15
0x0000bdf2      4156           push r14
0x0000bdf4      4155           push r13                                ; ../coreutils-8.31/lib/hash.c:760
0x0000bdf6      4154           push r12
0x0000bdf8      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:749
0x0000bdf9      53             push rbx
0x0000bdfa      4883ec08       sub rsp, 8
0x0000bdfe      4c8b26         mov r12, qword [rsi]
0x0000be01      4c3b6608       cmp r12, qword [rsi + 8]
0x0000be05      0f83dd000000   jae 0xbee8
0x0000be0b      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:752
0x0000be0e      4989f5         mov r13, rsi
0x0000be11      4189d6         mov r14d, edx
0x0000be14      0f1f4000       nop dword [rax]
0x0000be18      4d8b3c24       mov r15, qword [r12]
0x0000be1c      4d85ff         test r15, r15
0x0000be1f      0f84b5000000   je 0xbeda
0x0000be25      498b5c2408     mov rbx, qword [r12 + 8]
0x0000be2a      4885db         test rbx, rbx
0x0000be2d      751d           jne 0xbe4c
0x0000be2f      eb5a           jmp 0xbe8b
0x0000be31      0f1f80000000.  nop dword [rax]
0x0000be38      488b4808       mov rcx, qword [rax + 8]
0x0000be3c      4885d2         test rdx, rdx
0x0000be3f      48894b08       mov qword [rbx + 8], rcx                ; ../coreutils-8.31/lib/bitrotate.h:557
0x0000be43      48895808       mov qword [rax + 8], rbx
0x0000be47      4889d3         mov rbx, rdx
0x0000be4a      743b           je 0xbe87
0x0000be4c      4c8b3b         mov r15, qword [rbx]
0x0000be4f      4889ef         mov rdi, rbp
0x0000be52      4c89fe         mov rsi, r15
0x0000be55      e8c6fdffff     call sym.safe_hasher
0x0000be5a      48833800       cmp qword [rax], 0
0x0000be5e      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:329
0x0000be62      75d4           jne 0xbe38
0x0000be64      4c8938         mov qword [rax], r15
0x0000be67      4883451801     add qword [rbp + 0x18], 1
0x0000be6c      4885d2         test rdx, rdx
0x0000be6f      48c703000000.  mov qword [rbx], 0
0x0000be76      488b4548       mov rax, qword [rbp + 0x48]
0x0000be7a      48894308       mov qword [rbx + 8], rax
0x0000be7e      48895d48       mov qword [rbp + 0x48], rbx             ; ../coreutils-8.31/lib/bitrotate.h:-285
0x0000be82      4889d3         mov rbx, rdx                            ; ../coreutils-8.31/lib/bitrotate.h:-283
0x0000be85      75c5           jne 0xbe4c
0x0000be87      4d8b3c24       mov r15, qword [r12]
0x0000be8b      4584f6         test r14b, r14b
0x0000be8e      49c744240800.  mov qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/bitrotate.h:-277
0x0000be97      7541           jne 0xbeda
0x0000be99      4c89fe         mov rsi, r15
0x0000be9c      4889ef         mov rdi, rbp
0x0000be9f      e87cfdffff     call sym.safe_hasher
0x0000bea4      48833800       cmp qword [rax], 0
0x0000bea8      4889c3         mov rbx, rax
0x0000beab      7453           je 0xbf00
0x0000bead      488b4548       mov rax, qword [rbp + 0x48]
0x0000beb1      4885c0         test rax, rax
0x0000beb4      745a           je 0xbf10
0x0000beb6      488b5008       mov rdx, qword [rax + 8]
0x0000beba      48895548       mov qword [rbp + 0x48], rdx
0x0000bebe      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:-255
0x0000bec2      4c8938         mov qword [rax], r15
0x0000bec5      48895008       mov qword [rax + 8], rdx
0x0000bec9      48894308       mov qword [rbx + 8], rax
0x0000becd      49c704240000.  mov qword [r12], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-250
0x0000bed5      49836d1801     sub qword [r13 + 0x18], 1
0x0000beda      4983c410       add r12, 0x10                           ; ../coreutils-8.31/lib/bitrotate.h:-249
0x0000bede      4d396508       cmp qword [r13 + 8], r12                ; ../coreutils-8.31/lib/bitrotate.h:-250
0x0000bee2      0f8730ffffff   ja 0xbe18
0x0000bee8      4883c408       add rsp, 8
0x0000beec      b801000000     mov eax, 1
0x0000bef1      5b             pop rbx
0x0000bef2      5d             pop rbp
0x0000bef3      415c           pop r12
0x0000bef5      415d           pop r13                                 ; ../coreutils-8.31/lib/bitrotate.h:-241
0x0000bef7      415e           pop r14
0x0000bef9      415f           pop r15
0x0000befb      c3             ret
0x0000befc      0f1f4000       nop dword [rax]
0x0000bf00      4c8938         mov qword [rax], r15
0x0000bf03      4883451801     add qword [rbp + 0x18], 1
0x0000bf08      ebc3           jmp 0xbecd
0x0000bf0a      660f1f440000   nop word [rax + rax]
0x0000bf10      bf10000000     mov edi, 0x10
0x0000bf15      e8a66cffff     call sym.imp.malloc
0x0000bf1a      4885c0         test rax, rax
0x0000bf1d      759f           jne 0xbebe
0x0000bf1f      4883c408       add rsp, 8
0x0000bf23      31c0           xor eax, eax
0x0000bf25      5b             pop rbx
0x0000bf26      5d             pop rbp
0x0000bf27      415c           pop r12
0x0000bf29      415d           pop r13
0x0000bf2b      415e           pop r14
0x0000bf2d      415f           pop r15
0x0000bf2f      c3             ret
;-- hash_get_n_buckets:
0x0000bf30      488b4710       mov rax, qword [rdi + 0x10]
0x0000bf34      c3             ret
0x0000bf35      90             nop
0x0000bf36      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-218
;-- hash_get_n_buckets_used:
0x0000bf40      488b4718       mov rax, qword [rdi + 0x18]
0x0000bf44      c3             ret                                     ; ../coreutils-8.31/lib/bitrotate.h:-210
0x0000bf45      90             nop
0x0000bf46      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-213
;-- hash_get_n_entries:
0x0000bf50      488b4720       mov rax, qword [rdi + 0x20]
0x0000bf54      c3             ret
0x0000bf55      90             nop                                     ; ../coreutils-8.31/lib/bitrotate.h:-209
0x0000bf56      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_max_bucket_length:
0x0000bf60      488b37         mov rsi, qword [rdi]
0x0000bf63      488b7f08       mov rdi, qword [rdi + 8]
0x0000bf67      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/bitrotate.h:-259
0x0000bf69      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/bitrotate.h:-205
0x0000bf6c      7339           jae 0xbfa7
0x0000bf6e      6690           nop
0x0000bf70      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-268
0x0000bf74      7426           je 0xbf9c                               ; ../coreutils-8.31/lib/bitrotate.h:-284
0x0000bf76      488b5608       mov rdx, qword [rsi + 8]
0x0000bf7a      b901000000     mov ecx, 1
0x0000bf7f      4885d2         test rdx, rdx
0x0000bf82      7411           je 0xbf95
0x0000bf84      0f1f4000       nop dword [rax]
0x0000bf88      488b5208       mov rdx, qword [rdx + 8]
0x0000bf8c      4883c101       add rcx, 1
0x0000bf90      4885d2         test rdx, rdx
0x0000bf93      75f3           jne 0xbf88
0x0000bf95      4839c8         cmp rax, rcx
0x0000bf98      480f42c1       cmovb rax, rcx                          ; ../coreutils-8.31/lib/bitrotate.h:-252
0x0000bf9c      4883c610       add rsi, 0x10
0x0000bfa0      4839fe         cmp rsi, rdi
0x0000bfa3      72cb           jb 0xbf70
0x0000bfa5      f3c3           ret
0x0000bfa7      f3c3           ret
0x0000bfa9      0f1f80000000.  nop dword [rax]
;-- hash_table_ok:
0x0000bfb0      488b0f         mov rcx, qword [rdi]
0x0000bfb3      4c8b4708       mov r8, qword [rdi + 8]
0x0000bfb7      31d2           xor edx, edx
0x0000bfb9      31f6           xor esi, esi
0x0000bfbb      4c39c1         cmp rcx, r8
0x0000bfbe      7336           jae 0xbff6
0x0000bfc0      48833900       cmp qword [rcx], 0
0x0000bfc4      7427           je 0xbfed
0x0000bfc6      488b4108       mov rax, qword [rcx + 8]
0x0000bfca      4883c601       add rsi, 1
0x0000bfce      4883c201       add rdx, 1
0x0000bfd2      4885c0         test rax, rax
0x0000bfd5      7416           je 0xbfed
0x0000bfd7      660f1f840000.  nop word [rax + rax]
0x0000bfe0      488b4008       mov rax, qword [rax + 8]
0x0000bfe4      4883c201       add rdx, 1
0x0000bfe8      4885c0         test rax, rax
0x0000bfeb      75f3           jne 0xbfe0
0x0000bfed      4883c110       add rcx, 0x10
0x0000bff1      4c39c1         cmp rcx, r8
0x0000bff4      72ca           jb 0xbfc0
0x0000bff6      31c0           xor eax, eax
0x0000bff8      48397718       cmp qword [rdi + 0x18], rsi
0x0000bffc      7402           je 0xc000
0x0000bffe      f3c3           ret                                     ; ../coreutils-8.31/lib/hash.c:-195
0x0000c000      48395720       cmp qword [rdi + 0x20], rdx
0x0000c004      0f94c0         sete al
0x0000c007      c3             ret
0x0000c008      0f1f84000000.  nop dword [rax + rax]
;-- hash_print_statistics:
0x0000c010      4155           push r13
0x0000c012      4154           push r12
0x0000c014      4989f4         mov r12, rsi
0x0000c017      55             push rbp
0x0000c018      53             push rbx
0x0000c019      31db           xor ebx, ebx
0x0000c01b      4883ec08       sub rsp, 8
0x0000c01f      488b37         mov rsi, qword [rdi]
0x0000c022      488b4f20       mov rcx, qword [rdi + 0x20]
0x0000c026      488b6f10       mov rbp, qword [rdi + 0x10]
0x0000c02a      4c8b6f18       mov r13, qword [rdi + 0x18]
0x0000c02e      488b7f08       mov rdi, qword [rdi + 8]
0x0000c032      4839fe         cmp rsi, rdi
0x0000c035      733e           jae 0xc075
0x0000c037      660f1f840000.  nop word [rax + rax]
0x0000c040      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/hash.c:-192
0x0000c044      7426           je 0xc06c
0x0000c046      488b4608       mov rax, qword [rsi + 8]                ; stdio2.h:-339
0x0000c04a      ba01000000     mov edx, 1
0x0000c04f      4885c0         test rax, rax
0x0000c052      7411           je 0xc065
0x0000c054      0f1f4000       nop dword [rax]
0x0000c058      488b4008       mov rax, qword [rax + 8]
0x0000c05c      4883c201       add rdx, 1
0x0000c060      4885c0         test rax, rax
0x0000c063      75f3           jne 0xc058
0x0000c065      4839d3         cmp rbx, rdx
0x0000c068      480f42da       cmovb rbx, rdx
0x0000c06c      4883c610       add rsi, 0x10
0x0000c070      4839fe         cmp rsi, rdi
0x0000c073      72cb           jb 0xc040
0x0000c075      488d15aa9100.  lea rdx, str.entries:__________lu       ; 0x15226 ; "# entries:         %lu\n"
0x0000c07c      be01000000     mov esi, 1
0x0000c081      4c89e7         mov rdi, r12
0x0000c084      31c0           xor eax, eax
0x0000c086      e8256dffff     call sym.imp.__fprintf_chk
0x0000c08b      488d15ac9100.  lea rdx, str.buckets:__________lu       ; 0x1523e ; "# buckets:         %lu\n"
0x0000c092      31c0           xor eax, eax
0x0000c094      4889e9         mov rcx, rbp
0x0000c097      be01000000     mov esi, 1
0x0000c09c      4c89e7         mov rdi, r12
0x0000c09f      e80c6dffff     call sym.imp.__fprintf_chk
0x0000c0a4      4d85ed         test r13, r13
0x0000c0a7      7867           js 0xc110
0x0000c0a9      660fefc0       pxor xmm0, xmm0
0x0000c0ad      4885ed         test rbp, rbp
0x0000c0b0      f2490f2ac5     cvtsi2sd xmm0, r13
0x0000c0b5      f20f59051b92.  mulsd xmm0, qword [0x000152d8]          ; ../coreutils-8.31/lib/hash.c:-174
0x0000c0bd      787a           js 0xc139                               ; ../coreutils-8.31/lib/hash.c:-170
0x0000c0bf      660fefc9       pxor xmm1, xmm1
0x0000c0c3      f2480f2acd     cvtsi2sd xmm1, rbp
0x0000c0c8      f20f5ec1       divsd xmm0, xmm1
0x0000c0cc      488d159d9100.  lea rdx, str.buckets_used:_____lu___.2f ; 0x15270 ; "# buckets used:    %lu (%.2f%%)\n"
0x0000c0d3      4c89e9         mov rcx, r13
0x0000c0d6      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/hash.c:-166
0x0000c0d9      be01000000     mov esi, 1
0x0000c0de      b801000000     mov eax, 1
0x0000c0e3      e8c86cffff     call sym.imp.__fprintf_chk
0x0000c0e8      4883c408       add rsp, 8
0x0000c0ec      4889d9         mov rcx, rbx
0x0000c0ef      4c89e7         mov rdi, r12
0x0000c0f2      5b             pop rbx
0x0000c0f3      5d             pop rbp
0x0000c0f4      415c           pop r12
0x0000c0f6      415d           pop r13
0x0000c0f8      488d15579100.  lea rdx, str.max_bucket_length:__lu     ; 0x15256 ; "max bucket length: %lu\n"
0x0000c0ff      be01000000     mov esi, 1
0x0000c104      31c0           xor eax, eax
0x0000c106      e9a56cffff     jmp sym.imp.__fprintf_chk
0x0000c10b      0f1f440000     nop dword [rax + rax]
0x0000c110      4c89e8         mov rax, r13
0x0000c113      4c89ea         mov rdx, r13
0x0000c116      660fefc0       pxor xmm0, xmm0
0x0000c11a      48d1e8         shr rax, 1
0x0000c11d      83e201         and edx, 1
0x0000c120      4809d0         or rax, rdx
0x0000c123      4885ed         test rbp, rbp
0x0000c126      f2480f2ac0     cvtsi2sd xmm0, rax
0x0000c12b      f20f58c0       addsd xmm0, xmm0
0x0000c12f      f20f5905a191.  mulsd xmm0, qword [0x000152d8]
0x0000c137      7986           jns 0xc0bf                              ; ../coreutils-8.31/lib/hash.c:-138
0x0000c139      4889e8         mov rax, rbp
0x0000c13c      660fefc9       pxor xmm1, xmm1
0x0000c140      48d1e8         shr rax, 1
0x0000c143      83e501         and ebp, 1                              ; ../coreutils-8.31/lib/hash.c:-136
0x0000c146      4809e8         or rax, rbp                             ; ../coreutils-8.31/lib/hash.c:-147
0x0000c149      f2480f2ac8     cvtsi2sd xmm1, rax
0x0000c14e      f20f58c9       addsd xmm1, xmm1
0x0000c152      e971ffffff     jmp 0xc0c8
0x0000c157      660f1f840000.  nop word [rax + rax]
;-- hash_lookup:
0x0000c160      4154           push r12
0x0000c162      55             push rbp
0x0000c163      4989fc         mov r12, rdi
0x0000c166      53             push rbx
0x0000c167      4889f5         mov rbp, rsi
0x0000c16a      e8b1faffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:-127
0x0000c16f      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:-123
0x0000c172      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/hash.c:-127
0x0000c175      7426           je 0xc19d                               ; ../coreutils-8.31/lib/hash.c:-120
0x0000c177      4889c3         mov rbx, rax
0x0000c17a      eb07           jmp 0xc183
0x0000c17c      0f1f4000       nop dword [rax]
0x0000c180      488b33         mov rsi, qword [rbx]
0x0000c183      4839ee         cmp rsi, rbp
0x0000c186      7417           je 0xc19f                               ; ../coreutils-8.31/lib/hash.c:-116
0x0000c188      4889ef         mov rdi, rbp
0x0000c18b      41ff542438     call qword [r12 + 0x38]                 ; ../coreutils-8.31/lib/hash.c:-120
0x0000c190      84c0           test al, al
0x0000c192      751c           jne 0xc1b0
0x0000c194      488b5b08       mov rbx, qword [rbx + 8]
0x0000c198      4885db         test rbx, rbx
0x0000c19b      75e3           jne 0xc180
0x0000c19d      31f6           xor esi, esi
0x0000c19f      5b             pop rbx
0x0000c1a0      4889f0         mov rax, rsi
0x0000c1a3      5d             pop rbp
0x0000c1a4      415c           pop r12
0x0000c1a6      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-112
0x0000c1a7      660f1f840000.  nop word [rax + rax]
0x0000c1b0      488b33         mov rsi, qword [rbx]
0x0000c1b3      5b             pop rbx
0x0000c1b4      5d             pop rbp
0x0000c1b5      4889f0         mov rax, rsi
0x0000c1b8      415c           pop r12
0x0000c1ba      c3             ret
0x0000c1bb      0f1f440000     nop dword [rax + rax]
;-- hash_get_first:
0x0000c1c0      48837f2000     cmp qword [rdi + 0x20], 0
0x0000c1c5      742c           je 0xc1f3
0x0000c1c7      488b17         mov rdx, qword [rdi]
0x0000c1ca      488b4f08       mov rcx, qword [rdi + 8]
0x0000c1ce      4839ca         cmp rdx, rcx
0x0000c1d1      7325           jae 0xc1f8
0x0000c1d3      488b02         mov rax, qword [rdx]
0x0000c1d6      4885c0         test rax, rax
0x0000c1d9      751b           jne 0xc1f6
0x0000c1db      0f1f440000     nop dword [rax + rax]
0x0000c1e0      4883c210       add rdx, 0x10
0x0000c1e4      4839ca         cmp rdx, rcx
0x0000c1e7      730f           jae 0xc1f8                              ; ../coreutils-8.31/lib/hash.c:-97
0x0000c1e9      488b02         mov rax, qword [rdx]
0x0000c1ec      4885c0         test rax, rax
0x0000c1ef      74ef           je 0xc1e0
0x0000c1f1      f3c3           ret
0x0000c1f3      31c0           xor eax, eax
0x0000c1f5      c3             ret
0x0000c1f6      f3c3           ret
0x0000c1f8      4883ec08       sub rsp, 8
0x0000c1fc      e85f65ffff     call sym.imp.abort
0x0000c201      0f1f440000     nop dword [rax + rax]
0x0000c206      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_next:
0x0000c210      55             push rbp
0x0000c211      53             push rbx
0x0000c212      4889fd         mov rbp, rdi
0x0000c215      4889f3         mov rbx, rsi
0x0000c218      4883ec08       sub rsp, 8
0x0000c21c      e8fff9ffff     call sym.safe_hasher
0x0000c221      4889c2         mov rdx, rax
0x0000c224      4889c1         mov rcx, rax
0x0000c227      488b02         mov rax, qword [rdx]
0x0000c22a      488b5208       mov rdx, qword [rdx + 8]
0x0000c22e      4839d8         cmp rax, rbx
0x0000c231      7416           je 0xc249
0x0000c233      0f1f440000     nop dword [rax + rax]
0x0000c238      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-79
0x0000c23b      7411           je 0xc24e
0x0000c23d      488b02         mov rax, qword [rdx]
0x0000c240      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/hash.c:-97
0x0000c244      4839d8         cmp rax, rbx
0x0000c247      75ef           jne 0xc238
0x0000c249      4885d2         test rdx, rdx
0x0000c24c      752a           jne 0xc278
0x0000c24e      488b5508       mov rdx, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash.c:-66
0x0000c252      eb0c           jmp 0xc260
0x0000c254      0f1f4000       nop dword [rax]
0x0000c258      488b01         mov rax, qword [rcx]
0x0000c25b      4885c0         test rax, rax
0x0000c25e      750b           jne 0xc26b
0x0000c260      4883c110       add rcx, 0x10
0x0000c264      4839ca         cmp rdx, rcx
0x0000c267      77ef           ja 0xc258
0x0000c269      31c0           xor eax, eax
0x0000c26b      4883c408       add rsp, 8
0x0000c26f      5b             pop rbx
0x0000c270      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:-59
0x0000c271      c3             ret
0x0000c272      660f1f440000   nop word [rax + rax]
0x0000c278      488b02         mov rax, qword [rdx]
0x0000c27b      4883c408       add rsp, 8
0x0000c27f      5b             pop rbx
0x0000c280      5d             pop rbp
0x0000c281      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-55
0x0000c282      0f1f4000       nop dword [rax]
0x0000c286      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_entries:
0x0000c290      4c8b0f         mov r9, qword [rdi]
0x0000c293      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-57
0x0000c297      7659           jbe 0xc2f2
0x0000c299      4531c0         xor r8d, r8d
0x0000c29c      498b09         mov rcx, qword [r9]
0x0000c29f      4885c9         test rcx, rcx
0x0000c2a2      7439           je 0xc2dd                               ; ../coreutils-8.31/lib/hash.c:-47
0x0000c2a4      4c39c2         cmp rdx, r8
0x0000c2a7      763e           jbe 0xc2e7
0x0000c2a9      4a890cc6       mov qword [rsi + r8*8], rcx
0x0000c2ad      498b4908       mov rcx, qword [r9 + 8]
0x0000c2b1      498d4001       lea rax, [r8 + 1]
0x0000c2b5      4885c9         test rcx, rcx
0x0000c2b8      7420           je 0xc2da
0x0000c2ba      660f1f440000   nop word [rax + rax]
0x0000c2c0      4839c2         cmp rdx, rax
0x0000c2c3      742b           je 0xc2f0                               ; ../coreutils-8.31/lib/hash.c:-3
0x0000c2c5      4c8b01         mov r8, qword [rcx]
0x0000c2c8      4883c001       add rax, 1
0x0000c2cc      4c8944c6f8     mov qword [rsi + rax*8 - 8], r8
0x0000c2d1      488b4908       mov rcx, qword [rcx + 8]
0x0000c2d5      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/hash.c:-2
0x0000c2d8      75e6           jne 0xc2c0
0x0000c2da      4989c0         mov r8, rax
0x0000c2dd      4983c110       add r9, 0x10
0x0000c2e1      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-3
0x0000c2e5      77b5           ja 0xc29c
0x0000c2e7      4c89c0         mov rax, r8
0x0000c2ea      c3             ret
0x0000c2eb      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:0
0x0000c2f0      f3c3           ret
0x0000c2f2      31c0           xor eax, eax
0x0000c2f4      c3             ret
0x0000c2f5      90             nop
0x0000c2f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_do_for_each:
0x0000c300      4157           push r15
0x0000c302      4156           push r14
0x0000c304      4155           push r13
0x0000c306      4154           push r12
0x0000c308      55             push rbp
0x0000c309      53             push rbx
0x0000c30a      4883ec08       sub rsp, 8
0x0000c30e      4c8b37         mov r14, qword [rdi]
0x0000c311      4c397708       cmp qword [rdi + 8], r14
0x0000c315      764f           jbe 0xc366
0x0000c317      4989d5         mov r13, rdx
0x0000c31a      4989f4         mov r12, rsi
0x0000c31d      4989ff         mov r15, rdi                            ; ../coreutils-8.31/lib/hash.c:46
0x0000c320      31ed           xor ebp, ebp
0x0000c322      498b3e         mov rdi, qword [r14]
0x0000c325      4885ff         test rdi, rdi
0x0000c328      7420           je 0xc34a
0x0000c32a      4c89f3         mov rbx, r14
0x0000c32d      eb04           jmp 0xc333
0x0000c32f      90             nop
0x0000c330      488b3b         mov rdi, qword [rbx]
0x0000c333      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/hash.c:37
0x0000c336      41ffd4         call r12
0x0000c339      84c0           test al, al
0x0000c33b      7417           je 0xc354
0x0000c33d      488b5b08       mov rbx, qword [rbx + 8]
0x0000c341      4883c501       add rbp, 1
0x0000c345      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/hash.c:33
0x0000c348      75e6           jne 0xc330
0x0000c34a      4983c610       add r14, 0x10
0x0000c34e      4d397708       cmp qword [r15 + 8], r14
0x0000c352      77ce           ja 0xc322
0x0000c354      4883c408       add rsp, 8
0x0000c358      4889e8         mov rax, rbp
0x0000c35b      5b             pop rbx
0x0000c35c      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:38
0x0000c35d      415c           pop r12
0x0000c35f      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:37
0x0000c361      415e           pop r14
0x0000c363      415f           pop r15
0x0000c365      c3             ret
0x0000c366      31ed           xor ebp, ebp
0x0000c368      ebea           jmp 0xc354                              ; ../coreutils-8.31/lib/hash.c:41
0x0000c36a      660f1f440000   nop word [rax + rax]
;-- hash_string:
0x0000c370      0fb60f         movzx ecx, byte [rdi]
0x0000c373      31d2           xor edx, edx
0x0000c375      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:43
0x0000c377      7424           je 0xc39d
0x0000c379      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/hash.c:44
0x0000c380      4889d0         mov rax, rdx
0x0000c383      4883c701       add rdi, 1
0x0000c387      48c1e005       shl rax, 5
0x0000c38b      4829d0         sub rax, rdx
0x0000c38e      31d2           xor edx, edx
0x0000c390      4801c8         add rax, rcx
0x0000c393      0fb60f         movzx ecx, byte [rdi]
0x0000c396      48f7f6         div rsi
0x0000c399      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:-14
0x0000c39b      75e3           jne 0xc380
0x0000c39d      4889d0         mov rax, rdx
0x0000c3a0      c3             ret
0x0000c3a1      0f1f440000     nop dword [rax + rax]
0x0000c3a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_reset_tuning:
0x0000c3b0      48b800000000.  movabs rax, 0x3f80000000000000          ; 4575657221408423936
0x0000c3ba      c6471000       mov byte [rdi + 0x10], 0                ; ../coreutils-8.31/lib/hash.c:-70
0x0000c3be      488907         mov qword [rdi], rax
0x0000c3c1      48b8cdcc4c3f.  movabs rax, 0x3fb4fdf43f4ccccd
0x0000c3cb      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/hash.c:-65
0x0000c3cf      c3             ret
;-- hash_initialize:
0x0000c3d0      4157           push r15
0x0000c3d2      4156           push r14
0x0000c3d4      488d0525f8ff.  lea rax, sym.raw_hasher                 ; 0xbc00 ; "H\x89\xf81\xd2H\xc1\xc8\x03H\xf7\xf6H\x89\xd0\xc3H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x0000c3db      4155           push r13
0x0000c3dd      4154           push r12
0x0000c3df      4989d4         mov r12, rdx
0x0000c3e2      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:-61
0x0000c3e3      53             push rbx
0x0000c3e4      4989cd         mov r13, rcx
0x0000c3e7      4889fd         mov rbp, rdi
0x0000c3ea      bf50000000     mov edi, 0x50                           ; 'P'
0x0000c3ef      4989f7         mov r15, rsi
0x0000c3f2      4883ec08       sub rsp, 8
0x0000c3f6      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-52
0x0000c3f9      4d89c6         mov r14, r8
0x0000c3fc      4c0f44e0       cmove r12, rax
0x0000c400      488d0509f8ff.  lea rax, sym.raw_comparator             ; 0xbc10 ; "H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x0000c407      4885c9         test rcx, rcx
0x0000c40a      4c0f44e8       cmove r13, rax
0x0000c40e      e8ad67ffff     call sym.imp.malloc
0x0000c413      4885c0         test rax, rax
0x0000c416      4889c3         mov rbx, rax
0x0000c419      0f84ab000000   je 0xc4ca
0x0000c41f      4d85ff         test r15, r15
0x0000c422      488d7828       lea rdi, [rax + 0x28]
0x0000c426      0f84b4000000   je 0xc4e0
0x0000c42c      4c897828       mov qword [rax + 0x28], r15
0x0000c430      e83bf9ffff     call sym.check_tuning.isra.0
0x0000c435      84c0           test al, al
0x0000c437      0f8483000000   je 0xc4c0
0x0000c43d      41807f1000     cmp byte [r15 + 0x10], 0
0x0000c442      0f84f8000000   je 0xc540
0x0000c448      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:-145
0x0000c44b      e810f7ffff     call sym.next_prime
0x0000c450      ba08000000     mov edx, 8
0x0000c455      4889c5         mov rbp, rax
0x0000c458      31c9           xor ecx, ecx
0x0000c45a      4889d0         mov rax, rdx
0x0000c45d      48f7e5         mul rbp
0x0000c460      0f8014010000   jo 0xc57a
0x0000c466      4885c0         test rax, rax
0x0000c469      7855           js 0xc4c0
0x0000c46b      4885c9         test rcx, rcx
0x0000c46e      7550           jne 0xc4c0
0x0000c470      4885ed         test rbp, rbp
0x0000c473      48896b10       mov qword [rbx + 0x10], rbp
0x0000c477      7447           je 0xc4c0
0x0000c479      be10000000     mov esi, 0x10
0x0000c47e      4889ef         mov rdi, rbp
0x0000c481      e84a66ffff     call sym.imp.calloc
0x0000c486      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:-197
0x0000c489      488903         mov qword [rbx], rax
0x0000c48c      7432           je 0xc4c0
0x0000c48e      48c1e504       shl rbp, 4
0x0000c492      48c743180000.  mov qword [rbx + 0x18], 0
0x0000c49a      48c743200000.  mov qword [rbx + 0x20], 0
0x0000c4a2      4801c5         add rbp, rax
0x0000c4a5      4c896330       mov qword [rbx + 0x30], r12
0x0000c4a9      4c896b38       mov qword [rbx + 0x38], r13
0x0000c4ad      48896b08       mov qword [rbx + 8], rbp
0x0000c4b1      4c897340       mov qword [rbx + 0x40], r14
0x0000c4b5      48c743480000.  mov qword [rbx + 0x48], 0
0x0000c4bd      eb0b           jmp 0xc4ca
0x0000c4bf      90             nop
0x0000c4c0      4889df         mov rdi, rbx
0x0000c4c3      31db           xor ebx, ebx
0x0000c4c5      e84669ffff     call sym..plt.got
0x0000c4ca      4883c408       add rsp, 8
0x0000c4ce      4889d8         mov rax, rbx
0x0000c4d1      5b             pop rbx
0x0000c4d2      5d             pop rbp
0x0000c4d3      415c           pop r12
0x0000c4d5      415d           pop r13
0x0000c4d7      415e           pop r14
0x0000c4d9      415f           pop r15
0x0000c4db      c3             ret
0x0000c4dc      0f1f4000       nop dword [rax]
0x0000c4e0      488d05b98d00.  lea rax, obj.default_tuning             ; 0x152a0
0x0000c4e7      48894328       mov qword [rbx + 0x28], rax             ; ../coreutils-8.31/lib/hash.c:-199
0x0000c4eb      e880f8ffff     call sym.check_tuning.isra.0
0x0000c4f0      84c0           test al, al
0x0000c4f2      f30f100dce8d.  movss xmm1, dword [0x000152c8]          ; [0x152c8:4]=0x3f4ccccd
0x0000c4fa      74c4           je 0xc4c0
0x0000c4fc      4885ed         test rbp, rbp
0x0000c4ff      784a           js 0xc54b
0x0000c501      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-168
0x0000c505      f3480f2ac5     cvtsi2ss xmm0, rbp
0x0000c50a      f30f5ec1       divss xmm0, xmm1
0x0000c50e      0f2e05b78d00.  ucomiss xmm0, dword [0x000152cc]
0x0000c515      73a9           jae 0xc4c0
0x0000c517      0f2e05b28d00.  ucomiss xmm0, dword [0x000152d0]
0x0000c51e      7250           jb 0xc570
0x0000c520      f30f5c05a88d.  subss xmm0, dword [0x000152d0]
0x0000c528      48b800000000.  movabs rax, 0x8000000000000000
0x0000c532      f3480f2ce8     cvttss2si rbp, xmm0
0x0000c537      4831c5         xor rbp, rax
0x0000c53a      e909ffffff     jmp 0xc448
0x0000c53f      90             nop
0x0000c540      4885ed         test rbp, rbp
0x0000c543      f3410f104f08   movss xmm1, dword [r15 + 8]
0x0000c549      79b6           jns 0xc501                              ; ../coreutils-8.31/lib/hash.c:-146
0x0000c54b      4889e8         mov rax, rbp
0x0000c54e      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-147
0x0000c552      48d1e8         shr rax, 1
0x0000c555      83e501         and ebp, 1
0x0000c558      4809e8         or rax, rbp
0x0000c55b      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000c560      f30f58c0       addss xmm0, xmm0
0x0000c564      eba4           jmp 0xc50a
0x0000c566      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c570      f3480f2ce8     cvttss2si rbp, xmm0
0x0000c575      e9cefeffff     jmp 0xc448
0x0000c57a      b901000000     mov ecx, 1
0x0000c57f      e9e2feffff     jmp 0xc466
0x0000c584      6690           nop
0x0000c586      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/hash.c:-130
;-- hash_clear:
0x0000c590      4154           push r12
0x0000c592      55             push rbp
0x0000c593      4889fd         mov rbp, rdi
0x0000c596      53             push rbx
0x0000c597      4c8b27         mov r12, qword [rdi]                    ; ../coreutils-8.31/lib/hash.c:-134
0x0000c59a      4c3b6708       cmp r12, qword [rdi + 8]
0x0000c59e      736b           jae 0xc60b
0x0000c5a0      49833c2400     cmp qword [r12], 0
0x0000c5a5      745a           je 0xc601
0x0000c5a7      498b5c2408     mov rbx, qword [r12 + 8]
0x0000c5ac      488b4540       mov rax, qword [rbp + 0x40]
0x0000c5b0      4885db         test rbx, rbx
0x0000c5b3      7430           je 0xc5e5
0x0000c5b5      0f1f00         nop dword [rax]
0x0000c5b8      4885c0         test rax, rax
0x0000c5bb      7409           je 0xc5c6
0x0000c5bd      488b3b         mov rdi, qword [rbx]
0x0000c5c0      ffd0           call rax
0x0000c5c2      488b4540       mov rax, qword [rbp + 0x40]
0x0000c5c6      488b5308       mov rdx, qword [rbx + 8]
0x0000c5ca      488b4d48       mov rcx, qword [rbp + 0x48]
0x0000c5ce      48c703000000.  mov qword [rbx], 0
0x0000c5d5      4885d2         test rdx, rdx
0x0000c5d8      48894b08       mov qword [rbx + 8], rcx
0x0000c5dc      48895d48       mov qword [rbp + 0x48], rbx
0x0000c5e0      4889d3         mov rbx, rdx
0x0000c5e3      75d3           jne 0xc5b8
0x0000c5e5      4885c0         test rax, rax
0x0000c5e8      7406           je 0xc5f0
0x0000c5ea      498b3c24       mov rdi, qword [r12]
0x0000c5ee      ffd0           call rax
0x0000c5f0      49c704240000.  mov qword [r12], 0
0x0000c5f8      49c744240800.  mov qword [r12 + 8], 0
0x0000c601      4983c410       add r12, 0x10
0x0000c605      4c396508       cmp qword [rbp + 8], r12                ; ../coreutils-8.31/lib/hash.c:-310
0x0000c609      7795           ja 0xc5a0
0x0000c60b      48c745180000.  mov qword [rbp + 0x18], 0
0x0000c613      48c745200000.  mov qword [rbp + 0x20], 0
0x0000c61b      5b             pop rbx
0x0000c61c      5d             pop rbp
0x0000c61d      415c           pop r12
0x0000c61f      c3             ret
;-- hash_free:
0x0000c620      4154           push r12
0x0000c622      55             push rbp
0x0000c623      4989fc         mov r12, rdi
0x0000c626      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:-307
0x0000c627      48837f4000     cmp qword [rdi + 0x40], 0
0x0000c62c      488b2f         mov rbp, qword [rdi]
0x0000c62f      488b4708       mov rax, qword [rdi + 8]
0x0000c633      744e           je 0xc683                               ; ../coreutils-8.31/lib/hash.c:-305
0x0000c635      48837f2000     cmp qword [rdi + 0x20], 0
0x0000c63a      7447           je 0xc683
0x0000c63c      4839c5         cmp rbp, rax
0x0000c63f      737b           jae 0xc6bc
0x0000c641      0f1f80000000.  nop dword [rax]
0x0000c648      488b7d00       mov rdi, qword [rbp]
0x0000c64c      4885ff         test rdi, rdi
0x0000c64f      7425           je 0xc676
0x0000c651      4889eb         mov rbx, rbp
0x0000c654      eb0d           jmp 0xc663
0x0000c656      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c660      488b3b         mov rdi, qword [rbx]
0x0000c663      41ff542440     call qword [r12 + 0x40]                 ; segment.PHDR
0x0000c668      488b5b08       mov rbx, qword [rbx + 8]
0x0000c66c      4885db         test rbx, rbx
0x0000c66f      75ef           jne 0xc660
0x0000c671      498b442408     mov rax, qword [r12 + 8]
0x0000c676      4883c510       add rbp, 0x10
0x0000c67a      4839e8         cmp rax, rbp
0x0000c67d      77c9           ja 0xc648
0x0000c67f      498b2c24       mov rbp, qword [r12]
0x0000c683      4839c5         cmp rbp, rax
0x0000c686      7334           jae 0xc6bc
0x0000c688      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:93
0x0000c690      488b7d08       mov rdi, qword [rbp + 8]
0x0000c694      4885ff         test rdi, rdi
0x0000c697      7418           je 0xc6b1
0x0000c699      0f1f80000000.  nop dword [rax]
0x0000c6a0      488b5f08       mov rbx, qword [rdi + 8]
0x0000c6a4      e86767ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/hash.c:98
0x0000c6a9      4885db         test rbx, rbx
0x0000c6ac      4889df         mov rdi, rbx
0x0000c6af      75ef           jne 0xc6a0
0x0000c6b1      4883c510       add rbp, 0x10                           ; ../coreutils-8.31/lib/hash.c:99
0x0000c6b5      49396c2408     cmp qword [r12 + 8], rbp
0x0000c6ba      77d4           ja 0xc690
0x0000c6bc      498b7c2448     mov rdi, qword [r12 + 0x48]
0x0000c6c1      4885ff         test rdi, rdi
0x0000c6c4      741b           je 0xc6e1
0x0000c6c6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c6d0      488b5f08       mov rbx, qword [rdi + 8]
0x0000c6d4      e83767ffff     call sym..plt.got
0x0000c6d9      4885db         test rbx, rbx
0x0000c6dc      4889df         mov rdi, rbx
0x0000c6df      75ef           jne 0xc6d0
0x0000c6e1      498b3c24       mov rdi, qword [r12]
0x0000c6e5      e82667ffff     call sym..plt.got
0x0000c6ea      5b             pop rbx
0x0000c6eb      4c89e7         mov rdi, r12
0x0000c6ee      5d             pop rbp
0x0000c6ef      415c           pop r12
0x0000c6f1      e91a67ffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/hash.c:107
0x0000c6f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_rehash:
0x0000c700      4154           push r12
0x0000c702      55             push rbp
0x0000c703      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:108
0x0000c706      53             push rbx
0x0000c707      4883ec60       sub rsp, 0x60
0x0000c70b      4c8b6728       mov r12, qword [rdi + 0x28]
0x0000c70f      64488b042528.  mov rax, qword fs:[0x28]
0x0000c718      4889442458     mov qword [rsp + 0x58], rax
0x0000c71d      31c0           xor eax, eax
0x0000c71f      41807c241000   cmp byte [r12 + 0x10], 0
0x0000c725      7551           jne 0xc778
0x0000c727      4885f6         test rsi, rsi
0x0000c72a      0f8878010000   js 0xc8a8
0x0000c730      660fefc0       pxor xmm0, xmm0
0x0000c734      f3480f2ac6     cvtsi2ss xmm0, rsi                      ; ../coreutils-8.31/lib/hash.c:156
0x0000c739      f3410f5e4424.  divss xmm0, dword [r12 + 8]
0x0000c740      0f2e05858b00.  ucomiss xmm0, dword [0x000152cc]
0x0000c747      0f8333010000   jae 0xc880
0x0000c74d      0f2e057c8b00.  ucomiss xmm0, dword [0x000152d0]
0x0000c754      0f8276010000   jb 0xc8d0
0x0000c75a      f30f5c056e8b.  subss xmm0, dword [0x000152d0]          ; ../coreutils-8.31/lib/hash.c:161
0x0000c762      48b800000000.  movabs rax, 0x8000000000000000
0x0000c76c      f3480f2cf0     cvttss2si rsi, xmm0
0x0000c771      4831c6         xor rsi, rax                            ; ../coreutils-8.31/lib/bitrotate.h:35
0x0000c774      0f1f4000       nop dword [rax]
0x0000c778      4889f7         mov rdi, rsi
0x0000c77b      e8e0f3ffff     call sym.next_prime
0x0000c780      ba08000000     mov edx, 8
0x0000c785      4889c3         mov rbx, rax
0x0000c788      31c9           xor ecx, ecx
0x0000c78a      4889d0         mov rax, rdx
0x0000c78d      48f7e3         mul rbx
0x0000c790      0f8099010000   jo 0xc92f
0x0000c796      4885c0         test rax, rax
0x0000c799      b801000000     mov eax, 1
0x0000c79e      480f48c8       cmovs rcx, rax
0x0000c7a2      4885db         test rbx, rbx
0x0000c7a5      0f84d5000000   je 0xc880
0x0000c7ab      83e101         and ecx, 1
0x0000c7ae      0f85cc000000   jne 0xc880
0x0000c7b4      48395d10       cmp qword [rbp + 0x10], rbx
0x0000c7b8      0f8422010000   je 0xc8e0
0x0000c7be      be10000000     mov esi, 0x10
0x0000c7c3      4889df         mov rdi, rbx
0x0000c7c6      e80563ffff     call sym.imp.calloc
0x0000c7cb      4885c0         test rax, rax
0x0000c7ce      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/bitrotate.h:-72
0x0000c7d2      0f84a8000000   je 0xc880
0x0000c7d8      48895c2410     mov qword [rsp + 0x10], rbx
0x0000c7dd      48c1e304       shl rbx, 4
0x0000c7e1      4c89642428     mov qword [rsp + 0x28], r12
0x0000c7e6      4801c3         add rbx, rax
0x0000c7e9      488b4530       mov rax, qword [rbp + 0x30]
0x0000c7ed      4989e4         mov r12, rsp
0x0000c7f0      31d2           xor edx, edx
0x0000c7f2      4889ee         mov rsi, rbp
0x0000c7f5      4c89e7         mov rdi, r12
0x0000c7f8      48895c2408     mov qword [rsp + 8], rbx
0x0000c7fd      48c744241800.  mov qword [rsp + 0x18], 0
0x0000c806      4889442430     mov qword [rsp + 0x30], rax
0x0000c80b      488b4538       mov rax, qword [rbp + 0x38]
0x0000c80f      48c744242000.  mov qword [rsp + 0x20], 0
0x0000c818      4889442438     mov qword [rsp + 0x38], rax
0x0000c81d      488b4540       mov rax, qword [rbp + 0x40]
0x0000c821      4889442440     mov qword [rsp + 0x40], rax
0x0000c826      488b4548       mov rax, qword [rbp + 0x48]
0x0000c82a      4889442448     mov qword [rsp + 0x48], rax
0x0000c82f      e8bcf5ffff     call sym.transfer_entries
0x0000c834      84c0           test al, al
0x0000c836      89c3           mov ebx, eax
0x0000c838      0f85b2000000   jne 0xc8f0
0x0000c83e      488b442448     mov rax, qword [rsp + 0x48]
0x0000c843      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/bitrotate.h:-53
0x0000c848      4c89e6         mov rsi, r12
0x0000c84b      4889ef         mov rdi, rbp
0x0000c84e      48894548       mov qword [rbp + 0x48], rax
0x0000c852      e899f5ffff     call sym.transfer_entries
0x0000c857      84c0           test al, al
0x0000c859      0f84da000000   je 0xc939
0x0000c85f      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/bitrotate.h:-43
0x0000c861      4c89e6         mov rsi, r12
0x0000c864      4889ef         mov rdi, rbp
0x0000c867      e884f5ffff     call sym.transfer_entries
0x0000c86c      84c0           test al, al
0x0000c86e      0f84c5000000   je 0xc939
0x0000c874      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/bitrotate.h:-38
0x0000c878      e89365ffff     call sym..plt.got
0x0000c87d      eb03           jmp 0xc882
0x0000c87f      90             nop
0x0000c880      31db           xor ebx, ebx
0x0000c882      488b4c2458     mov rcx, qword [rsp + 0x58]
0x0000c887      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000c890      89d8           mov eax, ebx
0x0000c892      0f8592000000   jne 0xc92a
0x0000c898      4883c460       add rsp, 0x60
0x0000c89c      5b             pop rbx
0x0000c89d      5d             pop rbp
0x0000c89e      415c           pop r12
0x0000c8a0      c3             ret
0x0000c8a1      0f1f80000000.  nop dword [rax]
0x0000c8a8      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/bitrotate.h:-37
0x0000c8ab      660fefc0       pxor xmm0, xmm0
0x0000c8af      48d1e8         shr rax, 1
0x0000c8b2      83e601         and esi, 1
0x0000c8b5      4809f0         or rax, rsi
0x0000c8b8      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000c8bd      f30f58c0       addss xmm0, xmm0
0x0000c8c1      e973feffff     jmp 0xc739
0x0000c8c6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c8d0      f3480f2cf0     cvttss2si rsi, xmm0
0x0000c8d5      e99efeffff     jmp 0xc778
0x0000c8da      660f1f440000   nop word [rax + rax]
0x0000c8e0      bb01000000     mov ebx, 1
0x0000c8e5      eb9b           jmp 0xc882
0x0000c8e7      660f1f840000.  nop word [rax + rax]
0x0000c8f0      488b7d00       mov rdi, qword [rbp]
0x0000c8f4      e81765ffff     call sym..plt.got
0x0000c8f9      488b0424       mov rax, qword [rsp]
0x0000c8fd      48894500       mov qword [rbp], rax
0x0000c901      488b442408     mov rax, qword [rsp + 8]
0x0000c906      48894508       mov qword [rbp + 8], rax
0x0000c90a      488b442410     mov rax, qword [rsp + 0x10]
0x0000c90f      48894510       mov qword [rbp + 0x10], rax
0x0000c913      488b442418     mov rax, qword [rsp + 0x18]
0x0000c918      48894518       mov qword [rbp + 0x18], rax
0x0000c91c      488b442448     mov rax, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/bitrotate.h:-12
0x0000c921      48894548       mov qword [rbp + 0x48], rax
0x0000c925      e958ffffff     jmp 0xc882
0x0000c92a      e80160ffff     call sym.imp.__stack_chk_fail
0x0000c92f      b901000000     mov ecx, 1
0x0000c934      e95dfeffff     jmp 0xc796
0x0000c939      e8225effff     call sym.imp.abort
0x0000c93e      6690           nop
;-- hash_insert_if_absent:
0x0000c940      4155           push r13
0x0000c942      4154           push r12
0x0000c944      55             push rbp
0x0000c945      53             push rbx
0x0000c946      4883ec18       sub rsp, 0x18
0x0000c94a      64488b042528.  mov rax, qword fs:[0x28]
0x0000c953      4889442408     mov qword [rsp + 8], rax
0x0000c958      31c0           xor eax, eax
0x0000c95a      4885f6         test rsi, rsi
0x0000c95d      0f84ba010000   je 0xcb1d
0x0000c963      4989e4         mov r12, rsp
0x0000c966      31c9           xor ecx, ecx
0x0000c968      4989d5         mov r13, rdx
0x0000c96b      4c89e2         mov rdx, r12
0x0000c96e      4889fb         mov rbx, rdi
0x0000c971      4889f5         mov rbp, rsi
0x0000c974      e8d7f2ffff     call sym.hash_find_entry
0x0000c979      4885c0         test rax, rax
0x0000c97c      4889c2         mov rdx, rax
0x0000c97f      742f           je 0xc9b0
0x0000c981      31c0           xor eax, eax
0x0000c983      4d85ed         test r13, r13
0x0000c986      7404           je 0xc98c
0x0000c988      49895500       mov qword [r13], rdx
0x0000c98c      488b4c2408     mov rcx, qword [rsp + 8]
0x0000c991      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000c99a      0f851f020000   jne 0xcbbf
0x0000c9a0      4883c418       add rsp, 0x18
0x0000c9a4      5b             pop rbx
0x0000c9a5      5d             pop rbp
0x0000c9a6      415c           pop r12
0x0000c9a8      415d           pop r13
0x0000c9aa      c3             ret
0x0000c9ab      0f1f440000     nop dword [rax + rax]
0x0000c9b0      488b4318       mov rax, qword [rbx + 0x18]
0x0000c9b4      4885c0         test rax, rax
0x0000c9b7      7877           js 0xca30
0x0000c9b9      660fefc9       pxor xmm1, xmm1
0x0000c9bd      488b5328       mov rdx, qword [rbx + 0x28]
0x0000c9c1      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000c9c6      488b4310       mov rax, qword [rbx + 0x10]
0x0000c9ca      4885c0         test rax, rax
0x0000c9cd      0f8887000000   js 0xca5a
0x0000c9d3      660fefc0       pxor xmm0, xmm0
0x0000c9d7      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000c9dc      f30f594208     mulss xmm0, dword [rdx + 8]             ; ../coreutils-8.31/lib/bitrotate.h:15
0x0000c9e1      0f2ec8         ucomiss xmm1, xmm0
0x0000c9e4      0f8796000000   ja 0xca80
0x0000c9ea      4c8b2424       mov r12, qword [rsp]
0x0000c9ee      49833c2400     cmp qword [r12], 0
0x0000c9f3      0f842f010000   je 0xcb28
0x0000c9f9      488b4348       mov rax, qword [rbx + 0x48]
0x0000c9fd      4885c0         test rax, rax
0x0000ca00      0f843a010000   je 0xcb40
0x0000ca06      488b5008       mov rdx, qword [rax + 8]
0x0000ca0a      48895348       mov qword [rbx + 0x48], rdx
0x0000ca0e      498b542408     mov rdx, qword [r12 + 8]
0x0000ca13      488928         mov qword [rax], rbp
0x0000ca16      48895008       mov qword [rax + 8], rdx
0x0000ca1a      4989442408     mov qword [r12 + 8], rax
0x0000ca1f      b801000000     mov eax, 1
0x0000ca24      4883432001     add qword [rbx + 0x20], 1
0x0000ca29      e95effffff     jmp 0xc98c
0x0000ca2e      6690           nop
0x0000ca30      4889c2         mov rdx, rax
0x0000ca33      660fefc9       pxor xmm1, xmm1
0x0000ca37      83e001         and eax, 1
0x0000ca3a      48d1ea         shr rdx, 1
0x0000ca3d      4809c2         or rdx, rax
0x0000ca40      488b4310       mov rax, qword [rbx + 0x10]
0x0000ca44      f3480f2aca     cvtsi2ss xmm1, rdx                      ; ../coreutils-8.31/lib/bitrotate.h:-3
0x0000ca49      488b5328       mov rdx, qword [rbx + 0x28]
0x0000ca4d      4885c0         test rax, rax
0x0000ca50      f30f58c9       addss xmm1, xmm1
0x0000ca54      0f8979ffffff   jns 0xc9d3
0x0000ca5a      4889c1         mov rcx, rax
0x0000ca5d      660fefc0       pxor xmm0, xmm0
0x0000ca61      48d1e9         shr rcx, 1
0x0000ca64      83e001         and eax, 1                              ; ../coreutils-8.31/lib/bitrotate.h:1
0x0000ca67      4809c1         or rcx, rax
0x0000ca6a      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000ca6f      f30f58c0       addss xmm0, xmm0
0x0000ca73      e964ffffff     jmp 0xc9dc
0x0000ca78      0f1f84000000.  nop dword [rax + rax]
0x0000ca80      488d7b28       lea rdi, [rbx + 0x28]
0x0000ca84      e8e7f2ffff     call sym.check_tuning.isra.0
0x0000ca89      488b4310       mov rax, qword [rbx + 0x10]
0x0000ca8d      488b5328       mov rdx, qword [rbx + 0x28]
0x0000ca91      4885c0         test rax, rax
0x0000ca94      f30f105208     movss xmm2, dword [rdx + 8]
0x0000ca99      0f88c1000000   js 0xcb60
0x0000ca9f      660fefc0       pxor xmm0, xmm0
0x0000caa3      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000caa8      488b4318       mov rax, qword [rbx + 0x18]
0x0000caac      4885c0         test rax, rax
0x0000caaf      0f88cb000000   js 0xcb80
0x0000cab5      660fefc9       pxor xmm1, xmm1
0x0000cab9      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000cabe      0f28da         movaps xmm3, xmm2
0x0000cac1      f30f59d8       mulss xmm3, xmm0
0x0000cac5      0f2ecb         ucomiss xmm1, xmm3
0x0000cac8      0f861cffffff   jbe 0xc9ea
0x0000cace      807a1000       cmp byte [rdx + 0x10], 0
0x0000cad2      f30f59420c     mulss xmm0, dword [rdx + 0xc]
0x0000cad7      7504           jne 0xcadd
0x0000cad9      f30f59c2       mulss xmm0, xmm2
0x0000cadd      0f2e05e88700.  ucomiss xmm0, dword [0x000152cc]
0x0000cae4      736d           jae 0xcb53
0x0000cae6      0f2e05e38700.  ucomiss xmm0, dword [0x000152d0]
0x0000caed      0f83ad000000   jae 0xcba0
0x0000caf3      f3480f2cf0     cvttss2si rsi, xmm0
0x0000caf8      4889df         mov rdi, rbx
0x0000cafb      e800fcffff     call sym.hash_rehash
0x0000cb00      84c0           test al, al
0x0000cb02      744f           je 0xcb53
0x0000cb04      31c9           xor ecx, ecx
0x0000cb06      4c89e2         mov rdx, r12
0x0000cb09      4889ee         mov rsi, rbp
0x0000cb0c      4889df         mov rdi, rbx
0x0000cb0f      e83cf1ffff     call sym.hash_find_entry
0x0000cb14      4885c0         test rax, rax
0x0000cb17      0f84cdfeffff   je 0xc9ea
0x0000cb1d      e83e5cffff     call sym.imp.abort
0x0000cb22      660f1f440000   nop word [rax + rax]
0x0000cb28      49892c24       mov qword [r12], rbp
0x0000cb2c      b801000000     mov eax, 1
0x0000cb31      4883432001     add qword [rbx + 0x20], 1
0x0000cb36      4883431801     add qword [rbx + 0x18], 1
0x0000cb3b      e94cfeffff     jmp 0xc98c
0x0000cb40      bf10000000     mov edi, 0x10
0x0000cb45      e87660ffff     call sym.imp.malloc
0x0000cb4a      4885c0         test rax, rax
0x0000cb4d      0f85bbfeffff   jne 0xca0e
0x0000cb53      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000cb58      e92ffeffff     jmp 0xc98c
0x0000cb5d      0f1f00         nop dword [rax]
0x0000cb60      4889c1         mov rcx, rax
0x0000cb63      660fefc0       pxor xmm0, xmm0
0x0000cb67      48d1e9         shr rcx, 1
0x0000cb6a      83e001         and eax, 1
0x0000cb6d      4809c1         or rcx, rax
0x0000cb70      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000cb75      f30f58c0       addss xmm0, xmm0
0x0000cb79      e92affffff     jmp 0xcaa8
0x0000cb7e      6690           nop
0x0000cb80      4889c1         mov rcx, rax
0x0000cb83      660fefc9       pxor xmm1, xmm1
0x0000cb87      48d1e9         shr rcx, 1
0x0000cb8a      83e001         and eax, 1
0x0000cb8d      4809c1         or rcx, rax
0x0000cb90      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000cb95      f30f58c9       addss xmm1, xmm1
0x0000cb99      e920ffffff     jmp 0xcabe
0x0000cb9e      6690           nop
0x0000cba0      f30f5c052887.  subss xmm0, dword [0x000152d0]
0x0000cba8      48b800000000.  movabs rax, 0x8000000000000000
0x0000cbb2      f3480f2cf0     cvttss2si rsi, xmm0
0x0000cbb7      4831c6         xor rsi, rax
0x0000cbba      e939ffffff     jmp 0xcaf8
0x0000cbbf      e86c5dffff     call sym.imp.__stack_chk_fail
0x0000cbc4      6690           nop
0x0000cbc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_insert:
0x0000cbd0      53             push rbx
0x0000cbd1      4889f3         mov rbx, rsi
0x0000cbd4      4883ec10       sub rsp, 0x10
0x0000cbd8      4889e2         mov rdx, rsp
0x0000cbdb      64488b042528.  mov rax, qword fs:[0x28]
0x0000cbe4      4889442408     mov qword [rsp + 8], rax
0x0000cbe9      31c0           xor eax, eax
0x0000cbeb      e850fdffff     call sym.hash_insert_if_absent
0x0000cbf0      83f8ff         cmp eax, 0xffffffff
0x0000cbf3      742b           je 0xcc20
0x0000cbf5      85c0           test eax, eax
0x0000cbf7      7504           jne 0xcbfd
0x0000cbf9      488b1c24       mov rbx, qword [rsp]
0x0000cbfd      488b4c2408     mov rcx, qword [rsp + 8]
0x0000cc02      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000cc0b      4889d8         mov rax, rbx
0x0000cc0e      7514           jne 0xcc24
0x0000cc10      4883c410       add rsp, 0x10
0x0000cc14      5b             pop rbx
0x0000cc15      c3             ret
0x0000cc16      662e0f1f8400.  nop word cs:[rax + rax]
0x0000cc20      31db           xor ebx, ebx
0x0000cc22      ebd9           jmp 0xcbfd
0x0000cc24      e8075dffff     call sym.imp.__stack_chk_fail
0x0000cc29      0f1f80000000.  nop dword [rax]
;-- hash_delete:
0x0000cc30      4154           push r12
0x0000cc32      55             push rbp
0x0000cc33      b901000000     mov ecx, 1
0x0000cc38      53             push rbx
0x0000cc39      4889fb         mov rbx, rdi
0x0000cc3c      4883ec10       sub rsp, 0x10
0x0000cc40      4889e2         mov rdx, rsp
0x0000cc43      64488b042528.  mov rax, qword fs:[0x28]
0x0000cc4c      4889442408     mov qword [rsp + 8], rax
0x0000cc51      31c0           xor eax, eax
0x0000cc53      e8f8efffff     call sym.hash_find_entry
0x0000cc58      4885c0         test rax, rax
0x0000cc5b      4889c5         mov rbp, rax
0x0000cc5e      740f           je 0xcc6f
0x0000cc60      488b0424       mov rax, qword [rsp]
0x0000cc64      48836b2001     sub qword [rbx + 0x20], 1
0x0000cc69      48833800       cmp qword [rax], 0
0x0000cc6d      7421           je 0xcc90
0x0000cc6f      488b4c2408     mov rcx, qword [rsp + 8]
0x0000cc74      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000cc7d      4889e8         mov rax, rbp
0x0000cc80      0f85a8010000   jne 0xce2e
0x0000cc86      4883c410       add rsp, 0x10
0x0000cc8a      5b             pop rbx
0x0000cc8b      5d             pop rbp
0x0000cc8c      415c           pop r12
0x0000cc8e      c3             ret
0x0000cc8f      90             nop
0x0000cc90      488b4318       mov rax, qword [rbx + 0x18]
0x0000cc94      4883e801       sub rax, 1
0x0000cc98      4885c0         test rax, rax
0x0000cc9b      48894318       mov qword [rbx + 0x18], rax
0x0000cc9f      0f88fb000000   js 0xcda0
0x0000cca5      660fefc0       pxor xmm0, xmm0
0x0000cca9      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000ccae      488b4310       mov rax, qword [rbx + 0x10]
0x0000ccb2      488b5328       mov rdx, qword [rbx + 0x28]
0x0000ccb6      4885c0         test rax, rax
0x0000ccb9      0f88c1000000   js 0xcd80
0x0000ccbf      660fefc9       pxor xmm1, xmm1
0x0000ccc3      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000ccc8      f30f590a       mulss xmm1, dword [rdx]
0x0000cccc      0f2ec8         ucomiss xmm1, xmm0
0x0000cccf      769e           jbe 0xcc6f
0x0000ccd1      488d7b28       lea rdi, [rbx + 0x28]
0x0000ccd5      e896f0ffff     call sym.check_tuning.isra.0
0x0000ccda      488b4310       mov rax, qword [rbx + 0x10]
0x0000ccde      488b5328       mov rdx, qword [rbx + 0x28]
0x0000cce2      4885c0         test rax, rax
0x0000cce5      0f8825010000   js 0xce10
0x0000cceb      660fefc0       pxor xmm0, xmm0
0x0000ccef      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000ccf4      488b4318       mov rax, qword [rbx + 0x18]
0x0000ccf8      4885c0         test rax, rax
0x0000ccfb      0f88ef000000   js 0xcdf0
0x0000cd01      660fefc9       pxor xmm1, xmm1
0x0000cd05      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000cd0a      f30f1012       movss xmm2, dword [rdx]
0x0000cd0e      f30f59d0       mulss xmm2, xmm0
0x0000cd12      0f2ed1         ucomiss xmm2, xmm1
0x0000cd15      0f8654ffffff   jbe 0xcc6f
0x0000cd1b      807a1000       cmp byte [rdx + 0x10], 0
0x0000cd1f      f30f594204     mulss xmm0, dword [rdx + 4]
0x0000cd24      0f84b6000000   je 0xcde0
0x0000cd2a      0f2e059f8500.  ucomiss xmm0, dword [0x000152d0]
0x0000cd31      0f8389000000   jae 0xcdc0
0x0000cd37      f3480f2cf0     cvttss2si rsi, xmm0
0x0000cd3c      4889df         mov rdi, rbx
0x0000cd3f      e8bcf9ffff     call sym.hash_rehash
0x0000cd44      84c0           test al, al
0x0000cd46      0f8523ffffff   jne 0xcc6f
0x0000cd4c      488b7b48       mov rdi, qword [rbx + 0x48]
0x0000cd50      4885ff         test rdi, rdi
0x0000cd53      7414           je 0xcd69
0x0000cd55      0f1f00         nop dword [rax]
0x0000cd58      4c8b6708       mov r12, qword [rdi + 8]
0x0000cd5c      e8af60ffff     call sym..plt.got
0x0000cd61      4d85e4         test r12, r12
0x0000cd64      4c89e7         mov rdi, r12
0x0000cd67      75ef           jne 0xcd58
0x0000cd69      48c743480000.  mov qword [rbx + 0x48], 0
0x0000cd71      e9f9feffff     jmp 0xcc6f
0x0000cd76      662e0f1f8400.  nop word cs:[rax + rax]
0x0000cd80      4889c1         mov rcx, rax
0x0000cd83      660fefc9       pxor xmm1, xmm1
0x0000cd87      48d1e9         shr rcx, 1
0x0000cd8a      83e001         and eax, 1
0x0000cd8d      4809c1         or rcx, rax
0x0000cd90      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000cd95      f30f58c9       addss xmm1, xmm1
0x0000cd99      e92affffff     jmp 0xccc8
0x0000cd9e      6690           nop
0x0000cda0      4889c2         mov rdx, rax
0x0000cda3      660fefc0       pxor xmm0, xmm0
0x0000cda7      48d1ea         shr rdx, 1
0x0000cdaa      83e001         and eax, 1
0x0000cdad      4809c2         or rdx, rax
0x0000cdb0      f3480f2ac2     cvtsi2ss xmm0, rdx
0x0000cdb5      f30f58c0       addss xmm0, xmm0
0x0000cdb9      e9f0feffff     jmp 0xccae
0x0000cdbe      6690           nop
0x0000cdc0      f30f5c050885.  subss xmm0, dword [0x000152d0]
0x0000cdc8      48b800000000.  movabs rax, 0x8000000000000000
0x0000cdd2      f3480f2cf0     cvttss2si rsi, xmm0
0x0000cdd7      4831c6         xor rsi, rax
0x0000cdda      e95dffffff     jmp 0xcd3c
0x0000cddf      90             nop
0x0000cde0      f30f594208     mulss xmm0, dword [rdx + 8]
0x0000cde5      e940ffffff     jmp 0xcd2a
0x0000cdea      660f1f440000   nop word [rax + rax]
0x0000cdf0      4889c1         mov rcx, rax
0x0000cdf3      660fefc9       pxor xmm1, xmm1
0x0000cdf7      48d1e9         shr rcx, 1
0x0000cdfa      83e001         and eax, 1
0x0000cdfd      4809c1         or rcx, rax
0x0000ce00      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000ce05      f30f58c9       addss xmm1, xmm1
0x0000ce09      e9fcfeffff     jmp 0xcd0a
0x0000ce0e      6690           nop
0x0000ce10      4889c1         mov rcx, rax
0x0000ce13      660fefc0       pxor xmm0, xmm0
0x0000ce17      48d1e9         shr rcx, 1
0x0000ce1a      83e001         and eax, 1
0x0000ce1d      4809c1         or rcx, rax
0x0000ce20      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000ce25      f30f58c0       addss xmm0, xmm0
0x0000ce29      e9c6feffff     jmp 0xccf4
0x0000ce2e      e8fd5affff     call sym.imp.__stack_chk_fail
0x0000ce33      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ce3d      0f1f00         nop dword [rax]
;-- triple_hash:
0x0000ce40      55             push rbp                                ; ../coreutils-8.31/lib/hash-triple.c:35
0x0000ce41      53             push rbx
0x0000ce42      4889fd         mov rbp, rdi
0x0000ce45      4889f3         mov rbx, rsi
0x0000ce48      4883ec08       sub rsp, 8
0x0000ce4c      488b3f         mov rdi, qword [rdi]                    ; ../coreutils-8.31/lib/hash-triple.c:37
0x0000ce4f      e8ac480000     call sym.hash_pjw
0x0000ce54      48334508       xor rax, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash-triple.c:40
0x0000ce58      31d2           xor edx, edx
0x0000ce5a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:41
0x0000ce5e      48f7f3         div rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:40
0x0000ce61      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:41
0x0000ce62      5d             pop rbp
0x0000ce63      4889d0         mov rax, rdx
0x0000ce66      c3             ret
0x0000ce67      660f1f840000.  nop word [rax + rax]
;-- triple_hash_no_name:
0x0000ce70      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:46
0x0000ce74      31d2           xor edx, edx
0x0000ce76      48f7f6         div rsi
0x0000ce79      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-triple.c:51
0x0000ce7c      c3             ret
0x0000ce7d      0f1f00         nop dword [rax]
;-- triple_compare:
0x0000ce80      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-triple.c:56
0x0000ce82      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:59
0x0000ce86      48395708       cmp qword [rdi + 8], rdx
0x0000ce8a      7404           je 0xce90
0x0000ce8c      f3c3           ret                                     ; ../coreutils-8.31/lib/hash-triple.c:60
0x0000ce8e      6690           nop
0x0000ce90      488b4e10       mov rcx, qword [rsi + 0x10]             ; ../coreutils-8.31/lib/hash-triple.c:59
0x0000ce94      48394f10       cmp qword [rdi + 0x10], rcx
0x0000ce98      75f2           jne 0xce8c
0x0000ce9a      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:56
0x0000ce9e      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/hash-triple.c:59
0x0000cea1      488b3f         mov rdi, qword [rdi]
0x0000cea4      e897230000     call sym.same_name
0x0000cea9      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:60
0x0000cead      c3             ret
0x0000ceae      6690           nop
;-- triple_compare_ino_str:
0x0000ceb0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-triple.c:64
0x0000ceb2      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:67
0x0000ceb6      48395708       cmp qword [rdi + 8], rdx
0x0000ceba      7404           je 0xcec0
0x0000cebc      f3c3           ret                                     ; ../coreutils-8.31/lib/hash-triple.c:68
0x0000cebe      6690           nop
0x0000cec0      488b4e10       mov rcx, qword [rsi + 0x10]             ; ../coreutils-8.31/lib/hash-triple.c:67
0x0000cec4      48394f10       cmp qword [rdi + 0x10], rcx
0x0000cec8      75f2           jne 0xcebc
0x0000ceca      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:64
0x0000cece      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/hash-triple.c:67
0x0000ced1      488b3f         mov rdi, qword [rdi]
0x0000ced4      e8175cffff     call sym.imp.strcmp
0x0000ced9      85c0           test eax, eax
0x0000cedb      0f94c0         sete al
0x0000cede      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:68
0x0000cee2      c3             ret
0x0000cee3      0f1f00         nop dword [rax]
0x0000cee6      662e0f1f8400.  nop word cs:[rax + rax]
;-- triple_free:
0x0000cef0      53             push rbx                                ; ../coreutils-8.31/lib/hash-triple.c:73
0x0000cef1      4889fb         mov rbx, rdi
0x0000cef4      488b3f         mov rdi, qword [rdi]                    ; ../coreutils-8.31/lib/hash-triple.c:75
0x0000cef7      e8145fffff     call sym..plt.got
0x0000cefc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/hash-triple.c:76
0x0000ceff      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:77
0x0000cf00      e90b5fffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/hash-triple.c:76
0x0000cf05      662e0f1f8400.  nop word cs:[rax + rax]
0x0000cf0f      90             nop
;-- opendirat:
0x0000cf10      4155           push r13                                ; ../coreutils-8.31/lib/opendirat.c:37
0x0000cf12      4154           push r12
0x0000cf14      81ca00090900   or edx, 0x90900                         ; ../coreutils-8.31/lib/opendirat.c:38
0x0000cf1a      55             push rbp                                ; ../coreutils-8.31/lib/opendirat.c:37
0x0000cf1b      53             push rbx
0x0000cf1c      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/opendirat.c:40
0x0000cf1e      4989cc         mov r12, rcx                            ; ../coreutils-8.31/lib/opendirat.c:37
0x0000cf21      4883ec08       sub rsp, 8
0x0000cf25      e856480000     call sym.openat_safer                   ; ../coreutils-8.31/lib/opendirat.c:40
0x0000cf2a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/opendirat.c:42
0x0000cf2c      7852           js 0xcf80
0x0000cf2e      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x0000cf30      89c3           mov ebx, eax
0x0000cf32      e8e95dffff     call sym.imp.fdopendir
0x0000cf37      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/opendirat.c:45
0x0000cf3a      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x0000cf3d      7419           je 0xcf58                               ; ../coreutils-8.31/lib/opendirat.c:45
0x0000cf3f      41891c24       mov dword [r12], ebx                    ; ../coreutils-8.31/lib/opendirat.c:46
0x0000cf43      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x0000cf47      4889e8         mov rax, rbp
0x0000cf4a      5b             pop rbx
0x0000cf4b      5d             pop rbp
0x0000cf4c      415c           pop r12
0x0000cf4e      415d           pop r13
0x0000cf50      c3             ret
0x0000cf51      0f1f80000000.  nop dword [rax]
0x0000cf58      e81358ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/opendirat.c:49
0x0000cf5d      448b28         mov r13d, dword [rax]
0x0000cf60      4989c4         mov r12, rax
0x0000cf63      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/opendirat.c:50
0x0000cf65      e8c65affff     call sym.imp.close
0x0000cf6a      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/opendirat.c:54
0x0000cf6d      45892c24       mov dword [r12], r13d                   ; ../coreutils-8.31/lib/opendirat.c:51
0x0000cf71      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x0000cf75      5b             pop rbx
0x0000cf76      5d             pop rbp
0x0000cf77      415c           pop r12
0x0000cf79      415d           pop r13
0x0000cf7b      c3             ret
0x0000cf7c      0f1f4000       nop dword [rax]
0x0000cf80      4883c408       add rsp, 8
0x0000cf84      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/opendirat.c:43
0x0000cf86      5b             pop rbx                                 ; ../coreutils-8.31/lib/opendirat.c:54
0x0000cf87      4889e8         mov rax, rbp
0x0000cf8a      5d             pop rbp
0x0000cf8b      415c           pop r12
0x0000cf8d      415d           pop r13
0x0000cf8f      c3             ret
;-- set_program_name:
0x0000cf90      4885ff         test rdi, rdi
0x0000cf93      53             push rbx                                ; ../coreutils-8.31/lib/progname.c:40
0x0000cf94      7477           je 0xd00d                               ; ../coreutils-8.31/lib/progname.c:51
0x0000cf96      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000cf9b      4889fb         mov rbx, rdi
0x0000cf9e      e8fd59ffff     call sym.imp.strrchr
0x0000cfa3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x0000cfa6      7455           je 0xcffd
0x0000cfa8      4c8d4001       lea r8, [rax + 1]
0x0000cfac      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000cfaf      4829da         sub rdx, rbx
0x0000cfb2      4883fa06       cmp rdx, 6
0x0000cfb6      7e45           jle 0xcffd
0x0000cfb8      488d70fa       lea rsi, [rax - 6]
0x0000cfbc      488d3d558300.  lea rdi, str..libs                      ; 0x15318 ; "/.libs/"
0x0000cfc3      b907000000     mov ecx, 7
0x0000cfc8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000cfca      0f97c2         seta dl
0x0000cfcd      80da00         sbb dl, 0
0x0000cfd0      84d2           test dl, dl
0x0000cfd2      7529           jne 0xcffd
0x0000cfd4      488d3d458300.  lea rdi, [0x00015320]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000cfdb      b903000000     mov ecx, 3
0x0000cfe0      4c89c6         mov rsi, r8
0x0000cfe3      4c89c3         mov rbx, r8
0x0000cfe6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000cfe8      0f97c2         seta dl
0x0000cfeb      80da00         sbb dl, 0
0x0000cfee      84d2           test dl, dl
0x0000cff0      750b           jne 0xcffd
0x0000cff2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x0000cff6      48891da3d020.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x21a0a0:8]=0
0x0000cffd      48891d9cd520.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x21a5a0:8]=0
0x0000d004      48891dbdd020.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x21a0c8:8]=0
0x0000d00b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000d00c      c3             ret
0x0000d00d      488b0dccd020.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a0e0:8]=0
0x0000d014      488d3dc58200.  lea rdi, [0x000152e0]                   ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000d01b      ba37000000     mov edx, 0x37                           ; '7'
0x0000d020      be01000000     mov esi, 1
0x0000d025      e8765dffff     call sym.imp.fwrite
0x0000d02a      e83157ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000d02f      90             nop
;-- qcopy_acl:
0x0000d030      4154           push r12                                ; ../coreutils-8.31/lib/qcopy-acl.c:41
0x0000d032      55             push rbp
0x0000d033      4189cc         mov r12d, ecx
0x0000d036      53             push rbx
0x0000d037      4889d5         mov rbp, rdx
0x0000d03a      4489c2         mov edx, r8d                            ; ../coreutils-8.31/lib/qcopy-acl.c:45
0x0000d03d      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/qcopy-acl.c:41
0x0000d041      488d5c2404     lea rbx, [rsp + 4]                      ; ../coreutils-8.31/lib/qcopy-acl.c:45
0x0000d046      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/qcopy-acl.c:41
0x0000d04f      4889442408     mov qword [rsp + 8], rax
0x0000d054      31c0           xor eax, eax
0x0000d056      4889d9         mov rcx, rbx                            ; ../coreutils-8.31/lib/qcopy-acl.c:45
0x0000d059      e862440000     call sym.get_permissions
0x0000d05e      85c0           test eax, eax                           ; ../coreutils-8.31/lib/qcopy-acl.c:46
0x0000d060      7536           jne 0xd098
0x0000d062      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/qcopy-acl.c:48
0x0000d065      4889df         mov rdi, rbx
0x0000d068      4489e2         mov edx, r12d
0x0000d06b      e880440000     call sym.set_permissions
0x0000d070      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/qcopy-acl.c:49
0x0000d073      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/qcopy-acl.c:48
0x0000d075      e836440000     call sym.free_permission_context        ; ../coreutils-8.31/lib/qcopy-acl.c:49
0x0000d07a      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/qcopy-acl.c:51
0x0000d07f      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000d088      89e8           mov eax, ebp
0x0000d08a      7513           jne 0xd09f
0x0000d08c      4883c410       add rsp, 0x10
0x0000d090      5b             pop rbx
0x0000d091      5d             pop rbp
0x0000d092      415c           pop r12
0x0000d094      c3             ret
0x0000d095      0f1f00         nop dword [rax]
0x0000d098      bdfeffffff     mov ebp, 0xfffffffe                     ; ../coreutils-8.31/lib/qcopy-acl.c:47 ; 4294967294
0x0000d09d      ebdb           jmp 0xd07a
0x0000d09f      e88c58ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/qcopy-acl.c:51
0x0000d0a4      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d0ae      6690           nop
;-- qset_acl:
0x0000d0b0      55             push rbp                                ; ../coreutils-8.31/lib/qset-acl.c:40
0x0000d0b1      53             push rbx
0x0000d0b2      4883ec18       sub rsp, 0x18
0x0000d0b6      488d5c2404     lea rbx, [rsp + 4]                      ; ../coreutils-8.31/lib/qset-acl.c:46
0x0000d0bb      89542404       mov dword [rsp + 4], edx                ; ../coreutils-8.31/lib/qset-acl.c:45
0x0000d0bf      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/qset-acl.c:46
0x0000d0c1      4889fe         mov rsi, rdi
0x0000d0c4      4889df         mov rdi, rbx
0x0000d0c7      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/qset-acl.c:40
0x0000d0d0      4889442408     mov qword [rsp + 8], rax
0x0000d0d5      31c0           xor eax, eax
0x0000d0d7      e814440000     call sym.set_permissions                ; ../coreutils-8.31/lib/qset-acl.c:46
0x0000d0dc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/qset-acl.c:47
0x0000d0df      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/qset-acl.c:46
0x0000d0e1      e8ca430000     call sym.free_permission_context        ; ../coreutils-8.31/lib/qset-acl.c:47
0x0000d0e6      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/qset-acl.c:49
0x0000d0eb      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000d0f4      7509           jne 0xd0ff
0x0000d0f6      4883c418       add rsp, 0x18
0x0000d0fa      89e8           mov eax, ebp
0x0000d0fc      5b             pop rbx
0x0000d0fd      5d             pop rbp
0x0000d0fe      c3             ret
0x0000d0ff      e82c58ffff     call sym.imp.__stack_chk_fail
0x0000d104      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d10e      6690           nop
;-- gettext_quote.part.1:
0x0000d110      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x0000d111      53             push rbx
0x0000d112      4889fd         mov rbp, rdi
0x0000d115      89f3           mov ebx, esi
0x0000d117      4883ec08       sub rsp, 8
0x0000d11b      e820460000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x0000d120      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x0000d123      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000d126      80fa55         cmp dl, 0x55
0x0000d129      7475           je 0xd1a0
0x0000d12b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000d12e      7420           je 0xd150
0x0000d130      488d05fc8100.  lea rax, str.l______l                   ; 0x15333 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000d137      488d15f78100.  lea rdx, [0x00015335]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000d13e      83fb09         cmp ebx, 9
0x0000d141      480f45c2       cmovne rax, rdx
0x0000d145      4883c408       add rsp, 8
0x0000d149      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000d14a      5d             pop rbp
0x0000d14b      c3             ret
0x0000d14c      0f1f4000       nop dword [rax]
0x0000d150      0fb65001       movzx edx, byte [rax + 1]
0x0000d154      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000d157      80fa42         cmp dl, 0x42
0x0000d15a      75d4           jne 0xd130
0x0000d15c      80780231       cmp byte [rax + 2], 0x31
0x0000d160      75ce           jne 0xd130
0x0000d162      80780338       cmp byte [rax + 3], 0x38
0x0000d166      75c8           jne 0xd130
0x0000d168      80780430       cmp byte [rax + 4], 0x30
0x0000d16c      75c2           jne 0xd130
0x0000d16e      80780533       cmp byte [rax + 5], 0x33
0x0000d172      75bc           jne 0xd130
0x0000d174      80780630       cmp byte [rax + 6], 0x30
0x0000d178      75b6           jne 0xd130
0x0000d17a      80780700       cmp byte [rax + 7], 0
0x0000d17e      75b0           jne 0xd130
0x0000d180      807d0060       cmp byte [rbp], 0x60
0x0000d184      488d05a18100.  lea rax, [0x0001532c]
0x0000d18b      488d159e8100.  lea rdx, [0x00015330]
0x0000d192      480f45c2       cmovne rax, rdx
0x0000d196      4883c408       add rsp, 8
0x0000d19a      5b             pop rbx
0x0000d19b      5d             pop rbp
0x0000d19c      c3             ret
0x0000d19d      0f1f00         nop dword [rax]
0x0000d1a0      0fb65001       movzx edx, byte [rax + 1]
0x0000d1a4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000d1a7      80fa54         cmp dl, 0x54
0x0000d1aa      7584           jne 0xd130
0x0000d1ac      0fb65002       movzx edx, byte [rax + 2]
0x0000d1b0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000d1b3      80fa46         cmp dl, 0x46
0x0000d1b6      0f8574ffffff   jne 0xd130
0x0000d1bc      8078032d       cmp byte [rax + 3], 0x2d
0x0000d1c0      0f856affffff   jne 0xd130
0x0000d1c6      80780438       cmp byte [rax + 4], 0x38
0x0000d1ca      0f8560ffffff   jne 0xd130
0x0000d1d0      80780500       cmp byte [rax + 5], 0
0x0000d1d4      0f8556ffffff   jne 0xd130
0x0000d1da      807d0060       cmp byte [rbp], 0x60
0x0000d1de      488d053f8100.  lea rax, [0x00015324]                   ; "\u2018"
0x0000d1e5      488d153c8100.  lea rdx, [0x00015328]                   ; "\u2019"
0x0000d1ec      480f45c2       cmovne rax, rdx
0x0000d1f0      4883c408       add rsp, 8
0x0000d1f4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x0000d1f5      5d             pop rbp
0x0000d1f6      c3             ret
0x0000d1f7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x0000d200      4157           push r15
0x0000d202      4156           push r14
0x0000d204      4589c7         mov r15d, r8d
0x0000d207      4155           push r13
0x0000d209      4154           push r12
0x0000d20b      4989fe         mov r14, rdi
0x0000d20e      55             push rbp
0x0000d20f      53             push rbx
0x0000d210      4489cb         mov ebx, r9d
0x0000d213      4989f5         mov r13, rsi
0x0000d216      4889cd         mov rbp, rcx
0x0000d219      83e302         and ebx, 2
0x0000d21c      4881ecb80000.  sub rsp, 0xb8
0x0000d223      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000d22b      4889542410     mov qword [rsp + 0x10], rdx
0x0000d230      4489442408     mov dword [rsp + 8], r8d
0x0000d235      44894c2478     mov dword [rsp + 0x78], r9d
0x0000d23a      4889442420     mov qword [rsp + 0x20], rax
0x0000d23f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x0000d247      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000d24c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x0000d254      4889442460     mov qword [rsp + 0x60], rax
0x0000d259      64488b042528.  mov rax, qword fs:[0x28]
0x0000d262      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000d26a      31c0           xor eax, eax
0x0000d26c      e87f56ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000d271      4183ff0a       cmp r15d, 0xa
0x0000d275      4889442458     mov qword [rsp + 0x58], rax
0x0000d27a      0f87af110000   ja 0xe42f
0x0000d280      488d0d198100.  lea rcx, [0x000153a0]
0x0000d287      4489fa         mov edx, r15d
0x0000d28a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000d28e      4801c8         add rax, rcx
0x0000d291      ffe0           jmp rax
0x0000d293      c644240e01     mov byte [rsp + 0xe], 1
0x0000d298      c644247c00     mov byte [rsp + 0x7c], 0
0x0000d29d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x0000d2a0      48c744245000.  mov qword [rsp + 0x50], 0
0x0000d2a9      c644240f01     mov byte [rsp + 0xf], 1
0x0000d2ae      c644240d00     mov byte [rsp + 0xd], 0
0x0000d2b3      488d057b8000.  lea rax, [0x00015335]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000d2ba      48c744241801.  mov qword [rsp + 0x18], 1
0x0000d2c3      4531ff         xor r15d, r15d
0x0000d2c6      c74424080200.  mov dword [rsp + 8], 2
0x0000d2ce      4889442448     mov qword [rsp + 0x48], rax
0x0000d2d3      4531db         xor r11d, r11d
0x0000d2d6      4889e8         mov rax, rbp
0x0000d2d9      4589e0         mov r8d, r12d
0x0000d2dc      4c89dd         mov rbp, r11
0x0000d2df      4989c3         mov r11, rax
0x0000d2e2      660f1f440000   nop word [rax + rax]
0x0000d2e8      4939eb         cmp r11, rbp
0x0000d2eb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000d2ef      4983fbff       cmp r11, 0xffffffffffffffff
0x0000d2f3      750d           jne 0xd302
0x0000d2f5      488b442410     mov rax, qword [rsp + 0x10]
0x0000d2fa      803c2800       cmp byte [rax + rbp], 0
0x0000d2fe      410f95c4       setne r12b
0x0000d302      4584e4         test r12b, r12b
0x0000d305      0f8455060000   je 0xd960
0x0000d30b      837c240802     cmp dword [rsp + 8], 2
0x0000d310      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000d315      4c8d0c2f       lea r9, [rdi + rbp]
0x0000d319      0f95c0         setne al
0x0000d31c      2244240d       and al, byte [rsp + 0xd]
0x0000d320      4189c2         mov r10d, eax
0x0000d323      0f84a7000000   je 0xd3d0
0x0000d329      488b442418     mov rax, qword [rsp + 0x18]
0x0000d32e      4885c0         test rax, rax
0x0000d331      0f8429040000   je 0xd760
0x0000d337      4983fbff       cmp r11, 0xffffffffffffffff
0x0000d33b      488d5c0500     lea rbx, [rbp + rax]
0x0000d340      752e           jne 0xd370
0x0000d342      4883f801       cmp rax, 1
0x0000d346      7628           jbe 0xd370
0x0000d348      4488442438     mov byte [rsp + 0x38], r8b
0x0000d34d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x0000d352      4c894c2428     mov qword [rsp + 0x28], r9
0x0000d357      e8a455ffff     call sym.imp.strlen
0x0000d35c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000d362      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x0000d368      4989c3         mov r11, rax
0x0000d36b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x0000d370      4c39db         cmp rbx, r11
0x0000d373      4488542428     mov byte [rsp + 0x28], r10b
0x0000d378      0f87b2050000   ja 0xd930
0x0000d37e      488b542418     mov rdx, qword [rsp + 0x18]
0x0000d383      488b742448     mov rsi, qword [rsp + 0x48]
0x0000d388      4c89cf         mov rdi, r9
0x0000d38b      4c895c2440     mov qword [rsp + 0x40], r11
0x0000d390      4488442438     mov byte [rsp + 0x38], r8b
0x0000d395      4c894c2430     mov qword [rsp + 0x30], r9
0x0000d39a      e8f156ffff     call sym.imp.memcmp
0x0000d39f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x0000d3a1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x0000d3a6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000d3ac      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x0000d3b1      0f8579050000   jne 0xd930
0x0000d3b7      807c240f00     cmp byte [rsp + 0xf], 0
0x0000d3bc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x0000d3c2      0f857d0f0000   jne 0xe345
0x0000d3c8      0f1f84000000.  nop dword [rax + rax]
0x0000d3d0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x0000d3d4      80fb7e         cmp bl, 0x7e
0x0000d3d7      0f871b030000   ja 0xd6f8
0x0000d3dd      488d0de87f00.  lea rcx, [0x000153cc]
0x0000d3e4      0fb6d3         movzx edx, bl
0x0000d3e7      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000d3eb      4801c8         add rax, rcx
0x0000d3ee      ffe0           jmp rax
0x0000d3f0      4531d2         xor r10d, r10d
0x0000d3f3      4983fb01       cmp r11, 1
0x0000d3f7      0f95c0         setne al
0x0000d3fa      4983fbff       cmp r11, 0xffffffffffffffff
0x0000d3fe      750c           jne 0xd40c
0x0000d400      488b442410     mov rax, qword [rsp + 0x10]
0x0000d405      80780100       cmp byte [rax + 1], 0
0x0000d409      0f95c0         setne al
0x0000d40c      837c240802     cmp dword [rsp + 8], 2
0x0000d411      0f94c2         sete dl
0x0000d414      84c0           test al, al
0x0000d416      0f844c020000   je 0xd668
0x0000d41c      4531e4         xor r12d, r12d
0x0000d41f      31c0           xor eax, eax
0x0000d421      0f1f80000000.  nop dword [rax]
0x0000d428      807c240d01     cmp byte [rsp + 0xd], 1
0x0000d42d      0f850f010000   jne 0xd542
0x0000d433      84d2           test dl, dl
0x0000d435      0f8507010000   jne 0xd542
0x0000d43b      488b742420     mov rsi, qword [rsp + 0x20]
0x0000d440      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x0000d443      7414           je 0xd459
0x0000d445      89da           mov edx, ebx
0x0000d447      c0ea05         shr dl, 5
0x0000d44a      0fb6d2         movzx edx, dl
0x0000d44d      8b1496         mov edx, dword [rsi + rdx*4]
0x0000d450      0fa3da         bt edx, ebx
0x0000d453      0f824a010000   jb 0xd5a3
0x0000d459      4584d2         test r10b, r10b
0x0000d45c      0f8541010000   jne 0xd5a3
0x0000d462      83f001         xor eax, 1
0x0000d465      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x0000d469      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000d46c      84c0           test al, al
0x0000d46e      7420           je 0xd490                               ; ../coreutils-8.31/lib/quotearg.c:338
0x0000d470      4d39fd         cmp r13, r15
0x0000d473      7605           jbe 0xd47a
0x0000d475      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000d47a      498d4701       lea rax, [r15 + 1]
0x0000d47e      4939c5         cmp r13, rax
0x0000d481      7606           jbe 0xd489
0x0000d483      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000d489      4983c702       add r15, 2
0x0000d48d      4531c0         xor r8d, r8d
0x0000d490      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x0000d493      7304           jae 0xd499                              ; ../coreutils-8.31/lib/quotearg.c:68
0x0000d495      43881c3e       mov byte [r14 + r15], bl
0x0000d499      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000d49e      4983c701       add r15, 1
0x0000d4a2      b800000000     mov eax, 0
0x0000d4a7      4584e4         test r12b, r12b
0x0000d4aa      0f44f8         cmove edi, eax
0x0000d4ad      40887c240e     mov byte [rsp + 0xe], dil
0x0000d4b2      e931feffff     jmp 0xd2e8
0x0000d4b7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x0000d4c0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x0000d4c3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x0000d4c7      83f802         cmp eax, 2
0x0000d4ca      0f84b8050000   je 0xda88
0x0000d4d0      83f805         cmp eax, 5
0x0000d4d3      0f846f050000   je 0xda48
0x0000d4d9      83f802         cmp eax, 2
0x0000d4dc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000d4e1      0f94c2         sete dl
0x0000d4e4      4531e4         xor r12d, r12d
0x0000d4e7      31c0           xor eax, eax
0x0000d4e9      e93affffff     jmp 0xd428
0x0000d4ee      6690           nop
0x0000d4f0      4531d2         xor r10d, r10d
0x0000d4f3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x0000d4f8      0f8402050000   je 0xda00
0x0000d4fe      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x0000d503      31d2           xor edx, edx
0x0000d505      31c0           xor eax, eax
0x0000d507      bb27000000     mov ebx, 0x27                           ; '''
0x0000d50c      e917ffffff     jmp 0xd428
0x0000d511      0f1f80000000.  nop dword [rax]
0x0000d518      ba09000000     mov edx, 9
0x0000d51d      bb74000000     mov ebx, 0x74                           ; 't'
0x0000d522      837c240802     cmp dword [rsp + 8], 2
0x0000d527      0f94c0         sete al
0x0000d52a      2244240f       and al, byte [rsp + 0xf]
0x0000d52e      0f854a010000   jne 0xd67e
0x0000d534      807c240d00     cmp byte [rsp + 0xd], 0
0x0000d539      7565           jne 0xd5a0
0x0000d53b      89d3           mov ebx, edx
0x0000d53d      4531e4         xor r12d, r12d
0x0000d540      31c0           xor eax, eax
0x0000d542      807c240f00     cmp byte [rsp + 0xf], 0
0x0000d547      0f85eefeffff   jne 0xd43b
0x0000d54d      e907ffffff     jmp 0xd459                              ; ../coreutils-8.31/lib/quotearg.c:210
0x0000d552      660f1f440000   nop word [rax + rax]
0x0000d558      ba08000000     mov edx, 8
0x0000d55d      bb62000000     mov ebx, 0x62                           ; 'b'
0x0000d562      ebd0           jmp 0xd534
0x0000d564      0f1f4000       nop dword [rax]
0x0000d568      837c240802     cmp dword [rsp + 8], 2
0x0000d56d      0f84cd030000   je 0xd940
0x0000d573      807c240d00     cmp byte [rsp + 0xd], 0
0x0000d578      0f8412020000   je 0xd790
0x0000d57e      807c240f00     cmp byte [rsp + 0xf], 0
0x0000d583      0f8407020000   je 0xd790
0x0000d589      48837c241800   cmp qword [rsp + 0x18], 0
0x0000d58f      0f85b6030000   jne 0xd94b
0x0000d595      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000d59a      660f1f440000   nop word [rax + rax]
0x0000d5a0      4531e4         xor r12d, r12d
0x0000d5a3      837c240802     cmp dword [rsp + 8], 2
0x0000d5a8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000d5ab      807c240f00     cmp byte [rsp + 0xf], 0
0x0000d5b0      89d0           mov eax, edx
0x0000d5b2      0f8550080000   jne 0xde08
0x0000d5b8      4489c0         mov eax, r8d
0x0000d5bb      83f001         xor eax, 1
0x0000d5be      20d0           and al, dl
0x0000d5c0      742f           je 0xd5f1
0x0000d5c2      4d39fd         cmp r13, r15
0x0000d5c5      7605           jbe 0xd5cc
0x0000d5c7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000d5cc      498d5701       lea rdx, [r15 + 1]
0x0000d5d0      4939d5         cmp r13, rdx
0x0000d5d3      7606           jbe 0xd5db
0x0000d5d5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000d5db      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000d5df      4939d5         cmp r13, rdx
0x0000d5e2      7606           jbe 0xd5ea
0x0000d5e4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000d5ea      4983c703       add r15, 3
0x0000d5ee      4189c0         mov r8d, eax
0x0000d5f1      4d39fd         cmp r13, r15
0x0000d5f4      7605           jbe 0xd5fb
0x0000d5f6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000d5fb      4983c701       add r15, 1
0x0000d5ff      4883c501       add rbp, 1
0x0000d603      e988feffff     jmp 0xd490
0x0000d608      0f1f84000000.  nop dword [rax + rax]
0x0000d610      807c240d00     cmp byte [rsp + 0xd], 0
0x0000d615      0f85c8010000   jne 0xd7e3
0x0000d61b      31d2           xor edx, edx
0x0000d61d      f644247801     test byte [rsp + 0x78], 1
0x0000d622      0f8413ffffff   je 0xd53b
0x0000d628      4883c501       add rbp, 1
0x0000d62c      e9b7fcffff     jmp 0xd2e8
0x0000d631      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x0000d638      837c240802     cmp dword [rsp + 8], 2
0x0000d63d      0f94c2         sete dl
0x0000d640      31c0           xor eax, eax
0x0000d642      e9e1fdffff     jmp 0xd428
0x0000d647      660f1f840000.  nop word [rax + rax]
0x0000d650      ba07000000     mov edx, 7
0x0000d655      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000d65a      e9d5feffff     jmp 0xd534
0x0000d65f      90             nop
0x0000d660      837c240802     cmp dword [rsp + 8], 2
0x0000d665      0f94c2         sete dl
0x0000d668      4885ed         test rbp, rbp
0x0000d66b      0f85abfdffff   jne 0xd41c
0x0000d671      0fb644240f     movzx eax, byte [rsp + 0xf]
0x0000d676      20d0           and al, dl
0x0000d678      0f84aafdffff   je 0xd428
0x0000d67e      4c89dd         mov rbp, r11
0x0000d681      c74424080200.  mov dword [rsp + 8], 2
0x0000d689      e9fb060000     jmp 0xdd89
0x0000d68e      6690           nop
0x0000d690      837c240802     cmp dword [rsp + 8], 2
0x0000d695      0f94c2         sete dl
0x0000d698      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000d69b      ebd4           jmp 0xd671
0x0000d69d      0f1f00         nop dword [rax]
0x0000d6a0      837c240802     cmp dword [rsp + 8], 2
0x0000d6a5      bb20000000     mov ebx, 0x20                           ; "@"
0x0000d6aa      0f94c2         sete dl
0x0000d6ad      ebc2           jmp 0xd671
0x0000d6af      90             nop
0x0000d6b0      ba0d000000     mov edx, 0xd
0x0000d6b5      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000d6ba      e963feffff     jmp 0xd522
0x0000d6bf      90             nop
0x0000d6c0      ba0c000000     mov edx, 0xc
0x0000d6c5      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000d6ca      e965feffff     jmp 0xd534
0x0000d6cf      90             nop
0x0000d6d0      ba0b000000     mov edx, 0xb
0x0000d6d5      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000d6da      e955feffff     jmp 0xd534
0x0000d6df      90             nop
0x0000d6e0      ba0a000000     mov edx, 0xa
0x0000d6e5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000d6ea      e933feffff     jmp 0xd522
0x0000d6ef      90             nop
0x0000d6f0      4531d2         xor r10d, r10d
0x0000d6f3      0f1f440000     nop dword [rax + rax]
0x0000d6f8      48837c245801   cmp qword [rsp + 0x58], 1
0x0000d6fe      0f85a4030000   jne 0xdaa8
0x0000d704      4c895c2438     mov qword [rsp + 0x38], r11
0x0000d709      4488442430     mov byte [rsp + 0x30], r8b
0x0000d70e      4488542428     mov byte [rsp + 0x28], r10b
0x0000d713      e8e856ffff     call sym.imp.__ctype_b_loc
0x0000d718      488b08         mov rcx, qword [rax]
0x0000d71b      0fb6d3         movzx edx, bl
0x0000d71e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x0000d724      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000d72a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000d72f      bf01000000     mov edi, 1
0x0000d734      0fb70451       movzx eax, word [rcx + rdx*2]
0x0000d738      66250040       and ax, 0x4000                          ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x0000d73c      410f95c4       setne r12b
0x0000d740      0f94c0         sete al
0x0000d743      2244240d       and al, byte [rsp + 0xd]
0x0000d747      84c0           test al, al
0x0000d749      0f8592090000   jne 0xe0e1
0x0000d74f      837c240802     cmp dword [rsp + 8], 2
0x0000d754      0f94c2         sete dl
0x0000d757      e9ccfcffff     jmp 0xd428
0x0000d75c      0f1f4000       nop dword [rax]
0x0000d760      410fb619       movzx ebx, byte [r9]
0x0000d764      80fb7e         cmp bl, 0x7e
0x0000d767      7787           ja 0xd6f0
0x0000d769      488d0d587e00.  lea rcx, [0x000155c8]
0x0000d770      0fb6d3         movzx edx, bl
0x0000d773      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000d777      4801c8         add rax, rcx
0x0000d77a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000d77c      0f1f4000       nop dword [rax]
0x0000d780      4531d2         xor r10d, r10d
0x0000d783      807c240d00     cmp byte [rsp + 0xd], 0
0x0000d788      0f85f0fdffff   jne 0xd57e
0x0000d78e      6690           nop
0x0000d790      ba5c000000     mov edx, 0x5c                           ; '\'
0x0000d795      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000d79a      e995fdffff     jmp 0xd534
0x0000d79f      90             nop
0x0000d7a0      ba0c000000     mov edx, 0xc
0x0000d7a5      4531d2         xor r10d, r10d
0x0000d7a8      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000d7ad      e982fdffff     jmp 0xd534
0x0000d7b2      660f1f440000   nop word [rax + rax]
0x0000d7b8      ba0a000000     mov edx, 0xa
0x0000d7bd      4531d2         xor r10d, r10d
0x0000d7c0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x0000d7c5      e958fdffff     jmp 0xd522
0x0000d7ca      660f1f440000   nop word [rax + rax]
0x0000d7d0      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000d7d5      e9c6fdffff     jmp 0xd5a0
0x0000d7da      660f1f440000   nop word [rax + rax]
0x0000d7e0      4531d2         xor r10d, r10d
0x0000d7e3      837c240802     cmp dword [rsp + 8], 2
0x0000d7e8      0f94c2         sete dl
0x0000d7eb      807c240f00     cmp byte [rsp + 0xf], 0
0x0000d7f0      0f85940b0000   jne 0xe38a
0x0000d7f6      4489c0         mov eax, r8d
0x0000d7f9      4c89f9         mov rcx, r15
0x0000d7fc      83f001         xor eax, 1
0x0000d7ff      20d0           and al, dl
0x0000d801      742d           je 0xd830
0x0000d803      4d39fd         cmp r13, r15
0x0000d806      7605           jbe 0xd80d
0x0000d808      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000d80d      498d4f01       lea rcx, [r15 + 1]
0x0000d811      4939cd         cmp r13, rcx
0x0000d814      7606           jbe 0xd81c
0x0000d816      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000d81c      498d4f02       lea rcx, [r15 + 2]
0x0000d820      4939cd         cmp r13, rcx
0x0000d823      0f8730060000   ja 0xde59
0x0000d829      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000d82d      4189c0         mov r8d, eax
0x0000d830      4939cd         cmp r13, rcx
0x0000d833      7605           jbe 0xd83a
0x0000d835      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000d83a      837c240802     cmp dword [rsp + 8], 2
0x0000d83f      4c8d7901       lea r15, [rcx + 1]
0x0000d843      0f8400060000   je 0xde49
0x0000d849      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000d84d      4c39d8         cmp rax, r11
0x0000d850      7319           jae 0xd86b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x0000d852      488b442410     mov rax, qword [rsp + 0x10]
0x0000d857      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000d85c      88442428       mov byte [rsp + 0x28], al
0x0000d860      83e830         sub eax, 0x30
0x0000d863      3c09           cmp al, 9
0x0000d865      0f862e080000   jbe 0xe099
0x0000d86b      4489e0         mov eax, r12d
0x0000d86e      bb30000000     mov ebx, 0x30                           ; '0'
0x0000d873      4531e4         xor r12d, r12d
0x0000d876      e9adfbffff     jmp 0xd428                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000d87b      0f1f440000     nop dword [rax + rax]
0x0000d880      837c240802     cmp dword [rsp + 8], 2
0x0000d885      4589d4         mov r12d, r10d
0x0000d888      0f94c2         sete dl
0x0000d88b      4531d2         xor r10d, r10d
0x0000d88e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x0000d890      e993fbffff     jmp 0xd428                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x0000d895      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x0000d898      837c240802     cmp dword [rsp + 8], 2
0x0000d89d      0f94c2         sete dl
0x0000d8a0      4531d2         xor r10d, r10d
0x0000d8a3      e9c0fdffff     jmp 0xd668
0x0000d8a8      0f1f84000000.  nop dword [rax + rax]
0x0000d8b0      837c240802     cmp dword [rsp + 8], 2
0x0000d8b5      0f94c2         sete dl
0x0000d8b8      4531d2         xor r10d, r10d
0x0000d8bb      4531e4         xor r12d, r12d
0x0000d8be      e9aefdffff     jmp 0xd671
0x0000d8c3      0f1f440000     nop dword [rax + rax]
0x0000d8c8      837c240802     cmp dword [rsp + 8], 2
0x0000d8cd      4589d4         mov r12d, r10d
0x0000d8d0      bb20000000     mov ebx, 0x20                           ; "@"
0x0000d8d5      0f94c2         sete dl
0x0000d8d8      4531d2         xor r10d, r10d
0x0000d8db      e991fdffff     jmp 0xd671
0x0000d8e0      ba0d000000     mov edx, 0xd
0x0000d8e5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x0000d8e8      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000d8ed      e930fcffff     jmp 0xd522
0x0000d8f2      660f1f440000   nop word [rax + rax]
0x0000d8f8      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000d8fd      e99efcffff     jmp 0xd5a0
0x0000d902      660f1f440000   nop word [rax + rax]
0x0000d908      ba09000000     mov edx, 9
0x0000d90d      4531d2         xor r10d, r10d
0x0000d910      bb74000000     mov ebx, 0x74                           ; 't'
0x0000d915      e908fcffff     jmp 0xd522
0x0000d91a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x0000d920      bb62000000     mov ebx, 0x62                           ; 'b'
0x0000d925      e976fcffff     jmp 0xd5a0
0x0000d92a      660f1f440000   nop word [rax + rax]
0x0000d930      4531d2         xor r10d, r10d
0x0000d933      e998faffff     jmp 0xd3d0
0x0000d938      0f1f84000000.  nop dword [rax + rax]
0x0000d940      807c240f00     cmp byte [rsp + 0xf], 0
0x0000d945      0f8565090000   jne 0xe2b0
0x0000d94b      4883c501       add rbp, 1
0x0000d94f      4489c0         mov eax, r8d
0x0000d952      4531e4         xor r12d, r12d
0x0000d955      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000d95a      e90dfbffff     jmp 0xd46c
0x0000d95f      90             nop
0x0000d960      837c240802     cmp dword [rsp + 8], 2
0x0000d965      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000d96a      4589c4         mov r12d, r8d
0x0000d96d      4c89dd         mov rbp, r11
0x0000d970      0f94c2         sete dl
0x0000d973      89d8           mov eax, ebx
0x0000d975      4d85ff         test r15, r15
0x0000d978      0f94c1         sete cl
0x0000d97b      21d0           and eax, edx
0x0000d97d      20c8           and al, cl
0x0000d97f      0f85610a0000   jne 0xe3e6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x0000d985      89d8           mov eax, ebx
0x0000d987      83f001         xor eax, 1
0x0000d98a      20c2           and dl, al
0x0000d98c      0f846a090000   je 0xe2fc
0x0000d992      807c247c00     cmp byte [rsp + 0x7c], 0
0x0000d997      0f845d090000   je 0xe2fa
0x0000d99d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x0000d9a2      0f85f5090000   jne 0xe39d
0x0000d9a8      4d85ed         test r13, r13
0x0000d9ab      0f94c0         sete al
0x0000d9ae      48837c245000   cmp qword [rsp + 0x50], 0
0x0000d9b4      0f95c2         setne dl
0x0000d9b7      20d0           and al, dl
0x0000d9b9      0f841d0a0000   je 0xe3dc
0x0000d9bf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000d9c4      488d1d6a7900.  lea rbx, [0x00015335]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000d9cb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000d9cf      c74424080200.  mov dword [rsp + 8], 2
0x0000d9d7      41bf01000000   mov r15d, 1
0x0000d9dd      48c744241801.  mov qword [rsp + 0x18], 1
0x0000d9e6      c644240f00     mov byte [rsp + 0xf], 0
0x0000d9eb      48895c2448     mov qword [rsp + 0x48], rbx
0x0000d9f0      8844247c       mov byte [rsp + 0x7c], al
0x0000d9f4      e9daf8ffff     jmp 0xd2d3
0x0000d9f9      0f1f80000000.  nop dword [rax]
0x0000da00      807c240f00     cmp byte [rsp + 0xf], 0
0x0000da05      0f85a5080000   jne 0xe2b0
0x0000da0b      4d85ed         test r13, r13
0x0000da0e      0f84fc030000   je 0xde10                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x0000da14      31d2           xor edx, edx
0x0000da16      48837c245000   cmp qword [rsp + 0x50], 0
0x0000da1c      0f85ee030000   jne 0xde10                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000da22      4c896c2450     mov qword [rsp + 0x50], r13
0x0000da27      4983c703       add r15, 3
0x0000da2b      31c0           xor eax, eax
0x0000da2d      448864247c     mov byte [rsp + 0x7c], r12b
0x0000da32      4531c0         xor r8d, r8d
0x0000da35      4989d5         mov r13, rdx
0x0000da38      bb27000000     mov ebx, 0x27                           ; '''
0x0000da3d      e917faffff     jmp 0xd459
0x0000da42      660f1f440000   nop word [rax + rax]
0x0000da48      f644247804     test byte [rsp + 0x78], 4
0x0000da4d      7421           je 0xda70
0x0000da4f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x0000da53      4c39d9         cmp rcx, r11
0x0000da56      7318           jae 0xda70
0x0000da58      488b442410     mov rax, qword [rsp + 0x10]
0x0000da5d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x0000da62      0f848a070000   je 0xe1f2
0x0000da68      0f1f84000000.  nop dword [rax + rax]
0x0000da70      31d2           xor edx, edx
0x0000da72      4531e4         xor r12d, r12d
0x0000da75      31c0           xor eax, eax
0x0000da77      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000da7c      e9a7f9ffff     jmp 0xd428
0x0000da81      0f1f80000000.  nop dword [rax]
0x0000da88      807c240f00     cmp byte [rsp + 0xf], 0
0x0000da8d      0f851d080000   jne 0xe2b0
0x0000da93      4531e4         xor r12d, r12d
0x0000da96      31c0           xor eax, eax
0x0000da98      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000da9d      e9b7f9ffff     jmp 0xd459                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x0000daa2      660f1f440000   nop word [rax + rax]
0x0000daa8      488d8424a000.  lea rax, [rsp + 0xa0]
0x0000dab0      4983fbff       cmp r11, 0xffffffffffffffff
0x0000dab4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x0000dac0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x0000dac5      752d           jne 0xdaf4
0x0000dac7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000dacc      4488442440     mov byte [rsp + 0x40], r8b
0x0000dad1      4488542438     mov byte [rsp + 0x38], r10b
0x0000dad6      4c894c2430     mov qword [rsp + 0x30], r9
0x0000dadb      e8204effff     call sym.imp.strlen
0x0000dae0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x0000dae6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000daec      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000daef      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x0000daf4      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000dafc      31c9           xor ecx, ecx
0x0000dafe      885c247e       mov byte [rsp + 0x7e], bl
0x0000db02      448844247d     mov byte [rsp + 0x7d], r8b
0x0000db07      4889cb         mov rbx, rcx
0x0000db0a      4c898c248800.  mov qword [rsp + 0x88], r9
0x0000db12      4889442438     mov qword [rsp + 0x38], rax
0x0000db17      448854247f     mov byte [rsp + 0x7f], r10b
0x0000db1c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x0000db24      4c89742440     mov qword [rsp + 0x40], r14
0x0000db29      4c896c2470     mov qword [rsp + 0x70], r13
0x0000db2e      4c895c2430     mov qword [rsp + 0x30], r11
0x0000db33      488b442410     mov rax, qword [rsp + 0x10]
0x0000db38      4c8d741d00     lea r14, [rbp + rbx]
0x0000db3d      488b542430     mov rdx, qword [rsp + 0x30]
0x0000db42      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0000db47      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000db4c      4e8d2c30       lea r13, [rax + r14]
0x0000db50      4c29f2         sub rdx, r14
0x0000db53      4c89ee         mov rsi, r13
0x0000db56      e8c5380000     call sym.rpl_mbrtowc
0x0000db5b      4885c0         test rax, rax
0x0000db5e      4989c7         mov r15, rax
0x0000db61      744e           je 0xdbb1
0x0000db63      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000db67      0f8418060000   je 0xe185
0x0000db6d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000db71      0f849a050000   je 0xe111
0x0000db77      837c240802     cmp dword [rsp + 8], 2
0x0000db7c      0f94c0         sete al
0x0000db7f      2244240f       and al, byte [rsp + 0xf]
0x0000db83      0f8597010000   jne 0xdd20
0x0000db89      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x0000db90      e84b52ffff     call sym.imp.iswprint
0x0000db95      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000db9a      85c0           test eax, eax
0x0000db9c      b800000000     mov eax, 0
0x0000dba1      440f44e0       cmove r12d, eax
0x0000dba5      4c01fb         add rbx, r15
0x0000dba8      e81352ffff     call sym.imp.mbsinit
0x0000dbad      85c0           test eax, eax
0x0000dbaf      7482           je 0xdb33
0x0000dbb1      4489e2         mov edx, r12d
0x0000dbb4      4889df         mov rdi, rbx
0x0000dbb7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000dbbd      83f201         xor edx, 1
0x0000dbc0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000dbc5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000dbcb      2254240d       and dl, byte [rsp + 0xd]
0x0000dbcf      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x0000dbd7      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000dbdc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000dbe1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000dbe6      4883ff01       cmp rdi, 1
0x0000dbea      0f86fb050000   jbe 0xe1eb
0x0000dbf0      4889f9         mov rcx, rdi
0x0000dbf3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x0000dbf5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000dbfb      4801e9         add rcx, rbp
0x0000dbfe      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000dc03      e9b6000000     jmp 0xdcbe
0x0000dc08      0f1f84000000.  nop dword [rax + rax]
0x0000dc10      837c240802     cmp dword [rsp + 8], 2
0x0000dc15      0f94c0         sete al
0x0000dc18      4584c9         test r9b, r9b
0x0000dc1b      0f85af040000   jne 0xe0d0
0x0000dc21      4489c6         mov esi, r8d
0x0000dc24      83f601         xor esi, 1
0x0000dc27      4020f0         and al, sil
0x0000dc2a      742f           je 0xdc5b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000dc2c      4d39fd         cmp r13, r15
0x0000dc2f      7605           jbe 0xdc36
0x0000dc31      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000dc36      498d7701       lea rsi, [r15 + 1]
0x0000dc3a      4939f5         cmp r13, rsi
0x0000dc3d      7606           jbe 0xdc45                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000dc3f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000dc45      498d7702       lea rsi, [r15 + 2]
0x0000dc49      4939f5         cmp r13, rsi
0x0000dc4c      7606           jbe 0xdc54
0x0000dc4e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000dc54      4983c703       add r15, 3
0x0000dc58      4189c0         mov r8d, eax
0x0000dc5b      4d39fd         cmp r13, r15
0x0000dc5e      7605           jbe 0xdc65
0x0000dc60      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000dc65      498d4701       lea rax, [r15 + 1]
0x0000dc69      4939c5         cmp r13, rax
0x0000dc6c      760d           jbe 0xdc7b
0x0000dc6e      89d8           mov eax, ebx
0x0000dc70      c0e806         shr al, 6
0x0000dc73      83c030         add eax, 0x30
0x0000dc76      4388443e01     mov byte [r14 + r15 + 1], al
0x0000dc7b      498d4702       lea rax, [r15 + 2]
0x0000dc7f      4939c5         cmp r13, rax
0x0000dc82      7610           jbe 0xdc94
0x0000dc84      89d8           mov eax, ebx
0x0000dc86      c0e803         shr al, 3
0x0000dc89      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000dc8c      83c030         add eax, 0x30
0x0000dc8f      4388443e02     mov byte [r14 + r15 + 2], al
0x0000dc94      83e307         and ebx, 7
0x0000dc97      4883c501       add rbp, 1
0x0000dc9b      4983c703       add r15, 3
0x0000dc9f      83c330         add ebx, 0x30
0x0000dca2      4839cd         cmp rbp, rcx
0x0000dca5      0f83e5f7ffff   jae 0xd490
0x0000dcab      89d6           mov esi, edx
0x0000dcad      4d39fd         cmp r13, r15
0x0000dcb0      7604           jbe 0xdcb6
0x0000dcb2      43881c3e       mov byte [r14 + r15], bl
0x0000dcb6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000dcba      4983c701       add r15, 1
0x0000dcbe      84d2           test dl, dl
0x0000dcc0      0f854affffff   jne 0xdc10
0x0000dcc6      89f0           mov eax, esi
0x0000dcc8      83f001         xor eax, 1
0x0000dccb      4421c0         and eax, r8d
0x0000dcce      4584d2         test r10b, r10b
0x0000dcd1      740e           je 0xdce1
0x0000dcd3      4d39fd         cmp r13, r15
0x0000dcd6      7605           jbe 0xdcdd
0x0000dcd8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000dcdd      4983c701       add r15, 1
0x0000dce1      4883c501       add rbp, 1
0x0000dce5      4839cd         cmp rbp, rcx
0x0000dce8      0f837ef7ffff   jae 0xd46c
0x0000dcee      84c0           test al, al
0x0000dcf0      0f84f8030000   je 0xe0ee
0x0000dcf6      4d39fd         cmp r13, r15
0x0000dcf9      7605           jbe 0xdd00
0x0000dcfb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000dd00      498d4701       lea rax, [r15 + 1]
0x0000dd04      4939c5         cmp r13, rax
0x0000dd07      7606           jbe 0xdd0f
0x0000dd09      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000dd0f      4983c702       add r15, 2
0x0000dd13      4531d2         xor r10d, r10d
0x0000dd16      4531c0         xor r8d, r8d
0x0000dd19      eb92           jmp 0xdcad
0x0000dd1b      0f1f440000     nop dword [rax + rax]
0x0000dd20      4983ff01       cmp r15, 1
0x0000dd24      0f845ffeffff   je 0xdb89
0x0000dd2a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000dd2f      4a8d0c3f       lea rcx, [rdi + r15]
0x0000dd33      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x0000dd38      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000dd3c      eb0f           jmp 0xdd4d
0x0000dd3e      6690           nop
0x0000dd40      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x0000dd44      4939d0         cmp r8, rdx
0x0000dd47      0f843cfeffff   je 0xdb89
0x0000dd4d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x0000dd50      83e95b         sub ecx, 0x5b
0x0000dd53      80f921         cmp cl, 0x21
0x0000dd56      77e8           ja 0xdd40                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x0000dd58      be01000000     mov esi, 1
0x0000dd5d      48d3e6         shl rsi, cl
0x0000dd60      4889f1         mov rcx, rsi
0x0000dd63      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000dd6d      4885f1         test rcx, rsi
0x0000dd70      74ce           je 0xdd40
0x0000dd72      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000dd77      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000dd7c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x0000dd81      c74424080200.  mov dword [rsp + 8], 2
0x0000dd89      807c240d00     cmp byte [rsp + 0xd], 0
0x0000dd8e      7410           je 0xdda0
0x0000dd90      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x0000dd92      b804000000     mov eax, 4
0x0000dd97      0f44442408     cmove eax, dword [rsp + 8]
0x0000dd9c      89442408       mov dword [rsp + 8], eax
0x0000dda0      4883ec08       sub rsp, 8
0x0000dda4      4889e9         mov rcx, rbp
0x0000dda7      4c89ee         mov rsi, r13
0x0000ddaa      ff742468       push qword [rsp + 0x68]
0x0000ddae      ff742478       push qword [rsp + 0x78]
0x0000ddb2      4c89f7         mov rdi, r14
0x0000ddb5      6a00           push 0
0x0000ddb7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000ddbf      448b442428     mov r8d, dword [rsp + 0x28]
0x0000ddc4      488b542430     mov rdx, qword [rsp + 0x30]
0x0000ddc9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000ddcd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x0000ddd2      4883c420       add rsp, 0x20
0x0000ddd6      4989c7         mov r15, rax
0x0000ddd9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x0000dde1      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000ddea      4c89f8         mov rax, r15
0x0000dded      0f8500060000   jne 0xe3f3
0x0000ddf3      4881c4b80000.  add rsp, 0xb8
0x0000ddfa      5b             pop rbx
0x0000ddfb      5d             pop rbp
0x0000ddfc      415c           pop r12
0x0000ddfe      415d           pop r13
0x0000de00      415e           pop r14
0x0000de02      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x0000de04      c3             ret
0x0000de05      0f1f00         nop dword [rax]
0x0000de08      4c89dd         mov rbp, r11
0x0000de0b      e979ffffff     jmp 0xdd89
0x0000de10      4d39fd         cmp r13, r15
0x0000de13      7605           jbe 0xde1a
0x0000de15      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000de1a      498d4701       lea rax, [r15 + 1]
0x0000de1e      4939c5         cmp r13, rax
0x0000de21      7606           jbe 0xde29
0x0000de23      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x0000de29      498d4702       lea rax, [r15 + 2]
0x0000de2d      4939c5         cmp r13, rax
0x0000de30      0f86ec050000   jbe 0xe422
0x0000de36      4c89ea         mov rdx, r13
0x0000de39      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000de3f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000de44      e9d9fbffff     jmp 0xda22
0x0000de49      4489e0         mov eax, r12d
0x0000de4c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x0000de51      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x0000de54      e900f6ffff     jmp 0xd459                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x0000de59      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000de5f      e9c5f9ffff     jmp 0xd829
0x0000de64      85db           test ebx, ebx
0x0000de66      0f8527f4ffff   jne 0xd293
0x0000de6c      c644240d01     mov byte [rsp + 0xd], 1
0x0000de71      4d85ed         test r13, r13
0x0000de74      0f8590050000   jne 0xe40a
0x0000de7a      488d05b47400.  lea rax, [0x00015335]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000de81      48c744245000.  mov qword [rsp + 0x50], 0
0x0000de8a      c644240e01     mov byte [rsp + 0xe], 1
0x0000de8f      c644247c00     mov byte [rsp + 0x7c], 0
0x0000de94      4531e4         xor r12d, r12d
0x0000de97      c644240f00     mov byte [rsp + 0xf], 0
0x0000de9c      48c744241801.  mov qword [rsp + 0x18], 1
0x0000dea5      4889442448     mov qword [rsp + 0x48], rax
0x0000deaa      41bf01000000   mov r15d, 1
0x0000deb0      c74424080200.  mov dword [rsp + 8], 2
0x0000deb8      e916f4ffff     jmp 0xd2d3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000debd      0f1f00         nop dword [rax]
0x0000dec0      85db           test ebx, ebx
0x0000dec2      0f85f5030000   jne 0xe2bd
0x0000dec8      4d85ed         test r13, r13
0x0000decb      0f8425020000   je 0xe0f6
0x0000ded1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x0000ded5      c644240e01     mov byte [rsp + 0xe], 1
0x0000deda      4531e4         xor r12d, r12d
0x0000dedd      c644247c00     mov byte [rsp + 0x7c], 0
0x0000dee2      48c744245000.  mov qword [rsp + 0x50], 0
0x0000deeb      488d05417400.  lea rax, str.l______l                   ; 0x15333 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000def2      c644240f00     mov byte [rsp + 0xf], 0
0x0000def7      c644240d01     mov byte [rsp + 0xd], 1
0x0000defc      48c744241801.  mov qword [rsp + 0x18], 1
0x0000df05      41bf01000000   mov r15d, 1
0x0000df0b      4889442448     mov qword [rsp + 0x48], rax
0x0000df10      e9bef3ffff     jmp 0xd2d3
0x0000df15      488d05177400.  lea rax, str.l______l                   ; 0x15333 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000df1c      c644240e01     mov byte [rsp + 0xe], 1
0x0000df21      c644247c00     mov byte [rsp + 0x7c], 0
0x0000df26      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x0000df29      48c744245000.  mov qword [rsp + 0x50], 0
0x0000df32      c644240f01     mov byte [rsp + 0xf], 1
0x0000df37      c644240d01     mov byte [rsp + 0xd], 1
0x0000df3c      48c744241801.  mov qword [rsp + 0x18], 1
0x0000df45      4531ff         xor r15d, r15d
0x0000df48      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000df4d      c74424080500.  mov dword [rsp + 8], 5
0x0000df55      e979f3ffff     jmp 0xd2d3
0x0000df5a      c644240e01     mov byte [rsp + 0xe], 1
0x0000df5f      c644247c00     mov byte [rsp + 0x7c], 0
0x0000df64      4531e4         xor r12d, r12d
0x0000df67      48c744245000.  mov qword [rsp + 0x50], 0
0x0000df70      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x0000df75      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x0000df78      c644240d01     mov byte [rsp + 0xd], 1
0x0000df7d      48c744241800.  mov qword [rsp + 0x18], 0
0x0000df86      48c744244800.  mov qword [rsp + 0x48], 0
0x0000df8f      e93ff3ffff     jmp 0xd2d3
0x0000df94      837c24080a     cmp dword [rsp + 8], 0xa
0x0000df99      7456           je 0xdff1
0x0000df9b      488d35957300.  lea rsi, [0x00015337]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x0000dfa2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x0000dfa4      ba05000000     mov edx, 5
0x0000dfa9      e83249ffff     call sym.imp.dcgettext
0x0000dfae      4889c1         mov rcx, rax
0x0000dfb1      4889442468     mov qword [rsp + 0x68], rax
0x0000dfb6      488d057a7300.  lea rax, [0x00015337]                   ; "`"
0x0000dfbd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x0000dfc0      0f8498030000   je 0xe35e
0x0000dfc6      488d35687300.  lea rsi, [0x00015335]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000dfcd      31ff           xor edi, edi
0x0000dfcf      ba05000000     mov edx, 5
0x0000dfd4      e80749ffff     call sym.imp.dcgettext
0x0000dfd9      4889c1         mov rcx, rax
0x0000dfdc      4889442460     mov qword [rsp + 0x60], rax
0x0000dfe1      488d054d7300.  lea rax, [0x00015335]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000dfe8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000dfeb      0f8483030000   je 0xe374
0x0000dff1      4531ff         xor r15d, r15d
0x0000dff4      85db           test ebx, ebx
0x0000dff6      0f84c1010000   je 0xe1bd
0x0000dffc      85db           test ebx, ebx
0x0000dffe      488b5c2460     mov rbx, qword [rsp + 0x60]
0x0000e003      0f9544240f     setne byte [rsp + 0xf]
0x0000e008      4531e4         xor r12d, r12d
0x0000e00b      4889df         mov rdi, rbx
0x0000e00e      e8ed48ffff     call sym.imp.strlen
0x0000e013      48895c2448     mov qword [rsp + 0x48], rbx
0x0000e018      4889442418     mov qword [rsp + 0x18], rax
0x0000e01d      c644240e01     mov byte [rsp + 0xe], 1
0x0000e022      c644247c00     mov byte [rsp + 0x7c], 0
0x0000e027      48c744245000.  mov qword [rsp + 0x50], 0
0x0000e030      c644240d01     mov byte [rsp + 0xd], 1
0x0000e035      e999f2ffff     jmp 0xd2d3
0x0000e03a      c644240e01     mov byte [rsp + 0xe], 1
0x0000e03f      c644247c00     mov byte [rsp + 0x7c], 0
0x0000e044      4531e4         xor r12d, r12d
0x0000e047      48c744245000.  mov qword [rsp + 0x50], 0
0x0000e050      c644240f00     mov byte [rsp + 0xf], 0
0x0000e055      4531ff         xor r15d, r15d
0x0000e058      c644240d00     mov byte [rsp + 0xd], 0
0x0000e05d      48c744241800.  mov qword [rsp + 0x18], 0
0x0000e066      48c744244800.  mov qword [rsp + 0x48], 0
0x0000e06f      e95ff2ffff     jmp 0xd2d3
0x0000e074      c644240e01     mov byte [rsp + 0xe], 1
0x0000e079      c644247c00     mov byte [rsp + 0x7c], 0
0x0000e07e      4531e4         xor r12d, r12d
0x0000e081      48c744245000.  mov qword [rsp + 0x50], 0
0x0000e08a      c644240f01     mov byte [rsp + 0xf], 1
0x0000e08f      c644240d01     mov byte [rsp + 0xd], 1
0x0000e094      e91af2ffff     jmp 0xd2b3
0x0000e099      4d39fd         cmp r13, r15
0x0000e09c      7605           jbe 0xe0a3
0x0000e09e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x0000e0a3      488d4102       lea rax, [rcx + 2]
0x0000e0a7      4939c5         cmp r13, rax
0x0000e0aa      7606           jbe 0xe0b2
0x0000e0ac      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x0000e0b2      4489e0         mov eax, r12d
0x0000e0b5      4c8d7903       lea r15, [rcx + 3]
0x0000e0b9      4531e4         xor r12d, r12d
0x0000e0bc      bb30000000     mov ebx, 0x30                           ; '0'
0x0000e0c1      e962f3ffff     jmp 0xd428
0x0000e0c6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000e0d0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000e0d5      4c89dd         mov rbp, r11
0x0000e0d8      885c240d       mov byte [rsp + 0xd], bl
0x0000e0dc      e9a8fcffff     jmp 0xdd89
0x0000e0e1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000e0e6      4531e4         xor r12d, r12d
0x0000e0e9      e902fbffff     jmp 0xdbf0
0x0000e0ee      4531d2         xor r10d, r10d
0x0000e0f1      e9b7fbffff     jmp 0xdcad
0x0000e0f6      48c744245000.  mov qword [rsp + 0x50], 0
0x0000e0ff      c644240e01     mov byte [rsp + 0xe], 1
0x0000e104      4531e4         xor r12d, r12d
0x0000e107      c644247c00     mov byte [rsp + 0x7c], 0
0x0000e10c      e9dafdffff     jmp 0xdeeb
0x0000e111      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000e116      4c89f6         mov rsi, r14
0x0000e119      4c89e9         mov rcx, r13
0x0000e11c      4889d8         mov rax, rbx
0x0000e11f      4889df         mov rdi, rbx
0x0000e122      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000e128      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000e12d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x0000e135      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x0000e138      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000e13e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x0000e146      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000e14b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000e150      7326           jae 0xe178
0x0000e152      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000e155      7510           jne 0xe167
0x0000e157      eb1f           jmp 0xe178
0x0000e159      0f1f80000000.  nop dword [rax]
0x0000e160      41803c0100     cmp byte [r9 + rax], 0
0x0000e165      740e           je 0xe175
0x0000e167      4883c001       add rax, 1
0x0000e16b      488d540500     lea rdx, [rbp + rax]
0x0000e170      4939d3         cmp r11, rdx
0x0000e173      77eb           ja 0xe160
0x0000e175      4889c7         mov rdi, rax
0x0000e178      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000e17d      4531e4         xor r12d, r12d
0x0000e180      e961faffff     jmp 0xdbe6
0x0000e185      4889df         mov rdi, rbx
0x0000e188      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000e18e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000e193      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000e199      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x0000e1a1      4531e4         xor r12d, r12d
0x0000e1a4      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000e1a9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000e1ae      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000e1b3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000e1b8      e929faffff     jmp 0xdbe6
0x0000e1bd      488b542468     mov rdx, qword [rsp + 0x68]
0x0000e1c2      0fb602         movzx eax, byte [rdx]
0x0000e1c5      84c0           test al, al
0x0000e1c7      0f842ffeffff   je 0xdffc
0x0000e1cd      0f1f00         nop dword [rax]
0x0000e1d0      4d39fd         cmp r13, r15
0x0000e1d3      7604           jbe 0xe1d9
0x0000e1d5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x0000e1d9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000e1dd      420fb6043a     movzx eax, byte [rdx + r15]
0x0000e1e2      84c0           test al, al
0x0000e1e4      75ea           jne 0xe1d0
0x0000e1e6      e911feffff     jmp 0xdffc
0x0000e1eb      89d0           mov eax, edx
0x0000e1ed      e955f5ffff     jmp 0xd747
0x0000e1f2      0fb61c08       movzx ebx, byte [rax + rcx]
0x0000e1f6      80fb3e         cmp bl, 0x3e
0x0000e1f9      0f8771f8ffff   ja 0xda70
0x0000e1ff      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x0000e209      480fa3d8       bt rax, rbx
0x0000e20d      0f835df8ffff   jae 0xda70
0x0000e213      807c240f00     cmp byte [rsp + 0xf], 0
0x0000e218      0f85e4010000   jne 0xe402                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000e21e      4d39fd         cmp r13, r15
0x0000e221      7605           jbe 0xe228
0x0000e223      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x0000e228      498d4701       lea rax, [r15 + 1]
0x0000e22c      4939c5         cmp r13, rax
0x0000e22f      7606           jbe 0xe237
0x0000e231      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x0000e237      498d4702       lea rax, [r15 + 2]
0x0000e23b      4939c5         cmp r13, rax
0x0000e23e      7606           jbe 0xe246
0x0000e240      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x0000e246      498d4703       lea rax, [r15 + 3]
0x0000e24a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000e24d      7606           jbe 0xe255
0x0000e24f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x0000e255      4983c704       add r15, 4
0x0000e259      31d2           xor edx, edx
0x0000e25b      4531e4         xor r12d, r12d
0x0000e25e      31c0           xor eax, eax
0x0000e260      4889cd         mov rbp, rcx
0x0000e263      e9c0f1ffff     jmp 0xd428
0x0000e268      85db           test ebx, ebx
0x0000e26a      0f8488010000   je 0xe3f8
0x0000e270      488d05be7000.  lea rax, [0x00015335]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000e277      c644240e01     mov byte [rsp + 0xe], 1
0x0000e27c      c644247c00     mov byte [rsp + 0x7c], 0
0x0000e281      4531e4         xor r12d, r12d
0x0000e284      48c744245000.  mov qword [rsp + 0x50], 0
0x0000e28d      c644240f01     mov byte [rsp + 0xf], 1
0x0000e292      c644240d00     mov byte [rsp + 0xd], 0
0x0000e297      48c744241801.  mov qword [rsp + 0x18], 1
0x0000e2a0      4531ff         xor r15d, r15d
0x0000e2a3      4889442448     mov qword [rsp + 0x48], rax
0x0000e2a8      e926f0ffff     jmp 0xd2d3
0x0000e2ad      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x0000e2b0      4c89dd         mov rbp, r11
0x0000e2b3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x0000e2b8      e9ccfaffff     jmp 0xdd89
0x0000e2bd      488d056f7000.  lea rax, str.l______l                   ; 0x15333 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000e2c4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x0000e2c9      c644247c00     mov byte [rsp + 0x7c], 0
0x0000e2ce      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x0000e2d1      48c744245000.  mov qword [rsp + 0x50], 0
0x0000e2da      c644240f01     mov byte [rsp + 0xf], 1
0x0000e2df      c644240d01     mov byte [rsp + 0xd], 1
0x0000e2e4      48c744241801.  mov qword [rsp + 0x18], 1
0x0000e2ed      4531ff         xor r15d, r15d
0x0000e2f0      4889442448     mov qword [rsp + 0x48], rax
0x0000e2f5      e9d9efffff     jmp 0xd2d3
0x0000e2fa      89d0           mov eax, edx
0x0000e2fc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x0000e301      4885db         test rbx, rbx
0x0000e304      742c           je 0xe332
0x0000e306      84c0           test al, al
0x0000e308      7428           je 0xe332
0x0000e30a      0fb60b         movzx ecx, byte [rbx]
0x0000e30d      4889d8         mov rax, rbx
0x0000e310      84c9           test cl, cl
0x0000e312      741e           je 0xe332
0x0000e314      4c89fa         mov rdx, r15
0x0000e317      4c29f8         sub rax, r15
0x0000e31a      4939d5         cmp r13, rdx
0x0000e31d      7604           jbe 0xe323
0x0000e31f      41880c16       mov byte [r14 + rdx], cl
0x0000e323      4883c201       add rdx, 1
0x0000e327      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000e32b      84c9           test cl, cl
0x0000e32d      75eb           jne 0xe31a
0x0000e32f      4989d7         mov r15, rdx
0x0000e332      4d39fd         cmp r13, r15
0x0000e335      0f869efaffff   jbe 0xddd9
0x0000e33b      43c6043e00     mov byte [r14 + r15], 0
0x0000e340      e994faffff     jmp 0xddd9
0x0000e345      837c240802     cmp dword [rsp + 8], 2
0x0000e34a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000e34f      4c89dd         mov rbp, r11
0x0000e352      0f94c0         sete al
0x0000e355      885c240d       mov byte [rsp + 0xd], bl
0x0000e359      e92bfaffff     jmp 0xdd89
0x0000e35e      8b742408       mov esi, dword [rsp + 8]
0x0000e362      4889cf         mov rdi, rcx
0x0000e365      e8a6edffff     call sym.gettext_quote.part.1
0x0000e36a      4889442468     mov qword [rsp + 0x68], rax
0x0000e36f      e952fcffff     jmp 0xdfc6
0x0000e374      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x0000e378      4889cf         mov rdi, rcx
0x0000e37b      e890edffff     call sym.gettext_quote.part.1
0x0000e380      4889442460     mov qword [rsp + 0x60], rax
0x0000e385      e967fcffff     jmp 0xdff1
0x0000e38a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000e38f      4c89dd         mov rbp, r11
0x0000e392      89d0           mov eax, edx
0x0000e394      885c240d       mov byte [rsp + 0xd], bl
0x0000e398      e9ecf9ffff     jmp 0xdd89
0x0000e39d      4883ec08       sub rsp, 8
0x0000e3a1      41b805000000   mov r8d, 5
0x0000e3a7      4c89d9         mov rcx, r11
0x0000e3aa      ff742468       push qword [rsp + 0x68]
0x0000e3ae      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x0000e3b2      4c89f7         mov rdi, r14
0x0000e3b5      ff742438       push qword [rsp + 0x38]
0x0000e3b9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000e3c1      488b542430     mov rdx, qword [rsp + 0x30]
0x0000e3c6      488b742470     mov rsi, qword [rsp + 0x70]
0x0000e3cb      e830eeffff     call sym.quotearg_buffer_restyled
0x0000e3d0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x0000e3d4      4989c7         mov r15, rax
0x0000e3d7      e9fdf9ffff     jmp 0xddd9
0x0000e3dc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x0000e3e1      e916ffffff     jmp 0xe2fc
0x0000e3e6      c74424080200.  mov dword [rsp + 8], 2
0x0000e3ee      e996f9ffff     jmp 0xdd89
0x0000e3f3      e83845ffff     call sym.imp.__stack_chk_fail
0x0000e3f8      c644240d00     mov byte [rsp + 0xd], 0
0x0000e3fd      e96ffaffff     jmp 0xde71
0x0000e402      4c89dd         mov rbp, r11
0x0000e405      e996f9ffff     jmp 0xdda0
0x0000e40a      c644240e01     mov byte [rsp + 0xe], 1
0x0000e40f      31c0           xor eax, eax
0x0000e411      4531e4         xor r12d, r12d
0x0000e414      48c744245000.  mov qword [rsp + 0x50], 0
0x0000e41d      e9a2f5ffff     jmp 0xd9c4
0x0000e422      4c89ea         mov rdx, r13
0x0000e425      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000e42a      e9f3f5ffff     jmp 0xda22
0x0000e42f      e82c43ffff     call sym.imp.abort
0x0000e434      6690           nop
0x0000e436      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x0000e440      4157           push r15
0x0000e442      4156           push r14
0x0000e444      4c63ff         movsxd r15, edi
0x0000e447      4155           push r13
0x0000e449      4154           push r12
0x0000e44b      4989d6         mov r14, rdx
0x0000e44e      55             push rbp
0x0000e44f      53             push rbx
0x0000e450      4889cd         mov rbp, rcx
0x0000e453      4883ec28       sub rsp, 0x28
0x0000e457      4889742408     mov qword [rsp + 8], rsi
0x0000e45c      e80f43ffff     call sym.imp.__errno_location
0x0000e461      4989c5         mov r13, rax
0x0000e464      8b00           mov eax, dword [rax]
0x0000e466      4585ff         test r15d, r15d
0x0000e469      488b1d10bc20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x21a080:8]=0x21a090 obj.slotvec0
0x0000e470      89442418       mov dword [rsp + 0x18], eax
0x0000e474      0f8867010000   js 0xe5e1
0x0000e47a      44393df7bb20.  cmp dword [obj.nslots], r15d            ; [0x21a078:4]=1
0x0000e481      7f62           jg 0xe4e5
0x0000e483      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000e48a      0f8456010000   je 0xe5e6
0x0000e490      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x0000e494      488d05f5bb20.  lea rax, obj.slotvec0                   ; 0x21a090
0x0000e49b      4963f4         movsxd rsi, r12d
0x0000e49e      48c1e604       shl rsi, 4
0x0000e4a2      4839c3         cmp rbx, rax
0x0000e4a5      0f8415010000   je 0xe5c0
0x0000e4ab      4889df         mov rdi, rbx
0x0000e4ae      e8cd2b0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x0000e4b3      4889c3         mov rbx, rax
0x0000e4b6      488905c3bb20.  mov qword [obj.slotvec], rax            ; [0x21a080:8]=0x21a090 obj.slotvec0
0x0000e4bd      48633db4bb20.  movsxd rdi, dword [obj.nslots]          ; [0x21a078:4]=1
0x0000e4c4      4489e2         mov edx, r12d
0x0000e4c7      31f6           xor esi, esi
0x0000e4c9      29fa           sub edx, edi
0x0000e4cb      48c1e704       shl rdi, 4
0x0000e4cf      4863d2         movsxd rdx, edx
0x0000e4d2      4801df         add rdi, rbx
0x0000e4d5      48c1e204       shl rdx, 4
0x0000e4d9      e81245ffff     call sym.imp.memset
0x0000e4de      44892593bb20.  mov dword [obj.nslots], r12d            ; [0x21a078:4]=1
0x0000e4e5      8b4504         mov eax, dword [rbp + 4]
0x0000e4e8      49c1e704       shl r15, 4
0x0000e4ec      4883ec08       sub rsp, 8
0x0000e4f0      4c01fb         add rbx, r15
0x0000e4f3      4c8d7d08       lea r15, [rbp + 8]
0x0000e4f7      448b4500       mov r8d, dword [rbp]
0x0000e4fb      4c8b1b         mov r11, qword [rbx]
0x0000e4fe      4c8b6308       mov r12, qword [rbx + 8]
0x0000e502      4c89f1         mov rcx, r14
0x0000e505      83c801         or eax, 1
0x0000e508      89442424       mov dword [rsp + 0x24], eax
0x0000e50c      ff7530         push qword [rbp + 0x30]
0x0000e50f      4189c1         mov r9d, eax
0x0000e512      ff7528         push qword [rbp + 0x28]
0x0000e515      4157           push r15
0x0000e517      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000e51a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000e51f      4c89e7         mov rdi, r12
0x0000e522      4c895c2430     mov qword [rsp + 0x30], r11
0x0000e527      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000e52c      4883c420       add rsp, 0x20
0x0000e530      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x0000e535      4939c3         cmp r11, rax
0x0000e538      7767           ja 0xe5a1
0x0000e53a      488d7001       lea rsi, [rax + 1]
0x0000e53e      488d057bc020.  lea rax, obj.slot0                      ; 0x21a5c0
0x0000e545      4939c4         cmp r12, rax
0x0000e548      488933         mov qword [rbx], rsi
0x0000e54b      7412           je 0xe55f
0x0000e54d      4c89e7         mov rdi, r12
0x0000e550      4889742410     mov qword [rsp + 0x10], rsi
0x0000e555      e8b648ffff     call sym..plt.got
0x0000e55a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000e55f      4889f7         mov rdi, rsi
0x0000e562      4889742410     mov qword [rsp + 0x10], rsi
0x0000e567      e8b42a0000     call sym.xmalloc
0x0000e56c      4883ec08       sub rsp, 8
0x0000e570      48894308       mov qword [rbx + 8], rax
0x0000e574      448b4500       mov r8d, dword [rbp]
0x0000e578      ff7530         push qword [rbp + 0x30]
0x0000e57b      ff7528         push qword [rbp + 0x28]
0x0000e57e      4c89f1         mov rcx, r14
0x0000e581      4157           push r15
0x0000e583      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x0000e588      4889c7         mov rdi, rax
0x0000e58b      488b542428     mov rdx, qword [rsp + 0x28]
0x0000e590      488b742430     mov rsi, qword [rsp + 0x30]
0x0000e595      4989c4         mov r12, rax
0x0000e598      e863ecffff     call sym.quotearg_buffer_restyled
0x0000e59d      4883c420       add rsp, 0x20
0x0000e5a1      8b442418       mov eax, dword [rsp + 0x18]
0x0000e5a5      41894500       mov dword [r13], eax
0x0000e5a9      4883c428       add rsp, 0x28
0x0000e5ad      4c89e0         mov rax, r12
0x0000e5b0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x0000e5b1      5d             pop rbp
0x0000e5b2      415c           pop r12
0x0000e5b4      415d           pop r13
0x0000e5b6      415e           pop r14
0x0000e5b8      415f           pop r15
0x0000e5ba      c3             ret
0x0000e5bb      0f1f440000     nop dword [rax + rax]
0x0000e5c0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x0000e5c2      e8b92a0000     call sym.xrealloc
0x0000e5c7      660f6f05c1ba.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000e5cf      4889c3         mov rbx, rax
0x0000e5d2      488905a7ba20.  mov qword [obj.slotvec], rax            ; [0x21a080:8]=0x21a090 obj.slotvec0
0x0000e5d9      0f1100         movups xmmword [rax], xmm0
0x0000e5dc      e9dcfeffff     jmp 0xe4bd
0x0000e5e1      e87a41ffff     call sym.imp.abort
0x0000e5e6      e8852c0000     call sym.xalloc_die
0x0000e5eb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x0000e5f0      4154           push r12
0x0000e5f2      55             push rbp
0x0000e5f3      53             push rbx
0x0000e5f4      4889fb         mov rbx, rdi
0x0000e5f7      e87441ffff     call sym.imp.__errno_location
0x0000e5fc      448b20         mov r12d, dword [rax]
0x0000e5ff      4889c5         mov rbp, rax
0x0000e602      488d05b7c020.  lea rax, obj.default_quoting_options    ; 0x21a6c0
0x0000e609      4885db         test rbx, rbx
0x0000e60c      be38000000     mov esi, 0x38                           ; '8'
0x0000e611      480f44d8       cmove rbx, rax
0x0000e615      4889df         mov rdi, rbx
0x0000e618      e8032c0000     call sym.xmemdup
0x0000e61d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x0000e621      5b             pop rbx
0x0000e622      5d             pop rbp
0x0000e623      415c           pop r12
0x0000e625      c3             ret
0x0000e626      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x0000e630      488d0589c020.  lea rax, obj.default_quoting_options    ; 0x21a6c0
0x0000e637      4885ff         test rdi, rdi
0x0000e63a      480f44f8       cmove rdi, rax
0x0000e63e      8b07           mov eax, dword [rdi]
0x0000e640      c3             ret
0x0000e641      0f1f440000     nop dword [rax + rax]
0x0000e646      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x0000e650      488d0569c020.  lea rax, obj.default_quoting_options    ; 0x21a6c0
0x0000e657      4885ff         test rdi, rdi
0x0000e65a      480f44f8       cmove rdi, rax
0x0000e65e      8937           mov dword [rdi], esi
0x0000e660      c3             ret
0x0000e661      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000e666      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x0000e670      488d0549c020.  lea rax, obj.default_quoting_options    ; 0x21a6c0
0x0000e677      4885ff         test rdi, rdi
0x0000e67a      89f1           mov ecx, esi
0x0000e67c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x0000e680      89f0           mov eax, esi
0x0000e682      83e11f         and ecx, 0x1f
0x0000e685      c0e805         shr al, 5
0x0000e688      0fb6c0         movzx eax, al
0x0000e68b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x0000e690      8b37           mov esi, dword [rdi]
0x0000e692      89f0           mov eax, esi
0x0000e694      d3e8           shr eax, cl
0x0000e696      31c2           xor edx, eax
0x0000e698      83e001         and eax, 1
0x0000e69b      83e201         and edx, 1
0x0000e69e      d3e2           shl edx, cl
0x0000e6a0      31f2           xor edx, esi
0x0000e6a2      8917           mov dword [rdi], edx
0x0000e6a4      c3             ret
0x0000e6a5      90             nop
0x0000e6a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x0000e6b0      488d0509c020.  lea rax, obj.default_quoting_options    ; 0x21a6c0
0x0000e6b7      4885ff         test rdi, rdi
0x0000e6ba      480f44f8       cmove rdi, rax
0x0000e6be      8b4704         mov eax, dword [rdi + 4]
0x0000e6c1      897704         mov dword [rdi + 4], esi
0x0000e6c4      c3             ret
0x0000e6c5      90             nop
0x0000e6c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x0000e6d0      488d05e9bf20.  lea rax, obj.default_quoting_options    ; 0x21a6c0
0x0000e6d7      4885ff         test rdi, rdi
0x0000e6da      480f44f8       cmove rdi, rax
0x0000e6de      4885f6         test rsi, rsi
0x0000e6e1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000e6e7      740e           je 0xe6f7
0x0000e6e9      4885d2         test rdx, rdx
0x0000e6ec      7409           je 0xe6f7
0x0000e6ee      48897728       mov qword [rdi + 0x28], rsi
0x0000e6f2      48895730       mov qword [rdi + 0x30], rdx
0x0000e6f6      c3             ret
0x0000e6f7      4883ec08       sub rsp, 8
0x0000e6fb      e86040ffff     call sym.imp.abort
;-- quotearg_buffer:
0x0000e700      4157           push r15
0x0000e702      4156           push r14
0x0000e704      488d05b5bf20.  lea rax, obj.default_quoting_options    ; 0x21a6c0
0x0000e70b      4155           push r13
0x0000e70d      4154           push r12
0x0000e70f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x0000e712      55             push rbp
0x0000e713      53             push rbx
0x0000e714      4c89c3         mov rbx, r8
0x0000e717      4989f6         mov r14, rsi
0x0000e71a      4989d7         mov r15, rdx
0x0000e71d      4883ec18       sub rsp, 0x18
0x0000e721      4d85c0         test r8, r8
0x0000e724      480f44d8       cmove rbx, rax
0x0000e728      48894c2408     mov qword [rsp + 8], rcx
0x0000e72d      e83e40ffff     call sym.imp.__errno_location
0x0000e732      448b20         mov r12d, dword [rax]
0x0000e735      4889c5         mov rbp, rax
0x0000e738      488d4308       lea rax, [rbx + 8]
0x0000e73c      4883ec08       sub rsp, 8
0x0000e740      448b4b04       mov r9d, dword [rbx + 4]
0x0000e744      ff7330         push qword [rbx + 0x30]
0x0000e747      448b03         mov r8d, dword [rbx]
0x0000e74a      ff7328         push qword [rbx + 0x28]
0x0000e74d      4c89fa         mov rdx, r15
0x0000e750      50             push rax
0x0000e751      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0000e756      4c89f6         mov rsi, r14
0x0000e759      4c89ef         mov rdi, r13
0x0000e75c      e89feaffff     call sym.quotearg_buffer_restyled
0x0000e761      44896500       mov dword [rbp], r12d
0x0000e765      4883c438       add rsp, 0x38
0x0000e769      5b             pop rbx
0x0000e76a      5d             pop rbp
0x0000e76b      415c           pop r12
0x0000e76d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000e76f      415e           pop r14
0x0000e771      415f           pop r15
0x0000e773      c3             ret
0x0000e774      6690           nop
0x0000e776      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x0000e780      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x0000e782      4156           push r14
0x0000e784      488d0535bf20.  lea rax, obj.default_quoting_options    ; 0x21a6c0
0x0000e78b      4155           push r13
0x0000e78d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000e78f      4989d4         mov r12, rdx
0x0000e792      55             push rbp
0x0000e793      53             push rbx
0x0000e794      4889cb         mov rbx, rcx
0x0000e797      4989fe         mov r14, rdi
0x0000e79a      4989f7         mov r15, rsi
0x0000e79d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x0000e7a1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x0000e7a4      480f44d8       cmove rbx, rax
0x0000e7a8      31ed           xor ebp, ebp
0x0000e7aa      e8c13fffff     call sym.imp.__errno_location
0x0000e7af      4d85e4         test r12, r12
0x0000e7b2      4989c5         mov r13, rax
0x0000e7b5      8b00           mov eax, dword [rax]
0x0000e7b7      400f94c5       sete bpl
0x0000e7bb      0b6b04         or ebp, dword [rbx + 4]
0x0000e7be      4c8d5308       lea r10, [rbx + 8]
0x0000e7c2      4883ec08       sub rsp, 8
0x0000e7c6      448b03         mov r8d, dword [rbx]
0x0000e7c9      4c89f9         mov rcx, r15
0x0000e7cc      89442414       mov dword [rsp + 0x14], eax
0x0000e7d0      ff7330         push qword [rbx + 0x30]
0x0000e7d3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x0000e7d6      ff7328         push qword [rbx + 0x28]
0x0000e7d9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000e7db      31f6           xor esi, esi
0x0000e7dd      4189e9         mov r9d, ebp
0x0000e7e0      31ff           xor edi, edi
0x0000e7e2      4c89542440     mov qword [rsp + 0x40], r10
0x0000e7e7      e814eaffff     call sym.quotearg_buffer_restyled
0x0000e7ec      488d7001       lea rsi, [rax + 1]
0x0000e7f0      4889442448     mov qword [rsp + 0x48], rax
0x0000e7f5      4883c420       add rsp, 0x20
0x0000e7f9      4889f7         mov rdi, rsi
0x0000e7fc      4889742418     mov qword [rsp + 0x18], rsi
0x0000e801      e81a280000     call sym.xmalloc
0x0000e806      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000e80b      4883ec08       sub rsp, 8
0x0000e80f      ff7330         push qword [rbx + 0x30]
0x0000e812      ff7328         push qword [rbx + 0x28]
0x0000e815      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000e81a      4189e9         mov r9d, ebp
0x0000e81d      448b03         mov r8d, dword [rbx]
0x0000e820      4c89f9         mov rcx, r15
0x0000e823      4c89f2         mov rdx, r14
0x0000e826      4889c7         mov rdi, rax
0x0000e829      4152           push r10
0x0000e82b      488b742438     mov rsi, qword [rsp + 0x38]
0x0000e830      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x0000e835      8b44242c       mov eax, dword [rsp + 0x2c]
0x0000e839      4883c420       add rsp, 0x20
0x0000e83d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x0000e840      41894500       mov dword [r13], eax
0x0000e844      7409           je 0xe84f
0x0000e846      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000e84b      4d891c24       mov qword [r12], r11
0x0000e84f      488b442410     mov rax, qword [rsp + 0x10]
0x0000e854      4883c438       add rsp, 0x38
0x0000e858      5b             pop rbx
0x0000e859      5d             pop rbp
0x0000e85a      415c           pop r12
0x0000e85c      415d           pop r13
0x0000e85e      415e           pop r14
0x0000e860      415f           pop r15
0x0000e862      c3             ret
0x0000e863      0f1f00         nop dword [rax]
0x0000e866      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x0000e870      4889d1         mov rcx, rdx
0x0000e873      31d2           xor edx, edx
0x0000e875      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000e87a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x0000e880      8b05f2b72000   mov eax, dword [obj.nslots]             ; [0x21a078:4]=1
0x0000e886      4154           push r12
0x0000e888      4c8b25f1b720.  mov r12, qword [obj.slotvec]            ; [0x21a080:8]=0x21a090 obj.slotvec0
0x0000e88f      55             push rbp
0x0000e890      53             push rbx
0x0000e891      83f801         cmp eax, 1
0x0000e894      7e2b           jle 0xe8c1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x0000e896      83e802         sub eax, 2
0x0000e899      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000e89e      48c1e004       shl rax, 4
0x0000e8a2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x0000e8a7      660f1f840000.  nop word [rax + rax]
0x0000e8b0      488b3b         mov rdi, qword [rbx]
0x0000e8b3      4883c310       add rbx, 0x10
0x0000e8b7      e85445ffff     call sym..plt.got
0x0000e8bc      4839eb         cmp rbx, rbp
0x0000e8bf      75ef           jne 0xe8b0
0x0000e8c1      498b7c2408     mov rdi, qword [r12 + 8]
0x0000e8c6      488d1df3bc20.  lea rbx, obj.slot0                      ; 0x21a5c0
0x0000e8cd      4839df         cmp rdi, rbx
0x0000e8d0      7417           je 0xe8e9
0x0000e8d2      e83945ffff     call sym..plt.got
0x0000e8d7      48c705aeb720.  mov qword [obj.slotvec0], 0x100         ; [0x21a090:8]=256
0x0000e8e2      48891dafb720.  mov qword [0x0021a098], rbx             ; [0x21a098:8]=0x21a5c0 obj.slot0
0x0000e8e9      488d1da0b720.  lea rbx, obj.slotvec0                   ; 0x21a090
0x0000e8f0      4939dc         cmp r12, rbx
0x0000e8f3      740f           je 0xe904
0x0000e8f5      4c89e7         mov rdi, r12
0x0000e8f8      e81345ffff     call sym..plt.got
0x0000e8fd      48891d7cb720.  mov qword [obj.slotvec], rbx            ; [0x21a080:8]=0x21a090 obj.slotvec0
0x0000e904      5b             pop rbx
0x0000e905      c70569b72000.  mov dword [obj.nslots], 1               ; [0x21a078:4]=1
0x0000e90f      5d             pop rbp
0x0000e910      415c           pop r12
0x0000e912      c3             ret
0x0000e913      0f1f00         nop dword [rax]
0x0000e916      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x0000e920      488d0d99bd20.  lea rcx, obj.default_quoting_options    ; 0x21a6c0
0x0000e927      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000e92e      e90dfbffff     jmp sym.quotearg_n_options
0x0000e933      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x0000e936      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x0000e940      488d0d79bd20.  lea rcx, obj.default_quoting_options    ; 0x21a6c0
0x0000e947      e9f4faffff     jmp sym.quotearg_n_options
0x0000e94c      0f1f4000       nop dword [rax]
;-- quotearg:
0x0000e950      488d0d69bd20.  lea rcx, obj.default_quoting_options    ; 0x21a6c0
0x0000e957      4889fe         mov rsi, rdi
0x0000e95a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000e961      31ff           xor edi, edi
0x0000e963      e9d8faffff     jmp sym.quotearg_n_options
0x0000e968      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x0000e970      488d0d49bd20.  lea rcx, obj.default_quoting_options    ; 0x21a6c0
0x0000e977      4889f2         mov rdx, rsi
0x0000e97a      4889fe         mov rsi, rdi
0x0000e97d      31ff           xor edi, edi
0x0000e97f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x0000e984      6690           nop
0x0000e986      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x0000e990      4883ec48       sub rsp, 0x48
0x0000e994      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x0000e997      64488b142528.  mov rdx, qword fs:[0x28]
0x0000e9a0      4889542438     mov qword [rsp + 0x38], rdx
0x0000e9a5      31d2           xor edx, edx
0x0000e9a7      83fe0a         cmp esi, 0xa
0x0000e9aa      7468           je 0xea14
0x0000e9ac      893424         mov dword [rsp], esi
0x0000e9af      4889e1         mov rcx, rsp
0x0000e9b2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000e9b9      4889c6         mov rsi, rax
0x0000e9bc      48c744240400.  mov qword [rsp + 4], 0
0x0000e9c5      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000e9ce      48c744241400.  mov qword [rsp + 0x14], 0
0x0000e9d7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000e9e0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x0000e9e9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000e9f2      c74424340000.  mov dword [rsp + 0x34], 0
0x0000e9fa      e841faffff     call sym.quotearg_n_options
0x0000e9ff      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000ea04      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000ea0d      750a           jne 0xea19                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000ea0f      4883c448       add rsp, 0x48
0x0000ea13      c3             ret
0x0000ea14      e8473dffff     call sym.imp.abort
0x0000ea19      e8123fffff     call sym.imp.__stack_chk_fail
0x0000ea1e      6690           nop
;-- quotearg_n_style_mem:
0x0000ea20      4883ec48       sub rsp, 0x48
0x0000ea24      4889d0         mov rax, rdx
0x0000ea27      4889ca         mov rdx, rcx
0x0000ea2a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x0000ea33      48894c2438     mov qword [rsp + 0x38], rcx
0x0000ea38      31c9           xor ecx, ecx
0x0000ea3a      83fe0a         cmp esi, 0xa
0x0000ea3d      7461           je 0xeaa0
0x0000ea3f      893424         mov dword [rsp], esi
0x0000ea42      4889e1         mov rcx, rsp
0x0000ea45      4889c6         mov rsi, rax
0x0000ea48      48c744240400.  mov qword [rsp + 4], 0
0x0000ea51      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000ea5a      48c744241400.  mov qword [rsp + 0x14], 0
0x0000ea63      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000ea6c      48c744242400.  mov qword [rsp + 0x24], 0
0x0000ea75      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000ea7e      c74424340000.  mov dword [rsp + 0x34], 0
0x0000ea86      e8b5f9ffff     call sym.quotearg_n_options
0x0000ea8b      488b542438     mov rdx, qword [rsp + 0x38]
0x0000ea90      644833142528.  xor rdx, qword fs:[0x28]
0x0000ea99      750a           jne 0xeaa5
0x0000ea9b      4883c448       add rsp, 0x48
0x0000ea9f      c3             ret
0x0000eaa0      e8bb3cffff     call sym.imp.abort
0x0000eaa5      e8863effff     call sym.imp.__stack_chk_fail
0x0000eaaa      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x0000eab0      4889f2         mov rdx, rsi
0x0000eab3      89fe           mov esi, edi
0x0000eab5      31ff           xor edi, edi
0x0000eab7      e9d4feffff     jmp sym.quotearg_n_style
0x0000eabc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x0000eac0      4889d1         mov rcx, rdx
0x0000eac3      4889f2         mov rdx, rsi
0x0000eac6      89fe           mov esi, edi
0x0000eac8      31ff           xor edi, edi
0x0000eaca      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000eacf      90             nop
;-- quotearg_char_mem:
0x0000ead0      4883ec48       sub rsp, 0x48
0x0000ead4      89d1           mov ecx, edx
0x0000ead6      64488b042528.  mov rax, qword fs:[0x28]
0x0000eadf      4889442438     mov qword [rsp + 0x38], rax
0x0000eae4      31c0           xor eax, eax
0x0000eae6      488b0503bc20.  mov rax, qword [0x0021a6f0]             ; [0x21a6f0:8]=0
0x0000eaed      4989e0         mov r8, rsp
0x0000eaf0      83e11f         and ecx, 0x1f
0x0000eaf3      660f6f05c5bb.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000eafb      4889442430     mov qword [rsp + 0x30], rax
0x0000eb00      89d0           mov eax, edx
0x0000eb02      0f290424       movaps xmmword [rsp], xmm0
0x0000eb06      c0e805         shr al, 5
0x0000eb09      0fb6c0         movzx eax, al
0x0000eb0c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x0000eb11      660f6f05b7bb.  movdqa xmm0, xmmword [0x0021a6d0]
0x0000eb19      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000eb1e      660f6f05babb.  movdqa xmm0, xmmword [0x0021a6e0]
0x0000eb26      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000eb2b      418b11         mov edx, dword [r9]
0x0000eb2e      89d0           mov eax, edx
0x0000eb30      d3e8           shr eax, cl
0x0000eb32      f7d0           not eax
0x0000eb34      83e001         and eax, 1
0x0000eb37      d3e0           shl eax, cl
0x0000eb39      4c89c1         mov rcx, r8
0x0000eb3c      31d0           xor eax, edx
0x0000eb3e      4889f2         mov rdx, rsi
0x0000eb41      4889fe         mov rsi, rdi
0x0000eb44      418901         mov dword [r9], eax
0x0000eb47      31ff           xor edi, edi
0x0000eb49      e8f2f8ffff     call sym.quotearg_n_options
0x0000eb4e      488b742438     mov rsi, qword [rsp + 0x38]
0x0000eb53      644833342528.  xor rsi, qword fs:[0x28]
0x0000eb5c      7505           jne 0xeb63
0x0000eb5e      4883c448       add rsp, 0x48
0x0000eb62      c3             ret
0x0000eb63      e8c83dffff     call sym.imp.__stack_chk_fail
0x0000eb68      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x0000eb70      400fbed6       movsx edx, sil
0x0000eb74      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000eb7b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x0000eb80      ba3a000000     mov edx, 0x3a                           ; ':'
0x0000eb85      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000eb8c      e93fffffff     jmp sym.quotearg_char_mem
0x0000eb91      0f1f440000     nop dword [rax + rax]
0x0000eb96      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x0000eba0      ba3a000000     mov edx, 0x3a                           ; ':'
0x0000eba5      e926ffffff     jmp sym.quotearg_char_mem
0x0000ebaa      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x0000ebb0      4883ec48       sub rsp, 0x48
0x0000ebb4      4889d0         mov rax, rdx
0x0000ebb7      64488b142528.  mov rdx, qword fs:[0x28]
0x0000ebc0      4889542438     mov qword [rsp + 0x38], rdx
0x0000ebc5      31d2           xor edx, edx
0x0000ebc7      83fe0a         cmp esi, 0xa
0x0000ebca      7468           je 0xec34
0x0000ebcc      893424         mov dword [rsp], esi
0x0000ebcf      4889e1         mov rcx, rsp
0x0000ebd2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000ebd9      4889c6         mov rsi, rax
0x0000ebdc      48c744240400.  mov qword [rsp + 4], 0
0x0000ebe5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000ebee      48c744241400.  mov qword [rsp + 0x14], 0
0x0000ebf7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000ec00      48c744242400.  mov qword [rsp + 0x24], 0
0x0000ec09      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000ec12      c74424340000.  mov dword [rsp + 0x34], 0
0x0000ec1a      e821f8ffff     call sym.quotearg_n_options
0x0000ec1f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000ec24      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000ec2d      750a           jne 0xec39
0x0000ec2f      4883c448       add rsp, 0x48
0x0000ec33      c3             ret
0x0000ec34      e8273bffff     call sym.imp.abort
0x0000ec39      e8f23cffff     call sym.imp.__stack_chk_fail
0x0000ec3e      6690           nop
;-- quotearg_n_custom_mem:
0x0000ec40      4883ec48       sub rsp, 0x48
0x0000ec44      4989c9         mov r9, rcx
0x0000ec47      488b0da2ba20.  mov rcx, qword [0x0021a6f0]             ; [0x21a6f0:8]=0
0x0000ec4e      660f6f056aba.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000ec56      64488b042528.  mov rax, qword fs:[0x28]
0x0000ec5f      4889442438     mov qword [rsp + 0x38], rax
0x0000ec64      31c0           xor eax, eax
0x0000ec66      0f290424       movaps xmmword [rsp], xmm0
0x0000ec6a      4885f6         test rsi, rsi
0x0000ec6d      48894c2430     mov qword [rsp + 0x30], rcx
0x0000ec72      c704240a0000.  mov dword [rsp], 0xa
0x0000ec79      660f6f054fba.  movdqa xmm0, xmmword [0x0021a6d0]
0x0000ec81      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000ec86      660f6f0552ba.  movdqa xmm0, xmmword [0x0021a6e0]
0x0000ec8e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000ec93      7432           je 0xecc7
0x0000ec95      4885d2         test rdx, rdx
0x0000ec98      742d           je 0xecc7
0x0000ec9a      4889742428     mov qword [rsp + 0x28], rsi
0x0000ec9f      4889542430     mov qword [rsp + 0x30], rdx
0x0000eca4      4889e1         mov rcx, rsp
0x0000eca7      4c89c2         mov rdx, r8
0x0000ecaa      4c89ce         mov rsi, r9
0x0000ecad      e88ef7ffff     call sym.quotearg_n_options
0x0000ecb2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000ecb7      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000ecc0      750a           jne 0xeccc
0x0000ecc2      4883c448       add rsp, 0x48
0x0000ecc6      c3             ret
0x0000ecc7      e8943affff     call sym.imp.abort
0x0000eccc      e85f3cffff     call sym.imp.__stack_chk_fail
0x0000ecd1      0f1f440000     nop dword [rax + rax]
0x0000ecd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x0000ece0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000ece7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000ecec      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x0000ecf0      4889d1         mov rcx, rdx
0x0000ecf3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000ecfa      4889f2         mov rdx, rsi
0x0000ecfd      4889fe         mov rsi, rdi
0x0000ed00      31ff           xor edi, edi
0x0000ed02      e939ffffff     jmp sym.quotearg_n_custom_mem
0x0000ed07      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x0000ed10      4989c8         mov r8, rcx
0x0000ed13      4889d1         mov rcx, rdx
0x0000ed16      4889f2         mov rdx, rsi
0x0000ed19      4889fe         mov rsi, rdi
0x0000ed1c      31ff           xor edi, edi
0x0000ed1e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x0000ed23      0f1f00         nop dword [rax]
0x0000ed26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x0000ed30      488d0d09b320.  lea rcx, obj.quote_quoting_options      ; 0x21a040
0x0000ed37      e904f7ffff     jmp sym.quotearg_n_options
0x0000ed3c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x0000ed40      488d0df9b220.  lea rcx, obj.quote_quoting_options      ; 0x21a040
0x0000ed47      4889f2         mov rdx, rsi
0x0000ed4a      4889fe         mov rsi, rdi
0x0000ed4d      31ff           xor edi, edi
0x0000ed4f      e9ecf6ffff     jmp sym.quotearg_n_options
0x0000ed54      6690           nop
0x0000ed56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x0000ed60      488d0dd9b220.  lea rcx, obj.quote_quoting_options      ; 0x21a040
0x0000ed67      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000ed6e      e9cdf6ffff     jmp sym.quotearg_n_options
0x0000ed73      0f1f00         nop dword [rax]
0x0000ed76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x0000ed80      488d0db9b220.  lea rcx, obj.quote_quoting_options      ; 0x21a040
0x0000ed87      4889fe         mov rsi, rdi
0x0000ed8a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000ed91      31ff           xor edi, edi
0x0000ed93      e9a8f6ffff     jmp sym.quotearg_n_options
0x0000ed98      0f1f84000000.  nop dword [rax + rax]
;-- renameatu:
0x0000eda0      4157           push r15
0x0000eda2      4156           push r14
0x0000eda4      4589c1         mov r9d, r8d
0x0000eda7      4155           push r13
0x0000eda9      4154           push r12
0x0000edab      4189d6         mov r14d, edx
0x0000edae      55             push rbp
0x0000edaf      53             push rbx
0x0000edb0      4989f4         mov r12, rsi
0x0000edb3      4989cd         mov r13, rcx
0x0000edb6      4489c5         mov ebp, r8d
0x0000edb9      4989c8         mov r8, rcx
0x0000edbc      4881ec480100.  sub rsp, 0x148
0x0000edc3      89d1           mov ecx, edx
0x0000edc5      4889f2         mov rdx, rsi
0x0000edc8      64488b042528.  mov rax, qword fs:[0x28]
0x0000edd1      488984243801.  mov qword [rsp + 0x138], rax
0x0000edd9      31c0           xor eax, eax
0x0000eddb      89fe           mov esi, edi
0x0000eddd      897c2404       mov dword [rsp + 4], edi
0x0000ede1      bf3c010000     mov edi, 0x13c
0x0000ede6      e8453dffff     call sym.imp.syscall
0x0000edeb      4889c3         mov rbx, rax
0x0000edee      4189c7         mov r15d, eax
0x0000edf1      e87a39ffff     call sym.imp.__errno_location
0x0000edf6      85db           test ebx, ebx
0x0000edf8      7836           js 0xee30
0x0000edfa      488b94243801.  mov rdx, qword [rsp + 0x138]
0x0000ee02      644833142528.  xor rdx, qword fs:[0x28]
0x0000ee0b      4489f8         mov eax, r15d
0x0000ee0e      0f85f1010000   jne 0xf005
0x0000ee14      4881c4480100.  add rsp, 0x148
0x0000ee1b      5b             pop rbx
0x0000ee1c      5d             pop rbp
0x0000ee1d      415c           pop r12
0x0000ee1f      415d           pop r13
0x0000ee21      415e           pop r14
0x0000ee23      415f           pop r15
0x0000ee25      c3             ret
0x0000ee26      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ee30      4989c1         mov r9, rax
0x0000ee33      8b00           mov eax, dword [rax]
0x0000ee35      8d48ea         lea ecx, [rax - 0x16]
0x0000ee38      83e1ef         and ecx, 0xffffffef                     ; 4294967279
0x0000ee3b      0f95c3         setne bl
0x0000ee3e      83f85f         cmp eax, 0x5f
0x0000ee41      0f95c0         setne al
0x0000ee44      20c3           and bl, al
0x0000ee46      75b2           jne 0xedfa
0x0000ee48      85ed           test ebp, ebp
0x0000ee4a      7554           jne 0xeea0
0x0000ee4c      4c89e7         mov rdi, r12
0x0000ee4f      4c894c2408     mov qword [rsp + 8], r9
0x0000ee54      e8a73affff     call sym.imp.strlen
0x0000ee59      4c89ef         mov rdi, r13
0x0000ee5c      4889c5         mov rbp, rax
0x0000ee5f      e89c3affff     call sym.imp.strlen
0x0000ee64      4885ed         test rbp, rbp
0x0000ee67      741a           je 0xee83
0x0000ee69      4885c0         test rax, rax
0x0000ee6c      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000ee71      7410           je 0xee83
0x0000ee73      41807c2cff2f   cmp byte [r12 + rbp - 1], 0x2f
0x0000ee79      7445           je 0xeec0
0x0000ee7b      41807c05ff2f   cmp byte [r13 + rax - 1], 0x2f
0x0000ee81      743d           je 0xeec0
0x0000ee83      8b7c2404       mov edi, dword [rsp + 4]
0x0000ee87      4c89e9         mov rcx, r13
0x0000ee8a      4489f2         mov edx, r14d
0x0000ee8d      4c89e6         mov rsi, r12
0x0000ee90      e8cb3effff     call sym.imp.renameat
0x0000ee95      4189c7         mov r15d, eax
0x0000ee98      e95dffffff     jmp 0xedfa
0x0000ee9d      0f1f00         nop dword [rax]
0x0000eea0      83e5fe         and ebp, 0xfffffffe                     ; 4294967294
0x0000eea3      746b           je 0xef10
0x0000eea5      41c7015f0000.  mov dword [r9], 0x5f                    ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x0000eeac      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x0000eeb2      e943ffffff     jmp 0xedfa
0x0000eeb7      660f1f840000.  nop word [rax + rax]
0x0000eec0      8b742404       mov esi, dword [rsp + 4]
0x0000eec4      488d4c2410     lea rcx, [rsp + 0x10]
0x0000eec9      41b800010000   mov r8d, 0x100
0x0000eecf      4c89e2         mov rdx, r12
0x0000eed2      bf01000000     mov edi, 1
0x0000eed7      4c894c2408     mov qword [rsp + 8], r9
0x0000eedc      e89f3affff     call sym.imp.__fxstatat
0x0000eee1      85c0           test eax, eax
0x0000eee3      7564           jne 0xef49
0x0000eee5      84db           test bl, bl
0x0000eee7      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000eeec      747c           je 0xef6a
0x0000eeee      8b442428       mov eax, dword [rsp + 0x28]
0x0000eef2      2500f00000     and eax, 0xf000
0x0000eef7      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x0000eefc      7485           je 0xee83
0x0000eefe      41c701020000.  mov dword [r9], 2
0x0000ef05      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x0000ef0b      e9eafeffff     jmp 0xedfa
0x0000ef10      488d8c24a000.  lea rcx, [rsp + 0xa0]
0x0000ef18      41b800010000   mov r8d, 0x100
0x0000ef1e      4c89ea         mov rdx, r13
0x0000ef21      4489f6         mov esi, r14d
0x0000ef24      bf01000000     mov edi, 1
0x0000ef29      4c894c2408     mov qword [rsp + 8], r9
0x0000ef2e      e84d3affff     call sym.imp.__fxstatat
0x0000ef33      85c0           test eax, eax
0x0000ef35      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000ef3a      741c           je 0xef58
0x0000ef3c      418b01         mov eax, dword [r9]
0x0000ef3f      83f84b         cmp eax, 0x4b
0x0000ef42      7414           je 0xef58
0x0000ef44      83f802         cmp eax, 2
0x0000ef47      746f           je 0xefb8
0x0000ef49      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x0000ef4f      e9a6feffff     jmp 0xedfa
0x0000ef54      0f1f4000       nop dword [rax]
0x0000ef58      41c701110000.  mov dword [r9], 0x11                    ; [0x11:4]=0x1003e00
0x0000ef5f      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x0000ef65      e990feffff     jmp 0xedfa
0x0000ef6a      488d8c24a000.  lea rcx, [rsp + 0xa0]
0x0000ef72      41b800010000   mov r8d, 0x100
0x0000ef78      4c89ea         mov rdx, r13
0x0000ef7b      4489f6         mov esi, r14d
0x0000ef7e      bf01000000     mov edi, 1
0x0000ef83      4c894c2408     mov qword [rsp + 8], r9
0x0000ef88      e8f339ffff     call sym.imp.__fxstatat
0x0000ef8d      85c0           test eax, eax
0x0000ef8f      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000ef94      742c           je 0xefc2
0x0000ef96      41833902       cmp dword [r9], 2
0x0000ef9a      75ad           jne 0xef49
0x0000ef9c      8b442428       mov eax, dword [rsp + 0x28]
0x0000efa0      2500f00000     and eax, 0xf000
0x0000efa5      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x0000efaa      759d           jne 0xef49
0x0000efac      e9d2feffff     jmp 0xee83
0x0000efb1      0f1f80000000.  nop dword [rax]
0x0000efb8      bb01000000     mov ebx, 1
0x0000efbd      e98afeffff     jmp 0xee4c
0x0000efc2      8b8424b80000.  mov eax, dword [rsp + 0xb8]
0x0000efc9      2500f00000     and eax, 0xf000
0x0000efce      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x0000efd3      740c           je 0xefe1
0x0000efd5      41c701140000.  mov dword [r9], 0x14                    ; [0x14:4]=1
0x0000efdc      e968ffffff     jmp 0xef49
0x0000efe1      8b442428       mov eax, dword [rsp + 0x28]
0x0000efe5      2500f00000     and eax, 0xf000
0x0000efea      3d00400000     cmp eax, 0x4000                         ; "H)\xc4H\x8d|$\x0fH\x83\xe7\xf0\xe8O\xeb\xff\xffI\x89\xc4L\x01\xf0H\x85\xdbH\x89E\x98\x0f\x84\xac\x01"
0x0000efef      0f848efeffff   je 0xee83
0x0000eff5      41c701150000.  mov dword [r9], 0x15                    ; [0x15:4]=0xd0000000
0x0000effc      4183cfff       or r15d, 0xffffffff                     ; -1
0x0000f000      e9f5fdffff     jmp 0xedfa
0x0000f005      e82639ffff     call sym.imp.__stack_chk_fail
0x0000f00a      660f1f440000   nop word [rax + rax]
;-- safe_write:
0x0000f010      4155           push r13                                ; ../coreutils-8.31/lib/safe-read.c:57
0x0000f012      4154           push r12
0x0000f014      4189fd         mov r13d, edi
0x0000f017      55             push rbp
0x0000f018      53             push rbx
0x0000f019      4989f4         mov r12, rsi
0x0000f01c      4889d3         mov rbx, rdx
0x0000f01f      4883ec08       sub rsp, 8
0x0000f023      0f1f440000     nop dword [rax + rax]
0x0000f028      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/safe-read.c:60
0x0000f02b      4c89e6         mov rsi, r12
0x0000f02e      4489ef         mov edi, r13d
0x0000f031      e80a38ffff     call sym.imp.write
0x0000f036      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/safe-read.c:62
0x0000f039      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/safe-read.c:60
0x0000f03c      7922           jns 0xf060                              ; ../coreutils-8.31/lib/safe-read.c:62
0x0000f03e      e82d37ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/safe-read.c:64
0x0000f043      8b00           mov eax, dword [rax]
0x0000f045      83f804         cmp eax, 4
0x0000f048      74de           je 0xf028
0x0000f04a      83f816         cmp eax, 0x16                           ; ../coreutils-8.31/lib/safe-read.c:66
0x0000f04d      7511           jne 0xf060
0x0000f04f      4881fb0000f0.  cmp rbx, 0x7ff00000
0x0000f056      7608           jbe 0xf060
0x0000f058      bb0000f07f     mov ebx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:67
0x0000f05d      ebc9           jmp 0xf028
0x0000f05f      90             nop
0x0000f060      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/safe-read.c:71
0x0000f064      4889e8         mov rax, rbp
0x0000f067      5b             pop rbx
0x0000f068      5d             pop rbp
0x0000f069      415c           pop r12
0x0000f06b      415d           pop r13
0x0000f06d      c3             ret
0x0000f06e      6690           nop
;-- same_nameat.part.0:
0x0000f070      4155           push r13
0x0000f072      4154           push r12
0x0000f074      4189fd         mov r13d, edi
0x0000f077      55             push rbp
0x0000f078      53             push rbx
0x0000f079      4889f7         mov rdi, rsi
0x0000f07c      89d5           mov ebp, edx
0x0000f07e      4989cc         mov r12, rcx
0x0000f081      4881ec380100.  sub rsp, 0x138
0x0000f088      64488b042528.  mov rax, qword fs:[0x28]
0x0000f091      488984242801.  mov qword [rsp + 0x128], rax
0x0000f099      31c0           xor eax, eax
0x0000f09b      e810c4ffff     call sym.dir_name
0x0000f0a0      4889e1         mov rcx, rsp
0x0000f0a3      41b800010000   mov r8d, 0x100
0x0000f0a9      4889c2         mov rdx, rax
0x0000f0ac      4489ee         mov esi, r13d
0x0000f0af      bf01000000     mov edi, 1
0x0000f0b4      4889c3         mov rbx, rax
0x0000f0b7      e8c438ffff     call sym.imp.__fxstatat
0x0000f0bc      85c0           test eax, eax
0x0000f0be      0f85ac000000   jne 0xf170
0x0000f0c4      4889df         mov rdi, rbx
0x0000f0c7      e8443dffff     call sym..plt.got
0x0000f0cc      4c89e7         mov rdi, r12
0x0000f0cf      e8dcc3ffff     call sym.dir_name
0x0000f0d4      488d8c249000.  lea rcx, [rsp + 0x90]
0x0000f0dc      41b800010000   mov r8d, 0x100
0x0000f0e2      4889c2         mov rdx, rax
0x0000f0e5      89ee           mov esi, ebp
0x0000f0e7      bf01000000     mov edi, 1
0x0000f0ec      4889c3         mov rbx, rax
0x0000f0ef      e88c38ffff     call sym.imp.__fxstatat
0x0000f0f4      85c0           test eax, eax
0x0000f0f6      7550           jne 0xf148
0x0000f0f8      31ed           xor ebp, ebp
0x0000f0fa      488b84249800.  mov rax, qword [rsp + 0x98]
0x0000f102      4839442408     cmp qword [rsp + 8], rax
0x0000f107      7510           jne 0xf119
0x0000f109      488b84249000.  mov rax, qword [rsp + 0x90]
0x0000f111      48390424       cmp qword [rsp], rax
0x0000f115      400f94c5       sete bpl
0x0000f119      4889df         mov rdi, rbx
0x0000f11c      e8ef3cffff     call sym..plt.got
0x0000f121      488b94242801.  mov rdx, qword [rsp + 0x128]
0x0000f129      644833142528.  xor rdx, qword fs:[0x28]
0x0000f132      89e8           mov eax, ebp
0x0000f134      755c           jne 0xf192
0x0000f136      4881c4380100.  add rsp, 0x138
0x0000f13d      5b             pop rbx
0x0000f13e      5d             pop rbp
0x0000f13f      415c           pop r12
0x0000f141      415d           pop r13
0x0000f143      c3             ret
0x0000f144      0f1f4000       nop dword [rax]
0x0000f148      e82336ffff     call sym.imp.__errno_location
0x0000f14d      8b30           mov esi, dword [rax]
0x0000f14f      488d15376000.  lea rdx, [0x0001518d]                   ; "%s"
0x0000f156      4889d9         mov rcx, rbx
0x0000f159      bf01000000     mov edi, 1
0x0000f15e      31c0           xor eax, eax
0x0000f160      e84b3bffff     call sym.imp.error
0x0000f165      eb91           jmp 0xf0f8
0x0000f167      660f1f840000.  nop word [rax + rax]
0x0000f170      e8fb35ffff     call sym.imp.__errno_location
0x0000f175      8b30           mov esi, dword [rax]
0x0000f177      488d150f6000.  lea rdx, [0x0001518d]                   ; "%s"
0x0000f17e      4889d9         mov rcx, rbx
0x0000f181      bf01000000     mov edi, 1
0x0000f186      31c0           xor eax, eax
0x0000f188      e8233bffff     call sym.imp.error
0x0000f18d      e932ffffff     jmp 0xf0c4
0x0000f192      e89937ffff     call sym.imp.__stack_chk_fail
0x0000f197      660f1f840000.  nop word [rax + rax]
;-- same_nameat:
0x0000f1a0      4157           push r15
0x0000f1a2      4156           push r14
0x0000f1a4      4189d7         mov r15d, edx
0x0000f1a7      4155           push r13
0x0000f1a9      4154           push r12
0x0000f1ab      55             push rbp
0x0000f1ac      53             push rbx
0x0000f1ad      4889cd         mov rbp, rcx
0x0000f1b0      4889f3         mov rbx, rsi
0x0000f1b3      4883ec18       sub rsp, 0x18
0x0000f1b7      897c240c       mov dword [rsp + 0xc], edi
0x0000f1bb      4889f7         mov rdi, rsi
0x0000f1be      e8cdc3ffff     call sym.last_component
0x0000f1c3      4889ef         mov rdi, rbp
0x0000f1c6      4989c4         mov r12, rax
0x0000f1c9      e8c2c3ffff     call sym.last_component
0x0000f1ce      4c89e7         mov rdi, r12
0x0000f1d1      4989c5         mov r13, rax
0x0000f1d4      e817c4ffff     call sym.base_len
0x0000f1d9      4c89ef         mov rdi, r13
0x0000f1dc      4989c6         mov r14, rax
0x0000f1df      e80cc4ffff     call sym.base_len
0x0000f1e4      4939c6         cmp r14, rax
0x0000f1e7      7417           je 0xf200
0x0000f1e9      4883c418       add rsp, 0x18
0x0000f1ed      31c0           xor eax, eax
0x0000f1ef      5b             pop rbx
0x0000f1f0      5d             pop rbp
0x0000f1f1      415c           pop r12
0x0000f1f3      415d           pop r13
0x0000f1f5      415e           pop r14
0x0000f1f7      415f           pop r15
0x0000f1f9      c3             ret
0x0000f1fa      660f1f440000   nop word [rax + rax]
0x0000f200      4c89f2         mov rdx, r14
0x0000f203      4c89ee         mov rsi, r13
0x0000f206      4c89e7         mov rdi, r12
0x0000f209      e88238ffff     call sym.imp.memcmp
0x0000f20e      85c0           test eax, eax
0x0000f210      75d7           jne 0xf1e9
0x0000f212      8b7c240c       mov edi, dword [rsp + 0xc]
0x0000f216      4883c418       add rsp, 0x18
0x0000f21a      4889e9         mov rcx, rbp
0x0000f21d      4489fa         mov edx, r15d
0x0000f220      4889de         mov rsi, rbx
0x0000f223      5b             pop rbx
0x0000f224      5d             pop rbp
0x0000f225      415c           pop r12
0x0000f227      415d           pop r13
0x0000f229      415e           pop r14
0x0000f22b      415f           pop r15
0x0000f22d      e93efeffff     jmp sym.same_nameat.part.0
0x0000f232      0f1f4000       nop dword [rax]
0x0000f236      662e0f1f8400.  nop word cs:[rax + rax]
;-- same_name:
0x0000f240      ba9cffffff     mov edx, 0xffffff9c                     ; 4294967196
0x0000f245      4889f1         mov rcx, rsi
0x0000f248      4889fe         mov rsi, rdi
0x0000f24b      89d7           mov edi, edx
0x0000f24d      e94effffff     jmp sym.same_nameat
0x0000f252      662e0f1f8400.  nop word cs:[rax + rax]
0x0000f25c      0f1f4000       nop dword [rax]
;-- direntry_cmp_inode:
0x0000f260      488b4608       mov rax, qword [rsi + 8]                ; ../coreutils-8.31/lib/savedir.c:64
0x0000f264      48394708       cmp qword [rdi + 8], rax
0x0000f268      720e           jb 0xf278
0x0000f26a      0f97c0         seta al                                 ; ../coreutils-8.31/lib/savedir.c:68
0x0000f26d      0fb6c0         movzx eax, al
0x0000f270      c3             ret
0x0000f271      0f1f80000000.  nop dword [rax]
0x0000f278      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000f27d      c3             ret                                     ; ../coreutils-8.31/lib/savedir.c:69
0x0000f27e      6690           nop
;-- direntry_cmp_name:
0x0000f280      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/savedir.c:52
0x0000f283      488b3f         mov rdi, qword [rdi]
0x0000f286      e96538ffff     jmp sym.imp.strcmp
0x0000f28b      0f1f440000     nop dword [rax + rax]
;-- streamsavedir:
0x0000f290      4157           push r15                                ; ../coreutils-8.31/lib/savedir.c:92
0x0000f292      488d05a7a720.  lea rax, obj.comparison_function_table  ; ../coreutils-8.31/lib/savedir.c:100 ; 0x219a40
0x0000f299      4156           push r14                                ; ../coreutils-8.31/lib/savedir.c:92
0x0000f29b      4155           push r13
0x0000f29d      4154           push r12
0x0000f29f      89f6           mov esi, esi                            ; ../coreutils-8.31/lib/savedir.c:100
0x0000f2a1      55             push rbp                                ; ../coreutils-8.31/lib/savedir.c:92
0x0000f2a2      53             push rbx
0x0000f2a3      4883ec48       sub rsp, 0x48
0x0000f2a7      488b04f0       mov rax, qword [rax + rsi*8]            ; ../coreutils-8.31/lib/savedir.c:100
0x0000f2ab      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/savedir.c:102
0x0000f2ae      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/savedir.c:100
0x0000f2b3      0f8404030000   je 0xf5bd                               ; ../coreutils-8.31/lib/savedir.c:102
0x0000f2b9      4889fb         mov rbx, rdi
0x0000f2bc      4531f6         xor r14d, r14d                          ; ../coreutils-8.31/lib/savedir.c:98
0x0000f2bf      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/savedir.c:97
0x0000f2c2      e8a934ffff     call sym.imp.__errno_location
0x0000f2c7      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/savedir.c:93
0x0000f2ca      4889c5         mov rbp, rax
0x0000f2cd      48c744242800.  mov qword [rsp + 0x28], 0               ; ../coreutils-8.31/lib/savedir.c:96
0x0000f2d6      48c744241000.  mov qword [rsp + 0x10], 0               ; ../coreutils-8.31/lib/savedir.c:95
0x0000f2df      48c744242000.  mov qword [rsp + 0x20], 0               ; ../coreutils-8.31/lib/savedir.c:94
0x0000f2e8      eb0a           jmp 0xf2f4
0x0000f2ea      660f1f440000   nop word [rax + rax]
0x0000f2f0      84c0           test al, al                             ; ../coreutils-8.31/lib/savedir.c:118
0x0000f2f2      7535           jne 0xf329
0x0000f2f4      c74500000000.  mov dword [rbp], 0                      ; ../coreutils-8.31/lib/savedir.c:110
0x0000f2fb      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/savedir.c:111
0x0000f2fe      e8ad38ffff     call sym.imp.readdir
0x0000f303      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/savedir.c:112
0x0000f306      4889c1         mov rcx, rax                            ; ../coreutils-8.31/lib/savedir.c:111
0x0000f309      0f84a1000000   je 0xf3b0                               ; ../coreutils-8.31/lib/savedir.c:112
0x0000f30f      4c8d7813       lea r15, [rax + 0x13]                   ; ../coreutils-8.31/lib/savedir.c:117
0x0000f313      0fb64013       movzx eax, byte [rax + 0x13]            ; ../coreutils-8.31/lib/savedir.c:118
0x0000f317      3c2e           cmp al, 0x2e
0x0000f319      75d5           jne 0xf2f0
0x0000f31b      8079142e       cmp byte [rcx + 0x14], 0x2e
0x0000f31f      747f           je 0xf3a0
0x0000f321      0fb64114       movzx eax, byte [rcx + 0x14]
0x0000f325      84c0           test al, al
0x0000f327      74cb           je 0xf2f4
0x0000f329      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/savedir.c:120
0x0000f32c      48894c2430     mov qword [rsp + 0x30], rcx
0x0000f331      e8ca35ffff     call sym.imp.strlen
0x0000f336      4883c001       add rax, 1
0x0000f33a      48837c240800   cmp qword [rsp + 8], 0                  ; ../coreutils-8.31/lib/savedir.c:121
0x0000f340      4889442418     mov qword [rsp + 0x18], rax             ; ../coreutils-8.31/lib/savedir.c:120
0x0000f345      0f843d010000   je 0xf488                               ; ../coreutils-8.31/lib/savedir.c:121
0x0000f34b      4c3b642428     cmp r12, qword [rsp + 0x28]             ; ../coreutils-8.31/lib/savedir.c:123
0x0000f350      498d442401     lea rax, [r12 + 1]
0x0000f355      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0000f35a      4889442438     mov qword [rsp + 0x38], rax
0x0000f35f      0f84ac010000   je 0xf511
0x0000f365      49c1e404       shl r12, 4                              ; ../coreutils-8.31/lib/savedir.c:129
0x0000f369      4c89ff         mov rdi, r15
0x0000f36c      4c03642410     add r12, qword [rsp + 0x10]
0x0000f371      48894c2430     mov qword [rsp + 0x30], rcx
0x0000f376      e8d51e0000     call sym.xstrdup
0x0000f37b      488b4c2430     mov rcx, qword [rsp + 0x30]             ; ../coreutils-8.31/lib/savedir.c:131
0x0000f380      4c03742418     add r14, qword [rsp + 0x18]
0x0000f385      49890424       mov qword [r12], rax                    ; ../coreutils-8.31/lib/savedir.c:129
0x0000f389      488b01         mov rax, qword [rcx]                    ; ../coreutils-8.31/lib/savedir.c:131
0x0000f38c      4989442408     mov qword [r12 + 8], rax
0x0000f391      4c8b642438     mov r12, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/savedir.c:133
0x0000f396      e959ffffff     jmp 0xf2f4
0x0000f39b      0f1f440000     nop dword [rax + rax]
0x0000f3a0      0fb64115       movzx eax, byte [rcx + 0x15]
0x0000f3a4      e947ffffff     jmp 0xf2f0
0x0000f3a9      0f1f80000000.  nop dword [rax]
0x0000f3b0      8b5d00         mov ebx, dword [rbp]                    ; ../coreutils-8.31/lib/savedir.c:151
0x0000f3b3      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/savedir.c:152
0x0000f3b5      0f85e5010000   jne 0xf5a0
0x0000f3bb      48837c240800   cmp qword [rsp + 8], 0                  ; ../coreutils-8.31/lib/savedir.c:160
0x0000f3c1      0f84a9000000   je 0xf470
0x0000f3c7      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/savedir.c:164
0x0000f3ca      498d5e01       lea rbx, [r14 + 1]
0x0000f3ce      7530           jne 0xf400
0x0000f3d0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/savedir.c:166
0x0000f3d3      e8481c0000     call sym.xmalloc
0x0000f3d8      4989c5         mov r13, rax
0x0000f3db      4889c3         mov rbx, rax
0x0000f3de      488b7c2410     mov rdi, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/savedir.c:174
0x0000f3e3      e8283affff     call sym..plt.got
0x0000f3e8      c60300         mov byte [rbx], 0                       ; ../coreutils-8.31/lib/savedir.c:179
0x0000f3eb      4883c448       add rsp, 0x48                           ; ../coreutils-8.31/lib/savedir.c:181
0x0000f3ef      4c89e8         mov rax, r13
0x0000f3f2      5b             pop rbx
0x0000f3f3      5d             pop rbp
0x0000f3f4      415c           pop r12
0x0000f3f6      415d           pop r13
0x0000f3f8      415e           pop r14
0x0000f3fa      415f           pop r15
0x0000f3fc      c3             ret
0x0000f3fd      0f1f00         nop dword [rax]
0x0000f400      4c8b7c2410     mov r15, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/savedir.c:165
0x0000f405      488b4c2408     mov rcx, qword [rsp + 8]
0x0000f40a      4c89e6         mov rsi, r12
0x0000f40d      ba10000000     mov edx, 0x10
0x0000f412      49c1e404       shl r12, 4
0x0000f416      4c89ff         mov rdi, r15
0x0000f419      4c89fd         mov rbp, r15
0x0000f41c      4d01fc         add r12, r15
0x0000f41f      e8dc33ffff     call sym.imp.qsort
0x0000f424      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/savedir.c:166
0x0000f427      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/savedir.c:167
0x0000f429      e8f21b0000     call sym.xmalloc                        ; ../coreutils-8.31/lib/savedir.c:166
0x0000f42e      4989c5         mov r13, rax
0x0000f431      0f1f80000000.  nop dword [rax]
0x0000f438      488b7500       mov rsi, qword [rbp]                    ; string_fortified.h:97   return __builtin___stpcpy_chk (__dest, __src, __bos (__dest));
0x0000f43c      4d8d741d00     lea r14, [r13 + rbx]
0x0000f441      4883c510       add rbp, 0x10                           ; ../coreutils-8.31/lib/savedir.c:-31
0x0000f445      4c89f7         mov rdi, r14
0x0000f448      e87334ffff     call sym.imp.stpcpy
0x0000f44d      488b7df0       mov rdi, qword [rbp - 0x10]             ; ../coreutils-8.31/lib/savedir.c:-138
0x0000f451      4c29f0         sub rax, r14
0x0000f454      488d5c0301     lea rbx, [rbx + rax + 1]
0x0000f459      e8b239ffff     call sym..plt.got
0x0000f45e      4939ec         cmp r12, rbp
0x0000f461      75d5           jne 0xf438
0x0000f463      4c01eb         add rbx, r13
0x0000f466      e973ffffff     jmp 0xf3de
0x0000f46b      0f1f440000     nop dword [rax + rax]
0x0000f470      4c39742420     cmp qword [rsp + 0x20], r14
0x0000f475      0f84e8000000   je 0xf563
0x0000f47b      4b8d5c3500     lea rbx, [r13 + r14]
0x0000f480      e963ffffff     jmp 0xf3e8
0x0000f485      0f1f00         nop dword [rax]
0x0000f488      488b742418     mov rsi, qword [rsp + 0x18]
0x0000f48d      488b442420     mov rax, qword [rsp + 0x20]
0x0000f492      4889f2         mov rdx, rsi
0x0000f495      4c29f0         sub rax, r14
0x0000f498      4c01f2         add rdx, r14
0x0000f49b      4889542430     mov qword [rsp + 0x30], rdx
0x0000f4a0      0f92c2         setb dl
0x0000f4a3      4839f0         cmp rax, rsi
0x0000f4a6      0fb6d2         movzx edx, dl
0x0000f4a9      774a           ja 0xf4f5
0x0000f4ab      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/xalloc.h:-130
0x0000f4ae      0f85e5000000   jne 0xf599
0x0000f4b4      4d85ed         test r13, r13
0x0000f4b7      488b542430     mov rdx, qword [rsp + 0x30]
0x0000f4bc      0f84bd000000   je 0xf57f
0x0000f4c2      48b853555555.  movabs rax, 0x5555555555555553          ; 'SUUUUUUU'
0x0000f4cc      4839c2         cmp rdx, rax
0x0000f4cf      0f87c4000000   ja 0xf599
0x0000f4d5      4889d0         mov rax, rdx
0x0000f4d8      48d1e8         shr rax, 1
0x0000f4db      488d440201     lea rax, [rdx + rax + 1]
0x0000f4e0      4889442420     mov qword [rsp + 0x20], rax
0x0000f4e5      488b742420     mov rsi, qword [rsp + 0x20]
0x0000f4ea      4c89ef         mov rdi, r13
0x0000f4ed      e88e1b0000     call sym.xrealloc
0x0000f4f2      4989c5         mov r13, rax
0x0000f4f5      488b542418     mov rdx, qword [rsp + 0x18]
0x0000f4fa      4b8d7c3500     lea rdi, [r13 + r14]
0x0000f4ff      4c89fe         mov rsi, r15
0x0000f502      e85936ffff     call sym.imp.memcpy
0x0000f507      4c8b742430     mov r14, qword [rsp + 0x30]
0x0000f50c      e9e3fdffff     jmp 0xf2f4                              ; ../coreutils-8.31/lib/xalloc.h:-238
0x0000f511      48837c241000   cmp qword [rsp + 0x10], 0
0x0000f517      0f84a8000000   je 0xf5c5
0x0000f51d      48b854555555.  movabs rax, 0x555555555555554
0x0000f527      4939c4         cmp r12, rax
0x0000f52a      776d           ja 0xf599
0x0000f52c      4c89e0         mov rax, r12
0x0000f52f      48d1e8         shr rax, 1
0x0000f532      4803442438     add rax, qword [rsp + 0x38]
0x0000f537      4889442428     mov qword [rsp + 0x28], rax
0x0000f53c      488b742428     mov rsi, qword [rsp + 0x28]
0x0000f541      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000f546      48894c2430     mov qword [rsp + 0x30], rcx
0x0000f54b      48c1e604       shl rsi, 4
0x0000f54f      e82c1b0000     call sym.xrealloc
0x0000f554      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0000f559      4889442410     mov qword [rsp + 0x10], rax
0x0000f55e      e902feffff     jmp 0xf365
0x0000f563      488b5c2420     mov rbx, qword [rsp + 0x20]
0x0000f568      4c89ef         mov rdi, r13
0x0000f56b      488d7301       lea rsi, [rbx + 1]
0x0000f56f      e80c1b0000     call sym.xrealloc
0x0000f574      4989c5         mov r13, rax
0x0000f577      4801c3         add rbx, rax
0x0000f57a      e969feffff     jmp 0xf3e8                              ; ../coreutils-8.31/lib/xalloc.h:-247
0x0000f57f      4885d2         test rdx, rdx
0x0000f582      b880000000     mov eax, 0x80
0x0000f587      480f45c2       cmovne rax, rdx
0x0000f58b      4885c0         test rax, rax
0x0000f58e      4889442420     mov qword [rsp + 0x20], rax
0x0000f593      0f894cffffff   jns 0xf4e5
0x0000f599      e8d21c0000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/savedir.c:-283
0x0000f59e      6690           nop
0x0000f5a0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000f5a5      e86638ffff     call sym..plt.got
0x0000f5aa      4c89ef         mov rdi, r13
0x0000f5ad      4531ed         xor r13d, r13d
0x0000f5b0      e85b38ffff     call sym..plt.got
0x0000f5b5      895d00         mov dword [rbp], ebx
0x0000f5b8      e92efeffff     jmp 0xf3eb
0x0000f5bd      4531ed         xor r13d, r13d
0x0000f5c0      e926feffff     jmp 0xf3eb
0x0000f5c5      4d85e4         test r12, r12
0x0000f5c8      b808000000     mov eax, 8
0x0000f5cd      ba10000000     mov edx, 0x10
0x0000f5d2      490f45c4       cmovne rax, r12
0x0000f5d6      31f6           xor esi, esi
0x0000f5d8      4889c7         mov rdi, rax
0x0000f5db      4889442428     mov qword [rsp + 0x28], rax
0x0000f5e0      4889d0         mov rax, rdx
0x0000f5e3      48f7e7         mul rdi
0x0000f5e6      7019           jo 0xf601                               ; ../coreutils-8.31/lib/savedir.c:-378
0x0000f5e8      4885c0         test rax, rax
0x0000f5eb      78ac           js 0xf599
0x0000f5ed      4885f6         test rsi, rsi
0x0000f5f0      75a7           jne 0xf599
0x0000f5f2      498d442401     lea rax, [r12 + 1]
0x0000f5f7      4889442438     mov qword [rsp + 0x38], rax
0x0000f5fc      e93bffffff     jmp 0xf53c
0x0000f601      be01000000     mov esi, 1
0x0000f606      ebe0           jmp 0xf5e8                              ; ../coreutils-8.31/lib/savedir.c:-372
0x0000f608      0f1f84000000.  nop dword [rax + rax]
;-- savedir:
0x0000f610      4154           push r12
0x0000f612      55             push rbp                                ; ../coreutils-8.31/lib/savedir.c:-362
0x0000f613      89f5           mov ebp, esi
0x0000f615      53             push rbx
0x0000f616      e8851f0000     call sym.opendir_safer
0x0000f61b      4885c0         test rax, rax
0x0000f61e      7428           je 0xf648                               ; ../coreutils-8.31/lib/savedir.c:-375
0x0000f620      89ee           mov esi, ebp
0x0000f622      4889c3         mov rbx, rax
0x0000f625      4889c7         mov rdi, rax
0x0000f628      e863fcffff     call sym.streamsavedir
0x0000f62d      4889df         mov rdi, rbx
0x0000f630      4889c5         mov rbp, rax
0x0000f633      e82834ffff     call sym.imp.closedir
0x0000f638      85c0           test eax, eax
0x0000f63a      7514           jne 0xf650
0x0000f63c      4889e8         mov rax, rbp
0x0000f63f      5b             pop rbx
0x0000f640      5d             pop rbp                                 ; ../coreutils-8.31/lib/savedir.c:-366
0x0000f641      415c           pop r12
0x0000f643      c3             ret
0x0000f644      0f1f4000       nop dword [rax]
0x0000f648      31ed           xor ebp, ebp
0x0000f64a      ebf0           jmp 0xf63c
0x0000f64c      0f1f4000       nop dword [rax]
0x0000f650      e81b31ffff     call sym.imp.__errno_location
0x0000f655      448b20         mov r12d, dword [rax]
0x0000f658      4889c3         mov rbx, rax
0x0000f65b      4889ef         mov rdi, rbp
0x0000f65e      e8ad37ffff     call sym..plt.got
0x0000f663      31ed           xor ebp, ebp
0x0000f665      448923         mov dword [rbx], r12d
0x0000f668      ebd2           jmp 0xf63c
0x0000f66a      660f1f440000   nop word [rax + rax]
;-- try_nocreate:
0x0000f670      53             push rbx                                ; ../coreutils-8.31/lib/tempname.c:284
0x0000f671      4889fe         mov rsi, rdi
0x0000f674      bf01000000     mov edi, 1                              ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x0000f679      4881eca00000.  sub rsp, 0xa0                           ; ../coreutils-8.31/lib/tempname.c:284
0x0000f680      4889e2         mov rdx, rsp                            ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x0000f683      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/tempname.c:284
0x0000f68c      488984249800.  mov qword [rsp + 0x98], rax
0x0000f694      31c0           xor eax, eax
0x0000f696      e87532ffff     call sym.imp.__lxstat                   ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x0000f69b      89c3           mov ebx, eax
0x0000f69d      e8ce30ffff     call sym.imp.__errno_location
0x0000f6a2      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/tempname.c:287
0x0000f6a4      741a           je 0xf6c0
0x0000f6a6      8b10           mov edx, dword [rax]
0x0000f6a8      83fa4b         cmp edx, 0x4b
0x0000f6ab      7413           je 0xf6c0
0x0000f6ad      31c0           xor eax, eax
0x0000f6af      83fa02         cmp edx, 2
0x0000f6b2      0f95c0         setne al
0x0000f6b5      f7d8           neg eax
0x0000f6b7      eb12           jmp 0xf6cb
0x0000f6b9      0f1f80000000.  nop dword [rax]
0x0000f6c0      c70011000000   mov dword [rax], 0x11                   ; ../coreutils-8.31/lib/tempname.c:288 ; [0x11:4]=0x1003e00
0x0000f6c6      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000f6cb      488b8c249800.  mov rcx, qword [rsp + 0x98]             ; ../coreutils-8.31/lib/tempname.c:290
0x0000f6d3      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000f6dc      7509           jne 0xf6e7
0x0000f6de      4881c4a00000.  add rsp, 0xa0
0x0000f6e5      5b             pop rbx
0x0000f6e6      c3             ret
0x0000f6e7      e84432ffff     call sym.imp.__stack_chk_fail
0x0000f6ec      0f1f4000       nop dword [rax]
;-- try_dir:
0x0000f6f0      bec0010000     mov esi, 0x1c0                          ; ../coreutils-8.31/lib/tempname.c:278
0x0000f6f5      e9e630ffff     jmp sym.imp.mkdir
0x0000f6fa      660f1f440000   nop word [rax + rax]
;-- try_file:
0x0000f700      8b36           mov esi, dword [rsi]                    ; ../coreutils-8.31/lib/tempname.c:269
0x0000f702      ba80010000     mov edx, 0x180                          ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x0000f707      31c0           xor eax, eax
0x0000f709      4080e63c       and sil, 0x3c                           ; ../coreutils-8.31/lib/tempname.c:273
0x0000f70d      4080cec2       or sil, 0xc2                            ; ../coreutils-8.31/lib/tempname.c:271
0x0000f711      e9ba35ffff     jmp sym.imp.open                        ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x0000f716      662e0f1f8400.  nop word cs:[rax + rax]
;-- try_tempname_len:
0x0000f720      4157           push r15                                ; ../coreutils-8.31/lib/tempname.c:190
0x0000f722      4156           push r14
0x0000f724      4989ff         mov r15, rdi
0x0000f727      4155           push r13
0x0000f729      4154           push r12
0x0000f72b      4d89c6         mov r14, r8
0x0000f72e      55             push rbp
0x0000f72f      53             push rbx
0x0000f730      89f5           mov ebp, esi
0x0000f732      4883ec38       sub rsp, 0x38
0x0000f736      4889542418     mov qword [rsp + 0x18], rdx
0x0000f73b      48893c24       mov qword [rsp], rdi
0x0000f73f      48894c2420     mov qword [rsp + 0x20], rcx
0x0000f744      e82730ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/tempname.c:195
0x0000f749      4889442408     mov qword [rsp + 8], rax
0x0000f74e      8b00           mov eax, dword [rax]
0x0000f750      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/tempname.c:215
0x0000f753      8944242c       mov dword [rsp + 0x2c], eax             ; ../coreutils-8.31/lib/tempname.c:195
0x0000f757      e8a431ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/tempname.c:215
0x0000f75c      4863f5         movsxd rsi, ebp                         ; ../coreutils-8.31/lib/tempname.c:216
0x0000f75f      4a8d1436       lea rdx, [rsi + r14]
0x0000f763      4839c2         cmp rdx, rax
0x0000f766      0f870f010000   ja 0xf87b
0x0000f76c      4c29f0         sub rax, r14                            ; ../coreutils-8.31/lib/tempname.c:217
0x0000f76f      4889c3         mov rbx, rax
0x0000f772      4829f3         sub rbx, rsi
0x0000f775      488d35295a00.  lea rsi, [0x000151a5]                   ; ../coreutils-8.31/lib/tempname.c:180 ; "X"
0x0000f77c      498d041f       lea rax, [r15 + rbx]                    ; ../coreutils-8.31/lib/tempname.c:217
0x0000f780      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/tempname.c:180
0x0000f783      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/tempname.c:217
0x0000f788      e8c332ffff     call sym.imp.strspn                     ; ../coreutils-8.31/lib/tempname.c:180
0x0000f78d      4939c6         cmp r14, rax                            ; ../coreutils-8.31/lib/tempname.c:217
0x0000f790      0f87e5000000   ja 0xf87b
0x0000f796      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/tempname.c:228
0x0000f798      4c89f6         mov rsi, r14
0x0000f79b      e880200000     call sym.randint_all_new
0x0000f7a0      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/tempname.c:229
0x0000f7a3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/tempname.c:228
0x0000f7a6      0f84e1000000   je 0xf88d                               ; ../coreutils-8.31/lib/tempname.c:229
0x0000f7ac      488b0424       mov rax, qword [rsp]
0x0000f7b0      4c8d25c96000.  lea r12, obj.letters                    ; 0x15880 ; "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
0x0000f7b7      41bdf8a20300   mov r13d, 0x3a2f8
0x0000f7bd      4c01f0         add rax, r14
0x0000f7c0      4801c3         add rbx, rax
0x0000f7c3      0f1f440000     nop dword [rax + rax]
0x0000f7c8      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/tempname.c:236
0x0000f7cb      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x0000f7d0      7425           je 0xf7f7
0x0000f7d2      660f1f440000   nop word [rax + rax]
0x0000f7d8      be3d000000     mov esi, 0x3d                           ; ../coreutils-8.31/lib/tempname.c:237 ; '='
0x0000f7dd      4889ef         mov rdi, rbp
0x0000f7e0      4983c701       add r15, 1
0x0000f7e4      e887200000     call sym.randint_genmax
0x0000f7e9      410fb60404     movzx eax, byte [r12 + rax]
0x0000f7ee      418847ff       mov byte [r15 - 1], al
0x0000f7f2      4939df         cmp r15, rbx                            ; ../coreutils-8.31/lib/tempname.c:236
0x0000f7f5      75e1           jne 0xf7d8
0x0000f7f7      488b742418     mov rsi, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/tempname.c:239
0x0000f7fc      488b3c24       mov rdi, qword [rsp]
0x0000f800      488b442420     mov rax, qword [rsp + 0x20]
0x0000f805      ffd0           call rax
0x0000f807      85c0           test eax, eax                           ; ../coreutils-8.31/lib/tempname.c:240
0x0000f809      89c2           mov edx, eax                            ; ../coreutils-8.31/lib/tempname.c:239
0x0000f80b      792c           jns 0xf839                              ; ../coreutils-8.31/lib/tempname.c:240
0x0000f80d      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:245
0x0000f812      8b08           mov ecx, dword [rax]
0x0000f814      83f911         cmp ecx, 0x11
0x0000f817      755b           jne 0xf874
0x0000f819      4183ed01       sub r13d, 1                             ; ../coreutils-8.31/lib/tempname.c:232
0x0000f81d      75a9           jne 0xf7c8
0x0000f81f      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/tempname.c:252
0x0000f822      e889210000     call sym.randint_all_free
0x0000f827      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:255
0x0000f82c      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:256 ; -1
0x0000f831      c70011000000   mov dword [rax], 0x11                   ; ../coreutils-8.31/lib/tempname.c:255 ; [0x11:4]=0x1003e00
0x0000f837      eb2a           jmp 0xf863                              ; ../coreutils-8.31/lib/tempname.c:256
0x0000f839      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:242
0x0000f83e      8b44242c       mov eax, dword [rsp + 0x2c]
0x0000f842      8901           mov dword [rcx], eax
0x0000f844      89c1           mov ecx, eax                            ; ../coreutils-8.31/lib/tempname.c:243
0x0000f846      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/tempname.c:261
0x0000f849      89542410       mov dword [rsp + 0x10], edx
0x0000f84d      890c24         mov dword [rsp], ecx
0x0000f850      e85b210000     call sym.randint_all_free
0x0000f855      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:262
0x0000f85a      8b0c24         mov ecx, dword [rsp]
0x0000f85d      8b542410       mov edx, dword [rsp + 0x10]             ; ../coreutils-8.31/lib/tempname.c:264
0x0000f861      8908           mov dword [rax], ecx                    ; ../coreutils-8.31/lib/tempname.c:262
0x0000f863      4883c438       add rsp, 0x38                           ; ../coreutils-8.31/lib/tempname.c:265
0x0000f867      89d0           mov eax, edx
0x0000f869      5b             pop rbx
0x0000f86a      5d             pop rbp
0x0000f86b      415c           pop r12
0x0000f86d      415d           pop r13
0x0000f86f      415e           pop r14
0x0000f871      415f           pop r15
0x0000f873      c3             ret
0x0000f874      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:247 ; -1
0x0000f879      ebcb           jmp 0xf846
0x0000f87b      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:220
0x0000f880      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:221 ; -1
0x0000f885      c70016000000   mov dword [rax], 0x16                   ; ../coreutils-8.31/lib/tempname.c:220 ; [0x16:4]=0x36d00000
0x0000f88b      ebd6           jmp 0xf863                              ; ../coreutils-8.31/lib/tempname.c:221
0x0000f88d      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:230 ; -1
0x0000f892      ebcf           jmp 0xf863
0x0000f894      6690           nop                                     ; ../coreutils-8.31/lib/tempname.c:181
0x0000f896      662e0f1f8400.  nop word cs:[rax + rax]
;-- gen_tempname_len:
0x0000f8a0      4883ec18       sub rsp, 0x18
0x0000f8a4      83f901         cmp ecx, 1
0x0000f8a7      8954240c       mov dword [rsp + 0xc], edx
0x0000f8ab      7463           je 0xf910
0x0000f8ad      83f902         cmp ecx, 2
0x0000f8b0      7426           je 0xf8d8
0x0000f8b2      85c9           test ecx, ecx
0x0000f8b4      743a           je 0xf8f0
0x0000f8b6      488d0da35f00.  lea rcx, obj.__PRETTY_FUNCTION__.5642   ; 0x15860 ; "gen_tempname_len"
0x0000f8bd      488d35445f00.  lea rsi, [0x00015808]                   ; "../coreutils-8.31/lib/tempname.c"
0x0000f8c4      488d3d655f00.  lea rdi, str.invalid_KIND_in___gen_tempname ; 0x15830 ; "! \"invalid KIND in __gen_tempname\""
0x0000f8cb      ba47010000     mov edx, 0x147
0x0000f8d0      e80b31ffff     call sym.imp.__assert_fail
0x0000f8d5      0f1f00         nop dword [rax]
0x0000f8d8      488d54240c     lea rdx, [rsp + 0xc]
0x0000f8dd      488d0d8cfdff.  lea rcx, sym.try_nocreate               ; ../coreutils-8.31/lib/tempname.c:202 ; 0xf670 ; "SH\x89\xfe\xbf\x01"
0x0000f8e4      e837feffff     call sym.try_tempname_len
0x0000f8e9      4883c418       add rsp, 0x18
0x0000f8ed      c3             ret
0x0000f8ee      6690           nop                                     ; ../coreutils-8.31/lib/tempname.c:203
0x0000f8f0      488d54240c     lea rdx, [rsp + 0xc]
0x0000f8f5      488d0d04feff.  lea rcx, sym.try_file                   ; 0xf700
0x0000f8fc      e81ffeffff     call sym.try_tempname_len
0x0000f901      4883c418       add rsp, 0x18
0x0000f905      c3             ret
0x0000f906      662e0f1f8400.  nop word cs:[rax + rax]
0x0000f910      488d54240c     lea rdx, [rsp + 0xc]
0x0000f915      488d0dd4fdff.  lea rcx, sym.try_dir                    ; 0xf6f0
0x0000f91c      e8fffdffff     call sym.try_tempname_len
0x0000f921      4883c418       add rsp, 0x18
0x0000f925      c3             ret
0x0000f926      662e0f1f8400.  nop word cs:[rax + rax]
;-- gen_tempname:
0x0000f930      41b806000000   mov r8d, 6
0x0000f936      e965ffffff     jmp sym.gen_tempname_len
0x0000f93b      0f1f440000     nop dword [rax + rax]
;-- try_tempname:
0x0000f940      41b806000000   mov r8d, 6
0x0000f946      e9d5fdffff     jmp sym.try_tempname_len
0x0000f94b      0f1f440000     nop dword [rax + rax]
;-- fd_safer:
0x0000f950      4155           push r13                                ; ../coreutils-8.31/lib/fd-safer.c:38
0x0000f952      4154           push r12
0x0000f954      55             push rbp
0x0000f955      53             push rbx
0x0000f956      89fb           mov ebx, edi
0x0000f958      4883ec08       sub rsp, 8
0x0000f95c      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/fd-safer.c:39
0x0000f95f      7721           ja 0xf982
0x0000f961      e81a2b0000     call sym.dup_safer                      ; ../coreutils-8.31/lib/fd-safer.c:41
0x0000f966      4189c4         mov r12d, eax
0x0000f969      e8022effff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-safer.c:42
0x0000f96e      448b28         mov r13d, dword [rax]
0x0000f971      4889c5         mov rbp, rax
0x0000f974      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-safer.c:43
0x0000f976      e8b530ffff     call sym.imp.close
0x0000f97b      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-safer.c:45
0x0000f97e      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-safer.c:44
0x0000f982      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-safer.c:49
0x0000f986      89d8           mov eax, ebx
0x0000f988      5b             pop rbx
0x0000f989      5d             pop rbp
0x0000f98a      415c           pop r12
0x0000f98c      415d           pop r13
0x0000f98e      c3             ret
0x0000f98f      90             nop
;-- dev_info_hash:
0x0000f990      488b07         mov rax, qword [rdi]
0x0000f993      31d2           xor edx, edx
0x0000f995      48f7f6         div rsi
0x0000f998      4889d0         mov rax, rdx
0x0000f99b      c3             ret
0x0000f99c      0f1f4000       nop dword [rax]
;-- dev_info_compare:
0x0000f9a0      488b06         mov rax, qword [rsi]
0x0000f9a3      483907         cmp qword [rdi], rax
0x0000f9a6      0f94c0         sete al
0x0000f9a9      c3             ret
0x0000f9aa      660f1f440000   nop word [rax + rax]
;-- utimecmpat:
0x0000f9b0      4157           push r15
0x0000f9b2      4156           push r14
0x0000f9b4      4155           push r13
0x0000f9b6      4154           push r12
0x0000f9b8      55             push rbp
0x0000f9b9      53             push rbx
0x0000f9ba      4489c3         mov ebx, r8d
0x0000f9bd      83e301         and ebx, 1
0x0000f9c0      4881ec280100.  sub rsp, 0x128
0x0000f9c7      4c8b6960       mov r13, qword [rcx + 0x60]
0x0000f9cb      4c8b7258       mov r14, qword [rdx + 0x58]
0x0000f9cf      64488b042528.  mov rax, qword fs:[0x28]
0x0000f9d8      488984241801.  mov qword [rsp + 0x118], rax
0x0000f9e0      31c0           xor eax, eax
0x0000f9e2      85db           test ebx, ebx
0x0000f9e4      4c8b6158       mov r12, qword [rcx + 0x58]
0x0000f9e8      4c8b7a60       mov r15, qword [rdx + 0x60]
0x0000f9ec      4589e9         mov r9d, r13d
0x0000f9ef      0f84e3000000   je 0xfad8
0x0000f9f5      4d39e6         cmp r14, r12
0x0000f9f8      4189fa         mov r10d, edi
0x0000f9fb      0f94442438     sete byte [rsp + 0x38]
0x0000fa00      0fb67c2438     movzx edi, byte [rsp + 0x38]
0x0000fa05      4539ef         cmp r15d, r13d
0x0000fa08      0f94c0         sete al
0x0000fa0b      4020f8         and al, dil
0x0000fa0e      88442408       mov byte [rsp + 8], al
0x0000fa12      0f8508010000   jne 0xfb20
0x0000fa18      498d4424ff     lea rax, [r12 - 1]
0x0000fa1d      4c39f0         cmp rax, r14
0x0000fa20      0f8f02010000   jg 0xfb28
0x0000fa26      498d46ff       lea rax, [r14 - 1]
0x0000fa2a      4c39e0         cmp rax, r12
0x0000fa2d      0f8fbc000000   jg 0xfaef
0x0000fa33      4889d5         mov rbp, rdx
0x0000fa36      488b15c3ac20.  mov rdx, qword [obj.ht.5307]            ; [0x21a700:8]=0
0x0000fa3d      4989f3         mov r11, rsi
0x0000fa40      4885d2         test rdx, rdx
0x0000fa43      0f8497050000   je 0xffe0
0x0000fa49      488b35a8ac20.  mov rsi, qword [obj.new_dst_res.5308]   ; [0x21a6f8:8]=0
0x0000fa50      4885f6         test rsi, rsi
0x0000fa53      0f84d7000000   je 0xfb30
0x0000fa59      488b4500       mov rax, qword [rbp]
0x0000fa5d      4889d7         mov rdi, rdx
0x0000fa60      4c895c2428     mov qword [rsp + 0x28], r11
0x0000fa65      4489542420     mov dword [rsp + 0x20], r10d
0x0000fa6a      44894c2418     mov dword [rsp + 0x18], r9d
0x0000fa6f      488906         mov qword [rsi], rax
0x0000fa72      e859d1ffff     call sym.hash_insert
0x0000fa77      4885c0         test rax, rax
0x0000fa7a      4889442410     mov qword [rsp + 0x10], rax
0x0000fa7f      448b4c2418     mov r9d, dword [rsp + 0x18]
0x0000fa84      448b542420     mov r10d, dword [rsp + 0x20]
0x0000fa89      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000fa8e      0f84f4000000   je 0xfb88
0x0000fa94      4839055dac20.  cmp qword [obj.new_dst_res.5308], rax   ; [0x21a6f8:8]=0
0x0000fa9b      0f849f050000   je 0x10040
0x0000faa1      488b442410     mov rax, qword [rsp + 0x10]
0x0000faa6      80780c00       cmp byte [rax + 0xc], 0
0x0000faaa      8b7008         mov esi, dword [rax + 8]
0x0000faad      89742418       mov dword [rsp + 0x18], esi
0x0000fab1      0f8453010000   je 0xfc0a
0x0000fab7      31c0           xor eax, eax
0x0000fab9      81fe00943577   cmp esi, 0x77359400
0x0000fabf      0f94c0         sete al
0x0000fac2      f7d0           not eax
0x0000fac4      4898           cdqe
0x0000fac6      4921c4         and r12, rax
0x0000fac9      4489c8         mov eax, r9d
0x0000facc      4589e9         mov r9d, r13d
0x0000facf      99             cdq
0x0000fad0      f7fe           idiv esi
0x0000fad2      4129d1         sub r9d, edx
0x0000fad5      0f1f00         nop dword [rax]
0x0000fad8      4d39f4         cmp r12, r14
0x0000fadb      7f4b           jg 0xfb28
0x0000fadd      bb01000000     mov ebx, 1
0x0000fae2      7c0b           jl 0xfaef
0x0000fae4      4539f9         cmp r9d, r15d
0x0000fae7      7f3f           jg 0xfb28
0x0000fae9      0f9cc3         setl bl
0x0000faec      0fb6db         movzx ebx, bl
0x0000faef      488bb4241801.  mov rsi, qword [rsp + 0x118]
0x0000faf7      644833342528.  xor rsi, qword fs:[0x28]
0x0000fb00      89d8           mov eax, ebx
0x0000fb02      0f85d0050000   jne 0x100d8
0x0000fb08      4881c4280100.  add rsp, 0x128
0x0000fb0f      5b             pop rbx
0x0000fb10      5d             pop rbp
0x0000fb11      415c           pop r12
0x0000fb13      415d           pop r13
0x0000fb15      415e           pop r14
0x0000fb17      415f           pop r15
0x0000fb19      c3             ret
0x0000fb1a      660f1f440000   nop word [rax + rax]
0x0000fb20      31db           xor ebx, ebx
0x0000fb22      ebcb           jmp 0xfaef
0x0000fb24      0f1f4000       nop dword [rax]
0x0000fb28      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000fb2d      ebc0           jmp 0xfaef
0x0000fb2f      90             nop
0x0000fb30      bf10000000     mov edi, 0x10
0x0000fb35      4c895c2428     mov qword [rsp + 0x28], r11
0x0000fb3a      4489542420     mov dword [rsp + 0x20], r10d
0x0000fb3f      44894c2418     mov dword [rsp + 0x18], r9d
0x0000fb44      4889542410     mov qword [rsp + 0x10], rdx
0x0000fb49      e87230ffff     call sym.imp.malloc
0x0000fb4e      4885c0         test rax, rax
0x0000fb51      4889c6         mov rsi, rax
0x0000fb54      4889059dab20.  mov qword [obj.new_dst_res.5308], rax   ; [0x21a6f8:8]=0
0x0000fb5b      488b542410     mov rdx, qword [rsp + 0x10]
0x0000fb60      448b4c2418     mov r9d, dword [rsp + 0x18]
0x0000fb65      448b542420     mov r10d, dword [rsp + 0x20]
0x0000fb6a      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000fb6f      7427           je 0xfb98
0x0000fb71      c74008009435.  mov dword [rax + 8], 0x77359400         ; [0x77359400:4]=-1
0x0000fb78      c6400c00       mov byte [rax + 0xc], 0
0x0000fb7c      e9d8feffff     jmp 0xfa59
0x0000fb81      0f1f80000000.  nop dword [rax]
0x0000fb88      488b1571ab20.  mov rdx, qword [obj.ht.5307]            ; [0x21a700:8]=0
0x0000fb8f      4885d2         test rdx, rdx
0x0000fb92      0f849a040000   je 0x10032
0x0000fb98      488d4c2450     lea rcx, [rsp + 0x50]
0x0000fb9d      488b4500       mov rax, qword [rbp]
0x0000fba1      4889d7         mov rdi, rdx
0x0000fba4      4c895c2430     mov qword [rsp + 0x30], r11
0x0000fba9      4489542428     mov dword [rsp + 0x28], r10d
0x0000fbae      4889ce         mov rsi, rcx
0x0000fbb1      44894c2420     mov dword [rsp + 0x20], r9d
0x0000fbb6      48894c2418     mov qword [rsp + 0x18], rcx
0x0000fbbb      4889442450     mov qword [rsp + 0x50], rax
0x0000fbc0      e89bc5ffff     call sym.hash_lookup
0x0000fbc5      4885c0         test rax, rax
0x0000fbc8      4889442410     mov qword [rsp + 0x10], rax
0x0000fbcd      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000fbd2      448b4c2420     mov r9d, dword [rsp + 0x20]
0x0000fbd7      448b542428     mov r10d, dword [rsp + 0x28]
0x0000fbdc      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000fbe1      0f85bafeffff   jne 0xfaa1
0x0000fbe7      660f1f840000.  nop word [rax + rax]
0x0000fbf0      c74424580094.  mov dword [rsp + 0x58], 0x77359400      ; [0x77359400:4]=-1
0x0000fbf8      c644245c00     mov byte [rsp + 0x5c], 0
0x0000fbfd      c74424180094.  mov dword [rsp + 0x18], 0x77359400      ; [0x77359400:4]=-1
0x0000fc05      48894c2410     mov qword [rsp + 0x10], rcx
0x0000fc0a      488b4d50       mov rcx, qword [rbp + 0x50]
0x0000fc0e      b867666666     mov eax, 0x66666667                     ; 'gfff'
0x0000fc13      488b7570       mov rsi, qword [rbp + 0x70]
0x0000fc17      f7e9           imul ecx
0x0000fc19      89c8           mov eax, ecx
0x0000fc1b      48894c2428     mov qword [rsp + 0x28], rcx
0x0000fc20      c1f81f         sar eax, 0x1f
0x0000fc23      c1fa02         sar edx, 2
0x0000fc26      29c2           sub edx, eax
0x0000fc28      8d0492         lea eax, [rdx + rdx*4]
0x0000fc2b      89542420       mov dword [rsp + 0x20], edx
0x0000fc2f      01c0           add eax, eax
0x0000fc31      29c1           sub ecx, eax
0x0000fc33      b867666666     mov eax, 0x66666667                     ; 'gfff'
0x0000fc38      f7ee           imul esi
0x0000fc3a      89f0           mov eax, esi
0x0000fc3c      c1f81f         sar eax, 0x1f
0x0000fc3f      c1fa02         sar edx, 2
0x0000fc42      89d7           mov edi, edx
0x0000fc44      29c7           sub edi, eax
0x0000fc46      8d04bf         lea eax, [rdi + rdi*4]
0x0000fc49      01c0           add eax, eax
0x0000fc4b      29c6           sub esi, eax
0x0000fc4d      b867666666     mov eax, 0x66666667                     ; 'gfff'
0x0000fc52      41f7ef         imul r15d
0x0000fc55      4489f8         mov eax, r15d
0x0000fc58      09f1           or ecx, esi
0x0000fc5a      c1f81f         sar eax, 0x1f
0x0000fc5d      4489fe         mov esi, r15d
0x0000fc60      c1fa02         sar edx, 2
0x0000fc63      4189d0         mov r8d, edx
0x0000fc66      4129c0         sub r8d, eax
0x0000fc69      438d0480       lea eax, [r8 + r8*4]
0x0000fc6d      01c0           add eax, eax
0x0000fc6f      29c6           sub esi, eax
0x0000fc71      09f1           or ecx, esi
0x0000fc73      0f854f030000   jne 0xffc8
0x0000fc79      837c24180a     cmp dword [rsp + 0x18], 0xa
0x0000fc7e      488b4548       mov rax, qword [rbp + 0x48]
0x0000fc82      89f9           mov ecx, edi
0x0000fc84      8b542420       mov edx, dword [rsp + 0x20]
0x0000fc88      4489c6         mov esi, r8d
0x0000fc8b      4889442448     mov qword [rsp + 0x48], rax
0x0000fc90      89542430       mov dword [rsp + 0x30], edx
0x0000fc94      0f8e0e040000   jle 0x100a8
0x0000fc9a      b867666666     mov eax, 0x66666667                     ; 'gfff'
0x0000fc9f      f7ef           imul edi
0x0000fca1      89f8           mov eax, edi
0x0000fca3      c1f81f         sar eax, 0x1f
0x0000fca6      c1fa02         sar edx, 2
0x0000fca9      29c2           sub edx, eax
0x0000fcab      8d0492         lea eax, [rdx + rdx*4]
0x0000fcae      01c0           add eax, eax
0x0000fcb0      29c7           sub edi, eax
0x0000fcb2      b867666666     mov eax, 0x66666667                     ; 'gfff'
0x0000fcb7      f76c2420       imul dword [rsp + 0x20]
0x0000fcbb      8b442420       mov eax, dword [rsp + 0x20]
0x0000fcbf      c1f81f         sar eax, 0x1f
0x0000fcc2      c1fa02         sar edx, 2
0x0000fcc5      29c2           sub edx, eax
0x0000fcc7      8d0492         lea eax, [rdx + rdx*4]
0x0000fcca      8b542420       mov edx, dword [rsp + 0x20]
0x0000fcce      c74424200a00.  mov dword [rsp + 0x20], 0xa
0x0000fcd6      01c0           add eax, eax
0x0000fcd8      29c2           sub edx, eax
0x0000fcda      b867666666     mov eax, 0x66666667                     ; 'gfff'
0x0000fcdf      09d7           or edi, edx
0x0000fce1      41f7e8         imul r8d
0x0000fce4      4489c0         mov eax, r8d
0x0000fce7      897c243c       mov dword [rsp + 0x3c], edi
0x0000fceb      c1f81f         sar eax, 0x1f
0x0000fcee      bf67666666     mov edi, 0x66666667                     ; 'gfff'
0x0000fcf3      c1fa02         sar edx, 2
0x0000fcf6      29c2           sub edx, eax
0x0000fcf8      8d0492         lea eax, [rdx + rdx*4]
0x0000fcfb      ba08000000     mov edx, 8
0x0000fd00      01c0           add eax, eax
0x0000fd02      4129c0         sub r8d, eax
0x0000fd05      8b44243c       mov eax, dword [rsp + 0x3c]
0x0000fd09      4409c0         or eax, r8d
0x0000fd0c      0f85b2030000   jne 0x100c4
0x0000fd12      44894c243c     mov dword [rsp + 0x3c], r9d
0x0000fd17      4c89742440     mov qword [rsp + 0x40], r14
0x0000fd1c      41b90a000000   mov r9d, 0xa
0x0000fd22      448b442430     mov r8d, dword [rsp + 0x30]
0x0000fd27      4c89642420     mov qword [rsp + 0x20], r12
0x0000fd2c      4189d6         mov r14d, edx
0x0000fd2f      48896c2430     mov qword [rsp + 0x30], rbp
0x0000fd34      4489c0         mov eax, r8d
0x0000fd37      41c1f81f       sar r8d, 0x1f
0x0000fd3b      438d2c89       lea ebp, [r9 + r9*4]
0x0000fd3f      f7ef           imul edi
0x0000fd41      89c8           mov eax, ecx
0x0000fd43      c1f91f         sar ecx, 0x1f
0x0000fd46      01ed           add ebp, ebp
0x0000fd48      4189e9         mov r9d, ebp
0x0000fd4b      c1fa02         sar edx, 2
0x0000fd4e      4429c2         sub edx, r8d
0x0000fd51      4189d0         mov r8d, edx
0x0000fd54      f7ef           imul edi
0x0000fd56      89f0           mov eax, esi
0x0000fd58      c1fe1f         sar esi, 0x1f
0x0000fd5b      c1fa02         sar edx, 2
0x0000fd5e      29ca           sub edx, ecx
0x0000fd60      89d1           mov ecx, edx
0x0000fd62      f7ef           imul edi
0x0000fd64      c1fa02         sar edx, 2
0x0000fd67      29f2           sub edx, esi
0x0000fd69      3b6c2418       cmp ebp, dword [rsp + 0x18]
0x0000fd6d      89d6           mov esi, edx
0x0000fd6f      0f8ddb020000   jge 0x10050
0x0000fd75      4489c0         mov eax, r8d
0x0000fd78      4589c4         mov r12d, r8d
0x0000fd7b      f7ef           imul edi
0x0000fd7d      4489c0         mov eax, r8d
0x0000fd80      c1f81f         sar eax, 0x1f
0x0000fd83      c1fa02         sar edx, 2
0x0000fd86      29c2           sub edx, eax
0x0000fd88      8d0492         lea eax, [rdx + rdx*4]
0x0000fd8b      01c0           add eax, eax
0x0000fd8d      4129c4         sub r12d, eax
0x0000fd90      89c8           mov eax, ecx
0x0000fd92      f7ef           imul edi
0x0000fd94      89c8           mov eax, ecx
0x0000fd96      c1f81f         sar eax, 0x1f
0x0000fd99      c1fa02         sar edx, 2
0x0000fd9c      29c2           sub edx, eax
0x0000fd9e      8d0492         lea eax, [rdx + rdx*4]
0x0000fda1      89ca           mov edx, ecx
0x0000fda3      01c0           add eax, eax
0x0000fda5      29c2           sub edx, eax
0x0000fda7      89f0           mov eax, esi
0x0000fda9      4109d4         or r12d, edx
0x0000fdac      f7ef           imul edi
0x0000fdae      89f0           mov eax, esi
0x0000fdb0      c1f81f         sar eax, 0x1f
0x0000fdb3      c1fa02         sar edx, 2
0x0000fdb6      29c2           sub edx, eax
0x0000fdb8      8d0492         lea eax, [rdx + rdx*4]
0x0000fdbb      89f2           mov edx, esi
0x0000fdbd      01c0           add eax, eax
0x0000fdbf      29c2           sub edx, eax
0x0000fdc1      4109d4         or r12d, edx
0x0000fdc4      0f8586020000   jne 0x10050
0x0000fdca      4183ee01       sub r14d, 1
0x0000fdce      0f8560ffffff   jne 0xfd34
0x0000fdd4      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000fdd9      488b6c2430     mov rbp, qword [rsp + 0x30]
0x0000fdde      488b442448     mov rax, qword [rsp + 0x48]
0x0000fde3      4c8b642420     mov r12, qword [rsp + 0x20]
0x0000fde8      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x0000fded      4c09f0         or rax, r14
0x0000fdf0      480b4568       or rax, qword [rbp + 0x68]
0x0000fdf4      a801           test al, 1
0x0000fdf6      488b442410     mov rax, qword [rsp + 0x10]
0x0000fdfb      0f8487020000   je 0x10088
0x0000fe01      c7400800ca9a.  mov dword [rax + 8], 0x3b9aca00         ; [0x3b9aca00:4]=-1
0x0000fe08      c744242000ca.  mov dword [rsp + 0x20], 0x3b9aca00      ; [0x3b9aca00:4]=-1
0x0000fe10      4c89e0         mov rax, r12
0x0000fe13      4d39e6         cmp r14, r12
0x0000fe16      0f8fd3fcffff   jg 0xfaef
0x0000fe1c      4539ef         cmp r15d, r13d
0x0000fe1f      7c0b           jl 0xfe2c
0x0000fe21      807c243800     cmp byte [rsp + 0x38], 0
0x0000fe26      0f85c3fcffff   jne 0xfaef
0x0000fe2c      4939c6         cmp r14, rax
0x0000fe2f      0f8cf3fcffff   jl 0xfb28
0x0000fe35      7516           jne 0xfe4d
0x0000fe37      4489c8         mov eax, r9d
0x0000fe3a      99             cdq
0x0000fe3b      f77c2420       idiv dword [rsp + 0x20]
0x0000fe3f      4489e8         mov eax, r13d
0x0000fe42      29d0           sub eax, edx
0x0000fe44      4439f8         cmp eax, r15d
0x0000fe47      0f8fdbfcffff   jg 0xfb28
0x0000fe4d      488b442448     mov rax, qword [rsp + 0x48]
0x0000fe52      ba398ee338     mov edx, 0x38e38e39
0x0000fe57      488d6c2460     lea rbp, [rsp + 0x60]
0x0000fe5c      4c89de         mov rsi, r11
0x0000fe5f      4489d7         mov edi, r10d
0x0000fe62      b900010000     mov ecx, 0x100
0x0000fe67      44894c2418     mov dword [rsp + 0x18], r9d
0x0000fe6c      4489542438     mov dword [rsp + 0x38], r10d
0x0000fe71      4889442460     mov qword [rsp + 0x60], rax
0x0000fe76      4863442428     movsxd rax, dword [rsp + 0x28]
0x0000fe7b      4889442468     mov qword [rsp + 0x68], rax
0x0000fe80      0fb6442408     movzx eax, byte [rsp + 8]
0x0000fe85      4c895c2408     mov qword [rsp + 8], r11
0x0000fe8a      4c09f0         or rax, r14
0x0000fe8d      4889442470     mov qword [rsp + 0x70], rax
0x0000fe92      8b442420       mov eax, dword [rsp + 0x20]
0x0000fe96      f7e2           mul edx
0x0000fe98      89d0           mov eax, edx
0x0000fe9a      4889ea         mov rdx, rbp
0x0000fe9d      d1e8           shr eax, 1
0x0000fe9f      4401f8         add eax, r15d
0x0000fea2      4898           cdqe
0x0000fea4      4889442478     mov qword [rsp + 0x78], rax
0x0000fea9      e8a228ffff     call sym.imp.utimensat
0x0000feae      85c0           test eax, eax
0x0000feb0      448b542438     mov r10d, dword [rsp + 0x38]
0x0000feb5      4c8b5c2408     mov r11, qword [rsp + 8]
0x0000feba      448b4c2418     mov r9d, dword [rsp + 0x18]
0x0000febf      740a           je 0xfecb
0x0000fec1      bbfeffffff     mov ebx, 0xfffffffe                     ; 4294967294
0x0000fec6      e924fcffff     jmp 0xfaef
0x0000fecb      488d8c248000.  lea rcx, [rsp + 0x80]
0x0000fed3      4c89da         mov rdx, r11
0x0000fed6      41b800010000   mov r8d, 0x100
0x0000fedc      4489d6         mov esi, r10d
0x0000fedf      bf01000000     mov edi, 1
0x0000fee4      44894c2418     mov dword [rsp + 0x18], r9d
0x0000fee9      4c895c2408     mov qword [rsp + 8], r11
0x0000feee      4489542438     mov dword [rsp + 0x38], r10d
0x0000fef3      e8882affff     call sym.imp.__fxstatat
0x0000fef8      488b8c24e000.  mov rcx, qword [rsp + 0xe0]
0x0000ff00      4189c0         mov r8d, eax
0x0000ff03      488b8424d800.  mov rax, qword [rsp + 0xd8]
0x0000ff0b      4963d7         movsxd rdx, r15d
0x0000ff0e      448b542438     mov r10d, dword [rsp + 0x38]
0x0000ff13      4c8b5c2408     mov r11, qword [rsp + 8]
0x0000ff18      448b4c2418     mov r9d, dword [rsp + 0x18]
0x0000ff1d      4831d1         xor rcx, rdx
0x0000ff20      4c31f0         xor rax, r14
0x0000ff23      4809c8         or rax, rcx
0x0000ff26      4963c8         movsxd rcx, r8d
0x0000ff29      4809c8         or rax, rcx
0x0000ff2c      0f85ab010000   jne 0x100dd
0x0000ff32      8b8c24d80000.  mov ecx, dword [rsp + 0xd8]
0x0000ff39      be0a000000     mov esi, 0xa
0x0000ff3e      83e101         and ecx, 1
0x0000ff41      69c900ca9a3b   imul ecx, ecx, 0x3b9aca00
0x0000ff47      038c24e00000.  add ecx, dword [rsp + 0xe0]
0x0000ff4e      89c8           mov eax, ecx
0x0000ff50      99             cdq
0x0000ff51      f7fe           idiv esi
0x0000ff53      85d2           test edx, edx
0x0000ff55      0f85ca010000   jne 0x10125
0x0000ff5b      837c24200a     cmp dword [rsp + 0x20], 0xa
0x0000ff60      743b           je 0xff9d
0x0000ff62      41b809000000   mov r8d, 9
0x0000ff68      be0a000000     mov esi, 0xa
0x0000ff6d      bf0a000000     mov edi, 0xa
0x0000ff72      eb09           jmp 0xff7d
0x0000ff74      6bf60a         imul esi, esi, 0xa
0x0000ff77      3b742420       cmp esi, dword [rsp + 0x20]
0x0000ff7b      7420           je 0xff9d
0x0000ff7d      89c8           mov eax, ecx
0x0000ff7f      99             cdq
0x0000ff80      f7ff           idiv edi
0x0000ff82      99             cdq
0x0000ff83      89c1           mov ecx, eax
0x0000ff85      f7ff           idiv edi
0x0000ff87      85d2           test edx, edx
0x0000ff89      0f858d010000   jne 0x1011c
0x0000ff8f      4183e801       sub r8d, 1
0x0000ff93      75df           jne 0xff74
0x0000ff95      c74424200094.  mov dword [rsp + 0x20], 0x77359400      ; [0x77359400:4]=-1
0x0000ff9d      8b742420       mov esi, dword [rsp + 0x20]
0x0000ffa1      31c0           xor eax, eax
0x0000ffa3      81fe00943577   cmp esi, 0x77359400
0x0000ffa9      89f3           mov ebx, esi
0x0000ffab      0f94c0         sete al
0x0000ffae      f7d0           not eax
0x0000ffb0      4898           cdqe
0x0000ffb2      4921c4         and r12, rax
0x0000ffb5      4489c8         mov eax, r9d
0x0000ffb8      4589e9         mov r9d, r13d
0x0000ffbb      99             cdq
0x0000ffbc      f7fe           idiv esi
0x0000ffbe      4129d1         sub r9d, edx
0x0000ffc1      0f1f80000000.  nop dword [rax]
0x0000ffc8      488b442410     mov rax, qword [rsp + 0x10]
0x0000ffcd      895808         mov dword [rax + 8], ebx
0x0000ffd0      c6400c01       mov byte [rax + 0xc], 1
0x0000ffd4      e9fffaffff     jmp 0xfad8
0x0000ffd9      0f1f80000000.  nop dword [rax]
0x0000ffe0      4c8b05e19f20.  mov r8, qword [reloc.free]              ; [0x219fc8:8]=0
0x0000ffe7      488d15a2f9ff.  lea rdx, sym.dev_info_hash              ; 0xf990 ; "H\x8b\a1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f@"
0x0000ffee      488d0dabf9ff.  lea rcx, sym.dev_info_compare           ; 0xf9a0 ; "H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x0000fff5      4889742420     mov qword [rsp + 0x20], rsi
0x0000fffa      bf10000000     mov edi, 0x10
0x0000ffff      31f6           xor esi, esi
0x00010001      4489542418     mov dword [rsp + 0x18], r10d
0x00010006      44896c2410     mov dword [rsp + 0x10], r13d
0x0001000b      e8c0c3ffff     call sym.hash_initialize
0x00010010      4885c0         test rax, rax
0x00010013      4889c2         mov rdx, rax
0x00010016      488905e3a620.  mov qword [obj.ht.5307], rax            ; [0x21a700:8]=0
0x0001001d      448b4c2410     mov r9d, dword [rsp + 0x10]
0x00010022      448b542418     mov r10d, dword [rsp + 0x18]
0x00010027      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x0001002c      0f8517faffff   jne 0xfa49
0x00010032      488d4c2450     lea rcx, [rsp + 0x50]
0x00010037      e9b4fbffff     jmp 0xfbf0
0x0001003c      0f1f4000       nop dword [rax]
0x00010040      48c705ada620.  mov qword [obj.new_dst_res.5308], 0     ; [0x21a6f8:8]=0
0x0001004b      e951faffff     jmp 0xfaa1
0x00010050      81fd00943577   cmp ebp, 0x77359400
0x00010056      4c8b642420     mov r12, qword [rsp + 0x20]
0x0001005b      488b742410     mov rsi, qword [rsp + 0x10]
0x00010060      0f94442408     sete byte [rsp + 8]
0x00010065      0fb6442408     movzx eax, byte [rsp + 8]
0x0001006a      44894c2420     mov dword [rsp + 0x20], r9d
0x0001006f      4c8b742440     mov r14, qword [rsp + 0x40]
0x00010074      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00010079      896e08         mov dword [rsi + 8], ebp
0x0001007c      f7d0           not eax
0x0001007e      4898           cdqe
0x00010080      4c21e0         and rax, r12
0x00010083      e98bfdffff     jmp 0xfe13
0x00010088      c74008009435.  mov dword [rax + 8], 0x77359400         ; [0x77359400:4]=-1
0x0001008f      4c89e0         mov rax, r12
0x00010092      c644240801     mov byte [rsp + 8], 1
0x00010097      4883e0fe       and rax, 0xfffffffffffffffe
0x0001009b      c74424200094.  mov dword [rsp + 0x20], 0x77359400      ; [0x77359400:4]=-1
0x000100a3      e96bfdffff     jmp 0xfe13
0x000100a8      488b442410     mov rax, qword [rsp + 0x10]
0x000100ad      c74424200a00.  mov dword [rsp + 0x20], 0xa
0x000100b5      c740080a0000.  mov dword [rax + 8], 0xa
0x000100bc      4c89e0         mov rax, r12
0x000100bf      e94ffdffff     jmp 0xfe13
0x000100c4      488b442410     mov rax, qword [rsp + 0x10]
0x000100c9      c740080a0000.  mov dword [rax + 8], 0xa
0x000100d0      4c89e0         mov rax, r12
0x000100d3      e93bfdffff     jmp 0xfe13
0x000100d8      e85328ffff     call sym.imp.__stack_chk_fail
0x000100dd      4889542478     mov qword [rsp + 0x78], rdx
0x000100e2      b900010000     mov ecx, 0x100
0x000100e7      4889ea         mov rdx, rbp
0x000100ea      4c89de         mov rsi, r11
0x000100ed      4489d7         mov edi, r10d
0x000100f0      4489442408     mov dword [rsp + 8], r8d
0x000100f5      44894c2438     mov dword [rsp + 0x38], r9d
0x000100fa      4c89742470     mov qword [rsp + 0x70], r14
0x000100ff      e84c26ffff     call sym.imp.utimensat
0x00010104      448b442408     mov r8d, dword [rsp + 8]
0x00010109      448b4c2438     mov r9d, dword [rsp + 0x38]
0x0001010e      4585c0         test r8d, r8d
0x00010111      0f85aafdffff   jne 0xfec1
0x00010117      e916feffff     jmp 0xff32
0x0001011c      89742420       mov dword [rsp + 0x20], esi
0x00010120      e978feffff     jmp 0xff9d
0x00010125      895c2420       mov dword [rsp + 0x20], ebx
0x00010129      e96ffeffff     jmp 0xff9d
0x0001012e      6690           nop
;-- utimecmp:
0x00010130      4189c8         mov r8d, ecx
0x00010133      4889d1         mov rcx, rdx
0x00010136      4889f2         mov rdx, rsi
0x00010139      4889fe         mov rsi, rdi
0x0001013c      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x00010141      e96af8ffff     jmp sym.utimecmpat
0x00010146      662e0f1f8400.  nop word cs:[rax + rax]
;-- update_timespec:
0x00010150      55             push rbp                                ; ../coreutils-8.31/lib/utimens.c:134
0x00010151      53             push rbx
0x00010152      4889fd         mov rbp, rdi
0x00010155      4883ec18       sub rsp, 0x18
0x00010159      488b1e         mov rbx, qword [rsi]                    ; ../coreutils-8.31/lib/utimens.c:135
0x0001015c      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/utimens.c:136
0x00010160      488b5318       mov rdx, qword [rbx + 0x18]
0x00010164      483dfeffff3f   cmp rax, 0x3ffffffe
0x0001016a      7464           je 0x101d0
0x0001016c      483dffffff3f   cmp rax, 0x3fffffff                     ; ../coreutils-8.31/lib/utimens.c:139
0x00010172      741c           je 0x10190
0x00010174      4881fafeffff.  cmp rdx, 0x3ffffffe                     ; ../coreutils-8.31/lib/utimens.c:151
0x0001017b      7431           je 0x101ae
0x0001017d      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/utimens.c:156
0x0001017f      4881faffffff.  cmp rdx, 0x3fffffff                     ; ../coreutils-8.31/lib/utimens.c:153
0x00010186      7470           je 0x101f8
0x00010188      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/utimens.c:157
0x0001018c      5b             pop rbx
0x0001018d      5d             pop rbp
0x0001018e      c3             ret
0x0001018f      90             nop
0x00010190      4881faffffff.  cmp rdx, 0x3fffffff                     ; ../coreutils-8.31/lib/utimens.c:140
0x00010197      747f           je 0x10218
0x00010199      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/utimens.c:149
0x0001019c      e89f140000     call sym.gettime
0x000101a1      488b5318       mov rdx, qword [rbx + 0x18]
0x000101a5      4881fafeffff.  cmp rdx, 0x3ffffffe                     ; ../coreutils-8.31/lib/utimens.c:151
0x000101ac      75cf           jne 0x1017d
0x000101ae      488b4560       mov rax, qword [rbp + 0x60]
0x000101b2      488b5558       mov rdx, qword [rbp + 0x58]
0x000101b6      48894318       mov qword [rbx + 0x18], rax             ; ../coreutils-8.31/lib/utimens.c:152
0x000101ba      48895310       mov qword [rbx + 0x10], rdx
0x000101be      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/utimens.c:157
0x000101c2      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/utimens.c:156
0x000101c4      5b             pop rbx                                 ; ../coreutils-8.31/lib/utimens.c:157
0x000101c5      5d             pop rbp
0x000101c6      c3             ret
0x000101c7      660f1f840000.  nop word [rax + rax]
0x000101d0      4881fafeffff.  cmp rdx, 0x3ffffffe                     ; ../coreutils-8.31/lib/utimens.c:137
0x000101d7      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/utimens.c:138
0x000101dc      74aa           je 0x10188                              ; ../coreutils-8.31/lib/utimens.c:137
0x000101de      488b4750       mov rax, qword [rdi + 0x50]
0x000101e2      488b4f48       mov rcx, qword [rdi + 0x48]
0x000101e6      48894308       mov qword [rbx + 8], rax                ; ../coreutils-8.31/lib/utimens.c:147
0x000101ea      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/utimens.c:156
0x000101ec      4881faffffff.  cmp rdx, 0x3fffffff                     ; ../coreutils-8.31/lib/utimens.c:153
0x000101f3      48890b         mov qword [rbx], rcx                    ; ../coreutils-8.31/lib/utimens.c:147
0x000101f6      7590           jne 0x10188                             ; ../coreutils-8.31/lib/utimens.c:153
0x000101f8      488d7b10       lea rdi, [rbx + 0x10]                   ; ../coreutils-8.31/lib/utimens.c:154
0x000101fc      8844240f       mov byte [rsp + 0xf], al
0x00010200      e83b140000     call sym.gettime
0x00010205      0fb644240f     movzx eax, byte [rsp + 0xf]
0x0001020a      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/utimens.c:157
0x0001020e      5b             pop rbx
0x0001020f      5d             pop rbp
0x00010210      c3             ret
0x00010211      0f1f80000000.  nop dword [rax]
0x00010218      48c706000000.  mov qword [rsi], 0                      ; ../coreutils-8.31/lib/utimens.c:142
0x0001021f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/utimens.c:143
0x00010221      e962ffffff     jmp 0x10188
0x00010226      662e0f1f8400.  nop word cs:[rax + rax]
;-- validate_timespec:
0x00010230      4c8b4f08       mov r9, qword [rdi + 8]                 ; ../coreutils-8.31/lib/utimens.c:88
0x00010234      498d89020000.  lea rcx, [r9 - 0x3ffffffe]              ; ../coreutils-8.31/lib/utimens.c:93
0x0001023b      4883f901       cmp rcx, 1                              ; ../coreutils-8.31/lib/utimens.c:91
0x0001023f      7609           jbe 0x1024a
0x00010241      4981f9ffc99a.  cmp r9, 0x3b9ac9ff
0x00010248      7776           ja 0x102c0
0x0001024a      488b5718       mov rdx, qword [rdi + 0x18]             ; ../coreutils-8.31/lib/utimens.c:95
0x0001024e      4c8d82020000.  lea r8, [rdx - 0x3ffffffe]              ; ../coreutils-8.31/lib/utimens.c:97
0x00010255      4983f801       cmp r8, 1                               ; ../coreutils-8.31/lib/utimens.c:95
0x00010259      7609           jbe 0x10264
0x0001025b      4881faffc99a.  cmp rdx, 0x3b9ac9ff
0x00010262      775c           ja 0x102c0
0x00010264      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/utimens.c:90
0x00010266      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/utimens.c:89
0x00010269      4883f901       cmp rcx, 1                              ; ../coreutils-8.31/lib/utimens.c:107
0x0001026d      771a           ja 0x10289
0x0001026f      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/utimens.c:112
0x00010271      4981f9feffff.  cmp r9, 0x3ffffffe
0x00010278      48c707000000.  mov qword [rdi], 0                      ; ../coreutils-8.31/lib/utimens.c:110
0x0001027f      400f94c6       sete sil                                ; ../coreutils-8.31/lib/utimens.c:112
0x00010283      41ba01000000   mov r10d, 1                             ; ../coreutils-8.31/lib/utimens.c:111
0x00010289      4983f801       cmp r8, 1                               ; ../coreutils-8.31/lib/utimens.c:115
0x0001028d      771c           ja 0x102ab
0x0001028f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/utimens.c:121
0x00010291      4881fafeffff.  cmp rdx, 0x3ffffffe
0x00010298      48c747100000.  mov qword [rdi + 0x10], 0               ; ../coreutils-8.31/lib/utimens.c:118
0x000102a0      0f94c0         sete al                                 ; ../coreutils-8.31/lib/utimens.c:121
0x000102a3      41ba01000000   mov r10d, 1                             ; ../coreutils-8.31/lib/utimens.c:119
0x000102a9      01c6           add esi, eax                            ; ../coreutils-8.31/lib/utimens.c:121
0x000102ab      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/utimens.c:123
0x000102ad      83fe01         cmp esi, 1
0x000102b0      0f94c0         sete al
0x000102b3      4401d0         add eax, r10d
0x000102b6      c3             ret                                     ; ../coreutils-8.31/lib/utimens.c:124
0x000102b7      660f1f840000.  nop word [rax + rax]
0x000102c0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/utimens.c:88
0x000102c4      e8a724ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/utimens.c:100
0x000102c9      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x36d00000
0x000102cf      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000102d4      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/utimens.c:124
0x000102d8      c3             ret
0x000102d9      0f1f80000000.  nop dword [rax]
;-- lutimensat:
0x000102e0      b900010000     mov ecx, 0x100                          ; ../coreutils-8.31/lib/utimens.h:43
0x000102e5      e96624ffff     jmp sym.imp.utimensat
0x000102ea      660f1f440000   nop word [rax + rax]
;-- fdutimens:
0x000102f0      4156           push r14
0x000102f2      4155           push r13
0x000102f4      4154           push r12
0x000102f6      55             push rbp
0x000102f7      4989f4         mov r12, rsi
0x000102fa      53             push rbx
0x000102fb      89fb           mov ebx, edi
0x000102fd      4881ec100100.  sub rsp, 0x110
0x00010304      64488b042528.  mov rax, qword fs:[0x28]
0x0001030d      488984240801.  mov qword [rsp + 0x108], rax
0x00010315      31c0           xor eax, eax
0x00010317      4885d2         test rdx, rdx
0x0001031a      0f84c0020000   je 0x105e0
0x00010320      f30f6f02       movdqu xmm0, xmmword [rdx]              ; ../coreutils-8.31/lib/utimens.c:53
0x00010324      488d7c2410     lea rdi, [rsp + 0x10]
0x00010329      0f29442410     movaps xmmword [rsp + 0x10], xmm0       ; ../coreutils-8.31/lib/utimens.c:61
0x0001032e      48897c2408     mov qword [rsp + 8], rdi
0x00010333      f30f6f4210     movdqu xmm0, xmmword [rdx + 0x10]
0x00010338      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0001033d      e8eefeffff     call sym.validate_timespec
0x00010342      85c0           test eax, eax
0x00010344      4189c5         mov r13d, eax
0x00010347      0f88b6030000   js 0x10703
0x0001034d      85db           test ebx, ebx
0x0001034f      7909           jns 0x1035a                             ; ../coreutils-8.31/lib/utimens.c:119
0x00010351      4d85e4         test r12, r12
0x00010354      0f849e030000   je 0x106f8
0x0001035a      8b05aca32000   mov eax, dword [obj.utimensat_works_really] ; [0x21a70c:4]=0
0x00010360      85c0           test eax, eax
0x00010362      7834           js 0x10398
0x00010364      4183fd02       cmp r13d, 2
0x00010368      0f8402020000   je 0x10570
0x0001036e      488b742408     mov rsi, qword [rsp + 8]
0x00010373      85db           test ebx, ebx
0x00010375      0f8825030000   js 0x106a0
0x0001037b      89df           mov edi, ebx
0x0001037d      e8ae29ffff     call sym.imp.futimens
0x00010382      83f800         cmp eax, 0
0x00010385      89c5           mov ebp, eax
0x00010387      0f8e30030000   jle 0x106bd
0x0001038d      e8de23ffff     call sym.imp.__errno_location
0x00010392      c70026000000   mov dword [rax], 0x26                   ; ../coreutils-8.31/lib/utimens.c:84 ; '&'
                                                                       ; [0x26:4]=0x54c80000
0x00010398      4585ed         test r13d, r13d
0x0001039b      c70567a32000.  mov dword [obj.utimensat_works_really], 0xffffffff ; [0x21a70c:4]=0
0x000103a5      c70559a32000.  mov dword [obj.lutimensat_works_really], 0xffffffff ; [0x21a708:4]=0
0x000103af      0f855b010000   jne 0x10510
0x000103b5      488b742408     mov rsi, qword [rsp + 8]
0x000103ba      4885f6         test rsi, rsi
0x000103bd      0f848d020000   je 0x10650
0x000103c3      488b06         mov rax, qword [rsi]
0x000103c6      488b7e08       mov rdi, qword [rsi + 8]
0x000103ca      48b9cff753e3.  movabs rcx, 0x20c49ba5e353f7cf
0x000103d4      4c8d6c2430     lea r13, [rsp + 0x30]
0x000103d9      4889442430     mov qword [rsp + 0x30], rax
0x000103de      4889f8         mov rax, rdi
0x000103e1      48c1ff3f       sar rdi, 0x3f
0x000103e5      48f7e9         imul rcx
0x000103e8      488b4610       mov rax, qword [rsi + 0x10]
0x000103ec      488b7618       mov rsi, qword [rsi + 0x18]
0x000103f0      4889442440     mov qword [rsp + 0x40], rax
0x000103f5      4889f0         mov rax, rsi
0x000103f8      48c1fe3f       sar rsi, 0x3f
0x000103fc      48c1fa07       sar rdx, 7
0x00010400      4829fa         sub rdx, rdi
0x00010403      4889542438     mov qword [rsp + 0x38], rdx
0x00010408      48f7e9         imul rcx
0x0001040b      4889d1         mov rcx, rdx
0x0001040e      48c1f907       sar rcx, 7
0x00010412      4829f1         sub rcx, rsi
0x00010415      48894c2448     mov qword [rsp + 0x48], rcx
0x0001041a      85db           test ebx, ebx
0x0001041c      4c89ea         mov rdx, r13                            ; ../coreutils-8.31/lib/utimens.c:128
0x0001041f      0f88d3010000   js 0x105f8
0x00010425      31f6           xor esi, esi
0x00010427      89df           mov edi, ebx
0x00010429      e8c229ffff     call sym.imp.futimesat
0x0001042e      85c0           test eax, eax
0x00010430      89c5           mov ebp, eax
0x00010432      0f85f8010000   jne 0x10630
0x00010438      4d85ed         test r13, r13
0x0001043b      0f84c6010000   je 0x10607
0x00010441      49817d081fa1.  cmp qword [r13 + 8], 0x7a11f
0x00010449      410f9fc4       setg r12b
0x0001044d      49817d181fa1.  cmp qword [r13 + 0x18], 0x7a11f
0x00010455      410f9fc6       setg r14b
0x00010459      4584e4         test r12b, r12b
0x0001045c      7509           jne 0x10467
0x0001045e      4584f6         test r14b, r14b
0x00010461      0f84a0010000   je 0x10607
0x00010467      488d542470     lea rdx, [rsp + 0x70]                   ; ../coreutils-8.31/lib/utimens.c:138
0x0001046c      89de           mov esi, ebx
0x0001046e      bf01000000     mov edi, 1
0x00010473      e87827ffff     call sym.imp.__fxstat
0x00010478      85c0           test eax, eax
0x0001047a      0f8587010000   jne 0x10607
0x00010480      488b9424c800.  mov rdx, qword [rsp + 0xc8]             ; ../coreutils-8.31/lib/utimens.c:139
0x00010488      492b5510       sub rdx, qword [r13 + 0x10]
0x0001048c      488b8424b800.  mov rax, qword [rsp + 0xb8]
0x00010494      492b4500       sub rax, qword [r13]
0x00010498      66410f6f4500   movdqa xmm0, xmmword [r13]
0x0001049e      4883fa01       cmp rdx, 1
0x000104a2      0f94c2         sete dl
0x000104a5      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x000104aa      4121d6         and r14d, edx
0x000104ad      4883f801       cmp rax, 1
0x000104b1      66410f6f4510   movdqa xmm0, xmmword [r13 + 0x10]
0x000104b7      0f29442460     movaps xmmword [rsp + 0x60], xmm0
0x000104bc      0f854e020000   jne 0x10710
0x000104c2      4584e4         test r12b, r12b
0x000104c5      0f8445020000   je 0x10710
0x000104cb      4883bc24c000.  cmp qword [rsp + 0xc0], 0
0x000104d4      0f8536020000   jne 0x10710                             ; ../coreutils-8.31/lib/utimens.c:156
0x000104da      4584f6         test r14b, r14b
0x000104dd      48c744245800.  mov qword [rsp + 0x58], 0
0x000104e6      740f           je 0x104f7
0x000104e8      4883bc24d000.  cmp qword [rsp + 0xd0], 0
0x000104f1      0f8431020000   je 0x10728
0x000104f7      488d542450     lea rdx, [rsp + 0x50]
0x000104fc      31f6           xor esi, esi
0x000104fe      89df           mov edi, ebx
0x00010500      e8eb28ffff     call sym.imp.futimesat
0x00010505      31ed           xor ebp, ebp
0x00010507      e9fb000000     jmp 0x10607
0x0001050c      0f1f4000       nop dword [rax]
0x00010510      4183fd03       cmp r13d, 3
0x00010514      7426           je 0x1053c
0x00010516      85db           test ebx, ebx
0x00010518      488d542470     lea rdx, [rsp + 0x70]
0x0001051d      0f883d010000   js 0x10660
0x00010523      89de           mov esi, ebx
0x00010525      bf01000000     mov edi, 1
0x0001052a      e8c126ffff     call sym.imp.__fxstat
0x0001052f      85c0           test eax, eax
0x00010531      0f95c0         setne al
0x00010534      84c0           test al, al
0x00010536      0f85c7010000   jne 0x10703
0x0001053c      48837c240800   cmp qword [rsp + 8], 0
0x00010542      0f8408010000   je 0x10650
0x00010548      488d742408     lea rsi, [rsp + 8]
0x0001054d      488d7c2470     lea rdi, [rsp + 0x70]
0x00010552      31ed           xor ebp, ebp
0x00010554      e8f7fbffff     call sym.update_timespec
0x00010559      84c0           test al, al
0x0001055b      0f8454feffff   je 0x103b5
0x00010561      e9a1000000     jmp 0x10607
0x00010566      662e0f1f8400.  nop word cs:[rax + rax]
0x00010570      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/utimens.c:-324
0x00010572      488d542470     lea rdx, [rsp + 0x70]
0x00010577      0f8803010000   js 0x10680
0x0001057d      89de           mov esi, ebx
0x0001057f      bf01000000     mov edi, 1
0x00010584      e86726ffff     call sym.imp.__fxstat
0x00010589      85c0           test eax, eax
0x0001058b      0f95c0         setne al
0x0001058e      84c0           test al, al
0x00010590      0f856d010000   jne 0x10703
0x00010596      488b742408     mov rsi, qword [rsp + 8]
0x0001059b      48817e08feff.  cmp qword [rsi + 8], 0x3ffffffe
0x000105a3      0f8427010000   je 0x106d0
0x000105a9      48817e18feff.  cmp qword [rsi + 0x18], 0x3ffffffe
0x000105b1      41bd03000000   mov r13d, 3
0x000105b7      0f85b6fdffff   jne 0x10373
0x000105bd      488b8424d000.  mov rax, qword [rsp + 0xd0]
0x000105c5      488b9424c800.  mov rdx, qword [rsp + 0xc8]
0x000105cd      48894618       mov qword [rsi + 0x18], rax
0x000105d1      48895610       mov qword [rsi + 0x10], rdx
0x000105d5      e999fdffff     jmp 0x10373
0x000105da      660f1f440000   nop word [rax + rax]
0x000105e0      48c744240800.  mov qword [rsp + 8], 0
0x000105e9      4531ed         xor r13d, r13d
0x000105ec      e95cfdffff     jmp 0x1034d
0x000105f1      0f1f80000000.  nop dword [rax]
0x000105f8      4c89e6         mov rsi, r12
0x000105fb      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x00010600      e8eb27ffff     call sym.imp.futimesat
0x00010605      89c5           mov ebp, eax
0x00010607      488b8c240801.  mov rcx, qword [rsp + 0x108]
0x0001060f      6448330c2528.  xor rcx, qword fs:[0x28]
0x00010618      89e8           mov eax, ebp                            ; stat.h:-211
0x0001061a      0f8516010000   jne 0x10736
0x00010620      4881c4100100.  add rsp, 0x110
0x00010627      5b             pop rbx
0x00010628      5d             pop rbp
0x00010629      415c           pop r12
0x0001062b      415d           pop r13
0x0001062d      415e           pop r14
0x0001062f      c3             ret
0x00010630      4d85e4         test r12, r12
0x00010633      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x00010638      74cd           je 0x10607
0x0001063a      4c89ee         mov rsi, r13
0x0001063d      4c89e7         mov rdi, r12
0x00010640      e87b24ffff     call sym.imp.utimes
0x00010645      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/utimens.c:-541
0x00010647      ebbe           jmp 0x10607
0x00010649      0f1f80000000.  nop dword [rax]
0x00010650      4531ed         xor r13d, r13d
0x00010653      e9c2fdffff     jmp 0x1041a
0x00010658      0f1f84000000.  nop dword [rax + rax]
0x00010660      4c89e6         mov rsi, r12
0x00010663      bf01000000     mov edi, 1
0x00010668      e83325ffff     call sym.imp.__xstat
0x0001066d      85c0           test eax, eax
0x0001066f      0f95c0         setne al
0x00010672      e9bdfeffff     jmp 0x10534
0x00010677      660f1f840000.  nop word [rax + rax]
0x00010680      4c89e6         mov rsi, r12
0x00010683      bf01000000     mov edi, 1
0x00010688      e81325ffff     call sym.imp.__xstat
0x0001068d      85c0           test eax, eax
0x0001068f      0f95c0         setne al
0x00010692      e9f7feffff     jmp 0x1058e
0x00010697      660f1f840000.  nop word [rax + rax]
0x000106a0      31c9           xor ecx, ecx
0x000106a2      4889f2         mov rdx, rsi
0x000106a5      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x000106aa      4c89e6         mov rsi, r12
0x000106ad      e89e20ffff     call sym.imp.utimensat
0x000106b2      83f800         cmp eax, 0
0x000106b5      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/utimens.c:-337
0x000106b7      0f8fd0fcffff   jg 0x1038d
0x000106bd      757c           jne 0x1073b
0x000106bf      c70543a02000.  mov dword [obj.utimensat_works_really], 1 ; [0x21a70c:4]=0
0x000106c9      e939ffffff     jmp 0x10607
0x000106ce      6690           nop
0x000106d0      488b8424c000.  mov rax, qword [rsp + 0xc0]
0x000106d8      488b9424b800.  mov rdx, qword [rsp + 0xb8]
0x000106e0      41bd03000000   mov r13d, 3
0x000106e6      488916         mov qword [rsi], rdx
0x000106e9      48894608       mov qword [rsi + 8], rax
0x000106ed      e981fcffff     jmp 0x10373
0x000106f2      660f1f440000   nop word [rax + rax]
0x000106f8      e87320ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/utimens.c:-283
0x000106fd      c70009000000   mov dword [rax], 9
0x00010703      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x00010708      e9fafeffff     jmp 0x10607
0x0001070d      0f1f00         nop dword [rax]
0x00010710      4584f6         test r14b, r14b
0x00010713      0f84ecfdffff   je 0x10505                              ; ../coreutils-8.31/lib/utimens.c:-274
0x00010719      4883bc24d000.  cmp qword [rsp + 0xd0], 0
0x00010722      0f85ddfdffff   jne 0x10505
0x00010728      48c744246800.  mov qword [rsp + 0x68], 0
0x00010731      e9c1fdffff     jmp 0x104f7
0x00010736      e8f521ffff     call sym.imp.__stack_chk_fail
0x0001073b      e83020ffff     call sym.imp.__errno_location
0x00010740      833826         cmp dword [rax], 0x26
0x00010743      0f8576ffffff   jne 0x106bf
0x00010749      e94afcffff     jmp 0x10398
0x0001074e      6690           nop
;-- utimens:
0x00010750      4889f2         mov rdx, rsi
0x00010753      4889fe         mov rsi, rdi                            ; ../coreutils-8.31/lib/utimens.c:-264
0x00010756      bfffffffff     mov edi, 0xffffffff                     ; -1
0x0001075b      e990fbffff     jmp sym.fdutimens                       ; ../coreutils-8.31/lib/utimens.c:-253
;-- lutimens:
0x00010760      4154           push r12
0x00010762      55             push rbp
0x00010763      4989fc         mov r12, rdi
0x00010766      53             push rbx
0x00010767      4881ecd00000.  sub rsp, 0xd0
0x0001076e      64488b042528.  mov rax, qword fs:[0x28]
0x00010777      48898424c800.  mov qword [rsp + 0xc8], rax
0x0001077f      31c0           xor eax, eax
0x00010781      4885f6         test rsi, rsi
0x00010784      0f84f6000000   je 0x10880
0x0001078a      f30f6f06       movdqu xmm0, xmmword [rsi]              ; ../coreutils-8.31/lib/utimens.c:-216
0x0001078e      488d7c2410     lea rdi, [rsp + 0x10]
0x00010793      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00010798      48897c2408     mov qword [rsp + 8], rdi
0x0001079d      f30f6f4610     movdqu xmm0, xmmword [rsi + 0x10]       ; ../coreutils-8.31/lib/utimens.c:-206
0x000107a2      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000107a7      e884faffff     call sym.validate_timespec              ; ../coreutils-8.31/lib/utimens.c:-199
0x000107ac      85c0           test eax, eax
0x000107ae      89c3           mov ebx, eax
0x000107b0      0f880a010000   js 0x108c0
0x000107b6      8b054c9f2000   mov eax, dword [obj.lutimensat_works_really] ; ../coreutils-8.31/lib/utimens.c:-195 ; [0x21a708:4]=0
0x000107bc      85c0           test eax, eax
0x000107be      7836           js 0x107f6
0x000107c0      83fb02         cmp ebx, 2
0x000107c3      0f8427010000   je 0x108f0
0x000107c9      488b542408     mov rdx, qword [rsp + 8]
0x000107ce      b900010000     mov ecx, 0x100
0x000107d3      4c89e6         mov rsi, r12
0x000107d6      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x000107db      e8701fffff     call sym.imp.utimensat
0x000107e0      83f800         cmp eax, 0
0x000107e3      89c5           mov ebp, eax
0x000107e5      0f8ee5000000   jle 0x108d0
0x000107eb      e8801fffff     call sym.imp.__errno_location
0x000107f0      c70026000000   mov dword [rax], 0x26                   ; '&'
                                                                       ; [0x26:4]=0x54c80000
0x000107f6      85db           test ebx, ebx
0x000107f8      c705069f2000.  mov dword [obj.lutimensat_works_really], 0xffffffff ; [0x21a708:4]=0
0x00010802      0f849d000000   je 0x108a5
0x00010808      83fb03         cmp ebx, 3
0x0001080b      0f8537010000   jne 0x10948
0x00010811      48837c240800   cmp qword [rsp + 8], 0
0x00010817      7417           je 0x10830
0x00010819      488d742408     lea rsi, [rsp + 8]
0x0001081e      488d7c2430     lea rdi, [rsp + 0x30]
0x00010823      31ed           xor ebp, ebp
0x00010825      e826f9ffff     call sym.update_timespec                ; ../coreutils-8.31/lib/utimens.c:-253
0x0001082a      84c0           test al, al
0x0001082c      752a           jne 0x10858
0x0001082e      6690           nop
0x00010830      8b442448       mov eax, dword [rsp + 0x48]
0x00010834      2500f00000     and eax, 0xf000
0x00010839      3d00a00000     cmp eax, 0xa000
0x0001083e      0f8452010000   je 0x10996
0x00010844      488b542408     mov rdx, qword [rsp + 8]
0x00010849      4c89e6         mov rsi, r12
0x0001084c      bfffffffff     mov edi, 0xffffffff                     ; -1
0x00010851      e89afaffff     call sym.fdutimens
0x00010856      89c5           mov ebp, eax
0x00010858      488b8c24c800.  mov rcx, qword [rsp + 0xc8]
0x00010860      6448330c2528.  xor rcx, qword fs:[0x28]
0x00010869      89e8           mov eax, ebp
0x0001086b      0f8535010000   jne 0x109a6
0x00010871      4881c4d00000.  add rsp, 0xd0
0x00010878      5b             pop rbx
0x00010879      5d             pop rbp
0x0001087a      415c           pop r12
0x0001087c      c3             ret
0x0001087d      0f1f00         nop dword [rax]
0x00010880      8b0d829e2000   mov ecx, dword [obj.lutimensat_works_really] ; [0x21a708:4]=0
0x00010886      31d2           xor edx, edx
0x00010888      31db           xor ebx, ebx
0x0001088a      48c744240800.  mov qword [rsp + 8], 0
0x00010893      85c9           test ecx, ecx
0x00010895      0f8933ffffff   jns 0x107ce                             ; stat.h:-332
0x0001089b      c705639e2000.  mov dword [obj.lutimensat_works_really], 0xffffffff ; [0x21a708:4]=0
0x000108a5      488d542430     lea rdx, [rsp + 0x30]
0x000108aa      4c89e6         mov rsi, r12
0x000108ad      bf01000000     mov edi, 1
0x000108b2      e85920ffff     call sym.imp.__lxstat
0x000108b7      85c0           test eax, eax
0x000108b9      0f8471ffffff   je 0x10830
0x000108bf      90             nop
0x000108c0      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x000108c5      eb91           jmp 0x10858
0x000108c7      660f1f840000.  nop word [rax + rax]
0x000108d0      0f85d5000000   jne 0x109ab
0x000108d6      c7052c9e2000.  mov dword [obj.utimensat_works_really], 1 ; [0x21a70c:4]=0
0x000108e0      c7051e9e2000.  mov dword [obj.lutimensat_works_really], 1 ; [0x21a708:4]=0
0x000108ea      e969ffffff     jmp 0x10858
0x000108ef      90             nop
0x000108f0      488d542430     lea rdx, [rsp + 0x30]
0x000108f5      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/utimens.c:-323
0x000108f8      bf01000000     mov edi, 1
0x000108fd      e80e20ffff     call sym.imp.__lxstat
0x00010902      85c0           test eax, eax
0x00010904      75ba           jne 0x108c0
0x00010906      488b542408     mov rdx, qword [rsp + 8]
0x0001090b      48817a08feff.  cmp qword [rdx + 8], 0x3ffffffe
0x00010913      7463           je 0x10978                              ; ../coreutils-8.31/lib/utimens.c:-360
0x00010915      48817a18feff.  cmp qword [rdx + 0x18], 0x3ffffffe
0x0001091d      bb03000000     mov ebx, 3
0x00010922      0f85a6feffff   jne 0x107ce
0x00010928      488b84249000.  mov rax, qword [rsp + 0x90]
0x00010930      488b8c248800.  mov rcx, qword [rsp + 0x88]
0x00010938      48894218       mov qword [rdx + 0x18], rax
0x0001093c      48894a10       mov qword [rdx + 0x10], rcx
0x00010940      e989feffff     jmp 0x107ce
0x00010945      0f1f00         nop dword [rax]
0x00010948      488d542430     lea rdx, [rsp + 0x30]
0x0001094d      4c89e6         mov rsi, r12
0x00010950      bf01000000     mov edi, 1
0x00010955      e8b61fffff     call sym.imp.__lxstat
0x0001095a      85c0           test eax, eax
0x0001095c      0f855effffff   jne 0x108c0
0x00010962      48837c240800   cmp qword [rsp + 8], 0
0x00010968      0f85abfeffff   jne 0x10819
0x0001096e      e9bdfeffff     jmp 0x10830
0x00010973      0f1f440000     nop dword [rax + rax]
0x00010978      488b84248000.  mov rax, qword [rsp + 0x80]
0x00010980      488b4c2478     mov rcx, qword [rsp + 0x78]
0x00010985      bb03000000     mov ebx, 3
0x0001098a      48890a         mov qword [rdx], rcx
0x0001098d      48894208       mov qword [rdx + 8], rax
0x00010991      e938feffff     jmp 0x107ce
0x00010996      e8d51dffff     call sym.imp.__errno_location
0x0001099b      c70026000000   mov dword [rax], 0x26                   ; '&'
                                                                       ; [0x26:4]=0x54c80000
0x000109a1      e91affffff     jmp 0x108c0
0x000109a6      e8851fffff     call sym.imp.__stack_chk_fail
0x000109ab      e8c01dffff     call sym.imp.__errno_location
0x000109b0      833826         cmp dword [rax], 0x26
0x000109b3      0f851dffffff   jne 0x108d6
0x000109b9      e938feffff     jmp 0x107f6
0x000109be      6690           nop
;-- version_etc_arn:
0x000109c0      4157           push r15
0x000109c2      4156           push r14
0x000109c4      4155           push r13
0x000109c6      4154           push r12
0x000109c8      4d89cc         mov r12, r9
0x000109cb      55             push rbp
0x000109cc      53             push rbx
0x000109cd      4889fd         mov rbp, rdi
0x000109d0      4c89c3         mov rbx, r8
0x000109d3      4883ec28       sub rsp, 0x28
0x000109d7      4885f6         test rsi, rsi
0x000109da      0f8418010000   je 0x10af8
0x000109e0      4989d0         mov r8, rdx
0x000109e3      488d15d54e00.  lea rdx, str.s___s___s                  ; 0x158bf ; "%s (%s) %s\n"
0x000109ea      4989c9         mov r9, rcx
0x000109ed      31c0           xor eax, eax
0x000109ef      4889f1         mov rcx, rsi
0x000109f2      be01000000     mov esi, 1
0x000109f7      e8b423ffff     call sym.imp.__fprintf_chk
0x000109fc      488d35cf4e00.  lea rsi, [0x000158d2]                   ; "(C)"
0x00010a03      31ff           xor edi, edi
0x00010a05      ba05000000     mov edx, 5
0x00010a0a      e8d11effff     call sym.imp.dcgettext
0x00010a0f      488d15ca5100.  lea rdx, obj.version_etc_copyright      ; 0x15be0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00010a16      4889c1         mov rcx, rax
0x00010a19      41b8e3070000   mov r8d, 0x7e3
0x00010a1f      be01000000     mov esi, 1
0x00010a24      4889ef         mov rdi, rbp
0x00010a27      31c0           xor eax, eax
0x00010a29      e88223ffff     call sym.imp.__fprintf_chk
0x00010a2e      488d35234f00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x15958 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00010a35      31ff           xor edi, edi
0x00010a37      ba05000000     mov edx, 5
0x00010a3c      e89f1effff     call sym.imp.dcgettext
0x00010a41      4889ee         mov rsi, rbp
0x00010a44      4889c7         mov rdi, rax
0x00010a47      e86420ffff     call sym.imp.fputs_unlocked
0x00010a4c      4983fc09       cmp r12, 9
0x00010a50      0f873a030000   ja 0x10d90
0x00010a56      488d155b5100.  lea rdx, [0x00015bb8]
0x00010a5d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00010a61      4801d0         add rax, rdx
0x00010a64      ffe0           jmp rax
0x00010a66      662e0f1f8400.  nop word cs:[rax + rax]
0x00010a70      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00010a74      488b4310       mov rax, qword [rbx + 0x10]
0x00010a78      488d35495000.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x15ac8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00010a7f      4c8b4308       mov r8, qword [rbx + 8]
0x00010a83      ba05000000     mov edx, 5
0x00010a88      31ff           xor edi, edi
0x00010a8a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00010a8e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00010a92      4c894c2410     mov qword [rsp + 0x10], r9
0x00010a97      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00010a9b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00010a9f      48890424       mov qword [rsp], rax
0x00010aa3      4c89442408     mov qword [rsp + 8], r8
0x00010aa8      488b1b         mov rbx, qword [rbx]
0x00010aab      e8301effff     call sym.imp.dcgettext
0x00010ab0      4883ec08       sub rsp, 8
0x00010ab4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00010ab9      4889c2         mov rdx, rax
0x00010abc      4889d9         mov rcx, rbx
0x00010abf      be01000000     mov esi, 1
0x00010ac4      4889ef         mov rdi, rbp
0x00010ac7      31c0           xor eax, eax
0x00010ac9      4151           push r9
0x00010acb      4155           push r13
0x00010acd      4154           push r12
0x00010acf      4157           push r15
0x00010ad1      4156           push r14
0x00010ad3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00010ad8      4c8b442438     mov r8, qword [rsp + 0x38]
0x00010add      e8ce22ffff     call sym.imp.__fprintf_chk
0x00010ae2      4883c430       add rsp, 0x30
0x00010ae6      4883c428       add rsp, 0x28
0x00010aea      5b             pop rbx
0x00010aeb      5d             pop rbp
0x00010aec      415c           pop r12
0x00010aee      415d           pop r13
0x00010af0      415e           pop r14
0x00010af2      415f           pop r15
0x00010af4      c3             ret
0x00010af5      0f1f00         nop dword [rax]
0x00010af8      4989c8         mov r8, rcx
0x00010afb      4889d1         mov rcx, rdx
0x00010afe      488d15c64d00.  lea rdx, str.s__s                       ; 0x158cb ; "%s %s\n"
0x00010b05      be01000000     mov esi, 1
0x00010b0a      31c0           xor eax, eax
0x00010b0c      e89f22ffff     call sym.imp.__fprintf_chk
0x00010b11      e9e6feffff     jmp 0x109fc
0x00010b16      662e0f1f8400.  nop word cs:[rax + rax]
0x00010b20      4c8b5340       mov r10, qword [rbx + 0x40]
0x00010b24      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00010b28      488d35c94f00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x15af8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00010b2f      488b4310       mov rax, qword [rbx + 0x10]
0x00010b33      4c8b4308       mov r8, qword [rbx + 8]
0x00010b37      ba05000000     mov edx, 5
0x00010b3c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00010b40      4c8b6328       mov r12, qword [rbx + 0x28]
0x00010b44      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00010b48      4c8b7318       mov r14, qword [rbx + 0x18]
0x00010b4c      488b1b         mov rbx, qword [rbx]
0x00010b4f      4c89542418     mov qword [rsp + 0x18], r10
0x00010b54      4c894c2410     mov qword [rsp + 0x10], r9
0x00010b59      48890424       mov qword [rsp], rax
0x00010b5d      4c89442408     mov qword [rsp + 8], r8
0x00010b62      31ff           xor edi, edi
0x00010b64      e8771dffff     call sym.imp.dcgettext
0x00010b69      4c8b542418     mov r10, qword [rsp + 0x18]
0x00010b6e      4152           push r10
0x00010b70      e93fffffff     jmp 0x10ab4
0x00010b75      0f1f00         nop dword [rax]
0x00010b78      488b1b         mov rbx, qword [rbx]
0x00010b7b      488d35544d00.  lea rsi, str.Written_by__s.             ; 0x158d6 ; "Written by %s.\n"
0x00010b82      ba05000000     mov edx, 5
0x00010b87      31ff           xor edi, edi
0x00010b89      e8521dffff     call sym.imp.dcgettext
0x00010b8e      4883c428       add rsp, 0x28
0x00010b92      4889d9         mov rcx, rbx
0x00010b95      4889ef         mov rdi, rbp
0x00010b98      5b             pop rbx
0x00010b99      5d             pop rbp
0x00010b9a      415c           pop r12
0x00010b9c      415d           pop r13
0x00010b9e      415e           pop r14
0x00010ba0      415f           pop r15
0x00010ba2      4889c2         mov rdx, rax
0x00010ba5      be01000000     mov esi, 1
0x00010baa      31c0           xor eax, eax
0x00010bac      e9ff21ffff     jmp sym.imp.__fprintf_chk
0x00010bb1      0f1f80000000.  nop dword [rax]
0x00010bb8      4c8b6308       mov r12, qword [rbx + 8]
0x00010bbc      488d35234d00.  lea rsi, str.Written_by__s_and__s.      ; 0x158e6 ; "Written by %s and %s.\n"
0x00010bc3      488b1b         mov rbx, qword [rbx]
0x00010bc6      ba05000000     mov edx, 5
0x00010bcb      31ff           xor edi, edi
0x00010bcd      e80e1dffff     call sym.imp.dcgettext
0x00010bd2      4883c428       add rsp, 0x28
0x00010bd6      4d89e0         mov r8, r12
0x00010bd9      4889d9         mov rcx, rbx
0x00010bdc      4889ef         mov rdi, rbp
0x00010bdf      4889c2         mov rdx, rax
0x00010be2      be01000000     mov esi, 1
0x00010be7      5b             pop rbx
0x00010be8      5d             pop rbp
0x00010be9      415c           pop r12
0x00010beb      415d           pop r13
0x00010bed      415e           pop r14
0x00010bef      415f           pop r15
0x00010bf1      31c0           xor eax, eax
0x00010bf3      e9b821ffff     jmp sym.imp.__fprintf_chk
0x00010bf8      0f1f84000000.  nop dword [rax + rax]
0x00010c00      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00010c04      4c8b6308       mov r12, qword [rbx + 8]
0x00010c08      488d35ee4c00.  lea rsi, str.Written_by__s___s__and__s. ; 0x158fd ; "Written by %s, %s, and %s.\n"
0x00010c0f      488b1b         mov rbx, qword [rbx]
0x00010c12      ba05000000     mov edx, 5
0x00010c17      31ff           xor edi, edi
0x00010c19      e8c21cffff     call sym.imp.dcgettext
0x00010c1e      4883c428       add rsp, 0x28
0x00010c22      4d89e9         mov r9, r13
0x00010c25      4d89e0         mov r8, r12
0x00010c28      4889d9         mov rcx, rbx
0x00010c2b      4889ef         mov rdi, rbp
0x00010c2e      4889c2         mov rdx, rax
0x00010c31      5b             pop rbx
0x00010c32      5d             pop rbp
0x00010c33      415c           pop r12
0x00010c35      415d           pop r13
0x00010c37      415e           pop r14
0x00010c39      415f           pop r15
0x00010c3b      be01000000     mov esi, 1
0x00010c40      31c0           xor eax, eax
0x00010c42      e96921ffff     jmp sym.imp.__fprintf_chk
0x00010c47      660f1f840000.  nop word [rax + rax]
0x00010c50      488d35d14d00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x15a28 ; "Written by %s, %s, %s,\nand %s.\n"
0x00010c57      ba05000000     mov edx, 5
0x00010c5c      31ff           xor edi, edi
0x00010c5e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00010c62      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00010c66      4c8b6308       mov r12, qword [rbx + 8]
0x00010c6a      488b1b         mov rbx, qword [rbx]
0x00010c6d      e86e1cffff     call sym.imp.dcgettext
0x00010c72      4883ec08       sub rsp, 8
0x00010c76      4156           push r14
0x00010c78      4889c2         mov rdx, rax
0x00010c7b      4d89e9         mov r9, r13
0x00010c7e      4d89e0         mov r8, r12
0x00010c81      4889d9         mov rcx, rbx
0x00010c84      4889ef         mov rdi, rbp
0x00010c87      be01000000     mov esi, 1
0x00010c8c      31c0           xor eax, eax
0x00010c8e      e81d21ffff     call sym.imp.__fprintf_chk
0x00010c93      58             pop rax
0x00010c94      5a             pop rdx
0x00010c95      4883c428       add rsp, 0x28
0x00010c99      5b             pop rbx
0x00010c9a      5d             pop rbp
0x00010c9b      415c           pop r12
0x00010c9d      415d           pop r13
0x00010c9f      415e           pop r14
0x00010ca1      415f           pop r15
0x00010ca3      c3             ret
0x00010ca4      0f1f4000       nop dword [rax]
0x00010ca8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00010cac      488d35954d00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x15a48 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00010cb3      ba05000000     mov edx, 5
0x00010cb8      31ff           xor edi, edi
0x00010cba      4c8b7318       mov r14, qword [rbx + 0x18]
0x00010cbe      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00010cc2      4c8b6308       mov r12, qword [rbx + 8]
0x00010cc6      488b1b         mov rbx, qword [rbx]
0x00010cc9      e8121cffff     call sym.imp.dcgettext
0x00010cce      4157           push r15
0x00010cd0      eba4           jmp 0x10c76
0x00010cd2      660f1f440000   nop word [rax + rax]
0x00010cd8      4c8b4308       mov r8, qword [rbx + 8]
0x00010cdc      4c8b6328       mov r12, qword [rbx + 0x28]
0x00010ce0      488d35894d00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x15a70 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00010ce7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00010ceb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00010cef      ba05000000     mov edx, 5
0x00010cf4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00010cf8      31ff           xor edi, edi
0x00010cfa      488b1b         mov rbx, qword [rbx]
0x00010cfd      4c890424       mov qword [rsp], r8
0x00010d01      e8da1bffff     call sym.imp.dcgettext
0x00010d06      4883ec08       sub rsp, 8
0x00010d0a      4d89e9         mov r9, r13
0x00010d0d      4154           push r12
0x00010d0f      4157           push r15
0x00010d11      4156           push r14
0x00010d13      4c8b442420     mov r8, qword [rsp + 0x20]
0x00010d18      4889d9         mov rcx, rbx
0x00010d1b      4889c2         mov rdx, rax
0x00010d1e      4889ef         mov rdi, rbp
0x00010d21      be01000000     mov esi, 1
0x00010d26      31c0           xor eax, eax
0x00010d28      e88320ffff     call sym.imp.__fprintf_chk
0x00010d2d      4883c420       add rsp, 0x20
0x00010d31      4883c428       add rsp, 0x28
0x00010d35      5b             pop rbx
0x00010d36      5d             pop rbp
0x00010d37      415c           pop r12
0x00010d39      415d           pop r13
0x00010d3b      415e           pop r14
0x00010d3d      415f           pop r15
0x00010d3f      c3             ret
0x00010d40      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00010d44      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00010d48      488d35494d00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x15a98 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00010d4f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00010d53      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00010d57      ba05000000     mov edx, 5
0x00010d5c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00010d60      4c8b4308       mov r8, qword [rbx + 8]
0x00010d64      31ff           xor edi, edi
0x00010d66      4c894c2408     mov qword [rsp + 8], r9
0x00010d6b      488b1b         mov rbx, qword [rbx]
0x00010d6e      4c890424       mov qword [rsp], r8
0x00010d72      e8691bffff     call sym.imp.dcgettext
0x00010d77      4155           push r13
0x00010d79      4154           push r12
0x00010d7b      4157           push r15
0x00010d7d      4156           push r14
0x00010d7f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00010d84      eb8d           jmp 0x10d13
0x00010d86      662e0f1f8400.  nop word cs:[rax + rax]
0x00010d90      4c8b5340       mov r10, qword [rbx + 0x40]
0x00010d94      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00010d98      ba05000000     mov edx, 5
0x00010d9d      488b4310       mov rax, qword [rbx + 0x10]
0x00010da1      4c8b4308       mov r8, qword [rbx + 8]
0x00010da5      488d35844d00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x15b30 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00010dac      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00010db0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00010db4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00010db8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00010dbc      4c89542418     mov qword [rsp + 0x18], r10
0x00010dc1      4c894c2410     mov qword [rsp + 0x10], r9
0x00010dc6      48890424       mov qword [rsp], rax
0x00010dca      4c89442408     mov qword [rsp + 8], r8
0x00010dcf      488b1b         mov rbx, qword [rbx]
0x00010dd2      e98bfdffff     jmp 0x10b62
0x00010dd7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00010de0      4531c9         xor r9d, r9d
0x00010de3      49833800       cmp qword [r8], 0
0x00010de7      7412           je 0x10dfb
0x00010de9      0f1f80000000.  nop dword [rax]
0x00010df0      4983c101       add r9, 1
0x00010df4      4b833cc800     cmp qword [r8 + r9*8], 0
0x00010df9      75f5           jne 0x10df0
0x00010dfb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00010e00      4883ec68       sub rsp, 0x68
0x00010e04      4d89c2         mov r10, r8
0x00010e07      4531c9         xor r9d, r9d
0x00010e0a      64488b042528.  mov rax, qword fs:[0x28]
0x00010e13      4889442458     mov qword [rsp + 0x58], rax
0x00010e18      31c0           xor eax, eax
0x00010e1a      4989e0         mov r8, rsp
0x00010e1d      0f1f00         nop dword [rax]
0x00010e20      418b02         mov eax, dword [r10]
0x00010e23      83f82f         cmp eax, 0x2f
0x00010e26      7742           ja 0x10e6a
0x00010e28      4189c3         mov r11d, eax
0x00010e2b      4d035a10       add r11, qword [r10 + 0x10]
0x00010e2f      83c008         add eax, 8
0x00010e32      418902         mov dword [r10], eax
0x00010e35      498b03         mov rax, qword [r11]
0x00010e38      4885c0         test rax, rax
0x00010e3b      4b8904c8       mov qword [r8 + r9*8], rax
0x00010e3f      740a           je 0x10e4b
0x00010e41      4983c101       add r9, 1
0x00010e45      4983f90a       cmp r9, 0xa
0x00010e49      75d5           jne 0x10e20
0x00010e4b      e870fbffff     call sym.version_etc_arn
0x00010e50      488b442458     mov rax, qword [rsp + 0x58]
0x00010e55      644833042528.  xor rax, qword fs:[0x28]
0x00010e5e      7505           jne 0x10e65
0x00010e60      4883c468       add rsp, 0x68
0x00010e64      c3             ret
0x00010e65      e8c61affff     call sym.imp.__stack_chk_fail
0x00010e6a      4d8b5a08       mov r11, qword [r10 + 8]
0x00010e6e      498d4308       lea rax, [r11 + 8]
0x00010e72      49894208       mov qword [r10 + 8], rax
0x00010e76      ebbd           jmp 0x10e35
0x00010e78      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00010e80      55             push rbp
0x00010e81      53             push rbx
0x00010e82      41ba20000000   mov r10d, 0x20                          ; "@"
0x00010e88      4531db         xor r11d, r11d
0x00010e8b      4881ecb80000.  sub rsp, 0xb8
0x00010e92      64488b042528.  mov rax, qword fs:[0x28]
0x00010e9b      4889442478     mov qword [rsp + 0x78], rax
0x00010ea0      31c0           xor eax, eax
0x00010ea2      488d8424d000.  lea rax, [rsp + 0xd0]
0x00010eaa      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00010eb2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00010eba      4c8d442420     lea r8, [rsp + 0x20]
0x00010ebf      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00010ec7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00010ecf      4889442410     mov qword [rsp + 0x10], rax
0x00010ed4      488d84248000.  lea rax, [rsp + 0x80]
0x00010edc      4531c9         xor r9d, r9d
0x00010edf      4889442418     mov qword [rsp + 0x18], rax
0x00010ee4      4889c5         mov rbp, rax
0x00010ee7      660f1f840000.  nop word [rax + rax]
0x00010ef0      4183fa2f       cmp r10d, 0x2f
0x00010ef4      7756           ja 0x10f4c
0x00010ef6      4489d0         mov eax, r10d
0x00010ef9      41bb01000000   mov r11d, 1
0x00010eff      4183c208       add r10d, 8
0x00010f03      4801e8         add rax, rbp
0x00010f06      488b00         mov rax, qword [rax]
0x00010f09      4885c0         test rax, rax
0x00010f0c      4b8904c8       mov qword [r8 + r9*8], rax
0x00010f10      740a           je 0x10f1c
0x00010f12      4983c101       add r9, 1
0x00010f16      4983f90a       cmp r9, 0xa
0x00010f1a      75d4           jne 0x10ef0
0x00010f1c      4584db         test r11b, r11b
0x00010f1f      7524           jne 0x10f45
0x00010f21      e89afaffff     call sym.version_etc_arn
0x00010f26      488b442478     mov rax, qword [rsp + 0x78]
0x00010f2b      644833042528.  xor rax, qword fs:[0x28]
0x00010f34      750a           jne 0x10f40
0x00010f36      4881c4b80000.  add rsp, 0xb8
0x00010f3d      5b             pop rbx
0x00010f3e      5d             pop rbp
0x00010f3f      c3             ret
0x00010f40      e8eb19ffff     call sym.imp.__stack_chk_fail
0x00010f45      4489542408     mov dword [rsp + 8], r10d
0x00010f4a      ebd5           jmp 0x10f21
0x00010f4c      4889d8         mov rax, rbx
0x00010f4f      4883c308       add rbx, 8
0x00010f53      ebb1           jmp 0x10f06
0x00010f55      90             nop
0x00010f56      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00010f60      53             push rbx
0x00010f61      488d35b14900.  lea rsi, str.Report_bugs_to:__s         ; 0x15919 ; "\nReport bugs to: %s\n"
0x00010f68      ba05000000     mov edx, 5
0x00010f6d      31ff           xor edi, edi
0x00010f6f      e86c19ffff     call sym.imp.dcgettext
0x00010f74      488d15b34900.  lea rdx, str.bug_coreutils_gnu.org      ; 0x1592e ; "bug-coreutils@gnu.org"
0x00010f7b      4889c6         mov rsi, rax
0x00010f7e      bf01000000     mov edi, 1
0x00010f83      31c0           xor eax, eax
0x00010f85      e8d61cffff     call sym.imp.__printf_chk
0x00010f8a      488d35b34900.  lea rsi, str.s_home_page:___s           ; 0x15944 ; "%s home page: <%s>\n"
0x00010f91      ba05000000     mov edx, 5
0x00010f96      31ff           xor edi, edi
0x00010f98      e84319ffff     call sym.imp.dcgettext
0x00010f9d      488d0d443400.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x143e8 ; "https://www.gnu.org/software/coreutils/"
0x00010fa4      488d15131a00.  lea rdx, str.GNU_coreutils              ; 0x129be ; "GNU coreutils"
0x00010fab      4889c6         mov rsi, rax
0x00010fae      bf01000000     mov edi, 1
0x00010fb3      31c0           xor eax, eax
0x00010fb5      e8a61cffff     call sym.imp.__printf_chk
0x00010fba      488b1de79020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a0a8:8]=0
0x00010fc1      488d35a84b00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x15b70 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00010fc8      31ff           xor edi, edi
0x00010fca      ba05000000     mov edx, 5
0x00010fcf      e80c19ffff     call sym.imp.dcgettext
0x00010fd4      4889de         mov rsi, rbx
0x00010fd7      4889c7         mov rdi, rax
0x00010fda      5b             pop rbx
0x00010fdb      e9d01affff     jmp sym.imp.fputs_unlocked
;-- can_write_any_file:
0x00010fe0      803d2a972000.  cmp byte [obj.initialized.3064], 0      ; ../coreutils-8.31/lib/write-any-file.c:33 ; [0x21a711:1]=0
0x00010fe7      740f           je 0x10ff8
0x00010fe9      0fb605209720.  movzx eax, byte [obj.can_write.3065]    ; [0x21a710:1]=0
0x00010ff0      c3             ret                                     ; ../coreutils-8.31/lib/write-any-file.c:51
0x00010ff1      0f1f80000000.  nop dword [rax]
0x00010ff8      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/write-any-file.c:33
0x00010ffc      e8ff19ffff     call sym.imp.geteuid                    ; ../coreutils-8.31/lib/write-any-file.c:44
0x00011001      85c0           test eax, eax
0x00011003      c60507972000.  mov byte [obj.initialized.3064], 1      ; ../coreutils-8.31/lib/write-any-file.c:47 ; [0x21a711:1]=0
0x0001100a      0f94c0         sete al                                 ; ../coreutils-8.31/lib/write-any-file.c:44
0x0001100d      8805fd962000   mov byte [obj.can_write.3065], al       ; ../coreutils-8.31/lib/write-any-file.c:46 ; [0x21a710:1]=0
0x00011013      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/write-any-file.c:51
0x00011017      c3             ret
0x00011018      0f1f84000000.  nop dword [rax + rax]
;-- xmalloc:
0x00011020      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00011021      4889fb         mov rbx, rdi
0x00011024      e8971bffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00011029      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0001102c      7505           jne 0x11033
0x0001102e      4885db         test rbx, rbx
0x00011031      7502           jne 0x11035
0x00011033      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00011034      c3             ret
0x00011035      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0001103a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00011040      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00011043      48f7e6         mul rsi
0x00011046      4889c7         mov rdi, rax
0x00011049      0f90c0         seto al
0x0001104c      4885ff         test rdi, rdi
0x0001104f      780a           js 0x1105b
0x00011051      0fb6c0         movzx eax, al
0x00011054      4885c0         test rax, rax
0x00011057      7502           jne 0x1105b
0x00011059      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0001105b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0001105f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00011064      6690           nop
0x00011066      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00011070      ebae           jmp sym.xmalloc
0x00011072      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00011076      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00011080      4885f6         test rsi, rsi
0x00011083      53             push rbx
0x00011084      4889f3         mov rbx, rsi
0x00011087      7505           jne 0x1108e
0x00011089      4885ff         test rdi, rdi
0x0001108c      751a           jne 0x110a8
0x0001108e      4889de         mov rsi, rbx
0x00011091      e88a1bffff     call sym.imp.realloc
0x00011096      4885c0         test rax, rax
0x00011099      7505           jne 0x110a0
0x0001109b      4885db         test rbx, rbx
0x0001109e      7511           jne 0x110b1                             ; ../coreutils-8.31/lib/xmalloc.c:-63
0x000110a0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x000110a1      c3             ret
0x000110a2      660f1f440000   nop word [rax + rax]
0x000110a8      e8631dffff     call sym..plt.got
0x000110ad      31c0           xor eax, eax
0x000110af      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x000110b0      c3             ret
0x000110b1      e8ba010000     call sym.xalloc_die
0x000110b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x000110c0      4889f0         mov rax, rsi
0x000110c3      48f7e2         mul rdx
0x000110c6      4889c6         mov rsi, rax
0x000110c9      0f90c0         seto al
0x000110cc      4885f6         test rsi, rsi
0x000110cf      780a           js 0x110db
0x000110d1      0fb6c0         movzx eax, al
0x000110d4      4885c0         test rax, rax
0x000110d7      7502           jne 0x110db
0x000110d9      eba5           jmp sym.xrealloc
0x000110db      4883ec08       sub rsp, 8
0x000110df      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x000110e4      6690           nop
0x000110e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000110f0      4885ff         test rdi, rdi
0x000110f3      4989d1         mov r9, rdx
0x000110f6      488b0e         mov rcx, qword [rsi]
0x000110f9      7435           je 0x11130
0x000110fb      31d2           xor edx, edx
0x000110fd      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00011107      49f7f1         div r9
0x0001110a      4839c8         cmp rax, rcx
0x0001110d      763c           jbe 0x1114b
0x0001110f      4889c8         mov rax, rcx
0x00011112      48d1e8         shr rax, 1
0x00011115      488d4c0801     lea rcx, [rax + rcx + 1]
0x0001111a      48890e         mov qword [rsi], rcx
0x0001111d      490fafc9       imul rcx, r9
0x00011121      4889ce         mov rsi, rcx
0x00011124      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00011129      0f1f80000000.  nop dword [rax]
0x00011130      4885c9         test rcx, rcx
0x00011133      7423           je 0x11158
0x00011135      4889c8         mov rax, rcx
0x00011138      49f7e1         mul r9
0x0001113b      0f90c2         seto dl
0x0001113e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00011141      0fb6d2         movzx edx, dl
0x00011144      7805           js 0x1114b
0x00011146      4885d2         test rdx, rdx
0x00011149      74cf           je 0x1111a
0x0001114b      4883ec08       sub rsp, 8
0x0001114f      e81c010000     call sym.xalloc_die
0x00011154      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00011158      31d2           xor edx, edx
0x0001115a      b880000000     mov eax, 0x80
0x0001115f      4531c0         xor r8d, r8d
0x00011162      49f7f1         div r9
0x00011165      4885c0         test rax, rax
0x00011168      410f94c0       sete r8b
0x0001116c      498d0c00       lea rcx, [r8 + rax]
0x00011170      ebc3           jmp 0x11135
0x00011172      0f1f4000       nop dword [rax]
0x00011176      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00011180      4885ff         test rdi, rdi
0x00011183      488b06         mov rax, qword [rsi]
0x00011186      7428           je 0x111b0
0x00011188      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00011192      4839d0         cmp rax, rdx
0x00011195      772a           ja 0x111c1
0x00011197      4889c2         mov rdx, rax
0x0001119a      48d1ea         shr rdx, 1
0x0001119d      488d440201     lea rax, [rdx + rax + 1]
0x000111a2      488906         mov qword [rsi], rax
0x000111a5      4889c6         mov rsi, rax
0x000111a8      e9d3feffff     jmp sym.xrealloc
0x000111ad      0f1f00         nop dword [rax]
0x000111b0      4885c0         test rax, rax
0x000111b3      ba80000000     mov edx, 0x80
0x000111b8      480f44c2       cmove rax, rdx
0x000111bc      4885c0         test rax, rax
0x000111bf      79e1           jns 0x111a2
0x000111c1      4883ec08       sub rsp, 8
0x000111c5      e8a6000000     call sym.xalloc_die
0x000111ca      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x000111d0      53             push rbx
0x000111d1      4889fb         mov rbx, rdi
0x000111d4      e847feffff     call sym.xmalloc
0x000111d9      4889da         mov rdx, rbx
0x000111dc      31f6           xor esi, esi
0x000111de      4889c7         mov rdi, rax
0x000111e1      5b             pop rbx
0x000111e2      e90918ffff     jmp sym.imp.memset
0x000111e7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x000111f0      4889f8         mov rax, rdi
0x000111f3      4883ec08       sub rsp, 8
0x000111f7      48f7e6         mul rsi
0x000111fa      0f90c2         seto dl
0x000111fd      4885c0         test rax, rax
0x00011200      7817           js 0x11219
0x00011202      0fb6d2         movzx edx, dl
0x00011205      4885d2         test rdx, rdx
0x00011208      750f           jne 0x11219
0x0001120a      e8c118ffff     call sym.imp.calloc
0x0001120f      4885c0         test rax, rax
0x00011212      7405           je 0x11219
0x00011214      4883c408       add rsp, 8
0x00011218      c3             ret
0x00011219      e852000000     call sym.xalloc_die
0x0001121e      6690           nop
;-- xmemdup:
0x00011220      55             push rbp
0x00011221      53             push rbx
0x00011222      4889fd         mov rbp, rdi
0x00011225      4889f7         mov rdi, rsi
0x00011228      4889f3         mov rbx, rsi
0x0001122b      4883ec08       sub rsp, 8
0x0001122f      e8ecfdffff     call sym.xmalloc
0x00011234      4883c408       add rsp, 8
0x00011238      4889da         mov rdx, rbx
0x0001123b      4889ee         mov rsi, rbp
0x0001123e      5b             pop rbx
0x0001123f      5d             pop rbp
0x00011240      4889c7         mov rdi, rax
0x00011243      e91819ffff     jmp sym.imp.memcpy
0x00011248      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00011250      53             push rbx
0x00011251      4889fb         mov rbx, rdi
0x00011254      e8a716ffff     call sym.imp.strlen
0x00011259      4889df         mov rdi, rbx
0x0001125c      488d7001       lea rsi, [rax + 1]
0x00011260      5b             pop rbx
0x00011261      ebbd           jmp sym.xmemdup
0x00011263      662e0f1f8400.  nop word cs:[rax + rax]
0x0001126d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00011270      488d35984900.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x15c0f ; "memory exhausted"
0x00011277      4883ec08       sub rsp, 8
0x0001127b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00011280      31ff           xor edi, edi
0x00011282      e85916ffff     call sym.imp.dcgettext
0x00011287      8b3da38d2000   mov edi, dword [obj.exit_failure]       ; [0x21a030:4]=1
0x0001128d      488d15f93e00.  lea rdx, [0x0001518d]                   ; "%s"
0x00011294      4889c1         mov rcx, rax
0x00011297      31f6           xor esi, esi
0x00011299      31c0           xor eax, eax
0x0001129b      e8101affff     call sym.imp.error
0x000112a0      e8bb14ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x000112a5      662e0f1f8400.  nop word cs:[rax + rax]
0x000112af      90             nop
;-- yesno:
0x000112b0      53             push rbx                                ; ../coreutils-8.31/lib/yesno.c:33
0x000112b1      ba0a000000     mov edx, 0xa
0x000112b6      31db           xor ebx, ebx
0x000112b8      4883ec20       sub rsp, 0x20
0x000112bc      488b0ded8d20.  mov rcx, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x21a0b0:8]=0
0x000112c3      488d742410     lea rsi, [rsp + 0x10]
0x000112c8      488d7c2408     lea rdi, [rsp + 8]                      ; stdio.h:-219
0x000112cd      48c744240800.  mov qword [rsp + 8], 0
0x000112d6      64488b042528.  mov rax, qword fs:[0x28]
0x000112df      4889442418     mov qword [rsp + 0x18], rax
0x000112e4      31c0           xor eax, eax
0x000112e6      48c744241000.  mov qword [rsp + 0x10], 0               ; stdio.h:-343
0x000112ef      e8ec17ffff     call sym.imp.__getdelim
0x000112f4      4885c0         test rax, rax
0x000112f7      7e19           jle 0x11312
0x000112f9      488b7c2408     mov rdi, qword [rsp + 8]
0x000112fe      488d4407ff     lea rax, [rdi + rax - 1]
0x00011303      80380a         cmp byte [rax], 0xa
0x00011306      7430           je 0x11338
0x00011308      e81318ffff     call sym.imp.rpmatch
0x0001130d      85c0           test eax, eax
0x0001130f      0f9fc3         setg bl
0x00011312      488b7c2408     mov rdi, qword [rsp + 8]
0x00011317      e8f41affff     call sym..plt.got
0x0001131c      488b542418     mov rdx, qword [rsp + 0x18]
0x00011321      644833142528.  xor rdx, qword fs:[0x28]
0x0001132a      89d8           mov eax, ebx                            ; stdio.h:-336
0x0001132c      7514           jne 0x11342
0x0001132e      4883c420       add rsp, 0x20
0x00011332      5b             pop rbx
0x00011333      c3             ret
0x00011334      0f1f4000       nop dword [rax]                         ; stdio.h:-321
0x00011338      c60000         mov byte [rax], 0
0x0001133b      488b7c2408     mov rdi, qword [rsp + 8]
0x00011340      ebc6           jmp 0x11308
0x00011342      e8e915ffff     call sym.imp.__stack_chk_fail
0x00011347      660f1f840000.  nop word [rax + rax]
;-- rpl_fflush:
0x00011350      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00011353      53             push rbx
0x00011354      4889fb         mov rbx, rdi
0x00011357      7411           je 0x1136a                              ; ../coreutils-8.31/lib/fflush.c:150
0x00011359      e8b218ffff     call sym.imp.__freading
0x0001135e      85c0           test eax, eax
0x00011360      7408           je 0x1136a
0x00011362      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00011368      750e           jne 0x11378
0x0001136a      4889df         mov rdi, rbx
0x0001136d      5b             pop rbx
0x0001136e      e95d18ffff     jmp sym.imp.fflush
0x00011373      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fflush.c:32
0x00011378      4889df         mov rdi, rbx
0x0001137b      ba01000000     mov edx, 1
0x00011380      31f6           xor esi, esi
0x00011382      e839000000     call sym.rpl_fseeko
0x00011387      4889df         mov rdi, rbx
0x0001138a      5b             pop rbx
0x0001138b      e94018ffff     jmp sym.imp.fflush
;-- freadahead:
0x00011390      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/freadahead.c:35
0x00011392      488b4f20       mov rcx, qword [rdi + 0x20]             ; ../coreutils-8.31/lib/freadahead.c:38
0x00011396      48394f28       cmp qword [rdi + 0x28], rcx
0x0001139a      771b           ja 0x113b7
0x0001139c      488b4710       mov rax, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/freadahead.c:40
0x000113a0      482b4708       sub rax, qword [rdi + 8]
0x000113a4      f70700010000   test dword [rdi], 0x100                 ; ../coreutils-8.31/lib/freadahead.c:41
0x000113aa      740b           je 0x113b7
0x000113ac      488b5758       mov rdx, qword [rdi + 0x58]
0x000113b0      482b5748       sub rdx, qword [rdi + 0x48]
0x000113b4      4801d0         add rax, rdx
0x000113b7      f3c3           ret                                     ; ../coreutils-8.31/lib/freadahead.c:103
0x000113b9      0f1f80000000.  nop dword [rax]
;-- rpl_fseeko:
0x000113c0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x000113c4      48394710       cmp qword [rdi + 0x10], rax
0x000113c8      7406           je 0x113d0                              ; ../coreutils-8.31/lib/fseeko.c:32
0x000113ca      e91119ffff     jmp sym.imp.fseeko
0x000113cf      90             nop
0x000113d0      488b4720       mov rax, qword [rdi + 0x20]
0x000113d4      48394728       cmp qword [rdi + 0x28], rax
0x000113d8      75f0           jne 0x113ca                             ; ../coreutils-8.31/lib/fseeko.c:33
0x000113da      48837f4800     cmp qword [rdi + 0x48], 0
0x000113df      75e9           jne 0x113ca                             ; ../coreutils-8.31/lib/fseeko.c:21
0x000113e1      4154           push r12
0x000113e3      55             push rbp
0x000113e4      4189d4         mov r12d, edx
0x000113e7      53             push rbx
0x000113e8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x000113eb      4889fb         mov rbx, rdi
0x000113ee      e88d17ffff     call sym.imp.fileno
0x000113f3      4489e2         mov edx, r12d
0x000113f6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x000113f9      89c7           mov edi, eax
0x000113fb      e8c015ffff     call sym.imp.lseek
0x00011400      4883f8ff       cmp rax, 0xffffffffffffffff
0x00011404      740c           je 0x11412
0x00011406      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00011409      488983900000.  mov qword [rbx + 0x90], rax
0x00011410      31c0           xor eax, eax
0x00011412      5b             pop rbx
0x00011413      5d             pop rbp
0x00011414      415c           pop r12
0x00011416      c3             ret
0x00011417      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00011420      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00011422      4154           push r12
0x00011424      4989f5         mov r13, rsi
0x00011427      55             push rbp
0x00011428      53             push rbx
0x00011429      4889fb         mov rbx, rdi
0x0001142c      4989d4         mov r12, rdx
0x0001142f      4883ec18       sub rsp, 0x18
0x00011433      64488b042528.  mov rax, qword fs:[0x28]
0x0001143c      4889442408     mov qword [rsp + 8], rax
0x00011441      31c0           xor eax, eax
0x00011443      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00011448      4885ff         test rdi, rdi
0x0001144b      480f44d8       cmove rbx, rax
0x0001144f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00011452      e80915ffff     call sym.imp.mbrtowc
0x00011457      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0001145b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0001145e      7620           jbe 0x11480                             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00011460      4d85e4         test r12, r12
0x00011463      741b           je 0x11480
0x00011465      31ff           xor edi, edi
0x00011467      e834020000     call sym.hard_locale
0x0001146c      84c0           test al, al
0x0001146e      7510           jne 0x11480
0x00011470      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00011475      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0001147a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0001147c      0f1f4000       nop dword [rax]
0x00011480      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00011485      644833142528.  xor rdx, qword fs:[0x28]
0x0001148e      4889e8         mov rax, rbp
0x00011491      750b           jne 0x1149e
0x00011493      4883c418       add rsp, 0x18
0x00011497      5b             pop rbx
0x00011498      5d             pop rbp
0x00011499      415c           pop r12
0x0001149b      415d           pop r13
0x0001149d      c3             ret
0x0001149e      e88d14ffff     call sym.imp.__stack_chk_fail
0x000114a3      662e0f1f8400.  nop word cs:[rax + rax]
0x000114ad      0f1f00         nop dword [rax]
;-- free_permission_context:
0x000114b0      f3c3           ret                                     ; ../coreutils-8.31/lib/acl-internal.c:480
0x000114b2      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/acl-internal.c:507
0x000114bc      0f1f4000       nop dword [rax]
;-- get_permissions:
0x000114c0      8911           mov dword [rcx], edx                    ; ../coreutils-8.31/lib/get-permissions.c:35
0x000114c2      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/get-permissions.c:291
0x000114c4      c3             ret
0x000114c5      662e0f1f8400.  nop word cs:[rax + rax]
0x000114cf      90             nop
;-- chmod_or_fchmod:
0x000114d0      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/set-permissions.c:761
0x000114d2      89d6           mov esi, edx                            ; ../coreutils-8.31/lib/set-permissions.c:763
0x000114d4      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/set-permissions.c:762
0x000114d7      7407           je 0x114e0
0x000114d9      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/set-permissions.c:763
0x000114db      e99017ffff     jmp sym.imp.fchmod
0x000114e0      e9ab17ffff     jmp sym.imp.chmod                       ; ../coreutils-8.31/lib/set-permissions.c:765
0x000114e5      90             nop
0x000114e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_permissions:
0x000114f0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/set-permissions.c:777
0x000114f4      4889f0         mov rax, rsi
0x000114f7      89d6           mov esi, edx
0x000114f9      8b17           mov edx, dword [rdi]                    ; ../coreutils-8.31/lib/set-permissions.c:806
0x000114fb      4889c7         mov rdi, rax
0x000114fe      e8cdffffff     call sym.chmod_or_fchmod
0x00011503      85c0           test eax, eax                           ; ../coreutils-8.31/lib/set-permissions.c:807
0x00011505      0f95c0         setne al
0x00011508      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/set-permissions.c:847
0x0001150c      0fb6c0         movzx eax, al                           ; ../coreutils-8.31/lib/set-permissions.c:807
0x0001150f      f7d8           neg eax
0x00011511      c3             ret                                     ; ../coreutils-8.31/lib/set-permissions.c:847
0x00011512      662e0f1f8400.  nop word cs:[rax + rax]
0x0001151c      0f1f4000       nop dword [rax]
;-- close_stream:
0x00011520      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00011522      55             push rbp
0x00011523      4889fd         mov rbp, rdi
0x00011526      53             push rbx
0x00011527      e89412ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0001152c      8b5d00         mov ebx, dword [rbp]
0x0001152f      4889ef         mov rdi, rbp
0x00011532      4989c4         mov r12, rax
0x00011535      e8560f0000     call sym.rpl_fclose
0x0001153a      83e320         and ebx, 0x20                           ; "@"
0x0001153d      85db           test ebx, ebx
0x0001153f      7517           jne 0x11558
0x00011541      85c0           test eax, eax
0x00011543      740a           je 0x1154f                              ; stdio.h:-186
0x00011545      4d85e4         test r12, r12                           ; stdio.h:-178
0x00011548      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0001154d      7439           je 0x11588
0x0001154f      5b             pop rbx
0x00011550      5d             pop rbp
0x00011551      415c           pop r12
0x00011553      c3             ret
0x00011554      0f1f4000       nop dword [rax]
0x00011558      85c0           test eax, eax
0x0001155a      751c           jne 0x11578
0x0001155c      e80f12ffff     call sym.imp.__errno_location
0x00011561      c70000000000   mov dword [rax], 0
0x00011567      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0001156c      5b             pop rbx
0x0001156d      5d             pop rbp
0x0001156e      415c           pop r12
0x00011570      c3             ret
0x00011571      0f1f80000000.  nop dword [rax]
0x00011578      5b             pop rbx
0x00011579      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0001157e      5d             pop rbp                                 ; stdio.h:-186
0x0001157f      415c           pop r12
0x00011581      c3             ret
0x00011582      660f1f440000   nop word [rax + rax]
0x00011588      e8e311ffff     call sym.imp.__errno_location
0x0001158d      833809         cmp dword [rax], 9
0x00011590      5b             pop rbx
0x00011591      5d             pop rbp
0x00011592      415c           pop r12                                 ; stdio.h:-178
0x00011594      0f95c0         setne al
0x00011597      0fb6c0         movzx eax, al
0x0001159a      f7d8           neg eax
0x0001159c      c3             ret
0x0001159d      0f1f00         nop dword [rax]
;-- opendir_safer:
0x000115a0      4156           push r14                                ; ../coreutils-8.31/lib/opendir-safer.c:32
0x000115a2      4155           push r13
0x000115a4      4154           push r12
0x000115a6      55             push rbp
0x000115a7      53             push rbx
0x000115a8      e8f312ffff     call sym.imp.opendir                    ; ../coreutils-8.31/lib/opendir-safer.c:33
0x000115ad      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/opendir-safer.c:35
0x000115b0      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/opendir-safer.c:33
0x000115b3      740d           je 0x115c2                              ; ../coreutils-8.31/lib/opendir-safer.c:35
0x000115b5      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/opendir-safer.c:37
0x000115b8      e84315ffff     call sym.imp.dirfd
0x000115bd      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/opendir-safer.c:39
0x000115c0      760e           jbe 0x115d0
0x000115c2      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/opendir-safer.c:76
0x000115c5      5b             pop rbx
0x000115c6      5d             pop rbp
0x000115c7      415c           pop r12
0x000115c9      415d           pop r13
0x000115cb      415e           pop r14
0x000115cd      c3             ret
0x000115ce      6690           nop
0x000115d0      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/opendir-safer.c:52
0x000115d2      ba03000000     mov edx, 3
0x000115d7      be06040000     mov esi, 0x406
0x000115dc      31c0           xor eax, eax
0x000115de      e82d0f0000     call sym.rpl_fcntl
0x000115e3      4189c4         mov r12d, eax
0x000115e6      e88511ffff     call sym.imp.__errno_location
0x000115eb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/opendir-safer.c:53
0x000115ee      4889c5         mov rbp, rax
0x000115f1      7925           jns 0x11618
0x000115f3      448b30         mov r14d, dword [rax]                   ; ../coreutils-8.31/lib/opendir-safer.c:55
0x000115f6      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/opendir-safer.c:56
0x000115f9      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/opendir-safer.c:69
0x000115fc      4c89eb         mov rbx, r13                            ; ../coreutils-8.31/lib/opendir-safer.c:71
0x000115ff      e85c14ffff     call sym.imp.closedir                   ; ../coreutils-8.31/lib/opendir-safer.c:69
0x00011604      44897500       mov dword [rbp], r14d                   ; ../coreutils-8.31/lib/opendir-safer.c:70
0x00011608      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/opendir-safer.c:76
0x0001160b      5b             pop rbx
0x0001160c      5d             pop rbp
0x0001160d      415c           pop r12
0x0001160f      415d           pop r13
0x00011611      415e           pop r14
0x00011613      c3             ret
0x00011614      0f1f4000       nop dword [rax]
0x00011618      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/opendir-safer.c:60
0x0001161b      e80017ffff     call sym.imp.fdopendir
0x00011620      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/opendir-safer.c:62
0x00011623      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/opendir-safer.c:60
0x00011626      448b7500       mov r14d, dword [rbp]                   ; ../coreutils-8.31/lib/opendir-safer.c:61
0x0001162a      75cd           jne 0x115f9                             ; ../coreutils-8.31/lib/opendir-safer.c:62
0x0001162c      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/opendir-safer.c:63
0x0001162f      e8fc13ffff     call sym.imp.close
0x00011634      ebc3           jmp 0x115f9
0x00011636      662e0f1f8400.  nop word cs:[rax + rax]
;-- gettime:
0x00011640      4889fe         mov rsi, rdi                            ; ../coreutils-8.31/lib/gettime.c:30
0x00011643      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/gettime.c:32
0x00011645      e9e611ffff     jmp sym.imp.clock_gettime
0x0001164a      660f1f440000   nop word [rax + rax]
;-- current_timespec:
0x00011650      4883ec28       sub rsp, 0x28                           ; ../coreutils-8.31/lib/gettime.c:45
0x00011654      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/gettime.c:32
0x00011656      4889e6         mov rsi, rsp
0x00011659      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/gettime.c:45
0x00011662      4889442418     mov qword [rsp + 0x18], rax
0x00011667      31c0           xor eax, eax
0x00011669      e8c211ffff     call sym.imp.clock_gettime              ; ../coreutils-8.31/lib/gettime.c:32
0x0001166e      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/gettime.c:49
0x00011673      6448330c2528.  xor rcx, qword fs:[0x28]
0x0001167c      488b0424       mov rax, qword [rsp]
0x00011680      488b542408     mov rdx, qword [rsp + 8]
0x00011685      7505           jne 0x1168c
0x00011687      4883c428       add rsp, 0x28
0x0001168b      c3             ret
0x0001168c      e89f12ffff     call sym.imp.__stack_chk_fail
0x00011691      662e0f1f8400.  nop word cs:[rax + rax]
0x0001169b      0f1f440000     nop dword [rax + rax]
;-- hard_locale:
0x000116a0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x000116a4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x000116a6      e8a515ffff     call sym.imp.setlocale
0x000116ab      4889c2         mov rdx, rax
0x000116ae      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x000116b3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x000116b6      741d           je 0x116d5
0x000116b8      488d3d614500.  lea rdi, [0x00015c20]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x000116bf      b902000000     mov ecx, 2
0x000116c4      4889d6         mov rsi, rdx
0x000116c7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000116c9      0f97c1         seta cl
0x000116cc      80d900         sbb cl, 0
0x000116cf      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x000116d1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x000116d3      750b           jne 0x116e0
0x000116d5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000116d9      c3             ret
0x000116da      660f1f440000   nop word [rax + rax]
0x000116e0      488d3d3b4500.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x15c22 ; "POSIX"
0x000116e7      b906000000     mov ecx, 6
0x000116ec      4889d6         mov rsi, rdx
0x000116ef      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000116f1      0f97c0         seta al
0x000116f4      1c00           sbb al, 0
0x000116f6      84c0           test al, al
0x000116f8      0f95c0         setne al
0x000116fb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000116ff      c3             ret
;-- hash_pjw:
0x00011700      480fbe0f       movsx rcx, byte [rdi]
0x00011704      84c9           test cl, cl
0x00011706      7428           je 0x11730
0x00011708      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-pjw.c:34
0x0001170a      660f1f440000   nop word [rax + rax]
0x00011710      48c1c009       rol rax, 9                              ; ../coreutils-8.31/lib/hash-pjw.c:37
0x00011714      4883c701       add rdi, 1                              ; ../coreutils-8.31/lib/hash-pjw.c:36
0x00011718      4801c8         add rax, rcx                            ; ../coreutils-8.31/lib/hash-pjw.c:37
0x0001171b      480fbe0f       movsx rcx, byte [rdi]                   ; ../coreutils-8.31/lib/hash-pjw.c:36
0x0001171f      84c9           test cl, cl
0x00011721      75ed           jne 0x11710
0x00011723      31d2           xor edx, edx
0x00011725      48f7f6         div rsi
0x00011728      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-pjw.c:40
0x0001172b      c3             ret
0x0001172c      0f1f4000       nop dword [rax]
0x00011730      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash-pjw.c:36
0x00011732      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-pjw.c:40
0x00011735      c3             ret
0x00011736      662e0f1f8400.  nop word cs:[rax + rax]
;-- locale_charset:
0x00011740      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x00011744      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00011749      e89214ffff     call sym.imp.nl_langinfo
0x0001174e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00011751      741d           je 0x11770
0x00011753      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00011756      488d15cb4400.  lea rdx, str.ASCII                      ; 0x15c28 ; "ASCII"
0x0001175d      480f44c2       cmove rax, rdx
0x00011761      4883c408       add rsp, 8
0x00011765      c3             ret
0x00011766      662e0f1f8400.  nop word cs:[rax + rax]
0x00011770      488d05b14400.  lea rax, str.ASCII                      ; 0x15c28 ; "ASCII"
0x00011777      4883c408       add rsp, 8
0x0001177b      c3             ret
0x0001177c      0f1f4000       nop dword [rax]
;-- openat_safer:
0x00011780      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/openat-safer.c:30
0x00011784      48894c2438     mov qword [rsp + 0x38], rcx
0x00011789      31c9           xor ecx, ecx
0x0001178b      64488b042528.  mov rax, qword fs:[0x28]
0x00011794      4889442418     mov qword [rsp + 0x18], rax
0x00011799      31c0           xor eax, eax
0x0001179b      f6c240         test dl, 0x40                           ; ../coreutils-8.31/lib/openat-safer.c:33 ; segment.PHDR
0x0001179e      7528           jne 0x117c8
0x000117a0      31c0           xor eax, eax
0x000117a2      e87911ffff     call sym.imp.openat                     ; fcntl2.h:-83
0x000117a7      89c7           mov edi, eax
0x000117a9      e8a2e1ffff     call sym.fd_safer                       ; fcntl2.h:-82
0x000117ae      488b742418     mov rsi, qword [rsp + 0x18]
0x000117b3      644833342528.  xor rsi, qword fs:[0x28]
0x000117bc      752b           jne 0x117e9
0x000117be      4883c458       add rsp, 0x58
0x000117c2      c3             ret
0x000117c3      0f1f440000     nop dword [rax + rax]                   ; fcntl2.h:-92
0x000117c8      488d442460     lea rax, [rsp + 0x60]
0x000117cd      c70424180000.  mov dword [rsp], 0x18                   ; [0x18:4]=0x36d0 rip
0x000117d4      8b4c2438       mov ecx, dword [rsp + 0x38]
0x000117d8      4889442408     mov qword [rsp + 8], rax
0x000117dd      488d442420     lea rax, [rsp + 0x20]
0x000117e2      4889442410     mov qword [rsp + 0x10], rax
0x000117e7      ebb7           jmp 0x117a0
0x000117e9      e84211ffff     call sym.imp.__stack_chk_fail           ; fcntl2.h:-82
0x000117ee      6690           nop
;-- randint_new:
0x000117f0      53             push rbx
0x000117f1      4889fb         mov rbx, rdi
0x000117f4      bf18000000     mov edi, 0x18
0x000117f9      e822f8ffff     call sym.xmalloc
0x000117fe      488918         mov qword [rax], rbx
0x00011801      48c740100000.  mov qword [rax + 0x10], 0
0x00011809      48c740080000.  mov qword [rax + 8], 0
0x00011811      5b             pop rbx
0x00011812      c3             ret
0x00011813      0f1f00         nop dword [rax]
0x00011816      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_all_new:
0x00011820      53             push rbx
0x00011821      e84a020000     call sym.randread_new
0x00011826      4885c0         test rax, rax
0x00011829      7425           je 0x11850
0x0001182b      4889c3         mov rbx, rax
0x0001182e      bf18000000     mov edi, 0x18
0x00011833      e8e8f7ffff     call sym.xmalloc
0x00011838      488918         mov qword [rax], rbx
0x0001183b      48c740100000.  mov qword [rax + 0x10], 0
0x00011843      48c740080000.  mov qword [rax + 8], 0
0x0001184b      5b             pop rbx
0x0001184c      c3             ret
0x0001184d      0f1f00         nop dword [rax]
0x00011850      31c0           xor eax, eax
0x00011852      5b             pop rbx
0x00011853      c3             ret
0x00011854      6690           nop
0x00011856      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_get_source:
0x00011860      488b07         mov rax, qword [rdi]
0x00011863      c3             ret
0x00011864      6690           nop
0x00011866      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_genmax:
0x00011870      4157           push r15
0x00011872      4156           push r14
0x00011874      4c8d7e01       lea r15, [rsi + 1]
0x00011878      4155           push r13
0x0001187a      4154           push r12
0x0001187c      4989fd         mov r13, rdi
0x0001187f      55             push rbp
0x00011880      53             push rbx
0x00011881      4989f6         mov r14, rsi
0x00011884      4883ec28       sub rsp, 0x28
0x00011888      488b6f08       mov rbp, qword [rdi + 8]
0x0001188c      488b5f10       mov rbx, qword [rdi + 0x10]
0x00011890      64488b042528.  mov rax, qword fs:[0x28]
0x00011899      4889442418     mov qword [rsp + 0x18], rax
0x0001189e      31c0           xor eax, eax
0x000118a0      488b07         mov rax, qword [rdi]
0x000118a3      4c8d642410     lea r12, [rsp + 0x10]
0x000118a8      4889442408     mov qword [rsp + 8], rax
0x000118ad      eb36           jmp 0x118e5
0x000118af      90             nop
0x000118b0      4c39f3         cmp rbx, r14
0x000118b3      0f8486000000   je 0x1193f
0x000118b9      4889d8         mov rax, rbx
0x000118bc      31d2           xor edx, edx
0x000118be      4c29f0         sub rax, r14
0x000118c1      49f7f7         div r15
0x000118c4      4829d3         sub rbx, rdx
0x000118c7      4889d7         mov rdi, rdx
0x000118ca      4889c6         mov rsi, rax
0x000118cd      31d2           xor edx, edx
0x000118cf      4889e8         mov rax, rbp
0x000118d2      49f7f7         div r15
0x000118d5      4839dd         cmp rbp, rbx
0x000118d8      0f869a000000   jbe 0x11978
0x000118de      488d5fff       lea rbx, [rdi - 1]
0x000118e2      4889d5         mov rbp, rdx
0x000118e5      4c39f3         cmp rbx, r14
0x000118e8      73c6           jae 0x118b0
0x000118ea      4889d8         mov rax, rbx
0x000118ed      31d2           xor edx, edx
0x000118ef      90             nop
0x000118f0      48c1e008       shl rax, 8
0x000118f4      4883c201       add rdx, 1
0x000118f8      4805ff000000   add rax, 0xff
0x000118fe      4939c6         cmp r14, rax
0x00011901      77ed           ja 0x118f0
0x00011903      488b7c2408     mov rdi, qword [rsp + 8]
0x00011908      4c89e6         mov rsi, r12
0x0001190b      e8b0040000     call sym.randread
0x00011910      4c89e0         mov rax, r12
0x00011913      0f1f440000     nop dword [rax + rax]
0x00011918      0fb610         movzx edx, byte [rax]
0x0001191b      48c1e308       shl rbx, 8
0x0001191f      48c1e508       shl rbp, 8
0x00011923      4881c3ff0000.  add rbx, 0xff
0x0001192a      4883c001       add rax, 1
0x0001192e      4801d5         add rbp, rdx
0x00011931      4939de         cmp r14, rbx
0x00011934      77e2           ja 0x11918
0x00011936      4c39f3         cmp rbx, r14
0x00011939      0f857affffff   jne 0x118b9
0x0001193f      49c745100000.  mov qword [r13 + 0x10], 0
0x00011947      49c745080000.  mov qword [r13 + 8], 0
0x0001194f      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00011954      6448330c2528.  xor rcx, qword fs:[0x28]
0x0001195d      4889e8         mov rax, rbp
0x00011960      7523           jne 0x11985
0x00011962      4883c428       add rsp, 0x28
0x00011966      5b             pop rbx
0x00011967      5d             pop rbp
0x00011968      415c           pop r12
0x0001196a      415d           pop r13
0x0001196c      415e           pop r14
0x0001196e      415f           pop r15
0x00011970      c3             ret
0x00011971      0f1f80000000.  nop dword [rax]
0x00011978      49894508       mov qword [r13 + 8], rax
0x0001197c      49897510       mov qword [r13 + 0x10], rsi
0x00011980      4889d5         mov rbp, rdx
0x00011983      ebca           jmp 0x1194f
0x00011985      e8a60fffff     call sym.imp.__stack_chk_fail
0x0001198a      660f1f440000   nop word [rax + rax]
;-- randint_free:
0x00011990      53             push rbx
0x00011991      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00011998      4889fb         mov rbx, rdi
0x0001199b      be18000000     mov esi, 0x18
0x000119a0      e81b13ffff     call sym.imp.__explicit_bzero_chk
0x000119a5      4889df         mov rdi, rbx
0x000119a8      5b             pop rbx
0x000119a9      e96214ffff     jmp sym..plt.got
0x000119ae      6690           nop
;-- randint_all_free:
0x000119b0      4155           push r13
0x000119b2      4154           push r12
0x000119b4      55             push rbp
0x000119b5      53             push rbx
0x000119b6      4889fb         mov rbx, rdi
0x000119b9      4883ec08       sub rsp, 8
0x000119bd      488b3f         mov rdi, qword [rdi]
0x000119c0      e89b050000     call sym.randread_free
0x000119c5      4189c4         mov r12d, eax
0x000119c8      e8a30dffff     call sym.imp.__errno_location
0x000119cd      448b28         mov r13d, dword [rax]
0x000119d0      4889df         mov rdi, rbx
0x000119d3      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000119da      be18000000     mov esi, 0x18
0x000119df      4889c5         mov rbp, rax
0x000119e2      e8d912ffff     call sym.imp.__explicit_bzero_chk
0x000119e7      4889df         mov rdi, rbx
0x000119ea      e82114ffff     call sym..plt.got
0x000119ef      44896d00       mov dword [rbp], r13d
0x000119f3      4883c408       add rsp, 8
0x000119f7      4489e0         mov eax, r12d
0x000119fa      5b             pop rbx
0x000119fb      5d             pop rbp
0x000119fc      415c           pop r12
0x000119fe      415d           pop r13
0x00011a00      c3             ret
0x00011a01      662e0f1f8400.  nop word cs:[rax + rax]
0x00011a0b      0f1f440000     nop dword [rax + rax]
;-- randread_error:
0x00011a10      55             push rbp
0x00011a11      53             push rbx
0x00011a12      4883ec08       sub rsp, 8
0x00011a16      4885ff         test rdi, rdi
0x00011a19      743d           je 0x11a58
0x00011a1b      e860d3ffff     call sym.quote
0x00011a20      4889c5         mov rbp, rax
0x00011a23      e8480dffff     call sym.imp.__errno_location
0x00011a28      833800         cmp dword [rax], 0
0x00011a2b      4889c3         mov rbx, rax
0x00011a2e      ba05000000     mov edx, 5
0x00011a33      7428           je 0x11a5d
0x00011a35      488d35024200.  lea rsi, str.s:_read_error              ; 0x15c3e ; "%s: read error"
0x00011a3c      31ff           xor edi, edi
0x00011a3e      e89d0effff     call sym.imp.dcgettext
0x00011a43      8b3de7852000   mov edi, dword [obj.exit_failure]       ; [0x21a030:4]=1
0x00011a49      8b33           mov esi, dword [rbx]
0x00011a4b      4889c2         mov rdx, rax
0x00011a4e      4889e9         mov rcx, rbp
0x00011a51      31c0           xor eax, eax
0x00011a53      e85812ffff     call sym.imp.error
0x00011a58      e8030dffff     call sym.imp.abort
0x00011a5d      488d35ca4100.  lea rsi, str.s:_end_of_file             ; 0x15c2e ; "%s: end of file"
0x00011a64      31ff           xor edi, edi
0x00011a66      e8750effff     call sym.imp.dcgettext
0x00011a6b      ebd6           jmp 0x11a43
0x00011a6d      0f1f00         nop dword [rax]
;-- randread_new:
0x00011a70      4157           push r15
0x00011a72      4156           push r14
0x00011a74      4155           push r13
0x00011a76      4154           push r12
0x00011a78      55             push rbp
0x00011a79      53             push rbx
0x00011a7a      4883ec38       sub rsp, 0x38
0x00011a7e      64488b042528.  mov rax, qword fs:[0x28]
0x00011a87      4889442428     mov qword [rsp + 0x28], rax
0x00011a8c      31c0           xor eax, eax
0x00011a8e      4885f6         test rsi, rsi
0x00011a91      0f8421010000   je 0x11bb8
0x00011a97      4885ff         test rdi, rdi
0x00011a9a      4989fc         mov r12, rdi
0x00011a9d      4889f5         mov rbp, rsi
0x00011aa0      747e           je 0x11b20
0x00011aa2      488d35b14100.  lea rsi, [0x00015c5a]                   ; "rb"
0x00011aa9      e8e20c0000     call sym.fopen_safer
0x00011aae      4885c0         test rax, rax
0x00011ab1      4989c5         mov r13, rax
0x00011ab4      0f84fe010000   je 0x11cb8
0x00011aba      bf38100000     mov edi, 0x1038
0x00011abf      e85cf5ffff     call sym.xmalloc
0x00011ac4      4889c3         mov rbx, rax
0x00011ac7      4c8928         mov qword [rax], r13
0x00011aca      488d053fffff.  lea rax, sym.randread_error             ; 0x11a10 ; "USH\x83\xec\bH\x85\xfft=\xe8`\xd3\xff\xffH\x89\xc5\xe8H\r\xff\xff\x838"
0x00011ad1      4881fd001000.  cmp rbp, 0x1000
0x00011ad8      b900100000     mov ecx, 0x1000
0x00011add      488d7318       lea rsi, [rbx + 0x18]
0x00011ae1      480f46cd       cmovbe rcx, rbp
0x00011ae5      48894308       mov qword [rbx + 8], rax
0x00011ae9      4c896310       mov qword [rbx + 0x10], r12
0x00011aed      31d2           xor edx, edx
0x00011aef      4c89ef         mov rdi, r13
0x00011af2      e88911ffff     call sym.imp.setvbuf
0x00011af7      488b542428     mov rdx, qword [rsp + 0x28]
0x00011afc      644833142528.  xor rdx, qword fs:[0x28]
0x00011b05      4889d8         mov rax, rbx
0x00011b08      0f85b1010000   jne 0x11cbf
0x00011b0e      4883c438       add rsp, 0x38
0x00011b12      5b             pop rbx
0x00011b13      5d             pop rbp
0x00011b14      415c           pop r12
0x00011b16      415d           pop r13
0x00011b18      415e           pop r14
0x00011b1a      415f           pop r15
0x00011b1c      c3             ret
0x00011b1d      0f1f00         nop dword [rax]
0x00011b20      bf38100000     mov edi, 0x1038
0x00011b25      e8f6f4ffff     call sym.xmalloc
0x00011b2a      4889c3         mov rbx, rax
0x00011b2d      48c700000000.  mov qword [rax], 0
0x00011b34      488d05d5feff.  lea rax, sym.randread_error             ; 0x11a10 ; "USH\x83\xec\bH\x85\xfft=\xe8`\xd3\xff\xffH\x89\xc5\xe8H\r\xff\xff\x838"
0x00011b3b      488d3d0b4100.  lea rdi, str.dev_urandom                ; 0x15c4d ; "/dev/urandom"
0x00011b42      31f6           xor esi, esi
0x00011b44      48c743100000.  mov qword [rbx + 0x10], 0
0x00011b4c      48894308       mov qword [rbx + 8], rax
0x00011b50      48c743180000.  mov qword [rbx + 0x18], 0
0x00011b58      31c0           xor eax, eax
0x00011b5a      e87111ffff     call sym.imp.open
0x00011b5f      85c0           test eax, eax
0x00011b61      4c8d6b20       lea r13, [rbx + 0x20]
0x00011b65      4189c7         mov r15d, eax
0x00011b68      787e           js 0x11be8
0x00011b6a      4881fd000800.  cmp rbp, 0x800
0x00011b71      4889ea         mov rdx, rbp
0x00011b74      41be00080000   mov r14d, 0x800
0x00011b7a      490f47d6       cmova rdx, r14
0x00011b7e      b918100000     mov ecx, 0x1018
0x00011b83      4c89ee         mov rsi, r13
0x00011b86      89c7           mov edi, eax
0x00011b88      e8430cffff     call sym.imp.__read_chk
0x00011b8d      4489ff         mov edi, r15d
0x00011b90      4889c5         mov rbp, rax
0x00011b93      e8980effff     call sym.imp.close
0x00011b98      4881fdff0700.  cmp rbp, 0x7ff
0x00011b9f      0f8e1f010000   jle 0x11cc4
0x00011ba5      4c89ef         mov rdi, r13
0x00011ba8      e893060000     call sym.isaac_seed
0x00011bad      e945ffffff     jmp 0x11af7
0x00011bb2      660f1f440000   nop word [rax + rax]
0x00011bb8      bf38100000     mov edi, 0x1038
0x00011bbd      e85ef4ffff     call sym.xmalloc
0x00011bc2      4889c3         mov rbx, rax
0x00011bc5      48c700000000.  mov qword [rax], 0
0x00011bcc      488d053dfeff.  lea rax, sym.randread_error             ; 0x11a10 ; "USH\x83\xec\bH\x85\xfft=\xe8`\xd3\xff\xffH\x89\xc5\xe8H\r\xff\xff\x838"
0x00011bd3      48c743100000.  mov qword [rbx + 0x10], 0
0x00011bdb      48894308       mov qword [rbx + 8], rax
0x00011bdf      e913ffffff     jmp 0x11af7
0x00011be4      0f1f4000       nop dword [rax]
0x00011be8      4c8d642410     lea r12, [rsp + 0x10]
0x00011bed      31f6           xor esi, esi
0x00011bef      41be18000000   mov r14d, 0x18
0x00011bf5      4c89e7         mov rdi, r12
0x00011bf8      e8d30dffff     call sym.imp.gettimeofday
0x00011bfd      660f6f442410   movdqa xmm0, xmmword [rsp + 0x10]
0x00011c03      0f114320       movups xmmword [rbx + 0x20], xmm0
0x00011c07      e8440cffff     call sym.imp.getpid
0x00011c0c      894330         mov dword [rbx + 0x30], eax
0x00011c0f      89442410       mov dword [rsp + 0x10], eax
0x00011c13      e86811ffff     call sym.imp.getppid
0x00011c18      89442410       mov dword [rsp + 0x10], eax
0x00011c1c      894334         mov dword [rbx + 0x34], eax
0x00011c1f      bd00080000     mov ebp, 0x800
0x00011c24      b804000000     mov eax, 4
0x00011c29      4c29f5         sub rbp, r14
0x00011c2c      4883fd04       cmp rbp, 4
0x00011c30      480f47e8       cmova rbp, rax
0x00011c34      e8070dffff     call sym.imp.getuid
0x00011c39      85ed           test ebp, ebp
0x00011c3b      89442410       mov dword [rsp + 0x10], eax
0x00011c3f      4b8d4c3500     lea rcx, [r13 + r14]
0x00011c44      89ee           mov esi, ebp
0x00011c46      7414           je 0x11c5c
0x00011c48      31c0           xor eax, eax
0x00011c4a      89c2           mov edx, eax
0x00011c4c      83c001         add eax, 1
0x00011c4f      410fb63c14     movzx edi, byte [r12 + rdx]
0x00011c54      39f0           cmp eax, esi
0x00011c56      40883c11       mov byte [rcx + rdx], dil
0x00011c5a      72ee           jb 0x11c4a
0x00011c5c      4c01f5         add rbp, r14
0x00011c5f      4881fdff0700.  cmp rbp, 0x7ff
0x00011c66      0f8739ffffff   ja 0x11ba5
0x00011c6c      e81f0fffff     call sym.imp.getgid
0x00011c71      89442410       mov dword [rsp + 0x10], eax
0x00011c75      b800080000     mov eax, 0x800
0x00011c7a      ba04000000     mov edx, 4
0x00011c7f      4829e8         sub rax, rbp
0x00011c82      498d4c2d00     lea rcx, [r13 + rbp]
0x00011c87      4883f804       cmp rax, 4
0x00011c8b      480f47c2       cmova rax, rdx
0x00011c8f      85c0           test eax, eax
0x00011c91      89c6           mov esi, eax
0x00011c93      0f840cffffff   je 0x11ba5
0x00011c99      31c0           xor eax, eax
0x00011c9b      89c2           mov edx, eax
0x00011c9d      83c001         add eax, 1
0x00011ca0      410fb63c14     movzx edi, byte [r12 + rdx]
0x00011ca5      39f0           cmp eax, esi
0x00011ca7      40883c11       mov byte [rcx + rdx], dil
0x00011cab      72ee           jb 0x11c9b
0x00011cad      e9f3feffff     jmp 0x11ba5
0x00011cb2      660f1f440000   nop word [rax + rax]
0x00011cb8      31db           xor ebx, ebx
0x00011cba      e938feffff     jmp 0x11af7
0x00011cbf      e86c0cffff     call sym.imp.__stack_chk_fail
0x00011cc4      4885ed         test rbp, rbp
0x00011cc7      4d89f7         mov r15, r14
0x00011cca      b810000000     mov eax, 0x10
0x00011ccf      490f48ec       cmovs rbp, r12
0x00011cd3      4c8d642410     lea r12, [rsp + 0x10]
0x00011cd8      4929ef         sub r15, rbp
0x00011cdb      4983ff10       cmp r15, 0x10
0x00011cdf      4c89e7         mov rdi, r12
0x00011ce2      4c0f47f8       cmova r15, rax
0x00011ce6      31f6           xor esi, esi
0x00011ce8      e8e30cffff     call sym.imp.gettimeofday
0x00011ced      498d442d00     lea rax, [r13 + rbp]
0x00011cf2      4c01fd         add rbp, r15
0x00011cf5      4489f9         mov ecx, r15d
0x00011cf8      4881fdff0700.  cmp rbp, 0x7ff
0x00011cff      4c89e6         mov rsi, r12
0x00011d02      4889c7         mov rdi, rax
0x00011d05      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x00011d07      0f8798feffff   ja 0x11ba5
0x00011d0d      4d89f7         mov r15, r14
0x00011d10      41b804000000   mov r8d, 4
0x00011d16      4929ef         sub r15, rbp
0x00011d19      4c89442408     mov qword [rsp + 8], r8
0x00011d1e      4983ff04       cmp r15, 4
0x00011d22      4d0f47f8       cmova r15, r8
0x00011d26      4a8d543d00     lea rdx, [rbp + r15]
0x00011d2b      4c01ed         add rbp, r13
0x00011d2e      48891424       mov qword [rsp], rdx
0x00011d32      e8190bffff     call sym.imp.getpid
0x00011d37      488b1424       mov rdx, qword [rsp]
0x00011d3b      89442410       mov dword [rsp + 0x10], eax
0x00011d3f      4489f9         mov ecx, r15d
0x00011d42      4889ef         mov rdi, rbp
0x00011d45      4c89e6         mov rsi, r12
0x00011d48      4c8b442408     mov r8, qword [rsp + 8]
0x00011d4d      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x00011d4f      4881faff0700.  cmp rdx, 0x7ff
0x00011d56      0f8f49feffff   jg 0x11ba5
0x00011d5c      4929d6         sub r14, rdx
0x00011d5f      4983fe04       cmp r14, 4
0x00011d63      4d0f47f0       cmova r14, r8
0x00011d67      e81410ffff     call sym.imp.getppid
0x00011d6c      488b1424       mov rdx, qword [rsp]
0x00011d70      89442410       mov dword [rsp + 0x10], eax
0x00011d74      4489f1         mov ecx, r14d
0x00011d77      4c89e6         mov rsi, r12
0x00011d7a      498d441500     lea rax, [r13 + rdx]
0x00011d7f      4901d6         add r14, rdx
0x00011d82      4981feff0700.  cmp r14, 0x7ff
0x00011d89      4889c7         mov rdi, rax
0x00011d8c      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x00011d8e      0f8711feffff   ja 0x11ba5
0x00011d94      e986feffff     jmp 0x11c1f
0x00011d99      0f1f80000000.  nop dword [rax]
;-- randread_set_handler:
0x00011da0      48897708       mov qword [rdi + 8], rsi
0x00011da4      c3             ret
0x00011da5      90             nop
0x00011da6      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread_set_handler_arg:
0x00011db0      48897710       mov qword [rdi + 0x10], rsi
0x00011db4      c3             ret
0x00011db5      90             nop
0x00011db6      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread:
0x00011dc0      4157           push r15
0x00011dc2      4156           push r14
0x00011dc4      4155           push r13
0x00011dc6      4154           push r12
0x00011dc8      4989fc         mov r12, rdi
0x00011dcb      55             push rbp
0x00011dcc      53             push rbx
0x00011dcd      4889d5         mov rbp, rdx
0x00011dd0      4889f3         mov rbx, rsi
0x00011dd3      4883ec18       sub rsp, 0x18
0x00011dd7      488b0f         mov rcx, qword [rdi]
0x00011dda      4885c9         test rcx, rcx
0x00011ddd      48894c2408     mov qword [rsp + 8], rcx
0x00011de2      7464           je 0x11e48
0x00011de4      e88709ffff     call sym.imp.__errno_location
0x00011de9      488b4c2408     mov rcx, qword [rsp + 8]
0x00011dee      4989c5         mov r13, rax
0x00011df1      eb23           jmp 0x11e16
0x00011df3      0f1f440000     nop dword [rax + rax]
0x00011df8      498b0424       mov rax, qword [r12]
0x00011dfc      498b7c2410     mov rdi, qword [r12 + 0x10]
0x00011e01      8b00           mov eax, dword [rax]
0x00011e03      83e020         and eax, 0x20                           ; "@"
0x00011e06      0f45c2         cmovne eax, edx
0x00011e09      41894500       mov dword [r13], eax
0x00011e0d      41ff542408     call qword [r12 + 8]
0x00011e12      498b0c24       mov rcx, qword [r12]
0x00011e16      4889ea         mov rdx, rbp
0x00011e19      4889df         mov rdi, rbx
0x00011e1c      be01000000     mov esi, 1
0x00011e21      e83a0affff     call sym.imp.fread_unlocked
0x00011e26      4801c3         add rbx, rax
0x00011e29      4829c5         sub rbp, rax
0x00011e2c      418b5500       mov edx, dword [r13]
0x00011e30      75c6           jne 0x11df8
0x00011e32      4883c418       add rsp, 0x18
0x00011e36      5b             pop rbx
0x00011e37      5d             pop rbp
0x00011e38      415c           pop r12
0x00011e3a      415d           pop r13
0x00011e3c      415e           pop r14
0x00011e3e      415f           pop r15
0x00011e40      c3             ret
0x00011e41      0f1f80000000.  nop dword [rax]
0x00011e48      4c8b7718       mov r14, qword [rdi + 0x18]
0x00011e4c      488d87380800.  lea rax, [rdi + 0x838]
0x00011e53      4c8d6f20       lea r13, [rdi + 0x20]
0x00011e57      4889442408     mov qword [rsp + 8], rax
0x00011e5c      4c39f2         cmp rdx, r14
0x00011e5f      0f86dd000000   jbe 0x11f42
0x00011e65      be00080000     mov esi, 0x800
0x00011e6a      4889df         mov rdi, rbx
0x00011e6d      4c89f2         mov rdx, r14
0x00011e70      4c29f6         sub rsi, r14
0x00011e73      4803742408     add rsi, qword [rsp + 8]
0x00011e78      4c01f3         add rbx, r14
0x00011e7b      4c29f5         sub rbp, r14
0x00011e7e      e8dd0cffff     call sym.imp.memcpy
0x00011e83      f6c307         test bl, 7
0x00011e86      7568           jne 0x11ef0
0x00011e88      4881fdff0700.  cmp rbp, 0x7ff
0x00011e8f      0f869e000000   jbe 0x11f33
0x00011e95      4c8dbd00f8ff.  lea r15, [rbp - 0x800]
0x00011e9c      4d89fe         mov r14, r15
0x00011e9f      4181e6ff0700.  and r14d, 0x7ff
0x00011ea6      eb14           jmp 0x11ebc
0x00011ea8      0f1f84000000.  nop dword [rax + rax]
0x00011eb0      4d39f7         cmp r15, r14
0x00011eb3      743b           je 0x11ef0
0x00011eb5      4981ef000800.  sub r15, 0x800
0x00011ebc      4889de         mov rsi, rbx
0x00011ebf      4c89ef         mov rdi, r13
0x00011ec2      4881c3000800.  add rbx, 0x800
0x00011ec9      e8e2000000     call sym.isaac_refill
0x00011ece      4d85ff         test r15, r15
0x00011ed1      4c89fd         mov rbp, r15
0x00011ed4      75da           jne 0x11eb0
0x00011ed6      49c744241800.  mov qword [r12 + 0x18], 0
0x00011edf      4883c418       add rsp, 0x18
0x00011ee3      5b             pop rbx
0x00011ee4      5d             pop rbp
0x00011ee5      415c           pop r12
0x00011ee7      415d           pop r13
0x00011ee9      415e           pop r14
0x00011eeb      415f           pop r15
0x00011eed      c3             ret
0x00011eee      6690           nop
0x00011ef0      488b742408     mov rsi, qword [rsp + 8]
0x00011ef5      4c89ef         mov rdi, r13
0x00011ef8      41be00080000   mov r14d, 0x800
0x00011efe      e8ad000000     call sym.isaac_refill
0x00011f03      4881fd000800.  cmp rbp, 0x800
0x00011f0a      0f8755ffffff   ja 0x11e65
0x00011f10      41be00080000   mov r14d, 0x800
0x00011f16      488b742408     mov rsi, qword [rsp + 8]
0x00011f1b      4889ea         mov rdx, rbp
0x00011f1e      4889df         mov rdi, rbx
0x00011f21      4929ee         sub r14, rbp
0x00011f24      e8370cffff     call sym.imp.memcpy
0x00011f29      4d89742418     mov qword [r12 + 0x18], r14
0x00011f2e      e9fffeffff     jmp 0x11e32
0x00011f33      488b742408     mov rsi, qword [rsp + 8]
0x00011f38      4c89ef         mov rdi, r13
0x00011f3b      e870000000     call sym.isaac_refill
0x00011f40      ebce           jmp 0x11f10
0x00011f42      4989c7         mov r15, rax
0x00011f45      4d29f7         sub r15, r14
0x00011f48      498d87000800.  lea rax, [r15 + 0x800]
0x00011f4f      4889442408     mov qword [rsp + 8], rax
0x00011f54      ebc0           jmp 0x11f16
0x00011f56      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread_free:
0x00011f60      55             push rbp
0x00011f61      53             push rbx
0x00011f62      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00011f69      4889fb         mov rbx, rdi
0x00011f6c      be38100000     mov esi, 0x1038
0x00011f71      4883ec08       sub rsp, 8
0x00011f75      488b2f         mov rbp, qword [rdi]
0x00011f78      e8430dffff     call sym.imp.__explicit_bzero_chk
0x00011f7d      4889df         mov rdi, rbx
0x00011f80      e88b0effff     call sym..plt.got
0x00011f85      4885ed         test rbp, rbp
0x00011f88      7416           je 0x11fa0
0x00011f8a      4883c408       add rsp, 8
0x00011f8e      4889ef         mov rdi, rbp
0x00011f91      5b             pop rbx
0x00011f92      5d             pop rbp
0x00011f93      e9f8040000     jmp sym.rpl_fclose
0x00011f98      0f1f84000000.  nop dword [rax + rax]
0x00011fa0      4883c408       add rsp, 8
0x00011fa4      31c0           xor eax, eax
0x00011fa6      5b             pop rbx
0x00011fa7      5d             pop rbp
0x00011fa8      c3             ret
0x00011fa9      0f1f80000000.  nop dword [rax]
;-- isaac_refill:
0x00011fb0      488b87100800.  mov rax, qword [rdi + 0x810]
0x00011fb7      488b97000800.  mov rdx, qword [rdi + 0x800]
0x00011fbe      4c8d8f000400.  lea r9, [rdi + 0x400]
0x00011fc5      488d4801       lea rcx, [rax + 1]
0x00011fc9      4889f8         mov rax, rdi
0x00011fcc      48898f100800.  mov qword [rdi + 0x810], rcx
0x00011fd3      48038f080800.  add rcx, qword [rdi + 0x808]
0x00011fda      660f1f440000   nop word [rax + rax]
0x00011fe0      4989d0         mov r8, rdx
0x00011fe3      49c1e015       shl r8, 0x15
0x00011fe7      4c31c2         xor rdx, r8
0x00011fea      4c8b00         mov r8, qword [rax]
0x00011fed      48f7d2         not rdx
0x00011ff0      480390000400.  add rdx, qword [rax + 0x400]
0x00011ff7      4d89c2         mov r10, r8
0x00011ffa      4181e2f80700.  and r10d, 0x7f8
0x00012001      4e8b1c17       mov r11, qword [rdi + r10]
0x00012005      4989d2         mov r10, rdx
0x00012008      49c1ea05       shr r10, 5
0x0001200c      4901d3         add r11, rdx
0x0001200f      4c31d2         xor rdx, r10
0x00012012      4c01d9         add rcx, r11
0x00012015      488908         mov qword [rax], rcx
0x00012018      48c1e908       shr rcx, 8
0x0001201c      81e1f8070000   and ecx, 0x7f8
0x00012022      4c8b1c0f       mov r11, qword [rdi + rcx]
0x00012026      4d01c3         add r11, r8
0x00012029      4c891e         mov qword [rsi], r11
0x0001202c      480390080400.  add rdx, qword [rax + 0x408]
0x00012033      488b4808       mov rcx, qword [rax + 8]
0x00012037      4989d2         mov r10, rdx
0x0001203a      4889ca         mov rdx, rcx
0x0001203d      81e2f8070000   and edx, 0x7f8
0x00012043      4c8b0417       mov r8, qword [rdi + rdx]
0x00012047      4c89d2         mov rdx, r10
0x0001204a      48c1e20c       shl rdx, 0xc
0x0001204e      4c31d2         xor rdx, r10
0x00012051      4d01d0         add r8, r10
0x00012054      4d01d8         add r8, r11
0x00012057      4c894008       mov qword [rax + 8], r8
0x0001205b      49c1e808       shr r8, 8
0x0001205f      4181e0f80700.  and r8d, 0x7f8
0x00012066      4a030c07       add rcx, qword [rdi + r8]
0x0001206a      48894e08       mov qword [rsi + 8], rcx
0x0001206e      4c8b4010       mov r8, qword [rax + 0x10]
0x00012072      4989cb         mov r11, rcx
0x00012075      480390100400.  add rdx, qword [rax + 0x410]
0x0001207c      4c89c1         mov rcx, r8
0x0001207f      81e1f8070000   and ecx, 0x7f8
0x00012085      4c8b140f       mov r10, qword [rdi + rcx]
0x00012089      4901d2         add r10, rdx
0x0001208c      4c89d1         mov rcx, r10
0x0001208f      4c01d9         add rcx, r11
0x00012092      48894810       mov qword [rax + 0x10], rcx
0x00012096      48c1e908       shr rcx, 8
0x0001209a      81e1f8070000   and ecx, 0x7f8
0x000120a0      4c8b140f       mov r10, qword [rdi + rcx]
0x000120a4      4889d1         mov rcx, rdx
0x000120a7      48c1e921       shr rcx, 0x21
0x000120ab      4831ca         xor rdx, rcx
0x000120ae      4d01c2         add r10, r8
0x000120b1      4c895610       mov qword [rsi + 0x10], r10
0x000120b5      488b4818       mov rcx, qword [rax + 0x18]
0x000120b9      480390180400.  add rdx, qword [rax + 0x418]
0x000120c0      4989c8         mov r8, rcx
0x000120c3      4181e0f80700.  and r8d, 0x7f8
0x000120ca      4e8b1c07       mov r11, qword [rdi + r8]
0x000120ce      4901d3         add r11, rdx
0x000120d1      4d89d8         mov r8, r11
0x000120d4      4d01d0         add r8, r10
0x000120d7      4883c020       add rax, 0x20                           ; "@"
0x000120db      4883c620       add rsi, 0x20                           ; "@"
0x000120df      4c8940f8       mov qword [rax - 8], r8
0x000120e3      49c1e808       shr r8, 8
0x000120e7      4181e0f80700.  and r8d, 0x7f8
0x000120ee      4a030c07       add rcx, qword [rdi + r8]
0x000120f2      48894ef8       mov qword [rsi - 8], rcx
0x000120f6      4c39c8         cmp rax, r9
0x000120f9      0f82e1feffff   jb 0x11fe0
0x000120ff      4c8d8f000800.  lea r9, [rdi + 0x800]
0x00012106      662e0f1f8400.  nop word cs:[rax + rax]
0x00012110      4989d0         mov r8, rdx
0x00012113      49c1e015       shl r8, 0x15
0x00012117      4c31c2         xor rdx, r8
0x0001211a      4c8b00         mov r8, qword [rax]
0x0001211d      48f7d2         not rdx
0x00012120      48039000fcff.  add rdx, qword [rax - 0x400]
0x00012127      4d89c2         mov r10, r8
0x0001212a      4181e2f80700.  and r10d, 0x7f8
0x00012131      4e8b1c17       mov r11, qword [rdi + r10]
0x00012135      4989d2         mov r10, rdx
0x00012138      49c1ea05       shr r10, 5
0x0001213c      4901d3         add r11, rdx
0x0001213f      4c31d2         xor rdx, r10
0x00012142      4c01d9         add rcx, r11
0x00012145      488908         mov qword [rax], rcx
0x00012148      48c1e908       shr rcx, 8
0x0001214c      81e1f8070000   and ecx, 0x7f8
0x00012152      4c8b1c0f       mov r11, qword [rdi + rcx]
0x00012156      4d01c3         add r11, r8
0x00012159      4c891e         mov qword [rsi], r11
0x0001215c      48039008fcff.  add rdx, qword [rax - 0x3f8]
0x00012163      488b4808       mov rcx, qword [rax + 8]
0x00012167      4989d2         mov r10, rdx
0x0001216a      4889ca         mov rdx, rcx
0x0001216d      81e2f8070000   and edx, 0x7f8
0x00012173      4c8b0417       mov r8, qword [rdi + rdx]
0x00012177      4c89d2         mov rdx, r10
0x0001217a      48c1e20c       shl rdx, 0xc
0x0001217e      4c31d2         xor rdx, r10
0x00012181      4d01d0         add r8, r10
0x00012184      4d01d8         add r8, r11
0x00012187      4c894008       mov qword [rax + 8], r8
0x0001218b      49c1e808       shr r8, 8
0x0001218f      4181e0f80700.  and r8d, 0x7f8
0x00012196      4a030c07       add rcx, qword [rdi + r8]
0x0001219a      48894e08       mov qword [rsi + 8], rcx
0x0001219e      4c8b4010       mov r8, qword [rax + 0x10]
0x000121a2      4989cb         mov r11, rcx
0x000121a5      48039010fcff.  add rdx, qword [rax - 0x3f0]
0x000121ac      4c89c1         mov rcx, r8
0x000121af      81e1f8070000   and ecx, 0x7f8
0x000121b5      4c8b140f       mov r10, qword [rdi + rcx]
0x000121b9      4901d2         add r10, rdx
0x000121bc      4c89d1         mov rcx, r10
0x000121bf      4c01d9         add rcx, r11
0x000121c2      48894810       mov qword [rax + 0x10], rcx
0x000121c6      48c1e908       shr rcx, 8
0x000121ca      81e1f8070000   and ecx, 0x7f8
0x000121d0      4c8b140f       mov r10, qword [rdi + rcx]
0x000121d4      4889d1         mov rcx, rdx
0x000121d7      48c1e921       shr rcx, 0x21
0x000121db      4831ca         xor rdx, rcx
0x000121de      4d01c2         add r10, r8
0x000121e1      4c895610       mov qword [rsi + 0x10], r10
0x000121e5      488b4818       mov rcx, qword [rax + 0x18]
0x000121e9      48039018fcff.  add rdx, qword [rax - 0x3e8]
0x000121f0      4989c8         mov r8, rcx
0x000121f3      4181e0f80700.  and r8d, 0x7f8
0x000121fa      4e8b1c07       mov r11, qword [rdi + r8]
0x000121fe      4901d3         add r11, rdx
0x00012201      4d89d8         mov r8, r11
0x00012204      4d01d0         add r8, r10
0x00012207      4883c020       add rax, 0x20                           ; "@"
0x0001220b      4883c620       add rsi, 0x20                           ; "@"
0x0001220f      4c8940f8       mov qword [rax - 8], r8
0x00012213      49c1e808       shr r8, 8
0x00012217      4181e0f80700.  and r8d, 0x7f8
0x0001221e      4a030c07       add rcx, qword [rdi + r8]
0x00012222      48894ef8       mov qword [rsi - 8], rcx
0x00012226      4c39c8         cmp rax, r9
0x00012229      0f82e1feffff   jb 0x12110
0x0001222f      488997000800.  mov qword [rdi + 0x800], rdx
0x00012236      48898f080800.  mov qword [rdi + 0x808], rcx
0x0001223d      c3             ret
0x0001223e      6690           nop
;-- isaac_seed:
0x00012240      4155           push r13
0x00012242      4154           push r12
0x00012244      4c8da7000800.  lea r12, [rdi + 0x800]
0x0001224b      55             push rbp
0x0001224c      4889fa         mov rdx, rdi
0x0001224f      53             push rbx
0x00012250      4889f8         mov rax, rdi
0x00012253      48b9abc0446c.  movabs rcx, 0x98f5704f6c44c0ab
0x0001225d      49baed89fccb.  movabs r10, 0xae985bf2cbfc89ed
0x00012267      48bd1593a0a5.  movabs rbp, 0x48fe4a0fa5a09315
0x00012271      48becee05583.  movabs rsi, 0x82f053db8355e0ce
0x0001227b      49b82455594a.  movabs r8, 0xb29b2e824a595524
0x00012285      48bba012473d.  movabs rbx, 0x8c0ea5053d4712a0
0x0001228f      49bb62c83ac7.  movabs r11, 0xb9f8b322c73ac862
0x00012299      49b97c4b88a2.  movabs r9, 0x647c4677a2884b7c
0x000122a3      0f1f440000     nop dword [rax + rax]
0x000122a8      48037020       add rsi, qword [rax + 0x20]
0x000122ac      48034838       add rcx, qword [rax + 0x38]
0x000122b0      4c8b28         mov r13, qword [rax]
0x000122b3      48036828       add rbp, qword [rax + 0x28]
0x000122b7      4c035030       add r10, qword [rax + 0x30]
0x000122bb      4929f5         sub r13, rsi
0x000122be      4d01e9         add r9, r13
0x000122c1      4989cd         mov r13, rcx
0x000122c4      49c1ed09       shr r13, 9
0x000122c8      4c01c9         add rcx, r9
0x000122cb      4c31ed         xor rbp, r13
0x000122ce      4c8b6808       mov r13, qword [rax + 8]
0x000122d2      4929ed         sub r13, rbp
0x000122d5      4d01eb         add r11, r13
0x000122d8      4d89cd         mov r13, r9
0x000122db      49c1e509       shl r13, 9
0x000122df      4d01d9         add r9, r11
0x000122e2      4d31ea         xor r10, r13
0x000122e5      4c8b6810       mov r13, qword [rax + 0x10]
0x000122e9      4d29d5         sub r13, r10
0x000122ec      4c01eb         add rbx, r13
0x000122ef      4d89dd         mov r13, r11
0x000122f2      49c1ed17       shr r13, 0x17
0x000122f6      4901db         add r11, rbx
0x000122f9      4c31e9         xor rcx, r13
0x000122fc      4c8b6818       mov r13, qword [rax + 0x18]
0x00012300      4929cd         sub r13, rcx
0x00012303      4d01e8         add r8, r13
0x00012306      4989dd         mov r13, rbx
0x00012309      49c1e50f       shl r13, 0xf
0x0001230d      4c01c3         add rbx, r8
0x00012310      4d31e9         xor r9, r13
0x00012313      4d89c5         mov r13, r8
0x00012316      4c29ce         sub rsi, r9
0x00012319      49c1ed0e       shr r13, 0xe
0x0001231d      4c8908         mov qword [rax], r9
0x00012320      4d31eb         xor r11, r13
0x00012323      4989f5         mov r13, rsi
0x00012326      4901f0         add r8, rsi
0x00012329      4c29dd         sub rbp, r11
0x0001232c      49c1e514       shl r13, 0x14
0x00012330      4c895808       mov qword [rax + 8], r11
0x00012334      4c31eb         xor rbx, r13
0x00012337      4c8d2c2e       lea r13, [rsi + rbp]
0x0001233b      4889ee         mov rsi, rbp
0x0001233e      4929da         sub r10, rbx
0x00012341      48c1ee11       shr rsi, 0x11
0x00012345      48895810       mov qword [rax + 0x10], rbx
0x00012349      4931f0         xor r8, rsi
0x0001234c      4c89d6         mov rsi, r10
0x0001234f      4c01d5         add rbp, r10
0x00012352      4c29c1         sub rcx, r8
0x00012355      48c1e60e       shl rsi, 0xe
0x00012359      4c894018       mov qword [rax + 0x18], r8
0x0001235d      4c31ee         xor rsi, r13
0x00012360      4901ca         add r10, rcx
0x00012363      48896828       mov qword [rax + 0x28], rbp
0x00012367      48897020       mov qword [rax + 0x20], rsi
0x0001236b      4c895030       mov qword [rax + 0x30], r10
0x0001236f      4883c040       add rax, 0x40                           ; segment.PHDR
0x00012373      488948f8       mov qword [rax - 8], rcx
0x00012377      4939c4         cmp r12, rax
0x0001237a      0f8528ffffff   jne 0x122a8
0x00012380      48037220       add rsi, qword [rdx + 0x20]
0x00012384      48034a38       add rcx, qword [rdx + 0x38]
0x00012388      4c8b22         mov r12, qword [rdx]
0x0001238b      48036a28       add rbp, qword [rdx + 0x28]
0x0001238f      4c035230       add r10, qword [rdx + 0x30]
0x00012393      4929f4         sub r12, rsi
0x00012396      4d01e1         add r9, r12
0x00012399      4989cc         mov r12, rcx
0x0001239c      49c1ec09       shr r12, 9
0x000123a0      4c01c9         add rcx, r9
0x000123a3      4c31e5         xor rbp, r12
0x000123a6      4c8b6208       mov r12, qword [rdx + 8]
0x000123aa      4929ec         sub r12, rbp
0x000123ad      4d01e3         add r11, r12
0x000123b0      4d89cc         mov r12, r9
0x000123b3      49c1e409       shl r12, 9
0x000123b7      4d01d9         add r9, r11
0x000123ba      4d31e2         xor r10, r12
0x000123bd      4c8b6210       mov r12, qword [rdx + 0x10]
0x000123c1      4d29d4         sub r12, r10
0x000123c4      4c01e3         add rbx, r12
0x000123c7      4d89dc         mov r12, r11
0x000123ca      49c1ec17       shr r12, 0x17
0x000123ce      4901db         add r11, rbx
0x000123d1      4c31e1         xor rcx, r12
0x000123d4      4c8b6218       mov r12, qword [rdx + 0x18]
0x000123d8      4929cc         sub r12, rcx
0x000123db      4d01e0         add r8, r12
0x000123de      4989dc         mov r12, rbx
0x000123e1      49c1e40f       shl r12, 0xf
0x000123e5      4c01c3         add rbx, r8
0x000123e8      4d31e1         xor r9, r12
0x000123eb      4d89c4         mov r12, r8
0x000123ee      4c29ce         sub rsi, r9
0x000123f1      49c1ec0e       shr r12, 0xe
0x000123f5      4c890a         mov qword [rdx], r9
0x000123f8      4d31e3         xor r11, r12
0x000123fb      4989f4         mov r12, rsi
0x000123fe      4901f0         add r8, rsi
0x00012401      4c29dd         sub rbp, r11
0x00012404      49c1e414       shl r12, 0x14
0x00012408      4c895a08       mov qword [rdx + 8], r11
0x0001240c      4c31e3         xor rbx, r12
0x0001240f      4c8d242e       lea r12, [rsi + rbp]
0x00012413      4889ee         mov rsi, rbp
0x00012416      4929da         sub r10, rbx
0x00012419      48c1ee11       shr rsi, 0x11
0x0001241d      48895a10       mov qword [rdx + 0x10], rbx
0x00012421      4931f0         xor r8, rsi
0x00012424      4c89d6         mov rsi, r10
0x00012427      4c01d5         add rbp, r10
0x0001242a      4c29c1         sub rcx, r8
0x0001242d      48c1e60e       shl rsi, 0xe
0x00012431      4c894218       mov qword [rdx + 0x18], r8
0x00012435      4c31e6         xor rsi, r12
0x00012438      4901ca         add r10, rcx
0x0001243b      48896a28       mov qword [rdx + 0x28], rbp
0x0001243f      48897220       mov qword [rdx + 0x20], rsi
0x00012443      4c895230       mov qword [rdx + 0x30], r10
0x00012447      4883c240       add rdx, 0x40                           ; segment.PHDR
0x0001244b      48894af8       mov qword [rdx - 8], rcx
0x0001244f      4839d0         cmp rax, rdx
0x00012452      0f8528ffffff   jne 0x12380
0x00012458      5b             pop rbx
0x00012459      48c787100800.  mov qword [rdi + 0x810], 0
0x00012464      48c787080800.  mov qword [rdi + 0x808], 0
0x0001246f      5d             pop rbp
0x00012470      48c787000800.  mov qword [rdi + 0x800], 0
0x0001247b      415c           pop r12
0x0001247d      415d           pop r13
0x0001247f      c3             ret
;-- dup_safer:
0x00012480      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x00012485      31f6           xor esi, esi
0x00012487      31c0           xor eax, eax
0x00012489      e982000000     jmp sym.rpl_fcntl
0x0001248e      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- rpl_fclose:
0x00012490      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00012492      55             push rbp
0x00012493      53             push rbx
0x00012494      4889fb         mov rbx, rdi
0x00012497      e8e406ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0001249c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0001249e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x000124a1      7854           js 0x124f7                              ; ../coreutils-8.31/lib/fclose.c:66
0x000124a3      e86807ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x000124a8      85c0           test eax, eax
0x000124aa      752c           jne 0x124d8
0x000124ac      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x000124af      e89ceeffff     call sym.rpl_fflush
0x000124b4      85c0           test eax, eax
0x000124b6      743c           je 0x124f4
0x000124b8      e8b302ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x000124bd      448b20         mov r12d, dword [rax]
0x000124c0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000124c3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x000124c6      e8c503ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x000124cb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x000124ce      7530           jne 0x12500
0x000124d0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000124d1      5d             pop rbp
0x000124d2      415c           pop r12
0x000124d4      c3             ret
0x000124d5      0f1f00         nop dword [rax]
0x000124d8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x000124db      e8a006ffff     call sym.imp.fileno
0x000124e0      31f6           xor esi, esi
0x000124e2      ba01000000     mov edx, 1
0x000124e7      89c7           mov edi, eax
0x000124e9      e8d204ffff     call sym.imp.lseek
0x000124ee      4883f8ff       cmp rax, 0xffffffffffffffff
0x000124f2      75b8           jne 0x124ac
0x000124f4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000124f7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000124f8      5d             pop rbp
0x000124f9      415c           pop r12
0x000124fb      e99003ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00012500      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00012504      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00012509      ebc5           jmp 0x124d0
0x0001250b      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x00012510      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x00012512      55             push rbp
0x00012513      89fd           mov ebp, edi
0x00012515      53             push rbx
0x00012516      4883ec50       sub rsp, 0x50
0x0001251a      64488b042528.  mov rax, qword fs:[0x28]
0x00012523      4889442418     mov qword [rsp + 0x18], rax
0x00012528      31c0           xor eax, eax
0x0001252a      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x0001252f      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x00012531      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x00012536      48894c2438     mov qword [rsp + 0x38], rcx
0x0001253b      4c89442440     mov qword [rsp + 0x40], r8
0x00012540      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x00012545      488d442420     lea rax, [rsp + 0x20]
0x0001254a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x0001254f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x00012556      4889442410     mov qword [rsp + 0x10], rax
0x0001255b      0f8401020000   je 0x12762                              ; ../coreutils-8.31/lib/fcntl.c:210
0x00012561      81fe06040000   cmp esi, 0x406
0x00012567      7547           jne 0x125b0
0x00012569      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x0001256e      833d9f812000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x21a714:4]=0
0x00012575      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x36d0 rip
0x0001257c      448b6010       mov r12d, dword [rax + 0x10]
0x00012580      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00012583      0f882a010000   js 0x126b3                              ; ../coreutils-8.31/lib/fcntl.c:507
0x00012589      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0001258b      be06040000     mov esi, 0x406
0x00012590      e88b02ffff     call sym.imp.fcntl
0x00012595      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00012597      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00012599      0f8889010000   js 0x12728                              ; ../coreutils-8.31/lib/fcntl.c:510
0x0001259f      c7056b812000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x21a714:4]=0
0x000125a9      eb45           jmp 0x125f0
0x000125ab      0f1f440000     nop dword [rax + rax]
0x000125b0      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x000125b3      742b           je 0x125e0
0x000125b5      7f59           jg 0x12610
0x000125b7      83fe04         cmp esi, 4
0x000125ba      0f84d0000000   je 0x12690
0x000125c0      0f8fba000000   jg 0x12680
0x000125c6      83fe02         cmp esi, 2
0x000125c9      0f84c1000000   je 0x12690
0x000125cf      7f0f           jg 0x125e0
0x000125d1      83fe01         cmp esi, 1
0x000125d4      7562           jne 0x12638
0x000125d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000125e0      89ef           mov edi, ebp
0x000125e2      31c0           xor eax, eax
0x000125e4      e83702ffff     call sym.imp.fcntl
0x000125e9      89c3           mov ebx, eax
0x000125eb      0f1f440000     nop dword [rax + rax]
0x000125f0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000125f5      6448330c2528.  xor rcx, qword fs:[0x28]
0x000125fe      89d8           mov eax, ebx
0x00012600      0f8557010000   jne 0x1275d                             ; ../coreutils-8.31/lib/fcntl.c:355
0x00012606      4883c450       add rsp, 0x50
0x0001260a      5b             pop rbx
0x0001260b      5d             pop rbp
0x0001260c      415c           pop r12
0x0001260e      c3             ret
0x0001260f      90             nop
0x00012610      81fe07040000   cmp esi, 0x407
0x00012616      7f48           jg 0x12660
0x00012618      81fe06040000   cmp esi, 0x406
0x0001261e      7d70           jge 0x12690
0x00012620      81fe01040000   cmp esi, 0x401
0x00012626      74b8           je 0x125e0
0x00012628      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x0001262e      7460           je 0x12690
0x00012630      81fe00040000   cmp esi, 0x400
0x00012636      7458           je 0x12690
0x00012638      8b0424         mov eax, dword [rsp]
0x0001263b      83f82f         cmp eax, 0x2f
0x0001263e      0f8736010000   ja 0x1277a
0x00012644      4803442410     add rax, qword [rsp + 0x10]
0x00012649      488b10         mov rdx, qword [rax]
0x0001264c      89ef           mov edi, ebp
0x0001264e      31c0           xor eax, eax
0x00012650      e8cb01ffff     call sym.imp.fcntl
0x00012655      89c3           mov ebx, eax
0x00012657      eb97           jmp 0x125f0
0x00012659      0f1f80000000.  nop dword [rax]
0x00012660      81fe09040000   cmp esi, 0x409
0x00012666      7428           je 0x12690
0x00012668      0f8c72ffffff   jl 0x125e0
0x0001266e      81fe0a040000   cmp esi, 0x40a
0x00012674      75c2           jne 0x12638
0x00012676      e965ffffff     jmp 0x125e0                             ; ../coreutils-8.31/lib/fcntl.c:350
0x0001267b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00012680      83fe09         cmp esi, 9
0x00012683      0f8457ffffff   je 0x125e0
0x00012689      7f05           jg 0x12690
0x0001268b      83fe08         cmp esi, 8
0x0001268e      75a8           jne 0x12638
0x00012690      8b0424         mov eax, dword [rsp]
0x00012693      83f82f         cmp eax, 0x2f
0x00012696      0f87e8000000   ja 0x12784
0x0001269c      4803442410     add rax, qword [rsp + 0x10]
0x000126a1      8b10           mov edx, dword [rax]
0x000126a3      89ef           mov edi, ebp
0x000126a5      31c0           xor eax, eax
0x000126a7      e87401ffff     call sym.imp.fcntl
0x000126ac      89c3           mov ebx, eax
0x000126ae      e93dffffff     jmp 0x125f0
0x000126b3      31f6           xor esi, esi
0x000126b5      31c0           xor eax, eax
0x000126b7      e86401ffff     call sym.imp.fcntl
0x000126bc      85c0           test eax, eax
0x000126be      89c3           mov ebx, eax
0x000126c0      0f882affffff   js 0x125f0
0x000126c6      833d47802000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x21a714:4]=0
0x000126cd      0f851dffffff   jne 0x125f0
0x000126d3      31c0           xor eax, eax
0x000126d5      be01000000     mov esi, 1
0x000126da      89df           mov edi, ebx
0x000126dc      e83f01ffff     call sym.imp.fcntl
0x000126e1      85c0           test eax, eax
0x000126e3      781c           js 0x12701
0x000126e5      83c801         or eax, 1
0x000126e8      be02000000     mov esi, 2
0x000126ed      89df           mov edi, ebx
0x000126ef      89c2           mov edx, eax
0x000126f1      31c0           xor eax, eax
0x000126f3      e82801ffff     call sym.imp.fcntl
0x000126f8      83f8ff         cmp eax, 0xffffffff
0x000126fb      0f85effeffff   jne 0x125f0
0x00012701      e86a00ffff     call sym.imp.__errno_location
0x00012706      448b20         mov r12d, dword [rax]
0x00012709      4889c5         mov rbp, rax
0x0001270c      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x0001270e      e81d03ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x00012713      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00012718      44896500       mov dword [rbp], r12d
0x0001271c      e9cffeffff     jmp 0x125f0
0x00012721      0f1f80000000.  nop dword [rax]
0x00012728      e84300ffff     call sym.imp.__errno_location
0x0001272d      833816         cmp dword [rax], 0x16
0x00012730      0f8569feffff   jne 0x1259f
0x00012736      31f6           xor esi, esi
0x00012738      31c0           xor eax, eax
0x0001273a      4489e2         mov edx, r12d
0x0001273d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x0001273f      e8dc00ffff     call sym.imp.fcntl
0x00012744      85c0           test eax, eax
0x00012746      89c3           mov ebx, eax
0x00012748      0f88a2feffff   js 0x125f0
0x0001274e      c705bc7f2000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x21a714:4]=0
0x00012758      e976ffffff     jmp 0x126d3
0x0001275d      e8ce01ffff     call sym.imp.__stack_chk_fail
0x00012762      488b442410     mov rax, qword [rsp + 0x10]
0x00012767      31f6           xor esi, esi
0x00012769      8b5010         mov edx, dword [rax + 0x10]
0x0001276c      31c0           xor eax, eax
0x0001276e      e8ad00ffff     call sym.imp.fcntl
0x00012773      89c3           mov ebx, eax
0x00012775      e976feffff     jmp 0x125f0
0x0001277a      488b442408     mov rax, qword [rsp + 8]
0x0001277f      e9c5feffff     jmp 0x12649
0x00012784      488b442408     mov rax, qword [rsp + 8]
0x00012789      e913ffffff     jmp 0x126a1
0x0001278e      6690           nop
;-- fopen_safer:
0x00012790      4154           push r12                                ; ../coreutils-8.31/lib/fopen-safer.c:32
0x00012792      55             push rbp                                ; /b/sys:258
0x00012793      4889f5         mov rbp, rsi                            ; /b/sys:377
0x00012796      53             push rbx                                ; /b/sys:718
0x00012797      e86405ffff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/fopen-safer.c:33
0x0001279c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fopen-safer.c:35
0x0001279f      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:33
0x000127a2      740d           je 0x127b1                              ; ../coreutils-8.31/lib/fopen-safer.c:35
0x000127a4      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:37
0x000127a7      e8d403ffff     call sym.imp.fileno
0x000127ac      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/fopen-safer.c:39
0x000127af      760f           jbe 0x127c0
0x000127b1      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:63
0x000127b4      5b             pop rbx                                 ; /stdio.h:9
0x000127b5      5d             pop rbp
0x000127b6      415c           pop r12
0x000127b8      c3             ret
0x000127b9      0f1f80000000.  nop dword [rax]
0x000127c0      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fopen-safer.c:41
0x000127c2      e8b9fcffff     call sym.dup_safer
0x000127c7      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:43
0x000127c9      4189c4         mov r12d, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:41
0x000127cc      783a           js 0x12808                              ; ../coreutils-8.31/lib/fopen-safer.c:43
0x000127ce      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:51
0x000127d1      e8bafcffff     call sym.rpl_fclose
0x000127d6      85c0           test eax, eax
0x000127d8      7513           jne 0x127ed                             ; /stdio.h:13
0x000127da      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fopen-safer.c:52
0x000127dd      4489e7         mov edi, r12d
0x000127e0      e84b04ffff     call sym.imp.fdopen
0x000127e5      4885c0         test rax, rax
0x000127e8      4889c3         mov rbx, rax
0x000127eb      75c4           jne 0x127b1
0x000127ed      e87efffeff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:54
0x000127f2      8b28           mov ebp, dword [rax]
0x000127f4      4889c3         mov rbx, rax
0x000127f7      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/fopen-safer.c:55
0x000127fa      e83102ffff     call sym.imp.close
0x000127ff      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/fopen-safer.c:56
0x00012801      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:57
0x00012803      ebac           jmp 0x127b1
0x00012805      0f1f00         nop dword [rax]
0x00012808      e863fffeff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:45
0x0001280d      448b20         mov r12d, dword [rax]
0x00012810      4889c5         mov rbp, rax
0x00012813      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:46
0x00012816      e875fcffff     call sym.rpl_fclose
0x0001281b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:48
0x0001281d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fopen-safer.c:47
0x00012821      eb8e           jmp 0x127b1                             ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00012823      662e0f1f8400.  nop word cs:[rax + rax]
0x0001282d      0f1f00         nop dword [rax]
;-- __libc_csu_init:
0x00012830      4157           push r15                                ; /stdio.h:18
0x00012832      4156           push r14
0x00012834      4989d7         mov r15, rdx
0x00012837      4155           push r13
0x00012839      4154           push r12
0x0001283b      4c8d25ee6c20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x219530
0x00012842      55             push rbp
0x00012843      488d2dee6c20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x219538
0x0001284a      53             push rbx                                ; /stdio.h:23
0x0001284b      4189fd         mov r13d, edi
0x0001284e      4989f6         mov r14, rsi
0x00012851      4c29e5         sub rbp, r12
0x00012854      4883ec08       sub rsp, 8
0x00012858      48c1fd03       sar rbp, 3                              ; /r.c:3182
0x0001285c      e8affefeff     call sym._init
0x00012861      4885ed         test rbp, rbp
0x00012864      7420           je 0x12886                              ; /b/sys:829
0x00012866      31db           xor ebx, ebx
0x00012868      0f1f84000000.  nop dword [rax + rax]
0x00012870      4c89fa         mov rdx, r15
0x00012873      4c89f6         mov rsi, r14
0x00012876      4489ef         mov edi, r13d
0x00012879      41ff14dc       call qword [r12 + rbx*8]
0x0001287d      4883c301       add rbx, 1
0x00012881      4839dd         cmp rbp, rbx
0x00012884      75ea           jne 0x12870
0x00012886      4883c408       add rsp, 8
0x0001288a      5b             pop rbx
0x0001288b      5d             pop rbp
0x0001288c      415c           pop r12
0x0001288e      415d           pop r13
0x00012890      415e           pop r14
0x00012892      415f           pop r15
0x00012894      c3             ret
0x00012895      90             nop
0x00012896      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x000128a0      f3c3           ret                                     ; /stdio.h:25
0x000128a2      662e0f1f8400.  nop word cs:[rax + rax]
0x000128ac      0f1f4000       nop dword [rax]
;-- atexit:
0x000128b0      488b15517720.  mov rdx, qword [obj.__dso_handle]       ; [0x21a008:8]=0x21a008 obj.__dso_handle
0x000128b7      31f6           xor esi, esi
0x000128b9      e99204ffff     jmp sym.imp.__cxa_atexit
0x000128be      0000           add byte [rax], al
