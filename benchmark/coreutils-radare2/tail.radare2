;-- section..plt:
;-- .plt:
0x00001ac0      ff35cae22000   push qword [0x0020fd90]                 ; [12] -r-x section size 1152 named .plt
0x00001ac6      ff25cce22000   jmp qword [0x0020fd98]                  ; [0x20fd98:8]=0
0x00001acc      0f1f4000       nop dword [rax]
;-- imp.getenv:
0x00001ad0      ff25cae22000   jmp qword [reloc.getenv]                ; [0x20fda0:8]=0x1ad6
0x00001ad6      6800000000     push 0
0x00001adb      e9e0ffffff     jmp sym..plt
;-- imp.raise:
0x00001ae0      ff25c2e22000   jmp qword [reloc.raise]                 ; [0x20fda8:8]=0x1ae6
0x00001ae6      6801000000     push 1
0x00001aeb      e9d0ffffff     jmp sym..plt
;-- imp.free:
0x00001af0      ff25bae22000   jmp qword [reloc.free]                  ; [0x20fdb0:8]=0x1af6
0x00001af6      6802000000     push 2
0x00001afb      e9c0ffffff     jmp sym..plt
;-- imp.abort:
0x00001b00      ff25b2e22000   jmp qword [reloc.abort]                 ; [0x20fdb8:8]=0x1b06
0x00001b06      6803000000     push 3
0x00001b0b      e9b0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001b10      ff25aae22000   jmp qword [reloc.__errno_location]      ; [0x20fdc0:8]=0x1b16
0x00001b16      6804000000     push 4
0x00001b1b      e9a0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001b20      ff25a2e22000   jmp qword [reloc.strncmp]               ; [0x20fdc8:8]=0x1b26 ; "&\x1b"
0x00001b26      6805000000     push 5
0x00001b2b      e990ffffff     jmp sym..plt
;-- imp._exit:
0x00001b30      ff259ae22000   jmp qword [reloc._exit]                 ; [0x20fdd0:8]=0x1b36 ; "6\x1b"
0x00001b36      6806000000     push 6
0x00001b3b      e980ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001b40      ff2592e22000   jmp qword [reloc.__fpending]            ; [0x20fdd8:8]=0x1b46 ; "F\x1b"
0x00001b46      6807000000     push 7
0x00001b4b      e970ffffff     jmp sym..plt
;-- imp.isatty:
0x00001b50      ff258ae22000   jmp qword [reloc.isatty]                ; [0x20fde0:8]=0x1b56 ; "V\x1b"
0x00001b56      6808000000     push 8
0x00001b5b      e960ffffff     jmp sym..plt
;-- imp.strtod:
0x00001b60      ff2582e22000   jmp qword [reloc.strtod]                ; [0x20fde8:8]=0x1b66 ; "f\x1b"
0x00001b66      6809000000     push 9
0x00001b6b      e950ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001b70      ff257ae22000   jmp qword [reloc.fcntl]                 ; [0x20fdf0:8]=0x1b76 ; "v\x1b"
0x00001b76      680a000000     push 0xa
0x00001b7b      e940ffffff     jmp sym..plt
;-- imp.clearerr_unlocked:
0x00001b80      ff2572e22000   jmp qword [reloc.clearerr_unlocked]     ; [0x20fdf8:8]=0x1b86
0x00001b86      680b000000     push 0xb
0x00001b8b      e930ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001b90      ff256ae22000   jmp qword [reloc.textdomain]            ; [0x20fe00:8]=0x1b96
0x00001b96      680c000000     push 0xc
0x00001b9b      e920ffffff     jmp sym..plt
;-- imp.strtod_l:
0x00001ba0      ff2562e22000   jmp qword [reloc.strtod_l]              ; [0x20fe08:8]=0x1ba6
0x00001ba6      680d000000     push 0xd
0x00001bab      e910ffffff     jmp sym..plt
;-- imp.fclose:
0x00001bb0      ff255ae22000   jmp qword [reloc.fclose]                ; [0x20fe10:8]=0x1bb6
0x00001bb6      680e000000     push 0xe
0x00001bbb      e900ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001bc0      ff2552e22000   jmp qword [reloc.bindtextdomain]        ; [0x20fe18:8]=0x1bc6
0x00001bc6      680f000000     push 0xf
0x00001bcb      e9f0feffff     jmp sym..plt
;-- imp.dcgettext:
0x00001bd0      ff254ae22000   jmp qword [reloc.dcgettext]             ; [0x20fe20:8]=0x1bd6
0x00001bd6      6810000000     push 0x10
0x00001bdb      e9e0feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001be0      ff2542e22000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20fe28:8]=0x1be6
0x00001be6      6811000000     push 0x11
0x00001beb      e9d0feffff     jmp sym..plt
;-- imp.strlen:
0x00001bf0      ff253ae22000   jmp qword [reloc.strlen]                ; [0x20fe30:8]=0x1bf6
0x00001bf6      6812000000     push 0x12
0x00001bfb      e9c0feffff     jmp sym..plt
;-- imp.__lxstat:
0x00001c00      ff2532e22000   jmp qword [reloc.__lxstat]              ; [0x20fe38:8]=0x1c06
0x00001c06      6813000000     push 0x13
0x00001c0b      e9b0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001c10      ff252ae22000   jmp qword [reloc.__stack_chk_fail]      ; [0x20fe40:8]=0x1c16
0x00001c16      6814000000     push 0x14
0x00001c1b      e9a0feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001c20      ff2522e22000   jmp qword [reloc.getopt_long]           ; [0x20fe48:8]=0x1c26 ; "&\x1c"
0x00001c26      6815000000     push 0x15
0x00001c2b      e990feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001c30      ff251ae22000   jmp qword [reloc.mbrtowc]               ; [0x20fe50:8]=0x1c36 ; "6\x1c"
0x00001c36      6816000000     push 0x16
0x00001c3b      e980feffff     jmp sym..plt
;-- imp.strchr:
0x00001c40      ff2512e22000   jmp qword [reloc.strchr]                ; [0x20fe58:8]=0x1c46 ; "F\x1c"
0x00001c46      6817000000     push 0x17
0x00001c4b      e970feffff     jmp sym..plt
;-- imp.__fdelt_chk:
0x00001c50      ff250ae22000   jmp qword [reloc.__fdelt_chk]           ; [0x20fe60:8]=0x1c56 ; "V\x1c"
0x00001c56      6818000000     push 0x18
0x00001c5b      e960feffff     jmp sym..plt
;-- imp.newlocale:
0x00001c60      ff2502e22000   jmp qword [reloc.newlocale]             ; [0x20fe68:8]=0x1c66 ; "f\x1c"
0x00001c66      6819000000     push 0x19
0x00001c6b      e950feffff     jmp sym..plt
;-- imp.nanosleep:
0x00001c70      ff25fae12000   jmp qword [reloc.nanosleep]             ; [0x20fe70:8]=0x1c76 ; "v\x1c"
0x00001c76      681a000000     push 0x1a
0x00001c7b      e940feffff     jmp sym..plt
;-- imp.__overflow:
0x00001c80      ff25f2e12000   jmp qword [reloc.__overflow]            ; [0x20fe78:8]=0x1c86
0x00001c86      681b000000     push 0x1b
0x00001c8b      e930feffff     jmp sym..plt
;-- imp.strrchr:
0x00001c90      ff25eae12000   jmp qword [reloc.strrchr]               ; [0x20fe80:8]=0x1c96
0x00001c96      681c000000     push 0x1c
0x00001c9b      e920feffff     jmp sym..plt
;-- imp.lseek:
0x00001ca0      ff25e2e12000   jmp qword [reloc.lseek]                 ; [0x20fe88:8]=0x1ca6
0x00001ca6      681d000000     push 0x1d
0x00001cab      e910feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001cb0      ff25dae12000   jmp qword [reloc.__assert_fail]         ; [0x20fe90:8]=0x1cb6
0x00001cb6      681e000000     push 0x1e
0x00001cbb      e900feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00001cc0      ff25d2e12000   jmp qword [reloc.__strtoul_internal]    ; [0x20fe98:8]=0x1cc6
0x00001cc6      681f000000     push 0x1f
0x00001ccb      e9f0fdffff     jmp sym..plt
;-- imp.memset:
0x00001cd0      ff25cae12000   jmp qword [reloc.memset]                ; [0x20fea0:8]=0x1cd6
0x00001cd6      6820000000     push 0x20                               ; "@"
0x00001cdb      e9e0fdffff     jmp sym..plt
;-- imp.close:
0x00001ce0      ff25c2e12000   jmp qword [reloc.close]                 ; [0x20fea8:8]=0x1ce6
0x00001ce6      6821000000     push 0x21                               ; '!'
0x00001ceb      e9d0fdffff     jmp sym..plt
;-- imp.memchr:
0x00001cf0      ff25bae12000   jmp qword [reloc.memchr]                ; [0x20feb0:8]=0x1cf6
0x00001cf6      6822000000     push 0x22                               ; '"'
0x00001cfb      e9c0fdffff     jmp sym..plt
;-- imp.read:
0x00001d00      ff25b2e12000   jmp qword [reloc.read]                  ; [0x20feb8:8]=0x1d06
0x00001d06      6823000000     push 0x23                               ; '#'
0x00001d0b      e9b0fdffff     jmp sym..plt
;-- imp.memcmp:
0x00001d10      ff25aae12000   jmp qword [reloc.memcmp]                ; [0x20fec0:8]=0x1d16
0x00001d16      6824000000     push 0x24                               ; '$'
0x00001d1b      e9a0fdffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001d20      ff25a2e12000   jmp qword [reloc.fputs_unlocked]        ; [0x20fec8:8]=0x1d26 ; "&\x1d"
0x00001d26      6825000000     push 0x25                               ; '%'
0x00001d2b      e990fdffff     jmp sym..plt
;-- imp.calloc:
0x00001d30      ff259ae12000   jmp qword [reloc.calloc]                ; [0x20fed0:8]=0x1d36 ; "6\x1d"
0x00001d36      6826000000     push 0x26                               ; '&'
0x00001d3b      e980fdffff     jmp sym..plt
;-- imp.strcmp:
0x00001d40      ff2592e12000   jmp qword [reloc.strcmp]                ; [0x20fed8:8]=0x1d46 ; "F\x1d"
0x00001d46      6827000000     push 0x27                               ; '''
0x00001d4b      e970fdffff     jmp sym..plt
;-- imp.strtol:
0x00001d50      ff258ae12000   jmp qword [reloc.strtol]                ; [0x20fee0:8]=0x1d56 ; "V\x1d"
0x00001d56      6828000000     push 0x28                               ; '('
0x00001d5b      e960fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001d60      ff2582e12000   jmp qword [reloc.memcpy]                ; [0x20fee8:8]=0x1d66 ; "f\x1d"
0x00001d66      6829000000     push 0x29                               ; ')'
0x00001d6b      e950fdffff     jmp sym..plt
;-- imp.kill:
0x00001d70      ff257ae12000   jmp qword [reloc.kill]                  ; [0x20fef0:8]=0x1d76 ; "v\x1d"
0x00001d76      682a000000     push 0x2a                               ; '*'
0x00001d7b      e940fdffff     jmp sym..plt
;-- imp.inotify_init:
0x00001d80      ff2572e12000   jmp qword [reloc.inotify_init]          ; [0x20fef8:8]=0x1d86
0x00001d86      682b000000     push 0x2b                               ; '+'
0x00001d8b      e930fdffff     jmp sym..plt
;-- imp.fileno:
0x00001d90      ff256ae12000   jmp qword [reloc.fileno]                ; [0x20ff00:8]=0x1d96
0x00001d96      682c000000     push 0x2c                               ; ','
0x00001d9b      e920fdffff     jmp sym..plt
;-- imp.select:
0x00001da0      ff2562e12000   jmp qword [reloc.select]                ; [0x20ff08:8]=0x1da6
0x00001da6      682d000000     push 0x2d                               ; '-'
0x00001dab      e910fdffff     jmp sym..plt
;-- imp.__xstat:
0x00001db0      ff255ae12000   jmp qword [reloc.__xstat]               ; [0x20ff10:8]=0x1db6
0x00001db6      682e000000     push 0x2e                               ; '.'
0x00001dbb      e900fdffff     jmp sym..plt
;-- imp.malloc:
0x00001dc0      ff2552e12000   jmp qword [reloc.malloc]                ; [0x20ff18:8]=0x1dc6
0x00001dc6      682f000000     push 0x2f                               ; '/'
0x00001dcb      e9f0fcffff     jmp sym..plt
;-- imp.fflush:
0x00001dd0      ff254ae12000   jmp qword [reloc.fflush]                ; [0x20ff20:8]=0x1dd6
0x00001dd6      6830000000     push 0x30                               ; '0'
0x00001ddb      e9e0fcffff     jmp sym..plt
;-- imp.inotify_add_watch:
0x00001de0      ff2542e12000   jmp qword [reloc.inotify_add_watch]     ; [0x20ff28:8]=0x1de6
0x00001de6      6831000000     push 0x31                               ; '1'
0x00001deb      e9d0fcffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001df0      ff253ae12000   jmp qword [reloc.nl_langinfo]           ; [0x20ff30:8]=0x1df6
0x00001df6      6832000000     push 0x32                               ; '2'
0x00001dfb      e9c0fcffff     jmp sym..plt
;-- imp.__fxstat:
0x00001e00      ff2532e12000   jmp qword [reloc.__fxstat]              ; [0x20ff38:8]=0x1e06
0x00001e06      6833000000     push 0x33                               ; '3'
0x00001e0b      e9b0fcffff     jmp sym..plt
;-- imp.__freading:
0x00001e10      ff252ae12000   jmp qword [reloc.__freading]            ; [0x20ff40:8]=0x1e16
0x00001e16      6834000000     push 0x34                               ; '4'
0x00001e1b      e9a0fcffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001e20      ff2522e12000   jmp qword [reloc.fwrite_unlocked]       ; [0x20ff48:8]=0x1e26 ; "&\x1e"
0x00001e26      6835000000     push 0x35                               ; '5'
0x00001e2b      e990fcffff     jmp sym..plt
;-- imp.realloc:
0x00001e30      ff251ae12000   jmp qword [reloc.realloc]               ; [0x20ff50:8]=0x1e36 ; "6\x1e"
0x00001e36      6836000000     push 0x36                               ; '6'
0x00001e3b      e980fcffff     jmp sym..plt
;-- imp.setlocale:
0x00001e40      ff2512e12000   jmp qword [reloc.setlocale]             ; [0x20ff58:8]=0x1e46 ; "F\x1e"
0x00001e46      6837000000     push 0x37                               ; '7'
0x00001e4b      e970fcffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001e50      ff250ae12000   jmp qword [reloc.__printf_chk]          ; [0x20ff60:8]=0x1e56 ; "V\x1e"
0x00001e56      6838000000     push 0x38                               ; '8'
0x00001e5b      e960fcffff     jmp sym..plt
;-- imp.error:
0x00001e60      ff2502e12000   jmp qword [reloc.error]                 ; [0x20ff68:8]=0x1e66 ; "f\x1e"
0x00001e66      6839000000     push 0x39                               ; '9'
0x00001e6b      e950fcffff     jmp sym..plt
;-- imp.memrchr:
0x00001e70      ff25fae02000   jmp qword [reloc.memrchr]               ; [0x20ff70:8]=0x1e76 ; "v\x1e"
0x00001e76      683a000000     push 0x3a                               ; ':'
0x00001e7b      e940fcffff     jmp sym..plt
;-- imp.open:
0x00001e80      ff25f2e02000   jmp qword [reloc.open]                  ; [0x20ff78:8]=0x1e86
0x00001e86      683b000000     push 0x3b                               ; ';'
0x00001e8b      e930fcffff     jmp sym..plt
;-- imp.fseeko:
0x00001e90      ff25eae02000   jmp qword [reloc.fseeko]                ; [0x20ff80:8]=0x1e96
0x00001e96      683c000000     push 0x3c                               ; '<'
0x00001e9b      e920fcffff     jmp sym..plt
;-- imp.fstatfs:
0x00001ea0      ff25e2e02000   jmp qword [reloc.fstatfs]               ; [0x20ff88:8]=0x1ea6
0x00001ea6      683d000000     push 0x3d                               ; '='
0x00001eab      e910fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001eb0      ff25dae02000   jmp qword [reloc.__cxa_atexit]          ; [0x20ff90:8]=0x1eb6
0x00001eb6      683e000000     push 0x3e                               ; '>'
0x00001ebb      e900fcffff     jmp sym..plt
;-- imp.exit:
0x00001ec0      ff25d2e02000   jmp qword [reloc.exit]                  ; [0x20ff98:8]=0x1ec6
0x00001ec6      683f000000     push 0x3f                               ; '?'
0x00001ecb      e9f0fbffff     jmp sym..plt
;-- imp.fwrite:
0x00001ed0      ff25cae02000   jmp qword [reloc.fwrite]                ; [0x20ffa0:8]=0x1ed6
0x00001ed6      6840000000     push 0x40                               ; segment.PHDR
0x00001edb      e9e0fbffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001ee0      ff25c2e02000   jmp qword [reloc.__fprintf_chk]         ; [0x20ffa8:8]=0x1ee6
0x00001ee6      6841000000     push 0x41                               ; 'A'
0x00001eeb      e9d0fbffff     jmp sym..plt
;-- imp.fflush_unlocked:
0x00001ef0      ff25bae02000   jmp qword [reloc.fflush_unlocked]       ; [0x20ffb0:8]=0x1ef6
0x00001ef6      6842000000     push 0x42                               ; 'B'
0x00001efb      e9c0fbffff     jmp sym..plt
;-- imp.mbsinit:
0x00001f00      ff25b2e02000   jmp qword [reloc.mbsinit]               ; [0x20ffb8:8]=0x1f06
0x00001f06      6843000000     push 0x43                               ; 'C'
0x00001f0b      e9b0fbffff     jmp sym..plt
;-- imp.iswprint:
0x00001f10      ff25aae02000   jmp qword [reloc.iswprint]              ; [0x20ffc0:8]=0x1f16
0x00001f16      6844000000     push 0x44                               ; 'D'
0x00001f1b      e9a0fbffff     jmp sym..plt
;-- imp.inotify_rm_watch:
0x00001f20      ff25a2e02000   jmp qword [reloc.inotify_rm_watch]      ; [0x20ffc8:8]=0x1f26 ; "&\x1f"
0x00001f26      6845000000     push 0x45                               ; 'E'
0x00001f2b      e990fbffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001f30      ff259ae02000   jmp qword [reloc.__ctype_b_loc]         ; [0x20ffd0:8]=0x1f36 ; "6\x1f"
0x00001f36      6846000000     push 0x46                               ; 'F'
0x00001f3b      e980fbffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001f40      .qword 0x90660020e0b225ff                              ; [13] -r-x section size 8 named .plt.got
0x00001f48      0000           add byte [rax], al
0x00001f4a      0000           add byte [rax], al
0x00001f4c      0000           add byte [rax], al
0x00001f4e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001f50      4157           push r15                                ; [14] -r-x section size 38558 named .text
0x00001f52      4156           push r14
0x00001f54      4155           push r13
0x00001f56      4154           push r12
0x00001f58      55             push rbp
0x00001f59      53             push rbx
0x00001f5a      89fb           mov ebx, edi
0x00001f5c      4889f5         mov rbp, rsi
0x00001f5f      4881ecc80200.  sub rsp, 0x2c8
0x00001f66      488b3e         mov rdi, qword [rsi]
0x00001f69      64488b042528.  mov rax, qword fs:[0x28]
0x00001f72      48898424b802.  mov qword [rsp + 0x2b8], rax
0x00001f7a      31c0           xor eax, eax
0x00001f7c      48c784249000.  mov qword [rsp + 0x90], 0xa
0x00001f88      e853610000     call sym.set_program_name
0x00001f8d      488d356db000.  lea rsi, [0x0000d001]
0x00001f94      bf06000000     mov edi, 6
0x00001f99      e8a2feffff     call sym.imp.setlocale
0x00001f9e      488d35319800.  lea rsi, str.usr_local_share_locale     ; 0xb7d6 ; "/usr/local/share/locale"
0x00001fa5      488d3dff9700.  lea rdi, [0x0000b7ab]                   ; "coreutils"
0x00001fac      e80ffcffff     call sym.imp.bindtextdomain
0x00001fb1      488d3df39700.  lea rdi, [0x0000b7ab]                   ; "coreutils"
0x00001fb8      e8d3fbffff     call sym.imp.textdomain
0x00001fbd      488d3d7c4a00.  lea rdi, sym.close_stdout               ; 0x6a40 ; "USH\x83\xec\bH\x8b={\x96 "
0x00001fc4      e817960000     call sym.atexit
0x00001fc9      83fb02         cmp ebx, 2
0x00001fcc      c6053be12000.  mov byte [obj.have_read_stdin], 0       ; [0x21010e:1]=0
0x00001fd3      c6053fe12000.  mov byte [obj.count_lines], 1           ; [0x210119:1]=0
0x00001fda      c60534e12000.  mov byte [obj.print_headers], 0         ; [0x210115:1]=0
0x00001fe1      c6052ee12000.  mov byte [obj.from_start], 0            ; [0x210116:1]=0
0x00001fe8      c60529e12000.  mov byte [obj.forever], 0               ; [0x210118:1]=0
0x00001fef      c6051ee12000.  mov byte [obj.line_end], 0xa            ; [0x210114:1]=0
0x00001ff6      0f84cd030000   je 0x23c9
0x00001ffc      83fb03         cmp ebx, 3
0x00001fff      0f84b7030000   je 0x23bc
0x00002005      83fb04         cmp ebx, 4
0x00002008      0f8446080000   je 0x2854
0x0000200e      31c0           xor eax, eax
0x00002010      f20f101548a9.  movsd xmm2, qword [0x0000c960]          ; [0xc960:8]=0x3ff0000000000000
0x00002018      0fb6d0         movzx edx, al
0x0000201b      4c8dbc24b000.  lea r15, [rsp + 0xb0]
0x00002023      4c8d64c500     lea r12, [rbp + rax*8]
0x00002028      29d3           sub ebx, edx
0x0000202a      31ed           xor ebp, ebp
0x0000202c      f20f11542430   movsd qword [rsp + 0x30], xmm2
0x00002032      41be01000000   mov r14d, 1
0x00002038      0f1f84000000.  nop dword [rax + rax]
0x00002040      488d0dd9d820.  lea rcx, obj.long_options               ; 0x20f920 ; "3\xb8"
0x00002047      488d15649800.  lea rdx, str.c:n:fFqs:vz0123456789      ; 0xb8b2 ; "c:n:fFqs:vz0123456789"
0x0000204e      4531c0         xor r8d, r8d
0x00002051      4c89e6         mov rsi, r12
0x00002054      89df           mov edi, ebx
0x00002056      e8c5fbffff     call sym.imp.getopt_long
0x0000205b      83f8ff         cmp eax, 0xffffffff
0x0000205e      0f848e040000   je 0x24f2
0x00002064      83f871         cmp eax, 0x71
0x00002067      0f842b010000   je 0x2198
0x0000206d      7e41           jle 0x20b0
0x0000206f      3d81000000     cmp eax, 0x81
0x00002074      0f842e010000   je 0x21a8
0x0000207a      7f74           jg 0x20f0
0x0000207c      83f876         cmp eax, 0x76
0x0000207f      0f84fb010000   je 0x2280
0x00002085      0f8e75010000   jle 0x2200
0x0000208b      83f87a         cmp eax, 0x7a
0x0000208e      0f845c010000   je 0x21f0
0x00002094      83c080         add eax, 0xffffff80
0x00002097      0f85d41b0000   jne 0x3c71
0x0000209d      c60576e02000.  mov byte [obj.reopen_inaccessible_files], 1 ; [0x21011a:1]=0
0x000020a4      eb9a           jmp 0x2040
0x000020a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000020b0      83f839         cmp eax, 0x39
0x000020b3      7e73           jle 0x2128
0x000020b5      83f863         cmp eax, 0x63
0x000020b8      0f84e0010000   je 0x229e
0x000020be      0f8fcc010000   jg 0x2290
0x000020c4      83f846         cmp eax, 0x46
0x000020c7      0f85a41b0000   jne 0x3c71
0x000020cd      c60544e02000.  mov byte [obj.forever], 1               ; [0x210118:1]=0
0x000020d4      44893545df20.  mov dword [obj.follow_mode], r14d       ; [0x210020:4]=2
0x000020db      c60538e02000.  mov byte [obj.reopen_inaccessible_files], 1 ; [0x21011a:1]=0
0x000020e2      e959ffffff     jmp 0x2040
0x000020e7      660f1f840000.  nop word [rax + rax]
0x000020f0      3d83000000     cmp eax, 0x83
0x000020f5      0f84b5020000   je 0x23b0
0x000020fb      0f8c67020000   jl 0x2368
0x00002101      3d84000000     cmp eax, 0x84
0x00002106      0f8404020000   je 0x2310
0x0000210c      3d85000000     cmp eax, 0x85
0x00002111      0f855a1b0000   jne 0x3c71
0x00002117      c605eedf2000.  mov byte [obj.disable_inotify], 1       ; [0x21010c:1]=0
0x0000211e      e91dffffff     jmp 0x2040
0x00002123      0f1f440000     nop dword [rax + rax]
0x00002128      83f830         cmp eax, 0x30
0x0000212b      4189c5         mov r13d, eax
0x0000212e      0f8d161b0000   jge 0x3c4a
0x00002134      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00002139      0f85fd1a0000   jne 0x3c3c
0x0000213f      488d054e9700.  lea rax, str.Jim_Meyering               ; 0xb894 ; "Jim Meyering"
0x00002146      4883ec08       sub rsp, 8
0x0000214a      488b3d77df20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x00002151      6a00           push 0
0x00002153      488b0dd6de20.  mov rcx, qword [obj.Version]            ; [0x210030:8]=0xc970 ; "p\xc9"
0x0000215a      4c8d0d189700.  lea r9, str.David_MacKenzie             ; 0xb879 ; "David MacKenzie"
0x00002161      50             push rax
0x00002162      488d05389700.  lea rax, str.Ian_Lance_Taylor           ; 0xb8a1 ; "Ian Lance Taylor"
0x00002169      4c8d05199700.  lea r8, str.Paul_Rubin                  ; 0xb889 ; "Paul Rubin"
0x00002170      488d15309600.  lea rdx, str.GNU_coreutils              ; 0xb7a7 ; "GNU coreutils"
0x00002177      488d35ae9500.  lea rsi, str.tail                       ; 0xb72c ; "tail"
0x0000217e      50             push rax
0x0000217f      31c0           xor eax, eax
0x00002181      e8ea810000     call sym.version_etc
0x00002186      4883c420       add rsp, 0x20
0x0000218a      31ff           xor edi, edi
0x0000218c      e82ffdffff     call sym.imp.exit
0x00002191      0f1f80000000.  nop dword [rax]
0x00002198      bd02000000     mov ebp, 2
0x0000219d      e99efeffff     jmp 0x2040
0x000021a2      660f1f440000   nop word [rax + rax]
0x000021a8      488d35f1a400.  lea rsi, str.invalid_maximum_number_of_unchanged_stats_between_opens ; 0xc6a0 ; "invalid maximum number of unchanged stats between opens"
0x000021af      ba05000000     mov edx, 5
0x000021b4      31ff           xor edi, edi
0x000021b6      e815faffff     call sym.imp.dcgettext
0x000021bb      488b3d16df20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100d8:8]=0
0x000021c2      488d0d38ae00.  lea rcx, [0x0000d001]
0x000021c9      4989c0         mov r8, rax
0x000021cc      4531c9         xor r9d, r9d
0x000021cf      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000021d6      31f6           xor esi, esi
0x000021d8      e883860000     call sym.xdectoumax
0x000021dd      48890534de20.  mov qword [obj.max_n_unchanged_stats_between_opens], rax ; [0x210018:8]=5
0x000021e4      e957feffff     jmp 0x2040
0x000021e9      0f1f80000000.  nop dword [rax]
0x000021f0      c6051ddf2000.  mov byte [obj.line_end], 0              ; [0x210114:1]=0
0x000021f7      e944feffff     jmp 0x2040
0x000021fc      0f1f4000       nop dword [rax]
0x00002200      83f873         cmp eax, 0x73
0x00002203      0f85681a0000   jne 0x3c71
0x00002209      488d0d504700.  lea rcx, sym.cl_strtod                  ; 0x6960 ; "AUATUSH\x89\xf3H\x89\xfdH\x83\xec8H\x8dt$\x18dH\x8b\x04%("
0x00002210      488b3dc1de20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100d8:8]=0
0x00002217      31f6           xor esi, esi
0x00002219      4c89fa         mov rdx, r15
0x0000221c      e8ef860000     call sym.xstrtod
0x00002221      84c0           test al, al
0x00002223      741d           je 0x2242
0x00002225      660fefdb       pxor xmm3, xmm3
0x00002229      f20f108c24b0.  movsd xmm1, qword [rsp + 0xb0]
0x00002232      660f2ecb       ucomisd xmm1, xmm3
0x00002236      f20f114c2430   movsd qword [rsp + 0x30], xmm1
0x0000223c      0f83fefdffff   jae 0x2040
0x00002242      488b3d8fde20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100d8:8]=0
0x00002249      e8a27b0000     call sym.quote
0x0000224e      488d35069600.  lea rsi, str.invalid_number_of_seconds:__s ; 0xb85b ; "invalid number of seconds: %s"
0x00002255      4889c3         mov rbx, rax
0x00002258      ba05000000     mov edx, 5
0x0000225d      31ff           xor edi, edi
0x0000225f      e86cf9ffff     call sym.imp.dcgettext
0x00002264      4889d9         mov rcx, rbx
0x00002267      4889c2         mov rdx, rax
0x0000226a      31f6           xor esi, esi
0x0000226c      bf01000000     mov edi, 1
0x00002271      31c0           xor eax, eax
0x00002273      e8e8fbffff     call sym.imp.error
0x00002278      0f1f84000000.  nop dword [rax + rax]
0x00002280      bd01000000     mov ebp, 1
0x00002285      e9b6fdffff     jmp 0x2040
0x0000228a      660f1f440000   nop word [rax + rax]
0x00002290      83f866         cmp eax, 0x66
0x00002293      747b           je 0x2310
0x00002295      83f86e         cmp eax, 0x6e
0x00002298      0f85d3190000   jne 0x3c71
0x0000229e      488b0d33de20.  mov rcx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100d8:8]=0
0x000022a5      83f86e         cmp eax, 0x6e
0x000022a8      0f94056ade20.  sete byte [obj.count_lines]
0x000022af      0fb611         movzx edx, byte [rcx]
0x000022b2      80fa2b         cmp dl, 0x2b
0x000022b5      0f842b020000   je 0x24e6
0x000022bb      80fa2d         cmp dl, 0x2d
0x000022be      0f84ad050000   je 0x2871
0x000022c4      83f86e         cmp eax, 0x6e
0x000022c7      ba05000000     mov edx, 5
0x000022cc      0f84ef010000   je 0x24c1
0x000022d2      488d35489500.  lea rsi, str.invalid_number_of_bytes    ; 0xb821 ; "invalid number of bytes"
0x000022d9      31ff           xor edi, edi
0x000022db      e8f0f8ffff     call sym.imp.dcgettext
0x000022e0      4989c0         mov r8, rax
0x000022e3      488b3deedd20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100d8:8]=0
0x000022ea      488d0d489500.  lea rcx, str.bkKmMGTPEZY0               ; 0xb839 ; "bkKmMGTPEZY0"
0x000022f1      4531c9         xor r9d, r9d
0x000022f4      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000022fb      31f6           xor esi, esi
0x000022fd      e85e850000     call sym.xdectoumax
0x00002302      488984249000.  mov qword [rsp + 0x90], rax
0x0000230a      e931fdffff     jmp 0x2040
0x0000230f      90             nop
0x00002310      488b35c1dd20.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100d8:8]=0
0x00002317      c605fadd2000.  mov byte [obj.forever], 1               ; [0x210118:1]=0
0x0000231e      4885f6         test rsi, rsi
0x00002321      0f84b0010000   je 0x24d7
0x00002327      4c8b0d0add20.  mov r9, qword [obj.argmatch_die]        ; [0x210038:8]=0x65d0 sym.__argmatch_die
0x0000232e      488d15ebd720.  lea rdx, obj.follow_mode_string         ; 0x20fb20
0x00002335      488d0d1ca600.  lea rcx, obj.follow_mode_map            ; 0xc958
0x0000233c      488d3d039500.  lea rdi, str.follow                     ; 0xb846 ; "--follow"
0x00002343      41b804000000   mov r8d, 4
0x00002349      e852450000     call sym.__xargmatch_internal
0x0000234e      488d1503a600.  lea rdx, obj.follow_mode_map            ; 0xc958
0x00002355      8b0482         mov eax, dword [rdx + rax*4]
0x00002358      8905c2dc2000   mov dword [obj.follow_mode], eax        ; [0x210020:4]=2
0x0000235e      e9ddfcffff     jmp 0x2040
0x00002363      0f1f440000     nop dword [rax + rax]
0x00002368      488d35e09400.  lea rsi, str.invalid_PID                ; 0xb84f ; "invalid PID"
0x0000236f      ba05000000     mov edx, 5
0x00002374      31ff           xor edi, edi
0x00002376      e855f8ffff     call sym.imp.dcgettext
0x0000237b      488b3d56dd20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100d8:8]=0
0x00002382      488d0d78ac00.  lea rcx, [0x0000d001]
0x00002389      4989c0         mov r8, rax
0x0000238c      4531c9         xor r9d, r9d
0x0000238f      baffffff7f     mov edx, 0x7fffffff
0x00002394      31f6           xor esi, esi
0x00002396      e8c5840000     call sym.xdectoumax
0x0000239b      89056fdd2000   mov dword [obj.pid], eax                ; [0x210110:4]=0
0x000023a1      e99afcffff     jmp 0x2040
0x000023a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000023b0      c60556dd2000.  mov byte [obj.presume_input_pipe], 1    ; [0x21010d:1]=0
0x000023b7      e984fcffff     jmp 0x2040
0x000023bc      488b7d10       mov rdi, qword [rbp + 0x10]
0x000023c0      803f2d         cmp byte [rdi], 0x2d
0x000023c3      0f8421050000   je 0x28ea
0x000023c9      e8825c0000     call sym.posix2_version
0x000023ce      488b5508       mov rdx, qword [rbp + 8]
0x000023d2      8db050f2fcff   lea esi, [rax - 0x30db0]
0x000023d8      0fb60a         movzx ecx, byte [rdx]
0x000023db      488d7a01       lea rdi, [rdx + 1]
0x000023df      80f92b         cmp cl, 0x2b
0x000023e2      0f8455040000   je 0x283d
0x000023e8      80f92d         cmp cl, 0x2d
0x000023eb      0f851dfcffff   jne 0x200e
0x000023f1      3daf0d0300     cmp eax, 0x30daf
0x000023f6      7e14           jle 0x240c
0x000023f8      31c0           xor eax, eax
0x000023fa      807a0163       cmp byte [rdx + 1], 0x63
0x000023fe      0f94c0         sete al
0x00002401      807c020100     cmp byte [rdx + rax + 1], 0
0x00002406      0f8402fcffff   je 0x200e
0x0000240c      4531e4         xor r12d, r12d
0x0000240f      0fbe4201       movsx eax, byte [rdx + 1]
0x00002413      4889fa         mov rdx, rdi
0x00002416      89c1           mov ecx, eax
0x00002418      83e830         sub eax, 0x30
0x0000241b      83f809         cmp eax, 9
0x0000241e      7711           ja 0x2431
0x00002420      4883c201       add rdx, 1
0x00002424      0fbe02         movsx eax, byte [rdx]
0x00002427      89c1           mov ecx, eax
0x00002429      83e830         sub eax, 0x30
0x0000242c      83f809         cmp eax, 9
0x0000242f      76ef           jbe 0x2420
0x00002431      80f963         cmp cl, 0x63
0x00002434      0f84790e0000   je 0x32b3
0x0000243a      80f96c         cmp cl, 0x6c
0x0000243d      0f84630e0000   je 0x32a6
0x00002443      80f962         cmp cl, 0x62
0x00002446      0f843a0e0000   je 0x3286
0x0000244c      4889d0         mov rax, rdx
0x0000244f      41be01000000   mov r14d, 1
0x00002455      b90a000000     mov ecx, 0xa
0x0000245a      4531ed         xor r13d, r13d
0x0000245d      803866         cmp byte [rax], 0x66
0x00002460      750a           jne 0x246c
0x00002462      4883c001       add rax, 1
0x00002466      41bd01000000   mov r13d, 1
0x0000246c      803800         cmp byte [rax], 0
0x0000246f      0f8599fbffff   jne 0x200e
0x00002475      4839d7         cmp rdi, rdx
0x00002478      0f84190e0000   je 0x3297
0x0000247e      488d8c249000.  lea rcx, [rsp + 0x90]
0x00002486      4c8d05649300.  lea r8, [0x0000b7f1]                    ; "b"
0x0000248d      31f6           xor esi, esi
0x0000248f      ba0a000000     mov edx, 0xa
0x00002494      e847850000     call sym.xstrtoumax
0x00002499      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x0000249c      0f8572220000   jne 0x4714
0x000024a2      4488256ddc20.  mov byte [obj.from_start], r12b         ; [0x210116:1]=0
0x000024a9      44883569dc20.  mov byte [obj.count_lines], r14b        ; [0x210119:1]=0
0x000024b0      b801000000     mov eax, 1
0x000024b5      44882d5cdc20.  mov byte [obj.forever], r13b            ; [0x210118:1]=0
0x000024bc      e94ffbffff     jmp 0x2010
0x000024c1      488d35419300.  lea rsi, str.invalid_number_of_lines    ; 0xb809 ; "invalid number of lines"
0x000024c8      31ff           xor edi, edi
0x000024ca      e801f7ffff     call sym.imp.dcgettext
0x000024cf      4989c0         mov r8, rax
0x000024d2      e90cfeffff     jmp 0x22e3
0x000024d7      c7053fdb2000.  mov dword [obj.follow_mode], 2          ; [0x210020:4]=2
0x000024e1      e95afbffff     jmp 0x2040
0x000024e6      c60529dc2000.  mov byte [obj.from_start], 1            ; [0x210116:1]=0
0x000024ed      e9d2fdffff     jmp 0x22c4
0x000024f2      803d21dc2000.  cmp byte [obj.reopen_inaccessible_files], 0 ; [0x21011a:1]=0
0x000024f9      4189c5         mov r13d, eax
0x000024fc      0f84a7030000   je 0x28a9
0x00002502      803d0fdc2000.  cmp byte [obj.forever], 0               ; [0x210118:1]=0
0x00002509      0f8472030000   je 0x2881
0x0000250f      833d0adb2000.  cmp dword [obj.follow_mode], 2          ; [0x210020:4]=2
0x00002516      0f8454160000   je 0x3b70
0x0000251c      8b3deedb2000   mov edi, dword [obj.pid]                ; [0x210110:4]=0
0x00002522      85ff           test edi, edi
0x00002524      7440           je 0x2566
0x00002526      31f6           xor esi, esi
0x00002528      e843f8ffff     call sym.imp.kill
0x0000252d      85c0           test eax, eax
0x0000252f      7435           je 0x2566
0x00002531      e8daf5ffff     call sym.imp.__errno_location
0x00002536      833826         cmp dword [rax], 0x26
0x00002539      752b           jne 0x2566
0x0000253b      488d3576a200.  lea rsi, str.warning:___pid_PID_is_not_supported_on_this_system ; 0xc7b8 ; "warning: --pid=PID is not supported on this system"
0x00002542      ba05000000     mov edx, 5
0x00002547      31ff           xor edi, edi
0x00002549      e882f6ffff     call sym.imp.dcgettext
0x0000254e      31f6           xor esi, esi
0x00002550      4889c2         mov rdx, rax
0x00002553      31ff           xor edi, edi
0x00002555      31c0           xor eax, eax
0x00002557      e804f9ffff     call sym.imp.error
0x0000255c      c705aadb2000.  mov dword [obj.pid], 0                  ; [0x210110:4]=0
0x00002566      803da9db2000.  cmp byte [obj.from_start], 0            ; [0x210116:1]=0
0x0000256d      7419           je 0x2588
0x0000256f      488b84249000.  mov rax, qword [rsp + 0x90]
0x00002577      4885c0         test rax, rax
0x0000257a      740c           je 0x2588
0x0000257c      4883e801       sub rax, 1
0x00002580      488984249000.  mov qword [rsp + 0x90], rax
0x00002588      48630541db20.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2100d0:4]=0
0x0000258f      39c3           cmp ebx, eax
0x00002591      0f8f970b0000   jg 0x312e
0x00002597      488d1d8ada20.  lea rbx, obj.dummy_stdin.7874           ; 0x210028
0x0000259e      48c704240100.  mov qword [rsp], 1
0x000025a6      4c8b1424       mov r10, qword [rsp]
0x000025aa      4531c0         xor r8d, r8d
0x000025ad      31c0           xor eax, eax
0x000025af      41b901000000   mov r9d, 1
0x000025b5      0f1f00         nop dword [rax]
0x000025b8      488b34c3       mov rsi, qword [rbx + rax*8]
0x000025bc      488d3d2c9200.  lea rdi, str.b                          ; 0xb7ef ; u"-b\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u2500\u3a73\u2520s\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u696c\u656es\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u7962\u6574s\u6b62\u6d4b\u474d\u5054\u5a45\u3059\u2d00\u662d\u6c6f\u6f6cw\u6e69\u6176\u696c\u2064\u4950D\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u6573\u6f63\u646e\u3a73\u2520s\u6144\u6976\u2064\u614d\u4b63\u6e65\u697ae\u6150\u6c75\u5220\u6275\u6e69\u4a00\u6d69\u4d20\u7965\u7265\u6e69g\u6149\u206e\u614c\u636e\u2065\u6154\u6c79\u726f\u6300\u6e3a\u663a\u7146\u3a73\u7a76\u3130\u3332\u3534\u3736\u3938\u6300\u6e61\u6f6e\u2074\u6f66\u6c6c\u776f\u2520\u2073\u7962\u6e20\u6d61e\u6163\u6e6e\u746f\u6f20\u6570\u206e\u7325\u6620\u726f\u7220\u6165\u6964\u676e\u6300\u6e61\u6f6e\u2074\u7366\u6174\u2074\u7325\u6200\u6765\u6900\u6f6e\u6974\u7966\u7220\u7365\u756f\u6372\u7365\u6520\u6878\u7561\u7473\u6465\u6300\u6e61\u6f6e\u2074\u6177\u6374\u2068\u7325\u2500\u2073\u6177\u2073\u6572\u6c70\u6361\u6465\u6e00\u206f\u6966\u656c\u2073\u6572\u616d\u6e69\u6e69g\u7265\u6f72\u2072\u6572\u6461\u6e69\u2067\u6e69\u746f\u6669\u2079\u7665\u6e65t\u6163\u6e6e\u746f\u7220\u6165\u2064\u6572\u6c61\u6974\u656d\u6320\u6f6c\u6b63\u6d00\u7861\u752d\u636e\u6168\u676e\u6465\u732d\u6174\u7374\u2d00\u6964\u6173\u6c62\u2d65\u6e69\u746f\u6669y\u6970d\u702d\u6572\u7573\u656d\u692d\u706e\u7475\u702d\u7069e\u7571\u6569t\u6572\u7274y\u6973\u656c\u746e\u7300\u656c\u7065\u692d\u746e\u7265\u6176l\u6576\u6272\u736fe\u657a\u6f72\u742d\u7265\u696d\u616e\u6574d\u6568\u706c\u7600\u7265\u6973\u6e6f\u6400\u7365\u7263\u7069\u6f74r"
0x000025c3      b902000000     mov ecx, 2
0x000025c8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000025ca      0f97c2         seta dl
0x000025cd      80da00         sbb dl, 0
0x000025d0      84d2           test dl, dl
0x000025d2      450f44c1       cmove r8d, r9d
0x000025d6      4883c001       add rax, 1
0x000025da      4c39d0         cmp rax, r10
0x000025dd      72d9           jb 0x25b8
0x000025df      4584c0         test r8b, r8b
0x000025e2      746c           je 0x2650
0x000025e4      8b0536da2000   mov eax, dword [obj.follow_mode]        ; [0x210020:4]=2
0x000025ea      83f801         cmp eax, 1
0x000025ed      0f84e5210000   je 0x47d8
0x000025f3      803d1edb2000.  cmp byte [obj.forever], 0               ; [0x210118:1]=0
0x000025fa      7454           je 0x2650
0x000025fc      833d0ddb2000.  cmp dword [obj.pid], 0                  ; [0x210110:4]=0
0x00002603      0f85f0020000   jne 0x28f9
0x00002609      83f802         cmp eax, 2
0x0000260c      0f85e7020000   jne 0x28f9
0x00002612      48833c2401     cmp qword [rsp], 1
0x00002617      0f85dc020000   jne 0x28f9
0x0000261d      488d94242002.  lea rdx, [rsp + 0x220]
0x00002625      31f6           xor esi, esi
0x00002627      bf01000000     mov edi, 1
0x0000262c      e8cff7ffff     call sym.imp.__fxstat
0x00002631      85c0           test eax, eax
0x00002633      0f85c0020000   jne 0x28f9
0x00002639      8b8424380200.  mov eax, dword [rsp + sym..interp]
0x00002640      2500f00000     and eax, 0xf000
0x00002645      3d00800000     cmp eax, 0x8000
0x0000264a      0f84a9020000   je 0x28f9
0x00002650      4883bc249000.  cmp qword [rsp + 0x90], 0
0x00002659      7516           jne 0x2671
0x0000265b      803db6da2000.  cmp byte [obj.forever], 0               ; [0x210118:1]=0
0x00002662      750d           jne 0x2671
0x00002664      803dabda2000.  cmp byte [obj.from_start], 0            ; [0x210116:1]=0
0x0000266b      0f84900d0000   je 0x3401
0x00002671      ba60000000     mov edx, 0x60                           ; '`'
0x00002676      31c9           xor ecx, ecx
0x00002678      4889d0         mov rax, rdx
0x0000267b      48f72424       mul qword [rsp]
0x0000267f      0f80ad210000   jo 0x4832
0x00002685      4885c0         test rax, rax
0x00002688      0f886d1e0000   js 0x44fb
0x0000268e      4885c9         test rcx, rcx
0x00002691      0f85641e0000   jne 0x44fb
0x00002697      4c8b3424       mov r14, qword [rsp]
0x0000269b      4d6bfe60       imul r15, r14, 0x60
0x0000269f      4c89ff         mov rdi, r15
0x000026a2      4c897c2460     mov qword [rsp + 0x60], r15
0x000026a7      e8247e0000     call sym.xmalloc
0x000026ac      4d85f6         test r14, r14
0x000026af      4889442428     mov qword [rsp + 0x28], rax
0x000026b4      0f840f140000   je 0x3ac9
0x000026ba      4c89f9         mov rcx, r15
0x000026bd      4801c1         add rcx, rax
0x000026c0      488b13         mov rdx, qword [rbx]
0x000026c3      4883c060       add rax, 0x60
0x000026c7      4883c308       add rbx, 8
0x000026cb      488950a0       mov qword [rax - 0x60], rdx
0x000026cf      4839c1         cmp rcx, rax
0x000026d2      75ec           jne 0x26c0
0x000026d4      83fd01         cmp ebp, 1
0x000026d7      740b           je 0x26e4
0x000026d9      48833c2401     cmp qword [rsp], 1
0x000026de      7616           jbe 0x26f6
0x000026e0      85ed           test ebp, ebp
0x000026e2      7512           jne 0x26f6
0x000026e4      48833c2400     cmp qword [rsp], 0
0x000026e9      c60525da2000.  mov byte [obj.print_headers], 1         ; [0x210115:1]=0
0x000026f0      0f84dc130000   je 0x3ad2
0x000026f6      488d84242002.  lea rax, [rsp + 0x220]
0x000026fe      4c8b7c2428     mov r15, qword [rsp + 0x28]
0x00002703      48c744241000.  mov qword [rsp + 0x10], 0
0x0000270c      c684248b0000.  mov byte [rsp + 0x8b], 1
0x00002714      44896c2470     mov dword [rsp + 0x70], r13d
0x00002719      4889442458     mov qword [rsp + 0x58], rax
0x0000271e      6690           nop
0x00002720      488b84249000.  mov rax, qword [rsp + 0x90]
0x00002728      488d3dc09000.  lea rdi, str.b                          ; 0xb7ef ; u"-b\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u2500\u3a73\u2520s\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u696c\u656es\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u7962\u6574s\u6b62\u6d4b\u474d\u5054\u5a45\u3059\u2d00\u662d\u6c6f\u6f6cw\u6e69\u6176\u696c\u2064\u4950D\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u6573\u6f63\u646e\u3a73\u2520s\u6144\u6976\u2064\u614d\u4b63\u6e65\u697ae\u6150\u6c75\u5220\u6275\u6e69\u4a00\u6d69\u4d20\u7965\u7265\u6e69g\u6149\u206e\u614c\u636e\u2065\u6154\u6c79\u726f\u6300\u6e3a\u663a\u7146\u3a73\u7a76\u3130\u3332\u3534\u3736\u3938\u6300\u6e61\u6f6e\u2074\u6f66\u6c6c\u776f\u2520\u2073\u7962\u6e20\u6d61e\u6163\u6e6e\u746f\u6f20\u6570\u206e\u7325\u6620\u726f\u7220\u6165\u6964\u676e\u6300\u6e61\u6f6e\u2074\u7366\u6174\u2074\u7325\u6200\u6765\u6900\u6f6e\u6974\u7966\u7220\u7365\u756f\u6372\u7365\u6520\u6878\u7561\u7473\u6465\u6300\u6e61\u6f6e\u2074\u6177\u6374\u2068\u7325\u2500\u2073\u6177\u2073\u6572\u6c70\u6361\u6465\u6e00\u206f\u6966\u656c\u2073\u6572\u616d\u6e69\u6e69g\u7265\u6f72\u2072\u6572\u6461\u6e69\u2067\u6e69\u746f\u6669\u2079\u7665\u6e65t\u6163\u6e6e\u746f\u7220\u6165\u2064\u6572\u6c61\u6974\u656d\u6320\u6f6c\u6b63\u6d00\u7861\u752d\u636e\u6168\u676e\u6465\u732d\u6174\u7374\u2d00\u6964\u6173\u6c62\u2d65\u6e69\u746f\u6669y\u6970d\u702d\u6572\u7573\u656d\u692d\u706e\u7475\u702d\u7069e\u7571\u6569t\u6572\u7274y\u6973\u656c\u746e\u7300\u656c\u7065\u692d\u746e\u7265\u6176l\u6576\u6272\u736fe\u657a\u6f72\u742d\u7265\u696d\u616e\u6574d\u6568\u706c\u7600\u7265\u6973\u6e6f\u6400\u7365\u7263\u7069\u6f74r"
0x0000272f      b902000000     mov ecx, 2
0x00002734      4889442420     mov qword [rsp + 0x20], rax
0x00002739      498b07         mov rax, qword [r15]
0x0000273c      4889c6         mov rsi, rax
0x0000273f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002741      0f97c2         seta dl
0x00002744      80da00         sbb dl, 0
0x00002747      0fbef2         movsx esi, dl
0x0000274a      85f6           test esi, esi
0x0000274c      89742444       mov dword [rsp + 0x44], esi
0x00002750      0f85d8010000   jne 0x292e
0x00002756      c605b1d92000.  mov byte [obj.have_read_stdin], 1       ; [0x21010e:1]=0
0x0000275d      c74424080000.  mov dword [rsp + 8], 0
0x00002765      41c6473601     mov byte [r15 + 0x36], 1
0x0000276a      803da4d92000.  cmp byte [obj.print_headers], 0         ; [0x210115:1]=0
0x00002771      0f8575040000   jne 0x2bec
0x00002777      498b3f         mov rdi, qword [r15]
0x0000277a      e861220000     call sym.pretty_name.isra.7
0x0000277f      4889442448     mov qword [rsp + 0x48], rax
0x00002784      0fb6058ed920.  movzx eax, byte [obj.count_lines]       ; [0x210119:1]=0
0x0000278b      bf01000000     mov edi, 1
0x00002790      48c78424b000.  mov qword [rsp + 0xb0], 0
0x0000279c      488b542458     mov rdx, qword [rsp + 0x58]
0x000027a1      8b742408       mov esi, dword [rsp + 8]
0x000027a5      84c0           test al, al
0x000027a7      88442418       mov byte [rsp + 0x18], al
0x000027ab      0f85a0020000   jne 0x2a51
0x000027b1      e84af6ffff     call sym.imp.__fxstat
0x000027b6      85c0           test eax, eax
0x000027b8      0f85e0070000   jne 0x2f9e
0x000027be      0fb60551d920.  movzx eax, byte [obj.from_start]        ; [0x210116:1]=0
0x000027c5      89c1           mov ecx, eax
0x000027c7      88442418       mov byte [rsp + 0x18], al
0x000027cb      0fb6053bd920.  movzx eax, byte [obj.presume_input_pipe] ; [0x21010d:1]=0
0x000027d2      84c9           test cl, cl
0x000027d4      0f84db060000   je 0x2eb5
0x000027da      84c0           test al, al
0x000027dc      0f8547080000   jne 0x3029
0x000027e2      48837c242000   cmp qword [rsp + 0x20], 0
0x000027e8      0f883b080000   js 0x3029
0x000027ee      8b8424380200.  mov eax, dword [rsp + sym..interp]
0x000027f5      2500f00000     and eax, 0xf000
0x000027fa      3d00800000     cmp eax, 0x8000
0x000027ff      0f84030c0000   je 0x3408
0x00002805      488b742420     mov rsi, qword [rsp + 0x20]
0x0000280a      8b7c2408       mov edi, dword [rsp + 8]
0x0000280e      ba01000000     mov edx, 1
0x00002813      e888f4ffff     call sym.imp.lseek
0x00002818      4883c001       add rax, 1
0x0000281c      0f8407080000   je 0x3029
0x00002822      488b442420     mov rax, qword [rsp + 0x20]
0x00002827      48c7442420ff.  mov qword [rsp + 0x20], 0xffffffffffffffff
0x00002830      48018424b000.  add qword [rsp + 0xb0], rax
0x00002838      e914080000     jmp 0x3051
0x0000283d      81feb8020000   cmp esi, 0x2b8
0x00002843      41bc01000000   mov r12d, 1
0x00002849      0f87c0fbffff   ja 0x240f
0x0000284f      e9baf7ffff     jmp 0x200e
0x00002854      488b7d10       mov rdi, qword [rbp + 0x10]
0x00002858      488d358f8f00.  lea rsi, [0x0000b7ee]                   ; "--"
0x0000285f      e8dcf4ffff     call sym.imp.strcmp
0x00002864      85c0           test eax, eax
0x00002866      0f845dfbffff   je 0x23c9
0x0000286c      e99df7ffff     jmp 0x200e
0x00002871      4883c101       add rcx, 1
0x00002875      48890d5cd820.  mov qword [obj.optarg], rcx             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100d8:8]=0
0x0000287c      e943faffff     jmp 0x22c4
0x00002881      488d35789e00.  lea rsi, str.warning:___retry_ignored____retry_is_useful_only_when_following ; 0xc700 ; "warning: --retry ignored; --retry is useful only when following"
0x00002888      c6058bd82000.  mov byte [obj.reopen_inaccessible_files], 0 ; [0x21011a:1]=0
0x0000288f      ba05000000     mov edx, 5
0x00002894      31ff           xor edi, edi
0x00002896      e835f3ffff     call sym.imp.dcgettext
0x0000289b      31f6           xor esi, esi
0x0000289d      4889c2         mov rdx, rax
0x000028a0      31ff           xor edi, edi
0x000028a2      31c0           xor eax, eax
0x000028a4      e8b7f5ffff     call sym.imp.error
0x000028a9      8b3d61d82000   mov edi, dword [obj.pid]                ; [0x210110:4]=0
0x000028af      85ff           test edi, edi
0x000028b1      0f84affcffff   je 0x2566
0x000028b7      803d5ad82000.  cmp byte [obj.forever], 0               ; [0x210118:1]=0
0x000028be      0f8562fcffff   jne 0x2526
0x000028c4      488d35ad9e00.  lea rsi, str.warning:_PID_ignored____pid_PID_is_useful_only_when_following ; 0xc778 ; "warning: PID ignored; --pid=PID is useful only when following"
0x000028cb      31ff           xor edi, edi
0x000028cd      ba05000000     mov edx, 5
0x000028d2      e8f9f2ffff     call sym.imp.dcgettext
0x000028d7      31f6           xor esi, esi
0x000028d9      4889c2         mov rdx, rax
0x000028dc      31ff           xor edi, edi
0x000028de      31c0           xor eax, eax
0x000028e0      e87bf5ffff     call sym.imp.error
0x000028e5      e97cfcffff     jmp 0x2566
0x000028ea      807f0100       cmp byte [rdi + 1], 0
0x000028ee      0f8564ffffff   jne 0x2858
0x000028f4      e9d0faffff     jmp 0x23c9
0x000028f9      31ff           xor edi, edi
0x000028fb      e850f2ffff     call sym.imp.isatty
0x00002900      85c0           test eax, eax
0x00002902      0f8448fdffff   je 0x2650
0x00002908      488d35e19e00.  lea rsi, str.warning:_following_standard_input_indefinitely_is_ineffective ; 0xc7f0 ; "warning: following standard input indefinitely is ineffective"
0x0000290f      31ff           xor edi, edi
0x00002911      ba05000000     mov edx, 5
0x00002916      e8b5f2ffff     call sym.imp.dcgettext
0x0000291b      31f6           xor esi, esi
0x0000291d      4889c2         mov rdx, rax
0x00002920      31ff           xor edi, edi
0x00002922      31c0           xor eax, eax
0x00002924      e837f5ffff     call sym.imp.error
0x00002929      e922fdffff     jmp 0x2650
0x0000292e      31f6           xor esi, esi
0x00002930      4889c7         mov rdi, rax
0x00002933      31c0           xor eax, eax
0x00002935      e826430000     call sym.open_safer
0x0000293a      0fb61dd9d720.  movzx ebx, byte [obj.reopen_inaccessible_files] ; [0x21011a:1]=0
0x00002941      89442408       mov dword [rsp + 8], eax
0x00002945      84db           test bl, bl
0x00002947      0f85f7020000   jne 0x2c44
0x0000294d      837c2408ff     cmp dword [rsp + 8], 0xffffffff
0x00002952      41c6473601     mov byte [r15 + 0x36], 1
0x00002957      0f85731e0000   jne 0x47d0
0x0000295d      e8aef1ffff     call sym.imp.__errno_location
0x00002962      803dafd72000.  cmp byte [obj.forever], 0               ; [0x210118:1]=0
0x00002969      4889c5         mov rbp, rax
0x0000296c      7425           je 0x2993
0x0000296e      8b00           mov eax, dword [rax]
0x00002970      83f301         xor ebx, 1
0x00002973      41c74738ffff.  mov dword [r15 + 0x38], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x0000297b      41885f34       mov byte [r15 + 0x34], bl
0x0000297f      49c747280000.  mov qword [r15 + 0x28], 0
0x00002987      49c747200000.  mov qword [r15 + 0x20], 0
0x0000298f      4189473c       mov dword [r15 + 0x3c], eax
0x00002993      498b3f         mov rdi, qword [r15]
0x00002996      e845200000     call sym.pretty_name.isra.7
0x0000299b      bf04000000     mov edi, 4
0x000029a0      4889c6         mov rsi, rax
0x000029a3      e878710000     call sym.quotearg_style
0x000029a8      488d35328f00.  lea rsi, str.cannot_open__s_for_reading ; 0xb8e1 ; "cannot open %s for reading"
0x000029af      ba05000000     mov edx, 5
0x000029b4      31ff           xor edi, edi
0x000029b6      4889c3         mov rbx, rax
0x000029b9      e812f2ffff     call sym.imp.dcgettext
0x000029be      8b7500         mov esi, dword [rbp]
0x000029c1      4889c2         mov rdx, rax
0x000029c4      4889d9         mov rcx, rbx
0x000029c7      31ff           xor edi, edi
0x000029c9      31c0           xor eax, eax
0x000029cb      e890f4ffff     call sym.imp.error
0x000029d0      c644241800     mov byte [rsp + 0x18], 0
0x000029d5      488344241001   add qword [rsp + 0x10], 1
0x000029db      0fb64c2418     movzx ecx, byte [rsp + 0x18]
0x000029e0      4983c760       add r15, 0x60
0x000029e4      208c248b0000.  and byte [rsp + 0x8b], cl
0x000029eb      488b442410     mov rax, qword [rsp + 0x10]
0x000029f0      483b0424       cmp rax, qword [rsp]
0x000029f4      0f8526fdffff   jne 0x2720
0x000029fa      0fb60517d720.  movzx eax, byte [obj.forever]           ; [0x210118:1]=0
0x00002a01      84c0           test al, al
0x00002a03      88442450       mov byte [rsp + 0x50], al
0x00002a07      0f8533070000   jne 0x3140
0x00002a0d      803dfad62000.  cmp byte [obj.have_read_stdin], 0       ; [0x21010e:1]=0
0x00002a14      0f853b080000   jne 0x3255
0x00002a1a      0fb684248b00.  movzx eax, byte [rsp + 0x8b]
0x00002a22      83f001         xor eax, 1
0x00002a25      0fb6c0         movzx eax, al
0x00002a28      488b8c24b802.  mov rcx, qword [rsp + 0x2b8]
0x00002a30      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002a39      0f85fd1d0000   jne 0x483c
0x00002a3f      4881c4c80200.  add rsp, 0x2c8
0x00002a46      5b             pop rbx
0x00002a47      5d             pop rbp
0x00002a48      415c           pop r12
0x00002a4a      415d           pop r13
0x00002a4c      415e           pop r14
0x00002a4e      415f           pop r15
0x00002a50      c3             ret
0x00002a51      e8aaf3ffff     call sym.imp.__fxstat
0x00002a56      85c0           test eax, eax
0x00002a58      0f8583050000   jne 0x2fe1
0x00002a5e      0fb61db1d620.  movzx ebx, byte [obj.from_start]        ; [0x210116:1]=0
0x00002a65      84db           test bl, bl
0x00002a67      0f850b060000   jne 0x3078
0x00002a6d      803d99d62000.  cmp byte [obj.presume_input_pipe], 0    ; [0x21010d:1]=0
0x00002a74      7517           jne 0x2a8d
0x00002a76      8b8424380200.  mov eax, dword [rsp + sym..interp]
0x00002a7d      2500f00000     and eax, 0xf000
0x00002a82      3d00800000     cmp eax, 0x8000
0x00002a87      0f8452100000   je 0x3adf
0x00002a8d      bf18200000     mov edi, 0x2018
0x00002a92      e8397a0000     call sym.xmalloc
0x00002a97      bf18200000     mov edi, 0x2018
0x00002a9c      4989c6         mov r14, rax
0x00002a9f      48c780082000.  mov qword [rax + 0x2008], 0
0x00002aaa      48c780002000.  mov qword [rax + 0x2000], 0
0x00002ab5      48c780102000.  mov qword [rax + 0x2010], 0
0x00002ac0      e80b7a0000     call sym.xmalloc
0x00002ac5      4c89742450     mov qword [rsp + 0x50], r14
0x00002aca      4889c3         mov rbx, rax
0x00002acd      48c744243800.  mov qword [rsp + 0x38], 0
0x00002ad6      4c897c2468     mov qword [rsp + 0x68], r15
0x00002adb      0f1f440000     nop dword [rax + rax]
0x00002ae0      8b7c2408       mov edi, dword [rsp + 8]
0x00002ae4      ba00200000     mov edx, 0x2000
0x00002ae9      4889de         mov rsi, rbx
0x00002aec      e81f730000     call sym.safe_read
0x00002af1      4989c5         mov r13, rax
0x00002af4      488d40ff       lea rax, [rax - 1]
0x00002af8      4883f8fd       cmp rax, 0xfffffffffffffffd
0x00002afc      0f8755010000   ja 0x2c57
0x00002b02      4c89ab002000.  mov qword [rbx + 0x2000], r13
0x00002b09      440fbe2503d6.  movsx r12d, byte [obj.line_end]         ; [0x210114:1]=0
0x00002b11      4a8d2c2b       lea rbp, [rbx + r13]
0x00002b15      4c01ac24b000.  add qword [rsp + 0xb0], r13
0x00002b1d      4889df         mov rdi, rbx
0x00002b20      48c783082000.  mov qword [rbx + 0x2008], 0
0x00002b2b      48c783102000.  mov qword [rbx + 0x2010], 0
0x00002b36      4531ff         xor r15d, r15d
0x00002b39      eb13           jmp 0x2b4e
0x00002b3b      0f1f440000     nop dword [rax + rax]
0x00002b40      488d7801       lea rdi, [rax + 1]
0x00002b44      488993082000.  mov qword [rbx + 0x2008], rdx
0x00002b4b      4989d7         mov r15, rdx
0x00002b4e      4889ea         mov rdx, rbp
0x00002b51      4489e6         mov esi, r12d
0x00002b54      4829fa         sub rdx, rdi
0x00002b57      e894f1ffff     call sym.imp.memchr
0x00002b5c      4885c0         test rax, rax
0x00002b5f      498d5701       lea rdx, [r15 + 1]
0x00002b63      75db           jne 0x2b40
0x00002b65      498bbe002000.  mov rdi, qword [r14 + 0x2000]
0x00002b6c      4c017c2438     add qword [rsp + 0x38], r15
0x00002b71      498d443d00     lea rax, [r13 + rdi]
0x00002b76      483dff1f0000   cmp rax, 0x1fff
0x00002b7c      763f           jbe 0x2bbd
0x00002b7e      488b742450     mov rsi, qword [rsp + 0x50]
0x00002b83      488b442438     mov rax, qword [rsp + 0x38]
0x00002b88      49899e102000.  mov qword [r14 + 0x2010], rbx
0x00002b8f      482b86082000.  sub rax, qword [rsi + 0x2008]
0x00002b96      4839442420     cmp qword [rsp + 0x20], rax
0x00002b9b      0f838e000000   jae 0x2c2f
0x00002ba1      4889442438     mov qword [rsp + 0x38], rax
0x00002ba6      488b86102000.  mov rax, qword [rsi + 0x2010]
0x00002bad      4989de         mov r14, rbx
0x00002bb0      4889f3         mov rbx, rsi
0x00002bb3      4889442450     mov qword [rsp + 0x50], rax
0x00002bb8      e923ffffff     jmp 0x2ae0
0x00002bbd      4c01f7         add rdi, r14
0x00002bc0      4c89ea         mov rdx, r13
0x00002bc3      4889de         mov rsi, rbx
0x00002bc6      e895f1ffff     call sym.imp.memcpy
0x00002bcb      488b83002000.  mov rax, qword [rbx + 0x2000]
0x00002bd2      490186002000.  add qword [r14 + 0x2000], rax
0x00002bd9      488b83082000.  mov rax, qword [rbx + 0x2008]
0x00002be0      490186082000.  add qword [r14 + 0x2008], rax
0x00002be7      e9f4feffff     jmp 0x2ae0
0x00002bec      4889c7         mov rdi, rax
0x00002bef      e8ec1d0000     call sym.pretty_name.isra.7
0x00002bf4      803d15d42000.  cmp byte [obj.first_file.7393], 0       ; [0x210010:1]=1
0x00002bfb      488d35fea300.  lea rsi, [0x0000d000]                   ; "\n"
0x00002c02      488d15f8a300.  lea rdx, [0x0000d001]
0x00002c09      4889c1         mov rcx, rax
0x00002c0c      bf01000000     mov edi, 1
0x00002c11      480f44d6       cmove rdx, rsi
0x00002c15      488d353c8a00.  lea rsi, str.s_____s                    ; 0xb658 ; "%s==> %s <==\n"
0x00002c1c      31c0           xor eax, eax
0x00002c1e      e82df2ffff     call sym.imp.__printf_chk
0x00002c23      c605e6d32000.  mov byte [obj.first_file.7393], 0       ; [0x210010:1]=1
0x00002c2a      e948fbffff     jmp 0x2777
0x00002c2f      bf18200000     mov edi, 0x2018
0x00002c34      4989de         mov r14, rbx
0x00002c37      e894780000     call sym.xmalloc
0x00002c3c      4889c3         mov rbx, rax
0x00002c3f      e99cfeffff     jmp 0x2ae0
0x00002c44      83c001         add eax, 1
0x00002c47      0f8531060000   jne 0x327e
0x00002c4d      41c6473600     mov byte [r15 + 0x36], 0
0x00002c52      e906fdffff     jmp 0x295d
0x00002c57      4889df         mov rdi, rbx
0x00002c5a      4c8b7c2468     mov r15, qword [rsp + 0x68]
0x00002c5f      e88ceeffff     call sym.imp.free
0x00002c64      4983c501       add r13, 1
0x00002c68      0f84130e0000   je 0x3a81
0x00002c6e      48837c242000   cmp qword [rsp + 0x20], 0
0x00002c74      498b86002000.  mov rax, qword [r14 + 0x2000]
0x00002c7b      7409           je 0x2c86
0x00002c7d      4885c0         test rax, rax
0x00002c80      0f8595060000   jne 0x331b
0x00002c86      48837c245000   cmp qword [rsp + 0x50], 0
0x00002c8c      7422           je 0x2cb0
0x00002c8e      488b7c2450     mov rdi, qword [rsp + 0x50]
0x00002c93      0f1f440000     nop dword [rax + rax]
0x00002c98      488b9f102000.  mov rbx, qword [rdi + 0x2010]
0x00002c9f      e84ceeffff     call sym.imp.free
0x00002ca4      4885db         test rbx, rbx
0x00002ca7      4889df         mov rdi, rbx
0x00002caa      75ec           jne 0x2c98
0x00002cac      0f1f4000       nop dword [rax]
0x00002cb0      803d61d42000.  cmp byte [obj.forever], 0               ; [0x210118:1]=0
0x00002cb7      756a           jne 0x2d23
0x00002cb9      837c244400     cmp dword [rsp + 0x44], 0
0x00002cbe      0f8411fdffff   je 0x29d5
0x00002cc4      8b7c2408       mov edi, dword [rsp + 8]
0x00002cc8      e813f0ffff     call sym.imp.close
0x00002ccd      85c0           test eax, eax
0x00002ccf      0f8400fdffff   je 0x29d5
0x00002cd5      498b3f         mov rdi, qword [r15]
0x00002cd8      e8031d0000     call sym.pretty_name.isra.7
0x00002cdd      bf04000000     mov edi, 4
0x00002ce2      4889c6         mov rsi, rax
0x00002ce5      e8366e0000     call sym.quotearg_style
0x00002cea      488d35568900.  lea rsi, str.error_reading__s           ; 0xb647 ; "error reading %s"
0x00002cf1      ba05000000     mov edx, 5
0x00002cf6      31ff           xor edi, edi
0x00002cf8      4889c3         mov rbx, rax
0x00002cfb      e8d0eeffff     call sym.imp.dcgettext
0x00002d00      4889c5         mov rbp, rax
0x00002d03      e808eeffff     call sym.imp.__errno_location
0x00002d08      8b30           mov esi, dword [rax]
0x00002d0a      4889d9         mov rcx, rbx
0x00002d0d      4889ea         mov rdx, rbp
0x00002d10      31ff           xor edi, edi
0x00002d12      31c0           xor eax, eax
0x00002d14      e847f1ffff     call sym.imp.error
0x00002d19      c644241800     mov byte [rsp + 0x18], 0
0x00002d1e      e9b2fcffff     jmp 0x29d5
0x00002d23      0fb6442418     movzx eax, byte [rsp + 0x18]
0x00002d28      488b542458     mov rdx, qword [rsp + 0x58]
0x00002d2d      bf01000000     mov edi, 1
0x00002d32      8b742408       mov esi, dword [rsp + 8]
0x00002d36      83e801         sub eax, 1
0x00002d39      4189473c       mov dword [r15 + 0x3c], eax
0x00002d3d      e8bef0ffff     call sym.imp.__fxstat
0x00002d42      85c0           test eax, eax
0x00002d44      0f8873050000   js 0x32bd
0x00002d4a      8b9424380200.  mov edx, dword [rsp + sym..interp]
0x00002d51      89d0           mov eax, edx
0x00002d53      2500f00000     and eax, 0xf000
0x00002d58      2d00100000     sub eax, 0x1000
0x00002d5d      a900e0ffff     test eax, 0xffffe000
0x00002d62      7412           je 0x2d76
0x00002d64      89d0           mov eax, edx
0x00002d66      2500b00000     and eax, 0xb000
0x00002d6b      3d00800000     cmp eax, 0x8000
0x00002d70      0f858e000000   jne 0x2e04
0x00002d76      807c241800     cmp byte [rsp + 0x18], 0
0x00002d7b      0f8400010000   je 0x2e81
0x00002d81      488b8c24b000.  mov rcx, qword [rsp + 0xb0]
0x00002d89      837c244400     cmp dword [rsp + 0x44], 0
0x00002d8e      b801000000     mov eax, 1
0x00002d93      0f44442470     cmove eax, dword [rsp + 0x70]
0x00002d98      8b5c2408       mov ebx, dword [rsp + 8]
0x00002d9c      498b3f         mov rdi, qword [r15]
0x00002d9f      41895730       mov dword [r15 + 0x30], edx
0x00002da3      49894f08       mov qword [r15 + 8], rcx
0x00002da7      488b8c247802.  mov rcx, qword [rsp + 0x278]
0x00002daf      41895f38       mov dword [r15 + 0x38], ebx
0x00002db3      49c747580000.  mov qword [r15 + 0x58], 0
0x00002dbb      41894740       mov dword [r15 + 0x40], eax
0x00002dbf      41c6473400     mov byte [r15 + 0x34], 0
0x00002dc4      49894f10       mov qword [r15 + 0x10], rcx
0x00002dc8      488b8c248002.  mov rcx, qword [rsp + 0x280]
0x00002dd0      49894f18       mov qword [r15 + 0x18], rcx
0x00002dd4      488b8c242002.  mov rcx, qword [rsp + 0x220]
0x00002ddc      49894f20       mov qword [r15 + 0x20], rcx
0x00002de0      488b8c242802.  mov rcx, qword [rsp + 0x228]
0x00002de8      49894f28       mov qword [r15 + 0x28], rcx
0x00002dec      e8ef1b0000     call sym.pretty_name.isra.7
0x00002df1      89df           mov edi, ebx
0x00002df3      4889c6         mov rsi, rax
0x00002df6      e8a5250000     call sym.fremote
0x00002dfb      41884735       mov byte [r15 + 0x35], al
0x00002dff      e9d1fbffff     jmp 0x29d5
0x00002e04      0fb6050fd320.  movzx eax, byte [obj.reopen_inaccessible_files] ; [0x21011a:1]=0
0x00002e0b      41c7473cffff.  mov dword [r15 + 0x3c], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00002e13      488d2de7a100.  lea rbp, [0x0000d001]
0x00002e1a      41c6473600     mov byte [r15 + 0x36], 0
0x00002e1f      83f001         xor eax, 1
0x00002e22      84c0           test al, al
0x00002e24      41884734       mov byte [r15 + 0x34], al
0x00002e28      7416           je 0x2e40
0x00002e2a      488d35bd8800.  lea rsi, str.giving_up_on_this_name     ; 0xb6ee ; "; giving up on this name"
0x00002e31      ba05000000     mov edx, 5
0x00002e36      31ff           xor edi, edi
0x00002e38      e893edffff     call sym.imp.dcgettext
0x00002e3d      4889c5         mov rbp, rax
0x00002e40      498b3f         mov rdi, qword [r15]
0x00002e43      e8981b0000     call sym.pretty_name.isra.7
0x00002e48      be03000000     mov esi, 3
0x00002e4d      4889c2         mov rdx, rax
0x00002e50      31ff           xor edi, edi
0x00002e52      e8c96d0000     call sym.quotearg_n_style_colon
0x00002e57      488d35d29900.  lea rsi, str.s:_cannot_follow_end_of_this_type_of_file_s ; 0xc830 ; "%s: cannot follow end of this type of file%s"
0x00002e5e      4889c3         mov rbx, rax
0x00002e61      ba05000000     mov edx, 5
0x00002e66      31ff           xor edi, edi
0x00002e68      e863edffff     call sym.imp.dcgettext
0x00002e6d      4989e8         mov r8, rbp
0x00002e70      4889c2         mov rdx, rax
0x00002e73      4889d9         mov rcx, rbx
0x00002e76      31f6           xor esi, esi
0x00002e78      31ff           xor edi, edi
0x00002e7a      31c0           xor eax, eax
0x00002e7c      e8dfefffff     call sym.imp.error
0x00002e81      0fb60592d220.  movzx eax, byte [obj.reopen_inaccessible_files] ; [0x21011a:1]=0
0x00002e88      498b3f         mov rdi, qword [r15]
0x00002e8b      83f001         xor eax, 1
0x00002e8e      41884734       mov byte [r15 + 0x34], al
0x00002e92      e8491b0000     call sym.pretty_name.isra.7
0x00002e97      8b7c2408       mov edi, dword [rsp + 8]
0x00002e9b      4889c6         mov rsi, rax
0x00002e9e      e87d1b0000     call sym.close_fd
0x00002ea3      41c74738ffff.  mov dword [r15 + 0x38], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00002eab      c644241800     mov byte [rsp + 0x18], 0
0x00002eb0      e920fbffff     jmp 0x29d5
0x00002eb5      84c0           test al, al
0x00002eb7      0f84ea010000   je 0x30a7
0x00002ebd      bf10200000     mov edi, 0x2010
0x00002ec2      4531e4         xor r12d, r12d
0x00002ec5      e806760000     call sym.xmalloc
0x00002eca      bf10200000     mov edi, 0x2010
0x00002ecf      4989c5         mov r13, rax
0x00002ed2      48c780002000.  mov qword [rax + 0x2000], 0
0x00002edd      48c780082000.  mov qword [rax + 0x2008], 0
0x00002ee8      4c89ed         mov rbp, r13
0x00002eeb      e8e0750000     call sym.xmalloc
0x00002ef0      448b742408     mov r14d, dword [rsp + 8]
0x00002ef5      4889c3         mov rbx, rax
0x00002ef8      eb2f           jmp 0x2f29
0x00002efa      4c89e0         mov rax, r12
0x00002efd      482b85002000.  sub rax, qword [rbp + 0x2000]
0x00002f04      49899d082000.  mov qword [r13 + 0x2008], rbx
0x00002f0b      4839442420     cmp qword [rsp + 0x20], rax
0x00002f10      0f83f6030000   jae 0x330c
0x00002f16      4989c4         mov r12, rax
0x00002f19      4889e8         mov rax, rbp
0x00002f1c      488bad082000.  mov rbp, qword [rbp + 0x2008]
0x00002f23      4989dd         mov r13, rbx
0x00002f26      4889c3         mov rbx, rax
0x00002f29      ba00200000     mov edx, 0x2000
0x00002f2e      4889de         mov rsi, rbx
0x00002f31      4489f7         mov edi, r14d
0x00002f34      e8d76e0000     call sym.safe_read
0x00002f39      488d50ff       lea rdx, [rax - 1]
0x00002f3d      4883fafd       cmp rdx, 0xfffffffffffffffd
0x00002f41      0f87950a0000   ja 0x39dc
0x00002f47      48018424b000.  add qword [rsp + 0xb0], rax
0x00002f4f      488983002000.  mov qword [rbx + 0x2000], rax
0x00002f56      4901c4         add r12, rax
0x00002f59      498b95002000.  mov rdx, qword [r13 + 0x2000]
0x00002f60      48c783082000.  mov qword [rbx + 0x2008], 0
0x00002f6b      488d3410       lea rsi, [rax + rdx]
0x00002f6f      4881feff1f00.  cmp rsi, 0x1fff
0x00002f76      7782           ja 0x2efa
0x00002f78      498d7c1500     lea rdi, [r13 + rdx]
0x00002f7d      4889de         mov rsi, rbx
0x00002f80      4889c2         mov rdx, rax
0x00002f83      e8d8edffff     call sym.imp.memcpy
0x00002f88      488b83002000.  mov rax, qword [rbx + 0x2000]
0x00002f8f      490185002000.  add qword [r13 + 0x2000], rax
0x00002f96      4889d8         mov rax, rbx
0x00002f99      4c89eb         mov rbx, r13
0x00002f9c      eb85           jmp 0x2f23
0x00002f9e      488b742448     mov rsi, qword [rsp + 0x48]
0x00002fa3      bf04000000     mov edi, 4
0x00002fa8      e8736b0000     call sym.quotearg_style
0x00002fad      488d35488900.  lea rsi, str.cannot_fstat__s            ; 0xb8fc ; "cannot fstat %s"
0x00002fb4      31ff           xor edi, edi
0x00002fb6      ba05000000     mov edx, 5
0x00002fbb      4889c3         mov rbx, rax
0x00002fbe      e80decffff     call sym.imp.dcgettext
0x00002fc3      4889c5         mov rbp, rax
0x00002fc6      e845ebffff     call sym.imp.__errno_location
0x00002fcb      8b30           mov esi, dword [rax]
0x00002fcd      4889d9         mov rcx, rbx
0x00002fd0      4889ea         mov rdx, rbp
0x00002fd3      31ff           xor edi, edi
0x00002fd5      31c0           xor eax, eax
0x00002fd7      e884eeffff     call sym.imp.error
0x00002fdc      e9cffcffff     jmp 0x2cb0
0x00002fe1      488b742448     mov rsi, qword [rsp + 0x48]
0x00002fe6      bf04000000     mov edi, 4
0x00002feb      e8306b0000     call sym.quotearg_style
0x00002ff0      488d35058900.  lea rsi, str.cannot_fstat__s            ; 0xb8fc ; "cannot fstat %s"
0x00002ff7      ba05000000     mov edx, 5
0x00002ffc      31ff           xor edi, edi
0x00002ffe      4889c3         mov rbx, rax
0x00003001      e8caebffff     call sym.imp.dcgettext
0x00003006      4889c5         mov rbp, rax
0x00003009      e802ebffff     call sym.imp.__errno_location
0x0000300e      8b30           mov esi, dword [rax]
0x00003010      4889d9         mov rcx, rbx
0x00003013      4889ea         mov rdx, rbp
0x00003016      31ff           xor edi, edi
0x00003018      31c0           xor eax, eax
0x0000301a      e841eeffff     call sym.imp.error
0x0000301f      c644241800     mov byte [rsp + 0x18], 0
0x00003024      e987fcffff     jmp 0x2cb0
0x00003029      488b542420     mov rdx, qword [rsp + 0x20]
0x0000302e      8b742408       mov esi, dword [rsp + 8]
0x00003032      488d8c24b000.  lea rcx, [rsp + 0xb0]
0x0000303a      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0000303f      e85c1d0000     call sym.start_bytes
0x00003044      85c0           test eax, eax
0x00003046      48c7442420ff.  mov qword [rsp + 0x20], 0xffffffffffffffff
0x0000304f      754a           jne 0x309b
0x00003051      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00003056      8b542408       mov edx, dword [rsp + 8]
0x0000305a      31ff           xor edi, edi
0x0000305c      488b742448     mov rsi, qword [rsp + 0x48]
0x00003061      e8ea1b0000     call sym.dump_remainder
0x00003066      c644241801     mov byte [rsp + 0x18], 1
0x0000306b      48018424b000.  add qword [rsp + 0xb0], rax
0x00003073      e938fcffff     jmp 0x2cb0
0x00003078      488b542420     mov rdx, qword [rsp + 0x20]
0x0000307d      8b742408       mov esi, dword [rsp + 8]
0x00003081      488d8c24b000.  lea rcx, [rsp + 0xb0]
0x00003089      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0000308e      e87d1a0000     call sym.start_lines
0x00003093      85c0           test eax, eax
0x00003095      0f8441030000   je 0x33dc
0x0000309b      c1e81f         shr eax, 0x1f
0x0000309e      89442418       mov dword [rsp + 0x18], eax
0x000030a2      e909fcffff     jmp 0x2cb0
0x000030a7      48837c242000   cmp qword [rsp + 0x20], 0
0x000030ad      0f880afeffff   js 0x2ebd
0x000030b3      8b8424380200.  mov eax, dword [rsp + sym..interp]
0x000030ba      2500d00000     and eax, 0xd000
0x000030bf      3d00800000     cmp eax, 0x8000
0x000030c4      0f85d70a0000   jne 0x3ba1
0x000030ca      488bac245002.  mov rbp, qword [rsp + 0x250]
0x000030d2      4883cbff       or rbx, 0xffffffffffffffff
0x000030d6      488b84245802.  mov rax, qword [rsp + 0x258]
0x000030de      48b9ffffffff.  movabs rcx, 0x1fffffffffffffff          ; 2305843009213693951
0x000030e8      488d50ff       lea rdx, [rax - 1]
0x000030ec      4839ca         cmp rdx, rcx
0x000030ef      ba00020000     mov edx, 0x200
0x000030f4      480f47c2       cmova rax, rdx
0x000030f8      4839c5         cmp rbp, rax
0x000030fb      0f8ebcfdffff   jle 0x2ebd
0x00003101      4883fbff       cmp rbx, 0xffffffffffffffff
0x00003105      0f84480a0000   je 0x3b53
0x0000310b      4839dd         cmp rbp, rbx
0x0000310e      7e11           jle 0x3121
0x00003110      4889e8         mov rax, rbp
0x00003113      4829d8         sub rax, rbx
0x00003116      4839442420     cmp qword [rsp + 0x20], rax
0x0000311b      0f82600a0000   jb 0x3b81
0x00003121      48899c24b000.  mov qword [rsp + 0xb0], rbx
0x00003129      e923ffffff     jmp 0x3051
0x0000312e      29c3           sub ebx, eax
0x00003130      4863cb         movsxd rcx, ebx
0x00003133      498d1cc4       lea rbx, [r12 + rax*8]
0x00003137      48890c24       mov qword [rsp], rcx
0x0000313b      e966f4ffff     jmp 0x25a6
0x00003140      488b6c2460     mov rbp, qword [rsp + 0x60]
0x00003145      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x0000314a      4c8d259e8600.  lea r12, str.b                          ; 0xb7ef ; u"-b\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u2500\u3a73\u2520s\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u696c\u656es\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u7962\u6574s\u6b62\u6d4b\u474d\u5054\u5a45\u3059\u2d00\u662d\u6c6f\u6f6cw\u6e69\u6176\u696c\u2064\u4950D\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u6573\u6f63\u646e\u3a73\u2520s\u6144\u6976\u2064\u614d\u4b63\u6e65\u697ae\u6150\u6c75\u5220\u6275\u6e69\u4a00\u6d69\u4d20\u7965\u7265\u6e69g\u6149\u206e\u614c\u636e\u2065\u6154\u6c79\u726f\u6300\u6e3a\u663a\u7146\u3a73\u7a76\u3130\u3332\u3534\u3736\u3938\u6300\u6e61\u6f6e\u2074\u6f66\u6c6c\u776f\u2520\u2073\u7962\u6e20\u6d61e\u6163\u6e6e\u746f\u6f20\u6570\u206e\u7325\u6620\u726f\u7220\u6165\u6964\u676e\u6300\u6e61\u6f6e\u2074\u7366\u6174\u2074\u7325\u6200\u6765\u6900\u6f6e\u6974\u7966\u7220\u7365\u756f\u6372\u7365\u6520\u6878\u7561\u7473\u6465\u6300\u6e61\u6f6e\u2074\u6177\u6374\u2068\u7325\u2500\u2073\u6177\u2073\u6572\u6c70\u6361\u6465\u6e00\u206f\u6966\u656c\u2073\u6572\u616d\u6e69\u6e69g\u7265\u6f72\u2072\u6572\u6461\u6e69\u2067\u6e69\u746f\u6669\u2079\u7665\u6e65t\u6163\u6e6e\u746f\u7220\u6165\u2064\u6572\u6c61\u6974\u656d\u6320\u6f6c\u6b63\u6d00\u7861\u752d\u636e\u6168\u676e\u6465\u732d\u6174\u7374\u2d00\u6964\u6173\u6c62\u2d65\u6e69\u746f\u6669y\u6970d\u702d\u6572\u7573\u656d\u692d\u706e\u7475\u702d\u7069e\u7571\u6569t\u6572\u7274y\u6973\u656c\u746e\u7300\u656c\u7065\u692d\u746e\u7265\u6176l\u6576\u6272\u736fe\u657a\u6f72\u742d\u7265\u696d\u616e\u6574d\u6568\u706c\u7600\u7265\u6973\u6e6f\u6400\u7365\u7263\u7069\u6f74r"
0x00003151      31db           xor ebx, ebx
0x00003153      4c01ed         add rbp, r13
0x00003156      4c39ed         cmp rbp, r13
0x00003159      7447           je 0x31a2
0x0000315b      498b7d00       mov rdi, qword [r13]
0x0000315f      4c89e6         mov rsi, r12
0x00003162      e8d9ebffff     call sym.imp.strcmp
0x00003167      85c0           test eax, eax
0x00003169      751e           jne 0x3189
0x0000316b      41807d3400     cmp byte [r13 + 0x34], 0
0x00003170      7517           jne 0x3189
0x00003172      41837d3800     cmp dword [r13 + 0x38], 0
0x00003177      7810           js 0x3189
0x00003179      418b4530       mov eax, dword [r13 + 0x30]
0x0000317d      2500f00000     and eax, 0xf000
0x00003182      3d00100000     cmp eax, 0x1000
0x00003187      740a           je 0x3193
0x00003189      4883c301       add rbx, 1
0x0000318d      4983c560       add r13, 0x60
0x00003191      ebc3           jmp 0x3156
0x00003193      41c74538ffff.  mov dword [r13 + 0x38], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x0000319b      41c6453401     mov byte [r13 + 0x34], 1
0x000031a0      ebeb           jmp 0x318d
0x000031a2      4885db         test rbx, rbx
0x000031a5      0f8462f8ffff   je 0x2a0d
0x000031ab      488d94249001.  lea rdx, [rsp + 0x190]
0x000031b3      be01000000     mov esi, 1
0x000031b8      bf01000000     mov edi, 1
0x000031bd      e83eecffff     call sym.imp.__fxstat
0x000031c2      85c0           test eax, eax
0x000031c4      0f88b7160000   js 0x4881
0x000031ca      8b8424a80100.  mov eax, dword [rsp + 0x1a8]
0x000031d1      2500f00000     and eax, 0xf000
0x000031d6      3d00100000     cmp eax, 0x1000
0x000031db      0f940535cf20.  sete byte [obj.monitor_output]
0x000031e2      803d23cf2000.  cmp byte [obj.disable_inotify], 0       ; [0x21010c:1]=0
0x000031e9      0f8559020000   jne 0x3448
0x000031ef      488b6c2428     mov rbp, qword [rsp + 0x28]
0x000031f4      488d1df48500.  lea rbx, str.b                          ; 0xb7ef ; u"-b\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u2500\u3a73\u2520s\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u696c\u656es\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u7962\u6574s\u6b62\u6d4b\u474d\u5054\u5a45\u3059\u2d00\u662d\u6c6f\u6f6cw\u6e69\u6176\u696c\u2064\u4950D\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u6573\u6f63\u646e\u3a73\u2520s\u6144\u6976\u2064\u614d\u4b63\u6e65\u697ae\u6150\u6c75\u5220\u6275\u6e69\u4a00\u6d69\u4d20\u7965\u7265\u6e69g\u6149\u206e\u614c\u636e\u2065\u6154\u6c79\u726f\u6300\u6e3a\u663a\u7146\u3a73\u7a76\u3130\u3332\u3534\u3736\u3938\u6300\u6e61\u6f6e\u2074\u6f66\u6c6c\u776f\u2520\u2073\u7962\u6e20\u6d61e\u6163\u6e6e\u746f\u6f20\u6570\u206e\u7325\u6620\u726f\u7220\u6165\u6964\u676e\u6300\u6e61\u6f6e\u2074\u7366\u6174\u2074\u7325\u6200\u6765\u6900\u6f6e\u6974\u7966\u7220\u7365\u756f\u6372\u7365\u6520\u6878\u7561\u7473\u6465\u6300\u6e61\u6f6e\u2074\u6177\u6374\u2068\u7325\u2500\u2073\u6177\u2073\u6572\u6c70\u6361\u6465\u6e00\u206f\u6966\u656c\u2073\u6572\u616d\u6e69\u6e69g\u7265\u6f72\u2072\u6572\u6461\u6e69\u2067\u6e69\u746f\u6669\u2079\u7665\u6e65t\u6163\u6e6e\u746f\u7220\u6165\u2064\u6572\u6c61\u6974\u656d\u6320\u6f6c\u6b63\u6d00\u7861\u752d\u636e\u6168\u676e\u6465\u732d\u6174\u7374\u2d00\u6964\u6173\u6c62\u2d65\u6e69\u746f\u6669y\u6970d\u702d\u6572\u7573\u656d\u692d\u706e\u7475\u702d\u7069e\u7571\u6569t\u6572\u7274y\u6973\u656c\u746e\u7300\u656c\u7065\u692d\u746e\u7265\u6176l\u6576\u6272\u736fe\u657a\u6f72\u742d\u7265\u696d\u616e\u6574d\u6568\u706c\u7600\u7265\u6973\u6e6f\u6400\u7365\u7263\u7069\u6f74r"
0x000031fb      eb1e           jmp 0x321b
0x000031fd      807d3400       cmp byte [rbp + 0x34], 0
0x00003201      7514           jne 0x3217
0x00003203      488b7d00       mov rdi, qword [rbp]
0x00003207      4889de         mov rsi, rbx
0x0000320a      e831ebffff     call sym.imp.strcmp
0x0000320f      85c0           test eax, eax
0x00003211      0f8431020000   je 0x3448
0x00003217      4883c560       add rbp, 0x60
0x0000321b      4c39ed         cmp rbp, r13
0x0000321e      75dd           jne 0x31fd
0x00003220      488b442428     mov rax, qword [rsp + 0x28]
0x00003225      488b4c2460     mov rcx, qword [rsp + 0x60]
0x0000322a      488d5035       lea rdx, [rax + 0x35]
0x0000322e      488d4c0835     lea rcx, [rax + rcx + 0x35]
0x00003233      4889d0         mov rax, rdx
0x00003236      eb13           jmp 0x324b
0x00003238      83780300       cmp dword [rax + 3], 0
0x0000323c      7809           js 0x3247
0x0000323e      803800         cmp byte [rax], 0
0x00003241      0f8501020000   jne 0x3448
0x00003247      4883c060       add rax, 0x60
0x0000324b      4839c8         cmp rax, rcx
0x0000324e      75e8           jne 0x3238
0x00003250      e9ee010000     jmp 0x3443
0x00003255      31ff           xor edi, edi
0x00003257      e884eaffff     call sym.imp.close
0x0000325c      85c0           test eax, eax
0x0000325e      0f89b6f7ffff   jns 0x2a1a
0x00003264      e8a7e8ffff     call sym.imp.__errno_location
0x00003269      8b30           mov esi, dword [rax]
0x0000326b      488d157d8500.  lea rdx, str.b                          ; 0xb7ef ; u"-b\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u2500\u3a73\u2520s\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u696c\u656es\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u7962\u6574s\u6b62\u6d4b\u474d\u5054\u5a45\u3059\u2d00\u662d\u6c6f\u6f6cw\u6e69\u6176\u696c\u2064\u4950D\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u6573\u6f63\u646e\u3a73\u2520s\u6144\u6976\u2064\u614d\u4b63\u6e65\u697ae\u6150\u6c75\u5220\u6275\u6e69\u4a00\u6d69\u4d20\u7965\u7265\u6e69g\u6149\u206e\u614c\u636e\u2065\u6154\u6c79\u726f\u6300\u6e3a\u663a\u7146\u3a73\u7a76\u3130\u3332\u3534\u3736\u3938\u6300\u6e61\u6f6e\u2074\u6f66\u6c6c\u776f\u2520\u2073\u7962\u6e20\u6d61e\u6163\u6e6e\u746f\u6f20\u6570\u206e\u7325\u6620\u726f\u7220\u6165\u6964\u676e\u6300\u6e61\u6f6e\u2074\u7366\u6174\u2074\u7325\u6200\u6765\u6900\u6f6e\u6974\u7966\u7220\u7365\u756f\u6372\u7365\u6520\u6878\u7561\u7473\u6465\u6300\u6e61\u6f6e\u2074\u6177\u6374\u2068\u7325\u2500\u2073\u6177\u2073\u6572\u6c70\u6361\u6465\u6e00\u206f\u6966\u656c\u2073\u6572\u616d\u6e69\u6e69g\u7265\u6f72\u2072\u6572\u6461\u6e69\u2067\u6e69\u746f\u6669\u2079\u7665\u6e65t\u6163\u6e6e\u746f\u7220\u6165\u2064\u6572\u6c61\u6974\u656d\u6320\u6f6c\u6b63\u6d00\u7861\u752d\u636e\u6168\u676e\u6465\u732d\u6174\u7374\u2d00\u6964\u6173\u6c62\u2d65\u6e69\u746f\u6669y\u6970d\u702d\u6572\u7573\u656d\u692d\u706e\u7475\u702d\u7069e\u7571\u6569t\u6572\u7274y\u6973\u656c\u746e\u7300\u656c\u7065\u692d\u746e\u7265\u6176l\u6576\u6272\u736fe\u657a\u6f72\u742d\u7265\u696d\u616e\u6574d\u6568\u706c\u7600\u7265\u6973\u6e6f\u6400\u7365\u7263\u7069\u6f74r"
0x00003272      bf01000000     mov edi, 1
0x00003277      31c0           xor eax, eax
0x00003279      e8e2ebffff     call sym.imp.error
0x0000327e      498b07         mov rax, qword [r15]
0x00003281      e9dff4ffff     jmp 0x2765
0x00003286      4531f6         xor r14d, r14d
0x00003289      b900140000     mov ecx, sym..rela.plt                  ; 0x1400
0x0000328e      488d4201       lea rax, [rdx + 1]
0x00003292      e9c3f1ffff     jmp 0x245a
0x00003297      89c8           mov eax, ecx
0x00003299      488984249000.  mov qword [rsp + 0x90], rax
0x000032a1      e9fcf1ffff     jmp 0x24a2
0x000032a6      41be01000000   mov r14d, 1
0x000032ac      b90a000000     mov ecx, 0xa
0x000032b1      ebdb           jmp 0x328e
0x000032b3      4531f6         xor r14d, r14d
0x000032b6      b90a000000     mov ecx, 0xa
0x000032bb      ebd1           jmp 0x328e
0x000032bd      e84ee8ffff     call sym.imp.__errno_location
0x000032c2      4889c3         mov rbx, rax
0x000032c5      8b00           mov eax, dword [rax]
0x000032c7      498b3f         mov rdi, qword [r15]
0x000032ca      4189473c       mov dword [r15 + 0x3c], eax
0x000032ce      e80d170000     call sym.pretty_name.isra.7
0x000032d3      bf04000000     mov edi, 4
0x000032d8      4889c6         mov rsi, rax
0x000032db      e840680000     call sym.quotearg_style
0x000032e0      488d35608300.  lea rsi, str.error_reading__s           ; 0xb647 ; "error reading %s"
0x000032e7      31ff           xor edi, edi
0x000032e9      ba05000000     mov edx, 5
0x000032ee      4889c5         mov rbp, rax
0x000032f1      e8dae8ffff     call sym.imp.dcgettext
0x000032f6      8b33           mov esi, dword [rbx]
0x000032f8      4889c2         mov rdx, rax
0x000032fb      4889e9         mov rcx, rbp
0x000032fe      31ff           xor edi, edi
0x00003300      31c0           xor eax, eax
0x00003302      e859ebffff     call sym.imp.error
0x00003307      e975fbffff     jmp 0x2e81
0x0000330c      bf10200000     mov edi, 0x2010
0x00003311      e8ba710000     call sym.xmalloc
0x00003316      e908fcffff     jmp 0x2f23
0x0000331b      440fbe25f1cd.  movsx r12d, byte [obj.line_end]         ; [0x210114:1]=0
0x00003323      45386406ff     cmp byte [r14 + rax - 1], r12b
0x00003328      740e           je 0x3338
0x0000332a      498386082000.  add qword [r14 + 0x2008], 1
0x00003332      488344243801   add qword [rsp + 0x38], 1
0x00003338      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000333d      488b542438     mov rdx, qword [rsp + 0x38]
0x00003342      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00003347      eb0a           jmp 0x3353
0x00003349      4d8bad102000.  mov r13, qword [r13 + 0x2010]
0x00003350      4889c2         mov rdx, rax
0x00003353      4889d0         mov rax, rdx
0x00003356      492b85082000.  sub rax, qword [r13 + 0x2008]
0x0000335d      4839c1         cmp rcx, rax
0x00003360      72e7           jb 0x3349
0x00003362      498bad002000.  mov rbp, qword [r13 + 0x2000]
0x00003369      488b442420     mov rax, qword [rsp + 0x20]
0x0000336e      4889d3         mov rbx, rdx
0x00003371      4c89ef         mov rdi, r13
0x00003374      4c01ed         add rbp, r13
0x00003377      4839d0         cmp rax, rdx
0x0000337a      7324           jae 0x33a0
0x0000337c      4829c3         sub rbx, rax
0x0000337f      4889ea         mov rdx, rbp
0x00003382      4489e6         mov esi, r12d
0x00003385      4829fa         sub rdx, rdi
0x00003388      e863e9ffff     call sym.imp.memchr
0x0000338d      4885c0         test rax, rax
0x00003390      0f847d140000   je 0x4813
0x00003396      4883eb01       sub rbx, 1
0x0000339a      488d7801       lea rdi, [rax + 1]
0x0000339e      75df           jne 0x337f
0x000033a0      4889ee         mov rsi, rbp
0x000033a3      4829fe         sub rsi, rdi
0x000033a6      7405           je 0x33ad
0x000033a8      e8e3160000     call sym.xwrite_stdout.part.10
0x000033ad      498b9d102000.  mov rbx, qword [r13 + 0x2010]
0x000033b4      eb07           jmp 0x33bd
0x000033b6      488b9b102000.  mov rbx, qword [rbx + 0x2010]
0x000033bd      4885db         test rbx, rbx
0x000033c0      0f84c0f8ffff   je 0x2c86
0x000033c6      488bb3002000.  mov rsi, qword [rbx + 0x2000]
0x000033cd      4885f6         test rsi, rsi
0x000033d0      74e4           je 0x33b6
0x000033d2      4889df         mov rdi, rbx
0x000033d5      e8b6160000     call sym.xwrite_stdout.part.10
0x000033da      ebda           jmp 0x33b6
0x000033dc      8b542408       mov edx, dword [rsp + 8]
0x000033e0      488b742448     mov rsi, qword [rsp + 0x48]
0x000033e5      4883c9ff       or rcx, 0xffffffffffffffff
0x000033e9      31ff           xor edi, edi
0x000033eb      e860180000     call sym.dump_remainder
0x000033f0      885c2418       mov byte [rsp + 0x18], bl
0x000033f4      48018424b000.  add qword [rsp + 0xb0], rax
0x000033fc      e9aff8ffff     jmp 0x2cb0
0x00003401      31c0           xor eax, eax
0x00003403      e920f6ffff     jmp 0x2a28
0x00003408      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0000340d      488b742420     mov rsi, qword [rsp + 0x20]
0x00003412      ba01000000     mov edx, 1
0x00003417      8b7c2408       mov edi, dword [rsp + 8]
0x0000341b      e8801a0000     call sym.xlseek
0x00003420      4885c0         test rax, rax
0x00003423      0f89f9f3ffff   jns 0x2822
0x00003429      e9d7f3ffff     jmp 0x2805
0x0000342e      837a0300       cmp dword [rdx + 3], 0
0x00003432      780b           js 0x343f
0x00003434      0fb60a         movzx ecx, byte [rdx]
0x00003437      84c9           test cl, cl
0x00003439      0f843c080000   je 0x3c7b
0x0000343f      4883c260       add rdx, 0x60
0x00003443      4839d0         cmp rax, rdx
0x00003446      75e6           jne 0x342e
0x00003448      833dc1cc2000.  cmp dword [obj.pid], 0                  ; [0x210110:4]=0
0x0000344f      c605b6cc2000.  mov byte [obj.disable_inotify], 1       ; [0x21010c:1]=0
0x00003456      7514           jne 0x346c
0x00003458      833dc1cb2000.  cmp dword [obj.follow_mode], 2          ; [0x210020:4]=2
0x0000345f      750b           jne 0x346c
0x00003461      48833c2401     cmp qword [rsp], 1
0x00003466      0f845f080000   je 0x3ccb
0x0000346c      4531ff         xor r15d, r15d
0x0000346f      4489f8         mov eax, r15d
0x00003472      488b4c2460     mov rcx, qword [rsp + 0x60]
0x00003477      c644244800     mov byte [rsp + 0x48], 0
0x0000347c      83e001         and eax, 1
0x0000347f      88442444       mov byte [rsp + 0x44], al
0x00003483      488b0424       mov rax, qword [rsp]
0x00003487      4883e801       sub rax, 1
0x0000348b      4889442410     mov qword [rsp + 0x10], rax
0x00003490      488b442428     mov rax, qword [rsp + 0x28]
0x00003495      488d440834     lea rax, [rax + rcx + 0x34]
0x0000349a      4889442418     mov qword [rsp + 0x18], rax
0x0000349f      488d84242002.  lea rax, [rsp + 0x220]
0x000034a7      4889442420     mov qword [rsp + 0x20], rax
0x000034ac      48833c2400     cmp qword [rsp], 0
0x000034b1      0f8497040000   je 0x394e
0x000034b7      4c8b742428     mov r14, qword [rsp + 0x28]
0x000034bc      c644240800     mov byte [rsp + 8], 0
0x000034c1      31db           xor ebx, ebx
0x000034c3      eb2f           jmp 0x34f4
0x000034c5      0f1f00         nop dword [rax]
0x000034c8      89ea           mov edx, ebp
0x000034ca      31ff           xor edi, edi
0x000034cc      4c89ee         mov rsi, r13
0x000034cf      e87c170000     call sym.dump_remainder
0x000034d4      4885c0         test rax, rax
0x000034d7      0f95c2         setne dl
0x000034da      49014608       add qword [r14 + 8], rax
0x000034de      08542408       or byte [rsp + 8], dl
0x000034e2      4883c301       add rbx, 1
0x000034e6      4983c660       add r14, 0x60
0x000034ea      48391c24       cmp qword [rsp], rbx
0x000034ee      0f8489010000   je 0x367d
0x000034f4      41807e3400     cmp byte [r14 + 0x34], 0
0x000034f9      75e7           jne 0x34e2
0x000034fb      418b6e38       mov ebp, dword [r14 + 0x38]
0x000034ff      85ed           test ebp, ebp
0x00003501      0f8859010000   js 0x3660
0x00003507      498b3e         mov rdi, qword [r14]
0x0000350a      e8d1140000     call sym.pretty_name.isra.7
0x0000350f      4989c5         mov r13, rax
0x00003512      418b4640       mov eax, dword [r14 + 0x40]
0x00003516      458b6630       mov r12d, dword [r14 + 0x30]
0x0000351a      4139c7         cmp r15d, eax
0x0000351d      7446           je 0x3565
0x0000351f      31c0           xor eax, eax
0x00003521      be03000000     mov esi, 3
0x00003526      89ef           mov edi, ebp
0x00003528      e8d3780000     call sym.rpl_fcntl
0x0000352d      4585ff         test r15d, r15d
0x00003530      0f8592020000   jne 0x37c8
0x00003536      85c0           test eax, eax
0x00003538      0f8892020000   js 0x37d0
0x0000353e      89c2           mov edx, eax
0x00003540      80ce08         or dh, 8
0x00003543      39d0           cmp eax, edx
0x00003545      7417           je 0x355e
0x00003547      31c0           xor eax, eax
0x00003549      be04000000     mov esi, 4
0x0000354e      89ef           mov edi, ebp
0x00003550      e8ab780000     call sym.rpl_fcntl
0x00003555      83f8ff         cmp eax, 0xffffffff
0x00003558      0f8472020000   je 0x37d0
0x0000355e      45897e40       mov dword [r14 + 0x40], r15d
0x00003562      4489f8         mov eax, r15d
0x00003565      85c0           test eax, eax
0x00003567      48c7c1feffff.  mov rcx, 0xfffffffffffffffe
0x0000356e      0f8554ffffff   jne 0x34c8
0x00003574      488b542420     mov rdx, qword [rsp + 0x20]
0x00003579      89ee           mov esi, ebp
0x0000357b      bf01000000     mov edi, 1
0x00003580      e87be8ffff     call sym.imp.__fxstat
0x00003585      85c0           test eax, eax
0x00003587      0f855a030000   jne 0x38e7
0x0000358d      8b8424380200.  mov eax, dword [rsp + sym..interp]
0x00003594      41394630       cmp dword [r14 + 0x30], eax
0x00003598      0f8462020000   je 0x3800
0x0000359e      488b94247802.  mov rdx, qword [rsp + 0x278]
0x000035a6      488b8c248002.  mov rcx, qword [rsp + 0x280]
0x000035ae      4181e400f000.  and r12d, 0xf000
0x000035b5      49895610       mov qword [r14 + 0x10], rdx
0x000035b9      49894e18       mov qword [r14 + 0x18], rcx
0x000035bd      4181fc008000.  cmp r12d, 0x8000
0x000035c4      41894630       mov dword [r14 + 0x30], eax
0x000035c8      49c746580000.  mov qword [r14 + 0x58], 0
0x000035d0      0f84aa020000   je 0x3880
0x000035d6      48395c2410     cmp qword [rsp + 0x10], rbx
0x000035db      743f           je 0x361c
0x000035dd      803d31cb2000.  cmp byte [obj.print_headers], 0         ; [0x210115:1]=0
0x000035e4      7436           je 0x361c
0x000035e6      803d23ca2000.  cmp byte [obj.first_file.7393], 0       ; [0x210010:1]=1
0x000035ed      488d050c9a00.  lea rax, [0x0000d000]                   ; "\n"
0x000035f4      488d15069a00.  lea rdx, [0x0000d001]
0x000035fb      488d35568000.  lea rsi, str.s_____s                    ; 0xb658 ; "%s==> %s <==\n"
0x00003602      4c89e9         mov rcx, r13
0x00003605      bf01000000     mov edi, 1
0x0000360a      480f44d0       cmove rdx, rax
0x0000360e      31c0           xor eax, eax
0x00003610      e83be8ffff     call sym.imp.__printf_chk
0x00003615      c605f4c92000.  mov byte [obj.first_file.7393], 0       ; [0x210010:1]=1
0x0000361c      418b7e40       mov edi, dword [r14 + 0x40]
0x00003620      48895c2410     mov qword [rsp + 0x10], rbx
0x00003625      85ff           test edi, edi
0x00003627      0f8555110000   jne 0x4782
0x0000362d      4181fc008000.  cmp r12d, 0x8000
0x00003634      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000363b      0f8587feffff   jne 0x34c8
0x00003641      41807e3500     cmp byte [r14 + 0x35], 0
0x00003646      0f847cfeffff   je 0x34c8
0x0000364c      488b8c245002.  mov rcx, qword [rsp + 0x250]
0x00003654      492b4e08       sub rcx, qword [r14 + 8]
0x00003658      e96bfeffff     jmp 0x34c8
0x0000365d      0f1f00         nop dword [rax]
0x00003660      4c89f7         mov rdi, r14
0x00003663      4489fe         mov esi, r15d
0x00003666      4883c301       add rbx, 1
0x0000366a      e821240000     call sym.recheck
0x0000366f      4983c660       add r14, 0x60
0x00003673      48391c24       cmp qword [rsp], rbx
0x00003677      0f8577feffff   jne 0x34f4
0x0000367d      0fb60d96ca20.  movzx ecx, byte [obj.reopen_inaccessible_files] ; [0x21011a:1]=0
0x00003684      84c9           test cl, cl
0x00003686      7409           je 0x3691
0x00003688      833d91c92000.  cmp dword [obj.follow_mode], 1          ; [0x210020:4]=2
0x0000368f      7451           je 0x36e2
0x00003691      488b442428     mov rax, qword [rsp + 0x28]
0x00003696      83783800       cmp dword [rax + 0x38], 0
0x0000369a      7946           jns 0x36e2
0x0000369c      488b442428     mov rax, qword [rsp + 0x28]
0x000036a1      80783401       cmp byte [rax + 0x34], 1
0x000036a5      7404           je 0x36ab
0x000036a7      84c9           test cl, cl
0x000036a9      7537           jne 0x36e2
0x000036ab      488b442428     mov rax, qword [rsp + 0x28]
0x000036b0      480594000000   add rax, 0x94
0x000036b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000036c0      483b442418     cmp rax, qword [rsp + 0x18]
0x000036c5      0f84c0020000   je 0x398b
0x000036cb      8b7004         mov esi, dword [rax + 4]
0x000036ce      4889c2         mov rdx, rax
0x000036d1      85f6           test esi, esi
0x000036d3      790d           jns 0x36e2
0x000036d5      4883c060       add rax, 0x60
0x000036d9      803a01         cmp byte [rdx], 1
0x000036dc      74e2           je 0x36c0
0x000036de      84c9           test cl, cl
0x000036e0      74de           je 0x36c0
0x000036e2      807c240801     cmp byte [rsp + 8], 1
0x000036e7      0f8578020000   jne 0x3965
0x000036ed      807c244400     cmp byte [rsp + 0x44], 0
0x000036f2      0f856d020000   jne 0x3965
0x000036f8      0fb60518ca20.  movzx eax, byte [obj.monitor_output]    ; [0x210117:1]=0
0x000036ff      84c0           test al, al
0x00003701      88442408       mov byte [rsp + 8], al
0x00003705      0f84a1fdffff   je 0x34ac
0x0000370b      48c78424b800.  mov qword [rsp + 0xb8], 0
0x00003717      48c78424b000.  mov qword [rsp + 0xb0], 0
0x00003723      31c0           xor eax, eax
0x00003725      b910000000     mov ecx, 0x10
0x0000372a      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000372f      fc             cld
0x00003730      f348ab         rep stosq qword [rdi], rax
0x00003733      488b742420     mov rsi, qword [rsp + 0x20]
0x00003738      4c8d8424b000.  lea r8, [rsp + 0xb0]
0x00003740      31c9           xor ecx, ecx
0x00003742      31d2           xor edx, edx
0x00003744      bf02000000     mov edi, 2
0x00003749      48838c242002.  or qword [rsp + 0x220], 2
0x00003752      e849e6ffff     call sym.imp.select
0x00003757      83e801         sub eax, 1
0x0000375a      0f84e1100000   je 0x4841
0x00003760      807c240800     cmp byte [rsp + 8], 0
0x00003765      0f8541fdffff   jne 0x34ac
0x0000376b      807c244800     cmp byte [rsp + 0x48], 0
0x00003770      0f8597f2ffff   jne 0x2a0d
0x00003776      8b3d94c92000   mov edi, dword [obj.pid]                ; [0x210110:4]=0
0x0000377c      85ff           test edi, edi
0x0000377e      0f852d020000   jne 0x39b1
0x00003784      f20f10442430   movsd xmm0, qword [rsp + 0x30]
0x0000378a      e801710000     call sym.xnanosleep
0x0000378f      85c0           test eax, eax
0x00003791      0f8415fdffff   je 0x34ac
0x00003797      488d35dd8100.  lea rsi, str.cannot_read_realtime_clock ; 0xb97b ; "cannot read realtime clock"
0x0000379e      ba05000000     mov edx, 5
0x000037a3      31ff           xor edi, edi
0x000037a5      e826e4ffff     call sym.imp.dcgettext
0x000037aa      4889c3         mov rbx, rax
0x000037ad      e85ee3ffff     call sym.imp.__errno_location
0x000037b2      8b30           mov esi, dword [rax]
0x000037b4      4889da         mov rdx, rbx
0x000037b7      bf01000000     mov edi, 1
0x000037bc      31c0           xor eax, eax
0x000037be      e89de6ffff     call sym.imp.error
0x000037c3      0f1f440000     nop dword [rax + rax]
0x000037c8      85c0           test eax, eax
0x000037ca      0f898efdffff   jns 0x355e
0x000037d0      e83be3ffff     call sym.imp.__errno_location
0x000037d5      418b5630       mov edx, dword [r14 + 0x30]
0x000037d9      81e200f00000   and edx, 0xf000
0x000037df      81fa00800000   cmp edx, 0x8000
0x000037e5      0f85a30f0000   jne 0x478e
0x000037eb      833801         cmp dword [rax], 1
0x000037ee      0f859a0f0000   jne 0x478e
0x000037f4      418b4640       mov eax, dword [r14 + 0x40]
0x000037f8      e968fdffff     jmp 0x3565
0x000037fd      0f1f00         nop dword [rax]
0x00003800      89c2           mov edx, eax
0x00003802      81e200f00000   and edx, 0xf000
0x00003808      81fa00800000   cmp edx, 0x8000
0x0000380e      488b94247802.  mov rdx, qword [rsp + 0x278]
0x00003816      0f8413010000   je 0x392f
0x0000381c      493b5610       cmp rdx, qword [r14 + 0x10]
0x00003820      488b8c248002.  mov rcx, qword [rsp + 0x280]
0x00003828      0f8580fdffff   jne 0x35ae
0x0000382e      41394e18       cmp dword [r14 + 0x18], ecx
0x00003832      0f8576fdffff   jne 0x35ae
0x00003838      498b4658       mov rax, qword [r14 + 0x58]
0x0000383c      483b05d5c720.  cmp rax, qword [obj.max_n_unchanged_stats_between_opens] ; [0x210018:8]=5
0x00003843      488d5001       lea rdx, [rax + 1]
0x00003847      49895658       mov qword [r14 + 0x58], rdx
0x0000384b      0f8291fcffff   jb 0x34e2
0x00003851      833dc8c72000.  cmp dword [obj.follow_mode], 1          ; [0x210020:4]=2
0x00003858      0f8584fcffff   jne 0x34e2
0x0000385e      31f6           xor esi, esi
0x00003860      41837e4000     cmp dword [r14 + 0x40], 0
0x00003865      4c89f7         mov rdi, r14
0x00003868      400f95c6       setne sil
0x0000386c      e81f220000     call sym.recheck
0x00003871      49c746580000.  mov qword [r14 + 0x58], 0
0x00003879      e964fcffff     jmp 0x34e2
0x0000387e      6690           nop
0x00003880      498b4608       mov rax, qword [r14 + 8]
0x00003884      483984245002.  cmp qword [rsp + 0x250], rax
0x0000388c      0f8d44fdffff   jge 0x35d6
0x00003892      4c89ea         mov rdx, r13
0x00003895      be03000000     mov esi, 3
0x0000389a      31ff           xor edi, edi
0x0000389c      e87f630000     call sym.quotearg_n_style_colon
0x000038a1      488d35db7d00.  lea rsi, str.s:_file_truncated          ; 0xb683 ; "%s: file truncated"
0x000038a8      ba05000000     mov edx, 5
0x000038ad      31ff           xor edi, edi
0x000038af      4889442438     mov qword [rsp + 0x38], rax
0x000038b4      e817e3ffff     call sym.imp.dcgettext
0x000038b9      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000038be      4889c2         mov rdx, rax
0x000038c1      31f6           xor esi, esi
0x000038c3      31ff           xor edi, edi
0x000038c5      31c0           xor eax, eax
0x000038c7      e894e5ffff     call sym.imp.error
0x000038cc      4c89e9         mov rcx, r13
0x000038cf      31d2           xor edx, edx
0x000038d1      31f6           xor esi, esi
0x000038d3      89ef           mov edi, ebp
0x000038d5      e8c6150000     call sym.xlseek
0x000038da      49c746080000.  mov qword [r14 + 8], 0
0x000038e2      e9effcffff     jmp 0x35d6
0x000038e7      41c74638ffff.  mov dword [r14 + 0x38], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x000038ef      e81ce2ffff     call sym.imp.__errno_location
0x000038f4      4989c4         mov r12, rax
0x000038f7      8b00           mov eax, dword [rax]
0x000038f9      4c89ea         mov rdx, r13
0x000038fc      31ff           xor edi, edi
0x000038fe      be03000000     mov esi, 3
0x00003903      4189463c       mov dword [r14 + 0x3c], eax
0x00003907      e814630000     call sym.quotearg_n_style_colon
0x0000390c      418b3424       mov esi, dword [r12]
0x00003910      488d15b59000.  lea rdx, [0x0000c9cc]                   ; "%s"
0x00003917      4889c1         mov rcx, rax
0x0000391a      31ff           xor edi, edi
0x0000391c      31c0           xor eax, eax
0x0000391e      e83de5ffff     call sym.imp.error
0x00003923      89ef           mov edi, ebp
0x00003925      e8b6e3ffff     call sym.imp.close
0x0000392a      e9b3fbffff     jmp 0x34e2
0x0000392f      488b8c245002.  mov rcx, qword [rsp + 0x250]
0x00003937      49394e08       cmp qword [r14 + 8], rcx
0x0000393b      0f84dbfeffff   je 0x381c
0x00003941      488b8c248002.  mov rcx, qword [rsp + 0x280]
0x00003949      e960fcffff     jmp 0x35ae
0x0000394e      803dc5c72000.  cmp byte [obj.reopen_inaccessible_files], 0 ; [0x21011a:1]=0
0x00003955      7434           je 0x398b
0x00003957      833dc2c62000.  cmp dword [obj.follow_mode], 1          ; [0x210020:4]=2
0x0000395e      752b           jne 0x398b
0x00003960      c644240800     mov byte [rsp + 8], 0
0x00003965      488b3d5cc720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x0000396c      e87fe5ffff     call sym.imp.fflush_unlocked
0x00003971      85c0           test eax, eax
0x00003973      0f85dc0e0000   jne 0x4855
0x00003979      803d97c72000.  cmp byte [obj.monitor_output], 0        ; [0x210117:1]=0
0x00003980      0f84dafdffff   je 0x3760
0x00003986      e980fdffff     jmp 0x370b
0x0000398b      488d35ba7f00.  lea rsi, str.no_files_remaining         ; 0xb94c ; "no files remaining"
0x00003992      31ff           xor edi, edi
0x00003994      ba05000000     mov edx, 5
0x00003999      e832e2ffff     call sym.imp.dcgettext
0x0000399e      31f6           xor esi, esi
0x000039a0      4889c2         mov rdx, rax
0x000039a3      31ff           xor edi, edi
0x000039a5      31c0           xor eax, eax
0x000039a7      e8b4e4ffff     call sym.imp.error
0x000039ac      e95cf0ffff     jmp 0x2a0d
0x000039b1      31f6           xor esi, esi
0x000039b3      e8b8e3ffff     call sym.imp.kill
0x000039b8      85c0           test eax, eax
0x000039ba      0f84c4fdffff   je 0x3784
0x000039c0      e84be1ffff     call sym.imp.__errno_location
0x000039c5      833801         cmp dword [rax], 1
0x000039c8      0f84b6fdffff   je 0x3784
0x000039ce      0fb6442450     movzx eax, byte [rsp + 0x50]
0x000039d3      88442448       mov byte [rsp + 0x48], al
0x000039d7      e9d0faffff     jmp 0x34ac
0x000039dc      4889df         mov rdi, rbx
0x000039df      4889442438     mov qword [rsp + 0x38], rax
0x000039e4      4889eb         mov rbx, rbp
0x000039e7      e804e1ffff     call sym.imp.free
0x000039ec      488b442438     mov rax, qword [rsp + 0x38]
0x000039f1      4883c001       add rax, 1
0x000039f5      0f84fb010000   je 0x3bf6
0x000039fb      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00003a00      eb0a           jmp 0x3a0c
0x00003a02      488b9b082000.  mov rbx, qword [rbx + 0x2008]
0x00003a09      4989c4         mov r12, rax
0x00003a0c      488b93002000.  mov rdx, qword [rbx + 0x2000]
0x00003a13      4c89e0         mov rax, r12
0x00003a16      4829d0         sub rax, rdx
0x00003a19      4839c1         cmp rcx, rax
0x00003a1c      72e4           jb 0x3a02
0x00003a1e      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00003a23      31c0           xor eax, eax
0x00003a25      4c39e1         cmp rcx, r12
0x00003a28      7306           jae 0x3a30
0x00003a2a      4c89e0         mov rax, r12
0x00003a2d      4829c8         sub rax, rcx
0x00003a30      4889d6         mov rsi, rdx
0x00003a33      4829c6         sub rsi, rax
0x00003a36      0f85ac010000   jne 0x3be8
0x00003a3c      488b9b082000.  mov rbx, qword [rbx + 0x2008]
0x00003a43      4885db         test rbx, rbx
0x00003a46      7416           je 0x3a5e
0x00003a48      488bb3002000.  mov rsi, qword [rbx + 0x2000]
0x00003a4f      4885f6         test rsi, rsi
0x00003a52      74e8           je 0x3a3c
0x00003a54      4889df         mov rdi, rbx
0x00003a57      e834100000     call sym.xwrite_stdout.part.10
0x00003a5c      ebde           jmp 0x3a3c
0x00003a5e      c644241801     mov byte [rsp + 0x18], 1
0x00003a63      4889ef         mov rdi, rbp
0x00003a66      eb0f           jmp 0x3a77
0x00003a68      488b9f082000.  mov rbx, qword [rdi + 0x2008]
0x00003a6f      e87ce0ffff     call sym.imp.free
0x00003a74      4889df         mov rdi, rbx
0x00003a77      4885ff         test rdi, rdi
0x00003a7a      75ec           jne 0x3a68
0x00003a7c      e92ff2ffff     jmp 0x2cb0
0x00003a81      488b742448     mov rsi, qword [rsp + 0x48]
0x00003a86      bf04000000     mov edi, 4
0x00003a8b      e890600000     call sym.quotearg_style
0x00003a90      488d35b07b00.  lea rsi, str.error_reading__s           ; 0xb647 ; "error reading %s"
0x00003a97      ba05000000     mov edx, 5
0x00003a9c      31ff           xor edi, edi
0x00003a9e      4889c3         mov rbx, rax
0x00003aa1      e82ae1ffff     call sym.imp.dcgettext
0x00003aa6      4889c5         mov rbp, rax
0x00003aa9      e862e0ffff     call sym.imp.__errno_location
0x00003aae      8b30           mov esi, dword [rax]
0x00003ab0      4889d9         mov rcx, rbx
0x00003ab3      4889ea         mov rdx, rbp
0x00003ab6      31ff           xor edi, edi
0x00003ab8      31c0           xor eax, eax
0x00003aba      e8a1e3ffff     call sym.imp.error
0x00003abf      c644241800     mov byte [rsp + 0x18], 0
0x00003ac4      e9bdf1ffff     jmp 0x2c86
0x00003ac9      83ed01         sub ebp, 1
0x00003acc      0f8412ecffff   je 0x26e4
0x00003ad2      c684248b0000.  mov byte [rsp + 0x8b], 1
0x00003ada      e91befffff     jmp 0x29fa
0x00003adf      448b742408     mov r14d, dword [rsp + 8]
0x00003ae4      31f6           xor esi, esi
0x00003ae6      ba01000000     mov edx, 1
0x00003aeb      4489f7         mov edi, r14d
0x00003aee      e8ade1ffff     call sym.imp.lseek
0x00003af3      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003af7      4889c3         mov rbx, rax
0x00003afa      0f848defffff   je 0x2a8d
0x00003b00      31f6           xor esi, esi
0x00003b02      ba02000000     mov edx, 2
0x00003b07      4489f7         mov edi, r14d
0x00003b0a      e891e1ffff     call sym.imp.lseek
0x00003b0f      4839c3         cmp rbx, rax
0x00003b12      4989c0         mov r8, rax
0x00003b15      0f8db5000000   jge 0x3bd0
0x00003b1b      4885c0         test rax, rax
0x00003b1e      48898424b000.  mov qword [rsp + 0xb0], rax
0x00003b26      0f8484f1ffff   je 0x2cb0
0x00003b2c      488b542420     mov rdx, qword [rsp + 0x20]
0x00003b31      8b742408       mov esi, dword [rsp + 8]
0x00003b35      4c8d8c24b000.  lea r9, [rsp + 0xb0]
0x00003b3d      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00003b42      4889d9         mov rcx, rbx
0x00003b45      e826140000     call sym.file_lines
0x00003b4a      88442418       mov byte [rsp + 0x18], al
0x00003b4e      e95df1ffff     jmp 0x2cb0
0x00003b53      488b4c2448     mov rcx, qword [rsp + 0x48]
0x00003b58      8b7c2408       mov edi, dword [rsp + 8]
0x00003b5c      ba01000000     mov edx, 1
0x00003b61      31f6           xor esi, esi
0x00003b63      e838130000     call sym.xlseek
0x00003b68      4889c3         mov rbx, rax
0x00003b6b      e99bf5ffff     jmp 0x310b
0x00003b70      ba05000000     mov edx, 5
0x00003b75      488d35c48b00.  lea rsi, str.warning:___retry_only_effective_for_the_initial_open ; 0xc740 ; "warning: --retry only effective for the initial open"
0x00003b7c      e913edffff     jmp 0x2894
0x00003b81      4889eb         mov rbx, rbp
0x00003b84      482b5c2420     sub rbx, qword [rsp + 0x20]
0x00003b89      488b4c2448     mov rcx, qword [rsp + 0x48]
0x00003b8e      8b7c2408       mov edi, dword [rsp + 8]
0x00003b92      31d2           xor edx, edx
0x00003b94      4889de         mov rsi, rbx
0x00003b97      e804130000     call sym.xlseek
0x00003b9c      e980f5ffff     jmp 0x3121
0x00003ba1      4c8b742420     mov r14, qword [rsp + 0x20]
0x00003ba6      8b7c2408       mov edi, dword [rsp + 8]
0x00003baa      ba02000000     mov edx, 2
0x00003baf      4c89f6         mov rsi, r14
0x00003bb2      48f7de         neg rsi
0x00003bb5      e8e6e0ffff     call sym.imp.lseek
0x00003bba      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003bbe      4889c3         mov rbx, rax
0x00003bc1      0f84f6f2ffff   je 0x2ebd
0x00003bc7      4a8d2c30       lea rbp, [rax + r14]
0x00003bcb      e906f5ffff     jmp 0x30d6
0x00003bd0      488b4c2448     mov rcx, qword [rsp + 0x48]
0x00003bd5      8b7c2408       mov edi, dword [rsp + 8]
0x00003bd9      31d2           xor edx, edx
0x00003bdb      4889de         mov rsi, rbx
0x00003bde      e8bd120000     call sym.xlseek
0x00003be3      e9a5eeffff     jmp 0x2a8d
0x00003be8      488d3c03       lea rdi, [rbx + rax]
0x00003bec      e89f0e0000     call sym.xwrite_stdout.part.10
0x00003bf1      e946feffff     jmp 0x3a3c
0x00003bf6      488b742448     mov rsi, qword [rsp + 0x48]
0x00003bfb      bf04000000     mov edi, 4
0x00003c00      e81b5f0000     call sym.quotearg_style
0x00003c05      488d353b7a00.  lea rsi, str.error_reading__s           ; 0xb647 ; "error reading %s"
0x00003c0c      ba05000000     mov edx, 5
0x00003c11      31ff           xor edi, edi
0x00003c13      4889c3         mov rbx, rax
0x00003c16      e8b5dfffff     call sym.imp.dcgettext
0x00003c1b      4989c4         mov r12, rax
0x00003c1e      e8eddeffff     call sym.imp.__errno_location
0x00003c23      8b30           mov esi, dword [rax]
0x00003c25      31ff           xor edi, edi
0x00003c27      4889d9         mov rcx, rbx
0x00003c2a      4c89e2         mov rdx, r12
0x00003c2d      31c0           xor eax, eax
0x00003c2f      e82ce2ffff     call sym.imp.error
0x00003c34      4889ef         mov rdi, rbp
0x00003c37      e93bfeffff     jmp 0x3a77
0x00003c3c      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00003c41      752e           jne 0x3c71
0x00003c43      31ff           xor edi, edi
0x00003c45      e8c6240000     call sym.usage
0x00003c4a      488d35878a00.  lea rsi, str.option_used_in_invalid_context_____c ; 0xc6d8 ; "option used in invalid context -- %c"
0x00003c51      ba05000000     mov edx, 5
0x00003c56      31ff           xor edi, edi
0x00003c58      e873dfffff     call sym.imp.dcgettext
0x00003c5d      4489e9         mov ecx, r13d
0x00003c60      4889c2         mov rdx, rax
0x00003c63      31f6           xor esi, esi
0x00003c65      bf01000000     mov edi, 1
0x00003c6a      31c0           xor eax, eax
0x00003c6c      e8efe1ffff     call sym.imp.error
0x00003c71      bf01000000     mov edi, 1
0x00003c76      e895240000     call sym.usage
0x00003c7b      488d9c242002.  lea rbx, [rsp + 0x220]
0x00003c83      884c2420       mov byte [rsp + 0x20], cl
0x00003c87      4531e4         xor r12d, r12d
0x00003c8a      4c3b2424       cmp r12, qword [rsp]
0x00003c8e      7467           je 0x3cf7
0x00003c90      496bc460       imul rax, r12, 0x60
0x00003c94      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003c99      4889da         mov rdx, rbx
0x00003c9c      bf01000000     mov edi, 1
0x00003ca1      488b3401       mov rsi, qword [rcx + rax]
0x00003ca5      e856dfffff     call sym.imp.__lxstat
0x00003caa      85c0           test eax, eax
0x00003cac      7517           jne 0x3cc5
0x00003cae      8b8424380200.  mov eax, dword [rsp + sym..interp]
0x00003cb5      2500f00000     and eax, 0xf000
0x00003cba      3d00a00000     cmp eax, 0xa000
0x00003cbf      0f8483f7ffff   je 0x3448
0x00003cc5      4983c401       add r12, 1
0x00003cc9      ebbf           jmp 0x3c8a
0x00003ccb      488b442428     mov rax, qword [rsp + 0x28]
0x00003cd0      837838ff       cmp dword [rax + 0x38], 0xffffffff
0x00003cd4      0f8492f7ffff   je 0x346c
0x00003cda      8b4030         mov eax, dword [rax + 0x30]
0x00003cdd      4531ff         xor r15d, r15d
0x00003ce0      89442408       mov dword [rsp + 8], eax
0x00003ce4      2500f00000     and eax, 0xf000
0x00003ce9      3d00800000     cmp eax, 0x8000
0x00003cee      410f95c7       setne r15b
0x00003cf2      e978f7ffff     jmp 0x346f
0x00003cf7      488b742428     mov rsi, qword [rsp + 0x28]
0x00003cfc      488b4c2460     mov rcx, qword [rsp + 0x60]
0x00003d01      4c89642418     mov qword [rsp + 0x18], r12
0x00003d06      488d4630       lea rax, [rsi + 0x30]
0x00003d0a      488d4c0e30     lea rcx, [rsi + rcx + 0x30]
0x00003d0f      eb26           jmp 0x3d37
0x00003d11      83780800       cmp dword [rax + 8], 0
0x00003d15      781c           js 0x3d33
0x00003d17      8b10           mov edx, dword [rax]
0x00003d19      81e200f00000   and edx, 0xf000
0x00003d1f      81fa00800000   cmp edx, 0x8000
0x00003d25      740c           je 0x3d33
0x00003d27      81fa00100000   cmp edx, 0x1000
0x00003d2d      0f8515f7ffff   jne 0x3448
0x00003d33      4883c060       add rax, 0x60
0x00003d37      4839c1         cmp rcx, rax
0x00003d3a      75d5           jne 0x3d11
0x00003d3c      80bc248b0000.  cmp byte [rsp + 0x8b], 0
0x00003d44      750d           jne 0x3d53
0x00003d46      833dd3c22000.  cmp dword [obj.follow_mode], 2          ; [0x210020:4]=2
0x00003d4d      0f84f5f6ffff   je 0x3448
0x00003d53      e828e0ffff     call sym.imp.inotify_init
0x00003d58      85c0           test eax, eax
0x00003d5a      4189c5         mov r13d, eax
0x00003d5d      0f889a010000   js 0x3efd
0x00003d63      488b3d5ec320.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x00003d6a      e881e1ffff     call sym.imp.fflush_unlocked
0x00003d6f      85c0           test eax, eax
0x00003d71      0f85df090000   jne 0x4756
0x00003d77      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00003d7c      488d0d4d0c00.  lea rcx, sym.wd_comparator              ; 0x49d0
0x00003d83      488d15360c00.  lea rdx, sym.wd_hasher                  ; 0x49c0 ; "HcGD1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f"
0x00003d8a      4531c0         xor r8d, r8d
0x00003d8d      31f6           xor esi, esi
0x00003d8f      e8ac370000     call sym.hash_initialize
0x00003d94      4885c0         test rax, rax
0x00003d97      4989c6         mov r14, rax
0x00003d9a      0f845b070000   je 0x44fb
0x00003da0      833d79c22000.  cmp dword [obj.follow_mode], 1          ; [0x210020:4]=2
0x00003da7      ba060c0000     mov edx, 0xc06
0x00003dac      b802000000     mov eax, 2
0x00003db1      4c8b7c2428     mov r15, qword [rsp + 0x28]
0x00003db6      c644241000     mov byte [rsp + 0x10], 0
0x00003dbb      c644243800     mov byte [rsp + 0x38], 0
0x00003dc0      4c89742408     mov qword [rsp + 8], r14
0x00003dc5      0f44c2         cmove eax, edx
0x00003dc8      8b1552c22000   mov edx, dword [obj.follow_mode]        ; [0x210020:4]=2
0x00003dce      4531e4         xor r12d, r12d
0x00003dd1      89442444       mov dword [rsp + 0x44], eax
0x00003dd5      4c89fb         mov rbx, r15
0x00003dd8      4839eb         cmp rbx, rbp
0x00003ddb      0f84fc010000   je 0x3fdd
0x00003de1      807b3400       cmp byte [rbx + 0x34], 0
0x00003de5      0f85a3010000   jne 0x3f8e
0x00003deb      4c8b3b         mov r15, qword [rbx]
0x00003dee      31c0           xor eax, eax
0x00003df0      4883c9ff       or rcx, 0xffffffffffffffff
0x00003df4      4c89ff         mov rdi, r15
0x00003df7      f2ae           repne scasb al, byte [rdi]
0x00003df9      c74344ffffff.  mov dword [rbx + 0x44], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00003e00      4889c8         mov rax, rcx
0x00003e03      48f7d0         not rax
0x00003e06      4883e801       sub rax, 1
0x00003e0a      4939c4         cmp r12, rax
0x00003e0d      4c0f42e0       cmovb r12, rax
0x00003e11      83ea01         sub edx, 1
0x00003e14      7567           jne 0x3e7d
0x00003e16      4c89ff         mov rdi, r15
0x00003e19      e8d22c0000     call sym.dir_len
0x00003e1e      498d1407       lea rdx, [r15 + rax]
0x00003e22      4989c6         mov r14, rax
0x00003e25      4c89ff         mov rdi, r15
0x00003e28      0fb602         movzx eax, byte [rdx]
0x00003e2b      4889542458     mov qword [rsp + 0x58], rdx
0x00003e30      88442448       mov byte [rsp + 0x48], al
0x00003e34      e8772d0000     call sym.last_component
0x00003e39      488b542458     mov rdx, qword [rsp + 0x58]
0x00003e3e      4c29f8         sub rax, r15
0x00003e41      4d85f6         test r14, r14
0x00003e44      48894350       mov qword [rbx + 0x50], rax
0x00003e48      488d35857900.  lea rsi, [0x0000b7d4]                   ; "."
0x00003e4f      c60200         mov byte [rdx], 0
0x00003e52      7403           je 0x3e57
0x00003e54      488b33         mov rsi, qword [rbx]
0x00003e57      ba84070000     mov edx, 0x784
0x00003e5c      4489ef         mov edi, r13d
0x00003e5f      e87cdfffff     call sym.imp.inotify_add_watch
0x00003e64      0fb64c2448     movzx ecx, byte [rsp + 0x48]
0x00003e69      894348         mov dword [rbx + 0x48], eax
0x00003e6c      488b03         mov rax, qword [rbx]
0x00003e6f      42880c30       mov byte [rax + r14], cl
0x00003e73      837b4800       cmp dword [rbx + 0x48], 0
0x00003e77      0f8845080000   js 0x46c2
0x00003e7d      8b542444       mov edx, dword [rsp + 0x44]
0x00003e81      488b33         mov rsi, qword [rbx]
0x00003e84      4489ef         mov edi, r13d
0x00003e87      e854dfffff     call sym.imp.inotify_add_watch
0x00003e8c      85c0           test eax, eax
0x00003e8e      894344         mov dword [rbx + 0x44], eax
0x00003e91      0f89d2000000   jns 0x3f69
0x00003e97      837b38ff       cmp dword [rbx + 0x38], 0xffffffff
0x00003e9b      0fb6442410     movzx eax, byte [rsp + 0x10]
0x00003ea0      0fb6742450     movzx esi, byte [rsp + 0x50]
0x00003ea5      0f45c6         cmovne eax, esi
0x00003ea8      88442410       mov byte [rsp + 0x10], al
0x00003eac      e85fdcffff     call sym.imp.__errno_location
0x00003eb1      4989c6         mov r14, rax
0x00003eb4      8b00           mov eax, dword [rax]
0x00003eb6      89c2           mov edx, eax
0x00003eb8      83e2ef         and edx, 0xffffffef                     ; 4294967279
0x00003ebb      83fa0c         cmp edx, 0xc
0x00003ebe      0f85d3000000   jne 0x3f97
0x00003ec4      4c8b742408     mov r14, qword [rsp + 8]
0x00003ec9      488d35407a00.  lea rsi, str.inotify_resources_exhausted ; 0xb910 ; "inotify resources exhausted"
0x00003ed0      ba05000000     mov edx, 5
0x00003ed5      31ff           xor edi, edi
0x00003ed7      e8f4dcffff     call sym.imp.dcgettext
0x00003edc      31f6           xor esi, esi
0x00003ede      4889c2         mov rdx, rax
0x00003ee1      31ff           xor edi, edi
0x00003ee3      31c0           xor eax, eax
0x00003ee5      e876dfffff     call sym.imp.error
0x00003eea      4c89f7         mov rdi, r14
0x00003eed      e89e380000     call sym.hash_free
0x00003ef2      e819dcffff     call sym.imp.__errno_location
0x00003ef7      c70000000000   mov dword [rax], 0
0x00003efd      488d35e48900.  lea rsi, str.inotify_cannot_be_used__reverting_to_polling ; 0xc8e8 ; "inotify cannot be used, reverting to polling"
0x00003f04      ba05000000     mov edx, 5
0x00003f09      31ff           xor edi, edi
0x00003f0b      e8c0dcffff     call sym.imp.dcgettext
0x00003f10      4889c3         mov rbx, rax
0x00003f13      e8f8dbffff     call sym.imp.__errno_location
0x00003f18      8b30           mov esi, dword [rax]
0x00003f1a      4889da         mov rdx, rbx
0x00003f1d      31c0           xor eax, eax
0x00003f1f      31ff           xor edi, edi
0x00003f21      e83adfffff     call sym.imp.error
0x00003f26      488b442428     mov rax, qword [rsp + 0x28]
0x00003f2b      488b742460     mov rsi, qword [rsp + 0x60]
0x00003f30      488d6844       lea rbp, [rax + 0x44]
0x00003f34      488d5c3044     lea rbx, [rax + rsi + 0x44]
0x00003f39      eb24           jmp 0x3f5f
0x00003f3b      8b7500         mov esi, dword [rbp]
0x00003f3e      83feff         cmp esi, 0xffffffff
0x00003f41      7408           je 0x3f4b
0x00003f43      4489ef         mov edi, r13d
0x00003f46      e8d5dfffff     call sym.imp.inotify_rm_watch
0x00003f4b      8b7504         mov esi, dword [rbp + 4]
0x00003f4e      83feff         cmp esi, 0xffffffff
0x00003f51      7408           je 0x3f5b
0x00003f53      4489ef         mov edi, r13d
0x00003f56      e8c5dfffff     call sym.imp.inotify_rm_watch
0x00003f5b      4883c560       add rbp, 0x60
0x00003f5f      4839eb         cmp rbx, rbp
0x00003f62      75d7           jne 0x3f3b
0x00003f64      e9dff4ffff     jmp 0x3448
0x00003f69      488b7c2408     mov rdi, qword [rsp + 8]
0x00003f6e      4889de         mov rsi, rbx
0x00003f71      e8ca3d0000     call sym.hash_insert
0x00003f76      4885c0         test rax, rax
0x00003f79      0f847c050000   je 0x44fb
0x00003f7f      0fb6442450     movzx eax, byte [rsp + 0x50]
0x00003f84      88442438       mov byte [rsp + 0x38], al
0x00003f88      8b1592c02000   mov edx, dword [obj.follow_mode]        ; [0x210020:4]=2
0x00003f8e      4883c360       add rbx, 0x60
0x00003f92      e941feffff     jmp 0x3dd8
0x00003f97      3b433c         cmp eax, dword [rbx + 0x3c]
0x00003f9a      74ec           je 0x3f88
0x00003f9c      488b33         mov rsi, qword [rbx]
0x00003f9f      bf04000000     mov edi, 4
0x00003fa4      e8775b0000     call sym.quotearg_style
0x00003fa9      488d357c7900.  lea rsi, str.cannot_watch__s            ; 0xb92c ; "cannot watch %s"
0x00003fb0      ba05000000     mov edx, 5
0x00003fb5      31ff           xor edi, edi
0x00003fb7      4889442448     mov qword [rsp + 0x48], rax
0x00003fbc      e80fdcffff     call sym.imp.dcgettext
0x00003fc1      488b4c2448     mov rcx, qword [rsp + 0x48]
0x00003fc6      418b36         mov esi, dword [r14]
0x00003fc9      4889c2         mov rdx, rax
0x00003fcc      31ff           xor edi, edi
0x00003fce      31c0           xor eax, eax
0x00003fd0      e88bdeffff     call sym.imp.error
0x00003fd5      8b1545c02000   mov edx, dword [obj.follow_mode]        ; [0x210020:4]=2
0x00003fdb      ebb1           jmp 0x3f8e
0x00003fdd      83fa02         cmp edx, 2
0x00003fe0      4c8b742408     mov r14, qword [rsp + 8]
0x00003fe5      0f84ad050000   je 0x4598
0x00003feb      4c8b7c2428     mov r15, qword [rsp + 0x28]
0x00003ff0      488b442460     mov rax, qword [rsp + 0x60]
0x00003ff5      488d9c249800.  lea rbx, [rsp + 0x98]
0x00003ffd      498d4407a0     lea rax, [r15 + rax - 0x60]
0x00004002      488984249800.  mov qword [rsp + 0x98], rax
0x0000400a      488d84242002.  lea rax, [rsp + 0x220]
0x00004012      4889442408     mov qword [rsp + 8], rax
0x00004017      eb50           jmp 0x4069
0x00004019      41837f38ff     cmp dword [r15 + 0x38], 0xffffffff
0x0000401e      743a           je 0x405a
0x00004020      488b542408     mov rdx, qword [rsp + 8]
0x00004025      498b37         mov rsi, qword [r15]
0x00004028      bf01000000     mov edi, 1
0x0000402d      e87eddffff     call sym.imp.__xstat
0x00004032      85c0           test eax, eax
0x00004034      7524           jne 0x405a
0x00004036      488b84242002.  mov rax, qword [rsp + 0x220]
0x0000403e      49394720       cmp qword [r15 + 0x20], rax
0x00004042      0f859f050000   jne 0x45e7
0x00004048      488b84242802.  mov rax, qword [rsp + 0x228]
0x00004050      49394728       cmp qword [r15 + 0x28], rax
0x00004054      0f858d050000   jne 0x45e7
0x0000405a      4889de         mov rsi, rbx
0x0000405d      4c89ff         mov rdi, r15
0x00004060      e86b110000     call sym.check_fspec
0x00004065      4983c760       add r15, 0x60
0x00004069      4939ef         cmp r15, rbp
0x0000406c      741c           je 0x408a
0x0000406e      41807f3400     cmp byte [r15 + 0x34], 0
0x00004073      75f0           jne 0x4065
0x00004075      833da4bf2000.  cmp dword [obj.follow_mode], 1          ; [0x210020:4]=2
0x0000407c      759b           jne 0x4019
0x0000407e      31f6           xor esi, esi
0x00004080      4c89ff         mov rdi, r15
0x00004083      e8081a0000     call sym.recheck
0x00004088      ebd0           jmp 0x405a
0x0000408a      498d442411     lea rax, [r12 + 0x11]
0x0000408f      4531ff         xor r15d, r15d
0x00004092      4889c7         mov rdi, rax
0x00004095      4889442438     mov qword [rsp + 0x38], rax
0x0000409a      e831640000     call sym.xmalloc
0x0000409f      4489e9         mov ecx, r13d
0x000040a2      4889442410     mov qword [rsp + 0x10], rax
0x000040a7      b801000000     mov eax, 1
0x000040ac      48d3e0         shl rax, cl
0x000040af      48c744240800.  mov qword [rsp + 8], 0
0x000040b8      c74424480300.  mov dword [rsp + 0x48], 3
0x000040c0      4889442470     mov qword [rsp + 0x70], rax
0x000040c5      488d84241001.  lea rax, [rsp + 0x110]
0x000040cd      4889442458     mov qword [rsp + 0x58], rax
0x000040d2      4963c5         movsxd rax, r13d
0x000040d5      488984248000.  mov qword [rsp + 0x80], rax
0x000040dd      833d3cbf2000.  cmp dword [obj.follow_mode], 1          ; [0x210020:4]=2
0x000040e4      0f8491010000   je 0x427b
0x000040ea      0fb66c2420     movzx ebp, byte [rsp + 0x20]
0x000040ef      488d9c24a000.  lea rbx, [rsp + 0xa0]
0x000040f7      4c3b7c2408     cmp r15, qword [rsp + 8]
0x000040fc      0f82db040000   jb 0x45dd
0x00004102      8b3d08c02000   mov edi, dword [obj.pid]                ; [0x210110:4]=0
0x00004108      85ff           test edi, edi
0x0000410a      7443           je 0x414f
0x0000410c      4084ed         test bpl, bpl
0x0000410f      0f857a050000   jne 0x468f
0x00004115      31f6           xor esi, esi
0x00004117      e854dcffff     call sym.imp.kill
0x0000411c      85c0           test eax, eax
0x0000411e      0f8419010000   je 0x423d
0x00004124      e8e7d9ffff     call sym.imp.__errno_location
0x00004129      833801         cmp dword [rax], 1
0x0000412c      0f840b010000   je 0x423d
0x00004132      0fb66c2450     movzx ebp, byte [rsp + 0x50]
0x00004137      48c78424a800.  mov qword [rsp + 0xa8], 0
0x00004143      48c78424a000.  mov qword [rsp + 0xa0], 0
0x0000414f      31c0           xor eax, eax
0x00004151      b910000000     mov ecx, 0x10
0x00004156      488b7c2458     mov rdi, qword [rsp + 0x58]
0x0000415b      fc             cld
0x0000415c      f348ab         rep stosq qword [rdi], rax
0x0000415f      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x00004167      e8e4daffff     call sym.imp.__fdelt_chk
0x0000416c      488b4c2470     mov rcx, qword [rsp + 0x70]
0x00004171      48098cc41001.  or qword [rsp + rax*8 + 0x110], rcx
0x00004179      803d97bf2000.  cmp byte [obj.monitor_output], 0        ; [0x210117:1]=0
0x00004180      7409           je 0x418b
0x00004182      48838c241001.  or qword [rsp + 0x110], 2
0x0000418b      4531c0         xor r8d, r8d
0x0000418e      833d7bbf2000.  cmp dword [obj.pid], 0                  ; [0x210110:4]=0
0x00004195      bf01000000     mov edi, 1
0x0000419a      488b742458     mov rsi, qword [rsp + 0x58]
0x0000419f      4c0f45c3       cmovne r8, rbx
0x000041a3      4585ed         test r13d, r13d
0x000041a6      410f4ffd       cmovg edi, r13d
0x000041aa      31c9           xor ecx, ecx
0x000041ac      31d2           xor edx, edx
0x000041ae      83c701         add edi, 1
0x000041b1      e8eadbffff     call sym.imp.select
0x000041b6      85c0           test eax, eax
0x000041b8      0f8439ffffff   je 0x40f7
0x000041be      83c001         add eax, 1
0x000041c1      40886c2420     mov byte [rsp + 0x20], bpl
0x000041c6      0f84ca040000   je 0x4696
0x000041cc      f68424100100.  test byte [rsp + 0x110], 2
0x000041d4      0f8567060000   jne 0x4841
0x000041da      488b542438     mov rdx, qword [rsp + 0x38]
0x000041df      488b742410     mov rsi, qword [rsp + 0x10]
0x000041e4      4489ef         mov edi, r13d
0x000041e7      e8245c0000     call sym.safe_read
0x000041ec      4885c0         test rax, rax
0x000041ef      4889442408     mov qword [rsp + 8], rax
0x000041f4      0f85ca000000   jne 0x42c4
0x000041fa      837c244800     cmp dword [rsp + 0x48], 0
0x000041ff      0f8467030000   je 0x456c
0x00004205      488b742438     mov rsi, qword [rsp + 0x38]
0x0000420a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000420f      4531ff         xor r15d, r15d
0x00004212      836c244801     sub dword [rsp + 0x48], 1
0x00004217      4889f0         mov rax, rsi
0x0000421a      4801f0         add rax, rsi
0x0000421d      4889c6         mov rsi, rax
0x00004220      4889442438     mov qword [rsp + 0x38], rax
0x00004225      e806630000     call sym.xrealloc
0x0000422a      48c744240800.  mov qword [rsp + 8], 0
0x00004233      4889442410     mov qword [rsp + 0x10], rax
0x00004238      e9a0feffff     jmp 0x40dd
0x0000423d      f20f10642430   movsd xmm4, qword [rsp + 0x30]
0x00004243      660fefc0       pxor xmm0, xmm0
0x00004247      f2480f2cc4     cvttsd2si rax, xmm4
0x0000424c      f2480f2ac0     cvtsi2sd xmm0, rax
0x00004251      48898424a000.  mov qword [rsp + 0xa0], rax
0x00004259      f20f5ce0       subsd xmm4, xmm0
0x0000425d      f20f10050387.  movsd xmm0, qword [0x0000c968]          ; [0xc968:8]=0x412e848000000000
0x00004265      f20f59c4       mulsd xmm0, xmm4
0x00004269      f2480f2cc0     cvttsd2si rax, xmm0
0x0000426e      48898424a800.  mov qword [rsp + 0xa8], rax
0x00004276      e9d4feffff     jmp 0x414f
0x0000427b      803d98be2000.  cmp byte [obj.reopen_inaccessible_files], 0 ; [0x21011a:1]=0
0x00004282      0f8562feffff   jne 0x40ea
0x00004288      4c89f7         mov rdi, r14
0x0000428b      e8302e0000     call sym.hash_get_n_entries
0x00004290      4885c0         test rax, rax
0x00004293      0f8551feffff   jne 0x40ea
0x00004299      488d35ac7600.  lea rsi, str.no_files_remaining         ; 0xb94c ; "no files remaining"
0x000042a0      ba05000000     mov edx, 5
0x000042a5      31ff           xor edi, edi
0x000042a7      e824d9ffff     call sym.imp.dcgettext
0x000042ac      31f6           xor esi, esi
0x000042ae      4889c2         mov rdx, rax
0x000042b1      31ff           xor edi, edi
0x000042b3      31c0           xor eax, eax
0x000042b5      e8a6dbffff     call sym.imp.error
0x000042ba      b801000000     mov eax, 1
0x000042bf      e964e7ffff     jmp 0x2a28
0x000042c4      4531ff         xor r15d, r15d
0x000042c7      48837c2408ff   cmp qword [rsp + 8], 0xffffffffffffffff
0x000042cd      0f848b020000   je 0x455e
0x000042d3      488b442410     mov rax, qword [rsp + 0x10]
0x000042d8      4a8d2c38       lea rbp, [rax + r15]
0x000042dc      8b550c         mov edx, dword [rbp + 0xc]
0x000042df      8b4d04         mov ecx, dword [rbp + 4]
0x000042e2      f6c504         test ch, 4
0x000042e5      4d8d7c1710     lea r15, [r15 + rdx + 0x10]
0x000042ea      0f84c3000000   je 0x43b3
0x000042f0      85d2           test edx, edx
0x000042f2      0f8408020000   je 0x4500
0x000042f8      488d4510       lea rax, [rbp + 0x10]
0x000042fc      4c897c2468     mov qword [rsp + 0x68], r15
0x00004301      488b5c2428     mov rbx, qword [rsp + 0x28]
0x00004306      4d89f7         mov r15, r14
0x00004309      4531e4         xor r12d, r12d
0x0000430c      4589ee         mov r14d, r13d
0x0000430f      4889442478     mov qword [rsp + 0x78], rax
0x00004314      4989ed         mov r13, rbp
0x00004317      488b6c2418     mov rbp, qword [rsp + 0x18]
0x0000431c      eb08           jmp 0x4326
0x0000431e      4983c401       add r12, 1
0x00004322      4883c360       add rbx, 0x60
0x00004326      4c39e5         cmp rbp, r12
0x00004329      0f84ab000000   je 0x43da
0x0000432f      418b4500       mov eax, dword [r13]
0x00004333      394348         cmp dword [rbx + 0x48], eax
0x00004336      75e6           jne 0x431e
0x00004338      488b7350       mov rsi, qword [rbx + 0x50]
0x0000433c      480333         add rsi, qword [rbx]
0x0000433f      488b7c2478     mov rdi, qword [rsp + 0x78]
0x00004344      898c248c0000.  mov dword [rsp + 0x8c], ecx
0x0000434b      e8f0d9ffff     call sym.imp.strcmp
0x00004350      85c0           test eax, eax
0x00004352      8b8c248c0000.  mov ecx, dword [rsp + 0x8c]
0x00004359      75c3           jne 0x431e
0x0000435b      496bdc60       imul rbx, r12, 0x60
0x0000435f      4c89ed         mov rbp, r13
0x00004362      4589f5         mov r13d, r14d
0x00004365      48035c2428     add rbx, qword [rsp + 0x28]
0x0000436a      80e502         and ch, 2
0x0000436d      4d89fe         mov r14, r15
0x00004370      4c8b7c2468     mov r15, qword [rsp + 0x68]
0x00004375      0f8484000000   je 0x43ff
0x0000437b      833d9ebc2000.  cmp dword [obj.follow_mode], 1          ; [0x210020:4]=2
0x00004382      0f8446020000   je 0x45ce
0x00004388      4885db         test rbx, rbx
0x0000438b      0f844cfdffff   je 0x40dd
0x00004391      8b4504         mov eax, dword [rbp + 4]
0x00004394      a9040e0000     test eax, 0xe04
0x00004399      744f           je 0x43ea
0x0000439b      f6c404         test ah, 4
0x0000439e      0f850f020000   jne 0x45b3
0x000043a4      31f6           xor esi, esi
0x000043a6      4889df         mov rdi, rbx
0x000043a9      e8e2160000     call sym.recheck
0x000043ae      e92afdffff     jmp 0x40dd
0x000043b3      85d2           test edx, edx
0x000043b5      0f853dffffff   jne 0x42f8
0x000043bb      8b5500         mov edx, dword [rbp]
0x000043be      488db424b000.  lea rsi, [rsp + 0xb0]
0x000043c6      4c89f7         mov rdi, r14
0x000043c9      899424f40000.  mov dword [rsp + 0xf4], edx
0x000043d0      e8fb2e0000     call sym.hash_lookup
0x000043d5      4889c3         mov rbx, rax
0x000043d8      ebae           jmp 0x4388
0x000043da      4589f5         mov r13d, r14d
0x000043dd      4d89fe         mov r14, r15
0x000043e0      4c8b7c2468     mov r15, qword [rsp + 0x68]
0x000043e5      e9f3fcffff     jmp 0x40dd
0x000043ea      488db4249800.  lea rsi, [rsp + 0x98]
0x000043f2      4889df         mov rdi, rbx
0x000043f5      e8d60d0000     call sym.check_fspec
0x000043fa      e9defcffff     jmp 0x40dd
0x000043ff      8b542444       mov edx, dword [rsp + 0x44]
0x00004403      488b33         mov rsi, qword [rbx]
0x00004406      4489ef         mov edi, r13d
0x00004409      e8d2d9ffff     call sym.imp.inotify_add_watch
0x0000440e      85c0           test eax, eax
0x00004410      4189c4         mov r12d, eax
0x00004413      7959           jns 0x446e
0x00004415      e8f6d6ffff     call sym.imp.__errno_location
0x0000441a      4989c0         mov r8, rax
0x0000441d      8b00           mov eax, dword [rax]
0x0000441f      83e0ef         and eax, 0xffffffef                     ; 4294967279
0x00004422      83f80c         cmp eax, 0xc
0x00004425      0f8416020000   je 0x4641
0x0000442b      488b33         mov rsi, qword [rbx]
0x0000442e      bf04000000     mov edi, 4
0x00004433      4c89442478     mov qword [rsp + 0x78], r8
0x00004438      e8e3560000     call sym.quotearg_style
0x0000443d      488d35e87400.  lea rsi, str.cannot_watch__s            ; 0xb92c ; "cannot watch %s"
0x00004444      ba05000000     mov edx, 5
0x00004449      31ff           xor edi, edi
0x0000444b      4889442468     mov qword [rsp + 0x68], rax
0x00004450      e87bd7ffff     call sym.imp.dcgettext
0x00004455      4c8b442478     mov r8, qword [rsp + 0x78]
0x0000445a      488b4c2468     mov rcx, qword [rsp + 0x68]
0x0000445f      4889c2         mov rdx, rax
0x00004462      31ff           xor edi, edi
0x00004464      31c0           xor eax, eax
0x00004466      418b30         mov esi, dword [r8]
0x00004469      e8f2d9ffff     call sym.imp.error
0x0000446e      8b7344         mov esi, dword [rbx + 0x44]
0x00004471      85f6           test esi, esi
0x00004473      7809           js 0x447e
0x00004475      4139f4         cmp r12d, esi
0x00004478      0f84fdfeffff   je 0x437b
0x0000447e      85f6           test esi, esi
0x00004480      7813           js 0x4495
0x00004482      4489ef         mov edi, r13d
0x00004485      e896daffff     call sym.imp.inotify_rm_watch
0x0000448a      4889de         mov rsi, rbx
0x0000448d      4c89f7         mov rdi, r14
0x00004490      e80b390000     call sym.hash_delete
0x00004495      44896344       mov dword [rbx + 0x44], r12d
0x00004499      4183c401       add r12d, 1
0x0000449d      0f843afcffff   je 0x40dd
0x000044a3      4889de         mov rsi, rbx
0x000044a6      4c89f7         mov rdi, r14
0x000044a9      e8f2380000     call sym.hash_delete
0x000044ae      4885c0         test rax, rax
0x000044b1      4989c4         mov r12, rax
0x000044b4      7431           je 0x44e7
0x000044b6      4839c3         cmp rbx, rax
0x000044b9      742c           je 0x44e7
0x000044bb      833d5ebb2000.  cmp dword [obj.follow_mode], 1          ; [0x210020:4]=2
0x000044c2      0f84b8010000   je 0x4680
0x000044c8      498b3c24       mov rdi, qword [r12]
0x000044cc      41c7442444ff.  mov dword [r12 + 0x44], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x000044d5      e806050000     call sym.pretty_name.isra.7
0x000044da      418b7c2438     mov edi, dword [r12 + 0x38]
0x000044df      4889c6         mov rsi, rax
0x000044e2      e839050000     call sym.close_fd
0x000044e7      4889de         mov rsi, rbx
0x000044ea      4c89f7         mov rdi, r14
0x000044ed      e84e380000     call sym.hash_insert
0x000044f2      4885c0         test rax, rax
0x000044f5      0f8580feffff   jne 0x437b
0x000044fb      e820620000     call sym.xalloc_die
0x00004500      8b5500         mov edx, dword [rbp]
0x00004503      31c0           xor eax, eax
0x00004505      eb04           jmp 0x450b
0x00004507      4883c001       add rax, 1
0x0000450b      4839442418     cmp qword [rsp + 0x18], rax
0x00004510      0f84a8feffff   je 0x43be
0x00004516      486bc860       imul rcx, rax, 0x60
0x0000451a      488b742428     mov rsi, qword [rsp + 0x28]
0x0000451f      39540e48       cmp dword [rsi + rcx + 0x48], edx
0x00004523      75e2           jne 0x4507
0x00004525      4c89f7         mov rdi, r14
0x00004528      e863320000     call sym.hash_free
0x0000452d      488d35848300.  lea rsi, str.directory_containing_watched_file_was_removed ; 0xc8b8 ; "directory containing watched file was removed"
0x00004534      ba05000000     mov edx, 5
0x00004539      31ff           xor edi, edi
0x0000453b      e890d6ffff     call sym.imp.dcgettext
0x00004540      31f6           xor esi, esi
0x00004542      4889c2         mov rdx, rax
0x00004545      31ff           xor edi, edi
0x00004547      31c0           xor eax, eax
0x00004549      e812d9ffff     call sym.imp.error
0x0000454e      e8bdd5ffff     call sym.imp.__errno_location
0x00004553      c70000000000   mov dword [rax], 0
0x00004559      e99ff9ffff     jmp 0x3efd
0x0000455e      e8add5ffff     call sym.imp.__errno_location
0x00004563      833816         cmp dword [rax], 0x16
0x00004566      0f848efcffff   je 0x41fa
0x0000456c      488d35ec7300.  lea rsi, str.error_reading_inotify_event ; 0xb95f ; "error reading inotify event"
0x00004573      ba05000000     mov edx, 5
0x00004578      31ff           xor edi, edi
0x0000457a      e851d6ffff     call sym.imp.dcgettext
0x0000457f      4889c3         mov rbx, rax
0x00004582      e889d5ffff     call sym.imp.__errno_location
0x00004587      8b30           mov esi, dword [rax]
0x00004589      4889da         mov rdx, rbx
0x0000458c      bf01000000     mov edi, 1
0x00004591      31c0           xor eax, eax
0x00004593      e8c8d8ffff     call sym.imp.error
0x00004598      807c241000     cmp byte [rsp + 0x10], 0
0x0000459d      0f8547f9ffff   jne 0x3eea
0x000045a3      807c243800     cmp byte [rsp + 0x38], 0
0x000045a8      0f853dfaffff   jne 0x3feb
0x000045ae      e907fdffff     jmp 0x42ba
0x000045b3      8b7344         mov esi, dword [rbx + 0x44]
0x000045b6      4489ef         mov edi, r13d
0x000045b9      e862d9ffff     call sym.imp.inotify_rm_watch
0x000045be      4889de         mov rsi, rbx
0x000045c1      4c89f7         mov rdi, r14
0x000045c4      e8d7370000     call sym.hash_delete
0x000045c9      e9d6fdffff     jmp 0x43a4
0x000045ce      31f6           xor esi, esi
0x000045d0      4889df         mov rdi, rbx
0x000045d3      e8b8140000     call sym.recheck
0x000045d8      e9abfdffff     jmp 0x4388
0x000045dd      40886c2420     mov byte [rsp + 0x20], bpl
0x000045e2      e9ecfcffff     jmp 0x42d3
0x000045e7      498b3f         mov rdi, qword [r15]
0x000045ea      e8f1030000     call sym.pretty_name.isra.7
0x000045ef      bf04000000     mov edi, 4
0x000045f4      4889c6         mov rsi, rax
0x000045f7      e824550000     call sym.quotearg_style
0x000045fc      488d35397300.  lea rsi, str.s_was_replaced             ; 0xb93c ; "%s was replaced"
0x00004603      ba05000000     mov edx, 5
0x00004608      31ff           xor edi, edi
0x0000460a      4889c5         mov rbp, rax
0x0000460d      e8bed5ffff     call sym.imp.dcgettext
0x00004612      4989c4         mov r12, rax
0x00004615      e8f6d4ffff     call sym.imp.__errno_location
0x0000461a      8b30           mov esi, dword [rax]
0x0000461c      4889c3         mov rbx, rax
0x0000461f      4889e9         mov rcx, rbp
0x00004622      4c89e2         mov rdx, r12
0x00004625      31ff           xor edi, edi
0x00004627      31c0           xor eax, eax
0x00004629      e832d8ffff     call sym.imp.error
0x0000462e      4c89f7         mov rdi, r14
0x00004631      e85a310000     call sym.hash_free
0x00004636      c70300000000   mov dword [rbx], 0
0x0000463c      e9bcf8ffff     jmp 0x3efd
0x00004641      488d35c87200.  lea rsi, str.inotify_resources_exhausted ; 0xb910 ; "inotify resources exhausted"
0x00004648      ba05000000     mov edx, 5
0x0000464d      31ff           xor edi, edi
0x0000464f      4c89442408     mov qword [rsp + 8], r8
0x00004654      e877d5ffff     call sym.imp.dcgettext
0x00004659      31f6           xor esi, esi
0x0000465b      4889c2         mov rdx, rax
0x0000465e      31ff           xor edi, edi
0x00004660      31c0           xor eax, eax
0x00004662      e8f9d7ffff     call sym.imp.error
0x00004667      4c89f7         mov rdi, r14
0x0000466a      e821310000     call sym.hash_free
0x0000466f      4c8b442408     mov r8, qword [rsp + 8]
0x00004674      41c700000000.  mov dword [r8], 0
0x0000467b      e97df8ffff     jmp 0x3efd
0x00004680      31f6           xor esi, esi
0x00004682      4889c7         mov rdi, rax
0x00004685      e806140000     call sym.recheck
0x0000468a      e939feffff     jmp 0x44c8
0x0000468f      31ff           xor edi, edi
0x00004691      e82ad8ffff     call sym.imp.exit
0x00004696      488d35eb8100.  lea rsi, str.error_waiting_for_inotify_and_output_events ; 0xc888 ; "error waiting for inotify and output events"
0x0000469d      ba05000000     mov edx, 5
0x000046a2      31ff           xor edi, edi
0x000046a4      e827d5ffff     call sym.imp.dcgettext
0x000046a9      4889c3         mov rbx, rax
0x000046ac      e85fd4ffff     call sym.imp.__errno_location
0x000046b1      8b30           mov esi, dword [rax]
0x000046b3      4889da         mov rdx, rbx
0x000046b6      bf01000000     mov edi, 1
0x000046bb      31c0           xor eax, eax
0x000046bd      e89ed7ffff     call sym.imp.error
0x000046c2      e849d4ffff     call sym.imp.__errno_location
0x000046c7      83381c         cmp dword [rax], 0x1c
0x000046ca      4989df         mov r15, rbx
0x000046cd      4c8b742408     mov r14, qword [rsp + 8]
0x000046d2      4889c3         mov rbx, rax
0x000046d5      0f84eef7ffff   je 0x3ec9
0x000046db      498b37         mov rsi, qword [r15]
0x000046de      bf04000000     mov edi, 4
0x000046e3      e838540000     call sym.quotearg_style
0x000046e8      488d35718100.  lea rsi, str.cannot_watch_parent_directory_of__s ; 0xc860 ; "cannot watch parent directory of %s"
0x000046ef      31ff           xor edi, edi
0x000046f1      ba05000000     mov edx, 5
0x000046f6      4889c5         mov rbp, rax
0x000046f9      e8d2d4ffff     call sym.imp.dcgettext
0x000046fe      8b33           mov esi, dword [rbx]
0x00004700      4889c2         mov rdx, rax
0x00004703      4889e9         mov rcx, rbp
0x00004706      31ff           xor edi, edi
0x00004708      31c0           xor eax, eax
0x0000470a      e851d7ffff     call sym.imp.error
0x0000470f      e9d6f7ffff     jmp 0x3eea
0x00004714      488b7d08       mov rdi, qword [rbp + 8]
0x00004718      e8d3560000     call sym.quote
0x0000471d      488d35cf7000.  lea rsi, [0x0000b7f3]                   ; "invalid number"
0x00004724      ba05000000     mov edx, 5
0x00004729      31ff           xor edi, edi
0x0000472b      4889c5         mov rbp, rax
0x0000472e      e89dd4ffff     call sym.imp.dcgettext
0x00004733      4889c3         mov rbx, rax
0x00004736      e8d5d3ffff     call sym.imp.__errno_location
0x0000473b      8b30           mov esi, dword [rax]
0x0000473d      488d15be7000.  lea rdx, str.s:__s                      ; 0xb802 ; "%s: %s"
0x00004744      4989e8         mov r8, rbp
0x00004747      4889d9         mov rcx, rbx
0x0000474a      bf01000000     mov edi, 1
0x0000474f      31c0           xor eax, eax
0x00004751      e80ad7ffff     call sym.imp.error
0x00004756      488d35396f00.  lea rsi, str.write_error                ; 0xb696 ; "write error"
0x0000475d      ba05000000     mov edx, 5
0x00004762      31ff           xor edi, edi
0x00004764      e867d4ffff     call sym.imp.dcgettext
0x00004769      4889c3         mov rbx, rax
0x0000476c      e89fd3ffff     call sym.imp.__errno_location
0x00004771      8b30           mov esi, dword [rax]
0x00004773      4889da         mov rdx, rbx
0x00004776      bf01000000     mov edi, 1
0x0000477b      31c0           xor eax, eax
0x0000477d      e8ded6ffff     call sym.imp.error
0x00004782      48c7c1feffff.  mov rcx, 0xfffffffffffffffe
0x00004789      e93aedffff     jmp 0x34c8
0x0000478e      4c89ea         mov rdx, r13
0x00004791      be03000000     mov esi, 3
0x00004796      31ff           xor edi, edi
0x00004798      48890424       mov qword [rsp], rax
0x0000479c      e87f540000     call sym.quotearg_n_style_colon
0x000047a1      488d35708100.  lea rsi, str.s:_cannot_change_nonblocking_mode ; 0xc918 ; "%s: cannot change nonblocking mode"
0x000047a8      ba05000000     mov edx, 5
0x000047ad      31ff           xor edi, edi
0x000047af      4889c3         mov rbx, rax
0x000047b2      e819d4ffff     call sym.imp.dcgettext
0x000047b7      4c8b0c24       mov r9, qword [rsp]
0x000047bb      4889c2         mov rdx, rax
0x000047be      4889d9         mov rcx, rbx
0x000047c1      bf01000000     mov edi, 1
0x000047c6      31c0           xor eax, eax
0x000047c8      418b31         mov esi, dword [r9]
0x000047cb      e890d6ffff     call sym.imp.error
0x000047d0      498b07         mov rax, qword [r15]
0x000047d3      e992dfffff     jmp 0x276a
0x000047d8      488d35107000.  lea rsi, str.b                          ; 0xb7ef ; u"-b\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u2500\u3a73\u2520s\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u696c\u656es\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u7962\u6574s\u6b62\u6d4b\u474d\u5054\u5a45\u3059\u2d00\u662d\u6c6f\u6f6cw\u6e69\u6176\u696c\u2064\u4950D\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u6573\u6f63\u646e\u3a73\u2520s\u6144\u6976\u2064\u614d\u4b63\u6e65\u697ae\u6150\u6c75\u5220\u6275\u6e69\u4a00\u6d69\u4d20\u7965\u7265\u6e69g\u6149\u206e\u614c\u636e\u2065\u6154\u6c79\u726f\u6300\u6e3a\u663a\u7146\u3a73\u7a76\u3130\u3332\u3534\u3736\u3938\u6300\u6e61\u6f6e\u2074\u6f66\u6c6c\u776f\u2520\u2073\u7962\u6e20\u6d61e\u6163\u6e6e\u746f\u6f20\u6570\u206e\u7325\u6620\u726f\u7220\u6165\u6964\u676e\u6300\u6e61\u6f6e\u2074\u7366\u6174\u2074\u7325\u6200\u6765\u6900\u6f6e\u6974\u7966\u7220\u7365\u756f\u6372\u7365\u6520\u6878\u7561\u7473\u6465\u6300\u6e61\u6f6e\u2074\u6177\u6374\u2068\u7325\u2500\u2073\u6177\u2073\u6572\u6c70\u6361\u6465\u6e00\u206f\u6966\u656c\u2073\u6572\u616d\u6e69\u6e69g\u7265\u6f72\u2072\u6572\u6461\u6e69\u2067\u6e69\u746f\u6669\u2079\u7665\u6e65t\u6163\u6e6e\u746f\u7220\u6165\u2064\u6572\u6c61\u6974\u656d\u6320\u6f6c\u6b63\u6d00\u7861\u752d\u636e\u6168\u676e\u6465\u732d\u6174\u7374\u2d00\u6964\u6173\u6c62\u2d65\u6e69\u746f\u6669y\u6970d\u702d\u6572\u7573\u656d\u692d\u706e\u7475\u702d\u7069e\u7571\u6569t\u6572\u7274y\u6973\u656c\u746e\u7300\u656c\u7065\u692d\u746e\u7265\u6176l\u6576\u6272\u736fe\u657a\u6f72\u742d\u7265\u696d\u616e\u6574d\u6568\u706c\u7600\u7265\u6973\u6e6f\u6400\u7365\u7263\u7069\u6f74r"
0x000047df      bf04000000     mov edi, 4
0x000047e4      e837530000     call sym.quotearg_style
0x000047e9      488d35d87000.  lea rsi, str.cannot_follow__s_by_name   ; 0xb8c8 ; "cannot follow %s by name"
0x000047f0      4889c3         mov rbx, rax
0x000047f3      ba05000000     mov edx, 5
0x000047f8      31ff           xor edi, edi
0x000047fa      e8d1d3ffff     call sym.imp.dcgettext
0x000047ff      4889d9         mov rcx, rbx
0x00004802      4889c2         mov rdx, rax
0x00004805      31f6           xor esi, esi
0x00004807      bf01000000     mov edi, 1
0x0000480c      31c0           xor eax, eax
0x0000480e      e84dd6ffff     call sym.imp.error
0x00004813      488d0d2e8100.  lea rcx, obj.__PRETTY_FUNCTION__.7486   ; 0xc948 ; "pipe_lines"
0x0000481a      488d35816e00.  lea rsi, str..._coreutils_8.31_src_tail.c ; 0xb6a2 ; "../coreutils-8.31/src/tail.c"
0x00004821      488d3de47000.  lea rdi, [0x0000b90c]                   ; "beg"
0x00004828      bae0020000     mov edx, sym..dynsym                    ; 0x2e0
0x0000482d      e87ed4ffff     call sym.imp.__assert_fail
0x00004832      b901000000     mov ecx, 1
0x00004837      e949deffff     jmp 0x2685
0x0000483c      e8cfd3ffff     call sym.imp.__stack_chk_fail
0x00004841      bf0d000000     mov edi, 0xd
0x00004846      e895d2ffff     call sym.imp.raise
0x0000484b      bf01000000     mov edi, 1
0x00004850      e86bd6ffff     call sym.imp.exit
0x00004855      488d353a6e00.  lea rsi, str.write_error                ; 0xb696 ; "write error"
0x0000485c      ba05000000     mov edx, 5
0x00004861      31ff           xor edi, edi
0x00004863      e868d3ffff     call sym.imp.dcgettext
0x00004868      4889c3         mov rbx, rax
0x0000486b      e8a0d2ffff     call sym.imp.__errno_location
0x00004870      8b30           mov esi, dword [rax]
0x00004872      4889da         mov rdx, rbx
0x00004875      bf01000000     mov edi, 1
0x0000487a      31c0           xor eax, eax
0x0000487c      e8dfd5ffff     call sym.imp.error
0x00004881      488d359e6d00.  lea rsi, str.standard_output            ; 0xb626 ; "standard output"
0x00004888      ba05000000     mov edx, 5
0x0000488d      31ff           xor edi, edi
0x0000488f      e83cd3ffff     call sym.imp.dcgettext
0x00004894      4889c3         mov rbx, rax
0x00004897      e874d2ffff     call sym.imp.__errno_location
0x0000489c      8b30           mov esi, dword [rax]
0x0000489e      4889da         mov rdx, rbx
0x000048a1      bf01000000     mov edi, 1
0x000048a6      31c0           xor eax, eax
0x000048a8      e8b3d5ffff     call sym.imp.error
0x000048ad      0f1f00         nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x000048b0      31ed           xor ebp, ebp
0x000048b2      4989d1         mov r9, rdx
0x000048b5      5e             pop rsi
0x000048b6      4889e2         mov rdx, rsp
0x000048b9      4883e4f0       and rsp, 0xfffffffffffffff0
0x000048bd      50             push rax
0x000048be      54             push rsp
0x000048bf      4c8d050a6d00.  lea r8, sym.__libc_csu_fini             ; 0xb5d0
0x000048c6      488d0d936c00.  lea rcx, sym.__libc_csu_init            ; 0xb560 ; "AWAVI\x89\xd7AUATL\x8d%\x9eC "
0x000048cd      488d3d7cd6ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1f50 ; "AWAVAUATUS\x89\xfbH\x89\xf5H\x81\xec\xc8\x02"
0x000048d4      ff1506b72000   call qword [reloc.__libc_start_main]    ; [0x20ffe0:8]=0
0x000048da      f4             hlt
0x000048db      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x000048e0      488d3dd9b720.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2100c0
0x000048e7      55             push rbp
0x000048e8      488d05d1b720.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2100c0
0x000048ef      4839f8         cmp rax, rdi
0x000048f2      4889e5         mov rbp, rsp
0x000048f5      7419           je 0x4910
0x000048f7      488b05dab620.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20ffd8:8]=0
0x000048fe      4885c0         test rax, rax
0x00004901      740d           je 0x4910
0x00004903      5d             pop rbp
0x00004904      ffe0           jmp rax
0x00004906      662e0f1f8400.  nop word cs:[rax + rax]
0x00004910      5d             pop rbp
0x00004911      c3             ret
0x00004912      0f1f4000       nop dword [rax]
0x00004916      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00004920      488d3d99b720.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2100c0
0x00004927      488d3592b720.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2100c0
0x0000492e      55             push rbp
0x0000492f      4829fe         sub rsi, rdi
0x00004932      4889e5         mov rbp, rsp
0x00004935      48c1fe03       sar rsi, 3
0x00004939      4889f0         mov rax, rsi
0x0000493c      48c1e83f       shr rax, 0x3f
0x00004940      4801c6         add rsi, rax
0x00004943      48d1fe         sar rsi, 1
0x00004946      7418           je 0x4960
0x00004948      488b05a1b620.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20fff0:8]=0
0x0000494f      4885c0         test rax, rax
0x00004952      740c           je 0x4960
0x00004954      5d             pop rbp
0x00004955      ffe0           jmp rax
0x00004957      660f1f840000.  nop word [rax + rax]
0x00004960      5d             pop rbp
0x00004961      c3             ret
0x00004962      0f1f4000       nop dword [rax]
0x00004966      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00004970      803d91b72000.  cmp byte [obj.completed.7697], 0        ; [0x210108:1]=0
0x00004977      752f           jne 0x49a8
0x00004979      48833d77b620.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20fff8:8]=0
0x00004981      55             push rbp
0x00004982      4889e5         mov rbp, rsp
0x00004985      740c           je 0x4993
0x00004987      488b3d7ab620.  mov rdi, qword [obj.__dso_handle]       ; [0x210008:8]=0x210008 obj.__dso_handle
0x0000498e      e8add5ffff     call sym..plt.got
0x00004993      e848ffffff     call sym.deregister_tm_clones
0x00004998      c60569b72000.  mov byte [obj.completed.7697], 1        ; [0x210108:1]=0
0x0000499f      5d             pop rbp
0x000049a0      c3             ret
0x000049a1      0f1f80000000.  nop dword [rax]
0x000049a8      f3c3           ret
0x000049aa      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x000049b0      55             push rbp
0x000049b1      4889e5         mov rbp, rsp
0x000049b4      5d             pop rbp
0x000049b5      e966ffffff     jmp sym.register_tm_clones
0x000049ba      660f1f440000   nop word [rax + rax]
;-- wd_hasher:
0x000049c0      48634744       movsxd rax, dword [rdi + 0x44]          ; /src:1386
0x000049c4      31d2           xor edx, edx
0x000049c6      48f7f6         div rsi
0x000049c9      4889d0         mov rax, rdx                            ; /src:1389
0x000049cc      c3             ret
0x000049cd      0f1f00         nop dword [rax]
;-- wd_comparator:
0x000049d0      8b4644         mov eax, dword [rsi + 0x44]             ; /src:1393
0x000049d3      394744         cmp dword [rdi + 0x44], eax
0x000049d6      0f94c0         sete al
0x000049d9      c3             ret                                     ; /src:1397
0x000049da      660f1f440000   nop word [rax + rax]
;-- pretty_name.isra.7:
0x000049e0      4889f8         mov rax, rdi                            ; /src:385
0x000049e3      488d3d056e00.  lea rdi, str.b                          ; /src:387 ; 0xb7ef ; u"-b\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u2500\u3a73\u2520s\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u696c\u656es\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u7962\u6574s\u6b62\u6d4b\u474d\u5054\u5a45\u3059\u2d00\u662d\u6c6f\u6f6cw\u6e69\u6176\u696c\u2064\u4950D\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u6573\u6f63\u646e\u3a73\u2520s\u6144\u6976\u2064\u614d\u4b63\u6e65\u697ae\u6150\u6c75\u5220\u6275\u6e69\u4a00\u6d69\u4d20\u7965\u7265\u6e69g\u6149\u206e\u614c\u636e\u2065\u6154\u6c79\u726f\u6300\u6e3a\u663a\u7146\u3a73\u7a76\u3130\u3332\u3534\u3736\u3938\u6300\u6e61\u6f6e\u2074\u6f66\u6c6c\u776f\u2520\u2073\u7962\u6e20\u6d61e\u6163\u6e6e\u746f\u6f20\u6570\u206e\u7325\u6620\u726f\u7220\u6165\u6964\u676e\u6300\u6e61\u6f6e\u2074\u7366\u6174\u2074\u7325\u6200\u6765\u6900\u6f6e\u6974\u7966\u7220\u7365\u756f\u6372\u7365\u6520\u6878\u7561\u7473\u6465\u6300\u6e61\u6f6e\u2074\u6177\u6374\u2068\u7325\u2500\u2073\u6177\u2073\u6572\u6c70\u6361\u6465\u6e00\u206f\u6966\u656c\u2073\u6572\u616d\u6e69\u6e69g\u7265\u6f72\u2072\u6572\u6461\u6e69\u2067\u6e69\u746f\u6669\u2079\u7665\u6e65t\u6163\u6e6e\u746f\u7220\u6165\u2064\u6572\u6c61\u6974\u656d\u6320\u6f6c\u6b63\u6d00\u7861\u752d\u636e\u6168\u676e\u6465\u732d\u6174\u7374\u2d00\u6964\u6173\u6c62\u2d65\u6e69\u746f\u6669y\u6970d\u702d\u6572\u7573\u656d\u692d\u706e\u7475\u702d\u7069e\u7571\u6569t\u6572\u7274y\u6973\u656c\u746e\u7300\u656c\u7065\u692d\u746e\u7265\u6176l\u6576\u6272\u736fe\u657a\u6f72\u742d\u7265\u696d\u616e\u6574d\u6568\u706c\u7600\u7265\u6973\u6e6f\u6400\u7365\u7263\u7069\u6f74r"
0x000049ea      b902000000     mov ecx, 2
0x000049ef      4889c6         mov rsi, rax
0x000049f2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000049f4      0f97c2         seta dl
0x000049f7      80da00         sbb dl, 0
0x000049fa      84d2           test dl, dl
0x000049fc      7402           je 0x4a00
0x000049fe      f3c3           ret                                     ; /src:388
0x00004a00      488d35fd6b00.  lea rsi, str.standard_input             ; /src:387 ; 0xb604 ; "standard input"
0x00004a07      ba05000000     mov edx, 5
0x00004a0c      31ff           xor edi, edi
0x00004a0e      e9bdd1ffff     jmp sym.imp.dcgettext
0x00004a13      0f1f00         nop dword [rax]
0x00004a16      662e0f1f8400.  nop word cs:[rax + rax]
;-- close_fd:
0x00004a20      8d4701         lea eax, [rdi + 1]                      ; /src:413
0x00004a23      83f801         cmp eax, 1
0x00004a26      7618           jbe 0x4a40
0x00004a28      4154           push r12
0x00004a2a      55             push rbp
0x00004a2b      4889f5         mov rbp, rsi
0x00004a2e      53             push rbx
0x00004a2f      89fb           mov ebx, edi
0x00004a31      e8aad2ffff     call sym.imp.close                      ; /src:414
0x00004a36      85c0           test eax, eax
0x00004a38      750e           jne 0x4a48
0x00004a3a      5b             pop rbx                                 ; /src:418
0x00004a3b      5d             pop rbp
0x00004a3c      415c           pop r12
0x00004a3e      c3             ret
0x00004a3f      90             nop
0x00004a40      f3c3           ret
0x00004a42      660f1f440000   nop word [rax + rax]
0x00004a48      4889ee         mov rsi, rbp                            ; /src:416
0x00004a4b      bf04000000     mov edi, 4
0x00004a50      e8cb500000     call sym.quotearg_style
0x00004a55      488d35b76b00.  lea rsi, str.closing__s__fd__d          ; 0xb613 ; "closing %s (fd=%d)"
0x00004a5c      ba05000000     mov edx, 5
0x00004a61      31ff           xor edi, edi
0x00004a63      4989c4         mov r12, rax
0x00004a66      e865d1ffff     call sym.imp.dcgettext
0x00004a6b      4889c5         mov rbp, rax
0x00004a6e      e89dd0ffff     call sym.imp.__errno_location
0x00004a73      4189d8         mov r8d, ebx
0x00004a76      4c89e1         mov rcx, r12
0x00004a79      4889ea         mov rdx, rbp
0x00004a7c      5b             pop rbx                                 ; /src:418
0x00004a7d      5d             pop rbp
0x00004a7e      415c           pop r12
0x00004a80      8b30           mov esi, dword [rax]                    ; /src:416
0x00004a82      31ff           xor edi, edi
0x00004a84      31c0           xor eax, eax
0x00004a86      e9d5d3ffff     jmp sym.imp.error
0x00004a8b      0f1f440000     nop dword [rax + rax]
;-- xwrite_stdout.part.10:
0x00004a90      55             push rbp                                ; /src:433
0x00004a91      53             push rbx
0x00004a92      4889f2         mov rdx, rsi                            ; /src:435
0x00004a95      4889f3         mov rbx, rsi                            ; /src:433
0x00004a98      be01000000     mov esi, 1                              ; /src:435
0x00004a9d      4883ec08       sub rsp, 8                              ; /src:433
0x00004aa1      488b0d20b620.  mov rcx, qword [obj.stdout]             ; /src:435 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x00004aa8      e873d3ffff     call sym.imp.fwrite_unlocked
0x00004aad      4839c3         cmp rbx, rax
0x00004ab0      7707           ja 0x4ab9
0x00004ab2      4883c408       add rsp, 8                              ; /src:441
0x00004ab6      5b             pop rbx
0x00004ab7      5d             pop rbp
0x00004ab8      c3             ret
0x00004ab9      488b3d08b620.  mov rdi, qword [obj.stdout]             ; /src:437 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x00004ac0      e8bbd0ffff     call sym.imp.clearerr_unlocked
0x00004ac5      488d355a6b00.  lea rsi, str.standard_output            ; /src:438 ; 0xb626 ; "standard output"
0x00004acc      bf04000000     mov edi, 4
0x00004ad1      e84a500000     call sym.quotearg_style
0x00004ad6      488d35596b00.  lea rsi, str.error_writing__s           ; 0xb636 ; "error writing %s"
0x00004add      ba05000000     mov edx, 5
0x00004ae2      31ff           xor edi, edi
0x00004ae4      4889c5         mov rbp, rax
0x00004ae7      e8e4d0ffff     call sym.imp.dcgettext
0x00004aec      4889c3         mov rbx, rax
0x00004aef      e81cd0ffff     call sym.imp.__errno_location
0x00004af4      8b30           mov esi, dword [rax]
0x00004af6      4889e9         mov rcx, rbp
0x00004af9      4889da         mov rdx, rbx
0x00004afc      bf01000000     mov edi, 1
0x00004b01      31c0           xor eax, eax
0x00004b03      e858d3ffff     call sym.imp.error
0x00004b08      0f1f84000000.  nop dword [rax + rax]
;-- start_lines:
0x00004b10      4157           push r15                                ; /src:900
0x00004b12      4156           push r14
0x00004b14      4155           push r13
0x00004b16      4154           push r12
0x00004b18      55             push rbp
0x00004b19      53             push rbx
0x00004b1a      4881ec282000.  sub rsp, 0x2028
0x00004b21      64488b042528.  mov rax, qword fs:[0x28]
0x00004b2a      488984241820.  mov qword [rsp + 0x2018], rax
0x00004b32      31c0           xor eax, eax
0x00004b34      4885d2         test rdx, rdx                           ; /src:901
0x00004b37      48897c2408     mov qword [rsp + 8], rdi                ; /src:900
0x00004b3c      747a           je 0x4bb8                               ; /src:901
0x00004b3e      4c8d6c2410     lea r13, [rsp + 0x10]
0x00004b43      4189f7         mov r15d, esi
0x00004b46      4889d3         mov rbx, rdx
0x00004b49      4989ce         mov r14, rcx
0x00004b4c      ba00200000     mov edx, 0x2000                         ; /src:907
0x00004b51      4c89ee         mov rsi, r13
0x00004b54      4489ff         mov edi, r15d
0x00004b57      e8b4520000     call sym.safe_read
0x00004b5c      4885c0         test rax, rax                           ; /src:908
0x00004b5f      0f848d000000   je 0x4bf2
0x00004b65      4883f8ff       cmp rax, 0xffffffffffffffff             ; /src:910
0x00004b69      0f848a000000   je 0x4bf9
0x00004b6f      490106         add qword [r14], rax                    ; /src:918
0x00004b72      440fbe259ab5.  movsx r12d, byte [obj.line_end]         ; /src:921 ; [0x210114:1]=0
0x00004b7a      498d6c0500     lea rbp, [r13 + rax]                    ; /src:916
0x00004b7f      4c89ef         mov rdi, r13                            ; /src:920
0x00004b82      660f1f440000   nop word [rax + rax]
0x00004b88      4889ea         mov rdx, rbp                            ; /src:921
0x00004b8b      4489e6         mov esi, r12d
0x00004b8e      4829fa         sub rdx, rdi
0x00004b91      e85ad1ffff     call sym.imp.memchr
0x00004b96      4885c0         test rax, rax
0x00004b99      74b1           je 0x4b4c
0x00004b9b      4883eb01       sub rbx, 1                              ; /src:924
0x00004b9f      488d7801       lea rdi, [rax + 1]                      ; /src:923
0x00004ba3      75e3           jne 0x4b88                              ; /src:924
0x00004ba5      31c0           xor eax, eax                            ; /src:928
0x00004ba7      4839fd         cmp rbp, rdi                            ; /src:926
0x00004baa      760c           jbe 0x4bb8
0x00004bac      4829fd         sub rbp, rdi                            ; /src:435
0x00004baf      752f           jne 0x4be0
0x00004bb1      0f1f80000000.  nop dword [rax]
0x00004bb8      488b8c241820.  mov rcx, qword [rsp + 0x2018]           ; /src:932
0x00004bc0      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004bc9      7576           jne 0x4c41
0x00004bcb      4881c4282000.  add rsp, 0x2028
0x00004bd2      5b             pop rbx
0x00004bd3      5d             pop rbp
0x00004bd4      415c           pop r12
0x00004bd6      415d           pop r13
0x00004bd8      415e           pop r14
0x00004bda      415f           pop r15
0x00004bdc      c3             ret
0x00004bdd      0f1f00         nop dword [rax]
0x00004be0      4889ee         mov rsi, rbp
0x00004be3      89442408       mov dword [rsp + 8], eax
0x00004be7      e8a4feffff     call sym.xwrite_stdout.part.10
0x00004bec      8b442408       mov eax, dword [rsp + 8]
0x00004bf0      ebc6           jmp 0x4bb8
0x00004bf2      b8ffffffff     mov eax, 0xffffffff                     ; /src:909 ; -1
0x00004bf7      ebbf           jmp 0x4bb8
0x00004bf9      488b742408     mov rsi, qword [rsp + 8]                ; /src:912
0x00004bfe      bf04000000     mov edi, 4
0x00004c03      e8184f0000     call sym.quotearg_style
0x00004c08      488d35386a00.  lea rsi, str.error_reading__s           ; 0xb647 ; "error reading %s"
0x00004c0f      ba05000000     mov edx, 5
0x00004c14      31ff           xor edi, edi
0x00004c16      4889c5         mov rbp, rax
0x00004c19      e8b2cfffff     call sym.imp.dcgettext
0x00004c1e      4889c3         mov rbx, rax
0x00004c21      e8eaceffff     call sym.imp.__errno_location
0x00004c26      8b30           mov esi, dword [rax]
0x00004c28      4889e9         mov rcx, rbp
0x00004c2b      31c0           xor eax, eax
0x00004c2d      4889da         mov rdx, rbx
0x00004c30      31ff           xor edi, edi
0x00004c32      e829d2ffff     call sym.imp.error
0x00004c37      b801000000     mov eax, 1                              ; /src:913
0x00004c3c      e977ffffff     jmp 0x4bb8
0x00004c41      e8cacfffff     call sym.imp.__stack_chk_fail           ; /src:932
0x00004c46      662e0f1f8400.  nop word cs:[rax + rax]
;-- dump_remainder:
0x00004c50      4157           push r15                                ; /src:451
0x00004c52      4156           push r14
0x00004c54      4989ce         mov r14, rcx
0x00004c57      4155           push r13
0x00004c59      4154           push r12
0x00004c5b      4531e4         xor r12d, r12d                          ; /src:455
0x00004c5e      55             push rbp                                ; /src:451
0x00004c5f      53             push rbx
0x00004c60      89fd           mov ebp, edi
0x00004c62      4889cb         mov rbx, rcx
0x00004c65      4881ec282000.  sub rsp, 0x2028
0x00004c6c      64488b042528.  mov rax, qword fs:[0x28]
0x00004c75      488984241820.  mov qword [rsp + 0x2018], rax
0x00004c7d      31c0           xor eax, eax
0x00004c7f      4c8d6c2410     lea r13, [rsp + 0x10]
0x00004c84      4889742408     mov qword [rsp + 8], rsi
0x00004c89      89542404       mov dword [rsp + 4], edx
0x00004c8d      0f1f00         nop dword [rax]
0x00004c90      8b7c2404       mov edi, dword [rsp + 4]                ; /src:460
0x00004c94      4881fb002000.  cmp rbx, 0x2000                         ; /src:459
0x00004c9b      ba00200000     mov edx, 0x2000
0x00004ca0      480f46d3       cmovbe rdx, rbx
0x00004ca4      4c89ee         mov rsi, r13                            ; /src:460
0x00004ca7      e864510000     call sym.safe_read
0x00004cac      4883f8ff       cmp rax, 0xffffffffffffffff             ; /src:461
0x00004cb0      4989c7         mov r15, rax                            ; /src:460
0x00004cb3      746b           je 0x4d20                               ; /src:461
0x00004cb5      4885c0         test rax, rax                           ; /src:468
0x00004cb8      7473           je 0x4d2d
0x00004cba      4084ed         test bpl, bpl                           ; /src:470
0x00004cbd      7438           je 0x4cf7
0x00004cbf      803d4ab32000.  cmp byte [obj.first_file.7393], 0       ; /src:425 ; [0x210010:1]=1
0x00004cc6      488d05348300.  lea rax, [0x0000d001]
0x00004ccd      488d152c8300.  lea rdx, [0x0000d000]                   ; "\n"
0x00004cd4      488b4c2408     mov rcx, qword [rsp + 8]                ; .//ib:104
0x00004cd9      488d35786900.  lea rsi, str.s_____s                    ; 0xb658 ; "%s==> %s <==\n"
0x00004ce0      bf01000000     mov edi, 1
0x00004ce5      480f45d0       cmovne rdx, rax                         ; /src:425
0x00004ce9      31c0           xor eax, eax                            ; .//ib:104
0x00004ceb      e860d1ffff     call sym.imp.__printf_chk
0x00004cf0      c60519b32000.  mov byte [obj.first_file.7393], 0       ; /src:426 ; [0x210010:1]=1
0x00004cf7      4c89fe         mov rsi, r15
0x00004cfa      4c89ef         mov rdi, r13
0x00004cfd      4d01fc         add r12, r15                            ; /src:476
0x00004d00      e88bfdffff     call sym.xwrite_stdout.part.10
0x00004d05      4983feff       cmp r14, 0xffffffffffffffff             ; /src:477
0x00004d09      740b           je 0x4d16
0x00004d0b      4c29fb         sub rbx, r15                            ; /src:480
0x00004d0e      741d           je 0x4d2d
0x00004d10      4983fefe       cmp r14, 0xfffffffffffffffe
0x00004d14      7417           je 0x4d2d
0x00004d16      31ed           xor ebp, ebp
0x00004d18      e973ffffff     jmp 0x4c90                              ; /src:457
0x00004d1d      0f1f00         nop dword [rax]
0x00004d20      e8ebcdffff     call sym.imp.__errno_location           ; /src:463
0x00004d25      83380b         cmp dword [rax], 0xb
0x00004d28      4889c3         mov rbx, rax
0x00004d2b      752d           jne 0x4d5a
0x00004d2d      488b8c241820.  mov rcx, qword [rsp + 0x2018]           ; /src:486
0x00004d35      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004d3e      4c89e0         mov rax, r12
0x00004d41      7512           jne 0x4d55
0x00004d43      4881c4282000.  add rsp, 0x2028
0x00004d4a      5b             pop rbx
0x00004d4b      5d             pop rbp
0x00004d4c      415c           pop r12
0x00004d4e      415d           pop r13
0x00004d50      415e           pop r14
0x00004d52      415f           pop r15
0x00004d54      c3             ret
0x00004d55      e8b6ceffff     call sym.imp.__stack_chk_fail
0x00004d5a      488b742408     mov rsi, qword [rsp + 8]                ; /src:464
0x00004d5f      bf04000000     mov edi, 4
0x00004d64      e8b74d0000     call sym.quotearg_style
0x00004d69      488d35d76800.  lea rsi, str.error_reading__s           ; 0xb647 ; "error reading %s"
0x00004d70      ba05000000     mov edx, 5
0x00004d75      31ff           xor edi, edi
0x00004d77      4889c5         mov rbp, rax
0x00004d7a      e851ceffff     call sym.imp.dcgettext
0x00004d7f      8b33           mov esi, dword [rbx]
0x00004d81      4889c2         mov rdx, rax
0x00004d84      4889e9         mov rcx, rbp
0x00004d87      bf01000000     mov edi, 1
0x00004d8c      31c0           xor eax, eax
0x00004d8e      e8cdd0ffff     call sym.imp.error
0x00004d93      0f1f00         nop dword [rax]
0x00004d96      662e0f1f8400.  nop word cs:[rax + rax]
;-- start_bytes:
0x00004da0      4156           push r14                                ; /src:865
0x00004da2      4155           push r13
0x00004da4      4154           push r12
0x00004da6      55             push rbp
0x00004da7      53             push rbx
0x00004da8      4881ec102000.  sub rsp, 0x2010
0x00004daf      64488b042528.  mov rax, qword fs:[0x28]
0x00004db8      488984240820.  mov qword [rsp + 0x2008], rax
0x00004dc0      31c0           xor eax, eax
0x00004dc2      4885d2         test rdx, rdx                           ; /src:868
0x00004dc5      7461           je 0x4e28
0x00004dc7      4989fe         mov r14, rdi
0x00004dca      4189f5         mov r13d, esi
0x00004dcd      4889d3         mov rbx, rdx
0x00004dd0      4889cd         mov rbp, rcx
0x00004dd3      4989e4         mov r12, rsp
0x00004dd6      eb1c           jmp 0x4df4
0x00004dd8      0f1f84000000.  nop dword [rax + rax]
0x00004de0      4883f8ff       cmp rax, 0xffffffffffffffff             ; /src:873
0x00004de4      746a           je 0x4e50
0x00004de6      48014500       add qword [rbp], rax                    ; /src:878
0x00004dea      4839d8         cmp rax, rbx                            ; /src:879
0x00004ded      7721           ja 0x4e10
0x00004def      4829c3         sub rbx, rax                            ; /src:868
0x00004df2      7434           je 0x4e28
0x00004df4      ba00200000     mov edx, 0x2000                         ; /src:870
0x00004df9      4c89e6         mov rsi, r12
0x00004dfc      4489ef         mov edi, r13d
0x00004dff      e80c500000     call sym.safe_read
0x00004e04      4885c0         test rax, rax                           ; /src:871
0x00004e07      75d7           jne 0x4de0
0x00004e09      b8ffffffff     mov eax, 0xffffffff                     ; /src:872 ; -1
0x00004e0e      eb1a           jmp 0x4e2a
0x00004e10      4829d8         sub rax, rbx                            ; /src:884
0x00004e13      7413           je 0x4e28
0x00004e15      498d3c1c       lea rdi, [r12 + rbx]                    ; /src:885
0x00004e19      4889c6         mov rsi, rax
0x00004e1c      e86ffcffff     call sym.xwrite_stdout.part.10
0x00004e21      0f1f80000000.  nop dword [rax]
0x00004e28      31c0           xor eax, eax                            ; /src:890
0x00004e2a      488b8c240820.  mov rcx, qword [rsp + 0x2008]           ; /src:891
0x00004e32      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004e3b      7556           jne 0x4e93
0x00004e3d      4881c4102000.  add rsp, 0x2010
0x00004e44      5b             pop rbx
0x00004e45      5d             pop rbp
0x00004e46      415c           pop r12
0x00004e48      415d           pop r13
0x00004e4a      415e           pop r14
0x00004e4c      c3             ret
0x00004e4d      0f1f00         nop dword [rax]
0x00004e50      4c89f6         mov rsi, r14                            ; /src:875
0x00004e53      bf04000000     mov edi, 4
0x00004e58      e8c34c0000     call sym.quotearg_style
0x00004e5d      488d35e36700.  lea rsi, str.error_reading__s           ; 0xb647 ; "error reading %s"
0x00004e64      ba05000000     mov edx, 5
0x00004e69      31ff           xor edi, edi
0x00004e6b      4889c5         mov rbp, rax
0x00004e6e      e85dcdffff     call sym.imp.dcgettext
0x00004e73      4889c3         mov rbx, rax
0x00004e76      e895ccffff     call sym.imp.__errno_location
0x00004e7b      8b30           mov esi, dword [rax]
0x00004e7d      4889e9         mov rcx, rbp
0x00004e80      31c0           xor eax, eax
0x00004e82      4889da         mov rdx, rbx
0x00004e85      31ff           xor edi, edi
0x00004e87      e8d4cfffff     call sym.imp.error
0x00004e8c      b801000000     mov eax, 1                              ; /src:876
0x00004e91      eb97           jmp 0x4e2a
0x00004e93      e878cdffff     call sym.imp.__stack_chk_fail           ; /src:891
0x00004e98      0f1f84000000.  nop dword [rax + rax]
;-- xlseek:
0x00004ea0      4155           push r13                                ; /src:495
0x00004ea2      4154           push r12
0x00004ea4      4989cc         mov r12, rcx
0x00004ea7      55             push rbp
0x00004ea8      53             push rbx
0x00004ea9      4889f5         mov rbp, rsi
0x00004eac      89d3           mov ebx, edx
0x00004eae      4883ec28       sub rsp, 0x28
0x00004eb2      64488b042528.  mov rax, qword fs:[0x28]
0x00004ebb      4889442418     mov qword [rsp + 0x18], rax
0x00004ec0      31c0           xor eax, eax
0x00004ec2      e8d9cdffff     call sym.imp.lseek                      ; /src:496
0x00004ec7      4885c0         test rax, rax                           ; /src:500
0x00004eca      7824           js 0x4ef0
0x00004ecc      488b4c2418     mov rcx, qword [rsp + 0x18]             ; /src:523
0x00004ed1      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004eda      0f8586000000   jne 0x4f66
0x00004ee0      4883c428       add rsp, 0x28
0x00004ee4      5b             pop rbx
0x00004ee5      5d             pop rbp
0x00004ee6      415c           pop r12
0x00004ee8      415d           pop r13
0x00004eea      c3             ret
0x00004eeb      0f1f440000     nop dword [rax + rax]
0x00004ef0      4889ef         mov rdi, rbp                            ; /src:503
0x00004ef3      4889e6         mov rsi, rsp
0x00004ef6      e8b5300000     call sym.offtostr
0x00004efb      4989c5         mov r13, rax
0x00004efe      e80dccffff     call sym.imp.__errno_location
0x00004f03      31ff           xor edi, edi                            ; /src:511
0x00004f05      83fb01         cmp ebx, 1                              ; /src:504
0x00004f08      4889c5         mov rbp, rax
0x00004f0b      4c89e2         mov rdx, r12                            ; /src:511
0x00004f0e      be03000000     mov esi, 3
0x00004f13      743b           je 0x4f50                               ; /src:504
0x00004f15      e8064d0000     call sym.quotearg_n_style_colon         ; /src:507
0x00004f1a      488d35456700.  lea rsi, str.s:_cannot_seek_to_offset__s ; 0xb666 ; "%s: cannot seek to offset %s"
0x00004f21      4889c3         mov rbx, rax
0x00004f24      ba05000000     mov edx, 5
0x00004f29      31ff           xor edi, edi                            ; /src:511
0x00004f2b      e8a0ccffff     call sym.imp.dcgettext
0x00004f30      8b7500         mov esi, dword [rbp]
0x00004f33      4889c2         mov rdx, rax
0x00004f36      31ff           xor edi, edi
0x00004f38      4d89e8         mov r8, r13
0x00004f3b      4889d9         mov rcx, rbx
0x00004f3e      31c0           xor eax, eax
0x00004f40      e81bcfffff     call sym.imp.error
0x00004f45      bf01000000     mov edi, 1                              ; /src:522
0x00004f4a      e871cfffff     call sym.imp.exit
0x00004f4f      90             nop
0x00004f50      e8cb4c0000     call sym.quotearg_n_style_colon         ; /src:511
0x00004f55      ba05000000     mov edx, 5
0x00004f5a      4889c3         mov rbx, rax
0x00004f5d      488d35c46a00.  lea rsi, str.s:_cannot_seek_to_relative_offset__s ; 0xba28 ; "%s: cannot seek to relative offset %s"
0x00004f64      ebc3           jmp 0x4f29
0x00004f66      e8a5ccffff     call sym.imp.__stack_chk_fail           ; /src:523
0x00004f6b      0f1f440000     nop dword [rax + rax]
;-- file_lines:
0x00004f70      4157           push r15                                ; /src:537
0x00004f72      4156           push r14
0x00004f74      4155           push r13
0x00004f76      4154           push r12
0x00004f78      55             push rbp
0x00004f79      53             push rbx
0x00004f7a      4881ec382000.  sub rsp, 0x2038
0x00004f81      64488b042528.  mov rax, qword fs:[0x28]
0x00004f8a      488984242820.  mov qword [rsp + 0x2028], rax
0x00004f92      31c0           xor eax, eax
0x00004f94      4885d2         test rdx, rdx                           ; /src:542
0x00004f97      48897c2408     mov qword [rsp + 8], rdi                ; /src:537
0x00004f9c      48894c2410     mov qword [rsp + 0x10], rcx
0x00004fa1      4c89442418     mov qword [rsp + 0x18], r8
0x00004fa6      4c890c24       mov qword [rsp], r9
0x00004faa      0f8420010000   je 0x50d0                               ; /src:542
0x00004fb0      4c89c5         mov rbp, r8                             ; /src:547
0x00004fb3      4189f6         mov r14d, esi
0x00004fb6      488d5c2420     lea rbx, [rsp + 0x20]                   ; /src:554
0x00004fbb      4829cd         sub rbp, rcx                            ; /src:547
0x00004fbe      4c89c6         mov rsi, r8                             ; /src:552
0x00004fc1      4889f9         mov rcx, rdi                            ; /src:553
0x00004fc4      4889e8         mov rax, rbp                            ; /src:547
0x00004fc7      4489f7         mov edi, r14d                           ; /src:553
0x00004fca      4989d7         mov r15, rdx
0x00004fcd      48c1f83f       sar rax, 0x3f                           ; /src:547
0x00004fd1      48c1e833       shr rax, 0x33
0x00004fd5      4801c5         add rbp, rax
0x00004fd8      81e5ff1f0000   and ebp, 0x1fff
0x00004fde      4829c5         sub rbp, rax                            ; /src:549
0x00004fe1      b800200000     mov eax, 0x2000
0x00004fe6      480f44e8       cmove rbp, rax
0x00004fea      31d2           xor edx, edx                            ; /src:553
0x00004fec      4829ee         sub rsi, rbp                            ; /src:552
0x00004fef      4989f5         mov r13, rsi
0x00004ff2      e8a9feffff     call sym.xlseek                         ; /src:553
0x00004ff7      4889ea         mov rdx, rbp                            ; /src:554
0x00004ffa      4889de         mov rsi, rbx
0x00004ffd      4489f7         mov edi, r14d
0x00005000      e80b4e0000     call sym.safe_read
0x00005005      4883f8ff       cmp rax, 0xffffffffffffffff             ; /src:555
0x00005009      4989c4         mov r12, rax                            ; /src:554
0x0000500c      0f842e010000   je 0x5140                               ; /src:555
0x00005012      488b3424       mov rsi, qword [rsp]                    ; /src:560
0x00005016      498d440500     lea rax, [r13 + rax]
0x0000501b      4d85e4         test r12, r12                           ; /src:563
0x0000501e      488906         mov qword [rsi], rax                    ; /src:560
0x00005021      744f           je 0x5072                               ; /src:563
0x00005023      0fb605eab020.  movzx eax, byte [obj.line_end]          ; /src:564 ; [0x210114:1]=0
0x0000502a      423844241f     cmp byte [rsp + r12 + 0x1f], al
0x0000502f      0f95c0         setne al
0x00005032      0fb6c0         movzx eax, al
0x00005035      4929c7         sub r15, rax
0x00005038      0fbe2dd5b020.  movsx ebp, byte [obj.line_end]          ; /src:574 ; [0x210114:1]=0
0x0000503f      4c89e2         mov rdx, r12
0x00005042      eb1f           jmp 0x5063
0x00005044      0f1f4000       nop dword [rax]
0x00005048      4889c2         mov rdx, rax                            ; /src:577
0x0000504b      498d4fff       lea rcx, [r15 - 1]                      ; /src:578
0x0000504f      4829da         sub rdx, rbx                            ; /src:577
0x00005052      4d85ff         test r15, r15                           ; /src:578
0x00005055      0f84a5000000   je 0x5100
0x0000505b      4885d2         test rdx, rdx                           ; /src:571
0x0000505e      4989cf         mov r15, rcx
0x00005061      740f           je 0x5072
0x00005063      89ee           mov esi, ebp                            ; /src:574
0x00005065      4889df         mov rdi, rbx
0x00005068      e803ceffff     call sym.imp.memrchr
0x0000506d      4885c0         test rax, rax                           ; /src:575
0x00005070      75d6           jne 0x5048
0x00005072      4c3b6c2410     cmp r13, qword [rsp + 0x10]             ; /src:591
0x00005077      0f8408010000   je 0x5185
0x0000507d      488b4c2408     mov rcx, qword [rsp + 8]                ; /src:601
0x00005082      4981ed002000.  sub r13, 0x2000                         ; /src:600
0x00005089      31d2           xor edx, edx                            ; /src:601
0x0000508b      4c89ee         mov rsi, r13
0x0000508e      4489f7         mov edi, r14d
0x00005091      e80afeffff     call sym.xlseek
0x00005096      ba00200000     mov edx, 0x2000                         ; /src:603
0x0000509b      4889de         mov rsi, rbx
0x0000509e      4489f7         mov edi, r14d
0x000050a1      e86a4d0000     call sym.safe_read
0x000050a6      4883f8ff       cmp rax, 0xffffffffffffffff             ; /src:604
0x000050aa      4989c4         mov r12, rax                            ; /src:603
0x000050ad      0f848d000000   je 0x5140                               ; /src:604
0x000050b3      488b3c24       mov rdi, qword [rsp]                    ; /src:610
0x000050b7      498d440500     lea rax, [r13 + rax]
0x000050bc      4d85e4         test r12, r12                           ; /src:612
0x000050bf      488907         mov qword [rdi], rax                    ; /src:610
0x000050c2      0f8570ffffff   jne 0x5038                              ; /src:612
0x000050c8      0f1f84000000.  nop dword [rax + rax]
0x000050d0      b801000000     mov eax, 1                              ; /src:543
0x000050d5      488bbc242820.  mov rdi, qword [rsp + 0x2028]
0x000050dd      6448333c2528.  xor rdi, qword fs:[0x28]
0x000050e6      0f85d4000000   jne 0x51c0
0x000050ec      4881c4382000.  add rsp, 0x2038
0x000050f3      5b             pop rbx
0x000050f4      5d             pop rbp
0x000050f5      415c           pop r12
0x000050f7      415d           pop r13                                 ; /src:491
0x000050f9      415e           pop r14
0x000050fb      415f           pop r15                                 ; /src:493
0x000050fd      c3             ret
0x000050fe      6690           nop
0x00005100      498d7424ff     lea rsi, [r12 - 1]
0x00005105      4839d6         cmp rsi, rdx
0x00005108      740c           je 0x5116
0x0000510a      488d7801       lea rdi, [rax + 1]
0x0000510e      4829d6         sub rsi, rdx
0x00005111      e87af9ffff     call sym.xwrite_stdout.part.10
0x00005116      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000511b      488b742408     mov rsi, qword [rsp + 8]
0x00005120      4489f2         mov edx, r14d
0x00005123      31ff           xor edi, edi
0x00005125      4c29e1         sub rcx, r12
0x00005128      4c29e9         sub rcx, r13
0x0000512b      e820fbffff     call sym.dump_remainder
0x00005130      488b1c24       mov rbx, qword [rsp]
0x00005134      480103         add qword [rbx], rax
0x00005137      b801000000     mov eax, 1
0x0000513c      eb97           jmp 0x50d5
0x0000513e      6690           nop
0x00005140      488b742408     mov rsi, qword [rsp + 8]
0x00005145      bf04000000     mov edi, 4
0x0000514a      e8d1490000     call sym.quotearg_style
0x0000514f      488d35f16400.  lea rsi, str.error_reading__s           ; 0xb647 ; "error reading %s"
0x00005156      ba05000000     mov edx, 5
0x0000515b      31ff           xor edi, edi
0x0000515d      4889c5         mov rbp, rax
0x00005160      e86bcaffff     call sym.imp.dcgettext
0x00005165      4889c3         mov rbx, rax
0x00005168      e8a3c9ffff     call sym.imp.__errno_location
0x0000516d      8b30           mov esi, dword [rax]
0x0000516f      4889e9         mov rcx, rbp
0x00005172      31c0           xor eax, eax
0x00005174      4889da         mov rdx, rbx
0x00005177      31ff           xor edi, edi
0x00005179      e8e2ccffff     call sym.imp.error
0x0000517e      31c0           xor eax, eax
0x00005180      e950ffffff     jmp 0x50d5
0x00005185      488b5c2408     mov rbx, qword [rsp + 8]                ; /src:483
0x0000518a      4c89ee         mov rsi, r13
0x0000518d      31d2           xor edx, edx
0x0000518f      4489f7         mov edi, r14d
0x00005192      4889d9         mov rcx, rbx
0x00005195      e806fdffff     call sym.xlseek
0x0000519a      488b4c2418     mov rcx, qword [rsp + 0x18]             ; /src:484
0x0000519f      4489f2         mov edx, r14d
0x000051a2      4889de         mov rsi, rbx
0x000051a5      31ff           xor edi, edi
0x000051a7      e8a4faffff     call sym.dump_remainder
0x000051ac      4901c5         add r13, rax
0x000051af      488b0424       mov rax, qword [rsp]
0x000051b3      4c8928         mov qword [rax], r13
0x000051b6      b801000000     mov eax, 1
0x000051bb      e915ffffff     jmp 0x50d5
0x000051c0      e84bcaffff     call sym.imp.__stack_chk_fail
0x000051c5      90             nop
0x000051c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- check_fspec:
0x000051d0      4156           push r14
0x000051d2      4155           push r13
0x000051d4      4154           push r12
0x000051d6      55             push rbp
0x000051d7      53             push rbx
0x000051d8      4881eca00000.  sub rsp, 0xa0
0x000051df      64488b042528.  mov rax, qword fs:[0x28]
0x000051e8      488984249800.  mov qword [rsp + 0x98], rax             ; /src:480
0x000051f0      31c0           xor eax, eax
0x000051f2      837f38ff       cmp dword [rdi + 0x38], 0xffffffff
0x000051f6      7528           jne 0x5220
0x000051f8      488b84249800.  mov rax, qword [rsp + 0x98]
0x00005200      644833042528.  xor rax, qword fs:[0x28]
0x00005209      0f8583010000   jne 0x5392
0x0000520f      4881c4a00000.  add rsp, 0xa0
0x00005216      5b             pop rbx
0x00005217      5d             pop rbp
0x00005218      415c           pop r12
0x0000521a      415d           pop r13
0x0000521c      415e           pop r14
0x0000521e      c3             ret
0x0000521f      90             nop
0x00005220      4889fb         mov rbx, rdi                            ; /src:-9
0x00005223      488b3f         mov rdi, qword [rdi]
0x00005226      4989f4         mov r12, rsi
0x00005229      e8b2f7ffff     call sym.pretty_name.isra.7
0x0000522e      8b7338         mov esi, dword [rbx + 0x38]
0x00005231      4889e2         mov rdx, rsp
0x00005234      bf01000000     mov edi, 1
0x00005239      4989c5         mov r13, rax                            ; /src:2
0x0000523c      e8bfcbffff     call sym.imp.__fxstat
0x00005241      85c0           test eax, eax
0x00005243      89c5           mov ebp, eax
0x00005245      0f8595000000   jne 0x52e0
0x0000524b      8b4330         mov eax, dword [rbx + 0x30]
0x0000524e      2500f00000     and eax, 0xf000
0x00005253      3d00800000     cmp eax, 0x8000
0x00005258      0f84aa000000   je 0x5308
0x0000525e      803db0ae2000.  cmp byte [obj.print_headers], 0         ; [0x210115:1]=0
0x00005265      740a           je 0x5271
0x00005267      31ed           xor ebp, ebp
0x00005269      49391c24       cmp qword [r12], rbx
0x0000526d      400f95c5       setne bpl
0x00005271      8b5338         mov edx, dword [rbx + 0x38]
0x00005274      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000527b      4c89ee         mov rsi, r13
0x0000527e      89ef           mov edi, ebp
0x00005280      e8cbf9ffff     call sym.dump_remainder
0x00005285      48014308       add qword [rbx + 8], rax
0x00005289      4885c0         test rax, rax
0x0000528c      0f8466ffffff   je 0x51f8
0x00005292      488b3d2fae20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x00005299      49891c24       mov qword [r12], rbx
0x0000529d      e84eccffff     call sym.imp.fflush_unlocked
0x000052a2      85c0           test eax, eax
0x000052a4      0f844effffff   je 0x51f8
0x000052aa      488d35e56300.  lea rsi, str.write_error                ; 0xb696 ; "write error"
0x000052b1      ba05000000     mov edx, 5
0x000052b6      31ff           xor edi, edi
0x000052b8      e813c9ffff     call sym.imp.dcgettext
0x000052bd      4889c3         mov rbx, rax
0x000052c0      e84bc8ffff     call sym.imp.__errno_location
0x000052c5      8b30           mov esi, dword [rax]
0x000052c7      4889da         mov rdx, rbx
0x000052ca      bf01000000     mov edi, 1
0x000052cf      31c0           xor eax, eax
0x000052d1      e88acbffff     call sym.imp.error
0x000052d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000052e0      e82bc8ffff     call sym.imp.__errno_location
0x000052e5      8b00           mov eax, dword [rax]
0x000052e7      8b7b38         mov edi, dword [rbx + 0x38]
0x000052ea      4c89ee         mov rsi, r13
0x000052ed      89433c         mov dword [rbx + 0x3c], eax
0x000052f0      e82bf7ffff     call sym.close_fd
0x000052f5      c74338ffffff.  mov dword [rbx + 0x38], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x000052fc      e9f7feffff     jmp 0x51f8
0x00005301      0f1f80000000.  nop dword [rax]
0x00005308      488b4308       mov rax, qword [rbx + 8]
0x0000530c      4839442430     cmp qword [rsp + 0x30], rax
0x00005311      7c2d           jl 0x5340
0x00005313      0f8545ffffff   jne 0x525e
0x00005319      488b4310       mov rax, qword [rbx + 0x10]
0x0000531d      4839442458     cmp qword [rsp + 0x58], rax
0x00005322      0f8536ffffff   jne 0x525e                              ; stat.h:-941
0x00005328      8b442460       mov eax, dword [rsp + 0x60]
0x0000532c      394318         cmp dword [rbx + 0x18], eax
0x0000532f      0f8529ffffff   jne 0x525e
0x00005335      e9befeffff     jmp 0x51f8
0x0000533a      660f1f440000   nop word [rax + rax]
0x00005340      4c89ea         mov rdx, r13
0x00005343      be03000000     mov esi, 3
0x00005348      31ff           xor edi, edi
0x0000534a      e8d1480000     call sym.quotearg_n_style_colon
0x0000534f      488d352d6300.  lea rsi, str.s:_file_truncated          ; 0xb683 ; "%s: file truncated"
0x00005356      4989c6         mov r14, rax
0x00005359      ba05000000     mov edx, 5
0x0000535e      31ff           xor edi, edi
0x00005360      e86bc8ffff     call sym.imp.dcgettext
0x00005365      4c89f1         mov rcx, r14
0x00005368      4889c2         mov rdx, rax
0x0000536b      31f6           xor esi, esi
0x0000536d      31ff           xor edi, edi
0x0000536f      31c0           xor eax, eax
0x00005371      e8eacaffff     call sym.imp.error
0x00005376      8b7b38         mov edi, dword [rbx + 0x38]
0x00005379      4c89e9         mov rcx, r13
0x0000537c      31d2           xor edx, edx
0x0000537e      31f6           xor esi, esi
0x00005380      e81bfbffff     call sym.xlseek
0x00005385      48c743080000.  mov qword [rbx + 8], 0
0x0000538d      e9ccfeffff     jmp 0x525e
0x00005392      e879c8ffff     call sym.imp.__stack_chk_fail
0x00005397      660f1f840000.  nop word [rax + rax]
;-- fremote:
0x000053a0      4154           push r12
0x000053a2      55             push rbp
0x000053a3      4889f5         mov rbp, rsi
0x000053a6      53             push rbx
0x000053a7      4883c480       add rsp, 0xffffffffffffff80
0x000053ab      4889e6         mov rsi, rsp
0x000053ae      64488b042528.  mov rax, qword fs:[0x28]
0x000053b7      4889442478     mov qword [rsp + 0x78], rax
0x000053bc      31c0           xor eax, eax
0x000053be      e8ddcaffff     call sym.imp.fstatfs
0x000053c3      85c0           test eax, eax
0x000053c5      7439           je 0x5400
0x000053c7      e844c7ffff     call sym.imp.__errno_location
0x000053cc      833826         cmp dword [rax], 0x26
0x000053cf      4989c4         mov r12, rax
0x000053d2      bb01000000     mov ebx, 1
0x000053d7      0f8593000000   jne 0x5470
0x000053dd      488b4c2478     mov rcx, qword [rsp + 0x78]
0x000053e2      6448330c2528.  xor rcx, qword fs:[0x28]
0x000053eb      89d8           mov eax, ebx
0x000053ed      0f8594060000   jne 0x5a87
0x000053f3      4883ec80       sub rsp, 0xffffffffffffff80
0x000053f7      5b             pop rbx
0x000053f8      5d             pop rbp
0x000053f9      415c           pop r12
0x000053fb      c3             ret
0x000053fc      0f1f4000       nop dword [rax]
0x00005400      488b0424       mov rax, qword [rsp]
0x00005404      483d02028019   cmp rax, 0x19800202
0x0000540a      7454           je 0x5460
0x0000540c      0f8f9e000000   jg 0x54b0
0x00005412      483d60960000   cmp rax, sym.clone_quoting_options      ; 0x9660 ; "ATUSH\x89\xfb\u8904\xff\xffD\x8b H\x89\xc5H\x8d\x05\xc7k "
0x00005418      7446           je 0x5460
0x0000541a      0f8f40010000   jg 0x5560
0x00005420      483d34340000   cmp rax, 0x3434                         ; /src:18
0x00005426      7438           je 0x5460
0x00005428      0f8f8a010000   jg 0x55b8
0x0000542e      483d7d130000   cmp rax, 0x137d
0x00005434      742a           je 0x5460
0x00005436      0f8eb4030000   jle 0x57f0
0x0000543c      483dd11c0000   cmp rax, 0x1cd1
0x00005442      741c           je 0x5460
0x00005444      0f8f76040000   jg 0x58c0
0x0000544a      483d7f130000   cmp rax, 0x137f
0x00005450      740e           je 0x5460
0x00005452      483d8f130000   cmp rax, 0x138f
0x00005458      0f8532020000   jne 0x5690
0x0000545e      6690           nop
0x00005460      31db           xor ebx, ebx
0x00005462      e976ffffff     jmp 0x53dd
0x00005467      660f1f840000.  nop word [rax + rax]
0x00005470      4889ee         mov rsi, rbp
0x00005473      bf04000000     mov edi, 4
0x00005478      e8a3460000     call sym.quotearg_style
0x0000547d      488d35cc6500.  lea rsi, str.cannot_determine_location_of__s._reverting_to_polling ; 0xba50 ; "cannot determine location of %s. reverting to polling"
0x00005484      31ff           xor edi, edi
0x00005486      ba05000000     mov edx, 5
0x0000548b      4889c5         mov rbp, rax
0x0000548e      e83dc7ffff     call sym.imp.dcgettext
0x00005493      418b3424       mov esi, dword [r12]
0x00005497      4889c2         mov rdx, rax
0x0000549a      4889e9         mov rcx, rbp
0x0000549d      31ff           xor edi, edi
0x0000549f      31c0           xor eax, eax
0x000054a1      e8bac9ffff     call sym.imp.error
0x000054a6      e932ffffff     jmp 0x53dd
0x000054ab      0f1f440000     nop dword [rax + rax]
0x000054b0      483d6c676561   cmp rax, 0x6165676c
0x000054b6      74a8           je 0x5460
0x000054b8      7e4e           jle 0x5508
0x000054ba      483d79727273   cmp rax, 0x73727279
0x000054c0      749e           je 0x5460
0x000054c2      0f8f38010000   jg 0x5600                               ; stat.h:-941
0x000054c8      483d78616464   cmp rax, 0x64646178
0x000054ce      7490           je 0x5460
0x000054d0      0f8f0a020000   jg 0x56e0
0x000054d6      483d72656562   cmp rax, 0x62656572
0x000054dc      7482           je 0x5460
0x000054de      0f8f9c030000   jg 0x5880
0x000054e4      483d76656462   cmp rax, 0x62646576
0x000054ea      0f8470ffffff   je 0x5460
0x000054f0      483d70656562   cmp rax, 0x62656570
0x000054f6      0f8594010000   jne 0x5690
0x000054fc      31db           xor ebx, ebx
0x000054fe      e9dafeffff     jmp 0x53dd
0x00005503      0f1f440000     nop dword [rax + rax]
0x00005508      483d53465845   cmp rax, 0x45584653
0x0000550e      0f844cffffff   je 0x5460
0x00005514      0f8f36010000   jg 0x5650
0x0000551a      483dc12fc12f   cmp rax, 0x2fc12fc1
0x00005520      0f843affffff   je 0x5460
0x00005526      0f8e1c020000   jle 0x5748
0x0000552c      483d4d4e4942   cmp rax, 0x42494e4d
0x00005532      0f8428ffffff   je 0x5460
0x00005538      0f8f72040000   jg 0x59b0
0x0000553e      483d4a465331   cmp rax, 0x3153464a
0x00005544      0f8416ffffff   je 0x5460
0x0000554a      483d31534642   cmp rax, 0x42465331                     ; /src:18
0x00005550      0f853a010000   jne 0x5690
0x00005556      31db           xor ebx, ebx
0x00005558      e980feffff     jmp 0x53dd
0x0000555d      0f1f00         nop dword [rax]
0x00005560      483deeffc000   cmp rax, 0xc0ffee
0x00005566      0f84f4feffff   je 0x5460
0x0000556c      0f8f2e010000   jg 0x56a0
0x00005572      483d51ef0000   cmp rax, 0xef51
0x00005578      0f84e2feffff   je 0x5460
0x0000557e      0f8ecc020000   jle 0x5850
0x00005584      483d54190100   cmp rax, 0x11954
0x0000558a      0f84d0feffff   je 0x5460
0x00005590      0f8f72030000   jg 0x5908
0x00005596      483d53ef0000   cmp rax, 0xef53
0x0000559c      0f84befeffff   je 0x5460
0x000055a2      483d5ff10000   cmp rax, 0xf15f
0x000055a8      0f85e2000000   jne 0x5690
0x000055ae      31db           xor ebx, ebx
0x000055b0      e928feffff     jmp 0x53dd
0x000055b5      0f1f00         nop dword [rax]
0x000055b8      483d58480000   cmp rax, 0x4858                         ; ":n"
0x000055be      0f849cfeffff   je 0x5460
0x000055c4      0f8f4e020000   jg 0x5818
0x000055ca      483d06400000   cmp rax, 0x4006
0x000055d0      0f848afeffff   je 0x5460
0x000055d6      0f8fc4020000   jg 0x58a0
0x000055dc      483d00400000   cmp rax, 0x4000
0x000055e2      0f8478feffff   je 0x5460                               ; stat.h:-941
0x000055e8      483d04400000   cmp rax, 0x4004
0x000055ee      0f859c000000   jne 0x5690
0x000055f4      31db           xor ebx, ebx
0x000055f6      e9e2fdffff     jmp 0x53dd
0x000055fb      0f1f440000     nop dword [rax + rax]
0x00005600      ba68817ec9     mov edx, 0xc97e8168
0x00005605      4839d0         cmp rax, rdx
0x00005608      0f8452feffff   je 0x5460
0x0000560e      0f8f94010000   jg 0x57a8
0x00005614      4881ea2a195b.  sub rdx, 0x385b192a
0x0000561b      4839d0         cmp rax, rdx
0x0000561e      0f843cfeffff   je 0x5460
0x00005624      4839d0         cmp rax, rdx
0x00005627      0f8fb3020000   jg 0x58e0
0x0000562d      483d63617274   cmp rax, 0x74726163
0x00005633      0f8427feffff   je 0x5460
0x00005639      4881ea480f9f.  sub rdx, 0xb9f0f48
0x00005640      4839d0         cmp rax, rdx
0x00005643      754b           jne 0x5690
0x00005645      31db           xor ebx, ebx
0x00005647      e991fdffff     jmp 0x53dd
0x0000564c      0f1f4000       nop dword [rax]
0x00005650      483d00011954   cmp rax, 0x54190100
0x00005656      0f8404feffff   je 0x5460
0x0000565c      0f8fae000000   jg 0x5710
0x00005662      483d46484653   cmp rax, 0x53464846
0x00005668      0f84f2fdffff   je 0x5460
0x0000566e      0f8fdc020000   jg 0x5950
0x00005674      483d73496552   cmp rax, 0x52654973
0x0000567a      0f84e0fdffff   je 0x5460
0x00005680      483d4d314653   cmp rax, 0x5346314d
0x00005686      0f84d4fdffff   je 0x5460
0x0000568c      0f1f4000       nop dword [rax]
0x00005690      bb01000000     mov ebx, 1
0x00005695      e943fdffff     jmp 0x53dd
0x0000569a      660f1f440000   nop word [rax + rax]
0x000056a0      483d21586507   cmp rax, 0x7655821
0x000056a6      0f84b4fdffff   je 0x5460
0x000056ac      0f8ebe000000   jle 0x5770
0x000056b2      483d54783011   cmp rax, 0x11307854
0x000056b8      0f84a2fdffff   je 0x5460
0x000056be      0f8f2c030000   jg 0x59f0
0x000056c4      483d34190409   cmp rax, 0x9041934
0x000056ca      0f8490fdffff   je 0x5460
0x000056d0      483dea1dad0b   cmp rax, 0xbad1dea
0x000056d6      75b8           jne 0x5690
0x000056d8      31db           xor ebx, ebx
0x000056da      e9fefcffff     jmp 0x53dd
0x000056df      90             nop
0x000056e0      483d7366736e   cmp rax, 0x6e736673
0x000056e6      0f8474fdffff   je 0x5460
0x000056ec      0f8f7e020000   jg 0x5970
0x000056f2      483d69695967   cmp rax, 0x67596969
0x000056f8      0f8462fdffff   je 0x5460
0x000056fe      483d22111968   cmp rax, 0x68191122
0x00005704      758a           jne 0x5690
0x00005706      31db           xor ebx, ebx
0x00005708      e9d0fcffff     jmp 0x53dd
0x0000570d      0f1f00         nop dword [rax]
0x00005710      483d42534658   cmp rax, 0x58465342
0x00005716      0f8444fdffff   je 0x5460
0x0000571c      0f8fae020000   jg 0x59d0
0x00005722      483d53465a56   cmp rax, 0x565a4653
0x00005728      0f8432fdffff   je 0x5460
0x0000572e      483d29582958   cmp rax, 0x58295829
0x00005734      0f8556ffffff   jne 0x5690
0x0000573a      31db           xor ebx, ebx
0x0000573c      e99cfcffff     jmp 0x53dd
0x00005741      0f1f80000000.  nop dword [rax]
0x00005748      483d05190524   cmp rax, 0x24051905
0x0000574e      0f840cfdffff   je 0x5460
0x00005754      0f8fd6010000   jg 0x5930
0x0000575a      483dcefaad1b   cmp rax, 0x1badface
0x00005760      0f852affffff   jne 0x5690
0x00005766      31db           xor ebx, ebx
0x00005768      e970fcffff     jmp 0x53dd
0x0000576d      0f1f00         nop dword [rax]
0x00005770      483d6dd12f01   cmp rax, 0x12fd16d                      ; /src:18
0x00005776      0f84e4fcffff   je 0x5460
0x0000577c      0f8fee020000   jg 0x5a70
0x00005782      483d94190201   cmp rax, 0x1021994
0x00005788      0f84d2fcffff   je 0x5460
0x0000578e      483d97190201   cmp rax, 0x1021997
0x00005794      0f85f6feffff   jne 0x5690
0x0000579a      31db           xor ebx, ebx
0x0000579c      e93cfcffff     jmp 0x53dd
0x000057a1      0f1f80000000.  nop dword [rax]
0x000057a8      ba1020f5f2     mov edx, 0xf2f52010
0x000057ad      4839d0         cmp rax, rdx
0x000057b0      0f84aafcffff   je 0x5460
0x000057b6      4839d0         cmp rax, rdx
0x000057b9      0f8f69020000   jg 0x5a28
0x000057bf      4881eaffd5f6.  sub rdx, 0x27f6d5ff
0x000057c6      4839d0         cmp rax, rdx
0x000057c9      0f8491fcffff   je 0x5460
0x000057cf      4881c2d33760.  add rdx, 0x136037d3
0x000057d6      4839d0         cmp rax, rdx
0x000057d9      0f85b1feffff   jne 0x5690
0x000057df      31db           xor ebx, ebx
0x000057e1      e9f7fbffff     jmp 0x53dd
0x000057e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000057f0      483d87010000   cmp rax, 0x187
0x000057f6      0f8464fcffff   je 0x5460
0x000057fc      0f8f8e010000   jg 0x5990
0x00005802      4883f82f       cmp rax, 0x2f                           ; stat.h:-941
0x00005806      0f8584feffff   jne 0x5690
0x0000580c      31db           xor ebx, ebx
0x0000580e      e9cafbffff     jmp 0x53dd
0x00005813      0f1f440000     nop dword [rax + rax]
0x00005818      483df55d0000   cmp rax, 0x5df5
0x0000581e      0f843cfcffff   je 0x5460
0x00005824      0f8f26020000   jg 0x5a50
0x0000582a      483d444d0000   cmp rax, 0x4d44
0x00005830      0f842afcffff   je 0x5460
0x00005836      483d5a4d0000   cmp rax, 0x4d5a                         ; "H\x8bt$\b\xbf\x04"
0x0000583c      0f854efeffff   jne 0x5690
0x00005842      31db           xor ebx, ebx
0x00005844      e994fbffff     jmp 0x53dd
0x00005849      0f1f80000000.  nop dword [rax]
0x00005850      483df5ad0000   cmp rax, 0xadf5
0x00005856      0f8404fcffff   je 0x5460
0x0000585c      0f8fae010000   jg 0x5a10
0x00005862      482da09f0000   sub rax, 0x9fa0
0x00005868      4883f802       cmp rax, 2
0x0000586c      0f871efeffff   ja 0x5690
0x00005872      31db           xor ebx, ebx
0x00005874      e964fbffff     jmp 0x53dd
0x00005879      0f1f80000000.  nop dword [rax]
0x00005880      483d70726763   cmp rax, 0x63677270
0x00005886      0f84d4fbffff   je 0x5460
0x0000588c      483d20676264   cmp rax, 0x64626720
0x00005892      0f85f8fdffff   jne 0x5690
0x00005898      31db           xor ebx, ebx
0x0000589a      e93efbffff     jmp 0x53dd
0x0000589f      90             nop
0x000058a0      483d44420000   cmp rax, 0x4244
0x000058a6      0f84b4fbffff   je 0x5460
0x000058ac      483d2b480000   cmp rax, 0x482b
0x000058b2      0f85d8fdffff   jne 0x5690
0x000058b8      31db           xor ebx, ebx                            ; /src:18
0x000058ba      e91efbffff     jmp 0x53dd
0x000058bf      90             nop
0x000058c0      483d68240000   cmp rax, 0x2468
0x000058c6      0f8494fbffff   je 0x5460
0x000058cc      483d78240000   cmp rax, 0x2478
0x000058d2      0f85b8fdffff   jne 0x5690
0x000058d8      31db           xor ebx, ebx
0x000058da      e9fefaffff     jmp 0x53dd
0x000058df      90             nop
0x000058e0      baf6588495     mov edx, 0x958458f6
0x000058e5      4839d0         cmp rax, rdx
0x000058e8      0f8472fbffff   je 0x5460
0x000058ee      4881c27ec035.  add rdx, 0x1635c07e
0x000058f5      4839d0         cmp rax, rdx
0x000058f8      0f8592fdffff   jne 0x5690
0x000058fe      31db           xor ebx, ebx
0x00005900      e9d8faffff     jmp 0x53dd
0x00005905      0f1f00         nop dword [rax]
0x00005908      483debe02700   cmp rax, 0x27e0eb
0x0000590e      0f844cfbffff   je 0x5460
0x00005914      483d534a4100   cmp rax, 0x414a53
0x0000591a      0f8570fdffff   jne 0x5690
0x00005920      31db           xor ebx, ebx
0x00005922      e9b6faffff     jmp 0x53dd                              ; /src:32
0x00005927      660f1f840000.  nop word [rax + rax]
0x00005930      483d453dcd28   cmp rax, 0x28cd3d45
0x00005936      0f8424fbffff   je 0x5460
0x0000593c      483dea1dad2b   cmp rax, 0x2bad1dea
0x00005942      0f8548fdffff   jne 0x5690
0x00005948      31db           xor ebx, ebx                            ; /src:35
0x0000594a      e98efaffff     jmp 0x53dd
0x0000594f      90             nop
0x00005950      483d4e544653   cmp rax, 0x5346544e
0x00005956      0f8404fbffff   je 0x5460                               ; /src:36
0x0000595c      483d4b434f53   cmp rax, 0x534f434b
0x00005962      0f8528fdffff   jne 0x5690
0x00005968      31db           xor ebx, ebx
0x0000596a      e96efaffff     jmp 0x53dd
0x0000596f      90             nop
0x00005970      483d73666373   cmp rax, 0x73636673
0x00005976      0f84e4faffff   je 0x5460
0x0000597c      483d68737173   cmp rax, 0x73717368                     ; /src:-567
0x00005982      0f8508fdffff   jne 0x5690
0x00005988      31db           xor ebx, ebx                            ; /src:43
0x0000598a      e94efaffff     jmp 0x53dd
0x0000598f      90             nop
0x00005990      483dc0070000   cmp rax, 0x7c0                          ; /src:47
0x00005996      0f84c4faffff   je 0x5460
0x0000599c      483d73130000   cmp rax, 0x1373
0x000059a2      0f85e8fcffff   jne 0x5690
0x000059a8      31db           xor ebx, ebx                            ; /src:49
0x000059aa      e92efaffff     jmp 0x53dd                              ; /src:47
0x000059af      90             nop
0x000059b0      483d535d4143   cmp rax, 0x43415d53
0x000059b6      0f84a4faffff   je 0x5460
0x000059bc      483d28cd3d45   cmp rax, 0x453dcd28
0x000059c2      0f85c8fcffff   jne 0x5690
0x000059c8      31db           xor ebx, ebx
0x000059ca      e90efaffff     jmp 0x53dd
0x000059cf      90             nop
0x000059d0      483df0693c5a   cmp rax, 0x5a3c69f0                     ; /src:66
0x000059d6      0f8484faffff   je 0x5460
0x000059dc      483df52dca5d   cmp rax, 0x5dca2df5                     ; /src:82
0x000059e2      0f85a8fcffff   jne 0x5690                              ; /src:83
0x000059e8      31db           xor ebx, ebx
0x000059ea      e9eef9ffff     jmp 0x53dd
0x000059ef      90             nop
0x000059f0      483d66136613   cmp rax, 0x13661366
0x000059f6      0f8464faffff   je 0x5460
0x000059fc      483d46330115   cmp rax, 0x15013346
0x00005a02      0f8588fcffff   jne 0x5690
0x00005a08      31db           xor ebx, ebx
0x00005a0a      e9cef9ffff     jmp 0x53dd
0x00005a0f      90             nop
0x00005a10      483dffad0000   cmp rax, 0xadff
0x00005a16      0f8574fcffff   jne 0x5690
0x00005a1c      31db           xor ebx, ebx
0x00005a1e      e9baf9ffff     jmp 0x53dd
0x00005a23      0f1f440000     nop dword [rax + rax]
0x00005a28      ba8cff7cf9     mov edx, 0xf97cff8c
0x00005a2d      4839d0         cmp rax, rdx
0x00005a30      0f842afaffff   je 0x5460
0x00005a36      4881c2bde818.  add rdx, 0x18e8bd
0x00005a3d      4839d0         cmp rax, rdx
0x00005a40      0f854afcffff   jne 0x5690                              ; /src:168
0x00005a46      31db           xor ebx, ebx
0x00005a48      e990f9ffff     jmp 0x53dd
0x00005a4d      0f1f00         nop dword [rax]
0x00005a50      483d75720000   cmp rax, 0x7275
0x00005a56      0f8404faffff   je 0x5460
0x00005a5c      483db6720000   cmp rax, 0x72b6
0x00005a62      0f8528fcffff   jne 0x5690
0x00005a68      31db           xor ebx, ebx
0x00005a6a      e96ef9ffff     jmp 0x53dd
0x00005a6f      90             nop
0x00005a70      482db4f72f01   sub rax, 0x12ff7b4
0x00005a76      4883f803       cmp rax, 3
0x00005a7a      0f8710fcffff   ja 0x5690
0x00005a80      31db           xor ebx, ebx
0x00005a82      e956f9ffff     jmp 0x53dd                              ; /src:47
0x00005a87      e884c1ffff     call sym.imp.__stack_chk_fail
0x00005a8c      0f1f4000       nop dword [rax]                         ; /src:49
;-- recheck:
0x00005a90      4157           push r15
0x00005a92      4156           push r14
0x00005a94      b902000000     mov ecx, 2
0x00005a99      4155           push r13
0x00005a9b      4154           push r12
0x00005a9d      4189f5         mov r13d, esi                           ; ../coreutils-8.31/src/il.c:-483
0x00005aa0      55             push rbp
0x00005aa1      53             push rbx
0x00005aa2      4889fb         mov rbx, rdi
0x00005aa5      4881ecb80000.  sub rsp, 0xb8
0x00005aac      448b733c       mov r14d, dword [rbx + 0x3c]
0x00005ab0      64488b042528.  mov rax, qword fs:[0x28]
0x00005ab9      48898424a800.  mov qword [rsp + 0xa8], rax
0x00005ac1      31c0           xor eax, eax
0x00005ac3      488b07         mov rax, qword [rdi]
0x00005ac6      488d3d225d00.  lea rdi, str.b                          ; 0xb7ef ; u"-b\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u2500\u3a73\u2520s\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u696c\u656es\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u7962\u6574s\u6b62\u6d4b\u474d\u5054\u5a45\u3059\u2d00\u662d\u6c6f\u6f6cw\u6e69\u6176\u696c\u2064\u4950D\u6e69\u6176\u696c\u2064\u756e\u626d\u7265\u6f20\u2066\u6573\u6f63\u646e\u3a73\u2520s\u6144\u6976\u2064\u614d\u4b63\u6e65\u697ae\u6150\u6c75\u5220\u6275\u6e69\u4a00\u6d69\u4d20\u7965\u7265\u6e69g\u6149\u206e\u614c\u636e\u2065\u6154\u6c79\u726f\u6300\u6e3a\u663a\u7146\u3a73\u7a76\u3130\u3332\u3534\u3736\u3938\u6300\u6e61\u6f6e\u2074\u6f66\u6c6c\u776f\u2520\u2073\u7962\u6e20\u6d61e\u6163\u6e6e\u746f\u6f20\u6570\u206e\u7325\u6620\u726f\u7220\u6165\u6964\u676e\u6300\u6e61\u6f6e\u2074\u7366\u6174\u2074\u7325\u6200\u6765\u6900\u6f6e\u6974\u7966\u7220\u7365\u756f\u6372\u7365\u6520\u6878\u7561\u7473\u6465\u6300\u6e61\u6f6e\u2074\u6177\u6374\u2068\u7325\u2500\u2073\u6177\u2073\u6572\u6c70\u6361\u6465\u6e00\u206f\u6966\u656c\u2073\u6572\u616d\u6e69\u6e69g\u7265\u6f72\u2072\u6572\u6461\u6e69\u2067\u6e69\u746f\u6669\u2079\u7665\u6e65t\u6163\u6e6e\u746f\u7220\u6165\u2064\u6572\u6c61\u6974\u656d\u6320\u6f6c\u6b63\u6d00\u7861\u752d\u636e\u6168\u676e\u6465\u732d\u6174\u7374\u2d00\u6964\u6173\u6c62\u2d65\u6e69\u746f\u6669y\u6970d\u702d\u6572\u7573\u656d\u692d\u706e\u7475\u702d\u7069e\u7571\u6569t\u6572\u7274y\u6973\u656c\u746e\u7300\u656c\u7065\u692d\u746e\u7265\u6176l\u6576\u6272\u736fe\u657a\u6f72\u742d\u7265\u696d\u616e\u6574d\u6568\u706c\u7600\u7265\u6973\u6e6f\u6400\u7365\u7263\u7069\u6f74r"
0x00005acd      4889c6         mov rsi, rax
0x00005ad0      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005ad2      0fb64b36       movzx ecx, byte [rbx + 0x36]
0x00005ad6      400f97c5       seta bpl
0x00005ada      4080dd00       sbb bpl, 0                              ; /src:90
0x00005ade      400fbeed       movsx ebp, bpl
0x00005ae2      85ed           test ebp, ebp
0x00005ae4      884c2407       mov byte [rsp + 7], cl                  ; /src:89
0x00005ae8      0f8412010000   je 0x5c00                               ; /src:90
0x00005aee      31f6           xor esi, esi
0x00005af0      4584ed         test r13b, r13b
0x00005af3      4889c7         mov rdi, rax
0x00005af6      400f94c6       sete sil
0x00005afa      31c0           xor eax, eax
0x00005afc      c1e60b         shl esi, 0xb
0x00005aff      e85c110000     call sym.open_safer
0x00005b04      4189c4         mov r12d, eax
0x00005b07      8b433c         mov eax, dword [rbx + 0x3c]             ; /src:91
0x00005b0a      837b38ff       cmp dword [rbx + 0x38], 0xffffffff
0x00005b0e      0f94c2         sete dl
0x00005b11      85c0           test eax, eax
0x00005b13      0f94c0         sete al
0x00005b16      38c2           cmp dl, al
0x00005b18      0f849d050000   je 0x60bb
0x00005b1e      440fb63df4a5.  movzx r15d, byte [obj.reopen_inaccessible_files] ; [0x21011a:1]=0
0x00005b26      0fb605dfa520.  movzx eax, byte [obj.disable_inotify]   ; [0x21010c:1]=0
0x00005b2d      4584ff         test r15b, r15b
0x00005b30      0f85da000000   jne 0x5c10
0x00005b36      84c0           test al, al
0x00005b38      c6433601       mov byte [rbx + 0x36], 1
0x00005b3c      0f84a6030000   je 0x5ee8
0x00005b42      4183fcff       cmp r12d, 0xffffffff
0x00005b46      0f8524040000   jne 0x5f70
0x00005b4c      440fb67b36     movzx r15d, byte [rbx + 0x36]
0x00005b51      488b2b         mov rbp, qword [rbx]
0x00005b54      e8b7bfffff     call sym.imp.__errno_location           ; /src:120
0x00005b59      4989c5         mov r13, rax
0x00005b5c      8b00           mov eax, dword [rax]
0x00005b5e      4584ff         test r15b, r15b
0x00005b61      89433c         mov dword [rbx + 0x3c], eax
0x00005b64      0f844f020000   je 0x5db9
0x00005b6a      45397500       cmp dword [r13], r14d
0x00005b6e      7431           je 0x5ba1
0x00005b70      4889ef         mov rdi, rbp
0x00005b73      e868eeffff     call sym.pretty_name.isra.7
0x00005b78      be03000000     mov esi, 3
0x00005b7d      4889c2         mov rdx, rax
0x00005b80      31ff           xor edi, edi
0x00005b82      e899400000     call sym.quotearg_n_style_colon
0x00005b87      418b7500       mov esi, dword [r13]
0x00005b8b      488d153a6e00.  lea rdx, [0x0000c9cc]                   ; "%s"
0x00005b92      4889c1         mov rcx, rax
0x00005b95      31ff           xor edi, edi
0x00005b97      31c0           xor eax, eax
0x00005b99      e8c2c2ffff     call sym.imp.error                      ; /src:165
0x00005b9e      488b2b         mov rbp, qword [rbx]
0x00005ba1      4889ef         mov rdi, rbp
0x00005ba4      e837eeffff     call sym.pretty_name.isra.7
0x00005ba9      4489e7         mov edi, r12d
0x00005bac      4889c6         mov rsi, rax
0x00005baf      e86ceeffff     call sym.close_fd
0x00005bb4      488b3b         mov rdi, qword [rbx]                    ; /src:-549
0x00005bb7      e824eeffff     call sym.pretty_name.isra.7
0x00005bbc      8b7b38         mov edi, dword [rbx + 0x38]             ; /src:-544
0x00005bbf      4889c6         mov rsi, rax
0x00005bc2      e859eeffff     call sym.close_fd
0x00005bc7      c74338ffffff.  mov dword [rbx + 0x38], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00005bce      488b8424a800.  mov rax, qword [rsp + 0xa8]
0x00005bd6      644833042528.  xor rax, qword fs:[0x28]
0x00005bdf      0f85d1040000   jne 0x60b6
0x00005be5      4881c4b80000.  add rsp, 0xb8
0x00005bec      5b             pop rbx
0x00005bed      5d             pop rbp
0x00005bee      415c           pop r12
0x00005bf0      415d           pop r13
0x00005bf2      415e           pop r14                                 ; /src:166
0x00005bf4      415f           pop r15
0x00005bf6      c3             ret
0x00005bf7      660f1f840000.  nop word [rax + rax]
0x00005c00      4489f0         mov eax, r14d
0x00005c03      4531e4         xor r12d, r12d
0x00005c06      e9fffeffff     jmp 0x5b0a                              ; /src:168
0x00005c0b      0f1f440000     nop dword [rax + rax]
0x00005c10      4183fcff       cmp r12d, 0xffffffff
0x00005c14      0f8486010000   je 0x5da0                               ; /src:47
0x00005c1a      84c0           test al, al
0x00005c1c      c6433601       mov byte [rbx + 0x36], 1
0x00005c20      4c8d442410     lea r8, [rsp + 0x10]
0x00005c25      0f8455030000   je 0x5f80
0x00005c2b      4c89c2         mov rdx, r8                             ; /src:68
0x00005c2e      4489e6         mov esi, r12d
0x00005c31      bf01000000     mov edi, 1
0x00005c36      e8c5c1ffff     call sym.imp.__fxstat                   ; /src:74
0x00005c3b      85c0           test eax, eax
0x00005c3d      0f8809ffffff   js 0x5b4c
0x00005c43      8b542428       mov edx, dword [rsp + 0x28]
0x00005c47      89d0           mov eax, edx
0x00005c49      2500f00000     and eax, 0xf000
0x00005c4e      2d00100000     sub eax, 0x1000
0x00005c53      a900e0ffff     test eax, 0xffffe000
0x00005c58      7456           je 0x5cb0
0x00005c5a      81e200b00000   and edx, 0xb000
0x00005c60      81fa00800000   cmp edx, 0x8000
0x00005c66      7448           je 0x5cb0
0x00005c68      4584ff         test r15b, r15b
0x00005c6b      c7433cffffff.  mov dword [rbx + 0x3c], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00005c72      c6433600       mov byte [rbx + 0x36], 0
0x00005c76      0f84f4010000   je 0x5e70
0x00005c7c      833d9da32000.  cmp dword [obj.follow_mode], 1          ; [0x210020:4]=2
0x00005c83      0f85e7010000   jne 0x5e70
0x00005c89      807c240700     cmp byte [rsp + 7], 0
0x00005c8e      c6433400       mov byte [rbx + 0x34], 0
0x00005c92      488b2b         mov rbp, qword [rbx]                    ; /src:99
0x00005c95      0f843f040000   je 0x60da
0x00005c9b      4c8d2d5f7300.  lea r13, [0x0000d001]
0x00005ca2      e9f3010000     jmp 0x5e9a
0x00005ca7      660f1f840000.  nop word [rax + rax]
0x00005cb0      488b3b         mov rdi, qword [rbx]
0x00005cb3      e828edffff     call sym.pretty_name.isra.7
0x00005cb8      4489e7         mov edi, r12d
0x00005cbb      4889c6         mov rsi, rax
0x00005cbe      e8ddf6ffff     call sym.fremote
0x00005cc3      84c0           test al, al
0x00005cc5      884335         mov byte [rbx + 0x35], al
0x00005cc8      0f8542010000   jne 0x5e10
0x00005cce      4183e6fd       and r14d, 0xfffffffd                    ; 4294967293
0x00005cd2      c7433c000000.  mov dword [rbx + 0x3c], 0               ; /src:102
0x00005cd9      8b4338         mov eax, dword [rbx + 0x38]
0x00005cdc      0f84de020000   je 0x5fc0
0x00005ce2      83f8ff         cmp eax, 0xffffffff                     ; /src:91
0x00005ce5      0f8505040000   jne 0x60f0
0x00005ceb      488b3b         mov rdi, qword [rbx]
0x00005cee      e8edecffff     call sym.pretty_name.isra.7
0x00005cf3      bf04000000     mov edi, 4                              ; /src:92
0x00005cf8      4889c6         mov rsi, rax
0x00005cfb      e8203e0000     call sym.quotearg_style
0x00005d00      488d350c5a00.  lea rsi, str.s_has_become_accessible    ; 0xb713 ; "%s has become accessible"
0x00005d07      4989c6         mov r14, rax
0x00005d0a      ba05000000     mov edx, 5
0x00005d0f      31ff           xor edi, edi
0x00005d11      e8babeffff     call sym.imp.dcgettext
0x00005d16      4c89f1         mov rcx, r14
0x00005d19      4889c2         mov rdx, rax
0x00005d1c      31f6           xor esi, esi
0x00005d1e      31ff           xor edi, edi
0x00005d20      31c0           xor eax, eax
0x00005d22      e839c1ffff     call sym.imp.error
0x00005d27      85ed           test ebp, ebp
0x00005d29      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005d2e      450fb6ed       movzx r13d, r13b
0x00005d32      440f44e8       cmove r13d, eax
0x00005d36      488b442468     mov rax, qword [rsp + 0x68]
0x00005d3b      488b3b         mov rdi, qword [rbx]
0x00005d3e      44896338       mov dword [rbx + 0x38], r12d
0x00005d42      48c743080000.  mov qword [rbx + 8], 0
0x00005d4a      44896b40       mov dword [rbx + 0x40], r13d
0x00005d4e      48c743580000.  mov qword [rbx + 0x58], 0
0x00005d56      48894310       mov qword [rbx + 0x10], rax
0x00005d5a      488b442470     mov rax, qword [rsp + 0x70]             ; ../coreutils-8.31/src/il.c:-490
0x00005d5f      c6433400       mov byte [rbx + 0x34], 0
0x00005d63      48894318       mov qword [rbx + 0x18], rax
0x00005d67      488b442410     mov rax, qword [rsp + 0x10]
0x00005d6c      48894320       mov qword [rbx + 0x20], rax
0x00005d70      488b442418     mov rax, qword [rsp + 0x18]
0x00005d75      48894328       mov qword [rbx + 0x28], rax
0x00005d79      8b442428       mov eax, dword [rsp + 0x28]
0x00005d7d      894330         mov dword [rbx + 0x30], eax
0x00005d80      e85becffff     call sym.pretty_name.isra.7
0x00005d85      31d2           xor edx, edx
0x00005d87      4889c1         mov rcx, rax
0x00005d8a      31f6           xor esi, esi
0x00005d8c      4489e7         mov edi, r12d
0x00005d8f      e80cf1ffff     call sym.xlseek
0x00005d94      e935feffff     jmp 0x5bce
0x00005d99      0f1f80000000.  nop dword [rax]                         ; /src:59
0x00005da0      84c0           test al, al
0x00005da2      c6433600       mov byte [rbx + 0x36], 0
0x00005da6      488b2b         mov rbp, qword [rbx]
0x00005da9      0f84a9020000   je 0x6058
0x00005daf      e85cbdffff     call sym.imp.__errno_location
0x00005db4      8b00           mov eax, dword [rax]
0x00005db6      89433c         mov dword [rbx + 0x3c], eax
0x00005db9      807c240700     cmp byte [rsp + 7], 0
0x00005dbe      0f84ddfdffff   je 0x5ba1
0x00005dc4      4889ef         mov rdi, rbp
0x00005dc7      e814ecffff     call sym.pretty_name.isra.7
0x00005dcc      bf04000000     mov edi, 4
0x00005dd1      4889c6         mov rsi, rax
0x00005dd4      e8473d0000     call sym.quotearg_style
0x00005dd9      488d35f35800.  lea rsi, str.s_has_become_inaccessible  ; 0xb6d3 ; "%s has become inaccessible"
0x00005de0      ba05000000     mov edx, 5
0x00005de5      31ff           xor edi, edi
0x00005de7      4889c5         mov rbp, rax
0x00005dea      e8e1bdffff     call sym.imp.dcgettext
0x00005def      8b733c         mov esi, dword [rbx + 0x3c]
0x00005df2      4889e9         mov rcx, rbp                            ; ../coreutils-8.31/src/il.c:-490
0x00005df5      4889c2         mov rdx, rax
0x00005df8      31ff           xor edi, edi
0x00005dfa      31c0           xor eax, eax
0x00005dfc      e85fc0ffff     call sym.imp.error
0x00005e01      488b2b         mov rbp, qword [rbx]
0x00005e04      e998fdffff     jmp 0x5ba1
0x00005e09      0f1f80000000.  nop dword [rax]
0x00005e10      803df5a22000.  cmp byte [obj.disable_inotify], 0       ; [0x21010c:1]=0
0x00005e17      0f85b1feffff   jne 0x5cce
0x00005e1d      488b3b         mov rdi, qword [rbx]
0x00005e20      c7433cffffff.  mov dword [rbx + 0x3c], 0xffffffff      ; /src:8 ; [0xffffffff:4]=-1 ; -1
0x00005e27      e8b4ebffff     call sym.pretty_name.isra.7
0x00005e2c      bf04000000     mov edi, 4
0x00005e31      4889c6         mov rsi, rax
0x00005e34      e8e73c0000     call sym.quotearg_style
0x00005e39      488d35b05c00.  lea rsi, str.s_has_been_replaced_with_an_untailable_remote_file ; 0xbaf0 ; "%s has been replaced with an untailable remote file"
0x00005e40      4889c5         mov rbp, rax
0x00005e43      ba05000000     mov edx, 5
0x00005e48      31ff           xor edi, edi
0x00005e4a      e881bdffff     call sym.imp.dcgettext
0x00005e4f      4889e9         mov rcx, rbp
0x00005e52      4889c2         mov rdx, rax
0x00005e55      31f6           xor esi, esi
0x00005e57      31ff           xor edi, edi
0x00005e59      31c0           xor eax, eax
0x00005e5b      e800c0ffff     call sym.imp.error
0x00005e60      c6433401       mov byte [rbx + 0x34], 1
0x00005e64      c6433501       mov byte [rbx + 0x35], 1
0x00005e68      488b2b         mov rbp, qword [rbx]
0x00005e6b      e931fdffff     jmp 0x5ba1
0x00005e70      807c240700     cmp byte [rsp + 7], 0                   ; /src:15
0x00005e75      c6433401       mov byte [rbx + 0x34], 1
0x00005e79      7506           jne 0x5e81
0x00005e7b      4183feff       cmp r14d, 0xffffffff
0x00005e7f      7458           je 0x5ed9
0x00005e81      488d35665800.  lea rsi, str.giving_up_on_this_name     ; 0xb6ee ; "; giving up on this name"
0x00005e88      ba05000000     mov edx, 5
0x00005e8d      31ff           xor edi, edi                            ; /src:19
0x00005e8f      e83cbdffff     call sym.imp.dcgettext
0x00005e94      488b2b         mov rbp, qword [rbx]
0x00005e97      4989c5         mov r13, rax
0x00005e9a      4889ef         mov rdi, rbp
0x00005e9d      e83eebffff     call sym.pretty_name.isra.7
0x00005ea2      bf04000000     mov edi, 4
0x00005ea7      4889c6         mov rsi, rax
0x00005eaa      e8713c0000     call sym.quotearg_style
0x00005eaf      488d350a5c00.  lea rsi, str.s_has_been_replaced_with_an_untailable_file_s ; 0xbac0 ; "%s has been replaced with an untailable file%s"
0x00005eb6      4889c5         mov rbp, rax
0x00005eb9      ba05000000     mov edx, 5
0x00005ebe      31ff           xor edi, edi                            ; /src:-79
0x00005ec0      e80bbdffff     call sym.imp.dcgettext
0x00005ec5      4d89e8         mov r8, r13
0x00005ec8      4889c2         mov rdx, rax
0x00005ecb      4889e9         mov rcx, rbp
0x00005ece      31f6           xor esi, esi
0x00005ed0      31ff           xor edi, edi
0x00005ed2      31c0           xor eax, eax
0x00005ed4      e887bfffff     call sym.imp.error
0x00005ed9      488b2b         mov rbp, qword [rbx]
0x00005edc      e9c0fcffff     jmp 0x5ba1
0x00005ee1      0f1f80000000.  nop dword [rax]
0x00005ee8      4c8d442410     lea r8, [rsp + 0x10]
0x00005eed      488b33         mov rsi, qword [rbx]
0x00005ef0      bf01000000     mov edi, 1
0x00005ef5      4c89c2         mov rdx, r8
0x00005ef8      e803bdffff     call sym.imp.__lxstat
0x00005efd      85c0           test eax, eax
0x00005eff      0f853dfcffff   jne 0x5b42
0x00005f05      8b442428       mov eax, dword [rsp + 0x28]
0x00005f09      2500f00000     and eax, 0xf000
0x00005f0e      3d00a00000     cmp eax, 0xa000
0x00005f13      0f8529fcffff   jne 0x5b42
0x00005f19      488b3b         mov rdi, qword [rbx]
0x00005f1c      c7433cffffff.  mov dword [rbx + 0x3c], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00005f23      c6433401       mov byte [rbx + 0x34], 1
0x00005f27      e8b4eaffff     call sym.pretty_name.isra.7
0x00005f2c      bf04000000     mov edi, 4
0x00005f31      4889c6         mov rsi, rax
0x00005f34      e8e73b0000     call sym.quotearg_style
0x00005f39      488d35485b00.  lea rsi, str.s_has_been_replaced_with_an_untailable_symbolic_link ; 0xba88 ; "%s has been replaced with an untailable symbolic link"
0x00005f40      4889c5         mov rbp, rax
0x00005f43      ba05000000     mov edx, 5
0x00005f48      31ff           xor edi, edi
0x00005f4a      e881bcffff     call sym.imp.dcgettext                  ; /src:-942
0x00005f4f      4889e9         mov rcx, rbp                            ; /src:-944
0x00005f52      4889c2         mov rdx, rax
0x00005f55      31f6           xor esi, esi
0x00005f57      31ff           xor edi, edi
0x00005f59      31c0           xor eax, eax
0x00005f5b      e800bfffff     call sym.imp.error
0x00005f60      488b2b         mov rbp, qword [rbx]
0x00005f63      e939fcffff     jmp 0x5ba1
0x00005f68      0f1f84000000.  nop dword [rax + rax]
0x00005f70      4c8d442410     lea r8, [rsp + 0x10]
0x00005f75      e9b1fcffff     jmp 0x5c2b                              ; /src:-942
0x00005f7a      660f1f440000   nop word [rax + rax]
0x00005f80      488b33         mov rsi, qword [rbx]
0x00005f83      4c89c2         mov rdx, r8                             ; .//ib:-1107
0x00005f86      bf01000000     mov edi, 1
0x00005f8b      4c89442408     mov qword [rsp + 8], r8
0x00005f90      e86bbcffff     call sym.imp.__lxstat
0x00005f95      85c0           test eax, eax
0x00005f97      4c8b442408     mov r8, qword [rsp + 8]
0x00005f9c      0f8589fcffff   jne 0x5c2b                              ; /src:-869
0x00005fa2      8b442428       mov eax, dword [rsp + 0x28]
0x00005fa6      2500f00000     and eax, 0xf000
0x00005fab      3d00a00000     cmp eax, 0xa000
0x00005fb0      0f8575fcffff   jne 0x5c2b
0x00005fb6      e95effffff     jmp 0x5f19
0x00005fbb      0f1f440000     nop dword [rax + rax]
0x00005fc0      83f8ff         cmp eax, 0xffffffff
0x00005fc3      488b3b         mov rdi, qword [rbx]                    ; /src:-935
0x00005fc6      0f84c4000000   je 0x6090
0x00005fcc      488b442418     mov rax, qword [rsp + 0x18]
0x00005fd1      48394328       cmp qword [rbx + 0x28], rax
0x00005fd5      7529           jne 0x6000
0x00005fd7      488b442410     mov rax, qword [rsp + 0x10]
0x00005fdc      48394320       cmp qword [rbx + 0x20], rax
0x00005fe0      751e           jne 0x6000
0x00005fe2      e8f9e9ffff     call sym.pretty_name.isra.7
0x00005fe7      4489e7         mov edi, r12d
0x00005fea      4889c6         mov rsi, rax                            ; ../coreutils-8.31/lib/timespec.h:-624
0x00005fed      e82eeaffff     call sym.close_fd
0x00005ff2      e9d7fbffff     jmp 0x5bce
0x00005ff7      660f1f840000.  nop word [rax + rax]
0x00006000      e8dbe9ffff     call sym.pretty_name.isra.7
0x00006005      bf04000000     mov edi, 4
0x0000600a      4889c6         mov rsi, rax
0x0000600d      e80e3b0000     call sym.quotearg_style
0x00006012      488d35375b00.  lea rsi, str.s_has_been_replaced___following_new_file ; 0xbb50 ; "%s has been replaced;  following new file"
0x00006019      4989c6         mov r14, rax
0x0000601c      31ff           xor edi, edi
0x0000601e      ba05000000     mov edx, 5
0x00006023      e8a8bbffff     call sym.imp.dcgettext
0x00006028      31f6           xor esi, esi
0x0000602a      4889c2         mov rdx, rax
0x0000602d      4c89f1         mov rcx, r14
0x00006030      31ff           xor edi, edi
0x00006032      31c0           xor eax, eax
0x00006034      e827beffff     call sym.imp.error                      ; /src:-927
0x00006039      488b3b         mov rdi, qword [rbx]
0x0000603c      e89fe9ffff     call sym.pretty_name.isra.7
0x00006041      8b7b38         mov edi, dword [rbx + 0x38]
0x00006044      4889c6         mov rsi, rax
0x00006047      e8d4e9ffff     call sym.close_fd
0x0000604c      e9d6fcffff     jmp 0x5d27
0x00006051      0f1f80000000.  nop dword [rax]
0x00006058      488d542410     lea rdx, [rsp + 0x10]
0x0000605d      4889ee         mov rsi, rbp
0x00006060      bf01000000     mov edi, 1
0x00006065      e896bbffff     call sym.imp.__lxstat
0x0000606a      85c0           test eax, eax
0x0000606c      0f85dafaffff   jne 0x5b4c
0x00006072      8b442428       mov eax, dword [rsp + 0x28]
0x00006076      2500f00000     and eax, 0xf000
0x0000607b      3d00a00000     cmp eax, 0xa000
0x00006080      0f85c6faffff   jne 0x5b4c
0x00006086      e98efeffff     jmp 0x5f19
0x0000608b      0f1f440000     nop dword [rax + rax]
0x00006090      e84be9ffff     call sym.pretty_name.isra.7
0x00006095      bf04000000     mov edi, 4
0x0000609a      4889c6         mov rsi, rax
0x0000609d      e87e3a0000     call sym.quotearg_style
0x000060a2      ba05000000     mov edx, 5
0x000060a7      4989c6         mov r14, rax
0x000060aa      488d35775a00.  lea rsi, str.s_has_appeared___following_new_file ; /src:-904 ; 0xbb28 ; "%s has appeared;  following new file"
0x000060b1      e959fcffff     jmp 0x5d0f
0x000060b6      e855bbffff     call sym.imp.__stack_chk_fail
0x000060bb      488d0d7e6800.  lea rcx, obj.__PRETTY_FUNCTION__.7576   ; 0xc940 ; "recheck"
0x000060c2      488d35d95500.  lea rsi, str..._coreutils_8.31_src_tail.c ; 0xb6a2 ; "../coreutils-8.31/src/tail.c"
0x000060c9      488d3def5500.  lea rdi, str.valid_file_spec__f         ; 0xb6bf ; "valid_file_spec (f)"
0x000060d0      badf030000     mov edx, 0x3df
0x000060d5      e8d6bbffff     call sym.imp.__assert_fail
0x000060da      4183c601       add r14d, 1
0x000060de      4c8d2d1c6f00.  lea r13, [0x0000d001]
0x000060e5      0f85affdffff   jne 0x5e9a
0x000060eb      e9b1faffff     jmp 0x5ba1
0x000060f0      488d0d496800.  lea rcx, obj.__PRETTY_FUNCTION__.7576   ; 0xc940 ; "recheck"
0x000060f7      488d35a45500.  lea rsi, str..._coreutils_8.31_src_tail.c ; 0xb6a2 ; "../coreutils-8.31/src/tail.c"
0x000060fe      488d3d025600.  lea rdi, str.f__fd_____1                ; 0xb707 ; "f->fd == -1"
0x00006105      ba2c040000     mov edx, 0x42c
0x0000610a      e8a1bbffff     call sym.imp.__assert_fail
0x0000610f      90             nop
;-- usage:
0x00006110      4155           push r13
0x00006112      4154           push r12
0x00006114      ba05000000     mov edx, 5
0x00006119      55             push rbp                                ; /src:-889
0x0000611a      53             push rbx
0x0000611b      89fd           mov ebp, edi
0x0000611d      4881ec880000.  sub rsp, 0x88
0x00006124      488b1d05a020.  mov rbx, qword [obj.program_name]       ; [0x210130:8]=0
0x0000612b      64488b042528.  mov rax, qword fs:[0x28]
0x00006134      4889442478     mov qword [rsp + 0x78], rax
0x00006139      31c0           xor eax, eax
0x0000613b      85ff           test edi, edi
0x0000613d      742e           je 0x616d
0x0000613f      488d353a5a00.  lea rsi, str.Try___s___help__for_more_information. ; 0xbb80 ; "Try '%s --help' for more information.\n"
0x00006146      31ff           xor edi, edi
0x00006148      e883baffff     call sym.imp.dcgettext
0x0000614d      488b3dac9f20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x210100:8]=0
0x00006154      4889c2         mov rdx, rax
0x00006157      4889d9         mov rcx, rbx
0x0000615a      be01000000     mov esi, 1
0x0000615f      31c0           xor eax, eax
0x00006161      e87abdffff     call sym.imp.__fprintf_chk
0x00006166      89ef           mov edi, ebp
0x00006168      e853bdffff     call sym.imp.exit
0x0000616d      488d35345a00.  lea rsi, str.Usage:__s__OPTION_...__FILE_... ; 0xbba8 ; "Usage: %s [OPTION]... [FILE]...\n"
0x00006174      31ff           xor edi, edi
0x00006176      e855baffff     call sym.imp.dcgettext
0x0000617b      4889da         mov rdx, rbx
0x0000617e      4889c6         mov rsi, rax
0x00006181      bf01000000     mov edi, 1
0x00006186      31c0           xor eax, eax
0x00006188      e8c3bcffff     call sym.imp.__printf_chk               ; /src:-879
0x0000618d      488d353c5a00.  lea rsi, str.Print_the_last__d_lines_of_each_FILE_to_standard_output.__With_more_than_one_FILE__precede_each_with_a_header_giving_the_file_name. ; 0xbbd0 ; "Print the last %d lines of each FILE to standard output.\nWith more than one FILE, precede each with a header giving the file name.\n"
0x00006194      31ff           xor edi, edi
0x00006196      ba05000000     mov edx, 5
0x0000619b      e830baffff     call sym.imp.dcgettext
0x000061a0      ba0a000000     mov edx, 0xa
0x000061a5      4889c6         mov rsi, rax
0x000061a8      bf01000000     mov edi, 1
0x000061ad      31c0           xor eax, eax
0x000061af      e89cbcffff     call sym.imp.__printf_chk
0x000061b4      488b1d0d9f20.  mov rbx, qword [obj.stdout]             ; ../coreutils-8.31/lib/timespec.h:-571 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x000061bb      488d35965a00.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0xbc58 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x000061c2      ba05000000     mov edx, 5
0x000061c7      31ff           xor edi, edi
0x000061c9      e802baffff     call sym.imp.dcgettext
0x000061ce      4889de         mov rsi, rbx
0x000061d1      4889c7         mov rdi, rax
0x000061d4      e847bbffff     call sym.imp.fputs_unlocked             ; ../coreutils-8.31/lib/timespec.h:-560
0x000061d9      488b1de89e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x000061e0      488d35a95a00.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0xbc90 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x000061e7      ba05000000     mov edx, 5
0x000061ec      31ff           xor edi, edi
0x000061ee      e8ddb9ffff     call sym.imp.dcgettext
0x000061f3      4889de         mov rsi, rbx
0x000061f6      4889c7         mov rdi, rax
0x000061f9      e822bbffff     call sym.imp.fputs_unlocked
0x000061fe      488b1dc39e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x00006205      488d35d45a00.  lea rsi, str.c____bytes____NUM_______output_the_last_NUM_bytes__or_use__c__NUM_to_______________________________output_starting_with_byte_NUM_of_each_file ; 0xbce0 ; "  -c, --bytes=[+]NUM       output the last NUM bytes; or use -c +NUM to\n                             output starting with byte NUM of each file\n"
0x0000620c      ba05000000     mov edx, 5
0x00006211      31ff           xor edi, edi
0x00006213      e8b8b9ffff     call sym.imp.dcgettext
0x00006218      4889de         mov rsi, rbx
0x0000621b      4889c7         mov rdi, rax
0x0000621e      e8fdbaffff     call sym.imp.fputs_unlocked
0x00006223      488b1d9e9e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x0000622a      488d35475b00.  lea rsi, str.f____follow___name_descriptor_______________________________output_appended_data_as_the_file_grows________________________________an_absent_option_argument_means__descriptor______F_______________________same_as___follow_name___retry ; 0xbd78 ; "  -f, --follow[={name|descriptor}]\n                           output appended data as the file grows;\n                             an absent option argument means 'descriptor'\n  -F                       same as --follow=name --retry\n"
0x00006231      ba05000000     mov edx, 5
0x00006236      31ff           xor edi, edi
0x00006238      e893b9ffff     call sym.imp.dcgettext
0x0000623d      4889de         mov rsi, rbx
0x00006240      4889c7         mov rdi, rax
0x00006243      e8d8baffff     call sym.imp.fputs_unlocked
0x00006248      488d35195c00.  lea rsi, str.n____lines____NUM_______output_the_last_NUM_lines__instead_of_the_last__d________________________________or_use__n__NUM_to_output_starting_with_line_NUM__________max_unchanged_stats_N_____________________________with___follow_name__reopen_a_FILE_which_has_not_______________________________changed_size_after_N__default__d__iterations_______________________________to_see_if_it_has_been_unlinked_or_renamed________________________________this_is_the_usual_case_of_rotated_log_files_________________________________with_inotify__this_option_is_rarely_useful ; 0xbe68 ; "  -n, --lines=[+]NUM       output the last NUM lines, instead of the last %d;\n                             or use -n +NUM to output starting with line NUM\n      --max-unchanged-stats=N\n                           with --follow=name, reopen a FILE which has not\n                             changed size after N (default %d) iterations\n                             to see if it has been unlinked or renamed\n                             (this is the usual case of rotated log files);\n                             with inotify, this option is rarely useful\n"
0x0000624f      31ff           xor edi, edi
0x00006251      ba05000000     mov edx, 5
0x00006256      e875b9ffff     call sym.imp.dcgettext
0x0000625b      b905000000     mov ecx, 5
0x00006260      4889c6         mov rsi, rax
0x00006263      ba0a000000     mov edx, 0xa
0x00006268      bf01000000     mov edi, 1
0x0000626d      31c0           xor eax, eax
0x0000626f      e8dcbbffff     call sym.imp.__printf_chk
0x00006274      488b1d4d9e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x0000627b      488d35165e00.  lea rsi, str.pid_PID____________with__f__terminate_after_process_ID__PID_dies_____q____quiet____silent____never_output_headers_giving_file_names__________retry______________keep_trying_to_open_a_file_if_it_is_inaccessible ; 0xc098 ; "      --pid=PID            with -f, terminate after process ID, PID dies\n  -q, --quiet, --silent    never output headers giving file names\n      --retry              keep trying to open a file if it is inaccessible\n"
0x00006282      ba05000000     mov edx, 5
0x00006287      31ff           xor edi, edi
0x00006289      e842b9ffff     call sym.imp.dcgettext
0x0000628e      4889de         mov rsi, rbx
0x00006291      4889c7         mov rdi, rax
0x00006294      e887baffff     call sym.imp.fputs_unlocked
0x00006299      488b1d289e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x000062a0      488d35c95e00.  lea rsi, str.s____sleep_interval_N___with__f__sleep_for_approximately_N_seconds________________________________default_1.0__between_iterations________________________________with_inotify_and___pid_P__check_process_P_at_______________________________least_once_every_N_seconds_____v____verbose____________always_output_headers_giving_file_names ; 0xc170 ; "  -s, --sleep-interval=N   with -f, sleep for approximately N seconds\n                             (default 1.0) between iterations;\n                             with inotify and --pid=P, check process P at\n                             least once every N seconds\n  -v, --verbose            always output headers giving file names\n"
0x000062a7      ba05000000     mov edx, 5
0x000062ac      31ff           xor edi, edi
0x000062ae      e81db9ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/lib/timespec.h:-547
0x000062b3      4889de         mov rsi, rbx
0x000062b6      4889c7         mov rdi, rax
0x000062b9      e862baffff     call sym.imp.fputs_unlocked
0x000062be      488b1d039e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x000062c5      488d35f45f00.  lea rsi, str.z____zero_terminated____line_delimiter_is_NUL__not_newline ; 0xc2c0 ; "  -z, --zero-terminated    line delimiter is NUL, not newline\n"
0x000062cc      ba05000000     mov edx, 5
0x000062d1      31ff           xor edi, edi
0x000062d3      e8f8b8ffff     call sym.imp.dcgettext
0x000062d8      4889de         mov rsi, rbx
0x000062db      4889c7         mov rdi, rax
0x000062de      e83dbaffff     call sym.imp.fputs_unlocked
0x000062e3      488b1dde9d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x000062ea      488d350f6000.  lea rsi, str.help_____display_this_help_and_exit ; 0xc300 ; "      --help     display this help and exit\n"
0x000062f1      ba05000000     mov edx, 5
0x000062f6      31ff           xor edi, edi
0x000062f8      e8d3b8ffff     call sym.imp.dcgettext
0x000062fd      4889de         mov rsi, rbx
0x00006300      4889c7         mov rdi, rax
0x00006303      e818baffff     call sym.imp.fputs_unlocked
0x00006308      488b1db99d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x0000630f      488d351a6000.  lea rsi, str.version__output_version_information_and_exit ; 0xc330 ; "      --version  output version information and exit\n"
0x00006316      ba05000000     mov edx, 5
0x0000631b      31ff           xor edi, edi
0x0000631d      e8aeb8ffff     call sym.imp.dcgettext
0x00006322      4889de         mov rsi, rbx
0x00006325      4889c7         mov rdi, rax
0x00006328      e8f3b9ffff     call sym.imp.fputs_unlocked
0x0000632d      488b1d949d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x00006334      488d352d6000.  lea rsi, str.NUM_may_have_a_multiplier_suffix:__b_512__kB_1000__K_1024__MB_1000_1000__M_1024_1024___GB_1000_1000_1000__G_1024_1024_1024__and_so_on_for_T__P__E__Z__Y.__Binary_prefixes_can_be_used__too:_KiB_K__MiB_M__and_so_on. ; 0xc368 ; "\nNUM may have a multiplier suffix:\nb 512, kB 1000, K 1024, MB 1000*1000, M 1024*1024,\nGB 1000*1000*1000, G 1024*1024*1024, and so on for T, P, E, Z, Y.\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\n\n"
0x0000633b      ba05000000     mov edx, 5
0x00006340      31ff           xor edi, edi
0x00006342      e889b8ffff     call sym.imp.dcgettext
0x00006347      4889de         mov rsi, rbx
0x0000634a      4889c7         mov rdi, rax
0x0000634d      e8ceb9ffff     call sym.imp.fputs_unlocked
0x00006352      488b1d6f9d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x00006359      488d35e06000.  lea rsi, str.With___follow___f___tail_defaults_to_following_the_file_descriptor__which__means_that_even_if_a_tail_ed_file_is_renamed__tail_will_continue_to_track__its_end.__This_default_behavior_is_not_desirable_when_you_really_want_to__track_the_actual_name_of_the_file__not_the_file_descriptor__e.g.__log__rotation_.__Use___follow_name_in_that_case.__That_causes_tail_to_track_the__named_file_in_a_way_that_accommodates_renaming__removal_and_creation. ; 0xc440 ; "With --follow (-f), tail defaults to following the file descriptor, which\nmeans that even if a tail'ed file is renamed, tail will continue to track\nits end.  This default behavior is not desirable when you really want to\ntrack the actual name of the file, not the file descriptor (e.g., log\nrotation).  Use --follow=name in that case.  That causes tail to track the\nnamed file in a way that accommodates renaming, removal and creation.\n"
0x00006360      ba05000000     mov edx, 5
0x00006365      31ff           xor edi, edi
0x00006367      e864b8ffff     call sym.imp.dcgettext
0x0000636c      4889de         mov rsi, rbx
0x0000636f      4889c7         mov rdi, rax
0x00006372      488d1db35300.  lea rbx, str.tail                       ; 0xb72c ; "tail"
0x00006379      e8a2b9ffff     call sym.imp.fputs_unlocked
0x0000637e      488d05ac5300.  lea rax, [0x0000b731]                   ; "["
0x00006385      488d0de65300.  lea rcx, str.sha256sum                  ; 0xb772 ; "sha256sum"
0x0000638c      48c744246000.  mov qword [rsp + 0x60], 0               ; ../coreutils-8.31/lib/timespec.h:-538
0x00006395      48c744246800.  mov qword [rsp + 0x68], 0
0x0000639e      4889e2         mov rdx, rsp
0x000063a1      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/timespec.h:-536
0x000063a5      488d05875300.  lea rax, str.test_invocation            ; 0xb733 ; "test invocation"
0x000063ac      48894c2430     mov qword [rsp + 0x30], rcx
0x000063b1      488d0dc45300.  lea rcx, str.sha384sum                  ; 0xb77c ; "sha384sum"
0x000063b8      4889442408     mov qword [rsp + 8], rax
0x000063bd      488d05e75300.  lea rax, [0x0000b7ab]                   ; "coreutils"
0x000063c4      48894c2440     mov qword [rsp + 0x40], rcx
0x000063c9      488d0db65300.  lea rcx, str.sha512sum                  ; 0xb786 ; "sha512sum"
0x000063d0      4889442410     mov qword [rsp + 0x10], rax
0x000063d5      488d05675300.  lea rax, str.Multi_call_invocation      ; 0xb743 ; "Multi-call invocation"
0x000063dc      48894c2450     mov qword [rsp + 0x50], rcx
0x000063e1      4889442418     mov qword [rsp + 0x18], rax
0x000063e6      488d056c5300.  lea rax, str.sha224sum                  ; 0xb759 ; "sha224sum"
0x000063ed      4889442420     mov qword [rsp + 0x20], rax
0x000063f2      488d056a5300.  lea rax, str.sha2_utilities             ; 0xb763 ; "sha2 utilities"
0x000063f9      4889442428     mov qword [rsp + 0x28], rax
0x000063fe      4889442438     mov qword [rsp + 0x38], rax
0x00006403      4889442448     mov qword [rsp + 0x48], rax
0x00006408      4889442458     mov qword [rsp + 0x58], rax
0x0000640d      0f1f00         nop dword [rax]
0x00006410      4883c210       add rdx, 0x10
0x00006414      488b3a         mov rdi, qword [rdx]
0x00006417      4885ff         test rdi, rdi
0x0000641a      7413           je 0x642f
0x0000641c      b905000000     mov ecx, 5
0x00006421      4889de         mov rsi, rbx
0x00006424      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006426      0f97c0         seta al
0x00006429      1c00           sbb al, 0
0x0000642b      84c0           test al, al
0x0000642d      75e1           jne 0x6410
0x0000642f      4c8b6208       mov r12, qword [rdx + 8]
0x00006433      31ff           xor edi, edi
0x00006435      ba05000000     mov edx, 5
0x0000643a      488d354f5300.  lea rsi, str.s_online_help:___s         ; 0xb790 ; "\n%s online help: <%s>\n"
0x00006441      4d85e4         test r12, r12
0x00006444      0f84c1000000   je 0x650b
0x0000644a      e881b7ffff     call sym.imp.dcgettext
0x0000644f      488d0da26100.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xc5f8 ; "https://www.gnu.org/software/coreutils/"
0x00006456      488d154a5300.  lea rdx, str.GNU_coreutils              ; 0xb7a7 ; "GNU coreutils"
0x0000645d      4889c6         mov rsi, rax
0x00006460      bf01000000     mov edi, 1
0x00006465      31c0           xor eax, eax
0x00006467      e8e4b9ffff     call sym.imp.__printf_chk
0x0000646c      31f6           xor esi, esi
0x0000646e      bf05000000     mov edi, 5
0x00006473      e8c8b9ffff     call sym.imp.setlocale
0x00006478      4885c0         test rax, rax
0x0000647b      741c           je 0x6499
0x0000647d      488d35315300.  lea rsi, [0x0000b7b5]                   ; "en_"
0x00006484      ba03000000     mov edx, 3
0x00006489      4889c7         mov rdi, rax
0x0000648c      e88fb6ffff     call sym.imp.strncmp
0x00006491      85c0           test eax, eax
0x00006493      0f8507010000   jne 0x65a0
0x00006499      488d35195300.  lea rsi, str.Full_documentation___s_s   ; 0xb7b9 ; "Full documentation <%s%s>\n"
0x000064a0      31ff           xor edi, edi
0x000064a2      ba05000000     mov edx, 5
0x000064a7      e824b7ffff     call sym.imp.dcgettext
0x000064ac      488d0d795200.  lea rcx, str.tail                       ; 0xb72c ; "tail"
0x000064b3      488d153e6100.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xc5f8 ; "https://www.gnu.org/software/coreutils/"
0x000064ba      4889c6         mov rsi, rax
0x000064bd      bf01000000     mov edi, 1
0x000064c2      31c0           xor eax, eax
0x000064c4      e887b9ffff     call sym.imp.__printf_chk
0x000064c9      4939dc         cmp r12, rbx
0x000064cc      488d0d7a5200.  lea rcx, [0x0000b74d]                   ; " invocation"
0x000064d3      488d1d276b00.  lea rbx, [0x0000d001]
0x000064da      480f44d9       cmove rbx, rcx
0x000064de      488d35836100.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0xc668 ; "or available locally via: info '(coreutils) %s%s'\n"
0x000064e5      31ff           xor edi, edi
0x000064e7      ba05000000     mov edx, 5
0x000064ec      e8dfb6ffff     call sym.imp.dcgettext
0x000064f1      4889d9         mov rcx, rbx
0x000064f4      4889c6         mov rsi, rax
0x000064f7      4c89e2         mov rdx, r12
0x000064fa      bf01000000     mov edi, 1
0x000064ff      31c0           xor eax, eax
0x00006501      e84ab9ffff     call sym.imp.__printf_chk
0x00006506      e95bfcffff     jmp 0x6166
0x0000650b      e8c0b6ffff     call sym.imp.dcgettext
0x00006510      488d0de16000.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xc5f8 ; "https://www.gnu.org/software/coreutils/"
0x00006517      488d15895200.  lea rdx, str.GNU_coreutils              ; 0xb7a7 ; "GNU coreutils"
0x0000651e      4889c6         mov rsi, rax
0x00006521      bf01000000     mov edi, 1
0x00006526      31c0           xor eax, eax
0x00006528      e823b9ffff     call sym.imp.__printf_chk
0x0000652d      31f6           xor esi, esi
0x0000652f      bf05000000     mov edi, 5
0x00006534      e807b9ffff     call sym.imp.setlocale
0x00006539      4885c0         test rax, rax
0x0000653c      7418           je 0x6556
0x0000653e      488d35705200.  lea rsi, [0x0000b7b5]                   ; "en_"
0x00006545      ba03000000     mov edx, 3
0x0000654a      4889c7         mov rdi, rax
0x0000654d      e8ceb5ffff     call sym.imp.strncmp
0x00006552      85c0           test eax, eax
0x00006554      7543           jne 0x6599
0x00006556      488d355c5200.  lea rsi, str.Full_documentation___s_s   ; 0xb7b9 ; "Full documentation <%s%s>\n"
0x0000655d      ba05000000     mov edx, 5
0x00006562      31ff           xor edi, edi
0x00006564      4c8d25c15100.  lea r12, str.tail                       ; 0xb72c ; "tail"
0x0000656b      488d1ddb5100.  lea rbx, [0x0000b74d]                   ; " invocation"
0x00006572      e859b6ffff     call sym.imp.dcgettext
0x00006577      488d0dae5100.  lea rcx, str.tail                       ; 0xb72c ; "tail"
0x0000657e      488d15736000.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xc5f8 ; "https://www.gnu.org/software/coreutils/"
0x00006585      4889c6         mov rsi, rax
0x00006588      bf01000000     mov edi, 1
0x0000658d      31c0           xor eax, eax
0x0000658f      e8bcb8ffff     call sym.imp.__printf_chk
0x00006594      e945ffffff     jmp 0x64de
0x00006599      4c8d258c5100.  lea r12, str.tail                       ; 0xb72c ; "tail"
0x000065a0      4c8b2d219b20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x000065a7      488d35726000.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0xc620 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000065ae      31ff           xor edi, edi
0x000065b0      ba05000000     mov edx, 5
0x000065b5      e816b6ffff     call sym.imp.dcgettext
0x000065ba      4c89ee         mov rsi, r13
0x000065bd      4889c7         mov rdi, rax
0x000065c0      e85bb7ffff     call sym.imp.fputs_unlocked
0x000065c5      e9cffeffff     jmp 0x6499
0x000065ca      660f1f440000   nop word [rax + rax]
;-- __argmatch_die:
0x000065d0      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/argmatch.c:63
0x000065d5      e936fbffff     jmp sym.usage
0x000065da      660f1f440000   nop word [rax + rax]
;-- argmatch:
0x000065e0      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:86
0x000065e2      4156           push r14
0x000065e4      4989f7         mov r15, rsi
0x000065e7      4155           push r13
0x000065e9      4154           push r12
0x000065eb      4989cd         mov r13, rcx
0x000065ee      55             push rbp
0x000065ef      53             push rbx
0x000065f0      4889d5         mov rbp, rdx
0x000065f3      4883ec28       sub rsp, 0x28
0x000065f7      48897c2408     mov qword [rsp + 8], rdi
0x000065fc      4889542418     mov qword [rsp + 0x18], rdx
0x00006601      e8eab5ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/argmatch.c:92
0x00006606      4d8b37         mov r14, qword [r15]                    ; ../coreutils-8.31/lib/argmatch.c:95
0x00006609      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:89
0x00006611      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/argmatch.c:95
0x00006614      0f84b3000000   je 0x66cd
0x0000661a      4989c4         mov r12, rax
0x0000661d      c644241700     mov byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:90
0x00006622      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:95
0x00006624      eb51           jmp 0x6677
0x00006626      662e0f1f8400.  nop word cs:[rax + rax]
0x00006630      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/argmatch.c:108
0x00006635      4885c0         test rax, rax
0x00006638      0f84a2000000   je 0x66e0
0x0000663e      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:109
0x00006642      4c89ea         mov rdx, r13
0x00006645      4889ee         mov rsi, rbp
0x00006648      490faffd       imul rdi, r13
0x0000664c      4801c7         add rdi, rax
0x0000664f      e8bcb6ffff     call sym.imp.memcmp
0x00006654      85c0           test eax, eax                           ; ../coreutils-8.31/lib/argmatch.c:114
0x00006656      0fb6442417     movzx eax, byte [rsp + 0x17]
0x0000665b      b901000000     mov ecx, 1
0x00006660      0f45c1         cmovne eax, ecx
0x00006663      88442417       mov byte [rsp + 0x17], al
0x00006667      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x0000666b      4c01ed         add rbp, r13
0x0000666e      4d8b34df       mov r14, qword [r15 + rbx*8]
0x00006672      4d85f6         test r14, r14
0x00006675      7441           je 0x66b8
0x00006677      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/argmatch.c:97
0x0000667c      4c89e2         mov rdx, r12
0x0000667f      4c89f7         mov rdi, r14
0x00006682      e899b4ffff     call sym.imp.strncmp
0x00006687      85c0           test eax, eax
0x00006689      75dc           jne 0x6667
0x0000668b      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/argmatch.c:99
0x0000668e      e85db5ffff     call sym.imp.strlen
0x00006693      4c39e0         cmp rax, r12
0x00006696      7458           je 0x66f0
0x00006698      48833c24ff     cmp qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:102
0x0000669d      7591           jne 0x6630
0x0000669f      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:104
0x000066a3      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x000066a7      4c01ed         add rbp, r13
0x000066aa      4d8b34df       mov r14, qword [r15 + rbx*8]
0x000066ae      4d85f6         test r14, r14
0x000066b1      75c4           jne 0x6677
0x000066b3      0f1f440000     nop dword [rax + rax]
0x000066b8      807c241700     cmp byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:120
0x000066bd      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x000066c4      480f440424     cmove rax, qword [rsp]
0x000066c9      48890424       mov qword [rsp], rax
0x000066cd      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:123
0x000066d1      4883c428       add rsp, 0x28
0x000066d5      5b             pop rbx
0x000066d6      5d             pop rbp
0x000066d7      415c           pop r12
0x000066d9      415d           pop r13
0x000066db      415e           pop r14
0x000066dd      415f           pop r15
0x000066df      c3             ret
0x000066e0      c644241701     mov byte [rsp + 0x17], 1                ; ../coreutils-8.31/lib/argmatch.c:114
0x000066e5      eb80           jmp 0x6667
0x000066e7      660f1f840000.  nop word [rax + rax]
0x000066f0      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:101
0x000066f4      ebd7           jmp 0x66cd
0x000066f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_invalid:
0x00006700      4883faff       cmp rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/argmatch.c:132
0x00006704      4154           push r12
0x00006706      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:133
0x0000670b      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:132
0x0000670c      4989f4         mov r12, rsi
0x0000670f      53             push rbx
0x00006710      4889fd         mov rbp, rdi
0x00006713      744b           je 0x6760                               ; ../coreutils-8.31/lib/argmatch.c:133
0x00006715      488d35746200.  lea rsi, str.ambiguous_argument__s_for__s ; 0xc990 ; "ambiguous argument %s for %s"
0x0000671c      31ff           xor edi, edi
0x0000671e      e8adb4ffff     call sym.imp.dcgettext
0x00006723      4889c3         mov rbx, rax
0x00006726      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00006729      bf01000000     mov edi, 1
0x0000672e      e89d360000     call sym.quote_n
0x00006733      4c89e2         mov rdx, r12
0x00006736      4889c5         mov rbp, rax
0x00006739      be08000000     mov esi, 8
0x0000673e      31ff           xor edi, edi
0x00006740      e8bb320000     call sym.quotearg_n_style
0x00006745      4989e8         mov r8, rbp
0x00006748      4889da         mov rdx, rbx
0x0000674b      4889c1         mov rcx, rax
0x0000674e      5b             pop rbx                                 ; ../coreutils-8.31/lib/argmatch.c:139
0x0000674f      5d             pop rbp
0x00006750      415c           pop r12
0x00006752      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00006754      31ff           xor edi, edi
0x00006756      31c0           xor eax, eax
0x00006758      e903b7ffff     jmp sym.imp.error
0x0000675d      0f1f00         nop dword [rax]
0x00006760      488d350e6200.  lea rsi, str.invalid_argument__s_for__s ; ../coreutils-8.31/lib/argmatch.c:133 ; 0xc975 ; "invalid argument %s for %s"
0x00006767      31ff           xor edi, edi
0x00006769      e862b4ffff     call sym.imp.dcgettext
0x0000676e      4889c3         mov rbx, rax
0x00006771      ebb3           jmp 0x6726
0x00006773      0f1f00         nop dword [rax]
0x00006776      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_valid:
0x00006780      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:148
0x00006782      4156           push r14
0x00006784      4989fe         mov r14, rdi
0x00006787      4155           push r13
0x00006789      4154           push r12
0x0000678b      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/argmatch.c:154
0x0000678d      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:148
0x0000678e      53             push rbx
0x0000678f      4889f5         mov rbp, rsi
0x00006792      488d35146200.  lea rsi, str.Valid_arguments_are:       ; ../coreutils-8.31/lib/argmatch.c:154 ; 0xc9ad ; "Valid arguments are:"
0x00006799      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/argmatch.c:148
0x0000679c      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:154
0x000067a1      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argmatch.c:148
0x000067a5      488b1d549920.  mov rbx, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:154 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x210100:8]=0
0x000067ac      e81fb4ffff     call sym.imp.dcgettext
0x000067b1      4889c7         mov rdi, rax
0x000067b4      4889de         mov rsi, rbx
0x000067b7      e864b5ffff     call sym.imp.fputs_unlocked
0x000067bc      4d8b3e         mov r15, qword [r14]                    ; ../coreutils-8.31/lib/argmatch.c:155
0x000067bf      4d85ff         test r15, r15
0x000067c2      0f8490000000   je 0x6858
0x000067c8      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/argmatch.c:150
0x000067cb      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:155
0x000067cd      eb39           jmp 0x6808
0x000067cf      90             nop
0x000067d0      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:159
0x000067d3      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x000067d7      4989ed         mov r13, rbp                            ; ../coreutils-8.31/lib/argmatch.c:160
0x000067da      e811360000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:159
0x000067df      488b3d1a9920.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x210100:8]=0
0x000067e6      488d15d56100.  lea rdx, [0x0000c9c2]                   ; "\n  - %s"
0x000067ed      4889c1         mov rcx, rax
0x000067f0      be01000000     mov esi, 1
0x000067f5      31c0           xor eax, eax
0x000067f7      4c01e5         add rbp, r12
0x000067fa      e8e1b6ffff     call sym.imp.__fprintf_chk
0x000067ff      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x00006803      4d85ff         test r15, r15
0x00006806      7450           je 0x6858
0x00006808      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/argmatch.c:156
0x0000680b      74c3           je 0x67d0
0x0000680d      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/argmatch.c:157
0x00006810      4889ee         mov rsi, rbp
0x00006813      4c89ef         mov rdi, r13
0x00006816      e8f5b4ffff     call sym.imp.memcmp
0x0000681b      85c0           test eax, eax
0x0000681d      75b1           jne 0x67d0
0x0000681f      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:164
0x00006822      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00006826      4c01e5         add rbp, r12
0x00006829      e8c2350000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:164
0x0000682e      488b3dcb9820.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x210100:8]=0
0x00006835      488d158e6100.  lea rdx, str.s                          ; 0xc9ca ; ", %s"
0x0000683c      4889c1         mov rcx, rax
0x0000683f      be01000000     mov esi, 1
0x00006844      31c0           xor eax, eax
0x00006846      e895b6ffff     call sym.imp.__fprintf_chk
0x0000684b      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000684f      4d85ff         test r15, r15
0x00006852      75b4           jne 0x6808
0x00006854      0f1f4000       nop dword [rax]
0x00006858      488b3da19820.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:166 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x210100:8]=0
0x0000685f      488b4728       mov rax, qword [rdi + 0x28]             ; stdio.h:100   return _IO_putc_unlocked (__c, __stream);
0x00006863      483b4730       cmp rax, qword [rdi + 0x30]
0x00006867      731f           jae 0x6888
0x00006869      488d5001       lea rdx, [rax + 1]
0x0000686d      48895728       mov qword [rdi + 0x28], rdx
0x00006871      c6000a         mov byte [rax], 0xa
0x00006874      4883c408       add rsp, 8
0x00006878      5b             pop rbx
0x00006879      5d             pop rbp
0x0000687a      415c           pop r12
0x0000687c      415d           pop r13
0x0000687e      415e           pop r14
0x00006880      415f           pop r15
0x00006882      c3             ret
0x00006883      0f1f440000     nop dword [rax + rax]
0x00006888      4883c408       add rsp, 8
0x0000688c      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/argmatch.c:-204
0x00006891      5b             pop rbx
0x00006892      5d             pop rbp
0x00006893      415c           pop r12
0x00006895      415d           pop r13
0x00006897      415e           pop r14
0x00006899      415f           pop r15
0x0000689b      e9e0b3ffff     jmp sym.imp.__overflow
;-- __xargmatch_internal:
0x000068a0      4157           push r15
0x000068a2      4156           push r14
0x000068a4      4989fe         mov r14, rdi
0x000068a7      4155           push r13
0x000068a9      4154           push r12
0x000068ab      4989f4         mov r12, rsi
0x000068ae      55             push rbp
0x000068af      53             push rbx
0x000068b0      4889cd         mov rbp, rcx
0x000068b3      4889d3         mov rbx, rdx
0x000068b6      4c89c1         mov rcx, r8
0x000068b9      4889ea         mov rdx, rbp
0x000068bc      4883ec08       sub rsp, 8
0x000068c0      4889de         mov rsi, rbx
0x000068c3      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-196
0x000068c6      4d89c7         mov r15, r8
0x000068c9      4d89cd         mov r13, r9
0x000068cc      e80ffdffff     call sym.argmatch
0x000068d1      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argmatch.c:-195
0x000068d4      780f           js 0x68e5                               ; ../coreutils-8.31/lib/argmatch.c:-193
0x000068d6      4883c408       add rsp, 8
0x000068da      5b             pop rbx
0x000068db      5d             pop rbp
0x000068dc      415c           pop r12
0x000068de      415d           pop r13
0x000068e0      415e           pop r14                                 ; ../coreutils-8.31/lib/argmatch.c:-184
0x000068e2      415f           pop r15
0x000068e4      c3             ret
0x000068e5      4889c2         mov rdx, rax
0x000068e8      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-181
0x000068eb      4c89f7         mov rdi, r14
0x000068ee      e80dfeffff     call sym.argmatch_invalid
0x000068f3      4c89fa         mov rdx, r15
0x000068f6      4889ee         mov rsi, rbp
0x000068f9      4889df         mov rdi, rbx
0x000068fc      e87ffeffff     call sym.argmatch_valid
0x00006901      41ffd5         call r13
0x00006904      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000690b      ebc9           jmp 0x68d6
0x0000690d      0f1f00         nop dword [rax]
;-- argmatch_to_argument:
0x00006910      4156           push r14
0x00006912      4155           push r13
0x00006914      4154           push r12
0x00006916      55             push rbp
0x00006917      53             push rbx
0x00006918      4c8b36         mov r14, qword [rsi]
0x0000691b      4d85f6         test r14, r14
0x0000691e      7431           je 0x6951
0x00006920      4989cc         mov r12, rcx
0x00006923      4989fd         mov r13, rdi
0x00006926      4889d5         mov rbp, rdx
0x00006929      488d5e08       lea rbx, [rsi + 8]
0x0000692d      eb10           jmp 0x693f                              ; ../coreutils-8.31/lib/argmatch.c:-177
0x0000692f      90             nop
0x00006930      4c8b33         mov r14, qword [rbx]
0x00006933      4c01e5         add rbp, r12
0x00006936      4883c308       add rbx, 8
0x0000693a      4d85f6         test r14, r14
0x0000693d      7412           je 0x6951
0x0000693f      4c89e2         mov rdx, r12
0x00006942      4889ee         mov rsi, rbp
0x00006945      4c89ef         mov rdi, r13
0x00006948      e8c3b3ffff     call sym.imp.memcmp
0x0000694d      85c0           test eax, eax
0x0000694f      75df           jne 0x6930
0x00006951      5b             pop rbx
0x00006952      4c89f0         mov rax, r14
0x00006955      5d             pop rbp
0x00006956      415c           pop r12
0x00006958      415d           pop r13
0x0000695a      415e           pop r14
0x0000695c      c3             ret
0x0000695d      0f1f00         nop dword [rax]
;-- cl_strtod:
0x00006960      4155           push r13                                ; ../coreutils-8.31/lib/cl-strtod.c:60
0x00006962      4154           push r12
0x00006964      55             push rbp
0x00006965      53             push rbx
0x00006966      4889f3         mov rbx, rsi
0x00006969      4889fd         mov rbp, rdi
0x0000696c      4883ec38       sub rsp, 0x38
0x00006970      488d742418     lea rsi, [rsp + 0x18]                   ; ../coreutils-8.31/lib/cl-strtod.c:62
0x00006975      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/cl-strtod.c:60
0x0000697e      4889442428     mov qword [rsp + 0x28], rax
0x00006983      31c0           xor eax, eax
0x00006985      e8d6b1ffff     call sym.imp.strtod                     ; ../coreutils-8.31/lib/cl-strtod.c:62
0x0000698a      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/cl-strtod.c:63
0x0000698f      660f28c8       movapd xmm1, xmm0                       ; ../coreutils-8.31/lib/cl-strtod.c:62
0x00006993      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/cl-strtod.c:63
0x00006996      7530           jne 0x69c8
0x00006998      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/cl-strtod.c:73
0x0000699b      7408           je 0x69a5
0x0000699d      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/cl-strtod.c:74
0x000069a2      488903         mov qword [rbx], rax
0x000069a5      488b442428     mov rax, qword [rsp + 0x28]             ; ../coreutils-8.31/lib/cl-strtod.c:76
0x000069aa      644833042528.  xor rax, qword fs:[0x28]
0x000069b3      660f28c1       movapd xmm0, xmm1
0x000069b7      7555           jne 0x6a0e
0x000069b9      4883c438       add rsp, 0x38
0x000069bd      5b             pop rbx
0x000069be      5d             pop rbp
0x000069bf      415c           pop r12
0x000069c1      415d           pop r13
0x000069c3      c3             ret
0x000069c4      0f1f4000       nop dword [rax]
0x000069c8      f20f11442408   movsd qword [rsp + 8], xmm0
0x000069ce      e83db1ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/cl-strtod.c:65
0x000069d3      488d742420     lea rsi, [rsp + 0x20]                   ; ../coreutils-8.31/lib/cl-strtod.c:67
0x000069d8      4889ef         mov rdi, rbp
0x000069db      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/cl-strtod.c:65
0x000069de      448b28         mov r13d, dword [rax]
0x000069e1      e8fa470000     call sym.c_strtod                       ; ../coreutils-8.31/lib/cl-strtod.c:67
0x000069e6      488b442420     mov rax, qword [rsp + 0x20]             ; ../coreutils-8.31/lib/cl-strtod.c:68
0x000069eb      4839442418     cmp qword [rsp + 0x18], rax
0x000069f0      f20f104c2408   movsd xmm1, qword [rsp + 8]
0x000069f6      7310           jae 0x6a08
0x000069f8      4889442418     mov qword [rsp + 0x18], rax             ; ../coreutils-8.31/lib/cl-strtod.c:69
0x000069fd      660f28c8       movapd xmm1, xmm0
0x00006a01      eb95           jmp 0x6998
0x00006a03      0f1f440000     nop dword [rax + rax]
0x00006a08      45892c24       mov dword [r12], r13d                   ; ../coreutils-8.31/lib/cl-strtod.c:71
0x00006a0c      eb8a           jmp 0x6998
0x00006a0e      e8fdb1ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/cl-strtod.c:76
0x00006a13      662e0f1f8400.  nop word cs:[rax + rax]
0x00006a1d      0f1f00         nop dword [rax]
;-- close_stdout_set_file_name:
0x00006a20      48893d019720.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x210128:8]=0
0x00006a27      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00006a28      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00006a30      40883de99620.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x210120:1]=0
0x00006a37      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00006a38      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00006a40      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00006a41      53             push rbx
0x00006a42      4883ec08       sub rsp, 8
0x00006a46      488b3d7b9620.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x00006a4d      e8fe470000     call sym.close_stream
0x00006a52      85c0           test eax, eax
0x00006a54      7416           je 0x6a6c
0x00006a56      e8b5b0ffff     call sym.imp.__errno_location
0x00006a5b      803dbe962000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x210120:1]=0
0x00006a62      4889c3         mov rbx, rax
0x00006a65      741c           je 0x6a83
0x00006a67      833820         cmp dword [rax], 0x20
0x00006a6a      7517           jne 0x6a83
0x00006a6c      488b3d8d9620.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x210100:8]=0
0x00006a73      e8d8470000     call sym.close_stream
0x00006a78      85c0           test eax, eax
0x00006a7a      7546           jne 0x6ac2
0x00006a7c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00006a80      5b             pop rbx
0x00006a81      5d             pop rbp
0x00006a82      c3             ret
0x00006a83      488d350c4c00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0xb696 ; "write error"
0x00006a8a      31ff           xor edi, edi
0x00006a8c      ba05000000     mov edx, 5
0x00006a91      e83ab1ffff     call sym.imp.dcgettext
0x00006a96      488b3d8b9620.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x210128:8]=0
0x00006a9d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00006aa0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00006aa3      7428           je 0x6acd
0x00006aa5      e846310000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00006aaa      8b33           mov esi, dword [rbx]
0x00006aac      488d154f4d00.  lea rdx, str.s:__s                      ; 0xb802 ; "%s: %s"
0x00006ab3      4889c1         mov rcx, rax
0x00006ab6      4989e8         mov r8, rbp
0x00006ab9      31ff           xor edi, edi
0x00006abb      31c0           xor eax, eax
0x00006abd      e89eb3ffff     call sym.imp.error
0x00006ac2      8b3d78952000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x210040:4]=1
0x00006ac8      e863b0ffff     call sym.imp._exit
0x00006acd      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00006acf      488d15f65e00.  lea rdx, [0x0000c9cc]                   ; "%s"
0x00006ad6      4889c1         mov rcx, rax
0x00006ad9      31ff           xor edi, edi
0x00006adb      31c0           xor eax, eax
0x00006add      e87eb3ffff     call sym.imp.error
0x00006ae2      ebde           jmp 0x6ac2
0x00006ae4      662e0f1f8400.  nop word cs:[rax + rax]
0x00006aee      6690           nop
;-- dir_len:
0x00006af0      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x00006af1      53             push rbx
0x00006af2      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x00006af4      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x00006af7      4883ec08       sub rsp, 8
0x00006afb      803f2f         cmp byte [rdi], 0x2f                    ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x00006afe      400f94c5       sete bpl
0x00006b02      e8a9000000     call sym.last_component                 ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x00006b07      4889c1         mov rcx, rax
0x00006b0a      4829d9         sub rcx, rbx
0x00006b0d      4839e9         cmp rcx, rbp
0x00006b10      762e           jbe 0x6b40
0x00006b12      8078ff2f       cmp byte [rax - 1], 0x2f                ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x00006b16      488d51ff       lea rdx, [rcx - 1]
0x00006b1a      7412           je 0x6b2e
0x00006b1c      eb22           jmp 0x6b40
0x00006b1e      6690           nop
0x00006b20      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x00006b25      488d42ff       lea rax, [rdx - 1]
0x00006b29      7508           jne 0x6b33
0x00006b2b      4889c2         mov rdx, rax
0x00006b2e      4839d5         cmp rbp, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x00006b31      75ed           jne 0x6b20
0x00006b33      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x00006b37      4889d0         mov rax, rdx
0x00006b3a      5b             pop rbx
0x00006b3b      5d             pop rbp
0x00006b3c      c3             ret
0x00006b3d      0f1f00         nop dword [rax]
0x00006b40      4883c408       add rsp, 8
0x00006b44      4889ca         mov rdx, rcx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x00006b47      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x00006b4a      5b             pop rbx
0x00006b4b      5d             pop rbp
0x00006b4c      c3             ret
0x00006b4d      0f1f00         nop dword [rax]
;-- mdir_name:
0x00006b50      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:72
0x00006b51      53             push rbx
0x00006b52      4889fd         mov rbp, rdi
0x00006b55      4883ec08       sub rsp, 8
0x00006b59      e892ffffff     call sym.dir_len                        ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x00006b5e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x00006b61      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x00006b64      0f94c0         sete al                                 ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x00006b67      0fb6c0         movzx eax, al
0x00006b6a      488d7c0301     lea rdi, [rbx + rax + 1]                ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x00006b6f      e84cb2ffff     call sym.imp.malloc
0x00006b74      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x00006b77      4889c1         mov rcx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x00006b7a      741a           je 0x6b96                               ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x00006b7c      4889da         mov rdx, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006b7f      4889ee         mov rsi, rbp
0x00006b82      4889c7         mov rdi, rax
0x00006b85      e8d6b1ffff     call sym.imp.memcpy
0x00006b8a      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x00006b8d      4889c1         mov rcx, rax                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006b90      740e           je 0x6ba0                               ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x00006b92      c6041900       mov byte [rcx + rbx], 0                 ; ../coreutils-8.31/lib/dirname-lgpl.c:84
0x00006b96      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:86
0x00006b9a      4889c8         mov rax, rcx
0x00006b9d      5b             pop rbx
0x00006b9e      5d             pop rbp
0x00006b9f      c3             ret
0x00006ba0      c6002e         mov byte [rax], 0x2e                    ; ../coreutils-8.31/lib/dirname-lgpl.c:83 ; '.'
                                                                       ; [0x2e:1]=0
0x00006ba3      bb01000000     mov ebx, 1
0x00006ba8      ebe8           jmp 0x6b92
0x00006baa      660f1f440000   nop word [rax + rax]
;-- last_component:
0x00006bb0      0fb617         movzx edx, byte [rdi]                   ; ../coreutils-8.31/lib/basename-lgpl.c:31
0x00006bb3      4889f8         mov rax, rdi
0x00006bb6      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x00006bb9      7511           jne 0x6bcc
0x00006bbb      0f1f440000     nop dword [rax + rax]
0x00006bc0      4883c001       add rax, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:37
0x00006bc4      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x00006bc7      80fa2f         cmp dl, 0x2f
0x00006bca      74f4           je 0x6bc0
0x00006bcc      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00006bce      743a           je 0x6c0a
0x00006bd0      4889c1         mov rcx, rax
0x00006bd3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:34
0x00006bd5      eb1e           jmp 0x6bf5
0x00006bd7      660f1f840000.  nop word [rax + rax]
0x00006be0      4084f6         test sil, sil                           ; ../coreutils-8.31/lib/basename-lgpl.c:43
0x00006be3      7405           je 0x6bea
0x00006be5      4889c8         mov rax, rcx
0x00006be8      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:46
0x00006bea      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00006bee      0fb611         movzx edx, byte [rcx]
0x00006bf1      84d2           test dl, dl
0x00006bf3      7415           je 0x6c0a
0x00006bf5      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:41
0x00006bf8      75e6           jne 0x6be0
0x00006bfa      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00006bfe      0fb611         movzx edx, byte [rcx]
0x00006c01      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:42
0x00006c06      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00006c08      75eb           jne 0x6bf5
0x00006c0a      f3c3           ret                                     ; ../coreutils-8.31/lib/basename-lgpl.c:51
0x00006c0c      0f1f4000       nop dword [rax]
;-- base_len:
0x00006c10      53             push rbx                                ; ../coreutils-8.31/lib/basename-lgpl.c:59
0x00006c11      4889fb         mov rbx, rdi
0x00006c14      e8d7afffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00006c19      4883f801       cmp rax, 1
0x00006c1d      760b           jbe 0x6c2a
0x00006c1f      807c03ff2f     cmp byte [rbx + rax - 1], 0x2f
0x00006c24      488d50ff       lea rdx, [rax - 1]
0x00006c28      740e           je 0x6c38
0x00006c2a      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x00006c2b      c3             ret
0x00006c2c      0f1f4000       nop dword [rax]
0x00006c30      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00006c33      0f1f440000     nop dword [rax + rax]
0x00006c38      4883fa01       cmp rdx, 1
0x00006c3c      7412           je 0x6c50
0x00006c3e      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x00006c43      488d42ff       lea rax, [rdx - 1]
0x00006c47      74e7           je 0x6c30
0x00006c49      4889d0         mov rax, rdx
0x00006c4c      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x00006c4d      c3             ret
0x00006c4e      6690           nop
0x00006c50      b801000000     mov eax, 1
0x00006c55      5b             pop rbx
0x00006c56      c3             ret
0x00006c57      660f1f840000.  nop word [rax + rax]
;-- open_safer:
0x00006c60      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/open-safer.c:30
0x00006c64      4889542430     mov qword [rsp + 0x30], rdx
0x00006c69      31d2           xor edx, edx
0x00006c6b      64488b042528.  mov rax, qword fs:[0x28]
0x00006c74      4889442418     mov qword [rsp + 0x18], rax
0x00006c79      31c0           xor eax, eax
0x00006c7b      40f6c640       test sil, 0x40                          ; ../coreutils-8.31/lib/open-safer.c:33 ; segment.PHDR
0x00006c7f      7527           jne 0x6ca8
0x00006c81      31c0           xor eax, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x00006c83      e8f8b1ffff     call sym.imp.open
0x00006c88      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/open-safer.c:45
0x00006c8a      e8e1310000     call sym.fd_safer
0x00006c8f      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/open-safer.c:46
0x00006c94      6448330c2528.  xor rcx, qword fs:[0x28]
0x00006c9d      752a           jne 0x6cc9
0x00006c9f      4883c458       add rsp, 0x58
0x00006ca3      c3             ret
0x00006ca4      0f1f4000       nop dword [rax]
0x00006ca8      488d442460     lea rax, [rsp + 0x60]                   ; ../coreutils-8.31/lib/open-safer.c:36
0x00006cad      c70424100000.  mov dword [rsp], 0x10                   ; [0x10:4]=0x3e0003
0x00006cb4      8b542430       mov edx, dword [rsp + 0x30]             ; ../coreutils-8.31/lib/open-safer.c:40
0x00006cb8      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/open-safer.c:36
0x00006cbd      488d442420     lea rax, [rsp + 0x20]
0x00006cc2      4889442410     mov qword [rsp + 0x10], rax
0x00006cc7      ebb8           jmp 0x6c81
0x00006cc9      e842afffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/open-safer.c:46
0x00006cce      6690           nop
;-- next_prime:
0x00006cd0      4883ff0a       cmp rdi, 0xa                            ; ../coreutils-8.31/lib/hash.c:464
0x00006cd4      b80a000000     mov eax, 0xa
0x00006cd9      49b9abaaaaaa.  movabs r9, 0xaaaaaaaaaaaaaaab
0x00006ce3      480f42f8       cmovb rdi, rax
0x00006ce7      4883cf01       or rdi, 1                               ; ../coreutils-8.31/lib/hash.c:470
0x00006ceb      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x00006cef      746e           je 0x6d5f
0x00006cf1      0f1f80000000.  nop dword [rax]
0x00006cf8      4889f8         mov rax, rdi
0x00006cfb      4889f9         mov rcx, rdi
0x00006cfe      49f7e1         mul r9
0x00006d01      4889d0         mov rax, rdx
0x00006d04      48d1e8         shr rax, 1
0x00006d07      488d0440       lea rax, [rax + rax*2]
0x00006d0b      4829c1         sub rcx, rax
0x00006d0e      4883ff09       cmp rdi, 9                              ; ../coreutils-8.31/lib/hash.c:449
0x00006d12      4889c8         mov rax, rcx
0x00006d15      7639           jbe 0x6d50
0x00006d17      4885c9         test rcx, rcx
0x00006d1a      7439           je 0x6d55
0x00006d1c      41b810000000   mov r8d, 0x10
0x00006d22      be09000000     mov esi, 9                              ; ../coreutils-8.31/lib/hash.c:447
0x00006d27      b903000000     mov ecx, 3                              ; ../coreutils-8.31/lib/hash.c:446
0x00006d2c      eb0b           jmp 0x6d39
0x00006d2e      6690           nop
0x00006d30      4983c008       add r8, 8
0x00006d34      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:449
0x00006d37      741c           je 0x6d55
0x00006d39      4883c102       add rcx, 2                              ; ../coreutils-8.31/lib/hash.c:453
0x00006d3d      31d2           xor edx, edx
0x00006d3f      4889f8         mov rax, rdi
0x00006d42      48f7f1         div rcx
0x00006d45      4c01c6         add rsi, r8                             ; ../coreutils-8.31/lib/hash.c:452
0x00006d48      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/hash.c:449
0x00006d4b      4889d0         mov rax, rdx
0x00006d4e      72e0           jb 0x6d30
0x00006d50      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:472
0x00006d53      750a           jne 0x6d5f
0x00006d55      4883c702       add rdi, 2                              ; ../coreutils-8.31/lib/hash.c:473
0x00006d59      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x00006d5d      7599           jne 0x6cf8
0x00006d5f      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:476
0x00006d62      c3             ret
0x00006d63      0f1f00         nop dword [rax]
0x00006d66      662e0f1f8400.  nop word cs:[rax + rax]
;-- raw_hasher:
0x00006d70      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:487
0x00006d73      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash.c:494
0x00006d75      48c1c803       ror rax, 3                              ; ../coreutils-8.31/lib/bitrotate.h:87
0x00006d79      48f7f6         div rsi                                 ; ../coreutils-8.31/lib/hash.c:494
0x00006d7c      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash.c:495
0x00006d7f      c3             ret
;-- raw_comparator:
0x00006d80      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/hash.c:500
0x00006d83      0f94c0         sete al
0x00006d86      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:502
0x00006d87      660f1f840000.  nop word [rax + rax]
;-- safe_hasher:
0x00006d90      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:250
0x00006d91      4889fb         mov rbx, rdi
0x00006d94      4889f7         mov rdi, rsi
0x00006d97      488b7310       mov rsi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/hash.c:251
0x00006d9b      ff5330         call qword [rbx + 0x30]
0x00006d9e      48394310       cmp qword [rbx + 0x10], rax             ; ../coreutils-8.31/lib/hash.c:252
0x00006da2      7609           jbe 0x6dad
0x00006da4      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/hash.c:254
0x00006da8      480303         add rax, qword [rbx]
0x00006dab      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:255
0x00006dac      c3             ret
0x00006dad      e84eadffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/hash.c:253
0x00006db2      0f1f4000       nop dword [rax]
0x00006db6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_find_entry:
0x00006dc0      4156           push r14                                ; ../coreutils-8.31/lib/hash.c:792
0x00006dc2      4155           push r13
0x00006dc4      4989d6         mov r14, rdx
0x00006dc7      4154           push r12
0x00006dc9      55             push rbp
0x00006dca      4989fc         mov r12, rdi
0x00006dcd      53             push rbx
0x00006dce      4889f5         mov rbp, rsi
0x00006dd1      4189cd         mov r13d, ecx
0x00006dd4      e8b7ffffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:793
0x00006dd9      498906         mov qword [r14], rax                    ; ../coreutils-8.31/lib/hash.c:796
0x00006ddc      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:799
0x00006ddf      4885f6         test rsi, rsi
0x00006de2      0f84e8000000   je 0x6ed0
0x00006de8      4839ee         cmp rsi, rbp                            ; ../coreutils-8.31/lib/hash.c:803
0x00006deb      4889c3         mov rbx, rax
0x00006dee      0f848f000000   je 0x6e83
0x00006df4      4889ef         mov rdi, rbp
0x00006df7      41ff542438     call qword [r12 + 0x38]
0x00006dfc      84c0           test al, al
0x00006dfe      0f857c000000   jne 0x6e80
0x00006e04      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x00006e08      4885c0         test rax, rax
0x00006e0b      0f84bf000000   je 0x6ed0
0x00006e11      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x00006e14      4839f5         cmp rbp, rsi
0x00006e17      7520           jne 0x6e39
0x00006e19      eb31           jmp 0x6e4c
0x00006e1b      0f1f440000     nop dword [rax + rax]
0x00006e20      488b5b08       mov rbx, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x00006e24      488b4308       mov rax, qword [rbx + 8]
0x00006e28      4885c0         test rax, rax
0x00006e2b      0f849f000000   je 0x6ed0
0x00006e31      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x00006e34      4839ee         cmp rsi, rbp
0x00006e37      7413           je 0x6e4c
0x00006e39      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:831
0x00006e3c      41ff542438     call qword [r12 + 0x38]
0x00006e41      84c0           test al, al
0x00006e43      74db           je 0x6e20
0x00006e45      488b4308       mov rax, qword [rbx + 8]
0x00006e49      488b30         mov rsi, qword [rax]
0x00006e4c      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/hash.c:835
0x00006e4f      741d           je 0x6e6e
0x00006e51      488b5008       mov rdx, qword [rax + 8]                ; ../coreutils-8.31/lib/hash.c:841
0x00006e55      48895308       mov qword [rbx + 8], rdx
0x00006e59      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/hash.c:778
0x00006e60      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:779
0x00006e65      48895008       mov qword [rax + 8], rdx
0x00006e69      4989442448     mov qword [r12 + 0x48], rax             ; ../coreutils-8.31/lib/hash.c:780
0x00006e6e      5b             pop rbx
0x00006e6f      4889f0         mov rax, rsi
0x00006e72      5d             pop rbp
0x00006e73      415c           pop r12
0x00006e75      415d           pop r13
0x00006e77      415e           pop r14
0x00006e79      c3             ret
0x00006e7a      660f1f440000   nop word [rax + rax]
0x00006e80      488b33         mov rsi, qword [rbx]
0x00006e83      4584ed         test r13b, r13b
0x00006e86      74e6           je 0x6e6e
0x00006e88      488b4308       mov rax, qword [rbx + 8]
0x00006e8c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:672
0x00006e8f      742f           je 0x6ec0
0x00006e91      f30f6f00       movdqu xmm0, xmmword [rax]
0x00006e95      0f1103         movups xmmword [rbx], xmm0
0x00006e98      48c700000000.  mov qword [rax], 0
0x00006e9f      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:388
0x00006ea4      48895008       mov qword [rax + 8], rdx
0x00006ea8      4989442448     mov qword [r12 + 0x48], rax
0x00006ead      4889f0         mov rax, rsi
0x00006eb0      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:398
0x00006eb1      5d             pop rbp
0x00006eb2      415c           pop r12
0x00006eb4      415d           pop r13
0x00006eb6      415e           pop r14
0x00006eb8      c3             ret
0x00006eb9      0f1f80000000.  nop dword [rax]
0x00006ec0      48c703000000.  mov qword [rbx], 0
0x00006ec7      eba5           jmp 0x6e6e
0x00006ec9      0f1f80000000.  nop dword [rax]
0x00006ed0      31f6           xor esi, esi
0x00006ed2      5b             pop rbx
0x00006ed3      4889f0         mov rax, rsi
0x00006ed6      5d             pop rbp
0x00006ed7      415c           pop r12
0x00006ed9      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:401
0x00006edb      415e           pop r14
0x00006edd      c3             ret
0x00006ede      6690           nop
;-- check_tuning.isra.0:
0x00006ee0      488b17         mov rdx, qword [rdi]
0x00006ee3      488d0d565b00.  lea rcx, obj.default_tuning             ; 0xca40
0x00006eea      b801000000     mov eax, 1
0x00006eef      4839ca         cmp rdx, rcx
0x00006ef2      7461           je 0x6f55
0x00006ef4      f30f104208     movss xmm0, dword [rdx + 8]
0x00006ef9      0f2e05545b00.  ucomiss xmm0, dword [0x0000ca54]
0x00006f00      764e           jbe 0x6f50
0x00006f02      f30f100d4e5b.  movss xmm1, dword [0x0000ca58]          ; [0xca58:4]=0x3f666666
0x00006f0a      0f2ec8         ucomiss xmm1, xmm0
0x00006f0d      7641           jbe 0x6f50
0x00006f0f      f30f104a0c     movss xmm1, dword [rdx + 0xc]           ; ../coreutils-8.31/lib/hash.c:408
0x00006f14      0f2e0d415b00.  ucomiss xmm1, dword [0x0000ca5c]
0x00006f1b      7633           jbe 0x6f50
0x00006f1d      f30f100a       movss xmm1, dword [rdx]
0x00006f21      0f2e0d385b00.  ucomiss xmm1, dword [0x0000ca60]
0x00006f28      7226           jb 0x6f50
0x00006f2a      f30f580d225b.  addss xmm1, dword [0x0000ca54]          ; ../coreutils-8.31/lib/hash.c:737
0x00006f32      f30f105204     movss xmm2, dword [rdx + 4]
0x00006f37      0f2ed1         ucomiss xmm2, xmm1
0x00006f3a      7614           jbe 0x6f50
0x00006f3c      f30f101d205b.  movss xmm3, dword [0x0000ca64]          ; [0xca64:4]=0x3f800000
0x00006f44      0f2eda         ucomiss xmm3, xmm2                      ; ../coreutils-8.31/lib/hash.c:738
0x00006f47      7207           jb 0x6f50
0x00006f49      0f2ec1         ucomiss xmm0, xmm1
0x00006f4c      7707           ja 0x6f55
0x00006f4e      6690           nop
0x00006f50      48890f         mov qword [rdi], rcx
0x00006f53      31c0           xor eax, eax
0x00006f55      f3c3           ret
0x00006f57      660f1f840000.  nop word [rax + rax]
;-- transfer_entries:
0x00006f60      4157           push r15
0x00006f62      4156           push r14
0x00006f64      4155           push r13                                ; ../coreutils-8.31/lib/hash.c:760
0x00006f66      4154           push r12
0x00006f68      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:749
0x00006f69      53             push rbx
0x00006f6a      4883ec08       sub rsp, 8
0x00006f6e      4c8b26         mov r12, qword [rsi]
0x00006f71      4c3b6608       cmp r12, qword [rsi + 8]
0x00006f75      0f83dd000000   jae 0x7058
0x00006f7b      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:752
0x00006f7e      4989f5         mov r13, rsi
0x00006f81      4189d6         mov r14d, edx
0x00006f84      0f1f4000       nop dword [rax]
0x00006f88      4d8b3c24       mov r15, qword [r12]
0x00006f8c      4d85ff         test r15, r15
0x00006f8f      0f84b5000000   je 0x704a
0x00006f95      498b5c2408     mov rbx, qword [r12 + 8]
0x00006f9a      4885db         test rbx, rbx
0x00006f9d      751d           jne 0x6fbc
0x00006f9f      eb5a           jmp 0x6ffb
0x00006fa1      0f1f80000000.  nop dword [rax]
0x00006fa8      488b4808       mov rcx, qword [rax + 8]
0x00006fac      4885d2         test rdx, rdx
0x00006faf      48894b08       mov qword [rbx + 8], rcx                ; ../coreutils-8.31/lib/bitrotate.h:557
0x00006fb3      48895808       mov qword [rax + 8], rbx
0x00006fb7      4889d3         mov rbx, rdx
0x00006fba      743b           je 0x6ff7
0x00006fbc      4c8b3b         mov r15, qword [rbx]
0x00006fbf      4889ef         mov rdi, rbp
0x00006fc2      4c89fe         mov rsi, r15
0x00006fc5      e8c6fdffff     call sym.safe_hasher
0x00006fca      48833800       cmp qword [rax], 0
0x00006fce      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:329
0x00006fd2      75d4           jne 0x6fa8
0x00006fd4      4c8938         mov qword [rax], r15
0x00006fd7      4883451801     add qword [rbp + 0x18], 1
0x00006fdc      4885d2         test rdx, rdx
0x00006fdf      48c703000000.  mov qword [rbx], 0
0x00006fe6      488b4548       mov rax, qword [rbp + 0x48]
0x00006fea      48894308       mov qword [rbx + 8], rax
0x00006fee      48895d48       mov qword [rbp + 0x48], rbx             ; ../coreutils-8.31/lib/bitrotate.h:-285
0x00006ff2      4889d3         mov rbx, rdx                            ; ../coreutils-8.31/lib/bitrotate.h:-283
0x00006ff5      75c5           jne 0x6fbc
0x00006ff7      4d8b3c24       mov r15, qword [r12]
0x00006ffb      4584f6         test r14b, r14b
0x00006ffe      49c744240800.  mov qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/bitrotate.h:-277
0x00007007      7541           jne 0x704a
0x00007009      4c89fe         mov rsi, r15
0x0000700c      4889ef         mov rdi, rbp
0x0000700f      e87cfdffff     call sym.safe_hasher
0x00007014      48833800       cmp qword [rax], 0
0x00007018      4889c3         mov rbx, rax
0x0000701b      7453           je 0x7070
0x0000701d      488b4548       mov rax, qword [rbp + 0x48]
0x00007021      4885c0         test rax, rax
0x00007024      745a           je 0x7080
0x00007026      488b5008       mov rdx, qword [rax + 8]
0x0000702a      48895548       mov qword [rbp + 0x48], rdx
0x0000702e      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:-255
0x00007032      4c8938         mov qword [rax], r15
0x00007035      48895008       mov qword [rax + 8], rdx
0x00007039      48894308       mov qword [rbx + 8], rax
0x0000703d      49c704240000.  mov qword [r12], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-250
0x00007045      49836d1801     sub qword [r13 + 0x18], 1
0x0000704a      4983c410       add r12, 0x10                           ; ../coreutils-8.31/lib/bitrotate.h:-249
0x0000704e      4d396508       cmp qword [r13 + 8], r12                ; ../coreutils-8.31/lib/bitrotate.h:-250
0x00007052      0f8730ffffff   ja 0x6f88
0x00007058      4883c408       add rsp, 8
0x0000705c      b801000000     mov eax, 1
0x00007061      5b             pop rbx
0x00007062      5d             pop rbp
0x00007063      415c           pop r12
0x00007065      415d           pop r13                                 ; ../coreutils-8.31/lib/bitrotate.h:-241
0x00007067      415e           pop r14
0x00007069      415f           pop r15
0x0000706b      c3             ret
0x0000706c      0f1f4000       nop dword [rax]
0x00007070      4c8938         mov qword [rax], r15
0x00007073      4883451801     add qword [rbp + 0x18], 1
0x00007078      ebc3           jmp 0x703d
0x0000707a      660f1f440000   nop word [rax + rax]
0x00007080      bf10000000     mov edi, 0x10
0x00007085      e836adffff     call sym.imp.malloc
0x0000708a      4885c0         test rax, rax
0x0000708d      759f           jne 0x702e
0x0000708f      4883c408       add rsp, 8
0x00007093      31c0           xor eax, eax
0x00007095      5b             pop rbx
0x00007096      5d             pop rbp
0x00007097      415c           pop r12
0x00007099      415d           pop r13
0x0000709b      415e           pop r14
0x0000709d      415f           pop r15
0x0000709f      c3             ret
;-- hash_get_n_buckets:
0x000070a0      488b4710       mov rax, qword [rdi + 0x10]
0x000070a4      c3             ret
0x000070a5      90             nop
0x000070a6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-218
;-- hash_get_n_buckets_used:
0x000070b0      488b4718       mov rax, qword [rdi + 0x18]
0x000070b4      c3             ret                                     ; ../coreutils-8.31/lib/bitrotate.h:-210
0x000070b5      90             nop
0x000070b6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-213
;-- hash_get_n_entries:
0x000070c0      488b4720       mov rax, qword [rdi + 0x20]
0x000070c4      c3             ret
0x000070c5      90             nop                                     ; ../coreutils-8.31/lib/bitrotate.h:-209
0x000070c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_max_bucket_length:
0x000070d0      488b37         mov rsi, qword [rdi]
0x000070d3      488b7f08       mov rdi, qword [rdi + 8]
0x000070d7      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/bitrotate.h:-259
0x000070d9      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/bitrotate.h:-205
0x000070dc      7339           jae 0x7117
0x000070de      6690           nop
0x000070e0      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-268
0x000070e4      7426           je 0x710c                               ; ../coreutils-8.31/lib/bitrotate.h:-284
0x000070e6      488b5608       mov rdx, qword [rsi + 8]
0x000070ea      b901000000     mov ecx, 1
0x000070ef      4885d2         test rdx, rdx
0x000070f2      7411           je 0x7105
0x000070f4      0f1f4000       nop dword [rax]
0x000070f8      488b5208       mov rdx, qword [rdx + 8]
0x000070fc      4883c101       add rcx, 1
0x00007100      4885d2         test rdx, rdx
0x00007103      75f3           jne 0x70f8
0x00007105      4839c8         cmp rax, rcx
0x00007108      480f42c1       cmovb rax, rcx                          ; ../coreutils-8.31/lib/bitrotate.h:-252
0x0000710c      4883c610       add rsi, 0x10
0x00007110      4839fe         cmp rsi, rdi
0x00007113      72cb           jb 0x70e0
0x00007115      f3c3           ret
0x00007117      f3c3           ret
0x00007119      0f1f80000000.  nop dword [rax]
;-- hash_table_ok:
0x00007120      488b0f         mov rcx, qword [rdi]
0x00007123      4c8b4708       mov r8, qword [rdi + 8]
0x00007127      31d2           xor edx, edx
0x00007129      31f6           xor esi, esi
0x0000712b      4c39c1         cmp rcx, r8
0x0000712e      7336           jae 0x7166
0x00007130      48833900       cmp qword [rcx], 0
0x00007134      7427           je 0x715d
0x00007136      488b4108       mov rax, qword [rcx + 8]
0x0000713a      4883c601       add rsi, 1
0x0000713e      4883c201       add rdx, 1
0x00007142      4885c0         test rax, rax
0x00007145      7416           je 0x715d
0x00007147      660f1f840000.  nop word [rax + rax]
0x00007150      488b4008       mov rax, qword [rax + 8]
0x00007154      4883c201       add rdx, 1
0x00007158      4885c0         test rax, rax
0x0000715b      75f3           jne 0x7150
0x0000715d      4883c110       add rcx, 0x10
0x00007161      4c39c1         cmp rcx, r8
0x00007164      72ca           jb 0x7130
0x00007166      31c0           xor eax, eax
0x00007168      48397718       cmp qword [rdi + 0x18], rsi
0x0000716c      7402           je 0x7170
0x0000716e      f3c3           ret                                     ; ../coreutils-8.31/lib/hash.c:-195
0x00007170      48395720       cmp qword [rdi + 0x20], rdx
0x00007174      0f94c0         sete al
0x00007177      c3             ret
0x00007178      0f1f84000000.  nop dword [rax + rax]
;-- hash_print_statistics:
0x00007180      4155           push r13
0x00007182      4154           push r12
0x00007184      4989f4         mov r12, rsi
0x00007187      55             push rbp
0x00007188      53             push rbx
0x00007189      31db           xor ebx, ebx
0x0000718b      4883ec08       sub rsp, 8
0x0000718f      488b37         mov rsi, qword [rdi]
0x00007192      488b4f20       mov rcx, qword [rdi + 0x20]
0x00007196      488b6f10       mov rbp, qword [rdi + 0x10]
0x0000719a      4c8b6f18       mov r13, qword [rdi + 0x18]
0x0000719e      488b7f08       mov rdi, qword [rdi + 8]
0x000071a2      4839fe         cmp rsi, rdi
0x000071a5      733e           jae 0x71e5
0x000071a7      660f1f840000.  nop word [rax + rax]
0x000071b0      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/hash.c:-192
0x000071b4      7426           je 0x71dc
0x000071b6      488b4608       mov rax, qword [rsi + 8]                ; stdio2.h:-339
0x000071ba      ba01000000     mov edx, 1
0x000071bf      4885c0         test rax, rax
0x000071c2      7411           je 0x71d5
0x000071c4      0f1f4000       nop dword [rax]
0x000071c8      488b4008       mov rax, qword [rax + 8]
0x000071cc      4883c201       add rdx, 1
0x000071d0      4885c0         test rax, rax
0x000071d3      75f3           jne 0x71c8
0x000071d5      4839d3         cmp rbx, rdx
0x000071d8      480f42da       cmovb rbx, rdx
0x000071dc      4883c610       add rsi, 0x10
0x000071e0      4839fe         cmp rsi, rdi
0x000071e3      72cb           jb 0x71b0
0x000071e5      488d15e35700.  lea rdx, str.entries:__________lu       ; 0xc9cf ; "# entries:         %lu\n"
0x000071ec      be01000000     mov esi, 1
0x000071f1      4c89e7         mov rdi, r12
0x000071f4      31c0           xor eax, eax
0x000071f6      e8e5acffff     call sym.imp.__fprintf_chk
0x000071fb      488d15e55700.  lea rdx, str.buckets:__________lu       ; 0xc9e7 ; "# buckets:         %lu\n"
0x00007202      31c0           xor eax, eax
0x00007204      4889e9         mov rcx, rbp
0x00007207      be01000000     mov esi, 1
0x0000720c      4c89e7         mov rdi, r12
0x0000720f      e8ccacffff     call sym.imp.__fprintf_chk
0x00007214      4d85ed         test r13, r13
0x00007217      7867           js 0x7280
0x00007219      660fefc0       pxor xmm0, xmm0
0x0000721d      4885ed         test rbp, rbp
0x00007220      f2490f2ac5     cvtsi2sd xmm0, r13
0x00007225      f20f59054b58.  mulsd xmm0, qword [0x0000ca78]          ; ../coreutils-8.31/lib/hash.c:-174
0x0000722d      787a           js 0x72a9                               ; ../coreutils-8.31/lib/hash.c:-170
0x0000722f      660fefc9       pxor xmm1, xmm1
0x00007233      f2480f2acd     cvtsi2sd xmm1, rbp
0x00007238      f20f5ec1       divsd xmm0, xmm1
0x0000723c      488d15d55700.  lea rdx, str.buckets_used:_____lu___.2f ; 0xca18 ; "# buckets used:    %lu (%.2f%%)\n"
0x00007243      4c89e9         mov rcx, r13
0x00007246      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/hash.c:-166
0x00007249      be01000000     mov esi, 1
0x0000724e      b801000000     mov eax, 1
0x00007253      e888acffff     call sym.imp.__fprintf_chk
0x00007258      4883c408       add rsp, 8
0x0000725c      4889d9         mov rcx, rbx
0x0000725f      4c89e7         mov rdi, r12
0x00007262      5b             pop rbx
0x00007263      5d             pop rbp
0x00007264      415c           pop r12
0x00007266      415d           pop r13
0x00007268      488d15905700.  lea rdx, str.max_bucket_length:__lu     ; 0xc9ff ; "max bucket length: %lu\n"
0x0000726f      be01000000     mov esi, 1
0x00007274      31c0           xor eax, eax
0x00007276      e965acffff     jmp sym.imp.__fprintf_chk
0x0000727b      0f1f440000     nop dword [rax + rax]
0x00007280      4c89e8         mov rax, r13
0x00007283      4c89ea         mov rdx, r13
0x00007286      660fefc0       pxor xmm0, xmm0
0x0000728a      48d1e8         shr rax, 1
0x0000728d      83e201         and edx, 1
0x00007290      4809d0         or rax, rdx
0x00007293      4885ed         test rbp, rbp
0x00007296      f2480f2ac0     cvtsi2sd xmm0, rax
0x0000729b      f20f58c0       addsd xmm0, xmm0
0x0000729f      f20f5905d157.  mulsd xmm0, qword [0x0000ca78]
0x000072a7      7986           jns 0x722f                              ; ../coreutils-8.31/lib/hash.c:-138
0x000072a9      4889e8         mov rax, rbp
0x000072ac      660fefc9       pxor xmm1, xmm1
0x000072b0      48d1e8         shr rax, 1
0x000072b3      83e501         and ebp, 1                              ; ../coreutils-8.31/lib/hash.c:-136
0x000072b6      4809e8         or rax, rbp                             ; ../coreutils-8.31/lib/hash.c:-147
0x000072b9      f2480f2ac8     cvtsi2sd xmm1, rax
0x000072be      f20f58c9       addsd xmm1, xmm1
0x000072c2      e971ffffff     jmp 0x7238
0x000072c7      660f1f840000.  nop word [rax + rax]
;-- hash_lookup:
0x000072d0      4154           push r12
0x000072d2      55             push rbp
0x000072d3      4989fc         mov r12, rdi
0x000072d6      53             push rbx
0x000072d7      4889f5         mov rbp, rsi
0x000072da      e8b1faffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:-127
0x000072df      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:-123
0x000072e2      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/hash.c:-127
0x000072e5      7426           je 0x730d                               ; ../coreutils-8.31/lib/hash.c:-120
0x000072e7      4889c3         mov rbx, rax
0x000072ea      eb07           jmp 0x72f3
0x000072ec      0f1f4000       nop dword [rax]
0x000072f0      488b33         mov rsi, qword [rbx]
0x000072f3      4839ee         cmp rsi, rbp
0x000072f6      7417           je 0x730f                               ; ../coreutils-8.31/lib/hash.c:-116
0x000072f8      4889ef         mov rdi, rbp
0x000072fb      41ff542438     call qword [r12 + 0x38]                 ; ../coreutils-8.31/lib/hash.c:-120
0x00007300      84c0           test al, al
0x00007302      751c           jne 0x7320
0x00007304      488b5b08       mov rbx, qword [rbx + 8]
0x00007308      4885db         test rbx, rbx
0x0000730b      75e3           jne 0x72f0
0x0000730d      31f6           xor esi, esi
0x0000730f      5b             pop rbx
0x00007310      4889f0         mov rax, rsi
0x00007313      5d             pop rbp
0x00007314      415c           pop r12
0x00007316      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-112
0x00007317      660f1f840000.  nop word [rax + rax]
0x00007320      488b33         mov rsi, qword [rbx]
0x00007323      5b             pop rbx
0x00007324      5d             pop rbp
0x00007325      4889f0         mov rax, rsi
0x00007328      415c           pop r12
0x0000732a      c3             ret
0x0000732b      0f1f440000     nop dword [rax + rax]
;-- hash_get_first:
0x00007330      48837f2000     cmp qword [rdi + 0x20], 0
0x00007335      742c           je 0x7363
0x00007337      488b17         mov rdx, qword [rdi]
0x0000733a      488b4f08       mov rcx, qword [rdi + 8]
0x0000733e      4839ca         cmp rdx, rcx
0x00007341      7325           jae 0x7368
0x00007343      488b02         mov rax, qword [rdx]
0x00007346      4885c0         test rax, rax
0x00007349      751b           jne 0x7366
0x0000734b      0f1f440000     nop dword [rax + rax]
0x00007350      4883c210       add rdx, 0x10
0x00007354      4839ca         cmp rdx, rcx
0x00007357      730f           jae 0x7368                              ; ../coreutils-8.31/lib/hash.c:-97
0x00007359      488b02         mov rax, qword [rdx]
0x0000735c      4885c0         test rax, rax
0x0000735f      74ef           je 0x7350
0x00007361      f3c3           ret
0x00007363      31c0           xor eax, eax
0x00007365      c3             ret
0x00007366      f3c3           ret
0x00007368      4883ec08       sub rsp, 8
0x0000736c      e88fa7ffff     call sym.imp.abort
0x00007371      0f1f440000     nop dword [rax + rax]
0x00007376      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_next:
0x00007380      55             push rbp
0x00007381      53             push rbx
0x00007382      4889fd         mov rbp, rdi
0x00007385      4889f3         mov rbx, rsi
0x00007388      4883ec08       sub rsp, 8
0x0000738c      e8fff9ffff     call sym.safe_hasher
0x00007391      4889c2         mov rdx, rax
0x00007394      4889c1         mov rcx, rax
0x00007397      488b02         mov rax, qword [rdx]
0x0000739a      488b5208       mov rdx, qword [rdx + 8]
0x0000739e      4839d8         cmp rax, rbx
0x000073a1      7416           je 0x73b9
0x000073a3      0f1f440000     nop dword [rax + rax]
0x000073a8      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-79
0x000073ab      7411           je 0x73be
0x000073ad      488b02         mov rax, qword [rdx]
0x000073b0      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/hash.c:-97
0x000073b4      4839d8         cmp rax, rbx
0x000073b7      75ef           jne 0x73a8
0x000073b9      4885d2         test rdx, rdx
0x000073bc      752a           jne 0x73e8
0x000073be      488b5508       mov rdx, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash.c:-66
0x000073c2      eb0c           jmp 0x73d0
0x000073c4      0f1f4000       nop dword [rax]
0x000073c8      488b01         mov rax, qword [rcx]
0x000073cb      4885c0         test rax, rax
0x000073ce      750b           jne 0x73db
0x000073d0      4883c110       add rcx, 0x10
0x000073d4      4839ca         cmp rdx, rcx
0x000073d7      77ef           ja 0x73c8
0x000073d9      31c0           xor eax, eax
0x000073db      4883c408       add rsp, 8
0x000073df      5b             pop rbx
0x000073e0      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:-59
0x000073e1      c3             ret
0x000073e2      660f1f440000   nop word [rax + rax]
0x000073e8      488b02         mov rax, qword [rdx]
0x000073eb      4883c408       add rsp, 8
0x000073ef      5b             pop rbx
0x000073f0      5d             pop rbp
0x000073f1      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-55
0x000073f2      0f1f4000       nop dword [rax]
0x000073f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_entries:
0x00007400      4c8b0f         mov r9, qword [rdi]
0x00007403      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-57
0x00007407      7659           jbe 0x7462
0x00007409      4531c0         xor r8d, r8d
0x0000740c      498b09         mov rcx, qword [r9]
0x0000740f      4885c9         test rcx, rcx
0x00007412      7439           je 0x744d                               ; ../coreutils-8.31/lib/hash.c:-47
0x00007414      4c39c2         cmp rdx, r8
0x00007417      763e           jbe 0x7457
0x00007419      4a890cc6       mov qword [rsi + r8*8], rcx
0x0000741d      498b4908       mov rcx, qword [r9 + 8]
0x00007421      498d4001       lea rax, [r8 + 1]
0x00007425      4885c9         test rcx, rcx
0x00007428      7420           je 0x744a
0x0000742a      660f1f440000   nop word [rax + rax]
0x00007430      4839c2         cmp rdx, rax
0x00007433      742b           je 0x7460                               ; ../coreutils-8.31/lib/hash.c:-3
0x00007435      4c8b01         mov r8, qword [rcx]
0x00007438      4883c001       add rax, 1
0x0000743c      4c8944c6f8     mov qword [rsi + rax*8 - 8], r8
0x00007441      488b4908       mov rcx, qword [rcx + 8]
0x00007445      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/hash.c:-2
0x00007448      75e6           jne 0x7430
0x0000744a      4989c0         mov r8, rax
0x0000744d      4983c110       add r9, 0x10
0x00007451      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-3
0x00007455      77b5           ja 0x740c
0x00007457      4c89c0         mov rax, r8
0x0000745a      c3             ret
0x0000745b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:0
0x00007460      f3c3           ret
0x00007462      31c0           xor eax, eax
0x00007464      c3             ret
0x00007465      90             nop
0x00007466      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_do_for_each:
0x00007470      4157           push r15
0x00007472      4156           push r14
0x00007474      4155           push r13
0x00007476      4154           push r12
0x00007478      55             push rbp
0x00007479      53             push rbx
0x0000747a      4883ec08       sub rsp, 8
0x0000747e      4c8b37         mov r14, qword [rdi]
0x00007481      4c397708       cmp qword [rdi + 8], r14
0x00007485      764f           jbe 0x74d6
0x00007487      4989d5         mov r13, rdx
0x0000748a      4989f4         mov r12, rsi
0x0000748d      4989ff         mov r15, rdi                            ; ../coreutils-8.31/lib/hash.c:46
0x00007490      31ed           xor ebp, ebp
0x00007492      498b3e         mov rdi, qword [r14]
0x00007495      4885ff         test rdi, rdi
0x00007498      7420           je 0x74ba
0x0000749a      4c89f3         mov rbx, r14
0x0000749d      eb04           jmp 0x74a3
0x0000749f      90             nop
0x000074a0      488b3b         mov rdi, qword [rbx]
0x000074a3      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/hash.c:37
0x000074a6      41ffd4         call r12
0x000074a9      84c0           test al, al
0x000074ab      7417           je 0x74c4
0x000074ad      488b5b08       mov rbx, qword [rbx + 8]
0x000074b1      4883c501       add rbp, 1
0x000074b5      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/hash.c:33
0x000074b8      75e6           jne 0x74a0
0x000074ba      4983c610       add r14, 0x10
0x000074be      4d397708       cmp qword [r15 + 8], r14
0x000074c2      77ce           ja 0x7492
0x000074c4      4883c408       add rsp, 8
0x000074c8      4889e8         mov rax, rbp
0x000074cb      5b             pop rbx
0x000074cc      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:38
0x000074cd      415c           pop r12
0x000074cf      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:37
0x000074d1      415e           pop r14
0x000074d3      415f           pop r15
0x000074d5      c3             ret
0x000074d6      31ed           xor ebp, ebp
0x000074d8      ebea           jmp 0x74c4                              ; ../coreutils-8.31/lib/hash.c:41
0x000074da      660f1f440000   nop word [rax + rax]
;-- hash_string:
0x000074e0      0fb60f         movzx ecx, byte [rdi]
0x000074e3      31d2           xor edx, edx
0x000074e5      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:43
0x000074e7      7424           je 0x750d
0x000074e9      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/hash.c:44
0x000074f0      4889d0         mov rax, rdx
0x000074f3      4883c701       add rdi, 1
0x000074f7      48c1e005       shl rax, 5
0x000074fb      4829d0         sub rax, rdx
0x000074fe      31d2           xor edx, edx
0x00007500      4801c8         add rax, rcx
0x00007503      0fb60f         movzx ecx, byte [rdi]
0x00007506      48f7f6         div rsi
0x00007509      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:-14
0x0000750b      75e3           jne 0x74f0
0x0000750d      4889d0         mov rax, rdx
0x00007510      c3             ret
0x00007511      0f1f440000     nop dword [rax + rax]
0x00007516      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_reset_tuning:
0x00007520      48b800000000.  movabs rax, 0x3f80000000000000          ; 4575657221408423936
0x0000752a      c6471000       mov byte [rdi + 0x10], 0                ; ../coreutils-8.31/lib/hash.c:-70
0x0000752e      488907         mov qword [rdi], rax
0x00007531      48b8cdcc4c3f.  movabs rax, 0x3fb4fdf43f4ccccd
0x0000753b      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/hash.c:-65
0x0000753f      c3             ret
;-- hash_initialize:
0x00007540      4157           push r15
0x00007542      4156           push r14
0x00007544      488d0525f8ff.  lea rax, sym.raw_hasher                 ; 0x6d70 ; "H\x89\xf81\xd2H\xc1\xc8\x03H\xf7\xf6H\x89\xd0\xc3H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x0000754b      4155           push r13
0x0000754d      4154           push r12
0x0000754f      4989d4         mov r12, rdx
0x00007552      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:-61
0x00007553      53             push rbx
0x00007554      4989cd         mov r13, rcx
0x00007557      4889fd         mov rbp, rdi
0x0000755a      bf50000000     mov edi, 0x50                           ; 'P'
0x0000755f      4989f7         mov r15, rsi
0x00007562      4883ec08       sub rsp, 8
0x00007566      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-52
0x00007569      4d89c6         mov r14, r8
0x0000756c      4c0f44e0       cmove r12, rax
0x00007570      488d0509f8ff.  lea rax, sym.raw_comparator             ; 0x6d80 ; "H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x00007577      4885c9         test rcx, rcx
0x0000757a      4c0f44e8       cmove r13, rax
0x0000757e      e83da8ffff     call sym.imp.malloc
0x00007583      4885c0         test rax, rax
0x00007586      4889c3         mov rbx, rax
0x00007589      0f84ab000000   je 0x763a
0x0000758f      4d85ff         test r15, r15
0x00007592      488d7828       lea rdi, [rax + 0x28]
0x00007596      0f84b4000000   je 0x7650
0x0000759c      4c897828       mov qword [rax + 0x28], r15
0x000075a0      e83bf9ffff     call sym.check_tuning.isra.0
0x000075a5      84c0           test al, al
0x000075a7      0f8483000000   je 0x7630
0x000075ad      41807f1000     cmp byte [r15 + 0x10], 0
0x000075b2      0f84f8000000   je 0x76b0
0x000075b8      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:-145
0x000075bb      e810f7ffff     call sym.next_prime
0x000075c0      ba08000000     mov edx, 8
0x000075c5      4889c5         mov rbp, rax
0x000075c8      31c9           xor ecx, ecx
0x000075ca      4889d0         mov rax, rdx
0x000075cd      48f7e5         mul rbp
0x000075d0      0f8014010000   jo 0x76ea
0x000075d6      4885c0         test rax, rax
0x000075d9      7855           js 0x7630
0x000075db      4885c9         test rcx, rcx
0x000075de      7550           jne 0x7630
0x000075e0      4885ed         test rbp, rbp
0x000075e3      48896b10       mov qword [rbx + 0x10], rbp
0x000075e7      7447           je 0x7630
0x000075e9      be10000000     mov esi, 0x10
0x000075ee      4889ef         mov rdi, rbp
0x000075f1      e83aa7ffff     call sym.imp.calloc
0x000075f6      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:-197
0x000075f9      488903         mov qword [rbx], rax
0x000075fc      7432           je 0x7630
0x000075fe      48c1e504       shl rbp, 4
0x00007602      48c743180000.  mov qword [rbx + 0x18], 0
0x0000760a      48c743200000.  mov qword [rbx + 0x20], 0
0x00007612      4801c5         add rbp, rax
0x00007615      4c896330       mov qword [rbx + 0x30], r12
0x00007619      4c896b38       mov qword [rbx + 0x38], r13
0x0000761d      48896b08       mov qword [rbx + 8], rbp
0x00007621      4c897340       mov qword [rbx + 0x40], r14
0x00007625      48c743480000.  mov qword [rbx + 0x48], 0
0x0000762d      eb0b           jmp 0x763a
0x0000762f      90             nop
0x00007630      4889df         mov rdi, rbx
0x00007633      31db           xor ebx, ebx
0x00007635      e8b6a4ffff     call sym.imp.free
0x0000763a      4883c408       add rsp, 8
0x0000763e      4889d8         mov rax, rbx
0x00007641      5b             pop rbx
0x00007642      5d             pop rbp
0x00007643      415c           pop r12
0x00007645      415d           pop r13
0x00007647      415e           pop r14
0x00007649      415f           pop r15
0x0000764b      c3             ret
0x0000764c      0f1f4000       nop dword [rax]
0x00007650      488d05e95300.  lea rax, obj.default_tuning             ; 0xca40
0x00007657      48894328       mov qword [rbx + 0x28], rax             ; ../coreutils-8.31/lib/hash.c:-199
0x0000765b      e880f8ffff     call sym.check_tuning.isra.0
0x00007660      84c0           test al, al
0x00007662      f30f100dfe53.  movss xmm1, dword [0x0000ca68]          ; [0xca68:4]=0x3f4ccccd
0x0000766a      74c4           je 0x7630
0x0000766c      4885ed         test rbp, rbp
0x0000766f      784a           js 0x76bb
0x00007671      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-168
0x00007675      f3480f2ac5     cvtsi2ss xmm0, rbp
0x0000767a      f30f5ec1       divss xmm0, xmm1
0x0000767e      0f2e05e75300.  ucomiss xmm0, dword [0x0000ca6c]
0x00007685      73a9           jae 0x7630
0x00007687      0f2e05e25300.  ucomiss xmm0, dword [0x0000ca70]
0x0000768e      7250           jb 0x76e0
0x00007690      f30f5c05d853.  subss xmm0, dword [0x0000ca70]
0x00007698      48b800000000.  movabs rax, 0x8000000000000000
0x000076a2      f3480f2ce8     cvttss2si rbp, xmm0
0x000076a7      4831c5         xor rbp, rax
0x000076aa      e909ffffff     jmp 0x75b8
0x000076af      90             nop
0x000076b0      4885ed         test rbp, rbp
0x000076b3      f3410f104f08   movss xmm1, dword [r15 + 8]
0x000076b9      79b6           jns 0x7671                              ; ../coreutils-8.31/lib/hash.c:-146
0x000076bb      4889e8         mov rax, rbp
0x000076be      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-147
0x000076c2      48d1e8         shr rax, 1
0x000076c5      83e501         and ebp, 1
0x000076c8      4809e8         or rax, rbp
0x000076cb      f3480f2ac0     cvtsi2ss xmm0, rax
0x000076d0      f30f58c0       addss xmm0, xmm0
0x000076d4      eba4           jmp 0x767a
0x000076d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000076e0      f3480f2ce8     cvttss2si rbp, xmm0
0x000076e5      e9cefeffff     jmp 0x75b8
0x000076ea      b901000000     mov ecx, 1
0x000076ef      e9e2feffff     jmp 0x75d6
0x000076f4      6690           nop
0x000076f6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/hash.c:-130
;-- hash_clear:
0x00007700      4154           push r12
0x00007702      55             push rbp
0x00007703      4889fd         mov rbp, rdi
0x00007706      53             push rbx
0x00007707      4c8b27         mov r12, qword [rdi]                    ; ../coreutils-8.31/lib/hash.c:-134
0x0000770a      4c3b6708       cmp r12, qword [rdi + 8]
0x0000770e      736b           jae 0x777b
0x00007710      49833c2400     cmp qword [r12], 0
0x00007715      745a           je 0x7771
0x00007717      498b5c2408     mov rbx, qword [r12 + 8]
0x0000771c      488b4540       mov rax, qword [rbp + 0x40]
0x00007720      4885db         test rbx, rbx
0x00007723      7430           je 0x7755
0x00007725      0f1f00         nop dword [rax]
0x00007728      4885c0         test rax, rax
0x0000772b      7409           je 0x7736
0x0000772d      488b3b         mov rdi, qword [rbx]
0x00007730      ffd0           call rax
0x00007732      488b4540       mov rax, qword [rbp + 0x40]
0x00007736      488b5308       mov rdx, qword [rbx + 8]
0x0000773a      488b4d48       mov rcx, qword [rbp + 0x48]
0x0000773e      48c703000000.  mov qword [rbx], 0
0x00007745      4885d2         test rdx, rdx
0x00007748      48894b08       mov qword [rbx + 8], rcx
0x0000774c      48895d48       mov qword [rbp + 0x48], rbx
0x00007750      4889d3         mov rbx, rdx
0x00007753      75d3           jne 0x7728
0x00007755      4885c0         test rax, rax
0x00007758      7406           je 0x7760
0x0000775a      498b3c24       mov rdi, qword [r12]
0x0000775e      ffd0           call rax
0x00007760      49c704240000.  mov qword [r12], 0
0x00007768      49c744240800.  mov qword [r12 + 8], 0
0x00007771      4983c410       add r12, 0x10
0x00007775      4c396508       cmp qword [rbp + 8], r12                ; ../coreutils-8.31/lib/hash.c:-310
0x00007779      7795           ja 0x7710
0x0000777b      48c745180000.  mov qword [rbp + 0x18], 0
0x00007783      48c745200000.  mov qword [rbp + 0x20], 0
0x0000778b      5b             pop rbx
0x0000778c      5d             pop rbp
0x0000778d      415c           pop r12
0x0000778f      c3             ret
;-- hash_free:
0x00007790      4154           push r12
0x00007792      55             push rbp
0x00007793      4989fc         mov r12, rdi
0x00007796      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:-307
0x00007797      48837f4000     cmp qword [rdi + 0x40], 0
0x0000779c      488b2f         mov rbp, qword [rdi]
0x0000779f      488b4708       mov rax, qword [rdi + 8]
0x000077a3      744e           je 0x77f3                               ; ../coreutils-8.31/lib/hash.c:-305
0x000077a5      48837f2000     cmp qword [rdi + 0x20], 0
0x000077aa      7447           je 0x77f3
0x000077ac      4839c5         cmp rbp, rax
0x000077af      737b           jae 0x782c
0x000077b1      0f1f80000000.  nop dword [rax]
0x000077b8      488b7d00       mov rdi, qword [rbp]
0x000077bc      4885ff         test rdi, rdi
0x000077bf      7425           je 0x77e6
0x000077c1      4889eb         mov rbx, rbp
0x000077c4      eb0d           jmp 0x77d3
0x000077c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000077d0      488b3b         mov rdi, qword [rbx]
0x000077d3      41ff542440     call qword [r12 + 0x40]                 ; segment.PHDR
0x000077d8      488b5b08       mov rbx, qword [rbx + 8]
0x000077dc      4885db         test rbx, rbx
0x000077df      75ef           jne 0x77d0
0x000077e1      498b442408     mov rax, qword [r12 + 8]
0x000077e6      4883c510       add rbp, 0x10
0x000077ea      4839e8         cmp rax, rbp
0x000077ed      77c9           ja 0x77b8
0x000077ef      498b2c24       mov rbp, qword [r12]
0x000077f3      4839c5         cmp rbp, rax
0x000077f6      7334           jae 0x782c
0x000077f8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:93
0x00007800      488b7d08       mov rdi, qword [rbp + 8]
0x00007804      4885ff         test rdi, rdi
0x00007807      7418           je 0x7821
0x00007809      0f1f80000000.  nop dword [rax]
0x00007810      488b5f08       mov rbx, qword [rdi + 8]
0x00007814      e8d7a2ffff     call sym.imp.free                       ; ../coreutils-8.31/lib/hash.c:98
0x00007819      4885db         test rbx, rbx
0x0000781c      4889df         mov rdi, rbx
0x0000781f      75ef           jne 0x7810
0x00007821      4883c510       add rbp, 0x10                           ; ../coreutils-8.31/lib/hash.c:99
0x00007825      49396c2408     cmp qword [r12 + 8], rbp
0x0000782a      77d4           ja 0x7800
0x0000782c      498b7c2448     mov rdi, qword [r12 + 0x48]
0x00007831      4885ff         test rdi, rdi
0x00007834      741b           je 0x7851
0x00007836      662e0f1f8400.  nop word cs:[rax + rax]
0x00007840      488b5f08       mov rbx, qword [rdi + 8]
0x00007844      e8a7a2ffff     call sym.imp.free
0x00007849      4885db         test rbx, rbx
0x0000784c      4889df         mov rdi, rbx
0x0000784f      75ef           jne 0x7840
0x00007851      498b3c24       mov rdi, qword [r12]
0x00007855      e896a2ffff     call sym.imp.free
0x0000785a      5b             pop rbx
0x0000785b      4c89e7         mov rdi, r12
0x0000785e      5d             pop rbp
0x0000785f      415c           pop r12
0x00007861      e98aa2ffff     jmp sym.imp.free                        ; ../coreutils-8.31/lib/hash.c:107
0x00007866      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_rehash:
0x00007870      4154           push r12
0x00007872      55             push rbp
0x00007873      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:108
0x00007876      53             push rbx
0x00007877      4883ec60       sub rsp, 0x60
0x0000787b      4c8b6728       mov r12, qword [rdi + 0x28]
0x0000787f      64488b042528.  mov rax, qword fs:[0x28]
0x00007888      4889442458     mov qword [rsp + 0x58], rax
0x0000788d      31c0           xor eax, eax
0x0000788f      41807c241000   cmp byte [r12 + 0x10], 0
0x00007895      7551           jne 0x78e8
0x00007897      4885f6         test rsi, rsi
0x0000789a      0f8878010000   js 0x7a18
0x000078a0      660fefc0       pxor xmm0, xmm0
0x000078a4      f3480f2ac6     cvtsi2ss xmm0, rsi                      ; ../coreutils-8.31/lib/hash.c:156
0x000078a9      f3410f5e4424.  divss xmm0, dword [r12 + 8]
0x000078b0      0f2e05b55100.  ucomiss xmm0, dword [0x0000ca6c]
0x000078b7      0f8333010000   jae 0x79f0
0x000078bd      0f2e05ac5100.  ucomiss xmm0, dword [0x0000ca70]
0x000078c4      0f8276010000   jb 0x7a40
0x000078ca      f30f5c059e51.  subss xmm0, dword [0x0000ca70]          ; ../coreutils-8.31/lib/hash.c:161
0x000078d2      48b800000000.  movabs rax, 0x8000000000000000
0x000078dc      f3480f2cf0     cvttss2si rsi, xmm0
0x000078e1      4831c6         xor rsi, rax                            ; ../coreutils-8.31/lib/bitrotate.h:35
0x000078e4      0f1f4000       nop dword [rax]
0x000078e8      4889f7         mov rdi, rsi
0x000078eb      e8e0f3ffff     call sym.next_prime
0x000078f0      ba08000000     mov edx, 8
0x000078f5      4889c3         mov rbx, rax
0x000078f8      31c9           xor ecx, ecx
0x000078fa      4889d0         mov rax, rdx
0x000078fd      48f7e3         mul rbx
0x00007900      0f8099010000   jo 0x7a9f
0x00007906      4885c0         test rax, rax
0x00007909      b801000000     mov eax, 1
0x0000790e      480f48c8       cmovs rcx, rax
0x00007912      4885db         test rbx, rbx
0x00007915      0f84d5000000   je 0x79f0
0x0000791b      83e101         and ecx, 1
0x0000791e      0f85cc000000   jne 0x79f0
0x00007924      48395d10       cmp qword [rbp + 0x10], rbx
0x00007928      0f8422010000   je 0x7a50
0x0000792e      be10000000     mov esi, 0x10
0x00007933      4889df         mov rdi, rbx
0x00007936      e8f5a3ffff     call sym.imp.calloc
0x0000793b      4885c0         test rax, rax
0x0000793e      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/bitrotate.h:-72
0x00007942      0f84a8000000   je 0x79f0
0x00007948      48895c2410     mov qword [rsp + 0x10], rbx
0x0000794d      48c1e304       shl rbx, 4
0x00007951      4c89642428     mov qword [rsp + 0x28], r12
0x00007956      4801c3         add rbx, rax
0x00007959      488b4530       mov rax, qword [rbp + 0x30]
0x0000795d      4989e4         mov r12, rsp
0x00007960      31d2           xor edx, edx
0x00007962      4889ee         mov rsi, rbp
0x00007965      4c89e7         mov rdi, r12
0x00007968      48895c2408     mov qword [rsp + 8], rbx
0x0000796d      48c744241800.  mov qword [rsp + 0x18], 0
0x00007976      4889442430     mov qword [rsp + 0x30], rax
0x0000797b      488b4538       mov rax, qword [rbp + 0x38]
0x0000797f      48c744242000.  mov qword [rsp + 0x20], 0
0x00007988      4889442438     mov qword [rsp + 0x38], rax
0x0000798d      488b4540       mov rax, qword [rbp + 0x40]
0x00007991      4889442440     mov qword [rsp + 0x40], rax
0x00007996      488b4548       mov rax, qword [rbp + 0x48]
0x0000799a      4889442448     mov qword [rsp + 0x48], rax
0x0000799f      e8bcf5ffff     call sym.transfer_entries
0x000079a4      84c0           test al, al
0x000079a6      89c3           mov ebx, eax
0x000079a8      0f85b2000000   jne 0x7a60
0x000079ae      488b442448     mov rax, qword [rsp + 0x48]
0x000079b3      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/bitrotate.h:-53
0x000079b8      4c89e6         mov rsi, r12
0x000079bb      4889ef         mov rdi, rbp
0x000079be      48894548       mov qword [rbp + 0x48], rax
0x000079c2      e899f5ffff     call sym.transfer_entries
0x000079c7      84c0           test al, al
0x000079c9      0f84da000000   je 0x7aa9
0x000079cf      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/bitrotate.h:-43
0x000079d1      4c89e6         mov rsi, r12
0x000079d4      4889ef         mov rdi, rbp
0x000079d7      e884f5ffff     call sym.transfer_entries
0x000079dc      84c0           test al, al
0x000079de      0f84c5000000   je 0x7aa9
0x000079e4      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/bitrotate.h:-38
0x000079e8      e803a1ffff     call sym.imp.free
0x000079ed      eb03           jmp 0x79f2
0x000079ef      90             nop
0x000079f0      31db           xor ebx, ebx
0x000079f2      488b4c2458     mov rcx, qword [rsp + 0x58]
0x000079f7      6448330c2528.  xor rcx, qword fs:[0x28]
0x00007a00      89d8           mov eax, ebx
0x00007a02      0f8592000000   jne 0x7a9a
0x00007a08      4883c460       add rsp, 0x60
0x00007a0c      5b             pop rbx
0x00007a0d      5d             pop rbp
0x00007a0e      415c           pop r12
0x00007a10      c3             ret
0x00007a11      0f1f80000000.  nop dword [rax]
0x00007a18      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/bitrotate.h:-37
0x00007a1b      660fefc0       pxor xmm0, xmm0
0x00007a1f      48d1e8         shr rax, 1
0x00007a22      83e601         and esi, 1
0x00007a25      4809f0         or rax, rsi
0x00007a28      f3480f2ac0     cvtsi2ss xmm0, rax
0x00007a2d      f30f58c0       addss xmm0, xmm0
0x00007a31      e973feffff     jmp 0x78a9
0x00007a36      662e0f1f8400.  nop word cs:[rax + rax]
0x00007a40      f3480f2cf0     cvttss2si rsi, xmm0
0x00007a45      e99efeffff     jmp 0x78e8
0x00007a4a      660f1f440000   nop word [rax + rax]
0x00007a50      bb01000000     mov ebx, 1
0x00007a55      eb9b           jmp 0x79f2
0x00007a57      660f1f840000.  nop word [rax + rax]
0x00007a60      488b7d00       mov rdi, qword [rbp]
0x00007a64      e887a0ffff     call sym.imp.free
0x00007a69      488b0424       mov rax, qword [rsp]
0x00007a6d      48894500       mov qword [rbp], rax
0x00007a71      488b442408     mov rax, qword [rsp + 8]
0x00007a76      48894508       mov qword [rbp + 8], rax
0x00007a7a      488b442410     mov rax, qword [rsp + 0x10]
0x00007a7f      48894510       mov qword [rbp + 0x10], rax
0x00007a83      488b442418     mov rax, qword [rsp + 0x18]
0x00007a88      48894518       mov qword [rbp + 0x18], rax
0x00007a8c      488b442448     mov rax, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/bitrotate.h:-12
0x00007a91      48894548       mov qword [rbp + 0x48], rax
0x00007a95      e958ffffff     jmp 0x79f2
0x00007a9a      e871a1ffff     call sym.imp.__stack_chk_fail
0x00007a9f      b901000000     mov ecx, 1
0x00007aa4      e95dfeffff     jmp 0x7906
0x00007aa9      e852a0ffff     call sym.imp.abort
0x00007aae      6690           nop
;-- hash_insert_if_absent:
0x00007ab0      4155           push r13
0x00007ab2      4154           push r12
0x00007ab4      55             push rbp
0x00007ab5      53             push rbx
0x00007ab6      4883ec18       sub rsp, 0x18
0x00007aba      64488b042528.  mov rax, qword fs:[0x28]
0x00007ac3      4889442408     mov qword [rsp + 8], rax
0x00007ac8      31c0           xor eax, eax
0x00007aca      4885f6         test rsi, rsi
0x00007acd      0f84ba010000   je 0x7c8d
0x00007ad3      4989e4         mov r12, rsp
0x00007ad6      31c9           xor ecx, ecx
0x00007ad8      4989d5         mov r13, rdx
0x00007adb      4c89e2         mov rdx, r12
0x00007ade      4889fb         mov rbx, rdi
0x00007ae1      4889f5         mov rbp, rsi
0x00007ae4      e8d7f2ffff     call sym.hash_find_entry
0x00007ae9      4885c0         test rax, rax
0x00007aec      4889c2         mov rdx, rax
0x00007aef      742f           je 0x7b20
0x00007af1      31c0           xor eax, eax
0x00007af3      4d85ed         test r13, r13
0x00007af6      7404           je 0x7afc
0x00007af8      49895500       mov qword [r13], rdx
0x00007afc      488b4c2408     mov rcx, qword [rsp + 8]
0x00007b01      6448330c2528.  xor rcx, qword fs:[0x28]
0x00007b0a      0f851f020000   jne 0x7d2f
0x00007b10      4883c418       add rsp, 0x18
0x00007b14      5b             pop rbx
0x00007b15      5d             pop rbp
0x00007b16      415c           pop r12
0x00007b18      415d           pop r13
0x00007b1a      c3             ret
0x00007b1b      0f1f440000     nop dword [rax + rax]
0x00007b20      488b4318       mov rax, qword [rbx + 0x18]
0x00007b24      4885c0         test rax, rax
0x00007b27      7877           js 0x7ba0
0x00007b29      660fefc9       pxor xmm1, xmm1
0x00007b2d      488b5328       mov rdx, qword [rbx + 0x28]
0x00007b31      f3480f2ac8     cvtsi2ss xmm1, rax
0x00007b36      488b4310       mov rax, qword [rbx + 0x10]
0x00007b3a      4885c0         test rax, rax
0x00007b3d      0f8887000000   js 0x7bca
0x00007b43      660fefc0       pxor xmm0, xmm0
0x00007b47      f3480f2ac0     cvtsi2ss xmm0, rax
0x00007b4c      f30f594208     mulss xmm0, dword [rdx + 8]             ; ../coreutils-8.31/lib/bitrotate.h:15
0x00007b51      0f2ec8         ucomiss xmm1, xmm0
0x00007b54      0f8796000000   ja 0x7bf0
0x00007b5a      4c8b2424       mov r12, qword [rsp]
0x00007b5e      49833c2400     cmp qword [r12], 0
0x00007b63      0f842f010000   je 0x7c98
0x00007b69      488b4348       mov rax, qword [rbx + 0x48]
0x00007b6d      4885c0         test rax, rax
0x00007b70      0f843a010000   je 0x7cb0
0x00007b76      488b5008       mov rdx, qword [rax + 8]
0x00007b7a      48895348       mov qword [rbx + 0x48], rdx
0x00007b7e      498b542408     mov rdx, qword [r12 + 8]
0x00007b83      488928         mov qword [rax], rbp
0x00007b86      48895008       mov qword [rax + 8], rdx
0x00007b8a      4989442408     mov qword [r12 + 8], rax
0x00007b8f      b801000000     mov eax, 1
0x00007b94      4883432001     add qword [rbx + 0x20], 1
0x00007b99      e95effffff     jmp 0x7afc
0x00007b9e      6690           nop
0x00007ba0      4889c2         mov rdx, rax
0x00007ba3      660fefc9       pxor xmm1, xmm1
0x00007ba7      83e001         and eax, 1
0x00007baa      48d1ea         shr rdx, 1
0x00007bad      4809c2         or rdx, rax
0x00007bb0      488b4310       mov rax, qword [rbx + 0x10]
0x00007bb4      f3480f2aca     cvtsi2ss xmm1, rdx                      ; ../coreutils-8.31/lib/bitrotate.h:-3
0x00007bb9      488b5328       mov rdx, qword [rbx + 0x28]
0x00007bbd      4885c0         test rax, rax
0x00007bc0      f30f58c9       addss xmm1, xmm1
0x00007bc4      0f8979ffffff   jns 0x7b43
0x00007bca      4889c1         mov rcx, rax
0x00007bcd      660fefc0       pxor xmm0, xmm0
0x00007bd1      48d1e9         shr rcx, 1
0x00007bd4      83e001         and eax, 1                              ; ../coreutils-8.31/lib/bitrotate.h:1
0x00007bd7      4809c1         or rcx, rax
0x00007bda      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00007bdf      f30f58c0       addss xmm0, xmm0
0x00007be3      e964ffffff     jmp 0x7b4c
0x00007be8      0f1f84000000.  nop dword [rax + rax]
0x00007bf0      488d7b28       lea rdi, [rbx + 0x28]
0x00007bf4      e8e7f2ffff     call sym.check_tuning.isra.0
0x00007bf9      488b4310       mov rax, qword [rbx + 0x10]
0x00007bfd      488b5328       mov rdx, qword [rbx + 0x28]
0x00007c01      4885c0         test rax, rax
0x00007c04      f30f105208     movss xmm2, dword [rdx + 8]
0x00007c09      0f88c1000000   js 0x7cd0
0x00007c0f      660fefc0       pxor xmm0, xmm0
0x00007c13      f3480f2ac0     cvtsi2ss xmm0, rax
0x00007c18      488b4318       mov rax, qword [rbx + 0x18]
0x00007c1c      4885c0         test rax, rax
0x00007c1f      0f88cb000000   js 0x7cf0
0x00007c25      660fefc9       pxor xmm1, xmm1
0x00007c29      f3480f2ac8     cvtsi2ss xmm1, rax
0x00007c2e      0f28da         movaps xmm3, xmm2
0x00007c31      f30f59d8       mulss xmm3, xmm0
0x00007c35      0f2ecb         ucomiss xmm1, xmm3
0x00007c38      0f861cffffff   jbe 0x7b5a
0x00007c3e      807a1000       cmp byte [rdx + 0x10], 0
0x00007c42      f30f59420c     mulss xmm0, dword [rdx + 0xc]
0x00007c47      7504           jne 0x7c4d
0x00007c49      f30f59c2       mulss xmm0, xmm2
0x00007c4d      0f2e05184e00.  ucomiss xmm0, dword [0x0000ca6c]
0x00007c54      736d           jae 0x7cc3
0x00007c56      0f2e05134e00.  ucomiss xmm0, dword [0x0000ca70]
0x00007c5d      0f83ad000000   jae 0x7d10
0x00007c63      f3480f2cf0     cvttss2si rsi, xmm0
0x00007c68      4889df         mov rdi, rbx
0x00007c6b      e800fcffff     call sym.hash_rehash
0x00007c70      84c0           test al, al
0x00007c72      744f           je 0x7cc3
0x00007c74      31c9           xor ecx, ecx
0x00007c76      4c89e2         mov rdx, r12
0x00007c79      4889ee         mov rsi, rbp
0x00007c7c      4889df         mov rdi, rbx
0x00007c7f      e83cf1ffff     call sym.hash_find_entry
0x00007c84      4885c0         test rax, rax
0x00007c87      0f84cdfeffff   je 0x7b5a
0x00007c8d      e86e9effff     call sym.imp.abort
0x00007c92      660f1f440000   nop word [rax + rax]
0x00007c98      49892c24       mov qword [r12], rbp
0x00007c9c      b801000000     mov eax, 1
0x00007ca1      4883432001     add qword [rbx + 0x20], 1
0x00007ca6      4883431801     add qword [rbx + 0x18], 1
0x00007cab      e94cfeffff     jmp 0x7afc
0x00007cb0      bf10000000     mov edi, 0x10
0x00007cb5      e806a1ffff     call sym.imp.malloc
0x00007cba      4885c0         test rax, rax
0x00007cbd      0f85bbfeffff   jne 0x7b7e
0x00007cc3      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00007cc8      e92ffeffff     jmp 0x7afc
0x00007ccd      0f1f00         nop dword [rax]
0x00007cd0      4889c1         mov rcx, rax
0x00007cd3      660fefc0       pxor xmm0, xmm0
0x00007cd7      48d1e9         shr rcx, 1
0x00007cda      83e001         and eax, 1
0x00007cdd      4809c1         or rcx, rax
0x00007ce0      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00007ce5      f30f58c0       addss xmm0, xmm0
0x00007ce9      e92affffff     jmp 0x7c18
0x00007cee      6690           nop
0x00007cf0      4889c1         mov rcx, rax
0x00007cf3      660fefc9       pxor xmm1, xmm1
0x00007cf7      48d1e9         shr rcx, 1
0x00007cfa      83e001         and eax, 1
0x00007cfd      4809c1         or rcx, rax
0x00007d00      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00007d05      f30f58c9       addss xmm1, xmm1
0x00007d09      e920ffffff     jmp 0x7c2e
0x00007d0e      6690           nop
0x00007d10      f30f5c05584d.  subss xmm0, dword [0x0000ca70]
0x00007d18      48b800000000.  movabs rax, 0x8000000000000000
0x00007d22      f3480f2cf0     cvttss2si rsi, xmm0
0x00007d27      4831c6         xor rsi, rax
0x00007d2a      e939ffffff     jmp 0x7c68
0x00007d2f      e8dc9effff     call sym.imp.__stack_chk_fail
0x00007d34      6690           nop
0x00007d36      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_insert:
0x00007d40      53             push rbx
0x00007d41      4889f3         mov rbx, rsi
0x00007d44      4883ec10       sub rsp, 0x10
0x00007d48      4889e2         mov rdx, rsp
0x00007d4b      64488b042528.  mov rax, qword fs:[0x28]
0x00007d54      4889442408     mov qword [rsp + 8], rax
0x00007d59      31c0           xor eax, eax
0x00007d5b      e850fdffff     call sym.hash_insert_if_absent
0x00007d60      83f8ff         cmp eax, 0xffffffff
0x00007d63      742b           je 0x7d90
0x00007d65      85c0           test eax, eax
0x00007d67      7504           jne 0x7d6d
0x00007d69      488b1c24       mov rbx, qword [rsp]
0x00007d6d      488b4c2408     mov rcx, qword [rsp + 8]
0x00007d72      6448330c2528.  xor rcx, qword fs:[0x28]
0x00007d7b      4889d8         mov rax, rbx
0x00007d7e      7514           jne 0x7d94
0x00007d80      4883c410       add rsp, 0x10
0x00007d84      5b             pop rbx
0x00007d85      c3             ret
0x00007d86      662e0f1f8400.  nop word cs:[rax + rax]
0x00007d90      31db           xor ebx, ebx
0x00007d92      ebd9           jmp 0x7d6d
0x00007d94      e8779effff     call sym.imp.__stack_chk_fail
0x00007d99      0f1f80000000.  nop dword [rax]
;-- hash_delete:
0x00007da0      4154           push r12
0x00007da2      55             push rbp
0x00007da3      b901000000     mov ecx, 1
0x00007da8      53             push rbx
0x00007da9      4889fb         mov rbx, rdi
0x00007dac      4883ec10       sub rsp, 0x10
0x00007db0      4889e2         mov rdx, rsp
0x00007db3      64488b042528.  mov rax, qword fs:[0x28]
0x00007dbc      4889442408     mov qword [rsp + 8], rax
0x00007dc1      31c0           xor eax, eax
0x00007dc3      e8f8efffff     call sym.hash_find_entry
0x00007dc8      4885c0         test rax, rax
0x00007dcb      4889c5         mov rbp, rax
0x00007dce      740f           je 0x7ddf
0x00007dd0      488b0424       mov rax, qword [rsp]
0x00007dd4      48836b2001     sub qword [rbx + 0x20], 1
0x00007dd9      48833800       cmp qword [rax], 0
0x00007ddd      7421           je 0x7e00
0x00007ddf      488b4c2408     mov rcx, qword [rsp + 8]
0x00007de4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00007ded      4889e8         mov rax, rbp
0x00007df0      0f85a8010000   jne 0x7f9e
0x00007df6      4883c410       add rsp, 0x10
0x00007dfa      5b             pop rbx
0x00007dfb      5d             pop rbp
0x00007dfc      415c           pop r12
0x00007dfe      c3             ret
0x00007dff      90             nop
0x00007e00      488b4318       mov rax, qword [rbx + 0x18]
0x00007e04      4883e801       sub rax, 1
0x00007e08      4885c0         test rax, rax
0x00007e0b      48894318       mov qword [rbx + 0x18], rax
0x00007e0f      0f88fb000000   js 0x7f10
0x00007e15      660fefc0       pxor xmm0, xmm0
0x00007e19      f3480f2ac0     cvtsi2ss xmm0, rax
0x00007e1e      488b4310       mov rax, qword [rbx + 0x10]
0x00007e22      488b5328       mov rdx, qword [rbx + 0x28]
0x00007e26      4885c0         test rax, rax
0x00007e29      0f88c1000000   js 0x7ef0
0x00007e2f      660fefc9       pxor xmm1, xmm1
0x00007e33      f3480f2ac8     cvtsi2ss xmm1, rax
0x00007e38      f30f590a       mulss xmm1, dword [rdx]
0x00007e3c      0f2ec8         ucomiss xmm1, xmm0
0x00007e3f      769e           jbe 0x7ddf
0x00007e41      488d7b28       lea rdi, [rbx + 0x28]
0x00007e45      e896f0ffff     call sym.check_tuning.isra.0
0x00007e4a      488b4310       mov rax, qword [rbx + 0x10]
0x00007e4e      488b5328       mov rdx, qword [rbx + 0x28]
0x00007e52      4885c0         test rax, rax
0x00007e55      0f8825010000   js 0x7f80
0x00007e5b      660fefc0       pxor xmm0, xmm0
0x00007e5f      f3480f2ac0     cvtsi2ss xmm0, rax
0x00007e64      488b4318       mov rax, qword [rbx + 0x18]
0x00007e68      4885c0         test rax, rax
0x00007e6b      0f88ef000000   js 0x7f60
0x00007e71      660fefc9       pxor xmm1, xmm1
0x00007e75      f3480f2ac8     cvtsi2ss xmm1, rax
0x00007e7a      f30f1012       movss xmm2, dword [rdx]
0x00007e7e      f30f59d0       mulss xmm2, xmm0
0x00007e82      0f2ed1         ucomiss xmm2, xmm1
0x00007e85      0f8654ffffff   jbe 0x7ddf
0x00007e8b      807a1000       cmp byte [rdx + 0x10], 0
0x00007e8f      f30f594204     mulss xmm0, dword [rdx + 4]
0x00007e94      0f84b6000000   je 0x7f50
0x00007e9a      0f2e05cf4b00.  ucomiss xmm0, dword [0x0000ca70]
0x00007ea1      0f8389000000   jae 0x7f30
0x00007ea7      f3480f2cf0     cvttss2si rsi, xmm0
0x00007eac      4889df         mov rdi, rbx
0x00007eaf      e8bcf9ffff     call sym.hash_rehash
0x00007eb4      84c0           test al, al
0x00007eb6      0f8523ffffff   jne 0x7ddf
0x00007ebc      488b7b48       mov rdi, qword [rbx + 0x48]
0x00007ec0      4885ff         test rdi, rdi
0x00007ec3      7414           je 0x7ed9
0x00007ec5      0f1f00         nop dword [rax]
0x00007ec8      4c8b6708       mov r12, qword [rdi + 8]
0x00007ecc      e81f9cffff     call sym.imp.free
0x00007ed1      4d85e4         test r12, r12
0x00007ed4      4c89e7         mov rdi, r12
0x00007ed7      75ef           jne 0x7ec8
0x00007ed9      48c743480000.  mov qword [rbx + 0x48], 0
0x00007ee1      e9f9feffff     jmp 0x7ddf
0x00007ee6      662e0f1f8400.  nop word cs:[rax + rax]
0x00007ef0      4889c1         mov rcx, rax
0x00007ef3      660fefc9       pxor xmm1, xmm1
0x00007ef7      48d1e9         shr rcx, 1
0x00007efa      83e001         and eax, 1
0x00007efd      4809c1         or rcx, rax
0x00007f00      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00007f05      f30f58c9       addss xmm1, xmm1
0x00007f09      e92affffff     jmp 0x7e38
0x00007f0e      6690           nop
0x00007f10      4889c2         mov rdx, rax
0x00007f13      660fefc0       pxor xmm0, xmm0
0x00007f17      48d1ea         shr rdx, 1
0x00007f1a      83e001         and eax, 1
0x00007f1d      4809c2         or rdx, rax
0x00007f20      f3480f2ac2     cvtsi2ss xmm0, rdx
0x00007f25      f30f58c0       addss xmm0, xmm0
0x00007f29      e9f0feffff     jmp 0x7e1e
0x00007f2e      6690           nop
0x00007f30      f30f5c05384b.  subss xmm0, dword [0x0000ca70]
0x00007f38      48b800000000.  movabs rax, 0x8000000000000000
0x00007f42      f3480f2cf0     cvttss2si rsi, xmm0
0x00007f47      4831c6         xor rsi, rax
0x00007f4a      e95dffffff     jmp 0x7eac
0x00007f4f      90             nop
0x00007f50      f30f594208     mulss xmm0, dword [rdx + 8]
0x00007f55      e940ffffff     jmp 0x7e9a
0x00007f5a      660f1f440000   nop word [rax + rax]
0x00007f60      4889c1         mov rcx, rax
0x00007f63      660fefc9       pxor xmm1, xmm1
0x00007f67      48d1e9         shr rcx, 1
0x00007f6a      83e001         and eax, 1
0x00007f6d      4809c1         or rcx, rax
0x00007f70      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00007f75      f30f58c9       addss xmm1, xmm1
0x00007f79      e9fcfeffff     jmp 0x7e7a
0x00007f7e      6690           nop
0x00007f80      4889c1         mov rcx, rax
0x00007f83      660fefc0       pxor xmm0, xmm0
0x00007f87      48d1e9         shr rcx, 1
0x00007f8a      83e001         and eax, 1
0x00007f8d      4809c1         or rcx, rax
0x00007f90      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00007f95      f30f58c0       addss xmm0, xmm0
0x00007f99      e9c6feffff     jmp 0x7e64
0x00007f9e      e86d9cffff     call sym.imp.__stack_chk_fail
0x00007fa3      662e0f1f8400.  nop word cs:[rax + rax]
0x00007fad      0f1f00         nop dword [rax]
;-- offtostr:
0x00007fb0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/anytostr.c:37
0x00007fb3      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:38
0x00007fb7      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x00007fbb      49b967666666.  movabs r9, 0x6666666666666667           ; ../coreutils-8.31/lib/anytostr.c:44 ; 'gfffffff'
0x00007fc5      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x00007fcf      41b830000000   mov r8d, 0x30                           ; ../coreutils-8.31/lib/anytostr.c:44 ; '0'
0x00007fd5      783c           js 0x8013                               ; ../coreutils-8.31/lib/anytostr.c:41
0x00007fd7      660f1f840000.  nop word [rax + rax]
0x00007fe0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/anytostr.c:52
0x00007fe3      4883e901       sub rcx, 1
0x00007fe7      48f7e6         mul rsi
0x00007fea      48c1ea03       shr rdx, 3
0x00007fee      488d0492       lea rax, [rdx + rdx*4]
0x00007ff2      4801c0         add rax, rax
0x00007ff5      4829c7         sub rdi, rax
0x00007ff8      83c730         add edi, 0x30
0x00007ffb      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x00007ffe      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x00008001      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x00008004      75da           jne 0x7fe0
0x00008006      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x00008009      c3             ret
0x0000800a      660f1f440000   nop word [rax + rax]
0x00008010      4889f1         mov rcx, rsi
0x00008013      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/anytostr.c:44
0x00008016      488d71ff       lea rsi, [rcx - 1]
0x0000801a      49f7e9         imul r9
0x0000801d      4889f8         mov rax, rdi
0x00008020      48c1f83f       sar rax, 0x3f
0x00008024      48c1fa02       sar rdx, 2
0x00008028      4829c2         sub rdx, rax
0x0000802b      488d0492       lea rax, [rdx + rdx*4]
0x0000802f      418d0440       lea eax, [r8 + rax*2]
0x00008033      29f8           sub eax, edi
0x00008035      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:45
0x00008038      4889d7         mov rdi, rdx
0x0000803b      8841ff         mov byte [rcx - 1], al                  ; ../coreutils-8.31/lib/anytostr.c:44
0x0000803e      75d0           jne 0x8010                              ; ../coreutils-8.31/lib/anytostr.c:45
0x00008040      4883e902       sub rcx, 2                              ; ../coreutils-8.31/lib/anytostr.c:47
0x00008044      c646ff2d       mov byte [rsi - 1], 0x2d                ; '-'
                                                                       ; [0x2d:1]=0
0x00008048      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x0000804b      c3             ret
0x0000804c      0f1f4000       nop dword [rax]
;-- posix2_version:
0x00008050      53             push rbx                                ; ../coreutils-8.31/lib/posixver.c:41
0x00008051      488d3d284a00.  lea rdi, [0x0000ca80]                   ; ../coreutils-8.31/lib/posixver.c:43 ; "_POSIX2_VERSION"
0x00008058      bb69100300     mov ebx, 0x31069
0x0000805d      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/posixver.c:41
0x00008061      64488b042528.  mov rax, qword fs:[0x28]
0x0000806a      4889442408     mov qword [rsp + 8], rax
0x0000806f      31c0           xor eax, eax
0x00008071      e85a9affff     call sym.imp.getenv                     ; ../coreutils-8.31/lib/posixver.c:43
0x00008076      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/posixver.c:45
0x00008079      7405           je 0x8080
0x0000807b      803800         cmp byte [rax], 0
0x0000807e      7520           jne 0x80a0
0x00008080      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/posixver.c:54
0x00008085      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000808e      89d8           mov eax, ebx
0x00008090      7547           jne 0x80d9
0x00008092      4883c410       add rsp, 0x10
0x00008096      5b             pop rbx
0x00008097      c3             ret
0x00008098      0f1f84000000.  nop dword [rax + rax]
0x000080a0      ba0a000000     mov edx, 0xa                            ; ../coreutils-8.31/lib/posixver.c:48
0x000080a5      4889e6         mov rsi, rsp
0x000080a8      4889c7         mov rdi, rax
0x000080ab      e8a09cffff     call sym.imp.strtol
0x000080b0      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/posixver.c:49
0x000080b4      803a00         cmp byte [rdx], 0
0x000080b7      75c7           jne 0x8080
0x000080b9      483d00000080   cmp rax, 0xffffffff80000000             ; ../coreutils-8.31/lib/posixver.c:53
0x000080bf      7c11           jl 0x80d2
0x000080c1      483dffffff7f   cmp rax, 0x7fffffff
0x000080c7      bbffffff7f     mov ebx, 0x7fffffff
0x000080cc      480f4ed8       cmovle rbx, rax
0x000080d0      ebae           jmp 0x8080
0x000080d2      bb00000080     mov ebx, 0x80000000
0x000080d7      eba7           jmp 0x8080
0x000080d9      e8329bffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/posixver.c:54
0x000080de      6690           nop
;-- set_program_name:
0x000080e0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x000080e3      53             push rbx
0x000080e4      7477           je 0x815d                               ; ../coreutils-8.31/lib/progname.c:51
0x000080e6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x000080eb      4889fb         mov rbx, rdi
0x000080ee      e89d9bffff     call sym.imp.strrchr
0x000080f3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x000080f6      7455           je 0x814d
0x000080f8      4c8d4001       lea r8, [rax + 1]
0x000080fc      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x000080ff      4829da         sub rdx, rbx
0x00008102      4883fa06       cmp rdx, 6
0x00008106      7e45           jle 0x814d
0x00008108      488d70fa       lea rsi, [rax - 6]
0x0000810c      488d3db54900.  lea rdi, str..libs                      ; 0xcac8 ; "/.libs/"
0x00008113      b907000000     mov ecx, 7
0x00008118      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000811a      0f97c2         seta dl
0x0000811d      80da00         sbb dl, 0
0x00008120      84d2           test dl, dl
0x00008122      7529           jne 0x814d
0x00008124      488d3da54900.  lea rdi, [0x0000cad0]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000812b      b903000000     mov ecx, 3
0x00008130      4c89c6         mov rsi, r8
0x00008133      4c89c3         mov rbx, r8
0x00008136      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00008138      0f97c2         seta dl
0x0000813b      80da00         sbb dl, 0
0x0000813e      84d2           test dl, dl
0x00008140      750b           jne 0x814d
0x00008142      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00008146      48891d737f20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x2100c0:8]=0
0x0000814d      48891ddc7f20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x210130:8]=0
0x00008154      48891d857f20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2100e0:8]=0
0x0000815b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000815c      c3             ret
0x0000815d      488b0d9c7f20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x210100:8]=0
0x00008164      488d3d254900.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0xca90 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000816b      ba37000000     mov edx, 0x37                           ; '7'
0x00008170      be01000000     mov esi, 1
0x00008175      e8569dffff     call sym.imp.fwrite
0x0000817a      e88199ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000817f      90             nop
;-- gettext_quote.part.1:
0x00008180      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00008181      53             push rbx
0x00008182      4889fd         mov rbp, rdi
0x00008185      89f3           mov ebx, esi
0x00008187      4883ec08       sub rsp, 8
0x0000818b      e860320000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00008190      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00008193      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00008196      80fa55         cmp dl, 0x55
0x00008199      7475           je 0x8210
0x0000819b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000819e      7420           je 0x81c0
0x000081a0      488d053c4900.  lea rax, str.l______l                   ; 0xcae3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000081a7      488d15374900.  lea rdx, [0x0000cae5]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000081ae      83fb09         cmp ebx, 9
0x000081b1      480f45c2       cmovne rax, rdx
0x000081b5      4883c408       add rsp, 8
0x000081b9      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x000081ba      5d             pop rbp
0x000081bb      c3             ret
0x000081bc      0f1f4000       nop dword [rax]
0x000081c0      0fb65001       movzx edx, byte [rax + 1]
0x000081c4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000081c7      80fa42         cmp dl, 0x42
0x000081ca      75d4           jne 0x81a0
0x000081cc      80780231       cmp byte [rax + 2], 0x31
0x000081d0      75ce           jne 0x81a0
0x000081d2      80780338       cmp byte [rax + 3], 0x38
0x000081d6      75c8           jne 0x81a0
0x000081d8      80780430       cmp byte [rax + 4], 0x30
0x000081dc      75c2           jne 0x81a0
0x000081de      80780533       cmp byte [rax + 5], 0x33
0x000081e2      75bc           jne 0x81a0
0x000081e4      80780630       cmp byte [rax + 6], 0x30
0x000081e8      75b6           jne 0x81a0
0x000081ea      80780700       cmp byte [rax + 7], 0
0x000081ee      75b0           jne 0x81a0
0x000081f0      807d0060       cmp byte [rbp], 0x60
0x000081f4      488d05e14800.  lea rax, [0x0000cadc]
0x000081fb      488d15de4800.  lea rdx, [0x0000cae0]
0x00008202      480f45c2       cmovne rax, rdx
0x00008206      4883c408       add rsp, 8
0x0000820a      5b             pop rbx
0x0000820b      5d             pop rbp
0x0000820c      c3             ret
0x0000820d      0f1f00         nop dword [rax]
0x00008210      0fb65001       movzx edx, byte [rax + 1]
0x00008214      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00008217      80fa54         cmp dl, 0x54
0x0000821a      7584           jne 0x81a0
0x0000821c      0fb65002       movzx edx, byte [rax + 2]
0x00008220      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00008223      80fa46         cmp dl, 0x46
0x00008226      0f8574ffffff   jne 0x81a0
0x0000822c      8078032d       cmp byte [rax + 3], 0x2d
0x00008230      0f856affffff   jne 0x81a0
0x00008236      80780438       cmp byte [rax + 4], 0x38
0x0000823a      0f8560ffffff   jne 0x81a0
0x00008240      80780500       cmp byte [rax + 5], 0
0x00008244      0f8556ffffff   jne 0x81a0
0x0000824a      807d0060       cmp byte [rbp], 0x60
0x0000824e      488d057f4800.  lea rax, [0x0000cad4]                   ; "\u2018"
0x00008255      488d157c4800.  lea rdx, [0x0000cad8]                   ; "\u2019"
0x0000825c      480f45c2       cmovne rax, rdx
0x00008260      4883c408       add rsp, 8
0x00008264      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00008265      5d             pop rbp
0x00008266      c3             ret
0x00008267      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00008270      4157           push r15
0x00008272      4156           push r14
0x00008274      4589c7         mov r15d, r8d
0x00008277      4155           push r13
0x00008279      4154           push r12
0x0000827b      4989fe         mov r14, rdi
0x0000827e      55             push rbp
0x0000827f      53             push rbx
0x00008280      4489cb         mov ebx, r9d
0x00008283      4989f5         mov r13, rsi
0x00008286      4889cd         mov rbp, rcx
0x00008289      83e302         and ebx, 2
0x0000828c      4881ecb80000.  sub rsp, 0xb8
0x00008293      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000829b      4889542410     mov qword [rsp + 0x10], rdx
0x000082a0      4489442408     mov dword [rsp + 8], r8d
0x000082a5      44894c2478     mov dword [rsp + 0x78], r9d
0x000082aa      4889442420     mov qword [rsp + 0x20], rax
0x000082af      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x000082b7      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x000082bc      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x000082c4      4889442460     mov qword [rsp + 0x60], rax
0x000082c9      64488b042528.  mov rax, qword fs:[0x28]
0x000082d2      48898424a800.  mov qword [rsp + 0xa8], rax
0x000082da      31c0           xor eax, eax
0x000082dc      e8ff98ffff     call sym.imp.__ctype_get_mb_cur_max
0x000082e1      4183ff0a       cmp r15d, 0xa
0x000082e5      4889442458     mov qword [rsp + 0x58], rax
0x000082ea      0f87af110000   ja 0x949f
0x000082f0      488d0d494800.  lea rcx, [0x0000cb40]
0x000082f7      4489fa         mov edx, r15d
0x000082fa      48630491       movsxd rax, dword [rcx + rdx*4]
0x000082fe      4801c8         add rax, rcx
0x00008301      ffe0           jmp rax
0x00008303      c644240e01     mov byte [rsp + 0xe], 1
0x00008308      c644247c00     mov byte [rsp + 0x7c], 0
0x0000830d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00008310      48c744245000.  mov qword [rsp + 0x50], 0
0x00008319      c644240f01     mov byte [rsp + 0xf], 1
0x0000831e      c644240d00     mov byte [rsp + 0xd], 0
0x00008323      488d05bb4700.  lea rax, [0x0000cae5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000832a      48c744241801.  mov qword [rsp + 0x18], 1
0x00008333      4531ff         xor r15d, r15d
0x00008336      c74424080200.  mov dword [rsp + 8], 2
0x0000833e      4889442448     mov qword [rsp + 0x48], rax
0x00008343      4531db         xor r11d, r11d
0x00008346      4889e8         mov rax, rbp
0x00008349      4589e0         mov r8d, r12d
0x0000834c      4c89dd         mov rbp, r11
0x0000834f      4989c3         mov r11, rax
0x00008352      660f1f440000   nop word [rax + rax]
0x00008358      4939eb         cmp r11, rbp
0x0000835b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000835f      4983fbff       cmp r11, 0xffffffffffffffff
0x00008363      750d           jne 0x8372
0x00008365      488b442410     mov rax, qword [rsp + 0x10]
0x0000836a      803c2800       cmp byte [rax + rbp], 0
0x0000836e      410f95c4       setne r12b
0x00008372      4584e4         test r12b, r12b
0x00008375      0f8455060000   je 0x89d0
0x0000837b      837c240802     cmp dword [rsp + 8], 2
0x00008380      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00008385      4c8d0c2f       lea r9, [rdi + rbp]
0x00008389      0f95c0         setne al
0x0000838c      2244240d       and al, byte [rsp + 0xd]
0x00008390      4189c2         mov r10d, eax
0x00008393      0f84a7000000   je 0x8440
0x00008399      488b442418     mov rax, qword [rsp + 0x18]
0x0000839e      4885c0         test rax, rax
0x000083a1      0f8429040000   je 0x87d0
0x000083a7      4983fbff       cmp r11, 0xffffffffffffffff
0x000083ab      488d5c0500     lea rbx, [rbp + rax]
0x000083b0      752e           jne 0x83e0
0x000083b2      4883f801       cmp rax, 1
0x000083b6      7628           jbe 0x83e0
0x000083b8      4488442438     mov byte [rsp + 0x38], r8b
0x000083bd      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x000083c2      4c894c2428     mov qword [rsp + 0x28], r9
0x000083c7      e82498ffff     call sym.imp.strlen
0x000083cc      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000083d2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x000083d8      4989c3         mov r11, rax
0x000083db      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000083e0      4c39db         cmp rbx, r11
0x000083e3      4488542428     mov byte [rsp + 0x28], r10b
0x000083e8      0f87b2050000   ja 0x89a0
0x000083ee      488b542418     mov rdx, qword [rsp + 0x18]
0x000083f3      488b742448     mov rsi, qword [rsp + 0x48]
0x000083f8      4c89cf         mov rdi, r9
0x000083fb      4c895c2440     mov qword [rsp + 0x40], r11
0x00008400      4488442438     mov byte [rsp + 0x38], r8b
0x00008405      4c894c2430     mov qword [rsp + 0x30], r9
0x0000840a      e80199ffff     call sym.imp.memcmp
0x0000840f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00008411      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00008416      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000841c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00008421      0f8579050000   jne 0x89a0
0x00008427      807c240f00     cmp byte [rsp + 0xf], 0
0x0000842c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00008432      0f857d0f0000   jne 0x93b5
0x00008438      0f1f84000000.  nop dword [rax + rax]
0x00008440      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00008444      80fb7e         cmp bl, 0x7e
0x00008447      0f871b030000   ja 0x8768
0x0000844d      488d0d184700.  lea rcx, [0x0000cb6c]
0x00008454      0fb6d3         movzx edx, bl
0x00008457      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000845b      4801c8         add rax, rcx
0x0000845e      ffe0           jmp rax
0x00008460      4531d2         xor r10d, r10d
0x00008463      4983fb01       cmp r11, 1
0x00008467      0f95c0         setne al
0x0000846a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000846e      750c           jne 0x847c
0x00008470      488b442410     mov rax, qword [rsp + 0x10]
0x00008475      80780100       cmp byte [rax + 1], 0
0x00008479      0f95c0         setne al
0x0000847c      837c240802     cmp dword [rsp + 8], 2
0x00008481      0f94c2         sete dl
0x00008484      84c0           test al, al
0x00008486      0f844c020000   je 0x86d8
0x0000848c      4531e4         xor r12d, r12d
0x0000848f      31c0           xor eax, eax
0x00008491      0f1f80000000.  nop dword [rax]
0x00008498      807c240d01     cmp byte [rsp + 0xd], 1
0x0000849d      0f850f010000   jne 0x85b2
0x000084a3      84d2           test dl, dl
0x000084a5      0f8507010000   jne 0x85b2
0x000084ab      488b742420     mov rsi, qword [rsp + 0x20]
0x000084b0      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x000084b3      7414           je 0x84c9
0x000084b5      89da           mov edx, ebx
0x000084b7      c0ea05         shr dl, 5
0x000084ba      0fb6d2         movzx edx, dl
0x000084bd      8b1496         mov edx, dword [rsi + rdx*4]
0x000084c0      0fa3da         bt edx, ebx
0x000084c3      0f824a010000   jb 0x8613
0x000084c9      4584d2         test r10b, r10b
0x000084cc      0f8541010000   jne 0x8613
0x000084d2      83f001         xor eax, 1
0x000084d5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x000084d9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x000084dc      84c0           test al, al
0x000084de      7420           je 0x8500                               ; ../coreutils-8.31/lib/quotearg.c:338
0x000084e0      4d39fd         cmp r13, r15
0x000084e3      7605           jbe 0x84ea
0x000084e5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000084ea      498d4701       lea rax, [r15 + 1]
0x000084ee      4939c5         cmp r13, rax
0x000084f1      7606           jbe 0x84f9
0x000084f3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000084f9      4983c702       add r15, 2
0x000084fd      4531c0         xor r8d, r8d
0x00008500      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00008503      7304           jae 0x8509                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00008505      43881c3e       mov byte [r14 + r15], bl
0x00008509      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000850e      4983c701       add r15, 1
0x00008512      b800000000     mov eax, 0
0x00008517      4584e4         test r12b, r12b
0x0000851a      0f44f8         cmove edi, eax
0x0000851d      40887c240e     mov byte [rsp + 0xe], dil
0x00008522      e931feffff     jmp 0x8358
0x00008527      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00008530      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00008533      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00008537      83f802         cmp eax, 2
0x0000853a      0f84b8050000   je 0x8af8
0x00008540      83f805         cmp eax, 5
0x00008543      0f846f050000   je 0x8ab8
0x00008549      83f802         cmp eax, 2
0x0000854c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00008551      0f94c2         sete dl
0x00008554      4531e4         xor r12d, r12d
0x00008557      31c0           xor eax, eax
0x00008559      e93affffff     jmp 0x8498
0x0000855e      6690           nop
0x00008560      4531d2         xor r10d, r10d
0x00008563      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00008568      0f8402050000   je 0x8a70
0x0000856e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00008573      31d2           xor edx, edx
0x00008575      31c0           xor eax, eax
0x00008577      bb27000000     mov ebx, 0x27                           ; '''
0x0000857c      e917ffffff     jmp 0x8498
0x00008581      0f1f80000000.  nop dword [rax]
0x00008588      ba09000000     mov edx, 9
0x0000858d      bb74000000     mov ebx, 0x74                           ; 't'
0x00008592      837c240802     cmp dword [rsp + 8], 2
0x00008597      0f94c0         sete al
0x0000859a      2244240f       and al, byte [rsp + 0xf]
0x0000859e      0f854a010000   jne 0x86ee
0x000085a4      807c240d00     cmp byte [rsp + 0xd], 0
0x000085a9      7565           jne 0x8610
0x000085ab      89d3           mov ebx, edx
0x000085ad      4531e4         xor r12d, r12d
0x000085b0      31c0           xor eax, eax
0x000085b2      807c240f00     cmp byte [rsp + 0xf], 0
0x000085b7      0f85eefeffff   jne 0x84ab
0x000085bd      e907ffffff     jmp 0x84c9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x000085c2      660f1f440000   nop word [rax + rax]
0x000085c8      ba08000000     mov edx, 8
0x000085cd      bb62000000     mov ebx, 0x62                           ; 'b'
0x000085d2      ebd0           jmp 0x85a4
0x000085d4      0f1f4000       nop dword [rax]
0x000085d8      837c240802     cmp dword [rsp + 8], 2
0x000085dd      0f84cd030000   je 0x89b0
0x000085e3      807c240d00     cmp byte [rsp + 0xd], 0
0x000085e8      0f8412020000   je 0x8800
0x000085ee      807c240f00     cmp byte [rsp + 0xf], 0
0x000085f3      0f8407020000   je 0x8800
0x000085f9      48837c241800   cmp qword [rsp + 0x18], 0
0x000085ff      0f85b6030000   jne 0x89bb
0x00008605      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000860a      660f1f440000   nop word [rax + rax]
0x00008610      4531e4         xor r12d, r12d
0x00008613      837c240802     cmp dword [rsp + 8], 2
0x00008618      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000861b      807c240f00     cmp byte [rsp + 0xf], 0
0x00008620      89d0           mov eax, edx
0x00008622      0f8550080000   jne 0x8e78
0x00008628      4489c0         mov eax, r8d
0x0000862b      83f001         xor eax, 1
0x0000862e      20d0           and al, dl
0x00008630      742f           je 0x8661
0x00008632      4d39fd         cmp r13, r15
0x00008635      7605           jbe 0x863c
0x00008637      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000863c      498d5701       lea rdx, [r15 + 1]
0x00008640      4939d5         cmp r13, rdx
0x00008643      7606           jbe 0x864b
0x00008645      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000864b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000864f      4939d5         cmp r13, rdx
0x00008652      7606           jbe 0x865a
0x00008654      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000865a      4983c703       add r15, 3
0x0000865e      4189c0         mov r8d, eax
0x00008661      4d39fd         cmp r13, r15
0x00008664      7605           jbe 0x866b
0x00008666      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000866b      4983c701       add r15, 1
0x0000866f      4883c501       add rbp, 1
0x00008673      e988feffff     jmp 0x8500
0x00008678      0f1f84000000.  nop dword [rax + rax]
0x00008680      807c240d00     cmp byte [rsp + 0xd], 0
0x00008685      0f85c8010000   jne 0x8853
0x0000868b      31d2           xor edx, edx
0x0000868d      f644247801     test byte [rsp + 0x78], 1
0x00008692      0f8413ffffff   je 0x85ab
0x00008698      4883c501       add rbp, 1
0x0000869c      e9b7fcffff     jmp 0x8358
0x000086a1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x000086a8      837c240802     cmp dword [rsp + 8], 2
0x000086ad      0f94c2         sete dl
0x000086b0      31c0           xor eax, eax
0x000086b2      e9e1fdffff     jmp 0x8498
0x000086b7      660f1f840000.  nop word [rax + rax]
0x000086c0      ba07000000     mov edx, 7
0x000086c5      bb61000000     mov ebx, 0x61                           ; 'a'
0x000086ca      e9d5feffff     jmp 0x85a4
0x000086cf      90             nop
0x000086d0      837c240802     cmp dword [rsp + 8], 2
0x000086d5      0f94c2         sete dl
0x000086d8      4885ed         test rbp, rbp
0x000086db      0f85abfdffff   jne 0x848c
0x000086e1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000086e6      20d0           and al, dl
0x000086e8      0f84aafdffff   je 0x8498
0x000086ee      4c89dd         mov rbp, r11
0x000086f1      c74424080200.  mov dword [rsp + 8], 2
0x000086f9      e9fb060000     jmp 0x8df9
0x000086fe      6690           nop
0x00008700      837c240802     cmp dword [rsp + 8], 2
0x00008705      0f94c2         sete dl
0x00008708      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000870b      ebd4           jmp 0x86e1
0x0000870d      0f1f00         nop dword [rax]
0x00008710      837c240802     cmp dword [rsp + 8], 2
0x00008715      bb20000000     mov ebx, 0x20                           ; "@"
0x0000871a      0f94c2         sete dl
0x0000871d      ebc2           jmp 0x86e1
0x0000871f      90             nop
0x00008720      ba0d000000     mov edx, 0xd
0x00008725      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000872a      e963feffff     jmp 0x8592
0x0000872f      90             nop
0x00008730      ba0c000000     mov edx, 0xc
0x00008735      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000873a      e965feffff     jmp 0x85a4
0x0000873f      90             nop
0x00008740      ba0b000000     mov edx, 0xb
0x00008745      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000874a      e955feffff     jmp 0x85a4
0x0000874f      90             nop
0x00008750      ba0a000000     mov edx, 0xa
0x00008755      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000875a      e933feffff     jmp 0x8592
0x0000875f      90             nop
0x00008760      4531d2         xor r10d, r10d
0x00008763      0f1f440000     nop dword [rax + rax]
0x00008768      48837c245801   cmp qword [rsp + 0x58], 1
0x0000876e      0f85a4030000   jne 0x8b18
0x00008774      4c895c2438     mov qword [rsp + 0x38], r11
0x00008779      4488442430     mov byte [rsp + 0x30], r8b
0x0000877e      4488542428     mov byte [rsp + 0x28], r10b
0x00008783      e8a897ffff     call sym.imp.__ctype_b_loc
0x00008788      488b08         mov rcx, qword [rax]
0x0000878b      0fb6d3         movzx edx, bl
0x0000878e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00008794      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000879a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000879f      bf01000000     mov edi, 1
0x000087a4      0fb70451       movzx eax, word [rcx + rdx*2]
0x000087a8      66250040       and ax, 0x4000
0x000087ac      410f95c4       setne r12b
0x000087b0      0f94c0         sete al
0x000087b3      2244240d       and al, byte [rsp + 0xd]
0x000087b7      84c0           test al, al
0x000087b9      0f8592090000   jne 0x9151
0x000087bf      837c240802     cmp dword [rsp + 8], 2
0x000087c4      0f94c2         sete dl
0x000087c7      e9ccfcffff     jmp 0x8498
0x000087cc      0f1f4000       nop dword [rax]
0x000087d0      410fb619       movzx ebx, byte [r9]
0x000087d4      80fb7e         cmp bl, 0x7e
0x000087d7      7787           ja 0x8760
0x000087d9      488d0d884500.  lea rcx, [0x0000cd68]
0x000087e0      0fb6d3         movzx edx, bl
0x000087e3      48630491       movsxd rax, dword [rcx + rdx*4]
0x000087e7      4801c8         add rax, rcx
0x000087ea      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x000087ec      0f1f4000       nop dword [rax]
0x000087f0      4531d2         xor r10d, r10d
0x000087f3      807c240d00     cmp byte [rsp + 0xd], 0
0x000087f8      0f85f0fdffff   jne 0x85ee
0x000087fe      6690           nop
0x00008800      ba5c000000     mov edx, 0x5c                           ; '\'
0x00008805      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000880a      e995fdffff     jmp 0x85a4
0x0000880f      90             nop
0x00008810      ba0c000000     mov edx, 0xc
0x00008815      4531d2         xor r10d, r10d
0x00008818      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000881d      e982fdffff     jmp 0x85a4
0x00008822      660f1f440000   nop word [rax + rax]
0x00008828      ba0a000000     mov edx, 0xa
0x0000882d      4531d2         xor r10d, r10d
0x00008830      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00008835      e958fdffff     jmp 0x8592
0x0000883a      660f1f440000   nop word [rax + rax]
0x00008840      bb61000000     mov ebx, 0x61                           ; 'a'
0x00008845      e9c6fdffff     jmp 0x8610
0x0000884a      660f1f440000   nop word [rax + rax]
0x00008850      4531d2         xor r10d, r10d
0x00008853      837c240802     cmp dword [rsp + 8], 2
0x00008858      0f94c2         sete dl
0x0000885b      807c240f00     cmp byte [rsp + 0xf], 0
0x00008860      0f85940b0000   jne 0x93fa
0x00008866      4489c0         mov eax, r8d
0x00008869      4c89f9         mov rcx, r15
0x0000886c      83f001         xor eax, 1
0x0000886f      20d0           and al, dl
0x00008871      742d           je 0x88a0
0x00008873      4d39fd         cmp r13, r15
0x00008876      7605           jbe 0x887d
0x00008878      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000887d      498d4f01       lea rcx, [r15 + 1]
0x00008881      4939cd         cmp r13, rcx
0x00008884      7606           jbe 0x888c
0x00008886      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000888c      498d4f02       lea rcx, [r15 + 2]
0x00008890      4939cd         cmp r13, rcx
0x00008893      0f8730060000   ja 0x8ec9
0x00008899      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000889d      4189c0         mov r8d, eax
0x000088a0      4939cd         cmp r13, rcx
0x000088a3      7605           jbe 0x88aa
0x000088a5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000088aa      837c240802     cmp dword [rsp + 8], 2
0x000088af      4c8d7901       lea r15, [rcx + 1]
0x000088b3      0f8400060000   je 0x8eb9
0x000088b9      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000088bd      4c39d8         cmp rax, r11
0x000088c0      7319           jae 0x88db                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x000088c2      488b442410     mov rax, qword [rsp + 0x10]
0x000088c7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x000088cc      88442428       mov byte [rsp + 0x28], al
0x000088d0      83e830         sub eax, 0x30
0x000088d3      3c09           cmp al, 9
0x000088d5      0f862e080000   jbe 0x9109
0x000088db      4489e0         mov eax, r12d
0x000088de      bb30000000     mov ebx, 0x30                           ; '0'
0x000088e3      4531e4         xor r12d, r12d
0x000088e6      e9adfbffff     jmp 0x8498                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x000088eb      0f1f440000     nop dword [rax + rax]
0x000088f0      837c240802     cmp dword [rsp + 8], 2
0x000088f5      4589d4         mov r12d, r10d
0x000088f8      0f94c2         sete dl
0x000088fb      4531d2         xor r10d, r10d
0x000088fe      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00008900      e993fbffff     jmp 0x8498                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00008905      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00008908      837c240802     cmp dword [rsp + 8], 2
0x0000890d      0f94c2         sete dl
0x00008910      4531d2         xor r10d, r10d
0x00008913      e9c0fdffff     jmp 0x86d8
0x00008918      0f1f84000000.  nop dword [rax + rax]
0x00008920      837c240802     cmp dword [rsp + 8], 2
0x00008925      0f94c2         sete dl
0x00008928      4531d2         xor r10d, r10d
0x0000892b      4531e4         xor r12d, r12d
0x0000892e      e9aefdffff     jmp 0x86e1
0x00008933      0f1f440000     nop dword [rax + rax]
0x00008938      837c240802     cmp dword [rsp + 8], 2
0x0000893d      4589d4         mov r12d, r10d
0x00008940      bb20000000     mov ebx, 0x20                           ; "@"
0x00008945      0f94c2         sete dl
0x00008948      4531d2         xor r10d, r10d
0x0000894b      e991fdffff     jmp 0x86e1
0x00008950      ba0d000000     mov edx, 0xd
0x00008955      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00008958      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000895d      e930fcffff     jmp 0x8592
0x00008962      660f1f440000   nop word [rax + rax]
0x00008968      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000896d      e99efcffff     jmp 0x8610
0x00008972      660f1f440000   nop word [rax + rax]
0x00008978      ba09000000     mov edx, 9
0x0000897d      4531d2         xor r10d, r10d
0x00008980      bb74000000     mov ebx, 0x74                           ; 't'
0x00008985      e908fcffff     jmp 0x8592
0x0000898a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00008990      bb62000000     mov ebx, 0x62                           ; 'b'
0x00008995      e976fcffff     jmp 0x8610
0x0000899a      660f1f440000   nop word [rax + rax]
0x000089a0      4531d2         xor r10d, r10d
0x000089a3      e998faffff     jmp 0x8440
0x000089a8      0f1f84000000.  nop dword [rax + rax]
0x000089b0      807c240f00     cmp byte [rsp + 0xf], 0
0x000089b5      0f8565090000   jne 0x9320
0x000089bb      4883c501       add rbp, 1
0x000089bf      4489c0         mov eax, r8d
0x000089c2      4531e4         xor r12d, r12d
0x000089c5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000089ca      e90dfbffff     jmp 0x84dc
0x000089cf      90             nop
0x000089d0      837c240802     cmp dword [rsp + 8], 2
0x000089d5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000089da      4589c4         mov r12d, r8d
0x000089dd      4c89dd         mov rbp, r11
0x000089e0      0f94c2         sete dl
0x000089e3      89d8           mov eax, ebx
0x000089e5      4d85ff         test r15, r15
0x000089e8      0f94c1         sete cl
0x000089eb      21d0           and eax, edx
0x000089ed      20c8           and al, cl
0x000089ef      0f85610a0000   jne 0x9456                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x000089f5      89d8           mov eax, ebx
0x000089f7      83f001         xor eax, 1
0x000089fa      20c2           and dl, al
0x000089fc      0f846a090000   je 0x936c
0x00008a02      807c247c00     cmp byte [rsp + 0x7c], 0
0x00008a07      0f845d090000   je 0x936a
0x00008a0d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00008a12      0f85f5090000   jne 0x940d
0x00008a18      4d85ed         test r13, r13
0x00008a1b      0f94c0         sete al
0x00008a1e      48837c245000   cmp qword [rsp + 0x50], 0
0x00008a24      0f95c2         setne dl
0x00008a27      20d0           and al, dl
0x00008a29      0f841d0a0000   je 0x944c
0x00008a2f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00008a34      488d1daa4000.  lea rbx, [0x0000cae5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00008a3b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00008a3f      c74424080200.  mov dword [rsp + 8], 2
0x00008a47      41bf01000000   mov r15d, 1
0x00008a4d      48c744241801.  mov qword [rsp + 0x18], 1
0x00008a56      c644240f00     mov byte [rsp + 0xf], 0
0x00008a5b      48895c2448     mov qword [rsp + 0x48], rbx
0x00008a60      8844247c       mov byte [rsp + 0x7c], al
0x00008a64      e9daf8ffff     jmp 0x8343
0x00008a69      0f1f80000000.  nop dword [rax]
0x00008a70      807c240f00     cmp byte [rsp + 0xf], 0
0x00008a75      0f85a5080000   jne 0x9320
0x00008a7b      4d85ed         test r13, r13
0x00008a7e      0f84fc030000   je 0x8e80                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00008a84      31d2           xor edx, edx
0x00008a86      48837c245000   cmp qword [rsp + 0x50], 0
0x00008a8c      0f85ee030000   jne 0x8e80                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00008a92      4c896c2450     mov qword [rsp + 0x50], r13
0x00008a97      4983c703       add r15, 3
0x00008a9b      31c0           xor eax, eax
0x00008a9d      448864247c     mov byte [rsp + 0x7c], r12b
0x00008aa2      4531c0         xor r8d, r8d
0x00008aa5      4989d5         mov r13, rdx
0x00008aa8      bb27000000     mov ebx, 0x27                           ; '''
0x00008aad      e917faffff     jmp 0x84c9
0x00008ab2      660f1f440000   nop word [rax + rax]
0x00008ab8      f644247804     test byte [rsp + 0x78], 4
0x00008abd      7421           je 0x8ae0
0x00008abf      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00008ac3      4c39d9         cmp rcx, r11
0x00008ac6      7318           jae 0x8ae0
0x00008ac8      488b442410     mov rax, qword [rsp + 0x10]
0x00008acd      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00008ad2      0f848a070000   je 0x9262
0x00008ad8      0f1f84000000.  nop dword [rax + rax]
0x00008ae0      31d2           xor edx, edx
0x00008ae2      4531e4         xor r12d, r12d
0x00008ae5      31c0           xor eax, eax
0x00008ae7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00008aec      e9a7f9ffff     jmp 0x8498
0x00008af1      0f1f80000000.  nop dword [rax]
0x00008af8      807c240f00     cmp byte [rsp + 0xf], 0
0x00008afd      0f851d080000   jne 0x9320
0x00008b03      4531e4         xor r12d, r12d
0x00008b06      31c0           xor eax, eax
0x00008b08      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00008b0d      e9b7f9ffff     jmp 0x84c9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00008b12      660f1f440000   nop word [rax + rax]
0x00008b18      488d8424a000.  lea rax, [rsp + 0xa0]
0x00008b20      4983fbff       cmp r11, 0xffffffffffffffff
0x00008b24      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00008b30      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00008b35      752d           jne 0x8b64
0x00008b37      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00008b3c      4488442440     mov byte [rsp + 0x40], r8b
0x00008b41      4488542438     mov byte [rsp + 0x38], r10b
0x00008b46      4c894c2430     mov qword [rsp + 0x30], r9
0x00008b4b      e8a090ffff     call sym.imp.strlen
0x00008b50      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00008b56      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00008b5c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00008b5f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00008b64      488d84249c00.  lea rax, [rsp + 0x9c]
0x00008b6c      31c9           xor ecx, ecx
0x00008b6e      885c247e       mov byte [rsp + 0x7e], bl
0x00008b72      448844247d     mov byte [rsp + 0x7d], r8b
0x00008b77      4889cb         mov rbx, rcx
0x00008b7a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00008b82      4889442438     mov qword [rsp + 0x38], rax
0x00008b87      448854247f     mov byte [rsp + 0x7f], r10b
0x00008b8c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00008b94      4c89742440     mov qword [rsp + 0x40], r14
0x00008b99      4c896c2470     mov qword [rsp + 0x70], r13
0x00008b9e      4c895c2430     mov qword [rsp + 0x30], r11
0x00008ba3      488b442410     mov rax, qword [rsp + 0x10]
0x00008ba8      4c8d741d00     lea r14, [rbp + rbx]
0x00008bad      488b542430     mov rdx, qword [rsp + 0x30]
0x00008bb2      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00008bb7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00008bbc      4e8d2c30       lea r13, [rax + r14]
0x00008bc0      4c29f2         sub rdx, r14
0x00008bc3      4c89ee         mov rsi, r13
0x00008bc6      e8b5240000     call sym.rpl_mbrtowc
0x00008bcb      4885c0         test rax, rax
0x00008bce      4989c7         mov r15, rax
0x00008bd1      744e           je 0x8c21
0x00008bd3      4883f8ff       cmp rax, 0xffffffffffffffff
0x00008bd7      0f8418060000   je 0x91f5
0x00008bdd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00008be1      0f849a050000   je 0x9181
0x00008be7      837c240802     cmp dword [rsp + 8], 2
0x00008bec      0f94c0         sete al
0x00008bef      2244240f       and al, byte [rsp + 0xf]
0x00008bf3      0f8597010000   jne 0x8d90
0x00008bf9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00008c00      e80b93ffff     call sym.imp.iswprint
0x00008c05      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00008c0a      85c0           test eax, eax
0x00008c0c      b800000000     mov eax, 0
0x00008c11      440f44e0       cmove r12d, eax
0x00008c15      4c01fb         add rbx, r15
0x00008c18      e8e392ffff     call sym.imp.mbsinit
0x00008c1d      85c0           test eax, eax
0x00008c1f      7482           je 0x8ba3
0x00008c21      4489e2         mov edx, r12d
0x00008c24      4889df         mov rdi, rbx
0x00008c27      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00008c2d      83f201         xor edx, 1
0x00008c30      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00008c35      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00008c3b      2254240d       and dl, byte [rsp + 0xd]
0x00008c3f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00008c47      4c8b742440     mov r14, qword [rsp + 0x40]
0x00008c4c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00008c51      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00008c56      4883ff01       cmp rdi, 1
0x00008c5a      0f86fb050000   jbe 0x925b
0x00008c60      4889f9         mov rcx, rdi
0x00008c63      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00008c65      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00008c6b      4801e9         add rcx, rbp
0x00008c6e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00008c73      e9b6000000     jmp 0x8d2e
0x00008c78      0f1f84000000.  nop dword [rax + rax]
0x00008c80      837c240802     cmp dword [rsp + 8], 2
0x00008c85      0f94c0         sete al
0x00008c88      4584c9         test r9b, r9b
0x00008c8b      0f85af040000   jne 0x9140
0x00008c91      4489c6         mov esi, r8d
0x00008c94      83f601         xor esi, 1
0x00008c97      4020f0         and al, sil
0x00008c9a      742f           je 0x8ccb                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00008c9c      4d39fd         cmp r13, r15
0x00008c9f      7605           jbe 0x8ca6
0x00008ca1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00008ca6      498d7701       lea rsi, [r15 + 1]
0x00008caa      4939f5         cmp r13, rsi
0x00008cad      7606           jbe 0x8cb5                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00008caf      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00008cb5      498d7702       lea rsi, [r15 + 2]
0x00008cb9      4939f5         cmp r13, rsi
0x00008cbc      7606           jbe 0x8cc4
0x00008cbe      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00008cc4      4983c703       add r15, 3
0x00008cc8      4189c0         mov r8d, eax
0x00008ccb      4d39fd         cmp r13, r15
0x00008cce      7605           jbe 0x8cd5
0x00008cd0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00008cd5      498d4701       lea rax, [r15 + 1]
0x00008cd9      4939c5         cmp r13, rax
0x00008cdc      760d           jbe 0x8ceb
0x00008cde      89d8           mov eax, ebx
0x00008ce0      c0e806         shr al, 6
0x00008ce3      83c030         add eax, 0x30
0x00008ce6      4388443e01     mov byte [r14 + r15 + 1], al
0x00008ceb      498d4702       lea rax, [r15 + 2]
0x00008cef      4939c5         cmp r13, rax
0x00008cf2      7610           jbe 0x8d04
0x00008cf4      89d8           mov eax, ebx
0x00008cf6      c0e803         shr al, 3
0x00008cf9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00008cfc      83c030         add eax, 0x30
0x00008cff      4388443e02     mov byte [r14 + r15 + 2], al
0x00008d04      83e307         and ebx, 7
0x00008d07      4883c501       add rbp, 1
0x00008d0b      4983c703       add r15, 3
0x00008d0f      83c330         add ebx, 0x30
0x00008d12      4839cd         cmp rbp, rcx
0x00008d15      0f83e5f7ffff   jae 0x8500
0x00008d1b      89d6           mov esi, edx
0x00008d1d      4d39fd         cmp r13, r15
0x00008d20      7604           jbe 0x8d26
0x00008d22      43881c3e       mov byte [r14 + r15], bl
0x00008d26      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00008d2a      4983c701       add r15, 1
0x00008d2e      84d2           test dl, dl
0x00008d30      0f854affffff   jne 0x8c80
0x00008d36      89f0           mov eax, esi
0x00008d38      83f001         xor eax, 1
0x00008d3b      4421c0         and eax, r8d
0x00008d3e      4584d2         test r10b, r10b
0x00008d41      740e           je 0x8d51
0x00008d43      4d39fd         cmp r13, r15
0x00008d46      7605           jbe 0x8d4d
0x00008d48      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00008d4d      4983c701       add r15, 1
0x00008d51      4883c501       add rbp, 1
0x00008d55      4839cd         cmp rbp, rcx
0x00008d58      0f837ef7ffff   jae 0x84dc
0x00008d5e      84c0           test al, al
0x00008d60      0f84f8030000   je 0x915e
0x00008d66      4d39fd         cmp r13, r15
0x00008d69      7605           jbe 0x8d70
0x00008d6b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00008d70      498d4701       lea rax, [r15 + 1]
0x00008d74      4939c5         cmp r13, rax
0x00008d77      7606           jbe 0x8d7f
0x00008d79      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00008d7f      4983c702       add r15, 2
0x00008d83      4531d2         xor r10d, r10d
0x00008d86      4531c0         xor r8d, r8d
0x00008d89      eb92           jmp 0x8d1d
0x00008d8b      0f1f440000     nop dword [rax + rax]
0x00008d90      4983ff01       cmp r15, 1
0x00008d94      0f845ffeffff   je 0x8bf9
0x00008d9a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00008d9f      4a8d0c3f       lea rcx, [rdi + r15]
0x00008da3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00008da8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00008dac      eb0f           jmp 0x8dbd
0x00008dae      6690           nop
0x00008db0      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00008db4      4939d0         cmp r8, rdx
0x00008db7      0f843cfeffff   je 0x8bf9
0x00008dbd      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00008dc0      83e95b         sub ecx, 0x5b
0x00008dc3      80f921         cmp cl, 0x21
0x00008dc6      77e8           ja 0x8db0                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00008dc8      be01000000     mov esi, 1
0x00008dcd      48d3e6         shl rsi, cl
0x00008dd0      4889f1         mov rcx, rsi
0x00008dd3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00008ddd      4885f1         test rcx, rsi
0x00008de0      74ce           je 0x8db0
0x00008de2      4c8b742440     mov r14, qword [rsp + 0x40]
0x00008de7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00008dec      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00008df1      c74424080200.  mov dword [rsp + 8], 2
0x00008df9      807c240d00     cmp byte [rsp + 0xd], 0
0x00008dfe      7410           je 0x8e10
0x00008e00      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00008e02      b804000000     mov eax, 4
0x00008e07      0f44442408     cmove eax, dword [rsp + 8]
0x00008e0c      89442408       mov dword [rsp + 8], eax
0x00008e10      4883ec08       sub rsp, 8
0x00008e14      4889e9         mov rcx, rbp
0x00008e17      4c89ee         mov rsi, r13
0x00008e1a      ff742468       push qword [rsp + 0x68]
0x00008e1e      ff742478       push qword [rsp + 0x78]
0x00008e22      4c89f7         mov rdi, r14
0x00008e25      6a00           push 0
0x00008e27      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00008e2f      448b442428     mov r8d, dword [rsp + 0x28]
0x00008e34      488b542430     mov rdx, qword [rsp + 0x30]
0x00008e39      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00008e3d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00008e42      4883c420       add rsp, 0x20
0x00008e46      4989c7         mov r15, rax
0x00008e49      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00008e51      6448331c2528.  xor rbx, qword fs:[0x28]
0x00008e5a      4c89f8         mov rax, r15
0x00008e5d      0f8500060000   jne 0x9463
0x00008e63      4881c4b80000.  add rsp, 0xb8
0x00008e6a      5b             pop rbx
0x00008e6b      5d             pop rbp
0x00008e6c      415c           pop r12
0x00008e6e      415d           pop r13
0x00008e70      415e           pop r14
0x00008e72      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00008e74      c3             ret
0x00008e75      0f1f00         nop dword [rax]
0x00008e78      4c89dd         mov rbp, r11
0x00008e7b      e979ffffff     jmp 0x8df9
0x00008e80      4d39fd         cmp r13, r15
0x00008e83      7605           jbe 0x8e8a
0x00008e85      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00008e8a      498d4701       lea rax, [r15 + 1]
0x00008e8e      4939c5         cmp r13, rax
0x00008e91      7606           jbe 0x8e99
0x00008e93      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00008e99      498d4702       lea rax, [r15 + 2]
0x00008e9d      4939c5         cmp r13, rax
0x00008ea0      0f86ec050000   jbe 0x9492
0x00008ea6      4c89ea         mov rdx, r13
0x00008ea9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00008eaf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00008eb4      e9d9fbffff     jmp 0x8a92
0x00008eb9      4489e0         mov eax, r12d
0x00008ebc      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00008ec1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00008ec4      e900f6ffff     jmp 0x84c9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00008ec9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00008ecf      e9c5f9ffff     jmp 0x8899
0x00008ed4      85db           test ebx, ebx
0x00008ed6      0f8527f4ffff   jne 0x8303
0x00008edc      c644240d01     mov byte [rsp + 0xd], 1
0x00008ee1      4d85ed         test r13, r13
0x00008ee4      0f8590050000   jne 0x947a
0x00008eea      488d05f43b00.  lea rax, [0x0000cae5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00008ef1      48c744245000.  mov qword [rsp + 0x50], 0
0x00008efa      c644240e01     mov byte [rsp + 0xe], 1
0x00008eff      c644247c00     mov byte [rsp + 0x7c], 0
0x00008f04      4531e4         xor r12d, r12d
0x00008f07      c644240f00     mov byte [rsp + 0xf], 0
0x00008f0c      48c744241801.  mov qword [rsp + 0x18], 1
0x00008f15      4889442448     mov qword [rsp + 0x48], rax
0x00008f1a      41bf01000000   mov r15d, 1
0x00008f20      c74424080200.  mov dword [rsp + 8], 2
0x00008f28      e916f4ffff     jmp 0x8343                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00008f2d      0f1f00         nop dword [rax]
0x00008f30      85db           test ebx, ebx
0x00008f32      0f85f5030000   jne 0x932d
0x00008f38      4d85ed         test r13, r13
0x00008f3b      0f8425020000   je 0x9166
0x00008f41      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00008f45      c644240e01     mov byte [rsp + 0xe], 1
0x00008f4a      4531e4         xor r12d, r12d
0x00008f4d      c644247c00     mov byte [rsp + 0x7c], 0
0x00008f52      48c744245000.  mov qword [rsp + 0x50], 0
0x00008f5b      488d05813b00.  lea rax, str.l______l                   ; 0xcae3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00008f62      c644240f00     mov byte [rsp + 0xf], 0
0x00008f67      c644240d01     mov byte [rsp + 0xd], 1
0x00008f6c      48c744241801.  mov qword [rsp + 0x18], 1
0x00008f75      41bf01000000   mov r15d, 1
0x00008f7b      4889442448     mov qword [rsp + 0x48], rax
0x00008f80      e9bef3ffff     jmp 0x8343
0x00008f85      488d05573b00.  lea rax, str.l______l                   ; 0xcae3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00008f8c      c644240e01     mov byte [rsp + 0xe], 1
0x00008f91      c644247c00     mov byte [rsp + 0x7c], 0
0x00008f96      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00008f99      48c744245000.  mov qword [rsp + 0x50], 0
0x00008fa2      c644240f01     mov byte [rsp + 0xf], 1
0x00008fa7      c644240d01     mov byte [rsp + 0xd], 1
0x00008fac      48c744241801.  mov qword [rsp + 0x18], 1
0x00008fb5      4531ff         xor r15d, r15d
0x00008fb8      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00008fbd      c74424080500.  mov dword [rsp + 8], 5
0x00008fc5      e979f3ffff     jmp 0x8343
0x00008fca      c644240e01     mov byte [rsp + 0xe], 1
0x00008fcf      c644247c00     mov byte [rsp + 0x7c], 0
0x00008fd4      4531e4         xor r12d, r12d
0x00008fd7      48c744245000.  mov qword [rsp + 0x50], 0
0x00008fe0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00008fe5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00008fe8      c644240d01     mov byte [rsp + 0xd], 1
0x00008fed      48c744241800.  mov qword [rsp + 0x18], 0
0x00008ff6      48c744244800.  mov qword [rsp + 0x48], 0
0x00008fff      e93ff3ffff     jmp 0x8343
0x00009004      837c24080a     cmp dword [rsp + 8], 0xa
0x00009009      7456           je 0x9061
0x0000900b      488d35d53a00.  lea rsi, [0x0000cae7]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00009012      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00009014      ba05000000     mov edx, 5
0x00009019      e8b28bffff     call sym.imp.dcgettext
0x0000901e      4889c1         mov rcx, rax
0x00009021      4889442468     mov qword [rsp + 0x68], rax
0x00009026      488d05ba3a00.  lea rax, [0x0000cae7]                   ; "`"
0x0000902d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00009030      0f8498030000   je 0x93ce
0x00009036      488d35a83a00.  lea rsi, [0x0000cae5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000903d      31ff           xor edi, edi
0x0000903f      ba05000000     mov edx, 5
0x00009044      e8878bffff     call sym.imp.dcgettext
0x00009049      4889c1         mov rcx, rax
0x0000904c      4889442460     mov qword [rsp + 0x60], rax
0x00009051      488d058d3a00.  lea rax, [0x0000cae5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00009058      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000905b      0f8483030000   je 0x93e4
0x00009061      4531ff         xor r15d, r15d
0x00009064      85db           test ebx, ebx
0x00009066      0f84c1010000   je 0x922d
0x0000906c      85db           test ebx, ebx
0x0000906e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00009073      0f9544240f     setne byte [rsp + 0xf]
0x00009078      4531e4         xor r12d, r12d
0x0000907b      4889df         mov rdi, rbx
0x0000907e      e86d8bffff     call sym.imp.strlen
0x00009083      48895c2448     mov qword [rsp + 0x48], rbx
0x00009088      4889442418     mov qword [rsp + 0x18], rax
0x0000908d      c644240e01     mov byte [rsp + 0xe], 1
0x00009092      c644247c00     mov byte [rsp + 0x7c], 0
0x00009097      48c744245000.  mov qword [rsp + 0x50], 0
0x000090a0      c644240d01     mov byte [rsp + 0xd], 1
0x000090a5      e999f2ffff     jmp 0x8343
0x000090aa      c644240e01     mov byte [rsp + 0xe], 1
0x000090af      c644247c00     mov byte [rsp + 0x7c], 0
0x000090b4      4531e4         xor r12d, r12d
0x000090b7      48c744245000.  mov qword [rsp + 0x50], 0
0x000090c0      c644240f00     mov byte [rsp + 0xf], 0
0x000090c5      4531ff         xor r15d, r15d
0x000090c8      c644240d00     mov byte [rsp + 0xd], 0
0x000090cd      48c744241800.  mov qword [rsp + 0x18], 0
0x000090d6      48c744244800.  mov qword [rsp + 0x48], 0
0x000090df      e95ff2ffff     jmp 0x8343
0x000090e4      c644240e01     mov byte [rsp + 0xe], 1
0x000090e9      c644247c00     mov byte [rsp + 0x7c], 0
0x000090ee      4531e4         xor r12d, r12d
0x000090f1      48c744245000.  mov qword [rsp + 0x50], 0
0x000090fa      c644240f01     mov byte [rsp + 0xf], 1
0x000090ff      c644240d01     mov byte [rsp + 0xd], 1
0x00009104      e91af2ffff     jmp 0x8323
0x00009109      4d39fd         cmp r13, r15
0x0000910c      7605           jbe 0x9113
0x0000910e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00009113      488d4102       lea rax, [rcx + 2]
0x00009117      4939c5         cmp r13, rax
0x0000911a      7606           jbe 0x9122
0x0000911c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00009122      4489e0         mov eax, r12d
0x00009125      4c8d7903       lea r15, [rcx + 3]
0x00009129      4531e4         xor r12d, r12d
0x0000912c      bb30000000     mov ebx, 0x30                           ; '0'
0x00009131      e962f3ffff     jmp 0x8498
0x00009136      662e0f1f8400.  nop word cs:[rax + rax]
0x00009140      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00009145      4c89dd         mov rbp, r11
0x00009148      885c240d       mov byte [rsp + 0xd], bl
0x0000914c      e9a8fcffff     jmp 0x8df9
0x00009151      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00009156      4531e4         xor r12d, r12d
0x00009159      e902fbffff     jmp 0x8c60
0x0000915e      4531d2         xor r10d, r10d
0x00009161      e9b7fbffff     jmp 0x8d1d
0x00009166      48c744245000.  mov qword [rsp + 0x50], 0
0x0000916f      c644240e01     mov byte [rsp + 0xe], 1
0x00009174      4531e4         xor r12d, r12d
0x00009177      c644247c00     mov byte [rsp + 0x7c], 0
0x0000917c      e9dafdffff     jmp 0x8f5b
0x00009181      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00009186      4c89f6         mov rsi, r14
0x00009189      4c89e9         mov rcx, r13
0x0000918c      4889d8         mov rax, rbx
0x0000918f      4889df         mov rdi, rbx
0x00009192      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00009198      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000919d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x000091a5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x000091a8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000091ae      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000091b6      4c8b742440     mov r14, qword [rsp + 0x40]
0x000091bb      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000091c0      7326           jae 0x91e8
0x000091c2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000091c5      7510           jne 0x91d7
0x000091c7      eb1f           jmp 0x91e8
0x000091c9      0f1f80000000.  nop dword [rax]
0x000091d0      41803c0100     cmp byte [r9 + rax], 0
0x000091d5      740e           je 0x91e5
0x000091d7      4883c001       add rax, 1
0x000091db      488d540500     lea rdx, [rbp + rax]
0x000091e0      4939d3         cmp r11, rdx
0x000091e3      77eb           ja 0x91d0
0x000091e5      4889c7         mov rdi, rax
0x000091e8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000091ed      4531e4         xor r12d, r12d
0x000091f0      e961faffff     jmp 0x8c56
0x000091f5      4889df         mov rdi, rbx
0x000091f8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000091fe      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00009203      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00009209      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00009211      4531e4         xor r12d, r12d
0x00009214      4c8b742440     mov r14, qword [rsp + 0x40]
0x00009219      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000921e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00009223      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00009228      e929faffff     jmp 0x8c56
0x0000922d      488b542468     mov rdx, qword [rsp + 0x68]
0x00009232      0fb602         movzx eax, byte [rdx]
0x00009235      84c0           test al, al
0x00009237      0f842ffeffff   je 0x906c
0x0000923d      0f1f00         nop dword [rax]
0x00009240      4d39fd         cmp r13, r15
0x00009243      7604           jbe 0x9249
0x00009245      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00009249      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000924d      420fb6043a     movzx eax, byte [rdx + r15]
0x00009252      84c0           test al, al
0x00009254      75ea           jne 0x9240
0x00009256      e911feffff     jmp 0x906c
0x0000925b      89d0           mov eax, edx
0x0000925d      e955f5ffff     jmp 0x87b7
0x00009262      0fb61c08       movzx ebx, byte [rax + rcx]
0x00009266      80fb3e         cmp bl, 0x3e
0x00009269      0f8771f8ffff   ja 0x8ae0
0x0000926f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00009279      480fa3d8       bt rax, rbx
0x0000927d      0f835df8ffff   jae 0x8ae0
0x00009283      807c240f00     cmp byte [rsp + 0xf], 0
0x00009288      0f85e4010000   jne 0x9472                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000928e      4d39fd         cmp r13, r15
0x00009291      7605           jbe 0x9298
0x00009293      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00009298      498d4701       lea rax, [r15 + 1]
0x0000929c      4939c5         cmp r13, rax
0x0000929f      7606           jbe 0x92a7
0x000092a1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000092a7      498d4702       lea rax, [r15 + 2]
0x000092ab      4939c5         cmp r13, rax
0x000092ae      7606           jbe 0x92b6
0x000092b0      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000092b6      498d4703       lea rax, [r15 + 3]
0x000092ba      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x000092bd      7606           jbe 0x92c5
0x000092bf      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x000092c5      4983c704       add r15, 4
0x000092c9      31d2           xor edx, edx
0x000092cb      4531e4         xor r12d, r12d
0x000092ce      31c0           xor eax, eax
0x000092d0      4889cd         mov rbp, rcx
0x000092d3      e9c0f1ffff     jmp 0x8498
0x000092d8      85db           test ebx, ebx
0x000092da      0f8488010000   je 0x9468
0x000092e0      488d05fe3700.  lea rax, [0x0000cae5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000092e7      c644240e01     mov byte [rsp + 0xe], 1
0x000092ec      c644247c00     mov byte [rsp + 0x7c], 0
0x000092f1      4531e4         xor r12d, r12d
0x000092f4      48c744245000.  mov qword [rsp + 0x50], 0
0x000092fd      c644240f01     mov byte [rsp + 0xf], 1
0x00009302      c644240d00     mov byte [rsp + 0xd], 0
0x00009307      48c744241801.  mov qword [rsp + 0x18], 1
0x00009310      4531ff         xor r15d, r15d
0x00009313      4889442448     mov qword [rsp + 0x48], rax
0x00009318      e926f0ffff     jmp 0x8343
0x0000931d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00009320      4c89dd         mov rbp, r11
0x00009323      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00009328      e9ccfaffff     jmp 0x8df9
0x0000932d      488d05af3700.  lea rax, str.l______l                   ; 0xcae3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00009334      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00009339      c644247c00     mov byte [rsp + 0x7c], 0
0x0000933e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00009341      48c744245000.  mov qword [rsp + 0x50], 0
0x0000934a      c644240f01     mov byte [rsp + 0xf], 1
0x0000934f      c644240d01     mov byte [rsp + 0xd], 1
0x00009354      48c744241801.  mov qword [rsp + 0x18], 1
0x0000935d      4531ff         xor r15d, r15d
0x00009360      4889442448     mov qword [rsp + 0x48], rax
0x00009365      e9d9efffff     jmp 0x8343
0x0000936a      89d0           mov eax, edx
0x0000936c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00009371      4885db         test rbx, rbx
0x00009374      742c           je 0x93a2
0x00009376      84c0           test al, al
0x00009378      7428           je 0x93a2
0x0000937a      0fb60b         movzx ecx, byte [rbx]
0x0000937d      4889d8         mov rax, rbx
0x00009380      84c9           test cl, cl
0x00009382      741e           je 0x93a2
0x00009384      4c89fa         mov rdx, r15
0x00009387      4c29f8         sub rax, r15
0x0000938a      4939d5         cmp r13, rdx
0x0000938d      7604           jbe 0x9393
0x0000938f      41880c16       mov byte [r14 + rdx], cl
0x00009393      4883c201       add rdx, 1
0x00009397      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000939b      84c9           test cl, cl
0x0000939d      75eb           jne 0x938a
0x0000939f      4989d7         mov r15, rdx
0x000093a2      4d39fd         cmp r13, r15
0x000093a5      0f869efaffff   jbe 0x8e49
0x000093ab      43c6043e00     mov byte [r14 + r15], 0
0x000093b0      e994faffff     jmp 0x8e49
0x000093b5      837c240802     cmp dword [rsp + 8], 2
0x000093ba      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000093bf      4c89dd         mov rbp, r11
0x000093c2      0f94c0         sete al
0x000093c5      885c240d       mov byte [rsp + 0xd], bl
0x000093c9      e92bfaffff     jmp 0x8df9
0x000093ce      8b742408       mov esi, dword [rsp + 8]
0x000093d2      4889cf         mov rdi, rcx
0x000093d5      e8a6edffff     call sym.gettext_quote.part.1
0x000093da      4889442468     mov qword [rsp + 0x68], rax
0x000093df      e952fcffff     jmp 0x9036
0x000093e4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x000093e8      4889cf         mov rdi, rcx
0x000093eb      e890edffff     call sym.gettext_quote.part.1
0x000093f0      4889442460     mov qword [rsp + 0x60], rax
0x000093f5      e967fcffff     jmp 0x9061
0x000093fa      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000093ff      4c89dd         mov rbp, r11
0x00009402      89d0           mov eax, edx
0x00009404      885c240d       mov byte [rsp + 0xd], bl
0x00009408      e9ecf9ffff     jmp 0x8df9
0x0000940d      4883ec08       sub rsp, 8
0x00009411      41b805000000   mov r8d, 5
0x00009417      4c89d9         mov rcx, r11
0x0000941a      ff742468       push qword [rsp + 0x68]
0x0000941e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00009422      4c89f7         mov rdi, r14
0x00009425      ff742438       push qword [rsp + 0x38]
0x00009429      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00009431      488b542430     mov rdx, qword [rsp + 0x30]
0x00009436      488b742470     mov rsi, qword [rsp + 0x70]
0x0000943b      e830eeffff     call sym.quotearg_buffer_restyled
0x00009440      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00009444      4989c7         mov r15, rax
0x00009447      e9fdf9ffff     jmp 0x8e49
0x0000944c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00009451      e916ffffff     jmp 0x936c
0x00009456      c74424080200.  mov dword [rsp + 8], 2
0x0000945e      e996f9ffff     jmp 0x8df9
0x00009463      e8a887ffff     call sym.imp.__stack_chk_fail
0x00009468      c644240d00     mov byte [rsp + 0xd], 0
0x0000946d      e96ffaffff     jmp 0x8ee1
0x00009472      4c89dd         mov rbp, r11
0x00009475      e996f9ffff     jmp 0x8e10
0x0000947a      c644240e01     mov byte [rsp + 0xe], 1
0x0000947f      31c0           xor eax, eax
0x00009481      4531e4         xor r12d, r12d
0x00009484      48c744245000.  mov qword [rsp + 0x50], 0
0x0000948d      e9a2f5ffff     jmp 0x8a34
0x00009492      4c89ea         mov rdx, r13
0x00009495      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000949a      e9f3f5ffff     jmp 0x8a92
0x0000949f      e85c86ffff     call sym.imp.abort
0x000094a4      6690           nop
0x000094a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x000094b0      4157           push r15
0x000094b2      4156           push r14
0x000094b4      4c63ff         movsxd r15, edi
0x000094b7      4155           push r13
0x000094b9      4154           push r12
0x000094bb      4989d6         mov r14, rdx
0x000094be      55             push rbp
0x000094bf      53             push rbx
0x000094c0      4889cd         mov rbp, rcx
0x000094c3      4883ec28       sub rsp, 0x28
0x000094c7      4889742408     mov qword [rsp + 8], rsi
0x000094cc      e83f86ffff     call sym.imp.__errno_location
0x000094d1      4989c5         mov r13, rax
0x000094d4      8b00           mov eax, dword [rax]
0x000094d6      4585ff         test r15d, r15d
0x000094d9      488b1dc06b20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x2100a0:8]=0x2100b0 obj.slotvec0
0x000094e0      89442418       mov dword [rsp + 0x18], eax
0x000094e4      0f8867010000   js 0x9651
0x000094ea      44393da76b20.  cmp dword [obj.nslots], r15d            ; [0x210098:4]=1
0x000094f1      7f62           jg 0x9555
0x000094f3      4181ffffffff.  cmp r15d, 0x7fffffff
0x000094fa      0f8456010000   je 0x9656
0x00009500      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00009504      488d05a56b20.  lea rax, obj.slotvec0                   ; 0x2100b0
0x0000950b      4963f4         movsxd rsi, r12d
0x0000950e      48c1e604       shl rsi, 4
0x00009512      4839c3         cmp rbx, rax
0x00009515      0f8415010000   je 0x9630
0x0000951b      4889df         mov rdi, rbx
0x0000951e      e80d100000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00009523      4889c3         mov rbx, rax
0x00009526      488905736b20.  mov qword [obj.slotvec], rax            ; [0x2100a0:8]=0x2100b0 obj.slotvec0
0x0000952d      48633d646b20.  movsxd rdi, dword [obj.nslots]          ; [0x210098:4]=1
0x00009534      4489e2         mov edx, r12d
0x00009537      31f6           xor esi, esi
0x00009539      29fa           sub edx, edi
0x0000953b      48c1e704       shl rdi, 4
0x0000953f      4863d2         movsxd rdx, edx
0x00009542      4801df         add rdi, rbx
0x00009545      48c1e204       shl rdx, 4
0x00009549      e88287ffff     call sym.imp.memset
0x0000954e      448925436b20.  mov dword [obj.nslots], r12d            ; [0x210098:4]=1
0x00009555      8b4504         mov eax, dword [rbp + 4]
0x00009558      49c1e704       shl r15, 4
0x0000955c      4883ec08       sub rsp, 8
0x00009560      4c01fb         add rbx, r15
0x00009563      4c8d7d08       lea r15, [rbp + 8]
0x00009567      448b4500       mov r8d, dword [rbp]
0x0000956b      4c8b1b         mov r11, qword [rbx]
0x0000956e      4c8b6308       mov r12, qword [rbx + 8]
0x00009572      4c89f1         mov rcx, r14
0x00009575      83c801         or eax, 1
0x00009578      89442424       mov dword [rsp + 0x24], eax
0x0000957c      ff7530         push qword [rbp + 0x30]
0x0000957f      4189c1         mov r9d, eax
0x00009582      ff7528         push qword [rbp + 0x28]
0x00009585      4157           push r15
0x00009587      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000958a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000958f      4c89e7         mov rdi, r12
0x00009592      4c895c2430     mov qword [rsp + 0x30], r11
0x00009597      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000959c      4883c420       add rsp, 0x20
0x000095a0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x000095a5      4939c3         cmp r11, rax
0x000095a8      7767           ja 0x9611
0x000095aa      488d7001       lea rsi, [rax + 1]
0x000095ae      488d058b6b20.  lea rax, obj.slot0                      ; 0x210140
0x000095b5      4939c4         cmp r12, rax
0x000095b8      488933         mov qword [rbx], rsi
0x000095bb      7412           je 0x95cf
0x000095bd      4c89e7         mov rdi, r12
0x000095c0      4889742410     mov qword [rsp + 0x10], rsi
0x000095c5      e82685ffff     call sym.imp.free
0x000095ca      488b742410     mov rsi, qword [rsp + 0x10]
0x000095cf      4889f7         mov rdi, rsi
0x000095d2      4889742410     mov qword [rsp + 0x10], rsi
0x000095d7      e8f40e0000     call sym.xmalloc
0x000095dc      4883ec08       sub rsp, 8
0x000095e0      48894308       mov qword [rbx + 8], rax
0x000095e4      448b4500       mov r8d, dword [rbp]
0x000095e8      ff7530         push qword [rbp + 0x30]
0x000095eb      ff7528         push qword [rbp + 0x28]
0x000095ee      4c89f1         mov rcx, r14
0x000095f1      4157           push r15
0x000095f3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x000095f8      4889c7         mov rdi, rax
0x000095fb      488b542428     mov rdx, qword [rsp + 0x28]
0x00009600      488b742430     mov rsi, qword [rsp + 0x30]
0x00009605      4989c4         mov r12, rax
0x00009608      e863ecffff     call sym.quotearg_buffer_restyled
0x0000960d      4883c420       add rsp, 0x20
0x00009611      8b442418       mov eax, dword [rsp + 0x18]
0x00009615      41894500       mov dword [r13], eax
0x00009619      4883c428       add rsp, 0x28
0x0000961d      4c89e0         mov rax, r12
0x00009620      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00009621      5d             pop rbp
0x00009622      415c           pop r12
0x00009624      415d           pop r13
0x00009626      415e           pop r14
0x00009628      415f           pop r15
0x0000962a      c3             ret
0x0000962b      0f1f440000     nop dword [rax + rax]
0x00009630      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00009632      e8f90e0000     call sym.xrealloc
0x00009637      660f6f05716a.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000963f      4889c3         mov rbx, rax
0x00009642      488905576a20.  mov qword [obj.slotvec], rax            ; [0x2100a0:8]=0x2100b0 obj.slotvec0
0x00009649      0f1100         movups xmmword [rax], xmm0
0x0000964c      e9dcfeffff     jmp 0x952d
0x00009651      e8aa84ffff     call sym.imp.abort
0x00009656      e8c5100000     call sym.xalloc_die
0x0000965b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00009660      4154           push r12
0x00009662      55             push rbp
0x00009663      53             push rbx
0x00009664      4889fb         mov rbx, rdi
0x00009667      e8a484ffff     call sym.imp.__errno_location
0x0000966c      448b20         mov r12d, dword [rax]
0x0000966f      4889c5         mov rbp, rax
0x00009672      488d05c76b20.  lea rax, obj.default_quoting_options    ; 0x210240
0x00009679      4885db         test rbx, rbx
0x0000967c      be38000000     mov esi, 0x38                           ; '8'
0x00009681      480f44d8       cmove rbx, rax
0x00009685      4889df         mov rdi, rbx
0x00009688      e843100000     call sym.xmemdup
0x0000968d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00009691      5b             pop rbx
0x00009692      5d             pop rbp
0x00009693      415c           pop r12
0x00009695      c3             ret
0x00009696      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x000096a0      488d05996b20.  lea rax, obj.default_quoting_options    ; 0x210240
0x000096a7      4885ff         test rdi, rdi
0x000096aa      480f44f8       cmove rdi, rax
0x000096ae      8b07           mov eax, dword [rdi]
0x000096b0      c3             ret
0x000096b1      0f1f440000     nop dword [rax + rax]
0x000096b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x000096c0      488d05796b20.  lea rax, obj.default_quoting_options    ; 0x210240
0x000096c7      4885ff         test rdi, rdi
0x000096ca      480f44f8       cmove rdi, rax
0x000096ce      8937           mov dword [rdi], esi
0x000096d0      c3             ret
0x000096d1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000096d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x000096e0      488d05596b20.  lea rax, obj.default_quoting_options    ; 0x210240
0x000096e7      4885ff         test rdi, rdi
0x000096ea      89f1           mov ecx, esi
0x000096ec      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x000096f0      89f0           mov eax, esi
0x000096f2      83e11f         and ecx, 0x1f
0x000096f5      c0e805         shr al, 5
0x000096f8      0fb6c0         movzx eax, al
0x000096fb      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00009700      8b37           mov esi, dword [rdi]
0x00009702      89f0           mov eax, esi
0x00009704      d3e8           shr eax, cl
0x00009706      31c2           xor edx, eax
0x00009708      83e001         and eax, 1
0x0000970b      83e201         and edx, 1
0x0000970e      d3e2           shl edx, cl
0x00009710      31f2           xor edx, esi
0x00009712      8917           mov dword [rdi], edx
0x00009714      c3             ret
0x00009715      90             nop
0x00009716      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00009720      488d05196b20.  lea rax, obj.default_quoting_options    ; 0x210240
0x00009727      4885ff         test rdi, rdi
0x0000972a      480f44f8       cmove rdi, rax
0x0000972e      8b4704         mov eax, dword [rdi + 4]
0x00009731      897704         mov dword [rdi + 4], esi
0x00009734      c3             ret
0x00009735      90             nop
0x00009736      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00009740      488d05f96a20.  lea rax, obj.default_quoting_options    ; 0x210240
0x00009747      4885ff         test rdi, rdi
0x0000974a      480f44f8       cmove rdi, rax
0x0000974e      4885f6         test rsi, rsi
0x00009751      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00009757      740e           je 0x9767
0x00009759      4885d2         test rdx, rdx
0x0000975c      7409           je 0x9767
0x0000975e      48897728       mov qword [rdi + 0x28], rsi
0x00009762      48895730       mov qword [rdi + 0x30], rdx
0x00009766      c3             ret
0x00009767      4883ec08       sub rsp, 8
0x0000976b      e89083ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00009770      4157           push r15
0x00009772      4156           push r14
0x00009774      488d05c56a20.  lea rax, obj.default_quoting_options    ; 0x210240
0x0000977b      4155           push r13
0x0000977d      4154           push r12
0x0000977f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00009782      55             push rbp
0x00009783      53             push rbx
0x00009784      4c89c3         mov rbx, r8
0x00009787      4989f6         mov r14, rsi
0x0000978a      4989d7         mov r15, rdx
0x0000978d      4883ec18       sub rsp, 0x18
0x00009791      4d85c0         test r8, r8
0x00009794      480f44d8       cmove rbx, rax
0x00009798      48894c2408     mov qword [rsp + 8], rcx
0x0000979d      e86e83ffff     call sym.imp.__errno_location
0x000097a2      448b20         mov r12d, dword [rax]
0x000097a5      4889c5         mov rbp, rax
0x000097a8      488d4308       lea rax, [rbx + 8]
0x000097ac      4883ec08       sub rsp, 8
0x000097b0      448b4b04       mov r9d, dword [rbx + 4]
0x000097b4      ff7330         push qword [rbx + 0x30]
0x000097b7      448b03         mov r8d, dword [rbx]
0x000097ba      ff7328         push qword [rbx + 0x28]
0x000097bd      4c89fa         mov rdx, r15
0x000097c0      50             push rax
0x000097c1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000097c6      4c89f6         mov rsi, r14
0x000097c9      4c89ef         mov rdi, r13
0x000097cc      e89feaffff     call sym.quotearg_buffer_restyled
0x000097d1      44896500       mov dword [rbp], r12d
0x000097d5      4883c438       add rsp, 0x38
0x000097d9      5b             pop rbx
0x000097da      5d             pop rbp
0x000097db      415c           pop r12
0x000097dd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000097df      415e           pop r14
0x000097e1      415f           pop r15
0x000097e3      c3             ret
0x000097e4      6690           nop
0x000097e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x000097f0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x000097f2      4156           push r14
0x000097f4      488d05456a20.  lea rax, obj.default_quoting_options    ; 0x210240
0x000097fb      4155           push r13
0x000097fd      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x000097ff      4989d4         mov r12, rdx
0x00009802      55             push rbp
0x00009803      53             push rbx
0x00009804      4889cb         mov rbx, rcx
0x00009807      4989fe         mov r14, rdi
0x0000980a      4989f7         mov r15, rsi
0x0000980d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00009811      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00009814      480f44d8       cmove rbx, rax
0x00009818      31ed           xor ebp, ebp
0x0000981a      e8f182ffff     call sym.imp.__errno_location
0x0000981f      4d85e4         test r12, r12
0x00009822      4989c5         mov r13, rax
0x00009825      8b00           mov eax, dword [rax]
0x00009827      400f94c5       sete bpl
0x0000982b      0b6b04         or ebp, dword [rbx + 4]
0x0000982e      4c8d5308       lea r10, [rbx + 8]
0x00009832      4883ec08       sub rsp, 8
0x00009836      448b03         mov r8d, dword [rbx]
0x00009839      4c89f9         mov rcx, r15
0x0000983c      89442414       mov dword [rsp + 0x14], eax
0x00009840      ff7330         push qword [rbx + 0x30]
0x00009843      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00009846      ff7328         push qword [rbx + 0x28]
0x00009849      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000984b      31f6           xor esi, esi
0x0000984d      4189e9         mov r9d, ebp
0x00009850      31ff           xor edi, edi
0x00009852      4c89542440     mov qword [rsp + 0x40], r10
0x00009857      e814eaffff     call sym.quotearg_buffer_restyled
0x0000985c      488d7001       lea rsi, [rax + 1]
0x00009860      4889442448     mov qword [rsp + 0x48], rax
0x00009865      4883c420       add rsp, 0x20
0x00009869      4889f7         mov rdi, rsi
0x0000986c      4889742418     mov qword [rsp + 0x18], rsi
0x00009871      e85a0c0000     call sym.xmalloc
0x00009876      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000987b      4883ec08       sub rsp, 8
0x0000987f      ff7330         push qword [rbx + 0x30]
0x00009882      ff7328         push qword [rbx + 0x28]
0x00009885      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000988a      4189e9         mov r9d, ebp
0x0000988d      448b03         mov r8d, dword [rbx]
0x00009890      4c89f9         mov rcx, r15
0x00009893      4c89f2         mov rdx, r14
0x00009896      4889c7         mov rdi, rax
0x00009899      4152           push r10
0x0000989b      488b742438     mov rsi, qword [rsp + 0x38]
0x000098a0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x000098a5      8b44242c       mov eax, dword [rsp + 0x2c]
0x000098a9      4883c420       add rsp, 0x20
0x000098ad      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x000098b0      41894500       mov dword [r13], eax
0x000098b4      7409           je 0x98bf
0x000098b6      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x000098bb      4d891c24       mov qword [r12], r11
0x000098bf      488b442410     mov rax, qword [rsp + 0x10]
0x000098c4      4883c438       add rsp, 0x38
0x000098c8      5b             pop rbx
0x000098c9      5d             pop rbp
0x000098ca      415c           pop r12
0x000098cc      415d           pop r13
0x000098ce      415e           pop r14
0x000098d0      415f           pop r15
0x000098d2      c3             ret
0x000098d3      0f1f00         nop dword [rax]
0x000098d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x000098e0      4889d1         mov rcx, rdx
0x000098e3      31d2           xor edx, edx
0x000098e5      e906ffffff     jmp sym.quotearg_alloc_mem
0x000098ea      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x000098f0      8b05a2672000   mov eax, dword [obj.nslots]             ; [0x210098:4]=1
0x000098f6      4154           push r12
0x000098f8      4c8b25a16720.  mov r12, qword [obj.slotvec]            ; [0x2100a0:8]=0x2100b0 obj.slotvec0
0x000098ff      55             push rbp
0x00009900      53             push rbx
0x00009901      83f801         cmp eax, 1
0x00009904      7e2b           jle 0x9931                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00009906      83e802         sub eax, 2
0x00009909      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000990e      48c1e004       shl rax, 4
0x00009912      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00009917      660f1f840000.  nop word [rax + rax]
0x00009920      488b3b         mov rdi, qword [rbx]
0x00009923      4883c310       add rbx, 0x10
0x00009927      e8c481ffff     call sym.imp.free
0x0000992c      4839eb         cmp rbx, rbp
0x0000992f      75ef           jne 0x9920
0x00009931      498b7c2408     mov rdi, qword [r12 + 8]
0x00009936      488d1d036820.  lea rbx, obj.slot0                      ; 0x210140
0x0000993d      4839df         cmp rdi, rbx
0x00009940      7417           je 0x9959
0x00009942      e8a981ffff     call sym.imp.free
0x00009947      48c7055e6720.  mov qword [obj.slotvec0], 0x100         ; [0x2100b0:8]=256
0x00009952      48891d5f6720.  mov qword [0x002100b8], rbx             ; [0x2100b8:8]=0x210140 obj.slot0
0x00009959      488d1d506720.  lea rbx, obj.slotvec0                   ; 0x2100b0
0x00009960      4939dc         cmp r12, rbx
0x00009963      740f           je 0x9974
0x00009965      4c89e7         mov rdi, r12
0x00009968      e88381ffff     call sym.imp.free
0x0000996d      48891d2c6720.  mov qword [obj.slotvec], rbx            ; [0x2100a0:8]=0x2100b0 obj.slotvec0
0x00009974      5b             pop rbx
0x00009975      c70519672000.  mov dword [obj.nslots], 1               ; [0x210098:4]=1
0x0000997f      5d             pop rbp
0x00009980      415c           pop r12
0x00009982      c3             ret
0x00009983      0f1f00         nop dword [rax]
0x00009986      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00009990      488d0da96820.  lea rcx, obj.default_quoting_options    ; 0x210240
0x00009997      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000999e      e90dfbffff     jmp sym.quotearg_n_options
0x000099a3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x000099a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x000099b0      488d0d896820.  lea rcx, obj.default_quoting_options    ; 0x210240
0x000099b7      e9f4faffff     jmp sym.quotearg_n_options
0x000099bc      0f1f4000       nop dword [rax]
;-- quotearg:
0x000099c0      488d0d796820.  lea rcx, obj.default_quoting_options    ; 0x210240
0x000099c7      4889fe         mov rsi, rdi
0x000099ca      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000099d1      31ff           xor edi, edi
0x000099d3      e9d8faffff     jmp sym.quotearg_n_options
0x000099d8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x000099e0      488d0d596820.  lea rcx, obj.default_quoting_options    ; 0x210240
0x000099e7      4889f2         mov rdx, rsi
0x000099ea      4889fe         mov rsi, rdi
0x000099ed      31ff           xor edi, edi
0x000099ef      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x000099f4      6690           nop
0x000099f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00009a00      4883ec48       sub rsp, 0x48
0x00009a04      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00009a07      64488b142528.  mov rdx, qword fs:[0x28]
0x00009a10      4889542438     mov qword [rsp + 0x38], rdx
0x00009a15      31d2           xor edx, edx
0x00009a17      83fe0a         cmp esi, 0xa
0x00009a1a      7468           je 0x9a84
0x00009a1c      893424         mov dword [rsp], esi
0x00009a1f      4889e1         mov rcx, rsp
0x00009a22      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00009a29      4889c6         mov rsi, rax
0x00009a2c      48c744240400.  mov qword [rsp + 4], 0
0x00009a35      48c744240c00.  mov qword [rsp + 0xc], 0
0x00009a3e      48c744241400.  mov qword [rsp + 0x14], 0
0x00009a47      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00009a50      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00009a59      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00009a62      c74424340000.  mov dword [rsp + 0x34], 0
0x00009a6a      e841faffff     call sym.quotearg_n_options
0x00009a6f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00009a74      6448330c2528.  xor rcx, qword fs:[0x28]
0x00009a7d      750a           jne 0x9a89                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00009a7f      4883c448       add rsp, 0x48
0x00009a83      c3             ret
0x00009a84      e87780ffff     call sym.imp.abort
0x00009a89      e88281ffff     call sym.imp.__stack_chk_fail
0x00009a8e      6690           nop
;-- quotearg_n_style_mem:
0x00009a90      4883ec48       sub rsp, 0x48
0x00009a94      4889d0         mov rax, rdx
0x00009a97      4889ca         mov rdx, rcx
0x00009a9a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00009aa3      48894c2438     mov qword [rsp + 0x38], rcx
0x00009aa8      31c9           xor ecx, ecx
0x00009aaa      83fe0a         cmp esi, 0xa
0x00009aad      7461           je 0x9b10
0x00009aaf      893424         mov dword [rsp], esi
0x00009ab2      4889e1         mov rcx, rsp
0x00009ab5      4889c6         mov rsi, rax
0x00009ab8      48c744240400.  mov qword [rsp + 4], 0
0x00009ac1      48c744240c00.  mov qword [rsp + 0xc], 0
0x00009aca      48c744241400.  mov qword [rsp + 0x14], 0
0x00009ad3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00009adc      48c744242400.  mov qword [rsp + 0x24], 0
0x00009ae5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00009aee      c74424340000.  mov dword [rsp + 0x34], 0
0x00009af6      e8b5f9ffff     call sym.quotearg_n_options
0x00009afb      488b542438     mov rdx, qword [rsp + 0x38]
0x00009b00      644833142528.  xor rdx, qword fs:[0x28]
0x00009b09      750a           jne 0x9b15
0x00009b0b      4883c448       add rsp, 0x48
0x00009b0f      c3             ret
0x00009b10      e8eb7fffff     call sym.imp.abort
0x00009b15      e8f680ffff     call sym.imp.__stack_chk_fail
0x00009b1a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00009b20      4889f2         mov rdx, rsi
0x00009b23      89fe           mov esi, edi
0x00009b25      31ff           xor edi, edi
0x00009b27      e9d4feffff     jmp sym.quotearg_n_style
0x00009b2c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00009b30      4889d1         mov rcx, rdx
0x00009b33      4889f2         mov rdx, rsi
0x00009b36      89fe           mov esi, edi
0x00009b38      31ff           xor edi, edi
0x00009b3a      e951ffffff     jmp sym.quotearg_n_style_mem
0x00009b3f      90             nop
;-- quotearg_char_mem:
0x00009b40      4883ec48       sub rsp, 0x48
0x00009b44      89d1           mov ecx, edx
0x00009b46      64488b042528.  mov rax, qword fs:[0x28]
0x00009b4f      4889442438     mov qword [rsp + 0x38], rax
0x00009b54      31c0           xor eax, eax
0x00009b56      488b05136720.  mov rax, qword [0x00210270]             ; [0x210270:8]=0
0x00009b5d      4989e0         mov r8, rsp
0x00009b60      83e11f         and ecx, 0x1f
0x00009b63      660f6f05d566.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00009b6b      4889442430     mov qword [rsp + 0x30], rax
0x00009b70      89d0           mov eax, edx
0x00009b72      0f290424       movaps xmmword [rsp], xmm0
0x00009b76      c0e805         shr al, 5
0x00009b79      0fb6c0         movzx eax, al
0x00009b7c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00009b81      660f6f05c766.  movdqa xmm0, xmmword [0x00210250]
0x00009b89      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00009b8e      660f6f05ca66.  movdqa xmm0, xmmword [0x00210260]
0x00009b96      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00009b9b      418b11         mov edx, dword [r9]
0x00009b9e      89d0           mov eax, edx
0x00009ba0      d3e8           shr eax, cl
0x00009ba2      f7d0           not eax
0x00009ba4      83e001         and eax, 1
0x00009ba7      d3e0           shl eax, cl
0x00009ba9      4c89c1         mov rcx, r8
0x00009bac      31d0           xor eax, edx
0x00009bae      4889f2         mov rdx, rsi
0x00009bb1      4889fe         mov rsi, rdi
0x00009bb4      418901         mov dword [r9], eax
0x00009bb7      31ff           xor edi, edi
0x00009bb9      e8f2f8ffff     call sym.quotearg_n_options
0x00009bbe      488b742438     mov rsi, qword [rsp + 0x38]
0x00009bc3      644833342528.  xor rsi, qword fs:[0x28]
0x00009bcc      7505           jne 0x9bd3
0x00009bce      4883c448       add rsp, 0x48
0x00009bd2      c3             ret
0x00009bd3      e83880ffff     call sym.imp.__stack_chk_fail
0x00009bd8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00009be0      400fbed6       movsx edx, sil
0x00009be4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00009beb      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00009bf0      ba3a000000     mov edx, 0x3a                           ; ':'
0x00009bf5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00009bfc      e93fffffff     jmp sym.quotearg_char_mem
0x00009c01      0f1f440000     nop dword [rax + rax]
0x00009c06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00009c10      ba3a000000     mov edx, 0x3a                           ; ':'
0x00009c15      e926ffffff     jmp sym.quotearg_char_mem
0x00009c1a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00009c20      4883ec48       sub rsp, 0x48
0x00009c24      4889d0         mov rax, rdx
0x00009c27      64488b142528.  mov rdx, qword fs:[0x28]
0x00009c30      4889542438     mov qword [rsp + 0x38], rdx
0x00009c35      31d2           xor edx, edx
0x00009c37      83fe0a         cmp esi, 0xa
0x00009c3a      7468           je 0x9ca4
0x00009c3c      893424         mov dword [rsp], esi
0x00009c3f      4889e1         mov rcx, rsp
0x00009c42      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00009c49      4889c6         mov rsi, rax
0x00009c4c      48c744240400.  mov qword [rsp + 4], 0
0x00009c55      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00009c5e      48c744241400.  mov qword [rsp + 0x14], 0
0x00009c67      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00009c70      48c744242400.  mov qword [rsp + 0x24], 0
0x00009c79      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00009c82      c74424340000.  mov dword [rsp + 0x34], 0
0x00009c8a      e821f8ffff     call sym.quotearg_n_options
0x00009c8f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00009c94      6448330c2528.  xor rcx, qword fs:[0x28]
0x00009c9d      750a           jne 0x9ca9
0x00009c9f      4883c448       add rsp, 0x48
0x00009ca3      c3             ret
0x00009ca4      e8577effff     call sym.imp.abort
0x00009ca9      e8627fffff     call sym.imp.__stack_chk_fail
0x00009cae      6690           nop
;-- quotearg_n_custom_mem:
0x00009cb0      4883ec48       sub rsp, 0x48
0x00009cb4      4989c9         mov r9, rcx
0x00009cb7      488b0db26520.  mov rcx, qword [0x00210270]             ; [0x210270:8]=0
0x00009cbe      660f6f057a65.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00009cc6      64488b042528.  mov rax, qword fs:[0x28]
0x00009ccf      4889442438     mov qword [rsp + 0x38], rax
0x00009cd4      31c0           xor eax, eax
0x00009cd6      0f290424       movaps xmmword [rsp], xmm0
0x00009cda      4885f6         test rsi, rsi
0x00009cdd      48894c2430     mov qword [rsp + 0x30], rcx
0x00009ce2      c704240a0000.  mov dword [rsp], 0xa
0x00009ce9      660f6f055f65.  movdqa xmm0, xmmword [0x00210250]
0x00009cf1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00009cf6      660f6f056265.  movdqa xmm0, xmmword [0x00210260]
0x00009cfe      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00009d03      7432           je 0x9d37
0x00009d05      4885d2         test rdx, rdx
0x00009d08      742d           je 0x9d37
0x00009d0a      4889742428     mov qword [rsp + 0x28], rsi
0x00009d0f      4889542430     mov qword [rsp + 0x30], rdx
0x00009d14      4889e1         mov rcx, rsp
0x00009d17      4c89c2         mov rdx, r8
0x00009d1a      4c89ce         mov rsi, r9
0x00009d1d      e88ef7ffff     call sym.quotearg_n_options
0x00009d22      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00009d27      6448333c2528.  xor rdi, qword fs:[0x28]
0x00009d30      750a           jne 0x9d3c
0x00009d32      4883c448       add rsp, 0x48
0x00009d36      c3             ret
0x00009d37      e8c47dffff     call sym.imp.abort
0x00009d3c      e8cf7effff     call sym.imp.__stack_chk_fail
0x00009d41      0f1f440000     nop dword [rax + rax]
0x00009d46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00009d50      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00009d57      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00009d5c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00009d60      4889d1         mov rcx, rdx
0x00009d63      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00009d6a      4889f2         mov rdx, rsi
0x00009d6d      4889fe         mov rsi, rdi
0x00009d70      31ff           xor edi, edi
0x00009d72      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00009d77      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00009d80      4989c8         mov r8, rcx
0x00009d83      4889d1         mov rcx, rdx
0x00009d86      4889f2         mov rdx, rsi
0x00009d89      4889fe         mov rsi, rdi
0x00009d8c      31ff           xor edi, edi
0x00009d8e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00009d93      0f1f00         nop dword [rax]
0x00009d96      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00009da0      488d0db96220.  lea rcx, obj.quote_quoting_options      ; 0x210060
0x00009da7      e904f7ffff     jmp sym.quotearg_n_options
0x00009dac      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00009db0      488d0da96220.  lea rcx, obj.quote_quoting_options      ; 0x210060
0x00009db7      4889f2         mov rdx, rsi
0x00009dba      4889fe         mov rsi, rdi
0x00009dbd      31ff           xor edi, edi
0x00009dbf      e9ecf6ffff     jmp sym.quotearg_n_options
0x00009dc4      6690           nop
0x00009dc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00009dd0      488d0d896220.  lea rcx, obj.quote_quoting_options      ; 0x210060
0x00009dd7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00009dde      e9cdf6ffff     jmp sym.quotearg_n_options
0x00009de3      0f1f00         nop dword [rax]
0x00009de6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00009df0      488d0d696220.  lea rcx, obj.quote_quoting_options      ; 0x210060
0x00009df7      4889fe         mov rsi, rdi
0x00009dfa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00009e01      31ff           xor edi, edi
0x00009e03      e9a8f6ffff     jmp sym.quotearg_n_options
0x00009e08      0f1f84000000.  nop dword [rax + rax]
;-- safe_read:
0x00009e10      4155           push r13                                ; ../coreutils-8.31/lib/safe-read.c:57
0x00009e12      4154           push r12
0x00009e14      4189fd         mov r13d, edi
0x00009e17      55             push rbp
0x00009e18      53             push rbx
0x00009e19      4989f4         mov r12, rsi
0x00009e1c      4889d3         mov rbx, rdx
0x00009e1f      4883ec08       sub rsp, 8
0x00009e23      0f1f440000     nop dword [rax + rax]
0x00009e28      4889da         mov rdx, rbx                            ; unistd.h:44   return __read_alias (__fd, __buf, __nbytes);
0x00009e2b      4c89e6         mov rsi, r12
0x00009e2e      4489ef         mov edi, r13d
0x00009e31      e8ca7effff     call sym.imp.read
0x00009e36      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/safe-read.c:62
0x00009e39      4889c5         mov rbp, rax                            ; unistd.h:44   return __read_alias (__fd, __buf, __nbytes);
0x00009e3c      7922           jns 0x9e60                              ; ../coreutils-8.31/lib/safe-read.c:62
0x00009e3e      e8cd7cffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/safe-read.c:64
0x00009e43      8b00           mov eax, dword [rax]
0x00009e45      83f804         cmp eax, 4
0x00009e48      74de           je 0x9e28
0x00009e4a      4881fb0000f0.  cmp rbx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:66
0x00009e51      760d           jbe 0x9e60
0x00009e53      83f816         cmp eax, 0x16
0x00009e56      7508           jne 0x9e60
0x00009e58      bb0000f07f     mov ebx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:67
0x00009e5d      ebc9           jmp 0x9e28
0x00009e5f      90             nop
0x00009e60      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/safe-read.c:71
0x00009e64      4889e8         mov rax, rbp
0x00009e67      5b             pop rbx
0x00009e68      5d             pop rbp
0x00009e69      415c           pop r12
0x00009e6b      415d           pop r13
0x00009e6d      c3             ret
0x00009e6e      6690           nop
;-- fd_safer:
0x00009e70      4155           push r13                                ; ../coreutils-8.31/lib/fd-safer.c:38
0x00009e72      4154           push r12
0x00009e74      55             push rbp
0x00009e75      53             push rbx
0x00009e76      89fb           mov ebx, edi
0x00009e78      4883ec08       sub rsp, 8
0x00009e7c      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/fd-safer.c:39
0x00009e7f      7721           ja 0x9ea2
0x00009e81      e8aa150000     call sym.dup_safer                      ; ../coreutils-8.31/lib/fd-safer.c:41
0x00009e86      4189c4         mov r12d, eax
0x00009e89      e8827cffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-safer.c:42
0x00009e8e      448b28         mov r13d, dword [rax]
0x00009e91      4889c5         mov rbp, rax
0x00009e94      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-safer.c:43
0x00009e96      e8457effff     call sym.imp.close
0x00009e9b      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-safer.c:45
0x00009e9e      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-safer.c:44
0x00009ea2      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-safer.c:49
0x00009ea6      89d8           mov eax, ebx
0x00009ea8      5b             pop rbx
0x00009ea9      5d             pop rbp
0x00009eaa      415c           pop r12
0x00009eac      415d           pop r13
0x00009eae      c3             ret
0x00009eaf      90             nop
;-- version_etc_arn:
0x00009eb0      4157           push r15
0x00009eb2      4156           push r14
0x00009eb4      4155           push r13
0x00009eb6      4154           push r12
0x00009eb8      4d89cc         mov r12, r9
0x00009ebb      55             push rbp
0x00009ebc      53             push rbx
0x00009ebd      4889fd         mov rbp, rdi
0x00009ec0      4c89c3         mov rbx, r8
0x00009ec3      4883ec28       sub rsp, 0x28
0x00009ec7      4885f6         test rsi, rsi
0x00009eca      0f8418010000   je 0x9fe8
0x00009ed0      4989d0         mov r8, rdx
0x00009ed3      488d15ce3000.  lea rdx, [0x0000cfa8]                   ; "%s (%s) %s\n"
0x00009eda      4989c9         mov r9, rcx
0x00009edd      31c0           xor eax, eax
0x00009edf      4889f1         mov rcx, rsi
0x00009ee2      be01000000     mov esi, 1
0x00009ee7      e8f47fffff     call sym.imp.__fprintf_chk
0x00009eec      488d35c83000.  lea rsi, [0x0000cfbb]                   ; "(C)"
0x00009ef3      31ff           xor edi, edi
0x00009ef5      ba05000000     mov edx, 5
0x00009efa      e8d17cffff     call sym.imp.dcgettext
0x00009eff      488d15da3300.  lea rdx, obj.version_etc_copyright      ; 0xd2e0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00009f06      4889c1         mov rcx, rax
0x00009f09      41b8e3070000   mov r8d, 0x7e3
0x00009f0f      be01000000     mov esi, 1
0x00009f14      4889ef         mov rdi, rbp
0x00009f17      31c0           xor eax, eax
0x00009f19      e8c27fffff     call sym.imp.__fprintf_chk
0x00009f1e      488d35233100.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0xd048 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00009f25      31ff           xor edi, edi
0x00009f27      ba05000000     mov edx, 5
0x00009f2c      e89f7cffff     call sym.imp.dcgettext
0x00009f31      4889ee         mov rsi, rbp
0x00009f34      4889c7         mov rdi, rax
0x00009f37      e8e47dffff     call sym.imp.fputs_unlocked
0x00009f3c      4983fc09       cmp r12, 9
0x00009f40      0f873a030000   ja 0xa280
0x00009f46      488d15573300.  lea rdx, [0x0000d2a4]
0x00009f4d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00009f51      4801d0         add rax, rdx
0x00009f54      ffe0           jmp rax
0x00009f56      662e0f1f8400.  nop word cs:[rax + rax]
0x00009f60      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00009f64      488b4310       mov rax, qword [rbx + 0x10]
0x00009f68      488d35493200.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0xd1b8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00009f6f      4c8b4308       mov r8, qword [rbx + 8]
0x00009f73      ba05000000     mov edx, 5
0x00009f78      31ff           xor edi, edi
0x00009f7a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00009f7e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009f82      4c894c2410     mov qword [rsp + 0x10], r9
0x00009f87      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00009f8b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009f8f      48890424       mov qword [rsp], rax
0x00009f93      4c89442408     mov qword [rsp + 8], r8
0x00009f98      488b1b         mov rbx, qword [rbx]
0x00009f9b      e8307cffff     call sym.imp.dcgettext
0x00009fa0      4883ec08       sub rsp, 8
0x00009fa4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00009fa9      4889c2         mov rdx, rax
0x00009fac      4889d9         mov rcx, rbx
0x00009faf      be01000000     mov esi, 1
0x00009fb4      4889ef         mov rdi, rbp
0x00009fb7      31c0           xor eax, eax
0x00009fb9      4151           push r9
0x00009fbb      4155           push r13
0x00009fbd      4154           push r12
0x00009fbf      4157           push r15
0x00009fc1      4156           push r14
0x00009fc3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00009fc8      4c8b442438     mov r8, qword [rsp + 0x38]
0x00009fcd      e80e7fffff     call sym.imp.__fprintf_chk
0x00009fd2      4883c430       add rsp, 0x30
0x00009fd6      4883c428       add rsp, 0x28
0x00009fda      5b             pop rbx
0x00009fdb      5d             pop rbp
0x00009fdc      415c           pop r12
0x00009fde      415d           pop r13
0x00009fe0      415e           pop r14
0x00009fe2      415f           pop r15
0x00009fe4      c3             ret
0x00009fe5      0f1f00         nop dword [rax]
0x00009fe8      4989c8         mov r8, rcx
0x00009feb      4889d1         mov rcx, rdx
0x00009fee      488d15bf2f00.  lea rdx, str.s__s                       ; 0xcfb4 ; "%s %s\n"
0x00009ff5      be01000000     mov esi, 1
0x00009ffa      31c0           xor eax, eax
0x00009ffc      e8df7effff     call sym.imp.__fprintf_chk
0x0000a001      e9e6feffff     jmp 0x9eec
0x0000a006      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a010      4c8b5340       mov r10, qword [rbx + 0x40]
0x0000a014      4c8b4b38       mov r9, qword [rbx + 0x38]
0x0000a018      488d35c93100.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0xd1e8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000a01f      488b4310       mov rax, qword [rbx + 0x10]
0x0000a023      4c8b4308       mov r8, qword [rbx + 8]
0x0000a027      ba05000000     mov edx, 5
0x0000a02c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000a030      4c8b6328       mov r12, qword [rbx + 0x28]
0x0000a034      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000a038      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000a03c      488b1b         mov rbx, qword [rbx]
0x0000a03f      4c89542418     mov qword [rsp + 0x18], r10
0x0000a044      4c894c2410     mov qword [rsp + 0x10], r9
0x0000a049      48890424       mov qword [rsp], rax
0x0000a04d      4c89442408     mov qword [rsp + 8], r8
0x0000a052      31ff           xor edi, edi
0x0000a054      e8777bffff     call sym.imp.dcgettext
0x0000a059      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000a05e      4152           push r10
0x0000a060      e93fffffff     jmp 0x9fa4
0x0000a065      0f1f00         nop dword [rax]
0x0000a068      488b1b         mov rbx, qword [rbx]
0x0000a06b      488d354d2f00.  lea rsi, str.Written_by__s.             ; 0xcfbf ; "Written by %s.\n"
0x0000a072      ba05000000     mov edx, 5
0x0000a077      31ff           xor edi, edi
0x0000a079      e8527bffff     call sym.imp.dcgettext
0x0000a07e      4883c428       add rsp, 0x28
0x0000a082      4889d9         mov rcx, rbx
0x0000a085      4889ef         mov rdi, rbp
0x0000a088      5b             pop rbx
0x0000a089      5d             pop rbp
0x0000a08a      415c           pop r12
0x0000a08c      415d           pop r13
0x0000a08e      415e           pop r14
0x0000a090      415f           pop r15
0x0000a092      4889c2         mov rdx, rax
0x0000a095      be01000000     mov esi, 1
0x0000a09a      31c0           xor eax, eax
0x0000a09c      e93f7effff     jmp sym.imp.__fprintf_chk
0x0000a0a1      0f1f80000000.  nop dword [rax]
0x0000a0a8      4c8b6308       mov r12, qword [rbx + 8]
0x0000a0ac      488d351c2f00.  lea rsi, str.Written_by__s_and__s.      ; 0xcfcf ; "Written by %s and %s.\n"
0x0000a0b3      488b1b         mov rbx, qword [rbx]
0x0000a0b6      ba05000000     mov edx, 5
0x0000a0bb      31ff           xor edi, edi
0x0000a0bd      e80e7bffff     call sym.imp.dcgettext
0x0000a0c2      4883c428       add rsp, 0x28
0x0000a0c6      4d89e0         mov r8, r12
0x0000a0c9      4889d9         mov rcx, rbx
0x0000a0cc      4889ef         mov rdi, rbp
0x0000a0cf      4889c2         mov rdx, rax
0x0000a0d2      be01000000     mov esi, 1
0x0000a0d7      5b             pop rbx
0x0000a0d8      5d             pop rbp
0x0000a0d9      415c           pop r12
0x0000a0db      415d           pop r13
0x0000a0dd      415e           pop r14
0x0000a0df      415f           pop r15
0x0000a0e1      31c0           xor eax, eax
0x0000a0e3      e9f87dffff     jmp sym.imp.__fprintf_chk
0x0000a0e8      0f1f84000000.  nop dword [rax + rax]
0x0000a0f0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x0000a0f4      4c8b6308       mov r12, qword [rbx + 8]
0x0000a0f8      488d35e72e00.  lea rsi, str.Written_by__s___s__and__s. ; 0xcfe6 ; "Written by %s, %s, and %s.\n"
0x0000a0ff      488b1b         mov rbx, qword [rbx]
0x0000a102      ba05000000     mov edx, 5
0x0000a107      31ff           xor edi, edi
0x0000a109      e8c27affff     call sym.imp.dcgettext
0x0000a10e      4883c428       add rsp, 0x28
0x0000a112      4d89e9         mov r9, r13
0x0000a115      4d89e0         mov r8, r12
0x0000a118      4889d9         mov rcx, rbx
0x0000a11b      4889ef         mov rdi, rbp
0x0000a11e      4889c2         mov rdx, rax
0x0000a121      5b             pop rbx
0x0000a122      5d             pop rbp
0x0000a123      415c           pop r12
0x0000a125      415d           pop r13
0x0000a127      415e           pop r14
0x0000a129      415f           pop r15
0x0000a12b      be01000000     mov esi, 1
0x0000a130      31c0           xor eax, eax
0x0000a132      e9a97dffff     jmp sym.imp.__fprintf_chk
0x0000a137      660f1f840000.  nop word [rax + rax]
0x0000a140      488d35d12f00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0xd118 ; "Written by %s, %s, %s,\nand %s.\n"
0x0000a147      ba05000000     mov edx, 5
0x0000a14c      31ff           xor edi, edi
0x0000a14e      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000a152      4c8b6b10       mov r13, qword [rbx + 0x10]
0x0000a156      4c8b6308       mov r12, qword [rbx + 8]
0x0000a15a      488b1b         mov rbx, qword [rbx]
0x0000a15d      e86e7affff     call sym.imp.dcgettext
0x0000a162      4883ec08       sub rsp, 8
0x0000a166      4156           push r14
0x0000a168      4889c2         mov rdx, rax
0x0000a16b      4d89e9         mov r9, r13
0x0000a16e      4d89e0         mov r8, r12
0x0000a171      4889d9         mov rcx, rbx
0x0000a174      4889ef         mov rdi, rbp
0x0000a177      be01000000     mov esi, 1
0x0000a17c      31c0           xor eax, eax
0x0000a17e      e85d7dffff     call sym.imp.__fprintf_chk
0x0000a183      58             pop rax
0x0000a184      5a             pop rdx
0x0000a185      4883c428       add rsp, 0x28
0x0000a189      5b             pop rbx
0x0000a18a      5d             pop rbp
0x0000a18b      415c           pop r12
0x0000a18d      415d           pop r13
0x0000a18f      415e           pop r14
0x0000a191      415f           pop r15
0x0000a193      c3             ret
0x0000a194      0f1f4000       nop dword [rax]
0x0000a198      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000a19c      488d35952f00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0xd138 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x0000a1a3      ba05000000     mov edx, 5
0x0000a1a8      31ff           xor edi, edi
0x0000a1aa      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000a1ae      4c8b6b10       mov r13, qword [rbx + 0x10]
0x0000a1b2      4c8b6308       mov r12, qword [rbx + 8]
0x0000a1b6      488b1b         mov rbx, qword [rbx]
0x0000a1b9      e8127affff     call sym.imp.dcgettext
0x0000a1be      4157           push r15
0x0000a1c0      eba4           jmp 0xa166
0x0000a1c2      660f1f440000   nop word [rax + rax]
0x0000a1c8      4c8b4308       mov r8, qword [rbx + 8]
0x0000a1cc      4c8b6328       mov r12, qword [rbx + 0x28]
0x0000a1d0      488d35892f00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0xd160 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x0000a1d7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000a1db      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000a1df      ba05000000     mov edx, 5
0x0000a1e4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x0000a1e8      31ff           xor edi, edi
0x0000a1ea      488b1b         mov rbx, qword [rbx]
0x0000a1ed      4c890424       mov qword [rsp], r8
0x0000a1f1      e8da79ffff     call sym.imp.dcgettext
0x0000a1f6      4883ec08       sub rsp, 8
0x0000a1fa      4d89e9         mov r9, r13
0x0000a1fd      4154           push r12
0x0000a1ff      4157           push r15
0x0000a201      4156           push r14
0x0000a203      4c8b442420     mov r8, qword [rsp + 0x20]
0x0000a208      4889d9         mov rcx, rbx
0x0000a20b      4889c2         mov rdx, rax
0x0000a20e      4889ef         mov rdi, rbp
0x0000a211      be01000000     mov esi, 1
0x0000a216      31c0           xor eax, eax
0x0000a218      e8c37cffff     call sym.imp.__fprintf_chk
0x0000a21d      4883c420       add rsp, 0x20
0x0000a221      4883c428       add rsp, 0x28
0x0000a225      5b             pop rbx
0x0000a226      5d             pop rbp
0x0000a227      415c           pop r12
0x0000a229      415d           pop r13
0x0000a22b      415e           pop r14
0x0000a22d      415f           pop r15
0x0000a22f      c3             ret
0x0000a230      4c8b4b10       mov r9, qword [rbx + 0x10]
0x0000a234      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000a238      488d35492f00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0xd188 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000a23f      4c8b6328       mov r12, qword [rbx + 0x28]
0x0000a243      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000a247      ba05000000     mov edx, 5
0x0000a24c      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000a250      4c8b4308       mov r8, qword [rbx + 8]
0x0000a254      31ff           xor edi, edi
0x0000a256      4c894c2408     mov qword [rsp + 8], r9
0x0000a25b      488b1b         mov rbx, qword [rbx]
0x0000a25e      4c890424       mov qword [rsp], r8
0x0000a262      e86979ffff     call sym.imp.dcgettext
0x0000a267      4155           push r13
0x0000a269      4154           push r12
0x0000a26b      4157           push r15
0x0000a26d      4156           push r14
0x0000a26f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x0000a274      eb8d           jmp 0xa203
0x0000a276      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a280      4c8b5340       mov r10, qword [rbx + 0x40]
0x0000a284      4c8b4b38       mov r9, qword [rbx + 0x38]
0x0000a288      ba05000000     mov edx, 5
0x0000a28d      488b4310       mov rax, qword [rbx + 0x10]
0x0000a291      4c8b4308       mov r8, qword [rbx + 8]
0x0000a295      488d35842f00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0xd220 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000a29c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000a2a0      4c8b6328       mov r12, qword [rbx + 0x28]
0x0000a2a4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000a2a8      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000a2ac      4c89542418     mov qword [rsp + 0x18], r10
0x0000a2b1      4c894c2410     mov qword [rsp + 0x10], r9
0x0000a2b6      48890424       mov qword [rsp], rax
0x0000a2ba      4c89442408     mov qword [rsp + 8], r8
0x0000a2bf      488b1b         mov rbx, qword [rbx]
0x0000a2c2      e98bfdffff     jmp 0xa052
0x0000a2c7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x0000a2d0      4531c9         xor r9d, r9d
0x0000a2d3      49833800       cmp qword [r8], 0
0x0000a2d7      7412           je 0xa2eb
0x0000a2d9      0f1f80000000.  nop dword [rax]
0x0000a2e0      4983c101       add r9, 1
0x0000a2e4      4b833cc800     cmp qword [r8 + r9*8], 0
0x0000a2e9      75f5           jne 0xa2e0
0x0000a2eb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x0000a2f0      4883ec68       sub rsp, 0x68
0x0000a2f4      4d89c2         mov r10, r8
0x0000a2f7      4531c9         xor r9d, r9d
0x0000a2fa      64488b042528.  mov rax, qword fs:[0x28]
0x0000a303      4889442458     mov qword [rsp + 0x58], rax
0x0000a308      31c0           xor eax, eax
0x0000a30a      4989e0         mov r8, rsp
0x0000a30d      0f1f00         nop dword [rax]
0x0000a310      418b02         mov eax, dword [r10]
0x0000a313      83f82f         cmp eax, 0x2f
0x0000a316      7742           ja 0xa35a
0x0000a318      4189c3         mov r11d, eax
0x0000a31b      4d035a10       add r11, qword [r10 + 0x10]
0x0000a31f      83c008         add eax, 8
0x0000a322      418902         mov dword [r10], eax
0x0000a325      498b03         mov rax, qword [r11]
0x0000a328      4885c0         test rax, rax
0x0000a32b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000a32f      740a           je 0xa33b
0x0000a331      4983c101       add r9, 1
0x0000a335      4983f90a       cmp r9, 0xa
0x0000a339      75d5           jne 0xa310
0x0000a33b      e870fbffff     call sym.version_etc_arn
0x0000a340      488b442458     mov rax, qword [rsp + 0x58]
0x0000a345      644833042528.  xor rax, qword fs:[0x28]
0x0000a34e      7505           jne 0xa355
0x0000a350      4883c468       add rsp, 0x68
0x0000a354      c3             ret
0x0000a355      e8b678ffff     call sym.imp.__stack_chk_fail
0x0000a35a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000a35e      498d4308       lea rax, [r11 + 8]
0x0000a362      49894208       mov qword [r10 + 8], rax
0x0000a366      ebbd           jmp 0xa325
0x0000a368      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x0000a370      55             push rbp
0x0000a371      53             push rbx
0x0000a372      41ba20000000   mov r10d, 0x20                          ; "@"
0x0000a378      4531db         xor r11d, r11d
0x0000a37b      4881ecb80000.  sub rsp, 0xb8
0x0000a382      64488b042528.  mov rax, qword fs:[0x28]
0x0000a38b      4889442478     mov qword [rsp + 0x78], rax
0x0000a390      31c0           xor eax, eax
0x0000a392      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000a39a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x0000a3a2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000a3aa      4c8d442420     lea r8, [rsp + 0x20]
0x0000a3af      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x0000a3b7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000a3bf      4889442410     mov qword [rsp + 0x10], rax
0x0000a3c4      488d84248000.  lea rax, [rsp + 0x80]
0x0000a3cc      4531c9         xor r9d, r9d
0x0000a3cf      4889442418     mov qword [rsp + 0x18], rax
0x0000a3d4      4889c5         mov rbp, rax
0x0000a3d7      660f1f840000.  nop word [rax + rax]
0x0000a3e0      4183fa2f       cmp r10d, 0x2f
0x0000a3e4      7756           ja 0xa43c
0x0000a3e6      4489d0         mov eax, r10d
0x0000a3e9      41bb01000000   mov r11d, 1
0x0000a3ef      4183c208       add r10d, 8
0x0000a3f3      4801e8         add rax, rbp
0x0000a3f6      488b00         mov rax, qword [rax]
0x0000a3f9      4885c0         test rax, rax
0x0000a3fc      4b8904c8       mov qword [r8 + r9*8], rax
0x0000a400      740a           je 0xa40c
0x0000a402      4983c101       add r9, 1
0x0000a406      4983f90a       cmp r9, 0xa
0x0000a40a      75d4           jne 0xa3e0
0x0000a40c      4584db         test r11b, r11b
0x0000a40f      7524           jne 0xa435
0x0000a411      e89afaffff     call sym.version_etc_arn
0x0000a416      488b442478     mov rax, qword [rsp + 0x78]
0x0000a41b      644833042528.  xor rax, qword fs:[0x28]
0x0000a424      750a           jne 0xa430
0x0000a426      4881c4b80000.  add rsp, 0xb8
0x0000a42d      5b             pop rbx
0x0000a42e      5d             pop rbp
0x0000a42f      c3             ret
0x0000a430      e8db77ffff     call sym.imp.__stack_chk_fail
0x0000a435      4489542408     mov dword [rsp + 8], r10d
0x0000a43a      ebd5           jmp 0xa411
0x0000a43c      4889d8         mov rax, rbx
0x0000a43f      4883c308       add rbx, 8
0x0000a443      ebb1           jmp 0xa3f6
0x0000a445      90             nop
0x0000a446      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x0000a450      53             push rbx
0x0000a451      488d35aa2b00.  lea rsi, str.Report_bugs_to:__s         ; 0xd002 ; "\nReport bugs to: %s\n"
0x0000a458      ba05000000     mov edx, 5
0x0000a45d      31ff           xor edi, edi
0x0000a45f      e86c77ffff     call sym.imp.dcgettext
0x0000a464      488d15ac2b00.  lea rdx, str.bug_coreutils_gnu.org      ; 0xd017 ; "bug-coreutils@gnu.org"
0x0000a46b      4889c6         mov rsi, rax
0x0000a46e      bf01000000     mov edi, 1
0x0000a473      31c0           xor eax, eax
0x0000a475      e8d679ffff     call sym.imp.__printf_chk
0x0000a47a      488d35ac2b00.  lea rsi, str.s_home_page:___s           ; 0xd02d ; "%s home page: <%s>\n"
0x0000a481      ba05000000     mov edx, 5
0x0000a486      31ff           xor edi, edi
0x0000a488      e84377ffff     call sym.imp.dcgettext
0x0000a48d      488d0d642100.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xc5f8 ; "https://www.gnu.org/software/coreutils/"
0x0000a494      488d150c1300.  lea rdx, str.GNU_coreutils              ; 0xb7a7 ; "GNU coreutils"
0x0000a49b      4889c6         mov rsi, rax
0x0000a49e      bf01000000     mov edi, 1
0x0000a4a3      31c0           xor eax, eax
0x0000a4a5      e8a679ffff     call sym.imp.__printf_chk
0x0000a4aa      488b1d175c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x0000a4b1      488d35a82d00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0xd260 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x0000a4b8      31ff           xor edi, edi
0x0000a4ba      ba05000000     mov edx, 5
0x0000a4bf      e80c77ffff     call sym.imp.dcgettext
0x0000a4c4      4889de         mov rsi, rbx
0x0000a4c7      4889c7         mov rdi, rax
0x0000a4ca      5b             pop rbx
0x0000a4cb      e95078ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x0000a4d0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x0000a4d1      4889fb         mov rbx, rdi
0x0000a4d4      e8e778ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x0000a4d9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000a4dc      7505           jne 0xa4e3
0x0000a4de      4885db         test rbx, rbx
0x0000a4e1      7502           jne 0xa4e5
0x0000a4e3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x0000a4e4      c3             ret
0x0000a4e5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000a4ea      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x0000a4f0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x0000a4f3      48f7e6         mul rsi
0x0000a4f6      4889c7         mov rdi, rax
0x0000a4f9      0f90c0         seto al
0x0000a4fc      4885ff         test rdi, rdi
0x0000a4ff      780a           js 0xa50b
0x0000a501      0fb6c0         movzx eax, al
0x0000a504      4885c0         test rax, rax
0x0000a507      7502           jne 0xa50b
0x0000a509      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000a50b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000a50f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x0000a514      6690           nop
0x0000a516      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x0000a520      ebae           jmp sym.xmalloc
0x0000a522      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x0000a526      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x0000a530      4885f6         test rsi, rsi
0x0000a533      53             push rbx
0x0000a534      4889f3         mov rbx, rsi
0x0000a537      7505           jne 0xa53e
0x0000a539      4885ff         test rdi, rdi
0x0000a53c      751a           jne 0xa558
0x0000a53e      4889de         mov rsi, rbx
0x0000a541      e8ea78ffff     call sym.imp.realloc
0x0000a546      4885c0         test rax, rax
0x0000a549      7505           jne 0xa550
0x0000a54b      4885db         test rbx, rbx
0x0000a54e      7511           jne 0xa561                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x0000a550      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x0000a551      c3             ret
0x0000a552      660f1f440000   nop word [rax + rax]
0x0000a558      e89375ffff     call sym.imp.free
0x0000a55d      31c0           xor eax, eax
0x0000a55f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x0000a560      c3             ret
0x0000a561      e8ba010000     call sym.xalloc_die
0x0000a566      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x0000a570      4889f0         mov rax, rsi
0x0000a573      48f7e2         mul rdx
0x0000a576      4889c6         mov rsi, rax
0x0000a579      0f90c0         seto al
0x0000a57c      4885f6         test rsi, rsi
0x0000a57f      780a           js 0xa58b
0x0000a581      0fb6c0         movzx eax, al
0x0000a584      4885c0         test rax, rax
0x0000a587      7502           jne 0xa58b
0x0000a589      eba5           jmp sym.xrealloc
0x0000a58b      4883ec08       sub rsp, 8
0x0000a58f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x0000a594      6690           nop
0x0000a596      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x0000a5a0      4885ff         test rdi, rdi
0x0000a5a3      4989d1         mov r9, rdx
0x0000a5a6      488b0e         mov rcx, qword [rsi]
0x0000a5a9      7435           je 0xa5e0
0x0000a5ab      31d2           xor edx, edx
0x0000a5ad      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x0000a5b7      49f7f1         div r9
0x0000a5ba      4839c8         cmp rax, rcx
0x0000a5bd      763c           jbe 0xa5fb
0x0000a5bf      4889c8         mov rax, rcx
0x0000a5c2      48d1e8         shr rax, 1
0x0000a5c5      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000a5ca      48890e         mov qword [rsi], rcx
0x0000a5cd      490fafc9       imul rcx, r9
0x0000a5d1      4889ce         mov rsi, rcx
0x0000a5d4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x0000a5d9      0f1f80000000.  nop dword [rax]
0x0000a5e0      4885c9         test rcx, rcx
0x0000a5e3      7423           je 0xa608
0x0000a5e5      4889c8         mov rax, rcx
0x0000a5e8      49f7e1         mul r9
0x0000a5eb      0f90c2         seto dl
0x0000a5ee      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x0000a5f1      0fb6d2         movzx edx, dl
0x0000a5f4      7805           js 0xa5fb
0x0000a5f6      4885d2         test rdx, rdx
0x0000a5f9      74cf           je 0xa5ca
0x0000a5fb      4883ec08       sub rsp, 8
0x0000a5ff      e81c010000     call sym.xalloc_die
0x0000a604      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x0000a608      31d2           xor edx, edx
0x0000a60a      b880000000     mov eax, 0x80
0x0000a60f      4531c0         xor r8d, r8d
0x0000a612      49f7f1         div r9
0x0000a615      4885c0         test rax, rax
0x0000a618      410f94c0       sete r8b
0x0000a61c      498d0c00       lea rcx, [r8 + rax]
0x0000a620      ebc3           jmp 0xa5e5
0x0000a622      0f1f4000       nop dword [rax]
0x0000a626      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x0000a630      4885ff         test rdi, rdi
0x0000a633      488b06         mov rax, qword [rsi]
0x0000a636      7428           je 0xa660
0x0000a638      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x0000a642      4839d0         cmp rax, rdx
0x0000a645      772a           ja 0xa671
0x0000a647      4889c2         mov rdx, rax
0x0000a64a      48d1ea         shr rdx, 1
0x0000a64d      488d440201     lea rax, [rdx + rax + 1]
0x0000a652      488906         mov qword [rsi], rax
0x0000a655      4889c6         mov rsi, rax
0x0000a658      e9d3feffff     jmp sym.xrealloc
0x0000a65d      0f1f00         nop dword [rax]
0x0000a660      4885c0         test rax, rax
0x0000a663      ba80000000     mov edx, 0x80
0x0000a668      480f44c2       cmove rax, rdx
0x0000a66c      4885c0         test rax, rax
0x0000a66f      79e1           jns 0xa652
0x0000a671      4883ec08       sub rsp, 8
0x0000a675      e8a6000000     call sym.xalloc_die
0x0000a67a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x0000a680      53             push rbx
0x0000a681      4889fb         mov rbx, rdi
0x0000a684      e847feffff     call sym.xmalloc
0x0000a689      4889da         mov rdx, rbx
0x0000a68c      31f6           xor esi, esi
0x0000a68e      4889c7         mov rdi, rax
0x0000a691      5b             pop rbx
0x0000a692      e93976ffff     jmp sym.imp.memset
0x0000a697      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x0000a6a0      4889f8         mov rax, rdi
0x0000a6a3      4883ec08       sub rsp, 8
0x0000a6a7      48f7e6         mul rsi
0x0000a6aa      0f90c2         seto dl
0x0000a6ad      4885c0         test rax, rax
0x0000a6b0      7817           js 0xa6c9
0x0000a6b2      0fb6d2         movzx edx, dl
0x0000a6b5      4885d2         test rdx, rdx
0x0000a6b8      750f           jne 0xa6c9
0x0000a6ba      e87176ffff     call sym.imp.calloc
0x0000a6bf      4885c0         test rax, rax
0x0000a6c2      7405           je 0xa6c9
0x0000a6c4      4883c408       add rsp, 8
0x0000a6c8      c3             ret
0x0000a6c9      e852000000     call sym.xalloc_die
0x0000a6ce      6690           nop
;-- xmemdup:
0x0000a6d0      55             push rbp
0x0000a6d1      53             push rbx
0x0000a6d2      4889fd         mov rbp, rdi
0x0000a6d5      4889f7         mov rdi, rsi
0x0000a6d8      4889f3         mov rbx, rsi
0x0000a6db      4883ec08       sub rsp, 8
0x0000a6df      e8ecfdffff     call sym.xmalloc
0x0000a6e4      4883c408       add rsp, 8
0x0000a6e8      4889da         mov rdx, rbx
0x0000a6eb      4889ee         mov rsi, rbp
0x0000a6ee      5b             pop rbx
0x0000a6ef      5d             pop rbp
0x0000a6f0      4889c7         mov rdi, rax
0x0000a6f3      e96876ffff     jmp sym.imp.memcpy
0x0000a6f8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x0000a700      53             push rbx
0x0000a701      4889fb         mov rbx, rdi
0x0000a704      e8e774ffff     call sym.imp.strlen
0x0000a709      4889df         mov rdi, rbx
0x0000a70c      488d7001       lea rsi, [rax + 1]
0x0000a710      5b             pop rbx
0x0000a711      ebbd           jmp sym.xmemdup
0x0000a713      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a71d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x0000a720      488d35e82b00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0xd30f ; "memory exhausted"
0x0000a727      4883ec08       sub rsp, 8
0x0000a72b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x0000a730      31ff           xor edi, edi
0x0000a732      e89974ffff     call sym.imp.dcgettext
0x0000a737      8b3d03592000   mov edi, dword [obj.exit_failure]       ; [0x210040:4]=1
0x0000a73d      488d15882200.  lea rdx, [0x0000c9cc]                   ; "%s"
0x0000a744      4889c1         mov rcx, rax
0x0000a747      31f6           xor esi, esi
0x0000a749      31c0           xor eax, eax
0x0000a74b      e81077ffff     call sym.imp.error
0x0000a750      e8ab73ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x0000a755      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a75f      90             nop
;-- xnumtoumax:
0x0000a760      4157           push r15                                ; ../coreutils-8.31/lib/xdectoint.c:38
0x0000a762      4156           push r14
0x0000a764      4989cf         mov r15, rcx
0x0000a767      4155           push r13
0x0000a769      4154           push r12
0x0000a76b      4989d6         mov r14, rdx
0x0000a76e      55             push rbp
0x0000a76f      53             push rbx
0x0000a770      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x0000a772      31f6           xor esi, esi
0x0000a774      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/xdectoint.c:38
0x0000a777      4d89cd         mov r13, r9
0x0000a77a      4883ec18       sub rsp, 0x18
0x0000a77e      4889e1         mov rcx, rsp                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x0000a781      8b5c2450       mov ebx, dword [rsp + 0x50]             ; ../coreutils-8.31/lib/xdectoint.c:38
0x0000a785      64488b042528.  mov rax, qword fs:[0x28]
0x0000a78e      4889442408     mov qword [rsp + 8], rax
0x0000a793      31c0           xor eax, eax
0x0000a795      e846020000     call sym.xstrtoumax                     ; ../coreutils-8.31/lib/xdectoint.c:42
0x0000a79a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xdectoint.c:44
0x0000a79c      0f858e000000   jne 0xa830
0x0000a7a2      488b2c24       mov rbp, qword [rsp]                    ; ../coreutils-8.31/lib/xdectoint.c:46
0x0000a7a6      4c39f5         cmp rbp, r14
0x0000a7a9      7205           jb 0xa7b0
0x0000a7ab      4c39fd         cmp rbp, r15
0x0000a7ae      7654           jbe 0xa804
0x0000a7b0      e85b73ffff     call sym.imp.__errno_location
0x0000a7b5      4881fd000000.  cmp rbp, 0x40000000                     ; ../coreutils-8.31/lib/xdectoint.c:52
0x0000a7bc      4989c6         mov r14, rax
0x0000a7bf      19c0           sbb eax, eax
0x0000a7c1      83e0d7         and eax, 0xffffffd7                     ; 4294967255
0x0000a7c4      83c04b         add eax, 0x4b
0x0000a7c7      418906         mov dword [r14], eax
0x0000a7ca      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/xdectoint.c:69
0x0000a7cd      e81ef6ffff     call sym.quote
0x0000a7d2      418b36         mov esi, dword [r14]
0x0000a7d5      4989c0         mov r8, rax
0x0000a7d8      b800000000     mov eax, 0
0x0000a7dd      488d151e1000.  lea rdx, str.s:__s                      ; 0xb802 ; "%s: %s"
0x0000a7e4      4c89e9         mov rcx, r13
0x0000a7e7      83fe16         cmp esi, 0x16
0x0000a7ea      0f44f0         cmove esi, eax
0x0000a7ed      85db           test ebx, ebx
0x0000a7ef      b801000000     mov eax, 1
0x0000a7f4      0f44d8         cmove ebx, eax
0x0000a7f7      31c0           xor eax, eax
0x0000a7f9      89df           mov edi, ebx
0x0000a7fb      e86076ffff     call sym.imp.error
0x0000a800      488b2c24       mov rbp, qword [rsp]
0x0000a804      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xdectoint.c:74
0x0000a809      644833142528.  xor rdx, qword fs:[0x28]
0x0000a812      4889e8         mov rax, rbp
0x0000a815      7544           jne 0xa85b
0x0000a817      4883c418       add rsp, 0x18
0x0000a81b      5b             pop rbx
0x0000a81c      5d             pop rbp
0x0000a81d      415c           pop r12
0x0000a81f      415d           pop r13
0x0000a821      415e           pop r14
0x0000a823      415f           pop r15
0x0000a825      c3             ret
0x0000a826      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a830      89c5           mov ebp, eax
0x0000a832      e8d972ffff     call sym.imp.__errno_location
0x0000a837      83fd01         cmp ebp, 1                              ; ../coreutils-8.31/lib/xdectoint.c:61
0x0000a83a      4989c6         mov r14, rax
0x0000a83d      7411           je 0xa850
0x0000a83f      83fd03         cmp ebp, 3                              ; ../coreutils-8.31/lib/xdectoint.c:63
0x0000a842      7586           jne 0xa7ca
0x0000a844      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/xdectoint.c:64
0x0000a84a      e97bffffff     jmp 0xa7ca
0x0000a84f      90             nop
0x0000a850      c7004b000000   mov dword [rax], 0x4b                   ; ../coreutils-8.31/lib/xdectoint.c:62 ; 'K'
                                                                       ; [0x4b:4]=0
0x0000a856      e96fffffff     jmp 0xa7ca
0x0000a85b      e8b073ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xdectoint.c:74
;-- xdectoumax:
0x0000a860      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/xdectoint.c:84
0x0000a864      4151           push r9                                 ; ../coreutils-8.31/lib/xdectoint.c:85
0x0000a866      4d89c1         mov r9, r8
0x0000a869      4989c8         mov r8, rcx
0x0000a86c      4889d1         mov rcx, rdx
0x0000a86f      4889f2         mov rdx, rsi
0x0000a872      be0a000000     mov esi, 0xa
0x0000a877      e8e4feffff     call sym.xnumtoumax
0x0000a87c      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/xdectoint.c:86
0x0000a880      c3             ret
0x0000a881      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a88b      0f1f440000     nop dword [rax + rax]
;-- xnanosleep:
0x0000a890      55             push rbp                                ; ../coreutils-8.31/lib/xnanosleep.c:39
0x0000a891      53             push rbx
0x0000a892      4883ec28       sub rsp, 0x28
0x0000a896      64488b042528.  mov rax, qword fs:[0x28]
0x0000a89f      4889442418     mov qword [rsp + 0x18], rax
0x0000a8a4      31c0           xor eax, eax
0x0000a8a6      4889e5         mov rbp, rsp
0x0000a8a9      e8220a0000     call sym.dtotimespec                    ; ../coreutils-8.31/lib/xnanosleep.c:40
0x0000a8ae      48890424       mov qword [rsp], rax
0x0000a8b2      4889542408     mov qword [rsp + 8], rdx
0x0000a8b7      e85472ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xnanosleep.c:50
0x0000a8bc      4889c3         mov rbx, rax
0x0000a8bf      eb0f           jmp 0xa8d0
0x0000a8c1      0f1f80000000.  nop dword [rax]
0x0000a8c8      f703fbffffff   test dword [rbx], 0xfffffffb            ; ../coreutils-8.31/lib/xnanosleep.c:53
0x0000a8ce      7530           jne 0xa900
0x0000a8d0      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/xnanosleep.c:51
0x0000a8d2      c70300000000   mov dword [rbx], 0                      ; ../coreutils-8.31/lib/xnanosleep.c:50
0x0000a8d8      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/xnanosleep.c:51
0x0000a8db      e830080000     call sym.rpl_nanosleep
0x0000a8e0      85c0           test eax, eax
0x0000a8e2      75e4           jne 0xa8c8
0x0000a8e4      488b542418     mov rdx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/xnanosleep.c:58
0x0000a8e9      644833142528.  xor rdx, qword fs:[0x28]
0x0000a8f2      7513           jne 0xa907
0x0000a8f4      4883c428       add rsp, 0x28
0x0000a8f8      5b             pop rbx
0x0000a8f9      5d             pop rbp
0x0000a8fa      c3             ret
0x0000a8fb      0f1f440000     nop dword [rax + rax]
0x0000a900      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/xnanosleep.c:54 ; -1
0x0000a905      ebdd           jmp 0xa8e4
0x0000a907      e80473ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xnanosleep.c:58
0x0000a90c      0f1f4000       nop dword [rax]
;-- xstrtod:
0x0000a910      4156           push r14                                ; ../coreutils-8.31/lib/xstrtod.c:46
0x0000a912      4155           push r13
0x0000a914      4989ce         mov r14, rcx
0x0000a917      4154           push r12
0x0000a919      55             push rbp
0x0000a91a      4889fd         mov rbp, rdi
0x0000a91d      53             push rbx
0x0000a91e      4989d5         mov r13, rdx
0x0000a921      4889f3         mov rbx, rsi
0x0000a924      4883ec10       sub rsp, 0x10
0x0000a928      64488b042528.  mov rax, qword fs:[0x28]
0x0000a931      4889442408     mov qword [rsp + 8], rax
0x0000a936      31c0           xor eax, eax
0x0000a938      e8d371ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xstrtod.c:51
0x0000a93d      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/xstrtod.c:52
0x0000a940      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/xstrtod.c:51
0x0000a943      c70000000000   mov dword [rax], 0
0x0000a949      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/xstrtod.c:52
0x0000a94c      41ffd6         call r14
0x0000a94f      488b0c24       mov rcx, qword [rsp]                    ; ../coreutils-8.31/lib/xstrtod.c:55
0x0000a953      4839e9         cmp rcx, rbp
0x0000a956      7470           je 0xa9c8
0x0000a958      4885db         test rbx, rbx
0x0000a95b      744b           je 0xa9a8
0x0000a95d      660f2e05bb29.  ucomisd xmm0, qword [0x0000d320]        ; ../coreutils-8.31/lib/xstrtod.c:62
0x0000a965      7a07           jp 0xa96e
0x0000a967      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/xstrtod.c:49
0x0000a96c      740d           je 0xa97b                               ; ../coreutils-8.31/lib/xstrtod.c:62
0x0000a96e      41833c2422     cmp dword [r12], 0x22
0x0000a973      0f95c0         setne al
0x0000a976      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/xstrtod.c:66
0x0000a979      7403           je 0xa97e
0x0000a97b      48890b         mov qword [rbx], rcx                    ; ../coreutils-8.31/lib/xstrtod.c:67
0x0000a97e      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xstrtod.c:71
0x0000a983      644833142528.  xor rdx, qword fs:[0x28]
0x0000a98c      f2410f114500   movsd qword [r13], xmm0                 ; ../coreutils-8.31/lib/xstrtod.c:69
0x0000a992      7538           jne 0xa9cc                              ; ../coreutils-8.31/lib/xstrtod.c:71
0x0000a994      4883c410       add rsp, 0x10
0x0000a998      5b             pop rbx
0x0000a999      5d             pop rbp
0x0000a99a      415c           pop r12
0x0000a99c      415d           pop r13
0x0000a99e      415e           pop r14
0x0000a9a0      c3             ret
0x0000a9a1      0f1f80000000.  nop dword [rax]
0x0000a9a8      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/xstrtod.c:56
0x0000a9aa      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/xstrtod.c:55
0x0000a9ad      75cf           jne 0xa97e
0x0000a9af      660f2e056929.  ucomisd xmm0, qword [0x0000d320]        ; ../coreutils-8.31/lib/xstrtod.c:62
0x0000a9b7      7ab5           jp 0xa96e
0x0000a9b9      75b3           jne 0xa96e
0x0000a9bb      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/xstrtod.c:49
0x0000a9c0      ebbc           jmp 0xa97e
0x0000a9c2      660f1f440000   nop word [rax + rax]
0x0000a9c8      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/xstrtod.c:56
0x0000a9ca      ebaa           jmp 0xa976
0x0000a9cc      e83f72ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xstrtod.c:71
0x0000a9d1      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a9db      0f1f440000     nop dword [rax + rax]
;-- xstrtoumax:
0x0000a9e0      4157           push r15
0x0000a9e2      4156           push r14
0x0000a9e4      4155           push r13
0x0000a9e6      4154           push r12
0x0000a9e8      55             push rbp
0x0000a9e9      53             push rbx
0x0000a9ea      4883ec28       sub rsp, 0x28
0x0000a9ee      64488b042528.  mov rax, qword fs:[0x28]
0x0000a9f7      4889442418     mov qword [rsp + 0x18], rax
0x0000a9fc      31c0           xor eax, eax
0x0000a9fe      83fa24         cmp edx, 0x24
0x0000aa01      0f875e030000   ja 0xad65
0x0000aa07      488d442410     lea rax, [rsp + 0x10]
0x0000aa0c      4989f7         mov r15, rsi
0x0000aa0f      4885f6         test rsi, rsi
0x0000aa12      4889fd         mov rbp, rdi
0x0000aa15      89542408       mov dword [rsp + 8], edx
0x0000aa19      4989ce         mov r14, rcx
0x0000aa1c      4d89c5         mov r13, r8
0x0000aa1f      4c0f44f8       cmove r15, rax
0x0000aa23      e8e870ffff     call sym.imp.__errno_location
0x0000aa28      c70000000000   mov dword [rax], 0
0x0000aa2e      4989c4         mov r12, rax
0x0000aa31      0fb65d00       movzx ebx, byte [rbp]
0x0000aa35      e8f674ffff     call sym.imp.__ctype_b_loc
0x0000aa3a      8b542408       mov edx, dword [rsp + 8]
0x0000aa3e      488b30         mov rsi, qword [rax]
0x0000aa41      4889e8         mov rax, rbp
0x0000aa44      eb11           jmp 0xaa57
0x0000aa46      662e0f1f8400.  nop word cs:[rax + rax]
0x0000aa50      4883c001       add rax, 1
0x0000aa54      0fb618         movzx ebx, byte [rax]
0x0000aa57      0fb6cb         movzx ecx, bl
0x0000aa5a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x0000aa5f      75ef           jne 0xaa50
0x0000aa61      80fb2d         cmp bl, 0x2d
0x0000aa64      7452           je 0xaab8
0x0000aa66      31c9           xor ecx, ecx
0x0000aa68      4c89fe         mov rsi, r15
0x0000aa6b      4889ef         mov rdi, rbp
0x0000aa6e      e84d72ffff     call sym.imp.__strtoul_internal
0x0000aa73      498b0f         mov rcx, qword [r15]
0x0000aa76      4889c3         mov rbx, rax
0x0000aa79      4839e9         cmp rcx, rbp
0x0000aa7c      742a           je 0xaaa8
0x0000aa7e      418b0424       mov eax, dword [r12]
0x0000aa82      85c0           test eax, eax
0x0000aa84      7462           je 0xaae8
0x0000aa86      83f822         cmp eax, 0x22
0x0000aa89      bd01000000     mov ebp, 1
0x0000aa8e      7528           jne 0xaab8
0x0000aa90      4d85ed         test r13, r13
0x0000aa93      7409           je 0xaa9e
0x0000aa95      440fb621       movzx r12d, byte [rcx]
0x0000aa99      4584e4         test r12b, r12b
0x0000aa9c      7579           jne 0xab17
0x0000aa9e      49891e         mov qword [r14], rbx
0x0000aaa1      eb1a           jmp 0xaabd
0x0000aaa3      0f1f440000     nop dword [rax + rax]
0x0000aaa8      4d85ed         test r13, r13
0x0000aaab      48894c2408     mov qword [rsp + 8], rcx
0x0000aab0      753e           jne 0xaaf0
0x0000aab2      660f1f440000   nop word [rax + rax]
0x0000aab8      bd04000000     mov ebp, 4
0x0000aabd      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000aac2      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000aacb      89e8           mov eax, ebp
0x0000aacd      0f858d020000   jne 0xad60
0x0000aad3      4883c428       add rsp, 0x28
0x0000aad7      5b             pop rbx
0x0000aad8      5d             pop rbp
0x0000aad9      415c           pop r12
0x0000aadb      415d           pop r13
0x0000aadd      415e           pop r14
0x0000aadf      415f           pop r15
0x0000aae1      c3             ret
0x0000aae2      660f1f440000   nop word [rax + rax]
0x0000aae8      31ed           xor ebp, ebp
0x0000aaea      eba4           jmp 0xaa90
0x0000aaec      0f1f4000       nop dword [rax]
0x0000aaf0      440fb66500     movzx r12d, byte [rbp]
0x0000aaf5      4584e4         test r12b, r12b
0x0000aaf8      74be           je 0xaab8
0x0000aafa      410fbef4       movsx esi, r12b
0x0000aafe      4c89ef         mov rdi, r13
0x0000ab01      31ed           xor ebp, ebp
0x0000ab03      e83871ffff     call sym.imp.strchr
0x0000ab08      4885c0         test rax, rax
0x0000ab0b      bb01000000     mov ebx, 1
0x0000ab10      488b4c2408     mov rcx, qword [rsp + 8]
0x0000ab15      74a1           je 0xaab8
0x0000ab17      410fbef4       movsx esi, r12b
0x0000ab1b      4c89ef         mov rdi, r13
0x0000ab1e      48894c2408     mov qword [rsp + 8], rcx
0x0000ab23      e81871ffff     call sym.imp.strchr
0x0000ab28      4885c0         test rax, rax
0x0000ab2b      488b4c2408     mov rcx, qword [rsp + 8]
0x0000ab30      0f84c6000000   je 0xabfc
0x0000ab36      418d4424bb     lea eax, [r12 - 0x45]
0x0000ab3b      3c2f           cmp al, 0x2f
0x0000ab3d      7751           ja 0xab90
0x0000ab3f      48ba45893000.  movabs rdx, 0x814400308945
0x0000ab49      480fa3c2       bt rdx, rax
0x0000ab4d      7341           jae 0xab90
0x0000ab4f      be30000000     mov esi, 0x30                           ; '0'
0x0000ab54      4c89ef         mov rdi, r13
0x0000ab57      48894c2408     mov qword [rsp + 8], rcx
0x0000ab5c      e8df70ffff     call sym.imp.strchr
0x0000ab61      4885c0         test rax, rax
0x0000ab64      488b4c2408     mov rcx, qword [rsp + 8]
0x0000ab69      7425           je 0xab90
0x0000ab6b      0fb64101       movzx eax, byte [rcx + 1]
0x0000ab6f      3c44           cmp al, 0x44
0x0000ab71      740c           je 0xab7f
0x0000ab73      3c69           cmp al, 0x69
0x0000ab75      0f84cd010000   je 0xad48
0x0000ab7b      3c42           cmp al, 0x42
0x0000ab7d      7511           jne 0xab90
0x0000ab7f      bf02000000     mov edi, 2
0x0000ab84      bee8030000     mov esi, 0x3e8
0x0000ab89      eb0f           jmp 0xab9a
0x0000ab8b      0f1f440000     nop dword [rax + rax]
0x0000ab90      bf01000000     mov edi, 1
0x0000ab95      be00040000     mov esi, 0x400
0x0000ab9a      4183ec42       sub r12d, 0x42
0x0000ab9e      4180fc35       cmp r12b, 0x35
0x0000aba2      7758           ja 0xabfc
0x0000aba4      488d15c52700.  lea rdx, [0x0000d370]
0x0000abab      450fb6e4       movzx r12d, r12b
0x0000abaf      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x0000abb3      4801d0         add rax, rdx
0x0000abb6      ffe0           jmp rax
0x0000abb8      4889d8         mov rax, rbx
0x0000abbb      48f7e6         mul rsi
0x0000abbe      0f80ed010000   jo 0xadb1
0x0000abc4      4531c0         xor r8d, r8d
0x0000abc7      48f7e6         mul rsi
0x0000abca      0f80d2010000   jo 0xada2
0x0000abd0      4889c3         mov rbx, rax
0x0000abd3      4409c5         or ebp, r8d
0x0000abd6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000abe0      4863ff         movsxd rdi, edi
0x0000abe3      89e8           mov eax, ebp
0x0000abe5      4801f9         add rcx, rdi
0x0000abe8      83c802         or eax, 2
0x0000abeb      49890f         mov qword [r15], rcx
0x0000abee      803900         cmp byte [rcx], 0
0x0000abf1      49891e         mov qword [r14], rbx
0x0000abf4      0f45e8         cmovne ebp, eax
0x0000abf7      e9c1feffff     jmp 0xaabd
0x0000abfc      49891e         mov qword [r14], rbx
0x0000abff      83cd02         or ebp, 2
0x0000ac02      e9b6feffff     jmp 0xaabd
0x0000ac07      ba02000000     mov edx, 2
0x0000ac0c      4889d0         mov rax, rdx
0x0000ac0f      48f7e3         mul rbx
0x0000ac12      0f8096000000   jo 0xacae
0x0000ac18      4801db         add rbx, rbx
0x0000ac1b      ebc3           jmp 0xabe0
0x0000ac1d      ba00020000     mov edx, 0x200
0x0000ac22      4889d0         mov rax, rdx
0x0000ac25      48f7e3         mul rbx
0x0000ac28      0f8080000000   jo 0xacae
0x0000ac2e      48c1e309       shl rbx, 9
0x0000ac32      ebac           jmp 0xabe0
0x0000ac34      41b807000000   mov r8d, 7
0x0000ac3a      4531c9         xor r9d, r9d
0x0000ac3d      0f1f00         nop dword [rax]
0x0000ac40      4889d8         mov rax, rbx
0x0000ac43      48f7e6         mul rsi
0x0000ac46      4889c3         mov rbx, rax
0x0000ac49      0f808f010000   jo 0xadde
0x0000ac4f      4183e801       sub r8d, 1
0x0000ac53      75eb           jne 0xac40
0x0000ac55      4409cd         or ebp, r9d
0x0000ac58      eb86           jmp 0xabe0
0x0000ac5a      41b808000000   mov r8d, 8
0x0000ac60      4531c9         xor r9d, r9d
0x0000ac63      0f1f440000     nop dword [rax + rax]
0x0000ac68      4889d8         mov rax, rbx
0x0000ac6b      48f7e6         mul rsi
0x0000ac6e      4889c3         mov rbx, rax
0x0000ac71      0f8049010000   jo 0xadc0
0x0000ac77      4183e801       sub r8d, 1
0x0000ac7b      75eb           jne 0xac68
0x0000ac7d      ebd6           jmp 0xac55
0x0000ac7f      41b804000000   mov r8d, 4
0x0000ac85      4531c9         xor r9d, r9d
0x0000ac88      4889d8         mov rax, rbx
0x0000ac8b      48f7e6         mul rsi
0x0000ac8e      4889c3         mov rbx, rax
0x0000ac91      0f80fc000000   jo 0xad93
0x0000ac97      4183e801       sub r8d, 1
0x0000ac9b      75eb           jne 0xac88
0x0000ac9d      ebb6           jmp 0xac55
0x0000ac9f      4889d8         mov rax, rbx
0x0000aca2      48f7e6         mul rsi
0x0000aca5      4889c3         mov rbx, rax
0x0000aca8      0f8132ffffff   jno 0xabe0
0x0000acae      bd01000000     mov ebp, 1
0x0000acb3      4883cbff       or rbx, 0xffffffffffffffff
0x0000acb7      e924ffffff     jmp 0xabe0
0x0000acbc      0f1f4000       nop dword [rax]
0x0000acc0      41b805000000   mov r8d, 5
0x0000acc6      4531c9         xor r9d, r9d
0x0000acc9      4889d8         mov rax, rbx
0x0000accc      48f7e6         mul rsi
0x0000accf      4889c3         mov rbx, rax
0x0000acd2      0f80f7000000   jo 0xadcf
0x0000acd8      4183e801       sub r8d, 1
0x0000acdc      75eb           jne 0xacc9
0x0000acde      e972ffffff     jmp 0xac55
0x0000ace3      41b806000000   mov r8d, 6
0x0000ace9      4531c9         xor r9d, r9d
0x0000acec      4889d8         mov rax, rbx
0x0000acef      48f7e6         mul rsi
0x0000acf2      4889c3         mov rbx, rax
0x0000acf5      0f8089000000   jo 0xad84
0x0000acfb      4183e801       sub r8d, 1
0x0000acff      75eb           jne 0xacec
0x0000ad01      e94fffffff     jmp 0xac55
0x0000ad06      ba00040000     mov edx, 0x400
0x0000ad0b      4889d0         mov rax, rdx
0x0000ad0e      48f7e3         mul rbx
0x0000ad11      709b           jo 0xacae
0x0000ad13      48c1e30a       shl rbx, 0xa
0x0000ad17      e9c4feffff     jmp 0xabe0
0x0000ad1c      4889d8         mov rax, rbx
0x0000ad1f      48f7e6         mul rsi
0x0000ad22      0f80c5000000   jo 0xaded
0x0000ad28      4531c0         xor r8d, r8d
0x0000ad2b      48f7e6         mul rsi
0x0000ad2e      0f8193feffff   jno 0xabc7
0x0000ad34      41b801000000   mov r8d, 1
0x0000ad3a      4883c8ff       or rax, 0xffffffffffffffff
0x0000ad3e      e984feffff     jmp 0xabc7
0x0000ad43      0f1f440000     nop dword [rax + rax]
0x0000ad48      31ff           xor edi, edi
0x0000ad4a      80790242       cmp byte [rcx + 2], 0x42
0x0000ad4e      be00040000     mov esi, 0x400
0x0000ad53      400f94c7       sete dil
0x0000ad57      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000ad5b      e93afeffff     jmp 0xab9a
0x0000ad60      e8ab6effff     call sym.imp.__stack_chk_fail
0x0000ad65      488d0ddc2600.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0xd448 ; "xstrtoumax"
0x0000ad6c      488d35b52500.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0xd328 ; "../coreutils-8.31/lib/xstrtol.c"
0x0000ad73      488d3dce2500.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0xd348 ; "0 <= strtol_base && strtol_base <= 36"
0x0000ad7a      ba54000000     mov edx, 0x54                           ; 'T'
0x0000ad7f      e82c6fffff     call sym.imp.__assert_fail
0x0000ad84      41b901000000   mov r9d, 1
0x0000ad8a      4883cbff       or rbx, 0xffffffffffffffff
0x0000ad8e      e968ffffff     jmp 0xacfb
0x0000ad93      41b901000000   mov r9d, 1
0x0000ad99      4883cbff       or rbx, 0xffffffffffffffff
0x0000ad9d      e9f5feffff     jmp 0xac97
0x0000ada2      41b801000000   mov r8d, 1
0x0000ada8      4883cbff       or rbx, 0xffffffffffffffff
0x0000adac      e922feffff     jmp 0xabd3
0x0000adb1      4883c8ff       or rax, 0xffffffffffffffff
0x0000adb5      41b801000000   mov r8d, 1
0x0000adbb      e907feffff     jmp 0xabc7
0x0000adc0      41b901000000   mov r9d, 1
0x0000adc6      4883cbff       or rbx, 0xffffffffffffffff
0x0000adca      e9a8feffff     jmp 0xac77
0x0000adcf      41b901000000   mov r9d, 1
0x0000add5      4883cbff       or rbx, 0xffffffffffffffff
0x0000add9      e9fafeffff     jmp 0xacd8
0x0000adde      41b901000000   mov r9d, 1
0x0000ade4      4883cbff       or rbx, 0xffffffffffffffff
0x0000ade8      e962feffff     jmp 0xac4f
0x0000aded      41b801000000   mov r8d, 1
0x0000adf3      4883c8ff       or rax, 0xffffffffffffffff
0x0000adf7      e92fffffff     jmp 0xad2b
0x0000adfc      0f1f4000       nop dword [rax]
;-- rpl_fcntl:
0x0000ae00      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x0000ae02      55             push rbp
0x0000ae03      89fd           mov ebp, edi
0x0000ae05      53             push rbx
0x0000ae06      4883ec50       sub rsp, 0x50
0x0000ae0a      64488b042528.  mov rax, qword fs:[0x28]
0x0000ae13      4889442418     mov qword [rsp + 0x18], rax
0x0000ae18      31c0           xor eax, eax
0x0000ae1a      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x0000ae1f      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x0000ae21      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x0000ae26      48894c2438     mov qword [rsp + 0x38], rcx
0x0000ae2b      4c89442440     mov qword [rsp + 0x40], r8
0x0000ae30      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x0000ae35      488d442420     lea rax, [rsp + 0x20]
0x0000ae3a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x0000ae3f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x0000ae46      4889442410     mov qword [rsp + 0x10], rax
0x0000ae4b      0f8401020000   je 0xb052                               ; ../coreutils-8.31/lib/fcntl.c:210
0x0000ae51      81fe06040000   cmp esi, 0x406
0x0000ae57      7547           jne 0xaea0
0x0000ae59      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x0000ae5e      833d13542000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x210278:4]=0
0x0000ae65      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x48b0 rip
0x0000ae6c      448b6010       mov r12d, dword [rax + 0x10]
0x0000ae70      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x0000ae73      0f882a010000   js 0xafa3                               ; ../coreutils-8.31/lib/fcntl.c:507
0x0000ae79      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000ae7b      be06040000     mov esi, 0x406
0x0000ae80      e8eb6cffff     call sym.imp.fcntl
0x0000ae85      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x0000ae87      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000ae89      0f8889010000   js 0xb018                               ; ../coreutils-8.31/lib/fcntl.c:510
0x0000ae8f      c705df532000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x210278:4]=0
0x0000ae99      eb45           jmp 0xaee0
0x0000ae9b      0f1f440000     nop dword [rax + rax]
0x0000aea0      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x0000aea3      742b           je 0xaed0
0x0000aea5      7f59           jg 0xaf00
0x0000aea7      83fe04         cmp esi, 4
0x0000aeaa      0f84d0000000   je 0xaf80
0x0000aeb0      0f8fba000000   jg 0xaf70
0x0000aeb6      83fe02         cmp esi, 2
0x0000aeb9      0f84c1000000   je 0xaf80
0x0000aebf      7f0f           jg 0xaed0
0x0000aec1      83fe01         cmp esi, 1
0x0000aec4      7562           jne 0xaf28
0x0000aec6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000aed0      89ef           mov edi, ebp
0x0000aed2      31c0           xor eax, eax
0x0000aed4      e8976cffff     call sym.imp.fcntl
0x0000aed9      89c3           mov ebx, eax
0x0000aedb      0f1f440000     nop dword [rax + rax]
0x0000aee0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000aee5      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000aeee      89d8           mov eax, ebx
0x0000aef0      0f8557010000   jne 0xb04d                              ; ../coreutils-8.31/lib/fcntl.c:355
0x0000aef6      4883c450       add rsp, 0x50
0x0000aefa      5b             pop rbx
0x0000aefb      5d             pop rbp
0x0000aefc      415c           pop r12
0x0000aefe      c3             ret
0x0000aeff      90             nop
0x0000af00      81fe07040000   cmp esi, 0x407
0x0000af06      7f48           jg 0xaf50
0x0000af08      81fe06040000   cmp esi, 0x406
0x0000af0e      7d70           jge 0xaf80
0x0000af10      81fe01040000   cmp esi, 0x401
0x0000af16      74b8           je 0xaed0
0x0000af18      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x0000af1e      7460           je 0xaf80
0x0000af20      81fe00040000   cmp esi, 0x400
0x0000af26      7458           je 0xaf80
0x0000af28      8b0424         mov eax, dword [rsp]
0x0000af2b      83f82f         cmp eax, 0x2f
0x0000af2e      0f8736010000   ja 0xb06a
0x0000af34      4803442410     add rax, qword [rsp + 0x10]
0x0000af39      488b10         mov rdx, qword [rax]
0x0000af3c      89ef           mov edi, ebp
0x0000af3e      31c0           xor eax, eax
0x0000af40      e82b6cffff     call sym.imp.fcntl
0x0000af45      89c3           mov ebx, eax
0x0000af47      eb97           jmp 0xaee0
0x0000af49      0f1f80000000.  nop dword [rax]
0x0000af50      81fe09040000   cmp esi, 0x409
0x0000af56      7428           je 0xaf80
0x0000af58      0f8c72ffffff   jl 0xaed0
0x0000af5e      81fe0a040000   cmp esi, 0x40a
0x0000af64      75c2           jne 0xaf28
0x0000af66      e965ffffff     jmp 0xaed0                              ; ../coreutils-8.31/lib/fcntl.c:350
0x0000af6b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x0000af70      83fe09         cmp esi, 9
0x0000af73      0f8457ffffff   je 0xaed0
0x0000af79      7f05           jg 0xaf80
0x0000af7b      83fe08         cmp esi, 8
0x0000af7e      75a8           jne 0xaf28
0x0000af80      8b0424         mov eax, dword [rsp]
0x0000af83      83f82f         cmp eax, 0x2f
0x0000af86      0f87e8000000   ja 0xb074
0x0000af8c      4803442410     add rax, qword [rsp + 0x10]
0x0000af91      8b10           mov edx, dword [rax]
0x0000af93      89ef           mov edi, ebp
0x0000af95      31c0           xor eax, eax
0x0000af97      e8d46bffff     call sym.imp.fcntl
0x0000af9c      89c3           mov ebx, eax
0x0000af9e      e93dffffff     jmp 0xaee0
0x0000afa3      31f6           xor esi, esi
0x0000afa5      31c0           xor eax, eax
0x0000afa7      e8c46bffff     call sym.imp.fcntl
0x0000afac      85c0           test eax, eax
0x0000afae      89c3           mov ebx, eax
0x0000afb0      0f882affffff   js 0xaee0
0x0000afb6      833dbb522000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x210278:4]=0
0x0000afbd      0f851dffffff   jne 0xaee0
0x0000afc3      31c0           xor eax, eax
0x0000afc5      be01000000     mov esi, 1
0x0000afca      89df           mov edi, ebx
0x0000afcc      e89f6bffff     call sym.imp.fcntl
0x0000afd1      85c0           test eax, eax
0x0000afd3      781c           js 0xaff1
0x0000afd5      83c801         or eax, 1
0x0000afd8      be02000000     mov esi, 2
0x0000afdd      89df           mov edi, ebx
0x0000afdf      89c2           mov edx, eax
0x0000afe1      31c0           xor eax, eax
0x0000afe3      e8886bffff     call sym.imp.fcntl
0x0000afe8      83f8ff         cmp eax, 0xffffffff
0x0000afeb      0f85effeffff   jne 0xaee0
0x0000aff1      e81a6bffff     call sym.imp.__errno_location
0x0000aff6      448b20         mov r12d, dword [rax]
0x0000aff9      4889c5         mov rbp, rax
0x0000affc      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x0000affe      e8dd6cffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x0000b003      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000b008      44896500       mov dword [rbp], r12d
0x0000b00c      e9cffeffff     jmp 0xaee0
0x0000b011      0f1f80000000.  nop dword [rax]
0x0000b018      e8f36affff     call sym.imp.__errno_location
0x0000b01d      833816         cmp dword [rax], 0x16
0x0000b020      0f8569feffff   jne 0xae8f
0x0000b026      31f6           xor esi, esi
0x0000b028      31c0           xor eax, eax
0x0000b02a      4489e2         mov edx, r12d
0x0000b02d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x0000b02f      e83c6bffff     call sym.imp.fcntl
0x0000b034      85c0           test eax, eax
0x0000b036      89c3           mov ebx, eax
0x0000b038      0f88a2feffff   js 0xaee0
0x0000b03e      c70530522000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x210278:4]=0
0x0000b048      e976ffffff     jmp 0xafc3
0x0000b04d      e8be6bffff     call sym.imp.__stack_chk_fail
0x0000b052      488b442410     mov rax, qword [rsp + 0x10]
0x0000b057      31f6           xor esi, esi
0x0000b059      8b5010         mov edx, dword [rax + 0x10]
0x0000b05c      31c0           xor eax, eax
0x0000b05e      e80d6bffff     call sym.imp.fcntl
0x0000b063      89c3           mov ebx, eax
0x0000b065      e976feffff     jmp 0xaee0
0x0000b06a      488b442408     mov rax, qword [rsp + 8]
0x0000b06f      e9c5feffff     jmp 0xaf39
0x0000b074      488b442408     mov rax, qword [rsp + 8]
0x0000b079      e913ffffff     jmp 0xaf91
0x0000b07e      6690           nop
;-- rpl_mbrtowc:
0x0000b080      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x0000b082      4154           push r12
0x0000b084      4989f5         mov r13, rsi
0x0000b087      55             push rbp
0x0000b088      53             push rbx
0x0000b089      4889fb         mov rbx, rdi
0x0000b08c      4989d4         mov r12, rdx
0x0000b08f      4883ec18       sub rsp, 0x18
0x0000b093      64488b042528.  mov rax, qword fs:[0x28]
0x0000b09c      4889442408     mov qword [rsp + 8], rax
0x0000b0a1      31c0           xor eax, eax
0x0000b0a3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x0000b0a8      4885ff         test rdi, rdi
0x0000b0ab      480f44d8       cmove rbx, rax
0x0000b0af      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000b0b2      e8796bffff     call sym.imp.mbrtowc
0x0000b0b7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000b0bb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000b0be      7620           jbe 0xb0e0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000b0c0      4d85e4         test r12, r12
0x0000b0c3      741b           je 0xb0e0
0x0000b0c5      31ff           xor edi, edi
0x0000b0c7      e8c4020000     call sym.hard_locale
0x0000b0cc      84c0           test al, al
0x0000b0ce      7510           jne 0xb0e0
0x0000b0d0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000b0d5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000b0da      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000b0dc      0f1f4000       nop dword [rax]
0x0000b0e0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x0000b0e5      644833142528.  xor rdx, qword fs:[0x28]
0x0000b0ee      4889e8         mov rax, rbp
0x0000b0f1      750b           jne 0xb0fe
0x0000b0f3      4883c418       add rsp, 0x18
0x0000b0f7      5b             pop rbx
0x0000b0f8      5d             pop rbp
0x0000b0f9      415c           pop r12
0x0000b0fb      415d           pop r13
0x0000b0fd      c3             ret
0x0000b0fe      e80d6bffff     call sym.imp.__stack_chk_fail
0x0000b103      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b10d      0f1f00         nop dword [rax]
;-- rpl_nanosleep:
0x0000b110      4154           push r12                                ; ../coreutils-8.31/lib/nanosleep.c:49
0x0000b112      55             push rbp
0x0000b113      53             push rbx
0x0000b114      4883ec20       sub rsp, 0x20
0x0000b118      64488b042528.  mov rax, qword fs:[0x28]
0x0000b121      4889442418     mov qword [rsp + 0x18], rax
0x0000b126      31c0           xor eax, eax
0x0000b128      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/nanosleep.c:56
0x0000b12c      483dffc99a3b   cmp rax, 0x3b9ac9ff
0x0000b132      0f8788000000   ja 0xb1c0
0x0000b138      488b1f         mov rbx, qword [rdi]                    ; ../coreutils-8.31/lib/nanosleep.c:66
0x0000b13b      4889f5         mov rbp, rsi
0x0000b13e      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/nanosleep.c:68
0x0000b143      4989e4         mov r12, rsp
0x0000b146      4881fb00a41f.  cmp rbx, 0x1fa400                       ; ../coreutils-8.31/lib/nanosleep.c:70
0x0000b14d      7f1b           jg 0xb16a
0x0000b14f      eb47           jmp 0xb198
0x0000b151      0f1f80000000.  nop dword [rax]
0x0000b158      4881fb00a41f.  cmp rbx, 0x1fa400
0x0000b15f      48c744240800.  mov qword [rsp + 8], 0                  ; ../coreutils-8.31/lib/nanosleep.c:82
0x0000b168      7e2e           jle 0xb198                              ; ../coreutils-8.31/lib/nanosleep.c:70
0x0000b16a      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/nanosleep.c:74
0x0000b16d      4c89e7         mov rdi, r12
0x0000b170      48c7042400a4.  mov qword [rsp], 0x1fa400               ; ../coreutils-8.31/lib/nanosleep.c:73 ; [0x1fa400:8]=-1
0x0000b178      4881eb00a41f.  sub rbx, 0x1fa400                       ; ../coreutils-8.31/lib/nanosleep.c:75
0x0000b17f      e8ec6affff     call sym.imp.nanosleep                  ; ../coreutils-8.31/lib/nanosleep.c:74
0x0000b184      85c0           test eax, eax                           ; ../coreutils-8.31/lib/nanosleep.c:76
0x0000b186      74d0           je 0xb158
0x0000b188      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/nanosleep.c:78
0x0000b18b      741a           je 0xb1a7
0x0000b18d      48015d00       add qword [rbp], rbx                    ; ../coreutils-8.31/lib/nanosleep.c:79
0x0000b191      eb14           jmp 0xb1a7
0x0000b193      0f1f440000     nop dword [rax + rax]
0x0000b198      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/nanosleep.c:85
0x0000b19b      4c89e7         mov rdi, r12
0x0000b19e      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/nanosleep.c:84
0x0000b1a2      e8c96affff     call sym.imp.nanosleep                  ; ../coreutils-8.31/lib/nanosleep.c:85
0x0000b1a7      488b542418     mov rdx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/nanosleep.c:87
0x0000b1ac      644833142528.  xor rdx, qword fs:[0x28]
0x0000b1b5      751b           jne 0xb1d2
0x0000b1b7      4883c420       add rsp, 0x20
0x0000b1bb      5b             pop rbx
0x0000b1bc      5d             pop rbp
0x0000b1bd      415c           pop r12
0x0000b1bf      c3             ret
0x0000b1c0      e84b69ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/nanosleep.c:58
0x0000b1c5      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x48b00000
0x0000b1cb      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/nanosleep.c:59 ; -1
0x0000b1d0      ebd5           jmp 0xb1a7
0x0000b1d2      e8396affff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/nanosleep.c:87
0x0000b1d7      660f1f840000.  nop word [rax + rax]
;-- c_strtod:
0x0000b1e0      55             push rbp
0x0000b1e1      53             push rbx
0x0000b1e2      4889fd         mov rbp, rdi
0x0000b1e5      4889f3         mov rbx, rsi
0x0000b1e8      4883ec08       sub rsp, 8
0x0000b1ec      488b058d5020.  mov rax, qword [obj.c_locale_cache]     ; [0x210280:8]=0
0x0000b1f3      4885c0         test rax, rax
0x0000b1f6      7438           je 0xb230
0x0000b1f8      488b15815020.  mov rdx, qword [obj.c_locale_cache]     ; [0x210280:8]=0
0x0000b1ff      4885d2         test rdx, rdx
0x0000b202      7414           je 0xb218
0x0000b204      4883c408       add rsp, 8
0x0000b208      4889de         mov rsi, rbx
0x0000b20b      4889ef         mov rdi, rbp
0x0000b20e      5b             pop rbx
0x0000b20f      5d             pop rbp
0x0000b210      e98b69ffff     jmp sym.imp.strtod_l
0x0000b215      0f1f00         nop dword [rax]
0x0000b218      4885db         test rbx, rbx
0x0000b21b      660fefc0       pxor xmm0, xmm0
0x0000b21f      7407           je 0xb228
0x0000b221      660fefc0       pxor xmm0, xmm0
0x0000b225      48892b         mov qword [rbx], rbp
0x0000b228      4883c408       add rsp, 8
0x0000b22c      5b             pop rbx
0x0000b22d      5d             pop rbp
0x0000b22e      c3             ret
0x0000b22f      90             nop
0x0000b230      488d351c2200.  lea rsi, [0x0000d453]                   ; "C"
0x0000b237      31d2           xor edx, edx
0x0000b239      bfbf1f0000     mov edi, 0x1fbf
0x0000b23e      e81d6affff     call sym.imp.newlocale
0x0000b243      488905365020.  mov qword [obj.c_locale_cache], rax     ; [0x210280:8]=0
0x0000b24a      ebac           jmp 0xb1f8
0x0000b24c      0f1f4000       nop dword [rax]
;-- close_stream:
0x0000b250      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x0000b252      55             push rbp
0x0000b253      4889fd         mov rbp, rdi
0x0000b256      53             push rbx
0x0000b257      e8e468ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000b25c      8b5d00         mov ebx, dword [rbp]
0x0000b25f      4889ef         mov rdi, rbp
0x0000b262      4989c4         mov r12, rax
0x0000b265      e8d6010000     call sym.rpl_fclose
0x0000b26a      83e320         and ebx, 0x20                           ; "@"
0x0000b26d      85db           test ebx, ebx
0x0000b26f      7517           jne 0xb288
0x0000b271      85c0           test eax, eax
0x0000b273      740a           je 0xb27f                               ; stdio.h:-186
0x0000b275      4d85e4         test r12, r12                           ; stdio.h:-178
0x0000b278      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000b27d      7439           je 0xb2b8
0x0000b27f      5b             pop rbx
0x0000b280      5d             pop rbp
0x0000b281      415c           pop r12
0x0000b283      c3             ret
0x0000b284      0f1f4000       nop dword [rax]
0x0000b288      85c0           test eax, eax
0x0000b28a      751c           jne 0xb2a8
0x0000b28c      e87f68ffff     call sym.imp.__errno_location
0x0000b291      c70000000000   mov dword [rax], 0
0x0000b297      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000b29c      5b             pop rbx
0x0000b29d      5d             pop rbp
0x0000b29e      415c           pop r12
0x0000b2a0      c3             ret
0x0000b2a1      0f1f80000000.  nop dword [rax]
0x0000b2a8      5b             pop rbx
0x0000b2a9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000b2ae      5d             pop rbp                                 ; stdio.h:-186
0x0000b2af      415c           pop r12
0x0000b2b1      c3             ret
0x0000b2b2      660f1f440000   nop word [rax + rax]
0x0000b2b8      e85368ffff     call sym.imp.__errno_location
0x0000b2bd      833809         cmp dword [rax], 9
0x0000b2c0      5b             pop rbx
0x0000b2c1      5d             pop rbp
0x0000b2c2      415c           pop r12                                 ; stdio.h:-178
0x0000b2c4      0f95c0         setne al
0x0000b2c7      0fb6c0         movzx eax, al
0x0000b2ca      f7d8           neg eax
0x0000b2cc      c3             ret
0x0000b2cd      0f1f00         nop dword [rax]
;-- dtotimespec:
0x0000b2d0      660f2e058021.  ucomisd xmm0, qword [0x0000d458]        ; ../coreutils-8.31/lib/dtotimespec.c:31
0x0000b2d8      0f8692000000   jbe 0xb370
0x0000b2de      f20f100d7a21.  movsd xmm1, qword [0x0000d460]          ; ../coreutils-8.31/lib/dtotimespec.c:34 ; [0xd460:8]=0x43e0000000000000
0x0000b2e6      660f2ec8       ucomisd xmm1, xmm0
0x0000b2ea      766c           jbe 0xb358
0x0000b2ec      f2480f2cf0     cvttsd2si rsi, xmm0                     ; ../coreutils-8.31/lib/dtotimespec.c:38
0x0000b2f1      660fefc9       pxor xmm1, xmm1                         ; ../coreutils-8.31/lib/dtotimespec.c:39
0x0000b2f5      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/dtotimespec.c:41
0x0000b2f7      f2480f2ace     cvtsi2sd xmm1, rsi                      ; ../coreutils-8.31/lib/dtotimespec.c:39
0x0000b2fc      f20f5cc1       subsd xmm0, xmm1
0x0000b300      660fefc9       pxor xmm1, xmm1                         ; ../coreutils-8.31/lib/dtotimespec.c:41
0x0000b304      f20f59055c21.  mulsd xmm0, qword [0x0000d468]          ; ../coreutils-8.31/lib/dtotimespec.c:39
0x0000b30c      f2480f2cd0     cvttsd2si rdx, xmm0                     ; ../coreutils-8.31/lib/dtotimespec.c:40
0x0000b311      f2480f2aca     cvtsi2sd xmm1, rdx                      ; ../coreutils-8.31/lib/dtotimespec.c:41
0x0000b316      660f2ec1       ucomisd xmm0, xmm1
0x0000b31a      0f97c1         seta cl
0x0000b31d      4801d1         add rcx, rdx
0x0000b320      48bab394d626.  movabs rdx, 0x112e0be826d694b3          ; ../coreutils-8.31/lib/dtotimespec.c:42
0x0000b32a      4889c8         mov rax, rcx
0x0000b32d      48f7ea         imul rdx
0x0000b330      4889c8         mov rax, rcx
0x0000b333      48c1f83f       sar rax, 0x3f
0x0000b337      48c1fa1a       sar rdx, 0x1a
0x0000b33b      4829c2         sub rdx, rax
0x0000b33e      488d0432       lea rax, [rdx + rsi]
0x0000b342      4869d200ca9a.  imul rdx, rdx, 0x3b9aca00               ; ../coreutils-8.31/lib/dtotimespec.c:43
0x0000b349      4829d1         sub rcx, rdx                            ; ../coreutils-8.31/lib/dtotimespec.c:45
0x0000b34c      4889ca         mov rdx, rcx
0x0000b34f      782f           js 0xb380
0x0000b351      f3c3           ret                                     ; ../coreutils-8.31/lib/dtotimespec.c:53
0x0000b353      0f1f440000     nop dword [rax + rax]
0x0000b358      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x0000b362      baffc99a3b     mov edx, 0x3b9ac9ff
0x0000b367      c3             ret
0x0000b368      0f1f84000000.  nop dword [rax + rax]
0x0000b370      48b800000000.  movabs rax, 0x8000000000000000
0x0000b37a      31d2           xor edx, edx
0x0000b37c      c3             ret
0x0000b37d      0f1f00         nop dword [rax]
0x0000b380      4883e801       sub rax, 1                              ; ../coreutils-8.31/lib/dtotimespec.c:47
0x0000b384      4881c200ca9a.  add rdx, 0x3b9aca00                     ; ../coreutils-8.31/lib/dtotimespec.c:48
0x0000b38b      c3             ret                                     ; ../coreutils-8.31/lib/dtotimespec.c:53
0x0000b38c      0f1f4000       nop dword [rax]
;-- hard_locale:
0x0000b390      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x0000b394      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x0000b396      e8a56affff     call sym.imp.setlocale
0x0000b39b      4889c2         mov rdx, rax
0x0000b39e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x0000b3a3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x0000b3a6      741d           je 0xb3c5
0x0000b3a8      488d3da42000.  lea rdi, [0x0000d453]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000b3af      b902000000     mov ecx, 2
0x0000b3b4      4889d6         mov rsi, rdx
0x0000b3b7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000b3b9      0f97c1         seta cl
0x0000b3bc      80d900         sbb cl, 0
0x0000b3bf      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x0000b3c1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x0000b3c3      750b           jne 0xb3d0
0x0000b3c5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000b3c9      c3             ret
0x0000b3ca      660f1f440000   nop word [rax + rax]
0x0000b3d0      488d3d992000.  lea rdi, [0x0000d470]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "POSIX"
0x0000b3d7      b906000000     mov ecx, 6
0x0000b3dc      4889d6         mov rsi, rdx
0x0000b3df      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000b3e1      0f97c0         seta al
0x0000b3e4      1c00           sbb al, 0
0x0000b3e6      84c0           test al, al
0x0000b3e8      0f95c0         setne al
0x0000b3eb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000b3ef      c3             ret
;-- locale_charset:
0x0000b3f0      4883ec08       sub rsp, 8
0x0000b3f4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x0000b3f9      e8f269ffff     call sym.imp.nl_langinfo
0x0000b3fe      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x0000b401      741d           je 0xb420
0x0000b403      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x0000b406      488d15692000.  lea rdx, str.ASCII                      ; 0xd476 ; "ASCII"
0x0000b40d      480f44c2       cmove rax, rdx
0x0000b411      4883c408       add rsp, 8
0x0000b415      c3             ret
0x0000b416      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b420      488d054f2000.  lea rax, str.ASCII                      ; 0xd476 ; "ASCII"
0x0000b427      4883c408       add rsp, 8
0x0000b42b      c3             ret
0x0000b42c      0f1f4000       nop dword [rax]
;-- dup_safer:
0x0000b430      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x0000b435      31f6           xor esi, esi
0x0000b437      31c0           xor eax, eax
0x0000b439      e9c2f9ffff     jmp sym.rpl_fcntl
0x0000b43e      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- rpl_fclose:
0x0000b440      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x0000b442      55             push rbp
0x0000b443      53             push rbx
0x0000b444      4889fb         mov rbx, rdi
0x0000b447      e84469ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000b44c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000b44e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x0000b451      7854           js 0xb4a7                               ; ../coreutils-8.31/lib/fclose.c:66
0x0000b453      e8b869ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x0000b458      85c0           test eax, eax
0x0000b45a      752c           jne 0xb488
0x0000b45c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000b45f      e85c000000     call sym.rpl_fflush
0x0000b464      85c0           test eax, eax
0x0000b466      743c           je 0xb4a4
0x0000b468      e8a366ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000b46d      448b20         mov r12d, dword [rax]
0x0000b470      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000b473      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x0000b476      e83567ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000b47b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000b47e      7530           jne 0xb4b0
0x0000b480      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000b481      5d             pop rbp
0x0000b482      415c           pop r12
0x0000b484      c3             ret
0x0000b485      0f1f00         nop dword [rax]
0x0000b488      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000b48b      e80069ffff     call sym.imp.fileno
0x0000b490      31f6           xor esi, esi
0x0000b492      ba01000000     mov edx, 1
0x0000b497      89c7           mov edi, eax
0x0000b499      e80268ffff     call sym.imp.lseek
0x0000b49e      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000b4a2      75b8           jne 0xb45c
0x0000b4a4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000b4a7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000b4a8      5d             pop rbp
0x0000b4a9      415c           pop r12
0x0000b4ab      e90067ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x0000b4b0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x0000b4b4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x0000b4b9      ebc5           jmp 0xb480
0x0000b4bb      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x0000b4c0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x0000b4c3      53             push rbx
0x0000b4c4      4889fb         mov rbx, rdi
0x0000b4c7      7411           je 0xb4da                               ; ../coreutils-8.31/lib/fflush.c:150
0x0000b4c9      e84269ffff     call sym.imp.__freading
0x0000b4ce      85c0           test eax, eax
0x0000b4d0      7408           je 0xb4da
0x0000b4d2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x0000b4d8      750e           jne 0xb4e8
0x0000b4da      4889df         mov rdi, rbx
0x0000b4dd      5b             pop rbx
0x0000b4de      e9ed68ffff     jmp sym.imp.fflush
0x0000b4e3      0f1f440000     nop dword [rax + rax]
0x0000b4e8      4889df         mov rdi, rbx
0x0000b4eb      ba01000000     mov edx, 1
0x0000b4f0      31f6           xor esi, esi
0x0000b4f2      e809000000     call sym.rpl_fseeko
0x0000b4f7      4889df         mov rdi, rbx
0x0000b4fa      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000b4fb      e9d068ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x0000b500      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x0000b504      48394710       cmp qword [rdi + 0x10], rax
0x0000b508      7406           je 0xb510                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000b50a      e98169ffff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x0000b50f      90             nop
0x0000b510      488b4720       mov rax, qword [rdi + 0x20]
0x0000b514      48394728       cmp qword [rdi + 0x28], rax
0x0000b518      75f0           jne 0xb50a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000b51a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000b51f      75e9           jne 0xb50a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x0000b521      4154           push r12
0x0000b523      55             push rbp
0x0000b524      4189d4         mov r12d, edx
0x0000b527      53             push rbx
0x0000b528      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000b52b      4889fb         mov rbx, rdi
0x0000b52e      e85d68ffff     call sym.imp.fileno
0x0000b533      4489e2         mov edx, r12d
0x0000b536      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x0000b539      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x0000b53b      e86067ffff     call sym.imp.lseek
0x0000b540      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000b544      740c           je 0xb552
0x0000b546      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x0000b549      488983900000.  mov qword [rbx + 0x90], rax
0x0000b550      31c0           xor eax, eax
0x0000b552      5b             pop rbx                                 ; /sys_errlist.h:19
0x0000b553      5d             pop rbp
0x0000b554      415c           pop r12
0x0000b556      c3             ret
0x0000b557      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x0000b560      4157           push r15
0x0000b562      4156           push r14
0x0000b564      4989d7         mov r15, rdx
0x0000b567      4155           push r13
0x0000b569      4154           push r12
0x0000b56b      4c8d259e4320.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20f910
0x0000b572      55             push rbp
0x0000b573      488d2d9e4320.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20f918 ; "pI"
0x0000b57a      53             push rbx
0x0000b57b      4189fd         mov r13d, edi
0x0000b57e      4989f6         mov r14, rsi
0x0000b581      4c29e5         sub rbp, r12
0x0000b584      4883ec08       sub rsp, 8
0x0000b588      48c1fd03       sar rbp, 3
0x0000b58c      e81765ffff     call sym._init
0x0000b591      4885ed         test rbp, rbp
0x0000b594      7420           je 0xb5b6
0x0000b596      31db           xor ebx, ebx
0x0000b598      0f1f84000000.  nop dword [rax + rax]
0x0000b5a0      4c89fa         mov rdx, r15
0x0000b5a3      4c89f6         mov rsi, r14
0x0000b5a6      4489ef         mov edi, r13d
0x0000b5a9      41ff14dc       call qword [r12 + rbx*8]
0x0000b5ad      4883c301       add rbx, 1
0x0000b5b1      4839dd         cmp rbp, rbx
0x0000b5b4      75ea           jne 0xb5a0
0x0000b5b6      4883c408       add rsp, 8
0x0000b5ba      5b             pop rbx
0x0000b5bb      5d             pop rbp
0x0000b5bc      415c           pop r12
0x0000b5be      415d           pop r13
0x0000b5c0      415e           pop r14
0x0000b5c2      415f           pop r15
0x0000b5c4      c3             ret
0x0000b5c5      90             nop
0x0000b5c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x0000b5d0      f3c3           ret
0x0000b5d2      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b5dc      0f1f4000       nop dword [rax]
;-- atexit:
0x0000b5e0      488b15214a20.  mov rdx, qword [obj.__dso_handle]       ; [0x210008:8]=0x210008 obj.__dso_handle
0x0000b5e7      31f6           xor esi, esi
0x0000b5e9      e9c268ffff     jmp sym.imp.__cxa_atexit
0x0000b5ee      0000           add byte [rax], al
