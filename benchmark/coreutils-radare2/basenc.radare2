;-- section..plt:
;-- .plt:
0x00001580      ff35aa982000   push qword [0x0020ae30]                 ; [12] -r-x section size 816 named .plt
0x00001586      ff25ac982000   jmp qword [0x0020ae38]                  ; [0x20ae38:8]=0
0x0000158c      0f1f4000       nop dword [rax]
;-- imp.free:
0x00001590      ff25aa982000   jmp qword [reloc.free]                  ; [0x20ae40:8]=0x1596
0x00001596      6800000000     push 0
0x0000159b      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x000015a0      ff25a2982000   jmp qword [reloc.abort]                 ; [0x20ae48:8]=0x15a6
0x000015a6      6801000000     push 1
0x000015ab      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000015b0      ff259a982000   jmp qword [reloc.__errno_location]      ; [0x20ae50:8]=0x15b6
0x000015b6      6802000000     push 2
0x000015bb      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000015c0      ff2592982000   jmp qword [reloc.strncmp]               ; [0x20ae58:8]=0x15c6
0x000015c6      6803000000     push 3
0x000015cb      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x000015d0      ff258a982000   jmp qword [reloc._exit]                 ; [0x20ae60:8]=0x15d6
0x000015d6      6804000000     push 4
0x000015db      e9a0ffffff     jmp sym..plt
;-- imp.__fpending:
0x000015e0      ff2582982000   jmp qword [reloc.__fpending]            ; [0x20ae68:8]=0x15e6
0x000015e6      6805000000     push 5
0x000015eb      e990ffffff     jmp sym..plt
;-- imp.fread_unlocked:
0x000015f0      ff257a982000   jmp qword [reloc.fread_unlocked]        ; [0x20ae70:8]=0x15f6
0x000015f6      6806000000     push 6
0x000015fb      e980ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001600      ff2572982000   jmp qword [reloc.textdomain]            ; [0x20ae78:8]=0x1606
0x00001606      6807000000     push 7
0x0000160b      e970ffffff     jmp sym..plt
;-- imp.fclose:
0x00001610      ff256a982000   jmp qword [reloc.fclose]                ; [0x20ae80:8]=0x1616
0x00001616      6808000000     push 8
0x0000161b      e960ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001620      ff2562982000   jmp qword [reloc.bindtextdomain]        ; [0x20ae88:8]=0x1626 ; "&\x16"
0x00001626      6809000000     push 9
0x0000162b      e950ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001630      ff255a982000   jmp qword [reloc.dcgettext]             ; [0x20ae90:8]=0x1636 ; "6\x16"
0x00001636      680a000000     push 0xa
0x0000163b      e940ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001640      ff2552982000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20ae98:8]=0x1646 ; "F\x16"
0x00001646      680b000000     push 0xb
0x0000164b      e930ffffff     jmp sym..plt
;-- imp.strlen:
0x00001650      ff254a982000   jmp qword [reloc.strlen]                ; [0x20aea0:8]=0x1656 ; "V\x16"
0x00001656      680c000000     push 0xc
0x0000165b      e920ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001660      ff2542982000   jmp qword [reloc.__stack_chk_fail]      ; [0x20aea8:8]=0x1666 ; "f\x16"
0x00001666      680d000000     push 0xd
0x0000166b      e910ffffff     jmp sym..plt
;-- imp.getopt_long:
0x00001670      ff253a982000   jmp qword [reloc.getopt_long]           ; [0x20aeb0:8]=0x1676 ; "v\x16"
0x00001676      680e000000     push 0xe
0x0000167b      e900ffffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001680      ff2532982000   jmp qword [reloc.mbrtowc]               ; [0x20aeb8:8]=0x1686
0x00001686      680f000000     push 0xf
0x0000168b      e9f0feffff     jmp sym..plt
;-- imp.strchr:
0x00001690      ff252a982000   jmp qword [reloc.strchr]                ; [0x20aec0:8]=0x1696
0x00001696      6810000000     push 0x10
0x0000169b      e9e0feffff     jmp sym..plt
;-- imp.__overflow:
0x000016a0      ff2522982000   jmp qword [reloc.__overflow]            ; [0x20aec8:8]=0x16a6
0x000016a6      6811000000     push 0x11
0x000016ab      e9d0feffff     jmp sym..plt
;-- imp.strrchr:
0x000016b0      ff251a982000   jmp qword [reloc.strrchr]               ; [0x20aed0:8]=0x16b6
0x000016b6      6812000000     push 0x12
0x000016bb      e9c0feffff     jmp sym..plt
;-- imp.lseek:
0x000016c0      ff2512982000   jmp qword [reloc.lseek]                 ; [0x20aed8:8]=0x16c6
0x000016c6      6813000000     push 0x13
0x000016cb      e9b0feffff     jmp sym..plt
;-- imp.__assert_fail:
0x000016d0      ff250a982000   jmp qword [reloc.__assert_fail]         ; [0x20aee0:8]=0x16d6
0x000016d6      6814000000     push 0x14
0x000016db      e9a0feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x000016e0      ff2502982000   jmp qword [reloc.__strtoul_internal]    ; [0x20aee8:8]=0x16e6
0x000016e6      6815000000     push 0x15
0x000016eb      e990feffff     jmp sym..plt
;-- imp.memset:
0x000016f0      ff25fa972000   jmp qword [reloc.memset]                ; [0x20aef0:8]=0x16f6
0x000016f6      6816000000     push 0x16
0x000016fb      e980feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001700      ff25f2972000   jmp qword [reloc.posix_fadvise]         ; [0x20aef8:8]=0x1706
0x00001706      6817000000     push 0x17
0x0000170b      e970feffff     jmp sym..plt
;-- imp.memchr:
0x00001710      ff25ea972000   jmp qword [reloc.memchr]                ; [0x20af00:8]=0x1716
0x00001716      6818000000     push 0x18
0x0000171b      e960feffff     jmp sym..plt
;-- imp.memcmp:
0x00001720      ff25e2972000   jmp qword [reloc.memcmp]                ; [0x20af08:8]=0x1726 ; "&\x17"
0x00001726      6819000000     push 0x19
0x0000172b      e950feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001730      ff25da972000   jmp qword [reloc.fputs_unlocked]        ; [0x20af10:8]=0x1736 ; "6\x17"
0x00001736      681a000000     push 0x1a
0x0000173b      e940feffff     jmp sym..plt
;-- imp.calloc:
0x00001740      ff25d2972000   jmp qword [reloc.calloc]                ; [0x20af18:8]=0x1746 ; "F\x17"
0x00001746      681b000000     push 0x1b
0x0000174b      e930feffff     jmp sym..plt
;-- imp.strcmp:
0x00001750      ff25ca972000   jmp qword [reloc.strcmp]                ; [0x20af20:8]=0x1756 ; "V\x17"
0x00001756      681c000000     push 0x1c
0x0000175b      e920feffff     jmp sym..plt
;-- imp.memcpy:
0x00001760      ff25c2972000   jmp qword [reloc.memcpy]                ; [0x20af28:8]=0x1766 ; "f\x17"
0x00001766      681d000000     push 0x1d
0x0000176b      e910feffff     jmp sym..plt
;-- imp.fileno:
0x00001770      ff25ba972000   jmp qword [reloc.fileno]                ; [0x20af30:8]=0x1776 ; "v\x17"
0x00001776      681e000000     push 0x1e
0x0000177b      e900feffff     jmp sym..plt
;-- imp.malloc:
0x00001780      ff25b2972000   jmp qword [reloc.malloc]                ; [0x20af38:8]=0x1786
0x00001786      681f000000     push 0x1f
0x0000178b      e9f0fdffff     jmp sym..plt
;-- imp.fflush:
0x00001790      ff25aa972000   jmp qword [reloc.fflush]                ; [0x20af40:8]=0x1796
0x00001796      6820000000     push 0x20                               ; "@"
0x0000179b      e9e0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000017a0      ff25a2972000   jmp qword [reloc.nl_langinfo]           ; [0x20af48:8]=0x17a6
0x000017a6      6821000000     push 0x21                               ; '!'
0x000017ab      e9d0fdffff     jmp sym..plt
;-- imp.__freading:
0x000017b0      ff259a972000   jmp qword [reloc.__freading]            ; [0x20af50:8]=0x17b6
0x000017b6      6822000000     push 0x22                               ; '"'
0x000017bb      e9c0fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x000017c0      ff2592972000   jmp qword [reloc.fwrite_unlocked]       ; [0x20af58:8]=0x17c6
0x000017c6      6823000000     push 0x23                               ; '#'
0x000017cb      e9b0fdffff     jmp sym..plt
;-- imp.realloc:
0x000017d0      ff258a972000   jmp qword [reloc.realloc]               ; [0x20af60:8]=0x17d6
0x000017d6      6824000000     push 0x24                               ; '$'
0x000017db      e9a0fdffff     jmp sym..plt
;-- imp.setlocale:
0x000017e0      ff2582972000   jmp qword [reloc.setlocale]             ; [0x20af68:8]=0x17e6
0x000017e6      6825000000     push 0x25                               ; '%'
0x000017eb      e990fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x000017f0      ff257a972000   jmp qword [reloc.__printf_chk]          ; [0x20af70:8]=0x17f6
0x000017f6      6826000000     push 0x26                               ; '&'
0x000017fb      e980fdffff     jmp sym..plt
;-- imp.memmove:
0x00001800      ff2572972000   jmp qword [reloc.memmove]               ; [0x20af78:8]=0x1806
0x00001806      6827000000     push 0x27                               ; '''
0x0000180b      e970fdffff     jmp sym..plt
;-- imp.error:
0x00001810      ff256a972000   jmp qword [reloc.error]                 ; [0x20af80:8]=0x1816
0x00001816      6828000000     push 0x28                               ; '('
0x0000181b      e960fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001820      ff2562972000   jmp qword [reloc.fseeko]                ; [0x20af88:8]=0x1826 ; "&\x18"
0x00001826      6829000000     push 0x29                               ; ')'
0x0000182b      e950fdffff     jmp sym..plt
;-- imp.fopen:
0x00001830      ff255a972000   jmp qword [reloc.fopen]                 ; [0x20af90:8]=0x1836 ; "6\x18"
0x00001836      682a000000     push 0x2a                               ; '*'
0x0000183b      e940fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001840      ff2552972000   jmp qword [reloc.__cxa_atexit]          ; [0x20af98:8]=0x1846 ; "F\x18"
0x00001846      682b000000     push 0x2b                               ; '+'
0x0000184b      e930fdffff     jmp sym..plt
;-- imp.exit:
0x00001850      ff254a972000   jmp qword [reloc.exit]                  ; [0x20afa0:8]=0x1856 ; "V\x18"
0x00001856      682c000000     push 0x2c                               ; ','
0x0000185b      e920fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001860      ff2542972000   jmp qword [reloc.fwrite]                ; [0x20afa8:8]=0x1866 ; "f\x18"
0x00001866      682d000000     push 0x2d                               ; '-'
0x0000186b      e910fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001870      ff253a972000   jmp qword [reloc.__fprintf_chk]         ; [0x20afb0:8]=0x1876 ; "v\x18"
0x00001876      682e000000     push 0x2e                               ; '.'
0x0000187b      e900fdffff     jmp sym..plt
;-- imp.mbsinit:
0x00001880      ff2532972000   jmp qword [reloc.mbsinit]               ; [0x20afb8:8]=0x1886
0x00001886      682f000000     push 0x2f                               ; '/'
0x0000188b      e9f0fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001890      ff252a972000   jmp qword [reloc.iswprint]              ; [0x20afc0:8]=0x1896
0x00001896      6830000000     push 0x30                               ; '0'
0x0000189b      e9e0fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000018a0      ff2522972000   jmp qword [reloc.__ctype_b_loc]         ; [0x20afc8:8]=0x18a6
0x000018a6      6831000000     push 0x31                               ; '1'
0x000018ab      e9d0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000018b0      .qword 0x90660020973a25ff                              ; [13] -r-x section size 8 named .plt.got
0x000018b8      0000           add byte [rax], al
0x000018ba      0000           add byte [rax], al
0x000018bc      0000           add byte [rax], al
0x000018be      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x000018c0      4157           push r15                                ; [14] -r-x section size 23102 named .text
0x000018c2      4156           push r14
0x000018c4      4531f6         xor r14d, r14d
0x000018c7      4155           push r13
0x000018c9      4154           push r12
0x000018cb      41bd4c000000   mov r13d, 0x4c                          ; 'L'
0x000018d1      55             push rbp
0x000018d2      53             push rbx
0x000018d3      89fd           mov ebp, edi
0x000018d5      4889f3         mov rbx, rsi
0x000018d8      4531e4         xor r12d, r12d
0x000018db      4881ec880000.  sub rsp, 0x88
0x000018e2      488b3e         mov rdi, qword [rsi]
0x000018e5      64488b042528.  mov rax, qword fs:[0x28]
0x000018ee      4889442478     mov qword [rsp + 0x78], rax
0x000018f3      31c0           xor eax, eax
0x000018f5      e8762b0000     call sym.set_program_name
0x000018fa      488d35c06c00.  lea rsi, [0x000085c1]
0x00001901      bf06000000     mov edi, 6
0x00001906      e8d5feffff     call sym.imp.setlocale
0x0000190b      488d350b5b00.  lea rsi, str.usr_local_share_locale     ; 0x741d ; "/usr/local/share/locale"
0x00001912      488d3ddb5a00.  lea rdi, [0x000073f4]                   ; "coreutils"
0x00001919      e802fdffff     call sym.imp.bindtextdomain
0x0000191e      488d3dcf5a00.  lea rdi, [0x000073f4]                   ; "coreutils"
0x00001925      e8d6fcffff     call sym.imp.textdomain
0x0000192a      488d3d4f2a00.  lea rdi, sym.close_stdout               ; 0x4380 ; "USH\x83\xec\bH\x8b=\xfbl "
0x00001931      e8ba590000     call sym.atexit
0x00001936      c644242000     mov byte [rsp + 0x20], 0
0x0000193b      488d0dde9020.  lea rcx, obj.long_options               ; 0x20aa20
0x00001942      488d151b5b00.  lea rdx, str.diw:                       ; 0x7464 ; "diw:"
0x00001949      4531c0         xor r8d, r8d
0x0000194c      4889de         mov rsi, rbx
0x0000194f      89ef           mov edi, ebp
0x00001951      e81afdffff     call sym.imp.getopt_long
0x00001956      83f8ff         cmp eax, 0xffffffff
0x00001959      0f84ee000000   je 0x1a4d
0x0000195f      83f869         cmp eax, 0x69
0x00001962      0f8498000000   je 0x1a00
0x00001968      7f66           jg 0x19d0
0x0000196a      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x0000196f      0f8468090000   je 0x22dd
0x00001975      83f864         cmp eax, 0x64
0x00001978      7476           je 0x19f0
0x0000197a      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x0000197f      740f           je 0x1990
0x00001981      bf01000000     mov edi, 1
0x00001986      e8d5150000     call sym.usage
0x0000198b      0f1f440000     nop dword [rax + rax]
0x00001990      4883ec08       sub rsp, 8
0x00001994      488b3ded9620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x0000199b      488b0d6e9620.  mov rcx, qword [obj.Version]            ; [0x20b010:8]=0x7dc9
0x000019a2      6a00           push 0
0x000019a4      4c8d0d9c5a00.  lea r9, str.Assaf_Gordon                ; 0x7447 ; "Assaf Gordon"
0x000019ab      4c8d05a25a00.  lea r8, str.Simon_Josefsson             ; 0x7454 ; "Simon Josefsson"
0x000019b2      488d15375a00.  lea rdx, str.GNU_coreutils              ; 0x73f0 ; "GNU coreutils"
0x000019b9      488d35955900.  lea rsi, str.basenc                     ; 0x7355 ; "basenc"
0x000019c0      31c0           xor eax, eax
0x000019c2      e8994c0000     call sym.version_etc
0x000019c7      31ff           xor edi, edi
0x000019c9      e882feffff     call sym.imp.exit
0x000019ce      6690           nop
0x000019d0      83f877         cmp eax, 0x77
0x000019d3      743b           je 0x1a10
0x000019d5      7caa           jl 0x1981
0x000019d7      8d5080         lea edx, [rax - 0x80]
0x000019da      83fa07         cmp edx, 7
0x000019dd      77a2           ja 0x1981
0x000019df      4189c6         mov r14d, eax
0x000019e2      e954ffffff     jmp 0x193b
0x000019e7      660f1f840000.  nop word [rax + rax]
0x000019f0      41bc01000000   mov r12d, 1
0x000019f6      e940ffffff     jmp 0x193b
0x000019fb      0f1f440000     nop dword [rax + rax]
0x00001a00      c644242001     mov byte [rsp + 0x20], 1
0x00001a05      e931ffffff     jmp 0x193b
0x00001a0a      660f1f440000   nop word [rax + rax]
0x00001a10      488d351e5a00.  lea rsi, str.invalid_wrap_size          ; 0x7435 ; "invalid wrap size"
0x00001a17      ba05000000     mov edx, 5
0x00001a1c      31ff           xor edi, edi
0x00001a1e      e80dfcffff     call sym.imp.dcgettext
0x00001a23      488b3d769620.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20b0a0:8]=0
0x00001a2a      488d0d906b00.  lea rcx, [0x000085c1]
0x00001a31      4989c0         mov r8, rax
0x00001a34      4531c9         xor r9d, r9d
0x00001a37      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00001a3e      31f6           xor esi, esi
0x00001a40      e80b510000     call sym.xdectoumax
0x00001a45      4989c5         mov r13, rax
0x00001a48      e9eefeffff     jmp 0x193b
0x00001a4d      4183c680       add r14d, 0xffffff80
0x00001a51      4183fe07       cmp r14d, 7
0x00001a55      0f8789080000   ja 0x22e4
0x00001a5b      488d15de6100.  lea rdx, [0x00007c40]
0x00001a62      4a6304b2       movsxd rax, dword [rdx + r14*4]
0x00001a66      4801d0         add rax, rdx
0x00001a69      ffe0           jmp rax
0x00001a6b      488d057e0b00.  lea rax, sym.base2_length               ; 0x25f0
0x00001a72      488905779620.  mov qword [obj.base_length], rax        ; [0x20b0f0:8]=0
0x00001a79      488d05600b00.  lea rax, sym.isbase2                    ; 0x25e0
0x00001a80      488905619620.  mov qword [obj.isbase], rax             ; [0x20b0e8:8]=0
0x00001a87      488d05c20b00.  lea rax, sym.base2lsbf_encode           ; 0x2650 ; "H\x85\xf6t=L\x8d\x047\x0f\x1f\x80"
0x00001a8e      4889054b9620.  mov qword [obj.base_encode], rax        ; [0x20b0e0:8]=0
0x00001a95      488d05b40c00.  lea rax, sym.base2_decode_ctx_init      ; 0x2750 ; "SH\x89\xfbH\xc7G\x18"
0x00001a9c      488905359620.  mov qword [obj.base_decode_ctx_init], rax ; [0x20b0d8:8]=0
0x00001aa3      488d05e60f00.  lea rax, sym.base2lsbf_decode_ctx       ; 0x2a90 ; "H\x85\xd2I\x89\xcaI\xc7"
0x00001aaa      4889051f9620.  mov qword [obj.base_decode_ctx], rax    ; [0x20b0d0:8]=0
0x00001ab1      486305e09520.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b098:4]=0
0x00001ab8      89ea           mov edx, ebp
0x00001aba      29c2           sub edx, eax
0x00001abc      83ea01         sub edx, 1
0x00001abf      0f8fa2080000   jg 0x2367
0x00001ac5      39e8           cmp eax, ebp
0x00001ac7      0f8da6040000   jge 0x1f73
0x00001acd      488b04c3       mov rax, qword [rbx + rax*8]
0x00001ad1      488d35b26500.  lea rsi, [0x0000808a]                   ; "-"
0x00001ad8      4889c7         mov rdi, rax
0x00001adb      4889442438     mov qword [rsp + 0x38], rax
0x00001ae0      e86bfcffff     call sym.imp.strcmp
0x00001ae5      85c0           test eax, eax
0x00001ae7      0f8492040000   je 0x1f7f
0x00001aed      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00001af2      488d35975900.  lea rsi, [0x00007490]                   ; "rb"
0x00001af9      e832fdffff     call sym.imp.fopen
0x00001afe      4885c0         test rax, rax
0x00001b01      4889c5         mov rbp, rax
0x00001b04      0f842c080000   je 0x2336
0x00001b0a      be02000000     mov esi, 2
0x00001b0f      4889ef         mov rdi, rbp
0x00001b12      e829290000     call sym.fadvise
0x00001b17      4584e4         test r12b, r12b
0x00001b1a      0f846b040000   je 0x1f8b
0x00001b20      488b05619520.  mov rax, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00001b27      bf00140000     mov edi, 0x1400
0x00001b2c      4889442428     mov qword [rsp + 0x28], rax
0x00001b31      ff15b9952000   call qword [obj.base_length]            ; [0x20b0f0:8]=0
0x00001b37      4863f8         movsxd rdi, eax
0x00001b3a      e8814c0000     call sym.xmalloc
0x00001b3f      bf00140000     mov edi, 0x1400
0x00001b44      4989c4         mov r12, rax
0x00001b47      e8744c0000     call sym.xmalloc
0x00001b4c      4889442430     mov qword [rsp + 0x30], rax
0x00001b51      488d442450     lea rax, [rsp + 0x50]
0x00001b56      48c744246000.  mov qword [rsp + 0x60], 0
0x00001b5f      4889442410     mov qword [rsp + 0x10], rax
0x00001b64      4889c7         mov rdi, rax
0x00001b67      ff156b952000   call qword [obj.base_decode_ctx_init]   ; [0x20b0d8:8]=0
0x00001b6d      488d442448     lea rax, [rsp + 0x48]
0x00001b72      4889442418     mov qword [rsp + 0x18], rax
0x00001b77      660f1f840000.  nop word [rax + rax]
0x00001b80      31db           xor ebx, ebx
0x00001b82      48896c2408     mov qword [rsp + 8], rbp
0x00001b87      eb3d           jmp 0x1bc6
0x00001b89      0f1f80000000.  nop dword [rax]
0x00001b90      488b442408     mov rax, qword [rsp + 8]
0x00001b95      4c01eb         add rbx, r13
0x00001b98      f60020         test byte [rax], 0x20
0x00001b9b      0f8510070000   jne 0x22b1
0x00001ba1      bf00140000     mov edi, 0x1400
0x00001ba6      ff1544952000   call qword [obj.base_length]            ; [0x20b0f0:8]=0
0x00001bac      4898           cdqe
0x00001bae      4839c3         cmp rbx, rax
0x00001bb1      0f83c9020000   jae 0x1e80
0x00001bb7      488b442408     mov rax, qword [rsp + 8]
0x00001bbc      8b00           mov eax, dword [rax]
0x00001bbe      a810           test al, 0x10
0x00001bc0      0f856a030000   jne 0x1f30
0x00001bc6      bf00140000     mov edi, 0x1400
0x00001bcb      ff151f952000   call qword [obj.base_length]            ; [0x20b0f0:8]=0
0x00001bd1      488b4c2408     mov rcx, qword [rsp + 8]
0x00001bd6      4863d0         movsxd rdx, eax
0x00001bd9      498d3c1c       lea rdi, [r12 + rbx]
0x00001bdd      4829da         sub rdx, rbx
0x00001be0      be01000000     mov esi, 1
0x00001be5      e806faffff     call sym.imp.fread_unlocked
0x00001bea      807c242000     cmp byte [rsp + 0x20], 0
0x00001bef      4989c5         mov r13, rax
0x00001bf2      4889442448     mov qword [rsp + 0x48], rax
0x00001bf7      7497           je 0x1b90
0x00001bf9      4531f6         xor r14d, r14d
0x00001bfc      0f1f4000       nop dword [rax]
0x00001c00      4d85ed         test r13, r13
0x00001c03      748b           je 0x1b90
0x00001c05      4d39ee         cmp r14, r13
0x00001c08      7386           jae 0x1b90
0x00001c0a      4a8d2c33       lea rbp, [rbx + r14]
0x00001c0e      4d8d3c2c       lea r15, [r12 + rbp]
0x00001c12      410fbe3f       movsx edi, byte [r15]
0x00001c16      ff15cc942000   call qword [obj.isbase]                 ; [0x20b0e8:8]=0
0x00001c1c      84c0           test al, al
0x00001c1e      4c8b6c2448     mov r13, qword [rsp + 0x48]
0x00001c23      0f8547020000   jne 0x1e70
0x00001c29      41803f3d       cmp byte [r15], 0x3d
0x00001c2d      0f843d020000   je 0x1e70
0x00001c33      4983ed01       sub r13, 1
0x00001c37      498d742c01     lea rsi, [r12 + rbp + 1]
0x00001c3c      4c89ff         mov rdi, r15
0x00001c3f      4c89ea         mov rdx, r13
0x00001c42      4c896c2448     mov qword [rsp + 0x48], r13
0x00001c47      4c29f2         sub rdx, r14
0x00001c4a      e8b1fbffff     call sym.imp.memmove
0x00001c4f      4d85ed         test r13, r13
0x00001c52      75b1           jne 0x1c05
0x00001c54      e937ffffff     jmp 0x1b90
0x00001c59      488d05900900.  lea rax, sym.base2_length               ; 0x25f0
0x00001c60      488905899420.  mov qword [obj.base_length], rax        ; [0x20b0f0:8]=0
0x00001c67      488d05720900.  lea rax, sym.isbase2                    ; 0x25e0
0x00001c6e      488905739420.  mov qword [obj.isbase], rax             ; [0x20b0e8:8]=0
0x00001c75      488d05840900.  lea rax, sym.base2msbf_encode           ; 0x2600 ; "H\x85\xf6t=L\x8d\x047\x0f\x1f\x80"
0x00001c7c      4889055d9420.  mov qword [obj.base_encode], rax        ; [0x20b0e0:8]=0
0x00001c83      488d05c60a00.  lea rax, sym.base2_decode_ctx_init      ; 0x2750 ; "SH\x89\xfbH\xc7G\x18"
0x00001c8a      488905479420.  mov qword [obj.base_decode_ctx_init], rax ; [0x20b0d8:8]=0
0x00001c91      488d05880e00.  lea rax, sym.base2msbf_decode_ctx       ; 0x2b20 ; "H\x85\xd2I\x89\xcaI\xc7"
0x00001c98      488905319420.  mov qword [obj.base_decode_ctx], rax    ; [0x20b0d0:8]=0
0x00001c9f      e90dfeffff     jmp 0x1ab1
0x00001ca4      488d05550800.  lea rax, sym.base64_length_wrapper      ; 0x2500
0x00001cab      4889053e9420.  mov qword [obj.base_length], rax        ; [0x20b0f0:8]=0
0x00001cb2      488d05e70900.  lea rax, sym.isbase64url                ; 0x26a0 ; "@\x80\xff-\x0f\x94\xc0@\x80\xff_\x0f\x94\xc2\b\xd0u\x16\x89\xfa\x83\xe2\xfb\x80\xfa+t\f@\x0f\xbe\xff\xe9\xfb\x18"
0x00001cb9      488905289420.  mov qword [obj.isbase], rax             ; [0x20b0e8:8]=0
0x00001cc0      488d05090a00.  lea rax, sym.base64url_encode           ; 0x26d0 ; "USH\x89\xcdH\x89\xd3H\x83\xec\b\xe8\x8f\x16"
0x00001cc7      488905129420.  mov qword [obj.base_encode], rax        ; [0x20b0e0:8]=0
0x00001cce      488d05ab0b00.  lea rax, sym.base64url_decode_ctx_init_wrapper ; 0x2880 ; "SH\x89\xfbH\x8d\x7f\x04\xe8S\x17"
0x00001cd5      488905fc9320.  mov qword [obj.base_decode_ctx_init], rax ; [0x20b0d8:8]=0
0x00001cdc      488d05ad1000.  lea rax, sym.base64url_decode_ctx_wrapper ; 0x2d90 ; "AVAUI\x89\xf6ATUI\x89\xd5SH\x89\xfbH\x89\xcdH;S\x18M\x89\xc4H\x8b\x7f\x10\x0f\x87\x9b"
0x00001ce3      488905e69320.  mov qword [obj.base_decode_ctx], rax    ; [0x20b0d0:8]=0
0x00001cea      e9c2fdffff     jmp 0x1ab1
0x00001cef      488d050a0800.  lea rax, sym.base64_length_wrapper      ; 0x2500
0x00001cf6      488905f39320.  mov qword [obj.base_length], rax        ; [0x20b0f0:8]=0
0x00001cfd      488d05bc2200.  lea rax, sym.isbase64                   ; 0x3fc0 ; "H\x8d\x059?"
0x00001d04      488905dd9320.  mov qword [obj.isbase], rax             ; [0x20b0e8:8]=0
0x00001d0b      488d055e2000.  lea rax, sym.base64_encode              ; 0x3d70
0x00001d12      488905c79320.  mov qword [obj.base_encode], rax        ; [0x20b0e0:8]=0
0x00001d19      488d05900b00.  lea rax, sym.base64_decode_ctx_init_wrapper ; 0x28b0 ; "H\x83\xc7\x04\xe9'\x17"
0x00001d20      488905b19320.  mov qword [obj.base_decode_ctx_init], rax ; [0x20b0d8:8]=0
0x00001d27      488d05320b00.  lea rax, sym.base64_decode_ctx_wrapper  ; 0x2860 ; "SH\x89\xfbH\x8d\x7f\x04\xe8\x83\x17"
0x00001d2e      4889059b9320.  mov qword [obj.base_decode_ctx], rax    ; [0x20b0d0:8]=0
0x00001d35      e977fdffff     jmp 0x1ab1
0x00001d3a      488d058f0800.  lea rax, sym.z85_length                 ; 0x25d0
0x00001d41      488905a89320.  mov qword [obj.base_length], rax        ; [0x20b0f0:8]=0
0x00001d48      488d05610a00.  lea rax, sym.isz85                      ; 0x27b0 ; "@\x80\xffZ\x7f2@\x80\xffA}3\x8dG\xd0<\tv,@\x0f\xbe\xf7H\x8d=VK"
0x00001d4f      488905929320.  mov qword [obj.isbase], rax             ; [0x20b0e8:8]=0
0x00001d56      488d05730e00.  lea rax, sym.z85_encode                 ; 0x2bd0 ; "AUATUSH\x83\xec\x18dH\x8b\x04%("
0x00001d5d      4889057c9320.  mov qword [obj.base_encode], rax        ; [0x20b0e0:8]=0
0x00001d64      488d05b50900.  lea rax, sym.z85_decode_ctx_init        ; 0x2720 ; "SH\x89\xfbH\xc7G\x18"
0x00001d6b      488905669320.  mov qword [obj.base_decode_ctx_init], rax ; [0x20b0d8:8]=0
0x00001d72      488d05f70b00.  lea rax, sym.z85_decode_ctx             ; 0x2970 ; "H\x85\xd2I\xc7"
0x00001d79      488905509320.  mov qword [obj.base_decode_ctx], rax    ; [0x20b0d0:8]=0
0x00001d80      e92cfdffff     jmp 0x1ab1
0x00001d85      488d05940700.  lea rax, sym.base32_length_wrapper      ; 0x2520
0x00001d8c      4889055d9320.  mov qword [obj.base_length], rax        ; [0x20b0f0:8]=0
0x00001d93      488d05a60700.  lea rax, sym.isbase32hex                ; 0x2540
0x00001d9a      488905479320.  mov qword [obj.isbase], rax             ; [0x20b0e8:8]=0
0x00001da1      488d05680f00.  lea rax, sym.base32hex_encode           ; 0x2d10 ; "USH\x89\xcdH\x89\xd3H\x83\xec\b\xe8\xef\b"
0x00001da8      488905319320.  mov qword [obj.base_encode], rax        ; [0x20b0e0:8]=0
0x00001daf      488d056a0a00.  lea rax, sym.base32hex_decode_ctx_init_wrapper ; 0x2820 ; "SH\x89\xfbH\x8d\x7f\x04\xe8\xb3\x10"
0x00001db6      4889051b9320.  mov qword [obj.base_decode_ctx_init], rax ; [0x20b0d8:8]=0
0x00001dbd      488d05bc1000.  lea rax, sym.base32hex_decode_ctx_wrapper ; 0x2e80 ; "USH\x89\xf5H\x89\xfbH\x83\xec(H;W\x18H\x8bG\x10wzH\x85\xd2tWE1\xc9L\x8d\x1d\xbbN"
0x00001dc4      488905059320.  mov qword [obj.base_decode_ctx], rax    ; [0x20b0d0:8]=0
0x00001dcb      e9e1fcffff     jmp 0x1ab1
0x00001dd0      488d05490700.  lea rax, sym.base32_length_wrapper      ; 0x2520
0x00001dd7      488905129320.  mov qword [obj.base_length], rax        ; [0x20b0f0:8]=0
0x00001dde      488d05db1a00.  lea rax, sym.isbase32                   ; 0x38c0 ; "H\x8d\x059E"
0x00001de5      488905fc9220.  mov qword [obj.isbase], rax             ; [0x20b0e8:8]=0
0x00001dec      488d051d1800.  lea rax, sym.base32_encode              ; 0x3610 ; "L\x8d\x05\xc9G"
0x00001df3      488905e69220.  mov qword [obj.base_encode], rax        ; [0x20b0e0:8]=0
0x00001dfa      488d054f0a00.  lea rax, sym.base32_decode_ctx_init_wrapper ; 0x2850 ; "H\x83\xc7\x04\xe9\x87\x10"
0x00001e01      488905d09220.  mov qword [obj.base_decode_ctx_init], rax ; [0x20b0d8:8]=0
0x00001e08      488d05f10900.  lea rax, sym.base32_decode_ctx_wrapper  ; 0x2800 ; "SH\x89\xfbH\x8d\x7f\x04\xe8\xe3\x10"
0x00001e0f      488905ba9220.  mov qword [obj.base_decode_ctx], rax    ; [0x20b0d0:8]=0
0x00001e16      e996fcffff     jmp 0x1ab1
0x00001e1b      488d055e0700.  lea rax, sym.base16_length              ; 0x2580
0x00001e22      488905c79220.  mov qword [obj.base_length], rax        ; [0x20b0f0:8]=0
0x00001e29      488d05300700.  lea rax, sym.isbase16                   ; 0x2560
0x00001e30      488905b19220.  mov qword [obj.isbase], rax             ; [0x20b0e8:8]=0
0x00001e37      488d05520700.  lea rax, sym.base16_encode              ; 0x2590 ; "H\x85\xf6t6L\x8d\x05\xa4W"
0x00001e3e      4889059b9220.  mov qword [obj.base_encode], rax        ; [0x20b0e0:8]=0
0x00001e45      488d05340900.  lea rax, sym.base16_decode_ctx_init     ; 0x2780 ; "SH\x89\xfbH\xc7G\x18"
0x00001e4c      488905859220.  mov qword [obj.base_decode_ctx_init], rax ; [0x20b0d8:8]=0
0x00001e53      488d05660a00.  lea rax, sym.base16_decode_ctx          ; 0x28c0 ; "H\x85\xd2I\xc7"
0x00001e5a      4889056f9220.  mov qword [obj.base_decode_ctx], rax    ; [0x20b0d0:8]=0
0x00001e61      e94bfcffff     jmp 0x1ab1
0x00001e66      662e0f1f8400.  nop word cs:[rax + rax]
0x00001e70      4983c601       add r14, 1
0x00001e74      e987fdffff     jmp 0x1c00
0x00001e79      0f1f80000000.  nop dword [rax]
0x00001e80      488b6c2408     mov rbp, qword [rsp + 8]
0x00001e85      8b4500         mov eax, dword [rbp]
0x00001e88      4531ff         xor r15d, r15d
0x00001e8b      48895c2408     mov qword [rsp + 8], rbx
0x00001e90      4c8b6c2430     mov r13, qword [rsp + 0x30]
0x00001e95      4489fb         mov ebx, r15d
0x00001e98      4c8b7c2428     mov r15, qword [rsp + 0x28]
0x00001e9d      eb62           jmp 0x1f01
0x00001e9f      90             nop
0x00001ea0      85db           test ebx, ebx
0x00001ea2      0f85d8fcffff   jne 0x1b80
0x00001ea8      488b05219220.  mov rax, qword [obj.base_decode_ctx]    ; [0x20b0d0:8]=0
0x00001eaf      488b542408     mov rdx, qword [rsp + 8]
0x00001eb4      48c744244800.  mov qword [rsp + 0x48], 0x1400          ; [0x1400:8]=0x20af58 reloc.fwrite_unlocked
0x00001ebd      4c8b442418     mov r8, qword [rsp + 0x18]
0x00001ec2      4c89e9         mov rcx, r13
0x00001ec5      4c89e6         mov rsi, r12
0x00001ec8      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00001ecd      ffd0           call rax
0x00001ecf      488b542448     mov rdx, qword [rsp + 0x48]
0x00001ed4      4c89f9         mov rcx, r15
0x00001ed7      be01000000     mov esi, 1
0x00001edc      4c89ef         mov rdi, r13
0x00001edf      4189c6         mov r14d, eax
0x00001ee2      e8d9f8ffff     call sym.imp.fwrite_unlocked
0x00001ee7      483b442448     cmp rax, qword [rsp + 0x48]
0x00001eec      0f8293030000   jb 0x2285
0x00001ef2      4584f6         test r14b, r14b
0x00001ef5      0f8466030000   je 0x2261
0x00001efb      8b4500         mov eax, dword [rbp]
0x00001efe      83c301         add ebx, 1
0x00001f01      a810           test al, 0x10
0x00001f03      749b           je 0x1ea0
0x00001f05      83fb01         cmp ebx, 1
0x00001f08      7730           ja 0x1f3a
0x00001f0a      759c           jne 0x1ea8
0x00001f0c      8b442450       mov eax, dword [rsp + 0x50]
0x00001f10      85c0           test eax, eax
0x00001f12      7426           je 0x1f3a
0x00001f14      48c744244800.  mov qword [rsp + 0x48], 0x1400          ; [0x1400:8]=0x20af58 reloc.fwrite_unlocked
0x00001f1d      488b05ac9120.  mov rax, qword [obj.base_decode_ctx]    ; [0x20b0d0:8]=0
0x00001f24      31d2           xor edx, edx
0x00001f26      eb95           jmp 0x1ebd
0x00001f28      0f1f84000000.  nop dword [rax + rax]
0x00001f30      488b6c2408     mov rbp, qword [rsp + 8]
0x00001f35      e94effffff     jmp 0x1e88
0x00001f3a      4889ef         mov rdi, rbp
0x00001f3d      e85e500000     call sym.rpl_fclose
0x00001f42      83c001         add eax, 1
0x00001f45      0f8486020000   je 0x21d1
0x00001f4b      31c0           xor eax, eax
0x00001f4d      488b4c2478     mov rcx, qword [rsp + 0x78]
0x00001f52      6448330c2528.  xor rcx, qword fs:[0x28]
0x00001f5b      0f8541040000   jne 0x23a2
0x00001f61      4881c4880000.  add rsp, 0x88
0x00001f68      5b             pop rbx
0x00001f69      5d             pop rbp
0x00001f6a      415c           pop r12
0x00001f6c      415d           pop r13
0x00001f6e      415e           pop r14
0x00001f70      415f           pop r15
0x00001f72      c3             ret
0x00001f73      488d05106100.  lea rax, [0x0000808a]                   ; "-"
0x00001f7a      4889442438     mov qword [rsp + 0x38], rax
0x00001f7f      488b2d0a9120.  mov rbp, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20b090:8]=0
0x00001f86      e97ffbffff     jmp 0x1b0a
0x00001f8b      bf00780000     mov edi, 0x7800                         ; "f       bit string with most significant bit (msb) first\n"
0x00001f90      4c8b25f19020.  mov r12, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00001f97      31db           xor ebx, ebx
0x00001f99      e822480000     call sym.xmalloc
0x00001f9e      bf00780000     mov edi, 0x7800                         ; "f       bit string with most significant bit (msb) first\n"
0x00001fa3      4889442410     mov qword [rsp + 0x10], rax
0x00001fa8      ff1542912000   call qword [obj.base_length]            ; [0x20b0f0:8]=0
0x00001fae      4863f8         movsxd rdi, eax
0x00001fb1      e80a480000     call sym.xmalloc
0x00001fb6      4c896c2418     mov qword [rsp + 0x18], r13
0x00001fbb      4889442408     mov qword [rsp + 8], rax
0x00001fc0      4531ff         xor r15d, r15d
0x00001fc3      4c8b6c2410     mov r13, qword [rsp + 0x10]
0x00001fc8      eb0f           jmp 0x1fd9
0x00001fca      660f1f440000   nop word [rax + rax]
0x00001fd0      4981ffff7700.  cmp r15, 0x77ff
0x00001fd7      772d           ja 0x2006
0x00001fd9      4b8d7c3d00     lea rdi, [r13 + r15]
0x00001fde      ba00780000     mov edx, 0x7800                         ; "f       bit string with most significant bit (msb) first\n"
0x00001fe3      4889e9         mov rcx, rbp
0x00001fe6      4c29fa         sub rdx, r15
0x00001fe9      be01000000     mov esi, 1
0x00001fee      e8fdf5ffff     call sym.imp.fread_unlocked
0x00001ff3      4901c7         add r15, rax
0x00001ff6      8b4500         mov eax, dword [rbp]
0x00001ff9      a830           test al, 0x30
0x00001ffb      74d3           je 0x1fd0
0x00001ffd      4d85ff         test r15, r15
0x00002000      0f84ba000000   je 0x20c0
0x00002006      4c8b2dd39020.  mov r13, qword [obj.base_encode]        ; [0x20b0e0:8]=0
0x0000200d      4489ff         mov edi, r15d
0x00002010      ff15da902000   call qword [obj.base_length]            ; [0x20b0f0:8]=0
0x00002016      488b542408     mov rdx, qword [rsp + 8]
0x0000201b      4863c8         movsxd rcx, eax
0x0000201e      4c89fe         mov rsi, r15
0x00002021      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002026      41ffd5         call r13
0x00002029      4489ff         mov edi, r15d
0x0000202c      ff15be902000   call qword [obj.base_length]            ; [0x20b0f0:8]=0
0x00002032      48837c241800   cmp qword [rsp + 0x18], 0
0x00002038      4c63e8         movsxd r13, eax
0x0000203b      0f8400010000   je 0x2141
0x00002041      4531f6         xor r14d, r14d
0x00002044      4d85ed         test r13, r13
0x00002047      7463           je 0x20ac
0x00002049      48896c2420     mov qword [rsp + 0x20], rbp
0x0000204e      4889dd         mov rbp, rbx
0x00002051      488b5c2418     mov rbx, qword [rsp + 0x18]
0x00002056      4c897c2428     mov qword [rsp + 0x28], r15
0x0000205b      4d89ef         mov r15, r13
0x0000205e      6690           nop
0x00002060      4989dd         mov r13, rbx
0x00002063      4c89f8         mov rax, r15
0x00002066      4929ed         sub r13, rbp
0x00002069      4c29f0         sub rax, r14
0x0000206c      4939c5         cmp r13, rax
0x0000206f      4c0f47e8       cmova r13, rax
0x00002073      4d85ed         test r13, r13
0x00002076      0f8594000000   jne 0x2110
0x0000207c      498b442428     mov rax, qword [r12 + 0x28]
0x00002081      493b442430     cmp rax, qword [r12 + 0x30]
0x00002086      0f8303010000   jae 0x218f
0x0000208c      488d5001       lea rdx, [rax + 1]
0x00002090      4989542428     mov qword [r12 + 0x28], rdx
0x00002095      c6000a         mov byte [rax], 0xa
0x00002098      31ed           xor ebp, ebp
0x0000209a      4d39f7         cmp r15, r14
0x0000209d      77c1           ja 0x2060
0x0000209f      4889eb         mov rbx, rbp
0x000020a2      4c8b7c2428     mov r15, qword [rsp + 0x28]
0x000020a7      488b6c2420     mov rbp, qword [rsp + 0x20]
0x000020ac      8b4500         mov eax, dword [rbp]
0x000020af      a830           test al, 0x30
0x000020b1      750d           jne 0x20c0
0x000020b3      4981ff007800.  cmp r15, 0x7800                         ; "f       bit string with most significant bit (msb) first\n"
0x000020ba      0f8400ffffff   je 0x1fc0
0x000020c0      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x000020c5      4d85ed         test r13, r13
0x000020c8      7409           je 0x20d3
0x000020ca      4885db         test rbx, rbx
0x000020cd      0f8541010000   jne 0x2214
0x000020d3      a820           test al, 0x20                           ; "@"
0x000020d5      0f845ffeffff   je 0x1f3a
0x000020db      488d35b15300.  lea rsi, str.read_error                 ; 0x7493 ; "read error"
0x000020e2      ba05000000     mov edx, 5
0x000020e7      31ff           xor edi, edi
0x000020e9      e842f5ffff     call sym.imp.dcgettext
0x000020ee      4889c3         mov rbx, rax
0x000020f1      e8baf4ffff     call sym.imp.__errno_location
0x000020f6      8b30           mov esi, dword [rax]
0x000020f8      4889da         mov rdx, rbx
0x000020fb      bf01000000     mov edi, 1
0x00002100      31c0           xor eax, eax
0x00002102      e809f7ffff     call sym.imp.error
0x00002107      660f1f840000.  nop word [rax + rax]
0x00002110      488b442408     mov rax, qword [rsp + 8]
0x00002115      488b0d6c8f20.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x0000211c      4c89ea         mov rdx, r13
0x0000211f      be01000000     mov esi, 1
0x00002124      4a8d3c30       lea rdi, [rax + r14]
0x00002128      e893f6ffff     call sym.imp.fwrite_unlocked
0x0000212d      4939c5         cmp r13, rax
0x00002130      0f87d4010000   ja 0x230a
0x00002136      4c01ed         add rbp, r13
0x00002139      4d01ee         add r14, r13
0x0000213c      e959ffffff     jmp 0x209a
0x00002141      488b0d408f20.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002148      488b7c2408     mov rdi, qword [rsp + 8]
0x0000214d      4c89ea         mov rdx, r13
0x00002150      be01000000     mov esi, 1
0x00002155      e866f6ffff     call sym.imp.fwrite_unlocked
0x0000215a      4939c5         cmp r13, rax
0x0000215d      0f8649ffffff   jbe 0x20ac
0x00002163      488d35345300.  lea rsi, str.write_error                ; 0x749e ; "write error"
0x0000216a      ba05000000     mov edx, 5
0x0000216f      31ff           xor edi, edi
0x00002171      e8baf4ffff     call sym.imp.dcgettext
0x00002176      4889c3         mov rbx, rax
0x00002179      e832f4ffff     call sym.imp.__errno_location
0x0000217e      8b30           mov esi, dword [rax]
0x00002180      4889da         mov rdx, rbx
0x00002183      bf01000000     mov edi, 1
0x00002188      31c0           xor eax, eax
0x0000218a      e881f6ffff     call sym.imp.error
0x0000218f      be0a000000     mov esi, 0xa
0x00002194      4c89e7         mov rdi, r12
0x00002197      e804f5ffff     call sym.imp.__overflow
0x0000219c      83c001         add eax, 1
0x0000219f      0f85f3feffff   jne 0x2098
0x000021a5      488d35f25200.  lea rsi, str.write_error                ; 0x749e ; "write error"
0x000021ac      ba05000000     mov edx, 5
0x000021b1      31ff           xor edi, edi
0x000021b3      e878f4ffff     call sym.imp.dcgettext
0x000021b8      4889c3         mov rbx, rax
0x000021bb      e8f0f3ffff     call sym.imp.__errno_location
0x000021c0      8b30           mov esi, dword [rax]
0x000021c2      4889da         mov rdx, rbx
0x000021c5      bf01000000     mov edi, 1
0x000021ca      31c0           xor eax, eax
0x000021cc      e83ff6ffff     call sym.imp.error
0x000021d1      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000021d6      488d35ad5e00.  lea rsi, [0x0000808a]                   ; "-"
0x000021dd      e86ef5ffff     call sym.imp.strcmp
0x000021e2      89c5           mov ebp, eax
0x000021e4      e8c7f3ffff     call sym.imp.__errno_location
0x000021e9      85ed           test ebp, ebp
0x000021eb      4889c3         mov rbx, rax
0x000021ee      7548           jne 0x2238
0x000021f0      488d35c15200.  lea rsi, str.closing_standard_input     ; 0x74b8 ; "closing standard input"
0x000021f7      ba05000000     mov edx, 5
0x000021fc      31ff           xor edi, edi
0x000021fe      e82df4ffff     call sym.imp.dcgettext
0x00002203      8b33           mov esi, dword [rbx]
0x00002205      4889c2         mov rdx, rax
0x00002208      bf01000000     mov edi, 1
0x0000220d      31c0           xor eax, eax
0x0000220f      e8fcf5ffff     call sym.imp.error
0x00002214      498b442428     mov rax, qword [r12 + 0x28]
0x00002219      493b442430     cmp rax, qword [r12 + 0x30]
0x0000221e      0f8383010000   jae 0x23a7
0x00002224      488d5001       lea rdx, [rax + 1]
0x00002228      4989542428     mov qword [r12 + 0x28], rdx
0x0000222d      c6000a         mov byte [rax], 0xa
0x00002230      8b4500         mov eax, dword [rbp]
0x00002233      e99bfeffff     jmp 0x20d3
0x00002238      488b542438     mov rdx, qword [rsp + 0x38]
0x0000223d      be03000000     mov esi, 3
0x00002242      31ff           xor edi, edi
0x00002244      e8673d0000     call sym.quotearg_n_style_colon
0x00002249      8b33           mov esi, dword [rbx]
0x0000224b      488d15f25d00.  lea rdx, [0x00008044]                   ; "%s"
0x00002252      4889c1         mov rcx, rax
0x00002255      bf01000000     mov edi, 1
0x0000225a      31c0           xor eax, eax
0x0000225c      e8aff5ffff     call sym.imp.error
0x00002261      488d35425200.  lea rsi, str.invalid_input              ; 0x74aa ; "invalid input"
0x00002268      ba05000000     mov edx, 5
0x0000226d      31ff           xor edi, edi
0x0000226f      e8bcf3ffff     call sym.imp.dcgettext
0x00002274      31f6           xor esi, esi
0x00002276      4889c2         mov rdx, rax
0x00002279      bf01000000     mov edi, 1
0x0000227e      31c0           xor eax, eax
0x00002280      e88bf5ffff     call sym.imp.error
0x00002285      488d35125200.  lea rsi, str.write_error                ; 0x749e ; "write error"
0x0000228c      ba05000000     mov edx, 5
0x00002291      31ff           xor edi, edi
0x00002293      e898f3ffff     call sym.imp.dcgettext
0x00002298      4889c3         mov rbx, rax
0x0000229b      e810f3ffff     call sym.imp.__errno_location
0x000022a0      8b30           mov esi, dword [rax]
0x000022a2      4889da         mov rdx, rbx
0x000022a5      bf01000000     mov edi, 1
0x000022aa      31c0           xor eax, eax
0x000022ac      e85ff5ffff     call sym.imp.error
0x000022b1      488d35db5100.  lea rsi, str.read_error                 ; 0x7493 ; "read error"
0x000022b8      ba05000000     mov edx, 5
0x000022bd      31ff           xor edi, edi
0x000022bf      e86cf3ffff     call sym.imp.dcgettext
0x000022c4      4889c3         mov rbx, rax
0x000022c7      e8e4f2ffff     call sym.imp.__errno_location
0x000022cc      8b30           mov esi, dword [rax]
0x000022ce      4889da         mov rdx, rbx
0x000022d1      bf01000000     mov edi, 1
0x000022d6      31c0           xor eax, eax
0x000022d8      e833f5ffff     call sym.imp.error
0x000022dd      31ff           xor edi, edi
0x000022df      e87c0c0000     call sym.usage
0x000022e4      488d357e5100.  lea rsi, str.missing_encoding_type      ; 0x7469 ; "missing encoding type"
0x000022eb      31ff           xor edi, edi
0x000022ed      ba05000000     mov edx, 5
0x000022f2      e839f3ffff     call sym.imp.dcgettext
0x000022f7      31f6           xor esi, esi
0x000022f9      4889c2         mov rdx, rax
0x000022fc      31ff           xor edi, edi
0x000022fe      31c0           xor eax, eax
0x00002300      e80bf5ffff     call sym.imp.error
0x00002305      e977f6ffff     jmp 0x1981
0x0000230a      488d358d5100.  lea rsi, str.write_error                ; 0x749e ; "write error"
0x00002311      ba05000000     mov edx, 5
0x00002316      31ff           xor edi, edi
0x00002318      e813f3ffff     call sym.imp.dcgettext
0x0000231d      4889c3         mov rbx, rax
0x00002320      e88bf2ffff     call sym.imp.__errno_location
0x00002325      8b30           mov esi, dword [rax]
0x00002327      4889da         mov rdx, rbx
0x0000232a      bf01000000     mov edi, 1
0x0000232f      31c0           xor eax, eax
0x00002331      e8daf4ffff     call sym.imp.error
0x00002336      488b542438     mov rdx, qword [rsp + 0x38]
0x0000233b      be03000000     mov esi, 3
0x00002340      31ff           xor edi, edi
0x00002342      e8693c0000     call sym.quotearg_n_style_colon
0x00002347      4889c3         mov rbx, rax
0x0000234a      e861f2ffff     call sym.imp.__errno_location
0x0000234f      8b30           mov esi, dword [rax]
0x00002351      488d15ec5c00.  lea rdx, [0x00008044]                   ; "%s"
0x00002358      4889d9         mov rcx, rbx
0x0000235b      bf01000000     mov edi, 1
0x00002360      31c0           xor eax, eax
0x00002362      e8a9f4ffff     call sym.imp.error
0x00002367      488b7cc308     mov rdi, qword [rbx + rax*8 + 8]
0x0000236c      e80f3e0000     call sym.quote
0x00002371      488d35075100.  lea rsi, str.extra_operand__s           ; 0x747f ; "extra operand %s"
0x00002378      4889c3         mov rbx, rax
0x0000237b      ba05000000     mov edx, 5
0x00002380      31ff           xor edi, edi
0x00002382      e8a9f2ffff     call sym.imp.dcgettext
0x00002387      31ff           xor edi, edi
0x00002389      4889c2         mov rdx, rax
0x0000238c      4889d9         mov rcx, rbx
0x0000238f      31f6           xor esi, esi
0x00002391      31c0           xor eax, eax
0x00002393      e878f4ffff     call sym.imp.error
0x00002398      bf01000000     mov edi, 1
0x0000239d      e8be0b0000     call sym.usage
0x000023a2      e8b9f2ffff     call sym.imp.__stack_chk_fail
0x000023a7      be0a000000     mov esi, 0xa
0x000023ac      4c89e7         mov rdi, r12
0x000023af      e8ecf2ffff     call sym.imp.__overflow
0x000023b4      83c001         add eax, 1
0x000023b7      0f8573feffff   jne 0x2230
0x000023bd      488d35da5000.  lea rsi, str.write_error                ; 0x749e ; "write error"
0x000023c4      ba05000000     mov edx, 5
0x000023c9      31ff           xor edi, edi
0x000023cb      e860f2ffff     call sym.imp.dcgettext
0x000023d0      4889c3         mov rbx, rax
0x000023d3      e8d8f1ffff     call sym.imp.__errno_location
0x000023d8      8b30           mov esi, dword [rax]
0x000023da      4889da         mov rdx, rbx
0x000023dd      bf01000000     mov edi, 1
0x000023e2      31c0           xor eax, eax
0x000023e4      e827f4ffff     call sym.imp.error
0x000023e9      0f1f80000000.  nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x000023f0      31ed           xor ebp, ebp
0x000023f2      4989d1         mov r9, rdx
0x000023f5      5e             pop rsi
0x000023f6      4889e2         mov rdx, rsp
0x000023f9      4883e4f0       and rsp, 0xfffffffffffffff0
0x000023fd      50             push rax
0x000023fe      54             push rsp
0x000023ff      4c8d05da4e00.  lea r8, sym.__libc_csu_fini             ; 0x72e0
0x00002406      488d0d634e00.  lea rcx, sym.__libc_csu_init            ; 0x7270 ; "AWAVI\x89\xd7AUATL\x8d%\x8e7 "
0x0000240d      488d3dacf4ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x18c0 ; "AWAVE1\xf6AUATA\xbdL"
0x00002414      ff15be8b2000   call qword [reloc.__libc_start_main]    ; [0x20afd8:8]=0
0x0000241a      f4             hlt
0x0000241b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002420      488d3d598c20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x00002427      55             push rbp
0x00002428      488d05518c20.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x0000242f      4839f8         cmp rax, rdi
0x00002432      4889e5         mov rbp, rsp
0x00002435      7419           je 0x2450
0x00002437      488b05928b20.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20afd0:8]=0
0x0000243e      4885c0         test rax, rax
0x00002441      740d           je 0x2450
0x00002443      5d             pop rbp
0x00002444      ffe0           jmp rax
0x00002446      662e0f1f8400.  nop word cs:[rax + rax]
0x00002450      5d             pop rbp
0x00002451      c3             ret
0x00002452      0f1f4000       nop dword [rax]
0x00002456      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002460      488d3d198c20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x00002467      488d35128c20.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x0000246e      55             push rbp
0x0000246f      4829fe         sub rsi, rdi
0x00002472      4889e5         mov rbp, rsp
0x00002475      48c1fe03       sar rsi, 3
0x00002479      4889f0         mov rax, rsi
0x0000247c      48c1e83f       shr rax, 0x3f
0x00002480      4801c6         add rsi, rax
0x00002483      48d1fe         sar rsi, 1
0x00002486      7418           je 0x24a0
0x00002488      488b05598b20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20afe8:8]=0
0x0000248f      4885c0         test rax, rax
0x00002492      740c           je 0x24a0
0x00002494      5d             pop rbp
0x00002495      ffe0           jmp rax
0x00002497      660f1f840000.  nop word [rax + rax]
0x000024a0      5d             pop rbp
0x000024a1      c3             ret
0x000024a2      0f1f4000       nop dword [rax]
0x000024a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x000024b0      803d118c2000.  cmp byte [obj.completed.7697], 0        ; [0x20b0c8:1]=0
0x000024b7      752f           jne 0x24e8
0x000024b9      48833d2f8b20.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20aff0:8]=0
0x000024c1      55             push rbp
0x000024c2      4889e5         mov rbp, rsp
0x000024c5      740c           je 0x24d3
0x000024c7      488b3d3a8b20.  mov rdi, qword [obj.__dso_handle]       ; [0x20b008:8]=0x20b008 obj.__dso_handle
0x000024ce      e8ddf3ffff     call sym..plt.got
0x000024d3      e848ffffff     call sym.deregister_tm_clones
0x000024d8      c605e98b2000.  mov byte [obj.completed.7697], 1        ; [0x20b0c8:1]=0
0x000024df      5d             pop rbp
0x000024e0      c3             ret
0x000024e1      0f1f80000000.  nop dword [rax]
0x000024e8      f3c3           ret
0x000024ea      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x000024f0      55             push rbp
0x000024f1      4889e5         mov rbp, rsp
0x000024f4      5d             pop rbp
0x000024f5      e966ffffff     jmp sym.register_tm_clones
0x000024fa      660f1f440000   nop word [rax + rax]
;-- base64_length_wrapper:
0x00002500      83c702         add edi, 2                              ; /src:267
0x00002503      ba56555555     mov edx, 0x55555556                     ; 'VUUU'
0x00002508      89f8           mov eax, edi
0x0000250a      c1ff1f         sar edi, 0x1f
0x0000250d      f7ea           imul edx
0x0000250f      29fa           sub edx, edi
0x00002511      8d0495000000.  lea eax, [rdx*4]
0x00002518      c3             ret                                     ; /src:269
0x00002519      0f1f80000000.  nop dword [rax]
;-- base32_length_wrapper:
0x00002520      83c704         add edi, 4
0x00002523      ba67666666     mov edx, 0x66666667                     ; 'gfff'
0x00002528      89f8           mov eax, edi
0x0000252a      c1ff1f         sar edi, 0x1f
0x0000252d      f7ea           imul edx
0x0000252f      d1fa           sar edx, 1
0x00002531      29fa           sub edx, edi
0x00002533      8d04d5000000.  lea eax, [rdx*8]
0x0000253a      c3             ret
0x0000253b      0f1f440000     nop dword [rax + rax]                   ; /src:309
;-- isbase32hex:
0x00002540      8d47d0         lea eax, [rdi - 0x30]
0x00002543      3c09           cmp al, 9
0x00002545      0f96c0         setbe al
0x00002548      83ef41         sub edi, 0x41
0x0000254b      4080ff15       cmp dil, 0x15
0x0000254f      0f96c2         setbe dl
0x00002552      09d0           or eax, edx
0x00002554      c3             ret
0x00002555      90             nop
0x00002556      662e0f1f8400.  nop word cs:[rax + rax]
;-- isbase16:
0x00002560      8d47d0         lea eax, [rdi - 0x30]
0x00002563      3c09           cmp al, 9
0x00002565      0f96c0         setbe al
0x00002568      83ef41         sub edi, 0x41
0x0000256b      4080ff05       cmp dil, 5
0x0000256f      0f96c2         setbe dl
0x00002572      09d0           or eax, edx
0x00002574      c3             ret
0x00002575      90             nop
0x00002576      662e0f1f8400.  nop word cs:[rax + rax]
;-- base16_length:
0x00002580      8d043f         lea eax, [rdi + rdi]
0x00002583      c3             ret
0x00002584      6690           nop
0x00002586      662e0f1f8400.  nop word cs:[rax + rax]
;-- base16_encode:
0x00002590      4885f6         test rsi, rsi
0x00002593      7436           je 0x25cb
0x00002595      4c8d05a45700.  lea r8, obj.base16                      ; 0x7d40 ; "0123456789ABCDEF"
0x0000259c      4801fe         add rsi, rdi
0x0000259f      90             nop                                     ; /src:382
0x000025a0      0fb607         movzx eax, byte [rdi]
0x000025a3      4883c701       add rdi, 1
0x000025a7      4883c202       add rdx, 2
0x000025ab      89c1           mov ecx, eax
0x000025ad      83e00f         and eax, 0xf                            ; /src:383
0x000025b0      c0e904         shr cl, 4                               ; /src:380
0x000025b3      410fb60400     movzx eax, byte [r8 + rax]
0x000025b8      83e10f         and ecx, 0xf
0x000025bb      410fb60c08     movzx ecx, byte [r8 + rcx]
0x000025c0      884afe         mov byte [rdx - 2], cl                  ; /src:326
0x000025c3      4839f7         cmp rdi, rsi
0x000025c6      8842ff         mov byte [rdx - 1], al
0x000025c9      75d5           jne 0x25a0
0x000025cb      f3c3           ret
0x000025cd      0f1f00         nop dword [rax]
;-- z85_length:
0x000025d0      8d14bf         lea edx, [rdi + rdi*4]
0x000025d3      8d4203         lea eax, [rdx + 3]
0x000025d6      85d2           test edx, edx
0x000025d8      0f49c2         cmovns eax, edx
0x000025db      c1f802         sar eax, 2
0x000025de      c3             ret
0x000025df      90             nop
;-- isbase2:
0x000025e0      83ef30         sub edi, 0x30
0x000025e3      4080ff01       cmp dil, 1
0x000025e7      0f96c0         setbe al
0x000025ea      c3             ret
0x000025eb      0f1f440000     nop dword [rax + rax]
;-- base2_length:
0x000025f0      8d04fd000000.  lea eax, [rdi*8]
0x000025f7      c3             ret
0x000025f8      0f1f84000000.  nop dword [rax + rax]
;-- base2msbf_encode:
0x00002600      4885f6         test rsi, rsi
0x00002603      743d           je 0x2642
0x00002605      4c8d0437       lea r8, [rdi + rsi]
0x00002609      0f1f80000000.  nop dword [rax]
0x00002610      0fb60f         movzx ecx, byte [rdi]                   ; /src:549
0x00002613      488d7208       lea rsi, [rdx + 8]                      ; /src:551
0x00002617      660f1f840000.  nop word [rax + rax]
0x00002620      89c8           mov eax, ecx
0x00002622      4883c201       add rdx, 1
0x00002626      01c9           add ecx, ecx
0x00002628      c0e807         shr al, 7
0x0000262b      83c030         add eax, 0x30
0x0000262e      4839d6         cmp rsi, rdx
0x00002631      8842ff         mov byte [rdx - 1], al
0x00002634      75ea           jne 0x2620
0x00002636      4883c701       add rdi, 1
0x0000263a      4889f2         mov rdx, rsi
0x0000263d      4939f8         cmp r8, rdi
0x00002640      75ce           jne 0x2610
0x00002642      f3c3           ret                                     ; /src:566
0x00002644      6690           nop
0x00002646      662e0f1f8400.  nop word cs:[rax + rax]
;-- base2lsbf_encode:
0x00002650      4885f6         test rsi, rsi
0x00002653      743d           je 0x2692
0x00002655      4c8d0437       lea r8, [rdi + rsi]
0x00002659      0f1f80000000.  nop dword [rax]
0x00002660      0fb60f         movzx ecx, byte [rdi]                   ; /src:567
0x00002663      488d7208       lea rsi, [rdx + 8]                      ; /src:569
0x00002667      660f1f840000.  nop word [rax + rax]
0x00002670      89c8           mov eax, ecx
0x00002672      4883c201       add rdx, 1
0x00002676      d0e9           shr cl, 1
0x00002678      83e001         and eax, 1
0x0000267b      83c030         add eax, 0x30
0x0000267e      4839d6         cmp rsi, rdx
0x00002681      8842ff         mov byte [rdx - 1], al
0x00002684      75ea           jne 0x2670
0x00002686      4883c701       add rdi, 1
0x0000268a      4889f2         mov rdx, rsi
0x0000268d      4939f8         cmp r8, rdi
0x00002690      75ce           jne 0x2660                              ; /src:67
0x00002692      f3c3           ret
0x00002694      6690           nop
0x00002696      662e0f1f8400.  nop word cs:[rax + rax]
;-- isbase64url:
0x000026a0      4080ff2d       cmp dil, 0x2d
0x000026a4      0f94c0         sete al
0x000026a7      4080ff5f       cmp dil, 0x5f
0x000026ab      0f94c2         sete dl
0x000026ae      08d0           or al, dl
0x000026b0      7516           jne 0x26c8
0x000026b2      89fa           mov edx, edi                            ; /src:49
0x000026b4      83e2fb         and edx, 0xfffffffb                     ; 4294967291
0x000026b7      80fa2b         cmp dl, 0x2b
0x000026ba      740c           je 0x26c8
0x000026bc      400fbeff       movsx edi, dil
0x000026c0      e9fb180000     jmp sym.isbase64
0x000026c5      0f1f00         nop dword [rax]
0x000026c8      f3c3           ret
0x000026ca      660f1f440000   nop word [rax + rax]
;-- base64url_encode:
0x000026d0      55             push rbp
0x000026d1      53             push rbx
0x000026d2      4889cd         mov rbp, rcx                            ; /src:57
0x000026d5      4889d3         mov rbx, rdx
0x000026d8      4883ec08       sub rsp, 8
0x000026dc      e88f160000     call sym.base64_encode
0x000026e1      4885ed         test rbp, rbp
0x000026e4      742d           je 0x2713
0x000026e6      488d0c2b       lea rcx, [rbx + rbp]
0x000026ea      eb14           jmp 0x2700
0x000026ec      0f1f4000       nop dword [rax]                         ; /src:59
0x000026f0      3c2f           cmp al, 0x2f                            ; /src:53
0x000026f2      7503           jne 0x26f7
0x000026f4      c6035f         mov byte [rbx], 0x5f                    ; '_'
                                                                       ; [0x5f:1]=0
0x000026f7      4883c301       add rbx, 1
0x000026fb      4839cb         cmp rbx, rcx
0x000026fe      7413           je 0x2713
0x00002700      0fb603         movzx eax, byte [rbx]
0x00002703      3c2b           cmp al, 0x2b                            ; /src:399
0x00002705      75e9           jne 0x26f0
0x00002707      c6032d         mov byte [rbx], 0x2d                    ; '-'
                                                                       ; [0x2d:1]=0
0x0000270a      4883c301       add rbx, 1
0x0000270e      4839cb         cmp rbx, rcx                            ; .//ib:-41
0x00002711      75ed           jne 0x2700
0x00002713      4883c408       add rsp, 8
0x00002717      5b             pop rbx
0x00002718      5d             pop rbp                                 ; /src:402
0x00002719      c3             ret
0x0000271a      660f1f440000   nop word [rax + rax]
;-- z85_decode_ctx_init:
0x00002720      53             push rbx
0x00002721      4889fb         mov rbx, rdi
0x00002724      48c747180014.  mov qword [rdi + 0x18], 0x1400          ; [0x1400:8]=0x20af58 reloc.fwrite_unlocked
0x0000272c      bf00140000     mov edi, 0x1400
0x00002731      e88a400000     call sym.xmalloc
0x00002736      48c703010000.  mov qword [rbx], 1                      ; /src:31
0x0000273d      48894310       mov qword [rbx + 0x10], rax
0x00002741      5b             pop rbx
0x00002742      c3             ret
0x00002743      0f1f00         nop dword [rax]
0x00002746      662e0f1f8400.  nop word cs:[rax + rax]
;-- base2_decode_ctx_init:
0x00002750      53             push rbx
0x00002751      4889fb         mov rbx, rdi
0x00002754      48c747180014.  mov qword [rdi + 0x18], 0x1400          ; [0x1400:8]=0x20af58 reloc.fwrite_unlocked
0x0000275c      bf00140000     mov edi, 0x1400
0x00002761      e85a400000     call sym.xmalloc
0x00002766      48c703000000.  mov qword [rbx], 0
0x0000276d      48894310       mov qword [rbx + 0x10], rax
0x00002771      5b             pop rbx
0x00002772      c3             ret
0x00002773      0f1f00         nop dword [rax]
0x00002776      662e0f1f8400.  nop word cs:[rax + rax]
;-- base16_decode_ctx_init:
0x00002780      53             push rbx                                ; /src:264
0x00002781      4889fb         mov rbx, rdi
0x00002784      48c747180014.  mov qword [rdi + 0x18], 0x1400          ; [0x1400:8]=0x20af58 reloc.fwrite_unlocked
0x0000278c      bf00140000     mov edi, 0x1400
0x00002791      e82a400000     call sym.xmalloc
0x00002796      c6430500       mov byte [rbx + 5], 0
0x0000279a      48894310       mov qword [rbx + 0x10], rax             ; .//ib:-39
0x0000279e      c70301000000   mov dword [rbx], 1                      ; /src:-94
0x000027a4      5b             pop rbx
0x000027a5      c3             ret
0x000027a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- isz85:
0x000027b0      4080ff5a       cmp dil, 0x5a
0x000027b4      7f32           jg 0x27e8
0x000027b6      4080ff41       cmp dil, 0x41
0x000027ba      7d33           jge 0x27ef
0x000027bc      8d47d0         lea eax, [rdi - 0x30]                   ; /src:-275
0x000027bf      3c09           cmp al, 9                               ; /src:-274
0x000027c1      762c           jbe 0x27ef
0x000027c3      400fbef7       movsx esi, dil
0x000027c7      488d3d564b00.  lea rdi, str.._:                        ; 0x7324 ; ".-:+=^!/*?&<>()[]{}@%$#"
0x000027ce      4883ec08       sub rsp, 8
0x000027d2      e8b9eeffff     call sym.imp.strchr
0x000027d7      4885c0         test rax, rax
0x000027da      0f95c0         setne al
0x000027dd      4883c408       add rsp, 8
0x000027e1      c3             ret
0x000027e2      660f1f440000   nop word [rax + rax]
0x000027e8      8d479f         lea eax, [rdi - 0x61]                   ; /src:-266
0x000027eb      3c19           cmp al, 0x19
0x000027ed      77d4           ja 0x27c3
0x000027ef      b801000000     mov eax, 1
0x000027f4      c3             ret                                     ; /src:-393
0x000027f5      90             nop
0x000027f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- base32_decode_ctx_wrapper:
0x00002800      53             push rbx
0x00002801      4889fb         mov rbx, rdi                            ; /src:-454
0x00002804      488d7f04       lea rdi, [rdi + 4]
0x00002808      e8e3100000     call sym.base32_decode_ctx
0x0000280d      8b5304         mov edx, dword [rbx + 4]
0x00002810      8913           mov dword [rbx], edx
0x00002812      5b             pop rbx
0x00002813      c3             ret
0x00002814      6690           nop                                     ; /src:-192
0x00002816      662e0f1f8400.  nop word cs:[rax + rax]
;-- base32hex_decode_ctx_init_wrapper:
0x00002820      53             push rbx
0x00002821      4889fb         mov rbx, rdi
0x00002824      488d7f04       lea rdi, [rdi + 4]
0x00002828      e8b3100000     call sym.base32_decode_ctx_init
0x0000282d      48c743180014.  mov qword [rbx + 0x18], 0x1400          ; [0x1400:8]=0x20af58 reloc.fwrite_unlocked
0x00002835      bf00140000     mov edi, 0x1400                         ; /src:-175
0x0000283a      e8813f0000     call sym.xmalloc
0x0000283f      48894310       mov qword [rbx + 0x10], rax
0x00002843      5b             pop rbx
0x00002844      c3             ret                                     ; /src:-164
0x00002845      90             nop
0x00002846      662e0f1f8400.  nop word cs:[rax + rax]
;-- base32_decode_ctx_init_wrapper:
0x00002850      4883c704       add rdi, 4                              ; /src:-156
0x00002854      e987100000     jmp sym.base32_decode_ctx_init
0x00002859      0f1f80000000.  nop dword [rax]
;-- base64_decode_ctx_wrapper:
0x00002860      53             push rbx
0x00002861      4889fb         mov rbx, rdi
0x00002864      488d7f04       lea rdi, [rdi + 4]
0x00002868      e883170000     call sym.base64_decode_ctx              ; /src:-176
0x0000286d      8b5304         mov edx, dword [rbx + 4]
0x00002870      8913           mov dword [rbx], edx                    ; /src:-174
0x00002872      5b             pop rbx
0x00002873      c3             ret
0x00002874      6690           nop
0x00002876      662e0f1f8400.  nop word cs:[rax + rax]
;-- base64url_decode_ctx_init_wrapper:
0x00002880      53             push rbx
0x00002881      4889fb         mov rbx, rdi
0x00002884      488d7f04       lea rdi, [rdi + 4]
0x00002888      e853170000     call sym.base64_decode_ctx_init
0x0000288d      48c743180014.  mov qword [rbx + 0x18], 0x1400          ; [0x1400:8]=0x20af58 reloc.fwrite_unlocked
0x00002895      bf00140000     mov edi, 0x1400
0x0000289a      e8213f0000     call sym.xmalloc
0x0000289f      48894310       mov qword [rbx + 0x10], rax
0x000028a3      5b             pop rbx
0x000028a4      c3             ret
0x000028a5      90             nop
0x000028a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- base64_decode_ctx_init_wrapper:
0x000028b0      4883c704       add rdi, 4
0x000028b4      e927170000     jmp sym.base64_decode_ctx_init
0x000028b9      0f1f80000000.  nop dword [rax]
;-- base16_decode_ctx:
0x000028c0      4885d2         test rdx, rdx
0x000028c3      49c700000000.  mov qword [r8], 0
0x000028ca      7474           je 0x2940
0x000028cc      4c8d4e01       lea r9, [rsi + 1]
0x000028d0      4c8d541601     lea r10, [rsi + rdx + 1]
0x000028d5      eb37           jmp 0x290e                              ; /src:-71
0x000028d7      660f1f840000.  nop word [rax + rax]
0x000028e0      0fb65705       movzx edx, byte [rdi + 5]
0x000028e4      83e837         sub eax, 0x37
0x000028e7      84d2           test dl, dl
0x000028e9      7447           je 0x2932
0x000028eb      0fb67704       movzx esi, byte [rdi + 4]
0x000028ef      49830001       add qword [r8], 1
0x000028f3      4883c101       add rcx, 1
0x000028f7      c1e604         shl esi, 4
0x000028fa      01f0           add eax, esi
0x000028fc      8841ff         mov byte [rcx - 1], al
0x000028ff      83f201         xor edx, 1                              ; /src:-73
0x00002902      885705         mov byte [rdi + 5], dl
0x00002905      4983c101       add r9, 1
0x00002909      4d39ca         cmp r10, r9
0x0000290c      7442           je 0x2950
0x0000290e      410fbe41ff     movsx eax, byte [r9 - 1]
0x00002913      3c0a           cmp al, 0xa
0x00002915      74ee           je 0x2905                               ; /src:-70
0x00002917      8d50bf         lea edx, [rax - 0x41]
0x0000291a      80fa05         cmp dl, 5
0x0000291d      76c1           jbe 0x28e0
0x0000291f      8d50d0         lea edx, [rax - 0x30]
0x00002922      80fa09         cmp dl, 9
0x00002925      7739           ja 0x2960
0x00002927      0fb65705       movzx edx, byte [rdi + 5]
0x0000292b      83e830         sub eax, 0x30
0x0000292e      84d2           test dl, dl
0x00002930      75b9           jne 0x28eb
0x00002932      884704         mov byte [rdi + 4], al                  ; /src:-61
0x00002935      ebc8           jmp 0x28ff
0x00002937      660f1f840000.  nop word [rax + rax]
0x00002940      0fb64705       movzx eax, byte [rdi + 5]
0x00002944      83f001         xor eax, 1
0x00002947      c3             ret
0x00002948      0f1f84000000.  nop dword [rax + rax]
0x00002950      b801000000     mov eax, 1
0x00002955      c3             ret
0x00002956      662e0f1f8400.  nop word cs:[rax + rax]
0x00002960      31c0           xor eax, eax
0x00002962      c3             ret
0x00002963      0f1f00         nop dword [rax]
0x00002966      662e0f1f8400.  nop word cs:[rax + rax]
;-- z85_decode_ctx:
0x00002970      4885d2         test rdx, rdx
0x00002973      49c700000000.  mov qword [r8], 0
0x0000297a      750c           jne 0x2988                              ; /src:-39
0x0000297c      8b4704         mov eax, dword [rdi + 4]
0x0000297f      85c0           test eax, eax
0x00002981      0f9ec0         setle al                                ; /src:-32
0x00002984      c3             ret
0x00002985      0f1f00         nop dword [rax]                         ; /src:-39
0x00002988      4c8d4e01       lea r9, [rsi + 1]
0x0000298c      4c8d15ed5200.  lea r10, obj.z85_decoding               ; 0x7c80 ; "D\xffTSRH\xffKLFA\xff?>E"
0x00002993      488d741601     lea rsi, [rsi + rdx + 1]
0x00002998      eb13           jmp 0x29ad
0x0000299a      660f1f440000   nop word [rax + rax]
0x000029a0      4983c101       add r9, 1
0x000029a4      4939f1         cmp r9, rsi
0x000029a7      0f84c2000000   je 0x2a6f                               ; /src:-36
0x000029ad      410fb641ff     movzx eax, byte [r9 - 1]
0x000029b2      3c0a           cmp al, 0xa
0x000029b4      74ea           je 0x29a0
0x000029b6      8d50df         lea edx, [rax - 0x21]
0x000029b9      80fa5c         cmp dl, 0x5c
0x000029bc      0f87be000000   ja 0x2a80
0x000029c2      83e821         sub eax, 0x21
0x000029c5      4898           cdqe
0x000029c7      410fb61402     movzx edx, byte [r10 + rax]
0x000029cc      80faff         cmp dl, 0xff
0x000029cf      0f84ab000000   je 0x2a80
0x000029d5      48634704       movsxd rax, dword [rdi + 4]
0x000029d9      448d5801       lea r11d, [rax + 1]
0x000029dd      4183fb05       cmp r11d, 5                             ; /src:-82
0x000029e1      44895f04       mov dword [rdi + 4], r11d
0x000029e5      88540708       mov byte [rdi + rax + 8], dl            ; /src:-83
0x000029e9      75b5           jne 0x29a0
0x000029eb      0fb64709       movzx eax, byte [rdi + 9]
0x000029ef      440fb65f0a     movzx r11d, byte [rdi + 0xa]
0x000029f4      0fb65708       movzx edx, byte [rdi + 8]               ; /src:-78
0x000029f8      4569db391c00.  imul r11d, r11d, 0x1c39                 ; /src:-76
0x000029ff      69c0ed5e0900   imul eax, eax, 0x95eed
0x00002a05      4401d8         add eax, r11d
0x00002a08      440fb65f0b     movzx r11d, byte [rdi + 0xb]
0x00002a0d      456bdb55       imul r11d, r11d, 0x55
0x00002a11      4401d8         add eax, r11d
0x00002a14      440fb65f0c     movzx r11d, byte [rdi + 0xc]
0x00002a19      4101c3         add r11d, eax
0x00002a1c      8d42ad         lea eax, [rdx - 0x53]
0x00002a1f      3c01           cmp al, 1                               ; /src:-68
0x00002a21      765d           jbe 0x2a80
0x00002a23      80fa52         cmp dl, 0x52
0x00002a26      7509           jne 0x2a31
0x00002a28      4181fb4d7fdd.  cmp r11d, 0xdd7f4d
0x00002a2f      7f4f           jg 0x2a80
0x00002a31      0fb6c2         movzx eax, dl
0x00002a34      4983c101       add r9, 1
0x00002a38      49830004       add qword [r8], 4
0x00002a3c      69c0b1841c03   imul eax, eax, 0x31c84b1
0x00002a42      4883c104       add rcx, 4
0x00002a46      c74704000000.  mov dword [rdi + 4], 0
0x00002a4d      4401d8         add eax, r11d                           ; /src:-36
0x00002a50      89c2           mov edx, eax                            ; /src:-37
0x00002a52      8861fe         mov byte [rcx - 2], ah
0x00002a55      8841ff         mov byte [rcx - 1], al
0x00002a58      c1ea18         shr edx, 0x18
0x00002a5b      8851fc         mov byte [rcx - 4], dl
0x00002a5e      89c2           mov edx, eax
0x00002a60      c1ea10         shr edx, 0x10                           ; /src:-51
0x00002a63      8851fd         mov byte [rcx - 3], dl
0x00002a66      4939f1         cmp r9, rsi
0x00002a69      0f853effffff   jne 0x29ad
0x00002a6f      8b4704         mov eax, dword [rdi + 4]                ; /src:-166
0x00002a72      8907           mov dword [rdi], eax
0x00002a74      b801000000     mov eax, 1
0x00002a79      c3             ret
0x00002a7a      660f1f440000   nop word [rax + rax]
0x00002a80      31c0           xor eax, eax
0x00002a82      c3             ret
0x00002a83      0f1f00         nop dword [rax]
0x00002a86      662e0f1f8400.  nop word cs:[rax + rax]                 ; /src:-169
;-- base2lsbf_decode_ctx:
0x00002a90      4885d2         test rdx, rdx                           ; /src:-166
0x00002a93      4989ca         mov r10, rcx
0x00002a96      49c700000000.  mov qword [r8], 0                       ; /src:-164
0x00002a9d      7469           je 0x2b08
0x00002a9f      4c8d4e01       lea r9, [rsi + 1]
0x00002aa3      488d741601     lea rsi, [rsi + rdx + 1]
0x00002aa8      0f1f84000000.  nop dword [rax + rax]                   ; /src:-183
0x00002ab0      410fb641ff     movzx eax, byte [r9 - 1]
0x00002ab5      3c0a           cmp al, 0xa
0x00002ab7      743c           je 0x2af5
0x00002ab9      8d50d0         lea edx, [rax - 0x30]
0x00002abc      80fa01         cmp dl, 1
0x00002abf      774f           ja 0x2b10
0x00002ac1      3c31           cmp al, 0x31
0x00002ac3      8b0f           mov ecx, dword [rdi]
0x00002ac5      0f94c0         sete al
0x00002ac8      0fb6c0         movzx eax, al                           ; /src:-154
0x00002acb      d3e0           shl eax, cl
0x00002acd      0b4704         or eax, dword [rdi + 4]
0x00002ad0      83c101         add ecx, 1
0x00002ad3      83f908         cmp ecx, 8
0x00002ad6      890f           mov dword [rdi], ecx                    ; /src:-480
0x00002ad8      894704         mov dword [rdi + 4], eax
0x00002adb      7518           jne 0x2af5
0x00002add      418802         mov byte [r10], al
0x00002ae0      c74704000000.  mov dword [rdi + 4], 0
0x00002ae7      4983c201       add r10, 1
0x00002aeb      49830001       add qword [r8], 1
0x00002aef      c70700000000   mov dword [rdi], 0
0x00002af5      4983c101       add r9, 1
0x00002af9      4c39ce         cmp rsi, r9                             ; /src:-460
0x00002afc      75b2           jne 0x2ab0
0x00002afe      b801000000     mov eax, 1
0x00002b03      c3             ret
0x00002b04      0f1f4000       nop dword [rax]
0x00002b08      8b07           mov eax, dword [rdi]
0x00002b0a      85c0           test eax, eax
0x00002b0c      0f94c0         sete al
0x00002b0f      c3             ret
0x00002b10      31c0           xor eax, eax
0x00002b12      c3             ret
0x00002b13      0f1f00         nop dword [rax]
0x00002b16      662e0f1f8400.  nop word cs:[rax + rax]
;-- base2msbf_decode_ctx:
0x00002b20      4885d2         test rdx, rdx
0x00002b23      4989ca         mov r10, rcx
0x00002b26      49c700000000.  mov qword [r8], 0                       ; /src:-437
0x00002b2d      0f8485000000   je 0x2bb8
0x00002b33      4c8d4e01       lea r9, [rsi + 1]
0x00002b37      488d741601     lea rsi, [rsi + rdx + 1]
0x00002b3c      eb1a           jmp 0x2b58
0x00002b3e      6690           nop                                     ; /src:-455
0x00002b40      c1e007         shl eax, 7
0x00002b43      c70707000000   mov dword [rdi], 7
0x00002b49      4409d8         or eax, r11d
0x00002b4c      894704         mov dword [rdi + 4], eax
0x00002b4f      4983c101       add r9, 1
0x00002b53      4939f1         cmp r9, rsi                             ; /src:-441
0x00002b56      7455           je 0x2bad
0x00002b58      410fb651ff     movzx edx, byte [r9 - 1]
0x00002b5d      80fa0a         cmp dl, 0xa
0x00002b60      74ed           je 0x2b4f
0x00002b62      8d42d0         lea eax, [rdx - 0x30]
0x00002b65      3c01           cmp al, 1
0x00002b67      7757           ja 0x2bc0
0x00002b69      8b0f           mov ecx, dword [rdi]
0x00002b6b      31c0           xor eax, eax
0x00002b6d      80fa31         cmp dl, 0x31
0x00002b70      0f94c0         sete al
0x00002b73      448b5f04       mov r11d, dword [rdi + 4]
0x00002b77      85c9           test ecx, ecx
0x00002b79      74c5           je 0x2b40
0x00002b7b      83e901         sub ecx, 1
0x00002b7e      d3e0           shl eax, cl
0x00002b80      890f           mov dword [rdi], ecx
0x00002b82      4409d8         or eax, r11d
0x00002b85      85c9           test ecx, ecx
0x00002b87      894704         mov dword [rdi + 4], eax
0x00002b8a      75c3           jne 0x2b4f
0x00002b8c      4983c101       add r9, 1
0x00002b90      418802         mov byte [r10], al
0x00002b93      c74704000000.  mov dword [rdi + 4], 0
0x00002b9a      4983c201       add r10, 1
0x00002b9e      49830001       add qword [r8], 1
0x00002ba2      4939f1         cmp r9, rsi
0x00002ba5      c70700000000   mov dword [rdi], 0                      ; /src:-448
0x00002bab      75ab           jne 0x2b58
0x00002bad      b801000000     mov eax, 1                              ; /src:-439
0x00002bb2      c3             ret
0x00002bb3      0f1f440000     nop dword [rax + rax]
0x00002bb8      8b07           mov eax, dword [rdi]
0x00002bba      85c0           test eax, eax
0x00002bbc      0f94c0         sete al
0x00002bbf      c3             ret
0x00002bc0      31c0           xor eax, eax
0x00002bc2      c3             ret
0x00002bc3      0f1f00         nop dword [rax]
0x00002bc6      662e0f1f8400.  nop word cs:[rax + rax]                 ; /src:-469
;-- z85_encode:
0x00002bd0      4155           push r13
0x00002bd2      4154           push r12
0x00002bd4      55             push rbp
0x00002bd5      53             push rbx
0x00002bd6      4883ec18       sub rsp, 0x18
0x00002bda      64488b042528.  mov rax, qword fs:[0x28]
0x00002be3      4889442408     mov qword [rsp + 8], rax
0x00002be8      31c0           xor eax, eax
0x00002bea      4885f6         test rsi, rsi
0x00002bed      0f84d1000000   je 0x2cc4
0x00002bf3      0fb607         movzx eax, byte [rdi]
0x00002bf6      4c8d4f01       lea r9, [rdi + 1]
0x00002bfa      4801fe         add rsi, rdi
0x00002bfd      4989d3         mov r11, rdx
0x00002c00      4531d2         xor r10d, r10d
0x00002c03      bfc1c0c0c0     mov edi, 0xc0c0c0c1
0x00002c08      488d1dd15000.  lea rbx, obj.z85_encoding               ; 0x7ce0 ; "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&<>()[]{}@%$#"
0x00002c0f      88442404       mov byte [rsp + 4], al
0x00002c13      b801000000     mov eax, 1
0x00002c18      eb09           jmp 0x2c23
0x00002c1a      660f1f440000   nop word [rax + rax]
0x00002c20      4863c2         movsxd rax, edx
0x00002c23      4c39ce         cmp rsi, r9
0x00002c26      0f8494000000   je 0x2cc0
0x00002c2c      4983c101       add r9, 1                               ; /src:-638
0x00002c30      450fb641ff     movzx r8d, byte [r9 - 1]
0x00002c35      8d5001         lea edx, [rax + 1]
0x00002c38      83fa04         cmp edx, 4
0x00002c3b      4488440404     mov byte [rsp + rax + 4], r8b
0x00002c40      75de           jne 0x2c20
0x00002c42      0fb6442404     movzx eax, byte [rsp + 4]
0x00002c47      440fb6442405   movzx r8d, byte [rsp + 5]
0x00002c4d      4d89dd         mov r13, r11
0x00002c50      498d6a04       lea rbp, [r10 + 4]
0x00002c54      4d8d62ff       lea r12, [r10 - 1]                      ; /src:-636
0x00002c58      4d29d5         sub r13, r10                            ; /src:-637
0x00002c5b      41c1e010       shl r8d, 0x10
0x00002c5f      c1e018         shl eax, 0x18
0x00002c62      428d0400       lea eax, [rax + r8]
0x00002c66      440fb6442406   movzx r8d, byte [rsp + 6]               ; /src:-634
0x00002c6c      41c1e008       shl r8d, 8
0x00002c70      4101c0         add r8d, eax
0x00002c73      0fb6442407     movzx eax, byte [rsp + 7]
0x00002c78      4101c0         add r8d, eax
0x00002c7b      4489c0         mov eax, r8d
0x00002c7e      f7e7           mul edi
0x00002c80      c1ea06         shr edx, 6
0x00002c83      4839cd         cmp rbp, rcx
0x00002c86      7313           jae 0x2c9b
0x00002c88      6bc255         imul eax, edx, 0x55
0x00002c8b      4129c0         sub r8d, eax
0x00002c8e      4d63c0         movsxd r8, r8d
0x00002c91      420fb60403     movzx eax, byte [rbx + r8]
0x00002c96      4188442d00     mov byte [r13 + rbp], al                ; /src:-747
0x00002c9b      4883ed01       sub rbp, 1
0x00002c9f      4189d0         mov r8d, edx
0x00002ca2      4c39e5         cmp rbp, r12
0x00002ca5      75d4           jne 0x2c7b
0x00002ca7      4983c305       add r11, 5
0x00002cab      4983c205       add r10, 5
0x00002caf      31d2           xor edx, edx
0x00002cb1      e96affffff     jmp 0x2c20
0x00002cb6      662e0f1f8400.  nop word cs:[rax + rax]
0x00002cc0      85c0           test eax, eax
0x00002cc2      751b           jne 0x2cdf
0x00002cc4      488b442408     mov rax, qword [rsp + 8]
0x00002cc9      644833042528.  xor rax, qword fs:[0x28]                ; /src:-741
0x00002cd2      752f           jne 0x2d03
0x00002cd4      4883c418       add rsp, 0x18
0x00002cd8      5b             pop rbx
0x00002cd9      5d             pop rbp
0x00002cda      415c           pop r12
0x00002cdc      415d           pop r13
0x00002cde      c3             ret
0x00002cdf      488d35524800.  lea rsi, str.invalid_input__length_must_be_multiple_of_4_characters ; 0x7538 ; "invalid input (length must be multiple of 4 characters)"
0x00002ce6      ba05000000     mov edx, 5                              ; /src:-731
0x00002ceb      31ff           xor edi, edi
0x00002ced      e83ee9ffff     call sym.imp.dcgettext                  ; /src:-729
0x00002cf2      31f6           xor esi, esi
0x00002cf4      4889c2         mov rdx, rax
0x00002cf7      bf01000000     mov edi, 1
0x00002cfc      31c0           xor eax, eax
0x00002cfe      e80debffff     call sym.imp.error
0x00002d03      e858e9ffff     call sym.imp.__stack_chk_fail           ; /src:-733
0x00002d08      0f1f84000000.  nop dword [rax + rax]
;-- base32hex_encode:
0x00002d10      55             push rbp
0x00002d11      53             push rbx
0x00002d12      4889cd         mov rbp, rcx
0x00002d15      4889d3         mov rbx, rdx
0x00002d18      4883ec08       sub rsp, 8
0x00002d1c      e8ef080000     call sym.base32_encode
0x00002d21      4885ed         test rbp, rbp
0x00002d24      743a           je 0x2d60
0x00002d26      0fbe03         movsx eax, byte [rbx]
0x00002d29      8d50ce         lea edx, [rax - 0x32]                   ; /src:-725
0x00002d2c      80fa28         cmp dl, 0x28
0x00002d2f      7736           ja 0x2d67
0x00002d31      488d0c2b       lea rcx, [rbx + rbp]
0x00002d35      488d35645000.  lea rsi, obj.base32_norm_to_hex         ; 0x7da0 ; "QRSTUV89:;<=>?@0123456789ABCDEFGHIJKLMNOP8.31"
0x00002d3c      eb0d           jmp 0x2d4b
0x00002d3e      6690           nop
0x00002d40      0fbe03         movsx eax, byte [rbx]
0x00002d43      8d50ce         lea edx, [rax - 0x32]
0x00002d46      80fa28         cmp dl, 0x28
0x00002d49      771c           ja 0x2d67                               ; /src:-722
0x00002d4b      83e832         sub eax, 0x32
0x00002d4e      4883c301       add rbx, 1
0x00002d52      4898           cdqe
0x00002d54      0fb60406       movzx eax, byte [rsi + rax]
0x00002d58      8843ff         mov byte [rbx - 1], al
0x00002d5b      4839cb         cmp rbx, rcx
0x00002d5e      75e0           jne 0x2d40
0x00002d60      4883c408       add rsp, 8
0x00002d64      5b             pop rbx
0x00002d65      5d             pop rbp
0x00002d66      c3             ret
0x00002d67      488d0df24e00.  lea rcx, obj.__PRETTY_FUNCTION__.7847   ; 0x7c60 ; "base32hex_encode"
0x00002d6e      488d35fb4700.  lea rsi, str..._coreutils_8.31_src_basenc.c ; 0x7570 ; "../coreutils-8.31/src/basenc.c"
0x00002d75      488d3dc04500.  lea rdi, str.p____0x32_____p____0x5a    ; 0x733c ; "*p >= 0x32 && *p <= 0x5a"
0x00002d7c      bac2010000     mov edx, 0x1c2
0x00002d81      e84ae9ffff     call sym.imp.__assert_fail
0x00002d86      662e0f1f8400.  nop word cs:[rax + rax]                 ; /src:-619
;-- base64url_decode_ctx_wrapper:
0x00002d90      4156           push r14
0x00002d92      4155           push r13                                ; /src:-791
0x00002d94      4989f6         mov r14, rsi
0x00002d97      4154           push r12
0x00002d99      55             push rbp
0x00002d9a      4989d5         mov r13, rdx
0x00002d9d      53             push rbx
0x00002d9e      4889fb         mov rbx, rdi
0x00002da1      4889cd         mov rbp, rcx
0x00002da4      483b5318       cmp rdx, qword [rbx + 0x18]             ; /src:-611
0x00002da8      4d89c4         mov r12, r8
0x00002dab      488b7f10       mov rdi, qword [rdi + 0x10]
0x00002daf      0f879b000000   ja 0x2e50
0x00002db5      4c89f6         mov rsi, r14
0x00002db8      4c89ea         mov rdx, r13
0x00002dbb      e8a0e9ffff     call sym.imp.memcpy
0x00002dc0      4d85ed         test r13, r13
0x00002dc3      488b7310       mov rsi, qword [rbx + 0x10]
0x00002dc7      7448           je 0x2e11                               ; /src:-614
0x00002dc9      0fb606         movzx eax, byte [rsi]
0x00002dcc      4a8d0c2e       lea rcx, [rsi + r13]                    ; /src:-612
0x00002dd0      89c2           mov edx, eax
0x00002dd2      83e2fb         and edx, 0xfffffffb                     ; /src:-651 ; 4294967291
0x00002dd5      80fa2b         cmp dl, 0x2b
0x00002dd8      7523           jne 0x2dfd
0x00002dda      eb5c           jmp 0x2e38
0x00002ddc      0f1f4000       nop dword [rax]                         ; /src:-611
0x00002de0      3c5f           cmp al, 0x5f
0x00002de2      7503           jne 0x2de7
0x00002de4      c6062f         mov byte [rsi], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x00002de7      4883c601       add rsi, 1
0x00002deb      4839ce         cmp rsi, rcx
0x00002dee      741d           je 0x2e0d
0x00002df0      0fb606         movzx eax, byte [rsi]
0x00002df3      89c2           mov edx, eax
0x00002df5      83e2fb         and edx, 0xfffffffb                     ; 4294967291
0x00002df8      80fa2b         cmp dl, 0x2b                            ; /src:-604
0x00002dfb      743b           je 0x2e38
0x00002dfd      3c2d           cmp al, 0x2d
0x00002dff      75df           jne 0x2de0
0x00002e01      c6062b         mov byte [rsi], 0x2b                    ; '+'
                                                                       ; [0x2b:1]=0
0x00002e04      4883c601       add rsi, 1                              ; /src:-603
0x00002e08      4839ce         cmp rsi, rcx
0x00002e0b      75e3           jne 0x2df0
0x00002e0d      488b7310       mov rsi, qword [rbx + 0x10]
0x00002e11      488d7b04       lea rdi, [rbx + 4]
0x00002e15      4c89ea         mov rdx, r13
0x00002e18      4d89e0         mov r8, r12
0x00002e1b      4889e9         mov rcx, rbp
0x00002e1e      e8cd110000     call sym.base64_decode_ctx
0x00002e23      8b5304         mov edx, dword [rbx + 4]
0x00002e26      8913           mov dword [rbx], edx
0x00002e28      5b             pop rbx
0x00002e29      5d             pop rbp                                 ; .//ib:-974
0x00002e2a      415c           pop r12
0x00002e2c      415d           pop r13                                 ; /src:-789
0x00002e2e      415e           pop r14
0x00002e30      c3             ret                                     ; .//ib:-974
0x00002e31      0f1f80000000.  nop dword [rax]
0x00002e38      5b             pop rbx
0x00002e39      49c704240000.  mov qword [r12], 0
0x00002e41      31c0           xor eax, eax
0x00002e43      5d             pop rbp
0x00002e44      415c           pop r12
0x00002e46      415d           pop r13
0x00002e48      415e           pop r14
0x00002e4a      c3             ret
0x00002e4b      0f1f440000     nop dword [rax + rax]
0x00002e50      488d3412       lea rsi, [rdx + rdx]
0x00002e54      4885f6         test rsi, rsi
0x00002e57      48897318       mov qword [rbx + 0x18], rsi
0x00002e5b      7811           js 0x2e6e
0x00002e5d      e8be390000     call sym.xrealloc
0x00002e62      4889c7         mov rdi, rax
0x00002e65      48894310       mov qword [rbx + 0x10], rax
0x00002e69      e947ffffff     jmp 0x2db5
0x00002e6e      e89d3b0000     call sym.xalloc_die
0x00002e73      0f1f00         nop dword [rax]
0x00002e76      662e0f1f8400.  nop word cs:[rax + rax]
;-- base32hex_decode_ctx_wrapper:
0x00002e80      55             push rbp
0x00002e81      53             push rbx                                ; /src:-992
0x00002e82      4889f5         mov rbp, rsi
0x00002e85      4889fb         mov rbx, rdi
0x00002e88      4883ec28       sub rsp, 0x28
0x00002e8c      483b5718       cmp rdx, qword [rdi + 0x18]
0x00002e90      488b4710       mov rax, qword [rdi + 0x10]
0x00002e94      777a           ja 0x2f10
0x00002e96      4885d2         test rdx, rdx
0x00002e99      7457           je 0x2ef2
0x00002e9b      4531c9         xor r9d, r9d
0x00002e9e      4c8d1dbb4e00.  lea r11, obj.base32_hex_to_norm         ; 0x7d60 ; "ABCDEFGHIJ:;<=>?@KLMNOPQRSTUVWXYZ234567"
0x00002ea5      eb1f           jmp 0x2ec6
0x00002ea7      660f1f840000.  nop word [rax + rax]
0x00002eb0      8d7ebf         lea edi, [rsi - 0x41]
0x00002eb3      4080ff15       cmp dil, 0x15
0x00002eb7      761d           jbe 0x2ed6
0x00002eb9      42883408       mov byte [rax + r9], sil
0x00002ebd      4983c101       add r9, 1
0x00002ec1      4c39ca         cmp rdx, r9
0x00002ec4      7428           je 0x2eee
0x00002ec6      420fbe740d00   movsx esi, byte [rbp + r9]
0x00002ecc      448d56d0       lea r10d, [rsi - 0x30]
0x00002ed0      4180fa09       cmp r10b, 9
0x00002ed4      77da           ja 0x2eb0
0x00002ed6      83ee30         sub esi, 0x30
0x00002ed9      4863f6         movsxd rsi, esi
0x00002edc      410fb63433     movzx esi, byte [r11 + rsi]
0x00002ee1      42883408       mov byte [rax + r9], sil
0x00002ee5      4983c101       add r9, 1
0x00002ee9      4c39ca         cmp rdx, r9
0x00002eec      75d8           jne 0x2ec6
0x00002eee      488b4310       mov rax, qword [rbx + 0x10]
0x00002ef2      488d7b04       lea rdi, [rbx + 4]
0x00002ef6      4889c6         mov rsi, rax
0x00002ef9      e8f2090000     call sym.base32_decode_ctx
0x00002efe      8b5304         mov edx, dword [rbx + 4]
0x00002f01      8913           mov dword [rbx], edx
0x00002f03      4883c428       add rsp, 0x28
0x00002f07      5b             pop rbx
0x00002f08      5d             pop rbp
0x00002f09      c3             ret
0x00002f0a      660f1f440000   nop word [rax + rax]
0x00002f10      488d3412       lea rsi, [rdx + rdx]
0x00002f14      4c89442418     mov qword [rsp + 0x18], r8              ; string_fortified.h:-629
0x00002f19      48894c2410     mov qword [rsp + 0x10], rcx
0x00002f1e      4889542408     mov qword [rsp + 8], rdx
0x00002f23      4885f6         test rsi, rsi
0x00002f26      48897718       mov qword [rdi + 0x18], rsi
0x00002f2a      7820           js 0x2f4c
0x00002f2c      4889c7         mov rdi, rax
0x00002f2f      e8ec380000     call sym.xrealloc
0x00002f34      488b542408     mov rdx, qword [rsp + 8]
0x00002f39      48894310       mov qword [rbx + 0x10], rax             ; /src:-1098
0x00002f3d      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00002f42      4c8b442418     mov r8, qword [rsp + 0x18]
0x00002f47      e94affffff     jmp 0x2e96
0x00002f4c      e8bf3a0000     call sym.xalloc_die
0x00002f51      0f1f440000     nop dword [rax + rax]
0x00002f56      662e0f1f8400.  nop word cs:[rax + rax]
;-- usage:
0x00002f60      4155           push r13
0x00002f62      4154           push r12
0x00002f64      ba05000000     mov edx, 5
0x00002f69      55             push rbp
0x00002f6a      53             push rbx
0x00002f6b      89fd           mov ebp, edi
0x00002f6d      4881ec880000.  sub rsp, 0x88
0x00002f74      488b1d8d8120.  mov rbx, qword [obj.program_name]       ; [0x20b108:8]=0
0x00002f7b      64488b042528.  mov rax, qword fs:[0x28]
0x00002f84      4889442478     mov qword [rsp + 0x78], rax
0x00002f89      31c0           xor eax, eax
0x00002f8b      85ff           test edi, edi
0x00002f8d      742e           je 0x2fbd
0x00002f8f      488d35fa4500.  lea rsi, str.Try___s___help__for_more_information. ; 0x7590 ; "Try '%s --help' for more information.\n"
0x00002f96      31ff           xor edi, edi
0x00002f98      e893e6ffff     call sym.imp.dcgettext
0x00002f9d      488b3d1c8120.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x00002fa4      4889c2         mov rdx, rax
0x00002fa7      4889d9         mov rcx, rbx
0x00002faa      be01000000     mov esi, 1
0x00002faf      31c0           xor eax, eax
0x00002fb1      e8bae8ffff     call sym.imp.__fprintf_chk
0x00002fb6      89ef           mov edi, ebp
0x00002fb8      e893e8ffff     call sym.imp.exit
0x00002fbd      488d35984300.  lea rsi, str.Usage:__s__OPTION_...__FILE ; 0x735c ; "Usage: %s [OPTION]... [FILE]\n"
0x00002fc4      31ff           xor edi, edi
0x00002fc6      e865e6ffff     call sym.imp.dcgettext
0x00002fcb      4889da         mov rdx, rbx
0x00002fce      4889c6         mov rsi, rax
0x00002fd1      bf01000000     mov edi, 1
0x00002fd6      31c0           xor eax, eax
0x00002fd8      e813e8ffff     call sym.imp.__printf_chk
0x00002fdd      488b1da48020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002fe4      488d35cd4500.  lea rsi, str.basenc_encode_or_decode_FILE__or_standard_input__to_standard_output. ; 0x75b8 ; "basenc encode or decode FILE, or standard input, to standard output.\n"
0x00002feb      ba05000000     mov edx, 5
0x00002ff0      31ff           xor edi, edi
0x00002ff2      e839e6ffff     call sym.imp.dcgettext                  ; /src:-1083
0x00002ff7      4889de         mov rsi, rbx
0x00002ffa      4889c7         mov rdi, rax
0x00002ffd      e82ee7ffff     call sym.imp.fputs_unlocked
0x00003002      488b1d7f8020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00003009      488d35f04500.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x7600 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00003010      ba05000000     mov edx, 5
0x00003015      31ff           xor edi, edi
0x00003017      e814e6ffff     call sym.imp.dcgettext                  ; /src:-1080
0x0000301c      4889de         mov rsi, rbx
0x0000301f      4889c7         mov rdi, rax
0x00003022      e809e7ffff     call sym.imp.fputs_unlocked
0x00003027      488b1d5a8020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x0000302e      488d35034600.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x7638 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00003035      ba05000000     mov edx, 5
0x0000303a      31ff           xor edi, edi
0x0000303c      e8efe5ffff     call sym.imp.dcgettext                  ; /src:-1076
0x00003041      4889de         mov rsi, rbx
0x00003044      4889c7         mov rdi, rax
0x00003047      e8e4e6ffff     call sym.imp.fputs_unlocked
0x0000304c      488b1d358020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00003053      488d352e4600.  lea rsi, str.base64__________same_as__base64__program__RFC4648_section_4 ; 0x7688 ; "      --base64          same as 'base64' program (RFC4648 section 4)\n"
0x0000305a      ba05000000     mov edx, 5
0x0000305f      31ff           xor edi, edi
0x00003061      e8cae5ffff     call sym.imp.dcgettext                  ; /src:-1068
0x00003066      4889de         mov rsi, rbx
0x00003069      4889c7         mov rdi, rax
0x0000306c      e8bfe6ffff     call sym.imp.fputs_unlocked
0x00003071      488b1d108020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00003078      488d35514600.  lea rsi, str.base64url_______file__and_url_safe_base64__RFC4648_section_5 ; 0x76d0 ; "      --base64url       file- and url-safe base64 (RFC4648 section 5)\n"
0x0000307f      ba05000000     mov edx, 5
0x00003084      31ff           xor edi, edi
0x00003086      e8a5e5ffff     call sym.imp.dcgettext                  ; /src:-1062
0x0000308b      4889de         mov rsi, rbx
0x0000308e      4889c7         mov rdi, rax
0x00003091      e89ae6ffff     call sym.imp.fputs_unlocked
0x00003096      488b1deb7f20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x0000309d      488d35744600.  lea rsi, str.base32__________same_as__base32__program__RFC4648_section_6 ; 0x7718 ; "      --base32          same as 'base32' program (RFC4648 section 6)\n"
0x000030a4      ba05000000     mov edx, 5
0x000030a9      31ff           xor edi, edi
0x000030ab      e880e5ffff     call sym.imp.dcgettext                  ; /src:-1061
0x000030b0      4889de         mov rsi, rbx
0x000030b3      4889c7         mov rdi, rax
0x000030b6      e875e6ffff     call sym.imp.fputs_unlocked
0x000030bb      488b1dc67f20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x000030c2      488d35974600.  lea rsi, str.base32hex_______extended_hex_alphabet_base32__RFC4648_section_7 ; 0x7760 ; "      --base32hex       extended hex alphabet base32 (RFC4648 section 7)\n"
0x000030c9      ba05000000     mov edx, 5
0x000030ce      31ff           xor edi, edi
0x000030d0      e85be5ffff     call sym.imp.dcgettext                  ; /src:-1059
0x000030d5      4889de         mov rsi, rbx
0x000030d8      4889c7         mov rdi, rax
0x000030db      e850e6ffff     call sym.imp.fputs_unlocked
0x000030e0      488b1da17f20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x000030e7      488d35c24600.  lea rsi, str.base16__________hex_encoding__RFC4648_section_8 ; 0x77b0 ; "      --base16          hex encoding (RFC4648 section 8)\n"
0x000030ee      ba05000000     mov edx, 5
0x000030f3      31ff           xor edi, edi
0x000030f5      e836e5ffff     call sym.imp.dcgettext
0x000030fa      4889de         mov rsi, rbx
0x000030fd      4889c7         mov rdi, rax
0x00003100      e82be6ffff     call sym.imp.fputs_unlocked
0x00003105      488b1d7c7f20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x0000310c      488d35dd4600.  lea rsi, str.base2msbf_______bit_string_with_most_significant_bit__msb__first ; 0x77f0 ; "      --base2msbf       bit string with most significant bit (msb) first\n"
0x00003113      ba05000000     mov edx, 5
0x00003118      31ff           xor edi, edi
0x0000311a      e811e5ffff     call sym.imp.dcgettext
0x0000311f      4889de         mov rsi, rbx                            ; string_fortified.h:-583
0x00003122      4889c7         mov rdi, rax
0x00003125      e806e6ffff     call sym.imp.fputs_unlocked
0x0000312a      488b1d577f20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00003131      488d35084700.  lea rsi, str.base2lsbf_______bit_string_with_least_significant_bit__lsb__first ; 0x7840 ; "      --base2lsbf       bit string with least significant bit (lsb) first\n"
0x00003138      ba05000000     mov edx, 5
0x0000313d      31ff           xor edi, edi
0x0000313f      e8ece4ffff     call sym.imp.dcgettext
0x00003144      4889de         mov rsi, rbx
0x00003147      4889c7         mov rdi, rax
0x0000314a      e8e1e5ffff     call sym.imp.fputs_unlocked
0x0000314f      488b1d327f20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00003156      488d35334700.  lea rsi, str.d____decode__________decode_data_____i____ignore_garbage__when_decoding__ignore_non_alphabet_characters_____w____wrap_COLS_______wrap_encoded_lines_after_COLS_character__default_76_.____________________________Use_0_to_disable_line_wrapping ; 0x7890 ; "  -d, --decode          decode data\n  -i, --ignore-garbage  when decoding, ignore non-alphabet characters\n  -w, --wrap=COLS       wrap encoded lines after COLS character (default 76).\n                          Use 0 to disable line wrapping\n\n"
0x0000315d      ba05000000     mov edx, 5
0x00003162      31ff           xor edi, edi
0x00003164      e8c7e4ffff     call sym.imp.dcgettext
0x00003169      4889de         mov rsi, rbx
0x0000316c      4889c7         mov rdi, rax
0x0000316f      e8bce5ffff     call sym.imp.fputs_unlocked
0x00003174      488b1d0d7f20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x0000317b      488d35064800.  lea rsi, str.z85_____________ascii85_like_encoding__ZeroMQ_spec:32_Z85____________________________when_encoding__input_length_must_be_a_multiple_of_4___________________________when_decoding__input_length_must_be_a_multiple_of_5 ; 0x7988 ; "      --z85             ascii85-like encoding (ZeroMQ spec:32/Z85);\n                        when encoding, input length must be a multiple of 4;\n                        when decoding, input length must be a multiple of 5\n"
0x00003182      ba05000000     mov edx, 5
0x00003187      31ff           xor edi, edi
0x00003189      e8a2e4ffff     call sym.imp.dcgettext
0x0000318e      4889de         mov rsi, rbx
0x00003191      4889c7         mov rdi, rax                            ; string_fortified.h:-570
0x00003194      e897e5ffff     call sym.imp.fputs_unlocked
0x00003199      488b1de87e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x000031a0      488d35c14800.  lea rsi, str.help_____display_this_help_and_exit ; 0x7a68 ; "      --help     display this help and exit\n"
0x000031a7      ba05000000     mov edx, 5
0x000031ac      31ff           xor edi, edi                            ; string_fortified.h:-567
0x000031ae      e87de4ffff     call sym.imp.dcgettext
0x000031b3      4889de         mov rsi, rbx
0x000031b6      4889c7         mov rdi, rax
0x000031b9      e872e5ffff     call sym.imp.fputs_unlocked
0x000031be      488b1dc37e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x000031c5      488d35cc4800.  lea rsi, str.version__output_version_information_and_exit ; 0x7a98 ; "      --version  output version information and exit\n"
0x000031cc      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/c-ctype.h:-1112
0x000031d1      31ff           xor edi, edi
0x000031d3      e858e4ffff     call sym.imp.dcgettext
0x000031d8      4889de         mov rsi, rbx
0x000031db      4889c7         mov rdi, rax
0x000031de      e84de5ffff     call sym.imp.fputs_unlocked
0x000031e3      488b1d9e7e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x000031ea      488d35df4800.  lea rsi, str.When_decoding__the_input_may_contain_newlines_in_addition_to_the_bytes_of__the_formal_alphabet.__Use___ignore_garbage_to_attempt_to_recover__from_any_other_non_alphabet_bytes_in_the_encoded_stream. ; 0x7ad0 ; "\nWhen decoding, the input may contain newlines in addition to the bytes of\nthe formal alphabet.  Use --ignore-garbage to attempt to recover\nfrom any other non-alphabet bytes in the encoded stream.\n"
0x000031f1      ba05000000     mov edx, 5
0x000031f6      31ff           xor edi, edi
0x000031f8      e833e4ffff     call sym.imp.dcgettext
0x000031fd      4889de         mov rsi, rbx
0x00003200      4889c7         mov rdi, rax
0x00003203      488d1d4b4100.  lea rbx, str.basenc                     ; 0x7355 ; "basenc"
0x0000320a      e821e5ffff     call sym.imp.fputs_unlocked
0x0000320f      488d05644100.  lea rax, [0x0000737a]                   ; "["
0x00003216      488d0d9e4100.  lea rcx, str.sha256sum                  ; string_fortified.h:-550 ; 0x73bb ; "sha256sum"
0x0000321d      48c744246000.  mov qword [rsp + 0x60], 0
0x00003226      48c744246800.  mov qword [rsp + 0x68], 0
0x0000322f      4889e2         mov rdx, rsp
0x00003232      48890424       mov qword [rsp], rax
0x00003236      488d053f4100.  lea rax, str.test_invocation            ; 0x737c ; "test invocation"
0x0000323d      48894c2430     mov qword [rsp + 0x30], rcx
0x00003242      488d0d7c4100.  lea rcx, str.sha384sum                  ; 0x73c5 ; "sha384sum"
0x00003249      4889442408     mov qword [rsp + 8], rax
0x0000324e      488d059f4100.  lea rax, [0x000073f4]                   ; "coreutils"
0x00003255      48894c2440     mov qword [rsp + 0x40], rcx
0x0000325a      488d0d6e4100.  lea rcx, str.sha512sum                  ; 0x73cf ; "sha512sum"
0x00003261      4889442410     mov qword [rsp + 0x10], rax
0x00003266      488d051f4100.  lea rax, str.Multi_call_invocation      ; 0x738c ; "Multi-call invocation"
0x0000326d      48894c2450     mov qword [rsp + 0x50], rcx
0x00003272      4889442418     mov qword [rsp + 0x18], rax
0x00003277      488d05244100.  lea rax, str.sha224sum                  ; 0x73a2 ; "sha224sum"
0x0000327e      4889442420     mov qword [rsp + 0x20], rax
0x00003283      488d05224100.  lea rax, str.sha2_utilities             ; 0x73ac ; "sha2 utilities"
0x0000328a      4889442428     mov qword [rsp + 0x28], rax
0x0000328f      4889442438     mov qword [rsp + 0x38], rax
0x00003294      4889442448     mov qword [rsp + 0x48], rax
0x00003299      4889442458     mov qword [rsp + 0x58], rax
0x0000329e      6690           nop
0x000032a0      4883c210       add rdx, 0x10
0x000032a4      488b3a         mov rdi, qword [rdx]
0x000032a7      4885ff         test rdi, rdi
0x000032aa      7413           je 0x32bf                               ; string_fortified.h:-560
0x000032ac      b907000000     mov ecx, 7
0x000032b1      4889de         mov rsi, rbx
0x000032b4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000032b6      0f97c0         seta al                                 ; string_fortified.h:-559
0x000032b9      1c00           sbb al, 0
0x000032bb      84c0           test al, al
0x000032bd      75e1           jne 0x32a0
0x000032bf      4c8b6208       mov r12, qword [rdx + 8]
0x000032c3      31ff           xor edi, edi
0x000032c5      ba05000000     mov edx, 5
0x000032ca      488d35084100.  lea rsi, str.s_online_help:___s         ; 0x73d9 ; "\n%s online help: <%s>\n"
0x000032d1      4d85e4         test r12, r12
0x000032d4      0f84c1000000   je 0x339b
0x000032da      e851e3ffff     call sym.imp.dcgettext
0x000032df      488d0db24800.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x7b98 ; "https://www.gnu.org/software/coreutils/"
0x000032e6      488d15034100.  lea rdx, str.GNU_coreutils              ; 0x73f0 ; "GNU coreutils"
0x000032ed      4889c6         mov rsi, rax
0x000032f0      bf01000000     mov edi, 1
0x000032f5      31c0           xor eax, eax
0x000032f7      e8f4e4ffff     call sym.imp.__printf_chk
0x000032fc      31f6           xor esi, esi
0x000032fe      bf05000000     mov edi, 5
0x00003303      e8d8e4ffff     call sym.imp.setlocale
0x00003308      4885c0         test rax, rax
0x0000330b      741c           je 0x3329
0x0000330d      488d35ea4000.  lea rsi, [0x000073fe]                   ; "en_"
0x00003314      ba03000000     mov edx, 3
0x00003319      4889c7         mov rdi, rax
0x0000331c      e89fe2ffff     call sym.imp.strncmp
0x00003321      85c0           test eax, eax
0x00003323      0f8507010000   jne 0x3430
0x00003329      488d35d24000.  lea rsi, str.Full_documentation___s_s   ; 0x7402 ; "Full documentation <%s%s>\n"
0x00003330      31ff           xor edi, edi
0x00003332      ba05000000     mov edx, 5
0x00003337      e8f4e2ffff     call sym.imp.dcgettext
0x0000333c      488d0d124000.  lea rcx, str.basenc                     ; 0x7355 ; "basenc"
0x00003343      488d154e4800.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x7b98 ; "https://www.gnu.org/software/coreutils/"
0x0000334a      4889c6         mov rsi, rax
0x0000334d      bf01000000     mov edi, 1
0x00003352      31c0           xor eax, eax
0x00003354      e897e4ffff     call sym.imp.__printf_chk
0x00003359      4939dc         cmp r12, rbx
0x0000335c      488d0d334000.  lea rcx, [0x00007396]                   ; " invocation"
0x00003363      488d1d575200.  lea rbx, [0x000085c1]
0x0000336a      480f44d9       cmove rbx, rcx
0x0000336e      488d35934800.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x7c08 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00003375      31ff           xor edi, edi
0x00003377      ba05000000     mov edx, 5
0x0000337c      e8afe2ffff     call sym.imp.dcgettext
0x00003381      4889d9         mov rcx, rbx
0x00003384      4889c6         mov rsi, rax
0x00003387      4c89e2         mov rdx, r12
0x0000338a      bf01000000     mov edi, 1
0x0000338f      31c0           xor eax, eax
0x00003391      e85ae4ffff     call sym.imp.__printf_chk
0x00003396      e91bfcffff     jmp 0x2fb6
0x0000339b      e890e2ffff     call sym.imp.dcgettext
0x000033a0      488d0df14700.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x7b98 ; "https://www.gnu.org/software/coreutils/"
0x000033a7      488d15424000.  lea rdx, str.GNU_coreutils              ; 0x73f0 ; "GNU coreutils"
0x000033ae      4889c6         mov rsi, rax
0x000033b1      bf01000000     mov edi, 1
0x000033b6      31c0           xor eax, eax
0x000033b8      e833e4ffff     call sym.imp.__printf_chk
0x000033bd      31f6           xor esi, esi
0x000033bf      bf05000000     mov edi, 5
0x000033c4      e817e4ffff     call sym.imp.setlocale
0x000033c9      4885c0         test rax, rax
0x000033cc      7418           je 0x33e6
0x000033ce      488d35294000.  lea rsi, [0x000073fe]                   ; "en_"
0x000033d5      ba03000000     mov edx, 3
0x000033da      4889c7         mov rdi, rax
0x000033dd      e8dee1ffff     call sym.imp.strncmp
0x000033e2      85c0           test eax, eax
0x000033e4      7543           jne 0x3429
0x000033e6      488d35154000.  lea rsi, str.Full_documentation___s_s   ; 0x7402 ; "Full documentation <%s%s>\n"
0x000033ed      ba05000000     mov edx, 5
0x000033f2      31ff           xor edi, edi
0x000033f4      4c8d255a3f00.  lea r12, str.basenc                     ; 0x7355 ; "basenc"
0x000033fb      488d1d943f00.  lea rbx, [0x00007396]                   ; " invocation"
0x00003402      e829e2ffff     call sym.imp.dcgettext
0x00003407      488d0d473f00.  lea rcx, str.basenc                     ; 0x7355 ; "basenc"
0x0000340e      488d15834700.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x7b98 ; "https://www.gnu.org/software/coreutils/"
0x00003415      4889c6         mov rsi, rax
0x00003418      bf01000000     mov edi, 1
0x0000341d      31c0           xor eax, eax
0x0000341f      e8cce3ffff     call sym.imp.__printf_chk
0x00003424      e945ffffff     jmp 0x336e
0x00003429      4c8d25253f00.  lea r12, str.basenc                     ; 0x7355 ; "basenc"
0x00003430      4c8b2d517c20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00003437      488d35824700.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x7bc0 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000343e      31ff           xor edi, edi
0x00003440      ba05000000     mov edx, 5
0x00003445      e8e6e1ffff     call sym.imp.dcgettext
0x0000344a      4c89ee         mov rsi, r13
0x0000344d      4889c7         mov rdi, rax
0x00003450      e8dbe2ffff     call sym.imp.fputs_unlocked
0x00003455      e9cffeffff     jmp 0x3329
0x0000345a      660f1f440000   nop word [rax + rax]
;-- decode_8:
0x00003460      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/base32.c:362
0x00003462      4883fe07       cmp rsi, 7                              ; ../coreutils-8.31/lib/base32.c:364
0x00003466      0f866c010000   jbe 0x35d8
0x0000346c      440fb607       movzx r8d, byte [rdi]                   ; ../coreutils-8.31/lib/base32.c:288
0x00003470      488d35894900.  lea rsi, obj.b32                        ; ../coreutils-8.31/lib/base32.c:239 ; 0x7e00
0x00003477      460fb60406     movzx r8d, byte [rsi + r8]
0x0000347c      4584c0         test r8b, r8b
0x0000347f      0f8853010000   js 0x35d8
0x00003485      440fb64f01     movzx r9d, byte [rdi + 1]               ; ../coreutils-8.31/lib/base32.c:120
0x0000348a      460fb60c0e     movzx r9d, byte [rsi + r9]
0x0000348f      4584c9         test r9b, r9b
0x00003492      0f8840010000   js 0x35d8
0x00003498      48833900       cmp qword [rcx], 0                      ; ../coreutils-8.31/lib/base32.c:122
0x0000349c      488b02         mov rax, qword [rdx]                    ; ../coreutils-8.31/lib/base32.c:125
0x0000349f      741a           je 0x34bb
0x000034a1      4589ca         mov r10d, r9d
0x000034a4      41c1e003       shl r8d, 3
0x000034a8      4883c001       add rax, 1
0x000034ac      41c0fa02       sar r10b, 2
0x000034b0      4509d0         or r8d, r10d
0x000034b3      448840ff       mov byte [rax - 1], r8b
0x000034b7      48832901       sub qword [rcx], 1
0x000034bb      440fb64702     movzx r8d, byte [rdi + 2]
0x000034c0      4180f83d       cmp r8b, 0x3d                           ; ../coreutils-8.31/lib/base32.c:-122
0x000034c4      0f8416010000   je 0x35e0
0x000034ca      460fb60406     movzx r8d, byte [rsi + r8]
0x000034cf      4584c0         test r8b, r8b
0x000034d2      0f880e010000   js 0x35e6
0x000034d8      440fb65703     movzx r10d, byte [rdi + 3]
0x000034dd      460fb61416     movzx r10d, byte [rsi + r10]
0x000034e2      4584d2         test r10b, r10b
0x000034e5      0f88fb000000   js 0x35e6
0x000034eb      48833900       cmp qword [rcx], 0
0x000034ef      7420           je 0x3511
0x000034f1      4501c0         add r8d, r8d
0x000034f4      41c1e106       shl r9d, 6
0x000034f8      4883c001       add rax, 1
0x000034fc      4509c1         or r9d, r8d
0x000034ff      4589d0         mov r8d, r10d                           ; ../coreutils-8.31/lib/base32.c:-234
0x00003502      41c0f804       sar r8b, 4
0x00003506      4509c1         or r9d, r8d
0x00003509      448848ff       mov byte [rax - 1], r9b
0x0000350d      48832901       sub qword [rcx], 1
0x00003511      440fb64704     movzx r8d, byte [rdi + 4]
0x00003516      4180f83d       cmp r8b, 0x3d
0x0000351a      0f84d6000000   je 0x35f6
0x00003520      460fb60406     movzx r8d, byte [rsi + r8]              ; ../coreutils-8.31/lib/base32.c:-356
0x00003525      4584c0         test r8b, r8b
0x00003528      0f88b8000000   js 0x35e6
0x0000352e      48833900       cmp qword [rcx], 0
0x00003532      7419           je 0x354d
0x00003534      4589c1         mov r9d, r8d
0x00003537      41c1e204       shl r10d, 4
0x0000353b      4883c001       add rax, 1
0x0000353f      41d0f9         sar r9b, 1
0x00003542      4509ca         or r10d, r9d
0x00003545      448850ff       mov byte [rax - 1], r10b
0x00003549      48832901       sub qword [rcx], 1
0x0000354d      440fb64f05     movzx r9d, byte [rdi + 5]
0x00003552      4180f93d       cmp r9b, 0x3d                           ; ../coreutils-8.31/lib/base32.c:-216
0x00003556      0f84a0000000   je 0x35fc                               ; ../coreutils-8.31/lib/base32.c:-213
0x0000355c      460fb60c0e     movzx r9d, byte [rsi + r9]
0x00003561      4584c9         test r9b, r9b
0x00003564      0f887c000000   js 0x35e6                               ; ../coreutils-8.31/lib/base32.c:-211
0x0000356a      440fb65706     movzx r10d, byte [rdi + 6]
0x0000356f      460fb61416     movzx r10d, byte [rsi + r10]            ; ../coreutils-8.31/lib/base32.c:-206
0x00003574      4584d2         test r10b, r10b
0x00003577      786d           js 0x35e6                               ; ../coreutils-8.31/lib/base32.c:-205
0x00003579      48833900       cmp qword [rcx], 0
0x0000357d      7421           je 0x35a0
0x0000357f      41c1e102       shl r9d, 2
0x00003583      41c1e007       shl r8d, 7
0x00003587      4883c001       add rax, 1
0x0000358b      4509c8         or r8d, r9d
0x0000358e      4589d1         mov r9d, r10d                           ; ../coreutils-8.31/lib/base32.c:-195
0x00003591      41c0f903       sar r9b, 3
0x00003595      4509c8         or r8d, r9d
0x00003598      448840ff       mov byte [rax - 1], r8b
0x0000359c      48832901       sub qword [rcx], 1                      ; ../coreutils-8.31/lib/base32.c:-210
0x000035a0      0fb67f07       movzx edi, byte [rdi + 7]
0x000035a4      4080ff3d       cmp dil, 0x3d
0x000035a8      7426           je 0x35d0
0x000035aa      0fb6343e       movzx esi, byte [rsi + rdi]
0x000035ae      4084f6         test sil, sil
0x000035b1      7833           js 0x35e6
0x000035b3      48833900       cmp qword [rcx], 0
0x000035b7      7417           je 0x35d0
0x000035b9      41c1e205       shl r10d, 5
0x000035bd      4883c001       add rax, 1
0x000035c1      4109f2         or r10d, esi
0x000035c4      448850ff       mov byte [rax - 1], r10b
0x000035c8      48832901       sub qword [rcx], 1
0x000035cc      0f1f4000       nop dword [rax]
0x000035d0      488902         mov qword [rdx], rax
0x000035d3      b801000000     mov eax, 1
0x000035d8      f3c3           ret
0x000035da      660f1f440000   nop word [rax + rax]
0x000035e0      807f033d       cmp byte [rdi + 3], 0x3d
0x000035e4      740a           je 0x35f0
0x000035e6      488902         mov qword [rdx], rax
0x000035e9      31c0           xor eax, eax
0x000035eb      c3             ret
0x000035ec      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/base32.c:-568
0x000035f0      807f043d       cmp byte [rdi + 4], 0x3d
0x000035f4      75f0           jne 0x35e6                              ; ../coreutils-8.31/lib/base32.c:-565
0x000035f6      807f053d       cmp byte [rdi + 5], 0x3d
0x000035fa      75ea           jne 0x35e6                              ; ../coreutils-8.31/lib/base32.c:-561
0x000035fc      807f063d       cmp byte [rdi + 6], 0x3d
0x00003600      75e4           jne 0x35e6
0x00003602      807f073d       cmp byte [rdi + 7], 0x3d                ; ../coreutils-8.31/lib/base32.c:-559
0x00003606      75de           jne 0x35e6                              ; ../coreutils-8.31/lib/base32.c:-563
0x00003608      ebc6           jmp 0x35d0
0x0000360a      660f1f440000   nop word [rax + rax]
;-- base32_encode:
0x00003610      4c8d05c94700.  lea r8, obj.b32str.3066                 ; 0x7de0 ; "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x1a\x1b\x1c\x1d\x1e\x1f\xff\xff\xff\xff\xff\xff\xff\xff\xff"
0x00003617      e91f010000     jmp 0x373b
0x0000361c      0f1f4000       nop dword [rax]
0x00003620      440fb64f01     movzx r9d, byte [rdi + 1]
0x00003625      4589ca         mov r10d, r9d
0x00003628      41c0ea06       shr r10b, 6
0x0000362c      4401d0         add eax, r10d
0x0000362f      83e01f         and eax, 0x1f
0x00003632      4883f902       cmp rcx, 2
0x00003636      410fb60400     movzx eax, byte [r8 + rax]
0x0000363b      884201         mov byte [rdx + 1], al
0x0000363e      0f84a1010000   je 0x37e5
0x00003644      4489c8         mov eax, r9d
0x00003647      d0e8           shr al, 1                               ; ../coreutils-8.31/lib/base32.c:-546
0x00003649      83e01f         and eax, 0x1f
0x0000364c      4883f903       cmp rcx, 3
0x00003650      410fb60400     movzx eax, byte [r8 + rax]
0x00003655      884202         mov byte [rdx + 2], al                  ; ../coreutils-8.31/lib/base32.c:-587
0x00003658      0f8487010000   je 0x37e5
0x0000365e      41c1e104       shl r9d, 4
0x00003662      4883fe02       cmp rsi, 2
0x00003666      0f8464010000   je 0x37d0
0x0000366c      0fb64702       movzx eax, byte [rdi + 2]
0x00003670      4189c2         mov r10d, eax
0x00003673      41c0ea04       shr r10b, 4
0x00003677      4501d1         add r9d, r10d
0x0000367a      4183e11f       and r9d, 0x1f                           ; ../coreutils-8.31/lib/base32.c:-539
0x0000367e      4883f904       cmp rcx, 4
0x00003682      470fb60c08     movzx r9d, byte [r8 + r9]
0x00003687      44884a03       mov byte [rdx + 3], r9b
0x0000368b      0f8454010000   je 0x37e5
0x00003691      4883fe03       cmp rsi, 3
0x00003695      448d0c00       lea r9d, [rax + rax]
0x00003699      0f8451010000   je 0x37f0
0x0000369f      0fb64703       movzx eax, byte [rdi + 3]
0x000036a3      4189c2         mov r10d, eax
0x000036a6      41c0ea07       shr r10b, 7
0x000036aa      4501d1         add r9d, r10d                           ; ../coreutils-8.31/lib/base32.c:-532
0x000036ad      4183e11f       and r9d, 0x1f
0x000036b1      4883f905       cmp rcx, 5
0x000036b5      470fb60c08     movzx r9d, byte [r8 + r9]
0x000036ba      44884a04       mov byte [rdx + 4], r9b
0x000036be      0f8421010000   je 0x37e5
0x000036c4      4189c1         mov r9d, eax
0x000036c7      41c0e902       shr r9b, 2
0x000036cb      4183e11f       and r9d, 0x1f
0x000036cf      4883f906       cmp rcx, 6
0x000036d3      470fb60c08     movzx r9d, byte [r8 + r9]
0x000036d8      44884a05       mov byte [rdx + 5], r9b
0x000036dc      0f8403010000   je 0x37e5
0x000036e2      c1e003         shl eax, 3
0x000036e5      4883fe04       cmp rsi, 4                              ; ../coreutils-8.31/lib/base32.c:-521
0x000036e9      0f8419010000   je 0x3808
0x000036ef      440fb64f04     movzx r9d, byte [rdi + 4]
0x000036f4      4589ca         mov r10d, r9d
0x000036f7      41c0ea05       shr r10b, 5
0x000036fb      4401d0         add eax, r10d
0x000036fe      83e01f         and eax, 0x1f
0x00003701      4883f907       cmp rcx, 7
0x00003705      410fb60400     movzx eax, byte [r8 + rax]
0x0000370a      884206         mov byte [rdx + 6], al
0x0000370d      0f84d2000000   je 0x37e5
0x00003713      4183e11f       and r9d, 0x1f
0x00003717      4883f908       cmp rcx, 8
0x0000371b      430fb60408     movzx eax, byte [r8 + r9]
0x00003720      884207         mov byte [rdx + 7], al
0x00003723      0f84bc000000   je 0x37e5
0x00003729      4883ee05       sub rsi, 5
0x0000372d      7404           je 0x3733
0x0000372f      4883c705       add rdi, 5                              ; ../coreutils-8.31/lib/base32.c:-565
0x00003733      4883c208       add rdx, 8                              ; ../coreutils-8.31/lib/base32.c:-568
0x00003737      4883e908       sub rcx, 8
0x0000373b      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/base32.c:-565
0x0000373e      0f84dc000000   je 0x3820
0x00003744      4885c9         test rcx, rcx
0x00003747      0f84d3000000   je 0x3820                               ; ../coreutils-8.31/lib/base32.c:-551
0x0000374d      0fb607         movzx eax, byte [rdi]
0x00003750      4189c1         mov r9d, eax
0x00003753      41c0e903       shr r9b, 3
0x00003757      4183e11f       and r9d, 0x1f
0x0000375b      4883f901       cmp rcx, 1                              ; ../coreutils-8.31/lib/base32.c:-537
0x0000375f      470fb60c08     movzx r9d, byte [r8 + r9]               ; ../coreutils-8.31/lib/base32.c:-541
0x00003764      44880a         mov byte [rdx], r9b
0x00003767      747c           je 0x37e5
0x00003769      c1e002         shl eax, 2                              ; ../coreutils-8.31/lib/base32.c:-535
0x0000376c      4883fe01       cmp rsi, 1
0x00003770      0f85aafeffff   jne 0x3620
0x00003776      83e01c         and eax, 0x1c
0x00003779      4883f902       cmp rcx, 2
0x0000377d      410fb60400     movzx eax, byte [r8 + rax]
0x00003782      884201         mov byte [rdx + 1], al
0x00003785      745e           je 0x37e5
0x00003787      4883f903       cmp rcx, 3
0x0000378b      c642023d       mov byte [rdx + 2], 0x3d                ; '='
                                                                       ; [0x3d:1]=0
0x0000378f      7454           je 0x37e5
0x00003791      4883f904       cmp rcx, 4
0x00003795      c642033d       mov byte [rdx + 3], 0x3d                ; '='
                                                                       ; [0x3d:1]=0
0x00003799      744a           je 0x37e5                               ; ../coreutils-8.31/lib/base32.c:-551
0x0000379b      4883f905       cmp rcx, 5                              ; ../coreutils-8.31/lib/base32.c:-516
0x0000379f      c642043d       mov byte [rdx + 4], 0x3d                ; '='
                                                                       ; [0x3d:1]=0
0x000037a3      7440           je 0x37e5
0x000037a5      4883f906       cmp rcx, 6
0x000037a9      c642053d       mov byte [rdx + 5], 0x3d                ; '='
                                                                       ; [0x3d:1]=0
0x000037ad      7436           je 0x37e5
0x000037af      4883f907       cmp rcx, 7
0x000037b3      c642063d       mov byte [rdx + 6], 0x3d                ; '='
                                                                       ; [0x3d:1]=0
0x000037b7      742c           je 0x37e5
0x000037b9      4883f908       cmp rcx, 8
0x000037bd      c642073d       mov byte [rdx + 7], 0x3d                ; '='
                                                                       ; [0x3d:1]=0
0x000037c1      7422           je 0x37e5                               ; ../coreutils-8.31/lib/base32.c:-529
0x000037c3      31f6           xor esi, esi
0x000037c5      e969ffffff     jmp 0x3733                              ; ../coreutils-8.31/lib/base32.c:-535
0x000037ca      660f1f440000   nop word [rax + rax]
0x000037d0      4183e11f       and r9d, 0x1f
0x000037d4      4883f904       cmp rcx, 4
0x000037d8      4d63c9         movsxd r9, r9d
0x000037db      430fb60408     movzx eax, byte [r8 + r9]               ; ../coreutils-8.31/lib/base32.c:-517
0x000037e0      884203         mov byte [rdx + 3], al
0x000037e3      75b6           jne 0x379b
0x000037e5      c3             ret
0x000037e6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/base32.c:-503
0x000037f0      4183e11e       and r9d, 0x1e
0x000037f4      4883f905       cmp rcx, 5
0x000037f8      430fb60408     movzx eax, byte [r8 + r9]
0x000037fd      884204         mov byte [rdx + 4], al
0x00003800      75a3           jne 0x37a5
0x00003802      f3c3           ret
0x00003804      0f1f4000       nop dword [rax]
0x00003808      83e018         and eax, 0x18
0x0000380b      4883f907       cmp rcx, 7
0x0000380f      410fb60400     movzx eax, byte [r8 + rax]
0x00003814      884206         mov byte [rdx + 6], al
0x00003817      74cc           je 0x37e5
0x00003819      eb9e           jmp 0x37b9
0x0000381b      0f1f440000     nop dword [rax + rax]
0x00003820      4885c9         test rcx, rcx
0x00003823      74c0           je 0x37e5
0x00003825      c60200         mov byte [rdx], 0
0x00003828      c3             ret
0x00003829      0f1f80000000.  nop dword [rax]
;-- base32_encode_alloc:
0x00003830      4156           push r14
0x00003832      4155           push r13
0x00003834      4989d5         mov r13, rdx
0x00003837      488d5604       lea rdx, [rsi + 4]
0x0000383b      4154           push r12
0x0000383d      55             push rbp
0x0000383e      53             push rbx
0x0000383f      48bbcdcccccc.  movabs rbx, 0xcccccccccccccccd
0x00003849      4889d0         mov rax, rdx
0x0000384c      48f7e3         mul rbx
0x0000384f      48c1ea02       shr rdx, 2
0x00003853      488d1cd50000.  lea rbx, [rdx*8]                        ; ../coreutils-8.31/lib/base32.c:-482
0x0000385b      488d6b01       lea rbp, [rbx + 1]
0x0000385f      4839ee         cmp rsi, rbp
0x00003862      761c           jbe 0x3880
0x00003864      49c745000000.  mov qword [r13], 0
0x0000386c      31ed           xor ebp, ebp
0x0000386e      5b             pop rbx
0x0000386f      4889e8         mov rax, rbp
0x00003872      5d             pop rbp
0x00003873      415c           pop r12
0x00003875      415d           pop r13                                 ; ../coreutils-8.31/lib/base32.c:-483
0x00003877      415e           pop r14
0x00003879      c3             ret
0x0000387a      660f1f440000   nop word [rax + rax]
0x00003880      4989fe         mov r14, rdi
0x00003883      4889ef         mov rdi, rbp
0x00003886      4989f4         mov r12, rsi
0x00003889      e8f2deffff     call sym.imp.malloc
0x0000388e      4885c0         test rax, rax
0x00003891      49894500       mov qword [r13], rax                    ; ../coreutils-8.31/lib/base32.c:-299
0x00003895      74d7           je 0x386e
0x00003897      4889e9         mov rcx, rbp
0x0000389a      4889c2         mov rdx, rax
0x0000389d      4889dd         mov rbp, rbx
0x000038a0      4c89e6         mov rsi, r12
0x000038a3      4c89f7         mov rdi, r14
0x000038a6      e865fdffff     call sym.base32_encode
0x000038ab      5b             pop rbx
0x000038ac      4889e8         mov rax, rbp
0x000038af      5d             pop rbp
0x000038b0      415c           pop r12
0x000038b2      415d           pop r13
0x000038b4      415e           pop r14
0x000038b6      c3             ret
0x000038b7      660f1f840000.  nop word [rax + rax]
;-- isbase32:
0x000038c0      488d05394500.  lea rax, obj.b32                        ; 0x7e00
0x000038c7      400fb6ff       movzx edi, dil
0x000038cb      0fb60438       movzx eax, byte [rax + rdi]
0x000038cf      f7d0           not eax
0x000038d1      c0e807         shr al, 7
0x000038d4      c3             ret
0x000038d5      90             nop
0x000038d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- base32_decode_ctx_init:
0x000038e0      c70700000000   mov dword [rdi], 0
0x000038e6      c3             ret
0x000038e7      660f1f840000.  nop word [rax + rax]
;-- base32_decode_ctx:
0x000038f0      4157           push r15                                ; ../coreutils-8.31/lib/base32.c:-431
0x000038f2      4156           push r14
0x000038f4      4989d3         mov r11, rdx
0x000038f7      4155           push r13
0x000038f9      4154           push r12
0x000038fb      4989fe         mov r14, rdi
0x000038fe      55             push rbp
0x000038ff      53             push rbx
0x00003900      4989f4         mov r12, rsi
0x00003903      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/base32.c:-283
0x00003907      4d8b38         mov r15, qword [r8]
0x0000390a      64488b1c2528.  mov rbx, qword fs:[0x28]
0x00003913      48895c2428     mov qword [rsp + 0x28], rbx
0x00003918      31db           xor ebx, ebx
0x0000391a      4885ff         test rdi, rdi
0x0000391d      48894c2418     mov qword [rsp + 0x18], rcx
0x00003922      4c89442410     mov qword [rsp + 0x10], r8
0x00003927      4c897c2420     mov qword [rsp + 0x20], r15
0x0000392c      0f95442407     setne byte [rsp + 7]
0x00003931      0f8429020000   je 0x3b60
0x00003937      4885d2         test rdx, rdx
0x0000393a      8b17           mov edx, dword [rdi]
0x0000393c      0f95442406     setne byte [rsp + 6]
0x00003941      0fb6442406     movzx eax, byte [rsp + 6]
0x00003946      85d2           test edx, edx
0x00003948      410f94c5       sete r13b
0x0000394c      4121c5         and r13d, eax
0x0000394f      498d4604       lea rax, [r14 + 4]
0x00003953      488d6c2420     lea rbp, [rsp + 0x20]
0x00003958      488d5c2418     lea rbx, [rsp + 0x18]
0x0000395d      4889442408     mov qword [rsp + 8], rax
0x00003962      4584ed         test r13b, r13b
0x00003965      4c89fa         mov rdx, r15
0x00003968      0f85cf000000   jne 0x3a3d                              ; ../coreutils-8.31/lib/base32.c:-235
0x0000396e      4d85db         test r11, r11
0x00003971      0f94c0         sete al
0x00003974      22442406       and al, byte [rsp + 6]
0x00003978      0f8582000000   jne 0x3a00
0x0000397e      4d85db         test r11, r11                           ; ../coreutils-8.31/lib/base32.c:-232
0x00003981      0f84d9000000   je 0x3a60
0x00003987      41803c240a     cmp byte [r12], 0xa
0x0000398c      0f849e010000   je 0x3b30
0x00003992      4c29fa         sub rdx, r15
0x00003995      4801542418     add qword [rsp + 0x18], rdx
0x0000399a      4d85f6         test r14, r14
0x0000399d      4c897c2420     mov qword [rsp + 0x20], r15
0x000039a2      4f8d3c1c       lea r15, [r12 + r11]
0x000039a6      0f85cd000000   jne 0x3a79
0x000039ac      4c89e7         mov rdi, r12
0x000039af      4983fb07       cmp r11, 7
0x000039b3      7712           ja 0x39c7
0x000039b5      807c240700     cmp byte [rsp + 7], 0
0x000039ba      740b           je 0x39c7
0x000039bc      807c240600     cmp byte [rsp + 6], 0
0x000039c1      0f8500010000   jne 0x3ac7
0x000039c7      4889e9         mov rcx, rbp
0x000039ca      4889da         mov rdx, rbx
0x000039cd      4c89de         mov rsi, r11
0x000039d0      e88bfaffff     call sym.decode_8
0x000039d5      84c0           test al, al
0x000039d7      0f84b2010000   je 0x3b8f
0x000039dd      4d89fb         mov r11, r15
0x000039e0      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x000039e5      4d29e3         sub r11, r12
0x000039e8      4584ed         test r13b, r13b
0x000039eb      4c89fa         mov rdx, r15
0x000039ee      754d           jne 0x3a3d
0x000039f0      4d85db         test r11, r11
0x000039f3      0f94c0         sete al
0x000039f6      22442406       and al, byte [rsp + 6]
0x000039fa      7482           je 0x397e
0x000039fc      0f1f4000       nop dword [rax]
0x00003a00      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00003a05      482913         sub qword [rbx], rdx
0x00003a08      488b5c2428     mov rbx, qword [rsp + 0x28]
0x00003a0d      6448331c2528.  xor rbx, qword fs:[0x28]
0x00003a16      0f857d010000   jne 0x3b99
0x00003a1c      4883c438       add rsp, 0x38
0x00003a20      5b             pop rbx
0x00003a21      5d             pop rbp
0x00003a22      415c           pop r12                                 ; ../coreutils-8.31/lib/base32.c:-459
0x00003a24      415d           pop r13
0x00003a26      415e           pop r14                                 ; ../coreutils-8.31/lib/base32.c:-444
0x00003a28      415f           pop r15
0x00003a2a      c3             ret
0x00003a2b      0f1f440000     nop dword [rax + rax]
0x00003a30      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x00003a35      4983c408       add r12, 8
0x00003a39      4983eb08       sub r11, 8
0x00003a3d      4889e9         mov rcx, rbp
0x00003a40      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/base32.c:-439
0x00003a43      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/base32.c:-438
0x00003a46      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/base32.c:-439
0x00003a49      e812faffff     call sym.decode_8
0x00003a4e      84c0           test al, al                             ; ../coreutils-8.31/lib/base32.c:-438
0x00003a50      75de           jne 0x3a30
0x00003a52      488b542420     mov rdx, qword [rsp + 0x20]             ; ../coreutils-8.31/lib/base32.c:-444
0x00003a57      e912ffffff     jmp 0x396e                              ; ../coreutils-8.31/lib/base32.c:-432
0x00003a5c      0f1f4000       nop dword [rax]
0x00003a60      4c29fa         sub rdx, r15
0x00003a63      4801542418     add qword [rsp + 0x18], rdx
0x00003a68      4d85f6         test r14, r14
0x00003a6b      4c897c2420     mov qword [rsp + 0x20], r15
0x00003a70      0f84fa000000   je 0x3b70
0x00003a76      4d89e7         mov r15, r12
0x00003a79      418b06         mov eax, dword [r14]
0x00003a7c      83f808         cmp eax, 8
0x00003a7f      745f           je 0x3ae0
0x00003a81      85c0           test eax, eax                           ; ../coreutils-8.31/lib/base32.c:-461
0x00003a83      7462           je 0x3ae7
0x00003a85      4d39fc         cmp r12, r15
0x00003a88      732c           jae 0x3ab6                              ; ../coreutils-8.31/lib/base32.c:-456
0x00003a8a      660f1f440000   nop word [rax + rax]
0x00003a90      4983c401       add r12, 1
0x00003a94      410fb65424ff   movzx edx, byte [r12 - 1]
0x00003a9a      80fa0a         cmp dl, 0xa
0x00003a9d      7412           je 0x3ab1
0x00003a9f      8d4801         lea ecx, [rax + 1]
0x00003aa2      83f908         cmp ecx, 8
0x00003aa5      41890e         mov dword [r14], ecx
0x00003aa8      4188540604     mov byte [r14 + rax + 4], dl
0x00003aad      7461           je 0x3b10
0x00003aaf      89c8           mov eax, ecx
0x00003ab1      4d39fc         cmp r12, r15                            ; ../coreutils-8.31/lib/base32.c:-438
0x00003ab4      75da           jne 0x3a90
0x00003ab6      4189c3         mov r11d, eax                           ; ../coreutils-8.31/lib/base32.c:-431
0x00003ab9      488b7c2408     mov rdi, qword [rsp + 8]
0x00003abe      4d85db         test r11, r11                           ; ../coreutils-8.31/lib/base32.c:-240
0x00003ac1      0f85e8feffff   jne 0x39af
0x00003ac7      488b542420     mov rdx, qword [rsp + 0x20]
0x00003acc      b801000000     mov eax, 1
0x00003ad1      e92affffff     jmp 0x3a00                              ; ../coreutils-8.31/lib/base32.c:-263
0x00003ad6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/base32.c:-261
0x00003ae0      41c706000000.  mov dword [r14], 0
0x00003ae7      4983fb07       cmp r11, 7
0x00003aeb      7e17           jle 0x3b04
0x00003aed      ba08000000     mov edx, 8
0x00003af2      be0a000000     mov esi, 0xa
0x00003af7      4c89e7         mov rdi, r12
0x00003afa      e811dcffff     call sym.imp.memchr
0x00003aff      4885c0         test rax, rax
0x00003b02      7479           je 0x3b7d
0x00003b04      418b06         mov eax, dword [r14]
0x00003b07      e979ffffff     jmp 0x3a85
0x00003b0c      0f1f4000       nop dword [rax]
0x00003b10      b808000000     mov eax, 8
0x00003b15      488b7c2408     mov rdi, qword [rsp + 8]
0x00003b1a      4189c3         mov r11d, eax
0x00003b1d      4d85db         test r11, r11
0x00003b20      0f8589feffff   jne 0x39af
0x00003b26      eb9f           jmp 0x3ac7
0x00003b28      0f1f84000000.  nop dword [rax + rax]
0x00003b30      4d85f6         test r14, r14
0x00003b33      7413           je 0x3b48
0x00003b35      4983c401       add r12, 1
0x00003b39      4983eb01       sub r11, 1
0x00003b3d      4989d7         mov r15, rdx
0x00003b40      e91dfeffff     jmp 0x3962
0x00003b45      0f1f00         nop dword [rax]
0x00003b48      4c29fa         sub rdx, r15
0x00003b4b      4c897c2420     mov qword [rsp + 0x20], r15
0x00003b50      4801542418     add qword [rsp + 0x18], rdx
0x00003b55      4f8d3c1c       lea r15, [r12 + r11]
0x00003b59      e94efeffff     jmp 0x39ac
0x00003b5e      6690           nop
0x00003b60      41bd01000000   mov r13d, 1
0x00003b66      c644240601     mov byte [rsp + 6], 1
0x00003b6b      e9dffdffff     jmp 0x394f
0x00003b70      4c89fa         mov rdx, r15
0x00003b73      b801000000     mov eax, 1
0x00003b78      e983feffff     jmp 0x3a00
0x00003b7d      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/base32.c:-200
0x00003b80      41bb08000000   mov r11d, 8
0x00003b86      4983c408       add r12, 8
0x00003b8a      e938feffff     jmp 0x39c7                              ; ../coreutils-8.31/lib/base32.c:-196
0x00003b8f      488b542420     mov rdx, qword [rsp + 0x20]
0x00003b94      e967feffff     jmp 0x3a00
0x00003b99      e8c2daffff     call sym.imp.__stack_chk_fail
0x00003b9e      6690           nop
;-- base32_decode_alloc_ctx:
0x00003ba0      4156           push r14
0x00003ba2      4155           push r13
0x00003ba4      4989d6         mov r14, rdx                            ; ../coreutils-8.31/lib/base32.c:-189
0x00003ba7      4154           push r12
0x00003ba9      55             push rbp                                ; ../coreutils-8.31/lib/base32.c:-188
0x00003baa      4989fc         mov r12, rdi
0x00003bad      53             push rbx
0x00003bae      4989f5         mov r13, rsi
0x00003bb1      4889cb         mov rbx, rcx
0x00003bb4      4c89c5         mov rbp, r8
0x00003bb7      4883ec20       sub rsp, 0x20
0x00003bbb      64488b042528.  mov rax, qword fs:[0x28]
0x00003bc4      4889442418     mov qword [rsp + 0x18], rax
0x00003bc9      31c0           xor eax, eax
0x00003bcb      4889d0         mov rax, rdx
0x00003bce      48c1e803       shr rax, 3
0x00003bd2      488d7c8005     lea rdi, [rax + rax*4 + 5]
0x00003bd7      48897c2410     mov qword [rsp + 0x10], rdi
0x00003bdc      e89fdbffff     call sym.imp.malloc
0x00003be1      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/base32.c:-194
0x00003be4      488903         mov qword [rbx], rax
0x00003be7      742f           je 0x3c18
0x00003be9      4c8d442410     lea r8, [rsp + 0x10]
0x00003bee      4889c1         mov rcx, rax
0x00003bf1      4c89f2         mov rdx, r14
0x00003bf4      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/base32.c:-192
0x00003bf7      4c89e7         mov rdi, r12
0x00003bfa      e8f1fcffff     call sym.base32_decode_ctx
0x00003bff      84c0           test al, al
0x00003c01      743d           je 0x3c40
0x00003c03      4885ed         test rbp, rbp
0x00003c06      7410           je 0x3c18
0x00003c08      488b542410     mov rdx, qword [rsp + 0x10]
0x00003c0d      48895500       mov qword [rbp], rdx
0x00003c11      eb0a           jmp 0x3c1d
0x00003c13      0f1f440000     nop dword [rax + rax]
0x00003c18      b801000000     mov eax, 1
0x00003c1d      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00003c22      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003c2b      752d           jne 0x3c5a
0x00003c2d      4883c420       add rsp, 0x20
0x00003c31      5b             pop rbx
0x00003c32      5d             pop rbp
0x00003c33      415c           pop r12
0x00003c35      415d           pop r13
0x00003c37      415e           pop r14
0x00003c39      c3             ret
0x00003c3a      660f1f440000   nop word [rax + rax]
0x00003c40      488b3b         mov rdi, qword [rbx]
0x00003c43      8844240f       mov byte [rsp + 0xf], al
0x00003c47      e844d9ffff     call sym.imp.free
0x00003c4c      48c703000000.  mov qword [rbx], 0
0x00003c53      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003c58      ebc3           jmp 0x3c1d
0x00003c5a      e801daffff     call sym.imp.__stack_chk_fail
0x00003c5f      90             nop
;-- decode_4:
0x00003c60      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/base64.c:405
0x00003c62      4883fe01       cmp rsi, 1                              ; ../coreutils-8.31/lib/base64.c:407
0x00003c66      0f868d000000   jbe 0x3cf9
0x00003c6c      440fb607       movzx r8d, byte [rdi]                   ; ../coreutils-8.31/lib/base64.c:331
0x00003c70      4c8d0d894200.  lea r9, obj.b64                         ; ../coreutils-8.31/lib/base64.c:282 ; 0x7f00
0x00003c77      470fb60401     movzx r8d, byte [r9 + r8]
0x00003c7c      4584c0         test r8b, r8b
0x00003c7f      7878           js 0x3cf9
0x00003c81      440fb65701     movzx r10d, byte [rdi + 1]
0x00003c86      470fb61411     movzx r10d, byte [r9 + r10]             ; ../coreutils-8.31/lib/base64.c:167
0x00003c8b      4584d2         test r10b, r10b
0x00003c8e      7869           js 0x3cf9
0x00003c90      48833900       cmp qword [rcx], 0
0x00003c94      488b02         mov rax, qword [rdx]                    ; ../coreutils-8.31/lib/base64.c:52
0x00003c97      7577           jne 0x3d10
0x00003c99      4883fe02       cmp rsi, 2
0x00003c9d      7467           je 0x3d06
0x00003c9f      440fb64702     movzx r8d, byte [rdi + 2]
0x00003ca4      4180f83d       cmp r8b, 0x3d
0x00003ca8      7456           je 0x3d00
0x00003caa      470fb60401     movzx r8d, byte [r9 + r8]
0x00003caf      4584c0         test r8b, r8b
0x00003cb2      7852           js 0x3d06
0x00003cb4      48833900       cmp qword [rcx], 0
0x00003cb8      7576           jne 0x3d30
0x00003cba      4883fe03       cmp rsi, 3
0x00003cbe      7446           je 0x3d06
0x00003cc0      0fb67f03       movzx edi, byte [rdi + 3]
0x00003cc4      4080ff3d       cmp dil, 0x3d
0x00003cc8      0f8492000000   je 0x3d60
0x00003cce      410fb63439     movzx esi, byte [r9 + rdi]
0x00003cd3      4084f6         test sil, sil
0x00003cd6      782e           js 0x3d06
0x00003cd8      48833900       cmp qword [rcx], 0
0x00003cdc      7413           je 0x3cf1
0x00003cde      41c1e006       shl r8d, 6
0x00003ce2      4883c001       add rax, 1                              ; ../coreutils-8.31/lib/base64.c:7
0x00003ce6      4109f0         or r8d, esi
0x00003ce9      448840ff       mov byte [rax - 1], r8b
0x00003ced      48832901       sub qword [rcx], 1
0x00003cf1      488902         mov qword [rdx], rax
0x00003cf4      b801000000     mov eax, 1
0x00003cf9      f3c3           ret
0x00003cfb      0f1f440000     nop dword [rax + rax]
0x00003d00      4883fe04       cmp rsi, 4
0x00003d04      744a           je 0x3d50
0x00003d06      488902         mov qword [rdx], rax
0x00003d09      31c0           xor eax, eax
0x00003d0b      c3             ret
0x00003d0c      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/base64.c:18
0x00003d10      4589d3         mov r11d, r10d
0x00003d13      41c1e002       shl r8d, 2
0x00003d17      4883c001       add rax, 1
0x00003d1b      41c0fb04       sar r11b, 4
0x00003d1f      4509d8         or r8d, r11d
0x00003d22      448840ff       mov byte [rax - 1], r8b
0x00003d26      48832901       sub qword [rcx], 1
0x00003d2a      e96affffff     jmp 0x3c99
0x00003d2f      90             nop
0x00003d30      4589c3         mov r11d, r8d
0x00003d33      41c1e204       shl r10d, 4
0x00003d37      4883c001       add rax, 1
0x00003d3b      41c0fb02       sar r11b, 2
0x00003d3f      4509da         or r10d, r11d
0x00003d42      448850ff       mov byte [rax - 1], r10b
0x00003d46      48832901       sub qword [rcx], 1
0x00003d4a      e96bffffff     jmp 0x3cba
0x00003d4f      90             nop
0x00003d50      807f033d       cmp byte [rdi + 3], 0x3d
0x00003d54      75b0           jne 0x3d06                              ; ../coreutils-8.31/lib/base64.c:-351
0x00003d56      eb99           jmp 0x3cf1
0x00003d58      0f1f84000000.  nop dword [rax + rax]
0x00003d60      4883fe04       cmp rsi, 4
0x00003d64      75a0           jne 0x3d06
0x00003d66      eb89           jmp 0x3cf1                              ; ../coreutils-8.31/lib/base64.c:-298
0x00003d68      0f1f84000000.  nop dword [rax + rax]
;-- base64_encode:
0x00003d70      f6c103         test cl, 3
0x00003d73      7514           jne 0x3d89
0x00003d75      4889c8         mov rax, rcx
0x00003d78      48c1e802       shr rax, 2                              ; ../coreutils-8.31/lib/base64.c:-294
0x00003d7c      488d0440       lea rax, [rax + rax*2]                  ; ../coreutils-8.31/lib/base64.c:-293
0x00003d80      4839f0         cmp rax, rsi
0x00003d83      0f840f010000   je 0x3e98
0x00003d89      4c8d0d704200.  lea r9, obj.b64c                        ; 0x8000 ; "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/%s: %s"
0x00003d90      e981000000     jmp 0x3e16
0x00003d95      0f1f00         nop dword [rax]
0x00003d98      440fb64701     movzx r8d, byte [rdi + 1]               ; ../coreutils-8.31/lib/base64.c:-290
0x00003d9d      4589c2         mov r10d, r8d
0x00003da0      41c0ea04       shr r10b, 4
0x00003da4      4401d0         add eax, r10d
0x00003da7      83e03f         and eax, 0x3f
0x00003daa      4883f902       cmp rcx, 2
0x00003dae      410fb60401     movzx eax, byte [r9 + rax]              ; ../coreutils-8.31/lib/base64.c:-287
0x00003db3      884201         mov byte [rdx + 1], al
0x00003db6      0f84d6000000   je 0x3e92
0x00003dbc      41c1e002       shl r8d, 2
0x00003dc0      4883fe02       cmp rsi, 2                              ; ../coreutils-8.31/lib/base64.c:-283
0x00003dc4      0f84b6000000   je 0x3e80
0x00003dca      0fb64702       movzx eax, byte [rdi + 2]
0x00003dce      4189c2         mov r10d, eax
0x00003dd1      41c0ea06       shr r10b, 6
0x00003dd5      4501d0         add r8d, r10d
0x00003dd8      4183e03f       and r8d, 0x3f
0x00003ddc      4883f903       cmp rcx, 3
0x00003de0      470fb60401     movzx r8d, byte [r9 + r8]
0x00003de5      44884202       mov byte [rdx + 2], r8b
0x00003de9      0f84a3000000   je 0x3e92
0x00003def      83e03f         and eax, 0x3f
0x00003df2      4883f904       cmp rcx, 4                              ; ../coreutils-8.31/lib/base64.c:-303
0x00003df6      410fb60401     movzx eax, byte [r9 + rax]              ; ../coreutils-8.31/lib/base64.c:-304
0x00003dfb      884203         mov byte [rdx + 3], al
0x00003dfe      0f848e000000   je 0x3e92                               ; ../coreutils-8.31/lib/base64.c:-303
0x00003e04      4883ee03       sub rsi, 3
0x00003e08      7404           je 0x3e0e
0x00003e0a      4883c703       add rdi, 3
0x00003e0e      4883c204       add rdx, 4
0x00003e12      4883e904       sub rcx, 4
0x00003e16      4885f6         test rsi, rsi
0x00003e19      0f84f9000000   je 0x3f18
0x00003e1f      4885c9         test rcx, rcx
0x00003e22      0f84f0000000   je 0x3f18                               ; ../coreutils-8.31/lib/base64.c:-296
0x00003e28      0fb607         movzx eax, byte [rdi]                   ; ../coreutils-8.31/lib/base64.c:-287
0x00003e2b      4189c0         mov r8d, eax
0x00003e2e      41c0e802       shr r8b, 2
0x00003e32      4183e03f       and r8d, 0x3f
0x00003e36      4883f901       cmp rcx, 1
0x00003e3a      470fb60401     movzx r8d, byte [r9 + r8]
0x00003e3f      448802         mov byte [rdx], r8b
0x00003e42      744e           je 0x3e92
0x00003e44      c1e004         shl eax, 4                              ; ../coreutils-8.31/lib/base64.c:-296
0x00003e47      4883fe01       cmp rsi, 1
0x00003e4b      0f8547ffffff   jne 0x3d98
0x00003e51      83e030         and eax, 0x30
0x00003e54      4883f902       cmp rcx, 2                              ; ../coreutils-8.31/lib/base64.c:-339
0x00003e58      410fb60401     movzx eax, byte [r9 + rax]
0x00003e5d      884201         mov byte [rdx + 1], al
0x00003e60      7430           je 0x3e92
0x00003e62      4883f903       cmp rcx, 3
0x00003e66      c642023d       mov byte [rdx + 2], 0x3d                ; '='
                                                                       ; [0x3d:1]=0
0x00003e6a      7426           je 0x3e92
0x00003e6c      4883f904       cmp rcx, 4                              ; ../coreutils-8.31/lib/base64.c:-351
0x00003e70      c642033d       mov byte [rdx + 3], 0x3d                ; '='
                                                                       ; [0x3d:1]=0
0x00003e74      741c           je 0x3e92
0x00003e76      31f6           xor esi, esi
0x00003e78      eb94           jmp 0x3e0e
0x00003e7a      660f1f440000   nop word [rax + rax]
0x00003e80      4183e03c       and r8d, 0x3c
0x00003e84      4883f903       cmp rcx, 3
0x00003e88      430fb60401     movzx eax, byte [r9 + r8]
0x00003e8d      884202         mov byte [rdx + 2], al
0x00003e90      75da           jne 0x3e6c
0x00003e92      f3c3           ret
0x00003e94      0f1f4000       nop dword [rax]
0x00003e98      4885c0         test rax, rax
0x00003e9b      4c8d0407       lea r8, [rdi + rax]
0x00003e9f      488d0d5a4100.  lea rcx, obj.b64c                       ; 0x8000 ; "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/%s: %s"
0x00003ea6      74ea           je 0x3e92
0x00003ea8      0f1f84000000.  nop dword [rax + rax]
0x00003eb0      0fb607         movzx eax, byte [rdi]
0x00003eb3      4883c703       add rdi, 3
0x00003eb7      4883c204       add rdx, 4
0x00003ebb      89c6           mov esi, eax
0x00003ebd      c1e004         shl eax, 4
0x00003ec0      40c0ee02       shr sil, 2
0x00003ec4      83e63f         and esi, 0x3f                           ; ../coreutils-8.31/lib/base64.c:-339
0x00003ec7      0fb63431       movzx esi, byte [rcx + rsi]             ; ../coreutils-8.31/lib/base64.c:-334
0x00003ecb      408872fc       mov byte [rdx - 4], sil
0x00003ecf      0fb677fe       movzx esi, byte [rdi - 2]
0x00003ed3      4189f1         mov r9d, esi
0x00003ed6      41c0e904       shr r9b, 4
0x00003eda      4401c8         add eax, r9d
0x00003edd      83e03f         and eax, 0x3f                           ; ../coreutils-8.31/lib/base64.c:-278
0x00003ee0      0fb60401       movzx eax, byte [rcx + rax]
0x00003ee4      8842fd         mov byte [rdx - 3], al
0x00003ee7      0fb647ff       movzx eax, byte [rdi - 1]
0x00003eeb      4189c1         mov r9d, eax
0x00003eee      83e03f         and eax, 0x3f
0x00003ef1      41c0e906       shr r9b, 6
0x00003ef5      0fb60401       movzx eax, byte [rcx + rax]
0x00003ef9      418d34b1       lea esi, [r9 + rsi*4]
0x00003efd      83e63f         and esi, 0x3f
0x00003f00      0fb63431       movzx esi, byte [rcx + rsi]
0x00003f04      408872fe       mov byte [rdx - 2], sil
0x00003f08      4939f8         cmp r8, rdi
0x00003f0b      8842ff         mov byte [rdx - 1], al
0x00003f0e      75a0           jne 0x3eb0
0x00003f10      f3c3           ret
0x00003f12      660f1f440000   nop word [rax + rax]
0x00003f18      4885c9         test rcx, rcx
0x00003f1b      0f8471ffffff   je 0x3e92
0x00003f21      c60200         mov byte [rdx], 0
0x00003f24      c3             ret
0x00003f25      90             nop
0x00003f26      662e0f1f8400.  nop word cs:[rax + rax]
;-- base64_encode_alloc:
0x00003f30      4156           push r14
0x00003f32      4155           push r13
0x00003f34      4989d5         mov r13, rdx
0x00003f37      488d5602       lea rdx, [rsi + 2]
0x00003f3b      4154           push r12
0x00003f3d      55             push rbp
0x00003f3e      53             push rbx
0x00003f3f      48bbabaaaaaa.  movabs rbx, 0xaaaaaaaaaaaaaaab          ; ../coreutils-8.31/lib/base64.c:-243
0x00003f49      4889d0         mov rax, rdx
0x00003f4c      48f7e3         mul rbx
0x00003f4f      48d1ea         shr rdx, 1
0x00003f52      488d1c950000.  lea rbx, [rdx*4]
0x00003f5a      488d6b01       lea rbp, [rbx + 1]
0x00003f5e      4839ee         cmp rsi, rbp
0x00003f61      761d           jbe 0x3f80
0x00003f63      49c745000000.  mov qword [r13], 0
0x00003f6b      31ed           xor ebp, ebp
0x00003f6d      5b             pop rbx
0x00003f6e      4889e8         mov rax, rbp
0x00003f71      5d             pop rbp
0x00003f72      415c           pop r12
0x00003f74      415d           pop r13
0x00003f76      415e           pop r14
0x00003f78      c3             ret
0x00003f79      0f1f80000000.  nop dword [rax]
0x00003f80      4989fe         mov r14, rdi
0x00003f83      4889ef         mov rdi, rbp
0x00003f86      4989f4         mov r12, rsi
0x00003f89      e8f2d7ffff     call sym.imp.malloc
0x00003f8e      4885c0         test rax, rax
0x00003f91      49894500       mov qword [r13], rax
0x00003f95      74d6           je 0x3f6d
0x00003f97      4889e9         mov rcx, rbp
0x00003f9a      4889c2         mov rdx, rax
0x00003f9d      4889dd         mov rbp, rbx
0x00003fa0      4c89e6         mov rsi, r12
0x00003fa3      4c89f7         mov rdi, r14
0x00003fa6      e8c5fdffff     call sym.base64_encode
0x00003fab      5b             pop rbx
0x00003fac      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/base64.c:81
0x00003faf      5d             pop rbp
0x00003fb0      415c           pop r12
0x00003fb2      415d           pop r13
0x00003fb4      415e           pop r14
0x00003fb6      c3             ret
0x00003fb7      660f1f840000.  nop word [rax + rax]
;-- isbase64:
0x00003fc0      488d05393f00.  lea rax, obj.b64                        ; 0x7f00
0x00003fc7      400fb6ff       movzx edi, dil
0x00003fcb      0fb60438       movzx eax, byte [rax + rdi]
0x00003fcf      f7d0           not eax
0x00003fd1      c0e807         shr al, 7
0x00003fd4      c3             ret
0x00003fd5      90             nop
0x00003fd6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/base64.c:83
;-- base64_decode_ctx_init:
0x00003fe0      c70700000000   mov dword [rdi], 0
0x00003fe6      c3             ret
0x00003fe7      660f1f840000.  nop word [rax + rax]
;-- base64_decode_ctx:
0x00003ff0      4157           push r15
0x00003ff2      4156           push r14
0x00003ff4      4989fe         mov r14, rdi
0x00003ff7      4155           push r13
0x00003ff9      4154           push r12
0x00003ffb      4989d5         mov r13, rdx
0x00003ffe      55             push rbp
0x00003fff      53             push rbx
0x00004000      4989f4         mov r12, rsi
0x00004003      4883ec38       sub rsp, 0x38
0x00004007      4d8b38         mov r15, qword [r8]
0x0000400a      64488b1c2528.  mov rbx, qword fs:[0x28]
0x00004013      48895c2428     mov qword [rsp + 0x28], rbx
0x00004018      31db           xor ebx, ebx
0x0000401a      4885ff         test rdi, rdi
0x0000401d      48894c2418     mov qword [rsp + 0x18], rcx
0x00004022      4c89442410     mov qword [rsp + 0x10], r8
0x00004027      4c897c2420     mov qword [rsp + 0x20], r15
0x0000402c      0f95442407     setne byte [rsp + 7]
0x00004031      0f8429020000   je 0x4260
0x00004037      4885d2         test rdx, rdx
0x0000403a      8b07           mov eax, dword [rdi]
0x0000403c      0f95442405     setne byte [rsp + 5]
0x00004041      0fb65c2405     movzx ebx, byte [rsp + 5]
0x00004046      85c0           test eax, eax
0x00004048      0f94c0         sete al
0x0000404b      21d8           and eax, ebx
0x0000404d      88442406       mov byte [rsp + 6], al
0x00004051      498d4604       lea rax, [r14 + 4]
0x00004055      488d6c2420     lea rbp, [rsp + 0x20]
0x0000405a      488d5c2418     lea rbx, [rsp + 0x18]
0x0000405f      4889442408     mov qword [rsp + 8], rax
0x00004064      807c240600     cmp byte [rsp + 6], 0
0x00004069      4c89fa         mov rdx, r15
0x0000406c      0f85d3000000   jne 0x4145
0x00004072      4d85ed         test r13, r13
0x00004075      0f94c0         sete al
0x00004078      22442405       and al, byte [rsp + 5]
0x0000407c      0f8586000000   jne 0x4108
0x00004082      4d85ed         test r13, r13
0x00004085      0f84dd000000   je 0x4168
0x0000408b      41803c240a     cmp byte [r12], 0xa
0x00004090      0f849a010000   je 0x4230
0x00004096      4c29fa         sub rdx, r15
0x00004099      4801542418     add qword [rsp + 0x18], rdx
0x0000409e      4d85f6         test r14, r14
0x000040a1      4c897c2420     mov qword [rsp + 0x20], r15
0x000040a6      4f8d3c2c       lea r15, [r12 + r13]
0x000040aa      0f85d1000000   jne 0x4181
0x000040b0      4c89e7         mov rdi, r12
0x000040b3      4983fd03       cmp r13, 3
0x000040b7      7712           ja 0x40cb
0x000040b9      807c240700     cmp byte [rsp + 7], 0                   ; ../coreutils-8.31/lib/base64.c:27
0x000040be      740b           je 0x40cb
0x000040c0      807c240500     cmp byte [rsp + 5], 0
0x000040c5      0f8504010000   jne 0x41cf
0x000040cb      4889e9         mov rcx, rbp
0x000040ce      4889da         mov rdx, rbx
0x000040d1      4c89ee         mov rsi, r13
0x000040d4      e887fbffff     call sym.decode_4
0x000040d9      84c0           test al, al
0x000040db      0f84ad010000   je 0x428e
0x000040e1      4d29e7         sub r15, r12
0x000040e4      807c240600     cmp byte [rsp + 6], 0
0x000040e9      4d89fd         mov r13, r15
0x000040ec      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x000040f1      4c89fa         mov rdx, r15
0x000040f4      754f           jne 0x4145
0x000040f6      4d85ed         test r13, r13
0x000040f9      0f94c0         sete al
0x000040fc      22442405       and al, byte [rsp + 5]
0x00004100      7480           je 0x4082
0x00004102      660f1f440000   nop word [rax + rax]
0x00004108      488b5c2410     mov rbx, qword [rsp + 0x10]
0x0000410d      482913         sub qword [rbx], rdx
0x00004110      488b5c2428     mov rbx, qword [rsp + 0x28]
0x00004115      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000411e      0f8574010000   jne 0x4298
0x00004124      4883c438       add rsp, 0x38
0x00004128      5b             pop rbx
0x00004129      5d             pop rbp
0x0000412a      415c           pop r12                                 ; ../coreutils-8.31/lib/base64.c:-185
0x0000412c      415d           pop r13
0x0000412e      415e           pop r14
0x00004130      415f           pop r15
0x00004132      c3             ret                                     ; ../coreutils-8.31/lib/base64.c:-182
0x00004133      0f1f440000     nop dword [rax + rax]
0x00004138      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x0000413d      4983c404       add r12, 4
0x00004141      4983ed04       sub r13, 4                              ; ../coreutils-8.31/lib/base64.c:-165
0x00004145      4889e9         mov rcx, rbp
0x00004148      4889da         mov rdx, rbx
0x0000414b      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/base64.c:-164
0x0000414e      4c89e7         mov rdi, r12
0x00004151      e80afbffff     call sym.decode_4
0x00004156      84c0           test al, al                             ; ../coreutils-8.31/lib/base64.c:-162
0x00004158      75de           jne 0x4138
0x0000415a      488b542420     mov rdx, qword [rsp + 0x20]
0x0000415f      e90effffff     jmp 0x4072
0x00004164      0f1f4000       nop dword [rax]
0x00004168      4c29fa         sub rdx, r15
0x0000416b      4801542418     add qword [rsp + 0x18], rdx
0x00004170      4d85f6         test r14, r14
0x00004173      4c897c2420     mov qword [rsp + 0x20], r15
0x00004178      0f84f1000000   je 0x426f
0x0000417e      4d89e7         mov r15, r12
0x00004181      418b06         mov eax, dword [r14]
0x00004184      83f804         cmp eax, 4
0x00004187      7457           je 0x41e0
0x00004189      85c0           test eax, eax                           ; ../coreutils-8.31/lib/base64.c:-184
0x0000418b      745a           je 0x41e7
0x0000418d      4d39fc         cmp r12, r15
0x00004190      732c           jae 0x41be                              ; ../coreutils-8.31/lib/base64.c:-179
0x00004192      660f1f440000   nop word [rax + rax]
0x00004198      4983c401       add r12, 1
0x0000419c      410fb65424ff   movzx edx, byte [r12 - 1]
0x000041a2      80fa0a         cmp dl, 0xa
0x000041a5      7412           je 0x41b9
0x000041a7      8d4801         lea ecx, [rax + 1]
0x000041aa      83f904         cmp ecx, 4
0x000041ad      41890e         mov dword [r14], ecx
0x000041b0      4188540604     mov byte [r14 + rax + 4], dl
0x000041b5      7459           je 0x4210
0x000041b7      89c8           mov eax, ecx
0x000041b9      4d39fc         cmp r12, r15                            ; ../coreutils-8.31/lib/base64.c:-161
0x000041bc      75da           jne 0x4198
0x000041be      4189c5         mov r13d, eax                           ; ../coreutils-8.31/lib/base64.c:-154
0x000041c1      488b7c2408     mov rdi, qword [rsp + 8]
0x000041c6      4d85ed         test r13, r13                           ; ../coreutils-8.31/lib/base64.c:12
0x000041c9      0f85e4feffff   jne 0x40b3
0x000041cf      488b542420     mov rdx, qword [rsp + 0x20]
0x000041d4      b801000000     mov eax, 1
0x000041d9      e92affffff     jmp 0x4108                              ; ../coreutils-8.31/lib/base64.c:-11
0x000041de      6690           nop                                     ; ../coreutils-8.31/lib/base64.c:-9
0x000041e0      41c706000000.  mov dword [r14], 0
0x000041e7      4983fd03       cmp r13, 3
0x000041eb      7e17           jle 0x4204
0x000041ed      ba04000000     mov edx, 4
0x000041f2      be0a000000     mov esi, 0xa
0x000041f7      4c89e7         mov rdi, r12
0x000041fa      e811d5ffff     call sym.imp.memchr
0x000041ff      4885c0         test rax, rax
0x00004202      7478           je 0x427c
0x00004204      418b06         mov eax, dword [r14]
0x00004207      e981ffffff     jmp 0x418d
0x0000420c      0f1f4000       nop dword [rax]
0x00004210      b804000000     mov eax, 4
0x00004215      488b7c2408     mov rdi, qword [rsp + 8]
0x0000421a      4189c5         mov r13d, eax
0x0000421d      4d85ed         test r13, r13
0x00004220      0f858dfeffff   jne 0x40b3
0x00004226      eba7           jmp 0x41cf
0x00004228      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/base64.c:-175
0x00004230      4d85f6         test r14, r14
0x00004233      7413           je 0x4248
0x00004235      4983c401       add r12, 1
0x00004239      4983ed01       sub r13, 1
0x0000423d      4989d7         mov r15, rdx
0x00004240      e91ffeffff     jmp 0x4064
0x00004245      0f1f00         nop dword [rax]
0x00004248      4c29fa         sub rdx, r15
0x0000424b      4c897c2420     mov qword [rsp + 0x20], r15
0x00004250      4801542418     add qword [rsp + 0x18], rdx
0x00004255      4f8d3c2c       lea r15, [r12 + r13]
0x00004259      e952feffff     jmp 0x40b0
0x0000425e      6690           nop
0x00004260      c644240601     mov byte [rsp + 6], 1
0x00004265      c644240501     mov byte [rsp + 5], 1
0x0000426a      e9e2fdffff     jmp 0x4051
0x0000426f      4c89fa         mov rdx, r15
0x00004272      b801000000     mov eax, 1
0x00004277      e98cfeffff     jmp 0x4108
0x0000427c      4c89e7         mov rdi, r12
0x0000427f      41bd04000000   mov r13d, 4
0x00004285      4983c404       add r12, 4                              ; ../coreutils-8.31/lib/base64.c:52
0x00004289      e93dfeffff     jmp 0x40cb
0x0000428e      488b542420     mov rdx, qword [rsp + 0x20]
0x00004293      e970feffff     jmp 0x4108
0x00004298      e8c3d3ffff     call sym.imp.__stack_chk_fail
0x0000429d      0f1f00         nop dword [rax]
;-- base64_decode_alloc_ctx:
0x000042a0      4156           push r14
0x000042a2      4155           push r13
0x000042a4      4989d6         mov r14, rdx
0x000042a7      4154           push r12
0x000042a9      55             push rbp
0x000042aa      4989fc         mov r12, rdi
0x000042ad      53             push rbx
0x000042ae      4989f5         mov r13, rsi
0x000042b1      4889cb         mov rbx, rcx                            ; ../coreutils-8.31/lib/base64.c:64
0x000042b4      4c89c5         mov rbp, r8
0x000042b7      4883ec20       sub rsp, 0x20
0x000042bb      64488b042528.  mov rax, qword fs:[0x28]
0x000042c4      4889442418     mov qword [rsp + 0x18], rax
0x000042c9      31c0           xor eax, eax
0x000042cb      4889d0         mov rax, rdx
0x000042ce      48c1e802       shr rax, 2
0x000042d2      488d7c4003     lea rdi, [rax + rax*2 + 3]
0x000042d7      48897c2410     mov qword [rsp + 0x10], rdi
0x000042dc      e89fd4ffff     call sym.imp.malloc
0x000042e1      4885c0         test rax, rax
0x000042e4      488903         mov qword [rbx], rax
0x000042e7      742f           je 0x4318
0x000042e9      4c8d442410     lea r8, [rsp + 0x10]                    ; ../coreutils-8.31/lib/base64.c:58
0x000042ee      4889c1         mov rcx, rax
0x000042f1      4c89f2         mov rdx, r14
0x000042f4      4c89ee         mov rsi, r13
0x000042f7      4c89e7         mov rdi, r12
0x000042fa      e8f1fcffff     call sym.base64_decode_ctx
0x000042ff      84c0           test al, al
0x00004301      743d           je 0x4340
0x00004303      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/base64.c:67
0x00004306      7410           je 0x4318
0x00004308      488b542410     mov rdx, qword [rsp + 0x10]
0x0000430d      48895500       mov qword [rbp], rdx
0x00004311      eb0a           jmp 0x431d
0x00004313      0f1f440000     nop dword [rax + rax]
0x00004318      b801000000     mov eax, 1
0x0000431d      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00004322      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000432b      752d           jne 0x435a
0x0000432d      4883c420       add rsp, 0x20
0x00004331      5b             pop rbx
0x00004332      5d             pop rbp
0x00004333      415c           pop r12
0x00004335      415d           pop r13
0x00004337      415e           pop r14
0x00004339      c3             ret
0x0000433a      660f1f440000   nop word [rax + rax]
0x00004340      488b3b         mov rdi, qword [rbx]
0x00004343      8844240f       mov byte [rsp + 0xf], al
0x00004347      e844d2ffff     call sym.imp.free
0x0000434c      48c703000000.  mov qword [rbx], 0
0x00004353      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004358      ebc3           jmp 0x431d
0x0000435a      e801d3ffff     call sym.imp.__stack_chk_fail
0x0000435f      90             nop
;-- close_stdout_set_file_name:
0x00004360      48893d996d20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20b100:8]=0
0x00004367      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00004368      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00004370      40883d816d20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20b0f8:1]=0
0x00004377      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00004378      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00004380      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00004381      53             push rbx
0x00004382      4883ec08       sub rsp, 8
0x00004386      488b3dfb6c20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x0000438d      e8be2d0000     call sym.close_stream
0x00004392      85c0           test eax, eax
0x00004394      7416           je 0x43ac
0x00004396      e815d2ffff     call sym.imp.__errno_location
0x0000439b      803d566d2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20b0f8:1]=0
0x000043a2      4889c3         mov rbx, rax
0x000043a5      741c           je 0x43c3
0x000043a7      833820         cmp dword [rax], 0x20
0x000043aa      7517           jne 0x43c3
0x000043ac      488b3d0d6d20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x000043b3      e8982d0000     call sym.close_stream
0x000043b8      85c0           test eax, eax
0x000043ba      7546           jne 0x4402
0x000043bc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x000043c0      5b             pop rbx
0x000043c1      5d             pop rbp
0x000043c2      c3             ret
0x000043c3      488d35d43000.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x749e ; "write error"
0x000043ca      31ff           xor edi, edi
0x000043cc      ba05000000     mov edx, 5
0x000043d1      e85ad2ffff     call sym.imp.dcgettext
0x000043d6      488b3d236d20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20b100:8]=0
0x000043dd      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x000043e0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x000043e3      7428           je 0x440d
0x000043e5      e8961b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x000043ea      8b33           mov esi, dword [rbx]
0x000043ec      488d154d3c00.  lea rdx, [0x00008040]                   ; "%s: %s"
0x000043f3      4889c1         mov rcx, rax
0x000043f6      4989e8         mov r8, rbp
0x000043f9      31ff           xor edi, edi
0x000043fb      31c0           xor eax, eax
0x000043fd      e80ed4ffff     call sym.imp.error
0x00004402      8b3d106c2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20b018:4]=1
0x00004408      e8c3d1ffff     call sym.imp._exit
0x0000440d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000440f      488d152e3c00.  lea rdx, [0x00008044]                   ; "%s"
0x00004416      4889c1         mov rcx, rax
0x00004419      31ff           xor edi, edi
0x0000441b      31c0           xor eax, eax
0x0000441d      e8eed3ffff     call sym.imp.error
0x00004422      ebde           jmp 0x4402
0x00004424      662e0f1f8400.  nop word cs:[rax + rax]
0x0000442e      6690           nop
;-- fdadvise:
0x00004430      e9cbd2ffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x00004435      90             nop
0x00004436      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x00004440      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x00004443      741b           je 0x4460
0x00004445      53             push rbx
0x00004446      89f3           mov ebx, esi
0x00004448      e823d3ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x0000444d      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x0000444f      31d2           xor edx, edx
0x00004451      31f6           xor esi, esi
0x00004453      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x00004454      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00004456      e9a5d2ffff     jmp sym.imp.posix_fadvise
0x0000445b      0f1f440000     nop dword [rax + rax]
0x00004460      f3c3           ret
0x00004462      662e0f1f8400.  nop word cs:[rax + rax]
0x0000446c      0f1f4000       nop dword [rax]
;-- set_program_name:
0x00004470      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00004473      53             push rbx
0x00004474      7477           je 0x44ed                               ; ../coreutils-8.31/lib/progname.c:51
0x00004476      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000447b      4889fb         mov rbx, rdi
0x0000447e      e82dd2ffff     call sym.imp.strrchr
0x00004483      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00004486      7455           je 0x44dd
0x00004488      4c8d4001       lea r8, [rax + 1]
0x0000448c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000448f      4829da         sub rdx, rbx
0x00004492      4883fa06       cmp rdx, 6
0x00004496      7e45           jle 0x44dd
0x00004498      488d70fa       lea rsi, [rax - 6]
0x0000449c      488d3ddd3b00.  lea rdi, str..libs                      ; 0x8080 ; "/.libs/"
0x000044a3      b907000000     mov ecx, 7
0x000044a8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000044aa      0f97c2         seta dl
0x000044ad      80da00         sbb dl, 0
0x000044b0      84d2           test dl, dl
0x000044b2      7529           jne 0x44dd
0x000044b4      488d3dcd3b00.  lea rdi, [0x00008088]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x000044bb      b903000000     mov ecx, 3
0x000044c0      4c89c6         mov rsi, r8
0x000044c3      4c89c3         mov rbx, r8
0x000044c6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000044c8      0f97c2         seta dl
0x000044cb      80da00         sbb dl, 0
0x000044ce      84d2           test dl, dl
0x000044d0      750b           jne 0x44dd
0x000044d2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x000044d6      48891da36b20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20b080:8]=0
0x000044dd      48891d246c20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20b108:8]=0
0x000044e4      48891dbd6b20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x000044eb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000044ec      c3             ret
0x000044ed      488b0dcc6b20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x000044f4      488d3d4d3b00.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x8048 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000044fb      ba37000000     mov edx, 0x37                           ; '7'
0x00004500      be01000000     mov esi, 1
0x00004505      e856d3ffff     call sym.imp.fwrite
0x0000450a      e891d0ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000450f      90             nop
;-- gettext_quote.part.1:
0x00004510      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00004511      53             push rbx
0x00004512      4889fd         mov rbp, rdi
0x00004515      89f3           mov ebx, esi
0x00004517      4883ec08       sub rsp, 8
0x0000451b      e8102d0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00004520      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00004523      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004526      80fa55         cmp dl, 0x55
0x00004529      7475           je 0x45a0
0x0000452b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000452e      7420           je 0x4550
0x00004530      488d05643b00.  lea rax, str.l______l                   ; 0x809b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004537      488d155f3b00.  lea rdx, [0x0000809d]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000453e      83fb09         cmp ebx, 9
0x00004541      480f45c2       cmovne rax, rdx
0x00004545      4883c408       add rsp, 8
0x00004549      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000454a      5d             pop rbp
0x0000454b      c3             ret
0x0000454c      0f1f4000       nop dword [rax]
0x00004550      0fb65001       movzx edx, byte [rax + 1]
0x00004554      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004557      80fa42         cmp dl, 0x42
0x0000455a      75d4           jne 0x4530
0x0000455c      80780231       cmp byte [rax + 2], 0x31
0x00004560      75ce           jne 0x4530
0x00004562      80780338       cmp byte [rax + 3], 0x38
0x00004566      75c8           jne 0x4530
0x00004568      80780430       cmp byte [rax + 4], 0x30
0x0000456c      75c2           jne 0x4530
0x0000456e      80780533       cmp byte [rax + 5], 0x33
0x00004572      75bc           jne 0x4530
0x00004574      80780630       cmp byte [rax + 6], 0x30
0x00004578      75b6           jne 0x4530
0x0000457a      80780700       cmp byte [rax + 7], 0
0x0000457e      75b0           jne 0x4530
0x00004580      807d0060       cmp byte [rbp], 0x60
0x00004584      488d05093b00.  lea rax, [0x00008094]
0x0000458b      488d15063b00.  lea rdx, [0x00008098]
0x00004592      480f45c2       cmovne rax, rdx
0x00004596      4883c408       add rsp, 8
0x0000459a      5b             pop rbx
0x0000459b      5d             pop rbp
0x0000459c      c3             ret
0x0000459d      0f1f00         nop dword [rax]
0x000045a0      0fb65001       movzx edx, byte [rax + 1]
0x000045a4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000045a7      80fa54         cmp dl, 0x54
0x000045aa      7584           jne 0x4530
0x000045ac      0fb65002       movzx edx, byte [rax + 2]
0x000045b0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000045b3      80fa46         cmp dl, 0x46
0x000045b6      0f8574ffffff   jne 0x4530
0x000045bc      8078032d       cmp byte [rax + 3], 0x2d
0x000045c0      0f856affffff   jne 0x4530
0x000045c6      80780438       cmp byte [rax + 4], 0x38
0x000045ca      0f8560ffffff   jne 0x4530
0x000045d0      80780500       cmp byte [rax + 5], 0
0x000045d4      0f8556ffffff   jne 0x4530
0x000045da      807d0060       cmp byte [rbp], 0x60
0x000045de      488d05a73a00.  lea rax, [0x0000808c]                   ; "\u2018"
0x000045e5      488d15a43a00.  lea rdx, [0x00008090]                   ; "\u2019"
0x000045ec      480f45c2       cmovne rax, rdx
0x000045f0      4883c408       add rsp, 8
0x000045f4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000045f5      5d             pop rbp
0x000045f6      c3             ret
0x000045f7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00004600      4157           push r15
0x00004602      4156           push r14
0x00004604      4589c7         mov r15d, r8d
0x00004607      4155           push r13
0x00004609      4154           push r12
0x0000460b      4989fe         mov r14, rdi
0x0000460e      55             push rbp
0x0000460f      53             push rbx
0x00004610      4489cb         mov ebx, r9d
0x00004613      4989f5         mov r13, rsi
0x00004616      4889cd         mov rbp, rcx
0x00004619      83e302         and ebx, 2
0x0000461c      4881ecb80000.  sub rsp, 0xb8
0x00004623      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000462b      4889542410     mov qword [rsp + 0x10], rdx
0x00004630      4489442408     mov dword [rsp + 8], r8d
0x00004635      44894c2478     mov dword [rsp + 0x78], r9d
0x0000463a      4889442420     mov qword [rsp + 0x20], rax
0x0000463f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00004647      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000464c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00004654      4889442460     mov qword [rsp + 0x60], rax
0x00004659      64488b042528.  mov rax, qword fs:[0x28]
0x00004662      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000466a      31c0           xor eax, eax
0x0000466c      e8cfcfffff     call sym.imp.__ctype_get_mb_cur_max
0x00004671      4183ff0a       cmp r15d, 0xa
0x00004675      4889442458     mov qword [rsp + 0x58], rax
0x0000467a      0f87af110000   ja 0x582f
0x00004680      488d0d793a00.  lea rcx, [0x00008100]
0x00004687      4489fa         mov edx, r15d
0x0000468a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000468e      4801c8         add rax, rcx
0x00004691      ffe0           jmp rax
0x00004693      c644240e01     mov byte [rsp + 0xe], 1
0x00004698      c644247c00     mov byte [rsp + 0x7c], 0
0x0000469d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x000046a0      48c744245000.  mov qword [rsp + 0x50], 0
0x000046a9      c644240f01     mov byte [rsp + 0xf], 1
0x000046ae      c644240d00     mov byte [rsp + 0xd], 0
0x000046b3      488d05e33900.  lea rax, [0x0000809d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000046ba      48c744241801.  mov qword [rsp + 0x18], 1
0x000046c3      4531ff         xor r15d, r15d
0x000046c6      c74424080200.  mov dword [rsp + 8], 2
0x000046ce      4889442448     mov qword [rsp + 0x48], rax
0x000046d3      4531db         xor r11d, r11d
0x000046d6      4889e8         mov rax, rbp
0x000046d9      4589e0         mov r8d, r12d
0x000046dc      4c89dd         mov rbp, r11
0x000046df      4989c3         mov r11, rax
0x000046e2      660f1f440000   nop word [rax + rax]
0x000046e8      4939eb         cmp r11, rbp
0x000046eb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000046ef      4983fbff       cmp r11, 0xffffffffffffffff
0x000046f3      750d           jne 0x4702
0x000046f5      488b442410     mov rax, qword [rsp + 0x10]
0x000046fa      803c2800       cmp byte [rax + rbp], 0
0x000046fe      410f95c4       setne r12b
0x00004702      4584e4         test r12b, r12b
0x00004705      0f8455060000   je 0x4d60
0x0000470b      837c240802     cmp dword [rsp + 8], 2
0x00004710      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004715      4c8d0c2f       lea r9, [rdi + rbp]
0x00004719      0f95c0         setne al
0x0000471c      2244240d       and al, byte [rsp + 0xd]
0x00004720      4189c2         mov r10d, eax
0x00004723      0f84a7000000   je 0x47d0
0x00004729      488b442418     mov rax, qword [rsp + 0x18]
0x0000472e      4885c0         test rax, rax
0x00004731      0f8429040000   je 0x4b60
0x00004737      4983fbff       cmp r11, 0xffffffffffffffff
0x0000473b      488d5c0500     lea rbx, [rbp + rax]
0x00004740      752e           jne 0x4770
0x00004742      4883f801       cmp rax, 1
0x00004746      7628           jbe 0x4770
0x00004748      4488442438     mov byte [rsp + 0x38], r8b
0x0000474d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00004752      4c894c2428     mov qword [rsp + 0x28], r9
0x00004757      e8f4ceffff     call sym.imp.strlen
0x0000475c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00004762      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00004768      4989c3         mov r11, rax
0x0000476b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004770      4c39db         cmp rbx, r11
0x00004773      4488542428     mov byte [rsp + 0x28], r10b
0x00004778      0f87b2050000   ja 0x4d30
0x0000477e      488b542418     mov rdx, qword [rsp + 0x18]
0x00004783      488b742448     mov rsi, qword [rsp + 0x48]
0x00004788      4c89cf         mov rdi, r9
0x0000478b      4c895c2440     mov qword [rsp + 0x40], r11
0x00004790      4488442438     mov byte [rsp + 0x38], r8b
0x00004795      4c894c2430     mov qword [rsp + 0x30], r9
0x0000479a      e881cfffff     call sym.imp.memcmp
0x0000479f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x000047a1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000047a6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000047ac      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x000047b1      0f8579050000   jne 0x4d30
0x000047b7      807c240f00     cmp byte [rsp + 0xf], 0
0x000047bc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000047c2      0f857d0f0000   jne 0x5745
0x000047c8      0f1f84000000.  nop dword [rax + rax]
0x000047d0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x000047d4      80fb7e         cmp bl, 0x7e
0x000047d7      0f871b030000   ja 0x4af8
0x000047dd      488d0d483900.  lea rcx, [0x0000812c]
0x000047e4      0fb6d3         movzx edx, bl
0x000047e7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000047eb      4801c8         add rax, rcx
0x000047ee      ffe0           jmp rax
0x000047f0      4531d2         xor r10d, r10d
0x000047f3      4983fb01       cmp r11, 1
0x000047f7      0f95c0         setne al
0x000047fa      4983fbff       cmp r11, 0xffffffffffffffff
0x000047fe      750c           jne 0x480c
0x00004800      488b442410     mov rax, qword [rsp + 0x10]
0x00004805      80780100       cmp byte [rax + 1], 0
0x00004809      0f95c0         setne al
0x0000480c      837c240802     cmp dword [rsp + 8], 2
0x00004811      0f94c2         sete dl
0x00004814      84c0           test al, al
0x00004816      0f844c020000   je 0x4a68
0x0000481c      4531e4         xor r12d, r12d
0x0000481f      31c0           xor eax, eax
0x00004821      0f1f80000000.  nop dword [rax]
0x00004828      807c240d01     cmp byte [rsp + 0xd], 1
0x0000482d      0f850f010000   jne 0x4942
0x00004833      84d2           test dl, dl
0x00004835      0f8507010000   jne 0x4942
0x0000483b      488b742420     mov rsi, qword [rsp + 0x20]
0x00004840      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00004843      7414           je 0x4859
0x00004845      89da           mov edx, ebx
0x00004847      c0ea05         shr dl, 5
0x0000484a      0fb6d2         movzx edx, dl
0x0000484d      8b1496         mov edx, dword [rsi + rdx*4]
0x00004850      0fa3da         bt edx, ebx
0x00004853      0f824a010000   jb 0x49a3
0x00004859      4584d2         test r10b, r10b
0x0000485c      0f8541010000   jne 0x49a3
0x00004862      83f001         xor eax, 1
0x00004865      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00004869      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000486c      84c0           test al, al
0x0000486e      7420           je 0x4890                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00004870      4d39fd         cmp r13, r15
0x00004873      7605           jbe 0x487a
0x00004875      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000487a      498d4701       lea rax, [r15 + 1]
0x0000487e      4939c5         cmp r13, rax
0x00004881      7606           jbe 0x4889
0x00004883      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004889      4983c702       add r15, 2
0x0000488d      4531c0         xor r8d, r8d
0x00004890      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00004893      7304           jae 0x4899                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00004895      43881c3e       mov byte [r14 + r15], bl
0x00004899      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000489e      4983c701       add r15, 1
0x000048a2      b800000000     mov eax, 0
0x000048a7      4584e4         test r12b, r12b
0x000048aa      0f44f8         cmove edi, eax
0x000048ad      40887c240e     mov byte [rsp + 0xe], dil
0x000048b2      e931feffff     jmp 0x46e8
0x000048b7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000048c0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000048c3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000048c7      83f802         cmp eax, 2
0x000048ca      0f84b8050000   je 0x4e88
0x000048d0      83f805         cmp eax, 5
0x000048d3      0f846f050000   je 0x4e48
0x000048d9      83f802         cmp eax, 2
0x000048dc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000048e1      0f94c2         sete dl
0x000048e4      4531e4         xor r12d, r12d
0x000048e7      31c0           xor eax, eax
0x000048e9      e93affffff     jmp 0x4828
0x000048ee      6690           nop
0x000048f0      4531d2         xor r10d, r10d
0x000048f3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000048f8      0f8402050000   je 0x4e00
0x000048fe      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00004903      31d2           xor edx, edx
0x00004905      31c0           xor eax, eax
0x00004907      bb27000000     mov ebx, 0x27                           ; '''
0x0000490c      e917ffffff     jmp 0x4828
0x00004911      0f1f80000000.  nop dword [rax]
0x00004918      ba09000000     mov edx, 9
0x0000491d      bb74000000     mov ebx, 0x74                           ; 't'
0x00004922      837c240802     cmp dword [rsp + 8], 2
0x00004927      0f94c0         sete al
0x0000492a      2244240f       and al, byte [rsp + 0xf]
0x0000492e      0f854a010000   jne 0x4a7e
0x00004934      807c240d00     cmp byte [rsp + 0xd], 0
0x00004939      7565           jne 0x49a0
0x0000493b      89d3           mov ebx, edx
0x0000493d      4531e4         xor r12d, r12d
0x00004940      31c0           xor eax, eax
0x00004942      807c240f00     cmp byte [rsp + 0xf], 0
0x00004947      0f85eefeffff   jne 0x483b
0x0000494d      e907ffffff     jmp 0x4859                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00004952      660f1f440000   nop word [rax + rax]
0x00004958      ba08000000     mov edx, 8
0x0000495d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00004962      ebd0           jmp 0x4934
0x00004964      0f1f4000       nop dword [rax]
0x00004968      837c240802     cmp dword [rsp + 8], 2
0x0000496d      0f84cd030000   je 0x4d40
0x00004973      807c240d00     cmp byte [rsp + 0xd], 0
0x00004978      0f8412020000   je 0x4b90
0x0000497e      807c240f00     cmp byte [rsp + 0xf], 0
0x00004983      0f8407020000   je 0x4b90
0x00004989      48837c241800   cmp qword [rsp + 0x18], 0
0x0000498f      0f85b6030000   jne 0x4d4b
0x00004995      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000499a      660f1f440000   nop word [rax + rax]
0x000049a0      4531e4         xor r12d, r12d
0x000049a3      837c240802     cmp dword [rsp + 8], 2
0x000049a8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x000049ab      807c240f00     cmp byte [rsp + 0xf], 0
0x000049b0      89d0           mov eax, edx
0x000049b2      0f8550080000   jne 0x5208
0x000049b8      4489c0         mov eax, r8d
0x000049bb      83f001         xor eax, 1
0x000049be      20d0           and al, dl
0x000049c0      742f           je 0x49f1
0x000049c2      4d39fd         cmp r13, r15
0x000049c5      7605           jbe 0x49cc
0x000049c7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000049cc      498d5701       lea rdx, [r15 + 1]
0x000049d0      4939d5         cmp r13, rdx
0x000049d3      7606           jbe 0x49db
0x000049d5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000049db      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x000049df      4939d5         cmp r13, rdx
0x000049e2      7606           jbe 0x49ea
0x000049e4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000049ea      4983c703       add r15, 3
0x000049ee      4189c0         mov r8d, eax
0x000049f1      4d39fd         cmp r13, r15
0x000049f4      7605           jbe 0x49fb
0x000049f6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000049fb      4983c701       add r15, 1
0x000049ff      4883c501       add rbp, 1
0x00004a03      e988feffff     jmp 0x4890
0x00004a08      0f1f84000000.  nop dword [rax + rax]
0x00004a10      807c240d00     cmp byte [rsp + 0xd], 0
0x00004a15      0f85c8010000   jne 0x4be3
0x00004a1b      31d2           xor edx, edx
0x00004a1d      f644247801     test byte [rsp + 0x78], 1
0x00004a22      0f8413ffffff   je 0x493b
0x00004a28      4883c501       add rbp, 1
0x00004a2c      e9b7fcffff     jmp 0x46e8
0x00004a31      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00004a38      837c240802     cmp dword [rsp + 8], 2
0x00004a3d      0f94c2         sete dl
0x00004a40      31c0           xor eax, eax
0x00004a42      e9e1fdffff     jmp 0x4828
0x00004a47      660f1f840000.  nop word [rax + rax]
0x00004a50      ba07000000     mov edx, 7
0x00004a55      bb61000000     mov ebx, 0x61                           ; 'a'
0x00004a5a      e9d5feffff     jmp 0x4934
0x00004a5f      90             nop
0x00004a60      837c240802     cmp dword [rsp + 8], 2
0x00004a65      0f94c2         sete dl
0x00004a68      4885ed         test rbp, rbp
0x00004a6b      0f85abfdffff   jne 0x481c
0x00004a71      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004a76      20d0           and al, dl
0x00004a78      0f84aafdffff   je 0x4828
0x00004a7e      4c89dd         mov rbp, r11
0x00004a81      c74424080200.  mov dword [rsp + 8], 2
0x00004a89      e9fb060000     jmp 0x5189
0x00004a8e      6690           nop
0x00004a90      837c240802     cmp dword [rsp + 8], 2
0x00004a95      0f94c2         sete dl
0x00004a98      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00004a9b      ebd4           jmp 0x4a71
0x00004a9d      0f1f00         nop dword [rax]
0x00004aa0      837c240802     cmp dword [rsp + 8], 2
0x00004aa5      bb20000000     mov ebx, 0x20                           ; "@"
0x00004aaa      0f94c2         sete dl
0x00004aad      ebc2           jmp 0x4a71
0x00004aaf      90             nop
0x00004ab0      ba0d000000     mov edx, 0xd
0x00004ab5      bb72000000     mov ebx, 0x72                           ; 'r'
0x00004aba      e963feffff     jmp 0x4922
0x00004abf      90             nop
0x00004ac0      ba0c000000     mov edx, 0xc
0x00004ac5      bb66000000     mov ebx, 0x66                           ; 'f'
0x00004aca      e965feffff     jmp 0x4934
0x00004acf      90             nop
0x00004ad0      ba0b000000     mov edx, 0xb
0x00004ad5      bb76000000     mov ebx, 0x76                           ; 'v'
0x00004ada      e955feffff     jmp 0x4934
0x00004adf      90             nop
0x00004ae0      ba0a000000     mov edx, 0xa
0x00004ae5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00004aea      e933feffff     jmp 0x4922
0x00004aef      90             nop
0x00004af0      4531d2         xor r10d, r10d
0x00004af3      0f1f440000     nop dword [rax + rax]
0x00004af8      48837c245801   cmp qword [rsp + 0x58], 1
0x00004afe      0f85a4030000   jne 0x4ea8
0x00004b04      4c895c2438     mov qword [rsp + 0x38], r11
0x00004b09      4488442430     mov byte [rsp + 0x30], r8b
0x00004b0e      4488542428     mov byte [rsp + 0x28], r10b
0x00004b13      e888cdffff     call sym.imp.__ctype_b_loc
0x00004b18      488b08         mov rcx, qword [rax]
0x00004b1b      0fb6d3         movzx edx, bl
0x00004b1e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00004b24      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00004b2a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00004b2f      bf01000000     mov edi, 1
0x00004b34      0fb70451       movzx eax, word [rcx + rdx*2]
0x00004b38      66250040       and ax, 0x4000                          ; "I\x89\xf4H\x83\xec8M\x8b8dH\x8b\x1c%("
0x00004b3c      410f95c4       setne r12b
0x00004b40      0f94c0         sete al
0x00004b43      2244240d       and al, byte [rsp + 0xd]
0x00004b47      84c0           test al, al
0x00004b49      0f8592090000   jne 0x54e1
0x00004b4f      837c240802     cmp dword [rsp + 8], 2
0x00004b54      0f94c2         sete dl
0x00004b57      e9ccfcffff     jmp 0x4828
0x00004b5c      0f1f4000       nop dword [rax]
0x00004b60      410fb619       movzx ebx, byte [r9]
0x00004b64      80fb7e         cmp bl, 0x7e
0x00004b67      7787           ja 0x4af0
0x00004b69      488d0db83700.  lea rcx, [0x00008328]
0x00004b70      0fb6d3         movzx edx, bl
0x00004b73      48630491       movsxd rax, dword [rcx + rdx*4]
0x00004b77      4801c8         add rax, rcx
0x00004b7a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00004b7c      0f1f4000       nop dword [rax]
0x00004b80      4531d2         xor r10d, r10d
0x00004b83      807c240d00     cmp byte [rsp + 0xd], 0
0x00004b88      0f85f0fdffff   jne 0x497e
0x00004b8e      6690           nop
0x00004b90      ba5c000000     mov edx, 0x5c                           ; '\'
0x00004b95      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00004b9a      e995fdffff     jmp 0x4934
0x00004b9f      90             nop
0x00004ba0      ba0c000000     mov edx, 0xc
0x00004ba5      4531d2         xor r10d, r10d
0x00004ba8      bb66000000     mov ebx, 0x66                           ; 'f'
0x00004bad      e982fdffff     jmp 0x4934
0x00004bb2      660f1f440000   nop word [rax + rax]
0x00004bb8      ba0a000000     mov edx, 0xa
0x00004bbd      4531d2         xor r10d, r10d
0x00004bc0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00004bc5      e958fdffff     jmp 0x4922
0x00004bca      660f1f440000   nop word [rax + rax]
0x00004bd0      bb61000000     mov ebx, 0x61                           ; 'a'
0x00004bd5      e9c6fdffff     jmp 0x49a0
0x00004bda      660f1f440000   nop word [rax + rax]
0x00004be0      4531d2         xor r10d, r10d
0x00004be3      837c240802     cmp dword [rsp + 8], 2
0x00004be8      0f94c2         sete dl
0x00004beb      807c240f00     cmp byte [rsp + 0xf], 0
0x00004bf0      0f85940b0000   jne 0x578a
0x00004bf6      4489c0         mov eax, r8d
0x00004bf9      4c89f9         mov rcx, r15
0x00004bfc      83f001         xor eax, 1
0x00004bff      20d0           and al, dl
0x00004c01      742d           je 0x4c30
0x00004c03      4d39fd         cmp r13, r15
0x00004c06      7605           jbe 0x4c0d
0x00004c08      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004c0d      498d4f01       lea rcx, [r15 + 1]
0x00004c11      4939cd         cmp r13, rcx
0x00004c14      7606           jbe 0x4c1c
0x00004c16      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00004c1c      498d4f02       lea rcx, [r15 + 2]
0x00004c20      4939cd         cmp r13, rcx
0x00004c23      0f8730060000   ja 0x5259
0x00004c29      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00004c2d      4189c0         mov r8d, eax
0x00004c30      4939cd         cmp r13, rcx
0x00004c33      7605           jbe 0x4c3a
0x00004c35      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004c3a      837c240802     cmp dword [rsp + 8], 2
0x00004c3f      4c8d7901       lea r15, [rcx + 1]
0x00004c43      0f8400060000   je 0x5249
0x00004c49      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00004c4d      4c39d8         cmp rax, r11
0x00004c50      7319           jae 0x4c6b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00004c52      488b442410     mov rax, qword [rsp + 0x10]
0x00004c57      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00004c5c      88442428       mov byte [rsp + 0x28], al
0x00004c60      83e830         sub eax, 0x30
0x00004c63      3c09           cmp al, 9
0x00004c65      0f862e080000   jbe 0x5499
0x00004c6b      4489e0         mov eax, r12d
0x00004c6e      bb30000000     mov ebx, 0x30                           ; '0'
0x00004c73      4531e4         xor r12d, r12d
0x00004c76      e9adfbffff     jmp 0x4828                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00004c7b      0f1f440000     nop dword [rax + rax]
0x00004c80      837c240802     cmp dword [rsp + 8], 2
0x00004c85      4589d4         mov r12d, r10d
0x00004c88      0f94c2         sete dl
0x00004c8b      4531d2         xor r10d, r10d
0x00004c8e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004c90      e993fbffff     jmp 0x4828                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00004c95      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004c98      837c240802     cmp dword [rsp + 8], 2
0x00004c9d      0f94c2         sete dl
0x00004ca0      4531d2         xor r10d, r10d
0x00004ca3      e9c0fdffff     jmp 0x4a68
0x00004ca8      0f1f84000000.  nop dword [rax + rax]
0x00004cb0      837c240802     cmp dword [rsp + 8], 2
0x00004cb5      0f94c2         sete dl
0x00004cb8      4531d2         xor r10d, r10d
0x00004cbb      4531e4         xor r12d, r12d
0x00004cbe      e9aefdffff     jmp 0x4a71
0x00004cc3      0f1f440000     nop dword [rax + rax]
0x00004cc8      837c240802     cmp dword [rsp + 8], 2
0x00004ccd      4589d4         mov r12d, r10d
0x00004cd0      bb20000000     mov ebx, 0x20                           ; "@"
0x00004cd5      0f94c2         sete dl
0x00004cd8      4531d2         xor r10d, r10d
0x00004cdb      e991fdffff     jmp 0x4a71
0x00004ce0      ba0d000000     mov edx, 0xd
0x00004ce5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00004ce8      bb72000000     mov ebx, 0x72                           ; 'r'
0x00004ced      e930fcffff     jmp 0x4922
0x00004cf2      660f1f440000   nop word [rax + rax]
0x00004cf8      bb76000000     mov ebx, 0x76                           ; 'v'
0x00004cfd      e99efcffff     jmp 0x49a0
0x00004d02      660f1f440000   nop word [rax + rax]
0x00004d08      ba09000000     mov edx, 9
0x00004d0d      4531d2         xor r10d, r10d
0x00004d10      bb74000000     mov ebx, 0x74                           ; 't'
0x00004d15      e908fcffff     jmp 0x4922
0x00004d1a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00004d20      bb62000000     mov ebx, 0x62                           ; 'b'
0x00004d25      e976fcffff     jmp 0x49a0
0x00004d2a      660f1f440000   nop word [rax + rax]
0x00004d30      4531d2         xor r10d, r10d
0x00004d33      e998faffff     jmp 0x47d0
0x00004d38      0f1f84000000.  nop dword [rax + rax]
0x00004d40      807c240f00     cmp byte [rsp + 0xf], 0
0x00004d45      0f8565090000   jne 0x56b0
0x00004d4b      4883c501       add rbp, 1
0x00004d4f      4489c0         mov eax, r8d
0x00004d52      4531e4         xor r12d, r12d
0x00004d55      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00004d5a      e90dfbffff     jmp 0x486c
0x00004d5f      90             nop
0x00004d60      837c240802     cmp dword [rsp + 8], 2
0x00004d65      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004d6a      4589c4         mov r12d, r8d
0x00004d6d      4c89dd         mov rbp, r11
0x00004d70      0f94c2         sete dl
0x00004d73      89d8           mov eax, ebx
0x00004d75      4d85ff         test r15, r15
0x00004d78      0f94c1         sete cl
0x00004d7b      21d0           and eax, edx
0x00004d7d      20c8           and al, cl
0x00004d7f      0f85610a0000   jne 0x57e6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00004d85      89d8           mov eax, ebx
0x00004d87      83f001         xor eax, 1
0x00004d8a      20c2           and dl, al
0x00004d8c      0f846a090000   je 0x56fc
0x00004d92      807c247c00     cmp byte [rsp + 0x7c], 0
0x00004d97      0f845d090000   je 0x56fa
0x00004d9d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00004da2      0f85f5090000   jne 0x579d
0x00004da8      4d85ed         test r13, r13
0x00004dab      0f94c0         sete al
0x00004dae      48837c245000   cmp qword [rsp + 0x50], 0
0x00004db4      0f95c2         setne dl
0x00004db7      20d0           and al, dl
0x00004db9      0f841d0a0000   je 0x57dc
0x00004dbf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004dc4      488d1dd23200.  lea rbx, [0x0000809d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004dcb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00004dcf      c74424080200.  mov dword [rsp + 8], 2
0x00004dd7      41bf01000000   mov r15d, 1
0x00004ddd      48c744241801.  mov qword [rsp + 0x18], 1
0x00004de6      c644240f00     mov byte [rsp + 0xf], 0
0x00004deb      48895c2448     mov qword [rsp + 0x48], rbx
0x00004df0      8844247c       mov byte [rsp + 0x7c], al
0x00004df4      e9daf8ffff     jmp 0x46d3
0x00004df9      0f1f80000000.  nop dword [rax]
0x00004e00      807c240f00     cmp byte [rsp + 0xf], 0
0x00004e05      0f85a5080000   jne 0x56b0
0x00004e0b      4d85ed         test r13, r13
0x00004e0e      0f84fc030000   je 0x5210                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00004e14      31d2           xor edx, edx
0x00004e16      48837c245000   cmp qword [rsp + 0x50], 0
0x00004e1c      0f85ee030000   jne 0x5210                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00004e22      4c896c2450     mov qword [rsp + 0x50], r13
0x00004e27      4983c703       add r15, 3
0x00004e2b      31c0           xor eax, eax
0x00004e2d      448864247c     mov byte [rsp + 0x7c], r12b
0x00004e32      4531c0         xor r8d, r8d
0x00004e35      4989d5         mov r13, rdx
0x00004e38      bb27000000     mov ebx, 0x27                           ; '''
0x00004e3d      e917faffff     jmp 0x4859
0x00004e42      660f1f440000   nop word [rax + rax]
0x00004e48      f644247804     test byte [rsp + 0x78], 4
0x00004e4d      7421           je 0x4e70
0x00004e4f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00004e53      4c39d9         cmp rcx, r11
0x00004e56      7318           jae 0x4e70
0x00004e58      488b442410     mov rax, qword [rsp + 0x10]
0x00004e5d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00004e62      0f848a070000   je 0x55f2
0x00004e68      0f1f84000000.  nop dword [rax + rax]
0x00004e70      31d2           xor edx, edx
0x00004e72      4531e4         xor r12d, r12d
0x00004e75      31c0           xor eax, eax
0x00004e77      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00004e7c      e9a7f9ffff     jmp 0x4828
0x00004e81      0f1f80000000.  nop dword [rax]
0x00004e88      807c240f00     cmp byte [rsp + 0xf], 0
0x00004e8d      0f851d080000   jne 0x56b0
0x00004e93      4531e4         xor r12d, r12d
0x00004e96      31c0           xor eax, eax
0x00004e98      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00004e9d      e9b7f9ffff     jmp 0x4859                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00004ea2      660f1f440000   nop word [rax + rax]
0x00004ea8      488d8424a000.  lea rax, [rsp + 0xa0]
0x00004eb0      4983fbff       cmp r11, 0xffffffffffffffff
0x00004eb4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00004ec0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00004ec5      752d           jne 0x4ef4
0x00004ec7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004ecc      4488442440     mov byte [rsp + 0x40], r8b
0x00004ed1      4488542438     mov byte [rsp + 0x38], r10b
0x00004ed6      4c894c2430     mov qword [rsp + 0x30], r9
0x00004edb      e870c7ffff     call sym.imp.strlen
0x00004ee0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00004ee6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00004eec      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00004eef      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004ef4      488d84249c00.  lea rax, [rsp + 0x9c]
0x00004efc      31c9           xor ecx, ecx
0x00004efe      885c247e       mov byte [rsp + 0x7e], bl
0x00004f02      448844247d     mov byte [rsp + 0x7d], r8b
0x00004f07      4889cb         mov rbx, rcx
0x00004f0a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00004f12      4889442438     mov qword [rsp + 0x38], rax
0x00004f17      448854247f     mov byte [rsp + 0x7f], r10b
0x00004f1c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00004f24      4c89742440     mov qword [rsp + 0x40], r14
0x00004f29      4c896c2470     mov qword [rsp + 0x70], r13
0x00004f2e      4c895c2430     mov qword [rsp + 0x30], r11
0x00004f33      488b442410     mov rax, qword [rsp + 0x10]
0x00004f38      4c8d741d00     lea r14, [rbp + rbx]
0x00004f3d      488b542430     mov rdx, qword [rsp + 0x30]
0x00004f42      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004f47      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004f4c      4e8d2c30       lea r13, [rax + r14]
0x00004f50      4c29f2         sub rdx, r14
0x00004f53      4c89ee         mov rsi, r13
0x00004f56      e865210000     call sym.rpl_mbrtowc
0x00004f5b      4885c0         test rax, rax
0x00004f5e      4989c7         mov r15, rax
0x00004f61      744e           je 0x4fb1
0x00004f63      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004f67      0f8418060000   je 0x5585
0x00004f6d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00004f71      0f849a050000   je 0x5511
0x00004f77      837c240802     cmp dword [rsp + 8], 2
0x00004f7c      0f94c0         sete al
0x00004f7f      2244240f       and al, byte [rsp + 0xf]
0x00004f83      0f8597010000   jne 0x5120
0x00004f89      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00004f90      e8fbc8ffff     call sym.imp.iswprint
0x00004f95      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00004f9a      85c0           test eax, eax
0x00004f9c      b800000000     mov eax, 0
0x00004fa1      440f44e0       cmove r12d, eax
0x00004fa5      4c01fb         add rbx, r15
0x00004fa8      e8d3c8ffff     call sym.imp.mbsinit
0x00004fad      85c0           test eax, eax
0x00004faf      7482           je 0x4f33
0x00004fb1      4489e2         mov edx, r12d
0x00004fb4      4889df         mov rdi, rbx
0x00004fb7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004fbd      83f201         xor edx, 1
0x00004fc0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004fc5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004fcb      2254240d       and dl, byte [rsp + 0xd]
0x00004fcf      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004fd7      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004fdc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004fe1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004fe6      4883ff01       cmp rdi, 1
0x00004fea      0f86fb050000   jbe 0x55eb
0x00004ff0      4889f9         mov rcx, rdi
0x00004ff3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00004ff5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00004ffb      4801e9         add rcx, rbp
0x00004ffe      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00005003      e9b6000000     jmp 0x50be
0x00005008      0f1f84000000.  nop dword [rax + rax]
0x00005010      837c240802     cmp dword [rsp + 8], 2
0x00005015      0f94c0         sete al
0x00005018      4584c9         test r9b, r9b
0x0000501b      0f85af040000   jne 0x54d0
0x00005021      4489c6         mov esi, r8d
0x00005024      83f601         xor esi, 1
0x00005027      4020f0         and al, sil
0x0000502a      742f           je 0x505b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000502c      4d39fd         cmp r13, r15
0x0000502f      7605           jbe 0x5036
0x00005031      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00005036      498d7701       lea rsi, [r15 + 1]
0x0000503a      4939f5         cmp r13, rsi
0x0000503d      7606           jbe 0x5045                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000503f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00005045      498d7702       lea rsi, [r15 + 2]
0x00005049      4939f5         cmp r13, rsi
0x0000504c      7606           jbe 0x5054
0x0000504e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00005054      4983c703       add r15, 3
0x00005058      4189c0         mov r8d, eax
0x0000505b      4d39fd         cmp r13, r15
0x0000505e      7605           jbe 0x5065
0x00005060      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00005065      498d4701       lea rax, [r15 + 1]
0x00005069      4939c5         cmp r13, rax
0x0000506c      760d           jbe 0x507b
0x0000506e      89d8           mov eax, ebx
0x00005070      c0e806         shr al, 6
0x00005073      83c030         add eax, 0x30
0x00005076      4388443e01     mov byte [r14 + r15 + 1], al
0x0000507b      498d4702       lea rax, [r15 + 2]
0x0000507f      4939c5         cmp r13, rax
0x00005082      7610           jbe 0x5094
0x00005084      89d8           mov eax, ebx
0x00005086      c0e803         shr al, 3
0x00005089      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000508c      83c030         add eax, 0x30
0x0000508f      4388443e02     mov byte [r14 + r15 + 2], al
0x00005094      83e307         and ebx, 7
0x00005097      4883c501       add rbp, 1
0x0000509b      4983c703       add r15, 3
0x0000509f      83c330         add ebx, 0x30
0x000050a2      4839cd         cmp rbp, rcx
0x000050a5      0f83e5f7ffff   jae 0x4890
0x000050ab      89d6           mov esi, edx
0x000050ad      4d39fd         cmp r13, r15
0x000050b0      7604           jbe 0x50b6
0x000050b2      43881c3e       mov byte [r14 + r15], bl
0x000050b6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000050ba      4983c701       add r15, 1
0x000050be      84d2           test dl, dl
0x000050c0      0f854affffff   jne 0x5010
0x000050c6      89f0           mov eax, esi
0x000050c8      83f001         xor eax, 1
0x000050cb      4421c0         and eax, r8d
0x000050ce      4584d2         test r10b, r10b
0x000050d1      740e           je 0x50e1
0x000050d3      4d39fd         cmp r13, r15
0x000050d6      7605           jbe 0x50dd
0x000050d8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000050dd      4983c701       add r15, 1
0x000050e1      4883c501       add rbp, 1
0x000050e5      4839cd         cmp rbp, rcx
0x000050e8      0f837ef7ffff   jae 0x486c
0x000050ee      84c0           test al, al
0x000050f0      0f84f8030000   je 0x54ee
0x000050f6      4d39fd         cmp r13, r15
0x000050f9      7605           jbe 0x5100
0x000050fb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00005100      498d4701       lea rax, [r15 + 1]
0x00005104      4939c5         cmp r13, rax
0x00005107      7606           jbe 0x510f
0x00005109      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000510f      4983c702       add r15, 2
0x00005113      4531d2         xor r10d, r10d
0x00005116      4531c0         xor r8d, r8d
0x00005119      eb92           jmp 0x50ad
0x0000511b      0f1f440000     nop dword [rax + rax]
0x00005120      4983ff01       cmp r15, 1
0x00005124      0f845ffeffff   je 0x4f89
0x0000512a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000512f      4a8d0c3f       lea rcx, [rdi + r15]
0x00005133      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00005138      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000513c      eb0f           jmp 0x514d
0x0000513e      6690           nop
0x00005140      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00005144      4939d0         cmp r8, rdx
0x00005147      0f843cfeffff   je 0x4f89
0x0000514d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00005150      83e95b         sub ecx, 0x5b
0x00005153      80f921         cmp cl, 0x21
0x00005156      77e8           ja 0x5140                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00005158      be01000000     mov esi, 1
0x0000515d      48d3e6         shl rsi, cl
0x00005160      4889f1         mov rcx, rsi
0x00005163      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000516d      4885f1         test rcx, rsi
0x00005170      74ce           je 0x5140
0x00005172      4c8b742440     mov r14, qword [rsp + 0x40]
0x00005177      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000517c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00005181      c74424080200.  mov dword [rsp + 8], 2
0x00005189      807c240d00     cmp byte [rsp + 0xd], 0
0x0000518e      7410           je 0x51a0
0x00005190      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00005192      b804000000     mov eax, 4
0x00005197      0f44442408     cmove eax, dword [rsp + 8]
0x0000519c      89442408       mov dword [rsp + 8], eax
0x000051a0      4883ec08       sub rsp, 8
0x000051a4      4889e9         mov rcx, rbp
0x000051a7      4c89ee         mov rsi, r13
0x000051aa      ff742468       push qword [rsp + 0x68]
0x000051ae      ff742478       push qword [rsp + 0x78]
0x000051b2      4c89f7         mov rdi, r14
0x000051b5      6a00           push 0
0x000051b7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000051bf      448b442428     mov r8d, dword [rsp + 0x28]
0x000051c4      488b542430     mov rdx, qword [rsp + 0x30]
0x000051c9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x000051cd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x000051d2      4883c420       add rsp, 0x20
0x000051d6      4989c7         mov r15, rax
0x000051d9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x000051e1      6448331c2528.  xor rbx, qword fs:[0x28]
0x000051ea      4c89f8         mov rax, r15
0x000051ed      0f8500060000   jne 0x57f3
0x000051f3      4881c4b80000.  add rsp, 0xb8
0x000051fa      5b             pop rbx
0x000051fb      5d             pop rbp
0x000051fc      415c           pop r12
0x000051fe      415d           pop r13
0x00005200      415e           pop r14
0x00005202      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00005204      c3             ret
0x00005205      0f1f00         nop dword [rax]
0x00005208      4c89dd         mov rbp, r11
0x0000520b      e979ffffff     jmp 0x5189
0x00005210      4d39fd         cmp r13, r15
0x00005213      7605           jbe 0x521a
0x00005215      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000521a      498d4701       lea rax, [r15 + 1]
0x0000521e      4939c5         cmp r13, rax
0x00005221      7606           jbe 0x5229
0x00005223      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00005229      498d4702       lea rax, [r15 + 2]
0x0000522d      4939c5         cmp r13, rax
0x00005230      0f86ec050000   jbe 0x5822
0x00005236      4c89ea         mov rdx, r13
0x00005239      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000523f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00005244      e9d9fbffff     jmp 0x4e22
0x00005249      4489e0         mov eax, r12d
0x0000524c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00005251      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00005254      e900f6ffff     jmp 0x4859                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00005259      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000525f      e9c5f9ffff     jmp 0x4c29
0x00005264      85db           test ebx, ebx
0x00005266      0f8527f4ffff   jne 0x4693
0x0000526c      c644240d01     mov byte [rsp + 0xd], 1
0x00005271      4d85ed         test r13, r13
0x00005274      0f8590050000   jne 0x580a
0x0000527a      488d051c2e00.  lea rax, [0x0000809d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005281      48c744245000.  mov qword [rsp + 0x50], 0
0x0000528a      c644240e01     mov byte [rsp + 0xe], 1
0x0000528f      c644247c00     mov byte [rsp + 0x7c], 0
0x00005294      4531e4         xor r12d, r12d
0x00005297      c644240f00     mov byte [rsp + 0xf], 0
0x0000529c      48c744241801.  mov qword [rsp + 0x18], 1
0x000052a5      4889442448     mov qword [rsp + 0x48], rax
0x000052aa      41bf01000000   mov r15d, 1
0x000052b0      c74424080200.  mov dword [rsp + 8], 2
0x000052b8      e916f4ffff     jmp 0x46d3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x000052bd      0f1f00         nop dword [rax]
0x000052c0      85db           test ebx, ebx
0x000052c2      0f85f5030000   jne 0x56bd
0x000052c8      4d85ed         test r13, r13
0x000052cb      0f8425020000   je 0x54f6
0x000052d1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x000052d5      c644240e01     mov byte [rsp + 0xe], 1
0x000052da      4531e4         xor r12d, r12d
0x000052dd      c644247c00     mov byte [rsp + 0x7c], 0
0x000052e2      48c744245000.  mov qword [rsp + 0x50], 0
0x000052eb      488d05a92d00.  lea rax, str.l______l                   ; 0x809b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000052f2      c644240f00     mov byte [rsp + 0xf], 0
0x000052f7      c644240d01     mov byte [rsp + 0xd], 1
0x000052fc      48c744241801.  mov qword [rsp + 0x18], 1
0x00005305      41bf01000000   mov r15d, 1
0x0000530b      4889442448     mov qword [rsp + 0x48], rax
0x00005310      e9bef3ffff     jmp 0x46d3
0x00005315      488d057f2d00.  lea rax, str.l______l                   ; 0x809b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000531c      c644240e01     mov byte [rsp + 0xe], 1
0x00005321      c644247c00     mov byte [rsp + 0x7c], 0
0x00005326      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00005329      48c744245000.  mov qword [rsp + 0x50], 0
0x00005332      c644240f01     mov byte [rsp + 0xf], 1
0x00005337      c644240d01     mov byte [rsp + 0xd], 1
0x0000533c      48c744241801.  mov qword [rsp + 0x18], 1
0x00005345      4531ff         xor r15d, r15d
0x00005348      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000534d      c74424080500.  mov dword [rsp + 8], 5
0x00005355      e979f3ffff     jmp 0x46d3
0x0000535a      c644240e01     mov byte [rsp + 0xe], 1
0x0000535f      c644247c00     mov byte [rsp + 0x7c], 0
0x00005364      4531e4         xor r12d, r12d
0x00005367      48c744245000.  mov qword [rsp + 0x50], 0
0x00005370      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00005375      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00005378      c644240d01     mov byte [rsp + 0xd], 1
0x0000537d      48c744241800.  mov qword [rsp + 0x18], 0
0x00005386      48c744244800.  mov qword [rsp + 0x48], 0
0x0000538f      e93ff3ffff     jmp 0x46d3
0x00005394      837c24080a     cmp dword [rsp + 8], 0xa
0x00005399      7456           je 0x53f1
0x0000539b      488d35fd2c00.  lea rsi, [0x0000809f]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000053a2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000053a4      ba05000000     mov edx, 5
0x000053a9      e882c2ffff     call sym.imp.dcgettext
0x000053ae      4889c1         mov rcx, rax
0x000053b1      4889442468     mov qword [rsp + 0x68], rax
0x000053b6      488d05e22c00.  lea rax, [0x0000809f]                   ; "`"
0x000053bd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x000053c0      0f8498030000   je 0x575e
0x000053c6      488d35d02c00.  lea rsi, [0x0000809d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000053cd      31ff           xor edi, edi
0x000053cf      ba05000000     mov edx, 5
0x000053d4      e857c2ffff     call sym.imp.dcgettext
0x000053d9      4889c1         mov rcx, rax
0x000053dc      4889442460     mov qword [rsp + 0x60], rax
0x000053e1      488d05b52c00.  lea rax, [0x0000809d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000053e8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000053eb      0f8483030000   je 0x5774
0x000053f1      4531ff         xor r15d, r15d
0x000053f4      85db           test ebx, ebx
0x000053f6      0f84c1010000   je 0x55bd
0x000053fc      85db           test ebx, ebx
0x000053fe      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00005403      0f9544240f     setne byte [rsp + 0xf]
0x00005408      4531e4         xor r12d, r12d
0x0000540b      4889df         mov rdi, rbx
0x0000540e      e83dc2ffff     call sym.imp.strlen
0x00005413      48895c2448     mov qword [rsp + 0x48], rbx
0x00005418      4889442418     mov qword [rsp + 0x18], rax
0x0000541d      c644240e01     mov byte [rsp + 0xe], 1
0x00005422      c644247c00     mov byte [rsp + 0x7c], 0
0x00005427      48c744245000.  mov qword [rsp + 0x50], 0
0x00005430      c644240d01     mov byte [rsp + 0xd], 1
0x00005435      e999f2ffff     jmp 0x46d3
0x0000543a      c644240e01     mov byte [rsp + 0xe], 1
0x0000543f      c644247c00     mov byte [rsp + 0x7c], 0
0x00005444      4531e4         xor r12d, r12d
0x00005447      48c744245000.  mov qword [rsp + 0x50], 0
0x00005450      c644240f00     mov byte [rsp + 0xf], 0
0x00005455      4531ff         xor r15d, r15d
0x00005458      c644240d00     mov byte [rsp + 0xd], 0
0x0000545d      48c744241800.  mov qword [rsp + 0x18], 0
0x00005466      48c744244800.  mov qword [rsp + 0x48], 0
0x0000546f      e95ff2ffff     jmp 0x46d3
0x00005474      c644240e01     mov byte [rsp + 0xe], 1
0x00005479      c644247c00     mov byte [rsp + 0x7c], 0
0x0000547e      4531e4         xor r12d, r12d
0x00005481      48c744245000.  mov qword [rsp + 0x50], 0
0x0000548a      c644240f01     mov byte [rsp + 0xf], 1
0x0000548f      c644240d01     mov byte [rsp + 0xd], 1
0x00005494      e91af2ffff     jmp 0x46b3
0x00005499      4d39fd         cmp r13, r15
0x0000549c      7605           jbe 0x54a3
0x0000549e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x000054a3      488d4102       lea rax, [rcx + 2]
0x000054a7      4939c5         cmp r13, rax
0x000054aa      7606           jbe 0x54b2
0x000054ac      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x000054b2      4489e0         mov eax, r12d
0x000054b5      4c8d7903       lea r15, [rcx + 3]
0x000054b9      4531e4         xor r12d, r12d
0x000054bc      bb30000000     mov ebx, 0x30                           ; '0'
0x000054c1      e962f3ffff     jmp 0x4828
0x000054c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000054d0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000054d5      4c89dd         mov rbp, r11
0x000054d8      885c240d       mov byte [rsp + 0xd], bl
0x000054dc      e9a8fcffff     jmp 0x5189
0x000054e1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000054e6      4531e4         xor r12d, r12d
0x000054e9      e902fbffff     jmp 0x4ff0
0x000054ee      4531d2         xor r10d, r10d
0x000054f1      e9b7fbffff     jmp 0x50ad
0x000054f6      48c744245000.  mov qword [rsp + 0x50], 0
0x000054ff      c644240e01     mov byte [rsp + 0xe], 1
0x00005504      4531e4         xor r12d, r12d
0x00005507      c644247c00     mov byte [rsp + 0x7c], 0
0x0000550c      e9dafdffff     jmp 0x52eb
0x00005511      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00005516      4c89f6         mov rsi, r14
0x00005519      4c89e9         mov rcx, r13
0x0000551c      4889d8         mov rax, rbx
0x0000551f      4889df         mov rdi, rbx
0x00005522      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00005528      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000552d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00005535      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00005538      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000553e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00005546      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000554b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00005550      7326           jae 0x5578
0x00005552      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00005555      7510           jne 0x5567
0x00005557      eb1f           jmp 0x5578
0x00005559      0f1f80000000.  nop dword [rax]
0x00005560      41803c0100     cmp byte [r9 + rax], 0
0x00005565      740e           je 0x5575
0x00005567      4883c001       add rax, 1
0x0000556b      488d540500     lea rdx, [rbp + rax]
0x00005570      4939d3         cmp r11, rdx
0x00005573      77eb           ja 0x5560
0x00005575      4889c7         mov rdi, rax
0x00005578      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000557d      4531e4         xor r12d, r12d
0x00005580      e961faffff     jmp 0x4fe6
0x00005585      4889df         mov rdi, rbx
0x00005588      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000558e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00005593      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00005599      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000055a1      4531e4         xor r12d, r12d
0x000055a4      4c8b742440     mov r14, qword [rsp + 0x40]
0x000055a9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000055ae      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000055b3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000055b8      e929faffff     jmp 0x4fe6
0x000055bd      488b542468     mov rdx, qword [rsp + 0x68]
0x000055c2      0fb602         movzx eax, byte [rdx]
0x000055c5      84c0           test al, al
0x000055c7      0f842ffeffff   je 0x53fc
0x000055cd      0f1f00         nop dword [rax]
0x000055d0      4d39fd         cmp r13, r15
0x000055d3      7604           jbe 0x55d9
0x000055d5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000055d9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000055dd      420fb6043a     movzx eax, byte [rdx + r15]
0x000055e2      84c0           test al, al
0x000055e4      75ea           jne 0x55d0
0x000055e6      e911feffff     jmp 0x53fc
0x000055eb      89d0           mov eax, edx
0x000055ed      e955f5ffff     jmp 0x4b47
0x000055f2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000055f6      80fb3e         cmp bl, 0x3e
0x000055f9      0f8771f8ffff   ja 0x4e70
0x000055ff      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00005609      480fa3d8       bt rax, rbx
0x0000560d      0f835df8ffff   jae 0x4e70
0x00005613      807c240f00     cmp byte [rsp + 0xf], 0
0x00005618      0f85e4010000   jne 0x5802                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000561e      4d39fd         cmp r13, r15
0x00005621      7605           jbe 0x5628
0x00005623      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00005628      498d4701       lea rax, [r15 + 1]
0x0000562c      4939c5         cmp r13, rax
0x0000562f      7606           jbe 0x5637
0x00005631      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00005637      498d4702       lea rax, [r15 + 2]
0x0000563b      4939c5         cmp r13, rax
0x0000563e      7606           jbe 0x5646
0x00005640      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00005646      498d4703       lea rax, [r15 + 3]
0x0000564a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000564d      7606           jbe 0x5655
0x0000564f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00005655      4983c704       add r15, 4
0x00005659      31d2           xor edx, edx
0x0000565b      4531e4         xor r12d, r12d
0x0000565e      31c0           xor eax, eax
0x00005660      4889cd         mov rbp, rcx
0x00005663      e9c0f1ffff     jmp 0x4828
0x00005668      85db           test ebx, ebx
0x0000566a      0f8488010000   je 0x57f8
0x00005670      488d05262a00.  lea rax, [0x0000809d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005677      c644240e01     mov byte [rsp + 0xe], 1
0x0000567c      c644247c00     mov byte [rsp + 0x7c], 0
0x00005681      4531e4         xor r12d, r12d
0x00005684      48c744245000.  mov qword [rsp + 0x50], 0
0x0000568d      c644240f01     mov byte [rsp + 0xf], 1
0x00005692      c644240d00     mov byte [rsp + 0xd], 0
0x00005697      48c744241801.  mov qword [rsp + 0x18], 1
0x000056a0      4531ff         xor r15d, r15d
0x000056a3      4889442448     mov qword [rsp + 0x48], rax
0x000056a8      e926f0ffff     jmp 0x46d3
0x000056ad      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x000056b0      4c89dd         mov rbp, r11
0x000056b3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000056b8      e9ccfaffff     jmp 0x5189
0x000056bd      488d05d72900.  lea rax, str.l______l                   ; 0x809b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000056c4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x000056c9      c644247c00     mov byte [rsp + 0x7c], 0
0x000056ce      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x000056d1      48c744245000.  mov qword [rsp + 0x50], 0
0x000056da      c644240f01     mov byte [rsp + 0xf], 1
0x000056df      c644240d01     mov byte [rsp + 0xd], 1
0x000056e4      48c744241801.  mov qword [rsp + 0x18], 1
0x000056ed      4531ff         xor r15d, r15d
0x000056f0      4889442448     mov qword [rsp + 0x48], rax
0x000056f5      e9d9efffff     jmp 0x46d3
0x000056fa      89d0           mov eax, edx
0x000056fc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00005701      4885db         test rbx, rbx
0x00005704      742c           je 0x5732
0x00005706      84c0           test al, al
0x00005708      7428           je 0x5732
0x0000570a      0fb60b         movzx ecx, byte [rbx]
0x0000570d      4889d8         mov rax, rbx
0x00005710      84c9           test cl, cl
0x00005712      741e           je 0x5732
0x00005714      4c89fa         mov rdx, r15
0x00005717      4c29f8         sub rax, r15
0x0000571a      4939d5         cmp r13, rdx
0x0000571d      7604           jbe 0x5723
0x0000571f      41880c16       mov byte [r14 + rdx], cl
0x00005723      4883c201       add rdx, 1
0x00005727      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000572b      84c9           test cl, cl
0x0000572d      75eb           jne 0x571a
0x0000572f      4989d7         mov r15, rdx
0x00005732      4d39fd         cmp r13, r15
0x00005735      0f869efaffff   jbe 0x51d9
0x0000573b      43c6043e00     mov byte [r14 + r15], 0
0x00005740      e994faffff     jmp 0x51d9
0x00005745      837c240802     cmp dword [rsp + 8], 2
0x0000574a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000574f      4c89dd         mov rbp, r11
0x00005752      0f94c0         sete al
0x00005755      885c240d       mov byte [rsp + 0xd], bl
0x00005759      e92bfaffff     jmp 0x5189
0x0000575e      8b742408       mov esi, dword [rsp + 8]
0x00005762      4889cf         mov rdi, rcx
0x00005765      e8a6edffff     call sym.gettext_quote.part.1
0x0000576a      4889442468     mov qword [rsp + 0x68], rax
0x0000576f      e952fcffff     jmp 0x53c6
0x00005774      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00005778      4889cf         mov rdi, rcx
0x0000577b      e890edffff     call sym.gettext_quote.part.1
0x00005780      4889442460     mov qword [rsp + 0x60], rax
0x00005785      e967fcffff     jmp 0x53f1
0x0000578a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000578f      4c89dd         mov rbp, r11
0x00005792      89d0           mov eax, edx
0x00005794      885c240d       mov byte [rsp + 0xd], bl
0x00005798      e9ecf9ffff     jmp 0x5189
0x0000579d      4883ec08       sub rsp, 8
0x000057a1      41b805000000   mov r8d, 5
0x000057a7      4c89d9         mov rcx, r11
0x000057aa      ff742468       push qword [rsp + 0x68]
0x000057ae      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x000057b2      4c89f7         mov rdi, r14
0x000057b5      ff742438       push qword [rsp + 0x38]
0x000057b9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000057c1      488b542430     mov rdx, qword [rsp + 0x30]
0x000057c6      488b742470     mov rsi, qword [rsp + 0x70]
0x000057cb      e830eeffff     call sym.quotearg_buffer_restyled
0x000057d0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x000057d4      4989c7         mov r15, rax
0x000057d7      e9fdf9ffff     jmp 0x51d9
0x000057dc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000057e1      e916ffffff     jmp 0x56fc
0x000057e6      c74424080200.  mov dword [rsp + 8], 2
0x000057ee      e996f9ffff     jmp 0x5189
0x000057f3      e868beffff     call sym.imp.__stack_chk_fail
0x000057f8      c644240d00     mov byte [rsp + 0xd], 0
0x000057fd      e96ffaffff     jmp 0x5271
0x00005802      4c89dd         mov rbp, r11
0x00005805      e996f9ffff     jmp 0x51a0
0x0000580a      c644240e01     mov byte [rsp + 0xe], 1
0x0000580f      31c0           xor eax, eax
0x00005811      4531e4         xor r12d, r12d
0x00005814      48c744245000.  mov qword [rsp + 0x50], 0
0x0000581d      e9a2f5ffff     jmp 0x4dc4
0x00005822      4c89ea         mov rdx, r13
0x00005825      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000582a      e9f3f5ffff     jmp 0x4e22
0x0000582f      e86cbdffff     call sym.imp.abort
0x00005834      6690           nop
0x00005836      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00005840      4157           push r15
0x00005842      4156           push r14
0x00005844      4c63ff         movsxd r15, edi
0x00005847      4155           push r13
0x00005849      4154           push r12
0x0000584b      4989d6         mov r14, rdx
0x0000584e      55             push rbp
0x0000584f      53             push rbx
0x00005850      4889cd         mov rbp, rcx
0x00005853      4883ec28       sub rsp, 0x28
0x00005857      4889742408     mov qword [rsp + 8], rsi
0x0000585c      e84fbdffff     call sym.imp.__errno_location
0x00005861      4989c5         mov r13, rax
0x00005864      8b00           mov eax, dword [rax]
0x00005866      4585ff         test r15d, r15d
0x00005869      488b1df05720.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x00005870      89442418       mov dword [rsp + 0x18], eax
0x00005874      0f8867010000   js 0x59e1
0x0000587a      44393dd75720.  cmp dword [obj.nslots], r15d            ; [0x20b058:4]=1
0x00005881      7f62           jg 0x58e5
0x00005883      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000588a      0f8456010000   je 0x59e6
0x00005890      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00005894      488d05d55720.  lea rax, obj.slotvec0                   ; 0x20b070
0x0000589b      4963f4         movsxd rsi, r12d
0x0000589e      48c1e604       shl rsi, 4
0x000058a2      4839c3         cmp rbx, rax
0x000058a5      0f8415010000   je 0x59c0
0x000058ab      4889df         mov rdi, rbx
0x000058ae      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x000058b3      4889c3         mov rbx, rax
0x000058b6      488905a35720.  mov qword [obj.slotvec], rax            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x000058bd      48633d945720.  movsxd rdi, dword [obj.nslots]          ; [0x20b058:4]=1
0x000058c4      4489e2         mov edx, r12d
0x000058c7      31f6           xor esi, esi
0x000058c9      29fa           sub edx, edi
0x000058cb      48c1e704       shl rdi, 4
0x000058cf      4863d2         movsxd rdx, edx
0x000058d2      4801df         add rdi, rbx
0x000058d5      48c1e204       shl rdx, 4
0x000058d9      e812beffff     call sym.imp.memset
0x000058de      448925735720.  mov dword [obj.nslots], r12d            ; [0x20b058:4]=1
0x000058e5      8b4504         mov eax, dword [rbp + 4]
0x000058e8      49c1e704       shl r15, 4
0x000058ec      4883ec08       sub rsp, 8
0x000058f0      4c01fb         add rbx, r15
0x000058f3      4c8d7d08       lea r15, [rbp + 8]
0x000058f7      448b4500       mov r8d, dword [rbp]
0x000058fb      4c8b1b         mov r11, qword [rbx]
0x000058fe      4c8b6308       mov r12, qword [rbx + 8]
0x00005902      4c89f1         mov rcx, r14
0x00005905      83c801         or eax, 1
0x00005908      89442424       mov dword [rsp + 0x24], eax
0x0000590c      ff7530         push qword [rbp + 0x30]
0x0000590f      4189c1         mov r9d, eax
0x00005912      ff7528         push qword [rbp + 0x28]
0x00005915      4157           push r15
0x00005917      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000591a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000591f      4c89e7         mov rdi, r12
0x00005922      4c895c2430     mov qword [rsp + 0x30], r11
0x00005927      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000592c      4883c420       add rsp, 0x20
0x00005930      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00005935      4939c3         cmp r11, rax
0x00005938      7767           ja 0x59a1
0x0000593a      488d7001       lea rsi, [rax + 1]
0x0000593e      488d05db5720.  lea rax, obj.slot0                      ; 0x20b120
0x00005945      4939c4         cmp r12, rax
0x00005948      488933         mov qword [rbx], rsi
0x0000594b      7412           je 0x595f
0x0000594d      4c89e7         mov rdi, r12
0x00005950      4889742410     mov qword [rsp + 0x10], rsi
0x00005955      e836bcffff     call sym.imp.free
0x0000595a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000595f      4889f7         mov rdi, rsi
0x00005962      4889742410     mov qword [rsp + 0x10], rsi
0x00005967      e8540e0000     call sym.xmalloc
0x0000596c      4883ec08       sub rsp, 8
0x00005970      48894308       mov qword [rbx + 8], rax
0x00005974      448b4500       mov r8d, dword [rbp]
0x00005978      ff7530         push qword [rbp + 0x30]
0x0000597b      ff7528         push qword [rbp + 0x28]
0x0000597e      4c89f1         mov rcx, r14
0x00005981      4157           push r15
0x00005983      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00005988      4889c7         mov rdi, rax
0x0000598b      488b542428     mov rdx, qword [rsp + 0x28]
0x00005990      488b742430     mov rsi, qword [rsp + 0x30]
0x00005995      4989c4         mov r12, rax
0x00005998      e863ecffff     call sym.quotearg_buffer_restyled
0x0000599d      4883c420       add rsp, 0x20
0x000059a1      8b442418       mov eax, dword [rsp + 0x18]
0x000059a5      41894500       mov dword [r13], eax
0x000059a9      4883c428       add rsp, 0x28
0x000059ad      4c89e0         mov rax, r12
0x000059b0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x000059b1      5d             pop rbp
0x000059b2      415c           pop r12
0x000059b4      415d           pop r13
0x000059b6      415e           pop r14
0x000059b8      415f           pop r15
0x000059ba      c3             ret
0x000059bb      0f1f440000     nop dword [rax + rax]
0x000059c0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x000059c2      e8590e0000     call sym.xrealloc
0x000059c7      660f6f05a156.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x000059cf      4889c3         mov rbx, rax
0x000059d2      488905875620.  mov qword [obj.slotvec], rax            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x000059d9      0f1100         movups xmmword [rax], xmm0
0x000059dc      e9dcfeffff     jmp 0x58bd
0x000059e1      e8babbffff     call sym.imp.abort
0x000059e6      e825100000     call sym.xalloc_die
0x000059eb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x000059f0      4154           push r12
0x000059f2      55             push rbp
0x000059f3      53             push rbx
0x000059f4      4889fb         mov rbx, rdi
0x000059f7      e8b4bbffff     call sym.imp.__errno_location
0x000059fc      448b20         mov r12d, dword [rax]
0x000059ff      4889c5         mov rbp, rax
0x00005a02      488d05175820.  lea rax, obj.default_quoting_options    ; 0x20b220
0x00005a09      4885db         test rbx, rbx
0x00005a0c      be38000000     mov esi, 0x38                           ; '8'
0x00005a11      480f44d8       cmove rbx, rax
0x00005a15      4889df         mov rdi, rbx
0x00005a18      e8a30f0000     call sym.xmemdup
0x00005a1d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00005a21      5b             pop rbx
0x00005a22      5d             pop rbp
0x00005a23      415c           pop r12
0x00005a25      c3             ret
0x00005a26      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00005a30      488d05e95720.  lea rax, obj.default_quoting_options    ; 0x20b220
0x00005a37      4885ff         test rdi, rdi
0x00005a3a      480f44f8       cmove rdi, rax
0x00005a3e      8b07           mov eax, dword [rdi]
0x00005a40      c3             ret
0x00005a41      0f1f440000     nop dword [rax + rax]
0x00005a46      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00005a50      488d05c95720.  lea rax, obj.default_quoting_options    ; 0x20b220
0x00005a57      4885ff         test rdi, rdi
0x00005a5a      480f44f8       cmove rdi, rax
0x00005a5e      8937           mov dword [rdi], esi
0x00005a60      c3             ret
0x00005a61      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00005a66      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00005a70      488d05a95720.  lea rax, obj.default_quoting_options    ; 0x20b220
0x00005a77      4885ff         test rdi, rdi
0x00005a7a      89f1           mov ecx, esi
0x00005a7c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00005a80      89f0           mov eax, esi
0x00005a82      83e11f         and ecx, 0x1f
0x00005a85      c0e805         shr al, 5
0x00005a88      0fb6c0         movzx eax, al
0x00005a8b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00005a90      8b37           mov esi, dword [rdi]
0x00005a92      89f0           mov eax, esi
0x00005a94      d3e8           shr eax, cl
0x00005a96      31c2           xor edx, eax
0x00005a98      83e001         and eax, 1
0x00005a9b      83e201         and edx, 1
0x00005a9e      d3e2           shl edx, cl
0x00005aa0      31f2           xor edx, esi
0x00005aa2      8917           mov dword [rdi], edx
0x00005aa4      c3             ret
0x00005aa5      90             nop
0x00005aa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00005ab0      488d05695720.  lea rax, obj.default_quoting_options    ; 0x20b220
0x00005ab7      4885ff         test rdi, rdi
0x00005aba      480f44f8       cmove rdi, rax
0x00005abe      8b4704         mov eax, dword [rdi + 4]
0x00005ac1      897704         mov dword [rdi + 4], esi
0x00005ac4      c3             ret
0x00005ac5      90             nop
0x00005ac6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00005ad0      488d05495720.  lea rax, obj.default_quoting_options    ; 0x20b220
0x00005ad7      4885ff         test rdi, rdi
0x00005ada      480f44f8       cmove rdi, rax
0x00005ade      4885f6         test rsi, rsi
0x00005ae1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00005ae7      740e           je 0x5af7
0x00005ae9      4885d2         test rdx, rdx
0x00005aec      7409           je 0x5af7
0x00005aee      48897728       mov qword [rdi + 0x28], rsi
0x00005af2      48895730       mov qword [rdi + 0x30], rdx
0x00005af6      c3             ret
0x00005af7      4883ec08       sub rsp, 8
0x00005afb      e8a0baffff     call sym.imp.abort
;-- quotearg_buffer:
0x00005b00      4157           push r15
0x00005b02      4156           push r14
0x00005b04      488d05155720.  lea rax, obj.default_quoting_options    ; 0x20b220
0x00005b0b      4155           push r13
0x00005b0d      4154           push r12
0x00005b0f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00005b12      55             push rbp
0x00005b13      53             push rbx
0x00005b14      4c89c3         mov rbx, r8
0x00005b17      4989f6         mov r14, rsi
0x00005b1a      4989d7         mov r15, rdx
0x00005b1d      4883ec18       sub rsp, 0x18
0x00005b21      4d85c0         test r8, r8
0x00005b24      480f44d8       cmove rbx, rax
0x00005b28      48894c2408     mov qword [rsp + 8], rcx
0x00005b2d      e87ebaffff     call sym.imp.__errno_location
0x00005b32      448b20         mov r12d, dword [rax]
0x00005b35      4889c5         mov rbp, rax
0x00005b38      488d4308       lea rax, [rbx + 8]
0x00005b3c      4883ec08       sub rsp, 8
0x00005b40      448b4b04       mov r9d, dword [rbx + 4]
0x00005b44      ff7330         push qword [rbx + 0x30]
0x00005b47      448b03         mov r8d, dword [rbx]
0x00005b4a      ff7328         push qword [rbx + 0x28]
0x00005b4d      4c89fa         mov rdx, r15
0x00005b50      50             push rax
0x00005b51      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00005b56      4c89f6         mov rsi, r14
0x00005b59      4c89ef         mov rdi, r13
0x00005b5c      e89feaffff     call sym.quotearg_buffer_restyled
0x00005b61      44896500       mov dword [rbp], r12d
0x00005b65      4883c438       add rsp, 0x38
0x00005b69      5b             pop rbx
0x00005b6a      5d             pop rbp
0x00005b6b      415c           pop r12
0x00005b6d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00005b6f      415e           pop r14
0x00005b71      415f           pop r15
0x00005b73      c3             ret
0x00005b74      6690           nop
0x00005b76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00005b80      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00005b82      4156           push r14
0x00005b84      488d05955620.  lea rax, obj.default_quoting_options    ; 0x20b220
0x00005b8b      4155           push r13
0x00005b8d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00005b8f      4989d4         mov r12, rdx
0x00005b92      55             push rbp
0x00005b93      53             push rbx
0x00005b94      4889cb         mov rbx, rcx
0x00005b97      4989fe         mov r14, rdi
0x00005b9a      4989f7         mov r15, rsi
0x00005b9d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00005ba1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00005ba4      480f44d8       cmove rbx, rax
0x00005ba8      31ed           xor ebp, ebp
0x00005baa      e801baffff     call sym.imp.__errno_location
0x00005baf      4d85e4         test r12, r12
0x00005bb2      4989c5         mov r13, rax
0x00005bb5      8b00           mov eax, dword [rax]
0x00005bb7      400f94c5       sete bpl
0x00005bbb      0b6b04         or ebp, dword [rbx + 4]
0x00005bbe      4c8d5308       lea r10, [rbx + 8]
0x00005bc2      4883ec08       sub rsp, 8
0x00005bc6      448b03         mov r8d, dword [rbx]
0x00005bc9      4c89f9         mov rcx, r15
0x00005bcc      89442414       mov dword [rsp + 0x14], eax
0x00005bd0      ff7330         push qword [rbx + 0x30]
0x00005bd3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00005bd6      ff7328         push qword [rbx + 0x28]
0x00005bd9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00005bdb      31f6           xor esi, esi
0x00005bdd      4189e9         mov r9d, ebp
0x00005be0      31ff           xor edi, edi
0x00005be2      4c89542440     mov qword [rsp + 0x40], r10
0x00005be7      e814eaffff     call sym.quotearg_buffer_restyled
0x00005bec      488d7001       lea rsi, [rax + 1]
0x00005bf0      4889442448     mov qword [rsp + 0x48], rax
0x00005bf5      4883c420       add rsp, 0x20
0x00005bf9      4889f7         mov rdi, rsi
0x00005bfc      4889742418     mov qword [rsp + 0x18], rsi
0x00005c01      e8ba0b0000     call sym.xmalloc
0x00005c06      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00005c0b      4883ec08       sub rsp, 8
0x00005c0f      ff7330         push qword [rbx + 0x30]
0x00005c12      ff7328         push qword [rbx + 0x28]
0x00005c15      4c8b542438     mov r10, qword [rsp + 0x38]
0x00005c1a      4189e9         mov r9d, ebp
0x00005c1d      448b03         mov r8d, dword [rbx]
0x00005c20      4c89f9         mov rcx, r15
0x00005c23      4c89f2         mov rdx, r14
0x00005c26      4889c7         mov rdi, rax
0x00005c29      4152           push r10
0x00005c2b      488b742438     mov rsi, qword [rsp + 0x38]
0x00005c30      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00005c35      8b44242c       mov eax, dword [rsp + 0x2c]
0x00005c39      4883c420       add rsp, 0x20
0x00005c3d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00005c40      41894500       mov dword [r13], eax
0x00005c44      7409           je 0x5c4f
0x00005c46      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00005c4b      4d891c24       mov qword [r12], r11
0x00005c4f      488b442410     mov rax, qword [rsp + 0x10]
0x00005c54      4883c438       add rsp, 0x38
0x00005c58      5b             pop rbx
0x00005c59      5d             pop rbp
0x00005c5a      415c           pop r12
0x00005c5c      415d           pop r13
0x00005c5e      415e           pop r14
0x00005c60      415f           pop r15
0x00005c62      c3             ret
0x00005c63      0f1f00         nop dword [rax]
0x00005c66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00005c70      4889d1         mov rcx, rdx
0x00005c73      31d2           xor edx, edx
0x00005c75      e906ffffff     jmp sym.quotearg_alloc_mem
0x00005c7a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00005c80      8b05d2532000   mov eax, dword [obj.nslots]             ; [0x20b058:4]=1
0x00005c86      4154           push r12
0x00005c88      4c8b25d15320.  mov r12, qword [obj.slotvec]            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x00005c8f      55             push rbp
0x00005c90      53             push rbx
0x00005c91      83f801         cmp eax, 1
0x00005c94      7e2b           jle 0x5cc1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00005c96      83e802         sub eax, 2
0x00005c99      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00005c9e      48c1e004       shl rax, 4
0x00005ca2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00005ca7      660f1f840000.  nop word [rax + rax]
0x00005cb0      488b3b         mov rdi, qword [rbx]
0x00005cb3      4883c310       add rbx, 0x10
0x00005cb7      e8d4b8ffff     call sym.imp.free
0x00005cbc      4839eb         cmp rbx, rbp
0x00005cbf      75ef           jne 0x5cb0
0x00005cc1      498b7c2408     mov rdi, qword [r12 + 8]
0x00005cc6      488d1d535420.  lea rbx, obj.slot0                      ; 0x20b120
0x00005ccd      4839df         cmp rdi, rbx
0x00005cd0      7417           je 0x5ce9
0x00005cd2      e8b9b8ffff     call sym.imp.free
0x00005cd7      48c7058e5320.  mov qword [obj.slotvec0], 0x100         ; [0x20b070:8]=256
0x00005ce2      48891d8f5320.  mov qword [0x0020b078], rbx             ; [0x20b078:8]=0x20b120 obj.slot0
0x00005ce9      488d1d805320.  lea rbx, obj.slotvec0                   ; 0x20b070
0x00005cf0      4939dc         cmp r12, rbx
0x00005cf3      740f           je 0x5d04
0x00005cf5      4c89e7         mov rdi, r12
0x00005cf8      e893b8ffff     call sym.imp.free
0x00005cfd      48891d5c5320.  mov qword [obj.slotvec], rbx            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x00005d04      5b             pop rbx
0x00005d05      c70549532000.  mov dword [obj.nslots], 1               ; [0x20b058:4]=1
0x00005d0f      5d             pop rbp
0x00005d10      415c           pop r12
0x00005d12      c3             ret
0x00005d13      0f1f00         nop dword [rax]
0x00005d16      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00005d20      488d0df95420.  lea rcx, obj.default_quoting_options    ; 0x20b220
0x00005d27      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005d2e      e90dfbffff     jmp sym.quotearg_n_options
0x00005d33      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00005d36      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00005d40      488d0dd95420.  lea rcx, obj.default_quoting_options    ; 0x20b220
0x00005d47      e9f4faffff     jmp sym.quotearg_n_options
0x00005d4c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00005d50      488d0dc95420.  lea rcx, obj.default_quoting_options    ; 0x20b220
0x00005d57      4889fe         mov rsi, rdi
0x00005d5a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005d61      31ff           xor edi, edi
0x00005d63      e9d8faffff     jmp sym.quotearg_n_options
0x00005d68      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00005d70      488d0da95420.  lea rcx, obj.default_quoting_options    ; 0x20b220
0x00005d77      4889f2         mov rdx, rsi
0x00005d7a      4889fe         mov rsi, rdi
0x00005d7d      31ff           xor edi, edi
0x00005d7f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00005d84      6690           nop
0x00005d86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00005d90      4883ec48       sub rsp, 0x48
0x00005d94      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00005d97      64488b142528.  mov rdx, qword fs:[0x28]
0x00005da0      4889542438     mov qword [rsp + 0x38], rdx
0x00005da5      31d2           xor edx, edx
0x00005da7      83fe0a         cmp esi, 0xa
0x00005daa      7468           je 0x5e14
0x00005dac      893424         mov dword [rsp], esi
0x00005daf      4889e1         mov rcx, rsp
0x00005db2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005db9      4889c6         mov rsi, rax
0x00005dbc      48c744240400.  mov qword [rsp + 4], 0
0x00005dc5      48c744240c00.  mov qword [rsp + 0xc], 0
0x00005dce      48c744241400.  mov qword [rsp + 0x14], 0
0x00005dd7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005de0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00005de9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005df2      c74424340000.  mov dword [rsp + 0x34], 0
0x00005dfa      e841faffff     call sym.quotearg_n_options
0x00005dff      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00005e04      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005e0d      750a           jne 0x5e19                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00005e0f      4883c448       add rsp, 0x48
0x00005e13      c3             ret
0x00005e14      e887b7ffff     call sym.imp.abort
0x00005e19      e842b8ffff     call sym.imp.__stack_chk_fail
0x00005e1e      6690           nop
;-- quotearg_n_style_mem:
0x00005e20      4883ec48       sub rsp, 0x48
0x00005e24      4889d0         mov rax, rdx
0x00005e27      4889ca         mov rdx, rcx
0x00005e2a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00005e33      48894c2438     mov qword [rsp + 0x38], rcx
0x00005e38      31c9           xor ecx, ecx
0x00005e3a      83fe0a         cmp esi, 0xa
0x00005e3d      7461           je 0x5ea0
0x00005e3f      893424         mov dword [rsp], esi
0x00005e42      4889e1         mov rcx, rsp
0x00005e45      4889c6         mov rsi, rax
0x00005e48      48c744240400.  mov qword [rsp + 4], 0
0x00005e51      48c744240c00.  mov qword [rsp + 0xc], 0
0x00005e5a      48c744241400.  mov qword [rsp + 0x14], 0
0x00005e63      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005e6c      48c744242400.  mov qword [rsp + 0x24], 0
0x00005e75      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005e7e      c74424340000.  mov dword [rsp + 0x34], 0
0x00005e86      e8b5f9ffff     call sym.quotearg_n_options
0x00005e8b      488b542438     mov rdx, qword [rsp + 0x38]
0x00005e90      644833142528.  xor rdx, qword fs:[0x28]
0x00005e99      750a           jne 0x5ea5
0x00005e9b      4883c448       add rsp, 0x48
0x00005e9f      c3             ret
0x00005ea0      e8fbb6ffff     call sym.imp.abort
0x00005ea5      e8b6b7ffff     call sym.imp.__stack_chk_fail
0x00005eaa      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00005eb0      4889f2         mov rdx, rsi
0x00005eb3      89fe           mov esi, edi
0x00005eb5      31ff           xor edi, edi
0x00005eb7      e9d4feffff     jmp sym.quotearg_n_style
0x00005ebc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00005ec0      4889d1         mov rcx, rdx
0x00005ec3      4889f2         mov rdx, rsi
0x00005ec6      89fe           mov esi, edi
0x00005ec8      31ff           xor edi, edi
0x00005eca      e951ffffff     jmp sym.quotearg_n_style_mem
0x00005ecf      90             nop
;-- quotearg_char_mem:
0x00005ed0      4883ec48       sub rsp, 0x48
0x00005ed4      89d1           mov ecx, edx
0x00005ed6      64488b042528.  mov rax, qword fs:[0x28]
0x00005edf      4889442438     mov qword [rsp + 0x38], rax
0x00005ee4      31c0           xor eax, eax
0x00005ee6      488b05635320.  mov rax, qword [0x0020b250]             ; [0x20b250:8]=0
0x00005eed      4989e0         mov r8, rsp
0x00005ef0      83e11f         and ecx, 0x1f
0x00005ef3      660f6f052553.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005efb      4889442430     mov qword [rsp + 0x30], rax
0x00005f00      89d0           mov eax, edx
0x00005f02      0f290424       movaps xmmword [rsp], xmm0
0x00005f06      c0e805         shr al, 5
0x00005f09      0fb6c0         movzx eax, al
0x00005f0c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00005f11      660f6f051753.  movdqa xmm0, xmmword [0x0020b230]
0x00005f19      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005f1e      660f6f051a53.  movdqa xmm0, xmmword [0x0020b240]
0x00005f26      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005f2b      418b11         mov edx, dword [r9]
0x00005f2e      89d0           mov eax, edx
0x00005f30      d3e8           shr eax, cl
0x00005f32      f7d0           not eax
0x00005f34      83e001         and eax, 1
0x00005f37      d3e0           shl eax, cl
0x00005f39      4c89c1         mov rcx, r8
0x00005f3c      31d0           xor eax, edx
0x00005f3e      4889f2         mov rdx, rsi
0x00005f41      4889fe         mov rsi, rdi
0x00005f44      418901         mov dword [r9], eax
0x00005f47      31ff           xor edi, edi
0x00005f49      e8f2f8ffff     call sym.quotearg_n_options
0x00005f4e      488b742438     mov rsi, qword [rsp + 0x38]
0x00005f53      644833342528.  xor rsi, qword fs:[0x28]
0x00005f5c      7505           jne 0x5f63
0x00005f5e      4883c448       add rsp, 0x48
0x00005f62      c3             ret
0x00005f63      e8f8b6ffff     call sym.imp.__stack_chk_fail
0x00005f68      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00005f70      400fbed6       movsx edx, sil
0x00005f74      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00005f7b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00005f80      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005f85      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00005f8c      e93fffffff     jmp sym.quotearg_char_mem
0x00005f91      0f1f440000     nop dword [rax + rax]
0x00005f96      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00005fa0      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005fa5      e926ffffff     jmp sym.quotearg_char_mem
0x00005faa      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00005fb0      4883ec48       sub rsp, 0x48
0x00005fb4      4889d0         mov rax, rdx
0x00005fb7      64488b142528.  mov rdx, qword fs:[0x28]
0x00005fc0      4889542438     mov qword [rsp + 0x38], rdx
0x00005fc5      31d2           xor edx, edx
0x00005fc7      83fe0a         cmp esi, 0xa
0x00005fca      7468           je 0x6034
0x00005fcc      893424         mov dword [rsp], esi
0x00005fcf      4889e1         mov rcx, rsp
0x00005fd2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005fd9      4889c6         mov rsi, rax
0x00005fdc      48c744240400.  mov qword [rsp + 4], 0
0x00005fe5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00005fee      48c744241400.  mov qword [rsp + 0x14], 0
0x00005ff7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00006000      48c744242400.  mov qword [rsp + 0x24], 0
0x00006009      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00006012      c74424340000.  mov dword [rsp + 0x34], 0
0x0000601a      e821f8ffff     call sym.quotearg_n_options
0x0000601f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00006024      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000602d      750a           jne 0x6039
0x0000602f      4883c448       add rsp, 0x48
0x00006033      c3             ret
0x00006034      e867b5ffff     call sym.imp.abort
0x00006039      e822b6ffff     call sym.imp.__stack_chk_fail
0x0000603e      6690           nop
;-- quotearg_n_custom_mem:
0x00006040      4883ec48       sub rsp, 0x48
0x00006044      4989c9         mov r9, rcx
0x00006047      488b0d025220.  mov rcx, qword [0x0020b250]             ; [0x20b250:8]=0
0x0000604e      660f6f05ca51.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00006056      64488b042528.  mov rax, qword fs:[0x28]
0x0000605f      4889442438     mov qword [rsp + 0x38], rax
0x00006064      31c0           xor eax, eax
0x00006066      0f290424       movaps xmmword [rsp], xmm0
0x0000606a      4885f6         test rsi, rsi
0x0000606d      48894c2430     mov qword [rsp + 0x30], rcx
0x00006072      c704240a0000.  mov dword [rsp], 0xa
0x00006079      660f6f05af51.  movdqa xmm0, xmmword [0x0020b230]
0x00006081      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00006086      660f6f05b251.  movdqa xmm0, xmmword [0x0020b240]
0x0000608e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00006093      7432           je 0x60c7
0x00006095      4885d2         test rdx, rdx
0x00006098      742d           je 0x60c7
0x0000609a      4889742428     mov qword [rsp + 0x28], rsi
0x0000609f      4889542430     mov qword [rsp + 0x30], rdx
0x000060a4      4889e1         mov rcx, rsp
0x000060a7      4c89c2         mov rdx, r8
0x000060aa      4c89ce         mov rsi, r9
0x000060ad      e88ef7ffff     call sym.quotearg_n_options
0x000060b2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000060b7      6448333c2528.  xor rdi, qword fs:[0x28]
0x000060c0      750a           jne 0x60cc
0x000060c2      4883c448       add rsp, 0x48
0x000060c6      c3             ret
0x000060c7      e8d4b4ffff     call sym.imp.abort
0x000060cc      e88fb5ffff     call sym.imp.__stack_chk_fail
0x000060d1      0f1f440000     nop dword [rax + rax]
0x000060d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x000060e0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000060e7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x000060ec      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x000060f0      4889d1         mov rcx, rdx
0x000060f3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000060fa      4889f2         mov rdx, rsi
0x000060fd      4889fe         mov rsi, rdi
0x00006100      31ff           xor edi, edi
0x00006102      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00006107      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00006110      4989c8         mov r8, rcx
0x00006113      4889d1         mov rcx, rdx
0x00006116      4889f2         mov rdx, rsi
0x00006119      4889fe         mov rsi, rdi
0x0000611c      31ff           xor edi, edi
0x0000611e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00006123      0f1f00         nop dword [rax]
0x00006126      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00006130      488d0de94e20.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x00006137      e904f7ffff     jmp sym.quotearg_n_options
0x0000613c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00006140      488d0dd94e20.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x00006147      4889f2         mov rdx, rsi
0x0000614a      4889fe         mov rsi, rdi
0x0000614d      31ff           xor edi, edi
0x0000614f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00006154      6690           nop
0x00006156      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00006160      488d0db94e20.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x00006167      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000616e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00006173      0f1f00         nop dword [rax]
0x00006176      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00006180      488d0d994e20.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x00006187      4889fe         mov rsi, rdi
0x0000618a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00006191      31ff           xor edi, edi
0x00006193      e9a8f6ffff     jmp sym.quotearg_n_options
0x00006198      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x000061a0      4157           push r15
0x000061a2      4156           push r14
0x000061a4      4155           push r13
0x000061a6      4154           push r12
0x000061a8      4d89cc         mov r12, r9
0x000061ab      55             push rbp
0x000061ac      53             push rbx
0x000061ad      4889fd         mov rbp, rdi
0x000061b0      4c89c3         mov rbx, r8
0x000061b3      4883ec28       sub rsp, 0x28
0x000061b7      4885f6         test rsi, rsi
0x000061ba      0f8418010000   je 0x62d8
0x000061c0      4989d0         mov r8, rdx
0x000061c3      488d159e2300.  lea rdx, [0x00008568]                   ; "%s (%s) %s\n"
0x000061ca      4989c9         mov r9, rcx
0x000061cd      31c0           xor eax, eax
0x000061cf      4889f1         mov rcx, rsi
0x000061d2      be01000000     mov esi, 1
0x000061d7      e894b6ffff     call sym.imp.__fprintf_chk
0x000061dc      488d35982300.  lea rsi, [0x0000857b]                   ; "(C)"
0x000061e3      31ff           xor edi, edi
0x000061e5      ba05000000     mov edx, 5
0x000061ea      e841b4ffff     call sym.imp.dcgettext
0x000061ef      488d15aa2600.  lea rdx, obj.version_etc_copyright      ; 0x88a0 ; "Copyright %s %d Free Software Foundation, Inc."
0x000061f6      4889c1         mov rcx, rax
0x000061f9      41b8e3070000   mov r8d, 0x7e3
0x000061ff      be01000000     mov esi, 1
0x00006204      4889ef         mov rdi, rbp
0x00006207      31c0           xor eax, eax
0x00006209      e862b6ffff     call sym.imp.__fprintf_chk
0x0000620e      488d35f32300.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x8608 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00006215      31ff           xor edi, edi
0x00006217      ba05000000     mov edx, 5
0x0000621c      e80fb4ffff     call sym.imp.dcgettext
0x00006221      4889ee         mov rsi, rbp
0x00006224      4889c7         mov rdi, rax
0x00006227      e804b5ffff     call sym.imp.fputs_unlocked
0x0000622c      4983fc09       cmp r12, 9
0x00006230      0f873a030000   ja 0x6570
0x00006236      488d15272600.  lea rdx, [0x00008864]
0x0000623d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00006241      4801d0         add rax, rdx
0x00006244      ffe0           jmp rax
0x00006246      662e0f1f8400.  nop word cs:[rax + rax]
0x00006250      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006254      488b4310       mov rax, qword [rbx + 0x10]
0x00006258      488d35192500.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x8778 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000625f      4c8b4308       mov r8, qword [rbx + 8]
0x00006263      ba05000000     mov edx, 5
0x00006268      31ff           xor edi, edi
0x0000626a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000626e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006272      4c894c2410     mov qword [rsp + 0x10], r9
0x00006277      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000627b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000627f      48890424       mov qword [rsp], rax
0x00006283      4c89442408     mov qword [rsp + 8], r8
0x00006288      488b1b         mov rbx, qword [rbx]
0x0000628b      e8a0b3ffff     call sym.imp.dcgettext
0x00006290      4883ec08       sub rsp, 8
0x00006294      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00006299      4889c2         mov rdx, rax
0x0000629c      4889d9         mov rcx, rbx
0x0000629f      be01000000     mov esi, 1
0x000062a4      4889ef         mov rdi, rbp
0x000062a7      31c0           xor eax, eax
0x000062a9      4151           push r9
0x000062ab      4155           push r13
0x000062ad      4154           push r12
0x000062af      4157           push r15
0x000062b1      4156           push r14
0x000062b3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000062b8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000062bd      e8aeb5ffff     call sym.imp.__fprintf_chk
0x000062c2      4883c430       add rsp, 0x30
0x000062c6      4883c428       add rsp, 0x28
0x000062ca      5b             pop rbx
0x000062cb      5d             pop rbp
0x000062cc      415c           pop r12
0x000062ce      415d           pop r13
0x000062d0      415e           pop r14
0x000062d2      415f           pop r15
0x000062d4      c3             ret
0x000062d5      0f1f00         nop dword [rax]
0x000062d8      4989c8         mov r8, rcx
0x000062db      4889d1         mov rcx, rdx
0x000062de      488d158f2200.  lea rdx, str.s__s                       ; 0x8574 ; "%s %s\n"
0x000062e5      be01000000     mov esi, 1
0x000062ea      31c0           xor eax, eax
0x000062ec      e87fb5ffff     call sym.imp.__fprintf_chk
0x000062f1      e9e6feffff     jmp 0x61dc
0x000062f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00006300      4c8b5340       mov r10, qword [rbx + 0x40]
0x00006304      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006308      488d35992400.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x87a8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000630f      488b4310       mov rax, qword [rbx + 0x10]
0x00006313      4c8b4308       mov r8, qword [rbx + 8]
0x00006317      ba05000000     mov edx, 5
0x0000631c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006320      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006324      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006328      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000632c      488b1b         mov rbx, qword [rbx]
0x0000632f      4c89542418     mov qword [rsp + 0x18], r10
0x00006334      4c894c2410     mov qword [rsp + 0x10], r9
0x00006339      48890424       mov qword [rsp], rax
0x0000633d      4c89442408     mov qword [rsp + 8], r8
0x00006342      31ff           xor edi, edi
0x00006344      e8e7b2ffff     call sym.imp.dcgettext
0x00006349      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000634e      4152           push r10
0x00006350      e93fffffff     jmp 0x6294
0x00006355      0f1f00         nop dword [rax]
0x00006358      488b1b         mov rbx, qword [rbx]
0x0000635b      488d351d2200.  lea rsi, str.Written_by__s.             ; 0x857f ; "Written by %s.\n"
0x00006362      ba05000000     mov edx, 5
0x00006367      31ff           xor edi, edi
0x00006369      e8c2b2ffff     call sym.imp.dcgettext
0x0000636e      4883c428       add rsp, 0x28
0x00006372      4889d9         mov rcx, rbx
0x00006375      4889ef         mov rdi, rbp
0x00006378      5b             pop rbx
0x00006379      5d             pop rbp
0x0000637a      415c           pop r12
0x0000637c      415d           pop r13
0x0000637e      415e           pop r14
0x00006380      415f           pop r15
0x00006382      4889c2         mov rdx, rax
0x00006385      be01000000     mov esi, 1
0x0000638a      31c0           xor eax, eax
0x0000638c      e9dfb4ffff     jmp sym.imp.__fprintf_chk
0x00006391      0f1f80000000.  nop dword [rax]
0x00006398      4c8b6308       mov r12, qword [rbx + 8]
0x0000639c      488d35ec2100.  lea rsi, str.Written_by__s_and__s.      ; 0x858f ; "Written by %s and %s.\n"
0x000063a3      488b1b         mov rbx, qword [rbx]
0x000063a6      ba05000000     mov edx, 5
0x000063ab      31ff           xor edi, edi
0x000063ad      e87eb2ffff     call sym.imp.dcgettext
0x000063b2      4883c428       add rsp, 0x28
0x000063b6      4d89e0         mov r8, r12
0x000063b9      4889d9         mov rcx, rbx
0x000063bc      4889ef         mov rdi, rbp
0x000063bf      4889c2         mov rdx, rax
0x000063c2      be01000000     mov esi, 1
0x000063c7      5b             pop rbx
0x000063c8      5d             pop rbp
0x000063c9      415c           pop r12
0x000063cb      415d           pop r13
0x000063cd      415e           pop r14
0x000063cf      415f           pop r15
0x000063d1      31c0           xor eax, eax
0x000063d3      e998b4ffff     jmp sym.imp.__fprintf_chk
0x000063d8      0f1f84000000.  nop dword [rax + rax]
0x000063e0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000063e4      4c8b6308       mov r12, qword [rbx + 8]
0x000063e8      488d35b72100.  lea rsi, str.Written_by__s___s__and__s. ; 0x85a6 ; "Written by %s, %s, and %s.\n"
0x000063ef      488b1b         mov rbx, qword [rbx]
0x000063f2      ba05000000     mov edx, 5
0x000063f7      31ff           xor edi, edi
0x000063f9      e832b2ffff     call sym.imp.dcgettext
0x000063fe      4883c428       add rsp, 0x28
0x00006402      4d89e9         mov r9, r13
0x00006405      4d89e0         mov r8, r12
0x00006408      4889d9         mov rcx, rbx
0x0000640b      4889ef         mov rdi, rbp
0x0000640e      4889c2         mov rdx, rax
0x00006411      5b             pop rbx
0x00006412      5d             pop rbp
0x00006413      415c           pop r12
0x00006415      415d           pop r13
0x00006417      415e           pop r14
0x00006419      415f           pop r15
0x0000641b      be01000000     mov esi, 1
0x00006420      31c0           xor eax, eax
0x00006422      e949b4ffff     jmp sym.imp.__fprintf_chk
0x00006427      660f1f840000.  nop word [rax + rax]
0x00006430      488d35a12200.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x86d8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00006437      ba05000000     mov edx, 5
0x0000643c      31ff           xor edi, edi
0x0000643e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006442      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006446      4c8b6308       mov r12, qword [rbx + 8]
0x0000644a      488b1b         mov rbx, qword [rbx]
0x0000644d      e8deb1ffff     call sym.imp.dcgettext
0x00006452      4883ec08       sub rsp, 8
0x00006456      4156           push r14
0x00006458      4889c2         mov rdx, rax
0x0000645b      4d89e9         mov r9, r13
0x0000645e      4d89e0         mov r8, r12
0x00006461      4889d9         mov rcx, rbx
0x00006464      4889ef         mov rdi, rbp
0x00006467      be01000000     mov esi, 1
0x0000646c      31c0           xor eax, eax
0x0000646e      e8fdb3ffff     call sym.imp.__fprintf_chk
0x00006473      58             pop rax
0x00006474      5a             pop rdx
0x00006475      4883c428       add rsp, 0x28
0x00006479      5b             pop rbx
0x0000647a      5d             pop rbp
0x0000647b      415c           pop r12
0x0000647d      415d           pop r13
0x0000647f      415e           pop r14
0x00006481      415f           pop r15
0x00006483      c3             ret
0x00006484      0f1f4000       nop dword [rax]
0x00006488      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000648c      488d35652200.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x86f8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00006493      ba05000000     mov edx, 5
0x00006498      31ff           xor edi, edi
0x0000649a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000649e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000064a2      4c8b6308       mov r12, qword [rbx + 8]
0x000064a6      488b1b         mov rbx, qword [rbx]
0x000064a9      e882b1ffff     call sym.imp.dcgettext
0x000064ae      4157           push r15
0x000064b0      eba4           jmp 0x6456
0x000064b2      660f1f440000   nop word [rax + rax]
0x000064b8      4c8b4308       mov r8, qword [rbx + 8]
0x000064bc      4c8b6328       mov r12, qword [rbx + 0x28]
0x000064c0      488d35592200.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x8720 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000064c7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000064cb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000064cf      ba05000000     mov edx, 5
0x000064d4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000064d8      31ff           xor edi, edi
0x000064da      488b1b         mov rbx, qword [rbx]
0x000064dd      4c890424       mov qword [rsp], r8
0x000064e1      e84ab1ffff     call sym.imp.dcgettext
0x000064e6      4883ec08       sub rsp, 8
0x000064ea      4d89e9         mov r9, r13
0x000064ed      4154           push r12
0x000064ef      4157           push r15
0x000064f1      4156           push r14
0x000064f3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000064f8      4889d9         mov rcx, rbx
0x000064fb      4889c2         mov rdx, rax
0x000064fe      4889ef         mov rdi, rbp
0x00006501      be01000000     mov esi, 1
0x00006506      31c0           xor eax, eax
0x00006508      e863b3ffff     call sym.imp.__fprintf_chk
0x0000650d      4883c420       add rsp, 0x20
0x00006511      4883c428       add rsp, 0x28
0x00006515      5b             pop rbx
0x00006516      5d             pop rbp
0x00006517      415c           pop r12
0x00006519      415d           pop r13
0x0000651b      415e           pop r14
0x0000651d      415f           pop r15
0x0000651f      c3             ret
0x00006520      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00006524      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006528      488d35192200.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x8748 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000652f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006533      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006537      ba05000000     mov edx, 5
0x0000653c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006540      4c8b4308       mov r8, qword [rbx + 8]
0x00006544      31ff           xor edi, edi
0x00006546      4c894c2408     mov qword [rsp + 8], r9
0x0000654b      488b1b         mov rbx, qword [rbx]
0x0000654e      4c890424       mov qword [rsp], r8
0x00006552      e8d9b0ffff     call sym.imp.dcgettext
0x00006557      4155           push r13
0x00006559      4154           push r12
0x0000655b      4157           push r15
0x0000655d      4156           push r14
0x0000655f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00006564      eb8d           jmp 0x64f3
0x00006566      662e0f1f8400.  nop word cs:[rax + rax]
0x00006570      4c8b5340       mov r10, qword [rbx + 0x40]
0x00006574      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006578      ba05000000     mov edx, 5
0x0000657d      488b4310       mov rax, qword [rbx + 0x10]
0x00006581      4c8b4308       mov r8, qword [rbx + 8]
0x00006585      488d35542200.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x87e0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000658c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006590      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006594      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006598      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000659c      4c89542418     mov qword [rsp + 0x18], r10
0x000065a1      4c894c2410     mov qword [rsp + 0x10], r9
0x000065a6      48890424       mov qword [rsp], rax
0x000065aa      4c89442408     mov qword [rsp + 8], r8
0x000065af      488b1b         mov rbx, qword [rbx]
0x000065b2      e98bfdffff     jmp 0x6342
0x000065b7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000065c0      4531c9         xor r9d, r9d
0x000065c3      49833800       cmp qword [r8], 0
0x000065c7      7412           je 0x65db
0x000065c9      0f1f80000000.  nop dword [rax]
0x000065d0      4983c101       add r9, 1
0x000065d4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000065d9      75f5           jne 0x65d0
0x000065db      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000065e0      4883ec68       sub rsp, 0x68
0x000065e4      4d89c2         mov r10, r8
0x000065e7      4531c9         xor r9d, r9d
0x000065ea      64488b042528.  mov rax, qword fs:[0x28]
0x000065f3      4889442458     mov qword [rsp + 0x58], rax
0x000065f8      31c0           xor eax, eax
0x000065fa      4989e0         mov r8, rsp
0x000065fd      0f1f00         nop dword [rax]
0x00006600      418b02         mov eax, dword [r10]
0x00006603      83f82f         cmp eax, 0x2f
0x00006606      7742           ja 0x664a
0x00006608      4189c3         mov r11d, eax
0x0000660b      4d035a10       add r11, qword [r10 + 0x10]
0x0000660f      83c008         add eax, 8
0x00006612      418902         mov dword [r10], eax
0x00006615      498b03         mov rax, qword [r11]
0x00006618      4885c0         test rax, rax
0x0000661b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000661f      740a           je 0x662b
0x00006621      4983c101       add r9, 1
0x00006625      4983f90a       cmp r9, 0xa
0x00006629      75d5           jne 0x6600
0x0000662b      e870fbffff     call sym.version_etc_arn
0x00006630      488b442458     mov rax, qword [rsp + 0x58]
0x00006635      644833042528.  xor rax, qword fs:[0x28]
0x0000663e      7505           jne 0x6645
0x00006640      4883c468       add rsp, 0x68
0x00006644      c3             ret
0x00006645      e816b0ffff     call sym.imp.__stack_chk_fail
0x0000664a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000664e      498d4308       lea rax, [r11 + 8]
0x00006652      49894208       mov qword [r10 + 8], rax
0x00006656      ebbd           jmp 0x6615
0x00006658      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00006660      55             push rbp
0x00006661      53             push rbx
0x00006662      41ba20000000   mov r10d, 0x20                          ; "@"
0x00006668      4531db         xor r11d, r11d
0x0000666b      4881ecb80000.  sub rsp, 0xb8
0x00006672      64488b042528.  mov rax, qword fs:[0x28]
0x0000667b      4889442478     mov qword [rsp + 0x78], rax
0x00006680      31c0           xor eax, eax
0x00006682      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000668a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00006692      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000669a      4c8d442420     lea r8, [rsp + 0x20]
0x0000669f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000066a7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000066af      4889442410     mov qword [rsp + 0x10], rax
0x000066b4      488d84248000.  lea rax, [rsp + 0x80]
0x000066bc      4531c9         xor r9d, r9d
0x000066bf      4889442418     mov qword [rsp + 0x18], rax
0x000066c4      4889c5         mov rbp, rax
0x000066c7      660f1f840000.  nop word [rax + rax]
0x000066d0      4183fa2f       cmp r10d, 0x2f
0x000066d4      7756           ja 0x672c
0x000066d6      4489d0         mov eax, r10d
0x000066d9      41bb01000000   mov r11d, 1
0x000066df      4183c208       add r10d, 8
0x000066e3      4801e8         add rax, rbp
0x000066e6      488b00         mov rax, qword [rax]
0x000066e9      4885c0         test rax, rax
0x000066ec      4b8904c8       mov qword [r8 + r9*8], rax
0x000066f0      740a           je 0x66fc
0x000066f2      4983c101       add r9, 1
0x000066f6      4983f90a       cmp r9, 0xa
0x000066fa      75d4           jne 0x66d0
0x000066fc      4584db         test r11b, r11b
0x000066ff      7524           jne 0x6725
0x00006701      e89afaffff     call sym.version_etc_arn
0x00006706      488b442478     mov rax, qword [rsp + 0x78]
0x0000670b      644833042528.  xor rax, qword fs:[0x28]
0x00006714      750a           jne 0x6720
0x00006716      4881c4b80000.  add rsp, 0xb8
0x0000671d      5b             pop rbx
0x0000671e      5d             pop rbp
0x0000671f      c3             ret
0x00006720      e83bafffff     call sym.imp.__stack_chk_fail
0x00006725      4489542408     mov dword [rsp + 8], r10d
0x0000672a      ebd5           jmp 0x6701
0x0000672c      4889d8         mov rax, rbx
0x0000672f      4883c308       add rbx, 8
0x00006733      ebb1           jmp 0x66e6
0x00006735      90             nop
0x00006736      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00006740      53             push rbx
0x00006741      488d357a1e00.  lea rsi, str.Report_bugs_to:__s         ; 0x85c2 ; "\nReport bugs to: %s\n"
0x00006748      ba05000000     mov edx, 5
0x0000674d      31ff           xor edi, edi
0x0000674f      e8dcaeffff     call sym.imp.dcgettext
0x00006754      488d157c1e00.  lea rdx, str.bug_coreutils_gnu.org      ; 0x85d7 ; "bug-coreutils@gnu.org"
0x0000675b      4889c6         mov rsi, rax
0x0000675e      bf01000000     mov edi, 1
0x00006763      31c0           xor eax, eax
0x00006765      e886b0ffff     call sym.imp.__printf_chk
0x0000676a      488d357c1e00.  lea rsi, str.s_home_page:___s           ; 0x85ed ; "%s home page: <%s>\n"
0x00006771      ba05000000     mov edx, 5
0x00006776      31ff           xor edi, edi
0x00006778      e8b3aeffff     call sym.imp.dcgettext
0x0000677d      488d0d141400.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x7b98 ; "https://www.gnu.org/software/coreutils/"
0x00006784      488d15650c00.  lea rdx, str.GNU_coreutils              ; 0x73f0 ; "GNU coreutils"
0x0000678b      4889c6         mov rsi, rax
0x0000678e      bf01000000     mov edi, 1
0x00006793      31c0           xor eax, eax
0x00006795      e856b0ffff     call sym.imp.__printf_chk
0x0000679a      488b1de74820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x000067a1      488d35782000.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x8820 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000067a8      31ff           xor edi, edi
0x000067aa      ba05000000     mov edx, 5
0x000067af      e87caeffff     call sym.imp.dcgettext
0x000067b4      4889de         mov rsi, rbx
0x000067b7      4889c7         mov rdi, rax
0x000067ba      5b             pop rbx
0x000067bb      e970afffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000067c0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000067c1      4889fb         mov rbx, rdi
0x000067c4      e8b7afffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000067c9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000067cc      7505           jne 0x67d3
0x000067ce      4885db         test rbx, rbx
0x000067d1      7502           jne 0x67d5
0x000067d3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000067d4      c3             ret
0x000067d5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000067da      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000067e0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000067e3      48f7e6         mul rsi
0x000067e6      4889c7         mov rdi, rax
0x000067e9      0f90c0         seto al
0x000067ec      4885ff         test rdi, rdi
0x000067ef      780a           js 0x67fb
0x000067f1      0fb6c0         movzx eax, al
0x000067f4      4885c0         test rax, rax
0x000067f7      7502           jne 0x67fb
0x000067f9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x000067fb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x000067ff      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00006804      6690           nop
0x00006806      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00006810      ebae           jmp sym.xmalloc
0x00006812      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00006816      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00006820      4885f6         test rsi, rsi
0x00006823      53             push rbx
0x00006824      4889f3         mov rbx, rsi
0x00006827      7505           jne 0x682e
0x00006829      4885ff         test rdi, rdi
0x0000682c      751a           jne 0x6848
0x0000682e      4889de         mov rsi, rbx
0x00006831      e89aafffff     call sym.imp.realloc
0x00006836      4885c0         test rax, rax
0x00006839      7505           jne 0x6840
0x0000683b      4885db         test rbx, rbx
0x0000683e      7511           jne 0x6851                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00006840      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00006841      c3             ret
0x00006842      660f1f440000   nop word [rax + rax]
0x00006848      e843adffff     call sym.imp.free
0x0000684d      31c0           xor eax, eax
0x0000684f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00006850      c3             ret
0x00006851      e8ba010000     call sym.xalloc_die
0x00006856      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00006860      4889f0         mov rax, rsi
0x00006863      48f7e2         mul rdx
0x00006866      4889c6         mov rsi, rax
0x00006869      0f90c0         seto al
0x0000686c      4885f6         test rsi, rsi
0x0000686f      780a           js 0x687b
0x00006871      0fb6c0         movzx eax, al
0x00006874      4885c0         test rax, rax
0x00006877      7502           jne 0x687b
0x00006879      eba5           jmp sym.xrealloc
0x0000687b      4883ec08       sub rsp, 8
0x0000687f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00006884      6690           nop
0x00006886      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00006890      4885ff         test rdi, rdi
0x00006893      4989d1         mov r9, rdx
0x00006896      488b0e         mov rcx, qword [rsi]
0x00006899      7435           je 0x68d0
0x0000689b      31d2           xor edx, edx
0x0000689d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000068a7      49f7f1         div r9
0x000068aa      4839c8         cmp rax, rcx
0x000068ad      763c           jbe 0x68eb
0x000068af      4889c8         mov rax, rcx
0x000068b2      48d1e8         shr rax, 1
0x000068b5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000068ba      48890e         mov qword [rsi], rcx
0x000068bd      490fafc9       imul rcx, r9
0x000068c1      4889ce         mov rsi, rcx
0x000068c4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000068c9      0f1f80000000.  nop dword [rax]
0x000068d0      4885c9         test rcx, rcx
0x000068d3      7423           je 0x68f8
0x000068d5      4889c8         mov rax, rcx
0x000068d8      49f7e1         mul r9
0x000068db      0f90c2         seto dl
0x000068de      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000068e1      0fb6d2         movzx edx, dl
0x000068e4      7805           js 0x68eb
0x000068e6      4885d2         test rdx, rdx
0x000068e9      74cf           je 0x68ba
0x000068eb      4883ec08       sub rsp, 8
0x000068ef      e81c010000     call sym.xalloc_die
0x000068f4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x000068f8      31d2           xor edx, edx
0x000068fa      b880000000     mov eax, 0x80
0x000068ff      4531c0         xor r8d, r8d
0x00006902      49f7f1         div r9
0x00006905      4885c0         test rax, rax
0x00006908      410f94c0       sete r8b
0x0000690c      498d0c00       lea rcx, [r8 + rax]
0x00006910      ebc3           jmp 0x68d5
0x00006912      0f1f4000       nop dword [rax]
0x00006916      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00006920      4885ff         test rdi, rdi
0x00006923      488b06         mov rax, qword [rsi]
0x00006926      7428           je 0x6950
0x00006928      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00006932      4839d0         cmp rax, rdx
0x00006935      772a           ja 0x6961
0x00006937      4889c2         mov rdx, rax
0x0000693a      48d1ea         shr rdx, 1
0x0000693d      488d440201     lea rax, [rdx + rax + 1]
0x00006942      488906         mov qword [rsi], rax
0x00006945      4889c6         mov rsi, rax
0x00006948      e9d3feffff     jmp sym.xrealloc
0x0000694d      0f1f00         nop dword [rax]
0x00006950      4885c0         test rax, rax
0x00006953      ba80000000     mov edx, 0x80
0x00006958      480f44c2       cmove rax, rdx
0x0000695c      4885c0         test rax, rax
0x0000695f      79e1           jns 0x6942
0x00006961      4883ec08       sub rsp, 8
0x00006965      e8a6000000     call sym.xalloc_die
0x0000696a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00006970      53             push rbx
0x00006971      4889fb         mov rbx, rdi
0x00006974      e847feffff     call sym.xmalloc
0x00006979      4889da         mov rdx, rbx
0x0000697c      31f6           xor esi, esi
0x0000697e      4889c7         mov rdi, rax
0x00006981      5b             pop rbx
0x00006982      e969adffff     jmp sym.imp.memset
0x00006987      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00006990      4889f8         mov rax, rdi
0x00006993      4883ec08       sub rsp, 8
0x00006997      48f7e6         mul rsi
0x0000699a      0f90c2         seto dl
0x0000699d      4885c0         test rax, rax
0x000069a0      7817           js 0x69b9
0x000069a2      0fb6d2         movzx edx, dl
0x000069a5      4885d2         test rdx, rdx
0x000069a8      750f           jne 0x69b9
0x000069aa      e891adffff     call sym.imp.calloc
0x000069af      4885c0         test rax, rax
0x000069b2      7405           je 0x69b9
0x000069b4      4883c408       add rsp, 8
0x000069b8      c3             ret
0x000069b9      e852000000     call sym.xalloc_die
0x000069be      6690           nop
;-- xmemdup:
0x000069c0      55             push rbp
0x000069c1      53             push rbx
0x000069c2      4889fd         mov rbp, rdi
0x000069c5      4889f7         mov rdi, rsi
0x000069c8      4889f3         mov rbx, rsi
0x000069cb      4883ec08       sub rsp, 8
0x000069cf      e8ecfdffff     call sym.xmalloc
0x000069d4      4883c408       add rsp, 8
0x000069d8      4889da         mov rdx, rbx
0x000069db      4889ee         mov rsi, rbp
0x000069de      5b             pop rbx
0x000069df      5d             pop rbp
0x000069e0      4889c7         mov rdi, rax
0x000069e3      e978adffff     jmp sym.imp.memcpy
0x000069e8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x000069f0      53             push rbx
0x000069f1      4889fb         mov rbx, rdi
0x000069f4      e857acffff     call sym.imp.strlen
0x000069f9      4889df         mov rdi, rbx
0x000069fc      488d7001       lea rsi, [rax + 1]
0x00006a00      5b             pop rbx
0x00006a01      ebbd           jmp sym.xmemdup
0x00006a03      662e0f1f8400.  nop word cs:[rax + rax]
0x00006a0d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00006a10      488d35b81e00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x88cf ; "memory exhausted"
0x00006a17      4883ec08       sub rsp, 8
0x00006a1b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00006a20      31ff           xor edi, edi
0x00006a22      e809acffff     call sym.imp.dcgettext
0x00006a27      8b3deb452000   mov edi, dword [obj.exit_failure]       ; [0x20b018:4]=1
0x00006a2d      488d15101600.  lea rdx, [0x00008044]                   ; "%s"
0x00006a34      4889c1         mov rcx, rax
0x00006a37      31f6           xor esi, esi
0x00006a39      31c0           xor eax, eax
0x00006a3b      e8d0adffff     call sym.imp.error
0x00006a40      e85babffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00006a45      662e0f1f8400.  nop word cs:[rax + rax]
0x00006a4f      90             nop
;-- xnumtoumax:
0x00006a50      4157           push r15                                ; ../coreutils-8.31/lib/xdectoint.c:38
0x00006a52      4156           push r14
0x00006a54      4989cf         mov r15, rcx
0x00006a57      4155           push r13
0x00006a59      4154           push r12
0x00006a5b      4989d6         mov r14, rdx
0x00006a5e      55             push rbp
0x00006a5f      53             push rbx
0x00006a60      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00006a62      31f6           xor esi, esi
0x00006a64      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/xdectoint.c:38
0x00006a67      4d89cd         mov r13, r9
0x00006a6a      4883ec18       sub rsp, 0x18
0x00006a6e      4889e1         mov rcx, rsp                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00006a71      8b5c2450       mov ebx, dword [rsp + 0x50]             ; ../coreutils-8.31/lib/xdectoint.c:38
0x00006a75      64488b042528.  mov rax, qword fs:[0x28]
0x00006a7e      4889442408     mov qword [rsp + 8], rax
0x00006a83      31c0           xor eax, eax
0x00006a85      e8f6000000     call sym.xstrtoumax                     ; ../coreutils-8.31/lib/xdectoint.c:42
0x00006a8a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xdectoint.c:44
0x00006a8c      0f858e000000   jne 0x6b20
0x00006a92      488b2c24       mov rbp, qword [rsp]                    ; ../coreutils-8.31/lib/xdectoint.c:46
0x00006a96      4c39f5         cmp rbp, r14
0x00006a99      7205           jb 0x6aa0
0x00006a9b      4c39fd         cmp rbp, r15
0x00006a9e      7654           jbe 0x6af4
0x00006aa0      e80babffff     call sym.imp.__errno_location
0x00006aa5      4881fd000000.  cmp rbp, 0x40000000                     ; ../coreutils-8.31/lib/xdectoint.c:52
0x00006aac      4989c6         mov r14, rax
0x00006aaf      19c0           sbb eax, eax
0x00006ab1      83e0d7         and eax, 0xffffffd7                     ; 4294967255
0x00006ab4      83c04b         add eax, 0x4b
0x00006ab7      418906         mov dword [r14], eax
0x00006aba      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/xdectoint.c:69
0x00006abd      e8bef6ffff     call sym.quote
0x00006ac2      418b36         mov esi, dword [r14]
0x00006ac5      4989c0         mov r8, rax
0x00006ac8      b800000000     mov eax, 0
0x00006acd      488d156c1500.  lea rdx, [0x00008040]                   ; "%s: %s"
0x00006ad4      4c89e9         mov rcx, r13
0x00006ad7      83fe16         cmp esi, 0x16
0x00006ada      0f44f0         cmove esi, eax
0x00006add      85db           test ebx, ebx
0x00006adf      b801000000     mov eax, 1
0x00006ae4      0f44d8         cmove ebx, eax
0x00006ae7      31c0           xor eax, eax
0x00006ae9      89df           mov edi, ebx
0x00006aeb      e820adffff     call sym.imp.error
0x00006af0      488b2c24       mov rbp, qword [rsp]
0x00006af4      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xdectoint.c:74
0x00006af9      644833142528.  xor rdx, qword fs:[0x28]
0x00006b02      4889e8         mov rax, rbp
0x00006b05      7544           jne 0x6b4b
0x00006b07      4883c418       add rsp, 0x18
0x00006b0b      5b             pop rbx
0x00006b0c      5d             pop rbp
0x00006b0d      415c           pop r12
0x00006b0f      415d           pop r13
0x00006b11      415e           pop r14
0x00006b13      415f           pop r15
0x00006b15      c3             ret
0x00006b16      662e0f1f8400.  nop word cs:[rax + rax]
0x00006b20      89c5           mov ebp, eax
0x00006b22      e889aaffff     call sym.imp.__errno_location
0x00006b27      83fd01         cmp ebp, 1                              ; ../coreutils-8.31/lib/xdectoint.c:61
0x00006b2a      4989c6         mov r14, rax
0x00006b2d      7411           je 0x6b40
0x00006b2f      83fd03         cmp ebp, 3                              ; ../coreutils-8.31/lib/xdectoint.c:63
0x00006b32      7586           jne 0x6aba
0x00006b34      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/xdectoint.c:64
0x00006b3a      e97bffffff     jmp 0x6aba
0x00006b3f      90             nop
0x00006b40      c7004b000000   mov dword [rax], 0x4b                   ; ../coreutils-8.31/lib/xdectoint.c:62 ; 'K'
                                                                       ; [0x4b:4]=0
0x00006b46      e96fffffff     jmp 0x6aba
0x00006b4b      e810abffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xdectoint.c:74
;-- xdectoumax:
0x00006b50      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/xdectoint.c:84
0x00006b54      4151           push r9                                 ; ../coreutils-8.31/lib/xdectoint.c:85
0x00006b56      4d89c1         mov r9, r8
0x00006b59      4989c8         mov r8, rcx
0x00006b5c      4889d1         mov rcx, rdx
0x00006b5f      4889f2         mov rdx, rsi
0x00006b62      be0a000000     mov esi, 0xa
0x00006b67      e8e4feffff     call sym.xnumtoumax
0x00006b6c      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/xdectoint.c:86
0x00006b70      c3             ret
0x00006b71      662e0f1f8400.  nop word cs:[rax + rax]
0x00006b7b      0f1f440000     nop dword [rax + rax]
;-- xstrtoumax:
0x00006b80      4157           push r15
0x00006b82      4156           push r14
0x00006b84      4155           push r13
0x00006b86      4154           push r12
0x00006b88      55             push rbp
0x00006b89      53             push rbx
0x00006b8a      4883ec28       sub rsp, 0x28
0x00006b8e      64488b042528.  mov rax, qword fs:[0x28]
0x00006b97      4889442418     mov qword [rsp + 0x18], rax
0x00006b9c      31c0           xor eax, eax
0x00006b9e      83fa24         cmp edx, 0x24
0x00006ba1      0f875e030000   ja 0x6f05
0x00006ba7      488d442410     lea rax, [rsp + 0x10]
0x00006bac      4989f7         mov r15, rsi
0x00006baf      4885f6         test rsi, rsi
0x00006bb2      4889fd         mov rbp, rdi
0x00006bb5      89542408       mov dword [rsp + 8], edx
0x00006bb9      4989ce         mov r14, rcx
0x00006bbc      4d89c5         mov r13, r8
0x00006bbf      4c0f44f8       cmove r15, rax
0x00006bc3      e8e8a9ffff     call sym.imp.__errno_location
0x00006bc8      c70000000000   mov dword [rax], 0
0x00006bce      4989c4         mov r12, rax
0x00006bd1      0fb65d00       movzx ebx, byte [rbp]
0x00006bd5      e8c6acffff     call sym.imp.__ctype_b_loc
0x00006bda      8b542408       mov edx, dword [rsp + 8]
0x00006bde      488b30         mov rsi, qword [rax]
0x00006be1      4889e8         mov rax, rbp
0x00006be4      eb11           jmp 0x6bf7
0x00006be6      662e0f1f8400.  nop word cs:[rax + rax]
0x00006bf0      4883c001       add rax, 1
0x00006bf4      0fb618         movzx ebx, byte [rax]
0x00006bf7      0fb6cb         movzx ecx, bl
0x00006bfa      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x00006bff      75ef           jne 0x6bf0
0x00006c01      80fb2d         cmp bl, 0x2d
0x00006c04      7452           je 0x6c58
0x00006c06      31c9           xor ecx, ecx
0x00006c08      4c89fe         mov rsi, r15
0x00006c0b      4889ef         mov rdi, rbp
0x00006c0e      e8cdaaffff     call sym.imp.__strtoul_internal
0x00006c13      498b0f         mov rcx, qword [r15]
0x00006c16      4889c3         mov rbx, rax
0x00006c19      4839e9         cmp rcx, rbp
0x00006c1c      742a           je 0x6c48
0x00006c1e      418b0424       mov eax, dword [r12]
0x00006c22      85c0           test eax, eax
0x00006c24      7462           je 0x6c88
0x00006c26      83f822         cmp eax, 0x22
0x00006c29      bd01000000     mov ebp, 1
0x00006c2e      7528           jne 0x6c58
0x00006c30      4d85ed         test r13, r13
0x00006c33      7409           je 0x6c3e
0x00006c35      440fb621       movzx r12d, byte [rcx]
0x00006c39      4584e4         test r12b, r12b
0x00006c3c      7579           jne 0x6cb7
0x00006c3e      49891e         mov qword [r14], rbx
0x00006c41      eb1a           jmp 0x6c5d
0x00006c43      0f1f440000     nop dword [rax + rax]
0x00006c48      4d85ed         test r13, r13
0x00006c4b      48894c2408     mov qword [rsp + 8], rcx
0x00006c50      753e           jne 0x6c90
0x00006c52      660f1f440000   nop word [rax + rax]
0x00006c58      bd04000000     mov ebp, 4
0x00006c5d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00006c62      6448333c2528.  xor rdi, qword fs:[0x28]
0x00006c6b      89e8           mov eax, ebp
0x00006c6d      0f858d020000   jne 0x6f00
0x00006c73      4883c428       add rsp, 0x28
0x00006c77      5b             pop rbx
0x00006c78      5d             pop rbp
0x00006c79      415c           pop r12
0x00006c7b      415d           pop r13
0x00006c7d      415e           pop r14
0x00006c7f      415f           pop r15
0x00006c81      c3             ret
0x00006c82      660f1f440000   nop word [rax + rax]
0x00006c88      31ed           xor ebp, ebp
0x00006c8a      eba4           jmp 0x6c30
0x00006c8c      0f1f4000       nop dword [rax]
0x00006c90      440fb66500     movzx r12d, byte [rbp]
0x00006c95      4584e4         test r12b, r12b
0x00006c98      74be           je 0x6c58
0x00006c9a      410fbef4       movsx esi, r12b
0x00006c9e      4c89ef         mov rdi, r13
0x00006ca1      31ed           xor ebp, ebp
0x00006ca3      e8e8a9ffff     call sym.imp.strchr
0x00006ca8      4885c0         test rax, rax
0x00006cab      bb01000000     mov ebx, 1
0x00006cb0      488b4c2408     mov rcx, qword [rsp + 8]
0x00006cb5      74a1           je 0x6c58
0x00006cb7      410fbef4       movsx esi, r12b
0x00006cbb      4c89ef         mov rdi, r13
0x00006cbe      48894c2408     mov qword [rsp + 8], rcx
0x00006cc3      e8c8a9ffff     call sym.imp.strchr
0x00006cc8      4885c0         test rax, rax
0x00006ccb      488b4c2408     mov rcx, qword [rsp + 8]
0x00006cd0      0f84c6000000   je 0x6d9c
0x00006cd6      418d4424bb     lea eax, [r12 - 0x45]
0x00006cdb      3c2f           cmp al, 0x2f
0x00006cdd      7751           ja 0x6d30
0x00006cdf      48ba45893000.  movabs rdx, 0x814400308945
0x00006ce9      480fa3c2       bt rdx, rax
0x00006ced      7341           jae 0x6d30
0x00006cef      be30000000     mov esi, 0x30                           ; '0'
0x00006cf4      4c89ef         mov rdi, r13
0x00006cf7      48894c2408     mov qword [rsp + 8], rcx
0x00006cfc      e88fa9ffff     call sym.imp.strchr
0x00006d01      4885c0         test rax, rax
0x00006d04      488b4c2408     mov rcx, qword [rsp + 8]
0x00006d09      7425           je 0x6d30
0x00006d0b      0fb64101       movzx eax, byte [rcx + 1]
0x00006d0f      3c44           cmp al, 0x44
0x00006d11      740c           je 0x6d1f
0x00006d13      3c69           cmp al, 0x69
0x00006d15      0f84cd010000   je 0x6ee8
0x00006d1b      3c42           cmp al, 0x42
0x00006d1d      7511           jne 0x6d30
0x00006d1f      bf02000000     mov edi, 2
0x00006d24      bee8030000     mov esi, 0x3e8
0x00006d29      eb0f           jmp 0x6d3a
0x00006d2b      0f1f440000     nop dword [rax + rax]
0x00006d30      bf01000000     mov edi, 1
0x00006d35      be00040000     mov esi, 0x400
0x00006d3a      4183ec42       sub r12d, 0x42
0x00006d3e      4180fc35       cmp r12b, 0x35
0x00006d42      7758           ja 0x6d9c
0x00006d44      488d15dd1b00.  lea rdx, [0x00008928]
0x00006d4b      450fb6e4       movzx r12d, r12b
0x00006d4f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00006d53      4801d0         add rax, rdx
0x00006d56      ffe0           jmp rax
0x00006d58      4889d8         mov rax, rbx
0x00006d5b      48f7e6         mul rsi
0x00006d5e      0f80ed010000   jo 0x6f51
0x00006d64      4531c0         xor r8d, r8d
0x00006d67      48f7e6         mul rsi
0x00006d6a      0f80d2010000   jo 0x6f42
0x00006d70      4889c3         mov rbx, rax
0x00006d73      4409c5         or ebp, r8d
0x00006d76      662e0f1f8400.  nop word cs:[rax + rax]
0x00006d80      4863ff         movsxd rdi, edi
0x00006d83      89e8           mov eax, ebp
0x00006d85      4801f9         add rcx, rdi
0x00006d88      83c802         or eax, 2
0x00006d8b      49890f         mov qword [r15], rcx
0x00006d8e      803900         cmp byte [rcx], 0
0x00006d91      49891e         mov qword [r14], rbx
0x00006d94      0f45e8         cmovne ebp, eax
0x00006d97      e9c1feffff     jmp 0x6c5d
0x00006d9c      49891e         mov qword [r14], rbx
0x00006d9f      83cd02         or ebp, 2
0x00006da2      e9b6feffff     jmp 0x6c5d
0x00006da7      ba02000000     mov edx, 2
0x00006dac      4889d0         mov rax, rdx
0x00006daf      48f7e3         mul rbx
0x00006db2      0f8096000000   jo 0x6e4e
0x00006db8      4801db         add rbx, rbx
0x00006dbb      ebc3           jmp 0x6d80
0x00006dbd      ba00020000     mov edx, 0x200
0x00006dc2      4889d0         mov rax, rdx
0x00006dc5      48f7e3         mul rbx
0x00006dc8      0f8080000000   jo 0x6e4e
0x00006dce      48c1e309       shl rbx, 9
0x00006dd2      ebac           jmp 0x6d80
0x00006dd4      41b807000000   mov r8d, 7
0x00006dda      4531c9         xor r9d, r9d
0x00006ddd      0f1f00         nop dword [rax]
0x00006de0      4889d8         mov rax, rbx
0x00006de3      48f7e6         mul rsi
0x00006de6      4889c3         mov rbx, rax
0x00006de9      0f808f010000   jo 0x6f7e
0x00006def      4183e801       sub r8d, 1
0x00006df3      75eb           jne 0x6de0
0x00006df5      4409cd         or ebp, r9d
0x00006df8      eb86           jmp 0x6d80
0x00006dfa      41b808000000   mov r8d, 8
0x00006e00      4531c9         xor r9d, r9d
0x00006e03      0f1f440000     nop dword [rax + rax]
0x00006e08      4889d8         mov rax, rbx
0x00006e0b      48f7e6         mul rsi
0x00006e0e      4889c3         mov rbx, rax
0x00006e11      0f8049010000   jo 0x6f60
0x00006e17      4183e801       sub r8d, 1
0x00006e1b      75eb           jne 0x6e08
0x00006e1d      ebd6           jmp 0x6df5
0x00006e1f      41b804000000   mov r8d, 4
0x00006e25      4531c9         xor r9d, r9d
0x00006e28      4889d8         mov rax, rbx
0x00006e2b      48f7e6         mul rsi
0x00006e2e      4889c3         mov rbx, rax
0x00006e31      0f80fc000000   jo 0x6f33
0x00006e37      4183e801       sub r8d, 1
0x00006e3b      75eb           jne 0x6e28
0x00006e3d      ebb6           jmp 0x6df5
0x00006e3f      4889d8         mov rax, rbx
0x00006e42      48f7e6         mul rsi
0x00006e45      4889c3         mov rbx, rax
0x00006e48      0f8132ffffff   jno 0x6d80
0x00006e4e      bd01000000     mov ebp, 1
0x00006e53      4883cbff       or rbx, 0xffffffffffffffff
0x00006e57      e924ffffff     jmp 0x6d80
0x00006e5c      0f1f4000       nop dword [rax]
0x00006e60      41b805000000   mov r8d, 5
0x00006e66      4531c9         xor r9d, r9d
0x00006e69      4889d8         mov rax, rbx
0x00006e6c      48f7e6         mul rsi
0x00006e6f      4889c3         mov rbx, rax
0x00006e72      0f80f7000000   jo 0x6f6f
0x00006e78      4183e801       sub r8d, 1
0x00006e7c      75eb           jne 0x6e69
0x00006e7e      e972ffffff     jmp 0x6df5
0x00006e83      41b806000000   mov r8d, 6
0x00006e89      4531c9         xor r9d, r9d
0x00006e8c      4889d8         mov rax, rbx
0x00006e8f      48f7e6         mul rsi
0x00006e92      4889c3         mov rbx, rax
0x00006e95      0f8089000000   jo 0x6f24
0x00006e9b      4183e801       sub r8d, 1
0x00006e9f      75eb           jne 0x6e8c
0x00006ea1      e94fffffff     jmp 0x6df5
0x00006ea6      ba00040000     mov edx, 0x400
0x00006eab      4889d0         mov rax, rdx
0x00006eae      48f7e3         mul rbx
0x00006eb1      709b           jo 0x6e4e
0x00006eb3      48c1e30a       shl rbx, 0xa
0x00006eb7      e9c4feffff     jmp 0x6d80
0x00006ebc      4889d8         mov rax, rbx
0x00006ebf      48f7e6         mul rsi
0x00006ec2      0f80c5000000   jo 0x6f8d
0x00006ec8      4531c0         xor r8d, r8d
0x00006ecb      48f7e6         mul rsi
0x00006ece      0f8193feffff   jno 0x6d67
0x00006ed4      41b801000000   mov r8d, 1
0x00006eda      4883c8ff       or rax, 0xffffffffffffffff
0x00006ede      e984feffff     jmp 0x6d67
0x00006ee3      0f1f440000     nop dword [rax + rax]
0x00006ee8      31ff           xor edi, edi
0x00006eea      80790242       cmp byte [rcx + 2], 0x42
0x00006eee      be00040000     mov esi, 0x400
0x00006ef3      400f94c7       sete dil
0x00006ef7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x00006efb      e93afeffff     jmp 0x6d3a
0x00006f00      e85ba7ffff     call sym.imp.__stack_chk_fail
0x00006f05      488d0df41a00.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x8a00 ; "xstrtoumax"
0x00006f0c      488d35cd1900.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x88e0 ; "../coreutils-8.31/lib/xstrtol.c"
0x00006f13      488d3de61900.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x8900 ; "0 <= strtol_base && strtol_base <= 36"
0x00006f1a      ba54000000     mov edx, 0x54                           ; 'T'
0x00006f1f      e8aca7ffff     call sym.imp.__assert_fail
0x00006f24      41b901000000   mov r9d, 1
0x00006f2a      4883cbff       or rbx, 0xffffffffffffffff
0x00006f2e      e968ffffff     jmp 0x6e9b
0x00006f33      41b901000000   mov r9d, 1
0x00006f39      4883cbff       or rbx, 0xffffffffffffffff
0x00006f3d      e9f5feffff     jmp 0x6e37
0x00006f42      41b801000000   mov r8d, 1
0x00006f48      4883cbff       or rbx, 0xffffffffffffffff
0x00006f4c      e922feffff     jmp 0x6d73
0x00006f51      4883c8ff       or rax, 0xffffffffffffffff
0x00006f55      41b801000000   mov r8d, 1
0x00006f5b      e907feffff     jmp 0x6d67
0x00006f60      41b901000000   mov r9d, 1
0x00006f66      4883cbff       or rbx, 0xffffffffffffffff
0x00006f6a      e9a8feffff     jmp 0x6e17
0x00006f6f      41b901000000   mov r9d, 1
0x00006f75      4883cbff       or rbx, 0xffffffffffffffff
0x00006f79      e9fafeffff     jmp 0x6e78
0x00006f7e      41b901000000   mov r9d, 1
0x00006f84      4883cbff       or rbx, 0xffffffffffffffff
0x00006f88      e962feffff     jmp 0x6def
0x00006f8d      41b801000000   mov r8d, 1
0x00006f93      4883c8ff       or rax, 0xffffffffffffffff
0x00006f97      e92fffffff     jmp 0x6ecb
0x00006f9c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00006fa0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00006fa2      55             push rbp
0x00006fa3      53             push rbx
0x00006fa4      4889fb         mov rbx, rdi
0x00006fa7      e8c4a7ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00006fac      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00006fae      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00006fb1      7854           js 0x7007                               ; ../coreutils-8.31/lib/fclose.c:66
0x00006fb3      e8f8a7ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00006fb8      85c0           test eax, eax
0x00006fba      752c           jne 0x6fe8
0x00006fbc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00006fbf      e85c000000     call sym.rpl_fflush
0x00006fc4      85c0           test eax, eax
0x00006fc6      743c           je 0x7004
0x00006fc8      e8e3a5ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00006fcd      448b20         mov r12d, dword [rax]
0x00006fd0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00006fd3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00006fd6      e835a6ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00006fdb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00006fde      7530           jne 0x7010
0x00006fe0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00006fe1      5d             pop rbp
0x00006fe2      415c           pop r12
0x00006fe4      c3             ret
0x00006fe5      0f1f00         nop dword [rax]
0x00006fe8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00006feb      e880a7ffff     call sym.imp.fileno
0x00006ff0      31f6           xor esi, esi
0x00006ff2      ba01000000     mov edx, 1
0x00006ff7      89c7           mov edi, eax
0x00006ff9      e8c2a6ffff     call sym.imp.lseek
0x00006ffe      4883f8ff       cmp rax, 0xffffffffffffffff
0x00007002      75b8           jne 0x6fbc
0x00007004      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00007007      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00007008      5d             pop rbp
0x00007009      415c           pop r12
0x0000700b      e900a6ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00007010      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00007014      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00007019      ebc5           jmp 0x6fe0
0x0000701b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00007020      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00007023      53             push rbx
0x00007024      4889fb         mov rbx, rdi
0x00007027      7411           je 0x703a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00007029      e882a7ffff     call sym.imp.__freading
0x0000702e      85c0           test eax, eax
0x00007030      7408           je 0x703a
0x00007032      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00007038      750e           jne 0x7048
0x0000703a      4889df         mov rdi, rbx
0x0000703d      5b             pop rbx
0x0000703e      e94da7ffff     jmp sym.imp.fflush
0x00007043      0f1f440000     nop dword [rax + rax]
0x00007048      4889df         mov rdi, rbx
0x0000704b      ba01000000     mov edx, 1
0x00007050      31f6           xor esi, esi
0x00007052      e809000000     call sym.rpl_fseeko
0x00007057      4889df         mov rdi, rbx
0x0000705a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000705b      e930a7ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00007060      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00007064      48394710       cmp qword [rdi + 0x10], rax
0x00007068      7406           je 0x7070                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000706a      e9b1a7ffff     jmp sym.imp.fseeko
0x0000706f      90             nop
0x00007070      488b4720       mov rax, qword [rdi + 0x20]
0x00007074      48394728       cmp qword [rdi + 0x28], rax
0x00007078      75f0           jne 0x706a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000707a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000707f      75e9           jne 0x706a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00007081      4154           push r12
0x00007083      55             push rbp
0x00007084      4189d4         mov r12d, edx
0x00007087      53             push rbx
0x00007088      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000708b      4889fb         mov rbx, rdi
0x0000708e      e8dda6ffff     call sym.imp.fileno
0x00007093      4489e2         mov edx, r12d
0x00007096      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00007099      89c7           mov edi, eax
0x0000709b      e820a6ffff     call sym.imp.lseek
0x000070a0      4883f8ff       cmp rax, 0xffffffffffffffff
0x000070a4      740c           je 0x70b2
0x000070a6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x000070a9      488983900000.  mov qword [rbx + 0x90], rax
0x000070b0      31c0           xor eax, eax
0x000070b2      5b             pop rbx
0x000070b3      5d             pop rbp
0x000070b4      415c           pop r12
0x000070b6      c3             ret
0x000070b7      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x000070c0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x000070c2      4154           push r12
0x000070c4      4989f5         mov r13, rsi
0x000070c7      55             push rbp
0x000070c8      53             push rbx
0x000070c9      4889fb         mov rbx, rdi
0x000070cc      4989d4         mov r12, rdx
0x000070cf      4883ec18       sub rsp, 0x18
0x000070d3      64488b042528.  mov rax, qword fs:[0x28]
0x000070dc      4889442408     mov qword [rsp + 8], rax
0x000070e1      31c0           xor eax, eax
0x000070e3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x000070e8      4885ff         test rdi, rdi
0x000070eb      480f44d8       cmove rbx, rax
0x000070ef      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000070f2      e889a5ffff     call sym.imp.mbrtowc
0x000070f7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000070fb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000070fe      7620           jbe 0x7120                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00007100      4d85e4         test r12, r12
0x00007103      741b           je 0x7120
0x00007105      31ff           xor edi, edi
0x00007107      e8c4000000     call sym.hard_locale
0x0000710c      84c0           test al, al
0x0000710e      7510           jne 0x7120
0x00007110      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00007115      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000711a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000711c      0f1f4000       nop dword [rax]
0x00007120      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00007125      644833142528.  xor rdx, qword fs:[0x28]
0x0000712e      4889e8         mov rax, rbp
0x00007131      750b           jne 0x713e
0x00007133      4883c418       add rsp, 0x18
0x00007137      5b             pop rbx
0x00007138      5d             pop rbp
0x00007139      415c           pop r12
0x0000713b      415d           pop r13
0x0000713d      c3             ret
0x0000713e      e81da5ffff     call sym.imp.__stack_chk_fail
0x00007143      662e0f1f8400.  nop word cs:[rax + rax]
0x0000714d      0f1f00         nop dword [rax]
;-- close_stream:
0x00007150      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00007152      55             push rbp
0x00007153      4889fd         mov rbp, rdi
0x00007156      53             push rbx
0x00007157      e884a4ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000715c      8b5d00         mov ebx, dword [rbp]
0x0000715f      4889ef         mov rdi, rbp
0x00007162      4989c4         mov r12, rax
0x00007165      e836feffff     call sym.rpl_fclose
0x0000716a      83e320         and ebx, 0x20                           ; "@"
0x0000716d      85db           test ebx, ebx
0x0000716f      7517           jne 0x7188
0x00007171      85c0           test eax, eax
0x00007173      740a           je 0x717f                               ; stdio.h:-186
0x00007175      4d85e4         test r12, r12                           ; stdio.h:-178
0x00007178      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000717d      7439           je 0x71b8
0x0000717f      5b             pop rbx
0x00007180      5d             pop rbp
0x00007181      415c           pop r12
0x00007183      c3             ret
0x00007184      0f1f4000       nop dword [rax]
0x00007188      85c0           test eax, eax
0x0000718a      751c           jne 0x71a8
0x0000718c      e81fa4ffff     call sym.imp.__errno_location
0x00007191      c70000000000   mov dword [rax], 0
0x00007197      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000719c      5b             pop rbx
0x0000719d      5d             pop rbp
0x0000719e      415c           pop r12
0x000071a0      c3             ret
0x000071a1      0f1f80000000.  nop dword [rax]
0x000071a8      5b             pop rbx
0x000071a9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000071ae      5d             pop rbp                                 ; stdio.h:-186
0x000071af      415c           pop r12
0x000071b1      c3             ret
0x000071b2      660f1f440000   nop word [rax + rax]
0x000071b8      e8f3a3ffff     call sym.imp.__errno_location
0x000071bd      833809         cmp dword [rax], 9
0x000071c0      5b             pop rbx
0x000071c1      5d             pop rbp
0x000071c2      415c           pop r12                                 ; stdio.h:-178
0x000071c4      0f95c0         setne al
0x000071c7      0fb6c0         movzx eax, al
0x000071ca      f7d8           neg eax
0x000071cc      c3             ret
0x000071cd      0f1f00         nop dword [rax]
;-- hard_locale:
0x000071d0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x000071d4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x000071d6      e805a6ffff     call sym.imp.setlocale
0x000071db      4889c2         mov rdx, rax
0x000071de      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x000071e3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x000071e6      741d           je 0x7205
0x000071e8      488d3d1c1800.  lea rdi, [0x00008a0b]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x000071ef      b902000000     mov ecx, 2
0x000071f4      4889d6         mov rsi, rdx
0x000071f7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000071f9      0f97c1         seta cl
0x000071fc      80d900         sbb cl, 0
0x000071ff      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00007201      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00007203      750b           jne 0x7210
0x00007205      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00007209      c3             ret
0x0000720a      660f1f440000   nop word [rax + rax]
0x00007210      488d3df61700.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x8a0d ; "POSIX"
0x00007217      b906000000     mov ecx, 6
0x0000721c      4889d6         mov rsi, rdx
0x0000721f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00007221      0f97c0         seta al
0x00007224      1c00           sbb al, 0
0x00007226      84c0           test al, al
0x00007228      0f95c0         setne al
0x0000722b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000722f      c3             ret
;-- locale_charset:
0x00007230      4883ec08       sub rsp, 8
0x00007234      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00007239      e862a5ffff     call sym.imp.nl_langinfo
0x0000723e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00007241      741d           je 0x7260
0x00007243      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00007246      488d15c61700.  lea rdx, str.ASCII                      ; 0x8a13 ; "ASCII"
0x0000724d      480f44c2       cmove rax, rdx
0x00007251      4883c408       add rsp, 8
0x00007255      c3             ret
0x00007256      662e0f1f8400.  nop word cs:[rax + rax]
0x00007260      488d05ac1700.  lea rax, str.ASCII                      ; 0x8a13 ; "ASCII"
0x00007267      4883c408       add rsp, 8
0x0000726b      c3             ret
0x0000726c      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00007270      4157           push r15
0x00007272      4156           push r14
0x00007274      4989d7         mov r15, rdx
0x00007277      4155           push r13
0x00007279      4154           push r12
0x0000727b      4c8d258e3720.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20aa10
0x00007282      55             push rbp
0x00007283      488d2d8e3720.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20aa18
0x0000728a      53             push rbx
0x0000728b      4189fd         mov r13d, edi
0x0000728e      4989f6         mov r14, rsi
0x00007291      4c29e5         sub rbp, r12
0x00007294      4883ec08       sub rsp, 8
0x00007298      48c1fd03       sar rbp, 3
0x0000729c      e8c7a2ffff     call sym._init
0x000072a1      4885ed         test rbp, rbp
0x000072a4      7420           je 0x72c6
0x000072a6      31db           xor ebx, ebx
0x000072a8      0f1f84000000.  nop dword [rax + rax]
0x000072b0      4c89fa         mov rdx, r15
0x000072b3      4c89f6         mov rsi, r14
0x000072b6      4489ef         mov edi, r13d
0x000072b9      41ff14dc       call qword [r12 + rbx*8]
0x000072bd      4883c301       add rbx, 1
0x000072c1      4839dd         cmp rbp, rbx
0x000072c4      75ea           jne 0x72b0
0x000072c6      4883c408       add rsp, 8
0x000072ca      5b             pop rbx
0x000072cb      5d             pop rbp
0x000072cc      415c           pop r12
0x000072ce      415d           pop r13
0x000072d0      415e           pop r14
0x000072d2      415f           pop r15
0x000072d4      c3             ret
0x000072d5      90             nop
0x000072d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x000072e0      f3c3           ret
0x000072e2      662e0f1f8400.  nop word cs:[rax + rax]
0x000072ec      0f1f4000       nop dword [rax]
;-- atexit:
0x000072f0      488b15113d20.  mov rdx, qword [obj.__dso_handle]       ; [0x20b008:8]=0x20b008 obj.__dso_handle
0x000072f7      31f6           xor esi, esi
0x000072f9      e942a5ffff     jmp sym.imp.__cxa_atexit
0x000072fe      0000           add byte [rax], al
